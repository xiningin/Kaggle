{"cell_type":{"fd1e241b":"code","8754ec97":"code","12555a09":"code","39c46571":"code","2314721a":"code","a30c147c":"code","926eded4":"code","b1edf524":"code","27f94ae8":"code","0e6efa92":"code","cb45d9a7":"code","3217d4c7":"code","f8fd5712":"code","673418f3":"code","aea0cc52":"code","9b46b093":"code","6303d9d5":"code","4a11acf4":"code","d55328f8":"code","f88b57be":"code","d0e032d9":"code","d97b99dd":"code","56e2b606":"code","e91f8421":"code","eb24299e":"code","63263161":"code","bff81103":"code","5e8b3ef8":"code","c136752a":"code","5c944cf0":"code","60778266":"code","901e7adf":"code","ad269b47":"code","866b241a":"code","a7658567":"code","e8a81b33":"code","1a96344d":"code","41da2399":"code","e89262b4":"code","771807b3":"code","c3c8c253":"code","ca879e16":"code","542f1f19":"code","66b94b93":"code","f336725a":"code","b537154f":"code","089263e9":"code","afa6b0c2":"code","9d9bb2b5":"code","c4b80bfd":"code","7d1858d0":"code","f15fe712":"code","7c5d196b":"code","3da50db9":"code","bbf389b0":"code","56491090":"code","72590d0f":"code","32480939":"markdown","ee275e6d":"markdown","f226e95f":"markdown","f07f7245":"markdown","ebc5f64f":"markdown","64cf8f92":"markdown","eb11353a":"markdown","6e0ebc52":"markdown"},"source":{"fd1e241b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8754ec97":"train = pd.read_csv(\"..\/input\/learn-together\/train.csv.zip\")\ntest = pd.read_csv(\"..\/input\/learn-together\/test.csv.zip\")","12555a09":"print(train.shape)\ndisplay(train.head(1))\n\nprint(test.shape)\ndisplay(test.head(1))","39c46571":"train.head(5)","2314721a":"train.describe()","a30c147c":"train.Wilderness_Area1.describe()","926eded4":"numeric_features = train.select_dtypes(include=[np.number])\nnumeric_features.dtypes","b1edf524":"corr = numeric_features.corr()\n\nprint (corr['Wilderness_Area1'].sort_values(ascending=False)[1:11], '\\n')\nprint (corr['Wilderness_Area1'].sort_values(ascending=False)[-10:])","27f94ae8":"train.Soil_Type29.unique()","0e6efa92":"def visualize_results(self):\n        # Visualize logistic curve using seaborn\n        sns.set(style=\"darkgrid\")\n        sns.regplot(x=\"pageviews_cumsum\",\n                    y=\"is_conversion\",\n                    data=self.df,\n                    logistic=True,\n                    n_boot=500,\n                    y_jitter=.01,\n                    scatter_kws={\"s\": 60})\n        sns.set(font_scale=1.3)\n        sns.plt.title('Logistic Regression Curve')\n        sns.plt.ylabel('Conversion probability')\n        sns.plt.xlabel('Cumulative sum of pageviews')\n        sns.plt.subplots_adjust(right=0.93, top=0.90, left=0.10, bottom=0.10)\n        sns.plt.show() ","cb45d9a7":"import seaborn as sns","3217d4c7":"_ = sns.regplot(train['Horizontal_Distance_To_Fire_Points'], train['Wilderness_Area1'])","f8fd5712":"train=train.drop(train[(train['Horizontal_Distance_To_Fire_Points']>4000) & (train['Wilderness_Area1']<300000)].index)\n_ = sns.regplot(train['Horizontal_Distance_To_Fire_Points'], train['Wilderness_Area1'])","673418f3":"_ = sns.regplot(train['Soil_Type4'], train['Wilderness_Area1'])","aea0cc52":"train = train[train['Soil_Type4'] < 1200]\n_ = sns.regplot(train['Soil_Type4'], train['Wilderness_Area1'])","9b46b093":"train['log_Wilderness_Area1']=np.log(train['Wilderness_Area1']+1)\nWilderness_Area1s=train[['Wilderness_Area1','log_Wilderness_Area1']]\n\nWilderness_Area1s.head(5)","6303d9d5":"_=sns.regplot(train['Soil_Type37'],Wilderness_Area1s['Wilderness_Area1'])","4a11acf4":"_=sns.regplot(train['Soil_Type1'],Wilderness_Area1s['Wilderness_Area1'])","d55328f8":"_=sns.regplot(train['Soil_Type2'],Wilderness_Area1s['Wilderness_Area1'])","f88b57be":"_=sns.regplot(train['Soil_Type3'],Wilderness_Area1s['Wilderness_Area1'])","d0e032d9":"_=sns.regplot(train['Soil_Type4'],Wilderness_Area1s['Wilderness_Area1'])","d97b99dd":"_=sns.regplot(train['Soil_Type5'],Wilderness_Area1s['Wilderness_Area1'])","56e2b606":"_=sns.regplot(train['Soil_Type6'],Wilderness_Area1s['Wilderness_Area1'])","e91f8421":"_=sns.regplot(train['Soil_Type7'],Wilderness_Area1s['Wilderness_Area1'])","eb24299e":"_=sns.regplot(train['Soil_Type8'],Wilderness_Area1s['Wilderness_Area1'])","63263161":"_=sns.regplot(train['Soil_Type9'],Wilderness_Area1s['Wilderness_Area1'])","bff81103":"_=sns.regplot(train['Soil_Type10'],Wilderness_Area1s['Wilderness_Area1'])","5e8b3ef8":"_=sns.regplot(train['Soil_Type11'],Wilderness_Area1s['Wilderness_Area1'])","c136752a":"_=sns.regplot(train['Soil_Type12'],Wilderness_Area1s['Wilderness_Area1'])","5c944cf0":"_=sns.regplot(train['Soil_Type13'],Wilderness_Area1s['Wilderness_Area1'])","60778266":"_=sns.regplot(train['Soil_Type14'],Wilderness_Area1s['Wilderness_Area1'])","901e7adf":"_=sns.regplot(train['Soil_Type15'],Wilderness_Area1s['Wilderness_Area1'])","ad269b47":"_=sns.regplot(train['Soil_Type16'],Wilderness_Area1s['Wilderness_Area1'])","866b241a":"_=sns.regplot(train['Soil_Type17'],Wilderness_Area1s['Wilderness_Area1'])","a7658567":"_=sns.regplot(train['Soil_Type18'],Wilderness_Area1s['Wilderness_Area1'])","e8a81b33":"_=sns.regplot(train['Soil_Type19'],Wilderness_Area1s['Wilderness_Area1'])","1a96344d":"_=sns.regplot(train['Soil_Type20'],Wilderness_Area1s['Wilderness_Area1'])","41da2399":"_=sns.regplot(train['Soil_Type21'],Wilderness_Area1s['Wilderness_Area1'])","e89262b4":"_=sns.regplot(train['Soil_Type22'],Wilderness_Area1s['Wilderness_Area1'])","771807b3":"_=sns.regplot(train['Soil_Type23'],Wilderness_Area1s['Wilderness_Area1'])","c3c8c253":"_=sns.regplot(train['Soil_Type24'],Wilderness_Area1s['Wilderness_Area1'])","ca879e16":"_=sns.regplot(train['Soil_Type25'],Wilderness_Area1s['Wilderness_Area1'])","542f1f19":"_=sns.regplot(train['Soil_Type26'],Wilderness_Area1s['Wilderness_Area1'])","66b94b93":"_=sns.regplot(train['Soil_Type27'],Wilderness_Area1s['Wilderness_Area1'])","f336725a":"_=sns.regplot(train['Soil_Type28'],Wilderness_Area1s['Wilderness_Area1'])","b537154f":"_=sns.regplot(train['Soil_Type29'],Wilderness_Area1s['Wilderness_Area1'])","089263e9":"_=sns.regplot(train['Soil_Type30'],Wilderness_Area1s['Wilderness_Area1'])","afa6b0c2":"_=sns.regplot(train['Soil_Type31'],Wilderness_Area1s['Wilderness_Area1'])","9d9bb2b5":"_=sns.regplot(train['Soil_Type32'],Wilderness_Area1s['Wilderness_Area1'])","c4b80bfd":"_=sns.regplot(train['Soil_Type33'],Wilderness_Area1s['Wilderness_Area1'])","7d1858d0":"_=sns.regplot(train['Soil_Type34'],Wilderness_Area1s['Wilderness_Area1'])","f15fe712":"_=sns.regplot(train['Soil_Type35'],Wilderness_Area1s['Wilderness_Area1'])","7c5d196b":"_=sns.regplot(train['Soil_Type36'],Wilderness_Area1s['Wilderness_Area1'])","3da50db9":"_=sns.regplot(train['Soil_Type38'],Wilderness_Area1s['Wilderness_Area1'])","bbf389b0":"_=sns.regplot(train['Soil_Type39'],Wilderness_Area1s['Wilderness_Area1'])","56491090":"_=sns.regplot(train['Soil_Type40'],Wilderness_Area1s['Wilderness_Area1'])","72590d0f":"print(\"Hey Seaborn\")\nprint(\"Here's looking at You, kid.\")","32480939":"As a beginner I still don't know how to code and some lines I simply don't understand. So let me show you how far I'm able to go. However,I did my best to improve. Thanks to my LearnTogether2019 team. I know I'm the weakest link and I don't want to hold you back. You're all a very skilled and talented group. These days, we had some issues with files but at the end no one will remember. Just the opportunity to LearnTogether.","ee275e6d":"Visualizations with Seaborn rules! We can even plot trees images with Seaborn. Unfortunately I'm not in this level. Go Seaborn! Go!","f226e95f":"I didn't understand what I did above. Perhaps Zorro could.","f07f7245":"I think that's my best shot with Seaborn. Soil_Type37. I'm sure it's not the way that it should be. But it's the way I could. And to avoid receiving errors from the programm that I simply can't fix.","ebc5f64f":"I tried all the remaining 39 soil_types. So let see how Seaborn behaves even in non-skilled hands.","64cf8f92":"For now, that's all I can perform by myself. It takes \"only\" 1h:41m to get here.","eb11353a":"That's Humphrey Bogart's fairwell line in Casablanca movie.","6e0ebc52":"* K-Notebook runner: Mar\u00edlia Prata   @mpwolke\n* Executive Producer: Mar\u00edlia Prata  @mpwolke"}}