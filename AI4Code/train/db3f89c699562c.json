{"cell_type":{"6a4cb2d2":"code","ff1ef638":"code","654034af":"code","1bc05a30":"code","6a8c1e6a":"code","8c1409e9":"code","4b49b3d3":"code","8abd0533":"code","6a3c7351":"code","2b37ab8c":"code","623afa43":"code","b0ed4501":"code","51bab2e3":"code","148f0cfe":"code","c74e03ec":"code","93ff3fea":"code","ec769b6f":"code","da2fa313":"code","166332e6":"code","04ec8b97":"code","ab07fad7":"code","50ac383f":"code","4e6aa6e5":"code","0cc3108c":"code","6d21fa37":"code","3b825999":"code","6b5bf22a":"code","9a1240d1":"code","e54c2f27":"code","fefe56cb":"code","c9f4a81d":"code","5050efe5":"code","9cb70b35":"code","42c188d6":"code","39a7efc0":"code","bb77915d":"code","4f967c95":"markdown","88fda25b":"markdown"},"source":{"6a4cb2d2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n #   for filename in filenames:\n  #      print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ff1ef638":"import numpy as np # linear algebra\nimport pandas as pd\nimport matplotlib.pyplot as plt","654034af":"train = pd.read_csv(\"\/kaggle\/input\/petfinder-pawpularity-score\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/petfinder-pawpularity-score\/test.csv\")","1bc05a30":"train.head()","6a8c1e6a":"train.info()","8c1409e9":"X = train.drop(['Pawpularity','Id'], axis=1)","4b49b3d3":"y = pd.DataFrame(data = train[\"Pawpularity\"])","8abd0533":"y","6a3c7351":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\n","2b37ab8c":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)","623afa43":"linr = LinearRegression()","b0ed4501":"linr.fit(X_train,y_train)","51bab2e3":"y_pred = linr.predict(X_test)","148f0cfe":"def rmse(prediction, true):\n    return (np.sqrt(np.mean(np.square(prediction - true))))\n\nfinal = rmse(prediction=y_pred, true=y_test)\n\nprint(\"RMSE -\",final)    ","c74e03ec":"test = test.drop(['Id'], axis=1)\n\ntest_pred = linr.predict(test)\n\ntest = pd.read_csv(\"\/kaggle\/input\/petfinder-pawpularity-score\/test.csv\")\n\ntest_id = test['Id'].to_numpy()\ntest_pred = test_pred.flatten()\ndic = {\"Id\": test_id, \"Pawpularity\" : test_pred}\nsub = pd.DataFrame.from_dict(dic)\n#sub.to_csv(\"submission.csv\",index=False)","93ff3fea":"test = pd.read_csv(\"\/kaggle\/input\/petfinder-pawpularity-score\/test.csv\")","ec769b6f":"test_id = test['Id'].to_numpy()","da2fa313":"test_id[0]","166332e6":"test_pred = test_pred.flatten()","04ec8b97":"test_pred","ab07fad7":"dic = {\"Id\": test_id, \"Pawpularity\" : test_pred}","50ac383f":"dic","4e6aa6e5":"sub = pd.DataFrame.from_dict(dic)","0cc3108c":"sub.to_csv(\"submission.csv\",index=False)","6d21fa37":"import tensorflow as tf","3b825999":"input_size = 12\noutput_size = 1\n\nhidden_layer_size = 50\n\nmodel = tf.keras.Sequential([\n    \n    tf.keras.layers.Flatten(input_shape=(12, 1)), # input layer\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(output_size) # output layer\n])\n","6b5bf22a":"model.summary()","9a1240d1":"opt = tf.keras.optimizers.Adam(learning_rate=0.0001)\nmodel.compile(optimizer=opt, loss='mean_squared_error', metrics=[tf.keras.metrics.RootMeanSquaredError()])","e54c2f27":"model.summary()","fefe56cb":"NUM_EPOCHS = 2000","c9f4a81d":"#model.fit(X_train, y_train, epochs=NUM_EPOCHS, verbose =1)","5050efe5":"%%time\nhistory = model.fit(\n    X_train, y_train, \n    epochs=NUM_EPOCHS,\n    # suppress logging\n    verbose=1)","9cb70b35":"def plot_loss(history):\n  plt.plot(history.history['loss'], label='loss')\n  plt.ylim([400, 450])\n  plt.xlabel('Epoch')\n  plt.ylabel('Error')\n  plt.legend()\n  plt.grid(True)\n","42c188d6":"plot_loss(history)\n","39a7efc0":"test","bb77915d":"test = test.drop(['Id'], axis=1)\n\ntest_pred1 = model.predict(test)\n\ntest = pd.read_csv(\"\/kaggle\/input\/petfinder-pawpularity-score\/test.csv\")\n\ntest_id = test['Id'].to_numpy()\ntest_pred1 = test_pred.flatten()\ndic1 = {\"Id\": test_id, \"Pawpularity\" : test_pred}\nsub1 = pd.DataFrame.from_dict(dic)\nsub1.to_csv(\"submission.csv\",index=False)","4f967c95":"# Linear Regression","88fda25b":"# TensorFlow"}}