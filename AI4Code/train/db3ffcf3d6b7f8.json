{"cell_type":{"d80858c9":"code","68e7b18f":"code","0b310409":"code","02454d90":"code","3fc51967":"code","5007fe49":"code","52e7e452":"code","097567b5":"code","62e0eac8":"code","179b1470":"code","4e241184":"code","74def07a":"code","626d3ecf":"code","dc503b31":"code","1d183385":"code","f834495c":"code","281299dc":"code","346b6528":"code","135f4cf0":"code","e296ed5a":"markdown","f05632db":"markdown","67eb3db6":"markdown"},"source":{"d80858c9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","68e7b18f":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","0b310409":"raw_data = pd.read_csv('..\/input\/okcupid-profiles\/okcupid_profiles.csv')","02454d90":"okcupid_profiles = raw_data.iloc[:,0:21] # Ignore all the \"essay\" text columns for now","3fc51967":"# print(okcupid_profiles.shape)\ntotal_nrows = okcupid_profiles.shape[0]\ntotal_ncols = okcupid_profiles.shape[1]\nprint('Total rows: ', total_nrows, ' Total columns: ', total_ncols)\nprint(okcupid_profiles.info())\n# print(okcupid_profiles.describe())","5007fe49":"total_count = okcupid_profiles.isna().count()\ncount_na = okcupid_profiles.isna().sum().sort_values(ascending = False)\npct_na =(okcupid_profiles.isna().sum()\/total_count).sort_values(ascending = False)\npd.options.display.float_format = '{:.1%}'.format\nmissing_data = pd.concat([count_na, pct_na], axis=1, keys=['Count', 'Percent'])\n# Only show columns with more than 5% missing data\nmissing_data[missing_data['Percent']>=0.05].head(20)","52e7e452":"plt.figure(figsize=(12, 5))\nokcupid_profiles.isna().sum().plot(kind=\"bar\")\nplt.xticks(rotation=50)","097567b5":"# okcupid_profiles.groupby('sex').count()\nprint(okcupid_profiles['sex'].value_counts())\nprint(okcupid_profiles['ethnicity'].value_counts().sort_values(ascending=False)[:5])","62e0eac8":"# Check unique values\nprint('body_type:')\nprint(list(set(okcupid_profiles['body_type'])))\nprint('diet:')\nprint(list(set(okcupid_profiles['diet'])))\nprint('Religion:')\nprint(list(set(okcupid_profiles['religion'])))","179b1470":"# Check unique values\nprint('body_type:')\nlist(set(okcupid_profiles['body_type']))","4e241184":"# sns.countplot(y = 'age', data = my_data)\nplt.figure(figsize=(15, 7))\nsns.catplot(x='age', data = okcupid_profiles, kind='count', palette='pastel', hue='sex', \n            height=5, # make the plot 5 units high\n            aspect=2)\nplt.xticks(rotation = 25)\nplt.title('Age distribution')\nplt.show()","74def07a":"profile_age = okcupid_profiles[okcupid_profiles['age']<65]\nax = sns.violinplot(x='sex', y='age',data=profile_age,\n                    palette=\"muted\", split=True, \n                    scale=\"count\", inner=\"quartile\")","626d3ecf":"# Define a function to show pentages on catplot\ndef show_percetage(plot, feature):\n    total = len(feature)\n    for p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x()+p.get_width()\/2-0.1\n        y = p.get_y()+p.get_height()\n        ax.annotate(percentage, (x, y), size=10)","dc503b31":"plt.figure(figsize=(9, 5))\nax = sns.countplot(x='orientation', data=okcupid_profiles, \n                   hue='sex', \n                   palette='PRGn',\n                   order=okcupid_profiles['orientation'].value_counts().iloc[:10].index) \ntotal = float(len(okcupid_profiles))\nshow_percetage(ax, okcupid_profiles)\nplt.show()","1d183385":"plt.figure(figsize=(9, 5))\nax = sns.countplot(x='body_type', data=okcupid_profiles, \n                   hue='sex', \n                   palette='rocket',\n                   order=okcupid_profiles['body_type'].value_counts().iloc[:10].index)\nax.set_title(\"Body type by gender\")\nax.set(xlabel='Count', ylabel='Body Type') \nshow_percetage(ax, okcupid_profiles)\nplt.show()","f834495c":"plt.figure(figsize=(9, 5))\nax = sns.countplot(x='diet', data=okcupid_profiles, \n                   hue='sex', palette='Paired',\n                   order = okcupid_profiles['diet'].value_counts().iloc[:10].index) \nplt.xticks(rotation = 30)\nax.set_title(\"Diet by gender\")\nshow_percetage(ax, okcupid_profiles)","281299dc":"plt.figure(figsize=(9, 5))\nsns.countplot(y='job', data=okcupid_profiles, \n              hue='sex', palette='Reds',\n              order = okcupid_profiles['job'].value_counts().iloc[:10].index)\nplt.show()","346b6528":"# Remove invalid data\nplt.figure(figsize=(9, 5))\nokcupid_profiles_income = okcupid_profiles[okcupid_profiles.income != -1]\nsns.countplot(y='income', data=okcupid_profiles_income, hue='sex', palette='Set1')\nsns.despine() # Removes the spines from the right and upper portion of the plot\nplt.show()","135f4cf0":"plt.figure(figsize=(9, 5))\nsns.countplot(y = 'pets', data=okcupid_profiles, \n              hue='sex', palette='PuRd',\n              order=okcupid_profiles['pets'].value_counts().iloc[:].index)\nplt.show()","e296ed5a":"### Basic data checking","f05632db":"### Take a look at the missing data stats","67eb3db6":"### Data visualization by groups"}}