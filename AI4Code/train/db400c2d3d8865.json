{"cell_type":{"b5234820":"code","9ef60cb6":"code","0ebfd8d0":"code","6e4ba154":"code","cd6eec23":"code","b21c326e":"code","c720aaa7":"code","e3878fcd":"code","6dda7ee1":"code","c618fb61":"code","079c6292":"code","8dbf1ef5":"code","c25babf3":"code","94e5170f":"code","5c341278":"code","8f263f37":"code","b1c7fb71":"code","d6e52066":"code","89a891e5":"code","a0321773":"code","b97d2b7b":"code","54e42068":"code","926caa0c":"code","5bf57912":"code","f7804c74":"code","97975a3a":"code","dc8b3803":"code","b5937589":"code","277d7824":"code","11005757":"markdown","51c428f0":"markdown","2c660a5d":"markdown","3c414192":"markdown","1dd5684d":"markdown","fb910ec8":"markdown","1b5d3032":"markdown","6d0138fc":"markdown","2cae5ad7":"markdown","bb0ee16a":"markdown"},"source":{"b5234820":"#!pip install pycountry_convert \n#!pip install folium\n#!pip install calmap","9ef60cb6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib import ticker \n# import pycountry_convert as pc\nimport folium\nimport branca\nfrom datetime import datetime, timedelta,date\nfrom scipy.interpolate import make_interp_spline, BSpline\nimport plotly.express as px\nimport json, requests\n#import calmap\nimport seaborn as sns\n\nfrom keras.layers import Input, Dense, Activation, LeakyReLU\nfrom keras import models\nfrom keras.optimizers import RMSprop, Adam\nplt.style.use('fivethirtyeight')\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline","0ebfd8d0":"latest_date = datetime.today()- timedelta(days=2)\nlatest_date = latest_date.strftime('%m\/%d\/%y')[1:]\n\ndf_cases = pd.read_csv('https:\/\/usafactsstatic.blob.core.windows.net\/public\/data\/covid-19\/covid_confirmed_usafacts.csv')[['countyFIPS', 'County Name', 'State', latest_date]]\ndf_cases = df_cases.rename(columns={'countyFIPS': 'county_fips',\n                                                  latest_date: 'confirmed'}).set_index('county_fips')\n\ndf_deaths = pd.read_csv('https:\/\/usafactsstatic.blob.core.windows.net\/public\/data\/covid-19\/covid_deaths_usafacts.csv')[['countyFIPS', latest_date]]\ndf_deaths = df_deaths.rename(columns={'countyFIPS': 'county_fips',\n                                                  latest_date: 'deaths'}).set_index('county_fips')\n\n\ndf_pop = pd.read_csv('https:\/\/usafactsstatic.blob.core.windows.net\/public\/data\/covid-19\/covid_county_population_usafacts.csv')[['countyFIPS', 'population']]\ndf_pop = df_pop.rename(columns={'countyFIPS': 'county_fips'}).set_index('county_fips')\n\ndf = df_cases.join(df_deaths)\ndf = df.join(df_pop)\n\ndf = df[df.index > 999]\ndf = df[df.population>0]\n\ndel df_cases, df_deaths, df_pop\n\ndf['mortality'] = df['deaths']\/ df['confirmed']\ndf['mortality'] = df['mortality'].fillna(0)\n\ndf['deaths_per_million'] = df['deaths'] * 1000000\/ df['population']\ndf['cases_per_million'] = df['confirmed'] * 1000000\/ df['population']\n\ndf['likely_infected_high'] = np.round(df['confirmed'] * 80\/ df['population'], 2)\ndf['likely_infected_high'] = np.clip(df['likely_infected_high'], 0, 1)\ndf['likely_infected_low'] = np.round(df['confirmed'] * 28\/ df['population'], 2)\ndf['likely_infected_low'] = np.clip(df['likely_infected_low'], 0, 1)\n\ndf['county_state'] = df['County Name'] + ', ' + df['State']\nprint('Number of counties: ' + str(df.index.nunique()))","6e4ba154":"df_county_stats = pd.read_csv('\/kaggle\/input\/uncover\/UNCOVER\/county_health_rankings\/county_health_rankings\/us-county-health-rankings-2020.csv')[['fips',\n                                                                                            'segregation_index',\n                                                                                            'percent_black',\n                                                                                            'median_household_income',\n                                                                                            'percent_adults_with_obesity',\n                                                                                            'percent_smokers',\n                                                                                            'percent_adults_with_diabetes',                                           \n                                                                                            'percent_with_access_to_exercise_opportunities',\n                                                                                            'percent_some_college',\n                                                                                            'percent_unemployed',\n                                                                                            'percent_children_in_poverty',\n                                                                                            'percent_female',\n                                                                                            'percent_rural',\n                                                                                            'percent_non_hispanic_white',\n                                                                                            'food_environment_index',\n                                                                                            'percent_food_insecure',\n                                                                                            'income_ratio',\n                                                                                            '80th_percentile_income',\n                                                                                            'percent_excessive_drinking',\n                                                                                            'average_number_of_physically_unhealthy_days',\n                                                                                            'percent_uninsured',\n                                                                                            'high_school_graduation_rate',\n                                                                                            'percent_single_parent_households',\n                                                                                            'social_association_rate',\n                                                                                            'infant_mortality_rate',\n                                                                                            'age_adjusted_death_rate',                                             \n                                                                                             ]]\ndf_county_stats = df_county_stats.rename(columns={'fips': 'county_fips',\n                                                  'segregation_index': 'segregation_level',\n                                                  }).set_index('county_fips')\n\ndf = df.join(df_county_stats)\n\ndf_county_stats = pd.read_csv('\/kaggle\/input\/county-ranking-data\/county_ranking.csv')[['fipscode',\n                                                                                            'v052_rawvalue',\n                                                                                            'v053_rawvalue',\n                                                                                            'v044_rawvalue',\n                                                                                            'v147_rawvalue',\n                                                                                            'v002_cilow',\n                                                                                            'v136_other_data_2']]\n\ndf_county_stats = df_county_stats.rename(columns={'fipscode': 'county_fips',\n                                                  'v052_rawvalue': 'percent_below_18',\n                                                  'v053_rawvalue': 'percent_above_65',\n                                                  'v044_rawvalue': 'income_inequality',\n                                                  'v147_rawvalue': 'life_expectancy',\n                                                  'v002_cilow': 'poor_fair_health',\n                                                  'v136_other_data_2': 'over_crowding'\n                                                  }).set_index('county_fips')\n\n\ndf = df.join(df_county_stats)\ndf = df.reset_index()\ndf['county_fips'] = df['county_fips'].astype(str).str.rjust(5,'0')\n#df.head()","cd6eec23":"#gender\nplt.style.use('dark_background')\nplt.figure(figsize=(25,8))\nval = [500, 2000, 8000]\ncolors = [\"magenta\",\"yellow\",\"cyan\"]\ncol_name = 'percent_female'\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]),fontsize=20)\n    plt.xlabel(col_name)\n    plt.ylabel('mortality', fontsize=20)\n    plt.grid(False)\n    if i%3 !=0:\n            plt.ylabel(' ')","b21c326e":"#rural\ncol_name = 'percent_rural'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]), fontsize=20)\n    plt.xlabel(col_name)\n    plt.ylabel('mortality', fontsize=20)\n    plt.grid(False)\n    if i%3 !=0:\n            plt.ylabel(' ')","c720aaa7":"#age above 65\ncol_name = 'percent_above_65'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]), fontsize=20)\n    plt.xlabel(col_name)\n    plt.ylabel('mortality', fontsize=20)\n    plt.grid(False)\n    if i%3 !=0:\n            plt.ylabel(' ')","e3878fcd":"#race\nplt.figure(figsize=(20,4))\ncol_name = 'percent_non_hispanic_white'\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.ylabel('mortality', fontsize=20)\n    plt.grid(False)\n    if i%3 !=0:\n            plt.ylabel(' ')","6dda7ee1":"col_name = 'percent_single_parent_households'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.ylabel('mortality', fontsize=20)\n    plt.grid(False)\n    if i%3 !=0:\n            plt.ylabel(' ')","c618fb61":"#income\ncol_name = 'income_ratio'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.ylabel('mortality', fontsize=20)\n    plt.grid(False)\n    if i%3 !=0:\n            plt.ylabel(' ')","079c6292":"#unemployed\ncol_name = 'percent_unemployed'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.grid(False)\n    plt.ylabel('mortality', fontsize=20)\n    if i%3 !=0:\n            plt.ylabel(' ')","8dbf1ef5":"#uninsured\ncol_name = 'percent_uninsured'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.grid(False)\n    plt.ylabel('mortality', fontsize=20)\n    if i%3 !=0:\n            plt.ylabel(' ')","c25babf3":"#segregation\ncol_name = 'segregation_level'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.grid(False)\n    plt.ylabel('mortality', fontsize=20)\n    if i%3 !=0:\n            plt.ylabel(' ')","94e5170f":"#food-environment\ncol_name = 'food_environment_index'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.grid(False)\n    plt.ylabel('mortality', fontsize=20)\n    if i%3 !=0:\n            plt.ylabel(' ')","5c341278":"#food-insecure\ncol_name = 'percent_food_insecure'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.grid(False)\n    plt.ylabel('mortality', fontsize=20)\n    if i%3 !=0:\n            plt.ylabel(' ')","8f263f37":"#smokers\ncol_name = 'percent_smokers'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.grid(False)\n    plt.ylabel('mortality', fontsize=20)\n    if i%3 !=0:\n            plt.ylabel(' ')","b1c7fb71":"#alcohol\ncol_name = 'percent_excessive_drinking'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.grid(False)\n    plt.ylabel('mortality', fontsize=20)\n    if i%3 !=0:\n            plt.ylabel(' ')","d6e52066":"#diabetes\ncol_name = 'percent_adults_with_diabetes'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.grid(False)\n    plt.ylabel('mortality', fontsize=20)\n    if i%3 !=0:\n            plt.ylabel(' ')","89a891e5":"#life expectancy\ncol_name = 'life_expectancy'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.grid(False)\n    plt.ylabel('mortality', fontsize=20)\n    if i%3 !=0:\n            plt.ylabel(' ')","a0321773":"#imr\ncol_name = 'infant_mortality_rate'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.grid(False)\n    plt.ylabel('mortality', fontsize=20)\n    if i%3 !=0:\n            plt.ylabel(' ')","b97d2b7b":"#soc association\ncol_name = 'social_association_rate'\nplt.figure(figsize=(25,8))\n\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]][col_name], df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel(col_name)\n    plt.grid(False)\n    plt.ylabel('mortality', fontsize=20)\n    if i%3 !=0:\n            plt.ylabel(' ')","54e42068":"df_confirmed = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv')\ndf_deaths = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv')\n\n# Depricated\n# df_recovered = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_19-covid-Recovered.csv')\ndf_covid19 = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/web-data\/data\/cases_country.csv\")\ndf_table = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/web-data\/data\/cases_time.csv\",parse_dates=['Last_Update'])","926caa0c":"date_usa = datetime.strptime(df_confirmed.columns[-1],'%m\/%d\/%y').strftime(\"%m-%d-%Y\")\ndf_temp = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_daily_reports\/\"+date_usa+\".csv\")\ndf_usa = df_temp.loc[df_temp[\"Country_Region\"]== \"US\"]\ndf_usa = df_usa.rename(columns={\"Admin2\":\"County\"})","5bf57912":"f = plt.figure(figsize=(15,10))\nf.add_subplot(111)\n\nplt.axes(axisbelow=True)\nplt.barh(df_usa.groupby([\"Province_State\"]).sum().sort_values('Confirmed')[\"Confirmed\"].index[-10:],df_usa.groupby([\"Province_State\"]).sum().sort_values('Confirmed')[\"Confirmed\"].values[-10:],color=\"cyan\")\nplt.tick_params(size=5,labelsize = 13)\nplt.xlabel(\"Confirmed Cases\",fontsize=18)\nplt.title(\"Top 10 States: USA (Confirmed Cases)\",fontsize=20)\nplt.grid(False)\nplt.savefig('Top 10 States_USA (Confirmed Cases).png')","f7804c74":"f = plt.figure(figsize=(15,10))\nf.add_subplot(111)\n\nplt.axes(axisbelow=True)\nplt.barh(df_usa.groupby([\"Province_State\"]).sum().sort_values('Deaths')[\"Deaths\"].index[-10:],df_usa.groupby([\"Province_State\"]).sum().sort_values('Deaths')[\"Deaths\"].values[-10:],color=\"cyan\")\nplt.tick_params(size=5,labelsize = 13)\nplt.xlabel(\"Deaths\",fontsize=18)\nplt.title(\"Top 10 States: USA (Deaths)\",fontsize=20)\nplt.grid(False)\nplt.savefig('Top 10 States_USA (COVID Deaths).png')","97975a3a":"f = plt.figure(figsize=(15,10))\nf.add_subplot(111)\n\nplt.axes(axisbelow=True)\nplt.barh(df_usa.groupby([\"County\"]).sum().sort_values('Deaths')[\"Deaths\"].index[-10:],df_usa.groupby([\"County\"]).sum().sort_values('Deaths')[\"Deaths\"].values[-10:],color=\"cyan\")\nplt.tick_params(size=5,labelsize = 13)\nplt.xlabel(\"Deaths\",fontsize=18)\nplt.title(\"Top 10 County: USA (Deaths)\",fontsize=20)\nplt.grid(False)\nplt.savefig('Top 10 County_USA (COVID Deaths).png')","dc8b3803":"f = plt.figure(figsize=(15,10))\nf.add_subplot(111)\n\nplt.axes(axisbelow=True)\nplt.barh(df_usa.groupby([\"County\"]).sum().sort_values('Confirmed')[\"Confirmed\"].index[-10:],df_usa.groupby([\"County\"]).sum().sort_values('Confirmed')[\"Confirmed\"].values[-10:],color=\"cyan\")\nplt.tick_params(size=5,labelsize = 13)\nplt.xlabel(\"Confirmed Cases\",fontsize=18)\nplt.title(\"Top 10 Counties: USA (Confirmed Cases)\",fontsize=20)\nplt.grid(False)\nplt.savefig('Top 10 Counties_USA (Confirmed Cases).png')","b5937589":"df_usa = df_usa.replace(np.nan, 0, regex=True)\nusa = folium.Map(location=[37, -102], zoom_start=4,max_zoom=9,min_zoom=4, zoom_control=False, scrollWheelZoom= False, dragging=False)\nfor i in np.int32(np.asarray(df_usa[df_usa['Confirmed'] > 0].index)):\n    folium.Circle(\n        location=[df_usa.loc[i]['Lat'], df_usa.loc[i]['Long_']],\n        tooltip = \"<h5 style='text-align:center;font-weight: bold'>\"+df_usa.loc[i]['Province_State']+\"<\/h5>\"+\n                    \"<div style='text-align:center;'>\"+str(np.nan_to_num(df_usa.loc[i]['County']))+\"<\/div>\"+\n                    \"<hr style='margin:10px;'>\"+\n                    \"<ul style='color: #444;list-style-type:circle;align-item:left;padding-left:20px;padding-right:20px'>\"+\n        \"<li>Confirmed: \"+str(df_usa.loc[i]['Confirmed'])+\"<\/li>\"+\n        \"<li>Active:   \"+str(df_usa.loc[i]['Active'])+\"<\/li>\"+\n        \"<li>Recovered:   \"+str(df_usa.loc[i]['Recovered'])+\"<\/li>\"+       \n        \"<li>Deaths:   \"+str(df_usa.loc[i]['Deaths'])+\"<\/li>\"+\n        \"<li>Mortality Rate:   \"+str(np.round(df_usa.loc[i]['Deaths']\/(df_usa.loc[i]['Confirmed']+1)*100,2))+\"<\/li>\"+\n        \"<\/ul>\"\n        ,\n        radius=int((np.log2(df_usa.loc[i]['Confirmed']+1))*6000),\n        color='#ff6600',\n        fill_color='#ff8534',                                  \n        fill=True).add_to(usa)\n\nusa","277d7824":"#US daily cases\ndf_confirmed['country'] = df_confirmed['Country\/Region']\ndf_confirmed_report = df_confirmed.copy()\n\ndf_confirmed_report.loc[df_confirmed_report['country'] != \"US\", \"country\"] = \"Outside United States\"\ndf_confirmed_report = df_confirmed_report.groupby(\"country\").sum().drop([\"Lat\",\"Long\"],axis =1)\ndf_confirmed_report.loc[\"Total\"] = df_confirmed_report.sum()\ndf_confirmed_newcases = df_confirmed_report.groupby(level =0).diff(axis =1)\ndf_confirmed_newcases = df_confirmed_newcases.replace(np.nan, 0, regex=True) \nf = plt.figure(figsize=(20,10))\nplt.grid(False)\nax1 = f.add_subplot(111)\nax1.bar(df_confirmed_report[df_confirmed_report.index == \"US\"].columns,df_confirmed_newcases[df_confirmed_newcases.index == \"US\"].values[0], label = \"US (New)\",color='limegreen')\nax1.bar(df_confirmed_report[df_confirmed_report.index == \"Outside United States\"].columns,df_confirmed_newcases[df_confirmed_newcases.index == \"Outside United States\"].values[0],bottom=df_confirmed_newcases[df_confirmed_newcases.index == \"US\"].values[0],label = \"Outside United States (New)\",color='cyan')\n\n# Labels\nax1.set_xlabel(\"Dates\",fontsize=17)\nax1.set_ylabel(\"New Cases Reported\",fontsize =17)\n\nax1.tick_params(size=10,labelsize=15)\nax1.set_xticks(np.arange(0.5, len(df_confirmed_report.columns), 6))\nax1.set_xticklabels([datetime.strptime(date,'%m\/%d\/%y').strftime(\"%d %b\") for date in df_confirmed_report.columns][::6],fontsize=15)\nl = np.arange(0, df_confirmed_report.max(axis = 1)[2]\/10+10000, 5000)\nax1.set_yticks(l[::int(len(l)\/5)])\n# ax1.spines['bottom'].set_position('zero')\n\nax2 = ax1.twinx()\nmarker_style = dict(linewidth=6, linestyle='--',markersize=25, markerfacecolor='#ffffff')\n\nax2.plot(df_confirmed_report[df_confirmed_report.index == \"Total\"].columns ,df_confirmed_report[df_confirmed_report.index == \"Total\"].values[0],**marker_style,label = \"World Total (Cumulative)\",color=\"red\",clip_on=False)\nax2.plot(df_confirmed_report[df_confirmed_report.index == \"US\"].columns ,df_confirmed_report[df_confirmed_report.index == \"US\"].values[0],**marker_style,label = \"US (Cumulative)\",color=\"magenta\",clip_on=False)\nax2.plot(df_confirmed_report[df_confirmed_report.index == \"Outside United States\"].columns ,df_confirmed_report[df_confirmed_report.index == \"Outside United States\"].values[0],**marker_style,label =\"Outside United States (Cumulative)\",color=\"yellow\",clip_on=False)\nax2.bar([0],[0])\n\n# Label\nax2.tick_params(labelsize=15)\nax2.set_ylabel(\"Cumulative (Million)\",fontsize =17)\nax2.set_xticks(np.arange(0.5, len(df_confirmed_report.columns), 6))\nax2.set_xticklabels([datetime.strptime(date,'%m\/%d\/%y').strftime(\"%d %b\") for date in df_confirmed_report.columns][::6])\nl = np.arange(0, df_confirmed_report.max(axis = 1)[2]+100000, 100000)\nax2.set_yticks(l[::int(len(l)\/5)])\n\nf.tight_layout()\nf.legend(loc = \"upper left\", bbox_to_anchor=(0.1,0.95), fontsize = 22)\nplt.title(\"COVID-19 Confirmed Cases: United States and the Rest of the World\",fontsize = 25)\nplt.savefig('United States vs Rest of the world.png')\nplt.show()","11005757":"# Demographic Variables\n1. Gender\n2. Rural-Urban\n3. Age\n4. Race\n5. Single-parent households\n","51c428f0":"## Fetching the data ","2c660a5d":"### Summary: The second half of the notebook provides the national level estimates. However, in order to understand the drivers behind the rising COVID fatalities, it is necessary to study the demographic profile of the counties and their association with Covid-related mortality. As could be seen, some economic variables revealed strong association with covid-related mortality, hinting toward hidden ecplanatory power of these variables in explaining the outcomes. This notebook provides the preliminary descriptive results of socio-economic and demographic variables with covid-related mortality. The final project (which I will share soon) deals with clustering of the counties based on specific indices derived from the variables explored here, where I try to see if county-clustering helps in explaining higher prevalence of Covid-related mortality.","3c414192":"![Image](https:\/\/www.furman.edu\/covid-19\/wp-content\/uploads\/sites\/177\/2020\/03\/CoronaVirusHeader-Final-3.jpg)","1dd5684d":"# Economic Variables\n1. Income Ratio\n2. Uninsured\n3. Unemployed\n4. segregation level\n5. Food environment index\n6. Food insecure","fb910ec8":"### The lowess smoothed lines provide some insight into the nature of the relationship between covid-related mortalities and demographic variables like gender, age, and race. As I filtered for counties having a higher number of confiemed cases, we notice that certain variables reveal a stronger positive association with Covid-related mortality. ","1b5d3032":"### The lowess smoothed lines provide some insight into the nature of the relationship between covid-related mortalities and the economic covariates. Some of the plots reveal a strong association between the deaths from Covid and the economic environment of the counties. ","6d0138fc":"# Exploring the association of COVID-19 with major risk factors by socio-demographic, economic, and health variables across counties in the United States\n\n### Abstract: The purpose of this notebook is to provide a detailed socio-demographic profile of COVID-19 fatality rates across counties in the United States. We have used the *US County Health Ranking Dataset* to provide a detailed picture of how COVID fatalities vary by demographic variables, economic variables and specific health markers. This notebook fulfills the following objectives:\n### 1) Provide a detailed demographic investigation of COVID-19 fatalities across sub-regions in the United States (county-level)\n### 2) The notebook provides a comparative analysis of the mortality prevalence by counties in the United States along with a comparison of where US stands, compared to cases worldwide.\n\n### Finally, the notebook provides useful information for policymakers to identify target-groups for further intervention. ","2cae5ad7":"# Health Variables\n1. SMOKERS\n2. ALCOHOL\n3. DIABETES\n4. LIFE EXPECTANCY\n5. INFANT MORTALITY RATE\n6. Social Association Rate","bb0ee16a":"# Socio-Demographic Profile\n### Here, we explore the association of COVID-19 Case Fatalities with-\n* demographic variables like age, gender, rurality, education and race\n* economic variables like income ratio, segregation level, unemployment level, percent uninsured, food-environment index and level of food insecurity\n* health markers like smoking, alcohol consumption, diabetes, obesity, life expectancy and infant mortality rate"}}