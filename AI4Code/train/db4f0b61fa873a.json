{"cell_type":{"19ee2242":"code","43c337b7":"code","3e8b03b0":"code","0122373f":"code","1d8a00dd":"code","2c44b6d2":"code","a5cdff4e":"code","e78958ff":"code","77f37564":"code","e17610c0":"code","a061b023":"markdown","d7b52649":"markdown","c48d5b30":"markdown","3cbc5c00":"markdown","db3ce769":"markdown","9ed8112e":"markdown","60f17f4f":"markdown","12357100":"markdown","7aecc28d":"markdown"},"source":{"19ee2242":"import pandas as pd\n\ntrain_data_df = pd.read_csv('..\/input\/train.csv')\ntest_data_df = pd.read_csv('..\/input\/test.csv')","43c337b7":"train_data = train_data_df.values\ntest_data = test_data_df.values\n\ntrain_features = train_data[:, 3:25][0:3485869]\ntrain_targets = train_data[:, 25][0:3485869]\n\nval_features = train_data[:, 3:25][3485869:4357336]\nval_targets = train_data[:, 25][3485869:4357336]\n\ntest_features = test_data[:, 3:25]\ntest_data = test_data[:, 0:3]","3e8b03b0":"import sklearn","0122373f":"from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler(feature_range=(-1, 1)).fit(train_features)\n\ntrain_features = scaler.transform(train_features)\nval_features = scaler.transform(val_features)\ntest_features = scaler.transform(test_features)","1d8a00dd":"from sklearn.ensemble import BaggingRegressor\n\nmodel = BaggingRegressor()\nmodel.fit(train_features, train_targets)","2c44b6d2":"predictions = model.predict(test_features)\ntest_data_df['winPlacePercPred'] = predictions","a5cdff4e":"test_data_preds = test_data_df.groupby(['matchId','groupId'])['winPlacePercPred'].agg('mean').groupby('matchId').rank(pct=True).reset_index()","e78958ff":"test_data_df['winPlacePerc'] = test_data_preds['winPlacePercPred']","77f37564":"import numpy as np","e17610c0":"predictions = pd.DataFrame(np.transpose(np.array([test_data[:, 0], list(predictions)])))\npredictions.columns = ['Id', 'winPlacePerc']\npredictions['Id'] = np.int32(predictions['Id'])\npredictions.to_csv('PUBG_preds2.csv', index=False)","a061b023":"**Read data from .csv files in the form of pandas dataframes**","d7b52649":"**Rank the groups in the each PUBG game based on average predicted winPlacePerc values of each group :**","c48d5b30":"**Extract training and testing data from the dataframes above**","3cbc5c00":"**Predict winPlacePerc values for test data using the trained Bagging model**","db3ce769":"**Scale all features into a range of (-1, 1)**","9ed8112e":"**Build and train Bagging Regression model...**","60f17f4f":"Courtesy to [Misha Lisovyi](https:\/\/www.kaggle.com\/mlisovyi\/relativerank-of-predictions) for giving me the idea to use ranking  of groups in each match.","12357100":"**Prepare the final submission file**","7aecc28d":"**Attach the new ranking-based predictions to test dataframe**"}}