{"cell_type":{"d0d32b00":"code","224eda03":"code","76bc9ac2":"code","ffb2bf31":"code","3c516d66":"code","0b5addb7":"code","109c9fa6":"code","2e8e4ca5":"code","6e338e0f":"code","aa1c8864":"code","58d26e47":"code","6ac2e24b":"code","59ddf8c7":"code","478f615e":"code","75dcf415":"code","bcc2e3de":"code","1e1606ab":"code","95b3697f":"code","1c9ca624":"code","435857ba":"code","80dfb09b":"code","6e169a56":"code","283d57b6":"code","dea5b171":"code","b56fc126":"code","f080389a":"code","a6982de9":"code","f36d2a4d":"markdown","59972262":"markdown","3d972283":"markdown","c0c695d1":"markdown","a7734e4b":"markdown","68e6b830":"markdown","7af1f4ee":"markdown","74400a2c":"markdown","738a6534":"markdown","c03ba3ac":"markdown","62eb6223":"markdown","30b8571f":"markdown"},"source":{"d0d32b00":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\nfrom collections import Counter\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","224eda03":"data = pd.read_csv('..\/input\/customer-personality-analysis\/marketing_campaign.csv', delimiter='\\t')\n","76bc9ac2":"data.head()","ffb2bf31":"data.info()","3c516d66":"data.describe()","0b5addb7":"data.info()","109c9fa6":"def bar_plot(variable):\n    \"\"\"\n        input: variable ex: \"Sex\"\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = data[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()                                \n    \n    # visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)                           \n    plt.xticks(varValue.index, varValue.index.values)             \n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))\n    \n\n","2e8e4ca5":"category1 = [\"Education\",\"Marital_Status\",\"Kidhome\",\"Teenhome\"]\nfor c in category1 :\n    bar_plot(c)\n\n","6e338e0f":"# find the age of customer if current time 2022\ndata[\"Year_Birth\"] =2022-data[\"Year_Birth\"]\n\n","aa1c8864":"def plot_hist(variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(data[variable], bins = 100)  \n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","58d26e47":"numericVar = [\"Year_Birth\", \"Income\"]\nfor n in numericVar:\n    plot_hist(n)","6ac2e24b":"print(data[\"Marital_Status\"].value_counts())","59ddf8c7":"print(data[\"Education\"].value_counts())","478f615e":"data[\"Marital_Status\"]=data[\"Marital_Status\"].replace({\"Married\":\"inrelesionship\", \"Together\":\"inrelesionship\", \"Absurd\":\"single\", \"Widow\":\"single\", \"YOLO\":\"single\", \"Divorced\":\"single\", \"Single\":\"single\",})","75dcf415":"# total spending\ndata[\"Spent\"] = data[\"MntWines\"]+ data[\"MntFruits\"]+ data[\"MntMeatProducts\"]+ data[\"MntFishProducts\"]+ data[\"MntSweetProducts\"]+ data[\"MntGoldProds\"]","bcc2e3de":"# Complain-Education\ndata[[\"Education\",\"Complain\"]].groupby([\"Education\"], as_index = False).mean().sort_values(by=\"Complain\",ascending = False)","1e1606ab":"# Complain-age\na =data[[\"Year_Birth\",\"Complain\"]].groupby([\"Year_Birth\"], as_index = False).mean().sort_values(by=\"Complain\",ascending = False)\n#show the dataframe value when Complain value greater than 0 \na[a[\"Complain\"]>0]","95b3697f":"sns.boxplot(data[\"Year_Birth\"])","1c9ca624":"data[(data[\"Year_Birth\"]>100)]","435857ba":"data.drop([239, 339, 192], inplace = True)","80dfb09b":"sns.boxplot(data[\"Income\"])","6e169a56":"q1, q3= np.percentile(data[\"Income\"],[25,75])\niqr = q3 - q1\nlower_bound = q1 -(1.5 * iqr) \nupper_bound = q3 +(1.5 * iqr)\n\nprint(\"lower_bound\",lower_bound)\nprint(\"upper_bound\",upper_bound)\n","283d57b6":"first_filter = data.Income < lower_bound\nsecond_filter = data.Income > upper_bound\ndata[first_filter | second_filter].index\n\n","dea5b171":"data.drop([164, 613, 650, 681, 1293, 1645, 2123, 2223], inplace = True)","b56fc126":"sns.boxplot(data[\"Spent\"])","f080389a":"data.columns[data.isnull().any()]","a6982de9":"data.drop([239, 339, 192], inplace = True)","f36d2a4d":"<font color ='#34c0eb'>\n\n<a id ='5'><\/a>\n# Basic data analysis","59972262":"<font color ='red'>\n<p style=\"background-color:#34c0eb;font-family:newtimeroman;color:#FFF9ED;font-size:300%;text-align:center;border-radius:20px 20px;\">CUSTOMER PERSONALITY ANALYSIS<\/p>\n \n\n<font color ='black'>    \nCustomer Personality Analysis is a detailed analysis of a company\u2019s ideal customers. It helps a business to better understand its customers and makes it easier for them to modify products according to the specific needs, behaviors and concerns of different types of customers.\n\nCustomer personality analysis helps a business to modify its product based on its target customers from different types of customer segments. For example, instead of spending money to market a new product to every customer in the company\u2019s database, a company can analyze which customer segment is most likely to buy the product and then market the product only on that particular segment.\n\n<font color ='#34c0eb'>\ncontent:\n    \n1. [Load and check data](#1)\n2. [Variable description](#2)\n   * [Categorical variable analysis](#3)\n   * [Numerical variable analysis](#4)\n3. [Basic data analysis](#5)\n4. [Outlier Detection](#6)\n5. [Missing Value](#7)\n    ","3d972283":"<font color ='#34c0eb'>\n\n<a id ='4'><\/a>\n# Numerical Variable\u00b6","c0c695d1":"<font color ='#34c0eb'>\n\u200b\n<a id ='7'><\/a>\n    \n# Missing Value","a7734e4b":"<font color ='#34c0eb'>\n\n<a id ='6'><\/a>\n# Outlier Detection\n    \n\n    \n","68e6b830":"<font color ='#34c0eb'>\nthere is two different catogories single and in relasionship","7af1f4ee":"<font color ='#34c0eb'>\n    \n# Load and check data\n \n \n","74400a2c":"**clean data**","738a6534":"![images.png](attachment:fa3b4655-eb07-4053-8759-dd8dd0206c19.png)","c03ba3ac":"<font color ='#34c0eb'>\n    \nThere isn't NaN value","62eb6223":"<font color ='#34c0eb'>\n    \n<a id ='3'><\/a>\n# Categorical Variable","30b8571f":"<font color ='#34c0eb'>\n   \n<a id ='2'><\/a>\n# Variable description\n\n### People\n\n* ID: Customer's unique identifier\n* Year_Birth: Customer's birth year\n* Education: Customer's education level\n* Marital_Status: Customer's marital status\n* Income: Customer's yearly household income\n* Kidhome: Number of children in customer's household\n* Teenhome: Number of teenagers in customer's household\n* Dt_Customer: Date of customer's enrollment with the company\n* Recency: Number of days since customer's last purchase\n* Complain: 1 if the customer complained in the last 2 years, 0 otherwise\n\n### Products\n\n* MntWines: Amount spent on wine in last 2 years\n* MntFruits: Amount spent on fruits in last 2 years\n* MntMeatProducts: Amount spent on meat in last 2 years\n* MntFishProducts: Amount spent on fish in last 2 years\n* MntSweetProducts: Amount spent on sweets in last 2 years\n* MntGoldProds: Amount spent on gold in last 2 years\n\n### Promotion\n\n* NumDealsPurchases: Number of purchases made with a discount\n* AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n* AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n* AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n* AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n* AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n* Response: 1 if customer accepted the offer in the last campaign, 0 otherwise\n\n### Place\n\n* NumWebPurchases: Number of purchases made through the company\u2019s website\n* NumCatalogPurchases: Number of purchases made using a catalogue\n* NumStorePurchases: Number of purchases made directly in stores\n* NumWebVisitsMonth: Number of visits to company\u2019s website in the last month"}}