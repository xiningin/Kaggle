{"cell_type":{"770bddef":"code","981542f1":"code","470439ed":"code","3b8858a7":"code","9717f03f":"code","8ee09e27":"code","2d2a78f2":"code","b1f0a897":"code","5fe2caf2":"code","31afbf6c":"code","29b51d66":"code","ba48b55c":"code","b936af43":"code","b6abb732":"code","79cbf849":"code","8d908bf3":"code","f89d50d6":"code","f586e5a1":"code","79bfa62b":"code","46e2dd27":"markdown","ae5ad6b9":"markdown","c365a7f5":"markdown","eb72cfad":"markdown","4412ec97":"markdown"},"source":{"770bddef":"import numpy as np\nimport pandas as pd\n\nimport warnings\nwarnings.simplefilter('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","981542f1":"submission = pd.read_csv('..\/input\/cat-in-the-dat-ii\/sample_submission.csv', index_col='id')","470439ed":"kernels = pd.read_csv('..\/input\/cat-in-dat-2-public-kernels\/kernels.csv', index_col='id')","3b8858a7":"kernels.head(10)","9717f03f":"import glob\n\ndef make_filename(idx):\n    return glob.glob('..\/input\/cat-in-dat-2-public-kernels\/' + str(idx) + '__submission.csv')[0]\n\ndef read_predictions(idx):\n    temp = pd.read_csv(make_filename(idx), index_col='id')\n    temp.columns = [str(idx)]\n    return temp\n\n\npredictions = pd.concat([read_predictions(idx) for idx in kernels.index], axis=1)\npredictions.shape","8ee09e27":"predictions.head()","2d2a78f2":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nplt.figure(figsize=(10,10))\n\nfor column in predictions.columns:\n    sns.kdeplot(predictions[column], label=column)\n\nplt.show()","b1f0a897":"# From https:\/\/seaborn.pydata.org\/examples\/many_pairwise_correlations.html\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ncorr = predictions.corr()\n\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\nf, ax = plt.subplots(figsize=(12, 12))\n\nsns.heatmap(corr, mask=mask, cmap='Blues', vmin=0.95, center=0, linewidths=1, annot=True, fmt='.4f')\n\nplt.show()","5fe2caf2":"submission['target'] = predictions.mean(axis=1)\nsubmission.to_csv('stack-mean.csv')","31afbf6c":"submission.head()","29b51d66":"scores = kernels['score']\n\nsum_scores = sum(scores)\n\nweights = [x \/ sum_scores for x in scores]","ba48b55c":"weighted_sum_prediction = predictions.dot(pd.Series(weights, index=predictions.columns))","b936af43":"weighted_sum_prediction.head()","b6abb732":"submission['target'] = weighted_sum_prediction\nsubmission.to_csv('stack-weighted-sum.csv')","79cbf849":"scores = kernels['score']\n\nsum_scores = sum(scores)\n\nweights = [x \/ sum_scores for x in scores]","8d908bf3":"from scipy.stats import rankdata\n\n\ndef blend_by_ranking(data, weights):\n    out = np.zeros(data.shape[0])\n    for idx,column in enumerate(data.columns):\n        out += weights[idx] * rankdata(data[column].values)\n    out \/= np.max(out)\n    return out","f89d50d6":"blend_by_ranking_prediction = blend_by_ranking(predictions, weights)","f586e5a1":"blend_by_ranking_prediction","79bfa62b":"submission['target'] = blend_by_ranking_prediction\nsubmission.to_csv('stack-blend-by-ranking.csv')","46e2dd27":"## Blend by ranking","ae5ad6b9":"## Stack","c365a7f5":"## Weighted sum","eb72cfad":"## Correlation matrix","4412ec97":"## Distribution"}}