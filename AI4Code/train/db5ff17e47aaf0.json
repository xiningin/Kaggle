{"cell_type":{"95ae897c":"code","d936e0c8":"code","4b4a7cba":"code","a8405abe":"code","f7ea4e24":"code","8a69e25c":"code","c78650ea":"code","0815fa16":"code","fc5cba3e":"code","3673659d":"code","bf2d5754":"code","135d79fa":"markdown","1b8e110c":"markdown","3b805c1b":"markdown"},"source":{"95ae897c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n# Any results you write to the current directory are saved as output.","d936e0c8":"# read data \ndata = pd.read_csv('..\/input\/tmdb_5000_movies.csv')","4b4a7cba":"#look up for data\ndata.info()","a8405abe":"# columns in data\ndata.columns","f7ea4e24":"# look up correlation for data \ndata.corr()","8a69e25c":"# visual correlation\nsns.heatmap(data.corr(),annot=True, linewidths=1)\nplt.show()","c78650ea":"print(data.head(10))\n\ndata.vote_count.plot(kind = 'line',color='blue',label='Vote Count', linewidth=1,alpha=0.5, grid=True)\nplt.legend(loc='upper right')\nplt.show()","0815fa16":"data.plot(kind='scatter', x='vote_count', y='vote_average',alpha = 0.5,color = 'red')\nplt.xlabel('Count Vote')\nplt.ylabel('Average Vote')\nplt.show()","fc5cba3e":"#Histogram\ndata.vote_average.plot(kind = 'hist',bins = 50)\nplt.show()","3673659d":"print(data.columns)\n\n\n#Filtering\nfilter_average_vote_greater_than_7 = data.vote_average > 7\nfilter_vote_count_greater_than_5000 = data.vote_count > 5000\n\ndata1 = data[filter_average_vote_greater_than_7]\nsns.heatmap(data1.corr(), annot=True)\nplt.show()\n\n\ndata2 = data[filter_vote_count_greater_than_5000]\nplt.clf()\nsns.heatmap(data2.corr(), annot=True)\nplt.show()\n\n\ndata3 = data[filter_average_vote_greater_than_7 & filter_vote_count_greater_than_5000]\nplt.clf()\nsns.heatmap(data3.corr(), annot=True)\nplt.show()","bf2d5754":"# sort by avarage vote\nsorted = data3.sort_values('vote_average', ascending=False)\n\n# lets print these movies names and vote average that filtered and sorted by average vote\nfor index,movie in sorted.iterrows():\n    print(\"Movie name : \", movie.title,\", average vote : \", movie.vote_average)\n    #print(movie)\n","135d79fa":"Let's read the data and look up","1b8e110c":"Sort by avarage vote and print them out.","3b805c1b":"Apply filter on movies"}}