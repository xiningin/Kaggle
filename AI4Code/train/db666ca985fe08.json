{"cell_type":{"028d4aaa":"code","de93753b":"code","c67d7fbc":"code","c32ba1d0":"code","6260f418":"code","8014044b":"code","4d61d066":"code","4b7ff6b0":"code","547e0ffa":"code","4d63594f":"code","a6ca1741":"code","579aacd4":"code","72849177":"code","94291752":"code","7cef5418":"code","5e613d0d":"code","f375a602":"code","ee0050d4":"code","5fead29e":"code","3c2465ee":"code","eb075a6e":"code","dbee0407":"code","594c3aa0":"code","ef2279f1":"code","d857c142":"code","986cfe38":"code","8e0d6811":"code","0bfd5f2a":"code","58632d67":"code","f1834f62":"code","2fc0a46c":"code","adc728c9":"code","ffa40e13":"markdown","197f80bb":"markdown","95fe16bc":"markdown","15e307b5":"markdown","38f59b48":"markdown","9afb213f":"markdown","878bb6de":"markdown","2bcba568":"markdown","86fce65d":"markdown","72760535":"markdown","a0efee87":"markdown","4a0871da":"markdown","a390a1f9":"markdown","b26f605d":"markdown","276ff1e7":"markdown","d5eb039f":"markdown","d71b08c4":"markdown","2ca4f1d4":"markdown","1dd1366c":"markdown"},"source":{"028d4aaa":"import os\nos.listdir(\"..\/input\/canlilikanalizi\")","de93753b":"%cd ..\/input\/canlilikanalizi","c67d7fbc":"import glob\nsahteler = {\"path\":[],\"label\":[]}\n\nfor path in  glob.glob(\".\/sahteler\/\"+\"*.png\"):\n    sahteler[\"path\"].append(path)\n    sahteler[\"label\"].append(1)\n\nsahteler = pd.DataFrame(sahteler)\nprint(sahteler)\n\ngercekler = {\"path\":[],\"label\":[]}\n\nfor path in  glob.glob(\".\/gercek\/\"+\"*.png\"):\n    gercekler[\"path\"].append(path)\n    gercekler[\"label\"].append(0)\n\ngercekler = pd.DataFrame(gercekler)\ndf = pd.concat([sahteler, gercekler], axis=0)","c32ba1d0":"import numpy as np # linear algebra\nimport pandas as pd # Table \nimport os\nimport random\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow.keras.layers import Dense,Flatten\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras import models, layers,Model\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nfrom tensorflow.keras.applications import VGG19 # Transfer learning model\nfrom warnings import filterwarnings\nfilterwarnings('ignore')\n\nprint(\"Libraries were imported\")\nprint(tf.__version__)\ndf[\"label\"] = df[\"label\"].astype(\"string\")\ndatagen = ImageDataGenerator()\n\ntrain_generator=datagen.flow_from_dataframe(\ndataframe=df,\ndirectory=\".\/\",\nx_col=\"path\",\ny_col=\"label\",\nbatch_size=32,\nseed=42,\nshuffle=True,\nclass_mode=\"categorical\",\ntarget_size=(160,160))\n\n\n\nvalid_generator=datagen.flow_from_dataframe(\ndataframe=df,\ndirectory=\".\/\",\nx_col=\"path\",\ny_col=\"label\",\nbatch_size=32,\nseed=42,\nshuffle=False,\nclass_mode=\"categorical\",\ntarget_size=(160,160))\n\n\ndef vgg19_model( num_classes=None):\n\n    model = VGG19(weights='imagenet', include_top=False, input_shape=(160, 160, 3))\n    for layer in model.layers[3:-1]:\n        layer.trainable = False\n    x=Flatten()(model.output)\n    x=Dense(56,activation='relu')(x) # \n    output=Dense(2,activation='softmax')(x) # \n    model=Model(model.input,output)\n    \n    return model\n\nmodel=vgg19_model(2)\n\nmodel.compile(optimizer=\"adam\", loss = \"categorical_crossentropy\", metrics=[\"accuracy\"])\nmodel.fit_generator(train_generator, validation_data=valid_generator, epochs=5)","6260f418":"plt.figure(figsize = (12,6))\nplt.subplot(1,2,1)\nplt.plot(model.history.history[\"accuracy\"],label = \"train accuracy\")\nplt.plot(model.history.history[\"val_accuracy\"],label = \"validation accuracy\")\nplt.legend()\n\nplt.subplot(1,2,2)\nplt.plot(model.history.history[\"loss\"],label = \"train loss\")\nplt.plot(model.history.history[\"val_loss\"],label = \"validation loss\")\n\nplt.legend()\n\nplt.show()","8014044b":"os.listdir(\"..\/..\/working\")","4d61d066":"model.save(\"..\/..\/working\/modelim.h5\")","4b7ff6b0":"import numpy as np # linear algebra\nimport pandas as pd # Table \nimport matplotlib.pyplot as plt #  for vizualizing the dataset\nimport os\nimport random\nimport glob # to find files\nimport seaborn as sns #  for vizualizing the dataset\n\nfrom sklearn.model_selection import train_test_split # split train-test\n\nfrom sklearn.metrics import confusion_matrix,classification_report #  measure metrics \n\nfrom tensorflow.keras.layers import Dense,Flatten\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras import models, layers,Model\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nfrom tensorflow.keras.applications import VGG16 # Transfer learning model\nfrom warnings import filterwarnings\nfilterwarnings('ignore')\n\nprint(\"Libraries were imported\")","547e0ffa":"# variables for data paths\npath = '..\/input\/chest-xray-pneumonia\/chest_xray\/'\n\n#other dataset path\n#path2 = \"..\/input\/covid19-pneumonia-normal-chest-xray-pa-dataset\/\"\n\n# train directory\ntrain_folder=path+\"train\/\"\ntrain_normal_dir=train_folder+\"NORMAL\/\"\ntrain_pneu_dir=train_folder+\"PNEUMONIA\/\"\n\n# for other dataset\n#train_folder2=path2+\"normal\/\"\n\n\n# test directory\ntest_folder=path+\"test\/\"\ntest_normal_dir=test_folder+\"NORMAL\/\"\ntest_pneu_dir=test_folder+\"PNEUMONIA\/\"\n\n\n# validation directory\nval_folder=path+\"val\/\"\nval_normal_dir=val_folder+\"NORMAL\/\"\nval_pneu_dir=val_folder+\"PNEUMONIA\/\"\n\n# variables for image size\nimg_width=196\nimg_height=196\n\n# variable for model\nbatch_size=80\nepochs=10","4d63594f":"# Train Dataset\ntrain_class_names=os.listdir(train_folder)\nprint(\"Train class names: %s\" % (train_class_names))\n# print(\"\\n\")\n\n\n# Test Dataset\ntest_class_names=os.listdir(test_folder)\nprint(\"Test class names: %s\" % (test_class_names))\n# print(\"\\n\")\n\n# Validation Dataset\nval_class_names=os.listdir(val_folder)\nprint(\"Validation class names: %s\" % (val_class_names))\n","a6ca1741":"### Prepare Train,Test ve Validation dataset\n\n# search jpeg\ntrain_normal_cases = glob.glob(train_normal_dir + '*jpeg')\ntrain_pneu_cases = glob.glob(train_pneu_dir + '*jpeg')\n\n# for ther other dataset search jpg\n#train_other_cases = glob.glob(train_folder2 + '*png')\n\ntest_normal_cases = glob.glob(test_normal_dir + '*jpeg')\ntest_pneu_cases = glob.glob(test_pneu_dir + '*jpeg')\n\n\nval_normal_cases = glob.glob(val_normal_dir + '*jpeg')\nval_pneu_cases = glob.glob(val_pneu_dir + '*jpeg')\n\n# create lists for train, test & validation cases, create labels as well\ntrain_list = []\ntest_list = []\n\nfor x in train_normal_cases:\n    train_list.append([x, \"Normal\"])\n    \nfor x in train_pneu_cases:\n    train_list.append([x, \"Pneumonia\"])\n# for other\n\n#for x in train_other_cases:\n #   train_list.append([x, \"Normal\"])\n    \n    \nfor x in test_normal_cases:\n    test_list.append([x, \"Normal\"])\n    \nfor x in test_pneu_cases:\n    test_list.append([x, \"Pneumonia\"])\n    \n\nfor x in val_normal_cases:\n    train_list.append([x, \"Normal\"])\n    \nfor x in val_pneu_cases:\n    train_list.append([x, \"Pneumonia\"])\n\n# create dataframes\ntrain_df = pd.DataFrame(train_list, columns=['image', 'Diagnos'])\nprint(train_df.shape)\ntest_df = pd.DataFrame(test_list, columns=['image', 'Diagnos'])\nprint(test_df.shape)","579aacd4":"train_df.head()","72849177":"test_df.head()","94291752":"plt.figure(figsize = (14,12))\nfor i in range(9):\n        random_sample = np.random.randint(1,200,dtype = 'int')\n        plt.subplot(3,3,i+1)\n        plt.imshow(image.load_img(train_df.iloc[random_sample,0]))\n        plt.title(train_df.iloc[random_sample,1])\n        plt.xticks([])\n        plt.yticks([])\n        plt.grid(False)\nplt.show()","7cef5418":"df_train,df_valid = train_test_split(train_df, test_size=0.15,random_state = 42,shuffle =  True)","5e613d0d":"## look amount of diagnoss type\n# for df_train\nplt.figure(figsize = (12,6))\nplt.subplot(1,3,1)\nsns.countplot(df_train.iloc[:,1])\nplt.title(\"df_train diagnos\")\n\n# for  df_valid\nplt.subplot(1,3,2)\nsns.countplot(df_valid.iloc[:,1])\nplt.ylabel(\"\")\nplt.title(\"df_valid diagnos\")\n\n# for  test_df\nplt.subplot(1,3,3)\nsns.countplot(test_df.iloc[:,1])\nplt.ylabel(\"\")\nplt.title(\"test_df diagnos\")\n\nplt.show()","f375a602":"datagen = ImageDataGenerator(rescale=1.\/255, zoom_range=0.2)","ee0050d4":"train_generator=datagen.flow_from_dataframe(\ndataframe=df_train,\ndirectory=\"..\/input\",\nx_col=\"image\",\ny_col=\"Diagnos\",\nbatch_size=80,\nseed=42,\nshuffle=False,\nclass_mode=\"categorical\",\ntarget_size=(196,196))","5fead29e":"valid_generator=datagen.flow_from_dataframe(\ndataframe=df_valid,\ndirectory=\"..\/input\",\nx_col=\"image\",\ny_col=\"Diagnos\",\nbatch_size=80,\nseed=42,\nshuffle=False,\nclass_mode=\"categorical\",\ntarget_size=(196,196))","3c2465ee":"test_datagen=ImageDataGenerator(rescale=1.\/255)\ntest_generator=test_datagen.flow_from_dataframe(\ndataframe=test_df,\ndirectory=\"..\/input\",\nx_col=\"image\",\ny_col=\"Diagnos\",\nbatch_size=80,\nseed=42,\nshuffle=False,\nclass_mode=\"categorical\",\ntarget_size=(196,196))","eb075a6e":"def vgg16_model( num_classes=None):\n\n    model = VGG16(weights='imagenet', include_top=False, input_shape=(196, 196, 3))\n    x=Flatten()(model.output)\n    output=Dense(2,activation='softmax')(x) # \n    model=Model(model.input,output)\n    \n    return model\n\nmodel=vgg16_model(2)","dbee0407":"model.summary()","594c3aa0":"model.compile(optimizer=\"adam\",loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])","ef2279f1":"model.fit_generator( train_generator,\n    steps_per_epoch = train_generator.samples \/\/ batch_size,\n    validation_data = valid_generator, \n    validation_steps = valid_generator.samples \/\/ batch_size,\n    epochs = epochs)","d857c142":"plt.figure(figsize = (12,6))\nplt.subplot(1,2,1)\nplt.plot(model.history.history[\"accuracy\"],label = \"train accuracy\")\nplt.plot(model.history.history[\"val_accuracy\"],label = \"validation accuracy\")\nplt.legend()\n\nplt.subplot(1,2,2)\nplt.plot(model.history.history[\"loss\"],label = \"train loss\")\nplt.plot(model.history.history[\"val_loss\"],label = \"validation loss\")\n\nplt.legend()\n\nplt.show()","986cfe38":"model.evaluate_generator(valid_generator,verbose=1)","8e0d6811":"model.save(\"modelim.h5\")","0bfd5f2a":"loaded_model = models.load_model(\"modelim.h5\")","58632d67":"filenames = test_generator.filenames\nnb_samples = len(filenames)\npredict = model.predict_generator(test_generator,steps = \n                                   np.ceil(nb_samples\/80))","f1834f62":"confusion_matrix(test_generator.labels, np.argmax(predict,axis=1))","2fc0a46c":"plt.figure(figsize = (10,6))\nsns.heatmap(confusion_matrix(test_generator.labels, np.argmax(predict,axis=1)),annot=True,yticklabels=[\"Normal\",\"Pneumonia\"],xticklabels=[\"Normal\",\"Pneumonia\"],fmt=\"d\",cmap = \"Blues\")","adc728c9":"print(classification_report(test_generator.labels, np.argmax(predict,axis=1)))","ffa40e13":"<a id=\"\"><\/a>\n<font color=\"blue\" size=+2.5><b>5. Predictions<\/b><\/font>","197f80bb":"<a id=\"9\"><\/a>\n<font color=\"blue\" size=+2.5><b>3.4 Vizualizing the data<\/b><\/font>\n<br\/>","95fe16bc":"<a id=\"6\"><\/a>\n<font color=\"blue\" size=+2.5><b>3.1 Define Constant<\/b><\/font>","15e307b5":"Dataframes include two columns who names are image and diagnos. Image column has image's directory. Diagnos has illness status.","38f59b48":"<a id=\"5\"><\/a>\n\n\n<font color=\"blue\" size=+2.5><b>2. Libraries<\/b><\/font>","9afb213f":"<a id=\"13\"><\/a>\n<font color=\"blue\" size=+2.5><b>5.1 Model Prediction Power <\/b><\/font>\n<br\/>","878bb6de":"<a id=\"top\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Table of Contents<\/h3>\n\n<font color=\"blue\" size=+1><b>Entry<\/b><\/font>\n* [1. What's the Pneumonia ?](#1)\n\n<font color=\"blue\" size=+1><b>Libraries<\/b><\/font>\n* [1. Requirements](#4)\n* [2. Import the Necessary Libraries ](#5)\n    \n<font color=\"blue\" size=+1><b> Load the Dataset and Visualizing the Dataset <\/b><\/font>\n* [1. Define Constand](#6)\n* [2. Prepare Data for Vizualing ](#7)\n* [3. Visualizing Data  ](#9)\n* [4. Prepare Data ](#10)    \n\n<font color=\"blue\" size=+1><b>Training and Creating the Model<\/b><\/font>\n* [1. Create Model ](#11)\n* [2. Train Model](#12)\n\n<font color=\"blue\" size=+1><b> Model Predictions <\/b><\/font> \n* [1. Model Prediction Power ](#13)","2bcba568":"<a id=\"7\"><\/a>\n<font color=\"blue\" size=+2.5><b>3.2 Prepare Data for Vizualizing<\/b><\/font>\n<br\/>","86fce65d":"<a id=\"4\"><\/a>\n<font color=\"blue\" size=+2.5><b>2.1 Requirements<\/b><\/font>\n* Numpy\n* Pandas\n* Matplotlib\n* Seaborn\n* Keras\n* Tensorflow","72760535":"**we used to image data generator because we should add zoom in images**","a0efee87":"we can split to  train-validation dataset","4a0871da":"<a id=\"\"><\/a>\n<font color=\"blue\" size=+2.5><b>4. Training and Creating the Model<\/b><\/font>","a390a1f9":"<a id=\"12\"><\/a>\n<font color=\"blue\" size=+2.5><b>4.1 Train Model <\/b><\/font>\n<br\/>","b26f605d":"<a id=\"10\"><\/a>\n<font color=\"blue\" size=+2.5><b>3.5 Preparing the Data<\/b><\/font>\n<br\/>","276ff1e7":"Every folders have two classes who the names are Pneumon\u0131a and Normal","d5eb039f":"<a id=\"1\"><\/a>\n<font color=\"blue\" size=+2.5><b>1.1 What's the Pneumonia ?<\/b><\/font>\n<br\/>\n<br\/>\n![image.png](http:\/\/madicanacdnstorage.blob.core.windows.net\/main\/Assets\/photo\/r\/zaturre-53690-95217_t.jpg)<br>\nPneumonia is an infection that inflames your lungs' air sacs (alveoli). The air sacs may fill up with fluid or pus, causing symptoms such as a cough, fever, chills and trouble breathing.\n\n**What Are the Symptoms of Pneumonia?**\n\nPneumonia symptoms can vary from so mild you barely notice them, to so severe that hospitalization is required. How your body responds to pneumonia depends on the type germ causing the infection, your age and your overall health.Symptoms may vary in certain populations. Newborns and infants may not show any signs of the infection. Or, they may vomit, have a fever and cough, or appear restless, sick, or tired and without energy. Older adults and people who have serious illnesses or weak immune systems may have fewer and milder symptoms. They may even have a lower than normal temperature. Older adults who have pneumonia sometimes have sudden changes in mental awareness. For individuals that already have a chronic lung disease, those symptoms may worsen.\n","d71b08c4":"<a id=\"11\"><\/a>\n<font color=\"blue\" size=+2.5><b>4.1 Create the Model<\/b><\/font>\n<br\/>","2ca4f1d4":"<a id=\"5\"><\/a>\n<font color=\"blue\" size=+2.5><b>2.2 Import the Necessary Libraries<\/b><\/font>","1dd1366c":"<a id=\"\"><\/a>\n\n\n<font color=\"blue\" size=+2.5><b>3. Load the Dataset and Visualizing the Dataset<\/b><\/font>"}}