{"cell_type":{"337cbc44":"code","4493be64":"code","f5a574fd":"code","8e5ce3de":"code","995acdef":"code","8ffaafb7":"code","760b3a6f":"code","b9b59f1a":"code","bfb2540f":"code","c60258fa":"code","b181215e":"code","fca117aa":"code","52d9d79e":"code","b834e4a1":"code","41d63512":"code","b40903dd":"code","5178e197":"code","a08dd9ba":"code","1cb5739e":"code","c5b96be0":"code","16267123":"code","0ffdfb49":"code","f3e9e83c":"code","3dd11352":"code","985a9862":"code","d3b2be79":"code","f0eed1e8":"code","ff7ce2a0":"code","725b5ac3":"code","e23c15a4":"code","5e42ea54":"code","c048b20d":"code","6e1987ec":"code","ae05c25e":"markdown"},"source":{"337cbc44":"import numpy as np\nimport pandas as pd\nlabels=pd.read_csv(\"D:\/data science\/toon emotions detection\/Dataset\/Train.csv\")\nlabels.head()","4493be64":"r=labels.iloc[:,1].values\nlabel=np.delete(r,-1)\nlabel1=np.delete(r,-1)","f5a574fd":"emotions=np.unique(label)\nemotions","8e5ce3de":"o=np.where(emotions==\"angry\")\no[0][0]","995acdef":"import glob\nimport cv2\nfrom PIL import Image\nimport numpy as np\nimage_array=[]\nl=[]\nfor img in glob.glob(\"D:\/data science\/toon emotions detection\/Dataset\/data\/*.jpg\"):\n    image= cv2.imread(img)\n    image_from_array = Image.fromarray(image, 'RGB')\n    size_image = image_from_array.resize((50,50))\n    image_array.append(np.array(size_image))\n    p_label=np.where(emotions==label1[0])\n    l.append(p_label[0][0])\n    label1=np.delete(label1,0)\n    \n    \nlen(image_array)","8ffaafb7":"data=np.array(image_array)\nlabels=np.array(l)","760b3a6f":"import matplotlib.pyplot as plt\nfigure=plt.figure(figsize=(15,10))\nax=figure.add_subplot(121)\nax.imshow(data[0])\nbx=figure.add_subplot(122)\nbx.imshow(data[60])","b9b59f1a":"np.save(\"Cells\",data)\nnp.save(\"labels\",l)","bfb2540f":"Cells=np.load(\"Cells.npy\")\nlabels=np.load(\"labels.npy\")","c60258fa":"s=np.arange(Cells.shape[0])\nnp.random.shuffle(s)\nCells=Cells[s]\nlabels=labels[s]","b181215e":"num_classes=len(np.unique(labels))\nlen_data=len(Cells)","fca117aa":"emotions=np.unique(labels)\nemotions","52d9d79e":"x_train,x_test=Cells[(int)(0.1*len_data):],Cells[:(int)(0.1*len_data)]\nx_train = x_train.astype('float32')\/255\nx_test = x_test.astype('float32')\/255\ntrain_len=len(x_train)\ntest_len=len(x_test)","b834e4a1":"y_train,y_test=labels[(int)(0.1*len_data):],labels[:(int)(0.1*len_data)]","41d63512":"import keras\ny_train=keras.utils.to_categorical(y_train,num_classes)\ny_test=keras.utils.to_categorical(y_test,num_classes)","b40903dd":"from keras.models import Sequential\nfrom keras.layers import Dense,Conv2D,MaxPooling2D,Dropout,Flatten\nfrom keras.optimizers import RMSprop","5178e197":"model=Sequential()\nmodel.add(Conv2D(filters=16,kernel_size=2,padding=\"same\",activation=\"relu\",input_shape=(50,50,3)))\nmodel.add(MaxPooling2D(pool_size=2))\nmodel.add(Conv2D(filters=32,kernel_size=2,padding=\"same\",activation=\"relu\"))\nmodel.add(MaxPooling2D(pool_size=2))\nmodel.add(Conv2D(filters=64,kernel_size=2,padding=\"same\",activation=\"relu\"))\nmodel.add(MaxPooling2D(pool_size=2))\nmodel.add(Dropout(0.2))\nmodel.add(Flatten())\nmodel.add(Dense(500,activation=\"relu\"))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(5,activation=\"softmax\"))\nmodel.summary()","a08dd9ba":"model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","1cb5739e":"model.fit(x_train,y_train,batch_size=50,epochs=250,verbose=1)","c5b96be0":"accuracy = model.evaluate(x_test, y_test,verbose=1)\nprint('\\n', 'Test_Accuracy=>', accuracy[1])","16267123":"from keras.models import load_model\nmodel.save('cells.h5')","0ffdfb49":"import glob\nimport cv2\nfrom PIL import Image\nimport numpy as np\nimage_array1=[]\nfor img in glob.glob(\"D:\/data science\/toon emotions detection\/Dataset\/image_extract\/*.jpg\"):\n    image= cv2.imread(img)\n    image_from_array = Image.fromarray(image, 'RGB')\n    size_image = image_from_array.resize((50,50))\n    image_array1.append(np.array(size_image))\n    \n    \nlen(image_array1)","f3e9e83c":"data1=np.array(image_array1)\nnp.save(\"Cells1\",data1)\nCells1=np.load(\"Cells1.npy\")","3dd11352":"a=model.predict(Cells1)\nl=[]\na=list(a)\nfor i in a:\n    l.append(np.argmax(i))","985a9862":"b=pd.DataFrame(a)\nc=pd.DataFrame(l)\nc=pd.concat([b,c],axis=1)","d3b2be79":"c.columns=[1,2,3,4,5,6]","f0eed1e8":"c","ff7ce2a0":"def emo(l):\n    if l==0:\n        return 'Unknown'\n    if l==1:\n        return 'angry'\n    if l==2:\n        return 'happy'\n    if l==3:\n        return 'sad'\n    if l==4:\n        return 'surprised'\nc[6]=c[6].apply(emo)","725b5ac3":"import numpy as np\nimport pandas as pd\nlabels=pd.read_csv(\"D:\/data science\/toon emotions detection\/Dataset\/Test.csv\")\nlabels.head()","e23c15a4":"gen=c[6]\nlabels=pd.concat([labels,gen],axis=1)\nlabels","5e42ea54":"labels.columns=[\"Frame_ID\",\"Emotion\"]","c048b20d":"labels","6e1987ec":"labels.to_csv('D:\/data science\/toon emotions detection\/Dataset\/submission1-.csv',columns=[\"Frame_ID\",\"Emotion\"],index=False)","ae05c25e":"# test"}}