{"cell_type":{"f410b66b":"code","c2a0ef00":"code","18848441":"code","a7fd3c1a":"code","b9f727ce":"code","fc3a2284":"code","7ea25ef2":"code","4a51a18b":"code","f1f9af51":"code","387929f2":"code","e2a80221":"code","aaefe3f1":"code","a33ae46a":"code","794b1593":"code","92ec5119":"code","0a1f93c3":"code","88c0004f":"code","ed7d472c":"code","6a58befe":"code","564bee1c":"code","c4329e89":"code","959799d7":"code","6d818da9":"code","70e191ba":"code","deb58933":"code","dbf898db":"code","8f2bd6a2":"code","2e659125":"code","92f59b03":"code","59636cca":"code","d70cefa2":"code","44452305":"code","df14f5ca":"code","bb118bba":"code","82bdf66e":"code","c49c3980":"code","01a861fa":"code","867c7d6b":"code","a6f3e0e4":"code","2bf1144e":"code","36d53f56":"code","9a3eca03":"code","723ed98f":"code","5822a59a":"code","cf8332c4":"markdown","e8416860":"markdown","59e5cf27":"markdown","f9372fe6":"markdown","824d2170":"markdown","eb5b91b5":"markdown","7247fa57":"markdown","7ff92201":"markdown","5909f481":"markdown","9baf2ab8":"markdown"},"source":{"f410b66b":"!pip install pyforest\nfrom pyforest import * \nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn import metrics\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nplt.rcParams['figure.figsize'] = (15.0, 15.0)\nplt.style.use('ggplot')\npd.set_option('display.max_columns', None)  \npd.set_option('display.expand_frame_repr', False)\npd.set_option('max_colwidth', -1)\n%matplotlib inline\n","c2a0ef00":"os.listdir('\/kaggle\/input\/olist-dataset')","18848441":"# leads dataset\nmql = pd.read_csv('..\/input\/olist-dataset\/olist_marketing_qualified_leads_dataset.csv')\nmql.head(10)","a7fd3c1a":"# closed deals dataset\ncd = pd.read_csv('..\/input\/olist-dataset\/olist_closed_deals_dataset.csv')\ncd.head(10)","b9f727ce":"# marketing funnel dataset (NaNs are leads that did not close a deal)\nmf = mql.merge(cd, on='mql_id', how='left')\nmf.head(10)","fc3a2284":"os.chdir('\/kaggle\/input\/brazilian-ecommerce\/')","7ea25ef2":"# sellers dataset\n#..\/input\/olist-dataset\/olist_marketing_qualified_leads_dataset.csv\nsellers=pd.read_csv('olist_sellers_dataset.csv')#\/')\nsellers.head(10)","4a51a18b":"# marketing funnel merged with sellers (this way you get seller location)\nmf_sellers = mf.merge(sellers, on='seller_id', how='left')\nmf_sellers.head(10)","f1f9af51":"# order items dataset\norder_items = pd.read_csv(\"olist_order_items_dataset.csv\")\norder_items.head(10)","387929f2":"# marketing funnel merged with items (this way you get products sold by sellers)\nmf_items = mf.merge(order_items, on='seller_id', how='left')\nmf_items.head(10)","e2a80221":"###Getting an Order level Quantity and overall order price\norder_payments = pd.read_csv(\"olist_order_payments_dataset.csv\")\norderid_amount=order_payments.groupby(['order_id']).agg({'payment_value':sum,'order_id':len})\norderid_amount.columns=['totalpayment_value','total_qty']\norderid_amount=orderid_amount.reset_index()","aaefe3f1":"\ncustomers = pd.read_csv(\"olist_customers_dataset.csv\")\norders = pd.read_csv(\"olist_orders_dataset.csv\")\nproducts=pd.read_csv(\"olist_products_dataset.csv\")\nreview=pd.read_csv(\"olist_order_reviews_dataset.csv\")","a33ae46a":"ops=orderid_amount.merge(order_items[['order_id', 'product_id', 'seller_id']],how='left',on='order_id')\ndisplay(ops.shape)\n","794b1593":"ops=ops.merge(products[['product_id','product_category_name','product_photos_qty']],how='left',on=['product_id'])\ndisplay(ops.shape)\n","92ec5119":"ops=ops.merge(review[['review_score','order_id']],how='inner',on='order_id')\ndisplay(ops.shape)\n","0a1f93c3":"for col in['order_delivered_customer_date','order_purchase_timestamp']:\n    orders[col] = pd.to_datetime(orders[col])\norders['delivery_days']=(orders['order_delivered_customer_date'].dt.date-orders['order_purchase_timestamp'].dt.date).dt.days","88c0004f":"ops=ops.merge(orders[['order_id', 'customer_id','order_purchase_timestamp','delivery_days']],how='inner',on='order_id')\ndisplay(ops.shape)\n","ed7d472c":"ops=ops.merge(customers[['customer_id','customer_city','customer_state']],how='inner',on='customer_id')\ndisplay(ops.shape)","6a58befe":"ops['order_purchase_month_year'] = pd.to_datetime(ops['order_purchase_timestamp']).dt.to_period('M')\nops.drop(columns=['order_purchase_timestamp'],inplace=True)\nops=ops[ops.seller_id.notnull()]","564bee1c":"###Aggregating on an orderid level\nops['rc']=ops.groupby(['order_id']).cumcount()+1\nops=ops[ops.rc==1]\nops.drop(columns={'rc'},inplace=True)","c4329e89":"ops.order_purchase_month_year.value_counts()","959799d7":"##Ensuring Jan 2017-Sep 2018 is being considered\nops=ops[(ops.order_purchase_month_year>='2017-01')&(ops.order_purchase_month_year<'2018-10')]","6d818da9":"ops.order_purchase_month_year.value_counts()","70e191ba":"###Unique on Order_id level\nops.shape,ops.order_id.nunique()","deb58933":"ltv=pd.DataFrame(ops.groupby(['seller_id'])['totalpayment_value'].sum()).reset_index()","dbf898db":"ltv.describe()","8f2bd6a2":"ltv_seller=ltv.quantile(np.linspace(.1, 1.1, 10,0)).reset_index()\nltv_seller.columns=['percentile','ltv']\nltv_seller","2e659125":"mr=pd.DataFrame(ops.order_purchase_month_year.value_counts()).reset_index()\nmr=ops.groupby(['order_purchase_month_year']).agg({'order_id':len,'totalpayment_value':sum}).reset_index()\nmr.columns=['year_month','order_count','revenue_generated']","92f59b03":"mr.year_month=mr.year_month.astype(str)\nmr","59636cca":"# create figure and axis objects with subplots()\nfig,ax = plt.subplots()\nplt.xticks(rotation=-45)\n# make a plot\nax.plot(mr.year_month, mr.order_count, color=\"red\", marker=\"o\")\n# set x-axis label\nax.set_xlabel(\"year_month\",fontsize=14)\n# set y-axis label\nax.set_ylabel(\"order_count\",color=\"red\",fontsize=14)\nax.set_title('Monthly Performance Jan 2017-Sep 2018')\n# twin object for two different y-axis on the sample plot\nax2=ax.twinx()\n# make a plot with different y-axis using second axis object\nax2.plot(mr.year_month, mr.revenue_generated,color=\"blue\",marker=\"o\")\nax2.set_ylabel(\"revenue_generated\",color=\"blue\",fontsize=14)\nfig.set_size_inches(10,6)\nplt.show()\n\n\n\n","d70cefa2":"top15_prodcat=pd.DataFrame(ops.product_category_name.value_counts().sort_values(ascending=False).head(15)).reset_index()\ntop15_prodcat.columns=['product_category_name','order_count']\nfig=plt.gcf()\nfig.set_size_inches(20,10)\ngraph=sns.barplot('product_category_name','order_count',data=top15_prodcat)\nfor p in graph.patches:\n        graph.annotate('{:.0f}'.format(p.get_height()), (p.get_x()+0.3, p.get_height()),\n                    ha='center', va='bottom',\n                    color= 'black')\nplt.xticks(rotation=-45)\n\n\n","44452305":"ops1=ops.copy()","df14f5ca":"final_data=pd.merge(ops1[ops1.seller_id.notnull()],mf[['seller_id','landing_page_id', 'origin','business_segment',\n       'lead_type', 'lead_behaviour_profile','business_type']],how='left',on='seller_id')","bb118bba":"final_data.order_purchase_month_year.value_counts()","82bdf66e":"final_data['month_purchase']=final_data.order_purchase_month_year.dt.month","c49c3980":"display(final_data.order_id.nunique(),final_data.shape)\ndisplay(final_data.head())","01a861fa":"##dropping high missing value column,specific rows and missing value imputation\nfor col in final_data.columns:\n    if ((final_data[col].isnull().sum())\/(final_data.shape[0])>0.95):\n        final_data.drop(columns=[col],inplace=True)\n        \nfinal_data=final_data[final_data.product_category_name.notnull()]\nfinal_data.delivery_days.fillna(final_data.delivery_days.median(),inplace=True)","867c7d6b":"final_data.columns","a6f3e0e4":"column_list = ['product_category_name','customer_city','customer_state']#,'lead_type','lead_behaviour_profile','business_type','landing_page_id','origin']\n\nfor column in column_list:\n    encoder = preprocessing.LabelEncoder()\n    encoder.fit(final_data[column])\n    final_data[column] = encoder.transform(final_data[column])","2bf1144e":"\nfeatures = ['total_qty', 'product_photos_qty','review_score','product_category_name',\n             'delivery_days', 'customer_city',\n       'customer_state', 'month_purchase']#\ntarget = ['totalpayment_value']\n\nX = final_data[features].values\ny = final_data[target].values\nsplit_test_size = 0.10\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = split_test_size, random_state=8)\n\nprint('Training Features Shape:', X_train.shape)\nprint('Testing Features Shape:', X_test.shape)\nprint('Training labels Shape:', y_train.shape)\nprint('Testing labels Shape:', y_test.shape)","36d53f56":"\nrf_model_finaldata = RandomForestRegressor(n_estimators=100, min_samples_split=2, random_state = 20,n_jobs=-1)\nrf_model_finaldata.fit(X_train, np.ravel(y_train,order='C'))\n\nrf_predict_train = rf_model_finaldata.predict(X_train)\nrf_predict_test = rf_model_finaldata.predict(X_test)\n\nprint(\"Mean Absolute error in predicting train data\",mean_absolute_error(y_train,rf_predict_train))\nprint(\"Mean Absolute error in predicting test data\",mean_absolute_error(y_test,rf_predict_test))","9a3eca03":"imp_features = pd.Series(rf_model_finaldata.feature_importances_,index=features).sort_values(ascending=False)\nimp_features=pd.DataFrame(imp_features.reset_index())\nimp_features.columns=['variable_name','importance']\nimp_features","723ed98f":"sns.barplot('variable_name','importance',data=imp_features)\nplt.title('Feature Importance Plot')\nplt.xticks(rotation=60)\n","5822a59a":"sns.heatmap(final_data.corr())","cf8332c4":"# Monthly Revenue","e8416860":"# Importing Libraries","59e5cf27":"# Plotting the Important Features","f9372fe6":"# Correlation Plot","824d2170":"# Splitting Data into Train and Test samples","eb5b91b5":"# Top 15 selling product categories","7247fa57":"# Life Time Value","7ff92201":"# Joining Data Sets","5909f481":"# Predicting revenue using Random Forest Regressor","9baf2ab8":"# Data Preprocessing"}}