{"cell_type":{"e5b5ab2c":"code","8b3ac157":"code","2fe54ad2":"code","63d530e1":"code","8dce7a45":"markdown"},"source":{"e5b5ab2c":"import numpy as np\nimport pandas as pd","8b3ac157":"train_segs = r\"\/kaggle\/input\/train_ship_segmentations_v2.csv\"","2fe54ad2":"def rle_decode(path_to_segments, shape = (768,768)):\n    segs = pd.read_csv(path_to_segments, index_col = 0)\n    segNames = np.unique(segs.index)\n    allMasks = []\n    for segName in segNames:\n        masks = []\n        segData = segs.loc[segName].dropna()\n        if segData.shape[0] != 0:\n            if segData.shape[0] > 1:\n                obj = [np.array(each.replace(\" \", \", \").split(', '), dtype = 'int') for each in segData.EncodedPixels]\n            else:\n                obj = [np.array(segData.EncodedPixels.replace(\" \", \", \").split(', '), dtype = 'int')]\n            for eachRLE in obj:\n                rle_indexes = eachRLE.reshape((int(eachRLE.shape[0]\/2), 2))\n                template = np.arange(0,shape[0]*shape[1],1).reshape(shape).T\n                for i, rle in enumerate(rle_indexes):\n                    runItems = np.arange(rle[0], rle[0] + rle[1])\n                    for runItem in runItems:\n                        template[template == runItem] = -1\n                masks.append((template == -1).astype('int'))\n        else:\n            masks.append(np.zeros((shape)))\n            \n        allMasks.append(np.array(masks).max(axis = 0))\n    return np.array(allMasks)\n        ","63d530e1":"#masks = rle_decode(train_segs)","8dce7a45":"# Decode All Airbus Masks Function\n\nThe function I created below decodes all run length encoding segmentations for the airbus competition into a multi-dimensional array. Due to the volume of data I have not run to the end but have tested on batch. Anyone care to try it out? My first kernel contribution . Hope you like it."}}