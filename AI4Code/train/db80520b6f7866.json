{"cell_type":{"380c65ab":"code","0301470b":"code","d2e37964":"code","2d1593fe":"code","53027f22":"code","cc1106ff":"code","ec4db442":"code","4e19c695":"code","79199b2b":"markdown","55abe1cc":"markdown","599986a2":"markdown"},"source":{"380c65ab":"!pip install beautifulsoup4\n!pip install fastnumbers\n!pip install dill\n!pip install pytidylib\n!pip install tradingview-ta\n!pip install quandl","0301470b":"import numpy as np # linear algebra\nimport pandas as pd # pandas for dataframe based data processing and CSV file I\/O\nimport requests # for http requests\nfrom bs4 import BeautifulSoup # for html parsing and scraping\nfrom fastnumbers import isfloat\nfrom fastnumbers import fast_float\nfrom multiprocessing.dummy import Pool as ThreadPool\nimport bs4\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport json\nfrom tidylib import tidy_document # for tidying incorrect html\n\nsns.set_style('whitegrid')\n\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\n","d2e37964":"def ffloat(string):\n    if string is None:\n        return np.nan\n    if type(string)==float or type(string)==np.float64:\n        return string\n    if type(string)==int or type(string)==np.int64:\n        return string\n    return fast_float(string.split(\" \")[0].replace(',','').replace('%',''),\n                      default=np.nan)\n\ndef ffloat_list(string_list):\n    return list(map(ffloat,string_list))\n\ndef remove_multiple_spaces(string):\n    if type(string)==str:\n        return ' '.join(string.split())\n    return string\n\ndef request_with_check(url):\n    page_response = requests.get(url, timeout=240)\n    status = page_response.status_code\n    if status>299:\n        raise AssertionError(\"page content not found, status: %s\"%status)\n    return page_response\n\ndef get_children(html_content):\n    children = list()\n    for item in html_content.children:\n        if type(item)==bs4.element.Comment:\n            continue\n        if type(item)==bs4.element.Tag or len(str(item).replace(\"\\n\",\"\").strip())>0:\n            children.append(item)\n        \n    return children\ndef get_table_simple(table,is_table_tag=True):\n    elems = table.find_all('tr') if is_table_tag else get_children(table)\n    table_data = list()\n    for row in elems:\n        row_data = list()\n        row_elems = get_children(row)\n        for elem in row_elems:\n            text = elem.text.strip().replace(\"\\n\",\"\")\n            text = remove_multiple_spaces(text)\n            if len(text)==0:\n                continue\n            row_data.append(text)\n        table_data.append(row_data)\n    return table_data\n","2d1593fe":"from IPython.core.display import HTML, display\n#take url and read all tables in page\nurl = \"https:\/\/www.moneycontrol.com\/india\/stockpricequote\/auto-23-wheelers\/heromotocorp\/HHM\"\npage_response = requests.get(url, timeout=240)\npage_content = BeautifulSoup(page_response.content, \"html.parser\")\nhtmls = page_content.find_all(\"table\")\nfor h in htmls:\n    display(HTML(remove_multiple_spaces(str(h))))","53027f22":"#display table contents in web page\nfor i,h in enumerate(htmls):\n    print (\"table\",i)\n    print(get_table_simple(h))\n    print('----------------------------')","cc1106ff":"#analyze stock charts in https:\/\/www.tradingview.com\/chart\nfrom tradingview_ta import TA_Handler, Interval, Exchange\n# Bitcoin \/ USD Tether\nhandler = TA_Handler(\n    symbol=\"BTCUSDT\",\n    screener=\"crypto\",\n    exchange=\"binance\",\n    interval=Interval.INTERVAL_4_HOURS\n)\nprint(handler.get_analysis().summary)","ec4db442":"import quandl\nimport datetime\nfrom pandas_datareader import data\n# look at stock prices starting at January 1, 2018\nstart = datetime.datetime(2018,1,1)\nend = datetime.date.today()\n# Let's get Apple stock data; Apple's ticker symbol is AAPL\n# First argument is the series we want, second is the source (\"yahoo\" for Yahoo! Finance), third is the start date, fourth is the end date\ns = \"AAPL\"\napple = quandl.get(\"WIKI\/\" + s, start_date=start, end_date=end)\n \napple.head()","4e19c695":"#scraping data using datareader in pandas and quandl\ndata.DataReader(\"JPM\",\"quandl\",start,end,access_key='X6mZSY79yeySfpCVJaKg')","79199b2b":"**load libraries**","55abe1cc":"**Download Needed libraries**","599986a2":"**References**:\nhttps:\/\/github.com\/faizanahemad\/data-science-utils\/blob\/master\/data_science_utils\/financial\/Web%20Scraping%20and%20Financial%20Data%20Exploration%20in%20Python-Tutorial.ipynb"}}