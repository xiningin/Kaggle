{"cell_type":{"9f461077":"code","88da5a80":"code","d8fe2b44":"code","7dd8d469":"code","e997a610":"code","f95a01e5":"code","90788193":"code","c3d6b186":"code","425c15d3":"code","53793c68":"code","a3a8c00e":"code","614dace1":"code","44cb3528":"code","a4e24829":"code","6029b894":"code","7955383a":"code","ed726fcd":"code","7760dd67":"code","e2a89fc8":"code","d3afb120":"code","172b8a67":"code","ea335875":"code","e0800b97":"code","34bd679c":"code","bc791f89":"markdown","803648d6":"markdown","fa9c1fb5":"markdown","7f9f2f74":"markdown"},"source":{"9f461077":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nsns.set_style('white')","88da5a80":"#Load data \ndf=pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\ndf.head()","d8fe2b44":"\ndf_shape=df.shape #shape of data frame \ndf_dtypes=df.dtypes #data types associated with data \ndf_info=df.info()\ndf_info","7dd8d469":"#NULL CHECKING \ndf_null=df.isnull().sum()\n\n#plot using heatmap\nsns.heatmap(df.isnull(),cbar=False)","e997a610":"target=df['DEATH_EVENT']\ndata=df.drop('DEATH_EVENT',axis=1)\ncols=data.columns\ncols","f95a01e5":"data[cols[0]].describe()","90788193":"sns.distplot(data[cols[0]])","c3d6b186":"data['age_cut']=pd.cut(data['age'],bins=[40,60,80,100],labels=[0,1,2])","425c15d3":"#Plot age feature \nsns.set_style(style=\"darkgrid\")\nsns.countplot(data['age_cut'],hue=target,palette='Blues_r')","53793c68":"sns.countplot(data['diabetes'],hue=target, palette='Spectral')","a3a8c00e":"sns.countplot(data['sex'],hue=target)","614dace1":"sns.distplot(data['platelets'],color='r')","44cb3528":"sns.countplot(data['high_blood_pressure'],hue=target)","a4e24829":"sns.countplot(data['smoking'],hue=target)","6029b894":"sns.distplot(data['serum_sodium'])","7955383a":"cat_feats=['age_cut','sex','smoking','high_blood_pressure','diabetes']\ndata[cat_feats].head()","ed726fcd":"dp=data[cat_feats[2]].value_counts().reset_index()\ndp.columns=[cat_feats[2],'Counts']\nfig,ax=plt.subplots()\nax.pie(dp['Counts'],labels=[0,1],explode=(0, 0.1),autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax.set_title('Smoking')","7760dd67":"dp=data[cat_feats[1]].value_counts().reset_index()\ndp.columns=[cat_feats[1],'Counts']\nfig,ax=plt.subplots()\nax.pie(dp['Counts'],labels=[0,1],explode=(0, 0.1),autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax.set_title(cat_feats[1])\n","e2a89fc8":"dp=data[cat_feats[4]].value_counts().reset_index()\ndp.columns=[cat_feats[4],'Counts']\nfig,ax=plt.subplots()\nax.pie(dp['Counts'],labels=[0,1],explode=(0, 0.1),autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax.set_title(cat_feats[4])","d3afb120":"sns.countplot(df['DEATH_EVENT'],palette='Blues_r')","172b8a67":"all_corr=df.corr()\ntarget_corr=df.corr()['DEATH_EVENT'].sort_values(ascending=False)","ea335875":"sns.heatmap(all_corr, cmap=\"YlGnBu\")","e0800b97":"from sklearn.feature_selection import SelectKBest,f_classif,chi2\n\nX=df.drop('DEATH_EVENT',axis=1)\nY=df['DEATH_EVENT']\n\n\nfeat=SelectKBest(k=5,score_func=f_classif)\nselector=feat.fit(X,Y)\n\ncols=X.columns\ndf_features = pd.DataFrame(cols)\ndf_scores = pd.DataFrame(selector.scores_)\n\ndf_new = pd.concat([df_features, df_scores], axis=1)\ndf_new.columns = ['Features', 'Score']\n\ndf_new = df_new.sort_values(by='Score', ascending=False)\n\nimp_feature=df_new['Features'].to_list()\nimp_feature=imp_feature[:5]\n\nimp_feature","34bd679c":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_val_score\n\n\nX=df[imp_feature]\nY=target\nlogreg=LogisticRegression()\nscores=cross_val_score(logreg,X,Y,cv=4)\nindex=np.argmax(scores)\nscores[index]*100","bc791f89":"\n# IN THIS NOTEBOOK :\n\n\n1. EXPLORATORY DATA ANALYSIS\n2. VISUALIZATION -> COUNTPLOT , HEATMAP , PIE CHART\n3. FEATURE SELECTION -> SELECTKBEST , CORR MATRIX\n4. MODELING -> LOGISTIC REGRESSION","803648d6":"# FEATURE SELECTION","fa9c1fb5":"*> UPVOTE, IF YOU FIND IT USEFUL!!*\n*Thankyou!*","7f9f2f74":"# CORRELATION"}}