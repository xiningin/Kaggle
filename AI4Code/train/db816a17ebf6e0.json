{"cell_type":{"59d27d2d":"code","89854639":"code","0c7ddab6":"code","f807276e":"code","6d75a950":"code","a0384e8a":"code","b935b280":"code","bad63234":"code","0f90c245":"code","6f2701b1":"code","23ec9336":"code","9bf69105":"code","4b1fe271":"code","7e7d564c":"code","2e38b0f4":"code","aa86c1d5":"code","acb22031":"code","0537a73c":"code","5b083a3e":"code","c911b413":"code","76002720":"code","c3517a34":"code","aa7ac865":"code","86171ad3":"code","68b8311c":"code","45c4d8e7":"code","5a715966":"code","bbe9bf98":"code","d167c7e1":"code","4cf4dcd6":"code","0635f315":"code","bddd903a":"code","91e06680":"code","374443aa":"markdown","29234433":"markdown","b3f4aea7":"markdown","2ba1ad27":"markdown","8b6cd5c2":"markdown","860e43a4":"markdown","174b519b":"markdown","4f93c49e":"markdown","fc87ce9b":"markdown","c11aab8a":"markdown","1aa0e927":"markdown","6e52f9dd":"markdown","15103282":"markdown","9e47f940":"markdown","db22b18c":"markdown","86ceac2e":"markdown","3f2bb052":"markdown","44f4fee8":"markdown","8dce702a":"markdown","6a18eb59":"markdown","360d0ebd":"markdown","b7cc9156":"markdown","fb45ddbb":"markdown","861c1a27":"markdown","c52f05a0":"markdown","2bd4120e":"markdown","bb279bb6":"markdown","a9ff9efe":"markdown"},"source":{"59d27d2d":"import pandas as pd #Analysis \nimport matplotlib.pyplot as plt #Visulization\nimport seaborn as sns #Visulization\nimport numpy as np #Analysis \nfrom scipy.stats import norm #Analysis \nfrom sklearn.preprocessing import StandardScaler #Analysis \nfrom scipy import stats #Analysis \nimport warnings \nwarnings.filterwarnings('ignore')\n%matplotlib inline\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nimport plotly.figure_factory as ff\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import mean_absolute_error","89854639":"df_train = pd.read_csv('..\/input\/train_V2.csv')\ndf_test  = pd.read_csv('..\/input\/test_V2.csv')","0c7ddab6":"df_train.shape, df_test.shape","f807276e":"df_train.head()","6d75a950":"df_test.head()","a0384e8a":"df_train[df_train['groupId']==2]","b935b280":"len(df_train[df_train['matchId']==0]) ","bad63234":"temp = df_train[df_train['matchId']==0]['groupId'].value_counts().sort_values(ascending=False)\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp)\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"GroupId of Match Id:0\",\n    xaxis=dict(\n        title='groupId',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of groupId of type of MatchId 0',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')","0f90c245":"temp = df_train['assists'].value_counts().sort_values(ascending=False)\n\n#print(\"Total number of states : \",len(temp))\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp)\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"\",\n    xaxis=dict(\n        title='assists',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of assists',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')","6f2701b1":"temp = df_train['kills'].value_counts().sort_values(ascending=False)\n\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp)\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"\",\n    xaxis=dict(\n        title='kills',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of kills',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')","23ec9336":"temp = df_train['killStreaks'].value_counts().sort_values(ascending=False)\n\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp)\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"\",\n    xaxis=dict(\n        title='killStreaks',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of killStreaks',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')","9bf69105":"temp = df_train['roadKills'].value_counts().sort_values(ascending=False)\n\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp)\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"\",\n    xaxis=dict(\n        title='roadKills',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of roadKills',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')","4b1fe271":"df_train['roadKills'].value_counts()","7e7d564c":"temp = df_train['teamKills'].value_counts().sort_values(ascending=False)\n\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp),\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"\",\n    xaxis=dict(\n        title='teamKills',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of teamKills',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')\n0","2e38b0f4":"df_train['teamKills'].value_counts()","aa86c1d5":"f, ax = plt.subplots(figsize=(18, 8))\nsns.distplot(df_train['longestKill'])","acb22031":"temp = df_train['weaponsAcquired'].value_counts().sort_values(ascending=False)\n\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp),\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"\",\n    xaxis=dict(\n        title='weaponsAcquired',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of weaponsAcquired',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')","0537a73c":"temp = df_train['headshotKills'].value_counts().sort_values(ascending=False)\n\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp),\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"\",\n    xaxis=dict(\n        title='headshotKills',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of headshotKills',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')","5b083a3e":"df_train['headshotKills'].value_counts()","c911b413":"temp = df_train['DBNOs'].value_counts().sort_values(ascending=False)\n\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp),\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"\",\n    xaxis=dict(\n        title='DBNOs',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of DBNOs',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')","76002720":"temp = df_train['boosts'].value_counts().sort_values(ascending=False)\n\n#print(\"Total number of states : \",len(temp))\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp),\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"\",\n    xaxis=dict(\n        title='boosts',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of boosts',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')","c3517a34":"temp = df_train['heals'].value_counts().sort_values(ascending=False)\n\n#print(\"Total number of states : \",len(temp))\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp),\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"\",\n    xaxis=dict(\n        title='heals',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of heals',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')","aa7ac865":"f, ax = plt.subplots(figsize=(8, 6))\nsns.distplot(df_train['damageDealt'])","86171ad3":"f, ax = plt.subplots(figsize=(8, 6))\ndf_train['revives'].value_counts().sort_values(ascending=False).plot.bar()","68b8311c":"f, ax = plt.subplots(figsize=(18, 8))\nsns.distplot(df_train['walkDistance'])","45c4d8e7":"f, ax = plt.subplots(figsize=(18, 8))\nsns.distplot(df_train['rideDistance'])","5a715966":"temp = df_train['vehicleDestroys'].value_counts().sort_values(ascending=False)\n\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp),\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"\",\n    xaxis=dict(\n        title='vehicleDestroys',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of vehicleDestroys',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')","bbe9bf98":"df_train['vehicleDestroys'].value_counts()","d167c7e1":"temp = df_train['weaponsAcquired'].value_counts().sort_values(ascending=False)\n\ntrace = go.Bar(\n    x = temp.index,\n    y = (temp),\n)\ndata = [trace]\nlayout = go.Layout(\n    title = \"\",\n    xaxis=dict(\n        title='weaponsAcquired',\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    yaxis=dict(\n        title='Count of weaponsAcquired',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n)\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='schoolStateNames')","4cf4dcd6":"import os\nimport time\nimport gc\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# data manipulation\nimport json\nfrom pandas.io.json import json_normalize\nimport numpy as np\nimport pandas as pd\n# plot\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ncolor = sns.color_palette()\n# model\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_absolute_error\nimport lightgbm as lgb","0635f315":"train_idx = df_train.Id\ntest_idx = df_test.Id\ndf_train[\"winPlacePerc\"] = df_train[\"winPlacePerc\"].astype('float')\ntrain_y = df_train[\"winPlacePerc\"]\ntrain_target = df_train.groupby(\"Id\")[\"winPlacePerc\"].mean()\n\ny_train = df_train[\"winPlacePerc\"]\nx_train = df_train.drop([\"winPlacePerc\"], axis=1)\nx_test = df_test.copy()","bddd903a":"folds = KFold(n_splits=5,random_state=6)\noof_preds = np.zeros(x_train.shape[0])\nsub_preds = np.zeros(x_test.shape[0])\n\nstart = time.time()\nvalid_score = 0\nfor n_fold, (trn_idx, val_idx) in enumerate(folds.split(x_train, y_train)):\n    trn_x, trn_y = x_train.iloc[trn_idx], y_train[trn_idx]\n    val_x, val_y = x_train.iloc[val_idx], y_train[val_idx]    \n    \n    train_data = lgb.Dataset(data=trn_x, label=trn_y)\n    valid_data = lgb.Dataset(data=val_x, label=val_y)\n    \n    params = {\"objective\" : \"regression\", \"metric\" : \"mae\", 'n_estimators':10000, 'early_stopping_rounds':100,\n              \"num_leaves\" : 30, \"learning_rate\" : 0.1, \"bagging_fraction\" : 0.9,\n               \"bagging_seed\" : 0}\n    \n    lgb_model = lgb.train(params, train_data, valid_sets=[train_data, valid_data], verbose_eval=1000) \n    \n    oof_preds[val_idx] = lgb_model.predict(val_x, num_iteration=lgb_model.best_iteration)\n    oof_preds[oof_preds>1] = 1\n    oof_preds[oof_preds<0] = 0\n    sub_pred = lgb_model.predict(x_test, num_iteration=lgb_model.best_iteration) \/ folds.n_splits\n    sub_pred[sub_pred>1] = 1 # should be greater or equal to 1\n    sub_pred[sub_pred<0] = 0 \n    sub_preds += sub_pred\n    print('Fold %2d RMSE : %.6f' % (n_fold + 1, mean_absolute_error(val_y, oof_preds[val_idx])))\n    valid_score += mean_absolute_error(val_y, oof_preds[val_idx])","91e06680":"test_pred = pd.DataFrame({\"Id\":test_idx})\ntest_pred[\"winPlacePerc\"] = sub_preds\ntest_pred.columns = [\"Id\", \"winPlacePerc\"]\ntest_pred.to_csv(\"lgb_base_model.csv\", index=False) # submission","374443aa":"- roadKills : Number of kills while in a vehicle.","29234433":"- rideDistance : Total distance traveled in vehicles measured in meters. The PUBG game is so wide that it is hard to walk around. So I ride around VEHICLE as shown in the picture below.","b3f4aea7":"- swimDistance: Total distance traveled by swimming measured in meters. The map is wide, and there are some kind of river.","2ba1ad27":"- teamKills : Number of times this player killed a teammate.","8b6cd5c2":"- weaponsAcquired : Number of weapons picked up. This game is a using gun , but it does not give a gun from the beginning. So you have to go around the map and look for weapons. In the process, you can also have heals, boosts and vehicles.","860e43a4":"- walkDistance : Total distance traveled on foot measured in meters.","174b519b":"A team kill is when a playes in a team kills a player who is in the same team. The reasons behind killing team members could be.\n\n- He's killing his team members for fun.\n- The other member have a weapon that the player wants.\n- The other member is not playing well.\n\nThere are only 4 members in a team so killing 4-6 members is not possible.","4f93c49e":"### Data description detail\nThis game is simple. Pick up your weapons, walk around, kill enemies and survive until the end. So if you look at the variables, kill and ride will come out and if you stay alive you will win.\n\nassists : The assists means that i don't kill enemy but help kill enemy. So when you look at the variable, there is also a kill. In other words, if I kill the enemy? kill +1. but if I did not kill the enemy but helped kill the enemy?assists + 1.","fc87ce9b":"Note : You can see something strange in value counts. Four people are maximum team member and I do not know what it means more than four people.\n\nMichaelApers metioned it.(https:\/\/www.kaggle.com\/c\/pubg-finish-placement-prediction\/discussion\/67742#400747)\nI noticed in a kernel that @chocozzz was concerned about why there are sometimes more than 4 players with the same groupId. This can be from any of three causes:\n\n1) The match is from a custom game\/event (If there are more than 8 in a group, it is almost definitely this one)\n\n2) The API mistakenly reported two groups as placing in the same place, and in creating groupId these groups were clumped as one larger group. This is also a contributor to the difference between \"numGroups\" and \"maxPlace\" (Teams leaving the game may also contribute).\n\n3) There is a very rare bug in the game in which more than 4 people end up in one group (I am not sure if any of these games are included in this dataset).\n\nI hope that this can help clarify group sizes.","c11aab8a":"- vehicleDestroys: Number of vehicles destroyed.","1aa0e927":"## Notebook Outline\n- 1. Competition Description\n- 2. Variable Description\n- 3. Simple EDA - waiting\n- 4. LightGBM","6e52f9dd":"### Others\n- damageDealt : Total damage dealt. Note: Self inflicted damage is subtracted. If it is not headshot, it does not die in one shot. So restores health by usingboosts or heals. damageDealt means how many bullets have ever been hit.","15103282":"Among the guns are special guns aimed at fighters at close range, and there are sniper guns that are specially designed to match enemies at long distances (The range is fixed for each gun ). So over a certain distance, all were shot by a sniper rifle.","9e47f940":"By the value count we can see that by killing someone with car is very difficult.","db22b18c":"## headshotKills - not knocked.\nHeadshotKills means that a bullet hit his head and he died right away. it is important that he died right away.\n\nDBNOs : Number of enemy players knocked.\nDBNOs variable means Number of enemy players knocked. Knocked is not dead, but can not act. so if you are knocked, your colleagues can save you (revives variable) but if you died? you don't save... :(","86ceac2e":"### Related variables with kills\nkills : Number of enemy players killed.","3f2bb052":"There are many kinds of guns in the game. So, as you can see in the picture below, the number of times you pick up a gun is several times.","44f4fee8":"## 5. LightGBM","8dce702a":"killStreaks : Max number of enemy players killed in a short amount of time.","6a18eb59":"Here we can see that  **Id** is different, but **groupId and matchId** are the same.\n\nTo illustrate this, a person A with an Id 0 and a person B with an ID 136382 are friends and have a team together (groupId). Then the same match is done, so you can assume that they entered the game with the same matchId.\n\nTo put it another way, Battlegrounds (PBUGs) have a total about 100 people per game. These 100 players have the same matchId. Among them, groupId are same as 24, so you can think that they are friends and joined the team and played together. (There are about 100 people, not necessarily 100 people.)","360d0ebd":"Here we can see that most of the players didn't even get 1 head shot kill. So we can say that getting a headshot kill is very difficult","b7cc9156":"- revives : Number of times this player revived teammates. I said above, if you knock, your teammates can save you. If a team member is saved, the revives are +1.","fb45ddbb":"There are many kinds of guns in the game. So, as you can see in the picture above, the number of times you pick up a gun is several times. but the big number like 76? does not mean the new gun acquired 76. just picked up the gun, dropped it and repeated it. (The reason behind this is almost every gun have 30 bullets in the gun, so to get the bullets the player could pick up the gun again and again but this 76 number is still strange. )","861c1a27":"If you look at the above values, you will rarely destroy a vehicle. In fact, it is very natural. It is difficult to destroy the car. And there is no profit by destroying the car. Even so, the destruction of a car can be thought of in the following sense.\n\n- The enemy was in the car and shot the car.\n- The enemy hid the car in cover and shot the car.\n- He broke a car with no meaning.\n\nThe third reason is very important. When you play games, you can meet a lot of strange people.","c52f05a0":"- longestKill : Longest distance between player and player killed at time of death. This may be misleading, as downing a player and driving away may lead to a large longestKill stat.","2bd4120e":"## 3. Variable Description\ndata description,\n\n- matchId - Integer ID to identify match. There are no matches that are in both the training and testing set.\n- groupId - Integer ID to identify a group within a match. If the same group of players plays in different matches, they will have a different groupId each time.","bb279bb6":"## 1. Competiton Description\n\nBattle Royale-style video games have taken the world by storm. 100 players are dropped onto an island empty-handed and must explore, scavenge, and eliminate other players until only one is left standing, all while the play zone continues to shrink.\n\nPlayerUnknown's BattleGrounds (PUBG) has enjoyed massive popularity. With over 50 million copies sold, it's the fifth best selling game of all time, and has millions of active monthly players.\n\nThe team at PUBG has made official game data available for the public to explore and scavenge outside of \"The Blue Circle.\" This competition is not an official or affiliated PUBG site - Kaggle collected data made possible through the PUBG Developer API.\n\nYou are given over 65,000 games' worth of anonymized player data, split into training and testing sets, and asked to predict final placement from final in-game stats and initial player ratings.\n\nWhat's the best strategy to win in PUBG? Should you sit in one spot and hide your way into victory, or do you need to be the top shot?","a9ff9efe":"what is difference boost vs heal?\nBoth of these variables are items that restore health. but the boosts immediately show the effect, and the heals show the effect slowly.\n\n- boosts : Number of boost items used.\n- heals : Number of healing items used."}}