{"cell_type":{"9eaa5b7b":"code","ca5fb5ed":"code","c0b5c29c":"code","3196c867":"code","65c73bb3":"code","719105a6":"code","3fabee4e":"code","dbb9ddd7":"code","c514fda5":"code","97814ff1":"code","6fff4cb7":"code","05993e22":"code","d26ee1f5":"code","37d710a4":"code","244868a8":"code","22a7bc66":"code","1c8e08ed":"code","a01ca1b2":"code","3d523345":"code","0abfc57c":"code","b5d53bde":"code","86aeb683":"code","4d7a1b5a":"code","425d5155":"code","58bc1a8f":"code","5a1cb14a":"code","06d10d85":"code","5380567d":"code","b66f0e69":"code","a1ef3a01":"code","bf89f77d":"code","8c08e6cf":"code","d8d28b5d":"markdown","f8b87106":"markdown","de0a814b":"markdown","4cb1e8b0":"markdown","c1f15428":"markdown","1fce83cb":"markdown","9f379bc0":"markdown","0ce60069":"markdown","2fa3c932":"markdown","cb2f862d":"markdown","a02f98b6":"markdown"},"source":{"9eaa5b7b":"!pip install bs4","ca5fb5ed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c0b5c29c":"from fastai.tabular.all import *\nfrom fastai.collab import *\nfrom bs4 import BeautifulSoup\nfrom collections import defaultdict","3196c867":"user_course_train = pd.read_csv('\/kaggle\/input\/otus-rec-sys\/user_course_train.csv')\ncourse = pd.read_csv('\/kaggle\/input\/otus-rec-sys\/course.csv', sep=';')\nassessment_train = pd.read_csv('\/kaggle\/input\/otus-rec-sys\/assessment_train.csv')","65c73bb3":"user_course_train.head(10)","719105a6":"pd.set_option('display.max_columns', None)\ncourse.head(2)","3fabee4e":"assessment_train.head()","dbb9ddd7":"old_users = list(user_course_train.user_id)\nold_users = [int(x) for x in old_users]\nassessment_users = list(assessment_train.user_id)\nassessment_users = [int(x) for x in assessment_users]","c514fda5":"def is_new_user(user_id):\n    if user_id in old_users:\n        return False\n    if user_id in assessment_users:\n        return False\n    return True\n\nprint(is_new_user(13534457))\nprint(is_new_user(287))\nprint(is_new_user(81))","97814ff1":"def is_assesment_user(user_id):\n    if user_id in old_users:\n        return False\n    if user_id in assessment_users:\n        return True\n    return False\n\nprint(is_assesment_user(13534457))\nprint(is_assesment_user(287))\nprint(is_assesment_user(81))","6fff4cb7":"def is_old_user(user_id):\n    if user_id in old_users:\n        return True\n    return False\n\nprint(is_old_user(13534457))\nprint(is_old_user(287))\nprint(is_old_user(81))","05993e22":"with open('\/kaggle\/input\/otus-rec-sys\/test_ids.txt') as f:\n    all_ids = [int(line) for line in f.readlines()]\nids = [u for u in all_ids if not is_new_user(u)]\nprint(ids[:10])","d26ee1f5":"enabled = list(course[course['visible'] == 1].id)\nenabled = [int(x) for x in enabled]","37d710a4":"rows = []\n\nfor user_id in ids:\n    for course_id in enabled:\n        rows.append(dict({'user_id': user_id, 'course_id': course_id}))\ntest_data = pd.DataFrame(rows)\ntest_data.head()","244868a8":"ratings = user_course_train[['user_id', 'course_id', 'full_paid']].copy()\nratings.rename(columns={'full_paid': 'rating'}, inplace = True)\nratings['rating'] += 1\nratings.head()","22a7bc66":"assesments = defaultdict(list)\nfor _, row in assessment_train.iterrows():\n    try:\n        assesments[int(row['user_id'])].append(int(row['course_id']))\n    except:\n        print(\"error\")\n        print(row)\nassesments[188]","1c8e08ed":"for user_id, courses_ids in assesments.items():\n    for course_id in courses_ids:\n        if len(ratings[(ratings['user_id'] == user_id) & (ratings['course_id'] == course_id)]) > 0:\n            ratings.loc[(ratings['user_id'] == user_id) & (ratings['course_id'] == course_id), 'rating'] += 1\n        else:\n            ratings.append({\n                'user_id': user_id,\n                'course_id': course_id,\n                'rating': 1\n            }, ignore_index=True)\nratings.head()","a01ca1b2":"def clean_html(html_doc):\n    soup = BeautifulSoup(str(html_doc), 'html.parser')\n    return soup.get_text()\n\ncourses = course[['id', 'title', 'salary', 'description', 'shortname', 'program', 'popularity', 'slug', 'title_latin', 'text_bibliography', 'lecturer']]\ncourses = courses[['id', 'title', 'salary', 'description', 'shortname', 'program', 'popularity', 'slug', 'title_latin', 'text_bibliography', 'lecturer']].copy()\ncourses.rename(columns={'id': 'course_id'}, inplace = True)\ncourses['description'] = courses['description'].apply(clean_html)\ncourses['program'] = courses['program'].apply(clean_html)\ncourses['text_bibliography'] = courses['text_bibliography'].apply(clean_html)\ncourses['lecturer'] = courses['lecturer'].apply(clean_html)\ncourses.head(2)","3d523345":"user_course = ratings.merge(courses)\nuser_course.head(2)","0abfc57c":"dls = CollabDataLoaders.from_df(user_course, test=test_data, valid_pct=0.1, user_name='user_id', item_name='course_id', rating_name='rating', bs=64)\ndls.show_batch()","b5d53bde":"learn = collab_learner(dls, use_nn=True, y_range=(ratings.rating.min(), ratings.rating.max()))","86aeb683":"learn.lr_find() # find learning rate","4d7a1b5a":"learn.fit_one_cycle(1, 5e-3)","425d5155":"learn.save(\"trained_model\")","58bc1a8f":"dl = learn.dls.test_dl(test_data)\npreds, y = learn.get_preds(dl=dl)","5a1cb14a":"len(preds) == len(test_data)","06d10d85":"preds[:10]","5380567d":"preds_for_users = {}\npreds_idx = 0\nfor user_id in ids:\n    user_preds = []\n    for course_id in enabled:\n        user_preds.append((course_id, preds[preds_idx][0].item()))\n        preds_idx += 1\n    user_preds = sorted(user_preds, key=lambda x: -x[1])\n    preds_for_users[user_id] = [x[0] for x in user_preds]\n        \nprint(preds_for_users[8235])","b66f0e69":"courses_for_user = defaultdict(list)\nfor _, row in ratings.iterrows():\n    courses_for_user[int(row['user_id'])].append(int(row['course_id']))\ncourses_for_user[81]","a1ef3a01":"def predict(user_id):\n    popular = [7, 1, 15]\n    if is_new_user(user_id):\n        return ' '.join([str(x) for x in popular])\n    else:\n        result = list(set(assesments[user_id]) - set(courses_for_user[user_id]))\n        result = [c for c in result if c in enabled]\n        result += preds_for_users[user_id]\n        result = [c for c in result if c not in courses_for_user[user_id]]\n        result += popular\n        result = result[:3]\n        return ' '.join([str(x) for x in result])\n    print(\"bad row\")\n    return ' '.join([str(x) for x in popular])","bf89f77d":"submission = pd.DataFrame(columns=['Id', 'Predicted'])\nfor user_id in all_ids:\n    submission = submission.append({\n        'Id': user_id,\n        'Predicted': predict(user_id)\n    }, ignore_index=True)\nsubmission.head()","8c08e6cf":"submission.to_csv('submission_fastai_final.csv', index=False)","d8d28b5d":"# \u0414\u0435\u043b\u0430\u0435\u043c \u043f\u0440\u043e\u0433\u043d\u043e\u0437 \u0434\u043b\u044f \u0441\u0442\u0430\u0440\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439","f8b87106":"# \u041d\u0430\u0443\u0447\u0438\u043c\u0441\u044f \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043e\u0442 \u0441\u0442\u0430\u0440\u044b\u0445","de0a814b":"\u0423\u0447\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c. \u0417\u0434\u0435\u0441\u044c \u044f \u0442\u043e\u0436\u0435 \u043d\u0435 \u043f\u044b\u0442\u0430\u043b\u0441\u044f \u043f\u043e\u0434\u0431\u0438\u0440\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u043e\u0434\u0435\u043b\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f, \u0434\u0430\u0436\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043f\u043e\u0442\u0435\u0440\u044c - \u0432\u0441\u0451 \u043e\u0441\u0442\u0430\u0432\u0438\u043b \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0435. \u0421\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u044b\u043b\u043e \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0435, \u0447\u0442\u043e\u0431\u044b \u0440\u0435\u0448\u0430\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e )))","4cb1e8b0":"# \u041a\u043e\u043b\u043b\u0430\u0431\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0441 fastai\n\u042d\u0442\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u044f \u0445\u043e\u0442\u0435\u043b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0435, \u043d\u043e \u043e\u043d\u043e \u043d\u0435 \u043e\u043a\u0430\u0437\u0430\u043b\u043e\u0441\u044c \u0441\u0438\u043b\u044c\u043d\u043e \u043b\u0443\u0447\u0448\u0435 \u043c\u043e\u0435\u0433\u043e \u0431\u0435\u0439\u0437\u043b\u0430\u0439\u043d\u0430, \u043f\u043e \u043a\u0440\u0430\u0439\u043d\u0435\u0439 \u043c\u0435\u0440\u0435 \u0432 \u0442\u043e\u043c \u0432\u0438\u0434\u0435, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043d\u043e \u0437\u0434\u0435\u0441\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e.  \nPrivate Score 0.26283  \nPublic Score 0.32749  \n\n\u0418\u0434\u0435\u044f:  \n\u041a\u043e\u043b\u043b\u0430\u0431\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f, \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u0430\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f (\u0430\u043d\u0433\u043b. collaborative filtering) \u2014 \u044d\u0442\u043e \u043e\u0434\u0438\u043d \u0438\u0437 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u043e\u0432 (\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0439) \u0432 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u0445, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0438\u0439 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f (\u043e\u0446\u0435\u043d\u043a\u0438) \u0433\u0440\u0443\u043f\u043f\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u0439 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0415\u0433\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0435 \u0434\u043e\u043f\u0443\u0449\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c: \u0442\u0435, \u043a\u0442\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u043b \u043a\u0430\u043a\u0438\u0435-\u043b\u0438\u0431\u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u044b \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c, \u0441\u043a\u043b\u043e\u043d\u043d\u044b \u0434\u0430\u0432\u0430\u0442\u044c \u043f\u043e\u0445\u043e\u0436\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u0434\u0440\u0443\u0433\u0438\u043c \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u043c \u0438 \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u043b\u043b\u0430\u0431\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u043c\u0443\u0437\u044b\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u043a\u0430\u043a\u0430\u044f \u043c\u0443\u0437\u044b\u043a\u0430 \u043f\u043e\u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e, \u0438\u043c\u0435\u044f \u043d\u0435\u043f\u043e\u043b\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0435\u0433\u043e \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u0439 (\u0441\u0438\u043c\u043f\u0430\u0442\u0438\u0439 \u0438 \u0430\u043d\u0442\u0438\u043f\u0430\u0442\u0438\u0439). \u041f\u0440\u043e\u0433\u043d\u043e\u0437\u044b \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0445\u043e\u0442\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0441\u043e\u0431\u0440\u0430\u043d\u0430 \u043e\u0442 \u043c\u043d\u043e\u0433\u0438\u0445 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432.","c1f15428":"# \u0414\u0435\u043b\u0430\u0435\u043c \u043e\u043a\u043e\u043d\u0447\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u0433\u043d\u043e\u0437","1fce83cb":"# \u041f\u0440\u043e\u0447\u0438\u0442\u0430\u0435\u043c \u043d\u0443\u0436\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043d\u0438\u0445","9f379bc0":"\u0414\u043b\u044f \u043a\u043e\u043b\u043b\u0430\u0431\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u044b \u043e\u0446\u0435\u043d\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043b\u044e\u0434\u0438 \u0441\u0442\u0430\u0432\u0438\u043b\u0438 \u0440\u0430\u0437\u043d\u044b\u043c \u043a\u0443\u0440\u0441\u0430\u043c. \u042f \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u043b \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0442\u0430\u043a: \u043b\u044e\u0431\u043e\u0439 \u0430\u043a\u0442 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u044f - \u044d\u0442\u043e \u043f\u043b\u044e\u0441 \u043a \u043e\u0446\u0435\u043d\u043a\u0435. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u0440\u043e\u0448\u0451\u043b \u0442\u0435\u0441\u0442 - \u043e\u0446\u0435\u043d\u043a\u0430 += 1. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0437\u0430\u043f\u0438\u0441\u0430\u043b\u0441\u044f \u043d\u0430 \u043a\u0443\u0440\u0441 - \u043e\u0446\u0435\u043d\u043a\u0430 += 1. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043e\u043f\u043b\u0430\u0442\u0438\u043b \u043a\u0443\u0440\u0441 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e - \u043e\u0446\u0435\u043d\u043a\u0430 += 1.","0ce60069":"\u0422\u0430\u043a \u0436\u0435 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u044b \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043a\u0443\u0440\u0441\u043e\u0432, \u044f \u0432\u0437\u044f\u043b \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u0438\u0441\u044c \u0443\u043c\u0435\u0441\u0442\u043d\u044b\u043c\u0438, \u0438 \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043f\u043e\u0447\u0438\u0441\u0442\u0438\u043b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e BeatifoulSoup.","2fa3c932":"\u0418\u0442\u043e\u0433\u043e\u0432\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430:","cb2f862d":"# \u0421\u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442","a02f98b6":"# \u041e\u0431\u0443\u0447\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c"}}