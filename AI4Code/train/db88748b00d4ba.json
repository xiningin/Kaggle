{"cell_type":{"69fe5fbe":"code","e33702f5":"code","28a29d47":"code","f652c6cf":"code","b6b0d9dc":"code","c3153c56":"code","f16771f5":"code","05f545fe":"code","14bea006":"code","4106b822":"code","746cf975":"code","c8a5ed33":"code","ef89421d":"code","4476644f":"code","24217b70":"code","284c067b":"code","f790898d":"code","0eec5434":"code","6e9422fa":"code","69053481":"code","2bf8a3d5":"code","c818489f":"code","0946ca36":"code","439158ae":"code","436f1176":"code","c894cbb5":"code","31a26847":"code","8145660f":"code","2a499da2":"code","c0e94207":"code","8e1c891a":"code","7148f4b1":"code","8bdd1068":"code","d00844a2":"code","cf8fc3e2":"code","ada8a053":"code","977a735a":"code","3d580330":"code","defa26cf":"code","1de5c4b7":"code","4b26f5b6":"code","052a963a":"code","32235572":"code","12849934":"code","753d7e40":"code","6a2bff29":"code","4bd5c8a5":"code","80a3a32e":"code","ac3a162a":"code","c8b63db3":"code","441dcbc5":"code","76a5e457":"code","8313e2a0":"code","3973775e":"code","59457fb8":"code","5ae55b1e":"code","62935f76":"code","9b696462":"code","34fd6bee":"code","679001f6":"code","3418ad3b":"code","f661fac1":"code","4c332d48":"code","fdc7c25a":"code","4ceb2e4a":"code","a109bed4":"code","2c926502":"code","888a5ceb":"code","027031a2":"code","7837a7f4":"code","fc7545b8":"code","14418789":"code","e2710286":"code","b9c23392":"code","2c8b36a1":"code","cba770a2":"code","ba33b6a4":"code","a045f481":"code","fc020c6f":"code","c79f2d44":"code","18bb242b":"code","c82b3c39":"code","af1f8fdd":"code","c4c0f598":"code","02a3fbf6":"code","f082bda1":"code","12d7c93e":"code","75caee74":"code","5e91dfbc":"code","2726ae67":"code","a369ab0a":"code","b82330ad":"code","25d409df":"code","90640389":"markdown","4bf8bbaa":"markdown","e6db25cb":"markdown","4c7a06fb":"markdown","515fffea":"markdown","60381fd5":"markdown","fde72066":"markdown","4bf9f580":"markdown","84f7fd05":"markdown","02bcf309":"markdown","b9ae2451":"markdown","91f63af6":"markdown","8245b287":"markdown","d2be9d60":"markdown","b2f6f69b":"markdown","6424618a":"markdown","010ea95d":"markdown","f431776f":"markdown","dcd8b799":"markdown","324dcde9":"markdown","a69b3858":"markdown","2834e65c":"markdown","16c6bd79":"markdown","4d0cc57e":"markdown","6289a9a1":"markdown","06933dfb":"markdown","7b8ae20a":"markdown","8456ff9e":"markdown","b94e5ae9":"markdown","587e7b87":"markdown","f4b39434":"markdown","ea6e9e6c":"markdown","5c0c483d":"markdown","39b1776a":"markdown"},"source":{"69fe5fbe":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport os","e33702f5":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","28a29d47":"customer = pd.read_csv(\"\/kaggle\/input\/Customer.csv\")\nprod_info = pd.read_csv(\"\/kaggle\/input\/prod_cat_info.csv\")\ntransaction = pd.read_csv(\"\/kaggle\/input\/Transactions.csv\")","f652c6cf":"customer.shape","b6b0d9dc":"prod_info.shape","c3153c56":"transaction.shape","f16771f5":"customer.head(2)","05f545fe":"prod_info.head(2)","14bea006":"# renaming \"prod_sub_cat_code\" column in 'prod_info' table to make it similar to 'transaction' table\n# to merge the both the tables easily\nprod_info.rename(columns={\"prod_sub_cat_code\":\"prod_subcat_code\"},inplace=True)","4106b822":"transaction.head()","746cf975":"# merge transaction and prod_info table and create a new table \"prod_concat\"\nprod_concat = pd.merge(left=transaction, right=prod_info,on=[\"prod_cat_code\",\"prod_subcat_code\"],how=\"left\")","c8a5ed33":"prod_concat","ef89421d":"prod_concat.isnull().sum()","4476644f":"customer.head()","24217b70":"#merge \"prod_concat\" and \"customer\" table and create the final table \"customer_final\"\ncustomer_final = pd.merge(left=prod_concat, right=customer,right_on=\"customer_Id\", left_on=\"cust_id\", how=\"left\")","284c067b":"customer_final.head()","f790898d":"customer_final.shape","0eec5434":"transaction.shape","6e9422fa":"print('''Rows of both the 'customer_final' and 'transaction' table are same. That means all the transactions done at the \n         Retail Store are present in the final table ''')","69053481":"customer_final.dtypes","2bf8a3d5":"customer_final.isnull().sum()","c818489f":"# converting \"DOB\" and \"tran_date\" from object dtype to dates\ncustomer_final[\"DOB\"] = pd.to_datetime(customer_final[\"DOB\"], format=\"%d-%m-%Y\")","0946ca36":"customer_final['DOB'].head(10)","439158ae":"customer_final[\"tran_date\"] = pd.to_datetime(customer_final[\"tran_date\"])","436f1176":"customer_final[\"tran_date\"].head(10)","c894cbb5":"customer_final.duplicated().sum()","31a26847":"# dropping duplicate rows\ncustomer_final.drop_duplicates(inplace=True)","8145660f":"customer_final.duplicated().sum()","2a499da2":"#column names of \"customer_final\" dataframe\ncustomer_final.columns","c0e94207":"# data types of all columns of \"customer_final\" dataframe\ncustomer_final.dtypes","8e1c891a":"# top 10 observations\ncustomer_final.head(10)","7148f4b1":"#bottom 10 observations\ncustomer_final.tail(10)","8bdd1068":"customer_final.describe()","d00844a2":"customer_final.loc[:,customer_final.dtypes==\"object\"].describe()","cf8fc3e2":"conti_customer = customer_final.loc[:,['prod_subcat_code','prod_cat_code', 'Qty', 'Rate', 'Tax', 'total_amt']]","ada8a053":"conti_customer.columns","977a735a":"for var in conti_customer.columns:\n    conti_customer[var].plot(kind='hist')\n    plt.title(var)\n    plt.show()","3d580330":"category_customer = customer_final.loc[:,customer_final.dtypes=='object']","defa26cf":"category_customer.head()","1de5c4b7":"plt.figure(figsize=(8,8))\nsns.countplot(category_customer['Gender'])\nplt.show()","4b26f5b6":"plt.figure(figsize=(8,8))\nsns.countplot(category_customer['Store_type'])\nplt.xlabel('Store Type')\nplt.show()","052a963a":"plt.figure(figsize=(8,8))\nsns.countplot(category_customer['prod_cat'])\nplt.xlabel('Product Category')\nplt.show()","32235572":"plt.figure(figsize=(8,8))\ncategory_customer.groupby('prod_subcat')['prod_subcat'].count().plot(kind='barh')\nplt.xlabel('Count')\nplt.ylabel('Product Subcategory')\nplt.show()","12849934":"customer_final.sort_values(by=\"tran_date\")","753d7e40":"min_date = customer_final[\"tran_date\"].min()","6a2bff29":"max_date = customer_final[\"tran_date\"].max()","4bd5c8a5":"print(\"Time period of the available transaction data is from \"+ pd.Timestamp.strftime(min_date,format=\"%d-%m-%Y\") + \" to \" + pd.Timestamp.strftime(max_date,format=\"%d-%m-%Y\"))","80a3a32e":"customer_final.head()","ac3a162a":"#count of transaction_ids where total_amt was negative\nnegative_transaction = customer_final.loc[customer_final[\"total_amt\"] < 0,\"transaction_id\"].count()","c8b63db3":"print(\"Count of transactions where the total amount of transaction was negative is\",negative_transaction)","441dcbc5":"#groupby the data set on the basis of \"Gender\" and \"prod_cat\"\nproduct_gender = customer_final.groupby([\"Gender\",\"prod_cat\"])[[\"Qty\"]].sum().reset_index()","76a5e457":"product_gender","8313e2a0":"#converting to pivot table for better view\nproduct_gender.pivot(index=\"Gender\",columns=\"prod_cat\",values=\"Qty\")","3973775e":"customer_final.head(2)","59457fb8":"customer_group = customer_final.groupby('city_code')['customer_Id'].count().sort_values(ascending =False)","5ae55b1e":"customer_group","62935f76":"plt.figure(figsize=(8,5))\ncustomer_group.plot(kind=\"bar\")\nplt.xlabel(\"City Code\")\nplt.ylabel(\"No. of customers\")\nplt.yticks(np.arange(0, 3500, step=500))\nplt.show()","9b696462":"percentage = round((customer_group[4.0] \/ customer_group.sum()) * 100,2)","34fd6bee":"percentage","679001f6":"print(\"City code 4.0 has the maximum customers and the percentage of customers from that city is \",percentage)","3418ad3b":"customer_final.head(2)","f661fac1":"customer_final.groupby(\"Store_type\")[\"Qty\",\"Rate\"].sum().sort_values(by=\"Qty\",ascending=False)","4c332d48":"print('e-Shop store sell the maximum products by value and by quantity')","fdc7c25a":"store_group = round(customer_final.pivot_table(index = \"prod_cat\",columns=\"Store_type\", values=\"total_amt\", aggfunc='sum'),2)","4ceb2e4a":"store_group","a109bed4":"store_group.loc[[\"Clothing\",\"Electronics\"],\"Flagship store\"]","2c926502":"# if we have to find total amount of both 'Clothing' and 'Electronics' from ' Flagship Store'\nstore_group.loc[[\"Clothing\",\"Electronics\"],\"Flagship store\"].sum()","888a5ceb":"gender_group = round(customer_final.pivot_table(index = \"prod_cat\",columns=\"Gender\", values=\"total_amt\", aggfunc='sum'),2)","027031a2":"gender_group","7837a7f4":"male_earning = gender_group.loc[\"Electronics\",\"M\"]","fc7545b8":"print(\"The total amount earned from Male customers under the Electronics category is\",male_earning)","14418789":"#creating a new dataframe that does not contain transactions with negative values\npos_trans = customer_final.loc[customer_final[\"total_amt\"]>0,:]","e2710286":"pos_trans","b9c23392":"# creating a dataframe that contains unique transactions \nunique_trans = pos_trans.groupby(['customer_Id','prod_cat','prod_subcat'])['transaction_id'].count().reset_index()","2c8b36a1":"unique_trans","cba770a2":"# now finding the customers which have unique transactions greater than 10\nunique_trans_count = unique_trans.groupby('customer_Id')['transaction_id'].count().reset_index()","ba33b6a4":"unique_trans_count.head()","a045f481":"unique_trans_count[unique_trans_count['transaction_id'] > 10]","fc020c6f":"print('There are no unique transactions greater than 10')","c79f2d44":"now = pd.Timestamp('now')\ncustomer_final['DOB'] = pd.to_datetime(customer_final['DOB'], format='%m%d%y')    # 1\ncustomer_final['DOB'] = customer_final['DOB'].where(customer_final['DOB'] < now, customer_final['DOB'] -  np.timedelta64(100, 'Y'))   # 2\ncustomer_final['AGE'] = (now - customer_final['DOB']).astype('<m8[Y]')","18bb242b":"customer_final.head()","c82b3c39":"customer_final['Age_cat'] = pd.cut(customer_final['AGE'],bins=[24,35,46,57],labels=['25-35','36-46','47-57'],include_lowest=True)","af1f8fdd":"customer_final.head()","c4c0f598":"# grouping the dataframe 'customer_final' on the basis of 'Age_cat' and 'prod_cat'\ncustomer_25_35 = customer_final.groupby(['Age_cat','prod_cat'])['total_amt'].sum()","02a3fbf6":"customer_25_35","f082bda1":"customer_25_35.loc['25-35',['Books','Electronics']]","12d7c93e":"print(\"Total amount spent on 'Electronics' and 'Books' product categories is\", \n      customer_25_35.loc['25-35',['Books','Electronics']].sum().round(2))","75caee74":"customer_final.head()","5e91dfbc":"# filtering out data that belongs to the 'age_cat' = 25-35\ncustomer_total_amount_25_35 = customer_final[customer_final['Age_cat']=='25-35']","2726ae67":"customer_total_amount_25_35.head()","a369ab0a":"# getting all the data with transaction date between 1st Jan 2014 to 1st Mar 2014?\ntotal_amount = customer_total_amount_25_35[(customer_total_amount_25_35['tran_date'] >='2014-01-01') & (customer_total_amount_25_35['tran_date'] <='2014-03-01')]","b82330ad":"total_amount","25d409df":"print('The total amount spent by customers aged 25-35 between 1st Jan 2014 to 1st Mar 2014 is',\n      total_amount['total_amt'].sum())","90640389":"### Histogram of all continuous variables","4bf8bbaa":"<b>A Retail store is required to analyze the day-to-day transactions and keep a track of its customers spread across various locations along with their purchases\/returns across various categories.<\/b><br><br>\n<b>Create a report and display the below calculated metrics, reports and inferences.<\/b>","e6db25cb":"# (5) Analyze which product categories are more popular among females vs male customers","4c7a06fb":"# Exploratory Data Analysis","515fffea":"# (11) For all customers aged between 25-35, find out:","60381fd5":"### (a) Get the column names and their corresponding data types","fde72066":"Products that are popular among females are:\n<ul><li>Bags<\/li>\n    <li>Footwear<\/li>\n    <\/ul>","4bf9f580":"# (3) Generate histograms for all continuous variables and frequency bars for categorical variables","84f7fd05":"Products that are popular among males are:\n<ul><li>Books<\/li>\n    <li>Clothing<\/li>\n    <li>Electronics<\/li>\n    <li>Home and kitchen<\/li><\/ul>","02bcf309":"# 1. Merge the datasets Customers, Product Hierarchy and Transactions as Customer_Final","b9ae2451":"### (b) Top\/Bottom 10 observations\n","91f63af6":"### (d) Frequency tables for all the categorical variables","8245b287":"# (7) Which store type sells the maximum products by value and by quantity?","d2be9d60":"### (a) What was the total amount spent for 'Electronics' and 'Books' product categories?","b2f6f69b":"### (c) \u201cFive-number summary\u201d for continuous variables (min, Q1, median, Q3 and max)","6424618a":"### Bar chart of categorical variables","010ea95d":"<h1 align='center'>Customer Analysis For Retail<\/h1>","f431776f":"# (9)  What was the total amount earned from \"Male\" customers under the \"Electronics\" category?","dcd8b799":"# (8) What was the total amount earned from the \"Electronics\" and \"Clothing\" categories from Flagship Stores?","324dcde9":"# 2. Prepare a summary report for the merged data set.","a69b3858":"### (a) Time period of the available transaction data","2834e65c":"# Business Problem","16c6bd79":"### (b) Count of transactions where the total amount of transaction was negative","4d0cc57e":"# (4) Calculate the following information using the merged dataset:","6289a9a1":"#### Adding new column 'age' ","06933dfb":"## Checking for duplicate values\n","7b8ae20a":"# (10) How many customers have more than 10 unique transactions, after removing all transactions which have any negative amounts?","8456ff9e":"### (b) What was the total amount spent by these customers between 1st Jan 2014 to 1st Mar 2014?","b94e5ae9":"# Import the data set","587e7b87":"# Import necessary libraries","f4b39434":"### Merge 'customer' and 'prod_concat' tables","ea6e9e6c":"# (6) Which City code has the maximum customers and what was the percentage of customers from that city?","5c0c483d":"### Merge 'transaction' and 'prod_info' tables","39b1776a":"#### as we have to deal with customers aged between 25-35, so creating new column 'Age_cat'"}}