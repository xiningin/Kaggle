{"cell_type":{"1c2a5e99":"code","2ed3a815":"code","d1486d68":"code","9f8741c7":"code","e8cce237":"code","28828612":"code","e52f7390":"code","1bb5b53c":"code","b5cde2e1":"code","2946483b":"code","61b456e6":"markdown","51114090":"markdown","2282cfe2":"markdown","b66a4401":"markdown","9bb729c0":"markdown","9e83162f":"markdown","09094912":"markdown","5b6b3157":"markdown","ee2007df":"markdown","cc05030f":"markdown"},"source":{"1c2a5e99":"import pandas as pd\n\n#here we have imported the dataset from kaggle.\ncity_tempdf = pd.read_csv('..\/input\/daily-temperature-of-major-cities\/city_temperature.csv')\n\n#first 8 rows of the dataset\ncity_tempdf.head(8)","2ed3a815":"# .shape is a non callable function which returns rows and columns as tuple.\nshapeofdata = city_tempdf.shape\nprint(f\"Rows : {shapeofdata[0]} | columns : {shapeofdata[1]}\")\n\n#a snippet to check\n#callable(city_tempdf.shape)","d1486d68":"# df.sample(x) method returns the random rows for specified number x\n\nnew_city_tempdf = city_tempdf.sample(4000)\n#new_city_tempdf.shape\n","9f8741c7":"#first 10 rows of newly sampled dataset\nnew_city_tempdf.head(10)","e8cce237":"#df.isnull().sum() --> returns the sum of null values\n\nnew_city_tempdf['State'].isnull().sum()","28828612":"#df.drop(columnname, axis=1) ---> deletes the column\n\nsuper_new_ctdf = new_city_tempdf.drop('State',axis=1)\nsuper_new_ctdf","e52f7390":"#adding some random values to the column\nsuper_new_ctdf['Country-Code'] = [i for i in range(0,4000)]\nsuper_new_ctdf","1bb5b53c":"#series.unique()--> returns the unique values Note:- this can be used on series not on dataframe\n#so, all the time we take a column. For more info look into the documentation.\ncountry_list = super_new_ctdf['Country'].unique()\ncountry_list = list(country_list)\nprint(len(country_list))","b5cde2e1":"result=[]\ndef assignnumbers(val,country_list):\n    global result\n    if val in country_list:\n        result.append(country_list.index(val))\nsuper_new_ctdf['Country'].apply(lambda val:assignnumbers(val,country_list))\n\n#adding the result list to column\n\nsuper_new_ctdf['Country-Code'] = result\nsuper_new_ctdf.head(8)","2946483b":"#grouping country based on caountry-code\nrandvar = super_new_ctdf.groupby('Country')['Country-Code']\nprint(list(randvar))\n\n#below its clear that all the countries have a unique code.","61b456e6":"As we can see from the above cell we have mammoth of 2906327 rows which is very huge so, for the sake of simplicity we will take random rows of size 4000.","51114090":"There are 2012 Nan Values in the state column, more than half of the values. so,we will delete the state column.","2282cfe2":"In the above cell we have successfully added a new column 'Country-Code ' to check if its the same throughout, we take groupby method and cross-check.","b66a4401":"Just take a look at the column 'State',there are a lot of NaN data points. This can be attributed to inconsistency in data entry and makes sense to delete the column But, nonetheless we need to look at the sum of Nan data points before.","9bb729c0":"As we can see from the above cell the dataset contains 8 columns. I guess its understandable at first glance.In next cell we will get some info about the dataset.","9e83162f":"There are 125 unique countries in our list and each has an index. We will use .apply function and iterate over our 'Country' column and append the index value of respective countries to a list and later set the country-code column to list. Job done!!","09094912":"To Add unique code to each country, first lets find all the unique countries in our 'Country' column and convert the resultant array into list.","5b6b3157":"First let us import the required libaries,dataset and understand the data.","ee2007df":"Now we will proceed to add the column 'Country-Code'.\n","cc05030f":"# Daily temperature of major cities is one of the most widely used dataset by a margin. In this notebook we will see how to add a column named 'Country-Code', assigning a unique value to each country and storing the same in 'Country-Code'."}}