{"cell_type":{"d7838f9b":"code","2ce7fafc":"code","399bb05d":"code","5472c401":"code","f94a328e":"code","e2209b36":"code","8de83c33":"code","4128c80e":"code","d2df7662":"code","12be1ca7":"markdown","a3d45808":"markdown","94809162":"markdown","9053033b":"markdown","5fa10f58":"markdown","aa2b4b34":"markdown","a9048c7e":"markdown"},"source":{"d7838f9b":"import numpy as np\nimport matplotlib.pyplot as plt\n\nmarch = np.array([\\\n311.0, 317.5, 320.5, 323.0, 315.0,\\\n305.5, 307.0, 302.0, 294.0, 290.0,\\\n276.5, 268.0, 260.0, 248.0, 270.0,\\\n255.0, 267.5, 277.0, 280.0, 273.0,\\\n267.5, 274.0])\n\napril = np.array([\\\n271.5, 275.5, 283, 285, 283,\\\n279.5, 278.5, 285, 287.5, 286.5,\\\n306.5, 304, 295, 294, 295.5,\\\n294, 298, 296.5, 299, 304.5])\n\nadiff = np.diff(march)\nbdiff = np.diff(april)\n\nprint(\"\u5e73\u5747\u6578:\", np.mean(bdiff))\nprint(\"\u4e2d\u4f4d\u6578:\", np.median(bdiff))\nprint(\"\u8b8a\u7570\u6578:\", np.var(bdiff))\nprint(\"\u6a19\u6e96\u5dee:\", np.std(bdiff))\nprint(\"\")\n\nprint(\"\u5e73\u5747\u6578:\", np.mean(adiff))\nprint(\"\u4e2d\u4f4d\u6578:\", np.median(adiff))\nprint(\"\u8b8a\u7570\u6578:\", np.var(adiff))\nprint(\"\u6a19\u6e96\u5dee:\", np.std(adiff))\nprint(\"\")\n\nplt.boxplot([bdiff,adiff])\nplt.show()\n\nplt.boxplot([bdiff,adiff], showmeans = True)\nplt.show()","2ce7fafc":"def add(a,b): return a+b\ndef sub(a,b): return a-b\ndef mul(a,b): return a*b\ndef div(a,b): return a\/b\n\nx = 30\ny = 7.0\n\nprint(add(x,y))\nprint(sub(x,y))\nprint(mul(x,y))\nprint(div(x,y))","399bb05d":"def calculator(a,c,b):\n    if c == '+': return a+b\n    elif c == '-': return a-b\n    elif c == '*': return a*b\n    elif c == '\/': return a\/b\n    else: return \"ERROR\"\n    \nx = 30\ny = 7.0\n\nprint(calculator(x,'+',y))\nprint(calculator(x,'-',y))\nprint(calculator(x,'*',y))\nprint(calculator(x,'\/',y))","5472c401":"import numpy as np\nimport matplotlib.pyplot as plt\n\nplt.rcParams['font.size'] = 14\n\nusd=np.array([27.85,27.85,27.853,27.866,27.882,27.842,27.772,27.785,27.84,27.836,27.782,27.79,27.815,27.803,27.795,27.783,27.809,27.793,27.801,27.836,27.807,27.81])\nbitcoin=np.array([60915.30,63221.70,62918.50,61412.60,60974.30,67527.90,66904.40,64932.60,64806.70,64134.50,63597.90,60089.10,60367.80,56955.30,58083.40,56308.80,57573.20,57171.70,58935.10,53730.90,57794.80,56882.90])\n\ncoef = np.polyfit(usd,bitcoin,1)\nreg_model = np.poly1d(coef)\n\nplt.scatter(usd,bitcoin, color = 'green')\nplt.plot(usd, reg_model(usd), color = 'red', label = 'model')\nplt.title(\"prediction analysis\")\nplt.xlabel(\"USD\")\nplt.ylabel(\"BTC\")\nplt.legend()\nplt.grid(1)\nplt.show()\n\npeople = np.array([  4,   5,   8,   8,   7,  13,   5,   5,   1,  15,  11,  21,  25, 34, 185, 207, 335, 243, 273, 292, 314, 723, 460, 595, 539, 635, 670, 554, 491, 354, 331])\npoint = np.array([17505.52, 17505.52, 17505.52, 17249.56, 16968.75, 16925.52,17032.23, 17032.23, 17032.23, 17274.23, 17137.19, 16515.88, 15668.33, 15819.24, 15819.24, 15819.24, 15554.99, 15564.96, 16112.21, 16122.52, 16136.86, 16136.86, 16136.86, 16246.52, 16444.75, 16645.17, 16591.7 , 16690.04, 16690.04, 16690.04, 16948.47])\n\ncoef = np.polyfit(people,point,1)\nreg_model = np.poly1d(coef)\n\nplt.scatter(people,point, color = 'green')\nplt.plot(people, reg_model(people), color = 'red', label = 'model')\nplt.title(\"prediction analysis\")\nplt.xlabel(\"people\")\nplt.ylabel(\"point\")\nplt.legend()\nplt.grid(1)\nplt.show()\n\ntw = np.array([5950.49,5916.62,5926.67,6024.66,6023.71,6034.34,6085.62,6085.48,6090.2,6057.21,6030.83,6009.66,5964.86,5940.79,5978.63,5974.36,5817.92,5834.7,5812.73,5819.13\n])\ntsmc = np.array([596,593,596,603,603,612,615,618,610,610,608,604,606,612,611,602,600,587,592,592])\ncoef = np.polyfit(tw,tsmc,1)\nreg_model = np.poly1d(coef)\n\nplt.scatter(tw,tsmc, color = 'green')\nplt.plot(tw, reg_model(tw), color = 'red', label = 'model')\nplt.title(\"prediction analysis\")\nplt.xlabel(\"TW\")\nplt.ylabel(\"TSMC\")\nplt.legend()\nplt.grid(1)\nplt.show()","f94a328e":"\nprint(len(tsmc), len(tw))\n","e2209b36":"import numpy as np\nimport matplotlib.pyplot as plt\n\nplt.rcParams['font.size'] = 13\n\na = np.array([51655,52345,52677,56223,55318,56917,58858,68559,69149,73236,80799,82568])\nb = np.array([36343,34441,39164,36485,36204,43786,49037,49472,50628,53438,62880,64510])\ncoef = np.polyfit(a,b,1)\nreg_model = np.poly1d(coef)\n\nprint(np.corrcoef(a,b))\nprint(reg_model)\n\nplt.scatter(a,b, color = 'blue')\nplt.plot(a, reg_model(a), color = 'blue', label = reg_model)\nplt.title(\"regression chart\")\nplt.xlabel(\"salary\")\nplt.ylabel(\"employees\")\nplt.legend()\nplt.grid(1)\nplt.show()","8de83c33":"import matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.font_manager as fm\nimport os\n\n#wget https:\/\/fonts.google.com\/download?family=Noto%20Sans%20TC -O font.zip\n\ndef change_matplotlib_font():\n   \n    font_files = fm.findSystemFonts(fontpaths=\"..\/input\/hw12week\/Noto_Sans_TC\")\n    for font_file in font_files:\n        fm.fontManager.addfont(font_file)\n\n    font_name = fm.FontProperties(fname=font_files[0]).get_name()\n    matplotlib.rc('font', family=font_name)\n    print(\"font family: \", plt.rcParams['font.family'])\n\nchange_matplotlib_font()","4128c80e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.rcParams['font.size'] = 13\nplt.rcParams['font.family'] = 'Noto Sans TC'\n\nCSV_PATH = \"..\/input\/hw12week\/HW3_2.csv\"\n\ndf = pd.read_csv(CSV_PATH, usecols = ['\u7537\u751f\u8a08','\u5973\u751f\u8a08'])\n\nprint(df.sum())\n\nsns.pairplot(df, kind = 'reg', height = 4, diag_kws = dict(bins = 10))\n\nplt.show()","d2df7662":"from sklearn.datasets import load_diabetes\n\ndata = load_diabetes().data\n\ntarget = load_diabetes().target\n\nfrom sklearn.model_selection import train_test_split\ntrainx, testx, trainy, testy = train_test_split(data, target, test_size = 0.2)\n\nfrom sklearn.linear_model import LinearRegression\n\nreg_mod = LinearRegression().fit(trainx, trainy)\n\nprint(reg_mod.score(trainx, trainy).round(3))\nprint(reg_mod.score(testx, testy).round(3))\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nprd = reg_mod.predict(testx)\nx = np.arange(prd.size)\n\nplt.scatter(x, prd - testy)\nplt.plot(x,x*0,color = 'red')\nplt.show()","12be1ca7":"# 1\/2","a3d45808":"# 12\/16","94809162":"# LAB3","9053033b":"# LAB2","5fa10f58":"# LAB1","aa2b4b34":"import numpy as np\nimport matplotlib.pyplot as plt\n\nscore = np.array([76,52,62,80,58,72,100,52,48,74,68,62,80,44,52,70,82,84,80,52,76,96,92,88,48,80,64,52,64,40,52,48,68,94,84,74,66,56,100,52,68,70,84,44,76,62,64,32,68,94])\n\n\nplt.plot(score)\nplt.show\nplt.boxplot(np.diff(score))\nplt.show()\nplt.boxplot(score)\nplt.show()","a9048c7e":"# 12\/2 LAB"}}