{"cell_type":{"8b6a44a3":"code","937f0b13":"code","15e880d3":"code","90c3706d":"code","fe53e438":"code","95cbbf3a":"code","dd954885":"code","c6256985":"code","2ab0e35a":"code","d29f22fc":"code","a6ea6d75":"code","a0803a4b":"code","94589d73":"code","dd9e891b":"code","bee98a31":"code","f2429fec":"markdown","e0dba4bb":"markdown","b70b7f5d":"markdown"},"source":{"8b6a44a3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","937f0b13":"data = pd.read_csv('..\/input\/Iris.csv')","15e880d3":"data.info()","90c3706d":"fig, ax = plt.subplots(1, 2, figsize = (20, 7))\nax = sns.scatterplot(x = 'SepalLengthCm', y = 'SepalWidthCm', data = data, hue = 'Species', ax = ax[0])\nax1 = sns.scatterplot(x = 'PetalLengthCm', y = 'PetalWidthCm', data = data, hue = 'Species')","fe53e438":"fig, ax = plt.subplots(1, 2, figsize = (20, 7))\nax = sns.regplot(x = 'SepalLengthCm', y = 'SepalWidthCm', data = data, ax = ax[0])\nax1 = sns.regplot(x = 'PetalLengthCm', y = 'PetalWidthCm', data = data)","95cbbf3a":"d = data.drop('Id', axis = 1)\nfig = plt.figure(figsize = (10, 10))\nax = sns.pairplot(d, hue= 'Species')","dd954885":"data.drop('Id', axis = 1, inplace = True)\ndata.info()","c6256985":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn import svm\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier","2ab0e35a":"train, test = train_test_split(data, test_size = 0.3)\nprint(train.shape)\nprint(test.shape)","d29f22fc":"train_X = train.drop('Species', axis = 1)\ntrain_y = train['Species']\ntest_X = test.drop('Species', axis = 1)\ntest_y = test['Species']\n","a6ea6d75":"test_X.head()","a0803a4b":"model = LogisticRegression()\nmodel.fit(train_X, train_y)\nprediction = model.predict(test_X)\nprint(\"Accuracy = {}\".format(metrics.accuracy_score(prediction, test_y)))","94589d73":"model = svm.SVC()\nmodel.fit(train_X, train_y)\nprediction = model.predict(test_X)\nprint(\"Accuracy = {}\".format(metrics.accuracy_score(prediction, test_y)))","dd9e891b":"model = DecisionTreeClassifier()\nmodel.fit(train_X, train_y)\nprediction = model.predict(test_X)\nprint(\"Accuracy = {}\".format(metrics.accuracy_score(prediction, test_y)))","bee98a31":"model = KNeighborsClassifier(n_neighbors=2)\nmodel.fit(train_X, train_y)\nprediction = model.predict(test_X)\nprint(\"Accuracy = {}\".format(metrics.accuracy_score(prediction, test_y)))","f2429fec":"Creating Machine Learning Model","e0dba4bb":"The data is scatter plotted and the three classes are represented here.","b70b7f5d":"The lines represent the linear regression fit in the data and the adjascent coloured area represent approximate confidenceinterval for the data.\nHere, we can see that there is a more or less linear relationship between the dimensions of the petals, unlike the sepals."}}