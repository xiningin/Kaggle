{"cell_type":{"e1cda86b":"code","656472f0":"code","db1e4b3c":"code","d57f8f57":"code","dd51dec9":"code","0ad20249":"code","c1627cb5":"code","6ef57091":"code","e8c26605":"code","da0d3651":"code","edcebda5":"code","68e2e65c":"code","0a38b156":"code","dc57cdaa":"code","09db435c":"code","8caaafa4":"code","20cf07d8":"code","27fbfb9c":"code","61edb060":"code","49677d90":"code","87e96672":"code","1cf1a6e8":"code","f444d11d":"code","0cee7d1a":"code","2946023c":"code","eb3eca0b":"code","852fd01d":"code","9a566104":"code","67347e4a":"code","a73b9d9a":"code","2aa1ad6f":"code","5285a953":"code","b1942f79":"code","7b0edd71":"code","a111ea06":"code","21830f0c":"code","bdf5f7e2":"code","4d0f9ff7":"code","687d036b":"code","69cd63da":"code","894264b5":"code","ebd06c45":"code","f8f34da8":"code","0d3226a3":"code","baa50eee":"code","6f4c8659":"code","8f22e7d8":"code","79741caa":"code","4096f3e2":"code","ebcd391b":"markdown","56e638af":"markdown","782991be":"markdown","c3d922a4":"markdown","3e583384":"markdown","9761ee3f":"markdown","9e309b8e":"markdown","87009940":"markdown","1107cf31":"markdown","5b5b1ee0":"markdown"},"source":{"e1cda86b":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nfrom sklearn.tree import DecisionTreeRegressor\nimport sklearn\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.linear_model import Lasso","656472f0":"df=pd.read_csv(\"..\/input\/top50spotify2019\/top50.csv\",encoding='latin-1')","db1e4b3c":"df.head(2)","d57f8f57":"df.shape","dd51dec9":"df.describe()","0ad20249":"df.info()","c1627cb5":"#now we know the data and the columns shape and mean and other values , lets undestand the  data by plotting the varaivles or the features","6ef57091":"#data_plot=pd.DataFrame['Energy','Danceability']\nsns.pairplot(df)\nplt.figure(figsize=(10,10))","e8c26605":"sns.distplot(df['Energy'],hist=False,kde=True)","da0d3651":"sns.distplot(df['Danceability'],hist=False,kde=True)","edcebda5":"plt.scatter(df.Danceability,df.Energy,data=df,alpha=0.8)\nplt.show()","68e2e65c":"plt.scatter(df.Danceability,df.Popularity,data=df,alpha=0.8)\nplt.xlabel('dance')\nplt.ylabel('Popularity')\nplt.show()","0a38b156":"#from the columns diaplyed below, we have some discrepency in the coulmns","dc57cdaa":"df.columns","09db435c":"#lets rename the cplumns to make all the columns looks in sync","8caaafa4":"df.rename(columns={'Unnamed: 0':'unnamed','Track.Name':'TrackName','Artist.Name':'ArtistName',\n                   'Beats.Per.MinuteBeatsPerMinute':'BeatsPerMinute','Loudness..dB..':'Loudnesdf','Valence.':'Valence',\n                   'Acousticness..':'Acousticness','Speechiness.':'Speechiness','Beats.Per.Minute':'BeatsPerMinute',\n                   'Length.':'Length','Track.Name':'TrackName',\n                   'Artist.Name':'ArtistName'},inplace=True)\n","20cf07d8":"df.columns","27fbfb9c":"plt.figure(figsize=(10,10))\ncorr=df.corr()\nsns.heatmap(corr,annot=True)","61edb060":"#by  the above correlation heatma , we can get a clear picture of how each varaible is corealted with the other varaible","49677d90":"df.Genre.unique()","87e96672":"leble_en=preprocessing.LabelEncoder()\ndf['Genre']=leble_en.fit_transform(df['Genre'])","1cf1a6e8":"#lable encoder is the technique of converting categorical variable to continious variable","f444d11d":"df['Genre'].unique()","0cee7d1a":"\n\nx=df.drop(['Popularity','TrackName','unnamed','ArtistName'],axis=1)\ny=df['Popularity']\n","2946023c":"#for our analysis , lets consider popularity is the Target variable which needs to predicted .\n#and in source data we dones needs to above columns which are not adding much value to the prediction","eb3eca0b":"x_train,x_test,y_train,y_tes=train_test_split(x,y,test_size=0.8,random_state=20)","852fd01d":"le_reg=LinearRegression()\nle_reg.fit(x_train,y_train)\npredict_linear_reg=le_reg.predict(x_test)","9a566104":"sqrt(mean_squared_error(predict_linear_reg,y_tes))","67347e4a":"result=pd.DataFrame({'actual':y_tes,'cal':predict_linear_reg,'diff':abs(y_tes-predict_linear_reg)})","a73b9d9a":"result.head(2)","2aa1ad6f":"#The root mean square value with Linear Regression is 7.5 lets see if we can bring it to down using other models","5285a953":"logistic_reg=LogisticRegression()\nlogistic_reg.fit(x_train,y_train)\nlogic_pred=logistic_reg.predict(x_test)","b1942f79":"sqrt(mean_squared_error(logic_pred,y_tes))","7b0edd71":"#The root mean square error optained by using Logistic Regression is 6.48.Good sign lets see if the error can be\n#reducted further\n","a111ea06":"model=DecisionTreeRegressor()\nmodel.fit(x_train,y_train)\npredict_dec=model.predict(x_test)","21830f0c":"sqrt(mean_squared_error(predict_dec,y_tes))","bdf5f7e2":"plt.plot(predict_dec,y_tes)","4d0f9ff7":"#The root mean square error optained by using Decision Tree Regression is 5.6.","687d036b":"knn_model=KNeighborsRegressor()\nknn_model.fit(x_train,y_train)\nknn_model_predict=knn_model.predict(x_test)","69cd63da":"sqrt(mean_squared_error(knn_model_predict,y_tes))","894264b5":"#The root mean square error optained by using KNeighbor Regression is 5.12 [preety god sign]","ebd06c45":"#lets try if we can further reduce with different values of K","f8f34da8":"model_lasso=Lasso()\nmodel_lasso.fit(x_train,y_train)\nlasso_pred=model_lasso.predict(x_test)","0d3226a3":"sqrt(mean_squared_error(lasso_pred,y_tes))","baa50eee":"#poor , lasso  Regression doesnt help much here","6f4c8659":"#RandomForestRegressor","8f22e7d8":"model_random=RandomForestRegressor()\nmodel_random.fit(x_train,y_train)\nrandom_pred=model_random.predict(x_test)","79741caa":"sqrt(mean_squared_error(random_pred,y_tes))","4096f3e2":"#The root mean square error obtained with random forest is the least of all with an error as 5.10","ebcd391b":"# Letse see the data and some stats around it ","56e638af":"# KNeighbors","782991be":"# Logistic Regression","c3d922a4":"# Lets start with Linear Regession model","3e583384":"# Decision Tree","9761ee3f":"speechiness and beats per minute are highly correlated\nLoundness and energy as well\n","9e309b8e":"# Lasso Regression","87009940":"renamed the column names to make consistency","1107cf31":"some column names have extra values like '.' .","5b5b1ee0":"The encoding techinque of 'latin-1' is used because we have some characteristics\/ alphabets whihc are not english"}}