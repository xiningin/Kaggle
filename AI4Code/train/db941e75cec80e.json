{"cell_type":{"9eb1c012":"code","28b8ec68":"code","d30c71b8":"code","70bc45f6":"code","194bfb1f":"code","02845d12":"code","52e065aa":"code","6807e0c2":"code","7bf03cfe":"code","52469197":"code","b95314b5":"code","2d782bb8":"code","385d1a44":"code","bf25e073":"code","877572ef":"code","b883780d":"code","fe2c32b3":"code","04afc337":"code","b7fbaf27":"code","d92c1dfe":"code","ccb2720e":"code","721158ef":"code","72c72820":"code","b9024204":"code","311a548c":"code","c16cea1c":"code","ab313c11":"code","076463c9":"code","5cd1fa5e":"code","20b40e87":"code","6b4b6832":"markdown","977435d8":"markdown","e08c8b72":"markdown","7431e9fd":"markdown","ddcbf18b":"markdown","bca4a5d1":"markdown","15c1d0cf":"markdown","45aa1d2e":"markdown","a6321054":"markdown","f1016f7c":"markdown","cd824b34":"markdown","ea098519":"markdown","33ac7c98":"markdown","db317b14":"markdown","fb2ed045":"markdown","a4820604":"markdown","134b8f75":"markdown","d989af54":"markdown","75dc959d":"markdown","ab9a7cfd":"markdown"},"source":{"9eb1c012":"!pip install pycaret","28b8ec68":"from pycaret.classification import *","d30c71b8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","70bc45f6":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\nsample = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","194bfb1f":"train.head()","02845d12":"setup?","52e065aa":"exp_clf101 = setup(data=train, target='Survived',\n                   train_size=0.8,\n                   numeric_imputation = 'mean',\n                   silent = True,\n                   session_id=123) ","6807e0c2":"compare_models()","7bf03cfe":"dt = create_model('dt')","52469197":"print(dt)","b95314b5":"knn = create_model('knn')","2d782bb8":"rf = create_model('rf')","385d1a44":"tuned_dt = tune_model('dt')","bf25e073":"tuned_knn = tune_model('knn')","877572ef":"tuned_rf = tune_model('rf')","b883780d":"plot_model(tuned_rf, plot = 'auc')","fe2c32b3":"plot_model(tuned_rf, plot = 'pr')","04afc337":"plot_model(tuned_rf, plot='feature')","b7fbaf27":"plot_model(tuned_rf, plot = 'confusion_matrix')","d92c1dfe":"evaluate_model(tuned_rf)","ccb2720e":"predict_model(tuned_rf);","721158ef":"final_rf = finalize_model(tuned_rf)\n#Final Random Forest model parameters for deployment\nprint(final_rf)","72c72820":"predict_model(final_rf);","b9024204":"unseen_predictions = predict_model(final_rf, data=test)\nunseen_predictions.head()","311a548c":"save_model(final_rf,'Final RF Model 08Feb2020')","c16cea1c":"saved_final_rf = load_model('Final RF Model 08Feb2020')","ab313c11":"new_prediction = predict_model(saved_final_rf, data=test)","076463c9":"sample['Survived'] = (new_prediction['Score'] > 0.5).astype(np.int)","5cd1fa5e":"sample.head()","20b40e87":"sample.to_csv('submission.csv', index=False)","6b4b6832":"# Finalize Model for Deployment","977435d8":"## 8.1 Decision Tree Classifier","e08c8b72":"## Saving the model","7431e9fd":"## K Neighbors Classifier","ddcbf18b":"# Create a Model","bca4a5d1":"# 8.3 Random Forest Classifier","15c1d0cf":"# Comparing All Models","45aa1d2e":"## Confusion Matrix","a6321054":"## Decision Tree Classifier","f1016f7c":"#  Loading the saved model","cd824b34":"# submit","ea098519":"## Precision-Recall Curve","33ac7c98":"## K Neighbors Classifier","db317b14":"## AUC Plot","fb2ed045":"This notebook is based on the code from [this official tutorial](https:\/\/pycaret.org\/clf101\/).","a4820604":"# Plot a Model","134b8f75":"# Predict on test \/ hold-out Sample","d989af54":"## Random Forest Classifie","75dc959d":"# tuned model","ab9a7cfd":"## Feature Importance Plot"}}