{"cell_type":{"ff5a9ade":"code","b7bf7b6e":"code","586f5ef7":"code","df9eba4a":"code","80e66f96":"code","044439fd":"code","ec9d97a5":"code","c4b335b2":"code","e0f3ab26":"code","7297acba":"code","0fedf3f2":"code","098e673d":"code","0c160e90":"code","10982815":"code","5755d7a9":"code","838f3cc8":"code","c56f0377":"code","22505614":"code","6f04b0e4":"code","f552fa9a":"code","13477119":"code","bff1ae6a":"code","b5b20aab":"code","4bbf108e":"markdown","e7e953d1":"markdown","b95dcdfe":"markdown","759551a5":"markdown","be8b2516":"markdown","079e2bad":"markdown","87186971":"markdown","399b00f9":"markdown","59051b06":"markdown"},"source":{"ff5a9ade":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b7bf7b6e":"# Importing\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","586f5ef7":"# Loading data\ndf = pd.read_csv('..\/input\/predict-pizza-price\/Pizza-Price.csv')","df9eba4a":"df","80e66f96":"# Renaming ' Size by Inch'\ndf.rename(columns={' Size by Inch': 'Size by Inch'}, inplace=True)","044439fd":"df.describe()","ec9d97a5":"df.info()","c4b335b2":"df.isnull().sum()","e0f3ab26":"# Extra Cheeze\nsns.boxplot(x=df['Extra Cheeze'], y=df['Price'])","7297acba":"# Extra Mushroom\nsns.boxplot(x=df['Extra Mushroom'], y=df['Price'])","0fedf3f2":"# Extra Spicy\nsns.boxplot(x=df['Extra Spicy'], y=df['Price'])","098e673d":"# Size by Inch\nsns.boxplot(x=df['Size by Inch'], y=df['Price'])","0c160e90":"# Size and extra cheeze\nsns.barplot(x=df['Size by Inch'], y=df['Price'], hue=df['Extra Cheeze'] )","10982815":"# Size and extra mushroom\nsns.barplot(x=df['Size by Inch'], y=df['Price'], hue=df['Extra Mushroom'] )","5755d7a9":"# Size and extra spicy\nsns.barplot(x=df['Size by Inch'], y=df['Price'], hue=df['Extra Spicy'] )","838f3cc8":"# string(yes\/no) to 1\/0\ndf.replace('yes', 1, inplace=True)\ndf.replace('no', 0, inplace=True)\ndf","c56f0377":"# Making input\/target data\npizza_input = df[['Extra Cheeze', 'Extra Mushroom', 'Size by Inch', 'Extra Spicy']].to_numpy()\npizza_target = df['Price'].to_numpy()","22505614":"# Split train\/test data\nfrom sklearn.model_selection import train_test_split","6f04b0e4":"train_input, test_input, train_target, test_target \\\n= train_test_split(pizza_input, pizza_target, test_size=1\/4, random_state=3)","f552fa9a":"from sklearn.neighbors import KNeighborsRegressor\n\nknr = KNeighborsRegressor()\nknr.n_neighbors = 3\nknr.fit(train_input, train_target)\nprint(knr.score(train_input, train_target))\nprint(knr.score(test_input, test_target))","13477119":"from sklearn.tree import DecisionTreeClassifier\n\ndt = DecisionTreeClassifier()\ndt.fit(train_input, train_target)\nprint(dt.score(train_input, train_target))\nprint(dt.score(test_input, test_target))","bff1ae6a":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier()\nrf.fit(train_input, train_target)\nprint(rf.score(train_input, train_target))\nprint(rf.score(test_input, test_target))","b5b20aab":"from sklearn.neighbors import KNeighborsClassifier\n\nknc = KNeighborsClassifier()\nknc.fit(train_input, train_target)\nprint(knc.score(train_input, train_target))\nprint(knc.score(test_input, test_target))","4bbf108e":"## Visualization","e7e953d1":"### 4. KNeighborsClassifier","b95dcdfe":"### 3. Random Forest","759551a5":"## EDA","be8b2516":"## Preparation ","079e2bad":"## Test models","87186971":"### 1. KNeighborsRegressor","399b00f9":"### 2. DecisionTree","59051b06":"## Preprocessing"}}