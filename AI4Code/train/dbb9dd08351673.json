{"cell_type":{"18fb78e5":"code","82fb1de8":"code","d20563f5":"code","37959ead":"code","97a67ccc":"code","8de44319":"code","456ba042":"code","ecdebbcd":"code","1194a747":"code","7d2a7795":"code","e91c74f4":"code","6f2eeef4":"code","b58ba8ac":"code","3c8556ad":"code","9fafa18f":"code","4006b373":"code","d76eaf29":"code","8b7664a6":"code","7b2d6401":"code","232d5df1":"code","962960da":"code","316e62b7":"code","6d887d95":"code","ba76cca9":"code","b508ac2a":"code","b1e7f2e9":"markdown","6ca241de":"markdown","d122a36e":"markdown","89fb1538":"markdown","ec5c6d03":"markdown","9fbb3b2a":"markdown","2b41225b":"markdown","82a1a9d8":"markdown","c1391940":"markdown","a75a025d":"markdown","3ca8a960":"markdown","4e7b27e0":"markdown","2471aeab":"markdown","55dd5e9a":"markdown","adcc8e6f":"markdown","b5c88e0a":"markdown","5069a3f0":"markdown","9f60343b":"markdown","5fc4bc1b":"markdown","1d866386":"markdown","62591aba":"markdown","ed6377d0":"markdown","f374de15":"markdown","685f6cc0":"markdown","cf5c6296":"markdown"},"source":{"18fb78e5":"import numpy as np\nimport pandas as pd \nimport sys\nimport matplotlib.pyplot as plt\nimport seaborn as sns","82fb1de8":"# Getting to know the type of scalar\na = 5\nb = 7.5\nprint(type(a))\nprint(type(b))","d20563f5":"# External type casting\na=float(a)\nprint(type(a))","37959ead":"# Is Scalar Function\ndef isscalar(num):\n    if isinstance(num, generic):\n        return True\n    else:\n        return False\n\nprint(np.isscalar(3.1))\nprint(np.isscalar([3.1,3.2]))\nprint(np.isscalar(False))","97a67ccc":"import numpy as np\n\n# Declaring Vectors\n\nx = [1, 2, 3]\ny = [4, 5, 6]\n\nprint(type(x))\n\n# This does not give the vector addition.\nprint(x + y)\n\n# Vector addition using Numpy\n\nz = np.add(x, y)\nprint(z)\n\n# Vector Cross Product\nmul = np.cross(x, y)\nprint(mul)","8de44319":"x = np.matrix([[1,3],[4,5]])\nx","456ba042":"a = x.mean(0)\na    ","ecdebbcd":"z = x.mean(1)\nz","1194a747":"# Broadcasting\na - z","7d2a7795":"# Matrix Addition\n\nx = np.matrix([[1, 2], [4, 3]])\nsum = x.sum() #axis=1\nprint(sum)","e91c74f4":"x = np.matrix([[1, 2], [4, 3]])\ny = np.matrix([[3, 4], [3, 10]])\nm_sum = np.add(x, y)\nprint(m_sum)\nprint(m_sum.shape)","6f2eeef4":"# Matrix-Scalar Addition\n\nx = np.matrix([[1, 2], [4, 3]])\ns_sum = x + 1\nprint(s_sum)","b58ba8ac":"# Matrix-Scalar Multiplication\n\nx = np.matrix([[1, 2], [4, 3]])\ns_mul = x * 3\nprint(s_mul)","3c8556ad":"# Matrix multiplication\na = [[1, 0], [0, 1]]\nb = [1, 2]\nnp.matmul(a, b)","9fafa18f":"# Matrix Transpose\na = np.array([[1, 2], [3, 4]])\na.transpose()","4006b373":"# Tensor Creation\nimport torch\na = torch.Tensor(5,3,2,1)\nprint(a.tolist())\nprint(type(a))","d76eaf29":"data = {'name': ['Jason', 'Molly', 'Tina', 'Jake', 'Amy'], \n        'age': [42, 52, 36, 24, 73], \n        'preTestScore': [4, 24, 31, 2, 3],\n        'postTestScore': [25, 94, 57, 62, 70]}\ndf = pd.DataFrame(data, columns = ['name', 'age', 'preTestScore', 'postTestScore'])\ndf","8b7664a6":"plt.hist(df['preTestScore'],bins=3)\nplt.show()","7b2d6401":"plt.hist(df['postTestScore'],bins=2)\nplt.show()","232d5df1":"df['preTestScore'].count()","962960da":"df['preTestScore'].min()","316e62b7":"df['preTestScore'].median()","6d887d95":"df['preTestScore'].var()","ba76cca9":"df['preTestScore'].std()","b508ac2a":"#Summary Statistics\ndf['preTestScore'].describe()","b1e7f2e9":"#### Derivative rules\n![Calculus](https:\/\/cdn-images-1.medium.com\/max\/1000\/1*ZR50K2cDpl1um4S-aOeWQw.png)","6ca241de":"#### Scalars\n\n\nScalars are single numbers and are an example of a 0th-order tensor. The notation x \u2208 \u211d states that x is a scalar belonging to a set of real-values numbers, \u211d.\n\nThere are different sets of numbers of interest in deep learning. \u2115 represents the set of positive integers (1,2,3,\u2026). \u2124 designates the integers, which combine positive, negative and zero values. \u211a represents the set of rational numbers that may be expressed as a fraction of two integers.\n\nFew built-in scalar types are int, float, complex, bytes, Unicode in Python. In In NumPy a python library, there are 24 new fundamental data types to describe different types of scalars. For information regarding datatypes refer documentation [here](https:\/\/docs.scipy.org\/doc\/numpy-1.14.0\/reference\/arrays.scalars.html).\n","d122a36e":"### Partial derivatives\n\n let f(x,y) = 3x\u00b2y, then partial derivative w.r.t to x and y is\n\n![Image_Partial_Derivative](https:\/\/cdn-images-1.medium.com\/max\/800\/1*8a9yL0FQmO70v-Juo5c3Bg.png)","89fb1538":"#### Defining Scalars and Few Operations in Python:\n\nThe following code snippet explains few arithmetic operations on Scalars.","ec5c6d03":"### What concepts in Mathematics are important for understanding the basics of Deep Learning?\n\n**Linear Algebra**:  \u201cLinear Algebra is the mathematics of the 21st century\u201d. Matrix Operations, Projections, Vector Spaces and Norms are needed for understanding the optimization methods used in  deep learning. \n\n\n\n**Statistics**: A study of collection, analysis, interpretation, presentation, and organization of data. (wiki)\n\n\n\n**Calculus**: Calculus is the mathematical study of continuous change, in the same way that geometry is the study of shape and algebra is the study of generalizations of arithmetic operations. It has two major branches, differential calculus, and integral calculus.","9fbb3b2a":"### Why maths is important for Deep Learning?\n\n\nMathematics will help in understanding intuition behind the every algorithm in deep learning\n\n![](https:\/\/lenhoang.files.wordpress.com\/2013\/07\/intuition-and-rigor.png?w=614&h=227)\n","2b41225b":"** UPVOTE, if you find this kernel helpful**","82a1a9d8":"#### Derivatives on Tensors\n\nLet g(x,y) = 2x + y\u2078.  I want to calculate derivative on first order tensor **[f(x,y),g(x,y)]**","c1391940":"#### Data Structures for Deep Learning\nThe core data structures behind Deep-Learning are Scalars, Vectors, Matrices and Tensors. Programmatically, let\u2019s solve all the basic linear algebra problems using these.\n\n![https:\/\/cdn-images-1.medium.com\/max\/800\/1*pUr-9ctuGamgjSwoW_KU-A.png](https:\/\/cdn-images-1.medium.com\/max\/800\/1*pUr-9ctuGamgjSwoW_KU-A.png)","a75a025d":"### Linear Algebra\nIt is essential to understand basic linear algebra before getting started with deep learning and programming it","3ca8a960":"### Statistics\n\nA study of collection, analysis, interpretation, presentation, and organization of data. (wiki)\n\nData analysis requires descriptive statistics and probability theory, at a minimum. These concepts will help you make better business decisions from data.","4e7b27e0":"__Mean__\n\nThe average result of a test, survey, or experiment.\n\n__Median__\n\nThe score that divides the results in half - the middle value.\n\n__Mode__\n\nThe most common result (the most frequent value) of a test, survey, or experiment.\n\n__variance__\n\nThe average of the squared differences from the Mean.\n\n__Standard Deviation__\n\nThe Standard Deviation is a measure of how spread out numbers are.","2471aeab":"#### Defining Vectors and Few Operations in Python:","55dd5e9a":"#### Gradient\n\nThe gradient is a fancy word for derivative, or the rate of change of a function. ","adcc8e6f":"In Python, We use numpy library which helps us in creating ndimensional arrays. Which are basically matrices, we use matrix method and pass in the lists and thereby defining a matrix.","b5c88e0a":"![G(x) Image](https:\/\/cdn-images-1.medium.com\/max\/800\/1*IUpOnL8zNi_fPcDKcFP3BQ.png)\n\n\n![Final](https:\/\/cdn-images-1.medium.com\/max\/800\/1*7xKV9D7qXX44GQQbvYlBgA.png)","5069a3f0":"### When should we use Deep Learning?\n\n* Deep Learning out perform other techniques if the data size is large. But with small data size, traditional Machine Learning algorithms are preferable.\n\n* Deep Learning techniques need to have high end infrastructure to train in reasonable time.\n\n* When there is lack of domain understanding for feature introspection, Deep Learning techniques outshines others as you have to worry less about feature engineering.\n\n* Deep Learning really shines when it comes to complex problems such as image classification, natural language processing, and speech recognition.\n\n\n![](https:\/\/1.bp.blogspot.com\/-Cx1rkmV1NuA\/WO4Jw2sHYpI\/AAAAAAAAPN4\/puIF5fSB2Bs_uBLyF_FX4BhYylmrsFTHwCEw\/s1600\/Machine%2BLearning%2B-%2BPlateau%2Bin%2BPerformance.png)","9f60343b":"### Importing Dependencies","5fc4bc1b":"#### Tensors\n\nThe more general entity of a tensor encapsulates the scalar, vector and the matrix. Generally tensors with order that exceeds two.\n\n","1d866386":"### What is Deep Leaning?\n\nPractically, Deep Learning is a subset of Machine Learning that achieves great power and flexibility by learning to represent the world as nested hierarchy of concepts, with each concept defined in relation to simpler concepts.\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*goFgCUHprcroxSLZvROjpg.jpeg)\n\n","62591aba":"### Why Deep Learning?\n\nIn traditional Machine learning techniques, most of the applied features need to be identified by an domain expert in order to reduce the complexity of the data and make patterns more visible to learning algorithms to work. The biggest advantage Deep Learning algorithms as discussed before are that they try to learn high-level features from data in an incremental manner. This eliminates the need of domain expertise and hard core feature extraction.\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*ZX05x1xYgaVoa4Vn2kKS9g.png)\n\n","ed6377d0":"### Objective of this notebook?\n\n\n\nObjective of the notebook is to explain the basis of all the three concepts stated above. This notebook covers the mathematics that is required for having good foundation in Deep Learning","f374de15":"#### Matrices\n\nMatrices are rectangular arrays consisting of numbers and are an example of 2nd-order tensors. If m and n are positive integers, that is m, n \u2208 \u2115 then the m\u00d7n matrix contains m*n numbers, with m rows and n columns.\n\nThe full m\u00d7n matrix can be written as:\n\n![matrix](https:\/\/cdn-images-1.medium.com\/max\/800\/1*x0q53AIuUG4i6U7BMjjUzg.png)\n\n\n\n\n\n\nIt is often useful to abbreviate the full matrix component display into the following expression:\n\n![abb](https:\/\/cdn-images-1.medium.com\/max\/800\/1*RGmyzL1tmF4so67kxYUF1g.png)","685f6cc0":"#### Vectors\n\nVectors are ordered arrays of single numbers and are an example of 1st-order tensor. \n\n\nTo identify the necessary component of a vector explicitly, the ith scalar element of a vector is written as x[i].\n\n![vector](https:\/\/cdn-images-1.medium.com\/max\/800\/1*fHS5crNOYBxDGASNPSp5lw.png)","cf5c6296":"### Calculus\n\nHopefully you remember some of these main scalar derivative rules.\n\nCalculus is the mathematical study of continuous change, in the same way that geometry is the study of shape and algebra is the study of generalizations of arithmetic operations. It has two major branches, differential calculus, and integral calculus.\n\nLet us now focus on differential calculus"}}