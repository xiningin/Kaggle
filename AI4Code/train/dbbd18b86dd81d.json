{"cell_type":{"8503725b":"code","96f2ed4f":"code","6b23e700":"code","14631cae":"code","b1aaf246":"code","884d806c":"code","cb06d16e":"code","967d9158":"code","c85b2f84":"code","e875a718":"code","18dd4f6e":"code","6994289f":"code","baaebd74":"code","284822c9":"code","b6bfc666":"code","068fb9d2":"code","90869f84":"code","fce7c0f4":"code","1458241c":"code","80b6b34f":"code","ea761052":"code","3b5c6cb9":"code","e5b79424":"code","8f249058":"code","3acc3714":"code","711bce41":"code","6d599b49":"code","949e540f":"code","1870d8d4":"code","2d98e094":"code","1af97a97":"code","724a41a5":"code","89b06e47":"code","78029d60":"code","f75bb331":"code","8f780fe5":"code","c2ef6dbf":"code","43481867":"code","fd576b14":"code","cc0e9da3":"markdown","b8db912b":"markdown","2cc96869":"markdown","744499d9":"markdown","2bf45efe":"markdown","e69ace2f":"markdown"},"source":{"8503725b":"!pip install vaderSentiment\nimport vaderSentiment\nfrom vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer\n\n!pip install googletrans\nimport googletrans\nfrom googletrans import Translator\n\n!pip install feedparser\nimport feedparser","96f2ed4f":"import plotly.express as px","6b23e700":"import pandas as pd","14631cae":"import re\nimport string","b1aaf246":"import spacy","884d806c":"# to update spacy. \n# I'll use portuguese spacy than I need  update it in Colab\n!pip install -U spacy","cb06d16e":"import spacy.cli\nspacy.cli.download(\"fr_core_news_sm\")","967d9158":"from spacy.lang.fr.stop_words import STOP_WORDS as stopWordFR","c85b2f84":"from spacy import displacy\nfrom IPython.display import SVG, display","e875a718":"nlpFR = spacy.load('fr_core_news_sm')","18dd4f6e":"phrases = [\n\"Je pense donc je suis\",\n\"Le plus grand plaisir dans la vie, c\u2019est de faire les choses que les gens disent impossibles\",\n\"Je connais mes limites, c\u2019est pourquoi je vais au-del\u00e0.\",\n\"Un homme est bien fort quand il s\u2019avoue sa faiblesse\",\n\"On ne voit bien qu\u2019avec le coeur. L\u2019essentiel est invisible pour les yeux\",\n\"On ne voit bien qu\u2019avec le coeur. L\u2019essentiel est invisible pour les yeux\",\n\"Fais de ta vie un r\u00eave, et d\u2019un r\u00eave, une r\u00e9alit\u00e9\",\n\"Rien de grand ne s\u2019est fait dans le monde sans passion\",\n\"Il faut manger pour vivre, et non pas vivre pour manger\",\n\"Je veux \u00eatre ton \u2018bonjour\u2019 pr\u00e9f\u00e9r\u00e9 et ton plus dur \u2018au revoir\u2019\",\n\"Si j\u2019avais le choix entre la vie et toi, je te choisirais car tu es ma seule raison de vivre\"\n]\n","6994289f":"def showSVG(s):\n  display(SVG(s))","baaebd74":"doc = nlpFR(\"Je m'appelle Italo\")\ngraph01 = displacy.render(doc)\nshowSVG(graph01)","284822c9":"doc = nlpFR(\"Le matin, Je bois du cafe\")\ngraph01 = displacy.render(doc, options={'compact': True})\nshowSVG(graph01)","b6bfc666":"options = {\"compact\": True, \"bg\": \"#09a3d5\", \"color\": \"white\"}\nfor frtext in phrases:\n  doc = nlpFR(frtext)\n  graph01 = displacy.render(doc, options=options)\n  showSVG(graph01)","068fb9d2":"readSentiment = SentimentIntensityAnalyzer()","90869f84":"for txt in phrases:\n  print(readSentiment.polarity_scores(txt))","fce7c0f4":"translator = Translator()","1458241c":"# traduire en anglais\nphrasesEn = [translator.translate(txt).text for txt in phrases]","80b6b34f":"# translate to traduire en portugais\nphrasesBr = [translator.translate(txt, dest='pt').text for txt in phrases]","ea761052":"for txt in phrasesEn:\n  print(readSentiment.polarity_scores(txt))","3b5c6cb9":"for txt in phrasesBr:\n  print(readSentiment.polarity_scores(txt))","e5b79424":"def getSentiment(phrase):\n  s = readSentiment.polarity_scores(phrase)\n  if s['compound'] <= -0.05:\n    sentiment = 0\n  elif s['compound'] >= 0.05:\n    sentiment = 1\n  else:\n    sentiment = 2\n  return sentiment, s","8f249058":"sentiments = ['Negative', 'Positive', 'Neutral']\nfor txt in phrases:\n  print(sentiments[getSentiment(txt)[0]], ' - ', txt)","3acc3714":"sources = [\n'https:\/\/feeds.leparisien.fr\/leparisien\/rss\/faits-divers',\n'https:\/\/feeds.leparisien.fr\/leparisien\/rss\/politique',\n'https:\/\/feeds.leparisien.fr\/leparisien\/rss\/economie',\n'https:\/\/feeds.leparisien.fr\/leparisien\/rss\/international',  \n'https:\/\/feeds.leparisien.fr\/leparisien\/rss\/sports',\n'https:\/\/feeds.leparisien.fr\/leparisien\/rss\/culture-loisirs',\n'https:\/\/feeds.leparisien.fr\/leparisien\/rss\/environnement'  \n]\nfeeds = []\nfor s in sources:\n  feed = feedparser.parse(s)\n  feeds.append(feed)","711bce41":"titles = []\nsummaries = []\nfor feed in feeds:\n  for content in feed.entries:\n    titles.append(content.title)\n    try:\n      summaries.append(content.summary)\n    except:\n      summaries.append(content.title)","6d599b49":"def cleaningText(original, show=False):\n  txt = original\n  txt = txt.lower() # lowercase\n  txt = re.sub('@','',txt) # remove @ \n  txt = re.sub('\\[.*\\]','',txt) # remove contents between brackets\n  txt = re.sub('<.*?>+','',txt) # remove contents between less and more signs\n  txt = re.sub('https?:\/\/\\S+|www\\.\\S+', '', txt) # remove URLs\n  txt = re.sub(re.escape(string.punctuation), '', txt) # remove punctuation\n  txt = re.sub(r'[^a-zA-Z ]+', '', txt) # remove numbers\n  txt = re.sub('\\n', '', txt) # remove line break\n  txt = str(txt).strip()\n  if show:\n    print('ORIGINAL: ', original)\n    print('   TEXT CLEANNED: ', txt)\n  return txt","949e540f":"titlesClean = [cleaningText(title) for title in titles]","1870d8d4":"sent = []\nfor txt in titles:\n  sent.append(getSentiment(txt)[0])\n\ndfT = pd.DataFrame()\ndfT['title'] = titles\ndfT['titleClean'] = titlesClean\ndfT['sentimentTitle'] = sent","2d98e094":"dfTitle = dfT[['sentimentTitle','title']].groupby('sentimentTitle').count()","1af97a97":"dfTitle['sentiment'] = sentiments\ndfTitle","724a41a5":"colors=['orange', 'Darkblue', 'Darkred']\npx.pie(dfTitle, names='sentiment', values='title', \n       title='Analyse des sentiments - Titres', color_discrete_sequence=colors)","89b06e47":"def tokenizeStr(original):\n  txt2 = nlpFR(original) # cr\u00e9er une liste de mots\n  txt2 = [token.lemma_ for token in txt2 if not nlpFR.vocab[token.text].is_stop]\n  punct = string.punctuation\n  stopwords = list(stopWordFR)\n  ws = string.whitespace\n  txt2 = [word for word in txt2 if word not in stopwords and word not in punct if len(word)>2]\n  return txt2","78029d60":"wordsT = [word for i in range(0, len(dfT)-1) for word in tokenizeStr(dfT.iloc[i].titleClean) if str(word).strip() != '']\nwordsTn = pd.value_counts(wordsT)","f75bb331":"wordlist = pd.value_counts(wordsT)","8f780fe5":"topW = pd.DataFrame(data={'tag': wordlist.index, 'count':wordlist.values})","c2ef6dbf":"px.bar(topW[:10], y='tag', x='count', orientation='h', \n       title='Top 10 mots', color='tag')","43481867":"import matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, STOPWORDS as stc\nstopwordsCloud = set(stc)","fd576b14":"wordcloud = WordCloud(width = 800, height = 600, \n                background_color ='white', \n                stopwords = stopwordsCloud, \n                min_font_size = 10).generate(' '.join(dfT.title)) \n  \n# plot the WordCloud image                        \nplt.figure(figsize = (10, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \nplt.title('SCIENCE DES DONN\u00c9ES ET LANGAGE NATUREL')\n  \nplt.show() ","cc0e9da3":"# **Textes en ligne**\n\nObtenons quelques gros titres (titres) sur CNN et ESPN par flux RSS","b8db912b":"# **\u00c9TUDIER LE FRAN\u00c7AIS AVEC NLP SPACY** <BR> \nPAR ITALO COSTA","2cc96869":"# **Visualiser l'analyse des d\u00e9pendances**","744499d9":"# **Analyse des mots**","2bf45efe":"# **Sentiment**","e69ace2f":"**Comparer le sentiment fran\u00e7ais avec d'autres langues**"}}