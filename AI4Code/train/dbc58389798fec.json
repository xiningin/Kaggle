{"cell_type":{"e802b02c":"code","6efe4d10":"code","f6d1244e":"code","6471b984":"code","b3aff228":"code","28112204":"code","3e35c9a2":"code","998ec881":"code","c1030ba5":"code","2d50938f":"code","51ddc747":"code","46491f75":"code","eef19e27":"code","5587bf5f":"code","34cc6890":"code","4a4a554f":"code","fabe92e4":"code","a74a181d":"code","2da839e7":"code","0c3f0f31":"code","d887b76f":"code","604757aa":"code","96240cac":"code","5d1f0a86":"code","a3cc48d3":"code","9ed65ae0":"code","139a7a5a":"code","c0284b9f":"code","820139cd":"code","7da6ed2e":"code","203cb288":"code","be806214":"code","5a138fa9":"code","b6590c31":"code","a1571f2c":"code","573045dc":"code","5f3f9da0":"code","420463ce":"code","fd2ef0c7":"code","0b322cdf":"code","f0549f7b":"code","31bfc1f4":"code","83236894":"code","0bbb6eae":"code","a0f37dc5":"code","6e894ed7":"code","4f47b043":"code","17c690a1":"code","c2e9c444":"code","d1fb0c3a":"code","93c7bafb":"code","b7af2b03":"code","f572e5cf":"code","9c8ddc67":"code","3f497a17":"code","02224070":"code","0010bdb2":"code","5430232d":"code","e2e0e3c2":"code","06a9d675":"code","f4d73ca2":"code","4524f17e":"code","2f2d5bba":"code","cf62cfc3":"code","48f5fe6a":"code","62884ca2":"code","4b4b5d39":"code","2dd0b33f":"code","1a9369ef":"code","f01ac318":"code","4b3c5233":"code","7b7a5407":"code","4c3d2390":"code","de30b293":"code","5a593d17":"code","a4e604e9":"code","833bcb97":"code","48b84728":"code","4e0ace36":"code","32754116":"code","8e2ed3c0":"code","da350926":"code","a69bcc6d":"code","6c93dfaa":"code","8fd884db":"code","db116883":"code","26354a2c":"code","7952e691":"code","f7bf301c":"code","938c1966":"code","4bed2596":"code","1a17c1b7":"code","bbd82238":"code","c9f341f5":"code","f0a733c3":"code","28890604":"code","00d0eed1":"code","3575a15b":"code","77a5d6ad":"code","692b8f85":"code","37ac78ae":"markdown","965b8421":"markdown","5c99fb13":"markdown","bd5a5545":"markdown","d6c29fef":"markdown","9bbbc0a2":"markdown","5f86461e":"markdown","f29800b6":"markdown","9939053c":"markdown","b9850394":"markdown","9d39c1d0":"markdown","2475a937":"markdown","207ced09":"markdown","d34cc34a":"markdown","abd46cdf":"markdown"},"source":{"e802b02c":"print(\"Hello World\")","6efe4d10":"v_mesagge = \"Hello World\"\nprint(\"hi\")","f6d1244e":"print(v_mesagge)","6471b984":"v_name = \"zeynep\"\nv_surname = \"sen\"\n\nv_fullname = v_name + v_surname\nprint(v_fullname)","b3aff228":"v_fullname = (v_name +\" \"+ v_surname)\n\nprint(v_fullname)","28112204":"v_num1 = \"150\"\nv_num2 = \"300\"\nv_numSun1 = v_num1 + v_num2\n\nprint(v_numSun1)","3e35c9a2":"#lenght\nv_lenFull = len(v_fullname)\n\nprint(\"v_fullname : \" ,v_fullname, \"and lengt is:\" ,v_lenFull)","998ec881":"v_titleF = v_fullname.title()\nprint(\"v_fullname :\",  \" v_fullname \" ,  \" and title is : \" , v_titleF)","c1030ba5":"#upper\nv_upperF = v_fullname.upper()\n\n#lower\nv_lowerF = v_fullname.lower()\nprint(\"v_fullname : \"  , v_fullname ,  \" Upper : \" , v_upperF ,  \" Lower : \" , v_lowerF)","2d50938f":"v_2ch = v_fullname[7]    \nprint(v_2ch)","51ddc747":"v_num1 = 150\nv_num2 = 300\nv_sum1 = v_num1 + v_num2\n\nprint(v_sum1, \" and type : \" , type(v_sum1))","46491f75":"#it will get error\n#v_sum2 = v_num1 + v_name\n#print(v_sum2)\n","eef19e27":"v_num1 = v_num1 + 45\nv_num2 = v_num2 - 25.5\nv_sum1 = v_num1 + v_num2\n\nprint(v_num1)\n","5587bf5f":"print(\"v_sum1 : \",v_sum1 ,\"type : \" , type(v_sum1))","34cc6890":"v_fl1 = 21.3\nv_fl2 = 14.8\nv_s3 = v_fl1 + v_fl2\n\nprint(v_s3 , type (v_s3))","4a4a554f":"def f_SayHello1():\n    print(\"Hi. I am comming from f_SayHello\")\n    \ndef f_SayHello2():\n    print(\"Hi. I am comming from f_SayHello2\")\n    print(\"good\")","fabe92e4":"f_SayHello2()","a74a181d":"def f_sayMessage(v_Message1): \n    print(v_Message1 , \" came from 'f_sayMessage'\") \ndef f_getFullName(v_FirstName , v_Surname , v_Age): \n    print(\"Welcome \" , v_FirstName , \" \" , v_Surname , \" your age : \" , v_Age) ","2da839e7":"f_sayMessage(\"How are you ?\")","0c3f0f31":"f_getFullName(\"Zeynep\" , \"\u015een\" , 14)","d887b76f":"def f_Calc1(f_Num1 , f_Num2 , f_Num3):\n    v_Sonuc = f_Num1 + f_Num2 + f_Num3 \n    print(\"Sonu\u00e7 = \" ,\" \" , v_Sonuc) ","604757aa":"f_Calc1(150 , 300 , 40)","96240cac":"# return function\ndef f_Calc2(v_Num1 , v_Num2 , v_Num3):\n    v_Out = v_Num1+v_Num2+v_Num3*5\n    print(\"Hi from f_Calc2\") \n    return v_Out ","5d1f0a86":"v_gelen = f_Calc2(1,2,3)\nprint(\"Score is : \" , v_gelen)","a3cc48d3":"# Default Functions :\ndef f_getSchoolInfo(v_Name,v_StudentCount,v_City = \"ISTANBUL\"):\n    print(\"Name : \" , v_Name , \" St Count : \" , v_StudentCount , \" City : \" , v_City)","9ed65ae0":"f_getSchoolInfo(\"AAIHL\" , 521)\nf_getSchoolInfo(\"Ankara Fen\" , 521 , \"ANKARA\")","139a7a5a":"# Flexible Functions : \ndef f_Flex1(v_Name , *v_messages):\n    print(\"Hi \" , v_Name , \" your first message is : \" , v_messages[1]) ","c0284b9f":"f_Flex1(\"Zeynep\" , \"Selam\" , \"Naber\" , \"\u0130yisindir \u0130n\u015fallah\")","820139cd":"# Lambda Function :\nv_result1 = lambda x : x*3 \nprint(\"Result is : \" , v_result1(5))","7da6ed2e":"def f_alan(kenar1,kenar2): \n    print(kenar1*kenar2) ","203cb288":"f_alan(2,5)","be806214":"l_list1 = [1,2,3,4,5,6]\nprint(l_list1)\nprint(\"Type of 'l_list1' is : \" , type(l_list1))","5a138fa9":"v_list1_4 = l_list1[5]\nprint(v_list1_4)\nprint(\"Type of 'v_list1_4' is : \" , type(v_list1_4))","b6590c31":"l_list2 = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]\nprint(l_list2)\nprint(\"Type of 'l_list2' is : \" , type(l_list1))","a1571f2c":"v_list2_4 = l_list2[4]\nprint(v_list2_4)\nprint(\"Type of 'v_list2_4' is : \" , type(v_list2_4))","573045dc":"v_list2_x3 = l_list2[-2]\nprint(v_list2_x3)","5f3f9da0":"l_list2_2 = l_list2[0:3]\nprint(l_list2_2)","420463ce":"#Len\nv_len_l_list2_2 = len(l_list2_2)\nprint(\"Size of 'l_list2_2' is : \",v_len_l_list2_2)\nprint(l_list2_2)","fd2ef0c7":"#Append\nl_list2_2.append(\"Saturday\")\nprint(l_list2_2)\n\nl_list2_2.append(\"Tuesday\")\nprint(l_list2_2)","0b322cdf":"#Reverse\nl_list2_2.reverse()\nprint(l_list2_2)","f0549f7b":"#Sort\nl_list2_2.sort()\nprint(l_list2_2)","31bfc1f4":"#Remove\n\n#First add 'Saturday' then Remove 'Saturday'\nl_list2_2.append(\"Saturday\")\nprint(l_list2_2)","83236894":"l_list2_2.remove(\"Saturday\")\nprint(l_list2_2)","0bbb6eae":"d_dict1 = {\"Home\":\"Ev\" , \"School\" : \"Okul\" , \"Student\": \"\u00d6\u011frenci\"}\n\nprint(d_dict1)\nprint(type(d_dict1))","a0f37dc5":"v_student = d_dict1[\"Student\"]\nprint(v_student)\nprint(type(v_student))","6e894ed7":"#Keys & Values\n\nv_keys = d_dict1.keys()\nv_values = d_dict1.values()\n\n\nprint(v_keys)\nprint(type(v_keys))\n\nprint()\nprint(v_values)\nprint(type(v_values))","4f47b043":"v_var1 = 5\nv_var2 = 10\n\nif v_var1 > v_var2:\n    print(v_var1 , \" is greater then \" , v_var2)\nelif v_var1 < v_var2:\n    print(v_var1 , \" is smaller then \" , v_var2)\nelse :\n    print(\"This 2 variables are equal\")","17c690a1":"# < , <= , > , >= , == , <>\ndef f_Comparison1(v_Comp1 , v_Comp2):\n    if v_Comp1 > v_Comp2:\n        print(v_Comp1 , \" is greater then \" , v_Comp2)\n    elif v_Comp1 < v_Comp2:\n        print(v_Comp1 , \" is smaller then \" , v_Comp2)\n    else :\n        print(\"These \" , v_Comp1 , \" variables are equal\")\n        \nf_Comparison1(15,100)\nf_Comparison1(150,120)\nf_Comparison1(65,65)","c2e9c444":"# using 'IN' with LIST\n\n\ndef f_IncludeOrNot(v_search, v_searchList):\n    if v_search in v_searchList :\n        print(\"Good news ! \",v_search , \" is in list.\")\n    else :\n        print(v_search , \" is not in list. Sorry :(\")\n\nl_list = list(d_dict1.keys())\nprint(l_list)\nprint(type(l_list))\n\nf_IncludeOrNot(\"Home\" , l_list)\nf_IncludeOrNot(\"Pencil\" , l_list)","d1fb0c3a":"for a in range(1,10):\n    print(\"saat :\", a)\n","93c7bafb":"v_happyMessage =  \"ALWAYS SMILE\"\nprint(v_happyMessage)","b7af2b03":"for v_chrs in v_happyMessage:\n    print(v_chrs)\n    print(\"----------\")","f572e5cf":"for v_chrs in v_happyMessage.split():\n    print(v_chrs)\n","9c8ddc67":"print(l_list1)\nv_sum_list1 = sum(l_list1)\nprint(\"Sum of l_list1 is : \" , v_sum_list1)\n\nprint()\nv_cum_list1 = 0\nv_loopindex = 0\nfor v_current in l_list1:\n    v_cum_list1 = v_cum_list1 + v_current\n    print(v_loopindex , \" nd value is : \" , v_current)\n    print(\"Cumulative is : \" , v_cum_list1)\n    v_loopindex = v_loopindex + 1\n    print(\"------\")","3f497a17":"i = 1\nwhile(i < 5):\n    print(\"Hi\" , i)\n    i = i+1","02224070":"print(l_list1)\nprint()\n\ni = 0\nk = len(l_list1)\n\nwhile(i<k):\n    print(l_list1[i])\n    i=i+1","0010bdb2":"#Let's find minimum and maximum number in list\n\nl_list2 = [2,4,6,-8,-102,200,65,21,-96]\n\nv_min = 0\nv_max = 0\n\nv_index = 0\nv_len = len(l_list2)\n\nwhile (v_index < v_len):\n    v_current = l_list2[v_index]\n    \n    if v_current > v_max:\n        v_max = v_current\n    \n    if v_current < v_min:\n        v_min = v_current\n    \n    v_index = v_index+1\n\nprint (\"Maximum number is : \" , v_max)\nprint (\"Minimum number is : \" , v_min)","5430232d":"# Import library to use\nimport numpy as np","e2e0e3c2":"v_array1 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\nv_array2_np = np.array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])","06a9d675":"print(\"v_array1 : \" , v_array1)\nprint(\"Type of v_array1 : \" , type(v_array1))","f4d73ca2":"print(\"v_array2_np : \" , v_array2_np)\nprint(\"Type of v_array2_np : \" , type(v_array2_np))","4524f17e":"# shape\nv_shape1 = v_array2_np.shape\nprint(\"v_shape1 : \" , v_shape1 , \" and type is : \" , type(v_shape1))","2f2d5bba":"# Reshape\nv_array3_np = v_array2_np.reshape(5,3)\nprint(v_array3_np)","cf62cfc3":"v_shape2 = v_array3_np.shape\nprint(\"v_shape2 : \" , v_shape2 , \" and type is : \" , type(v_shape2))","48f5fe6a":"# Dimension\nv_dimen1 = v_array3_np.ndim\nprint(\"v_dimen1 : \" , v_dimen1 , \" type is : \" , type(v_dimen1))","62884ca2":"# Dtype.name\nv_dtype1 = v_array3_np.dtype.name\nprint(\"v_dtype1 : \" , v_dtype1 , \" and type is : \" , type(v_dtype1))","4b4b5d39":"# Size\nv_size1 = v_array3_np.size\nprint(\"v_size1 : \" , v_size1 , \" and type : \" , type(v_size1))","2dd0b33f":"# Let's create 3x4 array\nv_array4_np = np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]])\nprint(v_array4_np)\nprint(\"---------------\")\nprint(\"Shape is : \" , v_array4_np.shape)","1a9369ef":"# Zeros\nv_array5_np = np.zeros((3,4))\nprint(v_array5_np)","f01ac318":"# Update an item on this array \nv_array5_np[0,3] = 30\nprint(v_array5_np)","4b3c5233":"# Ones\nv_array6_np = np.ones((3,4))\nprint(v_array6_np)","7b7a5407":"# Empty\nv_array7_np = np.empty((2,3))\nprint(v_array7_np)","4c3d2390":"# Arrange\nv_array8_np = np.arange(10,45,5)\nprint(v_array8_np)\nprint(v_array8_np.shape)","de30b293":"# Linspace\nv_array9_np = np.linspace(15,35,10)\nv_array10_np = np.linspace(15,35,25)\n\nprint(v_array9_np)\nprint(v_array9_np.shape)\nprint(\"-----------------------\")\nprint(v_array10_np)\nprint(v_array10_np.shape)","5a593d17":"# Sum , Subtract , Square\nv_np1 = np.array([1,2,3])\nv_np2 = np.array([7,8,9])\n\nprint(v_np1 + v_np2)\nprint(v_np1 - v_np2)\nprint(v_np2 - v_np1)\nprint(v_np1 ** 2)","a4e604e9":"# Sinus\nprint(np.sin(v_np2))","833bcb97":"# True \/ False\nv_np2_TF = v_np2 < 20\nprint(v_np2_TF)\nprint(v_np2_TF.dtype.name)","48b84728":"# Element wise Prodcut\nv_np1 = np.array([1,2,3])\nv_np2 = np.array([8,9,10])\nprint(v_np1 * v_np2)","4e0ace36":"v_np3 = np.array([5,4,2,1,6,7,8,3,9])\n\nprint(\"First item is : \" , v_np3[5])\nprint(\"Third item is : \" , v_np3[1])\n","32754116":"# Get top 4 rows :\nprint(v_np3[2:8])","8e2ed3c0":"# Reverse\nv_np3_rev = v_np3[::-1]\nprint(v_np3_rev)","da350926":"v_np4 = np.array([[2,4,6,8,10],[1,3,5,7,9]])\nprint(v_np4)\nprint()\nprint(v_np4[0,3]) #--> Get a row\n\nprint()\nv_np4[1,3] = 566 #--> Ubtade a row\nprint(v_np4)\n","a69bcc6d":"# Get all rows but 3rd columns :\nprint(v_np4[:,4])","6c93dfaa":"#Get 2nd row but 2,3,4th columns\nprint(v_np4[1,1:3])","8fd884db":"# Get last row all columns\nprint(v_np4[-1,:])","db116883":"# Get last columns but all rows\nprint(v_np4[:,-1])","26354a2c":"#Flatten\nv_np5 = np.array([[5,4,2],[8,7,6],[3,1,9],[12,11,10]])\nv_np6 = v_np3.ravel()\n\nprint(v_np5)\nprint(\"Shape of v_np3 is : \" ,v_np5.shape)\nprint()\nprint(v_np6)\nprint(\"Shape of v_np4 is : \" ,v_np6.shape)\nprint()","7952e691":"# Reshape\nv_np7 = v_np6.reshape(3,3)\nprint(v_np7)\nprint(\"Shape of v_np16 is : \" ,v_np7.shape)","f7bf301c":"v_np8 = v_np7.T\nprint(v_np8)\nprint(\"Shape of v_np8 is : \" ,v_np8.shape)","938c1966":"v_np9 = np.array([[9,8,7],[6,5,4],[3,2,1]])\n\nprint(v_np9)\nprint()\nprint(v_np9.reshape(3,3))\n\nprint()\nprint(v_np9) #--> It has not changed !!","4bed2596":"# Resize\nv_np9.resize((3,3))\nprint(v_np9) # --> Now it changed !  Resize can change its shape","1a17c1b7":"v_np10 = np.array([[2,4],[3,6]])\nv_np11 = np.array([[9,5],[1,7]])\n\nprint(v_np10)\nprint()\nprint(v_np11)","bbd82238":"# Vertical Stack\nv_np12 = np.vstack((v_np10,v_np11))\nv_np13 = np.vstack((v_np11,v_np10))\n\nprint(v_np12)\nprint()\nprint(v_np13)","c9f341f5":"# Horizontal Stack\nv_np14 = np.hstack((v_np10,v_np11))\nv_np15 = np.hstack((v_np11,v_np10))\n\nprint(v_np14)\nprint()\nprint(v_np15)","f0a733c3":"v_list1 = [5,6,7,8]\nv_np16 = np.array(v_list1)\n\nprint(v_list1)\nprint(\"Type of list : \" , type(v_list1))\nprint()\nprint(v_np16)\nprint(\"Type of v_np16 : \" , type(v_np16))","28890604":"v_list2 = list(v_np16)\nprint(v_list2)\nprint(\"Type of list2 : \" , type(v_list2))","00d0eed1":"v_list3 = v_list2\nv_list4 = v_list2\n\nprint(v_list2)\nprint()\nprint(v_list3)\nprint()\nprint(v_list4)","3575a15b":"v_list2[3] = 86\n\nprint(v_list2)\nprint()\nprint(v_list3) # --> Same address with list2\nprint()\nprint(v_list4) # --> Same address with list2","77a5d6ad":"v_list5 = v_list2.copy()\nv_list6 = v_list2.copy()\n\nprint(v_list5)\nprint()\nprint(v_list6)","692b8f85":"v_list2[1] = 62\n\nprint(v_list2)\nprint()\nprint(v_list5) # --> Not same address with list2\nprint()\nprint(v_list6) # --> Not same address with list2","37ac78ae":"2.1)Strings","965b8421":"**6) *For Loop***","5c99fb13":"**8.4.Shape Manipulation**","bd5a5545":"**5) *IF ELSE***","d6c29fef":"**8.3. Indexing and Slicing**","9bbbc0a2":"\n8.2. Basic Operations","5f86461e":"**3. *LIST***","f29800b6":"\n8.1. Basic","9939053c":"**2. *FUNCTIONS***","b9850394":"**8. *NUMPY***","9d39c1d0":"**8.5.Stacking Arrays**","2475a937":"**1. *VARIABLES***","207ced09":"**7. *While Loop***","d34cc34a":"**4. *DICTIONARY***","abd46cdf":"**8.6.Convert and Copy Array**"}}