{"cell_type":{"0456982d":"code","6af279ad":"code","55b922a4":"code","f4e95dc6":"code","7b081dc3":"code","db6ed129":"code","0535fe8e":"code","8d041315":"code","1b1d047f":"code","d0dcece3":"code","92aad7df":"code","3d5e43e6":"code","4e5c8d6d":"code","d7d8d99f":"code","8a08926c":"code","3514d2ae":"code","c5a65005":"code","ecce3d37":"code","6124aa19":"code","873cff6b":"markdown","69559f58":"markdown","9c90a4ee":"markdown","eb50fa98":"markdown","713102ad":"markdown"},"source":{"0456982d":"import pandas as pd","6af279ad":"# Let's first import the data\nmessages = pd.read_csv(\"..\/input\/sms-spam-collection-dataset\/spam.csv\", encoding = \"ISO-8859-1\")","55b922a4":"messages","f4e95dc6":"messages.drop(['Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4'], axis = 1, inplace = True)","7b081dc3":"messages","db6ed129":"import re\nimport nltk\nnltk.download('stopwords')\nnltk.download('wordnet')","0535fe8e":"from nltk.corpus import stopwords\nfrom nltk.stem import WordNetLemmatizer\nlm = WordNetLemmatizer()\ncorpus = []\nfor i in range(0, len(messages)):\n  review = re.sub('[^a-zA-Z]', ' ', messages['v2'][i])\n  review = review.lower()\n  review = review.split()\n\n  review = [lm.lemmatize(word) for word in review if not word in stopwords.words('english')]\n  review = ' '.join(review)\n  corpus.append(review)\n","8d041315":"from sklearn.feature_extraction.text import TfidfVectorizer\ntf = TfidfVectorizer(max_features = 2500)\nx = tf.fit_transform(corpus).toarray()","1b1d047f":"y = pd.DataFrame(messages['v1'])\ny","d0dcece3":"## now for converting all string values into categorial values\nfor labels, contents in y.items():\n    if pd.api.types.is_string_dtype(contents):\n        y['v1'] = contents.astype('category').cat.as_ordered()","92aad7df":"y.v1.cat.codes","3d5e43e6":"from sklearn.model_selection import train_test_split\nxtrain,xtest,ytrain,ytest = train_test_split(x , y, test_size = 0.2, random_state = 2)","4e5c8d6d":"from sklearn.naive_bayes import MultinomialNB\nspam_detect_model = MultinomialNB().fit(xtrain, ytrain)\nypreds = spam_detect_model.predict(xtest)","d7d8d99f":"ypreds","8a08926c":"ytest","3514d2ae":"from sklearn.metrics import classification_report\nclassification_report(ytest, ypreds)","c5a65005":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(ytest, ypreds)","ecce3d37":"cm","6124aa19":"from sklearn.metrics import accuracy_score\nac_s = accuracy_score(ytest, ypreds)\nac_s","873cff6b":"Yeeh!! got 97% accuracy by simple modelling","69559f58":"## Useing Naive_bayes to classify","9c90a4ee":"## Use tf idf to convert words into vectors","eb50fa98":"## Spam message classifier \n\nIn this noebook we're using kaggle's dataset to classify weather a sms is spam or not\nIt's very easy to understand. So let's get started","713102ad":"We'll use nltk library and perform some data cleaning"}}