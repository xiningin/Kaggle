{"cell_type":{"b90bef0a":"code","0fba5f24":"code","d4798210":"code","e4e5a0dd":"code","ed72968f":"code","dee6e0ba":"code","2f34a1fb":"code","e67bc876":"code","d3b13848":"code","463c534e":"code","401a6675":"code","f7552e98":"markdown","8a178820":"markdown","6880183e":"markdown","34790c31":"markdown"},"source":{"b90bef0a":"import pandas as pd\nimport numpy as np","0fba5f24":"path = r'\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/audi.csv'\ndata = pd.read_csv(path)","d4798210":"data","e4e5a0dd":"# Ordinal encoding\n\nimport category_encoders as ce\ndata_ord = data.copy()\nencoder = ce.OrdinalEncoder(cols=['model','transmission','fuelType'])\ndata_ord = encoder.fit_transform(data_ord)\ndata_ord","ed72968f":"import seaborn as sns\nsns.pairplot(data_ord)","dee6e0ba":"!pip install pygam","2f34a1fb":"from sklearn.model_selection import train_test_split\nX = data_ord.drop(['price'],axis=1)\n#X['year'] = 2020-data_ord['year']\n\ny = data_ord['price']\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=25)","e67bc876":"from pygam import GAM, s, f\n\ngam = GAM(f(0)+s(1)+f(2)+s(3)+f(4)+s(5)+s(6)+s(7),distribution='gamma',link='log').fit(X_train,y_train)\nfrom sklearn.metrics import r2_score\nprint('Performance score(XGB): %.1f ' %(r2_score(y_test,gam.predict(X_test))*100))\ngam.summary()","d3b13848":"model_range=X_train['model'].unique()\nmodel_range.sort()\n\nX_train_1= X_train\nX_test_1= X_test\n\nfor m in model_range:\n    engineSize_mean=X_train.loc[X_train_1['model']==m,'engineSize'].mean()\n    #print(m,engineSize_mean)\n    X_train_1.loc[(X_train_1['engineSize']==0.0) & (X_train_1['model']==m),'engineSize']=engineSize_mean\n    X_test_1.loc[(X_test_1['engineSize']==0.0) & (X_test_1['model']==m),'engineSize']=engineSize_mean\n","463c534e":"from pygam import GAM, s, f\n\ngam = GAM(f(0)+f(4)+f(2)+s(1)+s(3)+s(5)+s(6)+s(7),distribution='gamma',link='log',n_splines=50)\ngam.gridsearch(X_train_1.values,y_train.values)\nfrom sklearn.metrics import r2_score\nprint('Performance score(XGB): %.1f ' %(r2_score(y_test,gam.predict(X_test_1))*100))\ngam.summary()","401a6675":"import matplotlib.pyplot as plt\nimport matplotlib.lines as mlines\nimport matplotlib.transforms as mtransforms\n\nfig, ax = plt.subplots()\nax.scatter(y_test,gam.predict(X_test_1))\nline = mlines.Line2D([0, 140000], [0, 140000], color='red')\ntransform = ax.transAxes\nline.set_transform(transform)\nax.add_line(line)\nplt.show()","f7552e98":"I will replace the engineSize outliers with the mean of the same model as the model for that record.","8a178820":"# We will use a Generalized Additive Model(GAM) to model Audi prices  \nDuring the analysis, we will try ordinal encoding.","6880183e":"# Feature Engineering  \nI will try out ordinal encoding.","34790c31":"# Conclusions   \nThe model performs well."}}