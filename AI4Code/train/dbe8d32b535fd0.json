{"cell_type":{"2af739a7":"code","4b2f212e":"code","2034f5f9":"code","4b2d3500":"code","bef1f58c":"code","459b5ff3":"code","7776f3f8":"code","dd0d7ea3":"code","6056989d":"code","44248748":"code","8efa267e":"code","d5d25b43":"code","fe800b79":"code","56f56f36":"code","90cb6aef":"code","56d6b2b8":"code","1186cdfc":"code","903451aa":"code","c97beca6":"code","b58a1aea":"code","e79ec089":"code","791ba149":"code","86a92049":"code","9827dcab":"code","7ae54710":"code","faf2cfa8":"markdown","07e5d793":"markdown","7f74a30e":"markdown","00742c20":"markdown","e08e0eef":"markdown","0665b58b":"markdown","70c90a79":"markdown","eb79211d":"markdown","864028b5":"markdown","e9df6f7d":"markdown","6803b6bb":"markdown","9322de3a":"markdown","5f57f70a":"markdown","8786a8ea":"markdown","946d4187":"markdown","33afef52":"markdown","95189339":"markdown","4b86b9ae":"markdown","04cf9888":"markdown","2125c276":"markdown","5bf7ed4e":"markdown","8043d54b":"markdown"},"source":{"2af739a7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.offline as py\nimport plotly.graph_objects as go\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4b2f212e":"!pip install pywaffle","2034f5f9":"from pywaffle import Waffle","4b2d3500":"dataset = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\ndataset.drop([0], inplace=True)","bef1f58c":"data_country=dataset.groupby('Q3')[['Q1']].count()\ndata_country.rename(columns={\"Q1\": \"count\"},inplace=True)\ndata_country.reset_index(inplace=True)\ndata_country=data_country[data_country['count']>400].sort_values('count',ascending=False)\n\nf, ax = plt.subplots(figsize=(20, 9))\nsns.barplot(data=data_country,x='count',y=\"Q3\",color=\"yellow\",label=\"countries\",orient=\"h\")\nplt.title('Residence countrie', fontsize=30)\nplt.xlabel('COUNT', fontsize=25)\nplt.ylabel('COUNTRIES', fontsize=25)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nplt.show()","459b5ff3":"vizdata = dataset.loc[1:, [\"Q4\"]].dropna()\n\nvizdata = pd.DataFrame(vizdata.value_counts(normalize=True)).reset_index()\n\nvizdata_dict = dict(zip(vizdata['Q4'],vizdata[0]*100))\nlabels = ['{} {:.1f}%'.format(k, v) for k, v in vizdata_dict.items()]\n\nfig = plt.figure(\n    FigureClass=Waffle,\n    rows=6,\n    title=dict(label='Education level',loc='left',size=7, color='orange'),\n    figsize=(5,4),\n    values=vizdata_dict,\n    labels=labels,\n    legend = {\n        'loc': 'lower left',\n        'bbox_to_anchor': (0, -0.4),\n        'ncol': 3,\n        'framealpha': 0,\n        'fontsize': 4\n    },\n    icons='user', \n    icon_size=9,\n    icon_legend=True,\n    dpi=350,\n    block_arranging_style='new-line',\n    interval_ratio_x=0.3,\n    interval_ratio_y=0.4\n    \n)\n\nplt.show()","7776f3f8":"dataset = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv', skiprows=1)\nmasters = dataset[dataset['What is the highest level of formal education that you have attained or plan to attain within the next 2 years?']==\"Master\u2019s degree\"]\nbachelors = dataset[dataset['What is the highest level of formal education that you have attained or plan to attain within the next 2 years?']==\"Bachelor\u2019s degree\"]\n\ncount_m = masters['What is your age (# years)?'].value_counts()[:8].reset_index()\ncount_b = bachelors['What is your age (# years)?'].value_counts()[:8].reset_index()\n\npie_masters = go.Pie(labels=count_m['index'],values=count_m['What is your age (# years)?'],name=\"Masters\",hole=0.4,domain={'x': [0,0.46]})\n\npie_bachelors = go.Pie(labels=count_b['index'],values=count_b['What is your age (# years)?'],name=\"Bachelors\",hole=0.5,domain={'x': [0.52,0.98]})\n\nlayout = dict(title = 'Age group', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.18, y=0.5, text=\"Masters\", showarrow=False, font=dict(size=20)),\n                             dict(x=0.81, y=0.5, text=\"Bachelors\", showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_masters, pie_bachelors], layout=layout)\npy.iplot(fig)","dd0d7ea3":"count_mast = masters['In which country do you currently reside?'].value_counts()[:6].reset_index()\ncount_bach = bachelors['In which country do you currently reside?'].value_counts()[:6].reset_index()\n\npie_masters = go.Pie(labels=count_mast['index'],values=count_mast['In which country do you currently reside?'],name=\"Masters\",hole=0.4,domain={'x': [0,0.46]})\n\npie_bachelors = go.Pie(labels=count_bach['index'],values=count_bach['In which country do you currently reside?'],name=\"Bachelors\",hole=0.5,domain={'x': [0.52,0.98]})\n\nlayout = dict(title = 'Masters and Bachelors in various countries', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.18, y=0.5, text='Masters', showarrow=False, font=dict(size=20)),\n                             dict(x=0.81, y=0.5, text='Bachelors', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_masters, pie_bachelors], layout=layout)\npy.iplot(fig)","6056989d":"count_mast = masters['Select the title most similar to your current role (or most recent title if retired): - Selected Choice'].value_counts()[:7].reset_index()\ncount_bach = bachelors['Select the title most similar to your current role (or most recent title if retired): - Selected Choice'].value_counts()[:7].reset_index()\n\npie_masters = go.Pie(labels=count_mast['index'],values=count_mast['Select the title most similar to your current role (or most recent title if retired): - Selected Choice'],name=\"Masters\",hole=0.4,domain={'x': [0,0.46]})\n\npie_bachelors = go.Pie(labels=count_bach['index'],values=count_bach['Select the title most similar to your current role (or most recent title if retired): - Selected Choice'],name=\"Bachelors\",hole=0.5,domain={'x': [0.52,0.98]})\n\nlayout = dict(title = 'Current role', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.18, y=0.5, text='Masters', showarrow=False, font=dict(size=20)),\n                             dict(x=0.81, y=0.5, text='Bachelors', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_masters, pie_bachelors], layout=layout)\npy.iplot(fig)","44248748":"progBasis = dataset.iloc[:,7:20]\nprogBasis.columns =  ['language1','language2','language3','language4','language5','language6','language7','language8','language9','language10','language11','language12','language13']\npython = progBasis['language1'].value_counts()\nR = progBasis['language2'].value_counts()\nSQL = progBasis['language3'].value_counts()\nC = progBasis['language4'].value_counts()\nCplus = progBasis['language5'].value_counts()\njava = progBasis['language6'].value_counts()\njavascript = progBasis['language7'].value_counts()\njulia = progBasis['language8'].value_counts()\nswift = progBasis['language9'].value_counts()\nbash = progBasis['language10'].value_counts()\nmatlab = progBasis['language11'].value_counts()\nnone = progBasis['language12'].value_counts()\nother = progBasis['language13'].value_counts()\n#concat Dataframes\nprogBasis = pd.concat([python,R,SQL,C,Cplus,java,javascript,julia,swift,bash,matlab])\nprogBasis.index.names = ['Programming_Languages']\n\nfig = px.bar(progBasis, x=progBasis, y=progBasis.index, color=progBasis.index, orientation='h',\n             height=500)\nfig.update_layout(title=\"Programming Languages used on a daily basis\",\n                  xaxis_title=\"Count\",\n                  yaxis_title='Programming Languages')\nfig.show()","8efa267e":"dataQ8 = dataset['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'].sort_index().value_counts().sort_values(ascending = True)\n\nfig = px.bar(x= dataQ8, y=dataQ8.index,title=\"Various Languages suggested\", orientation='h', labels={'x':'Total Answers','y':'Language'})\n            \nfig.show()","d5d25b43":"count_mast = masters['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'].value_counts()[:7].reset_index()\ncount_bach = bachelors['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'].value_counts()[:7].reset_index()\n\npie_masters = go.Pie(labels=count_mast['index'],values=count_mast['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'],name=\"Masters\",hole=0.4,domain={'x': [0,0.46]})\n\npie_bachelors = go.Pie(labels=count_bach['index'],values=count_bach['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'],name=\"Bachelors\",hole=0.5,domain={'x': [0.52,0.98]})\n\nlayout = dict(title = 'Suggested Language', font=dict(size=15), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.18, y=0.5, text='Masters', showarrow=False, font=dict(size=20)),\n                             dict(x=0.81, y=0.5, text='Bachelors', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_masters, pie_bachelors], layout=layout)\npy.iplot(fig)","fe800b79":"dataQ8 = dataset['For how many years have you been writing code and\/or programming?'].sort_index().value_counts().sort_values(ascending = True)\n\nfig = px.bar(x= dataQ8, y=dataQ8.index,title=\"Programming Experience\", orientation='h', labels={'x':'Total Answers','y':'Range'})\n            \nfig.show()","56f56f36":"count_mast = masters['For how many years have you been writing code and\/or programming?'].value_counts()[:7].reset_index()\ncount_bach = bachelors['For how many years have you been writing code and\/or programming?'].value_counts()[:7].reset_index()\n\npie_masters = go.Pie(labels=count_mast['index'],values=count_mast['For how many years have you been writing code and\/or programming?'],name=\"Masters\",hole=0.4,domain={'x': [0,0.46]})\n\npie_bachelors = go.Pie(labels=count_bach['index'],values=count_bach['For how many years have you been writing code and\/or programming?'],name=\"Bachelors\",hole=0.5,domain={'x': [0.52,0.98]})\n\nlayout = dict(title = 'Experience writing code', font=dict(size=15), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.18, y=0.5, text='Masters', showarrow=False, font=dict(size=20)),\n                             dict(x=0.81, y=0.5, text='Bachelors', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_masters, pie_bachelors], layout=layout)\npy.iplot(fig)","90cb6aef":"dataQ15 = dataset['For how many years have you used machine learning methods?'].sort_index().value_counts().sort_values(ascending = True)\n\nfig = px.bar(x= dataQ15, y=dataQ15.index,title=\"Machine Learning experience\", orientation='h', labels={'x':'Total Answers','y':'Range'})\n            \nfig.show()","56d6b2b8":"count_m = masters['For how many years have you used machine learning methods?'].value_counts()[:8].reset_index()\ncount_b = bachelors['For how many years have you used machine learning methods?'].value_counts()[:8].reset_index()\n\npie_masters = go.Pie(labels=count_m['index'],values=count_m['For how many years have you used machine learning methods?'],name=\"Masters\",hole=0.4,domain={'x': [0,0.46]})\n\npie_bachelors = go.Pie(labels=count_b['index'],values=count_b['For how many years have you used machine learning methods?'],name=\"Bachelors\",hole=0.5,domain={'x': [0.52,0.98]})\n\nlayout = dict(title = 'Machine learning Experience', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.18, y=0.5, text=\"Masters\", showarrow=False, font=dict(size=20)),\n                             dict(x=0.81, y=0.5, text=\"Bachelors\", showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_masters, pie_bachelors], layout=layout)\npy.iplot(fig)","1186cdfc":"df_IDE = dataset.iloc[1:,21:33]\n\nIDE_col = ['Jupyter','RStudio','Visual Studio','Visual Studio Code', 'PyCharm', 'Spyder','Notepad++','Sublime Text','Vim \/ Emacs',\n           'MATLAB','None','Other']\n\ndf_IDE.columns = IDE_col\ndf_IDE = df_IDE.count().sort_values(ascending = True)\n\nfig = px.bar(x= df_IDE, y=df_IDE.index,title=\"Most Used Environments (IDE's)\",\n             orientation='h',\n             labels={'x':'Total Answers','y':'IDEs'})\n\n            \nfig.show()","903451aa":"df_frame = dataset.iloc[1:,66:82]\n\nframe_col = ['Scikit-learn','TensorFlow','Keras','PyTorch', 'Fast.ai', 'MXNet','Xgboost','LightGBM','CatBoost','Prophet','H2O 3','Caret',\n           'Tidymodels','JAX','None','Other']\n\ndf_frame.columns = frame_col\ndf_frame = df_frame.count().sort_values(ascending = False)\n\n\nfig = px.bar(y= df_frame, x=df_frame.index,title=\"Most Used Machine Learning Frameworks\",\n             orientation='v',\n             labels={'y':'Total Answers','x':'Frameworks '})\n\n\n            \nfig.show()","c97beca6":"dataQ17 = dataset.iloc[1:,82:94]\n\nML_col = ['Linear or Logistic Regression','Random Forests','Gradient Boosting','Bayesian Approaches', 'Evolutionary Approaches', \n          'Dense Neural Networks','CNN','Generative Adversarial Networks','RNN','Transformer Networks','None','Other']\n\ndataQ17.columns = ML_col\ndataQ17 = dataQ17.count().sort_values(ascending = False)\n\nfig = px.bar(y= dataQ17, x=dataQ17.index,title=\"Most Used Machine Learning Algorithms\",\n             orientation='v', \n             labels={'y':'Total Answers','x':'Algorithms '})\n\n\n            \nfig.show()","b58a1aea":"count_m = masters['What is the size of the company where you are employed?'].value_counts()[:8].reset_index()\ncount_b = bachelors['What is the size of the company where you are employed?'].value_counts()[:8].reset_index()\n\npie_masters = go.Pie(labels=count_m['index'],values=count_m['What is the size of the company where you are employed?'],name=\"Masters\",hole=0.4,domain={'x': [0,0.46]})\n\npie_bachelors = go.Pie(labels=count_b['index'],values=count_b['What is the size of the company where you are employed?'],name=\"Bachelors\",hole=0.5,domain={'x': [0.52,0.98]})\n\nlayout = dict(title = 'Size of Company', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.18, y=0.5, text=\"Masters\", showarrow=False, font=dict(size=20)),\n                             dict(x=0.81, y=0.5, text=\"Bachelors\", showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_masters, pie_bachelors], layout=layout)\npy.iplot(fig)","e79ec089":"count_m = masters['What is your current yearly compensation (approximate $USD)?'].value_counts()[:8].reset_index()\ncount_b = bachelors['What is your current yearly compensation (approximate $USD)?'].value_counts()[:8].reset_index()\n\npie_masters = go.Pie(labels=count_m['index'],values=count_m['What is your current yearly compensation (approximate $USD)?'],name=\"Masters\",hole=0.4,domain={'x': [0,0.46]})\n\npie_bachelors = go.Pie(labels=count_b['index'],values=count_b['What is your current yearly compensation (approximate $USD)?'],name=\"Bachelors\",hole=0.5,domain={'x': [0.52,0.98]})\n\nlayout = dict(title = 'Annual Compensation', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.18, y=0.5, text=\"Masters\", showarrow=False, font=dict(size=20)),\n                             dict(x=0.81, y=0.5, text=\"Bachelors\", showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_masters, pie_bachelors], layout=layout)\npy.iplot(fig)","791ba149":"dataQ29 = dataset.iloc[1:,155:173]\n\nDB_col = ['MySQL','PostgresSQL','SQLite','Oracle Database', 'MongoDB', 'Snowflake','IBM Db2','Microsoft SQL Server','Microsoft Access',\n          'Microsoft Azure Data Lake Storage','Amazon Redshift','Amazon Athena','Amazon DynamoDB','Google Cloud BigQuery','Google Cloud SQL',\n          'Google Cloud Firestore','None','Other']\n\ndataQ29.columns = DB_col\ndataQ29 = dataQ29.count().sort_values(ascending = True)\n\nfig = px.bar(x= dataQ29, y=dataQ29.index,title=\"Most Used relational databases, data warehouses, data lakes,\",\n             orientation='h',\n             height = 700,\n             labels={'y':'Total Answers','x':'DB '})\n\n            \nfig.show()","86a92049":"dataQ32 = dataset['Which of the following business intelligence tools do you use most often? - Selected Choice'].sort_index().value_counts().sort_values(ascending = True)\n\nfig = px.bar(x= dataQ32, y=dataQ32.index,title=\"Often used Business intelligence tools\", orientation='h', labels={'x':'Total Answers','y':'Range'})\n            \nfig.show()","9827dcab":"dataQ32 = dataset['What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice'].sort_index().value_counts().sort_values(ascending = True)\n\nfig = px.bar(x= dataQ32, y=dataQ32.index,title=\"Primary tool for analysing data\", orientation='h', labels={'x':'Total Answers','y':'Range'})\n            \nfig.show()","7ae54710":"count_m = masters['What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice'].value_counts()[:8].reset_index()\ncount_b = bachelors['What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice'].value_counts()[:8].reset_index()\n\npie_masters = go.Pie(labels=count_m['index'],values=count_m['What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice'],name=\"Masters\",hole=0.4,domain={'x': [0,0.46]})\n\npie_bachelors = go.Pie(labels=count_b['index'],values=count_b['What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice'],name=\"Bachelors\",hole=0.5,domain={'x': [0.52,0.98]})\n\nlayout = dict(title = 'Tools used for analysing data', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.18, y=0.5, text=\"Masters\", showarrow=False, font=dict(size=20)),\n                             dict(x=0.81, y=0.5, text=\"Bachelors\", showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_masters, pie_bachelors], layout=layout)\npy.iplot(fig)","faf2cfa8":"There are many different Integrated Development Environments but jupyter is the preferred one followed by visual studio code. Though other IDEs also have a considerable number of users.","07e5d793":"Almsot 50% of bachelors have less than 1 year experience with machine leaning methods whereas 33% of masters have less than 1 year of experience with machine learning methods. But the number of masters with experience between 1-3 years is higher than people with a bachelors degree. A similar trend is seen that people with masters degree have a higher experience as compared to bachelors.","7f74a30e":"The most commonly used databases are MySQL followed by PostgresSQL and microsoft SQL server","00742c20":"There is always an issue whenever we try to learn something new 'where do we start?'. So the community has answered and python came out on top with a large majority voting for python followed by R and SQL. There always was this conflict whether we should learn R or python when starting out but according to the survey now python is a must have. By lookingat the charts above we can say that different education level people suggest python to an aspiring data scientist. The number of R and SQL suggestions are a bit higher for people with a masters degree.","e08e0eef":"\nThe highest number of people participating in this survey are from India at around 5.5k","0665b58b":"A majority can be seen in people with experience between 1 or less than 1 to 5 years. They account for 50% of the people that took the survey. A lot of the younger generations are interested in data science and have just started out their career in the field.","70c90a79":"People who took the survey often prefer to use local developtment environments like RStudio and JupyterLab. The number of people that use basic statistical software like excel and google sheets is also quite high.","eb79211d":"\nAs we saw there are alot of beginners in data science we can see that a majority of people have an annual salary or compensation between 0 to 999$. But for masters degree holders the number of people having annual compensation between 100k to 124k is pretty high. Having a masters degree can give u more opportunites to learn and have a higher post whereas having a bachelors degree will be a good start to your data science journey.","864028b5":"We can observe that a majority of the people either possess a Master's degree or a Bachelor's degree. They account for around 75% for the total number of people who took the survey.\n\nTo get more insight on the dataset we will take these two factors namely people having a master's degree and people having a bachelor's degree.","e9df6f7d":"![image.png](attachment:image.png)","6803b6bb":"Scikit-learn is the most commonly used machine learning framework followed by tensorflow and keras which are mainly used for deep learning just like pytorch.","9322de3a":"Tableau, Microsoft Power BI and Google Data Studio are the most commonly used business intelligence tools. More than 70% people prefer using these tools over the others. The number of people that use these visualization tools on a general basis is also quite low. Only 30% of the people answered this question.","5f57f70a":"Here we can see alot of similarities in both the graphs. A huge number of people are working in smaller sized companies consisting of 0 to 49 employees. The number of people working for larger companies that is 10k plus people is also quite high.\n\nNow the next question arises whether theres a difference in annual compensation between people having a masters degree and people having a bachelors degree and if so by how much.","8786a8ea":"Out of 21k people that took the survey 15k people use python on a daily basis. They account for around 75% of the total number of people that took the survey. SQL and R are the next most used languages on a daily basis after python with 7.5k and 4.2k people respectivel","946d4187":"Linear and Logistic regression came out on top with more than 10k users followed by random forest. CNN and gradient boosting were also one of the top picks by the community followed after regression and random forest.","33afef52":"A majority of people that either hold a master's or a bachelor's degree are from India followed by United States of America. We can see a pattern in most countries that the number of people with masters degree is greater than people with a bachelors degree. But this is not the case for India as the number of bachelors degree holders are way more than masters degree holders. The highest number of masters and bachelors degree holders are from India with more than 60% of bachelors degree holders coming from India and more than 40% for masters.","95189339":"The most commonly suggested language is python with around 14k people followed by R and SQL with 1.2k and 849 users. Python seems like the go to language for anyone planning to start a career in data science.","4b86b9ae":"So a majority of bachelors that is more than 40% are currently students and for masters it is more than 20%. People with a masters degree are employed as a data scientist whereas people with a bachelors degree are working as software engineers. We can see that people with a masters degree are generally preferred for the role of data scientist as there are double the number of data scientists that hold a masters degree over a bachelors degree.","04cf9888":"# 2020 Kaggle Machine Learning & Data Science Survey Analysis","2125c276":"Here we can see that most of the people with a master's' degree are from the age group 25-29, whereas for a bachelors degree the prominent age group is 18-21. A majority of masters degree holders are in the group of 22 to 34 which accounts to more than 60%. Furthermore of bachelors the majority is seen in the ages from 18 to 29 which include more than 70% of them.","5bf7ed4e":"Education level does not affect the use of of analysing tools as both bachelors and masters degree holders have similar numbers.","8043d54b":"Most people with masters degree have programming experience of 3 to 5 years whereas people with bachelors degree are between 1 to 2 years. There are very few bachelors with experience above 5 years as compared to masters. The majority of people that hold a masters degree are between the 1 to 10 year experience range. In case of bachelors a majority is seen between 0 to 5 years\n\nNow the next question arises how much experience do they have in using machine learning methods."}}