{"cell_type":{"c4681593":"code","564b344d":"code","ed465f56":"code","2d1728e7":"code","fce78720":"code","6c4b550e":"code","f9faa18a":"code","a8691ed1":"code","308cdfb7":"code","462cd811":"code","c5eb4186":"code","58c68a6e":"code","8734beb1":"code","51f97926":"code","fc5d95ad":"markdown","831ad37f":"markdown","cb10f842":"markdown","30c2e7cd":"markdown","c4a419a6":"markdown","0e97b08b":"markdown","ad7a8011":"markdown","3688bdc7":"markdown","8a62f051":"markdown","3cc06679":"markdown","14a605e8":"markdown","61e1dc84":"markdown"},"source":{"c4681593":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","564b344d":"import pandas as pd\nfaceoff_data = pd.read_csv(\"..\/input\/faceoff_data.csv\")\n\nplayer = 'Patrice Bergeron'","ed465f56":"temp_df = faceoff_data.groupby('player', sort=False, as_index=False) \\\n    .agg({ 'game_id': 'count', 'win': 'sum' }) \\\n    .rename(columns={'game_id': 'count'}) \\\n    .set_index('player')\n\ntemp_df['percent'] = ( temp_df['win'] \/ temp_df['count']) * 100\n\ntemp_df \\\n    .round({'percent': 2}) \\\n    .sort_values('count', ascending=False) \\\n    .head(30)","2d1728e7":"pb_df = faceoff_data.loc[faceoff_data['player'] == player]\n\ntemp_df = pb_df \\\n    .groupby('opponent', sort=False, as_index=False) \\\n    .agg({ 'game_id': 'count', 'win': 'sum'}) \\\n    .rename(columns={'game_id': 'count'}) \\\n    .set_index('opponent')\n\ntemp_df['percent'] = (temp_df['win'] \/ temp_df['count']) * 100\n\ntemp_df.round({'percent': 2}).sort_values('count', ascending=False).head(20)\n","fce78720":"temp_df = faceoff_data.loc[faceoff_data['player'] == player] \\\n    .groupby('opponent', sort=False, as_index=False) \\\n    .agg({ 'game_id': 'count', 'win': 'sum'}) \\\n    .rename(columns={'game_id': 'count'}) \\\n    .set_index('opponent')\n\ntemp_df['percent'] = (temp_df['win'] \/ temp_df['count']) * 100\n\n#temp_df.loc[temp_df['count'] > 10].round({'percent': 2}).sort_values('count', ascending=False).head(30)\n\nfig, ax = plt.subplots()\n\ntemp_df.loc[temp_df['count'] > 10].round({'percent': 2}).head(30).plot( \\\n    'count', \\\n    'percent', \\\n    kind='scatter', \\\n    ax=ax, \\\n    linewidth=0, \\\n    figsize=(8,6)\n)\n\nplt.title('Bergeron Faceoff Opponents')\n\nfor k, v in temp_df.loc[temp_df['count'] > 10].round({'percent': 2}).head(30).iterrows():\n    xy = [ v['count'], v['percent']]\n    ax.annotate(k, xy, xytext=(10, -5), textcoords='offset points')\n\nax.axhline(y=50)\nax.axvline(x=25)\nax.text(34, 90, 'Dangerous', bbox=dict(facecolor='red', alpha=0.5))\nax.text(12, 85, 'Annoying', bbox=dict(facecolor='blue', alpha=0.5))\nax.text(12, 40, 'Ignorable', bbox=dict(facecolor='green', alpha=0.5))","6c4b550e":"temp_df = faceoff_data.loc[faceoff_data['player'] == player] \\\n    .groupby('zone', sort=False, as_index=False) \\\n    .agg({'game_id': 'count', 'win': 'sum'}) \\\n    .rename(columns={'game_id': 'count'}) \\\n    .set_index('zone')\n\ntemp_df['percent'] = ( temp_df['win'] \/ temp_df['count']) * 100\n\ntemp_df.round({'percent': 2}).sort_values('percent', ascending=False)\n","f9faa18a":"temp_df = faceoff_data.loc[faceoff_data['player'] == player] \\\n    .groupby('period', sort=False, as_index=False) \\\n    .agg({'game_id': 'count', 'win': 'sum'}) \\\n    .rename(columns={'game_id': 'count'}) \\\n    .set_index('period')\n\ntemp_df['percent'] = ( temp_df['win'] \/ temp_df['count'] ) * 100\n\ntemp_df.round({'percent': 2}).sort_values('percent', ascending=False)\n","a8691ed1":"temp_df = faceoff_data.loc[faceoff_data['player'] == player] \\\n    .groupby('game_tz', sort=False, as_index=False) \\\n    .agg({'game_id': 'count', 'win': 'sum'}) \\\n    .rename(columns={'game_id': 'count'}) \\\n    .set_index('game_tz')\n\ntemp_df['percent'] = ( temp_df['win'] \/ temp_df['count'] ) * 100\n\ntemp_df.round({'percent': 2}).sort_values('percent', ascending=False)\n","308cdfb7":"temp_df = faceoff_data.loc[faceoff_data['player'] == player] \\\n    .groupby('opposing_team', sort=False, as_index=False) \\\n    .agg({'game_id': 'count', 'win': 'sum'}) \\\n    .rename(columns={'game_id': 'count'}) \\\n    .set_index('opposing_team')\n\ntemp_df['percent'] = ( temp_df['win'] \/ temp_df['count'] ) * 100\n\ntemp_df.round({'percent': 2}).sort_values('percent', ascending=False)\n","462cd811":"temp_df = faceoff_data.loc[(faceoff_data['player'] == player) & ( faceoff_data['power_play'] == True ) ] \\\n    .groupby('power_play', sort=False, as_index=False) \\\n    .agg({'game_id': 'count', 'win': 'sum'}) \\\n    .rename(columns={'game_id': 'count'}) \\\n    .set_index('power_play')\n\ntemp_df['percent'] = ( temp_df['win'] \/ temp_df['count'] ) * 100\n\ntemp_df.round({'percent': 2}).sort_values('percent', ascending=False)\n","c5eb4186":"temp_df = faceoff_data.loc[(faceoff_data['player'] == player) & ( faceoff_data['penelty_kill'] == True ) ] \\\n    .groupby('penelty_kill', sort=False, as_index=False) \\\n    .agg({'game_id': 'count', 'win': 'sum'}) \\\n    .rename(columns={'game_id': 'count'}) \\\n    .set_index('penelty_kill')\n\ntemp_df['percent'] = ( temp_df['win'] \/ temp_df['count'] ) * 100\n\ntemp_df.round({'percent': 2}).sort_values('percent', ascending=False)\n","58c68a6e":"temp_df = faceoff_data.loc[(faceoff_data['player'] == player) & ( faceoff_data['penelty_kill'] == False ) & ( faceoff_data['power_play'] == False ) ] \\\n    .groupby('season', sort=False, as_index=False) \\\n    .agg({'game_id': 'count', 'win': 'sum'}) \\\n    .rename(columns={'game_id': 'count'}) \\\n    .set_index('season')\n\ntemp_df['percent'] = ( temp_df['win'] \/ temp_df['count'] ) * 100\n\ntemp_df.round({'percent': 2}).sort_values('percent', ascending=False)\n","8734beb1":"temp_df = faceoff_data.loc[(faceoff_data['player'] == player) & ( faceoff_data['home_ice'] == True ) ] \\\n    .groupby('home_ice', sort=False, as_index=False) \\\n    .agg({'game_id': 'count', 'win': 'sum'}) \\\n    .rename(columns={'game_id': 'count'}) \\\n    .set_index('home_ice')\n\ntemp_df['percent'] = ( temp_df['win'] \/ temp_df['count'] ) * 100\n\ntemp_df.round({'percent': 2}).sort_values('percent', ascending=False)\n","51f97926":"temp_df = faceoff_data.loc[faceoff_data['player'] == player] \\\n    .groupby('score_diff', sort=False, as_index=False) \\\n    .agg({'game_id': 'count', 'win': 'sum'}) \\\n    .rename(columns={'game_id': 'count'}) \\\n    .set_index('score_diff')\n\ntemp_df['percent'] = ( temp_df['win'] \/ temp_df['count'] ) * 100\n\ntemp_df.round({'percent': 2}).sort_values('score_diff', ascending=False)\n","fc5d95ad":"## Bergeron Faceoff Stats by Opposing Team","831ad37f":"## Bergeron Faceoff Stats by Zone","cb10f842":"## Bergeron Score Differential Stats","30c2e7cd":"## Bergeron Penalty Kill Faceoff Stats","c4a419a6":"## Bergeron Faceoff Stats by Period","0e97b08b":"## Bergeron Faceoff Stats by Opponent","ad7a8011":"## Bergeron 5-on-5 Faceoff Stats","3688bdc7":"## Bruins Games Faceoff Overall","8a62f051":"# Bruins\/Bergeron Faceoff Analysis\nTaking a look at different faceoff stats when sliced by a variety of dimensions.\n\nBergeron has a reputation for being a face-off powerhouse, and while the stats lean in that direction, it's worth noting that when lined up against top talent, that reputation doesn't hold up as much.\n\nOf note, when looking at Jack Eichel, Sidney Crosby, Leon Draisaitl, Bergeron's production drops below 50%.\n\nThis demostrates that opposing teams have to get good matchups against Bergeron to blunt his wins over other lines. It also hints that Bergeron's reputation is built on matchups against lesser opponents.","3cc06679":"## Bergeron Powerplay Faceoff Stats","14a605e8":"## Bergeron Home Ice Faceoff Stats","61e1dc84":"## Bergeron Faceoff Stats by Timezone"}}