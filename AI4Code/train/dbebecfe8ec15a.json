{"cell_type":{"574d6c4f":"code","890d900c":"code","81a49707":"code","f02b2a22":"code","23f8c6a0":"code","d9f2a2c6":"code","915b8d08":"code","3b47acf0":"code","80ab4759":"code","f98b6e6a":"code","c1e34b2c":"code","a91109c1":"markdown","498823d8":"markdown","ce46a786":"markdown","96f4ea92":"markdown"},"source":{"574d6c4f":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.offline as py\nfrom plotly import graph_objs as go\nimport folium\npy.init_notebook_mode(False)\n\nimport os","890d900c":"input_path = '..\/input\/gtd\/globalterrorismdb_0718dist.csv'\n\ndata = pd.read_csv(input_path, encoding = 'ISO-8859-1', low_memory = False)\ndata.head()","81a49707":"uniques = data.nunique()\nmissing = data.isnull().sum()\ntrace = go.Scatter(\n    x = uniques.index,\n    y = uniques.values \/ data.shape[0] * 100,\n    mode = 'markers',\n    name = 'Unique %',\n    marker = dict(\n        #size = uniques.values \/ data.shape[0] * 100,\n        sizemode = 'area',\n        color = np.random.randn(len(uniques))\n    )\n)\n\ntrace1 = go.Scatter(\n    x = missing.index,\n    y = missing.values \/ data.shape[0] * 100,\n    mode = 'markers',\n    name = 'Missing %',\n    marker = dict(\n        #size = missing.values \/ data.shape[0] * 100,\n        sizemode = 'area',\n        color = np.random.randn(len(missing)),\n        opacity = 0.5\n    )\n)\n\nlayout = go.Layout(\n    title = 'Distinct Feature Information',\n    xaxis = dict(\n        title = 'Feature Names'\n    ),\n    yaxis = dict(\n        title = 'Percentage of Values'\n    )\n)\n\nfig = go.Figure(data = [trace, trace1], layout = layout)\npy.iplot(fig)","f02b2a22":"data['Casualities'] = data['nkill'].fillna(0) + data['nwound'].fillna(0)\ncountries_affected = data.groupby(['country_txt'])['Casualities'].sum().sort_values(ascending = False)\n\ncolors = ['rgb(100, 30, 22)', 'rgb(120, 40, 31)', 'rgb(123, 36, 28)','rgb(148, 49, 38)', 'rgb(146, 43, 33)', 'rgb(176, 58, 46)',\n          'rgb(169, 50, 38)', 'rgb(203, 67, 53)', 'rgb(192, 57, 43)', 'rgb(231, 76, 60)', 'rgb(205, 97, 85)', 'rgb(236, 112, 99)',\n          'rgb(217, 136, 128)', 'rgb(241, 148, 138)', 'rgb(230, 176, 170)']\n\ntrace = go.Bar(\n    x = countries_affected.index[:15],\n    y = countries_affected.values[:15],\n    marker = dict(\n        color = colors,\n        line = dict(\n            color = 'rgb(8,48,107)',\n            width = 1.5,\n        )\n    )\n)\n\nlayout = go.Layout(\n    title = 'Country Devastation',\n    xaxis = dict(\n        title = 'Country'\n    ),\n    yaxis = dict(\n        title = 'Casuality'\n    )\n)\n\nfig = go.Figure(data = [trace], layout = layout)\n\npy.iplot(fig)","23f8c6a0":"temp = data.groupby(['iyear','country_txt'])['success'].sum()\ntemp = temp.loc[temp.groupby('iyear').idxmax()].reset_index()\ntraces = []\ntemp = temp.groupby('country_txt')\nfor group in temp:\n    g = temp.get_group(group[0])\n    trace = go.Scatter(\n        x = g['iyear'],\n        y = g['success'],\n        mode = 'markers+lines',\n        marker = dict(\n            sizemode = 'area',\n            size = g['success'] * 0.3\n        ),\n        name = g['country_txt'].values[0]\n    )\n    traces.append(trace)\n\nlayout = go.Layout(\n    title = 'Most Attacks Operated by Country',\n    xaxis = dict(\n        title = 'Year'\n    ),\n    yaxis = dict(\n        title = '# of Successful Attacks'\n    )\n)\n\nfig = go.Figure(data = traces, layout = layout)\n\npy.iplot(fig)","d9f2a2c6":"yearly_killed = data.groupby(['iyear'])['nkill'].sum().reset_index()\nyearly_wounded = data.groupby(['iyear'])['nwound'].sum().reset_index()\n\ntrace = go.Bar(\n    x = yearly_killed['iyear'],\n    y = yearly_killed['nkill'],\n    name = 'Killed',\n    marker = dict(\n        color = 'red'\n    )\n)\n\ntrace1 = go.Bar(\n    x = yearly_wounded['iyear'],\n    y = yearly_wounded['nwound'],\n    name = 'Wounded',\n    marker = dict(\n        color = 'red',\n        opacity = 0.5\n    )\n    \n)\n\nlayout = go.Layout(\n    title = 'Yearly Casualities',\n    xaxis = dict(\n        title = 'Year'\n    ),\n    barmode = 'stack'\n)\n\nfig = go.Figure(data = [trace, trace1], layout = layout)\npy.iplot(fig)","915b8d08":"months = {'1': 'Jan', '2': 'Feb', '3': 'March', '4': 'April', '5': 'May', '6': 'June', '7': 'July', '8': 'Aug', '9': 'Sept', '10': 'Oct', \n          '11': 'Nov', '12': 'Dec'}\n\nmonthly_deaths = data.groupby(['imonth'])['nkill'].sum()\n\n#traces = []\n#for year in monthly_deaths.index.levels[0]:\ntrace = go.Scatter(\n    x = [months[str(i)] for i in monthly_deaths.index.values[1:]],\n    y = monthly_deaths.values[1:],\n    #name = year,\n    line = dict(\n        color = 'rgb(23, 32, 42)'\n    ),\n    fill = 'toself',\n    fillcolor = 'red',\n    opacity = 0.6\n)\n\nlayout = go.Layout(\n    title = 'Killings Per Month',\n    xaxis = dict(\n        title = 'Month'\n    ),\n    yaxis = dict(\n        title = 'Kill Count'\n    )\n)\n\nfig = go.Figure(data = [trace], layout = layout)\n    \npy.iplot(fig)","3b47acf0":"group_names = data['gname'].value_counts()[1:11]\n\ntrace = go.Bar(\n    x = group_names.index,\n    y = group_names.values,\n    \n    marker = dict(\n        color = colors[:10],\n        line = dict(\n            color='rgb(8,48,107)',\n                    width = 1.5\n        ),\n    )\n)\n\nlayout = go.Layout(\n    title = 'Notorious Terrorist Groups',\n    xaxis = dict(\n        title = 'Terrorist Group'\n    ),\n    yaxis = dict(\n        title = '# Attacks'\n    )\n)\n\nfig = go.Figure(data = [trace], layout = layout)\n\npy.iplot(fig)","80ab4759":"def get_Fre(data, col_name):\n    data = data.groupby(['gname', col_name])[col_name].count().unstack().T\n    x_axis = data.columns\n    y_axis = np.max(data, axis = 0)\n    text = data.idxmax().values\n    return x_axis, y_axis, text\n\ndef plot(xaxis, yaxis, text):\n    u = np.unique(text)\n    color_num = np.random.randn(len(u)) * 0.2\n    colors = []\n    for t1 in text:\n        for index, t2 in enumerate(u):\n            if t1 == t2:\n                colors.append(color_num[index])\n\n    trace = go.Bar(\n        x = xaxis,\n        y = yaxis,\n        text = text,\n        textposition = 'outside',\n        hoverinfo = 'text + x',\n        marker = dict(\n            color = colors,\n            line = dict(\n                color = 'rgb(8,48,107)',\n                width = 1.5,\n            )\n        ),\n    )\n    \n    return trace\n\nnotorious_groups = data[data['gname'].isin(group_names.index)][['gname', 'attacktype1_txt', 'targtype1_txt', 'weaptype1_txt']]\n\ntrace1 = plot(*get_Fre(notorious_groups, 'targtype1_txt'))\ntrace2 = plot(*get_Fre(notorious_groups, 'attacktype1_txt'))\ntrace3 = plot(*get_Fre(notorious_groups, 'weaptype1_txt'))","f98b6e6a":"from plotly import tools\nfig = tools.make_subplots(rows = 3, cols = 1, shared_xaxes = True, print_grid = False, subplot_titles = ('Terrorist Group vs. Terrorist Target',\n                                                                                                         'Terrorist Group vs. Attack Type',\n                                                                                                         'Terrorist Group vs. Weapon Type'))\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 2, 1)\nfig.append_trace(trace3, 3, 1)\n\nfig['layout'].update(height = 600, width = 1000, showlegend = False)\npy.iplot(fig)","c1e34b2c":"casualities = data.groupby('country_txt')['Casualities'].sum().reset_index().sort_values(by = 'Casualities', ascending = False)\n\nm = folium.Map(\n    location = [12, 12],\n    zoom_start = 2,\n    tiles = 'CartoDB positron'\n)\n\nm.choropleth(\n    geo_data = os.path.join('..\/input\/worldcountries', 'world-countries.json'),\n    data = casualities,\n    columns = casualities.columns,\n    key_on = 'feature.properties.name',\n    fill_color = 'YlOrRd',\n    line_opacity = 0.5,\n    fill_opacity = 0.8,\n    reset = True,\n    smooth_factor = 1.0\n    \n)\nm","a91109c1":"From the plot above, We can see how the activity has has been from *1970 to 2017* on a monthly basis.","498823d8":"* The plot above shows the how many **successful** attacks have been done on a country over the years. The larger the variation in size of the bubble the more number of **successful** attacks operated on that Country. *The lines connected to the bubbles shows they are of same group.*\n* As we can **Iraq** has been attacked more frequently infact the terrorist activity has only been rising from *2004 to 2014*.","ce46a786":"* From the plot above, We can see that **Iraq** has the most number of **`casualities`** going over 200k. \n* It is the only *Country* where the casuality toll has crossed 200k followed by **Afghanistan** at 83k and so on..","96f4ea92":"* The subplots above shows given a Terrorist Group what is their preferred choice of *Target*, *Attacking* method and *Weapon*"}}