{"cell_type":{"4a61f404":"code","c6402f15":"code","a76ef7a2":"code","3cafd84f":"code","ec2fd5f5":"code","ebced278":"code","5bfeaa9d":"code","74a7e9dc":"code","aa5c6a39":"code","ccc8150e":"code","ce90dcd0":"markdown","ec174c95":"markdown","6f717826":"markdown"},"source":{"4a61f404":"tile_h = 10\ntile_w = 25\n\ntotal = tile_h * tile_w","c6402f15":"from glob import glob\nfrom random import shuffle\nfrom math import ceil, floor\n\nfrom PIL import Image","a76ef7a2":"def center_crop(img):\n    h = img.height\n    w = img.width\n    d = min(w, h)\n\n    if h == w:\n        return img\n\n    if h > w:\n        left = 0\n        right = w\n        top = floor((h - d) \/ 2)\n        bottom = h - top - 1\n    else:\n        left = floor((w - d) \/ 2)\n        right = w - left - 1\n        top = 0\n        bottom = h\n\n    return img.crop((left, top, right, bottom))\n\n\ndef resize(img, d=256):\n    h = img.height\n    w = img.width\n\n    if h > w:\n        new_h = d\n        new_w = floor(h * d \/ w)\n    else:\n        new_h = floor(w * d \/ h)\n        new_w = d\n\n    return img.resize((new_h, new_w),resample=Image.BICUBIC)\n\n\ndef crop_resize(img):\n    return center_crop(resize(img))","3cafd84f":"def concat_horizontal(images):\n    w = sum(im.width for im in images)\n    h = max(im.height for im in images)\n\n    result = Image.new('RGB', (w, h))\n\n    start_w = 0\n    for im in images:\n        result.paste(im, (start_w, 0))\n        start_w = start_w + im.width\n\n    return result\n\ndef concat_vertical(images):\n    w = max(im.width for im in images)\n    h = sum(im.height for im in images)\n\n    result = Image.new('RGB', (w, h))\n\n    start_h = 0\n    for im in images:\n        result.paste(im, (0, start_h))\n        start_h = start_h + im.height\n    \n    return result","ec2fd5f5":"images = glob('..\/input\/clothing-dataset-full\/images_compressed\/*')\nshuffle(images)","ebced278":"images_pil = [Image.open(im) for im in images[:total]]","5bfeaa9d":"cropped = []\n\nfor img in images_pil:\n    c = crop_resize(img)\n    cropped.append(c)","74a7e9dc":"lines = []\n\nfor i in range(0, total, tile_w):\n    sublist = cropped[i:i + tile_w]\n    line = concat_horizontal(sublist)\n    lines.append(line)\n\n\nresult = concat_vertical(lines)","aa5c6a39":"result.save('collage.jpg')","ccc8150e":"Image.open('..\/working\/collage.jpg')","ce90dcd0":"Now, let's create a collage:\n\n* select a subset of images\n* open each wit PIL\n* crop and resize\n* concat vertically and then horizontally\n* save the result","ec174c95":"Let's define a few functions:\n\n* `center_crop` for making an image square\n* `resize` for resizing the image to 256x256\n* `crop_resize` for combining these two functions\n* `concat_horizontal` and `concat_vertical` for concatenating multiple images horizontally and vertically ","6f717826":"# Collage\n\nWe'll create a simple collage from images: \n\n* Select a random subset of images\n* For each image\n    * Get a square from the center of the image\n    * Resize the square to 256x256\n* Put the images together in a tile of size `tile_h` x `tile_w`"}}