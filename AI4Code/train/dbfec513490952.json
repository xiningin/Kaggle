{"cell_type":{"15f75235":"code","7b2aa269":"code","d55fa4f6":"code","db8ed598":"code","a5fd56ec":"code","9dc208fd":"code","1d49ee78":"code","5ec48305":"code","d8ca3377":"code","9b3d808d":"code","35896a95":"code","f019d18c":"code","b0ad71f2":"code","9d3a200e":"code","c35f2a31":"code","b435cd6e":"code","fab547ac":"code","d30afdca":"code","80754aec":"code","56bb1f29":"code","8c1a6360":"code","481e8411":"code","1b45c57c":"code","cf39a65f":"code","8fae8d82":"code","e2f92fb0":"code","4425e1bd":"code","33cbfc24":"code","0a855152":"code","89db58b9":"code","709b8971":"code","da0bc60e":"code","ae6aa178":"code","16fe2040":"code","4e9f6219":"code","7ba4914b":"code","b453ae02":"code","e6b8e1fb":"code","2dffbb29":"code","ca786599":"code","d8bf3312":"code","4b961680":"code","723cf285":"code","33392878":"code","b41b8fee":"code","7d15d2d0":"code","b967547e":"code","944d4cdd":"code","62d8d19a":"code","ee563f87":"code","0c627213":"code","fba4098a":"code","2135f544":"code","5e833bd2":"code","f06f2382":"code","b38c7563":"code","c32ee59f":"code","bb303b6f":"code","7f7bd2c7":"code","54f8d436":"code","19a714d5":"code","3e1bd557":"code","85d3ef35":"code","ba715dd0":"code","b2c257c0":"code","6087ffa4":"code","3cdda07d":"code","2d73dea9":"code","114f2a13":"code","3587026d":"code","172a5273":"code","1d645f80":"code","f1c746f8":"code","ff43cbcf":"code","4b218366":"code","b5d76c63":"code","0a0ba43f":"code","2fe9d71f":"code","3e6069cd":"code","fe61f29a":"code","adfa9345":"code","c1dea284":"code","3fc40284":"code","4dcd5a14":"code","c601410e":"code","feeb5e31":"code","99218ea6":"code","b1d6feca":"code","28ebf5ac":"code","2c614da3":"code","99fd51a1":"code","25c92509":"code","917f5644":"code","39b29bdc":"code","ea85a8a6":"code","e2a475ae":"code","deabfa1c":"code","c474f79f":"code","37022629":"code","fa2f81b2":"code","c54a10b3":"code","9e4ea2fa":"code","da6138d5":"markdown","0c8c9012":"markdown","b76874ec":"markdown","6127d278":"markdown","f49cf611":"markdown","bda7c7e5":"markdown","26f30c13":"markdown","35031af3":"markdown","1830b275":"markdown","336270dc":"markdown","ad1d02b5":"markdown","d8b2c399":"markdown","95de67e7":"markdown","58b79c78":"markdown","ece14f7a":"markdown","b10ff655":"markdown","d8a5883e":"markdown","54a6d488":"markdown","02edc139":"markdown","5bf82232":"markdown","b504fb8e":"markdown","8ae87f3b":"markdown","14aec890":"markdown","59baa9a5":"markdown","53d14b36":"markdown","7fe2ede4":"markdown","b54e112a":"markdown","e230363d":"markdown","0b5fa726":"markdown","a0987962":"markdown","932a80c0":"markdown","a3eec6b4":"markdown","6cb2c433":"markdown","34579e27":"markdown","0e8d6f40":"markdown","bf79d04e":"markdown","8d20efba":"markdown","0e7aeb05":"markdown","a5bdab14":"markdown","f6d3340a":"markdown","2e83885e":"markdown","403afa4c":"markdown","b8c3fd0d":"markdown","7b699396":"markdown","af0f54d3":"markdown","d431c8b9":"markdown","0dce0669":"markdown","50772082":"markdown","6dcac3fc":"markdown","60718f5d":"markdown","5e931322":"markdown","24a5aa47":"markdown","6f6befc6":"markdown","06a6a20d":"markdown","787c0a4f":"markdown","a97b8be6":"markdown","9886b151":"markdown","929dfa45":"markdown","cff1e3b1":"markdown","c07a6d91":"markdown","76bad40e":"markdown","0279b63a":"markdown","6a512471":"markdown","0ca3ba32":"markdown","e0d13d40":"markdown","b4704988":"markdown","9d45538d":"markdown","76208a02":"markdown","19289ab8":"markdown","8be73dc6":"markdown","574f7db7":"markdown","4ddea490":"markdown"},"source":{"15f75235":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D","7b2aa269":"v = [3,4]\nu = [1,2,3]","d55fa4f6":"v ,u","db8ed598":"type(v)","a5fd56ec":"w = np.array([9,5,7])","9dc208fd":"type(w)","1d49ee78":"w.shape[0]","5ec48305":"w.shape","d8ca3377":"a = np.array([7,5,3,9,0,2])","9b3d808d":"a[0]","35896a95":"a[1:]","f019d18c":"a[1:4]","b0ad71f2":"a[-1]","9d3a200e":"a[-3]","c35f2a31":"a[-6]","b435cd6e":"a[-3:-1]","fab547ac":"v = [3,4]\nu = [1,2,3]","d30afdca":"plt.plot (v)","80754aec":"plt.plot([0,v[0]] , [0,v[1]])","56bb1f29":"plt.plot([0,v[0]] , [0,v[1]])\nplt.plot([8,-8] , [0,0] , 'k--')\nplt.plot([0,0] , [8,-8] , 'k--')\nplt.grid()\nplt.axis((-8, 8, -8, 8))\nplt.show()","8c1a6360":"v1 = np.array([1,2])\nv2 = np.array([3,4])\nv3 = v1+v2\nv3 = np.add(v1,v2)\nprint('V3 =' ,v3)\nplt.plot([0,v1[0]] , [0,v1[1]] , 'r' , label = 'v1')\nplt.plot([0,v2[0]] , [0,v2[1]], 'b' , label = 'v2')\nplt.plot([0,v3[0]] , [0,v3[1]] , 'g' , label = 'v3')\nplt.plot([8,-8] , [0,0] , 'k--')\nplt.plot([0,0] , [8,-8] , 'k--')\nplt.grid()\nplt.axis((-8, 8, -8, 8))\nplt.legend()\nplt.show()","481e8411":"plt.plot([0,v1[0]] , [0,v1[1]] , 'r' , label = 'v1')\nplt.plot([0,v2[0]]+v1[0] , [0,v2[1]]+v1[1], 'b' , label = 'v2')\nplt.plot([0,v3[0]] , [0,v3[1]] , 'g' , label = 'v3')\nplt.plot([8,-8] , [0,0] , 'k--')\nplt.plot([0,0] , [8,-8] , 'k--')\nplt.grid()\nplt.axis((-8, 8, -8, 8))\nplt.legend()\nplt.show()","1b45c57c":"u1 = np.array([3,4])\na = .5\nu2 = u1*a\nplt.plot([0,u1[0]] , [0,u1[1]] , 'r' , label = 'v1')\nplt.plot([0,u2[0]] , [0,u2[1]], 'b--' , label = 'v2')\nplt.plot([8,-8] , [0,0] , 'k--')\nplt.plot([0,0] , [8,-8] , 'k--')\nplt.grid()\nplt.axis((-8, 8, -8, 8))\nplt.legend()\nplt.show()","cf39a65f":"u1 = np.array([3,4])\na = -.3\nu2 = u1*a\nplt.plot([0,u1[0]] , [0,u1[1]] , 'r' , label = 'v1')\nplt.plot([0,u2[0]] , [0,u2[1]], 'b' , label = 'v2')\nplt.plot([8,-8] , [0,0] , 'k--')\nplt.plot([0,0] , [8,-8] , 'k--')\nplt.grid()\nplt.axis((-8, 8, -8, 8))\nplt.legend()\nplt.show()","8fae8d82":"a1 = [5 , 6 ,8]\na2 = [4, 7 , 9]\nprint(np.multiply(a1,a2))","e2f92fb0":"a1 = np.array([1,2,3])\na2 = np.array([4,5,6])\n\ndotp = a1@a2\nprint(\" Dot product - \",dotp)\n\ndotp = np.dot(a1,a2)\nprint(\" Dot product usign np.dot\",dotp)\n\ndotp = np.inner(a1,a2)\nprint(\" Dot product usign np.inner\", dotp)\n\ndotp = sum(np.multiply(a1,a2))\nprint(\" Dot product usign np.multiply & sum\",dotp)\n\ndotp = np.matmul(a1,a2)\nprint(\" Dot product usign np.matmul\",dotp)\n\ndotp = 0\nfor i in range(len(a1)):\n    dotp = dotp + a1[i]*a2[i]\nprint(\" Dot product usign for loop\" , dotp)","4425e1bd":"v3 = np.array([1,2,3,4,5,6])\nlength = np.sqrt(np.dot(v3,v3))\nlength","33cbfc24":"v3 = np.array([1,2,3,4,5,6])\nlength = np.sqrt(sum(np.multiply(v3,v3)))\nlength","0a855152":"v3 = np.array([1,2,3,4,5,6])\nlength = np.sqrt(np.matmul(v3,v3))\nlength","89db58b9":"v1 = [2,3]\nlength_v1 = np.sqrt(np.dot(v1,v1))\nnorm_v1 = v1\/length_v1\nlength_v1 , norm_v1","709b8971":"v1 = [2,3]\nnorm_v1 = v1\/np.linalg.norm(v1)\nnorm_v1","da0bc60e":"#First Method\nv1 = np.array([8,4])\nv2 = np.array([-4,8])\nang = np.rad2deg(np.arccos( np.dot(v1,v2) \/ (np.linalg.norm(v1)*np.linalg.norm(v2))))\nplt.plot([0,v1[0]] , [0,v1[1]] , 'r' , label = 'v1')\nplt.plot([0,v2[0]]+v1[0] , [0,v2[1]]+v1[1], 'b' , label = 'v2')\nplt.plot([16,-16] , [0,0] , 'k--')\nplt.plot([0,0] , [16,-16] , 'k--')\nplt.grid()\nplt.axis((-16, 16, -16, 16))\nplt.legend()\nplt.title('Angle between Vectors - %s'  %ang)\nplt.show()","ae6aa178":"#Second Method\nv1 = np.array([4,3])\nv2 = np.array([-3,4])\nlengthV1 = np.sqrt(np.dot(v1,v1)) \nlengthV2  = np.sqrt(np.dot(v2,v2))\nang = np.rad2deg(np.arccos( np.dot(v1,v2) \/ (lengthV1 * lengthV2)))\nprint('Angle between Vectors - %s' %ang)","16fe2040":"v1 = np.array([1,2,-3])\nv2 = np.array([7,-4,2])\nfig = plt.figure()\nax = Axes3D(fig)\nax.plot([0, v1[0]],[0, v1[1]],[0, v1[2]],'b')\nax.plot([0, v2[0]],[0, v2[1]],[0, v2[2]],'r')\nang = np.rad2deg(np.arccos( np.dot(v1,v2) \/ (np.linalg.norm(v1)*np.linalg.norm(v2)) ))\nplt.title('Angle between vectors: %s degrees.' %ang)","4e9f6219":"# https:\/\/www.youtube.com\/watch?v=FCmH4MqbFGs\n\nv1 = np.array([1,2,3])\nv2 = np.array([4,5,6])\nnp.inner(v1,v2)\n\nprint(\"\\n Inner Product ==>  \\n\", np.inner(v1,v2))\nprint(\"\\n Outer Product ==>  \\n\", np.outer(v1,v2))","7ba4914b":"v1 = np.array([1,2,3])\nv2 = np.array([4,5,6])\nprint(\"\\nVector Cross Product ==>  \\n\", np.cross(v1,v2))","b453ae02":"A = np.array([[1,2,3,4] , [5,6,7,8] , [10 , 11 , 12 ,13] , [14,15,16,17]])","e6b8e1fb":"A","2dffbb29":"type(A)","ca786599":"A.dtype","d8bf3312":"B = np.array([[1.5,2.07,3,4] , [5,6,7,8] , [10 , 11 , 12 ,13] , [14,15,16,17]])\nB","4b961680":"type(B)","723cf285":"B.dtype","33392878":"A.shape","b41b8fee":"A[0,]","7d15d2d0":"A[:,0]","b967547e":"A[0,0]","944d4cdd":"A[0][0]","62d8d19a":"A[1:3 , 1:3]","ee563f87":"np.zeros(9).reshape(3,3)","0c627213":"np.zeros((3,3))","fba4098a":"np.ones(9).reshape(3,3)","2135f544":"np.ones((3,3))","5e833bd2":"X = np.random.random((3,3))\nX","f06f2382":"I = np.eye(9)\nI","b38c7563":"D = np.diag([1,2,3,4,5,6,7,8])\nD","c32ee59f":"M = np.random.randn(5,5)\nU = np.triu(M)\nL = np.tril(M)\nprint(\"lower triangular matrix - \\n\" , M)\nprint(\"\\n\")\n\n\nprint(\"lower triangular matrix - \\n\" , L)\nprint(\"\\n\")\n\nprint(\"Upper triangular matrix - \\n\" , U)","bb303b6f":"A = np.array([[1,2] , [3,4] ,[5,6]])\nB = np.array([[1,1] , [1,1]])\nC = np.concatenate((A,B))\nC , C.shape , type(C) , C.dtype","7f7bd2c7":"np.full((5,5) , 8)","54f8d436":"M","19a714d5":"M.flatten()","3e1bd557":"#********************************************************#\nM = np.array([[1,2,3],[4,-3,6],[7,8,0]])\nN = np.array([[1,1,1],[2,2,2],[3,3,3]])\n\nprint(\"\\n First Matrix (M)  ==>  \\n\", M)\nprint(\"\\n Second Matrix (N)  ==>  \\n\", N)\n\nC = M+N\nprint(\"\\n Matrix Addition (M+N)  ==>  \\n\", C)\n\n# OR\n\nC = np.add(M,N,dtype = np.float64)\nprint(\"\\n Matrix Addition using np.add  ==>  \\n\", C)\n\n#********************************************************#","85d3ef35":"#********************************************************#\nM = np.array([[1,2,3],[4,-3,6],[7,8,0]])\nN = np.array([[1,1,1],[2,2,2],[3,3,3]])\n\nprint(\"\\n First Matrix (M)  ==>  \\n\", M)\nprint(\"\\n Second Matrix (N)  ==>  \\n\", N)\n\nC = M-N\nprint(\"\\n Matrix Subtraction (M-N)  ==>  \\n\", C)\n\n# OR\n\nC = np.subtract(M,N,dtype = np.float64)\nprint(\"\\n Matrix Subtraction using np.subtract  ==>  \\n\", C)\n\n#********************************************************#","ba715dd0":"M = np.array([[1,2,3],[4,-3,6],[7,8,0]])\n\nC = 10\n\nprint(\"\\n Matrix (M)  ==>  \\n\", M)\n\nprint(\"\\nMatrices Scalar Multiplication ==>  \\n\", C*M)\n\n# OR\n\nprint(\"\\nMatrices Scalar Multiplication ==>  \\n\", np.multiply(C,M))","b2c257c0":"M = np.array([[1,2,3],[4,-3,6],[7,8,0]])\n\nprint(\"\\n Matrix (M)  ==>  \\n\", M)\n\nprint(\"\\nTranspose of M ==>  \\n\", np.transpose(M))\n\n# OR\n\nprint(\"\\nTranspose of M ==>  \\n\", M.T)","6087ffa4":"M = np.array([[1,2,3],[4,-3,6],[7,8,0]])\n\nprint(\"\\n Matrix (M)  ==>  \\n\", M)\n\nprint(\"\\nDeterminant of M ==>  \", np.linalg.det(M))","3cdda07d":"M = np.array([[1,2,3],[4,-3,6],[7,8,0]])\n\nprint(\"\\n Matrix (M)  ==>  \\n\", M)\n\nprint(\"\\nRank of M ==> \", np.linalg.matrix_rank(M))","2d73dea9":"M = np.array([[1,2,3],[4,-3,6],[7,8,0]])\n\nprint(\"\\n Matrix (M)  ==>  \\n\", M)\n\nprint(\"\\nTrace of M ==> \", np.trace(M))","114f2a13":"M = np.array([[1,2,3],[4,-3,6],[7,8,0]])\n\nprint(\"\\n Matrix (M)  ==>  \\n\", M)\n\nprint(\"\\nInverse of M ==> \\n\", np.linalg.inv(M))","3587026d":"M = np.array([[1,2,3],[4,-3,6],[7,8,0]])\nN = np.array([[1,1,1],[2,2,2],[3,3,3]])\n\nprint(\"\\n First Matrix (M)  ==>  \\n\", M)\nprint(\"\\n Second Matrix (N)  ==>  \\n\", N)\n\nprint(\"\\n Point-Wise Multiplication of M & N  ==> \\n\", M*N)\n\n# OR\n\nprint(\"\\n Point-Wise Multiplication of M & N  ==> \\n\", np.multiply(M,N))","172a5273":"M = np.array([[1,2,3],[4,-3,6],[7,8,0]])\nN = np.array([[1,1,1],[2,2,2],[3,3,3]])\n\nprint(\"\\n First Matrix (M)  ==>  \\n\", M)\nprint(\"\\n Second Matrix (N)  ==>  \\n\", N)\n\nprint(\"\\n Matrix Dot Product ==> \\n\", M@N)\n\n# OR\n\nprint(\"\\n Matrix Dot Product using np.matmul ==> \\n\", np.matmul(M,N))\n\n# OR\n\nprint(\"\\n Matrix Dot Product using np.dot ==> \\n\", np.dot(M,N))","1d645f80":"M = np.array([[1,2,3],[4,-3,6],[7,8,0]])\nN = np.array([[1,1,1],[2,2,2],[3,3,3]])\n\nprint(\"\\n First Matrix (M)  ==>  \\n\", M)\nprint(\"\\n Second Matrix (N)  ==>  \\n\", N)\n\n\nprint(\"\\n Matrix Division (M\/N)   ==> \\n\", M\/N)\n\n# OR\n\nprint(\"\\n Matrix Division (M\/N)   ==> \\n\", np.divide(M,N))","f1c746f8":"N = np.array([[1,1,1],[2,2,2],[3,3,3]])\n\nprint(\"\\n Matrix (N)  ==>  \\n\", N)\n\n\nprint (\"Sum of all elements in a Matrix  ==>\")\nprint (np.sum(N))","ff43cbcf":"N = np.array([[1,1,1],[2,2,2],[3,3,3]])\n\nprint(\"\\n Matrix (N)  ==>  \\n\", N)\n\nprint (\"Column-Wise summation ==> \")\nprint (np.sum(N,axis=0))","4b218366":"N = np.array([[1,1,1],[2,2,2],[3,3,3]])\n\nprint(\"\\n Matrix (N)  ==>  \\n\", N)\n\nprint (\"Row-Wise summation  ==>\")\nprint (np.sum(N,axis=1))","b5d76c63":"M1 = np.array([[1,2,3] , [4,5,6]]) \nM1","0a0ba43f":"M2 = np.array([[10,10,10],[10,10,10]])\nM2","2fe9d71f":"np.kron(M1,M2)","3e6069cd":"A = np.array([[1,2,3] ,[4,5,6]])\nv = np.array([10,20,30])\nprint (\"Matrix Vector Multiplication  ==> \\n\" , A*v)","fe61f29a":"A = np.array([[1,2,3] ,[4,5,6]])\nv = np.array([10,20,30])\n\nprint (\"Matrix Vector Multiplication  ==> \\n\" , A@v)","adfa9345":"M1 = np.array([[1,2],[4,5]])\nM1","c1dea284":"#Matrix to the power 3\n\nM1@M1@M1","3fc40284":"#Matrix to the power 3\n\nnp.linalg.matrix_power(M1,3)","4dcd5a14":"# Create Tensor\n\nT1 = np.array([\n  [[1,2,3],    [4,5,6],    [7,8,9]],\n  [[10,20,30], [40,50,60], [70,80,90]],\n  [[100,200,300], [400,500,600], [700,800,900]],\n  ])\n\nT1","c601410e":"T2 = np.array([\n  [[0,0,0] , [0,0,0] , [0,0,0]],\n  [[1,1,1] , [1,1,1] , [1,1,1]],\n  [[2,2,2] , [2,2,2] , [2,2,2]]\n    \n])\n\nT2","feeb5e31":"A = T1+T2\nA","99218ea6":"np.add(T1,T2)","b1d6feca":"S = T1-T2\nS","28ebf5ac":"np.subtract(T1,T2)","2c614da3":"P = T1*T2\nP","99fd51a1":"np.multiply(T1,T2)","25c92509":"D = T1\/T2\nD","917f5644":"np.divide(T1,T2)","39b29bdc":"T1","ea85a8a6":"T2","e2a475ae":"np.tensordot(T1,T2)","deabfa1c":"A = np.array([[1,10,3] , [4,5,6] , [7,8,9]])\nA","c474f79f":"B = np.random.random((3,1))\nB","37022629":"# Ist Method\nX = np.dot(np.linalg.inv(A) , B)\nX","fa2f81b2":"# 2nd Method\nX = np.matmul(np.linalg.inv(A) , B)\nX","c54a10b3":"# 3rd Method\nX = np.linalg.inv(A)@B\nX","9e4ea2fa":"# 4th Method\nX = np.linalg.solve(A,B)\nX","da6138d5":"# Linear Algebra","0c8c9012":"# Tensor","b76874ec":"# Matrix dot product","6127d278":"# Multiplication of vectors","f49cf611":"Diagonal Matrix : https:\/\/en.wikipedia.org\/wiki\/Diagonal_matrix","bda7c7e5":"Dot Product :\n- https:\/\/www.youtube.com\/watch?v=WNuIhXo39_k\n- https:\/\/www.youtube.com\/watch?v=LyGKycYT2v0","26f30c13":"Solving Equations : \n   - https:\/\/www.youtube.com\/watch?v=NNmiOoWt86M\n   - https:\/\/www.youtube.com\/watch?v=a2z7sZ4MSqo","35031af3":"# Matrix Powers","1830b275":"# Traingular Matrices (lower & Upper triangular matrix)","336270dc":"# Length of Vector","ad1d02b5":"# Matrix Addition","d8b2c399":"# Row-Wise Addition","95de67e7":"Inner and Outer Product : https:\/\/www.youtube.com\/watch?v=FCmH4MqbFGs&t=2s","58b79c78":"# Vector Addition","ece14f7a":"# Rank of a matrix","b10ff655":"# Plotting a Vector","d8a5883e":"# Zero Matrix","54a6d488":"# Determinant of a matrix","02edc139":"# Matrix Multiplication (pointwise multiplication)","5bf82232":"Transpose of a matrix : https:\/\/www.youtube.com\/watch?v=g_Rz94DXvNo&list=PLmdFyQYShrjcoVkhCCIwxNj9N4rW1-T5I&index=13","b504fb8e":"# Matrix Operations","8ae87f3b":"# Tensor Dot Product","14aec890":"# Sum of all elements in a matrix","59baa9a5":"Matrix Concatenation : https:\/\/docs.scipy.org\/doc\/numpy\/reference\/generated\/numpy.concatenate.html","53d14b36":"# Tensor Element-Wise Division","7fe2ede4":"# Tensor Element-Wise Product","b54e112a":"# Kronecker Product of matrices","e230363d":"Kronecker Product of matrices : https:\/\/www.youtube.com\/watch?v=e1UJXvu8VZk","0b5fa726":"Angle between two vectors : https:\/\/www.youtube.com\/watch?v=WDdR5s0C4cY","a0987962":"# Matrices Scalar Multiplication","932a80c0":"# Matrix subtraction","a3eec6b4":"# Angle between vectors","6cb2c433":"Zero Matrix - https:\/\/www.web-formulas.com\/Math_Formulas\/Linear_Algebra_Definition_of_Zero_Matrix.aspx","34579e27":"# Diagonal Matrix ","0e8d6f40":"Matrix of Ones - https:\/\/en.wikipedia.org\/wiki\/Matrix_of_ones","bf79d04e":"Identity Matrix : https:\/\/en.wikipedia.org\/wiki\/Identity_matrix","8d20efba":"Matrix Addition : https:\/\/www.youtube.com\/watch?v=ZCmVpGv6_1g","0e7aeb05":"# Inverse of matrix A","a5bdab14":"How to normalize a vector : https:\/\/www.youtube.com\/watch?v=7fn03DIW3Ak","f6d3340a":"# Column-Wise Addition","2e83885e":"# Matrix Vector Multiplication","403afa4c":"# Solving Equations $$AX = B$$","b8c3fd0d":"# Matrix Vector Dot Product","7b699396":"Vector Cross Product : https:\/\/www.youtube.com\/watch?v=pWbOisq1MJU","af0f54d3":"Matrix Multiplication : \n- https:\/\/www.youtube.com\/watch?v=vzt9c7iWPxs&t=207s\n- https:\/\/www.youtube.com\/watch?v=XkY2DOUCWMU&list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&index=4","d431c8b9":"Matrices Scalar Multiplication : https:\/\/www.youtube.com\/watch?v=4lHyTQH1iS8&list=PLmdFyQYShrjcoVkhCCIwxNj9N4rW1-T5I&index=9","0dce0669":"Traingular Matrices : https:\/\/en.wikipedia.org\/wiki\/Triangular_matrix","50772082":"Matrix Types : \n   - https:\/\/www.youtube.com\/watch?v=alc9i7V2e9Q&list=PLmdFyQYShrjcoVkhCCIwxNj9N4rW1-T5I&index=5\n   - https:\/\/www.youtube.com\/watch?v=nfG4NwLhH14&list=PLmdFyQYShrjcoVkhCCIwxNj9N4rW1-T5I&index=6","6dcac3fc":"# Tensor Subtraction","60718f5d":"Matrix subtraction : https:\/\/www.youtube.com\/watch?v=7jb_AO_hRc8&list=PLmdFyQYShrjcoVkhCCIwxNj9N4rW1-T5I&index=8","5e931322":"##  Matrix Creation","24a5aa47":"# Dot Product","6f6befc6":"# Identity Matrix","06a6a20d":"# Vector Cross Product","787c0a4f":"# Matrix with Random Numbers","a97b8be6":"# Transpose of a matrix","9886b151":"<html>\n<body>\n<div align=\"center\">\n    \n<h1>Linear Algebra with Python<\/h1>\n\n<\/div>\n<\/body>\n<\/html>\n","929dfa45":"# Plot 2D Vector","cff1e3b1":"# Normalized Vector","c07a6d91":"What is Tensor :\n   - https:\/\/www.youtube.com\/watch?v=f5liqUk0ZTw\n   - https:\/\/www.youtube.com\/watch?v=bpG3gqDM80w&t=634s\n   - https:\/\/www.youtube.com\/watch?v=uaQeXi4E7gA","76bad40e":"# Matrix Division","0279b63a":"# Reading elements from an array ","6a512471":"# Inner & outer products","0ca3ba32":"What is vector : https:\/\/www.youtube.com\/watch?v=fNk_zzaMoSs&list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&index=1","e0d13d40":"# Tensor Addition","b4704988":"# Scalar Multiplication","9d45538d":"# Matrix of Ones","76208a02":"# Trace of matrix","19289ab8":"Determinant of a matrix : \n- https:\/\/www.youtube.com\/watch?v=21LWuY8i6Hw&t=88s\n- https:\/\/www.youtube.com\/watch?v=Ip3X9LOh2dk&list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&index=6","8be73dc6":"# Concatenate Matrices","574f7db7":"END","4ddea490":"Inverse of matrix : https:\/\/www.youtube.com\/watch?v=pKZyszzmyeQ"}}