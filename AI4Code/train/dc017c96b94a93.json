{"cell_type":{"e4e25fd9":"code","2d73ea49":"code","90f73cb3":"code","d40bef02":"code","78999f77":"code","d1509d5f":"code","419f5b94":"code","a3798b4c":"code","4d6eb50f":"code","87389f11":"code","94b8f157":"code","169b59bc":"code","4906696c":"code","b3d22672":"code","4dc875fd":"code","3b968ba4":"code","c7b15d03":"code","5c8602fd":"code","d157ccfb":"code","5342f569":"code","6de96527":"code","195ac66b":"code","d6ce7c21":"code","89322b87":"code","f1192a66":"code","31fe361b":"code","cbc8d92d":"code","b52ad088":"code","1be0b46b":"code","53993853":"code","54aade96":"code","439d08fc":"markdown","6f6d40d0":"markdown","5b729dc5":"markdown","15fe9b70":"markdown","66d0a4e4":"markdown","73cf75dc":"markdown","26f7c68c":"markdown","d40195b2":"markdown","3e3786ae":"markdown","4bb05630":"markdown","f327046e":"markdown","e2a9ea19":"markdown","dcf12bb9":"markdown","c41570cb":"markdown","a2f94d6f":"markdown","39b48e15":"markdown"},"source":{"e4e25fd9":"import numpy as np \nimport pandas as pd \nimport matplotlib                 \nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as mgrid\nimport seaborn as sns              \nimport calendar \nimport plotly.express as px\nimport plotly.graph_objects as go\nimport warnings\n\nfrom statsmodels.tsa.stattools import acf, adfuller\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom statsmodels.tsa.seasonal import seasonal_decompose\n\nwarnings.filterwarnings('ignore')\n%matplotlib inline","2d73ea49":"data = pd.read_csv('..\/input\/us-border-crossing-data\/Border_Crossing_Entry_Data.csv')\ndata['Date'] = pd.to_datetime(data['Date'])\ndata.loc[(data['Port Name'] == 'Eastport') & (data['State'] == 'Idaho'), 'Port Name'] = 'Eastport, ID'\n","90f73cb3":"people = data[data['Measure'].isin(['Personal Vehicle Passengers', 'Bus Passengers','Pedestrians', 'Train Passengers'])]\nvehicles = data[data['Measure'].isin(['Trucks', 'Rail Containers Full','Truck Containers Empty', 'Rail Containers Empty',\n       'Personal Vehicles', 'Buses', 'Truck Containers Full'])]\npeople_borders = people[['Border','Value']].groupby('Border').sum()\nvalues = people_borders.values.flatten()\nlabels = people_borders.index\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values)])\nfig.update(layout_title_text='Total inbound persons, since 1996')\nfig.show()","d40bef02":"p = people[['Date','Border','Value']].set_index('Date')\np = p.groupby([p.index.year, 'Border']).sum()\n\nval_MEX = p.loc(axis=0)[:,'US-Mexico Border'].values.flatten().tolist()\nval_CAN = p.loc(axis=0)[:,'US-Canada Border'].values.flatten().tolist()\nyrs = p.unstack(level=1).index.values\n\n# Bar chart \nfig = go.Figure(go.Bar(x = yrs, y = val_MEX, name='US-Mexico Border'))\nfig.add_trace(go.Bar(x = yrs, y = val_CAN, name='US-Canada Border'))\n\nfig.update_layout(title = 'Total inbounds (people), by border and years', barmode='stack', xaxis={'categoryorder':'category ascending'})\nfig.show()","78999f77":"vals = p.unstack().Value\nval_MEX = vals['US-Mexico Border']\nval_CAN = vals['US-Canada Border']\nval_TOT = val_MEX + val_CAN\ngrowth_MEX = val_MEX.diff().dropna()\/val_MEX.values[:-1]*100\ngrowth_CAN = val_CAN.diff().dropna()\/val_CAN.values[:-1]*100\ngrowth_TOT = val_TOT.diff().dropna()\/val_TOT.values[:-1]*100\n\nyrs = vals.index.values\nfig = go.Figure(go.Bar(x = yrs, y = growth_MEX.values[:-1], name='US-Mexico Border'))\nfig.add_trace(go.Bar(x = yrs, y = growth_CAN.values[:-1], name='US-Canada Border'))\nfig.add_trace(go.Line(x = yrs, y = growth_TOT.values[:-1], name='Total'))\n\nfig.update_layout(title = 'Border transit annual growth (people), by border and years', \n                  barmode='group', \n                  xaxis={'categoryorder':'category ascending'},\n                  yaxis=go.layout.YAxis(\n                      title=go.layout.yaxis.Title(\n                      text=\"Annual growth (%)\",\n                      font=dict(                      \n                      size=18,\n                      color=\"#7f7f7f\")\n            \n        )\n    )\n                 \n                 )\nfig.show()","d1509d5f":"m = people[['Date','Measure','Value']].set_index('Date')\nm = m.groupby([m.index.year,'Measure']).sum()\nmeasures = ['Personal Vehicle Passengers', 'Bus Passengers','Pedestrians', 'Train Passengers']\nyrs = m.unstack().index.values\n\nfig = go.Figure(data = [go.Bar(x = yrs, y = m.loc(axis=0)[:, mes].values.flatten().tolist(), name = mes) for mes in measures ])\n    \nfig.update_layout(title = 'Total inbounds (people), by measure and years', barmode='stack', xaxis={'categoryorder':'category ascending'})\nfig.show()","419f5b94":"people_measure = people[['Measure','Value']].groupby('Measure').sum()\nvalues = people_measure.values.flatten()\nlabels = people_measure.index\nfig = go.Figure(data=[go.Pie(labels = labels, values=values)])\nfig.update(layout_title_text='Total inbound persons, since 1996')\nfig.show()","a3798b4c":"mb = people[['Date','Border','Measure','Value']].set_index('Date')\nmb = mb.groupby([mb.index.year,'Border','Measure']).sum()\n\nfig = go.Figure(data = [go.Bar(x = yrs, y = mb.loc(axis=0)[:,'US-Canada Border', mes].values.flatten().tolist(), name = mes) for mes in measures ])\nfig.update_layout(title = 'US-Canada inbounds (people), by measure and years', barmode='stack', xaxis={'categoryorder':'category ascending'})\nfig.show()","4d6eb50f":"fig = go.Figure(data = [go.Bar(x = yrs, y = mb.loc(axis=0)[:,'US-Mexico Border', mes].values.flatten().tolist(), name = mes) for mes in measures ])\nfig.update_layout(title = 'US-Mexico inbounds (people), by measure and years', barmode='stack', xaxis={'categoryorder':'category ascending'})\nfig.show()","87389f11":"sns.set(rc={'figure.figsize':(15, 8)})\nfig,ax = plt.subplots()\nmb.loc(axis=0)[:,'US-Mexico Border', :].unstack().Value.plot(title='US-Mexico Border inbound crossings',ax=ax)\nfig.tight_layout()\nfig.show()","94b8f157":"mb.loc(axis=0)[:,'US-Canada Border', :].unstack().Value.plot(title='US-Canada Border inbound crossings')\nplt.show()","169b59bc":"# Take the values and set the date as index\n\nstart_year = 2014\nend_year = 2018\n\nm = people[['Date','Border','Measure','Value']].set_index('Date')\n\n# Group by years and measure\nm = m.groupby([m.index.year,'Border', 'Measure']).sum()\n\nm_can = m.loc(axis=0)[start_year:end_year,'US-Canada Border'].groupby('Measure').mean()\nm_mex = m.loc(axis=0)[start_year:end_year,'US-Mexico Border'].groupby('Measure').mean()\n\n# plotting, pie charts\nf,ax = plt.subplots(ncols=2, nrows=1)\n\nm_can['Value'].plot.pie( ax = ax[0], autopct = '%1.1f%%')\nm_mex['Value'].plot.pie( ax = ax[1], autopct = '%1.1f%%')\n\nax[0].set(title = 'Canadian border, average from {} to {}'.format(start_year,end_year), ylabel = '')\nax[1].set(title = 'Mexican border, average from {} to {}'.format(start_year,end_year), ylabel = '')\nf.show()","4906696c":"d = data[['Date','Measure','Value']].set_index('Date')\nyear_measure_df = d.pivot_table('Value', index = d.index.year, columns = 'Measure', aggfunc = 'sum')\nyear_measure_df.corr().style.background_gradient(cmap='coolwarm').set_precision(2)","b3d22672":"PStateVehicle_df = people.pivot_table('Value', index = 'State', columns = 'Measure', aggfunc = 'sum')\nrest = PStateVehicle_df[PStateVehicle_df.sum(axis=1)  < PStateVehicle_df.sum().sum()*0.04].sum().rename('Rest')\n\nt = PStateVehicle_df[PStateVehicle_df.sum(axis=1)  > PStateVehicle_df.sum().sum()*0.04]\nt = t.append(rest)\nt = t.iloc[np.argsort(t.sum(axis=1)).values]\nt['Other']=t['Bus Passengers'] + t['Train Passengers']\nt = t.drop(['Bus Passengers', 'Train Passengers'], axis=1)\n\nfig, ax = plt.subplots()\n\nsize = 0.4\n\na= t.sum(axis=1).plot.pie(radius = 1,\n       wedgeprops=dict(width=size+0.23, edgecolor='w'), ax = ax, autopct = '%1.1f%%', pctdistance= 0.8)\n\nb=pd.Series(t.values.flatten()).plot.pie(radius = 1- size,colors = ['#DF867E','#8DC0FB','#A9EE84'],\n       wedgeprops=dict(width=size-0.2, edgecolor='w'), ax=ax, labels = None)\n\nax.set(ylabel=None)\nred_patch = matplotlib.patches.Patch(color='#DF867E', label='Pedestrians')\nblue_patch = matplotlib.patches.Patch(color='#8DC0FB', label='Personal vehicle passengers')\ngreen_patch = matplotlib.patches.Patch(color='#A9EE84', label='Others')\nplt.legend(handles=[blue_patch,red_patch, green_patch], loc='best', bbox_to_anchor=(0.75, 0.5, 0.5, 0.5))\n\nplt.show()","4dc875fd":"start_year = 2015\nend_year = 2018\n\n# Group by years and states\np_states = people[['Date','State','Value']].set_index('Date')\np_states = p_states.groupby([p_states.index.year, 'State']).sum()\n# Select date range and compute mean\np_states = p_states.loc(axis=0)[start_year:end_year,:].groupby('State').mean()\n# Sort, for nice visualization\np_states = p_states['Value'].sort_values()\n# Take only states with more than 4% of share \nrest = p_states[p_states < p_states.sum()*.04].sum()\np_states = p_states[p_states > p_states.sum()*.04].append(pd.Series({'Rest' : rest}))\n\n# Same for all years:\np_states_tot = people[['State','Value']].groupby('State').sum()\np_states_tot = p_states_tot['Value'].sort_values()\nrest_tot = p_states_tot[p_states_tot < p_states_tot.sum()*.04].sum()\np_states_tot = p_states_tot[p_states_tot > p_states_tot.sum()*.04].append(pd.Series({'Rest' : rest_tot}))\n\n\n# plotting, pie charts\nf,ax = plt.subplots(ncols=2, nrows=1)\n\np_states_tot.plot.pie( ax = ax[0], autopct = '%1.1f%%')\np_states.plot.pie( ax = ax[1], autopct = '%1.1f%%')\n\nax[0].set(title = 'States share (inbound people), since 1996', ylabel = '')\nax[1].set(title = 'States share (inbound people), average from {} to {}'.format(start_year,end_year), ylabel = '')\nf.show()","3b968ba4":"p_ports = people[['Port Name','Value']].groupby('Port Name').sum().Value.sort_values(ascending = False)\np_ports.hist()\n\nplt.show()","c7b15d03":"people_crossing_series = people[['Date','Value']].groupby('Date').sum()\npeople_crossing_series_CAN = people[people['Border'] == 'US-Canada Border'][['Date','Value']].groupby('Date').sum()\npeople_crossing_series_MEX = people[people['Border'] == 'US-Mexico Border'][['Date','Value']].groupby('Date').sum()\n\nsns.set(rc={'figure.figsize':(15, 8)})\nfig, ax = plt.subplots()\n\n#Define a rolling mean, by years\nrmean = people_crossing_series.rolling(12, center=True).mean()\nrmean_MEX = people_crossing_series_MEX.rolling(12, center=True).mean()\nrmean_CAN = people_crossing_series_CAN.rolling(12, center=True).mean()\n\nax.plot(people_crossing_series,\n       marker='.', linestyle='-', linewidth=1, alpha = 1, label='Total')\nax.plot(rmean,\n       marker=None, linestyle='-', linewidth=1.5, alpha = 0.5, label='Total, rolling mean (years)', color = 'b')\n\nax.plot(people_crossing_series_MEX,\n       marker='.', linestyle='-', linewidth=1, alpha = 1, label='Mexico', color = 'r')\nax.plot(rmean_MEX,\n       marker=None, linestyle='-', linewidth=1.5, alpha = 0.5, label='Mexico, rolling mean (years)', color = 'r')\n\nax.plot(people_crossing_series_CAN,\n       marker='.', linestyle='-', linewidth=1, alpha = 1, label='Canada', color = 'g')\nax.plot(rmean_CAN,\n       marker=None, linestyle='-', linewidth=1.5, alpha = 0.5, label='Canada, rolling mean (years)', color = 'g')\n\nax.set(title = 'Total monthly persons entering in the US, from 1996', xlabel = 'year')\nax.legend()\n\nplt.show()","5c8602fd":"fig, ax = plt.subplots()\n\nstart = '2015'\nend = '2018'\n\n\nax.plot(people_crossing_series.loc[start:end],\n       marker='o', linestyle='-', linewidth=0.8, alpha = 1, label='Total', color = 'b')\nax.plot(rmean.loc[start:end],\n       marker=None, linestyle='-', linewidth=1.5, alpha = 0.5, label='Total, rolling mean (years)', color = 'b')\n\nax.plot(people_crossing_series_MEX.loc[start:end],\n       marker='.', linestyle='-', linewidth=0.8, alpha = 0.9, label='Mexico', color = 'r')\nax.plot(rmean_MEX.loc[start:end],\n       marker=None, linestyle='-', linewidth=1.5, alpha = 0.5, label='Mexico, rolling mean (years)', color = 'r')\n\nax.plot(people_crossing_series_CAN.loc[start:end],\n       marker='.', linestyle='-', linewidth=0.8, alpha = 0.9, label='Canada',color = 'g')\nax.plot(rmean_CAN.loc[start:end],\n       marker=None, linestyle='-', linewidth=1.5, alpha = 0.5, label='Canada, rolling mean (years)', color = 'g')\n\nax.set(title = 'Total persons entering in the US, from {} to {}'.format(start, end))\nax.legend()\n\nplt.show()","d157ccfb":"fig = plt.figure()\n\ngrid = mgrid.GridSpec(nrows=2, ncols=1, height_ratios=[2, 1])\n\nseas = fig.add_subplot(grid[0])\ntrend = fig.add_subplot(grid[1], sharex = seas)\n\nstart = '2015'\nend = '2018'\n\nseas.plot(people_crossing_series.loc[start:end]\/people_crossing_series.loc[start:end].sum(),\n       marker='o', linestyle='-', linewidth=0.8, alpha = 1, label='Total', color = 'b')\n\nseas.plot(people_crossing_series_MEX.loc[start:end]\/people_crossing_series_MEX.loc[start:end].sum(),\n       marker='.', linestyle='-', linewidth=0.8, alpha = 0.9, label='Mexico', color = 'r')\n\nseas.plot(people_crossing_series_CAN.loc[start:end]\/people_crossing_series_CAN.loc[start:end].sum(),\n       marker='.', linestyle='-', linewidth=0.8, alpha = 0.9, label='Canada', color = 'g')\n\nseas.set(title = 'Persons entering in the US, from {} to {}, normalised'.format(start, end),\n      ylabel = 'arbitrary units')\nseas.legend()\n\ntrend.plot(rmean.loc[start:end]\/rmean.loc[start:end].sum(),\n       marker='', linestyle='-', linewidth=2, alpha = 1, label='Total', color = 'b')\n\ntrend.plot(rmean_MEX.loc[start:end]\/rmean_MEX.loc[start:end].sum(),\n       marker='', linestyle='-', linewidth=2, alpha = 1, label='Mexico', color = 'r')\n\ntrend.plot(rmean_CAN.loc[start:end]\/rmean_CAN.loc[start:end].sum(),\n       marker='', linestyle='-', linewidth=2, alpha = 1, label='Canada', color = 'g')\n\ntrend.set(ylabel = ' Trend (arbitrary units)')\nfig.tight_layout()\nplt.show()","5342f569":"start = '2011'\nend = '2018'\npcsm = people_crossing_series.loc[start:end]\n\nfig, ax = plt.subplots(2,figsize = (18,13))\n\nfor i in range(11) :\n    mm = pcsm[pcsm.index.month == i] \n    ax[0].plot(mm, label = calendar.month_abbr[i])\n    ax[1].plot(mm\/mm.sum(), label = calendar.month_abbr[i])\n    \nax[0].set(title = 'persons entering the US between {} and {}, total by months'.format(start, end),\n         ylabel = '# people')\nax[1].set(title = 'persons entering the US between {} and {}, trend by months'.format(start, end),\n         ylabel = 'arbitrary units')\nax[0].legend()\nax[1].legend()\n\nplt.show()","6de96527":"start = '2011'\nend = '2018'\npcsm = people_crossing_series.loc[start:end]\nmonths = [calendar.month_abbr[m] for m in range(1,13)]\nfig, ax = plt.subplots(2,figsize = (18,13))\n\nstart = int(start)\nend = int(end)\n\nfor i in range(start, end) :\n    yy = pcsm[pcsm.index.year == i];\n    yy = yy.set_index(yy.index.month);\n    ax[0].plot(yy\n               , label = i)\n    ax[1].plot(yy\/yy.sum()\n               , label = i)\n    \nax[0].set(title = 'persons entering the US between {} and {}, total by years'.format(start, end),\n         ylabel = '# people')\n\nax[1].set(title = 'persons entering the US between {} and {}, seasonal (normalised)'.format(start, end),\n         ylabel = 'arbitrary units')\n\nplt.setp(ax, xticks = range(1,13), xticklabels = months)\nax[0].legend()\nplt.tight_layout()\nplt.show()","195ac66b":"pcsm = people_crossing_series.loc['2011':]\nres_mul = seasonal_decompose(pcsm, model='multiplicative', extrapolate_trend='freq')\nres_add = seasonal_decompose(pcsm, model='additive', extrapolate_trend='freq')\n\n# Plot\nfig, axes = plt.subplots(ncols=2, nrows=4, sharex=True, figsize=(15,8))\n\nres_mul.observed.plot(ax=axes[0,0], legend=False)\naxes[0,0].set_ylabel('Observed')\n\nres_mul.trend.plot(ax=axes[1,0], legend=False)\naxes[1,0].set_ylabel('Trend')\n\nres_mul.seasonal.plot(ax=axes[2,0], legend=False)\naxes[2,0].set_ylabel('Seasonal')\n\nres_mul.resid.plot(ax=axes[3,0], legend=False)\naxes[3,0].set_ylabel('Residual')\n\nres_add.observed.plot(ax=axes[0,1], legend=False)\naxes[0,1].set_ylabel('Observed')\n\nres_add.trend.plot(ax=axes[1,1], legend=False)\naxes[1,1].set_ylabel('Trend')\n\nres_add.seasonal.plot(ax=axes[2,1], legend=False)\naxes[2,1].set_ylabel('Seasonal')\n\nres_add.resid.plot(ax=axes[3,1], legend=False)\naxes[3,1].set_ylabel('Residual')\n\naxes[0,0].set_title('Multiplicative')\naxes[0,1].set_title('Additive')\n    \nplt.tight_layout()\nplt.show()","d6ce7c21":"des = res_mul.trend * res_mul.resid\ndes.plot(figsize = (15,10))\nplt.show()","89322b87":"index_list = des.index\nvalues = list(des)\nd = {'Value':values} \ndes = pd.DataFrame(d, index = index_list) \nresult = adfuller(des.Value.dropna())\nprint('ADF Statistic: %f' % result[0])\nprint('p-value: %f' % result[1])","f1192a66":"fig, axes = plt.subplots(3, 2, figsize=(16,10))\n\naxes[0, 0].plot(des.Value)\naxes[0, 0].set_title('Original Series')\nplot_acf(des, ax=axes[0, 1])\n\naxes[1, 0].plot(des.Value.diff()); axes[1, 0].set_title('1st Order Differentiation')\nplot_acf(des.diff().dropna(), ax=axes[1, 1])\n\naxes[2, 0].plot(des.diff().diff()); axes[2, 0].set_title('2nd Order Differentiation')\nplot_acf(des.diff().diff().dropna(), ax=axes[2, 1])\n\nplt.tight_layout()\nplt.show()","31fe361b":"result_diff = adfuller(des.diff().Value.dropna())\nprint('ADF Statistic: %f' % result_diff[0])\nprint('p-value: %f' % result_diff[1])","cbc8d92d":"fig, axes = plt.subplots(3, 2, figsize=(16,10))\n\naxes[0, 0].plot(des.Value)\naxes[0, 0].set_title('Original Series')\nplot_pacf(des, ax=axes[0, 1])\n\naxes[1, 0].plot(des.Value.diff()); axes[1, 0].set_title('1st Order Differencing')\nplot_pacf(des.diff().dropna(), ax=axes[1, 1])\naxes[2, 0].plot(des.diff().diff()); axes[2, 0].set_title('2nd Order Differencing')\nplot_pacf(des.diff().diff().dropna(), ax=axes[2, 1])\n\nplt.tight_layout()\nplt.show()","b52ad088":"model = ARIMA(des, order=(0,1,1))\nmodel_fit = model.fit(disp=0)\nprint(model_fit.summary())","1be0b46b":"residuals = pd.DataFrame(model_fit.resid)\nfig, ax = plt.subplots(2,2, figsize=(15,8))\nresiduals.plot(title=\"Residuals\", ax=ax[0,0])\nresiduals.plot(kind='kde', title='Density', ax=ax[0,1])\nplot_acf(model_fit.resid.dropna(), ax=ax[1,0])\nplt.tight_layout()\nplt.show()","53993853":"model_fit.plot_predict()\nplt.show()","54aade96":"train = des[:74]\ntest = des[74:]\nmodel_train = ARIMA(train, order=(0,1,1))  \n\nfitted_train = model_train.fit(disp=-1)  \nfc, se, conf = fitted_train.forecast(36, alpha=0.05)  # 95% conf\nfc_series = pd.Series(fc, index=test.index)\nlower_series = pd.Series(conf[:, 0], index=test.index)\nupper_series = pd.Series(conf[:, 1], index=test.index)\n\nplt.figure(figsize=(15,8))\nplt.plot(train, label='training')\nplt.plot(test, label='actual')\nplt.plot(fc_series, label='forecast')\nplt.fill_between(lower_series.index, lower_series, upper_series, \n                 color='k', alpha=.15)\nplt.title('Forecast vs Actuals')\nplt.legend(loc='upper left', fontsize=8)\nplt.show()","439d08fc":"The series is not stationary. ","6f6d40d0":"##### Trends look fairly regular and similar for all months","5b729dc5":"##### Interestingly, the number of pedestrians crossing the US-Mexico Border seems to be almost constant in time, compared to the number of Personal Vehicle Passengers","15fe9b70":"##### Shares have remained fairly constant, with California gaining some popularity.","66d0a4e4":"#####  Do people entering from Mexico and Canada have the same prefered means of transportation for crossing the border?","73cf75dc":"# Forecasting","26f7c68c":"##### The vast majority of ports have had less than 100M crossings, whereas a very few of them have a lot. Border crossings are concentrated in few ports among the 114 of them. ","d40195b2":"##### It looks like something happened around 2002 in the US-Mexican border.","3e3786ae":"## Studying the Border Annual Growth","4bb05630":"We can clearly see the seasonal component, with a period of one year. Minimums take place during the winter, notably in february, whereas the maximums are in summer, during August and Juy. Is this behaviour the same in both borders?","f327046e":"### Correlation","e2a9ea19":"## How are the crossings distributed among ports?","dcf12bb9":"## Have the shares of states changed with time?","c41570cb":"Seasonal decomposition: We will decompose the time series into its seasonal component, a trend component, and noise (error). We shall use data for the total number of persons entering the US from 2011 onwards, to avoid overfitting in the linear models.\nBoth additive or a multiplicative decomposition can be done. Let's do both and see which one works better","a2f94d6f":"## How do people cross the borders?","39b48e15":"# US Border Crossing"}}