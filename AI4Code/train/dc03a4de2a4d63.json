{"cell_type":{"b78b6735":"code","2e56c7d1":"code","cb3ced77":"code","3972407c":"code","68b3d1a9":"code","b47f4970":"code","401f68f7":"code","741695f1":"code","b9a33a4c":"code","8e9b3217":"code","5cbb15f3":"code","27ec8e64":"code","f27a6477":"markdown","5903ded9":"markdown","da43b4e2":"markdown","499c037a":"markdown","77152815":"markdown","e392a1b4":"markdown","af55f240":"markdown","6094351d":"markdown","25ea1fd1":"markdown","8a91f38f":"markdown","1227da26":"markdown","a39715da":"markdown","e0e76efa":"markdown","76b5d914":"markdown","47b179c4":"markdown","f35d4660":"markdown","b50f3b87":"markdown","8651dcc6":"markdown"},"source":{"b78b6735":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nfrom scipy import stats\nimport plotly.express as px\nfrom sklearn.preprocessing import LabelEncoder\nfrom fbprophet import Prophet\nfrom fbprophet.plot import add_changepoints_to_plot\nfrom fbprophet.diagnostics import cross_validation, performance_metrics\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","2e56c7d1":"def overview():\n    '''\n    Read a comma-separated values (csv) file into DataFrame.\n    Print 5 rows of data\n    Print number of rows and columns\n    Print datatype for each column\n    Print number of NULL\/NaN values for each column\n    Print summary data\n    \n    Return:\n    data, rtype: DataFrame\n    '''\n    data = pd.read_csv('..\/input\/avocado-prices\/avocado.csv')\n    print(\"The first 5 rows if data are:\\n\", data.head())\n    print(\"\\n\")\n    print(\"The (Row,Column) is:\\n\", data.shape)\n    print(\"\\n\")\n    print(\"Data type of each column:\\n\", data.dtypes)\n    print(\"\\n\")\n    print(\"The number of null values in each column are:\\n\", data.isnull().sum())\n    print(\"\\n\")\n    print(\"Summary of all the test scores:\\n\", data.describe())\n    return data\n\ndf = overview()","cb3ced77":"df = df.rename(columns={'4046': \"Small_Hass\", '4225': \"Large_Hass\", '4770': \"Extra_Large_Hass\"})\ndf = df.drop(columns=['Unnamed: 0'])","3972407c":"plt.figure(figsize=(10,5))\n\nsns.distplot(df['AveragePrice'])","68b3d1a9":"sns.boxplot(data = df, x = 'AveragePrice')","b47f4970":"plt.figure(figsize=(15,10))\nsns.barplot(x = 'year', y = 'AveragePrice', hue = 'type', data = df)","401f68f7":"plt.figure(figsize=(15,10))\n\ng = sns.factorplot('AveragePrice','region', data = df, hue='year', height = 13, aspect = 0.8, palette ='husl', join = False)","741695f1":"le = LabelEncoder()\n\n# Implementing LE on type\nle.fit(df.type.drop_duplicates()) \ndf.type = le.transform(df.type)\n\n# Implementing LE on regions\nle.fit(df.region.drop_duplicates()) \ndf.region = le.transform(df.region)","b9a33a4c":"plt.figure(figsize=(15,10))\n\n\ncorrMatrix = df.corr()\nsns.heatmap(corrMatrix, annot=True)\nplt.show()","8e9b3217":"# Here, we will only need columns that contain the timestamp and the measure that we will like to predict \ncols = ['Date', 'AveragePrice']\ndf1 = df[cols]\ndf1.columns = ['ds', 'y']\n\nm = Prophet()\nm.fit(df1)\n\nfuture = m.make_future_dataframe(periods=365)\n\nforecast = m.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()\nfig1 = m.plot(forecast)","5cbb15f3":"from fbprophet.plot import plot_plotly\nimport plotly.offline as py\npy.init_notebook_mode()\n\nfig = plot_plotly(m, forecast)  # This returns a plotly Figure\npy.iplot(fig)","27ec8e64":"# Getting rid outliers\nq = df['AveragePrice'].quantile(0.99)\ndf = df[df['AveragePrice']< q]\n\n\ny = df['AveragePrice']\nX = df[['Small_Hass', 'Large_Hass', 'Extra_Large_Hass', 'Small Bags', 'Large Bags', 'XLarge Bags', 'type', 'year', 'region']]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n\nlr = LinearRegression().fit(X_train,y_train)\ny_train_pred = lr.predict(X_train)\ny_test_pred = lr.predict(X_test)\n\nprint(lr.score(X_test,y_test))","f27a6477":"## Avocado prices in different regions","5903ded9":"### Changing column names and dropping redundant columns","da43b4e2":"# Predicting future prices of avocado using Prophet\n![](https:\/\/miro.medium.com\/max\/964\/0*tVCene42rgUTNv9Q.png)","499c037a":"![](https:\/\/s23209.pcdn.co\/wp-content\/uploads\/2016\/04\/5MinuteAvocadoToastIMG_8273edit-600x900.jpg?p=22555)\n# Avocado prices are on the rise over the past decade \nAvocado has become the world's most trendest fruit. This superfood is now a mainstay for foodies everywhere and the millenials love it more than anyone! However, have you noticed your avocado toast seems to be getting more and more expensive? Avocado prices have increased sharply to up to 129%, with an average price of a Hass avocado reaching a price of $2.10 in 2019, almost doubling in a span of one year.\n\nHere, we will perform an exploratory data analysis and create a model to predict future prices.","77152815":"## Comparing prices of different types of avocado between the years","e392a1b4":"# Performing linear regression\n- Here, we will remove 'total bag', 'total volume' since we have decided to use small_hass, large_hass and extra_large_hass instead. \n    - 'total bag' and 'total volume' are highly correlated to small_hass, large_hass and extra_large_hass. We have decided to drop them since we will be using those. \n    - We will also be removing outliers by getting 99th percentile and keeping the data below it.","af55f240":"### Using Plotly to create an interactive dashboard","6094351d":"## Importing dataset into notebook and create an overview of data","25ea1fd1":"- It seems like only type is correlated to average prices. ","8a91f38f":"- We can see that the average price fluctuates around 1.00 and 2.00. Looking into our summary we can see that the mean price is around 1.41. \n- We can see a cluster of outliers present after the price of 2.5. We can get rid of the outlier by getting the 99th percentile and keeping the data below it or we can use Z-score to remove any outliers that have scores that ae greater than or less than 3 or -3 respectively. This will be done before we implement our model. ","1227da26":"## Overall price distribution","a39715da":"- First, we can see that organic avocado are definitely more expensive than conventional avocado. \n- We can see prices of avocado increasing from 2015 to 2017 before falling back to similar prices in 2016.","e0e76efa":"## Importing required packages","76b5d914":"# Exploratory data analysis ","47b179c4":"## Measuring correlation \n- Before running the correlation test, we will need to convert the categorical values into numerical values using LabelEncoder.","f35d4660":"- There is around 18k rows of data, with 13 variables to analyse. \n- No null values observed.\n- Numerical columns (4046, 4225 and 4770) represent small hass, large hass and extra large hass. We may want to change the column labels to prevent confusion. ","b50f3b87":"Prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series that have strong seasonal effects and several seasons of historical data.\n\n- We will adjust yearly_seasonality to be True.\n  - Seasonality is a characteristic of a time series in which the data experiences regular and predictable changes that recur every calendar year. ","8651dcc6":"- We can see that 2017 is the year where avocado prices were the highest. It was due to a reduced harvest during that year that brought the prices up.\n- Hartford Springfield seems to have the highest prices throughout the year."}}