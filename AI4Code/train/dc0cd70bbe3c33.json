{"cell_type":{"ca5fc8c1":"code","ca989ec2":"code","99eae724":"code","b2c6a527":"code","da25d677":"code","5828f889":"code","cdfdaea3":"code","b12848a6":"code","91cfad3a":"code","49e30192":"code","1a219fac":"code","04527097":"code","3949841a":"code","69ef91ba":"code","c8244f53":"code","0a8a8de3":"code","3dc9e619":"code","84dd65d5":"code","cd8d13bb":"code","64738949":"code","956a4081":"code","df508110":"code","682e6190":"code","565dc22e":"code","fd6d81b8":"code","5054360b":"code","2b9c2ef6":"code","206ec1f6":"code","4bd87454":"code","3b7f98cb":"code","8c8968b0":"code","6b2bb148":"markdown","ddc4e293":"markdown","c739b751":"markdown","43f9f8e5":"markdown","8190e5f9":"markdown","0a93b137":"markdown","13fc09c1":"markdown","26d5153a":"markdown","6a4f3659":"markdown","9e2f837f":"markdown","c0f2fc2d":"markdown","c38c80e8":"markdown","f4395586":"markdown","702d9fc8":"markdown"},"source":{"ca5fc8c1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ca989ec2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly_express as px","99eae724":"df = pd.read_csv('..\/input\/all-premier-league-matches-20102021\/df_full_premierleague.csv')","b2c6a527":"obj_cols = df.dtypes[df.dtypes == 'object'].index","da25d677":"df[obj_cols].head()","5828f889":"df['date'] = pd.to_datetime(df['date'],format= '%Y-%m-%d')","cdfdaea3":"x, y = df['result_full'].str.split('-',1).str\ndf['home_goals'] = x\ndf['away_goals'] = y\ndf[['home_goals','away_goals']] = df[['home_goals','away_goals']].astype(int)\ndf['total_goals'] = df['home_goals'] + df['away_goals']","b12848a6":"df['home_win'] = (df.loc[:,'home_goals'] - df.loc[:,'away_goals'])>0\ndf['away_win'] = (df.loc[:,'away_goals'] - df.loc[:,'home_goals'])>0\ndf['home_win'] = df['home_win'].astype(int)\ndf['away_win'] = df['away_win'].astype(int)","91cfad3a":"df.head()","49e30192":"overall_home_goals = pd.DataFrame(df.groupby('home_team')['home_goals'].sum().sort_values(ascending=False)).reset_index()\noverall_home_goals.columns = ['Home Team','Goals at Home']","1a219fac":"fig = px.bar(overall_home_goals.head(10),x='Home Team',y='Goals at Home',color='Home Team')\nfig.update_layout(title = 'Most Home Goals since 10\/11 Season',xaxis_title = 'Team', yaxis_title = 'Goals')\nfig.show()","04527097":"overall_away_goals = pd.DataFrame(df.groupby('away_team')['away_goals'].sum().sort_values(ascending=False)).reset_index()\nfig = px.bar(overall_away_goals.head(10),x='away_team',y='away_goals',color='away_team')\nfig.update_layout(title = 'Most Away Goals Since 10\/11 Season',xaxis_title = 'Team', yaxis_title = 'Goals')","3949841a":"game_count = pd.DataFrame(df.groupby('home_team')['season'].count()).reset_index()\ngame_count['away'] = pd.DataFrame(df.groupby('away_team')['season'].count()).reset_index()['season']\ngame_count['total'] = game_count['season'] + game_count['away']\ngame_count.columns = ['Team','Home Games','Away Games','Total Games']","69ef91ba":"overall_goals = pd.DataFrame(df.groupby('home_team')['home_goals'].sum())\noverall_goals['away_goals'] = list(pd.DataFrame(df.groupby('away_team')['away_goals'].sum()).reset_index()['away_goals'])\noverall_goals['difference'] = overall_goals['home_goals'] - overall_goals['away_goals']\noverall_goals = overall_goals.reset_index()\noverall_goals.columns = ['Team','Home Goals','Away Goals','Difference']\noverall_goals['Total Goals'] = overall_goals['Home Goals'] + overall_goals['Away Goals']\noverall_goals = overall_goals.sort_values('Total Goals',ascending=False)\noverall_goals = overall_goals.merge(game_count,how='inner',on='Team')\noverall_goals['Goals\/Game'] = overall_goals['Total Goals']\/overall_goals['Total Games']\noverall_goals['Home Goals\/Game'] = overall_goals['Home Goals']\/overall_goals['Home Games']\noverall_goals['Away Goals\/Game'] = overall_goals['Away Goals']\/overall_goals['Away Games']\noverall_goals","c8244f53":"px.pie(overall_goals,values='Total Goals',names='Team',title = 'Goals scored as % of total')","0a8a8de3":"def get_value(x):\n    if x == 'Arsenal':\n        return 'red'\n    elif x == 'Aston Villa':\n        return px.colors.qualitative.Safe[1]\n    elif x == 'Burnley':\n        return px.colors.qualitative.Safe[8]\n    elif x == 'Chelsea':\n        return px.colors.qualitative.G10[0]\n    elif x == 'Everton':\n        return px.colors.qualitative.G10[0]\n    elif x == 'Leeds United':\n        return 'white'\n    elif x == 'Liverpool':\n        return 'red'\n    elif x == 'Manchester City':\n        return px.colors.qualitative.Light24[13]\n    elif x == 'Manchester United':\n        return 'red'\n    elif x == 'Southampton':\n        return px.colors.qualitative.Set1[0]\n    elif x == 'Tottenham Hotspur':\n        return px.colors.qualitative.Bold[2]\n    elif x == 'West Ham United':\n        return px.colors.qualitative.Safe[8]","3dc9e619":"home_goals_freq = pd.DataFrame(df.groupby(['home_team','home_goals'])['season'].count()).reset_index()\nfor i in ['Arsenal','Aston Villa','Burnley','Chelsea','Everton','Leeds United','Leicester City','Liverpool','Manchester City','Manchester United','Southampton','Tottenham Hotspur','West Ham United']:\n    print(\"The distribution of goals for {}'s home games are: -\".format(i))\n    fig = px.bar(home_goals_freq[home_goals_freq['home_team'] == i],x='home_goals',y='season')\n    fig.update_layout(title = i,xaxis_title = 'Number of Goals',yaxis_title = 'Frequency')\n    fig.update_traces(marker_color=get_value(i))\n    fig.show()","84dd65d5":"high_scoring_games = df[df['total_goals']>5]\nhigh_scoring_games.sort_values('total_goals',ascending=False)[['home_team','away_team','date','result_full','result_ht','total_goals']].head(20)","cd8d13bb":"avg_goals = pd.DataFrame(df.groupby('home_team')['home_goals'].mean()).reset_index()\navg_goals['away_goals'] = list(pd.DataFrame(df.groupby('away_team')['away_goals'].mean()).reset_index()['away_goals']) \navg_goals.columns = ['Team','Home Average','Away Average']","64738949":"fig = px.scatter(avg_goals,x='Home Average',y='Away Average',color='Team',title = 'Home\/Away Performance by PL Teams')\nfig.add_hline(y=1.099552708794958,line_dash='dash',line_width=1,line_color='red')\nfig.add_vline(x=1.3823472204742036,line_dash='dash',line_width=1,line_color='red')\nfig.add_annotation(x=2,y=1.9,text='These teams score well at<br>Home and Away',showarrow=False)\nfig.add_annotation(x=2,y=0.8,text='These teams score better at<br> Home than Away',showarrow=False)\nfig.add_annotation(x=0.78,y=1.9,text='These teams score better at<br> Away than Home',showarrow=False)\nfig.add_annotation(x=0.78,y=0.8,text='These teams score poorly at<br> Home than Away',showarrow=False)\n","956a4081":"united = df[(df[\"home_team\"]==\"Manchester United\")]\nsaf = united[united['date']<pd.to_datetime('2013-05-19')]\nmoyes = united[(united['date']<pd.to_datetime('2014-04-22'))&(united['date']>pd.to_datetime('2013-05-19'))]\ngiggs = united[(united['date']<pd.to_datetime('2014-05-11'))&(united['date']>pd.to_datetime('2014-04-22'))]\ngaal = united[(united['date']<pd.to_datetime('2016-05-23'))&(united['date']>pd.to_datetime('2014-07-16'))]\nmou = united[(united['date']<pd.to_datetime('2018-12-18'))&(united['date']>pd.to_datetime('2016-05-27'))]\nole = united[united['date']>pd.to_datetime('2018-12-18')]","df508110":"united_away = df[(df[\"away_team\"]==\"Manchester United\")]\nsaf2 = united_away[united_away['date']<pd.to_datetime('2013-05-19')]\nmoyes2 = united_away[(united_away['date']<pd.to_datetime('2014-04-22'))&(united_away['date']>pd.to_datetime('2013-05-19'))]\ngiggs2 = united_away[(united_away['date']<pd.to_datetime('2014-05-11'))&(united_away['date']>pd.to_datetime('2014-04-22'))]\ngaal2 = united_away[(united_away['date']<pd.to_datetime('2016-05-23'))&(united_away['date']>pd.to_datetime('2014-07-16'))]\nmou2 = united_away[(united_away['date']<pd.to_datetime('2018-12-18'))&(united_away['date']>pd.to_datetime('2016-05-27'))]\nole2 = united_away[united_away['date']>pd.to_datetime('2018-12-18')]","682e6190":"w = []\nl = []\nt = []\nfor i in [saf,moyes,giggs,gaal,mou,ole]:\n    w.append(i[i['home_win']==1]['home_win'].sum())\n    l.append(i[i['away_win']==1]['away_win'].sum())\n    t.append(i['season'].count())\nhome_wins = pd.DataFrame({'Managers':['SAF','Moyes','Giggs','Van Gaal','Mou','Ole'],'Wins':w,'Losses':l,'Total':t})\nhome_wins['Draws'] = home_wins['Total'] - (home_wins['Wins'] + home_wins['Losses'])\nhome_wins['Home Points'] = home_wins['Wins']*3 + home_wins['Draws']*1\nhome_wins['Win %'] = round((home_wins['Wins']\/ home_wins['Total'])*100,2)\nhome_wins['Point %'] = round(home_wins['Home Points']\/(home_wins['Total']*3)*100,2)\n\nw2 = []\nl2 = []\nt2 = []\nfor i in [saf2,moyes2,giggs2,gaal2,mou2,ole2]:\n    w2.append(i[i['away_win']==1]['away_win'].sum())\n    l2.append(i[i['home_win']==1]['home_win'].sum())\n    t2.append(i['season'].count())\naway_wins = pd.DataFrame({'Managers':['SAF','Moyes','Giggs','Van Gaal','Mou','Ole'],'Wins':w2,'Losses':l2,'Total':t2})\naway_wins['Draws'] = away_wins['Total'] - (away_wins['Wins'] + away_wins['Losses'])\naway_wins['Home Points'] = away_wins['Wins']*3 + away_wins['Draws']*1\naway_wins['Win %'] = round((away_wins['Wins']\/ away_wins['Total'])*100,2)\naway_wins['Point %'] = round(away_wins['Home Points']\/(away_wins['Total']*3)*100,2)\nprint('Home Table:')\ndisplay(home_wins)\nprint('Away Table:')\ndisplay(away_wins)\n\n\ntotal = pd.concat([home_wins,away_wins],axis=0)\ntotal['Home\/Away'] = ['Home','Home','Home','Home','Home','Home','Away','Away','Away','Away','Away','Away']\npx.bar(total,x='Managers',y='Win %',color='Home\/Away',barmode='group',text='Win %',title = 'Home\/Away Win % by Manager (Wins\/Total Games)',hover_data=['Wins','Losses','Total'],color_discrete_sequence=[\"red\", \"black\"])","565dc22e":"px.bar(total,x='Managers',y='Point %',color='Home\/Away',barmode='group',text='Point %',title = 'Home\/Away Point % by Manager (Points\/Total Possible Points)',hover_data=['Wins','Losses','Total'],color_discrete_sequence=[\"red\", \"black\"])","fd6d81b8":"o = []\nb = []\nfor i in [saf,moyes,giggs,gaal,mou,ole]:\n    o.append(i['home_goals'].mean())\n    b.append(i['home_goals'].count())\nhome = pd.DataFrame({'Managers':['SAF','Moyes','Giggs','Van Gaal','Mou','Ole'],'Avg Goals':o,'Games Managed':b})\no2 = []\nb2 = []\nfor i in [saf2,moyes2,giggs2,gaal2,mou2,ole2]:\n    o2.append(i['away_goals'].mean())\n    b2.append(i['away_goals'].count())\naway = pd.DataFrame({'Managers':['SAF','Moyes','Giggs','Van Gaal','Mou','Ole'],'Avg Goals':o2,'Games Managed':b2})\ntotal = pd.concat([home,away],axis=0)\ntotal = total.round(2)\ntotal2 = home.merge(away,how='inner',on='Managers',suffixes=('_home','_away'))\ntotal2 = total2.round(2)\ntotal['Home\/Away'] = ['Home','Home','Home','Home','Home','Home','Away','Away','Away','Away','Away','Away']\ndisplay(total2)\npx.bar(total,x='Managers',y='Avg Goals',color='Home\/Away',barmode='group',text='Avg Goals',title = 'Home\/Away Goals For Avg by Manager',hover_data=['Home\/Away','Games Managed'],color_discrete_sequence=[\"red\", \"black\"])","5054360b":"fig, ax = plt.subplots(figsize=(20,8))\nsns.lineplot(saf['date'],saf['home_goals'],ax=ax,label='SAF')\nsns.lineplot(x=moyes['date'],y=moyes['home_goals'],ax=ax, label='Moyes')\nsns.lineplot(x=giggs['date'],y=giggs['home_goals'],ax=ax, label='Giggs')\nsns.lineplot(x=gaal['date'],y=gaal['home_goals'],ax=ax, label='Van Gaal')\nsns.lineplot(x=mou['date'],y=mou['home_goals'],ax=ax, label='Mourinho')\nsns.lineplot(x=ole['date'],y=ole['home_goals'],ax=ax, label='Ole')\nax.set_title('Home Game Performance by United Manager')\nax.set_xlabel('Date')\nax.set_ylabel('Number of Goals')","2b9c2ef6":"city = df[(df[\"home_team\"]==\"Manchester City\")]\nman = city[city['date']<pd.to_datetime('2013-05-13')]\npelle = city[(city['date']<pd.to_datetime('2016-06-30'))&(city['date']>pd.to_datetime('2013-06-14'))]\npep = city[(city['date']>pd.to_datetime('2016-06-30'))]\ncity_away = df[(df[\"away_team\"]==\"Manchester City\")]\nman2 = city_away[city_away['date']<pd.to_datetime('2013-05-13')]\npelle2 = city_away[(city_away['date']<pd.to_datetime('2016-06-30'))&(city_away['date']>pd.to_datetime('2013-06-14'))]\npep2 = city_away[(city_away['date']>pd.to_datetime('2016-06-30'))]","206ec1f6":"w = []\nl = []\nt = []\nfor i in [man, pelle, pep]:\n    w.append(i[i['home_win']==1]['home_win'].sum())\n    l.append(i[i['away_win']==1]['away_win'].sum())\n    t.append(i['season'].count())\nhome_wins = pd.DataFrame({'Managers':['Mancini','Pellegrini','Guardiola'],'Wins':w,'Losses':l,'Total':t})\nhome_wins['Draws'] = home_wins['Total'] - (home_wins['Wins'] + home_wins['Losses'])\nhome_wins['Home Points'] = home_wins['Wins']*3 + home_wins['Draws']*1\nhome_wins['Win %'] = round((home_wins['Wins']\/ home_wins['Total'])*100,2)\nhome_wins['Point %'] = round(home_wins['Home Points']\/(home_wins['Total']*3)*100,2)\nhome_wins['PPG'] = round(home_wins['Home Points']\/home_wins['Total'],2)\n\nw2 = []\nl2 = []\nt2 = []\nfor i in [man2, pelle2, pep2]:\n    w2.append(i[i['away_win']==1]['away_win'].sum())\n    l2.append(i[i['home_win']==1]['home_win'].sum())\n    t2.append(i['season'].count())\naway_wins = pd.DataFrame({'Managers':['Mancini','Pellegrini','Guardiola'],'Wins':w2,'Losses':l2,'Total':t2})\naway_wins['Draws'] = away_wins['Total'] - (away_wins['Wins'] + away_wins['Losses'])\naway_wins['Home Points'] = away_wins['Wins']*3 + away_wins['Draws']*1\naway_wins['Win %'] = round((away_wins['Wins']\/ away_wins['Total'])*100,2)\naway_wins['Point %'] = round(away_wins['Home Points']\/(away_wins['Total']*3)*100,2)\naway_wins['PPG'] = round(away_wins['Home Points']\/away_wins['Total'],2)\n\nprint('Home Table:')\ndisplay(home_wins)\nprint('Away Table:')\ndisplay(away_wins)\n\n\ntotal = pd.concat([home_wins,away_wins],axis=0)\ntotal['Home\/Away'] = ['Home','Home','Home','Away','Away','Away']\n\npx.bar(total,x='Managers',y='Win %',color='Home\/Away',barmode='group',text='Win %',title = 'Home\/Away Win % by Manager (Wins\/Total Games)',hover_data=['Wins','Losses','Total'],color_discrete_sequence=[px.colors.qualitative.Light24[13],'black'])","4bd87454":"px.bar(total,x='Managers',y='Point %',color='Home\/Away',barmode='group',text='Point %',title = 'Home\/Away Point % by Manager (Points\/Total Possible Points)',hover_data=['Wins','Losses','Total'],color_discrete_sequence=[px.colors.qualitative.Light24[13],'black'])","3b7f98cb":"px.bar(total,x='Managers',y='PPG',color='Home\/Away',barmode='group',text='PPG',title = 'PPG by Manager (Points\/Total Games)',hover_data=['Wins','Losses','Total'],color_discrete_sequence=[px.colors.qualitative.Light24[13],'black'])","8c8968b0":"o = []\nb = []\nfor i in [man,pelle,pep]:\n    o.append(i['home_goals'].mean())\n    b.append(i['home_goals'].count())\nhome = pd.DataFrame({'Managers':['Mancini','Pellegrini','Guardiola'],'Avg Goals':o,'Games Managed':b})\no2 = []\nb2 = []\nfor i in [man2,pelle2,pep2]:\n    o2.append(i['away_goals'].mean())\n    b2.append(i['away_goals'].count())\naway = pd.DataFrame({'Managers':['Mancini','Pellegrini','Guardiola'],'Avg Goals':o2,'Games Managed':b2})\ntotal = pd.concat([home,away],axis=0)\ntotal = total.round(2)\ntotal2 = home.merge(away,how='inner',on='Managers',suffixes=('_home','_away'))\ntotal2 = total2.round(2)\ntotal['Home\/Away'] = ['Home','Home','Home','Away','Away','Away']\ndisplay(total2)\npx.bar(total,x='Managers',y='Avg Goals',color='Home\/Away',barmode='group',text='Avg Goals',title = 'Home\/Away Goal Avg by Manager',hover_data=['Home\/Away','Games Managed'],color_discrete_sequence=[px.colors.qualitative.Light24[13],'black'])","6b2bb148":"#### Manchester United's Home\/Away Goal Averages","ddc4e293":"#### Records of different United Managers","c739b751":"### Which team has scored the most % of goals since 10\/11 season?","43f9f8e5":"### Most Goals Scored Away","8190e5f9":"### Overall table of Home\/Away games (sorted by Total Goals)","0a93b137":"Explanation: -\n1. I sorted the entire dataframe by United home games (where the home_team is United)\n1. I found the date range for each manager's tenure and sorted the new United df by those dates","13fc09c1":"# United's Managers Performance by Home\/Away Record","26d5153a":"### How often have these teams score x number of goals at home?","6a4f3659":"# Analyzing City's Managers","9e2f837f":"### Most Goals scored at Home","c0f2fc2d":"#### * Giggs' average cannot be taken too seriously since he only managed 3 games in total and was an interim manager. ","c38c80e8":"### Top 20 Higest Scoring games since 10\/11 season","f4395586":"While teams are usually expected to play better in their own stadium than on the road, Crystal Palace, Leeds and Blackburn have shown they are better at Away games.","702d9fc8":"### How do teams play at home compared to away?"}}