{"cell_type":{"a71ecd78":"code","dfd99cca":"code","ea2553d2":"code","c70d88f4":"code","054aaae8":"code","687d16ac":"code","14ac8227":"code","f9c8184c":"code","2775ec0d":"code","05a25f53":"code","364ae333":"code","055f8422":"code","c30982c2":"code","57f471dd":"code","efb12178":"code","6ab78f5f":"code","9dd3e028":"code","d060aa56":"code","9b831bd1":"code","36457f62":"code","abb52bad":"code","9b08a0f4":"code","1c6b838d":"code","0e0439b7":"code","75ca7724":"code","6eafb997":"code","d40ed85b":"code","ed69137d":"code","6dc4028d":"code","a10dbca9":"code","4f4f0acb":"code","ad0f55b3":"code","9a87886c":"code","4dbe9d07":"code","21d03b87":"code","ca990247":"code","5b71f495":"code","32d70a03":"code","2a628549":"code","16a84c1c":"code","2ca3a81d":"code","e23ffdb7":"code","0df88c88":"code","ff773239":"code","bdd47324":"code","93c47c4d":"code","a6aa1227":"code","181c9669":"code","d434bea9":"code","aa1f5271":"code","9032c46d":"code","cbfaa9d7":"code","9c4ada76":"code","46933499":"code","6d5fa9aa":"code","560123f9":"code","0fb63036":"code","7bd9e6ca":"code","65a28a2c":"code","788ea96c":"code","71c01295":"code","8d40206f":"code","eccbc7e7":"code","7c2d4fcb":"code","76d8e4c7":"code","1a4a345d":"code","e144693a":"code","4997648e":"code","de8f4d81":"code","0fd90322":"code","a3305ce7":"code","46abc21a":"code","4b1c5922":"code","f63636a0":"code","e76064d8":"code","fbfc62df":"code","20f32138":"code","ee8f06a1":"code","3f19a279":"code","9fe83914":"code","6e1f02e5":"code","14133ac4":"code","c08ed11b":"code","7b367a68":"code","ef459468":"code","7ca9fa56":"code","b098f177":"code","8dc9c570":"code","09448e8d":"code","dc512c9d":"code","ec4396cf":"code","dd5a07b0":"code","673c7b3a":"code","5dfdc296":"code","4cd362d6":"code","8433ced2":"code","c99c1149":"code","a9f066c9":"code","4d8ff2e2":"code","937dc197":"code","e75b84b1":"code","0daba264":"code","f71a1084":"code","f37560f1":"code","f0d46ac6":"code","bb8620f3":"code","d50b879e":"code","a7e25d8c":"code","07e3dadc":"code","01ee7d39":"code","07ab11e5":"code","a7b15985":"code","0651029f":"code","a32373d2":"code","465bae93":"code","e0398ae6":"code","afbbfd3e":"code","98df7b93":"code","f4f36b87":"code","f0e30a8e":"code","b141a26a":"code","b7c686af":"code","78a35726":"code","0e690759":"code","9855509a":"code","b10669b8":"code","fc4be9db":"code","9638f4d7":"code","c2281f04":"code","ae0bc00a":"code","a4b3e3a5":"code","ed38fe1d":"code","16e9d938":"code","92a23d77":"code","415c4075":"code","8cca870c":"code","7f142fed":"code","3359f9e3":"code","6b1b9155":"markdown","e0d021f1":"markdown","e5e7ccae":"markdown","3b893282":"markdown","071f3436":"markdown","620efc18":"markdown","b192e525":"markdown","e1a26ec9":"markdown","1d418765":"markdown","f0dc5442":"markdown","fc362222":"markdown","d426278e":"markdown","8998d9b8":"markdown","168c03c8":"markdown","aa75db25":"markdown","5b43a517":"markdown","777b8475":"markdown","a37cb92d":"markdown","6f7b0bb4":"markdown","ba32278a":"markdown","99d1d685":"markdown","9f6b22f7":"markdown","11527f93":"markdown","d432657a":"markdown","cb59dd6a":"markdown"},"source":{"a71ecd78":"# Importing Packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport os\n#os.chdir(r\"C:\\DATA SET\")","dfd99cca":"#pd.set_option('display.max_columns',None)\ndata=pd.read_csv(\"..\/input\/snsdata1.csv\")\ndata.head()","ea2553d2":"data.columns","c70d88f4":"data.info()","054aaae8":"data.nunique()#check no of unique values in per variable\n","687d16ac":"data.gender.count()","14ac8227":"data.gender=data.gender.astype(\"object\")","f9c8184c":"data.info()#check size of the data gender make the categorical  variable the reduce the size of data i.e 1.4 mb","2775ec0d":"summary=data.describe(percentiles=[.1,.25,.5,.75,.90,.95,.99]).T","05a25f53":"summary","364ae333":"summary.to_csv(r\"C:\\machine learning\\summarystats.csv\")#convert into csvfile","055f8422":"#data.describe(include=[\"category\"])#object data summary","c30982c2":"data.isna().sum()#check the null values and percentage","57f471dd":"data.columns#col in data","efb12178":"data.gender.value_counts(dropna=False)#check values in the gender col... 435 are null values","6ab78f5f":"#data.gender.fillna(\"not-disclosed\",inplace=True)","9dd3e028":"data.gender.value_counts()#value counts in gender col","d060aa56":"data.age.isna().sum()#726 values present in age col","9b831bd1":"q1=data.quantile(.25)","36457f62":"q3=data.quantile(.75)","abb52bad":"iqr=q3-q1","9b08a0f4":"lbv=q1-(1.5*iqr)\nlbv","1c6b838d":"ubv=q3+(1.5*iqr)\nubv","0e0439b7":"sns.boxplot(data[\"age\"])","75ca7724":"#data[(data[\"age\"]>ubv)|(data[\"age\"]<lbv)][\"age\"]","6eafb997":"num_var=['age',\n 'friends',\n 'basketball',\n 'football',\n 'soccer',\n 'softball',\n 'volleyball',\n 'swimming',\n 'cheerleading',\n 'baseball',\n 'tennis',\n 'sports',\n 'cute',\n 'sex',\n 'sexy',\n 'hot',\n 'kissed',\n 'dance',\n 'band',\n 'marching',\n 'music',\n 'rock',\n 'god',\n 'church',\n 'jesus',\n 'bible',\n 'hair',\n 'dress',\n 'blonde',\n 'mall',\n 'shopping',\n 'clothes',\n 'hollister',\n 'abercrombie',\n 'die',\n 'death',\n         \n 'drunk',\n 'drugs']\n","d40ed85b":"#detect out lier\nfor i in data[num_var]:#outliers treatment\n    per=data[i].quantile([.01,.99]).values\n    #print(per)\n    print(data[i][(data[i]<=per[0])|(data[i]>=per[1])])    ","ed69137d":"for i in data[num_var]:#outliers treatment\n    per=data[i].quantile([.01,.99]).values#quantile of 1 per and 99 per\n    #print(per)\n    a=data[i][data[i]<=per[0]]=per[0]#data is less than 1 per than outlier\n    b=data[i][data[i]>=per[1]]=per[1]#data is more than 99 per  cent than out lier\n    print(a,b)","6dc4028d":"data.head()\ndata.describe()","a10dbca9":"sns.boxplot(data[\"age\"])","4f4f0acb":"from sklearn.preprocessing import StandardScaler\n","ad0f55b3":"names=data.columns[5:40]\nnames","9a87886c":"data.columns","4dbe9d07":"features=data[names]\nfeatures.head()","21d03b87":"sc=StandardScaler()","ca990247":"features=sc.fit_transform(features)","5b71f495":"features","32d70a03":"data[names]=features","2a628549":"data","16a84c1c":"#create dummy var\n#check null values\ndata.isna().sum()\n#gender 435 na values and age 726 null values\n","2ca3a81d":"data.gender.fillna(\"not disclosed\",inplace=True)","e23ffdb7":"data.isna().sum()","0df88c88":"data.gender.value_counts()","ff773239":"#we decide that age col null values for mean value","bdd47324":"data.age.fillna(np.mean(data[\"age\"]),inplace=True)\n","93c47c4d":"data.age.isna().sum()","a6aa1227":"data.head()","181c9669":"#convert categorical var to numeric i.e gender","d434bea9":"data.gender.value_counts()","aa1f5271":"def g_to_num(x):\n    if x==\"F\":\n        return 0\n    if x==\"M\":\n        return 1\n    else:\n        return 3","9032c46d":"data[\"gender\"]=data[\"gender\"].apply(g_to_num)","cbfaa9d7":"data.gender.value_counts()","9c4ada76":"#kmeans clustr\nfrom sklearn.cluster import KMeans","46933499":"model=KMeans(n_clusters=3,random_state=0)#assume three cluster","6d5fa9aa":"model.fit(data)#train the model","560123f9":"len(model.predict(data))","0fb63036":"len(model.labels_)","7bd9e6ca":"data[\"group\"]=model.predict(data)#create new col group then prediction of cluster","65a28a2c":"data[[\"group\"]].head(50)#no of cluster in which group","788ea96c":"data.head()","71c01295":"print(\"clusters of each group \",model.cluster_centers_)#clusters","8d40206f":"model.labels_#cluster groups data point belong to which group","eccbc7e7":"model.inertia_","7c2d4fcb":"data.groupby([\"group\"]).age.count()","76d8e4c7":"data.gender.value_counts()","1a4a345d":"a=data.groupby([\"group\",\"gender\"]).age.count().reset_index()\na","e144693a":"var=data.columns[2:39]","4997648e":"data.groupby([\"group\"])[var].mean()#clusters centers","de8f4d81":"group3=data.groupby([\"group\"])[var].mean().T\ngroup3#clusters center of each row","0fd90322":"data.groupby([\"group\"])[var].agg([\"count\",\"mean\",\"sum\",\"max\",\"min\"]).T","a3305ce7":"#group3.to_csv(\"C:\\machine learning\\cluster3.csv\")\ndata.groupby([\"group\"]).age.count()","46abc21a":"sns.barplot(x=np.arange(0,3,1),y=data.groupby([\"group\"]).age.count())","4b1c5922":"data.groupby([\"group\"]).friends.mean()","f63636a0":"sns.barplot(x=np.arange(0,3,1),y=data.groupby([\"group\"]).friends.mean())\nplt.xlabel(\"no of groups\")\nplt.ylabel(\"playing customers(friends)\")\nplt.title(\"friends sewgmentation\") ","e76064d8":"data.columns","fbfc62df":"data.groupby([\"group\"]).basketball.mean()","20f32138":"sns.barplot(x=np.arange(0,3,1),y=data.groupby([\"group\"]).basketball.mean())\nplt.xlabel(\"no of groups\")\nplt.ylabel(\"playing customers(basketball)\")\nplt.title(\"basketball sewgmentation\")","ee8f06a1":"data.groupby([\"group\"]).mean()[\"football\"]","3f19a279":"sns.barplot(x=np.arange(0,3,1),y=data.groupby([\"group\"]).football.mean())\nplt.xlabel(\"no of groups\")\nplt.ylabel(\"playing customers(football)\")\nplt.title(\"football sewgmentation\")","9fe83914":"data.groupby([\"group\"]).soccer.mean()\n","6e1f02e5":"\nsns.barplot(x=np.arange(0,3,1),y=data.groupby([\"group\"]).soccer.mean())\nplt.xlabel(\"no of groups\")\nplt.ylabel(\"playing customers(soccer)\")\nplt.title(\"soccer sewgmentation\")","14133ac4":"sns.barplot(x=np.arange(0,3,1),y=data.groupby([\"group\"])['softball'].mean())\nplt.xlabel(\"no of groups\")\nplt.ylabel(\"playing customers(softball)\")\nplt.title(\"softball sewgmentation\")","c08ed11b":"names","7b367a68":"sns.barplot(x=np.arange(0,3,1),y=data.groupby([\"group\"])['dance'].mean())","ef459468":"#data['gender'] = data['gender_F'].apply(gender_to_numeric)","7ca9fa56":"data.gender.value_counts()","b098f177":"count_dance=data.groupby([\"group\",\"gender\"]).dance.count().reset_index()#count gender","8dc9c570":"len(count_dance.gender)*100","09448e8d":"g1_male=data[(data.group==0)&(data.gender==1)]#provide data where group belong 0 and gender male","dc512c9d":"len(g1_male)","ec4396cf":"len(data[data.group==0])#1403 peoples belog to 0 group","dd5a07b0":"count=data[data.group==0]","673c7b3a":"cdance=count.groupby(\"group\").dance.count()","5dfdc296":"gen_co_dan=count[\"gender\"].value_counts()#992 females and 316 are males and not disclosed 95","4cd362d6":"per_dan=count[\"gender\"].value_counts()\/len(count.gender)*100","8433ced2":"dance_per=pd.concat([gen_co_dan,per_dan],axis=1,keys=[\"count\",\"percentage\"])\ndance_per","c99c1149":"print(\"total dance students in group 0 \",cdance)\nprint(\" dance students in group 0 counts male and female\\n\",gen_co_dan)#0 for female and 1 for male and 3 for not disclosed\nprint(\"0 for female and 1 for male and 3 for not disclosed\")\nprint(\"percentage of dance students \")\ndance_per","a9f066c9":"data.columns","4d8ff2e2":"a","937dc197":"data.groupby([\"group\"]).friends.count()","e75b84b1":"data.columns","0daba264":"counteach=data.groupby([\"group\",\"gender\"])[names].count().T\ncounteach","f71a1084":"counteach.to_csv(\"C:\\machine learning\\countmalewach.csv\")","f37560f1":"aggregate=data.groupby([\"group\"])[names].agg([\"mean\",\"sum\",\"max\",\"min\"]).T\naggregate","f0d46ac6":"aggregate.to_csv(\"C:\\machine learning\\ggregate.csv\")","bb8620f3":"ma=data.groupby([\"group\"])[[\"football\"]].mean()\na=ma.reset_index()\na.nlargest(1,columns=\"football\")[[\"group\"]]#mean is maximum belongs to in which group","d50b879e":"play=data.groupby([\"group\"])[names].mean().reset_index()\n","a7e25d8c":"play1=play.iloc[:,1:].columns","07e3dadc":"percentage=(play[play1]\/len(play))*100\npercentage#percentage of every group","01ee7d39":"percentage.sum()","07ab11e5":"names","a7b15985":"football=play.nlargest(1,columns=\"football\")[[\"football\",\"group\"]]#provide data those group has play max football\nfootball#average of foot ball is max","0651029f":"#play=data.groupby([\"group\"])[\"baseball\"].mean().reset_index()","a32373d2":"basket=play.nlargest(1,columns=\"baseball\")[[\"baseball\",\"group\"]]\nbasket","465bae93":"football.to_csv(\"C:\\machine learning\\Football1.csv\")","e0398ae6":"play.nlargest(1,columns=[\"volleyball\"])[[\"volleyball\",\"group\"]]","afbbfd3e":"play.nlargest(1,columns=[\"soccer\"])[[\"soccer\",\"group\"]]","98df7b93":"play.nlargest(1,columns=[\"softball\"])[[\"softball\",\"group\"]]","f4f36b87":"play.columns","f0e30a8e":"feature=data.iloc[:,0:40].columns#independent var\nfeature","b141a26a":"feature=list(data.drop(\"group\",axis=1))\n#target=\"Exited\"\nfeature\ntarget=\"group\"\ntarget","b7c686af":"from sklearn.model_selection import train_test_split","78a35726":"train,test=train_test_split(data,test_size=0.3,random_state=0)\ntrain\ntest.shape\ntrain[feature]\ntest[target]","0e690759":"from sklearn.linear_model import LogisticRegression#apply package","9855509a":"model=LogisticRegression(penalty=\"l2\",random_state=0)","b10669b8":"model.fit(train[feature],train[target])#train the model or fitting the model","fc4be9db":"pred=model.predict(test[feature])#prediction of model","9638f4d7":"print(\"coffecient of model: \",model.coef_)#coffecient of both groups\nprint(\"intercept of model: \",model.intercept_)","c2281f04":"from sklearn.metrics import balanced_accuracy_score, roc_auc_score, accuracy_score,precision_score,recall_score, classification_report, confusion_matrix,plot_confusion_matrix\n\n","ae0bc00a":"tr=model.predict(train[feature])\ntrain1=confusion_matrix(train[target],tr)#prediction of confusion metrices","a4b3e3a5":"train1","ed38fe1d":"test1=confusion_matrix(test[target],pred)\ntest1","16e9d938":"percentage_test=test[target].value_counts()\/len(test[target])*100\npercentage_test","92a23d77":"print(len(test[test[target]==0]))#actual gp1: 418\nprint(len(test[test[target]==1]))#actual gp2 : 831\nprint(len(test[test[target]==2]))#actual gp3: 121\n#test[target][test[target]==0]","415c4075":"print(len(pred[pred==0]))#predicted gp1 417\nprint(len(pred[pred==1]))#predicted 831\nprint(len(pred[pred==2]))# predicted 122","8cca870c":"plt.figure(figsize=(9,9))\n\nsns.heatmap(test, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'Blues_r');\n\nplt.ylabel('Actual values');\nplt.xlabel('Predicted values');\nplt.title(\"confusion metrices under testing\")\nplt.show()","7f142fed":"accuracy=accuracy_score(test[target],pred)#accuracy of model\n#precision=precision_score(test[target],pred)\n#recall=recall_score(test[target],pred)\n#print(\"accuracy of model: \",accuracy*100)\n#print(\"precision of model: \",precision*100)\n#print(\"recall of model: \",recall*100)","3359f9e3":"print(\"accuracy of model : \",accuracy_score(test[target],pred)*100)","6b1b9155":"# Teen Market Segmentation Using K-means Clustering","e0d021f1":"make categorical variables to reduce the size of data data size at this time more than 1.4 mb","e5e7ccae":"# analysis","3b893282":"# standard scaling\n1. satndard scaling used for feature scaling scaning of all the values values not to be large ","071f3436":"# all most count of all the group has same playing games \n\n1. count male and female in the all groups are similar whethey they will playing any games prefer\n\n2. the mean average of all the group is different then we predict the maximum average of which group are perform the analysis\n\n therefore, which group has maximum average and belongs to most","620efc18":"in each cluster how many interest of people  for a particular service","b192e525":"# testing report analysis\n\n1. actual customers of group 1 is 418 customers i.e 30% and prediction of model is 417 i.e approx 29.5%\n\n2. actual customers of group 2 is 831 customers i.e 60% and prediction of model is 831 i.e approx 60.5% all most same predict\n\n3. actual customers of group 3 is 121 customers i.e 8% and prediction of model is 122 i.e approx 8.1%\n   \n   conclusion model perform good accuracy i.e 99 percent that is good for my model\n\n","e1a26ec9":"# outliers treatment\nwe have to considered check out liers above 99 percent and and less than 1 percent \n\nage col is predict outlier","1d418765":"# null values present in gender and age col","f0dc5442":"The dataset represents a random sample of 30,000 U.S. high school students who had profiles on a well-known SNS in 2006. To protect the users\u2019 anonymity, the SNS will remain unnamed. The data was sampled evenly across four high school graduation years (2006 through 2009) representing the senior, junior, sophomore, and freshman classes at the time of data collection\nThe dataset contatins 40 variables like: gender, age, friends, basketball, football, soccer, softball, volleyball,swimming, cute, sexy, kissed, sports, rock, god, church, bible, hair, mall, clothes, hollister, drugs etc whcih shows their interests. The final dataset indicates, for each person, how many times each word appeared in the person\u2019s SNS profile","fc362222":"# missing values treatment","d426278e":"#count how many males in dance in every group\n","8998d9b8":"# dataset information","168c03c8":"# 3 group cluster teen market segmentation\n\n1. 3 groups check which group prefer the most service\n2. average of customers playing which games to predict the model","aa75db25":"# which group has maximu playing average","5b43a517":"both 3 group cluster indicates how many peoples in each cluster for aparticular group and\ncount male,female and not disclosed","777b8475":"# count each group details and male and female count i.e 1 for female,0 for male ,3 not disclosed\n\nsame no of male and female for all the group","a37cb92d":" total dance students in group 0=1403\nfemale are 992,male are 316 and 95 are not disclosed\npercentage of each female 70 percent,22 are male and 6 percent are not disclosed","6f7b0bb4":"Interacting with friends on a social networking service (SNS) has \nbecome a rite of passage for teenagers around the world. \nThe many millions of teenage consumers using such sites have attracted \nthe attention of marketers struggling to find an edge in an increasingly \ncompetitive market. One way to gain this edge is to identify \nsegments of teenagers who share similar tastes, so that clients can avoid \ntargeting advertisements to teens with no interest in the product being sold. \nFor instance, sporting apparel is likely to be a \ndifficult sell to teens with no interest in sports.","ba32278a":"in col gender place nan value to be not disclosed","99d1d685":"# calculation percentage of each group most ","9f6b22f7":"# apply logistic regression","11527f93":"convert the gender column to numeric \nmale=1,female=0,notdisclosed=3","d432657a":"# splitting the data into training and testing","cb59dd6a":"# analyze  those data where mean is maximum and provide that group name\n\naverage of playing of games in which group maximum (group 0 means gp.1,group 1 means gp.2,group 2 means gp.3)\n\n1. group 1 has to play maximum volleyball\n2. group 3 has to play maximum football\n3. group 3 has to play maximum baseball\n4. group 1 has to play maximum soccer\n5. group 1 has to play maximum swimming\n6. group 3 has to play maximum swimming\n7. group 1 has to play maximum swimmincheerleading\n8. group 3 has to play maximum swimming\n9. group 3 has to play maximum tennis\n10. group 1 has to play maximum sports\n11. group 1 has to play maximum blonde"}}