{"cell_type":{"10604c1e":"code","418ac1c0":"code","0cbf6134":"code","3f5fa820":"code","49f2de23":"code","e51a2f78":"code","03bb2c10":"code","09201317":"code","42d16209":"code","ca24a7db":"code","01625b41":"code","803dcf14":"code","68823b6e":"code","4d02e291":"code","294f6e1c":"code","24115a21":"code","5b4b1ef4":"code","d707f858":"code","e72b08b5":"code","cecf4a3c":"code","22f63a82":"code","c9b0b887":"code","24ddc8a6":"markdown","041e9acf":"markdown","e77b5863":"markdown","d439748e":"markdown","bfb47e54":"markdown","f95a8023":"markdown","bf245fb1":"markdown","7343e2cd":"markdown","c8c14eea":"markdown","6c96060d":"markdown","7bfeff1b":"markdown","45a5df15":"markdown","f805da58":"markdown","5249e287":"markdown","3807a49d":"markdown","a35562a4":"markdown","077767ba":"markdown","94de24c4":"markdown","e04c1dbf":"markdown"},"source":{"10604c1e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","418ac1c0":"data = pd.read_csv(\"..\/input\/worldwide-deaths-by-risk-factors\/number-of-deaths-by-risk-factor.csv\")\ndata.head()","0cbf6134":"data.info()","3f5fa820":"data.drop('High total cholesterol', axis=1, inplace=True)","49f2de23":"remove = ['North America', 'Latin America and Caribbean', 'Central Europe', \n          'Eastern Europe', 'Western Europe','North Africa and Middle East', \n          'Central Sub-Saharan Africa', 'Eastern Sub-Saharan Africa',\n          'Western Sub-Saharan Africa', 'Southern Sub-Saharan Africa', \n          'Central Asia', 'East Asia','Southeast Asia', 'South Asia', \n          'Australasia', 'Central Europe, Eastern Europe, and Central Asia',\n          'Sub-Saharan Africa', 'Southeast Asia, East Asia, and Oceania',\n          'Southern Latin America','Central Latin America', 'Tropical Latin America',\n          'High SDI', 'High-middle SDI', 'Middle SDI','Low-middle SDI', \n          'Low SDI', 'High-income', 'High-income Asia Pacific', 'World']\n\ncountry_df = data[~data['Entity'].isin(remove)]","e51a2f78":"country_df.head()","03bb2c10":"grouped_country_df = country_df.groupby('Entity').mean()\ntotal_deaths = grouped_country_df.drop('Year', axis=1).sum().transpose().sort_values(ascending=False)\n\nplt.figure(figsize=(10,8))\nsns.barplot(y=total_deaths.index, x=total_deaths.values, orient='h')\n\nplt.xticks(rotation=90);","09201317":"sns.heatmap(grouped_country_df[['High fasting plasma glucose', 'High body-mass index', \n                                 'High systolic blood pressure', 'Air pollution', 'Smoking']].corr(), annot=True)","42d16209":"sns.pairplot(grouped_country_df[['Diet high in sodium', 'Diet low in whole grains', \n                                 'Diet low in nuts and seeds', 'Diet low in fruits', \n                                 'Diet low in vegetables']], kind='reg', diag_kind='kde')","ca24a7db":"corr_matrix = grouped_country_df.corr().abs()\nupper = corr_matrix.where(np.triu(np.ones(corr_matrix.shape), k=1).astype(np.bool_))\nhigh_corr_col = [column for column in upper.columns if any(upper[column] > 0.95)]\ncountry_feat = grouped_country_df.drop(high_corr_col, axis=1)\n\ncountry_feat.head()","01625b41":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\n\nX = country_feat.drop('Year', axis=1)\n\nscaler = StandardScaler()\nscaled_X = scaler.fit_transform(X)\n\nssd= []\nfor k in range(2,16):\n    model = KMeans(n_clusters=k)\n    model.fit(scaled_X)\n    \n    ssd.append(model.inertia_)\n    \n# The elbow method will be used to determine the k value.  \nplt.figure(figsize=(10,6))\nplt.plot(range(2,16), ssd, 'o--')\nplt.xlabel('k values')\nplt.ylabel('Sum of Squared Distances')","803dcf14":"# Selected n_clusters=6.\nmodel = KMeans(n_clusters=6, random_state=0)\ncluster_labels = model.fit_predict(scaled_X)\n\nX['Cluster'] = cluster_labels\ncluster_corr = X.corr()['Cluster'].sort_values()","68823b6e":"plt.figure(figsize=(10,4))\nsns.barplot(x=cluster_corr[:-1].index, y=cluster_corr[:-1].values)\nplt.title(\"Feature importance determined by K-Means\", fontsize=16)\nplt.xlabel(\"Risk factors\")\nplt.ylabel(\"Correlation\")\nplt.xticks(rotation=90);","4d02e291":"iso = pd.read_csv('..\/input\/country-code\/country_code.csv', index_col='Country')\niso_code = iso['3let'].to_dict()\nX['ISO_Code'] = X.index.map(iso_code)","294f6e1c":"import plotly.express as px\nimport plotly.offline as pyo\npyo.init_notebook_mode()\n\nfig = px.choropleth(X, locations=\"ISO_Code\",\n                    color=\"Cluster\", \n                    hover_name=X.index, \n                    color_continuous_scale='Rainbow')\nfig.show()","24115a21":"sel_countries = ['United States','Canada','China','India','Russia', 'Australia']\n\nfilt_countries = country_feat.loc[sel_countries].groupby('Entity').sum()\nfilt_countries = filt_countries.drop('Year', axis=1).groupby('Entity').sum().transpose()\nfilt_countries = filt_countries.reset_index()\nfilt_countries = pd.melt(filt_countries, 'index', var_name='country', value_name='value')","5b4b1ef4":"plt.figure(figsize=(12,8))\nsns.lineplot(x='index', y='value', hue='country', data=filt_countries, palette='Dark2')\nplt.legend(loc=(1.05,0.5))\nplt.title(\"Total Deaths by Risk Factors for Selected Countries\", fontsize=16)\nplt.xlabel(\"Risk factors\")\nplt.ylabel(\"Total\")\nplt.xticks(rotation=90);","d707f858":"sdi_list = ['High SDI', 'High-middle SDI', 'Middle SDI', 'Low SDI', 'Low-middle SDI']\n\nsdi = data[data['Entity'].isin(sdi_list)]","e72b08b5":"import matplotlib.lines as mlines\n\nsdi1 = sdi[(sdi['Year']>2001) & (sdi['Year']<2011)].groupby('Entity').mean().sum(axis=1)\/1000000\nsdi2 = sdi[(sdi['Year']>2011) & (sdi['Year']<2017)].groupby('Entity').mean().sum(axis=1)\/1000000\n\nleft_label = [str(c) + ', '+ str(round(y,2)) + 'mil' for c, y in zip(sdi1.index, sdi1.values)]\nright_label = [str(c) + ', '+ str(round(y,2)) + 'mil' for c, y in zip(sdi2.index, sdi2.values)]\nklass = ['red' if (y1-y2) < 0 else 'green' for y1, y2 in zip(sdi1.values, sdi2.values)]\n\ndef newline(p1, p2, color='black'):\n    ax = plt.gca()\n    l = mlines.Line2D([p1[0],p2[0]], [p1[1],p2[1]], color='red' if p1[1]-p2[1] > 0 else 'green', \n                      marker='o', markersize=6)\n    ax.add_line(l)\n    return l\n\nfig, ax = plt.subplots(figsize=(14,14))\n\nax.vlines(x=1, ymin=8, ymax=16, color='black', alpha=0.7, linewidth=1, linestyles='dotted')\nax.vlines(x=3, ymin=8, ymax=16, color='black', alpha=0.7, linewidth=1, linestyles='dotted')\n\nax.scatter(y=sdi1.values, x=np.repeat(1, sdi1.shape[0]), s=10, color='black', alpha=0.7)\nax.scatter(y=sdi2.values, x=np.repeat(3, sdi2.shape[0]), s=10, color='black', alpha=0.7)\n\nfor p1, p2, c in zip(sdi1.values, sdi2.values, sdi2.index):\n    newline([1,p1], [3,p2])\n    ax.text(1-0.05, p1, c + ', ' + str(round(p1,2)) + 'mil', horizontalalignment='right', \n            verticalalignment='center', fontdict={'size':12})\n    ax.text(3+0.05, p2, c + ', ' + str(round(p2,2)) + 'mil', horizontalalignment='left', \n            verticalalignment='center', fontdict={'size':12})\n    \nax.text(1-0.05, 17, '2001-2010', horizontalalignment='right', verticalalignment='center', \n        fontdict={'size':18, 'weight':700})\nax.text(3+0.05, 17, '2011-2017', horizontalalignment='left', verticalalignment='center', \n        fontdict={'size':18, 'weight':700})\n\nax.set_title(\"Slopechart: Comparing Total Deaths by SDI\", fontdict={'size':22})\nax.set(xlim=(0,4), ylim=(8, 18), ylabel='Average Total Deaths (million)')\nax.set_xticks([1,3])\nax.set_xticklabels([\"\", \"\"])\nplt.yticks(np.arange(8, 18, 2), fontsize=12)\n\nplt.gca().spines[\"top\"].set_alpha(.0)\nplt.gca().spines[\"bottom\"].set_alpha(.0)\nplt.gca().spines[\"right\"].set_alpha(.0)\nplt.gca().spines[\"left\"].set_alpha(.0)\nplt.show()","cecf4a3c":"low_sdi = sdi[sdi['Entity']=='Low SDI']\n\nlow_2001_2010 = low_sdi[(low_sdi['Year']>2001) & (low_sdi['Year']<2011)].groupby('Entity').mean()\nlow_2011_2017 = low_sdi[(low_sdi['Year']>2011) & (low_sdi['Year']<2017)].groupby('Entity').mean()\n\n\nplt.figure(figsize=(10,8))\ndiff = (low_2011_2017 - low_2001_2010).drop('Year', axis=1).transpose()\nsns.barplot(x=diff.index,y=diff['Low SDI'],data=diff)\nplt.xlabel(\"Risk factors\")\nplt.ylabel(\"Total\")\nplt.xticks(rotation=90);","22f63a82":"mid_sdi = sdi[sdi['Entity']=='Middle SDI']\n\nmid_2001_2010 = mid_sdi[(mid_sdi['Year']>2001) & (mid_sdi['Year']<2011)].groupby('Entity').mean()\nmid_2011_2017 = mid_sdi[(mid_sdi['Year']>2011) & (mid_sdi['Year']<2017)].groupby('Entity').mean()\n\n\nplt.figure(figsize=(10,8))\ndiff = (mid_2011_2017 - mid_2001_2010).drop('Year', axis=1).transpose()\nsns.barplot(x=diff.index,y=diff['Middle SDI'],data=diff)\nplt.xlabel(\"Risk factors\")\nplt.ylabel(\"Total\")\nplt.xticks(rotation=90);","c9b0b887":"sdi_deaths = sdi.drop('Year', axis=1).groupby('Entity').sum().transpose()\nsdi_deaths = sdi_deaths.reset_index()\nsdi_melt = pd.melt(sdi_deaths, 'index', var_name='count', value_name='value')\n\nplt.figure(figsize=(12,8))\nsns.lineplot(x='index', y='value', hue='count', data=sdi_melt, palette='Dark2')\nplt.legend(loc=(1.05,0.5))\nplt.title(\"Total Deaths by Risk Factors for SDIs\", fontsize=16)\nplt.xlabel(\"Risk factors\")\nplt.ylabel(\"Total\")\nplt.xticks(rotation=90);","24ddc8a6":"### Let's visualize the correlation for just a few selected features.","041e9acf":"# Cluster model for world deaths ","e77b5863":"## Data grouped by Socio-demographic Index (SDI)","d439748e":"## Reviewing the data to identify data type as well as shape and missing values.","bfb47e54":"### Let's see how K-Means clustered the countries using choropleth map.","f95a8023":"### The data will be grouped by the 'year' feature and the mean value will be used.","bf245fb1":"## There is a feature (High total cholesterol) that has a lot of missing data. I will drop the feature since it would the percentage of missing data is more than 70%.","7343e2cd":"### Was there a reason why China and India\/Myanmar were having their own cluster? \n### What about US being grouped with Russia and why was Canada was not grouped with US?","c8c14eea":"## Other than countries listed under the 'Entity' column, there are also come country groupings provided. They are:\n\n* North America,\n* Latin America and Caribbean,\n* Central Europe,\n* Eastern Europe,\n* Western Europe,\n* North Africa and Middle East,\n* Central Sub-Saharan Africa,  \n* Eastern Sub-Saharan Africa, \n* Western Sub-Saharan Africa,\n* Southern Sub-Saharan Africa, \n* Central Asia, \n* East Asia, \n* Southeast Asia,\n* South Asia,\n* Australasia,\n* High-income, and\n* High-income Asia Pacific\n\nThis should cover all the countries provided in the data.\n    \nThere is also 'World' data provided.\n    \nOther than by countries, there are also data grouped by Socio-demographic Index (SDI).\nSDI is a summary measure that identifies where countries or other geographic areas sit on the spectrum of development. Expressed on a scale of 0 to 1, SDI is a composite average of the rankings of the incomes per capita, average educational attainment, and fertility rates of all areas in the GBD study.\nA list can be found here http:\/\/ghdx.healthdata.org\/record\/ihme-data\/gbd-2019-socio-demographic-index-sdi-1950-2019. There is also 2 other categories for high income countries (High-income and High-income Asia Pacific).","6c96060d":"#### It was observed that countries with Low SDIs has seen a decreased in their death rates while other SDIs had an increase. Countries grouped as Middle SDI had the biggest increase in death count. Let's explore the Low SDI and Middle SDI to get some insights.","7bfeff1b":"### The correlation values are high for all 4 features.\n\n### What about the effects of diet?","45a5df15":"#### High blood pressure is still the main contributor to the highest number of deaths. However, this seems to be impacting High, High-Middle and Middle SDI countries more than Low and Low-Middle SDI countries. For the Low and Low-Middle SDI countries, they have far higher death total caused by children and sanitation related risk factors. This, sadly, seems to make sense.\n\n#### Cluster modeling will not be explored for SDIs.\n\n#### There are more to explore with this dataset as there are other groups that can be studied as well. However, I will leave that for others to explore as it is time for me to work on a 'happier' dataset.","f805da58":"#### There are positive correlations for 4 of the feature (Diet low in whole grains, Diet low in nuts and seeds, Diet low in fruits and Diet low in vegetables) and the values shown are high as well.\n\n#### Features with correlation value above 95% will be identified and dropped for cluster modelling.\n\n*Note: I have also tried to perform clustering without removing any feature to check if this would impact the outcome but I'm happy to inform that the results were the same. However, having a large number of features will  reduce the interpretability of the model. *","5249e287":"#### Higher purchasing power as well as access to modern conveniences have certainly increased the death count for middle SDI countires as risk factors related to diet as well as lifestyle have increased significantly. \n\n#### Let's explore more from the data.","3807a49d":"## Filter the dataframe to obtain data for countries only (not by set groupings).","a35562a4":"#### Total features are now reduced to 9 (not including Year which will be dropped) from the initial 28. K-Means clustering will be used and Sum of Squared Distances will be calculated to determine the cluster number.","077767ba":"#### Improvements to sanitation as well as safer sex activities seemed to have improve thesurvivability of people in low SDI countries.","94de24c4":"#### In an attempt to get some insights, the chart above was plotted to see if there were any information that can be gained to explain how K-Means clustered the countries. The chart provided a clear pattern on why US and Russia were clustered together and also why China and India are in their own cluster. Canada and Australia can also be seen to have similar pattern and was probably why they were clustered together.\n\n### Let's explore further and look at the data grouped by Socio-demographic Index (SDI).\n\n","e04c1dbf":"### Which feature did K-Means regarded as most important?"}}