{"cell_type":{"830e9823":"code","f8516997":"code","dd4652db":"code","6c2289c6":"code","c2c12da4":"code","3fe29a11":"code","99f53e93":"code","0f6387f5":"code","1e5bda86":"code","44ccbfb4":"code","b78c488c":"code","ff266679":"code","91aea236":"code","e0d799b0":"code","751ad52f":"code","f6643dd3":"code","62699086":"code","40616712":"code","22df9cb7":"code","d38cb8fc":"code","c4efc89a":"code","6b6ebb0e":"code","23cfdfe4":"code","5a175e02":"code","cc7f6dfd":"code","cf4a41fa":"code","cba5f29f":"code","b73dc374":"code","022af194":"code","c73ad166":"code","7f9558a5":"code","07a7140f":"code","d72bf7be":"code","0b0facb3":"code","72e31f04":"code","429ed1bc":"code","6711c6f0":"code","6d8d613b":"code","eefa0f38":"code","661a453a":"code","9ff0a118":"code","53a7f247":"code","ff9a91fa":"code","0cbbf942":"code","34b861b0":"code","2663d402":"code","ca241b05":"code","87308676":"code","5659695b":"code","08fe5cb1":"code","c5f04c2d":"code","ad801b01":"code","5bf4a361":"code","5925583b":"code","c4d9d032":"code","14623449":"code","e17e656a":"code","06582ad2":"code","f3a93813":"code","b911e543":"code","dd1694db":"code","01debf25":"code","eba4b7dc":"code","b653a582":"code","7a34e3e9":"code","8c697332":"code","086782b4":"code","8a57fa20":"code","62ed9e44":"code","6ba28349":"code","87f91b8d":"code","2420b8e2":"code","ef17f3c8":"code","629abf33":"code","6869d9aa":"code","d7855f69":"code","0cbc31a4":"code","a51ba08f":"code","3d77716b":"code","713d5e21":"code","d29f7cf6":"code","fc9df596":"code","5a4f0fc1":"code","8a1ff106":"code","fa4688ad":"code","c117b081":"code","64fc0527":"code","7674ceb1":"code","b1d151ed":"code","f89f2c91":"code","6ce178b7":"code","ba0fde14":"code","8f15e4e0":"code","dfdfebf2":"code","4991a2dc":"code","b8cee41a":"code","97338b88":"code","7e327d2e":"code","8efb9c23":"code","fbf4daad":"code","af1591af":"code","f01a922b":"code","5d33d223":"code","84ea6ff9":"code","4a30b96e":"code","33295bf4":"code","4b7548d2":"code","e0e6506d":"code","302a264f":"code","58ab05d0":"markdown","2641d369":"markdown","8879edad":"markdown","f8d1fe86":"markdown","3c5d697a":"markdown","985e7735":"markdown","f928c3b8":"markdown","94bc717f":"markdown","cbffb5b9":"markdown","ddbf270b":"markdown","86e30063":"markdown","248f5031":"markdown","3a8e7a6c":"markdown","1deb15e6":"markdown","c40bf135":"markdown","6d1814b4":"markdown","87e24d90":"markdown","fec05602":"markdown","c11862c4":"markdown","c9125e5f":"markdown","a4e12c48":"markdown","74313071":"markdown","41fa6d71":"markdown","26c24db4":"markdown","38c724b6":"markdown","6b3483fe":"markdown","76ff5d23":"markdown","4b9c4812":"markdown","1554f72e":"markdown","1ec62bd5":"markdown","5260a3da":"markdown","d4b6a566":"markdown","43fa5790":"markdown","f3ba8d75":"markdown","49b05f90":"markdown","b4e5b407":"markdown","79174de3":"markdown","b3a7ae03":"markdown","06fa6ccb":"markdown","c1b940c6":"markdown","30823217":"markdown","3367fbf1":"markdown","a73de34f":"markdown","15240d1e":"markdown","e372e055":"markdown","2985a45d":"markdown"},"source":{"830e9823":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","f8516997":"\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objs as go\n\nimport matplotlib.pyplot as plt","dd4652db":"traindf = pd.read_csv(\"\/kaggle\/input\/riiid-test-answer-prediction\/train.csv\",nrows=10**6 )\ntraindf","6c2289c6":"traindf.info()","c2c12da4":"from pandas.api.types import is_datetime64_any_dtype as is_datetime\nfrom pandas.api.types import is_categorical_dtype\n\ndef reduce_mem_usage(df, use_float16=False):\n    \"\"\"\n    Iterate through all the columns of a dataframe and modify the data type to reduce memory usage.        \n    \"\"\"\n    \n    start_mem = df.memory_usage().sum() \/ 1024**2\n    print(\"Memory usage of dataframe is {:.2f} MB\".format(start_mem))\n    \n    for col in df.columns:\n        if is_datetime(df[col]) or is_categorical_dtype(df[col]):\n            continue\n        col_type = df[col].dtype\n        \n        if col_type != object:\n            c_min = df[col].min()\n            c_max = df[col].max()\n            if str(col_type)[:3] == \"int\":\n                if c_min > np.iinfo(np.int8).min and c_max < np.iinfo(np.int8).max:\n                    df[col] = df[col].astype(np.int8)\n                elif c_min > np.iinfo(np.int16).min and c_max < np.iinfo(np.int16).max:\n                    df[col] = df[col].astype(np.int16)\n                elif c_min > np.iinfo(np.int32).min and c_max < np.iinfo(np.int32).max:\n                    df[col] = df[col].astype(np.int32)\n                elif c_min > np.iinfo(np.int64).min and c_max < np.iinfo(np.int64).max:\n                    df[col] = df[col].astype(np.int64)  \n            else:\n                if use_float16 and c_min > np.finfo(np.float16).min and c_max < np.finfo(np.float16).max:\n                    df[col] = df[col].astype(np.float16)\n                elif c_min > np.finfo(np.float32).min and c_max < np.finfo(np.float32).max:\n                    df[col] = df[col].astype(np.float32)\n                else:\n                    df[col] = df[col].astype(np.float64)\n        else:\n            df[col] = df[col].astype(\"category\")\n\n    end_mem = df.memory_usage().sum() \/ 1024**2\n    print(\"Memory usage after optimization is: {:.2f} MB\".format(end_mem))\n    print(\"Decreased by {:.1f}%\".format(100 * (start_mem - end_mem) \/ start_mem))\n    \n    return df","3fe29a11":"traindf = reduce_mem_usage(traindf)","99f53e93":"traindf.info()","0f6387f5":"traindf.head(3)","1e5bda86":"for a in traindf.columns:\n    print(a + \":\" + str(len(traindf[a].unique())))","44ccbfb4":"traindf115 = traindf[traindf[\"user_id\"]==115]\ntraindf115","b78c488c":"# timestamp\u306e\u8abf\u67fb\npx.line(traindf115,x=\"row_id\",y=\"timestamp\",width = 500)","ff266679":"# \u6b63\u7b54\u7387\ntraindf115[\"answered_correctly\"].sum()\/len(traindf115)","91aea236":"traindf","e0d799b0":"traindf.describe()","751ad52f":"# answered_correctly\u306bmin -1 \u304c\u5165\u3063\u3066\u3044\u308b\u3000\u2192\u3000\u8cea\u554f\u3068\u8b1b\u7fa9\u304c\u5165\u3063\u3066\u3044\u308b\u305f\u3081","f6643dd3":"# \u8cea\u554f\u3068\u8b1b\u7fa9\u306b\u5206\u3051\u308b","62699086":"qdf = traindf[traindf[\"content_type_id\"]==0]\nqdf","40616712":"qdf.describe()","22df9cb7":"userlist = qdf[\"user_id\"].unique()\nuserlist","d38cb8fc":"userlist[0]","c4efc89a":"tmpdf = qdf[qdf[\"user_id\"]==userlist[0]]\ntmpdf.head(3)","6b6ebb0e":"tmpdf[\"answered_correctly\"].sum()\/len(tmpdf)","23cfdfe4":"ratelist= []\nfor a in userlist:\n    tmpdf = qdf[qdf[\"user_id\"]==a]\n    ratelist.append([a,tmpdf[\"answered_correctly\"].sum()\/len(tmpdf)])","5a175e02":"ratelistdf = pd.DataFrame(ratelist)\nratelistdf.columns = [\"user_id\",\"rate\"]\nratelistdf","cc7f6dfd":"userdf = qdf.groupby('user_id')\nuserdf","cf4a41fa":"userdf_calc = userdf.agg({'answered_correctly': ['mean',\"sum\", 'count', 'std']}).copy() # .agg\u3067\u305d\u306e\u4e2d\u8eab\u3092mean\u3084sum\u306a\u3069\u8907\u6570\u51e6\u7406\u53ef\u80fd\u3002\nuserdf_calc.columns = [\n    'mean', \n    \"sum\",\n    'count', \n    'std', \n ]\n\nuserdf_calc","cba5f29f":"userdf_calc[\"rate\"] = userdf_calc[\"sum\"]\/userdf_calc[\"count\"]","b73dc374":"userdf_calc","022af194":"px.histogram(\n    userdf_calc, \n    x=\"rate\",\n    nbins=50,\n    width = 500\n)\n\n","c73ad166":"def makingrate(col):\n    \n\n    userdf = qdf.groupby(col)\n    userdf_calc = userdf.agg({'answered_correctly': ['mean',\"sum\", 'count', 'std']}).copy() # .agg\u3067\u305d\u306e\u4e2d\u8eab\u3092mean\u3084sum\u306a\u3069\u8907\u6570\u51e6\u7406\u53ef\u80fd\u3002\n    userdf_calc.columns = [\n        'mean', \n        \"sum\",\n        'count', \n        'std', \n     ]\n    userdf_calc[\"rate\"] = userdf_calc[\"sum\"]\/userdf_calc[\"count\"]\n    fig = px.histogram(\n        userdf_calc, \n        x=\"rate\",\n        nbins=50,\n        width = 500\n    )\n    fig.show()\n    return userdf_calc\n","7f9558a5":"qdf","07a7140f":"cdf = makingrate(\"content_id\")\ncdf","d72bf7be":"tdf = makingrate(\"task_container_id\")\ntdf","0b0facb3":"tdf[tdf[\"count\"]==1]","72e31f04":"px.line(tdf,x=tdf.index ,y=\"count\",width=500)","429ed1bc":"px.line(tdf,x=tdf.index ,y=\"rate\",width=500)","6711c6f0":"qdf","6d8d613b":"ptime = makingrate(\"prior_question_elapsed_time\")\nptime","eefa0f38":"px.line(ptime,x=ptime.index,y=\"count\")","661a453a":"px.line(ptime,x=ptime.index,y=\"rate\")","9ff0a118":"explanation = makingrate(\"prior_question_had_explanation\")\nexplanation","53a7f247":"questions = pd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/questions.csv')\nquestions.head()","ff9a91fa":"questions[\"tags\"] = questions[\"tags\"].astype(\"str\")\ntags = questions[\"tags\"].apply(lambda x: pd.Series(x.split())) # google\u3067dataframe\u3000\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3068\u304b\u3084\u308b\u3068\u51fa\u3066\u304f\u308b","0cbbf942":"tags","34b861b0":"tags.columns = [\"tag0\",\"tag1\",\"tag2\",\"tag3\",\"tag4\",\"tag5\"]\ntags","2663d402":"questions = pd.concat([questions,tags],axis=1)\nquestions = questions.drop(\"tags\",axis=1)\nquestions","ca241b05":"questions.describe()","87308676":"qdf.describe()","5659695b":"questions.columns","08fe5cb1":"questions.columns=['content_id', 'bundle_id', 'correct_answer', 'part', 'tag0', 'tag1',\n       'tag2', 'tag3', 'tag4', 'tag5']\nquestions","c5f04c2d":"qdf2 = pd.merge(qdf,questions,on=\"content_id\",how=\"left\")\nqdf2","ad801b01":"qdf115 = qdf2[qdf2[\"user_id\"]==115]","5bf4a361":"qdf115.tail(30)","5925583b":"# \u3055\u304d\u307b\u3069\u306emakingrate2\u306eqdf\u3092qdf2\u306b\u5909\u3048\u305f\u3060\u3051\ndef makingrate2(col):\n    \n\n    userdf = qdf2.groupby(col)\n    userdf_calc = userdf.agg({'answered_correctly': ['mean',\"sum\", 'count', 'std']}).copy() # .agg\u3067\u305d\u306e\u4e2d\u8eab\u3092mean\u3084sum\u306a\u3069\u8907\u6570\u51e6\u7406\u53ef\u80fd\u3002\n    userdf_calc.columns = [\n        'mean', \n        \"sum\",\n        'count', \n        'std', \n     ]\n    userdf_calc[\"rate\"] = userdf_calc[\"sum\"]\/userdf_calc[\"count\"]\n    \n   \n    return userdf_calc\n","c4d9d032":"partdf = makingrate2(\"part\")\npartdf","14623449":"px.bar(partdf,x=partdf.index,y=\"rate\",width=500)","e17e656a":"qdf2","06582ad2":"qdf2_tag = qdf2[[\"row_id\",\"content_id\",\"answered_correctly\",\"tag0\",\"tag1\",\"tag2\",\"tag3\",\"tag4\",\"tag5\"]]","f3a93813":"qdf2_tag","b911e543":"qdf_melt = pd.melt(qdf2_tag,id_vars=[\"row_id\",\"content_id\",\"answered_correctly\"],var_name=\"tag\",value_name=\"tagvalue\")","dd1694db":"qdf_melt","01debf25":"qdf_melt[\"tagvalue\"].unique()","eba4b7dc":"qdf_melt[\"tagvalue\"] =  pd.to_numeric( qdf_melt['tagvalue'], errors='coerce') # nan\u3068\u3044\u3046\u6587\u5b57\u5217\u3092NaN\u306b\u5909\u3048\u3066\u3044\u308b\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002","b653a582":"qdf_melt = qdf_melt.dropna(how=\"any\")\nqdf_melt","7a34e3e9":"# \u3055\u304d\u307b\u3069\u306emakingrate2\u306eqdf\u3092qdf2\u306b\u5909\u3048\u305f\u3060\u3051\ndef makingrate3(col):\n    \n\n    userdf = qdf_melt.groupby(col)\n    userdf_calc = userdf.agg({'answered_correctly': ['mean',\"sum\", 'count', 'std']}).copy() # .agg\u3067\u305d\u306e\u4e2d\u8eab\u3092mean\u3084sum\u306a\u3069\u8907\u6570\u51e6\u7406\u53ef\u80fd\u3002\n    userdf_calc.columns = [\n        'mean', \n        \"sum\",\n        'count', \n        'std', \n     ]\n    userdf_calc[\"rate\"] = userdf_calc[\"sum\"]\/userdf_calc[\"count\"]\n    \n   \n    return userdf_calc\n","8c697332":"tagdf = makingrate3(\"tagvalue\")\ntagdf","086782b4":"px.bar(tagdf,x=tagdf.index,y=\"mean\")","8a57fa20":"tagdf2 = makingrate3(\"tag\")\ntagdf2","62ed9e44":"px.bar(tagdf2,x=tagdf2.index,y=\"mean\",width=500)","6ba28349":"px.line(tagdf2,x=tagdf2.index,y=\"count\",width=500)","87f91b8d":"## traindf\u306e\u4e2d\u3067\u3082lecture\u3060\u3051\u3092\u629c\u304f","2420b8e2":"traindf","ef17f3c8":"ldf = traindf[traindf[\"content_type_id\"]==1]\nldf","629abf33":"lectures = pd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/lectures.csv')\nlectures","6869d9aa":"# \u3053\u308c\u3082\u30de\u30fc\u30b8\u3057\u3066\u307f\u308b","d7855f69":"lectures.columns","0cbc31a4":"lectures.columns = ['content_id', 'tag', 'part', 'type_of']","a51ba08f":"ldf2 = pd.merge(ldf,lectures,on=\"content_id\",how=\"left\")\nldf2","3d77716b":"ldf2[ldf2[\"user_id\"]==20938253]","713d5e21":"tdf20938253 = traindf[traindf[\"user_id\"]==20938253]\ntdf20938253","d29f7cf6":"tdf20938253[\"content_type_id\"].plot()","fc9df596":"test_ex = pd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/example_test.csv')\ntest_ex","5a4f0fc1":"traindf.head(3)","8a1ff106":"test_ex","fa4688ad":"test_ex[test_ex[\"user_id\"]==275030867]","c117b081":"test_ex[test_ex[\"user_id\"]==554169193]","64fc0527":"g0 = test_ex[test_ex[\"group_num\"]==0]\ng0","7674ceb1":"g1 = test_ex[test_ex[\"group_num\"]==1]\ng1","b1d151ed":"tmp = g1.iloc[0,-2]\ntmp","f89f2c91":"tmp = g1.iloc[0,-2]\ntmp = tmp.split(\"[\")[1]\ntmp = tmp.split(\"]\")[0]\ntmp = tmp.split(\",\")\ntmp","6ce178b7":"def mojihenkan(mojilist):\n    tmp = mojilist\n    tmp = tmp.split(\"[\")[1]\n    tmp = tmp.split(\"]\")[0]\n    tmp = tmp.split(\",\")\n    return tmp","ba0fde14":"g0[\"correct_ornot\"] = mojihenkan(g1.iloc[0,-2])\ng0[\"choice\"] = mojihenkan(g1.iloc[0,-1])","8f15e4e0":"g0","dfdfebf2":"# \u3053\u306e\u30b3\u30f3\u30da\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u63d0\u51fa\u65b9\u6cd5\u306f\u7279\u6b8a\u3002\u4ee5\u4e0b\u3001\u30b9\u30bf\u30fc\u30bf\u30fcnotebook\u304b\u3089\u3001\u89e3\u91c8\u3002\n# input\u306e\u4e2d\u306briiideducation\u3068\u3044\u3046py\u30d5\u30a1\u30a4\u30eb\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092import","4991a2dc":"import riiideducation\nenv = riiideducation.make_env()","b8cee41a":"iter_test = env.iter_test()","97338b88":"(test_df, sample_prediction_df) = next(iter_test) # \u4e2d\u8eab\u78ba\u8a8d\u306e\u307f\u672c\u756a\u306f\u6d88\u3059\u3002\n","7e327d2e":"test_df","8efb9c23":"sample_prediction_df","fbf4daad":"# \u4fdd\u5b58\u65b9\u6cd5 # \u4e2d\u8eab\u78ba\u8a8d\u306e\u307f\u672c\u756a\u306f\u6d88\u3059\u3002\nenv.predict(sample_prediction_df)","af1591af":"(test_df, sample_prediction_df) = next(iter_test) # \u4e2d\u8eab\u78ba\u8a8d\u306e\u307f\u672c\u756a\u306f\u6d88\u3059\u3002","f01a922b":"test_df","5d33d223":"env.predict(sample_prediction_df)","84ea6ff9":"\"\"\"\nbasic code\u306f\u4ee5\u4e0b\u3060\u304c\u3001\u3064\u307e\u3089\u306a\u3044\u306e\u3067\u3001\u5c11\u3057\u5909\u66f4\u3059\u308b\n\nfor (test_df, sample_prediction_df) in iter_test:\n    test_df['answered_correctly'] = 0.5\n    env.predict(test_df.loc[test_df['content_type_id'] == 0, ['row_id', 'answered_correctly']])\n\n\"\"\"\n\n","4a30b96e":"test_df","33295bf4":"cdf=cdf.reset_index()\ncdf","4b7548d2":"cdf.rate.mean()","e0e6506d":"test_df2 = pd.merge(test_df,cdf,on=\"content_id\",how=\"left\")\ntest_df2","302a264f":"for (test_df, sample_prediction_df) in iter_test:\n    test_df = test_df[test_df[\"content_type_id\"]==0] # \u8cea\u554fonly\n    test_df = pd.merge(test_df,cdf,on=\"content_id\",how=\"left\") # \u554f\u984c\u3054\u3068\u306e\u6b63\u7b54\u7387\u3092\u30de\u30fc\u30b8\n    test_df['answered_correctly'] = test_df[\"rate\"]\n    test_df = test_df[[\"content_type_id\",\"row_id\",\"answered_correctly\"]] # \u3053\u306e\u5f8c\u306efillna\u3092\u3059\u308b\u3068\u304d\u306b\u3001\u4ed6\u306e\u5217\u304c\u3042\u308b\u3068\u3001\u578b\u304c\u9055\u304f\u3066\u7121\u7406\u3068\u3044\u3046\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3053\u3068\u304c\u3042\u308b\u305f\u3081\n    \n    test_df.fillna(value = 0.696, inplace = True) # \u4eca\u56de\u306enotebook(100\u4e07\u884c\u30c7\u30fc\u30bf)\u3067\u306a\u3044\u554f\u984c\u306f\u3001\u5168\u90e8\u306e\u554f\u984c\u306e\u6b63\u7b54\u7387\u306e\u5e73\u5747\u3092\u4f7f\u3046\u3002\n    \n    env.predict(test_df.loc[test_df['content_type_id'] == 0, ['row_id', 'answered_correctly']])\n","58ab05d0":"#### \u5206\u96e2\u3067\u304d\u305f","2641d369":"# part\u3054\u3068\u306e\u6b63\u7b54\u7387\u3092\u51fa\u3057\u3066\u307f\u308b","8879edad":"\u266f \u30e1\u30e2\u30ea\u30fc\u3092\u52b9\u7387\u7684\u306b\u4f7f\u3046\u305f\u3081\u306e\u578b\u5909\u63db (\u4ed6\u30b3\u30f3\u30da\u304b\u3089\u629c\u7c8b)","f8d1fe86":"#### row id\u304c38\u219239\u554f\u76ee\u306b\u306a\u3063\u305f\u3068\u304d\u306b\u6025\u6fc0\u306b\u4e0a\u304c\u3063\u3066\u3044\u308b\u3002TOEIC\u3067\u8a00\u3046\u3068listening\u3068reading\u3067\u9593\u304c\u7a7a\u304f\u3068\u304b\u305d\u3093\u306a\u30a4\u30e1\u30fc\u30b8 ?\n#### \u203b\u3000\u5f8c\u307b\u3069question.csv\u3068\u30de\u30fc\u30b8\u3059\u308b\u3068part\u304c\u5909\u308f\u3063\u3066\u3044\u308b","3c5d697a":"# <span style=\"background-color: yellow; \">3.lecture.csv","985e7735":"* ** question_id **\uff1atraincsv\u306econtent id\n\n* ** bundle_id **\uff1a\u3069\u306e\u8cea\u554f\u3068\u540c\u6642\u306b\u9001\u3089\u308c\u305f\u304b ?\n\n* ** correct_answer **\uff1a\u554f\u984c\u306e\u7b54\u3048\n\n* **\u30d1\u30fc\u30c8**\uff1aTOEIC\u30c6\u30b9\u30c8\u306e\u95a2\u9023\u30bb\u30af\u30b7\u30e7\u30f3\u3002\n\n* **\u30bf\u30b0**\uff1a\u8cea\u554f\u306e1\u3064\u4ee5\u4e0a\u306e\u8a73\u7d30\u306a\u30bf\u30b0\u30b3\u30fc\u30c9\u3002\u30bf\u30b0\u306e\u610f\u5473\u306f\u63d0\u4f9b\u3055\u308c\u307e\u305b\u3093\u304c\u3001\u3053\u308c\u3089\u306e\u30b3\u30fc\u30c9\u306f\u8cea\u554f\u3092\u307e\u3068\u3081\u308b\u306e\u306b\u5341\u5206\u3067\u3059\u3002","f928c3b8":"## tag\u3054\u3068\u306e\u6b63\u7b54\u7387\u3092\u898b\u308b","94bc717f":"#### \u4e0a\u8a182\u3064\u304b\u3089\u3001task_contaier_id\u304c\u5c0f\u3055\u304f\u306a\u308b\u307b\u3069\u6b63\u7b54\u7387\u304c\u53ce\u675f\u3057\u3066\u3044\u308b\u30021\u5104\u500b\u306e\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3060\u3068\u3069\u3046\u306a\u308b\u306e\u304b\u30fb\u30fb\u30fb","cbffb5b9":"# \u8b1b\u7fa9\u306f\u610f\u5473\u3042\u308b\u306e\u3060\u308d\u3046\u304b\u30fb\u30fb\u30fb","ddbf270b":"# \u5f8c\u308d\u306e\u307b\u3046\u306b\u304b\u304b\u308c\u3066\u3044\u308btag\u306e\u307b\u3046\u304c\u6b63\u7b54\u7387\u9ad8\u3044\u304b\u3082\u3002\u30c7\u30fc\u30bf\u5c11\u306a\u3044\u3060\u3051 ?","86e30063":" # <span style=\"background-color: yellow; \">1.train.csv\n## site\u306b\u7d30\u304b\u3044\u8aac\u660e\u3042\u308b\u304c\u3001\u308f\u304b\u308a\u3084\u3059\u304f\u89e3\u91c8\u3057\u305f\u3082\u306e (Below sentence is my interpretation in order to understand easily.\n\n1.  row_id : dataframe\u306eid\n2.  timestamp : \u751f\u5f92\u306e\u76f4\u524d\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593(\u30df\u30ea\u79d2)\n3.  user id : \u751f\u5f92\u306eid\n4.  content_id : \u554f\u984c\u306eid\n5.  content_type_id : \u8cea\u554f(0)\u304b\u8b1b\u7fa9(1)\n6.  task_container_id : \n \u308f\u304b\u308a\u3084\u3059\u304f\u6349\u3048\u308b\u3068\u30014.content id\u306e\u7ae0\u307f\u305f\u3044\u306a\u611f\u3058 (TOEIC\u306e\u554f\u984c\u3092\u30a4\u30e1\u30fc\u30b8\u3059\u308b\u3068\u3001\uff11\u3064\u306e\u9577\u6587\u304c\u3053\u308c\u306b\u76f8\u5f53\u3057\u3066\u3001\u305d\u308c\u306e\u554f\u984c1,2,3\u307f\u305f\u3044\u306e\u304c\u3001content id\u3067\u305d\u308c\u305e\u308c\u632f\u308a\u5206\u3051\u3089\u308c\u3066\u3044\u308b)\n6.  user_answer : 4\u629e (0,1,2,3)\u3067\u3069\u308c\u3092\u7b54\u3048\u305f\u304b\n7.  answered_correctly : \u305d\u308c\u304c\u3042\u3063\u3066\u3044\u305f\u304b\u3069\u3046\u304b\n8.  prior_question_elapsed_time\t : 1\u3064\u524d\u306e\u8cea\u554f(3\u500b\u8cea\u554f\u304c\u3042\u308b\u5834\u5408\u304c\u3042\u308b)\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\n9.  prior_question_had_explanation : 1\u3064\u524d\u306e\u8cea\u554f(3\u500b\u8cea\u554f\u304c\u3042\u308b\u5834\u5408\u304c\u3042\u308b)\u306e\u5f8c\u306b\u3001\u89e3\u8aac\u304a\u3088\u3073\u56de\u7b54\u3092\u898b\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u304b\n\n## \u6700\u7d42\u7684\u306b\u306f\u3001answered_correctly\u4ee5\u5916\u306e\u60c5\u5831\u304b\u3089\u3001\u554f\u984c\u3092\u5f53\u3066\u3089\u308c\u308b\u304b\u3069\u3046\u304b\u30920\uff5e1\u306e\u78ba\u7387\u3067\u51fa\u3059\u30b3\u30f3\u30da\u30c6\u30a3\u30b7\u30e7\u30f3\n## (test\u30c7\u30fc\u30bf\u306b\u306f\u3082\u3046\u5c11\u3057\u7d30\u5de5\u304c\u5165\u3063\u3066\u3044\u308b)\n","248f5031":"#### Note that we'll get an error if we try to continue on to the next batch without making our predictions for the current batch.\n#### \u73fe\u5728\u306e\u30d0\u30c3\u30c1\u306e\u4e88\u6e2c\u3092\u4f5c\u308b\u3053\u3068\u306a\u3057\u306b\u6b21\u306e\u30d0\u30c3\u30c1\u306b\u884c\u3053\u3046\u3068\u3059\u308b\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3088\u3002\u3068\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u3001\n#### 1 group\u305a\u3064\u3001prediction\u3057\u3066\u3001\u4fdd\u5b58\u3057\u3066\u3001\u6b21\u306b\u884c\u304f\u3068\u3044\u3046\u3053\u3068\u3092\u3084\u308b\u306e\u3060\u3068\u63a8\u6e2c\u3002","3a8e7a6c":"#### \u554f\u984c\u306e\u524d\u306b\u89e3\u8aac\u306a\u3069\u3042\u308b\u3068\u3001\u6b63\u89e3\u7387\u304c\u9ad8\u3044","1deb15e6":"#### bundle id\u306f\uff13\u3064\u8cea\u554f\u304c\u3042\u3063\u305f\u3089\u3001\u305d\u308c\u3068\u7d10\u3065\u3044\u3066\u3044\u308b ex 3363-3365\u306e\u554f\u984c\u306f3363\u3068\u4e00\u7dd2\u306b\u3055\u308c\u305f\u3082\u306e\u3000\u3068\u3044\u3046\u610f\u5473\u3002\n#### part\u306e1,2,3,4\u3067\u6642\u9593\u30ed\u30b9\u304c\u5927\u304d\u304f\u5909\u308f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u554f\u984c\u306e\u50be\u5411\u304c\u5909\u308f\u3063\u3066\u3044\u308b\n#### tag\u306f\u554f\u984c\u306e\u5f62\u5f0f\u304b\u306a ? \u4f55\u304b\u304c\u5165\u3063\u3066\u3044\u308b\u3068\u6b63\u7b54\u7387\u304c\u60aa\u3044\u3068\u304b\u3042\u308c\u3070\u3001\u9762\u767d\u3044\u3000melt\u3057\u3061\u3083\u3063\u3066\u3001\u4e26\u3079\u3066\u3082\u826f\u3044\u304c\u30011\u5104\u884c\u306b\u3055\u3089\u306b\u5897\u3084\u3057\u3066\u3082\u306a\u30fb\u30fb\u30fb\u3068\u8ff7\u3044\u3069\u3053\u308d\n#### \u00d76\u306e6\u5104\u500b\u306b\u306a\u3063\u3066\u3057\u307e\u3046","c40bf135":"# 100\u4e07\u500b\u30c7\u30fc\u30bf\u304b\u3089\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u308f\u304b\u308b\n* \u751f\u5f92(user_id)\u304c3824\u4eba\n* \u554f\u984c(content_id)\u304c13320\u500b\n* \u554f\u984c or \u8b1b\u7fa9\u3067\uff12\u500b(content_type_id)\n* \u554f\u984c\u306e\u7ae0(task_container_id)\u304c7740\u500b\n* \u751f\u5f92\u306e\u56de\u7b54\u306e\u9078\u629e\u80a2\u304c\uff15\u500b (-1,0,1,2,3)\u3067-1\u306f\u8b1b\u7fa9\n![](http:\/\/)* \u6b63\u89e3 or not \u3067\uff13\u500b(-1,0,1) \u3067-1\u306f\u8b1b\u7fa9","6d1814b4":"#### 0\u884c\u76ee\u306b\u524d\u306egroup\u304c\u6b63\u89e3\u3057\u305f\u304b\u306a\u3069\u306e\u60c5\u5831\u304c\u306f\u3044\u3063\u3066\u3044\u308b","87e24d90":"# \u65e5\u672c\u8a9e(Japanese)EDA\u3067\u3001\u500b\u4eba\u7684\u306a\u89e3\u91c8\u3067\u3059\u3002\n## memo\u66f8\u304d\u307f\u305f\u3044\u306a\u3082\u306e\u3082\u3042\u308b\u306e\u3067\u3001\u8a00\u3044\u56de\u3057\u304c\u4e01\u5be7\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u30fb\u30fb\u30fb\n\n","fec05602":"#### \u308f\u304b\u308a\u3084\u3059\u304f\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001user id:115\u306e\u307f\u3092\u898b\u3066\u307f\u308b","c11862c4":"# \u6ce8\u610f\u70b9 : \n1. internet = off\u3067commit\u3057\u306a\u3044\u3068\u767b\u9332\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u6ce8\u610f\u3002\n1. make_env() \u304c\uff11\u56de\u3057\u304b\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u6700\u521d\u306e\u30b0\u30eb\u30fc\u30d7\u30682\u500b\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306f\u3053\u306enotebook\u3060\u3068test_df\u3092\u89e3\u8aac\u7528\u306b\u8868\u793a\u3057\u305f\u304c\u3001\u3053\u306e\u307e\u307e\u3060\u3068\u6700\u521d\u30682\u500b\u76ee\u306f\u30010.5\u306b\u5168\u90e8\u306a\u308b\u306e\u3067\u3001\u4fee\u6b63\u5fc5\u8981\n1. 100\u4e07\u500b\u306e\u30c7\u30fc\u30bf\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\u5168\u90e8train.csv\u3092\u8aad\u307f\u8fbc\u3093\u3067(\u7d041\u5104\u884c)\u3001\u540c\u69d8\u306b\u554f\u984c\u3054\u3068\u306e\u5e73\u5747\u5024\u3092\u5165\u308c\u305f\u6642\u306e\u30b9\u30b3\u30a2\u306f0.703(\u5225\u306enotebook\u3067\u8a66\u3057\u307e\u3057\u305f)","c9125e5f":"# \u6ce8\u610f\u70b9 :\n# \u8b1b\u7fa9\u306e\u3068\u3053\u308d\u306f\u63d0\u51fa\u3057\u306a\u3044\u3068\u3042\u308b\n# traincsv\u306e\u4e2d\u306b\u306a\u3044\u554f\u984c(content_id)\u304c\u3042\u308b\u3068\u3082\u8a18\u8ff0\u3042\u308a\n# \u3067\u3059\u304c\u3001\u8a02\u6b63\u3055\u308c\u3066\u3001traincsv\u306e\u4e2d\u306b\u306a\u3044\u554f\u984c(content_id)\u306f\u306a\u3044\u305d\u3046\u3067\u3059(\u30b3\u30e1\u30f3\u30c8\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059)\n\n* ---\u5927\u672c\u306e\u8a18\u8ff0---\n* https:\/\/www.kaggle.com\/sohier\/competition-api-detailed-introduction\u3000\u306b\u306f\u305d\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u304c\u3001\n\n* ---\u8a02\u6b63\u306e\u304a\u77e5\u3089\u305b\u30b5\u30a4\u30c8---\n* https:\/\/www.kaggle.com\/c\/riiid-test-answer-prediction\/discussion\/191106\n\n* \u305f\u3060\u3057\u3001\u3053\u306enotebook\u306e\u5834\u5408\u3001100\u4e07\u884c\u306etrain\u30c7\u30fc\u30bf\u306a\u306e\u3067\u3001\u8db3\u308a\u307e\u305b\u3093\u30fb\u30fb\u30fb\u3002\n* \u53c2\u8003 100\u4e07\u884c\u306econtent_id\u6570 : 13320\u500b\u3002\u3000train\u30c7\u30fc\u30bf\u5168\u90e8(\u7d041\u5104\u884c)\u306econtent_id\u6570 : 13782\u500b","a4e12c48":"# 100\u4e07\u500b\u306e\u30c7\u30fc\u30bf\u304b\u3089\u751f\u5f92\u3054\u3068\u306e\u6b63\u7b54\u7387\u3092\u51fa\u3057\u3066\u307f\u308b\u3002","74313071":"# tag\u306e\u9806\u756a\u306b\u3082\u4f55\u304b\u5f71\u97ff\u304c\u3042\u308a\u305d\u3046\u3002","41fa6d71":"# <span style=\"background-color: yellow; \">2.question.csv","26c24db4":"#### \u554f\u984c\u3054\u3068\u306e\u6b63\u7b54\u7387\u304c\u5b8c\u6210\u3002\n#### 0 \u2192\u3000\u3080\u3061\u3083\u304f\u3061\u3083\u96e3\u3057\u3044\u554f\u984c ?, 1\u2192\u3080\u3061\u3083\u304f\u3061\u3083\u7c21\u5358\u306a\u554f\u984c ? \u3001\u305d\u306e\u4ed6\u306f\u304d\u308c\u3044\u306a\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3000\u2190\u3000train.csv\u3092\u5168\u90e8\u8aad\u3080\u3068\u304d\u308c\u3044\u306b\u306a\u308a\u307e\u3059\u30020\u30681\u304c\u591a\u304f\u306a\u308b\u3068\u304b\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002","38c724b6":"#### \u751f\u5f92\u3054\u3068\u306b\u3001\u7d0460%\u304f\u3089\u3044\u306e\u6b63\u7b54\u7387\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308b","6b3483fe":"# <span style=\"background-color: yellow; \">5. about submission","76ff5d23":"# \u7ae0\u306fid\u304c\u5927\u304d\u304f\u306a\u308b\u3068\u6570\u304c\u5c11\u306a\u304f\u306a\u3063\u3066\u3044\u308b","4b9c4812":"# group(\u6642\u9593?)\u304c\u9032\u3080\u3068\u3001\u524d\u306e\u56de\u7b54\u304c\u3042\u3063\u3066\u3044\u305f\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u304c\u51fa\u308b\u3002\n# \u63d0\u51fa\u65b9\u6cd5\u306f ?","1554f72e":"# nan\u30c7\u30fc\u30bf\u306e\u524a\u9664\u306e\u7df4\u7fd2","1ec62bd5":"# \u4e0a\u8a18\u306e0,1\u306f1\u500b\u3057\u304b\u554f\u984c\u304c\u306a\u3044\u30b1\u30fc\u30b9\u304c\u591a\u305d\u3046\u30022040\u500b\u3082\u3042\u308b","5260a3da":"# 0\u3060\u3051\u3092\u307e\u305a\u3084\u308b","d4b6a566":"#### \u7ae0\u3054\u3068\u306e\u6b63\u7b54\u7387\u304c\u5b8c\u6210\u3002\n#### count\u304c\uff11\u500b\u3057\u304b\u306a\u3044\u7ae0\u3068\u304b\u304c\u6b63\u7b54\u73871\u3068\u304b\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304b\u3002\u3000\u2190\u3000train.csv\u3092\u5168\u90e8\u8aad\u3080\u3068\u304d\u308c\u3044\u306b\u306a\u308a\u307e\u3059\u30020\u30681\u304c\u591a\u304f\u306a\u308b\u3068\u304b\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002","43fa5790":"# nan \u3068\u3044\u3046\u6587\u5b57\u5217\u304c\u3042\u308b\u3002\u3053\u308c\u3068NaN\u304c\u5225\u7269","f3ba8d75":"# \u307e\u3068\u3081\u3066for\u6587\u3067\u56de\u3059","49b05f90":"* lecture id : traindf\u306econtent id\n* tag : \u8b1b\u7fa9\u7528\u306e1\u3064\u306e\u30bf\u30b0\u30b3\u30fc\u30c9\u3002\u30bf\u30b0\u306e\u610f\u5473\u306f\u63d0\u4f9b\u3055\u308c\u307e\u305b\u3093\u304c\u3001\u3053\u308c\u3089\u306e\u30b3\u30fc\u30c9\u306f\u8b1b\u7fa9\u3092\u307e\u3068\u3081\u308b\u306e\u306b\u5341\u5206\u3067\u3059\u3002\n* part : \u8b1b\u7fa9\u306e\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u30ab\u30c6\u30b4\u30ea\u30b3\u30fc\u30c9\u3002\n* type of : \u8b1b\u7fa9\u306e\u30bf\u30a4\u30d7\n","b4e5b407":"# \u95a2\u6570\u5316\u3000\u2191\u306e\u3092\u30b3\u30d4\u30da\u3057\u3066\u4f5c\u6210\u3057\u3066\u3044\u308b\u306e\u3067\u3001userdf\u3068\u306a\u3063\u3066\u3044\u308b\u304c\u6c17\u306b\u3057\u306a\u3044\u3002","79174de3":"# \u3044\u3063\u305f\u3093\u307e\u3068\u3081\n## -- \u6b63\u7b54\u7387\u306b\u5f71\u97ff\u3042\u308a\u305d\u3046\u306a\u30d1\u30e9\u30e1\u30fc\u30bf --\n* content_id : \u554f\u984c\n* prior_question_had_explanation : \u524d\u306e\u554f\u984c\u306e\u3042\u3068\u8aac\u660e\u3084\u89e3\u8aac\u304c\u3042\u3063\u305f\u304b\u3002\n* part : TOEIC\u306e\u30d1\u30fc\u30c8\u3002\u30ea\u30b9\u30cb\u30f3\u30b0\u3001\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u306a\u3069\n* task_contaier_id : \u7ae0\n* tag : \u554f\u984c\u306e\u30bf\u30b0\n* tag no : \u554f\u984c\u306e\u30bf\u30b0\u304c\u6700\u521d\u304b\u3089\u4f55\u756a\u76ee\u306b\u304b\u304b\u308c\u3066\u3044\u308b\u304b\n\n## --- \u307e\u3060\u308f\u304b\u3089\u306a\u3044\u3068\u3053\u308d ---\n* lecture\u3092\u53d7\u3051\u305f\u5f8c\u3001\u6b63\u7b54\u7387\u304c\u4e0a\u304c\u308b\u304b ?\n* user id\u306ftest\u30c7\u30fc\u30bf\u3067\u3082\u91cd\u8907\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u304b ?","b3a7ae03":"#### \u751f\u5f92\u3054\u3068\u306e\u6b63\u7b54\u7387\u306f\u3001\u611a\u76f4\u306b\u3084\u308c\u3070\u4ee5\u4e0b\u306e\u611f\u3058\u30fb\u30fb\u30fb\u3067\u3082\u3001\u6642\u9593\u304b\u304b\u308b\u3068\u601d\u308f\u308c\u308b","06fa6ccb":"# \u8b1b\u7fa9\u898b\u3066\u3001\u554f\u984c\u89e3\u3044\u3066\u30fb\u30fb\u30fb\u3068\u304b\u306e\u30b1\u30fc\u30b9\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3060\u3068\u63a8\u6e2c\u3002","c1b940c6":"# content id\u3068question id\u304c\u540c\u3058\u306a\u306e\u3067\u3001merge\u3057\u3066\u3057\u307e\u3046","30823217":"# <span style=\"background-color: yellow; \">4. example_test.csv","3367fbf1":"# 0. input\u30d5\u30a1\u30a4\u30eb\u306e\u78ba\u8a8d (confirming input files)","a73de34f":"## train.csv\u3068\u9055\u3046\u3068\u3053\u308d\n* group number\u304c\u3042\u308b\n* prior_groups_answers_correct\u304c\u3042\u308b\n* priot_groups_responses\u304c\u3042\u308b\n* answered_correctly\u304c\u306a\u3044\u3002\uff08\u3053\u308c\u3092\u63a8\u6e2c)","15240d1e":"#### task container id\u306f\u30011\uff5e41\u7ae0\u3042\u3063\u3066\u300140\u306841\u306f\u305d\u308c\u305e\u308c\u554f\u984c\u304c3\u500b\u3042\u308b\n#### prior_question_elapsed_time\u306f\u8b1b\u7fa9(\u554f\u984c\u5f8c\u306e\u89e3\u8aac\u3068\u304b)\u3092\u629c\u304b\u3057\u305f\u30bf\u30a4\u30e0\u306e\u305f\u3081\u3001\u5358\u7d14\u306b\u5f15\u304d\u7b97\u3067\u306f\u306a\u3055\u305d\u3046\u3002","e372e055":"# \u7384\u4eba\u306fgroupby\u3067\u4e00\u767a\u3067\u3084\u308b","2985a45d":"# 1. train.csv\u306e\u78ba\u8a8d(confirming train.csv)\n## \u203b 1\u5104\u884c\u3042\u308b\u306e\u3067\u3001100\u4e07\u884c\u3067\u307e\u305a\u306f\u8aad\u3080 (I read only 1 million rows because this file is composed of over 10 million."}}