{"cell_type":{"fac15048":"code","97fa751e":"code","b58b0362":"code","653de186":"code","bca40c13":"code","e6448e37":"code","a386e1d1":"code","ec6ca576":"code","5335b12b":"code","35c35951":"code","c7ce3eb9":"code","dd6642c1":"code","1ac0dabc":"code","adfc79fe":"code","21d1477e":"code","c8c94eb5":"code","f24760a3":"code","8f2fddb9":"code","3d3eda11":"code","e427aa66":"code","38e460b8":"code","8a81892b":"code","63e34b21":"code","3c861309":"code","66fc2aa8":"code","c6841452":"code","da784e17":"code","a9975490":"code","26619f33":"code","dae935d7":"code","51034e9d":"code","3497e85b":"code","c3e43f9f":"code","3d70f944":"code","1d331bc8":"markdown","2f210e09":"markdown","f9752811":"markdown","1c38261b":"markdown","5fd506c8":"markdown","9f5a1252":"markdown","2ecd0cc1":"markdown","493434ba":"markdown","02da2796":"markdown","277b1b2c":"markdown","e142d40d":"markdown","759eb9aa":"markdown"},"source":{"fac15048":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","97fa751e":"median_house_hold_in_come = pd.read_csv('..\/input\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv('..\/input\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv('..\/input\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\nshare_race_city = pd.read_csv('..\/input\/ShareRaceByCity.csv', encoding=\"windows-1252\")\nkill = pd.read_csv('..\/input\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","b58b0362":"median_house_hold_in_come.head()","653de186":"percentage_people_below_poverty_level.head()","bca40c13":"percent_over_25_completed_highSchool.head()","e6448e37":"share_race_city.head()","a386e1d1":"kill.head()","ec6ca576":"percentage_people_below_poverty_level[\"Geographic Area\"].unique()","5335b12b":"percentage_people_below_poverty_level.poverty_rate.value_counts()","35c35951":"percentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace=True)\npercentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)\nareaList=list(percentage_people_below_poverty_level['Geographic Area'].unique())\narea_poverty_ratio=[]\nfor i in areaList:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\n    \ndata=pd.DataFrame({'areaList': areaList,'area_poverty_ratio':area_poverty_ratio})\nnew_index=(data['area_poverty_ratio'].sort_values(ascending=True)).index.values\nsorted_data = data.reindex(new_index)\n\n#Visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['areaList'],y=sorted_data['area_poverty_ratio'])\nplt.xticks(rotation= 60)\nplt.xlabel('States')\nplt.ylabel('Poverty Rate')\nplt.title('Poverty Rate Given States')","c7ce3eb9":"share_race_city.head()","dd6642c1":"share_race_city.info()","1ac0dabc":"#share_race_city.share_white.value_counts()\n#share_race_city.share_black.value_counts()\n#share_race_city.share_native_american.value_counts()\n#share_race_city.share_asian.value_counts()\n#share_race_city.share_hispanic.value_counts()\nshare_race_city.replace(['-'],0.0,inplace=True)\nshare_race_city.replace(['(X)'],0.0,inplace=True)\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']]=share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\nareaList=list(share_race_city['Geographic area'].unique())\nshare_white=[]\nshare_black=[]\nshare_native_american=[]\nshare_asian=[]\nshare_hispanic=[]\n\nfor i in areaList:\n    x = share_race_city[share_race_city['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black) \/ len(x))\n    share_native_american.append(sum(x.share_native_american) \/ len(x))\n    share_asian.append(sum(x.share_asian) \/ len(x))\n    share_hispanic.append(sum(x.share_hispanic) \/ len(x))\n    \nf,ax=plt.subplots(figsize=(9,15))\nsns.barplot(x=share_white,y=areaList,color='green',alpha=0.5,label='White')\nsns.barplot(x=share_black,y=areaList,color='black',alpha=0.5,label='African American')\nsns.barplot(x=share_native_american,y=areaList,color='red',alpha=0.5,label ='Native American')\nsns.barplot(x=share_asian,y=areaList,color='yellow',alpha=0.5,label='Asian')\nsns.barplot(x=share_hispanic,y=areaList,color='pink',alpha=0.6,label='Hispanic')\n    \nax.legend(loc='lower right',frameon=True)\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")","adfc79fe":"percent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)\npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\nareaList = list(percent_over_25_completed_highSchool['Geographic Area'].unique())\narea_highschool = []\nfor i in areaList:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n# sorting\ndata = pd.DataFrame({'areaList': areaList,'area_highschool_ratio':area_highschool})\nnew_index = (data['area_highschool_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data.reindex(new_index)\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2['areaList'], y=sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")","21d1477e":"sorted_data.head()\n","c8c94eb5":"sorted_data2.head()","f24760a3":"sorted_data['area_poverty_ratio']=sorted_data['area_poverty_ratio']\/max(sorted_data['area_poverty_ratio'])\nsorted_data2['area_highschool_ratio']=sorted_data2['area_highschool_ratio']\/max(sorted_data2['area_highschool_ratio'])\ndata=pd.concat([sorted_data,sorted_data2['area_highschool_ratio']],axis=1)\ndata.sort_values('area_poverty_ratio',inplace=True)\n\n#Visualize\nf,x1=plt.subplots(figsize=(20,10))\nsns.pointplot(x='areaList',y='area_poverty_ratio',data=data, color='green')\nsns.pointplot(x='areaList',y='area_highschool_ratio',data=data, color='black')\nplt.text(40,0.4,'high school graduate ratio',color='black',fontsize = 17)\nplt.text(40,0.35,'poverty ratio',color='green',fontsize = 18)\nplt.xlabel('States',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('High School Graduate  VS  Poverty Rate',fontsize = 20,color='blue')\nplt.grid()\n","8f2fddb9":"data.head()","3d3eda11":"g=sns.jointplot(data.area_poverty_ratio,data.area_highschool_ratio,kind='kde' ,height=7)\n\n#pearsonr\nfrom scipy import stats\ng = g.annotate(stats.pearsonr)\n\nplt.show()","e427aa66":"t=sns.jointplot(data.area_poverty_ratio,data.area_highschool_ratio,ratio=6,color=\"orange\")","38e460b8":"kill.race.head(10)","8a81892b":"kill.race.dropna(inplace=True)\nlabels=kill.race.value_counts().index\nkill.race.value_counts()\ncolors=['grey','orange','blue','red','green','pink']\nexplode=[0,0,0,0,0,0]\nsizes=kill.race.value_counts().values\n\n#visualite\nplt.figure(figsize=(7,7))\nplt.pie(sizes,explode=explode,colors=colors,labels=labels,autopct='%1.1f%%')\nplt.title('Killed People According to Races',color = 'blue',fontsize = 15)","63e34b21":"data.head()","3c861309":"sns.lmplot(x=\"area_poverty_ratio\",y=\"area_highschool_ratio\" ,data=data)","66fc2aa8":"sns.kdeplot(data.area_poverty_ratio,data.area_highschool_ratio, shade=True, cut=5)\nplt.show()","c6841452":"pal=sns.cubehelix_palette(2, rot=-.5, dark=.3)\nsns.violinplot(data=data,palette=pal,inner=\"points\")\nplt.show()","da784e17":"data.head()","a9975490":"data.corr()","26619f33":"f,ax=plt.subplots(figsize=(5,5))\nsns.heatmap(data.corr(),annot=True,linewidths=0.5 ,ax=ax)\nplt.show()","dae935d7":"kill.head()","51034e9d":"sns.boxplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\",data=kill)\nplt.show()","3497e85b":"sns.swarmplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\",data=kill)\nplt.show()","c3e43f9f":"sns.pairplot(data)\nplt.show()","3d70f944":"sns.countplot(kill.gender)\nsns.countplot(kill.manner_of_death)\nplt.title(\"manner of death\", color=\"DarkBlue\")\nplt.show()","1d331bc8":"****Pie Chart****","2f210e09":"**Violin Plot**","f9752811":"**Swarm Plot**","1c38261b":"**Count Plot**","5fd506c8":"**LM Plot**","9f5a1252":"**BAR PLOT**","2ecd0cc1":"**HeatMap**","493434ba":"**POINT PLOT**","02da2796":"**JOINT PLOT**","277b1b2c":"**Box Plot**","e142d40d":"**Pair Plot**","759eb9aa":"**KDE Plot**"}}