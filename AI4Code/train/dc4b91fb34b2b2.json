{"cell_type":{"0c22e94f":"code","ca6a07b6":"code","c6100fa9":"code","5b862040":"code","61aece49":"code","78d8c358":"code","95dc63a1":"code","49a2a9b7":"code","28795df9":"code","14935260":"code","f9c11201":"code","5c9e842e":"code","e2418260":"code","6969412b":"code","2a3bce5e":"code","ec865eb4":"code","cfdc875e":"code","936e9452":"code","68ba8a9a":"code","917be252":"markdown","6d8a8067":"markdown","b7ee7997":"markdown","e30da576":"markdown","0197deb6":"markdown"},"source":{"0c22e94f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ca6a07b6":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","c6100fa9":"train_data = pd.read_csv(\"..\/input\/train.csv\")\ntrain_data.head()","5b862040":"train_data.describe()","61aece49":"train_data['ApplicantIncome'].hist(bins=70,grid=False)","78d8c358":"train_data.boxplot(column = 'ApplicantIncome')","95dc63a1":"train_data.boxplot(column = 'ApplicantIncome', grid =False, by = 'Education')","49a2a9b7":"train_data['LoanAmount'].hist(bins=100,grid = False)","28795df9":"temp = train_data['Credit_History'].value_counts(ascending = True)\ntemp.plot(kind = 'bar')","14935260":" train_data.apply(lambda x: sum(x.isnull()),axis=0)","f9c11201":"train_data['LoanAmount'].fillna(train_data['LoanAmount'].mean(),inplace=True)","5c9e842e":"train_data['Self_Employed'].fillna('No',inplace=True)","e2418260":"train_data['Gender'].fillna(train_data['Gender'].mode()[0], inplace=True)\ntrain_data['Married'].fillna(train_data['Married'].mode()[0], inplace=True)\ntrain_data['Dependents'].fillna(train_data['Dependents'].mode()[0], inplace=True)\ntrain_data['Loan_Amount_Term'].fillna(train_data['Loan_Amount_Term'].mode()[0], inplace=True)\ntrain_data['Credit_History'].fillna(train_data['Credit_History'].mode()[0], inplace=True)","6969412b":"train_data.head()","2a3bce5e":"train_data.apply(lambda x: sum(x.isnull()),axis=0)","ec865eb4":"from sklearn.preprocessing import LabelEncoder\nvar_mod = ['Gender','Married','Dependents','Education','Self_Employed','Property_Area','Loan_Status']\nle = LabelEncoder()\nfor i in var_mod:\n    train_data[i] = le.fit_transform(train_data[i])\ntrain_data.head() ","cfdc875e":"X = train_data[['Credit_History','Gender','Married','Education']]\ny = train_data['Loan_Status']","936e9452":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()\nmodel.fit(X,y)\npredictions = model.predict(X)","68ba8a9a":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(predictions,y))","917be252":"**Distribution Analysis**","6d8a8067":"**Categorical Value Analysis**","b7ee7997":"**Loading and Summarizing Data**","e30da576":"**Data Munging**","0197deb6":"**Training Model**"}}