{"cell_type":{"114b707c":"code","3c24b7dd":"code","dff8bd82":"code","84a2b33b":"code","4b9911a4":"code","3adf8719":"code","4be7e2e1":"code","a355dc63":"code","67cbd5dc":"code","d1bebada":"code","52cdb58f":"code","431059a1":"code","b74e146a":"code","ca998aab":"code","ff8e995a":"code","85d1063b":"code","e446d0a5":"code","f7862295":"code","5d8ba660":"code","b5ffaa77":"code","7bfb0537":"code","29dad1f4":"code","932a49e1":"code","5d839134":"code","e1c5480b":"code","0eab9d8d":"code","ab30b8e4":"code","e58b53ae":"code","1c7324ba":"code","8d558e91":"code","4d9a2b3c":"code","4b90f14a":"code","eebce624":"markdown","26106001":"markdown","7ca74ea5":"markdown","5e163cee":"markdown","4b2a8e5f":"markdown","1f8defac":"markdown","e6218962":"markdown","19be483a":"markdown","06c7c252":"markdown","3b50053b":"markdown","68fa4c5e":"markdown","0b742313":"markdown","31850da4":"markdown","ec4e7d7a":"markdown","f1c6ea2f":"markdown","aac9c98a":"markdown","bfd0f9b6":"markdown","e601d27e":"markdown"},"source":{"114b707c":"import warnings\nwarnings.filterwarnings(\"ignore\")\n#!pip install --upgrade pip\n!pip install benford_py\n!pip install folium","3c24b7dd":"import benford as bf\nimport pandas as pd\nimport folium","dff8bd82":"# European Centre for Disease Prevention and Control data on the geographic distribution of COVID-19 cases worldwide\ncovid_data_all = pd.read_csv(\"https:\/\/opendata.ecdc.europa.eu\/covid19\/casedistribution\/csv\", dayfirst=True, parse_dates=True)","84a2b33b":"# Here we change the display option of pandas. \npd.options.display.max_rows = 200\npd.options.display.max_columns = None","4b9911a4":"covid_data_all","3adf8719":"covid_data_all.rename(columns={'dateRep':'date','countriesAndTerritories':'country', 'countryterritoryCode':'country_code', 'popData2019':'population_2019', 'continentExp':'continent', 'Cumulative_number_for_14_days_of_COVID-19_cases_per_100000':'cum_case_perht'}, inplace=True)","4be7e2e1":"covid_data_all.columns.sort_values()","a355dc63":"covid_data_all.head()","67cbd5dc":"covid_data_all.tail()","d1bebada":"covid_data_all.describe()","52cdb58f":"covid_data_all.shape","431059a1":"covid_data_all.info()","b74e146a":"# At least case data should be double digit\ncovid_cases=covid_data_all[covid_data_all.cases >=10].copy() ","ca998aab":"#Replacing all underscores with a space (country names changed) \ncovid_cases.replace(r'_', ' ', regex=True, inplace = True)","ff8e995a":"covid_cases","85d1063b":"# Group data by country and add sum and count of covid-19 cases\ncovid_cases_country_count=covid_cases.groupby(['country'], as_index=False)['cases'].agg(['sum','count'])","e446d0a5":"covid_cases_country_count","f7862295":"# In the chi-square test, it is required that the expected frequency of each cell is at least 5. Thus, minimum n is 109\ncovid_cases_country_count=covid_cases_country_count[covid_cases_country_count['count']>=109].copy() ","5d8ba660":"covid_cases_country_count","b5ffaa77":"# Make country names list\ncovid_cases_country_list=covid_cases_country_count.index.values.tolist()","7bfb0537":"covid_cases_country_list","29dad1f4":"def benford_first_digit(country):\n    \n    covid_cases_test=covid_cases[covid_cases['country']==country].copy()        \n    data=list(covid_cases_test.cases)\n\n    for i in range(len(data)):\n        while data[i]>=10:\n            data[i]=data[i]\/10\n\n    first_digits=[int(x) for x in sorted(data)]\n    unique=(set(first_digits))\n    data_count=[]\n    digits = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n              \n    for i in digits:\n        count=first_digits.count(i)\n        data_count.append(count)\n           \n    total_count=sum(data_count)\n    data_percentage=[(i\/total_count)*100 for i in data_count]\n    benford = [30.103, 17.6091, 12.4939, 9.691, 7.91812, 6.69468, 5.79919, 5.11525, 4.57575]\n    expected = [(i * total_count \/ 100) for i in benford]\n    chi_square_index = [0, 1, 2, 3, 4, 5, 6, 7, 8]\n    chi_square = [((data_count[i]-expected[i])**2)\/expected[i] for i in chi_square_index]\n    chi_square_sum = sum(chi_square)\n                \n    return  chi_square_sum","932a49e1":"benford_covid_cases_results = []\nfor i in covid_cases_country_list:\n    if benford_first_digit(i)>=145:\n        conformity = \"(g) Severe Non-Conformity\"\n    elif benford_first_digit(i)>=117:\n        conformity = \"(f) Very High Non-Conformity\"\n    elif benford_first_digit(i)>=89:\n        conformity = \"(e) High Non-Conformity\"    \n    elif benford_first_digit(i)>=61:\n        conformity = \"(d) Moderate Non-Conformity\" \n    elif benford_first_digit(i)>=33:\n        conformity = \"(c) Low Non-Conformity\"\n    elif benford_first_digit(i)>=15.507:\n        conformity = \"(b) Minor Non-Conformity\" \n    else:\n        conformity = \"(a) Conformity\"    \n    benford_covid_cases_results.append((i, benford_first_digit(i),\"15.507\", conformity))                                    \nbenford_covid_cases_results=pd.DataFrame(benford_covid_cases_results, columns=('country', 'sum_of_chi_square', 'critical_chi_square', 'conformity'))\nbenford_covid_cases_results","5d839134":"# Here we add covid-19 case sum data.\nbenford_covid_cases_results=pd.merge(benford_covid_cases_results, covid_cases_country_count[['sum', 'count']], on='country', how='left')","e1c5480b":"# Here we change column names.\nbenford_covid_cases_results.rename(columns={'sum':'sum_of_covid_19_cases','count':'count_of_covid_19_reporting_dates'}, inplace=True)","0eab9d8d":"# Sorting data by country name\nbenford_covid_cases_results","ab30b8e4":"# Sorting data by total covid-19 cases\nbenford_covid_cases_results.sort_values(by='sum_of_covid_19_cases', ascending=False, ignore_index=True)","e58b53ae":"# Sorting data by sum of chi-squares\nbenford_covid_cases_results.sort_values(by='sum_of_chi_square', ascending=False, ignore_index=True)","1c7324ba":"# Sorting data by conformity and total covid-19 cases\nbenford_covid_cases_results.sort_values(['conformity','sum_of_covid_19_cases'], ascending=[True, False], ignore_index=True)","8d558e91":"url = 'https:\/\/raw.githubusercontent.com\/python-visualization\/folium\/master\/examples\/data'\nworld_geo = f'{url}\/world-countries.json'\n\n# create a plain world map\nworld_map = folium.Map(location=[0, 0], zoom_start=2, tiles='Mapbox Bright')","4d9a2b3c":"# generate choropleth map using the sum of chi-square of each country.\nworld_map.choropleth(\n    geo_data=world_geo,\n    data=benford_covid_cases_results,\n    columns=['country', 'sum_of_chi_square'],\n    key_on='feature.properties.name',\n    fill_color='YlOrRd', \n    fill_opacity=0.9, \n    line_opacity=0.2,\n    nan_fill_color='white',\n    name=\"COUNTRY BASED BENFORDS FIRST DIGIT ANALYSIS OF COVID-19 CASES DATASET\"\n)\n\n# display map\nworld_map","4b90f14a":"for i in covid_cases_country_list:\n    \n    covid_cases_test=covid_cases[covid_cases['country']==i].copy()\n    \n    # Country based Benford's Law first digit analysis and \n    # assessing conformity with Chi-Square, Kolmogorov-Smirnov, Mean Absolute Deviation (MAD) and Z Scores\n    print(\" #################  COUNTRY: \", i ,\" #################\")\n    print(\" #################  BENFORD'S FIRST DIGIT ANALYSIS OF COVID-19 CASES DATASET AND CONFORMITY TESTS: #################\")\n    first_digit_cases = bf.first_digits(covid_cases_test.cases, decimals=8, digs=1, show_plot=True,  MAD=True, MSE=True, confidence=95, KS=True, chi_square=True)\n    \n    # Country based Benford's Law first two digits analysis and \n    # assessing conformity with Chi-Square, Kolmogorov-Smirnov, Mean Absolute Deviation (MAD) and Z Scores\n    print(\"\\n\")\n    print(\" #################  COUNTRY: \", i ,\" #################\")\n    print(\" #################  BENFORD'S FIRST TWO DIGIT ANALYSIS OF COVID-19 CASES DATASET AND CONFORMITY TESTS: #################\")\n    first_two_digit_cases = bf.first_digits(covid_cases_test.cases, decimals=8, digs=2, show_plot=True,  MAD=True, MSE=True, confidence=95, KS=True, chi_square=True)\n    \n    # Country based Benford's Law second digits analysis and \n    # assessing conformity with Chi-Square, Kolmogorov-Smirnov, Mean Absolute Deviation (MAD) and Z Scores\n    print(\"\\n\")\n    print(\" #################  COUNTRY: \", i ,\" #################\")\n    print(\" #################  BENFORD'S SECOND DIGIT ANALYSIS OF COVID-19 CASES DATASET AND CONFORMITY TESTS: #################\")\n    second_digit_cases = bf.second_digit(covid_cases_test.cases, decimals=8, show_plot=True,  MAD=True, MSE=True, confidence=95, KS=True, chi_square=True)\n    \n    print(\" ____________________________________________________________________________________________________________________\")\n    print(\"\\n\",\"\\n\",\"\\n\")","eebce624":"# 5) Filter the data","26106001":"# 1) Libraries","7ca74ea5":"# 4) Explore the data","5e163cee":"## 1.1) Installation","4b2a8e5f":"Thank you to all the first responders and healthcare workers who are dedicated to helping each and every one of us.","1f8defac":"# 9) Country Based Benford's Law First Digit, First Two Digits, and Second Digits Analysis of COVID-19 Cases: Assessing conformity with Chi-Square, Kolmogorov-Smirnov, Mean Absolute Deviation (MAD) and Z Scores","e6218962":"# Abstract","19be483a":"P r i o r  A n a l y t i c s, A r i s t o t l e","06c7c252":"# COUNTRY BASED COVID-19 CASES: BENFORD'S LAW ANALYSIS of FIRST DIGITS, FIRST TWO DIGITS, AND SECOND DIGITS\n","3b50053b":"## 1.2) Import libraries","68fa4c5e":"# 2) Read the data\n","0b742313":"# 6) Benford's Law First Digit Chi-Square Test Function","31850da4":"# Acknowledgements","ec4e7d7a":"# Thank you","f1c6ea2f":"# 8) Country Based Benford's Law First Digits Analysis of COVID-19 Cases: World Map of Chi-Squares","aac9c98a":"# 7) Benford's Law First Digit Chi-Square Test Results","bfd0f9b6":"# Benford's Law (also known as Newcomb - Benford's Law) is a numerical data analysis of the frequency distribution of leading digits in many datasets. Benford's law predicts the distribution of first digits, second digits, third digits, combinations of digits, etc. Benford's law is applied, among other applications, for the identification of manipulated data, the detection of fraud and the identification of false data. This study attempts to analyze country based COVID-19 data and to find out the level of compliance of data with the Benford's Law. European Centre for Disease Prevention and Control data on the geographic distribution of COVID-19 cases worldwide is used as a dynamic data source. \n\n*Note: The data on the coronavirus pandemic is updated daily. Last update of this analysis: March 7, 2021 *\n\n","e601d27e":"# 3) Rename the columns"}}