{"cell_type":{"d892f736":"code","b2fc1172":"code","6725068d":"code","67f9e929":"code","e28ecce7":"code","8b6984f3":"code","24f9c6e8":"code","928ce5df":"code","932fc1b8":"code","b4832cff":"code","dec5e026":"code","7d755cae":"code","16bf3530":"code","5510e5ac":"code","ff9f9f0f":"code","39d585ce":"code","dffe7d6a":"code","63b6a316":"code","dd8297f8":"code","eaf5a3f1":"code","e946289b":"code","dc8b3650":"code","7d870011":"code","77340f23":"code","9ab05621":"code","b3b05f38":"code","79197151":"code","3eea704e":"markdown","d65d1c9e":"markdown","a3c32334":"markdown","78fc4d36":"markdown","102f3078":"markdown","a1f6cfb0":"markdown","adbf4bec":"markdown","fbdf04ed":"markdown","2f3dd405":"markdown","82f52e3a":"markdown","ae2fc2e3":"markdown","25401507":"markdown","6dd3e79a":"markdown","a9c026c3":"markdown","6e76b32a":"markdown","319c9e36":"markdown","660da22e":"markdown","af60bdf6":"markdown"},"source":{"d892f736":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b2fc1172":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot","6725068d":"df = pd.read_csv('\/kaggle\/input\/all-space-missions-from-1957\/Space_Corrected.csv')","67f9e929":"df.shape","e28ecce7":"df.info()","8b6984f3":"df.sample(5)","24f9c6e8":"df = df.iloc[:,2:len(df.columns)]\n","928ce5df":"pd.set_option('display.max_columns', None)\ndf.sample(5)","932fc1b8":"#Find missing values\ndf.isnull().sum()","b4832cff":"import missingno as mno\nprint(df.shape)\nmno.matrix(df)","dec5e026":"missing=pd.DataFrame(df.isna().sum().reset_index())\nmissing.columns=['Variables','Missing']\nmissing['Percentage']=(missing['Missing']\/df.shape[0])*100\nmissing","7d755cae":"print(df[' Rocket'].mode())\n#The mode value is 450$M\ndf[' Rocket']=df[' Rocket'].fillna('450.0')","16bf3530":"stats=pd.DataFrame(df.describe().T)\nstats","5510e5ac":"df['Country'] = df.Location.apply(lambda x:x.split(',')[-1])\ndf.sample(5)","ff9f9f0f":"#Top 10 countries\ncountry_df = df.Country.value_counts().head(10)","39d585ce":"sns.set_theme(style=\"darkgrid\")\nsns.barplot(x=country_df.values, y=country_df.index)","dffe7d6a":"sns.countplot(x='Status Rocket', data=df)","63b6a316":"df['Status Rocket'].value_counts()","dd8297f8":"df.nunique()","eaf5a3f1":"sns.countplot(x='Status Mission', data=df)","e946289b":"# Histogram \ndf['Company Name'].value_counts().head(10)","dc8b3650":"ussr=pd.DataFrame(df[df['Company Name']=='RVSN USSR'][['Status Rocket','Status Mission']].value_counts())\nussr.columns=['Count']\nussr['Percentage']=(ussr['Count']\/df[df['Company Name']=='RVSN USSR'].shape[0])*100\nussr","7d870011":"df_active = df[df['Status Rocket'] == \"StatusActive\"]\ndf_active = df_active.groupby('Company Name').count()['Detail'].sort_values(ascending=False).reset_index()\nlen(df_active)\n\ncompanies = df.groupby(['Company Name'])['Detail'].count().sort_values(ascending=False).reset_index()\nlen(companies)\n\ntop_20 = companies[1:40]\ncmp = df.groupby(['Company Name','Status Rocket']).count()['Detail'].reset_index()\ncmp = cmp[cmp['Company Name'].isin(top_20['Company Name'])]\nactive = cmp[cmp['Status Rocket']==\"StatusActive\"].sort_values('Detail')\nretired = cmp[cmp['Status Rocket']!=\"StatusActive\"]\nfig = go.Figure()\nfig.add_bar(y=active['Detail'],x=active['Company Name'],name='Status Active')\nfig.add_bar(y=retired['Detail'],x=retired['Company Name'],name='Status Retired')\nfig.update_layout(barmode=\"stack\",title=\"Companies and Mission Status\",yaxis_title=\"No of Missions\")\nfig.show()","77340f23":"df['day'] = df['Datum'].apply(lambda x:x.split()[0])\ndf['Month']=df['Datum'].apply(lambda x:x.split()[1])\ndf['year'] = df['Datum'].apply(lambda x:x.split()[3])\ndf.head()","9ab05621":"fig, ax = plt.subplots(figsize=(16,6))\nax.set_title('No. of Launches by Month', fontsize=20)\norder = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nsns.countplot(x='Month', data=df, order=order)\nax.set_xlabel('Month', fontsize=10)\nax.set_ylabel('No. of Launches', fontsize=10)\nplt.show()","b3b05f38":"days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\ndf_days = df.groupby('day').count()['Detail'].reset_index()\n\ndf_days['day'] = pd.Categorical(df_days['day'], categories=days, ordered=True)\ndf_days = df_days.sort_values('day')\nplt.figure(figsize=(11,4))\nsns.barplot(x='day', y='Detail', data=df_days)\nplt.ylabel('No of launches')\nb=plt.title(' Day vs No of launches')","79197151":"date= df.groupby('year').count()['Detail'].reset_index()\nplt.figure(figsize=(16,6))\nb=sns.barplot(x='year', y='Detail', data=date)\nplt.ylabel('no of launches')\nplt.title(' No of launches per year')\n_=b.set_xticklabels(b.get_xticklabels(), rotation=90, horizontalalignment='right')","3eea704e":"# Interesting that 90.8% of RVSN USSR company were successful, but all are retired","d65d1c9e":"# **Explore which company has high success rate**","a3c32334":"# **Let us create country column from the location column **","78fc4d36":"# **Visualising the Success Rates**","102f3078":"# **Top 10 countries chart**","a1f6cfb0":"# Monthwise Space Launches","adbf4bec":"# **Take-aways**\n1. Success Rate is more than 90%\n2. Negligible or None Prelaunch Failure\n ","fbdf04ed":"# **Quick look into the columns and datatypes**","2f3dd405":"# Yearwise Space Launches","82f52e3a":"1. Russia and USA launched almost same number of space vehicles\n","ae2fc2e3":"# **We observe from above result that unnamed columns are redundant, so we will remove them**","25401507":"# **Time to convert date datatype from object to datetime and create more features out of it**","6dd3e79a":"# **Less number of Rockets are active**","a9c026c3":"# Rocket column has many missing values, as the datatype is string, let's replace it with mode value","6e76b32a":"# Daywise Space Launches","319c9e36":"# other companies status","660da22e":"# Look at 5 random rows from the dataset","af60bdf6":"# Statistics"}}