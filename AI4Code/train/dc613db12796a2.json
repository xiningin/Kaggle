{"cell_type":{"41916d2d":"code","c70b3408":"code","e081ba47":"code","a7b923e5":"code","21f15b27":"code","3cb88ad1":"code","4dca7c80":"code","15aff355":"code","98d307a7":"code","262d536a":"code","a49c8c1b":"code","40bb8913":"code","eb83f36b":"code","a0e42a52":"code","e3f60176":"code","335ddda0":"code","a88bd08f":"code","d4d6d18c":"code","a2024789":"code","c49f3aa2":"code","efb5034c":"code","659b4d79":"code","d8f0181b":"code","c305e036":"code","58ce0fbe":"code","bdd6592b":"code","9ae93052":"code","59fb4c26":"code","f97f87b6":"code","c3c565d5":"code","2bed19a8":"code","78925162":"code","7b05b57a":"code","ac332b86":"code","2cff5e36":"code","d3fb5012":"code","a77b7471":"code","3a06c63c":"code","af2d1e93":"markdown","90afd74d":"markdown","9f89120a":"markdown","be7fd4a5":"markdown","324425c7":"markdown","1c977ed7":"markdown","35944fa1":"markdown","aa1fd5d4":"markdown","b18a440d":"markdown","e36eda8e":"markdown","ee24e993":"markdown","39364b0b":"markdown","3219fc00":"markdown","277487ed":"markdown","014a787c":"markdown","6cb979fb":"markdown"},"source":{"41916d2d":"import pandas as pd\nimport numpy as np\nimport os","c70b3408":"list =  [\"Brazil\", \"Russia\", \"India\", \"China\", \"South Africa\"]\nplaces = pd.Series(list)\nplaces.head()","e081ba47":"places = pd.Series(list,index=[\"BR\", \"RU\", \"IN\", \"CH\", \"SA\"])\nplaces.head()\n# places.index = [\"BR\", \"RU\", \"IN\", \"CH\", \"SA\"]","a7b923e5":"dict = {\"country\": [\"Brazil\", \"Russia\", \"India\", \"China\", \"South Africa\"],\n       \"capital\": [\"Brasilia\", \"Moscow\", \"New Dehli\", \"Beijing\", \"Pretoria\"],\n       \"area\": [8.516, 17.10, 3.286, 9.597, 1.221],\n       \"population\": [200.4, 143.5, 1252, 1357, 52.98] }\n\ninfo = pd.DataFrame(dict) #change index\ninfo.head()","21f15b27":"df_from_series = pd.DataFrame(places,columns=[\"a\"]) #df_from_series.columns\ndf_from_series.head()","3cb88ad1":"print(os.listdir(\"..\/input\"))","4dca7c80":"\ndf = pd.read_csv(\"..\/input\/pokemon.csv\") # header=None\ndf.head(10)","15aff355":"df.shape","98d307a7":"df.columns","262d536a":"df[['Name','Speed']]","a49c8c1b":"del(df['Form'])","40bb8913":"df.head()","eb83f36b":"#slicing\ndf[0:4]","a0e42a52":"#loc vs iloc\ndf.iloc[:2,:4]","e3f60176":"df.loc[:2]","335ddda0":"df.T","a88bd08f":"df.axes","d4d6d18c":"df.dtypes","a2024789":"df.empty","c49f3aa2":"df.ndim","efb5034c":"df.shape","659b4d79":"df.size","d8f0181b":"df.values","c305e036":"df.head()","58ce0fbe":"df.tail(100)","bdd6592b":"df.sum()","9ae93052":"df.mean()","59fb4c26":"df.corr()","f97f87b6":"df.count()","c3c565d5":"df.max()","2bed19a8":"df.min()","78925162":"df.median()","7b05b57a":"df.std()","ac332b86":"df.describe() # 25%,50%,35%  min+(max-min)*percentile ","2cff5e36":"df = pd.DataFrame([0,1,2,3],index = ['a','b','c','d'])\ndf","d3fb5012":"df.reindex(columns = [0,1,2,3])","a77b7471":"df.reindex(columns = [0,1,2,3],fill_value = \"ml class\")","3a06c63c":"df.reindex(index = ['a','c','d'])","af2d1e93":"**A Cheat Sheet For Pandas**\n__ https:\/\/s3.amazonaws.com\/assets.datacamp.com\/blog_assets\/PandasPythonForDataScience.pdf __","90afd74d":"# <font color=green>Pandas <\/font>","9f89120a":"### <font color=blue> - Panel <\/font> : <font color=green> Panel is a three-dimensional data structurel <\/font>\n\n","be7fd4a5":"###  <font color=blue>- Pandas is an open-source Python Library providing high-performance data manipulation and analysis tool using   its powerful data structures. <\/font> \n\n### <font color=blue> - We can use Pandas for different tasks like processing , analysis , manipilation of data etc. <\/font> \n\n### <font color=blue>- Python with Pandas is used in a wide range of fields including academic and commercial domains including finance, economics, Statistics, analytics, etc.<\/font> \n\n### <font color=blue>- Derived from the word panel data<\/font> \n","324425c7":"### Empty : return true if dataset is empty else false\n","1c977ed7":"### <font color=blue> - DataFrame <\/font> : <font color=green> DataFrame is a 2-dimensional labeled data structure with columns of potentially different types. You can think of it like a spreadsheet or SQL table, or a dict of Series objects <\/font>\n\n### <font color=purple>- DataFrame(data=None, index=None, columns=None, dtype=None) <\/font>\n\n### <font color=blue> - DataFrame accepts many different kinds of input<\/font>\n#### <font color=green>lists, dicts<\/font>\n#### <font color=green>ndarray<\/font>\n#### <font color=green>A Series<\/font>\n#### <font color=green>Another DataFrame<\/font>","35944fa1":"### axes :  To get x axis and y axis names or range i.e get rows and columns names or range\n","aa1fd5d4":"### values : returns the values of dataset as an array\n","b18a440d":"### dtypes : To get the data type of every column\n","e36eda8e":"## <font color=red> _Pandas Datastructures_ <\/font>\n\n### <font color=blue> - Series <\/font> : <font color=green> It is a one-dimensional labeled array capable of holding any data type (integers, strings, floating point numbers, Python objects, etc.). It is size immutable<\/font>\n","ee24e993":"### ndim : return number of dimentions dataset has\n","39364b0b":"### shape : returns a tuple containing number of rows and columns\n","3219fc00":"### head : returns top 5 values from dataset  -> try using head( any nymber less than rows )\n","277487ed":"### size : returns total size of dataset\n ","014a787c":"### Transpose : To change columns to rows and rows to columns","6cb979fb":"### tail: return  last 5 rows of the dataset"}}