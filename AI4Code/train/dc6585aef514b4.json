{"cell_type":{"bff62294":"code","dd52e765":"code","452ec641":"code","3b0c43fd":"code","f02f6f1e":"code","9a1a5449":"code","88e0635e":"code","74f1e324":"code","640762c0":"code","b5ef9451":"code","97cf6fb0":"code","2a04f62c":"code","7a21f52a":"code","3d6804d3":"code","b0fe0b0f":"code","336eaafd":"code","3bd9b962":"code","ade88125":"code","75f5d8d9":"code","67dd0616":"code","bca8ffd7":"code","342308c2":"code","281992f2":"code","a724d6d4":"code","5dc3ef27":"code","4288741d":"code","c2463cfb":"code","333c82db":"code","bbcc4b3c":"code","56c6f31b":"code","16e2ec32":"code","4016740d":"code","2e80af00":"code","5baa7086":"code","ae7d30bc":"code","831918f4":"code","d87563b4":"code","3b4c88af":"code","448cd445":"code","4b84b390":"code","16d8bf9b":"code","db18f59e":"code","de65b31f":"code","cad8bda9":"code","a7441e7a":"code","3115d8ec":"markdown"},"source":{"bff62294":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dd52e765":"import tensorflow as tf","452ec641":"from gensim.models import FastText","3b0c43fd":"!nvidia-smi","f02f6f1e":"df = pd.read_csv(\"\/kaggle\/input\/commonlitreadabilityprize\/train.csv\")","9a1a5449":"df.head()","88e0635e":"df = df.drop([\"standard_error\"],axis=1)","74f1e324":"df","640762c0":"import random","b5ef9451":"import tensorflow as tf","97cf6fb0":"ind = random.randint(1,2834-5)\n\ndf.iloc[ind].target,df.iloc[ind].excerpt","2a04f62c":"df.describe()","7a21f52a":"def clean_text(text):\n    text = re.sub('\\n', '', text)\n    return text","3d6804d3":"import re\nimport string","b0fe0b0f":"df[\"excerpt\"] = df[\"excerpt\"].apply(lambda text: clean_text(text))","336eaafd":"from tensorflow.keras.layers.experimental.preprocessing import TextVectorization","3bd9b962":"df[\"length\"] = df[\"excerpt\"].apply(lambda text: len(text.split()))","ade88125":"df.describe()","75f5d8d9":"max_length = 210","67dd0616":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(df[\"excerpt\"],df[\"target\"],test_size=0.2,random_state=42)","bca8ffd7":"import tensorflow_hub as hub\n\nembed = hub.load(\"\/kaggle\/input\/uselarge\/\")","342308c2":"embedding = hub.KerasLayer(embed,trainable=False)","281992f2":"from tensorflow.keras import layers\nfrom tensorflow import keras","a724d6d4":"inputs = layers.Input(shape=[],dtype=tf.string)\nx = embedding(inputs)\nx = layers.Dropout(0.2)(x)\nx = layers.Dense(128,activation=\"relu\")(x)\nx = layers.Dense(128,activation=\"relu\")(x)\noutputs = layers.Dense(1)(x)","5dc3ef27":"model_6 = tf.keras.Model(inputs,outputs)","4288741d":"model_6.summary()","c2463cfb":"model_6.compile(loss=tf.keras.losses.mse,optimizer=tf.keras.optimizers.Adam(),metrics=tf.keras.metrics.RootMeanSquaredError())","333c82db":"import datetime","bbcc4b3c":"def create_tensorboard_callback(dir_name,experiment_name):\n  \"\"\"\n  Creates a TensorBoard callback instand to store log files.\n  Stores log files with the filepath:\n    \"dir_name\/experiment_name\/current_datetime\/\"\n  Args:\n    dir_name: target directory to store TensorBoard log files\n    experiment_name: name of experiment directory (e.g. efficientnet_model_1)\n  \"\"\"\n  log_dir = dir_name + \"\/\" + experiment_name + \"\/\" + datetime.datetime.now().strftime(\"%Y%m%d-%H%M%S\")\n  tensorboard_callback = tf.keras.callbacks.TensorBoard(\n      log_dir=log_dir\n  )\n  print(f\"Saving TensorBoard log files to: {log_dir}\")\n  return tensorboard_callback","56c6f31b":"model_checkpoint = tf.keras.callbacks.ModelCheckpoint(filepath=\"checkpoint\/check.ckpt\",monitor=\"val_root_mean_squared_error\",save_best_only=True,save_weights_only=True)","16e2ec32":"model_6.fit(X_train,y_train,epochs=5,validation_data=(X_test,y_test),callbacks=[create_tensorboard_callback(\"CommonLit\",\"USE-Dense-FineTuneAll\"),model_checkpoint])","4016740d":" model_7 = model_6","2e80af00":"embedding.trainable=True\nfor layer in embedding.layers[:-10]:\n    layer.trainable = False","5baa7086":"embedding.layers","ae7d30bc":"ind = random.randint(1,2834-5)\ndf.iloc[ind:ind+5]","831918f4":"df.iloc[0].excerpt","d87563b4":"df_test = pd.read_csv(\"\/kaggle\/input\/commonlitreadabilityprize\/test.csv\")","3b4c88af":"df_test","448cd445":"preds = model_6.predict(df_test[\"excerpt\"])","4b84b390":"preds","16d8bf9b":"submissions = pd.read_csv(\"\/kaggle\/input\/commonlitreadabilityprize\/sample_submission.csv\")","db18f59e":"submissions","de65b31f":"submissions[\"target\"] = preds","cad8bda9":"submissions","a7441e7a":"submissions.to_csv(\"\/kaggle\/working\/submission.csv\",index=False)","3115d8ec":"### embedding = tf.keras.layers.Embedding(input_dim=30000,output_dim=128,input_length=max_length)"}}