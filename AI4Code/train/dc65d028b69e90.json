{"cell_type":{"c33573d6":"code","c89256e2":"code","e9de7487":"code","58e02e67":"code","b55b8432":"code","58cd9e8e":"code","73bc2489":"code","b7513007":"code","38fda624":"code","6215a4ad":"code","4fa52c5d":"code","652ce18d":"code","429cb886":"code","c77d2960":"code","04904b0f":"code","532f20f1":"code","13b1a001":"code","7d1e9619":"code","c6c9830c":"code","d3b39f92":"code","cc089627":"code","548a4427":"code","b6debdef":"code","09e24d96":"code","ad4b1eed":"code","3e2bd222":"code","9eb317af":"code","cfc02228":"code","d0254774":"code","90d8400e":"code","b924edc6":"code","0468349e":"code","46399c91":"markdown","a38da236":"markdown","d9a888d6":"markdown","f3e7bcaf":"markdown","592f1858":"markdown","f2049f8b":"markdown","84dd4115":"markdown","16be6586":"markdown","b297e152":"markdown"},"source":{"c33573d6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c89256e2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime","e9de7487":"data = pd.read_csv('\/kaggle\/input\/top-video-games-19952021-metacritic\/all_games.csv')\ndata","58e02e67":"data.shape","b55b8432":"data.info()","58cd9e8e":"data[data.duplicated()]","73bc2489":"fig, ax = plt.subplots(figsize=(10,10))\nsns.heatmap(data.isnull())","b7513007":"data[data['summary'].isnull()]","38fda624":"data = data.drop('summary', axis=1)","6215a4ad":"data","4fa52c5d":"data = data.drop(data[data['user_review']=='tbd'].index)","652ce18d":"data","429cb886":"data[data['meta_score']=='tbd']","c77d2960":"top_meta_score = data.sort_values(['meta_score'], ascending = False)\ntop_meta_score[['name','meta_score']][:10]","04904b0f":"sns.set(style='darkgrid', color_codes=True)\n\nfig, ax = plt.subplots(figsize=(10,5))\nsns.barplot(x=top_meta_score['meta_score'][:10], y=top_meta_score['name'][:10], orient = 'h', palette='flare')\nplt.xlim(95,100)\nplt.title('Top 10 Games by Meta Score', fontsize=16)\nplt.xlabel('Meta Score', fontsize=14)\nplt.ylabel('Name', fontsize=14)","532f20f1":"fig, ax = plt.subplots(figsize=(10,5))\nplt.hist(x=data['meta_score'], bins=33, facecolor='#5bd487', edgecolor='#139c44')\nplt.title('Distribution of Meta Scores', fontsize=16)\nplt.xlabel('Distribution', fontsize=14)\nplt.ylabel('Frequency', fontsize=14)\nplt.show()","13b1a001":"data['user_review'] = data['user_review'].astype(np.float)","7d1e9619":"data.dtypes","c6c9830c":"top_user_score = data.sort_values(['user_review'], ascending=False)\ntop_user_score[['name','user_review']][:10]","d3b39f92":"fig, ax = plt.subplots(figsize=(10,5))\nsns.barplot(x=top_user_score['user_review'][:10], y=top_user_score['name'][:10], orient='h', palette='crest')\nplt.xlim(9.5, 9.8)\nplt.title('Top 10 Games by User Review', fontsize=16)\nplt.xlabel('User Review Score', fontsize=14)\nplt.ylabel('Name', fontsize=14)","cc089627":"fig, ax = plt.subplots(figsize=(10,5))\nplt.hist(x=data['user_review'], bins=33, facecolor='#5bd487', edgecolor='#139c44')\nplt.title('Distribution of User Reviews', fontsize=16)\nplt.xlabel('Distribution', fontsize=14)\nplt.ylabel('Frequency', fontsize=14)\nplt.show()","548a4427":"data['platform'].value_counts()","b6debdef":"fig, ax = plt.subplots(figsize=(15,10))\nsns.countplot(x=data['platform'], order=data['platform'].value_counts().index, palette='pastel')\nplt.xticks(rotation=90)\nplt.title('Number of Games by Platform',fontsize=16)\nplt.xlabel('Platform',fontsize=14)\nplt.ylabel('Count',fontsize=14)\n\nfor p in ax.patches:\n    x = p.get_x() + p.get_width() - 0.7\n    y = p.get_y() + p.get_height() + 40\n    value = '{}'.format(p.get_height())\n    ax.text(x, y, value, fontsize=12)","09e24d96":"data['release_year'] = pd.DatetimeIndex(data['release_date']).year","ad4b1eed":"data","3e2bd222":"data['release_year'].value_counts()","9eb317af":"fig, ax = plt.subplots(figsize=(15,10))\nsns.countplot(y=data['release_year'], order=data['release_year'].value_counts().index, orient='h', palette='pastel')\nplt.title('Number of Games by Year', fontsize=16)\nplt.xlabel('Count', fontsize=14)\nplt.ylabel('Release Year', fontsize=14)\n\nfor p in ax.patches:\n    x = p.get_x() + p.get_width() + 2\n    y = p.get_y() + p.get_height() - 0.2\n    value = '{}'.format(p.get_width())\n    ax.text(x, y, value, fontsize=12)","cfc02228":"data['release_month'] = pd.DatetimeIndex(data['release_date']).month_name()","d0254774":"data","90d8400e":"from collections import Counter\ncount = Counter(data['release_month'])\ncount = count.most_common()\ncount","b924edc6":"by_month = pd.DataFrame(count, columns=['Month', 'Count'])\nby_month","0468349e":"fig, ax = plt.subplots(figsize=(14,5))\nsns.barplot(x=by_month['Month'], y=by_month['Count'], palette='pastel')\nplt.title('Count of Games by Release Month',fontsize=16)\nplt.xlabel('Release Month',fontsize=14)\nplt.ylabel('Count',fontsize=14)\n\nfor p in ax.patches:\n    x = p.get_x() + p.get_width() - 0.5\n    y = p.get_y() + p.get_height() \/ 2\n    value = '{:.0f}'.format(p.get_height())\n    ax.text(x, y, value, fontsize=22, fontweight='bold', rotation=90, color='gray')","46399c91":"## Exploring the data","a38da236":"## Count by Month","d9a888d6":"## Top by user_review","f3e7bcaf":"## Reading in the dataset","592f1858":"## Top by meta_score","f2049f8b":"### Distribution of User Reviews","84dd4115":"### Distribution of Meta Scores","16be6586":"## Count by Year","b297e152":"## Count by platform"}}