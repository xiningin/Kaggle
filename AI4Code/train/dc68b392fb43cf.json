{"cell_type":{"3c1e8889":"code","91ee6f65":"code","2a2e2080":"code","58de9a3a":"code","f90fc448":"code","e7e77cbf":"code","00e68a15":"code","92037dab":"code","39b02670":"code","9e82aeec":"code","8cf4ad30":"code","a6ef1cbc":"code","b4e9171f":"code","22e24a37":"code","cbbf9cbd":"code","3b9b4d39":"code","4a35001f":"code","2ea556f5":"code","c51c0b94":"markdown","de445545":"markdown","7881b4cc":"markdown","dbf214f8":"markdown","7ccd56a0":"markdown","c657b9c7":"markdown","562af017":"markdown","d1fa3265":"markdown","7fe47494":"markdown","33e7c551":"markdown","fab7a9c3":"markdown","5c16fb5d":"markdown","14544436":"markdown","c80026a9":"markdown","362822a3":"markdown","24528ea1":"markdown"},"source":{"3c1e8889":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np \n\nimport pandas as pd \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import metrics\n\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n\n%matplotlib inline","91ee6f65":"df=pd.read_csv('..\/input\/iris\/Iris.csv')","2a2e2080":"df.head()","58de9a3a":"image=plt.imread('..\/input\/irisimage\/iris-machinelearning.png')\nplt.figure(figsize=(15,10))\nplt.imshow(image)\nplt.axis('off')","f90fc448":"df=df.drop('Id',axis=1)","e7e77cbf":"df.describe()","00e68a15":"from pandas.tools.plotting import parallel_coordinates\nplt.figure(figsize=(12,8))\nparallel_coordinates(df, 'Species', colormap=plt.get_cmap(\"Set3\"))\nplt.xlabel(\"Features of data set\")\nplt.ylabel(\"cm\")\nplt.show()\n","92037dab":"sns.pairplot(df,hue='Species')","39b02670":"plt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.swarmplot(x='Species',y='PetalLengthCm',data=df)\nplt.subplot(2,2,2)\nsns.swarmplot(x='Species',y='PetalWidthCm',data=df)\nplt.subplot(2,2,3)\nsns.swarmplot(x='Species',y='SepalLengthCm',data=df)\nplt.subplot(2,2,4)\nsns.swarmplot(x='Species',y='SepalWidthCm',data=df)\n","9e82aeec":"plt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='PetalLengthCm',data=df)\nplt.subplot(2,2,2)\nsns.violinplot(x='Species',y='PetalWidthCm',data=df)\nplt.subplot(2,2,3)\nsns.violinplot(x='Species',y='SepalLengthCm',data=df)\nplt.subplot(2,2,4)\nsns.violinplot(x='Species',y='SepalWidthCm',data=df)","8cf4ad30":"plt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.boxplot(x='Species',y='PetalLengthCm',data=df)\nplt.subplot(2,2,2)\nsns.boxplot(x='Species',y='PetalWidthCm',data=df)\nplt.subplot(2,2,3)\nsns.boxplot(x='Species',y='SepalLengthCm',data=df)\nplt.subplot(2,2,4)\nsns.boxplot(x='Species',y='SepalWidthCm',data=df)\n","a6ef1cbc":"x=df.iloc[:,:-1].values\ny=df.iloc[:,-1].values\n\nx=(x-x.mean(0))\/x.std(0)\nx_train, x_test, y_train, y_test = train_test_split( x, y, test_size=0.33, random_state=42)","b4e9171f":"from sklearn.preprocessing import StandardScaler,LabelEncoder\n\nsc = StandardScaler()\nsc.fit(x_train)\nx_train = sc.transform(x_train)\nx_test = sc.transform(x_test)\n\nlb=LabelEncoder()\ny_train=lb.fit_transform(y_train)\ny_test=lb.fit_transform(y_test)\n","22e24a37":"model = LogisticRegression()\nmodel.fit(x_train,y_train)\nprediction=model.predict(x_test)\nprint('Accuracy on iris dataset using Logistic Regression is',metrics.accuracy_score(prediction,y_test))","cbbf9cbd":"model = SVC() \nmodel.fit(x_train,y_train) \nprediction=model.predict(x_test)\nprint('The accuracy of the SVM is:',metrics.accuracy_score(prediction,y_test))","3b9b4d39":"model=DecisionTreeClassifier()\nmodel.fit(x_train,y_train)\nprediction=model.predict(x_test)\nprint('The accuracy of the Decision Tree is',metrics.accuracy_score(prediction,y_test))","4a35001f":"# finding the value of k when the  accuray of knn would be highest\nx_range=[]\ny_range=[]\nfor i in range(1,20):\n    model=KNeighborsClassifier(n_neighbors=i) \n    model.fit(x_train,y_train)\n    prediction=model.predict(x_test)\n    y_range.append((metrics.accuracy_score(prediction,y_test)))\n    x_range.append(i)\nplt.figure(figsize=(8,5))    \nplt.plot(x_range, y_range)\nplt.xlabel('values of n_neighbors')\nplt.ylabel('Accuracy')\nplt.show()","2ea556f5":"model=KNeighborsClassifier(n_neighbors=5)\nmodel.fit(x_train,y_train)\nprediction=model.predict(x_test)\nprint('The accuracy of the KNN is',metrics.accuracy_score(prediction,y_test))","c51c0b94":"### Splitting the data into traning set and test set","de445545":"I hope my notebook will give you  better understanding on iris dataset \n**Please upvote ** it if you find it usefull","7881b4cc":"## Visualizing length and width of different species using swarm plot","dbf214f8":"## Decision Tree","7ccd56a0":"### Images of  3 different speicies of iris datset","c657b9c7":"### loading iris dataset","562af017":"## Some more plots for better EDA","d1fa3265":"## Support Vector Machine","7fe47494":"## Visualizing features of Dataset","33e7c551":"## Scaling and encoding Feature Data","fab7a9c3":"## Logistic Regression","5c16fb5d":"From above plot we can see that the Accuracy is higest at value k=5 ","14544436":"# Iris dataset \n some EDA techniques on iris datset which can help you to get a better visualization on dataset \n ### please upvote you find it helpful","c80026a9":"## Pair plot ","362822a3":"### Box plots\nBox plots are important for EDA because they can handle a summary of a large amount of data. A box plot consists of the median, which is the midpoint of the range of data; the upper and lower quartiles, which represent the numbers above and below the highest and lower quarters of the data and the minimum and maximum data values","24528ea1":"## K-Nearest Neighbours"}}