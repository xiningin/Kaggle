{"cell_type":{"5d2db431":"code","54286cc8":"code","e0650df5":"code","9514f773":"code","bb0076a8":"code","4afc6cd4":"code","eefe3c3f":"code","de03d1ef":"markdown","5518f6c2":"markdown","b13e7b1c":"markdown","d197d6ec":"markdown","6b088c99":"markdown","e008377a":"markdown","c4846ed4":"markdown"},"source":{"5d2db431":"import pandas as pd\nfrom sklearn import neighbors, metrics, preprocessing, model_selection","54286cc8":"dataset = pd.read_csv('..\/input\/glass-quality-classification\/Glass_train.csv')","e0650df5":"X = dataset.iloc[:, :-1].values\nY = dataset.iloc[:,10].values","9514f773":"X_train, X_test, Y_train, Y_test = model_selection.train_test_split(X, Y, test_size=0.20)","bb0076a8":"scaler = preprocessing.RobustScaler()\nscaler.fit(X_train)\n\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)","4afc6cd4":"def knn(k, metric=\"euclidean\"):\n  knn = neighbors.KNeighborsClassifier(n_neighbors=k, metric=metric)\n  knn.fit(X_train, Y_train)\n  Y_prediction = knn.predict(X_test)\n  print(\"\\nK: \" + str(k) + \"\\nMetric: \" + metric)\n  print('\\nConfusion Matrix')\n  print(metrics.confusion_matrix(Y_test, Y_prediction))\n  print('\\nClassification Report')\n  print(metrics.classification_report(Y_test, Y_prediction))\n  #return Y_prediction","eefe3c3f":"#k, metric = input(\"Input a k value and the distance metric(ex: 5 euclidean): \").split()\nknn(5, \"manhattan\")\nknn(5, \"euclidean\")\nknn(5, \"chebyshev\")","de03d1ef":"**Ten first atributes to input and the last atribute to output***","5518f6c2":"**Results**","b13e7b1c":"**Libraries**","d197d6ec":"**Load dataset**","6b088c99":"**Preprocessing**","e008377a":"**Auxiliar Function**","c4846ed4":"**Separate 20% of the dataset to tests**"}}