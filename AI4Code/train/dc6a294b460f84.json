{"cell_type":{"a44b2100":"code","91aac765":"code","7fc814d4":"code","669a8900":"code","1a1b72e3":"code","4a9faec2":"code","afe399c3":"code","bb2d708b":"code","8f2cce5b":"code","a8e5cc68":"code","1083af85":"code","c25c7f6b":"code","4f2e8b98":"markdown","a92b7318":"markdown","91beb0d6":"markdown","ff7da2c7":"markdown","156c325b":"markdown","d7224c5c":"markdown","e8c70148":"markdown","026975ac":"markdown","049a1b18":"markdown"},"source":{"a44b2100":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.preprocessing import LabelEncoder\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\n# matplotlib and seaborn for plotting\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","91aac765":"def plot_distribution_comp(var,nrow=2):\n    \n    i = 0\n    t1 = Train_Data.loc[Train_Data['TARGET'] != 0]\n    t0 = Train_Data.loc[Train_Data['TARGET'] == 0]\n\n    sns.set_style('whitegrid')\n    plt.figure()\n    fig, ax = plt.subplots(nrow,2,figsize=(12,6*nrow))\n\n    for feature in var:\n        i += 1\n        plt.subplot(nrow,2,i)\n        sns.kdeplot(t1[feature], bw=0.5,label=\"TARGET = 1\")\n        sns.kdeplot(t0[feature], bw=0.5,label=\"TARGET = 0\")\n        plt.ylabel('Density plot', fontsize=12)\n        plt.xlabel(feature, fontsize=12)\n        locs, labels = plt.xticks()\n        plt.tick_params(axis='both', which='major', labelsize=12)\n    plt.show();\n    \ndef plot_distribution(feature,title):\n    plt.figure(figsize=(10,6))\n    plt.title(\"Distribution of %s\" % title)\n    sns.barplot(Train_Data[feature].dropna(),color=color, kde=True,bins=100)\n    plt.show()  \n    \ndef count_plot(feature,title):\n    sns.set(style=\"whitegrid\")\n    #fig.set_size_inches(30, fig.get_figheight(), forward=True)\n    #plt.figure(figsize=(20,3))\n    count_plot=Train_Data.filter(items=[feature])\n    sns.set(style=\"darkgrid\")\n    plt.title(\"Distribution of %s\" % title)\n    plt.figure(figsize=(16,6))\n    #sns.barplot(x='NAME_CONTRACT_TYPE', y='TARGET', data=Name_contact_counts.reset_index())\n    sns.countplot(x=feature, data=Train_Data)\n    plt.show()\ndef count_plot(DF,feature,title):\n    sns.set(style=\"whitegrid\")\n    count_plot=DF.filter(items=[feature])\n    plt.figure(figsize=(16,6))\n    sns.set(style=\"darkgrid\")\n    plt.title(\"Distribution of %s\" % title)\n    #sns.barplot(x='NAME_CONTRACT_TYPE', y='TARGET', data=Name_contact_counts.reset_index())\n    sns.countplot(x=feature, data=DF)\n    plt.show()\n    \ndef bar_plot(df,x_value,y_value,title):\n    sns.set(style=\"whitegrid\")\n    plt.figure(figsize=(16,6))\n    sns.set(style=\"darkgrid\")\n    plt.title(\"Distribution of %s\" % title)\n    sns.barplot(x=x_value, y=y_value,  data=df)\n    plt.show()\nprint (\"All function loaded\")","7fc814d4":"bureau=pd.read_csv(\"\/kaggle\/input\/home-credit-default-risk\/bureau.csv\")\nmapping = {'Active': 1, 'Closed': 0}\ncreadit_activestatus=bureau.replace({\"CREDIT_ACTIVE\":mapping})\nbar_plot(bureau,\"CREDIT_ACTIVE\",\"AMT_CREDIT_SUM_LIMIT\",\"ATM_CREDIT_LIMIT\")","669a8900":"popular_Credit_Type=bureau\\\n.sort_values('AMT_CREDIT_SUM_LIMIT',ascending = False)\\\n.groupby('CREDIT_TYPE',as_index=False).mean().head(5)\nbar_plot(popular_Credit_Type,\"CREDIT_TYPE\",\"AMT_CREDIT_SUM_LIMIT\",\"ATM_CREDIT_LIMIT\")","1a1b72e3":"credit_card_balance=pd.read_csv(\"\/kaggle\/input\/home-credit-default-risk\/credit_card_balance.csv\")\ncredit_card_balance_Contract=credit_card_balance\\\n.sort_values('CNT_DRAWINGS_ATM_CURRENT',ascending = False)\\\n.groupby('NAME_CONTRACT_STATUS',as_index=False).sum().head(3)","4a9faec2":"bar_plot(credit_card_balance_Contract,\"NAME_CONTRACT_STATUS\",\"CNT_DRAWINGS_ATM_CURRENT\",\"CREDIT_CARD_ATM_WITHDRAW\")","afe399c3":"count_plot(credit_card_balance,'NAME_CONTRACT_STATUS','Installments left to pay with Home credit card')","bb2d708b":"previous_application=pd.read_csv(\"\/kaggle\/input\/home-credit-default-risk\/previous_application.csv\")\ngoods_catagory=previous_application\\\n.sort_values('AMT_APPLICATION',ascending = False)\\\n.groupby('NAME_GOODS_CATEGORY',as_index=False).count().head(5)\nprint(goods_catagory)","8f2cce5b":"Train_Data=pd.read_csv('\/kaggle\/input\/home-credit-default-risk\/application_train.csv')\ncount_plot(Train_Data,'NAME_CONTRACT_TYPE','Distribution of Loan type')","a8e5cc68":"\ncount_plot(Train_Data,'CODE_GENDER','client with payment difficulties')","1083af85":"count_plot(Train_Data,'NAME_INCOME_TYPE','Clients income type')","c25c7f6b":"count_plot(Train_Data,'NAME_FAMILY_STATUS','Relationship status of client ')","4f2e8b98":"Check the over all population income type","a92b7318":"credit_card_balance.csv","91beb0d6":"Gender with payment difficulties","ff7da2c7":"CREDIT_CARD_ATM_WITHDRAW\n===========================\n\nCustomers who are using credit card for ATM Withdrawl","156c325b":"MOST ACtive Credit type reported by Credit BUREAU","d7224c5c":" what types goods did the client apply for loans application\n=========================================================","e8c70148":"> Train_Data\/test_data.csv ","026975ac":"previous_application \n========================","049a1b18":"CREDIT_ACTIVE STATUS"}}