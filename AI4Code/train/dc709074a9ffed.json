{"cell_type":{"2216bba6":"code","4601b90e":"code","ccecf82d":"code","f06a5a19":"code","d74e048d":"code","7a103466":"code","4bf59836":"code","e1d367b3":"code","d37855f0":"code","e91fc56c":"code","a5c74626":"code","8efddc8c":"code","71765134":"code","46ab2274":"code","b6b5c24b":"code","08c00a43":"code","4f5598af":"code","57346546":"code","149f4b3a":"code","91df2a87":"code","1624b8b5":"code","03a24fc5":"code","78d52fde":"code","00958c24":"code","1260b59b":"code","9f834222":"code","2a43ee97":"code","8220285a":"code","9d023643":"code","5ee4a6b9":"markdown","4a4511f4":"markdown","c0b06fae":"markdown","9f99f395":"markdown","04a9ab1b":"markdown","77b0e4b2":"markdown","929a07a5":"markdown","609b70ba":"markdown","25e717b2":"markdown","3b9be5fd":"markdown","eeaa076e":"markdown","1576caa5":"markdown","cc8cab59":"markdown","a21c37ef":"markdown"},"source":{"2216bba6":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Lasso\nfrom sklearn import metrics","4601b90e":"car_dataset = pd.read_csv('..\/input\/vehicle-dataset-from-cardekho\/car data.csv') # loading the data from csv file to pandas dataframe","ccecf82d":"car_dataset.head() # inspecting the first 5 rows of the dataframe","f06a5a19":"car_dataset.shape # checking the number of rows and columns","d74e048d":"car_dataset.info() # getting some information about the dataset","7a103466":"car_dataset.isnull().sum() # checking the number of missing values","4bf59836":"# checking the distribution of categorical data\nprint(car_dataset.Fuel_Type.value_counts())\nprint(car_dataset.Seller_Type.value_counts())\nprint(car_dataset.Transmission.value_counts())","e1d367b3":"# encoding \"Fuel_Type\" Column\ncar_dataset.replace({'Fuel_Type':{'Petrol':0,'Diesel':1,'CNG':2}},inplace=True)\n\n# encoding \"Seller_Type\" Column\ncar_dataset.replace({'Seller_Type':{'Dealer':0,'Individual':1}},inplace=True)\n\n# encoding \"Transmission\" Column\ncar_dataset.replace({'Transmission':{'Manual':0,'Automatic':1}},inplace=True)","d37855f0":"car_dataset.head()","e91fc56c":"X = car_dataset.drop(['Car_Name','Selling_Price'],axis=1)\nY = car_dataset['Selling_Price']","a5c74626":"print(X)","8efddc8c":"print(Y)","71765134":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.1, random_state=2)","46ab2274":"lin_reg_model = LinearRegression() # loading the linear regression model","b6b5c24b":"lin_reg_model.fit(X_train,Y_train)","08c00a43":"training_data_prediction = lin_reg_model.predict(X_train) # prediction on Training data","4f5598af":"# R squared error\nscore_1 = metrics.r2_score(Y_train, training_data_prediction)\n\n# Mean Absolute Error\nscore_2 = metrics.mean_absolute_error(Y_train, training_data_prediction)\n\n# Mean Squared Error\nscore_3 = metrics.mean_squared_error(Y_train, training_data_prediction)\n\n# Root Mean squared Error\nscore_4 = np.sqrt(score_3)\n\nprint(\"R squared error : \", score_1)\nprint('Mean Absolute Error : ', score_2)\nprint(\"Mean squared error : \", score_3)\nprint('Root Mean squared error : ', score_4)","57346546":"plt.scatter(Y_train, training_data_prediction)\nplt.xlabel(\"Actual Price\")\nplt.ylabel(\"Predicted Price\")\nplt.title(\" Actual Prices vs Predicted Prices\")\nplt.show()","149f4b3a":"# prediction on Training data\ntest_data_prediction = lin_reg_model.predict(X_test)","91df2a87":"# R squared error\nscore_1 = metrics.r2_score(Y_test, test_data_prediction)\n\n# Mean Absolute Error\nscore_2 = metrics.mean_absolute_error(Y_test, test_data_prediction)\n\n# Mean Squared Error\nscore_3 = metrics.mean_squared_error(Y_test, test_data_prediction)\n\n# Root Mean squared Error\nscore_4 = np.sqrt(score_3)\n\nprint(\"R squared error : \", score_1)\nprint('Mean Absolute Error : ', score_2)\nprint(\"Mean squared error : \", score_3)\nprint('Root Mean squared error : ', score_4)","1624b8b5":"plt.scatter(Y_test, test_data_prediction)\nplt.xlabel(\"Actual Price\")\nplt.ylabel(\"Predicted Price\")\nplt.title(\" Actual Prices vs Predicted Prices\")\nplt.show()","03a24fc5":"lass_reg_model = Lasso() # loading the linear regression model","78d52fde":"lass_reg_model.fit(X_train,Y_train)","00958c24":"training_data_prediction = lass_reg_model.predict(X_train) # prediction on Training data","1260b59b":"# R squared error\nscore_1 = metrics.r2_score(Y_train, training_data_prediction)\n\n# Mean Absolute Error\nscore_2 = metrics.mean_absolute_error(Y_train, training_data_prediction)\n\n# Mean Squared Error\nscore_3 = metrics.mean_squared_error(Y_train, training_data_prediction)\n\n# Root Mean squared Error\nscore_4 = np.sqrt(score_3)\n\nprint(\"R squared error : \", score_1)\nprint('Mean Absolute Error : ', score_2)\nprint(\"Mean squared error : \", score_3)\nprint('Root Mean squared error : ', score_4)","9f834222":"plt.scatter(Y_train, training_data_prediction)\nplt.xlabel(\"Actual Price\")\nplt.ylabel(\"Predicted Price\")\nplt.title(\" Actual Prices vs Predicted Prices\")\nplt.show()","2a43ee97":"test_data_prediction = lass_reg_model.predict(X_test) # prediction on Training data","8220285a":"# R squared error\nscore_1 = metrics.r2_score(Y_test, test_data_prediction)\n\n# Mean Absolute Error\nscore_2 = metrics.mean_absolute_error(Y_test, test_data_prediction)\n\n# Mean Squared Error\nscore_3 = metrics.mean_squared_error(Y_test, test_data_prediction)\n\n# Root Mean squared Error\nscore_4 = np.sqrt(score_3)\n\nprint(\"R squared error : \", score_1)\nprint('Mean Absolute Error : ', score_2)\nprint(\"Mean squared error : \", score_3)\nprint('Root Mean squared error : ', score_4)","9d023643":"plt.scatter(Y_test, test_data_prediction)\nplt.xlabel(\"Actual Price\")\nplt.ylabel(\"Predicted Price\")\nplt.title(\" Actual Prices vs Predicted Prices\")\nplt.show()","5ee4a6b9":"**Importing dependencies and libraries **","4a4511f4":"Splitting the data and Target","c0b06fae":"**Model** **Training**","9f99f395":"**EDA**\n\nCar Dataset: https:\/\/www.kaggle.com\/nehalbirla\/vehicle-dataset-from-cardekho?select=car+data.csv","04a9ab1b":"Aim: To predict the price of the car, using various features provided in the dataset","77b0e4b2":"Visualize the actual prices and Predicted prices","929a07a5":"Code written by Dhrumil Vadodaria!!\n\nConnect with me on LinkedIn for future discussions on ML: https:\/\/www.linkedin.com\/in\/dhrumil-v-814932128\/\n\nPlease provide citation if you use the code!","609b70ba":"**Model** **Evaluation**","25e717b2":"Model Evaluation","3b9be5fd":"1. Linear Regression","eeaa076e":"Splitting Training and Test data","1576caa5":"**Encoding**","cc8cab59":"2. Lasso Regression","a21c37ef":"Visualize the actual prices and Predicted prices"}}