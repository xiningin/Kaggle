{"cell_type":{"09c8022b":"code","a798d0f8":"code","8e0a7ffc":"code","49f824d9":"code","bbab6743":"code","4365b2e7":"code","6ea562ee":"code","392165ef":"code","09b77b5a":"code","d2e1c28a":"code","d1c69557":"code","834cdfaa":"code","82888bd0":"code","494af500":"code","8175fc20":"code","91f81b31":"code","75a73a78":"code","5d47ca90":"code","7957c893":"code","4f5ddfa5":"code","1d111530":"code","e13d1e76":"code","10654e25":"code","c5cba370":"code","c062f8a5":"code","25a4b981":"code","320ca088":"code","27afa37d":"code","09aea7ba":"code","1b625040":"code","8ae8cc86":"markdown","517402f4":"markdown","cb158114":"markdown","7c10d0e1":"markdown","a96bc6ea":"markdown","ac34fe12":"markdown","c901734f":"markdown","6ebde468":"markdown","97ce95f2":"markdown","735d4e69":"markdown","a78886ea":"markdown","0fd8a8f2":"markdown","87a6b343":"markdown","aa4be405":"markdown","77fbfb3f":"markdown","ccc72216":"markdown","c515ff8f":"markdown","31d2e708":"markdown","0883110a":"markdown","2f00cbff":"markdown","ed457208":"markdown","edfbe1f8":"markdown","2b086677":"markdown","c7c697ba":"markdown","1ae531aa":"markdown","0a57dbf7":"markdown","9d7aa4bc":"markdown"},"source":{"09c8022b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a798d0f8":"#Read data from csv\ndataFrame = pd.read_csv(\"..\/input\/NBA_player_of_the_week.csv\")","8e0a7ffc":"#Information about data\ndataFrame.info()","49f824d9":"#review the first 10 rows of data\ndataFrame.head(10)","bbab6743":"dataFrame.corr()","4365b2e7":"#correlation map\nf,ax = plt.subplots(figsize = (13,13))\nsns.heatmap(dataFrame.corr(),annot=True,linewidths=.5,linecolor='black',fmt= '.2f',ax=ax)\nplt.show()\n\n","6ea562ee":"#data coloumns\ndataFrame.columns","392165ef":"dataFrame.Age.plot(kind = 'line',color = 'red',figsize=(13,13),grid=True,label=\"Age\",legend=True)\nplt.ylabel(\"Player's Age \")\n\nplt.show()","09b77b5a":"#First method\n#x = Age y = Seasons of league\ndataFrame.plot(kind='scatter' , x = 'Age',y = 'Seasons in league',figsize=(12,12),title=\"Scatter Plot\",fontsize=16,color = 'orange')\nplt.show()","d2e1c28a":"#Another Method\nplt.scatter(x=dataFrame.Age , y = dataFrame['Seasons in league'],color = 'black',linewidths=3,edgecolors='red')\nplt.show()","d1c69557":"#First method\ndataFrame['Draft Year'].plot(kind='hist',color ='#000080',figsize = (12,12))\nplt.xlabel(\"Draft Year\")\nplt.show()\n","834cdfaa":"#Another Method\nplt.hist(dataFrame[\"Draft Year\"],color='#008080',label='Draft Year',bins = 20)\nplt.show()","82888bd0":"players = dataFrame.Player.unique()\nx = list()\ny = list()\nfor each in players:\n    filters_data = dataFrame[dataFrame.Player == each]\n    if(filters_data.Player.count() >20):\n        x.append(each)\n        y.append(filters_data.Player.count())\n\n#Figure size 12,9        \nfig_size = plt.rcParams[\"figure.figsize\"]\nfig_size[0] = 12\nfig_size[1] = 9\nplt.rcParams[\"figure.figsize\"] = fig_size\nplt.title(\"Week's Player Count\")\nplt.xlabel(\"Players\")\nplt.bar(x,y)\nplt.show()","494af500":"#Another bar plot\nteams = dataFrame.Team.unique()\nx = list()\ny = list()\nfor each in teams:\n    filters_data = dataFrame[dataFrame.Team == each]\n    if(filters_data.Team.count() > 45):\n        x.append(each)\n        y.append(filters_data.Team.count())\n\nplt.bar(x,y,color = 'red')\nplt.xlabel(\"Teams\")\nplt.ylabel(\"Player Of The Week Count\")\n\n#figure size\nplt.rcParams[\"figure.figsize\"] = (11,10)\nplt.show()\n\n","8175fc20":"fname = [\"Onur\",\"G\u00fcray\",\"\u00d6mer\",\"Burak\",\"Kadir\",\"Alperen\",\"\u00d6mer\",\"Do\u011fukan\",\"Metehan\"]\nlname = [\"\u00d6ztun\u00e7\",\"\u00d6zg\u00f6dek\",\"Turan\",\"Can\",\"K\u00f6se\",\"\u00d6zdo\u011fan\",\"Evin\",\"\u00d6z\",\"Batmaz\"]\nage = np.random.randint(19,23,(9,))\n#or\n#age = np.linspace(dtype=int,start=19,stop=22,num=9)\n\nmy_dict = dict([(\"Name\",fname),(\"Last Name\",lname),(\"Age\",age)])\nmy_data = pd.DataFrame(my_dict)\nmy_data","91f81b31":"my_data[\"Sex\"] = ['M' for i in range(9)]\nmy_data","75a73a78":"#loc function\nmy_data.loc[:,'Name':'Last Name'] #including borders","5d47ca90":"#iloc\nmy_data.iloc[:,::-1] #use index","7957c893":"#One method\nmeans_age = my_data.Age.mean()\nmeans_age","4f5ddfa5":"#Another method -> use numpy\nmeans_age = np.mean(my_data.Age)\nround(means_age,2)","1d111530":"my_data.columns = [each.upper().replace(\" \",\"_\") for each in my_data.columns]\nmy_data.columns","e13d1e76":"my_data[\"BEGINS_WITH_'OZ'\"] = [True if each.lower().startswith(\"\u00f6z\") else False for each in my_data.LAST_NAME]\nmy_data","10654e25":"#drop\nmy_data.drop(my_data.index[:3],axis = 0) \nmy_data.drop(columns='AGE',axis = 1)\nmy_data.drop([\"SEX\"],axis = 1)","c5cba370":"#Vertical\nnew_data = pd.concat([my_data.SEX,my_data.NAME],axis = 1)\nnew_data","c062f8a5":"#Horizontal\nnew_data = pd.concat((my_data.tail(3),my_data.head(5)),axis = 0,sort =True,ignore_index= True)\nnew_data","25a4b981":"#Sort by name\nmy_data.sort_values(ascending=True,by = 'NAME',inplace=True)\nmy_data","320ca088":"#Find the youngest player of the week\nmin_age = np.min(dataFrame.Age) #find minimum age\nyoung_player = dataFrame[dataFrame.Age == min_age] #find the youngest player \nplayer_name = young_player.Player.unique() #the youngest player's name\nplayer_name[0] ","27afa37d":"#Find the oldest player of the week\nmax_age = np.max(dataFrame.Age) #find maximum age\noldest_player = dataFrame[dataFrame.Age == max_age] # find the oldest player\nplayer_name = oldest_player.Player.unique() #the oldest player's name\nplayer_name[0]","09aea7ba":"\nseasons = dataFrame[\"Season short\"].unique()\nseason_list = list() #for new data frame\nplayer_list = list() #for new data frame\nteam_list = list() #for new data frame\ncount_list = list() #for new data frame\nfor years in seasons:\n    filter_data = dataFrame[dataFrame[\"Season short\"] == years] #filtering by years\n    players = filter_data.Player.unique() #players in that season\n    season_list.append(years)\n    maximum = 0\n    for i in players:\n        filter_data_2 = dataFrame[(dataFrame[\"Season short\"] == years ) & (dataFrame[\"Player\"] == i)] \n        count_maximum = filter_data_2.Player.count() #how many times per year\n        if(count_maximum > maximum): \n            maximum = count_maximum\n            player = i\n            team = filter_data_2.Team.unique()[0]\n    player_list.append(player)\n    count_list.append(maximum)\n    team_list.append(team)\nnew_dataFrame = pd.DataFrame({\"Season\":season_list,\"Player\":player_list,\"Team\":team_list,\"Count Week's Player\":count_list})\n\n#Top 10\nnew_dataFrame.sort_values(inplace=True,by = \"Count Week's Player\",ascending=False)\nnew_dataFrame.head(10)","1b625040":"east = dataFrame[dataFrame.Conference == \"East\"]\neast_count = east.Conference.count()\nwest = dataFrame[dataFrame.Conference == \"West\"]\nwest_count = west.Conference.count()\nx = [\"East\",\"West\"]\ny = [east_count,west_count]\nplt.bar(x,y,color = [\"Blue\",\"Red\"])\nplt.xlabel(\"Conference\")\nplt.title(\"Compare East and West\")\nplt.rcParams[\"figure.figsize\"] = [7,8]\nplt.show()\n","8ae8cc86":"**Conclusion**\n* The player who is the most player of the week is LeBron James.","517402f4":"**5.List Comprehension**","cb158114":"* Check that the last name begins with  '\u00f6z'.","7c10d0e1":"**6.Delete Data**","a96bc6ea":"**1.  Create Data Frame**","ac34fe12":"  **Conclusion**\n  * Michael Jordan is the oldest player of the week in Washington Wizards","c901734f":"**Conclusion**\n* East and West are almost identical.","6ebde468":"**Pandas Exercises**","97ce95f2":"**Conclusion**\n* Lebron is the player of week most one season.","735d4e69":"**3.Slicing**","a78886ea":"**1. Find minimum and maximum value**","0fd8a8f2":"**4.Bar Plot**","87a6b343":"**Pandas**","aa4be405":"  **Conclusion**\n  * Carmelo Anthony is the youngest player of the week in Denver Nuggets.","77fbfb3f":"**7.Concatenating Data **","ccc72216":"*  Edit column name","c515ff8f":"**MATPLOTLIB LIBRARY**","31d2e708":"**1.  Line Plot**","0883110a":"**4.Average Calculation**","2f00cbff":"**8.Sorting**","ed457208":"**Conclusion**\n* Los Angeles Lakers is the club of the week player selected most.","edfbe1f8":"**2.Find the person with the most week's player in a season. **","2b086677":"**2. Scatter Plot **","c7c697ba":"**3.Compare East conferences and West conferences**","1ae531aa":"**Conclusion**\n* 'Seasons in league' and 'Age' are interrelated.","0a57dbf7":"**2. Add New Feature**","9d7aa4bc":"**3.Histogram**"}}