{"cell_type":{"8fb8bf82":"code","ead6c3e0":"code","7c843c54":"code","cf6471a4":"code","d8a1c73e":"code","10ac3776":"code","b5e9113b":"code","881b4da6":"code","ec617604":"code","7ea14b32":"code","b325410e":"code","76de939b":"code","2e82df6d":"code","8c64b49c":"code","748aea68":"code","27da3d14":"code","7b1d543a":"code","ad4c9748":"code","21becf20":"code","7cd04ffb":"code","2333f825":"code","a2a76e78":"code","f5e3f605":"code","efddec55":"code","b1927df7":"code","fc99b3ca":"code","43474274":"code","d4b9c9b8":"code","d5c6e3bf":"code","05726e24":"code","01625148":"code","78b0ab8e":"code","ac5049b7":"code","a711fa92":"code","6f2d0c7b":"code","b6538946":"code","b657a75d":"code","b7e3032b":"code","1a0c9242":"code","ed128e59":"code","f9ef3f21":"code","780c3414":"code","74a4f999":"code","0b636a9f":"code","165154d5":"code","b763a0c1":"code","5ee99a3e":"code","b0c09a9e":"code","a849394a":"code","6bac0daf":"code","c29ad2a6":"markdown","08000616":"markdown","c82b36ed":"markdown","5e03b074":"markdown","363c48b4":"markdown","98e4dfe4":"markdown","0cc239e8":"markdown","4b09178b":"markdown","0f412570":"markdown","a009b125":"markdown","2c2dd422":"markdown","a6df14fc":"markdown","84f72afb":"markdown","4525a648":"markdown","4cca4abe":"markdown","44f7eadf":"markdown","271d2530":"markdown","a481dddf":"markdown","1ae237bc":"markdown","a39949a4":"markdown","96f22173":"markdown","91cedf08":"markdown","fb4a6ba1":"markdown","d515c535":"markdown","13603bde":"markdown","ec75b8f5":"markdown","c396f22d":"markdown","26f56eb7":"markdown","2d81479c":"markdown","0a3a06a1":"markdown","26e0d73b":"markdown","e2503daf":"markdown","9fdb9128":"markdown","46ec5f9e":"markdown"},"source":{"8fb8bf82":"import pandas as pd\nimport numpy as np","ead6c3e0":"cities=pd.read_csv(\"..\/input\/top-500-indian-cities\/cities_r2.csv\")","7c843c54":"cities.head()","cf6471a4":"cities.describe()","d8a1c73e":"cities.info()","10ac3776":"from matplotlib import pyplot as plt\nimport seaborn as sns\n%matplotlib inline\ncorr=cities.corr()\nf, ax = plt.subplots(figsize=(6,6))\nsns.heatmap(corr, vmax=.8, square=True);","b5e9113b":"cities.describe(include='O')","881b4da6":"fig = plt.figure(figsize=(20,10))\nstates = cities.groupby('state_name')['name_of_city'].count().sort_values(ascending=True)\nstates.plot(kind=\"barh\", fontsize = 20,color='green')\nplt.grid(b=True, which='both', color='black')\nplt.xlabel('No of cities taken from each state', fontsize = 20)\nplt.show ()","ec617604":"lit_by_states  = cities.groupby('state_name').agg({'literates_total': np.sum})\npop_by_states  = cities.groupby('state_name').agg({'population_total': np.sum})\nliterate_rate = lit_by_states.literates_total * 100 \/ pop_by_states.population_total\nliterate_rate = literate_rate.sort_values(ascending=True)\n\nplt.subplots(figsize=(7, 6))\nax = sns.barplot(x=literate_rate, y=literate_rate.index,color='brown')\nax.set_title('States according to literacy rate', size=20, alpha=0.5, color='red')\nax.set_xlabel('Literacy Rate(as % of population)', size=15, alpha=0.5, color='red')\nax.set_ylabel('States', size=15, alpha=0.5, color='red')","7ea14b32":"cities.kurt()","b325410e":"cities.skew()","76de939b":"cities['lattitude'] = cities['location'].apply(lambda x: x.split(',')[0])\ncities['longitude'] = cities['location'].apply(lambda x: x.split(',')[1])\ncities.head(5)","2e82df6d":"top_pop_cities = cities.sort_values(by='population_total',ascending=False)\ntop20_populated_cities=top_pop_cities.head(20)\ntop20_populated_cities","8c64b49c":"from matplotlib import cm\nfrom matplotlib.dates import date2num\nfrom mpl_toolkits.basemap import Basemap","748aea68":"plt.subplots(figsize=(20, 15))\nmap = Basemap(width=1200000,height=900000,projection='lcc',resolution='l',\n                    llcrnrlon=67,llcrnrlat=5,urcrnrlon=99,urcrnrlat=37,lat_0=28,lon_0=77)\n\nmap.drawmapboundary ()\nmap.drawcountries ()\nmap.drawcoastlines ()\n\nlongitude=np.array(top20_populated_cities['longitude'])\nlattitude=np.array(top20_populated_cities['lattitude'])\ntotal_population=np.array(top20_populated_cities['population_total'])\ncity_name=np.array(top20_populated_cities['name_of_city'])\n\nx, y = map(longitude, lattitude)\npopulation_sizes = top20_populated_cities[\"population_total\"].apply(lambda x: int(x \/ 5000))\nplt.scatter(x, y, s=population_sizes, marker=\"o\", c=population_sizes, cmap=cm.Dark2, alpha=0.8)\n\n\nfor ncs, xpt, ypt in zip(city_name, x, y):\n    plt.text(xpt+6000, ypt+3000, ncs, fontsize=10, fontweight='bold')\n\nplt.title('Top 20 Populated Cities in India',fontsize=20)","27da3d14":"def plot_map(sizes, colorbarValue):\n\n    plt.figure(figsize=(19,20))\n    f, ax = plt.subplots(figsize=(19, 20))\n    map = Basemap(width=5000000, height=3500000, resolution='l', projection='aea', llcrnrlon=69,llcrnrlat=6, urcrnrlon=99, urcrnrlat=36, lon_0=78, lat_0=20, ax=ax)\n    map.drawmapboundary()\n    map.drawcountries()\n    map.drawcoastlines()\n    x, y = map(np.array(cities[\"longitude\"]), np.array(cities[\"lattitude\"]))\n    cs = map.scatter(x, y, s=sizes, marker=\"o\", c=sizes, cmap=cm.Dark2, alpha=0.5)\n    cbar = map.colorbar(cs, location='right',pad=\"5%\")\n    cbar.ax.set_yticklabels(colorbarValue)\n    plt.show()","7b1d543a":"\npopulation_sizes = cities[\"population_total\"].apply(lambda x: int(x \/6000))\ncolorbarValue = np.linspace(cities[\"population_total\"].min(), cities[\"population_total\"].max(),num=10)\ncolorbarValue = colorbarValue.astype(int)\nplot_map(population_sizes, colorbarValue)\n","ad4c9748":"population_sizes = cities[\"population_male\"].apply(lambda x: int(x \/6000))\ncolorbarValue = np.linspace(cities[\"population_male\"].min(), cities[\"population_male\"].max(),num=10)\ncolorbarValue = colorbarValue.astype(int)\nplot_map(population_sizes, colorbarValue)","21becf20":"population_sizes = cities[\"population_female\"].apply(lambda x: int(x \/ 6000))\ncolorbarValue = np.linspace(cities[\"population_female\"].min(), cities[\"population_female\"].max(), \n                            num=10)\ncolorbarValue = colorbarValue.astype(int)\n\nplot_map(population_sizes, colorbarValue)","7cd04ffb":"population_sizes = cities[\"0-6_population_total\"].apply(lambda x: int(x \/6000))\ncolorbarValue = np.linspace(cities[\"0-6_population_total\"].min(), cities[\"0-6_population_total\"].max(),num=10)\ncolorbarValue = colorbarValue.astype(int)\nplot_map(population_sizes, colorbarValue)","2333f825":"population_sizes = cities[\"0-6_population_male\"].apply(lambda x: int(x \/6000))\ncolorbarValue = np.linspace(cities[\"0-6_population_male\"].min(), cities[\"0-6_population_male\"].max(),num=10)\ncolorbarValue = colorbarValue.astype(int)\nplot_map(population_sizes, colorbarValue)","a2a76e78":"population_sizes = cities[\"0-6_population_female\"].apply(lambda x: int(x \/6000))\ncolorbarValue = np.linspace(cities[\"0-6_population_female\"].min(), cities[\"0-6_population_female\"].max(),num=10)\ncolorbarValue = colorbarValue.astype(int)\nplot_map(population_sizes, colorbarValue)","f5e3f605":"population_sizes = cities[\"literates_total\"].apply(lambda x: int(x \/ 5000))\ncolorbarValue = np.linspace(cities[\"literates_total\"].min(), cities[\"literates_total\"].max(), \n                            num=10)\ncolorbarValue = colorbarValue.astype(int)\n\nplot_map(population_sizes, colorbarValue)","efddec55":"population_sizes = cities[\"literates_male\"].apply(lambda x: int(x \/6000))\ncolorbarValue = np.linspace(cities[\"literates_male\"].min(), cities[\"literates_male\"].max(),num=10)\ncolorbarValue = colorbarValue.astype(int)\nplot_map(population_sizes, colorbarValue)","b1927df7":"population_sizes = cities[\"literates_female\"].apply(lambda x: int(x \/6000))\ncolorbarValue = np.linspace(cities[\"literates_female\"].min(), cities[\"literates_female\"].max(),num=10)\ncolorbarValue = colorbarValue.astype(int)\nplot_map(population_sizes, colorbarValue)","fc99b3ca":"state_literacy_effective = cities[[\"state_name\",\"effective_literacy_rate_total\",\"effective_literacy_rate_male\",\"effective_literacy_rate_female\"]].groupby(\"state_name\").agg({\"effective_literacy_rate_total\":np.average,\"effective_literacy_rate_male\":np.average,\"effective_literacy_rate_female\":np.average})\nstate_literacy_effective.head()","43474274":"state_literacy_effective.shape","d4b9c9b8":"state_literacy_effective_sort= state_literacy_effective.sort_values(\"effective_literacy_rate_total\", ascending=True)\nstate_literacy_effective_sort.plot(kind=\"barh\",grid=True,figsize=(16,15),alpha = 0.6,width=0.6,stacked = False,edgecolor=\"g\",fontsize = 20)\nplt.grid(b=True, which='both')\nplt.legend()\nplt.show ()","d5c6e3bf":"state_graduates  = cities[[\"state_name\",\"total_graduates\",\"male_graduates\",\"female_graduates\"]].groupby(\"state_name\").agg({\"total_graduates\":np.average,\"male_graduates\":np.average,\"female_graduates\":np.average})\nstate_graduates.sort_values(\"total_graduates\", ascending=True).plot(kind=\"barh\",grid=True,figsize=(16,15),alpha = 0.6,width=0.6,stacked = False,edgecolor=\"g\",fontsize = 20)\nplt.grid(b=True, which='both')\nplt.legend()\nplt.show ()","05726e24":"import geopandas as gpd\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster","01625148":"uttarpradesh = cities[((cities.state_name == 'UTTAR PRADESH'))]\nuttarpradesh.shape","78b0ab8e":"m_1 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in uttarpradesh.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_1)\n\n# Display the map\nm_1","ac5049b7":"graduates_above_1lakh = cities[((cities.total_graduates > 100000))]\ngraduates_above_1lakh.shape","a711fa92":"m_2 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in graduates_above_1lakh.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_2)\n\n# Display the map\nm_2","6f2d0c7b":"effective_literacy_rate_above_90 = cities[((cities.effective_literacy_rate_total > 90))]\neffective_literacy_rate_above_90","b6538946":"m_3 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in effective_literacy_rate_above_90.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_3)\n\n# Display the map\nm_3","b657a75d":"female_literates_above = cities[((cities.literates_female >160000))]\nm_4 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in female_literates_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_4)\n\n# Display the map\nm_4","b7e3032b":"male_literates_above = cities[((cities.literates_male >160000))]\nm_5 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in male_literates_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_5)\n\n# Display the map\nm_5","1a0c9242":"literates_mean=cities.literates_total.mean()","ed128e59":"literates_above = cities[((cities.literates_male >literates_mean))]\nm_6 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in literates_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_6)\n\n# Display the map\nm_6","f9ef3f21":"total_kids_above = cities[((cities['0-6_population_total'] >50000))]\nm_7 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in total_kids_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_7)\n\n# Display the map\nm_7","780c3414":"male_kids_above = cities[((cities['0-6_population_male'] >50000))]\nm_8 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in male_kids_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_8)\n\n# Display the map\nm_8","74a4f999":"female_kids_above = cities[((cities['0-6_population_female'] >50000))]\nm_9 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in female_kids_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_9)\n\n# Display the map\nm_9","0b636a9f":"total_pop_above = cities[((cities.population_total >2000000))]\nm_10 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in total_pop_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_10)\n\n# Display the map\nm_10","165154d5":"male_pop_above = cities[((cities.population_male >2000000))]\nm_11 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in male_pop_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_11)\n\n# Display the map\nm_11","b763a0c1":"female_pop_above = cities[((cities.population_female >2000000))]\nm_12 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in female_pop_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_12)\n\n# Display the map\nm_12","5ee99a3e":"female_grad_above = cities[((cities.female_graduates >200000))]\nm_13 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in female_grad_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_13)\n\n# Display the map\nm_13","b0c09a9e":"male_grad_above = cities[((cities.male_graduates >200000))]\nm_14 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in male_grad_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_14)\n\n# Display the map\nm_14","a849394a":"child_sex_ratio_above = cities[((cities.child_sex_ratio >950))]\nm_15 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in child_sex_ratio_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_15)\n\n# Display the map\nm_15","6bac0daf":"sex_ratio_above = cities[((cities.sex_ratio >980))]\nm_16 = folium.Map(location=[20.5936832,78.962883], tiles='cartodbpositron', zoom_start=5)\n\n# Add points to the map\nfor idx, row in sex_ratio_above.iterrows():\n    Marker([row['lattitude'], row['longitude']]).add_to(m_16)\n\n# Display the map\nm_16","c29ad2a6":"Locating the cities which female population higher","08000616":"Locating the cities having the sex ratio greater than 980","c82b36ed":"From the above map we can visualize the top 20 populated cities","5e03b074":"lets make analysis of female kids population aging 0-6 years and plot them in a map to visualize","363c48b4":" **Let us analyze how many cities were taken from each state and also compare which state has more cities**","98e4dfe4":"Locating the cities having more than 50,000 female kids","0cc239e8":"lets make analysis of male literates in all cities and plot them in a map to visualize","4b09178b":"From the above plot we can say that uttarpradesh has highest number of cities i.e 63 and followed by west Bengal. Least number of cities were taken from Andaman and Nicobar islands and followed by Nagaland  ","0f412570":"lets make analysis of female population and see female population density of all cities in a map","a009b125":"Now lets try to plot every city based on population","2c2dd422":"Locating the cities having the child sex ratio greater than 950","a6df14fc":"Interactive map loacting the cities in uttar pradesh","84f72afb":"Locating the cities which total population higher","4525a648":"Locating the cities having more than 50,000 male kids","4cca4abe":"lets make analysis of kids population aging 0-6 years and plot them in a map to visualize","44f7eadf":"Comparing effective literacy rate , effective literacy rate of males , effective literacy rate of female for all states ","271d2530":"Locating the cities which male graduates greater than 2lakhs","a481dddf":"Splitting location into lattitude and longitude for better and confortable visualization","1ae237bc":"Correlation of our data:","a39949a4":"From the above all visualizations we got many insights. ","96f22173":"Locating the cities , having total effective literacy rate above 90","91cedf08":"Locating male literates above 160000","fb4a6ba1":"Locating female literates above 160000","d515c535":"lets make analysis of literates in all cities and plot them in a map to visualize","13603bde":"Let us know, what are the top 20 cities in population  ","ec75b8f5":"lets make analysis of female literates in all cities and plot them in a map to visualize","c396f22d":"Locating the cities , having graduates above 1 lakh ","26f56eb7":"lets make analysis of male kids population aging 0-6 years and plot them in a map to visualize","2d81479c":"Let us know the mean of total literates and locate the cities which have  literates above mean","0a3a06a1":"Locating the cities having more than 50,000 total kids","26e0d73b":"Locating the cities which male population higher","e2503daf":"From the above plot we can conclude that the states which lave least literacy rate is Jammu and Kashmir and Uttar Pradesh.Even though the cities taken from uttar pradesh are high it stood behind in literacy rates compared to other cities.","9fdb9128":"lets make analysis of male population and see  male population density of all cities in a map","46ec5f9e":"Locating the cities which female graduates greater than 2lakhs"}}