{"cell_type":{"c655e437":"code","444fcbb9":"code","01afd2e8":"code","a527325e":"code","24f7f5ab":"code","9252848e":"code","6c9d76da":"code","e13002b4":"code","d2d5b472":"code","59f236ab":"code","07e8c659":"code","4f1f6325":"code","3997bda8":"code","41c23ff5":"code","cd707094":"code","73af87e6":"code","a0ebcf1e":"code","bbce2445":"code","8f22f267":"code","bdcabe9b":"code","47e47e97":"code","da72e803":"code","2a1343b2":"code","0297839a":"code","8d2b4b2c":"markdown","e7eb959f":"markdown","6455aa8d":"markdown","50327941":"markdown"},"source":{"c655e437":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nfrom tensorflow.keras import datasets,layers,models\nimport matplotlib.pyplot as plt","444fcbb9":"(X_train,y_train),(X_test,y_test)=datasets.cifar10.load_data()","01afd2e8":"print(\"X_train(Shape)=\",X_train.shape)","a527325e":"print(\"X_test(Shape)=\",X_test.shape)","24f7f5ab":"print(\"y_train(Shape)=\",y_train.shape)","9252848e":"y_train[:5]","6c9d76da":"y_train=y_train.reshape(-1,)\ny_train[:5]","e13002b4":"classes=['airplane','automobile','bird','cat','deer','dog','frog','horse','ship','truck']","d2d5b472":"plt.imshow(X_train[0])","59f236ab":"plt.imshow(X_train[1])","07e8c659":"def plot_sample(X,y,index):\n  plt.figure(figsize=(15,2))\n  plt.imshow(X[index])\n  plt.xlabel(classes[y[index]])\n","4f1f6325":"plot_sample(X_train,y_train,1)","3997bda8":"plot_sample(X_train,y_train,0)","41c23ff5":"#normalizing the value of data for same range in 0 to 1(We divide it by 255 because every image has (255,255)pixel)\nX_train=X_train\/255\nX_test=X_test\/255","cd707094":"ann = models.Sequential([\n        layers.Flatten(input_shape=(32,32,3)),\n        layers.Dense(3000, activation='relu'),\n        layers.Dense(1000, activation='relu'),\n        layers.Dense(10, activation='softmax')    \n    ])\n\nann.compile(optimizer='SGD',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n\nann.fit(X_train, y_train, epochs=10)","73af87e6":"cnn = models.Sequential([\n    layers.Conv2D(filters=32, kernel_size=(3, 3), activation='relu', input_shape=(32, 32, 3)),\n    layers.MaxPooling2D((2, 2)),\n    \n    layers.Conv2D(filters=64, kernel_size=(3, 3), activation='relu'),\n    layers.MaxPooling2D((2, 2)),\n    \n    layers.Flatten(),\n    layers.Dense(64, activation='relu'),\n    layers.Dense(10, activation='softmax')\n])","a0ebcf1e":"cnn.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])","bbce2445":"cnn.fit(X_train, y_train, epochs=10)","8f22f267":"y_pred = cnn.predict(X_test)\ny_pred[:5]","bdcabe9b":"y_classes = [np.argmax(element) for element in y_pred]\ny_classes[:5]\n","47e47e97":"y_test[:5]","da72e803":"y_test=y_test.reshape(-1,)\ny_test[:5]","2a1343b2":"plot_sample(X_test, y_test,3)","0297839a":"classes[y_classes[3]]","8d2b4b2c":"###BUILDING CNN MODEL","e7eb959f":"##SO USING ANN MODEL OUR ACCURACY IS AROUND 56%","6455aa8d":"#ACCURACY OF THE CNN MODEL IS THE 77%","50327941":"##First We applying ANN model"}}