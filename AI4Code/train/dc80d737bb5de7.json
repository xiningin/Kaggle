{"cell_type":{"5f244eb3":"code","1e08e543":"code","a3c890a2":"code","99671054":"code","b8442c7d":"code","41cd3800":"code","8a496b76":"code","0fae5a0e":"markdown","ab7ad0db":"markdown","e84dac0d":"markdown","8933ce84":"markdown","bbbcf614":"markdown","36282183":"markdown","c6e6f08d":"markdown"},"source":{"5f244eb3":"# Imports and Basic Data Cleaning (Drop Duplicates and NaN data)\nimport numpy as np\nimport pandas as pd \nimport os\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\ndf = pd.read_csv('\/kaggle\/input\/windows-store\/msft.csv')\ndf = df.drop_duplicates().reset_index(drop=True)\ndf = df.dropna().reset_index(drop=True)\n","1e08e543":"print(df.head())\nprint(df.info())","a3c890a2":"from numpy import mean\n\nplt.figure(figsize=(10,5))\nsns.distplot(df.Rating, kde=False)\nplt.ylabel('Count')\nplt.title('Distribution of Overall Rating')\nplt.show()\n\nplt.figure(figsize=(10,5))\nsns.distplot(df[\"No of people Rated\"], kde=True)\nplt.ylabel('Frequency')\nplt.xlabel('Number of Ratings per App')\nplt.title('Distribution of Number of Ratings per App')\nplt.show()\n\nplt.figure(figsize=(10,5))\ntot = df.shape[0]\nvc = df['Price'].value_counts()\nnum_free = vc['Free']\nnum_cost = tot - num_free\nslices = [num_free, num_cost]\nlabeling = ['Free', 'Not Free']\nexplode = [0.1, 0.2]\nplt.pie(slices,explode=explode,shadow=True,autopct='%1.1f%%',labels=labeling,wedgeprops={'edgecolor':'black'})\nplt.title('Free vs. Not Free Apps')\nplt.tight_layout()\nplt.show()\n\nplt.figure(figsize=(10,5))\ng = sns.countplot(x='Category',data=df)\ng.set_xticklabels(g.get_xticklabels(), rotation=40, ha=\"right\")\n#g.fig.set_size_inches(20, 10)\nplt.title('Distribution of Category Types')\nplt.ylabel('Number of Apps')\nplt.show()\n\nsns.set(style=\"ticks\", color_codes=True)\nplt.style.use('fivethirtyeight')\ng = sns.catplot(x=\"Rating\", y=\"Category\", kind=\"box\", showmeans=True, meanprops={\"marker\":\"o\",\n                       \"markerfacecolor\":\"white\", \n                       \"markeredgecolor\":\"black\",\n                      \"markersize\":\"10\"}, data=df, estimator='mean', order=df.Category.value_counts().iloc[:25].index)\ng.set(xlim=(0, 5.5))\ng.fig.set_size_inches(20, 10)\ng.ax.set_xticks([1,1.5,2,2.5,3,3.5,4,4.5,5], minor=True)\nplt.title(\"Ratings by Category - Ordered by most common Categories\")\nplt.show()\n\ndf_cat = df.groupby(\"Category\").mean().sort_values(by = 'Rating', ascending=False)\ng = sns.catplot(x=\"Rating\", y=\"Category\", kind=\"box\", showmeans=True, meanprops={\"marker\":\"o\",\n                       \"markerfacecolor\":\"white\", \n                       \"markeredgecolor\":\"black\",\n                      \"markersize\":\"10\"}, data=df, order=df_cat.iloc[:25].index)\ng.set(xlim=(0, 5.5))\ng.fig.set_size_inches(20, 10)\ng.ax.set_xticks([1,1.5,2,2.5,3,3.5,4,4.5,5], minor=True)\nplt.title(\"Ratings by Category - Oredered by highest mean Rating\")\nplt.show()\n\nprint(\"Mean Ratings by Category: \")\nprint(df_cat.Rating.to_string())\n\nfrom wordcloud import WordCloud,STOPWORDS \n\nplt.style.use('fivethirtyeight')\nstopwords = set(STOPWORDS) \nstop_word= list(stopwords) + ['http','co','https','wa','amp','\u00fb','\u00db','HTTP','HTTPS']\n\nfig, (ax1) = plt.subplots(1, 1, figsize=[26, 8])\nwordcloud1 = WordCloud( background_color='white',stopwords = stop_word,\n                        width=600,\n                        height=400).generate(\" \".join(df['Name']))\nax1.imshow(wordcloud1)\nax1.axis('off')\nax1.set_title('App Title WordCloud',fontsize=40)\nplt.show()","99671054":"def month_lookup(x):\n    months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    return months[x-1]\n\ndef day_lookup(x):\n    days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n    return days[x]\n\ndef year_lookup(x):\n    return str(x) + 'x'\n\ndf['day'] = pd.DatetimeIndex(df['Date'], dayfirst=True).day\ndf['month'] = pd.DatetimeIndex(df['Date'], dayfirst=True).month\ndf['month_str'] = df['month'].apply(lambda x: month_lookup(x))\ndf['year'] = pd.DatetimeIndex(df['Date'], dayfirst=True).year\ndf['year_str'] = df['year'].apply(lambda x: year_lookup(x))\ndf['day_of_week'] = pd.DatetimeIndex(df['Date'], dayfirst=True).dayofweek \ndf['day_of_week_str'] = df['day_of_week'].apply(lambda x: day_lookup(x))","b8442c7d":"days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\nplt.figure(figsize=(10,5))\ng = sns.countplot(x='day_of_week_str',data=df, order=days)\ng.set_xticklabels(g.get_xticklabels(), rotation=40, ha=\"right\")\n#g.fig.set_size_inches(20, 10)\nplt.title('Distribution of Publish Date by Day of the Week')\nplt.xlabel('Day of the Week')\nplt.ylabel('Number of Apps')\nplt.show()\n\ndf_day = df.groupby(\"day_of_week_str\").mean().sort_values(by = 'Rating', ascending=False)\nsns.set(style=\"ticks\", color_codes=True)\nplt.style.use('fivethirtyeight')\ng = sns.catplot(x=\"Rating\", y=\"day_of_week_str\", kind=\"box\", showmeans=True, meanprops={\"marker\":\"o\",\n                       \"markerfacecolor\":\"white\", \n                       \"markeredgecolor\":\"black\",\n                      \"markersize\":\"10\"}, data=df, order=df_day.iloc[:25].index)\ng.set(xlim=(0, 5.5))\ng.fig.set_size_inches(10, 10)\ng.ax.set_xticks([1,1.5,2,2.5,3,3.5,4,4.5,5], minor=True)\nplt.title(\"Ratings by Week - Ordered by Mean Rating\")\nplt.ylabel(\"Day of the Week\")\nplt.show()\n\nprint(\"Mean Ratings by Day of Week: \")\nprint(df_day.Rating.to_string())\n\n","41cd3800":"months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nplt.figure(figsize=(10,5))\ng = sns.countplot(x='month_str',data=df, order=months)\ng.set_xticklabels(g.get_xticklabels(), rotation=40, ha=\"right\")\n#g.fig.set_size_inches(20, 10)\nplt.title('Distribution of Publish Date by Month')\nplt.xlabel('Month')\nplt.ylabel('Number of Apps')\nplt.show()\n\ndf_month = df.groupby(\"month_str\").mean().sort_values(by = 'Rating', ascending=False)\nsns.set(style=\"ticks\", color_codes=True)\nplt.style.use('fivethirtyeight')\ng = sns.catplot(x=\"Rating\", y=\"month_str\", kind=\"box\", showmeans=True, meanprops={\"marker\":\"o\",\n                       \"markerfacecolor\":\"white\", \n                       \"markeredgecolor\":\"black\",\n                      \"markersize\":\"10\"},data=df, order=df_month.iloc[:25].index)\ng.set(xlim=(0, 5.5))\ng.fig.set_size_inches(10, 10)\ng.ax.set_xticks([1,1.5,2,2.5,3,3.5,4,4.5,5], minor=True)\nplt.title(\"Ratings by Month - Oredered by Mean Rating\")\nplt.ylabel(\"Month\")\nplt.show()\n\nprint(\"Mean Ratings by Month: \")\nprint(df_month.Rating.to_string())","8a496b76":"years = ['2010x', '2011x', '2012x', '2013x', '2014x', '2015x', '2016x', '2017x', '2018x', '2019x']\n\nplt.figure(figsize=(10,5))\ng = sns.countplot(x='year_str',data=df, order=years)\ng.set_xticklabels(g.get_xticklabels(), rotation=40, ha=\"right\")\n#g.fig.set_size_inches(20, 10)\nplt.title('Distribution of Publish Date by Year')\nplt.xlabel('Year')\nplt.ylabel('Number of Apps')\nplt.show()\n\n\ndf_year = df.groupby(\"year_str\").mean().sort_values(by = 'Rating', ascending=False)\nsns.set(style=\"ticks\", color_codes=True)\nplt.style.use('fivethirtyeight')\ng = sns.catplot(x=\"Rating\", y=\"year_str\",kind=\"box\",showmeans=True, meanprops={\"marker\":\"o\",\n                       \"markerfacecolor\":\"white\", \n                       \"markeredgecolor\":\"black\",\n                      \"markersize\":\"10\"}, data=df, order = df_year.iloc[:25].index)\ng.set(xlim=(0, 5.5))\ng.fig.set_size_inches(10, 10)\ng.ax.set_xticks([1,1.5,2,2.5,3,3.5,4,4.5,5], minor=True)\nplt.title(\"Ratings by Year - Ordered by Mean Rating\")\nplt.ylabel(\"Year\")\nplt.show()\n\nprint(\"Mean Ratings by Year: \")\nprint(df_year.Rating.to_string())\n","0fae5a0e":"# EDA","ab7ad0db":"Let's start with some basic plots to make sense of some overall trends.","e84dac0d":"January is the most popular month for an app to be published, but the margins are much more narrow than the days of the week data. Months published in September are rated on average 0.3 stars higher than months published in May.","8933ce84":"About 90% of apps are published during the week as opposed to the weekend, with monday being the most popular day (about 21% of all apps are published on monday). Despite this, apps published on Monday have the second lowest rating on average, with apps published on Sunday having the highest.","bbbcf614":"Was having a really weird issue with seaborn where the final plot wouldn't work unless there wasn't just numerical characters in the string, so apologies for the janky work-around but I was really stumped and spending way too much time fiddling with it.\n\nBut on to the analysis: the most popular year to have an app published was 2016. Additionally, 2019 had the highest average app rating (About 4). Why might this be? Was this a change on the app store side or the app creator side? Or is it because those apps are the newest ones, and early review tend to be good and then fall to a lower rating?","36282183":"Key Observations:\n1. The vast majority of apps are free (97% to be precise)\n2. Most overall app ratings are favorable (87% of overall ratings are 3 and up, 60% are 4 and up)\n3. Categories are not distributed equally, and there are some  differences for the average Rating per Category (Multimedia Design has lowest average rating with about 3.5 and Government and Politics has highest with about 4)\n","c6e6f08d":"We've yet to deal with the date data, so let's first parse the day, month, year and day of the week into separate columns."}}