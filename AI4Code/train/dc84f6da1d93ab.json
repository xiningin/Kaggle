{"cell_type":{"bdf36538":"code","f3d68980":"code","56343eb8":"code","c08eb53f":"code","797e1f89":"code","a70b78e0":"code","61ebb20a":"code","01c51084":"code","1f4d04a2":"code","c3f98876":"code","697f99d3":"code","eb91ae9d":"code","c732fd6b":"code","a1016ac8":"code","a85cbb64":"code","26b87c48":"code","5ded914d":"code","7e15c2ad":"code","339568d2":"code","c4a81c9c":"code","e3789716":"code","e791c9bc":"code","0f52529c":"code","85d668da":"markdown"},"source":{"bdf36538":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f3d68980":"data = pd.read_csv('..\/input\/company-bankruptcy-prediction\/data.csv')\ndata.head()","56343eb8":"data.describe()","c08eb53f":"corrmat = data.corr()\n\n  \n\nf, ax = plt.subplots(figsize =(90, 90))\n\nsns.heatmap(corrmat, ax = ax, cmap =\"YlGnBu\", linewidths = 0.1)","797e1f89":"len(data[data['Bankrupt?'] == 0]), len(data[data['Bankrupt?'] == 1])","a70b78e0":"stable  = data[data['Bankrupt?'] == 0][:220]\nunstable = data[data['Bankrupt?'] == 1]\n\nnorm_data = pd.concat([stable, unstable])\n\nX_data = norm_data.iloc[:, 1:]\ny_data = norm_data['Bankrupt?']\nX_data","61ebb20a":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X_data, y_data, test_size=0.2)","01c51084":"from sklearn.linear_model import RidgeClassifier, LogisticRegression, SGDClassifier\nfrom sklearn.metrics import plot_confusion_matrix, f1_score, classification_report\n\nmodel = RidgeClassifier()\n\nmodel.fit(X_train, y_train)","1f4d04a2":"plot_confusion_matrix(model, X_test, y_test)","c3f98876":"preds = model.predict(X_test)\nf1_score(preds, y_test)","697f99d3":"print(classification_report(y_test, preds))","eb91ae9d":"model2 = LogisticRegression()\n\nmodel2.fit(X_train, y_train)","c732fd6b":"preds = model2.predict(X_test)\nprint(classification_report(y_test, preds))\nplot_confusion_matrix(model2, X_test, y_test)","a1016ac8":"model3 = SGDClassifier()\n\nmodel3.fit(X_train, y_train)","a85cbb64":"preds = model3.predict(X_test)\nprint(classification_report(y_test, preds))\nplot_confusion_matrix(model2, X_test, y_test)","26b87c48":"from sklearn.naive_bayes import GaussianNB, BernoulliNB\n\nmodel4 = GaussianNB()\n\nmodel4.fit(X_train, y_train)","5ded914d":"preds = model4.predict(X_test)\nprint(classification_report(y_test, preds))\nplot_confusion_matrix(model4, X_test, y_test)","7e15c2ad":"model5 = GaussianNB()\n\nmodel5.fit(X_train, y_train)\n\npreds = model5.predict(X_test)\nprint(classification_report(y_test, preds))\nplot_confusion_matrix(model5, X_test, y_test)","339568d2":"from sklearn.neural_network import MLPClassifier\n\nmodel6 = MLPClassifier(random_state=1, max_iter=10000)\nmodel6.fit(X_train, y_train)\n\npreds = model6.predict(X_test)\nprint(classification_report(y_test, preds))\nplot_confusion_matrix(model6, X_test, y_test)","c4a81c9c":"from catboost import CatBoostClassifier\n\nmodel7 = CatBoostClassifier()\n\nmodel7.fit(X_train, y_train)","e3789716":"preds = model7.predict(X_test)\nprint(classification_report(y_test, preds))\nplot_confusion_matrix(model7, X_test, y_test)","e791c9bc":"preds = model7.predict(X_data)\nprint(classification_report(y_data, preds))\nplot_confusion_matrix(model7, X_data, y_data)","0f52529c":"preds = model7.predict(data.iloc[:,1:])\nprint(classification_report(data['Bankrupt?'], preds))\nplot_confusion_matrix(model7, data.iloc[:,1:], data['Bankrupt?'])","85d668da":"<h1> Company Bankruptcy Prediction<\/h1>\nThe data were collected from the Taiwan Economic Journal for the years 1999 to 2009. Company bankruptcy was defined based on the business regulations of the Taiwan Stock Exchange.\n\n<h2> Attribute information <\/h2>\n    \nY - Bankrupt? {0,1} - Output feature\n\nX1...X95 - Input features"}}