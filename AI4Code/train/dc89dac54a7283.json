{"cell_type":{"8cb5f755":"code","fb0c2975":"code","ec00dde6":"code","47869464":"code","987dce16":"code","174b8ee3":"code","1ddbadf1":"code","6475e87f":"code","b09ec7cf":"code","8b3b53cf":"code","ad8030c4":"code","3f08b2b6":"code","94aa3b70":"code","f240b05c":"code","7497ee75":"code","4e739fe9":"markdown","286cd703":"markdown","b3cbe873":"markdown","897188e9":"markdown","f0663d46":"markdown","7e2a769a":"markdown"},"source":{"8cb5f755":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fb0c2975":"import pandas as pd\nimport numpy as np\n\ndf=pd.read_csv(\"..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\")\ndf.info()","ec00dde6":"df1=df.drop(['iso_code','date','source_website'],axis=1)\ndf1","47869464":"country=list(df1['country'])\nvaccine=list(df1['vaccines'])\niso=list(df['iso_code'])\ndata={'country':country,\n      'vaccine':vaccine,\n     'iso':iso}\ndf2=pd.DataFrame(data)\ndf2","987dce16":"result=df2.drop_duplicates()\nresult","174b8ee3":"result.loc[result.iso.isnull(),'country']","1ddbadf1":"df.iloc[3739]","6475e87f":"result.fillna('GBR')","b09ec7cf":"import plotly.express as px\nfig=px.choropleth(result,locations=\"iso\",color=\"vaccine\",color_continuous_scale=px.colors.sequential.Plasma)\nfig.show()","8b3b53cf":"people_fully=df['people_fully_vaccinated']\ndata1={'iso':iso,\n      'country':country,\n      'fully_vaccinated':people_fully\n    \n}\npeople=pd.DataFrame(data1)\nnew=people.dropna()\nnew.head(30)\n","ad8030c4":"df4=pd.DataFrame(new.groupby('country')['fully_vaccinated'].sum())\ndf4.head()\n","3f08b2b6":"df4.sort_values(by=['fully_vaccinated'],inplace=True,ascending=False)\ndf4","94aa3b70":"per=df1.dropna()\nper.head()","f240b05c":"per['population_percentage']=per.groupby('country')['people_fully_vaccinated_per_hundred'].transform('sum')\nper.head()","7497ee75":"import matplotlib.pyplot as plt\nX=list(per['country'])\nY=list(per['population_percentage'])\nfig=plt.figure(figsize=(15,6))\nplt.xlabel('countries')\nplt.ylabel('population fully vaccinated')\nplt.title('population percentage fully vaccinated')\n\nplt.xticks(rotation=90)\nplt.bar(X,Y)\nplt.show()","4e739fe9":"**What vaccines are used and in which countries?**","286cd703":"#### **Calculation in terms of Fully Vaccinated people**","b3cbe873":"***The United States had majority of people fully vaccinated according to the given dataset***","897188e9":"**What country is vaccinated more people?**","f0663d46":"***As evident Israel had most of their population vaccinated***","7e2a769a":"### **What country is vaccinated a larger percent from its population?**"}}