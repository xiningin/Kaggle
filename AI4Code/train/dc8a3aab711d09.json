{"cell_type":{"5a6efd2e":"code","aaddeb3d":"code","1c50bd26":"code","dee72eb1":"code","44e24b66":"code","ea30f784":"code","3a1a1e85":"code","d9949d66":"code","18d34ba7":"code","d52c0357":"code","a3872d04":"code","81f20c4a":"code","cae66117":"code","a7a4861f":"code","d650ab47":"markdown","9457da84":"markdown","9af78c7c":"markdown"},"source":{"5a6efd2e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pylab as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","aaddeb3d":"dataFrame = pd.read_csv(\"..\/input\/kc_house_data.csv\")\ndataFrame.head()","1c50bd26":"dataFrame.info()","dee72eb1":"dataFrame.describe()","44e24b66":"dataFrame = dataFrame.drop([\"id\", \"date\"], axis= 1)","ea30f784":"f,ax = plt.subplots(figsize=(16, 16))\nsns.heatmap(dataFrame.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show()","3a1a1e85":"data_for_plotting = dataFrame[[\"sqft_living\", \"bedrooms\", \"sqft_lot\", \"sqft_above\", \"grade\", \"price\"]]\nplt.figure(figsize=(12,8))\nsns.pairplot(data_for_plotting, diag_kind= \"hist\", height= 3)\nplt.show()","d9949d66":"#dimension for regression : sqft_living, grade, sqft_above, sqft_living15\ny = dataFrame.price.values.reshape(-1,1)\nx_data = dataFrame.drop([\"price\"], axis = 1)\n\n#normalization\nx = (x_data - np.min(x_data))\/(np.max(x_data)-np.min(x_data)).values","18d34ba7":"from sklearn.model_selection import train_test_split\nx_train, x_test,y_train, y_test = train_test_split(x,y,test_size = 0.3,random_state = 42)","d52c0357":"from sklearn.linear_model import LinearRegression\n\nlinear_reg = LinearRegression()\nlinear_reg.fit(x_train[\"sqft_living\"].values.reshape(-1,1),y_train)\nfrom sklearn.metrics import r2_score\ny_head = linear_reg.predict(x_test[\"sqft_living\"].values.reshape(-1,1))\nprint(\"R2 score:\", r2_score(y_test, y_head))","a3872d04":"#plotting\nprediction_line = (np.arange(np.min(x_train[\"sqft_living\"]),np.max(x_train[\"sqft_living\"]),\n                   (np.max(x_train[\"sqft_living\"]) -np.min(x_train[\"sqft_living\"]))\/100 )).reshape(-1,1)\ny_head = linear_reg.predict(prediction_line)\n\nplt.figure(figsize=(8,6))\nplt.plot(prediction_line, y_head, color = \"blue\", label = \"Prediction\")\nplt.scatter(x_train[\"sqft_living\"],y_train, color=\"red\", alpha = 0.2, label= \"Train data\")\nplt.legend()\nplt.xlabel(\"Sqft\")\nplt.ylabel(\"Price\")\nplt.show()","81f20c4a":"#i select sqft_living, bedrooms, bathrooms, grade, sqft_above \nx_mlr_train = x_train[[\"sqft_living\", \"bedrooms\", \"bathrooms\", \"grade\", \"sqft_above\"]]\nx_mlr_test = x_test[[\"sqft_living\", \"bedrooms\", \"bathrooms\", \"grade\", \"sqft_above\"]]","cae66117":"multiple_lineer_regression = LinearRegression()\nmultiple_lineer_regression.fit(x_mlr_train, y_train)\n\nprint(\"Score : \", multiple_lineer_regression.score(x_mlr_test, y_test))","a7a4861f":"from sklearn.tree import DecisionTreeRegressor\n\ndecision_tree = DecisionTreeRegressor()\ndecision_tree.fit(x_train, y_train)\ny_head = decision_tree.predict(x_test)\nprint(\"R2 score\", r2_score(y_head, y_test))","d650ab47":"# Lineer Regression","9457da84":"# Multiple Linear Regression","9af78c7c":"# Decision Tree"}}