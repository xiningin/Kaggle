{"cell_type":{"84d4d167":"code","705218c8":"code","999c1e0c":"code","d46e24f1":"code","b561a82f":"code","df3b6876":"code","3c84fd4e":"code","bfccbbe1":"code","7c4f7167":"code","c0403f72":"code","3305ace6":"code","d4743fb7":"code","1f479962":"code","20ced729":"code","ef9ff415":"code","589a4c37":"code","df32e9dd":"code","7314895b":"markdown","73f5680d":"markdown","bf722a1d":"markdown","a65ac64b":"markdown","6cb39186":"markdown","280dc70b":"markdown","24171a0c":"markdown","8958c5f0":"markdown","2a37da03":"markdown","0c9a8c47":"markdown","b29586c1":"markdown"},"source":{"84d4d167":"# Supervised learning\n# Classification\n# 1. Naive Bias            - Simple\n# 2. Logistic regression   - Simple\n# 3. Decision tree         - Complex\n# 4. Random Forest         - Large amount of data","705218c8":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.metrics import accuracy_score\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split","999c1e0c":"iris = pd.read_csv(\"..\/input\/Iris.csv\")\nprint(\"Type: \"+str(type(iris)))\nprint(\"Names of column fields: \\n\"+str(iris.columns))\nprint(\"\\n Shape of dataset: \"+str(iris.shape))\nprint(\"Head of dataset: \")\nprint(iris.head())","d46e24f1":"print(\"\\n Brief description of data: \")\nprint(iris.describe())","b561a82f":"# Shuffling data\nfrom sklearn.utils import shuffle\niris = shuffle(iris)","df3b6876":"# Seperating target and features\nX = iris.iloc[:,1:5].values\ny = iris.iloc[:,5].values","3c84fd4e":"# Scaling and normalization\nX_scale = (X-X.mean(0))\/X.std(0)","bfccbbe1":"# Encoding categorical data\nlabelencoder_y = LabelEncoder()\ny_encode = labelencoder_y.fit_transform(y)\n\nprint(\"Name of classes: \"+str(labelencoder_y.classes_))\nprint(\"Classes: \"+str(np.unique(y_encode)))","7c4f7167":"print(y.reshape(150,1).shape)\nprint(X.shape)","c0403f72":"# Using pairplot available in the seaborn package to visualize data\ndata = np.hstack((X,y.reshape(150,1)))\ncolumns = ['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm','Species']\nsns.pairplot(pd.DataFrame(data= data, columns= columns),hue=\"Species\")","3305ace6":"X_train, X_test, y_train, y_test = train_test_split(X_scale, y_encode,test_size=0.3)","d4743fb7":"###### use gridsearch #######\nfrom sklearn.tree import DecisionTreeClassifier\nclf = DecisionTreeClassifier(criterion='entropy',random_state=14,\n                            splitter='best', max_depth=4, max_features=4, max_leaf_nodes=4)\nclf.fit(X_train, y_train)","1f479962":"y_pred = clf.predict(X_test)","20ced729":"score = accuracy_score(y_test, y_pred)\nprint(score)","ef9ff415":"from sklearn.metrics import confusion_matrix\ncnf_matrix = confusion_matrix(y_test, y_pred)\n\nfrom mlxtend.plotting import plot_confusion_matrix\nfig, ax = plot_confusion_matrix(conf_mat=confusion_matrix(y_test, y_pred),\n                                colorbar=True,\n                                show_absolute=False,\n                                show_normed=True)\nplt.xticks(np.arange(0,3,1),labelencoder_y.classes_,rotation=90,size=15)\nplt.yticks(np.arange(0,3,1),labelencoder_y.classes_,size=15)\nplt.xlabel('Predicted label',color='red',fontsize=20)\nplt.ylabel('True label',color='red',fontsize=20)\nplt.show()","589a4c37":"print(list(zip(iris.columns[1:5].values, clf.feature_importances_)))\nplt.barh(iris.columns[1:5].values, clf.feature_importances_)","df32e9dd":"# To graphicallyt show the decision trees\nimport graphviz\nfrom sklearn.tree import export_graphviz\ndot_data = export_graphviz(clf, out_file=None) \ngraph = graphviz.Source(dot_data) \ngraph.render(\"iris\")","7314895b":"## 8. Accuracy","73f5680d":"## 1. Importing necessary packages","bf722a1d":"## 6. Classification algorithm - Decision trees","a65ac64b":"## 9. Confusion Matrix","6cb39186":"## 2. Importing the dataset","280dc70b":"## 5. Splitting the data into test\/train","24171a0c":"# Classification using Decision trees on iris dataset","8958c5f0":"## 10. Importance of each feature","2a37da03":"## 4. Visualizing the data","0c9a8c47":"## 7. Prediction","b29586c1":"## 3. Preprocessing the data"}}