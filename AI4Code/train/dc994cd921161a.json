{"cell_type":{"84211328":"code","94ac3145":"code","0425a756":"code","b5e76a34":"code","c75e0e98":"code","369b7756":"code","73580597":"code","2250d079":"code","b5ab9f33":"code","e9dfd174":"code","f6e33e51":"code","5a7ae5c9":"code","2087c36e":"code","e4562fce":"code","be66c2cd":"code","d48d16a8":"code","6e68b299":"code","e20ebe76":"code","5a93eb09":"code","9a6ef48f":"code","57883d8b":"code","139edf32":"code","b971169d":"code","2dc874de":"code","d99fdf1f":"code","b31cde4b":"code","42590d96":"code","3adc33af":"code","aa73ab23":"code","24c25424":"code","beda4336":"code","8d53b2f4":"code","580bc24d":"code","468058a9":"code","9a64fc90":"code","43548961":"markdown","c0126ec6":"markdown","0ee84133":"markdown","f230169f":"markdown","f7e87276":"markdown","20fa6467":"markdown","4a320ce1":"markdown","7b2c074b":"markdown","f8921538":"markdown","fcdbfdda":"markdown","abc483e1":"markdown"},"source":{"84211328":"import pandas as pd\nimport sklearn\nimport matplotlib.pyplot as plt\nimport statistics","94ac3145":"import os\nos.listdir('\/kaggle\/input\/pmr3508-tarefa-1-3508-adult-dataset')","0425a756":"adult = pd.read_csv (\"\/kaggle\/input\/adult-data\/train_data.csv\",\n                    names=[\n                    \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n                    \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n                    \"Hours per Week\", \"Country\", \"Target\"],\n                    skipinitialspace=True,\n                    engine='python',\n                    na_values=\"?\",\n                    skiprows=1)\nadult.head()","b5e76a34":"adult.shape","c75e0e98":"print (\"[Age]\")\nprint (\" M\u00e9dia: %.02f\" %(statistics.mean(adult.iloc[:,0])))\nprint (\" Mediana: %.02f\" %(statistics.median(adult.iloc[:,0])))\nprint (\" Moda: %.02f\" %(statistics.mode(adult.iloc[:,0])))","369b7756":"adult[\"Workclass\"].value_counts().plot(kind=\"bar\")","73580597":"adult[\"Education\"].value_counts().plot(kind=\"bar\")","2250d079":"adult[\"Martial Status\"].value_counts().plot(kind=\"bar\")","b5ab9f33":"adult[\"Occupation\"].value_counts().plot(kind=\"bar\")","e9dfd174":"adult[\"Relationship\"].value_counts().plot(kind=\"bar\")","f6e33e51":"adult[\"Race\"].value_counts().plot(kind=\"bar\")","5a7ae5c9":"adult[\"Sex\"].value_counts().plot(kind=\"bar\")","2087c36e":"print (\"[Capital Gain]\")\nprint (\" M\u00e9dia: %.02f\" %(statistics.mean(adult.iloc[:,10])))\nprint (\" Mediana: %.02f\" %(statistics.median(adult.iloc[:,10])))\nprint (\" Moda: %.02f\" %(statistics.mode(adult.iloc[:,10])))","e4562fce":"print (\"[Capital Loss]\")\nprint (\" M\u00e9dia: %.02f\" %(statistics.mean(adult.iloc[:,11])))\nprint (\" Mediana: %.02f\" %(statistics.median(adult.iloc[:,11])))\nprint (\" Moda: %.02f\" %(statistics.mode(adult.iloc[:,11])))","be66c2cd":"adult[\"Country\"].value_counts()","d48d16a8":"adult.mode()","6e68b299":"nAdult = adult.fillna(adult.mode().iloc[0])\nnAdult.shape","e20ebe76":"Xadult = nAdult[[\"Age\", \"Education-Num\", \"Capital Gain\", \"Capital Loss\", \"Hours per Week\"]]\nYadult = nAdult.Target","5a93eb09":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score","9a6ef48f":"knn = KNeighborsClassifier (n_neighbors=3)","57883d8b":"scores = cross_val_score(knn, Xadult, Yadult, cv=10)\nscores","139edf32":"from sklearn import preprocessing\nnumAdult = nAdult.apply (preprocessing.LabelEncoder().fit_transform)","b971169d":"Xadult = numAdult[[\"Age\", \"Education-Num\", \"Workclass\", \"Martial Status\", \"Occupation\",\n                   \"Relationship\", \"Capital Gain\", \"Capital Loss\", \"Hours per Week\"]]\nYadult = nAdult.Target # Mantem o formato '<=50K'\/'>50K'","2dc874de":"knn = KNeighborsClassifier(n_neighbors=3)","d99fdf1f":"scores = cross_val_score(knn, Xadult, Yadult,cv=10)\nscores","b31cde4b":"#best_score = statistics.mean(scores)\n#k = 0\n#add = 30\n#\n#while add >= 1:\n#    while True:\n#        k += add\n#        knn = KNeighborsClassifier(n_neighbors=k)\n#        print (\"Calculando para k=%d\" %(k))\n#        score = statistics.mean(cross_val_score(knn, Xadult, Yadult, cv=10))\n#        if score > best_score:\n#            print (\" Bom. Score = %.04f\" %(score))\n#            best_score = score\n#        else:\n#            break\n#    k -= add\n#    add \/\/= 2\n#    \n#print (\"Melhor k=%d\" %(k))\n#print (\"M\u00e9dia do melhor: %.04f\" %(best_score))","42590d96":"knn = KNeighborsClassifier(n_neighbors=37)\nscores = cross_val_score(knn, Xadult, Yadult, cv=10)\nscores","3adc33af":"testAdult = pd.read_csv (\"\/kaggle\/input\/adult-data\/test_data.csv\",\n                         names=[\n                         \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n                         \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n                         \"Hours per Week\", \"Country\"],\n                         skipinitialspace=True,\n                         engine='python',\n                         na_values=\"?\",\n                         skiprows=1)\ntestAdult.head()","aa73ab23":"testAdult.mode()","24c25424":"nTestAdult = testAdult.fillna(testAdult.mode().iloc[0])\nnTestAdult.shape","beda4336":"numTestAdult = nTestAdult.apply (preprocessing.LabelEncoder().fit_transform)\nXtestAdult = numTestAdult[[\"Age\", \"Education-Num\", \"Workclass\", \"Martial Status\", \"Occupation\",\n                           \"Relationship\", \"Capital Gain\", \"Capital Loss\", \"Hours per Week\"]]","8d53b2f4":"knn.fit(Xadult,Yadult)","580bc24d":"YtestPred = knn.predict(XtestAdult)\nYtestPred","468058a9":"Id = pd.DataFrame({'Id' : list(range(len(YtestPred)))})\nincome = pd.DataFrame({'income' : YtestPred})\nresult = Id.join(income)\nresult","9a64fc90":"result.to_csv (path_or_buf=\"\/kaggle\/input\/submition.csv\",\n               index=False)\nos.listdir('\/kaggle\/input')","43548961":"## Treino 1. Sele\u00e7\u00e3o de atributos num\u00e9ricos, com kNN para k=3","c0126ec6":"## Treino n. Para k=37, usando dados do Treino 2\n\nO valor `k=37` foi obtido com o seguinte algoritmo:","0ee84133":"## Utilizando o classificador kNN para k=37","f230169f":"## Treino 2.  Passando alguns dados n\u00e3o num\u00e9ricos, com kNN para k=3","f7e87276":"Transformando os dados n\u00e3o num\u00e9ricos:","20fa6467":"**Utilizando a moda para lidar com dados faltantes:**","4a320ce1":"Direcionando os resultados:","7b2c074b":"# Base de treino","f8921538":"# Base de testes","fcdbfdda":"### PMR3508 - Tarefa 1 - Adult Dataset\n#### Introdu\u00e7\u00e3o ao Kaggle e ao algoritmo k-means","abc483e1":"Treinando:"}}