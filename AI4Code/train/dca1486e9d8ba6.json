{"cell_type":{"16073f78":"code","62db55bd":"code","4a653c0f":"code","4f117e30":"code","ffe843d0":"code","575d53fb":"code","1e07d3e1":"code","684cdf0b":"code","704eb363":"code","35e769a4":"markdown","8f37daaf":"markdown","54326705":"markdown","29f6c200":"markdown","0a8b9a87":"markdown","56b339d5":"markdown","1bab8031":"markdown","6397e3da":"markdown","6d4f2d58":"markdown","067a5279":"markdown","fa0cf4ac":"markdown"},"source":{"16073f78":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","62db55bd":"train = pd.read_csv('..\/input\/30-days-of-ml\/train.csv')\nvalid = pd.read_csv('..\/input\/a-way-of-finding-optimum-blending-weight\/validation.csv')","4a653c0f":"train = pd.concat([train, valid], axis=1)","4f117e30":"train[['cb','xgb','lgbm','target']].corr()","ffe843d0":"# I show this chart just to compare with the following chart.\nsns.scatterplot(data=train, x='target', y='target')","575d53fb":"plt.figure(figsize=(20,10))\nsns.scatterplot(data=train, x='xgb', y='target')","1e07d3e1":"train['residual'] = train['xgb'] - train['target']","684cdf0b":"plt.figure(figsize=(20,10))\nsns.histplot(train['residual'])","704eb363":"print(train['residual'].max())\nprint(train['residual'].min())","35e769a4":"Let's take a look at the prediction from the other perspective.","8f37daaf":"Then let's take a look at scatterplot between xgb prediction and target.","54326705":"The prediction is off by up to 7.76.","29f6c200":"## Let's visualize the predictions\nLet's have some intuitive understanding of our predictions. \n\nWe use RMSE to compete, but with just seeing the value, it's not easy telling how accurate the prediction is. (At least in my case\n\nSo let's visualize the predicted result. ","0a8b9a87":"The correlation is between predictions and target are like 0.25 or something. \n\nIf the correlation is 1.0, it means the prediction is perfect. \n\nIt looksthe predictions are not accurate. ","56b339d5":"## Correlation","1bab8031":"## Conclusion for now\n\nIt seems there's much space for improvement. \n\nWhen we see the residual plot, it looks pretty skewed. \n\nIt seems our model fails to predict targets which have small values.\n\nSo, how can we deal with it? or not?","6397e3da":"As we can see, again, the prediction doesn't look accurate.","6d4f2d58":"In this notebook, I use the result from [my former notebook](https:\/\/www.kaggle.com\/kokitanisaka\/a-way-of-finding-optimum-blending-weight). ","067a5279":"## Visualize with residual\n\nWe can calculate residual, subtracting target from a prediction. \n\nIf we visualize the residual, we can intuitionally see how accurate the result is.","fa0cf4ac":"## Visualize with Scatterplot\n\nThen we can visualize the correlation between prediction and the target.\n\nIf the prediction is perfect(which never happens), scatteplot should look like the following chart."}}