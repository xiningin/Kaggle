{"cell_type":{"35f67083":"code","8400b10c":"code","6d4fbf39":"code","b126125a":"code","62fc49f0":"code","abb2253b":"code","ca6d15e7":"code","6a47b48a":"code","6e92604f":"code","33fe7433":"code","2f5cdc5c":"code","8964d9e9":"code","de7bc006":"code","29765d18":"code","d653143f":"code","d0b478f1":"code","be6c39c0":"code","525c22d9":"code","cdbc3524":"code","010240b4":"code","d918614e":"code","2c389a69":"code","b9933dac":"code","6eedf358":"code","9ba80fff":"code","fc468253":"code","a7817a0e":"code","d63e4a2e":"code","08f1738e":"code","55194b3f":"code","ca7897c1":"code","6ce8aad6":"code","8385d27c":"code","a5b590e2":"code","284d0096":"code","59fce3ba":"code","84fec59d":"code","df2c7a70":"code","00c92c70":"code","5c329aaa":"code","2b54b354":"code","e27e1805":"code","83d8470c":"code","18252098":"code","89b6a082":"code","897bd1bc":"code","a9e11354":"code","6a95b784":"code","f8d8b6f8":"code","a474cdc6":"code","9228cf5b":"code","30b6d523":"code","32e7162c":"code","d46b3e32":"code","75bf69ec":"code","5c000ee1":"code","d71fba79":"code","dfcf4e26":"code","c5605e1e":"code","5b1f62f3":"code","73af868a":"code","9e46084e":"code","9b723afd":"code","005f7e2b":"code","29a75e3b":"code","67a5d5af":"code","11909e18":"code","1a154da4":"code","d13512c9":"code","4331e113":"code","cf63573d":"code","8d60d79b":"code","c51bfb31":"code","31bbf362":"code","d8dc44bf":"code","81651315":"markdown","ca771b6a":"markdown","f2c3c857":"markdown","8c6aab8b":"markdown","c25e5b30":"markdown","068758fc":"markdown","296b4bf2":"markdown","98c7f804":"markdown"},"source":{"35f67083":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","8400b10c":"df = pd.read_csv(\"..\/input\/california-housing-edited\/housing2 (1) (1).csv\", sep = \",\" , encoding=\"utf-8\")","6d4fbf39":"df","b126125a":"df.info() ","62fc49f0":"df.describe()","abb2253b":"df['households'].value_counts()\n#replace no ==> 0","ca6d15e7":"df['households'].replace(\"no\", np.nan , inplace=True)","6a47b48a":"df['ocean_proximity'].value_counts()\n#encode this column","6e92604f":"df['gender'].value_counts()\n#encode this column\n#But this column does not affect the data because data is not talking about people\n##So better drop this column","33fe7433":"df.drop(columns = 'gender',inplace=True)","2f5cdc5c":"df.isnull().sum()","8964d9e9":"sns.heatmap(df.isnull(), cbar = False)","de7bc006":"#Remove rows that have more than 3 NaN values\ndf.dropna(axis=0 ,thresh=8,inplace=True)\nsns.heatmap(df.isnull(), cbar = False)","29765d18":"df.info()","d653143f":"df.isnull().sum()","d0b478f1":"df['housing_median_age'].fillna(value= df['housing_median_age'].mean(),inplace=True)\n#fill null values in this column with the mean","be6c39c0":"df.isnull().sum()","525c22d9":"#drop missing values in population\ndf.dropna(subset=[\"population\"] , inplace = True)","cdbc3524":"df.isnull().sum()","010240b4":"df.describe(include = \"object\")","d918614e":"df['households'] = pd.to_numeric(df['households'])","2c389a69":"data = df['households'].dropna()\ndf['households'] = df['households'].fillna(pd.Series(np.random.choice(data , size = len(df.index))))","b9933dac":"df.isnull().sum()","6eedf358":"df['households'].fillna(value=df['households'].mean(),inplace=True)","9ba80fff":"df.isnull().sum()","fc468253":"df['median_income'].value_counts()\n#replace missing values with random values","a7817a0e":"fill = df['median_income'].dropna()\ndf['median_income'] = df['median_income'].fillna(pd.Series(np.random.choice(fill , size = len(df.index))))","d63e4a2e":"df.isnull().sum()","08f1738e":"df['total_bedrooms'].value_counts()","55194b3f":"b_rooms = df['total_bedrooms'].dropna()\ndf['total_bedrooms'] = df['total_bedrooms'].fillna(pd.Series(np.random.choice(b_rooms , size = len(df.index))))","ca7897c1":"df.isnull().sum()","6ce8aad6":"df['total_bedrooms'].fillna(value=df['total_bedrooms'].mean(),inplace=True)","8385d27c":"df.isnull().sum()","a5b590e2":"plt.scatter(data = df , x=\"longitude\" , y=\"latitude\" , c =df[\"median_house_value\"]  )\nplt.colorbar ()\nplt.show()\n#Higher House value ==> near pay","284d0096":"df.info()","59fce3ba":"plt.figure(figsize=(11,11))\nsns.heatmap(df.corr() ,annot = True)","84fec59d":"df[\"ocean_proximity\"] = df[\"ocean_proximity\"].astype('category')\ndf[\"ocean_proximity_encoded\"] = df[\"ocean_proximity\"].cat.codes","df2c7a70":"df['total_bedrooms']=df['total_bedrooms'].astype('int64')","00c92c70":"plt.figure(figsize=(10,10))\nsns.heatmap(df.corr() ,annot = True)","5c329aaa":"df.hist(bins=120 , figsize=(14,16))\nplt.show()","2b54b354":"from scipy.stats import skew\nprint(skew(df['total_rooms']))\nsns.histplot(df['total_rooms'])","e27e1805":"df['total_rooms']= np.log(df['total_rooms'])\nprint(skew(df['total_rooms']))\nsns.histplot(df['total_rooms'])","83d8470c":"print(skew(df['total_bedrooms']))\nsns.histplot(df['total_bedrooms'])","18252098":"df['total_bedrooms']= np.log(df['total_bedrooms'])\nprint(skew(df['total_bedrooms']))\nsns.histplot(df['total_bedrooms'])","89b6a082":"print(skew(df['population']))\nsns.histplot(df['population'])","897bd1bc":"df['population']= np.log(df['population'])\nprint(skew(df['population']))\nsns.histplot(df['population'])","a9e11354":"print(skew(df['households']))\nsns.histplot(df['households'])","6a95b784":"df['households']= np.log(df['households'])\nprint(skew(df['households']))\nsns.histplot(df['households'])","f8d8b6f8":"plt.figure(figsize=(10,10))\nsns.heatmap(df.corr() ,annot = True)","a474cdc6":"df.plot(kind = \"box\" , subplots = True , figsize = (18,15) ,  layout = (4,3))\nplt.show()","9228cf5b":"max_tr,min_tr = df['total_rooms'].quantile([0.99,0.01])\ndf['total_rooms'].where(df['total_rooms'] <= max_tr, max_tr ,inplace=True)\ndf['total_rooms'].where(df['total_rooms'] >= min_tr,min_tr ,inplace=True)\nsns.boxplot(df['total_rooms'])","30b6d523":"max_tbr,min_tbr = df['total_bedrooms'].quantile([0.99,0.01])\ndf['total_bedrooms'].where(df['total_bedrooms'] <= max_tbr, max_tbr ,inplace=True)\ndf['total_bedrooms'].where(df['total_bedrooms'] >= min_tbr,min_tbr ,inplace=True)\nsns.boxplot(df['total_bedrooms'])","32e7162c":"max_pop,min_pop = df['population'].quantile([0.99,0.01])\ndf['population'].where(df['population'] <= max_pop, max_pop ,inplace=True)\ndf['population'].where(df['population'] >= min_pop,min_pop ,inplace=True)\nsns.boxplot(df['population'])","d46b3e32":"max_hh,min_hh = df['households'].quantile([0.99,0.01])\ndf['households'].where(df['households'] <= max_hh, max_hh ,inplace=True)\ndf['households'].where(df['households'] >= min_hh,min_hh ,inplace=True)\nsns.boxplot(df['households'])","75bf69ec":"df.columns","5c000ee1":"from statsmodels.stats.outliers_influence import variance_inflation_factor\nvariables = df[['longitude','latitude','housing_median_age','total_rooms','total_bedrooms','population','households']]\nvif = pd.DataFrame()\nvif[\"VIF\"] = [variance_inflation_factor(variables.values, i) for i in range(variables.shape[1])]\nvif[\"Features\"] = variables.columns\nvif","d71fba79":"#df['R_b'] = df['total_bedrooms']\/df['total_bedrooms']","dfcf4e26":"#df['hh_p'] = df['households']\/df['population']","c5605e1e":"#df['la_lo'] = df['latitude']\/df['longitude']","5b1f62f3":"df.columns","73af868a":"df.drop([\"ocean_proximity\"] , axis = 1 , inplace = True)\ndf.drop([\"ocean_proximity_encoded\"] , axis = 1 , inplace = True)\n#df.drop([\"longitude\"] , axis = 1 , inplace = True)\n#df.drop([\"latitude\"] , axis = 1 , inplace = True)\n#df.drop([\"total_rooms\"] , axis = 1 , inplace = True)\n#df.drop([\"total_bedrooms\"] , axis = 1 , inplace = True)\n#df.drop([\"population\"] , axis = 1 , inplace = True)\n#df.drop([\"households\"] , axis = 1 , inplace = True)\n\n#dealing with Multicollinearity but it's not effictive\n\ndf = df.reset_index(drop= True)","9e46084e":"X = df.drop(\"median_house_value\" , axis = 1).values\ny = df['median_house_value'].values","9b723afd":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y, test_size=0.20 , random_state=10)","005f7e2b":"from sklearn.preprocessing import StandardScaler\nscale = StandardScaler ()\nX_train = scale.fit_transform(X_train)\nX_test = scale.fit_transform(X_test)","29a75e3b":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(X_train,y_train)","67a5d5af":"lr.score(X_train,y_train)","11909e18":"lr.score(X_test,y_test)","1a154da4":"from sklearn.linear_model import Ridge\nrid = Ridge()","d13512c9":"rid.fit(X_train,y_train)","4331e113":"rid.score(X_train,y_train)","cf63573d":"rid.score(X_test,y_test)","8d60d79b":"y_pred = lr.predict(X_test)","c51bfb31":"y_pred2 = rid.predict(X_test)","31bbf362":"from sklearn.metrics import r2_score\nr2 = r2_score(y_test , y_pred)\nr2","d8dc44bf":"import statsmodels.api as sm\nfrom scipy import stats\nX2 = sm.add_constant(X)\nest = sm.OLS(y,X2)\nest2 = est.fit()\nprint(est2.summary())","81651315":"# Outliers","ca771b6a":"## Multicollinearity occurs when independent variables in a regression model are correlated. This correlation is a problem because independent variables should be independent. If the degree of correlation between variables is high enough, it can cause problems when you fit the model and interpret the results.","f2c3c857":"# **All data encoded","8c6aab8b":"#  \u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640","c25e5b30":"# **All missing values processed","068758fc":"# Missing values processing","296b4bf2":"# \u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640","98c7f804":"# Encoding objects"}}