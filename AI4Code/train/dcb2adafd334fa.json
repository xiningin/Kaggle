{"cell_type":{"a04e8bb4":"code","8f809afe":"code","7069ced7":"code","7c9d5143":"code","83cc0a34":"code","63c5ff1b":"code","bfcec074":"code","be999fd2":"code","b82d72b5":"code","e855d20c":"code","b0cdf078":"code","ceffea00":"code","a5df5540":"code","7964bcf2":"code","345e4aba":"code","8fee9566":"code","1c7435bc":"code","47171c1a":"code","472da337":"code","9db6feb4":"code","3f3b56fc":"code","f8ad6604":"markdown"},"source":{"a04e8bb4":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt \nimport cv2\nimport warnings\nwarnings.filterwarnings('ignore')\nimport keras \nimport os \nfrom tqdm import tqdm\n","8f809afe":"train=pd.read_csv('..\/input\/train.csv')#load the train cvs file \ntrain.head(4)#checking the few line of train","7069ced7":"train.describe()#description of train file ","7c9d5143":"plt.figure(figsize=(7,7))\nsns.countplot(train['has_cactus'])\nplt.show()","83cc0a34":"#let check some image file from train file \nimage_file=os.listdir(\"..\/input\/train\/train\")","63c5ff1b":"image_file[0]#image name \n","bfcec074":"is_cactus=[]\nfor i in tqdm(range(len(train['id']))):\n    for j in range(len(train['id'])):\n        if(image_file[i]==train['id'][j]):\n            is_cactus.append(train['has_cactus'][j])","be999fd2":"df = pd.DataFrame(list(zip(image_file,is_cactus,)), columns =['image_name', 'is_cactus']) ","b82d72b5":"# let prepare the Data For \npath=\"..\/input\/train\/train\/\"+image_file[0]\nimport cv2","e855d20c":"image=cv2.imread(path)\nplt.imshow(image)","b0cdf078":"trainig_data=[]\nfor i in  tqdm(range(len(df['is_cactus']))):\n    p=\"..\/input\/train\/train\/\"+image_file[i]\n    image=cv2.imread(p,cv2.IMREAD_COLOR)\n    image=image\/255\n    trainig_data.append( image)\n\nX=np.array(trainig_data)    ","ceffea00":"Y=df['is_cactus']\n","a5df5540":"import keras\nfrom sklearn.model_selection import train_test_split","7964bcf2":"X_train,X_val,y_train,y_val =train_test_split(X,Y,test_size=0.2,random_state=2)","345e4aba":"print(\"Shape of X  train\",X_train.shape)\nprint(\"Shape of X validate \",X_val.shape)\nprint(\"Shape of Y train\",y_train.shape)\nprint(\"Shape of Y validate\",y_val.shape)","8fee9566":"from keras.preprocessing.image import ImageDataGenerator \nfrom keras.models import Sequential \nfrom keras.layers import Conv2D, MaxPooling2D \nfrom keras.layers import Activation, Dropout, Flatten, Dense \nfrom keras import backend as K","1c7435bc":"model = Sequential()\nmodel.add(Conv2D(32, (3, 3), activation='relu', kernel_initializer='he_uniform', padding='same', input_shape=(32, 32, 3)))\nmodel.add(MaxPooling2D((2, 2)))\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu', kernel_initializer='he_uniform'))\nmodel.add(Dense(1, activation='sigmoid'))","47171c1a":"model.compile(optimizer='Adadelta', loss='binary_crossentropy', metrics=['accuracy'])","472da337":"history=model.fit(X_train,y_train, epochs=30,batch_size=32,validation_data=(X_val,y_val))","9db6feb4":"plt.figure(figsize=(10,7))\nplt.title('Loss')\nplt.plot(history.history['loss'], label='train')\nplt.plot(history.history['val_loss'], label='test')\nplt.legend()\nplt.show();","3f3b56fc":"plt.figure(figsize=(10,7))\nplt.title('Accuracy')\nplt.plot(history.history['acc'], label='train')\nplt.plot(history.history['val_acc'], label='test')\nplt.legend()\nplt.show();","f8ad6604":"Count each type of cactus in our Data set"}}