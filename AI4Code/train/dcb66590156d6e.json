{"cell_type":{"c34bbd77":"code","e70288f5":"code","05db283c":"code","dc57e96d":"code","5ed00036":"code","a350a1d2":"code","586a3d8e":"code","f9dced34":"code","0b74c5c1":"code","e6d9bda7":"code","9e09408a":"code","aabb1f54":"code","6f0de5fd":"code","60c122e9":"code","4b98778c":"code","2adb0085":"code","1972b774":"code","9bda83d3":"code","9b21025a":"code","515434c4":"code","cdbb852d":"code","51612986":"code","1897bd55":"code","a4413b4c":"code","41bd1679":"code","ec167e74":"code","b0f1834a":"code","bbc8d614":"code","2f779867":"code","6e379b3a":"code","3e427b21":"code","9c492cd1":"code","ed6a9a1d":"code","b19c97fc":"code","f6b5f6df":"code","d295d239":"code","34fd460e":"code","8021c4ca":"code","74a8ddf8":"code","74b5b0d3":"code","89c784ef":"code","5c24258f":"code","03abcf04":"code","a7449175":"code","9883263e":"code","3bef40f5":"code","47e82b2b":"code","b1f4917c":"code","bd7b8419":"code","6b54c19f":"code","fc94a9e3":"code","211b2bbf":"code","5e1e9cd2":"code","f7eb9920":"code","9cdf1aa7":"code","b65b792a":"code","5c688cdb":"code","7d2055bb":"code","21a92a08":"code","cfdc70d2":"code","ddb67b37":"code","0d0b9bcd":"code","198e29da":"code","086e9444":"code","56b5bf2d":"code","f3b64970":"code","9f30e034":"code","52830587":"code","e682992a":"code","b88da7c0":"code","2dcab62f":"code","ceba7598":"code","4aaf630d":"code","b9a8f34b":"code","0f498779":"code","c288febb":"code","1a791ed6":"code","5a5c480d":"code","c7ef32a7":"code","dc0cf23c":"code","c46a52d0":"code","90fa903b":"code","f4651bc1":"code","459cdc16":"code","4f1a616b":"code","7074c1b2":"code","fdc04caa":"code","53c1b8f5":"code","b309c86c":"code","501554dc":"code","34b2858e":"code","150f0c11":"code","6ef44e90":"code","9b612a15":"code","4e034241":"code","d8137686":"code","2ceaaf43":"code","9d624f8d":"code","83adc3fc":"code","e63635f1":"code","c00e9a95":"code","2a5d621b":"code","32957f68":"code","d8ce778e":"code","e2a7d487":"code","201029ca":"code","36142b46":"code","9160e947":"code","a4215967":"code","118f3bb0":"code","f9aa67d3":"code","369ab53c":"code","c799cc7a":"code","9b23c5c6":"code","f69bcd26":"code","bc20c086":"code","d0813a53":"code","89810678":"code","dee9d01f":"code","fbdb956b":"code","8fa4bf5a":"code","6a1ec6c0":"code","626af8e9":"markdown","37fa3ae1":"markdown","039dd356":"markdown","19620f84":"markdown","3889d4c6":"markdown","48d76028":"markdown","81ffa834":"markdown","06e5e428":"markdown","5033a0d2":"markdown","8b68a578":"markdown","2a48110e":"markdown","e900d4a5":"markdown","13cf003b":"markdown","d0d510aa":"markdown","9e0c13ed":"markdown","0e368370":"markdown","46c4f03e":"markdown","19d34e08":"markdown","8eebeb37":"markdown","cf109217":"markdown","8dbabdde":"markdown","f0c53f9b":"markdown","c1e1fbc3":"markdown","bc86b8d7":"markdown","6f795a56":"markdown","e60aaf10":"markdown","954589aa":"markdown","3eed6c5e":"markdown","565e2b79":"markdown","79a5b3e6":"markdown","5ae7018e":"markdown","f0493535":"markdown","67fe79a1":"markdown","f9c0d36d":"markdown","238e4613":"markdown"},"source":{"c34bbd77":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport datetime\nimport copy\nimport matplotlib as mpl\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom dateutil.parser import parse\nimport statsmodels.api as sm\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nimport collections\nfrom sklearn.model_selection import (\n    train_test_split,\n    cross_val_score\n)\nfrom xgboost import XGBRegressor\nfrom xgboost import plot_importance\nfrom lightgbm import LGBMRegressor\nfrom lightgbm import plot_importance\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt","e70288f5":"train = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv\")\ntest = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/test.csv\")\nsample_submission = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv\")\nitems = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/items.csv\")\nitem_categories = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv\")\nshops = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/shops.csv\")","05db283c":"# let's do the date column in correct format\ntrain['date']=train['date'].apply(lambda x:datetime.datetime.strptime(x, '%d.%m.%Y'))","dc57e96d":"print('train:',train.shape,'test:',test.shape,'items:',items.shape,'item_categories:',item_categories.shape,'shop:',shops.shape)","5ed00036":"#add information about category\ntrain = train.join(items, on='item_id', rsuffix='_').drop(['item_id_', 'item_name'], axis=1)","a350a1d2":"train.head()","586a3d8e":"train[train['item_price']<=0]","f9dced34":"train[(train.shop_id==32)&(train.item_id==2973)&(train.date_block_num==4)]","0b74c5c1":"train.loc[train.item_price<0,'item_price'] = train[(train.shop_id==32)&(train.item_id==2973)&(train.date_block_num==4)].item_price.mean()","e6d9bda7":"train_monthly = train.sort_values('date').groupby(['date_block_num', 'shop_id','item_category_id', 'item_id'], as_index=False)","9e09408a":"train_monthly = train_monthly.agg({'item_price':['median', 'mean'], 'item_cnt_day':['sum', 'count']})","aabb1f54":"train_monthly.head(3)","6f0de5fd":"train_monthly.columns = ['date_block_num', 'shop_id', 'item_category_id','item_id', 'item_price_median', 'item_price_mean', 'item_cnt', 'transactions']","60c122e9":"train_monthly.head(3)","4b98778c":"train_monthly_by_category = train_monthly.groupby(['date_block_num','shop_id', 'item_category_id'], as_index=False)","2adb0085":"train_monthly_by_category = train_monthly_by_category.agg({'item_price_median':['mean'], 'item_price_mean':['mean'],'item_cnt':['sum', 'mean'], 'transactions': ['mean']})","1972b774":"train_monthly_by_category.head()","9bda83d3":"train_cat_no_shop = train_monthly.groupby(['date_block_num', 'item_category_id'], as_index=False)","9b21025a":"train_cat_no_shop = train_cat_no_shop.agg({'item_price_median':['mean'], 'item_price_mean':['mean'],'item_cnt':['sum', 'mean'], 'transactions': ['mean']})","515434c4":"train_cat_no_shop.head(3)","cdbb852d":"train_monthly['year'] = train_monthly['date_block_num'].apply(lambda x: ((x\/\/12+2013)))\ntrain_monthly['month'] = train_monthly['date_block_num'].apply(lambda x: (x%12+1))","51612986":"train_monthly_by_category['year'] = train_monthly_by_category['date_block_num'].apply(lambda x: ((x\/\/12+2013)))\ntrain_monthly_by_category['month'] = train_monthly_by_category['date_block_num'].apply(lambda x: (x%12+1))","1897bd55":"train_cat_no_shop['year'] = train_cat_no_shop['date_block_num'].apply(lambda x: ((x\/\/12+2013)))\ntrain_cat_no_shop['month'] = train_cat_no_shop['date_block_num'].apply(lambda x: (x%12+1))","a4413b4c":"train_monthly_by_category.columns = ['date_block_num', 'shop_id','item_category_id','item_price_median', 'item_price_mean', 'item_cnt_sum', 'item_cnt', 'transactions', 'year', 'month']\ntrain_cat_no_shop.columns = ['date_block_num', 'item_category_id','item_price_median', 'item_price_mean', 'item_cnt_sum', 'item_cnt', 'transactions', 'year', 'month']","41bd1679":"train_monthly.head(3)","ec167e74":"train_cat_no_shop.head(3)","b0f1834a":"train_monthly_by_category.head(3)","bbc8d614":"# train_monthly.query('item_cnt >= 0 and item_cnt <= 20')\n# train_monthly.query('item_cnt <= 0 or item_cnt >= 20')","2f779867":"train_monthly.shape","6e379b3a":"train_monthly[train_monthly['item_cnt']>1000]","3e427b21":"uniq_pairs = train_monthly.groupby(['shop_id','item_id']).size().reset_index()\nuniq_pairs.shape","9c492cd1":"empty_df = pd.DataFrame(index = uniq_pairs.index, columns = ['date_block_num','shop_id','item_id'])\nempty_df[['shop_id', 'item_id']] = uniq_pairs[['shop_id','item_id']]\nempty_df_2 = pd.DataFrame(columns = ['date_block_num','shop_id','item_id'])\nfor i in range(34):\n    empty_df_1 = empty_df.copy()\n    empty_df_1['date_block_num'] = i\n    empty_df_2 = pd.concat([empty_df_2, empty_df_1])","ed6a9a1d":"empty_df_2 = empty_df_2.reset_index()","b19c97fc":"empty_df_2.head()","f6b5f6df":"full_train_monthly = empty_df_2.merge(train_monthly,on=['date_block_num','shop_id', 'item_id'], how='left').fillna(0).drop(['index'], axis=1)","d295d239":"full_train_monthly['year'] = full_train_monthly['date_block_num'].apply(lambda x: ((x\/\/12+2013)))\nfull_train_monthly['month'] = full_train_monthly['date_block_num'].apply(lambda x: (x%12+1))","34fd460e":"full_train_monthly = full_train_monthly.join(items, on='item_id', rsuffix='_').drop(['item_id_', 'item_name', 'item_category_id'], axis=1)\nfull_train_monthly = full_train_monthly.rename(columns={'item_category_id_':'item_category_id'})","8021c4ca":"full_train_monthly.shape","74a8ddf8":"print('Table by months shape:', train_monthly.shape, 'Full table by months shape:', full_train_monthly.shape)","74b5b0d3":"uniq_pairs_cat = train_monthly_by_category.groupby(['shop_id','item_category_id']).size().reset_index()","89c784ef":"empty_df = pd.DataFrame(index = uniq_pairs_cat.index, columns = ['date_block_num','shop_id','item_category_id'])\nempty_df[['shop_id', 'item_category_id']] = uniq_pairs_cat[['shop_id','item_category_id']]\nempty_df_2 = pd.DataFrame(columns = ['date_block_num','shop_id','item_category_id'])\nfor i in range(34):\n    empty_df_1 = empty_df.copy()\n    empty_df_1['date_block_num'] = i\n    empty_df_2 = pd.concat([empty_df_2, empty_df_1])","5c24258f":"empty_df_2 = empty_df_2.reset_index()","03abcf04":"# print('Table by categories shape:', train_monthly_by_category.shape, 'Full table by categories shape:', empty_df_2.shape)","a7449175":"full_train_monthly_by_category = empty_df_2.merge(train_monthly_by_category, \n                                      on=['date_block_num','shop_id', 'item_category_id'],how='left').fillna(0).drop(['index'], axis=1)","9883263e":"full_train_monthly_by_category.head(3)","3bef40f5":"uniq_cat = train_cat_no_shop['item_category_id'].unique()","47e82b2b":"empty_df = pd.DataFrame(index = uniq_cat, columns = ['date_block_num','item_category_id'])\nempty_df['item_category_id'] = uniq_cat\nempty_df_2 = pd.DataFrame(columns = ['date_block_num','item_category_id'])\nfor i in range(34):\n    empty_df_1 = empty_df.copy()\n    empty_df_1['date_block_num'] = i\n    empty_df_2 = pd.concat([empty_df_2, empty_df_1])","b1f4917c":"empty_df_2 = empty_df_2.reset_index()","bd7b8419":"full_train_cat_no_shop = empty_df_2.merge(train_cat_no_shop, \n                                      on=['date_block_num', 'item_category_id'],how='left').fillna(0).drop(['index'], axis=1)","6b54c19f":"full_train_cat_no_shop.head()","fc94a9e3":"full_train_monthly_by_category['year'] = full_train_monthly_by_category['date_block_num'].apply(lambda x: ((x\/\/12+2013)))\nfull_train_monthly_by_category['month'] = full_train_monthly_by_category['date_block_num'].apply(lambda x: (x%12+1))\nfull_train_cat_no_shop['year'] = full_train_cat_no_shop['date_block_num'].apply(lambda x: ((x\/\/12+2013)))\nfull_train_cat_no_shop['month'] = full_train_cat_no_shop['date_block_num'].apply(lambda x: (x%12+1))","211b2bbf":"full_train_monthly_by_category.head(2)","5e1e9cd2":"full_train_monthly['item_cnt_next_month'] = full_train_monthly.sort_values('date_block_num').groupby(['shop_id','item_id'])['item_cnt'].shift(-1)","f7eb9920":"full_train_monthly.head(3)","9cdf1aa7":"# full_train_monthly[(full_train_monthly.shop_id==0)&(full_train_monthly.item_id==5572)]","b65b792a":"full_train_monthly_by_category['item_cnt_next_month'] = full_train_monthly_by_category.sort_values('date_block_num').groupby(['shop_id', 'item_category_id'])['item_cnt'].shift(-1)","5c688cdb":"full_train_cat_no_shop['item_cnt_next_month'] = full_train_cat_no_shop.sort_values('date_block_num').groupby(['item_category_id'])['item_cnt'].shift(-1)","7d2055bb":"lag_list = [1,2,3,4,5,6,11,23]\n\nfor lag in lag_list:\n    ft_name = ('item_cnt_shifted%s' % lag)\n    full_train_monthly[ft_name] = full_train_monthly.sort_values('date_block_num').groupby(['shop_id', 'item_id'])['item_cnt'].shift(lag)","21a92a08":"full_train_monthly.head()","cfdc70d2":"lag_list = [1,2,3,4,5,6,11,23]\n\nfor lag in lag_list:\n    ft_name = ('item_cnt_shifted%s' % lag)\n    full_train_monthly_by_category[ft_name] = full_train_monthly_by_category.sort_values('date_block_num').groupby(['shop_id', 'item_category_id'])['item_cnt'].shift(lag)","ddb67b37":"full_train_monthly_by_category.head()","0d0b9bcd":"for lag in lag_list:\n    ft_name = ('item_cnt_shifted%s' % lag)\n    full_train_cat_no_shop[ft_name] = full_train_cat_no_shop.sort_values('date_block_num').groupby(['item_category_id'])['item_cnt'].shift(lag)","198e29da":"full_train_cat_no_shop.head()","086e9444":"for lag in lag_list:\n    ft_name = ('item_price_mean_shifted%s' % lag)\n    full_train_monthly[ft_name] = full_train_monthly.sort_values('date_block_num').groupby(['shop_id','item_id'])['item_price_mean'].shift(lag)","56b5bf2d":"full_train_monthly.head()","f3b64970":"for lag in lag_list:\n    ft_name = ('item_price_mean_shifted%s' % lag)\n    full_train_monthly_by_category[ft_name] = full_train_monthly_by_category.sort_values('date_block_num').groupby(['shop_id','item_category_id'])['item_price_mean'].shift(lag)","9f30e034":"full_train_monthly_by_category.head(3)","52830587":"for lag in lag_list:\n    ft_name = ('item_price_mean_shifted%s' % lag)\n    full_train_cat_no_shop[ft_name] = full_train_cat_no_shop.sort_values('date_block_num').groupby(['item_category_id'])['item_price_mean'].shift(lag)","e682992a":"full_train_cat_no_shop.head(3)","b88da7c0":"full_train_monthly  = pd.concat(\n          [full_train_monthly, pd.get_dummies(full_train_monthly['year'], prefix='year')],axis=1\n        )\nfull_train_monthly  = pd.concat(\n          [full_train_monthly, pd.get_dummies(full_train_monthly['month'], prefix='month')],axis=1\n        )","2dcab62f":"full_train_monthly.shape","ceba7598":"full_train_monthly_by_category = pd.concat(\n          [full_train_monthly_by_category, pd.get_dummies(full_train_monthly_by_category['year'], prefix='year')],axis=1\n        )\nfull_train_monthly_by_category = pd.concat(\n          [full_train_monthly_by_category, pd.get_dummies(full_train_monthly_by_category['month'], prefix='month')],axis=1\n        )","4aaf630d":"full_train_monthly_by_category.shape","b9a8f34b":"full_train_cat_no_shop = pd.concat(\n          [full_train_cat_no_shop, pd.get_dummies(full_train_cat_no_shop['year'], prefix='year')],axis=1\n        )\nfull_train_cat_no_shop = pd.concat(\n          [full_train_cat_no_shop, pd.get_dummies(full_train_cat_no_shop['month'], prefix='month')],axis=1\n        )","0f498779":"full_train_cat_no_shop.shape","c288febb":"shop_id_test = test['shop_id'].unique()\nitem_id_test = test['item_id'].unique()","1a791ed6":"t_train = full_train_monthly[full_train_monthly['shop_id'].isin(shop_id_test)]\nt_train.shape","5a5c480d":"t_train = t_train[t_train['item_id'].isin(item_id_test)]\nt_train.shape","c7ef32a7":"t = test.copy()\nt = t.join(items, on='item_id', rsuffix='_').drop(['item_id_', 'item_name'], axis=1)","dc0cf23c":"print('Train before reduction:',full_train_monthly.shape, 'Train after reduction:', t_train.shape)","c46a52d0":"t_train_cat = full_train_monthly_by_category.copy()","90fa903b":"%%time\nm_test = pd.merge(t, t_train[t_train.date_block_num==33], how = 'left', on=['shop_id', 'item_id'])\nm_test = m_test.rename(columns={'item_category_id_x':'item_category_id'})\nm_test = m_test.drop('item_category_id_y', axis=1)","f4651bc1":"m_test.head(3)","459cdc16":"%%time\n# \u0434\u043b\u044f \u0442\u0435\u0445 \u043f\u0430\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 t_train, \u0431\u0435\u0440\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b t_train_cat\n# \u043f\u043e \u0441\u0440\u0435\u0434\u043d\u0438\u043c \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c \u0432 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438:\n\nnull_test = pd.merge(m_test[m_test['item_cnt'].isnull()][['ID', 'shop_id', 'item_id','item_category_id']],t_train_cat[t_train_cat.date_block_num==33],how = 'left',on = ['shop_id', 'item_category_id'])\nnull_test.index = null_test['ID']\nfor i in m_test.columns:\n    m_test.loc[m_test.ID.isin(null_test.ID),i] = null_test[i]","4f1a616b":"m_test[m_test['item_cnt'].isnull()].shape","7074c1b2":"# # \u0434\u043b\u044f \u0442\u0435\u0445 \u043f\u0430\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u043d\u0438 \u0432 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 t_train, \u043d\u0438 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u043f\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c \u0432 \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u0435 \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c t_train_cat,\n# # \u0431\u0435\u0440\u0435\u043c \u0441\u0440\u0435\u0434\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0432 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043f\u043e \u0432\u0441\u0435\u043c \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u0430\u043c:\n# null_test_2 = pd.merge(m_test[m_test['item_cnt'].isnull()][['ID', 'shop_id', 'item_id','item_category_id']],\n#                      full_train_cat_no_shop[full_train_cat_no_shop.date_block_num==33], \n#                                          how = 'left',\n#                                          on = ['item_category_id']\n#                      )\n# null_test_2.index = null_test_2['ID']\n# for i in m_test.columns:\n#     m_test.loc[m_test.ID.isin(null_test_2.ID),\n#                                       i] = null_test_2[i]","fdc04caa":"m_test.loc[m_test['item_cnt'].isnull(),'year'] = 2015\nm_test.loc[m_test['item_cnt'].isnull(),'month'] = 10\nm_test.loc[m_test['item_cnt'].isnull(),'month_10'] = 1\nm_test.loc[m_test['item_cnt'].isnull(),'date_block_num'] = 33","53c1b8f5":"m_test = m_test.fillna(0)","b309c86c":"m_test.head()","501554dc":"drop_cols = ['date_block_num',\n             'ID',\n             'shop_id',\n             'item_id',\n             'item_price_median',\n             'year',\n             'month',\n             'item_cnt_next_month',\n             'item_category_id']\nX_test = m_test.drop(drop_cols, axis=1)","34b2858e":"X_test.to_csv('X_test.csv', index=False)","150f0c11":"# t_train.to_csv('t_train.csv', index=False)","6ef44e90":"# full_train_cat_no_shop.to_csv('full_train_cat_no_shop.csv', index=False)","9b612a15":"# full_train_monthly.to_csv('full_train_monthly.csv', index=False)","4e034241":"# full_train_monthly_by_category.to_csv('full_train_monthly_by_category.csv', index=False)","d8137686":"# X_test = pd.read_csv('X_test.csv')\n# test = pd.read_csv('test.csv')\n# t_train = pd.read_csv('t_train.csv')\n# t_train_cat = pd.read_csv('t_train_cat.csv')\n# full_train_cat_no_shop = pd.read_csv('full_train_cat_no_shop.csv')","2ceaaf43":"# full_train_monthly = pd.read_csv('full_train_monthly.csv')\n# full_train_monthly_by_category = pd.read_csv('full_train_monthly_by_category.csv')","9d624f8d":"%%time\ntrain_set = t_train.query('date_block_num>=6 and date_block_num <33').copy()\ntrain_set_cat = t_train_cat.query('date_block_num>=6 and date_block_num <33').copy()","83adc3fc":"rand_n = train_set.query('date_block_num==6').shape[0]\nprint(rand_n)\nfor_val = np.random.choice(rand_n, size=int(0.2*rand_n), replace = False)\nprint(for_val, for_val.shape)","e63635f1":"# np.setxor1d: Find the set exclusive-or of two arrays.\n# Return the sorted, unique values that are in only one (not both) of the input arrays.\n\nfor_fit = np.setxor1d(np.arange(rand_n), for_val)\nprint(for_fit, for_fit.shape)","c00e9a95":"x1 = train_set[train_set['date_block_num']==6].reset_index().iloc[for_val]\nfor i in range(7,33):\n    x = train_set[train_set['date_block_num']==i].reset_index().iloc[for_val]\n    x1 = x1.append(x)\nval_data = x1.copy()","2a5d621b":"x2 = train_set[train_set['date_block_num']==6].reset_index().iloc[for_fit]\nfor i in range(7,33):\n    xx = train_set[train_set['date_block_num']==i].reset_index().iloc[for_fit]\n    x2 =  x2.append(xx)\nfit_data = x2.copy()","32957f68":"%%time\ndrop_cols = ['date_block_num', 'shop_id', 'item_id', 'item_price_median', 'year', 'month', 'item_cnt_next_month','item_category_id', 'index']\nX_train = fit_data.drop(drop_cols, axis=1)\nY_train = fit_data['item_cnt_next_month']\nX_val = val_data.drop(drop_cols, axis=1)\nY_val = val_data['item_cnt_next_month']","d8ce778e":"def LGBReg(x_train, y_train, x_val, y_val):\n    lgb_reg = LGBMRegressor(\n        n_jobs=-1,\n        tree_method='auto',\n        learning_rate=0.02,\n        max_depth=8,\n        n_estimators=1000,\n        colsample_bytree=0.8, \n        subsample=0.8, \n        seed=42)\n    \n    lgb_reg.fit(\n        x_train, \n        y_train, \n        eval_metric=\"rmse\", \n        eval_set=[(x_train, y_train), (x_val, y_val)], \n        verbose=10, \n        early_stopping_rounds = 10)\n    return lgb_reg","e2a7d487":"%%time\nlgb_reg_1 = LGBReg(X_train, Y_train, X_val, Y_val)","201029ca":"plot_importance(lgb_reg_1, figsize=(20, 20))","36142b46":"# importance_features = pd.DataFrame(lgb_reg_1.feature_importances_, X_train.columns).sort_values(by=[0], ascending=False)\n# importance_features","9160e947":"lgb_test_pred = lgb_reg_1.predict(X_test).clip(0, 20)","a4215967":"submission37 = pd.DataFrame(test['ID'])\nsubmission37['item_cnt_month'] = lgb_test_pred\nsubmission37.to_csv('submission37.csv', index=False)","118f3bb0":"submission37.head()","f9aa67d3":"# if we round submission:\nsubmission38 = pd.DataFrame(test['ID'])\nsubmission38['item_cnt_month'] = lgb_test_pred.round()\nsubmission38.to_csv('submission38.csv', index=False)","369ab53c":"submission38.head()","c799cc7a":"from statsmodels.regression.linear_model import OLS\nimport statsmodels.api as sm","9b23c5c6":"x = sm.add_constant(X_train.fillna(0))","f69bcd26":"model2 = OLS(\n    Y_train,\n    x\n).fit()\nprint(model2.summary())","bc20c086":"X_test['const'] = 1","d0813a53":"X_test.head()","89810678":"y_predict_OLS = model2.predict(X_test).clip(0, 20)","dee9d01f":"submission39 = pd.DataFrame(test['ID'])\nsubmission39['item_cnt_month'] = y_predict_OLS\nsubmission39.to_csv('submission39.csv', index=False)","fbdb956b":"submission39.head()","8fa4bf5a":"rmse_train_1 = sqrt(mean_squared_error(Y_train, model2.predict(x)))\nrmse_train_1","6a1ec6c0":"rmse_val_1 = sqrt(mean_squared_error(Y_val,model2.predict(sm.add_constant(X_val.fillna(0)))))\nrmse_val_1","626af8e9":"\u0422\u0435\u043f\u0435\u0440\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0434\u043b\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c (\u043b\u043e\u0433\u0438\u043a\u0430 \u0442\u0430 \u0436\u0435):","37fa3ae1":"\u041f\u0440\u0438 \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0438 \u0434\u043e \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u043f\u043e\u0441\u044b\u043b\u043a\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0430 **1.03365**","039dd356":"### Score Model 1:\n\u042d\u0442\u0430 \u043f\u043e\u0441\u044b\u043b\u043a\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0430 \u043d\u0430 kaggle: **1.01092**","19620f84":"**\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435:**","3889d4c6":"**\u0424\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0441 \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c\u0438 \u043f\u043e \u043c\u0435\u0441\u044f\u0446\u0430\u043c:**","48d76028":"\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0441\u043e\u043a\u0440\u0430\u0442\u0438\u0442\u044c train \u0432\u044b\u0431\u043e\u0440\u043a\u0443, \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u044b \u0438 \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 **\u0435\u0441\u0442\u044c \u0432 \u0442\u0435\u0441\u0442\u0435.**","81ffa834":"\u0412\u043c\u0435\u0441\u0442\u043e \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0446\u0435\u043d\u044b, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u0440\u0435\u0434\u043d\u044e\u044e \u043f\u043e \u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u0430\u0440\u0435 \u043c\u0430\u0433\u0430\u0437\u0438\u043d-\u043f\u0440\u043e\u0434\u0443\u043a\u0442:","06e5e428":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435:","5033a0d2":"### \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b","8b68a578":"\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c **\u0433\u043e\u0434\u0430 \u0438 \u043c\u0435\u0441\u044f\u0446\u0430 (\u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440):**","2a48110e":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a\u0438\u0435 \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u044b \u0432 \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u0430\u0445 \u043f\u0440\u043e\u0434\u0430\u0432\u0430\u043b\u0438\u0441\u044c \u0431\u043e\u043b\u0435\u0435, \u0447\u0435\u043c 20 \u0448\u0442\u0443\u043a \u0432 \u043c\u0435\u0441\u044f\u0446 (\u043b\u0438\u0431\u043e \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435):","e900d4a5":"### \u0421\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438","13cf003b":"\u0414\u043b\u044f \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c **\u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u043c\u0435\u0441\u044f\u0446\u0435:**","d0d510aa":"## Model 2: linear regression ","9e0c13ed":"\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e **item_category_id** \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0441\u0442\u0440\u043e\u043a:","0e368370":"\u0422\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0434\u043b\u044f **item_price_mean:**","46c4f03e":"L2LossFunction = sum((y_true - y_pred)^2)","19d34e08":"\u0414\u043e\u0431\u0430\u0432\u0438\u043c dummy variables \u0434\u043b\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0444\u0438\u0447\u0435\u0439: year \u0438 month:","8eebeb37":"\u0412\u044b\u0431\u0440\u0430\u0442\u044c \u043f\u0430\u0440\u044b \u0434\u043b\u044f train set \u0438 validation set \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043c\u0435\u0441\u044f\u0446\u0435\u0432 (\u0447\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u0431\u044b\u043b\u0438 \u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u043f\u0430\u0440\u044b \u043c\u0430\u0433\u0430\u0437\u0438\u043d-\u043f\u0440\u043e\u0434\u0443\u043a\u0442):","cf109217":"## \u041c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435","8dbabdde":"\u0412 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u043e \u043f\u0430\u0440\u0430\u043c \u043c\u0430\u0433\u0430\u0437\u0438\u043d-\u043f\u0440\u043e\u0434\u0443\u043a\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0442\u0435 \u043c\u0435\u0441\u044f\u0446\u044b, \u043a\u043e\u0433\u0434\u0430 \u0431\u044b\u043b\u0438 \u043f\u0440\u043e\u0434\u0430\u0436\u0438. \u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0440\u0430\u0441\u0448\u0438\u0440\u0438\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u043f\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0443. \n\n1) \u0415\u0441\u043b\u0438 \u043f\u043e \u043f\u0430\u0440\u0435 \u043c\u0430\u0433\u0430\u0437\u0438\u043d-\u043f\u0440\u043e\u0434\u0443\u043a\u0442 \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043b\u0438 \u0445\u043e\u0442\u044f \u0431\u044b \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0435\u0441\u044f\u0446\u0435, \u0442\u043e \u0432 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0441\u044f\u0446\u044b \u043c\u044b \u0441\u0442\u0430\u0432\u0438\u043c 0 \u043f\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c \u0434\u043b\u044f \u044d\u0442\u043e\u0439 \u043f\u0430\u0440\u044b. \n\n2) \u041c\u043e\u0436\u043d\u043e \u0435\u0449\u0435 \u043f\u043e-\u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0440\u0430\u0441\u0448\u0438\u0440\u0438\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0438 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u044f \u043c\u0430\u0433\u0430\u0437\u0438\u043d-\u043f\u0440\u043e\u0434\u0443\u043a\u0442, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u0435 \u043d\u0438 \u0440\u0430\u0437\u0443 \u043f\u0440\u043e\u0434\u0430\u0436 \u043f\u043e \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0443 \u043d\u0435 \u0431\u044b\u043b\u043e... \u0412\u043e\u043f\u0440\u043e\u0441 \u043e\u0441\u0442\u0430\u0435\u0442\u0441\u044f \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u043c, \u043d\u0430 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0435\u0440\u043d\u043e \u043f\u0440\u0438 \u0442\u0430\u043a\u043e\u043c \u043f\u043e\u0434\u0445\u043e\u0434\u0435 \u043e\u0431\u043d\u0443\u043b\u044f\u0442\u044c \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u043f\u043e \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0443. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u044d\u0442\u0438 \u043f\u0430\u0440\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0435 \u0432\u043e\u0448\u043b\u0438 \u0432 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443, \u043d\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u043f\u043e \u043d\u0438\u043c \u0431\u044b\u043b\u0438 - ?\n\n\u042f \u0432\u044b\u0431\u0440\u0430\u043b\u0430 1 \u0432\u0430\u0440\u0438\u0430\u043d\u0442.","f0c53f9b":"## Model 1: \n\n* train (80% of samples from t_train and t_train_cat) is information since 07.2013 to 09.2015, train only for pairs shop-item that exist in test\n* validation: 20% of pairs shop-item from t_train and t_train_cat, since 07.2013 to 09.2015.","c1e1fbc3":"\u0422\u043e\u0433\u0434\u0430 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u043e\u0441\u0442\u0430\u043d\u0443\u0442\u0441\u044f \u043f\u0430\u0440\u044b \u0441 ID:","bc86b8d7":"\u0412\u044b\u0431\u0435\u0440\u0435\u043c \u0438\u0437 \u0432\u0441\u0435\u0439 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 20% \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u043f\u0430\u0440 \u043c\u0430\u0433\u0430\u0437\u0438\u043d-\u043f\u0440\u043e\u0434\u0443\u043a\u0442 (\u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u043f\u0430\u0440\u044b \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043c\u0435\u0441\u044f\u0446\u0435\u0432) \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u0447\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 (validation set):","6f795a56":"**\u041e\u0431\u043d\u043e\u0432\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u044b year \u0438 month:**","e60aaf10":"**\u0424\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043f\u0440\u043e\u0434\u0430\u0436 \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c (\u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u0430):**","954589aa":"### \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438","3eed6c5e":"\u0414\u043b\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c \u0442\u0430\u043a\u0436\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c **\u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u043c\u0435\u0441\u044f\u0446\u0435:**","565e2b79":"### \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c \u0438 \u043f\u0440\u043e\u0448\u043b\u043e\u043c","79a5b3e6":"\u0414\u0430\u0436\u0435 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0441\u0440\u0435\u0434\u043d\u0438\u043c\u0438 \u0432 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043f\u043e \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u0443, \u043e\u0441\u0442\u0430\u044e\u0442\u0441\u044f \u043f\u0430\u0440\u044b, \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0435\u0442 \u0432 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435. \u0422\u043e \u0435\u0441\u0442\u044c \u043f\u043e \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u043d\u0435 \u0431\u044b\u043b\u043e \u043f\u0440\u043e\u0434\u0430\u0436 \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u0435 (\u0437\u0430 \u0432\u0435\u0441\u044c \u043f\u0435\u0440\u0438\u043e\u0434). \u042f \u043f\u0440\u043e\u0431\u043e\u0432\u043e\u043b\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u043b\u044f \u044d\u0442\u0438\u0445 \u043f\u0430\u0440 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u0441\u0440\u0435\u0434\u043d\u0438\u043c \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c \u0432 \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043f\u043e \u0432\u0441\u0435\u043c \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u0430\u043c, \u043d\u043e \u0438\u0442\u043e\u0433\u043e\u0432\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u044e\u0442\u0441\u044f \u0445\u0443\u0436\u0435, \u0447\u0435\u043c \u043f\u0440\u0438 \u043e\u0431\u043d\u0443\u043b\u0435\u043d\u0438\u0438 \u043f\u0440\u043e\u0434\u0430\u0436 \u0434\u043b\u044f \u044d\u0442\u0438\u0445 \u043f\u0430\u0440. ","5ae7018e":"## \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","f0493535":"# Predict Future Sales\n\nIn this competition you will work with a challenging time-series dataset consisting of daily sales data, kindly provided by one of the largest Russian software firms - 1C Company. \n\nYou are provided with daily historical sales data. The task is to forecast the total amount of products sold in every shop for the test set. Note that the list of shops and products slightly changes every month. Creating a robust model that can handle such situations is part of the challenge.\n\n#### File descriptions\n* sales_train.csv - the training set. Daily historical data from January 2013 to October 2015.\n* test.csv - the test set. You need to forecast the sales for these shops and products for November 2015.\n* sample_submission.csv - a sample submission file in the correct format.\n* items.csv - supplemental information about the items\/products.\n* item_categories.csv  - supplemental information about the items categories.\n* shops.csv- supplemental information about the shops.\n#### Data fields\n* ID - an Id that represents a (Shop, Item) tuple within the test set\n* shop_id - unique identifier of a shop\n* item_id - unique identifier of a product\n* item_category_id - unique identifier of item category\n* item_cnt_day - number of products sold. You are predicting a monthly amount of this measure\n* item_price - current price of an item\n* date - date in format dd\/mm\/yyyy\n* date_block_num - a consecutive month number, used for convenience. January 2013 is 0, February 2013 is 1,..., October 2015 is 33\n* item_name - name of item\n* shop_name - name of shop\n* item_category_name - name of item category","67fe79a1":"\u0422\u0435\u043f\u0435\u0440\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c \u0432 **\u043f\u0440\u043e\u0448\u043b\u044b\u0445 \u043c\u0435\u0441\u044f\u0446\u0430\u0445**. \u0418\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u0442\u0435 \u043c\u0435\u0441\u044f\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u0433\u043e\u0434 \u043d\u0430\u0437\u0430\u0434 \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c\u044b\u043c \u043c\u0435\u0441\u044f\u0446\u0435\u043c. \u0422\u043e \u0435\u0441\u0442\u044c, \u0435\u0441\u043b\u0438 \u043c\u044b \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043c\u0435\u0441\u044f\u0446, \u0442\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u0430\u043a\u0436\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u044b\u043b\u0430 11 \u0438 23 \u043c\u0435\u0441\u044f\u0446\u0430 \u043d\u0430\u0437\u0430\u0434 (\u0433\u043e\u0434 \u043d\u0430\u0437\u0430\u0434 \u0438 2 \u0433\u043e\u0434\u0430 \u043d\u0430\u0437\u0430\u0434 \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043c\u0435\u0441\u044f\u0446\u0435\u043c):","f9c0d36d":"**\u0424\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043f\u0440\u043e\u0434\u0430\u0436 \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c (\u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u0430):**","238e4613":"\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439:"}}