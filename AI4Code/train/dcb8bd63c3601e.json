{"cell_type":{"cfeb4499":"code","9eaec233":"code","0aed6f90":"code","2741e9b1":"code","9a4473c9":"code","516359a7":"code","fe94f3c6":"code","23a994de":"code","621595b6":"code","0195ff68":"code","d847463b":"code","71a47e71":"code","b2ca819d":"code","21fe343e":"markdown","9e2ed239":"markdown","d377ac4c":"markdown","076f2ad2":"markdown","2cb7f05d":"markdown","ea5f4eae":"markdown","7042e554":"markdown","9179d6f1":"markdown","2dfe1f2b":"markdown","e053108b":"markdown","2f95958e":"markdown","247bda3d":"markdown","394c7429":"markdown","b3762f39":"markdown","9a07a9c6":"markdown","c2a0cbf2":"markdown","b0b8e2ad":"markdown","ca6134ab":"markdown"},"source":{"cfeb4499":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9eaec233":"top1000 = pd.read_csv(\"..\/input\/Top_1_000_Songs_To_Hear_Before_You_Die.csv\")","0aed6f90":"missing_values = top1000.isnull().sum()\nprint(missing_values)","2741e9b1":"top1000.head()","9a4473c9":"top1000.describe()","516359a7":"song_types = top1000[\"THEME\"].value_counts(normalize = True).plot(kind='barh')","fe94f3c6":"sns.set(style=\"white\")\nax = sns.countplot(y=\"THEME\", data=top1000, palette=\"Reds\", order = top1000['THEME'].value_counts(ascending = True).index\n                )\nax.set_xlabel('totalCount')\nax.set_ylabel('THEMES')\nsns.despine(left=True, bottom=True, right=True)\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\nplt.show()","23a994de":"sns.set(style=\"white\")\nax = sns.countplot(y=\"ARTIST\", data=top1000, palette=\"Blues_d\", order = top1000['ARTIST'].value_counts(ascending = False).iloc[:15].index\n                )\nax.set_xlabel('totalCount')\nax.set_ylabel('ARTIST')\nsns.despine(left=True, bottom=True, right=True)\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\nplt.show()","621595b6":"ax = sns.countplot(y=\"YEAR\", data=top1000, palette=\"Greens_r\", order = top1000['YEAR'].value_counts(ascending = False).iloc[:10].index\n                )\nax.set_xlabel('totalCount')\nax.set_ylabel('YEAR')\nsns.despine(left=True, bottom=True, right=True)\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\nplt.show()","0195ff68":"top1000[top1000[\"YEAR\"] == 1968]","d847463b":"decades = []\nfor i in range(0,11):\n    new_d = 1910 + 10*i\n    decades.append(new_d)\ntop_decades = pd.cut(top1000[\"YEAR\"], decades).value_counts()\ntop_decades","71a47e71":"plt.hist(top1000[\"YEAR\"], bins=decades, edgecolor=\"k\")\nplt.xticks(decades)\nplt.show()","b2ca819d":"from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\ntitle_values = top1000[\"TITLE\"].str.strip().str.replace(\"['\u00b4\u2019]\",\"\").values\n\nwordcloud = WordCloud(\n    width = 3000,\n    height = 2000,\n    background_color = 'white',\n    stopwords = STOPWORDS).generate(str(title_values))\nfig = plt.figure(\n    figsize = (40, 30),\n    facecolor = 'white',\n    edgecolor = 'white')\nplt.imshow(wordcloud, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","21fe343e":"Guess what? The Beatles are not the artist with more songs in the list. Here, the king is Mr. Bob Dylan, the recent Nobel Prize in Literature for:\n> having created new poetic expressions within the great American song tradition\"\n\nAnyway, The Beatles are on the second position, so, the hyphotesis was almost correct :) ","9e2ed239":"The most famous topics of songs are always related with Love, \u00bfbut is it Love the most important topic in terms of number of songs? \nTo solve this hypothesis we are going to count the number of songs related with every topic. \n","d377ac4c":"## The greatest artists","076f2ad2":"In the final table, there is only missed values in the songs' url. Good news! We do not need this feature in order to analyze the dataset, it is only important if we wanna hear the song :) ","2cb7f05d":"Which one has been the year with more songs in the list? ","ea5f4eae":"First of all, it is important to export the libraries we are going to use. ","7042e554":"In this part, we calculate the missing values of our dataset: ","9179d6f1":"Guess what? Love is not the most important topic. Party songs rule the world! \nThe last graphic was ok, but according to Edward Tufte's rules, a new version needs to be defined: ","2dfe1f2b":"Which has been the golden decade of the music? ","e053108b":"1968 was a great year for the music! Which songs have been created on this year? ","2f95958e":"# 1000 songs to hear before you die\n\nMusic is found in every known culture, past and present, varying widely between times and places. In short, music is an important part of people's way of life, as it plays a key role in religious rituals, rite of passage ceremonies and cultural activities. \n\nSo, in order to enjoy it as much as we can, [The Guardian](https:\/\/www.theguardian.com\/news\/datablog\/2009\/mar\/20\/1) created a full list of 1000 songs to hear in our lifes. In this Kernel, the complete list is going to be analyzed, giving a complete overview of the most successfully artist of the XX-XXI century, the most famous topics, the golden decades, etc. \n\n![vanDeMan](http:\/\/img.wennermedia.com\/social\/rs-van-morrisonv2-0ab3c2ef-60e6-43a6-b833-b242de050f46.jpg)\n","247bda3d":"Reading the csv file. ","394c7429":"## Song's titles ","b3762f39":"If we run a poll around the world, I guess the winner will be \"The Beatles\", but are they the group with more songs in the list?\n\nAnalyzing the data in a horizontal graph, counting the number of songs per artist, the next graphic is the summary of the number of songs per artist in the list","9a07a9c6":"## The Golden years","c2a0cbf2":"The 60's and 70's have been the \"Golden\" years of the Music ","b0b8e2ad":"![Bob](https:\/\/www.rollingstone.com\/wp-content\/uploads\/2018\/06\/rs-134992-square.jpg?crop=1240:1240&width=385)\n![theBeatles](https:\/\/www.rollingstone.com\/wp-content\/uploads\/2018\/06\/rs-134991-square.jpg?crop=1240:1240&width=385)","ca6134ab":"## Songs' Topics"}}