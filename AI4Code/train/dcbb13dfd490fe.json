{"cell_type":{"7f7a6b54":"code","bd9de865":"code","9d31c448":"code","f23d31d3":"code","7ded6b66":"code","ac81a315":"code","dc8deab1":"code","6e4431d7":"code","c3c35bfa":"code","6911d648":"markdown","9e8f0f51":"markdown","75449051":"markdown","25e99ab9":"markdown","4d655ec0":"markdown","05429f4a":"markdown","2095217e":"markdown","530caa76":"markdown","4e6289ab":"markdown","e6f10780":"markdown","c2b82d0f":"markdown","acac3437":"markdown","e8df8553":"markdown","d0cd6d42":"markdown"},"source":{"7f7a6b54":"# Disable warnings in Anaconda\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set()\n\n# Graphics in retina format are more sharp and legible\n%config InlineBackend.figure_format = 'retina' \n\n# Increase the default plot size and set the color scheme\nplt.rcParams['figure.figsize'] = 8, 5\nplt.rcParams['image.cmap'] = 'viridis'\n\n\nimport plotly.offline as py\nimport pycountry\n\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nfrom plotly.offline import init_notebook_mode, iplot \ninit_notebook_mode(connected=True)\n\nimport folium \nfrom folium import plugins","bd9de865":"#Importing the 2019 Dataset\ndf_2019 = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\ndf_2019.columns = df_2019.iloc[0]\ndf_2019=df_2019.drop([0])\n\n#Importing the 2018 Dataset\ndf_2018 = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv')\ndf_2018.columns = df_2018.iloc[0]\ndf_2018=df_2018.drop([0])\n\n#Importing the 2017 Dataset\ndf_2017=pd.read_csv('..\/input\/kaggle-survey-2017\/multipleChoiceResponses.csv',encoding='ISO-8859-1')","9d31c448":"male_2019 = df_2019[df_2019['What is your gender? - Selected Choice']=='Male']\nfemale_2019 = df_2019[df_2019['What is your gender? - Selected Choice']=='Female']\nfemale_2018 = df_2018[df_2018['What is your gender? - Selected Choice']=='Female']\nfemale_2017 = df_2017[df_2017['GenderSelect']=='Female']\n\n\ndf_2019['In which country do you currently reside?'].replace({'United States of America':'United States','Viet Nam':'Vietnam','China':\"People 's Republic of China\",\"United Kingdom of Great Britain and Northern Ireland\":'United Kingdom',\"Hong Kong (S.A.R.)\":\"Hong Kong\"},inplace=True)\n\ntopn = 15\ncount_male = male_2019['In which country do you currently reside?'].value_counts()[:topn].reset_index()\ncount_female = female_2019['In which country do you currently reside?'].value_counts()[:topn].reset_index()\n\npie_men = go.Pie(labels=count_male['index'],values=count_male['In which country do you currently reside?'],name=\"Men\",hole=0.3,domain={'x': [0,0.46]})\npie_women = go.Pie(labels=count_female['index'],values=count_female['In which country do you currently reside?'],name=\"Women\",hole=0.5,domain={'x': [0.52,1]})\n\nlayout = dict(title = 'Top-15 countries with respondents', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.2, y=0.5, text='Men', showarrow=False, font=dict(size=20)),\n                             dict(x=0.8, y=0.5, text='Women', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_men, pie_women], layout=layout)\npy.iplot(fig)","f23d31d3":"def get_name(code):\n    '''\n    Translate code to name of the country\n    '''\n    try:\n        name = pycountry.countries.get(alpha_3=code).name\n    except:\n        name=code\n    return name\n\ncountry_number = pd.DataFrame(female_2019['In which country do you currently reside?'].value_counts())\ncountry_number['country'] = country_number.index\ncountry_number.columns = ['number', 'country']\ncountry_number.reset_index().drop(columns=['index'], inplace=True)\ncountry_number['country'] = country_number['country'].apply(lambda c: get_name(c))\ncountry_number.head(5)\n\n\n\nworldmap = [dict(type = 'choropleth', locations = country_number['country'], locationmode = 'country names',\n                 z = country_number['number'], colorscale = \"Reds\", reversescale = True, \n                 marker = dict(line = dict( width = 0.5)), \n                 colorbar = dict(autotick = False, title = 'Number of respondents'))]\n\nlayout = dict(title = 'The Nationality of Female Respondents in 2019', geo = dict(showframe = False, showcoastlines = True, \n                                                                projection = dict(type = 'Mercator')))\n\nfig = dict(data=worldmap, layout=layout)\npy.iplot(fig, validate=False)","7ded6b66":"def return_percentage(data,question_part,response_count):\n    \"\"\"Calculates percent of each value in a given column\"\"\"\n    counts = data[question_part].value_counts()\n    total = response_count\n    percentage = (counts*100)\/total\n    value = [percentage]\n    question = [data[question_part]][0]\n    percentage_df = pd.DataFrame(data=value).T     \n    return percentage_df\n\n\ndef plot_graph(data,question,title,x_axis_title):\n    df = return_percentage(data,question,response_count)\n    \n    trace1 = go.Bar(\n                    y = df.index,\n                    x = df[question][0:20],\n                    orientation='h',\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color='salmon',\n                                 line=dict(color='black',width=1)),\n                    text = df.index)\n    data = [trace1]\n    layout = go.Layout(barmode = \"group\",title=title,width=800, height=500, \n                       xaxis= dict(title=x_axis_title),\n                       yaxis=dict(autorange=\"reversed\"),\n                       showlegend=False)\n    fig = go.Figure(data = data, layout = layout)\n    iplot(fig)\n    \nresponse_count = len(female_2019['In which country do you currently reside?'])\nplot_graph(female_2019,'In which country do you currently reside?','Top 20 countries of female respondents','Percentage of Female Respondents')\n    ","ac81a315":"female_2018['In which country do you currently reside?'].replace({'United States of America':'United States','Viet Nam':'Vietnam',\n                                                                  'China':\"People 's Republic of China\",\n                                                                  \"United Kingdom of Great Britain and Northern Ireland\":'United Kingdom',\n                                                                  \"Hong Kong (S.A.R.)\":\"Hong Kong\"},inplace=True)\nfemale_2019['In which country do you currently reside?'].replace({'United States of America':'United States','Viet Nam':'Vietnam',\n                                                                  'China':\"People 's Republic of China\",\n                                                                  \"United Kingdom of Great Britain and Northern Ireland\":'United Kingdom',\n                                                                  \"Hong Kong (S.A.R.)\":\"Hong Kong\"},inplace=True)\n\n\n\nfemale_country_2019 = female_2019['In which country do you currently reside?']\nfemale_country_2018 = female_2018['In which country do you currently reside?']\nfemale_country_2017 = female_2017['Country']\n                                                                  \nf_2019 = female_country_2019[(female_country_2019 == 'India') | (female_country_2019 == 'United States')].value_counts()\nf_2018 = female_country_2018[(female_country_2018 == 'India') | (female_country_2018 == 'United States')].value_counts()\nf_2017 = female_country_2017[(female_country_2017 == 'India') | (female_country_2017 == 'United States')].value_counts()                                                                  \n                                         \nfemale_country_count = pd.DataFrame(data = [f_2017,f_2018,f_2019],index = ['2017','2018','2019'])    \n\nfemale_country_count['total'] = [len(female_2017),len(female_2018),len(female_2019)]\nfemale_country_count['US%'] = female_country_count['United States']\/female_country_count['total']*100\nfemale_country_count['India%'] = female_country_count['India']\/female_country_count['total']*100\n\nfemale_country_count[['India%','US%']].plot(kind='bar',cmap='tab20b',linewidth=1,edgecolor='k')\nplt.gcf().set_size_inches(10,8)\nplt.title('Pattern of US and Indian Female respondents over the years', fontsize = 15)\nplt.xticks(rotation=0,fontsize='10', horizontalalignment='right')\nplt.xlabel('Year of Survey',fontsize=15)\nplt.ylabel('Percentage of Respondents',fontsize=15)\nplt.legend(fontsize=15,bbox_to_anchor=(1.04,0.5), loc=\"center left\",labels=['India','US'])\nplt.show()","dc8deab1":"female_2018['In which country do you currently reside?'].replace({'United States of America':'United States','Viet Nam':'Vietnam',\n                                                                  'China':\"People 's Republic of China\",\n                                                                  \"United Kingdom of Great Britain and Northern Ireland\":'United Kingdom',\n                                                                  \"Hong Kong (S.A.R.)\":\"Hong Kong\"},inplace=True)\nfemale_2019['In which country do you currently reside?'].replace({'United States of America':'United States','Viet Nam':'Vietnam',\n                                                                  'China':\"People 's Republic of China\",\n                                                                  \"United Kingdom of Great Britain and Northern Ireland\":'United Kingdom',\n                                                                  \"Hong Kong (S.A.R.)\":\"Hong Kong\"},inplace=True)\n\n\n\nfemale_country_2019 = female_2019['In which country do you currently reside?']\nfemale_country_2018 = female_2018['In which country do you currently reside?']\nfemale_country_2017 = female_2017['Country']\n\n\n\nAfrican_2019 = female_country_2019[(female_country_2019 == 'Algeria') | \n                                   (female_country_2019 == 'Nigeria') |\n                                   (female_country_2019 == 'Egypt')   |\n                                   (female_country_2019 == 'Kenya')   |\n                                   (female_country_2019 == 'South Africa')].value_counts()\n\nAfrican_2018 = female_country_2018[(female_country_2018 == 'Algeria') | \n                                   (female_country_2018 == 'Nigeria') |\n                                   (female_country_2018 == 'Egypt')   |\n                                   (female_country_2018 == 'Kenya')   |\n                                   (female_country_2018 == 'South Africa')].value_counts()\n\n\n\n\nAfrican_2017 = female_country_2017[(female_country_2017 == 'Algeria') | \n                                   (female_country_2017 == 'Nigeria') |\n                                   (female_country_2017 == 'Egypt')   |\n                                   (female_country_2017 == 'Kenya')   |\n                                   (female_country_2017 == 'South Africa')].value_counts()\nAfrican_subcontinent_count = pd.DataFrame(data = [African_2017,African_2018,African_2019],index = ['2017','2018','2019']) \n\n\nAfrican_subcontinent_count.fillna(0,inplace=True)\nAfrican_subcontinent_count.loc[:,'Sum'] = African_subcontinent_count.sum(axis=1)\nAfrican_subcontinent_count['Total_Females'] = [len(female_2017),len(female_2018),len(female_2019)]\nAfrican_subcontinent_count['Africa'] = African_subcontinent_count['Sum']\/African_subcontinent_count['Total_Females']*100\n\nAfrican_subcontinent_count['Africa'].plot(kind='bar',color='r',linewidth=1,edgecolor='k')\nplt.gcf().set_size_inches(10,8)\nplt.title('Total African Females respondents over the years', fontsize = 15)\nplt.xticks(rotation=0,fontsize='10', horizontalalignment='right')\nplt.xlabel('Years',fontsize=15)\nplt.ylabel('Percentage of Female Respondents',fontsize=15)\nplt.legend(fontsize=15,bbox_to_anchor=(1.04,0.5), loc=\"center left\",labels=['Africa'])\nplt.show()","6e4431d7":"countries = ['South Africa','Egypt','Kenya','Nigeria','Algeria']\n\nAfrican_subcontinent_count[countries].plot(kind='bar',cmap='Reds',linewidth=1,edgecolor='k')\nplt.gcf().set_size_inches(10,8)\nplt.title('Country wise Female respondents from Africa ', fontsize = 15)\nplt.xticks(rotation=0,fontsize='10', horizontalalignment='right')\nplt.xlabel('Years',fontsize=15)\nplt.ylabel('Number of Respondents',fontsize=15)\nplt.legend(fontsize=15,bbox_to_anchor=(1.04,0.5), loc=\"center left\")\nplt.show()","c3c35bfa":"df = pd.DataFrame(data = [len(df_2017),len(df_2018),len(df_2019)],\n                          columns = ['Number of responses'], index = ['2017','2018','2019'])\ndf.index.names = ['Year of Survey']\n\ndf.plot(kind='bar',color='r',legend=False,linewidth=1,edgecolor='k')\nplt.xticks(rotation=0,fontsize='10', horizontalalignment='right')\nplt.ylabel('Number of Respondents',fontsize=15)\nplt.show()","6911d648":"### Country","9e8f0f51":"Data Science Nigeria runs regular Kaggle competition as a platform to drive capacity building through competitive engagements.\n\nDataset and project focus are geared towards addressing local business\/social issues.\n\nParticipants with high Kaggle ranking are shortlisted for learning boot camps and mentoring opportunities.","75449051":"300,000+ direct download of our Artificial Intelligence for Starter free ebook to stimulate interest in Artificial Intelligence through use cases and inspirational contribution from leading global AI experts including Prof Yoshua Bengio, Professor Emeritus Thomas G. Dietterich and Prof. dr. M. (Max) Welling\n\n10,212 participated in the 1st ever Intercampus Machine Learning competition\n\n12,234 online participants in Data Science courses \u2013 from registration to at least one class\n\nOver 1,500 hours of free classes in Data Science and Machine learning applications in 30 states of Nigeria\n\n205 direct job placement, project participation and internship\n\n4 innovative product idea","25e99ab9":"### *conclusion*","4d655ec0":"\n![N|S](https:\/\/cldup.com\/YyHz3bXeu0.png)","05429f4a":"### *Nigeria is Vibrant, because Data Science Nigeria is active. *\n\n### *Data Science Nigeria runs regular Kaggle competition as a platform to drive capacity building through competitive engagements.*","2095217e":"### *Achievements*","530caa76":"Nigeria is Vibrant, because Data Science Nigeria is active.\n\nData Science Nigeria runs regular Kaggle competition as a platform to drive capacity building through competitive engagements. \n\nData Science Nigeria are committed to raising one million AI talents in 10 years and thus position Nigeria as one of the top 10 AI talent\/knowledge destinations with 20% GDP multiplier impact.","4e6289ab":"To build a world-class Artificial Intelligence (AI) knowledge, research and innovation ecosystem that delivers high-impact transformational research, business use applications, AI-first start-ups, support employability and social good use cases. \n\n\nData Science Nigeria are committed to raising one million AI talents in 10 years and thus position Nigeria as one of the top 10 AI talent\/knowledge destinations with 20% GDP multiplier impact. \n\nData Science Nigeria are poised to accelerate Nigeria\u2019s socio-economic development through a solution-oriented application of machine learning in solving social\/business problems and to galvanize data science\/Artificial Intelligence knowledge revolution, which will position Nigeria as an outsourcing hub for global projects.","e6f10780":"# **Vibrant Nigeria**","c2b82d0f":"### *Data Science Nigeria Kaggle Competitions*","acac3437":"# ***Viva Female !!***","e8df8553":"# ***Data Science Nigeria is active***\n\nhttps:\/\/www.datasciencenigeria.org\/","d0cd6d42":"### *Visio*n"}}