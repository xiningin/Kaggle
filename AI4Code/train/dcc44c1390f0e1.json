{"cell_type":{"3bfa2b84":"code","26c6309d":"code","a9dc2bd1":"code","ce9e5451":"code","53b4128b":"code","082c3403":"code","6557ff37":"code","5530b622":"code","5db37c6c":"code","fe761698":"code","36cf7029":"code","bb658a16":"code","6dd9f063":"code","93273341":"code","84f677c1":"code","5f3da563":"code","835ddb33":"code","74a15380":"code","823d6500":"code","8a6617ea":"code","9155b326":"code","3addf789":"markdown","9ab778d0":"markdown","3d3fe4fe":"markdown","56c0afc2":"markdown","813451ae":"markdown","a5afd60c":"markdown"},"source":{"3bfa2b84":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport nltk  \nfrom nltk.corpus import stopwords \nfrom nltk.stem.porter import PorterStemmer \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","26c6309d":"data = pd.read_csv('\/kaggle\/input\/spam-mails-dataset\/spam_ham_dataset.csv')\ndata","a9dc2bd1":"text = data['text']\ntext","ce9e5451":"text[0]","53b4128b":"text[3]","082c3403":"print(\"\\n\"+'-'*25)\nprint(\"shape of data:\",data.shape) \nprint(\"\\n\"+'-'*25)\nprint(\"\\nno dimensions of data:\",data.ndim)\nprint(\"\\n\"+'-'*25)\nprint(\"\\nsize of data:\",data.size)\nprint(\"\\n\"+'-'*25)\nprint(\"\\nSum fo all null values:\\n\",data.isnull().sum())\nprint(\"\\n\"+'-'*25)","6557ff37":"print(\"Column Names : \\n\"+'-'*25)\nprint(data.columns)","5530b622":"print(\"Unique values in every column \\n\"+'-'*25)\ndata.nunique()","5db37c6c":"print(\"summary of a DataFrame:\",data.info())","fe761698":"display(\"Top 5 rows :\",data.head())\ndisplay(\"Last 5 Rows :\",data.tail()) ","36cf7029":"a = data['label_num'].value_counts()\na.plot(kind=\"bar\")\nplt.xticks(np.arange(2), ('Non spam', 'spam'),rotation=0)\nplt.show()","bb658a16":"import re\ncorpus = []\nlength = len(data)\nfor i in range(0,length):\n    text = re.sub(\"[^a-zA-Z0-9]\",\" \",data[\"text\"][i])\n    text = text.lower()\n    text = text.split()\n    pe = PorterStemmer()\n    stopword = stopwords.words(\"english\")\n    text = [pe.stem(word) for word in text if not word in set(stopword)]\n    text = \" \".join(text)\n    corpus.append(text)\nprint(corpus[0])","6dd9f063":"all_mails = ''\nfor i in corpus:\n    all_mails=all_mails+i","93273341":"from wordcloud import WordCloud, STOPWORDS\n\n\nwordcloud = WordCloud(width = 800, height = 800,background_color ='white',\n                        min_font_size = 10).generate(all_mails)\n\nplt.figure(figsize = (8, 8), facecolor = None)\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.tight_layout(pad = 0)\n\nplt.show()\n","84f677c1":"from sklearn.feature_extraction.text import CountVectorizer\ncv = CountVectorizer(max_features=35000)\nX = cv.fit_transform(corpus).toarray()","5f3da563":"y=data['label_num']","835ddb33":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","74a15380":"from sklearn.naive_bayes import MultinomialNB\nmodel = MultinomialNB()\n\nmodel.fit(X_train, y_train)\n\ny_pred=model.predict(X_test)\ny_pred","823d6500":"from sklearn.metrics import confusion_matrix,accuracy_score\ncm = confusion_matrix(y_test, y_pred)\nscore = accuracy_score(y_test,y_pred)\nprint(cm,score*100)","8a6617ea":"'''\nimport pickle \npickle.dump(cv, open('cv.pkl', 'wb'))\npickle.dump(model, open('model.pkl', 'wb'))\n'''","9155b326":"def new_review(new_review):\n    new_review = new_review\n    new_review = re.sub('[^a-zA-Z]', ' ', new_review)\n    new_review = new_review.lower()\n    new_review = new_review.split()\n    ps = PorterStemmer()\n    all_stopwords = stopwords.words('english')\n    all_stopwords.remove('not')\n    new_review = [ps.stem(word) for word in new_review if not word in   set(all_stopwords)]\n    new_review = ' '.join(new_review)\n    new_corpus = [new_review]\n    new_X_test = cv.transform(new_corpus).toarray()\n    new_y_pred = model.predict(new_X_test)\n    return new_y_pred\n#new_review = new_review(str(input(\"Enter new review...\")))\nnew_review = new_review(\"Thanks for your time.\")\nif new_review[0]==1:\n  print(\"SPAM\")\nelse :\n  print(\"NOT SPAM\")","3addf789":"# Importing Libraries and reading data ","9ab778d0":"# Modeling","3d3fe4fe":"# Thanks for your time. \n\n### If You Liked the Kernel drop an Upvote :D\n\n## Any suggetion regarding correction or improvement will be highly appreciated :)","56c0afc2":"# Data Insights","813451ae":"# Some Visualizations","a5afd60c":"# Check the result with custom input"}}