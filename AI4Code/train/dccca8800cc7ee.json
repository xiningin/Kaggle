{"cell_type":{"b4b19ba9":"code","8b0f6ef5":"code","2f66db24":"code","01d8a27a":"code","20100b77":"code","ef3c0d4a":"code","ad54870a":"code","a39db386":"code","e3c248b6":"code","a547ef72":"code","a4e125c5":"code","229e8f3a":"code","dd8235d3":"code","3ac89da0":"code","36d391af":"code","a0794bb0":"code","aa543c6b":"code","94e2a32f":"code","b46bb98c":"code","050cff01":"code","6eb2a86e":"code","d215c478":"code","49f18f69":"code","e77c6681":"code","cfa3fb9f":"markdown","05708788":"markdown","2dec5d96":"markdown","ef69f9e1":"markdown","418ac398":"markdown","9d710ae6":"markdown","a8c64130":"markdown","7ce0ce0f":"markdown","8763bf9f":"markdown","c0d47853":"markdown","f6764907":"markdown","37de53b8":"markdown","ae225ff2":"markdown","53e5cc93":"markdown"},"source":{"b4b19ba9":"# Importing packages\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.rcParams.update({'font.size': 14})\n\n# Load data\ndata = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv', parse_dates = ['ObservationDate','Last Update'])\n\nprint (data.shape)\nprint ('Last update: ' + str(data.ObservationDate.max()))","8b0f6ef5":"# To check every place has only one observation per day\ncheckdup = data.groupby(['Country\/Region','Province\/State','ObservationDate']).count().iloc[:,0]\ncheckdup[checkdup>1]","2f66db24":"# Checking where the duplicates come from\ndata[data['Province\/State'].isin(['Hebei','Gansu']) & (data['ObservationDate'].isin(['2020-03-11','2020-03-12']))]","01d8a27a":"# Clean data\ndata = data.drop([4926,4927,5147, 5148]) # March 14 - remove duplicates\ndata.loc[data['Province\/State']=='Macau', 'Country\/Region'] = 'Macau' # March 14 - clean data for Macau and HK\ndata.loc[data['Province\/State']=='Hong Kong', 'Country\/Region'] = 'Hong Kong'\ndata = data.drop(['SNo', 'Last Update'], axis=1)\ndata = data.rename(columns={'Country\/Region': 'Country', 'ObservationDate':'Date'})\n# To check null values\ndata.isnull().sum()","20100b77":"daily = data.sort_values(['Date','Country','Province\/State'])","ef3c0d4a":"def get_place(row):\n    if row['Province\/State'] == 'Arizona':\n        return 'Arizona USA'\n    elif row['Country'] == 'US': \n        return 'Others USA'\n    else: return 'World'\n    \ndaily['segment'] = daily.apply(lambda row: get_place(row), axis=1)","ad54870a":"latest = daily[daily.Date == daily.Date.max()]","a39db386":"print ('Total confirmed cases: %.d' %np.sum(latest['Confirmed']))\nprint ('Total death cases: %.d' %np.sum(latest['Deaths']))\nprint ('Total recovered cases: %.d' %np.sum(latest['Recovered']))","e3c248b6":"segment1 = latest.groupby('segment').sum()\nsegment1['Death Rate'] = segment1['Deaths'] \/ segment1['Confirmed'] * 100\nsegment1['Recovery Rate'] = segment1['Recovered'] \/ segment1['Confirmed'] * 100\nsegment1","a547ef72":"# Confirmed Cases USA\n_ = latest.loc[latest.segment=='Others USA',['Province\/State','Confirmed']].sort_values('Province\/State', ascending=True)\nplt.figure(figsize=(9,7))\nsns.barplot('Confirmed', 'Province\/State', data = _)\nplt.title('Top confirmed cases USA ex-Arizona')\nplt.yticks(fontsize=8)\nplt.grid(axis='x')\nplt.show()","a4e125c5":"# Death Cases China USA\n_ = latest.loc[latest.segment=='Others USA',['Province\/State','Deaths']].sort_values('Deaths', ascending=False)\n_ = _[_.Deaths>0]\nplt.figure(figsize=(9,7))\nsns.barplot('Deaths', 'Province\/State', data = _)\nplt.title('Top Death cases USA')\nplt.yticks(fontsize=12)\nplt.grid(axis='x')\nplt.show()","229e8f3a":"# Confirmed Cases World ex-USA\nworldstat = latest[latest.segment=='World'].groupby('Country').sum()\n_ = worldstat.sort_values('Confirmed', ascending=False).head(15)\nplt.figure(figsize=(9,6))\nsns.barplot(_.Confirmed, _.index)\nplt.title('Top 15 Confirmed cases World ex-USA')\nplt.yticks(fontsize=12)\nplt.grid(axis='x')\nplt.show()","dd8235d3":"# Death Cases World ex-USA\n_ = worldstat.sort_values('Deaths', ascending=False)\n_ = _[_.Deaths>=5]\nplt.figure(figsize=(9,6))\nsns.barplot(_.Deaths, _.index)\nplt.title('Top Deaths cases World ex-USA (5 or above)')\nplt.yticks(fontsize=12)\nplt.grid(axis='x')\nplt.show()","3ac89da0":"# Compare death rate across countries\n_ = latest.groupby('Country')['Confirmed','Deaths'].sum().reset_index()\n_['Death rate'] = _['Deaths'] \/ _['Confirmed'] * 100\n_ = _.sort_values('Death rate', ascending=False)\ndeath_cty = _[_['Deaths']>=5]\nplt.figure(figsize=(9,6))\nsns.barplot(death_cty['Death rate'], death_cty['Country'])\nplt.title('Death Rate Comparison (>=5 Deaths)')\nplt.yticks(fontsize=12)\nplt.grid(axis='x')\nplt.show()","36d391af":"death_cty","a0794bb0":"import matplotlib.dates as mdates\nmonths = mdates.MonthLocator()\nmonths_fmt = mdates.DateFormatter('%b-%e')\n\nconfirm = pd.pivot_table(daily.dropna(subset=['Confirmed']), \n                         index='Date', columns='segment', values='Confirmed', aggfunc=np.sum).fillna(method = 'ffill')\nfig, ax = plt.subplots(figsize=(11,6))\nax.plot(confirm, marker='o')\nplt.title('Confirmed Cases')\nax.legend(confirm.columns, loc=2, fontsize=12)\nax.xaxis.set_major_locator(plt.MaxNLocator(7))\nax.xaxis.set_major_formatter(months_fmt)\nplt.xticks(rotation=45, fontsize=12)\nax.grid(True)\nplt.show()","aa543c6b":"death = pd.pivot_table(daily.dropna(subset=['Deaths']), \n                         index='Date', columns='segment', values='Deaths', aggfunc=np.sum).fillna(method = 'ffill')\nfig, ax = plt.subplots(figsize=(11,6))\nax.plot(death, marker='o')\nplt.title('Death Cases')\nax.legend(death.columns, loc=2, fontsize=12)\nax.xaxis.set_major_locator(plt.MaxNLocator(7))\nax.xaxis.set_major_formatter(months_fmt)\nplt.xticks(rotation=45, fontsize=12)\nax.grid(True)\nplt.show()","94e2a32f":"good = pd.pivot_table(daily.dropna(subset=['Recovered']), \n                         index='Date', columns='segment', values='Recovered', aggfunc=np.sum).fillna(method = 'ffill')\nfig, ax = plt.subplots(figsize=(11,6))\nax.plot(good, marker='o')\nplt.title('Recovered Cases')\nax.legend(good.columns, loc=2, fontsize=12)\nax.xaxis.set_major_locator(plt.MaxNLocator(7))\nax.xaxis.set_major_formatter(months_fmt)\nplt.xticks(rotation=45, fontsize=12)\nax.grid(True)\nplt.show()","b46bb98c":"# Active case - confirmed minus deaths and recovered\ndaily['Active'] = daily['Confirmed'] - daily['Deaths'] - daily['Recovered']\nactive = pd.pivot_table(daily.dropna(subset=['Active']), \n                         index='Date', columns='segment', values='Active', aggfunc=np.sum).fillna(method = 'ffill')\nfig, ax = plt.subplots(figsize=(11,6))\nplt.plot(active, marker='o')\nplt.title('Active Cases')\nax.legend(active.columns, loc=2, fontsize=12)\nax.xaxis.set_major_locator(plt.MaxNLocator(7))\nax.xaxis.set_major_formatter(months_fmt)\nplt.xticks(rotation=45, fontsize=12)\nax.grid(True)\nplt.show()","050cff01":"# Global ex-China - Top 10 countries\nc10 = worldstat.sort_values('Confirmed', ascending=False).head(10).index.tolist()\n# Confirmed cases\nc10cases = daily[daily['Country'].isin(c10)]\nconfirm_w = pd.pivot_table(c10cases.dropna(subset=['Confirmed']), index='Date', \n                         columns='Country', values='Confirmed', aggfunc=np.sum).fillna(method='ffill')\nfig, ax = plt.subplots(figsize=(12,7))\nplt.plot(confirm_w[confirm_w.index>'2020-02-01'], marker='o')\nplt.title('Confirmed Cases - Top 10 Countries Outside China')\nax.legend(confirm_w.columns, loc=2)\nax.xaxis.set_major_locator(plt.MaxNLocator(7))\nax.xaxis.set_major_formatter(months_fmt)\nplt.xticks(rotation=45, fontsize=12)\nplt.grid(True)\nplt.show()","6eb2a86e":"# Death cases\ndeath_w = pd.pivot_table(c10cases.dropna(subset=['Deaths']), index='Date', \n                         columns='Country', values='Deaths', aggfunc=np.sum).fillna(method='ffill')\nfig, ax = plt.subplots(figsize=(12,7))\nplt.plot(death_w[death_w.index>'2020-02-01'], marker='o')\nplt.title('Death Cases - Top 10 Countries Outside China')\nplt.legend(death_w.columns, loc=2, fontsize=12)\nax.xaxis.set_major_locator(plt.MaxNLocator(7))\nax.xaxis.set_major_formatter(months_fmt)\nplt.xticks(rotation=45, fontsize=12)\nplt.grid(True)\nplt.show()","d215c478":"# Calculate death and recovery rate\n\ndf = confirm.join(death, lsuffix='_confirm', rsuffix='_death')\ndf = df.join(good.add_suffix('_recover'))\ndf['Arizona USA_death_rate'] = df['Arizona USA_death']\/df['Arizona USA_confirm']\ndf['Others USA_death_rate'] = df['Others USA_death']\/df['Others USA_confirm']\ndf['World_death_rate'] = df['World_death']\/df['World_confirm']\ndf['Arizona USA_recover_rate'] = df['Arizona USA_recover']\/df['Arizona USA_confirm']\ndf['Others USA_recover_rate'] = df['Others USA_recover']\/df['Others USA_confirm']\ndf['World_recover_rate'] = df['World_recover']\/df['World_confirm']","49f18f69":"death_rate = df[['Arizona USA_death_rate','Others USA_death_rate','World_death_rate']]*100\nfig, ax = plt.subplots(figsize=(11,6))\nplt.plot(death_rate, marker='o')\nplt.title('Death Rate %')\nplt.legend(death.columns)\nax.xaxis.set_major_locator(plt.MaxNLocator(7))\nax.xaxis.set_major_formatter(months_fmt)\nplt.xticks(rotation=45, fontsize=12)\nplt.grid(True)\nplt.show()","e77c6681":"recover_rate = df[['Arizona USA_recover_rate','Others USA_recover_rate','World_recover_rate']]*100\nfig, ax = plt.subplots(figsize=(11,6))\nplt.plot(recover_rate, marker='o')\nplt.title('Recovery Rate %')\nplt.legend(good.columns, loc=2, fontsize=12)\nax.xaxis.set_major_locator(plt.MaxNLocator(7))\nax.xaxis.set_major_formatter(months_fmt)\nplt.xticks(rotation=45, fontsize=12)\nplt.grid(True)\nplt.show()","cfa3fb9f":"[Insert findings here]","05708788":"[Insert findings here]","2dec5d96":"Findings:\n- [Insert findings here]\n\n","ef69f9e1":"At first, we separate the cases into three regions, 'Arizona USA', 'Others USA' and 'World':","418ac398":"## Rate of Death and Recovery","9d710ae6":"[Insert findings here]","a8c64130":"[Insert findings here]","7ce0ce0f":"Findings:\n- [Insert findings here]","8763bf9f":"## Latest status update","c0d47853":"## Evolution of cases","f6764907":"# Analysis of Coronavirus Data, Arizona and USA\n\nStatus: Updating for friends and family upon request. Can update daily.\n\nA copy of the notebook \"Coronavirus 2019-20 Visualization\" by Holf Yuen, but adjusted to monitor the world vs. Arizona, USA.\n\n\n","37de53b8":"[Insert findings here]","ae225ff2":"Findings:\n- 14 Mar: 12 cases in AZ, 2714 in other states\n- 15 Mar: 13 cases in AZ, 3486 in other states\n- 16 Mar: 18 cases in AZ, 4614 in other states\n- (didn't log in 17 Mar)\n- 18 Mar: 27 cases in AZ, 7759 in other states\n- 19 Mar: 45 cases in AZ, 13635 in other states\n- 20 Mar: 78 cases in AZ, 19023 in other states\n- 23 Mar: 235 cases in AZ, 43432 in other states\n- 30 Mar: 919 cases in AZ, 139967 in other states","53e5cc93":"* [Insert findings here]"}}