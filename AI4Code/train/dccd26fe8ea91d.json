{"cell_type":{"0bc2043a":"code","c124cc5c":"code","b4d06b69":"code","7f3826d4":"code","8d32a3e0":"code","e14da833":"code","aa0df01c":"code","b1de6daa":"code","cedc0127":"code","451cb9d6":"code","7c6ea634":"code","41fb57d0":"code","4f954cf4":"code","22fd3e9f":"code","961003fd":"code","61edd794":"code","507dc657":"code","21376dcc":"code","1ce315a4":"code","3622569d":"code","ee5a9167":"code","93ebdfa1":"code","2836143d":"code","84ef4b83":"code","ab622929":"code","ca9b49ed":"code","0fe5e889":"code","e7dd1396":"code","2f5ecf9f":"code","2395c9d0":"code","7ec83ba8":"code","437a7b74":"code","d9ebf6d4":"code","a91e9d81":"markdown"},"source":{"0bc2043a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom mlxtend.frequent_patterns import apriori, association_rules \n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c124cc5c":"pd.options.display.max_columns\npd.options.display.max_rows = 100","b4d06b69":"store_data = pd.read_csv('\/kaggle\/input\/satislar.csv',sep=';',low_memory=False, header=None)","7f3826d4":"store_data.columns = ['BranchId', 'PosId', 'InvoiceDate', 'InvoiceNo','StockCode','Line','Quantity','CategoryCode','CategoryName']","8d32a3e0":"store_data.head(10)","e14da833":"store_data.shape","aa0df01c":"store_data.dropna(subset= [\"CategoryCode\"],inplace= True)","b1de6daa":"store_data.info()","cedc0127":"store_data[\"InvoiceNo\"].nunique()","451cb9d6":"35*5","7c6ea634":"175 \/ 1043706","41fb57d0":"store_data.describe()","4f954cf4":"# Stripping extra spaces in the description \nstore_data['CategoryName'] = store_data['CategoryName'].str.strip(',') ","22fd3e9f":"# Dropping the rows without any invoice number \nstore_data.dropna(subset =['InvoiceNo'], inplace = True) ","961003fd":"store_data","61edd794":"\nmaskBrachId = store_data[\"BranchId\"] == 4010 # Belirli adette branch se\u0107ildi\ndf= store_data[maskBrachId]","507dc657":"df.dropna(subset= [\"CategoryName\"],inplace= True)","21376dcc":"df","1ce315a4":"df[\"InvoiceNo\"].nunique()","3622569d":"# support, confidence secimi Ayran dahil\n17326*0.002043*0.2 # ","ee5a9167":"pd.DataFrame(df[\"CategoryName\"].value_counts(normalize=True)).head(100)","93ebdfa1":"df['Quantity'] = [x.replace(',', '.') for x in df['Quantity']]","2836143d":"df[\"Quantity\"] = df[\"Quantity\"].astype(\"float\")","84ef4b83":"df[\"Quantity\"] = df[\"Quantity\"].astype(\"int\")","ab622929":"df.info()","ca9b49ed":"branch_order = (df\n          .groupby(['InvoiceNo', 'CategoryName'])['Quantity'] \n          .sum().unstack().reset_index().fillna(0) \n          .set_index('InvoiceNo')) ","0fe5e889":"branch_order.head(20)","e7dd1396":"# Encoding the datasets \nbranch_encoded = branch_order.applymap(lambda x: 0 if x<=0 else 1) \nbasket_branch = branch_encoded ","2f5ecf9f":"frq_items = apriori(basket_branch, min_support = 0.002043, use_colnames = True)","2395c9d0":"frq_items","7ec83ba8":"rules = association_rules(frq_items, metric =\"confidence\", min_threshold = 0.20) \n#rules = rules.sort_values(['confidence', 'lift'], ascending =[False, False]) \nrules.head() ","437a7b74":"rules.head(100)","d9ebf6d4":"rules2 = rules.sort_values(['lift','confidence'], ascending =[False, False]) \nrules2.head(100)","a91e9d81":"## Not : Your notebook tried to allocate more memory than is available. It has restarted. Hatas\u0131n\u0131 engellemek i\u00e7in 1 tane se\u00e7ildi"}}