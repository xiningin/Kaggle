{"cell_type":{"697fab81":"code","538d825f":"code","23166e3e":"code","68408196":"code","582b1a6d":"markdown"},"source":{"697fab81":"import numpy as np\nimport pandas as pd \n\nimport tqdm\nfrom pathlib import Path\nfrom collections import defaultdict, Counter","538d825f":"DATA_ROOT = Path('..\/input\/2019-3rd-ml-month-with-kakr\/')\ntrain_csv = pd.read_csv('..\/input\/2019-3rd-ml-month-with-kakr\/train.csv')","23166e3e":"def make_folds(n_folds: int) -> pd.DataFrame:\n    df = pd.read_csv(DATA_ROOT \/ 'train.csv', engine='python')\n\n    cls_counts = Counter([classes for classes in df['class']])\n    fold_cls_counts = defaultdict()\n    for class_index in cls_counts.keys():\n        fold_cls_counts[class_index] = np.zeros(n_folds, dtype=np.int)\n\n    df['fold'] = -1\n    pbar = tqdm.tqdm(total=len(df))\n\n    def get_fold(row):\n        class_index = row['class']\n        counts = fold_cls_counts[class_index]\n        fold = np.argmin(counts)\n        counts[fold] += 1\n        fold_cls_counts[class_index] = counts\n        row['fold']=fold\n        pbar.update()\n        return row\n    \n    df = df.apply(get_fold, axis=1)\n    return df","68408196":"df = make_folds(n_folds=5)\ndf.to_csv('folds.csv', index=None)","582b1a6d":"## How to split folds and train\n+ \ubaa8\uac01\uce90 \uc628 \uae30\ub150\uc73c\ub85c \ucee4\ub110 \ud55c\uac1c\ub9cc \uc62c\ub9ac\uaca0\uc2b5\ub2c8\ub2e4. \ucf54\ub4dc\ub294 \uc800\ud76c \uc2e0\ub9bc \uc2a4\ud130\ub514\uc758 \uac15\uc0c1\uad8c\ub2d8\uc774 \uc791\uc131\ud574\uc8fc\uc168\uc2b5\ub2c8\ub2e4.\n+ discussion \ubcf4\uba74 fold\ubcc4\ub85c \uc5b4\ub5bb\uac8c \ud559\uc2b5\ud560 \uc9c0 \uace0\ubbfc\uc774 \ub9ce\uc73c\uc2e0\uac83 \uac19\uc740\ub370\uc694\n+ \uc81c\uac00 \uce90\uae00 \ucee4\ub110 \ud65c\uc6a9\ud574\uc11c \ud559\uc2b5\ud588\ub358 \ubc29\ubc95 \uc911 \ud558\ub098\ub97c \uc18c\uac1c\ud558\ub824\uace0 \ud569\ub2c8\ub2e4.\n+ \uc774\ub807\uac8c \ubbf8\ub9ac folds.csv \ub97c \ub9cc\ub4e4\uace0 dataset\uc73c\ub85c \uc62c\ub824\uc11c \ud559\uc2b5 \ucee4\ub110\uc5d0\uc11c \ubd88\ub7ec\uc628 \uc774\ud6c4 \ud574\ub2f9 \ud3f4\ub4dc\ub9cc\uc744 validation set\uc73c\ub85c \uc368\uc11c \ud559\uc2b5\ud558\uc2dc\uba74 \ub418\uaca0\uc2b5\ub2c8\ub2e4.\n+ \ud574\ub2f9 \ucee4\ub110 \ucc38\uc870\ud558\uc2dc\uba74 \uc88b\uc744\uac83 \uac19\uc2b5\ub2c8\ub2e4.\nhttps:\/\/www.kaggle.com\/yangsaewon\/pytorch-baseline-updated-7-10"}}