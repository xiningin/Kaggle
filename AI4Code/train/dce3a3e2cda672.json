{"cell_type":{"41d51e2e":"code","2df4a350":"code","d09dfb03":"code","cd315739":"code","4141f48b":"code","fa5a69d0":"code","be16e64e":"code","cf668ca2":"code","989c2aa5":"code","687a14f1":"code","96e8448a":"code","8f5ef8e7":"code","7aa07bb4":"code","29b4dea2":"code","4871380a":"code","03e2850f":"code","f68f26f2":"code","adeab91b":"code","e281f178":"code","563e64f0":"code","84110128":"code","50523ef1":"code","b81293d4":"code","aadf6966":"code","6b285dc9":"code","a5e289d8":"code","42600d1f":"code","3a3672d9":"code","b9ab6595":"code","d00047c9":"code","c4049c61":"code","8f26e6e8":"code","13dbe78c":"code","53834373":"code","ce09ecc5":"markdown","d7e221b3":"markdown","be7431db":"markdown","43286a53":"markdown"},"source":{"41d51e2e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2df4a350":"import os\nfrom fastai import *\nfrom fastai.vision import *\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')","d09dfb03":"os.listdir('\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/chest_xray\/')","cd315739":"path = '\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/chest_xray\/'\n# create a data bunch\nnp.random.seed(42)\ndata = ImageDataBunch.from_folder(path,train='train',valid='test',test='val',\n                                  ds_tfms=get_transforms(do_flip=False),\n                                  size=224,bs=64,\n                                  num_workers=1).normalize(imagenet_stats)","4141f48b":"data","fa5a69d0":"data.classes","be16e64e":"data.c","cf668ca2":"data.show_batch(rows=6,figsize=(12,8))","989c2aa5":"learn = create_cnn(data,models.resnet34,metrics=error_rate,model_dir=\"\/tmp\/model\/\")\nlearn.lr_find()","687a14f1":"learn.recorder.plot()","96e8448a":"learn.fit_one_cycle(5,1e-3,moms=(0.8,0.7))","8f5ef8e7":"learn.fit_one_cycle(4)","7aa07bb4":"interp = ClassificationInterpretation.from_learner(learn)\nlosses,idxs = interp.top_losses()\n# plot the top losses\ninterp.plot_top_losses(9, figsize=(15,11))","29b4dea2":"interp.plot_confusion_matrix(figsize=(5,5), dpi=60)","4871380a":"learn.save('stage-1')","03e2850f":"learn.unfreeze()\nlearn.fit_one_cycle(2)","f68f26f2":"learn.lr_find()\nlearn.recorder.plot()","adeab91b":"# we select the slice with the steepest slope\nlearn.unfreeze()\nlearn.fit_one_cycle(1, max_lr=slice(1e-5,1e-4))","e281f178":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix(figsize=(5,5), dpi=60)","563e64f0":"preds,y =learn.get_preds(DatasetType.Test)","84110128":"labels = preds.numpy()","50523ef1":"labels.shape","b81293d4":"data.test_ds","aadf6966":"predictions = [i.argmax().item() for i in labels]","6b285dc9":"predictions","a5e289d8":"os.listdir('\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/chest_xray\/val\/NORMAL\/')","42600d1f":"images = []\nlabels = []\nfor image in os.listdir('\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/chest_xray\/val\/NORMAL\/'):\n    if image != '.DS_Store':\n        images.append(image)\n        labels.append(0)","3a3672d9":"for image in os.listdir('\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/chest_xray\/val\/PNEUMONIA\/'):\n     if image != '.DS_Store':\n        images.append(image)\n        labels.append(1)","b9ab6595":"import pandas as pd\nresults = pd.DataFrame({'Image_Name':images,'Actual_Label':labels})","d00047c9":"results.shape","c4049c61":"results['Predicted_Label'] = predictions","8f26e6e8":"results","13dbe78c":"from sklearn.metrics import accuracy_score\naccuracy_score(results['Predicted_Label'].values,results['Actual_Label'].values)","53834373":"import PIL\nPIL.Image.open('\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/chest_xray\/val\/PNEUMONIA\/person1951_bacteria_4882.jpeg')","ce09ecc5":"Confusion Matrix","d7e221b3":"# Infected Image","be7431db":"# interpret the results","43286a53":"# Predictions for test Images"}}