{"cell_type":{"b5de7642":"code","20daaef8":"code","e233a521":"code","5082dab4":"code","594dd08e":"code","10377d29":"code","138965d3":"code","69846724":"code","5d96ea60":"code","041efe2f":"code","ae00b377":"code","f9452bbf":"code","bc868944":"code","63eaa064":"code","7e63a4b6":"code","07174ee1":"code","eb4aec2f":"code","85a147b9":"code","cf6db340":"markdown","98f81f55":"markdown","883e1f51":"markdown","3c6da9c3":"markdown","9a868036":"markdown","59eb4e21":"markdown","63ed22fa":"markdown"},"source":{"b5de7642":"# Hello world\nprint('Hello_world')","20daaef8":"#try yourself\nprint('---')","e233a521":"#Assignments\n#As in other languages no need to explicitly define the data type of the variable :D\n\n#strings\nprint('Strings')\nDATA ='HELLO WORLD'\nprint(DATA[0])\nprint(len (DATA))\nprint(DATA)\nprint('-'*30)\n\n# NUMBERS\nprint('Numbers')\nVALUE = 123.1\nprint(VALUE)\nVALUE = 10\nprint(VALUE)\nprint('-'*30)\n\n# BOOLEAN\nprint('Boolean')\nA = True\nB = False\nprint(A, B)\n","5082dab4":"#Flow Control\n#If-else statements\nprint('If-else statements')\nVALUE = 99\nif VALUE == 99:\n    print('THAT IS FAST')\nelif  VALUE > 200:\n    print('THAT IS TOO FAST')\nelse:\n    print('THAT IS SAFE')","594dd08e":"#FOR LOOP\nprint('-'*30)\nprint('FOR LOOP')\nfor I in range(10):  \n    print(I)\n    \n#WHILE LOOP\nprint('-'*30)\nprint('WHILE LOOP')\nI = 0\nwhile I < 10:  \n    print(I)\n    I += 1","10377d29":"#Data Structure\n#tuples\nprint('Tuples')\n\na = (1,2,3,4,'a','b')\nprint(a)\nb = a\nprint('length of b is : ',len(b))","138965d3":"#Data Stucture\n#List\nlist1 = [1,2,3,'hello',True,'world']\nlist2 = list1\nprint(list1)\nprint('length of list2 is :' ,len(list2))\nprint('Third element of list1 : ',list1[2])\nprint('see the mutation')\nlist2[2] = 'baymax'\nprint('Third element of list1 after mutation : ',list1[2])\n","69846724":"#Data tructure\n#Dictionaries\n\n#This is dictionary of names and age of a group of people\ndict1 = {'Ram':25,'Gokul':22,'Joseph': 55,'Ronald':43,'Bilal':23,'Dev':21}\nprint(\"Ram's age is: \", dict1['Ram'])\ndict1['Ram'] = 20\nprint(\"Ram's correct age is:\",dict1['Ram'])\n\nfor key in dict1.keys():\n    print(key,\" \",dict1[key])","5d96ea60":"#Functions\n#Function add sum of two number \n\ndef sum(a,b):\n    return a+b\n\nprint(sum(2,3))","041efe2f":"#Operators","ae00b377":"#File I\/O","f9452bbf":"#Numpy\n# define an array\nimport numpy as np\nmylist = [1, 2, 3,4,6,7,99,3]\nmyarray = np.array(mylist)\nprint(myarray)\nprint(myarray.shape)\n\n#Numpy useful functions\nprint('sum :',np.sum(myarray))\nprint('mean :',np.mean(myarray))\nprint('Standard Deviation :',np.std(myarray))\n\n","bc868944":"# access values\nimport numpy\nmylist = [[1, 2, 3], [3, 4, 5]]\nmyarray = numpy.array(mylist)\nprint(myarray)\nprint(myarray.shape)\nprint(\"First row: \",myarray[0])\nprint(\"Last row: \",myarray[-1])\nprint(\"Specific row and col: \",myarray[0, 2])\nprint(\"Whole col: \",myarray[:, 2])","63eaa064":"# arithmetic\nimport numpy\nmyarray1 = numpy.array([2, 2, 2])\nmyarray2 = numpy.array([3, 3, 3])\nprint(\"Addition: \",(myarray1 + myarray2))\nprint(\"Multiplication:\",(myarray1 * myarray2))","7e63a4b6":"# basic line plot\nimport matplotlib.pyplot as plt\nimport numpy\nmyarray = numpy.array([1, 2, 3])\nplt.plot(myarray)\nplt.xlabel('some x axis')\nplt.ylabel('some y axis')\nplt.show()","07174ee1":"# basic scatter plot\nimport matplotlib.pyplot as plt\nimport numpy\nx = numpy.array([1, 2, 3,4,5,6])\ny = numpy.array([2, 4, 6,8,10,12])\nplt.scatter(x,y)\nplt.xlabel('some x axis')\nplt.ylabel('some y axis')\nplt.show()","eb4aec2f":"# series\nimport numpy\nimport pandas\nmyarray = numpy.array([1, 2, 3])\nrownames = ['a','b','c']\nmyseries = pandas.Series(myarray, index=rownames)\nprint(myseries)\n\nprint(myseries[0])\nprint(myseries['a'])","85a147b9":"# dataframe\nimport numpy\nimport pandas\nmyarray = numpy.array([[1, 2, 3], [4, 5, 6]])\nrownames = ['a','b']\ncolnames = ['one','two','three']\nmydataframe = pandas.DataFrame(myarray, index=rownames, columns=colnames)\nprint(mydataframe)","cf6db340":"# Part -1 Python\n\nHere we will see some basic concepts on python\n","98f81f55":"# Matplotlib ","883e1f51":"# Numpy(Numerical Python)\n\nArrays:\n\nHey we have list in python which is cool than any programming language ,the why numpy array.\nThe answer is numpy have so many useful functions like min(),std(),sum(),mean() etc.\n","3c6da9c3":"# Pandas\n\nPandas provides data structures and functionality to quickly manipulate and analyze data.\n\nThe key to understanding Pandas for machine learning is understanding the Series and DataFrame data structures.","9a868036":"# Part-2 Scipy\n we will be learning\n* numpy\n* mathplotlib\n* pandas","59eb4e21":"# Crushing the tools\n This is a part of the blog that I created in medium - Machine learning for absolute beginners.\n \n We will be covering the basics of python(version-3),scipy and sckit-learn\n[Haven't yo seen my blog!!!!!](https:\/\/www.google.com\/url?sa=i&rct=j&q=&esrc=s&source=images&cd=&cad=rja&uact=8&ved=2ahUKEwi88M3r36HiAhWKsY8KHVB7ASkQjRx6BAgBEAU&url=https%3A%2F%2Fmemegenerator.net%2Finstance%2F42970028%2Ffrank-costanza-enough-talk-lets-code&psig=AOvVaw1fbSRVYOlXMO15y4gGcpuW&ust=1558154454774973) \n\n> > Run each cell by cell given below to run the code snippets","63ed22fa":"Python Modules"}}