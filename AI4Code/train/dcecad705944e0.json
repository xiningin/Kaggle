{"cell_type":{"ec612d5f":"code","62d1fbda":"code","03c5c941":"code","bb98529d":"code","1b03763e":"code","6049ff08":"code","e7ba302c":"code","06d07228":"code","32a3d8b8":"code","9d7f9825":"code","6102657c":"code","88543615":"code","b96b3996":"code","3e8d9355":"code","a3de6553":"code","de37dae2":"code","2619bcf2":"code","c3a7bd0c":"code","bf4ed965":"code","d2fd9a8b":"code","f8b26ba2":"code","d830ddaa":"markdown","d10dfac6":"markdown","c4e0e6a3":"markdown","15ab717b":"markdown","cbb81eb1":"markdown","e02f38bb":"markdown","a97445fc":"markdown","7754a097":"markdown","9182a735":"markdown","fa449014":"markdown","392752d4":"markdown","f7cf587d":"markdown","e4628094":"markdown","0955c784":"markdown","1da2a596":"markdown","1dac8eab":"markdown","975a858a":"markdown"},"source":{"ec612d5f":"# Visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport numpy as np\n\n# Keras\nfrom keras import layers, models\nfrom keras import datasets\nfrom keras.utils import np_utils","62d1fbda":"# Load Dataset from keras's mnist data\n(X_train, y_train), (X_test, y_test) = datasets.mnist.load_data()","03c5c941":"fig, axes = plt.subplots(1, 5, figsize=(20, 5))\nfig.suptitle(\"X_train\",fontsize=50)\nfor i in range(0,5):\n    sns.heatmap(ax = axes[i], data = X_train[i])\nfig.show()","bb98529d":"fig, axes = plt.subplots(1, 5, figsize=(20, 5))\nfig.suptitle(\"X_test\",fontsize=50)\nfor i in range(0,5):\n    sns.heatmap(ax = axes[i], data = X_test[i])\nfig.show()","1b03763e":"y_train[:5], y_test[:5]","6049ff08":"np_utils.to_categorical(y_train)[0]","e7ba302c":"# Make y data to categorical data\ny_train = np_utils.to_categorical(y_train)\ny_test = np_utils.to_categorical(y_test)","06d07228":"X_train.shape","32a3d8b8":"L, W, H = X_train.shape\nX_train = X_train.reshape(-1,W*H)\nX_test = X_test.reshape(-1,W*H)","9d7f9825":"X_train.shape","6102657c":"# Make range (0~255) ~ (0~1)\nX_train = X_train \/ 255.0\nX_test = X_test \/ 255.0","88543615":"X_train.shape, y_train.shape, X_test.shape, y_test.shape","b96b3996":"# Make ANN model!\nx = layers.Input(shape= (784,))\nh = layers.Activation('relu')(layers.Dense(100)(x))\ny = layers.Activation('softmax')(layers.Dense(10)(h))\nmodel = models.Model(x,y)\nmodel.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics=['accuracy'])","3e8d9355":"history = model.fit(X_train, y_train, epochs=15, batch_size=100, validation_split=0.2)","a3de6553":"performance_test = model.evaluate(X_test, y_test, batch_size=100)","de37dae2":"print('Test Loss ',performance_test[0])\nprint('Test Accuracy ',performance_test[1])","2619bcf2":"fig,axes = plt.subplots(1,2, figsize=(15,8))\nfig.suptitle(\"The model 's evaluation \",fontsize=20)\naxes[0].plot(history.history['loss'])\naxes[0].plot(history.history['val_loss'])\naxes[0].set_title('Model Loss')\naxes[0].set_ylabel('Loss')\naxes[0].set_xlabel('Epoch')\naxes[0].legend(['Train','Test'])\n\n\naxes[1].plot(history.history['accuracy'])\naxes[1].plot(history.history['val_accuracy'])\naxes[1].set_title('Model Accuracy')\naxes[1].set_ylabel('Accuracy')\naxes[1].set_xlabel('Epoch')\naxes[1].legend(['Train','Test'])\nplt.show()","c3a7bd0c":"pred = model.predict(X_test)","bf4ed965":"X_test = X_test.reshape(10000, 28,28)","d2fd9a8b":"fig, axes = plt.subplots(1, 5, figsize=(20, 5))\nfig.suptitle(\"X_test\",fontsize=50)\nfor i in range(0,5):\n    sns.heatmap(ax = axes[i], data = X_test[i])\nfig.show()","f8b26ba2":"import pandas as pd\npred = pd.DataFrame(pred[:5])\n\ndef highlight_max(s):\n    '''\n    highlight the maximum in a Series yellow.\n    '''\n    is_max = s == s.max()\n    return ['background-color: yellow' if v else '' for v in is_max]\n\npred.T.style.apply(highlight_max)","d830ddaa":"# Adjust data's shape","d10dfac6":"![](https:\/\/leakyreluhome.files.wordpress.com\/2020\/01\/ce_loss.png?w=352)","c4e0e6a3":"## Now Look at the Dataset","15ab717b":"# ANN : Trying DeepLearning using keras!","cbb81eb1":"![](https:\/\/1.cms.s81c.com\/sites\/default\/files\/2020-05-27\/Screen%20Shot%202020-05-27%20at%201.40.54%20PM_0.png)","e02f38bb":"## The y data is number's result","a97445fc":"### This function make number to categorical data, like pandas get_dummies","7754a097":"# Load Datasets and Visualization","9182a735":"### Now, We ready to make model","fa449014":"### And, adjust x's range (0 ~ 255) to (0 ~ 1)","392752d4":"# Prediction","f7cf587d":"# Make model","e4628094":"### Using reshape, Make X data, 2 dimension to 1 dimension","0955c784":"# Import libraries ","1da2a596":"![](https:\/\/keras.io\/img\/logo-k-keras-wb.png)","1dac8eab":"### Make ANN model that classify handwritten number by using keras's datasets","975a858a":"## The X data is handwrittem number"}}