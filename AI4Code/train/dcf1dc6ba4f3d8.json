{"cell_type":{"14462d07":"code","daf246aa":"code","1867d11e":"code","4591cbc0":"code","2e8a9794":"code","3e97a4c8":"code","b9963d78":"code","6688285e":"code","7272bf2b":"code","d18f6a60":"code","db93d38f":"code","8c16accc":"code","5e32ae60":"code","f563c973":"code","3c3c5f84":"code","4f35f667":"code","7d1f263c":"code","f9a04b62":"markdown","a51e541b":"markdown","ac5d2351":"markdown","f8cb4d71":"markdown","1bfa74f1":"markdown","95675237":"markdown","2d1cbf25":"markdown","226f3a4c":"markdown","581fde55":"markdown","6fefde0f":"markdown","cd7cd09b":"markdown","8a9c1086":"markdown","99bd1745":"markdown"},"source":{"14462d07":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# Author: Mbonu Chinedum Endurance \n# Country: Nigeria\n# University: Nnamdi Azikiwe University \n# Description: Malaria Prediction From Cell Images Samples \n# Date Created: 2\/07\/2020 \"Buhari Tenor\" \n# Date Modified: 2\/07\/2020 \"Buhari Tenor\"","daf246aa":"# Importing the necessary modules \nimport os \nimport cv2 \nimport numpy as np \nimport tensorflow as tf \nimport matplotlib.pyplot as plt \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.preprocessing import StandardScaler, LabelEncoder \nfrom tensorflow.keras.optimizers import SGD \nfrom tensorflow.keras.layers import Flatten \nfrom tensorflow.keras.utils import to_categorical \nfrom tensorflow.keras.models import Sequential \nfrom tensorflow.keras.layers import Conv2D \nfrom tensorflow.keras.layers import Dense \nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator \nfrom tensorflow.keras.layers import MaxPooling2D ","1867d11e":"# Getting the path to the dataset directory \n# Getting the path to the working directory \nworkingDir = \"\/kaggle\/input\/cell-images-for-detecting-malaria\"\nPATH = os.path.sep.join([workingDir, \"cell_images\"])\n\n# Getting the path ot the training directory \ntrain_dir = os.path.join(PATH, \"cell_images\")\n\n# Getting the path to the validation directory \nvalidation_dir = os.path.join(PATH, \"cell_images\")","4591cbc0":"# Getting the path to the directory for the parasitized training cell images and \n# the getting the path to the directory for the uninfected training cell images \nparasitized_train_dir = os.path.join(train_dir, \"Parasitized\")\nuninfected_train_dir = os.path.join(train_dir, \"Uninfected\")\n\n# Getting the path to the directory for the parasitized validation cell images and \n# the path to the directory for the uninfected validation cell images \nparasitized_val_dir = os.path.join(validation_dir, \"Parasitized\") \nuninfected_val_dir = os.path.join(validation_dir, \"Uninfected\")","2e8a9794":"# Getting the number of images present in the parasitized training directory and the \n# number of images present in the uninfected training directory \nparasitized_images = len(os.listdir(parasitized_train_dir))\nuninfected_images = len(os.listdir(uninfected_train_dir))\n\n# Getting the number of images present in the parasitized validation directory and the \n# number of images present in the uninfected validation directory \nparasitized_images_val = len(os.listdir(parasitized_val_dir)) \nuninfected_images_val = len(os.listdir(uninfected_val_dir)) \n\n# Getting the sum of both the training images and validation images \ntotal_train = parasitized_images + uninfected_images  \ntotal_val = parasitized_images_val + uninfected_images_val \n\n# Displaying the results for Training images  \nprint(\"Total Training parasitized images: {}\".format(parasitized_images)); \nprint(\"Total Training uninfected images: {}\".format(uninfected_images)); \nprint(\"__________________________________________________________________________________________________________\\n\");\n\n# Displaying the results for Validation images  \nprint(\"Total Validation parasitized images: {}\".format(parasitized_images_val)); \nprint(\"Total Validation uninfected images: {}\".format(uninfected_images_val)); \nprint(\"__________________________________________________________________________________________________________\\n\"); \n\n# Displaying the total values for the images in both the training and validation directory \nprint(\"Total Train: {}\".format(total_train)); \nprint(\"Total Validation: {}\".format(total_val)); ","3e97a4c8":"# Setting the batch size, number of epochs, the image height and width parameters \nbatch_size = 2000\nepochs = 20 \nIMG_HEIGHT = 98 \nIMG_WIDTH = 98 ","b9963d78":"# Creating the generator for our training images data and for our validation images data \ntrain_image_gen = ImageDataGenerator(rescale = 1.0 \/ 255.0)\nvalidation_image_gen = ImageDataGenerator(rescale = 1.0 \/ 255.0) \n\n# Getting the training images from the train directory by using the flow from directory method \n# to load the images with a stated batch size and an image height and width. \ntrain_data_gen = train_image_gen.flow_from_directory(batch_size = batch_size, \n                                                    directory = train_dir, \n                                                    shuffle = True, \n                                                    target_size = (IMG_HEIGHT, IMG_WIDTH), \n                                                    class_mode = \"binary\")\n\n# Getting the validation images from the validation directory by using the flow from_from_directory method \n# to load the images, shuffle them, and resize them with an image height and a specified width value. \nvalidation_data_gen =validation_image_gen.flow_from_directory(batch_size = batch_size, \n                                                             directory = validation_dir, \n                                                             shuffle = True, \n                                                             target_size = (IMG_HEIGHT, IMG_WIDTH), \n                                                             class_mode = \"binary\")","6688285e":"# Getting the images and labels from the training data generator \nsample_training_images, train_label = next(train_data_gen) \n\n# Getting the images and labels from the training data generator \nsample_training_images, train_label = next(train_data_gen) \n\n# Getting the images and labels from the validation data generator \nsample_validation_images, val_label = next(validation_data_gen) \n\n# Defining a function to plot the images in the form of a grid with 1 row and 15 columns where the \n# Images are placed in each column with their respective labels \ndef plotImages(images, batch=None): \n    global train_data_gen \n    fig, axes = plt.subplots(1, 15, figsize=(17, 20))\n    # Flatten the axes \n    axes = axes.flatten() \n    # Creating a loop to loop throught the image directory and plot the images \n    for img, ax, labels in zip(images, axes, batch): \n        # Extracting the respective labels or tags for the plotted images \n        for key, value in train_data_gen.class_indices.items(): \n            # Converting the labels into integer values \n            labels = int(labels) \n            # Plotting the images by the label key value for the respective goten integer value \n            if value == labels: \n                ax.set_title(key) \n                ax.imshow(img) \n                ax.axis(\"off\")\n                \n    # Displaying the plot \n    plt.tight_layout() \n    plt.show() \n    \n    \n# Plotting 15 random images from the sample training images with its respective labels \nplotImages(sample_training_images[:15], train_label[:15])\n\n# Plotting 15 images from the sample validation images \nplotImages(sample_validation_images[:15], val_label[:15])","7272bf2b":"# Displaying the shape of the sample training image data \nprint(\"Input Shape: {}\".format(sample_training_images.shape)); \n\n# Displaying the shape of the output training images label \nprint(\"Output Shape: {}\".format(train_label.shape)); \n\n# Displaying the shape of the validation images data \nprint(\"Validation Input Shape: {}\".format(sample_validation_images.shape)); \n\n# Displaying the shape of the sample output validation images label \nprint(\"Validation Output Shape: {}\".format(val_label.shape)); ","d18f6a60":"# Displaying the label class and its respective key value for the class \nlabelClass = list(train_data_gen.class_indices.items())\n\n# Showing the values \nprint(\"Label Class: {}\".format(labelClass))","db93d38f":"# Building the model \ndef ModelDefined(dim): \n    # Using the tensorflow Sequential module to create the model then add some specific \n    # Parameters. \n    model = Sequential([\n        Conv2D(16, 3, padding=\"same\", activation=\"relu\", input_shape=dim),\n        MaxPooling2D(), \n        Conv2D(32, 3, padding=\"same\", activation=\"relu\"), \n        MaxPooling2D(), \n        Conv2D(64, 3, padding=\"same\", activation=\"relu\"), \n        MaxPooling2D(), \n        Flatten(), \n        Dense(512, activation=\"relu\"), \n        Dense(1)\n        \n    ])\n    \n    # Compiling the model and setting the optimizer to be adam, and a loss function of binary crossentropy \n    model.compile(optimizer=\"adam\", loss=tf.keras.losses.BinaryCrossentropy(from_logits=True), \n                 metrics=[\"accuracy\"])\n    \n    # Returning the compiled model to be loaded easily \n    return model \n\n\n# Setting the dimensions to be passed into the model function \ndim = (IMG_HEIGHT, IMG_WIDTH, 3); \n\n# Creating the model \nmodel = ModelDefined(dim); \n\n# Displaying the summary of the model \nmodel.summary(); ","8c16accc":"# Training the model on the input data by using the fit_generator function \nH = model.fit_generator(train_data_gen, steps_per_epoch = total_train \/\/ batch_size, \n                       epochs = epochs, \n                       validation_data = validation_data_gen, \n                       validation_steps = total_val \/\/ batch_size) \n\n\n# Saving the model for further uses \nmodelName = \"MalariaModel.h5\" \nmodel.save_weights(modelName); ","5e32ae60":"# Setting the type of plot style for the graph \nplt.style.use(\"ggplot\") \n\n# Getting the accuracy and the validation accuracy \naccuracy = H.history[\"accuracy\"]\nvalidation_accuracy = H.history[\"val_accuracy\"]\n\n# Getting the loss and the validation loss \nloss = H.history[\"loss\"]\nvalidation_loss = H.history[\"val_loss\"] \n\n# Getting the epochs range \nepochs_range = range(epochs) \n\n# Plotting the first graph for accuracy \nplt.figure(figsize=(17, 8)); \nplt.plot(epochs_range, accuracy, label = \"Training Accuracy\"); \nplt.plot(epochs_range, validation_accuracy, label = \"Validation Accuracy\"); \nplt.xlabel(\"Epochs\"); \nplt.ylabel(\"Accuracy\"); \nplt.legend(loc=\"lower right\"); \nplt.title(\"Training And Validation Accuracy\"); \nplt.show(); ","f563c973":"# Plotting the second graph for loss \nplt.figure(figsize=(17, 8)) \nplt.plot(epochs_range, loss, label = \"Training Loss\"); \nplt.plot(epochs_range, validation_loss, label = \"Validation Loss\"); \nplt.xlabel(\"Epochs\"); \nplt.ylabel(\"Loss\"); \nplt.legend(loc=\"upper right\"); \nplt.title(\"Training And Validation Losses\"); \nplt.show() ","3c3c5f84":"# Making predictions \nimg = \"\/kaggle\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Parasitized\"\n\n# Getting the first Four images \nImgDir = list(os.listdir(img)) \nImgDir = ImgDir[:3]\n\n# Displaying the first 4 images in the Parasitized folder \nprint(ImgDir)\nprint(\"_________________________________________________________________________\")\nprint(\"\"); \n\n# Loading Just a random image from the Parasitized images folder. \nimagePath = os.path.join(img, \"C175P136NThinF_IMG_20151127_142326_cell_236.png\")\n\n# Displaying the full path to the parasitized image we want to use for prediction. \nprint(imagePath)","4f35f667":"# Loading the image into memory \nimg = cv2.imread(imagePath); \n\n# Setting the dimensions for the loaded image to be converted into and displaying the shape of the image \nprint(\"Loaded Image Shape: {}\".format(img.shape)); \ndim = (IMG_HEIGHT, IMG_WIDTH); \n\n# Resizing the image \nimg = cv2.resize(img, dim, interpolation = cv2.INTER_AREA); \nplt.grid(False) \nplt.imshow(img) \nplt.show() ","7d1f263c":"# Expanding the image dimensions \nimage = np.expand_dims(img, axis = 0); \n\n# Making Final Predictions \nresult = model.predict_classes(image)\n# Creating a loop to get the actual predicted class \nfor key, value in (train_data_gen.class_indices.items()): \n    if value == result: \n        print(\"The Predicted Class is: {}\".format(key))","f9a04b62":"<img src=\"https:\/\/s3.amazonaws.com\/user-media.venngage.com\/402325-42ab45559c42581ee3c12baff73dbe7d.gif\" width=\"700px\" style=\"float:left\">  <br> <br> ","a51e541b":"<b> <h3> Signs And Symptoms <\/h3> <\/b>\n\n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/d\/db\/Symptoms_of_Malaria.png\" alt=\"symptoms_of_malaria\" width=\"600px\" height=\"500px\" style=\"float:left\">  <br> <br> ","ac5d2351":"<b> <h3> Making Predictions <\/h3> <\/b> ","f8cb4d71":"<b> <h3> Data Preparation <\/h3> <\/b> \n\n<p> Format the images into appropriately pre-processed floating point tensors before feeding to the network: \n<ul> \n    <li> Firstly read the image from disk or in the working directory <\/li> \n    <li> Decode the contents of the images and convert it into a proper grid format as their <b> RGB <\/b> content. <\/li> \n    <li> Convert the images then into floating point tensors <\/li> \n    <li> Rescale the tensors from valies between the range of 0 and 255 to values from 0 to 1, because neural networks take in small input values. <\/li> \n<\/ul> \n\nAll this tasks can be done whith the <b> ImageDataGenerator <\/b> class which is providec by the <b> tf.keras module. <\/b> It can read images from disk and preprocess them \ninto proper tensors. It will alos set up generators that also convert this images into batches of tensors which are helpful when trainning the neural network. \n    \nAfter defining the generators for the training and validation images, the <b> flow_from_directory <\/b> method load the images from the disk, applies rescaing, and resized the imaes into the required dimensions.     \n<\/p> ","1bfa74f1":"<b> <h3> Model Building <\/h3> <\/b> \n\n<p> The model consists of three convolution blocks with a max pool layer in each of them. There is a fully connected layer with 512 units on top of its that is activated by a\n    <b> relu <\/b> activation function .  <\/p> ","95675237":"<p> Owing to the non-specific nature of the presentation of symptoms, diagosis of <b> malaria<\/b> in non-endemic areas require a high degree of suspicion, which might be elicited by \nany of the following:\n<ul> \n    <li> Travel history, enlarged spleen <\/li> \n    <li> Fever, low number of platelets in the blood <\/li> \n    <li> Higher than normal levels of bilirubin in the blood combined with a normal level of white blood cells. <\/li> \n<\/ul> \nMalaria is usually confirmed by the microscopic examination of blood films or by antigen-based rapid diagnostic tests (RDT). In some areas, RDTs must be able to distinguish\nwhether the malaria symptoms are caused by Plasmodium falciparum or by other species of parasites since treatment strategies could differ for non-P.\nMicroscopy is the most commonly used method to detect the malarial parasite\u2014about 165 million blood films were examined for malaria in 2010.\n\n<\/p> \n\n\n\n<b> <h3> Treatment <\/h3> <\/b> \n\n<p> <b> Malaria <\/b> is treated with antimalarial medications, the ones used depends on the type and severity of the disease. While medications against fever are commonly used, their effects on outcomes are not clear. Providing free antimalarial drugs to households may reduce childhood deaths when used appropriately. Programmes which presumptively treat all causes of fever with antimalarial drugs may lead to overuse of antimalarials and undertreat other causes of fever. Nevertheless, the use of malaria rapid-diagnostic kits can help to reduce over-usage of antimalarials.<\/p> \n\n\n\n<b> <h3> Prevention <\/h3> <\/b> \n\n<p> Methods used to prevent malaria include medications, mosquito elimination and the prevention of bites. As of 2020, there is one vaccine for malaria (known as RTS,S) which is licensed for use. The presence of malaria in an area requires a combination of high human population density, high anopheles mosquito population density and high rates of transmission from humans to mosquitoes and from mosquitoes to humans. If any of these is lowered sufficiently, the parasite eventually disappears from that area, as happened in North America, Europe, and parts of the Middle East. However, unless the parasite is eliminated from the whole world, it could re-establish if conditions revert to a combination that favors the parasite's reproduction. Furthermore, the cost per person of eliminating anopheles mosquitoes rises with decreasing population density, making it economically unfeasible in some areas.<\/p> \n\n\n\n<b> <h4> References <\/h4> <\/b> \n\n    \n- <b> Wikipedia: <\/b> https:\/\/en.wikipedia.org\/wiki\/Malaria  \n    \n- <b> Mayoclinic: <\/b> https:\/\/www.mayoclinic.org\/diseases-conditions\/malaria\/symptoms-causes\/syc-20351184  \n    \n- <b> MedicineNet: <\/b> https:\/\/www.medicinenet.com\/malaria_facts\/article.htm  \n    \n- <b> University Of Oxford: <\/b> http:\/\/www.ox.ac.uk\/news\/2018-04-25-getting-rid-malaria-possible-if-we-try-something-new  \n    \n- <b> Venngage: <\/b> https:\/\/venngage.net\/p\/80639\/malaria-willem-foster  \n         ","2d1cbf25":"<p> <b> Malaria <\/b> is a <b> mosquito-borne <\/b> infectious disease that affects humans and other animals. Malaria causes symptoms that typically include fever, tiredness, vomiting,\nand headaches. In severe cases it can cause yellow skin, seizures, coma or death. \nWhile the disease is uncommon in temperate climates, <b> malaria <\/b> is still common in tropical and subtropical countries. World health officials are trying to reduce the incidence of malaria by distributing bed nets to help protect people from <b> Mosquito <\/b> bites as they sleep. Scientists around the world are working to develop a vaccine to prevent malaria. \n<b> Malaria <\/b> is caused by <b> single-celled <\/b> micro-organisms of the <b> Plasmodium <\/b> group. The disease is most commonly spread by an infected <b> Female Anopheles <\/b> mosquito. \nThe mosquito bite introduces the parasites from the mosquito's <b> saliva <\/b> into a person's blood. The parasites then travel to the liver where they mature and reproduce. \n<br> <br>  ","226f3a4c":"<br>\n<p> The signs and symptoms of malaria typically begins 8-25 days following infection, but may occur later in those who have taken <b> antimalarial medications<\/b> as prevention. \n    A malaria infection is characterized by the following signs and symptoms: \n    <ul> \n        <li> Fever <\/li> \n        <li> Headache <\/li> \n        <li> Shivering, joint pain <\/li> \n        <li> Vomiting, hemolytic anemia <\/li> \n        <li> Nausea and fatigue <\/li> \n        <li> Hemoglogin in the urine <\/li>  \n    <\/ul> \n    \n  Some people who have malaria experience cycles of malaria attacks. An attack usually starts with shivering and chills, followed by a high fever, sweating and a \n  return to normal temperature. <b> Malaria <\/b> signs and symptoms typically begin within a few weeks after being bitten by an infected <b> mosquito. <\/b> However, some types \n  of malaria parasites can lie dormant in your body for up to a year. \n    The classic symptom of malaria is <b> paroxysm <\/b> which is a cyclical occurrence of sudden coldness followed by shivering and then fever and sweating. \n<\/p> ","581fde55":"<b> <h3> Causes Of Malaria <\/h3> <\/b> \n\n<p> <b> Malaria <\/b> is caused  by a type of microscopic parasite. The parasite is transmitted to humans most commonly through mosquito bites. \n    \n<h4> Mosquito Transmission Cycle <\/h4> \n<ul> \n<li> <b> Uninfected mosquito: <\/b> A mosquito becomes infected by feeding on a person who has malaria <\/li>  \n<li> <b> Transmission Of Parasite: <\/b> if this particular mosquito bites you in the future, it can transmit malaria parasites to you. <\/li> \n<li> <b> In The Liver: <\/b> Once the parasites enter the body, they travel to your liver where some types can lie dormant for as long as a year. <\/li> \n<li> <b> Into The Bloodstream: <\/b> When the parasites mature, they leave the liver and infect your red blood cells. This is when people typically develop malaria symptoms. <\/li> \n<li> <b> On To The Next Person: <\/b> If an uninfected mosquito bites you at this point in the cycle, it will become infected with your malaria parasites and can spread them to the other people it bites. <\/li> \n\n<\/ul> \n\n<\/p> \n\n\n<b> <h3> Risk Factors <\/h3> <\/b> \n\n<p> The biggest risk factor for developing malaria is to live in or visit areas where the disease is common. There are many different varieties of malaria parasites. \nThe variety that causes the most serious complications is most commonly found in: \n<ul> \n    <li> <b> African <\/b> countries south of the Sahara Desert <\/li> \n    <li> The Asian subcontinent <\/li> \n    <li> <b> New Guinea <\/b>, the <b> Dominican Republic, Nigeria <\/b> and <b> Haiti <\/b> \n<\/ul> \nPeople at increased risk of this serious disease include: \n<ul> \n    <li> Young children and infants <\/li> \n    <li> Older Adults <\/li> \n    <li> Travelers coming from areas with no malaria <\/li> \n    <li> Pregnanat women and their unborn children <\/li> \n<\/ul> \n\nPoverty, lack of knowledge, and little or no access to health care also contribute to malaria deaths worldwide. \n\n<\/p> \n\n\n<b> <h3> Complications <\/h3> <\/b> \n\n<p> <b> Malaria <\/b> can be fatal, particulary malaria caused by the variety of parasite that's common in tropical parts of <b> Africa <\/b>. The <b> Centers For Disease Control and Prevention <\/b> estimates that 91 percent of all malaria deaths occur in <b> Africa <\/b> most commonly in children under the age of 5.  \n    \nIn most cases, malaria deaths are related to one or more serious complications, including: \n<ul> \n    <li> <b> Cerebral Malaria: <\/b> If parasite-filled blood cells block small blood vessels to your brain (cerebral malaria), swelling of your brain or brain damage may occur. Cerebral malaria may cause seizures and coma. <\/li> \n    <li> <b> Breathing Problems: <\/b> Accumulated fluid in your lungs (pulmonary edema) can make it difficult to breathe. <\/li> \n    <li> <b> Organ Failure: <\/b> <b> Malaria<\/b> can cause your kidneys or liver to fail, or your spleen to rupture. Any of these conditions can be life-threatening. <\/li> \n    <li> <b> Anemia: <\/b> <b> Malaria <\/b> damages red blood cells, which can result in anemia. <\/li> \n    <li> <b> Low blood sugar: <\/b> Severe forms of malaria itself can cause low blood sugar (hypoglycemia). <\/li> \n    \n<\/ul> \n\n<\/p> ","6fefde0f":"<b> <h3> Visualize The Training Images <\/h3> <\/b> \n    \n<p> The training images can be visualized by extracting a batch of images from the training generator. The <b> next <\/b> function returns a batch of images from the dataset. \nThe return value of the next function is in form of the <b> (X_train, y_train) <\/b> where <b> X_train <\/b> is the training features and <b> y_train <\/b> is its labels. <\/p> \n<p> So here, we plot both the training images with it respective labels. <\/p> ","cd7cd09b":"<b> <h3> Diagnosis <\/h3> <\/b> \n\n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/1\/13\/5901_lores.jpg\" width=\"800px\" style=\"float:left\" alt=\"mosquitoes\"> <br> \n<br> ","8a9c1086":"<b> <h1> Malaria Cell Images Analysis And Prediction <\/h1> <\/b> \n\n<b> <h3> Overview <\/h3> <\/b> \n\n<img src=\"https:\/\/www.ox.ac.uk\/sites\/files\/oxford\/styles\/ow_medium_feature\/public\/field\/field_image_main\/Malaria%20banner_0.jpg?itok=d_zOvyQy\" width=\"700px\" style=\"float:left\" alt=\"mosquitoes\">  ","99bd1745":"<b> <h2> Understanding The Data <\/h2> <\/b> \n\n<p> Let us look at how many parasitized and ininfected cell images are present in both the training and validation folders <\/p> "}}