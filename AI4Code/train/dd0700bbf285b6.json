{"cell_type":{"f506e227":"code","57a40f3a":"code","259678db":"code","850365c4":"code","8b45f06f":"code","1fda889e":"code","f7e9378a":"code","9ae6f1c6":"code","c47744c8":"code","24be51c4":"code","8926d5da":"markdown","93eb117d":"markdown","3433a92a":"markdown"},"source":{"f506e227":"import os\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\nfrom kaggle.competitions import twosigmanews","57a40f3a":"env = twosigmanews.make_env()","259678db":"TARGET_COLUMN = \"returnsOpenNextMktres10\"\nis_toy = False","850365c4":"(market_train_df, news_train_df) = env.get_training_data()","8b45f06f":"market_train_df[\"time\"] = market_train_df[\"time\"].dt.date\nmarket_train_df.set_index([\"time\", \"assetCode\"], inplace=True)","1fda889e":"labels = market_train_df[TARGET_COLUMN]\nmarket_train_df.drop([TARGET_COLUMN], axis=1, inplace=True)","f7e9378a":"def calculate_perfect_scores(market_data, labels):\n    predictions = labels.copy()\n    predictions = predictions > 0\n    predictions = predictions.astype(int)\n    predictions[predictions == 0] = -1\n    return_from_every_prediction = (labels * predictions * market_data[\"universe\"]).groupby(\"time\").sum()\n    score = return_from_every_prediction.mean() \/ return_from_every_prediction.std()\n    \n    return score, return_from_every_prediction","9ae6f1c6":"score, return_from_every_prediction = calculate_perfect_scores(market_train_df, labels)","c47744c8":"print(\"Score with perfect prediction\", score)","24be51c4":"values = return_from_every_prediction.values\n\nplt.plot(values);","8926d5da":"The score of the perfect classifier is just 0.22. It means that in this competition our goal is to get not a perfect model but profitable and low volatile model. \n\nBelow is the code getting the score of the perfect classifier. If you have found a mistake in the code please comment about it. ","93eb117d":"# Calculate the score of perfect classifier ","3433a92a":"# Get the data"}}