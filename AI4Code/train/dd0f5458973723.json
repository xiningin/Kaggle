{"cell_type":{"e2a58027":"code","ea87fe67":"code","c8203e23":"code","e6c9945a":"code","3fbabb68":"code","b5bd13eb":"code","718ca5e0":"code","9fcffa9a":"code","2cb7276b":"code","0fa74972":"code","4a133931":"code","a8739054":"code","ec3ca832":"code","191f2904":"code","7b389df0":"code","7d3f2981":"code","063ffc08":"code","62a74e0b":"code","e3217af2":"code","2c0b56f0":"code","cfb42227":"code","760af6fc":"code","fec3a07e":"code","691d4678":"code","e421eb2b":"code","ec6ca5ab":"code","69c78786":"code","7597f18f":"code","d3b8e503":"code","d96e4311":"code","698aae16":"code","4864da68":"code","5b88c9f0":"code","8dd3ba38":"code","677bb82d":"code","2963e626":"code","b666e6b7":"code","6beb6fcc":"code","db65b6b4":"code","fde5af15":"code","1ae91f73":"code","eeefb601":"code","0af94893":"code","2d9593d2":"code","19694d6a":"code","4fd3c54f":"code","5d6d0f3a":"code","cb2b25b8":"code","ea7ef39d":"code","17e687da":"code","0cf5c9ce":"code","76f21d5e":"code","e89b97e1":"code","1f39778b":"code","9eb1bc8f":"code","5c01ac55":"code","e42b231b":"code","1334e4e4":"code","851fecd3":"code","ad4236e1":"code","35b7d31b":"code","c2568019":"code","76128779":"markdown","13d46cb4":"markdown","6986d8de":"markdown","fd5d8e80":"markdown","c143cb5f":"markdown","fbc82204":"markdown","84bb7344":"markdown","448950ac":"markdown","697be37d":"markdown","16f407a9":"markdown","cde47b54":"markdown","6b190ce8":"markdown","3d5c9c71":"markdown","27b724c3":"markdown","e55e0a1c":"markdown","d3488ab0":"markdown","c527234d":"markdown","46dd1429":"markdown","97d44181":"markdown","f4afc5e9":"markdown","3be4c3c9":"markdown","9ba43bab":"markdown","157a719a":"markdown","005c9f20":"markdown","c282b2c4":"markdown","6fb523c0":"markdown","2d616795":"markdown","6c51030b":"markdown","ffbec461":"markdown","2443fcc7":"markdown","f9c6d9ac":"markdown","ffea9219":"markdown","6b0d84dc":"markdown","f8a3359b":"markdown","3d08e997":"markdown","11cffda2":"markdown","6d6148c9":"markdown","731afdbd":"markdown","53873caf":"markdown","5e03e83d":"markdown","cdaae8b5":"markdown","03098a8d":"markdown","73caa69d":"markdown","7f95ad0a":"markdown","0b8f3af1":"markdown","183a3e39":"markdown","7de685c2":"markdown","d8933e4d":"markdown","00d7e927":"markdown","a650057c":"markdown","6e5f6ae0":"markdown","f92647df":"markdown","59367a65":"markdown","e62eff50":"markdown","329dc236":"markdown","eb2101de":"markdown","d60b9397":"markdown","0995367a":"markdown","13307c9b":"markdown","2234189b":"markdown","bc19c55e":"markdown","2e436583":"markdown","aa2a3c60":"markdown","6ac50534":"markdown","1779d238":"markdown"},"source":{"e2a58027":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nimport scipy.stats as sts\nimport matplotlib.pyplot as plt\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nsns.set(rc={'figure.figsize':(15, 7)})\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ea87fe67":"iris_data = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')","c8203e23":"iris_data.info()","e6c9945a":"iris_data.head()","3fbabb68":"# convert_species_names = {0: 'setosa', 1: 'versicolor', 2: 'virginica'}\n\n# iris_data['species'] = iris_data['species'].map(convert_species_names)","b5bd13eb":"iris_data.drop(labels=['Id'], axis=1, inplace=True)","718ca5e0":"iris_data.columns = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species']","9fcffa9a":"def get_first_stats(data: pd.DataFrame, *, p_quantiles: list) -> pd.DataFrame:\n    # another variant of aggregation\n    # d = {column: [np.min, np.max, lambda x: dict(zip(p_quantiles, list(x.quantile(p_quantiles)))), np.median, np.average]\n    #      for column in iris_data.columns}\n    \n    # aggregated_data = iris_data.groupby(['species'], as_index=False).agg(d)\n\n    functions = [np.median, np.average, np.min, np.max, lambda x: dict(zip(p_quantiles, list(x.quantile(p_quantiles))))]\n    aggregated_data = iris_data.groupby(['species'], as_index=False).agg(functions)\n\n    return aggregated_data","2cb7276b":"p_quantiles = [.25, .5, .75]\nget_first_stats(iris_data, p_quantiles=p_quantiles)","0fa74972":"iris_data.head()","4a133931":"px.histogram(iris_data, x='species', color='species')","a8739054":"def build_prob_plots(data: pd.DataFrame) -> None:\n    fig, ax = plt.subplots(nrows=2, ncols=2, figsize=(15, 15))\n    cols = list(reversed(iris_data.columns))\n\n    for i in range(0, 2):\n        for j in range(0, 2):\n            sts.probplot(iris_data[f'{cols.pop()}'], dist='norm', plot=ax[i, j])\n    \n    return None\n\nbuild_prob_plots(iris_data)","ec3ca832":"fig, ax = plt.subplots(nrows=4, ncols=2, figsize=(18, 25))\n\nsns.histplot(iris_data, x='sepal_length', ax=ax[0, 0], bins='auto', kde=True)\nsts.probplot(iris_data['sepal_length'], dist='norm', plot=ax[0, 1])\n\nsns.histplot(iris_data, x='sepal_width', ax=ax[1, 0], bins='auto', kde=True)\nsts.probplot(iris_data['sepal_width'], dist='norm', plot=ax[1, 1])\n\nsns.histplot(iris_data, x='petal_length', ax=ax[2, 0], bins='auto', kde=True)\nsts.probplot(iris_data['petal_length'], dist='norm', plot=ax[2, 1])\n\nsns.histplot(iris_data, x='petal_width', ax=ax[3, 0], bins='auto', kde=True)\nsts.probplot(iris_data['petal_width'], dist='norm', plot=ax[3, 1])","191f2904":"def check_normality(data: pd.DataFrame, *, test_name: str, alpha: float) -> None:\n    columns_names = data[data.columns[~data.columns.isin(['species'])]]\n\n    if test_name.lower() == 'shapiro':\n        for col_name in columns_names:\n            statistic, p_value = sts.shapiro(data[f'{col_name}'])\n            isRejectedNull = 'Yes' if p_value < alpha else 'No'\n\n            print(\n                f'Shapiro normality test for {col_name}: '\n                f\"{statistic, p_value} with p_value {p_value}\\n\"\n                f'Reject H0 with p level of significance {alpha}? {isRejectedNull}\\n\\n'\n            )\n\n    elif test_name.lower() == 'clmrgv':\n        for col_name in columns_names:\n            statistic, p_value = sts.kstest(data[f'{col_name}'], 'norm')\n            print(\n                f'Colmorogov normality test for {col_name}: '\n                f\"{statistic, p_value} with p_value {p_value}\\n\\n\"\n            )\n\n    else:\n        raise ValueError('Invalid input')\n\n    return None\n\ndef get_p_values(data: pd.DataFrame, *, test_name: str, alpha: float):\n    columns_names = data[data.columns[~data.columns.isin(['species'])]]\n\n    if test_name.lower() == 'shapiro':\n        p_values = {col_name: sts.shapiro(data[f'{col_name}'])[1] for col_name in columns_names}\n\n        return p_values\n\n    if test_name.lower() == 'clmrgv':\n        p_values = {col_name: sts.kstest(data[f'{col_name}'], 'norm')[1] for col_name in columns_names}\n        \n        return p_values\n\n    return None\n\ncheck_normality(iris_data, test_name='shapiro', alpha=0.001)","7b389df0":"correlation_matrix = iris_data.corr()\n\nfig = ff.create_annotated_heatmap(x=list(correlation_matrix.index.values),\n                                  y=list(correlation_matrix.columns.values),\n                                  z=correlation_matrix.to_numpy().round(3), showscale=True)\n\nfig.update_layout(title_text='<b>Correlation matrix<b>', titlefont={'size': 35, 'family': 'Serif'}, autosize=True, width=1000, height=500)\n\nfig.show()","7d3f2981":"fig = px.scatter_matrix(iris_data,\n                  dimensions=iris_data.columns[~iris_data.columns.isin(['species'])],\n                  color='species',\n                  title='Scatter matrix',\n                  labels={col: col.replace('_', ' ') for col in iris_data.columns})\n\nfig.update_layout(autosize=False, width=1400, height=800)\n\nfig.show()","063ffc08":"fig = px.scatter_3d(iris_data,\n              x='sepal_length', y='sepal_width', z='petal_width',\n              symbol='species', opacity=0.7, color='petal_length',\n              size='petal_length')\nfig.update_layout(margin=dict(l=5, r=5, b=5, t=5))\nfig.show()","62a74e0b":"fig = px.scatter_3d(iris_data,\n              x='sepal_length', y='sepal_width', z='petal_length',\n              symbol='species', opacity=0.7, color='petal_width',\n              size='petal_width')\nfig.update_layout(margin=dict(l=5, r=5, b=5, t=5))\nfig.show()","e3217af2":"from sklearn.decomposition import PCA","2c0b56f0":"pca = PCA(n_components=2)\n\nX = iris_data[iris_data.columns[~iris_data.columns.isin(['species'])]]\nX_transformed = pca.fit_transform(X)\npca_transformed_data = pd.DataFrame(X_transformed)\npca_transformed_data.columns = ['z1', 'z2']\n\n# Percentage of variance explained for each components\nprint(f'Explained variance ratio (first two components): {pca.explained_variance_ratio_}')\n\npx.scatter(pca_transformed_data, x='z1', y='z2', color='z1', title='PCA Visualization')","cfb42227":"# transform according function\ndef transform_data(data, function) -> pd.DataFrame:\n    features = data.select_dtypes(exclude=['object']).apply(function)\n    features['species'] = data['species']\n\n    return features\n\n# boxcox transformation\ndef box_cox_transformation(data):\n\n    features_data = data[data.columns[~data.columns.isin(['species'])]]\n\n    for col_name in features_data.columns:\n        transformed_values, maxlog = sts.boxcox(features_data[f'{col_name}'])\n        features_data[f'{col_name}'] = transformed_values\n    \n    features_data['species'] = data['species']\n\n    return features_data\n\n# yeojohnson transformation\ndef yeojohnson_transformation(data):\n    features_data = data[data.columns[~data.columns.isin(['species'])]]\n\n    for col_name in features_data.columns:\n        transformed_values, maxlog = sts.yeojohnson(features_data[f'{col_name}'])\n        features_data[f'{col_name}'] = transformed_values\n    \n    features_data['species'] = data['species']\n\n    return features_data\n    \n# transformed datasets\niris_data_log_transformed = transform_data(iris_data, np.log)\niris_data_log1p_transformed = transform_data(iris_data, np.log1p)\niris_data_log10_transformed = transform_data(iris_data, np.log10)\n\niris_data_sqrt_transformed = transform_data(iris_data, np.sqrt)\n\niris_data_boxcox_transformed = box_cox_transformation(iris_data)\niris_data_yeojohnson_transformed = box_cox_transformation(iris_data)","760af6fc":"def build_stats_plots(data: pd.DataFrame) -> None:\n    fig, ax = plt.subplots(nrows=4, ncols=2, figsize=(18, 25))\n\n    sns.histplot(data, x='sepal_length', ax=ax[0, 0], bins='auto', kde=True)\n    sts.probplot(data['sepal_length'], dist='norm', plot=ax[0, 1])\n\n    sns.histplot(data, x='sepal_width', ax=ax[1, 0], bins='auto', kde=True)\n    sts.probplot(data['sepal_width'], dist='norm', plot=ax[1, 1])\n\n    sns.histplot(data, x='petal_length', ax=ax[2, 0], bins='auto', kde=True)\n    sts.probplot(data['petal_length'], dist='norm', plot=ax[2, 1])\n\n    sns.histplot(data, x='petal_width', ax=ax[3, 0], bins='auto', kde=True)\n    sts.probplot(data['petal_width'], dist='norm', plot=ax[3, 1])\n\n    fig.show()\n\n    return None","fec3a07e":"build_stats_plots(iris_data_log_transformed)","691d4678":"build_stats_plots(iris_data_log10_transformed)","e421eb2b":"build_stats_plots(iris_data_log1p_transformed)","ec6ca5ab":"build_stats_plots(iris_data_boxcox_transformed)","69c78786":"build_stats_plots(iris_data_yeojohnson_transformed)","7597f18f":"dataset_names = ['Iris', 'Iris_log', 'Iris_log10', 'Iris_log1p', 'Iris_sqrt', 'Iris_boxcox', 'Iris_yeojohnson']\ntesting_datasets = [iris_data, iris_data_log_transformed, iris_data_log10_transformed,\n                    iris_data_log1p_transformed, iris_data_sqrt_transformed,\n                    iris_data_boxcox_transformed, iris_data_yeojohnson_transformed]\n\nprint('Shapiro tests')\nfor name, data in zip(dataset_names, testing_datasets):\n    print(f'{name} dataset:\\n'\n          f\"{get_p_values(data, test_name='shapiro', alpha=0.01)}\\n\")","d3b8e503":"from copy import copy\n\nfinal_data = copy(iris_data)","d96e4311":"final_data['sepal_length'] = sts.boxcox(final_data['sepal_length'])[0]\nfinal_data['sepal_width'] = sts.boxcox(final_data['sepal_width'])[0]\nfinal_data['petal_length'] = sts.boxcox(final_data['petal_length'])[0]","698aae16":"final_data.head()","4864da68":"fig = px.box(final_data, x='species', y='sepal_length', color='species')\n\nfig.update_layout(title_text='<b>Sepal length<b>', titlefont={'size': 20, 'family': 'Serif'}, autosize=True, width=1000, height=500)","5b88c9f0":"fig = px.box(final_data, x='species', y='sepal_width', color='species')\n\nfig.update_layout(title_text='<b>Sepal width<b>', titlefont={'size': 20, 'family': 'Serif'}, autosize=True, width=1000, height=500)","8dd3ba38":"fig = px.box(final_data, x='species', y='petal_length', color='species')\n\nfig.update_layout(title_text='<b>Sepal length<b>', titlefont={'size': 20, 'family': 'Serif'}, autosize=True, width=1000, height=500)","677bb82d":"fig = px.box(final_data, x='species', y='petal_width', color='species')\n\nfig.update_layout(title_text='<b>Sepal width<b>', titlefont={'size': 20, 'family': 'Serif'}, autosize=True, width=1000, height=500)","2963e626":"convert_species_names = {'Iris-setosa': 0, 'Iris-versicolor': 1, 'Iris-virginica': 2}\n\nfinal_data['species'] = final_data['species'].map(convert_species_names)","b666e6b7":"X, y = final_data[final_data.columns[~final_data.columns.isin(['species'])]], iris_data['species']","6beb6fcc":"from sklearn.preprocessing import StandardScaler, MinMaxScaler, RobustScaler, normalize","db65b6b4":"# scaling\nX_standard_scaled = pd.DataFrame(StandardScaler().fit_transform(X), columns=X.columns)\nX_MinMax_scaled = pd.DataFrame(MinMaxScaler(feature_range=(-1, 1)).fit_transform(X), columns=X.columns)\nX_Robust_scaled = pd.DataFrame(RobustScaler().fit_transform(X), columns=X.columns)\n\n# normalized\nX_normalized = pd.DataFrame(normalize(X), columns=X.columns)","fde5af15":"from sklearn.model_selection import train_test_split","1ae91f73":"def split_data(X: pd.DataFrame, y: pd.Series, *, train_size: float=0.5):\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=1-train_size, random_state=42, stratify=y)\n    X_test, X_val, y_test, y_val = train_test_split(X_test, y_test, test_size=0.5, random_state=42, stratify=y_test)\n\n    return X_train, X_val, X_test, y_train, y_val, y_test\n\n# split our samples\nX_train_st_scaled, X_val_st_scaled, X_test_st_scaled, y_train_st_scaled, y_val_st_scaled, y_test_st_scaled = split_data(X_standard_scaled, y)\nX_train_mm_scaled, X_val_mm_scaled, X_test_mm_scaled, y_train_mm_scaled, y_val_mm_scaled, y_test_mm_scaled = split_data(X_MinMax_scaled, y)\nX_train_rb_scaled, X_val_rb_scaled, X_test_rb_scaled, y_train_rb_scaled, y_val_rb_scaled, y_test_rb_scaled = split_data(X_Robust_scaled, y)\nX_train_normalized, X_val_normalized, X_test_normalized, y_train_normalized, y_val_normalized, y_test_normalized = split_data(X_normalized, y)","eeefb601":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score, confusion_matrix, classification_report, plot_confusion_matrix\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.pipeline import Pipeline","0af94893":"regularization_params = np.arange(7, 60, 1)\nsolvers = ['sag']","2d9593d2":"clf = LogisticRegression(penalty='l2', tol=1e-5, C=3,\n                         random_state=0, multi_class='multinomial', class_weight='balanced',\n                         max_iter=1500, solver='sag')","19694d6a":"def create_models(reg_parameter: float, number_of_models: int=4):\n        return [LogisticRegression(penalty='l2', tol=1e-5, C=reg_parameter,\n                             random_state=0, multi_class='multinomial', class_weight='balanced',\n                             max_iter=1500, solver='sag')\n         for _ in range(number_of_models)] \n\ndef which_data(n):\n    if n == 1:\n        return 'Scaled data'\n    elif n == 2:\n        return 'Min Max scaled data'\n    elif n == 3:\n        return 'Robust scaled data'\n    elif n == 4:\n        return 'Normalized data'\n\nd = ((X_train_st_scaled, y_train_st_scaled, X_val_st_scaled, y_val_st_scaled, X_test_st_scaled, y_test_st_scaled),\n     (X_train_mm_scaled, y_train_mm_scaled, X_val_mm_scaled, y_val_mm_scaled, X_test_mm_scaled, y_test_mm_scaled),\n     (X_train_rb_scaled, y_train_rb_scaled, X_val_rb_scaled, y_val_rb_scaled, X_test_rb_scaled, y_test_rb_scaled),\n     (X_train_normalized, y_train_normalized, X_val_normalized, y_val_normalized, X_test_normalized, y_test_normalized))\n\nn = 1\n\n# fit regularization parameter C = 1\/lambda\nfor reg_parameter in regularization_params:\n    # create 4 models with lambda\n    models = create_models(reg_parameter, number_of_models=4)\n    n = 1\n    for model, data in zip(models, d):\n        X_train, y_train, X_val, y_val, X_test, y_test = data\n        \n        # cross-validation strategy\n        splits = 5\n        \n        # fit model according our train samples (J_train minimize)\n        model.fit(X_train, y_train)\n        \n        # predictions\n        predictions = model.predict(X_test)\n        \n        # optimize f1_weighted metric because we have multiclassification task\n        cross_valid_score = cross_val_score(model, X_train, y_train, scoring='f1_weighted', cv=splits)\n        mean_cross_val_score = np.mean(cross_valid_score)\n        \n        print(f'Model fitted with alpha = {reg_parameter} \\t on {which_data(n)}')\n        print(f'Cross-validation score: {cross_valid_score}\\nMean Cross-validation score: {mean_cross_val_score}\\n')\n        print(f'Report:\\n{classification_report(y_test, predictions)}\\n')\n        \n        n += 1","4fd3c54f":"clf = LogisticRegression(penalty='l2', tol=1e-5, C=70,\n                         random_state=0, multi_class='multinomial', class_weight='balanced',\n                         max_iter=1500, solver='sag')\n\n# fit model\nclf.fit(X_train_normalized, y_train_normalized)","5d6d0f3a":"! pip install -q scikit-plot\n\nimport scikitplot as skplt","cb2b25b8":"def convert_species_names(x):\n    if x == 0:\n        return 'Iris-setosa'\n    elif x == 1:\n        return 'Iris-versicolor'\n    elif x == 2:\n        return 'Iris-virginica'\n    else:\n        raise ValueError('Invalid input of the class')\n        \n\n# y_true = np.vectorize(convert_species_names)(y_test_normalized)\n# y_pred = np.vectorize(convert_species_names)(clf.predict(X_test_normalized))\n\ny_true = y_test_normalized\ny_pred = clf.predict(X_test_normalized)\n\nskplt.metrics.plot_confusion_matrix(y_true, y_pred, figsize=(7,7))","ea7ef39d":"def print_scores_info(clf, y_true, y_pred):\n    accuracy, precision, recall, f1, roc_auc_score_model = scores_info(clf, y_true, y_pred)\n    print(f'Accuracy score: {accuracy}\\n'\n            f'Precision score: {precision}\\n'\n            f'Recall score: {recall}\\n'\n            f'F1 score: {f1}\\n'\n            f'ROC-AUC ovr score: {roc_auc_score_model}')\n    \n    return None\n\ndef scores_info(clf, y_true, y_pred):\n    accuracy = accuracy_score(y_true, y_pred)\n    precision = precision_score(y_true, y_pred, average='weighted')\n    recall = recall_score(y_true, y_pred, average='weighted')\n    f1 = f1_score(y_true, y_pred, average='weighted')\n    roc_auc_score_model = roc_auc_score(y_test_normalized, clf.predict_proba(X_test_normalized), multi_class='ovr')\n\n    return accuracy, precision, recall, f1, roc_auc_score_model\n\nprint_scores_info(clf, y_test_normalized, clf.predict(X_test_normalized))","17e687da":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import f1_score\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler, normalize\nfrom sklearn.model_selection import GridSearchCV, StratifiedKFold","0cf5c9ce":"X, y = final_data[final_data.columns[~final_data.columns.isin(['species'])]], iris_data['species']","76f21d5e":"X_normalized = pd.DataFrame(normalize(X), columns=X.columns)","e89b97e1":"X_train_normalized, X_val_normalized, X_test_normalized, y_train_normalized, y_val_normalized, y_test_normalized = split_data(X_normalized, y)","1f39778b":"# rf_pipeline = Pipeline(steps = [\n#               ('classifier', RandomForestClassifier(class_weight='balanced')),\n              \n#            ])\n\n# param_grid = {'classifier__criterion': ['gini', 'entropy'], 'classifier__n_estimators': range(1, 50),\n#           'classifier__max_depth': range(1, 5), 'classifier__min_samples_leaf': range(1, 7)}\n\n# splits = 5\n# # folds = StratifiedKFold(n_splits=splits, shuffle=True, random_state=42).split(X, y)\n\n# grid = GridSearchCV(rf_pipeline, param_grid, scoring='f1_weighted', cv=splits)\n\n# grid.fit(X_train_normalized, y_train_normalized)","9eb1bc8f":"rf = RandomForestClassifier()\n\nparam_grid = {'criterion': ['gini', 'entropy'], 'n_estimators': range(1, 50),\n          'max_depth': range(1, 5), 'min_samples_leaf': range(1, 7)}\n\nsplits = 5\n# folds = StratifiedKFold(n_splits=splits, shuffle=True, random_state=42).split(X, y)\n\n# f1_weighted gives the same result (parameters on cross-val strategy of 5 statified folds)\ngrid = GridSearchCV(rf, param_grid, scoring='roc_auc_ovr_weighted', cv=splits)\n\ngrid.fit(X_train_normalized, y_train_normalized)","5c01ac55":"grid.best_params_","e42b231b":"best_rf = grid.best_estimator_\n\nrf_predictions = best_rf.predict(X_test_normalized)","1334e4e4":"print_scores_info(best_rf, y_test_normalized, best_rf.predict(X_test_normalized))","851fecd3":"y_true = y_test_normalized\ny_pred = best_rf.predict(X_test_normalized)\n\nskplt.metrics.plot_confusion_matrix(y_true, y_pred, figsize=(7,7))","ad4236e1":"# rf = RandomForestClassifier(class_weight='balanced')\n\n# param_grid = {'criterion': ['gini', 'entropy'], 'n_estimators': range(1, 41),\n#           'max_depth': range(1, 4), 'min_samples_leaf': range(1, 5), 'max_features': range(2, 4)}\n\n# grid = GridSearchCV(rf, param_grid, cv=5, scoring='roc_auc_ovo_weighted')\n# grid.fit(X_train_normalized, y_train_normalized)","35b7d31b":"log_reg_scores = scores_info(clf, y_test_normalized, clf.predict(X_test_normalized))\nrandom_forest_scores = scores_info(best_rf, y_test_normalized, best_rf.predict(X_test_normalized))\n\nresults_scores = pd.DataFrame({'Model': ['Reg_Logistic_Regression'] * len(log_reg_scores) + ['Random_Forest'] * len(random_forest_scores),\n                               'metric': ['accuracy', 'precision', 'recall', 'f1_score', 'roc_auc_ovr'] * 2,\n                               'score': log_reg_scores + random_forest_scores})","c2568019":"px.bar(results_scores, x='Model', y='score', color='metric', title='Performance')","76128779":"## Correlation matrix","13d46cb4":"**Projection price** - a variance based on the smallest eigenvectors\n\nData projected on eigenvectors with the biggest variance","6986d8de":"# Split data heuristic","fd5d8e80":"The construction of models will be carried out from simple to more complex, depending on the required result of the metric\n\\\n\\\nRussian:\n\u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0431\u0443\u0434\u0435\u0442 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u043e\u0442 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u043a \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0436\u043d\u043e\u0439, \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u0440\u0435\u0431\u0443\u0435\u043c\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u043c\u0435\u0442\u0440\u0438\u043a\u0438","c143cb5f":"Rename columns with _","fbc82204":"### \u042f \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u044f\u0445:\n### I will try to use different metrics on different models:\n\n\n*   Accuracy \\\nThe most intuitive metric, useless for unbalanced classes. Our classes are completely balanced, for a minute\n*   Precision\n*   Recall\n*   F1-score","84bb7344":"## Regularized Multinomial Logistic Regression","448950ac":"Here i wan't to use split data heuristic and **cross-validation**","697be37d":"Normalize","16f407a9":"# Split to train, validation and test samples\n\\\nHere i'll try to solve my problem with split data heuristic, **not cross-validation**\n\\\nBut! Cross-validation gives a better estimate of the quality of the model on new data compared to deferred sampling. But cross-validation is computationally expensive if there is a lot of data.","cde47b54":"Get scores info:","6b190ce8":"## Thank you all for reading! If you like it, upvote please and leave feedback. It motivates and inpspires me and would really help to learn new things and share by this here :)\n\n#### P.s If the topic will find a response, I will add here a study of the performance of other algorithms in comparison with those already researched, and a few tricky moments","3d5c9c71":"## How many observation in each class?","27b724c3":"![image.png](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAABbgAAAIOCAYAAAB6aGvEAAAgAElEQVR4Aeyd6dccxZXm\/bf0Of2hP\/Q5\/aHnzEz3TM8wbbvtxt12e2kv2MY2BmMwxmYxRuwSQgYJhIRYJBAgEBISIBaxCLSwSwLEIsQigQRoBSRAAsRuO+f8yn2LW7cis7Kysup9660nzqkTWZmRkZFPPhEZ8eSNG1\/IFISAEBACQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgMIQJfGMIyq8hCQAgIASEgBISAEBACQkAICAEhIASEgBAQAkJACAgBISAEMgncIoEQEAJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAkJACAwlAhK4h\/KxqdBCQAgIASEgBISAEBACQkAICAEhIASEgBAQAkJACAgBISCBWxwQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQkAICIGhREAC91A+NhVaCAgBISAEhIAQEAJCQAgIASEgBISAEBACQkAICAEhIAQkcIsDQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASEwlAhI4B7Kx6ZCCwEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBISABG5xQAgIASEgBISAEBACQkAICAEhIASEgBAQAkJACAgBISAEhhIBCdxD+dhUaCEgBISAEBACQkAICAEhIASEgBAQAkJACAgBISAEhIAQkMAtDggBISAEhIAQEAJCQAgIASEgBISAEBACQkAICAEhIASEwFAiIIF7KB+bCi0EhIAQEAJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAhK4xQEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBhKBCRwD+VjU6GFgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQuAL27Zty\/QTBuKAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogDg+JAXdK8BG4J\/PrAIQ6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPiwEA5UJvA\/e5Hn2b6CQNxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEgUFxQAK3hHl9mBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcWAoOSCBW8QdSuIO6guQrqOvjeKAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPiwPjlgARuCdwSuMUBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBhKDkjgFnGHkrj6ajZ+v5rp2ejZiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDggDgyKAxK4JXBL4BYHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcWAoOSCBW8QdSuIO6guQrqOvjeKAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPiwPjlgARuCdwSuMUBcUAcEAeGlAPvHPwoe\/6lbS2\/Ha\/v1fMc0uepDvP47TDr2ejZiAPigDggDogD4oA4IA6IA+OXAxK4NQiWECIOiAPigDjQBQfefv\/D7KF1j2dLb12ezb16QXb5VddkS5bdnq168NHsjXfeHSiWjzy2Ifurv\/6blt8vj\/vtQMugTt747eTp2ejZiAPigDggDogD4oA4IA6IA+LAKHBAAncXosYoEEL3qIZPHBAHxIE0B17evis7+dQzsr\/9u79vEZSjwPyLY4\/PnnruxYGIzBK4089KHBYu4oA4IA6IA+KAOCAOiAPigDggDowOByRwS+AeiAijRmV0GhU9az3ricgBLLSjkN3p\/6zL5va9fZXArfo2Eeub7km8FgfEAXFAHBAHxAFxQBwQB8SBbjgggVsCd98FmG4IqbRqwMQBcWC8cWDZ8nu6FrdN\/MZ9ST\/vRwK36ks\/+aW8xS9xQBwQB8QBcUAcEAfEAXFAHBgGDkjglsDdV\/FlGCqByqjGWhwQB\/I4gE\/tIpckh\/77NzN+Jmin4pde29m3dlYCt7ibx13tFzfEAXFAHBAHxAFxQBwQB8QBcWBUOCCBWwJ334SXUalEuk+9MMSBicuBa2+4MSleT595SfbWex8028\/9H3ycXX39omTa8y+a1UxXN1ckcE9c7tXNFeUnrogD4oA4IA6IA+KAOCAOiAPiwETlgARuCdx9E14maqXRfemFIA6MDgcmnTm5TbQ+\/sRTctvNRUuXtaX\/wY9\/lpv+wIefZPc\/si773WlnZt\/+7mHZ\/\/xf\/7dhMY5V+M+PPja7\/sabsj1v7c89v0jg3nvg\/WzKtOnZ5PMuaPlt3bE7N78\/XHhxS1rOTVmgk8dFl1yW\/einR2aHfPErjTJ\/8SuHZj\/9+dHZldden+18863cayxbfnfbNV7c9lq2792D2X33P9Qo87\/9x7czfgtuWNKWzwNrH8sunTc\/+81Jv8\/+5dCvN679nz\/4UXbm5POy6xYvzV7Y+mrbOaqzo1Nn9az1rMUBcUAcEAfEAXFAHBAHxIHR44AEbgncEgLEAXFAHBAHcjhw+BFHtQnWRYtHvv3+hxmiOIK1\/S6cfWkS3+e2bG0ItCm3JnHf4ptvTeZRJHAjniOYx7wWLFqazGvTlq1taTl31963m+mxVL\/gotnJdGWvgzAd065+aG127PEntu2fdNbk5rUR+k\/43altaWJe\/F90UxovdXRHr6OrZ65nLg6IA+KAOCAOiAPigDggDkx8DkjgzhE1RP6JT349Yz1jcUAc6MQBrIKjgIrV8Ku732gKr53ySB1HmC7y7R2vyf9pM2a2XbNI4Oa6WGTHvI7+1fFt+ZB2\/nXtLlaO\/OVxzbSI27849vi2\/GL+\/v\/U8y9snm84pATuX59wcjJfE7i37diT\/dMhX0qm8dfz22ecM7Xt2lYGxar74oA4IA6IA+KAOCAOiAPigDggDkwcDkjglsAtAUAcEAfEAXEghwO33HFXUlT9+\/\/+j9nsy+dlzzy\/uWvsdu97J2lZ7cXZvO17Vt3fcr1OAveGZ59vKz\/C+jsHP2rJh44dLlHidXEnYp2+eddc13Y8pk\/9X7H6wWYe5JUSuFPnsc8E7tPOnpK8Nm5MvnfY4cljnP\/y9l0t17Z7UTxxOrJ6lnqW4oA4IA6IA+KAOCAOiAPigDgggTtH1FDlUOUQB8QBcUAcQCDNE19tP2I34vDFc67INmx8rqOgilWznevjk089o+GPG9EcH9MpC29cjmBJbdzsJHCTDt\/Y\/jpsc57lQcyCmTEN\/9\/c\/14jHT61U8cRqze++FKGOxRcnKQssfHR7a9VJHBzf+QBlmedO63pagSM4\/Xx12357jvwfsMlTExzyeVXNtNYWsWq1+KAOCAOiAPigDggDogD4oA4IA5MLA5I4JbArcG\/OCAOiAPiQAEHblh6S5u4GoVU\/x9BGYE2ZT2MOJ0Sa3H9ETtYWE\/7fG2bRRYtbRmB++JLr2jLZ8asOc08yOvBtY+3pUFotuuw2KVd3+IfHn5EmyU4QjkLPloai9c\/+UwzrzyBG5\/lKcvylPiO+G9lsxiRG0Gb+7XfHStWtqWz9IonVodWz1PPUxwQB8QBcUAcEAfEAXFAHBhdDkjgLhA1VDFGt2Lo2evZiwPigOdASuA18TYvRoSNFt3rNjzdJv5y\/o439iWF2J8ddUxb+inTpjfTlhG4WcwylvGb\/\/n9Zh7c5\/SZl7SlufPe1c00qXKseXht87jH6o577mvLC8Hf0qQEbkRxrMAtTYxTi2Uef+IpbfjG8\/Rf9VgcEAfEAXFAHBAHxAFxQBwQB8SBic8BCdwSuHMFBTUAE78B0DPWMxYHynPgsaefzY49\/sQ28TaKx\/4\/Ird3B3LrnSvazmfRyrznMOuyuW3p\/SKRZQRu8sZXtS8X27gdset+\/VvfbTlOufe9e7B5POXmhHJjxR1\/KTF60pmTm3mlBG78mVtZUvEJp0xqKZ+\/FyziWQwT6+31T20szCeVt\/aVrwPCSliJA+KAOCAOiAPigDggDogD4sB45IAEbgncEgPEAXFAHBAHuuDA3gPvZ6sefDS7cPalGZbNiMFecI3bP\/jxz5r4XrVgYVtaRPO8DkLKGtpbX5cVuFMLRN5214rGdbEej2XGXYgvU6d7jOfH\/\/got\/xSArf3p23pfIyf75Rrl3gd\/v\/TIV\/KcMFi\/sN9PtpWZ1wcEAfEAXFAHBAHxAFxQBwQB8SBiccBCdxdiBqqABOvAuiZ6pmKA+JArxzArzbW3ZPPu6BNKDYB9u33P2wIvHPmzm9LE8VkX56VDz7Slv7Qf\/9mUywuK3Bv3bG7LZ9TTjurkU\/KqhwB35fD7qNqfPgRRzXzSwncqx9KuzvxZUDkTlmS55Xp2989LNu19+3mdX1e2la9FwfEAXFAHBAHxAFxQBwQB8QBcWDicEACtwRuDf7FAXFAHBAHauLAQ+vaF2tEgF37xNMNjBfddGub0Py9ww7Pxf+ahYvb0nuxuKzATceN63gxGFci7Efo9vuxlI6LPabcjuBXG8E+9cMlid+PJbp1HqsK3HY+HxPOOndadsgXv9JSbn8Ptn3S709vXtfOVzxxOrF6lnqW4oA4IA6IA+KAOCAOiAPigDgAB+oKXxChRChxQBwQB8SBicSBV3e\/0RB\/EYDt18lXNPefEoNXPvBwQ2jFFYeJrxbj\/iMPt7OmnNeW3ou23Qjc1y1e2pYXVtGxvGdOPq+tPLhFsfJa\/PRzm9vS5d2H39+rwO3z2r3vnYa7mJNPPaOtfJTTRHx\/jrbVTokD4oA4IA6IA+KAOCAOiAPigDgwsTgggbsmqz1VjIlVMfQ89TzFAXHgtT1vJkVTROE8fryw9dXkOZu2bG2cs+P1vcnjS5bd3pYnbkVSvq8Rqu363QjcKV\/bWFqbYG0xeVr+Fk+ZNr0tHRbadtzHWH9jse5\/r+zc00zbrcCNz\/OXt+9q+aX8az+56YW2MnJPYO7Lp23VbXFAHBAHxAFxQBwQB8QBcUAcEAcmFgckcEvg1sBfHBAHxAFxIIcD0brZrILvvHd1G2brNjyddJuBSP3Wex800\/\/050e3CbGk2bDxuWaanW++lbE4pYnOPvaCbTcCNx04FsX0ecVt7vfAh580y2GdvvVPbUyeFxeH3PfuwQyf4jFfFrm0vLoVuJctv7stv3\/7j2+3LSKZ90ECH+l2bcUTqxOr56nnKQ6IA+KAOCAOiAPigDggDogDcKCuIBclOeKIKpoqmjggDogDw8uBufMXtImrJt4iSv\/nD36U4RM7JYRbuhkXz2kRWNc8vDY3T\/xKf\/1b3809\/vvTz27Jq1uBe+mty3PzprzTps9syd9zN09wB4MLLpqd4drknw75UjJ\/BHvLq1uBGwvulCU7Ivesy+ZmfGyYv+CG5DOgzHZdxcNbD\/Xs9OzEAXFAHBAHxAFxQBwQB8QBcaCIAxK4JUxr8C8OiAPigDiQwwEskg\/9928mRVsTsIvifzn069muvW+34csiiUXnpY4hHr\/+9oGWvLoVuDk\/lbfte+KZTS35+w7ES6\/tTArNdm5evPTWO1ry7FbgpgwI73n5F+1\/5PEnW67t70fb6iCLA+KAOCAOiAPigDggDogD4oA4MDE4IIE7R9QQwScGwfUc9RzFAXGgVw5gffzt7x7WtcCKMP7KrteTAit+qqf8od2vdZ5Yi1U3AnO8l24Fbs4\/9vgTk\/eC9XjMP\/7Hz3WelXaq7Fdee31bnlUE7rff\/7BhJZ66RmofZVz\/5DNt1473o\/9qH8QBcUAcEAfEAXFAHBAHxAFxQBwYfg5I4JbALQFAHBAHxAFxoAMH8OPMQpBf\/MqhSXHYi6wIxdcsXJwhYnfqKK168NHs50cfm5sn18N\/NZbkqbxYyNFfm+1fn3ByMq2dv3zFqrZzOO\/C2ZcWnmfnI\/hfdMllSZcgVpYTTpmUbXl1RzK\/k35\/etv1H1j7WDKtXdNiBP3vHXZ4riU5eJ015bw2S3c7X\/Hwd1z1DPUMxQFxQBwQB8QBcUAcEAfEAXEgckACdwdRIwKm\/6pE4oA4IA6MNge2vLI9w5c1\/rnxPT195iXZ5Vddk+GK47ktW0sJtZFDiMaPPf1sw5\/03SvXZA+tezzbvG17pbxi3v36j+jP\/d7\/yLpGue9\/dH22dcfubFCLOr68fVfGIpf44GaBzn0H3h\/XePXrOSjf0W6P9Pz1\/MUBcUAcEAfEAXFAHBAHxAEtMqnBsAR+cUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHhpQDsuAe0genrzP6QicOiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogDo84BCdwSuPV1ShwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEgaHkgARuEXcoiTvqX6Z0\/\/o6Kw6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOyAe3xF0J\/OKAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDggDgwpB2TBPaQPTl9n9IVOHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB0adAxK4JXDr65Q4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiANDyYHaBO5t27Zl+gkDcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxIFBcUACt4R5fZgQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFgKDlQm8BdV0bKRwgIASEgBISAEBACQkAICAEhIASEgBAQAkJACAgBISAEhMAgEfjCIC+mawkBISAEhIAQEAJCQAgIASEgBISAEBACQkAICAEhIASEgBCoCwEJ3HUhqXyEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQmCgCEjgHijcupgQEAJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAkJACNSFgATuupBUPkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQkAICAEhMFAEJHAPFG5dTAgIASEgBISAEBACQkAICAEhIASEgBAQAkJACAgBISAE6kJAAnddSPYhn4MHD2ZPPf1M9sc\/\/rEPuStLISAEhIAQ6AaB8domv7h5c\/bGm292cytKKwSEgBAQAkJACAgBISAEhIAQEAJCYMIgIIG7x0eJ+Lx9+46W3\/79+3vMNcuumHtl9ld\/\/TeN3z\/870OytevW95ynMhACQkAICIF2BHbv3tPShr\/++uttiTq1yYjf8V3w4YcfteVTdkeZd8uOnTuzb3zzO813xW9OODn705\/+VPYSSicEJjwCnep2mXpWB0i0D5s2PZc98OBDjf7ca69tryNb5SEEhIAQEAJCQAgIASEgBITAfyEggbtHKmBhbUK0xb\/+zYk95YolnuVl8Xe+e1hPeepkISAEhIAQSCNg7azFf\/t3f9+SsEybPHfeVW3t9uIbl7Tk082fMu+WKVOntV3zkUfXdnMZpRUCExoBq9MWx7pdpp5VBeizzz7Lzp9+YYaRgl3fYvXpqqKq84SAEBACQkAICAEhIASEQBqBNoH79DPPzv7b\/\/jHts44+\/zvn7\/01ewnPzsymz5jZvbSSy+ncx+Bvf0YHN1194o2\/BkUvffeeyOAqG5RCAgBIVAvAhfOnNV8f\/3bN77VlrmJThZHEaxMmzwWAjfvYSuzxQhqCuURQIT0fRu2JT6Wx2+sU\/Zat\/vRhwMTZm989\/s\/bKufVk+HgWOqG2PN7vT14ZW1WVPPOz+dSHuFwDhG4JhfHd\/ksHF5795947jEgynaqNdt8WIwPEtd5e23326pk\/esuDeVTPtKICAelwCpz0naBO5f\/fo3uR1y65inYjpZf\/7zn\/tc3PGXfdnBEemw7Pa\/225fnrwhhOyI8U+POCqZVjuFgBAQAkKgGIH\/8\/++3GxTv\/Wd77Ulju1tFLjLtMljIXDPvuTS5n3ZPfCuUSiPwI4dO9ow\/P2k08tnoJRjikCvdbtsH67bm1y1ek0br6yOEg+DwK260e1T7396XO54HvGBR6EVgW7GW61n6t+gEEDU9jxmlsuoB9XtrCGwihdjUxPuWH5nS5186OFHxqYgE+Cqat\/G\/iHWJnDTIJ19zrkj5\/+z7OAIMds32myfe94fchlAQ2MDt8N+9JPshRc356bVASEgBISAEEgjsHXbtpa29+RTJrUljG1zFLg5oVObPBYC91tvvZ3hd5vyU+aLZ89puzftKEbg0bXrWvgBlvetXFV8ko6OCwTqqNtl+3Dd3vDMWZe08YoZF9dce132\/PMvZK+++lq3WQ48verGwCHveMEbl97Uwqubb1nW8ZxRS9DteGvU8Bnr+2V2S+xzFY2Hx7q8g7r+qNdt8WJQTEtfx8YSVje1Tkgap057xeNOCA3meK0CN5UCFyejFMoOjqp0uFgs7MCBd0cJTt2rEBACQqBWBBCUrMNGPOeyK9ry98fZTgncnFTUJo+FwG03Qofq448\/tr+Ku0Bg8ZKlLfzg+b\/\/\/vtd5KCkY4VAHXW7bB+u23v88U+OaOPV6jX3d5vNmKZX3RhT+JMXP+qXx7bw6vEnNiTTjfLOKuOtUcZr0Pf+8tZWowPeuVo7JMtGvW6LF4OuiZ9fD3dkjHv8WOjTTz\/9PIG2SiMgHpeGqq8JSwncf7hgRvbyy1sbPyyJV65ak50zZWpLRfCVYvOWLX0t9HjKvOzgSB2u8fTUVBYhIARGBQFmwPj30\/I772q7dX+c7TyBu+1Et2MsBW5XDG12iQA+y\/3zR5hUGA4E6qjbZftw3SKCr3\/PK7Y\/+PDDbrMZ0\/SqG2MKf9vFU5Zhr7\/+elu6Ud+h8db4ZsCa+x9oaxs\/+uij8V3oPpdOdTvLxIs+k6wgez6U+v4KHgQUqiEgHlfDre6zSgncdBZSITUwoILkLXL1xz\/+McOnz4knn5LhB9UWlsAXIZbf5JcX3n33vUa+iO32w7qE8Mabb2YzLpyZfeOb32kIE0wDxZf4\/KuvzT755JO8LJv7d+7alS2+cUk2Zeq0jAET5SIPpmsgWjzw4EO5rldSGOBnm8D9XjDjokZ5U9Y8X\/7q15r3AmZmNfbBBx+03evCGxY3y5vaeHHz5obLk+\/\/8PAMX2YINOBBWe69b2XG17lOgTQrV67OLplzWQM\/GjiwOPIXx2QXXTw7u\/Ouu7XQZScQdVwICIFxgwDvDd9pY3vjs5vayhfTRIG7TJtcJHAzE+eKuVdmxx3\/2+xfv\/aNjHZ60mlnNt6HeWtXFL1b7AZor+19aLGfVtjP92Yv73Mrv8XPbHy28b7G97W9x4npF1y38Ibs2U3tz8zOZSEcu3eLeafz7scqjHcrefFbsvRmO60ZH33McS0c4XoK4x+Buup2UT2D47iAMF7CoRNO+l229KZbspQgg99t42C0hqKNOW\/aBc3jqQWcuCes0mknuBZ94zPOOidbce99zTVurpx\/dTMPrgW\/8\/p377zzTkb\/nTQsCu\/7tpdfMa\/Rt+Ue84LqRh4yY7P\/wQcfbmmr4BSzinzgPWMcJJ4+Y2ZjLIKAxjjCL2LH2j6MUcou7ldlnEHb7svDNgJADJQvprth0Y0xWeP\/vKta6wD3QHtfZbwVL0CdWXDdwsa4hzEa9ZixEGND3GjgXqgo9BP\/ousWHaN9YPZIHHtTvy+7Ym4Grw4ePFiUReNYXe3TgusXtvCYcox6KFO3DaNe23XLpxftw\/IgFi88GsO5zXvCj4OOOPLo3BvZ9sorDc0Mt8T0UUxvYkxD3U6NsVKZ9dLv9\/nt2LkzYy0KZkAwvqKvM+386c1ylBm\/+fx6rRdq3zyaY7fdk8BNsRGFfaVgO7UgIr4SEY1j2vifztebe\/e2IbJ9e\/tCUKTdt++thqAb87H\/kJ3KmAp07OnIWNqimBdwqgNQNDhKfZEtusauXbsbxXzjjTfaysRgJxVY\/CwOQlLXYGDz9DMbU1k09oEv10id6\/fR0du06bncfHRACAgBITBeEEAY8u0X2wwOYohposBdpk3OE7gRoVNil12Tj72sXh5D0bvF0iJ+WT4WM1Cy0I\/3Jnn3+j638jEwQsS2shfFcy69vCny2fnE+FSP561f\/1jTN7k\/dvbkc\/2pje3YL\/EfCNoSa8e4QaCuup1Xz5hmisDl+eO36VPFgRz88mmKtuNaABgiFKVHYKOdoA8W06X6pnzcoYwxbfyP8QX96FRQ3UihMnb74sxZ+BlD6pkzFsFQJT57+8\/7KSU6W969jDPgoV3HYoSIGNY\/9nhbOsoVP8DgisvysZh7rjresnLwoQBx2vIsihFQUu9s8uoH\/lbGKjHtW6pM8f6o6ywqmxfqbJ8ij+VHPmubFZ+q2zybOtr1OrQP44l4YUgMdxzf9Smf+LSR0S1cbEfsPwJznouTOvr9oE15MG61a6Zi2pq4eCvpUppaXfVC7dv4qAs9C9xM946koqL48OSTT7Wlief4\/7yM+SLjQ2qgbhYu\/tzUNgJCykoOIT6VPm8fLxyEDh\/yBkekqdrhKiOmkD8LjMVGKa\/stj\/ViU11LC19XnzX3Ss8DNoWAkJACIw7BLC89G1YFK6twD4N2zFdmTY5JXCnBOh4Lf7TjiMi+FD0brF0qfw7Cdy9vjfreJ9T\/v0HDpQaeHu8sGyN1qopgRtLNX+ebUeBmw6tHSOOfRfDWfH4Q6Cuup2qZ1gvle1bPffc801wqgrc9Kc8D\/O2KVcZgRsr77w8UvvpcyPo+6C64dEYH9vMzvTPj5mqMaTEzLK8TH3o6HWckRoHxfcr98DaGP7ebBurcR8wsLFjFmM5mLqOHU\/FZlBE3gglzHZNpcvblxqnklfd+Pt773a7k\/gY743nwvs9hrrbpzj2Zhb2qIcydbuOdh2cI\/6RB\/F\/SvsgH\/FiYrAWvS0+8+sXLmq5OdrIoo+k8Xz+M9aIM93q6vdTOCzIU9eN+1LpUgJ3XfUi5qP2rYVKA\/vTd4Ebtxux4Y7kS\/1n2vHwXMgAACAASURBVAMdbAspgTt1Xt4+rH18wJo5L23RfiqKD6nBkbkoqdrhKiOmUIZjfnV81\/dAB8ZXNhotXl6pe8ZiiEYgdUxCgGeBtoWAEBhvCPD+oL3z7VeqU0O5fRq24wC8TJucErhjvkX\/cSPgQ9G7xdJVEbiLyhCPxfdmXe9zys8083i9Mv\/jx9WUwJ2XTxS4o2VHfAaGs+LxhUCddTtVz\/L4k9pPm0I\/ilBWSCQfs+BmRklsp1LXKdrnLbjxyZxKyzUYeKUEctLHvq3qxvji\/JYtL7U9V6zXYkgJrCk+pPZheRZDHeOMlIvGPXtafYen0lDGKLTcuPSmNhxwn1h1vMX94pYqhUenfXGcSl514x+fR9n\/9FmqtCuc4y0v626fKL\/XBFirYNRDmbpdV7tel\/YhXkwc1uIKKrZ1uBP2ITVjjnPoT9CvyGtrYn+9rn7\/unXr28oc76HofxwL1lUvwEztm2fO2G33LHAzjSGSCLJbwC9OPE5FwB8YC+7wYzum4b+vGEUCN1YMdyy\/szHFLm+wGzvv+FGM1yQNU6\/x5QbZU1ZglN2H1ODIBG7SYW3ANFZ8WMfr0XHkmP1M0C8jptD4xPz4j99xLC7IC\/9GuGiJ6c48e3LzFpiOHY9Hy4T9+\/dnqQWTwEhBCAgBITAeEcBXZmzbaNNTIaaL7XyZNrlI4OYj4sWz5zTa57yBPGXw7lM6vVu4j14E7irvzbre57yfUkIAa2GANf0CLNFT751otZj3zgdPOpo8c\/wN4\/\/41tvuaHn80Rod1yYK4x+BOut2qp5ZewBH6RcuWryk0MLTZsYhQlh\/zg9yLD\/6unYcAZlAu2DHfYwRwazZcxr+t\/nwkqovlt4L3Ez3t\/0W0yfHD6UFFou3YxbT5nlrK9UNQ2t8xNGvJ8\/tppuXtRUujycM6PHBzdiBdXbsufs4Gq7UNc6Yd+X8tuutXLWmWXbGXL4cfptZOz5MOv2strTmQ7zKeAuLQn8920a4QUxnjMQ6TLhVsWM+Xnbrbb54ufW0Cv4tGXf5J8\/1F20Jbd7mLVsa\/rdTfOF+LdTdPvHu9\/jNvuRSu9TIxmXqdl3tel3ah3gxceiacnP76quvtdxgqp8NB+zjPjFtoa\/bbHs9sM5+Px8X47X4j+tiXA\/jXYKZPak07IsCd131Qu1bC23G9E9PAjcCaoo8ZgUF4VMvz7Xr1rfddGqBBaZDWMgTuJmmGkOcukoZ8ZnmAwNefATZD99rVlEtHT7WUvfHgmEWUoMjL3Bbum5W9S4jpqQaGzqtMWAlEZ8BAxk6lAQG9PEeWVwzBnyzgZH\/MUhSEAJCQAiMRwToaCA4+R++31IhtoF1CtzMhKEsPuQJDHTKLJR5t1QVuKu8N+t8n\/Mc7N1rsf+gbRggHMZnEy2+Uu9CzmGAH3G3fC2OHOmU3s5TPLYIxOdGHa9at1P1DP7Qb\/Kz3bjjPKshuBZD6uOMCXE+bcoVCuK4\/9hFeqYR0y7F+sB\/L3AjGMU0tiC7vy6u6Xx\/jm3EPgsRY9UNQ2ZsYj76+XcZ2\/6DhJUq9vfhAoYutoi9peNjX+QJ\/\/1zTrWtVcYZKbciiCMW8uog5YHz3sVkNNrh43EM3Yy3+EiQwiEuJsmYKVWneb\/7UCf+Pt9utrHATrUV0dCLPPnQEO\/\/pN+d2rxc3e0TGdOuGpexvB\/1UKZu19Wu16V9iBcTh7W8960+Whz1MITj2E5Et2YgsuzW21v6FX7R9rr6\/fSjYln4j2YYy51q30gbBe666gUYqH0bH3WjlMDNNDgWauT30ksvNyylp553fpJgEIfpNgR8E0YSfv+Hh+feeey4cK51tvIE7tRCH89u2tR2Xb7GVwl0XuI9IEBbSHXM+i1wg0ksE\/9ZfCUVUs\/K\/KzFaaiWL5Wdhk5BCAgBITDREbB2z+K6BG7yYUZNDLThvAvtehZ7oazMu6WqwF3lvVnn+zzikfc\/9a6L7\/KUCAO2XhTJy1\/7Jz4CVrcsjnU7Vc9ImzLEAK2U5VrkJOlSYlgUuGkbrFw+RnxOhXtW3JtM7wVuZjP6vNhGdOPjWRQ5U9fQvuFGICWw3rdyVdtNpdpWuGLjm7zjVcYZ5BUFV290FH0Lx7GgCSkIgZHbZlDlb7AbgTvlV\/aCGRf57JrbqXcg5fFGT3Xhz0URf\/mggLjZ6eetruPsC8oI\/ikxmfck1ousVWU\/My7rR\/vUBFMbXSEw6Ha9SPsQL7p6dBMicWrmDCIxH\/3juji93nDq3eP7WKm1BWjf8owcUq7josBdtsxF9aJsHko3GARKCdyxQ1H037u\/oFOVSkvHJvVLpX1z794GEimBGyuXVEhZXuel5Xy++CDcY9Fw9TULGh0JXK+kBs6U0TqAnJsaHPVb4E7dH+VKYcq+FK5333NvE7rUVFo7h6+0p5x6WsbUcZtS2zxRG0JACAiBCYCAtXcWRxGszKyalIsSGyimILrq6mva2mYWkbNQ5t1SReDOexem3is+bZ3vc7tHi7GO436X3nRLwzc3Lr2wNku5CfMdXc5PvaeZEq8gBEDA6rTFsW6n6hlpoyWQoYmLEcvLx3bc4jICN24CfB62bTPsLC+Lseq2ND72AndqwSifloHdlKnTMvwWx4Vt7TqKhxeBlMC6c9eu5A2l1t+xxRdT7wN4VHWcgasRz0PqoX2E9CIz+7EC9GmXLL25Uf6UcBt9xZKwG4E7hYF3n+KBSwkvlNOMukhbF\/7klep3eFz8NtPxLTC+88fYZkp\/t6Ef7VO3ZVD6vyDQj3a9qvYhXoweK\/Nm\/Fg7g+vFmbMuyR55dG1pwbtqvx9XW3Zdi4uMZ1euXN2WvkjgrlovRo8V4\/uOaxW46TRbh4XbTpHQyFg2NjcYKYGbKROpkFpsxA\/U7RwGC4i3dKjKlod0Yy1w571curkHP20kT7hI5QfmdD4VhIAQEAITBYHY1kURLDXQjB2klMBNhy8vpPyb+jxTwlv8eFpF4K763qzzfW6YvLh5c0MwifgX\/S8jcNPJVhACIBC5FOt2qp4ViUGIyTFP\/kfr6DICd8pFXMrlgn+SKQHNC9ykxe1Pqoypffi0f2LDk\/4S2h5iBFL88IsG+ltL+TE1gbvucQYideQf\/q2jdTcuEimDT2trZ6QWg\/S+5e3euhG4U+M\/sxi3\/Hwcrcsp56Nr1zWT1IU\/Gab6HR4Xv+0F7hRO\/nizsB02+tU+dbisDucgUFe73qv2IV7kPKAJvJvZMyk3Jb4Nsm3aVAxU8j6s9trvT7nrQX\/MC\/gTt7JZ7Mdadl6v9cLyUTw+EKhN4E5NE0tZqBm5ysZYyxDqFriZAprqiJQp11gL3HkWRGXKbml4Nj7whasbPLBwz7Nw8vlqWwgIASEw3hGwdtHiKIKlBpqxg5QSuGM763FICWte3EodH0uBu873OTikBuGGf1FcRuBmAKYgBEAgcinW7VQ98zMpIop5VpwMjnwoI3CnLFLph+WFvGtHgZvzU65UIhb+PxbdCsOPQKofX0XgrnuckVrQnnUX4oKnZq1NO2\/8tDqBb2jbR5xntdeNwO3zs+0i94ypjwK2yCzsqQt\/8kr1O6yMMfYC9vyrr23BibRFAlAe6\/vZPuVdU\/uLEei1Xa9D+xAvip\/RRD3Kx8TUgpSxLbL\/tIV+dgu41NHvZ70Qu4bFzOTMCym3xXH8Vke9yLu+9o8NAqUFbiyg\/Y+v2Ewr40sKvrlTIW9KAwPl1A\/RFOL6Y0yTI9QpcCPMpr7aU1HoVGEtQGcg9ZWINGMtcPNVzCq1jz1ufhsfbnyA8PviAipgzOCJxT65\/1QnzV+LbTqRCkJACAiBYUcgtm1RBEsNNGMHKSVwpxZzNKxuvqV9cSu\/YFVKeBtLgbvO9zkWchFz+48fUGZWnTftgmzOZVe0pZPAbQxSXAYB45XFsW6n6llqxp9dKyXUkTf9Jx\/KCNx5eVm\/1+fHNn1tuw8fpwRu0mNVzow7BPu8Pq\/PJ8\/iKpZD\/8cvAqm+exWBux\/jDOqV5xvjkusXLmrZZ+PJODuJMaAXvcnnsivmJh9ENwJ3LBP5Pv7EhmS+7EzVo2c2PttMXxf+ZLhv31uN63HNTj\/GzxZS7+qfHnGUHS4d97t9Kl0QJWxBoGq7Xpf2IV60PI6R+7Nnz+sZbgDpq\/v2PLXt+1J19ftTYydvHBQfCK4PY9n8+K2uehGvq\/9ji0ApgbuqkMk04UiqOEAve\/t1CtypFb3xNU2jHQOVIN7DWAvcKRcsdH7qDqwEy6JGDI4iBvwvEm\/qLovyEwJCQAj0C4HYvsX2tKrAzYfgvHDOlKlt7SrTsy2khLf4\/owiAPfBR0oLdb4363yfs9ZFxJx7j8Jeyh2EBG57uorLIBB5Fut2qp5xzv79+5PZr7j3vjbuxjw5sYzA\/dFHH7XlxbUxSkiF1GJJpM8TuH0eDOIQDxctXpKl3CyQD8KYwnAjUJfA2o9xRnxfYYHtfXNTdgtYd8NJ+6XeGdTdVOhG4E5ZZJsVecybNsHK42Nz60L6uvCP1+7mf8r9mReaYl6sQYWo\/9jjT2RYMmLxSBhk+xTLpP\/lEOimXa9L+xAvyj2bUUiFH214hUFoqu2jncR\/PCHVhlfp92948slkO5yauQlXUzqeF7jrqhej8LyH6R77KnDvP3CgjYRUgLyFbegkMC3OfqxYbaHOgXpqegMVLwamnPpOjG3XJXB7az1\/7TJiSmrwBG6pwArfhqnFtpo2z4Lr+V+0RCJPBkV2\/xYXiTepcmifEBACQmA8ImBtmsVRsCrTJqcsuMnvhkU3tt1yqkNF2ivnX91MmxLexlLgrvN9nlr82L\/vDYRVq9e0vXckcBs6issgYHXa4li3U\/WMtAhvfk0ZrkVfKlqRkjbl0iTVR9u7d19bkfGBbWXzMQKf9cU+++yzwqm9XuB+6623W\/pztlB7vLAXFu26U887PybT\/yFDICUyVLHg5rZTHK4yzjAIMZgxrllMfbRtXJBYwMDG9hOn7svqh51jcUrgzhtvYUXur8M21oAIIzHMuHBmW1rK5cuRKmdV\/OP1y\/6nDYj3xH\/WW4oh4kw6P7aru32K19f\/cgjU0a7XqX2IF+We20RIxUcUrxGxTV8oho8\/\/jjZTtuivXX1+2lv\/XvD2jr2sXaEBWY6pBaqJ70XuOusF3ZtxWOPQF8Fbm7vqF8e2\/aiZbVVOuw+MLiNhOW\/patT4L7m2uvaykTF84GKwZQuqzg+pnJbSA2OoghB2lTHjjz5EkXj4UMZMSV1D3Ssou84prilvl7h5J+QsghicYAYaKA8BmxXmfIW89V\/ISAEhMBYIxDbNt49PpRpk\/MEbvLmAyF58F5hvYPUtGjSeX91Zd4t0SKOPPplwQ0edb3PU\/nQyfQBa9MUThK4PUra7oRAp7qdqmd2DtP+GTAhUGHhmBqgkTb1ESslDqYEbuqrXS\/GtENYuca+cUznBW5mI8bjd99zbxtMiNkx3byrPv\/A1naCdgwFAnUKrHWNMww4ZuhEzvn\/TD33IcVlS48v2LzQzXgr5Z+VazAOMpGbD12r19yfLHtcf6pO\/PPur8x+xtmGlcW0I+YChjzojzBeteMW89wt1N0+Wb6Ku0MgVRe6bddT9bmq9iFedPf8hjl16iMYbQmLN\/qAlpXq9zz9zMZGsjr7\/dNntH9stPaLMUIn9yle4K6zXng8tD22CPRd4GZ1diOdj+kE4OJizqWXZ3lfAllMwUKdAndc1MTKxVd7\/H5SrlQnxdJVEbgRlO38GHMtXl6I0YQyYgpT5VJlpNGh44fv0kmnn5UcGDElz0KeJeExvzq+IcqweArTZWOZ+X\/5FfMsG8VCQAgIgaFFILZvtKM+lGmTiwTumH\/qv2+XuXZKeIsfTwctcNf1Ps9baIZV2i+cOSu3TwBuErg9M7XdCYFY12LdTtWzeE7Rf\/KLrnUoU2qglxK4SZvXBy66rj\/mBe7UNGDSnnn25OyO5XdmuFhhQTp\/vm2zeJjCcCOQGhdUtSCua5zhEU3VC+Mf4zwfWAvJjsU49VHJzu1mvIV4jXV3zN\/+805KYWrHY5lTaavib\/dTJWbsZmWMMRbaRfccZ33U2T5VuRedk3bvwHPtpl2vU\/vgmYgXo8NM1tyL7QgGKAjNGO3g3oyP8TEN\/SPrn9TZ72fBy5QBTLw+\/ylD3O8F7rrrxeiwYnzfad8Fbm4\/NQUski3+pxMEgS3UKXDnTW+IZcj7X0XgxiVIqpL5a5gftzJiCrgUdWB8vn6bMuDo34dOX7r8+bZNw8LXfwUhIASEwLAjYO2axbSTPpRpk1MCd2qwa9eIcVz4NyW8jbXADSZ1vM\/x+Rnvv+x\/CdyemdruhEDkVazbqXrWTb1l0JYKKSEvT+CmL5VnHe7LzyAyZclnA0jKkXIl5PPI2y6yiE3dn\/aNTwRS3O1FYK1rnGFopdx8wEnGFDEgnOTxdeu21nGMP7eb8Rbn7d69p+P4LFWOG5fe5C\/b2K4b\/7YLdLHj5FMm5eKXuh\/2Mas3hjrbp5i3\/pdDoI52vU7tg1KLF+We3URIlfLrn9eG+P3e\/W+d\/X4wzZvl6a\/P9qNr17W1g17grrteTITnPRHuYSACN+TJ69REIvKfgUEcCNQpcPPg+GKT6oj48uC7JzXNq4rAzTWLOmtct1uBmzzzpuL5+7Bt7heXKDFgfcTgxtJ1iplmkrcAU8xb\/4WAEBAC4x2B2OZFEayqwH39wkWlhCusKmNICW\/jQeCu433Ovab8pMbngIAQ90ngjkzR\/yIEIn9i3c6rZ5dePreNezGvaedPb\/PTbWXpRuDmHETIhTcsTlolYUVq1tWdBG7ywoKVGYmxvHn\/mS1JvVYYfgRS45peBG4QqWOcYcimxAZ4mVq0Pm8dJO4x+se3\/C0uO96y9NQZ3i15dSTup66mQj\/wT12nzD5crIBrLHvefz7S5+FaZ\/tUpuxK045AHe16XdqHlU68MCQmfoxLHPpPee1H3E8fP4a6+v2WL77psSJPlYs1HXbu2tXQE2PZvMBNXnXXCyuf4rFDoE3gTvnjuvOuu2sp4bp16wuFVDruy++8q80nNRdH\/I0EzVs0BEf3MW0cFJPnjh07Gj5FY8Wgg4LPVBpuFg+KeXnxnQVX4nGE8bzw2mvbG1Ow49QKymDCOfnHPOP0dZ8\/fpDwFxfPsf\/kzWDNW8T7820b\/3dUejsvxlh6I9jkdYAsH8VCQAgIgWFCILZ1vAN8KNMmX3X1NW1t59KbbmmsI7HguoXJDhgfC3ETlQpl3i2pNRQeeXRtM7t+vDct817e55YHViGpaY2IgxwjxGdDP8GHlLsFXKkoCAEQiPyJdbuonj3w4ENJi2mm+CP6FYVUXwrBrkzA6IAZHVg82YLgdl5KQDNfwZaGmH0YlqQEcTChX4gBB\/VYYeIgEMcWPGtbyyjeJR9OYv2wcUhMW9c4Az7Ha\/Kf2QmpQF2L6VNieOrcMuMtfx4LpzFWSmFoZTjl1NMaddOf57dT59aBv79Gt9uI\/XkzRGgHWE8JH+NlQx3tU9lrKV0rAnW063VoH62l+ss\/8SKFysTahz\/u35xwcq6BKO0fC1jDsbxQR78\/5s0Hetage2bjs41r+w\/2vAes\/bY4pan1q17Esur\/YBBoE7gHcVk6EXTemfoG0VlYK3biB1EOuwaCLRWAhS6pvIMScLnOJ5980hDSrSy9xGDIgAhMwZaBG9Oaug00DHRm6fAgloCNbyy6zU\/phYAQEAKjjgDtPe8XBG0WrpsoLp7qeJ8jAPDuol+QWp191Lmj+x9bBOAkFj70ERnE1xmwymPBLv\/L67ft2fN620AtCvapstE3pPz0C+nT0Q4pCIEqCNQ1zqhy7V7O6Wa8xWJpjHtYWNbGqbyzOxkJ9VK+QZxL20X\/w9oBmzVcdO1BtE9F19exfAR6bdepE1W1D\/Ei\/7mMyhH6RcwsW7V6TSN+9933urr1Xvr9fJj3fSZ0rzydCsNZE7YtLjJE7aVedAWAEvcVgTERuPt6R8pcCAgBISAEhIAQEAJCQAiMcwQuunh22+CL2XIffPhhS8mZRZKyuGVBcAUhIASEQD8QUPvUD1SHP0\/xYvif4TDfQWrtOBYlRpz2AaMZZqmYsG1x3top\/lxtDzcCEriH+\/mp9EJACAgBISAEhIAQEAJDiADW1DboijGDONwGHvmLY3LT4ENcQQgIASHQDwTUPvUD1eHPU7wY\/mc4zHfAukWxv8R\/xGzcMdFvShkEWJphn40zzM9uUGWXwD0opHUdISAEhIAQEAJCQAgIASHgEDhnytTkYC01gPP7Ft+4xOWiTSEgBIRA\/Qiofaof04mQo3gxEZ7icN4D7khS6zP4\/lFqG5dutmD3cN65Sl0WAQncZZFSOiEgBISAEBACQkAICAEhUDMCt92+PDmVNjVIY9F0fGorCAEhIAQGgYDap0GgPHzXEC+G75lNlBKz4OqFM2eVNg444sijs7ILfU8UjEb5PiRwj\/LT170LASEgBISAEBACQkAIjDkC+\/a9lc27cn7GAkhf\/urXWgZu\/\/C\/D8l+9evfZDffsiw7ePDgmJdVBRACQmC0EFD7NFrPu+zdihdlkVK6fiDAx\/6LZ8\/Jjj7muIyP\/2YUgLuSf\/7SV7PTzzw7W73m\/ozFgxVGBwEJ3KPzrHWnQkAICAEhIASEgBAQAkOAANNwP\/vssyEoqYooBITAqCGg9mnUnni5+xUvyuGkVP1B4NNPP83goMJoIyCBe7Sfv+5eCAgBISAEhIAQEAJCQAgIASEgBISAEBACQkAICAEhMLQIfGHbtm2ZfsJAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcWBQHKhLUZfALYFfHzjEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwYKAdqE7jf\/ejTTD9hIA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDgwKA5I4JYwrw8T4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAODCUHJHCLuENJ3EF9AdJ19LVRHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwYvxyQwC2BWwK3OCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogDQ8kBCdwi7lASV1\/Nxu9XMz0bPRtxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8SBQXFAArcEbgnc4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAODCUHJHCLuENJ3EF9AdJ19LVRHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwYvxyQwN0ngXv\/Bx9nG198KTvw4ScSkAPGwmb8NghqrPVsxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB4aJAxK4nfh6zcLF2d\/\/939s\/C6cfWllYXrrjt3ZPx3ypeyv\/vpvskO++JVs55tvVc5rmMhUpqyDwOY3J\/2++RxXPvDwyGL\/zPObs+UrVmXwetFNt2arH1qbvbn\/vZHFoww\/60gj\/qkTUAePlId4JA6IA+KAOCAOiAPigDggDogD4oA4IA6U40DfBO5Zl81tCLwmGD\/y2IbKwtrhRxzVECwRjMnvnYMfVc6riBhWZq5z5uTzKl\/j4jlXNO6dfPjNv25R5byKyjuMxwaBzQ8PP6KJ\/+133zvusf\/pz49uCvJ33ru65\/LevXJN9i+Hfr2JgfHQ4inTpvetDg0jJ+su87Dxr+77V37lXr7CSTiJA+KAOCAOiAPigDggDogD4oA4IA6IA\/VwoG8C97nnz2gR2LBqrPLQntz0Qks+iHRvvfdBpbw6Xb+TwL33wPsZ4uDk8y5oxPxP5Ym1rImJxHesWJlMlzp3ou8bBDbDJjD+2398u8mXpbcu74krEV\/PQ7\/9s6OOkTW3m71RZ73rxL+NL2xptCG0I3PnL+jpeddZbuVVz0tVOApHcUAcEAfEAXFAHBAHxAFxQBwQB8QBcWCwHBiYwI24tv31vV2LOWecM7Up\/plAN1YCN+W3MhTdD8I34tUXv3JoNm36TFnLOiFxENh0EhjHWyNTl8A975rrWvjJbIdjjz8xu+TyK7OTfn969j\/\/1\/9tOf7N\/\/x+ti\/nI814w2iYytOJf8wqsHaENmKY7k1lHewLWngLb3FAHBAHxAFxQBwQB8QBcUAcEAfEAXGgMwcGKnBfOm9+V2LO628faApBJggRj3eBW8TrTLx+YtRJYOzntavkXYfAvXnb9pa68u3vHpbteWt\/S32j3vz86GNb0t2w9JaWNFXKr3Na+d6JfxK4W\/ESf4SHOCAOiAPigDggDogD4oA4IA6IA+KAOCAO9MKBgQrcLLy4\/4OPSwtqCxYtbRHjTOSWwC3SF5G+k8BYdO5YHKtD4J4+85JmXaGevfHOu8l6Rt3BatjqEv7tx+KeJ\/I1O\/FPArfar4nMf92b+C0OiAPigDggDogD4oA4IA6IA+KAODBoDgxU4EZUu+\/+h0oLankL5UWB+7ktW7PHnn628Xtz\/3uF+b+w9dVm2igC5vngfnHba41zKLsJg3Yvdt3nX36led0DH36SPfHMpsY5G559vrnfHi4+eO08v2Dm8y9ty\/ChjKU7iw1yX3ZOmXj3vneyFasfzBbcsCS7+NIrsutvvClb+cDDHX0tc56VZ8urO5rX3PH63uzWO1dkc664qlGebTv2NI9ZeSj\/ug1PN8pNOq6\/4419beksfSdsLB0xz\/np5zZnt9xxVzb78nnZzbffmW188aWOLl86CYz+Gt1s\/+inR2aIx4d88Ssdy9BNvnUI3Ef+8rgmNzstkIr7HOMx99NNWUn78vZdTb7sfPOt5vnUE\/zNw4Orr1\/UqOud6mO8Nty5Z9X9jYVZca2y9NY7svVPbWxeI6bnPxw0\/sIXS2P7r1qwMOO38sFHsld2vd48buny4rr5R1tAOambhj9uY6zsxK\/tebNR7sp73AAAIABJREFUPt+m2b68crKfumn5+DpcdI6Oletw5LWPcHvNw2uzOXPnZ8yEYCFlZh11g+uGjc812jfafPyxL1t+T8b7oZs8lLbccxROwslzoB9tLO8M2gT6XvQniVc\/tLarWYcYgWzasrXR36HfY22C7yv6+9C2eF2WA9ZHIM5bQ8jnBQ\/tHN\/X82nq4Py+dw82rnPd4qXZZVde3egDbnlle8Z4wV9L2+K6OJDmgNXTOut2lfFYfD6q2+nnFXEa5v9oacY\/xjSd7oV23dITv\/3+h8lz0OswCLv8qmsav9vuWpF5ra3TdTjO+O2BtY9luHCdv+CGxjbaVplzlWa4uTsQgdv7\/sVFQhnSPPL4k00RCF\/CJggR06HyeXiBkMGEPxa3v3fY4c28EJH98TyB2wumvhx+G5cQllf01W37Lfb3gyCHKOj3+Xx\/edxvs1d3v9HM2\/LwMR3PSWdObt6XP5\/tv\/27v28sipknNiLO2DlcjwbhP3\/wo+Y+O0aM6GhW+A+ufTzL+wiBGJy6XidsuC8Gcl4E9Ne37bOmnNcsh8eCbf+8aBzj8ar\/EYPt+pGDVfPkPM\/fqotMHn\/iKdmh\/\/7Nxo+PDEXl8TMjqgjcLBhrOCBkw098fNs+H8M9xLtOAxU4l\/K3b3lxbwjfqfviw5Cl43qkueCi2c19dsziGbPmtLUhPt9+8c+uXxRjiU9ZsKy3dCecMil5377MLBpq6WkL\/DFt9\/aSju0jwoDH23Anhn\/Llt\/dEf\/lK1Y16qo\/12\/jHx+hTM+ut2cn\/IRfHgfqbGPpE\/GBKq8fx36Od3oPxnU0fJvANgJg3v1ov7hexAGEJt5PximMaYrS08f16TE08enr4DxjhJNPPaNZJiubxfRP+XDsr6tt8VwcaOVA3XW7l\/GYPRvV7dZnZLhMxPjRJ55qacMxdiu6T4zWrI0n3rpjd0t6DBmjO1WfnvEXaYquwQdSdDl\/nt\/+wY9\/1jDWK8pDx4abwwMRuC+65LIWkr302s5CYkKqE353avOcGRfPaW5D0CgueoFw2ATua2+4seXefAW0bT4QpMRicMIKCYtiS1sUIxLGhoQ8vIDzi2OPz37686ML8+NDAOJ20bU4RgMSrUQ6Cdwc98+z6BpYLcf8uZ9RFLi577K\/KX+Y3nx2PO+y51k6L3BjYeZdnuQ9L0TaPAs0LMLzPpTE\/K689vq28kaBe+7VC5r3F8+3\/3zIsfvxcT\/5Z9cuik3gxnLd0jHIjG2eL\/OuvW8303LOQ+seT96bP0fb5etLbB+pM\/Zs8mI+\/ORhHN9neXmwH4uDvHy0v\/wzFFbCKnKgrjYWcYHFnIvqsR379QknJ62V6N9xzNIVxbQ\/ZmQQ70n\/xfMiDvzutDObHKOfX5QWQwnPQz8GqYPziCCMSfw18rax4Csqq46J96POgbrqdq\/jMZ6D6vZo1Uc+3HsDQGbhFNXHadNnNtt99Bqf9v5H17d8WM17JzAuzhvrMlvbf5wtykOGRBOXqwMRuBns+6\/0JuJ4Uvttpg94QtLg+v9R7PGCaD8EbioLIgeV1peD\/+zn512vdBJxU1Y+X\/\/WdzNwwfqPzlwUrbE69RixDQ5RGOS8c6ae33AZctrZU1oaHcqOBXscHHkBx+6PMuLKYsmy2zMao9hY2H\/E9ynTpjdcSVw4+9K2cnO+L3cnbKbN+Lzhoyw0fuTL1BSsl7wFPsdnXnJ5S\/5cSwJ3foOFCwXPPyzl\/fMps+0FbuMLMVan5Df\/ukXJr6+4CYn5w0W47\/OxusDHHwb9xjVLE19qXuC2NMR85aUu4dqGuhXzuf+RdW3l6Sf\/Ft98a6Ot8B1RymRtCLG5NGIw6e8lz3odPKljlpZORicrwfgM9D+\/voBNqn3kuVEPaJOwhDvltLOaz4BnwfGUqya4aM\/KYnhK3YCrzHyx\/RarA1b8fMRf4VOFA3W1sf6DMXWWNhg3YbgnYVaSH\/hxPPXO5f1k9Z0YwZwZhmufeLrRNnhrc47H2YdV7l\/njF69oe\/keZbndgRu+DEb254vdXA+Wtedf9GsxqwlBA769XFsU8ZVmy+jtkeP36P8zOuo23WMx3gGqtujV\/cunvO56000uby6GMVwrxFhgBnH6fR9mP2G3hb7QaSN7zDGXT4PttEg8QpBvwm9ymsgfGTNK6v2DzePByZw+ykJkCvP5w6EYqBvnTCzMLX\/xIMWuI3kUZzlvx3zcUznj7HtKxf3Q+cxilIMvrybEM6J+WA963FBnItp+B\/dRyxauqwlXRRwEK2jv238wsZyI6bHTifuKrw4H\/1BF2HDtCjfMCGwp+6HPO2+sRKPaSRw5zdKfPww7MA6JcJFPOP\/lMCdcovChyn\/PFPXQwy38hDD6Xi9zdu2t3APi3FfX1ICd2r6Lb6pfXlw6+KvNSj+lV1k0g8wi9yUeHcZfAzy96Tt\/LpQFpvYPsIh+xDh87h75ZoWLiNw+eN79u1v4R\/5UEd8GrafeX5zSz4IZHmzH+K5+t\/78xaGo4Nhr20s\/ib9+wur2FhXsXb1fTnSx1mM3o0fA7DIQYQHP7MuWj3F9Po\/Ohzu5llHcSHVTyI\/xme+r4TobNepg\/NYePp6k\/pgQ9\/U14vUhyErk2LxfdQ5UEfdrmM8pro9mnWRcbpv0+FBqk7ic9un8+sWHf2r1tmx+M6OecRxFoacPg3vNJ\/\/Kzvb147D7ZVPE43mfH7aHl4+D0zghiTe0prFC1PEoSPvLV5WPfhoI50n40QSuLF6jQMiwyVWQt8QkMbjhOUf2Nm5Pt534P0W7L2\/cNJFASdvUT8GXv45sJCmv45tez+SWOPafuIigZuFCpg2zA9\/f3n3w0KBvhwMIP01JHCnGyQw9bjhi9vjVnY7CtxFoir1118zDqi8lQ6WzXllwJLN58NL0tJGgXvq+Rc2j1kai\/1HofiVeVD8KytwM6i0e2awGds97im6J+l2AQ7DRXG6zoBLbB9TH3MMP2+BHXmIf317nsSpGQSWDwvL+bSdZibZeYrzn6OwETaRA722sawFYvUUS6DYR7PrIdb5\/hoWSXaM\/p\/l0WgXnJhoaYixVOIdTv+oaEaPP0fb4nzkAP0141uemxJmpFoaRGbfF6+D8wgXlj9xnsETLhhtTOD7fPGe9F88Fwc+bcx2tnpVpW7XMR5T3R7duuhn2Oe5KfGzpHFFbPUWY0njLrG37LY0Fns3pIyN\/fvDu0SmPHZOjBG17d2SMjSK6fV\/+Hg9UIHbf1lJWd5CoJUPPNwkOZbAZqnpiR+FHi+cdxICfAWMVgN5i0wasaM4y3875uOYzh9j21tCp1xsWPo48Hly0wvN67HtMXnquRebx+x8H0ehEZHYjnsBh8bCMLfjFvNRwq5JOt\/ptTTETKm3dNHyvBM2Pp+ibcufGIHTp5XA3d4Qxelr1IO85+exTG17gZvn2ykf77PYZmSQL4MX\/xz5n7qe7fOuTLyoHgVu\/MPbOTH2vuPhcDxe9r8vd7f8Kytwg6u3YEqJGrygrSzxw1XZe1G69vriMfHtI1jH949PS3tuzwNrBH\/MWyfEYz6dbftpnnEmjKVRXPzshI\/wKeJAL20s\/STfl4szNuJ1\/cAuDrz8rLfjfntSYRsT89V\/cbwbDvAR3N5RxHGKN3l5N2repWRdnGeGqC9Dam2Vbu5JaVUHxIFPs17qdl3jMdXt0a2LXuOLBmRWP\/2Hfq\/X0X+yd0LUjexcizFGs7TEfoZRNOTDNYmdp3i0uDlQgZsFARGVjJipVVC9GIYlsBHSziGOAsMwC9zed7fdq4+9wIUVqx274577mjiCif+CZWl8HK2e\/crkXsDJ++pLXghs9hyKxLSnn\/t8in1sqLoVuBH58cnOixsLDqwe71ixslkOytOtwOhxiduTzprc8N2M24f4s3snxlIzHuc\/\/M2zyI\/Xsv+ev1h52v66YuqZr3e8YKq4JrHyeIEbn1i2Py\/2X1RxL2Lplq9Y1fIc+WgDd\/J+XuD2LjuiwJ1nRcd14\/Q5K0te3A\/+lRW4KZNfkNDfs5XXrzTdSWCxcxR395L37WOckRKx9B28WDe8dUzRh03Lk6l31ubQ3th+xd09P+ElvIo4ULWNRRi0+kmM67e8dxf7vcBNv86XKfrw5x3NR9z1Tz7TdX\/C56ttcT\/FAe8yJ86qi+5JvOFBnZz3Qgf1h9ms1yxc3DB8yDOySd2L9onj4sDnHKhat+saj\/EsVLc\/fx6jxM09b+1v6RNFNyXePUk0jvPuUzlW1JfiWEvf66Zbm\/0p3L\/5Y2yjy7C+nTfsHKXnMqr3OlCBG5D94iQQ2gMfF5P0lgWesBNJ4Kaiegzitrfs8QI3HUHDBOEknpf670VOBHJL4wWcXx732+Z+O27xoARuFhpgwQKs\/O0ei+I6Be74Yi66bt6xyE\/DLy\/up8BNY+8\/kvDi6NWNhRe4zz1\/Ri5f7H79xxhvNc0iknkYdtrvBT8vcPv87fo+xh+Xz9sfs+1+868bgdtbVXBvnlv4DPf3grsSuwfF9XUwy7aPYE4nyp5JFLjz2t+8Z1Wljc\/LS\/vr44OwnFhYVm1jWZfE6nqV2It4fHDGxUlePhge8PGbtVnEv4nFv7F4nt5aLhq1ePckiM6+fHVyHrHDvxM99+mn8kEfC79OMwR9+bStujHqHKhat+saj4G\/6vbo1kOvD0Q3JX+48OJmH4dtX1dZWNu\/A7rZvuTyK1vy8nUg5oOmhm7RSXvzZdP2cPJ54AJ3HEz4DvuMWXOaBI\/+eD1JvcgD8bxA6Kc8pEg53lyUdKpkeQI3FdowiUJK6r7Z5y0IvdVGWQFnEAI3zy+v02v3G2MJ3OnGB2t5zx9w7eTKJo87fr9\/gflZFj6N3370iaeaXOXZ2THP4fhMO\/33MwjqFLgHwb9uBG6wYpBpeHg3Jd49CZ0Dw1Vxuj5UxaVs+0j+RQK3PUNi6kSn8niLmmjx2elcHa+XA8JzYuNZpY1l6quv091ux34sBh347UfcK8qLD1\/i48TmY7+fb\/w47o2JvHsSRC9flro5z4LK+GEt4jvvPk0zF989D7Wdz4eqdbuu8Zg9G9Xt\/GdkGE3EeOWDjzTbc7Q5f4\/egJCPpf6YX7+o6H2QOubdaFmejJU75YmO8OruN1rKYecrHn7+DlzghjSedEzrZB\/T4nzHni+AnmCe1HFgMIoCt\/9CRaPhsUptYwXhMWQlWktXVsDpt8Dtp69YWZlacsFFsxtTF2++\/c6MBd5iJ7tOgfuFra\/mTo2xMhFTVj5OxF\/K7Y7hnBd7\/tblooSpQj5fxO28xUPzypW33wvcZ5wztcmjvPReiKWOW7rrFi9t4STiYNHPFoQgjV9duS6Be1D861bgZjFQ4553U+Ldk3jh2\/BVXM8Lumz7CN5FArd\/v8HlTs\/n8quuaT53rDs7pdfxep63cBw9HKu0sZvCGhL0yYreX\/iGxLCANLfdtSJ3rRPcYmFFi9jthXd7BxCX+bAsHo8ej7t55r8+4eTm+8UMXqJ7Ei98k3e\/OE9\/lf79pDMntxhleM57t4rd3KfSqh6MGgeq1O26xmMRa9Xt0ap\/aE1+rGNuSvz4OgrfcMZzlvOL+lIcQzu0NEW6C7PYr75+UYYRmC+XvVswAmSBy8hb\/R9+3o6JwM3ijkYuI7oXfVJ+Ti09cZHAjdVbETH9F6TxsMhkVQtuBGqPCU73i+47+h7Gt6OlLyvg9Fvg9r6aeU64irAy+phOuL\/3OgVuf5247bkTORjTdvPfC9F1CNz7Drzf5t6lzsGBF7jx99bpXr3vUe9Ox7cDPM9ufZfbdesSuAfFP9\/WeZ\/kdj8xZpBpfOdDBdzzVhq8tKtiF6+l\/+0v9bLtI9jR4bJnFWfWeBcE1IlOWPMxw\/KK08g7navj7c9RmAiTPA5UaWNxCWX1k7hfVqaUDQHeD87Y9i5O8u5L+8X5PA54VyT2fvH7UgshD4rzjFfOv2hWS\/1CAMm7F+0Xz8WBzzng63HZul3XeKzTc1Dd\/vw5dcJqWI\/7Mb+5KfHuSeYvuKGtLZ8ybXqzvfcuSOvEgD4T2heueH3fjf5VnddRXuOD42MicCPGeL\/AWJb+8PAjmoRbsuz2NrJ5MkZxkQbcjqcqjpGNRS4tHXGvAneew\/pOCyn6gUpVgXvLqzta7sWvImv36+O4sixfVe14WQGn3wK3t1YyixIro4+5V\/8cJXB\/3phQt\/xCreDUiRse2zLbXuBGcC1a1JH8\/KIn3gJ587btLc9xw7PPNzlZphyWpi6Be1D88wI3X4\/tPopi75+Meuit4ukYFJ2rY5\/XjypYlG0fybtI4PZTv3GVVVQWrCD4+GHtXGoKXtH5OtbbMxd+o4dflTbWf\/S+asHCwjrdK6eiAIE1ba956vzR47k9c\/qKfizChxT\/jorjIztvkJz3ogdltTIoHl3e6tl3fvZV6nZd47Gyz0d1u\/NzLIvleEuHexobu5gRq39voJHFMqP72TnoCv1cewGh2xsc6ePpxOTimAjcEHvWZXObZMYPjic2FqiR\/HacOArcuLCw49FqzucTfUzFDpwv05mTz2srAwsB2XWIN2x8ri0N1xuEwM11vCBH44FVp79f28YS2ndkEUDtGHFZAaffArf3Eb745s9XxfVlpWGKPvskcP+lcQKbk35\/egtHVz7wcMuz9lhW3fYCN\/WAr6FcO5UfH5x8nbljxcqWdN56nXaAj1CpfNg3bfrMjPrNj+mslq4ugXtQ\/AMDw4QXud1HUezrHh8JvHuSvHaoKD8dK\/9CL9s+gmmRwO2tanj+869blPvsEbSNI8R6xuWfl7gtrKpwoEobixsRq6e05UULOPPOsveXn8Fx\/yPrGtNzGWQx6EecSJWfabR2LbUJ4niKI93uY7Et4xQuCuAw\/4mZKZnKrw7O8+6D7\/yKrOf8+7RsXylVZu1TfRk1DlSp23WMx1S3Vdeoa55Lt965ovmeOfKXxyXfK34WHe+gIsMtPBZgkGD9KQR1q9+TzprceK8cf+Ip2YNrH2\/ut+MWk87efVETszSKh5vLYyZwY\/1s5PIxnacUqXyaKHB7i0jSefHL8mKfz4PtbgVuRDyfx+9PPzu5qv2gBO54Tz876piMRsLumRicvRBO+dc8vLYlTVkBxw8A\/SJ\/\/npsY5VuOEWriyJs\/BddrBejXyQ63H7avl1DAvdfGiGPH9h4P+vxGfXyPwrcXAv3Hv7DFF9f8Zduz4iYWRtRwPaWyKThReNnF1BOFqL1gyrSecGvLoHb49dP\/jFjxeOCL7FOX6ujRYad712+9PJMdW7+i7xs+wiGfkBO58vjSvvlrbJ5htQR\/+x5zrFOlHED5K+j7fxnKWyETR4HqrSxftF06jOGBljC+WvQb8T1mLXZxN6HNost+WOpgR19XvwT+3R+gXZ\/PW2L42U5wKLjnlO2fdaUdgMfy7MOzrN4pV2LOI7FuBaLf\/mxi96D4rVxUHFnLlSp27HvWWU8prrd+dmMAn\/50OHbeNu+4577WvpHHgs\/g4j0c+bOb\/vQisEmYyvLD43Jaw9+Jh4fRWN\/jOvhD9w+5pLPjFlzcsvky6ft4eL2mAncEOW4357UJKmRlUX+UiSy48RR4H5l554WspLmBz\/+WXbO1PMbgwL\/JcnnEztVnSy4KVcqL6wpL5x9abPcRSIueXhr6qouSgwjb8lp90anECHYT8GwY6ecdlaznJZHWQGn3wK3X33XykunFstd7tM3SHaceCIJ3NwP\/Cjze+KZTc1nyfRoj0k3+XTrn9sL3PGZ8JEF342e41auWN+Mf\/5lZWnhMC+7VF5c384lrkvgHhT\/oh9Le1ZYwvOxzt+b3\/YCvOHEQoQ+jbbrfwGXbR\/Bvkjg5jj+3+zZWUwdgucMJmJ9Ik1s3\/SM63\/GwlSYwoEqbeycK65qq9O4nuI9xWyz+FGLY3HNFPqr1h4QkwYLIxZHov8T8\/AW4OKuuNsLB1LjhE4LkvfKedzaxXcdfT54zaw\/ZtDG48yA6uU+da7qyahxoErd7nU8prqtekY92\/H63pY+Df0a2vR97x7Mbccx0ExpB7ghRg\/w7oitv8T4zNfrh9Y93nZdOD378nkZ42WvX1iZ+Jjq89D2xODwmArcTB8wkhJD3jxi+XRR4OactU883ZKXT2\/bWFzj+9T+R8GtjMCNywc738feonmQAjcvE6Z8+LLkbeO+IoVdWQGn3wI3lk58Scsrv+1ftvyels5vFIC8P\/ciwTCPa3n7vQ+pFI5553Xan\/poYvdaFHthmqmeRWmLjnU7cPAviCuvvb7la2redYr8k2KxnXpxpfJCCIxTuOsSuAfJv7iAkt1rka9lrNYtncXbduzJbTM78U7Hy73Ey7aP4NlJ4CYN7WgcvNvz9DFpfB3X8yr3vISTcKrKgSptLO+N6FLI12O\/jXCNQUYsH65NvLWqPyduX3zpFS2zPmJe+i\/+d8MB+nCeY3xM6XR+HZzHoCAlZviysM17sF+zETvdp46rLg0zB6rU7V7HY+Cluq16Aw8w2vHt+WlnT+n4bmFtEa+1+PPj9tz5C5L5sT+mTf1nBvTGF19K5jHM9V5l\/0v965vA7VdMLfKx5i1TijoxXhDI8w23+qG1DbHNp4XU\/McSBmHMi58IDZ4ITIewSjD5vAtajvl0iA7R17GfPhd9Cflz2fYLbHaqXB4fplXEvPjPFHd8VucJpZQNH0ipc9nHuXbfCKV56bwP2aJF0rgny4979fl1woa0TJNKfXlmAMjXOdL4jnGcguK\/QMePGL4s3W6vevDRhoXt8hWrcn1Od5sn6csObA1Ti\/moY9fzorMdLxtTbyyfMrG\/ltWraxYubnkmdm14El3ipK4BhxESU8+dvMAIdw6pc\/3iKPAilcb2dfr4RLpB8I+26La7VrR9HJhxcfFUKd8ewHO7L8X961CWbR95Bt5dFrMZ8p4LgtYZ50xttpNWX4h5X2FJylS8vPO1v3\/PW9iONrZV21jeo9R5X5dtmwEbU7eLrJd4J2Bk4a9v59Mm0N5b\/0ccHW2O1vn8o293xkFl8++V84wHsMzzYyLjPHWG8cjL23eVLk\/Zciud6s8ocKBq3e5lPGa4qm6rjnnf27TrXrMwnqRiuIPbU6\/z2HuBGDck3u92Kg+8I9Bninog5yNs46M+ukxN5aN9w8vjvgncY0kKGmfITWV66bWdfbN2YbCCYMZUjGhVOlb3T1mwQmIgtOHZ59t8co9VuapcFx+TiPrrNjw91PdR5d7H8zlR4PZlRZR79ImnMqa4wkV\/rOw2dYrnzockvuYWiQJl86ySblD8Y7o6C9hy31hG5ZWVds2\/8FNrDeSdq\/3j8yXNTBDcclFn4PuWV7aPm3eJODM+OaPn0r\/nUkcbiwUcgy\/qM32xuKZEmedHu4APVdoFzdLp3\/Mu8ywmeproU7uKoFwH58kDF170\/fbs25\/bD5roz0P3p\/peFwfqqNt1jMdUt0eT09ffeFPzgz+z17rlNf0x3kePPP5kQ8\/b8uqOSnoea9GhI9EfGys9odt7V\/re68yEFLhFjN6JIQyFYR4HigTuvHO0v3c+McPFvmLzVVpfn3vHVLwUhuKAOGAcUBsrLhgXRiX2fueLZh2NCh66T7UBE4UDqtvi8lhy2XsV0HpR4uKguSiB+yORbtCk0\/WGm3MSuAf\/\/FhQ1E\/jveCi2V1\/DVe9G\/xzE+bCXBwYDg6ojR2O56T6VM9zMjdp9tGcGN+5wrcefIWjcBwrDqhui3tjxT2uywwcxqj+3YLbkbEsk649enVCArcEbjU64kBXHJDAPZgXBVPTWTPAC9t0GLDe3r3vna6emV7ug3lmwlk4iwPDwwG1scPzrFSv6nlWrKXzgx\/\/rM036Y9+eqT6FBoLiANDzAHV7XraSL1rquE4+\/J5GWu+eWGbbfYL02qYCrfquEngHuKXmYhfnfjCrjp2ErirY9cN7\/xirdZhQOzGt343+SjtYJ6XcBbO4sBwcUBt7HA9L9Wv3p\/XgkVL2wQIFgOXhV3v2IqfwnAsOaC6Lf6NJf9YFNjGqhZPPu+CSn6zx\/I+dO2JUY8kcEvgllgmDnTFgUU33ZqdctpZjR+Lmepl0J+XweZt27N\/OuRL2Re\/cmiGb8xpM2ZmLJYhvPuDt3AVruLAaHFAbexoPW\/V70+zZcvvafQr\/uXQr2fHHn9ihm\/Ut9\/\/UP0KjQPEgSHngOq23mdj+Y7D5zuLSeJ7++RTz2i8a8ayPLr2aNcHCdxD\/kJTBR7tCqznr+cvDogD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4MMockMAtgVtf7cUBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBhKDtQmcG\/bti3TTxiIA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDggDgyKAxK4Jczrw4Q4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiANDyYHaBO66MlI+QkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBAaJwBcGeTFdSwgIASEgBISAEBACQkAICAEhIASEgBAQAkJACAgBISAEhEBdCEjgrgtJ5SMEhIAQEAJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAgNFQAL3QOHWxYSAEBACQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCoC4EJHDXhaTyEQJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAkJACAiBgSIggXugcOtiQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASFQFwISuOtCUvkIASEgBISAEBACQkAICAEhIASEgBAQAkJACAgBISAEhMBAEZDAPVC4dTEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEKgLgdIC9x\/\/+Mfstde2Z+vXP5Ytu\/X2bOlNt2QPPfxI9vLWbdnHH39cV3mUzwAR4NmtXnPNaKnyAAAgAElEQVR\/tnjJ0uzW2+5oPNsPP\/xogCUYzUudfMqk7L\/9j39s\/B5du240QdBdCwEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIgRoQ6Chw7z9wIJt\/9bXZP\/zvQ7K\/+uu\/Sf7+9u\/+PrtgxkXZjp07k0X69NNPm4Iewt59K1cl0xXt\/MnPjmzmccmcy5pJH39iQ3O\/iYap+F+\/9o3sqF8emy1ZenN24MC7zfOHYePIXxzTvMc19z\/Qc5EfePChDDzynuf50y\/M+KCh0B8E4LJhv3Ll6v5cRLkKASEgBISAEBACQkAICAEhIASEgBAQAkJACAiBEUCgUOBGPEa8NjGuTIxldyogLtv5Rx9zXCpJ7r7t23c0zyWPdevWN9M++ODDLcfsGkUxAvjWbduaeYz3jW988zvNe7zzrrt7Ki6W2kXY2DGel6y5e4I69+ROAjfc\/MMFMxq\/BdctzM1HB4SAEBACQkAICAEhIASEgBAQAkJACAgBISAEhMCoI5ArcN+x\/M6kEIo4d+bZk7MpU6dlWBanBHCsuWNYce99Lfl1Y0V9xdwrm+ciTnvr4ihwUx7\/M8E2xqTZtOm5WMxx+b8ugfu6hTc0cQQPsPzNCSdn8666Opt02pltVvrf+e5hcj\/TB0Z0Erix6ja+fvmrX+tDCZSlEBACQkAICAEhIASEgBAQAkJACAgBISAEhIAQmBgIJAVufDObwGYxFqVv7t3bdtcffPBBtuD6hW3pEbR9wE+3F8NvunmZP1y4jchn5Zg565KWtF7g\/j\/\/78stx+zPRx99lL388tbsnClTm\/lYfu+8844lG7dxHQL3rl27W+79u9\/\/YXbw4MGWe8aVDNb1hg3xsltva0mjP70jIIG7dwyVgxAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEACBNoEb62gsd73Iedvtyzui9czGZ1sEbKyDo5X22eec28z3sB\/9pGOeJHhx8+bmOZQpuhYpI3D7Cy2\/866W\/K6+ZoE\/PC636xC4Z19yafO++RDwwYcfJu8Vkdt\/UDjiyKOT6bSzOgISuKtjpzOFgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAR6BN4GYBQi9u+wUd\/YmpbRZA9OdedsXclmRPPf1My\/E33nyz5Xjqz4UzZzXPQeiNoVuBm\/O\/\/8PDm3ke86vjY5aV\/\/\/0iKMyxON\/\/tJXW9yoVM7wv06sQ+DmPu3ZnHveHwqLhLW+pc2zii\/K4I033sief\/6Fxs9\/5Ni5a1e2avWa7Mr5V2eLb1ySPfLo2q79fLPoKc980eIlDdcqfLB47rnni4rTOMaHESuTd3GDf3f8krOQKvx97bXtHfOyBHwMYGbA3ffcm827cn52190rsm2vvNLx2ecJ3Ju3bGmU0bvkYXFXKzfx22+\/3bg85bT9ts\/KlYqZfWHp9+x5PZVE+4TAhEGgX\/WDtoY2B7dOtEG8L2mTugm89ziPdpC2hzy13kE3CCrtKCPQj7rNu3z9Y49nN9+yLJs776pGvH79Yxn7y4Y\/\/elP2auvvtboB9AfYBYj\/Q7f3yibl9IJAY+A9d2ImZHaKcBDO8f3wf15dXD+k08+aVyHGbkYC9E33717T\/bnP\/\/ZX0rbQkAI5CBg9bTOul11nOyLqLrt0ZiY2xg6Gv8wJu0UaNctPfFnn32WPGXHzp0Zrlavufa6xu++lauyHTt2JNPm7XzvvfeyJzY8meFa94ZFNza29+\/fn5dc+4VAGwJtAvfvJ53eFDcR18p0pnyu+OU2cfRfv\/YNf6jR6UEwteOdFtBjwEAZLD2CQgxVBO6LLp7dzPPfvvGtmGXl\/\/7euhkYdbpgHQL3Sb87NeNe+T308COFl2ShUMO8isB98imTmucjZL\/11tsNH9+Wp49xW4O43KlDTGOH33d\/rt\/mvuBCXmBGgaVHlEZo9\/vsGPGvf3Nio8x5eTFg9SK0P9e2p553fu7ANk\/gtnOLYizxCVjWWzrqbKfgF3llJoWCEJjICNRdP2hbaGOszsX47MnnZu+\/\/34hpI89\/kTL+yzmwYfHbt+3hRfUQSEwARGos27Tx6QfmtcXYD\/HO\/VP4vomsW5345JvAj4y3VIPCCA0efeOfBQtCow9fHoMMHyog\/N8kJ10+lm570PGDRg0KQgBIZCPQN11u9dxMiVV3c5\/XhPtCJ4XfF8FI8SigDGOTx+NVDHwi25ufXp0CNIUBT6Q4kLXn+e3f\/yTIzKMKBWEQCcEWgTu2DGac+nlnc5vOx6tuKNFLFbdRtaURbbP8Mknn2qm5ZzU15sqAjf3VbYMvjydtsezwN2p7P44i4QaPr\/69W\/8oVLbXuDGksm7PLF8Y4xIm2fpRGPGx5J4Tur\/9QsXJcvoB7A3Lr2pY158WElZVeKz3X9wSJXB9mE1nxKs6hC4vasdBjNFH1Teffe9lvulXikIgYmMQJ31A4HL6nRRTBuVWqcCnPmIV3SuHaOtjJ3GifycdG9CoFsE6qrbiAsssm11ryg+8eRTktZK9BE4VnSuHaMvldfH6RYDpR8tBE4\/8+wmxzAiKgoYsBjniH0\/tg7OI4IUfez118aCT0EICIF8BOqq23WMk1W385\/TRDzCh3uvW3Vy2es9KqBj+PD4ExtaPqz694DfRq\/I0yDWrltfOg9m3CkIgSIEWgRuvqx4IjIFodvAlAefR7QeoAH1x5lKlxf8opB5rkSqCNzHHf\/bZhkY4NQVfENRJDh2ez0vqN55193dnt5VehYN9WIwlsrdBi9w+2eNb3fywxI\/9ZVv4Q2L2y7FgPBb3\/le83mRH\/+xZEaoZnDprVU4nmo8\/T1ZmSyfe1bc25hGg2sZO0ac+sDjrf9JQyM\/57IrMqbgYKWFb3mfR3TTww3mCdz4umdRT9\/h4d7YZz\/cmBAYtPjrFFmv37H8zmZaONrJGq3tIWiHEBgyBOqqH9FlF\/WRNmfJ0puzWbPntLVN1O1Yv9atW9+sf9RZxAHcGW3a9FxG3YyWcOdPv3DI0FZxhcDgEKirbvsP+dRL3o3MosBNCbPFfH+O46m+kF\/bhDT0JzHy2Pjspoz+jLc25zjHFIRAtwhEY588tyPk698nbPtQB+ejdd3Fs+c03PsgcNDfjcYoZVzo+TJqWwiMEgJ11O26xsmq26PEvL\/c6+VXzGuOT4qMTqMYztjFAkY5UYeh74NxEKJ57AeRNr7DcKvj82AbDwBPP7Ox0W9iXOR1HMZRCkKgCIEWgRt\/N3TC7VfV2sQLskzdjMH7wEYcTAV8+3iy41IiFboVuBEV7P6I67Qw8AOiYRW4p50\/vYkP+HfrX5ZnlBK4U25R+OLsn3Hqeojh\/nlhER7Drl27Wxo+rCCjyOQbRvKj4x\/TMHD23OQcH5j+5cuLr\/JUYJBsZWY6TQx5Arelw3eVnc+95AU\/kClyU+Ldk+TVt7xraL8QGFYEeq0ftAfeRRbbe\/fua4NjxoUzm\/WVeovvXR+82y8+8qXeDVddfU0zD9qYvEWAfb7aFgKjikCvdTsuXo5VbOzvYu3q+wPU7ddfb12\/wrcPqQ9TuIPwbvt49ysIgW4RiOJCnpuSOG5CdLZQB+ejgVLqgw1jBl8vUh+GrEyKhcCoI1BH3a5jnKy6PZpMRD8xvYEYHqQCBq8+HcaQFrzRKGnQEmOIxkIYsPrAO83nnxprxXX8UsaMPk9tjzYCLQI3lqxGsCjudQOT79DPnHVJ26lYo9p1sJpNBT\/NjgF\/ShTgvLICN4MXprZ6oZN8ES3rCsMucGNtb8+FGF\/cVUIUuItE1WjdGDvu3hoEy+a8gMWUL3ucfeCfOyJTHMxavrEB9Y04ohMc4gdWeXns2\/dWS1kYKPtQl8DN4MXuOa+ORPck3S704MutbSEwTAj0Wj9WrlrTUr9e3rotefuIWLgfsLrIByUf\/KyOvLaQPLietS957zufr7aFwKgi0GvdZo0Mq69YAvn3vMcUsc7367BIssD73\/Ig9mKipSHGUon+AnW7aKaVP0fbQiAiwLvD+JbnpoSF2y0NIjPvFQt1cD4aQeUtMoZrSnuXxb64lUexEBACf0Gg17pdxzhZdXt02ejHKHluSvzs9VNOPa0JFjN07J1D7C27m4n+a2PB9Z+7e0Sz8O+PSy\/\/3H0x5ckLiNr2bpEv7jyUtB8EWgRu75u4yHK0E3QsaGiETy1ox2Jcdpw41QHyIikWsXnBC9zkhXgZf9H1hF178ZKledlW2u8HQnUKFN4ivl8uSuI0KRqYPAG3Ezj+2SEs+0526lwvDnmf33SS7VkRR3\/uMS\/vyiQKSV7gTrkNsbzioHXLlpfsUFexL\/f27a2rB9clcIOrt5RJDZ55EVhZmH6mIARGBYFe64d\/j7FdFLywQH3zvvd5B1od5L2askwoylvHhIAQaEWgl7qNxZzvD+CSpCj4gV0cePm+5Qkn\/S7XEKMofx0TAmUQwDjB3iPEcYo3eXj3drYgOfvr4jxrTPgy5K15U+Z+lEYICIG\/INBL3a5rnKy6Pbps9NbTeW5KvL61fv1jTbDoP9k7gX5VUYgujL1RQDSwxDWJghDoBYEWgRu\/oGWJWnRR7xIBp\/Sp4BfmiVM7o4\/FZzdtSmXR2BcFbit\/UUwlpDJVCWdPPjfj\/lI\/f82fHnFUMk2VhYb6LXDje52vaVZ+GrIqrkkMTy9w43upU\/Bf7vyHldVr7m+WibIhNr\/88tbcnxe4o8sOP6BFjCoKXjTGMrwoIIiz+CkdFD7UPPb4ExnudAxL4n4J3JTrkjmXNa8V75nj3td5p4F80X3qmBAYRgR6qR\/eKgaLhaK2JwrcO3bubMLFR0nfHtDW8h5hQZU8y9HmydoQAkIgiUDVuo0w6OvjsltvL6zbXuCmb+DDGWed05IXfSc+ruMKr6qBgM9f20LAI+Bd5sTZjtE9iTcIqZPzXuigHmFQhLEQ10NIVxACQqB7BKrW7TrHyarb3T+3iXDGwYMHW\/ox0U0J2ob1mdBSfN\/Gu7XlWNE4iWOWD7F\/h+H+zR9jG70MzxLMilcQAt0i0CJwI855gnWyvM27mBdkUz64Oc8LArHCeFcpeS5M7NrdCty8RBDQq4b4AvB4ld3u1rrb41m3BTeNihd0eRa9urHwAvf0GTM7Qh1dAdgJfkZBWWwtHR8YfOC+7BiNbFHwVlkpgZsFFViYAf\/almdR3E+B23+9j25KcL\/jy4W7EgUhMEoI9FI\/\/Ec\/X4\/KbHvrAzqD3g93PJ8Pc7g+UCdulJipe+0Vgap1e+u2bS3vxVgfO\/33Ih6GALg4yTsHVxL02Xrpc\/aKk86fOAh4a7nopsSPqRCdfaiT84gdee9G+tm867Dw8yKIL4u2hYAQaEegat2uc5ysut3+XEZlj9dtopsSXA1bHye6HWZhbTvWbTzvqqtb4PV1IOaFLoOe1Em\/aclQf0YagRaBGx+jnlRV3DNE62uswlOBzo8XHf1UhWN+dXyzHLECxLy8wI1Qi6VC\/Hmf4HTMOF41TCSB+5133sm8mAs2L730clVomuf5hjLvA0czcZZlz2x8tvm84Z8Fnr3nYzfb0R2H51qnBtJjEgVuOu55nfu88vVT4AYrBjN2be+mxLsn4SWkIARGEYGq9cPqVJXYT+EDcz4WM53bW4Wn8sUiVMLAKLJU91wFgSp1m49PqbpXdl80UKA\/yUKzvo+Ryqtul3hV8NI5w41ANFrwYxnvngTRy4e6Oc9YkVlNKZ7bPsZj\/kOvL4+2hYAQaEWgat2uc5xMiVS3W5\/LqPxjRqm13dFNide9+FjqA8aEdl63sXejZXmiYXTKE33nrbfetlMUC4EkAi0C98cff9xC1E7icirHuFJq3sJcnMvXGKsQZ549uZEdHTbbRxxXrY\/X9AI3lTAVEG19ntElSuqcvH1MPUcgTf38NfgSmkqDO5BuQz8suJmS4vNFtH3uuee7LVoyvRe4p0ydlkzjd3ohlkGihZtu\/ty3E9hi2V\/0s4UHSBNX8fWDz6oCt5+mY8+aKTSzZs9pTNHkYw6Lo8bBRL8FbhYDtfJ4NyXePYkXvg1fxUJgFBCoWj98m0GbVtT2cAxXB5amyMUT7cjceVdluG+yeutj2hRvJToKz0j3KASqIFClbr\/66mst9Q6rIau3qRh3dkyl5dh9K1fl1k0+TGFFi9jthXdft8t88K+Cg84ZHQS8e0eb4h3dk3jhG2T6xXnGEfR7WWfCG4Z4zrNwu4IQEAKdEahSt+scJ\/sSqm57NCb+djQ6NTclXveIwjeoeM4yZkr1ofw+P04q0sPQ\/hbfuCTDOM+PxezdwvuGBS4VhEAeAi0CN4lYKMcTqFtrMm99DQGLAhbidi0EVixj\/BQFXEB0CmUEbvKYdNqZzWtxTe8jtdM1yh73X7milU\/ZPFLpvBBdh4sSPmRE9xp1dkK9wI1LmE7B+7jEwtHCmvsfaHlm3XLR8iH2DWRVgdv7CudZ46okFRhsGK+J+y1w+49CVo+8NQD33gt2qXvUPiEwLAhUrR\/e9UCVj71l8Pnkk08yPgr7a9FmFHX8yuSrNEJgFBCoUrdx1eXfz\/2yMqVsCPC+78G2Pl6NAjP7d4\/eFYm5KfH7jjv+t20XHxTnEUUunj2npX4hgCgIASHQGQFfj8vW7TrHyUUlVN0uQmdiHPNajLkp8e5Jblh0Y9uNYjBq\/anoGrYtccUd9JlY1+TXvzmxeS2uSf9KQQjkIdAmcN9738oWAnVjceIbZ8iXmn4QC+IH9gz0vfB6x\/I7Y\/K2\/2UF7ujAnopSdxgGgRuhEwtBa5CIvXuYOjDxAjeCa6eF1PziGt4Cedeu3S3l3LxlS+Xi+UFmVYHbW2WZ5UyqQODp8e1F4O70kciu7\/1gUSe8VXwvMxYsf8VCYJgRqFI\/Jp1+VrMe02b2M+B\/27cZWOUoCAEh0BmBKnXb99UW3rC480V6SBEFCKxpFYRAVQTow\/v+LB9SvHsS+JYKg+S8Fz0oq4IQEAKdEahSt+scJ3cuYZapbpdBaTjTeDfFZq3t3xu4tY0Bnc7GLug9Vdfui\/mm\/iN0e81QH09TKGmfIdAmcGN9Gv2E4nahU8Aa23e6IHqZRbMQ0K1y4FfHtok7CaOUqazATVqmjvr867RaJn\/fEIxHC24ah2jJ\/ujadZ0ebdfHvcAN3nxMyLNa4ougfyarVq9puZ63XocfH32Uv0DohTNnNab9M\/U\/+n733KwqcPt6cdvty1vKaX+4z+ibsFuBGwwME+pRmeDrAR8JvHuSFzdvLpOF0giBCYtAlfrBe8\/qITGr1ecF2hTaHX7UPZsxsXfvvsYUPjpi1Ms39+7Ny6Jlijf+uhWEgBDojECVuu37grxjixbWpi9hdRsLJwssyk695seg3+q8HbeYabS+HdH72JBRXBUB796Rj6FwGI4RM4ZLhTo4v2jxkibni6znmJJunC\/bh02VWfuEwKghUKVu1zFOVt0eNaal79dzyRu84p0hFfwsOtr8IoO6Dz78sOFyxPpT3oXx2ZPPbbxbTvrdqdmGJ59MXaqxj3T2bum34VFuIXRgKBBoE7gp9bObNjUJZES66uprkoIznSmsWa2DZenxs1Mm4CjezvGxt+QtyscPbhCYiwIV0ZcTi9w84bUon7xj413g9l9ewRqL+X6EKHBzLdx74BrFAl\/5ooDEojRRwPaWyORDg4ZvMB9Y2NR33kkXB5F1CNwevy9\/9Wtt\/p+oC\/CW6\/tftwI3vtD9+dSlvMGz4RC\/\/Nv53uWLpVUsBEYNgSr1g4+U0a\/ounXr294ZLETr237fEYzX5Z2T+vjJBzOrs8SIZwpCQAh0RiDWMatHRe++117b3lLfqL9YwvlA3xCXcJYfsZ\/RyGJL\/lhqYEddxz+xT0d\/RUEI9IJAXFfI+DX1vPNzs62D8yxeadciTlmLM6bzsx3LuCnMLbQOCIERQ6BK3a5jnKy6PWJEy7ldPnT4Nt62V65qNT70p\/sZRKRHL4wfWnHpirBt+aHJeE3Iz8RDp4v9Ma6HP3Cv4c259HJfDG0LgRYEkgI3KRZct7BJRCMkxMJaBR9rWLIg5iFK2nGLmdrdjXB81C+Pbctj\/frHWgqa96cbgZs88Ctk5STG0qCu4EWOlIhR9Tr+ixplpmEo83vhxc8td5mG6++7m3y6tXT3ArdvjLgmzxofgV5wtnKlOstg5htFS0sHmkY1lRfXj8Ffr6oFt19l2MpB5x3Lcaw2471amm4F7ugvkXwoP5bwK1eujrfW\/O8FeLv2Ndde1zyuDSEwyghUqR9xwViri7Q7Z5x1ThZnHXE8ulK6\/Ip5LW0vdZn3KFbafPj7yc+ObDle94fXUX7muvfRQKBK3b5y\/tUt9Y66ywct+g\/MwuIjtr1H7RgWSD54l3qWBgsjFkeiXxDz8BbgPh9tC4FuEfBTtY2nnRaK75XzzKqN\/VzeV\/Ca2ZjnnveHtuO4rlQQAkKgPAJV6nav42TV7fLPZyKn3L9\/f0u\/h3cLbT7rBeUFjEe9xmLvI\/zIo9MQ2z6Ll916W0t2Tz75VFsaOD3vyvkZOobXlaxMfExVEAJ5COQK3Jyw4t772ghn5MyLIWO3wU+DIF8qClY5ZUK3AjcWwl6UR5QuqrhlymBpBiVw52Ef93thGkElHi\/7v9sOqm+IEHFSL9547SI\/mFhspxrImAf\/EZ5S3PGNb1WBm482fDFMXdfvo974QUC3Ajd8igv1WP5Ffu2xWrd0Fhe5RDDeKhYCo4BA1foRfeha3UrFdNJiQBSLrqFS57KPj1gsEKsgBIRAeQSq1G3e57xP8+qi34\/wjbuhGHBt4q1V\/Tlx+4q5Vyb7JjFP\/RcCZRCgb+05xseUTqEOzmPo4fvTvgx+mz5wv2aJdrpPHRcCw4xAlbpdxzhZdXuYWVNf2eM6bedMmdoxc9YW8RqYfxfEbQxoUyFlWBvP5T+z87a98koqC+0TAk0ECgVuUu3YubPhU8cLdinCYc3N9IEqgWkKPn\/EvbLBL2xZdkE+XKr4eyjrTqVTmZi+joUtvlq7sWDvlG\/ZAZS\/J7aZOm\/Bi84xXaf\/Za3pU9fCkgnBefGSpclO8WE\/+km2\/rHH7dTcmDz44pf6sk35wajIV7z\/qNGpYfRWVylOMx0sVQ7KYAKXHwDEqTZe8M+zWud+71u5qu3jwCVzLsvFiAO+7FxHQQgIgc8RqFo\/6LydefbklveGtZu8u7DWTC3A8vmVswzf+t\/6zveSedB2FPk09floWwgIgXYEqtZt+jepWYTUbwZsTN0uMoLgXT133lUt717fNvAetn5Be6m1RwhUQyD6dmdaeNnQK+dtYUvfrzbOU2cwqHnjjTfKFkfphIAQcAhUrdu9jpMpguq2exAjuhmNTr2WVAQJ3GFWqtc\/7L1AjBsS73c7lZetZ+Q1QcsDYRsf9dGVbSof7RMCHQVugwgrNKZr333Pvdn8q69tTBlg9dQnNjyZ7T9wwJIpFgItU0kQuH3AD9MzG5\/NmErJVJgqASEJ4RkLdYSnosFnlfzLnoMvTcqBz3oa9n4F6h51jPsu+nBC58a\/WOJCm\/0qn\/IVAsOAQB31g7YGq03aMDp9DES6Daw\/wIdj2i\/8ovZz1fFuy6b0QmAYEaijbmMBx+CLeolFeFzrowwuuKbDh+r\/Z+89v+8ozmxh\/y2z1nzwh7nvfPDc8R3PjC9zHbDBYwZsYwyYnDMmClAECeWcExIKKCChhCSUECgHhJBAEtJPKEeQBAIExna\/a5+Zp7W7TnU4ffqc3wm71jqr+nRXV1fv2lVdvfupp9A\/aPZUFsSUJi8Crk\/tPIJyEZxHHrt27S6NhS9evJj3dnSeEBAC\/4NAEW27iPdkte32pOTc1+eFhjhZDUcZKYzH8DyCZoj3pBMnTuaavXb27KclfQXjsc7Sefi+tN1cCGQWuJvrtlTazkSArcVdgbszy9Xq18Z0UPvSia+f+srZ6jWu+6sEAbWPStBSWiHQPAiobTdPXamkxSDAfucxA0FBCAiB1kBAbbs16rFZ74LXfdM6Xs1aiyq3BG5xoHAEJHAXDmlqhlhQlKeLDq3AzU9q5kogBJocAbWPJq9AFV8IxCCgth0DjHa3JAKwjoP7OjNmQAzfuQpCQAg0NwJq281df81eeszAgXbAz5Zazk5vdrxU\/sZGQAJ3Y9dPU5ZOAnd9qg1ToG+9\/a6IsI0HE6y3tVBdfepAV2lcBNQ+GrduVDIhUA0CatvVoKdzmxEBrDf0x1vviKxXhPHebXfc3Yy3ozILASHwPwiobYsKnYnAuPETgxtuuiUibOPZgv0KQqBZEZDA3aw118DllsBdn8rBYpn8pRXbsOLeu29ffQqgqwiBBkZA7aOBK0dFEwJVIKC2XQV4OrUpEcAixO54D4u0y8KuKatThRYCIQJq2yEU2ugEBLAosPtsebnfgFx+szuh+LqkEPAiIIHbC4t2VoPA\/DcWBi9061H6bd\/+XjVZ6dwEBI4dOx5gxfqf\/eLqAD4YBw0ZFmBRBgUhIASCQO1DLBACrYmA2nZr1qvuKh6BZcvfKo33fnn1NcGjjz8ZwDfqd999F3+CjggBIdAUCKhtN0U1tWwh4fMdi0nC93aX57sF4KOCEGh2BCRwN3sNqvxCQAgIASEgBISAEBACQkAICAEhIASEgBAQAkJACAiBNkVAAnebVrxuWwgIASEgBISAEBACQkAICAEhIASEgBAQAkJACAgBIdDsCHyvo6Mj0E8YiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA7UiwNFCesSuCXw6wOHOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogDdeVAYQL355f+HOgnDMQBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAH6sUBCdwS5vVhQhwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEgabkgARuEbcpiVuvL0C6jr42igPigDggDogD4vNfUBkAACAASURBVIA4IA6IA+KAOCAOiAPigDjw3xxYvPvboBV+qs\/WatMSuCVwS+AWB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAdSOdAK4jbuQQK3BG6fKP49EaO1iKH6VH2KA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOMAckcIsPzIdG2faJ1Xn2SeDWVz59\/RIHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBxoYQ5I4JbA3SiiNpcjj5jtO0cCdwt3XkwYbasjEwfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXGgPTkggbs9673R27tPrM6zTwK3I3Cf\/+qbYOeej4MLX8uvj9sIhI06Q5cT+i9OiAPigDggDogD4oA4IA6IA+KAOCAOiAONzwEJ3I1fR+3YjvKI2b5zWkLgnjxtZvCDf\/5R6Tdw2MjcU2oOHDke\/PsVPw3+7u+\/H1zxkyuDo6c\/zZ1Xq5GyHtg8+sQzYT2uePtdYe98fGk1TnXW\/Yhneqh3Fvd0XXFPHBAHxAFxQBwQB8QBcUAcEAc6iwMSuMW9zuJe0nV9YnWefWUC99BRY0sCrwnG6zZvyy003nLH3SXBEoIx8jv35aXceSWBYWXGdbr27J37GkNGjCndO\/LBb+LUGbnzSipvMx6rBzY33XJHiP+CN5c3PPa33XlvKMgvXr6q6vIuW7W29IHF2t7oCZOrzrMZuVbrMjcbz2qNh\/LXIEccEAfEAXFAHBAHxAFxQBwQB8SB1ueABO7Wr+NmbMd5xGzfOWUC94t9B4QiI0ReWDvmAWj7ro8i+SCvT7\/4KldeaddPE7jPXLgY9OrTP+jZu18pxn9fnjPmzI+UeeGyFd50vnNbfV89sGk24fFX\/\/WbkC+z5y\/KzZWzn38Z9Hipb5iXfWDpP3h47jxbnY\/V3F8az3Z+tK\/UV6C\/GDtxiupAMwnEAXFAHBAHxAFxQBwQB8QBcUAcEAeangMSuCVwV6Ol1Opcn1idZ1+qwA2x7fDJMxU35Bd6vFQm2HWWwI3ym2iYdD8QviFq\/eTKq4I+\/QfXzOK8VqSoZb71wCZNeKzl\/eXJuwiBG\/7er\/rPayP8NK5K4K7NwyeNZ5g9YHWAviAPN3RObepOuApXcUAcEAfEAXFAHBAHxAFxQBwQB\/JxQAJ3PtzEt9rilkfM9p2TSeAeOW5iRSLPyc8uhAKRCUWIG13gFmlrS9o0fNOEx7Tz6328WoF7yvRZZe3kH\/7xB+E+Cdy14WMazyRw1wb3erdPXU\/1KA6IA+KAOCAOiAPigDggDogD4sBlDkjgvoyFeNE4WPjE6jz7MgncWHjx\/FffZBa5p8yYHYp0ErgbhzSN3oDThMdGK381AjfEa24b8Lu9cu36kksg2y+BuzZtJ41nErhrg3ujtV+VR\/UsDogD4oA4IA6IA+KAOCAOiAPtxAEJ3OJ7I\/I9j5jtOyeTwA3B7a0172QWuH9+1a8j4p0Jdq4F9+59B4LNOz4o\/U6f\/yIx\/48OfBKmPXXu80jaOB\/cezoOlc5B2a0Mdi923Q\/3HwzzuvD1t8HW93eVztn2wYfhfiMAfPPaebxg5ocfdwTwUQ1Ldyw2iPuyc7LEx8+eC7DAICx6h4wcE7z62pxgxdvvBmmY4Dwrz75PjoTXPHLyTDB\/8bJgxJgJpfJ0HDkRHrPyoPwbt+0olRvpcP0jp86WpbP0adhYOsSo5x279wavL1wSDBs9Lpi7YHEAVxyMGae37TTh0dJVGt98212lxRuv+MmVqWWoJO9qBO4nnnk+5OTtd98fugGCz3vjal6BO5YXp86W2vG4yVNLvqXhY\/7g0XJuJGEAjixduaa0AOvw0eOD2fMXBpve2xnLG8urFm2naJ6hzaM9oQ1aHfyff\/2\/YRvDsUMnTpfulfsu22f36ovRBn1t1ZdW+4oZdMS1A\/Srq9\/dEIwYOzGYPvv1AAspY9ZRJbhv27m71L+hz4ef9nmLlgbgeCV5KG0x9Swc2w\/HWrVtjFHe3rC5NC7C2AULjWNMV+lzUpxsP07Wus73Hz4WjiGOnv40fNZg\/LFw6VvhWBvPprSxNpcVbSnP+wfnoW3xXRzIzwG17fzYiXf5sZu37UIwZtHO0m\/skl1BmuC9aNc3YXqct2DnV95zpqw6GPSetDx4os+k0q\/3xGXBK6s6vGnjrjlny2fB0Dmbgqf6TQ2eGTCttD1r4xlvHuJAfg40InY+sTrPvkSBG+KOCT133vtAOKBKAmTdlu3hObBKtfMRuwI3C4Sr3tmQmP\/vb7wlzAsvHFyGOIGbBVMuB2\/\/5vobw7xcX918DWzz\/UDAhUDI+zjf+x56LPjk+Kkwbzcv\/McgtUvXnuF98fnYhrsKLI4ZJ3RDnLFzcD0MVH\/3h5vDfXYMMcRIs8Jfu2FLEPcRAmKw73pp2OB+MKhmcZCvb9vdevUOy+FiwvUFK1r3eN7\/mIFg13c5mDdPnMf8rXSRSRO4ITbj44GVowiB2+UF7pnbiGFh8TPPdw9OnD0flsHKwjG45fOrb3nAjziEbz6Ht7mdVNt2asUzu5ek2D463HLH3SGnHn+6S+x9Gwb4iGH5os3bfsW1ezC77QDrCHA9WH0gRl87b9GbqfWyaNnKWJ\/5yOfa391QEs9Vr7WrV2ErbItu2xgb4YMXP6e4f8A2xlgwmhD\/xL\/O4ACPDSe9OiOAYQ3WCHF5iv8Yj8FYJ6mc1b5\/JOWtY2oj4kB2DqhtZ8dKvCoOq5HzL+t1eG5MXf2JV0A2EXr0wvcjz5vp7xyLpJ+0fF\/wXzc9EEnDz6drbrwvQBrLzxe\/+vbh4Ke\/vjE2j1\/+5rZg2jtHI3mIE8VxohGwzCNm+85JFLgHDR8VIdnHh44mDpgAzONPPRueM2DIiHAbJHfFRRYIm03gfmX6a5F740Zs2\/hA4BOLgRMsQGFRbGmTYgxWDxw5XoY9v+Td88AjwW133puYH0ROiNtJ18KxP\/zx9gBiEBM9TeDGca7PpGvcdd9DZfnjWu0kcMNKH5Y2jDG2eaBjYqqbJu0\/8+LeBx8JIMAm1QeOgWOoQ1\/esC6I+yDi5jv+lVe9ebBwUE3bqSXP3Hvx\/bc6geW6HYc46vZtjOOxM5+FaXHOOxu3eDHic7Rd\/QOb2wH6R\/yszuJiCAdx2LvPs7g8sH\/ilOmx+cTlr\/3V17kwbA8Mi2zbmBEY9+HLbePo69V\/twfHGq0vcceGbLjh8tT++2ai4r6KeP9oNHxUHrXLZuWA2ra42xnchUX2\/\/7XywaAf+ozKSIcuwL0vV0Ghe9QV\/32jkjaobM3Bt\/\/X5fXELNnkBsjzfC5WyLn2nUGzXw3cx5DZm0I8+gM7HTN2rVZn1idZ1+iwI2X\/SeffSEktIk7cRUL1xhMZghj\/N8VgVgQrYXAvWLtutIU9FHjJ0XKgf94QcKPXa+kibgs0tl9\/fq66wPgAuu\/0RMml4nWA4aOKBM6gIMrGELs7vFS39LU2Oe69yq51LBrIIYFu1lgG\/78kmdpUcaevfsFs+YtCPr0H1yyTLRjiPGChhjiO6zDIdQNHDayrNw4366DOA2bPgMGRzCGWI1831iyLJg6c3ap\/FyOwcNHR\/LHNdpJ4GZsedsd6PCxrNs+XgB7cAx1juMQvV0+QwB0rwHOgeNcd8Z5CNUPP\/5kyClL4xMA3GshreVTSdupJc9mzp1fwuap57qG94v2ArzsZy+M+HBl94s4yXodbcnS4qWULfZdvPW\/uIemrx2gPtHG0CfBrdTTz3UL6wZ1hOM+V01ws2R1aDFEsQlTppX6fcx8sf0Www2K6rO4+hSWwtI4UGTbdmfR4VmF5yM+QvcbNKzswz36iCxuqaysisXbIjjAY0N7xmA80bVn7wAzCCdPmxm4zyG8N7jXLur9w81X\/8VzcSAfB9S28+EmvlWHG4TlR3qMDt9drvjFb0LR2ERni10xvMfoN8K0sOR2xe1f\/f7u4Mm+rwQQzbFtzyzESDt709nwfFxj9qYzkTyQ5tmBM4IR87YFfV9ZGdz9VL\/g\/\/vBZa8QP\/75teH54kF1PGg0\/PKI2b5zUgVu+Nc1YmLg\/9nFr8sGTAYOBF5La2KZ\/Udcb4HbyuWKs\/hvxzh20\/ExbLsiHcR\/V6yC8MVuQnCOmw98OzIuEO3cNPhvbiws7YzZ8yLp3Jc8iNauv234hXXLDaHTfUGDOxW2KMegmcuUhA3cV+Clz8oJgZ3PtW3kaWlgJW77LZbAXbwFt+GNjx2Gs8Voy8xVpMVCl3YcMXyQWh6IwV0+ju29HYcjHMO0WbdduBzM03bqxbOsi0zyx78kNyVsHYiPPi5++l+bh7PbP6KPsg8UjPmbK1ZHOA5hi4\/DfQ\/3b9jGx1tOg+33P9wbyQfiQyW+UN389L82vBCuzY9rUW0b\/vf5+YbnoW+Mi49hnA4zFcWj5udRM9WhK4Jh1h3GRHwPGHe92HdAhKuw1uY0Rb1\/cJ7aVlsQB\/JzQG07P3biXX7sICxPXXMo8ryIc1MCn9s8Bnp92\/lQYP7NrdHZsfCdbcK4xf2mroqcf+ujvSJpuo2cFzk+Y93xyHHkM2Le1kgaswQXB\/JzoBGx84nVefalCty4eba0xuKFPkBg6YkXemsAJpTZf8StJHDD12qceOG+NLkLmDFOsLhwLbMN37MXLkawZ3\/hSOO+5MUt9gerXa6HON988Adt6WBda+VAnCRwY4ovLMHxw8KScfdz8NjJMH9c5+znX0auIYG7NgI3cI3jKj6IsPjsCrU80wCWzcwJ3t6wdUekbrGgIh\/na+RtO\/XiWVaBe836TeE9Q\/R0+zfcv+uehBe1ZXy0XfwD2u0fsZBWHM5s+fZS34GRdLCOs34R8Zp1GyPHOU8sNslp02Ym8bnaLp4DwrQ1MS2qbfMMDjyjMEaJ4wxm1nHbdsd1cedpf2tysN716opgrpGKlQe85A+y7nOvqPcPu55i8VscqI4DatvV4Sf+5cPPxOcrr728xl2cm5L7ulyepf+He58NxefXNpyKjIvYstvyt\/ipvlPCtLDQ5kUqH+4+MjyG8tg5bgxRu8eYBaWf+eJW\/eer\/0bFLY+Y7Tsnk8DN1is+y1uAtOLtd0NywhLYLDj5hcAVgFg4TxMC8iwyaZXnirP4b8c4dtPxMWyzSOdzsWHpISbyfW\/f9VF4PWzzsfd27wmP2fkc40MBp+cXMH7Jw4DWMOfzsY2PEpYH0sUJ0JhSb+lwr5xPGjacNmnb8keMRXI4rQTu2gjcsOJnnN1tuFmwemF+wPLH9iN2LYHcfNiViWupXETbca+X9J\/LXSnPsgrcaEe8EK\/PTQn76nY\/UCWVX8eqf2Bz\/wg+uM8fxhj9uXEGfuv5GP7HHeN0to16tvTuTBhLo7j6+hWG7YthEW0b\/TcLgZitlMQp1y0V3K8lpdex9uVnLeqeRbC49zC7Lo7bM4jXgyjy\/cOupVg8Fweq44DadnX4iX\/58DPxmK2n49yUsK\/uwa+tDwXoF4bNCZ81cCFiefriedsuhGnxfILfbkv34vioG0i4JrFjabHqP1\/9NypuPrE6z75MAjcWHOQXgZ17Pi4b2PMCXrAENuBskIXYFRiaWeBm3912rxyz8AXrVju2cOlbkQbumw5raRG7Vs+wDrfj\/JKHBSZtvxtDeLN6SBLZduy+PMW+WoEbIj98ssNiFda8sHpcuGxFWA6Up1Lh0b0v\/t+lW8\/SQlFwB+H+7N4Rw1LTPY7\/4G+clTNfh7eZv7Dy5GN5t3mgk+bzPu4azAvcc9p9vb1hc6RezDJo0bKVkf14OQJH4n4scLuW4Cxw5207vvutBc+yCtwoDy886N4zjt957+UVpV3XF7770b7iHtTcDtwZKS7O\/BH3ljvujrRlnsWQ9GHT8mRLT\/Q3tl9xcXUrLNsbyyLatrtmDBbgTuMVu3HzuetKO1\/H25u31dQ\/jw3j3Bpa\/hiL2Lh3xNiJIa+LfP+waykWp8WB6jigtl0dfuJfPvxMOH5967nweYHnhuumhN2TQMRe+MGlUHy+88mXw3NxbMLSPYk\/ey4hhrBuZZi29kiYj6W57paHgxfHLwlmrjsRprP0HKv+89V\/o+KWR8z2nZNJ4AYIvV6+7OYCiyEyMO5ikkdPfxoeN6IibiWBGyIfY+Bu84sQC9xYCMYwgXDinuf7zx8XMEC1NPySd99Dj4X77bjF9RK4Dxw5HgwZMSZg6xG7V19cpMDN0y5918qyz+Wn4RcXN4PAjTLGld\/2uy\/6xm0sIpkFN18aV9hjgdvyt+u7cVzbsXS15lklAjdbuaOdMofgH5OxgbsSuwfFtX8gZ+0fURdY6NTqyhW44\/rfuDrM08fH5aX9teeJMG4+jIto267PfDwH07jwwCN\/CvuJbr2i65SknavjzcezRqozFsEmvZo82wAGH\/Y8Y4E7z7Op0udfI2GmsqjNNQMH1LbF087gKYvEN9zzdPjMcN2U3P\/ckPAYtvm8393+eHjMnjlZ48deHBfJi63B3Tx++OMrg3ueGVASz\/n62O4M7HTN2rVZn1idZ19mgdsVcjBd0yp4wNARIcFdP71MUhZ\/cC4LhM3moiSvSDd89PgQK1dIMTzdmC0IYWlox7O+5NVD4Eb98UCY6z1uWwJ3eQfBA50iLLjvuu+hkC\/GGzeGaxuuo3VbtpfOYa7y8Szb7kyBogTuevCsEoEbWMKnuGHCbkrYPQmEERd3\/S\/nf5GYZO0fcc0kgdvqFvH6re+l1iPPfMBMniLvSXnVljPCtznwLaJt4znHbTvOxRtzAsYddo5vxg6n1XZzcKlZ6onHhnkFbh7TVfv+0Sy4qZxqh43OAbVtcbQzOMpC8aCZ5Gb4F7+JCM\/snmTi8r2RY1dff1c4JrKxUdb4gReGRfJCefq9ujpIy\/Onv74xmLn+ZHhuZ2Cna9auzeYRs33nZBa4UZm8ENeM2fNKL+5wscHilbu4HBNdAvefA7gpMExgdZzWSOAn0tIjfnPF6vCcrC95tRa4UedcRmzD5Ue\/QcMCWIzMXbA4wEI37gtlkQL3Rwc+iXWdwWVDWfFxwv353O6k1Q1\/oGlUFyU\/ufKqkC9x9\/PxoaOR+tu170DpnKkzZ0f2QwRM+kHQxQ9p4PaEr8d9RN6PQ\/XiWaUC95QZl3Fi0YPdk7Dwzbhou3YPyaz9I+ogSeBm7oLfaXU2esLksN1c9Z\/XpqZPy0\/Ha8cRYduc2BbRttloA2MEPAfT+AB3ZjaewOLdael1vDn51Yj1VoQIVuT7RyNipDKpvTUjB9S2xdvO4C0L3HA7AhcjNr4xNyXsnsTnn\/v3dz4ZnoPz4VIk6dd15Ovh8UnL94UiNZcF23BZ8uzAGQEsxLlcVj5YdGOBS6TtDOx0zdq1WZ9YnWdfRQL34uWrQiKb6wMWg3x+To2MiJMEbli9JRGGXVCgHJx26KixYbl8i3q5CyQWschkXpEOAjVjcurc55F74fvC9p6OQ5H0m7a\/H6bP+pJXa4F70PBRYRlRT3Ah4d4H\/uNjCN97kQK373q2j7njctDS5ImbQeAG3mcvXPTWh90zfGJzvZiLIW7vOJ7my9vy88UsEuZtO\/XiGfdpWT4QAC\/Dz9yUsHsS3Hs12Pnw1L70h2vW\/hFYJgncEKmtftN8nyIv9n+atDaC6jC9DoWRMPJxoIi2zX002nfa2hAoB6+tMmr8pMTnqq\/c2ic+5+VAESJYke8fee9D56kNiANRDqhtR\/EQP+qDhysq39dlcPiuY25K2D3JMwOmlQnSdz\/VLzwHltdunkX8X7Trm2D0gh3Bb297LLwWxmzPD50lgftSfbhSzzaZR8z2nVORwA2Rhgf4m97bGdx0yx0h4WbNW1A24DdhALErLuLl347zSt8ukFjk0tIhrlbgxsKN7jXw3xXC3TRFiHT7Pok60l+zfpO3LHbt1xcuidz7iU\/Ph+mzvuTVWuBmFw3sQsXuwWLcK9ejBO7yjokHOkW4KAHeaYtn8UKJ7FJhb8fhSH1t++DDkHtWp1njItpOvXjGAjf8gWe5R\/bNivbG7klk6VfO8yyYVpsma\/+I6yQJ3HC7Zf3W72+8JZEPmHGDjyKWPm8brvbedX7ncE641wf3oto2f\/weOGxkYtvuOHIibNdo3yvXrk9MLy7UhwvtgjOPDfO6KCny\/aNdcNd9qh3XmgNq2+JYrTnmy98Vnycs2xuOccxam92TvLbhdJmA3WP0G+E53\/9fPwgW7bq8AKWbf7X\/IXT\/+OeXDY5gPY48ffemfc3bpnxidZ59FQncIAxbS8PPrr3Iw3LRZylqxxG7AjdcWNjxJH9w7DcO6SsVuI+cOhteB+dv27nb2yDqIXADQxbq8IIFSyJfY4QlNAuDcPvB6bK+5NVa4GYf4TPnXvYRzmWFf8vHn3o2Ug8SuMs7IB7o5BXHmBfgexLHXLcf3V7sE+EYW6mjveNjE9crb\/fpPzhAO8YPbmn4GPM4rwV3vXi2cNmKkKfo1\/g+4ra5jcGCl92TxPU3cXlpf3m7yIMJt4OkRXiRd5LA7c5wmDg1foEvtFl7piU9a\/Lcj84phhfCsflxLKptvzzw8uJJaK94Hvr4AeMOfNyyto3ngmblND+PfHXdqPt4bJhX4Ma9FfX+0ag4qVxql83GAbVtcbYzOOsTnCFs2zjnpYlLw+1r\/\/hQmbiN82dviuprsOj25Yt987ZdKLkc+dXv7w7wg6BuaW99pGcAwfqGu58Khs3dHO634xYjnZXvulseLqXrDOx0zdq12Txitu+cigVuWD8buTh+qe9A74sBp3EFbraURDpXFAOBsI\/zwHalAre7iN4zz3cPeJFMI2q9BG73nuDX0dxCWFmAMw9Ecd+r390QwTjrSx6Lb+7if3Y9xBAeDWsIknwsCRtYqNp5sF48dOJ05Fy4JuFp+5ZWAnd5B8EDnaIEbuANjuFDD9cpfJDyjAyke2\/3nkgatkTGcXxk4VkEyA9tCe3f6hWxK+oWIXDXi2eYmcL3gvUGYJnL2LnbEDv4Hu18iPJuWv0v530tMMnaP+LaSQI3+i+2ykbdYk0B5gTq320rv\/vDzar7Fpw+VwuuKs\/K+oSi2vaH+w9G+no8D\/Fc5PqAGzm4vrM+HTFmPXEabVdWf8Krcrx4bFiNwF3U+4fqsPI6FGbCzMcBtW3xwseLWu8z0ZjjZwdOj4x1bNzTZ\/LyWNH5jw9enuWK9I+\/NCFYsPOrSPrp7xwridqWH\/xqz9\/xRZgGvrbtGCzBp645FB6z8sEfOI5Zuoe6jiilqTVOyr++7dMnVufZV7HAjYp+6LEnQoIZ0bDIn48EdhyxK3AfPHoigCUMp\/nDH28PsFJ9l649A7Ye5TSVCtwoly8vWFnytNQkERd5sICV1wrVMGILT7s3CNoQgtnnqx17+rluZfhmfcmrtcC9Yu26SB2izBB3YNGL+3Tr2O6plQRu3BP4keW39f1dZXVpvOCBThECt4s9OIZrwPWG1YPFPXv385YLFtmWxmLkA9cN9z74SKRd4Djyt\/uxuIi2Uy+eHTvzWdn9ovywAsZHObsnN2YB3nDCgoNuOv2vz8Mya\/+I+kgSuHEcax9YnVqMtgX+46OP286Qxu3fVO\/1qXfh3Po4F9m2x06aUta28XzEc4xd8Fm7x8cudywrzrU+5zq7jnlsWI3Ajfso4v2js\/HQ9dXmWoUDatvicmdw2YRjjmdtPFM2HoKo\/MaOi2WCs50HK27fQpD\/+Yd7A4jfiG38ZHHXEXMj+Q2fu6UsDay8H+s1Lniiz6TghnuejhxHmWauPymBuwWNiPKI2b5zcgnc8OlrJEWctJAWp\/O9FGzYuiOSF6e3bVhc8\/TQPAL3irff9V6HLZrrKXCf\/OxCcNd9D3nLZPdt8RPPPO99ocr6kldrgRsW8gOGjki9l3mLlkaEIFcA4pfJJCGx0gcB+9n0cbDS\/Cy976OJ1VlSvG7ztljRkwc6RQjcEGWHjByTWjcPP\/5kaRFQuzeOYbHN\/vKT7g2Cn2\/qdhECdz151nfQUC9mSXUCq3UXG\/htZSy1Xb+BbNb+EXWSJnAjDfpRn5Dt1jnSJLVxcaB+HBDWrYl1kW0bz5XBw0eX9d1uu8Z\/PPPjFtEW11qTa41Srzw2rFbgLuL9o1FwUTnU7pqdA2rb4nBncNgEajeG6w8e\/9z6aK+IGO2mx\/\/JK\/YH7K+bz3e3n+z7ijc\/7HfT+v7\/209+HUxavi\/MozOw0zVr12Z9YnWefWUCN\/sknDJjdqw4w1O2sTJ3XGWzIICp3r50q97ZUPLby2lBavzHQA6CGYufEBo4nxFjJ4aNIs4KFekhOkAs5gbD08jhJoSP8TWwze4cdu75OFIGNy3jE+fXEVPc4bM6TihF2eYvXhZ7HZxr5YVA6ZbB\/rMP2aRF0nBPlh8vNoh80rBBGkzR91mfw9r3nY1bSuVjoROLGFoZEbOlsPsRg9NVuo3FoCCYL1q2MsDLbKXnx6XHfRlelcT4qBOXJ\/Nz0PBRsenizsd+38s\/PvD46gaWaq++NifibsGXN7iKfH154N6BBdw2+M7FviLbTj14hj7njSXLIpzEfaZNTed2Dz7H4aH9tXs4GrZZ+0ekZ3dZcOdjebgxXBq80OMlb7vH8wpW\/BLAal+3br3of3thXou2\/faGzbFGB\/hIDkvvpDUoxMH24mC965vHhknvZigXu9QZO3GK93lW7ftHve9f11P7alUOqG2L253BbZ9QjX3sexvvvSPfeC8Uk+POwX5Ycj\/cfaTXmhv5wA0J+9325TVh6Z6SKxN2RYJz8YOwfc8zA4L57112bYI8OgM7XbN2bTaPmO07p0zg7sxKw4ALrj8gAH586Giq6Ja3rGc\/\/zKAtfaRk2e81qZ5863mPJQFFqAQgrd98GGZT+5q8q73ufDJDFF\/47YdTX0f9catqOv5BG7LGx8q4G5h\/db3SkIc2pwdyxqj7aB+8cFo174DAdpT1nOLTFcvnsEHK\/yX476TPpAAS\/6AhMhc\/wAAIABJREFU41tToMj7V161e8CmYYuZIHDLhXaEdrDv4OGGeZaklV3HO483wr7xsYd1686P9pXaNZ6VcKWX1O+rThu\/TlVHyXXUSu8fquvkuhY+7YWP2nZ71Xcl7dsnMGPfC8PmhEY8P\/zxlZnEbc5r4QeXgmnvHA1GzNtWEsdffftwgH2cJsv2zHUnglELdgRjl+xKdJFSyT0rbeO3B59YnWdfQwncIl7jE0911Ph1lCRwq\/5qV3+YyWJfmmHNK2u\/2mEtHgtbcUAcEAfEAXFAHBAHxAFxQBwQByrjQJzIfMUvfhO+y8L\/dVy6Rtmveq+s3hsdrzxitu8cCdwt6KC90cmr8tW2M5LAXVt8ffzFwqHshqXfoGGdYtXuK5v21Z8PwlyYiwPigDggDogD4oA4IA6IA+JAo3HAFajnbjkXPPB8dP0puB1x0zXa\/0bDVeWprq37xOo8+yRwS+CWENdiHJDAXV3nmvXhhAUksTYAC9uw4Ib19vGz59SuWqxdZeWF0tWn\/Qln4SwOiAPigDggDogD4oA4IA5UxgETqh\/rNS74+X\/dHFpt20xk7Lc0jRyr3iur90bHK4+Y7TtHArdEGAlxLcYBCdz16ex5UVYbEEDshg\/9Rn+AqHz14YhwFs7igDggDogD4oA4IA6IA+KAONAoHDDR+vd3Plkmbt\/1VN9cfrMtz3rGjYKnylFM2\/aJ1Xn2SeBuMXFTDayYBtbMOGLhu6ef61b6vfraHImtNWrjezsOB\/9+xU+Dn1x5VXD73fcHfQYMDg4eOym8a4R3M7dJlV39sjggDogD4oA4IA6IA+KAOCAOdDYHTIS++6l+ARaThO\/tmx94PnhpwptNYblt5e9sHHX9YttyHjHbd44EbokxEuTEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQByoKwd8YnWefRK4Rdy6Eldfuor90iU8hac4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+JAM3Igj5jtO+d7HR0dgX7CQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXGgXhzwidV59knglsCvDxzigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA7UlQN5xGzfOd\/z7dQ+ISAEhIAQEAJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAo2OgATuRq8hlU8ICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBLwISOD2wqKdQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASHQ6AhI4G70GlL5hIAQEAJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAkLAi4AEbi8s2ikEhIAQEAJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAo2OgATuRq8hlU8ICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBLwISOD2wqKdQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASHQ6AhI4G70GlL5hIAQEAJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAkLAi0Bmgfsvf\/lLcOjQ4WDTps3BvPkLgtlzXg\/eeXddsP9AR\/DNN994M9dOIdDOCDz5dJfgn374o9Jv\/YaN7QyF7l0ICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAjUBIFUgfv8hQvBxEmvBP\/yb1cEf\/f33\/f+\/uEffxD0GzAoOHL0qLeQf\/7zn0OhD4LfWytWetMl7bz19rvCPIaPGBUm3bJ1W7jfxERf\/Murrwnuvu+BYNbsucGFC5+H5zfDxl333B\/e4+o1b1ddZHyY+PF\/\/CzMc\/IrU6vOUxmUIwDOWptZsWJVeQLtEQJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAkKgKgQSBW6IxxCvTaTLEsOy2xcgLtv5997\/kC9J7L7Dh4+E5yKPjRs3hWnXrn03csyukRRDAD\/Q0RHm0egb11z72\/AeFy95M3dxv\/3226BP3\/5hXobRsOEjc+epE+MRSBO4wcGX+w0o\/aZMnRafkY4IASEgBISAEBACQkAICAEhIASEgBAQAkJACAgBIeBFIFbgXrhocZkQCkEUol3X7j2DXi\/1CWBZ7BPAYc3thmXL34rkV4kV9Zix48NzIU7DXYoFV+BGefhnIq4bI82uXbstm4aOixC4Ow4eDH51zXUhjoyHBO7aVH+awA2rbquHn\/3i6toUQrkKASEgBISAEBACQkAICAEhIASEgBAQAkJACAiBFkbAK3DDr7YJbxbD0vT0mTNlUHz11VfBlFenlaWHoM0BfrpZDJ8zdx4fTtyG+GflGDx0eCQtC9xwu+ELly5dCvbvPxD06PVSmI\/ld+7cOd8pDbWvWoEbblnsfi3mupDAXZvqlsBdG1yVqxAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEDAEygRuWEf\/9vobI4LoGwsWWfrY+P2dH0QEbFhau1ba3Xu8GOZ74823xubFB\/bs3RueA3HWdS2SReDm\/BYtXhLJb9LkKXy4IberEbghXpuojRj1AhcvWADR9kvgrk21S+CuDa7KVQgIASEgBISAEBACQkAICAEhIASEgBAQAkJACBgCZQL322vfCYVPCKC8oKOdFBdjAUQTTRGPGjM2kvS9He9Hjp86fTpy3Pdn4OCh4TkQet1QqcCN82+46ZYwz\/sffMTNMvf\/2+64u7R44\/\/76S8iblRyZ\/g\/J1YjcHd5rmt4r\/CDbhbrRQjcX3zxRfDhhx+VfidOnAxvEwuTrlu\/IZg6bXoA39IrV60Ozpw5Gx7PsoE8ULczZs4Kxk2YFODDxO7dH6aeig8gViZ2ZQM\/7vPfWFhaMBU8PXTocGpelgCLpGIGwJtLlwfjxk8Mlry5LIDLF87f0nIcJ3Dv3bevVEZ2vYNFXK3ciD\/77LNSViin7bd9fA13G7MsLD3XiZtO\/4VAKyNQq3aDPgh9Efok9E14XqKvqiTguYfzxk+cVOqTkOfXX1+qJAulFQJtjUDc2APtaNPmLcGESZODefPfCDDmxCzDrAHP9K3btpfaJZ71aOMYL1Q6fsl6PaUTAlkROHXqVDi2Y+MhjAtXrFwdjk1hFJQ2NuVroi1h4XnM9MSYdO7r84L1GzbqmcQgaVsI1BABte0agqusYxH46uuvw2cKnhtp4W9\/+1uYHjrDd9995z3lyNGjAVywTn5laun31oqVwZEjR7xp43biuYSxGHSk6TNeK22fP38+Lrn2C4EyBMoE7me6PB8KohDd4N6jkgC\/3CZy\/\/LqayKnonHAjYgdT1tY769\/\/WuAMlh6vGy4IY\/APWjIsDBP+KUuKvC9QRQtKhQhcKOTAP4WihC48QJpdfPwo38KcM9jx00I99kxi+G7\/eLFi1YEb4xODf7d7Rw3Rn2hzuMCLNTtHIjSENd5nx1DjDJ\/+ul\/C8m+\/PCSwCI0n2vbL\/XuG\/syESdw27lJsVnV33HXveH9oG2mBV7MFTMmFIRAOyJQdLtBnxO3hgHacfeeL6b2bZu3bI08z9z2\/2Lvlyt+3rZj3eqehYA79sA4lZ993Lbgjm3psuWJoOFZD1E8bqyA\/DBeOHrsWGI+OigEaoUAj9lnvjYrgNEGu29kzuNZ9dGeZMECIjnPquXzsY1207f\/QAndtapQ5SsE\/gcBtW1RoTMQgOcF7vfTxjcwxuH0rpEqDP\/uvf+hSBpOjzEa0iSF48dPBNffcFNsHn+89Y4AH4QUhEAaAhGBGwIl+2YeMXJ02vllx10rbtdSFlbdRnifRTZnuH37e2FanOP7epNH4MZ9ZS0DlydtuxEFblhj+L7M8QPVxNS0+3OP80vmQ488FvDHEcPXjTHwNityNz90Wvgo4p7j+\/\/qtBnu6aX\/\/IL62uw5qXnhA4rPehJl5A8LvjLYPswC8H0IKkLgZpc6aJtJH04+\/\/yLyP2i\/SgIgXZEoMh2gw+x1taTYvRdvnUqgP\/ESa9kygOChTtobMf60z0LgSQEeOzx4MOPBvgltU0cgyjoC7BiihPH3TzxDNZz1Yei9tUaAXfMzu8bLk\/tP2YL+gLeyzDT1NIlxRiz65nkQ1H7hEAxCKhtF4OjcqkMAdfoNM1lL3tUgL7BYcvWbRH9MO6ZkjSG2rBxU+Y8MFNPQQgkIRARuPFlhUmJKQiVBrwscB5w68ABX4j4+CefHOLDkW1eFDLOlUgegRtirJXh0cefjFyzmj884EwSIiu9Bguti5e8Wenp3vTuA9WbKGUnv2QanogxcIblB45D9GbRGcfxMuoGWFBd99vfh\/WCdPgP8R1C9Z+efLqs4\/O9aLrX4nxgxYUpM+7A3vchh638kQc68xGjxgSYaoMFUuFDHvvt57rjwf3FCdzwaQ9snu\/aPTwfnT722c9eTCC+2zUQJ1mvL1y0OEwLLrLFvou3\/guBVkagqHbjuuxCO0VfhOncQ4eNKOuz0Obddoc1D7gNQzCAm6Ndu3YHaLNdnu8WOY6+U0EICIF4BPCc5DaFbbRNjGvwfIY7she69YikwXGfOyHXihVjCIxbYByANs7jL7tOFndh8aXXESFQOQI8ZjfuY5yHmT94L5g5a3YAN4l2DLFvrSO8m7iGJBgT9+nbv9Ru8N7F7zKWD2bUKggBIVA8AmrbxWOqHLMhMHrMuPCZkWR06orheHexgA+gGF\/xswezaGEcBNGcZ9QiDdKymy3kg7EZ54FtGCXseH9nyU0c3otY38F7lIIQSEIgInDD3w0TtBI\/bnwRfiGAaww3sA9siIa+AN8+THa4mvCFSgVuiAp8jxA8iwo8KGxXgRtf+NyAuuQ6B\/4QfTjA\/QzXC\/xfuuHYseORDg7Wjq6YxB0g8oN45KaB+MXlwTkc4CaFufdyvwF8ONzGi4WVGdNm3BAncFs6+Kiy83EvcYEFsCQ3JWyFFteu4q6h\/UKg1RCott2gn2AXWdj2+eIdMHBw2I7RnpctfysCJc9swQLOvmcD3CNYX4C+Bx+KFYSAEPAj4ArcaDP2UZjPcD9QQbTm4K4Lg3GBz68kBHNrn4iffvY5zkbbQqDmCLgiGF7wMVblgLFu\/wHR55E7ixZja+YyjDl8gdfvQfp58xf4kmmfEBACVSKgtl0lgDo9NwLQVfh5EOemBAavnI7XNmGjUaSBlugGdyyGD6kc3DGW713LHa\/5jBw5T223NwIRgRsWrkZgV\/SrBCb2wz146PCyU\/nlBJYDvoBFT6wseHnxiQI4L6vADbEe09ZZAEW+7gDRV5as+9pd4IagG\/dRBFP3GXtXqGWLElg2x4WdH+wKeQF+uLMM+BoQk+LK43aU3FlDXAJX8MMMhLg8zp79NFKWb7\/9NlLsogRuTP1Jawuue5JKF3SIFFx\/hEALIFBtu8HCXdzu9h\/o8KICyzZ2kYAPTRx4tkfchyfkgetZvxP3vON8tS0E2hUBHkOijWK8GBfYqhUfoziwlTfGDnimxwWeUYhr8pgh7hztFwJFIeCKYHGzCMBLvNvYs8ttG\/yegrYRN7795ptvIrMX4BdVQQgIgeIRUNsuHlPlmB0BfkeJc1PCs9r5Az+eQ\/asQcyW3W4Jprx62d0jnlFsTDBy9GX3xb6ZR5YXRG17T5IvbkNFsQ+BiMDNPouTLEp9GfG+J556NiS8b6E7LDTIDcIVKZEXd\/iwlI0LLHAjT4ia7s91SWHXxpS+IgMPHIsUKNgivpFdlBzo8AtAhvG06TPDekfnZgNrWJhYnSB2LU7sfIvZlYkrGLHA7XMbYnng2nzNffs+tkMVxZwHFv3hUJTA7S626nNTgg7fyqIXEa4FbbcrAtW2G36OYTsprFu\/IWx\/aIfsk59dIOC56rNMSMpbx4SAEIgi4ArcSeMtXvcFlkYW0D+wEOhbxNzSInbdHsFdmYIQqBcC\/E7kmzHI5cBxGw9On\/FaeAjjXNuP+OOP94fHfBuue62kD0C+87VPCAiBdATUttMxUoraIcDW03FuSljf2rRpc1gYzIqzZwr0l6TgujCGEZIFGBNaPojhmkRBCFSDQETghl9QI1gaUZMuyq4SfC4rcC78mNq1XJ+j7ovEB7t2xV7OFbgtz6QY9+b6Bo+9gHOge88XSwsS4R7dH18TlhHucfyHpZ8Ju07WsX+bReBOuy\/XBY5ZoKxavSbkAjDEIHz\/\/gOxPxa4XUtwFrghOiUFdj8Ay\/CkgHvDIqewjMYHmc1btgZwm8N1XiuBG+UaPmJUeC33nnGcVy52p2En3ZeOCYFWRqCadsOzSmCxkNQnuQL3kaNHQ1jxUZL7CYhqeI5gQRVZgYYwaUMIZEaABW6MB5ICv7zBF6QFPM+5XW7bXj6t1tJazMYSPjdqlk6xECgaARbB4tyK2DXZLRbcX1ngWUngPlvQWRqO3VmKmPmoIASEQLEIqG0Xi6dyqwyBL7\/8MjIWct2UsHsSaCys9WDtBhtH4VjSexKOWVrEGJtZOHnyZOQYjkMvg2cJfVg1lBRXgkBE4IZox+SDhUuewIKszwc38mRBwG0w7ColzoWJlatSgRs+FiGg5w38FYuxqmQ7ydrIVy7Gs1EtuOO++vH9uC+U6OwQeOZAJTgiLT4kcGCB2\/Ln47zNL6s+gRsLJ2ABBraGSSpfLQVutnKHQMYcgpsdLhfclSgIASEQlGaDWNuotN2wdaflkTVm6wMMBllwcPOAQIfFWDSIE2OFQDYEWOB++NE\/JZ7E40kWuOFyiNsixidpAYuS2zkv9e6bllzHhUBhCLAIhsW3kgI+oBpPWeDGrFXbjw+4WQI\/ByGQKwgBIVAsAmrbxeKp3CpHgDnouimBq2F7brhuh3lMZGmyxuMmTIoUlK3B3Tyg12B9iTRdJ5Kh\/rQ1AhGB2x3w53Hb4FpfwyrcF\/DSz2IkT1W4\/8FHwsbkNgA3Lxa4YZGLlVndH\/sEx2DNXb3VzTPpvwTuy+jwSybqLC1gARzutEwEQh3z\/kq2XXcczKm0jjBJ4MYUHB7YZylTLQVuYAvXO1YOdlPC7knwsFEQAkLgMgJ52421tTwxT+FDSfCx+NVpMwK2CvflC5\/AbB1x+S60JQSEgCHAY4+8AjfGH9wG3cWo7Vocs7WSbyYVp9W2ECgSARYg8grcPNbmjz1J5eRnFlvcJZ2jY0JACGRHQG07O1ZKWRsEMKPUxkOuwSLrXq4rWl7jxM7PGg8bPrLsZqBtpOUJ3efTTz8rO1c7hAAjEBG4sagIEzNNXOaMbNtdKTVuYS6k59W+u3bvWcoC4jOXAdMWkgIL3GiEvgA\/c5yn6xLFd07cPkw9h3Dq+\/E1MKXDl6bj4MG4rGP3N4MFdxaf7e4UlE8+OVS65zlzL\/twAoawuEr62QIDSOOu1luEwM3TcaxOMVVm6LARASxg8NEGC\/e4L8i1Frhnz3k95DG\/XLN7Eha+YwmlA0KgjRDI2264L8ELSFKfhGPz5i8I05y\/cCEWYfQvY8dNCCAwWP\/CMfqaLGJb7AV0QAi0OAJFCNw8KwrtL22sCUjhZs7aajXjyBavHt1eDRAoQgRjC7m49yUuOj7MGt8R4\/1OQQgIgWIRUNsuFk\/lVjkCrtGpuSlhPcQVvnEVdjeMd6ZK3pOS9DCMx\/AhF0Z7\/C5mzyMYKJqb28rvVme0AwIRgRs3\/PgTT4UDGhCoUmsytr7G+UmBFzyBtSzcLvAALG0hFeSdReBGui7PdQ3vCw2EfaQmlbGSY\/yVi11IVJKHL20zCNzAFB9IkgK7pUF6s6RfvebtSN1Uyjm+JneEeS24eTVf1ClclfgC\/BdaZ4u41gI3f\/yx9sLuSXDv1WDnu0ftEwLNjkDedvOra64L23eej71ZcPv2229LogFfC31J0sAvS75KIwRaGYEiBG5+dqLNpa3ZATx53Q53Gm8r461763wEihDBXAMkLPqVFCBy8Bh3167dScl1TAgIgRwIqG3nAE2nFI4A1naw\/t7GN+yehBcstovjQ7+d47qMtTTVxjD4wbMHs\/XsWohhvKQgBOIQKBO4l7+1IkKgOB\/avgxdAdM3\/cA9j1\/sMfhif8cLFy12k5f9zypwu9bDadNayy6UYUe7C9xpizTxgm94UbRw7NjxCOf27ttnhyqOixC42aVB0pRMuNXhzrYagTvtY5ABwf6uwH12TyKLMkNJsRCIIpCn3XR5vlvYvmFVXcvgLuaFWS0KQkAI+BEoQuBGzjxmGzFqjP9i\/7P39JkzYX+A5\/7GjZsS0+ugECgSgSJEsBMnogt5sWtIX1nfXLo8wnksRqYgBIRAsQiobReLp3LLhwC7KTZrbR4jnTt3rixj6HSmg8DwLu\/afWUZe3ZA6GbNENbjCkIgDoEygRtWqexzDcSFO4a0AGtsFhdB9CyLZkFAt8YBvzq2jfirr75Ku2xmC25kNGDg4Ej+Ra8Izh1BO1pw4\/5hFeULPM0Fddu7T79IMrZSBw8uXYpfCHTg4KGl6f2Y4u\/6eGcO5rXgZv6\/sWBRpJz2Bx3t088+F+FTpQL3ylWrw\/PRXrIE\/qADNyXsnmTP3r1ZslAaIdB2CORpN3ju8fNo1eo1sbihr0F\/hB\/apM2kOHPmbGkKHwZiaK8QyeICPnLZ9eCvW0EICAE\/AkUJ3GydhLaHcYovoD3fePOtYfvE89rauC+99gmBohEoQgRDmdiAI2nMjpmLPJ6u9UfeovFSfkKgWRBQ226Wmmr9crIWwwavceus8QxZjKGSDO0wYwjGRvauxC6MsTAy3pOeeOrZIMlYkhdQ1jOp9flYzR2WCdzI7INdu8KBvL1wYyVun+AMQRxWrhjwW1rE8EeaJcBRPJ9n2+xjOCkfFi4wWEsKaIhcTgz0ivR12u4CN+oOPipd\/7PwdclTe5EOftE5sCUyjqPjcq1FsICp+5HCFXV5QJ5X4OYpN\/At7vp5AufBT+OqxZUK3Lt3fxjJA20m7aUZx\/ke7doQ5RWEgBDwI5Cn3eAjJYvOaGuw2nSfGTs\/2BWxBOWBoHtdPHN8Hz\/xIc3aMuLNW7b6b0R7hYAQCIoSuI8cORJpdxinYLzCAS9lL\/Z+OZIOs9EUhEA9EShKBINRCD9rMGbHuxEHGCexEI70mzZv4STaFgJCoCAE1LYLAlLZVI3AjJmzIs8He1asWLk6Nu\/nu3aPnAO9EDoJB3wwhbBt+UHHYLe2PMsWOh1m9rsBBgis4Y0YOdpNov9CIETAK3Dj6JSp00IiGiFBLHxhGTJsRABfPRD5XOESaTG12xUBwit6NnjhHrvWpk2bPSnLd1UicONs+BWyayCGQ\/yiQj0EbpQZHUOW30d74i16+YGaxZWMDyN+yeROB2XE4BjXcAUiHHu53wBfdpHOD+ksH3SeDz3yWJmwi\/zdwOJvXoGbVxO2ctxw0y0BLMdhneneq6WpVOD+\/PMvIlxEPig\/3OesWLHKvbXwPwvwdu3Jr0wNj2tDCAiBcgTytBt3IVlro+iPXujWI3BnHeG462Jp9JhxkXaONo7nKKy04e\/\/1tvvihwv+sNrORLaIwSaGwEee6S5m8MYz56TeMFyw5RXy8e6GLdgfOG2TeSDj96+j1RuvvovBIpEgMfsWHwrKbCVG8QGN\/DMP2sbeO7gnY6ngNsxPOsUhIAQqA0Catu1wVW5Vo7A+fPnw\/GS9f\/QPLBeUFzAB1LWXuy8u+65P4B+g9j2WYwxHIft298rS4Px2rjxEwPoG9xGkAfKBANZBSEQh0CswI0Tli1\/q4xwRs64GGSsNPA0COSLhpJmyWrXqFTghusLFuUhSic1XLtOlrheAncc9u7+JBcs3FkUIXDjJXPM2PGpfIGw437ZM2xhse3rCN37wn8ITD6OcCebV+DGxxl8GfRdl\/ehfbDYXanAjfvGxyLO07aT6gRW65bO4iTXB4avYiHQzgjkbTfuIrjW5nwxBmlugAWou8ix71zsQz8a5+bJzVf\/hUC7IlCkwI3n\/agxY8ueqb42ium7cYtOt2td6L7rgwCP2asVuDEbFzONfBx39+HZpQ869aljXaU9EVDbbs96b9S7xgx6fg706PVSalE\/+eRQZCYrn+9uw4DWF3yGte65+I8Z6x0HD\/qy0D4hECKQKHAj1ZGjR0s+dVjI8xEOX\/7j\/BeGV4vZwDQFzh+iX9bAC1vC6iZLgEsVvoes7lTS8sb0dVjewldrJRbsafm6UwW57EnbmDofF1hwgRVhnuB7yVy\/YaPXAgR1M\/f1eakLEEC0Rr4+KxLcK7BI8gnPHy\/SOkBYYhl+Pu7CbYqvHCiDCVksqLtTang6DkQyX8D9vrViZZn1etoUaC67zyrNdy3tEwLtjkDedoPBW9fuPcP+wvoNxHh2YXaHbwEWxhs+96\/77e+9eaBP0YrgjJa2hUA8AuzSBx\/NkwLGZNZeMVswLmzdtj1W9IPxAiy9k9YGictX+4VAEQjwmD3tWcEudeLEBCwGhnbEPletnSDGrEUYHykIASFQWwTUtmuLr3KvDAHX6DRJS+KcYckNPYl1EX6mwA0J+93mc23b1jNiTdDygLDdf8BgjcMMLMWJCKQK3HY2rNAwXRurak+c9EppygBWT8VLgetz2c5R3NoI+ARuu2N0dLt27Q7e3\/lByeIpz8q6EIwgPMMSHQJTUZb2VsasMXx\/oxzwTe\/6KsyaR5Z0aGNoS7jvpA8kEMX5AeIutJnlWkojBNoNgSLaDfog+O1Fv4ZBn+ufPwum6Avx4Rj9Gvz95ukbs1xHaYSAEKgcAVi3HujoKLVPjGGwUGzS87jyK+gMIdBYCGBaOmY4wXADLrZqOc5trDtXaYRAayOgtt3a9VuLu4MxoonKWQ1HuRx41zp16lRJM8R70okTJ70z7vkc3zbWgoDugmdTZ+k\/vnJpX3MgkFngbo7bUSnriUCSwF3PcrTbtd5e+0748MFXTlmVtRsDdL95EFC7yYOazhECQkAICAEhIASEgBAQAkKg1RHgWT1a36vVa7t0EjUTAAAgAElEQVR1708Cd+vWbc3vTAJ3zSEuuwAWDmU3LEMrcOdTlpl2CIE2QUDtpk0qWrcpBISAEBACQkAICAEhIASEQGYELl68GEBTMOttxJrNkxk+JWwwBCRwN1iFNFNxJHDXp7awgOStt98VEbbx4IH1thakq08d6CrNh4DaTfPVmUosBISAEBACQkAICAEhIASEQO0RGDd+YmnNBRa2sY39CkKgWRGQwN2sNdcA5ZbAXZ9KwGKZ7oMHVtzwlaggBISAHwG1Gz8u2isEhIAQEAJCQAgIASEgBIRAeyOAhbpdjeHlfgNy+c1ubyR1942EgATuRqqNJisLFlp7oVuP0g+LEijUBoFjx44HP\/6PnwU\/+8XVwd33PRAMGjIswOILCkJACMQjoHYTj42OCAEhIASEgBAQAkJACAgBIdC+CPTtPzDAYpLwvd3l+W7BsuVvtS8YuvOWQUACd8tUpW5ECAgBISAEhIAQEAJCQAgIASEgBISAEBACQkAICAEh0F4ISOBur\/rW3QoBISAEhIAQEAJCQAgIASEgBISAEBACQkAICAEhIARaBoHvdXR0BPoJA3FAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8SBenGgKIVdArcEfn3gEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxoK4cKEzg\/vzSnwP9hIE4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPiQL04IIFbwrw+TIgD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAONCUHJDALeI2JXHr9QVI19HXRnFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxoHE5IIFbArcEbnFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB5qSAxK4RdymJK6+mjXuVzPVjepGHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxoF4ckMAtgVsCtzggDogD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA03JAQncIm5TErdeX4B0HX1tFAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHGpcDErjrLHCf\/+qbYOeej4MLX38rYbnO2KsjatyOSHWjuhEHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBzIw4GGF7i3vr8r+ME\/\/6j0u\/m2u5paFD5w5Hjw71f8NPi7v\/9+cMVPrgyOnv60qe8nD+F0jjoqcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHCiKAzUTuIeOGhsK0yZQZ4nveeCRiOi7bvO2kiAMUfgnV14VOVYUCPXKZ8iIMeG94H4mTp3RUPfDdfa7P9wcfHbx68zle2vNO2F933bnvZnPqxf2uo46TXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxoPU4UDOB+8W+AyJiLgTdLL\/fXH9jRBxtBoH7zIWLQa8+\/YOevfuVYvz3NZYZc+ZHMFi4bIU3ne\/ceuxz66z\/4OGZy7fgzeXhvf3qv36T+bxK7ysr1pXmq\/St17mpTlWn4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA60PgcaTuC+6ZY7IuJoMwjch0+eCcVdiPj472s8EGchgsMSvU\/\/wcG5Ly950\/nOrcc+V+DGvazbsj1TGeslcGfFuh546Rqt30GqjlXH4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA40NgfqInA\/\/Vy3TCKpjyytJHD77q+R9vkEbvgMP\/nZhdT6k8Dd2A29kXimsogr4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA0VxQAL3perJ1CpWxT6BG1bcTz3XVQJ3ATwpqtEqn+rbrDAUhuKAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOtAYHWkrgPvHp+WDjth3B9NmvByPGTAjeXLE6+PjQ0VRxlsl89vMvg807PgimzpwdjBo\/KVi6ck2w7+Dh4MLX35bls6fjUCktFlhk\/+L4jzzw+3D\/wfA85LH1\/V2l\/ds++DDcz9fn7RNnzwfLVq0NpkyfFQwfPT5YvHxVsP\/wsdTzOI9KtuMEbtwbrp2UV6UW3B8d+CTAOaMnTC793liyLIKVe61KsXbP1\/\/W6LBUj6rHenPg+NlzYX++75MjYT94+vwXwep3NwQjxk4sPXMw2yjLbBcu\/7adu4PXFy4JRo6bGIydOCWYt2hpsPOjfeE1OK22xX1xoFgO1Kptw\/3c2xs2B1h3ZdjocaUFxTGGOnj0hNq2jAU6lQN4h7D3k6OnPw3LcujE6WDh0rdKfJ27YHGAZ1MlbhTRlux9ZcjIMcGrr80JVrz9boDnpPqtYvst4Sk8fRxQ2xYvfLyo9b5T5z4Pnyl4bqRdD1qYPYMQf3bxa+85lepEvuviuYSx2LjJU4OJU6aXto\/EuBH2na99zdumWkLgPnLqbPDw409GRGYWnP\/hH38QzJw739uAjLwYhD357AuxecBVBwQMS48Y\/sL5Or5tXjTTtfTmvHgbDbJrz96xef\/gn39UElV8ojvnU+k2C9zPPN89wGKRdk\/AEAPguDyzCtw793wc3HnvA2G+lr\/Ft999f4A07nUqxdo9X\/+bt5NS3anuOpMD+GBq\/dN9Dz0WYC0F9FO2j2P0k\/MWvVnWf7nlX7RsZXDVf17rzQP5Xfu7G0riuXue\/qstiAPFcaDotn3+q29KYzOM0bhf4G30Ifhgr3osrh6FZXYsH33imZCbk16dEXz4cUdpXSDmqG3jGQWjnCR8IZJ36dozzNPOtRjPxF59+kvo1oedRB4lcUzHsrVvte1sOIlPxeK0fut7kf4\/bXyz6b2dkfQHjhyP9A15dSKuVximQn+z55Ab\/+GPt9fUYJTLou1i+ZYVz6YXuNGwkl4mmNRDR42NNCIDCY0xSWzgPGBxbOdVKrpmEbhRFixCydeM24aoX6R1BAvcENjRyfC1IUzbvbtxFoF7zfpNAQa7nKdvG2ne2bglcq1KsXbLp\/+d08EId+He7BxgEeyeBx4J8PP1W7wPwkHcfQ8YMiL1fMsLFgdx+Wi\/2pY4UB0HimzbsGKK+\/Bl7dli3xhHdVldXQq\/bPixCNZ\/8PAAxjvGy7g4bsbp7n0Hgit+cmXq+cgX71iukKE6y1Znwkk4ZeGA2rZ4koUnRaeBsSU\/R+D9IOkaffoPDp8Z0HY4bTU6keWzYu26zFoTZuHaeYpbq\/00vcANSzcelD3wyJ+CsZOmlNxfYMo3NzqkW7shKpyC0O5Xnr6Dhpas59DQBg8fHfz8ql9HrmGWzGhEeEFCY+Yy4D\/24wd3JdZo0gRuTNNwhXaUv9uLfUpWgROnzohYVeOajz\/dJczfrpM3dgVu5INr8r3BdYsv\/zSBGwNbV9y+5Y67S9PygRe2+TpIy9MnK8XaV0bta63OS\/Wp+qwHB1gEsz4K\/RNeJtAfwg0BFlK2Y4hxHDOL3PJh6jenwzZEsQlTppVcNd18211lxzUAE89dHul\/MZwosm27VqwwvMD4DK4a+g0aVjZ2Qx9hY0nVZzH1KRzTcWQRzJ5FeM+AUcvs+YuCydNmBu5z6Pc33lL2LPv0i6\/K3o0gdvd4qW\/pmfhc915l71\/IB7McVE\/p9SSMhFGlHFDbFmcq5UxR6YeMGBO+u2D2f1y+rhg+a96CMG21OhGuifcujK3s2YZtGByt27K95GoXs4nYKBaaW1xZtb+521NdBG5YvGEaXJafO\/iBWxAjKiybmXBr1m0MjyHNwmUrIseRFoMwdrUBwZrzgMW05Y\/Y52saDeb\/\/Ov\/DdPBvxzn4QrX+M\/HbdtNZ\/sthh9WLgsGnHbMYnQOWPSR0xX1kuQTuHE9V3xmv+JWrjSB+94Ho1aP8Ilk51oMn+l8Xxgg2zGLXQzjsLb0ipu7g1L9qf46mwOuCIYBk8+ize2\/IGxx2bGmgjvw8q2p8P6HeyP9IMSHSnyh8jW1rfYjDsRzoKi2zeNUjGF+94ebvX4l8TGMxziPP\/VspI9QXcXXlbApBhtXBMMLPtwiMr4Y9\/P7ADgLa21OA9\/yzOU+AwZHjlvaJ555PpJuxux53nSWXnEx9Swc2w9Hte32q\/NGaed7Ow5H+vk4NyXwuc3PDV63qAidyB1j+dY9ccdrrseARsFU5aiuPddF4GYyp227DuqZiK7ADQf0s+cvLP1WvRM\/zQALd9l14XeHSQOh1Y4hjnN2j8GdXQsNlPPIKrq66TgPbPNUP1iVx5UFi2my4I4FKN288vznAS2L6x1HTkSEGVjNu4JLksANAZ4x5i92bjlhfW9pIQa5GLgYSuCurgNw8dd\/4SkORDngimBYSCsOI7Z8e6nvwEg6WMdZ34YYH2jj8uFnFtImPd\/i8tD+aD0KD+HhcqCots0zOGAddPDYydi2jQ\/33A\/wC55bPv0XZ4vmgCuCxRnIgJf8QdZ97vHsWDz3XOMkK\/fZCxcjRka8LpGlUSyeiwPVc0Btu3oMxcP8GGKGjo1t4tyU4EOopeEP\/EXpRIOGjwrz9808svqFqG2ans\/QyNIpzs+HzsauqQXurOBBNLcGhZcPPg\/irR1DPP6VVyPHOW3cdlbR1U3H+b23e0+kHK6IzmmxDcEdFoP4+RZldNNn+R8ncONcFrCBE6ajcJ583J2eAktGw9jFn\/PANvxYWlrEcBPDaVwMJXA3b+fD9apt1WOjcsAVwTArKK6smCFk\/ResETgdWye4xzidbbPrLP7gaMcVq82IA9VxoIi2DWGPhUC4dUuqF6ybYn0E4jeWLEtMn5SXjlVX\/+2IH4tgrsGPiweOG1d5PYjtuz4K9+M43l\/cc\/n\/yrXrI+mTPgDxedoWv8WB7BxQ286OlXhVPFZsPe3qQIY3fxhlw52idKLXFy6JPGvgmsSurbj4Om9kTOsicEPUhJ\/RLL+PDx2NkDHJgtsH7NnPvwwwJWHXvgPBxm07AvhuxkIqNkjzCazc4JAOFsrwQwcRGVP1fNfhfVlFVzcd58ECMcqA++DjWbfxcpUFZ6RxXY0kCdy4PvxJGo6IsRKulYvL73Zs8Mln5wH\/Hbv3Jv4sLWJ0mHYNxC6GErjbq8NiLmhbdV8PDrAI9uvrro\/0R+71eYAH1058nNdycF1lcTrbZktPWMjZfsXivThQDAeKaNtHTp4JxzcYs\/jWeXHri2frwdWDe1z\/i6lf4ViOI4tgcW5FDDce848YOzHk6cKlb0U47860tPMthqDN43q819kxxeV1JEyESR4OqG2LN3l4U9Q58C7A\/bzrpoTdk0AL4lk\/RelE0BC5DNiGm+R5i95MnFlXFAbKp3HaYF0EbkzfzFvpWQRuCK1wHO8u0OiSHP99AjcaHVvg8HlIj0EevjRxY+T7ySq6uuk4D17MEUIIH6tk2\/V3x\/fibm\/YuiNynTSBG50XfwzASxqskVC+JIEbC3+6187633W\/4mIogbtxOpNKeKq0qrdm4QCLYPc99Fikz3TvAYMo69tcgZufMRAI3HPd\/\/jIanlV80xw89V\/tT1x4L85UETbdn3mQ\/BOw5fHRN16la+1kna+jqsN5+UAi2BYfCspny7deobPIBa48zybKn3+JZVLx8R\/caCcA2rb5ZiIJ\/XFhDnouil5eeCQ8HmCba4bHhPZe0\/W2NWJ2BrczQO6FbQuGFry9bVdX57UA++mFrhhXc0+m10i+\/77BG4AjZcU+APynWP74PfaN90hq+jqpuMKHjFmQnjtaqz1ailwo7zwW2R4IH6hx0ulTiJJ4Ga\/tHxulm1Y3zNOLoYSuFuvU+L61rbqt7M5UIQIhnvg\/m791vci\/ZrvHhctWxmeg2ePL432qX2IA\/k5UETbxpiQ23aWWX9srQQDCtVh\/joUdpVhxwJEXoEbgoJx3v2QG1cfPIPJnZkZd472V1a3wqu98VLbbu\/6b4T2D68J9mxwZ\/OzgeTOj\/ZFxj1F6kTAYenKNUFannAD+cnxU5FyNAKGKkMx7bipBe5xk6eGDQkNChYCEKmHjBwTTJ05O8BCXWhs\/DUnTuA2QsFKee6CxUGXrj0jiz5ag0XsTq\/LKrq66eyaiPlFqxoxA1MB01yA2HF3WmGaBbeVl7\/CAY+31ryTaMH98ONPhvUE\/GHlmPTDKut23PUv7mIogbuYjsDqVrHwFAeiHOC+uRoLbvR99hzB4iZpOI+eMDlMj9lJael1PFpvwkN4pHGgiLYNV3bWrhG7bvZ8ZYCLODsHsw99abRP\/K0FB4oQwfidCqJFWjkx+9X4jhhrB6Wdo+PivzhQGQfUtivDS\/wqHi\/09fyuY25K2D2JK3yjHorUibheMR7Dh1xYiHO57HkEi+64hZY5H20Xz5VaY9rUAjev2IpFu8xdhgsauzkBwd3jSf\/ROPsOGhoZnKEh8jlZRVc3HeeBr03W4BAfPf1p5BqctlbbWQVuLLLG7mCA6ZTps8Lyu50XXuDs3qqxTsd9uxhK4G6+TqdW\/FW+4kItOFCECIZycZ+Z5vsU6dn\/6W133lv350EtsFSeaqONxIEi2vbxs+fC8Q3GOfjgn3aPMGKwMZE7jTftXB1XG6qGA0WIYBCojb+IsTh8UpnwHsXpN21\/PzF9Ul46Jv6LA34OqG37cRFf6osL3m+sv7fxDRtG8oLFVjdF6kSWpxtjdh2ePTBUsvIhnjJjtp5Hl+rLEbduavG\/aQXuNGf2DNbAYSNDMlcqcFs+3PjcPFzRNW6FcDed5Y0YC2Nyg1u8fFVig4NoDwt2\/LCYJueVdzurwI38Mb2Ey8vbrsA9a96CMC2s7ON8mWcpt4thHNZZ8lKa1uvQVKeq06I5UIQIhjI99VzXsB\/Ex9mkcqKP\/MmVV4XpXVdNSefqmNqAOJCNA0W1bZ56i\/FmEv4dR6JjvZVr1yemT8pLx7LVs3C6jFMRIti+T46EzyaM\/des35TI4dcXLomkx\/ub6uRynQgLYVEEB9S2xaMieFRtHrwuielBPEbyGSYWqROllR9CNxscuUaraefreHO0s6YVuN2V6\/d2HPYOmE5+diEiFLjiNBZ3BLnxS\/qKw4uHQaRlgh85dTYyeNu2c3fkuKV1xVnbbzFbpKOcEL3tGMeYcsELtsAdCx\/Pu12JwI1r4CscC9u2bR2alQPW6HYMcdKUXFiCYCoJ\/Prhh47S8kGcFWs+R9vN0RmpnlRPjciBokQwWHZyP4hnT9z9QtDmtHHPlLjztV9tSRxI50BRbZutk9BuMR3Xh\/+5Ly8FPM7DOA77fGm1L73+hFHlGBUhggH3a393Q\/iMgniBmQy++jhw5Hhkavg9DzziTec7V\/sqr19h1r6YqW23b903WruHDmTvMPMXLwu377rvIW\/\/X5ROhIWRoec98qeng7UbtnivBax4AWU9k1qz3TStwA2C8hcYkBmuM7iRw7qX06CxuQL3K9NfCxsejvssp+GEngdzv\/vDzZHr4GuQNWTEzzzf3esuJU3gxrU5H1wH1j58TxD2sd\/S4QXpzIWLkTScvpLtSgVu3LfPib8rcKMMbL2IsmNFdtcHOAbCELXt3lBXZ517y4p1JfettK3ZualeVa9FcKAoEQz9HVtlo59btmptZEYLxC7457Y+ELH7vCninpSH2oY4EF37pBr\/+h\/uPxhps3BBAt\/cjDE+3nft2TuSbsCQEZE0nF7baqO14EBRIhjWKuLnFPzKu64V8Q7G705Iv\/rdDeJ8C04HrwVXlWdlfaDadmV4iV+1wwsGPPx8sO2FS9+K7f+L0IlgIGnXgj7mM36FAQIbiQ4YqnFYK7aFugjcIBvEyiw\/9yWD\/WdDHOBK6DdoWEhkIzS+xPR6uX\/ESsaOWTk4D1h4M9GRBgMy+BCChTJeSNzjPh+L\/LXKrnfnvQ8EPF01TeBGufDlyc63GHlj0UtXrMfxYaPHRTDhe6t0u1KBG\/lDgHfx8QncGPii\/u2eLIZvWXRqiG2fxRCWfPeQBWvfedpXu4eZsBW2rcqBogRu4AP\/b9a\/WYz+E2tI4Nnl9qVI8+HHHd5+sFXx1n2pL6kXB4ps22MnTSlr21jACKLDTbfcUXYM41nXKKNe963rtG8bK0oEA4fwjmPPMYvx\/oT1I3zvK08\/103PMonb4kCNOKC23b79eqM9010vC3g+4P3m7Odfxrb\/InSidzZuKXsmwXASWtnoCZNL4zF7VlmZYMTaaPipPNW35boJ3EyopO3fXH9jhGhJAjfEaV6N3pcvGtQbSy5Pj4DI6hJnxdp1XvHVzQ95xa3+veLtd8saFc7n+8kicMNi2Sdyu2XB\/xFjJgSwaHbvJ+\/\/PAI3rsXTT1Aun8CNdLv2HQjYD5Pvnmzf2IlTYu8rC9Z5MdB51XcqwlAYthIHihTBgAsWFPYJ2db3WYw0eP61Epa6F\/UNjcSBIts2xmKDh4\/2jgOtTVuMMRJmrDUSFipLe7TNIkUwvINhyrnxOil+4pnn9UGnRsKm2m57tN20elbbFg\/SOFLP4zDa4WfCc917pY55itCJoB\/xdeO2f37Vr4Odez5OLVM9MdO1imvDNRO4XZ+EcQRz97uLb23YuiMkKiwC3MrHlG5YW\/uEUwjF+w4eLhHYroOpo24e+I8vR7Ak5tXt7Rzkjbz2Hz7mPdfygxiBQZydh5inl+MafMzOc2O8KGH636+vuz6SHudC9MDXKIi87nnV\/uc669m7X0X5w2LD7g0WHHFlAQaDho+K\/aCA6SWu321fXmlY+87RvuI6DmEpLNuFAzPnzg\/7NjwHku57wZvLw7T4+BqXFi4NXujxUpjW+k7r47FOgQQwtbE4\/mh\/MdyoRdt+e8PmWNEPY0lYehflVk48KIYH7YQjv6MkrTsETNilTpzRCRZERjvyzazE8wzvQDCCaSeMda9ql53BAbVt8a4zeBd3Tdf4EXpeXFreX4ROtGP33pJW5jMmgrANg06Nw1q7vdRM4Gay1msbFtLrt74XbPvgQ68P7KzlwArfmEoOPz0nzla+2jemYKAsmKJR7QJCWFQRC4xB0E0T2LPeXyOkw6AY97Nuy\/YAnR5WZce+SstWJNaVXlvpW7tzVP2qfmvNAbgo+OjAJ6XnFvp4fJCt9plR6zIrf7ULcSCdA7Bu3fnRvtLYDeNJLBpe5Iw71UF6HQij+mKEdx68r2CaON7DIFSoDupbB8JbeNeCA2rb4lWlvHr1tTmhEQ\/ctVV6flE6EdaC2LhtR+nZlOQipdLyKX1jt4mWErhFtsYmm+pH9SMOiAPigDggDogD4oA4IA6IA+KAOCAOiAPiQOtxgGf1wP+16rj16riR61QCt3yiqdMRB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAcq5gA8H\/QbNCy03oarKs3mkbhdbzFcArc6r4o7r3qTVNdTxygOiAPigDggDogD4oA4IA6IA+KAOCAOiAPiQONwYNjocaU1F3hNIWxjv+qpceqpXepCArcEbnU84oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+JAZg48\/PiTEattiNs9e\/fLtb5au4iwus\/aCf8SuNV5Ze681BBr1xCFrbAVB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8SBZuFArz79AywmCd\/bTz77QjBv0VLpS9IYO40DErhFvk4jX7N02iqnBhjigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogD4kBjckACtwRuCdzigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA40JQcKE7g7OjoC\/YSBOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogD4kC9OCCBW8K8PkyIA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDjQlBwoTOAuKiPlIwSEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQqCeCHyvnhfTtYSAEBACQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgUhYAE7qKQVD5CQAgIASEgBISAEBACQkAICAEhIASEgBAQAkJACAgBIVBXBCRw1xVuXUwICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBIpCQAJ3UUgqHyEgBISAEBACQkAICAEhIASEgBAQAkJACAgBISAEhIAQqCsCErjrCrcuJgSEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACRSEggbsoJJWPEBACQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAjUFQEJ3HWFWxcTAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQkAICIGiEJDAXRSSTZTPzFmzg3\/64Y9KvxGjxjRRyS8XdeZrs8J72LRp8+UD2qopAufPnw\/+5d+uKGH\/fNfuNb2WMhcCQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJpCJQJ3GPHTQiFwxtuuiX47rvv0vIIj69bvyE896577g\/3a6OxEEAd\/93ff7\/0e7H3y41VuAyl+eyzz4J\/+McflMr\/q2uuC\/7yl7+UnQUh1kT8VavXlB3XjngETp0+HWIHDNeufTeS+IVuPUL+bNu+PXJMf4SAEBACQkAICAEhIASEgBAQAkJACAgBISAEhEA9ESgTuPsPGByKVxBBhw0fmbk8K1asCs+95trfZj5PCeuLQJrAfenSpaBv\/4HBy\/0GlGL8b6QAy2ET6Ldu8wusS5ctD9NIhK2s9mARb\/giPnHiZCQD\/sDwy6uv8X5giJygP0JACAgBISAEhIAQEAJCQAgIASEgBISAEBACQqBGCKQK3BC4dry\/M9PlJXBngqnTE6UJ3OfOnYsInPjfKOHDDz8Ky\/bHW++ILVaX57uF6c6cORubTgfKEYALGxO4\/99Pf1GeIAiCIcNGhGmQXkEICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAh0BgKZBO4f\/8fPguIuYQEAACAASURBVK+++iq1fBK4UyFqiATNLHDfdsfdobA69\/V5Xjz\/9re\/lVxsQKSFKxOFyhDo3adfiHGfvv29J3\/88f4wDTD+85\/\/7E2nnUJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQqCWCGQSuCEUZllQTgJ3LauquLybVeC+cOHzUFQFJ\/HfF\/bvPxCmu+63v\/cl0b4EBO64694Qv3feXReb8me\/uDpMt2Hjpth0OiAEhIAQEAJCQAgIASEgBISAEBACQkAICAEhIARqhUBmgRuC4uo1byeWo1KBG759V65aHbw6bUYwbsKkYNHiJcF7O94P\/vrXvyZeJ+0gFh2EKwv8IHZa+Oabb4Lt298LZs95vXS9JW8uCw50dNjhzPHu3R+Wyooyz5g5K3h77TvB+QsXEs8\/depUWCYWZuHPeMXK1cG48RMDlGfP3r2ZfRoDp6PHjpWuP3HSK8GcufOCXbt2B2k+s+MEbuQFzLBYKOrbfvhveB45cqR0n3D74e5LAgAzACw910nSOe4x4GNluvu+B9zD4f8pr04L0z3T5flwPza++OKLsBzsW\/rrry8FmzZvCSZMmhzMm\/9GiYdZZi1Y5uAc\/IHPf2NhqS7BC7SXNPcocVy1\/dOmzwzwg4B89uyndrlMcR6eIuN\/+bcrQvyAS1xgHr3Uu29cMu0XAp2CQK3aOm4G\/fSbS5cH6HenTJ0WLFv+Vq5nSacAo4sKgSZG4NChw+EzHOOntHD6zJkwPT\/z+TzMQMLzH7PC8FxDjLUoKpmZhPHYJ58cKo3jMJ6zPgHPcgUhUA0CNnZGnDa+x3XAQzuH3ze4DEVw\/ttvvy1dB+8ekyZPKS1Ifvz4iQCzKBWEgBBIR8DaaZFtG3rE2rXvlvQJ01bwPlhJUNuuBK3mTPvV11+Hzwm806QF9OvM1++++857ypGjRwPogZNfmVr6vbViZWDakfcEz068v0FTmTptejB9xmul7fPnz3tSapcQ8COQKHB37d4zwGKRJirCFUHSC0VWgRvuDSBQWr5uDJco1fj1PXz4SJi3uahY\/taKiHDH14Tbi46DB\/0I0V48MH51zXVh3pwHtrv3fDG4ePEinXF588mnu4TnzXxtVoAysgUs54VrfLQnubPBh4F\/+uGPwjz5fGzfevtdsaI7C5Mv9n45LCTOcfNx\/19\/w02l9OMnTgrTQhBNG9Cio7O84vw6hwWJ2fjTk0+HeUBUigtsgYwXTQ4Qr60cDz\/6p9LLQhwXwR0sVpkU8PIKUTypLnAdfDzwBR9Xh5J\/ayurxSNGjk596a6GpxC07VrgQ1LAxyhLCw4oCIFGQqDoto57W7V6TeIz4LfX31gSyhoJB5VFCLQSAvx8dz9g++6Tn+\/de7wYSQJRGmOJuOc39uN42vgGL2H2LPTFEAAVhEAeBCA0YSxqvIIRRVKAcM3p8SGWQxGcxziR17mxslmMdziMDxWEgBCIR6Dotg1RsNdLfcK+wtqjxdAW8H6YFNS2k9BprWPv7\/wgwpU4ncLuGh9JjEuIT50+bYdKMXS0e+9\/KJKG02Mslqa14QMpdCY+j7ex9hoMRhWEQBoCiQI3xE+QkckF8saFLAI3rJ05v6RtiMJxX4jiyoD9rmiIAWHSdXAMA0JYP8cFvOSk5YHjv7z6mgAWQ25ggXvY8JEBBoBp+e3dt8\/NpvSihZe6tHNxHELysWPHy\/IoQuCGJRSXIQk7FACuQiz9mLHjy8qUtgM84EE7vuz5Aqxb7DqIwUkOLHo9+PCjAX6c3reNDxK+gK+f\/PLsO9f2oeyYPeAGl6tsfW7nujEE87hQLU\/37fs4xAMWOUkB989lw4crBSHQKAgU2dZxT8NHjIrwnbnvbsPiQEEICIHiEcBMP2tveK4mWVl\/\/vkXYVqcw89giAuPPv5k5Ljl68b4uO4bi0IM4A\/v7nn8H2MNWXMXz4d2yBEuIo1Ld91zf+Itw62cpUUMjloogvMQQZIMffjaMGxREAJCIB6Boto2RD\/oD9z+4rYxa94X1LZ9qLTuPny4Zy0q7Z1\/4OChIb9cA7gtW7dFNJo47sVpIUAZM9VZ50nKAzPuFIRAEgKpAjdOhrsFJlqcNUqawI0pCpwPtvGlZtSYsSW3IY8\/8VQZuSEqVBpYNOTroeFAHMb00779B5YEYD4OK1SIdm5wRXnkg5eaWbPnBrC2ZfEW+aHhuxY\/LHDbNdGx4CPC4iVvlizWeQFFpLnx5lvdopS5D8EDDfcC9x0LFy0OujzXNYIxvna5IU7gRucCUQidnJURMf5jP35wV2IBeVu6\/gMG2+6yGCK7pUPsE93LTnJ2YPoM5xFnKb9+w8ZIOld0ZdHL8kN9on7Aa3wMeaFbj0geOO5zQQNrMMsDMay9jF\/gBc9+wHHk486AiOMqhHO8HKBe8UEE5\/K1Nm\/Z6iAUlFzVcBqcUylPMZXI8sgyZYlnIaA9KAiBRkGgyLbO7pGsfaCNwn0Q2qnbdyONBmCNwgSVo5UQgGBnbRBxkkUaxkSWFuMtHpf1GzAoPIY0Nh7D+BBWcPzih+O+D\/N4Nlv+iCGYwzXZzg92lfoGtjbH8TQ3f61UT7qX4hDAhxnmWZzbEVyRLauxzaEIzrvWdUOGjSg96yBw4F3OFdncMS+XR9tCoN0RKKJt48Opq0PgP55Pr82eU3oPdN8h+WOv1YHatiHRPvHoMePCZws0i7jgiuEYW1mAJbfLL4x9YHAH\/cgdByGt+wyDxsJ5YBvGhTve31kaN0Hn4pl2+MiqIASSEMgkcIPYLkF9\/nTSBG5XBPAtYAeB2R0gwZ9cJcEnGqLj9lng8BcpDCDxQOCAlyn2SYxtn1\/lAQMHh50E8oH\/RQ6uwI3GielEHIAzhGIeyMLfJIcbbrolPI7p8PAr7gYWKZGXmyZO4LZ8zp07F14D5+O\/L\/DLI3Dhl0dOz1bFPtGe08Zts1\/wJBcnsJ7H\/dvPte5yRS90oj5LefejBl56ObB7DmCEevHxy5098PSzz3E2kdkGVu++KaiwmOfO\/4mnno3kUxRPDT+05bj65AvzbIKRo8fyIW0LgU5FoKi2jo9p3Paw7Zsit\/9AR6TfhEAmi81OpYAu3qIIsIiHZ1Bc4BlWI0aNCZO5H8xhFeu2VVi78ngLz+eTJ0+GeWCDx4Z4AXMD3EEgb3u2u1ZPbnr9FwI+BDAW4w8uvjEiznNnOkJ0tlAE52HhaVxG7PtgA6GC24Xvw5CVSbEQaHcEimjbrhGi65oTGMOwjAVCGCfxO57adnsy0TVABA98Ab63ue\/nNcoeeuSxyDHfDHtXU+nR66XIZVytxKezubqL7yNNJFP9aWsEMgncQAjCF7\/kQ1x1XwiSBG68GHDjwJf+uABRl6\/lis5x59l+V+BGp+5rLEiPe2BLZFeoxQKQVm6UCSKGL+BFht1d4MWKgytwx1k1oNPge3c\/AsD3Nqbo4hcnPOO6EIGt3G4nUJTAjbLaNRDHuSnhL8vz5i9gWDJv87RkfGzJG1zRy8WX8+UPMviAwYGtvMGvpAUg0ZEzTvxgcLnqXoeviUGL5eN+aS2Kp3y9LNsQDaxMsHpTEAKNgkBRbR0zbIzjiH2zJ+ye8WGT02KhOgUhIASKRQDCnbUzjJfcD9m4muuehI0ysCiynQ9jA34mc0kh1rGwiI\/1FjB2tDwQs5hoaRDDUgl+kDGGSbI253O0LQRcBHisFeemhA1B8C6D9xILRXAewgVz3mfUgevhHc7eUyCMKAgBIRCPQLVtm40C4fIkLmBmEbdfbptq23Gotf5+GB4aL+LclAwaMixMw4Z60LLsXMRs2e0ixy5YMW7j5wcM5CyfJENI6Fn2bPEZGrnX1P\/2RSCzwA2IWMAGETG1gQMfdwU4+CQ18oLYPPDiPGybp37iS2MlwRUNMUUnKcCC18qGmC16YSlrx1yrWTdPHlziHF7tnAVun9sQzosF97y+XO9\/8JGw3BB6OBQlcCNPtuD1uSnBggGGH+I41yJcPt82W4HD7Ube4IpevhdjyxsfYazs+EJpAdzljxD4ep4U3CnVsC634HJ123a\/b3GkxzErD67PoSiecp5ZtuGiwcqU5Bs8S15KIwSKRKCIto7ysHUC9wNxZeVpnryIb1x67RcCQqAyBPAMZitRn3DMH8XRJi3Aao0t2dzZWZbOYn6xc1+82JAALvaSxhOWn2IhkAcB18WjO8UbebI\/XzYMKorzMHSy8R7iOF++ee5P5wiBdkWgmraNj0ncJt1Z3y6mbHDGs5rUtl2k2uc\/W0+72p2hwB\/62XAH4yfjH8ZVScFdt4uNAmAEYPkghmsSBSFQDQIVCdy4EAuaICFWVbWQJHCz9UCawIv8XEu4NEHcyoDYFQ2xUmxSwEsJNywWIPnLKL5a7d9\/IPbnCtxHjh4NL8sCN16YkgJjPGHS5KSkpSlGsFSCkAxhHl+33KkgtRS44WfWsHOt31Fw\/mKX9oEg6UbZlUw1ohGLXnjQJwXu9Nlq\/Pz58+E9496TRGnLn1+EefqYy9U4SzLk404hs7wRF8VTzjPLNlu3Yjq3ghBoFASKaOu4F25bSTOP7L55xgZmgSgIASFQPAK86KvPTQkWRLexCYvYEAZtP2LMKksa17HAjTEOB57JhbzwEgjRALPZ3BmOfJ62hUAeBNhljuumxHVPwkJXkZxnoQOcx2zembNml6y22eVBnvvTOUKgXRHI27ZXrV4TeZ7t2\/dx4vOMBW73uam23Z7s+\/LLLyMcct2UsHsSiNg8tunTt394Lo4ljaVwjMde\/AxzvTwgHbwiLF22PHGGfHvWmO46CwIVC9xoCNwJQriDhSpCksDNq9VD7E4Lrj9TiIpZgysaZrEaZhEDju0tsKUuN8ws2\/wFigVuzt+uw3H3npcXL\/QJ3PCpjTxgTZilfLUUuNHRsSWV66YEg1\/DCh8A8gb2uZln4VG7LoteaRbH6Fit7Cxw5+FmHP+Zq65VtpXZYrjZsfIg5pCFB3wubzNPOc8s23DxYnmhL1AQAo2CQBFtHffCbQuugNICXvatTeC5oiAEhEDxCLDlGtooW09jfRNrg4hhBGDhQEfUVz6ny7LNIh5cmMDFSdx5cCWBj8A2RrYyKBYCeRBgaznXTQkb2GDczaFIzkPs4Gcicx8CB0QzWPixCMJl0bYQEALlCORt25ihzm2wkm3XAENtu7xe2mUPa1Sum5LBQ4eHHMM2B9Y2KuEe0o6bMImzCrgNuHlBX4CXAIjkCkIgCwIVC9zIFFbCTD7zvZskcLM\/4\/ETo6T2FdS1OGBraF963seiIcqZJfAimtzo+D4r3eZpHNx5VCNwY0EATCGppCy1FLiB7dBhI8LysJsSLIxo5XS\/+mWpE07Tvcdl0R+rtucNRYheEITtvhDzC29cufgrJ381Z67ipSEpJAncXJ5Kt5mnSdf3HcMiQ3Y9iXk+hLSvsxAooq2j7MZvxGmzgZCeLWpci8\/OwkLXFQKtiAB\/QGc3JeyeBC9gHNznN7fvLNsspCNfjFWxdgbGOEnn48OXghCoBgH3ww24Z4Hdk7huGYvmPIw8MKM1ie949lVjPGH3pVgItAMCeds29Iqkdph0jF13GcZq24ZEe8UbNm4KeeS6KWGjVnws5cDaXhLXfMfYjZbliXFcWp7g7aeffmanKBYCXgRyCdzIib\/ogLiwHkgSuNlHcNIiCFZKuD7hBoHOP2tg0RB5ZGkI3IDnzJ0XXopfWiBSw6o36YfprnYc1j0WihC48WLlWk5gWlPf\/gNLvvDg3B+CIz5A8P3UWuDuOHgwrCsMak3wZfckLHwbJpXE7JMdYnfeUIToxZZj4Bem1qQFLDpqfEZ9WWCuViNwF8VTK1fWmN243Hr7XVlPUzohUHMEimjrKCS3LQhnaWHyK1PDtg7rTgUhIARqg8DsOa+HbY0\/HLN7Eha+UYpPPjkUnoNnMqyGbMzmi+EbEs85HIP7OhvfuHcEi1WMgyF2s\/Buz33EU6dNd0\/TfyFQEQJYg8Y4ZVO8XfckLHwj81pxHjN6l7y5LMCYnN3wWfkQv7fj\/YruT4mFQLsikKdtQ6\/g9uZ7hvE+W6AP+7CwZFxQ245DpjX3Y\/zC7zrmpoTdk7jCN5BgzuJ85ppvmzUyaEdxAboKjEFhoMDlMq7jeYMFLhWEQBwCuQVuiK08NRMEnDV7btjRug0Bop4RM833MQrLwhnOqySwaIhz4Sc6KbiO72GBZ4HvkS277XjWuAiB213lmB30u+WA2Gh411rgxrXZr5e5KeGXPPgFqyZgIUe7nzTXIknXKUL0cr+0Z3G9wm5cePoPc7UagbsoniZh5zvGi3+C4wpCoFEQKKKt4164baWtn4D0ENqsr3KnkTcKNiqHEGgFBHimH56fGJfy8xnjUtdVAtyVWPtEXCsrU5QNAjy\/nGE7TiBvhfrQPdQeAXZFYs8X3udbCLlenIcoghmW3L6qWRS+9mjqCkKgcRDgdpy1bfMsWrQ793lX1N2pbReFZOPmw+uNmE7BxqzTZ7xWVnjW9lyXN2WJc+7AmAm6ErQffrZgfKUgBOIQyC1wI8Mkv26uwM1TRkHQpMX0kDe7pPBNo4m7Iexn0RDXSlsYjBdKRHr7coW82PczHN7nDUUI3DxwZGslt0zw98idQLUC99mzn7qXKPvPfsBgrc0LBkAgqjbwoqNZFimNu15RohdbyPNK1L7ruqtTb9y4KUzGXK1G4C6Kp2HBMm6wexq2TM94upIJgZohUFRb56nfN958a2J58XLxs19cHfa\/vil4iRnooBAQAhUhwD4gYa3NY824ZxI\/v6dNn1nR9SpN7AoQsKZVEAJ5EXAt7fAhhZ9R4Jsv1JPzLHrgo46CEBAC6QjkadtwW8rv+3v37Uu\/UBUp1LarAK\/BT+X1xUzD4+fGuXPnyu4AngOMf9Aw\/vrXv5alKWoHhG42ONLH06KQbc18qhK4AQm+6Bi5ObbGYbCxVQ3S4aUkzpJl\/YaNkTxfnTbDsskUs2hoZcI0C1+AZQM3YNePMC+ih7zYutvND87v4csbP0yR5S+pRQjcvfv0C3Hp8lxX9\/LhfxZ2UOZKBW64VjHcEO\/ZuzfMO26DLalgrczuSYqYlgtrdStTNQNmxibNEhzTa+yavMgkMOCvmkgTxy9wAKKY5YMHAPOCuVqNwF0UT+PqN24\/rIXs3rL41o\/LR\/uFQNEIFNXW2aoGXMdskrjArpSQNkvfGZeX9gsBIZCOAERtewbhwz+7J4lrf3AjYufguXvkyJHYC8EFg43reAbH5i1bS9Nz8ZKFl35+rnNmmEZr11KfwMhoOy8CMCIxTsFFATiM\/4jhrsQXiuA8nn3gO35J1nM8dk4b1\/rKqn1CoF0RyNO2obdYfwCDwEuXLsXCN3Dw0PB5hmebBbVtQ6K9Y+bS8rdWhLy6\/8FHvMCw9gMOxhkV4GR4S4D2Z+MpCOoWuvd8sfRcgTvjbdvjXecgnXG9GqNTu67i1kWgaoEbIrXPIbwrcAPCrt17hsQEQUeOHht88803EXQ\/2rM3HKwhDQZHvq9GkZOcPywaWkOA6OpazqBh8ssQ0rqLs2DKq+tbDha4rji\/84NdEaHc7QyKELjfXvtOBD9c0w1YyMju2eJKBW7cm52LGPUGq\/C0wGInn5\/FB3pa3m6dnjp9Ou0U7\/GiRC+8EPM9gl\/wzc0BnfmLvV\/+\/9l70+85quvc339L1sqLvMhaeeGsJNe5SZzr+DrXcex4CHY8YIzBGIzBDMYMZp6ExCTEICEJJGYxz4MEYpQESEwSg0ASIIEkkEACMXqq3\/q0f7vYvftUdVV3dX+7v\/2ctXqd6qpTZ3jOc05VPWfXrrZ0F8y5yCdpe9ug24NA2Ucmm+JpW+Uq\/PGuV+64864KZyiJEBgOAk2NdQQDb5XNuGdByVsqIG55y1HS8H0EBSEgBAaLAGPPuwGx63I0VvC1iN\/RwMgBSzgfuA\/immb5EfvF+vgGY+rBjuuyfxuRPKrcS\/l6aFsIRARefvmVNl4aR087fUZMmv9vgvP+TU3KTFmLc7\/v3RPqOph3gTaEQFcEehnb8d4T4Q8f2j5w3fGLXIxfvwCsse3Rmtxt7w7WrivES5c9UAiKf4OItPMXXtax0Ipmg7BteXLP5vU\/\/yYeWki8H6NwDAk5ZnnMufDiwjrpgBDoW+AGQlwweNJBvpTAvWfPnswLYkZSfE1hEZA61otoFsVQXzfEasRmVjmtfIupc8oKJ\/UFcgYngu5vTzgpmVd8TagJgRu3LlZXixFezjxrVuuL5t4S3Y4T1xW46VO\/imd5sRhQ5o4jCvCcx8cVmwq+fZTVS2hK9KJsb6VuGBm\/vA90O0Zf8cDrg+cqPC0LZQI35zXB07Ly4zEeZKxtxFVc2cQ89F8IDAqBJsc6\/t8819lmvHIN4GHCX2MsHWNbQQgIgcEj4F+btvHHx17LAm8cWVqL7fp91NHHdixqcYxFax9wl2bnEpMGCyM+joSlXFwY8xbgPh9tC4G6CPhXtY2D69Y9X5pNv5znGSRe6xCz4TVv82LQEY\/zBpSCEBAC1RHoZWx78dDmA8Ym4iP3qXERGE3CB41tj8bkbu\/atavtngYuMad\/+umnhaBgLBr5xXloe\/CP2DhpcdSl1qx5qiMNnJ536YKMezmvoVmdmjCeLGyUDow9Ao0I3KDgX2WAfCmBm3RYEfAQYCQvi3lI6CVE0dC7tygqD2sfBMSiEP0oFuXDfgZqDH5wdmuXfwWDlTAfUiJyrMspp53R5ow\/TiRz583P8eeGNBWimxgro8wfevySO+fgO7upgJBv9eh15a5J0QsLL\/y7W53KYsZDyuo8crUMq24CN+f2y9Oy8uMx7xalyodj4\/n6LwQGiUCTY5164gohPrynxjxpnnr6mUE2TXkLASHgEMASLY5FDC\/KAtfv6FIo5mH\/uWdN3R\/yJpe3VrX0qfiSuZcmDSjK6qhjQqAIAVw3ep6xmNItNMH5FStXJcUMXxe2uQ72aojSrR06LgSmMwK9jG0stlNCYhyX\/EfwThnzaWxPZ1ZVbxtGO543J51yWteT8ZDgjRD9+XF70eIrk\/mxP6ZN\/Uev27hpUzIP7RQChkCHwO19CyMo1gn4PzQyctNfFPDHjciastjmfKy5u1kiFOXN\/pRoyOCL7kgoi5swHnKoU7dAHtHNirWXfLDYKXKngs9sS1vmu446eLcWqYkANy7er7PlC5633Hp769V5MLT97PMB0dyOlfUxIo2vN+d0e90Qcd3yBhP\/CoqvQy\/b\/mOgRQso3fIFC6sfGJWFpUvvz9OWWaI\/uXpNhksay9fHTPhYehf5RPMfCGEFtCzALZ93Udp+eFqUZ2o\/r8NafRjPCkJglBAYxFhH0PJznPGfmPkOS9LUQtYo4aK6CIHpiIC3lsbyp2pYterx1ptmfizbNtdvXt0us15CKOD658u385kTqEvK6KFq\/ZROCKQQiL7dozFM6hzb1y\/nsdjDMi\/1DMeY4d56+\/btVpxiISAEaiDQ69jmWoRhR8oCnGsSugyGSWVBY7sMnck4Fg1WU+5wU0jAHVwPp6y54R9uSLzf7VQe9i077p3sPspihG181BfpKan8tG9yEegQuIcJBT5MEQOeefa5lnsFhLkm\/BOmBG5rFwMDax\/cOZCu6IMslj4V87CD0EG9GfhcjKYicDHDFcpza9e2cMQ6YxCB9iKu8upKatXXl8kHAmwywvdkkyFaiNN\/oxR4xQu\/nCwM4NIAi69B9UmVdg+Sp\/DAX8SiS54q9VMaITCuCOBqaPOWLa1rAOP9zTe3dp0bx7WtqrcQGHUE4vXIfzyrat2xgOPhi\/HMPWL0YVolH+YFfKhyb9jNgrxKfkojBIoQiD61exGUm+A8eXC\/i39U3FAqCAEh0B8CTYxtntkZk1zP0FbKFmmLaquxXYTM9N5\/w4035ToOb6\/VDdyPcT1CZ0Mj27p1W0\/PR7g9Rd\/ifqwX\/tatt9JPLwSmVOAeFJRlAvegylS+WUsEN3GbuB8r\/CI8vfsWXvlVmBoE+NCq9XXZx7ympnYqVQgIASEgBCYFAe+6DcsfWfhMSs9Pbju93\/myNwwnFyG1XAiMJwIa2+PZb9Ol1v4bbN2+ZTJd2qx2TD8EJHBPvz6dkhaxWuf9f5W5qOmngljL26srrCx2syjvpyydW4yA9ymPj3sFISAEhIAQEALDRgCXbd5Vwvmz5wy7CipPCAwNAe5571u6LDcwwNAA37kKQkAIjDcCGtvj3X\/jXnvewOH+yYzXiHE7oiAExhEBCdzj2GsjVGd8KqX8ffFa1KDC4iuvyifgbv7MB1WHSc4XQcEugPS\/ghAQAkJACAiBYSGA+48f\/2S\/NmGbaxKL31W+pzKseqocIdAUAo8+tiL70Y\/3zQ087B5sn333b6oI5SMEhMAUIKCxPQWgq8gcgXmXLmh9X82uKRazX0EIjCsCErjHtedGpN7eD7NNir34v6zTHHxx2wedeKB9773uHwitk7\/SFiOAT3E+NGp9vW3btuLEOiIEhIAQEAJCoGEENm7alF+D7FqEFbe+BdEw0MpuZBDAmMO4bjEfm5eF3ch0kSoiBHpCQGO7J9h0UkMI8FFgu6ZYfOZZs\/SGfEP4KpupQWBaCtzc8P32hJNaP3xZKQwOAVyR4CqEG+1TTz+z9bGZwZX2Wc58uMD6eBC+vj8rSVsegV27d+e433Lr7f6QtoWAEBACQkAIDByBN954M\/vnf\/1ya6Eb\/8PnnDc744NECkJguiJwz733tTjPN094cw7fqBh7KAgBITDeCGhsj3f\/jXvt0cnQcfC9fcxxJ2TwUUEIjDsC01LgHvdOUf2FgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQqA7AhK4u2OkFEJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQkAICAEhMIIIfG7jxo2ZfsJAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBU+DRIQAAIABJREFUcWBYHGhKK5fALYFfCxzigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA4MlQONCdzvffy7TD9hIA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDgwLA5I4JYwr4UJcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxpIDErhF3LEk7rBWgFSOVhvFAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxIHR5YAEbgncErjFAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwYSw5I4BZxx5K4WjUb3VUz9Y36RhwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcWBYHJDALYFbArc4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiANjyQEJ3NOYuKufXZdt2PzmWBJzWCs8KkerieKAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPiwPhyYGIF7vWbXs+ef3lj\/nv5tS3TRgh+YcOr2df+69vZX\/zlX7V+Bx1yeLbrw0+mTfs04YzvhKO+U9+JA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAONMmBiRW4Tfy1+K\/\/5vPTRgD+7Umn5eK2te++5Q9Pm\/Y1OQCUlyZUcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFgfDkwMIH718cen33+777QIbSyz\/\/+4R\/\/JfvhPvtlp86YlS25+bZs4+atQxFiTfi1eDoJ3F\/80lc6cD\/ljJlDwVWTwfhOBuo79Z04IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+LAuHFgYAL3zw46pENkNTG5LEZoXv7YqoGLsbEO00ngnnnuBR3YP\/r46oFjOm7kV301YYsD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+PNgZETuE14vuLa6wcqyFo5Fk8ngfvVN7dn+N2mbbRrxjnnDxRLTQLjPQmo\/9R\/4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+PKgaEL3Aiu\/ExYLou3vLVzYMJsLHc6CdxGxrd2vZ\/t2L1nYBhaOYo1AYoD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+LAVHBgqAL3NTfc3Ca2btj8Zoal9ne\/v3dS8L7p9rva0jcJ0CQI3E3ipbw0QYkD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+LAqHFgSgVuA2PHex9kX\/rKVztE7jlzFxQK3Ls+\/CS75\/6Hsl8edmT29W\/tlX+48pv\/\/b2MD1x28zldJHC\/8fY72QUXX5qRDx\/D5IONRx792+zqJTdlm7Z0\/wDm1p27squvv7n10cx9fnpAxkc0+f1k\/wOzM88+L7vh1juyN3e829aut3fvyfgI5Mmnn9X2YwHAMIoxecX0L7+2pZX+1rvu7Ti2bv2Gwrxe3\/Z2NnfBooz60g9Ys\/\/TF\/+ttfBw\/MmnZ48\/\/VzhudTrvAsvaSuPD4bSP1jg33jbndkRvzmulS+YPvrEmra83tnzUUZ9Z503J8NvO+WCO3U5Y9a52ZKbb+\/AK2Kh\/5pYxQFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8SByeTASAjckA8hNYrOi69Z0iaGGkmffWF9S3iO6eP\/b+\/1\/Wzj5rQoHdMi6iI0I5bHY\/YfobpMdEZwJ42lL4oRzb3gvPujT5PnLbo63f616zcky0CcB6Ojjj2h4\/jdy5Z3YIkIjThdVE+\/\/wd775u9tvWtjjwoD0Hap2V78\/YdLbE67vdW+c+\/vDH72n99u+PceA6i96o1zyTLNk4onswJTP2ufhcHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxYLI5MDIC908POKhD6Hz2xZc7RM2HVz7RkS4Kov4\/4usLG17tyMenYRuBG2vwuD\/+\/79f\/XpmQrIfPFh9x7Rl\/ylv+WOr8nphkR3TH\/CLQ\/LjvqwFi6\/uSLvfzw\/O01YRuBG3f37wrzryiXXw\/4uwTAncRViawP3AIytqlU09sH73OGh7sicv9b\/6XxwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcWDKBW6sl\/HD7YVUtrG+5pgn6dYdu5KWzvHc+B\/XGO9+8HFbXjFNnf9zFy5qy4uPOSJY18mDtFhyIzTTxtXPPd9xPnnGepM2tRhgwjHHqwjc8y5b3FFelfqnsEwJ3EV5UU\/anHJJwzn4Yy+y6gYvzwdtawITB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAcmmwNDFbgRbLFU5nfGzHOzw359dNLVCC4pNm97u0PM5JwonJLn7fcsy7a\/+17rx3ZMw\/9o\/ZtKw77\/\/p8fZrgGwd0IfrFT6Q494jdtdVt01XUd6RCCV65+uuX2BEv0cy+4uCMNeSNs2yBMib7Rl\/jO9z9M5oPIbvl0E7hxH5JqF7hfftW1Lfcpdy19oOU3PJXuqiU35mVRZpnA\/dX\/\/GZ2zPEnt1yh4Bt91VPPtvKP+UbrcPqfc2O66MPb2qx4sicy9b\/6XxwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8SByeTAUAXuKFbG\/4jVM8+9INv0xrY2ARVyYvWbElKXPvRoR1r8Tce8+WihJ3k8zn+sh\/ngpU8355L5HXkhRPs0fEjxpNNm5D+E8ZRAnxJs77j3\/jyvlD\/sWefPyY9T5kMrOl204A7E16ebwI1v81T748ckwSJVZ3Dy5aX6hfyjEG7n3P9wp3uSgw45vC1P0j7\/yqaWMA4u9nvymbUd6SxfxZM5ianf1e\/igDggDogD4oA4IA6IA+KAOCAOiAPigDggDkwuB0ZK4EYUxQ0FFt6vvrm9TcjE8jeKslhbF5EXX9kxvXf3EY\/xH\/\/eMT\/8bafSYkkd03b7f84FF3XkteTm2\/N8+PBkLAtLcJ8vCwAxjRfJSdtN4Ebsj3mccubMtnKszBTunLvlrZ15+pTAPeu8dmHe8iNev+n1jvLJ87w5l2Qvv7Ylz9efo+3JnaTU9+p7cUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEgSIODF3gxkrbflFk9f8RqHGlYRW\/5c57kqLoD\/beN0v9fF62vXHz1jw\/2+dj3JxYeT6mvj4d294liE\/L9ps73s2WP7oyu\/TyKzIssLHuPuyoYzryIB8vcHNuyv+0F5O\/\/q292vKhbtHqvJvAnXKFctvd9yXbzqJAbDv\/16x9IU+fErija5WI0T\/8478k8yVvFjlwX7PwiqtbYng8V\/81oYkD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+IAHGgqfC4S6mcHHdIhYF5zw825KEp6xNPnX96YXX39zcmPNCL2Wr7zF13ZkV9KeC3b591bxHQIxVZWjFNibBS4acvZsy9M+hSPZfn\/UeBOffwRcZ86pXxn49c61rebwJ0S7J95\/qWOfCzflDX80gcfydOnBO6Ij+VlcdGChcfGtvng6NVLbsrLszwUaxITB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAcmmwNTKnB78r2w4dWkgM0HGkk3Z+6C5HETQavEK558OhdJY\/p+BO6XNr6eRcvqmH\/R\/yhwb9j8Zkc7EazB4OY7Oq3Ylz30WN4mw7ObwJ2qS5lrENykxHO8W5SUwF3Fhcutd92b9Ksey7L\/x598essXu7VT8WRPXup\/9b84IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+LAyAjckBFLXRMzLV501XUtARcrb9vnY4Tv1A8xlA8T+mOvbX0rF4N9Hmz3I3DzgcSYn+WJJfsxx5+cnTHr3GSaKHCDAx9x9PlhQc7+KFwjLHu\/4jagYzry4sObdjxlkb78sVX5cUtnccri+7Enn8rT9ypwkz\/1p258KDOVj8eB7fgWgNVRsSYzcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFg8jgwUgJ36uOHJ59+VktIvW\/5w22iL2Lnzw\/+VS6y1iVvFE57Fbjf2fNR0r3KA4+s6LA2PnXGrI42pATuxdcs6UiHJXsUphHxU+3uJnCnLLJtISHmt3nb2x11ATus1i1tSpiuYsFt5\/sYC\/abbr8r23vf\/ZPl4svcp9f25E1a6nP1uTggDogD4oA4IA6IA+KAOCAOiAPigDggDogD4oBxYGQE7vWvbk4KxRfPv6wlaKb8TyOs8kFHa4yPEWBxSWK\/VU8925auKYH74ZVPdAixCPW+Lrad8mWdErhTbcUKPNa56EOO3QTuU86Y2ZEXH558e\/eejnqfNuPsjrTgvuvDT\/K0dQVu+uyV199o+6Us0RcsvrqjbDA0PBVrIhMHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQByabA1MucO\/YvSfDn\/MXv\/SVDjETQXfpQ4\/mguZP9j+wI83\/\/OgnGVbUnsiI2dGtBv99uigW92rBTVmpvLbu3JXXafdHn2ZnzKzuooS2pNrqy8Gam3x9u227m8C9cvXTHXUmb0R0E7nJ+\/Z7liXTIZBbWcR1Be5jTugU6ynb58n2bXff11H+D\/fZryNdPE\/\/J3tSU\/+r\/8UBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcmBwODFXgRkRFmLVfFKG9gMs2ore3FH5wxeMdgifpEFhxXTHr\/DkZPq9jPvyfcc75bcJoTNOrwI3lcaod1OmI3xyX4UYkZblt5acsuBmA7Lc0qRjBvGigdhO4Ea+jn29fBr7QU6K1pXn+5Y1tZafSlrkoWbXmmWTb9vv5wRlW2yx4zDpvTjLNeXMuaSu7CAPtn5xJTH2tvhYHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxYHI5MHSB20TSbjHi9tr1GzrEzJR7jW55ffU\/v5lte2d3W17xnF4FbgYPvsBjflX\/Fwnc1LcsjyefWdvWHj+IuwncpF2\/6fWkMF9WJscuv+rajnLrCtyU\/\/Vv7VXavlQ9WBjZuuMzy3jfZm1P7iSmvlffiwPigDggDogD4oA4IA6IA+KAOCAOiAPigDgwuRwYSYEbNxRvvP1Oh5AKUbGYTvmFTgmi7EPc3rRla0deMX0\/Ajc+s1MfbvRlINinxPkigZu2HnTI4UkRmLzKBm0VgZvzVz+7LvunL\/5bsgxfd9uev+jKZLm9CNyvbX0r++kBB1UuG5ctfPCyrN06NrkTmfpefS8OiAPigDggDogD4oA4IA6IA+KAOCAOiAPiwGRyYGACdx2rZgRbxNw5l8zP7lv+cEvE7kbIZQ89ViqQkueSm29rc3Hi8zTR1mJEWn\/cb6dEYHyH+zRv7Xq\/5cMaK2PL02KEbcTZOXMXdBy76fa72vLxeRb5wD579oWF53B+ysc1uPq8bXvLWzuzcy64qOU2xuob48N+fXT2+NPPJc8nn1Sbvb9zKysVX3Ht9dnX\/uvbHbhYHbD0vvTyKwr9jafy1L7JnMzU7+p3cUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAcmjwMDE7iHRSYEWsRX\/Dbfc\/9D2Zq1L2SIzcMqP1UOFuN8yBFf1Vicp9KM2j58na9bvyFb\/tiqHMvVzz3f4dplUPUGJ1zSIOojxlMX7399UOUq38mb9NTn6nNxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB6YPB8Ze4BYZpw8Z1ZfqS3FAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQByowwEJ3B+LMHUIo7TiizggDogD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6MCgckcEvgHgsXKqMyYFQPTd7igDggDogD4oA4IA6IA+KAOCAOiAPigDggDogD4sDocEACtwRuCdzigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6MJQckcIu4Y0lcrZKNziqZ+kJ9IQ6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAODBVHJDALYFbArc4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiANjyQEJ3CLuWBJ3qlaEVK5WI8UBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEgdHhQGMC98aNGzP9hIE4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPiwLA4IIFbwrwWJsQBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBhLDjQmcDeVkfIRAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQkAICAEhMEwEPjfMwlSWEBACQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIgaYQkMDdFJLKRwgIASEgBISAEBACQkAICAEhIASEgBAQAkJACAgBISAEhoqABO6hwq3ChIAQEAJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAkKgKQQkcDeFpPIRAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQkAICIGhIiCBe6hwqzAhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEGgKAQncTSGpfISAEBACQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCYKgISOBuGO6PPvo42\/LGGw3nquyaROD11zdnn3zySZNZKi8hIASEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBKYAAQncNUE\/8qhjsr\/9+y+0fo+tWNl29sOPPJr99d98PvuLv\/yr7OBDftV2bLr++V\/\/+4stLIjff\/\/9kW7mn\/70p2yfffdv9Q\/9tHrNmpGuryo3Wgi88OJL+di\/ZO6lbZUbp3HQVvEsy26\/4868XTNmnt12+Ec\/3rd17Gvf+Fb28ccftx3THyEgBISAEBACQkAICAEhIASEgBAQAkJACIwCAh0C99x581sCICItPxNzfYyYs9f3fpCddMpp2XNr145CO4ZWhx\/\/ZL8cn6VL728rFzHIcCN++eVX2o5Pxz++ve++++5IN3HNmqfa+mdSFiFGulPGpHIsjjDnGd+3b9\/eVnPbTzzq46Ct4lmWXXPtdXm7WMDz4Y4778qPXXTJXH9I20JACAgBISAEhIAQEAJCQAgIASEgBISAEBgJBDoE7pmzzs0FDS\/alG1Hq7+RaNmAKlEmcP\/mmOPasNuxY+eAajHYbLHUpE\/PPGtWKy6z3PS8GHVhb\/PmzW39c\/oZZw0MyA0bN7bwA8NFi68cWDnK+DME6vD2s7OqbWHlbFy\/8OJOodeOEY\/6OIgtLhO4Efa\/s9f387Zv27Ytnq7\/QkAICAEhIASEgBAQAkJACAgBISAEhIAQmFIEugrcuHLwPy\/k+O0zZsyc0oYMq\/AygRvf24cedmT2jW9+J7v5ltuGVaXGy0Gg831bJthVTdd4JXvM8JrrlmS4W8BSdftbb\/WYS\/fTsO43bL787\/\/R\/QSl6BuBOrytU9iHH37YepPF+vPDjz7qON2OEZeNl44TR2BHmcBN9XDFZO1jflMQAkJACAgBISAEhIAQEAJCQAgIASEgBITAKCFQKnD\/9oSTOur6hz\/8IXvjjTczXl3HVYkJH8QXzLmoI\/1021EmcE+XttYRCn3\/j5uwN8j+ksA9SHTTedfhbTqH9N55ly7I57nowsPOGOdx0E3gZs7HRZW18fnnX7BmKxYCQkAICAEhIASEgBAQAkJACAgBISAEhMCUI1Bb4PY1xiUA1somfGDpnbJu9OeM+7YE7vYetL4nlsD9GTYSuD\/DYlhbgxK4sfg3nj\/00CPJ5tjxcRwH3QRuGnzq6WfmGJw\/e04SA+0UAkJACAgBISAEhIAQEAJCQAgIASEgBITAVCDQl8BNhfmQohd37n9geWE7du3enSEQXX3Nddm8+Qsz\/NquW\/d8YXoOYD2IxSC\/V17ZkKe1\/VdedU3Gb8XKVVkdn9e\/+93vWvnddfe9GRaad951T7Zx06ZWeXkhiY0ygRtXBlZX3JX48M477+THLE23OObh82Mb7MAQLMH0wYcezsC410B51OnRx1a09Sn\/ra74sfbB970J3PjtxQf1kutvbPUNHyIF7zph85YtGSLxZZcvbv3uW7osi2XXyc\/Svvrqa3lbPvnkE9vdivlwoLVz9+738mP03dJlD+Q8efGllwp58tL69a08Lpl7aY4hbzpYvsTkVxSaHCMffPBB9vAjj2Z8OHbRFVcW1nnr1m3ZsvsfyBZfeVXLX\/iqx5\/IfPuL6ur3N1lv+oUPgsIfuM3YhE9FoRfeFuUV9+PGxjjOAt7vf\/\/7mKT139IQ2zhgjmKM3nLr7a0+IK77UV76kHNuuvmW7NIFC1tjvK4f7I8++rg1phGyyYO+5i0cC1UE7qeefibH4f\/9xzfs1JGNX3vt9XzMlY03a8Bbb7+dp2c8FIUm5lw4xVxNX+DKijzpIwUhIASqIfD+++8nxyvjiOvX\/IWXteZM5i3uy6oG5uwnV69pjUvuC7mvemD5g9nbb++omoXSCYGBINDE\/WmqYowl7hOvW3JDxn3rDTfe1HJLpmtSCi3tEwLNI6Cx3TymyrE6Ajxfm0bBPZCF11\/f3LoXWrDw8tZ9EM9VdYJpC1dceXWu+XFP9sc\/\/rFONkorBHpCoG+Bm1L96+uIZDFwA3XKaWfkAokXg9jGQrLIMpIBZukRmAhYENq+GM+58OJSMZXB68XHeD7\/Tzt9RqEYWCZwe6td0vkw+4ILC+ucqgP7Yh6WH1h5q9J4\/oknn5rt2bPHkleOfdtinvZ\/r+\/9oC0\/20+MsMfNMf3k99v2UUcfW4irZcoiwwEHHpw8n3z2\/\/lBrYUIS183xh+21YeJ1gfcT9gxRD+459PbMWLwf+HFl\/zprW2fpmgbLsTQ5BiB47889PC8LVaP+MAC1gf+4pCOdJb+\/\/zbv7cedGJd\/f8m602+9963tMP1kdVnn333T\/Z9L7z1bSjbRmS38uFeUbA0xIyDJ55cXThGeesFEaUssGBw+JFH5WX7\/NlmjCGYlwVuIhB6isYjH8VF2K0icCPs+zp4gbysDlN1bN\/9DsjrSzu7BfrW2nfiSad2JG9izn38iScLuU3ZWMmXfdC3o1LaIQQmFAEW\/Gy8cq1j3PgxbMeImf\/uvufeUqS4ZjJX+ntZnwfblNPN6KC0EB0UAn0g0MT9qS8eIwaudZHn9p9xw8fm432jz0PbQkAI9I+Axnb\/GCqH3hHw9z0YkmIE5ffZNcHug3buLDbSoxYYvhbdj5HHP\/\/rlzO+h6YgBAaJQCMC9\/d+sHd+kxRfX2dlEos\/P0CKtlnliSEK3FiiFp1v+3kQSQWEJ+9SxdKnYoS\/lNjgxTQEbR+GIXAvWty9\/bQHzBGv6gTfthQm7CsTuBG3i86z\/VzIi1bvEAWLxDg7n5g0WPj2ErxgXSZwI0IzCftyU9tYbPuQShP3RYG76TEyc9a5yXr7BxU+HFgFa+qOFX0qNF1vrFkjVvE\/dV67dl1bdXrhbVsGJX\/8RfrCi+cWpvT15PsE\/n\/RNmJ+Kjzz7HOFNxcxL6zzUwHBxt80x\/PsP4sYF18yL68v5xSF7+z1\/Twdlo2jHHizxdoIZ8reIHnvvffztJwT55Ym5lwsIKw+ZTHz0yA\/fjvKfaa6CYGqCHiB+xe\/PDTjVzauOMZCXirgVs\/P82X59HPvkSpb+4RAVQT89bzX+1MrC0s8rv1lXLdjGHPommTIKRYCzSOgsd08psqxOgJezL52yfVdrwu8le71BF8Sb6fataNbDO+L3or2eWpbCPSCQCMCt\/\/YpBepEVm+9Z3vtpGd\/9ycMYiwUIwiWxQXvMDtBwsPJAhvuC8gv5gP1nIxnHPe7La6IIzNueiSDPcX199wU\/b9H\/647fhFl3QKWl5MqyNwI4TyUFb2i5bliCI+xImDNoMhrxaysBCxpq64C6kacPNC\/RZetqgNB\/5bvXFX4oPvE9sGR7DDagoXE37yJM1VV1\/rs2htcwMd+xArTMQlyvcWmeRB2rpuNCioqsBtbUHkxrIS0ZIVR6yI7RgxbfUBq1qwOu74E\/N01NXwI\/ai+CDHCHXHap5XreE+ZRGwvvVtYBvuIODec+99LXcasc8Qn30YZL3BC6tbFkywIIoPYsw33td\/L7z1bSnb9jgVvWXC+T6d3z74kF+1xicf4E0trqUsAr2QTF6HHnZky8UM8w3jIS68rF7TaQ3OmzS+HmwzZzL2mGdiGZa2TOD2frgPO+LXZbBN+TFuvqxNxGV9d9vtd+RpwdbPmU3MuStXrsrzpy4IBly3WKih7GOOO6HtOJxXEAJCoBgBrqN+fLPNdYP5i3s5rld8JN2n4XjKhVu0YuXaZ9cf7qvivE0+VdweFddeR4RAfQS8CGa8rnt\/Sqks9kajI+6xzpgxszVuTjrltI57DO5ziwxT6rdEZwgBIeAR0Nj2aGh72AjE532uL6bVoeOgtcXncLwlxIAbWbs2WYxRJHoQb0Pz3Mj9kx0j5tlYQQgMAoG+BW5893iy4q\/QAlZ+\/hhCWwyIbX5wIUB6gSElcEexjTzx9eMHzhG\/PrqtKFwp+ONnnjWr7bj98SLOj368r+3O414F7jyDgg0EQy+wY5HkcUCw8QsJbKf8Qs46u916F8GybsDS3fcb\/4uCT8f2uedf0JEUC0l\/Q43oFwP7fF4pFw5RbOJGvG6oI3AjRMEbH+iTaCGd8kvlrfkpsygMaowUWfZSj\/1+dmAb1ilLYvjm+wwsfBhUvbkYplZ0zz73\/LY6Ryt46laHt74tRdtRJC17I8Jzl20ePFMLMNFKnXHuAwtzPi9eFYuBB1QvusSFuF27drXNdcx7Kb\/diL6+LLbLBG5f97iwE+s4Cv+9cFzmpsRbb7LgaaGpOZeyDWcWFlLW5LhHsDT0l1\/AsfooFgJC4M8IRIGbMeMXjg2neM\/AoqkPvMVl446YtxFT1x8\/95GOhWMFITAKOWXcAAAgAElEQVRMBKII1uv9Kc9hnvMYP6TCMcce35bupptvTSXTPiEgBPpEQGO7TwB1el8IeA2OawPPTl5\/InOeh7y3Bs6JIRoA8m2HGHi28doC5fFtNAUh0DQCfQncn376aZvVMA8ZDAILnsRYtBaFZ59b23YjhbN7C1HgRsAtCv7GDQHIBwYVr63z48OSZs3q07DNhyr9zR9t9GFQAjdWe1YuK2XRhzYfObTj4PzKhvRH97Cy8K\/rIt7UDXWEQqsTMb6zi4KvP+K8D1hD+XywaiwK3kUNOKQeRovOZX8dgbvISouPVlG21Tk1iVcVuAcxRooeWGg\/lvJWb+Ky8cQ49GmffubZHNpB1JsLZmrRhkIZryw4WX3gULwA1+Ft3pCSDRbNrDzisuDTsc2HSIvC8See3JYvC0AW+LiqzVOrVj1uuztiFq6szLgQx4OoHSPGgrgoIOj6tGUCNy6ELG3Zok1RWcPe7+vLeE0Jy9E9if+QrZ+z+plz\/cKlF9A9HszblGd9n6qrT69tITDJCESBO3UNNnz8Q1e83nkrb64\/ZR8qZ0Hd5j\/iOh+vtLooFgK9IhBFsF7vT\/0bYIyNomchPvbtF9Kje8Je26HzhIAQaEdAY7sdD\/0bLgJe4MYIp+iaEA0C\/D0QRlT+\/igaXvkWYRToNZSUwZpPr20h0AsCPQnciFAIeB2vLDjrNwjsyZ6ycvUV9u41vAgQBe7U6\/iWD8esTAZPr8HyIKZ8HwYhcHuxijKxio8Bi3SrV7ROj2lxI2JpiVO+xOM5\/n8dodCXw6vBRSEuHPhXhb3v7tSqoM+ThQpfJiJWnVBV4I6iYSzDi60plytVBO5BjRG\/QBTr7S2vGSNFFzI7D3\/QWMHxgxeEQdUbt0VlAQs93\/fRYq8Ob8vKsWNe4O\/GS1+v0884y7JIxtEyvNsH0FKZIKBbmbFufoErWojHvBBW\/c1NmcDt8e9nfo11GNR\/2ubfekm5KUFQNhzjA3xTc653gcD8U7SIMygclK8QmG4IRIG7bEGIBy0b4\/7tMeYH\/5DFtbEsxHkb13YKQmBYCHgRrNf70\/XrX87HAmOCj4GVheheq2wBqCwfHRMCQqAYAY3tYmx0ZPAI+GfAMmEavcDupYi5nlhAB7Fj3Fdxf1UWELUt\/TgYTJW1RcdGE4FSgRvyQXz\/M0LGOIo69z+wPCcvaRkIfJ216OcFbv86eRS4\/YpRhBR\/tr5e8Xj8z2DldX6s9hCzcA+ASwCfx6AF7ujipciliLeY5fXYIhzZHwVurELrhDpCoceqzGoVa1ufFtc0FvD9Z8fgWlnbOGZpiVPuaizfVFxV4C6zgiZf73YA9wIxVBG4BzVGykRr74KnVzcTg6o3YnpZQMTwfR8Fhjq8LSvHjmEVaOV1uwBbuqqc9IuDfOSxLPAWCaIor3E9t3Zths9xf3PAmPHBc7zsw5h2jvdvXyZw81FR3866b09YecOM8e9mdfbXFasDb53Y8ei+oKk5N350lJu\/E08+tdWPZdczq6NiISAE2hHwAjf3jmXBuxdhrrPAvZ+NfeIy4wk7x8\/bKZd7lk6xEGgaAS+C9Xp\/6t9KgvPdruHRMCV+mL3pNio\/ITCJCGhsT2Kvj06beYa0e6H4nbVYS280hPcFC6edPiPPo9sCLOdEw85ugriVo1gIVEWgq8BtpC+LIXYMVb7EWpQnr81Z8AJ3N6tBRCCfp+XhY1w0ICh5C1x\/TtwepMCNGxL\/wFT2cTFvaRTr2O2\/dy3hsSjariMU+rI5ryz4NniBm4\/o+XzqbPMRyzrBi3\/xZt3fZFxzbbk1FwKV1bNXgXsqxoj3dZ4at1WwHES9wTK65UnVxYuOsY\/q8DaVd9znPz6I77GyYFwgLrOgtzw851l0iGHduudbH9jEz6bPO7UdBW4\/znig7Ra8T\/kygRsx1pc\/DtZc\/m0DcPGWnvjX9+3xrmLAzOPo01XZ9nMuC05+QSyej0DHx0PHAc9uXNJxITAMBLzA\/ctDDy8tkjdkbMx5gRs3b7afGMG7W\/Dzdq\/Xz25l6LgQSCHQxP0pH0o3znMvVSX462CV+4kqeSqNEBACnyGgsf0ZFtoaPgJe4MaIsCx4zcoL3HXvjXq5\/yqrl44JgYhAV4Gbm5vUD99sOKJfs+apmGfrP8Kj3UjVjf2r4k0K3Pi09TdrVeo1KIEbi2bvSgBr2jLL2yp1LUpT5ss31Xl1hEJfZq8Ct\/eR6fOrsl3Xd9MoCdxTMUa8tW7dxQHjyiDqTV9XCWX1r8PbKmXdedc9+RyGX7Ky4Lla9jFKy8O\/teAti5kXvJ95n2\/RdhS4fbpuVvHUZ\/GVV+XtLBO4o79q72bI2jWKMX1nmHg3Jd49CTdnMdg5vcRxzsU64Yorr+74uErMG5\/AZdeBWEf9FwKTiEATAjeLUH78xW86pHAtmrdTabVPCDSJQBMimL9384s9ZfX0RgV135gsy1fHhIAQ+DMCGttiwlQi0ITA7XWcSxd0Nzzcvfu9tvuvup4GphIvlT0eCJQK3Dxs9xrwx+wfHrCiKfvZx7VI8+TqNXmxTQnc3p+u1QuB+fzZczKsGhCzcEkQH3oGJXD7D2IyuRR9MMaA8BMQF8MyLDnGh+YsTV0hqo5QaFgS9ypwH37kUTlXaKfVuyj2bdu4aZNBVCkeJYF7KsaIv5Hywmol8P7\/RIOoN\/zZufOdrtXwH0iKPt\/r8LZrQVmWIVIav1m1LguWjrho0c+fz8df7Rz\/5oYXmznOghwuiS6Ze2lGe3mtCxclZX7r\/VzBvNotnHLaGXld4EdRiC6gxuWVsiXX35i3z3Peuyfxwre13+PY5JzLtWjuvPmZX6wxLhBzXaoitlk9FQuBSUOgCYHbv93BuOMjSd1C0bzd7TwdFwL9IuDv3eLbazHvojcM\/X0D91LdAtd4f23iWywKQkAINIuAxnazeCq3egj4Z51eLbj9N4uOO\/7ErhXgLWV\/beGNWgUh0CQCAxO4H1j+YBt5e7VKa0rgxhetDSZu7HBVkgr4pLN0xIMQuBGofBlVrCy9q4JeLW9T7U3tqyMU+nb0KnAj8Fk+3j1Nqm797hslgXsqxoh3RwGnegmDqDf9v+rxJ0qrEz8wii9wH+rw1p9XtM0HmIyXCM1lwdIRs2DWLXg\/Zn61mzc5LC\/cyfBhs1TwX7Pm5sQHb3HVzVcn5+F+xcosE7j9ImEs05c\/atveUoB+xE2Jd09CW1LXp2HMufhXRzTwZdEXdRfuRg1z1UcIDBKBJgRuPwcw5rr5nqQ9ft5eeNmiQTZReQuBNgSaEMG41ti1nph7qrIQF7XXrl1XllzHhIAQ6AEBje0eQNMpjSHQhMDtdZxu30Wh4v7bKFyLFIRA0wgMTODGx7K\/kXpp\/fqe6t6UwO1fUy97ze6JJ1e31btpgXvr1m1tblKqiGEAhzsYwxMLv0GGKBSW+Ya1OhH3KnB7X8cIUIO0DJ0KgbvI+ncqxkj8sEO3NwfuuvvelgsL3GaY641B1Bv+lH29Gb4jgHu+8fDlQx3e+vOKtuMHllIiqJ3r68UbCWWBxTWf3oSVDz74oG1\/bJ\/Pc85Fl+Rpo9js\/T138x2OX23GnNWnTOD2C3O9Lo74Ngxz2\/uHw1rbuyfxFvS+TsOccyPX4tsJvl7aFgKTjkATAjcY+jeCmFPLAtc\/myeJV65cVZZcx4RAowg0IYLx\/OE5zPNOWeD+z6fnHkVBCAiBZhHQ2G4WT+VWD4EmBG7\/TMU1g2fLsnDiSZ99x8y7JS47R8eEQB0EBiZwUwn8dNvNEQT++OO0NSJpzz73\/NYr27y2jbsQC00J3N6q8ZZbb7fs22JeC8cdgNWZuEmB+5NPPmnDxL8u31aRxB\/cp\/h6RetVfwqvmIAjP17DLxPm\/Hm2jUsTX9aLL71khzpin65XgdtbWJJfkeBE4VicIFZZ+\/hQQZ0wLIF72f0P5BiWWf8Oe4xEK+gf\/2S\/Qn5ES21vVdp0vY1HRR9oxP+zFyNSH0iqw9sqnGHcWL2IeaW9KPh0bN+3dFkyKXl6K23SYsVL4CNnPh\/\/IVafGTcOnsdR4PbcI78rr7rGn55vM9\/xgTZfZpnAfdXV1+ZpGX\/jFBC1rZ3Mu949SdH81sScy4ePWfDgR7m2SJTCzn+8BX\/dCkJACKQRaErgPvf8C\/J5gfmh6PoT522u6XXvq9It0V4hUA2BJkQwSvLGPtxTFb0azkK8Fz4GbVhTDQWlEgLTDwGN7enXp+PUIj\/P9+qiJL4Rh05T5GrxsRUr2+679LwzTmwZn7oOVOCOKzrcIEULAF7Bn3X2uW1k94JDUwK3f30CcSharuKaxFs+mhjSpMCNXyLLFwvIMsE\/UojX6r0AQj5YEMUJhK\/aeiHwwF8cErPq+p88rZ7Ex594cqGrBJ+uV4GbCnlsyHP+wssy+sQHbrgR1qxMJmUWDeoELwzi5sGHpm4yyDP6l8JveOqBeNhjhLqdedasHEOw5MNZcbWVhQNv2Ysg6EPT9bY+5RXwV199zReVsQDiBUnSXrvk+rY0\/KnD246TC3b4C79feIvJrf4+hl9+fDLXnXb6jA7sfV7eVQU+zRj3PmDp69NQHnX0gXnFv0pPGgRe\/2YEabzbJqt3mcDt58d+vs\/g6zqsbcae70trb2qhxOrUxJwby0VciH1KeSy6Wp2IH3\/iSauGYiEgBAICTQncmzdvbht3zJtxIZNF4VNPP7Mt3QVzLgo10l8hMFgEmro\/9R\/P5lqDX3nusXzgPsML4aTr5kLOn69tISAEqiOgsV0dK6VsHgH\/bNSrwE2t0Ir8cwzPmFGjeeHFl9q0BXSGbtpR8y1WjpOAwEAFbgD0gqQRnxsnBE18zPqBxfEosDQlcPvX660evL6P5TjimRfz7DhxUwL3HXfe1Tbwf\/TjfTNEorLfgoWXt3EwfgCT+oEfOJIPVvK+7mz36hrGW+hanuAUX+O1Y8TdJimPcbRO5QY7coE89\/vZgS2uEPuy2OYht24YlsCNxXGsL+3DYnbp0vvbqj3MMULBCK1+EcTqST2OOfb4DnGU46kPJzZZb8rw\/GAxh7kgxWm4mVosoG1VedvWASV\/\/MJL2ZsFhiGx5zHbhx3x68x\/YdrScmzPnj1tpfPRWztuMQuDZ806p8Py246TTwzR+p60pGOu8B9Ks\/2WV5x\/fb5+7Nx731J\/aCy2\/SKntfeyyxeX1r2JOffiS+a19Sn9gEU3VgvcAPIWhdWHmOujXxgpraAOCoEJRKApgRvocL\/lxx\/bdv2JY5NjzIOpRaoJ7AY1eYgINCWCUeVoMGDXHRax4wI6x8ZtQXuI3aKihEDfCGhs9w2hMugDAZ5JmOf59SNw8zwbjavIE\/2GZ57UMbQxBSEwCAQGLnBjsZ0SJ20w+RjxJQpXTQncCAZzLrw4H8S+XL+Nj2IvtDUlcMdXYX2ZRdsIHTGkhKui81OiZMyv6H98hcTKiL6SbD9xPwI39cByNyW8+jJse9HiK4uqXrrfi3SDtOCmEuclxErqP\/uCC9vqOMwxYgVv27Yt8257DNcYMxbMR7Sda3HT9Y7+72Nd+E+dcftQFKrytuj8uN+PtzJ\/1r6uz61d2zaH+GO2zQ0FH7GMAUv6KEDbORbTJ7hAsf\/klQrepYiljTEPurgwsf1FAjf1sjTEUZhPlT9q+3gzyLeB7TKXIVZ\/z4F4fvyfmnOxAGXhKKZN\/WcBrOiVcauPYiEw6Qg0KXBzb8j3H1LjMe5jAbXoA+WT3idq\/2ARaFIE43rO252R36n\/XLu0oDPYvlXuk42AxvZk9\/9Ut74pgZt28AZc9DaQuq6w75prr5vqpqv8aYxAh8DthdgTTz61kaYjWvNAkrIMgOQIufg7TQX\/QbsiIcfOQ2D1A8n2+xjXCql6UAcTJ\/xgj5bG3moV4cMHL4SQzgdETV+3KttRTLb8EILjqyCWH+IXVundxGbLqyxGAI7CTBT5rFzi+JpjzNsvHGzfvj0ebv0nD6wafR\/4MvDrVNfvti\/I9z3uXHzwbV1y\/Y3+UMe2f2W5SGyH9wiRnjO0JfV687DGiG8IDzm8JZBaVWWhAaw3b9niT+nY7qfeqcUruJ2yLoI7jKEq4l8V3nY0pGBH9FlexHHPUdLs3PlOy+rJ77ftk045rVQkAdNzzpudXOxhFfzNN7dm+EO3\/Oi\/ooCrC94WsbQWM76uW3JDa0ERrtt+xkAqLF32mU95rBrHNfgFrjhHl7WpiTkX3+h8Xdyw9jHXn25zTln9dEwITBIC3qUPc2JZ4I0pG2ssHhaFJ1evKRT9uB5i6V3HrVxROdovBHpBoOn7U1yWMY5Sb70xXrjXH8c3tXrBVucIgalEQGN7KtFX2V4D8N\/aSiHjn6GKvlnCc\/rcefOT2gLXFu7ZcOOqIAQGiUCHwD3Iwsgb4ZVBgQiFaGAfWBt0uTF\/3DRQD6wti0SreM6o\/Qc7fEg+8+xzGWJt9CveVH0ph37jI3iIb8MIlIMIjosA2sbX34dV9iDah1DKRxDBsZv7gWGPER50sEqDR1x0eh0PdeudErgNe4QELG7pf9JFf+yWrixuirfeorquWxwsnzZs3Nia77hxqCuQgCn9gqsh5qxeA9yjb8mLvu7GwViO\/xhl0Ucr4zmj9p\/5wy+clflUL6p7E3Mu442FI66BWDt43+hF5Wq\/EBACw0GAhV+bs9euXdd6Y6jufDmcmqoUIdAMAtzbc7+FkQ\/3Gr3eAzZTG+UiBIRAUwhobDeFpPKpi4DXFniWR\/Pr5zm2bvlKP9kIDF3gnmy41XohIAQMgTKB29KMQnz3PffmFoDjbL3cK5a4ojELSOJxfUX\/wYceztvBGwF1Fxt6xU\/nCQEhIASEgBAQAkJACAgBISAEhIAQEAKDRUAC92DxVe5CQAgUIDAuAjfWe7iQMJGXtwkmKXh\/t\/Ejs+OCA1\/u9q\/h8TFPBSEgBISAEBACQkAICAEhIASEgBAQAkJgeiAggXt69KNaIQTGDoFxEbgBFndGJnB38\/k6dh1RUmFeJzO3HgjE42T1zAcksbj3wjZ9iPV2FV\/uJbDokBAQAkJACAgBISAEhIAQEAJCQAgIASEwQghI4B6hzlBVhMAkITBOAjf98tsTTspFbvsg7XTvL\/9xXD6YOk7Bf4jTFicQu\/ExqiAEhIAQEAJCQAgIASEgBISAEBACQkAITB8EJHBPn75US4TAWCHAh4wQjfnNmHn2yNedj7ieePKprfrefsedI1\/fJip49rnnt9p73hi69HjjjTezf\/7XL2d89ZsPhZ5z3uxsx46dTcCiPISAEBACQkAICAEhIASEgBAQAkJACAiBEUJAAvcIdYaqIgSEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBAC1RGQwF0dK6UUAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQkAICIERQuBzGzduzPQTBuKAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogDw+JAUxq5BG4J\/FrgEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxYKgcaEzgfu\/j32X6CQNxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEgWFxQAK3hHktTIgD4oA4IA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAODCWHJDALeKOJXGHtQKkcrTaKA6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOjC4HJHBL4JbALQ6IA+KAOCAOiAPigDggDogD4oA4IA6IA+KAOCAOiAPiwFhyQAK3iDuWxNWq2eiumqlv1DfigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogDw+KABG4J3BK4xQFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcGEsOSOAWcceSuMNaAVI5Wm0UB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAdGlwMSuCdU4N72zu5s14efSNye0P7XpDy6k7L6Rn0jDogD4oA4IA6IA+KAOCAOiAPigDggDogD4kB1DkjgnhCBc\/dHn2ZzFy7K9t53\/+yv\/+bz2V\/85V+1fssfXTnSIvdlV16Tff7vvtD6nT37wpGu63SYeJbcfFuO9ylnzBTeEzI\/TAfuqg3VL\/zCSliJA+KAOCAOiAPigDggDogD4oA4IA5MJw4MTOA+\/6K5uVBmAmWVeMHiqyWqNSyqIW4ff\/Lpuaht4jbxfcsfHmm84ZHVlzZMp8E3im1ZeMXVOd6HHvEb4d3wWBzFPleddFMjDogD4oA4IA6IA+KAOCAOiAPigDggDogD48yBgQncp86YlQtlJlBWiRE0RwnQZ19Yn518+lmt39wFi0aqblVxQsT22P\/DP\/5LdsRvjst+e9Jp2br1G0a6TRK4hzvBDkvgZizZuGKMVeXyOKd7e\/eeDKt42k3M\/3Fuj+o+3LEpvIW3OCAOiAPigDggDogD4oA4IA6IA+KAOJDmwMgJ3BddunCkRJ9b77o3F4e\/9JWvjlTdqpLai8T\/9MV\/GythzdddFtzpQVyVB1XSDUvgZizZogtjrErdxj3N69vezttM2\/k\/7m1S\/Qc\/JoWxMBYHxAFxQBwQB8QBcUAcEAfEAXFAHBAHyjkwFIH7qGNPGFshZzoI3D876JBcWBs3v8oSuMsHcNMTnATuweEtgXtw2DY9DpSf+kocEAfEAXFAHBAHxAFxQBwQB8QBcUAcGB8OSODu4mN3Ogjc397r+7nAffs9y8ZqsUEC93AnEwncg8NbAvfgsNVNh7AVB8QBcUAcEAfEAXFAHBAHxAFxQBwQByaXA2MjcL\/65vbsgUdWZAsWXZXNu2xxtvzRldmWt3bWEms3bH4zu2vpA9mcS+ZnV19\/c7bqqWezt3a9n8xj9XPPZ48\/\/Vx23oWX5OIwvqvZZ7\/Xtr6VPJcBtXn7juzuZcszPpp5wcWXZktuvq1VXrfBhj9iy\/\/dDz5u5f\/Ono+yR59Yk108\/7JsztwF2Suvv1FYruW\/acvWPB\/vDgIXMJY\/8a4PP0nm9eaOd7N77n8oW3TVdS0Mrrj2+mzpg48U4mXlcp7lv\/7VzXneGzdvzW649Y5WXjfdfle+384riusI3Ft37spWrn46u2rJja0+pq9ffm1LaVlgbPV9et1LeVryov2UP3fhosz6wtcT7B5e+UR29ZKbWumuu+nW7Mln1uaY+ryr+JmGj\/AEvsAb6g+PfJn9bsN3fLIjZDMObrtnafbSxtfzMuoI3Dvf\/zADsxtvuzObffG8Vv8+++LLSayoNwKvYc1YMhcljDHbv\/rZdXldYlvrlhfP5\/+O9z5olbX4miUZY4Exun7T6xkfYk2lT+17YcOrGQtfjEd+t9x5T\/b8K5sKz39x42utMqMvfP5bu8vOrzNvpeqrff1d4IvmNMYS1yTmZOacRx9fnW17Z3chD1L9AN8ZPxfOW5Dhl\/6m2+\/OqswVqby0r79+Fn6Th9+gxjbX\/gdXPN66z+TayPX8jnvvz7gvE88mj2ej1Oc8P9h9h3+G4nnmtrvvy+\/luDal7nuL2tLrM0NRftqvcSIOVOeAjWniKt\/3Wbt+Q3Ie8Jj3qmP4PJp45vL5abs6J4aF1fZ338u5VPYMb\/XhedvzFY3Ljvm47rO2P9e2uS5xL4ZuiH7I9ma5B03ibZhNl3jkBW4EtK\/917dzMcxEMYu\/+KWvtETFsg5BDPeCmp1rMb6d4wXBjpXFM8+9oIMkDCY+3lh03lf\/85stUa2ovp\/\/uy\/k59J2xJOYF8JY0fm2nw\/ZxfNS\/724ybnc8B5z\/MmF5\/7133y+9YG8ooUBhB4r5+cH\/6r1QPd\/v\/r1fB\/Hvvnf3+taf2tHFYGbi\/AvDzuyrQyrAzF1vuaGm5NlPv\/yxvw80nFDT739+WzH9vKwCvdiOv7TPiZ5+s+O06\/WphgjssILSxvjY044Odu6Y1fh+TG\/1H\/EeLhEG2P+\/D\/sqGMyFiGqCNxg5Bd+UvmdcMrpudBv9fF9mTrH9iFk2znEvZbn86D\/jjz6t8m2Uy6+6REo\/TlxG\/H+pwccVJjHT\/Y\/MCNNPO8He+9beI61mbcs4nm9zFsxD\/3v\/2YwzmlcK+hr6zsfM76qLODxJk3ZmGcOQTxX\/\/Xff8JQGBZxoOmxbddZfx\/n5we2ub9g0bOoTtovvg6SA4ce8Zv82sX9HvfA3gjG85VrFEYbZfXp95mhLG8d01gQB7pzABHZP9thwFeGG89YPj1GFj59vzoGeTXxzOXrpO3uPJgqjB578qn8msL1o9v9DcZ8\/jqDEZeve6\/P2j4PDNe89wJfHtv\/86OfVDIW9Xlqe3Q5mOqbkRa4F129pG0QRIL6\/1gXpxqIZZxPV7TNDZ4fZEXp\/P4ocGMZEcVcn95vX3r5Fcn6+gejIhFxUAL3uvUbCkVbX3e2ufH1eBn2\/oERMTA1wTQpcDOxesxiPf1\/BFarp8VR4D51xqwkX7zAjdW2z7doG2tsO1YkcGO1aWnKYniFAG31rhMjEPuHmqJyEOzPm\/PZGwucE8vBCrtswcnnvd\/PD25bOOpF4O6nPKs7F9syMdHXGYtsO8\/Hyx9b1XZD6M\/x29w0wg9\/bi8Cd6\/zli9X281cjP2cxvcM\/DcNfN\/7bYSDIvxnnTen0pgnPywOivLR\/mb6VzhOLo5Njm2smIoWvvzcwHbqOiEeTi4Ph9n3\/l6QZxgW9yM\/43\/eaE3VsYlnhlS+2qexIA7U48Cvjz0+H8f7\/PSA5Hg1THk72Y9x\/3zbhI7RxDOX1VVxPR5MBV5YZPvrCG9Hl9XjjJnn5vzj+din7edZ2\/JZ+tCjlZ\/XZUg0+vyyfq0bj6zAjVWun4ARCPlYJa4ysJCbcc75HQTesXtP20BZ9tBjbXkgcuEmY9WaZzLcSUSLTv8BRix+efjxFw0eSthnP3\/Th+XO17+1V1t5\/OcG8vKrrm1ZGPsVU9oWhTA6LyXWctOhEiQAACAASURBVB5i4bkXXJydMevcjNc2unU0r39YPb31OtbAtp\/YLNdZ0Y3iPILnSafNaL1me+yJp7RNYNT\/u9\/fu8NKlzx9v9k22GMpj8jJ67rd6m\/HvSjK+bbfYsRyK4P4oEMOb7kUwYUE4rGfdDn+0Ip28dEL3D4fzjvs10e3XtcEc0RiyiR97EdWArGOpl2IX\/E4+aYEblyQ+DI5D0t03MKcdc7sDj5xIajjSsMw4tUcXw7bPIgjnrGIEjG0tCmBGyzsODF1Onv2hS03Hbj9gBP+OJy1emDRbtzzGDHGbD+WB76N\/ZRn5cZFFuYOLmpcSKlf5H10PcRCjq8v7dt73\/1b\/OJCzrZvM2n9q79cbGkfaX06\/lu7\/aJVP\/OWtVlxcxdt+sj3G9v0MeMDzsNZrk0+DcdT7oW4\/vh0bDMW5y+6suXu5of77NdxXDdgzfWlxoWw9BxocmzHN9+45vNmFPesXM\/jwjBzRLzW+LppW1wdBAe8wG3XIu53ub9ecvPt2WVXXpPF6xD3dbEuTT0zxHz1X7wXB+pzIBpe+WeQiKfXPti2403pGP0+c1l9FNfnwVRh5o3juNcpqkcUw9HiLG2\/z9rkw3MX91Z2bWMbgyPc\/PLmPTqf19nQpqx8xePDtyp9NbIC96zzP7Nyg6ApH7WsEnoiR\/GShwsjOSJedH0AQN4FCHlhheOBq\/qRScRNK4sYv4s+H7ZxB+IHFlbjXswjjT9OPgjbUbiP+Xb77y82uMNIpae+vv4Ii6l0R\/zmuLZ0+J\/26VIPjAh8Pk2d7TKBGxcOvs74k4550+f+wdILrqRNCdyUGfPhP30VX+VMubXAX7xfVKCO9KvPkxVzn4btlH\/O02ac3dZGfPT6fLpt42vKjxG2U37J4YXHku0ocPPams8LNzip8nlQsrwQ\/1NpPI6MsVSaJspjjrC6EHOBi2VxQfR9gejv0xzwi0Pa8sCHlz\/OdlysYEEopqn6kckm5q1Ytv73fuGOcxpjwC9uGraRAwhbdowYN0N+\/LCd+p7CM89\/5toIziI+2AKbz0\/bvfepsBN2cKCpsc19gL\/O\/Pf\/\/DBL+ZVkMcynYxFdXBQXh8mBKHDzgM+9lq8D97rxbUastX2app4ZfJ7a1lgQB3rjQBQOi9yUcF3y96EY+hjmTegYTTxzWX0U98aFqcANfcvf28CDVD0wvvTp\/HeLmnjWjvdYKV0l3q+ljE1Tdde+8eEjfdVU+FzseH9zxAM6wmi3H9Ztlg+rLbh44Iflp+2PMUKSDRZWkPxxb02Klak\/ZtusWPJhFSsriuBVBW5vBYpFquUf4xVPPp3Xl3oz2H0aL3AjTDchbFQRuOkjwxHrDXDx9bJtxHYvGJO3HSOOD4zeMtWnq7pdJnBjyW79dv\/Dxf5qEYWtbVFwjQJ3kbBPfWPfRQHLt+mpdS\/mZVJ2FLjhnNWJmw1ELX++bdMP3iUC1p52rErMAoSVQ4x1cNF5jBGfNgrcLP4Y3vhsK+LIpje2teWDf7hYZhWBu4nyEKN9m1KiA3Xj4c3a5sckFnb+fL\/aHNvEx0gtLX0ay6oqcDcxb8W66X\/vF+Y4p\/F6ZxGe3vKNxSmfDus44wcxC3T+uN\/2cxZpy+Y3f562e+9nYTd52DU1tv0bHFzruQYW8cnfszK2\/QNe0TnaP3ncHFSfR4G76C0CeOmFsHjda+qZYVDtVL4aM5PGAf8MV+SmhGdyuw\/FsMc\/xzWhY\/T7zDVpfTad2uufXYvclPi3sv0Cf1PP2udccFHO79SbR4Y3orY986cMjSyd4vG9jgxF4LbJtFuM+4y6ZPLuF6Ig518ZRVBLreR0K6+KwI045tsWLR1iGd6VSRTevcCNi414bi\/\/uwnca9a+0FZ\/xNmycqILBf8w5x8YuTnuV6AvE7jL6uiP8cFH658oNEeB24ubPg+2\/VsF3BjE4\/G\/\/9hoLPeQw4\/K68R2PNf\/9zcktMPcyvg0RdteHGe7KB37udHx\/IvjqezceMzwJgbjeLyKwB3PKftfVB5+y\/2xIt\/3RXmziGHnxz6M5yDIW1pibxlB2qoCdxPzVqyb\/vd+kfZzGv0aF0E9trwhYhzAGsEf89YJ8ZhPZ9t+3k65Z7J0invvW2E32dg1Mba5bnohsJsLNt7esjmC+JY772mbJ8TJyebkoPvfC9zR4COWzXHjqv8eRJPPDLFM\/Rf\/xYHeOMCb7jZeiVNuSrzbVf8dsaZ0jH6fudT3vfX9KODmraeL3JT4hVFvuNPUszbGd34MYCw7CtioDsPn9VgJ3AhI+OjB2hXSYlHgxeIoyEWLOR5CENFxmVHVaqaKwH37PcvaBhQ3f1idF\/18nXFH4InvBcaVq59uO+bT1dn2QknKRYm3JmZiiJansaxooevddPgHxqIV5Jhf2f+6AjfWwixkrF2\/IQM\/+pqLuE14UaSMArdfzY718u5ZqghUfrKP5fqVclYxi7jC\/ihwV\/HBbnX3QjIrm7a\/KPb+pON4Sp3DAgZuULixYnEAq1RcxRjexE0K3L2U5y+o1Ad3RfiZ5IYuugiKbcQHvbWFPizrJ45ZWuL4imBVgbuJeSu2Q\/97v7j6OY25uwxLP+YZSz6tH\/PRVZJPZ9ve0hPLcNuvuPe+FHbCznOgibHN9c\/P+9FVni\/Ptvm+iZ2Tcmdn6RSLr01zwAvcZW8sUq53l4Y7R6tLk88MlqdicV0c6J8DuMeya0t8BonuSbwxXpM6Rj\/PXOJA\/xyYKgy37tyVcw8ORjclaATGTZ6nvd7S1LM2LlitDIsx7uPbfd4Yc6owUrnD4\/dQBG6ETtw7dPulfAMjlrHi6H3kGmljHAU5Bo+\/QYvpESuwki4jfRWBm49Ixryr\/o\/CBYPezkUwa2IwdBO4EfusTESYKmV6iyVudu0c\/8D484N\/le+343XjKgL3qqeebX04AF+C1o6iOArNXuCmTWX1g8eWbxWxuMxy3ONneVaN66xI+nJ8PxW107sWiuPJzmGRCXdA3rqnrO79Ctz9lsdF1ePg6wofmCNYSfYXW2srHy316etsX3DxpW18qipwNzFvWf0V938xrTOncRNlHIkCt+dglbHYy7ys\/u6\/v4Xh5GDYxNiOPvMRvLtxyF9XTjil8+PZ3c7X8cnhaNN97QVuPr5Vlj8GQXY98wJ3L9emute\/snrpmPgvDqQ54C1ho5GZN5bC0Mdj2KSO0c8zl6+TttN9PMq4+OtLdFNy5tnn5dcTtn07\/D2RXXOqxvFZ24+BmAfGBegcTelrvg3aHi2+DkXgxj9h3Y7nNU4\/UCJJU\/9TghxiEW4JvPVc6lzqmHKnUUXgZnCl8qyyD\/HZYzMVArevfxRlfN38tsfTrxLXeWD0+RVtlwncWN96v8dV8O5H4PbuPk45c2Zbv6Xq732RxXKr1LUojX+tJ1Wu3+fzeOzJp7rWuczlD\/lStn9Q8fkXbfcjcDdVHiIElvJFdWQ\/i2hx8cD7VC47N3XMv\/4HdlUFbtL2O295Dmi7v4tunTmtTOD2HKkyFr1FTRWXSOrn\/vpZ+E0efk2Mba4Zfmx3eysInnlrpfgWn3g4eTwcZp\/756peBe4mnxmG2XaVpbE13TnAB2P99ci7KfHuSRC0PRZ+TPvzq2xHHYN8e33m8nXS9viNV96aN85ENyXesv\/ZF9a38a\/JZ214g7eCbnnC21ff3N5WD3Fu\/DhX1GcjK3Dv9\/OD80HCYGHVBd+0rAjx4Tws4HCH4C20UwK3bzirigim3g2DDURiBMz4cFJF4F58zZK2uiJylP3MsT1pEEF9HadC4ParXUxAvj6pbcQ3j9tdSx\/Iz6nzwJjKO+4rE7i9GEt9EF4RMc+78JKMPuFDbUy2vn1RaK5jwe2tWbr5LqQdvB1gOMVyfT\/D2zK+cAzOW5rN23fkeEe84n9fDryLx+N\/7zc8jif\/epG1izFz1jmzWy4\/+EgsboPiA3+vAneT5Vk7eYWKejKX+NfErT3E3uXOLw87sq0PrQ+KYt9Pz774chvedQRuqy9xL\/OWP1\/b\/V2w68xp8MK4FBcL647Fi+dflufF2ynqx\/76UfgJv8iBJsZ29F2aehMxlsvHom2eOOWM7ovl8Xz9F5d75UATAre\/p+73maHXdug8jQFxIM0B\/9xiBmjRPYkXvsGxSR3D90vdZy5\/rrbT\/TvKuKAP+Wcdc1Pin+ej8E17PGc5v+gZ2\/aXPWt7fLgfYyEXC3FfL7v\/Qgco+tCyz0fb48fFkRS4+YiekY+YV+MYNCmCeQE0CnKp9LYPX80Is9GtRRSlqgjcd9x7f1t9U5bgVm632A\/Apl6h6OaiBBw83vg6L6snE5ZPv2rNM3n6Og+MZWXYMd+\/8UNr\/ou9+MTG6t\/O8zGCpdUXfP2xOgL3\/EVX5vkgpnfDyT\/ExnI971g593Vqcttb2nfzt0i53n9bHE\/+68Q81OA6JFVXbqQMb+JeBe4my0vVk31wecY557fVlwutpUd8sLZEd0KWpmrcq8Dt8686b\/lztN3fhbnOnFYmcPsxX2Us+sXb+Kqp+rS\/PhV+wg8ONDG2o8Ucr4F345d3uRdf4+12ro6Lu\/1woAmBu8lnhn7aonM1FsSBTg54VyR27+j3pb4h1aSOUdYn3Z65ys7Vsc6+HkVMeL6x52a7v\/HuSfwHi63+TT5rW54xxoAVvQr3uVY\/4kVXL+l6zxbz0v\/R5+JICtxLH3wkJ1+3V7O9yBkFuSoEjB9MZBXTn+cFblZ6\/DHbfmnj63l9GSyrn3s+mc7Sl8VTIXCvf3VzW\/2XP7aqtP7xK7Ws0Fqb6jww2jllcZHA3e1jBj7Ps2dfmLcvCs11BO748QKsl4sWXnCL4yfQWO6RR\/82P04+vr5NbnuRDPG6LG8+vOrdj8TxhM82a5NZBaTygz+WjribwI2lfSqfJstL5e\/3+Yur76vrbro1bwvYFPW3z6toOwrcZb7\/i\/Kw\/d3mLUunuP+LcJ05rUzg9q+Hct0q6xt45j8QG93dlJ2rY\/33uTCcDAybGtv+1VvuN8r4s3Hz1vyawvVx2UOPlaYvy0vHJoOnTfZzEwJ3k88MTbZNeWk8iAO\/a7lb9VoC1tr+\/hMxO+LUpI4R8079L3rmSqXVvvEa1\/67JGat7e+ReBaOfdrks3bMO\/5H6PYGR96oLabV\/\/Hinu+vkRS4+bCkCWRlAjfW1paO2Atym7Zsbb3yAHER+Xio8A33295VAcKkP+brgsDlj\/ltBrHVBYtprND9cb99xsxzW25SeIUddwn+mL8oDcuCm\/K9mMhEhFWSr5dtY7Xr6xjF2ToPjJZnWVwkcPMhJ8ObmItzKh9EWy8UefGS9HUEbtJ7YZpysSq3V3A4Tr38B3isjrFcXHnYMWL87abqzz54AFf4\/fSAg2qJrJ6\/lIMVeqocJvy4qunHE+d4a\/Brbri5MJ\/o6zolcPu84piz+vk0vZa3YPHV+TxQtkrrhUk\/zrkx9P3ETZnVL8ZY9PMalPUVF3mfBtcyPi8+QuqPs93UvBXz1f\/eL9J15jTPI3jgcfcWNPAAbvrjfhtBuxtXfHpt996\/wm5ysWtqbHvrJMYtr+OmeMXbfd4og2tNP2\/8pcrQvsnlc5W+b0Lgppymnhmq1FlpxGlxoB4H+JCe3UNiuMe1hv\/EvGWbwrMJHaPfZ65UvbSvXt+PAl6eSzffcU\/ORdwPp+rX1LM2rmTR\/Q45\/KjsoRVPJMuifO9yNupYqfpp3\/hxcCQF7kh0\/OdE39j4+bUJ2yZxL8jx0OCFWG7Gdr7\/YQfZEc7sfGL8ensir3rq2bbj+P1JWXHi39jnw4Dxls3kiQuN02ac3ZYuily+zsMUuBHaff1xr0E\/eCywGvU3taR\/4JEVbWnqPDD6vIu2iwRu0vsVOCaz2L\/U16ehvlForitwU4Z\/QDXMWBTwCyXs9\/9jueTjj5MeS67I8xVPPp35lc+ii0MRfiy0+NehKYePL3gOk8a7A7E2+fFE\/n7FnUWD6LeKmyZvMW75pARu776FC2HKmrmJ8uKXwVOWC3xkwvM6Wrp7ywfahMukeIPIwg+CprWZ\/t4RFrnoWztO\/JvjTuxwq9PUvFXEB+2vf5GuM6eVCdxwxi+2wQEWuvxYpP\/jtSTyUX1Yvw+FmTBLcaCpsf38K5va5nauufjm9mWyAMqCuL8GzDpvTlsan17b4uwgONCUwN3UM8Mg2qg8NXYmnQNPrXux7Vpj150TTjm98JoT7z170TGaeOaa9L6bDu1nocM452O+n1fUviaetTEys\/LQCFPGjxggeP1w1vm6Dyvqk3HeP5ICN4B6wQmyIhhBfj6CF0VLI3MU5M6bc0lOdMuDlR0sRhH0frD3vm3HKTMKjG+8\/U5bGssHa1fcl\/jO9wKX1Yk8qTc+r2iD7SeO9SUvn2aYAjdlYx3s68c29Ue0TGF+1LEntLWfPOo8MHrsirbLBG4+bhjrywX5lDNnJkVo0oKvL6uuwM25CP9RnI71QLT1H1WI5ZJP\/Bij1Q+ugK33nW759+L+JvpW8+V4odn2W1mRn\/7ryJYG8Y03EuCOv2DYceKUwB0XekjHwgHj0yzamigvul2hHDiNjzD8gCE4xHpHH6r0tx+X1jZ82zG2iW2fxYwDzzPb9qvalhbs\/GvtTcxbVp7i\/h\/06sxpZQI3fYH\/N+t3i+EfY565K3KRNKnxo37tv1+FoTBscmzPXfjZR6VtbHOfwHU03mtynMWuuCgvToqTg+YAfDR+YjxUVp63cmNhP6Zt4pkh5qn\/GgPiQDMcSD23Y7RXhm+\/OkYTz1xl9dOxZrgxaBzjW\/Zcc3i+4TtSRWU38az98Mon8uubXefg9OyL52UXz7+sdT9m+61OGLkV1Un7x4NvqX4aWYEb6xdvueoJadtf\/9Ze2YXzFuRkjoIcFjNH\/Oa4\/Lidl4oRrIvccsSP0Nn50S8qFtspscvS+xhBw4Q83zFeSBu2wM2FCQthX8+ibXBNPZzVeWD07S7aLhO4qW8UaGN9mVBvufOz12Oi0NyLwE1dmbzPveDiDo7iVoMVbPrW5x3LtfamxOfYBvvPxG3n1Y0Rcy2fopiHFf8hzTieWPxhpbPofNuPT20v1KUEOi4oPo2dS2y8aqo8hHI\/rnxZfpv68PGkFLZrK8xHltfcBYuSeZCv\/76ApSdmMcPKbWresvwU93eBrjOndRO46QveoCjivucEafhArvqvv\/4TfsKviANNjm2uV9wT+DFctM1CZ9FHmovqqv3icRMcaFLgbuKZoYk2KQ+NDXGgkwPxW1AsqnbDqQkdo4lnrm711PHO\/h41TDDa8fdAx554Slf+NfGszTO4L7doG70GV8ejhpvq0wy3ByZwe5+EWAH00mH4rOV1g5QYwKud3FzhV9fIi+iaKgc\/xIjhls7HWHOW+eYlP8RKRNK4spl6vZTXzXloSq2cUi7l8Vp6qp7s8+4kmhp43qVGtE6N9aD+uG1JWZpSfyx28acUz7P\/3uUL1ri2v9cYqxHrr5NPP6sjP\/oGa9zUYgjlr9\/0emsCszyiT3f\/YY0iEbpb3RFkWXmMCxZPPrM2r3tZ3kzouKuwOvoY7mMhnfooQ7d6xeO43\/mfH\/2koxzqtuiq61r1rzKeeI0txW+4bSK8F5RTrwhRtxc2vJqxeOTT0nYTuK3+TZRH\/2Bt7ceX4Qx34Morr7\/RwS+rAzF58OZHrK\/lw1wV\/W77820b0TIuvKXcUPQ7b1l5ivu7WNaZ0\/xHiVl8K8Ielwa8jWTc8TFjHvc8EsD667ci7LVfuBoHBjG2H1zxeKGhANcaLL3LvtFidVMsng6CA\/7eo9uzj3epU7Rw3+8zwyDaqDw1dsSB37XcSPp7y9RbGCmc+tUxyLOJZ65U3bRvfMa2970ND3G5WqX\/mnjWtm+XpfRDhG181Os+bHy4VIU3Mc3ABO5YUL\/\/+ZAfwhCW3VFIrJo3kzaimuXD\/6rnWjqsKxHeERyjOxNLYzFpcFNBeYiYZa9m2DmjFGOljI9wREtcYzDpjFL9Yl3A+7Enn2rVFX\/n8XgT\/8nXft34c\/X1n\/l3Z8GgW\/nwA+GLNnAhiD6uu51f9Tj85TU1ykFE68bjonzBAX6vXP10X9wAR\/qOepX1W1PlYaGAqwjqvnXHrq79EttPfRHDcTFDP61\/dXObH+WYvug\/\/d1q97a3S+c0yut33iqqg\/ZP7QWexRz6lrHIdYIFuV6vb+rLqe1L4S\/8PQcwwHj2hfWtcc31hg8I93qt9flqWzwbVQ6M2zPDqOKoemmMN8EB9BIvcHcz4kmV2YSO0e8zV6pe2jf6Y+SKa6\/P+Ye7trp91tSzNt\/4QqdAzxo3Ha4uZkr\/2bgYG4FbnfZZpwmLqcEC4cmvBs67bHHhhI27G29Vjh9z9dvU9JtwF+7igDggDogD4oA4IA6IA+KAODAJHOBNQBO4y94onAQs1Mbhj3nvCQD\/1+qD4ffBJGMugftjEW6SB0Ddtkcfm\/hhx\/LSLI9ZHcSvNq\/A2I1FnVdz6tZH6TV+xQFxQBwQB8QBcUAcEAfEAXFAHJhsDmCM5b89xTMofrHFi8nmxbD6nzejzzpndpsGMuoeAIaFjcoZ3hiUwC2BWxe9GhzAjYa34vYidpFv5m5fqteEN7wJT1gLa3FAHBAHxAFxQBwQB8QBcUAcmC4c4BtbfGcpPqP+cJ\/99Jxf4zl\/uvBh2O2YffG81nfavC7CNvuHXReVp3ldArcmPU08NTmAL82fHnBQ2+pknND5z03GA4+sEL418dWFSRcmcUAcEAfEAXFAHBAHxAFxQBwQB7pzgI\/GxmfR735\/776+kSTcu+MujP6M0S8PO7KDfyefflZP36gSpuJdvxyQwC3xTQJsjxy4e9nyDBclB\/zikOxLX\/lqy+f2Pj89oPVqDl8P5sMG\/Q5Qna9JXhwQB8QBcUAcEAfEAXFAHBAHxAFxIMWBm26\/u\/UciovMgw45PMPv8Tt7PtJzaI\/P+CmMta947OHznY9J4nv7yKN\/m8FH4VWMl7AZLDYSuDXxaQISB8QBcUAcEAfEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFgLDkggVvEHUviauVrsCtfwlf4igPigDggDogD4oA4IA6IA+KAOCAOiAPigDggDowDBxoTuDdu3JjpJwzEAXFAHBAHxAFxQBwQB8QBcUAcEAfEAXFAHBAHxAFxQBwQB4bFAQncEua1MCEOiAPigDggDogD4oA4IA6IA+KAOCAOiAPigDggDogD4sBYcqAxgbupjJSPEBACQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgIgWEi8LlhFqayhIAQEAJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAkJACDSFgATuppBUPkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQkAICAEhMFQEJHAPFW4VJgSEgBAQAkJACAgBISAEhIAQEAJCQAgIASEgBISAEBACTSEggbspJJWPEBACQkAICAEhIASEgBAQAkJACAgBISAEhIAQEAJCQAgMFQEJ3EOFW4UJASEgBISAEBACQkAICAEhIASEgBAQAkJACAgBISAEhEBTCEjgbgpJ5SMEhIAQEAJCQAgIASEgBISAEBACQkAICAEhIASEgBAQAkNFQAL3UOFWYUJACAgBISAEhIAQEAJCQAgIASEgBISAEBACQkAICAEh0BQCYyNwH3nUMdnf\/v0XWr\/HVqxsqv3KRwiMJQIvvPhSPh722Xf\/kWjDSaecltfp3vuWDrROmzdvzsv61ne+O9CylLkQEAJCQAgIASEgBISAEBACQkAICAEhIASEwOgi0CFwz503PxeOTFBOxd\/45neyw488Klt2\/wPZ7373u4G38Mc\/2S\/7i7\/8q9Zv6dL7B16eChACo4zAU08\/k4+HL\/\/7f4xEVX956OF5nW66+ZaB1umVVzbkZTE\/KQgBISAEhIAQEAJCQAgIASEgBISAEBACQkAITCYCHQL3zFnn5sKRCcrd4u\/9YO9sz549A0VwugrcixZfmZ151qzWb8PGjX1hyPmWF\/kqTF8EJHAPR+BucnyOCxs\/\/vjjbMbMs1tzCTH\/FYSAEBACQkAICAEhIASEgBAQAkJACAgBITCqCHQVuP\/6bz6f+V+R2I1F97vvvjuwdk5XgRvrW8O0X8t0zre8RsWqd2CEmPCMJXAPR+BucnyOC2WZx20eIR7kvD4umKieQkAICAEhIASEgBAQAkJACAgBISAEhMDoIlAqcP\/2hJOSNd+9+71szZqnMi86I4R8Z6\/vJ9M3sdOX1a8Q3ER9msqjSQFNAndTvTL6+UjglsA9KJZK4B4UsspXCAgBISAEhIAQEAJCQAgIASEgBISAEBgEAj0J3L4ixx1\/Ypu139q16\/zhxrYlcHeHUgJ3d4ymSwoJ3BK4B8VlCdyDQlb5CgEhIASEgBAQAkJACAgBISAEhIAQEAKDQKBvgfuDDz5oE7gXX3lVaT1ffOml7K67780WLLw8w7\/tPffel1XxPV0kcL\/22uvZvfctzebNX5hdt+SGbOXKVaUfvfzTn\/6UvfDiS9nzz7+QUZdugTSk5RzOLQqffvppK931N9yULbxsUfbQQ49kb765NXkOAhJ58vtf\/\/uLOX6XzL0031+lblaXl9avb53H+eZagHytDOJ33nnHknfE77\/\/fvbwI4+28COPG268KXtsxcrso4\/6873bJNZwxNrzhz\/8IW\/D669vzm6+5bYWnx5Y\/mAGH6qGOn1WlOfWrdtaH1qF9\/B51eNPZLzhUCfs3PlO67yrrr42I5\/Hn3iyax51Be7NW7ZkLIBcdvni1u++pcuyzZs316lm9tbbb7faSjupJxzZtXt3nkeTH5n84x\/\/2HpL5Kabb8348O0dd97VGq82But8ZJKP4JKeeWfepQuyO++6J9u4aVPmeZQ3IstaLjmMa72Mz7rl+bJtuwlu0jfMQ1dfc11rfrz9jjuzdeuetyI64i1vvNEaY48+tLJPUgAAIABJREFUtiKfR5hP+G94lHFm+1tvZQ8+9HB26YKFrTFJWf3OIR2VrLiDecDqXDb3WXZw29IzposCbQJHrjfgSnv9GCg6z+8fJZx8vbQtBMYBgUGMbeZsrt3c+3C9IV616vHSe8mIFdesV199rXV94Tpj97ZF15l4vv4LgSIE7NpEXOWbGPDQzim6H22C803cpxS1WfuFwKQgsH379uR45d516bIH8ucWdIE615NBPdtPSr9MSjsHoa+AnekjV1x5df4MinbBvZKCEBg0An0L3FTwW9\/5bi6I8FGyVLj\/geXZ177xrTydCbEW496EB4yiEAVuBLtf\/PLQZH5\/+\/dfaIm1qbyiIM9NXlHgQmL1I07dKCLgHHPcCW3p\/Dn\/\/K9fzhjQPvAA5dMUbZfVzedXdL7fP\/uCC\/0prW3ac+JJpxbWBd\/r9GevIlWTWNOn1h7EymX3P5D5fXaMGKEV0bgo9NJnMS8E0gN\/cUheJ18+2\/\/n3\/69JQDH8\/x\/2oHv+niu\/ScPFlZSoarATT0POPDgwjL2\/\/lBLbE3VYbt4yYpvqlhdSS++JJ52SeffNLC3fbfdPMtdnrtmIUK77rH8iTe63s\/aIm0VQRuxq9f9PH52PZpp8\/ouGHsdXz2Wp4HqAlu0l+nnHZGYZ8zDyN8x+DnWMMnxuAfAwsyfiEgnnPq6WdWeiiP+fbzf9\/9Dsjb\/5tjjuuaFePA6s2cGAN4lV2\/Tjz51K4fWh5FnGI79V8IjDoCTY5tHrRYsC26l2A\/x21htQgbFnxt\/kjFGD4oCIFeEEBE5l7ceIVBR1ngucGnZ2HfhyY438R9iq+TtoXAJCNw5FHH5OP7mmuvyzDcKnoG4j606LnQMBz0s72Vo3h6IODvf\/rVV0Dk5ZdfyfwzlV27LEYXu+a6JdMDPLViZBFoROD+3g\/2zifns2ad09HYC+ZclB83ghfFWLGmghdfeJjwA7IorzPPmtWRVZOiKxaPZaKHrxeWsxZ6FdDs\/Bj7coq2o8CNFRQCalF6v582YnVYNzSJte\/va5dc37XeCG4pYb7XPvNtx3LZP0B4rOK273efx5Lrb+zaBsuL8mKoInA\/8eTqSvWkLfjUTwUsCKpw\/NDDjswOPuRXeZt6Fbir9C248JBn+MCNGHhLomzxwM4lZqHCW0X1Mj77Kc\/q3gQ3sQT5f\/\/xjRwb3864zaq6D36OjWntfxS4eRPHjpXF3Kz3Mof4+tXZxsra6gO\/yxYL33vv\/Twt58SxgMBleZXF4I4leCqMKk6pumqfEBhlBJoa2wiHXLfKxrQdO\/zIo7Lf\/\/73HbBwj8ExS1cWY5BRx\/quozDtmFgEvIHBfj87sBQH3sb0PPT3wU1wvon7lNIG6KAQmDAEvMDNszoCoB\/DqW3e3E6FYTzbp8rVvvFFoCl9BQR4qzXF19Q+eJ+6rxpfJFXzUUKgb4GbG3Yv9iFQ+YA7gEhsVnauvOqalquEffbdv+N4ypK7SHz5\/g9\/3HJPgeidyitaLzQpuiL2+LadN3tOywodYfGiS+Z2CE32qjwrZAiA\/Dx23MTafgS8blZDhvMtt97eOs\/fBJOv5UXsL4aIPVEEQ+w+Y8bMlnB40imndVxgwbnuayVNYu0nYMOcNwe4Gbj7nntbXIqC\/ZwLLzaI8rjXPrMM3njjzbY+py7U48KL57ZeSUYcjXWNFje4NLA2EJOeD7ryWjRtgUeeF6TBQtqHbgI3YmLMA8s3xDpc6HgrOPInbeoNhWilTl2xiKWuWPdHzK1dcK5u4JVaO99i3uzACpuFr6IVYeoUwznnzW7Li\/ljzkWXZLhmwZoOPlsZxIxXC72Mz37Ks3L75SZzsX+bhnbZGGFeRoiJnPBi7oqVq1pzBvzw2PDf5hLclVjAHZRPx0II8z3fYbjt9js63mwpervH8msy5qHe1y1lsW7lUVdLy4OFn3fjzRr4gSPusM6fPacDb3jmz6eMUcbJMFAsBMYFgabGNsYYNu6JGfu8bcK1jTdgosjAdSgG7j98HgjmvIH07HNrW\/e48TrLMQUhUBcBrtOeZ6l7NcvTv1HKtg9NcL7f+xRfH20LASGQZV7gtnFu1yPcM2LtGvUNnmFiGNazfSxX\/8cbgahZwEF7dqyjr+DC0vhrMdcLnq8x6jvsiF93PINiAKsgBAaBQN8C96Ir2q3bvI\/XPXv2tJEZcQALwxhe2bCxbVAwsUdLl5TAzUNEDDEvBq4XB5sSXbFisAFMnHpwQcj0r+6nHpD8a0j4SO4nVP3IJP4hfd0R51LhmGOPb0uHP+Q6oSmsKTNOwNy4RyGJB1\/\/NkEUPpvoM6xnPHb4f4+BevgFBIQ\/HxDeLQ\/GRMqvMXX1YuTqNWt8Fi23N5YHHIrBW1OT7snV7eeTPop3LGz4gOW4lUHMhSq12nr2uee3pSNtLwI3YrYvLyVKbtu2rQ0X0sd+xkWHxy71JgftRMyw8n7043190\/PtKuOzifKa4CY+oa09xIzzGFig8WOJ9sVxVPUjkyx0WHn0XcpKev7Cy\/I09MmHH30UqzSw\/\/5Bv8xNiV84YRHEAuPYz99sv\/32Djucx7POPjdvI3jge9eHUcfJ11XbQmAcEOh3bOPL1OYuYq7r8Z4Ta1d\/P0E6rj8++PkhtYCHUYC\/Z+A+VkEI1EWAa7RfcIlGE5Yf92f+3gdjGwtNcL6J+xSrj2IhIAT+jEAUuHlm5LnCB+aAmbPa7zWx1vZhWM\/2vkxtjz8C\/pmQ+5xe9BVQiIswvE0UA8+AXh+hPL4ZoSAEmkagZ4Eb8TJar8QVRVYeIa\/98EFaFBAFLB0xH\/jxIQrcWNAVhWg17gdZU6IrgqGvb0r4o35cgHillh8WqjFUEdDiOUX\/qwrc\/kaZCSk+2Fn+LAx4Nw8InHVCU1hTpp+AEdOK6uwtm+mfDz\/8MK9yv32GVbTvc4StohCtkZ9+5tk8KdvGCayFiwKCs5WHn2sffDujwM2bAnYeMRaqRcEvUPFg5Hl81NHH5vmAf5H7Bfoijs+6Andc+S1b1WVu8O2jbj5wATV8eYOjiCs7duxsywdBI4Yq47OJ8vrlJvX2Nw28zVEUWBj0+MV5qarA7a3gvTDsy0Xg4SM51h8pEdynb3Kbh3trJ9xOlR3dk\/jFJurtz2fxNBVoo\/8eBIK5D6OOk6+rtoXAOCDQ79jm2ws2thET\/H2Cbz9GCv5+iTegLHBdsTyIvZhoaYixtuU6xByYWrT1abUtBIoQ4BprfGPRJBX8B6JZfPFvXTbB+SbuU1L11j4hMMkIRIHb3vaOmHCd8gtYXtsgrb9WDfLZPtZL\/8cbgSb0FRb\/7fpE7N+Kjuigi3keoyUqCIGmESgVuCEgYmL8easVT+golHgrUra7Bf\/qG9aVPngBDSGnW6DOVjc+AGahKdEVsc\/yJ47+bK28bnEVAa1bHna8isC9fv3LbfXmYwBlIb5ejyhYNTSFNeX5Cbhs4owPnbTXQr995i1kGRtFwqmV98yzz7WspLGURjSsG\/yHq7gB8qFM4OYVa+NmFH99HmwjzlpaYntIp23+AoRLobLAV5h9PnUFbsaPnV8FW+87tVsby+ptZRLzYZcYmhyf5F1UXr\/c5IbB5x0tO2K7vCuTKE5XFbj9B2rBKWXdHMsd5n8e7v21KiUuIToZbnEB74hfH50fY7sseGGB\/LxP91HHqaxdOiYERhGBfsY2lnD+foLrZVnw7qeiEYd30cXrt6lFtLK8dUwIVEUgGgGk3JR4N4VeNGiK8\/3ep1Rtq9IJgUlCwAvcRW+TGh4ct3tW\/82yYT7bW10UTw8E\/P1Qr\/oKXDRe8gzvF1dTKHkDWZ4fFYRA0wiUCtxG1m4xYnIUt6motygsGzTWKG+xyuqjD17gLnvd3M5B1LZ6+wtGk6KrXy2lLHDAVxbiEjeUVUKTAloVgdtbJVJnb7Gbqm+0ckVYrRqaxNpPwN4PcKouXtSKbmz66TPv0iI+6KbqUWcfQjMW4liJYuHNyrwXIesI3PhSN+6DG1biZT9LS2yvvu7c2W4FjuVOWYgLC3UFbnyeWj2qYHvpgoV5etrYLVC\/Xbt2tdzBMFfxNsmy+z+z0KXsJgXuXsrrh5v3P7A8x4O2cLNb1ueeW3E+rSpwxzd0uKlh3sWXd5FFZLd+avq4\/8BxbCdlHXDgwTluUejy1y\/eZijDMwrcm7dsyZsyDjjlldWGEBgTBHod2wiDdq0hxvVa2dj2Ajf3Fj7w7QyfF3M4C4Z8h4BrgIIQaBIB7zLH7tUs\/+iexC9yN8n5fu5TrK6KhYAQ+AwBL3AXuQy11N7lHS4ALQzz2d7KVDw9EGhCX\/FvCHnNrQih6LWhmyBelI\/2C4EiBPoWuPE7WCTmegtQJt9uAXHYHhailbYXuP1rokV5+rz86lCToitCmW+j1Z2YCYMLEe4Uyh50hi1we1wixkVY+jZW6UfLp0ms\/QTMw2hZ8FZVUeDup8\/8GwlM5v0GBFYsbrwg7znkt+sI3N662edRZXve\/IWtZoGxT4843C14dzZ1Be5fHnp4Xl4VbLHGtfoVCdwsGODaxVs82DmpuF+Bu9\/y+uEmH5FMtanKvriYWFXgZl7zN9uxLER05uo6b31041jd496ynXnMW1ji49DXGXclPvh5z6ersu1dEo0DTr7d2hYC44BAr2M7vm1UZTz7NP5+FxcmuDjxx\/02riRY4MKfv4IQ6BcB\/3ZedFPiF1kxtvGhSc73c5\/i66RtISAE\/oyAF7ivufa6Uli88Z4XuIf5bF9aQR0cOwSa0Fe87lDlGT5+L6+KxjB2wKrCU4pAqcB9+JFHtfwHsvpvP0QcPxjKVmr8jT7uGroFb4UYLWW8wI0\/w26hKK8mRVfqwCD1vop9m22btnjBw9d92AI3AqbVa9\/9DvBVKdz2lozRaqTwpCzLmsTac64fgZv69tpn4GXYmRBc1v6iYzzs+hsay7MsriNwI1iW5VV2zF5rha8+nX+oL2rXgb84JD+nrsDt64x1drfgP5iUErhZWKorUPYjcDdVXq\/c9OPa91uV7eiao6rATR+x6o57GT9HpMrE0rFsoa9bf\/dz3Lur8m5KvHsSbs5iSLWj6j744MM44OTrq20hMA4I9DK247Wt6pi2dH6RDIy4N+Z7HP4exdL6GAFCQQj0g0BclIV7Frx7Eha8fWia873ep\/g6aVsICIE\/I+CfB3sVuP0zwKCf7dVv0wsBf+\/Sq75S9xmea5e\/P\/JvvU4vdNWaqUKgVOBGlEgFv1IIQR9Y\/mAqWdsNP2JCt3DZ5YtzwmMV44MXuOMH93w62y7Kq0nR1coiJl8+bom\/VW9B7Adwyr3HsAVubwHCq4bdAsKMbwP+pKuGJrFuYgKO9a7bZ\/4mJOXuIOZf9N8LwWALX+DNwssWtV6XxkoeFxreOraOwM3ClPUZuN19z72lP17RtjQbN21qVZuvGlsexHxAolvwXK4rcPs6l30g0epw731L8\/rRRh+wMPJ1Z5uPAJ4\/e07LhRDjFBcw8aGvV4G7yfKsHXW5ef0Nn\/ldp73Wn0Ux8zE\/jkf3M3UEbqsvMTjMnTc\/8wtBvh\/ogyoLJT7PJraXXH9jzgc\/br17Ei98W5l+zmH8FWFp+\/04wrKzKIwqTkX11X4hMKoI9DK247WNeyIbw6kYgwoW9jl239JlhXMYC3hY0SJ2e+Hdz4F8V0NBCPSDgL9XMoOT6J7EC9+UNSjO171P6afdOlcITFcE\/LNlrwL3MJ\/tp2s\/TGq7\/LNOrwK3\/2ZRlWf4deuez5\/LuEdi8VZBCDSJQE8CNzdTXsRlO2Wd51\/d7OZXikZ5QS++fucF7pS1XQTF5+VXM6PoGm8EfT7bt29vG4Blaf15bG95443svNlz2s7nxjQGLwriQ7ufUMUHNwK1f+DC93NZoB0+Pb4lq4YmsW5iAu5W7259NnPWuTkWcQGmW952nI\/PeTx5xazI9xRioaWtI3DjNsjOi+4nrB7d4ri62s3v+SeffJKXSdl1BW7vNxzXFt2C978aBe4LL56b14VFHN46SQXmMcOJuFeBu8nyUvVkXzdussjo25Kaj4vyjvt7Fbh9Pp9++mnrA6v+GkD9bAHFpx30tueyuSnxlnDwJ4WXr3s\/b2yUtW+UcCqrp44JgVFEoJexjSsiP1ey0DmIQN0Q4P29C9tTscg3iPYpz6lBwLsiseckvw9XejEMi\/Pd7lNivfRfCAiBrO2N3l4F7mE+26vPphcC\/h6lV4Hb6w7\/X3vn8itZVcVh\/zMTByQaBk6NLwwJiTExBB8DNEgQGiQqNrYKIgjYgEMVB4pOpVukEboDAtoJ9jt0d3rQ6TDoQZnvxlWs2rV3PU7tW11V99vJzam655z9+M7au87+7XXWWWQOz+Jsvg\/bLaK2ZhMIDBK4qXj2oMRIa4NyfmRu3ovjEBiy2BuhEgJSFrgJ+YE41UrklQX4LK6zL3cqXsbWSjxmno9lwrJsyp2eQaRMuc0E3V8lZYGb9tfShQsXJ9r02j9erx02\/h\/eS5kBovWiqSfrHgPwovVuXbPypQhXr16dmSXs8Nh67jdHR7x9nvS3V4+NeZZheMrM6DPBfhmB+w8v\/3F8HoJeS0Avyyu\/U78oH0F5Vnr9xInxsZyzrMBd\/tjNs7McV7vsV9l7LjycanXH9qN9bOcJ3K3+2bO8Wj3z\/1q2ee7c+Ym2vPvee\/m0pT6XAvcqMbTLl9TiaX4rUo4Ph7d2Dk8C01q697vfGzPF+3w\/06Zw2s82mrcE9oPAkL6dX5R39IWX9qNa4zzLxUe8aU0SGEqA++p8P8y8JM+1Wk\/UrtPmW\/cpQ9vseRLYZQI9PLjXObff5WtxENuWf0+GCtx5TsV8+saNGzNR8tR6zL\/LMJkzT3SnBBYkMFjgxguFVZowUIS069evTxSbvQo47sWX2i9PQNCOvNgSYzenLHCz\/8FDj+TdE58JRZDzKj10siCVX9IwkcloNPWofRa4aQse2fzhpdNKPNYadYFRmXLsWmLZrpJ4aeGssiLv3H5ueluPhpTx1oeIPLmsoaypd48BeNVrhrd78GWLTTLZqKVyUhueq\/kazRK4OT6XtYzAjZ3mc1sCHvWmTQgEPOXAH7EVIx16+NGJfHikqJbwDsqTJ8peVuAuRVW8kFqeblzH3L5S4M596ne\/f7lW5b28y9j5NYE759Xqn\/mYoeWtaps0Mr\/kkxsGnhZopR89dnh8zQnZkhPhNTLfcizm2A8\/vDwe\/3haJhZwcj7xOS82thjGsfu1zS8lpb45PEmtfdSDMDaZA+91aCVuCqMPkXeMC9vGqdU+\/y+BTSUwpG8TRiT6NvdlZ86caTaP8TH6dnaWIIxY3APyGxt9vsyIhfAoi21rvCnP87sEWgTy04QsGmPD2BbblvNPD5vvcZ\/SapP\/l8BBJdBD4IZdnm\/v99z+oF6rXWx3D30lPxXLbxG6QmsOnx39OPZWzQt38Vrapo8JDBa4yaL0gMw3\/+znRit7KGPIiAbZo5RJQbny87kvfPnjGv7\/UylwkxexwPPNHHnxxnr2xR+PmefyyA5xPPbTsUsvbh4bpy1xTGyzwM1LXOL\/bGteE1euXJ34wam1666vfm2cDwLVKt6SZUwjYsLWJl1M2HLdqUNuG4yoR\/6x5Pjjf39t6rrM+0cP1pTRYwDucc0eefSHE+wIrVGuVCISx4QDbghekUrxmScfyh8BFmTy+eSxjMBNWdmjh\/NZXMh9hWNYwGDizn7+YEyokUiIdrGPLYL8Bx\/8N3bvbRFDsw3H8csK3GR2zze\/PVEeoT9yfejHWcyIsqh3Ttl7iPGn9LSHQw5hFPnUBO7ctlb\/7FFeD9ssx1EWpEpPeF5wmie6tL0UXLDHYML2vvsfGHFeTowruU8yVpQvX+N4BP+cF6LQrUhlfaNOLE60Eu3J4jznHDt2fKq\/vnXy1MQCDzH2I5XlbjqnqLdbCWwLgbKPLdK3+R2L49giBvAUTE6Mg+X9ZI6h\/Z\/TpyfyqC0kM4ZkTyXKKsfSXKafJbAIgfff\/\/eE7YUtP3ToB83Te9h8j\/uUZgXdIYEDSqCXwL3Ouf0BvVQ72ew8lxvqwQ0Y5orxW8S2nMNzzDv\/endC30DrwMHNJIHeBFYSuKkMMeCyQZ8\/f2GijsRszvv5jEHjoYkAUwp57K8JTVngzp2R8xEUWnm9+dbJifrwpfQsp0zqg1cEPzSlN2rUP4vAiJpl3REvEMZfePG3eyJ6uZ9yy1SKTZRFaAo8g5i4LZPKOHvkBauv3\/2NURnfO3swRvuoP8Jfjj0b+1ovHJ1Xvx6sKSNf86EDcI9rxuS0Zh8Ixfd+5749ETiYxfbEiTcmMME59rGlbQjS33\/o4Sp7jllW4MZWM7Moj\/5KWWW\/ZX9NlM7ibeSB6Ed9au2IY2p5TUCofEFwj\/PzFpGZ\/pn7U24bn3N69djxqXxYXMJrGbvP+eRyauPOIv2zR3k9bBMGecEi2sZ14prDMHNjf2lXwTF7g0c+sDvy8yfikBEv+419bMmbcYvVeG5s8pjNfupRLuaMM1vDh5ot8zLiWYnFptzGaCcsGRPxlC\/3l+Fhto3TLB7uk8AmEhjSt596+pmpvhu\/bTzdUzpnsK98Z0kOlcU4wDH3P\/DgXsg+fm\/KPEonkE1kaZ22g0DtPr31lF20aFWb73WfEvVxKwEJ9InBHRzXNbeP8txuP4E8Lxyqr0CBKA45tGnMjdAbmBvW9uFEYJLAfhBYWeDG+zmMmC1GXCa8LluiUj6XY97455vl6Xvfs1hCh6gJCzkvPpeP3ueMibtYHl9+Lz0is8BNXghbeWAoz4\/vtIsXQNQSXt4tNjWPyFoe+X\/liy2jDmVMc25UWRiI\/bO2CLdD6hL16sE6c15lAO5xzS5evDjKYSla7LiutUUNPGlqInnOh\/A\/Tz\/z7Pj6lEIk\/SSOZxJdS8T6nFdO5PHc80drWex5fee3I8fx5RahkIWU+P8QgZsK0K5Wf4i8aRNPE8R3bCMnRNQjP\/vFeH8cV26JqZ3Lqgnci\/TPXuX1sE08tmuLF2Xb+Y5I21pEKx8hi\/NzrDTEHsaG2Ddri220QiHla7efn\/FUL+s4K7RK1KUMN1Tmkb+Xi1nksW2cot1uJbAtBIb0bcbtMjRe7sv5M8I14YbKRGiTcqE3n5c\/P\/HkU83xtszX7xKYR4CF5GxfrfvAnE8Pm+9xn5Lr5GcJHHQCzO+iL9feZ5b5sIAax9bCfq5zbp\/r5eftJdBLX4EA+gb3S2Gjs7bzbH17iVrzTSAwJXA\/dvinY8NkIF0klY\/714QiJgJ4qNaMHZEJDxw8OFspeyYiOBBGBAEwC1SRNx6feI7PS8STq01OuFFE4CEkQuTJtowxTv6I3nhH1lamEOIQ\/C9dujSzKmfOnh0hTOdBhvKGiMoIVq\/85a9Tnpy1lwTSPkII1Lw1KR+vV14m2iOtyjrzjXjWrXplr6m3335n6rAe14ybCOwv1ytshetO\/CmuaysR2oNjavbLtSJ\/YrtHngiJOREWIfbhydNKtBVv2tK24lzqkONu1\/LBThCsaz9aCP28jJWErUe+rVjUtfzL\/zF+lGNK5Ms4gVCaY5RzDWqJBaqalxN9PoTIzKV8RD3yXLR\/9iivh20yBnC9am2HI+0nVNS8xGJDKWDXwiwRVz6\/jyGuVZQ16x0F8+rQe38eG\/hNWTSxWFQ+fhftpA\/jrTnvMbtt4rQoF4+TwKYQGNq3+f3KoaiiX7Plt5ywDNxvthLj7ZO\/\/NWUtzbnMzYwzsTvTSsP\/y+BZQmUsd1rYlcrz1Vtvsd9Sqtu\/l8CB41Avs+ed7+cw362HJPWObc\/aNdqF9ubdYxV9RX4MEfnnijnm++r0ArmPW20i5xt03oJTAnc+108oi2CEaFDEFAIadLyIlykLgzk5EFexPYhTMeyiTi\/eAAhGs4TKWbljfckwjqiak0Mn3Uu++BA+YifPeI04jlIXuSJ58asdO3atT0GTMR4xJ4b2P1IvVj3qtuq1wz7Y2EGe2bAHsLt7Llze\/bLyucqfWEWE\/JloYWQC9g5b9xetqzcVux8SFtn1bHcRx\/AW5++vQob8qFPnjx1aqU6L9o\/e5W3qm3Ck75P22GISDtLqCn5x3fO2RuXrl2baTPYB2N7XC++b1Li+uUFjVlP+LTqDQsWa+nv9KMyvnvrvPz\/TeeU6+pnCWwDgR59m\/GWxV7GL+4H+b5s4v6W+MiMD4s8HbJs\/h4vgSDAPVEWDeY50sR5edvD5nvcp+Q6+VkCEuhHYF1z+341NqddIZA1A7QH5qA9tK1d4WM79pfA2gXu\/W2OuUtAAhKQgASmCRAmKgQBPCs\/+mjyxZnTZ\/gfCUhgGwjYt7fhKlnHngRy3HmeQDBJQAISkIAEJCABCYxGCtxagQQkIAEJ7DQBnu7Jj8sdfvzITrfXxkngoBCwbx+UK207IcDTCoQhjMVatsTFNklAAhKQgAQkIAEJKHBrAxKQgAQksIMECBHAy4mzsI0YgPf2rX7h5Q7itkkSWBsB+\/baUFvQhhDgheVfuuPOqfe2fOXOuzakhlZDAhKQgAQkIAEJ3HoCenDf+mtgDSQgAQlIoDOB\/CLS8HZD7OYdAyYJSGB7Cdi3t\/faWfNhBPJLx+P37PNfvGOl94oMq4lnSUACEpCABCQggc0loMC9udfGmklAAhKQwEAC586dH33yU7eNbvv07SNilP74J4+PLl++MjA3T5OABDaFgH17U66E9VgXgT\/9+ZW937PP3P7Z0d33fGv062efH928eXNdxVuOBCQgAQlIQAIS2AoCCtxbcZmspAQkIAEJSEACEpCABCQgAQlIQAISkIAEJCABCZQEFLhLIn6XgAQkIAEJSEACEpCABCQgAQlIQAISkIAEJCCBrSDwidOnT4\/8k4E2oA1oA9qANqANaAPagDagDWgD2oA2oA1oA9qANqANaAPawLpsoJd6rsCtwO8ChzagDWgD2oA2oA1oA9qANqDUUefEAAAA80lEQVQNaAPagDagDWgD2oA2oA1oA2u1gW4Cd6+MzEcCEpCABCQgAQlIQAISkIAEJCABCUhAAhKQgAQksE4CxuBeJ23LkoAEJCABCUhAAhKQgAQkIAEJSEACEpCABCQggW4EFLi7oTQjCUhAAhKQgAQkIAEJSEACEpCABCQgAQlIQAISWCcBBe510rYsCUhAAhKQgAQkIAEJSEACEpCABCQgAQlIQAIS6EZAgbsbSjOSgAQkIAEJSEACEpCABCQgAQlIQAISkIAEJCCBdRJQ4F4nbcuSgAQkIAEJSEACEpCABCQgAQlIQAISkIAEJCCBbgT+B9Ic\/0pAAk\/LAAAAAElFTkSuQmCC)","e55e0a1c":"# Outlairs check","d3488ab0":"## Check the normality of the features distribution and make conclusions","c527234d":"# Tuning parameters","46dd1429":"# Notebook tasks\n\nThis work will be especially relevant for beginners, as it covers some basic techniques and working out the task from start to finish, which helps in understanding the overall structure (picture) of the project. I am doing what I lacked at one time.\n\n**Russian**:\\\n\u042d\u0442\u0430 \u0440\u0430\u0431\u043e\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u0430 \u0434\u043b\u044f \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0438\u0445, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u0430 \u043e\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0430\u0437\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0435\u043c\u044b \u0438 \u043f\u0440\u043e\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 \u043e\u0442 \u043d\u0430\u0447\u0430\u043b\u0430 \u0434\u043e \u043a\u043e\u043d\u0446\u0430, \u0447\u0442\u043e \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u043e\u043d\u044f\u0442\u044c \u043e\u0431\u0449\u0443\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 (\u043a\u0430\u0440\u0442\u0438\u043d\u0443) \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u0414\u0435\u043b\u0430\u044e \u0442\u043e, \u0447\u0435\u0433\u043e \u043c\u043d\u0435 \u0432 \u0441\u0432\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u043b\u043e.\n\n**English**: \\\nIn this notebook, I will try to answer the following questions:\n\n1) How Statistical Methods can help to build good models \\\n2) How feature transformation affects the 'success' of the model. Let's take a look at the various transformations and how the model works for each one. Later, I want to add learning and validation curves to better understand how the algorithms work. \\\n3) What is the best way to evaluate the quality of the algorithm? 2 heuristics: train\/test\/val samples and cross-validation. Checking on the selected metric.\\\n4) How Principal Component Analysis helps to understand your data (later, if the algorithm does not work the way you want, you can try to lower the dimension, losing the least amount of information, that is, to project onto the eigenvectors with the highest variance - variance in a lowered space - eigenvalues the of the original eigenvectors onto which they were projected)\\\n5) Building different models on different data and interpreting the results for different metrics. \\\n6) Conclusion\n\n\n\n**Russian**: \\\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0435 \u044f \u043f\u043e\u0441\u0442\u0430\u0440\u0430\u044e\u0441\u044c \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b:\n\n1) \u041a\u0430\u043a \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043f\u043e\u043c\u043e\u0433\u0430\u044e\u0442 \u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0445\u043e\u0440\u043e\u0448\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \\\n2) \u041a\u0430\u043a \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 '\u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0441\u0442\u044c' \u043c\u043e\u0434\u0435\u043b\u0438. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0438 \u043a\u0430\u043a \u043c\u043e\u0434\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u043d\u0438\u0445. \u041f\u043e\u0437\u0436\u0435, \u044f \u0445\u043e\u0447\u0443 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043a\u0440\u0438\u0432\u044b\u0435 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u043b\u0443\u0447\u0448\u0435\u0433\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432. \\\n3) \u041a\u0430\u043a \u043b\u0443\u0447\u0448\u0435 \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0442\u044c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0431\u043e\u0442\u044b \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430? 2 \u044d\u0432\u0440\u0438\u0441\u0442\u0438\u043a\u0438: \u043e\u0442\u043b\u043e\u0436\u0435\u043d\u043d\u0430\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0430 \u0438 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f. \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0439 \u043c\u0435\u0442\u0440\u0438\u043a\u0435. \\\n4) \u041a\u0430\u043a Principal Component Analysis \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u043e\u043d\u044f\u0442\u044c \u0442\u0432\u043e\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 (\u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u0441\u0442\u0432\u0438\u0438, \u0435\u0441\u043b\u0438 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043d\u0435 \u0442\u0430\u043a \u043a\u0430\u043a \u0432\u0430\u043c \u0445\u043e\u0447\u0435\u0442\u0441\u044f, \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043d\u0438\u0437\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u044c, \u043f\u043e\u0442\u0435\u0440\u044f\u0432 \u043d\u0430\u0438\u043c\u0435\u043d\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \u0442.\u0435 \u043f\u0440\u043e\u0435\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0441\u043e\u0431\u0432\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0432\u0435\u043a\u0442\u043e\u0440\u0430 \u0441 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0434\u0438\u0441\u043f\u0435\u0440\u0441\u0438\u0435\u0439 -  \u0434\u0438\u0441\u043f\u0435\u0440\u0441\u0438\u044f \u0432 \u043f\u043e\u043d\u0438\u0436\u0435\u043d\u043d\u043e\u043c \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435 - \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0445 \u0441\u043e\u0431\u0432\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u0432\u0435\u043a\u0442\u043e\u0440\u043e\u0432, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0435\u0446\u0438\u0440\u043e\u0432\u0430\u043b\u0438) \\\n5) \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0446\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0434\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043c\u0435\u0442\u0440\u0438\u043a. \\\n6) \u0417\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\n\n**English**: \\\nI would be glad if you found it useful! Let's start fron the very beginning :)\n\n**Russian:**\\\n\u0411\u0443\u0434\u0443 \u0440\u0430\u0434, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c \u0434\u043b\u044f \u0432\u0430\u0441! \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c :) ","97d44181":"## Scatter matrix","f4afc5e9":"Yeah, we have balanced classes, the task is simplified!","3be4c3c9":"# Making a random forest pipeline\n## Cross validation strategy\nI chose splitting into 5 folds, although this parameter can be also 'grid-searched'","9ba43bab":"Remember that some of our features do not follow a normal distribution, we transform them. \\\nAlso, I think that there is simply not enough data, since the sample is small (150 observations)\n\\\n\\\n**Russian:**\n\n\u041f\u043e\u043c\u043d\u0438\u043c, \u0447\u0442\u043e \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0448\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0442 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044e, \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0438\u0445. \\\n\u0422\u0430\u043a\u0436\u0435, \u044f \u0434\u0443\u043c\u0430\u044e, \u0447\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0434\u0430\u043d\u043d\u044b\u0445, \u0442\u0430\u043a \u043a\u0430\u043a \u0432\u044b\u0431\u043e\u0440\u043a\u0430 \u0442\u043e \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0430\u044f (150 \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u0439)","157a719a":"# Exploratory data analysis","005c9f20":"Wow! **max_depth** == 1 indicates that the algorithm was looking for a very good division by 1 time, so as to maximize the division.","c282b2c4":"Here I got the idea to transform features in the final piece in accordance with the function that produces the highest $ p-value $ in order to increase the significance of the correct $ H_0 $\n\\\n\\\nRussian: \\\n\u0417\u0434\u0435\u0441\u044c \u043c\u043d\u0435 \u043f\u0440\u0438\u0448\u043b\u0430 \u0438\u0434\u0435\u044f \u0432 \u0444\u0438\u043d\u0430\u043b\u043e\u0447\u043a\u0435 \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0434\u0430\u0435\u0442 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 $p-value$ \u0434\u0430\u0431\u044b \u043f\u043e\u0432\u044b\u0441\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u0432\u0435\u0440\u043d\u043e\u0439 $H_0$\n\\\n\\\n\u0414\u043b\u044f `sepal_length` -- **boxcox, yeojohnson** \\\n\u0414\u043b\u044f `sepal_width` -- **boxcox, yeojohnson** \\\n\u0414\u043b\u044f `petal_length` -- **boxcox, yeojohnson** \\\n\u0414\u043b\u044f `petal_width` -- **\u0431\u0435\u0437 \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438** ","6fb523c0":"## Log transform","2d616795":"# Results at that moment\n\\\nAs we can see, the most beautiful scores we can get with normalized dataset, i think it is because our features not follows Normal distrubution (analysis is higher) and normalization is good for transform for this situation.\n\n\\\nBut I will continue to compare the algorithms if there is any feedback on it.\n","6c51030b":"As a result, we see a more competent assessment of the model using cross-validation. (More real) \\\nThen I realized that it is better to build a model using a delayed selection (train, validation, test), select parameters on the validation, test on test set, and!\nonly then, when all this is done, test the quality for cross-validation using the given metric. \n\nWe build on train, val, test samples, on val - selection of parameters, test the quality of the model on test and cross-validation!\n\\\n\\\n**Russian**:\n\u0418\u0442\u043e\u0433, \u043c\u044b \u0432\u0438\u0434\u0438\u043c \u0431\u043e\u043b\u0435\u0435 \u0433\u0440\u0430\u043c\u043e\u0442\u043d\u0443\u044e \u043e\u0446\u0435\u043d\u043a\u0443 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438. (\u0411\u043e\u043b\u0435\u0435 \u0440\u0435\u0430\u043b\u044c\u043d\u0443\u044e) \\\n\u0422\u0443\u0442 \u044f \u043f\u043e\u043d\u044f\u043b, \u0447\u0442\u043e \u043b\u0443\u0447\u0448\u0435 \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u0442\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 (train, validation, test), \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0434\u0431\u0438\u0440\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043d\u0430 test \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0438!\n\u0437\u0430\u0442\u0435\u043c, \u043a\u043e\u0433\u0434\u0430 \u0432\u0441\u0435 \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u043d\u043e, \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043c\u0435\u0442\u0440\u0438\u043a\u0438.\n\n\u0421\u0442\u0440\u043e\u0438\u043c \u043d\u0430 train, val, test \u0432\u044b\u0431\u043e\u0440\u043a\u0430\u0445, \u043d\u0430 val - \u043f\u043e\u0434\u0431\u043e\u0440 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432, \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u0430 test \u0438 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u043e\u0434\u0435\u043b\u0438!","ffbec461":"## Box Cox transformation","2443fcc7":"For multiclassification i choose **roc_auc_ovr_weighted** metric to optimize (**f1_weighted** gives the same result)","f9c6d9ac":"## Plot confusion matrix and check final metrics","ffea9219":"## Log1p transform","6b0d84dc":"# Random Forest","f8a3359b":"1) Cross-validation shows much real results compared with lazy sampling. And works better.\n\n2) The model built on a normalized dataset with any regularization parameter has shown itself best of all (cross validation show more real results and better works). \\\nWe need to chose model with balanced regularization parameter which make model more simplier","3d08e997":"# Data loading","11cffda2":"**Random forest** - an algorithm that works with a set of decision trees that work on the principle of voting (it implements this by **bagging**: votes are averaged (`regression problem`), or (`classification problem`), the class that has most votes): 10 trees: 7 vote for sneakers, 2 for a fork, 1 for a spoon. Answer: sneakers!\n\\\nIt is worth noting that the desicion tree, in particular, is an algorithm with **low bias** and **high variance**, therefore, a random forest (a set of weak models) tries to **reduce** variance by averaging the prediction results.\n\\\n\\\n**Random forest** - \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c, \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0438\u0439 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432 \u0440\u0435\u0448\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u043f\u043e \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0443 \u0433\u043e\u043b\u043e\u0441\u043e\u0432\u0430\u043d\u0438\u044f (\u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442\u0441\u044f \u044d\u0442\u043e \u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c **\u0431\u044d\u0433\u0433\u0438\u043d\u0433\u0430**: \u0433\u043e\u043b\u043e\u0441\u0430 \u0443\u0441\u0440\u0435\u0434\u043d\u044f\u044e\u0442\u0441\u044f (\u0437\u0430\u0434\u0430\u0447\u0430 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438), \u043b\u0438\u0431\u043e (\u0437\u0430\u0434\u0430\u0447\u0430 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438), \u0431\u0435\u0440\u0435\u0442\u0441\u044f \u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u043c\u0435\u0435\u0442 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u0447\u0438\u0441\u043b\u043e \u0433\u043e\u043b\u043e\u0441\u043e\u0432): 10 \u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432: 7 \u0433\u043e\u043b\u043e\u0441\u0443\u044e\u0442 \u0437\u0430 \u0442\u0430\u043f\u043a\u0438, 2 \u0437\u0430 \u0432\u0438\u043b\u043a\u0443, 1 \u0437\u0430 \u043b\u043e\u0436\u043a\u0443. \u041e\u0442\u0432\u0435\u0442: \u0442\u0430\u043f\u043a\u0438! \n\\\n\u0421\u0442\u043e\u0438\u0442 \u043e\u0442\u043c\u0435\u0442\u0438\u0442\u044c, \u0447\u0442\u043e \u0434\u0435\u0440\u0435\u0432\u043e \u043b\u0435\u0441, \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u0441\u0442\u0438 - \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0441 **\u043d\u0438\u0437\u043a\u0438\u043c \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435\u043c** \u0438 **\u0432\u044b\u0441\u043e\u043a\u043e\u0439 \u0434\u0438\u0441\u043f\u0435\u0440\u0441\u0438\u0435\u0439**, \u043f\u043e\u044d\u0442\u043e\u043c\u0443, \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043b\u0435\u0441 (\u043d\u0430\u0431\u043e\u0440 \u0441\u043b\u0430\u0431\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439) \u0441\u0442\u0430\u0440\u0430\u0435\u0442\u0441\u044f **\u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c** \u0434\u0438\u0441\u043f\u0435\u0440\u0441\u0438\u044e \u0437\u0430 \u0441\u0447\u0435\u0442 \u0443\u0441\u0440\u0435\u0434\u043d\u0435\u043d\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f.","6d6148c9":"# Report results","731afdbd":"### And using `Shapiro` and `Kolmororov` tests\n\nChecking for belonging to the normal distribution using the Kolmorogov and Shapiro tests\n\n---\n\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u044c \u043a \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0442\u0435\u0441\u0442\u043e\u0432 \u041a\u043e\u043b\u043c\u043e\u0440\u043e\u0433\u043e\u0432\u0430 \u0438 \u0428\u0430\u043f\u0438\u0440\u043e","53873caf":"Since it is difficult to say whether the samples are taken from a population with a normal distribution, we transform all of them\n\n**Russian:**\n\\\n\u0422\u0430\u043a \u043a\u0430\u043a \u0441\u043b\u043e\u0436\u043d\u043e \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0432\u0437\u044f\u0442\u044b \u043b\u0438 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0438\u0437 \u0441\u043e\u0432\u043e\u043a\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u0441 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u043c, \u0442\u043e \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0438\u0445 \u0432\u0441\u0435","5e03e83d":"# Choose metric","cdaae8b5":"### Some thoughts\n\\\nIt is difficult to say of a significance level of changes on the eye\n\nThat's why it is a good idea to calculate **p-values**","03098a8d":"I wan't to split into 3 samples: 60\/20\/20","73caa69d":"# Different feature transformations\n","7f95ad0a":"\u0414\u0443\u043c\u0430\u044e, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043d\u0435 \u043a\u0440\u0438\u0442\u0438\u0447\u043d\u044b, \u0442\u0430\u043a \u043a\u0430\u043a \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u043a \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0439 + \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0435 \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043a \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u043c","0b8f3af1":"Transform features according the biggest p-values on features","183a3e39":"As we can see, multiclassification solver realized in `lbfgs`, `newton-cg`, `sag`, `saga` solvers with regularization `l2`\n\nI will use sag solver for test with l2 penalty for my purposes","7de685c2":"# Modeling","d8933e4d":"# PCA for visualuzation in 2D","00d7e927":"## Libraries","a650057c":"Let's check on different transformations (transform in different ways)\n\\\n\\\n**Russian:** \\\n\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f\u0445 (\u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u0440\u0430\u0437\u043d\u043e\u043c\u0443)\n\n","6e5f6ae0":"## Scatter 3d","f92647df":"From sklearn documentation","59367a65":"## Yeojohnson transformation","e62eff50":"## Log10 transform","329dc236":"# Standartization or normalization?\n\\\n`Normalization` is good to use when the distribution of data does **not** follow a Gaussian distribution. It can be useful in algorithms that do not assume any distribution of the data like K-Nearest Neighbors. \\\n!!! **After normalization to [0,1] outliers are lost!**\n\\\n\\\n`Standardization` can be helpful in cases where the data **follow**s a Gaussian distribution. **Though this does not have to be necessarily true**. Since `standardization` does not have a bounding range, so, even if there are outliers in the data, they will not be affected by `standardization`.\n\\\nStandartization is Z-scale: $\\mu = 0 \\ \\ and \\ \\ \\sigma = 1$\n\nIn my case a should use normalization, but a wanna use both to for educational purposes :)","eb2101de":"# Important note","d60b9397":"Start data","0995367a":"## Libraries","13307c9b":"Drop this unnecessary column","2234189b":"## Make stratificate samples\n","bc19c55e":"## Some conclusions about features distribution\nFor alpha == 0.1%, we reject the null hypothesis only in the case of `petal_length`, `petal_width`, and lean more towards the fact that the samples of these features were not taken from the general population with a normal distribution \n\n`Feature transformation:`\nTherefore, I decided that they need to be transformed into a normal distribution (**Box-Cox method**, **logarithm**, etc.)\n\\\n\\\n**Russian:** \\\n\u0414\u043b\u044f alpha == 0.1% \u043e\u0442\u043a\u043b\u043e\u043d\u044f\u0435\u043c \u043d\u0443\u043b\u0435\u0432\u0443\u044e \u0433\u0438\u043f\u043e\u0442\u0435\u0437\u0443 \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 petal_length, petal_width, \u0438 \u0441\u043a\u043b\u043e\u043d\u044f\u0435\u043c\u0441\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u043a \u0442\u043e\u043c\u0443, \u0447\u0442\u043e \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0435 \u0431\u044b\u043b\u0438 \u0432\u0437\u044f\u0442\u044b \u0438\u0437 \u0433\u0435\u043d\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u043e\u0432\u043e\u043a\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u0441 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u043c \\\n\n`Feature transformation:`\n\u041f\u043e\u044d\u0442\u043e\u043c\u0443, \u044f \u0440\u0435\u0448\u0438\u043b, \u0447\u0442\u043e \u0438\u0445 \u043d\u0443\u0436\u043d\u043e \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 (**\u041c\u0435\u0442\u043e\u0434 \u0411\u043e\u043a\u0441\u0430-\u041a\u043e\u043a\u0441\u0430**, **\u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435** \u0438 \u0442\u0434)","2e436583":"# Final Note :)","aa2a3c60":"# First ... easy stats","6ac50534":"# Import libraries","1779d238":"# Logistic Regression Model Selection \n\nThe model selection algorithm is as follows:\n\\\n\\\nWe take n models, for each we minimize $ J_ {train} $, that is, we train on $ X_ {train} $, then we minimize $ J_ {cv} $ by selecting hyperparameters (and only on the validation model we select !!), select that model, which showed the best results on the validation set (score)\n\\\n\\\n\u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0432\u044b\u0431\u043e\u0440\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (Model selection) \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439:\n\\\n\\\n\u0411\u0435\u0440\u0435\u043c n \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u043c $J_{train}$, \u0442\u043e \u0435\u0441\u0442\u044c \u043e\u0431\u0443\u0447\u0430\u0435\u043c \u043d\u0430 $X_{train}$, \u0437\u0430\u0442\u0435\u043c \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u043c $J_{cv}$ \u043f\u0443\u0442\u0435\u043c \u043f\u043e\u0434\u0431\u043e\u0440\u0430 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 (\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0434\u0431\u0438\u0440\u0430\u0435\u043c!!), \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0442\u0443 \u043c\u043e\u0434\u0435\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u0430 \u043b\u0443\u0447\u0448\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 (score)"}}