{"cell_type":{"d6ea1b43":"code","263d561e":"code","8fc5c3dd":"code","dddb2b2f":"code","b08448a4":"code","5b85aa3f":"code","b50b070f":"code","b1680fb2":"code","943d25a8":"code","cf0b91fb":"code","95b094ef":"code","ab38fddc":"code","7888961d":"code","66ecfce8":"code","0f08a2ca":"code","5cb78d75":"code","5096263c":"code","8aabe810":"code","7cc21ac1":"code","b1e12a0e":"code","b264d246":"code","c0901ba3":"code","71109efa":"code","53cac75f":"code","8c94d90e":"code","87029500":"markdown","1fb35901":"markdown","7b6175a3":"markdown","2453ad34":"markdown","01a0d918":"markdown","c852b9cc":"markdown","38a0a9cb":"markdown","f602d92c":"markdown","b89a52b5":"markdown","12fda1f8":"markdown","27cc9670":"markdown","7365cf25":"markdown","2fdfd821":"markdown","b62e9c4e":"markdown","066aac71":"markdown","8bb716e1":"markdown","5c408577":"markdown","3766b613":"markdown","4c05591b":"markdown","3ed1b2f4":"markdown","83419182":"markdown","f82f88d0":"markdown","af0c16df":"markdown","ace87e5b":"markdown","324c4b3e":"markdown","aab1bbb2":"markdown","4dbc4781":"markdown","605d484a":"markdown","4ed7c046":"markdown","b5853958":"markdown","28406c51":"markdown","db09df9e":"markdown","493464d2":"markdown","741b456c":"markdown","165a89db":"markdown","f3d506d4":"markdown","286afacd":"markdown","079d30fa":"markdown","0ccf9920":"markdown","54d8bdd7":"markdown","f681d225":"markdown"},"source":{"d6ea1b43":"# importe todas as suas bibliotecas aqui, siga os padr\u00f5es do PEP8:\n#\n# - 1\u00ba pacotes nativos do python: json, os, etc.;\nimport json\n\n\n# - 2\u00ba pacotes de terceiros: pandas, seabornm etc.;\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport geopy\nfrom geopy.geocoders import Nominatim\nfrom geopy.extra.rate_limiter import RateLimiter\nimport geopandas\n","263d561e":"!wget -q \"https:\/\/raw.githubusercontent.com\/andre-marcos-perez\/ebac-course-utils\/main\/dataset\/deliveries.json\" -O deliveries.json \n\n!wget -q \"https:\/\/raw.githubusercontent.com\/andre-marcos-perez\/ebac-course-utils\/main\/dataset\/deliveries-geodata.csv\" -O deliveries-geodata.csv \n\n!wget -q \"https:\/\/geoftp.ibge.gov.br\/cartas_e_mapas\/bases_cartograficas_continuas\/bc100\/go_df\/versao2016\/shapefile\/bc100_go_df_shp.zip\" -O distrito-federal.zip\n!unzip -q distrito-federal.zip -d .\/maps\n!cp .\/maps\/LIM_Unidade_Federacao_A.shp .\/distrito-federal.shp\n!cp .\/maps\/LIM_Unidade_Federacao_A.shx .\/distrito-federal.shx","8fc5c3dd":"# - coleta de dados;\nwith open('.\/deliveries.json', mode='r', encoding='utf8') as file:\n  data = json.load(file)\n\n# dado bruto no pandas\n\ndeliveries_df = pd.DataFrame(data)\n\n# coluna origin\n\nhub_origin_df = pd.json_normalize(deliveries_df[\"origin\"])\n\ndeliveries_df = pd.merge(left=deliveries_df, right=hub_origin_df, how='inner', left_index=True, right_index=True)\ndeliveries_df = deliveries_df.drop(\"origin\", axis=1)\ndeliveries_df = deliveries_df[[\"name\", \"region\", \"lng\", \"lat\", \"vehicle_capacity\", \"deliveries\"]]\ndeliveries_df.rename(columns={\"lng\": \"hub_lng\", \"lat\": \"hub_lat\"}, inplace=True)\n\n# coluna deliveries\n\ndeliveries_exploded_df = deliveries_df[[\"deliveries\"]].explode(\"deliveries\")\n\ndeliveries_normalized_df = pd.concat([\n  pd.DataFrame(deliveries_exploded_df[\"deliveries\"].apply(lambda record: record[\"size\"])).rename(columns={\"deliveries\": \"delivery_size\"}),\n  pd.DataFrame(deliveries_exploded_df[\"deliveries\"].apply(lambda record: record[\"point\"][\"lng\"])).rename(columns={\"deliveries\": \"delivery_lng\"}),\n  pd.DataFrame(deliveries_exploded_df[\"deliveries\"].apply(lambda record: record[\"point\"][\"lat\"])).rename(columns={\"deliveries\": \"delivery_lat\"}),\n], axis= 1)\n\ndeliveries_df = deliveries_df.drop(\"deliveries\", axis=1)\ndeliveries_df = pd.merge(left=deliveries_df, right=deliveries_normalized_df, how='right', left_index=True, right_index=True)\ndeliveries_df.reset_index(inplace=True, drop=True)","dddb2b2f":"deliveries_df.head()","b08448a4":"hub_df = deliveries_df[[\"region\", \"hub_lng\", \"hub_lat\"]]\nhub_df = hub_df.drop_duplicates().sort_values(by=\"region\").reset_index(drop=True)\nhub_df.head()","5b85aa3f":"geolocator = Nominatim(user_agent=\"ebac_geocoder\")\ngeocoder = RateLimiter(geolocator.reverse, min_delay_seconds=1)","b50b070f":"hub_df[\"coordinates\"] = hub_df[\"hub_lat\"].astype(str)  + \", \" + hub_df[\"hub_lng\"].astype(str) \nhub_df[\"geodata\"] = hub_df[\"coordinates\"].apply(geocoder)\nhub_df.head()","b1680fb2":"hub_geodata_df = pd.json_normalize(hub_df[\"geodata\"].apply(lambda data: data.raw))\nhub_geodata_df.head()","943d25a8":"hub_geodata_df = hub_geodata_df[[\"address.town\", \"address.suburb\", \"address.city\"]]\nhub_geodata_df.rename(columns={\"address.town\": \"hub_town\", \"address.suburb\": \"hub_suburb\", \"address.city\": \"hub_city\"}, inplace=True)\nhub_geodata_df[\"hub_city\"] = np.where(hub_geodata_df[\"hub_city\"].notna(), hub_geodata_df[\"hub_city\"], hub_geodata_df[\"hub_town\"])\nhub_geodata_df[\"hub_suburb\"] = np.where(hub_geodata_df[\"hub_suburb\"].notna(), hub_geodata_df[\"hub_suburb\"], hub_geodata_df[\"hub_city\"])\nhub_geodata_df = hub_geodata_df.drop(\"hub_town\", axis=1)\nhub_geodata_df.head()","cf0b91fb":"hub_df = pd.merge(left=hub_df, right=hub_geodata_df, left_index=True, right_index=True)\nhub_df = hub_df[[\"region\", \"hub_suburb\", \"hub_city\"]]\nhub_df.head()","95b094ef":"deliveries_df = pd.merge(left=deliveries_df, right=hub_df, how=\"inner\", on=\"region\")\ndeliveries_df = deliveries_df[[\"name\", \"region\", \"hub_lng\", \"hub_lat\", \"hub_city\", \"hub_suburb\", \"vehicle_capacity\", \"delivery_size\", \"delivery_lng\", \"delivery_lat\"]]\ndeliveries_df.head()","ab38fddc":"deliveries_geodata_df = pd.read_csv(\".\/deliveries-geodata.csv\")\ndeliveries_geodata_df.head()","7888961d":"deliveries_df = pd.merge(left=deliveries_df, right=deliveries_geodata_df[[\"delivery_city\", \"delivery_suburb\"]], how=\"inner\", left_index=True, right_index=True)\ndeliveries_df.head()","66ecfce8":"deliveries_df.info()","0f08a2ca":"deliveries_df.isna().any()","5cb78d75":"100 * (deliveries_df[\"delivery_city\"].isna().sum() \/ len(deliveries_df))","5096263c":"100 * (deliveries_df[\"delivery_suburb\"].isna().sum() \/ len(deliveries_df))","8aabe810":"prop_df = deliveries_df[[\"delivery_city\"]].value_counts() \/ len(deliveries_df)\nprop_df.sort_values(ascending=False).head(10)","7cc21ac1":"prop_df = deliveries_df[[\"delivery_suburb\"]].value_counts() \/ len(deliveries_df)\nprop_df.sort_values(ascending=False).head(10)","b1e12a0e":"mapa = geopandas.read_file(\"distrito-federal.shp\")\nmapa = mapa.loc[[0]]\nmapa.head()","b264d246":"hub_df = deliveries_df[[\"region\", \"hub_lng\", \"hub_lat\"]].drop_duplicates().reset_index(drop=True)\ngeo_hub_df = geopandas.GeoDataFrame(hub_df, geometry=geopandas.points_from_xy(hub_df[\"hub_lng\"], hub_df[\"hub_lat\"]))\ngeo_hub_df.head()","c0901ba3":"geo_deliveries_df = geopandas.GeoDataFrame(deliveries_df, geometry=geopandas.points_from_xy(deliveries_df[\"delivery_lng\"], deliveries_df[\"delivery_lat\"]))\ngeo_deliveries_df.head()","71109efa":"# cria o plot vazio\nfig, ax = plt.subplots(figsize = (50\/2.54, 50\/2.54))\n\n# plot mapa do distrito federal\nmapa.plot(ax=ax, alpha=0.4, color=\"lightgrey\")\n\n# plot das entregas\ngeo_deliveries_df.query(\"region == 'df-0'\").plot(ax=ax, markersize=1, color=\"red\", label=\"df-0\")\ngeo_deliveries_df.query(\"region == 'df-1'\").plot(ax=ax, markersize=1, color=\"blue\", label=\"df-1\")\ngeo_deliveries_df.query(\"region == 'df-2'\").plot(ax=ax, markersize=1, color=\"seagreen\", label=\"df-2\")\n\n# plot dos hubs\ngeo_hub_df.plot(ax=ax, markersize=30, marker=\"x\", color=\"black\", label=\"hub\")\n\n# plot da legenda\nplt.title(\"Entregas no Distrito Federal por Regi\u00e3o\", fontdict={\"fontsize\": 16})\nlgnd = plt.legend(prop={\"size\": 15})\nfor handle in lgnd.legendHandles:\n    handle.set_sizes([50])","53cac75f":"data = pd.DataFrame(deliveries_df[['region', 'vehicle_capacity']].value_counts(normalize=True)).reset_index()\ndata.rename(columns={0: \"region_percent\"}, inplace=True)\ndata.head()","8c94d90e":"with sns.axes_style('whitegrid'):\n  grafico = sns.barplot(data=data, x=\"region\", y=\"region_percent\", ci=None, palette=\"pastel\")\n  grafico.set(title='Propor\u00e7\u00e3o de entregas por regi\u00e3o', xlabel='Regi\u00e3o', ylabel='Propor\u00e7\u00e3o');","87029500":"```json\n[\n  {\n    \"name\": \"cvrp-0-df-0\",\n    \"region\": \"df-0\",\n    \"origin\": {\"lng\": -47.802664728268745, \"lat\": -15.657013854445248},\n    \"vehicle_capacity\": 180,\n    \"deliveries\": [\n      {\n        \"id\": \"ed0993f8cc70d998342f38ee827176dc\",\n        \"point\": {\"lng\": -47.7496622016347, \"lat\": -15.65879313293694},\n        \"size\": 10\n      },\n      {\n        \"id\": \"c7220154adc7a3def8f0b2b8a42677a9\",\n        \"point\": {\"lng\": -47.75887552060412, \"lat\": -15.651440380492554},\n        \"size\": 10\n      },\n      ...\n    ]\n  }\n]\n...\n","1fb35901":"Vamos criar o DataFrame `geo_deliveries_df` atrav\u00e9s do DataFrame `deliveries_df`. Note a nova coluna `geometry`.","7b6175a3":"## 0\\. An\u00e1lise Explorat\u00f3ria de Dados de Log\u00edstica","2453ad34":"Vamos fazer o download dos dados do mapa do Distrito Federal do site oficial do IBGE atrav\u00e9s do seguinte [link](https:\/\/www.ibge.gov.br\/geociencias\/cartas-e-mapas\/bases-cartograficas-continuas) para criar o DataFrame `mapa`. Note a coluna `geometry`.","01a0d918":"Vamos criar o DataFrame `geo_hub_df` atrav\u00e9s do DataFrame `deliveries_df`. Note a nova coluna `geometry`.","c852b9cc":"O presente trabalho tem por objetivo fazer uma an\u00e1lise explorat\u00f3ria de dados de log\u00edstica relativos a uma lista de inst\u00e2ncias de entregas. Cada inst\u00e2ncia representa um conjunto de entregas que devem ser realizadas pelos ve\u00edculos do hub regional.","38a0a9cb":" - **Geocodifica\u00e7\u00e3o reversa da entrega**","f602d92c":" - **Mapa das Entregas**","b89a52b5":"A **geocodifica\u00e7\u00e3o** \u00e9 o processo que transforma uma localiza\u00e7\u00e3o descrita por um texto (endere\u00e7o, nome do local, etc.) em sua respectiva coodernada geogr\u00e1fica (latitude e longitude). A **geocodifica\u00e7\u00e3o reversa** faz o oposto, transforma uma coordenada geogr\u00e1fica de um local em suas respectivas descri\u00e7\u00f5es textuais.","12fda1f8":" - **Insights**:","27cc9670":"<img src=\"https:\/\/raw.githubusercontent.com\/andre-marcos-perez\/ebac-course-utils\/main\/media\/logo\/newebac_logo_black_half.png\" alt=\"ebac-logo\">\n\n---\n\nAn\u00e1lise Explorat\u00f3ria de Dados de Log\u00edstica II\n\nProfessor [Andr\u00e9 Perez](https:\/\/www.linkedin.com\/in\/andremarcosperez\/)\n\nAluno [Armando Nahmias](https:\/\/www.linkedin.com\/in\/armando-nahmias\/)\n\n---","7365cf25":"### **4.1. Mapa de entregas por regi\u00e3o** ","2fdfd821":"- **Geocodifica\u00e7\u00e3o reversa do hub**","b62e9c4e":"Empresas como Google, Bing e Yahoo! fornecem **geocodifica\u00e7\u00e3o** como servi\u00e7o (e cobram por isso). Existe uma projeto *open source* chamado de [OpenStreetMap](https:\/\/www.openstreetmap.org\/) que mantem um servi\u00e7o gratuito de geocodifica\u00e7\u00e3o chamado [Nominatim](https:\/\/nominatim.org\/), servi\u00e7o este que apresenta como limita\u00e7\u00e3o a quantia de [uma \u00fanica consuta por segundo](https:\/\/operations.osmfoundation.org\/policies\/nominatim\/). Vamos utiliz\u00e1-lo atrav\u00e9s do pacote Python `geopy` para fazer a opera\u00e7\u00e3o reversa e enriquecer o nosso DataFrame principal.","066aac71":"## 4\\. Visualiza\u00e7\u00e3o","8bb716e1":"---","5c408577":" - **Visualiza\u00e7\u00e3o**:","3766b613":"# **T\u00f3picos**\n\n<ol type=\"1\">\n  <li>Manipula\u00e7\u00e3o;<\/li>\n  <li>Visualiza\u00e7\u00e3o;<\/li>\n  <li>Storytelling.<\/li>\n<\/ol>\n","4c05591b":"## 2\\. Pacotes e bibliotecaas","3ed1b2f4":"> **Aten\u00e7\u00e3o:** Como a instala\u00e7\u00e3o do servidor local envolve tecnologias que est\u00e3o fora do escopo deste curso (como [Docker](https:\/\/www.docker.com\/)), eu vou providenciar estes dados para voc\u00ea atrav\u00e9s deste [link](https:\/\/raw.githubusercontent.com\/andre-marcos-perez\/ebac-course-utils\/main\/dataset\/deliveries-geodata.csv).","83419182":" - **Mapa do Distrito Federal**","f82f88d0":"Vamos ent\u00e3o aplicar a geocodifica\u00e7\u00e3o nas coordenadas das tr\u00eas regi\u00f5es e extrair informa\u00e7\u00f5es de **cidade** e **bairro**.","af0c16df":"### **4.2. Gr\u00e1fico de entregas por regi\u00e3o** ","ace87e5b":"### **3.1. Dados** ","324c4b3e":"Vamos utilizar o pacote Python GeopPandas ([link](https:\/\/geopandas.org\/) da documenta\u00e7\u00e3o) para visualizar as coordenadas dos **hubs** e das **entregas** no mapa do Distrito Federal, segmentados pela regi\u00e3o dos **hubs**. O pacote adiciona funcionalidades geoespaciais ao pacote Python Pandas.","aab1bbb2":"### **3.3. Qualidade** ","4dbc4781":"O DataFrame `hub_geodata_df` com as informa\u00e7\u00f5es de **cidade** e **bairro** \u00e9 ent\u00e3o combinado ao DataFrame principal `deliveries_df`, enriquecendo assim o dado.","605d484a":"Qualidade do dados est\u00e1 relacionado a consist\u00eancia do seu `schema`, valores faltantes, etc.","4ed7c046":"### **3.2. Enriquecimento** ","b5853958":" - **Visualiza\u00e7\u00e3o**","28406c51":" - **Mapa dos Hubs**","db09df9e":"O **dado bruto** \u00e9 um arquivo do tipo `JSON` com uma lista de inst\u00e2ncias de entregas. Cada inst\u00e2ncia representa um conjunto de **entregas** que devem ser realizadas pelos **ve\u00edculos** do **hub** regional. Exemplo:","493464d2":"1. A distribui\u00e7\u00e3o das **entregas** est\u00e1 muito concentrada nos **hubs** das regi\u00f5es 1 e 2, mas pouco no da regi\u00e3o 0. Contudo a capacidade dos ve\u00edculos \u00e9 mesma para todos os **hubs**, logo os **ve\u00edculos** poderiam ser deslocados para as regi\u00f5es de maior tr\u00e1fego.","741b456c":" - **Agrega\u00e7\u00e3o**:","165a89db":"- **Geocodifica\u00e7\u00e3o reversa**","f3d506d4":"Processamos o **dado bruto** e constru\u00edmos o DataFrame Pandas `deliveries_df` atrav\u00e9s de opera\u00e7\u00f5es como achatamento (`flatten`) e explos\u00e3o (``explode``) de colunas:","286afacd":"## 1\\. Contexto","079d30fa":"## 3\\. Coleta","0ccf9920":"1. As **entregas** est\u00e3o corretamente alocadas aos seus respectivos **hubs**;\n1. Os **hubs** das regi\u00f5es 0 e 2 fazem **entregas** em locais distantes do centro e entre si, o que pode gerar um tempo e pre\u00e7o de entrega maior.","54d8bdd7":" - **Insights**:","f681d225":"Enquanto o **hub** contem apenas **3** geolocaliza\u00e7\u00f5es distintas, as **entregas** somam o total de **636.149**, o que levaria em torno de 7 dias para serem consultadas no servidor do Nominatim, dada a restri\u00e7\u00e3o de uma consulta por segundo. Contudo, para cargas pesadas como esta, o software oferece uma instala\u00e7\u00e3o [local](https:\/\/nominatim.org\/release-docs\/latest\/admin\/Installation\/) (na sua pr\u00f3pria m\u00e1quina) que pode ser utilizada sem restri\u00e7\u00e3o."}}