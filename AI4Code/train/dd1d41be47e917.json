{"cell_type":{"e6e22ca5":"code","5e2e58a5":"code","46585c2c":"code","7843f5a4":"code","adaca377":"code","a626620b":"code","a1343902":"code","42ae1b60":"code","73e4cc4e":"code","f3f34cd1":"code","85a23cae":"code","4504128a":"code","c165e48b":"code","876721a5":"code","da78b028":"code","01039cf8":"code","5aa9d5ed":"code","51efb357":"code","d32b932a":"code","e8362834":"code","f5bee027":"code","24f75f52":"code","908a4398":"code","108ea5eb":"code","e00f2b4a":"code","de4fd921":"code","5136dc02":"code","e72caae1":"code","3068b3aa":"code","a38ad934":"code","c61ec720":"code","d4f354e7":"code","54d03df2":"code","a76e2caf":"code","e8e489dd":"code","247670be":"code","01d3a9e8":"code","d26e9c61":"code","d1df91ff":"code","fd9cb22d":"code","df7980c2":"code","9dad0eb3":"code","6ac6c087":"code","716064a5":"code","46482471":"code","ec365871":"code","46639ce8":"code","e6ac0c6d":"code","fe3b060d":"code","80c63d46":"code","fb7d8ebd":"code","09666603":"code","972deab1":"code","e4cb45d4":"code","c978957e":"code","11aaf579":"code","0012b668":"code","ea7a8594":"code","9ca4f31e":"code","ab99c650":"code","c1ffc1fb":"code","ff591868":"code","60c78fc5":"code","8a9651f4":"code","58b34719":"code","3c343dd8":"code","ff00edc6":"code","700937f5":"code","59c12822":"code","d1e1213e":"code","b27c1963":"code","249b66d7":"code","90dd6096":"code","bdb9ecda":"code","49f7f75d":"code","76e1aba6":"code","c687bcfb":"markdown","c404ad3b":"markdown","e9f36109":"markdown","b2fa88dd":"markdown","883266ce":"markdown","2758fc4c":"markdown","e7c5ed0a":"markdown","3b097622":"markdown","6334e4e0":"markdown","182f0510":"markdown","74c3a051":"markdown","86616d8f":"markdown","cfb0ebd6":"markdown","31c2befb":"markdown","d84267fd":"markdown","ebcdafb0":"markdown","b5e0be02":"markdown","4163eab3":"markdown","005022ad":"markdown","ac4527b1":"markdown","f8b54ec7":"markdown","877e02eb":"markdown","2f6f4860":"markdown","2aace64c":"markdown"},"source":{"e6e22ca5":"# Importing libaraies\n\nimport numpy as np  # linear algebra\nimport pandas as pd  # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport warnings\nwarnings.filterwarnings(\"ignore\")","5e2e58a5":"### Importing the datasets\ntrain = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","46585c2c":"train.head()","7843f5a4":"test.head()","adaca377":"train.tail()","a626620b":"test.tail()","a1343902":"print(train.shape)\nprint('-'*50)\nprint(test.shape)","42ae1b60":"print('train.describe' ,train.describe()) \nprint('-'*80)\nprint('test.describe' ,test.describe()) ","73e4cc4e":"print(train.dtypes)\nprint('-'*80)\nprint(test.dtypes)","f3f34cd1":"data = pd.concat([train, test],axis=0,sort=False)","85a23cae":"data.shape","4504128a":"data.info()","c165e48b":"data.drop([\"PassengerId\"],axis=1,inplace=True) ","876721a5":"print(data.isna().sum().sort_values(ascending=False))","da78b028":"data.drop([\"Cabin\"],axis=1,inplace=True) ","01039cf8":"num_features=[col for col in data.columns if data[col].dtype!='O']\nnum_features","5aa9d5ed":"cat_features=[col for col in data.columns if data[col].dtype=='O']\ncat_features","51efb357":"### creating a function so that I can easily do it for all features\ndef Random_value_imputation(feature):\n    random_sample=data[feature].dropna().sample(data[feature].isnull().sum())               \n    random_sample.index=data[data[feature].isnull()].index\n    data.loc[data[feature].isnull(),feature]=random_sample","d32b932a":"for col in num_features:\n    Random_value_imputation(col)","e8362834":"data[num_features].isnull().sum()","f5bee027":"data[cat_features].isnull().sum()","24f75f52":"def impute_mode(feature):\n    mode=data[feature].mode()[0]\n    data[feature]=data[feature].fillna(mode)","908a4398":"for col in cat_features:\n    impute_mode(col)","108ea5eb":"data[cat_features].isnull().sum()","e00f2b4a":"for col in cat_features:\n    print('{} has {} values '.format(col,train[col].unique()))\n    print('\\n')","de4fd921":"plt.figure(figsize=(25,10))\nfor i,col in enumerate(num_features):\n    plt.subplot(2,4,i+1)\n    sns.boxplot(data[col])","5136dc02":"plt.figure(figsize=(40,40))\nfor i,feature in enumerate(num_features):\n    plt.subplot(5,3,i+1)\n    data[feature].hist()\n    plt.title(feature)","e72caae1":"data[\"Survived\"].value_counts() * 100 \/ len(data) ","3068b3aa":"data[\"Survived\"].value_counts().plot.pie(autopct = \"%1.1f%%\")","a38ad934":"data[\"Sex\"].value_counts().plot.pie(autopct = \"%1.1f%%\")","c61ec720":"plt.figure(figsize=(8,8))\nsns.barplot(x='Survived',y='Pclass',data=data,palette='Set1')\nplt.xticks([0,1],['Survived','Unsurvived'])\nplt.ylim(0,3)\nplt.xlabel('Survived or not')\nplt.ylabel('Pclass')\nplt.title(\"Pclass\")\nax=plt.gca()\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","d4f354e7":"plt.figure(figsize=(8,8))\nsns.barplot(x='Survived',y='Age',data=data,palette='Set1')\nplt.xticks([0,1],['Survived','Unsurvived'])\nplt.ylim(0,40)\nplt.xlabel('Survived or not')\nplt.ylabel('Age')\nplt.title(\"Age\")\nax=plt.gca()\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","54d03df2":"plt.figure(figsize=(8,8))\nsns.barplot(x='Survived',y='SibSp',data=data,palette='Set1')\nplt.xticks([0,1],['Survived','Unsurvived'])\nplt.ylim(0,1)\nplt.xlabel('Survived or not')\nplt.ylabel('SibSp')\nplt.title(\"SibSp\")\nax=plt.gca()\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","a76e2caf":"plt.figure(figsize=(8,8))\nsns.barplot(x='Survived',y='Parch',data=data,palette='Set1')\nplt.xticks([0,1],['Survived','Unsurvived'])\nplt.ylim(0,0.5)\nplt.xlabel('Survived or not')\nplt.ylabel('Parch')\nplt.title(\"Parch\")\nax=plt.gca()\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","e8e489dd":"plt.figure(figsize=(8,8))\nsns.barplot(x='Survived',y='Fare',data=data,palette='Set1')\nplt.xticks([0,1],['Survived','Unsurvived'])\nplt.ylim(0,50)\nplt.xlabel('Survived or not')\nplt.ylabel('Fare')\nplt.title(\"Fare\")\nax=plt.gca()\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)","247670be":"### Defining violin and scatter plot & kde_plot functions\n\ndef violin(col):\n    fig = px.violin(data, y=col, x=\"Survived\", color=\"Survived\", box=True)\n    return fig.show()\n\ndef scatters(col1,col2):\n    fig = px.scatter(data, x=col1, y=col2, color=\"Survived\")\n    return fig.show()\n\ndef kde_plot(feature):\n    grid = sns.FacetGrid(data, hue=\"Survived\",aspect=2)\n    grid.map(sns.kdeplot, feature)\n    grid.add_legend()","01d3a9e8":"kde_plot('Fare')","d26e9c61":"kde_plot('Pclass')","d1df91ff":"kde_plot('SibSp')","fd9cb22d":"kde_plot('Age')","df7980c2":"kde_plot('Parch')","9dad0eb3":"violin('Age')","6ac6c087":"violin('Parch')","716064a5":"violin('Fare')","46482471":"scatters('Age','Fare')","ec365871":"m=data.loc[:,data.columns!='Survived'].corr()\nplt.figure(figsize=(15,10))\nsns.heatmap(m,annot=True,cmap=\"Reds\")","46639ce8":"corelation=data.corr()[\"Survived\"]\ncorelation","e6ac0c6d":"corelation.abs().sort_values(ascending=False)[1:]","fe3b060d":"data.head()","80c63d46":"## we can have the total family members as a feature\ndata['Family_members'] = data['SibSp'] + data['Parch']","fb7d8ebd":"data.head()","09666603":"data.drop(columns=['Name','Ticket'],axis=1,inplace=True)","972deab1":"data.head()","e4cb45d4":"cat_features=[col for col in data.columns if data[col].dtype=='O']\ncat_features","c978957e":"from sklearn.preprocessing import LabelEncoder","11aaf579":"le = LabelEncoder()","0012b668":"for col in cat_features:\n    data[col]=le.fit_transform(data[col])","ea7a8594":"data.head()","9ca4f31e":"data.info()","ab99c650":"# Seperating test and train sets\n\ntest_data = data.iloc[891:]","c1ffc1fb":"test_data.drop('Survived',axis=1,inplace=True)","ff591868":"train_data = data.iloc[:891]","60c78fc5":" train_data= data.iloc[:891]","8a9651f4":"train_data.head()","58b34719":"target_class = 'Survived'\ntarget = train_data.pop(target_class)","3c343dd8":"train_data","ff00edc6":"## importing libaraies for machine learning\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score","700937f5":"### Applying LogisticRegression Model \nLogisticRegressionModel = LogisticRegression()","59c12822":"LogisticRegressionModel.fit(train_data,target)","d1e1213e":"print(accuracy_score(target, LogisticRegressionModel.predict(train_data) ))","b27c1963":"### Applying KNeighborsClassifier Model \nKNeighborsModeL= KNeighborsClassifier(n_neighbors=10)","249b66d7":"KNeighborsModeL.fit(train_data,target)","90dd6096":"print(accuracy_score(target, KNeighborsModeL.predict(train_data) ))","bdb9ecda":"### Applying RandomForestClassifier Model \nRandomForestModeL= RandomForestClassifier()","49f7f75d":"RandomForestModeL.fit(train_data,target)","76e1aba6":"print(accuracy_score(target, RandomForestModeL.predict(train_data) ))","c687bcfb":"**DataFrame.describe() method generates descriptive statistics that summarize the central tendency, dispersion and shape of a dataset\u2019s distribution, excluding NaN values. This method tells us a lot of things about a dataset. One important thing is that the describe() method deals only with numeric values. It doesn't work with any categorical values. So if there are any categorical values in a column the describe() method will ignore it and display summary for the other columns unless parameter include=\"all\" is passed.\nNow, let's understand the statistics that are generated by the describe() method:\ncount tells us the number of NoN-empty rows in a feature.\nmean tells us the mean value of that feature.\nstd tells us the Standard Deviation Value of that feature.\nmin tells us the minimum value of that feature.\n25%, 50%, and 75% are the percentile\/quartile of each features. This quartile information helps us to detect Outliers.\nmax tells us the maximum value of that feature.****","c404ad3b":"## If you found this notebook helpful or you just liked it , some upvotes would be very much appreciated - That will keep me motivated to update it on a regular basis","e9f36109":"##  checking co-relation in our data","b2fa88dd":"### Extract Numerical & Categorical Features","883266ce":"### Total unique categories in our categorical features to check if any dirtiness in data or not","2758fc4c":"### As rest of the features has less missing values,so I can fill it using mode concept(categorical data)","e7c5ed0a":"#### Survived-->> 61.2%\n#### Unsurvived-->> 38.8%","3b097622":"##  Exploring our data","6334e4e0":"#### As we have just 2 categories in Sex feature and 3 categories in Embarked then we can consider Label Encoder as it will not cause Curse of Dimensionality","182f0510":"#### so Total unique categories doesnot have any dirtiness","74c3a051":"# ![Picture3.jpg](data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQEAYABgAAD\/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT\/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT\/wAARCAFvAqQDASIAAhEBAxEB\/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL\/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6\/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL\/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6\/9oADAMBAAIRAxEAPwD9TvtKe\/5Gj7Qnv+VJ5Qrn\/H3xC8L\/AAp8NT+IPF2tWfh\/RoGVJL2+k2IGY4Ue5J7CgDoftCe\/5UfaE9\/yrwj\/AIb0\/Z7\/AOis+HP\/AAIP+FH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/8AxNH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/8AxNH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/8AxNH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/8AxNH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/8AxNH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/8AxNH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/8AxNH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/8AxNH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/8AxNH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/8AxNH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/8AxNH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/8AxNH\/AA3r+z3\/ANFZ8Of+BB\/+JoA93+0J7\/lR9oT3\/KvCP+G9f2e\/+is+HP8AwIP\/AMTR\/wAN6\/s9\/wDRWfDn\/gQf\/iaAPd\/tCe\/5UfaE9\/yrwj\/hvX9nv\/orPhz\/AMCD\/wDE0f8ADev7Pf8A0Vnw5\/4EH\/4mgD3f7Qnv+VH2hPf8q8I\/4b1\/Z7\/6Kz4c\/wDAg\/4VLZ\/t0fADUb23tLf4q+HZbi4kWKJBcH5mY4AzjA59aAPcvtKe\/wCRo+0p7\/kaFWOWNXQgqwyGU5BHrSeUKAF+0p7\/AJGik8oUUAS4r4q\/4Kkafa6x8Pfhfp1\/CLmwvPG+nQXFu5OyWNm2srY7EEj8a+1q+Lf+Cnhx4R+EX\/Y+ab\/6HQB7Q37FfwIbr8J\/Cv8A4LY\/8KZ\/wxN8Bv8Aok3hX\/wXJXttFAHiX\/DE3wG\/6JN4V\/8ABclH\/DE3wG\/6JN4V\/wDBcle20UAeJf8ADE3wG\/6JN4V\/8FyUf8MTfAb\/AKJN4V\/8FyV7bRQB4l\/wxN8Bv+iTeFf\/AAXJR\/wxN8Bv+iTeFf8AwXJXttFAHiX\/AAxN8Bv+iTeFf\/BclH\/DE3wG\/wCiTeFf\/Bcle20UAeJf8MTfAb\/ok3hX\/wAFyUf8MTfAb\/ok3hX\/AMFyV7bRQB4l\/wAMTfAb\/ok3hX\/wXJR\/wxN8Bv8Aok3hX\/wXJXttFAHiX\/DE3wG\/6JN4V\/8ABclH\/DE3wG\/6JN4V\/wDBcle20UAeJf8ADE3wG\/6JN4V\/8FyUf8MTfAb\/AKJN4V\/8FyV7bRQB4l\/wxN8Bv+iTeFf\/AAXJR\/wxN8Bv+iTeFf8AwXJXttFAHiX\/AAxN8Bv+iTeFf\/BclH\/DE3wG\/wCiTeFf\/Bcle20UAeJf8MTfAb\/ok3hX\/wAFyUf8MTfAb\/ok3hX\/AMFyV7bRQB4l\/wAMTfAb\/ok3hX\/wXJR\/wxN8Bv8Aok3hX\/wXJXttFAHiX\/DE3wG\/6JN4V\/8ABclH\/DE3wG\/6JN4V\/wDBcle20UAeJf8ADE3wG\/6JN4V\/8FyUf8MTfAb\/AKJN4V\/8FyV7bRQB4l\/wxN8Bv+iTeFf\/AAXJR\/wxN8Bv+iTeFf8AwXJXttFAHiX\/AAxN8Bv+iTeFf\/BclH\/DE3wG\/wCiTeFf\/Bcle20UAeJf8MTfAb\/ok3hX\/wAFyUf8MTfAb\/ok3hX\/AMFyV7bRQB4l\/wAMTfAb\/ok3hX\/wXJR\/wxN8Bv8Aok3hX\/wXJXttFAHiX\/DE3wG\/6JN4V\/8ABclH\/DE3wG\/6JN4V\/wDBcle20UAeJf8ADE3wG\/6JN4V\/8FyUf8MTfAb\/AKJN4V\/8FyV7bRQB4l\/wxN8Bv+iTeFf\/AAXJR\/wxN8Bv+iTeFf8AwXJXttFAHiX\/AAxN8Bv+iTeFf\/BclH\/DE3wG\/wCiTeFf\/Bcle20UAeJf8MTfAb\/ok3hX\/wAFyUf8MTfAb\/ok3hX\/AMFyV7bRQB4l\/wAMTfAb\/ok3hX\/wXJR\/wxN8Bv8Aok3hX\/wXJXttFAHiX\/DE3wG\/6JN4V\/8ABclH\/DE3wG\/6JN4V\/wDBcle20UAeJf8ADE3wG\/6JN4V\/8FyUf8MTfAb\/AKJN4V\/8FyV7bRQB4l\/wxN8Bv+iTeFf\/AAXJR\/wxN8Bv+iTeFf8AwXJXttFAHiX\/AAxN8Bv+iTeFf\/BclH\/DE3wG\/wCiTeFf\/Bcle20UAeJf8MTfAb\/ok3hX\/wAFyUf8MTfAb\/ok3hX\/AMFyV7bRQB4l\/wAMTfAb\/ok3hX\/wXJR\/wxN8Bv8Aok3hX\/wXJXttFAHiX\/DE3wG\/6JN4V\/8ABclH\/DE3wG\/6JN4V\/wDBcle20UAeJf8ADE3wG\/6JN4V\/8FyUf8MTfAb\/AKJN4V\/8FyV7bRQB4l\/wxN8Bv+iTeFf\/AAXJR\/wxN8Bv+iTeFf8AwXJXttFAHiX\/AAxN8Bv+iTeFf\/BclH\/DE3wG\/wCiTeFf\/Bcle20UAeJf8MTfAb\/ok3hX\/wAFyUf8MTfAb\/ok3hX\/AMFyV7bRQB4l\/wAMTfAb\/ok3hX\/wXJR\/wxN8Bv8Aok3hX\/wXJXttFAHiX\/DE3wG\/6JN4V\/8ABclH\/DE3wG\/6JN4V\/wDBcle20UAeJf8ADE3wG\/6JN4V\/8FyUf8MTfAb\/AKJN4V\/8FyV7bRQB4n\/wxP8AAb\/ok3hX\/wAFyV43+2F+yf8ABfwf+zj411nSvhn4d03U7OzMltd2tmIpInyAGVlwa+0K+fv29m2\/soeP\/wDrz\/8AZhQB7L4Hbd4J8PnrnT7c\/wDkNa29orC8A\/8AIi+HP+wbbf8Aopa3qAE2iilooAK+LP8Agp5\/yKPwi\/7HzTf\/AEOvtOviz\/gp5\/yKPwi\/7HzTf\/Q6APtOiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACvn39vf8A5NP8ff8AXn\/7MK+gq+ff29\/+TT\/H3\/Xn\/wCzCgD2TwD\/AMiJ4c\/7Btt\/6KWt6sHwD\/yInhz\/ALBtt\/6KWt6gAooooAK+LP8Agp5\/yKPwi\/7HzTf\/AEOvtOviz\/gp5\/yKPwi\/7HzTf\/Q6APtOiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK+UPiJ8afGmif8FDfhh8N7LUhD4M1fw7dX17YeUp86VVuMMWxkYMSYwfWgD6vor4ws\/+CnvhPUNP1nXLf4e+MZfBuhaqNK1jxIsMBtrFmk8tJGHmbipyDwMgEZ6ioPGX7YXj7Qf28rD4ZaL4am8WeCbnQYb1LbSki+0P5ih\/tYldgPLX7pGee2TgUAfa1FfMnxK\/bq0Hwb448V+GPDngzxF8QLrwfafbfE1xoawrFpUYBLBjK6l2ABJCA9D3BrN+Iv8AwUZ+Hng3w78N9U0PSNd8cN4+Vzo9nosCecWRxG0bq7LhxIdm0Z5B7UAfVtFfN3jr9tK08G+JPC\/g+0+H3iXxH8RdY07+1brwjpfkPdaXbgZLTsX2A+gBOfxGc7wD\/wAFCPh\/46+DOq\/Ej+y9b0nSdN8QReHZ7W7gQ3AuJTGEbCsRt\/eDPORg0AfUVFeVeLv2jfDXg343eBfhfeQX0mveL7ae6spoowYI0iVmPmEnIJ2MBgGvNvi1+3BH8C\/FEUHjn4Y+KtB8HzaoNKi8XSNbyWruckSCNZDJsIBOcdB07UAfT1FfOHxY\/bb0D4b\/ABn074V6Z4Q8SeNvGd\/aRXsFnocMRQxOGO4u7qAAqFiTwBXH\/s3\/ALW\/j74qftFfEzwHrnw+1K20XRtS8m31FBEo0tAgxFcndhmYjcChbr0xzQB9f0V+fHxo\/aM8U6f8J\/ghrHgLxtqd2ut\/EaTRr6+vIESW5iW5mjaB1AxsG0gY5IUV7b8ZP25NI+GHjTxT4a0XwR4i8f3XhKwTUfEdxoXk+TpcTjcocu4LNt5KqDj8DQB9NUVxfwc+LWgfHL4a6H438MyyS6Pq0PmxCZdskZDFWRxnhlYEH6V+eupfFj4yfET4p\/tH3Fl8eYPh7Y\/D2eRtL0Oe3tmjuFQOQp3jdtxFtLDcd0g47UAfp9RXzL+zP+0h4z+I37H+gfErWPB1\/wCI\/FUqSRNpejokUt+UlaMTIJCqqGC7uuOuOKv\/AAi\/bV8P\/EjxD498Na14Y1vwL4r8F2TajqWjawInkNuq7meNo2ZWxx3\/AIhQB9F0V8a+HP8Agpp4U8RHw5qy\/D3xlY+A9c1VdFh8X3VrGtml0zbQpActjOMt9e4Ndj8V\/wBuLS\/h\/wDFjWfh7oHgLxP8Qdc0HTxqetnQYo\/L0+EqHyxkZdx2spwPXAyeKAPpmivmSb\/goF8N4\/2d9J+Lcdvq01hrF+2laboqwL9vu70My+Si7tv8JO7OMY9QK6L4I\/taaZ8WPiFrnw\/1rwtrHw98d6XbpenQdeaIyz27gESxtGxDAZGR1GfrQB7zRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFfPv7e\/wDyaf4+\/wCvP\/2YV9BV8+\/t7\/8AJp\/j7\/rz\/wDZhQB7J4B\/5ETw5\/2Dbb\/0Utb1YPgH\/kRPDn\/YNtv\/AEUtb1ABRRRQAV8Wf8FPP+RR+EX\/AGPmm\/8AodfadfFn\/BTz\/kUfhF\/2Pmm\/+h0AfadFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAV8hfEn4a+LtU\/4KTfCnxnaaBd3HhHTvDF3aXWsImYIJWW5wjN2JLpgd91fXtFAH5weC\/gd8QLf\/AIJsfGDwdL4O1GLxdqmuX89ppDwYuLhDdQEOq9+Ecj1C8dqfrPhz4lfs8\/Hr4M\/Ff\/hW2veONOk+Hll4T1TTdCiMt3p12iJv3gZHXHJwOG5GBX6OUUAfll8QPhVqnwN\/aM+L2seLPhf8QPiD4X+Ibm8sLzwHczKFjkZmktbpExhgTjkngcZ3cdhp\/wADdWk+LX7Imr+CvhXr3hDwPoJ1CS+0\/VAZJ9KaSR3zcsSSC3Lgn+8BweK\/R2igD4W+Llr44\/Zp\/bU1j4xaZ8O9Y+J3hbxjoUWlSR+HbbzrzTbiIRgKR2R\/LBz05PdefBfgjo\/ir41fsh\/tA3mheGAPF6\/Es+Iz4YCEOHie2me2UYzuAV1AxkkYr9Y64j4Z\/Bnwn8IZPEz+F9O\/s9vEeqy61qJ8wt5lzIBuIz0HHAHTJoA+IfBfiT4k\/tLftu\/B\/wCIF78HfE3gXwn4X0u8tLq71u2MQE8kEu45YD5d7Iq9zyeK8F+Lngn4s\/ETwH438A6n8H\/iD4p+Jk3iSW9k8VXU8r6YtqLnMRtlY7CCm1Qo4AJbPGB+x9eYeLPjzpnhn43eD\/hdDpt3qniDxBaz6g725AisbSLIM0pPYt8oA7mgDzP4b\/DDxBpv7ZniTxfqPh4xaO\/gjS9MttXkUEfaEdzLEh65HGfwrgPhfr\/j\/wCC37a3xQ8PX\/wx1zWPCfj\/AFeHVLPxXpsRe2tQLdU\/etjaFG0g\/MGB7EGvZvC\/7Znw38UeF\/id4iF5eafpPw8vprHWZ7y2K\/NGSMxAElwxUhR1JxxyK8zt\/wDgpR4TtbHTdf8AEHw+8c+GPAepTCG18WalpLLZtuOEdscqjdjzntmgDxXUv2efifF8CvgRo0Xg+8m1fQ\/inc6xqFsoBNvZteXEizvzwhVgc+49a574n\/CLUPgP+0V8XdR8S\/DP4hfErwv4\/uP7SsdS8DXU0YQO0jSWtwkfXaXwCT0AwDk4+z\/jR+2J4a+EHizwp4ag8P8AiHxtrXiWxbUrC28MWX2rfbjpJweQfYHjmpPhb+114e+NXw58Z+IPCGhazc+IPCqyJqHhLUIPsmoJOqMyxFWyAX2sAfUEEZGKANj9knw5o3hf9n7wnZ6D4M1T4f6c0Lyr4f1p2e8tmaRifNLckt97nBwRwK+Pvhr+wrZ\/GL4yftM3XxQ8E3Vmurak0fhzWrncioHMjedBg\/Ng+Sc8jqPWvtb9nX47aL+0d8J9H8c6JE9nDe7457CZw0tpOjFXicjuCPxBBr0ugD81fEWi\/tAeHf2KNG8HX\/hvxFJqHgjxXDpmpw+HXa3utc8PwhwrWzx5bafkXIGSFBI61m\/BD4b+OPGX7RXxF8ead8JPE3gTwrqvgC70qwh8RMzT3NwYlVNxc5DOR05xjrzX6eUUAfCPjL4KeOG\/4J4\/DTwRZ+E7j\/hKtN1DSJbvRrZB5kIjvQ8jEew+Yn3JqP4sfFDxt+x\/+0R8UvEMfwyufHnhfx7a22o2moaW4ElpNbWohaK4BH+r+UtnsDxnJA+8q8B+Pf7D\/wALf2kfFdn4i8Z2WpTalbW4tQ1lqEkCSRg5Cso4PU\/nQB8CaL8E\/FPx2\/Yf+Efj7Q9Bk1i68J+K9S1m88LaOxtpL61luw0gtyuSsi+UNuAThmI5GD9DfsgeH\/CHj39oW88bxfBn4leDfEOm6YUTxD43vJ3jct+7aFVk6naTg5PGeB3+2PBPgvRfh14T0vw14c0+LStE0yBbe0s4QdsaDtzyT3JPJJJrboAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAr59\/b3\/wCTT\/H3\/Xn\/AOzCvoKvn39vf\/k0\/wAff9ef\/swoA9k8A\/8AIieHP+wbbf8Aopa3qwfAP\/IieHP+wbbf+ilreoAKKKKACviz\/gp5\/wAij8Iv+x803\/0OvtOviz\/gp5\/yKPwi\/wCx803\/ANDoA+06KKKACiiigAooooAKKx5PGGgw64mivremprD8rp7XcYuD9I87v0rYoAKKKr32o2umxLLeXMNpEzrGrzyBAWY4VQSepPAFAFiiqdvrNheahdWEF9bzX1qFNxbRyq0kO4ZXeoOVyOmetXKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoryv8AaA+Pen\/APSfDF7f6fPqA13XbTRI1gIHltO4Xec9hnOK9UoAKKKKACvgz4Wyam3\/BW74pjWDIQvhGIaYJegt\/9EPye27fnHfNfedeR+Mv2e7PxP8AH\/wV8WLTWbnSNa8P2k+nXFvBGpj1C1kBPlyHqNrHcDQB+X2s6bd67+zJ+1z\/AGbbS3sdn8TUvr6KDqbRLly5PsMZPpjNfbH7XHxu+E+rfsK+JJBrOj65p2saClppGn2dxHJI906qLfYgO4GOTax4+XYc9K+nND+Fvg\/w1b+ILfS\/DWl2Vv4guJLrVoYrVAl9LIMO0oxh9wJzn1NfNPxI\/wCCZXwr8ReNPCvizwZZQeANZ0TVIdQkjsLUS2l4qSK5jeFjtX7vDL0z0PGADwXxX4S+K118Xv2YPD\/w98S2fgvx3B8MNtzd6tDvjESrHvidCjZOVHGOCvtXp3\/BOWG88H\/EX44eFfiLNK\/xvbV4tQ1y5mZfK1C0Kf6PNbgAAp8zk4AwJE4HQfaVx4N0O78VWniabSrWXxBaWz2dvqTxAzxQuwZo1bqFJAJFcv46+Dek+JpPEOt6NHbeHPHuqaRJo8fiy3tle7t42Hy9fvbTggH0oA+bf+CYbWf\/AAjHxoGk7xoI+Ieo\/YA3QR7Iunt06V9p15b+zP8AATS\/2a\/g\/o3gbTLk6gbMyTXWovGI3u53Ys8jDJweQOp4UV6lQAUUUUAFFeI\/ss\/tP6d+1BofizUtO0i40dNB1ubR2S4cMZdiqwkGOmQ3TtXt1ABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFZ+t+ItK8NWf2vV9Ts9Ktc48++nSFM+m5iBQBoUVXsdQtdUs4ruyuYby1mXdHPA4dHHqGHBH0qxQAUUVlTeLNEtrYXEusWEdubkWYla5QL55OBFnP38nG3rQBq0UUUAFFFFABRRRQAUUUUAFfPv7e\/wDyaf4+\/wCvP\/2YV9BV8+\/t7\/8AJp\/j7\/rz\/wDZhQB7J4B\/5ETw5\/2Dbb\/0Utb1YPgH\/kRPDn\/YNtv\/AEUtb1ABRRRQAV8Wf8FPP+RR+EX\/AGPmm\/8AodfadfFn\/BTz\/kUfhF\/2Pmm\/+h0AfadFFFABRRRQAV4r+2V8XNR+B37NXjnxfo\/y6xaWXlWUu3PlTSMI0kx\/slt34V7VXIfFz4Z6X8ZPhn4k8Fa0CNO1uyks5JFALRFh8si5\/iVsMPcUAfC3h3\/gmv4P8U\/s8W\/jzUPEev3Xxg1PSk8SL4xbUZFkjvHhEyKFzjYCQpJ+bjII4A2\/2c\/24fGPiDw7+y\/our2UGr3fjxtU07VtVuHPnbrJvLWUY4LMBls9TTdO\/Z4\/a50H4Wv8FbPxr4Pm8GNbNp8XjCYTnU7eyPHkhc9dnyDjIHAbgGuv+IH7EOveDfBXwPn+EOoaa\/i34UvIbWPXUZLbU1nUfaTJsOVZnBbr\/ERnpQBL+1p8dPGFx4d\/aO8DeHVi0mfwp4QsdXttWjlZJyk5kNyAQflYRxttI5z+FeOfEI\/FbWv2H\/hlefFu6sLnV5vF\/h+XTZrFszPYu8XlNcEfKZTkk49s85r17wp+x18TfEsnx41b4l+MtHuNa+J2gppEUejwymHS9qSKiAPyUTeoGDk\/MTyavH9lv4q+Ov2cfCXw58beI\/Dy6r4U1vTbiy1TTo5il1ZWboUEgbGJNoIyBjgZ70AYui\/GLwt8Jf2mf2sfFd\/4fS0HhrStJu7zUIHLS3n+j\/LHt6AlioGPxry34P8A\/BRT4lXnxK+HknjS++H2seEfHd+lhDo3he\/EuraM0zARNcJuJG0kBgR69DxX0HrH7Fc\/i74h\/tD6nrmvRf2B8UNNsrC3gtUPn2bQRbfMbPBw4UgDqOtYv7NvwL+MHwn1Twr4Y1\/wn8K7rwv4eiWAeKbKzkGq3MaAhWXI+WT1J96AMrwb+0t8e\/ih8aPiDF4b8M+Hf+FZeA9cvNPv55N7X1+sKFlhhG7\/AFjYU5xj5wK4n9lL9rb49ftNfFC11C01L4eWPgv+0ZUv\/C0lxt1uztFZgGMed5PT5uh54FfTn7NfwD1n4G3HxXmvNWtdSfxZ4qutfsvLRgIUlRAqyD+9lecdgK+Ztd\/Yp+LPxb\/aG8OeMvEGk+APh1DoGrLfy694NWeO\/wBVjVwQjqW27iBgkgfeOc9KAP0NooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD49\/4KYalDoPwz+HWr3EM1zDp\/jnSbl4bdC8rqsu4qijqxAIA7kivQdQ\/bQ8Laa7I\/g3x+7KcHb4Znriv+Cinm\/8ACJ\/CgRwvMP8AhYGjFlVSwwJx1r62oA+bf+G6vCY\/5kn4hf8AhMzUf8N1+E\/+hI+IX\/hMzV9I7R6UbR6CgD5u\/wCG6\/Cf\/QkfEL\/wmZqP+G6vCX\/Qk\/EL\/wAJmavpHaPQUbR6CgD5u\/4br8J\/9CT8Qv8AwmZqP+G6vCX\/AEJPxC\/8JmavpHaPQUbR6UAfN3\/DdXhP\/oSfiF\/4TM1H\/DdXhL\/oSfiF\/wCEzNX0jtHoKNo9BQB83f8ADdXhL\/oSfiF\/4TM1H\/DdfhP\/AKEj4hf+EzNX0jtHpRtHoKAPm8ft1eEz\/wAyT8Qv\/CZmrY0n9sTwzrDbYvB\/j2NsE4k8NTjoM17xtHpS0AfBP\/BIW+j1T4W\/FG\/ijeGO68aXUyxyDDqrRREAjsRmvvavhH\/gkwZP+ED+LweJov8AiubwgMpX\/lnHkfhX3dQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABX5xeH\/h3pf\/BQj9rD4uR\/Eq71K48E\/Da+j0jRvDVrdNBA8haVJJpNvzZYwk8EE5AzgYr9Ha+OfiF+zP8AFf4X\/H7xJ8WvgJqfh\/PiiFBr3hTxAsi291OucTo6Hhskt1HLN1DYAB414N8W6j+wh+0d8SfhN4c1C+17wCvgq78XaFpGpymUaddRRPL5YfqI28uQH1yp65J9t+MX7Z3iX4d\/s7fBb4g2Ph6wudT8c32m213ZzSN5cC3EJkfYQc5yMDPrzTfhP+xp4p1bX\/id4\/8AjF4hsdU8f+OtFn0AQ6RExtNHspY9pjhL\/MSOPbA6ksTXk+rfsT\/tC\/ELwT8OPhz4n8T+Drfwf8P9WguLHUrZZ\/tl9DD8sZdcFQVQlQOO2TxQBu\/BLXP2iL79v74taRd6tpN14IsLyzfVrS6kLLBYyRSNZfY1ByshQfPnjIO7nFeL+ERpWg\/s1zf2jo6+IUm\/aBW3hjuJSvlnzY\/mBHcqpXHT5q+1tP8Agf8AELwT+114l+JHhvUtCuvBfjO2sYNd0\/UFlF5bG1iKI8BX5TnJOD6n0BrzJf2B\/Ett8J4PCUXi+xluY\/ievjv7Q8Dhfs+4Ew46+YACc9M0Acf+0Z+374zs\/jF4v8HfC\/VvAvh6z8Dws2q3Xje+WB9UuAMvBaKWG4rgr6lvTitHxP8At++PfG3wg+CGs\/Czwtpr+LPiJqNzpElprDMYLa5gwj7SGHyFiWDHoo55re8afsi+Pfh78ePG3xD+GGk+BfGNh41KS6hovja1ZjYXAOWlhdeqsSSVPPPsK9E8Zfsz+I\/HHi34BeJJbjw\/oE\/gK\/lvtU0vR7d47SUyIARbrjjkfxf3iaAPnn45fth\/tBfDjxv4E+FEz+BfCnjm90z7fqfibXJTDpFy7FtsUDyfKpBUqSc5YgDFffHw1m8RXPgHQZfFsmny+JZLRGv5NJJNq0pGSYieqntXzh+2p8Gfir8bI38P+HvCvw78U+E7u18lJfE0Uy6hpdwchp4ZFYAcbcY9Oc16t+yb8E9S\/Z5+AvhjwHq+unxFqGlpL5l4N2wb5Wfy493Oxd20Z9O3SgD16iiigAooooAK+ff29\/8Ak0\/x9\/15\/wDswr6Cr59\/b3\/5NP8AH3\/Xn\/7MKAPZPAP\/ACInhz\/sG23\/AKKWt6sHwD\/yInhz\/sG23\/opa3qACiiigAr4s\/4Kef8AIo\/CL\/sfNN\/9Dr7Tr4s\/4Kef8ij8Iv8AsfNN\/wDQ6APtOiiigAooooAKKKKACiiigAr5m\/bm\/aY8Q\/s1eGvAt34csbO9utf8RQaXN9sBISIjc20A\/eIGM9s5r6Zr4I\/4KyMH0b4HW56y+N7fj2C4\/qKAPveiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA4f4xfEbwZ8KfBreJfHdxb2mh2lxFia4h80JMW\/dlRg\/NnoRXmsP7eXwVuI1kTxWSjDIP2SXp\/3zXO\/8FIrSO8\/ZkvI5EDr\/AGvYHDD\/AKbCuE0Hw3pS6Hpv\/EutSfssX\/LJf7g9q4MRiHRaSR9Xk2T08zpznObVmewf8N2fBj\/oaj\/4CS\/\/ABNH\/DdnwY\/6Go\/+Akv\/AMTXln\/COaV\/0DrX\/vyv+FH\/AAjelf8AQOtf+\/K\/4VyfXpdj6H\/VOj\/z9f3Hqf8Aw3Z8GP8Aoaj\/AOAkv\/xNH\/DdnwY\/6Go\/+Akv\/wATXln\/AAjelf8AQOtf+\/K\/4Uf8I3pX\/QOtf+\/K\/wCFP69LsH+qdH\/n6\/uPUW\/bv+C69fFZ\/wDASX\/4mtvRf2vvhZ4g8M6xr9l4j8zTNJKrdym2kBTccDAxk14k\/hnSWUg6da\/9+l\/wrpvCvh3TYfAPimJLKBY3dNyiMYPI615WY5xWwlFVKcVdyitezaTMK3DFGjFS9o90vvdjqo\/28vgrKoK+KyQf+nOX\/wCJqT\/hu34Mf9DUf\/ASX\/4mvJ7fwvpEca40616f88lqX\/hG9K\/6B1r\/AN+V\/wAK9X69Lsb\/AOqdH\/n6\/uPU\/wDhuz4Mf9DUf\/ASX\/4mj\/hu34Mf9DUf\/ASX\/wCJryz\/AIRvSv8AoHWv\/flf8KP+Eb0r\/oHWv\/flf8KX16XYP9U6P\/P1\/cep\/wDDdvwY\/wChqP8A4CS\/\/E0f8N2fBjr\/AMJWf\/ASX\/4mvLP+Eb0r\/oHWv\/flf8KP+Eb0ojH9nWv\/AH6X\/Cj69LsH+qdH\/n6\/uPbvgz+0V8J\/id4i1Hw74C1K0k1ONTfXVrb2ht9244Mh+UZJPU9a9kr4a\/Zo0a1039sXXjbQRwD\/AIRteI1A\/wCWpr7lr1KNR1IKTPhcxwqwWJlQi7pBRRRWx5oUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAyaQxwu4GSqk4\/Cvmb9hH9pbxJ+0z4Q8c6r4ls7Kzn0fxJPplstkpUeQqIyhsk5Ybjz3r6YuP+PeX\/AHT\/ACr4T\/4JHrt+GvxWx\/0O93\/6LjoA+8KKKKACiiigAooooAKKKKACvn39vf8A5NP8ff8AXn\/7MK+gq+ff29\/+TT\/H3\/Xn\/wCzCgD2TwD\/AMiJ4c\/7Btt\/6KWt6sHwD\/yInhz\/ALBtt\/6KWt6gAooooAK+LP8Agp5\/yKPwi\/7HzTf\/AEOvtOviz\/gp5\/yKPwi\/7HzTf\/Q6APtOiiigAooooAKKKKACiiigAr8\/\/wDgq982o\/s9J2bxmn84v8a\/QCvgX\/gqhbvdeIP2cokGS\/jWNfzaGgD76ooooAKK+dv2of2ntT+AXxE+Dvh+x0a31S18a602m3cszMrwIDEoaPHGcy557LX0TQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQB8xf8ABRb\/AJNpvf8AsLWH\/o4Vx+if8gTTv+vaL\/0AV2H\/AAUW\/wCTab3\/ALC1h\/6OFcfon\/IE07\/r2i\/9AFeLj\/iifpnCf8Gr6\/oXaKKK8w+8CiiigBD0rpfDX\/Ii+Jv99P51zTdK6Xw1\/wAiL4m\/30\/nXg51\/usf8cP\/AEpHn47+Ev8AFH\/0pHMQ\/wCrX6U+o4f9WPpUle8egFFFFABRRRQBkfs7f8nha9\/2Laf+jjX2vXxR+zt\/yeFr3\/Ytp\/6ONfa9fRYX+Ej8Yz\/\/AJGNT5fkFFFFdZ88FFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUV4x+2B8db\/8AZv8A2f8AxJ4+0zTYNV1DTvJjhtrliIi0kqxgtg5wN2cD0rq\/gP8AEa4+LnwZ8GeNLu0jsLrXNLgvpbaIkpG7qCQpPOM9M0Adxcf8e8n+6f5V8Kf8Ekf+SafFX\/seLz\/0XFX3ZMN0Lj1U18Mf8El4TD8M\/irkf8z1er+UcVAH3VRRRQAUUUUAFFFFABRRRQAV8+\/t7\/8AJp\/j7\/rz\/wDZhX0FXz7+3v8A8mn+Pv8Arz\/9mFAHsngH\/kRPDn\/YNtv\/AEUtb1YPgH\/kRPDn\/YNtv\/RS1vUAFFFFABXxZ\/wU8\/5FH4Rf9j5pv\/odfadfFn\/BTz\/kUfhF\/wBj5pv\/AKHQB9p0UUUAFFFFABRRRQAUUUUAFfjt\/wAFHf2lfG\/hf9pTR\/DXirQbS60nwf4gh8TeH5EzEbq0MUe2NiM5\/eRyZbqDkY4FfsTXyB+1r8LfgB8bPiR4PuviD4iWy1vwvPmWKzYMLiAsH+zXB2thN3PYgMw70m1HcmUlHVs9i\/ZR8eeN\/ih8DfD\/AIu8f6da6TretiS\/isrNSqxWkjlrYEHnd5RTOeteu1T0e8sdQ0u1uNMlgn0+SNTBJbEGMpjjbjjGKw\/HfxM8M\/DSxhuvEerQaakzbYUkOXlI6hVHJ\/Ci6Sux3SV2fH3\/AAUUj3\/HL9lbj\/mbn\/8AQravumvgL9tLx14d+Ivxq\/ZTk0LVINQY+LZJDEhxIi5g5ZDyOR3FfftCaeqBNNXQUUUUxhRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAfMX\/AAUW\/wCTab3\/ALC1h\/6OFcfon\/IE07\/r2i\/9AFdp\/wAFEIzL+zVfgDONUsD\/AOR1rjNGXbo2nj0to\/8A0AV4uO+JH6Zwn\/Bqev6FyiiivMPvAooooARuldL4a\/5EXxN\/vp\/OuabpXS+Gv+RF8Tf76fzrwc6\/3WP+OH\/pSPPx38Jf4o\/+lI5eH\/Vj6VJUcP8Aqx9Kkr3j0AooooAKKKKAMj9nb\/k8LXv+xbT\/ANHGvtevi\/8AZ1tz\/wANdeIHxwvhpD+c1faFfRYX+Ej8Yz\/\/AJGNT5fkFFFFdZ88FFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQB8of8ABUhd37E3jzPZ7I\/+TcVel\/sbL5f7KfwoA\/6FyyP\/AJCFecf8FQU3\/sT+PvY2Z\/8AJqKvQv2VNRtNA\/ZI+GF7qFzHZ2dv4XsZJZ5mCoi+SpySaAKH7aHxa8b\/AAK+C7+O\/BWmWusHRdQt7jWLO6H39OyRNtPY5KfN2GT2r4S\/4JU\/Hnxn4p+MWv8Agrw\/o1tD4Eu9S1HxRrN1Mu6eHzkVIIg2cDEir0GTlvSv0T0f4wfDT42R6j4Tg1S01iO\/t5LefT7lCq3MTKVdQGHzDBPSvHPgH4F+Bv7CcWu+F9L8UNLqWq3\/AJ95dX+JJolAAjgd0UAKgJPPOWJNRzRte5HtI2vc+taKgs72DUbSG6tZkuLaZQ8csbBldT0II6ip6ssKKKKACiiigAooooAK+ff29\/8Ak0\/x9\/15\/wDswr6Cr59\/b3\/5NP8AH3\/Xn\/7MKAPZPAP\/ACInhz\/sG23\/AKKWt6sHwD\/yInhz\/sG23\/opa3qACiiigAr4s\/4Kef8AIo\/CL\/sfNN\/9Dr7Tr4s\/4Kef8ij8Iv8AsfNN\/wDQ6APtOiiigAooooAKKKKACiiigCK6jkmtZkifypWRlST+6SODX5S3unal8FdU1bwl440+6vfEtzeTzR3CWrTi+WR2KMrgHsQPwr9X6q3Ol2d5PFPcWkE80X+rkkiVmT6EjiuetRVZWbOXEYdYiKi3Y8r\/AGUfCms+DfghoWn65A1rekyzi3kOWijdyyKfQgHpXiv7ZHhnUtL+JXh\/xpe6fPqfhe3tDbO0MZl+ySZJLFADwwxz7V9kUySNJo2SRFkRhgqwyD+FVOkp0\/ZlVKKnS9lc\/Jb412Mnib9o79mjXNHtLnRLK+1rybfWmt\/L3sssTFQpHYdyP4q\/SrxH4B8WapcvJYePr7TUY8RLaxEKPTOK+YP+Cgki2fxs\/ZTjjVY0Xxe+FUYAGbcdPxr7hrfDyeGgoR\/FJjpUlSgoLoeOn4S\/EAn\/AJKpqH\/gJH\/hR\/wqX4gf9FU1D\/wEj\/wr2Kiuv61U7L7l\/ka8qPHf+FS\/ED\/oqmof+Akf+FH\/AAqX4gf9FU1D\/wABI\/8ACvYqKPrdTsvuX+QcqPHf+FS\/ED\/oqmof+Akf+FH\/AAqX4gf9FU1D\/wABI\/8ACvYqKPrdTsvuX+QcqPHf+FS\/ED\/oqmof+Akf+FH\/AAqX4gf9FU1D\/wABI\/8ACvYqKPrdTsvuX+QcqPHf+FS\/ED\/oqmof+Akf+FH\/AAqX4gf9FU1D\/wABI\/8ACvYqKPrdTsvuX+QcqPHf+FS\/ED\/oqmof+Akf+FH\/AAqX4gf9FU1D\/wABI\/8ACvYqKPrdTsvuX+QcqPHf+FS\/ED\/oqmof+Akf+FH\/AAqX4gf9FU1D\/wABI\/8ACvYqKPrdTsvuX+QcqPHf+FS\/ED\/oqmof+Akf+FH\/AAqX4gf9FU1D\/wABI\/8ACvYqKPrdTsvuX+QcqPHf+FS\/ED\/oqmof+Akf+FSQ\/Cnx9G4L\/FLUGHcfZIv8K9eoo+t1Oy+5f5Byo+L\/ANv7wL4mt\/2dFkl8b3d3HbaxZPPHLbxoJ1MygLlRng81NpJH9j2GP+feP\/0AV1\/\/AAUUYr+zTfY\/6Cth\/wCjhXG6L\/yBdO\/69o\/\/AEAV87mVSVScXL8rfkfpvCatRqev6F2iiivIPvQooooARuldL4a\/5EXxN\/vp\/OuabpXS+Gv+RF8Tf76fzrwc6\/3WP+OH\/pSPPx38Jf4o\/wDpSOXh\/wBWPpUlRw\/6sfSpK949AKKKKACiiigDkfg\/4b1fW\/2xtRuNN8RTaNBb+Gl86GKNX87MpA4YdiQa+mNQ+F\/ji4lJg+JuoQp\/d+yRf4V4D+ztIf8Ahr\/X17f8I2n\/AKONfalfVYLETp0YpW+5H4vn6\/4Uany\/I8d\/4VL8QP8Aoqmof+Akf+FH\/CpfiB\/0VTUP\/ASP\/CvYqK7\/AK3U7L7l\/kfO8qPHf+FS\/ED\/AKKpqH\/gJH\/hR\/wqX4gf9FU1D\/wEj\/wr2Kij63U7L7l\/kHKjx3\/hUvxA\/wCiqah\/4CR\/4Uf8Kl+IH\/RVNQ\/8BI\/8K9ioo+t1Oy+5f5Byo8d\/4VL8QP8Aoqmof+Akf+FH\/CpfiB\/0VTUP\/ASP\/CvYqKPrdTsvuX+QcqPHf+FS\/ED\/AKKpqH\/gJH\/hR\/wqX4gf9FU1D\/wEj\/wr2Kij63U7L7l\/kHKjx3\/hUvxA\/wCiqah\/4CR\/4Uf8Kl+IH\/RVNQ\/8BI\/8K9ioo+t1Oy+5f5Byo8d\/4VL8QP8Aoqmof+Akf+FH\/CpfiB\/0VTUP\/ASP\/CvYqKPrdTsvuX+QcqPHf+FS\/ED\/AKKpqH\/gJH\/hR\/wqX4gf9FU1D\/wEj\/wr2Kij63U7L7l\/kHKjx3\/hUvxA\/wCiqah\/4CR\/4VJD8KfH0bgt8UtQcen2SL\/CvXqKPrdTsvuX+QcqPir\/AIKR+Fdc039iXxuLzxVc6n5ctk7+bBGm9Rcx5X5RnuPyrVXwVrvj7\/gn38N7Hw\/ukuYdB0u6ltUPNzCkCl4x6nocd8Vp\/wDBURtv7E\/j3\/esx\/5NRV6b+x6279lf4UH\/AKlux\/8ARK1y1ZOtfm\/y\/IUoqUXHufG\/w\/t7n4ueJtP0XwTa3Wl61Z3Akl1JrRoVsAoIJJIGee3esbx08vgG9uvBXiPSru88VSMyGRbRpft7t0kVwCCDn1r9ObXT7WxeV7e2ht2lO6Roowpc+pwOTST6bZ3VzFczWkEtxF\/q5pIwzp9CRkV5v1OPJy3PO+oQ5OS\/U8+\/Zx8Lat4L+C\/hjSNbDJqMFuTJGxyYwzFgp+gIr0qiiu9KysenFcqSCiiimMKKKKACiiigAr59\/b3\/AOTT\/H3\/AF5\/+zCvoKvn39vf\/k0\/x9\/15\/8AswoA9k8A\/wDIieHP+wbbf+ilrerB8A\/8iJ4c\/wCwbbf+ilreoAKKKKACviz\/AIKef8ij8Iv+x803\/wBDr7Tr4s\/4Kef8ij8Iv+x803\/0OgD7TooooAKKKKACiiigAooooAKKKKACiiigD4S\/4KM3Cw\/HD9lck4x4tc\/+P2wr7trgPiR8C\/Bvxa8ReENb8T6X\/aOoeFLxr\/S3MjKIpSF5IH3hlVOD3UV39ABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAHzF\/wUW\/5Npvf+wtYf+jhXH6J\/yBNO\/wCvaL\/0AV2H\/BRb\/k2m9\/7C1h\/6OFcfon\/IE07\/AK9ov\/QBXi4\/4on6Zwn\/AAavr+hdooorzD7wKKKKAEbpXS+Gv+RF8Tf76fzrmm6V0vhr\/kRfE3++n868HOv91j\/jh\/6Ujz8d\/CX+KP8A6Ujl4f8AVj6VJUcP+rH0qSvePQCiiigAooooAyP2dv8Ak8LXv+xbT\/0ca+16+KP2dv8Ak8LXv+xbT\/0ca+16+iwv8JH4xn\/\/ACMany\/IKKKK6z54KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD5O\/4KlSeX+xN46\/2pLFfzu4q9K\/YxlE37KHwnccj\/AIR2zH5RgV3HxY+FPhr42+AtT8HeLrE6joWoqonhVyjZVgysrDkEMAQfatTwT4N0n4d+EdH8M6FbfY9G0m1js7SDcW2RooCjJ6nA60AbdFFFABRRRQAUUUUAFFFFABRRRQAV8+\/t7\/8AJp\/j7\/rz\/wDZhX0FXz7+3v8A8mn+Pv8Arz\/9mFAHsngH\/kRPDn\/YNtv\/AEUtb1YPgH\/kRPDn\/YNtv\/RS1vUAFFFFABXxZ\/wU8\/5FH4Rf9j5pv\/odfadfFn\/BTz\/kUfhF\/wBj5pv\/AKHQB9p0UUUAFFFFABRRRQAV83\/tpfFr4l\/CfSfAM3w20dtXutT19bPUI1tTPiDynbH+zkgfN7V9IUUAfmp+0x+218a\/hD+y\/wDBDxe8FtoHjLxFdXDazbXNivzJCQVj8tx8gdSCcc+mK7L9tn9vi+8D\/sz+AfFvws1iyi13xeYrpZvLWd7W2CnzTscEcSjyiWHUMOtb\/wDwUO+G+v8AxC+Jv7Ny6Z4YvPEmj2Xi1ZNVW3tzLFFCZLfcZcDCoVV8k8cGvJ\/jl\/wTv\/4VR8F\/jvq\/h\/7Z4xn1OK3h8K6FBE80uk2ZvUnmjjXnJ3NJwo+6M9SaAPrTwT8Um1zxZ8NbzWfFstnqGqeADr154bhtl+zzki3aS63YypUuVCjsa8y03\/gqn8ItY8RaLbWmneJz4b1C7XT5PFU+mGLTrS4bG2ORy2e4JwDgHNO8LeA\/FkfxG+FF5J4fvFtLP4NT6XcytEQIb0i2xbt6Odp49jXkPgX4I+L4\/wDglLc+DW8DXQ8XTXEtwujzWxFw7G73LKVPIbYBz1wKAPpGP4n2+j\/tleO7K98dXz6No3gWHV7jw2YAbS2VZCXnVxyX2YOPR++BjjNN\/wCCq3wXvvEVtb3EXiTTPDd0ji18VX2kulhPMv3oVIy5YdM7cZ6461y+q\/DjxfN+1p8Yb+Pw3fvp9\/8AB8adaXXkt5U90Y1UQq3QvuVhtzniuL+PfwT8XXn7Hv7MXhnTfBF5NqWka9pkmp6XbWpdrRdknmNIoHygs3zE925oA+nPgn+3F4G+NGpeL9L\/ALO1vwjrXhu2fUZ9L8Q2nkXM9ioJ+0xoCcrjGR1G5fWtHUv20Ph1pP7O+jfGi5l1BPBuqTxW8J+zf6QrvM0R3Ju42lWJwTwvGa8t+KPws8SeJP8AgoFpOr2ug3Q8O3fw81DSptaSE\/Z1mcyKEdxxuy64B5weOlfI\/i648aah+wj4e\/Z\/h+FfjJvHmga\/FBfgaTI9qsYuZZVlWUcMrb1XPTqc4oA+6fjt+398OvgX4ifw5Pp\/iDxR4kSxi1J9N0HTzMyWrgN5rOSFUBTuOT0rmLr\/AIKjfB2ObwzdWsevXvhnVmSK88Rx6cy2WkTNjENyx5DjPIUNgc8itLwT8NfEdj+198RvENz4clj0i88A6fptrqLx\/u5p1A3wg9yCOR7V82+E\/g34103\/AIJTfEbwpceC9RtvE82sXE8ej\/Y2+0uovIDvWPGThUbBA5C8cUAdp+21+1V+0L8K\/i7d6Z8L\/Drav4PbRLW8h1CHSjdqHdn3OHA+boBt\/HvX3v4TvrzVPC2jXmow\/Z9QuLKGa4hxjZIyAuuPYkiuT\/Z803UtF+BfgGw1m2ls9VtdDs4bm3n+\/HIsSgq3uCK9BoAKKKKACiiigAooooAKKKKACiiigAooooA+Yv8Agot\/ybTe\/wDYWsP\/AEcK4\/RP+QJp3\/XtF\/6AK6v\/AIKQR30n7Md\/\/Z9hcajOmqWUhgtYy77VlySAK+f9C\/aB09dGsI38O+IA6W8aN\/oLdQoBryMbGUpKyP0XhevSo0aiqSS16nsVFeV\/8NBab\/0LviD\/AMAWo\/4aC03\/AKF3xB\/4ANXm+zn2PtvruG\/5+L7z1SivME+PFhJ08OeIT\/24NT\/+F6WX\/Qt+Iv8AwXvR7OfYPruG\/wCfi+89LNdN4a\/5EXxL\/vJ\/OvB5vj7Yxg\/8U34g\/wDABq7TwN8YIdT+FvjXUE0LWUjtHjDRvZsHbJH3R3rwc6pz+qx91\/HD\/wBKRx4vFYedNKNRbx69mjch\/wBWv0p9eU2nx8smhUt4b8QDj\/nwapW+Punr\/wAy54g\/8AGr3vZz7HZ9dw3\/AD8X3nqNFeW\/8L+07\/oXPEH\/AIANSf8ADQGm\/wDQu+IP\/ABqPZz7B9dw3\/Pxfeep0V5X\/wANBab\/ANC74g\/8AWpH\/aE01VJHh3xB\/wCADUezn2D67hv+fi+8779nb\/k8LXv+xbT\/ANHGvtevgL9j3xVceN\/2rvEGqQ6Nqdjpy6AsJmvbZo1L+aTgE19+17+FTVJJn5Fnk41MfUlB3Wn5BRRRXUeCFFFFABRRRQAUUUUAFFFFABRRRQB8H\/tg\/tK\/H74YfHq68O\/Dbww+taAnh22vYwNOM4ad7oI7bwOoU7dvvmsT41ft3eNPgz+3B4F8Fa1cWdh8P7zTLD+2LVrYM0UtyCGlMn3hsfbwOMA5BzX6F1+evxS\/Z11L40f8FDfG9nr\/AIdvR4M1n4fPp0GvG1ZoIJisYV0k+75iPkgZzx6UAbvx2\/bO8WeHP2\/Phl8IvCmoWJ8Mzz21vrsaxpK8ss7MGjZyCUaNAjAKQcvz6V6j8av29vCPwH+Jp8L+JPCnitdIt3hivvFkOnZ0y0aUAqC+ctjIztB68Zr5vb9ijxB8CfHX7NKWcV7461yLxpdav4p8UQ27Mq7xAAXY5ZUCRnBY8kN0ziuJ\/a70nxn8Tbr41aH4z0v4mat4xg1GP\/hD9D8OwzP4ffTh5ZSVlVdsjgeYzE87sY9gD9D\/ABF+018PPCvinwbouq69FZL4vsmv9G1SYbbG5QBWC+eflVmVgwBxkV4n8bP2r\/CHxC+AXibxL4R+IOreCdJ0XxJBoz+KrPTxKlxKHG9YN3EkZB5cdhXi\/wAWfgT8Rfjl+y\/+zx8CrLwlJpuoHSrfU9Z8RatAfJ0VYIfLERPUSuZANo5wMY6kY3jjwL8SfGX\/AATlf4Wn4YahpfjHwd4gs9Jexs7U+XqMUMgP22E4+cNklmHGcnODQB9NfGT\/AIKD\/D74IeLr3wTNpvibxj4t02yhu7i00PTvNJiZFcyFiwA2oQ7dgDWFef8ABUr4OrfeFmsI9e1TQtYaOO812DT2W00iVyAsVyzY+fJGQm7A5yap\/Bf4f+JNL\/4KI\/FvxHqfhy7t9Eu\/COnwWmpTQHyJmCWytGkhGCcxuCAf4ea4e3+DPi1f+CYXjjwfD4OuofFt7qF\/NFo62+2eXOr70cL3\/dgEH+6ooA+y9O+NfhbVPi\/qPw0t7uR\/FVhpkWrTQ+WfL+zyHCkP0J5HHuK838Tft0\/Czwr8NPEXjq5vdQn0LQfETeF7tre0LS\/bVxuCqSNygEnPoDXgms+IvEX7Nv7Y2m+N\/EHgbxFrfhfxH4EsdG+2aDYPeywXsIUmJwvQkjHJ7g9jXhmtfCn4j+NP2J\/GZn+HmtWWteIPi2Ncj0KaxcXC20gUbjHjO0MdpbGOp6UAfVWk\/wDBUj4W31rraXeheLtJ1y1jWfS9BvNJYXutxOMo9sgJBB5PzEcDPNO+IX7aWq\/Ef9kPVviV8ENMu7nxRZX8VjdaNfWglu7B\/MAlWSJSckAggjsfY10eufDrV7z9vL4b+JT4ckm0HSvAt1avqphzFa3JmIWMN0DbWIA9GNYn7DngPxP4N+L37Sl1ruhXWjWOreLvtenyTxFI7mMmY+ZH2YEMhyPWgDu\/2M\/il8Rfit4P8XXvxI0ltI1Ox8RXNjZwtbGDNsqoV4x82CW+bvX0HRRQAUUUUAFFFFABXz7+3v8A8mn+Pv8Arz\/9mFfQVfPv7e\/\/ACaf4+\/68\/8A2YUAeyeAf+RE8Of9g22\/9FLW9WD4B\/5ETw5\/2Dbb\/wBFLW9QAUUUUAFfFn\/BTz\/kUfhF\/wBj5pv\/AKHX2nXxZ\/wU8\/5FH4Rf9j5pv\/odAH2nRRRQAUUUUAFFFFAGZ4n8Sad4P8O6nrur3KWemabbSXVzcSEBUjRSzH8hXi2vftqfD3wt8AtF+LeqtqFr4f1uRYtLs\/sxa8vXYsEWOLqchSc9AKx\/+CjkV7N+xb8TVsA7S\/Yoi4jBz5QnjMnTttzn2r5d8cXGn+EdF\/Ya+JOrnb8L9B0+G31K6ZDJBZTyWsQhlkVQcAMjfNjgrQB9YfAP9trwV8dvF9x4P\/s3W\/BnjGOD7VFofiaza0nuYefniDfewBkjrjnkZw\/4X\/tvfD34sfHDWPhVpdvrdh4n05ZmI1SwNvHN5TYkCZOeOoyBkcivAvjl448OftB\/tt\/s72\/wu1K18U6l4Xu7jUte1TR3EkVnYnyzskmXj5gsg256tj+KqPij4u+BIf8AgrZ4Zddbsg0Phh9CuJox8o1BnlKwuw43bWUe2QKAP0OorjPjBqHjbS\/h7qt18PNO07VfFsaA2dpqrskDnIzuKkHpnvVb4J6n4\/1b4f2dz8TNL0vR\/FjO\/n2ujyM8Cpn5SCxJz1zQB5n4S\/bk8AeMP2jLv4MW9nrln4oheaNJr6xMUEzxKzOFJO7G1SQxGD2r3Hxd4p0\/wP4V1fxDq0jQ6ZpdpLe3MiLuYRxqWbA7nAPFfnt8cPjN4A0n\/gql8Lru41+xtk0fSZ9L1W76JBdSJOIopH\/vfvEHtuFfa3j7xb4B8cad42+HmreIbeOZdDkm1i3RyslrZTRlfOJxgDDZB57UAcB+zz+254T\/AGkfEg0jw74Y8W2CPaveRalqmlNFZSIpA4mBK5OePXBr0Hwh+0V8PfHnxI17wHofiS1v\/E+iR+ZeWcbcqM4YA\/xFT1A6ZFfnj+z7r2m\/s4\/tS\/DfwB8EvirffF7wZ4qDxa9pczLPDpkakbJ0ZBiMqC7HGOBg\/eGPqX4K\/wDBP7wx8B\/j5rnxbs\/E2r6tqN3HcsLS6CBQ05LSklRyOmB2oA9A8T\/tm\/C3wn8F7f4nXmtSt4du7uTT7GKOBjdXtykrRNFFF1ZgyN7ADJrJ+B37b\/gb42eMpvB39m694N8XrbNexaN4m09rSa4gHJePP3uOcdcAkZANfBmiXkPhPwX+yh8RvE0Mr\/DXQvE+uxaqjW7SRWc8l\/OYriQYOADg5\/6Z19LfGT4peBvjh+1p8C9L+Hctn4s8SeHr251bVvEGjus0en6b9mkDQSSrwfMZlO3PBHq1AHV6b\/wU9+D2oa3a27w+JLPRLrUv7Jh8SXOkummtPuAwZs4A5ye4HJAFe8X3xy8MaX8aNM+GN5ctbeItU0o6tYeYMRXUYdlZEbu4CFselfkboHgX4k6t+w1Za1dvbar8HNH8byanq\/hq3tCup\/ZUnAldZCPugmTI6jdnOARX2D+01q2k+IP2yP2PLrQCJJrhrq7iKAh\/sLxRlCe4G0P19GoA+8qKKKACiiigAooooAKKKKACiiigAoorifjH8YvCvwH+H+o+MfGOorpui2QALAbpJZD92KNRyzseg\/oCaAO0kjSVSrqrr6MMimLbQrwIkA9lFfEOg\/8ABTKW01HQ9U8ffCDxP4B+HOvzLFpvi2+G+ABvuvMoUbVPHIJ4OeRzXof7XP7dGmfsor4fln8F6z4t0\/WIPtK6rpzKtlEm4AAykEFmByB3BHNAH055Ef8AzzX\/AL5FL5Mf\/PNf++RWb4U8RW3i\/wAL6RrtmGW01O0hvYQ4wwSRA6598EVq0AeR\/tD\/ALTXgX9l\/RtD1PxvNdW1prF8LCBrS283a2NzO\/Iwqjknr6A1X+M37V\/w5+BNx4Ki8TalIT4vuFg0xrGHz1dW2\/vmIPEfzpyM\/eHFeA\/8FMPBOl\/E7XPgF4O1rz10rW\/FUtncSW4O9A1uVDA+oLA\/ga+SP2jPht8UNN8N+CtR+JdnLZ23grxxZeEfCaPEoN7pq7iJiQTuyIIcN3yR2oA\/Yu71TTbG7trW6u7W3urk7YIZpFV5T6KpOW\/CmaxreleHLRrjUr21063wTvuJFjBwMnGTzxX5ZeKtJ1D4v\/Gf9o3SPH3ifw74T8WQ6jHa+GbzxPqVzaTabaK7+RLZBMKylcEkAknrV3W7PR5v2kfGOgftT+LYbiPRvAccPhq\/SaW2tb1DG\/nXUKggNcYLYHJJB64FAH3p4N\/aS8LePtI8CapoVnf3uneL727sbO4W3+WFrfzN7Sf3VJiOD3yK9Kh17R7nVZdMh1Gxl1KIbpLNJ0MyD1KA5H5V+aP7OOpPpfw\/\/Yph0y51BtOOueJJJFCMpnRVuSoZRwcjoPc15r4g+O2jePfEHw\/+J3hbRdE8C+KT8TksZdLtL+5l1ua3Z\/3huY2OwI2RlcYzwO9AH68anr2jaK8SajqNjYNK4jjW6nSMux6KNxGSfStDyYz\/AAKfwFflz4j+BXhr4teO\/wBtbxF4qjvtUvvD\/mf2OhmkCWkkds0ySx4PLBlQbemPrX25+xT4q1Pxp+yr8NNW1mWSbUpdHijlklzvbZlATnknCjnvQB7T5Ef\/ADzX\/vkUfZ4j\/wAs0\/75FSV8y\/tBfts2Pwr8eW3w78EeEtS+KXxJlTzptB0XI+xRbQ2+Z9pAyD07Z5xkZAPpaO3ihYmOJEJ6lVAzUlfOv7O\/7ZWk\/Hix8V6fP4X1bwr4\/wDC0Ty6n4P1BP8AS9qjhoiQNwZvl5AIJHYgnzHwz\/wUZ1S18e+HNM+JXwc8R\/DLwx4ku\/sOmeINWY+X5pztWQFBjJwOCcZz05oA+2KKKKACiiigAooooAKKKKACiiigAryf43ftIeGvgVrngbRdXt77UNX8YaoumabZ6fF5j5LIryN6KvmLn6+1esV8b\/GCaCx\/4KVfBGbXHjj06bw3qcGlNcY2fbSG3Bc8BypAHfkUAdh8bv29\/Avwa+IFz4Jh0bxF418SWEK3Gp2nhqwa5FhGwyDKw6HaQcdgRkjNdLN+2F4IuvgDB8W9Atda8VaBcSi2jsdH095r0T7ipjeIcoVI5J4HHXIr5x\/ZL+JnhX9mv4q\/tAeGfi14msfDfi678Ty6zFfaw5iF9p7oDE0crDDhcn5QeCcAdaX9hvxJpvgDwP8AHL4ka14lt\/CPw38WeMbqTw1qF7+7hRS8oE6I4wAxZMAjB8vmgD6N\/Zv\/AGu\/CX7Sl1rml6Vp2seHfEmhhH1DQ9etDb3MSOSFfB6g4+oyPUV7i7rGjO7BVUZLMcAD1r86P2BdRCftk\/GWO28Zt8Y4dQ0u0nm8exxeUqurH\/RiB8n8QHycfu+OBX1d+1BD8YpfB0\/\/AAqifwzD\/odz9v8A7eExkK+U2PJ2DG703cZoA9g0vVrLW7NbvTryC+tWJCzW8gkQkHBAI44IIrhvj18cNB\/Z3+Gt\/wCNvEltqF1pVm6RvHptuZpdzHAJGQAuerEgCvlT\/glxb\/GWL4T6W3iWbQ2+H\/m332eORZf7W+0faDkscbNm7zMd8Yr6a\/am8TaD4R\/Z3+IF\/wCJbiC20r+xrmFjcJvV3eNljQL\/ABEsVAFAGz8D\/jN4f\/aA+GekeOfDBuP7I1IP5aXUeyVGRyjKwyeQynoa8+\/aM\/bO8F\/s0+JvD\/h3XdN13Wtd1uF7i0sdDsvtEhjUlScZHOQeBk8GvEv+CZvxr8C+G\/2IbWXUfEdpZjwm11Jrvm5BsleeR0ZhjJBUjBGfSm\/t0eAvgh8WL\/wZ448TfGOb4d69a6LJe6DeWM6obu3J8xJEUjcTuYYCkE7sUAfTkn7RvgvSfhHpnxF8R3k3hDQb+FZUj16E2twhP8DRtzu9q0tQ+OngvT9f8D6R\/bMd1ceM3nTRZbT99DcGKMSP868D5SK+NPgb8ONS\/wCCjX7GfhpPixrWpR3Wl6vcJbahaxrE+oJGqrHNKCvJwzqSMZIyea6nxb8LtE\/Z\/wDjh+yZ4G0Jr250ex1LXBatdnzHiD2qcFgOmc9fWgDufiV\/wUU+HPw\/8baz4dstJ8S+MToD7Nc1Hw5pjXVppnHPmSDjK857AgjOQa7Lx9+2V8O\/A\/wg8MfEeG4vvEug+JrqKy0qPQ7Y3FxcTursI\/LHIYeWwKnkEYxmvmf9h342fDP4EfCr4leEfiNdWPg3xdo+vahca5a6ztin1KOR2MborczAp8gUZzgdmrzPwB4f8XH9lr4NHwjAvhPUdd+Mj6p4a\/tS1Z4rS0kS58pmjwf3eA3HcHI65oA+4fhV+2Z4C+MnhHxnrHh+PVl1DwjE8uraBf2TQX8G1WYDyz1zsYfVSDivTfhZ8TNC+MXw\/wBF8Y+Grn7XourQ+dbyEYPDFWUjsQykH6V8UfsW2OpfDH9rX4+aB8V545\/iPrkUGrjVLePytPv9PUMWaJcDbt3jIPoR\/CSdz\/gkXaavD8AfFM90twug3Pii7k0XzSdht8IGMf8As+YH6cZDUAfc1FFFABRRRQAV8+\/t7\/8AJp\/j7\/rz\/wDZhX0FXz7+3v8A8mn+Pv8Arz\/9mFAHsngH\/kRPDn\/YNtv\/AEUtb1YPgH\/kRPDn\/YNtv\/RS1vUAFFFFABXxZ\/wU8\/5FH4Rf9j5pv\/odfadfFn\/BTz\/kUfhF\/wBj5pv\/AKHQB9p0UUUAFFFFABRRRQBR1zRbLxJot\/pOpW6Xen30D21xBIMrJG6lWU\/UE1yngH4L+E\/hz8MrT4f6dpwu\/ClrG0MdhqZ+1KY2YsUbfncMnoa7migDyL4UfsrfDr4H\/EDxL4t8EaN\/wj114ggigvLC0fbZjYxIaOLohJJzjjngCuhk+Avw2l8U\/wDCSv4D8Ot4g877R\/ah0yH7R5n9\/ftzu9+td5RQAUUUUAeeat+zx8L9e8Qy69qXw98NX2tSyieTULjS4XmeQYw5crkngc+1dTJ4L0Ca9vryTRdPe7vrYWd1M1sheeADAic4+ZMfwnitqigDifh\/8E\/AHwomu5vBvgzQ\/DE12czyaXYRwPJ7EqASPbpXa0tFAGW3hfRm0OXRm0mxbR5VZZNPNuhgcMcsDHjaQSSTx3rzD4Wfsn\/Dv4J\/ErxB4y8EaU3h241y2S2vNMs32WJ2kEMkPRDnPTjk8c17HRQBSj0XT4tPksEsLVLCQMr2qwqImDfeBXGDnJz65rkT8FPCbfFiy+IracG8S2Ok\/wBjWchP7q1t97ORGnRSdxGR24ru6KACiiigAooooAKKKKACiiigAooooAK+HP8Agrpp8kv7PfhXU57CbUtC0rxbZXerW0P8VvslU5PYEsFz6uK+46o65oeneJtHvNK1ext9S0y8jMNxZ3UYkilQ9VZTwRQB8ift4fGT4dal+wxrEtvqVjqVp4u06C28N2lsyySXMzMjReWg5\/d4yePl2468VzP7c0L+Gf8AgmFb6NqzrZ6rHo+hWrW07BZDKkltvQA8kja2foa6Lx3\/AMEv\/htffEbwV4x8BhfA13oOqw39xYRRtcWl3GkivsEbN+7bK9Rxz06V9B\/F39nH4b\/HmTT5PHvhS08SPYKy2zXLOpjDckDawoAtfs\/ajaar8C\/h\/c2NxFdWzaDYhZYXDKcQICMjuDxXoFcp8MvhX4V+DfhSHw14N0eHQtDhkeVLOAsVDOcsfmJPJrq6AKV9oun6pPZz3ljb3c1nJ51tJNErtC+MbkJHynBIyKTVtD03XooYtT0+11GOGVZ4ku4FlEci\/ddQwOGGeCORV6igDj\/GPwd8CfELVrDVPE\/g\/Q\/EGpWBza3epWEU8sODkbWZSRzzVnxd8L\/B\/wAQBYDxN4W0fxALBt9p\/aVjHP5B9U3Kdvbp6V09FAGba+G9IsYLCG20qyt4bAk2ccVuirbZBB8sAfJkE9MdTWDa\/B3wJZ+JrnxFB4M0GLXrqUTzakumwi4eQZw5fbndyec55rsKKAKI0LTVF8Bp9qov8\/a8QqPtGRtPmcfNxxzniptP0+10mzitLK2itLWFdscMCBEQegA4FWKKACvzu\/ZUvIvhv\/wUi\/aF0PxdKum634kIvdGN2dv2u381pB5bHr8hU4\/6Zn+7X6I15n8ZP2bfhv8AH2G2Xxz4Vs9auLVWS2vWBjuYA3UJKpDAd8Zx7UAfM2la\/p\/xG\/4KkTaz4Q1G3udI8JeC5LHxPfW7AQ+c0smyFnHDMpZD7eWR\/Ca4D\/go01z4T+I3wp+Id94zh8feFR4ntfsnw4dI\/JYhGzNG6EmQ8Y+YdXA7kV9J\/sq\/sV6H+y\/oXxA8O22qt4j8N+J73zktb63Akhg8ooYZHB\/ecEjOB9OtavgH9hP4H\/DTxpD4q0HwJZ2+s20nm2kk0kkyWrdjEjsQpGePSgD3tW3KDgjIzg9aWiigAooooAKKKKACiiigAooooAK8w+M\/7Ofg748ah4Pv\/FEF0b7wpqS6pplxZ3BheOUMjEEjqpKLke1en0UAef8Axf8AgH4A+PGhS6V448L6frsTRNFFcTwr9ot8j70UuNyEdeDUPhr4AeCfD\/wg0r4ZXOjw+IfCGmwLbw2OuRrdgopJXduGCRng4r0aigDnPAvw48K\/DHRzpPhHw7pnhrTS+82ul2qQRlv7xCgZPua6JlDqVYBlIwQRkGlooArafptppNqttZW0NpbqSRFAgRQScngcdapeKfCWieONFn0fxDpNnrelT482yv4FmifHTKsCDWtRQBw\/h\/4HfDzwro+p6To3gjw\/pel6muy+s7XToo4rlfSRQuGH1pnjL4D\/AA5+IUekx+JvA+ga6mkoIrBb\/T4pRaoMYWPI+VeBwOOK7uigCvY2FtpdnDZ2VvFaWkCCOKCBAiRqOAqqOAB6Co7rSLG+vbS8uLO3nu7MsbaeSJWeEsMMUYjK5HBxVyigDy343fsyfDb9obR5rHxv4XstTnePy49TWNY7235yDHOBuX6Zx6iuz8J+CdN8I+EfD\/h23jN1ZaHawWtm93iSRRFGI0bcf4to6+5rfooA5\/xl4G0jx1ompabqdv8ALfWU1g91DhLhIZV2uqSD5lyPSmfDr4f6H8K\/BOj+E\/DdoLHQ9Kg8i1twc7VyScnuSSST6mujooAKKKKACiiigAr59\/b3\/wCTT\/H3\/Xn\/AOzCvoKvn39vf\/k0\/wAff9ef\/swoA9k8A\/8AIieHP+wbbf8Aopa3qwfAP\/IieHP+wbbf+ilreoAKKKKACviz\/gp5\/wAij8Iv+x803\/0OvtOviz\/gp5\/yKPwi\/wCx803\/ANDoA+06KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACvnbwn8WPE3xb+K3xu8M6DrNro9h4QFnptndSQB9l1JEZJJGz1C7SPSvomvnfX\/2TU1vxB8ZFg1+40TQfiVaWy3v9mHy7q2uYlCGRG9GXOR3yRQB5FB+0B8bLr4C\/ELU9Ait\/GN9oXimPS9L8RaZZ+YNQ0\/zAJ50jHDmMd1BBzxnFdfB+17rl3o\/wjTwDojfFaXXtQuNK1+SMixubGaGJZJA0bgeWyhixDDG1PUivRPhT+y+vwa+BI+GfhrxtrdpBFK8ttq+E+024ZtxVeMYzn86yvCf7FHhLwR4Z0Wx0fWtcs9Z0\/XJPEMuvrdk3d5dyIEmaUnhldAF29AKAPC\/2Uf28vHHizxNLofxE8HXkukX\/iy70Cx8W2pjW3t7jLvHaSIOTtVdu8e2a7\/9tT9pDxN8H\/iH4D8MaDr9l4ah1uxv7tru6sJLxppodnlQBEBIDFjzivS\/BP7H3gPwP4XstCtf7Ruba08SSeKkkuLolzePu5JH8IDYx7V3XiH4P+G\/FHxO8NeO9RtTc654ftbm0sS5zGizFd7bTxu+QYPbNAHyZ4e\/4KYNb2vhDStb8Aape+KPs8L+MY9PHlrobSSGND5b5ZyeHKjoD613viT9va00bVPF01l8PNe1bwl4deGzfxBFLFGlzfTJG0NtHE3zZbzUG48DPNdt4o\/Y\/wDCGvfGiX4m2VxdaN4gvFhTUVtwrxXojIKllbo2AASOuBWv4o\/Zb8F+KPAfi\/ws63tpa+Jr2PUrm4guCJYbpBHsliP8JBjU4+tAHlPxQ\/br1L4N\/DrwjdeK\/hjqFh8SfE1xNHZeCUv4pZfJiPzTNMoKgbSuF65PtT\/GX7flvpOl+Gb7wz8NfEni2PUdDXxHqSwFIDpNlzvaTf8AeddrfKOuOtdV8QP2LtA+KWh+DV8T+ItW1XxR4VleSw8TSlftO1zlkdfusDgdfSu+k+AHhi6tLqO7W4nmu\/D3\/CNXEySeX5lrhgcKOAx3HkUAfNnxK\/bm8YeG774vN\/wgl5B4G8LWdlcWXiyxkQuPtCwld8cnBJMuBt6Y5qlpP\/BQqTwhpGv3niCxm8T6jeTaXH4W0HT1WK6vFuLQSuzsRtXBDEn8AOa9k8d\/sP8Agbx6uvWt1qGuWWka7p1rp2o6bZ3zLDOLcqYpMHOHGxRnvis3XP8Agnz8K9U0uzitoNR0\/U7GSzls9US6LzQNbQ+TGBngqVJyD1PNAHDXn7ZXiLxdbfBT4jeFtPk0zwJrXiVvCXijRNWixdW13MypEyN3CMH5HByMj0+0q+Z\/Fn7Jepa94i+D9hD4nYeBPBuqTa7qOnyRhZdRvVZWtWO0Y2q2\/P1r6YoA8q\/ak+LN38D\/AID+K\/GdhAtxf6fDGtvHJ93zJJUiUn2BcH8K8X\/ao8ffGT4d\/Cz4d6z4R8R6fF4r1i607RpNKuLRXW7vJ1yxU9h8rfQV758ffhPb\/HH4Q+JPBNxP9lXVYAiT\/wDPORXV0b8GUVzf\/DOdl4p1D4Ua74y1K61bxB4Dtw0IhlKWs955aobh07sNpxnpuNAHlGuftJeMPh1+1JeaL8SrgeDvhiI7W20jVPsDva6jdygAo84BEfzZ6kAYrzHxh+3p8W5PhF4x8S6d8P4dMuNI8aW+hadcLKJIr+F5QojwTnewK\/OPl+cYr6a+MP7LGmfHbxJZzeL\/ABPrV94Tt7qG9\/4RSOUR2ck0XKFiOSM5yO+TWXD+xH4DjXWrQ3Ortomo67a+Il0kXZENtdwFShj7hfkHy0Ab\/wABf2hX+NXgbxHqN54auvCPibw7dz6fqmg30qyvbTxgkDeowQfb3r5A\/Zz\/AOCgnjXxItt4p8XXlrrPhYJqdx4httO0uVG0KO3VWhYS42vu3HjJr7q8F\/Bnw54D1Dxre6VHcLN4uvn1DUjJKWDSspU7f7owTxXO+B\/2W\/AHgH4Iah8KdO0xv+EU1GCe3vY3kPm3AmBDln6k4PXtigDwXQ\/+Cmmj3HgjxDrmsfDvxBpmoWktsdK0pCsrarDcSiOB0kwFVix5U9O2a7nw7+194r8V\/Eix8F2HwX19NUtDC\/idp7+3EehRyrvj3ODtlYoQ21TnGR1rW8L\/ALE3g3QvB6+GLy\/1DVtIgu7W7tUkYRyQG3lEkS715YAqOvWuo1T9nGwl+M0\/xH0fxHrOgajqEccWr6fZz5tNSWNdiGRDwGCjGRQB47o\/\/BSfwdqXxc1XwvL4b1iHw1DNc2Vj4qRfMgvLq3x5sQjAygyQAxOD7ZrndW\/4KWPL4V1l7P4b6toniS60Vtb8J2msyIya3bq7q7\/uzmPaI3baTkgcV674P\/Yl8D+CPFmvanpk94mk6xLc3E2ivtaKOWfHmMjn5l5HAHSrPiz9iT4aeMr3w3d6hbagZvD+iXGgWBS8YbLeZXVifVx5jYPvQB4h8cv20PHXhn4aWt1b6LJ4M8dXPhey106Xe+XcQxiTUIYGYMM9Q5wDyAeRkV12j\/8ABRzwprnxisfBGmeG9Y1bSvtsei6h4qtU\/wBFtdRcHEXlkbimUYF+g9xzXaa1+w14C8XaPaWniW+1vXbq30SHQBez3pWQ2sVylwinHGQ0ajPpmpfA\/wCxJ4F+GPxSvvGnhaW+0tr+6F9daU0nm20lwN3zjdyuSxOBQBa\/Zd+K2t+MtZ+KHhDxLqK6trPg3xJNpyXqxCMzWzKrxFgONwBINe914z+zb8F9X+FcfjfV\/E93Z6h4q8W69Pq97cWKFYlQhVijXI\/hVf1r2agAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAr59\/b3\/5NP8AH3\/Xn\/7MK+gq+ff29\/8Ak0\/x9\/15\/wDswoA9k8A\/8iJ4c\/7Btt\/6KWt6sHwD\/wAiJ4c\/7Btt\/wCilreoAKKKKACviz\/gp5\/yKPwi\/wCx803\/ANDr7Tr4s\/4Kef8AIo\/CL\/sfNN\/9DoA+06KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK+ff29\/+TT\/AB9\/15\/+zCvoKvn39vf\/AJNP8ff9ef8A7MKAPZPAP\/IieHP+wbbf+ilrerB8A\/8AIieHP+wbbf8Aopa3qACiiigAr4s\/4Kef8ij8Iv8AsfNN\/wDQ6+06+LP+Cnn\/ACKPwi\/7HzTf\/Q6APtOiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACvn39vf\/k0\/wAff9ef\/swr6Cr59\/b3\/wCTT\/H3\/Xn\/AOzCgD2TwD\/yInhz\/sG23\/opa3qwfAP\/ACInhz\/sG23\/AKKWt6gAooooAK+LP+Cnn\/Io\/CL\/ALHzTf8A0OvtOvi3\/gp2ufCPwi\/7HzTf\/Q6APtKiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACvn39vf\/k0\/wAff9ef\/swr6Cr5+\/b1Ut+yh4\/x\/wA+X\/swoA9j8A\/8iJ4c\/wCwbbf+ilrerB8A\/wDIi+HP+wbbf+ilreoAKKKKACviP\/gqhqQ0f4d\/C+9MEl0bfxtYTC3hGZJNpLbVHcnGB9a+3Kw\/FXgfw\/44hsovEGj2esR2Vwl3bLeRCQRTKcrIuejA96AOBvvj5cWbsq\/DjxpOB3TTl\/8Ai6ypP2mriMkH4YeNv\/ABf\/iq5z4k\/tueHPh9+1J4K+CaaRPquqa+US51CGcKlg8hIiUrtO8nbzyMAjrX0lQB4b\/w09P\/ANEw8bf+AC\/\/ABVH\/DT0\/wD0TDxt\/wCAC\/8AxVe5UUAeG\/8ADT0\/\/RMPG3\/gAv8A8VR\/w09P\/wBEw8bf+AC\/\/FV7lRQB4b\/w09P\/ANEw8bf+AC\/\/ABVH\/DT0\/wD0TDxt\/wCAC\/8AxVe5UUAeHr+05O3\/ADTDxt\/4AL\/8VXP+Pv229F+GNnpV14j8B+M9Oi1O8SxtS2nKd8zEBV+\/3JFfSFZmueGdJ8TRW8WradbajHbzLcQrcxhxHIpyrjPQg0AeYzftC3kLEf8ACsfGzYOONPX\/AOLqlJ+0zcRnB+GHjb\/wAX\/4quE+K\/7Z3iD4D\/E7RdK8ffDK40zwPrmqf2TpniSy1OO5kkkP3Wa2Ubgp69c\/WvqigDw7\/hp6f\/omHjb\/AMAF\/wDiqP8Ahp6f\/omHjb\/wAX\/4qvcqKAPDf+Gnp\/8AomHjb\/wAX\/4qj\/hp6f8A6Jh42\/8AABf\/AIqvcqKAPDf+Gnp\/+iYeNv8AwAX\/AOKo\/wCGnp\/+iYeNv\/ABf\/iq9yooA8OX9pydv+aYeNv\/AAAX\/wCKrD8d\/tq6R8NdLstQ8Q+APGlhbXl0llCzacp3SuQFX7\/ckV9G1n614f03xFbx2+qWFvqEEcqTpHcRhwsinKsAe4IzQB5ZN+0ReRf80x8bH\/uHr\/8AF1Tf9pq4jOD8MPG3\/gAv\/wAVXI+LP2vPE\/w5+OWh+EvF\/wALb3RfBmv6t\/YuleLBqEcqzXBBKloQu5VOD3r6doA8N\/4aen\/6Jh42\/wDABf8A4qj\/AIaen\/6Jh42\/8AF\/+Kr3KigDw3\/hp6f\/AKJh42\/8AF\/+Ko\/4aen\/AOiYeNv\/AAAX\/wCKr3KigDw3\/hp6f\/omHjb\/AMAF\/wDiqP8Ahp6f\/omHjb\/wAX\/4qvcqKAPDl\/adnb\/mmHjb\/wAAF\/8Aiqx\/G37Z2mfDvQ49W1\/4feNbGykuI7VZG05TmR2CqPv9yRX0TVLV9FsNftBa6lZw31sJElEVwgdd6sGVsHuCARQB5M37R1yI0kX4Y+NmVgGB\/s9eh\/4HVVv2nJ04Pww8bf8AgAv\/AMVWVoP7WFxf\/tZ3\/wAEtU8D6jojrp8moafrlxMDFfRpjLIm37pyRnJ5U5r6FoA8N\/4aen\/6Jh42\/wDABf8A4qj\/AIaen\/6Jh42\/8AF\/+Kr3KigDw3\/hp6f\/AKJh42\/8AF\/+Ko\/4aen\/AOiYeNv\/AAAX\/wCKr3KigDw3\/hp6f\/omHjb\/AMAF\/wDiqP8Ahp6f\/omHjb\/wAX\/4qvcqKAPD1\/acncgf8Kw8bf8AgAv\/AMVWR4+\/bM0v4Y+Gf7f8SfD\/AMaadpnnxW\/nNpyn95IwVB9\/uSBX0PXzh+1B+0jpvgPxR4e+Gel+Bz8UPHGvRPqMPhtZUjRLeANL5zs4IBzE2wYyStAHSt+0pObeKdPhn42eKVA6sNPXkEZH8dVz+09P\/wBEw8bf+AC\/\/FV2XwI+MekfHr4X6R4z0W3ns7S98yN7O5XElvNG7RyxN7q6sPwr0CgDw3\/hp6f\/AKJh42\/8AF\/+Ko\/4aen\/AOiYeNv\/AAAX\/wCKr3KigDw3\/hp6f\/omHjb\/AMAF\/wDiqP8Ahp6f\/omHjb\/wAX\/4qvcqKAPDf+Gnp\/8AomHjb\/wAX\/4qj\/hp6f8A6Jh42\/8AABf\/AIqvcqKAPDl\/acnY4\/4Vh42\/8AF\/+KrJ8eftl6Z8NPC8viHxF8PvGun6VHLHC0zacpAZ22qPv9ya+h6+df2zv2hof2fPB+j6jq3w6ufHXhi8vo4NRmRlENiN42O4Ktk7unTkDmgDdX9piWS1guIvhn42khmjWVG\/s9eVYZB+\/wChqL\/hp6f\/AKJh42\/8AF\/+Kr2bR76HVNJsr22Xbb3ECTRrjGFZQQMfQ1coA8N\/4aen\/wCiYeNv\/ABf\/iqP+Gnp\/wDomHjb\/wAAF\/8Aiq9yooA8N\/4aen\/6Jh42\/wDABf8A4qj\/AIaen\/6Jh42\/8AF\/+Kr3KigDw3\/hp6f\/AKJh42\/8AF\/+Ko\/4aen\/AOiYeNv\/AAAX\/wCKr3KigDw5f2nJ2OP+FYeNv\/ABf\/iqyvHn7ZOmfDPwjdeJvEfw\/wDGmnaRbMiSTtpynBY4H8frX0NXiH7UXxC8VeCfDMCeH\/hK3xVsJkkm1K3a7jhjt4oxuyQ6tvY4OAB2oAfH+0xJcWFreQfDXxrNbXMKTxSLp64KsoYH7\/oRUR\/aenH\/ADTDxt\/4AL\/8VW\/+zT8eNC\/aQ+EOkeNvD1lcaZZXBe3ewuQA9tLG21o+OCBjgjsRXqVAHhv\/AA09P\/0TDxt\/4AL\/APFUf8NPT\/8ARMPG3\/gAv\/xVe5UUAeG\/8NPT\/wDRMPG3\/gAv\/wAVR\/w09P8A9Ew8bf8AgAv\/AMVXuVFAHhv\/AA09P\/0TDxt\/4AL\/APFUf8NPT\/8ARMPG3\/gAv\/xVe5UUAeHr+05Oxx\/wrDxt\/wCAC\/8AxVYvxG\/bS0f4TeC7rxV4p8B+MtL0W2kjjkuJNPTAZztUff7mvoqvGv2nNa8SWPg2Oz0X4WWnxTsLoSPqOn39\/FbQxRxgMCfMUhiSOB7UAQQftMNeaZZ6ha\/DbxpcWl3BHcwyLp64ZHUMp+\/6EVEf2npx\/wA0w8bf+AC\/\/FVv\/s0fG\/R\/2hfg7ovjPRNNn0a0uPMtm064AzbSRMY3jBHDKCvBHGK9SoA8N\/4aen\/6Jh42\/wDABf8A4qj\/AIaen\/6Jh42\/8AF\/+Kr3KigDw3\/hp6f\/AKJh42\/8AF\/+Ko\/4aen\/AOiYeNv\/AAAX\/wCKr3KigDw3\/hp6f\/omHjb\/AMAF\/wDiqP8Ahp6f\/omHjb\/wAX\/4qvcqKAPD0\/acndgP+FYeNh\/3D1\/+Krxz9tn4+S6h+y\/4zgb4feLbRbqFLfzruxCRx7mHzsQx4GK+068t\/aa+KXhb4O\/BPxL4m8Yaems6RbweWNJdQ326VjiOAAgjLNgZxwMntQB23gXjwT4eH\/UOt\/8A0UtbleYfsz\/Gay\/aB+CPhjx3p+lPodrqkLhdPdw\/kGORoioYAZGU4OBxXp9ABRRRQBwfxw+F9x8YvhvqfhW18T6n4QmvChGraSQLiLawOBnscYNeKfA79iXWvgx44t\/EUvxt8Z+KkhgliGmao6m2dnQqGZSTnaSGA9QK+p6KAPy68Rfsa\/Fb4c\/tUfArVhdf8JzYQ+I7nUr\/AMQxWrK9v5lyJnFySTxsyFxxwQMcV+otFFABRRRQAUUUUAFFFFAHEfGb4b3Hxa+HWq+F7XxJqXhOa+UKNV0kgXEODn5c+vSvBfgr+wtrHwh+IWkeJ5\/jj428Tw2BYtpOoSL9muAVI2uCTxznjnjrX1jRQB+Xvx+Xxl+1Z+1J4V0\/wV8JfEHgrxp4O14SXXi\/XJmbT\/sUT4DhCPLOSFYbcsen0\/UFc7RuOTjk0tFABRRRQAUUUUAFFFFAHFfGT4c3HxY+HWr+F7bxHqPhSa\/QINV0ogXEPOflz69K+fvhD+wfrPwr8faL4km+OvjnxFDp0vmNpd9Kv2e5GCNjgk\/LX1tRQB+Z9j8W\/H\/xW\/b\/ANHb4g\/CnxU3hXw\/qElj4Zs4ImWysZ9xU6jOxULKSoJBBwAwxnHP6YUUUAFFFFABRRRQAUUUUAcd8XPh\/P8AFL4d6z4XtvEGoeF5tRhMS6rpZAng91zXzl8LP2Bda+GvjrRPEUvx68d65Fps4mbTbqVRBcAfwOCx+U96+vqKAPzo+Inxn8ZW\/wDwUm8O6tb\/AAh8T32i6JYSeFvtkcTFJ1nk3m7V9uwIufulskA8g8V+i9FFABRRRQAUUUUAFFFFABXwp+19ofjD4E\/tReEP2jPDfhO88f6ZFo0vhzUNF09T9ogdhJ5MowrHazSAHA42n1r7rooA8E\/Yd+G\/iD4X\/s66Hp3im2Ww16\/ubvWLqxBz9la6neYRH3UOAffNe90UUAFFFFABRRRQAUUUUAFfE3\/BUzx34isfgzB4I8P+Ata8VS+IpUkfUNOhaWGz8iVJNrqgLFmxx0HXntX2zRQB5p+zf45vviN8EvCeu6l4av8AwjezWaxSaTqQxNEY\/wB3k8Dhtu4ZAOCMivS6KKACiiigAooooAKKKKACviX\/AIKXfGT4reB\/C+keEfh54S1XUtM8SQTRaxrmk27zT28OQrQRbQfLd0L\/ADsDgYx3r7aooA8W\/Y4\/shf2dfCUeheBtQ+HemRxPHHoWqAfaU2uwMshwCTIQXyQCd3QV7TRRQAUUUUAFFFFABRRRQAV8tft6fFu28B+ArPw7q3wq8SfErQfEYkguP8AhH7h4fs7LtKqzRguC2eOMfKfpX1LRQB80\/8ABPH4a+MPhT+zD4f0Lxna\/wBm3vn3Fza6Y+DLZW0kjOkUhHV\/mJPcbsHpX0tRRQAUUUUAFFFFABRRRQAV8pftgfszfEb4yeKtJ8TeD\/GVnZ2uiaTeRReG9St2kgnupI2CSjHG77uCwOCox3r6tooA+a\/+CdvgPxX8Nf2TfCXh\/wAY2L6ZrFtLeN9ilGJIY2uZGUN7nJP0Ir6UoooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA\/9k=)","86616d8f":"# <img src=\"https:\/\/www.sayidaty.net\/sites\/default\/files\/imce\/user168721\/5765341-238860317.jpg\" alt=\"\u0628\u0639\u062f 34 \u0639\u0627\u0645\u0627\u064b \u0645\u0646 \u0627\u0643\u062a\u0634\u0627\u0641 \u062d\u0637\u0627\u0645 \u0627\u0644\u062a\u0627\u064a\u062a\u0646\u0643.. \u0625\u0644\u064a\u0643\u0645 \u0627\u0644\u0642\u0635\u0629 \u0627\u0644\u062a\u064a \u0644\u0645 \u062a\u0631\u0648\u064e | \u0645\u062c\u0644\u0629 \u0633\u064a\u062f\u062a\u064a\" class=\"n3VNCb\" jsname=\"HiaYvf\" jsaction=\"load:XAeZkd;\" data-noaft=\"1\" style=\"width: 834px; height: 500.995px; margin: 0px;\">","cfb0ebd6":"### Observations:\n    1.age looks a bit left skewed\n    2.Fare is left skewed\n    3.SibSp is also left skewed\n    4.Parch is also left skewed","31c2befb":"### Outlier","d84267fd":" ### I Clean missing values using Random Value Imputation Because missing values is high in most features and This the best way to To maintain distrbuation For each feature.","ebcdafb0":"# We will work on Exploring and Analyzing Data about Titanic passengers ,Then find solutions to predict People surviving this trip.","b5e0be02":"##   Cleaning missing values ","4163eab3":"##    Prepar data for Analysis & Modelling","005022ad":"##   cleaning data","ac4527b1":"##  Analysing Distributions of data","f8b54ec7":"#### Let's drop the PassengerId column. PassengerId column is seems to be an unique identifier for each row so we are dropping that it won't help us to find any insights from the data","877e02eb":"### Almost we don't have Outlier in our num_features","2f6f4860":"#### I will drop Cabin column because it has above 70% of missing values ","2aace64c":"##  Applying feature Encoding on our data"}}