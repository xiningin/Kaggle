{"cell_type":{"20674ffa":"code","51649743":"code","7f14fa6a":"code","ec77bb0d":"code","519df0a0":"code","93446c80":"code","13c213d6":"code","b589921c":"code","3fcb0054":"code","53b531f0":"code","15f5e881":"code","f3a5032e":"code","1b4b241c":"code","d866568a":"code","55da4bb5":"code","afeb62fb":"code","225d6a15":"code","5cc160f7":"code","6c5bb1a7":"code","649a4e82":"code","457b6c8c":"code","7345983a":"code","84520499":"code","77f0680f":"code","3a11d1d6":"code","bdb0d5b8":"code","297b6cc6":"code","d5dd5533":"code","656b49d0":"code","2db4f64c":"code","2ed179dc":"code","2cd21c7a":"markdown","c9c55b50":"markdown","c3b15871":"markdown","27c6d28b":"markdown","37ff4e6c":"markdown","23138c53":"markdown","246b4cab":"markdown","b01a1967":"markdown"},"source":{"20674ffa":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport os\nfrom tqdm import tqdm\nimport cv2\nfrom matplotlib.image import imread","51649743":"images = []\nlabels = []\n\nfor dirname, _, filenames in os.walk('..\/input\/friendship-goal-hackerearth\/Data\/train\/Adults'):\n    for filename in filenames:\n        images.append((os.path.join(dirname, filename)))\n        labels.append(0)\nfor dirname, _, filenames in os.walk('..\/input\/friendship-goal-hackerearth\/Data\/train\/Teenagers'):\n    for filename in filenames:\n        images.append((os.path.join(dirname, filename)))\n        labels.append(1)\nfor dirname, _, filenames in os.walk('..\/input\/friendship-goal-hackerearth\/Data\/train\/Toddler'):\n    for filename in filenames:\n        images.append((os.path.join(dirname, filename)))\n        labels.append(2)","7f14fa6a":"images","ec77bb0d":"c = images[1]\nimread(c)\nplt.imshow(imread(c))\nprint(labels[1])","519df0a0":"img = []\nfor i in range(0,len(images)):\n    imgs = cv2.imread(images[i])\n    imgs = cv2.resize(imgs,(224,224))\n    img.append(imgs)","93446c80":"data = np.array(img,dtype=np.float32)\/255.0\ndata = np.reshape(data,(data.shape[0],224,224,3))\ntarget = np.array(labels)","13c213d6":"from tensorflow.keras.utils import to_categorical\nnew_target = to_categorical(target,num_classes=3)","b589921c":"data.shape, target.shape","3fcb0054":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(data,new_target,test_size = 0.20,random_state=42)","53b531f0":"from tensorflow.keras.layers import Dense, Dropout, Conv2D, MaxPooling2D, Flatten\nfrom tensorflow.keras.models import Sequential","15f5e881":"model = Sequential()\nmodel.add(Conv2D(filters = 100,kernel_size=(3,3),activation = 'relu',input_shape = (224,224,3)))\nmodel.add(MaxPooling2D(pool_size = (2,2)))\n\nmodel.add(Conv2D(200,kernel_size=(3,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\nmodel.add(Conv2D(300,kernel_size=(3,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\nmodel.add(Conv2D(400,kernel_size=(3,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\n\nmodel.add(Conv2D(512,kernel_size=(3,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\nmodel.add(Flatten())\nmodel.add(Dropout(0.6))\n\n\nmodel.add(Dense(128,activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(512,activation='relu'))\nmodel.add(Dropout(0.6))\nmodel.add(Dense(3,activation = 'softmax'))\n\n\nmodel.compile(optimizer='adam',loss='categorical_crossentropy',metrics = ['accuracy'])","f3a5032e":"model.summary()","1b4b241c":"from tensorflow.keras.callbacks import EarlyStopping\nearly_stop = EarlyStopping(monitor='val_loss',mode='min',verbose=1,patience=15)","d866568a":"model.fit(X_train,y_train,epochs=100,validation_data=(X_test,y_test),batch_size=64,callbacks=[early_stop])","55da4bb5":"test_cvs = pd.read_csv(\"..\/input\/friendship-goal-hackerearth\/Data\/Test.csv\")","afeb62fb":"test = \"..\/input\/friendship-goal-hackerearth\/Data\/test\"\ntest_img = []\npath = test\nfor i in tqdm(test_cvs['Filename']):\n    final_path = os.path.join(path,i)\n    img = cv2.imread(final_path)\n    img = cv2.resize(img,(224,224))\n    test_img.append(img)","225d6a15":"test_data = np.array(test_img)\ntest_data = np.reshape(test_data,(test_data.shape[0],224,224,3))\nprediction = model.predict_classes(test_data)","5cc160f7":"prediction","6c5bb1a7":"class_map = {0:'Adults', 1 : \"Teenagers\", 2 : \"Toddler\"}","649a4e82":"test_cvs['Category'] = prediction\ntest_cvs['Category'] = test_cvs['Category'].map(class_map)","457b6c8c":"test_cvs.head()","7345983a":"test_cvs.to_csv('submission.csv',index=False)","84520499":"pred = pd.read_csv('.\/submission.csv')\nactual = pd.read_csv(\"..\/input\/sample\/Sample Submission.csv\")","77f0680f":"pred.head()","3a11d1d6":"actual.head()","bdb0d5b8":"inverse_class = {'Adults': 0 ,'Teenagers':1, 'Toddler':2}\npred['Category'] = pred['Category'].map(inverse_class)\nactual['Category'] = actual['Category'].map(inverse_class)","297b6cc6":"pred.head()","d5dd5533":"actual.head()","656b49d0":"y_pred = pred['Category'].to_numpy()\ny_actual = actual['Category'].to_numpy()","2db4f64c":"from sklearn.metrics import recall_score\nscore = 100*recall_score(y_actual,y_pred,average='macro')","2ed179dc":"score","2cd21c7a":"**Building a Model**","c9c55b50":"**Lets do Evaluation**","c3b15871":"**Resizing Images to 256*256**","27c6d28b":"**Splitting a Data**","37ff4e6c":"**Scaling The Images**","23138c53":"**Importing Libraries**","246b4cab":"**Extracting Images and labels from Directory**","b01a1967":"**Applying EarlyStopping to prevent from Overfitting**"}}