{"cell_type":{"3f44ee10":"code","4bce0eb1":"code","6b7348f5":"code","2f214b4d":"code","ad3d7e59":"code","55753641":"code","6c919eeb":"code","cf36931f":"code","2b7d4500":"code","8b1b293f":"code","a2426deb":"code","e99f656b":"code","d5de21d3":"code","1f403110":"code","7fcb8947":"code","da179065":"code","fac2fb35":"code","a8296c63":"code","61926017":"code","584e4abc":"code","d13fbc15":"code","0dd4ba51":"code","5968b874":"code","7e82cd76":"code","d9f63b94":"code","4b3b7554":"code","a747be20":"code","cc72462a":"code","e0490614":"code","4de982f5":"code","e57f3eee":"markdown","7bb2989d":"markdown","303e3fb2":"markdown","3ce45f8b":"markdown","96545238":"markdown","98125d11":"markdown","66265da3":"markdown","c88b6b84":"markdown","0bbe1b1b":"markdown","beab2b80":"markdown","62b8f725":"markdown","37141e52":"markdown","edbe06a6":"markdown"},"source":{"3f44ee10":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4bce0eb1":"import seaborn as sns\nimport matplotlib.pyplot as plt","6b7348f5":"names = ['sepal.length', 'sepal.width','petal.length','petal.width','variaty']\ndata_iris = pd.read_csv(os.path.join(dirname, filename), names=names)","2f214b4d":"data_iris.head()","ad3d7e59":"data_iris.describe()","55753641":"target_0 = np.zeros(50); target_1 = np.zeros(50)+1; target_2 = np.zeros(50)+2\ntarget = np.hstack((target_0,target_1,target_2))\ntarget","6c919eeb":"sns.set_style(\"whitegrid\")\nplt.figure(figsize=(10, 8))\nplt.scatter(data_iris['sepal.length'], data_iris['sepal.width'], c=target, alpha=0.5, s=data_iris['petal.length']*100)\nplt.xlabel('sepal.length')\nplt.ylabel('sepal.width')\nplt.show()","cf36931f":"import seaborn as sns","2b7d4500":"sns.set()\nplt.hist(data_iris['sepal.length'])\nplt.xlabel('sepal.length (cm)')\nplt.ylabel('count')\nplt.title('Histogram (sepal.length\/count)')\nplt.show()","8b1b293f":"sns.set_style(\"whitegrid\")\nsns.pairplot(data_iris, hue='variaty')","a2426deb":"from sklearn.model_selection import train_test_split","e99f656b":"X_train, X_test, y_train, y_test = train_test_split(data_iris, target, test_size=0.2)\n\nprint(\"X_train shape :\", X_train.shape)\nprint(\"X_test shape :\", X_test.shape)","d5de21d3":"from sklearn.neighbors import KNeighborsClassifier","1f403110":"plt.figure(figsize=(12,8))\nplt.subplot(121)\nplt.scatter(X_train['sepal.length'], X_train['sepal.width'], c=y_train, alpha=0.8)\nplt.title(\"Train_set\")\nplt.subplot(122)\nplt.scatter(X_test['sepal.length'], X_test['sepal.width'], c=y_test, alpha=0.8)\nplt.title(\"Test_set\")\nplt.show()","7fcb8947":"model = KNeighborsClassifier()\n\nX_train = X_train[['sepal.length' ,'sepal.width' ,'petal.length' ,'petal.width']]\nX_test = X_test[['sepal.length' ,'sepal.width' ,'petal.length' ,'petal.width']]\n\nmodel.fit(X_train, y_train)\n\nprint(\"Score train :\", model.score(X_train, y_train))\nprint(\"Score Test :\", model.score(X_test, y_test))","da179065":"from sklearn.model_selection import validation_curve","fac2fb35":"k = np.arange(1,50)\n\ntrain_score, val_score = validation_curve(model, X_train, y_train, 'n_neighbors',k, cv=5)","a8296c63":"plt.figure()\nplt.plot(k, train_score.mean(axis=1), label=\"train_score\")\nplt.plot(k, val_score.mean(axis=1), label=\"val_score\")\nplt.legend()\nplt.title(\"validation curve\")\nplt.show()","61926017":"from sklearn.model_selection import GridSearchCV","584e4abc":"param_grid = {'n_neighbors': np.arange(1, 50), 'metric': ['euclidean', 'manhattan']}\n\ngrid = GridSearchCV(KNeighborsClassifier(), param_grid, cv=5)\ngrid.fit(X_train, y_train)","d13fbc15":"grid.best_score_","0dd4ba51":"grid.best_params_","5968b874":"#save model\nmodel = grid.best_estimator_","7e82cd76":"model.score(X_test, y_test)","d9f63b94":"from sklearn.model_selection import learning_curve","4b3b7554":"N, train_score, val_score = learning_curve(model, X_train, y_train, train_sizes=np.linspace(0.1,1.0,10), cv=5)\n\nplt.figure()\nplt.plot(N, train_score.mean(axis=1), label='train_score')\nplt.plot(N, val_score.mean(axis=1), label='validation_score')\nplt.legend()\nplt.title(\"Validation curve\")\nplt.xlabel('Samples')\nplt.ylabel('Score')\nplt.show()","a747be20":"def predict_flowers(model, sepal_length, sepal_width, petal_length, petal_width):\n    X_predict = np.array([sepal_length, sepal_width, petal_length, petal_width]).reshape(1,4)\n    predict_value = model.predict(X_predict)\n    print(\"predict :\", predict_value)\n    print(\"predict proba :\", model.predict_proba(X_predict))","cc72462a":"predict_flowers(model, 5.1,3.5,1.4,0.2)","e0490614":"predict_flowers(model, 5.0, 2.0, 3.5,1.0)","4de982f5":"predict_flowers(model, 6.9, 3.2 ,5.7 ,2.3)","e57f3eee":"BONUS:","7bb2989d":"*this here the global view of data*","303e3fb2":"# Description:\n","3ce45f8b":"my goal here is to see if I need more samples, but this graph shows that I don't really need more samples.","96545238":"**pre-analysis**","98125d11":"# KNN classifier","66265da3":"**Creat histogram**","c88b6b84":"# Good think:\nThe good question here is : have you need more data ?","0bbe1b1b":"the best params Neighbors classifier is:k and for the distance you can use euclidean","beab2b80":"we can count the length of sepal in cm","62b8f725":"as you can see, we can do the difference juste in show the length of petal ","37141e52":"## design of graph according to the length of petal","edbe06a6":"\"\"\"\nCreate by karl NG'BINA\nComputer vision and data scientist engineer\n\"\"\""}}