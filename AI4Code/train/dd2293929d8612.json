{"cell_type":{"8bbc0871":"code","727cbd12":"code","fbc24a4c":"code","2ae77ada":"code","5409a682":"code","7eab60f0":"code","b48478e9":"code","dfc21a96":"code","dcb5265b":"markdown","b0e881b6":"markdown","7d593d4d":"markdown","3569eb27":"markdown","943ac8be":"markdown","17f15aa7":"markdown","4433b9d7":"markdown","2b00f98c":"markdown","20a1ec38":"markdown","1a070e7a":"markdown","5b3bc618":"markdown"},"source":{"8bbc0871":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","727cbd12":"data = pd.read_csv('\/kaggle\/input\/iris-flower-dataset\/IRIS.csv')","fbc24a4c":"data.shape","2ae77ada":"data.head()","5409a682":"data.groupby('species').size()","7eab60f0":"data.info()","b48478e9":"data.groupby('species').mean()","dfc21a96":"import seaborn as sns\nsns.pairplot(data,hue ='species')","dcb5265b":"*Virginica*\n![iris_virginica2.jpg](attachment:iris_virginica2.jpg)","b0e881b6":"*Versicolor*\n![IRIS_VERSICOLOR.jpg](attachment:IRIS_VERSICOLOR.jpg)","7d593d4d":"**how to distinguish one from another?**\n\nWell there's many ways to do that but in this case easiest solution is to compare mean length of each specie one another.","3569eb27":"I've made this simple tutorial for beginners to show how to start exploring and understand basic dataset concepts similar to iris dataset. If you found this notebook helpful please **Upvote**!","943ac8be":"*Setosa*\n![iris_setosa.jpg](attachment:iris_setosa.jpg)","17f15aa7":"** What is The Iris Dataset**\n\nIris dataset includes petal and sepal length and width of each flower  \n\n![iris_petal_sepal.png](attachment:iris_petal_sepal.png)\n\nand 3 diffrent types of iris species(50 records of each) which are:\n\n","4433b9d7":" Seems like I've been right this time! IRIS.csv file contains 5 columns sepal_length,sepal_width,petal_length,petal_width,species.\n \n Now let's make sure dataset contains 50 records of each type of flower and it has no null values.","2b00f98c":"So overall dataset contains 5 columns and 150 rows.\n\n**How to check that?**\n\nfirst we need to read IRIS.csv file to be able to work with it.","20a1ec38":"Now while we defined .csv file as 'data' simply use .shape tuple that gives dimensions of dataset.","1a070e7a":"**Data Visualization**\n\nHere's very simple way to visualize data using all parameters of data.","5b3bc618":"Next step is to take a look at dataset."}}