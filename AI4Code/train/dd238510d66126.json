{"cell_type":{"77cc1a99":"code","4e129dfb":"code","e4d34fdd":"code","8d38007b":"markdown","7accd244":"markdown","158895af":"markdown","e5f09904":"markdown","4302603a":"markdown","ae4df240":"markdown","3564cb2d":"markdown","7ef32399":"markdown","7ed836db":"markdown","cd0653f7":"markdown","5fe28869":"markdown","bf6ab41e":"markdown","07296a8f":"markdown","9c7ed8cc":"markdown","31742582":"markdown","283f4cd6":"markdown","94f14a7c":"markdown","bff16db9":"markdown","8be7f2f6":"markdown","7824aa84":"markdown","14b5b87b":"markdown","9666459e":"markdown","dcf556d4":"markdown","c818bdde":"markdown","6d56cc0e":"markdown","f2ce1ee1":"markdown","f47cb34b":"markdown","9ad4e238":"markdown","8234a760":"markdown","eda0dd8f":"markdown","666ba91d":"markdown","75e902f2":"markdown","ff056f45":"markdown","cd001540":"markdown","376c3104":"markdown","6f869fa4":"markdown"},"source":{"77cc1a99":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport csv\nfrom scipy.stats import zscore \nimport statistics \nimport matplotlib.pyplot as plt","4e129dfb":"loc = (\"\/kaggle\/input\/march-madness-analytics-2020\/2020DataFiles\/2020DataFiles\/2020-Mens-Data\/MDataFiles_Stage1\/MRegularSeasonCompactResults.csv\")\nmarch_loc = (\"\/kaggle\/input\/march-madness-analytics-2020\/2020DataFiles\/2020DataFiles\/2020-Mens-Data\/MDataFiles_Stage1\/MNCAATourneyCompactResults.csv\")\nid_name_loc = (\"\/kaggle\/input\/march-madness-analytics-2020\/2020DataFiles\/2020DataFiles\/2020-Mens-Data\/MDataFiles_Stage1\/MTeams.csv\")\n\n# Keys = team ID, vals = team name\nid_to_name = {}\n\ndef id_name():\n    with open(id_name_loc) as f:\n        reader = csv.DictReader(f)\n        # maps ID to name\n        for row in reader:\n            team_id = row[\"TeamID\"]\n            id_to_name[team_id] = row[\"TeamName\"]\n\ndef massey(year, only_madness):\n    id_name()\n    teams = set({})\n    num_games = 0\n    with open(loc) as g:\n        reader = csv.DictReader(g)\n        for row in reader:\n            if int(row['Season']) == year:\n                teams.add(id_to_name[row['WTeamID']])\n                teams.add(id_to_name[row['LTeamID']])\n                num_games += 1\n    id_matrix = {}\n    matrix_id = 0\n    teams = sorted(teams)\n    # make teams into an index \n    for team in teams:\n        id_matrix[team] = matrix_id\n        matrix_id += 1\n    # open games file\n    # date, team, and score info\n    teami = []; scorei = []; teamj = []; scorej = []\n    with open(loc) as f:\n        reader = csv.DictReader(f)\n        for row in reader:\n            if int(row['Season']) == year:\n                current_i = id_matrix[id_to_name[row['WTeamID']]]\n                current_j = id_matrix[id_to_name[row['LTeamID']]]\n                s_i = int(row['WScore'])\n                s_j = int(row['LScore'])\n                # can be used later\n                home_away = row['WLoc']\n                teami.append(current_i)\n                scorei.append(s_i)\n                teamj.append(current_j)\n                scorej.append(s_j)\n    # Massey matrix and point differential vector\n    numTeams = max(max(teami),max(teamj)) + 1\n    m = np.zeros((numTeams,numTeams))\n    p = np.zeros(numTeams)\n    # k = 0\n    for k in range(len(teami)):\n        i = teami[k]\n        j = teamj[k]\n        # update massey matrix\n        m[i,i] += 1; m[j,j] += 1\n        m[i,j] += -1; m[j,i] += -1\n        # update point differential vector\n        p[i] += (scorei[k] - scorej[k])\n        p[j] += (scorej[k] - scorei[k])\n        # update k\n        k += 1\n    # solve Massey system\n    m[-1,:] = 1\n    p[-1] = 0\n    r = np.linalg.solve(m,p)\n\n    team_rating = []\n    qualified = set({})\n    with open(march_loc) as g:\n        reader = csv.DictReader(g)\n        for row in reader:\n            if int(row['Season']) == year:\n                qualified.add(id_to_name[row['WTeamID']])\n                qualified.add(id_to_name[row['LTeamID']])\n    for i in range(len(r)):\n        if only_madness:\n            if teams[i] in qualified:\n                team_rating.append([teams[i],r[i]])\n        else:\n            team_rating.append([teams[i],r[i]])\n    team_rating = sorted(team_rating, key = lambda x: x[1], reverse= True)\n\n    return team_rating\n\nmassey(2018, True)","e4d34fdd":"loc = (\"\/kaggle\/input\/march-madness-analytics-2020\/2020DataFiles\/2020DataFiles\/2020-Mens-Data\/MDataFiles_Stage1\/MRegularSeasonCompactResults.csv\")\nmarch_loc = (\"\/kaggle\/input\/march-madness-analytics-2020\/2020DataFiles\/2020DataFiles\/2020-Mens-Data\/MDataFiles_Stage1\/MNCAATourneyCompactResults.csv\")\nid_name_loc = (\"\/kaggle\/input\/march-madness-analytics-2020\/2020DataFiles\/2020DataFiles\/2020-Mens-Data\/MDataFiles_Stage1\/MTeams.csv\")\n\n# Keys = team ID, vals = team name\nid_to_name = {}\n\nname_to_id = {}\n\ndef id_name():\n    with open(id_name_loc) as f:\n        reader = csv.DictReader(f)\n        # maps ID to name\n        for row in reader:\n            team_id = row[\"TeamID\"]\n            id_to_name[team_id] = row[\"TeamName\"]\n            name_to_id[row[\"TeamName\"]] = int(row[\"TeamID\"])\n            \ndef massey(year, only_madness):\n    teams = set({})\n    num_games = 0\n    with open(loc) as g:\n        reader = csv.DictReader(g)\n        for row in reader:\n            if int(row['Season']) == year:\n                teams.add(id_to_name[row['WTeamID']])\n                teams.add(id_to_name[row['LTeamID']])\n                num_games += 1\n            if int(row['Season']) > year:\n                break\n    id_matrix = {}\n    matrix_id = 0\n    teams = sorted(teams)\n    # make teams into an index \n    for team in teams:\n        id_matrix[team] = matrix_id\n        matrix_id += 1\n    # open games file\n    # date, team, and score info\n    teami = []; scorei = []; teamj = []; scorej = []\n    with open(loc) as f:\n        reader = csv.DictReader(f)\n        for row in reader:\n            if int(row['Season']) == year:\n                current_i = id_matrix[id_to_name[row['WTeamID']]]\n                current_j = id_matrix[id_to_name[row['LTeamID']]]\n                s_i = int(row['WScore'])\n                s_j = int(row['LScore'])\n                # can be used later\n                home_away = row['WLoc']\n                teami.append(current_i)\n                scorei.append(s_i)\n                teamj.append(current_j)\n                scorej.append(s_j)\n    # Massey matrix and point differential vector\n    numTeams = max(max(teami),max(teamj)) + 1\n    m = np.zeros((numTeams,numTeams))\n    p = np.zeros(numTeams)\n    # k = 0\n    for k in range(len(teami)):\n        i = teami[k]\n        j = teamj[k]\n        # update massey matrix\n        m[i,i] += 1; m[j,j] += 1\n        m[i,j] += -1; m[j,i] += -1\n        # update point differential vector\n        p[i] += (scorei[k] - scorej[k])\n        p[j] += (scorej[k] - scorei[k])\n        # update k\n        k += 1\n    # solve Massey system\n    m[-1,:] = 1\n    p[-1] = 0\n    r = np.linalg.solve(m,p)\n\n    team_ratings = []\n    team_ids = []\n    qualified = set({})\n    with open(march_loc) as g:\n        reader = csv.DictReader(g)\n        for row in reader:\n            if int(row['Season']) == year:\n                qualified.add(id_to_name[row['WTeamID']])\n                qualified.add(id_to_name[row['LTeamID']])\n    for i in range(len(r)):\n        if only_madness:\n            if teams[i] in qualified:\n                team_ratings.append(r[i])\n                team_ids.append(name_to_id[teams[i]])\n\n    team_zscores = zscore(team_ratings)\n\n    \"\"\" Cinderella Analysis \"\"\"\n\n    # maps team ids to their massey ratings zscores\n    id_zscore = {}\n\n    for i in range(len(team_ids)):\n        id_zscore[team_ids[i]] = team_zscores[i]\n\n    # 32 teams \n    day_138_139 = []\n    weight_32 = 1\/31    \n    # 16 teams \n    day_143_144 = []\n    weight_16 = 2\/31\n    # 8 teams \n    day_145_146 = []\n    lowest_145_146 = 100\n    weight_8 = 4\/31\n    # 4 teams \n    day_152 = []\n    lowest_152 = 100\n    weight_4 = 8\/31\n    # 2 teams final \n    day_154 = []\n    lowest_154 = 100\n    weight_2 = 16\/31\n\n    with open(march_loc) as g:\n        reader = csv.DictReader(g)\n        for row in reader:\n            if int(row['Season']) == year:\n                current_day = row['DayNum']\n                team_1 = int(row['WTeamID'])\n                team_2 = int(row['LTeamID'])\n                if current_day == '138' or current_day == '139':\n                    day_138_139.append(id_zscore[team_1])\n                    day_138_139.append(id_zscore[team_2])\n                elif current_day == '143' or current_day == '144':\n                    day_143_144.append(id_zscore[team_1])\n                    day_143_144.append(id_zscore[team_2])\n                elif current_day == '145' or current_day == '146':\n                    day_145_146.append(id_zscore[team_1])\n                    day_145_146.append(id_zscore[team_2])\n                    lowest = min(lowest_145_146,id_zscore[team_1],id_zscore[team_2])\n                    lowest_145_146 = lowest\n                elif current_day == '152':\n                    day_152.append(id_zscore[team_1])\n                    day_152.append(id_zscore[team_2])\n                    lowest = min(lowest_152,id_zscore[team_1],id_zscore[team_2])\n                    lowest_152 = lowest\n                elif current_day == '154':\n                    day_154.append(id_zscore[team_1])\n                    day_154.append(id_zscore[team_2])\n                    lowest = min(lowest_154,id_zscore[team_1],id_zscore[team_2])\n                    lowest_154 = lowest\n\n    weighted_zscore_average = 0\n    weighted_zscore_average += weight_32 * statistics.mean(day_138_139)\n    weighted_zscore_average += weight_16 * statistics.mean(day_143_144)\n    weighted_zscore_average += weight_8 * statistics.mean(day_145_146)\n    weighted_zscore_average += weight_4 * statistics.mean(day_152)\n    weighted_zscore_average += weight_2 * statistics.mean(day_154)\n\n    return [weighted_zscore_average, lowest_154]\n\ndef plot_weighted_average():\n    id_name()\n    n_groups = 0\n    weighted_zscore = []\n    Lowest_Zscore_Final  = []\n    x_labels = []\n\n    for year in range(1985,2020):\n        r = massey(year,True)\n        n_groups += 1\n        weighted_zscore.append(r[0])\n        Lowest_Zscore_Final.append(r[1])\n        x_labels.append(\"'\" + str(year)[-2:])\n\n    # create plot\n    fig, ax = plt.subplots()\n    index = np.arange(n_groups)\n    bar_width = 0.35\n    opacity = 0.8\n\n    rects1 = plt.bar(index, weighted_zscore, bar_width,\n    alpha=opacity,\n    color='b',\n    label='Weighted Z-Score')\n\n    rects2 = plt.bar(index + bar_width, Lowest_Zscore_Final , bar_width,\n    alpha=opacity,\n    color='g',\n    label='Finals Lowest Zscore')\n\n    plt.xlabel('Year')\n    plt.ylabel('Z-Score')\n    plt.title('Z-Scores vs. Year (Men\\'s)')\n    plt.xticks(index + bar_width, x_labels)\n    plt.legend()\n\n    plt.tight_layout()\n    plt.show()\n\n# plot_weighted_average()","8d38007b":"2. We took a deeper look into the progression of the individual tournaments using violin plots. Looking at the development during each stage we could see the madness unfolding. We also looked at the shapes as another indicator for madness.","7accd244":"March Madness happens in six single elimination stages. Here are the number of teams at each stage: \n* Stage 1: 68 teams \n* Stage 2: 32 teams \n* Stage 3: 16 teams \n* Stage 4: 8 teams \n* Stage 5: 4 teams \n* Stage 6: 2 teams ","158895af":"When I think of madness, I think about modest teams beating champions and progressing far into the tournament. We all have a sense of the strength of teams when they face off. However, a way to quantify that strength is ideal for an analysis. Therefore, we will be using a [Massey Rating](https:\/\/en.wikipedia.org\/wiki\/Kenneth_Massey) in order to determine the relative strengths of the teams that will be facing off in every year's March Madness Tournament. Massey ratings are used widely in sports analytics and will give each team a rating that ranges from negative to positive values, where higher values represent a stronger rating. ","e5f09904":"1. We were able to devise a metric to quantify the madness using a weighted z-score average of team ratings for every year. A higher weighted average indicates that higher rated teams progressed far into the tournament, crushing any lower rated teams. By contrast, a lower weighted average would incidcate a year of madness as lower rated teams progressed deep into the tournament. We were able to validate our metric using analyses from Wikipedia. ","4302603a":"**Madness Statistic Weighted Average = (average z-score of teams in stage 2 - stage 6) * (corresponding weights)**","ae4df240":"So, our statistic for madness is going to be an average of the ratings that teams have in stage 2 through stage 6 inclusive. Before we use the ratings however, we must acknowledge that the Massey ratings are going to be different every year. For example, the range of Massey ratings might be -12 to 27 in one year but -15 to 24 in another year. Therefore, we want to **convert the Massey ratings of all teams into their corresponding z-scores**. \n\nThis allows us to normalize the ratings for each year providing a better comparison across years. This way, the differences in ratings are going to be relative to the average of their respective year. A high z-score indicates an above average rating and a low z-score indicates a below average rating. This way a team with a z-score of 1 can be approximated to a team with a z-score of 1 on another year. ","3564cb2d":"Women's 2012 tournament z-scores vs. stages","7ef32399":"Men's 2011 tournament z-scores vs. stages","7ed836db":"Weighted Average Z-Score for Women's Data","cd0653f7":"# Recap","5fe28869":"We see that the 2012 women's tournament start off similarly to the men's 2011 tournament. A bi-modal distribution with a peak around 0 and another peak around -1 is apparent. Likewise, the lower peak is almost entirely eliminated after stage 1. We can start to see the stark contrast starting at stage 3. The peak around 0 is almost completely lost meaning that teams with average ratings were eliminated. Then, starting at stage 4 only the highest rated teams remain. ","bf6ab41e":"In this notebook we can have accomplished two things. ","07296a8f":"# The Maddest of Them All and the Least","9c7ed8cc":"Weighted Average Z-Score for Men's Data","31742582":"# Quantifying Madness","283f4cd6":"Below is the code to generate the Massey ratings for all teams that qualified for March Madness in a given year. I will use men's data and the year 2018 as an example.","94f14a7c":"We can see that the year 2011 in men's March Madness had the lowest weighted z-score and the lowest z-score appearance in a final's game. The wikipedia page for that year seems to agree with our analysis, as it states that \"[upsets ruled the 2011 tournament](https:\/\/en.wikipedia.org\/wiki\/2011_NCAA_Division_I_Men%27s_Basketball_Tournament)\". \n\nOn the other end, the year 2012 in the women's tournament featured the highest weighted z-score and highest z-score appearance in a final's game. This means that the results were most likely highly predictable with the highest rated teams progressing far into the tournament. The wikipedia page for the 2012 women's tournament states that \"[for only the second time in history, and the first time since 1989, all four of the number one seeds made it to the Final Four](https:\/\/en.wikipedia.org\/wiki\/2012_NCAA_Division_I_Women%27s_Basketball_Tournament),\" confirming our findings. ","bff16db9":"Madness refers to outcomes that are unexpected. It refers to the games where an underdog faces a previous champion, and comes out victorious to the surprise of the crowd. Using our rating system, this would mean a lower team beating a higher rated team. Since we want to create a statistic that can quantify the madness in the March Madness tournament, we will want to look at all the games played in the tournament. ","8be7f2f6":"# Team Ratings","7824aa84":"![mens_2011.png](attachment:mens_2011.png)","14b5b87b":"![Z-Score_mens.png](attachment:Z-Score_mens.png)","9666459e":"If we take the average rating of the teams at each stage, we can get a sense of the general strength of the teams in that stage. If a season contains no madness whatsoever, we will expect the higher rated teams to win. This means a high average rating for all stages between 2 and 6. However, if a season is totally mad and underdogs are winning every single game, the average rating for all stages between 2 and stage 6 will be low.\n> Every team in March Madness makes it to stage 1, therefore we do not take its average into account","dcf556d4":"From our table we can see that the average weighted z-score is quite high for both men and women averaged across the years. This is not surprising since we expect higher rated teams to progress further in most years. However, it is quite striking how much higher the mean weighted average is for women than it is for men. The standard deviation is quite similar for both of them, so it does seem to indicate that there is a difference between the two. A similar trend can be seen for the average lowest z-score in finals. The article \u201c[Why NCAA Men\u2019s Basketball Has More Upsets Than Women\u2019s Basketball](https:\/\/thefederalist.com\/2017\/03\/15\/ncaa-mens-basketball-upsets-womens-basketball\/)\u201d makes similar observations to my analysis.\n\n> Men's March Madness seems to feature more upsets than women's","c818bdde":"Let's take a closer look at the March Madness games that were played in 2011 in the men's tournament and 2012 for the women's tournament. To dig deeper into our analysis, we can look at the progression of the teams throughout the stages in each respective tournament. In order to do this, I will use a violin plot to highlight the distributions of the teams as the tournament progresses. For this visualization, [D3.js](https:\/\/www.d3-graph-gallery.com\/graph\/violin_jitter.html) was used for its capabilitity of rendering a beautiful violin plot. The data inputted is the same as what was used to plot the weighted z-scores. ","6d56cc0e":"For the men's data we see that in stage 1, the 68 teams form a bi-modal distribution with one peak around 0 and another peak around -1.5. This indicates that there are ratings clustered around that region. Immediately after stage 1, we see that the lower peak is almost completely lost, as all but two of the lowest rated teams are eliminated from the tournament. Additionaly, in stages 4 and 5, we see that two relatively low rated teams remaining; one team with a slightly below average team rating and another with a rating almost one standard deviation below the average. It is unusual to observe that these two teams still made it to stage 5 considering 64 of the 68 teams have already been eliminated. Moreover, plenty out of those eliminated had much higher ratings. We can see how incredible this is when we compare it to the 2012 results for the women's tournamnet. ","f2ce1ee1":"The average at each stage should also be weighted. A team that makes it to the finals (stage 6) is much more impressive than a team that simply makes it past the first round (stage 2). Therefore, we want to take a weighted average of the stages between stage 2 - stage 6. How we will weight is based on the inverse of the number of teams that make it to that round. So, the average of the teams that made it to stage 6 will count 16 times more than the average of the teams that made it to stage 2 in the computation of our overall tournament average. ","f47cb34b":"The individual rating z-scores have colors from blue to red, indicating below average to above average ratings respectively. ","9ad4e238":"![womens_2012.png](attachment:womens_2012.png)","8234a760":"Now that we are able to quantify the relative strengths of teams, we can begin our analysis. ","eda0dd8f":"From our deeper dive into the violin plots, we observe that the triangle shape of the women's 2012 tournament indicates years with no madness where the highest rated teams never seemed to lose. On the contrary, the more flag shaped contour of the men's 2011 tournament suggests upsets and madness, as the highest rated teams get eliminated and seemingly average teams progress deep into the tournament. ","666ba91d":"# Closer Look","75e902f2":"![Weighted_Average_Women.png](attachment:Weighted_Average_Women.png)","ff056f45":"![Screen%20Shot%202020-04-30%20at%2010.38.54%20AM.png](attachment:Screen%20Shot%202020-04-30%20at%2010.38.54%20AM.png)\n> Finals lowest z-score refers to the z-score of the lower rated team in the finals. It tells us whether or not there was an underdog in the finals game for that year's tournament. In the graph, it is represented in green.","cd001540":"Below is the code required to run our measurement. Men's data is used for this example. The output is small, so I have commented out the last line that generates the graph. To see it, simply uncomment out the last line.","376c3104":"# Results","6f869fa4":"Therefore, a high weighted average for a year indicates that teams with high ratings relative to the average that year made it far into the tournament. This is an indication that the tournamnet was not very mad or unexpected that year. On the other hand, if we have a weighted average that is low, it indicates that teams with ratings below average made it far into the tournament. And in order for that to happen, it must have been a tournament full of madness."}}