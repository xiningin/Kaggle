{"cell_type":{"d3f0c260":"code","80fd3457":"code","7b9f26cc":"code","540221e9":"code","235fe5c6":"code","b411b888":"code","411bf0c2":"code","9106970a":"code","53a5ce06":"code","ffa6f5fb":"code","65795175":"code","1ca8381f":"code","e8650d7e":"code","6165ce00":"code","d5171c99":"markdown","60c8887b":"markdown","334ed712":"markdown","48d86fe3":"markdown","9bf9c077":"markdown","264bf855":"markdown","d0272396":"markdown"},"source":{"d3f0c260":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nimport matplotlib.pyplot as plt\nimport seaborn as sns","80fd3457":"df = pd.read_csv('..\/input\/years-of-experience-and-salary-dataset\/Salary_Data.csv')\ndf.head()","7b9f26cc":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error","540221e9":"X,y = np.array(df.YearsExperience).reshape(-1,1), np.array(df.Salary).reshape(-1,1)","235fe5c6":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2)\nX_train.shape","b411b888":"model = LinearRegression()\nmodel.fit(X_train, y_train)","411bf0c2":"#Visualize model with LinearReg using sklearn\nplt.scatter(X_train, y_train, color = \"red\")\nplt.plot(X_train, model.predict(X_train), color = \"green\")\nplt.title(\"Salary vs Experience (Training set)\")\nplt.xlabel(\"Years of Experience\")\nplt.ylabel(\"Salary\")\nplt.show()","9106970a":"avg_x = np.average(X_train)\navg_y = np.average(y_train)\navg_x, avg_y\nm = 0\nn = 0\nfor x,y in zip(X_train,y_train):\n    m = m + (x - avg_x)*(y- avg_y)\n    n = n + (x - avg_x)**2\ncoef = m\/n","53a5ce06":"intercept = np.array([y_train[i] - coef*X_train[i] for i in range(24)]).mean()\ncoef, intercept","ffa6f5fb":"# Coefficient and Intercept of Sklearn model\nmodel.coef_, model.intercept_","65795175":"Predicted_Value = [coef*x + intercept for x in X_test]\nPredicted_Value","1ca8381f":"model.predict(X_test)","e8650d7e":"mean_squared_error(y_test, Predicted_Value)","6165ce00":"mean_squared_error(y_test, model.predict(X_test))","d5171c99":"## Compare predicted value of 2 Methods","60c8887b":"## Compare Coefficient Value and Intercept Value of 2 Methods","334ed712":"### Import Necessary Libraries","48d86fe3":"### Split Dataset into Trainset and Testset","9bf9c077":"## Compare Valuation of 2 Methods with Mean Squared Error\n*Formular here:*\n<img src=\"https:\/\/miro.medium.com\/max\/600\/1*3wB5otkgKEiv9X6Gdd0r2Q@2x.png\">","264bf855":"### Load Salary Dataset","d0272396":"# Let do this with statistical formular\n*Formular here:*\n<img src=\"https:\/\/upload.wikimedia.org\/math\/d\/a\/a\/daadbe12908cba8971ddc97c2904e582.png\">"}}