{"cell_type":{"9b04bff4":"code","d35a2465":"code","1c7b1ac5":"code","57ef174b":"code","a3e84ee9":"code","46ad3046":"code","36da9d00":"code","ee6c5856":"code","b9e0b1bd":"code","61ee04f2":"markdown","a4f00525":"markdown","ffc980d2":"markdown","982b6574":"markdown","aca0beb1":"markdown","7559288b":"markdown","423fdfd7":"markdown","16668488":"markdown","35edc66b":"markdown"},"source":{"9b04bff4":"import numpy as np \nimport matplotlib.pyplot as plt \nimport matplotlib.colors as mcolors\nimport pandas as pd \nimport random\nimport math\nimport time\nimport datetime\nimport seaborn as sns\nfrom scipy.integrate import odeint\nfrom scipy.optimize import curve_fit\nfrom sklearn.metrics import r2_score\n","d35a2465":"# Fetch data\n\nconfirmed_df  = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv')\ndeaths_df     = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv')\nrecoveries_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_recovered_global.csv')\n\nconfirmed_df        = confirmed_df.groupby(['Country\/Region']).sum()\nrecoveries_df       = recoveries_df.groupby(['Country\/Region']).sum()\ndeaths_df           = deaths_df.groupby(['Country\/Region']).sum()\n\ndates               = np.array([dt[:-3] for dt in confirmed_df.columns[2:]])\n\ndate_ticks     = np.arange(0, len(dates), 7) # interval of 7 days\ndate_labels    = dates[date_ticks]\n\nprint('Data available till:', confirmed_df.columns[-1])","1c7b1ac5":"def sir_model_fitting(country, cluster_population=50000000, passed_data=0, show_plots=1, days_to_predict=10):\n    \"\"\"Fit SIR model and plot data vs model result for 90 days for comparison\"\"\"\n    if passed_data:\n        ydata   = country\n        country = 'Worldwide (excluding China)' \n    else:\n        confirmed          = np.array(confirmed_df.loc[country, confirmed_df.columns[2:]])\n        recovered          = np.array(recoveries_df.loc[country, recoveries_df.columns[2:]])\n        deaths             = np.array(deaths_df.loc[country, deaths_df.columns[2:]])\n        ydata              = confirmed - recovered - deaths\n        \n    xdata = np.arange(len(ydata))+1\n    days_to_predict = len(xdata) + days_to_predict\n    ind   = np.where(ydata>0)[0][0]\n    model_output = ydata[ind:]\n    model_input = np.arange(len(model_output))\n\n    inf0 = model_output[0]\n    sus0 = cluster_population - inf0\n    rec0 = 0\n\n    def sir_model(y, x, beta, gamma):\n        sus = -beta * y[0] * y[1]\/cluster_population\n        rec = gamma * y[1]\n        inf = -(sus + rec)\n        return sus, inf, rec\n\n    def fit_odeint(x, beta, gamma):\n        return odeint(sir_model, (sus0, inf0, rec0), x, args=(beta, gamma))[:,1]\n\n    popt, pcov = curve_fit(fit_odeint, model_input, model_output)\n    fitted = fit_odeint(np.arange(days_to_predict-ind), *popt)\n    fitted = np.append(np.zeros((ind,1)), fitted)\n\n    if show_plots:\n        fig = plt.figure()\n        plt.plot(xdata, ydata, 'o')\n        plt.plot(np.arange(len(fitted))+1, fitted)\n        plt.plot([len(xdata), len(xdata)],[0, np.max(fitted)], ':k')\n        plt.legend(['data', 'model prediction', \"today we're here\"])\n        plt.title(\"SIR model fit to 'active cases' of \" + country)\n        plt.ylabel(\"Population infected\")\n        plt.xlabel(\"Days since 22 Jan 2020\")\n        plt.grid()\n\n        print(\"Optimal parameters: beta =\", round(popt[0],3), \" gamma = \", round(popt[1],3))\n    #     print('Goodness of fit', round(r2_score(ydata, fit_odeint(xdata, *popt)),4)*100, ' %')\n        print('Optimal parameters Standard Dev: std_beta =', np.round(np.sqrt(pcov[0][0]),3), ' std_gamma =', np.round(np.sqrt(pcov[1][1]),3))\n    else:\n        return fitted\n","57ef174b":" def data_plot_country(country, show_plots=1): \n    confirmed          = np.array(confirmed_df.loc[country, confirmed_df.columns[2:]])\n    recovered          = np.array(recoveries_df.loc[country, recoveries_df.columns[2:]])\n    deaths             = np.array(deaths_df.loc[country, deaths_df.columns[2:]])\n        \n    if show_plots:\n        fig = plt.figure()\n        plt.stackplot(dates, confirmed - recovered - deaths, recovered, deaths, labels=['active cases', 'recovered','deaths'])\n        plt.grid()\n        plt.title('Cases in ' + country)\n        plt.ylabel(\"# of cases\")\n        plt.xticks(date_ticks, date_labels)\n        plt.legend(loc='upper left')\n        print('Mortality rate:', round(deaths[-1]\/confirmed[-1]*100,2), '%')\n    \n    return confirmed, recovered, deaths","a3e84ee9":"country= \"China\"\nchina_confirmed, china_recovered, china_fatalities  = data_plot_country(country)\nplt.plot([1, 1], [0, np.max(china_confirmed)], ':r', label='Hubei Lockdown')\nplt.legend(loc='upper left')\nplt.show()\n\nsir_model_fitting(country)","46ad3046":"country= \"Korea, South\"\nkorea_confirmed, _,_  = data_plot_country(country)\nplt.show()\n\nsir_model_fitting(country)","36da9d00":"number_of_top_countries_of_interest = 10\n\nworldwide_confirmed                 = confirmed_df.loc[:, confirmed_df.columns[2:]].sum(axis=0)\nworldwide_recoveries                = recoveries_df.loc[:, confirmed_df.columns[2:]].sum(axis=0)\nworldwide_fatalities                = deaths_df.loc[:, confirmed_df.columns[2:]].sum(axis=0)\nworldwide_active_cases              = np.array(worldwide_confirmed - worldwide_recoveries - worldwide_fatalities)\n\ntop_confirmed_worldwide             = confirmed_df.loc[:, confirmed_df.columns[-1]] - recoveries_df.loc[:, recoveries_df.columns[-1]] - deaths_df.loc[:, deaths_df.columns[-1]]\ntop_confirmed_worldwide             = top_confirmed_worldwide.sort_values(ascending=False)[:number_of_top_countries_of_interest]\n\ntotal_of_top_countries      = 0\nconfirmed_of_top_countries  = np.zeros((1, len(confirmed_df.columns[2:])))\nrecoveries_of_top_countries = np.zeros((1, len(recoveries_df.columns[2:])))\nfatalities_of_top_countries = np.zeros((1, len(deaths_df.columns[2:])))\n\nfig, ax = plt.subplots(1, 3, figsize=(20, 4))\ndf = []\nfor country in top_confirmed_worldwide.index:\n    data    = top_confirmed_worldwide[country]\n    total_of_top_countries = total_of_top_countries + data\n    confirmed_country, recoveries_country, fatalities_country = data_plot_country(country, show_plots=0)\n    confirmed_of_top_countries    = confirmed_of_top_countries  + np.array(confirmed_country)\n    recoveries_of_top_countries   = recoveries_of_top_countries + np.array(recoveries_country)\n    fatalities_of_top_countries   = fatalities_of_top_countries + np.array(fatalities_country)\n    ax[0].plot(dates, confirmed_country - recoveries_country - fatalities_country,label=country)\n    country_fit = sir_model_fitting(country, show_plots=0, days_to_predict=10)\n    df.append(country_fit)\n    ax[1].plot(dates, country_fit[:-10], label=country)\n    \n\nax[0].grid()\nax[0].set_title('Highest number of active cases Worldwide')\nax[0].set_ylabel(\"# confirmed cases\")\nax[0].set_xticks(date_ticks)\nax[0].set_xticklabels(date_labels)\nax[0].legend()\n\nax[1].grid()\nax[1].set_title('Model prediction, active cases worldwide')\nax[1].set_ylabel(\"# predicted confirmed cases\")\nax[1].set_xticks(date_ticks)\nax[1].set_xticklabels(date_labels)\nax[1].legend()\n\n\ntop_fatalities_worldwide    = deaths_df.loc[:, deaths_df.columns[-1]].sort_values(ascending=False)[:number_of_top_countries_of_interest]\n\nfor country in top_fatalities_worldwide.index:\n#     data    = top_fatalities_except_china[country]\n    _, _, fatalities_country = data_plot_country(country, show_plots=0)\n    ax[2].plot(dates, fatalities_country,label=country)\n\nax[2].grid()\nax[2].set_title('Highest number of fatalities worldwide')\nax[2].set_ylabel(\"# fatalities\")\nax[2].set_xticks(date_ticks)\nax[2].set_xticklabels(date_labels)\nax[2].legend()\nplt.show()\n\ntotal_proportion_of_top_countries = total_of_top_countries\/worldwide_active_cases[-1]\nprint('Total proportion of top countries in worldwide active cases  = ', round(total_proportion_of_top_countries,2)*100, '% \\n')\n\n\nconfirmed_non_top_countries      = np.array(worldwide_confirmed) - np.array(confirmed_of_top_countries[0])\nrecovered_non_top_countries      = np.array(worldwide_recoveries) - np.array(recoveries_of_top_countries[0])\nfatalities_non_top_countries     = np.array(worldwide_fatalities) - np.array(fatalities_of_top_countries[0])\nprojection_non_top_countries     = sir_model_fitting(confirmed_non_top_countries -  recovered_non_top_countries - fatalities_non_top_countries, passed_data=1, cluster_population=50000000, show_plots=0)\n\n# projection = np.sum(df, axis=0)\/total_proportion_of_top_countries # Rough estimate using top countries data only\nprojection = np.sum(df, axis=0) + projection_non_top_countries\n\nsir_model_fitting(worldwide_active_cases, passed_data=1, cluster_population=50000000)\nplt.plot(projection)\nplt.legend(['Worldwide data', 'Prediction by using worldwide data', \"today we're here\", 'Prediction by modelling top clusters individually'])\nplt.show()\n","ee6c5856":"sir_model_fitting('India')","b9e0b1bd":"sir_model_fitting('United Kingdom')","61ee04f2":"### SIR (Susceptible-Infectious-Recovered) model for prediction \n\nDescription of model https:\/\/www.youtube.com\/watch?v=Qrp40ck3WpI\n\n","a4f00525":"##\u00a0Worldwide situation\n* The analysis of pooling all the data together has its drawbacks in the sense that it is hard to get an exact handle on the population of the world that is susceptible at once.\n* Another drawback is that clusters of infection start at different times and they have access to immediate neighbourhood and can spread infections fast even if they start out small.\n* This means one must look at individual big clusters (consider countries for now), and model their growth independent of other clusters.\n* Adding up these growth projections can then give a fair estimate of Worldwide trend\n* This prediction starts diverging from the one which uses aggregated data because if no measures are taken soon enough, then each cluster will spiral out of control. Resulting in explosion of number of cases around manyparts of the world.\n* At this point it may be useful to consider the two approaches as upper and lower bounds of likely future scenarios.\n* The overall data (including China) appears to consist of two part behaviour. Initial ***China phase*** and then ***World wide pandemic phase*** (WHO declared March 11).  \n* Whereas number of cases (reported) outside China were significantly less until February, they exponentially grew since beginning of March and from there the World wide pandemic phase becomes more pronounced (China recovery and Italy and Iran numbers blowing up).  \n* If identical measures like China were adopted somewhere around end of February, the worldwide cases could have plateaued in about the same time as China. Currently the numbers are significantly higher than China's when they implemented shutdown of Hubei (end of January).\n","ffc980d2":"## <p style='text-align: right;'> . . .  Work in progress <\/p>","982b6574":"### Plotting function for countries","aca0beb1":"## Situation in China\n* The curve for total number of cases has plateaued and more people are coming out of the disease. \n* The overall situation in China has matured and it is a good model to look to for making inferences about other countries.  \n* Although, the situation in China was limited to Hubei province but,its total population (58.5m) and land-mass size are comparable to some of the countries like **Italy and South Korea**.","7559288b":"### South Korea\n* South Korea was an interesting case in terms of both the infection spread and its containment.\n* [Patient **31**](https:\/\/graphics.reuters.com\/CHINA-HEALTH-SOUTHKOREA-CLUSTERS\/0100B5G33SB\/index.html) before whome the situation was very much contained, transmitted the infection to about 1000 people. It is a good reminder of why ***People with no symptoms*** should take social distancing seriously\n* In terms of strategy to contain the spread, South Korea aggressively tested and tracked and isolated only the affected people instead of opting for area-wide lockdowns.","423fdfd7":"### India\n* Having recently recorded its first few cases, the localised spread is starting to become dominant.\n* A good thing about Indian scenario is government is taking proactive steps to ensure this can be contained. Whether it does or doesn't will be seen in coming few weeks.\n* The data and consequently predictions reflect a scenario where no measures are in place. (sidenote: the model fit is very poor so far, more data in coming weeks can make it mroe accurate)","16668488":"### United Kingdom","35edc66b":"### Data from John Hopkins University\nData automatically updated everyday"}}