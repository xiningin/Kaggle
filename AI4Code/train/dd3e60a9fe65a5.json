{"cell_type":{"29c8f54b":"code","5d0fa8d0":"code","f14a49f0":"code","1e70006a":"code","7158b063":"code","fa4cdac3":"code","3829a8cd":"code","9899a118":"code","3a9f9b11":"code","42365fc3":"code","c3984753":"code","1e0946f1":"markdown","d972394a":"markdown","1d101bb7":"markdown","863aea95":"markdown","b709757b":"markdown","b053fddc":"markdown","2204fc85":"markdown","9d6d5266":"markdown","0fa2af56":"markdown","80eaacbb":"markdown","df18b3b4":"markdown","5f75abff":"markdown","3990554f":"markdown","a3a57ead":"markdown","cccb1d51":"markdown","0baf061d":"markdown"},"source":{"29c8f54b":"%matplotlib inline\nimport pandas as pd       \nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom scipy import interpolate,signal\nimport warnings\nwarnings.filterwarnings('ignore')\nplt.rcParams['font.size']=12","5d0fa8d0":"# function to interpolate time history data\ndef interp(x,y,xi):\n    f = interpolate.interp1d(x, y,fill_value=\"extrapolate\",kind='quadratic')\n    # use interpolation function returned by interp1d\n    return f(xi)  \n\n# function to plot time history data\ndef plot_th(x,y,xs,xe,ys,ye,x_lab,y_lab):\n    plt.figure(figsize=(12,6))\n    plt.plot(x,y,'b')\n    plt.xlim([xe,xs])\n    plt.ylim([ys,ye])\n    plt.grid(all)\n    ax = plt.gca()\n    ax.invert_xaxis()\n    plt.grid(b=True, which='major', color='k', linestyle='-')\n    plt.grid(b=True, which='minor', color='k', linestyle='--')\n    plt.minorticks_on()\n    plt.xlabel(x_lab);\n    plt.ylabel(y_lab);\n    \n# function to calculate rms level time history using numpy.convolve\ndef window_rms(a,window_size):\n    a2 = np.power(a,2)\n    window = np.ones(window_size)\/float(window_size)\n    return np.sqrt(np.convolve(a2,window,'same'))","f14a49f0":"df = pd.read_csv('..\/input\/seaice.csv')","1e70006a":"# get northern hemisphere data\ndf_north = df[df.hemisphere =='north']\n# drop Missing and Source Data columns\ndf_north = df_north.drop(['Missing','Source Data'],axis=1)\n# convert year, month,and day columns to datetime format\ndf_north['Date'] = pd.to_datetime(df_north[['Year','Month','Day']])\n# find present time to use as reference to compute day before present\npresent = df_north.Date[len(df_north.index)-1]\n# compute days before present and add column to dataframe\ndf_north['DBP'] = present - df_north.Date  \n# drop year, month, and day columns from dataframe\ndf_north = df_north.drop(['Year','Month','Day'],axis=1)\n# create numpy vectors for interpolation\nday_meas = np.array(df_north.DBP.dt.days)\nextent_meas = np.array(df_north.Extent)\n# define analysis parameters northern hemisphere\nt_start = day_meas[0]   # start interpolation \"days before present\"\nt_end = 0 # end interpolation \"days before present\"\ndt = 1   # interpolation delta time in days\nfs = 1\/dt   # samples per day\nnf = 0.5 * fs  # nyquest frequency cycles per day\nxlim_low = t_start # time history plot lower limit in days\nxlim_high = t_end # time history plot higher limit in days\n# interpolation points\ntime_interp = np.arange(t_start,t_end-1,-dt) \n# interpolate Sea Ice extent data\nextent_interp = interp(day_meas,extent_meas,time_interp)\n# plot interpolated extent data\ny_lab = 'Extent 10^6 sq km'\nx_lab = 'Days Before Present'\nplot_th(time_interp,extent_interp,xlim_low,xlim_high,3,17,x_lab,y_lab);\nplt.title('Northern Hemisphere Sea Ice Extent');","7158b063":"# PSD analysis for total record lenght\n[freq, psd] = signal.welch(extent_interp,fs=1\/dt,nperseg=4096,\n                             return_onesided=True,scaling='spectrum')\n# scale spectra in decibels relatice to maximum level\npsd_max = max(psd)\ndb = 10*np.log10(psd\/psd_max)\n# Plot power spectral densitys\nplt.figure(figsize=(12,6))\nplt.semilogx(365*freq,db,'b-o')  # scale frequency in cycles per year\nplt.grid(b=True, which='major', axis='both')\nplt.grid(b=True, which='both', axis='x')\nplt.xlabel(\"Frequency(cycles\/year)\")\nplt.ylabel(\"Amplitude Spectrum,dB\")\nplt.xlim([0.1,10])\nplt.ylim([-50,10]);\nplt.title('Northern Hemisphere Sea Ice Extent Spectra');","fa4cdac3":"extent_rms = window_rms(extent_interp,365*3)\ny_lab = 'North Extent RMS, dB relation to maximum rms value'\nx_lab = 'Years Before Present'\ntitle = 'RMS Extent over running 3 year windows'\nxlim_low = 37\nxlim_high = 2\nplt.ymin = -2.0\nrms_max = max(extent_rms) # get maximum level to use as decibel reference\nplot_th(time_interp\/365,20*np.log10(extent_rms\/rms_max),xlim_low,xlim_high,-2,0.5,x_lab,y_lab);\nplt.title('Northern Hemisphere Sea Ice Extent rms time history');","3829a8cd":"from scipy.signal import butter, lfilter\nfrom scipy.signal import freqz\n# function to define a lowpass butterworth filter object\ndef butter_lowpass(lowcut,  fs, order):\n    nyq = 0.5 * fs\n    low = lowcut \/ nyq\n    b, a = butter(order, [low], btype='lowpass')\n    return b, a\n# function to calculate a lowpass butterworth filter operation\ndef butter_lowpass_filter(data, lowcut,  fs, order):\n    b, a = butter_lowpass(lowcut,  fs, order=order)\n    y = lfilter(b, a, data)\n    return y\n# Sample rate and desired cutoff frequencies (in cycles\/day).\nlowcut = 0.001 # cycles\/day\ndt = 1  # delta time in days\nfs = 1\/dt  # sample rate in samples per day\n# calculate lowpass filtered signal\ny = butter_lowpass_filter(extent_interp, lowcut, fs, 6)\n# lowpass filtered signal\nplt.figure(figsize=(12,6))\nplt.plot(time_interp\/365, y)\nplt.xlabel('time (years)')\nplt.grid(True)\nplt.axis('tight')\nplt.xlim([37,2])\nplt.ylim([8,16])\nplt.title('Northern Hemisphere Sea Ice Extent low passs filtered')\nplt.show()","9899a118":"import fbprophet\ndfp = pd.DataFrame({'ds':df_north.Date,'y':df_north.Extent})\ndf_prophet = fbprophet.Prophet(changepoint_prior_scale=0.15)\ndf_prophet.fit(dfp);","3a9f9b11":"# Make a future dataframe for 2 years\ndf_forecast = df_prophet.make_future_dataframe(periods=365 * 2, freq='D')\n# Make predictions\ndf_forecast = df_prophet.predict(df_forecast)\n# plot forcast result\ndf_prophet.plot(df_forecast, xlabel = 'Date', ylabel = 'Extent');\nplt.title('Northern Hemisphere Sea Ice Extent fbprophet 2 year forcast');","42365fc3":"# Plot the trends\ndf_prophet.plot_components(df_forecast);","c3984753":"plt.figure(figsize=(12,6))\nplt.plot(dfp.ds,dfp.y,'b')\nplt.plot(df_forecast['ds'],df_forecast['yhat'],'r')\n#plt.plot(df_forecast['ds'],df_forecast['yhat_lower'],'r--')\n#plt.plot(df_forecast['ds'],df_forecast['yhat_upper'],'r-')\nts = pd.to_datetime('20000101', format='%Y%m%d', errors='coerce')\nte = pd.to_datetime('20200101', format='%Y%m%d', errors='coerce')\nplt.xlim([ts,te])\nplt.grid(all)\nplt.grid(b=True, which='major', color='k', linestyle='-')\nplt.grid(b=True, which='minor', color='k', linestyle='--')\nplt.minorticks_on()\nplt.xlabel('Years Before Present')\nplt.ylabel('Sea Ice Extent, 10^6 sq km');\nplt.legend(['measured','forcast']);","1e0946f1":"\nSea Ice extent is down about -1 dB in 35 years in the northern hemisphere. There are dropoffs a both ends of the record that are not plotted, that is due to edge effects from the convolve function used to calculate the running rms level.\n","d972394a":"\nCalculate amplitude spectra for the complete time record. This should identify the major frequency components in the data. As the Sea Ice record appears to be non-stationary, the spectra peak magnitudes are averaged over the trend.\n","1d101bb7":"\nLet's look more closely at the fbprophet forecast.","863aea95":"## Sea Ice Extent  Analysis","b709757b":"\nDefine some functions to use in the analysis.\n","b053fddc":"  \nAs expected the only major frequency component that appears in the data is a yearly cycle. You can also see harmonics of the yearly cycle.\n","2204fc85":"\nNow lets try to fit a time history model to the data using Facebook Open Source fbprophet package.\n","9d6d5266":"Lets plot the overall trend and the yearly, monthly and Daily trends","0fa2af56":"\nRead Sea Ice extent data into pandas dataframe.\n       ","80eaacbb":"\nLet's also try to extract the trend by low pass filtering the data below the yearly scale\n","df18b3b4":"\nThe trend and the yearly pattern correlate well with the above rms time history and lowpass filter data.","5f75abff":"\nLet's calculate the rms time history of the signal to get an estimate of the variation in signal strength over the extent of the Sea Ice record. Used a 3-year window for the running rms level calculation.\n","3990554f":"\nCreate a 2 year forecast object and plot forecast results.","a3a57ead":"\nThis shows the same trend as the rms time history above. The oscillations below 30 years are due to the lowpass filter transit response.\n","cccb1d51":"\nExtract northern hemisphere data, interpolate at day increments and plot the interpolated time history of Sea Ice extent.\n","0baf061d":"\nSetup input for prophet analysis.\n"}}