{"cell_type":{"6393afbc":"code","eff74271":"code","802411ea":"code","d88b4bba":"code","f252454b":"code","80a1610f":"code","1ffc207d":"code","d24554e6":"code","5bff46f2":"code","5ba8190e":"code","a45b47c3":"code","2f2f01f8":"code","abb209df":"code","07f910b9":"code","15a6fef2":"code","f0f582a0":"code","4d729c91":"code","46e84e7d":"code","639d2577":"code","a9631a50":"code","f00af4c9":"code","35dac88e":"code","4bbd1125":"code","f1e906bc":"code","33f22456":"code","4c0a3826":"code","db606b1c":"code","991c5a3f":"code","d474478c":"markdown","7d11db46":"markdown","fad252fe":"markdown","8e2e12e7":"markdown","2c16fc14":"markdown","10e43afc":"markdown","529d1568":"markdown","8c00c07b":"markdown","dd067ed3":"markdown","724ba78d":"markdown","45b90627":"markdown","92ae3d18":"markdown","8181e082":"markdown","3b69fc0b":"markdown","4673215e":"markdown","dfeae992":"markdown","b012dd2d":"markdown","a6317716":"markdown","3caedbc4":"markdown","eb90c159":"markdown","24d7e80d":"markdown","45d8b920":"markdown","c94d7f42":"markdown","6bc0cec8":"markdown"},"source":{"6393afbc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom matplotlib import colors\nimport matplotlib.image as mpimg\nimport datetime as dt\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eff74271":"data_calendar=pd.read_csv('\/kaggle\/input\/airbnb-mexico-city\/calendar.csv')\ndata_listings=pd.read_csv('\/kaggle\/input\/airbnb-mexico-city\/listings.csv')\ndata_reviews=pd.read_csv('\/kaggle\/input\/airbnb-mexico-city\/reviews.csv')\ncity_img = mpimg.imread('\/kaggle\/input\/mexico-city-image-png\/mexico_city.png')","802411ea":"data_calendar['date'] = pd.to_datetime(data_calendar['date'], format='%Y-%m-%d', errors='ignore')\ndata_calendar['price'] = data_calendar['price'].str.replace('$', '', regex = 'true').str.replace(',', '', regex = 'true')\ndata_calendar['price'] = data_calendar['price'].astype(float)\n\ndata_listings['price'] = data_listings['price'].str.replace('$', '', regex = 'true').str.replace(',', '', regex = 'true')\ndata_listings['price'] = data_listings['price'].astype(float)\ndata_listings['host_since'] = pd.to_datetime(data_listings['host_since'], format='%Y-%m-%d', errors='ignore')","d88b4bba":"reviews = data_listings[['review_scores_rating', 'review_scores_accuracy',\n       'review_scores_cleanliness', 'review_scores_checkin',\n       'review_scores_communication', 'review_scores_location',\n       'review_scores_value', 'price', 'latitude', 'longitude']].dropna()","f252454b":"n_bins = 20\n\nfig, axs = plt.subplots(1, 6, sharey=True, tight_layout=True, figsize=(18, 4))\naxs[0].hist(reviews['review_scores_accuracy'], bins=n_bins)\naxs[1].hist(reviews['review_scores_cleanliness'], bins=n_bins)\naxs[2].hist(reviews['review_scores_checkin'], bins=n_bins)\naxs[3].hist(reviews['review_scores_communication'], bins=n_bins)\naxs[4].hist(reviews['review_scores_location'], bins=n_bins)\naxs[5].hist(reviews['review_scores_value'], bins=n_bins)\n\naxs[0].set_title('Precis\u00e3o')\naxs[1].set_title('Limpeza')\naxs[2].set_title('Check-in')\naxs[3].set_title('Comunica\u00e7\u00e3o')\naxs[4].set_title('Localiza\u00e7\u00e3o')\naxs[5].set_title('Custo-benef\u00edcio')\n\nprint('')","80a1610f":"fig, axs = plt.subplots(1, 1, figsize=(18, 6))\naxs.hist(reviews['review_scores_rating'], bins=100)\naxs.set_title('Histograma de rating total')\nprint('')","1ffc207d":"new_reviews = reviews[(reviews['review_scores_cleanliness'] == 10) | (reviews['review_scores_cleanliness'] < 6)]\n\nnew_reviews['limpo'] = np.where(new_reviews['review_scores_cleanliness'] == 10, True, False)\n\ncolor = ['blue', 'red']\nlabel = ['Limpo', 'Sujo']\nfig, ax = plt.subplots(figsize=(10, 10))\nfor i, limpo in enumerate([True, False]):\n    scatter_x = new_reviews['longitude'][new_reviews['limpo'] == limpo]\n    scatter_y = new_reviews['latitude'][new_reviews['limpo'] == limpo]\n    ax.scatter(scatter_x, scatter_y, c = color[i], label = label[i], s = 10, alpha=0.5)\nax.legend()\n\nplt.imshow(city_img, extent=[-99.33, -98.965, 19.17, 19.575], alpha=1)\nplt.ylabel(\"Latitude\", fontsize=14)\nplt.xlabel(\"Longitude\", fontsize=14)\nplt.title('Quartos limpos e sujos')\nplt.show()","d24554e6":"new_reviews = reviews[(reviews['review_scores_location'] == 10) | (reviews['review_scores_location'] < 6)]\n\nnew_reviews['bem_loc'] = np.where(new_reviews['review_scores_location'] == 10, True, False)\n\ncolor = ['blue', 'red']\nlabel = ['Bem localizado', 'Mal localizado']\nfig, ax = plt.subplots(figsize=(10, 10))\nfor i, bem_loc in enumerate([True, False]):\n    scatter_x = new_reviews['longitude'][new_reviews['bem_loc'] == bem_loc]\n    scatter_y = new_reviews['latitude'][new_reviews['bem_loc'] == bem_loc]\n    ax.scatter(scatter_x, scatter_y, c = color[i], label = label[i], s = 10, alpha=0.5)\nax.legend()\n\nplt.imshow(city_img, extent=[-99.33, -98.965, 19.17, 19.575], alpha=1)\nplt.ylabel(\"Latitude\", fontsize=14)\nplt.xlabel(\"Longitude\", fontsize=14)\nplt.title('Bem localizados vs mal localizados')\n\nplt.show()","5bff46f2":"def plot_map_prices(df, title=''):\n    cmap = plt.get_cmap(\"plasma\")\n    ax = df.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\", figsize=(10,10),\n                           s=np.sqrt(df['price']), label=\"Pre\u00e7o\",\n                           c=\"price\", cmap=cmap,\n                           colorbar=False, alpha=0.4,\n                          )\n    plt.imshow(city_img, extent=[-99.33, -98.965, 19.17, 19.575], alpha=0.8)\n    plt.ylabel(\"Latitude\", fontsize=14)\n    plt.xlabel(\"Longitude\", fontsize=14)\n\n    prices = df[\"price\"]\n    tick_values = np.linspace(prices.min(), prices.max(), 6, endpoint=True)\n    cbar = plt.colorbar(plt.cm.ScalarMappable(cmap=cmap), ax=ax)\n    cbar.ax.set_yticklabels([\"$%d\"%(v) for v in tick_values], fontsize=14)\n    cbar.set_label('Pre\u00e7os', fontsize=16)\n\n    plt.legend(fontsize=16)\n    plt.title(title)\n    plt.show()","5ba8190e":"# Removing price outliers\nnew_reviews = reviews[reviews['price'].between(reviews['price'].quantile(.15), reviews['price'].quantile(.85))]\n","a45b47c3":"plot_map_prices(new_reviews, 'Pre\u00e7os por regi\u00e3o')","2f2f01f8":"df_cal_price = pd.merge(\n    data_calendar[['listing_id', 'date', 'available']],\n    data_listings[['id', 'price', 'latitude', 'longitude']],\n    how=\"inner\",\n    on=None,\n    left_on='listing_id',\n    right_on='id',\n    left_index=False,\n    right_index=False,\n    sort=True,\n    suffixes=(\"_x\", \"_y\"),\n    copy=True,\n    indicator=False,\n    validate=None,\n)\n","abb209df":"df_natal = df_cal_price[(df_cal_price['date'].map(lambda x: x.day) == 25) & (df_cal_price['date'].map(lambda x: x.month) == 12) & (df_cal_price['date'].map(lambda x: x.year) == 2021)]\n","07f910b9":"df_natal_avail = df_natal[df_natal['available'] == 't']\ndf_natal_not = df_natal[df_natal['available'] == 'f']","15a6fef2":"# Removing price outliers\ndf_new = df_natal_not[df_natal_not['price'].between(df_natal_not['price'].quantile(.35), df_natal_not['price'].quantile(.65))]\nplot_map_prices(df_new, 'Lugares mais procurados no Natal com pre\u00e7os pr\u00f3ximos da m\u00e9dia')","f0f582a0":"# Removing price outliers\ndf_new = df_natal_avail[df_natal_avail['price'].between(df_natal_avail['price'].quantile(.35), df_natal_avail['price'].quantile(.65))]\nplot_map_prices(df_new, 'Lugares dispon\u00edveis no Natal com pre\u00e7os pr\u00f3ximos da m\u00e9dia')","4d729c91":"df_corr = data_listings[['host_since','host_response_time','number_of_reviews', 'instant_bookable', 'review_scores_rating','price', 'latitude', 'longitude']].dropna()\n# Removing price outliers\ndf_corr = df_corr[df_corr['price'].between(df_corr['price'].quantile(.15), df_corr['price'].quantile(.85))]","46e84e7d":"plt.ylabel(\"Pre\u00e7o\", fontsize=14)\nplt.xlabel(\"Reviews\", fontsize=14)\nplt.title(\"Correla\u00e7\u00e3o entre Pre\u00e7o e n\u00famero de reviews\")\nplt.scatter(df_corr['number_of_reviews'], df_corr['price'])","639d2577":"plt.ylabel(\"Reviews\", fontsize=14)\nplt.xlabel(\"Data de entrada no Airbnb\", fontsize=14)\nplt.title(\"Correla\u00e7\u00e3o entre Reviews e Data de entrada\")\nplt.scatter(df_corr['host_since'], df_corr['number_of_reviews'])","a9631a50":"fig1, ax1 = plt.subplots(figsize=(10,5))\nax1.set_title('Disponibilidade instant\u00e2nea')\nax1.bar(x=['Sim', 'N\u00e3o'], height=[len(df_corr[df_corr['instant_bookable'] == 't']), len(df_corr[df_corr['instant_bookable'] == 'f'])])\nplt.show()","f00af4c9":"fig1, ax1 = plt.subplots(figsize=(10,5))\nax1.set_title('Tempo de resposta do anfitri\u00e3o')\nax1.bar(x=list(set(df_corr['host_response_time'].to_list())), height=[len(df_corr[df_corr['host_response_time'] == v]) for v in set(df_corr['host_response_time'])])\nplt.show()","35dac88e":"lerdos = df_corr[df_corr['host_response_time'] == 'a few days or more']\nfig, axs = plt.subplots(1, 1, figsize=(18, 6))\naxs.hist(lerdos['review_scores_rating'], bins=100)\naxs.set_title('Rating dos que demoram a responder')\nprint('')","4bbd1125":"df_type = data_listings[['property_type', 'room_type', 'price']].dropna()\n# Removing price outliers\ndf_type = df_type[df_type['price'].between(df_type['price'].quantile(.15), df_type['price'].quantile(.85))]","f1e906bc":"labels = set(df_type['room_type'])\nsizes = [len(df_type[df_type['room_type'] == v]) for v in set(df_type['room_type'])]\n\nfig1, ax1 = plt.subplots(figsize=(12,12))\nax1.pie(sizes, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=0)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.title('Tipos de quarto')\nplt.show()","33f22456":"labels = set(df_type['property_type'])\nsizes = [len(df_type[df_type['property_type'] == v]) for v in set(df_type['property_type'])]\n\nfig1, ax1 = plt.subplots(figsize=(12,12))\nax1.pie(sizes, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=0)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.title('Tipos de propriedade')\nplt.show()","4c0a3826":"fig1, ax1 = plt.subplots(figsize=(10,5))\nax1.set_title('M\u00e9dia de pre\u00e7o por tipo de quarto')\nax1.bar(x=list(set(df_type['room_type'].to_list())), height=[df_type[df_type['room_type'] == v]['price'].mean() for v in set(df_type['room_type'])])\nplt.show()","db606b1c":"df_groupby = data_calendar[['date', 'available']]\ndf_groupby = df_groupby[df_groupby['available'] == 'f']\ndf_groupby = df_groupby.groupby(by='date', as_index=False).count()\nplt.figure(figsize=(10, 7))\nplt.title('Taxa de ocupa\u00e7\u00e3o ao longo do tempo')\nplt.plot(df_groupby['date'], df_groupby['available'])","991c5a3f":"df_groupby = data_calendar[['date', 'price']]\ndf_groupby = df_groupby.groupby(by='date', as_index=False).mean()\nplt.figure(figsize=(10, 7))\nplt.title('M\u00e9dia de pre\u00e7o ao longo do tempo')\nplt.plot(df_groupby['date'], df_groupby['price'])","d474478c":"### Taxa de ocupa\u00e7\u00e3o ao longo do tempo","7d11db46":"### Histogramas de cada tipo de review","fad252fe":"### Join da tabela listings com calendar","8e2e12e7":"### Quartos avaliados como bem e mal localizados","2c16fc14":"### Pre\u00e7os por regi\u00e3o (bairro)","10e43afc":"### Correla\u00e7\u00e3o entre Reviews e Data de entrada","529d1568":"### Localiza\u00e7\u00e3o de quartos avaliados como limpos e sujos","8c00c07b":"### Ajustando tipos de dados em pre\u00e7os e datas","dd067ed3":"### DataFrame de calendar somente com os dias de Natal (25\/12)","724ba78d":"### M\u00e9dia de pre\u00e7o ao longo do tempo","45b90627":"### Carregando arquivos","92ae3d18":"### Tempo de resposta do anfitri\u00e3o","8181e082":"### Tipos de quarto","3b69fc0b":"### Histograma de Rating","4673215e":"### Reviews dos usu\u00e1rios","dfeae992":"### Lugares mais procurados no Natal com pre\u00e7os pr\u00f3ximos da m\u00e9dia","b012dd2d":"### Tipos de propriedade","a6317716":"### Disponibilidade instant\u00e2nea","3caedbc4":"### Removendo outliers de pre\u00e7os","eb90c159":"### M\u00e9dia de pre\u00e7o por tipo de quarto","24d7e80d":"# **Exploratory Data Analysis - Airbnb Mexico City Dataset**","45d8b920":"### Correla\u00e7\u00e3o entre Pre\u00e7o e n\u00famero de reviews","c94d7f42":"### Lugares dispon\u00edveis no Natal com pre\u00e7os pr\u00f3ximos da m\u00e9dia","6bc0cec8":"### Rating dos que demoram a responder"}}