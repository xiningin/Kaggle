{"cell_type":{"580c4c99":"code","3788e991":"code","7d700ddf":"code","dc234682":"code","88b59f72":"code","b9fbc7f4":"code","952edce6":"code","7c4ab50d":"code","487b1799":"code","2b573aca":"code","618e76e2":"code","fea619c2":"code","231261ed":"code","b817655b":"code","4a1ecad1":"code","836c41d6":"code","c37e5aa8":"code","daa42724":"code","62d22e1e":"code","d3311d18":"code","2a5bf877":"code","13fbdd5d":"code","0b26d224":"code","20f0d073":"code","0a05963a":"code","369f74ba":"code","de61fa0e":"code","9174c3dc":"code","16b60543":"code","9671be15":"code","2800adf0":"code","111889a2":"code","16eebb1a":"code","ffdc2979":"code","dba6d558":"code","d8635066":"code","871c7a9b":"code","7b9cb915":"code","98932102":"code","87ea165c":"code","bdfd5696":"code","552c820c":"code","0bd95333":"code","12e0139d":"markdown","d8a0fa32":"markdown","4ad78760":"markdown","c3446dad":"markdown","05b86876":"markdown","d97b35ff":"markdown","9b3cf926":"markdown","1143456a":"markdown","d1bdd20c":"markdown","e6a9515b":"markdown","c9eba468":"markdown","88a6f30a":"markdown","f4733b50":"markdown","2702629d":"markdown","614eb2fb":"markdown","ff1c727f":"markdown","cd970a42":"markdown","4a4cb1be":"markdown","5dd4f3a5":"markdown","3b7c0c46":"markdown"},"source":{"580c4c99":"# math operations\nfrom numpy import inf\n\n# time operations\nfrom datetime import timedelta\n\n# for numerical analyiss\nimport numpy as np\n\n# to store and process data in dataframe\nimport pandas as pd\n\n# advanced ploting\nimport seaborn as sns\n\n# interactive visualization\nimport plotly.express as px\nimport plotly.graph_objs as go\n\n# import plotly.figure_factory as ff\n# from plotly.subplots import make_subplots\n\n# for offline ploting\nfrom plotly.offline import plot, iplot, init_notebook_mode\n\ninit_notebook_mode(connected=True)\n\n# hide warnings\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")","3788e991":"# Import modules for API calls\nimport requests\nimport io\nimport pandas as pd\nimport requests\nimport json\nfrom datetime import datetime\n\n# Import module for plotting\nimport seaborn as sns\n\n## JHU Vaccination Rates (Taken From: https:\/\/github.com\/owid\/covid-19-data\/tree\/master\/public\/data)\nurl = 'https:\/\/raw.githubusercontent.com\/owid\/covid-19-data\/master\/public\/data\/owid-covid-data.csv' \ndownload = requests.get(url).content\n\ncovid = pd.read_csv(io.StringIO(download.decode('utf-8')), parse_dates=['date'])\n","7d700ddf":"#get data for US covid and because there are some holidays with NaN record, we forward fill and then fill NaN with 0\nUS = covid[covid['iso_code']=='USA']\nUS = US.ffill(axis=0)\nUS = US.fillna(0)\n","dc234682":"# see the cases over time\nfig = px.line(\n    US,\n    x=\"date\",\n    y=\"total_cases\",\n    height=600,\n    width=700,\n    title=\"Cases over time\")\nfig.update_layout(xaxis_rangeslider_visible=True)\n\nfig.show()\n","88b59f72":"#below graph shows new cases and new deaths over time to view the pattern.\n#new cases uses left y-axis and new deaths uses right y-axis\n\nfrom plotly.subplots import make_subplots\nfig = make_subplots(specs=[[{'secondary_y': True}]])\n\nfig.add_trace(\n    go.Scatter(x=US['date'], y=US['new_cases_smoothed'], name = 'New Cases'),  \n    secondary_y=False,\n) \n\nfig.add_trace(\n    go.Scatter(x=US['date'], y=US['new_deaths_smoothed'], name = 'New Deaths'), \n    secondary_y=True,\n)\n\nfig.update_layout(title_text='US COVID-19 new deaths and new cases over time')\nfig.update_xaxes(title_text='Date')\nfig.update_yaxes(title_text='<b>Cases<\/b>', secondary_y=False)\nfig.update_yaxes(title_text='<b>Deaths<\/b>', secondary_y=True)\nfig.update_layout(xaxis_rangeslider_visible=True)\n\nfig.show()","b9fbc7f4":"US['fully_vaccinated_rate'] = US['people_fully_vaccinated_per_hundred']\/100\nfig = px.line(\n    US,\n    x=\"date\",\n    y=\"fully_vaccinated_rate\",\n    height=600,\n    width=700,\n    title=\"Fully vaccinated rate over time\")\nfig.update_layout(xaxis_rangeslider_visible=True)\n\nfig.show()","952edce6":"print(US['fully_vaccinated_rate'].tail())","7c4ab50d":"#case fatality = total deaths\/total cases, add this column to US dataframe\n\nUS['case_fatality']=US['total_deaths']\/US['total_cases']\nUS['excess_mortality']=US['excess_mortality']\/100\n\n# estimate infection fatality rate, which is the deaths resulted from getting Covid\n# we will use 'excess mortality' from original dataframe to explore true deaths from infection\n# excess mortality from the data = (total deaths now - past normal deaths)\/past normal deaths*100\n\n\n#get mortality-related data to a new dataframe 'US_mortality'\nUS_mortality=US[['date','total_deaths','total_cases','case_fatality','excess_mortality']]\nUS_mortality = US_mortality.replace(np.NaN,0)\nUS_mortality.head(100)\n","487b1799":"#plot case fatality and excess mortality to estimate true infection fatality\n\nfig = px.line(\n    US_mortality,\n    x=\"date\",\n    y=[\"excess_mortality\",\"case_fatality\"],\n    height=500,\n    width=700,\n    title=\"US COVID fatality over time\")\nfig.update_layout(xaxis_rangeslider_visible=True)\n\nfig.show()","2b573aca":"US[['case_fatality']].tail(1)","618e76e2":"#case positivity = total cases\/total tests\n#combine data related to positivity in new dataframe 'US_positivity'\nUS['case_positivity']=round(US['total_cases']\/US['total_tests'],2)\nUS_positivity = US[['date','total_cases','total_tests','case_positivity','positive_rate']]\nUS_positivity\n","fea619c2":"#Note here we have inf for case_positivity calculated, due to the 0 tests during that time, replace inf with 0\n#case positivity larger than 20%?\nUS_positivity=US_positivity.replace(np.inf,0)\nUS_positivity.tail(100)","231261ed":"#compare the case_positivity with positive_rate(test_positivity), plot in the same graph\nfig = px.line(\n    US_positivity,\n    x=\"date\",\n    y=[\"case_positivity\",\"positive_rate\"],\n    height=500,\n    width=700,\n    title=\"Case positivity over time\")\nfig.add_hline(y=0.1)\nfig.update_layout(xaxis_rangeslider_visible=True)\n\nfig.show()","b817655b":"# get fully_vaccinated_rate and organize relative data in new dataframe US_policy\n\nUS_policy = US[['date','stringency_index','fully_vaccinated_rate','new_cases_smoothed','total_cases','new_deaths_smoothed','total_deaths']]\n","4a1ecad1":"fig = px.line(\n    US_policy,\n    x=\"date\",\n    y=[\"stringency_index\"],\n    height=500,\n    width=700,\n    title=\"Policy stringency over time\")\nfig.add_hline(y=40)\nfig.update_layout(xaxis_rangeslider_visible=True)\n\nfig.show()","836c41d6":"# we are interested in when policy gets more strict, how do those affect the covid situations?\n#filter stringency index bigger than 40\nUS_policy2 = US_policy[US_policy['stringency_index']>40]\n","c37e5aa8":"\nUS_vac = US_policy2.set_index('date')\nUS_vac = US_vac.loc['2021-01-15':'2021-09-18']\n","daa42724":"\n\nsns.jointplot(x = 'stringency_index', y = 'new_cases_smoothed', data = US_policy, kind='reg')\n\nsns.jointplot(x = 'fully_vaccinated_rate', y = 'new_cases_smoothed', data = US_policy2, kind='reg')","62d22e1e":"US_mob.tail()","d3311d18":"#Extract the mobility indicators\nimport matplotlib.pyplot as plt\nUS_mob20 = pd.read_csv('..\/input\/new-mobility\/2020_US_Region_Mobility_Report.csv') \nUS_mob21 = pd.read_csv('..\/input\/new-mobility\/2021_US_Region_Mobility_Report.csv') \n\n\nmob = pd.concat([US_mob20, US_mob21], join = 'outer', ignore_index = True)\n\n#Get the mobility cleaned data\nUS_mob = mob.drop(columns=['country_region_code', 'country_region', 'sub_region_1', 'sub_region_2', 'metro_area', 'iso_3166_2_code', 'census_fips_code', 'place_id'])\n\n#Merge 2 dataframes by Date\nUS_mob['date'] = pd.to_datetime(US_mob['date'])\n\nUS_mob_clean = pd.merge(US,US_mob, on='date', how='left')\n\n","2a5bf877":"baseline_corr = US_mob_clean[['new_cases', 'new_deaths', 'icu_patients', 'new_tests', 'people_fully_vaccinated','stringency_index' , 'retail_and_recreation_percent_change_from_baseline', 'grocery_and_pharmacy_percent_change_from_baseline', 'parks_percent_change_from_baseline', 'transit_stations_percent_change_from_baseline', 'workplaces_percent_change_from_baseline', 'residential_percent_change_from_baseline']].dropna().corr()\nfig, ax = plt.subplots(figsize=(\n    20,10)) \nsns.heatmap(baseline_corr, annot=True, ax = ax)","13fbdd5d":"!pip install yfinance --upgrade --no-cache-dir","0b26d224":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport datetime as dt\nimport yfinance as yf\n\nsymbols_list = ['AMZN', 'DIS', 'VMC', 'JNJ', 'AAL', 'ETH-USD','SPY']\nstart = dt.datetime(2019,5,1)\nend = dt.datetime(2021,9,16)\ndata = yf.download(symbols_list, start=start, end=end)","20f0d073":"df = data['Adj Close']\ndf = df.ffill()\ndf.head()","0a05963a":"!pip install PyPortfolioOpt==1.2.1","369f74ba":"from pypfopt.efficient_frontier import EfficientFrontier\nfrom pypfopt import risk_models\nfrom pypfopt import expected_returns\nfrom pypfopt import cla\nfrom pypfopt.plotting import Plotting\nfrom pypfopt.discrete_allocation import DiscreteAllocation, get_latest_prices\nfrom matplotlib.ticker import FuncFormatter\nimport seaborn as sns","de61fa0e":"# Check NaN values in the data\nnullin_df = pd.DataFrame(df,columns=symbols_list)\nprint(nullin_df.isnull().sum())\n\n# Calculate portfolio mean return\nmu = expected_returns.mean_historical_return(df)\nprint(mu)\n\n# Calculate portfolio return variance\nsigma = risk_models.sample_cov(df)\nprint(sigma)","9174c3dc":"ef = EfficientFrontier(mu, sigma, weight_bounds=(-1,1)) \nsharpe_portfolio=ef.max_sharpe(risk_free_rate=0.0137) \nsharpe_portfolio_wt=ef.clean_weights()\nprint(sharpe_portfolio_wt)\nPlotting.plot_weights(sharpe_portfolio_wt)","16b60543":"latest_prices = get_latest_prices(df)\nda = DiscreteAllocation(sharpe_portfolio_wt, latest_prices, total_portfolio_value=1000000)\nallocation, leftover = da.greedy_portfolio()\n\nprint(allocation)\nprint(\"Leftover Fund value for the maximum Sharpe portfolio is ${:.2f}\".format(leftover))","9671be15":"max_sharpe_cla = cla.CLA(mu, sigma)\nmax_sharpe_cla.max_sharpe()\nPlotting.plot_efficient_frontier(max_sharpe_cla, show_assets=\"True\")","2800adf0":"sharpe_portfolio_wt_list = list(sharpe_portfolio_wt.values())\n\nret_data = df.pct_change()[1:]\n\nweighted_returns = (sharpe_portfolio_wt_list * ret_data)\nportfolio_ret = pd.DataFrame(weighted_returns.sum(axis=1))\n\nret_data = ret_data.merge(portfolio_ret, on=\"Date\", how=\"left\")\nret_data = ret_data.rename(columns={0: \"portfolio_ret\"})\n\nret_data.head()","111889a2":"ret_data['cumulative_portfolio_ret'] = (ret_data['portfolio_ret'] + 1).cumprod()\nret_data['cumulative_spy_ret'] = (ret_data['SPY'] + 1).cumprod()\nret_data.tail()","16eebb1a":"#max-sharpe portfolio with market\nsns.scatterplot('Date', 'cumulative_portfolio_ret', data=ret_data)\nsns.scatterplot('Date', 'cumulative_spy_ret', data=ret_data)","ffdc2979":"min_vol_portfolio=ef.min_volatility() \nmin_vol_portfolio_wt=ef.clean_weights()\n\nprint(min_vol_portfolio_wt)\nPlotting.plot_weights(min_vol_portfolio_wt)","dba6d558":"da = DiscreteAllocation(min_vol_portfolio_wt, latest_prices, total_portfolio_value=1000000)\nallocation, leftover = da.greedy_portfolio()\n\nprint(allocation)\nprint(\"Leftover Fund value for the minimum volatility portfolio is ${:.2f}\".format(leftover))","d8635066":"min_vol_cla = cla.CLA(mu, sigma)\nmin_vol_cla.min_volatility()\nPlotting.plot_efficient_frontier(min_vol_cla, show_assets=\"True\")","871c7a9b":"min_vol_portfolio_wt_list = list(min_vol_portfolio_wt.values())\n\nmin_vol_ret_data = df.pct_change()[1:]\n\nmin_vol_weighted_returns = (min_vol_portfolio_wt_list * min_vol_ret_data)\nmin_vol_portfolio_ret = pd.DataFrame(min_vol_weighted_returns.sum(axis=1))\n\nmin_vol_ret_data = min_vol_ret_data.merge(min_vol_portfolio_ret, on=\"Date\", how=\"left\")\nmin_vol_ret_data = min_vol_ret_data.rename(columns={0: \"min_vol_portfolio_ret\"})\n\nmin_vol_ret_data.head()","7b9cb915":"min_vol_ret_data['cumulative_min_vol_portfolio_ret'] = (min_vol_ret_data['min_vol_portfolio_ret'] + 1).cumprod()\nmin_vol_ret_data['cumulative_spy_ret'] = (min_vol_ret_data['SPY'] + 1).cumprod()\nmin_vol_ret_data.tail()","98932102":"#minimum volatility portfolio with market\nsns.scatterplot('Date', 'cumulative_min_vol_portfolio_ret', data=min_vol_ret_data)\nsns.scatterplot('Date', 'cumulative_spy_ret', data=min_vol_ret_data)\n","87ea165c":"# plot histogram of random sample\nplt.hist(min_vol_portfolio_ret, bins = 50, density = True, histtype = 'step', color = 'red')\nplt.xlabel('expected daily returns (x)')\nplt.ylabel('f(x)')\nplt.title('Distribution of min-volatility return')\n","bdfd5696":"plt.hist(portfolio_ret, bins = 50, density = True, histtype = 'step', color = 'red')\nplt.xlabel('expected daily returns (x)')\nplt.ylabel('f(x)')\nplt.title('Distribution of max-Sharpe return')\n","552c820c":"# Min Volatility Portfolio\n# Theoretical confidence intervals\nconf_int_actual_upper = min_vol_ret_data['min_vol_portfolio_ret'].mean() + min_vol_ret_data['min_vol_portfolio_ret'].std()\/np.sqrt(min_vol_ret_data['min_vol_portfolio_ret'].count())*1.96\nconf_int_actual_lower = min_vol_ret_data['min_vol_portfolio_ret'].mean() - min_vol_ret_data['min_vol_portfolio_ret'].std()\/np.sqrt(min_vol_ret_data['min_vol_portfolio_ret'].count())*1.96\n\nconf_int_actual = [conf_int_actual_lower, conf_int_actual_upper]\nprint('-'*120)\nprint('95% theoretical confidence interval for Min Volatility Portfolio =', conf_int_actual)","0bd95333":"# Max Sharpe Ratio Portfolio\n# Theoretical confidence intervals\nconf_int_actual_upper = ret_data['portfolio_ret'].mean() + ret_data['portfolio_ret'].std()\/np.sqrt(ret_data['portfolio_ret'].count())*1.96\nconf_int_actual_lower = ret_data['portfolio_ret'].mean() - ret_data['portfolio_ret'].std()\/np.sqrt(ret_data['portfolio_ret'].count())*1.96\n\nconf_int_actual = [conf_int_actual_lower, conf_int_actual_upper]\nprint('-'*120)\nprint('95% theoretical confidence interval for Maximum Sharpe Ratio Portfolio =', conf_int_actual)","12e0139d":"# Lab 5\n1. Based on your investment strategy (i.e., chosen stocks, industries, asset classes), identify the maximum Sharpe ratio and minimum volatility portfolios.\n2. If you have USD 1 million now, how much should you invest in each.\n3. Plot a graph showing how your portfolios (maximum Sharpe and minimum volatility portfolios) perform relative to the market (i.e., SPY).\n\n","d8a0fa32":"# Q3. Explore the relationship between the country's Covid19 cases and deaths and government health intervention policies (e.g., vaccination rate, closure), as well as Google community mobility reports. ","4ad78760":"# Q2: Evaluate the potential hidden cases (e.g., case positivity rate) and deaths (e.g., estimated infection fatality rate, excess death). ","c3446dad":"From the graph above, we see that the pattern of new cases matches with the growth rate from total cases graph. There is a peak at the end of 2020 and beginning of 2021. Also, we see seasonal effects, resulted from fewer cases during weekends, which becomes even more significant since August 2021(more obvious up and down).","05b86876":"New cases and workplaces,transit stations, and grocery changes are negatively correlated, which means that as people work remotely, there are less cases. ","d97b35ff":"\nReviewing the community mobility report, we found that the parks increases fast compared to last year. With more people get vaccinated(0.24 correlated with the vaccination), we think this trend could continue post covid.","9b3cf926":"Question 4. Comment on your strategy note and highlight the potential future issues\/risks\n\nThe pandemic took the world by a storm and brought it down to its knees, with almost all major economies imposing full lockdowns and most small businesses suffering. Despite all this, certain sectors flourished and grew like never before, clocking record high sales and user base growths. With most people sitting at home, the reliance on tech and digital companies rose tremendously. Remote meetings and teaching became really common and platforms such as ZOOM and MS Teams came out as the winners of this new trend. Companies like Amazon, and Shopify too benefited a lot due to the increase in Cloud computing, and E-Commerce across the world. Other than tech companies, Pharma, Healthcare, and life insurance companies too made a fortune, due to the increased demand of drugs, healthcare facilities, and rising awareness around life insurance policies. However, after strong sentiment putting into these companies and pushing their stock prices high, as investors, we need to consider the future market sentiment and opportunities.\n\nApart from the industries almost directly boosted in scale by COVID, our group  considered other industries with great potential in the post-COVID era. One of the businesses that yield the best prospects would be large scale **amusement parks**. As vaccination rates increase and the resulting **higher population mobility**, there will undoubtedly be more people swarming into theme parks like **Disney**. In addition, with the relaxing of international border control measures and global economic recovery, we are confident that **air travel** will be on the rise as well. We specifically included the **American Airlines Group** in our portfolio as we believe it is one of the safer investments among all international carriers with its current under-valued stock price. The airline is currently already on the recovery, and even without international air travel back to its historical norm currently, it has the privilege of having a strong and vibrant demand for domestic travel within the United States. Lastly, due to the recent $1 Trillion Bill being passed by the U.S. Senate to improve the nation's aging **infrastructures**, we are expecting growth in the most dominant infrastructure stocks as well. Therefore, **Vulcan Materials**, the largest producer of construction aggregates in the country, is included in our portfolio. With our portfolio covering a wide array of industries, we are confident that we can position ourselves at a good vantage point to take advantage from the post-COVID era as the world bounces back. \n\nAt the same time, we also evaluate risks of our portfolio. Companies like Vulcan Materials highly depend on future government policy and favored market, and the sentiments would be more sensitive to any unexpected changes. For amusement parks, we are concerned that people's sentiment toward parks would not last too long, and we might need to reconsider the investment after 1 year horizon.","1143456a":"1. Pick a country and evaluate the Covid19 situation in the country.\n2. Evaluate the potential hidden cases (e.g., case positivity rate) and deaths (e.g., estimated infection fatality rate, excess death). \n3. Explore the relationship between the country's Covid19 cases and deaths and government health intervention policies (e.g., vaccination rate, closure), as well as Google community mobility reports. \n4. Brainstorm on an investment strategy for the country. Lab 5 is part II of this strategy note.","d1bdd20c":"The new deaths, along with the new cases graph, show that the new deaths are some how positively correlated with new cases, except that at the beginning of the covid outbreak. This should be due to inmature medical treatments to the new virus. Later, we will dig into if the vaccination helps reduce the deaths. ","e6a9515b":"From the graph above, we can see that the cases in United States increase really fast from Nov 2020 to Mar 2021, and then the line becomes smoother(growth rate decreases). However, in July 2021, it starts to grow fast again and the trend continues til now. ","c9eba468":"Take 40 as a benchmark, the government policies becomes stricter since April 2020 when COVID cases grow super fast, and remains high until May 2021. ","88a6f30a":"The first jointplot shows that a positive relationship between stringency and total cases, meaning more stringent, more new cases. This might results from the April 2021 peak where new cases increase too many even though policy remain stringent, due to the fast spread of delta variant. Also, it might indicate that the restrictionary policies are ineffective in front of strong delta variant. ","f4733b50":"In the U.S., there are no federal standards for reporting COVID-19 testing data, so purely looking at case_positivity may ignore problems like the data inconsistencyand repeated tests. Therefore, we compare case positivity with test positivity in the above graph.\\\n\nIt shows that most of the time, **case positivity is higher than test positivity**, which means that more actual covid cases occured than the tested positive cases. This might be resulted from insufficient test participation.\\\n\nFor **case positivity greater than test positivity**, this might indicate hidden cases(cases not reported).\\\n\nNote the black horizontal line is benchmark(by WHO), case positivity above this benchmark showed that the spread in community might be more serious than reported and there might be hidden cases\n","2702629d":"We calculated the fully vaccination rate and then then we found that latest fully vaccinated rate is 53.69%. Also as the vaccination introduced since early 2021, the vaccination rate increases very fast.","614eb2fb":"The second joinplot shows that with more people gets vaccinated the new cases growth remains similar. This might show that the vaccination has limited effects on controlling new cases, which is due to the new delta variant.","ff1c727f":"**Minimum volatility portfolio:**","cd970a42":"# Optional Bonus\n1. Plot a histogram of the portfolio return of your strategy (both maximum Sharpe ratio and minimum volatility). Hint: you can use the portfolio returns you calculated and see how you plot histogram in the oil pipeline example.\n2. Construct the confidence intervals for both portfolios. Hint: you can see an example of how to do this in the oil pipeline example. There are two ways to construct. It can be calculated based on either the bootstrapped sample (bootstrapped confidence interval) or mathematically (theoretical confidence interval).","4a4cb1be":"We can see high case fatality during April, the first fast case growth peak. New to the virus, the medical treatements cannot bring down the fatality. However, the fatality slowly goes down even during the second peak at the 2020 year end. \n\n**We use the excess_mortality trend to esitimate the true infection fatality, along with the case fatality**. We compare the trend of the excess mortality and case fatality and find that most of the times the increasing and decreasing trend are similar.\n\nHowever, the excess rate is showing significant peaks than case fatality during June 2020 and Jan 2021, and this means that the there are more deaths resulted from COVID-19 infection than the reported cases. \n\nFrom the current graph, we see recently the case fatality and excess fatality are in the same direction and they are both smooth. Therefore, i think **we can use the latest case fatality to esitimate the true infection fatality, which is 0.016016**.\n","5dd4f3a5":"**Build 1m maximum sharpe ratio porfolio:**","3b7c0c46":"First, we perform analysis on **estimating true infection mortality and hidden cases** with the following logics\\\n\nexcess mortality = (total deaths-normal deaths)\/normal deaths*100\\\ncase fatality = total deaths\/total cases\\\ncase positivity = total cases\/total tests\n\nnote that there's a positivity rate and excess mortality in the given data\n\nhttps:\/\/coronavirus.jhu.edu\/testing\/differences-in-positivity-rates"}}