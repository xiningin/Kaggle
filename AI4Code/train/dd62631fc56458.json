{"cell_type":{"1f2e6a0e":"code","1978d08f":"code","55a553d7":"code","061ce15e":"code","35f7250c":"code","5878916f":"code","d75eef73":"code","024849c5":"code","98d98e60":"code","d7d09639":"code","07df3a44":"code","888b22a6":"code","e41f546d":"code","0201acdd":"code","635c26b5":"code","b57a95e7":"code","2212e5d2":"code","c334d135":"code","e2fc1a6b":"code","c16f69e8":"code","542d1407":"code","519f825a":"code","b8c6048d":"code","f2ca318f":"code","0b6a2e36":"code","b792012f":"code","7ddff843":"code","f0e52c81":"code","effd94c4":"code","216a57d3":"code","4f7aa4a7":"code","78023940":"code","49bd5ad8":"code","d9d7481e":"code","d6b94b55":"code","6070512f":"code","3a35f03c":"code","81edbbe5":"code","37ece733":"code","be153516":"code","ef769d87":"code","dda440c6":"code","64cc84dd":"code","1e47fe8e":"code","394fb1e4":"code","c8141fb8":"code","d8a9360d":"code","b7b177b5":"code","bfccf33d":"code","08efeae6":"code","365b206f":"code","46acd674":"code","fd3fa9ba":"code","58568633":"code","4f09c989":"code","fd07af77":"code","418ef584":"code","9408ce39":"code","2e0b29d9":"code","9a174fd8":"code","fcbce612":"code","e1d2f917":"code","a9e2cf62":"code","f3424587":"code","93e07979":"code","4f8ea17a":"code","f29b3621":"code","c21a3295":"code","4e180d1d":"code","c394b600":"code","0f502a73":"code","5588a7ab":"code","2b8fc942":"code","1c7c16df":"code","520c5dfd":"code","0de89162":"code","240f8abb":"code","da57474e":"code","46f0fa96":"code","235782b7":"code","c973e3cd":"code","19f3a7fd":"code","33c4209c":"code","1a31504e":"code","0fd2ca53":"code","f1c425c0":"code","caadeaf2":"code","b69e5157":"code","12f5fdfe":"code","5df468ac":"code","e14f1040":"code","20fd01bb":"code","9aa72b24":"code","836d55c1":"code","101d1d9d":"code","34acffa0":"code","98287900":"code","0b906ad9":"code","269e1bbc":"code","11e7029b":"code","3cb2c370":"code","da83d0a3":"code","dfc65048":"code","5513c5e6":"code","ce1ba847":"code","cbcdd329":"code","ee714196":"code","7ce38a85":"code","f6d34529":"code","c5a4ff9f":"code","6b67c79b":"code","820bb97c":"code","87b9fe5a":"code","b4933f12":"markdown","267232ea":"markdown","9f28ab69":"markdown","0b610906":"markdown","45ea111d":"markdown","f027b33b":"markdown","1a84e45e":"markdown","35a00bdb":"markdown","56e9c94f":"markdown","3a046011":"markdown","c3c96c94":"markdown","b2d4c7b0":"markdown","b240d00d":"markdown","01ce113a":"markdown","f290e4cf":"markdown","b325b493":"markdown","fb7ec0c3":"markdown"},"source":{"1f2e6a0e":"print(\"Hi Kaggle\")","1978d08f":"v_message = \"hello world\"\n\nprint(\"Hi\")","55a553d7":"print(v_message)","061ce15e":"v_name = \"melike\"\nv_surname = \"karaman\"\n\nv_fullname = v_name + v_surname\nprint(v_fullname)","35f7250c":"v_fullname = v_name + \" \" + v_surname\nprint(v_fullname)","5878916f":"v_num1 =\"800\"\nv_num2 =\"600\"\nv_numSum1 = v_num1 + v_num2\nprint(v_numSum1)","d75eef73":"#length\n\nv_lenFull = len(v_fullname)\nprint(\"v_fullname:\" ,v_fullname, \"and lenght is : \" ,v_lenFull)\n","024849c5":"v_titleF = v_fullname.title()\nprint (\"v_fullname :\", v_fullname , \" and title is : \" , v_titleF)","98d98e60":"#upper:\nv_upperF = v_fullname.upper()\n\n#lower\nv_lowerF = v_fullname.lower()\nprint(\"v_fullname:\" , v_fullname , \" Upper :\" ,v_upperF , \" Lower : \" ,v_lowerF)","d7d09639":"v_2ch = v_fullname [8]\nprint(v_2ch)","07df3a44":"v_num1 = 800\nv_num2 = 600\nv_sum1 = v_num1 + v_num2\n\nprint(v_sum1, \" and type : \" , type(v_sum1))","888b22a6":"v_num1 = v_num1 + 88\nv_num2 = v_num2 - 25.5\nv_sum1 = v_num1 + v_num2 \n\nprint(v_num1)","e41f546d":"print(\"v_sum1 : \" ,v_sum1 , \" type : \" , type(v_sum1))","0201acdd":"v_fl1 = 48.5\nv_fl2 = 22.5\nv_s3 = v_fl1 + v_fl2\n\nprint(v_s3 , type(v_s3))","635c26b5":"def f_SayHi():\n    print(\"Hi.I am coming from f_SayHi\")\n    \ndef f_SayHi2():\n    print(\"Hi.I am coming from f_SayHi2\")\n    print(\"Nice\")\n    \n    \nf_SayHi()","b57a95e7":"f_SayHi2()","2212e5d2":"def f_saymessage(v_message1):\n    print(v_message1,\"came from neptune\")\n    \n    \ndef f_getfullname(v_firstname,v_surname,v_age):\n    print(\"Welcome\", v_firstname, \"\", v_surname, \"your age is:\",v_age)","c334d135":"f_saymessage(\"How do you feel ?\")","e2fc1a6b":"f_getfullname(\"Melike\" ,\"KARAMAN\" ,16)","c16f69e8":"def f_Calc1(f_num1,f_num2,f_num3):\n    v_result = f_num1*f_num2 - f_num3\n    print(\"Result =\", \"\", v_result)\n    ","542d1407":"f_Calc1(80,60,180)","519f825a":"#return function\ndef f_Calc2(v_num1,v_num2,v_num3):\n    v_out = v_num1 + v_num2 + v_num3*8\n    print(\"Hi from f_Calc2\")\n    return v_out\n","b8c6048d":"v_came=f_Calc2(8,3,9)\nprint(\"Score is :\",v_came)","f2ca318f":"#Default Functions:\ndef f_populationInfo(v_city,v_population,v_country = \"TURKEY\"):\n    print(\"City : \" , v_city , \"Population :\", v_population, \"Country :\",v_country)","0b6a2e36":"f_populationInfo(\"Trabzon\",\"764.714\")\nf_populationInfo(\"St.Petersburg\",\"6.000.000\",\"RUSSIA\")","b792012f":"#Flexible Functions :\n\ndef f_flex1 (v_name, *v_colors):\n    print(\"Hi\",v_name ,\"your favorite color is :\",v_colors[4])","7ddff843":"f_flex1(\"Melike\",\"Blue\",\"Black\",\"Yellow\",\"Brown\",\"Purple\",\"Green\")","f0e52c81":"# Lambda Function :\n\nv_result = lambda x : x*8\nprint(\"Result is :\",v_result(86))","effd94c4":"def f_total(v_edge1,v_edge2,v_edge3,v_edge4):\n    v_perimeter=(v_edge1+v_edge2+v_edge3+v_edge4)\n    v_area=(v_edge1*v_edge3)\n    print(v_perimeter+v_area)","216a57d3":"f_total(12,12,4,4)","4f7aa4a7":"v_list1 = [3,1.8,4,1,5.2,9]\nprint(v_list1)\nprint(\"Type of 'v_list1' is : \" , type(v_list1))","78023940":"v_number1 = v_list1 [4]\nprint(v_number1)\nprint(\"Type of 'v_number1' is : \" , type (v_number1))","49bd5ad8":"v_planet1 = [\"Mercury\",\"Venus\",\"Earth\",\"Mars\",\"Jupiter\",\"Saturn\",\"Uranus\",\"Neptune\",\"Pluto\"]\nprint(v_planet1)\nprint(\"Type of 'v_planet1' is : \" , type(v_planet1))","d9d7481e":"v_planet1_2 = v_planet1[7]\nprint(v_planet1_2)\nprint(\"Type of 'v_planet1_2' is : \" , type(v_planet1_2))","d6b94b55":"v_planet1_c1 = v_planet1 [-9]\nprint(v_planet1_c1)","6070512f":"v_planet1_c2 = v_planet1 [1:7]\nprint(v_planet1_c2)","3a35f03c":"#Len\nv_len_planet1 = len(v_planet1_c2)\nprint(\"Size of 'v_planet1_c2' is : \" , v_len_planet1)\nprint(v_planet1_c2)\n","81edbbe5":"#Append\nv_planet1_c2.append (\"Moon\")\nprint(v_planet1_c2)\n\nv_planet1_c2.append (\"Mars\")\nprint(v_planet1_c2)","37ece733":"#Reverse\nv_planet1_c2.reverse()\nprint(v_planet1_c2)\n","be153516":"#Sort\nv_planet1_c2.sort()\nprint(v_planet1_c2)","ef769d87":"#Remove\n\n#First add 'Uranus' then remove 'Uranus'\n\nv_planet1_c2.append (\"Uranus\")\nprint(v_planet1_c2)","dda440c6":"v_planet1_c2.remove(\"Uranus\")\nprint(v_planet1_c2)","64cc84dd":"v_capital = {\"Ireland\":\"Dublin\" , \"Mongolia\" : \"Ulaanbaatar\" , \"Norway\": \"Oslo\" , \"Sweden\":\"Stockholm\" , \"Switzerland\":\"Bern\"}\n\nprint(v_capital)\nprint(type(v_capital))","1e47fe8e":"v_Ireland = v_capital[\"Ireland\"]\nprint(v_Ireland)\nprint(type(v_Ireland))","394fb1e4":"#Keys & Values\n\nv_keys = v_capital.keys()\nv_values = v_capital.values()\n\n\nprint(v_keys)\nprint(type(v_keys))\n\nprint()\nprint(v_values)\nprint(type(v_values))","c8141fb8":"v_num1 = 88\nv_num2 = 66\n\nif v_num1 > v_num2:\n    print(v_num1 , \" is greater then \" , v_num2)\n    \nelif v_num1 < v_num2:\n    print(v_num1 , \" is smaller then \" , v_num2)\n    \nelse :\n    print(\"This 2 variables are equal\")","d8a9360d":"# < , <= , > , >= , == , <>\n\n\ndef v_Comparison1(v_num1 , v_num2):\n    \n    \n    if v_num1 > v_num2:\n        print(v_num1 , \" is greater then \" , v_num2)\n        \n    elif v_num1 < v_num2:\n        print(v_num1 , \" is smaller then \" , v_num2)\n        \n    else :\n        print(\"These \" , v_num1 , \" variables are equal\")\n        \nv_Comparison1(16,16)\nv_Comparison1(25,36)\nv_Comparison1(64,49)","b7b177b5":"# using 'IN' with LIST\n\n\ndef d_search (v_search, v_searchList):\n    \n    if v_search in v_searchList :\n        print(\"Yup! \",v_search , \" is in list :)\")\n        \n    else :\n        print( v_search , \" is not in list :( \")\n\nv_list = list(v_capital.keys())\nprint(v_list)\nprint(type(v_list))\n\nd_search(\"Sweden\" , v_list)\nd_search(\"Vietnam\" , v_list)","bfccf33d":"for a in range(0,8):\n    print(  a , \" days has passed since that day\")","08efeae6":"v_fav_country =  \"IRELAND IS MY FAVORITE COUNTRY\"\nprint(v_fav_country)","365b206f":"for v_down in v_fav_country:\n    print(v_down)\n    print(\"------\")","46acd674":"for v_down in v_fav_country.split():\n    print(v_down)","fd3fa9ba":"v_list2 = [8,6,10,1,16,18]\nprint(v_list2)","58568633":"print(v_list2)\nv_sum_list2 = sum(v_list2)\nprint(\"Sum of v_list2 is : \" , v_sum_list2)\n\nprint()\nv_cum_list2 = 0\nv_loopindex = 0\n\nfor v_current in v_list2:\n    \n    v_cum_list2 = v_cum_list2 + v_current\n    \n    print(v_loopindex , \" nd value is : \" , v_current)\n    print(\"Cumulative is : \" , v_cum_list2)\n    \n    v_loopindex = v_loopindex + 1\n    print(\"------\")","4f09c989":"m = 0\nwhile(m < 10):\n    \n    print(\"You have traveled\", m ,\"kilometer\"  )\n    \n    m = m+2","fd07af77":"print(v_list2)\nprint()\n\nm= 0\nx = len(v_list2)\n\nwhile(m<x):\n    print(v_list2[m])\n    m=m+1","418ef584":"#Let's find minimum and maximum number in list\n\nv_list3 = [19,-28,7,-10,4,62,-18,300,-267]\n\nv_min = 0\nv_max = 0\n\nv_index = 0\nv_len = len(v_list3)\n\nwhile (v_index < v_len):\n    v_current = v_list3[v_index]\n    \n    if v_current > v_max:\n        v_max = v_current\n    \n    if v_current < v_min:\n        v_min = v_current\n    \n    v_index = v_index+1\n\nprint (\"Max. number is : \" , v_max)\nprint (\"Min. number is : \" , v_min)","9408ce39":"#Import library to use\n\nimport numpy as np","2e0b29d9":"v_array1 = [9,8,7,6,5,4,8,7,6,5,4,3,7,6,5,4,3,2,6,5,4,3,2,1,5,4,3,2,1,0]\n\nv_array1_np = np.array([9,8,7,6,5,4,8,7,6,5,4,3,7,6,5,4,3,2,6,5,4,3,2,1,5,4,3,2,1,0])","9a174fd8":"print(\"v_array1 : \" , v_array1)\nprint(\"Type of v_array1 : \" , type(v_array1))","fcbce612":"print(\"v_array1_np : \" , v_array1_np)\nprint(\"Type of v_array1_np : \" , type(v_array1_np))","e1d2f917":"# shape\nv_shape1 = v_array1_np.shape\nprint(\"v_shape1 : \" , v_shape1 , \" and type is : \" , type(v_shape1))","a9e2cf62":"# Reshape\nv_array2_np = v_array1_np.reshape(5,6)\nprint(v_array2_np)","f3424587":"v_shape2 = v_array2_np.shape\nprint(\"v_shape2 : \" , v_shape2 , \" and type is : \" , type(v_shape2))","93e07979":"# Dimension\nv_dimen = v_array2_np.ndim\nprint(\"v_dimen : \" , v_dimen , \" type is : \" , type(v_dimen))","4f8ea17a":"# Dtype.name\nv_dtype = v_array2_np.dtype.name\nprint(\"v_dtype : \" , v_dtype , \" and type is : \" , type(v_dtype))","f29b3621":"# Size\nv_size = v_array2_np.size\nprint(\"v_size : \" , v_size , \" and type : \" , type(v_size))","c21a3295":"# Let's create 5x6 array\nv_array3_np = np.array([[9,8,7,6,5,4],[8,7,6,5,4,3],[7,6,5,4,3,2],[6,5,4,3,2,1],[5,4,3,2,1,0]])\nprint(v_array3_np)\nprint(\"---------------\")\nprint(\"Shape is : \" , v_array3_np.shape)","4e180d1d":"# Let's do it with string\n\n\n\nv_array_str = ['Sanma \u015f\u00e2h\u0131m ','herkesi sen', 's\u00e2d\u0131k\u00e2ne', 'y\u00e2r olur','Herkesi sen','dost mu sand\u0131n' ,'belki ol','a\u011fy\u00e2r olur','S\u00e2d\u0131k\u00e2ne', 'belki ol' ,'bu \u00e2lemde', 'dild\u00e2r olur','Y\u00e2r olur', 'a\u011fy\u00e2r olur', 'dild\u00e2r olur', 'serd\u00e2r olur']\n\nv_array_str1 = np.array (['Sanma \u015f\u00e2h\u0131m ','herkesi sen', 's\u00e2d\u0131k\u00e2ne', 'y\u00e2r olur','Herkesi sen','dost mu sand\u0131n' ,'belki ol','a\u011fy\u00e2r olur','S\u00e2d\u0131k\u00e2ne', 'belki ol' ,'bu \u00e2lemde', 'dild\u00e2r olur','Y\u00e2r olur', 'a\u011fy\u00e2r olur', 'dild\u00e2r olur', 'serd\u00e2r olur'])","c394b600":"print(\"v_array_str : \" , v_array_str)\nprint(\"Type of v_array_str : \" , type(v_array_str))","0f502a73":"print(\"v_array_str1 : \" , v_array_str1)\nprint(\"Type of v_array_str1: \" , type(v_array_str1))","5588a7ab":"v_shape1_str = v_array_str1.shape\nprint(\"v_shape1_str : \" , v_shape1_str , \" and type is : \" , type(v_shape1_str))","2b8fc942":"v_array2_str = v_array_str1.reshape(4,4)\nprint(v_array2_str)\nprint(\"                                                    \" ,\"-Yavuz Sultan Selim\")","1c7c16df":"# Zeros\nv_array4_np = np.zeros((5,7))\nprint(v_array4_np)\n\ntype(v_array4_np)","520c5dfd":"# Update an item on this array \nv_array4_np[2,3] = 8\nprint(v_array4_np)","0de89162":"# Ones\n\nv_array5_np = np.ones((8,6))\nprint(v_array5_np)","240f8abb":"# Empty\nv_array6_np = np.empty((5,4))\nprint(v_array6_np)","da57474e":"# Arrange\nv_array7_np = np.arange(24,96,8)\nprint(v_array7_np)\nprint(v_array7_np.shape)","46f0fa96":"# Linspace\n\nv_array8_np = np.linspace(20,400,5)\nv_array9_np = np.linspace(7,84,30)\n\nprint(v_array8_np)\nprint(v_array8_np.shape)\nprint(\"-----------------------\")\nprint(v_array9_np)\nprint(v_array9_np.shape)","235782b7":"# Sum , Subtract , Square\nv_np = np.array([8,6,4])\nv_np1 = np.array([5,7,9])\n\nprint(v_np - v_np1)\nprint(v_np + v_np1)\nprint(v_np1 - v_np)\nprint(v_np ** 2)","c973e3cd":"# Sinus\n\nprint(np.sin(v_np))","19f3a7fd":"# True \/ False\nv_np_tf = v_np < 6\nprint(v_np_tf)\nprint(v_np_tf.dtype.name)","33c4209c":"# Element wise Prodcut\n\nv_np = np.array([8,6,4])\nv_np1 = np.array([5,7,9])\n\nprint(v_np * v_np1)","1a31504e":"# Transpose\n\n\nv_np1= np.array([[6,7,5],[8,2,3]])\nv_np1transpose = v_np1.T\nprint(v_np1)\nprint(v_np1.shape)\nprint()\nprint(v_np1transpose)\nprint(v_np1transpose.shape)","0fd2ca53":"# Matrix Multiplication\n\nv_np2 = v_np1.dot(v_np1transpose)\nprint(v_np2)","f1c425c0":"# Exponential --> We will use on Statistics Lesson\n\nv_np1Exp = np.exp(v_np1)\n\nprint(v_np1)\nprint(v_np1Exp)","caadeaf2":"# Random \n\nv_np3 = np.random.random((8,4)) # --> It will get between 0 and 1 random numbers\nprint(v_np3)","b69e5157":"#Sum , Max ,Min\n\nv_np3Sum = v_np3.sum()\n\nprint(\"Sum of array : \", v_np3Sum)  #--> Remember ! If you get sum of array we can use that :  sum(array1)\n\nprint(\"Max of array : \", v_np3.max()) #--> Remember ! If you get max of array we can use that :  max(array1)\n\nprint(\"Min of array : \", v_np3.min()) #--> Remember ! If you get min of array we can use that :  min(array1)","12f5fdfe":"# Sum with Column or Row\nprint(\"Sum of columns :\")\nprint(v_np3.sum(axis=0)) # --> Sum of Columns\nprint()\nprint(\"Sum of rows :\")\nprint(v_np3.sum(axis=1)) # -->Sum of Rows","5df468ac":"# Square , Sqrt\n\nprint(np.sqrt(v_np3))\nprint()\nprint(np.square(v_np3))","e14f1040":"# Add\n\nv_np4 = np.array([7,4,9,6,5])\nv_np5 = np.array([56,84,73,19,46])\n\nprint(np.add(v_np4,v_np5))","20fd01bb":"v_np6 = np.array([54,85,7,4,14,6,35,58,9,44,75,915])\n\nprint(\"First item is : \" , v_np6[0])\nprint(\"Eighth item is : \" , v_np6[7])","9aa72b24":"# Get top 7 rows :\n\nprint(v_np6[0:7])","836d55c1":"# Reverse\n\nv_np6_Rev = v_np6[::-1]\nprint(v_np6_Rev)","101d1d9d":"v_np7 = np.array([[8,6,4,7,2],[17,21,12,13,18]])\nprint(v_np7)\nprint()\nprint(v_np7[0,3]) #--> Get a row\n\nprint()\nv_np7[0,3] = 9 #--> Update a row\nprint(v_np7)","34acffa0":"# Get all rows but 3rd columns :\n\nprint(v_np7[:,2])","98287900":"#Get 2nd row but 2,3,4th columns\n\nprint(v_np7[1,1:4])","0b906ad9":"# Get last row all columns\n\nprint(v_np7[-1,:])","269e1bbc":"# Get last columns but all rows\n\nprint(v_np7[:,-1])","11e7029b":"#Flatten\nv_np8 = np.array([[24,23,22],[21,20,19],[18,17,16],[15,14,13]])\nv_np9 = v_np8.ravel()\n\nprint(v_np8)\nprint(\"Shape of v_np8 is : \" ,v_np8.shape)\nprint()\nprint(v_np9)\nprint(\"Shape of v_np9 is : \" ,v_np9.shape)\nprint()","3cb2c370":"# Reshape\n\nv_np10 = v_np9.reshape(3,4)\nprint(v_np10)\nprint(\"Shape of v_np10 is : \" ,v_np10.shape)","da83d0a3":"v_np11 = v_np10.T\nprint(v_np11)\nprint(\"Shape of v_np11 is : \" ,v_np11.shape)","dfc65048":"v_np12 = np.array([[4,5],[2,8],[6,8]])\n\nprint(v_np12)\nprint()\nprint(v_np12.reshape(2,3))\n\nprint()\nprint(v_np12) #--> It has not changed !","5513c5e6":"# Resize\nv_np12.resize((2,3))\nprint(v_np12) # --> Now it changed !  Resize can change its shape","ce1ba847":"v_np13 = np.array([[5,4],[3,2]])\nv_np14 = np.array([[9,8],[7,6]])\n\nprint(v_np13)\nprint()\nprint(v_np14)","cbcdd329":"# Vertical Stack\nv_np15 = np.vstack((v_np13,v_np14))\nv_np16 = np.vstack((v_np14,v_np13))\n\nprint(v_np15)\nprint()\nprint(v_np16)","ee714196":"# Horizontal Stack\nv_np17 = np.hstack((v_np13,v_np14))\nv_np18 = np.hstack((v_np14,v_np13))\n\nprint(v_np17)\nprint()\nprint(v_np18)","7ce38a85":"v_list = [9,8,7,6]\nv_np19 = np.array(v_list)\n\nprint(v_list)\nprint(\"Type of list : \" , type(v_list))\nprint()\nprint(v_np19)\nprint(\"Type of v_np19 : \" , type(v_np19))","f6d34529":"v_list1 = list(v_np19)\nprint(v_list1)\nprint(\"Type of list1 : \" , type(v_list1))","c5a4ff9f":"v_list2 = v_list1\nv_list3 = v_list1\n\nprint(v_list1)\nprint()\nprint(v_list1)\nprint()\nprint(v_list3)","6b67c79b":"v_list1[2] = 86\n\nprint(v_list1)\nprint()\nprint(v_list2) # --> Same address with list1\nprint()\nprint(v_list3) # --> Same address with list1","820bb97c":"v_list4 = v_list1.copy()\nv_list5 = v_list1.copy()\n\nprint(v_list4)\nprint()\nprint(v_list5)","87b9fe5a":"v_list1[0] = 45\n\nprint(v_list1)\nprint()\nprint(v_list4) # --> Not same address with list1\nprint()\nprint(v_list5) # --> Not same address with list1","b4933f12":"**3. L\u0130ST**","267232ea":"**2. FUNCTIONS**\n","9f28ab69":"1.2)Numbers:","0b610906":" **6. FOR LOOP**","45ea111d":"8.6.Convert and Copy Array ","f027b33b":"8.3. Indexing and Slicing","1a84e45e":"**** 1. VARIABLE****","35a00bdb":"8.2. Basic Operations","56e9c94f":"*1.1)Strings Variables:","3a046011":" **5. IF ELSE**","c3c96c94":"8.4.Shape Manipulation","b2d4c7b0":"8.1.Basic","b240d00d":"**7. WHILE LOOP**","01ce113a":"**8. NUMPY**","f290e4cf":"8.5.Stacking Arrays ","b325b493":"**INTRODUCTION**\n\n","fb7ec0c3":"**4.DICTIONARY**"}}