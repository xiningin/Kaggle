{"cell_type":{"dd48c2f2":"code","a258b80a":"code","00968094":"code","4803de19":"code","96b79737":"code","4f6ab59e":"code","27832d65":"code","d9abfbf4":"code","5ec40348":"code","18e31db6":"code","99dd14a9":"code","2542aa35":"code","17804fca":"code","f602211c":"code","50c77266":"code","e5db6246":"code","a00166b4":"code","c126c10c":"code","701de529":"code","a3576d17":"code","8e58cb6b":"code","64c6b521":"code","44ac7da5":"markdown","360789fc":"markdown","50a45cc9":"markdown","ef3fd4ae":"markdown","1bb12219":"markdown","08bcc8a3":"markdown","efff7f5f":"markdown","730b2975":"markdown","57067522":"markdown","33ba700b":"markdown","2b98d6bb":"markdown","a80edd44":"markdown","049e4d47":"markdown","26b7c1b8":"markdown","4912fc91":"markdown","dddfbda0":"markdown","5f268247":"markdown","14608cf1":"markdown","4801c7d2":"markdown","e29ad8bd":"markdown"},"source":{"dd48c2f2":"from IPython.display import Markdown as md\nfrom IPython.display import HTML\n\nNOTEBOOK_NAME = '\ud83c\udf2a Ensembling and rounding techniques comparison'\nNOTEBOOK_URL = 'https:\/\/www.kaggle.com\/fergusfindley\/ensembling-and-rounding-techniques-comparison'\n\nHTML(f'''<div class=\"alert alert-block alert-info\">\nIf you find <a href={NOTEBOOK_URL}>this notebook<\/a> useful or you just like it, please upvote \u25b2.<br>\nIf you are using any part of this notebook, please link to <a href={NOTEBOOK_URL}>{NOTEBOOK_NAME}<\/a> notebook.<br>\nIn case of any question\/feedback don't hesitate to <a href={NOTEBOOK_URL}\/comments>comment<\/a> below.\n<\/div>''')","a258b80a":"HTML(f'''<h1><center>{NOTEBOOK_NAME}<\/center><\/h1>\n<h2><center><b>TL;DR<\/b> One can improve the final result by using fit-based weighted averaging with some geometric rounding on top of it.<\/center><\/h2>\n<center>\n<h3><span style=\"color:#20BEFF;\">Please check my previous notebook <a href=\"https:\/\/www.kaggle.com\/fergusfindley\/tpsjan22-eda-baseline-train-submission\">EDA,baseline,train&submission<\/a><\/span><\/h3><\/center>''')","00968094":"import numpy as np\nimport pandas as pd\nfrom kaggle_colors_util import *","4803de19":"RANDOM_STATE = 42\n\nDIRECTORY_PATH = \"..\/input\/tabular-playground-series-jan-2022\"\nTRAIN_CSV = DIRECTORY_PATH + \"\/train.csv\"\nTEST_CSV = DIRECTORY_PATH + \"\/test.csv\"\nSUBMISSION_CSV = DIRECTORY_PATH + \"\/sample_submission.csv\"\n\nID = 'row_id'\nTARGET = 'num_sold'\nDATE = 'date'","96b79737":"cell_hover = {  # for row hover use <tr> instead of <td>\n    'selector': 'td:hover',\n    'props': [('background-color', COLOR_BLUE_LIGHT)]\n}\nheaders = {\n    'selector': 'th:not(.index_name)',\n    'props': f'background-color: {COLOR_BLUE}; color: white;'\n}","4f6ab59e":"train_df = pd.read_csv(TRAIN_CSV, parse_dates=[DATE])\ntest_df = pd.read_csv(TEST_CSV, parse_dates=[DATE])\nsubmission_df = pd.read_csv(SUBMISSION_CSV)\n\ntest_ids = test_df[ID]","27832d65":"lb_417724 = pd.read_csv(\"..\/input\/tps-jan2022-best-predictions\/submission-Scaling is better than blending-417724.csv\")\nlb_424305 = pd.read_csv(\"..\/input\/tps-jan2022-best-predictions\/submission-TPS Jan 2022 Automated Ensembling-424305.csv\")\nlb_433625 = pd.read_csv(\"..\/input\/tps-jan2022-best-predictions\/submission-TPS2201_Hybrid_Time_Series-433625.csv\")\nlb_435293 = pd.read_csv(\"..\/input\/tps-jan2022-best-predictions\/submission-TPSJAN22-03 Linear Model-435293.csv\")\nlb_438188 = pd.read_csv(\"..\/input\/tps-jan2022-best-predictions\/submission-TPSJAN22-06 LightGBM Quickstart-4.38188.csv\")\nlb_452597 = pd.read_csv(\"..\/input\/tps-jan2022-best-predictions\/submission-EnsembleModel with addon GDP  Amazons Sales Data-452597.csv\")\nlb_454527 = pd.read_csv(\"..\/input\/tps-jan2022-best-predictions\/submission-Time Series Transformer Infer-454527.csv\")","d9abfbf4":"score_and_submission_dict = {4.17724: lb_417724[TARGET],\n                             4.24305: lb_424305[TARGET],\n                             4.33625: lb_433625[TARGET],\n                             4.35293: lb_435293[TARGET],\n                             4.38188: lb_438188[TARGET],\n                             4.52597: lb_452597[TARGET],\n                             4.54527: lb_454527[TARGET]}","5ec40348":"simple_mean_pred = np.mean(np.array([*score_and_submission_dict.values()]), axis=0)","18e31db6":"scores = np.array([*score_and_submission_dict.keys()])\nsubmissions = np.array([*score_and_submission_dict.values()])","99dd14a9":"weights_fit_based = (1\/scores)\/sum(1\/scores)  # normalized weights to sum up to '1'","2542aa35":"display(md('We can see that the first model with lowest SMAPE has the highest weight - the biggest contribution to the final solution'))\ndisplay(pd.DataFrame(zip(scores,weights_fit_based), columns=['Leaderboard Score', 'Weights fit-based']).style.hide_index().set_table_styles([cell_hover, headers]))","17804fca":"fit_based_pred = np.average(submissions, weights=weights_fit_based, axis=0)","f602211c":"fit_based_pred_rounded = fit_based_pred.round()","50c77266":"from math import ceil, floor, sqrt\n\ndef geometric_round(arr):\n    result_array = arr\n    result_array = np.where(result_array < np.sqrt(np.floor(arr)*np.ceil(arr)), np.floor(arr), result_array)\n    result_array = np.where(result_array >= np.sqrt(np.floor(arr)*np.ceil(arr)), np.ceil(arr), result_array)\n\n    return result_array","e5db6246":"fit_based_pred_geo_rounded = geometric_round(fit_based_pred)","a00166b4":"geo_vs_simple_round = pd.DataFrame((fit_based_pred_geo_rounded == fit_based_pred_rounded)).value_counts()  # not much different...\n\ndisplay(md(f\"...there are {geo_vs_simple_round[1]} records with the same value as using simple `round()` and **only {geo_vs_simple_round[0]}**, where **values diffes**\"))","c126c10c":"best_public_score = min(score_and_submission_dict.keys())\n\ndisplay(md(f\"The best public submission up to date (08-01-2022) is version 3 of https:\/\/www.kaggle.com\/ambrosm\/scaling-is-better-than-blending with {best_public_score} leaderborad score.<br> The table below shows that one can improve this result over 2.5% by using fit-based weighted averaging with some geometric rounding on top of it.\"))","701de529":"final_comparison = pd.DataFrame([[\"Best public\",  best_public_score],\n                                 [\"Simple mean (Equal Weights)\", 4.15632],\n                                 [\"Fit-Based Weights\", 4.15641],\n                                 [\"Fit-Based Weights Rounded\", 4.15193],\n                                 [\"Fit-Based Weights Geo-Rounded\", 4.15147]], \n                                columns=['Ensemble technique', 'Leaderboard Score'])\nfinal_comparison['Percentage change'] = -final_comparison['Leaderboard Score'].pct_change()\nfinal_comparison['Improvement over best'] = best_public_score - final_comparison['Leaderboard Score']\n\n\ndisplay(final_comparison.style.format(na_rep='-',\n                                      formatter={'Percentage change': '{:.4%}'.format,\n                                                 'Improvement over best': '{:.2%}'.format}\n                                     ).hide_index().set_table_styles([cell_hover, headers]))","a3576d17":"def save_submission(final_pred, postfix):\n    submission_df = pd.DataFrame(zip(test_ids, final_pred), columns=[ID, TARGET])\n    submission_df.to_csv(f\"submission-{postfix}.csv\", index=False)","8e58cb6b":"save_submission(simple_mean_pred, 'simple_mean')\nsave_submission(fit_based_pred, 'fit_based')\nsave_submission(fit_based_pred_rounded, 'fit_based_rounded')\nsave_submission(fit_based_pred_geo_rounded, 'fit_based_geo_rounded')","64c6b521":"HTML(f'''\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:{COLOR_GREY};\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n    <p style=\"padding: 10px; color:white;\">\nIf you find this notebook useful or you just like it, please upvote \u25b2.<br>\n        Use this link <a href={NOTEBOOK_URL}>{NOTEBOOK_NAME}<\/a> to cite.\n        Questions\/feedback? \u2192 <a href={NOTEBOOK_URL}\/comments>comment<\/a>.\n    <\/p>\n<\/div>''')\n","44ac7da5":"> * [Wikipedia Ensemble_learning](https:\/\/en.wikipedia.org\/wiki\/Ensemble_learning)\n> * [Model averaging](https:\/\/www.mm218.dev\/posts\/2021\/01\/model-averaging\/)\n> * [Blending Ensemble Machine Learning With Python](https:\/\/machinelearningmastery.com\/blending-ensemble-machine-learning-with-python\/)\n> * [Ensemble Learning: 5 Main Approaches](https:\/\/www.kdnuggets.com\/2019\/01\/ensemble-learning-5-main-approaches.html)","360789fc":"Both `round()` and `geometric_round()` give almost identical results...","50a45cc9":"so as [@siukeitin](https:\/\/www.kaggle.com\/siukeitin) mentioned in his [sensitivity analysis discussion](https:\/\/www.kaggle.com\/c\/tabular-playground-series-jan-2022\/discussion\/299162) \n>  `np.round`, which uses arithmetic mean instead of geometric mean, is a good approximation.","ef3fd4ae":"***","1bb12219":"0. [References](#references) \ud83c\udf93\n1. [Libraries](#libraries) \ud83d\udcda\n1. [Load Datasets](#load-datasets) \ud83e\uddf1\n1. [Ensamble Techniques](#ensamble-techniques) \ud83c\udf2a\n    1. [Simple mean (Equal Weights)](#simple-mean)\n    1. [Fit-Based Weights](#fit-based)\n    1. [Fit-Based Weights Rounded](#fit-based-rounded)\n    1. [Fit-Based Weights Geo-Rounded](#fit-based-geo-rounded)\n    1. [Final comparison](#final-comparison)\n1. [Submission](#submission) \ud83d\udcdd","08bcc8a3":"<a id=\"final-comparison\"><\/a>\n## **<span style=\"color:#58355E;\">Final comparison<\/span>**\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"Go to TableOfContents\">Go to TOC<\/a> ","efff7f5f":"<div class=\"alert alert-block alert-success\">  \nYupi! With some ensembling techniques we've manged to increase Public Leaderboard Score \ud83d\udcc8 <br>Hope you like this notebook \ud83d\ude0a\n<\/div>","730b2975":"<a id=\"libraries\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 id=\"libraries\" class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#20BEFF; border:0; color:white' role=\"tab\" aria-controls=\"home\"><center>Libraries<\/center><\/h1>\n    \n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"Go to TableOfContents\">Go to TOC<\/a>","57067522":"<hr>","33ba700b":"<a id=\"fit-based-rounded\"><\/a>\n## **<span style=\"color:#58355E;\">Fit-Based Weights Rounded<\/span>**\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"Go to TableOfContents\">Go to TOC<\/a> ","2b98d6bb":"| link                                                                                     | model type| Leaderboard Score| \n|------------------------------------------------------------------------------------------|-----------|------------------|\n| https:\/\/www.kaggle.com\/ambrosm\/scaling-is-better-than-blending                           |\tensemble | 4.17724|\n| https:\/\/www.kaggle.com\/sytuannguyen\/tps-jan-2022-automated-ensembling                    |\tensemble | 4.24305|\n| https:\/\/www.kaggle.com\/teckmengwong\/tps2201-hybrid-time-series                           |\tLinear Regression | 4.33625|\n| https:\/\/www.kaggle.com\/ambrosm\/tpsjan22-03-linear-model                                  |\tLinear Regression | 4.35293|\n| https:\/\/www.kaggle.com\/ambrosm\/tpsjan22-06-lightgbm-quickstart                           |\tLightGBM | 4.38188|\n| https:\/\/www.kaggle.com\/anirudhyadav9784\/ensemblemodel-with-addon-gdp-amazon-s-sales-data |\tCatBoost | 4.52597|\n| https:\/\/www.kaggle.com\/yamqwe\/time-series-transformer-infer                              |\tDNN      | 4.54527|","a80edd44":"<a id=\"ensamble-techniques\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 id=\"ensamble-techniques\" class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#20BEFF; border:0; color:white' role=\"tab\" aria-controls=\"home\"><center>Ensamble techniques<\/center><\/h1>\n    \n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"Go to TableOfContents\">Go to TOC<\/a>","049e4d47":"***","26b7c1b8":"<a id=\"submission\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 id=\"submission\" class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#20BEFF; border:0; color:white' role=\"tab\" aria-controls=\"home\"><center>Submission<\/center><\/h1>\n    \n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"Go to TableOfContents\">Go to TOC<\/a>","4912fc91":"<a id=\"references\"><\/a>\n<h1 id=\"references\" class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#20BEFF; border:0; color:white' role=\"tab\" aria-controls=\"home\"><center>References<\/center><\/h1>\n    \n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"Go to TableOfContents\">Go to TOC<\/a>","dddfbda0":"<a id=\"toc\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 id=\"toc\" class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#20BEFF; border:0; color:white' role=\"tab\" aria-controls=\"home\"><center>Table of contents<\/center><\/h1>","5f268247":"<a id=\"load-datasets\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 id=\"load-datasets\" class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#20BEFF; border:0; color:white' role=\"tab\" aria-controls=\"home\"><center>Load Datasets<\/center><\/h1>\n    \n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"Go to TableOfContents\">Go to TOC<\/a>","14608cf1":"<a id=\"fit-based-geo-rounded\"><\/a>\n## **<span style=\"color:#58355E;\">Fit-Based Weights Geo-Rounded<\/span>**\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"Go to TableOfContents\">Go to TOC<\/a> ","4801c7d2":"<a id=\"fit-based\"><\/a>\n## **<span style=\"color:#58355E;\">Fit-Based Weights<\/span>**\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"Go to TableOfContents\">Go to TOC<\/a> ","e29ad8bd":"<a id=\"simple-mean\"><\/a>\n## **<span style=\"color:#58355E;\">Simple mean (Equal Weights)<\/span>**\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"Go to TableOfContents\">Go to TOC<\/a> "}}