{"cell_type":{"2940a6bc":"code","61b2e248":"code","3358d6b9":"code","52a66ebf":"code","bc411ae5":"code","5a2dd3e8":"code","207a9cba":"code","1af11d9d":"code","fbd854d4":"code","9fb10f37":"code","6df05a86":"code","9f9718a4":"code","f98fb789":"code","23a466e0":"code","768ffc59":"code","4fa72a4d":"code","11f8f022":"code","cf6a0276":"code","bcd261e2":"code","ff67e224":"code","91933cd6":"code","8279eb08":"markdown","30f53a2d":"markdown","c2d709ad":"markdown","bf8f1d52":"markdown","ce74f5dd":"markdown","a0ba88b2":"markdown","d11e8c31":"markdown"},"source":{"2940a6bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","61b2e248":"cars_filepath = \"..\/input\/vehicle-dataset-from-cardekho\/CAR DETAILS FROM CAR DEKHO.csv\"\ncars = pd.read_csv(cars_filepath)","3358d6b9":"cars.columns","52a66ebf":"cars.shape","bc411ae5":"cars.info()","5a2dd3e8":"cars.head(10)","207a9cba":"cars.describe()","1af11d9d":"cars.name.describe()","fbd854d4":"plt.figure(figsize = (10,10))\nsns.barplot(x = 'owner', y = 'selling_price', data = cars)","9fb10f37":"plt.figure(figsize = (10,10))\nsns.barplot(x = 'fuel', y = 'selling_price', data = cars)","6df05a86":"plt.figure(figsize = (10,5))\nplt.ylim(0,700000)\nplt.xlim(0,800000)\nsns.regplot(x = 'km_driven', y = 'selling_price', data = cars, color = 'green')","9f9718a4":"cars_copy = cars.copy()","f98fb789":"lst = (cars_copy.dtypes == 'object')\nobject_col = list(lst[lst].index)\nprint(object_col)","23a466e0":"from sklearn.preprocessing import LabelEncoder\n\nencoder = LabelEncoder()\nfor col in object_col:\n    cars_copy[col] = encoder.fit_transform(cars_copy[col])","768ffc59":"attributes = ['name','year', 'km_driven', 'fuel', 'seller_type',\n       'transmission', 'owner']\nX = cars_copy[attributes]\ny = cars_copy.selling_price","4fa72a4d":"from sklearn.model_selection import train_test_split\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size = 0.6, random_state = 0)","11f8f022":"from sklearn.linear_model import LinearRegression\n\nregressor = LinearRegression()\nregressor.fit(X_train,y_train)\n\nprint(regressor.intercept_)\nprint(regressor.coef_)","cf6a0276":"y_pred = regressor.predict(X_valid)\nprint(y_pred)\nprint(y_valid)","bcd261e2":"from sklearn.metrics import mean_absolute_error\nprint(mean_absolute_error(y_valid, y_pred))","ff67e224":"from sklearn.tree import DecisionTreeRegressor\ntree = DecisionTreeRegressor(max_leaf_nodes = 700, random_state = 0)\ntree.fit(X_train,y_train)\ntree_y_pred = tree.predict(X_valid)\ntree_y_pred\nprint(mean_absolute_error(y_valid,tree_y_pred))","91933cd6":"from sklearn.ensemble import RandomForestRegressor\nforest = RandomForestRegressor(random_state=1)\nforest.fit(X_train, y_train)\nforest_y = forest.predict(X_valid)\nprint(mean_absolute_error(y_valid, forest_y))","8279eb08":"**THANK YOU!** ","30f53a2d":"**Model Selection and Validation**\n* Defining training and testing data\n* Importing different models from sklearn libraries implementing their functions\n* Fitting the training data into the model \n* Extracting the predicted value from the implemented model\n* Calculating the Mean Absloute Error to check how accurate the model is","c2d709ad":"**Data Visualization**\n* Plotting graphs to check for relations between different independent variables and the dependent variable\n* Making use of Seaborn library to plot bar graphs and regression scatter plots","bf8f1d52":"**Exploratory Data Analysis**\n* Checking for number of rows and columns \n* Geting info of data\n* Checking for null values\n* Getting to know about the mean, and extreme value distribution of data","ce74f5dd":"Hi, In this kernel I ll be trying to predict selling prices of used cars using the dataset from **CarDekho** (Car buying and selling site).\nIn this attempt, I ll be making use of the **Linear Regression, Decision Tree and Random Forest** models for prediction. I ll also be performing **Data Visualizations and Pre-processing** for categorical data using Label Encoding technique.","a0ba88b2":"![](https:\/\/images.yourstory.com\/cs\/images\/companies\/logosC2481575977792883png)\n<img height=\"500\" width=\"500\">","d11e8c31":"In conclusion, \n* Linear Regression Model predicted prices with a mean error of \u20b9 232,520.78\n* Decision Tree Model predicted prices with a mean error of \u20b9157,809.32\n* Random Forest Regressor Model predicted prices with a mean error of \u20b9124,937.86\n\nI know, these are predictions are way off, I am a beginner at Machine Learning. If you are reading this and know a way of improving the results by, please do reach out to me."}}