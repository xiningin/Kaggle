{"cell_type":{"c6fd2a87":"code","79e157fe":"code","d9fe9a62":"code","ae786a83":"code","6e892a6e":"code","80d294ab":"code","883c62ac":"code","9cc576fe":"code","a48d230b":"code","ad513f02":"code","be58613b":"code","eced3f3b":"code","ecc93065":"code","5db8a766":"code","b1e84ef3":"code","eafea3d2":"code","ebd30f37":"code","2b6401c3":"code","eb27632a":"markdown","4205dd7b":"markdown","7bbbf2e6":"markdown","40d345f4":"markdown","44a4358b":"markdown"},"source":{"c6fd2a87":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","79e157fe":"!pip install openpyxl","d9fe9a62":"!pip install auto-bots==0.0.2","ae786a83":"df = pd.read_excel('\/kaggle\/input\/gold-price-from-1978-till-2020-in-24-currencies\/Gold_Prices.xlsx')\ndf.head()","6e892a6e":"df.isnull().sum()","80d294ab":"# Lets first handle numerical features with nan value\nnumerical_nan = [feature for feature in df.columns if df[feature].isna().sum()>1 and df[feature].dtypes!='O']\nnumerical_nan","883c62ac":"df[numerical_nan].isna().sum()","9cc576fe":"## Replacing the numerical Missing Values\n\nfor feature in numerical_nan:\n    ## We will replace by using median since there are outliers\n    median_value=df[feature].median()\n    \n    df[feature].fillna(median_value,inplace=True)\n    \ndf[numerical_nan].isnull().sum()","a48d230b":"from AutoTS.AutoTS import AutoTS","ad513f02":"#We don't need to parse because in this Dataset it's already parsed\n\n#In the original dataset  column Date was 2009-12 (without day)\n\n#df = pd.read_csv(r\"..\/input\/gold-prices\/annual_csv.csv\",parse_dates=[\"Date\"])","be58613b":"df_grp = df.groupby([\"Name\",\"US dollar\"])[[\"US dollar.1\", \"US dollar.2\"]].sum().reset_index()\ndf_grp.head()","eced3f3b":"df_grp.index = df[\"Name\"] \ndf_grp","ecc93065":"cols_to_drop=['US dollar.1','US dollar.2']\ndf_grp=df_grp.drop(cols_to_drop,axis=1)\ndf_grp.columns","5db8a766":"df_grp.tail()","b1e84ef3":"model = AutoTS()","eafea3d2":"model.fit(df_grp,series_column_name=\"US dollar\")","ebd30f37":"model.predict(start=pd.to_datetime('2020-10-12 00:00:00'), end=pd.to_datetime('2030-10-11 00:00:00'))","2b6401c3":"\n#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Thank you Teja Kumar, @ravillatejakumar for the Automated Time Series code.' )","eb27632a":"#I added hours 00:00:00  since I got a warning. And import warning was Not enough to remove the warning saying that only the date wasn't valid. ","4205dd7b":"#Code by Teja Kumar https:\/\/www.kaggle.com\/ravillatejakumar\/automate-time-series-analysis\/data?select=annual_csv.csv","7bbbf2e6":"![](https:\/\/3gp10c1vpy442j63me73gy3s-wpengine.netdna-ssl.com\/wp-content\/uploads\/2019\/10\/Automated-Time-Series.jpg)datarobot.com","40d345f4":"#I don't know another way (till now) to remove duplicates columns (I'll find later). Therefore I'll drop them since the values are the same.","44a4358b":"#It must be indexed (Date). Here Date is Name and I didn't change the column header."}}