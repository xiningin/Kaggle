{"cell_type":{"2491dea2":"code","e0cf06f1":"code","2ed9cfb6":"code","40595a9a":"code","3173130f":"code","b6a47be5":"code","7fe6d89c":"code","c995de30":"markdown","63e3c465":"markdown","6460a4b2":"markdown","0fc36418":"markdown","a8fe5c75":"markdown","711b9d1b":"markdown","a7a83831":"markdown","7df53778":"markdown","b35d768c":"markdown","bb842714":"markdown","29bffcc3":"markdown","9b16b14a":"markdown","c80efc27":"markdown","c7adf2d6":"markdown","e7d349d3":"markdown"},"source":{"2491dea2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e0cf06f1":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n'''Set the color palette'''\nsns.set_style(style='darkgrid')\nsns.set_context(context='poster',font_scale=0.5)\nsns.set_palette(sns.color_palette(\"muted\"))\n\ndf_all=pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/2019_nCoV_data.csv')\n'''Data Cleaning'''\ndf_all=df_all.fillna(0)\ndf_all=df_all.drop(columns=['Sno','Last Update'])\ndf_all['Date']=df_all['Date'].str.split(' ').str[0]\ndf_all['Country']=df_all['Country'].where(df_all['Country']!='China')\ndf_all['Country']=df_all['Country'].fillna('Mainland China')\ndf_all","2ed9cfb6":"#lineplot\ndf=df_all.copy()\ndf=df[df['Province\/State']!=0][df['Country'].isin(['Mainland China','China','Hong Kong','Taiwan','Macau'])]\ndf=df.sort_values(by=['Date'])\ndf_group_sum=pd.DataFrame(df.groupby('Date').sum())\nplt.figure(figsize=(25,10))\nsns.lineplot(data=df_group_sum['Confirmed'])\nplt.xticks(rotation=30)\nplt.xlabel('Time')\nplt.ylabel('Number')\nplt.title('Accumulation of Virus Confirmed Cases Over Time(In China)')\nx_date=df_group_sum.index\nfor x,y in zip(x_date,df_group_sum['Confirmed']):\n    plt.text(x,y,y,ha='left',va='top')\n\nplt.figure(figsize=(25,10))\nsns.lineplot(data=df_group_sum[['Deaths','Recovered']])\nplt.xticks(rotation=30)\nplt.xlabel('Time')\nplt.ylabel('Number')\nplt.title('Accumulation of Virus Deathes& Recovered Cases Over Time(In China)')\nx_date=df_group_sum.index\ny_num=['Recovered','Deaths']\ntemp = 0\nfor i in y_num:#Disply the text on the line\n    for x,y in zip(x_date,df_group_sum[i]):\n        h_pos=['left','right']\n        v_pos=['bottom','top']\n        plt.text(x,y,y,ha=h_pos[temp],va=v_pos[temp])\n    temp+=1\ndf_group_sum","40595a9a":"df_group_sum['Motality']=df_group_sum['Deaths']\/df_group_sum['Confirmed']\ndf_group_sum['Recovered Rate']=df_group_sum['Recovered']\/df_group_sum['Confirmed']\ndf_MS=df_group_sum[['Motality','Recovered Rate']]\nplt.figure(figsize=(20,5))\nsns.lineplot(data=df_MS)\nplt.xticks(rotation=30)\nplt.xlabel('Time')\nplt.ylabel('Rate')\nplt.title('Motality & Recovered Rate Over Time(In China)')\ndf_group_sum","3173130f":"df_group_sum=pd.DataFrame(df.groupby('Date').sum())\nrate=['New Confirmed','New Deaths','New Recovered']\ncol=['Confirmed','Deaths','Recovered']\ndf_group_sum[rate]=df_group_sum[['Confirmed','Deaths','Recovered']]\ndf_group_sum=df_group_sum.reset_index()\nfor i in range(len(rate)):\n    for j in range(len(df_group_sum['Date'])):\n        if j==0:\n            df_group_sum.at[j,rate[i]]=0\n        else:\n            df_group_sum.at[j,rate[i]]=df_group_sum.at[j,col[i]]-df_group_sum.at[j-1,col[i]]\ndf_group_sum=df_group_sum[['Date','New Confirmed','New Deaths','New Recovered']].set_index('Date')\n\nplt.figure(figsize=(20,10))\nsns.lineplot(data=df_group_sum['New Confirmed'])\nplt.xlabel('Time')\nplt.ylabel('New Number')\nplt.title('The new confirmed cases over the time(In China)')\nx_date=df_group_sum.index\nfor x,y in zip(x_date,df_group_sum['New Confirmed']):\n    plt.text(x,y,y,ha='left',va='top')\n\nplt.figure(figsize=(20,10))\nsns.lineplot(data=df_group_sum[['New Deaths','New Recovered']])\nplt.xlabel('Time')\nplt.ylabel('New Number')\nplt.title('The new recovered and death cases over the time(In China)')\nx_date=df_group_sum.index\ny_num=['New Deaths','New Recovered']\ntemp=0\nfor i in y_num:\n    for x,y in zip(x_date,df_group_sum[i]):\n        h_pos=['right','left']\n        v_pos=['top','bottom']\n        plt.text(x,y,y,ha=h_pos[temp],va=v_pos[temp])\n    temp+=1\ndf_group_sum","b6a47be5":"'''Country explorations'''\ndf=df_all.copy()\nunique_date=list(df['Date'].unique())\ntype_list=['Confirmed','Recovered','Deaths']\ndf=df[df['Country']!='Mainland China'][df['Date']==unique_date[-1]].groupby('Country').sum().sort_values(by='Confirmed',ascending=False).reset_index()\nfor i in type_list:\n    plt.figure(figsize=(20,10))\n    sns.barplot(x=i,y='Country',data=df)\n    plt.xlabel(i)\n    plt.ylabel('Country')\n    plt.title(i+' Number(Over Country)')\ndf","7fe6d89c":"'''Province\/State explorations'''\ndf=df_all.copy()\nunique_date=list(df['Date'].unique())\ntype_list=['Confirmed','Recovered','Deaths']\ndf=df[df['Province\/State']!=0][df['Country'].isin(['Mainland China','China','Hong Kong','Taiwan','Macau'])]\ndf=df[df['Date']==unique_date[-1]].groupby('Province\/State').sum().sort_values(by='Confirmed',ascending=False).reset_index()\nfor i in type_list:\n    plt.figure(figsize=(20,10))\n    sns.barplot(x=i,y='Province\/State',data=df)\n    plt.xlabel(i)\n    plt.ylabel('Province\/State')\n    plt.title(i+' Number(In China)')","c995de30":"Firstly, I loaded the required libraries and datasets from the Kaggle's database.","63e3c465":"**Color and Data Cleaning**","6460a4b2":"Then, we gonna calculate the motality and survival rate in China over time included Hong Kong, Taiwan and Macau.","0fc36418":"Now, I wanna analyze the new cases in China over time included Hong Kong, Taiwan and Macau.","a8fe5c75":"As we can observe in these two figures, obviously, the bad new is that the accumulation of comfirmed cases and death cases is still increasing in a linear mode and we can't see any trend of decreasing. However, we are excited that the recovered cases are exponential increasing started from the Feburary, which means we may find out the solutions of curing the virus disease.","711b9d1b":"**Introduction**","a7a83831":"The following code and figures show the total number cases in China over time included Hong Kong, Taiwan and Macau based on confirmed, deaths, recovered.","7df53778":"The 2019 NCP is a coronavirus that hailed from Wuhan, China. This new kind of coronavirus has spreaded from Wuhan into everywhere around the world, especially in territory of China. I will analyze and also monitor the coronavirus growth, distribution by country and sate\/region over time until its end.","b35d768c":"In the next step, we will explore the situation the whole world is facing excluded territory of China.","bb842714":"**Libraries and Datasets**","29bffcc3":"We can lovely see that the recovered rate keep increasing and faster over the time. And the motality remains arount 2% and there is a trend for it to decrease.","9b16b14a":"***Coronavirus growth in 2019\/2020***","c80efc27":"Finally, we will explore the situation we are facing on different state\/province in China included Hong Kong, Taiwan, Macau.","c7adf2d6":"It is very clear that the recovered cases keep increasing and faster over the time. And the death cases increase slowly although the new confirmed cases over time keep incresing.","e7d349d3":"Then, I gonna set the color palette and also deal with the data cleaning section"}}