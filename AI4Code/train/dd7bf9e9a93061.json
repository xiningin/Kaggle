{"cell_type":{"7f568d77":"code","b47db65b":"code","fefee399":"code","83515d91":"code","64b74de9":"code","58a38285":"code","69f47061":"code","4aaa7c63":"code","837f34c5":"code","bc1db463":"code","008afdde":"code","49b50851":"code","bdc0c7a6":"code","eef52309":"code","0443cf7a":"code","eeea42cd":"code","73a2aab5":"code","574a3430":"code","bc5ea966":"code","6fbd71ab":"code","eccbf6c3":"code","b78e209a":"code","03ac2d3d":"code","e2296f40":"code","1e74b573":"code","d98d47c5":"code","b63178d0":"code","734c5e13":"code","17530ddb":"code","1207a5d5":"code","13b4acbf":"code","f447a60b":"code","8ad9a3c4":"code","33d653f3":"code","1affce53":"code","ff50b57e":"code","ea035759":"code","f8724ad4":"code","a97d2ebf":"code","b6dcf710":"code","28ebc2e9":"code","076c1f04":"markdown","a8a9618b":"markdown","4db4e86d":"markdown","cc081515":"markdown","4ead4dec":"markdown","6eb2ba28":"markdown","ae2532b0":"markdown","900549ef":"markdown","e9a42dae":"markdown","266180fa":"markdown","4a2c31f9":"markdown","590eb0ad":"markdown","25c3fed5":"markdown","623f3e2e":"markdown","d3807f19":"markdown","1b0dac8a":"markdown","305b2402":"markdown","8da2f652":"markdown","0641db61":"markdown","9d6ad83e":"markdown"},"source":{"7f568d77":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","b47db65b":"data = pd.read_csv('\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_3C_weka.csv') #read to file\ndata","fefee399":"data[\"class\"] = [1 if each == \"Hernia\" else 0 for each in data[\"class\"]]\n# Hernia = 1\n# Normal = 0","83515d91":"data","64b74de9":"data.info()","58a38285":"data.describe().T","69f47061":"plt.scatter(data.pelvic_radius,data.sacral_slope)\nplt.xlabel(\"pelvic radius\")\nplt.ylabel(\"sacral slope\")\nplt.show()","4aaa7c63":"from sklearn.linear_model import LinearRegression\n\nlinear_reg = LinearRegression()\n\n# sacral_slope VS pelvic_radius\nprint(\"sacral_slope type: \", type(data.sacral_slope))\nprint(\"pelvic_radius type: \", type(data.pelvic_radius))","837f34c5":"x = data.sacral_slope.values.reshape(-1,1)\ny = data.pelvic_radius.values.reshape(-1,1)\n\nlinear_reg.fit(x,y)","bc1db463":"b0 = linear_reg.predict([[0]]) # You can write the desired value instead of 0. Here we wrote 0 to find the point where the line crosses the y-axis\nprint(\"b0: \", b0)","008afdde":"# another way: \nb0 = linear_reg.intercept_\nprint(\"b0: \", b0)","49b50851":"b1 = linear_reg.coef_\nprint(\"b1 = \", b1)","bdc0c7a6":"print(linear_reg.predict([[45]]))","eef52309":"array = np.array([5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100]).reshape(-1,1)\nplt.scatter(x,y)\ny_head = linear_reg.predict(array)\nplt.plot(array,y_head,color=\"red\")\nplt.show()","0443cf7a":"y = data[\"class\"].values.reshape(-1,1)\nx = data.drop([\"class\"],axis=1).values # axis = 1 => for columns","eeea42cd":"multiple_linear_regression = LinearRegression()\nmultiple_linear_regression.fit(x,y)","73a2aab5":"print(\"b0: \",multiple_linear_regression.intercept_)  # The point where it intersects the y axis\nprint(\"b1,b2,b3,b4,b5,b6: \",multiple_linear_regression.coef_) # The slopes of the line","574a3430":"multiple_linear_regression.predict(np.array([[\n    57.26,\n    19.98,\n    38.63,\n    31.43,\n    115.098,\n    4.4512\n]]))","bc5ea966":"x = data[\"class\"].values.reshape(-1,1)\ny = data[\"sacral_slope\"].values.reshape(-1,1)","6fbd71ab":"from sklearn.tree import DecisionTreeRegressor\n\ntree_reg = DecisionTreeRegressor()\ntree_reg.fit(x,y)","eccbf6c3":"y_head = tree_reg.predict(x)\n\nplt.scatter(x,y,color=\"red\")\nplt.plot(x,y_head,color=\"green\")\nplt.xlabel(\"Grandstand Level\")\nplt.ylabel(\"Price\")\nplt.show()","b78e209a":"plt.scatter(data[data[\"class\"]==1].pelvic_radius,data[data[\"class\"]==1].sacral_slope,color=\"red\",label=\"hernia\",alpha= 0.6)\nplt.scatter(data[data[\"class\"]==0].pelvic_radius,data[data[\"class\"]==0].sacral_slope,color=\"green\",label=\"normal\",alpha= 0.6)\nplt.xlabel(\"pelvic_radius\")\nplt.ylabel(\"sacral_slope\")\nplt.legend()\nplt.show()","03ac2d3d":"y = data[\"class\"].values\nx_data = data.drop([\"class\"],axis=1)","e2296f40":"x = (x_data - np.min(x_data))\/(np.max(x_data) - np.min(x_data))","1e74b573":"# train test split\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=1)","d98d47c5":"# knn model\nfrom sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier(n_neighbors=3) # n_neighbors => key count\nknn.fit(x_train,y_train)\nprediction = knn.predict(x_test)","b63178d0":"prediction # looks nice :)","734c5e13":"print(\"{} knn score: {} \".format(3,knn.score(x_test,y_test)*100)) # accuracy = 79.5%","17530ddb":"# find k value\nscore_list = []\n\nfor each in range(1,15):\n    knn2 = KNeighborsClassifier(n_neighbors=each)\n    knn2.fit(x_train,y_train)\n    score_list.append(knn2.score(x_test,y_test))\n    \nplt.plot(range(1,15),score_list)\nplt.xlabel(\"k values\")\nplt.ylabel(\"accuracy\")\nplt.show()","1207a5d5":"print(\"{} knn score: {} \".format(13,knn.score(x_test,y_test)*100))","13b4acbf":"from IPython.display import Image\nImage(url=\"https:\/\/www.researchgate.net\/publication\/304611323\/figure\/fig8\/AS:668377215406089@1536364954428\/Classification-of-data-by-support-vector-machine-SVM.png\")","f447a60b":"y = data[\"class\"].values\nx_data = data.drop([\"class\"],axis=1)\n\n# normalazition\nx = (x_data - np.min(x_data))\/(np.max(x_data) - np.min(x_data))\n\n# train test split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=1)","8ad9a3c4":"from sklearn.svm import SVC\n\nsvm = SVC(random_state=42)\nsvm.fit(x_train,y_train)\n\nprint(\"Accuracy of SVM algo: \", svm.score(x_test,y_test)*100)","33d653f3":"y = data[\"class\"].values\nx_data = data.drop([\"class\"],axis=1)\n\n# normalazition\nx = (x_data - np.min(x_data))\/(np.max(x_data) - np.min(x_data))\n\n# train test split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=1)","1affce53":"from sklearn.naive_bayes import GaussianNB\n\nnb = GaussianNB()\nnb.fit(x_train,y_train)\nprint(\"Accuracy of naive_bayes algo:\",nb.score(x_test,y_test)*100)","ff50b57e":"y = data[\"class\"].values\nx_data = data.drop([\"class\"],axis=1)\n\n# normalazition\nx = (x_data - np.min(x_data))\/(np.max(x_data) - np.min(x_data))\n\n# train test split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=1)","ea035759":"from sklearn.tree import DecisionTreeClassifier\n\ndt = DecisionTreeClassifier(random_state=42)\ndt.fit(x_train,y_train)\n\nprint(\"Score: \", dt.score(x_test,y_test)*100)","f8724ad4":"y = data[\"class\"].values\nx_data = data.drop([\"class\"],axis=1)\n\n# normalazition\nx = (x_data - np.min(x_data))\/(np.max(x_data) - np.min(x_data))\n\n# train test split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=1)","a97d2ebf":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(n_estimators=100,random_state=42) # n_estimators = number of trees\nrf.fit(x_train,y_train)\nprint(\"Score: \", rf.score(x_test,y_test)*100)","b6dcf710":"y = data[\"class\"].values.reshape(-1,1)\nx_data = data.drop([\"class\"],axis=1).values\n\n# normalazition\nx = (x_data - np.min(x_data))\/(np.max(x_data) - np.min(x_data))\n\nlinear_reg.fit(x,y)\ny_head = linear_reg.predict(x) ","28ebc2e9":"from sklearn.metrics import r2_score\n\nprint(\"r_square score: \",r2_score(y,y_head))","076c1f04":"For example: if sacral slope data is 45, pelvic radius data takes the following value.","a8a9618b":"Now I have to enter the values. For example, you are a doctor and you have this data. When we enter this data in order, it will show us whether there is a hernia. <br><br>\n\n* pelvic_invidince = 57.26\n* pelvic_tilt = 18.98\n* lumbar_lordosis_angle = 38.63\n* sacral_slope = 31.43\n* pelvic_radius = 115.098\n* degree_spondylolisthesis = 4.4512","4db4e86d":"# Random Forest Classification\nRandom forests or random decision forests are an ensemble learning method for classification, regression and other tasks that operate by constructing a multitude of decision trees at training time and outputting the class that is the mode of the classes (classification) or mean prediction (regression) of the individual trees. Random decision forests correct for decision trees' habit of overfitting to their training set.","cc081515":"# Decision Tree Regression\nDecision Tree - Regression. Decision tree builds regression or classification models in the form of a tree structure. It breaks down a dataset into smaller and smaller subsets while at the same time an associated decision tree is incrementally developed. ... Decision trees can handle both categorical and numerical data.","4ead4dec":"# Polynomial Regression\nPolynomial Regression is a form of linear regression in which the relationship between the independent variable x and dependent variable y is modeled as an nth degree polynomial. Polynomial regression fits a nonlinear relationship between the value of x and the corresponding conditional mean of y, denoted E(y |x)\n","6eb2ba28":"Since it is not 1, we can understand that the result is not a hernia.","ae2532b0":"- Choose K value\n- Find the nearest data points in K\n- Calculate how many of the class nearest neighbors in K\n- Determine which class of point or data we tested belongs to","900549ef":"When we examine the table, we see that the most appropriate value is 13.","e9a42dae":"# Support Vector Machine (SVM)\nA support vector machine (SVM) is a supervised machine learning model that uses classification algorithms for two-group classification problems. After giving an SVM model sets of labeled training data for each category, they're able to categorize new text. So you're working on a text classification problem.","266180fa":"# KNN Algorithm\nThe k-nearest neighbors (KNN) algorithm is a simple, supervised machine learning algorithm that can be used to solve both classification and regression problems.","4a2c31f9":"We can use the following method to see the change of pelvic radius values \u200b\u200baccording to sacral slope values.","590eb0ad":"# Naive Bayes Classification\nNaive Bayes classifiers are a collection of classification algorithms based on Bayes' Theorem. It is not a single algorithm but a family of algorithms where all of them share a common principle, i.e. every pair of features being classified is independent of each other.","25c3fed5":"#  Decision Tree Classification","623f3e2e":"**As can be seen, we did not get a complete yield in the chart here. This part is better described at the bottom.**","d3807f19":"# Multiple Linear Regression\nMultiple linear regression (MLR), also known simply as multiple regression, is a statistical technique that uses several explanatory variables to predict the outcome of a response variable. Multiple regression is an extension of linear (OLS) regression that uses just one explanatory variable.\n","1b0dac8a":"# Configuring the Data\n","305b2402":"# Evaluation Regression Models\nAfter building a number of different regression models, there is a wealth of criteria by which they can be evaluated and compared. RMSE is a popular formula to measure the error rate of a regression model.","8da2f652":"By examining the values \u200b\u200babove, we can better understand our data.","0641db61":"# Linear Regression\nIn statistics, linear regression is a linear approach to modeling the relationship between a scalar response (or dependent variable) and one or more explanatory variables (or independent variables). The case of one explanatory variable is called simple linear regression. <br>\n\n* y = b0 + b1*x\n* b0 = constant\n* b1 = coeff\n* x = value","9d6ad83e":"### normalization"}}