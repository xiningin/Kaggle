{"cell_type":{"7e3d7173":"code","f74b6659":"code","2af0f907":"code","0c47432e":"code","c3586b98":"code","1e0f25af":"code","4ed87156":"code","1f052911":"code","ed078d92":"code","4ed26af8":"markdown","c81d06e3":"markdown","874a2dd2":"markdown","1c5055cd":"markdown","16f3266b":"markdown","157cf65d":"markdown","c7244dbb":"markdown","30f6347a":"markdown"},"source":{"7e3d7173":"import pandas as pd\nimport numpy as np\n%matplotlib inline\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-whitegrid')\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style=\"whitegrid\")\nimport matplotlib.ticker as tick\nfrom matplotlib.ticker import PercentFormatter","f74b6659":"train_I = pd.read_csv('\/kaggle\/input\/ieee-fraud-detection\/train_identity.csv')\ntrain_T = pd.read_csv('\/kaggle\/input\/ieee-fraud-detection\/train_transaction.csv')","2af0f907":"mergedset = train_T.merge(train_I, how= 'left')","0c47432e":"corrmatrix = mergedset.corr()[['isFraud']]\n\nfig, ax = plt.subplots(1,2,figsize=(14, 10))\nmaximos = corrmatrix.loc[(corrmatrix['isFraud']>0) & (corrmatrix['isFraud']!=1)].sort_values(by='isFraud', ascending=False).head(20)\nheatmapmax = sns.heatmap(maximos, vmin=maximos.min(), vmax=maximos.max(), annot=True, cmap=sns.light_palette(\"seagreen\", as_cmap=True),ax = ax[0])\nheatmapmax.set_title('Features mas relacionadas con isFraud', fontdict={'fontsize':18}, pad=16);\n\nminimos = corrmatrix.loc[corrmatrix['isFraud']<0].sort_values(by='isFraud', ascending=True).head(20)\nheatmapmin = sns.heatmap(minimos, vmin=minimos.max(), vmax=minimos.min(), annot=True, cmap=sns.color_palette(\"light:b\", as_cmap=True),ax = ax[1])\nheatmapmin.set_title('Features menos relacionadas con isFraud', fontdict={'fontsize':18}, pad=16);\nfig.tight_layout(pad=3.0)","c3586b98":"mergedset['id_31'].fillna('none',inplace=True)\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"chrome\"),['Browser']] = 'Chrome'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"samsung\"),['Browser']] = 'Samsung'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"ie\"),['Browser']] = 'ie'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"safari\"),['Browser']] = 'Safari'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"firefox\"),['Browser']] = 'Firefox'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"opera\"),['Browser']] = 'Opera'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"edge\"),['Browser']] = 'Edge'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"none\"),['Browser']] = 'None'\nmergedset.loc[(mergedset['Browser'].isna()) & (~mergedset['id_31'].isna()),['Browser']] = 'Other'\n\nbrowserinfo = mergedset.loc[(mergedset['Browser'] != 'None') & (mergedset['isFraud'] == 1),['Browser','TransactionAmt']]\nfig, ax = plt.subplots(1,1,figsize=(20, 5))\nsns.violinplot(x=browserinfo.Browser, y=browserinfo.TransactionAmt, data=browserinfo, width=0.9, fliersize = 3,palette= sns.color_palette(\"Paired\"),ax=ax)\nax.set_xlabel('Browser')\nax.set_title('Distribucion de montos de los fraudes por Browser', fontsize=16, pad=20)\nax.set_ylabel('Monto')","1e0f25af":"deltainfo = mergedset.loc[( mergedset['isFraud'] == 1),['card4','TransactionDT']]\ndeltainfo['days'] = deltainfo['TransactionDT'] \/ 86400\nfig, ax = plt.subplots(1,1,figsize=(20, 5))\nsns.boxplot(x=deltainfo.card4, y=deltainfo.days, data=deltainfo, width=0.9, fliersize = 3,palette= sns.color_palette(\"Paired\"),ax=ax)\nax.set_xlabel('Tarjeta')\nax.set_title('Distribucion de cantidad de dias desde el fraude por tarjeta', fontsize=16, pad=20)\nax.set_ylabel('Dias')\nfig.tight_layout(pad=3.0)","4ed87156":"fig, ax = plt.subplots(1,1,figsize=(10, 5))\n\ngDE = sns.heatmap(pd.pivot_table(mergedset.loc[:,['ProductCD','card4','isFraud']], values='isFraud', index=['card4'],\n                    columns=['ProductCD'], aggfunc=np.sum).fillna(0), cmap=sns.color_palette(\"YlOrBr\", as_cmap=True), annot = True,fmt='1.0f',ax = ax)\ngDE.set_title(\"Relacion entre product code y tarjetas para fraudes\", fontsize = 20,pad = 20)\ngDE.set_xlabel(\"Codigo de producto\", fontsize = 15)\ngDE.set_ylabel(\"Tarjeta\", fontsize = 15)\nplt.yticks(rotation=0)\nplt.xticks(rotation=0)\n\nfig.tight_layout(pad=3.0)","1f052911":"mergedset['id_31'].fillna('none',inplace=True)\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"chrome\"),['Browser']] = 'Chrome'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"samsung\"),['Browser']] = 'Samsung'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"ie\"),['Browser']] = 'ie'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"safari\"),['Browser']] = 'Safari'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"firefox\"),['Browser']] = 'Firefox'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"opera\"),['Browser']] = 'Opera'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"edge\"),['Browser']] = 'Edge'\nmergedset.loc[mergedset['id_31'].str.lower().str.contains(\"none\"),['Browser']] = 'None'\nmergedset.loc[(mergedset['Browser'].isna()) & (~mergedset['id_31'].isna()),['Browser']] = 'Other'\n\ndeviceinfo = pd.pivot_table(mergedset.loc[:,['Browser','DeviceType','isFraud']], index = ['Browser'],values='isFraud', columns = ['DeviceType'], aggfunc = pd.Series.sum).fillna('0')\ndeviceinfo.columns = ['desktop','mobile']\ndeviceinfo = deviceinfo.loc[('Chrome','Edge','Firefox','Opera','Safari','Samsung','ie','Other'),:]\nfor col in deviceinfo.columns:\n    deviceinfo[col] = pd.to_numeric(deviceinfo[col])#\n\ndeviceinfo.plot(kind = 'bar', stacked = False, colormap = 'tab20', width = 0.8, grid = False,figsize= (20,10))\nplt.legend(loc = 'center right', bbox_to_anchor = (1.2, 0.5))\nplt.xlabel('Browser', fontsize = 15)\nplt.ylabel('Fraudes', fontsize = 15)\nplt.title('Cantidad de fraudes por browser y tipo de dispositivo', fontsize=20)\nplt.xticks(rotation = 0)\nfig.tight_layout(pad=3.0)","ed078d92":"mergedset['DeviceInfo'].fillna('none',inplace=True)\nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"windows\"),['Device']] = 'WINDOWS'\nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"ios\"),['Device']] = 'IOS'\nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"mac\"),['Device']] = 'MAC'\nmergedset.loc[(mergedset['DeviceInfo'].str.lower().str.contains(\"gt-\")) | (mergedset['DeviceInfo'].str.lower().str.contains(\"sm-\")) | (mergedset['DeviceInfo'].str.lower().str.contains(\"samsung\")),['Device']] = 'SAMSUNG'\nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"lg\"),['Device']] = 'LG'\nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"htc\"),['Device']] = 'HTC'\nmergedset.loc[(mergedset['DeviceInfo'].str.lower().str.contains(\"xt\")) | (mergedset['DeviceInfo'].str.lower().str.contains(\"moto\")),['Device']] = 'MOTO'\nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"hisense\"),['Device']] = 'HISENSE'\nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"huawei\"),['Device']] = 'HUAWEI'\nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"lenovo\"),['Device']] = 'LENOVO'\nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"pixel\"),['Device']] = 'PIXEL'\nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"redmi\"),['Device']] = 'REDMI'\nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"blade\"),['Device']] = 'BLADE'\nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"nexus\"),['Device']] = 'NEXUS' \nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"trident\"),['Device']] = 'TRIDENT' \nmergedset.loc[mergedset['DeviceInfo'].str.lower().str.contains(\"none\"),['Device']] = 'NO INFO'\nmergedset.loc[(mergedset['Device'].isna()) & (~mergedset['DeviceInfo'].isna()),['Device']] = 'OTHER'\n\n\ndeviceinfo = pd.pivot_table(mergedset.loc[:,['Device','DeviceType','isFraud']], index = ['Device'],values='isFraud', columns = ['DeviceType'], aggfunc = pd.Series.sum).fillna('0')\ndeviceinfo.columns = ['desktop','mobile']\ndeviceinfo = deviceinfo.loc[('BLADE', 'HISENSE', 'HTC', 'HUAWEI', 'IOS', 'LENOVO', 'LG', 'MAC',\n       'MOTO', 'NEXUS', 'NO INFO', 'OTHER', 'PIXEL', 'REDMI', 'SAMSUNG',\n       'TRIDENT', 'WINDOWS'),:]\nfor col in deviceinfo.columns:\n    deviceinfo[col] = pd.to_numeric(deviceinfo[col])#\n\ndeviceinfo.plot(kind = 'bar', stacked = False, colormap = 'tab20', width = 0.8, grid = False,figsize= (20,10))\nplt.legend(loc = 'center right', bbox_to_anchor = (1.2, 0.5))\nplt.xlabel('Marca', fontsize = 15)\nplt.ylabel('Fraudes', fontsize = 15)\nplt.title('Cantidad de fraudes por marca y tipo de dispositivo', fontsize=20)\nplt.xticks(rotation = 0)\n","4ed26af8":"Realizar 6 visualizaciones interesantes que ayuden a explicar el target, alguno que\ncontenga al menos un feature de train_identity.csv y haciendo al menos un plot de cada tipo:\n*  Bar plot\n*  Violin plot\n*  Box plot\n*  Heatmap\n","c81d06e3":"# Parte I: An\u00e1lisis exploratorio","874a2dd2":"## Heatmap de relacion entre productos y tarjeta para los fraudes","1c5055cd":"## Barplot de la cantidad de fraudes por dispositivo y marca","16f3266b":"## Boxplot de dias que pasaron desde el fraude por tarjeta","157cf65d":"## Barplot de la cantidad de fraudes por dispositivo y browser","c7244dbb":"## Heatmap de correlacion ","30f6347a":"## Violin plot de fraude por Browser"}}