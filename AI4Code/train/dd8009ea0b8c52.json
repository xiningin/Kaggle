{"cell_type":{"901a0c37":"code","44f6ba11":"code","268f85ef":"code","e7aaff1c":"code","60ce01a2":"code","21982059":"code","6b1f33ca":"code","bfef4864":"code","7d1fa74e":"code","01e3738d":"code","09c9c18e":"code","60d6e23a":"code","1a78e850":"code","dfbdbc6f":"code","939a867f":"code","0dd9bcf9":"code","b711edcf":"code","4ab86de1":"code","c85bca3d":"code","c3e68574":"code","6ef19089":"code","c802d3a9":"code","e07e6a9c":"code","aaa7361a":"code","8b788c94":"markdown","060b914e":"markdown","13b75d0a":"markdown","4ad3d50f":"markdown","809671b7":"markdown","58a9882a":"markdown","e3fb0dfc":"markdown","9a1cf1c5":"markdown"},"source":{"901a0c37":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pandas import Series,DataFrame\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","44f6ba11":"pokemon = pd.read_csv('..\/input\/Pokemon.csv')\npokemon.head()","268f85ef":"pokemon.drop('#',axis=1,inplace=True)\npokemon.head()","e7aaff1c":"pokemon.info()","60ce01a2":"t1_count = pokemon['Type 1'].value_counts()\nt2_count = pokemon['Type 2'].value_counts()","21982059":"types = pd.concat([t1_count,t2_count],axis=1,sort=False)\ntypes","6b1f33ca":"types['Total'] = types['Type 1'] + types['Type 2']\ntypes.sort_values(by='Total',ascending=False,inplace=True)\ntypes","bfef4864":"plt.figure(figsize=(12,6))\nplt.bar(types.index,types['Total'])\nplt.xticks(rotation=60)\nplt.show()","7d1fa74e":"plt.figure(figsize=(10,10))\nplt.pie(types['Total'],labels=types.index,shadow=True,autopct='%1.1f%%',\n        explode=(0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))\nplt.show()","01e3738d":"pokemon['Generation'].value_counts()","09c9c18e":"pokemon['Legendary'].value_counts()","60d6e23a":"pokemon_num = pokemon.loc[:,'Total':'Speed']\nsns.pairplot(pokemon_num)\nplt.show()","1a78e850":"sns.heatmap(pokemon_num.corr(),annot=True)\nplt.show()","dfbdbc6f":"fig,ax = plt.subplots(7,2,figsize=(16,50))\nsns.distplot(pokemon['Total'],ax=ax[0,0])\nsns.boxplot(pokemon['Total'],ax=ax[0,1])\nsns.distplot(pokemon['HP'],ax=ax[1,0])\nsns.boxplot(pokemon['HP'],ax=ax[1,1])\nsns.distplot(pokemon['Attack'],ax=ax[2,0])\nsns.boxplot(pokemon['Attack'],ax=ax[2,1])\nsns.distplot(pokemon['Defense'],ax=ax[3,0])\nsns.boxplot(pokemon['Defense'],ax=ax[3,1])\nsns.distplot(pokemon['Sp. Atk'],ax=ax[4,0])\nsns.boxplot(pokemon['Sp. Atk'],ax=ax[4,1])\nsns.distplot(pokemon['Sp. Def'],ax=ax[5,0])\nsns.boxplot(pokemon['Sp. Def'],ax=ax[5,1])\nsns.distplot(pokemon['Speed'],ax=ax[6,0])\nsns.boxplot(pokemon['Speed'],ax=ax[6,1])\nplt.show()","939a867f":"fig,ax = plt.subplots(7,1,figsize=(16,30))\nsns.boxplot(x='Type 1',y='Total',data=pokemon,ax=ax[0])\nsns.boxplot(x='Type 1',y='HP',data=pokemon,ax=ax[1])\nsns.boxplot(x='Type 1',y='Attack',data=pokemon,ax=ax[2])\nsns.boxplot(x='Type 1',y='Defense',data=pokemon,ax=ax[3])\nsns.boxplot(x='Type 1',y='Sp. Atk',data=pokemon,ax=ax[4])\nsns.boxplot(x='Type 1',y='Sp. Def',data=pokemon,ax=ax[5])\nsns.boxplot(x='Type 1',y='Speed',data=pokemon,ax=ax[6])\nplt.show()","0dd9bcf9":"fig,ax = plt.subplots(7,1,figsize=(12,30))\nsns.boxplot(x='Generation',y='Total',data=pokemon,ax=ax[0])\nsns.boxplot(x='Generation',y='HP',data=pokemon,ax=ax[1])\nsns.boxplot(x='Generation',y='Attack',data=pokemon,ax=ax[2])\nsns.boxplot(x='Generation',y='Defense',data=pokemon,ax=ax[3])\nsns.boxplot(x='Generation',y='Sp. Atk',data=pokemon,ax=ax[4])\nsns.boxplot(x='Generation',y='Sp. Def',data=pokemon,ax=ax[5])\nsns.boxplot(x='Generation',y='Speed',data=pokemon,ax=ax[6])\nplt.show()","b711edcf":"fig,ax = plt.subplots(4,2,figsize=(16,30))\nsns.boxplot(x='Legendary',y='Total',data=pokemon,ax=ax[0,0])\nsns.boxplot(x='Legendary',y='HP',data=pokemon,ax=ax[0,1])\nsns.boxplot(x='Legendary',y='Attack',data=pokemon,ax=ax[1,0])\nsns.boxplot(x='Legendary',y='Defense',data=pokemon,ax=ax[1,1])\nsns.boxplot(x='Legendary',y='Sp. Atk',data=pokemon,ax=ax[2,0])\nsns.boxplot(x='Legendary',y='Sp. Def',data=pokemon,ax=ax[2,1])\nsns.boxplot(x='Legendary',y='Speed',data=pokemon,ax=ax[3,0])\nplt.show()","4ab86de1":"from scipy.stats import shapiro,levene,bartlett,ttest_1samp,wilcoxon,ttest_ind,mannwhitneyu,f_oneway\nl_grp = pokemon.groupby('Legendary')\nlegendary_true = l_grp.get_group(True)\nlegendary_false = l_grp.get_group(False)","c85bca3d":"# check for normality\nprint(shapiro(legendary_true['Total']))\nprint(shapiro(legendary_false['Total']))","c3e68574":"# comparing variances\nbartlett(legendary_true['Total'],legendary_false['Total'])","6ef19089":"mannwhitneyu(legendary_true['Total'], legendary_false['Total'])","c802d3a9":"gen_grp = pokemon.groupby('Generation')\ngen1 = gen_grp.get_group(1)\ngen2 = gen_grp.get_group(2)\ngen3 = gen_grp.get_group(3)\ngen4 = gen_grp.get_group(4)\ngen5 = gen_grp.get_group(5)\ngen6 = gen_grp.get_group(6)","e07e6a9c":"f_oneway(gen1['Total'],gen2['Total'],gen3['Total'],gen4['Total'],gen5['Total'],gen6['Total'])","aaa7361a":"sns.countplot(x='Generation',hue='Legendary',data=pokemon)\nplt.show()","8b788c94":"*Is there a significant difference in Legendary Pokemons and Non-Legendary Pokemons in terms of Total, HP, Attack etc. values*","060b914e":"We don't need the Pokedex Index column.","13b75d0a":"* pvalue < 0.05 implies that variances of the two samples are significantly different","4ad3d50f":"**Two-sample unpaired test**","809671b7":"* pvalue < 0.05 implies that there is a significant difference in Total between legendary and non-legendary pokemons","58a9882a":"*Is there a significant difference in Total among generations?*","e3fb0dfc":"* pvalue < 0.05 for both implies both samples are not normal.","9a1cf1c5":"* pvalue > 0.05 implies that there is not a significant difference in Total among generations"}}