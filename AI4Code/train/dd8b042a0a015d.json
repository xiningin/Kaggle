{"cell_type":{"ee206862":"code","81deccab":"code","da32adbf":"code","98d6c92a":"code","a6199b18":"code","7a8acea0":"code","196d74eb":"code","ef873f93":"code","3049c72d":"code","a8486553":"code","c0dcac69":"markdown"},"source":{"ee206862":"import itertools\n\nimport numpy as np\nimport pandas as pd\n\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.feature_selection import VarianceThreshold\nfrom sklearn.preprocessing import normalize\nfrom sklearn.preprocessing import StandardScaler","81deccab":"x_train = pd.read_csv(filepath_or_buffer=\"..\/input\/Breast_cancer_data.csv\", sep=',')\n\ny_train = x_train[\"diagnosis\"]\nx_train = x_train.drop(labels=\"diagnosis\", axis=1)\nclasses = np.sort(np.unique(y_train))\nX_std = StandardScaler().fit_transform(x_train)","da32adbf":"x_train","98d6c92a":"y_train","a6199b18":"cov_mat = np.cov(X_std.T)\n\neig_vals, eig_vecs = np.linalg.eig(cov_mat)\n\ncov_mat","7a8acea0":"eig_vecs","196d74eb":"# Make a list of (eigenvalue, eigenvector) tuples\neig_pairs = [(np.abs(eig_vals[i]), eig_vecs[:,i]) for i in range(len(eig_vals))]\n\n# Sort the (eigenvalue, eigenvector) tuples from high to low\neig_pairs.sort(key=lambda x: x[0], reverse=True)\n\neig_pairs","ef873f93":"matrix_w = np.hstack((eig_pairs[0][1].reshape(5,1), \n                      eig_pairs[1][1].reshape(5,1)))\n\nmatrix_w","3049c72d":"transformed = X_std.dot(matrix_w)","a8486553":"fig = plt.figure(figsize=(10, 7))\nax = fig.add_subplot(1, 1, 1)\ncolors = ['blue', 'red']\nmarkers = [\"o\", \"o\"]\nlabels = [\"Positive\", \"Negative\"]\n\nfor class_ix, marker, color, label in zip(\n        classes, markers, colors, labels):\n    ax.scatter(transformed[np.where(y_train == class_ix), 0],\n               transformed[np.where(y_train == class_ix), 1],\n               marker=marker, color=color,\n               linewidth='1', alpha=0.9, label=label)\n    ax.legend(loc='best')\n    plt.title(\n        \"Plot projected on the first 2 principal components\")\n    plt.xlabel(\"Principal component 1\")\n    plt.ylabel(\"Principal component 2\")\nplt.show()","c0dcac69":"PCA Visualization on Breast Cancer Prediction "}}