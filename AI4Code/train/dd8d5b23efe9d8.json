{"cell_type":{"236caff8":"code","d86277f3":"code","59deb59b":"code","d4d7048f":"code","3700ea20":"code","7a99fb88":"code","adfc3a32":"code","007a0b04":"code","6308e1b1":"code","00a35576":"code","5d08396b":"code","5e81337e":"code","00760e97":"code","2a1971f0":"code","2c8e5f9c":"code","f13c7563":"code","f241c08a":"code","ca4bd935":"code","8003ae61":"code","1bda9a5b":"markdown","dd650bbb":"markdown","b232dab3":"markdown","0ff88158":"markdown","8e300b13":"markdown","f2a2c15c":"markdown","57a9c19b":"markdown","b169c939":"markdown","6d864729":"markdown","73abf90b":"markdown","f35303c2":"markdown"},"source":{"236caff8":"import pandas as pd\nimport numpy as np\nimport torch\nimport fastai\nfrom fastai.vision import *\nimport os\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg","d86277f3":"from zipfile import ZipFile \ndef unZip(file_name):\n  with ZipFile(file_name, 'r') as zip: \n      zip.extractall() \n      print('Done!') ","59deb59b":"import shutil\ndef copyfiles(filesName,dest):\n  for file in filesName:\n    shutil.copy(file, dest)\n    print(\"Copied\")\n    ","d4d7048f":"import glob\npath_data=\"..\/input\/chest_xray\/chest_xray\/\"\nfilesPos= sorted(glob.glob(path_data+'train\/NORMAL\/*.jpeg'))\nfilesNeg=sorted(glob.glob(path_data+'\/train\/PNEUMONIA\/*.jpeg'))\n","3700ea20":"filesNeg=filesNeg[:1300]\nfilesPos=filesPos[:1300]","7a99fb88":"!pwd\n!mkdir \/kaggle\/working\/dataset\n!mkdir \/kaggle\/working\/dataset\/NORMAL\n!mkdir \/kaggle\/working\/dataset\/PNEUMONIA","adfc3a32":"copyfiles(filesPos,'\/kaggle\/working\/dataset\/NORMAL')","007a0b04":"\ncopyfiles(filesNeg,'\/kaggle\/working\/dataset\/PNEUMONIA')","6308e1b1":"!ls \/kaggle\/working\/dataset\/NORMAL","00a35576":"len(filesPos),len(filesNeg)","5d08396b":"import numpy as np\nnp.random.seed(42)\npath='\/kaggle\/working\/dataset'\ndata = ImageDataBunch.from_folder(path,\n        ds_tfms=get_transforms(do_flip=True),\n        valid_pct=0.2,\n        size=224,\n        num_workers=4,\n        bs=32,\n        test=\"test\").normalize()","5e81337e":"learn1 = create_cnn(data, models.resnet101, model_dir=\"\/tmp\/model\/\", metrics=[error_rate, accuracy],callback_fns=ShowGraph)","00760e97":"learn1.unfreeze()","2a1971f0":"\nlearn1.fit_one_cycle(7)","2c8e5f9c":"learn1.save('notPreTrainedResnet101.pth')","f13c7563":"interp = ClassificationInterpretation.from_learner(learn1)\ninterp.plot_confusion_matrix()","f241c08a":"learn2 = create_cnn(data, models.resnet101, model_dir=\"\/tmp\/model\/\", metrics=[error_rate, accuracy],callback_fns=ShowGraph)","ca4bd935":"learn2.fit_one_cycle(20)","8003ae61":"interp = ClassificationInterpretation.from_learner(learn2)\ninterp.plot_confusion_matrix()\n","1bda9a5b":"Creating Learner Class which is a CNN Model . Architecture is ResNet101 \nMetrics are Error rate and Accuracy","dd650bbb":"Making Equal number of Files Positive and Negitive","b232dab3":"Importing Packages","0ff88158":" **Function to Copy Files**","8e300b13":"**Getting Files Names from Normal and Pneumonia Folder**","f2a2c15c":"Coping Positive and Negitive Files","57a9c19b":"Folder for training data","b169c939":"Fitting model to Our Dataset\nNumber of Epochs: 5\nWeights: Random\nLearning Rate: Random","6d864729":"**Function to Unzip Zip Files**","73abf90b":"Delete Layers Weights","f35303c2":"Creating Data Batch 20% Validation\n1. Image Size: 224\n2. Flip Images : Yes\n3. Paralel Processor : 4\n4. Batch Size : 32"}}