{"cell_type":{"d5966075":"code","5cc2e473":"code","eee6d860":"code","1ad57ecb":"code","baf92750":"code","2956d95c":"code","215088be":"code","b5fef395":"code","b021d570":"code","7a337187":"code","04358803":"code","572d8a03":"code","05110416":"code","00a7c8de":"code","e37491a6":"code","ffce0dc9":"code","dcd52d49":"code","87565924":"code","01ce55f7":"code","7fd8524e":"code","0c2e4125":"code","7f83a930":"code","d4b7db1a":"code","2d5b5918":"code","47daf724":"code","26f089e7":"code","875171a1":"code","15d037a4":"code","5612e284":"code","e31078eb":"code","6cf19b53":"markdown","7527cf04":"markdown","aa2e1627":"markdown","37afbfe0":"markdown","e739e2ef":"markdown","251320fa":"markdown","399aa54e":"markdown","641387b9":"markdown","1ec64c44":"markdown","a64ad879":"markdown","98938019":"markdown","dfe82653":"markdown","bec85031":"markdown","602761b5":"markdown","00750b16":"markdown","47b392e0":"markdown"},"source":{"d5966075":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5cc2e473":"#Read csv file into a dataframe\nfriends_df = pd.read_csv(\"..\/input\/friends-series-dataset\/friends_episodes_v2.csv\")\n\n#Output the first 5 rows to observe the columns and data\nfriends_df.head()","eee6d860":"#Check total number of rows and columns in the dataset\nfriends_df.shape","1ad57ecb":"#Identify the different columns available in the dataset\nfriends_df.columns","baf92750":"#Understand the datatype, null values in the dataset\nfriends_df.info()","2956d95c":"#Another way to check count of null values\nfriends_df.isnull().sum()","215088be":"#Identify the min,max,avg values in the dataset\nfriends_df.describe()","b5fef395":"#Change the data type of Season\nfriends_df['Season'] = friends_df['Season'].astype(\"object\")\n\n#Check if the data type of Season has been changed from int to object\nfriends_df['Season'].dtypes","b021d570":"print(\"The show started in {} and ended in {}\".format(min(friends_df['Year_of_prod']),max(friends_df['Year_of_prod'])))","7a337187":"friends_df['Season'].value_counts().sort_index()","04358803":"plt.figure(figsize=(10,5))\nsns.set(style=\"whitegrid\")\nplt.xlabel(\"Season\")\nplt.title(\"Count of episodes\")\n\n_ = sns.countplot(x=\"Season\", data=friends_df)","572d8a03":"Duration_Season = friends_df.groupby(\"Season\").Duration.sum().reset_index()\nprint(Duration_Season)\n\nLongest_Season_Duration = max(Duration_Season.Duration)\nLongest_Season = (Duration_Season.loc[Duration_Season['Duration'] == Longest_Season_Duration]).Season\n\nShortest_Season_Duration = min(Duration_Season.Duration)\nShortest_Season = (Duration_Season.loc[Duration_Season['Duration'] == Shortest_Season_Duration]).Season\n\n#Find the longest and shortest duration seasons\nprint(\"Longest season {} is for {} minutes and shortest season {} is for {} minutes\".format(Longest_Season.values[0],Longest_Season_Duration,Shortest_Season.values[0],Shortest_Season_Duration))","05110416":"plt.figure(figsize=(10,5))\n_ = sns.barplot(x=\"Season\", y=\"Duration\", data=Duration_Season, palette=\"magma\")","00a7c8de":"Season_Rating = friends_df.groupby('Season').Stars.mean().reset_index()\nprint(Season_Rating)\n\nHighest_Rating = max(Season_Rating.Stars)\nHighest_Rated_Episode = (Season_Rating.loc[Season_Rating['Stars'] == Highest_Rating]).Season\n\n\n\nLowest_Rating = min(Season_Rating.Stars)\nLowest_Rated_Episode = (Season_Rating.loc[Season_Rating['Stars'] == Lowest_Rating]).Season\n\n#Find the highest and lowest star rated seasons\nprint(\"Season {} is highest rated at {} and Season {} is lowest rated at {} \".format(Highest_Rated_Episode.values[0],round(Highest_Rating,2),Lowest_Rated_Episode.values[0],round(Lowest_Rating,2)))","e37491a6":"#set the figure size\nplt.figure(figsize=(10,5))\n_ = sns.barplot(x=\"Stars\",y=\"Season\", data=Season_Rating, orient=\"h\", palette=\"twilight\")\n#Orient attribute is used for depicting the bars horizontally","ffce0dc9":"Season_Votes = friends_df.groupby(\"Season\").Votes.sum().reset_index()\nprint(Season_Votes)\n\nMax_Votes = max(Season_Votes.Votes)\nSeason_Max_Votes = (Season_Votes.loc[Season_Votes['Votes']== Max_Votes]).Season\n\nMin_Votes = min(Season_Votes.Votes)\nSeason_Min_Votes = (Season_Votes.loc[Season_Votes['Votes']== Min_Votes]).Season\n\nprint(\"Season {} has maximum votes {} and Season {} has minimum votes {}\".format(Season_Max_Votes.values[0],Max_Votes,Season_Min_Votes.values[0],Min_Votes))","dcd52d49":"plt.figure(figsize=(6,5))\nsns.set_style(\"ticks\")\nsns.lineplot(x=\"Season\", y=\"Votes\", data=Season_Votes, marker=\"o\")\n_ = plt.xticks(np.arange(1,11,1)) #This is to get the x-axis labels ranging from 1 to 10 with a stepcount of 1","87565924":"Director_count = friends_df.groupby(\"Director\").Episode_Title.count().sort_values(ascending=False)\nprint(Director_count)","01ce55f7":"Top_10_Directors = Director_count.head(10).reset_index()\nprint(Top_10_Directors)","7fd8524e":"plt.figure(figsize=(18,5))\nplt.title(\"Top 10 Directors\")\n\nax = sns.barplot(x=\"Director\",y=\"Episode_Title\", data=Top_10_Directors, palette=\"Purples\")\n_ = ax.set(xlabel=\"Directed By\", ylabel=\"No.of episodes\") #Use ax.set to set the xlabel and ylabel of the graph","0c2e4125":"Director_count = Director_count.reset_index()\n\nDirector_count.columns= [\"Director\",\"Episode Count\"]\nprint(Director_count)","7f83a930":"Director = Director_count[Director_count['Episode Count'] >= 10]\nprint(Director)","d4b7db1a":"Director_count[Director_count[\"Episode Count\"] ==1]","2d5b5918":"Top_10_Episodes = friends_df[[\"Episode_Title\",\"Stars\"]].sort_values(ascending=False, by=\"Stars\").head(10)\nprint(Top_10_Episodes)","47daf724":"friends_df.loc[233,'Episode_Title'] = \"The Last One I\"\nfriends_df.loc[234,\"Episode_Title\"] = \"The Last One II\"","26f089e7":"Top_10_Episodes.reset_index(inplace=True)\nprint(Top_10_Episodes)","875171a1":"plt.figure(figsize=(18,5))\nplt.title(\"Top 10 Episodes\")\n\nax = sns.barplot(x=\"Stars\",y=\"Episode_Title\", data=Top_10_Episodes)\n_ = ax.set(xlabel=\"Stars\", ylabel=\"Episode_Title\")","15d037a4":"Bottom_10_Episodes = friends_df[[\"Episode_Title\",\"Stars\"]].sort_values(by=\"Stars\").head(10)\nBottom_10_Episodes.reset_index(inplace=True)\nprint(Bottom_10_Episodes)","5612e284":"plt.figure(figsize=(18,5))\nax = sns.barplot(x=\"Stars\",y=\"Episode_Title\", data=Bottom_10_Episodes)\n_ = ax.set(xlabel=\"Stars\",ylabel=\"Episode Title\",title=\"Least Rated Episodes\")","e31078eb":"Director_Rating = friends_df.groupby(\"Director\").Stars.agg(['count','mean']).sort_values(by=\"mean\")\nprint(Director_Rating)","6cf19b53":"# Q9) Which are the top 10 rated episodes?\n\n","7527cf04":"# **Q2) Find how many episodes were in each season using both code and visualization**","aa2e1627":"# Q5) Which season has maximum and minimum average votes?","37afbfe0":"# **Q7) Display top 10 directors in a graph**","e739e2ef":"From this we can observe that Todd Holland has least average rating and Joe Regalbuto has the highest rating","251320fa":"# **Q6) Count how many unique directors are in the dataframe**","399aa54e":"# ****Q11) Which director has minimum rating based on Stars?","641387b9":"# **Q10) Which are the bottom 10 rated episodes?**","1ec64c44":"# **Q4) Which season has maximum and minimum average star rating?**","a64ad879":"From this we can observe, Season 3 and 6 has maximun episodes which is 25 and season 10 has 18 episodes only","98938019":"This info() helps in understanding that there are no null values in any of the given columns.\n\nThe datatype of Year_of_prod has to be changed to datetime and Season to be changed to Object.","dfe82653":"There are 235 rows each denoting an episode and 8 columns capturing features of these episodes","bec85031":"# **Q1) Which year did the show start and end?**","602761b5":"# Q3) Find the duration of each season","00750b16":"Here we observe there are two episodes with same name - \"The Last One\", with a different index number(233 and 234). We will rename 234 and 233 as below","47b392e0":"# Q8) Show directors who directed more than 10 episodes"}}