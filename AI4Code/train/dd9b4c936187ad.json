{"cell_type":{"fcca240c":"code","fd10bab5":"code","4196eb3a":"code","49dde1dd":"code","d37cade7":"code","25250dd6":"code","09c5480c":"code","7f9bb747":"code","74c687e4":"code","478dff22":"code","14547f5e":"code","8fa9d11b":"code","7ce9b1b6":"code","2e95e223":"code","d1ed4406":"code","1a62a895":"code","47993bac":"code","0b2e2847":"code","8967cd1e":"code","c43b10ea":"code","3f109bf7":"code","eac8ba9f":"code","bcb6997a":"markdown","d4cb7b4e":"markdown","aebbda54":"markdown","3f57b9b5":"markdown"},"source":{"fcca240c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fd10bab5":"iris_data=pd.read_csv('..\/input\/iris\/Iris.csv')","4196eb3a":"iris_data","49dde1dd":"iris=iris_data.drop([\"Id\"],axis=1)\niris","d37cade7":"iris.isnull().any()","25250dd6":"iris.index","09c5480c":"iris.columns","7f9bb747":"import matplotlib.pyplot as plp \nimport seaborn as sns","74c687e4":"sns.displot(iris[\"SepalLengthCm\"])","478dff22":"sns.boxplot(y=iris[\"SepalWidthCm\"])","14547f5e":"sns.pairplot(iris,kind=\"Scatter\")","8fa9d11b":"data=iris\ndata","7ce9b1b6":"x=data.drop([\"Species\"],axis=1)\nx.head(10)","2e95e223":"from sklearn.preprocessing import LabelEncoder\nlb=LabelEncoder()\nlb","d1ed4406":"y=data.drop([\"SepalLengthCm\",\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\"],axis=1)\ny","1a62a895":"y[\"Species\"]=lb.fit_transform(y[\"Species\"])\ny","47993bac":"from sklearn.model_selection import train_test_split\n\nx_train, x_test,y_train,y_test = train_test_split(x,y,test_size=0.33, random_state=8)","0b2e2847":" from sklearn.ensemble import RandomForestClassifier\nrrc=RandomForestClassifier(n_estimators=10,criterion='entropy')\nrrc.fit(x_train,y_train)","8967cd1e":"y_pred=rrc.predict(x_test)","c43b10ea":"from sklearn.metrics import accuracy_score,confusion_matrix\naccuracy_score= accuracy_score(y_test,y_pred,3)","3f109bf7":"accuracy_score.astype(float)","eac8ba9f":"cm_dtc = confusion_matrix(y_test,y_pred)\nsns.heatmap(cm_dtc, annot=True,fmt=\".0f\",linewidths=3,square=True, cmap='Blues',color=\"#cd1076\")\nplp.show()","bcb6997a":"> # ******Data Visulization","d4cb7b4e":"# Here we are creating a notebookwith 94 persentage of accuracy ******","aebbda54":"# #MODEL BULIDING \nWE USE RANDOMFOREST","3f57b9b5":"**we are going read the csv file using pandas**\n\n"}}