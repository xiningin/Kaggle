{"cell_type":{"2530b66b":"code","e627e0d3":"code","c3e59c42":"code","9d6a3ff8":"code","47cdc334":"code","8bd2a9e7":"code","f999d716":"code","75a9f247":"code","3b1c6825":"code","e361e114":"code","641ca4bd":"code","e74e4338":"code","ea487a5d":"code","18845759":"code","58f7e26e":"code","9347ede3":"code","73fe24a5":"markdown","4bc6d668":"markdown","32ff9cc6":"markdown","a9191dae":"markdown","80bc4a12":"markdown","17411cf9":"markdown","9f0ff707":"markdown","59192456":"markdown","d71a4e91":"markdown","7ba17ccc":"markdown","8b1e308d":"markdown","3b85af93":"markdown","c0abf824":"markdown","d25ecbb5":"markdown","c1c45dd1":"markdown","4551d5da":"markdown","6bf43a2d":"markdown"},"source":{"2530b66b":"!git clone https:\/\/github.com\/Tessellate-Imaging\/monk_v1.git","e627e0d3":"!cd monk_v1\/installation\/Misc && pip install -r requirements_kaggle.txt","c3e59c42":"! pip install pillow==5.4.1","9d6a3ff8":"# Monk\nimport os\nimport sys\nsys.path.append(\"monk_v1\/monk\/\");","47cdc334":"#Using keras-gluon backend \nfrom keras_prototype import prototype","8bd2a9e7":"gtf = prototype(verbose=1);\ngtf.Prototype(\"Covid19\", \"Using-keras-backend\");","f999d716":"gtf.List_Models()","75a9f247":"gtf.Default(dataset_path=\"\/kaggle\/input\/covid19-image-dataset\/Covid19-dataset\/train\", \n            model_name=\"densenet201\", \n            num_epochs=25);\n\n#Read the summary generated once you run this cell.","3b1c6825":"#Start Training\ngtf.Train();\n\n#Read the training summary generated once you run the cell and training is completed","e361e114":"gtf = prototype(verbose=1);\ngtf.Prototype(\"Covid19\", \"Using-keras-backend\", eval_infer=True);","641ca4bd":"gtf.Dataset_Params(dataset_path=\"\/kaggle\/input\/covid19-image-dataset\/Covid19-dataset\/test\");\ngtf.Dataset();","e74e4338":"accuracy, class_based_accuracy = gtf.Evaluate();","ea487a5d":"gtf = prototype(verbose=1);\ngtf.Prototype(\"Covid19\", \"Using-keras-backend\", eval_infer=True);","18845759":"img_name = \"\/kaggle\/input\/covid19-image-dataset\/Covid19-dataset\/test\/Covid\/0108.jpeg\";\npredictions = gtf.Infer(img_name=img_name);\n\n#Display \nfrom IPython.display import Image\nImage(filename=img_name)","58f7e26e":"img_name = \"\/kaggle\/input\/covid19-image-dataset\/Covid19-dataset\/test\/Normal\/0121.jpeg\";\npredictions = gtf.Infer(img_name=img_name);\n\n#Display \nfrom IPython.display import Image\nImage(filename=img_name)","9347ede3":"img_name = \"\/kaggle\/input\/covid19-image-dataset\/Covid19-dataset\/test\/Viral Pneumonia\/0115.jpeg\";\npredictions = gtf.Infer(img_name=img_name);\n\n#Display \nfrom IPython.display import Image\nImage(filename=img_name)","73fe24a5":"If using Colab install using the commands below\n\n!cd monk_v1\/installation\/Misc && pip install -r requirements_colab.txt\n\nIf using Kaggle uncomment the following command\n\n!cd monk_v1\/installation\/Misc && pip install -r requirements_kaggle.txt\n\nSelect the requirements file as per OS and CUDA version when using a local system or cloud\n\n!cd monk_v1\/installation\/Linux && pip install -r requirements_cu9.txt","4bc6d668":"Creating and managing experiments\n\n- Provide project name\n- Provide experiment name\n- For a specific data create a single project\n- Inside each project multiple experiments can be created\n- Every experiment can be have diferent hyper-parameters attached to it","32ff9cc6":"\nThis creates files and directories as per the following structure\nworkspace\n\n    |\n    |--------Covid19 (Project name can be different)\n                    |\n                    |\n                    |-----Using-keras-backend (Experiment name can be different)\n                                |\n                                |-----experiment-state.json\n                                |\n                                |-----output\n                                        |\n                                        |------logs (All training logs and graphs saved here)\n                                        |\n                                        |------models (all trained models saved here)","a9191dae":"# [MONK](https:\/\/github.com\/Tessellate-Imaging\/monk_v1)","80bc4a12":"# Training  image classifier","17411cf9":"Quick mode training\n\n- Using Default Function\n    - dataset_path\n    - model_name\n    - num_epochs","9f0ff707":"Load the experiment in validation mode\n\n- Set flag eval_infer as True","59192456":"Dataset folder structure\nparent_directory\n\n    |\n    |\n    |------Covid\n            |\n            |------img1.jpg\n            |------img2.jpg\n            |------.... (and so on)\n    |------Normal\n            |\n            |------img1.jpg\n            |------img2.jpg\n            |------.... (and so on) \n    |------Viral Pneumonia\n            |\n            |------img1.jpg\n            |------img2.jpg\n            |------.... (and so on) ","d71a4e91":"Select image and Run inference","7ba17ccc":"# Running inference on test images","8b1e308d":"Install Monk\n\ngit clone https:\/\/github.com\/Tessellate-Imaging\/monk_v1.git\n\ncd monk_v1\/installation\/Linux && pip install -r requirements_cu9.txt\n\n(Select the requirements file as per OS and CUDA version)","3b85af93":"Imports","c0abf824":"Load the validation dataset","d25ecbb5":"Run validation","c1c45dd1":"List of available models","4551d5da":"Load the experiment in inference mode\n\n- Set flag eval_infer as True","6bf43a2d":"# Validating the trained classifier"}}