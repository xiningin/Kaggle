{"cell_type":{"0eca465f":"code","c734f673":"code","6c471a18":"code","3add2b6c":"code","8063998a":"code","ab23946c":"code","890652a1":"code","10a93795":"code","d3e2608b":"markdown","29a3c3c9":"markdown","3c682d34":"markdown","958f42b0":"markdown","57d869a1":"markdown","c6af8719":"markdown"},"source":{"0eca465f":"import numpy as np\nimport itertools\nimport matplotlib.pyplot as plt\nimport pandas as pd \nimport warnings\n\nfrom sklearn.model_selection import train_test_split\nfrom statsmodels.tsa.arima.model import ARIMA\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c734f673":"datadir = '\/kaggle\/input\/web-traffic-time-series-forecasting\/'\n\ndf = (pd.read_csv(os.path.join(datadir, 'train_1.csv.zip'), index_col='Page')).T\n\ndf.index = pd.to_datetime(df.index)","6c471a18":"fig, ax = plt.subplots(figsize=(8, 6))\ndf.iloc[:, 6000:6010].rolling(7).mean().plot(ax=ax)","3add2b6c":"df.max().sort_values(ascending=False)[:20]","8063998a":"train, test = train_test_split(df, shuffle=False, test_size=.1)","ab23946c":"fit, validate = train_test_split(train.iloc[:, 5].reset_index(drop=True), test_size=.1, shuffle=False)\n\nbest_model = None\nbest_mse = np.inf\n\nwith warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n\n    for p, d, q in itertools.permutations(np.arange(5), 3):\n        arima = ARIMA(fit, order=(p, d, q)).fit()\n        preds = arima.forecast(len(validate))\n\n        mse = ((preds - validate)**2).sum()\n\n        if mse < best_mse:\n            best_mse = mse\n            best_model = arima\n            \nprint(best_mse)\nbest_model.summary()","890652a1":"train, test = train_test_split(df.to_numpy(), shuffle=False, test_size=.1)","10a93795":"def ","d3e2608b":"## Simple LSTM\n\nHow will this work? \n\nInputs features:\n* *pageviews*: sequence; standardised independently (might need missing value identification and imputation)\n* *median volume*: scalar; \n* *std*: scalar; \n* *country*: categorical;\n* *agent*: categorical;\n* *attention*: sequence(?); zoom back a year\/quarter and add in (already-standardised) values from then; single lagged points might be good enough.\n\nAll features then standardised.","29a3c3c9":"## EDA","3c682d34":"## Baseline Models\n\n### ARIMA\n\nTry and fit an ARIMA to the series and see what we get. \n\nHow baseline is this? It's really baseline... ","958f42b0":"# Website Traffic Timeseries Forecasting\n\nWhat is the prediction problem?\n* 140k web pages wiht 550 days of search history\n* set aside final 55 days as test\n\nThoughts?\n* The series is really spiky; spikes are probably driven by exogenous events - can we source data somewhere to capture these events?\n* Most series don't seem particularly seasonal, though some probably are. \n\nInitial Model Plans?\n* Quick ARIMA baseline\n* LSTM Multi-task Network\n* All models that don't incorporate events might be quite crap","57d869a1":"#### Summary: ARIMA was awful (best RMSE of ~60)\n\nThis is partly because forecasts with ARIMA models that have not many terms and no seasonal components is quite dependent on the final few values of the fit set - which here fell down really low towards the end. \n\nInstead of bothering with much more ARIMA let's just skip to the good stuff.","c6af8719":"## Data Preparation e.g. Train Test Split"}}