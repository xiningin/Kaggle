{"cell_type":{"641e9db2":"code","c87d80ed":"code","8be8e752":"code","319ed5b7":"code","e6fe9db9":"code","407224c2":"code","4ea24baa":"code","4f53341c":"code","1686686b":"code","defac770":"code","c47e714b":"code","bc5bb2d9":"code","ad1ff212":"code","a0fe8d36":"code","3e7774d9":"code","648690fb":"code","a5c08352":"code","9c1682c8":"code","07100f29":"code","84c2a3c1":"code","23902bfe":"code","d75979c0":"code","c8e3fcb7":"code","6b2893c4":"code","0a00a89a":"markdown","ef24a681":"markdown","5b274609":"markdown","7571a71a":"markdown","5d992436":"markdown","6778f952":"markdown","37c1ac66":"markdown","8b630fe7":"markdown","c0f1d900":"markdown","6aec2886":"markdown","483ee3cb":"markdown","2232a40f":"markdown","4af14f96":"markdown","1e28a82f":"markdown","dccde3e0":"markdown","8ed219e4":"markdown","0397b68d":"markdown","7ced3b4a":"markdown","0b89188a":"markdown","e79a08f8":"markdown","ac2a2746":"markdown","b6185d5d":"markdown","38d067d9":"markdown","015d434b":"markdown"},"source":{"641e9db2":"import pandas as pd\nimport numpy as np\nimport datetime as dt\nimport dask.dataframe as dd # We will use the dask.dataframe library to speed up our code","c87d80ed":"# We will cast datatypes for start_lat, start_lng, end_lat & end_lng to float32 in order to save\n# memory. This will also aid with speeding up our code.\ndtypes = {\n    'ride_id': 'object',\n    'rideable_type': 'object',\n    'started_at': 'object',\n    'ended_at': 'object',\n    'start_station_name': 'object',\n    'start_station_id': 'object',\n    'end_station_name': 'object',\n    'end_station_id': 'object',\n    'start_lat': 'float32',\n    'start_lng': 'float32',\n    'end_lat': 'float32',\n    'end_lng': 'float32',\n    'member_casual': 'object'\n}\n\n# First we will load the data sets using read_csv()\ndata_202101 = dd.read_csv('..\/input\/cyclistic-bike-share\/202101-divvy-tripdata.csv', dtype=dtypes).compute()\ndata_202102 = dd.read_csv('..\/input\/cyclistic-bike-share\/202102-divvy-tripdata.csv', dtype=dtypes).compute()\ndata_202103 = dd.read_csv('..\/input\/cyclistic-bike-share\/202103-divvy-tripdata.csv', dtype=dtypes).compute()","8be8e752":"# Using columns() we will make sure the column names of the datasets are consistent\ndata_202101.columns\ndata_202102.columns\ndata_202103.columns","319ed5b7":"#We combine the datasets vertically using concat()\ntotal_data_v1 = pd.concat([data_202101,data_202102,data_202103])\ntotal_data_v1.head(7)","e6fe9db9":"total_data_v1.info()","407224c2":"total_data_v1['started_at'] = dd.to_datetime(total_data_v1['started_at'])\ntotal_data_v1['ended_at'] = dd.to_datetime(total_data_v1['ended_at'])\ntotal_data_v1.info()\ntotal_data_v1.head()","4ea24baa":"# Let's check columns with null values and amount of null values per column.\nprint(total_data_v1.isnull().sum())\nprint(total_data_v1.count())","4f53341c":"# Creating new dataframe with dropped null\/na values\ntotal_data_v2 = total_data_v1.dropna()","1686686b":"# Cheking to see if null\/na values remain\nprint(total_data_v2.isnull().sum())\nprint(total_data_v2.count())","defac770":"# We will create a new column using the assign function and convert it to show time difference in minutes using the Timedelta function\ntotal_data_v3 = total_data_v2.assign(ride_length = (total_data_v2['ended_at'] - total_data_v2['started_at']) \/ dt.timedelta(minutes=1))\ntotal_data_v3.info()\ntotal_data_v3.head()","c47e714b":"len(total_data_v3[total_data_v3['ride_length'] < 0])","bc5bb2d9":"total_data_v4 = total_data_v3[total_data_v3['ride_length'] >= 0]\ntotal_data_v4.info()\ntotal_data_v4.head()","ad1ff212":"total_data_v5 = total_data_v4.assign(trip_month = total_data_v4['started_at'].dt.strftime(\"%B-%y\"), trip_week = total_data_v4['started_at'].dt.strftime(\"%U-%b\"), trip_day = total_data_v4['started_at'].dt.strftime(\"%A\"))\ntotal_data_v5.info()\ntotal_data_v5.head()","a0fe8d36":"summary_stats = total_data_v5.groupby(['member_casual']).agg([np.mean, np.std, np.median, np.min, np.max])['ride_length']\nsummary_stats = summary_stats.reset_index()\nsummary_stats","3e7774d9":"long_usage = total_data_v5[total_data_v5['ride_length'] > 1440]\nsummary_stats_long_usage = long_usage.groupby(['member_casual']).size()\nsummary_stats_long_usage = summary_stats_long_usage.to_frame(name = 'number of users >24h').reset_index()\nsummary_stats_long_usage","648690fb":"stations_list = total_data_v5[['start_station_name','start_lat','start_lng']]\nstations_list = stations_list.drop_duplicates(subset='start_station_name')\nstations_list","a5c08352":"# First we create the dataset for members\nmember = total_data_v5[total_data_v5['member_casual'] == 'member']\ntotal_start_stations_member = member.groupby(['start_station_name']).size()\ntotal_start_stations_member = total_start_stations_member.to_frame(name='number_of_starts').reset_index().sort_values(by='number_of_starts', ascending=False)\ntotal_start_stations_member = total_start_stations_member.head(15)\n\n# Then we merge member dataset with stations list in order to get lat and long info\ntotal_start_stations_member_top15 = pd.merge(left=total_start_stations_member, right=stations_list,\n                                             on='start_station_name', how='left')\ntotal_start_stations_member_top15.head()","9c1682c8":"casual = total_data_v5[total_data_v5['member_casual'] == 'casual']\ntotal_start_stations_casual = casual.groupby(['start_station_name']).size()\ntotal_start_stations_casual = total_start_stations_casual.to_frame(name='number_of_starts').reset_index().sort_values(by='number_of_starts', ascending=False)\ntotal_start_stations_casual = total_start_stations_casual.head(15)\n\ntotal_start_stations_casual_top15 = pd.merge(left=total_start_stations_casual, right=stations_list,\n                                             on='start_station_name', how='left')\ntotal_start_stations_casual_top15.head()","07100f29":"# First, we will order the dataset by Day. This is because by default Python arranges by alphabet\nday_list = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ntotal_data_v5['trip_day'] = pd.Categorical(total_data_v5['trip_day'], categories=day_list, ordered=True)\n\n# Then we will create a new dataset which will summarise our total trips and average trip length information\nweekly_usage = pd.pivot_table(total_data_v5, index=['member_casual', 'trip_day'],\n                              aggfunc={'member_casual':np.size, 'ride_length':np.mean}\n                              ).rename(columns={'member_casual':'total_trips','ride_length':'avg_trip_length'}).reset_index()\n#weekly_usage = weekly_usage.rename(columns={'member_casual':'total_trips','ride_length':'avg_trip_length'}).reset_index()\n#weekly_usage = weekly_usage.reset_index()\nweekly_usage","84c2a3c1":"import matplotlib.pyplot as plt1\nimport seaborn as sns1\ng = sns1.FacetGrid(weekly_usage, col='member_casual', hue='member_casual', palette=['orange', '#83e6ea'], height=5)\ng.set_xticklabels(rotation=45)\ng.map(sns1.barplot, 'trip_day', 'total_trips')\nplt1.show()","23902bfe":"import matplotlib.pyplot as plt2\nimport seaborn as sns2\ng2 = sns2.FacetGrid(weekly_usage, col='member_casual', hue='member_casual', palette=['orange', '#83e6ea'], height=5)\ng2.set_xticklabels(rotation=45)\ng2.map(sns2.barplot, 'trip_day', 'avg_trip_length')\nplt2.show()","d75979c0":"# First, we will order the dataset by Week Number. This is because by default Python arranges by alphabet\nweek_list = ['00-Jan', '01-Jan', '02-Jan', '03-Jan', '04-Jan', '05-Feb', '06-Feb', '07-Feb','08-Feb','09-Feb','10-Mar', '11-Mar', '12-Mar', '13-Mar']\ntotal_data_v5['trip_week'] = pd.Categorical(total_data_v5['trip_week'], categories=week_list, ordered=True)\n\n# Then we will create a new dataset which will summarise our total trips and average trip length information\nper_week_usage = pd.pivot_table(total_data_v5, index=['member_casual', 'trip_week'],\n                              aggfunc={'member_casual':np.size, 'ride_length':np.mean}\n                              )\nper_week_usage = per_week_usage.rename(columns={'member_casual':'total_trips','ride_length':'avg_trip_length'})\nper_week_usage = per_week_usage.reset_index()\nper_week_usage","c8e3fcb7":"import matplotlib.pyplot as plt3\nimport seaborn as sns3\ng3 = sns3.FacetGrid(per_week_usage, col='member_casual', hue='member_casual', palette=['orange', '#83e6ea'], height=5)\ng3.set_xticklabels(rotation=45)\ng3.map(sns3.barplot, 'trip_week', 'total_trips')\nplt3.show()","6b2893c4":"import matplotlib.pyplot as plt4\nimport seaborn as sns4\ng4 = sns4.FacetGrid(per_week_usage, col='member_casual', hue='member_casual', palette=['orange', '#83e6ea'], height=5)\ng4.set_xticklabels(rotation=45)\ng4.map(sns4.barplot, 'trip_week', 'avg_trip_length')\nplt4.show()","0a00a89a":"#### A Side Note on the Data - Does it ROCCC?\n\n**R**eliable - The data is extracted from Cyclistic's own trip data. It is therefore reliable.\n\n**O**riginal - The data is collected first hand from Cyclistic's usage stats. There is no third party involved with collecting and transferring data. It is therefore original.\n\n**C**urrent - The data ranges from January 2021 to March 2021. At the time of this analysis, the data is 6 months old so it is not current. Due to limitations of the download server, more recent data could not be extracted.\n\n**C**ited - For the purpose of this study, the data has been made available by Motivate International Inc. under this [license](https:\/\/www.divvybikes.com\/data-license-agreement).\n\n**C**omprehensive - The data includes a vast amount of trip data which we can use to make inferences. This includes trip start and end times and also locations. It also includes gps data, bike type and membership type. This data is comprehensive for our analysis.\n\n## Analysing the Data and Making Inferences\n\n#### Some Quick Statistics - Members vs. Casual\n\nLet's run some quick statistics to see the mean, standard deviation, median, min and max ride lengths to see how long our users use our bikes.","ef24a681":"This has resulted the dataset to be reduced from 374,952 observations to 332,196 observations, a reduction of 42,756 observations. We will continue with using the dataset because for the purpose of the analysis the observation sample size is still significant.\n\n## Preparing Data for Analysis\n\nTo prepare our data for analysis, we need to create additional variables\/columns with info that will aid in the analysis process.\n\nWe need to create a variable to show total length of each ride. Our dataset does not have this calculation by default. So we will need to create this by subtracting end time from start time. We will call this column ride_length\n\nOther variables we need to create is a date column, followed by month, week and day columns. These will allow us to analyse trips on daily and monthly time frames. Currently, our date column shows the full date with calender time. We will create separate columns for month and day.\n\n#### Adding Ride Length Column\n\nFor ride length, we will create a new dataframe and add a new column called ride_length to it using the assign function.","5b274609":"From these Tableau visualisations we can see that the most frequent start positions for **casual riders** tend to be inside downtown Chicago. On the other hand, **members** tend to start from just outside downtown in the *Near North Side* and *Magnificent Mile* areas with very few trips starting from inside downtown. **To attract membership, we can target downtown Chicago with marketing that highlights advantages of Cyclistic membership. We can also highlight how members can enjoy saving time and money from starting their trips in the downtown area.**\n\n#### Per-Day and Per-Week Usage - Members vs. Casuals\n\n##### **Per-Day** Comparison of Trip Frequency and Average Trip Length\n\nFor this analysis we will first create a new dataset to summarise our total trips and average trip length for each day of the week for each member type","7571a71a":"It looks like casual members took 109 trips which lasted over 24 hours, meaning they kept the bikes for more than 24 hours. This is 40% less than the amount of times members kept the bikes for over 24 hours, which is around 148 times. **Over here, we can adjust our fees for bike holding to be attractive for users keeping the bikes for over 24 hours.**\n\n#### Top 15 Frequent Start Stations - Members vs. Casuals\n\nFor this analysis, we will first create a dataset of station names with latitude and longitude information. This will allow us to see on a map where most frequent trips begin.","5d992436":"This reveals that there are 4 *negative* ride_length observations. To remove rows with *negative* ride_length, we will create a new dataframe where ride_length is >=:","6778f952":"Column names are confirmed to be consistent. We can now go ahead and combine the datasets vertically.","37c1ac66":"<div class='tableauPlaceholder' id='viz1637350300017' style='position: relative'><noscript><a href='#'><img alt='Top 15 Start Stations for Casual Riders ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Cy&#47;CyclisticCaseStudyinPython-Top15StationsforCasuals&#47;Casuals&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='CyclisticCaseStudyinPython-Top15StationsforCasuals&#47;Casuals' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Cy&#47;CyclisticCaseStudyinPython-Top15StationsforCasuals&#47;Casuals&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en-US' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1637350300017');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","8b630fe7":"\n\nFrom the plot we can observe that members are more consistent with their usage. Casual riders, on the other hand, have low usage on weekdays with usage increasing on the weekend. As expected, casual riders' trip usage is high on Saturday and Sunday, with peak achieved on Saturday.\n\n**The consistency of members' weekly usage demonstrates that they know what to use the bikes for. Perhaps we can use this hypothesis to come with strategies to entice casual riders to opt in for a membership.**\n\nNow, let's plot our findings on **average trip length**:","c0f1d900":"On average, casual members' ride length is 27 minutes with a standard deviation of 213 minutes. For members, average ride length is around 18 minutes with SD 118 minutes. So, overall casual users' ride length is 50% higher than members meaning they are more adventurous with their usage. It is expected that members' usage is pretty consistent.\n\nSecondly, an interesting point to note here is with regards to standard deviation and maximum ride lengths. SD for casuals is nearly 8 times higher than mean with a max ride length of 31,681 minutes. Similarly SD for members is nearly 6.5 times higher than mean with a max ride length of 30,129 minutes. This shows that ride lengths are quite spread apart among both casual riders and membership holders. Also, it appears some casual riders and members are using their bikes for over 24 hours at a stretch with max ride lengths of 30,129 minutes (or 21 days) and 31,681 minutes or (22 days) respectively!\n\nLet's see how many members are keeping the bikes for more than 24 hours:","6aec2886":"Similar to per-week trip frequency, we see that trip length distribution on a *per-week basis* is also similar between members and casual riders. An interesting observation here is that average ride length distribution has a sudden rise in week 7. This is true for both members and casual riders. **So, we can try and figure out reasons for extraordinary increases in our per week usage and target marketing campaigns to promote usage based on those reasons.**\n\n## Answering the Business Questions: Why and How to get Casual Riders to buy a Cyclistic Membership\n\nTo get casual riders to buy memberships, we can offer value benefits for membership usage. Value can come from **monetary benefits** and also the **convenience benefits** of using the Cyclistic product. We saw from our quick stats that casuals tend to hold bikes for over 24 hours, which 10 times more than members. We can offer a **better fee structure for long-term bike holding**. We can also offer better convenience for members to not worry about when to return bikes. We can run this promotion through **Google, Youtube and Facebook ads**.\n\nIn terms of start locations, we can target **downtown Chicago** with our value and convenience benefits. We saw from our Tableau plots that Downtown Chicago is popular for casual riders to start their trips. In our digital campaigns we can **highlight how members save time and money** by starting their trips from the downtown area, as opposed to casual riders. We can also run **location specific mobile ads** to target users who are in the downtown area.\n\nOn the weekly and monthly analysis we noticed that tourist influx tends to effect casual ridership. Here, we can partner with popular tourism websites such as **Booking.com** or **Trip Advisor** to offer discounts to Cyclistic members.\n\nSecondly, ridership tends to be high during the summer months. To get more users to enjoy our product, we can **run campaigns** just before summer swings in to full flow. An advantage of running ads before the peak usage period will allow us to create hype and also give users time to plan and spread the word about why they would be choosing Cyclistic for their summer activities.\n\nDue to the seasonal nature of bike use, we can also offer users with multiple membership plans. Since usage is at its peak from July to September, we can offer a **3-month membership plan**. We can also enhance this offering towards **6-month** and **12-month plans**.\n\n## P.S. Acknowledgement\n\nI thank the team who curated such an expansive dataset for the purpose of this study. It has been a wonderful learning experience working on this dataset. I hope that I've broken down the steps of my analysis effectively so budding analysts have been able to understand every step of the process.\n\nI also thank the Google Data Analytics team for curating important data analysis tools in the course. It has been a tremendous help in my data analysis journey.","483ee3cb":"##### Removing NA\/null values\n\nTo remove NA\/null values from our dataset we will run the following code and assign the resulting dataset as v2.","2232a40f":"Since there are 675 stations used, we will analyse the top 15 most used stations.\n\nWe will filter our total_data_v5 dataset for **members** and then arrange it in descending order. We will then create a new dataset of the top 10 most used start stations and merge with the stations list to get a final top 10 list with lat and long information.","4af14f96":"Next, we create a data visualization using **Tableau** to better understand how members and casuals are starting their trips.","1e28a82f":"---\n# Cyclistic: Understanding Rider Usage for Sustainable Long Term Growth\nBy Anis Ahmed\n\n---\n## Background: Understanding Cyclistic's Business Model\n\nSince its inception in 2016, Cyclistic's popularity and usefulness amongst users has led to incredulous growth. Cyclistic has grown to a fleet of 5,824 bicycles that are geotracked and locked into a network of 692 stations across Chicago. The bikes can be unlocked from one station and returned to any other station in the system anytime.\n\nGiven this business model Cyclistic\u2019s marketing strategy relies on building general awareness and appealing to broad consumer segments. One approach that helped make these things possible was the flexibility of its pricing plans: single-ride passes, full-day passes, and annual memberships. Customers who purchase single-ride or full-day passes are referred to as **casual riders**. Customers who purchase annual memberships are Cyclistic **members**. In terms of financial viability, the finance analysts at Cyclistic have concluded that **memberships** are more profitable than **casual riders** due to the nature of their uses.\n\n## Defining the Business Task\n\nGiven the two customer classes, **casual riders** and **members**, the marketing director has come up with a hypothesis: converting **casual riders** into **members** would lead to better growth prospects for Cyclistic. This study will aim to back this hypothesis up by answering the following questions:\n\n  1. How do annual members and casual riders use Cyclistic bikes differently?\n  2. Why would casual riders buy Cyclistic annual memberships?\n  3. How can Cyclistic use digital media to influence casual riders to become members?\n\n#### The Stakeholders\n\nThe stakeholders for the purpose of this study are:\n\n  1. **Lily Moreno**: The director of marketing. Responsible for the development of campaigns and initiatives   to promote the bike-share program. These may include email, social media, and other channels.\n  2. **Cyclistic marketing analytics team**: A team of data analysts who are responsible for collecting, analyzing, and reporting data that helps guide Cyclistic marketing strategy.\n  3. **Cyclistic executive team**: Responsible for undertaking executive decisions.\n  \n## The Data\n\nThe data for this study is Cyclistic's own historical trip data. We will use trip data from **Q1 2021**. One point to note is that data-privacy issues prohibit us from using riders\u2019 personally identifiable information. This means that we won\u2019t be able to connect pass purchases to credit card numbers to determine if casual riders live in the Cyclistic service area or if they have purchased multiple single passes.\n\nThe data has been made available by Motivate International Inc. under this [license](https:\/\/www.divvybikes.com\/data-license-agreement).\n\n#### Installing the Relevant Packages","dccde3e0":"Now, we plot our findings on trip frequency:","8ed219e4":"#### Adding Month, Week and Day Columns\n\nNow we will create a new dataframe to include month, week and day columns. These columns will help us analyse trip data per month, week and daily basis.\n\nWe already have our date in datetime format. To extract month, week and day as an object (or string), meaning get month, week and day in names instead of numbers, we will run the below code.","0397b68d":"#### Cleaning the Dataset\n\n##### Fixing Column Types\n\nLet's run the info() function to check column datatypes.","7ced3b4a":"This has revealed something quite contrary to our per-day trip usage analysis. The distribution of per-week trip usage amongst casual riders and members is very similar! Usage is consistent from weeks 1 through 4, then declines from weeks 5 through 9 and then greatly increases from week 10. This suggests that our bike usage is seasonal.\n\nTo compare bike usage against Chicago's weather pattern, we browse through the weather data provided on [this Weather Spark page](https:\/\/weatherspark.com\/y\/14091\/Average-Weather-in-Chicago-Illinois-United-States-Year-Round). From this information, let's comment on the below seasonal variables:\n\n  1. Rain - Rain in Chicago historically has been pretty consistent throughout the year. This means, on average, it rains evenly all year round. So we can rule out rain causing dips in our usage.\n  \n  2. Temperature - The temperature graphs show that Chicago can get very cold during the winter months. The warmest months are June to September. From this we can infer that riders prefer to ride during the warmer months as opposed to colder months.\n  \n  3. Tourism - Tourist numbers are at their peak also from June to September. This also aids to our earlier hypothesis as to why ride usage peaks from July to September. More over, increased tourism from June to September also explains why casual ridership is inconsistent with membership in weekly usage which we analysed earlier.\n\nNow let's plot our **average trip length**:","0b89188a":"We will repeat the same process for **casuals**.","e79a08f8":"<div class='tableauPlaceholder' id='viz1637350262676' style='position: relative'><noscript><a href='#'><img alt='Top 15 Start Stations for Full Members ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Cy&#47;CyclisticCaseStudyinPython-Top15StationsforMembers&#47;Members&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='CyclisticCaseStudyinPython-Top15StationsforMembers&#47;Members' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Cy&#47;CyclisticCaseStudyinPython-Top15StationsforMembers&#47;Members&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en-US' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1637350262676');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","ac2a2746":"Let's plot our findings on **Per-Week trip frequency**:","b6185d5d":"This plot reveals that casual riders tend to hold on to bikes for nearly 50% as long as members. **Casuals** tend to hold on to bikes for 20-30 minutes. **Members** consistently use their bikes for 20 minutes on average. This stays true with our earlier hypothesis that members *know what they need the bikes for.*\n\n##### **Per-Week** Comparison of Trip Frequency and Average Trip Length\n\nSimilar to the weekly analysis, we will first create a new dataset to summarise metrics on monthly basis.\n","38d067d9":"#### Loading the Datasets and Binding Them Vertically","015d434b":"Looks like the started_at an ended_at columns are type *object*. We will convert them to the proper *date* column type. We will convert dates to the calender time format using the to_datetime() function in pandas."}}