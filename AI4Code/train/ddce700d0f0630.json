{"cell_type":{"9ec6921c":"code","41552088":"code","1e7a6f58":"code","1a4b4100":"code","c8930382":"code","ad59c47b":"code","95eac81c":"code","1a26a4c4":"code","794fb117":"code","e6ca0b25":"code","f2d32643":"code","033fb51d":"code","6f7fb655":"code","4085ba27":"code","c7aecc6d":"code","2002f0dc":"code","12c8fa2d":"code","d935a694":"markdown","24cb9f57":"markdown","52b09fbf":"markdown","091c8c16":"markdown","a79072d2":"markdown","31854014":"markdown"},"source":{"9ec6921c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt","41552088":"test_competition = pd.read_json('..\/input\/stanford-covid-vaccine\/test.json', lines=True)\ntest_competition.head()","1e7a6f58":"train_competition = pd.read_json('..\/input\/stanford-covid-vaccine\/train.json', lines=True)\ntrain_competition.head()","1a4b4100":"reactivity = []\nfor n in train_competition['reactivity']:\n    reactivity+=n\nreactivity = pd.Series(reactivity)\n\nreactivity.plot(kind='hist',bins=500)\nplt.xlim(-0.2,5)\nplt.show()","c8930382":"reactivity.to_frame().describe()","ad59c47b":"import pandas as pd\nsecond_place = pd.read_csv('..\/input\/covid-result-of-233-sequences\/2nd-place-233-seq.csv')\nsecond_place.set_index('id_seqpos',inplace=True)\nsecond_place.columns = ['P2_'+n for n in second_place.columns]\nsecond_place.sort_values(by='P2_reactivity').tail(5)","95eac81c":"first_place = pd.read_csv('..\/input\/ov-inference-233-new-seq\/submission.csv')\nfirst_place.set_index('id_seqpos',inplace=True)\nfirst_place.columns = ['P1_'+n for n in first_place.columns]\nfirst_place.sort_values(by='P1_reactivity').tail(5)","1a26a4c4":"third_place = pd.read_csv('..\/input\/inference-new-233-sequences\/submission.csv')\nthird_place.set_index('id_seqpos',inplace=True)\nthird_place.columns = ['P3_'+n for n in third_place.columns]\nthird_place.sort_values(by='P3_reactivity').tail(5)","794fb117":"merge = pd.concat([ first_place['P1_reactivity'],\n                   second_place['P2_reactivity'],\n                   third_place['P3_reactivity']],axis=1)\n\nmerge.plot(kind='hist',histtype='step',bins=50,figsize=(12,4),density=1)\n\nreactivity[(reactivity>-0.1)&(reactivity<5)].plot(\n    kind='hist',histtype='step',bins=50,density=1,label='Competition train')\nplt.xlim(-0.2,2)\nplt.legend()\nplt.show()","e6ca0b25":"import seaborn as sns\nsns.pairplot(merge, markers='.',diag_kws={'bins':50},height=3)\nplt.show()","f2d32643":"sns.heatmap(merge.corr(),annot=True)\nplt.yticks(rotation=360)\nplt.show()","033fb51d":"merge['base']=[int(n.split('_')[-1]) for n in merge.index.values]\n#only positions less than 68 where trained\nsns.pairplot(merge[merge['base']<68].iloc[:,:-1], markers='.', diag_kws={'bins':50},height=3)\nplt.show()","6f7fb655":"sns.heatmap(merge[merge['base']<68].iloc[:,:-1].corr(),annot=True)\nplt.yticks(rotation=360)\nplt.show()","4085ba27":"sns.pairplot(merge[merge['base']>68].sample(\n    n=merge[merge['base']<68].shape[0]).iloc[:,:-1], markers='.',diag_kws={'bins':50})\nplt.show()","c7aecc6d":"sns.heatmap(merge[merge['base']>68].sample(\n    n=merge[merge['base']<68].shape[0]).iloc[:,:-1].corr(),annot=True)\nplt.yticks(rotation=360)\nplt.show()","2002f0dc":"merge['P1_filter']=['High' if n > 1.2 else 'Low' for n in merge['P1_reactivity']]","12c8fa2d":"temp = merge[merge['base']>68]\nsns.pairplot(temp[['P1_reactivity','P2_reactivity','P3_reactivity','P1_filter']],\n             markers='.',hue='P1_filter')\nplt.show()","d935a694":"# Comparison between RNA-covid stability predictions","24cb9f57":"## Compare 1st, 2nd and 3rd place models on the new (233 sequences) dataset","52b09fbf":"### distribution of scores","091c8c16":"### sampling a smaller number of positions after 68","a79072d2":"### Let's remaind some stats for the training set","31854014":"## let's look at the first 68 bases \nthey are the positions trained in the origina dataset"}}