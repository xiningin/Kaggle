{"cell_type":{"d3a71ae1":"code","27a6df20":"code","9a6972fb":"code","162e12f8":"code","dc6c3a8c":"code","8524b8b6":"code","eab76552":"code","0b03c971":"code","16c15985":"code","ba7c5ee9":"code","237d0788":"code","a874174d":"code","db05d956":"markdown"},"source":{"d3a71ae1":"def check_prime(number):\n    for divisor in range(2, int(number ** 0.5) + 1):\n        if number % divisor == 0:\n            return False\n    return True\n\nclass Primes:\n    def __init__(self, max):\n        # the maximum number of primes we want generated\n        self.max = max\n        # start with this number to check if it is a prime.\n        self.number = 1\n        # No of primes generated yet. We want to StopIteration when it reaches max\n        self.primes_generated = 0\n    def __iter__(self):\n        return self\n    def __next__(self):\n        self.number += 1\n        if self.primes_generated >= self.max:\n            raise StopIteration\n        elif check_prime(self.number):\n            self.primes_generated+=1\n            return self.number\n        else:\n            return self.__next__()","27a6df20":"prime_generator =Primes(10)","9a6972fb":"for x in prime_generator:\n    print(x)","162e12f8":"def Primes(max):\n    number = 1\n    generated = 0\n    while generated < max:\n        number += 1\n        if check_prime(number):\n            generated+=1\n            yield number","dc6c3a8c":"prime_generator = Primes(10)\nfor x in prime_generator:\n    print(x)","8524b8b6":"primes = (i for i in range(1,10) if check_prime(i))","eab76552":"\nfor x in primes:\n    print(x)","0b03c971":"def triplet(n): # Find all the Pythagorean triplets between 1 and n\n    for a in range(n):\n        for b in range(a):\n            for c in range(b):\n                if a*a == b*b + c*c:\n                    yield(a, b, c)","16c15985":"triplet_generator = triplet(100)","ba7c5ee9":"for x in triplet_generator:\n    print(x)","237d0788":"triplet_generator = ((a,b,c) for a in range(100) for b in range(a) for c in range(b) if a*a == b*b + c*c)","a874174d":"for x in triplet_generator:\n    print(x)","db05d956":"## Pythagorean Triplets"}}