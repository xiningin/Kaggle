{"cell_type":{"ceab1ffa":"code","1df13b28":"code","de6dd1e0":"code","8e4d05a4":"code","28dd70fb":"code","f68ee9ec":"code","ee8289f5":"code","204c4196":"code","b3c3fca3":"code","6d94e355":"code","943b2d50":"code","bc9a5b19":"code","8e8c3cf9":"code","e2103a47":"code","f6c7aadf":"code","123c06fc":"code","cb756578":"code","e7a0b5e8":"code","f29e3e8c":"code","6d1c7115":"code","c77c87a3":"code","b6f1f9be":"code","630587f5":"code","704bcca2":"code","251b69af":"code","f8b48443":"code","7bc09dde":"code","dfe8d471":"code","95f5cc6c":"code","5ebc1c81":"code","49da8aff":"code","e4ab80b5":"code","daf2b14b":"code","d9b3698b":"code","3cd27128":"code","0fcc2012":"code","ea9757d9":"code","3b6d204e":"code","cee3d386":"code","9111382a":"code","2520eea1":"code","0a6f9f6a":"code","176e6fff":"code","d1949367":"code","ccaf74ca":"code","5c8d0f55":"code","e3ac08cd":"code","06c1a7a9":"code","375d8e84":"code","d302be44":"code","1d7d7540":"code","100bbfde":"code","9c2fa08c":"code","0b4392de":"code","1a1b4205":"code","a7d8337e":"code","e311dc91":"code","a40566f7":"code","1b4ff58e":"code","b11fca80":"code","fd598bff":"code","bea3dd2a":"code","25028027":"code","dc6b5234":"code","4ca22a2f":"code","62e4dd73":"code","7643d377":"code","c16ae05b":"code","e24e5c6f":"code","cb29e73e":"code","54dcd1c8":"code","47b4b1ab":"code","473a8ed1":"code","ef7ca88e":"code","e24e5883":"code","bef40402":"code","cf2fd7de":"code","9b4058ed":"code","f3490e72":"code","0071f9fa":"code","d82ee96f":"code","e6bba92d":"code","9a2c9ff3":"code","bb22e232":"code","b304dcab":"code","3be6a12b":"code","e497a711":"code","3fc4dea7":"code","8893c6ae":"code","ef1a16d7":"code","67c9bec2":"code","5b25f5f3":"code","edf23af3":"code","28ca8242":"code","cd5ac11b":"code","ed4fa799":"code","9b26307e":"code","bdb7fc81":"code","5ffb37d6":"code","923818cf":"code","2357ffd4":"code","ee50e0c0":"code","42d78536":"code","4c0a6b04":"code","26a43d84":"code","e6c12539":"code","8dfe4cfd":"code","8cb2b580":"code","9dcdfd69":"code","5dedab29":"code","6096ebc8":"code","00bf4677":"code","3d43aee8":"code","f6327fd4":"code","1af19935":"code","950332de":"code","72ac5ebe":"code","2c055d7f":"code","c9ac0c50":"code","ee0c0bc9":"code","0ce48ccd":"code","50bf9697":"code","406af046":"code","3a6395d4":"markdown","26b9552b":"markdown","bf8f5f87":"markdown","14fb4986":"markdown","f0bb4043":"markdown","b333a7a7":"markdown","2a8aa9fc":"markdown","93307678":"markdown","360cbb21":"markdown","7a6abbd2":"markdown","af9242b7":"markdown","3d6f7a97":"markdown","cf510bfe":"markdown","7bc34294":"markdown","a3821012":"markdown","0d128c23":"markdown","9b3d6962":"markdown","d893f771":"markdown","0d0b8a0b":"markdown","8e4342b4":"markdown","44697f11":"markdown","4939ce3c":"markdown","528f98a2":"markdown","919f7614":"markdown","e2bd687e":"markdown","11466728":"markdown","8e8ce536":"markdown","3000a51e":"markdown","9eeae9dd":"markdown","ccf38bcd":"markdown","7968ff98":"markdown","cabc39a9":"markdown","7f412672":"markdown","9477eacd":"markdown","a76724c1":"markdown","84e9348e":"markdown","5e0e1a7a":"markdown","3a9ffa70":"markdown","9197f08d":"markdown","23806434":"markdown","7939bf6c":"markdown","5ba3d950":"markdown","bddf6aed":"markdown","8d754d88":"markdown","c17c003d":"markdown","04189686":"markdown","684a1655":"markdown","82d453bc":"markdown","9c67b90f":"markdown","06f78c77":"markdown","25248e56":"markdown","e7193a8a":"markdown","191c20ef":"markdown","58846b08":"markdown","2f983596":"markdown","66b4755a":"markdown","3128af7d":"markdown","46c2ce89":"markdown","15b28286":"markdown","f42939b4":"markdown","0b1ec365":"markdown","300e1516":"markdown","904a7ccb":"markdown","c20dad74":"markdown","38d22274":"markdown","41f27e9f":"markdown","9efb2cb1":"markdown","09c2f3cf":"markdown","0728723a":"markdown","d95eaf61":"markdown","87fb7cce":"markdown","b4bfaef5":"markdown","8dc2a5d9":"markdown","f6990f2a":"markdown","ce7c341c":"markdown","cc8944f8":"markdown","a77ad9dc":"markdown","25b50e1d":"markdown","4329e809":"markdown","41e24fa8":"markdown","d5112abc":"markdown","fdbd7aac":"markdown","80591fb2":"markdown","470b11f1":"markdown","f5aab5cd":"markdown","306d173a":"markdown","ea424b76":"markdown","547b4cc1":"markdown","994eaddf":"markdown","bfbbdc0e":"markdown","e2cd07d6":"markdown","7edf7055":"markdown","a27f9f27":"markdown","0f099e5c":"markdown","1af73f88":"markdown","71a1f0ed":"markdown","97c2509a":"markdown","296936f5":"markdown"},"source":{"ceab1ffa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1df13b28":"#Importing the libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\npd.set_option('display.max_columns', None) # To display all columns\npd.set_option('display.max_rows', 150) # To display all rows\nimport warnings\nwarnings.filterwarnings('ignore') # To ignore the warnings","de6dd1e0":"#Reading the application_data csv file\nclient_info = pd.read_csv(\"\/kaggle\/input\/credit-eda-case-study\/application_data.csv\")\nclient_info.head()","8e4d05a4":"client_info.shape","28dd70fb":"client_info.info(verbose=True, null_counts=True)","f68ee9ec":"client_info.describe()","ee8289f5":"client_info.dtypes","204c4196":"client_previous_data = pd.read_csv(\"\/kaggle\/input\/credit-eda-case-study\/previous_application.csv\")\nclient_previous_data.head()","b3c3fca3":"client_previous_data.shape","6d94e355":"client_previous_data.info(verbose=True, null_counts=True)","943b2d50":"client_previous_data.dtypes","bc9a5b19":"#Checking percentage of null values in each column\nclient_info.isnull().sum()\/len(client_info)*100","8e8c3cf9":"# Dropping the columns with >40% null values\nclient_info = client_info.loc[:,client_info.isnull().sum()\/len(client_info)*100 < 40]\nclient_info.shape","e2103a47":"#Checking to confirm that the columns with >40% null values are dropped\nclient_info.isnull().sum()\/len(client_info)*100","f6c7aadf":"#List of columns with less than 13% null values\nlist(client_info.columns[(client_info.isnull().sum()\/len(client_info)*100 < 13) & (client_info.isnull().sum()\/len(client_info)*100 > 0)])","123c06fc":"client_info['AMT_ANNUITY'].value_counts()","cb756578":"# AMT_ANNUITY is a contineous column so, checking for the outliers using boxplot.\nplt.style.use('ggplot')\nplt.figure(figsize=(10,5))\nsns.boxplot(client_info['AMT_ANNUITY'])\nplt.show()","e7a0b5e8":"client_info['AMT_ANNUITY'].median()","f29e3e8c":"client_info['AMT_GOODS_PRICE'].value_counts()","6d1c7115":"# AMT_GOODS_PRICE is a contineous column so, checking for the outliers using boxplot.\nplt.style.use('ggplot')\nplt.figure(figsize=(10,5))\nsns.boxplot(client_info['AMT_GOODS_PRICE'])\nplt.show()","c77c87a3":"client_info['AMT_GOODS_PRICE'].median()","b6f1f9be":"client_info['NAME_TYPE_SUITE'].value_counts()","630587f5":"# NAME_TYPE_SUITE column is a categorical column so, we can impute the missing values using the mode value\nclient_info['NAME_TYPE_SUITE'].mode()","704bcca2":"client_info['CNT_FAM_MEMBERS'].value_counts()","251b69af":"# CNT_FAM_MEMBERS is a contineous column so, we can impute the missing values using mean\/median. Checking for the outliers using the boxplot.\nplt.style.use('ggplot')\nplt.figure(figsize=(10,5))\nsns.boxplot(client_info['CNT_FAM_MEMBERS'])\nplt.show()","f8b48443":"client_info['CNT_FAM_MEMBERS'].median()","7bc09dde":"client_info['EXT_SOURCE_2'].value_counts()","dfe8d471":"# EXT_SOURCE_2 is a contineous column so, checking for the outliers using the boxplot.\nplt.style.use('ggplot')\nplt.figure(figsize=(10,5))\nsns.boxplot(client_info['EXT_SOURCE_2'])\nplt.show()","95f5cc6c":"round(client_info['EXT_SOURCE_2'].mean(),2)","5ebc1c81":"# Finding all the columns starting with DAYS.\ndays_cols = [col for col in client_info if col.startswith('DAYS')]\ndays_cols","49da8aff":"# Checking the values in above columns if they contain any negative values. Using print to get the results.\nprint(client_info['DAYS_BIRTH'].unique())\nprint(client_info['DAYS_EMPLOYED'].unique())\nprint(client_info['DAYS_REGISTRATION'].unique())\nprint(client_info['DAYS_ID_PUBLISH'].unique())\nprint(client_info['DAYS_LAST_PHONE_CHANGE'].unique())","e4ab80b5":"# Changing the negative values to absolute using the abs() function\nclient_info[days_cols]= abs(client_info[days_cols])","daf2b14b":"# Checking if the negative values are converted to their absolute values.\nprint(client_info['DAYS_BIRTH'].unique())\nprint(client_info['DAYS_EMPLOYED'].unique())\nprint(client_info['DAYS_REGISTRATION'].unique())\nprint(client_info['DAYS_ID_PUBLISH'].unique())\nprint(client_info['DAYS_LAST_PHONE_CHANGE'].unique())","d9b3698b":"client_info['CODE_GENDER'].value_counts()","3cd27128":"# Dropping the CODE_GENDER = XNA values\nclient_info = client_info[client_info['CODE_GENDER']!='XNA']","0fcc2012":"# Checking the CODE_GENDER column\nclient_info['CODE_GENDER'].value_counts()","ea9757d9":"client_info.ORGANIZATION_TYPE.value_counts()","3b6d204e":"# Replacing the XNA values with NaN\nclient_info = client_info.replace('XNA',np.NaN)","cee3d386":"# Checking the ORGANISATION_TYPE column to confirm XNA values are replaced with NaN\nclient_info.ORGANIZATION_TYPE.value_counts()","9111382a":"# Binning on AMT_INCOME_TOTAL column\nclient_info['AMT_INCOME_TOTAL'].quantile([0,0.2,0.4,0.6,0.8,1])","2520eea1":"#Creating A new categorical column related to AMT_INCOME_TOTAL\nclient_info['AMT_INCOME_BIN']=pd.qcut(client_info['AMT_INCOME_TOTAL'],\n                                       q=[0,0.2,0.4,0.6,0.8,1],\n                                       labels=['VeryLow','Low','Medium','High','VeryHigh'])","0a6f9f6a":"# Checking if bins are created successfully\nclient_info[['AMT_INCOME_TOTAL', 'AMT_INCOME_BIN']].head()","176e6fff":"#Binning on DAYS_BIRTH column\nabs(client_info['DAYS_BIRTH']).quantile([0,0.2,0.4,0.6,0.8,1])","d1949367":"#Creating a new column AGE related to DAYS_BIRTH\nclient_info['AGE']=abs(client_info['DAYS_BIRTH'])\/\/365","ccaf74ca":"client_info['AGE'].describe()","5c8d0f55":"client_info['AGE_GROUP'] = pd.cut(client_info['AGE'], \n                                  bins=[20,30,45,60,70],\n                                  labels=['Youth','Young','Middle_aged','Senoir_Citizen'])","e3ac08cd":"client_info['AGE_GROUP'].head()","06c1a7a9":"plt.figure(figsize=[10,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nclient_info['OCCUPATION_TYPE'].value_counts().plot.bar()\nplt.title('Occupation types of applicants \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Occupation Type', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\nplt.show()","375d8e84":"# Plot for ORGANIZATION_TYPE\nplt.figure(figsize=[13,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nclient_info['ORGANIZATION_TYPE'].value_counts().plot.bar() # Plotting countplot using seaborn\nplt.title('Organization types with loan application \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Organization Type', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\nplt.xticks(rotation = 90) # Rotating the xticks for better readability\nplt.show()","d302be44":"# TARGET\nval = client_info['TARGET'].value_counts(normalize=True)*100\nval","1d7d7540":"plt.figure(figsize=[8,6]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nplt.pie(val, labels=['Non-Defaulters (0)', 'Defaulters (1)'],explode=(0,0.05), autopct='%.2f')\nplt.title('Defaults VS Non-Defaulters \\n', fontsize=20) # Setting the title for the plot\nplt.show()","100bbfde":"# CODE_GENDER\nval1 = client_info['CODE_GENDER'].value_counts(normalize=True)*100\nval1","9c2fa08c":"plt.figure(figsize=[8,6]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nplt.pie(val1, labels=['Female', 'Male'],explode=(0,0.05), autopct='%.2f')\nplt.title('Gender Imbalance \\n', fontsize=20) # Setting the title for the plot\nplt.show()","0b4392de":"# FLAG_OWN_REALTY\nval2 = client_info['FLAG_OWN_REALTY'].value_counts(normalize=True)*100\nval2","1a1b4205":"plt.figure(figsize=[8,6]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nplt.pie(val2, labels=['Yes', 'No'],explode=(0,0.05), autopct='%.2f')\nplt.title('Imbalance in House \/ Flat Ownership \\n', fontsize=20) # Setting the title for the plot\nplt.show()","a7d8337e":"# FLAG_OWN_CAR\nval3 = client_info['FLAG_OWN_CAR'].value_counts(normalize=True)*100\nval3","e311dc91":"plt.figure(figsize=[8,6]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nplt.pie(val3, labels=['No', 'Yes'],explode=(0,0.05), autopct='%.2f')\nplt.title('Imbalance in Car Ownership \\n', fontsize=20) # Setting the title for the plot\nplt.show()","a40566f7":"non_defaulters = client_info[client_info['TARGET'] == 0] #Dataframe with only Non-Defaulters data\ndefaulters = client_info[client_info['TARGET'] == 1] #Dataframe with only Defaulters data","1b4ff58e":"#Checking non_defaulters dataframe\nnon_defaulters.head()","b11fca80":"#Checking defaulters dataframe\ndefaulters.head()","fd598bff":"pop1 = non_defaulters['CODE_GENDER'].value_counts(normalize=True)*100\npop1","bea3dd2a":"pop2 = defaulters['CODE_GENDER'].value_counts(normalize=True)*100\npop2","25028027":"# CODE_GENDER: Male VS Female\nfig, ax =plt.subplots(1,2,figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\n# Plotting barplot\npop1.plot.bar(ax=ax[0])\npop2.plot.bar(ax=ax[1])\nax[0].set_title('Non-Defaulters: Male VS Female \\n', fontsize=20) # Setting the title for the plot.\nax[0].set_xticklabels(['Female','Male'], rotation = 0) # Changing and rotating xticks for better readability.\nax[0].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nax[1].set_title('Defaulters: Male VS Female \\n', fontsize=20) # Setting the title for the plot.\nax[1].set_xticklabels(['Female','Male'], rotation = 0) # Changing and rotating xticks for better readability.\nax[1].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nplt.show()","dc6b5234":"edu1 = non_defaulters['NAME_EDUCATION_TYPE'].value_counts(normalize=True)*100\nedu1","4ca22a2f":"edu2 = defaulters['NAME_EDUCATION_TYPE'].value_counts(normalize=True)*100\nedu2","62e4dd73":"# NAME_EDUCATION_TYPE\nfig, ax =plt.subplots(1,2,figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\n# Plotting barplot\nedu1.plot.bar(ax=ax[0])\nedu2.plot.bar(ax=ax[1])\nax[0].set_title('Non-Defaulters: Education Type \\n', fontsize=20) # Setting the title for the plot.\nax[0].set_xticklabels(['Secondary\/secondary special','Higher education','Incomplete higher','Lower secondary','Academic degree'], rotation = 45) # Changing and rotating xticks for better readability.\nax[0].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nax[1].set_title('Defaulters: Education Type \\n', fontsize=20) # Setting the title for the plot.\nax[1].set_xticklabels(['Secondary\/secondary special','Higher education','Incomplete higher','Lower secondary','Academic degree'], rotation = 45) # Changing and rotating xticks for better readability.\nax[1].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nplt.show()","7643d377":"fam1 = non_defaulters['NAME_FAMILY_STATUS'].value_counts(normalize=True)*100\nfam1","c16ae05b":"fam2 = defaulters['NAME_FAMILY_STATUS'].value_counts(normalize=True)*100\nfam2","e24e5c6f":"# NAME_FAMILY_STATUS\nfig, ax =plt.subplots(1,2,figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\n# Plotting barplot\nfam1.plot.bar(ax=ax[0])\nfam2.plot.bar(ax=ax[1])\nax[0].set_title('Non-Defaulters: Family Status \\n', fontsize=20) # Setting the title for the plot.\nax[0].set_xticklabels(['Married ','Single \/ not married','Civil marriage','Separated','Widow','Unknown'], rotation = 45) # Changing and rotating xticks for better readability.\nax[0].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nax[1].set_title('Defaulters: Family Status \\n', fontsize=20) # Setting the title for the plot.\nax[1].set_xticklabels(['Married ','Single \/ not married','Civil marriage','Separated','Widow'], rotation = 45) # Changing and rotating xticks for better readability.\nax[1].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nplt.show()","cb29e73e":"income1 = non_defaulters['AMT_INCOME_BIN'].value_counts(normalize=True)*100\nincome1","54dcd1c8":"income2 = defaulters['AMT_INCOME_BIN'].value_counts(normalize=True)*100\nincome2","47b4b1ab":"# INCOME_RANGE distribution\nfig, ax =plt.subplots(1,2,figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\n# Plotting barplot\nincome1.plot.bar(ax=ax[0])\nincome2.plot.bar(ax=ax[1])\nax[0].set_title('Non-Defaulters: Income Range \\n', fontsize=20) # Setting the title for the plot.\nax[0].set_xticklabels(['Low ','High','VeryLow','VeryHigh','Medium'], rotation = 45) # Changing and rotating xticks for better readability.\nax[0].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nax[1].set_title('Defaulters: Income Range \\n', fontsize=20) # Setting the title for the plot.\nax[1].set_xticklabels(['Low ','High','VeryLow','Medium','VeryHigh'], rotation = 45) # Changing and rotating xticks for better readability.\nax[1].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nplt.show()","473a8ed1":"age1 = non_defaulters['AGE_GROUP'].value_counts(normalize=True)*100\nage1","ef7ca88e":"age2 = defaulters['AGE_GROUP'].value_counts(normalize=True)*100\nage2","e24e5883":"# AGE_GROUP distribution\nfig, ax =plt.subplots(1,2,figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\n# Plotting barplot\nage1.plot.bar(ax=ax[0])\nage2.plot.bar(ax=ax[1])\nax[0].set_title('Non-Defaulters: Age Range \\n', fontsize=20) # Setting the title for the plot.\nax[0].set_xticklabels(['Young ','Middle Aged','Youth','Senior Citizen'], rotation = 45) # Changing and rotating xticks for better readability.\nax[0].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nax[1].set_title('Defaulters: Age Range \\n', fontsize=20) # Setting the title for the plot.\nax[1].set_xticklabels(['Young ','Middle Aged','Youth','Senior Citizen'], rotation = 45) # Changing and rotating xticks for better readability.\nax[1].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nplt.show()","bef40402":"type1 = non_defaulters['NAME_CONTRACT_TYPE'].value_counts(normalize=True)*100\ntype1","cf2fd7de":"type2 = defaulters['NAME_CONTRACT_TYPE'].value_counts(normalize=True)*100\ntype2","9b4058ed":"# NAME_CONTRACT_TYPE distribution\nfig, ax =plt.subplots(1,2,figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\n# Plotting barplot'Cash loans ','Revolving loans'\ntype1.plot.bar(ax=ax[0])\ntype2.plot.bar(ax=ax[1])\nax[0].set_title('Non-Defaulters: Loan Type \\n', fontsize=20) # Setting the title for the plot.\nax[0].set_xticklabels(['Cash loans ','Revolving loans'], rotation = 45) # Changing and rotating xticks for better readability.\nax[0].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nax[1].set_title('Defaulters: Loan Type \\n', fontsize=20) # Setting the title for the plot.\nax[1].set_xticklabels(['Cash loans ','Revolving loans'], rotation = 45) # Changing and rotating xticks for better readability.\nax[1].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nplt.show()","f3490e72":"#AMT_ANNUITY distribution\nfig, ax =plt.subplots(1,2,figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nsns.distplot(non_defaulters[~non_defaulters['AMT_ANNUITY'].isna()]['AMT_ANNUITY'], ax=ax[0], color=\"#4CB391\")\nsns.distplot(defaulters[~defaulters['AMT_ANNUITY'].isna()]['AMT_ANNUITY'], ax=ax[1], color=\"#4CB391\")\nax[0].set_title('Non-Defaulters: Amount Annuity \\n', fontsize=20) # Setting the title for the plot.\nax[0].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nax[1].set_title('Defaulters: Amount Annuity \\n', fontsize=20) # Setting the title for the plot.\nax[1].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nplt.show()","0071f9fa":"#AMT_CREDIT distribution\nfig, ax =plt.subplots(1,2,figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nsns.distplot(a=non_defaulters['AMT_CREDIT'], ax=ax[0], color=\"#4CB391\")\nsns.distplot(a=defaulters['AMT_CREDIT'], ax=ax[1], color=\"#4CB391\")\nax[0].set_title('Non-Defaulters: Loan Credit Amount \\n', fontsize=20) # Setting the title for the plot.\nax[0].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nax[1].set_title('Defaulters: Loan Credit Amount \\n', fontsize=20) # Setting the title for the plot.\nax[1].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nplt.show()","d82ee96f":"#DAYS_EMPLOYED distribution\nfig, ax =plt.subplots(1,2,figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nsns.distplot(a=non_defaulters['DAYS_EMPLOYED'], ax=ax[0], color=\"#4CB391\")\nsns.distplot(a=defaulters['DAYS_EMPLOYED'], ax=ax[1], color=\"#4CB391\")\nax[0].set_title('Non-Defaulters: Days of current employment \\n', fontsize=20) # Setting the title for the plot.\nax[0].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nax[1].set_title('Defaulters: Days of current employment \\n', fontsize=20) # Setting the title for the plot.\nax[1].grid(color='black', linestyle='-', linewidth=0.25, alpha=0.4) # Adding the grid lines for better readability of the plot\nplt.show()","e6bba92d":"#CNT_FAM_MEMBERS distribution\nplt.figure(figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nplt.subplot(1,2,1)\nnon_defaulters['CNT_FAM_MEMBERS'].plot.hist(bins=range(15))\nplt.title('Non-Defaulters: Number of family members \\n', fontsize=20) # Setting the title for the plot.\n\nplt.subplot(1,2,2)\ndefaulters['CNT_FAM_MEMBERS'].plot.hist(bins=range(15))\nplt.title('Defaulters: Number of family members \\n', fontsize=20) # Setting the title for the plot.\nplt.show()","9a2c9ff3":"# Dataframe for non-defaulters females.\nnon_defaulters_females = non_defaulters[non_defaulters['CODE_GENDER'] == 'F']\n# Dataframe for non-defaulters males.\nnon_defaulters_males = non_defaulters[non_defaulters['CODE_GENDER'] == 'M']","bb22e232":"# Checking non_defaulters_females dataframe\nnon_defaulters_females.head()","b304dcab":"# Checking non_defaulters_males dataframe\nnon_defaulters_males.head()","3be6a12b":"non_defaulters_females_corr = round(pd.pivot_table (data=non_defaulters_females, index='AMT_INCOME_BIN',values=('AMT_CREDIT','AMT_ANNUITY','AMT_GOODS_PRICE'), aggfunc=np.mean),2)\nnon_defaulters_females_corr","e497a711":"non_defaulters_males_corr = round(pd.pivot_table (data=non_defaulters_males, index='AMT_INCOME_BIN',values=('AMT_CREDIT','AMT_ANNUITY','AMT_GOODS_PRICE'), aggfunc=np.mean),2)\nnon_defaulters_males_corr","3fc4dea7":"# Plotting heatmaps in subplot using Seaborn.\nfig, ax =plt.subplots(1,2,figsize=[15,8], sharey=True) # Setting the plot size for ease of readabilty\nsns.heatmap(non_defaulters_males_corr, cmap=\"Blues\", fmt=\".2f\", linewidth=0.5, annot=True, ax=ax[0])\nsns.heatmap(non_defaulters_females_corr, cmap=\"Reds\", fmt=\".2f\", linewidth=0.5, annot=True, ax=ax[1])\n# Setting the title for the plots.\nfig.suptitle('Non-Defaulters', fontsize=25)\nax[0].set_title('Male correlation Heatmap', fontsize=20)\nax[1].set_title('Female correlation Heatmap', fontsize=20)\nplt.show()","8893c6ae":"# Dataframe for defaulters females.\ndefaulters_females = defaulters[defaulters['CODE_GENDER'] == 'F']\n# Dataframe for defaulters males.\ndefaulters_males = defaulters[defaulters['CODE_GENDER'] == 'M']","ef1a16d7":"# Checking defaulters_females dataframe\ndefaulters_females.head()","67c9bec2":"# Checking defaulters_males dataframe\ndefaulters_males.head()","5b25f5f3":"defaulters_females_corr = round(pd.pivot_table (data=defaulters_females, index='AMT_INCOME_BIN',values=('AMT_CREDIT','AMT_ANNUITY','AMT_GOODS_PRICE'), aggfunc=np.mean),2)\ndefaulters_females_corr","edf23af3":"defaulters_males_corr = round(pd.pivot_table (data=defaulters_males, index='AMT_INCOME_BIN',values=('AMT_CREDIT','AMT_ANNUITY','AMT_GOODS_PRICE'), aggfunc=np.mean),2)\ndefaulters_males_corr","28ca8242":"# Plotting heatmaps in subplot using Seaborn.\nfig, ax =plt.subplots(1,2,figsize=[15,8], sharey=True) # Setting the plot size for ease of readabilty\nsns.heatmap(defaulters_males_corr, cmap=\"Blues\", fmt=\".2f\", linewidth=0.5, annot=True, ax=ax[0])\nsns.heatmap(defaulters_females_corr, cmap=\"Reds\", fmt=\".2f\", linewidth=0.5, annot=True, ax=ax[1])\n# Setting the title for the plots.\nfig.suptitle('Defaulters', fontsize=25)\nax[0].set_title('Male correlation Heatmap', fontsize=20)\nax[1].set_title('Female correlation Heatmap', fontsize=20)\nplt.show()","cd5ac11b":"#Plot AMT_CREDIT vs CNT_FAM_MEMBERS\nplt.figure(figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nplt.subplot(1,2,1)\nsns.scatterplot(x='AMT_CREDIT', y='CNT_FAM_MEMBERS', data=non_defaulters, alpha=0.6)\nplt.title('Non-Defaulters: AMT_CREDIT VS CNT_FAM_MEMBERS \\n', fontsize=16) # Setting the title for the plot.\n\nplt.subplot(1,2,2)\nsns.scatterplot(x='AMT_CREDIT', y='CNT_FAM_MEMBERS', data=defaulters, alpha=0.6)\nplt.title('Defaulters: AMT_CREDIT VS CNT_FAM_MEMBERS \\n', fontsize=16) # Setting the title for the plot.\nplt.show()","ed4fa799":"#Plot AMT_CREDIT vs AMT_GOODS_PRICE\nplt.figure(figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nplt.subplot(1,2,1)\nsns.scatterplot(x='AMT_CREDIT', y='AMT_GOODS_PRICE', data=non_defaulters, alpha=0.6)\nplt.title('Non-Defaulters: AMT_CREDIT VS AMT_GOODS_PRICE \\n', fontsize=16) # Setting the title for the plot.\n\nplt.subplot(1,2,2)\nsns.scatterplot(x='AMT_CREDIT', y='AMT_GOODS_PRICE', data=defaulters, alpha=0.6)\nplt.title('Defaulters: AMT_CREDIT VS AMT_GOODS_PRICE \\n', fontsize=16) # Setting the title for the plot.\nplt.show()","9b26307e":"client_previous_data.head()","bdb7fc81":"# Replacing XNA and XAP values by NaN\nclient_previous_data=client_previous_data.replace('XNA', np.NaN)\nclient_previous_data=client_previous_data.replace('XAP', np.NaN)","5ffb37d6":"client_previous_data['NAME_CONTRACT_STATUS'].value_counts(normalize=True)*100","923818cf":"# NAME_CONTRACT_STATUS distribution\nfig,ax = plt.subplots(1,1,figsize=(15,8)) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')    \nsns.countplot(x='NAME_CONTRACT_STATUS', data=client_previous_data)\nplt.title('Countplot: Loan Status \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Loan Status', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\n#plt.xticks(rotation = 90) # Rotating the xticks for better readability\nplt.show()","2357ffd4":"client_previous_data['NAME_CONTRACT_TYPE'].value_counts(normalize=True)*100","ee50e0c0":"# NAME_CONTRACT_TYPE distribution\nfig,ax = plt.subplots(1,1,figsize=(15,8)) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')    \nsns.countplot(x='NAME_CONTRACT_TYPE', data=client_previous_data)\nplt.title('Countplot: Loan Type \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Loan Type', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\n#plt.xticks(rotation = 90) # Rotating the xticks for better readability\nplt.show()","42d78536":"client_previous_data['NAME_CLIENT_TYPE'].value_counts(normalize=True)*100","4c0a6b04":"# NAME_CLIENT_TYPE distribution\nfig,ax = plt.subplots(1,1,figsize=(15,8)) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')    \nsns.countplot(x='NAME_CLIENT_TYPE', data=client_previous_data)\nplt.title('Countplot: Client Type \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Client Type', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\n#plt.xticks(rotation = 90) # Rotating the xticks for better readability\nplt.show()","26a43d84":"# NAME_CONTRACT_TYPE and NAME_CONTRACT_STATUS distribution\nfig,ax = plt.subplots(1,1,figsize=(15,8)) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')    \nsns.countplot(x='NAME_CONTRACT_TYPE', data=client_previous_data, hue='NAME_CONTRACT_STATUS')\nplt.title('Countplot: Loan Type VS Loan Status \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Loan Type', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\n#plt.xticks(rotation = 90) # Rotating the xticks for better readability\nplt.show()","e6c12539":"# NAME_CLIENT_TYPE and NAME_CONTRACT_STATUS distribution\nfig,ax = plt.subplots(1,1,figsize=(15,8)) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')    \nsns.countplot(x='NAME_CLIENT_TYPE', data=client_previous_data, hue='NAME_CONTRACT_STATUS')\nplt.title('Countplot: Client Type VS Loan Status \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Client Type', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\n#plt.xticks(rotation = 90) # Rotating the xticks for better readability\nplt.show()","8dfe4cfd":"client_previous_data['CODE_REJECT_REASON'].value_counts(normalize=True)*100","8cb2b580":"# CODE_REJECT_REASON distribution\nfig,ax = plt.subplots(1,1,figsize=(15,8)) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')    \nsns.countplot(x='CODE_REJECT_REASON', data=client_previous_data)\nplt.title('Countplot: Loan Rejection Reasons \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Reasons for Loan Rejection', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\n#plt.xticks(rotation = 90) # Rotating the xticks for better readability\nplt.show()","9dcdfd69":"client_previous_data['NAME_GOODS_CATEGORY'].value_counts(normalize=True)*100","5dedab29":"# NAME_GOODS_CATEGORY distribution\nplt.figure(figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nclient_previous_data['NAME_GOODS_CATEGORY'].value_counts().plot.bar()\nplt.title('Countplot: Loan for Goods Category \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Goods Category', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\n#plt.xticks(rotation = 45) # Rotating the xticks for better readability\nplt.show()","6096ebc8":"plt.figure(figsize=[15,8]) # Setting the plot size for ease of readabilty\nsns.pairplot(client_previous_data[['AMT_ANNUITY','AMT_APPLICATION','AMT_CREDIT','AMT_GOODS_PRICE']], diag_kind = 'kde', \n             plot_kws = {'alpha': 0.4, 's': 80, 'edgecolor': 'k'}, size = 4)\nplt.show()","00bf4677":"# NAME_CONTRACT_STATUS VS AMT_ANNUITY distribution\nplt.figure(figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nsns.boxplot(data=client_previous_data, x='NAME_CONTRACT_STATUS', y='AMT_ANNUITY')\nplt.title('Boxplot: Loan Status VS Annuity \\n', fontsize=20)\nplt.show()","3d43aee8":"# NAME_CONTRACT_STATUS VS AMT_CREDIT distribution\nplt.figure(figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nsns.boxplot(data=client_previous_data, x='NAME_CONTRACT_STATUS', y='AMT_CREDIT')\nplt.title('Boxplot: Loan Status VS Credit Amount \\n', fontsize=20)\nplt.show()","f6327fd4":"# Selecting some important columns from client_info dataframe and creating a new dataframe\nclient_info_col = ['SK_ID_CURR','TARGET','CODE_GENDER','FLAG_OWN_CAR','FLAG_OWN_REALTY','AMT_INCOME_BIN','AGE_GROUP','AMT_CREDIT','AMT_INCOME_TOTAL',\n'NAME_INCOME_TYPE','NAME_EDUCATION_TYPE','NAME_FAMILY_STATUS','NAME_HOUSING_TYPE','DAYS_EMPLOYED',\n'DAYS_REGISTRATION','FLAG_EMAIL','OCCUPATION_TYPE',\n'CNT_FAM_MEMBERS','REGION_RATING_CLIENT_W_CITY','ORGANIZATION_TYPE','AMT_REQ_CREDIT_BUREAU_DAY',\n'AMT_REQ_CREDIT_BUREAU_MON','AMT_REQ_CREDIT_BUREAU_QRT','NAME_CONTRACT_TYPE','AMT_ANNUITY','REGION_RATING_CLIENT','AMT_GOODS_PRICE']","1af19935":"client_info_imp = client_info[client_info_col]","950332de":"client_info_imp.shape","72ac5ebe":"# Mearging the files\nclient_data_mearge = pd.merge(client_info_imp, client_previous_data, how='left', on=['SK_ID_CURR'])","2c055d7f":"client_data_mearge.shape","c9ac0c50":"client_data_mearge.head()","ee0c0bc9":"# NAME_CASH_LOAN_PURPOSE distribution\nplt.figure(figsize=[15,8]) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')\nclient_previous_data['NAME_CASH_LOAN_PURPOSE'].value_counts().plot.bar(color=\"#4CB391\")\nplt.title('Countplot: Cash Loan Purpose \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Cash Loan Purpose', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\n#plt.xticks(rotation = 45) # Rotating the xticks for better readability\nplt.show()","0ce48ccd":"# FLAG_OWN_CAR and NAME_CONTRACT_STATUS distribution\nfig,ax = plt.subplots(1,1,figsize=(15,8)) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')    \nsns.countplot(x='FLAG_OWN_CAR', data=client_data_mearge, hue='NAME_CONTRACT_STATUS')\nplt.title('Countplot: Own Car VS Loan Status \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Car', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\n#plt.xticks(rotation = 90) # Rotating the xticks for better readability\nplt.show()","50bf9697":"# NAME_INCOME_TYPE and NAME_CONTRACT_STATUS distribution\nfig,ax = plt.subplots(1,1,figsize=(15,8)) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')    \nsns.countplot(x='NAME_INCOME_TYPE', data=client_data_mearge, hue='NAME_CONTRACT_STATUS')\nplt.title('Countplot: Income Type VS Loan Status \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Income Type', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\nplt.show()","406af046":"# TARGET and NAME_CONTRACT_STATUS distribution\nfig,ax = plt.subplots(1,1,figsize=(15,8)) # Setting the plot size for ease of readabilty\nplt.style.use('ggplot')    \nsns.countplot(x='TARGET', data=client_data_mearge, hue='NAME_CONTRACT_STATUS')\nplt.title('Countplot: Non-Defaulters (0) VS Defaulters (1) \\n', fontsize=20) # Setting the title for the plot\nplt.xlabel('Target', fontsize=15, color='k')\nplt.ylabel('Count',fontsize=15, color='k')\n#plt.xticks(rotation = 90) # Rotating the xticks for better readability\nplt.show()","3a6395d4":"- ## Analysis","26b9552b":"- #### NAME_CLIENT_TYPE and NAME_CONTRACT_STATUS","bf8f5f87":"- ### Performing the inspection on application_data csv file.","14fb4986":"- #### Bivariate analysis on categorical VS numerical columns","f0bb4043":"- #### Checking the ORGANIZATION_TYPE column","b333a7a7":"- #### AMT_ANNUITY distribution","2a8aa9fc":"From the above plots we can see that:\n1. Both male and females under the Very High category of income have highest Annuity amounts, tends to take huge loan amounts and have highest goods price amount compared to the other income category clients.\n2. Both male and females under the Very Low category of income have lowest Annuity amounts, tends to take smaller loan amounts and have lowest goods price amount compared to the other income category clients.\n3. There is a direct proportion between the income and loan amount, the higher the income higher the loan amount for both male and female.","93307678":"From the above plots we can see that:\n1. From all the non-defaulters, around 67% are females. On that basis we can say females are more commited to pay their loan back on time compared to males.\n2. From all the defaulters, around 57% are females which means females also tends to default their loans more than the males.\n3. Overall we can say that, there are more number of loan applications from females compared to males.","360cbb21":"From the above plot we can see that, 65.99% of the clients do not own a car and 34.01% of the clients owns a car.","7a6abbd2":"- #### NAME_CONTRACT_TYPE column","af9242b7":"- ### Checking the Data Imbalance","3d6f7a97":"- #### NAME_CONTRACT_STATUS VS AMT_CREDIT distribution","cf510bfe":"From the above plots we can see that:\n1. There is almost equal distribution for Loan Type between Defaulters and Non-Defaulters.\n2. Overall, most of the people opt for Cash Loans over the Revolving Loans.","7bc34294":"From the above plot we can see that:\n\n1. Credit amount asked by the clients on the previous application is highly related to the Goods price of good that client has asked for on the previous application.\n2. Final credit amount given to the clients previously is related to the application amount and the goods price of good that client asked for on the previous application.","a3821012":"- ### Correlation based on TARGET between CODE_GENDER, AMT_ANNUITY, AMT_CREDIT and AMT_GOODS_PRICE columns.","0d128c23":"From the above plot we can see that:\n1. Most of the loan applications are Approved.\n2. There are very few unused offers.","9b3d6962":"- ## Creating two different dataframes by splitting client_info dataframe based on TARGET values (0 & 1)","d893f771":"We can see from the above plots that, there is not much difference between defaulters and non-defaulters based on their education type. Overall we can say that people with education type Secondary \/ secondary special tends to apply for loan more than people with other education types.","0d0b8a0b":"- ### NAME_TYPE_SUITE column","8e4342b4":"We can see a huge amount of values corresponding to \"XNA\". Replacing the \"XNA\" values with \"NaN\" so, that we can perform the analysis on the ORGANIZATION_TYPE column.","44697f11":"From the above plot we can see that, most of the loan applications are from the Repeater clients followed by the New clients. There are very few Refreshed clients.","4939ce3c":"- #### Creating new dataframes from non_defaulters and defaulters for males and females.","528f98a2":"- #### NAME_CLIENT_TYPE column","919f7614":"From the above plot we can see that:\n1. People from Working class seems to apply for loan the most followed by Commercial associate and Pensioner.\n2. There are very few loan applications from the people in Unemployed, Student, Businessman and Maternity leave class.","e2bd687e":"From the above plot we can see that:\n1. Most of the cash loan applications are for Repairs purpose followed by Others and Urgent needs.\n2. In very few cash loan applications, clients have refused to disclose the purpose of taking loan.\n3. There are least number of applications for 'Money for a third person' and 'Hobby' purposes.","11466728":"- ### Bivariate analysis on numerical columns","8e8ce536":"From the above plots we can see that:\n1. Both male and females under the Very High category of income have highest Annuity amounts, tends to take huge loan amounts and have highest goods price amount compared to the other income category clients.\n2. Both male and females under the Very Low category of income have lowest Annuity amounts, tends to take smaller loan amounts and have lowest goods price amount compared to the other income category clients.\n3. There is a direct proportion between the income and loan amount, the higher the income higher the loan amount for both male and female.","3000a51e":"From the above plot we can see that out of total loan applications, 65.84% are from Female clients and 34.16% are from Male clients.","9eeae9dd":"- #### AMT_INCOME_TOTAL column","ccf38bcd":"- ### CNT_FAM_MEMBERS column","7968ff98":"- #### DAYS_BIRTH column","cabc39a9":"- #### NAME_CONTRACT_STATUS VS AMT_ANNUITY distribution","7f412672":"- ### Imputing the values in columns with less than 13% null values","9477eacd":"- #### Gender Distribution","a76724c1":"- #### NAME_CONTRACT_TYPE distribution","84e9348e":"# EDA for application_data csv file (client_info dataframe)","5e0e1a7a":"- ### Reading the previous_application csv file","3a9ffa70":"- #### NAME_CONTRACT_STATUS column","9197f08d":"From the above plot we can see that:\n1. There are less number of defaulters.\n2. There are quite a few loan applications from defaulters which are approved resulting in loss for the company.\n3. There are also high number of loan applications from non-defaulters which are refused and cancled resulting in loss of business for the company.","23806434":"- #### NAME_GOODS_CATEGORY column","7939bf6c":"From the above plot we can see that, most number of loans are rejected because of HC followed by Limit.","5ba3d950":"From the above plot we can see that, majority of the loan applications are from \"Business Entity Type 3\" followed by \"Self-employed\". \"Industry: type 8\" have the least number of loan applications.","bddf6aed":"- ### EXT_SOURCE_2 column","8d754d88":"- ### Univariate Analysis","c17c003d":"- ### Reading the application_data csv file","04189686":"From the above plot we can see that the distribution is quite similar for both Non-Defaulters and Defaulters and generally a family consisting of 3 members apply for the loan most.","684a1655":"- ## Merging the client_info_imp and client_previous_data dataframes","82d453bc":"- #### Replacing XNA and XAP values by NaN for the ease of analysis","9c67b90f":"- #### Age Group distribution","06f78c77":"- #### CNT_FAM_MEMBERS distribution","25248e56":"- #### The negative values in the above columns are converted to their absolute forms.","e7193a8a":"- #### Income Range distribution","191c20ef":"From the above plot we can see that:\n1. Majority of the loans are applied for Mobile followed by Consumer Electronics and Computers.","58846b08":"- ### AMT_ANNUITY column","2f983596":"In few columns containing data related to number of days, we found that some of the values are negative and as we all know, number of days cannot be negative. So, converting the negative values to their absolute values using abs() function.","66b4755a":"- ### Checking the distributon of various columns","3128af7d":"- #### OCCUPATION_TYPE column","46c2ce89":"- ## Creating a new dataframe from client_info dataframe by selecting some important columns","15b28286":"- #### AMT_CREDIT distribution","f42939b4":"- ### Checking the errors in data and data type","0b1ec365":"We can see that, this column contains 4 values for \"XNA\". We can impute the \"XNA\" values as \"F\" or we can drop these values. So, in this case we are dropping these values as it will not affect our data and will not affect our EDA.","300e1516":"From the above plot we can see that:\n1. Most of the applications for Consumer loans are approved and there are few unused offers as well.\n2. Majority of the applications for Cash loans are approved but, there are many applications which are cancelled and refused.","904a7ccb":"- #### We can impute the missing values in NAME_TYPE_SUITE column using the mode value i.e \"Unaccompanied\".","c20dad74":"- #### NAME_EDUCATION_TYPE distribution","38d22274":"From the above plot we can see that, around 92% people paid their loans on time i.e Non-Defaulters and around 8% people did not paid their loans on time i.e Defaulters.","41f27e9f":"We can see above, that the age is in range of 20 - 69. So, creating 5 bins in range 20 -70.","9efb2cb1":"- ## Conclusions from the EDA and Suggestions","09c2f3cf":"From the above plots we can see that:\n1. Married people tends to apply for loan more than other people. \n2. Single\/not married and Civil marriage status clients tends to default their loans more than paying the loan amounts on time.","0728723a":"- #### As seen in above plot, AMT_ANNUITY has lots of outliers so, we can impute the missing values using the median value i.e 24903.0","d95eaf61":"- ### Bivariate analysis of numerical columns","87fb7cce":"From the above plot we can see that, 69.37% of the clients owns a house\/flat and 30.63% of the clients do not own the house\/flat.","b4bfaef5":"- #### CODE_REJECT_REASON column","8dc2a5d9":"From the above plots we can see that:\n1. Youth (20-30 yrs) and Young (30-45 yrs) clients tends to default more than repaying on time.\n2. Middle Aged (45-60 yrs) and Senior Citizen (60-70 yrs) clients tends to repay their loans on time more than defaulting.\n3. Overall, most number of applications are from Young age group (30-45 yrs) and least number of loan applications are seen from Senior Citizen age group (60-70 yrs) clients.","f6990f2a":"- #### Checking the CODE_GENDER column","ce7c341c":"- #### NAME_FAMILY_STATUS distribution","cc8944f8":"- #### As seen in above plot, EXT_SOURCE_2 has no outliers so, we can impute the missing values using the mean value i.e 0.51 ","a77ad9dc":"As we can see in the results above, these columns contains the negative values which is an error. So, converting the negative values to their absolute values.","25b50e1d":"- #### ORGANIZATION_TYPE column","4329e809":"- ### Checking the null values in each column and dropping the columns with greater than 40% of null values.","41e24fa8":"1. There are 8.07% of defaulters.\n2. There are more loan applications from female clients.\n3. Clients with Secondary\/secondary special education type are more likely to default.\n4. Single and not married clients are more likely to default. \n5. Married clients are safe to give the loan as they are more likely to repay on time.\n6. Younger clients (< 45 years) are more likely to default. Clients greater than 45 years of age are more likely to repay on time.\n7. Clients who's previous loan was rejected\/cancelled are more likely to default.\n8. There are also high number of loan applications from non-defaulters which are refused and cancelled resulting in loss of business for the company.","d5112abc":"- #### NAME_CONTRACT_TYPE and NAME_CONTRACT_STATUS columns","fdbd7aac":"From the above plot we can see that:\n1. Majority of the applications from Repeater clients are approved but, there are also quite a few applications which are cancelled and refused.\n2. Most of the applications by the New clients are approved and very few are refused, cancelled or unusued.\n3. Same is the case with Refreshed clients.\n4. Overall we can say that irrespective of the client type, majority of the applications are approved.","80591fb2":"From the above plots we can see that:\n1. The distribution is quite similar for the smaller families with low loan amount for Non-Defaulters and Defaulters.\n2. Small families with higher loan amount tends to pay their loans on time. ","470b11f1":"- ### Binning the contineous variables for further analysis","f5aab5cd":"- ### Univariate Analysis for numerical columns based on TARGET.","306d173a":"- ## EDA on previous_application csv file (client_previous_data dataframe)","ea424b76":"From the plots above we can see that:\n1. Clients in Very High income range tends to repay their loans on time more than defaulting the loans.\n2. Clients in Low income range tends to default their loans more than repaying on time.\n3. Clients in High, Medium and Very low income range have a very equal distribution in both defaulting and non-defaulting so, they have a 50-50% chances of defaulting or non-defaulting the loan.","547b4cc1":"- ### AMT_GOODS_PRICE column","994eaddf":"From the above plot, we can see that people applying for the loan, most of them are \"Laborers\" followed by \"Sales staff\" and \"Core staff\". Very few people from \"IT staff\" have applied for the loan. Other occupation types from which very few applications for loan are received includes \"HR staff\", \"Realty agents\", \"Waiters\/barmen staff\" and \"Secretaries\".","bfbbdc0e":"From the above plot we can see that:\n1. There is not much difference in loan status if client owns a car or do not own a car.\n2. People not owning a car seems to apply for loans more than people owning a car.","e2cd07d6":"We can impute the values in the above 10 columns with their mean\/median values.","7edf7055":"- #### As seen in above plot, CNT_FAM_MEMBERS has outliers so, we can impute the missing values using the median value i.e 2.0","a27f9f27":"From the above plots we can see that:\n1. The distribution is quite similar for the smaller Goods price and low loan amount for Non-Defaulters and Defaulters.\n2. People with higher loan amount and higher Goods price tends to pay their loans on time.","0f099e5c":"- #### DAYS_EMPLOYED distribution","1af73f88":"From the above plot we can see that, most of the clients prefer Consumer loans and Cash loans over the Revolving loans.","71a1f0ed":"- #### As seen in above plot, AMT_ANNUITY has lots of outliers so, we can impute the missing values using the median value i.e 450000.0","97c2509a":"- ## Imputing the values","296936f5":"- ### Performing the inspection on previous_application csv file."}}