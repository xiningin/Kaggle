{"cell_type":{"83e4ac52":"code","3d77a6e4":"code","5eba11c6":"code","e84f0b26":"code","447340b1":"code","24ebb24f":"code","8d880706":"code","529772a8":"code","ba27d7d6":"code","8347b3b7":"code","9b39ad46":"code","75c744ee":"code","0f69d126":"code","31eb4365":"code","52af0b9b":"code","1e6d37a4":"code","137b10e1":"code","ad6a6a1c":"code","f1b5e4b9":"code","9ae0e4df":"code","4eb22d68":"code","0142a3f3":"code","7bb23c5f":"code","90075004":"code","a23c1cfc":"code","a6e0aadd":"code","5cb1c246":"code","4a004073":"code","b99088dc":"code","d140332e":"code","b14f3216":"code","306543bd":"code","ae059388":"code","40fe15a9":"code","f2b103e9":"code","31464653":"code","56f98904":"code","b45842fb":"code","afe66ae0":"code","cbc0d041":"code","0f72b127":"code","576fe989":"code","6d6daa01":"code","f3f11da9":"code","90823415":"code","35eb8508":"code","c2f1b61b":"code","df1d0789":"code","9df86d8c":"code","b679174c":"code","58ad68c1":"code","23f813f0":"code","853b66bd":"markdown","64557c74":"markdown","d69a342f":"markdown","67b0a991":"markdown","a6674a63":"markdown","cf6f94fe":"markdown","d08d71c7":"markdown","330b194d":"markdown","66ff93ec":"markdown","84f7899d":"markdown"},"source":{"83e4ac52":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3d77a6e4":"url='..\/input\/animal-shelter-analytics\/Austin_Animal_Center_Intakes.csv'\ndf=pd.read_csv(url)\ndf.head(5)","5eba11c6":"df.shape","e84f0b26":"df.columns","447340b1":"df.info()","24ebb24f":"df['Intake Condition'].unique()","8d880706":"sick_animals_df = df[df['Intake Condition'] == 'Sick']\na = (len(sick_animals_df)\/len(df)*100)\nprint(f'Around {a} percent of animals found were sick')","529772a8":"sick_animals_df","ba27d7d6":"df.isnull().sum()","8347b3b7":"df['Animal Type'].value_counts()","9b39ad46":"Dogs_Sheltered = df['Animal Type'].value_counts()[0]\nCats_Sheltered = df['Animal Type'].value_counts()[1]\na = (Dogs_Sheltered\/len(df))*100\nb=(Cats_Sheltered\/len(df))*100\nprint(f'There are {Dogs_Sheltered} dogs here')\nprint(f'There are {Cats_Sheltered} cats here')\nprint(f'There are {a}% of animals are dogs in the shelter')\nprint(f'There are {b}% of animals are cats in the shelter')\nprint(f'Cats and Dogs are Majority of the animals in the shelter standing at {a+b}% of total animals')\n\n","75c744ee":"Normal_Animals_df =  df[df['Intake Condition'] == 'Normal']\nNormal_Animals_df","0f69d126":"c = (len(Normal_Animals_df)\/len(df))*100\nc","31eb4365":"df['Found Location'] = df['Found Location'].astype(\"|S\")\ndf.info()\n","52af0b9b":"df.info()","1e6d37a4":"#import re\ndf['State'] = df['Found Location'].str.decode('UTF-8').str.extract('.*\\((.*)\\).*')\ndf['State']\n","137b10e1":"df.columns","ad6a6a1c":"df['State'].value_counts()","f1b5e4b9":"a = df['Intake Type'].value_counts().tolist()\na\n","9ae0e4df":"print(f'There are {a[0]} stray animals handed to the shelter')\nprint(f'There are {a[1]} Owner surrendered animals to the shelter')","4eb22d68":"a[0]\/len(df)*100\n","0142a3f3":"a[1]\/len(df)*100","7bb23c5f":"df['Age upon Intake'] = df['Age upon Intake'].astype('string')","90075004":"df.info()","a23c1cfc":"df['Age upon Intake']","a6e0aadd":"df['Date'] = pd.to_datetime(df.DateTime)","5cb1c246":"df.info()","4a004073":"df.drop(['DateTime'], axis = 1, inplace = True)","b99088dc":"df.info()","d140332e":"df['IntakeYear'] = pd.DatetimeIndex(df.Date).year\ndf['IntakeMonth'] = pd.DatetimeIndex(df.Date).month\ndf['IntakeDay'] = pd.DatetimeIndex(df.Date).day\ndf['IntakeWeekDay'] = pd.DatetimeIndex(df.Date).weekday","b14f3216":"df['Intakehour'] = pd.DatetimeIndex(df.Date).hour","306543bd":"df.drop(['MonthYear'], axis = 1, inplace = True)","ae059388":"df.drop(['Found Location'], axis = 1, inplace = True)","40fe15a9":"df.columns","f2b103e9":"df['IntakeYear'].unique()\nnp.sort(df['IntakeYear'].unique())","31464653":"year_13_df = df[df['IntakeYear'] == 2013]","56f98904":"year_13_df['IntakeMonth'].value_counts()\n","b45842fb":"year_21_df = df[df['IntakeYear'] == 2021]","afe66ae0":"year_21_df['IntakeMonth'].value_counts()","cbc0d041":"year_21_df","0f72b127":"##Removing the 2013 year data from the dataframe \nnew_df = df.append(year_13_df).drop_duplicates(keep=False)","576fe989":"##Removing the 2021 year data from the dataframe\ndf1 = new_df.append(year_21_df).drop_duplicates(keep=False)","6d6daa01":"df1['IntakeYear'].value_counts()","f3f11da9":"df1['IntakeMonth'].value_counts()","90823415":"df1['IntakeWeekDay'].value_counts()","35eb8508":"import seaborn as sns\nsns.countplot(data=df1, x='IntakeWeekDay', order=df.IntakeWeekDay.value_counts().index)","c2f1b61b":"sns.countplot(data=df1, x='IntakeMonth', order=df.IntakeMonth.value_counts().index)","df1d0789":"df1.columns","9df86d8c":"sns.barplot(x=df1.IntakeYear.value_counts().index, y=df1.IntakeYear.value_counts())","b679174c":"import matplotlib.pyplot as plt\n%matplotlib inline\nchart = sns.barplot(x=df1['Intake Type'].value_counts().index, y=df1['Intake Type'].value_counts())\n#chart.set_xticklabels(chart.get_xticklabels(), rotation=45)\n#chart.set_xticklabels(chart.get_xticklabels(), rotation=45, horizontalalignment='right')\nplt.xticks(\n    rotation=45, \n    horizontalalignment='right',\n    fontweight='light',\n    fontsize='x-large'  \n)","58ad68c1":"sns.barplot(x=df1['Animal Type'].value_counts().index, y=df1['Animal Type'].value_counts())","23f813f0":"sns.barplot(x=df1['Intake Condition'].value_counts().index, y=df1['Intake Condition'].value_counts())\nplt.xticks(\n    rotation=45, \n    horizontalalignment='right',\n    fontweight='light',\n    fontsize='x-large'  \n)","853b66bd":"It is good to see that 86% of the animals found were normal when compared to 4% animals found sick. We can understand that animal cruelty is low in the USA.","64557c74":"Here is an interesting insight, 98% of the animal shelter data belongs to the US State Texas (TX). So in other terms we can say that this is Texas state animal shelter data.","d69a342f":"As per the above graph, animal shelter had least intakes on Saturday and highest on Sunday.\nAlso, Weekdays showed same level of intake activity","67b0a991":"Animal Shelter has highest intake in the year 2019 and least in the year 2020","a6674a63":"56% of the animals in the shelter are Dogs and 37% of the animals in the shelter are cats. Together they are standing at 94% of the total animals in the shelter.","cf6f94fe":"As per the above graph, animal shelter had the least intake in the month of December followed by months Jan and Feb. The animal shelter had highest intake in the month of May.","d08d71c7":"In the year 2021 also, we have data for the first 3 months, so we will exculde 2013 and 2021 to perform data visualizations.","330b194d":"69% of the animals in the shelter were stray animals and 19% of animals were surrended to the shelter by the owners.","66ff93ec":"We can infer that year 2013 data is starting from the month of october and hence we will exculde this year data in some time to perform data visualizations","84f7899d":"4% of the animals found were sick."}}