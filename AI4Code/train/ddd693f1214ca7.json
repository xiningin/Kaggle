{"cell_type":{"424ce695":"code","56f0398f":"code","1514ef2c":"code","cc045e37":"code","e66affda":"code","bc7edaca":"code","0a89dd80":"code","a122b0c9":"code","ae8447f9":"code","7af3d09e":"code","3365b7f6":"code","21ec7044":"code","19e60bf4":"code","ec4796eb":"code","9bffdeaf":"code","5d78a251":"code","966e97f7":"code","4af760a7":"code","d2a14d4c":"code","6be086da":"code","72175c95":"markdown","ad6a7f6e":"markdown","9a06ac1f":"markdown","4eb8b32d":"markdown","3cc17a3b":"markdown","2cf190ea":"markdown","d43cfcf3":"markdown"},"source":{"424ce695":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","56f0398f":"!pip install pandas-profiling","1514ef2c":"import pandas_profiling\nimport pandas as pd","cc045e37":"from pandas_profiling import *","e66affda":"data = pd.read_csv(\"..\/input\/tipping\/tips.csv\")","bc7edaca":"profile = ProfileReport(data, title=\"Tips Dataset EDA Report\")\nprofile.to_file(\"report.html\")","0a89dd80":"pip install dabl","a122b0c9":"import dabl\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.datasets import load_digits","ae8447f9":"titanic = pd.read_csv(dabl.datasets.data_path(\"titanic.csv\"))","7af3d09e":"titanic.head()","3365b7f6":"titanic_clean = dabl.clean(titanic, verbose=0)","21ec7044":"titanic_clean.head()","19e60bf4":"types = dabl.detect_types(titanic_clean)\nprint(types)","ec4796eb":"dabl.plot(titanic, 'survived')","9bffdeaf":"fc = dabl.SimpleClassifier(random_state=0)\ny = titanic_clean.survived\nX = titanic_clean.drop(\"survived\", axis=1)\nfc.fit(X, y) ","5d78a251":"pip install prettypandas","966e97f7":"import prettypandas","4af760a7":"from prettypandas import PrettyPandas","d2a14d4c":"PrettyPandas(titanic).total()","6be086da":"PrettyPandas(data).as_percent(subset=['tip'])","72175c95":"##\u00a0Dabl","ad6a7f6e":"Easy data wrangling + EDA","9a06ac1f":"Enables fast data visualization for features and fits every classifier with their hyperparameters and returns their metrics.","4eb8b32d":"## Pandas Profiling","3cc17a3b":"Credits to:\nhttps:\/\/amueller.github.io\/dabl\/dev\/quick_start.html\nhttps:\/\/github.com\/pandas-profiling\/pandas-profiling","2cf190ea":"## Pretty Pandas","d43cfcf3":"Enables fast and automated EDA."}}