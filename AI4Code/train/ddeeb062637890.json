{"cell_type":{"58a58bbd":"code","3145a557":"code","df7e7646":"code","04bc27a4":"code","c5ea71cc":"code","2da39a34":"code","ff135aa7":"code","f5c58109":"code","7f42f128":"code","e8575012":"code","d7f76de1":"code","2ae7dfb7":"code","06b0ec4e":"code","89c9c47c":"code","eb17045d":"code","515fe21a":"code","e287ca3e":"code","551c9d33":"code","bedb81a5":"markdown","d2c29f7d":"markdown","dd8d4550":"markdown","f1fb42db":"markdown","0258e659":"markdown"},"source":{"58a58bbd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3145a557":"df=pd.read_csv(r\"..\/input\/Admission_Predict.csv\")","df7e7646":"column_names = df.columns\ncolumn_names","04bc27a4":"df.info()","c5ea71cc":"df.head()","2da39a34":"df.drop('Serial No.',axis=1,inplace=True)\ndf.head()","ff135aa7":"df.rename(columns = {'Chance of Admit ':'Chance of Admit'},inplace=True)","f5c58109":"import matplotlib.pyplot as plt\nimport seaborn as sns","7f42f128":"fig=plt.figure(figsize=(15,5))\nax1 = plt.subplot(121)\nax2 = plt.subplot(122)\nsns.countplot(x='University Rating',data = df,ax=ax1)\nsns.countplot(x='Research',data = df,ax=ax2)\nplt.title(\"Research Experience\")","e8575012":"df['GRE_Score_bin'] = pd.cut(df['GRE Score'],5) \ndf['TOEFL_Score_bin'] = pd.cut(df['TOEFL Score'],5)\ndf.head()","d7f76de1":"fig=plt.figure(figsize=(15,5))\nax1 = plt.subplot(121)\nax2 = plt.subplot(122)\nsns.countplot(x='GRE_Score_bin',data= df,ax=ax1)\nsns.countplot(x='TOEFL_Score_bin',data= df,ax=ax2)","2ae7dfb7":"fig=plt.figure(figsize=(15,15))\nax1 = plt.subplot(111)\nsns.heatmap(df.corr(),ax=ax1,annot=True,linewidth=0.05, fmt= '.2f',cmap=\"magma\")","06b0ec4e":"df.head()","89c9c47c":"df1 = df.drop(['GRE_Score_bin','TOEFL_Score_bin'],axis=1)\ndf1.head()","eb17045d":"df2 = df.drop(['GRE Score','TOEFL Score'],axis=1)\ndf2.head()","515fe21a":"X = df1.drop(['Chance of Admit'],axis=1)\ny=df1['Chance of Admit']","e287ca3e":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=0)\nfrom sklearn.linear_model import LinearRegression\nlrg = LinearRegression()\nlrg.fit(X_train,y_train)\nfrom sklearn.metrics import mean_squared_error\ny_predict = lrg.predict(X_test)","551c9d33":"print(\"Accuracy Level of training set : \",lrg.score(X_train, y_train)*100,' %')\nprint(\"Accuracy Level of test set : \",lrg.score(X_test, y_test)*100,' %')\nprint(\"Mean Squared Error is : \",np.sqrt(mean_squared_error(y_test,y_predict)))","bedb81a5":"**Serial No. column is not of any use. So we are going to drop this column.**","d2c29f7d":"**We are going to rename our column name from 'Chance of Admit 'to 'Chance of Admit'. **","dd8d4550":">  **REGRESSION ALGORITHMS (SUPERVISED MACHINE LEARNING ALGORITHMS)**","f1fb42db":"****There is no missing values in this DATAFRAME.****","0258e659":"  > **DATA VISUALIZATION TO UNDERSTAND THE DATASET.**"}}