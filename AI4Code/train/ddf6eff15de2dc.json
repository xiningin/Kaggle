{"cell_type":{"606b6e52":"code","efc6a80c":"code","8980c252":"code","c901514a":"code","c2c8ba95":"code","e4a47ad6":"code","6116f970":"code","984958ed":"code","6c63d6d3":"code","bf5a1b8b":"code","fa52db5c":"code","2b9e53a1":"code","a14be305":"code","1ce50874":"code","04ef50cc":"code","2e16e5ea":"code","3f2daac8":"code","d9272347":"code","966ea97d":"code","7e84e493":"code","71db9565":"code","5c66663b":"code","3d2133c2":"code","b851c29a":"code","c3225bf2":"code","68eda703":"code","40ff8c06":"code","2a156aff":"code","8e658817":"code","06adec8a":"code","5c33d24c":"code","eb4f000a":"code","24513cac":"code","ce02b878":"code","ad644819":"code","a48d7047":"code","dd83efc5":"code","5a0de257":"code","1dab694a":"code","b3c8fb52":"code","a5280a0c":"code","879a482f":"code","1c8dd1e6":"code","625cdc85":"code","a70ca35e":"code","e0c93e74":"code","5435a430":"code","bea3f1d2":"code","79da5778":"code","caca405a":"code","97533071":"code","e41c5251":"code","62e72572":"code","e4adfea4":"markdown","7c3c46b7":"markdown","131c4075":"markdown","f550a915":"markdown","4e4028d4":"markdown","0ed3ce07":"markdown","59b1beb6":"markdown","1575ad37":"markdown","cc79c347":"markdown","bceed2b8":"markdown","e03bdb34":"markdown","36a22dbb":"markdown","3633245a":"markdown","bdd2bf9a":"markdown","a90c2828":"markdown","d49a1e52":"markdown","0c27aa17":"markdown","9714a4fb":"markdown","9268f96e":"markdown","63f6c2ff":"markdown","b9f1d186":"markdown","3dc5fce6":"markdown","91ae3d7e":"markdown","42b7b341":"markdown","54fa4c5a":"markdown","4772d2af":"markdown","0694e004":"markdown","f4b60118":"markdown","a26c310a":"markdown","2c6714a3":"markdown","ce1bd8b6":"markdown","31ff50a7":"markdown","72f57662":"markdown","9ceaa4b2":"markdown","65916985":"markdown","c5827e20":"markdown","884ea04d":"markdown","3744f414":"markdown","33e2bbb9":"markdown","20c0b287":"markdown","8c07cd7a":"markdown"},"source":{"606b6e52":"#Importing Libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")","efc6a80c":"# Reading File\ndf= pd.read_csv(\"Country-data.csv\")\ndf.head()","8980c252":"df.columns","c901514a":"# Converting exports,health,imports in actual values as its given as %age of the GDP per capita\nfeatures_std =['exports','health','imports']\nfor i in features_std:\n    df[i]=(df[i]*df['gdpp'])\/100\n","c2c8ba95":"df.head()","e4a47ad6":"# Checking shape of dataframe\ndf.shape","6116f970":"# Checking columns type in dataframe\ndf.info()","984958ed":"# checking attributes for continuous variables\ndf.describe()","6c63d6d3":"# distribution of continuous variables\nfeatures = df.columns[1:]\nplt.figure(figsize = (20,20))\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.distplot(df[i[1]])\n    plt.xticks(rotation=90)\nplt.show() ","bf5a1b8b":"# Univariate analysis & Outliers rcognition for continuous variables\nfeatures = df.columns[1:]\nplt.figure(figsize = (20,12))\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.boxplot(df[i[1]])\n    ","fa52db5c":"features = ['child_mort','exports','health','imports','inflation','life_expec','total_fer','gdpp']\nplt.figure(figsize = (20,12))\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.scatterplot(x='income',y=df[i[1]], data=df)\n    ","2b9e53a1":"features = ['child_mort','exports','health','imports','income','inflation','life_expec','total_fer']\nplt.figure(figsize = (20,12))\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.scatterplot(x='gdpp',y=df[i[1]], data=df)","a14be305":"features = ['exports','health','imports','income','inflation','life_expec','total_fer','gdpp']\nplt.figure(figsize = (20,12))\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.scatterplot(x='child_mort',y=df[i[1]], data=df)","1ce50874":"df.corr()","04ef50cc":"plt.figure(figsize=(20, 10))\nsns.heatmap(df.corr(), cmap='YlGnBu',annot=True)","2e16e5ea":"# Clustering was not proper beacuse of outliers,hence caping\/removing outliers \n# Caping child_mort lower outliers and keeping Higher as it will be helpful in clustering more child_mort means country is in need of help\nq1 = df['child_mort'].quantile(0.01)\ndf['child_mort'][df['child_mort']<= q1] = q1\n\n# Caping highier outlier for other variables\nq3_exports = df['exports'].quantile(0.99)\ndf['exports'][df['exports']>= q3_exports] = q3_exports\n\nq3_imports = df['imports'].quantile(0.99)\ndf['imports'][df['imports']>= q3_imports] = q3_imports\n\nq3_health = df['health'].quantile(0.99)\ndf['health'][df['health']>= q3_health] = q3_health\n\nq3_gdpp = df['gdpp'].quantile(0.99)\ndf['gdpp'][df['gdpp']>= q3_gdpp] = q3_gdpp\n\nq3_life_expec = df['life_expec'].quantile(0.99)\ndf['life_expec'][df['life_expec']>= q3_life_expec] = q3_life_expec\n\nq3_income = df['income'].quantile(0.99)\ndf['income'][df['income']>= q3_income] = q3_income\n\nq3_inflation = df['inflation'].quantile(0.99)\ndf['inflation'][df['inflation']>= q3_inflation] = q3_inflation\n\nq3_total_fer = df['total_fer'].quantile(0.99)\ndf['total_fer'][df['total_fer']>= q3_total_fer] = q3_total_fer","3f2daac8":"# Checking data after caping\ndf.describe()","d9272347":"# Visualising univatriate after outlier caping\nfeatures = df.columns[1:]\nplt.figure(figsize = (20,12))\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.boxplot(df[i[1]])","966ea97d":"#Calculating the Hopkins statistic\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\ndef hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","7e84e493":"hopkins(df.drop('country', axis=1))","71db9565":"# scaling\nfrom sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\ndf1= df.drop('country', axis=1)\ndf1 = scaler.fit_transform(df1)","5c66663b":"df1 = pd.DataFrame(df1)\ndf1.columns = df.columns[1:]\ndf1.head()","3d2133c2":"# Let's find out the value of K\n# Silhouette Score\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\nss = []\nfor k in range(2,11):\n    kmeans = KMeans(n_clusters = k).fit(df1)\n    ss.append([k, silhouette_score(df1, kmeans.labels_)])\n    silhouette_avg = silhouette_score(df1, kmeans.labels_)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(k, silhouette_avg))","b851c29a":"# Elbow Curve\nssd = []\nfor k in range(2, 11):\n    kmean = KMeans(n_clusters = k).fit(df1)\n    ssd.append([k, kmean.inertia_])\n    \nplt.plot(pd.DataFrame(ssd)[0], pd.DataFrame(ssd)[1])","c3225bf2":"# K=3 taking 3 cluster\nkmean = KMeans(n_clusters = 3, random_state = 50)\nkmean.fit(df1)","68eda703":"kmean.labels_","40ff8c06":"label = pd.DataFrame(kmean.labels_, columns = ['label'])","2a156aff":"df.kmean = df.copy()","8e658817":"df.kmean = pd.concat([df.kmean, label ], axis =1)","06adec8a":"df.kmean.head()","5c33d24c":"# How many datapoints we have in each cluster\ndf.kmean.label.value_counts()","eb4f000a":"df.kmean.shape","24513cac":"# Doing Visualisation based on child_mortality as based on that will decide for help\nfeatures = ['exports','health','imports','income','inflation','life_expec','total_fer','gdpp']\nplt.figure(figsize = (20,12))\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.scatterplot(x='child_mort',y=df[i[1]], hue = 'label', data = df.kmean, palette = 'Set1')","ce02b878":"features = ['exports','health','imports','income','inflation','life_expec','total_fer','gdpp','child_mort']\nplt.figure(figsize = (20,12))\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.barplot(x='label', y=df[i[1]], data=df.kmean)\n ","ad644819":"# all in one to understand better\ndf.kmean.drop(['country'], axis = 1).groupby('label').mean().plot(figsize=(20,12),kind = 'bar')\nplt.yscale('log')\nplt.show()","a48d7047":"# Cluster Profiling: Based on GDP CHILD MORT INCOME\ndf.kmean.drop('country',axis = 1).groupby('label').mean()","dd83efc5":"df.kmean.drop(['country','exports', \n               'health','imports','inflation',\n               'life_expec','total_fer'], axis = 1).groupby('label').mean().plot(figsize=(20,12),kind = 'bar')\nplt.show()","5a0de257":"# As in above Bar graph Child portality was not visible becase of small scale, hence taking log\n\ndf.kmean.drop(['country','exports', \n               'health','imports','inflation',\n               'life_expec','total_fer'], axis = 1).groupby('label').mean().plot(figsize=(20,12),kind = 'bar')\nplt.yscale('log')\nplt.show()","1dab694a":"# Getting top 5 companies which are in dire need of aid\ndf.kmean[df.kmean['label'] ==1].sort_values(by = ['child_mort','income', 'gdpp'], ascending = [False, True,True]).head(5)","b3c8fb52":"from scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree\ndf1=df.drop('country',axis=1)\nmergings = linkage(df1, method=\"single\", metric='euclidean')\ndendrogram(mergings)\nplt.show()","a5280a0c":"plt.figure(figsize= (18,7))\nmergings = linkage(df1, method=\"complete\", metric='euclidean')\ndendrogram(mergings)\nplt.show()","879a482f":"# By taking horizontal cut at hieght 7000 will get 3 clusters\ncluster_labels = cut_tree(mergings, n_clusters=3).reshape(-1, )\ncluster_labels","1c8dd1e6":"df.hier = df.copy()","625cdc85":"df.hier['label'] = cluster_labels\ndf.hier.head()","a70ca35e":"# How many datapoints we have in each cluster\ndf.hier.label.value_counts()","e0c93e74":"# Checking shape of df.hier\ndf.hier.shape","5435a430":"# Doing Visualisation based on child_mortality as based on that will decide for help\nfeatures = ['exports','health','imports','income','inflation','life_expec','total_fer','gdpp']\nplt.figure(figsize = (20,12))\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.scatterplot(x='child_mort',y=df[i[1]], hue = 'label', data = df.hier, palette = 'Set1')","bea3f1d2":"features = ['exports','health','imports','income','inflation','life_expec','total_fer','gdpp','child_mort']\nplt.figure(figsize = (20,12))\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.barplot(x='label', y=df[i[1]], data=df.hier)","79da5778":"# all in one to understand better\ndf.hier.drop(['country'], axis = 1).groupby('label').mean().plot(figsize=(20,12),kind = 'bar')\nplt.yscale('log')\nplt.show()","caca405a":"df.hier.drop('country',axis = 1).groupby('label').mean()","97533071":"df.hier.drop(['country','exports', \n               'health','imports','inflation',\n               'life_expec','total_fer'], axis = 1).groupby('label').mean().plot(figsize=(20,12),kind = 'bar')\nplt.show()","e41c5251":"# As in above Bar graph Child portality was not visible becase of small scale, hence taking log\nplt.figure(figsize=(10,30))\n\ndf.hier.drop(['country','exports', \n               'health','imports','inflation',\n               'life_expec','total_fer'], axis = 1).groupby('label').mean().plot(figsize=(20,12),kind = 'bar')\nplt.yscale('log')\nplt.show()","62e72572":"df.hier[df.hier['label'] ==0].sort_values(by = ['child_mort','income', 'gdpp' ], ascending = [False, True,True]).head(5)","e4adfea4":"##### 2.3.3 With respect to child_mort","7c3c46b7":"- ##### As hopkins score is good(greater than 80) we are good to go for clustering","131c4075":"##### 2.3.2 With respect to gdpp","f550a915":"- ##### companies belong to Cluster 1(high child_mort,lowincome,lowgdpp) are in dire need of aid","4e4028d4":"- ###### considering both silhouette_score and elbow curve 3 clusters are seems to be good as business point of view also","0ed3ce07":"#### 4.2.5 Getting top 5 companies are in dire need of ais","59b1beb6":"#### 4.1.3 Cluster Profiling","1575ad37":"### 2.4 corelation","cc79c347":"## Step 1: Reading and Understanding the Data","bceed2b8":"##### 4.2.1 Single linkage","e03bdb34":"- ##### Above dendogram is mess as single linkage type produce dendrograms which are not structured properly beacuse the\n         the distance between 2 clusters is defined as the shortest distance between points in the two clusters\n","36a22dbb":"##### 4.1.1 Getting number of clusters based on silhouette and elbow curve","3633245a":"- ##### All factors are distributed normally","bdd2bf9a":"### 4.1 K-Mean clustering","a90c2828":"### 2.1 Univariate Analysis","d49a1e52":"## Step 4: Clustering","0c27aa17":"-  ##### Cluster can be explained as below:\n - ##### Cluster 0:  low export, low health, low imports, low income, high inflation, low life_expec, high total_fer,                               low gdpp,high child_mort\n \n - ##### Cluster 1:  avg export, avg health, avg imports, avg income, avg inflation, avg life_expec, avg total_fer,                                 avg gdpp,avg child_mort\n \n - ##### Cluster 2 : high export, high health, high imports, high income, low inflation, high life_expec, low total_fr,                             high gdpp,low child_mort","9714a4fb":"##### 4.2.2 Complete linkage","9268f96e":"- ##### child_mort is inversely related to health. If health is increases then child_mort decreases\n- ##### child_mort is inversely related to life_expec. If life_expec is increases then child_mort decrease\n- ##### child_mort and total_fert are direcltly related. If total_fert increases then child_mort also increses","63f6c2ff":"### 4.2 Hierarichal clustering","b9f1d186":"- ##### income is inversely related to Child_mort. If income is increases then Child_mort decreases\n- ##### income and gdpp are direcltly related. If income increases then gddp also increses\n- ##### income and total_fer are inversely related.If income is increases then total_fer decreases\n- ##### income and imports,exports are direcltly related. If income increases then imports, exports also increses ","3dc5fce6":"### Scaling","91ae3d7e":"- ##### companies belong to Cluster 0 are in dire need of aid as child mortality is more","42b7b341":"## Step 3: Outlier treatment","54fa4c5a":"#### Conclusion:\n- ##### All continuous variables are having outliers\n- ##### Except life_expec all other variables are havinhg higher outlires \n- ##### There are less outliers for life_expec and total_fer vraiables.\n- ##### Max data for child mortality,total_fer,health,exports,imports,income,gdpp lies between 50th to 75th percentile)\n- ##### Max data for life_excep lies between 25th to 50th percentile","4772d2af":"-  ##### Cluster can be explained as below:\n - ##### Cluster 0 : high export, high health, high imports, high income, low inflation, high life_expec, low total_fer,                             high gdpp,low child_mort\n - ##### Cluster 1:  low export, low health, low imports, low income, high inflation, low life_expec, high total_fer,                               low gdpp,high child_mort\n - ##### Cluster 2:  avg export, avg health, avg imports, avg income, avg inflation, avg life_expec, avg total_fer,                                 avg gdpp,avg child_mort","0694e004":"- ##### There are three clusters based on below criteria for all variables:\n - ##### High\n - ##### Average\n - ##### Low","f4b60118":"#### 4.2.4 Cluster Profiling","a26c310a":"- ##### There are three clusters based on below criteria for all variables:\n - ##### High\n - ##### Average\n - ##### Low","2c6714a3":"- ##### gdpp is inversely related to Child_mort. If gdpp is increases then Child_mort decreases\n- ##### gdpp and health are direcltly related. If gdpp increases then health also increses\n- ##### gdpp and total_fer are inversely related.If gdpp is increases then total_fer decreases\n- ##### gdpp and imports,exports are direcltly related. If gdpp increases then imports, exports also increses ","ce1bd8b6":"- ##### As there are no null values no need to handle that","31ff50a7":"## Step 2: Visualising the Data","72f57662":"- ##### As per the Heat map Exports and imports are higly and directly corelated to each other\n- ##### Child_mort and life_expec are highly inversely corelated\n- ##### Below are inversley corelated Variables \n  - ##### child_mort and gdpp\n  - ##### child_mort and life_expec,\n  - ##### child_mort and income\n  - ##### child_mort and imports\n  - ##### child_mort and health\n  - ##### child_mort and exports\n  - ##### exports and total_fer\n  - ##### exports and inflation\n  - ##### health and inflation\n  - ##### imports and inflation\n  - ##### imports and total_fer\n  - ##### income and inflation\n  - ##### inflation and gdpp\n  - ##### inflation and life_expec\n  - ##### life_expec and total_fer","9ceaa4b2":"# Summary: \n\n- ##### After compairing both algos as K-means are having relative balanced no of countries in all clusters. Hence we can consider K-means as final approach.\n\n- ##### Countries Haiti, Sierra Leone, chad,Central African Republic and Mail are the top 5 companies which are in dire need for add as for these companied child_mortality is high and income and gdpp is low.\n\n- ##### Companies available in K-mean clustering to cluster 1 and in Hierarichal clustering to cluster 0 are the countries which needs aid.","65916985":"### 2.2 Checking Outliers","c5827e20":"- ##### companies belong to Cluster 1 are in dire need of aid as child mortality is more","884ea04d":"#### 4.2.3 Cluster Visualisation","3744f414":"##### 2.3.1 With respect to income","33e2bbb9":"- ##### companies belong to Cluster 1(high child_mort,lowincome,lowgdpp) are in dire need of aid","20c0b287":"#### 4.1.2 Cluster Visualisation","8c07cd7a":"### 2.3 Bivariate Analysis"}}