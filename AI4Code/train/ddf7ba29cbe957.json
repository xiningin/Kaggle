{"cell_type":{"08dd83dd":"code","e83cd226":"code","3b800782":"code","b9d60e34":"code","986e9f78":"code","7a32727c":"code","d08c4a14":"code","32dd220f":"code","ba521d0a":"code","1d5c1a83":"code","db292d57":"code","ae0a88f1":"code","1707f2bd":"code","6a50693b":"code","96814f5a":"markdown","4af8baf4":"markdown","250c788c":"markdown"},"source":{"08dd83dd":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRFmE6Bq1sCqdF41LqIOECs0cjihGQoUXb0_hcMT73YvoQUSDrw',width=400,height=400)","e83cd226":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import feature_extraction, linear_model, model_selection, preprocessing\nimport plotly.graph_objs as go\nimport plotly.offline as py\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3b800782":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSciEj1iWpDNPZUNxW_J2Hu6xhc5ieDR2SkyJjkgINOSFlv7q9G',width=400,height=400)","b9d60e34":"df = pd.read_csv('..\/input\/telugu-nlp\/telugu_news\/test_telugu_news.csv', encoding='ISO-8859-2')","986e9f78":"df.head()","7a32727c":"df.dtypes","d08c4a14":"from wordcloud import WordCloud, STOPWORDS\nstopwords = set(STOPWORDS)\n\ndef show_wordcloud(data, title = None):\n    wordcloud = WordCloud(\n        background_color='black',\n        stopwords=stopwords,\n        max_words=200,\n        max_font_size=40, \n        scale=3,\n        random_state=1 # chosen at random by flipping a coin; it was heads\n).generate(str(data))\n\n    fig = plt.figure(1, figsize=(15, 15))\n    plt.axis('off')\n    if title: \n        fig.suptitle(title, fontsize=20)\n        fig.subplots_adjust(top=2.3)\n\n    plt.imshow(wordcloud)\n    plt.show()\n\nshow_wordcloud(df['heading'])","32dd220f":"cnt_srs = df['heading'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Blues',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Titles distribution',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"heading\")","ba521d0a":"df['heading_length']=df['heading'].apply(len)","1d5c1a83":"plt.figure(figsize=(10,8))\nax=sns.countplot(df['heading'])\nax.set_xlabel(xlabel=\"Headings\",fontsize=17)\nax.set_ylabel(ylabel='No. of Headings',fontsize=17)\nax.axes.set_title('Genuine No. of Headings',fontsize=17)\nax.tick_params(labelsize=13)","db292d57":"sns.set(font_scale=1.4)\nplt.figure(figsize = (10,5))\nsns.heatmap(df.corr(),cmap='coolwarm',annot=True,linewidths=.5)","ae0a88f1":"from sklearn.model_selection import cross_val_score\nfrom scipy.sparse import hstack\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\nall_text=df['heading']\ntrain_text=df['heading']\ny=df['topic']","1707f2bd":"word_vectorizer = TfidfVectorizer(\n    sublinear_tf=True,\n    strip_accents='unicode',\n    analyzer='word',\n    token_pattern=r'\\w{1,}',\n    stop_words='english',\n    ngram_range=(1, 1),\n    max_features=10000)\nword_vectorizer.fit(all_text)\ntrain_word_features = word_vectorizer.transform(train_text)","6a50693b":"char_vectorizer = TfidfVectorizer(\n    sublinear_tf=True,\n    strip_accents='unicode',\n    analyzer='char',\n    stop_words='english',\n    ngram_range=(2, 6),\n    max_features=50000)\nchar_vectorizer.fit(all_text)\ntrain_char_features = char_vectorizer.transform(train_text)\n\ntrain_features = hstack([train_char_features, train_word_features])","96814f5a":"quotesgardentegulu.in","4af8baf4":"Kaggle Notebook Runner: Mar\u00edlia Prata @mpwolke","250c788c":"bhakthiworld.com"}}