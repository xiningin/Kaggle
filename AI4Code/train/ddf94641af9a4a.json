{"cell_type":{"57f30749":"code","9c370bda":"code","a8249635":"code","4eb936c6":"code","a786bf6b":"code","317058ad":"code","33b14c6e":"code","9dfe8ffa":"code","bd5c9721":"code","b8202d36":"code","f0c89938":"code","e5c36389":"code","14d74376":"code","04cb27ef":"code","751f0d30":"code","a053be39":"code","5787d9e1":"code","546f055f":"code","b443ff79":"code","3177b008":"code","a0281d01":"code","1e06ab20":"code","f0bf71a8":"code","0c33a64a":"code","29e8815c":"code","d263ca36":"code","e6f4e882":"code","1d20d972":"code","07b8e31f":"code","97e9873c":"code","df67b679":"code","14776b12":"code","11a912fc":"code","87b51e02":"code","70b80e1d":"code","c53ab883":"code","ff7736cd":"code","c3a0879e":"code","43959069":"code","36854379":"code","02475cb1":"markdown","278ddc48":"markdown","9dad7af4":"markdown","cca39dbd":"markdown","3f172a85":"markdown","3a919331":"markdown","fcf7e8d1":"markdown","746616c7":"markdown","f786b17e":"markdown","9e9664ff":"markdown","8d4e16a9":"markdown","1a1b93ef":"markdown","3092800b":"markdown","ee6c5ea1":"markdown","9134675b":"markdown","0c574df7":"markdown","c57a949f":"markdown","b7340c93":"markdown","5d451d17":"markdown","841f8cd0":"markdown","ae05074d":"markdown","3a709c6b":"markdown","40430421":"markdown","51ba916a":"markdown","6b363fd4":"markdown","a8330dfd":"markdown","2beb187b":"markdown","3ae659d4":"markdown","d6b65b53":"markdown","9a908bab":"markdown","569648bd":"markdown"},"source":{"57f30749":"import pandas as pd\n\ndir_path =  '..\/input\/indian gdp vs dropout rate\/Indian GDP vs Dropout rate\/'\n\ndf = pd.read_csv(dir_path+'Data I-A\/GSDP.csv')\n\ndf.columns = [c.replace(' ', '_') for c in df.columns] # replacing column spaces with '_' for easy access\n\ndf_Del_2016_17 = df.loc[df.Duration != '2016-17'] #removing 2016-17 data from the dataset\n\ndf_Del_2016_17 # dataframe contains all the values in the given dataset except 2016-17 data","9c370bda":"# Calculating the average growth of states over the duration 2013-14, 2014-15 and 2015-16 by taking the mean of the row '(% Growth over previous year)'\n\nAvg_grw_rate_states = df_Del_2016_17.loc[(df.Items__Description == \"(% Growth over previous year)\")&(df.Duration != '2012-13')].mean(axis=0)\n\n# Dropping All_India_GDP column since we are concentrating only on States and at same time removing null valued fields.\n\nAvg_grw_rate_transformd = Avg_grw_rate_states.drop([\"All_India_GDP\"]).dropna() \n\n# Comparison chart for all states for average growth of states in percentage\n\nAvg_grw_rate_transformd","a8249635":"# Plotting the calcualted (average growth of states in percentage) value to the states in Increasing order.\n\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(15,5))\n\nAvg_grw_rate_transformd.sort_values().plot(kind='bar')\n\nplt.ylabel('Average Growth Rate');plt.xlabel('All States Of India')\n\nplt.title('AVerage Growth Rates Of States from 2013-2016')\n\nplt.show()","4eb936c6":"Avg_grw_rate_states['Tamil_Nadu']","a786bf6b":"Avg_grw_rate_states['Tamil_Nadu']\/Avg_grw_rate_states['All_India_GDP'] ","317058ad":"plt.figure(figsize=(14,6))\n\n# In the below line of Code, First, we are selecting the required rows using:[(df.Items__Description == \"GSDP - CURRENT PRICES (` in Crore)\")&(df.Duration == '2015-16')]\n\n# Second, we are selecting the required columns (using: iloc[:,2:-1]), by removing the columns: (Items__Description, Duration) and keeping only the states.\n\n# Third, we are transposing the dataframe for the benefit of plotting, insted of keeping it as a single row dataframe. Transposing will automatically convert columns into index.\n\n# Fourth, converting the entire dataframe into a series by selecting the last column using: iloc[:,-1], this will give clean plotting.\n\n# Fifth, sorting the values (using: sort_values()) so that while plotting the graph it will be in order.\n\n# Sixth, dropping all states that are havong null values (using: dropna())\n\n# Seventh, plotting the bar graph using: plot(kind='bar'), this will take the give series into y-axis and its index as x-axis.\n\ndf_Del_2016_17.loc[(df.Items__Description == \"GSDP - CURRENT PRICES (` in Crore)\")&(df.Duration == '2015-16')].iloc[:,2:-1].T.iloc[:,-1].sort_values().dropna().plot(kind='bar') \n\nplt.ylabel('GSDP - CURRENT PRICES (in Crore)'); plt.xlabel('All States Of India')\n\nplt.title('Total GDP for the Year 2015-2016')\n\nplt.show()","33b14c6e":"import glob, os   \n\n# Reading all the states csv files and creating an array with the file names.\n\nfile_paths = glob.glob(os.path.join(dir_path+\"\/Data I-B\/\",\"*.csv\"))\n\n# We are performing the analysis only for the duration : 2014-15 as requested in step 1\n\nreq_columns = ['S.No.','Item','2014-15'] \n\n# Below code is used to remove the union territories while creating the data frame \n\nunion_terr = ['Delhi', 'Chandigarh', 'Puducherry', 'Andaman & Nicobar Islands', 'Lakshadweep', 'Daman & Diu, Dadra & Nagar Haveli']\n\n# Creating a single dataframe (df_all_states) by merging all CSV files and creating a new column State, as per the order of below steps. \n\n# First, read the csv files using: pd.read_csv(i, encoding = 'ISO8859', usecols=req_columns), ISO encoding is used since unicode encoding is not reading the white spaces properly, throwing errors.\n\n# Second, creating a new column 'State' using: assign(State = i.split('-')[2].replace('_',' '), we are splitting the file name and getting the column name from it.\n\n# Third, we are replacing the column names from 'Tamil_Nadu' to 'Tamil Nadu' using: replace('_',' ')\n\n# Fourth, we are using the variables req_columns and union_terr respectively, to use on the required columns and remove union territories.\n\ndf_all_states = pd.concat([pd.read_csv(i, encoding = 'ISO8859', usecols=req_columns).assign(State = i.split('-')[2].replace('_',' ')) \n                for i in file_paths if i.split('-')[2].replace('_',' ') not in union_terr])\n\ndf_all_states # This dataframe has all datas merged from all CSV files plus a new column state to represent its respective states.\n","9dfe8ffa":"plt.figure(figsize=(14,6))\n\n# From the below code, first, selecting the necessary rows using: loc[(df_all_states.Item == \"Per Capita GSDP (Rs.)\")]\n\n# Second, selecting the necassry columns: State and 2014-15 using: iloc[:,2:]  \n\n# Third, we are sorting the values using: sort_values(by = '2014-15'), so that it will be in order while plotting.\n\n# Fouth, we are setting the index of this dataframe as 'State' column.\n\n# Fifth, converting the dataframe into series, which will be helpful for clean plotting.\n\n# Sixth, plotting the graph using: plot(kind='bar'), this will take y-axis as given series and its index (State) as x-axis.\n\ndf_all_states.loc[(df_all_states.Item == \"Per Capita GSDP (Rs.)\")].iloc[:,2:].sort_values(by = '2014-15').set_index('State').iloc[:,-1].plot(kind='bar')\n\nplt.ylabel('Per Capita GSDP (Rs.) ')\n\nplt.xlabel('All States Of India')\n\nplt.show()","bd5c9721":"df_all_states.loc[(df_all_states.State == \"Goa\")&(df_all_states.Item == \"Per Capita GSDP (Rs.)\")].iloc[:,-2].T[32] \/ df_all_states.loc[(df_all_states.State == \"Bihar\")&(df_all_states.Item == \"Per Capita GSDP (Rs.)\")].iloc[:,-2].T[32]","b8202d36":"# Selecting required rows and columns using: loc[(df_all_states.Item == \"Gross State Domestic Product\")][['2014-15','State']]\n\n# Renaming the column for convenience.\n\ndf_total_GDP = df_all_states.loc[(df_all_states.Item == \"Gross State Domestic Product\")][['2014-15','State']].rename(columns={'2014-15':'GSDP'})\n\ndf_total_GDP.head() ","f0c89938":"df_prim_sec_ter = df_all_states.loc[(df_all_states.Item == \"Primary\")][['2014-15','State']].rename(columns={'2014-15':'Primary_GSVA'}) # same as above\n\n# Merging primary and seconday using state as common column\n\ndf_prim_sec_ter = pd.merge(df_prim_sec_ter, df_all_states.loc[(df_all_states.Item == \"Secondary\")][['2014-15','State']], how = 'inner', on = 'State').rename(columns={'2014-15':'Secondary_GSVA'})\n\n# Merging primary, seconday and tertiary using state as common column\n\ndf_prim_sec_ter = pd.merge(df_prim_sec_ter, df_all_states.loc[(df_all_states.Item == \"Tertiary\")][['2014-15','State']], how = 'inner', on = 'State').rename(columns={'2014-15':'Tertiary_GSVA'})\n\ndf_prim_sec_ter.head()","e5c36389":"# Merging the dataframes: df_prim_sec_ter, df_total_GDP to get the result as shown in below table.\n\ndf_total_GDP_pri_sec_ter = pd.merge(df_prim_sec_ter, df_total_GDP, how = 'inner', on = 'State')\n\ndf_total_GDP_pri_sec_ter.head()","14d74376":"# Creting a new column to calculate the percentage contribution of primary\n\ndf_total_GDP_pri_sec_ter['%_Primary_Contribution'] = (df_total_GDP_pri_sec_ter['Primary_GSVA']\/df_total_GDP_pri_sec_ter['GSDP'])*100\n\n# Creting a new column to calculate the percentage contribution of Secondary\n\ndf_total_GDP_pri_sec_ter['%_Secondary_Contribution'] = (df_total_GDP_pri_sec_ter['Secondary_GSVA']\/df_total_GDP_pri_sec_ter['GSDP'])*100\n\n# Creting a new column to calculate the percentage contribution of Tertiary\n\ndf_total_GDP_pri_sec_ter['%_Tertiary_Contribution'] = (df_total_GDP_pri_sec_ter['Tertiary_GSVA']\/df_total_GDP_pri_sec_ter['GSDP'])*100\n\n# Creting a new column to calculate the percentage contribution of all sectors\n\ndf_total_GDP_pri_sec_ter['Total_pri_sec_tri_%'] = df_total_GDP_pri_sec_ter['%_Primary_Contribution']+df_total_GDP_pri_sec_ter['%_Secondary_Contribution']+df_total_GDP_pri_sec_ter['%_Tertiary_Contribution']\n\n# Sorting the dataframe to keep it in order.\n\ndf_total_GDP_pri_sec_ter = df_total_GDP_pri_sec_ter.sort_values(by='Total_pri_sec_tri_%',ascending=False)\n\ndf_total_GDP_pri_sec_ter.head()","04cb27ef":"# Plotting a Stacke bar-chart to represent the percentage contribution of primary, secondary and tertiary sectors as a percentage of total GDP for all the states.\n\nimport numpy as np\n\nPrimary = df_total_GDP_pri_sec_ter['%_Primary_Contribution']\n\nSecondary = df_total_GDP_pri_sec_ter['%_Secondary_Contribution']\n\nTertiary = df_total_GDP_pri_sec_ter['%_Tertiary_Contribution']\n\nStates = df_total_GDP_pri_sec_ter['State']   # the x locations for the groups\n\nplt.figure(figsize=(14,6))\n\np1 = plt.bar(States, Primary)\n\np2 = plt.bar(States, Secondary, bottom=Primary)\n\np3 = plt.bar(States, Tertiary, bottom=np.array(Primary)+np.array(Secondary))\n\nplt.ylabel('Total GSDP Percentage (%)')\n\nplt.title('Percentage Contribution of Each sector to GSDP')\n\nplt.xticks(States,rotation=90)\n\nplt.yticks(np.arange(0, 110, 10)); plt.xlabel('All States Of India')\n\nplt.legend((p1[0], p2[0], p3[0]), ('Primary', 'Secondary', 'Tertiary'))\n\nplt.show()","751f0d30":"# Creating a dataframe by selecting necessay column from df_all_states using: loc[df_all_states.Item=='Per Capita GSDP (Rs.)'] and renaming the columns for convenince using: rename(columns = {'2014-15':'per_capita_GSDP'}\n\nstates_per_capita_sorted = df_all_states.loc[df_all_states.Item=='Per Capita GSDP (Rs.)'].sort_values(by='2014-15')[['2014-15','State']].rename(columns = {'2014-15':'per_capita_GSDP'})\n\nstates_per_capita_sorted.head()","a053be39":"# Creating the categories C1, C2, C3, C4\n\nq1 = round(27*0.20) # total sttes count in the given dataset is 27.\n\nq2 = round(27*0.5)\n\nq3 = round(27*0.85)\n\nq4 = round(27*1)\n\nc4 = states_per_capita_sorted.iloc[:q1,:]\n\nc3 = states_per_capita_sorted.iloc[q1:q2,:]\n\nc2 = states_per_capita_sorted.iloc[q2:q3,:]\n\nc1 = states_per_capita_sorted.iloc[q3:q4,:]","5787d9e1":"c4 # States within the percentile 0-20 as per 'per_capita_GSDP'","546f055f":"c3 # States within the percentile 20-50 as per 'per_capita_GSDP'","b443ff79":"c2 # States within the percentile 50-85 as per 'per_capita_GSDP'","3177b008":"c1 # States within the percentile 85-100 as per 'per_capita_GSDP'","a0281d01":"# Get all the fields that belong to the c1 states\n\ndf_C1 = df_all_states.loc[df_all_states.State.isin(c1.State)&(df_all_states['S.No.']!='Total')&\n        (~df_all_states['Item'].isin(['TOTAL GSVA at basic prices','Taxes on Products','Subsidies on products',\"Population ('00)\",'Per Capita GSDP (Rs.)']))]\n\n# Keeping only the necessary fields and grouping and sorting as required\n\ndf_C1 = df_C1[['Item','2014-15']].groupby(by='Item').sum().sort_values(by='2014-15',ascending=False).reset_index()\n\n# Creating a new column Percentage_of_GSDP for easy analysis\n\ndf_C1['%_of_GSDP_Contribution'] = df_C1['2014-15']\/(df_C1['2014-15'][0])*100 # here index index 0 has GSDP since we have sorted in descending order\n\n# Finding which are the Sub-sectors that contribute approximately 80% to the GSDP (It should be 3 or more)\n\nstart =1; End = 4 # Takinfg first top 3 sectors initially to check whether it contributes approximately 80%. Starting with 1 to avoid first row which is GSDP\n\nwhile df_C1.iloc[start:End ,-1].sum() <= 78: #considering anything less than or equal to 78% does not contribute 80% approximately, only equal to greater than 79% does.\n    End = End+1\n    \n# Contribution of subsectors approximately 80% For category C1 to the total GSDP are as follows\n\nC1_Sub_Sectors_contributes_80_percent_apprx = df_C1[['Item','%_of_GSDP_Contribution']].iloc[start:End].append({'Item':'ABOVE C1 SUB-SECTORS EXACT CONTRIBUTION =','%_of_GSDP_Contribution':round(df_C1.iloc[start:End ,-1].sum(),2)},ignore_index=True).rename(columns={'Item':'C1_Sub_Sectors_that_contributes_80%_approximately_to_GSDP_in_Total'})\n\nC1_Sub_Sectors_contributes_80_percent_apprx","1e06ab20":"plt.figure(figsize=(14,6))\n\n# Selecting the required rows and columns using: iloc[:-1,:]['%_of_GSDP_Contribution'] and plotting the graph using: plot(kind='bar')\n\nC1_Sub_Sectors_contributes_80_percent_apprx.set_index(\"C1_Sub_Sectors_that_contributes_80%_approximately_to_GSDP_in_Total\").iloc[:-1,:]['%_of_GSDP_Contribution'].plot(kind='bar')\n\nplt.ylabel('Sub Sectors GSDP Percentage (%)'); plt.xlabel('Sub-Sectors of C1')\n\nplt.title('Top Sub Sectors That Contributed 80% (approx) of the C1 GSDP. Exact Contribution is: {0}%'.format(C1_Sub_Sectors_contributes_80_percent_apprx.iloc[-1:,-1:].values[0][0]))\n\nplt.show()","f0bf71a8":"# Get all the fields that belong to the c2 states\n\ndf_C2 = df_all_states.loc[df_all_states.State.isin(c2.State)&(df_all_states['S.No.']!='Total')&\n        (~df_all_states['Item'].isin(['TOTAL GSVA at basic prices','Taxes on Products','Subsidies on products',\"Population ('00)\",'Per Capita GSDP (Rs.)']))]\n\n# Keeping only the necessary fields and grouping and sorting as required\n\ndf_C2 = df_C2[['Item','2014-15']].groupby(by='Item').sum().sort_values(by='2014-15',ascending=False).reset_index()\n\n# Creating a new column Percentage_of_GSDP for easy analysis\n\ndf_C2['%_of_GSDP_Contribution'] = df_C2['2014-15']\/(df_C2['2014-15'][0])*100 # here index index 0 has GSDP since we have sorted in descending order\n\n# Finding which are the Sub-sectors that contribute approximately 80% to the GSDP (It should be 3 or more)\n\nstart =1; End = 4 # Takinfg first top 3 sectors initially to check whether it contributes approximately 80%. Starting with 1 to avoid first row which is GSDP\n\nwhile df_C2.iloc[start:End ,-1].sum() <= 78: #considering anything less than or equal to 78% does not contribute 80% approximately, only equal to greater than 79% does.\n    End = End+1\n    \n# Contribution of subsectors approximately 80% For category C2 to the total GSDP are as follows\n\nC2_Sub_Sectors_contributes_80_percent_apprx = df_C2[['Item','%_of_GSDP_Contribution']].iloc[start:End].append({'Item':'ABOVE C2 SUB-SECTORS EXACT CONTRIBUTION =','%_of_GSDP_Contribution':round(df_C2.iloc[start:End ,-1].sum(),2)},ignore_index=True).rename(columns={'Item':'C2_Sub_Sectors_that_contributes_80%_approximately_to_GSDP_in_Total'})\n\nC2_Sub_Sectors_contributes_80_percent_apprx","0c33a64a":"plt.figure(figsize=(14,6))\n\n# Selecting the required rows and columns using: iloc[:-1,:]['%_of_GSDP_Contribution'] and plotting the graph using: plot(kind='bar')\n\nC2_Sub_Sectors_contributes_80_percent_apprx.set_index(\"C2_Sub_Sectors_that_contributes_80%_approximately_to_GSDP_in_Total\").iloc[:-1,:]['%_of_GSDP_Contribution'].plot(kind='bar')\n\nplt.ylabel('Sub Sectors GSDP Percentage (%)');plt.xlabel('Sub-Sectors of C2')\n\nplt.title('Top Sub Sectors That Contributed 80% (approx) of the C2 GSDP. Exact Contribution is: {0}%'.format(C2_Sub_Sectors_contributes_80_percent_apprx.iloc[-1:,-1:].values[0][0]))\n\nplt.show()","29e8815c":"# Get all the fields that belong to the c3 states\n\ndf_C3 = df_all_states.loc[df_all_states.State.isin(c3.State)&(df_all_states['S.No.']!='Total')&\n        (~df_all_states['Item'].isin(['TOTAL GSVA at basic prices','Taxes on Products','Subsidies on products',\"Population ('00)\",'Per Capita GSDP (Rs.)']))]\n\n# Keeping only the necessary fields and grouping and sorting as required\n\ndf_C3 = df_C3[['Item','2014-15']].groupby(by='Item').sum().sort_values(by='2014-15',ascending=False).reset_index()\n\n# Creating a new column Percentage_of_GSDP for easy analysis\n\ndf_C3['%_of_GSDP_Contribution'] = df_C3['2014-15']\/(df_C3['2014-15'][0])*100 # here index index 0 has GSDP since we have sorted in descending order\n\n# Finding which are the Sub-sectors that contribute approximately 80% to the GSDP (It should be 3 or more)\n\nstart =1; End = 4 # Takinfg first top 3 sectors initially to check whether it contributes approximately 80%. Starting with 1 to avoid first row which is GSDP\n\nwhile df_C3.iloc[start:End ,-1].sum() <= 78: #considering anything less than or equal to 78% does not contribute 80% approximately, only equal to greater than 79% does.\n    End = End+1\n    \n# Contribution of subsectors approximately 80% For category C3 to the total GSDP are as follows\n\nC3_Sub_Sectors_contributes_80_percent_apprx = df_C3[['Item','%_of_GSDP_Contribution']].iloc[start:End].append({'Item':'ABOVE C3 SUB-SECTORS EXACT CONTRIBUTION =','%_of_GSDP_Contribution':round(df_C3.iloc[start:End ,-1].sum(),2)},ignore_index=True).rename(columns={'Item':'C3_Sub_Sectors_that_contributes_80%_approximately_to_GSDP_in_Total'})\n\nC3_Sub_Sectors_contributes_80_percent_apprx","d263ca36":"plt.figure(figsize=(14,6))\n\n# Selecting the required rows and columns using: iloc[:-1,:]['%_of_GSDP_Contribution'] and plotting the graph using: plot(kind='bar')\n\nC3_Sub_Sectors_contributes_80_percent_apprx.set_index(\"C3_Sub_Sectors_that_contributes_80%_approximately_to_GSDP_in_Total\").iloc[:-1,:]['%_of_GSDP_Contribution'].plot(kind='bar')\n\nplt.ylabel('Sub Sectors GSDP Percentage (%)'); plt.xlabel('Sub-Sectors of C3')\n\nplt.title('Top Sub Sectors That Contributed 80% (approx) of the C3 GSDP. Exact Contribution is: {0}%'.format(C3_Sub_Sectors_contributes_80_percent_apprx.iloc[-1:,-1:].values[0][0]))\n\nplt.show()","e6f4e882":"# Get all the fields that belong to the c4 states\n\ndf_C4 = df_all_states.loc[df_all_states.State.isin(c4.State)&(df_all_states['S.No.']!='Total')&\n        (~df_all_states['Item'].isin(['TOTAL GSVA at basic prices','Taxes on Products','Subsidies on products',\"Population ('00)\",'Per Capita GSDP (Rs.)']))]\n\n# Keeping only the necessary fields and grouping and sorting as required\n\ndf_C4 = df_C4[['Item','2014-15']].groupby(by='Item').sum().sort_values(by='2014-15',ascending=False).reset_index()\n\n# Creating a new column Percentage_of_GSDP for easy analysis\n\ndf_C4['%_of_GSDP_Contribution'] = df_C4['2014-15']\/(df_C4['2014-15'][0])*100 # here index index 0 has GSDP since we have sorted in descending order\n\n# Finding which are the Sub-sectors that contribute approximately 80% to the GSDP (It should be 3 or more)\n\nstart =1; End = 4 # Takinfg first top 3 sectors initially to check whether it contributes approximately 80%. Starting with 1 to avoid first row which is GSDP\n\nwhile df_C4.iloc[start:End ,-1].sum() <= 78: #considering anything less than or equal to 78% does not contribute 80% approximately, only equal to greater than 79% does.\n    End = End+1\n    \n# Contribution of subsectors approximately 80% For category C4 to the total GSDP are as follows\n\nC4_Sub_Sectors_contributes_80_percent_apprx = df_C4[['Item','%_of_GSDP_Contribution']].iloc[start:End].append({'Item':'ABOVE C4 SUB-SECTORS EXACT CONTRIBUTION =','%_of_GSDP_Contribution':round(df_C4.iloc[start:End ,-1].sum(),2)},ignore_index=True).rename(columns={'Item':'C4_Sub_Sectors_that_contributes_80%_approximately_to_GSDP_in_Total'})\n\nC4_Sub_Sectors_contributes_80_percent_apprx","1d20d972":"plt.figure(figsize=(14,6))\n\n# Selecting the required rows and columns using: iloc[:-1,:]['%_of_GSDP_Contribution'] and plotting the graph using: plot(kind='bar')\n\nC4_Sub_Sectors_contributes_80_percent_apprx.set_index(\"C4_Sub_Sectors_that_contributes_80%_approximately_to_GSDP_in_Total\").iloc[:-1,:]['%_of_GSDP_Contribution'].plot(kind='bar')\n\nplt.ylabel('Sub Sectors GSDP Percentage (%)'); plt.xlabel('Sub-Sectors of C4')\n\nplt.title('Top Sub Sectors That Contributed 80% (approx) of the C4 GSDP. Exact Contribution is: {0}%'.format(C4_Sub_Sectors_contributes_80_percent_apprx.iloc[-1:,-1:].values[0][0]))\n\nplt.show()","07b8e31f":"print('AVG of C1 GSDP: ',round(int(df_C1.iloc[0,1])\/c1.shape[0]),', Per-capita AVG of C1 :', round(c1['per_capita_GSDP'].mean()))\n\nprint('AVG of C2 GSDP: ',round(int(df_C2.iloc[0,1])\/c2.shape[0]),', Per-capita AVG of C2 :', round(c2['per_capita_GSDP'].mean()))\n\nprint('AVG of C3 GSDP: ',round(int(df_C3.iloc[0,1])\/c3.shape[0]),', Per-capita AVG of C3 :', round(c3['per_capita_GSDP'].mean()))\n\nprint('AVG of C4 GSDP: ',round(int(df_C4.iloc[0,1])\/c4.shape[0]),', Per-capita AVG of C4 :', round(c4['per_capita_GSDP'].mean()))","97e9873c":"df_all_states[['Item','2014-15']].groupby('Item').sum().sort_values(by = '2014-15', ascending=False).head(11)","df67b679":"# Sub-sectors that needs to be concentrated are the one's that are contributing lowest to the GSDP.\n\nprint('Sub-sectors to be concentrated for C1: ',df_C1['Item'].tail().values,'\\n') \n\nprint('Sub-sectors to be concentrated for C2: ',df_C2['Item'].tail().values, '\\n')\n\nprint('Sub-sectors to be concentrated for C3: ',df_C3['Item'].tail().values, '\\n')\n\nprint('Sub-sectors to be concentrated for C4: ',df_C4['Item'].tail().values, '\\n')\n\n# Note: Sub-sectors in the dataframes df_C1,df_C2,df_C3,df_C4 is already aranged in descending order based on GSDP contribution ","14776b12":"df_drp_out = pd.read_csv(dir_path+'Data II\/DropOut rate.csv')\ndf_drp_out.head()","11a912fc":"# As seen above there are two similar columns \"Primary - 2014-2015\",\"Primary - 2014-2015.1\" \n# This is because both these columns have same name in the given data set. \n# So changing the names of columns accordingly as: 'Primary - 2013-2014' and 'Primary - 2014-2015'\n# We are alos changing the column name: \"Level of Education - State\" as \"State\" for convenience.\n\ndf_drp_out = df_drp_out.rename(columns = {'Primary - 2014-2015':'Primary - 2013-2014','Primary - 2014-2015.1':'Primary - 2014-2015','Level of Education - State':'State'})\ndf_drp_out","87b51e02":"# considering only for the year 2014-15 and for the class: primary, upper primary and secondary, as requested.\n\ndf_drp_out = df_drp_out[['State','Primary - 2014-2015','Upper Primary - 2014-2015','Secondary - 2014-2015']]\n\ndf_drp_out.head()","70b80e1d":"# Dropping the states that are having null values. Here we are not using fillna command to fill the mean, median or mode because there is a hude difference between the dropout rates between each states. \n\ndf_drp_out = df_drp_out.dropna(how='any')\n\ndf_drp_out","c53ab883":"# In above States other than union territories and the deleted states that had Null Values we have two states with wrong name (Uttrakhand and Chhatisgarh)\n# We are going to correct the names to Uttarakhand and Chhattisgarh. If not while merging the columns with the part-1 df which had per-capita values, we will miss these 2 rows.\n\ndf_drp_out = df_drp_out.replace(['Chhatisgarh','Uttrakhand'],['Chhattisgarh','Uttarakhand'])\n\ndf_drp_out","ff7736cd":"# Merging two dataframes to get the per-capita-GSDP and the dropout rate in the same frame.\n\ndf_drpout_percap = pd.merge(df_all_states[df_all_states.Item=='Per Capita GSDP (Rs.)'], df_drp_out, how = 'inner', on = 'State')\n\ndf_drpout_percap","c3a0879e":"# Adding a new column in above df: 'Total_dropout_in_2014-15'\n\ndf_drpout_percap['Total_dropout_in_2014-15'] = df_drpout_percap.iloc[:,-3:].sum(axis = 1)\n\ndf_drpout_percap","43959069":"# Plotting agains Dropout rates and GSDP\n\nx = df_drpout_percap['2014-15'].values # per-capita GSDP\n\ny1 = df_drpout_percap['Primary - 2014-2015'].values # primary dropout\n\ny2 = df_drpout_percap['Upper Primary - 2014-2015'].values # upper primary dropout\n\ny3 = df_drpout_percap['Secondary - 2014-2015'].values # Secondary dropout\n\ny4 = df_drpout_percap['Total_dropout_in_2014-15'].values # Total_dropout_in_2014-15\n\nplt.figure(figsize=(14,12))\n\nplt.subplot(221)\n\nplt.title('GSDP vs Dropout Rate in Primary During 2014-2015')\n\nplt.xlabel('GSDP in Crores (Rs.)')\n\nplt.ylabel('Dropout rate in Percentage')\n\nplt.scatter(x,y1)\n\nplt.subplot(222)\n\nplt.title('GSDP vs Dropout Rate in Upper-Primary During 2014-2015')\n\nplt.xlabel('GSDP in Crores (Rs.)')\n\nplt.ylabel('Dropout rate in Percentage')\n\nplt.scatter(x,y2)\n\nplt.subplot(223)\n\nplt.title('GSDP vs Dropout Rate in Secondary During 2014-2015')\n\nplt.xlabel('GSDP in Crores (Rs.)')\n\nplt.ylabel('Dropout rate in Percentage')\n\nplt.scatter(x,y3)\n\nplt.subplot(224)\n\nplt.title('GSDP vs Total Dropout Rate During 2014-2015')\n\nplt.xlabel('GSDP in Crores (Rs.)')\n\nplt.ylabel('Dropout rate in Percentage')\n\nplt.scatter(x,y4)\n\nplt.show()\n","36854379":"############# Function to viualise the Linear regression line  ################\n\nfrom numpy import *\nimport matplotlib.pyplot as plt\n\ndef plot_best_fit(intercept, slope):\n    axes = plt.gca()\n    x_vals = array(axes.get_xlim())\n    y_vals = intercept + slope * x_vals\n    plt.plot(x_vals, y_vals, 'r-')\n\n############# Utilising Linear Regression Algorithm from Sklearn #############\n\nfrom sklearn.linear_model import LinearRegression\n    \ndef Regression(X,Y):   \n    regr = LinearRegression()\n    regr.fit(X,Y)\n    return regr\n\n######################### Main Code To Plot the Graph ##########################\n\nplt.figure(figsize=(14,12))\n\nplt.subplot(221)\n\nplt.scatter(x,y1)\n\nregr = Regression(x.reshape(-1,1) ,y1.reshape(-1,1))\n\nplot_best_fit((regr.intercept_)[0],(regr.coef_)[0][0])\n\nplt.title('GSDP vs Dropout Rate in Primary During 2014-2015 (Fig 1)')\n\nplt.xlabel('GSDP in Crores (Rs.)')\n\nplt.ylabel('Dropout rate in Percentage')\n\nplt.subplot(222)\n\nplt.scatter(x,y2)\n\nregr = Regression(x.reshape(-1,1) ,y2.reshape(-1,1))\n\nplot_best_fit((regr.intercept_)[0],(regr.coef_)[0][0])\n\nplt.title('GSDP vs Dropout Rate in Upper-Primary During 2014-2015 (Fig 2)')\n\nplt.xlabel('GSDP in Crores (Rs.)')\n\nplt.ylabel('Dropout rate in Percentage')\n\nplt.subplot(223)\n\nplt.scatter(x,y3)\n\nregr = Regression(x.reshape(-1,1) ,y3.reshape(-1,1))\n\nplot_best_fit((regr.intercept_)[0],(regr.coef_)[0][0])\n\nplt.title('GSDP vs Dropout Rate in Secondary During 2014-2015 (Fig 3)')\n\nplt.xlabel('GSDP in Crores (Rs.)')\n\nplt.ylabel('Dropout rate in Percentage')\n\nplt.subplot(224)\n\nplt.scatter(x,y4)\n\nregr = Regression(x.reshape(-1,1) ,y4.reshape(-1,1))\n\nplot_best_fit((regr.intercept_)[0],(regr.coef_)[0][0])\n\nplt.title('GSDP vs Total Dropout Rate During 2014-2015 (Fig 4)')\n\nplt.xlabel('GSDP in Crores (Rs.)')\n\nplt.ylabel('Dropout rate in Percentage')\n\nplt.show()","02475cb1":"**Please Note:** The above Scatter plot roughly shows that there is an increase in GSDP with decrease in Dropout rate. Let's try to get a Deep insight using the Linear regression model. ","278ddc48":"**STEP 3:** Plotting the total GDP of the states for the year 2015-16: ","9dad7af4":"**Recommendation 2:**\n\nIf the government could not stop the losses happening as mentioned above we have to start shifting the distribution of GDP to the sub-sectors which are contributing high. **In general to sectors**, **shifting the distribution of GDP towards the secondary and tertiary** sectors which are contributing very high compared to primary.","cca39dbd":"**STEP 2:** Calculate the average growth of states over the duration 2013-14, 2014-15 and 2015-16 by taking the mean of the row '(% Growth over previous year)'. Compare the calculated value and plot it for the states. Make appropriate transformations if necessary to plot the data.","3f172a85":"PART 1A:\n--------","3a919331":"* Top 5 states based on total GSD as per the above plot are: Tamil Nadu, Uttar_Pradesh, Karnataka, Gujarat, Andhra_pradesh\n\n* Bottom 5 stated based on the total GSD are as follows: Sikkim, Arunachal_pradesh, Puduchery, Meghalaya and Chandigarh","fcf7e8d1":"**QUESTION 3.**  Which sub-sectors do the various categories need to focus on? \n","746616c7":"**STEP4:**  Plot the percentage contribution of primary, secondary and tertiary sectors as a percentage of total GDP for all the states.","f786b17e":"**STEP3:** Plot the GDP per capita for all the states.","9e9664ff":"**STEP 6:** Summarising and getting the insight:","8d4e16a9":"   **Solution 1:**\n    \n   From the above groupby chart (based on all state GSDP) we could see that the sub-sectors (max GDP contributors) that are correlated to high GDP are: \n    \n        1. Agri,forestry, fishing  \n        2. Manufacturing  \n        3. real estate..  \n        4. Trade, repair, hotels..     \n        \n       \n   **Solution 2:**\n    \n   Based on Categories we could see that the category that contributed maximum to the GDP is C2 (AVG is 65153384). So the sub-sectors that are correlated to (max contributed) highest GSDP based on category are:\n    \n        1. Manufacturing\t\n        2. Real estate, ownership of dwelling & professio...\n        3. Agriculture, forestry and fishing\t\n        4. Trade, repair, hotels and restaurants\t\n        5. Trade & repair services\n        6. Crops\t\n        7. Construction    ","1a1b93ef":"\nPart-I: GDP Analysis of Indian States\n======================================\n","3092800b":"**Hypothesis based on the above graphs:** \n\n* Considering Fig 1,2,3,4, In general, there is a steady increase in GSDP by the decrease in dropout rate \n\n* Comparing Fig 1 and 2, the increase in GSDP is approximately the same for the decrease in dropout rate, as the regression line drawn is similar for both the figures for the same X and Y axis scale.\n\n* Comparing Fig 1&2 with Fig 3, the regression line is similar in fig 3 comparing to fig 1&2. But the y scale in Fig 3 is 2 times more. This clearly states that increase in GSDP is 50% lesser to the decrese in dropout rate of Secondary education students, comparing to the primary and upper-primary students.","ee6c5ea1":"**STEP5:** Categorise the states into four categories based on GDP per capita (C1, C2, C3, C4 - C1 would have the highest per capita GDP, C4 the lowest). The quantile values are (0.20,0.5, 0.85, 1), i.e. the states lying between the 85th and the 100th percentile are in C1, those between 50th and 85th percentile are in C2 and so on.\n\n* Note: Categorisation into four categories will simplify the subsequent analysis, since comparing data of all the states would become quite exhaustive","9134675b":"As per the code above my home state (Tamil Nadu) growth rate is 1.10% more than Nation growth rate over the period 2013-2016 ","0c574df7":"PART 1B:\n--------","c57a949f":"**Recommendation 3:**\n\nAs seen in the question one above, C2 is having approximately 3 times more average GSDP than C1 (which stands first in per-capita) and  C4 average GSDP is having approximately 2 times more GSDP than C1 but still stands last in the per-capita. Finally, C3 average GSDP is approximately equal to the C1 GSDP but still stands third in the per-capita. The problem with high GSDP and very low per-capita proves that the states in categories C2,C3 and C4 are having very high alarming condition in population. **Government should improve\/increase the family planning services in the states of these 3 categories to reduce high alarming population** and increase per-capita.","b7340c93":"  **Solution 1:**\n\n   As shown above, even the sub-sectors which are very huge is also contributiong less. example: transportation (railways, water-transport, road transport, Air transport). One main reason for the very high potential sub-sectors contributing less to GSDP is because of the heavy loss that is happening in these sub-sectors which needs to be facused and arrested immediately. (loss can be of any reasons which needs to be investigated).\n   \n   **Solution 2:**\n   \n   As shown in the chart in question 2 we could see that the below sub-sectors are proven to contribute high to GDP so we need to focus on these sub-sectors too which are yielding high profit to take it to the next level.\n   \n    Agriculture, forestry and fishing\t\n    Manufacturing\n    Real estate, ownership of dwelling & professional services\t\n    Taxes on Products\t\n    Trade, repair, hotels and restaurants\t\n    Crops\t","5d451d17":"**QUESTION 2.**  Which sub-sectors seem to be correlated with high GDP?","841f8cd0":"**Step 3.1:** Based on GDP per capita from above plot:\n* Top-5 states are: Uttarkand, Kerala, Haryana, Sikkim, Goa\n* Bottom-5 states are: Bihar, Uttar pradesh, Manipur, Assam, Jharkhand      \n* Based on above plot highest per capita state is Goa and the lowest is Bihar, their ratio is as follows: ","ae05074d":"**QUESTION 1.**  How does the GDP distribution of the top states (C1) differ from the others?","3a709c6b":"**STEP1:** Remove the rows: '(% Growth over the previous year)' and 'GSDP - CURRENT PRICES (` in Crore)' for the year 2016-17.","40430421":"**STEP 2.1:** Finding Which states have been growing consistently fast, and which ones have been struggling?\n\n**Answer:**\n\nFrom the above bar graph, \n\nwe could conclude that the states that are growing fast are: Arunachal pradesh, Manipur, Nagaland, Tripura and Mizoram\n\nAnd the States that are struggling in their growth are: Goa, Meghalaya, Odisha, Sikkim and Jammu Kashmir.","51ba916a":"Comparison of the growth rate of my home town and the nation is as below:","6b363fd4":"**STEP 2.2:** Curiosity Exercise - Average growth rate of my home state (Tamil nadu) over the period 2013-2016 is as below:\n","a8330dfd":"Part-II: GDP and Education Drop-out Rates\n===========================================\n\n* Analyse if there is any correlation of GDP per capita with dropout rates in education (primary, upper primary and secondary) for the year 2014-2015 for the states. Choose an appropriate plot to conduct this analysis.\n\n* Write the key insights you observe from this data:\n\n        *  Form at least one reasonable hypothesis for the observations from the data","2beb187b":"   **Solution:**\n    \n   From the above output we could clearly see that comparing to C1 average GSDP other categories average are Approximately 2 to 3 times (C4, C2) larger or equal (C3)  \n    \n   **Note:**\n    \n   We are taking the average GSDP here because the count of the states in each category is not the same.","3ae659d4":"**STEP 7:** Finally, provide at least two recommendations for each category to improve the per capita GDP.\n\n**Recommendation 1:**\n\nFor each of the categories, as mentioned in the question 3 above, we need to concentrate on the sub-sectors which are having very high poetential (example transporation) and are contributing very less to GSDP. The main reason for the very low contribution of GDP even though the potential is high is because of the huge losses. **Government should take necessary steps in understanding these losses and arrest them.**","d6b65b53":"**QUESTION 4:** Now, similar to above question, which sectors do we need to focus more ?\n\n**Solution1:**\n\nFocus on Primary (having high potential) which are contributing less to GDP, in understanding the losses happening in these sectors and arresting them to increase its GDP contribution\n\n**Solution2:**\n\nFocusing on Tertiary which are proven to have very high profits, to take it to the next level in boosting its profit. ","9a908bab":"**STEP6:** For each category C1, C2, C3, C4:\nFind the top 3\/4\/5 sub-sectors (such as agriculture, forestry and fishing, crops, manufacturing etc.) [not primary, secondary and tertiary] which contribute to approx. 80% of the GSDP of each category\n\n* Note-I: The nomenclature for this project is as follows: primary, secondary and tertiary are named 'sectors', while agriculture, manufacturing etc. are named 'sub-sectors'\n\n* Note-II: If the top-3 sub-sectors contribute to say 79% of the GDP of some category, you can report 'these top-3 sub-sectors contribute to approx. 80% of the GDP'. This is to simplify the analysis and make the results consumable (remember, the CEO has to present the report to the CMs, and CMs have limited time, so the analysis needs to be very sharp and concise)\n\nPlot the contribution of the sub-sectors as a percentage of the GSDP of each category.   ","569648bd":"**STEP1**: Using only columns ['S.No.','Item','2014-15'] To perform the analysis only for the duration : 2014-15\n\n**STEP2**: Filtering out Union Territoties Filter out the Union Territories (Delhi, Chandigarh, Andaman and Nicobar Islands etc.)\n\n**Note**:  \n\n* Few of the CSV files (eg: NAD-Manipur-GSVA_cur_2014-15.csv) containing characters (eg: white spaces) were not able to encode by UFT (default in pandas is UTF-8) and Ascii encoders which are commonly used. So I have used next common encoder ISO8859 which works fine.\n\n* Merged all data into single data frame df_all_states"}}