{"cell_type":{"16b56467":"code","4bc1d724":"code","565eb4b3":"code","48ae7445":"code","caa6c520":"code","7e66c67f":"code","c61491fa":"code","d8663225":"code","e9693e1e":"code","6bc1b925":"code","f7782c52":"code","70c66eab":"markdown","5afe0e6a":"markdown","092df6d6":"markdown","f18ec93e":"markdown","8169750f":"markdown","9938c6a7":"markdown","44bd67f4":"markdown","95af8e29":"markdown","4cb5a882":"markdown","39384631":"markdown"},"source":{"16b56467":"import matplotlib as mpl\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nmpl.rcParams['figure.dpi'] = 500\nplt.rcParams['figure.figsize'] = (12,6)","4bc1d724":"dataset = pd.read_csv('..\/input\/countrycsv\/country.csv')\ninfo = pd.read_csv('..\/input\/countrycsv\/countryDictionary.csv')\nx = dataset.iloc[:,1:10].values\ncountries = dataset.iloc[:,[0]].values #list of all countries","565eb4b3":"dataset.head()","48ae7445":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx = sc.fit_transform(x)","caa6c520":"from sklearn.cluster import KMeans\nwcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 0)\n    kmeans.fit(x)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()\nplt.savefig('Elbow Method',dpi = 300)\n","7e66c67f":"# Creating dendograms using wards method \nimport scipy.cluster.hierarchy as sch\ndendrogram = sch.dendrogram(sch.linkage(x, method = 'ward'))\nplt.title('Dendrogram')\nplt.xlabel('Countries')\nplt.ylabel('Euclidean distances')\nplt.savefig('Dendrogram',dpi = 500)\nplt.show()","c61491fa":"kmeans = KMeans(n_clusters = 3, init = 'k-means++', random_state = 0)\nkmeans.fit(x)\ny = kmeans.predict(x)\nprint(y)","d8663225":"temp = info.iloc[1:10,[0]].values\nfeatures = []\nfor val in temp:\n    for nval in val:\n        features.append(nval)\nprint(features)","e9693e1e":"c1 = []\nc2 = []\nc3 = []\nfor i in range(0,len(dataset)):\n    if(y[i] == 0):\n        c1.append(str(countries[i]))\n    elif(y[i] == 1 ):\n        c2.append(str(countries[i]))\n    else:\n        c3.append(str(countries[i]))\nprint(len(c1))\nprint(len(c2))\nprint(len(c3))","6bc1b925":"def plotAll(y,features,x):\n    for i in range(0,9):\n        for j in range(i+1,9):\n            plt.scatter(x[y == 0, i], x[y == 0, j], s = 2.5, c = 'red', label = 'Cluster 1',alpha=.8)\n            plt.scatter(x[y == 1, i], x[y == 1, j], s = 2.5, c = 'blue', label = 'Cluster 2',alpha = .8)\n            plt.scatter(x[y == 2, i], x[y == 2, j], s = 2.5, c = 'green', label = 'Cluster 3',alpha = .8)\n            plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 2, c = 'yellow', label = 'Centroids')\n            xtit = str(features[i])\n            ytit = str(features[j])\n            plt.title(xtit + ' vs ' + ytit)\n            plt.xlabel(xtit)\n            plt.ylabel(ytit)\n            plt.legend()\n            plt.rcParams['figure.figsize'] = (4,3)\n            plt.savefig(xtit + ' vs ' + ytit,dpi =  300)\n            plt.show()\nplotAll(y,features,x)","f7782c52":"print(\"List of 1st priority countries\")\nprint(c2)","70c66eab":"# Applying Kmeans Algorithm to form clusters","5afe0e6a":"From the Elbow Method , we see that 3 or 4 could be the optimum number of clusters , however let us also create a Dendrogram for further analysis","092df6d6":"From these graphs we can analyse that countries belonging to cluster c2 need our help as they have very poor health index as well as economic index.","f18ec93e":"Creating a list of names of features ","8169750f":"The Dendrogram provides us with more insight on the number of clusters , we can see that the ideal number of clusters should be 3","9938c6a7":"# Using the elbow method to find the optimal number of clusters","44bd67f4":"# Importing libraries:","95af8e29":"# Performing Standardisation on the matrix of features x","4cb5a882":"Creating list of countries belonging to particular cluster","39384631":"In order to understand the significance of each feature we shall plot graphs for them and understand the significance of each cluster "}}