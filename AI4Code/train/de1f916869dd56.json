{"cell_type":{"6d1a137d":"code","cf9552aa":"code","f1aa6b4b":"code","809ce4cb":"code","ba099ac7":"code","3c2792b9":"code","bf67a9d4":"code","37d39794":"code","e78cea04":"code","8b7400de":"code","bb5882da":"code","4863b47c":"code","2003577f":"code","b37cb58a":"code","67348f36":"code","89f9833d":"code","74195607":"markdown","d0982759":"markdown","ff439ef5":"markdown","76f73910":"markdown","eb039ef6":"markdown","78343f92":"markdown","fb0a0db8":"markdown","55c7fd91":"markdown","f8164806":"markdown","cac65f55":"markdown","19e42d9b":"markdown","3c191a95":"markdown","967218fe":"markdown","a6b73202":"markdown","250c5255":"markdown","9a27b07a":"markdown","7f9d53a1":"markdown","6eb2c960":"markdown"},"source":{"6d1a137d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics.pairwise import cosine_similarity\nfrom scipy.stats import pearsonr\nfrom scipy.stats import norm\n\nplt.rcParams['figure.figsize'] = [10, 10]\nplt.rcParams.update({'font.size': 16})","cf9552aa":"cacao = pd.read_csv('..\/input\/chocolate-bar-ratings\/flavors_of_cacao.csv')","f1aa6b4b":"cacao.columns = ['Company', 'Name', 'Ref', 'Review Date', 'Cocoa percent', 'Country', 'Rating', 'Bean Type', 'Bean Origin']","809ce4cb":"sns.scatterplot(cacao['Cocoa percent'].apply(lambda x: float(x.split('%')[0])), cacao['Rating']);","ba099ac7":"pearsonr(cacao['Cocoa percent'].apply(lambda x: float(x.split('%')[0])), cacao['Rating'])","3c2792b9":"countries = cacao.groupby('Country').agg({\n    'Rating': 'mean',\n    'Name': 'count'\n})","bf67a9d4":"countries.sort_values(by='Rating', ascending=False).head(10)","37d39794":"countries.sort_values(by='Name', ascending=False).head(10)","e78cea04":"features = cacao.copy(deep=True)","8b7400de":"features['Cocoa percent'] = features['Cocoa percent'].apply(lambda x: float(x.split('%')[0]))\n\nall_companies = list(features['Company'].unique())\nfeatures['Company'] = features['Company'].apply(lambda x: all_companies.index(x))\n\nall_countries = list(features['Country'].unique())\nfeatures['Country'] = features['Country'].apply(lambda x: all_countries.index(x))\n\nall_beans = list(features['Bean Origin'].unique())\nfeatures['Bean Origin'] = features['Bean Origin'].apply(lambda x: all_beans.index(x))","bb5882da":"features.head()","4863b47c":"features_as_array = features.drop(columns=['Name', 'Bean Type']).to_numpy()\nSimilarities = cosine_similarity(features_as_array, features_as_array)","2003577f":"Similarities.shape","b37cb58a":"def get_index(cacao_name):\n    return features.loc[features['Name'] == cacao_name].index[0]\n\nprint('Index of cacao flavor: {}'.format(get_index('Atsane')))","67348f36":"def recommend(cacao_name, N=10):\n    # Get the index of the chocolate\n    index = get_index(cacao_name)\n    \n    # Put all the similarity scores in a list with their index\n    sim_scores = list(enumerate(Similarities[index]))\n    \n    # Sort the list by the similarity score\n    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n    \n    # Get the first N items\n    sim_scores = sim_scores[1:N+1]\n    \n    # Put their indices in a list\n    cacao_indeces = [x[0] for x in sim_scores]\n    \n    # Return the chocolate names\n    return list(features['Name'].iloc[cacao_indeces])","89f9833d":"recommend('Atsane')","74195607":"## Let's create a simple recommendation system.","d0982759":"## Before making the recommendation system, i have a couple of burning questions.","ff439ef5":"### Is there a correlation between cocoa percentage and rating?","76f73910":"### It is important to be able to derive with the name of a specific item given its index. This is why we use a pandas dataframe.","eb039ef6":"### Weak correlation. To quantify this let's measure the Pearson correlation coefficient.","78343f92":"### Another question i had is whether or not the countries known for their chocolate, really do have the best chocolate. ","fb0a0db8":"# Recommendation System for chocolates.","55c7fd91":"### Import necessary dependencies. Adjust display settings.","f8164806":"### Load the data.","cac65f55":"### Create a 2D matrix with the similarity for each cacao flavor with every other.","19e42d9b":"### Let's create a scatterplot of the two attributes.","3c191a95":"### Now we need to sort the similarit matrix and retrieve the first N items that the user requests.","967218fe":"### Change the column names to be more descriptive.","a6b73202":"### The countries with the most flavors of cacao however are well known for their chocolate. ","250c5255":"### We need to be able to get the index of a cacao flavor in the dataframe by its name.","9a27b07a":"### First let's do some preprocessing to derive the features we are going to use for the calculation of the similarity.","7f9d53a1":"### I'm going to use item similarity to find the N most similar items to recommend to a hypothetical user. For item similarity i'm going to use cosine similarity","6eb2c960":"### The top 10 countries rated for their cacao flavors are not known for their chocolate."}}