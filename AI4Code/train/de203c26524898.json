{"cell_type":{"d646516d":"code","d3659598":"code","5e1ba061":"code","bf0fb4b7":"code","6ea33e9c":"code","264cfab2":"code","62bc3963":"code","668a17a3":"code","a56a91c9":"code","d93b05a6":"code","aefa1d79":"markdown","0820b1e7":"markdown","c75298b4":"markdown"},"source":{"d646516d":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neural_network import MLPClassifier\n","d3659598":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\n\nprint('train data ', 2*'\\n')\nprint(train.info(),3*'\\n', train.isnull().sum())\nprint(3*'\\n', 'test data ', 2*'\\n')\nprint(test.info(),3*'\\n', test.isnull().sum())\n","5e1ba061":"train.head(20)","bf0fb4b7":"test.head(20)","6ea33e9c":"def clean_data(data):\n    \n    data = data.drop([\"Name\", \"Cabin\", \"Parch\",\"SibSp\", \"PassengerId\", \"Ticket\"], axis=1)\n    \n    data['Age'].fillna(data['Age'].median(skipna=True), inplace=True)\n    bins = [-1,0,5,12,18,24,35,60,80]\n    labels = [1,2,3,4,5,6,7,8]\n    data['Age'] = pd.cut(data['Age'], bins=bins, labels=labels)\n    \n    data['Sex'].replace({'male':0, 'female':1}, inplace=True)\n    \n    data['Fare'].fillna(data['Fare'].median(skipna=True), inplace=True)\n    fbins = [0,10,20,30,40,50,60,np.inf]\n    flabels = [1,2,3,4,5,6,7]\n    data['Fare'] = pd.cut(data['Fare'], bins=fbins, labels=flabels)\n    \n    \n    \n    data['Embarked'].fillna(train['Embarked'].value_counts().idxmax(), inplace=True)\n    \n    \n    return data\n    \n    ","264cfab2":"data = clean_data(train)\ntest_data = clean_data(test)\n\ny = data[\"Survived\"]\nX = pd.get_dummies(data.drop(\"Survived\", axis=1))\n\n# Xt = data.drop(\"Survived\", axis=1)\n# sc = StandardScaler()\n# sc.fit(Xt)\n# X = sc.transform(Xt)","62bc3963":"X_train, X_val, y_train, y_val = train_test_split(X,y, test_size=0.2, random_state=42)\nclf = LogisticRegression(random_state=0, max_iter=1000).fit(X_train, y_train)\n\nprediction = clf.predict(X_val)\naccuracy_score(y_val, prediction)","668a17a3":"model = RandomForestClassifier().fit(X_train, y_train)\n\nprediction = model.predict(X_val)\naccuracy_score(y_val, prediction)","a56a91c9":"predictions = clf.predict(pd.get_dummies(test_data))\npf = pd.DataFrame({\n    \"PassengerId\": test.PassengerId.values,\n    \"Survived\": predictions\n})","d93b05a6":"pf.to_csv(\"submission.csv\", index=False)","aefa1d79":"### Random Forest Classifier","0820b1e7":"### Logistic Regression","c75298b4":"### Submission"}}