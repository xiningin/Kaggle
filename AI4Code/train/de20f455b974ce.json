{"cell_type":{"81b6c9bc":"code","bb9ff393":"code","3feb98f6":"code","246fec72":"code","35354129":"code","4e4f857d":"code","84bedd93":"code","b914d484":"code","75e1fc30":"code","a081960d":"code","80c82695":"code","327a0861":"code","e61bbd16":"code","a0892d69":"code","5312b8d8":"code","c47822a2":"code","0d2321a1":"code","31ebd8c3":"code","302cd211":"code","405e086f":"code","1caef6e7":"code","d0641b02":"code","b25bb3e0":"code","13191a53":"code","cb87570b":"code","5ea7bab3":"code","5c062ae6":"code","6292acac":"code","345b6e79":"code","6e4a3588":"code","949455fb":"code","cbc755ce":"code","56b6e01b":"code","7cb04b79":"code","e499a5ce":"code","aaa1e633":"code","c745d01d":"code","38e82404":"code","84057430":"code","2c0aa980":"code","81d5f046":"code","4bce10c2":"code","d9c82f44":"code","2713c30a":"code","9fbab76e":"code","b374506f":"code","921d950d":"code","fa1dc130":"code","8f644a5e":"code","b9d83e91":"code","51d78782":"code","c1b7b9a3":"code","e70c397d":"code","4e52d913":"code","5643319e":"code","1ed97bda":"code","7c1474d2":"code","2ef14e3d":"code","619f8599":"markdown","c4476979":"markdown","64b3e9f7":"markdown","3991dbf7":"markdown","433e2d19":"markdown","47b3e98c":"markdown","1ff8003e":"markdown","27ee1350":"markdown","00a28670":"markdown","413bff8e":"markdown","4bdbd121":"markdown","cd30d06d":"markdown","639c4f3b":"markdown","5e380525":"markdown","8401b2da":"markdown","b3da1949":"markdown","656382b8":"markdown","3eb46f84":"markdown","0b8d8f0d":"markdown","a6a0c031":"markdown","1b16b66f":"markdown","303aa0d1":"markdown","2f856a78":"markdown","9563d2a3":"markdown","59528bf0":"markdown","7be3609d":"markdown","1226676d":"markdown","625be1c8":"markdown"},"source":{"81b6c9bc":"import librosa\nimport librosa.display\nimport IPython.display as ipd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport numpy as np\nimport pandas as pd\nfrom IPython.display import Image\nfrom mpl_toolkits.mplot3d import Axes3D","bb9ff393":"Image(filename=\"..\/input\/drum-classification\/DRUM COMPLETE.jpg\",width = 800,height = 500)","3feb98f6":"ipd.Audio('..\/input\/drum-samples\/Drum Groove Groovy.wav')","246fec72":"ipd.Audio('..\/input\/drum-samples\/Drum Groove Heavy.wav')","35354129":"Image(filename='..\/input\/drum-classification\/kick.jpg',width = 500,height = 500)","4e4f857d":"ipd.Audio('..\/input\/drum-samples\/Bass Sample.wav')","84bedd93":"Image(filename='..\/input\/drum-classification\/snare.jpg',width = 600,height = 400)","b914d484":"ipd.Audio('..\/input\/drum-samples\/Snare Sample.wav')","75e1fc30":"Image(filename='..\/input\/drum-classification\/toms.jpg',width = 600,height = 600)","a081960d":"ipd.Audio('..\/input\/drum-samples\/Tom Sample.wav')","80c82695":"Image(filename='..\/input\/drum-classification\/oh.jpg',width = 600,height = 600)","327a0861":"ipd.Audio('..\/input\/drum-samples\/Overhead Sample.wav')","e61bbd16":"multiple_audio_list_bass = []","a0892d69":"#loading the sample using LIBROSA\npath_base_string_bass = \"..\/input\/bass-samples\/Bass Sample \"\n\nfor i in range(1,41):\n    audio,sample_rate = librosa.load(path_base_string_bass+str(i)+\".wav\")\n    multiple_audio_list_bass.append(audio)","5312b8d8":"time_values = [(i\/22500) for i in range(1,44101)]","c47822a2":"#listening to audio\nipd.Audio(multiple_audio_list_bass[19], rate=sample_rate)","0d2321a1":"#display the audio signal\nkick_plot = librosa.display.waveplot(audio, sr=sample_rate)\n\n","31ebd8c3":"fig = plt.figure(figsize = (20,20))\nfor i in range(40):\n    ax = fig.add_subplot(10,4,i+1)\n    plt.plot(time_values,multiple_audio_list_bass[i])\n    plt.xlim((0,2))\nplt.show()","302cd211":"multiple_audio_list_snare = []","405e086f":"#loading the sample using LIBROSA\npath_base_string_snare = \"..\/input\/snare-samples\/Snare Sample \"\n\nfor i in range(1,41):\n    audio,sample_rate = librosa.load(path_base_string_snare+str(i)+\".wav\")\n    multiple_audio_list_snare.append(audio)","1caef6e7":"#listening to audio\nipd.Audio(multiple_audio_list_snare[19], rate=sample_rate)","d0641b02":"fig = plt.figure(figsize = (20,20))\nfor i in range(40):\n    ax = fig.add_subplot(10,4,i+1)\n    plt.plot(time_values,multiple_audio_list_snare[i])\n    plt.xlim((0,2))\nplt.show()","b25bb3e0":"multiple_audio_list_oh = []","13191a53":"#loading the sample using LIBROSA\npath_base_string_oh = \"..\/input\/overhead-samples\/Overhead Sample \"\n\nfor i in range(1,41):\n    audio,sample_rate = librosa.load(path_base_string_oh+str(i)+\".wav\")\n    multiple_audio_list_oh.append(audio)","cb87570b":"#listening to audio\nipd.Audio(multiple_audio_list_oh[19], rate=sample_rate)","5ea7bab3":"fig = plt.figure(figsize = (20,20))\nfor i in range(40):\n    ax = fig.add_subplot(10,4,i+1)\n    plt.plot(time_values,multiple_audio_list_oh[i])\n    plt.xlim((0,2))\nplt.show()","5c062ae6":"multiple_audio_list_tom = []","6292acac":"#loading the sample using LIBROSA\npath_base_string_tom = \"..\/input\/tom-samples\/Tom Sample \"\n\nfor i in range(1,41):\n    audio,sample_rate = librosa.load(path_base_string_tom+str(i)+\".wav\")\n    multiple_audio_list_tom.append(audio)","345b6e79":"#listening to audio\nipd.Audio(multiple_audio_list_tom[19], rate=sample_rate)","6e4a3588":"fig = plt.figure(figsize = (20,20))\nfor i in range(40):\n    ax = fig.add_subplot(10,4,i+1)\n    plt.plot(time_values,multiple_audio_list_tom[i])\n    plt.xlim((0,2))\nplt.show()","949455fb":"Image(filename='..\/input\/drum-classification\/ZERO CROSSING.png',width = 600,height = 600)","cbc755ce":"bass_sample,sr= librosa.load(\"..\/input\/drum-samples\/Bass Sample.wav\")","56b6e01b":"ipd.Audio(bass_sample,rate = sr)","7cb04b79":"fig = plt.figure(figsize=(15,9))\nplt.plot(time_values,bass_sample)\nplt.title(\"BASS DRUM ZERO CROSSING RATE\")\nplt.xlabel(\"Time in Seconds\")\nplt.ylabel(\"Amplitude\")\nplt.xlim((0,0.25))","e499a5ce":"snare_sample,sr2= librosa.load(\"..\/input\/drum-samples\/Snare Sample.wav\")","aaa1e633":"ipd.Audio(snare_sample,rate = sr2)","c745d01d":"fig = plt.figure(figsize=(15,9))\nplt.plot(time_values,snare_sample)\nplt.title(\"SNARE DRUM ZERO CROSSING RATE\")\nplt.xlabel(\"Time in Seconds\")\nplt.ylabel(\"Amplitude\")\nplt.xlim((0,0.25))\n","38e82404":"oh_sample,sr3= librosa.load(\"..\/input\/drum-samples\/Overhead Sample.wav\")","84057430":"ipd.Audio(oh_sample,rate = sr3)","2c0aa980":"fig = plt.figure(figsize=(15,9))\nplt.plot(time_values,oh_sample)\nplt.title(\"OH DRUM ZERO CROSSING RATE\")\nplt.xlabel(\"Time in Seconds\")\nplt.ylabel(\"Amplitude\")\nplt.xlim((0,0.25))\n","81d5f046":"tom_sample,sr4= librosa.load(\"..\/input\/drum-samples\/Tom Sample.wav\")","4bce10c2":"ipd.Audio(tom_sample,rate = sr4)","d9c82f44":"fig = plt.figure(figsize=(15,9))\nplt.plot(time_values,tom_sample)\nplt.title(\"TOM DRUM ZERO CROSSING RATE\")\nplt.xlabel(\"Time in Seconds\")\nplt.ylabel(\"Amplitude\")\nplt.xlim((0,0.25))\n","2713c30a":"def zero_crossing(audio_array):\n    sign_change = 0\n    for i in range(len(audio_array)-1):\n        if(audio_array[i]>=0 and audio_array[i+1]<0):\n            sign_change += 1\n        elif(audio_array[i]<=0 and audio_array[i+1]>0):\n            sign_change += 1\n        else:\n            continue\n            \n    return sign_change","9fbab76e":"zero_crossings_bass = []\nzero_crossings_snare = []\nzero_crossings_oh = []\nzero_crossings_tom = []\n\nfor i in range(len(multiple_audio_list_bass)):\n    zero_crossings_bass.append(zero_crossing(multiple_audio_list_bass[i][:5515]))\n    \nfor i in range(len(multiple_audio_list_snare)):\n    zero_crossings_snare.append(zero_crossing(multiple_audio_list_snare[i][:5515]))\n    \nfor i in range(len(multiple_audio_list_oh)):\n    zero_crossings_oh.append(zero_crossing(multiple_audio_list_oh[i][:5515]))\n    \nfor i in range(len(multiple_audio_list_tom)):\n    zero_crossings_tom.append(zero_crossing(multiple_audio_list_tom[i][:5515]))","b374506f":"spectral_centroids_bass = []\nspectral_centroids_snare = []\nspectral_centroids_oh = []\nspectral_centroids_tom = []\n\nfor i in range(len(multiple_audio_list_bass)):\n    sc = librosa.feature.spectral_centroid(multiple_audio_list_bass[i][:5515],sr)\n    spectral_centroids_bass.append(sc.mean())\n    \n\nfor i in range(len(multiple_audio_list_snare)):\n    sc = librosa.feature.spectral_centroid(multiple_audio_list_snare[i][:5515],sr)\n    spectral_centroids_snare.append(sc.mean())\n    \n\nfor i in range(len(multiple_audio_list_oh)):\n    sc = librosa.feature.spectral_centroid(multiple_audio_list_oh[i][:5515],sr)\n    spectral_centroids_oh.append(sc.mean())\n    \n    \nfor i in range(len(multiple_audio_list_tom)):\n    sc = librosa.feature.spectral_centroid(multiple_audio_list_tom[i][:5515],sr)\n    spectral_centroids_tom.append(sc.mean())","921d950d":"bass_rmse = []\nfor i in range(len(multiple_audio_list_bass)):\n    energy = librosa.feature.rmse(multiple_audio_list_bass[i][11025:22050]).sum()\n    bass_rmse.append(energy)\n    \nsnare_rmse = []\nfor i in range(len(multiple_audio_list_snare)):\n    energy = librosa.feature.rmse(multiple_audio_list_snare[i][11025:22050]).sum()\n    snare_rmse.append(energy)\n    \noh_rmse = []\nfor i in range(len(multiple_audio_list_oh)):\n    energy = librosa.feature.rmse(multiple_audio_list_oh[i][11025:22050]).sum()\n    oh_rmse.append(energy)\n       \ntom_rmse = []\nfor i in range(len(multiple_audio_list_tom)):\n    energy = librosa.feature.rmse(multiple_audio_list_tom[i][11025:22050]).sum()\n    tom_rmse.append(energy)","fa1dc130":"import matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nfig = plt.figure(figsize=(20,20))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(xs=zero_crossings_bass, ys=spectral_centroids_bass, zs=bass_rmse,color = \"r\",marker = \"*\",depthshade=False)\nax.scatter(xs=zero_crossings_snare, ys=spectral_centroids_snare, zs=snare_rmse,color = \"g\",marker = \"^\",depthshade=False)\nax.scatter(xs=zero_crossings_tom, ys=spectral_centroids_tom, zs=tom_rmse,color = \"b\",marker = \"D\",depthshade=False)\nax.scatter(xs=zero_crossings_oh, ys=spectral_centroids_oh, zs=oh_rmse,color = \"black\",marker = \"o\",depthshade=False)\n","8f644a5e":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.neural_network import MLPClassifier\n\n\n","b9d83e91":"dfb = pd.DataFrame({\"ZERO CROSSING\":zero_crossings_bass , \"SPECTRAL CENTROID\" : spectral_centroids_bass,\"Energy\" : bass_rmse, \"Class\" :\"Kick\"})\ndfs = pd.DataFrame({\"ZERO CROSSING\":zero_crossings_snare , \"SPECTRAL CENTROID\" : spectral_centroids_snare,\"Energy\" : snare_rmse, \"Class\" :\"Snare\"})\ndft = pd.DataFrame({\"ZERO CROSSING\":zero_crossings_tom , \"SPECTRAL CENTROID\" : spectral_centroids_tom,\"Energy\" : tom_rmse, \"Class\" :\"Tom\"})\ndfo = pd.DataFrame({\"ZERO CROSSING\":zero_crossings_oh , \"SPECTRAL CENTROID\" : spectral_centroids_oh,\"Energy\" : oh_rmse, \"Class\" :\"Cymbals\"})\ndf_master = pd.concat([dfb,dfs,dft,dfo]).reset_index(drop=True)","51d78782":"df_master","c1b7b9a3":"X = df_master.iloc[:,:-1].values\ny = df_master.iloc[:,-1].values\n\nlabel_encoder = LabelEncoder()\ny = label_encoder.fit_transform(y)\n\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=2)\n\nscaler = StandardScaler()\n\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","e70c397d":"knn = KNeighborsClassifier()\nknn.fit(X_train,y_train)\ny_pred = knn.predict(X_test)\nknn.score(X_test,y_test)","4e52d913":"clf_LR = LogisticRegression()\nclf_LR.fit(X_train,y_train)\ny_pred_clf_LR = clf_LR.predict(X_test)\nclf_LR.score(X_test,y_test)","5643319e":"clf_DT = DecisionTreeClassifier()\nclf_DT.fit(X_train,y_train)\ny_pred_clf_DT = clf_DT.predict(X_test)\nclf_DT.score(X_test,y_test)","1ed97bda":"clf_RF = RandomForestClassifier()\nclf_RF.fit(X_train,y_train)\ny_pred_clf_RF = clf_RF.predict(X_test)\nclf_RF.score(X_test,y_test)","7c1474d2":"clf_Gnb = GaussianNB()\nclf_Gnb.fit(X_train,y_train)\ny_pred_clf_gnb = clf_Gnb.predict(X_test)\nclf_Gnb.score(X_test,y_test)","2ef14e3d":"mlp = MLPClassifier(max_iter=500)\nmlp.fit(X_train,y_train)\ny_pred_mlp = mlp.predict(X_test)\nmlp.score(X_test,y_test)","619f8599":"#### Overhead Sample","c4476979":"## DATA PRE-PROCESSING","64b3e9f7":"# Feature 1. ZERO CROSSING RATE ","3991dbf7":"## Let's have a look how they sound like :)","433e2d19":"#### Kick Drum","47b3e98c":"### Logistic Regression","1ff8003e":"# FEATURE 2:  Spectral Centroids","27ee1350":"#### Snare Drum","00a28670":"#### SNARE SAMPLE","413bff8e":"### lets observe zero crossing rate for a bass as well as snare drum","4bdbd121":"# FEATURE 3:  Root Mean Square Energy","cd30d06d":"### K Nearest Neighbours","639c4f3b":"#### LETS GO HEAVY XD","5e380525":"#### BASS SAMPLE","8401b2da":"It is clearly visible that snare drum changes sign much more than that of bass drum in the span of 1 seconds\n\n### Lets Write a function which calculates the sign changes or simply the zero crossing rate of the signal","b3da1949":"### Naive Bayes","656382b8":"#### A LITTLE GROOVY","3eb46f84":"### The Drum Kit","0b8d8f0d":"### The Various Parts","a6a0c031":"#### Cymbals\/ Overheads","1b16b66f":"### Decision Trees","303aa0d1":"#### Toms","2f856a78":"## Lets make a dataframe for the same","9563d2a3":"### MLP (Multi Layer Perceptron)","59528bf0":"### Random Forests","7be3609d":"#### Tom Sample","1226676d":"## APPLYING MACHINE LEARNING ALGORITHMS","625be1c8":"# DRUM INSTRUMENT CLASSIFICATION USING MACHINE LEARNING"}}