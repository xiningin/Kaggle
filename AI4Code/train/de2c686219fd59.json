{"cell_type":{"3dfb8417":"code","b2eee2fc":"code","a04e2008":"code","85036891":"code","0ac68fb1":"code","88a72a64":"code","a9016657":"code","14c4a4a1":"code","b03ad8ac":"code","738c5b42":"code","aa1cde3a":"code","38af2bc2":"code","41774d52":"code","b3dac258":"code","bc6fcb5c":"code","c49cf9ee":"code","60de16a7":"code","25e39317":"code","7b406655":"code","9828a469":"code","388be9a3":"code","6ea324ca":"markdown","792071c3":"markdown","080d150b":"markdown","5c2abc21":"markdown","ae480ee2":"markdown","9571b76b":"markdown","04f03318":"markdown"},"source":{"3dfb8417":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Visualization\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-whitegrid')\nimport seaborn as sns\n\n# Plotly\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True) # #do not miss this line\nimport plotly as py\nimport plotly.graph_objs as go\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b2eee2fc":"data_2015 = pd.read_csv('..\/input\/world-happiness\/2015.csv')\ndata_2016 = pd.read_csv('..\/input\/world-happiness\/2016.csv')\ndata_2017 = pd.read_csv('..\/input\/world-happiness\/2017.csv')\ndata_2018 = pd.read_csv('..\/input\/world-happiness\/2018.csv')\ndata_2019 = pd.read_csv('..\/input\/world-happiness\/2019.csv')","a04e2008":"data_2015.head()","85036891":"data_2016.head()","0ac68fb1":"data_2017.head()","88a72a64":"data_2018.head()","a9016657":"data_2019.head()","14c4a4a1":"data_2015.info()","b03ad8ac":"data_2016.info()","738c5b42":"data_2017.info()","aa1cde3a":"data_2018.info()","38af2bc2":"data_2019.info()","41774d52":"display(data_2015.describe())\nprint('2015 '+'*' * 40)\ndisplay(data_2016.describe())\nprint('2016 '+'*' * 40)\ndisplay(data_2017.describe())\nprint('2017 '+'*' * 40)\ndisplay(data_2018.describe())\nprint('2018 '+'*' * 40)\ndisplay(data_2019.describe())\nprint('2019 '+'*' * 40)","b3dac258":"data_2015 = data_2015.rename(columns={\"Happiness Rank\":\"Rank\", \"Happiness Score\":\"Score\", \"Economy (GDP per Capita)\": \"Economy\", \n                                      \"Health (Life Expectancy)\": \"Life_Expectancy\", \"Trust (Government Corruption)\":\"Corruption\"})\n\ndata_2016 = data_2016.rename(columns={\"Happiness Rank\":\"Rank\",\"Happiness Score\":\"Score\", \"Economy (GDP per Capita)\": \"Economy\", \n                                      \"Health (Life Expectancy)\": \"Life_Expectancy\", \"Trust (Government Corruption)\":\"Corruption\"})\n\ndata_2017 = data_2017.rename(columns={\"Happiness.Rank\":\"Rank\", \"Happiness.Score\":\"Score\", \"Economy..GDP.per.Capita.\": \"Economy\", \n                                      \"Health..Life.Expectancy.\": \"Life_Expectancy\", \"Trust..Government.Corruption.\":\"Corruption\"})\n\ndata_2018 = data_2018.rename(columns={\"Overall rank\":\"Rank\", \"Country or region\":\"Country\",\"GDP per capita\":\"Economy\", \n                                      \"Healthy life expectancy\":\"Life_Expectancy\",\"Freedom to make life choices\":\"Freedom\", \n                                      \"Perceptions of corruption\":\"Corruption\"})\n\ndata_2019 = data_2019.rename(columns={\"Overall rank\":\"Rank\", \"Country or region\":\"Country\", \"GDP per capita\": \"Economy\", \n                                      \"Healthy life expectancy\": \"Life_Expectancy\", \"Freedom to make life choices\":\"Freedom\", \n                                      \"Perceptions of corruption\":\"Corruption\"})","bc6fcb5c":"display(data_2015[data_2015.Country=='Turkey'])\n\ndisplay(data_2016[data_2016.Country=='Turkey'])\n\ndisplay(data_2017[data_2017.Country=='Turkey'])\n\ndisplay(data_2018[data_2018.Country=='Turkey'])\n\ndisplay(data_2019[data_2019.Country=='Turkey'])","c49cf9ee":"# T\u00fcrkiye'ye ait verilerin tek bir dataframe'de g\u00f6sterilmesi\ndatas = [data_2015, data_2016, data_2017, data_2018, data_2019]\nyears = [2015,2016,2017,2018,2019]\nrank_list = []\nscore_list = []\neconomy_list = []\nlife_list = []\nfreedom_list = []\ngenerosity_list = []\ncorruption_list = []\n\nfor i in range(len(datas)):\n    rank_list.append((datas[i][datas[i]['Country']=='Turkey']['Rank']).values[0])\n    score_list.append((datas[i][datas[i]['Country']=='Turkey']['Score']).values[0])\n    economy_list.append((datas[i][datas[i]['Country']=='Turkey']['Economy']).values[0])\n    life_list.append((datas[i][datas[i]['Country']=='Turkey']['Life_Expectancy']).values[0])\n    freedom_list.append((datas[i][datas[i]['Country']=='Turkey']['Freedom']).values[0])\n    generosity_list.append((datas[i][datas[i]['Country']=='Turkey']['Generosity']).values[0])\n    corruption_list.append((datas[i][datas[i]['Country']=='Turkey']['Corruption']).values[0])\n    \n    \nturkey_data = pd.DataFrame({\"years\":years,\"rank\": rank_list, \"score\":score_list, \"economy\":economy_list,\"life_expectancy\":life_list,\n                            \"freedom\":freedom_list, \"generosity\": generosity_list, \"corruption\":corruption_list})\nturkey_data","60de16a7":"tr_data = turkey_data.drop(['years'], axis=1)\nf,ax = plt.subplots(figsize=(6, 6))\nheat_map = sns.heatmap(tr_data.corr(), annot=True, linewidths=0.6, fmt= '.2f',ax=ax, cmap=\"coolwarm\")\nheat_map.set_yticklabels(heat_map.get_yticklabels(), rotation=0)\nplt.show()","25e39317":"import plotly.graph_objs as go\n\ntrace1=go.Bar(\n                x=years,\n                y=turkey_data.economy,\n                name=\"Economy\",\n                marker=dict(color = 'rgba(156, 30, 130, 0.7)',\n                           line=dict(color='rgb(0,0,0)',width=1.9)),\n                text='Economy')\ntrace2=go.Bar(\n                x=years,\n                y=turkey_data.life_expectancy,\n                name=\"Life Expectancy\",\n                marker=dict(color = 'rgba(240,120,10 , 0.7)', \n                           line=dict(color='rgb(0,0,0)',width=1.9)),\n                text='Life Expectancy')\n\ntrace3=go.Bar(\n                x=years,\n                y=turkey_data.freedom,\n                name=\"Freedom\",\n                marker=dict(color = 'rgba( 50, 240,120 , 0.7)',\n                           line=dict(color='rgb(0,0,0)',width=1.9)),\n                text='Freedom')\ntrace4=go.Bar(\n                x=years,\n                y=turkey_data.generosity,\n                name=\"Generosity\",\n                marker=dict(color = 'rgba(200, 250,20 , 0.7)',\n                           line=dict(color='rgb(0,0,0)',width=1.9)),\n                text='Generosity')\ntrace5=go.Bar(\n                x=years,\n                y=turkey_data.corruption,\n                name=\"Corruption\",\n                marker=dict(color = 'rgba(200, 10,10 , 0.7)',\n                           line=dict(color='rgb(0,0,0)',width=1.9)),\n                text='Corruption')\n\nedit_df=[trace1,trace2,trace3,trace4,trace5]\nlayout=go.Layout(barmode=\"group\",title=\"2015-2019 aras\u0131ndaki y\u0131llara g\u00f6re T\u00fcrkiye'nin mutluluk raporu\")\nfig=dict(data=edit_df,layout=layout)\nplt.savefig('graph.png')\niplot(fig)","7b406655":"# Y\u0131llara g\u00f6re de\u011fi\u015fim grafikleri\nfig, ax =plt.subplots(nrows=2,ncols=3, figsize=(16,6))\nsns.lineplot(x = \"years\", y = \"score\", data = turkey_data,color=\"coral\", ax=ax[0][0])\nsns.lineplot(x = \"years\", y = \"economy\", data = turkey_data,color=\"red\", ax=ax[0][1])\nsns.lineplot(x = \"years\", y = \"life_expectancy\", data = turkey_data, color=\"purple\", ax=ax[0][2])\nsns.lineplot(x = \"years\", y = \"freedom\", data = turkey_data, color=\"green\", ax=ax[1][0])\nsns.lineplot(x = \"years\", y = \"generosity\", data = turkey_data, color=\"blue\", ax=ax[1][1])\nsns.lineplot(x = \"years\", y = \"corruption\", data = turkey_data, color=\"black\", ax=ax[1][2])\nplt.show()","9828a469":"# 2019 y\u0131l\u0131n\u0131n en mutlu ilk 10 \u00fclkesi\ndata_2019.head(10)","388be9a3":"f,ax = plt.subplots(figsize=(8, 8))\nheat_map = sns.heatmap(data_2019.corr(), annot=True, linewidths=0.6, fmt= '.2f',ax=ax, cmap=\"coolwarm\")\nheat_map.set_yticklabels(heat_map.get_yticklabels(), rotation=0)\nplt.show()","6ea324ca":"## Verilerin \u0130ncelenmesi","792071c3":"2019 y\u0131l\u0131n\u0131n en mutlu \u00fclkesi Finlandiya olmu\u015ftur. \n\n* Ekomomik durum (Economy GDP per capita): 0.79 - pozitif korelasyon\n* Sosyal destek (Social support): 0.78 - pozitif korelasyon\n* Sa\u011fl\u0131kl\u0131 ya\u015fam beklentisi (Healthy life expectancy): 0.78 - pozitif korelasyon\n* \u00d6zg\u00fcrl\u00fck (Freedom): 0.57 - pozitif korelasyon\n\nBu fakt\u00f6rlerin etkisi mutluluk skoruna yans\u0131m\u0131\u015ft\u0131r. Mutluluk skorunun en y\u00fcksek olmas\u0131 da Finlandiya'n\u0131n en mutlu \u00fclke olmas\u0131n\u0131 sa\u011flam\u0131\u015ft\u0131r.","080d150b":"## Gerekli K\u00fct\u00fcphanelerin Import Edilmesi","5c2abc21":" # The World Happiness Report - Kaggle Master Project","ae480ee2":"2) Sadece 2019 verisini baz al\u0131rsak; 2019 y\u0131l\u0131ndaki en mutlu \u00fclke hangisidir? Hangi fakt\u00f6r\/fakt\u00f6rler en mutlu \u00fclke olmas\u0131n\u0131 sa\u011flam\u0131\u015f olabilir? G\u00f6rselle\u015ftirerek ifade etmenizi bekliyoruz.","9571b76b":"T\u00fcrkiye'deki insanlar\u0131n mutlu olmas\u0131na etki eden en \u00f6nemli fakt\u00f6r\u00fcn \u00d6zg\u00fcrl\u00fck(Freedom) oldu\u011fu g\u00f6r\u00fclmektedir. \n* Ekomomik Durum (Economy GDP per capita): 0.61 - pozitif korelasyon\n* Yolsuzluk (Corruption): -0.76 - negatif korelasyon\n* Sa\u011fl\u0131kl\u0131 Ya\u015fam Beklentisi (Healthy life expectancy) : -0.59 - negatif korelasyon\n\nEkonomi, yolsuzluk alg\u0131lar\u0131 ve ya\u015fam beklentisi de mutlu olmas\u0131na etki eden di\u011fer \u00f6nemli fakt\u00f6rlerdir.","04f03318":"1) \u00dclkemiz T\u00fcrkiye'yi baz alacak olursak; 2015-2019 y\u0131llar\u0131 aras\u0131nda insanlar\u0131n mutlu olmas\u0131na etki eden fakt\u00f6rler y\u0131llara g\u00f6re neler ve zamanla nas\u0131l de\u011fi\u015fmi\u015f?"}}