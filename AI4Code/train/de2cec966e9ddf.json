{"cell_type":{"4d04213a":"code","aa2d4e9f":"code","e3c1594d":"code","0e89bf36":"code","3d24a63f":"code","0934a4a9":"code","142da629":"code","c72edd51":"markdown","5943aaf5":"markdown","18582a96":"markdown"},"source":{"4d04213a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.linear_model import LinearRegression\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","aa2d4e9f":"data = pd.read_csv('\/kaggle\/input\/chess\/games.csv')\ndf = data[data.increment_code == '15+15']","e3c1594d":"df.corr()","0e89bf36":"linear_reg = LinearRegression()\n\nx = df.white_rating.values.reshape(-1,1)\ny = df.black_rating.values.reshape(-1,1)\n\nlinear_reg.fit(x,y)\n\narray = np.array([i for i in range(500,2500)]).reshape(-1,1)\n\nb0 = linear_reg.intercept_\nprint('b0: ',b0)\n\nb1 = linear_reg.coef_  #scikit  learn\nprint('b1: ',b1)\n\nplt.scatter(df.white_rating,df.black_rating)\nplt.xlabel('white_rating')\nplt.ylabel('black_rating')\ny_head = linear_reg.predict(array)\nplt.plot(array, y_head, color = 'red')\nplt.show()","3d24a63f":"from sklearn import metrics\nprint('Mean Absolute Error:', metrics.mean_absolute_error(array, y_head))\nprint('Mean Squared Error:', metrics.mean_squared_error(array, y_head))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(array, y_head)))","0934a4a9":"x = df.iloc[:,[9,11]]\ny = df.opening_ply.values.reshape(-1,1)\n\nm_l_r = LinearRegression()\nm_l_r.fit(x,y)\n\nprint('b0: ', m_l_r.intercept_)\n\nprint('b1,b2: ', m_l_r.coef_)","142da629":"y = df.turns.values.reshape(-1,1)\nx = df.opening_ply.values.reshape(-1,1)\n\nplt.scatter(x,y)\nplt.ylabel('turns')\nplt.xlabel('opening_ply')\n\n","c72edd51":"**polynomial regression**","5943aaf5":"**linear regression**","18582a96":"****Multiple linear regression****"}}