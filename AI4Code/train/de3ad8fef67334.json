{"cell_type":{"9f081313":"code","ada0b32b":"code","46736158":"code","263d3306":"code","eac572d1":"code","f580bb9a":"code","f235592a":"code","24a76d1a":"code","35df3d74":"code","3aaaeb8d":"code","5ac3ee94":"code","e091bebe":"code","908fd57b":"code","a0468f3c":"code","a62416c2":"code","2f0fa0e2":"markdown","24f55361":"markdown","379472e1":"markdown"},"source":{"9f081313":"# First I will import the main libraries to manage and plot datas.\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n% matplotlib inline \n#This code is to turn more practical when I want to see a graph.\n","ada0b32b":"# Now I will read the dataset.\niris = pd.read_csv('..\/input\/Iris.csv')","46736158":"# Let's see basic layouts about this data.\niris.head()","263d3306":"# First of all, we can improve the title of the columns.\niris.columns = ['ID', 'Sepal Length', 'Sepal Width', 'Petal Length', 'Petal Width', 'Species' ]\n\n# Let's if this worked!\niris.head()","eac572d1":"iris.info()","f580bb9a":"# I want to see how much species there are.\niris['Species'].value_counts()","f235592a":"# I will start to build some graph to visualize data and guess what model will be better to use.\nsns.pairplot(iris, hue='Species')\n\n# I focus in \"Species\", because is my goal.","24a76d1a":"# First I will determinate the \"X\"and \"y\"values.\n\n# The independent variables are the features of species: index 1,2,3 and 4.\nX = iris.iloc[:,1:5]\n\n# The dependent variable is the names of species: index 5.\ny = iris.iloc[:,5]\n\n# PS.: The \"ID\" is not necessary to my algorithmn.","35df3d74":"# Let's check!\nX.head()","3aaaeb8d":"y.head()","5ac3ee94":"# Now it's time to separate in Train an Test set.\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","e091bebe":"# Let's check if the class done correctly the separation.\nprint(len(X_train))\nprint('\\n')\nprint(len(y_train))","908fd57b":"# that's fine! Now it's time to train in SVM algorithmn.\nfrom sklearn.svm import SVC\nclassifier = SVC()\nclassifier.fit(X_train, y_train)","a0468f3c":"# Now we have to predict using our model.\ny_pred = classifier.predict(X_test)","a62416c2":"# Let's see with this model works!\nfrom sklearn.metrics import classification_report, confusion_matrix\nprint(classification_report(y_test, y_pred))\nprint('\\n')\nprint(confusion_matrix(y_test, y_pred))","2f0fa0e2":"## Project Title: Iris Species\n# I will Classify iris plants into three species in this classic dataset.","24f55361":"# This model worked pretty good!\n# That's it! I will see you in the next Project!","379472e1":"# With the task, which was given at the beginning, I knew I had to use the Classification Model.\n# Looking this PairPlot, I can realize that the SVM algorithm woulb be the best option."}}