{"cell_type":{"35c18742":"code","81a5a1ba":"code","eea3bb8e":"code","cc3e34cf":"code","5e235a46":"code","b941a4fd":"code","897bd08e":"code","b7c2065c":"code","abe59089":"code","df131248":"code","80e2706e":"code","7610a3c0":"code","ec3c303b":"code","9fe0236d":"code","d0f04b9b":"code","cd089c75":"code","90d17abb":"code","7eae5844":"code","2bef20f0":"code","40c6216f":"code","4be1f71e":"code","ac06ef5a":"code","3ce986a7":"code","e0ba736d":"code","0f432d8e":"code","42b20c39":"code","a10cb2ff":"code","e76c2f07":"code","54720616":"code","e1f82126":"code","97a301b5":"code","0930792a":"code","fe29665b":"code","76e7fc1f":"code","4ff04d95":"code","ae186982":"code","1f2f8d97":"code","ef15a784":"code","58e8cadc":"code","48e5a7e8":"code","50f40bd8":"code","5844f66e":"code","8d27441f":"code","988a3136":"code","af6e292e":"code","4aa9d0d4":"code","b4b44f9a":"code","e87ae138":"markdown","9ef88e72":"markdown","f41dc69d":"markdown","ab3d2b60":"markdown","1a691ece":"markdown","0e577391":"markdown","7c63e3d1":"markdown","f34dad12":"markdown","ef90a61a":"markdown","64a8b212":"markdown","82004d94":"markdown","fcde3c1b":"markdown","7bcf3563":"markdown","a0e3a53f":"markdown","1aaf1cf1":"markdown","24d7a170":"markdown","7739cc3c":"markdown","c05c8a1f":"markdown","81160b5d":"markdown","e49fa32f":"markdown","8a53c97a":"markdown","c321ecc6":"markdown","d733d7c8":"markdown","8c8fb35f":"markdown"},"source":{"35c18742":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","81a5a1ba":"df = pd.read_csv('..\/input\/football-teams-rankings-stats\/Football teams.csv')\ndf","eea3bb8e":"df.dtypes","cc3e34cf":"df.shape","5e235a46":"df.size","b941a4fd":"df.columns","897bd08e":"df.info()","b7c2065c":"df.describe()","abe59089":"df.corr()","df131248":"df.nunique()","80e2706e":"df.isnull().sum()","7610a3c0":"import missingno as no\nno.bar(df, color='pink')","ec3c303b":"sns.heatmap(df.isnull(), yticklabels='False', cmap='Greens')","9fe0236d":"df1 = df['Tournament'].value_counts()\nplt.pie(df1.values, labels=df1.index, autopct='%0.2f%%')\nplt.title('Tournaments Percentage', fontsize=15)\nplt.show()","d0f04b9b":"sns.set_style('darkgrid')\nplt.figure(figsize=(18,10))\nsns.barplot(x='Team',y='Goals', data=df[:10].sort_values(by='Goals',ascending=False))\nplt.title('Top 10 Goal Scoring Teams', fontsize=15)","cd089c75":"plt.figure(figsize=(10,5))\nsns.stripplot(x=df.Tournament, y=df.Goals, palette='magma_r')\nplt.show()","90d17abb":"plt.figure(figsize=(14,6))\nsns.barplot(x=df.Tournament, y=df.Goals, palette='rainbow')\nplt.title('Goals in Tournament', fontsize=15)","7eae5844":"plt.figure(figsize=(18,8))\nsns.barplot(x='Team',y='Possession%',data=df[:10].sort_values(by='Possession%',ascending=False),palette='Paired')\nplt.title(\"Top Possession Teams are\", fontsize=15)","2bef20f0":"sns.kdeplot(x='Pass%',data=df)","40c6216f":"sns.kdeplot(x='Possession%',data=df, color='r')","4be1f71e":"sns.kdeplot(x='AerialsWon',data=df, color='g')","ac06ef5a":"plt.figure(figsize=(16,10))\ntournaments = df.groupby('Tournament')['Goals','Pass%','Possession%','Shots pg'].sum().plot(kind='bar')\nplt.title(\" The different league details\", fontsize=15)\nplt.legend()\nplt.show()","3ce986a7":"sns.distplot(df['red_cards'], color='red')","e0ba736d":"sns.distplot(df['yellow_cards'], color='y')","0f432d8e":"sns.set_style('darkgrid')\nplt.figure(figsize=(18,10))\nsns.barplot(x='Team',y='Rating', data=df[:10].sort_values(by='Rating',ascending=False))\nplt.title('Top 10 Teams Rating', fontsize=15)","42b20c39":"sns.pairplot(df)","a10cb2ff":"plt.figure(figsize=(18,12))\nsns.heatmap(df.corr(), yticklabels='auto', annot=True, cmap='YlGn')\nplt.show()","e76c2f07":"x = df.drop(['Team', 'Tournament' ,'Rating'], axis=1)\ny = df[\"Rating\"]","54720616":"from sklearn.ensemble import ExtraTreesRegressor\nmodel = ExtraTreesRegressor()\nmodel.fit(x,y)\nprint(model.feature_importances_)","e1f82126":"feat_imp = pd.Series(model.feature_importances_, index=x.columns)\nfeat_imp.nlargest(5).plot(kind='barh')","97a301b5":"from sklearn.model_selection import train_test_split\nxtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.2, random_state=10)","0930792a":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(xtrain, ytrain)","fe29665b":"ypred_train = lr.predict(xtrain)\nypred_test = lr.predict(xtest)","76e7fc1f":"from sklearn import metrics\nprint(\"Accuracy of training data:\", metrics.r2_score(ytrain, ypred_train)*100)\nac1 = metrics.r2_score(ytest, ypred_test)*100\nprint(\"Accuracy of testing data:\", ac1)","4ff04d95":"print('Mean Absolute Error:', metrics.mean_absolute_error(ytest, ypred_test))\nprint('Mean Squared Error:', metrics.mean_squared_error(ytest, ypred_test))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(ytest, ypred_test)))","ae186982":"from sklearn.neighbors import KNeighborsRegressor\nknn = KNeighborsRegressor(n_neighbors=3)\nknn.fit(xtrain, ytrain)","1f2f8d97":"ypred_train = knn.predict(xtrain)\nypred_test = knn.predict(xtest)","ef15a784":"from sklearn import metrics\nprint(\"Accuracy of training data:\", metrics.r2_score(ytrain, ypred_train)*100)\nac2 = metrics.r2_score(ytest, ypred_test)*100\nprint(\"Accuracy of testing data:\", ac2)","58e8cadc":"print('Mean Absolute Error:', metrics.mean_absolute_error(ytest, ypred_test))\nprint('Mean Squared Error:', metrics.mean_squared_error(ytest, ypred_test))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(ytest, ypred_test)))","48e5a7e8":"from sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor(max_depth=3, n_jobs=1)\nrf.fit(xtrain, ytrain)","50f40bd8":"ypred_train = rf.predict(xtrain)\nypred_test = rf.predict(xtest)","5844f66e":"from sklearn import metrics\nprint(\"Accuracy of training data:\", metrics.r2_score(ytrain, ypred_train)*100)\nac3 = metrics.r2_score(ytest, ypred_test)*100\nprint(\"Accuracy of testing data:\", ac3)","8d27441f":"print('Mean Absolute Error:', metrics.mean_absolute_error(ytest, ypred_test))\nprint('Mean Squared Error:', metrics.mean_squared_error(ytest, ypred_test))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(ytest, ypred_test)))","988a3136":"accuracy =  {ac1: 'Logistic Regression', ac2: 'KNN', ac3:'Random Forest'}","af6e292e":"sns.set_style('darkgrid')\nplt.figure(figsize=(14, 10))\nmodel_accuracies = list(accuracy.values())\nmodel_names = list(accuracy.keys())\nsns.barplot(x=model_accuracies, y=model_names, palette='rainbow')","4aa9d0d4":"import pickle\npickle.dump(knn, open('model.pkl', 'wb'))","b4b44f9a":"p = model.predict([[67,\t14.4,\t57,\t2,\t57.7,\t87.7,\t11.8]])\nprint(\"Rating = \", round(float(p),2))","e87ae138":"# Exploratory Data Analysis","9ef88e72":"# Reading the Data","f41dc69d":"# Saving the Model","ab3d2b60":"## Prediction","1a691ece":"## Prediction","0e577391":"## Accuracy","7c63e3d1":"## Prediction","f34dad12":"## Error","ef90a61a":"# Training and Testing the Data","64a8b212":"# Understanding the Data","82004d94":"## Error","fcde3c1b":"# KNN","7bcf3563":"As accuracy of **KNN Regressor** algorithm is more ie. **89.04%**\n\nHence we will save the model.","a0e3a53f":"# Importing Libraries","1aaf1cf1":"# Comparing Accuracy","24d7a170":"## Accuracy","7739cc3c":"# Splitting the Data into Dependent and Independent Variables","c05c8a1f":"# **Football Teams Rating**","81160b5d":"# Random Forest Regressor","e49fa32f":"## Error","8a53c97a":"## Accuracy","c321ecc6":"# Linear Regression","d733d7c8":"# Feature Importance","8c8fb35f":"# Sample Prediction"}}