{"cell_type":{"f26286a0":"code","dbc6bf41":"code","4e4ae085":"code","2502cd22":"code","2eab8277":"code","2f5c7b24":"code","c1d56b65":"code","4666be71":"code","2857be7d":"code","5efcbeef":"code","03e76892":"code","1ebed5d9":"code","a3623614":"code","d4861f82":"markdown","a46b68df":"markdown","3e7a7f5b":"markdown","209925ea":"markdown","1ddf87a3":"markdown","d9470225":"markdown","c0595e66":"markdown"},"source":{"f26286a0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline \n\nfrom scipy import stats\nfrom scipy.stats import norm, skew\n\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder, StandardScaler, MinMaxScaler, RobustScaler\nfrom sklearn.model_selection import train_test_split, KFold, GroupKFold, GridSearchCV, StratifiedKFold\n\n\n\nimport lightgbm as lgb\nimport xgboost as xgb\n\n\nimport sys, os\nimport random \n\nif not sys.warnoptions:\n    import warnings\n    warnings.simplefilter(\"ignore\")\n    \nfrom IPython import display, utils\n\n\ndef set_seed(seed=2020):\n    random.seed(seed)\n    np.random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\nset_seed()","dbc6bf41":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","4e4ae085":"#nRowsRead = 1000 # specify 'None' if want to read whole file\n# power-laws-forecasting-energy-consumption-holidays.csv may have more rows in reality, but we are only loading\/previewing the first 1000 rows\ntrain = pd.read_csv('\/kaggle\/input\/power-laws-forecasting-energy-consumption-training-data.csv', delimiter=';')\ntrain.dataframeName = 'power-laws-forecasting-energy-consumption-holidays.csv'\nnRow, nCol = train.shape\nprint(f'There are {nRow} rows and {nCol} columns')","2502cd22":"train.head()","2eab8277":"train.info()","2f5c7b24":"train.describe()","c1d56b65":"sns.set()\nplt.style.use('fivethirtyeight')\nplt.figure(figsize=(7, 4))\nsns.distplot(train.Value, kde=True, fit=norm, color='teal')","4666be71":"plt.figure(figsize=(7, 4))\nsns.boxplot(train.Value,color='teal')","2857be7d":"#nRowsRead = 1000 # specify 'None' if want to read whole file\n# power-laws-forecasting-energy-consumption-metadata.csv may have more rows in reality, but we are only loading\/previewing the first 1000 rows\ntest = pd.read_csv('\/kaggle\/input\/power-laws-forecasting-energy-consumption-test-data.csv', delimiter=';')\nanswers = test.pop('Value')\ntest.shape, answers.shape","5efcbeef":"test.head()","03e76892":"#nRowsRead = 1000 # specify 'None' if want to read whole file\n# power-laws-forecasting-energy-consumption-submission-forecast-period.csv may have more rows in reality, but we are only loading\/previewing the first 1000 rows\nfperiods = pd.read_csv('\/kaggle\/input\/power-laws-forecasting-energy-consumption-submission-forecast-period.csv', delimiter=';')\n\nfperiods.head()\n","1ebed5d9":"buildings = pd.read_csv('\/kaggle\/input\/power-laws-forecasting-energy-consumption-metadata.csv', delimiter=';')\n\nbuildings.head()\n","a3623614":"weather = pd.read_csv('\/kaggle\/input\/power-laws-forecasting-energy-consumption-weather.csv', delimiter=';')\n\nweather.head()\n","d4861f82":"Now you're ready to read in the data and use the plotting functions to visualize the data.","a46b68df":"## Exploratory Analysis\nTo begin this exploratory analysis, first import libraries and define functions for plotting the data using `matplotlib`. Depending on the data, not all plots will be made. (Hey, I'm just a simple kerneling bot, not a Kaggle Competitions Grandmaster!)","3e7a7f5b":"Let's take a quick look at what the data looks like:","209925ea":"Let's take a quick look at what the data looks like:","1ddf87a3":"The next hidden code cells define functions for plotting data. Click on the \"Code\" button in the published kernel to reveal the hidden code.","d9470225":"There are 6 csv files in the current version of the dataset:\n","c0595e66":"## Introduction\nGreetings from the Kaggle bot! This is an automatically-generated kernel with starter code demonstrating how to read in the data and begin exploring. If you're inspired to dig deeper, click the blue \"Fork Notebook\" button at the top of this kernel to begin editing."}}