{"cell_type":{"902412ae":"code","7abb94c8":"code","46aeb512":"code","fe481434":"code","ed3939a6":"code","e0c9448b":"code","783e7771":"code","d71b2a31":"code","bc209848":"code","779c00d9":"code","7b2871aa":"code","e6c20cae":"code","29e92862":"code","30a0e7da":"code","96d09261":"code","1f82dae4":"code","de7814fa":"code","20474c67":"code","0bc3747c":"code","e0e9090e":"code","d4cb54d2":"code","af1844cb":"code","6f7befd6":"code","88c77c4c":"code","da877cc5":"code","0b6ddf31":"code","85e89dcb":"code","7c38bf26":"markdown","810721eb":"markdown","e2b4290c":"markdown","0a409488":"markdown","3ae81a7c":"markdown","2995e9cd":"markdown","7b59002a":"markdown","5e1a6828":"markdown","f44fbea4":"markdown","e2489872":"markdown","f4600941":"markdown","35d67da4":"markdown","d6b5ec41":"markdown","fac096b2":"markdown"},"source":{"902412ae":"#importing libaries \nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\nsns.set_style(\"darkgrid\")\n","7abb94c8":"sms = pd.read_csv('..\/input\/sms-spam-collection-dataset\/spam.csv',encoding='latin1')\nsms = sms.iloc[:,[0,1]]\nsms.columns = [\"label\", \"message\"]\nsms.head()\n","46aeb512":"sms.shape","fe481434":"count_Class=pd.value_counts(sms[\"label\"], sort= True)\ncount_Class.plot(kind = 'bar',color = [\"green\",\"red\"])\nplt.title('Bar Plot')\nplt.show();","ed3939a6":"#747 spam messages  are there\nsms.groupby('label').describe()","e0c9448b":"#lets add length coloumn to the data\nsms['length'] = sms['message'].apply(len)\nsms.head()","783e7771":"\nfig = plt.figure(dpi = 120)\nax = plt.axes()\nsms['length'].plot(bins=50, kind='hist',ax=ax,color = 'indigo')\nax.set(xlabel = 'Message Length Class',ylabel = 'Frequency',title = 'Length Distribution');\n","d71b2a31":"# comparison of spam and ham messages   \nplt.figure(figsize=(12, 8))\n\nsms[sms.label=='ham'].length.plot(bins=35, kind='hist', color='green', \n                                       label='Ham messages', alpha=0.6)\nsms[sms.label=='spam'].length.plot(kind='hist', color='red', \n                                       label='Spam messages', alpha=0.6)\nplt.legend()\nplt.xlabel(\"Message Length\")","bc209848":"from collections import Counter\n\ncount1 = Counter(\" \".join(sms[sms['label']=='ham'][\"message\"]).split()).most_common(20)\ndf1 = pd.DataFrame.from_dict(count1)\ndf1 = df1.rename(columns={0: \"words in non-spam\", 1 : \"count\"})\ncount2 = Counter(\" \".join(sms[sms['label']=='spam'][\"message\"]).split()).most_common(20)\ndf2 = pd.DataFrame.from_dict(count2)\ndf2 = df2.rename(columns={0: \"words in spam\", 1 : \"count_\"})","779c00d9":"df1.plot.bar(legend = False,color=\"black\")\ny_pos = np.arange(len(df1[\"words in non-spam\"]))\nplt.xticks(y_pos, df1[\"words in non-spam\"])\nplt.title('More frequent words in non-spam messages')\nplt.xlabel('words')\nplt.ylabel('number')\nplt.show()\n\n\ndf2.plot.bar(legend = False, color = 'blue')\ny_pos = np.arange(len(df2[\"words in spam\"]))\nplt.xticks(y_pos, df2[\"words in spam\"])\nplt.title('More frequent words in spam messages')\nplt.xlabel('words')\nplt.ylabel('number')\nplt.show()\n","7b2871aa":"#randomaly checking a message\nsms[sms.length == 200].message.iloc[0]\n","e6c20cae":"#importing libaries required\nfrom keras.preprocessing.text import Tokenizer\nfrom keras.layers import Embedding, LSTM, Dropout, Dense\nfrom keras.models import Sequential\nfrom keras.utils import to_categorical\n","29e92862":"vocab_size = 400\noov_tok = \"<OOV>\"\nmax_length = 250\nembedding_dim = 16\n","30a0e7da":"encode = ({'ham': 0, 'spam': 1} )\n#new dataset with replaced values\nsms = sms.replace(encode)","96d09261":"sms.head()","1f82dae4":"\nX = sms['message']\nY = sms['label']\n","de7814fa":"\ntokenizer = Tokenizer(num_words=vocab_size, oov_token=oov_tok)\ntokenizer.fit_on_texts(X)\n# convert to sequence of integers\nX = tokenizer.texts_to_sequences(X)","20474c67":"X = np.array(X)\ny = np.array(Y)\n","0bc3747c":"from keras.preprocessing.sequence import pad_sequences\n\nX = pad_sequences(X, maxlen=max_length)\n","e0e9090e":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=.25, random_state=7)\n","d4cb54d2":"\nimport tensorflow as tf\n\nmodel = tf.keras.Sequential([\n    tf.keras.layers.Embedding(vocab_size, embedding_dim, input_length=max_length),\n    tf.keras.layers.GlobalAveragePooling1D(),\n    tf.keras.layers.Dense(24, activation='relu'),\n    tf.keras.layers.Dense(1, activation='sigmoid')\n])\nmodel.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])\nmodel.summary()\n","af1844cb":"num_epochs = 30\nhistory = model.fit(X_train, y_train, epochs=num_epochs, validation_data=(X_test,y_test), verbose=2)","6f7befd6":"result = model.evaluate(X_test, y_test)\n# extract those\nloss = result[0]\naccuracy = result[1]\n\n\nprint(f\"[+] Accuracy: {accuracy*100:.2f}%\")\n","88c77c4c":"from keras.preprocessing import sequence\n","da877cc5":"def get_predictions(txts):\n    txts = tokenizer.texts_to_sequences(txts)\n    txts = sequence.pad_sequences(txts, maxlen=max_length)\n    preds = model.predict(txts)\n    if(preds[0] > 0.5):\n        print(\"SPAM MESSAGE\")\n        \n    else:\n        print('NOT SPAM')\n\n    ","0b6ddf31":"# Spam message\ntxts=[\"Free entry in 2 a wkly comp to win FA Cup final tkts 21st May 2005\"]\n\nget_predictions(txts)","85e89dcb":"#not Spam\ntxts = [\"Hi man, I was wondering if we can meet tomorrow.\"]\nget_predictions(txts)","7c38bf26":"Lets visualize the most commen words used in both spam and ham messages","810721eb":"# Model\n","e2b4290c":"> Our model is succesfully classifying the messages into 2 classes\n# Thanks for reading my notebook .If you like my work,please upvote it !","0a409488":"## Text preproccessing","3ae81a7c":"# predictions","2995e9cd":"# SPAM MESSAGE CLASSIFICATION \n![](https:\/\/appliedmachinelearning.files.wordpress.com\/2017\/01\/spam-filter.png?w=620)\nClassifiying messages into spam or not spam by natural language processing using deep  learning\nthe below model is able to attain accuracy around 98.6% in classification","7b59002a":"Lets find  the number of spam message and ham messages in the dataset using visualization.747 spam messages are found out of 5572 messages","5e1a6828":"lets check 2 messages one is a spam and the other one is not spam ","f44fbea4":"# Exploratory Data Analysis\n","e2489872":" spliting the data as training and test data","f4600941":"lets add another coloumn length for storing the length of each message .It will help us to find the lengths of the messages as well as we can compare the length of spam and ham by vizualisation techinques","35d67da4":"randomaly checking a message in the dataset\n","d6b5ec41":"Replacing the catogorical values in such a way that spam as 1 and ham as 0.","fac096b2":"# load and read the dataset"}}