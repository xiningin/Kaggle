{"cell_type":{"e244686a":"code","e1c3d620":"code","a1b64eb0":"code","b4cbb1a0":"code","7d58b649":"code","b520a610":"code","2c9e0d04":"code","57831177":"code","a21a1d41":"code","504f1878":"code","eb34f491":"code","d45197ee":"code","d25ced2f":"code","a8038430":"code","937649f9":"code","4e968a6b":"code","159313b8":"markdown","4a961311":"markdown"},"source":{"e244686a":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport pandas_profiling\nimport string\nfrom IPython.display import display\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport plotly\nplotly.offline.init_notebook_mode(connected=True)\n\n","e1c3d620":"df = pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore.csv')","a1b64eb0":"\"\"\"\n\nPaid vs Free\n\n\n\"\"\"\nfree = len(df[df.Type == 'Free'])\npaid = len(df[df.Type == 'Paid'])\nprint('There are {} free apps in the dataset'.format(free))\nprint('There are {} paid apps in the dataset'.format(paid))","b4cbb1a0":"\"\"\"\n\nMost popular category\n\n\n\"\"\"\n#Removing unwanted values\nnoneed = df.loc[df.Size == 'Varies with device']\nnoneed.drop(noneed.index, inplace=True)\n\n#Removing symbols to create only numerics column\ndf.Size = df.Size.apply(lambda x: str(x).replace('+', ''))\ndf.Size = df.Size.apply(lambda x: str(x).replace('M', ''))\ndf.Size = df.Size.apply(lambda x: str(x).replace('k',''))\n\n# Convert size column in numeric\ndf.Size = pd.to_numeric(df.Size, errors='coerce')\nresult = df.groupby('Category')['Size'].sum().reset_index()\nfinal_result = result.sort_values('Size', ascending=False).reset_index(drop=True)\n\n# Visualization\n\nfinal_result.set_index('Category', inplace=True)\nfinal_result.plot(kind='bar', figsize=(20,11), color='green')\nplt.xlabel('Category')\nplt.ylabel('Size')","7d58b649":"\"\"\"\n\nApp with the largest size\n\n\n\"\"\"\n\nprint(df.sort_values('Size', ascending=False).iloc[0]['App'])\n\n","b520a610":"\"\"\"\n\nApp with the largest number of reviews\n\n\n\"\"\"\nprint(df.sort_values('Reviews', ascending=False).iloc[0]['App'])","2c9e0d04":"\"\"\"\n\nClean data\n\n\n\"\"\"\ndf.dropna(subset=['Rating'], inplace=True)\ndf.dropna(subset=['Size'], inplace=True)\ndf.dropna(subset=['Android Ver'], inplace=True)\ndf.dropna(subset=['Current Ver'], inplace=True)\n\ndf = df.drop_duplicates().reset_index(drop=True)\n\nchars_to_remove = ['+' , ',','$']\n# List of column names to clean\ncols_to_clean = ['Installs', 'Price']\n\n# Loop for each column\nfor col in cols_to_clean:\n    # Replace each character with an empty string\n    for char in chars_to_remove:\n        df[col] = df[col].astype(str).str.replace(char, '')\n    # Convert col to numeric\n    df[col] = pd.to_numeric(df[col])","57831177":"# Let's check duplicates\ndf.duplicated().sum()","a21a1d41":"# Let's check 0 values\ndf.isnull().sum()","504f1878":"df.info()","eb34f491":"\"\"\"\n\nData visualization\n\n\n\"\"\"\n\nreport = pandas_profiling.ProfileReport(df) # kinda handy tool to understand data we are working on and this will save your time on EDA process.","d45197ee":"display(report) ","d25ced2f":"sns.set_style('darkgrid')\nfig,(ax1) = plt.subplots(1,figsize=(20,11))\nplt.suptitle('Count plots')\nsns.countplot(y='Android Ver', data=df, ax=ax1)\nplt.show()","a8038430":"fig,(ax2) = plt.subplots(figsize=(20,11))\nplt.suptitle('Count plots')\nsns.countplot(y='Category', data=df, ax=ax2)\nplt.show()","937649f9":"fig,(ax3) =  plt.subplots(figsize=(20,11))\nplt.suptitle('Count plots')\nsns.countplot(y='Installs', data=df, ax=ax3)\nplt.show()","4e968a6b":"tot_num_of_apps_in_category = df.Category.value_counts().sort_values(ascending=True)\ndata = [go.Pie(\n        labels = tot_num_of_apps_in_category.index,\n        values = tot_num_of_apps_in_category.values,\n        hoverinfo = 'label+value'\n)]\n\nplotly.offline.iplot(data, filename='active_category')","159313b8":"## You can choose whatever tool you want. We have really wide capabilities of visualization","4a961311":"## We can use different types of data visualization\n"}}