{"cell_type":{"a269e6a2":"code","498021b8":"code","c5b2d905":"code","52ba9b5f":"code","0605e0d2":"code","191e1653":"code","a7c667ec":"code","9d8e4043":"code","31f8464d":"code","259c48e9":"code","13cdff6d":"code","715c1512":"code","08abb48c":"code","78f812c8":"code","d0d97c6a":"code","3982758f":"code","bc44b055":"code","b4c8e6ca":"code","b25232a0":"code","a8430a16":"code","a76d57be":"code","beb3d841":"code","3177f76a":"code","886d3893":"code","71eb4409":"code","519a6b97":"code","d9cf15aa":"code","c7b34568":"code","ea6df4ca":"code","6a4038a3":"code","2525582b":"code","e8592a99":"code","2320a820":"code","94cfe990":"code","e2d8c6b1":"code","88da721f":"code","f481a936":"code","19573e5d":"code","133b03ef":"code","d9892b77":"code","bade97ea":"code","718c89d3":"code","30e1c633":"code","4c2598df":"code","a3d846f7":"code","243a6a1d":"code","43781503":"code","bbaef290":"code","ee3542b7":"code","1af4f370":"code","c2068041":"code","2b82641c":"markdown","45cc0728":"markdown","dd432c4d":"markdown","afac7f9c":"markdown"},"source":{"a269e6a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","498021b8":"df=pd.read_csv(\"\/kaggle\/input\/social-network-ads\/Social_Network_Ads.csv\")","c5b2d905":"df.head()","52ba9b5f":"df.isna().sum()","0605e0d2":"df.dtypes","191e1653":"df.corr()","a7c667ec":"x=sns.countplot(df['Purchased'])","9d8e4043":"df['Purchased'].value_counts()","31f8464d":"df.head()","259c48e9":"from sklearn.preprocessing import LabelEncoder\nlb=LabelEncoder()\ndf['Gender']=lb.fit_transform(df['Gender'])","13cdff6d":"df=df.drop(['User ID'],axis=1)","715c1512":"from sklearn.preprocessing import RobustScaler\nrb=RobustScaler()\ndf['EstimatedSalary']=rb.fit_transform(df['EstimatedSalary'].values.reshape(-1,1))","08abb48c":"df","78f812c8":"from sklearn.preprocessing import StandardScaler\nskc=StandardScaler()\ndf['Age']=skc.fit_transform(df['Age'].values.reshape(-1,1))","d0d97c6a":"X=df.iloc[:,:-1].values","3982758f":"Y=df.iloc[:,-1].values","bc44b055":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.10, random_state=42)","b4c8e6ca":"from sklearn.svm import SVC\nsvc = SVC(kernel='poly')\nsvc.fit(x_train,y_train)\npred_svc =svc.predict(x_test)","b25232a0":"from sklearn import metrics\n\n# Model Accuracy: how often is the classifier correct?\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, pred_svc))","a8430a16":"from sklearn.metrics import classification_report,accuracy_score\nprint(classification_report(y_test,pred_svc))","a76d57be":"from sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test, pred_svc)","beb3d841":"print(\"Precision:\",metrics.precision_score(y_test, pred_svc))\n\n# Model Recall: what percentage of positive tuples are labelled as such?\nprint(\"Recall:\",metrics.recall_score(y_test, pred_svc))","3177f76a":"from sklearn.model_selection import cross_val_score\nSVMCS = cross_val_score(svc, x_train, y_train, cv=20)\nprint('SUPPORT VECTOR MACHINE Cross Validation Score', round(SVMCS.mean() * 100, 2).astype(str) + '%')","886d3893":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=21)\nknn.fit(x_train,y_train)\npred_knn=knn.predict(x_test)","71eb4409":"from sklearn import metrics\n\n# Model Accuracy: how often is the classifier correct?\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, pred_knn))","519a6b97":"from sklearn.metrics import classification_report,accuracy_score\nprint(classification_report(y_test,pred_knn))","d9cf15aa":"from sklearn.model_selection import cross_val_score\nKNNCV = cross_val_score(knn, x_train, y_train, cv=20)\nprint('K N N Cross Validation Score', round(KNNCV.mean() * 100, 2).astype(str) + '%')","c7b34568":"from sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test, pred_knn)","ea6df4ca":"print(\"Precision:\",metrics.precision_score(y_test, pred_knn))\n# Model Recall: what percentage of positive tuples are labelled as such?\nprint(\"Recall:\",metrics.recall_score(y_test, pred_knn))","6a4038a3":"from sklearn import naive_bayes\nNB = naive_bayes.GaussianNB()\nNB.fit(x_train,y_train)\npred_nb=NB.predict(x_test)","2525582b":"from sklearn import metrics\n\n# Model Accuracy: how often is the classifier correct?\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, pred_nb))","e8592a99":"from sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test, pred_nb)","2320a820":"from sklearn.metrics import classification_report,accuracy_score\nprint(classification_report(y_test,pred_nb))","94cfe990":"from sklearn.model_selection import cross_val_score\nNBCV = cross_val_score(NB, x_train, y_train, cv=20)\nprint('NB  Cross Validation Score', round(NBCV.mean() * 100, 2).astype(str) + '%')","e2d8c6b1":"print(\"Precision:\",metrics.precision_score(y_test, pred_nb))\n# Model Recall: what percentage of positive tuples are labelled as such?\nprint(\"Recall:\",metrics.recall_score(y_test, pred_nb))","88da721f":"from xgboost import XGBClassifier","f481a936":"xg = XGBClassifier()\nxg.fit(x_train, y_train)","19573e5d":"pred_xg=xg.predict(x_test)","133b03ef":"from sklearn import metrics\n# Model Accuracy: how often is the classifier correct?\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, pred_xg))","d9892b77":"from sklearn.model_selection import cross_val_score\nXFCV = cross_val_score(xg, x_train, y_train, cv=20)\nprint('XG BOOST  Cross Validation Score', round(XFCV.mean() * 100, 2).astype(str) + '%')","bade97ea":"print(\"Precision:\",metrics.precision_score(y_test, pred_xg))\n# Model Recall: what percentage of positive tuples are labelled as such?\nprint(\"Recall:\",metrics.recall_score(y_test, pred_xg))","718c89d3":"from sklearn.model_selection import train_test_split\nx_train, x_val, y_train, y_val  = train_test_split(x_train, y_train, test_size = 0.10,random_state=42)","30e1c633":"from keras.models import Sequential\nfrom keras.layers import Dense,Dropout\nfrom keras.activations import relu,softmax\nfrom keras.regularizers import l2","4c2598df":"model = Sequential()\nmodel.add(Dense(16, input_dim=3,kernel_regularizer=l2(0.01), activation='relu'))\nmodel.add(Dense(32, kernel_regularizer=l2(0.01),activation='relu'))\nmodel.add(Dense(48, kernel_regularizer=l2(0.01),activation='relu'))\nmodel.add(Dense(64, kernel_regularizer=l2(0.01),activation='relu',))\nmodel.add(Dense(128, kernel_regularizer=l2(0.01),activation='relu',))\nmodel.add(Dropout(0.4))\nmodel.add(Dense(1, activation='sigmoid'))","a3d846f7":"model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","243a6a1d":"from keras.callbacks import ModelCheckpoint\ncheckpointer=ModelCheckpoint(filepath='Convolutional.hdf5',verbose=1,save_best_only=True)\nhistory = model.fit(x_train, y_train, epochs=100, batch_size=16,validation_data=(x_val,y_val))","43781503":"score=model.evaluate(x_train,y_train,verbose=1)               #evaluates the model\naccuracy=100*score[1]                                       \nprint('Test accuracy is %.4f%%' % accuracy)","bbaef290":"score=model.evaluate(x_test,y_test,verbose=1)               #evaluates the model\naccuracy=100*score[1]                                       \nprint('Test accuracy is %.4f%%' % accuracy)","ee3542b7":"score=model.evaluate(x_val,y_val,verbose=1)               #evaluates the model\naccuracy=100*score[1]                                       \nprint('Test accuracy is %.4f%%' % accuracy)","1af4f370":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()","c2068041":"# summarize history for loss\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()","2b82641c":"# NAIVE BAYES","45cc0728":"# from xgboost import XGBClassifier","dd432c4d":"# NEURAL NETWORKS","afac7f9c":"# KNN "}}