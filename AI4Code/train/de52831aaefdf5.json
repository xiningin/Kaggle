{"cell_type":{"113ae8d1":"code","a76809f7":"code","d9a3285b":"code","3f37d837":"code","6eab3212":"code","6e2b2bbc":"code","9fdad9b6":"code","1261b790":"code","ee2f652e":"code","6ad06650":"code","09fb5f6c":"code","58626561":"code","c7649c5c":"code","6c9ad8c4":"code","69a13bfb":"code","753e7eb7":"code","4ed7bc8b":"code","8f6c18ef":"code","58aca054":"code","ae47712e":"code","6cd434f2":"code","84607b66":"code","355c117e":"code","0b9f0320":"code","5a66f957":"code","6a80e6f6":"code","712610ba":"code","d13cf06e":"code","5e31af40":"code","f5fd56d1":"code","6f531503":"code","4afb233a":"markdown","1422d145":"markdown","59f214f2":"markdown","4e7e36b2":"markdown","3e2a7745":"markdown","05f2c20a":"markdown","a049359a":"markdown","f32fe8ba":"markdown","6357abd5":"markdown","8a7a6129":"markdown","5b80a6c1":"markdown","ab7d9036":"markdown","ec50174b":"markdown","71600870":"markdown","2c0c9c41":"markdown","5ca1be59":"markdown","64782900":"markdown","0bd72182":"markdown","aa585d85":"markdown","27c5a1aa":"markdown","ac526618":"markdown","432ea38b":"markdown","5f2fbcb0":"markdown","408d77ab":"markdown","c77fdc40":"markdown"},"source":{"113ae8d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a76809f7":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n%matplotlib inline","d9a3285b":"df = pd.read_csv('..\/input\/911.csv')","3f37d837":"df.info()","6eab3212":"df.head()","6e2b2bbc":"df['zip'].value_counts().head()","9fdad9b6":"df['twp'].value_counts().head()","1261b790":"df['title'].nunique()","ee2f652e":"df['Reason'] = df['title'].apply(lambda title: title.split(':')[0])","6ad06650":"df['Reason'].value_counts()","09fb5f6c":"sns.set_style(\"darkgrid\")\nsns.countplot(x='Reason',data=df, palette = 'viridis')","58626561":"type(df['timeStamp'].iloc[0])","c7649c5c":"df['timeStamp'] = pd.to_datetime(df['timeStamp'])\ntype(df['timeStamp'].iloc[0])","6c9ad8c4":"df['Hour'] = df['timeStamp'].apply(lambda time: time.hour)\ndf['Month'] = df['timeStamp'].apply(lambda time: time.month)\ndf['Day of Week'] = df['timeStamp'].apply(lambda time: time.dayofweek)","69a13bfb":"dmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\ndf['Day of Week'] = df['Day of Week'].map(dmap)","753e7eb7":"sns.countplot(x='Day of Week', data=df, hue='Reason', palette='viridis')\n#to relocate the legend\nplt.legend(bbox_to_anchor=(1.05,1), loc=2, borderaxespad=0.)","4ed7bc8b":"sns.countplot(x='Month', data=df, hue='Reason', palette='viridis')\n#to relocate the legend\nplt.legend(bbox_to_anchor=(1.05,1), loc=2, borderaxespad=0.)","8f6c18ef":"byMonth = df.groupby('Month').count()\nbyMonth.head()","58aca054":"byMonth['lat'].plot()","ae47712e":"sns.lmplot(x='Month',y='twp',data=byMonth.reset_index())","6cd434f2":"df['Date'] = df['timeStamp'].apply(lambda t:t.date())","84607b66":"df.groupby('Date').count()['lat'].plot()\nplt.tight_layout()","355c117e":"df[df['Reason']=='Traffic'].groupby('Date').count()['lat'].plot()\nplt.title('Traffic')\nplt.tight_layout()","0b9f0320":"df[df['Reason']=='Fire'].groupby('Date').count()['lat'].plot()\nplt.title('Fire')\nplt.tight_layout()","5a66f957":"df[df['Reason']=='EMS'].groupby('Date').count()['lat'].plot()\nplt.title('EMS')\nplt.tight_layout()","6a80e6f6":"dayHour= df.groupby(by=['Day of Week', 'Hour']).count()['Reason'].unstack()","712610ba":"plt.figure(figsize=(12,6))\nsns.heatmap(dayHour, cmap='viridis')","d13cf06e":"sns.clustermap(dayHour,cmap='viridis')","5e31af40":"dayMonth = df.groupby(by=['Day of Week', 'Month']).count()['Reason'].unstack()\ndayMonth.head()","f5fd56d1":"plt.figure(figsize=(12,6))\nsns.heatmap(dayMonth, cmap='viridis')","6f531503":"sns.clustermap(dayMonth,cmap='viridis')","4afb233a":"seaborn to create a countplot of the Day of Week column with the hue based off of the Reason column.","1422d145":"What is the data type of the objects in the timeStamp column?","59f214f2":"create a simple plot off of the dataframe indicating the count of calls per month","4e7e36b2":"create a new column called \"Reason\" that contains this string value (For example, if the title column value is EMS: BACK PAINS\/INJURY , the Reason column value would be EMS.)","3e2a7745":"Create a new column called 'Date' that contains the date from the timeStamp column. ","05f2c20a":" create a HeatMap using this new DataFrame","a049359a":"Use the .map() with this dictionary to map the actual string names to the day of the week","f32fe8ba":"Reading the csv file","6357abd5":"Use pd.to_datetime to convert the column from strings to DateTime objects","8a7a6129":"the same for Month:","5b80a6c1":"Now recreate this plot but create 3 separate plots with each plot representing a Reason for the 911 call","ab7d9036":"Seaborn to create a countplot of 911 calls by Reason.","ec50174b":"create a gropuby object called byMonth, where you group the DataFrame by the month column and use the count() method for aggregation. Use the head() method on this returned DataFrame.","71600870":"What are the top 5 townships (twp) for 911 calls? ","2c0c9c41":"What is the most common Reason for a 911 call based off of this new column?","5ca1be59":"use .apply() to create 3 new columns called Hour, Month, and Day of Week. You will create these columns based off of the timeStamp column, reference the solutions if you get stuck on this step.","64782900":"restructure the dataframe so that the columns become the Hours and the Index becomes the Day of the Week.","0bd72182":"create a clustermap using this DataFrame.","aa585d85":"Take a look at the 'title' column, how many unique title codes are there?","27c5a1aa":"repeat these same plots and operations, for a DataFrame that shows the Month as the column.","ac526618":"What are the top 5 zipcodes for 911 calls? ","432ea38b":"groupby this Date column with the count() aggregate and create a plot of counts of 911 calls","5f2fbcb0":"Checking the head of df","408d77ab":"use seaborn's lmplot() to create a linear fit on the number of calls per month. ","c77fdc40":"Importing visualization libraries"}}