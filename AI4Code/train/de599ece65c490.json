{"cell_type":{"3bc85fa1":"code","27ca59a2":"code","58d189da":"code","97934e18":"code","72f0717d":"code","c2d93944":"code","5a93a6ca":"code","9b2fe092":"code","d71a3e0f":"code","5888664c":"code","bb7b1b41":"code","5a83f48f":"code","e391b299":"code","eab3ead2":"code","07b5c6ea":"code","325475a3":"code","d80fc48e":"code","a511f333":"code","ec484344":"code","c31bb1c4":"code","207888e3":"code","0fc2eee1":"markdown","1f1bb296":"markdown","c3c5298d":"markdown","a69bc025":"markdown","1c9b0ba2":"markdown","e73e49ba":"markdown","5e8e25ba":"markdown","fd0d5123":"markdown","83d140f2":"markdown","5d990d91":"markdown"},"source":{"3bc85fa1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport tensorflow\nfrom tensorflow import keras\nimport datetime\nimport os","27ca59a2":"dataframe = pd.read_csv('..\/input\/population-time-series-data\/POP.csv')\ndataframe = dataframe[['date','value']]","58d189da":"dataframe['date'] = pd.to_datetime(dataframe['date'])","97934e18":"dataframe.tail()","72f0717d":"plt.plot(dataframe.date,dataframe.value)\nplt.title('Population 1950-2019')\nplt.savefig('Population-Past-Now.png')","c2d93944":"def split_sequence(sequence, n_steps=3):\n    sequence = list(sequence)\n    X, y = list(), list()\n    for i in range(len(sequence)):\n        # find the end of this pattern\n        end_ix = i + n_steps\n        # check if we are beyond the sequence\n        if end_ix > len(sequence)-1:\n            break\n        # gather input and output parts of the pattern\n        seq_x, seq_y = sequence[i:end_ix], sequence[end_ix]\n        X.append(seq_x)\n        y.append(seq_y)\n    def reshape(d):\n        d = np.array(d)\n        d = np.reshape(d,(d.shape[0],d.shape[1],1))\n        return d\n    return reshape(X), np.array(y)","5a93a6ca":"train_data = dataframe.value.iloc[:700]\ntest_data = dataframe.value.iloc[700:]","9b2fe092":"x_train,y_train = split_sequence(train_data)\nx_test,y_test = split_sequence(test_data)","d71a3e0f":"model = keras.Sequential([\n    keras.layers.LSTM(64,input_shape=(3,1,),activation='relu',return_sequences=True),\n    keras.layers.LSTM(64,activation='relu'),\n    keras.layers.Dense(1)\n])","5888664c":"model.compile(loss='mse',optimizer='adam')","bb7b1b41":"model.summary()","5a83f48f":"%load_ext tensorboard","e391b299":"os.makedirs('logs',exist_ok=True)\nlogdir = os.path.join('logs',datetime.datetime.now().strftime('%Y%m%d-%H%M%S'))","eab3ead2":"callback = keras.callbacks.TensorBoard(logdir)\nearlyStoping = keras.callbacks.EarlyStopping(monitor='loss',patience=3)","07b5c6ea":"history = model.fit(x_train,y_train,epochs=100,batch_size=32,callbacks=[callback,earlyStoping],verbose=2)","325475a3":"plt.plot(history.history['loss'])\nplt.title('RNN Model Training Loss')\nplt.savefig('RNNModel-TrainingLoss.png')","d80fc48e":"plt.plot(model.predict(x_test),label='Prediction')\nplt.plot(y_test,label='Actual')\nplt.legend()\nplt.title('Prediction Demonstration (Test)')\nplt.savefig('PredictionDemonstration-Test.png')","a511f333":"def predict_future(shift_count):\n    def reshape(three):\n        return np.array(three).reshape(1,3,1) \n    array =  list(dataframe.value) + []\n    now = len(dataframe)-3\n    last = len(dataframe)\n    for _ in range(shift_count):\n        converted = reshape(array[now:last])\n        array.append(model.predict(converted)[0][0])\n        now += 1\n        last += 1\n    return array","ec484344":"future_prediction = predict_future(1000)","c31bb1c4":"plt.figure(figsize=(10,5))\nplt.plot(future_prediction,'--',label='Prediction')\nplt.plot(dataframe.value,label='Actual Data',alpha=0.7)\nplt.title('Prediksi populasi dalam 1000 hari ke depan')\nplt.legend();\nplt.savefig('Prediction-Now-1000daysFuture.png')","207888e3":"model.save('population-rnn.h5')","0fc2eee1":"# Training Model","1f1bb296":"This is a dataset from the U.S. Census Bureau hosted by the Federal Reserve Economic Database (FRED). FRED has a data platform found here and they update their information according the amount of data that is brought in. Explore the U.S. Census Bureau using Kaggle and all of the data sources available through the U.S. Census Bureau organization page!","c3c5298d":"# Callback & EarlyStopping","a69bc025":"# Data Preprocessing","1c9b0ba2":"# Overview - Population Time Series Data\n### _Explore Time Series from the U.S. Census Bureau_\nhttps:\/\/www.kaggle.com\/census\/population-time-series-data","e73e49ba":"# Future Prediction","5e8e25ba":"# Save Model","fd0d5123":"# Data Preparation","83d140f2":"# Demonstrate Prediction","5d990d91":"# RNN Model"}}