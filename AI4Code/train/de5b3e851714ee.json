{"cell_type":{"76f980bc":"code","eef6df51":"code","92dbacbb":"code","07f2c9e9":"code","dd1d24e4":"code","9b5c5d99":"code","deb3b3e4":"code","f46cf6dd":"code","0962ee85":"code","43274f93":"code","a7b32146":"code","ee14edb5":"code","b1aa887e":"markdown","170bfb4c":"markdown","b28691e8":"markdown","993c9648":"markdown","36bf625e":"markdown","787f30f7":"markdown","9a44f988":"markdown","dc57d57f":"markdown","90b6b37b":"markdown","7c12e2b3":"markdown"},"source":{"76f980bc":"from IPython.display import HTML, display\ndisplay(HTML(\"<table><tr><td><img src=https:\/\/images-na.ssl-images-amazon.com\/images\/I\/61pLvdbjC7L._AC_.jpg><\/td><td><img src=https:\/\/www.fs.fed.us\/wildflowers\/beauty\/iris\/Blue_Flag\/images\/iris_virginica\/iris_virginica_virginica_lg.jpg><\/td> <td><img src=https:\/\/www.plant-world-seeds.com\/images\/item_images\/000\/003\/884\/large_square\/IRIS_VERSICOLOR.JPG?1495391088> <\/td><\/tr> <tr><td> Iris setosa<\/td> <td> Iris virginia<\/td> <td> Iris versicolor<\/td> <\/tr><\/table>\"))","eef6df51":"import numpy as np\nimport pandas as pd\nfrom sklearn.datasets import load_iris\ndata = load_iris()","92dbacbb":"print(data.keys())\nprint(data)","07f2c9e9":"data_df = pd.DataFrame(data = data.data, columns = data.feature_names )\ndata_df['target'] = data.target\nprint('Shape of the dataframe: ', data_df.shape)\ndata_df['species'] = None\n\nfor index in range(data_df.shape[0]):\n    if data_df.iloc[index, 4] ==0:\n        data_df.iloc[index, 5] = 'setosa'\n    elif data_df.iloc[index, 4] ==1:\n        data_df.iloc[index, 5] = 'versicolor'\n    elif data_df.iloc[index, 4] ==2:\n        data_df.iloc[index, 5] = 'virginica'\n        \n\ndata_df.head()","dd1d24e4":"data_df.target.value_counts().plot.bar()","9b5c5d99":"import seaborn as sns\nimport matplotlib.pyplot as plt\nplot_location = 'upper right'\n\nfig = plt.figure(figsize=(10, 6))\nsns.distplot(data_df['petal length (cm)'][:50], label = data.target_names[0])\nsns.distplot(data_df['petal length (cm)'][50:100], label = data.target_names[1])\nsns.distplot(data_df['petal length (cm)'][100:] , label = data.target_names[2] )\nplt.legend(loc=plot_location)\nplt.title('Distribution of Petal Lengths across 3 classes')\nfig.show()","deb3b3e4":"fig = plt.figure(figsize=(10, 6))\nsns.distplot(data_df['petal width (cm)'][:50], label = data.target_names[0])\nsns.distplot(data_df['petal width (cm)'][50:100], label = data.target_names[1])\nsns.distplot(data_df['petal width (cm)'][100:] , label = data.target_names[2] )\nplt.legend(loc=plot_location)\nplt.title('Distribution of Petal widths across 3 classes')\nfig.show()","f46cf6dd":"fig = plt.figure(figsize=(10, 6))\nsns.distplot(data_df['sepal length (cm)'][:50], label = data.target_names[0])\nsns.distplot(data_df['sepal length (cm)'][50:100], label = data.target_names[1])\nsns.distplot(data_df['sepal length (cm)'][100:] , label = data.target_names[2] )\nplt.legend(loc=plot_location)\nplt.title('Distribution of Sepal Lengths across 3 classes')\nfig.show()","0962ee85":"fig = plt.figure(figsize=(10, 6))\nsns.distplot(data_df['sepal width (cm)'][:50], label = data.target_names[0])\nsns.distplot(data_df['sepal width (cm)'][50:100], label = data.target_names[1])\nsns.distplot(data_df['sepal width (cm)'][100:] , label = data.target_names[2] )\nplt.legend(loc=plot_location)\nplt.title('Distribution of Sepal Widths across 3 classes')\nfig.show()","43274f93":"sns.pairplot(data_df[data.feature_names]);","a7b32146":"iris = sns.load_dataset(\"iris\")\nsns.pairplot(iris, hue=\"species\");","ee14edb5":"g = sns.PairGrid(data_df[data.feature_names])\ng.map_diag(sns.kdeplot)\ng.map_offdiag(sns.kdeplot, n_levels=6);","b1aa887e":"Let's have a look at the balance of the dataset. It is a perfect balanced dataset. ","170bfb4c":"### Distribution of Petal Lengths (cm):\nLet's have a look at the distribution of the **petal lengths** here for the different classes. It is quite obvious that $Iris Setosa$ class has petal length between **[1,2]** and the others are a bit overlapped. So in this feature, though $Iris Setosa$ class is linearly separable from the rest of them, but remaining two are not linearly separable. ","b28691e8":"### Pairplot Exploration\nTo plot multiple pairwise bivariate distributions in a dataset, you can use the pairplot() function. This creates a matrix of axes and shows the relationship for each pair of columns in a DataFrame. By default, it also draws the univariate distribution of each variable on the diagonal Axes:","993c9648":"#### Distribution of Sepal Lengths (cm):\nHaving a look at the sepal lengths, we can see that there is an increasing trend of sepal lengths, there is overlap between **Iris Setosa** and **Iris Versicolor**. Also similar overlap is observed between **Iris Versicolor** and **Iris Virginica**. However, **Iris Setosa** and **Iris Virginica** sepal lengths doesn't overlap. \n","36bf625e":"The Iris flower data set or Fisher's Iris data set is a multivariate data set introduced by the British statistician, eugenicist, and biologist Ronald Fisher in his 1936 paper [The use of multiple measurements in taxonomic problems as an example of linear discriminant analysis.](https:\/\/onlinelibrary.wiley.com\/doi\/abs\/10.1111\/j.1469-1809.1936.tb02137.x) It is sometimes called Anderson's Iris data set because Edgar Anderson collected the data to quantify the morphologic variation of Iris flowers of three related species.\n\n\nThe data set consists of 50 samples from each of three species of Iris (Iris setosa, Iris virginica and Iris versicolor). Four features were measured from each sample: the length and the width of the sepals and petals, in centimeters. Based on the combination of these four features, Fisher developed a linear discriminant model to distinguish the species from each other.\n\nThe use of this data set in cluster analysis however is not common, since the data set only contains two clusters with rather obvious separation. One of the clusters contains ''Iris setosa'', while the other cluster contains both ''Iris virginica'' and ''Iris versicolor'' and is not separable without the species information Fisher used. This makes the data set a good example to explain the difference between supervised and unsupervised techniques in data mining. Nevertheless, all three species of ''Iris'' are separable in the projection on the nonlinear and branching principal component.\n\n#### The dataset contains the features of the following three flowers","787f30f7":"### Distribution of Sepal  Widths (cm):\nHaving a look at the sepal widths, we can see that there is an increasing trend of sepal lengths, however, all of the three overlaps at some feature values. \n","9a44f988":"### Distribution of Petal Widths (cm):\nSimilar to the distribution of the **petal lengths**, the **petal widths** here for the different classes also share a similar distribution. It is quite obvious that $Iris Setosa$ class has petal widths between **[0.3, 0.6]** and the others are a bit overlapped. So in this feature, though $Iris Setosa$ class is linearly separable from the rest of them, but remaining two are not linearly separable. ","dc57d57f":"The original data contains the four parameters and their classes. It's a simple dictionary with a number of keys. We can have a look at them. However, there are some additional information along with the data. We can just have a look at that here. ","90b6b37b":"Specifying the ``hue`` parameter automatically changes the histograms to KDE plots to facilitate comparisons between multiple distributions.","7c12e2b3":"For easier access and manipulation, we will just make a pandas dataframe and will perform various analysis by just fetching the data from the data frame. "}}