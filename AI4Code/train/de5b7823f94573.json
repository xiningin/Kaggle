{"cell_type":{"25f46305":"code","77844782":"code","d3a138f8":"code","7429b1d3":"code","9a955397":"code","74ce9634":"code","15a95da6":"code","410eb751":"code","cc2aa471":"code","f5bf974a":"code","17f5bd01":"code","c3975cf9":"code","011408ea":"markdown","5c2a2cd2":"markdown","07e4b700":"markdown","c1f5ddb0":"markdown","e1655622":"markdown","ed588f03":"markdown"},"source":{"25f46305":"import numpy as np\nimport pandas as pd \n\nfrom sklearn.preprocessing import LabelEncoder\n\nTRAIN_PATH = \"..\/input\/widsdatathon2022\/train.csv\"\nTEST_PATH = \"..\/input\/widsdatathon2022\/test.csv\"\nTARGET = \"site_eui\"\n\ntrain = pd.read_csv(TRAIN_PATH)\ntest = pd.read_csv(TEST_PATH)\ntrain.head()\n","77844782":"def devideColumnsByType(df):\n    category_columns=df.select_dtypes(include=['object']).columns.values.tolist()\n    numeric_columns=df.select_dtypes(exclude=['object']).columns.values.tolist()\n    \n    return category_columns,numeric_columns\n\n\ncateCol,numCol = devideColumnsByType(train)\nprint(\"cateCol=\",cateCol)\nprint(\"cateCol type=\",type(cateCol))\nprint(\"\")\nprint(\"numCol=\",numCol)\nprint(\"numCol type=\",type(numCol))","d3a138f8":"train.describe(include='O')","7429b1d3":"test.describe(include='O')","9a955397":"def getMissingDataCount(df,missing_col_name ='Missing Data Count'):\n    missing_df = pd.DataFrame(df.isnull().sum(),columns=[missing_col_name])\n    \n    return missing_df[missing_df[missing_col_name] != 0].sort_values(missing_col_name,ascending=False)","74ce9634":"getMissingDataCount(train)","15a95da6":"getMissingDataCount(test)","410eb751":"train = pd.read_csv(TRAIN_PATH)\ntest = pd.read_csv(TEST_PATH)\n\ndef checkNull_fillData(df):\n    for col in df.columns:\n        if len(df.loc[df[col].isnull() == True]) != 0:\n            if df[col].dtype == \"float64\" or df[col].dtype == \"int64\":\n                df.loc[df[col].isnull() == True,col] = df[col].mean()\n            else:\n                df.loc[df[col].isnull() == True,col] = df[col].mode()[0]\n                \ncheckNull_fillData(train)\ncheckNull_fillData(test)","cc2aa471":"str_list = [] \nnum_list = []\nfor colname, colvalue in train.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)\n        \nfor col in str_list:\n    encoder = LabelEncoder()\n    encoder.fit(train[col])\n    train[col] = encoder.transform(train[col])\n\n    for label in np.unique(test[col]):\n        if label not in encoder.classes_: \n            encoder.classes_ = np.append(encoder.classes_, label) \n    test[col] = encoder.transform(test[col])","f5bf974a":"getMissingDataCount(train)","17f5bd01":"getMissingDataCount(test)","c3975cf9":"train.head()","011408ea":"# Label Encoding","5c2a2cd2":"# check Data ","07e4b700":"# check column  ","c1f5ddb0":"# missing data ","e1655622":"[State_Factor unique item] => train size is 7, tes size is 6","ed588f03":"# convert missing data to new data  "}}