{"cell_type":{"85f649d1":"code","6d34d2f6":"code","0062d3d0":"code","d2f3c260":"code","d34a55ce":"code","8f876357":"code","a3fc5ef1":"code","9926594a":"code","cfd8967a":"code","2d9b5e2f":"markdown","ae8f5f70":"markdown","6e7dc1e4":"markdown","496ba2e8":"markdown","da091691":"markdown","582f8518":"markdown","4106ff3e":"markdown","10adbf82":"markdown","687ee859":"markdown","31d04d02":"markdown","d48d0ce0":"markdown"},"source":{"85f649d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n!pip install apyori\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom apyori import apriori\nfrom collections import Counter\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nplt.style.use('fivethirtyeight')\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d34d2f6":"df = pd.read_csv('\/kaggle\/input\/groceries-dataset\/Groceries_dataset.csv')\ndf.head()\ndf3 = df.sort_values(by = 'Member_number')\ndf[df['Member_number'] == 3831]","0062d3d0":"#['Member_number', 'Date', 'itemDescription']\nprint('basic info')\nprint(df.info())\nprint('no nulls in dataframe')\nprint(df.isnull().sum())\nprint('count of appearences of a member in data ')\nprint(df['Member_number'].value_counts())\nprint('count of appearences of an item in data ')\nprint(df['itemDescription'].value_counts())","d2f3c260":"#['Member_number', 'Date', 'itemDescription']\ndate_group = df.groupby('Date')\ndf2 = pd.DataFrame(columns=('Date', 'cus_id', 'Items')) \nfor date in date_group:\n    cus = []\n    cus = date_group['Member_number'].unique().loc[date[0]]\n    for customer in cus:\n        filt = ((df['Date'] == date[0]) & (df['Member_number'] == customer))\n        item_str = ','.join(df.loc[filt,'itemDescription'])\n        df2 = df2.append({'Date':date[0], 'cus_id':customer, 'Items':item_str},ignore_index = True)    ","d34a55ce":"all_items = (','.join(df2['Items'])).split(',')\nitem_count_dict = Counter(all_items)\ntop_items = item_count_dict.most_common(10)\ntop_items_lst = list(map(lambda x : x[0],top_items))\ntop_items_lst","8f876357":"df3 = df2.copy()\ndf3['TS'] = pd.to_datetime(df3['Date'], format='%d-%m-%Y')\n#df3.set_index('TS',inplace=True)\n# adding new columns for top item counts\nfor items in top_items_lst:\n    df3[items] = 0\n#df3.head()    \n\nfor x in range(len(df3)):\n    for item in top_items_lst:\n        df3.loc[x,item] = df3.loc[x,'Items'].count(item)\ndf3.set_index('TS',inplace = True)        \ndf3.drop(columns=['cus_id','Date','Items'],inplace = True)       \nmonthly_sell = df3.resample('M').sum()\nmonthly_sell.head()        ","a3fc5ef1":"colour_list = ['blue','green','red','orange','purple','yellow','brown','cyan','olive','gray','magenta']\nplt.figure(figsize=(15,10))\nfor i,items in enumerate(top_items_lst):\n    plt.plot(monthly_sell[items],label = items,color = colour_list[i])\nplt.xlabel('Time')\nplt.ylabel('Units sold')\nplt.title('Variation of units sold')\nplt.legend()\nplt.show()","9926594a":"transactions = []\nfor tran in df2['Items']:\n    temp = tran.split(',')\n    transactions.append(temp)  ","cfd8967a":"association_rules = apriori(transactions,min_support=0.00030,min_confidence=0.01,min_lift=3,min_length=2)\nassociation_result = list(association_rules)\nassociation_result","2d9b5e2f":"# creating a dataframe summarising all the items a customer bought on a perticular day","ae8f5f70":"# Basic initial analysis","6e7dc1e4":"# Before market basket analysis, let's do some visual analysis","496ba2e8":"**Top-10 sold data in all transactions**","da091691":"# creating list of transactions, suitable for apriori","582f8518":"# Data is ready for, creating the model and training it.","4106ff3e":"# loading the dataframe","10adbf82":"**Number of units sold mothly**","687ee859":"**Plotting the distribution of top items over the time**","31d04d02":"basic information","d48d0ce0":"**Monthly variation of items**"}}