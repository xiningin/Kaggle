{"cell_type":{"3731dc84":"code","3844fd89":"code","622dbb08":"code","cfea5212":"code","c947cabf":"code","69d528bb":"code","69c18c6a":"markdown","1dfb057c":"markdown","37710301":"markdown"},"source":{"3731dc84":"import matplotlib.pyplot as plt \nimport pandas as pd\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics\nfrom sklearn.metrics import classification_report, confusion_matrix \nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import ensemble\nfrom sklearn import *\nfrom sklearn.metrics import accuracy_score, f1_score\nfrom statistics import mean\nfrom sklearn.ensemble import GradientBoostingClassifier\nimport numpy as np\n\ndf = pd.read_csv('\/kaggle\/input\/breastcancercsv\/breastcancer.csv')\n\n#Immediately I am looking for columns to drop that I do not believe will help with my analysis\n\ndf = df.drop(['id'], axis=1)\ndf.head()\n","3844fd89":"df['diagnosis'] = df['diagnosis'].replace({'B': 0, 'M': 1})","622dbb08":"#Now I will begin reviewing the metrics for each of these to see their correllation to the predicted value\ndf_heat = df.corr()\nplt.figure(figsize=(30,15))\nsns.heatmap(df_heat, annot=True, cmap='coolwarm')","cfea5212":"#From the above graphic I will begin removing variables that have poor cor to what im trying to predict\n\n\ndf = df.drop(['fractal_dimension_mean', 'texture_se', 'smoothness_se', 'symmetry_se', 'fractal_dimension_se'], axis=1)","c947cabf":"X = df.drop(['diagnosis'], axis=1)\ny = df['diagnosis']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=10, shuffle=True)","69d528bb":"GBRmodel = ensemble.GradientBoostingClassifier(\n    n_estimators = 300,\n    learning_rate = 0.01,\n    max_depth = 6,\n    min_samples_split = 5, \n    min_samples_leaf = 30,\n    max_features = 6,\n    loss = 'deviance'\n)\n\n\n\nGBRmodelname = 'GradientBoosting'\nGBRmodel.fit(X_train, y_train)\nprediction = GBRmodel.predict(X_test)\nmetrics.plot_confusion_matrix(GBRmodel, X_test, y_test)\nprint(classification_report(y_test, prediction))","69c18c6a":" This heatmap graphic is a great tool that I used to determine what features I would keep in for my model","1dfb057c":"From this output I was quite satisified. Especially since when predicting a disease you would want to minimize false negatives which was done well by this model.","37710301":"The purpose of this model was to use the dataset to predict whether or not someone had breast cancer based on a variety of features. My initial plan was to review the dataset for any columns that would need to be dropped then to test for correllations and work on gradient boosting from there. Since the outcome was so positive I did not go forward with testing other models."}}