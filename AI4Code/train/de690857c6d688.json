{"cell_type":{"00bd85df":"code","65d54e9a":"code","0687a456":"code","22ba6a86":"code","5e26a855":"code","03c0a094":"code","8e52bb72":"code","5f9878c3":"code","3ef291fc":"code","9b551afc":"code","9d5095cb":"code","43d98783":"code","4ca4e11a":"code","27e3393e":"code","98e3280f":"code","ec962e9a":"code","fdcf3387":"code","12feb01a":"code","8accac4b":"code","09d0d709":"code","babdd15f":"code","16470e78":"code","3b1ad7d1":"code","cbeb617c":"code","361bf945":"code","823b4568":"code","8f0dd6c4":"markdown","421da10b":"markdown","e90e00c7":"markdown","850cb859":"markdown","c18882f1":"markdown","ddd01d46":"markdown","aa3431e0":"markdown","915d79d8":"markdown","e02030a7":"markdown"},"source":{"00bd85df":"# Sqlite is a library that implements a SQL database engine. \nimport sqlite3\nimport numpy as np\nimport pandas as pd\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","65d54e9a":"#connection\nconn = sqlite3.connect('..\/input\/world-development-indicators\/database.sqlite')","0687a456":"#sqlite_master is a table with database schema\npd.read_sql(\"\"\" SELECT *\n                FROM sqlite_master\n                WHERE type='table';\"\"\",\n           conn)","22ba6a86":"# check the head\npd.read_sql(\"\"\"SELECT *\n               FROM Indicators\n               LIMIT 3;\"\"\",\n           conn)","5e26a855":"# how many rows?\npd.read_sql(\"\"\"SELECT COUNT(*)\n               FROM Indicators;\"\"\",\n           conn)","03c0a094":"# checking for missing values in one column\npd.read_sql(\"\"\"SELECT COUNT(*)\n               FROM Indicators\n               WHERE IndicatorName IS NULL;\"\"\",\n           conn)","8e52bb72":"# if I need filter not null\npd.read_sql(\"\"\"SELECT *\n               FROM Indicators\n               WHERE IndicatorName IS NOT NULL;\"\"\",\n           conn)","5f9878c3":"# checking for missing values in all columns\npd.read_sql(\"\"\"SELECT COUNT(*) - COUNT(CountryName) AS missing_CountryName,\n                      COUNT(*) - COUNT(CountryCode) AS missing_CountryCode,\n                      COUNT(*) - COUNT(IndicatorName) AS missing_IndicatorName,\n                      COUNT(*) - COUNT(IndicatorCode) AS missing_IndicatorCode, \n                      COUNT(*) - COUNT(Year) AS missing_Year, \n                      COUNT(*) - COUNT(Value) AS missing_Value\n                FROM Indicators;\"\"\",\n           conn)","3ef291fc":"# how many indicators?\npd.read_sql(\"\"\"SELECT COUNT (DISTINCT IndicatorName)\n                FROM Indicators;\"\"\",\n           conn)","9b551afc":"# selecting distinct indicators\npd.read_sql(\"\"\"SELECT DISTINCT IndicatorName\n                FROM Indicators;\"\"\",\n           conn)","9d5095cb":"# I wanna search for some indicator about GDP\npd.read_sql(\"\"\"SELECT DISTINCT IndicatorName\n               FROM Indicators\n               WHERE IndicatorName LIKE 'GDP%';\"\"\",\n           conn)","43d98783":"# how about GDP per capita of Brazil in last years ?\npd.read_sql(\"\"\" SELECT *\n                FROM Indicators\n                WHERE IndicatorName ='GDP per capita (current US$)'\n                AND CountryName = \"Brazil\"\n                AND Year>=2010;\"\"\",\n           conn)","4ca4e11a":"# let's  compare with China\npd.read_sql(\"\"\"SELECT *\n               FROM Indicators\n               WHERE IndicatorName='GDP per capita (current US$)'\n               AND (CountryName= 'Brazil' OR CountryName= 'China')\n               AND Year>=2010;\"\"\",\n           conn)","27e3393e":"# let's check the 90's in Brazil\npd.read_sql(\"\"\"SELECT * \n               FROM Indicators\n               WHERE IndicatorName='GDP per capita (current US$)'\n               AND CountryName='Brazil'\n               AND Year BETWEEN 1990 AND 1999;\"\"\",\n           conn)","98e3280f":"# let's check other countries in 2014\npd.read_sql(\"\"\"SELECT *\n               FROM Indicators\n               WHERE IndicatorName='GDP per capita (current US$)'\n               AND CountryName IN (\"Brazil\", \"China\", \"India\")\n               AND Year=2014;\"\"\",\n            conn)","ec962e9a":"# let's search for the highest GDP per capita in 2014\npd.read_sql(\"\"\"SELECT CountryName, MAX (Value)\n               FROM Indicators\n               WHERE IndicatorName = 'GDP per capita (current US$)'\n               AND Year = 2014;\"\"\",\n            conn)","fdcf3387":"#Let's order (and reafirm the highest GDP per capita)\npd.read_sql(\"\"\"SELECT * \n               FROM Indicators\n               WHERE IndicatorName='GDP per capita (current US$)'\n               AND Year= 2014\n               ORDER BY Value DESC\n               LIMIT 3;\"\"\",\n           conn)","12feb01a":"# Let's compare the averages\npd.read_sql(\"\"\" SELECT CountryName, AVG(Value)\n                FROM Indicators\n                WHERE IndicatorName= 'GDP per capita (current US$)'\n                AND CountryName IN ('Brazil', 'China', 'India', 'Angola')\n                AND Year>2010\n                GROUP BY CountryName;\"\"\",\n           conn)","8accac4b":"#how many measures during this time?\npd.read_sql(\"\"\" SELECT CountryName, count (*) AS n_measures\n                FROM Indicators\n                WHERE IndicatorName= 'GDP per capita (current US$)'\n                AND CountryName IN ('Brazil', 'China', 'India', 'Angola')\n                AND Year>2010\n                GROUP BY CountryName\n                ORDER BY n_measures\n                LIMIT 10;\"\"\",\n           conn)","09d0d709":"# important to know that Angola has less measures during this time\npd.read_sql(\"\"\" SELECT *\n                FROM Indicators\n                WHERE IndicatorName= 'GDP per capita (current US$)'\n                AND CountryName = 'Angola'\n                AND Year>2010;\"\"\",\n           conn)","babdd15f":"# let's make a join to get the information about indicators GDP related measured in 2014 in Brazil\npd.read_sql(\"\"\" SELECT Indicators.*, Series.LongDefinition\n                FROM Indicators\n                LEFT JOIN Series \n                ON Indicators.IndicatorName  = Series.IndicatorName\n                WHERE Indicators.IndicatorName LIKE 'GDP%'\n                AND CountryName ='Brazil'\n                AND Year=2014;\"\"\",\n            conn)","16470e78":"# I'm using arbitrary values, this is an exercise with didactic purposes: cuts on 10000 and 80000\ndf=pd.read_sql(\"\"\" SELECT *,\n                   CASE WHEN Value < 10000 THEN 'Low'\n                   WHEN Value > 80000 THEN 'High'\n                   ELSE 'Medium' END AS Category\n                   FROM Indicators\n                   WHERE IndicatorName='GDP per capita (current US$)'\n                   AND Year=2014;\"\"\",\n              conn)","3b1ad7d1":"fig, axes= plt.subplots(1,2, figsize=(8,4),sharey=True)\n\nax1= sns.distplot(df.Value, bins=40, hist_kws={'edgecolor':'k'}, color='mediumseagreen',kde=False,ax=axes[0])\nax1.set_title('Histogram')\nax1.set(xlabel=\"GDP per capita (current US$) - Value\")\nax1= sns.despine()\n\nax2= sns.countplot(x='Category', data=df, palette=\"Greens\", ax=axes[1])\nax2.set_title('Frequency Count')\nax2.set(xlabel=\"GDP per capita (current US$) - Category\")\nax2= sns.despine();","cbeb617c":"fig.savefig('eda_sql.png', transparent=True)","361bf945":"# adding the mean of last 3 years using window function\n\npd.read_sql(\"\"\" SELECT *,\n                ROUND(AVG(Value) OVER (PARTITION BY CountryCode),0) AS AVG_3Y\n                FROM Indicators\n                WHERE IndicatorName='GDP per capita (current US$)'\n                AND Year IN (2012,2013,2014);\"\"\",\n           conn)","823b4568":"# the first place from each year\npd.read_sql(\"\"\" WITH GDP_3 AS \n                (SELECT *,\n                RANK () OVER (PARTITION BY Year ORDER BY Value DESC) AS myrank\n                FROM Indicators\n                WHERE IndicatorName='GDP per capita (current US$)'\n                AND Year IN (2012,2013,2014))\n                \n                SELECT *\n                FROM GDP_3\n                WHERE myrank = 1;\"\"\",\n           conn)","8f0dd6c4":"# 3- Aggregating and Summarizing","421da10b":"## <span style='color:DarkGoldenrod'> Let's explore the Indicators table.  <\/span>","e90e00c7":"# 2- Filtering","850cb859":"# 1- Selecting","c18882f1":"# 6 - Window Function\nWith a window function, we can make calculations across rows \"in a window\" and return a value for each row.\nThis window can be, for example, grouped sets based on another column or even an ordered set.","ddd01d46":"# 7 - Common Table Expression (CTE)\nA CTE will save results of a query temporary. It can help simplifying some queries and, for example, can also help filtering based on ranking results. ","aa3431e0":"# 4- JOINs","915d79d8":"# 5- Using CASE WHEN\n\nCASE statements are like \"IF this THEN that\".  \nHere I'm going to use CASE statements for a custom discretization.","e02030a7":"# Exploratory Data Analysis with SQL\n\nThe purpose here is to use some queries to explore the data.\n"}}