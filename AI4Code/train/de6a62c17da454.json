{"cell_type":{"1b5c97c3":"code","62247ec3":"code","f6604d42":"code","002ec8b8":"code","6005a874":"code","6fcc0564":"code","05cb3033":"code","0968d22c":"code","3a55b0fe":"code","04ce721e":"code","62dd2b14":"code","069ea06b":"code","dd548b1e":"code","738ab0ee":"code","a8a304ec":"code","77ee6150":"code","4a37d8c8":"code","b4af433d":"code","99eb4446":"code","cde92bb3":"code","4a0c24ae":"code","5d8fe1c0":"code","5e0dde11":"code","a30fcec2":"code","4022af87":"code","1a6041f3":"code","bb751e06":"code","6e63243f":"code","fdc9f274":"code","bd63f9f9":"code","de8f2018":"code","3b9b24d2":"code","6f3e3f78":"code","6b317824":"code","9e4e1242":"code","b1055112":"code","824b63cf":"code","382a16d4":"code","57b566b7":"code","bff23ed0":"code","2a14a247":"code","52e1006e":"code","ac99afef":"code","90231217":"code","25b0ff07":"code","4f0c4a34":"code","f9dd5f5b":"code","a25c8b30":"code","32dfe817":"code","c2cf4b34":"code","51d65901":"code","00bd55f8":"code","28053f28":"code","91c10ea8":"code","51366b91":"code","25d0fa34":"code","a4e7a265":"code","b7f0a90b":"code","f9cf9b35":"code","f7c3e3c9":"code","99c666a2":"code","30eaddea":"code","3bf5569c":"code","94adbbc6":"code","20aa987e":"code","a3428c89":"code","126c0b05":"code","c7bf4109":"code","1cf96cf9":"code","e1d07a75":"code","24a4f370":"code","742b7a45":"code","b4b159ab":"code","05c11ce3":"code","54980fd2":"code","44779088":"code","456a9416":"code","eaf19119":"code","768b17ac":"markdown","0947fbd3":"markdown","197c3cba":"markdown","1c5c1462":"markdown","0bdc7602":"markdown","89b68c95":"markdown","3a6d302a":"markdown","4542a18c":"markdown","28aeb417":"markdown","79300df4":"markdown","36473187":"markdown","44bff6bb":"markdown","c821d6cd":"markdown","910ae077":"markdown","5c4268d7":"markdown","84b35080":"markdown","79578544":"markdown","a61133f3":"markdown","6eab2d5e":"markdown","3c06faf6":"markdown","4a4b2a52":"markdown","e1aa9012":"markdown","cc6fbfc4":"markdown","a05a6e41":"markdown","c36a5ddf":"markdown","dbb65dbc":"markdown","23fde269":"markdown","d067d5c9":"markdown","88c69128":"markdown","1e09099a":"markdown","3fc6ba67":"markdown","543663c7":"markdown","7c2ab891":"markdown","f28e225a":"markdown","66391c0d":"markdown","26ac1489":"markdown","8d24d2d8":"markdown","dec5bbfa":"markdown"},"source":{"1b5c97c3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.colors as colors\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n","62247ec3":"input_data = \"..\/input\/forcedataset\/force-ai-well-logs\/train.csv\"\nTARGET_1 = \"FORCE_2020_LITHOFACIES_LITHOLOGY\"\nTARGET_2 = \"FORCE_2020_LITHOFACIES_CONFIDENCE\"\nWELL_NAME = 'WELL'","f6604d42":"df = pd.read_csv(input_data, sep=';')","002ec8b8":"df.head()","6005a874":"df.columns","6fcc0564":"df.dtypes","05cb3033":"lithology_keys = {30000: 'Sandstone',\n                     65030: 'Sandstone\/Shale',\n                     65000: 'Shale',\n                     80000: 'Marl',\n                     74000: 'Dolomite',\n                     70000: 'Limestone',\n                     70032: 'Chalk',\n                     88000: 'Halite',\n                     86000: 'Anhydrite',\n                     99000: 'Tuff',\n                     90000: 'Coal',\n                     93000: 'Basement'}","0968d22c":"lithology_numbers = {30000: 0,\n             65030: 1,\n             65000: 2,\n             80000: 3,\n             74000: 4,\n             70000: 5,\n             70032: 6,\n             88000: 7,\n             86000: 8,\n             99000: 9,\n             90000: 10,\n             93000: 11}","3a55b0fe":"list_rock_type = list(df['FORCE_2020_LITHOFACIES_LITHOLOGY'].unique())","04ce721e":"list_rock_type","62dd2b14":"data_summary = df.describe()","069ea06b":"not_for_summary = ['FORCE_2020_LITHOFACIES_LITHOLOGY','FORCE_2020_LITHOFACIES_CONFIDENCE']\nfor_summary = [c for c in data_summary.columns if c not in not_for_summary]","dd548b1e":"data_summary = data_summary[for_summary]","738ab0ee":"data_summary","a8a304ec":"# Read the Well's name and the number of the records for each Well\n\nwells = np.unique(df['WELL'])\nwells","77ee6150":"plt.figure(figsize=(20,10))\ndf['WELL'].value_counts().plot(kind = 'bar')\nplt.show()","4a37d8c8":"rock_types_count = df[TARGET_1].value_counts()","b4af433d":"rock_types_count","99eb4446":"df[TARGET_1].value_counts().plot(kind = 'barh')","cde92bb3":"df_30000 = df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == 30000]\ndf_65030 = df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == 65030]\ndf_65000 = df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == 65000]\ndf_80000 = df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == 80000]\ndf_74000 = df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == 74000]\ndf_70000 = df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == 70000]\ndf_70032 = df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == 70032]\ndf_88000 = df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == 88000]\ndf_86000 = df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == 86000]\ndf_99000 = df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == 99000]\ndf_90000 = df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == 90000]\ndf_93000 = df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == 93000]","4a0c24ae":"na_count = df.isna().sum()\nN = df.shape[0]\nna_count = na_count \/ N\nna_count","5d8fe1c0":"na_count.plot(kind = 'bar')","5e0dde11":"# Feature summary for different types of Rock\ndef report_col(column):\n    merge_df = []\n    for i in range(len(list_rock_type)):\n        merge_df.append(df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == list_rock_type[i]][column].describe().rename(list_rock_type[i]))\n    \n    merge_df = pd.concat(merge_df, axis = 1)\n    return merge_df","a30fcec2":"def draw_box_rockType(col):\n    merge_dat = []\n    for rock in list_rock_type:\n        merge_dat.append(df[df[\"FORCE_2020_LITHOFACIES_LITHOLOGY\"] == rock][col].rename(rock))\n    merge_dat = pd.concat(merge_dat, axis = 1)\n    return merge_dat\n    ","4022af87":"df['CALI'].describe()","1a6041f3":"df_for_plot = df.copy()\ndf_for_plot['FORCE_2020_LITHOFACIES_LITHOLOGY'] = df_for_plot['FORCE_2020_LITHOFACIES_LITHOLOGY'].astype(str)","bb751e06":"xticks = [\"65000\", \"30000\", \"65030\", \"70000\", \"80000\", \"99000\", \"70032\", \"88000\", \"90000\", \"74000\", \"86000\", \"93000\"]","6e63243f":"df_for_plot.plot(kind = 'scatter', x = 'FORCE_2020_LITHOFACIES_LITHOLOGY', y = 'CALI', subplots = True, figsize = (20, 10), xticks = xticks)","fdc9f274":"report_col('CALI')","bd63f9f9":"draw_box_rockType('CALI').plot(kind='box', figsize = (20,10))","de8f2018":"df_for_plot.plot(kind = 'scatter', x = 'FORCE_2020_LITHOFACIES_LITHOLOGY', y = 'Z_LOC', subplots = True, figsize = (20, 10), xticks = xticks)","3b9b24d2":"report_col('Z_LOC')","6f3e3f78":"draw_box_rockType('Z_LOC').plot(kind='box', figsize = (20,10))","6b317824":"df['RMED'].describe()","9e4e1242":"df_for_plot.plot(kind = 'scatter', x = 'FORCE_2020_LITHOFACIES_LITHOLOGY', y = 'RMED', subplots = True, figsize = (20, 10), xticks = xticks)","b1055112":"report_col('RMED')","824b63cf":"draw_box_rockType('RMED').plot(kind='box', figsize = (20,10))","382a16d4":"df['RDEP'].describe()","57b566b7":"df_for_plot.plot(kind = 'scatter', x = 'FORCE_2020_LITHOFACIES_LITHOLOGY', y = 'RDEP', subplots = True, figsize = (20, 10), xticks = xticks)","bff23ed0":"report_col('RDEP')","2a14a247":"draw_box_rockType('RDEP').plot(kind='box', figsize = (20,10))","52e1006e":"df['RHOB'].describe()","ac99afef":"df_for_plot.plot(kind = 'scatter', x = 'FORCE_2020_LITHOFACIES_LITHOLOGY', y = 'RHOB', subplots = True, figsize = (20, 10), xticks = xticks)","90231217":"report_col('RHOB')","25b0ff07":"draw_box_rockType('RHOB').plot(kind='box', figsize = (20,10))","4f0c4a34":"df['GR'].describe()","f9dd5f5b":"df_for_plot.plot(kind = 'scatter', x = 'FORCE_2020_LITHOFACIES_LITHOLOGY', y = 'GR', subplots = True, figsize = (20, 10), xticks = xticks)","a25c8b30":"report_col('GR')","32dfe817":"draw_box_rockType('GR').plot(kind='box', figsize = (20,10))","c2cf4b34":"df['PEF'].describe()","51d65901":"df_for_plot.plot(kind = 'scatter', x = 'FORCE_2020_LITHOFACIES_LITHOLOGY', y = 'PEF', subplots = True, figsize = (20, 10), xticks = xticks)","00bd55f8":"report_col('PEF')","28053f28":"draw_box_rockType('PEF').plot(kind='box', figsize = (20,10))","91c10ea8":"df['DTC'].describe()","51366b91":"df_for_plot.plot(kind = 'scatter', x = 'FORCE_2020_LITHOFACIES_LITHOLOGY', y = 'DTC', subplots = True, figsize = (20, 10), xticks = xticks)","25d0fa34":"report_col('DTC')","a4e7a265":"draw_box_rockType('DTC').plot(kind='box', figsize = (20,10))","b7f0a90b":"df['SP'].describe()","f9cf9b35":"df_for_plot.plot(kind = 'scatter', x = 'FORCE_2020_LITHOFACIES_LITHOLOGY', y = 'SP', subplots = True, figsize = (20, 10), xticks = xticks)","f7c3e3c9":"report_col('SP')","99c666a2":"draw_box_rockType('SP').plot(kind='box', figsize = (20,10))","30eaddea":"df['ROP'].describe()","3bf5569c":"df_for_plot.plot(kind = 'scatter', x = 'FORCE_2020_LITHOFACIES_LITHOLOGY', y = 'ROP', subplots = True, figsize = (20, 10), xticks = xticks)","94adbbc6":"report_col('ROP')","20aa987e":"draw_box_rockType('ROP').plot(kind='box', figsize = (20,10))","a3428c89":"df['DRHO'].describe()","126c0b05":"df_for_plot.plot(kind = 'scatter', x = 'FORCE_2020_LITHOFACIES_LITHOLOGY', y = 'DRHO', subplots = True, figsize = (20, 10), xticks = xticks)","c7bf4109":"report_col('DRHO')","1cf96cf9":"draw_box_rockType('DRHO').plot(kind='box', figsize = (20,10))","e1d07a75":"heatmap_col = [col for col in df.columns if df[col].dtypes == 'float64']","24a4f370":"plt.figure(figsize=(20,10))\nsns.heatmap(df[heatmap_col].corr(), annot = True)\nplt.show()","742b7a45":"#color coding the rocks.\n\nfacies_color_map = { 'Sandstone': '#F4D03F',\n                     'Sandstone\/Shale': '#7ccc19',\n                     'Shale': '#196F3D',\n                     'Marl': '#160599',\n                     'Dolomite': '#2756c4',\n                     'Limestone': '#3891f0',\n                     'Chalk': '#80d4ff',\n                     'Halite': '#87039e',\n                     'Anhydrite': '#ec90fc',\n                     'Tuff': '#FF4500',\n                     'Coal': '#000000',\n                     'Basement': '#DC7633'}\n\n# get a list of the color codes.\nfacies_colors = [facies_color_map[mykey] for mykey in facies_color_map.keys()]","b4b159ab":"confidence_color_map = {0:'#FF0000', 1: '#00FF00', 2: '#0000FF'}\nconfidence_color = [confidence_color_map[mykey] for mykey in confidence_color_map.keys()]","05c11ce3":"wells_df = df.copy();\ndef map_lith_key(lith_map, row):\n    \n    lith_key = row['FORCE_2020_LITHOFACIES_LITHOLOGY']\n    \n    if lith_key in lith_map:\n        return lith_map[lith_key]\n    else:\n        print('Warning: Key {} not found in map'.format(lith_key))\n        return np.nan\n\nwells_df['LITHOLOGY'] = wells_df.apply (lambda row: map_lith_key(lithology_keys, row), axis=1)\nwells_df['LITH_LABEL'] = wells_df.apply (lambda row: map_lith_key(lithology_numbers, row), axis=1)","54980fd2":"#function to plot data in relation to depth and Rock Coloring\ndef make_facies_log_plot(log_df, curves, facies_colors, confidence_color):\n    \n    #make sure logs are sorted by depth\n    logs = log_df.sort_values(by='DEPTH_MD')\n    cmap_facies = colors.ListedColormap(\n            facies_colors[0:len(facies_colors)], 'indexed')\n    \n    ztop=logs.DEPTH_MD.min(); zbot=logs.DEPTH_MD.max()\n    \n    cluster=np.repeat(np.expand_dims(logs['LITH_LABEL'].values,1), 100, 1)\n    \n    num_curves = len(curves)\n    f, ax = plt.subplots(nrows=1, ncols=num_curves+2, figsize=(num_curves*3, 12))\n    \n    for ic, col in enumerate(curves):\n        \n        \n     \n        curve = logs[col]\n            \n        ax[ic].plot(curve, logs['DEPTH_MD'])\n        ax[ic].set_xlabel(col)\n        ax[ic].set_yticklabels([]);\n\n    # make the lithfacies column\n    im=ax[num_curves].imshow(cluster, interpolation='none', aspect='auto',\n                    cmap=cmap_facies,vmin=0,vmax=11)\n    \n    divider = make_axes_locatable(ax[num_curves])\n    cax = divider.append_axes(\"right\", size=\"20%\", pad=0.05)\n    cbar=plt.colorbar(im, cax=cax)\n    cbar.set_label((12*' ').join(['  SS', 'SS-Sh', 'Sh', \n                                ' Ml', 'Dm', 'LS', 'Chk ', \n                                '  Hl', 'Ann', 'Tuf', 'Coal', 'Bsmt']))\n    cbar.set_ticks(range(0,1)); cbar.set_ticklabels('')\n    \n    \n\n    ax[num_curves].set_xlabel('Facies')\n    ax[num_curves].set_yticklabels([])\n    ax[num_curves].set_xticklabels([])\n    \n    f.suptitle('Well: %s'%logs.iloc[0]['WELL'], fontsize=14,y=0.94)\n    \n    # make the confidence column\n    cluster_1 = np.repeat(np.expand_dims(logs['FORCE_2020_LITHOFACIES_CONFIDENCE'].values - 1,1), 100, 1)\n    cmap_confidence = colors.ListedColormap(\n            confidence_color[0:len(confidence_color)], 'indexed')\n    im_1 = ax[num_curves+1].imshow(cluster_1, interpolation = 'none', aspect = 'auto', cmap = cmap_confidence, vmin = 0, vmax = 2)\n    \n    divider_1 = make_axes_locatable(ax[num_curves + 1])\n    cax_1 = divider_1.append_axes(\"right\", size = \"20%\", pad = 0.05)\n    cbar_1 = plt.colorbar(im_1, cax = cax_1)\n    cbar_1.set_label((72*' ').join([' 1','2','3']))\n    cbar_1.set_ticks(range(0,1)); cbar_1.set_ticklabels('')\n    \n    ax[num_curves + 1].set_xlabel('Confidence')\n    ax[num_curves + 1].set_yticklabels([])\n    ax[num_curves + 1].set_xticklabels([])\n    \n    for i in range(len(ax)-1):\n        ax[i].set_ylim(ztop,zbot)\n        ax[i].invert_yaxis()\n        ax[i].grid()\n        ax[i].locator_params(axis='x', nbins=3)\n    \n    \n    plt.show()","44779088":"leftout_col = ['DEPTH_MD', 'FORCE_2020_LITHOFACIES_LITHOLOGY', 'FORCE_2020_LITHOFACIES_CONFIDENCE', 'WELL', 'GROUP', 'FORMATION','X_LOC', 'Y_LOC', 'Z_LOC','LITHOLOGY', 'LITH_LABEL', 'RSHA', 'SGR', 'NPHI', 'ROP', 'DTS', 'DCAL', 'MUDWEIGHT', 'RMIC', 'ROPA', 'RXO']","456a9416":"make_facies_log_plot(wells_df[wells_df['WELL'] == wells[0]] ,set(wells_df.columns) - set(leftout_col), facies_colors, confidence_color)","eaf19119":"make_facies_log_plot(wells_df[wells_df['WELL'] == wells[1]] ,set(wells_df.columns) - set(leftout_col), facies_colors, confidence_color)","768b17ac":"![image.png](attachment:image.png)","0947fbd3":"The scatter plot shows that Caliper Logs are distributed evenly. So Caliper Rock might not be the decisive factor in Rock Classification.","197c3cba":"A lot of na features...\n\nIdea:\n- Fill Na by mean value.\n- Fill Na using KNN.\n- Na with more than ... % will be unused.","1c5c1462":"### Helper function","0bdc7602":"This explains why the models are always inclined to predict \"65000\" rock type","89b68c95":"Comment: Different types of Rock start to appear at different depth.","3a6d302a":"RHOB seems to be quite similar between different types of ROCK","4542a18c":"### ROP (Rate Of Penetration)","28aeb417":"## 6. Heatmap","79300df4":"## 3. Rock type distribution","36473187":"### RDEP (Deep Reading Restitivity Measurement)","44bff6bb":"- Solution for Skewed data: Duplicate the Rock Type with small amount multiple times.\n- Or apply some kind of regulation or class weights...","c821d6cd":"![image.png](attachment:image.png)","910ae077":"Note:\n- df: All data.\n- df_for_plot: df with Rock Type Columns astype String\n- data_summary: summary of all columns except for Rock Types and Confidence\n- rock_types_count: Number of different types of rocks.\n- list_rock_type: All types of Rock\n- Types of Rock: [65000, 30000, 65030, 70000, 99000, 80000, 86000, 74000, 70032,90000, 88000, 93000]\n- Lithology_key: map keys to types of rocks.\n- Lithology_number: map keys to numbers from 0 to 11 corresponds to 12 types of rocks.","5c4268d7":"# EDA WITH WELL LOGS","84b35080":"Split data by types of rocks","79578544":"## 2. WELL RECORDS DISTRIBUTION","a61133f3":"### Caliper Log","6eab2d5e":"## 4. NA check","3c06faf6":"### PEF (Photo Electric Factor Log)","4a4b2a52":"### SP (Self Potential Log)","e1aa9012":"**XGBoost**","cc6fbfc4":"### GR (Gamma Ray Log)","a05a6e41":"# 8. Plot 2D Position of Wells.","c36a5ddf":"### RMED (Medium Deep Reading Restitivity measurement)","dbb65dbc":"### DRHO (Density Correction Log)","23fde269":"### Data Summary:","d067d5c9":"Comment: \n\nCan be used to differentiate 86000, 88000, 90000, 93000 from the rest\n\n","88c69128":"## 5. Columns' data distribution","1e09099a":"### DTC (Compressional Waves Sonic Log us\/ft)","3fc6ba67":"![image.png](attachment:image.png)","543663c7":"### Z_LOC","7c2ab891":"### List of Rock Types:","f28e225a":"Comment: Can be used to differentiate 86000, (90000, 88000, 93000) from the rest","66391c0d":"### RHOB (Bulk Density Log)","26ac1489":"# 7. Plot data in relation to depth and Rock Coloring:","8d24d2d8":"## 1. Import","dec5bbfa":"**RANDOM FOREST CONFUSION MATRIX**"}}