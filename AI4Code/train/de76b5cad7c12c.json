{"cell_type":{"d4f27d71":"code","71ab6ada":"code","34a2add3":"code","62685b0c":"code","a95a4282":"code","35e28f26":"code","47d91e9f":"code","2e230c6e":"code","4e2252c6":"code","751b5c13":"code","b45c1696":"code","7fa15f22":"code","3254ec32":"code","0a6dd9b3":"code","eb03fb5f":"code","040b4f5f":"code","18393311":"code","f52857c4":"code","d733fcce":"code","5fe00d3d":"code","22ced66b":"code","61058cd8":"code","99faa5ec":"code","7c821389":"code","601bbd3b":"code","14d03bc6":"code","858c8de7":"code","461e3280":"code","caae334d":"code","806bbb82":"markdown","864d544c":"markdown","7ab88ef5":"markdown","9537cdd7":"markdown","393f0395":"markdown","ec0e1194":"markdown","b3b833ca":"markdown","322838a5":"markdown","028d947a":"markdown","f342be05":"markdown","d0dee935":"markdown","e79167bb":"markdown","7e6e3107":"markdown","21a334a8":"markdown","4351d95d":"markdown","b3794898":"markdown","087f1852":"markdown","9ed832bf":"markdown","1f5649a0":"markdown","02416627":"markdown","a6ed5537":"markdown","da17a4af":"markdown","a6fc695a":"markdown","245b46c2":"markdown","01bc57de":"markdown","1d46811f":"markdown","b3d7831e":"markdown","277c7bda":"markdown","4c289593":"markdown","25bc12b7":"markdown","136c807e":"markdown"},"source":{"d4f27d71":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","71ab6ada":"dataset = pd.read_csv('..\/input\/car-price-prediction\/CarPrice_Assignment.csv')\ndataset","34a2add3":"dataset = dataset.drop('car_ID', axis=1)\ndataset","62685b0c":"dataset.info()","a95a4282":"dataset_ = dataset.select_dtypes(include='object')\nfor col in dataset_.columns:\n    print('{}\\n'.format(col) + 'unique count : ' + '{}'.format(dataset[col].nunique()))\n    print(dataset[col].unique())\n    print('')","35e28f26":"dataset['CarBrand'] = dataset['CarName'].str.split(' ', n=1, expand = True)[0]\ndataset = dataset.drop('CarName', axis=1)\ndataset","47d91e9f":"dataset['CarBrand'].unique()","2e230c6e":"dataset['CarBrand'] = dataset['CarBrand'].replace('alfa-romero', 'alfa-romeo')\ndataset['CarBrand'] = dataset['CarBrand'].replace('maxda', 'mazda')\ndataset['CarBrand'] = dataset['CarBrand'].replace('Nissan', 'nissan')\ndataset['CarBrand'] = dataset['CarBrand'].replace('porcshce', 'porsche')\ndataset['CarBrand'] = dataset['CarBrand'].replace('toyouta', 'toyota')\ndataset['CarBrand'] = dataset['CarBrand'].replace(['vokswagen', 'vw'], 'volkswagen')","4e2252c6":"dataset_ = dataset.select_dtypes(include='object')\nfor col in dataset_.columns:\n    print('{}\\n'.format(col) + 'unique count : ' + '{}'.format(dataset[col].nunique()))\n    print(dataset[col].unique())\n    print('')","751b5c13":"fig, ax = plt.subplots()\nfig.set_size_inches(20, 8.27)\nplt.title('Count of CarBrand')\nsns.countplot(x='CarBrand', data=dataset, order = dataset['CarBrand'].value_counts().index, ax=ax)","b45c1696":"selection = dataset.select_dtypes(exclude=object)\nfig, ax = plt.subplots(1, len(selection.columns), figsize=(20, 0.75*len(selection.columns)))\n\nfor i, col in enumerate(selection.columns):\n    axo = dataset[col].plot(kind='box', ax=ax[i], showfliers=True, grid=True)\n    axo.set_ylabel(col)\n\nplt.suptitle('All Feature Boxplot')    \nplt.tight_layout()\nplt.show()","7fa15f22":"price = pd.DataFrame()\nprice['dummy'] = dataset['price']\n\nfor col in dataset.select_dtypes(exclude=object):\n    q1 = dataset[col].quantile(0.25)\n    q3 = dataset[col].quantile(0.75)\n    iqr = q3-q1\n    lower_tail = q1 - 1.5 * iqr\n    upper_tail = q3 + 1.5 * iqr\n    imputer = dataset[col].mean()\n    for i in range(0, len(dataset)):\n        if dataset[col][i] > upper_tail:\n            dataset.loc[i,col] = imputer\n            \ndataset = dataset.drop('price', axis=1)\ndataset.insert(loc=len(dataset.columns), column='price', value=price['dummy'])","3254ec32":"fig, ax = plt.subplots(1, len(selection.columns), figsize=(20, 0.75*len(selection.columns)))\n\nfor i, col in enumerate(selection.columns):\n    axo = dataset[col].plot(kind='box', ax=ax[i], showfliers=True, grid=True)\n    axo.set_ylabel(col)\n\nplt.suptitle('All Feature Boxplot - After Imputing')   \nplt.tight_layout()\nplt.show()","0a6dd9b3":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\nfor col in dataset.select_dtypes(include=object):\n    if col != 'CarBrand':\n        dataset[col] = le.fit_transform(dataset[col])\ndataset","eb03fb5f":"dataset.info()","040b4f5f":"dataset = pd.get_dummies(dataset, drop_first=False)\ndataset","18393311":"price = dataset['price']\ndataset = dataset.drop('price', axis=1)\ndataset.insert(loc=len(dataset.columns), column='price', value=price)\ndataset","f52857c4":"fig, ax = plt.subplots()\nfig.set_size_inches(25, 10)\nsns.heatmap(dataset.corr())","d733fcce":"x = dataset.iloc[:, 1:-1].values\ny = dataset.iloc[:,-1].values","5fe00d3d":"print(x)","22ced66b":"print(y)","61058cd8":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.2,random_state=27)","99faa5ec":"print(x_train)","7c821389":"print(y_train)","601bbd3b":"print(x_test)","14d03bc6":"print(y_test)","858c8de7":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators=10, random_state=27)\nregressor.fit(x_train, y_train)","461e3280":"y_pred = regressor.predict(x_test)\nnp.set_printoptions(precision=2)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","caae334d":"from sklearn.metrics import r2_score\nr2_score(y_test, y_pred)","806bbb82":"### 4.1 Transforming Into Array","864d544c":"We got a model which can predict car price with 92.56% accuracy. This result is well enough and definitely can help car companies as an insight in the future.","7ab88ef5":"I thought earlier that the CarBrand can be grouped to reduce the unique count. But, the count data is just like above. It is better to leave it as it is.","9537cdd7":"Now, the encoding is done.","393f0395":"Alright, now we extracted the brand name from \"CarName\" column. Let's check again the unique value and count.","ec0e1194":"In a glimpse, the predicted value is not far from the actual value. Let's see the R2 score.","b3b833ca":"### 4.2 Spliting Into Train Set and Test Set","322838a5":"### 4.3 Model Building using Random Forest Regressor","028d947a":"Random Forest Regressor doesn't need scaling on the features. We can proceed to test the test set prediction.","f342be05":"This dataset consist of 205 data. It is a quite small data. The \"car_ID\" colomn can be dropped because it just functioning as an index.","d0dee935":"The data has 24 features and 1 dependant variable which is \"price\".","e79167bb":"### 3.1 Outliering Means Imputing","7e6e3107":"### 2.1 Overview","21a334a8":"### 3.2 Encoding Categorical Data","4351d95d":"## Step 1 - Importing Libraries","b3794898":"First, we encode the categorical data with label encoder except \"CarBrand\". The \"CarBrand\" column will be encode using one-hot encoding method. Label encode tend to change the data type into integer, so we do the encoding 1-by-1 for each columns, not directly to all dataset.","087f1852":"## Step 3 - Preprocessing","9ed832bf":"### 3.3 Re-ordering the \"price\" Column","1f5649a0":"There are outliers in some features. Mean-Imputing is used to handle the outlier. The dependant variable, \"price\", is left out to maintain the data originality.","02416627":"Now the dataset is clean and ready for preprocessing before we build the model.","a6ed5537":"## Step 2 - Dataset Importing and Overview","da17a4af":"Moved the \"price\" column to the rightmost of the dataset.","a6fc695a":"All features will be used for now.","245b46c2":"### 3.4 Correlation Check","01bc57de":"Now the outliers is taken care of.","1d46811f":"### 2.2 CarName Changing into CarBrand","b3d7831e":"## Step 4 - Building Model for Regression","277c7bda":"## Step 5 - Test Set Prediction","4c289593":"some brand names is odd and wrong. For example, alfa-romero should be alfa-romeo, maxda shoul be mazda, and toyouta should be toyota. Let's fix this.","25bc12b7":"We can see the unique count and unique value for each column. The \"CarName\" unique count is bigger than other column. The idea is to reduce the unique count of \"CarName\" by taking only the brand name of cars.","136c807e":"All good. As usual, random state is 27 because of my lucky number :)"}}