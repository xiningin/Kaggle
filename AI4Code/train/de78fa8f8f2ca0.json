{"cell_type":{"b363e7f4":"code","652f94d7":"code","727157df":"code","5d6b2e63":"code","d9f5338c":"markdown","ece8932e":"markdown"},"source":{"b363e7f4":"#all the imports\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt","652f94d7":"#grab data here\n#covid data\ncovid_master_df = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-4\/train.csv\")\n\n#world-happiness-index\nworld_happiness_df = pd.read_csv(\"..\/input\/world-happiness-report-2020\/WHR20_DataForFigure2.1.csv\")\n","727157df":"#here we will do all the group by, aggregation etc.\n\n\n########doing a group by on Country_Region\ncovid_master_df_COUNTRY = covid_master_df.groupby(['Country_Region'], as_index=False).max()\n########adding a column that lists the fatalities to confirmed cases ratio\ncovid_master_df_COUNTRY['confirmed_to_fatal_ratio'] = covid_master_df_COUNTRY['Fatalities']\/covid_master_df_COUNTRY['ConfirmedCases']\ncovid_master_df_COUNTRY = covid_master_df_COUNTRY.sort_values(['ConfirmedCases'], ascending=False)\n\n#Fixing some same but differently typed values\ncovid_master_df_COUNTRY[\"Country_Region\"] = covid_master_df_COUNTRY[\"Country_Region\"].replace(\"US\", \"United States\")\n\ncovid_master_df_COUNTRY.head()\n\n\n#########merge\/join with world_happiness_df data\n\nworld_happiness_df = world_happiness_df.rename(columns={\"Country name\":\"Country_Region\"})\n\ncovid_master_df_COUNTRY_with_world_happiness = pd.merge(covid_master_df_COUNTRY, world_happiness_df, how='inner', on=[\"Country_Region\"])\ncovid_master_df_COUNTRY_with_world_happiness.head()\n\n","5d6b2e63":"#Do the plotting here\n#bubble plot of top 10 affected countries\nplt.figure(figsize=(15,10))\nplt.scatter(covid_master_df_COUNTRY_with_world_happiness['Country_Region'].head(10), \n            covid_master_df_COUNTRY_with_world_happiness['ConfirmedCases'].head(10), \n            s=np.reciprocal(covid_master_df_COUNTRY_with_world_happiness['ConfirmedCases'].head(10).max()\/covid_master_df_COUNTRY_with_world_happiness['ConfirmedCases'].head(10))*10000, \n            c=covid_master_df_COUNTRY_with_world_happiness['confirmed_to_fatal_ratio'].head(10), cmap=\"Reds\", alpha=0.5, edgecolors=\"grey\", linewidth=2)\n\nplt.bar(covid_master_df_COUNTRY_with_world_happiness['Country_Region'].head(10),covid_master_df_COUNTRY_with_world_happiness['confirmed_to_fatal_ratio'].head(10)*1000000, alpha=0.4)\n\nplt.bar(covid_master_df_COUNTRY_with_world_happiness['Country_Region'].head(10),covid_master_df_COUNTRY_with_world_happiness['Generosity'].head(10)*1000000, alpha=0.4, width=0.5)\n\n\n# plt.grid(True, which='both')\n\nplt.axhline(y=0, color='k')\nplt.axvline(x=0, color='k')\n\nplt.xlabel('Country')\nplt.ylabel('Confirmed Cases')\nplt.xticks(rotation='vertical',fontsize='30')\nplt.yticks(covid_master_df_COUNTRY['ConfirmedCases'].head(10), fontsize='15')\nplt.title(\"COVID19 Global Forecasting: Top 10 Countries by confirmed cases and the mortality ratio\")\nplt.show()\n","d9f5338c":"# Plotting some values based on contries and mortality rates\nThe area of the bubble represents the total number of confirmed cases (in millions (Y axis)).\nThe color shows the how high the mortality rate is based on Redness\n\nThe overlapping bars represent the mortality ratio (confirmed_to_fatal_ratio)\n\nInterestingly the thinner bar, representing happyness_index is going inline mostly with the higher mortality rate\n\n**Please note that the data is heavily scaled to be plotted on the map.**","ece8932e":"# This notebook is directed towards visualizing the dataset and attempting to overlap some other external data."}}