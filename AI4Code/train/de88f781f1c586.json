{"cell_type":{"ea33f033":"code","8ff77ee1":"code","fea7a2ba":"code","28108fec":"code","ac58e589":"code","3adc9ea1":"code","d7ac7f16":"code","0e80385f":"code","a593ecdf":"code","6c7ab5ad":"code","621319ea":"code","e7fc3fc8":"code","13ab072e":"code","bf8240aa":"code","f49b0505":"code","a6ac6b8f":"code","88a9aad4":"code","f109214d":"code","50691e84":"code","861e21a8":"code","4ac97413":"code","57f5d981":"code","02986891":"code","72a7169e":"code","09f1e899":"code","c8da2f73":"code","4312f500":"code","1a84413d":"code","d7a1b11e":"code","cdd12d61":"code","1bdedd82":"markdown","8af1cbbc":"markdown","8784aa1d":"markdown","d12315b6":"markdown","44a792f7":"markdown","dff4db69":"markdown","e36e1f76":"markdown","ceba5ea0":"markdown","5e0ec310":"markdown","5b5eaf81":"markdown","72ea5f66":"markdown","a65f7003":"markdown","675fa913":"markdown","18277590":"markdown","67df1b9f":"markdown","6d10ca95":"markdown","cfd1d316":"markdown","ccdf49c7":"markdown","0a2648ed":"markdown","39633978":"markdown","78e7482d":"markdown","b6823c80":"markdown","1fa7a4ff":"markdown"},"source":{"ea33f033":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8ff77ee1":"train = pd.read_csv(\"\/kaggle\/input\/ml-challenge-turkiye-is-bankasi-2\/train.csv\")\ntrain.head()","fea7a2ba":"doviz = pd.read_excel(\"\/kaggle\/input\/dolar-euro-kur\/EVDS.xlsx\")\n\ndoviz[\"dolar\"] = doviz[\"TP DK USD S EF YTL\"]\ndoviz[\"euro\"] = doviz[\"TP DK EUR S EF YTL\"]\n\ndel doviz[\"TP DK EUR S EF YTL\"]\ndel doviz[\"TP DK USD S EF YTL\"]\n\ndoviz = doviz.iloc[0:15, :]\n\ndoviz[\"dolar\"] = doviz[\"dolar\"].astype(\"float64\")\ndoviz[\"euro\"] = doviz[\"euro\"].astype(\"float64\")\n\ndoviz[\"sepet\"] = (doviz[\"dolar\"] + doviz[\"euro\"]) \/ 2\n\ndoviz[\"Tarih\"] = [201711, 201712, 201801, 201802, 201803, 201804, 201805, 201806, 201807,\n         201808, 201809, 201810, 201811, 201812, 201901]\n\ndoviz[\"tufe\"] = [12.98, 11.92, 10.35, 10.26, 10.23, 10.85, 12.15, 15.39, 15.85, 17.90,\n     24.52, 25.24, 21.62, 20.30, 20.35]\n\ndoviz.head()","28108fec":"data = train.copy()\n\ndoviz = doviz.rename(columns = {\"Tarih\": \"YIL_AY\"})\n\ndata = pd.merge(train, doviz, \"right\", on = \"YIL_AY\")\n\ndata.head()","ac58e589":"g\u00fcn = pd.DataFrame()\ng\u00fcn[\"YIL_AY\"] = [201711, 201712, 201801, 201802, 201803, 201804, 201805, 201806, 201807,\n   201808, 201809, 201810, 201811, 201812, 201901]\n\ng\u00fcn[\"gun_sayisi\"] = [30, 31, 31, 28, 30, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31]\n\n\n\ndata = pd.merge(data, g\u00fcn, how = \"left\", on = \"YIL_AY\")\n\nbayram = pd.DataFrame()\nbayram[\"YIL_AY\"] = [201711, 201712, 201801, 201802, 201803, 201804, 201805, 201806, 201807,\n   201808, 201809, 201810, 201811, 201812, 201901]\nbayram[\"bayram_sayisi\"] = [0, 0, 1, 0, 0, 1, 2, 4, 1, 6, 0, 2, 0, 0, 1]\n\ndata = pd.merge(data, bayram, how = \"left\", on = \"YIL_AY\")\n\n\nhafta_sonu = pd.DataFrame()\nhafta_sonu[\"YIL_AY\"] = [201711, 201712, 201801, 201802, 201803, 201804, 201805, 201806, 201807,\n   201808, 201809, 201810, 201811, 201812, 201901]\nhafta_sonu[\"hafta_sonu\"] = [8, 10, 8, 8, 9, 9, 8, 9, 9, 8, 10, 8, 8, 10, 8]\n\ndata = pd.merge(data, hafta_sonu, how = \"left\", on = \"YIL_AY\")\n\ndata[\"net_gun\"] = data[\"gun_sayisi\"] - data[\"bayram_sayisi\"] - data[\"hafta_sonu\"]\n\ndata.head()","3adc9ea1":"round(pd.pivot_table(data, values = \"ISLEM_TUTARI\", aggfunc = \"mean\", index = \"YIL_AY\"))","d7ac7f16":"ort_tutar = round(pd.pivot_table(data, values = \"ISLEM_TUTARI\", aggfunc = \"mean\", index = \"YIL_AY\")).values\nsepet = pd.pivot_table(data, values = \"sepet\", aggfunc = \"mean\", index = \"YIL_AY\").values\n\nfor i,j in zip(ort_tutar, sepet):\n    print(i \/ ort_tutar[0] * 100,\n         j \/ sepet[0] * 100)","0e80385f":"t\u00fcfe = pd.pivot_table(data, values = \"tufe\", aggfunc = \"mean\", index = \"YIL_AY\").values\n\nfor i,j in zip(ort_tutar, t\u00fcfe):\n    print(i \/ ort_tutar[0] * 100,\n         j \/ t\u00fcfe[0] * 100)","a593ecdf":"adet = pd.pivot_table(data, values = \"ISLEM_ADEDI\", aggfunc = \"sum\", index = \"YIL_AY\").values\ng\u00fcn = pd.pivot_table(data, values = \"net_gun\", aggfunc = \"mean\", index = \"YIL_AY\").values\n\n\nort_adet = adet \/ g\u00fcn\n\nadet = pd.DataFrame(ort_adet, columns = [\"ort_adet\"])\n\nimport seaborn as sns\n\nsns.barplot(y = \"ort_adet\", x = adet.index, data = adet)\n","6c7ab5ad":"ort_tutar2 = pd.DataFrame(ort_tutar, columns = [\"ort_tutar\"])\n\nsns.barplot(x = ort_tutar2.index, y = \"ort_tutar\", data = ort_tutar2)","621319ea":"pd.pivot_table(data, values = \"ISLEM_TUTARI\", aggfunc = \"mean\", columns = \"ISLEM_TURU\", index = \"YIL_AY\").values \/ pd.pivot_table(data, values = \"ISLEM_TUTARI\", aggfunc = \"mean\", columns = \"ISLEM_TURU\", index = \"YIL_AY\").values[0] * 100 ","e7fc3fc8":"pe\u015fin = data.loc[data[\"ISLEM_TURU\"] == \"PESIN\"]\nround(pd.pivot_table(pe\u015fin, values = \"ISLEM_TUTARI\", aggfunc = \"count\", index = \"SEKTOR\"))","13ab072e":"akaryak\u0131t = pd.DataFrame()\n\nakaryak\u0131t[\"YIL_AY\"] = [201711, 201712, 201801, 201802, 201803, 201804, 201805, 201806, 201807, \n                       201808, 201809, 201810, 201811, 201812, 201901]\nakaryak\u0131t[\"akaryakit\"] = [5.61, 5.60, 5.68, 5.66, 5.75, 6.04, 6.20, 6.28, 6.28, 6.59, 6.93, 6.98, 6.60, 6.12, 6.11]\n\ndata = pd.merge(data, akaryak\u0131t, how = \"left\", on = \"YIL_AY\")\n\ndata.head()","bf8240aa":"for i,j in zip(akaryak\u0131t[\"akaryakit\"], ort_tutar):\n    print(i \/ 5.61 * 100,\n         j \/ ort_tutar[0] * 100)","f49b0505":"data.head()","a6ac6b8f":"df = data.copy()\n\nfor column in ['ISLEM_TURU','SEKTOR']:\n  dummies = pd.get_dummies(df[column])\n  df[dummies.columns] = dummies\n\ndf = df.drop(columns=['ISLEM_TURU','SEKTOR'])\n\ndf.head()","88a9aad4":"del df[\"dolar\"]\ndel df[\"euro\"]\ndel df[\"Record_Count\"]","f109214d":"x = df.iloc[:, 1:]\ny = df[\"ISLEM_TUTARI\"]\n\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 42)\n\nx_train.columns","50691e84":"from lightgbm import LGBMRegressor\nfrom sklearn.metrics import mean_squared_error,r2_score\nimport math\n\nlgb = LGBMRegressor()\nlgb.fit(x_train, y_train)\nlgb_tahmin = lgb.predict(x_test)\n\nmath.sqrt(mean_squared_error(y_test, lgb_tahmin))","861e21a8":"from sklearn.utils import shuffle\n\ns_df = shuffle(df)\n\nmini_df = s_df.iloc[0:50000, :]\n\nx_mini = mini_df.iloc[:, 1:]\ny_mini = mini_df[\"ISLEM_TUTARI\"]\n\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split(x_mini, y_mini, test_size = 0.33, random_state = 42)\n\nX_train.columns","4ac97413":"from sklearn.model_selection import GridSearchCV\n\nlgbm_grid={\n        \"learning_rate\":[0.1, 0.2, 0.5],\n        \"n_estimators\":[100,200,500],\n        \"max_depth\":[-1,1,2,3,4],\n        \"num_leaves\": [31,32,33,34,36,38,40],\n        \"min_child_samples\": [20, 25, 30, 25, 40, 45]\n        }\n\nlgbm = LGBMRegressor()\n\nlgbm_cv_model=GridSearchCV(lgbm,lgbm_grid,cv=5,n_jobs=-1,verbose=2)\n\n# lgbm_cv_model.fit(X_train, Y_train)","57f5d981":"#lgbm_cv_model.best_params_\n\n\"\"\"\"\n 'learning_rate': 0.2,\n 'max_depth': 2,\n 'min_child_samples': 30,\n 'n_estimators': 100,\n 'num_leaves': 31\n \n\"\"\"\"","02986891":"lgb_tune = LGBMRegressor(learning_rate = 0.2,\n                        max_depth = 2,\n                        min_child_samples = 30,\n                        n_estimators = 100,\n                        num_leaves = 31)\n\nlgb_tune.fit(x_train, y_train)\n\nlgb_tune_tahmin = lgb_tune.predict(x_test)\n\nmath.sqrt(mean_squared_error(y_test, lgb_tune_tahmin))","72a7169e":"lgb_tune2 = LGBMRegressor(learning_rate = 0.1,\n                        max_depth = -1,\n                        min_child_samples = 40,\n                        n_estimators = 400,\n                        num_leaves = 31)\n\nlgb_tune2.fit(x_train, y_train)\n\nlgb_tune_tahmin2 = lgb_tune2.predict(x_test)\n\nmath.sqrt(mean_squared_error(y_test, lgb_tune_tahmin2))","09f1e899":"test = pd.read_csv(\"\/kaggle\/input\/ml-challenge-turkiye-is-bankasi-2\/test_set.csv\")\n\ntest[\"sepet\"] = 5.63\ntest[\"tufe\"] = 19.67\ntest[\"gun_sayisi\"] = 28\ntest[\"bayram_sayisi\"] = 0\ntest[\"hafta_sonu\"] = 8\ntest[\"net_gun\"] = 28\ntest[\"akaryakit\"] = 6.23\n\ntest.head()","c8da2f73":"for column in ['ISLEM_TURU','SEKTOR']:\n  dummies = pd.get_dummies(test[column])\n  test[dummies.columns] = dummies\n\ntest = test.drop(columns=['ISLEM_TURU','SEKTOR'])\n\ndel test[\"ISLEM_TUTARI\"]\ndel test[\"Record_Count\"]\n\ntest.head()","4312f500":"final_pred = lgb_tune2.predict(test)\n\ntest_son = test.copy()\ntest_son[\"EXPECTED\"] = final_pred\n\ntest_son","1a84413d":"pd.pivot_table(test_son, values = \"EXPECTED\", aggfunc = \"sum\", index = \"Id\")","d7a1b11e":"c\u0131kt\u0131 = pd.read_csv(\"\/kaggle\/input\/ml-challenge-turkiye-is-bankasi-2\/sampleSubmission.csv\")\n\nc\u0131kt\u0131[\"Expected\"] = pd.pivot_table(test_son, values = \"EXPECTED\", aggfunc = \"sum\", index = \"Id\").values\n\nc\u0131kt\u0131.to_csv('submission2.csv', index=False)\n\nc\u0131kt\u0131","cdd12d61":"round(c\u0131kt\u0131)","1bdedd82":"En fazla harcama yap\u0131lan sekt\u00f6rler aras\u0131nda ikinci s\u0131rada akaryak\u0131t gelmekte dataya akaryak\u0131t ortalama fiyatlar\u0131n\u0131 eklemek iyi olabilir.","8af1cbbc":"Data haz\u0131land\u0131.\n\nBurada sadece dolar veya euro kurlar\u0131n\u0131 kullanm\u0131yorum bunun yerine iki kurun ortalamas\u0131n\u0131 alarak bir sepet kuru olu\u015fturuyorum.\n\nBunun d\u0131\u015f\u0131nda di\u011fer eklenen de\u011fi\u015fkenler \u015f\u00f6yle:\n\nG\u00fcn say\u0131s\u0131 : O ay\u0131n ka\u00e7 \u00e7ekti\u011fi.\n\nBayram say\u0131s\u0131 : Dini ve resmi bayramlar\u0131n tamam\u0131.\n\nHafta sonu : O aydaki cumartesi ve pazarlar\u0131n toplam\u0131.\n\nNet g\u00fcn : G\u00fcn say\u0131s\u0131 - Bayram say\u0131s\u0131 - Hafta sonu.","8784aa1d":"**MODEL KURMAK**","d12315b6":"**DATAYI HAZIRLAMAK**","44a792f7":"\u0130\u015flem t\u00fcrlenin d\u00f6nemlik geli\u015fimleri a\u015fa\u011f\u0131daki gibidir.\n\n\u0130lk s\u00fctun taksitli ikinci s\u00fctun pe\u015fin \u00f6demeleri i\u00e7ermektedir.\n\nGeli\u015fimleri birbirlerinden \u00e7ok farkl\u0131 de\u011fildir, pe\u015fin \u00f6demelerdeki ortalama tutar biraz daha h\u0131zl\u0131 artm\u0131\u015ft\u0131r.","dff4db69":"**KE\u015e\u0130F\u00c7\u0130 VER\u0130 ANAL\u0130Z\u0130**","e36e1f76":"Akaryak\u0131t ve ortalama tutarlar aras\u0131nda doviz ve t\u00fcfeye g\u00f6re daha anlaml\u0131 sonu\u00e7lar \u00e7\u0131kt\u0131.","ceba5ea0":"Burada g\u00f6r\u00fclen nokta ortalama i\u015flem tutarlar\u0131 doviz kadar \u015fiddetli artm\u0131yor. Ortalama i\u015flem tutar\u0131 100'den maksimum 113'e \u00e7\u0131karken doviz ise 100 birimden maksimum 163 \u00e7\u0131k\u0131yor.\n\nBunu t\u00fcfe \u00fczerinden yeniden hesaplatal\u0131m.","5e0ec310":"**YOL HAR\u0130TASI**","5b5eaf81":"Model tune i\u00e7in \u00f6nce data \u00fczeriden k\u00fc\u00e7\u00fck bir \u00f6rneklem se\u00e7icem \u00e7\u00fcnk\u00fc toplam data 3.2 milyon civar\u0131nda bunu bir b\u00fct\u00fcn olarak tune etmek \u00e7ok fazla zaman al\u0131cakt\u0131r bu y\u00fczden random 100K sat\u0131r se\u00e7ip tune i\u015flemini bunlar \u00fczerinde ger\u00e7ekletirece\u011fim burada buldu\u011fum parametre sonu\u00e7lar\u0131n\u0131 ise t\u00fcm dataya genelleyece\u011fim.\n\nYine de tune i\u015flemi \u00e7ok uzun s\u00fcrmecektir cv = 5 ile \u00e7al\u0131\u015ft\u0131raca\u011f\u0131m ve \u00e7ok fazla parametre eklemeyece\u011fim bu y\u00fczden model bir nevi hala ilkel olarak kalmaya devam edecek.","72ea5f66":"Burada tune edilen de\u011ferler ile model ilk halinden daha y\u00fcksek bir hata kare de\u011feri d\u00f6nd\u00fcrd\u00fc. Parametre de\u011ferlerini yeniden d\u00fczenlemek, parametre ekleyip \/ \u00e7\u0131karmak, daha geni\u015f de\u011fer aral\u0131klar\u0131 vermek tune i\u015flemi i\u00e7in daha iyi sonu\u00e7lar verece\u011fi kesin fakat bu i\u015flemlerin tamam\u0131 uzun s\u00fcrece\u011fi i\u00e7in bunlar\u0131 yapmaktan vazge\u00e7iyorum. Yukar\u0131daki tune i\u015flemi yakla\u015f\u0131k 40 dakika kadar s\u00fcrd\u00fc.","a65f7003":"D\u00f6nemlere g\u00f6re ortalama harcama tutarlar\u0131","675fa913":"M\u00fc\u015fteri ba\u015f\u0131na ortalama fiyat de\u011fi\u015fkeni koymak istemiyorum \u00e7\u00fcnk\u00fc train set \u00fczerinde \u00e7ok iyi \u00e7al\u0131\u015facak belli hatta o zaman model kurmaya bile gerek kalmayacak i\u015flem adedi * ortalama fiyattan toplam i\u015flem tutarlar\u0131 bulunabilecek fakat test seti i\u00e7in b\u00f6yle bir de\u011fi\u015fken yaratmak pek kolay de\u011fil \u00e7\u00fcnk\u00fc ne doviz nede t\u00fcfe fiyatlar ile tam a\u00e7\u0131klanam\u0131yor akaryak\u0131t bir nevi iyi gibi g\u00f6z\u00fcksede o da %100 a\u00e7\u0131klayan bir de\u011fi\u015fken de\u011fil bu y\u00fczden test setine do\u011fru ekleyemeyece\u011fim hi\u00e7bir de\u011fi\u015fkeni train sete koymuyorum.","18277590":"**1. MEVCUT ve DI\u015e VER\u0130LER\u0130 DATAYA EKLEMEK**","67df1b9f":"Yaz aylar\u0131nda ortalama adetlerde art\u0131\u015f oldu\u011fu g\u00f6z\u00fckmektedir.\n\nAyn\u0131 grafi\u011fi ort tutar i\u00e7in bakarsak.","6d10ca95":"Burada da yaz aylar\u0131nda ortalama tutar artm\u0131\u015f fakat sonras\u0131nda da y\u00fcksek kalmaya devam etmi\u015f g\u00f6z\u00fck\u00fcyor.\n\nOrtalama fiyatlardaki art\u0131\u015f\u0131n as\u0131l kayna\u011f\u0131n\u0131 hen\u00fcz bulunmad\u0131 bunun i\u00e7in biraz daha inceleme yapmak gerekecek.","cfd1d316":"Ortalama i\u015flem tutar\u0131 her ay i\u00e7in art\u0131yor gibi g\u00f6z\u00fckmekte. 2017 kas\u0131m ay\u0131nda 389 lira iken 2019 ocak ay\u0131nda tutar 427 liraya kadar \u00e7\u0131k\u0131yor. Minumum de\u011fer ise 378 ile 2018 \u015fubat ay\u0131na ait, bunun nedeni olarak \u015fubat ay\u0131n\u0131n net g\u00fcn olarak en d\u00fc\u015f\u00fck olmas\u0131n\u0131 d\u00fc\u015f\u00fcn\u00fcyorum. \n\nPeki d\u00f6nemlik olarak art\u0131\u015f nedeni neden? Kur fiyatlar\u0131n\u0131n artmas\u0131 m\u0131 yoksa ba\u015fka bir \u015fey mi? \n\nKur fiyatlar\u0131 ile alakal\u0131 ise hem ortlama hemde kur fiyatlar\u0131n\u0131 201711 = 100 ile endeksleyip geli\u015fimlerine bakaca\u011f\u0131m.","ccdf49c7":"**TEST VER\u0130S\u0130**","0a2648ed":"\u0130\u015flem adetleri ile i\u015flem tutarlar\u0131 aras\u0131ndaki ili\u015fki.\n\nBu k\u0131r\u0131l\u0131ma bakarken net g\u00fcn say\u0131s\u0131 \/ i\u015flem adedi yaparak o d\u00f6nem i\u00e7in ortalama i\u015flem adetlerine bakaca\u011f\u0131m.","39633978":"T\u00fcfe sonu\u00e7lar\u0131 da doviz ile benzer \u00e7\u0131kt\u0131. Sonu\u00e7ta doviz ve ortalama tutar art\u0131yor fakat birbirleri ile benzer oranda artm\u0131yorlar bunun nedeni bulmak model i\u00e7in \u00f6nemli olacakt\u0131r.","78e7482d":"Merhaba!\n\nBu \u00e7al\u0131\u015fma sayfas\u0131nda 38 farkl\u0131 sekt\u00f6r i\u00e7in 2019 \u015fubat ay\u0131 toplam i\u015flem tutarlar\u0131n\u0131 tahmin etmeye \u00e7al\u0131\u015faca\u011f\u0131m.\n\n\u00c7al\u0131\u015fma i\u00e7in data da yer alan de\u011fi\u015fkenler a\u015fa\u011f\u0131daki gibidir.\n\n* YIL_AY -harcamalar\u0131n yap\u0131ld\u0131\u011f\u0131 tarih (YIL ve AY format\u0131nda)\n* ISLEM_TURU -harcamalar\u0131n t\u00fcr\u00fc (pe\u015fin ya da taksitli)\n* SEKTOR -harcamalar\u0131n yap\u0131ld\u0131\u011f\u0131 sekt\u00f6r\n* CUSTOMER -her m\u00fc\u015fterinin unique m\u00fc\u015fteri numaras\u0131\n* ISLEM_ADEDI -ilgili tarih, t\u00fcr ve sekt\u00f6rde m\u00fc\u015fterinin yapt\u0131\u011f\u0131 i\u015flem adedi\n* ISLEM_TUTARI -m\u00fc\u015fterinin ilgili tarih, t\u00fcr ve sekt\u00f6rde yapt\u0131\u011f\u0131 i\u015flemlerin toplam tutar\u0131\n\nBu de\u011fi\u015fkenlere ek olarak a\u015fa\u011f\u0131daki alanlar\u0131 ekleyece\u011fim\n\n* D\u00f6nemlik d\u00f6viz kurlar\u0131\n* D\u00f6nemlik t\u00fcfe rakamlar\u0131\n* \u0130lgili d\u00f6nem i\u00e7in toplam \u00e7al\u0131\u015fma g\u00fcn\u00fc (hafta sonu, bayramlar hari\u00e7 g\u00fcn say\u0131s\u0131)\n* \u0130lgili d\u00f6nem i\u00e7in toplam haftasonu say\u0131s\u0131 (cumartesi ve pazarlar)","b6823c80":"1) Mevcut ve d\u0131\u015f verileri dataya eklemek.\n\n2) Data \u00fczerinden ke\u015fif\u00e7i veri analizi yapmak.\n\n3) Datay\u0131 son hale getirip d\u00fczenlemek.\n\n4) Model kurmak i\u00e7in datay\u0131 uygun formata sokmak.\n\n5) Light GBM ile model kurmak.\n\n6) Model tune i\u015flemi ger\u00e7ekle\u015ftirmek.\n","1fa7a4ff":"**MODEL TUNE**"}}