{"cell_type":{"5d57b372":"code","9a73d65d":"code","fd0caf07":"code","2bff9d27":"code","fec3fc7c":"code","663b2655":"code","705a3ba7":"code","c1ca259e":"code","f46176a7":"code","54337ce1":"code","b4a9de31":"code","d5734ebb":"code","11aa7208":"code","b8b8a7f4":"code","6b7e52b4":"markdown"},"source":{"5d57b372":"#import packages\nimport os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom pathlib import Path ","9a73d65d":"#Where is the data\npath = '..\/input\/english-premier-league-logo-detection-20k-images\/epl-logos-big\/'","fd0caf07":"#Get all filenames in directory\ndef get_file_list(directory):\n    file_list = os.listdir(directory)\n    all_files = []\n    for entry in file_list:\n        path = os.path.join(directory, entry)\n        if os.path.isdir(path):\n            all_files = all_files + get_file_list(path)\n        else:\n            all_files.append(path)    \n    return all_files","2bff9d27":"#get a list of all the filepaths\nall_files_list = get_file_list(path)","fec3fc7c":"len(all_files_list)","663b2655":"#show the first 5 files\nall_files_list[0:5]","705a3ba7":"#display an image sample from the filepaths\nimage_path = all_files_list[19929]\nimage_array = plt.imread(image_path) \nplt.imshow(image_array)\nplt.show()","c1ca259e":"#get just the team names out of the filepaths\n#for example ..\/input\/english-premier-league-logo-detection-20k-images\/epl-logos-big\/manchester-united\/49fe842f-b0b8-41a8-9751-1bc2890751b6.png --> manchester-united\nall_teams_list_indexed = [Path(x).parent.name for x in all_files_list]","f46176a7":"#throw these in a dataframe\ndatadict = {'filepath':all_files_list,'team_name':all_teams_list_indexed}\ndf = pd.DataFrame(data = datadict)\npd.set_option('display.max_colwidth', None)\ndf.head()","54337ce1":"#to summarize. Use the dict for mapping class value from \nall_teams_list = ['arsenal', 'aston-villa', 'brentford', 'brighton', 'burnley', 'chelsea', 'crystal-palace', 'everton', 'leeds', 'leicester-city', 'liverpool', 'manchester-city', 'manchester-united', 'newcastle', 'norwich', 'southampton', 'tottenham', 'watford', 'west-ham', 'wolves']\nall_teams_dict = {'arsenal':0, 'aston-villa':1, 'brentford':2, 'brighton':3, 'burnley':4, 'chelsea':5, 'crystal-palace':6, 'everton':7, 'leeds':8, 'leicester-city':9, 'liverpool':10, 'manchester-city':11, 'manchester-united':12, 'newcastle':13, 'norwich':14, 'southampton':15, 'tottenham':16, 'watford':17, 'west-ham':18, 'wolves':19}","b4a9de31":"df['team'] = df['team_name'].map(all_teams_dict)","d5734ebb":"df.head(3)","11aa7208":"df.tail(3)","b8b8a7f4":"df.to_csv('train.csv',index=False)","6b7e52b4":"# EPL - train.csv File Generator\n\nThis notebook creates the train.csv and test.csv files for this dataset. It's the metadata for the dataset. Might make training\/testing easier for beginners to have the .csv tabular files containing the file paths and classes for each file name. "}}