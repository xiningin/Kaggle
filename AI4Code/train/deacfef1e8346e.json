{"cell_type":{"34f6307f":"code","8b74ee02":"code","b32345f1":"code","6b4c4431":"code","689005de":"code","142295dd":"code","50575498":"code","40ace2ad":"code","0411189e":"code","0ec112ca":"code","bea2b360":"code","052337ea":"code","24f87606":"code","cb9ca31b":"code","c98810d9":"code","832a6c26":"code","0da7fcc8":"code","cb18a1c4":"code","e832633c":"code","a64776ff":"code","d41cb11f":"code","cda05ab0":"code","15dc190b":"code","d082df55":"markdown","75e813ce":"markdown","420d12c5":"markdown","e1452482":"markdown","0756196f":"markdown","52a7c64b":"markdown","4b94e1fb":"markdown","2697ea6f":"markdown","7688bd43":"markdown","61247f0f":"markdown","2013e85b":"markdown","c78a6c07":"markdown","07698cc0":"markdown","77fdf507":"markdown","59bd6de6":"markdown","108884c7":"markdown","4c41952a":"markdown","f98243a2":"markdown","9135e9df":"markdown","cf16af3f":"markdown","eb2d0e72":"markdown","046edc40":"markdown","4451c1e5":"markdown","322d1495":"markdown","c69b49d5":"markdown","ad396c97":"markdown"},"source":{"34f6307f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8b74ee02":"#importing dataset\nhaberman_dataset = pd.read_csv(\"..\/input\/habermans-survival-data-set\/haberman.csv\", header = None,  \n                               names= ['AGE', 'OPERATION_YEAR', 'POSITIVE_LYMPH_NODES', 'SURVIVAL_STATUS'])\nhaberman_dataset.head()","b32345f1":"print(haberman_dataset.shape)","6b4c4431":"print(haberman_dataset.info())","689005de":"#mapping the values of 1 and 2 to yes and no respectively and \n#printing the first 5 records from the dataset.\n\nhaberman_dataset['SURVIVAL_STATUS'] = haberman_dataset['SURVIVAL_STATUS'].map({1: 'yes', 2: 'no'})\nhaberman_dataset['SURVIVAL_STATUS'] = haberman_dataset['SURVIVAL_STATUS'].astype('category')\nhaberman_dataset.head(10)","142295dd":"haberman_dataset.describe()","50575498":"#gives each count of the status type\nhaberman_dataset['SURVIVAL_STATUS'].value_counts()","40ace2ad":"print(haberman_dataset.iloc[:,-1].value_counts(normalize = True))","0411189e":"#survival_status_yes dataframe stores all the records where status is yes\nsurvival_status_yes = haberman_dataset[haberman_dataset['SURVIVAL_STATUS']== 'yes']\nsurvival_status_yes.describe()","0ec112ca":"#survival_status_no dataframe stores all the records where status is no\nsurvival_status_no = haberman_dataset[haberman_dataset['SURVIVAL_STATUS'] == 'no']\nsurvival_status_no.describe()","bea2b360":"sns.set_style('whitegrid')\none= haberman_dataset.loc[haberman_dataset['SURVIVAL_STATUS']== 'yes']\ntwo= haberman_dataset.loc[haberman_dataset['SURVIVAL_STATUS']== 'no']\nplt.plot(one['AGE'], np.zeros_like(one['AGE']), 'o', label= \"SURVIVAL_STATUS, yes\")\nplt.plot(two['AGE'], np.zeros_like(two['AGE']), 'o', label= \"SURVIVAL_STATUS, no\")\nplt.xlabel('Age')\nplt.show()\n","052337ea":"sns.FacetGrid(haberman_dataset,hue='SURVIVAL_STATUS',height = 5)\\\n .map(sns.distplot,\"AGE\")\\\n .add_legend();\nplt.show()","24f87606":"sns.FacetGrid(haberman_dataset,hue='SURVIVAL_STATUS',height = 5)\\\n .map(sns.distplot,\"OPERATION_YEAR\")\\\n .add_legend();\nplt.show()","cb9ca31b":"sns.FacetGrid(haberman_dataset,hue='SURVIVAL_STATUS',height = 5)\\\n .map(sns.distplot,\"POSITIVE_LYMPH_NODES\")\\\n .add_legend();\nplt.show()","c98810d9":"counts1, bin_edges1 = np.histogram(survival_status_yes['POSITIVE_LYMPH_NODES'], bins=10, density = True)\npdf1 = counts1\/(sum(counts1))\nprint(pdf1);\nprint(bin_edges1)\ncdf1 = np.cumsum(pdf1)\nplt.plot(bin_edges1[1:], pdf1)\nplt.plot(bin_edges1[1:], cdf1, label = 'yes')\nplt.xlabel('POSITIVE_LYMPH_NODES')\nprint(\"***********************************************************\")\ncounts2, bin_edges2 = np.histogram(survival_status_no['POSITIVE_LYMPH_NODES'], bins=10, density = True)\npdf2 = counts2\/(sum(counts2))\nprint(pdf2);\nprint(bin_edges2)\ncdf2 = np.cumsum(pdf2)\nplt.plot(bin_edges2[1:], pdf2)\nplt.plot(bin_edges2[1:], cdf2, label = 'no')\nplt.xlabel('POSITIVE_LYMPH_NODES')\nplt.legend()\nplt.show()","832a6c26":"sns.boxplot(x='SURVIVAL_STATUS',y='AGE',data=haberman_dataset)\nplt.show()\nsns.boxplot(x='SURVIVAL_STATUS',y='OPERATION_YEAR',data=haberman_dataset)\nplt.show()\nsns.boxplot(x='SURVIVAL_STATUS',y='POSITIVE_LYMPH_NODES',data=haberman_dataset)\nplt.show()","0da7fcc8":"sns.violinplot(x=\"SURVIVAL_STATUS\",y=\"AGE\",data = haberman_dataset,height = 10)\nplt.show()\nsns.violinplot(x=\"SURVIVAL_STATUS\",y=\"OPERATION_YEAR\",data = haberman_dataset,height = 10)\nplt.show()\nsns.violinplot(x=\"SURVIVAL_STATUS\",y=\"POSITIVE_LYMPH_NODES\",data = haberman_dataset,height = 10)\nplt.show()","cb18a1c4":"sns.set_style(\"whitegrid\")\nsns.FacetGrid(haberman_dataset, hue= 'SURVIVAL_STATUS', size= 6).map(plt.scatter,'AGE','POSITIVE_LYMPH_NODES').add_legend()","e832633c":"sns.set_style(\"whitegrid\")\nsns.FacetGrid(haberman_dataset, hue= 'SURVIVAL_STATUS', size= 6).map(plt.scatter,'POSITIVE_LYMPH_NODES','OPERATION_YEAR').add_legend()","a64776ff":"sns.pairplot(haberman_dataset, hue= 'SURVIVAL_STATUS', height= 4)\nplt.show()","d41cb11f":"sns.jointplot(x = 'OPERATION_YEAR', y = 'AGE', data = haberman_dataset, kind = \"kde\")\nplt.show()","cda05ab0":"sns.kdeplot(\n    data= haberman_dataset, x=\"OPERATION_YEAR\", y=\"AGE\", hue=\"SURVIVAL_STATUS\", fill=True,\n)","15dc190b":"sns.kdeplot(\n     data= haberman_dataset, x=\"OPERATION_YEAR\", y=\"AGE\",\n    fill=True, thresh=0, levels=100, cmap=\"mako\",\n)","d082df55":"Patients with no nodes or 1 node are more likely to survive. There are very few chances of surviving if there are 25 or more nodes.","75e813ce":"**Cumulative Distribution Function(CDF)**\n\nThe Cumulative Distribution Function (CDF) is the probability that the variable takes a value less than or equal to x.","420d12c5":"**Observation:**\n* There are no missing values in this data set.\n* All the columns are of the integer data type.\n* The datatype of the status is an integer, which we can convert to a categorical datatype.\n* In the status column, the value 1 can be mapped to \u2018yes\u2019 which means the patient has survived 5 years or longer. And the value 2 can be mapped to \u2018no\u2019 which means the patient died within 5 years.","e1452482":"Here the height of the bar denotes the percentage of data points under the corresponding group","0756196f":"**Pair Plots**\n\nPair plots are useful for exploring datasets where we have less number of features they give us insights to the underlying datasets by plotting features against one anaother in pairs.\n\nBy default, this function will create a grid of Axes such that each variable in data will be shared in the y-axis across a single row and in the x-axis across a single column. The diagonal Axes are treated differently, drawing a plot to show the univariate distribution of the data for the variable in that column.","52a7c64b":"**Observation:**\n\n* Patients with more than 1 nodes are not likely to survive. More the number of nodes, lesser the survival chances.\n* A large percentage of patients who survived had 0 nodes. Yet there is a small percentage of patients who had no positive axillary nodes died within 5 years of operation, thus an absence of positive axillary nodes cannot always guarantee survival.\n* There were comparatively more people who got operated in the year 1965 did not survive for more than 5 years.\n* There were comparatively more people in the age group 45 to 65 who did not survive. Patient age alone is not an important parameter in determining the survival of a patient.\n* The box plots and violin plots for age and year parameters give similar results with a substantial overlap of data points. The overlap in the box plot and the violin plot of nodes is less compared to other features but the overlap still exists and thus it is difficult to set a threshold to classify both classes of patients.","4b94e1fb":"# Understanding of data:\n\n**Title: Haberman\u2019s Survival Data**\n\n**Description:** The dataset contains cases from a study that was conducted between 1958 and 1970 at the University of Chicago\u2019s Billings Hospital on the survival of patients who had undergone surgery for breast cancer.\n\n**Attribute Information:**\n* Age of patient at the time of operation (numerical)\n* Patient\u2019s year of operation (year \u2014 1900, numerical)\n* Number of positive axillary nodes detected (numerical)\n\n**Survival status (class attribute) :**\n* 1 = the patient survived 5 years or longer\n* 2 = the patient died within 5 years","2697ea6f":"**Observation:**\nThe plot between operation year and lymph nodes is comparatively better.","7688bd43":"**One Dimensional Scatter Plot**","61247f0f":" **Probability Density Function(PDF)**\n \n Probability Density Function (PDF) is the probability that the variable takes a value x. (a smoothed version of the histogram).\n \n","2013e85b":"# Univariate Analysis\n\nThe major purpose of the univariate analysis is to describe, summarize and find patterns in the single feature.","c78a6c07":"**Observation:**\n* The value_counts() function tells how many data points for each class are present. Here, it tells how many patients survived and how many did not survive.\n* Out of 306 patients, 225 patients survived and 81 did not.","07698cc0":"# Bi-Variate Analysis ","77fdf507":"# Multivariate analysis","59bd6de6":"**Two Dimensional Scatter Plot**\n\nA scatter plot is a two-dimensional data visualization that uses dots to represent the values obtained for two different variables \u2014 one plotted along the x-axis and the other plotted along the y-axis.","108884c7":"* The mean age and the year in which the patients got operated are almost similar of both the classes, while the mean of the nodes of both the classes differs by 5 units approximately.\n* The positive lymph nodes of patients who survived are less when compared to patients who did not survive.","4c41952a":"# Conclusion:\n\n* Patient\u2019s age and operation year alone are not deciding factors for his\/her survival. Yet, people less than 35 years have more chance of survival.\n* Survival chance is inversely proportional to the number of positive axillary nodes. We also saw that the absence of positive axillary nodes cannot always guarantee survival.\n* The objective of classifying the survival status of a new patient based on the given features is a difficult task as the data is less and imbalanced.","f98243a2":"**Observation:**\n83.55% of the patients who have survived had nodes in the range of 0 \u2013 4.6","9135e9df":"**Observation:**\n* Count : Total number of values present in respective columns.\n* Mean: Mean of all the values present in the respective columns.\n* Std: Standard Deviation of the values present in the respective columns.\n* Min: The minimum value in the column.\n* 25%: Gives the 25th percentile value.\n* 50%: Gives the 50th percentile value.\n* 75%: Gives the 75th percentile value.\n* Max: The maximum value in the column.","cf16af3f":"Observation: **The CSV file contains 306 rows and 4 columns.**","eb2d0e72":"**Box Plots and Violin Plots**\n\nThe box extends from the lower to upper quartile values of the data, with a line at the median. The whiskers extend from the box to show the range of the data. Outlier points are those past the end of the whiskers.\n\n**Violin plot** is the combination of a box plot and probability density function(CDF).","046edc40":"**Observation:**\n* Major overlapping is observed, which tells us that survival chances are irrespective of a person\u2019s age.\n* Although there is overlapping we can vaguely tell that people whose age is in the range 30\u201340 are more likely to survive, and 40\u201360 are less likely to survive. While people whose age is in the range 60\u201375 have equal chances of surviving and not surviving.\n* From the above figure, we can't come to an conclusion. We cannot decide the survival chances of a patient just by considering the age parameter.","4451c1e5":"**Contour Plot**\n\nA contour line or isoline of a function of two variables is a curve along which the function has a constant value. It is a cross-section of the three-dimensional graph.","322d1495":"**Objective: To predict whether a patient will survive or not after 5 years based on the features such as patient's age, operation year and number of positive lymph nodes.**","c69b49d5":"* We can observe that our target model is **imbalanced** as it contains 73% (225\/306) values 'yes' and only 27% (81\/306) values 'no'.\n* Since dataset consists of only **306 records**.","ad396c97":"**Observation:**\n* There is major overlapping observed as compared to \"AGE\" parameter. This graph only tells how many of the operations were successful and how many weren\u2019t. This cannot be a parameter to decide the patient\u2019s survival chances.\n* However, it can be observed that in the years 1960 and 1965 there were more unsuccessful operations."}}