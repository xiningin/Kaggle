{"cell_type":{"e8ffbff8":"code","2f168c30":"code","ab5bc92a":"code","7db9fe98":"code","304cd799":"code","2e8db0f5":"code","2aa32f22":"code","9cd54b07":"code","260a7d49":"code","4d979112":"code","6a5eb373":"code","93e44d8f":"markdown","713e6b4d":"markdown","892fdf3b":"markdown","fb77c4fc":"markdown","0255ba6f":"markdown","19814f38":"markdown","5f285427":"markdown","288b3acb":"markdown","29324597":"markdown","1e41603d":"markdown"},"source":{"e8ffbff8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2f168c30":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use('classic')\n%matplotlib inline","ab5bc92a":"df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf.head()","7db9fe98":"ax = df['Age'].hist(bins=25)\nax.set_xlabel('Age')\nax.set_ylabel('Count')\nax.set_title('Distribution by Age')","304cd799":"ax = df['Age'][df['Sex']=='male'].hist(bins=25, label='Male')\ndf['Age'][df['Sex']=='female'].hist(bins=25, ax = ax, label='Female')\nax.set_xlabel('Age')\nax.set_ylabel('Count')\nax.set_title('Distribution by Age')\nax.legend()","2e8db0f5":"\nax = df['Age'][df['Sex']=='male'].plot.kde( label='Male')\ndf['Age'][df['Sex']=='female'].plot.kde(ax = ax, label='Female')\nax.set_xlabel('Age')\nax.set_ylabel('Density')\nax.set_title('Distribution by Age')\nax.legend()","2aa32f22":"pclass_count =df['Pclass'].value_counts()\nplt.figure(figsize=(4,5))\nax = pclass_count.plot.bar()\nax.set_ylabel('Count', rotation=90)\nax.set_xlabel('Passenger Class')\nax.set_title('Pclass vs Count')","9cd54b07":"pclass_count =df['Embarked'].value_counts()\nplt.figure(figsize=(4,4))\nax = pclass_count.plot.barh()\nax.set_ylabel('Emabrked At', rotation=90)\nax.set_xlabel('Count')\nax.set_title('Embarked vs Count')","260a7d49":"# reference https:\/\/stackoverflow.com\/questions\/23415500\/pandas-plotting-a-stacked-bar-chart\n\ndf.groupby(['Sex','Survived']).size().unstack().plot(kind='bar', stacked=True)\nplt.ylabel('Count')\nplt.title('Survival rate by Sex')","4d979112":"df.boxplot(by='Pclass', column=['Age'])","6a5eb373":"plt.figure(figsize=(10,10))\nmissing_count= df.isnull().apply(pd.value_counts).fillna(0).transpose()\nmissing_count.rename({False: 'Values present', True:'Values missing'}, axis=1,inplace=True)\nax = missing_count.plot.bar(stacked=True)\nplt.title(\"Missing values by columns\")\nax.legend(loc=10)\nplt.xlabel(\"Column names\")\nplt.ylabel('Count')","93e44d8f":"# Histogram\/Distribution plot","713e6b4d":"# Vertical bar plot","892fdf3b":"# KDE (Kernel Density Estimation) plot","fb77c4fc":"# Histogram with categorical variables","0255ba6f":"# Stacked bar plot for missing values ","19814f38":"# Stacked bar plot","5f285427":"# Horizontal bar plot","288b3acb":"# Import Required Libraries","29324597":"# Boxplot","1e41603d":"# Import Dataset"}}