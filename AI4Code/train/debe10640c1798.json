{"cell_type":{"aa5ba7b7":"code","cb192385":"code","301c1c76":"code","05f98fc7":"code","9a5e021d":"code","bcc65a85":"code","65bd2ea9":"code","82fb4514":"code","c04e4440":"code","773c0afc":"code","d2ed84d4":"code","41adda78":"code","bdb33179":"code","cd2317a2":"code","07d56abb":"code","3084603b":"code","57b34801":"code","4e23fcc2":"markdown","137f7f14":"markdown","c3bceb09":"markdown","b8d9f6d9":"markdown","cd3fb796":"markdown","5840fd3f":"markdown","ca289869":"markdown","0d081163":"markdown","ee559e7b":"markdown","c20b1ee1":"markdown","58e882b8":"markdown","ab8e63e9":"markdown","f6ef1be5":"markdown","4c760bc0":"markdown","b9e68780":"markdown","6a9d64a4":"markdown","9be5be40":"markdown","2600b58f":"markdown","ee24eebd":"markdown"},"source":{"aa5ba7b7":"#import the modules we will need throughout this analysis\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport os\nprint(os.listdir(\"..\/input\/wine-reviews\"))\n","cb192385":"wine = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data_first150k.csv\")\nwine.head()","301c1c76":"wine.info()","05f98fc7":"wine.drop('Unnamed: 0', axis=1, inplace=True) #remove unwanted column\n\nwine[wine['country'].isnull()]","9a5e021d":"wine.drop_duplicates(subset = 'description', inplace=True)\nwine.loc[1133, 'country'] = 'Greece'\nwine.loc[1440, 'country'] = 'Turkey'\nwine.loc[68226, 'country'] = 'Chile'\n\nprint(\"Number of wine reviews left after removing duplicates: \", '{:,}'.format(len(wine)))","bcc65a85":"wine['price'].fillna(wine['price'].mean(), inplace=True) #fill in 'price' null values with mean of column\nwine_clean = wine.drop(['designation', 'province', 'region_1', 'region_2'], axis=1) #drop columns not needed\nwine_clean['variety'] = wine_clean['variety'].str.lower()\nwine_clean.head()","65bd2ea9":"wine_types = pd.read_csv(\"..\/input\/wine-types\/wine_types.csv\")\nwine_types.rename(columns={'grape':'variety'}, inplace=True) #rename column to be consistent with wine_clean column\nwine_clean = pd.merge(wine_clean, wine_types, how='left', on='variety') #merge databases on 'variety' column\nwine_type_counts = wine_types['wine_type'].value_counts() #print out number of red and white grapes\n\nwine_type_null = wine_clean['wine_type'].isnull().sum() #count the number of null values in the 'wine_type' column\n\nprint(\"There are {:,} red grapes and {:,} white grapes in our wine_type file with {:,} null values in the merged database\"\n      .format(wine_type_counts[0], wine_type_counts[1], wine_type_null))","82fb4514":"wine_clean.head(10)","c04e4440":"#list the top 25 null values in the 'wine_type' column\nnull_wine_types = wine_clean[wine_clean['wine_type'].isnull()]['variety']\nprint(\"Top 25 null values in wine_type column:\\n\", null_wine_types.value_counts().head(25))","773c0afc":"import re\n\n#define a function that returns the colour of a grape if the colour is in the name. \ndef colour(variety):\n    red = r\"\\b(red)\\b\"\n    white = r\"\\b(white)\\b\"\n    if re.search(red, variety):\n        return 'red'\n    elif re.search(white, variety):\n        return 'white'\n\n#apply the 'colour' function to the 'variety' column and assign to the 'wine_type' column if the current value is null\nwine_clean['wine_type'] = wine_clean['wine_type'].mask(wine_clean['wine_type'].isnull(), wine_clean['variety'].apply(colour))\n\n#print out the 30 most common varieties with null wine_type so we can manually filter out the red and white grape varieties\nprint(\"30 most common varieties with null wine_type values:\\n\", wine_clean[wine_clean['wine_type'].isnull()]['variety'].value_counts().head(30).index)","d2ed84d4":"#create lists of red and white grape varieties which we can use to fill in missing values in the 'wine_type' column\n\nred_varieties = ['shiraz', 'corvina, rondinella, molinara','sangiovese grosso', 'petite sirah', 'carmen\u00e8re',\n                'tempranillo blend', \"nero d'avola\", 'garnacha', 'meritage', 'cabernet blend', 'primitivo',\n                'montepulciano','cabernet sauvignon-merlot','tinta de toro','mourv\u00e8dre', 'menc\u00eda']\nwhite_varieties = ['pinot grigio','gr\u00fcner veltliner','gew\u00fcrztraminer', 'albari\u00f1o', 'glera', 's\u00e9millon', 'blaufr\u00e4nkisch' ]\n\n#filter wine_clean by red_varieties and assign 'red' to 'wine_type' column\nwine_clean.loc[wine_clean['variety'].isin(red_varieties), 'wine_type'] = 'red'\n\n#filter wine_clean by white_varieties and assign 'white' to 'wine_type' column\nwine_clean.loc[wine_clean['variety'].isin(white_varieties), 'wine_type'] = 'white'\n\n#delete the remaining rows which have a null value in 'wine_type\nwine_clean.dropna(subset=['wine_type'], inplace=True)\nwine_clean.head(10)","41adda78":"#create dictionary of same grapes with different names and replace key with value in table\nsame_grape = {'shiraz': 'syrah', 'garnacha':'grenache', 'durif':'petite sirah', 'primitivo':'zinfandel', 'sangiovese grosso':'sangiovese',\n             'tempranillo blend':'tempranillo'}\nwine_clean['variety'].replace(same_grape, inplace=True)\n\n#remove rows that have generic blended varieties\nwine_clean = wine_clean[(wine_clean['variety'] != 'red blend') & (wine_clean['variety'] != 'white blend')]\nwine_clean.info()","bdb33179":"sns.set_style(\"white\")\n\nfig, axes = plt.subplots(2,2, figsize=(20,20))\nax1 = wine_clean['wine_type'].value_counts().plot.bar(ax=axes[0,0], color=['r', 'y'])\nax1.set_title(\"Wine Types\", fontsize=20)\nax1.tick_params(axis='both', which='major', labelsize=15, labelrotation=0)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\n\n#create a new table for a pie chart; splitting out the top 12 most common countries and binning the rest into an 'other' value.\ntable_for_pie_chart = wine_clean['country'].value_counts()[:12]\nothers_count = wine_clean['country'].value_counts()[12:].sum()\ntable_for_pie_chart['Other'] = others_count\naxes[0,1].pie(table_for_pie_chart.values, labels = table_for_pie_chart.index, startangle=40, autopct='%.0f%%', textprops={'fontsize':14})\naxes[0,1].set_title(\"Wines by country of origin\", fontsize=20)\n\nred_wine = wine_clean[wine_clean['wine_type'] == 'red']\nax3 = sns.countplot(data=red_wine, x='variety', ax=axes[1,0],\n                    order = red_wine['variety'].value_counts().iloc[:10].index, palette='Reds_r')\nax3.set_title(\"Top 10 Red Wine Varieties\", fontsize=20)\nax3.tick_params(axis='x', labelrotation=90)\nax3.tick_params(axis='y', labelsize=15)\nax3.set_ylabel(\"\")\nax3.set_xlabel(\"\")\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nwhite_wine = wine_clean[wine_clean['wine_type'] == 'white']\nax4 = sns.countplot(data=white_wine, x='variety', ax=axes[1,1],\n                    order = white_wine['variety'].value_counts().iloc[:10].index, palette='YlOrBr')\nax4.set_title(\"Top 10 White Wine Varieties\", fontsize=20)\nax4.tick_params(axis='x', labelrotation=90)\nax4.tick_params(axis='y', labelsize=15)\nax4.set_ylabel(\"\")\nax4.set_xlabel(\"\")\nax4.spines['top'].set_visible(False)\nax4.spines['right'].set_visible(False)\nax4.spines['left'].set_visible(False)\n\nplt.tight_layout()","cd2317a2":"top_7_countries = ['US', 'France', 'Italy', 'Spain', 'Chile', 'Argentina', 'Australia']\ntop_10_red_grapes = red_wine['variety'].value_counts().iloc[:10].index\n\n        \nfig, ax = plt.subplots(figsize=(16,16))\nred_wine_filter = red_wine[(red_wine['variety'].isin(top_10_red_grapes)) & (red_wine['country'].isin(top_7_countries))]\nax = sns.countplot(x='country', hue='variety', data=red_wine_filter)\nax.legend(loc='upper right', prop={'size':15})\nax.xaxis.grid(False)\n\n\n  ","07d56abb":"print(\"Decile breakdown of points and price:\\n\",red_wine.describe(percentiles=[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]))","3084603b":"import matplotlib.gridspec as gridspec\nred_wine_under100 = red_wine[red_wine['price'] < 100].copy() #filter out wines under $100\n\nfig = plt.figure(figsize=(20,20))\ngs = gridspec.GridSpec(3,2)\nax1 = fig.add_subplot(gs[0,0])\nax2 = fig.add_subplot(gs[0,1])\nax3 = fig.add_subplot(gs[1:,:])\n\nsns.distplot(red_wine_under100['price'], hist=True, ax=ax1, bins=30)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.set_title(\"Price Density Plot For Red Wines Under $100\", fontsize=16)\nax1.tick_params(axis='x', labelsize=12)\nax1.tick_params(axis='y', labelsize=12)\nax1.set_xlabel(\"Price\", fontsize=14)\n\nred_wine_under100.hist(column='points',ax=ax2, bins=10, grid=False,color='purple', alpha=0.5)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.set_title(\"Points Distribution For Red Wines Under $100\", fontsize=16)\nax2.tick_params(axis='x', labelsize=12)\nax2.tick_params(axis='y', labelsize=12)\nax2.set_xlabel(\"Points\", fontsize=14)\n\ntop_10_under100 = red_wine_under100[red_wine_under100['variety'].isin(top_10_red_grapes)] #filter out the top 10 grape varieties\nax3 = sns.boxplot(x='variety', y='price', data=top_10_under100)\nax3.set_title(\"Boxplot of price of top 10 grape varieties\", fontsize=16)\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.tick_params(axis='x', labelsize=12)\nax3.tick_params(axis='y', labelsize=12)\nax3.set_xlabel(\"Variety\", fontsize=14)\nax3.set_ylabel(\"Price\", fontsize=14)\nax3.xaxis.labelpad = 20\nax3.yaxis.grid(True)","57b34801":"\nred_wine_under100.loc[:,'price_bin'] = pd.cut(red_wine_under100.loc[:,'price'],10) #create 10 bins by 'price' column\n\nbins = red_wine_under100['price_bin'].value_counts().sort_index().index\nbest_valued_reds = {} #dictionary which will store the bins(key) and indices(values) of the data with the max points value\nbest_reds_df = pd.DataFrame(best_valued_reds)\nfor bin in bins:\n    red_bin = red_wine_under100[red_wine_under100['price_bin'] == bin]            #filter out red wines by bin\n    best_reds_index = red_bin[red_bin['points'] == red_bin['points'].max()].index #find indices of highest rated wine in each bin\n    best_valued_reds[bin] = best_reds_index                                     #update dictionary\n    best_reds_df = pd.concat([best_reds_df, red_wine_under100.loc[best_valued_reds[bin]]]) #concatenate bin dataframes\n    \nbest_reds_df","4e23fcc2":"## Data exploration and cleaning","137f7f14":"Let's start our analysis by simply looking at some countplots for the different types of red\/white varieties as well as a pie chart breaking wine reviews by country of origin of the wine.","c3bceb09":"The table above shows that there are 5 null values from the 'country' column. We can delete 2 of these since they are duplicates. In fact, we can check and remove duplicates throughout the whole database by checking the 'description' column (if the 'description' value is duplicated then it is almost certain that the whole row is duplicated). We can infer the remaining 3 countries from the 'winery' column and fill these in.","b8d9f6d9":"It seems a lot of the null values are easy to fill in, either because the wine type is within the variety name (e.g. 'red blend') or from our knowledge of grapes. Lets code the following:\n1. Fill in wine_type missing values for those varities with 'red' or 'white' in the name.\n2. Print out the 30 most common varieties with null wine_type so that we can manually create a list of red varieties and white varieties","cd3fb796":"A few preliminary observations from the charts above:\n\n1. There are roughly twice as many red wines than white wines in our table.\n2. Pinot Noir and Cabernet Sauvignon account for about 1\/3 of all red wines\n3. Chardonnay accounts for about 1\/4 of all white wines.\n4. Nearly half of the reviews are for wines from the US. This seems to go against the breakdown of world wine production by country; a quick search online shows that the top 3 wine producers in the world (by volume) are Italy, France and Spain, with the US in fourth place.\n\nLet's try add add some granularity to these charts by looking at the number of red grape varieties within each country.","5840fd3f":"- There are a number of wines within the same bin with the same rating. In fact the lowest price bin (3.9, 13.5] has 8 such wines (with a rating of 92 points.)\n- Four of these lower priced wines are from Portugal, probably highlighting the fact that the country can produce good wine but is often overlooked by the general public.\n- The rest of the wines in the list are mostly from either France or the US.\n- The top 2 grape varieties in the list are Pinot Noir and Bordeaux-Style Red Blend.","ca289869":"The following observations from this chart can be made:\n1. A number of countries have a specific grape that is more prevalent e.g. Spain --> Tempranillo, Italy --> Sangiovese, Argentina --> Malbec, Australia --> Syrah (Shiraz).\n2. The 2 main grape varieties used in the US are Cabernet Sauvignon and Pinot Noir.\n3. The 2 main grape varieties used in France are Bordeaux-style blend and Pinot Noir.\n\nLet's now turn our attention to the price and points of each red grape variety and which are the best valued red wines in the table.","0d081163":"\n\nWe now have our final 'wine_clean' table with each wine having a wine type of 'red' or 'white'. We are left with just over 79k entries (from our original 150k+ entries) and can start our analysis.","ee559e7b":"# Searching For The Best Valued Red Wine\n\n\n### Introduction\nThe following project aims to study the file 'winemag_data_first150k.csv' which contains over 150k reviews of wines. Each row in the file contains various information about the wine including country of origin, description, points, price and variety. \n\nIn particular we will concentrate on varieties of grapes which produce red wines, to try and glean any interesting information or patterns. \n\n### Content\n\n1. Data exploration and cleaning\n    - Remove unnecessary columns and duplicate rows\n    - Merge data with data on wine colour; clean resulting data\n2. Data analysis\n    - Charts on grape variety distribution\n    - Analysis and distribution of 'price' and 'points' data\n    - Table of 'best-valued' red wines\n","c20b1ee1":"Now, let's deal with the problem that the data doesn't include direct information about whether the wine is red or white etc. We can deduce this information from the 'variety' column. We just need information on which colour wine each variety corresponds to. \n\nTo do this we have created a table 'wine_types.csv' by scraping data from Wikipedia which has pages which will list all known red grapes and white grapes. \n\nLet's read this in and merge it with our wine_clean table and see if we have any null values to deal with.","58e882b8":"From this list, let's fill in the missing values for the red and white varieties. At the same time we will delete the remaining rows which have a null value. These will typically be other types of wine (sparkling, rose, port etc) that we aren't interested in:","ab8e63e9":"Let's explore these null values further and see if we can fill them in.","f6ef1be5":"We can see that the points for each wine ranges between 80 and 100, with a mean rating of 88.2\n\nThe price ranges from \\$4 to \\$2,300, with a mean price of \\$37.7. However, 90% of the wines are less than \\$65\n\nLet's remove the outlier wines that have prices over \\$100 and look at the distributions of the 'points' and 'prices' columns aswell as a boxplot of the price of the top 10 red grape varieties.","4c760bc0":"First observations from the data:\n\n* There are 150,930 wine entries with 11 columns of data.\n* The first column 'Unnamed' is just a replication of the index, so can be removed.\n* The other 10 columns are all populated with strings apart from 'points' (integers) and 'price' (float).\n* There are a number of null values in the columns 'country', 'designation', 'price', 'province', 'region_1' and 'region_2'. Realistically, we will only be able to fill in the null values for the 'country' and 'price' columns. Filling in the other columns will be too time consuming and ultimately of no use for this project.\n* There is no information about whether the wine is red or white (or another type).\n\nLet's start by removing the 'Unnamed' column and looking at the null values for the country column:\n","b9e68780":"We can see that the price histogram is right-skewed with most prices on the cheaper end of the scale (in fact the median price is \\$30). There also seems to be an unusual spike of reviews for wines around the mean price value.\n\nThe points histogram is very slightly right_skewed (with a median value of 88.0)\n\nFrom the boxplot we can see that the 3 grape varieties that more expensive, in general, are; Pinot Noir, Sangiovese and Cabernet Sauvignon. Pinot Noir has the highest median price and Malbec has the lowest median price. Almost all Bordeux-style red wines are priced between \\$15 and \\$50\n\nThere are a number of ways we could evaluate the best-valued red wine in our data. The one we will focus on is to split the wines into 10 'price' bins and look at the wines with the highest number of points within each bin. \n\nWe have printed out the resulting table below:","6a9d64a4":"We've removed over 50k duplicates from the database!\n\nLet's clean up further by:\n1. Fill in the missing values in the 'price' column with the mean of that column.\n2. Drop columns that we won't need for our analysis ('designation', 'province', 'region_1' and 'region_2')\n3. Convert the 'variety' column to lower case strings","9be5be40":"We nearly have our final table ready but there are 2 more cleaning pieces to do:\n\n1. Deal with grapes that are genetically the same but have different names within our table (usually depending on the country\/region they are grown.) For example Shiraz and Syrah are the same grape. \n2. Remove rows that are blended varieties of grapes i.e. red blend and white blend, since we don't know the underlying varieties in these blends.","2600b58f":"## Data Analysis","ee24eebd":"Let's read our file into a pandas dataframe and take a look at the first 5 rows from the table:"}}