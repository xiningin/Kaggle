{"cell_type":{"a9305e9b":"code","7f1669d1":"code","1358cdc3":"code","1b9009da":"code","801c3df5":"code","ba741922":"code","442cf26b":"code","a25881d7":"code","6c84b6e1":"code","e3ae6861":"code","c0f8655f":"code","9ceae309":"code","014a3950":"code","bc0f8a1d":"code","be2ad6b1":"code","b49fa293":"code","cff213bb":"code","f32a7e3f":"code","1608750a":"code","80af97b2":"code","9088b601":"code","05b6de81":"code","6bff7fed":"code","81db7e94":"code","01dba518":"code","30ed1bff":"code","0ae3950e":"code","22b15940":"code","69708812":"markdown","0b770094":"markdown","ec55b34e":"markdown","3e3b4afd":"markdown","29bf1211":"markdown","3569c710":"markdown","f7071256":"markdown","fc245bab":"markdown","78590555":"markdown","b90e8aa4":"markdown","dd22dad1":"markdown","edbeeadc":"markdown"},"source":{"a9305e9b":"import sys\nimport sklearn\nimport seaborn as sns\nimport pandas as pd\nimport tensorflow as tf\nfrom tensorflow import keras\nimport numpy as np\nimport os\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n","7f1669d1":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\nfull = pd.concat([train,test])#, ignore_index=True)\nfull.head(1)\n","1358cdc3":"#train.isnull().sum(),train.count(),\n","1b9009da":"full.Embarked.mode()\nfull.Embarked.fillna('S', inplace=True)","801c3df5":"\nfull[full.Fare.isnull()]\n\n","ba741922":"full.Fare.fillna(full[full.Pclass==3]['Fare'].median(),inplace=True)","442cf26b":"full.loc[full.Cabin.notnull(),'Cabin']=1\nfull.loc[full.Cabin.isnull(),'Cabin']=0\nfull.Cabin.isnull().sum()","a25881d7":"pd.pivot_table(full,index=['Cabin'] , values=['Survived']).plot.bar(figsize=(4,2))\nplt.title('Taxa de sobrevivente')","6c84b6e1":"cabin = pd.crosstab(full.Cabin,full.Survived)\ncabin.rename(index={0:'sem cabine',1:'com babine'}, columns={0.0:'Morto',1.0:'Sobrevivente'}, inplace=True)\ncabin","e3ae6861":"cabin.plot.bar(figsize=(5,2))\nplt.xticks(rotation=0,size='xx-large')\nplt.title('N\u00famero de sobreviventes')\nplt.xlabel('')\nplt.legend()","c0f8655f":"median = train.Age.median()\ntrain.Age.fillna(median, inplace=True)","9ceae309":"full.info()","014a3950":"full.head(3)","bc0f8a1d":"full.groupby(['Pclass'])[['Age','Pclass']].mean().plot(kind='bar', figsize=(5,3))\nplt.xticks(rotation=0)","be2ad6b1":"pd.crosstab(full.Sex,full.Survived).plot.bar(stacked=True,figsize=(5,3))\nplt.legend(bbox_to_anchor=(0.55,0.9))","b49fa293":"agehist = pd.concat([full[full.Survived==1]['Age'],full[full.Survived==0]['Age']], axis=1)\nagehist.columns=['Sobrevivente','Morto']\nagehist.plot(kind='hist', bins=30,figsize=(15,3),alpha=0.4)","cff213bb":"full.ageCut = pd.cut(full.Age,5)\nfull.fareCut = pd.cut(full.Fare,5)","f32a7e3f":"full.ageCut.value_counts().sort_index()","1608750a":"full.fareCut.value_counts().sort_index()","80af97b2":"# substituir faixas\nfull.loc[full.Age<=16.136,'AgeCut']=1\nfull.loc[(full.Age>16.136)&(full.Age<=32.102),'AgeCut']=2\nfull.loc[(full.Age>32.102)&(full.Age<=48.068),'AgeCut']=3\nfull.loc[(full.Age>48.068)&(full.Age<=64.034),'AgeCut']=4\nfull.loc[full.Age>64.034,'AgeCut']=5\n\nfull.loc[full.Fare<=7.854,'FareCut']=1\nfull.loc[(full.Fare>7.854)&(full.Fare<=10.5),'FareCut']=2\nfull.loc[(full.Fare>10.5)&(full.Fare<=21.558),'FareCut']=3\nfull.loc[(full.Fare>21.558)&(full.Fare<=41.579),'FareCut']=4\nfull.loc[full.Fare>41.579,'FareCut']=5\n\n","9088b601":"full[['FareCut','Survived']].groupby(['FareCut']).mean().plot.bar(figsize=(8,3))","05b6de81":"full.corr()","6bff7fed":"predictors=['Cabin','Embarked','Parch','Pclass','Sex','SibSp','AgeCut','FareCut','Age','Fare']\nfull_dummies=pd.get_dummies(full[predictors])\nfull_dummies.count()","81db7e94":"medianAgeCut = full_dummies.AgeCut.median()\nfull_dummies.AgeCut.fillna(medianAgeCut, inplace=True)\nmedianAge = full_dummies.Age.median()\n\nfull_dummies.Age.fillna(medianAge, inplace=True)\nx=full_dummies[:891]\ny=full.Survived[:891]\nx_test = full_dummies[891:]\n\nscaler = StandardScaler()\nx_scaled =scaler.fit(x).transform(x)\nx_test_scaled =scaler.fit(x).transform(x_test)\n","01dba518":"model = keras.models.Sequential([\n    keras.layers.Flatten(input_shape=(1, 13)),\n    keras.layers.Dense(300, activation=\"relu\"),\n    keras.layers.Dense(1, activation=keras.activations.hard_sigmoid)                                   \n])\nmodel.compile(loss=keras.losses.binary_crossentropy, optimizer=keras.optimizers.Nadam(), metrics=[\"accuracy\"])\n","30ed1bff":"#model.fit(x=x_scaled,y=y,  epochs=100,batch_size=32, steps_per_epoch=len(x) \/\/ 32)\n","0ae3950e":"#p = model.predict(x_test_scaled)","22b15940":"#submission = pd.DataFrame({'PassengerId':test.PassengerId,'Survived':p.reshape(-1).astype('int64')})\n#submission.Survived.value_counts()\n#submission.to_csv('submission.csv', index=False)\n","69708812":"Mulhertes tem uma taxa maior de sobrevivencia muito maior do que os homens.","0b770094":"# Basic Modeling & Evaluation","ec55b34e":"Criar faixa et\u00e1rias (idade, tarifas)","3e3b4afd":"Valor da passagem tem um vinculo direto com a classe.\n","29bf1211":"# Setup","3569c710":"Valores auxentes em cabine, isso pode export a taxa de sobrevivencia das pessoas que tem um numero de cabine para as que n\u00e3o.","f7071256":"# Data Cleaning","fc245bab":"# Feature Engeneering","78590555":"Contagem de Cabine vs Sobreviventes.","b90e8aa4":"Vis\u00e3o explorat\u00f3ria","dd22dad1":"Vamos verificar se a idade de genero \u00e9 tem algo a dizer..","edbeeadc":"Rela\u00e7\u00e3o de idade vs sobrevitente"}}