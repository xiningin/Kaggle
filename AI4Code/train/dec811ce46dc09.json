{"cell_type":{"758b7070":"code","00a5ad0a":"code","6795384b":"code","3d51c193":"code","fdd0396a":"code","77ca860d":"code","c20fe3b1":"code","2a36c880":"code","9a4a680f":"code","ea2b3f6f":"code","78665610":"code","f3944b51":"code","460aedce":"code","66907e10":"code","17b434f4":"code","1635ced6":"code","abbca06c":"code","2d9d8394":"code","e2e7ac8e":"code","216844e3":"code","15b57f46":"code","ab282e2a":"code","cc338016":"code","9927f690":"code","25160277":"code","d5441a19":"code","3b35db37":"code","2bd12c03":"code","89997428":"code","426c5e53":"code","046444db":"code","ce0d9e7a":"code","19618a47":"code","c0e322a8":"code","3ef5bf90":"code","a9c99fa1":"code","12ba4d68":"code","65abd5ba":"code","488ecb0e":"code","0367282f":"code","f6bf4959":"code","442742d9":"markdown","71f2a900":"markdown","0da0a079":"markdown","5a7f13b2":"markdown","393b66fd":"markdown","1f319a9c":"markdown","06624188":"markdown","0a8f5779":"markdown","b927f4aa":"markdown","bd8837a0":"markdown","8571ed70":"markdown","350cd6f1":"markdown","4a3f4567":"markdown","10e0b37c":"markdown","881679b9":"markdown","28357732":"markdown","91de6b8f":"markdown","2d117335":"markdown","08cf851f":"markdown","3c582dfd":"markdown","bf6435e5":"markdown","71f4dba1":"markdown","f1756033":"markdown","d31831d6":"markdown","3a41fdc8":"markdown","db96ea19":"markdown","077f3d94":"markdown","7988023e":"markdown","2148199a":"markdown","d5dfa9fc":"markdown","2b105026":"markdown","f0e10caf":"markdown","b43310f2":"markdown"},"source":{"758b7070":"import pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.tsa.stattools import acf, pacf\nfrom statsmodels.tsa.arima_model import ARIMA","00a5ad0a":"airpass = pd.read_csv('..\/input\/air-passengers\/AirPassengers.csv')","6795384b":"airpass.head(5)","3d51c193":"airpass.tail(5)","fdd0396a":"airpass.rename(columns={'#Passengers':'Passengers'},inplace=True)","77ca860d":"airpass.head()","c20fe3b1":"airpass.shape","2a36c880":"airpass.info()","9a4a680f":"from datetime import datetime\nairpass['Month']=pd.to_datetime(airpass['Month'],infer_datetime_format=True)","ea2b3f6f":"airpass.info()","78665610":"airpassind = airpass.set_index('Month',inplace=False)","f3944b51":"airpassind.head()","460aedce":"plt.xlabel('Date')\nplt.ylabel('Number Of Air Passengers')\nplt.plot(airpassind)","66907e10":"def test_stationarity(timeseries):\n    \n    #Determine rolling statistics\n    movingAverage = timeseries.rolling(window=12).mean()\n    movingSTD = timeseries.rolling(window=12).std()\n    \n    #Plot rolling statistics\n    plt.plot(timeseries, color='blue', label='Original')\n    plt.plot(movingAverage, color='red', label='Rolling Mean')\n    plt.plot(movingSTD, color='black', label='Rolling Std')\n    plt.legend(loc='best')\n    plt.title('Rolling Mean & Standard Deviation')\n    plt.show(block=False)\n    \n    #Perform Dickey\u2013Fuller test:\n    print('Results of Dickey Fuller Test:')\n    airpass_test = adfuller(timeseries['Passengers'], autolag='AIC')\n    dfoutput = pd.Series(airpass_test[0:4], index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\n    for key,value in airpass_test[4].items():\n        dfoutput['Critical Value (%s)'%key] = value\n    print(dfoutput)","17b434f4":"test_stationarity(airpassind)","1635ced6":"airpass_log = np.log(airpassind)","abbca06c":"plt.plot(airpass_log)","2d9d8394":"rollmean_log = airpass_log.rolling(window=12).mean()\nrollstd_log = airpass_log.rolling(window=12).std()","e2e7ac8e":"plt.plot(airpass_log, color='blue', label='Original')\nplt.plot(rollmean_log, color='red', label='Rolling Mean')\nplt.plot(rollstd_log, color='black', label='Rolling Std')\nplt.legend(loc='best')\nplt.title('Rolling Mean & Standard Deviation (Logarithmic Scale)')","216844e3":"airpass_new = airpass_log - rollmean_log","15b57f46":"airpass_new.head()","ab282e2a":"airpass_new.dropna(inplace=True)","cc338016":"airpass_new.head()","9927f690":"test_stationarity(airpass_new)","25160277":"airpass_log_diff = airpass_log - airpass_log.shift()\nplt.plot(airpass_log_diff)","d5441a19":"airpass_log_diff.dropna(inplace=True)\nplt.plot(airpass_log_diff)","3b35db37":"test_stationarity(airpass_log_diff)","2bd12c03":"decomposition = seasonal_decompose(airpass_log)\n\ntrend = decomposition.trend\nseasonal = decomposition.seasonal\nresidual = decomposition.resid\n\nplt.subplot(411)\nplt.plot(airpass_log, label='Original')\nplt.legend(loc='best')\n\nplt.subplot(412)\nplt.plot(trend, label='Trend')\nplt.legend(loc='best')\n\nplt.subplot(413)\nplt.plot(seasonal,label='Seasonality')\nplt.legend(loc='best')\n\nplt.subplot(414)\nplt.plot(residual, label='Residuals')\nplt.legend(loc='best')\nplt.tight_layout()","89997428":"airpass_decompose = residual\nairpass_decompose.dropna(inplace=True)","426c5e53":"rollmean_decompose = airpass_decompose.rolling(window=12).mean()\nrollstd_decompose = airpass_decompose.rolling(window=12).std()\n\nplt.plot(airpass_decompose, color='blue', label='Original')\nplt.plot(rollmean_decompose, color='red', label='Rolling Mean')\nplt.plot(rollstd_decompose, color='black', label='Rolling Std')\nplt.legend(loc='best')\nplt.title('Rolling Mean & Standard Deviation')","046444db":"lag_acf = acf(airpass_log_diff, nlags=20)\nlag_pacf = pacf(airpass_log_diff, nlags=20, method='ols')","ce0d9e7a":"#Plot ACF:\nplt.subplot(121)\nplt.plot(lag_acf)\nplt.axhline(y=0, linestyle='--', color='gray')\nplt.axhline(y=-1.96\/np.sqrt(len(airpass_log_diff)), linestyle='--', color='gray')\nplt.axhline(y=1.96\/np.sqrt(len(airpass_log_diff)), linestyle='--', color='gray')\nplt.title('Autocorrelation Function')            \n\n#Plot PACF\nplt.subplot(122)\nplt.plot(lag_pacf)\nplt.axhline(y=0, linestyle='--', color='gray')\nplt.axhline(y=-1.96\/np.sqrt(len(airpass_log_diff)), linestyle='--', color='gray')\nplt.axhline(y=1.96\/np.sqrt(len(airpass_log_diff)), linestyle='--', color='gray')\nplt.title('Partial Autocorrelation Function')\n            \nplt.tight_layout()","19618a47":"model1 = ARIMA(airpass_log, order=(2,1,0))\nresults_AR = model1.fit(disp=-1)\nplt.plot(airpass_log_diff)\nplt.plot(results_AR.fittedvalues, color='red')\nplt.title('RSS: %.4f'%sum((results_AR.fittedvalues - airpass_log_diff['Passengers'])**2))\nprint('Plotting AR model')","c0e322a8":"model2 = ARIMA(airpass_log, order=(0,1,2))\nresults_MA = model2.fit(disp=-1)\nplt.plot(airpass_log_diff)\nplt.plot(results_MA.fittedvalues, color='red')\nplt.title('RSS: %.4f'%sum((results_MA.fittedvalues - airpass_log_diff['Passengers'])**2))\nprint('Plotting MA model')","3ef5bf90":"model = ARIMA(airpass_log, order=(2,1,2))\nresults_ARIMA = model.fit(disp=-1)\nplt.plot(airpass_log_diff)\nplt.plot(results_ARIMA.fittedvalues, color='red')\nplt.title('RSS: %.4f'%sum((results_ARIMA.fittedvalues - airpass_log_diff['Passengers'])**2))\nprint('Plotting ARIMA model')","a9c99fa1":"predictions_ARIMA_diff = pd.Series(results_ARIMA.fittedvalues, copy=True)\npredictions_ARIMA_diff.head()","12ba4d68":"predictions_ARIMA_diff_cumsum = predictions_ARIMA_diff.cumsum()\npredictions_ARIMA_diff_cumsum.head()","65abd5ba":"predictions_ARIMA_log = pd.Series(airpass_log['Passengers'].iloc[0], index=airpass_log.index)\npredictions_ARIMA_log = predictions_ARIMA_log.add(predictions_ARIMA_diff_cumsum, fill_value=0)\npredictions_ARIMA_log.head()","488ecb0e":"predictions_ARIMA = np.exp(predictions_ARIMA_log)\nplt.plot(airpassind)\nplt.plot(predictions_ARIMA)","0367282f":"airpass_log.head()","f6bf4959":"results_ARIMA.plot_predict(1,264)","442742d9":"**Working on Rolling stats seperately (not using function) because we would need Rolling stats separately for computing**","71f2a900":"### **AR Model**\nMaking order = (2,1,0)","0da0a079":"**Let's make one function consisting of stationary data checking and ADCF test working. Because we will need to repeat the steps many times, therefore, making function will become very handy**","5a7f13b2":"**Let us now break down the 3 components of the log scale series using a system libary function. Once, we separate our the components, we can simply ignore trend & seasonality and check on the nature of the residual part.**","393b66fd":"### **AR+I+MA = ARIMA Model**\nMaking order = (2,1,2)","1f319a9c":"**Let's plot the data**","06624188":"### **Inverse of log is exp**","0a8f5779":"From above graph we can say that, we slightly bettered our previous results. Now, we are heading into the right direction.\n\nFrom the above graph, Time series with log scale as well as Rolling Mean(moving avg) both have the trend component. Thus subtracting one from the other should remove the trend component.\n\n**R (result) = Time Series Loca Scale - Rolling Mean Log Scale -> this can be our final non trend curve**","b927f4aa":"**RSS value for:**\nAR Model - 1.5023\nMA Model - 1.4721\n\nARIMA Model - 1.0292\n\nBy combining AR & MA into ARIMA, we see that RSS value has decreased from either case to 1.0292, indicating ARIMA to be better than its individual component models.\n\nWith the ARIMA model built, we will now generate predictions. But, before we do any plots for predictions ,we need to reconvert the predictions back to original form. This is because, our model was built on log transformed data.","bd8837a0":"**Let's check first 5 and last 5 records of data set**","8571ed70":"**From the above below, we can see that there is a Trend compoenent in the series. Hence, we now check for stationarity of the data.**","350cd6f1":"### **Data Transformation To Achieve Stationarity**\n\n**Now, we will have to perform some data transformation to achieve Stationarity. We can perform any of the transformations like taking log scale, square, square root, cube, cube root, time shift, exponential decay, etc.**\n\n**Let's perform Log Transformation.**\n\n**Basically we need to remove the trend component.**","4a3f4567":"**From above plot, we can see that Rolling Mean itself has a trend component even though Rolling Standard Deviation is fairly constant with time.**\n\n**For time series to be stationary, we need to ensure that both Rolling Mean and Rolling Standard Deviation remain fairly constant WRT time.**\n\n**Both the curves needs to be parallel to X-Axis, in our case it is not so.**\n\n**We've also conducted the ADCF ie Augmented Dickey Fuller Test. Having the Null Hypothesis to be Time Series is Non Stationary.**","10e0b37c":"Also, after concluding the results from ADFC test:\n\n1. p-value has reduced from 0.99 to 0.022\n2. Critical values at 1%,5%,10% confidence intervals are pretty close to the Test Statistic\n\nSo we can now say that given series is now **STATIONARY**","881679b9":"Here the **Objective** is- Build a model to forecast the demand(passenger traffic) in Airplanes. The data is classified in date\/time and the passengers travelling per month\n\n**Time Series:**<br>\nTime Series is a series of observations taken at particular time intervals (usually equal intervals). Analysis of the series helps us to predict future values based on previous observed values. In Time series, we have only 2 variables, time & the variable we want to forecast.\n\n**Why & where Time Series is used?**<br>\nTime series data can be analysed in order to extract meaningful statistics and other charecteristsics. It's used in atleast the 4 scenarios:\n1. Business Forecasting\n2. Understanding past behavior\n3. Plan the future\n4. Evaluate current accomplishment\n\n**Importance of Time Series Analysis:**<br>\nAmple of time series data is being generated from a variety of fields. And hence the study time series analysis holds a lot of applications. Let us try to understand the importance of time series analysis in different areas.\n1. Economics\n2. Finance\n3. Healthcare\n4. Environmental Science\n5. Sales Forecasting\n\n**What are the components of Time Series?**<br>\nThere are 4 components:\n**1. Trend** - Upward & downward movement of the data with time over a large period of time. Eq: Appreciation of Dollar vs rupee.\n**2. Seasonality** - seasonal variances. Eq: Ice cream sales increases in Summer only\n**3. Noise or Irregularity** - Spikes & troughs at random intervals\n**4. Cyclicity** - behavior that repeats itself after large interval of time, like months, years etc.\n\n**What is Stationarity?**<br>\nBefore applying any statistical model on a Time Series, the series has to be staionary, which means that, over different time periods,\n1. It should have constant mean.\n2. It should have constant variance or standard deviation.\n3. Auto-covariance should not depend on time.\n\nTrend & Seasonality are two reasons why a Time Series is not stationary.\n\n**Why does Timeseries has to be Stationary?**<br>\nStationary data means mean and standard deviation of data does not change WRT time. The mean across many time periods is only informative if the expected value is the same across those time periods. We make the data stationary in case of ARIMA because the arima model looks at the past data to predict the future values.\n\n**Tests to check if a series is stationary or not:**<br>\nThere are 2 ways to check for Stationarity of a Timeseries:<br>\n**1. Rolling Statistics** - Plot the moving avg(mean) or moving standard deviation to see if it varies with time. It is a visual technique.<br>\n**2. ADCF Test** - Augmented Dickey\u2013Fuller test is used to gives us various values that can help in identifying stationarity. The Null hypothesis says that a Timeseries is non-stationary. It comprises of a Test Statistics & some critical values for some confidence levels. If the Test statistics is less than the critical values, we can reject the null hypothesis & say that the series is stationary. THE ADCF test also gives us a p-value. Acc to the null hypothesis, lower values of p is better.\n\n**What Is ADCF test?**<br>\nIn statistics and econometrics, an augmented Dickey\u2013Fuller test (ADF) tests the null hypothesis that a unit root is present in a time series sample. The alternative hypothesis is different depending on which version of the test is used, but is usually stationarity or trend-stationarity. It is an augmented version of the Dickey\u2013Fuller test for a larger and more complicated set of time series models.\n\nThe augmented Dickey\u2013Fuller (ADF) statistic, used in the test, is a negative number. The more negative it is, the stronger the rejection of the hypothesis that there is a unit root at some level of confidence.\n\np value(0<=p<=1) should be as low as possible. Critical values at different confidence intervals should be close to the Test statistics value.\n\n**What is ARIMA model?**<br>\nARIMA(Auto Regressive Integrated Moving Average) is a combination of 2 models AR(Auto Regressive) & MA(Moving Average). It has 3 hyperparameters - P(auto regressive lags), d(order of differentiation) and Q(moving avg.) which respectively comes from the AR, I & MA components. The AR part is correlation between prev & current time periods. To smooth out the noise, the MA part is used. The I part binds together the AR & MA parts.\n\n**How to find value of P & Q for ARIMA ?**<br>\nWe need to take help of **ACF(Auto Correlation Function)** & **PACF(Partial Auto Correlation Function)** plots. ACF & PACF graphs are used to find value of P & Q for ARIMA. We need to check, for which value in x-axis, graph line drops to 0 in y-axis for 1st time.\nFrom PACF(at y=0), get P\nFrom ACF(at y=0), get Q\n\n**What is Exponential Smoothing?**<br>\nExponential smoothing is a rule of thumb technique for smoothing time series data using the exponential window function. Whereas in the simple moving average the past observations are weighted equally, exponential functions are used to assign exponentially decreasing weights over time. It is an easily learned and easily applied procedure for making some determination based on prior assumptions by the user, such as seasonality. Exponential smoothing is often used for analysis of time-series data.","28357732":"# Time Series - ARIMA\n\n**Time series analysis is a statistical method to analyse the past data within a given duration of time to forecast the future. It comprises of ordered sequence of data at equally spaced interval.To understand the time series data & the analysis let us consider an example. Consider an example of Airline Passenger data. It has the count of passenger over a period of time.**\n\n![](https:\/\/i.pinimg.com\/originals\/6e\/8a\/45\/6e8a45b41425813c606412e3b9e78cb8.jpg)","91de6b8f":"### **MA Model**\nMaking order = (0,1,2)","2d117335":"### **Prediction & Reverse Transformation**","08cf851f":"### **Time Shift Transformation**","3c582dfd":"**Loading AirPassenger data set**","bf6435e5":"**From above plot, we can see that our predicted forecasts are very close to the real time series values. It also indicates a fairly accurate model.**","71f4dba1":"**Now, we will need to index Month column.**","f1756033":"**There are 144 records in 2 datasets and 2 columns. There are no null records present. But, look at the Month column. We need to convert them in to datetime datatype.**","d31831d6":"**From the above plot, we came to know that \"indeed subtracting two related series having similar trend components actually removed trend and made the dataset stationary\"**","3a41fdc8":"**We have 144 (existing data of 12 yrs in months) data points. \nNow, we want to forecast for additional 10 yrs (10x12 months=120 data points).**\n\n**144+120 = 264 records\/data points**","db96ea19":"**Let's determine & plot rolling statistics.**","077f3d94":"**Let's rename \"#Passengers\", seems really annoying the column name.**","7988023e":"**There can be cases where an observation simply consist of trend & seasonality. In that case, there won't be any residual component & that would be a null or NaN. Hence, we also remove such cases.**","2148199a":"### **Plotting ACF & PACF**","d5dfa9fc":"For a Time series to be stationary, the ADCF test should have:\n\n1. p-value should be low (according to the null hypothesis)\n2. The critical values at 1%,5%,10% confidence intervals should be as close as possible to the Test Statistics\n\nFrom the above ADCF test result, we can see that p-value(near to 1.0) is very large. Also critical values are no where close to the Test Statistics. Hence, we can safely say that our Time Series at the moment is **NOT STATIONARY**","2b105026":"**Loading the basic libraries**","f0e10caf":"From above plot, we can see that, visually this is the very best result as our series along with rolling stats values of moving avg(mean) & moving standard deviation is very much flat & stationary. \n\nBut, the ADCF test shows us that:\n\n1. p-value of 0.07 is not as good as 0.02 of previous instance.\n2. Test Statistic value not as close to the critical values as that of previous instance.","b43310f2":"From the ACF graph, we can see that curve touches y=0.0 line at x=2. Thus, from theory, Q = 2 \nFrom the PACF graph, we see that curve touches y=0.0 line at x=2. Thus, from theory, P = 2\n\n**ARIMA is AR + I + MA.** Before, we see an ARIMA model, let us check the results of the individual AR & MA model. Note that, these models will give a value of RSS. Lower the RSS values indicates a better model."}}