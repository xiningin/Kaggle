{"cell_type":{"c097d316":"code","0fed7c25":"code","79b5dd88":"code","bf8e59de":"code","30cea36c":"code","6704aab8":"code","066ceb2c":"code","68dc3f30":"code","f68c8b00":"code","ac559a64":"markdown"},"source":{"c097d316":"import pandas as pd\nimport numpy as np\nimport gc\n\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.linear_model import Ridge","0fed7c25":"train = pd.read_csv(\"..\/input\/30-days-of-ml\/train.csv\")\nsample_submission = pd.read_csv(\"..\/input\/30-days-of-ml\/sample_submission.csv\")","79b5dd88":"dae_features_train = np.load('..\/input\/30-dyas-of-ml-dae-model\/dae_features_train.npy')\ndae_features_test = np.load('..\/input\/30-dyas-of-ml-dae-model\/dae_features_test.npy')","bf8e59de":"y = train['target'].to_numpy().reshape(-1, 1)\n\ndel train\ngc.collect()","30cea36c":"kfold = KFold(n_splits=5, shuffle=True, random_state=42)\npreds = []\nrmse = []","6704aab8":"for fold, (train_idx, val_idx) in enumerate(kfold.split(dae_features_train, y)):\n    X_train, X_val = dae_features_train[train_idx, :], dae_features_train[val_idx, :]\n    y_train, y_val = y[train_idx], y[val_idx]\n    model = Ridge(alpha=1069, tol=0.0006096923774993545)  \n    model.fit(X_train, y_train)\n    preds.append(model.predict(dae_features_test))\n    rmse.append(mean_squared_error(y_val, model.predict(X_val), squared=False))\n    print(fold, rmse[fold])\n    \nprint(f'mean RMSE: {np.mean(rmse)}')","066ceb2c":"sample_submission['target'] = np.mean(preds, axis=0)","68dc3f30":"sample_submission.head()","f68c8b00":"sample_submission.to_csv('submission.csv', index=None)","ac559a64":"# Inference part\n\n### Training: https:\/\/www.kaggle.com\/jarupula\/30days-ml-dae-model-training"}}