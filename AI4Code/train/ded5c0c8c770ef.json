{"cell_type":{"adcbfc63":"code","3dee8033":"code","63034cd1":"code","3f0af647":"code","7fa25bd7":"code","fe5e42b5":"code","7c6a34db":"code","7f8e07f9":"code","7d37103b":"code","26fc55ff":"code","56c3182d":"code","54195c5b":"code","f0ceca6e":"code","6bd65e8f":"code","4aee3932":"code","e224a704":"code","9148e8e3":"code","6982f51b":"code","d0c3d4de":"code","53d1cad3":"code","d6ef909b":"code","0830981b":"code","c92d05e2":"code","3846c62b":"code","13669e6b":"code","3a5b77d4":"code","45104d72":"code","a35c67f9":"markdown","056aa769":"markdown","963b0e1b":"markdown","8470f9b1":"markdown","a73c6523":"markdown","265dc0ba":"markdown","a1257f6d":"markdown","1edd6012":"markdown","4dd1855a":"markdown","90d833a1":"markdown","1381c104":"markdown"},"source":{"adcbfc63":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3dee8033":"from surprise import accuracy\nfrom surprise.model_selection.split import train_test_split\nfrom surprise.prediction_algorithms.random_pred import NormalPredictor\nimport surprise","63034cd1":"category_tree = pd.read_csv(\"..\/input\/category_tree.csv\", header= 0)\nevents = pd.read_csv(\"..\/input\/events.csv\", header= 0)\nitem_properties_part1 = pd.read_csv(\"..\/input\/item_properties_part1.csv\", header= 0)\nitem_properties_part2 = pd.read_csv(\"..\/input\/item_properties_part2.csv\", header= 0)\nitem_properties_part = pd.concat([item_properties_part1, item_properties_part2])","3f0af647":"data = events[['visitorid','event','itemid']]\ndata.head()","7fa25bd7":"transfrom_rating = []\n# view = 1, addtocart = 2, transaction = 3\ndef transfrom_data(data_raw):\n    data = data_raw.copy()\n    for event in data.event:\n        if(event == 'view'):\n            transfrom_rating.append(1)\n        if(event == 'addtocart'):\n            transfrom_rating.append(2)\n        if(event == 'transaction'):\n            transfrom_rating.append(3)\n    data['rating']= transfrom_rating\n    return data[['visitorid','itemid','rating']]\ndata_surprise = transfrom_data(data)\ndata_surprise.head()","fe5e42b5":"reader = surprise.Reader(rating_scale=(1, 3))\ndata_tuning = surprise.Dataset.load_from_df(data_surprise, reader)\ntype(data_tuning)","7c6a34db":"bsl_options = {'method': 'als',\n               'n_epochs': 5,\n               'reg_u': 12,\n               'reg_i': 5\n               }\ntrainset, testset = train_test_split(data_tuning, test_size=0.25)\nalgo_normal_predictor = NormalPredictor()\npredictions = algo_normal_predictor.fit(trainset).test(testset)","7f8e07f9":"result = pd.DataFrame(predictions, columns=['visitor_id', 'item_id', 'base_event', 'predict_event', 'details'])\nresult.drop(columns = {'details'}, inplace = True)\nresult['erro'] = abs(result['base_event'] - result['predict_event'])\nresult.head()","7d37103b":"result['predict_event'].hist(bins= 100, figsize= (20,10))","26fc55ff":"result[result['base_event']== 1]['predict_event'].hist(bins= 100, figsize= (20,10))","56c3182d":"result[result['base_event']== 2]['predict_event'].hist(bins= 100, figsize= (20,10))","54195c5b":"result[result['base_event']== 3]['predict_event'].hist(bins= 100, figsize= (20,10))","f0ceca6e":"print(\"The number item view \", data_surprise[data_surprise['rating']==1].shape[0])\nprint(\"The number item tranaction \", data_surprise[data_surprise['rating']==2].shape[0])\nprint(\"The number item addtacard \", data_surprise[data_surprise['rating']==3].shape[0])\ndata_surprise.head()","6bd65e8f":"data_view  = data_surprise[data_surprise['rating']==1].reset_index(drop= True)\ndata_transaction  = data_surprise[data_surprise['rating']==2].reset_index(drop= True)\ndata_addtocard  = data_surprise[data_surprise['rating']==3].reset_index(drop= True)","4aee3932":"data_addtocard.shape","e224a704":"from sklearn.model_selection import train_test_split as  train_test_split_sklearn\ndata_view_train, data_view_test = train_test_split_sklearn(data_view, test_size= 0.008)\ndata_transaction_train, data_transaction_test = train_test_split_sklearn(data_transaction, test_size= 0.33)","9148e8e3":"new_data_tuning = pd.concat([data_addtocard, data_view_test, data_transaction_test]).sort_values(by = 'rating').reset_index(drop=True)","6982f51b":"print(\"The number item view \", new_data_tuning[new_data_tuning['rating']==1].shape[0])\nprint(\"The number item tranaction \", new_data_tuning[new_data_tuning['rating']==2].shape[0])\nprint(\"The number item addtacard \", new_data_tuning[new_data_tuning['rating']==3].shape[0])\nprint(\"The new data train \", new_data_tuning.shape)\nnew_data_tuning.head()","d0c3d4de":"reader = surprise.Reader(rating_scale=(1, 3))\nnew_data_train= surprise.Dataset.load_from_df(new_data_tuning, reader)\ntype(new_data_train)","53d1cad3":"bsl_options = {'method': 'als',\n               'n_epochs': 5,\n               'reg_u': 12,\n               'reg_i': 5\n               }\ntrain, test = train_test_split(new_data_train, test_size=0.25)\nalgo_normal_predictor_fix_rating = NormalPredictor()\npredictions_fix_rating = algo_normal_predictor_fix_rating.fit(train).test(test)","d6ef909b":"result_fix_rating = pd.DataFrame(predictions_fix_rating, columns=['visitor_id', 'item_id', 'base_event', 'predict_event', 'details'])\nresult_fix_rating.drop(columns = {'details'}, inplace = True)\nresult_fix_rating['erro'] = abs(result_fix_rating['base_event'] - result_fix_rating['predict_event'])\nresult_fix_rating.head()","0830981b":"result_fix_rating['predict_event'].hist(bins= 100, figsize= (20,10))","c92d05e2":"result_fix_rating[result_fix_rating['base_event']== 1]['predict_event'].hist(bins= 100, figsize= (20,10))","3846c62b":"result_fix_rating[result_fix_rating['base_event']== 2]['predict_event'].hist(bins= 100, figsize= (20,10))","13669e6b":"result_fix_rating[result_fix_rating['base_event']== 3]['predict_event'].hist(bins= 100, figsize= (20,10))","3a5b77d4":"result_fix_rating['erro'].hist(bins= 100, figsize= (20,10))","45104d72":"from surprise import accuracy\nmae_model = accuracy.mae(predictions_fix_rating)\nrmse_model = accuracy.rmse(predictions_fix_rating)","a35c67f9":"+ kh\u00e1 cao- sai l\u1ec7ch","056aa769":"**NormalPredictor Surprise Modul**","963b0e1b":"+ Nh\u1eadn x\u00e9t: c\u00e1c gi\u00e1 tr\u1ecb error cho th\u1ea5y kho\u1ea3ng ch\u00eanh l\u1ec7nh gi\u1eefa gi\u00e1 tr\u1ecb th\u1ef1c t\u1ebf v\u00e0 d\u1ef1 \u0111o\u00e1n. H\u00ecnh v\u00e0o \u0111\u1ed3 th\u1ecb ta th\u1ea5y \u0111\u1ed9 ch\u00ednh x\u00e1c tr\u00ean l\u00e0 kh\u00f4ng cao","8470f9b1":"+ Nh\u1eadn x\u00e9t: c\u00f3 r\u1ea5t nhi\u1ec1u gi\u00e1 tr\u1ecb d\u1ee5 \u0111o\u00e1n g\u1ea7n 1. Gi\u1ea3i th\u00edch cho \u0111i\u1ec1u n\u00e0y l\u00e0 v\u00ec trong t\u1eadp train c\u00f3 r\u1ea5t nhi\u1ec1u gi\u00e1 tr\u1ecb 1 n\u00ean khi t\u1ea1o ra m\u00f4 h\u00ecnh c\u00e1c gi\u00e1 tr\u1ecb c\u00f3 xu h\u01b0\u1edbng b\u1ecb k\u00e9o v\u1ec1 1","a73c6523":"**Ch\u1ecdn c\u00e1c m\u1eabu b\u1eb1ng nhau trong t\u1eadp train**","265dc0ba":"+ K\u1ebft lu\u1eadn: Gi\u00e1 tr\u1ecb ph\u00e2n b\u1ed1 ch\u1ee7 y\u1ebfu trong l\u00e2n c\u1eadn 1 v\u00e0 3. V\u00e0 t\u01b0\u01a1ng \u0111\u1ed1i \u0111\u1ed3ng \u0111\u1ebfu trong kho\u1ea3ng c\u00f2n l\u1ea1i\n+ M\u00f4 h\u00ecnh kh\u00f4ng t\u1ed1t","a1257f6d":"+ Fix s\u1ed1 l\u01b0\u1ee3ng c\u1ee7a 1,2,3 v\u1ec1 ng\u01b0\u1ee1ng b\u1eb1ng nhau","1edd6012":"+ Data m\u1edbi c\u00f3 c\u00e1c s\u1ed1 l\u01b0\u1ee3ng rating x\u00eam nhau","4dd1855a":"**Predict event histogram**","90d833a1":"+ Nh\u1eadn x\u00e9t: c\u00e1c gi\u00e1 tr\u1ecb 2 v\u00e0 3 kh\u00f4ng c\u00f2n \u0111\u00fang v\u1edbi d\u1ee5 \u0111o\u00e1n. Do trong t\u1eadp train c\u00f3 qu\u00e1 nhi\u1ec1u gi\u00e1 tr\u1ecb 1 n\u00ean gi\u00e1 tr\u1ecb 2, 3 b\u1ecb \u1ea3nh h\u01b0\u1edfng r\u1ea5t l\u1edbn","1381c104":"+ Khi m\u00e0 values =1, th\u00ec s\u1ed1 l\u01b0\u1ee3ng d\u1ef1 \u0111o\u00e1n gi\u00e1 tr\u1ecb g\u1ea7n \u0111\u00fang l\u00e0 r\u1ea5t \u00edt (d\u1ee5 \u0111o\u00e1n \u0111\u00f9ng kh\u00f4ng cao), c\u00f2n s\u1ed1 l\u01b0\u1ee3ng d\u1ef1 \u0111o\u00e1n gi\u00e1 tr\u1ecb sai l\u00e0 r\u1ea5t nhieue\n+ Suy ra : \u0111i\u1ec1u n\u00e0y cho th\u1ea5y m\u00f4 h\u00ecnh ch\u01b0a t\u1ed1t cho gi\u00e1 tr\u1ecb 1"}}