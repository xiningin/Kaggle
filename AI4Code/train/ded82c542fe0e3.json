{"cell_type":{"e3d96a9c":"code","d9b7d18f":"code","53a9f578":"code","f2d95fad":"code","73b12ed6":"code","dad673da":"code","39c98535":"code","099627b8":"code","fd247612":"code","6c53c9f3":"code","2d044470":"code","ddd1d592":"code","edef3a1f":"code","ed3b151d":"code","8bcd303b":"code","bae3611c":"code","2dba190b":"code","e0b23be5":"code","b8282c74":"code","727ab6f3":"code","5924c82e":"markdown","cf7e06b1":"markdown","1c14d100":"markdown","0e09e9cd":"markdown","9d96c98f":"markdown","70643239":"markdown","644a955a":"markdown","ff35c2d1":"markdown","1859c41a":"markdown"},"source":{"e3d96a9c":"#importing python libraries\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.plotly as py \nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport os","d9b7d18f":"#reading data\ndf = pd.read_csv('..\/input\/WA_Fn-UseC_-Telco-Customer-Churn.csv')","53a9f578":"df.head()","f2d95fad":"df.info() #There isn't any NaN values","73b12ed6":"#I split dataframe by customers left or stayed.\ndfy = df[df.Churn == 'Yes'] #dfy : dataframe churn : yes\n\ndfn = df[df.Churn == 'No'] #dfn : dataframe churn : no\n\ntrace0 = go.Histogram(\n    x = dfy.TotalCharges,\n    name = 'Left',\n    marker=dict(color='rgba(255, 0, 0, 0.5)'))\n\ntrace1 = go.Histogram(\n    x = dfn.TotalCharges,\n    name = 'Stayed',\n    marker=dict(color='rgba(0, 153, 255, 0.5)'))\n\nlayout = go.Layout(title = 'Total Charges of Customers',\n                   xaxis=dict(title='Total Charges'),\n                   yaxis=dict( title='Count'),\n                   )\ndata = [trace0,trace1]\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig)","dad673da":"trace0 = go.Histogram(\n    x = dfy.MonthlyCharges,\n    name = 'Left',\n    marker=dict(color='rgba(255, 0, 0, 0.5)'))\n\ntrace1 = go.Histogram(\n    x = dfn.MonthlyCharges,\n    name = 'Stayed',\n    marker=dict(color='rgba(0, 153, 255, 0.5)'))\n\n\nlayout = go.Layout(title = 'Monthly Charges of Customers',\n                   xaxis=dict(title='Monthly Charges'),\n                   yaxis=dict( title='Count'),\n                   )\ndata = [trace0,trace1]\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig)","39c98535":"trace0 = go.Histogram(\n    x = dfy.tenure,\n    name = 'Left',\n    marker=dict(color='rgba(255, 0, 0, 0.5)'))\n\ntrace1 = go.Histogram(\n    x = dfn.tenure,\n    name = 'Stayed',\n    marker=dict(color='rgba(0, 153, 255, 0.5)'))\n\n\n\nlayout = go.Layout(title = 'Tenure of Customers',\n                   xaxis=dict(title='Tenure'),\n                   yaxis=dict( title='Count'),\n                   )\ndata = [trace0,trace1]\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig)","099627b8":"plt.figure(figsize = (15,15))\nplt.suptitle('Statistics of Left Customers',fontsize = 16)\n\nplt.subplot(2,2,1)\nsns.countplot(dfy.gender)\n\n\nplt.subplot(2,2,2)\nsns.countplot(dfy.SeniorCitizen)\n\nplt.subplot(2,2,3)\nsns.countplot(dfy.Partner)\n\nplt.subplot(2,2,4)\nsns.countplot(dfy.Dependents)\nplt.show()","fd247612":"plt.figure(figsize = (15,15))\nplt.suptitle('Statistics of Stayed Customers',fontsize = 16)\n\nplt.subplot(2,2,1)\nsns.countplot(dfn.gender)\n\n\nplt.subplot(2,2,2)\nsns.countplot(dfn.SeniorCitizen)\n\nplt.subplot(2,2,3)\nsns.countplot(dfn.Partner)\n\nplt.subplot(2,2,4)\nsns.countplot(dfn.Dependents)\nplt.show()","6c53c9f3":"plt.figure(figsize = (15,15))\nplt.suptitle('Statistics of Left Customers',fontsize = 16)\n\nplt.subplot(4,3,1)\nsns.countplot(dfy.PhoneService)\n\nplt.subplot(4,3,2)\nsns.countplot(dfy.MultipleLines)\n\nplt.subplot(4,3,3)\nsns.countplot(dfy.InternetService)\n\nplt.subplot(4,3,4)\nsns.countplot(dfy.OnlineSecurity)\n\nplt.subplot(4,3,5)\nsns.countplot(dfy.OnlineBackup)\n            \nplt.subplot(4,3,6)\nsns.countplot(dfy.DeviceProtection)\n\nplt.subplot(4,3,7)\nsns.countplot(dfy.TechSupport)\n\nplt.subplot(4,3,8)\nsns.countplot(dfy.StreamingTV)\n\nplt.subplot(4,3,9)\nsns.countplot(dfy.StreamingMovies)\n\nplt.subplot(4,3,10)\nsns.countplot(dfy.Contract)\n\nplt.subplot(4,3,11)\nsns.countplot(dfy.PaperlessBilling)\nplt.show()","2d044470":"plt.figure(figsize = (15,15))\nplt.suptitle('Statistics of Stayed Customers',fontsize = 16)\n\nplt.subplot(4,3,1)\nsns.countplot(dfn.PhoneService)\n\nplt.subplot(4,3,2)\nsns.countplot(dfn.MultipleLines)\n\nplt.subplot(4,3,3)\nsns.countplot(dfn.InternetService)\n\nplt.subplot(4,3,4)\nsns.countplot(dfn.OnlineSecurity)\n\nplt.subplot(4,3,5)\nsns.countplot(dfn.OnlineBackup)\n            \nplt.subplot(4,3,6)\nsns.countplot(dfn.DeviceProtection)\n\nplt.subplot(4,3,7)\nsns.countplot(dfn.TechSupport)\n\nplt.subplot(4,3,8)\nsns.countplot(dfn.StreamingTV)\n\nplt.subplot(4,3,9)\nsns.countplot(dfn.StreamingMovies)\n\nplt.subplot(4,3,10)\nsns.countplot(dfn.Contract)\n\nplt.subplot(4,3,11)\nsns.countplot(dfn.PaperlessBilling)\nplt.show()","ddd1d592":"df.drop(labels = 'customerID',axis = 1,inplace = True)#i dont need this feature","edef3a1f":"#Make features numeric\ndf.gender = [1 if i == 'Male' else 0 for i in df.gender]\n\ndf.InternetService = [2 if i == 'Fiber optic' else 1 if i == 'DSL' else 0 for i in df.InternetService]\n\ndf.Contract = [2 if i == 'Two year' else 1 if i == 'One year' else 0 for i in df.Contract]\n\ndf.PaymentMethod = [2 if i == 'Electronic check' else 1 if i == 'Mailed check' else 0 for i in df.PaymentMethod]\n\n#I will create a for loop because i will do similar processes\nl = ['Partner','Dependents','PhoneService','MultipleLines','OnlineSecurity','OnlineBackup',\n     'DeviceProtection','TechSupport','StreamingTV','StreamingMovies','PaperlessBilling','Churn']\n\nfor i in l:\n    df[i] = [1 if j == 'Yes' else 0 for j in df[i]]\n","ed3b151d":"#transforming datatype to float\n\ndf.TotalCharges.replace(' ','0.0',inplace = True)#if i dont replace spaces i can't make values float\n\ndf.TotalCharges = df.TotalCharges.astype(float)","8bcd303b":"df.info()","bae3611c":"#normalization\ndf = (df - np.min(df))\/(np.max(df) - np.min(df))","2dba190b":"df.head()","e0b23be5":"dfx = df.drop(['Churn'],axis = 1)\n\ndfy = df.loc[:,['Churn']]","b8282c74":"from sklearn.model_selection import train_test_split #spliting data to train data and test data\n\nx_train, x_test, y_train, y_test = train_test_split(dfx,dfy,test_size = 0.2,random_state=1)\n\nfrom sklearn.ensemble import RandomForestClassifier\n\nscore_list = [] #to determine best number of estimators parameter for Random Forest\n\nfor i in range(1,100):\n    rf = RandomForestClassifier(n_estimators = i,random_state = 40)\n    rf.fit(x_train,y_train.values.ravel())\n    score_list.append(rf.score(x_test,y_test))\n\nplt.figure(figsize = (15,9))\nplt.xlabel('Prediction Score')\nplt.ylabel('Number of Parameters')\nplt.plot(range(1,100),score_list)\nplt.show()\n\nprint('Best parameter is',np.argmax(score_list))","727ab6f3":"rf = RandomForestClassifier(n_estimators = 79,random_state = 40)\n\nrf.fit(x_train,y_train.values.ravel())\n\nprint('Final prediction score of algorithm is',rf.score(x_test,y_test))","5924c82e":"<h2 id=\"3\" style=\"text-align : center\">Visualization Account Informations<\/h2>","cf7e06b1":"<h2 id=\"4\" style=\"text-align : center\">Visualization Demographic Informations<\/h2>","1c14d100":"<h1 id=\"2\" style=\"text-align:center\">Data Overview<\/h1>","0e09e9cd":"<h1 id=\"7\" style=\"text-align : center\">Random Forest Classification<\/h1>","9d96c98f":"<p style=\"font-size : 55px;  text-align : center;  color : #4da6ff\">Churn Analysis<\/p>\n\n<h1 id=\"1\">Introduction <\/h1>\n   Welcome to my kernel.I studied on <a href=\" https:\/\/www.kaggle.com\/blastchar\/telco-customer-churn\">Telco Customer Churn dataset<\/a>.The dataset have  informations about customers.You can read overview of data if you wish.Churn analysis is basicly about the customers leave potential.I made visualizations to see features of data.Also i implement random forest classification algorithm.\n*  [Introduction](#1)\n* [Data Overview](#2)\n* [Visualization Account Informations](#3)\n* [Visualization Demographic Informations](#4)\n* [Visualization Service Informations](#5)\n* [Preparing Data for Random Forest](#6)\n* [Random Forest Classification](#7)","70643239":"**If you want to share anything please type as a comment.Thank you.**","644a955a":"I think debtless and newcomer customers are ready to leave company.","ff35c2d1":"<h1 id=\"6\" style=\"text-align : center\">Preparing Data for Random Forest<\/h1>","1859c41a":"<h2 id=\"5\" style=\"text-align : center\">Visualization Service Informations<\/h2>"}}