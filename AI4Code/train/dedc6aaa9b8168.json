{"cell_type":{"36369f67":"code","ec41ff44":"code","512edd41":"code","5150fb0b":"code","2cf3175b":"code","e3e8b111":"code","62942fab":"code","0640da6f":"code","e02cbf03":"code","dc2e9a06":"code","b2cac9bf":"code","e668eaa7":"code","fb3ff0cc":"code","4b7edd02":"code","d920d764":"code","fad745a6":"code","0fe9b348":"code","9c81178c":"code","17e17cfd":"code","a90a81b3":"code","8174eb40":"code","39cf2b59":"markdown"},"source":{"36369f67":"import pandas as pd\nimport numpy as np\nimport matplotlib as mpl\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.ensemble import RandomForestRegressor\n\nscores = pd.read_csv('..\/input\/predict-test-scores-of-students\/test_scores.csv')\nscores.head()","ec41ff44":"scores.info()","512edd41":"scores.describe()","5150fb0b":"print('Duplicates:', scores.duplicated().sum())\n","2cf3175b":"missing = 100 * scores.isnull().mean()\nmissing[missing.values > 0].sort_values(ascending=False)","e3e8b111":"# Numeric features\nnumeric_feats = scores.dtypes[scores.dtypes != \"object\"].index\n# Categorical features\ncat_feats = scores.dtypes[scores.dtypes == \"object\"].index\n\nprint('Numerical features length:', len(numeric_feats))\nprint('Categorical features length:', len(cat_feats))","62942fab":"\ncat = scores.select_dtypes(include='object')\nscores_cat = scores.loc[:,cat.columns]\nscores_cat.head(10)","0640da6f":"val = scores[\"teaching_method\"].unique()\nval","e02cbf03":"fig, axes = plt.subplots(1,4)\nscores['school_setting'].value_counts().plot(kind='bar', ax=axes[0], figsize=(16,6))\nscores['gender'].value_counts().plot(kind='bar', ax=axes[1])\nscores['teaching_method'].value_counts().plot(kind='bar', ax=axes[2])\nscores['school_type'].value_counts().plot(kind='bar', ax=axes[3])\n\nfig.suptitle('Glances From the Dataset')\naxes[0].set_title('Distribution of School Location')\naxes[1].set_title('Sex Distribution')\naxes[2].set_title('Standard VS. Experimental Studies')\naxes[3].set_title('Distribution of School Type')\nplt.tight_layout()\n","dc2e9a06":"scores_cat['lunch'] = scores_cat['lunch'].replace('Does not qualify', 0)\nscores_cat['lunch'] = scores_cat['lunch'].replace('Qualifies for reduced\/free lunch', 1)\n\n\nscores_cat['school_type'] = scores_cat['school_type'].replace('Non-public', 0)\nscores_cat['school_type'] = scores_cat['school_type'].replace('Public', 1)\n\n\nscores_cat['teaching_method'] = scores_cat['teaching_method'].replace('Standard', 0)\nscores_cat['teaching_method'] = scores_cat['teaching_method'].replace('Experimental', 1)\n\nscores_cat['school_setting'] = scores_cat['school_setting'].replace('Rural', 0)\nscores_cat['school_setting'] = scores_cat['school_setting'].replace('Suburban', 1)\nscores_cat['school_setting'] = scores_cat['school_setting'].replace('Urban', 2)\n\nscores_cat.head()","b2cac9bf":"num_4 =  scores_cat[['school_setting','school_type','teaching_method','lunch']]\nnum_4","e668eaa7":"num_3 =  scores[['n_student','pretest','posttest']]\nnum_3","fb3ff0cc":"data = pd.concat([num_4,num_3], axis = 1)\ndata","4b7edd02":"df=data.corr()\nsns.set(rc = {'figure.figsize':(15,8)})\nsns.heatmap(df, annot=True)","d920d764":"regplot = smf.ols('posttest ~ pretest + teaching_method', data=scores).fit()\nprint(regplot.summary())","fad745a6":"x = data[['pretest','teaching_method']]\ny =data['posttest']","0fe9b348":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=0)\n\nprint('the amount of values for test data are', x_test.shape[0])\nprint('the amount of values for train data are', x_train.shape[0])","9c81178c":"lre = LinearRegression()\nlre.fit(x_train, y_train)\n\nprint('The R-sqaured for the test data is', lre.score(x_test, y_test))","17e17cfd":"rcross = cross_val_score(lre, x,y, cv=4)\nprint('The average R-sqaured for all 4 samples of the data is', rcross.mean())","a90a81b3":"knn = KNeighborsRegressor(n_neighbors=5)\n\nknn.fit(x_train, y_train)\n\n# y_val_preds = knn.predict(X_val)\n\nprint(knn.score(x_test, y_test))","8174eb40":"rf = RandomForestRegressor(random_state=42)\n\nrf.fit(x_train, y_train)\n\n# y_val_preds = knn.predict(X_val)\nprint(rf.score(x_test, y_test))","39cf2b59":"###### "}}