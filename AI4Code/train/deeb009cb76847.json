{"cell_type":{"66362d04":"code","8f960e04":"code","6deb309d":"code","a869a583":"code","c86400be":"code","46890cac":"code","11b4f324":"code","f8a3097c":"code","967230da":"code","0488cf5f":"code","43808731":"code","1e4d3eaf":"code","09e81fbe":"code","fb21f822":"code","cc5475a2":"code","9fa8eab8":"code","1ae537d2":"code","0d117f35":"code","33376b3c":"code","d4edca54":"markdown","07231ecd":"markdown","4dd2ae99":"markdown","291a4f1a":"markdown","6a02e987":"markdown","3f7fedf7":"markdown","1219df94":"markdown","ae489b91":"markdown","d9ffb520":"markdown"},"source":{"66362d04":"import pandas as pd\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error","8f960e04":"df = pd.read_csv(\"..\/input\/insureme-historical-insurance-claims\/insureme_train.csv\")","6deb309d":"df","a869a583":"X = df.drop(columns=[\"claims\"])\ny = df[\"claims\"]","c86400be":"X","46890cac":"y","11b4f324":"model = LinearRegression().fit(X, y)","f8a3097c":"model.intercept_","967230da":"model.coef_","0488cf5f":"pd.DataFrame(model.coef_, index=X.columns, columns=[\"weight\"])","43808731":"y_hat = model.predict(X)","1e4d3eaf":"y_hat","09e81fbe":"mse = mean_squared_error(y_hat, y)","fb21f822":"mse","cc5475a2":"y_hat_naive = [y.mean()]*len(y)","9fa8eab8":"y_hat_naive","1ae537d2":"mse_naive = mean_squared_error(y_hat_naive, y)","0d117f35":"mse","33376b3c":"mse_naive","d4edca54":"## Let's compare the MSE of the linear model with the MSE of the naive approach:","07231ecd":"## We train a linear regression model to predict y from X:","4dd2ae99":"## Let's have a look at the parameters learned by the model (intercept and coefficients\/\"weights\"):","291a4f1a":"## We see that the trained model has improved the MSE with respect to a naive model (the error is lower with the linear model). It definitely fits the data better. However, as we'll see later on, this isn't the correct way of assessing a model's performance.","6a02e987":"## Let's read and look at the data:","3f7fedf7":"## Let's import useful functionality:","1219df94":"## We now use the model to make predictions on the data to measure the loss:\n(We call the predictions $\\hat{y}$ and the loss is the mean squared error - MSE)","ae489b91":"## To get an idea of what this means, we calculate the MSE of a naive model that always outputs the historical claims average:","d9ffb520":"## We split de data into the inputs (X) and the target output (y):"}}