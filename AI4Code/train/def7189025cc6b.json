{"cell_type":{"94e76928":"code","d58063ef":"code","878abf29":"code","364115a1":"code","e895fa48":"code","b04d503c":"code","3cfd853d":"code","32a15030":"code","65b1e87c":"code","d2f74261":"code","c03b879a":"code","2f4672ae":"code","2ddf3e07":"code","2245fe17":"code","dd4b0b5b":"markdown","06d43a33":"markdown","5e69167f":"markdown","23ed3bc3":"markdown","3c6a1250":"markdown","714c8b61":"markdown","af74d393":"markdown","ec00a24c":"markdown","fa4e1fb9":"markdown","0dfc9b62":"markdown","8b224085":"markdown","9ca44cf9":"markdown","4d009780":"markdown"},"source":{"94e76928":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib as mlp\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\ndf = pd.read_csv('..\/input\/BlackFriday.csv')","d58063ef":"#Finding different values per column\nfor var in list(df.columns):\n    print('# of different', var,\": \", len(df[var].unique()))  \nprint('Pero hay', len(df), 'rows')","878abf29":"#May I eliminate the NaN values of the columns? What columns have ones?\nfor var in df.columns:\n    if df[var].isnull().values.any() == True:\n        print(var, 'have Null values')","364115a1":"df.head()","e895fa48":"print(\"Mean value: \",df['Purchase'].mean(), \"\\nStandard deviation:\", df['Purchase'].std(),\n      \"\\nMaximun value \", df['Purchase'].max(), \"\\nMinimun value\" , df['Purchase'].min())\n","b04d503c":"plt.hist(df['Purchase'], bins = 700)\nplt.xlabel('Compras')\nplt.ylabel('Compras en $')\nplt.title('Number of purchases vs spended money ')\nplt.show()","3cfd853d":"#Creating a new array counting the number of times that a row repeats for one value of gender per each different User_ID \ncount_products = df.groupby('User_ID')['Gender'].count()","32a15030":"#Group by the features wanted and sum the values of each purchase\ndf_st = df.groupby(['User_ID','Gender','Age','Occupation','City_Category','Stay_In_Current_City_Years','Marital_Status'])['Purchase'].sum()\n\ndf_st = df_st.to_frame()\n\ndf_st = df_st.reset_index().set_index('User_ID')\n#we agregate the column of new data: Number of products buyed\ndf_st['Number_of_products_buyed'] = count_products\ndf_st.head()\n#We have our new dataframe!","65b1e87c":"#Describing our new column: \nprint(df_st['Number_of_products_buyed'].mean(),\": mean\\n\", df_st['Number_of_products_buyed'].std(),\": standard deviation\\n\",\n      df_st['Number_of_products_buyed'].max(), \": max value\\n\",\n      df_st['Number_of_products_buyed'].min(), \": min value\")","d2f74261":"print(\"The measures before were:\", df['Purchase'].mean(), \":mean, \", df['Purchase'].std(), \"desv. std.\")\nprint(\"Now the measures are:\", df_st['Purchase'].mean(), \":mean, \", df_st['Purchase'].std(), \"desv. std\")","c03b879a":"def automatise_plots(data1,data2,n,y_col='Purchase'): #n is the number of columns that i want to plot\n    col = list(data1.columns[0:n-1])\n    num = [x for x in range(1,n*2,2)]\n    zipped = dict(list(zip(col,num)))\n    fig = plt.figure(figsize = (14,24))\n    fig.subplots_adjust(hspace=0.6, wspace=0.15)\n    for key,value in zipped.items():\n        ax = fig.add_subplot(n-1,2,value)\n        ax.set_title(\"Grouped data\")\n        sns.barplot(x = key, y = y_col, data = data1)\n        ax_2 = fig.add_subplot(n-1,2,value+1)\n        ax_2.set_title(\"Not grouped data\")\n        sns.barplot(x = key, y = y_col, data = data2)","2f4672ae":"automatise_plots(df_st,df,7)","2ddf3e07":"plt.title('Age vs number of purchases divided by gender')\nsns.countplot(df_st['Age'],hue=df_st['Gender'], order = ['0-17', '18-25', '26-35', '36-45', '46-50', '51-55', '55+'])\n#From this graphic we have more clients from 26-35","2245fe17":"#Relation btw amount purchase and number of products purchased\nplt.title('Number of products vs Purchase')\nsns.scatterplot(x='Number_of_products_buyed', y = 'Purchase', data=df_st)","dd4b0b5b":"## By now, I will drop 'Product_Category_1', 'Product_Category_2','Product_Category_3','Product_ID' because we reduce the analysis for counted products per person","06d43a33":"It makes sense because for each ID there are multiple products now hence more value spended\n","5e69167f":"## Grouping by ID and count number of products","23ed3bc3":"Now that we have the DataFrame finish we can plot it. The main goal here is to if compare it is difference by grouping the data by customers and number of products buyed.\n","3c6a1250":"# We observe that there is a difference beetwen grouped and not grouped:\n\n-The male customers bought more than females customers in BlackFriday.\n\n-The customers beetwen 26-35 years old have bought the most, follow by 36-45 and 18-25.\n\n-There is an observation on the occupation 8 related to the confidence interval. \n\n-In compare with the other plot, customers from city category C bought more products for less prices. \n\n-People who have been on the city for 3 year spend the most (but there is not a significative diff)\n\n-The amount purchased by married and not are too similar","714c8b61":"#### DATA EXPLORATION","af74d393":"We have that there is only Nan values on Product_Category 2 & 3. It means that every product\nowns to a Product_Category 1 but not neccesarily to a Product_Category 2 and\/or 3.\nIn this case I prefer to not drop Nan values.","ec00a24c":"It is logical that there is a direct relation beetwen the number of products buyed and the ammount purchase.\nWe can see it on this graphic:","fa4e1fb9":"Now we have a new column of data. We should aggregate as index the column 'User_ID'","0dfc9b62":"## DATA VISUALIZATION","8b224085":"So, we can say there is 5891 different customers who purchased 3626 different products.\n\nBut, it is not the dataset recount the customers? I mean, if we plot the number of people married then the algorithm count N times the same customer with obviously the same gender and we will have duplicate values! So I decided to transform the data and group by customers and not by products.","9ca44cf9":"We can plot a brief descriptive plot for the purchase vs the amount bought","4d009780":"#### We can plot it by 3 different variables (1 binary):"}}