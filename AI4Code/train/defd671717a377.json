{"cell_type":{"0cc9bb03":"code","8cae1b04":"code","100bedda":"code","b4198e87":"code","00035ca4":"code","07eeffbe":"code","05a0c95b":"code","5ce8cf74":"code","fbdf7342":"code","07f3a57d":"code","d0c7cada":"code","510e206f":"code","ec166520":"markdown","0dd74f99":"markdown","344e1547":"markdown","e1ebb6a3":"markdown","03710615":"markdown","4f6771b7":"markdown","cda94c27":"markdown","bf1b6745":"markdown"},"source":{"0cc9bb03":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns; sns.set(rc={'figure.figsize':(16,9)})\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('..\/input\/olist_classified_public_dataset.csv')\ndf.head()","8cae1b04":"# select all votes columns\nvotes_columns = [s for s in df.columns if \"votes_\" in s]\n\n# drop them\ndf.drop(votes_columns, axis=1, inplace=True)\n\n# Lets also drop the first two columns\ndf.drop(['Unnamed: 0', 'id'], axis=1, inplace=True)","100bedda":"# Lets see the info of our dataset\ndf.info()","b4198e87":"# Looks like we may also drop the review_comment_title column, as all values are null\ndf.drop(['review_comment_title'], axis=1, inplace=True)","00035ca4":"# We also need to convert datetime features to the correct format\ndf.order_purchase_timestamp = pd.to_datetime(df.order_purchase_timestamp)\ndf.order_aproved_at = pd.to_datetime(df.order_aproved_at)\ndf.order_estimated_delivery_date = pd.to_datetime(df.order_estimated_delivery_date)\ndf.order_delivered_customer_date = pd.to_datetime(df.order_delivered_customer_date)\ndf.review_creation_date = pd.to_datetime(df.review_creation_date)\ndf.review_answer_timestamp = pd.to_datetime(df.review_answer_timestamp)\n\n# Lets see if it looks ok now\ndf.info()","07eeffbe":"# creating a purchase day feature\ndf['order_purchase_date'] = df.order_purchase_timestamp.dt.date\n\n# creating an aggregation\nsales_per_purchase_date = df.groupby('order_purchase_date', as_index=False).order_products_value.sum()\nax = sns.lineplot(x=\"order_purchase_date\", y=\"order_products_value\", data=sales_per_purchase_date)\nax.set_title('Sales per day')","05a0c95b":"# creating a purchase day feature\ndf['order_purchase_week'] = df.order_purchase_timestamp.dt.to_period('W').astype(str)\n\n# creating an aggregation\nsales_per_purchase_month = df.groupby('order_purchase_week', as_index=False).order_products_value.sum()\nax = sns.lineplot(x=\"order_purchase_week\", y=\"order_products_value\", data=sales_per_purchase_month)\nax.set_title('Sales per week')","5ce8cf74":"# creating an aggregation\navg_score_per_date = df.groupby('order_purchase_week', as_index=False).review_score.mean()\nax = sns.lineplot(x=\"order_purchase_week\", y=\"review_score\", data=avg_score_per_date)\nax.set_title('Average score per week')","fbdf7342":"# creating an aggregation\navg_score_per_category = df.groupby('product_category_name', as_index=False).agg({'review_score': ['count', 'mean']})\navg_score_per_category.columns = ['product_category_name', 'count', 'mean']\n\n# filtering to show only categories with more than 50 reviews\navg_score_per_category = avg_score_per_category[avg_score_per_category['count'] > 50]\navg_score_per_category = avg_score_per_category.sort_values(by='mean', ascending=False)\navg_score_per_category","07f3a57d":"ax = sns.barplot(x=\"mean\", y=\"product_category_name\", data=avg_score_per_category)\nax.set_title('Categories Review Score')","d0c7cada":"eletronicos = df[df.product_category_name == 'eletronicos']['most_voted_class'].value_counts().reset_index()\neletronicos.columns = ['class', 'qty']\neletronicos['percent_qty'] = eletronicos.qty \/ eletronicos.qty.sum() \nax = sns.barplot(x=\"percent_qty\", y=\"class\", data=eletronicos)\nax.set_title('Eletronicos Reviews Classes')","510e206f":"informatica_acessorios = df[df.product_category_name == 'informatica_acessorios']['most_voted_class'].value_counts().reset_index()\ninformatica_acessorios.columns = ['class', 'qty']\ninformatica_acessorios['percent_qty'] = informatica_acessorios.qty \/ informatica_acessorios.qty.sum() \nax = sns.barplot(x=\"percent_qty\", y=\"class\", data=informatica_acessorios)\nax.set_title('Informatica Acessorios Reviews Classes')","ec166520":"## How do classes relate to the categories and review scores?\nLets see how classes are distributed for the best and worse category that we just found earlier.","0dd74f99":"# Understanding the Olist Ecommerce Dataset\nThe dataset contains informations about orders, products purchased, customer and customer reviews from that orders. Lets take a look at the data to have an initial understanding of what it is and how it works.","344e1547":"## Seeing Features Through Time\nNow we may want to see how some of those features are related with the purchase date. ","e1ebb6a3":"## Which product category has lower scores? ","03710615":"## Initial Data Cleaning\n\nThe columns named  ```votes_```  contains information about how many votes each subcategory has received from each analyts that classified the dataset. The results are summarized in the ```most_voted_``` columns. For the purpose of this initial study I'm going to discard ```votes_```.","4f6771b7":"At the Informatica e Acessorios category, only ~45% of customers are satisfied. Other 35% complained about delivery issues and ~22% of customers found out that the product had quality issues.","cda94c27":"# Now it's your turn!\nThis was intended to be just an introduction to the dataset. Did you enjoy it? Have any questions about the data? We are available to help you!","bf1b6745":"At the eletronicos category, most customers (~85%) are satisfied with their purchase. Around 10% complained about delivery issues and 5% about quality issues."}}