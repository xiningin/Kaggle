{"cell_type":{"7af8e67d":"code","e4464cbf":"code","84e5898a":"code","66afa9aa":"code","c8a14af8":"code","70d338e0":"code","20307667":"code","36b8451b":"code","a48a87fa":"code","dc3376a4":"code","ef3d5d95":"code","07647d4a":"code","65e1135c":"code","a77dbf8e":"code","ce424b8c":"code","aa99b4e7":"code","3da0af43":"code","5bf4878c":"code","5f62f4b3":"markdown","97bc1ccf":"markdown","64adafc4":"markdown","66186fed":"markdown","e7b7509b":"markdown","f9d05996":"markdown","b3518214":"markdown","069822c2":"markdown","258ab884":"markdown","4f62f96e":"markdown","dfe162ec":"markdown","fcc8cdaf":"markdown","e71a5200":"markdown","dd35eba2":"markdown","658bebd1":"markdown","fb29deed":"markdown"},"source":{"7af8e67d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e4464cbf":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","84e5898a":"data=pd.read_csv(\"\/kaggle\/input\/kc-housesales-data\/kc_house_data.csv\")","66afa9aa":"data.head(5)","c8a14af8":"data.describe(include=\"all\")","70d338e0":"data.isna().sum()","20307667":"r=data.columns\nfor i in r:\n    print(\"'\",i,\"'has these many uniques\",data[i].nunique())","36b8451b":"data=data.drop([\"id\"],axis=1)","a48a87fa":"X=data.drop([\"price\"],axis=1)\ny=data[\"price\"]","dc3376a4":"ax = sns.scatterplot(x=\"price\", y=\"date\", data=data)","ef3d5d95":"X=X.drop([\"date\"],axis=1)","07647d4a":"X.dtypes","65e1135c":"ax = sns.heatmap(data.corr())","a77dbf8e":"from sklearn import metrics\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","ce424b8c":"xtrain,xtest,ytrain,ytest=train_test_split(X,y,test_size=0.35,random_state=0)","aa99b4e7":"lr=LinearRegression(fit_intercept=True)\nmodel=lr.fit(xtrain,ytrain)\nprediction=lr.predict(xtest)\nprint(\"Train_Accuracy\")\nprint(lr.score(xtrain,ytrain))\nprint(\"Test_Accuracy\")\nprint(lr.score(xtest,ytest))","3da0af43":"from sklearn.ensemble import RandomForestRegressor","5bf4878c":"regressor = RandomForestRegressor(n_estimators=100,max_features='auto',max_depth=100,min_samples_leaf=4,min_samples_split=10,random_state=0)\nmodel=regressor.fit(xtrain, ytrain)\ny_pred = regressor.predict(xtest)\nprint(\"Train_Accuracy\")\nprint(regressor.score(xtrain,ytrain))\nprint(\"Test_Accuracy\")\nprint(regressor.score(xtest,ytest))","5f62f4b3":"there are few ouliers otherwise uniformly distributed","97bc1ccf":"finding number of uniques","64adafc4":"# linear regression","66186fed":"# RandomForestRegressor","e7b7509b":"Viewing Data and To see if if null values if any","f9d05996":"let us separate features and target variable","b3518214":"No null values \n\nHurrah!!!","069822c2":"all features seems to be correlated","258ab884":"Still learning feature engineering and feature selection which can increase the efficiency more.\n\ndo give a suggestion.\n\nExploring Learning Improving....","4f62f96e":"Getting the dataset","dfe162ec":"# KC_Housesales_Model","fcc8cdaf":"we can drop id column as they are so unique","e71a5200":"here target variable=price\n\nand\n\nother are feature variables","dd35eba2":"Importing required packages","658bebd1":"# EDA","fb29deed":"2.159700e+04 == 21,597.00\n\n5.402966e+05 ==  540,296.6"}}