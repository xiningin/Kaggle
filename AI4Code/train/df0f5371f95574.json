{"cell_type":{"60d409e8":"code","39923a46":"code","0b324bfb":"code","85bef6fe":"code","0f649b85":"code","7e7c8c5c":"code","b7a6990c":"code","cd4c494e":"code","021721a2":"code","993fa01f":"code","26df3a16":"code","a3a8cf35":"code","0cc8588a":"code","6b93979a":"code","2f62cffb":"code","104157d0":"code","5b54d806":"code","5c2d64a6":"code","1022d3b0":"code","7d9d3cb5":"code","45163821":"code","792e254e":"code","c8fec0be":"code","c40bf653":"code","e3043b32":"code","5f3e88fc":"code","02c99850":"code","f4234103":"code","a83fe3ca":"code","7f2c4981":"code","53078cb9":"code","40de94b3":"code","6ebc841c":"code","0be4cfa1":"code","c7e6fd84":"code","341bb1ee":"code","bad0b504":"code","ee5a1e71":"code","b5267ab5":"code","11abe65c":"code","1da3a7f6":"code","640d0f02":"code","5a0944e2":"code","043a2bd2":"code","4067857f":"code","a3753960":"code","4643e980":"code","d6f8d53b":"code","18bf1285":"code","16780289":"code","ad9c74d8":"code","dba25a29":"code","d1cbe6ae":"code","6fabb47c":"code","0d66370a":"code","9848a295":"code","f8c0cde6":"code","af1063ff":"code","abd35dc0":"code","d7bf3c1b":"code","fec8c15b":"code","e768ed6e":"code","d782cb1f":"code","ef76ff24":"code","c61ce690":"code","638dc280":"code","3f18fcae":"code","eedb7e07":"code","705d4852":"code","49e0e318":"code","5fa1ab05":"code","6b881d75":"code","42543c01":"code","ec456ea5":"code","6443df1a":"code","642a2d9f":"code","c6ad6577":"code","eaa0f1ae":"code","0974e68c":"code","39ba0086":"code","502f3a21":"code","5bbf4948":"code","15a3e5bc":"code","31e5487e":"code","36b7282d":"code","588f1c22":"code","d4b7cec7":"code","6e7b3ea3":"code","d8b7a69d":"code","905311c3":"code","1092d5a0":"code","2e371b43":"code","bed992c7":"code","cd1ce233":"code","dc49f848":"code","d11b3577":"code","4e7f89d5":"code","884002a2":"code","0afdadde":"code","68b60c19":"code","6e792a45":"code","75033749":"code","1a7a60de":"code","18d40875":"code","9701ba9c":"code","e6d87320":"code","b3a846a2":"code","a6174596":"code","7fc3b46e":"code","e16aab7a":"code","23d00eb8":"code","6b41cc43":"code","7809fa4a":"code","96d099b0":"code","1c252597":"code","4b820f51":"code","d108feea":"markdown","4281166d":"markdown","147f976e":"markdown","1e2156e9":"markdown","9595cae6":"markdown","9bf9ba8f":"markdown","3fd5b7a9":"markdown","861374ad":"markdown","9952758b":"markdown","8b905bc0":"markdown","e85728d5":"markdown","07507b49":"markdown","2f34421a":"markdown","0df31b4d":"markdown","4af11e23":"markdown","b46cc184":"markdown","7f853e5f":"markdown","f293362a":"markdown","ce03af3c":"markdown","269e83f5":"markdown","d93e84f1":"markdown","83a28ba3":"markdown","53d70533":"markdown","e7295595":"markdown","537bf114":"markdown","0ca72f0f":"markdown","384fa089":"markdown","b7834336":"markdown","2af79b63":"markdown","d33dada8":"markdown","be39dd1c":"markdown","442b24d4":"markdown"},"source":{"60d409e8":"x = 10 #x\u306b10\u3092\u4ee3\u5165","39923a46":"print(x) #x\u3092\u51fa\u529b","0b324bfb":"x + 5 #x=10\u306b5\u3092\u52a0\u7b97","85bef6fe":"y = x + 10 #y\u306bx+5\u3092\u4ee3\u5165\nprint(y)","0f649b85":"print(12 % 10) #12\u00f710\u306e\u5270\u4f59\nprint(2 ** 3) #2\u306e3\u4e57","7e7c8c5c":"x = 2 * ((3 + 4) ** 2 + 5) #x=2\u00d7{(1+1)^2}\u306e\u8a08\u7b97 \nprint(x)","b7a6990c":"# 1.0 \uff0b \"12.2\"\n#float\u578b\u3000\u3068\u3000String\u578b \u306f\u30c7\u30fc\u30bf\u578b\u304c\u9055\u3046\u306e\u3067\u3053\u306e\u8a08\u7b97\u3092\u5b9f\u884c\u3059\u308b\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3046\u3002","cd4c494e":"# 1.0\u3092\u6587\u5b57\u5217\u306e\u578b\u306b\u5909\u63db\nstr(1.0) + \"12.2\"","021721a2":"# 12.2\u3092\u5c0f\u6570\u306e\u578b\u306b\u5909\u63db\n1.0 + float(\"12.2\")","993fa01f":"x = 10 #x\u306b10\u3092\u4ee3\u5165\ny = x\/2 #x\u3092\u6574\u6570\u578b\u3067\u3042\u308b2\u3067\u5272\u3063\u305f\u3042\u3068\u8a08\u7b97\u7d50\u679c\u3092y\u306b\u4ee3\u5165\nprint(x) #x\u306e\u5024\u3092\u51fa\u529b\u3000\u2192\u300010\u304c\u8868\u793a\u3055\u308c\u308b\nprint(y) #y\u306e\u5024\u3092\u51fa\u529b\u3000\u2192\u30005.0\u304c\u51fa\u529b\u3055\u308c\u308b\u3001float\u578b\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f","26df3a16":"print(type(y)) #type(x)\u3067\u5909\u6570x\u306e\u30c7\u30fc\u30bf\u578b\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002","a3a8cf35":"# '10' + 5\n#char\u578b\u306e\"10\"\u3068\u6574\u6570\u578b\u306e\uff15\u306f\u6f14\u7b97\u4e0d\u53ef\u3002\u30b7\u30f3\u30b0\u30eb\u30af\u30aa\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u304b\u3063\u3053\u3063\u305f\u6570\u5024\u306fchar\u578b\u3068\u307f\u306a\u3055\u308c\u308b\u3002","0cc8588a":"#1 \u4f5c\u6210\nsubject_name = [\"\u56fd\u8a9e\",\"\u7b97\u6570\",\"\u7406\u79d1\",\"\u793e\u4f1a\"] #\u30ea\u30b9\u30c8\u578b\u5909\u6570\u306e\u5ba3\u8a00\nprint(subject_name) #\u30ea\u30b9\u30c8\u5909\u6570\u3092\u5f15\u6570\u306b\u3057\u3066\u5404\u8981\u7d20\u5168\u3066\u3092\u51fa\u529b\nprint(type(subject_name)) #type()\u3067subject_name\u306e\u578b\u3092\u8abf\u3079\u308b\u3002\u30ea\u30b9\u30c8\u578b\u3067\u3042\u308b\u3068\u308f\u304b\u308b\u3002","6b93979a":"#2 \u53c2\u7167\nprint(subject_name[1]) #\u7b97\u6570\u3092\u8868\u793a\nprint(subject_name[0:2]) #\u56fd\u8a9e\uff0c\u7b97\u6570\u3092\u8868\u793a","2f62cffb":"#3 \u672b\u5c3e\u306b\u8ffd\u52a0\nsubject_name.append(\"\u8ffd\u52a0\") # subject_name\u306b\"\u8ffd\u52a0\"\u3092\u8ffd\u52a0\nprint(subject_name) # subject_name\u306e\u8981\u7d20\u3092\u8868\u793a","104157d0":"subject_name.extend([\"\u8ffd\u52a0A\", \"\u8ffd\u52a0B\"]) #subject_name\u306b2\u3064\u306e\u8981\u7d20\u3092\u8ffd\u52a0\nprint(subject_name) # subject_name\u306e\u8981\u7d20\u3092\u8868\u793a","5b54d806":"#3 \u9014\u4e2d\u306b\u8ffd\u52a0\nsubject_name.insert(2, \"\u5272\u308a\u8fbc\u307f\") #subject_name\u306e2\u756a\u76ee\u306b\"\u5272\u308a\u8fbc\u307f\"\u3092\u8ffd\u52a0\nprint(subject_name) #subject_name\u306e\u8981\u7d20\u3092\u8868\u793a","5c2d64a6":"#4 \u524a\u9664\nsubject_name.remove(\"\u5272\u308a\u8fbc\u307f\") #subject_name\u306e\u8981\u7d20\u304b\u3089\"\u5272\u308a\u8fbc\u307f\"\u3068\u3044\u3046\u8981\u7d20\u3092\u524a\u9664\nprint(subject_name) #subject_name\u306e\u8981\u7d20\u3092\u8868\u793a","1022d3b0":"subject_name[0] = \"Japanese\"\nprint(subject_name)","7d9d3cb5":"#1 \u4f5c\u6210\nsubject_dict = {\"\u56fd\u8a9e\":70, \"\u6570\u5b66\":80, \"\u7406\u79d1\":100} #\u8f9e\u66f8\u306f{}\u3067\u56f2\u3080\u3002\u305d\u306e\u4e2d\u8eab\u306f{\u30ad\u30fc:\u5024, \u30ad\u30fc:\u5024, ...}\u3068\u3059\u308b\u3002\nprint(subject_dict) #subject_dict\u306e\u30ad\u30fc\u3068\u305d\u306e\u5024\u3092\u51fa\u529b","45163821":"#2 \u53c2\u7167\nprint(subject_dict[\"\u6570\u5b66\"]) #\u30ad\u30fc\u306b\"\u6570\u5b66\"\u3092\u9078\u3093\u3067\u3001\u305d\u306e\u30ad\u30fc\u306e\u5024\u3067\u3042\u308b80\u3092\u51fa\u529b\u3059\u308b","792e254e":"#3 \u8ffd\u52a0\nsubject_dict[\"\u82f1\u8a9e\"] = 90 #\u8f9e\u66f8\u578b\u5909\u6570subject_dict\u306b\u30ad\u30fc\u304c\"\u82f1\u8a9e\"\u3067\u305d\u306e\u5024\u3067\u3042\u308b90\u3092\u8ffd\u52a0\u3059\u308b\u3002\nprint(subject_dict) #subject_dict\u306e\u30ad\u30fc\u3068\u305d\u306e\u5024\u3092\u51fa\u529b","c8fec0be":"#4 \u524a\u9664\nsubject_dict.pop(\"\u6570\u5b66\") #\u30ad\u30fc\u304c\u6570\u5b66\u3067\u305d\u306e\u5024\u3067\u3042\u308b80\u3092\u30bb\u30c3\u30c8\u3067\u524a\u9664\u3059\u308b \nprint(subject_dict) #subject_dict\u306e\u30ad\u30fc\u3068\u305d\u306e\u5024\u3092\u51fa\u529b","c40bf653":"#5 \u5909\u66f4\nsubject_dict[\"\u7406\u79d1\"] =  0 # \u7406\u79d1\u3068\u3044\u3046\u30ad\u30fc\u306b\u5bfe\u5fdc\u3059\u308b\u30d0\u30ea\u30e5\u30fc\u3092\uff10\u306b\u5909\u66f4\u3059\u308b\nprint(subject_dict) #subject_dict\u306e\u30ad\u30fc\u3068\u305d\u306e\u5024\u3092\u51fa\u529b","e3043b32":"#1 \u4f5c\u6210\u3068\u53c2\u7167\nsample_tuple = (10,20,\"Hello\") #\u30bf\u30d7\u30eb\u306f()\u3067\u8981\u7d20\u3092\u56f2\u3080.\u3000\u30bf\u30d7\u30eb\u306e\u8981\u7d20\u306b\u306f\u9806\u756a\u306b\u306f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u5272\u308a\u632f\u3089\u308c\u3066\u3044\u308b\u3002\u8981\u7d20\u306e\u30c7\u30fc\u30bf\u578b\u306f\u6df7\u5408\u3067\u826f\u3044.\nprint(sample_tuple) #sample_tuple\u306e\u8981\u7d20\u3092\u51fa\u529b\nprint(sample_tuple[1]) #sample_tuple\u306e2\u756a\u76ee\u306e\u8981\u7d20\u3092\u51fa\u529b \u2192 20","5f3e88fc":"sample_set = {10,100,\"hello\"} #\u96c6\u5408\u578b. {}\u3067\u56f2\u3080. \u91cd\u30ea\u30b9\u30c8\u3068\u9055\u3063\u3066\u8907\u306e\u8981\u7d20\u304c\u306a\u3044\u3053\u3068\u3068\u3001\u9806\u756a\u304c\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\nprint(sample_set) #\u96c6\u5408\u578b\u5909\u6570sample_set\u306e\u8981\u7d20\u3092\u51fa\u529b","02c99850":"for i in [1, 2, 3]: #\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u9806\u756a\u306b\u5909\u6570i\u306b\u4ee3\u5165\u3057\u3066\u3044\u304d\u305d\u306e\u5024\u3092\u8868\u793a\u3059\u308b\u3002\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u306e\u6570\u3060\u3051\u7e70\u308a\u8fd4\u3057\u3066\u3044\u308b\u3002\n    print(i)","f4234103":"count = 1 #\u5909\u6570count\u306e\u521d\u671f\u5024\u306f1\nwhile count <= 3:     #count\u304c3\u4ee5\u4e0b\u306e\u6642\uff0c\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3092\u884c\u3046\n    print(count) #count\u306e\u5024\u3092\u51fa\u529b\n    count = count + 1 #count\u306b\u305d\u308c\u81ea\u8eab\u306e\u5024\u306b1\u3092\u8db3\u3057\u305f\u5024\u3092\u4ee3\u5165","a83fe3ca":"score = 65\nif score >= 90:\n    print(\"\u512a\")\nelif 90 > score and score >= 70:\n    print(\"\u826f\")\nelif 70 > score and score >= 60:\n    print(\"\u53ef\")\nelse:\n    print(\"\u4e0d\u53ef\")","7f2c4981":"count = 0 # count\u306e\u521d\u671f\u5024\u306b0\u3092\u4ee3\u5165\nwhile True: # \u300cwhile \u6761\u4ef6\u5f0f\u300d\u306e\u6761\u4ef6\u5f0f\u304c\u771f\u306e\u6642\u30eb\u30fc\u30d7\u3055\u308c\u308b\u306e\u3067\u3001\u7121\u9650\u30eb\u30fc\u30d7\u3092\u767a\u751f\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\n    count = count + 1  # count\u306b\u305d\u308c\u81ea\u8eab\u306e\u5024\u306b1\u3092\u8db3\u3057\u305f\u5024\u3092\u4ee3\u5165\n    if count == 5: # count\u306b5\u304c\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u6642\u3001if\u6587\u306e\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u308b\n        break # break\u306fwhile\u306b\u5bfe\u3057\u3066\u306a\u306e\u3067\u3001\u7121\u9650\u30eb\u30fc\u30d7\u3092\u767a\u751f\u3057\u3066\u3044\u308bwhile\u3092\u629c\u3051\u51fa\u3059\u3002\n    print(count) # if\u6587\u306e\u6761\u4ef6\u304c\u507d\u306e\u6642\u3001if\u6587\u306e\u51e6\u7406\u304c\u7121\u8996\u3055\u308c\u308b\u306e\u3067\u3053\u3061\u3089\u3092\u5b9f\u884c","53078cb9":"a = (2**2 + 3**2)**(1\/2) # (2^2+3^2)^(1\/2)\u304c\u8a08\u7b97\nb = (4**2 + 5**2)**(1\/2) # (4^2+5^2)^(1\/2)\u304c\u8a08\u7b97\nc = (6**2 + 7**2)**(1\/2) # (6^2+7^2)^(1\/2)\u304c\u8a08\u7b97\nprint(a)\nprint(b)\nprint(c)","40de94b3":"def calc_hypotenuse(x,y): # calc_hypotenuse()\u95a2\u6570\u3092\u5b9a\u7fa9\n    ans = (x**2 + y**2)**(1\/2) # \u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3068(x^2+y^2)^(1\/2)\u304c\u8a08\u7b97\u3055\u308c\u5909\u6570ans\u306b\u4ee3\u5165\u3055\u308c\u308b\n    return ans # ans\u306e\u5024\u304c\u95a2\u6570\u306e\u623b\u308a\u5024\u3068\u306a\u308b\u3002","6ebc841c":"a = calc_hypotenuse(2,3) # calc_hypotenuse()\u306e\u5f15\u6570\u306b2\u30683\u304c\u5165\u308a\u3001\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3002\nb = calc_hypotenuse(4,5) # calc_hypotenuse()\u306e\u5f15\u6570\u306b4\u30685\u304c\u5165\u308a\u3001\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\nc = calc_hypotenuse(6,7) # calc_hypotenuse()\u306e\u5f15\u6570\u306b6\u30687\u304c\u5165\u308a\u3001\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\nprint(a)\nprint(b)\nprint(c)","0be4cfa1":"def print_func(): # \u95a2\u6570\u306e\u5b9a\u7fa9\n    print(\"\u95a2\u6570\u304c\u547c\u3070\u308c\u307e\u3057\u305f\")\nprint_func() # \u95a2\u6570\u3092\u547c\u3073\u51fa\u3059","c7e6fd84":"# \u7df4\u7fd2\uff11\ndef BMI_function(height, weight): # BMI_function(height, weight)\u306e\u5b9a\u7fa9\n    ans = weight \/ (height * height) # BMI\u306e\u8a08\u7b97\n    return ans # ans\u304c\u95a2\u6570\u306e\u623b\u308a\u5024","341bb1ee":"# \u7df4\u7fd2\uff12\ndef check_obesity(height, weight):\n    \n    #\u30dd\u30a4\u30f3\u30c8\n    bmi = BMI_function(height, weight)\n    \n    if bmi <18: #BMI\u306e\u5024\u304c18\u3088\u308a\u4e0b\u3067\u3042\u308c\u3070if\u6587\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3002\n        return \"\u75e9\u305b\u6c17\u5473\"\n    elif bmi >= 18 and bmi < 25: #elif\u3067\u3055\u3089\u306b\u6761\u4ef6\u5f0f\u3068\u6bd4\u8f03\u3059\u308b\n        return \"\u666e\u901a\"\n    else: #\u5168\u3066\u507d\u3067\u3042\u308c\u3070\u4ee5\u4e0b\u3092\u5b9f\u884c\n        return \"\u592a\u308a\u6c17\u5473\"","bad0b504":"# \u7df4\u7fd2\uff13\nTanaka = {\"height\":2, \"weight\":80}\ndegree_obesity = check_obesity(Tanaka[\"height\"], Tanaka[\"weight\"])\nprint(degree_obesity) # \u80a5\u6e80\u5ea6\u3092\u51fa\u529b\n\n# \u4ee5\u4e0b\u306f\u53c2\u8003\uff1aBMI\u306e\u5024\u3092\u51fa\u529b\u3059\u308b\n#BMI_function()\u3092\u547c\u3073\u51fa\u3057\u3001\u95a2\u6570\u306e\u623b\u308a\u5024\u3092\u5909\u6570BMI\u306b\u4ee3\u5165\u3055\u308c\u308b\u3002\nBMI = BMI_function(Tanaka[\"height\"], Tanaka[\"weight\"])\nprint(BMI) # BMI\u5024\u3092\u51fa\u529b ","ee5a1e71":"# \u30ea\u30b9\u30c8\u3092\u4f7f\u3063\u3066\uff11\u301c\uff11\uff10\u307e\u3067\u306e\u6574\u6570\u3092\u6a19\u6e96\u51fa\u529b\u3059\u308b\nfor i in [1,2,3,4,5,6,7,8,9,10]:\n    print(i)","b5267ab5":"# range\u3092\u4f7f\u3063\u3066\u6570\u5217\u3092\u4f5c\u6210\u3059\u308b\nfor i in range(2,5):\n    print(i)","11abe65c":"# range\u3092\u4f7f\u3063\u3066\u6570\u5217\u3092\u4f5c\u6210\u3059\u308b\nfor i in range(2,5,2):\n    print(i)","1da3a7f6":"# \u4ee5\u524d\u5b9f\u88c5\u3057\u305fcalc_hypotenuse\u3092\u7528\u3044\u3066\u3001\u5e95\u8fba\u304c5\u3001\u9ad8\u3055\u304c12\u306e\u4e09\u89d2\u5f62\u306e\u659c\u8fba\u306e\u9577\u3055\u3092\u6c42\u3081\u308b\nans = calc_hypotenuse(5,12)\nprint(ans)","640d0f02":"#  \"\u659c\u8fba\u306e\u9577\u3055\u306f13.00\" \u3068\u3044\u3046\u5f62\u3067\u6a19\u6e96\u51fa\u529b\u3057\u305f\u3044\nprint(\"\u659c\u8fba\u306e\u9577\u3055\u306f{:.2f}\".format(ans)) # format\u95a2\u6570\u3092\u7528\u3044\u305f\u65b9\u6cd5","5a0944e2":"print(f\"\u659c\u8fba\u306e\u9577\u3055\u306f{ans:.2f}\") # fstring\u3092\u7528\u3044\u305f\u65b9\u6cd5","043a2bd2":"name = \"yone\"\nage = 25\n# \u8907\u6570\u306e\u5024\u3092\u6587\u5b57\u5217\u306b\u57cb\u3081\u8fbc\u3080\u3053\u3068\u3082\u53ef\u80fd\nprint(\"\u79c1\u306e\u540d\u524d\u306f{}\u3067\u3059\u3002\u5e74\u9f62\u306f{:d}\u6b73\u3067\u3059\u3002\".format(name, age)) # format()\nprint(f\"\u79c1\u306e\u540d\u524d\u306f{name}\u3067\u3059\u3002\u5e74\u9f62\u306f{age:d}\u6b73\u3067\u3059\u3002\") # fstring","4067857f":"# format()\u3092\u7528\u3044\u305f\u5834\u5408\nbase = 2\nfor i in range(1,10):\n    print(\"{:d} \u00d7 {:d} = {:d}\".format(base, i, base*i))","a3753960":"# fstring\u3092\u7528\u3044\u305f\u5834\u5408\nbase = 2\nfor i in range(1,10):\n    print(f\"{base} \u00d7 {i} = {base*i}\")","4643e980":"class ModelA:                                # ModelA \u30af\u30e9\u30b9\u306e\u5ba3\u8a00\n    \n    def __init__(self):                      # \u547c\u3073\u51fa\u3059\u969b\u306b\u547c\u3070\u308c\u308b\u95a2\u6570\n        self.gas = 100                       # \u8eca\u306e\u6301\u3064\u8981\u7d20\u3092\u5b9a\u7fa9\n    \n    def run(self):                           # \u8eca\u304c\u8d70\u308b\u969b\u306e\u51e6\u7406\u3092\u95a2\u6570\u3067\u8868\u73fe\n        self.gas = self.gas - 5              # gas\u306f\u6e1b\u308b\n        print(\"10km\u8d70\u308a\u307e\u3057\u305f\")\n    \n    def charge(self, supply_amount): \n        self.gas = self.gas + supply_amount #\u30ac\u30bd\u30ea\u30f3\u306e\u88dc\u7d66\n        print(\"\u73fe\u5728\u306e\u30ac\u30bd\u30ea\u30f3\u306f{}\u30ea\u30c3\u30c8\u30eb\u3067\u3059\".format(self.gas)) #\u73fe\u5728\u306e\u30ac\u30bd\u30ea\u30f3\u91cf\u3092\u8868\u793a","d6f8d53b":"model_A = ModelA() # model_A \u3068\u3044\u3046\u540d\u524d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210","18bf1285":"model_A.run() # model_A\u306erun\u95a2\u6570\u3092\u5b9f\u884c","16780289":"print(model_A.gas)      # model_A\u306egas\u6b8b\u91cf\u3092\u78ba\u8a8d","ad9c74d8":"# \u8907\u6570\u306e\u5b9f\u4f53\u3092\u4f5c\u3063\u3066\u3082\u554f\u984c\u306a\u3044\nmodel_A_2 = ModelA()\nmodel_A_3 = ModelA()","dba25a29":"class ModelA_2: \n    \n    def __init__(self, gas):  # __init__\u306e\u5f15\u6570\u306bgas\u3092\u8ffd\u52a0\n        self.gas = gas # gas\u306e\u5024\u304c self.gas\u306e\u521d\u671f\u5024\u306b\u306a\u308b\n            \n    def run(self): \n        self.gas = self.gas - 5 \n        print(\"10km\u8d70\u308a\u307e\u3057\u305f\")\n    \n    def charge(self, supply_amount): \n        self.gas = self.gas + supply_amount \n        print(\"\u73fe\u5728\u306e\u30ac\u30bd\u30ea\u30f3\u306f{}\u30ea\u30c3\u30c8\u30eb\u3067\u3059\".format(self.gas)) ","d1cbe6ae":"model_A_2 = ModelA_2(200)\nmodel_A_2.gas","6fabb47c":"class Human: # Human\u30af\u30e9\u30b9\u3092\u5ba3\u8a00\n    def __init__(self): # Human\u30af\u30e9\u30b9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u304d\u306b\u5b9f\u884c\u3055\u308c\u308b\n        print(\"initialized\")\n        self.health = 100 # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3082\u3064health\u3092100\u306b\u521d\u671f\u5316\n        self.time = 10 # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3082\u3064time\u309210\u306b\u521d\u671f\u5316\n        self.achieve = 0 # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3082\u3064\u30e1\u30bd\u30c3\u30c9\u30920\u306b\u521d\u671f\u5316\n    \n    def work(self):\n        print(\"work\")\n        self.achieve += 1\n        self.time -= 1\n        self.health -= 50\n        \n    def rest(self):\n        print(\"rest\") \n        self.time -= 3\n        self.health += 50","0d66370a":"#\u7df4\u7fd2\uff14\nhuman1 = Human() # human1\u3068\u3044\u3046\u540d\u524d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\nprint(\"health: {}\".format(human1.health))\nprint(\"time: {}\".format(human1.time))\nprint(\"achieve: {}\".format(human1.achieve))","9848a295":"human1.work()\nprint(\"health: {}\".format(human1.health))\nprint(\"time: {}\".format(human1.time))\nprint(\"achieve: {}\".format(human1.achieve))","f8c0cde6":"human1.rest()\nprint(\"health: {}\".format(human1.health))\nprint(\"time: {}\".format(human1.time))\nprint(\"achieve: {}\".format(human1.achieve))","af1063ff":"class ModelB(ModelA): # ModelA\u30af\u30e9\u30b9\u3092\u7d99\u627f\n    def turbo(self): #\u30bf\u30fc\u30dc\u3092\u518d\u73fe\u3059\u308b\u95a2\u6570\n        self.gas = self.gas-10 #\u30ac\u30bd\u30ea\u30f3\u309210\u6e1b\u3089\u3059\u4ee3\u308f\u308a\u306b\u30bf\u30fc\u30dc\u3092\u767a\u52d5\n        print(\"\u30bf\u30fc\u30dc\u6a5f\u80fd\u3092\u767a\u52d5\u3057\u307e\u3059\uff01\")","abd35dc0":"model_B = ModelB() #model_B\u3068\u3044\u3046\u540d\u524d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\nmodel_B.run() # ModelA\u306erun()\u3092\u53d7\u3051\u7d99\u3044\u3067\u3044\u308b\nmodel_B.turbo()\nprint(model_B.gas)","d7bf3c1b":"#\u7df4\u7fd2\uff15\nclass Engineer(Human): # Human\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u65b0\u3057\u304fEngineer\u30af\u30e9\u30b9\u3092\u5ba3\u8a00\n    def work_hard(self):\n        print(\"work hard\")\n        self.achieve += 5\n        self.health -= 150\n        self.time -= 3","fec8c15b":"engineer = Engineer() \nengineer.rest()\nengineer.rest()\nengineer.work_hard() \nprint(\"health: {}\".format(engineer.health))\nprint(\"time: {}\".format(engineer.time))\nprint(\"achieve: {}\".format(engineer.achieve))","e768ed6e":"#time\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\nimport time\n#1\u301c3\u307e\u3067\u7e70\u308a\u8fd4\u3059\u3002\nfor count in range(1,4): \n    #1\u79d2\u6b62\u307e\u308b\n    time.sleep(1) \n     #\u7d4c\u904e\u79d2\u6570\u3092\u51fa\u529b\n    print(\"{}\u79d2\u7d4c\u904e\".format(count))","d782cb1f":"import time \n#1\u301c30\u307e\u3067\u7e70\u308a\u8fd4\u3059\nfor count in range(1,31): \n    #\u30ab\u30a6\u30f3\u30c8\u304c\uff13\u306e\u500d\u6570\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n    if count%3==0: \n        print(\"\u6700\u9ad8!\")\n    else :\n        print(\"{}\u79d2\u7d4c\u904e\".format(count)) \n    time.sleep(1)","ef76ff24":"#Numpy\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\nimport numpy as np ","c61ce690":"#1\u6b21\u5143\u306e\u914d\u5217\u751f\u6210\n\n#\u6b63\na = np.array([1, 2, 3]) \n#\u8aa4\uff1a\u30a8\u30e9\u30fc\u3092\u751f\u3080\n#a = np.array(1, 2, 3) ","638dc280":"#\uff12\u6b21\u5143\u306e\u914d\u5217\u751f\u6210\n\n# \u6b63\na = np.array([[1, 2, 3],\n              [4, 5, 6]]) \n\n# \u8aa4\uff1a\u30a8\u30e9\u30fc\u3092\u751f\u3080\n#a = np.array([1, 2, 3],\n #                 [4, 5, 6]) ","3f18fcae":"# \u30bc\u30ed\u884c\u5217\nzeros2x3 = np.zeros((2, 3))\nzeros2x3","eedb7e07":"# \u30bc\u30ed\u884c\u5217\nzeros2x3 = np.zeros((2, 3))\nzeros2x3","705d4852":"# 0\u304b\u3089\u59cb\u307e\u308b\u9023\u7d9a\u3059\u308b10\u306e\u6574\u6570\u306e\u914d\u5217\nprint(np.arange(10))\n\n#np.arange(\u59cb, \u7d42, \u9593\u9694)\nprint(np.arange(10, 30, 5))\nprint(np.arange(0, 2, 0.3))\n\n#\u7b49\u9593\u9694\u306a\u6570\u5217\u3092\u751f\u6210(\u59cb, \u7d42, \u500b\u6570)\nprint(np.linspace(0, np.pi, 10))","49e0e318":"#6\u8981\u7d20\u306e\u914d\u5217\u3092\u751f\u6210\narray = np.array([1, 2, 3, 4, 5, 6])\n\n#array\u30922x3\u884c\u5217\u306b\u6574\u5f62\narr2x3 = array.reshape(2, 3)\n\n#! \u5272\u308a\u5207\u308c\u306a\u3044\u6570\u5b57\u3067\u306freshape\u4e0d\u53ef\n#arr4x2 = array.reshape(2, 4)","5fa1ab05":"#\u884c\u5217\u30921\u6b21\u5143\u306b\"\u307b\u3069\u304f \"\na = arr2x3.ravel() ","6b881d75":"#\u8ee2\u7f6e\u884c\u5217\na2x3_T = arr2x3.T\n#transpose\u95a2\u6570\u3067\u3082\u540c\u69d8\narr2x3_transpose=arr2x3.transpose()","42543c01":"arr2x3 = array.reshape(2, 3)\narr2x3","ec456ea5":"arr2x3.reshape(3,2)","6443df1a":"arr2x3.transpose()","642a2d9f":"# 0 \u301c \uff114\u304c\u5165\u3063\u305f\u914d\u5217\u3092\u4f5c\u6210\na = np.arange(15)\nprint(a)\n\n# a\u3092\uff13\u884c\uff15\u5217\u306b\u6574\u5f62\nb = a.reshape(3,5)\nprint(b)\n\nprint(a.shape)\nprint(b.shape)","c6ad6577":"a = np.array([0, 1, 2, 3, 9])\nb = np.array([2, 4, 6, 0 , np.inf])\n#\u8db3\u3057\u7b97(+, np.add(a, b))\na+b\na+3\n#\u5f15\u304d\u7b97(-, np.subtract(a, b))\na-b\na-3","eaa0f1ae":"#\u639b\u3051\u7b97(*, np.multiply(a, b) )\nprint(f\"a * b: {a * b}\")\n#\u7d2f\u4e57(**, np.power(a, b) )\nprint(f\"a ** b: {a ** b}\")\n#\u5e73\u65b9\u6839(np.sqrt(a), np.power(a, 1\/2) )\nprint(f\"np.sqrt(a): {np.sqrt(a)}\")","0974e68c":"#\u5272\u308a\u7b97(\/, np.divide(a, b) )\nprint(f\"a \/ b: {a \/ b}\")\n#\u5546\u306e\u6574\u6570\u90e8\u5206(\/\/)\nprint(f\"100 \/\/ b: {a \/\/ b}\")\n#\u5270\u4f59(%,np.mod() )\nprint(f\"100%b: {100 % b}\")","39ba0086":"A = np.array([[1, 2], [3, 4]])\nB = np.array([[5, 6], [7, 8]])\n\n#\u540c\u3058\u8981\u7d20\u756a\u53f7\u540c\u58eb\u306e\u639b\u3051\u7b97\nprint(A * B)\n#\u884c\u5217\u306e\u639b\u3051\u7b97 (np.dot(A,B)\u3067\u3082\u53ef )\nprint(A.dot(B))","502f3a21":"#\u7d71\u8a08\u7684\u306a\u8a08\u7b97\u3092\u3057\u3088\u3046\na = np.array([1,2,3,4,5])\nprint(a.mean()) # \u5e73\u5747\u5024","5bbf4948":"print(f\"a: {a}\")\nprint(f\"sum: {a.sum()}\") # \u548c\nprint(f\"min: {a.min()}\") #\u6700\u5c0f\u5024\nprint(f\"max: {a.max()}\") #\u6700\u5927\u5024\nprint(f\"a\u306e\u5e73\u5747\u306f{a.mean()},\u6a19\u6e96\u504f\u5dee\u306f{a.std():.3f}\u3067\u3059.\")","15a3e5bc":"b=np.arange(1,13,2).reshape(2,3)\n#\u5217\u3054\u3068\u306e\u548c\nprint(b.sum(axis=0))\n#\u884c\u4e2d\u306e\u6700\u5c0f\u5024\nprint(b.min(axis=1))\n#\u5404\u884c\u307e\u3067\u306e\u7d2f\u7a4d\u548c\nprint(b.cumsum(axis=0))","31e5487e":"#\u4e09\u89d2\u95a2\u6570\nnp.sin(np.pi)\nnp.cos(np.pi)\nnp.tan(np.pi) \n\n#\u9006\u4e09\u89d2\u95a2\u6570\nnp.arcsin(1)\nnp.arccos(1)\nnp.arctan(1) \n\n#\u6307\u6570\u95a2\u6570\nnp.exp(0)\n\n#\u5bfe\u6570\u95a2\u6570\nnp.log(1)\nnp.log10(1)\n\n#\u7d76\u5bfe\u5024\nnp.abs(1);\n\n#\u5186\u5468\u7387\nnp.pi","36b7282d":"# 1\u301c10\u307e\u3067\u306e\u914d\u5217\u3092\u751f\u6210\u3057\u5909\u6570a\u306b\u4ee3\u5165\na=np.arange(1,11)\na","588f1c22":"#a\u306e\u4e00\u6b21\u5143\u914d\u5217\u30922\u884c5\u5217\u884c\u5217\u306b\u5909\u63db\nb=a.reshape(2,5)\nb","d4b7cec7":"#1\u301c5\u306e\u4e00\u6b21\u5143\u914d\u5217\u3092\u751f\u6210\nb0=np.arange(1,6)\n# 6\u301c10\u306e\u4e00\u6b21\u5143\u914d\u5217\u3092\u751f\u6210\nb1=np.arange(6,11)\n#\u914d\u5217\u306e\u8981\u7d20\u540c\u58eb\u306e\u6f14\u7b97\nprint(b0+b1)\nprint(b0-b1)\n#\u8981\u7d20\u9593\u306e\u5272\u308a\u7b97\u306e\u4f59\u308a\u3092\u51fa\u3059\nprint(b0%b1)\n#\u8981\u7d20\u9593\u306e\u5272\u308a\u7b97\u306e\u5546\u3092\u51fa\u3059\nprint(b0\/b1)","6e7b3ea3":"#\u9069\u5f53\u306a\u914d\u5217\u3092\u7528\u610f\u3059\u308b\na = np.array(list(\"\u3042\u3044\u3046\u3048\u304a\"))\n#\u30b9\u30e9\u30a4\u30b9\na[[0,2]]#[\"\u3042\",\"\u3046\"]","d8b7a69d":"print(a[1:4])#[\"\u3044\",\"\u3046\",\"\u3048\"]\nprint(a[0:4:2])","905311c3":"b=np.array([[1,2,3],[4,5,6]])","1092d5a0":"b[1,2]#1\u884c2\u5217\u76ee\u3092\u53d6\u308a\u51fa\u3059","2e371b43":"b[:,2]#2\u5217\u76ee\u3092\u53d6\u308a\u51fa\u3059","bed992c7":"b[:,[0,2]]#0\u5217\u76ee\u30682\u5217\u76ee","cd1ce233":"# 0\u301c24\u306e\u4e00\u6b21\u5143\u914d\u5217\u3092\u751f\u6210\u3057\u30015\u6b21\u6b63\u65b9\u884c\u5217\u306b\u5909\u63db\nb = np.arange(25).reshape(5, 5)\n\n#3\u5217\u76ee\u306e\u8981\u7d20\u3059\u3079\u3066\nprint(b[:,3] )\n#2\u884c3\u5217\u76ee\u306e\u8981\u7d20\nprint(b[2,3] )","dc49f848":"#(1, 3)\u884c\u3068(1, 3)\u5217\u304c\u4ea4\u308f\u308b\n#2x2=4\u901a\u308a\u306e\u7d44\u307f\u5408\u308f\u305b\nb[1:4:2, 1:4:2]  ","d11b3577":"#\u5bfe\u89d2\u6210\u5206\u306e\u8868\u793a(\u884c\u5217\u756a\u53f7\u304c\u540c\u3058\u6210\u5206)\nb[range(5),range(5)]\n\n#\u6700\u7d42\u8981\u7d20\u306b\u5b58\u5728\u3059\u308b\u914d\u5217\u3092\u53d6\u308a\u51fa\u3059\n#\u3053\u306e\u4f8b\u306fb[-1,:]\u3068\u7b49\u4fa1\nb[-1] ","4e7f89d5":"#4x5\u306e\u914d\u5217\u306e\u751f\u6210\na = np.arange(20).reshape((4,5))","884002a2":"#a\u306e\u8981\u7d20\u304c3\u306e\u500d\u6570\u3067\u3042\u308c\u30701, \u305d\u3046\u3067\u306a\u3051\u308c\u30700\u3092\u304b\u3048\u3059\nb = np.where((a>0)&(a%3 == 0), 1, 0)\nb","0afdadde":"array_1 = np.arange(1, 26).reshape(5, 5)\nprint(array_1)","68b60c19":"#(1,2)\u884c, (1,2)\u5217\u306e\u4ea4\u70b9\u3092\u51fa\u529b\nprint(array_1[1:3,1:3])","6e792a45":"#\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\nimport pandas as pd\nimport numpy as np","75033749":"#\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u4f5c\u6210\n#\u624b\u52d5\u3067\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u6210\ndf = pd.DataFrame({'Age':[12,14,12,18],\n                   #'\u8868\u306e\u9805\u76ee':[\u8868\u306e\u8981\u7d20]\n                   'Gender':['M','M','F','F'],\n                   'Height':[150,160,150,175], \n                   'Weight': [35,50,36,60]})\ndf","1a7a60de":"#df\u306e\u6982\u8981\u3092\u51fa\u3059\ndf.info()","18d40875":"# df\u306eindex\u524d\u304b\u3089\u4e8c\u3064\u3092\u8868\u793a\u3059\u308b\ndf.head(2)","9701ba9c":"# df\u306eindex\u5f8c\u308d\u304b\u3089\u4e8c\u3064\u3092\u8868\u793a\u3059\u308b\ndf.tail(2)","e6d87320":"#\u5168\u3066\u306e\u5217\u306e\u540d\u524d\u3092\u51fa\u3059\ndf.columns","b3a846a2":"#\u5168\u3066\u306eindex\u3092\u51fa\u3059\ndf.index","a6174596":"#\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\nimport numpy as np\nimport pandas as pd","7fc3b46e":"import matplotlib.pyplot as plt\n%matplotlib inline","e16aab7a":"# \u30b0\u30e9\u30d5\u306e\u30b5\u30a4\u30ba\u306e\u6307\u5b9a\nplt.figure(figsize=(4,4))\n# \u5f15\u6570\u306b\u6307\u5b9a\u3055\u308c\u305f\u5024\u306e\u30d7\u30ed\u30c3\u30c8\u3002\u5f15\u6570\u3068\u3057\u3066\u3001\u63cf\u753b\u3059\u308b\u70b9\u306ex\u5ea7\u6a19, y\u5ea7\u6a19\u306e\u8a2d\u5b9a\u3001\u51e1\u4f8b\u306b\u8868\u793a\u3059\u308b\u6587\u5b57\u5217\u306e\u8a2d\u5b9a\nplt.plot([0,2,4,6,8], [0,6,12,24,48],  label=\"graph\")\n# x, y\u8ef8\u306e\u30e9\u30d9\u30eb\u306e\u8a2d\u5b9a\nplt.xlabel(\"x axis\")\nplt.ylabel(\"y axis\")\n# \u30bf\u30a4\u30c8\u30eb\u306e\u8a2d\u5b9a\nplt.title(\"title\")\n#\u3000\u51e1\u4f8b\u306e\u8868\u793a\nplt.legend()\n# \u30b0\u30e9\u30d5\u306e\u51fa\u529b\nplt.show()","23d00eb8":"# 0\u304b\u308910\u307e\u3067\u300120\u500b\u306e\u7b49\u5dee\u6570\u5217\u3092\u751f\u6210\nx=np.linspace(0,10,20)\ny=x**2\nz=(x-1)**3\nw=((x-2)*(x-4))**2\n# \u6a2a\u8ef8\u306bx, \u7e26\u8ef8\u306b\u305d\u308c\u305e\u308cy, z, w\u3092\u6307\u5b9a\u3057\u3001\u305d\u308c\u305e\u308c\u3092\u5224\u5225\u3067\u304d\u308b\u30e9\u30d9\u30eb\u3092\u51e1\u4f8b\u3068\u3059\u308b\nplt.plot(x,y,label=\"y=x^2\")\nplt.plot(x,z,label=\"y=(x-1)^3\")\nplt.plot(x,w,label=\"y=((x-2)(x-4))^2\")\n# \u51e1\u4f8b\u306e\u8868\u793a\nplt.legend()","6b41cc43":"plt.figure(figsize = (12,4))\n\n# plt.subplot\u3092\u7528\u3044\u3066 \u884cx\u5217\u6570\u5206\u3060\u3051\u30b0\u30e9\u30d5\u3092\u5206\u5272\u3057\u3066\u8868\u793a\n# subplot(\u884c, \u5217, \u8868\u793a\u3059\u308b\u4f4d\u7f6e)\u3068\u5f15\u6570\u3092\u4e0e\u3048\u308b\n\n# 1\u5217\u76ee\u306b\u8868\u793a\nplt.subplot(1,3,1)\nplt.plot(x,y,label=\"y=x^2\")\nplt.legend()\n\n# 2\u5217\u76ee\u306b\u8868\u793a\nplt.subplot(1,3,2)\nplt.plot(x,z,label=\"y=(x-1)^3\")\nplt.legend()\n\n# 3\u5217\u76ee\u306b\u8868\u793a\nplt.subplot(1,3,3)\nplt.plot(x,w,label=\"y=((x-2)(x-4))^2\")\nplt.legend()\n\n#\u30b0\u30e9\u30d5\u540c\u58eb\u306e\u91cd\u306a\u308a\u3092\u9632\u3050\nplt.tight_layout()","7809fa4a":"# 3x3\u3067\u30b5\u30a4\u30ba\u6307\u5b9a\u3055\u308c\u305f\u7a7a\u306efigure\u3092\u4f5c\u6210\nfig=plt.figure(figsize=(3,3))\n\n# fig\u306e\u4e2d\u306b\u30011\u884c1\u5217\u306eaxes\u3092fig\u306e\u4e2d\u306b\u4f5c\u6210\nax=fig.add_subplot(1,1,1)\n\n# ax\u306e\u4e2d\u306b\u5b9f\u969b\u306b\u30b0\u30e9\u30d5\u3092\u63cf\u753b\nax.plot(x,y,label=\"y=x^2\")\nax.plot(x,z,label=\"y=(x-1)^3\")\nax.plot(x,w,label=\"y=((x-2)(x-4))^2\")\n\n# x\u306e\u63cf\u753b\u7bc4\u56f2\u30920, 10\u306b\u8a2d\u5b9a\n# axes\u306b\u5bfe\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u5834\u5408\u306fset_\u304c\u5148\u982d\u306b\u3064\u304f\u3053\u3068\u306b\u6ce8\u610f\nax.set_xlim(0,10)\nax.legend()","96d099b0":"# 1\u884c3\u5217\u306eaxes\u3092\u751f\u6210\nfig,ax=plt.subplots(1,3,figsize=(14,4))\nprint(ax)#ax\u306farray\u5f62\u5f0f\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\nax[0].plot(x,y,label=\"y=x^2\")\nax[1].plot(x,z,label=\"y=(x-1)^3\")\nax[2].plot(x,w,label=\"y=((x-2)(x-4))^2\")\n# for\u5206\u3067\u4e09\u3064\u306e\u30b0\u30e9\u30d5\u3092\u9806\u756a\u306b\u63cf\u753b\nfor i in range(3):\n    ax[i].legend()\n    ax[i].set_xlabel(\"x axis\")\n    ax[i].set_ylabel(\"y axis\")\nplt.tight_layout()","1c252597":"# 2\u884c2\u5217\u306eaxes\u3092\u751f\u6210\nfig,ax=plt.subplots(2,2)\n\n# np.array\u5f62\u5f0f\u3067\u3042\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u63cf\u753b\nax[0,0].plot(x,y,label=\"y=x^2\")\nax[0,0].legend()\nax[0,1].plot(x,z,label=\"y=(x-1)^3\")\nax[0,1].legend()\nax[1,0].plot(x,w,label=\"y=((x-2)(x-4))^2\")\nax[1,0].legend()","4b820f51":"# 3\u884c1\u5217\u306eaxes\u3092\u751f\u6210\nfig,ax=plt.subplots(3,1,figsize = (8,6))\n\nx = np.linspace(-1*np.pi, np.pi,100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x)\nax[0].plot(x,y1,label=\"y=sin(x)\", color = \"red\")\nax[1].plot(x,y2,label=\"y=cos(x)\", color = \"blue\")\nax[2].plot(x,y3,label=\"y=tan(x)\", color  = \"green\")\n\n# \u30b0\u30e9\u30d5\u5171\u901a\u306e\u88c5\u98fe\nfor i in range(3):\n    ax[i].set_xlabel(\"x\")\n    ax[i].set_ylabel(\"y\")\n    ax[i].legend()\n\nplt.tight_layout()","d108feea":"# \u30c7\u30fc\u30bf\u306e\u6574\u7406 - NumPy","4281166d":"# \u30c7\u30fc\u30bf\u306e\u53ef\u8996\u5316 - Matplotlib","147f976e":"## range()\u306b\u3064\u3044\u3066","1e2156e9":"## NumPy\u914d\u5217\u306b\u5bfe\u3059\u308b\u6570\u5b66\u7684\u306a\u6f14\u7b97","9595cae6":"## \u8f9e\u66f8","9bf9ba8f":"## NumPy\u914d\u5217\u306e\u4f5c\u308a\u65b9","3fd5b7a9":"# \u30c7\u30fc\u30bf\u306e\u578b","861374ad":"## NumPy\u914d\u5217\u306b\u5bfe\u3059\u308b\u6570\u5b66\u7684\u306a\u6f14\u7b97","9952758b":"# \u5236\u5fa1\u6587","8b905bc0":"## \u7e70\u308a\u8fd4\u3057\u51e6\u7406 for\u6587","e85728d5":"- \u6b21\u306e\u4e09\u3064\u306e\u66f2\u7dda\u3092\u30d7\u30ed\u30c3\u30c8\n\n$$\ny = x^2 \\\\\nz = (x - 1)^2 \\\\\nw = {(x - 2)(x - 4)}^2 \\\\\n$$","07507b49":"## \u7e70\u308a\u8fd4\u3057\u51e6\u7406 while\u6587","2f34421a":"# \u95a2\u6570","0df31b4d":"## \u30bf\u30d7\u30eb","4af11e23":"# \u30af\u30e9\u30b9","b46cc184":"# \u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u4f5c\u6210","7f853e5f":"# Python\u57fa\u790e\u6587\u6cd5\n\n\uff11\u3064\uff11\u3064\u5b9f\u884c\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002","f293362a":"## \u914d\u5217\u5185\u90e8\u306e\u30c7\u30fc\u30bf\u53c2\u7167","ce03af3c":"# Matplotlib\u306e\u57fa\u672c\u4e8b\u9805\n- \u307e\u305a\u306f\u3001Matplotlib\u306e\u53ef\u8996\u5316\u3092\u4f53\u9a13","269e83f5":"# Numpy\u3067\u914d\u5217\u3092\u9ad8\u901f\u306b\u51e6\u7406\u3057\u3088\u3046","d93e84f1":"\u70b9\u6570\u306e\u6761\u4ef6: \u6210\u7e3e  \n90\u70b9\u4ee5\u4e0a: \u512a  \n90\u70b9\u672a\u6e8070\u70b9\u4ee5\u4e0a: \u826f  \n70\u70b9\u672a\u6e8060\u70b9\u4ee5\u4e0a: \u53ef  \n\u305d\u308c\u4ee5\u5916: \u4e0d\u53ef  ","83a28ba3":"## \u914d\u5217\u5185\u90e8\u306e\u30c7\u30fc\u30bf\u53c2\u7167","53d70533":"# \u8907\u6570\u306e\u30b0\u30e9\u30d5\u3092\u5225\u3005\u306b\u63cf\u304f","e7295595":"## \u6761\u4ef6\u5206\u5c90 if\u6587","537bf114":"# Matplotlib\u306e\u57fa\u672c\u4e8b\u9805","0ca72f0f":"# \u30c7\u30fc\u30bf\u306e\u6574\u7406 - Pandas\u3067\u8868\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4f5c\u308d\u3046","384fa089":"## \u30bb\u30c3\u30c8","b7834336":"## While\u306e\u6ce8\u610f\u70b9","2af79b63":"# \u5909\u6570","d33dada8":"## \u30ea\u30b9\u30c8","be39dd1c":"## format()\u306b\u3064\u3044\u3066","442b24d4":"## \u30af\u30e9\u30b9\u306e\u7d99\u627f"}}