{"cell_type":{"6e671c99":"code","aa3f9b2f":"code","017d774b":"code","50797ed4":"code","dd3471da":"code","d1a27eeb":"code","176116a9":"code","bf63e3ea":"code","c3361100":"code","b297f02e":"code","03b8930a":"markdown","c886eda6":"markdown"},"source":{"6e671c99":"import gc\nfrom tqdm import tqdm\nimport numpy as np\nimport pandas as pd\nfrom pylab import rcParams\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_squared_error\nfrom scipy.stats import probplot\n\nimport datetime as dt\nfrom datetime import date\nfrom datetime import timedelta\nfrom fbprophet import Prophet\n\n%matplotlib inline\nimport os\nimport warnings\nwarnings.filterwarnings(\"ignore\")","aa3f9b2f":"data0 = pd.read_csv(\"..\/input\/google-stock-data\/GOOG.csv\")\ndata0[-5:]","017d774b":"data1=data0[['Date','Close']]","50797ed4":"item1=data1\n\nitem1.columns = ['ds','y']\nitem1.y = item1.y.astype('float')\nitem1.ds = item1.ds.astype('datetime64')\n\nrcParams['figure.figsize'] = 20,5\nplt.plot(item1.ds, item1.y)","dd3471da":"ph = Prophet()\nph.fit(item1)\nforecast1=ph.predict(item1)\nfigure = ph.plot(forecast1)\nfigure.show()","d1a27eeb":"from datetime import timedelta\nstart0 = dt.datetime.strptime('2021-01-01','%Y-%m-%d').date()\nend0   = dt.datetime.strptime('2022-12-31','%Y-%m-%d').date()\nprint((end0-start0).days)","176116a9":"def daterange(start,end):\n    for i in range((end-start).days):\n        return start+timedelta(i)  ","bf63e3ea":"dates0=[]\nfor i in range((end0-start0).days):\n    dates0+=[(start0+timedelta(i)).strftime('%Y-%m-%d') ]\nprint(dates0[0:10])","c3361100":"dates0_df=pd.DataFrame(dates0)\ndates0_df.columns=['ds']\ndates0_df","b297f02e":"ph = Prophet()\nph.fit(item1[-365*2:])\nforecast3=ph.predict(dates0_df)\nfigure = ph.plot(forecast3)\nfigure.show()","03b8930a":"# fit past and predict past+future","c886eda6":"# fit past and predict past"}}