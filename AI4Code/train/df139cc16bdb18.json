{"cell_type":{"471b357e":"code","1b616c6c":"code","b898a80d":"code","21c772ac":"code","6ba89190":"code","719676d0":"code","63fbbd8e":"code","3214c43d":"code","23b7c6e0":"code","6d03a343":"code","a81162d8":"code","d3c192ce":"code","3b1d8fc6":"code","c47eb82b":"code","0c6dd86f":"code","0643aff1":"code","cb4506d7":"code","8a8c3708":"code","ba01a2ad":"code","6c7b58df":"code","1d9ca576":"code","8e89ce84":"code","49804c8c":"code","c24c130d":"code","4f814b44":"code","b18b3609":"code","da0ef1ea":"code","fcb17115":"code","e5d98d1c":"code","2ef1cde3":"code","4ab4fa61":"code","33076a4d":"code","686ebac2":"code","a39602d6":"code","bb48e7d1":"code","76b56288":"code","833ec975":"code","c4a96725":"code","a649250f":"code","a2f622b5":"code","182eb234":"code","f7bfee24":"code","cf0f9a7f":"code","17afef7a":"code","0b637748":"code","1579d2eb":"code","22a2c75e":"code","ba866c22":"code","d922e681":"code","50e57538":"code","e39571e8":"code","b7eba6ee":"code","503d16e3":"code","beb969f4":"code","d8d05628":"code","536dacfa":"code","1e1ba1bd":"code","c18a4df1":"code","88884756":"code","0b7ed977":"code","3a8cc8bd":"code","40e94a9d":"code","f7a6cb63":"code","a71a7c30":"code","78199334":"code","ca6c311b":"code","7c85e5c5":"code","b8c91961":"code","d9d58aa8":"code","e2e8a8b2":"markdown","33672a54":"markdown","1ba56f2f":"markdown","f4343a6a":"markdown","c1d2d671":"markdown","a9eb0614":"markdown","3885ea92":"markdown","495e93c1":"markdown","96ad3432":"markdown","4c4b086c":"markdown","70f9ddc0":"markdown","043eab5d":"markdown","2a865f11":"markdown","aacdd03c":"markdown","7473adea":"markdown","f4b36f4b":"markdown","a3b9457b":"markdown","1c6e6365":"markdown","68592260":"markdown","afab8451":"markdown","a366bf51":"markdown","3e44fb13":"markdown","11c89893":"markdown","16b1a4d5":"markdown","112b4bf2":"markdown","8cbd84cf":"markdown","e0ca4cf6":"markdown","998ce2b4":"markdown","b2a64e14":"markdown","d782399c":"markdown","f938da39":"markdown","7b454bbe":"markdown","fbfc16d2":"markdown","df9a0c52":"markdown","2ef1b53c":"markdown","f8c70281":"markdown"},"source":{"471b357e":"import pandas as pd","1b616c6c":"score_card=pd.read_csv(\"..\/input\/cricket-series-ranking\/Dataset\/Scorecard.csv\")\ninfo_card=pd.read_csv(\"..\/input\/cricket-series-ranking\/Dataset\/Infocard.csv\")","b898a80d":"info_card.head()","21c772ac":"score_card.head()","6ba89190":"def wei_avg_bats(data_score):\n    all_players=((data_score[\"Player_name\"]))\n    data=[]\n    n=len(data_score['Player_name'])\n    for i in all_players:\n        score=0\n        for j in range(0,n):\n            if(i==data_score[\"Player_name\"][j]):\n                score+=data_score[\"Runs_Scored\"][j]\n        data.append([i,score])\n    all_players=(set(data_score[\"Player_name\"]))\n    batt_num=[]\n    sum=0\n    n=len(data_score['Player_name'])\n    for i in all_players:\n        score=0\n        for j in range(0,n):\n            if(i==data_score[\"Player_name\"][j] and data_score[\"FOW_batting_number\"][j] > -1 ):\n                score+=1\n        batt_num.append([i,score])\n        sum=sum+score\n    average=[]\n    for i,j in enumerate(data):\n        average.append([j[0],data[i][1]\/batt_num[i][1]])\n    all_players=((data_score[\"Player_name\"]))\n    ball_faced=[]\n    n=len(data_score['Player_name'])\n    sum_balls=0\n    for i in all_players:\n        score=0\n        for j in range(0,n):\n            if(i==data_score[\"Player_name\"][j]):\n                score+=data_score[\"Balls_faced\"][j]\n        ball_faced.append([i,score])\n        sum_balls+=score\n    strike=[]\n    for i,j in enumerate(data):\n        strike.append([j[0],(j[1]\/ball_faced[i][1])*100])\n    weighted_average=[]\n    for i in range(0,len(strike)):\n        weight=((data[i][1]*33.33)+(ball_faced[i][1]*33.33)+(strike[i][1]*33.33))\/100\n        weighted_average.append([data[i][0],weight])\n    return (weighted_average)\n","719676d0":"def co_batsman(player_name_list,runs_scored):\n    all_players=(player_name_list)\n    data=[]\n    n=len(player_name_list)\n    for i,j in enumerate(all_players):\n        score=0\n        score=runs_scored[i]\n        data.append([j,score])\n    total_runs=sum(runs_scored)\n    runs1=[]\n    for i in range(0,len(data)):\n        runs1.append(data[i][1])\n    co_bats=[]\n    for i in runs1:\n        co_bats.append(total_runs-i)\n    for i in range(0,len(data)):\n        data[i].append(co_bats[i])\n    return (co_bats)\n    ","63fbbd8e":"def co_batsman_avg(player_name_list,fow_batting):\n    batt_num=[]\n    sum=0\n    n=len(player_name_list)\n    wicket_fallen=[0]*(n)\n    for i in range(0,len(fow_batting)):\n        if(fow_batting[i]>-1):\n            wicket_fallen[i]=1\n            sum+=wicket_fallen[i]\n    for i in range(0,len(wicket_fallen)):\n        wicket_fallen[i]=sum-wicket_fallen[i]\n    score=[]\n    for i,j in enumerate(wicket_fallen):\n        score.append(int(player_name_list[i]\/j))\n    return (score)\n    ","3214c43d":"def co_batsman_strike(player_name,ball_face,co_bat_score):\n    all_players=player_name\n    ball_faced=[]\n    n=len(player_name)\n    sum_balls=0\n    score=0\n    for i,j in enumerate(all_players):\n        score+=ball_face[i]\n        ball_faced.append([j,score])\n        sum_balls+=score\n    ball_face=[]\n    for i in ball_faced:\n        ball_face.append(sum_balls-i[1])\n    final_ball_faced=[]\n    for i,j in enumerate(co_bat_score):\n        final_ball_faced.append(int(j\/ball_face[i])*100)\n    return(final_ball_faced)\n    ","23b7c6e0":"def team_average(data_score):\n    match_ids=list(set(data_score[\"Match_id\"]))\n    team_average=[]\n    for i in sorted(match_ids):\n        id=i\n        one_inn=0\n        two_inn=0\n        one_wicket_fall=1\n        two_wicket_fall=1\n        for x,j in enumerate(data_score[\"Match_id\"]):\n            if(i==j):\n                if(data_score[\"Innings\"][x]==1):\n                    one_inn+=data_score[\"Runs_Scored\"][x]\n                    if(data_score[\"FOW_batting_number\"][x]>one_wicket_fall):\n                        one_wicket_fall=data_score[\"FOW_batting_number\"][x]\n                else:\n                    two_inn+=data_score[\"Runs_Scored\"][x]\n                    if(data_score[\"FOW_batting_number\"][x]>two_wicket_fall):\n                        two_wicket_fall=data_score[\"FOW_batting_number\"][x]\n        team_average.append([id,(one_inn\/one_wicket_fall),(two_inn\/two_wicket_fall)])  \n    plt_list=[]\n    for i,j in enumerate(data_score[\"Player_name\"]):\n        temp_play=[]\n        score=0\n        lenght=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            if(j==player_search):\n                if(j not in temp_play):\n                    temp_play.append(j)\n                match_id=data_score[\"Match_id\"][x]\n                inn=data_score[\"Innings\"][x]\n                for c in team_average:\n                    if(c[0]==match_id ):\n                        score+=c[inn]\n                        lenght+=1\n        plt_list.append([temp_play,score\/lenght])\n    play=[]\n    avg=[]\n    for i in plt_list:\n        for j in (i[0]):\n            play.append(j)\n    for i in plt_list:\n        avg.append(i[1])\n    tem_avg=[]\n    for i in range(0,len(play)):\n        tem_avg.append(avg[i])\n    return(tem_avg)","6d03a343":"def team_strike_rate(data_score):\n    team_strike=[]\n    for i in (data_score[\"Match_id\"]):\n        id=i\n        one_inn=0\n        two_inn=0\n        one_wicket_fall=1\n        two_wicket_fall=1\n        one_balls=1\n        two_balls=1\n        for x,j in enumerate(data_score[\"Match_id\"]):\n            if(i==j):\n                if(data_score[\"Innings\"][x]==1):\n                    one_inn+=data_score[\"Runs_Scored\"][x]\n                    if(data_score[\"FOW_batting_number\"][x]>one_wicket_fall):\n                        one_wicket_fall=data_score[\"FOW_batting_number\"][x]\n                    one_balls+=data_score[\"Balls_faced\"][x]\n                else:\n                    two_inn+=data_score[\"Runs_Scored\"][x]\n                    if(data_score[\"FOW_batting_number\"][x]>two_wicket_fall):\n                        two_wicket_fall=data_score[\"FOW_batting_number\"][x]\n                    two_balls+=data_score[\"Balls_faced\"][x]\n        team_strike.append([id,(one_inn\/one_balls)*100,(two_inn\/two_balls)*100])  \n    str_rate_list=[]\n    str1=[]\n    for i,j in enumerate(data_score[\"Player_name\"]):\n        temp_play=[]\n        score=0\n        lenght=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            if(j==player_search):\n                if(j not in temp_play):\n                    temp_play.append(j)\n                match_id=data_score[\"Match_id\"][x]\n                inn=data_score[\"Innings\"][x]\n                for c in team_strike:\n                    if(c[0]==match_id ):\n                        score+=c[inn]\n                        lenght+=1  \n        str_rate_list.append([temp_play,score\/lenght])\n        str1.append(score\/lenght)\n    return str1","a81162d8":"def team_wl(data_score,infocard):\n    win_data=[]\n    for i,j in enumerate(infocard[\"Match_id\"]):\n        team_id=j\n        one_win=0\n        if(infocard[\"Winner\"][i]==infocard[\"Team1\"][i]):\n            one_win=1\n        elif(infocard[\"Winner\"][i]==infocard[\"Team2\"][i]):\n            one_win=2\n        else:\n            one_win=3\n        win_data.append([team_id,one_win])\n    match_win=[]\n    for i,j in enumerate(data_score[\"Player_name\"]):\n        player=j\n        win=0\n        lose=0\n        tie=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            match_id=data_score[\"Match_id\"][x]\n            match_inn=data_score[\"Innings\"][x]\n            if(j==player_search):\n                for z in win_data:\n                    id_m=z[0]\n                    inn_m=z[1]\n                    if(match_id==id_m):\n                        if(inn_m==3):\n                            tie+=1\n                        elif(inn_m!=match_inn):\n                            lose+=1\n                        else:\n                            win+=1\n        match_win.append([player,win,lose,tie])    \n    decision=[]\n    for i,j in enumerate(infocard[\"Toss_decision\"]):\n        if(info_card[\"Toss_decision\"][i]=='bat'):\n            decision.append([infocard[\"Match_id\"][i],1])\n        else:\n            decision.append([infocard[\"Match_id\"][i],2])\n    for i in range(0,len(decision)):\n        if(str(infocard[\"Winner\"][i])==\"nan\"):\n            decision[i][1]=3\n        elif(str(infocard[\"Toss_winner\"][i])!=str(infocard[\"Winner\"][i])):\n            if(decision[i][1]==1):\n                decision[i][1]=2\n            else:\n                decision[i][1]=1\n    match_win=[]\n    for i,j in enumerate(data_score[\"Player_name\"]):\n        player=j\n        win=0\n        lose=0\n        tie=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            match_id=data_score[\"Match_id\"][x]\n            match_inn=data_score[\"Innings\"][x]\n            if(j==player_search):\n                for z in decision:\n                    id_m=z[0]\n                    inn_m=z[1]\n                    if(match_id==id_m):\n                        if(inn_m==3):\n                            tie+=1\n                        elif(inn_m!=match_inn):\n                            lose+=1\n                        else:\n                            win+=1\n        match_win.append([player,win,lose,tie])          \n    win_los=[]\n    total_match=[]\n    for i in match_win:\n        win_los.append(i[1]+i[2])\n        total_match.append(i[1]+i[2]+i[3])\n    final_win_lose=[]\n    for i,j in enumerate(match_win):\n        if(j[2]==0):\n            fo1= j[1]\/1\n        else:\n            fo1= j[1]\/j[2]\n        final_win_lose.append(fo1)\n    return (final_win_lose)","d3c192ce":"def opp_team_average(data_score):\n    one_in_wicket=0\n    two_in_wicket=0\n    for i in range(0,len(data_score[\"Runs_Scored\"])):\n        if(data_score[\"Innings\"][i]==1):\n            if(data_score[\"FOW_batting_number\"][i] > -1):\n                one_in_wicket+=1\n        else:\n            if(data_score[\"FOW_batting_number\"][i] > -1):\n                two_in_wicket+=1\n    final=[]\n    for i in range(0,len(data_score[\"Runs_Scored\"])):\n        if(data_score[\"Innings\"][i]==1):\n            a=data_score[\"Runs_Scored\"][i]\/two_in_wicket\n        else:\n            a=data_score[\"Runs_Scored\"][i]\/one_in_wicket\n        if(str(a)=='inf'):\n            a=0\n        final.append(int(a))\n    return(final)\n    \n        ","3b1d8fc6":"def oppo_team_strike(data_score):\n    team_strike=[]\n    match_ids=list(set(data_score[\"Match_id\"]))\n    for i in (match_ids):\n        id=i\n        one_inn=0\n        two_inn=0\n        one_wicket_fall=1\n        two_wicket_fall=1\n        one_balls=1\n        two_balls=1\n        for x,j in enumerate(data_score[\"Match_id\"]):\n            if(i==j):\n                if(data_score[\"Innings\"][x]==1):\n                    one_inn+=data_score[\"Runs_Scored\"][x]\n                    if(data_score[\"FOW_batting_number\"][x]>one_wicket_fall):\n                        one_wicket_fall=data_score[\"FOW_batting_number\"][x]\n                    one_balls+=data_score[\"Balls_faced\"][x]\n                else:\n                    two_inn+=data_score[\"Runs_Scored\"][x]\n                    if(data_score[\"FOW_batting_number\"][x]>two_wicket_fall):\n                        two_wicket_fall=data_score[\"FOW_batting_number\"][x]\n                    two_balls+=data_score[\"Balls_faced\"][x]\n        team_strike.append([id,(one_inn\/one_balls)*100,(two_inn\/two_balls)*100])  \n    opp_str_rate_list=[]\n    for i,j in enumerate(data_score[\"Player_name\"]):\n        temp_play=[]\n        score=0\n        lenght=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            if(j==player_search):\n                if(j not in temp_play):\n                    temp_play.append(j)\n                match_id=data_score[\"Match_id\"][x]\n                inn=data_score[\"Innings\"][x]\n                for c in team_strike:\n                    if(c[0]==match_id ):\n                        if(inn==2):\n                            score+=c[inn-1]\n                            lenght+=1\n                        elif(inn==1):\n                            score+=c[inn+1]\n                            lenght+=1\n        opp_str_rate_list.append(int(score\/lenght))\n    return (opp_str_rate_list)\n    ","c47eb82b":"def oppo_team_wl(data_score,infocard):\n    all_players=(set(data_score[\"Player_name\"]))\n    win_data=[]\n    for i,j in enumerate(infocard[\"Match_id\"]):\n        team_id=j\n        one_win=0\n        if(infocard[\"Winner\"][i]==infocard[\"Team1\"][i]):\n            one_win=1\n        elif(infocard[\"Winner\"][i]==infocard[\"Team2\"][i]):\n            one_win=2\n        else:\n            one_win=3\n        win_data.append([team_id,one_win])\n    match_win=[]\n    for i,j in enumerate(all_players):\n        player=j\n        win=0\n        lose=0\n        tie=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            match_id=data_score[\"Match_id\"][x]\n            match_inn=data_score[\"Innings\"][x]\n            if(j==player_search):\n                for z in win_data:\n                    id_m=z[0]\n                    inn_m=z[1]\n                    if(match_id==id_m):\n                        if(inn_m==3):\n                            tie+=1\n                        elif(inn_m!=match_inn):\n                            win+=1\n                        else:\n                            lose+=1\n        match_win.append([player,win,lose,tie])               \n    decision=[]\n    for i,j in enumerate(infocard[\"Toss_decision\"]):\n        if(infocard[\"Toss_decision\"][i]=='bat'):\n            decision.append([infocard[\"Match_id\"][i],1])\n        else:\n            decision.append([infocard[\"Match_id\"][i],2])\n    for i in range(0,len(decision)):\n        if(str(infocard[\"Winner\"][i])==\"nan\"):\n            decision[i][1]=3\n        elif(str(infocard[\"Toss_winner\"][i])!=str(infocard[\"Winner\"][i])):\n            if(decision[i][1]==1):\n                decision[i][1]=2\n            else:\n                decision[i][1]=1\n    match_win=[]\n    for i,j in enumerate(all_players):\n        player=j\n        win=0\n        lose=0\n        tie=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            match_id=data_score[\"Match_id\"][x]\n            match_inn=data_score[\"Innings\"][x]\n            if(j==player_search):\n                for z in decision:\n                    id_m=z[0]\n                    inn_m=z[1]\n                    if(match_id==id_m):\n                        if(inn_m==3):\n                            tie+=1\n                        elif(inn_m!=match_inn):\n                            lose+=1\n                        else:\n                            win+=1\n        match_win.append([player,win,lose,tie])               \n    win_los=[]\n    total_match=[]\n    for i in match_win:\n        win_los.append(i[1]+i[2])\n        total_match.append(i[1]+i[2]+i[3])\n    op_final_win_lose=[]\n    for i,j in enumerate(match_win):\n        if(j[2]==0):\n            fo1= j[1]\/1\n        else:\n            fo1= j[1]\/j[2]\n        op_final_win_lose.append(fo1)\n    return(op_final_win_lose)","0c6dd86f":"def wei_avg_bow(data_score):\n    co_bow_average=[]\n    data=[]\n    n=len(data_score['Player_name'])\n    \n    for i in data_score['Player_name']:\n        score=0\n        for j in range(0,n):\n            if(i==data_score[\"Player_name\"][j]):\n                score+=data_score[\"Runs_Scored\"][j]\n        data.append([i,score])\n        \n    uniq_player=list((data_score[\"Player_name\"]))\n    for i in uniq_player:\n        runs=0\n        wicket=0\n        for x,y in enumerate(data_score[\"Player_name\"]):\n            if(i==y):\n                runs+=data_score[\"Runs_conceded\"][x]\n                wicket+=data_score[\"Wickets_taken\"][x]\n        co_bow_average.append([i,runs\/wicket])\n    co_bow_economy=[]\n    for i in uniq_player:\n        runs=0\n        wicket=0\n        for x,y in enumerate(data_score[\"Player_name\"]):\n            if(i==y):\n                runs+=data_score[\"Overs_bowled\"][x]\n                wicket+=data_score[\"Runs_conceded\"][x]\n\n        co_bow_economy.append([i,(wicket\/runs)])\n    co_bow_strike=[]\n    for i in uniq_player:\n        runs=0\n        wicket=0\n        for x,y in enumerate(data_score[\"Player_name\"]):\n            if(i==y):\n                runs+=data_score[\"Overs_bowled\"][x]\n                wicket+=data_score[\"Wickets_taken\"][x]\n\n        co_bow_strike.append([i,(runs\/wicket)*6])\n    co_bow_wicket=[]\n    uniq_player=list((data_score[\"Player_name\"]))\n    for i in uniq_player:\n        runs=0\n        wicket=0\n        for x,y in enumerate(data_score[\"Player_name\"]):\n            if(i==y):\n                runs+=data_score[\"Runs_conceded\"][x]\n                wicket+=data_score[\"Wickets_taken\"][x]\n\n        co_bow_wicket.append([i,wicket])\n    weeighted_average_bowler=[]\n\n    for i in range(0,len(co_bow_wicket)):\n        weight=((25*co_bow_wicket[i][1])+(25*-(co_bow_average[i][1]))+(25*-(co_bow_economy[i][1]))+(25*-(co_bow_strike[i][1])))\/100\n        if(str(weight)=='-inf' or str(weight)=='nan'):\n            weeighted_average_bowler.append([data[i][0],0])\n        else:\n            weeighted_average_bowler.append([data[i][0],int(weight)])\n    return (weeighted_average_bowler)\n","0643aff1":"def team_wl_bow(data_score,infocard):\n    win_data=[]\n    for i,j in enumerate(infocard[\"Match_id\"]):\n        team_id=j\n        one_win=0\n        if(infocard[\"Winner\"][i]==infocard[\"Team1\"][i]):\n            one_win=1\n        elif(infocard[\"Winner\"][i]==infocard[\"Team2\"][i]):\n            one_win=2\n        else:\n            one_win=3\n        win_data.append([team_id,one_win])\n    match_win=[]\n    for i,j in enumerate(data_score[\"Player_name\"]):\n        player=j\n        win=0\n        lose=0\n        tie=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            match_id=data_score[\"Match_id\"][x]\n            match_inn=data_score[\"Innings\"][x]\n            if(j==player_search):\n                for z in win_data:\n                    id_m=z[0]\n                    inn_m=z[1]\n                    if(match_id==id_m):\n                        if(inn_m==3):\n                            tie+=1\n                        elif(inn_m!=match_inn):\n                            lose+=1\n                        else:\n                            win+=1\n        match_win.append([player,win,lose,tie])    \n    decision=[]\n    for i,j in enumerate(infocard[\"Toss_decision\"]):\n        if(info_card[\"Toss_decision\"][i]=='bat'):\n            decision.append([infocard[\"Match_id\"][i],1])\n        else:\n            decision.append([infocard[\"Match_id\"][i],2])\n    for i in range(0,len(decision)):\n        if(str(infocard[\"Winner\"][i])==\"nan\"):\n            decision[i][1]=3\n        elif(str(infocard[\"Toss_winner\"][i])!=str(infocard[\"Winner\"][i])):\n            if(decision[i][1]==1):\n                decision[i][1]=2\n            else:\n                decision[i][1]=1\n    match_win=[]\n    for i,j in enumerate(data_score[\"Player_name\"]):\n        player=j\n        win=0\n        lose=0\n        tie=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            match_id=data_score[\"Match_id\"][x]\n            match_inn=data_score[\"Innings\"][x]\n            if(j==player_search):\n                for z in decision:\n                    id_m=z[0]\n                    inn_m=z[1]\n                    if(match_id==id_m):\n                        if(inn_m==3):\n                            tie+=1\n                        elif(inn_m!=match_inn):\n                            lose+=1\n                        else:\n                            win+=1\n        match_win.append([player,win,lose,tie])          \n    win_los=[]\n    total_match=[]\n    for i in match_win:\n        win_los.append(i[1]+i[2])\n        total_match.append(i[1]+i[2]+i[3])\n        \n    final_win_lose=[]\n    for i,j in enumerate(match_win):\n        if(j[2]==0):\n            fo1= j[1]\/1\n        else:\n            fo1= j[1]\/j[2]\n        final_win_lose.append(int(fo1))\n    return (final_win_lose)","cb4506d7":"def opp_team_eco_bow(data_score):\n    team_economy=[]\n    match_ids=data_score[\"Match_id\"]\n    for i in (match_ids):\n        id=i\n        one_inn=0\n        two_inn=0\n        one_over_bowled=1\n        two_over_bowled=1\n        for x,j in enumerate(data_score[\"Match_id\"]):\n            if(i==j):\n                if(data_score[\"Innings\"][x]==1):\n                    one_inn+=data_score[\"Runs_conceded\"][x]\n                    one_over_bowled=data_score[\"Overs_bowled\"][x]\n                else:\n                    two_inn+=data_score[\"Runs_conceded\"][x]\n                    two_over_bowled=data_score[\"Overs_bowled\"][x]\n        team_economy.append([id,(one_inn\/one_over_bowled),(two_inn\/two_over_bowled)])  \n    opp_plt_list=[]\n    for i,j in enumerate(data_score[\"Player_name\"]):\n        temp_play=[]\n        score=0\n        lenght=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            if(j==player_search):\n                if(j not in temp_play):\n                    temp_play.append(j)\n                match_id=data_score[\"Match_id\"][x]\n                inn=data_score[\"Innings\"][x]\n                for c in team_economy:                   \n                    if(c[0]==match_id ):\n                        if(inn==2):\n                            score+=c[inn-1]\n                            lenght+=1\n                        elif(inn==1):\n                            score+=c[inn+1]\n                            lenght+=1\n        opp_plt_list.append((score\/lenght))\n    return opp_plt_list","8a8c3708":"def opp_team_average_bow(data_score):\n    one_in_wicket=0\n    two_in_wicket=0\n    for i in range(0,len(data_score[\"Runs_Scored\"])):\n        if(data_score[\"Innings\"][i]==1):\n            if(data_score[\"FOW_batting_number\"][i] > -1):\n                one_in_wicket+=1\n        else:\n            if(data_score[\"FOW_batting_number\"][i] > -1):\n                two_in_wicket+=1\n    final=[]\n    for i in range(0,len(data_score[\"Runs_Scored\"])):\n        if(data_score[\"Innings\"][i]==1):\n            a=data_score[\"Runs_Scored\"][i]\/two_in_wicket\n        else:\n            a=data_score[\"Runs_Scored\"][i]\/one_in_wicket\n        if(str(a)=='inf'):\n            a=0\n        final.append(int(a))\n    return(final)","ba01a2ad":"def oppo_team_strike_bow(data_score):\n    team_strike=[]\n    match_ids=list((data_score[\"Match_id\"]))\n    for i in (match_ids):\n        id=i\n        one_inn=0\n        two_inn=0\n        one_wicket_fall=1\n        two_wicket_fall=1\n        one_balls=1\n        two_balls=1\n        for x,j in enumerate(data_score[\"Match_id\"]):\n            if(i==j):\n                if(data_score[\"Innings\"][x]==1):\n                    one_inn+=data_score[\"Runs_Scored\"][x]\n                    if(data_score[\"FOW_batting_number\"][x]>one_wicket_fall):\n                        one_wicket_fall=data_score[\"FOW_batting_number\"][x]\n                    one_balls+=data_score[\"Balls_faced\"][x]\n                else:\n                    two_inn+=data_score[\"Runs_Scored\"][x]\n                    if(data_score[\"FOW_batting_number\"][x]>two_wicket_fall):\n                        two_wicket_fall=data_score[\"FOW_batting_number\"][x]\n                    two_balls+=data_score[\"Balls_faced\"][x]\n        team_strike.append([id,(one_inn\/one_balls)*100,(two_inn\/two_balls)*100])  \n    opp_str_rate_list=[]\n    for i,j in enumerate(data_score[\"Player_name\"]):\n        temp_play=[]\n        score=0\n        lenght=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            if(j==player_search):\n                if(j not in temp_play):\n                    temp_play.append(j)\n                match_id=data_score[\"Match_id\"][x]\n                inn=data_score[\"Innings\"][x]\n                for c in team_strike:\n                    if(c[0]==match_id ):\n                        if(inn==2):\n                            score+=c[inn-1]\n                            lenght+=1\n                        elif(inn==1):\n                            score+=c[inn+1]\n                            lenght+=1\n        opp_str_rate_list.append(int(score\/lenght))\n    return (opp_str_rate_list)","6c7b58df":"def co_bowler_bow(data_score):\n    co_bow_average=[]\n    uniq_player=list((data_score[\"Player_name\"]))\n    for i in uniq_player:\n        runs=0\n        wicket=0\n        for x,y in enumerate(data_score[\"Player_name\"]):\n            if(i!=y):\n                runs+=data_score[\"Runs_conceded\"][x]\n                wicket+=data_score[\"Wickets_taken\"][x]\n        co_bow_average.append(int(runs\/wicket))\n    return (co_bow_average)","1d9ca576":"def co_bowler_eco(data_score):\n    co_bow_economy=[]\n    uniq_player=list((data_score[\"Player_name\"]))\n    for i in uniq_player:\n        runs=0\n        wicket=0\n        for x,y in enumerate(data_score[\"Player_name\"]):\n            if(i!=y):\n                runs+=data_score[\"Overs_bowled\"][x]\n                wicket+=data_score[\"Runs_conceded\"][x]\n        co_bow_economy.append(int(wicket\/runs))\n    return(co_bow_economy)","8e89ce84":"def co_bowler_str(data_score):\n    co_bow_strike=[]\n    uniq_player=list((data_score[\"Player_name\"]))\n    for i in uniq_player:\n        runs=0\n        wicket=0\n        for x,y in enumerate(data_score[\"Player_name\"]):\n            if(i!=y):\n                runs+=data_score[\"Overs_bowled\"][x]\n                wicket+=data_score[\"Wickets_taken\"][x]\n        co_bow_strike.append(int((runs\/wicket)*6))\n    return(co_bow_strike)","49804c8c":"def team_average(data_score):\n    match_ids=list((data_score[\"Match_id\"]))\n    team_average=[]\n    for i in sorted(match_ids):\n        id=i\n        one_inn=0\n        two_inn=0\n        one_wicket_fall=1\n        two_wicket_fall=1\n        for x,j in enumerate(data_score[\"Match_id\"]):\n            if(i==j):\n                if(data_score[\"Innings\"][x]==1):\n                    one_inn+=data_score[\"Runs_Scored\"][x]\n                    if(data_score[\"FOW_batting_number\"][x]>one_wicket_fall):\n                        one_wicket_fall=data_score[\"FOW_batting_number\"][x]\n                else:\n                    two_inn+=data_score[\"Runs_Scored\"][x]\n                    if(data_score[\"FOW_batting_number\"][x]>two_wicket_fall):\n                        two_wicket_fall=data_score[\"FOW_batting_number\"][x]\n        team_average.append([id,(one_inn\/one_wicket_fall),(two_inn\/two_wicket_fall)])  \n    plt_list=[]\n    for i,j in enumerate(data_score[\"Player_name\"]):\n        temp_play=[]\n        score=0\n        lenght=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            if(j==player_search):\n                if(j not in temp_play):\n                    temp_play.append(j)\n                match_id=data_score[\"Match_id\"][x]\n                inn=data_score[\"Innings\"][x]\n                for c in team_average:\n                    if(c[0]==match_id ):\n                        score+=c[inn]\n                        lenght+=1\n        plt_list.append([temp_play,score\/lenght])\n    play=[]\n    avg=[]\n    for i in plt_list:\n        for j in (i[0]):\n            play.append(j)\n    for i in plt_list:\n        avg.append(i[1])\n    tem_avg=[]\n    for i in range(0,len(play)):\n        tem_avg.append(avg[i])\n    return(tem_avg)","c24c130d":"def team_eco_bow(data_score):\n    match_ids=list((data_score[\"Match_id\"]))\n    team_economy=[]\n    for i in (match_ids):\n        id=i\n        one_inn=0\n        two_inn=0\n        one_over_bowled=1\n        two_over_bowled=1\n        for x,j in enumerate(data_score[\"Match_id\"]):\n            if(i==j):\n                if(data_score[\"Innings\"][x]==1):\n                    one_inn+=data_score[\"Runs_conceded\"][x]\n                    one_over_bowled=data_score[\"Overs_bowled\"][x]\n                else:\n                    two_inn+=data_score[\"Runs_conceded\"][x]\n                    two_over_bowled=data_score[\"Overs_bowled\"][x]\n        team_economy.append([id,(one_inn\/one_over_bowled),(two_inn\/two_over_bowled)])  \n    all_players=list((data_score[\"Player_name\"]))\n    plt_list=[]\n    for i,j in enumerate(all_players):\n        temp_play=[]\n        score=0\n        lenght=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            if(j==player_search):\n                if(j not in temp_play):\n                    temp_play.append(j)\n                match_id=data_score[\"Match_id\"][x]\n                inn=data_score[\"Innings\"][x]\n                for c in team_economy:\n                    if(c[0]==match_id ):\n                        score+=c[inn]\n                        lenght+=1\n        plt_list.append((score\/lenght))\n    return(plt_list)","4f814b44":"def team_strike_rate(data_score):\n    team_strike=[]\n    for i in (data_score[\"Match_id\"]):\n        id=i\n        one_inn=0\n        two_inn=0\n        one_wicket_fall=1\n        two_wicket_fall=1\n        one_balls=1\n        two_balls=1\n        for x,j in enumerate(data_score[\"Match_id\"]):\n            if(i==j):\n                if(data_score[\"Innings\"][x]==1):\n                    one_inn+=data_score[\"Runs_Scored\"][x]\n                    if(data_score[\"FOW_batting_number\"][x]>one_wicket_fall):\n                        one_wicket_fall=data_score[\"FOW_batting_number\"][x]\n                    one_balls+=data_score[\"Balls_faced\"][x]\n                else:\n                    two_inn+=data_score[\"Runs_Scored\"][x]\n                    if(data_score[\"FOW_batting_number\"][x]>two_wicket_fall):\n                        two_wicket_fall=data_score[\"FOW_batting_number\"][x]\n                    two_balls+=data_score[\"Balls_faced\"][x]\n        team_strike.append([id,(one_inn\/one_balls)*100,(two_inn\/two_balls)*100])  \n    str_rate_list=[]\n    str1=[]\n    for i,j in enumerate(data_score[\"Player_name\"]):\n        temp_play=[]\n        score=0\n        lenght=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            if(j==player_search):\n                if(j not in temp_play):\n                    temp_play.append(j)\n                match_id=data_score[\"Match_id\"][x]\n                inn=data_score[\"Innings\"][x]\n                for c in team_strike:\n                    if(c[0]==match_id ):\n                        score+=c[inn]\n                        lenght+=1\n        str_rate_list.append([temp_play,score\/lenght])\n        str1.append(int(score\/lenght))\n    return str1","b18b3609":"def oppo_team_wl(data_score,infocard):\n    all_players=(set(data_score[\"Player_name\"]))\n    win_data=[]\n    for i,j in enumerate(infocard[\"Match_id\"]):\n        team_id=j\n        one_win=0\n        if(infocard[\"Winner\"][i]==infocard[\"Team1\"][i]):\n            one_win=1\n        elif(infocard[\"Winner\"][i]==infocard[\"Team2\"][i]):\n            one_win=2\n        else:\n            one_win=3\n        win_data.append([team_id,one_win])\n    match_win=[]\n    for i,j in enumerate(all_players):\n        player=j\n        win=0\n        lose=0\n        tie=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            match_id=data_score[\"Match_id\"][x]\n            match_inn=data_score[\"Innings\"][x]\n            if(j==player_search):\n                for z in win_data:\n                    id_m=z[0]\n                    inn_m=z[1]\n                    if(match_id==id_m):\n                        if(inn_m==3):\n                            tie+=1\n                        elif(inn_m!=match_inn):\n                            win+=1\n                        else:\n                            lose+=1\n        match_win.append([player,win,lose,tie])                    \n    decision=[]\n    for i,j in enumerate(infocard[\"Toss_decision\"]):\n        if(infocard[\"Toss_decision\"][i]=='bat'):\n            decision.append([infocard[\"Match_id\"][i],1])\n        else:\n            decision.append([infocard[\"Match_id\"][i],2])\n    for i in range(0,len(decision)):\n        if(str(infocard[\"Winner\"][i])==\"nan\"):\n            decision[i][1]=3\n        elif(str(infocard[\"Toss_winner\"][i])!=str(infocard[\"Winner\"][i])):\n            if(decision[i][1]==1):\n                decision[i][1]=2\n            else:\n                decision[i][1]=1\n    match_win=[]\n    for i,j in enumerate(all_players):\n        player=j\n        win=0\n        lose=0\n        tie=0\n        for x,player_search in enumerate(data_score[\"Player_name\"]):\n            match_id=data_score[\"Match_id\"][x]\n            match_inn=data_score[\"Innings\"][x]\n            if(j==player_search):\n                for z in decision:\n                    id_m=z[0]\n                    inn_m=z[1]\n                    if(match_id==id_m):\n                        if(inn_m==3):\n                            tie+=1\n                        elif(inn_m!=match_inn):\n                            lose+=1\n                        else:\n                            win+=1\n        match_win.append([player,win,lose,tie])               \n    win_los=[]\n    total_match=[]\n    for i in match_win:\n        win_los.append(i[1]+i[2])\n        total_match.append(i[1]+i[2]+i[3])\n    op_final_win_lose=[]\n    for i,j in enumerate(match_win):\n        if(j[2]==0):\n            fo1= j[1]\/1\n        else:\n            fo1= j[1]\/j[2]\n        op_final_win_lose.append(int(fo1))\n    return(op_final_win_lose)","da0ef1ea":"def rising(l1,l2,l3,l4,l5,l6,l7,l8,l9):\n    re=[]\n    for i in range(0,len(l1)):\n        dd=0\n        if(l1==None):\n            dd+=0\n        else:\n            dd+=l1[i]\n        if(l2==None):\n            dd+=0\n        else:\n            dd+=l2[i]\n        if(l3==None):\n            dd+=0\n        else:\n            dd+=l3[i]\n        if(l4==None):\n            dd+=0\n        else:\n            dd+=l4[i]\n        if(l5==None):\n            dd+=0\n        else:\n            dd+=l5[i]\n        if(l6==None):\n            dd+=0\n        else:\n            dd+=l6[i]\n        if(l7==None):\n            dd+=0\n        else:\n            dd-=l7[i]\n        if(l8==None):\n            dd+=0\n        else:\n            dd-=l8[i]\n        if(l9==None):\n            dd+=0\n        else:\n            dd-=l9[i]\n        re.append(dd)\n    return re","fcb17115":"def master(matchid,score_card):\n    temp=matchid\n    players=[]\n    runs=[]\n    fow_batting=[]\n    ball_faced=[]\n    match_id=[]\n    inig=[]\n    runs_conceded=[]\n    over_bowled=[]\n    wicket_taken=[]\n    wicket_fall=[]\n    for x,y in enumerate(score_card[\"Match_id\"]):\n\n        if(temp==y):\n            inig.append(score_card[\"Innings\"][x])\n            match_id.append(score_card[\"Match_id\"][x])\n            players.append(score_card[\"Player_name\"][x])\n            runs.append(score_card[\"Runs_Scored\"][x])\n            fow_batting.append(score_card[\"FOW_batting_number\"][x])\n            ball_faced.append(score_card[\"Balls_faced\"][x])\n            runs_conceded.append(score_card[\"Runs_conceded\"][x])\n            over_bowled.append(score_card[\"Overs_bowled\"][x])\n            wicket_taken.append(score_card[\"Wickets_taken\"][x])\n            wicket_fall.append(score_card[\"FOW_batting_number\"][x])\n\n    dataframe=pd.DataFrame({\"Match_id\":match_id,\"Innings\":inig,\"Player_name\":players,\"Runs_Scored\":runs,\"FOW_batting_number\":fow_batting,\"Balls_faced\":ball_faced,\"Runs_conceded\":runs_conceded,\"Overs_bowled\":over_bowled,\"Wickets_taken\":wicket_taken})\n#     print(inig,match_id)\n#     print(temp)\n#     print(runs)\n#     print(wicket_fall)\n#     print(\"------------\")\n    if(len(runs)==0 or len(wicket_fall)==0):\n        s=0\n    else:\n        if(len(wicket_fall)>20):\n            first_inn_score=sum(runs[:12])\n            second_inn_score=sum(runs[12:])\n            wicketfal_one=max(wicket_fall[:12])\n            wicketfal_two=max(wicket_fall[12:])\n#             print(temp)\n#             print(\"first_inn_score  \",first_inn_score)\n#             print(\"second_inn_score \",second_inn_score)\n#             print(\"wicketfal_one    \",wicketfal_one)\n#             print(\"wicketfal_two    \",wicketfal_two)\n#             print(\"Weighted Average Batsman\")\n\n            rs_1=co_batsman(players,runs)\n#             print(len(rs_1),rs_1)\n            rs_2=co_batsman_avg(runs,fow_batting)\n#             print(len(rs_2),rs_2)\n            rs_3=co_batsman_strike(players,ball_faced,rs_1)\n#             print(rs_3)\n            rs_4=team_average(dataframe)\n#             print(rs_4)\n            rs_5=team_strike_rate(dataframe)\n#             print(rs_5)\n            rs_6=team_wl(dataframe,info_card)\n#             print(rs_6)\n            rs_7=opp_team_average(dataframe)\n#             print(rs_7)\n            rs_8=oppo_team_strike(dataframe)\n#             print(rs_8)\n            rs_9=oppo_team_wl(dataframe,info_card)\n#             print(rs_9)\n            \n            rising_star=rising(rs_1,rs_2,rs_3,rs_4,rs_5,rs_6,rs_7,rs_8,rs_9)\n            rrr=(wei_avg_bats(dataframe))\n            \n            for i in range(0,len(rrr)):\n                rrr[i].append(rising_star[i])\n            \n            return rrr\n            ","e5d98d1c":"# Unique_year\n\nUniq_year=list(set(info_card[\"Season\"]))\nseries=list(set(info_card[\"Series\/Competition\"]))\n","2ef1cde3":"for i in Uniq_year:\n    print(i)\n    for x,y in enumerate(info_card[\"Season\"]):\n        if(i==y):\n            print(i,info_card[\"Series\/Competition\"][x])\n            \n    ","4ab4fa61":"masters=[]\nfor i in series:\n    temp=[]\n    for x,y in enumerate(info_card[\"Series\/Competition\"]):\n        if(i==y):\n            temp.append(info_card[\"Match_id\"][x])\n    masters.append([i,temp])","33076a4d":"series=[]\nid=[]\nplayers=[]\nfor i in masters:\n    print(\"On the way\")\n    ids=[]\n    ser=[]\n    player=[]\n    for j in i[1]:\n        \n        ids.append(j)\n        ser.append(i[0])\n        try:\n            player.append(master(j,score_card))\n        except:\n            pass\n    \n    series.append(ser)\n    id.append(ids)\n    players.append(player)\n    \nprint(\"All Done\")","686ebac2":"for i in range(0,len(players)):\n    for x,y in enumerate(players[i]):\n#         if(players[i][x]!=None):\n#             print(players[i][x][0])\n        if(players[i][x]!=None):\n            for g in range(0,len(players[i][x])):\n                players[i][x][g].append(id[i][x])","a39602d6":"master_series=[]\nmaster_id=[]\nmaster_player=[]\nfor u,w in enumerate(series):\n#     print(len(w),len(id[u]),len(players[u]))\n    normal=[]\n    values=[]\n    values_rs=[]\n    id_s=[]\n    for i in players[u]:\n        if(i!=None):\n            for j in i:\n                normal.append(j[0])\n                id_s.append(j[3])\n                values_rs.append(j[2])\n                if(str(j[1])=='nan'):\n                    values.append(0)\n                else:\n                    values.append(float(j[1]))\n    uniq_normal=set(normal)\n    final=[]\n    for i,j in enumerate(uniq_normal):\n        val=0\n        val_rs=0\n        idf=[]\n        for x,y in enumerate(normal):\n            if(j==y):\n                val+=values[x]\n                val_rs+=values_rs[x]\n                idf.append(id_s[x])\n\n        final.append([j,val,val_rs,idf])\n#     master_series.append(j)\n#     master_id.append(p for p in id[u])\n#     master_player.append(b for b in final)\n    for i in range(0,len(final)):\n        master_player.append(final[i])\n        master_series.append(w[0])\n        master_id.append(id[u])","bb48e7d1":"# for i in range(0,len(master_player)):\n#     print(master_series[i],master_player[i])","76b56288":"seri=[]\nplay=[]\nwei_av=[]\nrs=[]\ni_d=[]\nfor i in range(len(master_player)):\n#     print(master_player[i])\n    seri.append(master_series[i])\n    play.append(master_player[i][0])\n\n    wei_av.append((master_player[i][1]))\n    \n    rs.append(int(master_player[i][2]))\n    i_d.append(master_player[i][3])","833ec975":"final_data=pd.DataFrame({\"Series\":seri,\"Player\":play,\"Weighted Average\":wei_av,\"Rising star\":rs,\"ID Playes\":i_d})","c4a96725":"final_data","a649250f":"pip install openpyxl","a2f622b5":"# Data export\nGFG = pd.ExcelWriter('finaldata.xlsx') \nfinal_data.to_excel(GFG, index = False) \n  \nGFG.save() ","182eb234":"final_data1=pd.read_excel(\".\/finaldata.xlsx\")\nfinal_data1.head()","f7bfee24":"#Offering the users to get the best players from the given input series.","cf0f9a7f":"seri=\"ICC World Twenty20\"   # If you want you change the series\n# seri=str(input())         # Eg. India in England ODI Series, West Indies Women in Australia ODI Series\nweight=[]\nrise=[]\nplayer=[]\n\nfor i in range(0,len(final_data[\"Weighted Average\"])):\n    if(final_data[\"Series\"][i]==seri):\n        weight.append(final_data[\"Weighted Average\"][i])\n        rise.append(final_data[\"Rising star\"][i])\n        player.append(final_data[\"Player\"][i])\n        \n      \nseries=[]\nfor i in range(0,len(weight)):\n    series.append(i)","17afef7a":"import seaborn as sns","0b637748":"import matplotlib.pyplot as plt\n%matplotlib inline\n\nsns.set_style(\"whitegrid\")\nfig = plt.figure(figsize=(12,6))\nplt.scatter(weight, rise, color=\"red\")\nplt.xlabel(\"Rising Star\", fontsize=14)\nplt.ylabel(\"Weighted average\", fontsize=14)\nplt.title(\"Series data\", fontsize=16)\nplt.show()","1579d2eb":"Batsmen=pd.DataFrame({\"Weight\":weight,\"rise\":rise,\"tmp_id\":series})","22a2c75e":"from sklearn.cluster import KMeans\n\nkmeans = KMeans(n_clusters=5)\nkmeans.fit(Batsmen[[\"Weight\", \"rise\"]])\nBatsmen[\"cluster\"] = kmeans.labels_\n\nfig = plt.figure(figsize=(12,6))\n\ncolors = [\"blue\", \"sienna\", \"limegreen\", \"red\", \"black\"]\n\nfor r in range(1,6):\n    clustered_Batsmen = Batsmen[Batsmen[\"cluster\"] == r]\n    plt.scatter(clustered_Batsmen[\"Weight\"], clustered_Batsmen[\"rise\"], color=colors[r-1])\n    \nplt.title(seri, fontsize=16)\nplt.xlabel(\"weighted Average\", fontsize=14)\nplt.ylabel(\"Rising\", fontsize=14)\n    \nplt.show()","ba866c22":"# Batsmen = Batsmen.rename(columns={\"Player_names\": \"Player_Id\"})\nBatsmen = Batsmen.sort_values(by ='cluster' )\nBatsmen.head()","d922e681":"Batsmen[\"rise\"].hist(color=\"pink\")","50e57538":"Batsmen[\"Weight\"].hist(color=\"pink\")","e39571e8":"Players_batsmen = pd.DataFrame({\"Player\":player,\"tmp_id\":series})\n\nBatsmen = Batsmen[Batsmen.columns].merge(Players_batsmen)\nBatsmen.head(5)","b7eba6ee":"def rising_bow(l1,l2,l3,l4,l5,l6,l7,l8,l9,l10,l11):\n    re=[]\n    for i in range(0,len(l1)):\n        dd=0\n        if(l1==None):\n            dd+=0\n        else:\n            dd+=l1[i]\n        if(l2==None):\n            dd+=0\n        else:\n            dd+=l2[i]\n        if(l3==None):\n            dd+=0\n        else:\n            dd+=l3[i]\n        if(l4==None):\n            dd+=0\n        else:\n            dd+=l4[i]\n        if(l5==None):\n            dd+=0\n        else:\n            dd-=l5[i]\n        if(l6==None):\n            dd+=0\n        else:\n            dd-=l6[i]\n        if(l7==None):\n            dd+=0\n        else:\n            dd-=l7[i]\n        if(l8==None):\n            dd+=0\n        else:\n            dd-=l8[i]\n        if(l9==None):\n            dd+=0\n        else:\n            dd-=l9[i]\n        if(l10==None):\n            dd+=0\n        else:\n            dd-=l10[i]\n        if(l11==None):\n            dd+=0\n        else:\n            dd-=l11[i]\n        re.append(dd)\n    return re","503d16e3":"def master_bow(matchid,score_card):\n    temp=matchid\n    players=[]\n    runs=[]\n    fow_batting=[]\n    ball_faced=[]\n    match_id=[]\n    inig=[]\n    runs_conceded=[]\n    over_bowled=[]\n    wicket_taken=[]\n    wicket_fall=[]\n    for x,y in enumerate(score_card[\"Match_id\"]):\n\n        if(temp==y):\n            inig.append(score_card[\"Innings\"][x])\n            match_id.append(score_card[\"Match_id\"][x])\n            players.append(score_card[\"Player_name\"][x])\n            runs.append(score_card[\"Runs_Scored\"][x])\n            fow_batting.append(score_card[\"FOW_batting_number\"][x])\n            ball_faced.append(score_card[\"Balls_faced\"][x])\n            runs_conceded.append(score_card[\"Runs_conceded\"][x])\n            over_bowled.append(score_card[\"Overs_bowled\"][x])\n            wicket_taken.append(score_card[\"Wickets_taken\"][x])\n            wicket_fall.append(score_card[\"FOW_batting_number\"][x])\n\n    dataframe=pd.DataFrame({\"Match_id\":match_id,\"Innings\":inig,\"Player_name\":players,\"Runs_Scored\":runs,\"FOW_batting_number\":fow_batting,\"Balls_faced\":ball_faced,\"Runs_conceded\":runs_conceded,\"Overs_bowled\":over_bowled,\"Wickets_taken\":wicket_taken})\n#     print(inig,match_id)\n#     print(temp)\n#     print(runs)\n#     print(wicket_fall)\n#     print(\"------------\")\n    if(len(runs)==0 or len(wicket_fall)==0):\n        s=0\n    else:\n        if(len(wicket_fall)>20):\n            first_inn_score=sum(runs[:12])\n            second_inn_score=sum(runs[12:])\n            wicketfal_one=max(wicket_fall[:12])\n            wicketfal_two=max(wicket_fall[12:])\n#             print(temp)\n#             print(\"first_inn_score  \",first_inn_score)\n#             print(\"second_inn_score \",second_inn_score)\n#             print(\"wicketfal_one    \",wicketfal_one)\n#             print(\"wicketfal_two    \",wicketfal_two)\n#             print(\"Weighted Average Batsman\")\n\n            rsbow_1=team_wl_bow(dataframe,info_card)\n            rsbow_2=opp_team_eco_bow(dataframe)\n            rsbow_3=opp_team_average_bow(dataframe)\n            rsbow_4=oppo_team_strike_bow(dataframe)\n            rsbow_5=co_bowler_bow(dataframe)\n            rsbow_6=co_bowler_eco(dataframe)\n            rsbow_7=co_bowler_str(dataframe)\n            rsbow_8=team_average(dataframe)\n            rsbow_9=team_eco_bow(dataframe)\n            rsbow_10=team_strike_rate(dataframe)\n            rsbow_11=oppo_team_wl(dataframe,info_card)\n            \n            rising_star_bow=rising_bow(rsbow_1,rsbow_2,rsbow_3,rsbow_4,rsbow_5,rsbow_6,rsbow_7,rsbow_8,rsbow_9,rsbow_10,rsbow_11)\n            #print(rising_star_bow)\n            rrr_bow=(wei_avg_bow(dataframe))\n\n            for x in range(0,len(rrr_bow)):\n                if(rrr_bow[x]!=None or rrr_bow[x]!='-inf'):\n                    rrr_bow[x].append(rising_star_bow[x])\n            \n            return rrr_bow\n            ","beb969f4":"series_bow=[]\nid_bow=[]\nplayers_bow=[]\nfor i in masters:\n    print(\"On the way\")\n    ids=[]\n    ser=[]\n    player=[]\n    for j in i[1]:\n        \n        ids.append(j)\n        ser.append(i[0])\n        \n        player.append(master_bow(j,score_card))\n        \n    series_bow.append(ser)\n    id_bow.append(ids)\n    players_bow.append(player)\n    \nprint(\"All Done\")","d8d05628":"for i in range(0,len(players_bow)):\n    for x,y in enumerate(players_bow[i]):\n#         if(players[i][x]!=None):\n#             print(players[i][x][0])\n        if(players_bow[i][x]!=None):\n            for g in range(0,len(players_bow[i][x])):\n                players_bow[i][x][g].append(id_bow[i][x])","536dacfa":"master_series=[]\nmaster_id=[]\nmaster_player=[]\nfor u,w in enumerate(series_bow):\n#     print(len(w),len(id[u]),len(players[u]))\n    normal=[]\n    values=[]\n    values_rs=[]\n    id_s=[]\n    for i in players_bow[u]:\n        if(i!=None):\n            for j in i:\n                normal.append(j[0])\n                id_s.append(j[3])\n                values_rs.append(j[2])\n                if(str(j[1])=='nan'):\n                    values.append(0)\n                else:\n                    values.append(float(j[1]))\n    uniq_normal=set(normal)\n    final=[]\n    for i,j in enumerate(uniq_normal):\n        val=0\n        val_rs=0\n        idf=[]\n        for x,y in enumerate(normal):\n            if(j==y):\n                val+=values[x]\n                val_rs+=values_rs[x]\n                idf.append(id_s[x])\n\n        final.append([j,val,val_rs,idf])\n#     master_series.append(j)\n#     master_id.append(p for p in id[u])\n#     master_player.append(b for b in final)\n    for i in range(0,len(final)):\n        master_player.append(final[i])\n        master_series.append(w[0])\n        master_id.append(id_bow[u])","1e1ba1bd":"seri=[]\nplay=[]\nwei_av=[]\nrs=[]\ni_d=[]\nfor i in range(len(master_player)):\n#     print(master_player[i])\n    seri.append(master_series[i])\n    play.append(master_player[i][0])\n\n    wei_av.append((master_player[i][1]))\n    \n    rs.append((master_player[i][2]))\n    i_d.append(master_player[i][3])","c18a4df1":"final_data=pd.DataFrame({\"Series\":seri,\"Player\":play,\"Weighted Average\":wei_av,\"Rising star\":rs,\"ID Playes\":i_d})","88884756":"final_data","0b7ed977":"# Data export\nGFG = pd.ExcelWriter('finaldata_bow.xlsx') \nfinal_data.to_excel(GFG, index = False) \n  \nGFG.save() ","3a8cc8bd":"seri = str(\"ICC World Twenty20\")     # If you want you change the series\n# seri=str(input())         # Eg. India in England ODI Series, West Indies Women in Australia ODI Series\nweight=[]\nrise=[]\nplayer=[]\n\nfor i in range(0,len(final_data[\"Weighted Average\"])):\n    if(final_data[\"Series\"][i]==seri):\n        weight.append(final_data[\"Weighted Average\"][i])\n        rise.append(final_data[\"Rising star\"][i])\n        player.append(final_data[\"Player\"][i])\n        \n      \nseries=[]\nfor i in range(0,len(weight)):\n    series.append(i)","40e94a9d":"import seaborn as sns","f7a6cb63":"import matplotlib.pyplot as plt\n%matplotlib inline\n\nsns.set_style(\"whitegrid\")\nfig = plt.figure(figsize=(12,6))\nplt.scatter(weight, rise, color=\"red\")\nplt.xlabel(\"Rising Star\", fontsize=14)\nplt.ylabel(\"Weighted average\", fontsize=14)\nplt.title(\"Series data\", fontsize=16)\nplt.show()","a71a7c30":"Bowler=pd.DataFrame({\"Weight\":weight,\"rise\":rise,\"tmp_id\":series})","78199334":"Bowler[\"rise\"].hist(color=\"pink\")","ca6c311b":"Bowler[\"Weight\"].hist(color=\"pink\")","7c85e5c5":"from sklearn.cluster import KMeans\n\nkmeans = KMeans(n_clusters=5)\nkmeans.fit(Bowler[[\"Weight\", \"rise\"]])\nBowler[\"cluster\"] = kmeans.labels_\n\nfig = plt.figure(figsize=(12,6))\n\ncolors = [\"blue\", \"sienna\", \"limegreen\", \"red\", \"black\"]\n\nfor r in range(1,6):\n    clustered_Batsmen = Bowler[Bowler[\"cluster\"] == r]\n    plt.scatter(clustered_Batsmen[\"Weight\"], clustered_Batsmen[\"rise\"], color=colors[r-1])\n    \nplt.title(seri, fontsize=16)\nplt.xlabel(\"weighted Average\", fontsize=14)\nplt.ylabel(\"Rising\", fontsize=14)\n    \nplt.show()","b8c91961":"# Batsmen = Batsmen.rename(columns={\"Player_names\": \"Player_Id\"})\nBowler = Bowler.sort_values(by ='cluster' )\nBowler.head()","d9d58aa8":"Players_bowler = pd.DataFrame({\"Player\":player,\"tmp_id\":series})\n\nBowler = Bowler[Bowler.columns].merge(Players_bowler)\nBowler.head(5)","e2e8a8b2":"# 22. Opposite Team Win Lose","33672a54":"# 12. Team Win-lose (Bowling)","1ba56f2f":"# Lets analysis for the \"ICC World Twenty20\" bowling","f4343a6a":"# Bowling Domain","c1d2d671":"# Bowlers which have best Performance\n# Ranking is in the order of index no.","a9eb0614":"# Data Preprocessing Batting Domain","3885ea92":"# 1. Weighted Average","495e93c1":"# 8. Opposite Team Average","96ad3432":"# 17. Co-bowlers Economy","4c4b086c":"# 18. Co-bowler Strike Rate","70f9ddc0":"# 7. Team Win-Lose","043eab5d":"# Formulation for data preprocessing","2a865f11":"# 4. Co-batsman Strike Rate","aacdd03c":"# Final Data Batting Domain","7473adea":"# 3. Co-batsman Average","f4b36f4b":"# Machine Learning - Clustring","a3b9457b":"# Final Data Bowling Domain","1c6e6365":"# 14. Opposite Team Average (bowling)","68592260":"# Batting Domain","afab8451":"# Lets analysis for the \"ICC World Twenty20\" batting","a366bf51":"# Data Preprocessing Bowler Domain","3e44fb13":"# 16. Co-bowlers Average","11c89893":"# 20. Team Economy","16b1a4d5":"# 11. Weighted Average Bowling","112b4bf2":"# 13. Opposite Team Economy (Bowling)","8cbd84cf":"# Machine Learning - Clustring","e0ca4cf6":"# 19. Team Average (bowling)","998ce2b4":"# 2. Co-batsman Runs","b2a64e14":"# 15. Opposite Team Strike rate (bowling)","d782399c":"# 10. Opposite Team Win-Lose","f938da39":"# Batman which have best Performance\n# Ranking is in the order of index no.","7b454bbe":"# 5. Team Average","fbfc16d2":"# 9. Opposite Team Strike","df9a0c52":"# Importing Data","2ef1b53c":"# 6. Team Strike Rate","f8c70281":"# 21. Team Strike rate"}}