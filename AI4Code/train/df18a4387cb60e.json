{"cell_type":{"e4112274":"code","d9a68fef":"code","f1e0e15a":"code","9426989d":"code","f959cd61":"code","ba53cd73":"code","e56ffa8a":"code","19db4072":"code","66a393f5":"code","c63c6099":"code","c78ff965":"code","ba2fb987":"code","7d7bbd54":"code","82f659d1":"code","fdcaf32f":"code","a7754d18":"code","c1d8ccc8":"code","9e563272":"code","755e364a":"code","42295afd":"code","d94e0625":"code","fe4a1bde":"code","98757068":"code","c1a38f75":"code","d6af6004":"code","13070d4e":"code","75d7079b":"code","7c40b2a3":"code","f6e98b66":"code","5f5d168e":"code","dfe897ad":"code","b0437e03":"code","9312cb91":"code","f9dc2fb3":"code","66d9d94c":"code","44745b1e":"code","3e8b8b54":"code","38621298":"code","caca2982":"code","afd14cdb":"code","69727a8c":"code","346810d1":"code","dd0a3212":"code","ad44ad27":"code","bcb8c2d0":"code","9dca1304":"code","f445f828":"code","59930da6":"code","5575b89e":"code","6508e3b9":"code","214962c9":"code","c454a5b0":"code","0a7d7d3b":"code","19a57187":"code","cd244e84":"code","d89287f6":"code","653e7def":"code","34d1817d":"code","11ee0431":"code","77ce7fb7":"code","2c89373c":"code","38c7dbde":"code","fe436e98":"code","d95a571d":"code","1898f9e6":"code","53b0ef85":"code","203e4d18":"code","7c30dd59":"code","cf5c4937":"code","6d0fab45":"code","f2d662de":"code","960cc34b":"code","c16d461e":"code","91cdecd7":"code","3b00d445":"markdown","24793d18":"markdown","1fd348ba":"markdown","5c8fb6bb":"markdown","5661a953":"markdown","3cd9bf77":"markdown","79287f6e":"markdown","f396ad44":"markdown","2ac587f1":"markdown","98b6de99":"markdown","c7a9fad6":"markdown"},"source":{"e4112274":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d9a68fef":"df = pd.read_csv('\/kaggle\/input\/suicide-rates-overview-1985-to-2016\/master.csv')\ndf.info()","f1e0e15a":"# correlation map\nf,ax = plt.subplots(figsize=(8,8))\nsns.heatmap(df.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax)\nplt.show()","9426989d":"df.head()","f959cd61":"df.columns","ba53cd73":"df_suicide = (df.suicides_no \/ 1000)+ 2000\n\ndf_suicide.plot(kind='line', label='Suicide No', linewidth=2, alpha=.5, grid=True, linestyle=':')\ndf.year.plot(label='Year', linewidth=2, alpha=.5, grid=True, linestyle='-.')\n\nplt.legend(loc='upper left')\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.title('Line Plot')\nplt.show()","e56ffa8a":"df.plot(kind='scatter', x='population', y='suicides_no', alpha=.5)\nplt.xlabel('Population')\nplt.ylabel('Suicide No\\'s')\nplt.title('Population - Suicide No Scatter Plot')\nplt.show()","19db4072":"df['suicides\/100k pop'].plot(kind='hist',bins=10, density=1)","66a393f5":"myFilter = (df.year > 2010) & (df['suicides\/100k pop'] > 100)\ndf[myFilter]","c63c6099":"#user defined function\ndef square(x):\n    return x**2\nprint(square(4))","c78ff965":"#scope\nx=5\ny = 4\ndef scopeExample():\n    x=1\n    return x*y\nprint(x)\nprint(scopeExample())","ba2fb987":"# default args\ndef calculatePower(x, y=2):\n    return x**y\nprint(calculatePower(2))\nprint(calculatePower(2,3))","7d7bbd54":"def expArgs(*args):\n    return [i for i in args]\nprint(expArgs(1,2,3,4,5))","82f659d1":"square = lambda x: x**2\nprint(square(2))","fdcaf32f":"n = 'someone'\niterableN = iter(n)\nprint(next(iterableN))\nprint(*iterableN)","a7754d18":"df.head()","c1d8ccc8":"threshold = sum(df['gdp_per_capita ($)'])\/len(df['gdp_per_capita ($)'])\ndf['average'] = ['higher than average' if i > threshold else 'lower than average' for i in df['gdp_per_capita ($)']]\ndf.head()","9e563272":"df.shape","755e364a":"df.columns","42295afd":"df.info()","d94e0625":"print(df['country'].value_counts(dropna =False))","fe4a1bde":"df.describe()","98757068":"df.boxplot(column='HDI for year')\nplt.show()","c1a38f75":"df_ = df.head(10)\ndf_","d6af6004":"melted = pd.melt(frame=df_,id_vars = 'generation', value_vars='suicides_no')\nmelted","13070d4e":"melted = melted.head(2)\nmelted.pivot(index = 'generation', columns = 'variable',values='value')","75d7079b":"df1 = df.head(10)\ndf2 = df.tail(10)\nconc_df = pd.concat([df1,df2], axis=0, ignore_index=True)\nconc_df","7c40b2a3":"df1 = conc_df.population\ndf2 = conc_df.suicides_no\nconcat_df = pd.concat([df1,df2],axis=1)\nconcat_df","f6e98b66":"df.dtypes","5f5d168e":"df_copy = df.copy()\ndf_copy['year'] = df['year'].astype('object')\ndf_copy.dtypes","dfe897ad":"df.info()","b0437e03":"df['HDI for year'].value_counts(dropna=False)","9312cb91":"df_copy['HDI for year'].dropna(inplace=True)","f9dc2fb3":"assert df_copy['HDI for year'].notnull().all()\n# Will return nothing if we successfully dropped null values.","66d9d94c":"df_copy['HDI for year'].value_counts(dropna=False)","44745b1e":"country = ['Norway', 'Sweden', 'Denmark', 'Finland', 'Netherlands']\ncapital = ['Oslo', 'Stockholm', 'Copenhagen', 'Helsinki', 'Amsterdam']\nlabel = ['country', 'capital']\nlist_col= [country, capital]\nzipped = dict(zip(label, list_col))\nnew_df = pd.DataFrame(zipped)\nnew_df","3e8b8b54":"new_df['continent']= 'Europe'\nnew_df","38621298":"new_df['hdi_ranking'] = [1,7,11,15,10]\nnew_df","caca2982":"df1 = df.loc[:,['suicides_no', 'suicides\/100k pop']]\ndf1.plot()\nplt.show()","afd14cdb":"df1.plot(subplots=True)\nplt.show()","69727a8c":"df1.plot(kind='scatter', x='suicides_no', y='suicides\/100k pop')\nplt.show()","346810d1":"df1.plot(kind=\"hist\", y=\"suicides_no\", bins=50, range=(0,250), normed = True)\nplt.show()","dd0a3212":"fig,axes = plt.subplots(nrows=2,ncols=1)\ndf1.plot(kind='hist', y='suicides\/100k pop', bins=50, range=(0,100), normed=True, ax=axes[0])\ndf1.plot(kind='hist', y='suicides\/100k pop', bins=50, range=(0,100), normed=True, ax=axes[1], cumulative=True)\nplt.savefig('graph.png')\nplt","ad44ad27":"df.describe()","bcb8c2d0":"time_list =  ['1992-03-08']\nprint(type(time_list[0]))\ndto = pd.to_datetime(time_list)\nprint(type(dto))","9dca1304":"df2 = df.head()\ndList = [\"1992-01-10\",\"1992-02-10\",\"1992-03-10\",\"1993-03-15\",\"1993-03-16\"]\ndto = pd.to_datetime(dList)\ndf2['date'] = dto\n\ndf2 = df2.set_index('date')\ndf2","f445f828":"print(df2.loc[\"1993-03-16\"])\nprint(df2.loc[\"1992-01-10\":'1993-03-15'])","59930da6":"df2.resample('A').mean() #'M' = month, 'A'=year","5575b89e":"df2.resample('M').mean()","6508e3b9":"df2.resample('M').first().interpolate('linear')","214962c9":"df2.resample('M').mean().interpolate('linear')\n# now we will interpolate with mean unlike the first one which just fill the gap between two null data","c454a5b0":"df = pd.read_csv('\/kaggle\/input\/suicide-rates-overview-1985-to-2016\/master.csv')\ndf.head()","0a7d7d3b":"df.loc[1,['age']]","19a57187":"df[['sex', 'age']]","cd244e84":"print(type(df['age']))\nprint(type(df[['age']]))","d89287f6":"df.loc[1:10,'year':'age']","653e7def":"ff = df.suicides_no > 10000\nsf = df.year > 2010\ndf[ff & sf]","34d1817d":"df.year[df.suicides_no>11000]","11ee0431":"def div(n): return n\/2\ndf['gdp_per_capita ($)'].apply(div)","77ce7fb7":"df['gdp_per_capita ($)'].apply(lambda n : n\/2)","2c89373c":"df['no_sense'] = df.year \/ df.suicides_no\ndf.head()","38c7dbde":"print(df.index.name)\ndf.index.name = 'index'\ndf.head()","fe436e98":"df3 = df.copy()\ndf3.index = range(100,27920)\ndf3.head()","d95a571d":"df3 = df3.set_index(['population', 'suicides_no'])\ndf3.head()","1898f9e6":"dic = {\"treatment\":[\"A\",\"A\",\"B\",\"B\"],\"gender\":[\"F\",\"M\",\"F\",\"M\"],\"response\":[10,45,5,9],\"age\":[15,4,72,65]}\ndf4 = pd.DataFrame(dic)\ndf4","53b0ef85":"df4.pivot(index='treatment', columns='gender',values='response')","203e4d18":"df5 = df4.set_index(['treatment','gender'])\ndf5","7c30dd59":"df5.unstack(level=0)","cf5c4937":"df5.unstack(level=1)","6d0fab45":"df5 = df5.swaplevel(0,1)\ndf5","f2d662de":"# df.pivot(index=\"treatment\",columns = \"gender\",values=\"response\")\npd.melt(df4,id_vars=\"treatment\",value_vars=[\"age\",\"response\"])","960cc34b":"df4.groupby('treatment').mean()","c16d461e":"df4.groupby('treatment').age.max()","91cdecd7":"df4.groupby('treatment')[['age', 'response']].min()","3b00d445":"It turns out hdi for year is always NaN so I would go for population and suicides_no for scatter","24793d18":"For this graph we could say that suicide rates for 100k population is in range of 0-25 for 35 percent of the data","1fd348ba":"## Assignment 0 \nThis is an assignment notebook for DATAI's Data Science Udemy Course\n<br>https:\/\/www.kaggle.com\/kanncaa1\/data-sciencetutorial-for-beginners\n<br>https:\/\/www.udemy.com\/course\/data-science-sfrdan-uzmanlga-veri-bilimi-2\/","5c8fb6bb":"I really don't know what is the purpose of doing plot on the above but I just tried to get someting that makes sense in suicides numbers over years :))","5661a953":"We have 6 strings and 6 numerical data, all of the non-null which is great that makes 12 total columns having 27820 data","3cd9bf77":"## Continuing from Assignment 1 and further","79287f6e":"### Assignment 4","f396ad44":"Except having numbers of population as 0-1-2-3-4, I would say we could fit a line in this graph around 10 degrees or something close to that and if population increases, suicide no is most likely will increase","2ac587f1":"### Assignment 3","98b6de99":"### Assignment 2","c7a9fad6":"I believe we can use HDI for year and gdp_per_capita colums for plotting bc they are directly proportional(0.8 almost 1) to eachother. Also, could use population and suicide_no columns which has good correlation."}}