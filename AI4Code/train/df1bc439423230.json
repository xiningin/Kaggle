{"cell_type":{"9df23219":"code","25a5ed7d":"code","791205a0":"code","b61528bc":"code","c6a94d59":"markdown"},"source":{"9df23219":"## Version 1:\n## int 32 for user id\n## Simple Mean of answered Correctly for Each  User Id","25a5ed7d":"import riiideducation\nimport dask.dataframe as dd\n\nenv = riiideducation.make_env()","791205a0":"user_acc = dd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/train.csv', \n                usecols=[2,7], dtype={'user_id': 'int32','answered_correctly':'int8'}\n              ).query('answered_correctly != -1').groupby('user_id')['answered_correctly'].mean().compute().to_dict()\n","b61528bc":"def add_user_acc(x):\n    if x in user_acc.keys():\n        return user_acc[x]\n    else:\n        return 0.5\n\niter_test = env.iter_test()\nbatch = 0 \nfor (test_df, sample_prediction_df) in iter_test:\n    test_df['answered_correctly'] = test_df['user_id'].apply(add_user_acc).values\n    env.predict(test_df.loc[test_df['content_type_id'] == 0, ['row_id', 'answered_correctly']])\n    print(\"Batch Done : \" , batch)\n    batch += 1","c6a94d59":"Description :\n1. In this notebook I have tried First Submission of My Competition .\n2. Rather than simply Taking Mean of Content Ids , I am trying to take mean of User Ids and Based on their number of correct answers we are predicting ! \n3. This is obiviously not a good solution as it causes target leakage describe [here](https:\/\/www.kaggle.com\/c\/riiid-test-answer-prediction\/discussion\/189437)\n4. More to add is Rolling Average and Bayesian Averages ! "}}