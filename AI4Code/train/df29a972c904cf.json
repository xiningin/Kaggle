{"cell_type":{"89f0e482":"code","7f4715b7":"code","91fdf5db":"code","7464c3b9":"code","99aa1bf2":"code","94c14d51":"code","6de7a001":"code","71a74d6e":"code","ddf3b945":"code","018233ad":"code","02d158d1":"code","0f1ff40b":"code","759859b9":"code","aef25984":"code","cef2089c":"code","0a955c84":"code","a3fe0a9c":"code","89794955":"code","4ca67498":"code","779a4e5d":"code","67ee7bb4":"code","d1d3cee6":"code","ff8617c7":"code","ef14d489":"code","cd81a79a":"code","2762dc42":"code","893dd46f":"code","12866fe3":"code","e7e8f599":"markdown","37e50563":"markdown","d15b2233":"markdown","1ce364c1":"markdown","ef697c70":"markdown","361cd0ba":"markdown","0fda35b8":"markdown","35a8e04f":"markdown","e93a06f2":"markdown","980969c5":"markdown","f65d1386":"markdown","21bb3de5":"markdown","933b4365":"markdown","438233f7":"markdown","bb41fbfc":"markdown","9b7b092d":"markdown","eaec6965":"markdown","92b178dc":"markdown","9784c6a5":"markdown","8aadde47":"markdown","442b8d45":"markdown","76f1e81f":"markdown","6cd02bab":"markdown","d55317a4":"markdown","a4b959c3":"markdown","40bc6635":"markdown","4d80fb6a":"markdown","3e5483e9":"markdown","82ac997a":"markdown"},"source":{"89f0e482":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\nimport os","7f4715b7":"data = pd.read_csv('\/kaggle\/input\/inauguracao-de-estacoes-do-metrosp-e-da-cptm\/inauguracoes.csv')\nprint(f'Dataset shape -> {data.shape}')\ndata.head()","91fdf5db":"data[0]","7464c3b9":"data.iloc[0]","99aa1bf2":"data.describe()","94c14d51":"print(f'M\u00e9dia: {data.Linha.mean()}')\nprint(f'Desvio: {data.Linha.std()}')\nprint(f'Max: {data.Linha.max()}')\nprint(f'Min: {data.Linha.min()}')\nprint(f'Quantis (25%, 50%, 75%, 100%): {data.Linha.quantile(.25)}, {data.Linha.quantile(.5)}, {data.Linha.quantile(.75)}, {data.Linha.quantile(1)}')","6de7a001":"data.info()","71a74d6e":"data.isna()","ddf3b945":"data.isna().sum()","018233ad":"data.isna().sum().sum()","02d158d1":"print(f'Number of unique stations: {data.Nome.nunique()}')\ndata.Nome.unique()","0f1ff40b":"print(f'O que a fun\u00e7\u00e3o duplicated retorna: \\n{data.Nome.duplicated()}\\n____')\n\nprint('Esta\u00e7\u00f5es duplicadas:')\ndata[data.Nome.duplicated()]","759859b9":"data[(data.Nome == 'Luz') | (data.Nome == 'Santa Cruz')]","aef25984":"data[(data.Nome == 'Luz') & (data.Constru\u00e7\u00e3o == 'Metr\u00f4')]","cef2089c":"data[(data.Nome == 'Luz') & ~(data.Constru\u00e7\u00e3o == 'Metr\u00f4')]","0a955c84":"data_without_duplicates = data.drop_duplicates(subset=['Nome'], keep='last')\ndata_without_duplicates.Nome.duplicated().sum()","a3fe0a9c":"data[data.Idade > 40]","89794955":"data[data.Idade < 4]","4ca67498":"data.Inaugura\u00e7\u00e3o.head()","779a4e5d":"data['Inaugura\u00e7\u00e3o'] = pd.to_datetime(data['Inaugura\u00e7\u00e3o'])\ndata.Inaugura\u00e7\u00e3o.head()","67ee7bb4":"data['Ano'] = pd.DatetimeIndex(data.Inaugura\u00e7\u00e3o).year\ndata['M\u00eas'] = pd.DatetimeIndex(data.Inaugura\u00e7\u00e3o).month\ndata['Dia'] = pd.DatetimeIndex(data.Inaugura\u00e7\u00e3o).day\ndata.head()","d1d3cee6":"data.Inaugura\u00e7\u00e3o.sort_values()","ff8617c7":"data.sort_values(by=['Inaugura\u00e7\u00e3o'])","ef14d489":"data.sort_values(by=['Nome'])","cd81a79a":"data['isCPTM'] = (data.Constru\u00e7\u00e3o == 'CPTM').astype('int')\ndata.head()","2762dc42":"data['isOld'] = (data.Idade > 40).astype('int')\ndata['hasZ'] = data.Nome.str.contains('z').astype('int')\ndata['ageIsEven'] = (data.Idade % 2 == 0).astype('int')\ndata['yearIsOdd'] = (data.Ano % 2 != 0).astype('int')\ndata['isChristmasMonth'] = (data.M\u00eas == 12).astype('int')\ndata['isSecondSemester'] = (data.M\u00eas >= 6).astype('int')\ndata['isVacation'] = ((data.M\u00eas == 7) | (data.M\u00eas == 1)).astype('int')\n\ndata.head()","893dd46f":"data.Ano.value_counts()","12866fe3":"xy = data.Ano.value_counts()\n\nplt.figure(figsize=(50,10))\nplt.bar(xy.index.astype('str'), height=xy.values);","e7e8f599":"Vemos acima que ele verifica o valor de uma c\u00e9lula, retornando verdadeiro ou falso caso ela seja nula (ou n\u00e3o). Ainda n\u00e3o \u00e9 o que queremos.\n\nO que falta \u00e9 chamar o m\u00e9todo ```sum()```, para que os valores sejam somados (verdadeiro = 1 e falso = 0), e assim checarmos por coluna a exist\u00eancia de nulos:","37e50563":"Al\u00e9m da ordena\u00e7\u00e3o levando em considera\u00e7\u00e3o o tempo, podemos ordenar por qualquer outra coluna, como por exemplo, pelo nome:","d15b2233":"Como resultado, obtemos o n\u00famero de ocorr\u00eancias de cada um dos valores, o que pode ser particularmente \u00fatil para visualiza\u00e7\u00f5es, verificarmos se os dados est\u00e3o desbalanceados (mais de uma classe, menos das outras) dentro do contexto de classifica\u00e7\u00e3o, e mais.\n\nComo exemplo, iremos visualizar esses dados (n\u00e3o se preocupe em como fazer a visualiza\u00e7\u00e3o):","1ce364c1":"Lembre-se: a fun\u00e7\u00e3o ```sort_values``` tamb\u00e9m retorna um novo ```DataFrame\/Series```, e voc\u00ea deve atribu\u00ed-lo caso deseje usar esse novo df. Tamb\u00e9m \u00e9 poss\u00edvel fazer isso ```inplace```.\n\nEssa fun\u00e7\u00e3o tamb\u00e9m pode considerar diferentes eixos na hora de ordenar (linhas ou colunas).","ef697c70":"Podemos perceber que nosso dataset possui duplicatas, j\u00e1 que s\u00e3o 169 esta\u00e7\u00f5es mas 184 linhas.\n\nQuais s\u00e3o as linhas duplicadas?\nO m\u00e9todo ```data.Nome.duplicated()``` pode nos ajudar com essa pergunta. Ele retorna verdadeiro ou falso.\n\nComo queremos observar todas as informa\u00e7\u00f5es dessas esta\u00e7\u00f5es duplicadas, queremos as linhas que s\u00e3o ```True``` no retorno desse m\u00e9todo.\nAqui entram os filtros!\n\n# Filtros\n\nPodemos filtrar nosso dataset com o retorno booleano (verdadeiro ou falso) do m\u00e9todo ```data.Nome.duplicated()``` da seguinte maneira:","361cd0ba":"Iremos convert\u00ea-la para ```datetime``` com a fun\u00e7\u00e3o do Pandas ```pd.to_datetime()```:","0fda35b8":"Saber manipular dados e realizar algumas transforma\u00e7\u00f5es neles \u00e9 essencial. Nesse tutorial, iremos passar por fun\u00e7\u00f5es importantes da biblioteca Pandas e utilizar o dataset de \"Inaugura\u00e7\u00e3o de Esta\u00e7\u00f5es de Metr\u00f4 e da CPTM\" para exemplific\u00e1-las.\n\nPara esse tutorial, \u00e9 necess\u00e1rio conhecer o b\u00e1sico de Python (fun\u00e7\u00f5es, bibliotecas, etc).","35a8e04f":"# Convers\u00f5es de tempo (datetime)\n\nSaber lidar com dados temporais \u00e9 importante. O primeiro passo \u00e9 convert\u00ea-los para o tipo certo, facilitando a sua manipula\u00e7\u00e3o, constru\u00e7\u00e3o de novas\nfeatures e at\u00e9 mesmo que realizemos filtros baseados em tempo.\n\nNo nosso dataset, temos a coluna de Inaugura\u00e7\u00e3o, que representa a data de inaugura\u00e7\u00e3o de uma esta\u00e7\u00e3o. Podemos observar que o tipo dela \u00e9 ```object```:","e93a06f2":"# Contagem de valores\n\nPor fim, iremos verificar como contar a ocorr\u00eancia de valores em nosso dataset.\n\nA fun\u00e7\u00e3o ```value_counts()``` permite que fa\u00e7amos isso. Basta passar uma coluna:","980969c5":"O erro nos diz essa chave n\u00e3o existe, porque na verdade, a busca procura pelas colunas do dataset.\n\nPara acessar uma linha pelo valor de sua posi\u00e7\u00e3o, podemos usar a fun\u00e7\u00e3o ```data.iloc[idx]```:","f65d1386":"Dessa forma, podemos derivar novas features com facilidade:","21bb3de5":"# Unicidade e filtros\n\nUma pergunta interessante de se fazer, considerando nossos dados, seria saber quais s\u00e3o as esta\u00e7\u00f5es de Metr\u00f4 ou CPTM que foram inauguradas.\nTemos a coluna ```Nome``` que diz o nome de uma esta\u00e7\u00e3o, mas n\u00e3o sabemos se esse nome pode estar em mais de uma linha.\n\nPara isso, podemos utilizar o m\u00e9todo ```data.Nome.unique()```, que nos diz os valores \u00fanicos naquela coluna.\nTamb\u00e9m, podemos querer saber apenas o n\u00famero de valores \u00fanicos nessa coluna, o que pode ser feito com o m\u00e9todo ```data.Nome.nunique()```:","933b4365":"Podemos tamb\u00e9m querer informa\u00e7\u00f5es sobre todas as colunas, com informa\u00e7\u00f5es sobre valores nulos, tipo de dados da coluna. A fun\u00e7\u00e3o ```data.info()``` permite isso:","438233f7":"# Introdu\u00e7\u00e3o\n\nPara carregar os dados com a biblioteca Pandas, iremos utilizar o m\u00e9todo ```pd.read_csv()```.\nBasta passarmos para a fun\u00e7\u00e3o o local onde se encontram os dados, que no nosso caso, s\u00e3o do tipo ```.csv``` (outros par\u00e2metros podem ser encontrados na [documenta\u00e7\u00e3o](pandas.pydata.org\/)).\nO Pandas carrega nossos dados em tipo chamado ```DataFrame```.\n\nPara verificarmos o tamanho do dataset utilizamos o ```.shape``` em nosso DataFrame, ou seja, ```data.shape```.\n\nTamb\u00e9m, queremos ver um trecho dos nossos dados, e podemos ver os 5 primeiros itens com ```data.head()```.","bb41fbfc":"Para acessar o valor de uma linha, n\u00e3o fazemos como nas listas, de selecionar um elemento pelo index. Veja sa\u00edda, caso tentemos fazer isso:","9b7b092d":"Por fim, verificamos que n\u00e3o h\u00e1 nenhum dado faltante em nosso dataset.","eaec6965":"Tamb\u00e9m pode ser o caso em que desejamos retirar os valores duplicados, o que pode ser feito com a fun\u00e7\u00e3o ```data.drop_duplicates()```.\n\nA fun\u00e7\u00e3o remove o item duplicado, levando em considera\u00e7\u00e3o a coluna de compara\u00e7\u00e3o. Ela retorna um novo ```DataFrame``` caso o par\u00e2metro ```inplace``` n\u00e3o seja utilizado (```inplace=True```).\n\nUm par\u00e2metro importante dessa fun\u00e7\u00e3o \u00e9 o ```keep```. Como padr\u00e3o, o Pandas mant\u00e9m a primeira ocorr\u00eancia daquele valor, mas podemos alter\u00e1-lo para manter o \u00faltimo.\nPara nosso estudo, isso acaba n\u00e3o fazendo tanta diferen\u00e7a.","92b178dc":"# Manipulando dados com Pandas","9784c6a5":"# Criando novas colunas (features)\n\nO processo de criar novas features (caracter\u00edsticas) tamb\u00e9m \u00e9 essencial. Muitas vezes, derivar uma nova feature pode melhorar (e muito) a performance do seu modelo.\nEla eleva a \"riqueza\" das informa\u00e7\u00f5es a serem utilizadas.\n\nExistem formas mais program\u00e1ticas de gerar features, como [features polinomiais](https:\/\/scikit-learn.org\/stable\/modules\/preprocessing.html#generating-polynomial-features), mas iremos fazer isso\nde uma forma um pouco mais manual, apenas para dar uma ideia\/sugest\u00e3o.\n\nDentro do nosso contexto, poderiamos estar trabalhando em um problema de decidir a qualidade ou efici\u00eancia de uma esta\u00e7\u00e3o de metr\u00f4.\nPensando nesse problema (imagin\u00e1rio), iriamos nos perguntar:\n\n1. Ser\u00e1 que a esta\u00e7\u00e3o ser da CPTM faz diferen\u00e7a?\n2. Ser antiga ou nova muda algo?\n\nOutros pontos, que talvez fossem meio inusitados de se perguntar, mas eventualmente poderiam evidenciar algo n\u00e3o facilmente percebido nos dados, seria:\n\n1. O nome da esta\u00e7\u00e3o cont\u00e9m z?\n2. A idade da esta\u00e7\u00e3o \u00e9 par?\n3. Ela foi inaugurada no m\u00eas do Natal?\n4. Ela foi inaugurada no segundo semestre?\n5. Ela foi inaugurada nas f\u00e9rias (f\u00e9rias sendo janeiro e julho)?\n\nCada uma dessas perguntas poderia gerar uma nova feature, como exemplificado abaixo:","8aadde47":"# FIM\n\nNesse notebook, passamos por alguns dos pontos mais importantes quando falamos de manipula\u00e7\u00e3o de dados.\nVimos como descrever uma ou mais colunas, checar se ela cont\u00e9m valores nulos, como acessar os valores de um dataset.\nTamb\u00e9m, como criar novas colunas derivadas de informa\u00e7\u00f5es que j\u00e1 temos (feature engineering), lidar com dados de tempo, ordenar e filtrar valores.\n\nSe voc\u00ea gostou do notebook, d\u00ea um up :)\n\nSugest\u00f5es de melhoria, cr\u00edticas e qualquer mensagem que quiser passar, deixe nos coment\u00e1rios!\n\n\nEsse notebook foi criado para uma apresenta\u00e7\u00e3o no GT Estudos do [BeeData](https:\/\/www.facebook.com\/BeeDataUSP\/). Fique \u00e0 vontade para entrar em contato!","442b8d45":"Os filtros tamb\u00e9m podem ser aplicados as demais colunas.\n\nTemos abaixo o exemplo com as idades das esta\u00e7\u00f5es. Podemos querer aquelas com mais de 40 anos (mais antigas), ou com menos de 4 anos (mais recentes).","76f1e81f":"Bibliotecas que iremos utilizar:","6cd02bab":"T\u00f3picos\n- como carregar dados\n- valores nulos\n- filtros\n- ver m\u00e1ximo, m\u00e9dia, mediana\n- contar valores, ordena\u00e7\u00e3o","d55317a4":"Para investigar mais a fundo as informa\u00e7\u00f5es de uma esta\u00e7\u00e3o que est\u00e1 duplicada, podemos selecionar algumas delas, e filtr\u00e1-las pelo nome.\n\nNo Pandas, podemos encadear filtros (com ```or``` e ```and```), mas a sintaxe muda:\n1. ```or``` -> |\n2. ```and``` -> &\n3. ```not``` -> ~\n\nPor exemplo, iremos filtrar:\n1. Esta\u00e7\u00f5es com nome Luz ou Santa Cruz\n2. Esta\u00e7\u00f5es com nome Luz e constru\u00eddas pelo Metr\u00f4\n3. Esta\u00e7\u00f5es com nome Luz e n\u00e3o constru\u00eddas pelo Metr\u00f4","a4b959c3":"# Ordena\u00e7\u00e3o de valores\n\nOutro ponto que \u00e9 interessante \u00e9 conseguirmos ordenar nossos dados.\n\nIsso pode ser feito tanto para ```Series``` quanto ```DataFrame```. Podemos ver alguns exemplos abaixo,\nque levam em considera\u00e7\u00e3o a data de inaugura\u00e7\u00e3o da esta\u00e7\u00e3o:","40bc6635":"Seria poss\u00edvel obter esses valores por meio das fun\u00e7\u00f5es de m\u00e1ximo, m\u00ednimo, desvio padr\u00e3o e dos quantis:","4d80fb6a":"Uma outra alternativa, para checar a exist\u00eancia de nulos entre todas as colunas, \u00e9 chamar o m\u00e9todo ```sum()``` mais uma vez:","3e5483e9":"# Valores nulos\n\nUm ponto bem importante para competi\u00e7\u00f5es \u00e9 verificarmos valores nulos. Tanto para que medidas fa\u00e7am mais sentido (e.g. a m\u00e9dia) quanto para nossos modelos, valores nulos podem impactar nossa avalia\u00e7\u00e3o, portanto, \u00e9 necess\u00e1rio trat\u00e1-los de alguma forma. Existem diferentes t\u00e9cnicas para inputar dados, que n\u00e3o iremos abordar aqui, mas valem a [refer\u00eancia](https:\/\/scikit-learn.org\/stable\/modules\/impute.html).\n\nUm passo inicial, \u00e9 verificar a exist\u00eancia de valores nulos. O m\u00e9todo ```data.info()``` permite que visualizemos a exist\u00eancia deles por colunas, o que pode ser chato de ver quando o nosso n\u00famero de colunas \u00e9 grande. Uma forma mais pr\u00e1tica \u00e9 utilizar o m\u00e9todo do Pandas ```data.isna()```.","82ac997a":"Para uma descri\u00e7\u00e3o das colunas num\u00e9ricas, com algumas medidas de posi\u00e7\u00e3o, m\u00e1ximo e m\u00ednimo, podemos executar ```data.describe()```:"}}