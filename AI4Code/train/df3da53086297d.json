{"cell_type":{"13b70b9b":"code","2499ec13":"code","069fe48b":"code","e2d5d2a9":"code","2e68daf4":"code","4c63db1c":"code","6f6e1997":"code","87c4d3e3":"code","18dd9d8f":"code","490ed483":"code","c0ef922e":"code","b1a5e85f":"code","4372ec81":"code","24dcaace":"code","025d7115":"code","0ef78a81":"code","1b093850":"code","bf1c502f":"code","4da7a8aa":"code","e354cccf":"code","641a0318":"code","9bb7a4b6":"markdown","8d432b63":"markdown","9ff22a05":"markdown","daaf9f88":"markdown","140e2fd0":"markdown","0f1d6d78":"markdown","06225a6f":"markdown","c0f3da2b":"markdown","a7aa5a00":"markdown","900b2f44":"markdown","38236567":"markdown","54da2408":"markdown","7d804281":"markdown","736bd7d0":"markdown","41e4776d":"markdown","20a712d7":"markdown","8f5da27c":"markdown","f9fa59de":"markdown","736e6abe":"markdown","260fd34a":"markdown"},"source":{"13b70b9b":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn           as sns\nimport plotly.graph_objs as go\nimport plotly.express    as px \nimport nltk\nimport re\nimport string\n\nfrom scipy.stats import norm\nfrom wordcloud   import WordCloud, STOPWORDS\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom wordcloud import WordCloud,STOPWORDS\nstopwords = set(STOPWORDS)\n\nfrom textblob import TextBlob\nimport re\nfrom collections import Counter\n\nfrom sklearn.metrics import classification_report,accuracy_score,confusion_matrix\nfrom IPython.display import Markdown as md\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","2499ec13":"tweets = pd.read_csv(\"\/kaggle\/input\/pfizer-vaccine-tweets\/vaccination_tweets.csv\")","069fe48b":"tweets.head()","e2d5d2a9":"tweets.info()","2e68daf4":"tweets.describe()","4c63db1c":"#Number of rows and columns in the dataset\nprint(\"There are {} rows and {} columns in the dataset.\".format(tweets.shape[0],tweets.shape[1]))","6f6e1997":"text = \",\".join(review for review in tweets.text if 'COVID' not in review and 'https' not in review and 'Covid' not in review)\nwordcloud = WordCloud(max_words=200, colormap='Set2',background_color=\"black\").generate(text)\nplt.figure(figsize=(15,10))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.title('Prevalent words in tweets',fontsize=19)\nplt.show()","87c4d3e3":"plt.figure(figsize=(10,12))\nsns.barplot(tweets[\"user_location\"].value_counts().values[0:10],\n            tweets[\"user_location\"].value_counts().index[0:10]);\nplt.title(\"Top 10 Countries with maximum tweets\",fontsize=14)\nplt.xlabel(\"Number of tweets\",fontsize=14)\nplt.ylabel(\"Country\",fontsize=14)\nplt.show()","18dd9d8f":"plt.figure(figsize=(15, 6))\nsns.heatmap(tweets.isnull(), cbar=True, cmap='Paired_r')\nplt.xlabel(\"Column_Name\", size=14, weight=\"bold\")\nplt.title(\"Places of missing values in column\",fontweight=\"bold\",size=14)\nplt.show()","490ed483":"def unique_values_funct(data_frame):\n    unique_dataframe = pd.DataFrame()\n    unique_dataframe['Features'] = data_frame.columns\n    uniques = []\n    for col in data_frame.columns:\n        u = data_frame[col].nunique()\n        uniques.append(u)\n    unique_dataframe['Uniques'] = uniques\n    return unique_dataframe\n\nudf = unique_values_funct(tweets)\n\nf, ax = plt.subplots(1,1, figsize=(10,5))\nsns.barplot(x=udf['Features'], y=udf['Uniques'], alpha=0.8)\nplt.title('Bar plot for unique values in each column', fontsize=14)\nplt.ylabel('Unique values', fontsize=14)\nplt.xlabel('Columns', fontsize=14)\nplt.xticks(rotation=90)\nplt.show()","c0ef922e":"tweets[\"num of words in text\"] = tweets[\"text\"].apply(lambda x: len(x))\nplt.figure(figsize=(10,7))\nsns.kdeplot(tweets[\"num of words in text\"],shade=True, color='m')\nplt.title(\"Distribution of words in text column\")\nplt.xlabel(\"Number of words\")\nplt.show()","b1a5e85f":"username_count = tweets['user_name'].value_counts().reset_index().rename(columns={\n    'user_name':'tweet_count','index':'user_name'})\n\nplt.figure(figsize=(8, 10))\nsns.barplot(y='user_name',x='tweet_count',tweets=username_count.head(10))\ny=username_count['tweet_count'].head(20)\nfor index, value in enumerate(y):\n    plt.text(value, index, str(value),fontsize=12)\nplt.title('Users with maximum tweets',weight='bold', size=13)\nplt.ylabel('Username', size=12, weight='bold')\nplt.xlabel('TweetCount', size=12, weight='bold')\nplt.show()","4372ec81":"plt.figure(figsize=(5, 5))\nsns.countplot(x =\"user_verified\",data=tweets, palette=\"Set1\")\nplt.title(\"Verified user accounts or not ?\")\nplt.xticks([False,True],['Unverified','Verified'])\nplt.show()","24dcaace":"plt.figure(figsize=(15,5))\nsrc = tweets['source'].value_counts().sort_values(ascending=False)\nsource = src.head(10)\nsource.plot.bar(color=['red', 'green', 'blue', 'black','cyan','pink','purple','violet','yellow','orange'])\nplt.title('Platform with maximum number of tweets',size=13)\nplt.xlabel('User Platform',size=13)\nplt.ylabel('Tweet Count',size=13)\nplt.show()","025d7115":"pla = tweets['source'][tweets['user_location'] == 'India'].value_counts().sort_values(ascending=False)\nexplode = (0, 0.1, 0, 0,0.01) \nplt.figure(figsize=(8,8))\npla[0:5].plot(kind = 'pie', title = 'Most Tweet Sources used in India', autopct='%1.1f%%',shadow=True,explode = explode)\nplt.show()","0ef78a81":"pla = tweets['source'][tweets['user_location'] == 'Malaysia'].value_counts().sort_values(ascending=False)\nexplode = (0, 0.1) \nplt.figure(figsize=(8,8))\npla[0:2].plot(kind = 'pie', title = 'Most Tweet Sources used in Malaysia', autopct='%1.1f%%',shadow=True,explode = explode)\nplt.show()","1b093850":"pla = tweets['source'][tweets['user_location'] == 'United States'].value_counts().sort_values(ascending=False)\nexplode = (0, 0.1, 0, 0) \nplt.figure(figsize=(8,8))\npla[0:4].plot(kind = 'pie', title = 'Most Tweet Sources used in United States', autopct='%1.1f%%',shadow=True,explode = explode)\nplt.show()","bf1c502f":"top_tags=tweets['hashtags'].value_counts().sort_values(ascending=False)\nplt.figure(figsize=(8,8))\nexplode = (0, 0.1, 0, 0,0.01) \n\ntop_tags[0:5].plot(kind = 'pie',title = 'Top 5 hashtags',autopct='%1.1f%%',shadow=True,explode = explode)","4da7a8aa":"tweets[\"date\"] = pd.to_datetime(tweets[\"date\"])\ntweets[\"Month\"] = tweets[\"date\"].apply(lambda x : x.month)\ntweets[\"day\"] = tweets[\"date\"].apply(lambda x : x.dayofweek)\ndmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\ntweets[\"day\"] = tweets[\"day\"].map(dmap)\nplt.title(\"Day with maximun tweets\")\nsns.countplot(tweets[\"day\"])","e354cccf":"y = tweets['is_retweet']\nfig, ax = plt.subplots(figsize=(7, 7))\ncount = Counter(y)\nax.pie(count.values(), labels=count.keys(), autopct=lambda p:f'{p:.2f}%')\nax.set_title('is_retweet?')\nplt.show()","641a0318":"plt.figure(figsize=(10,8))\nsns.heatmap(tweets.drop(columns=['id','is_retweet']).corr(), square=True, annot=True)\nplt.show()","9bb7a4b6":"### 3. Heatmap representation of missing values","8d432b63":"### 9. Plot top 5 hashtags","9ff22a05":"### 11. is_retweet?","daaf9f88":"# Visualizing Pfizer Vaccine Tweets","140e2fd0":"### 12. Plot correlation between features","0f1d6d78":"#### 8.3> Most Tweet Sources used in United States","06225a6f":"### 5. Distribution of words in text column","c0f3da2b":"## Visualization","a7aa5a00":"### 6. Users with maximum tweets(Top 20)","900b2f44":"### Load all the required libraries","38236567":"### Load the dataset","54da2408":"### 7. Plot verified users account\n","7d804281":"#### 8.2> Most Tweet Sources used in Malaysia","736bd7d0":"![u8vm2hl_pfizer-covid-vaccine-650_625x300_09_November_20.jpg](attachment:u8vm2hl_pfizer-covid-vaccine-650_625x300_09_November_20.jpg)","41e4776d":"### Number of Tweets by location(Top 10)","20a712d7":"### 8. Plot platform with maximum number of tweets\u00b6\n","8f5da27c":"### 1. Word cloud","f9fa59de":"#### 8.1> Most Tweet Sources used in India","736e6abe":"### 4. Bar plot of unique values in each column","260fd34a":"### 10. Day with most number of tweets"}}