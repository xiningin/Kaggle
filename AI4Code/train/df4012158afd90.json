{"cell_type":{"8d88bbac":"code","9d874e8f":"code","a79fd1d3":"code","c97766d9":"code","0e5ce250":"code","fb4eb302":"code","cf048884":"code","4b40ce6c":"code","01a28426":"code","5844d69c":"code","ef9ead23":"code","aac3f450":"code","480c2786":"code","90f86fd2":"code","9811cef4":"code","ee36bcab":"code","511941fc":"markdown","683e5466":"markdown","4704c238":"markdown","d4336a73":"markdown","c9f8378a":"markdown","ad1fbb86":"markdown","a8018528":"markdown","888f3673":"markdown","f6998b20":"markdown","eb3d03c2":"markdown","d5ccaa89":"markdown","e7a8a392":"markdown","4ffe341b":"markdown","4f7fd833":"markdown","c214c0f1":"markdown","987e802d":"markdown","7fbc6b43":"markdown","1822e5a3":"markdown"},"source":{"8d88bbac":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly\nplotly.offline.init_notebook_mode (connected = True)\n\n","9d874e8f":"data=pd.read_csv('..\/input\/covid19-data-from-john-hopkins-university\/CONVENIENT_global_confirmed_cases.csv')\ndata2=pd.read_csv('..\/input\/covid19-data-from-john-hopkins-university\/CONVENIENT_global_deaths.csv')","a79fd1d3":"data.head()","c97766d9":"data.dropna(axis=0,inplace=True)\ndata2.dropna(axis=0,inplace=True)","0e5ce250":"data['Country\/Region']=pd.to_datetime(data['Country\/Region'])\ndata2['Country\/Region']=pd.to_datetime(data2['Country\/Region'])","fb4eb302":"import plotly.graph_objects as go\nimport numpy as np\nfrom plotly.subplots import make_subplots\n\n# Create figure\nfig = go.Figure()\n\n# Add traces, one for each slider step\nfor step in data.columns.values[1:]:\n    fig.add_trace(\n        go.Scatter(\n            visible=True,\n            line=dict( width=2),\n            name=\"Confirmed cases in \" + step,\n            x=data['Country\/Region'],\n            y=data[step].values    ,\n            marker=dict(color=[i for i in range(len(data2.columns.values[1:]))])))\n\n\n    \nsteps = []\nfor i in range(len(fig.data)):\n    step = dict(\n        method=\"update\",\n        args=[{\"visible\": [False] * len(fig.data)},\n              {\"title\": \"Slider switched to country: \" + data.columns.values[1:][i]}],  # layout attribute\n    )\n    step[\"args\"][0][\"visible\"][i] = True  # Toggle i'th trace to \"visible\"\n    steps.append(step)\nsliders = [dict(\n    active=100,\n    currentvalue={\"prefix\": \"Frequency: \"},\n    steps=steps\n)]\n\nfig.update_layout(\n         title_text=\"Change The Slider To Change To Different Countries\",\n\n    sliders=sliders\n)\n\nfig.show()\n\n","cf048884":"figg = go.Figure()\n\n# Add traces, one for each slider step\nfor step in data2.columns.values[1:]:\n    figg.add_trace(\n        go.Scatter(\n            visible=True,\n            line=dict( width=2),\n            name=\"Deaths in \" + step,\n            x=data2['Country\/Region'],\n                        y=data2[step].values,\n            marker=dict(color=[i for i in range(len(data2.columns.values[1:]))])))\nsteps = []\nfor i in range(len(figg.data)):\n    step = dict(\n        method=\"update\",\n        args=[{\"visible\": [False] * len(figg.data)},\n              {\"title\": \"Slider switched to country: \" + data2.columns.values[1:][i]}],  # layout attribute\n    )\n    step[\"args\"][0][\"visible\"][i] = True  # Toggle i'th trace to \"visible\"\n    steps.append(step)\nsliders = [dict(\n    currentvalue={\"prefix\": \"Frequency: \"},\n    steps=steps\n)]\n\nfigg.update_layout(\n     title_text=\"Change The Slider To Change To Different Countries\",\n    sliders=sliders\n)\n\nfigg.show()\n\n","4b40ce6c":"import plotly.graph_objects as go\nimport numpy as np\nfrom plotly.subplots import make_subplots\n\n# Create figure\nfig = make_subplots(specs=[[{\"secondary_y\": True}]])\n\n# Add traces, one for each slider step\nfor step in data.columns.values[1:]:\n    fig.add_trace(\n        go.Scatter(\n            visible=True,\n            line=dict(color=\"red\", width=2),\n            name=\"Total Confirmed Cases in  \" + step,\n            x=data['Country\/Region'],\n            y=data[step].values,\n            marker=dict(color=[i for i in range(len(data2.columns.values[1:]))])),    secondary_y=False,\n)\n\nsteps = []\nfor i in range(len(fig.data)):\n    step = dict(\n        method=\"update\",\n        args=[{\"visible\": [False] * len(fig.data)},\n              {\"title\": \"Slider switched to country: \" + data.columns.values[1:][i]}],  # layout attribute\n    )\n    step[\"args\"][0][\"visible\"][i] = True  # Toggle i'th trace to \"visible\"\n    steps.append(step)\nsliders = [dict(\n    active=100,\n    currentvalue={\"prefix\": \"Frequency: \"},\n    steps=steps\n)]\nfor step in data.columns.values[1:]:\n        fig.add_trace(\n        go.Scatter(\n            visible=True,\n            line=dict(color=\"blue\", width=2),\n            name=\"Total Deats in  \" + step,\n            x=data['Country\/Region'],\n            y=data2[step].values,\n            marker=dict(color=[i for i in range(len(data2.columns.values[1:]))])),    secondary_y=False,\n)\nfig.update_yaxes(title_text=\"Total Confirmed Cases <\/b>\", secondary_y=False)\nfig.update_yaxes(title_text=\"<b>Total Deaths <\/b>\", secondary_y=True)\nfig.update_layout(\n     title_text=\"Change The Slider To Change To Different Countries\",\n    sliders=sliders\n)\n\nfig.show()\n    \n    \n","01a28426":"def ratio(data,data2):\n    array1=data.iloc[:,1:].values\n    array2=data2.iloc[:,1:].values\n    main_array=[]\n    for i in range(len(array1)):\n        p=[]\n        for j in range(len(array1[i])):\n            array1[i][j]=float(array1[i][j])\n            array2[i][j]=float(array2[i][j])\n            if array1[i][j]==0 or array2[i][j]==0:\n                p.append(0)\n            else:\n                p.append(array2[i][j]\/array1[i][j])\n        main_array.append(p)\n    return main_array\n                \narray=ratio(data,data2)","5844d69c":"data3=pd.DataFrame(columns=data.columns)","ef9ead23":"data3['Country\/Region']=data['Country\/Region']","aac3f450":"array=np.asarray(array)    ","480c2786":"for i in range(len(data.columns[1:])):\n    data3[data.columns[1:][i]]=array[:,i]","90f86fd2":"data3.head()","9811cef4":"\n\n# Create figure\nfig = go.Figure()\n\n# Add traces, one for each slider step\nfor step in data.columns.values[1:]:\n    fig.add_trace(\n        go.Scatter(\n            visible=True,\n            line=dict( width=2),\n            name=\"Confirmed cases in \" + step,\n            x=data3['Country\/Region'],\n            y=data3[step].values,\n            marker=dict(color=[i for i in range(len(data2.columns.values[1:]))])))\n\n    \nsteps = []\nfor i in range(len(fig.data)):\n    step = dict(\n        method=\"update\",\n        args=[{\"visible\": [False] * len(fig.data)},\n              {\"title\": \"Slider switched to country: \" + data.columns.values[1:][i]}],  # layout attribute\n    )\n    step[\"args\"][0][\"visible\"][i] = True  # Toggle i'th trace to \"visible\"\n    steps.append(step)\nsliders = [dict(\n    active=100,\n    currentvalue={\"prefix\": \"Frequency: \"},\n    steps=steps\n)]\n\nfig.update_layout(\n         title_text=\"Change The Slider To Change To Different Countries\",\n\n    sliders=sliders\n)\n\nfig.show()\n","ee36bcab":"data3.mean().sort_values(ascending=False).iloc[:10]","511941fc":"# Thank You","683e5466":"## Visualization For Both Deaths And Confirmed Cases In Countries","4704c238":"Let's Find Out the country with the highest Death to Confirmed Cases ratio","d4336a73":"## Data Visualization For Deaths To Confirmed Cases Ratio","c9f8378a":"This is the new dataframe with the ratio of deaths to confirmed cases in different countries","ad1fbb86":"## Finding Out The Death To Confirmed Cases ","a8018528":"## Hope you all to be safe and secure and please wear a mask !! ","888f3673":"## Making a new Data Frame For Death To Confirmed Ratio","f6998b20":"### Removing the rows with the nan values from the data","eb3d03c2":"### Function to find out the death to confirmed cases ratio","d5ccaa89":"Followed by Yemen , Hungary and UK.10","e7a8a392":"## Visualization For Death Stats In Different Countries","4ffe341b":"## Having the first look at the data","4f7fd833":"## Importing the packages","c214c0f1":"## Converting the dates into datetime","987e802d":"From this data we can see the top 10 countries with high mortality rates with china being at the top of all !!","7fbc6b43":"## Importing the global confirm of the cases and the deaths data","1822e5a3":"## Visualization For The Confirmed Cases Of Different Countries"}}