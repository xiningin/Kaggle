{"cell_type":{"626b6d3e":"code","d4b84642":"code","f052d382":"code","d1f5f56a":"code","99043cde":"code","4164a20a":"code","6276bb22":"code","5ee61994":"code","57a030f4":"code","b39e4b40":"code","2daa4ada":"code","b2e6cc71":"code","a4af4bc2":"code","4b1c0886":"code","db3310ff":"code","d180a4d3":"code","103a3bad":"code","272116cc":"code","942ae4ce":"markdown","73de4c27":"markdown","d43c4431":"markdown","f2962aa9":"markdown","c854d106":"markdown","0a78bd76":"markdown","e409b986":"markdown","f92600f5":"markdown","2e59cbb4":"markdown","7f186dec":"markdown"},"source":{"626b6d3e":"import numpy as np\nimport pandas as pd\nfrom sklearn import preprocessing,cross_validation\nfrom sklearn.linear_model import LogisticRegression\nimport matplotlib.pyplot as plt\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\ndf = pd.read_csv(\"..\/input\/Iris.csv\")\ndf.head(3)","d4b84642":"df.head(5)","f052d382":"df.drop(['Id'], axis=1 ,inplace=True)","d1f5f56a":"df.info()","99043cde":"df['Species'].value_counts()","4164a20a":"figure = df[df.Species == \"Iris-versicolor\"].plot(kind='scatter',x ='SepalLengthCm',y = 'SepalWidthCm' , label = 'Versicolor' , color = 'Blue')\ndf[df.Species == 'Iris-setosa'].plot(kind = 'scatter',x='SepalLengthCm' , y= 'SepalWidthCm' , label = 'Setosa' , color = 'Red' , ax = figure)\ndf[df.Species == 'Iris-virginica'].plot(kind='scatter' , x='SepalLengthCm' , y= 'SepalWidthCm' , label = 'Virginica' , color = 'Brown' , ax = figure)\nfigure.set_xlabel('Sepal Length')\nfigure.set_ylabel('Sepal Width')\nfigure.set_title(\"Sepal length vs sepal width\")\nplt.show()","6276bb22":"fig = df[df.Species == \"Iris-versicolor\"].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',label='versicolor',color='Blue')\ndf[df.Species == 'Iris-setosa'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',label='setosa',color='Red',ax=fig)\ndf[df.Species == 'Iris-virginica'].plot(kind='scatter' , x='PetalLengthCm' , y = 'PetalWidthCm',label='virginica',color='Brown',ax=fig)\nfig.set_xlabel('PetalLengthCm')\nfig.set_ylabel('PetalWidthCm')\nfig.set_title('Petal Length vs Petal Width')\nplt.show()","5ee61994":"df.head(5)","57a030f4":"y = df.Species","b39e4b40":"X = df[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]","2daa4ada":"X_train,X_test,y_train,y_test = cross_validation.train_test_split(X,y,test_size=0.25)","b2e6cc71":"X_train.tail(5)","a4af4bc2":"X_train.shape","4b1c0886":"df.tail(5)","db3310ff":"logreg = LogisticRegression()\nlogreg.fit(X_train,y_train)\naccuracy = logreg.score(X_test,y_test)\nprint(accuracy)","d180a4d3":"clf = KNeighborsClassifier(6)\nclf.fit(X_train,y_train)\naccuracy = clf.score(X_test,y_test)\nprint(accuracy)","103a3bad":"ex = np.array([8.7 , 6.5 , 3.5 , 4.6])\nex = ex.reshape(1,-1)\nprediction = logreg.predict(ex)\nprint (prediction)","272116cc":"classifier = SVC()\nclassifier.fit(X_train,y_train)\naccuracy = classifier.score(X_test,y_test)\nprint(accuracy)","942ae4ce":"Now we need to check for the null values present im our dataset","73de4c27":"lets predict against some random data ","d43c4431":"We import all the necessary libraries and algorithms,Also we load our source file","f2962aa9":"Let us see how does sepal and petals seperately classify the flower","c854d106":"'Id' column seems to be insignificant in classifying the flower,so we simply drop it","0a78bd76":"Seeing the graph it is pretty ovious that the classification of these flowers on basis of petals is more clear.","e409b986":"since Species column contains categorical data lets see what all categories are present","f92600f5":"Lets train our data using Logistic Regression and check its accuracy against testing data","2e59cbb4":"Lets train our data using K Neighbors Classifier and check its accuracy against testing data","7f186dec":"Lets train our data using Support Vector Machine and check its accuracy against testing data"}}