{"cell_type":{"d17d2b79":"code","bd5946e5":"code","c233d6a1":"code","8ff3c233":"code","fd6fedab":"code","0e306a5e":"code","cf51a099":"code","e2ea8f9c":"code","59a4df7f":"code","3e647a67":"code","3517b538":"markdown","4b7df582":"markdown","296d87cb":"markdown","c96da561":"markdown","de5f09a9":"markdown","712f3fe4":"markdown","6d0f75d3":"markdown","0e855e9f":"markdown","1e92fa05":"markdown","e3a35aa4":"markdown","cb5a6e82":"markdown","e2136619":"markdown","c856a234":"markdown","cfcee397":"markdown","1c2f813f":"markdown","11b81c76":"markdown"},"source":{"d17d2b79":"import pandas as pd\nimport numpy as np\ntrain = pd.read_csv('\/kaggle\/input\/titanic\/train.csv', index_col=0)\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv', index_col=0)","bd5946e5":"axes = train.groupby('Ticket').Survived.mean().hist()\n_ = axes.set_xlabel('ticket_survival_rate')\n_ = axes.set_ylabel('count\/frequency')","c233d6a1":"ticket_survivability = train.groupby('Ticket').Survived.mean()\nticket_survivability.name = 'ticket_survivability'\nanomalies = ticket_survivability[(ticket_survivability>0)&(ticket_survivability<1)]\nanomalies.head()","8ff3c233":"train.query('Ticket == \"110413\"')","fd6fedab":"train.query(\"Ticket=='113776'\")","0e306a5e":"train[train.Ticket=='113789']","cf51a099":"sex_survivability = train.groupby(['Sex','Survived']).size() * 100 \/ len(train)\nsex_survivability.name = 'gender_survivability_percent'\nsex_survivability","e2ea8f9c":"male = train.query('Sex==\"male\"')\nmale_ticket_survivability = male.groupby('Ticket').Survived.mean()\n_ = male_ticket_survivability.hist()","59a4df7f":"female = train.query('Sex==\"female\"')\nfemale_ticket_survivability = female.groupby('Ticket').Survived.mean()\n_ = female_ticket_survivability.hist()","3e647a67":"def predict(passenger:pd.Series):\n    if passenger.Sex == 'male':\n        if male_ticket_survivability.get(passenger.Ticket, 0) > .5:\n            return 1\n        else:\n            return 0\n    else: # female\n        ticket_survivability = female_ticket_survivability.get(passenger.Ticket)\n        if ticket_survivability is not None:\n            if ticket_survivability < .5:\n                return 0\n            else:\n                return 1\n        elif passenger.Pclass == 3 and passenger.SibSp+passenger.Parch > 3:\n            return 0\n        return 1\nanswer = [int(predict(test.iloc[i])) for i in range(len(test))]\nanswer = pd.DataFrame(answer, index=test.index, columns=['Survived'])\nanswer.to_csv('submission.csv')\nanswer","3517b538":"- 52% of passengers is males but died.\n- 26% of passengers is females that survived.\n\nAs in my previous notebooks, I'll answer with `male=died` and `female=survived` to get accuracy around 52+26 = 78%. And to improve the accuracy, I'll need to find out about =\n1. Which male is survived (12%)\n2. Which female is dead (9%)\n\nThis time I'll utilize the `Ticket` number data.","4b7df582":"# Implementation","296d87cb":"Another couple being separated by death \ud83d\ude22. Again, the female survives, but the male died.","c96da561":"The male is usually dead regardless whether the female part of their family is able survive. Once again we need to consider `Sex` data.","de5f09a9":"# Pseudocode","712f3fe4":"## 2.1. Which male is survived (12%)","6d0f75d3":"In this part 3 of my notebook, I will incorporate a column that neglected by some people = **Ticket**.\n\nIn previous parts of my notebook ([part 2](https:\/\/www.kaggle.com\/thariqnugrohotomo\/without-machine-learning-part-2) and [part 1](https:\/\/www.kaggle.com\/thariqnugrohotomo\/without-machine-learning)), we see that family-size (`SibSp`, `Parch`, `fam`) affects the survival rate. This may indicate that people tend to flock together with their family, the survival rate of people within a family could be similar.\n\nBut, how we can group the data based on their family?\n- We can get the surname from `Name` column, and group them together. Unfortunately, different families can have same surname.\n- There is a stronger indicator that can be used to group the people, it's the **`Ticket`** column. \nPeople with the same ticket number usually have same surname, which can imply that they are a family that boarding together. \nIf their surnames are different, they may still have some kind of relationship, e.g. colleagues having a trip together. On the latter case (same ticket but different surname), looks like their survival rates are still similar.\n- `Fare` column. Same ticket have same fare. But paying the same amount of fare can yield a different ticket number. Hence people paying the same amount of fare doesn't always corelates with each other.\n\nHence we'll try to associate the `Ticket` column with the survival chance.","0e855e9f":"# 2. Sex\/Gender","1e92fa05":"Based on the obsevations above, we'll use the following pseudocode:\n```python\nif male:\n    if ticket.survivability > 0.5: # high\/good chance\n        return 1\n    else:\n        return 0\nif female:\n    if ticket.survivability is not None:\n        if ticket.survivability < 0.5: # low\/bad chance\n            return 0\n        else:\n            return 1\n    elif Pclass == 3 and SibSp+Parch > 3: # from part 2 of my notebook\n        return 0\n    else:\n        return 1\n```","e3a35aa4":"Seems like the wife survived, but the husband died \ud83d\ude22","cb5a6e82":"## 2.2. Which female is dead (9%)","e2136619":"Again, the anomalies has been flattened out nicely. When a lot of females with same ticket **died** in `train.csv` data, then we'll predict that other females holding the same ticket will **die** in `test.csv` data.\n\nBut again, in `test.csv` we may encounter several new ticket numbers that hasn't been seen yet from `train.csv`. For those new ticket numbers, I'll reuse the logic from [part 2](https:\/\/www.kaggle.com\/thariqnugrohotomo\/without-machine-learning-part-2) of my notebook, to predict which female is dead based on their family-size (`SibSp+Parch`) and `Pclass`.","c856a234":"# 1. Ticket number","cfcee397":"Good to see that the anomalies has been flattened out here. When a lot of males with same ticket **survived** in `train.csv` data, then the we'll predict that other males holding the same ticket will **survive** in `test.csv` data.\n\nBeware that in `test.csv` there will be several new ticket numbers that hasn't been seen yet from `train.csv`. In that case we will predict that those males are dead (since male has 12% chance of survival in the first place).","1c2f813f":"Seems like a family trip (spot the same surname). The females survived (presumably mother and daughter), but the male died (presumably the father).","11b81c76":"Histogram shown above indicates that people with the same ticket number mostly will encounter a same fate, either = \n- Survived together (`x=1` on the right side), or\n- Died together (`x=0` on the left side).\n\nThere are some values between 0 and 1. Let's take a look at those anomalies."}}