{"cell_type":{"6ad687fa":"code","a6c4fe0e":"code","d9f7d75d":"code","327a71c9":"code","650586dd":"code","a9a7fc16":"code","3d987b3b":"code","e981eeab":"code","8dd0e563":"code","d1055649":"code","599a6aee":"code","b1f40b72":"code","acd13472":"code","25abfae6":"code","75e5cb1d":"code","19bade98":"code","f22e1c9b":"code","14d9e798":"code","c49ac11f":"code","2fbae253":"code","37cbd85c":"code","5a128301":"markdown","6631636e":"markdown","51563eee":"markdown","6dbb26aa":"markdown","089e52ed":"markdown","ef7f7ebe":"markdown","cffc208c":"markdown","6812d5e6":"markdown","ab9f5d08":"markdown","91220784":"markdown","92d39fdd":"markdown","8ea38bf6":"markdown","971e8f54":"markdown","68b6bb5f":"markdown","78aa3aaf":"markdown","b8c57a31":"markdown","64fe2afd":"markdown","a8538dd0":"markdown","8334ed02":"markdown","f695be7d":"markdown"},"source":{"6ad687fa":"#importing relevant libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfrom sklearn.model_selection import train_test_split,StratifiedKFold,cross_val_score,GridSearchCV\nimport lightgbm as lgb\nfrom xgboost import XGBRegressor\n%matplotlib inline","a6c4fe0e":"train_data=pd.DataFrame(pd.read_csv('..\/input\/pubg-finish-placement-prediction\/train_V2.csv'))\ntest_data=pd.DataFrame(pd.read_csv('..\/input\/pubg-finish-placement-prediction\/test_V2.csv'))\ntrain_data.info()","d9f7d75d":"#checking the null values\ntrain_data.isnull().sum()","327a71c9":"#removing the null value\ntrain_data = train_data[train_data[\"winPlacePerc\"].isna() != True]","650586dd":"fig,ax=plt.subplots(figsize=(15,12))\nax=sns.heatmap(train_data.corr(),annot=True)","a9a7fc16":"f, axes = plt.subplots(3,2, figsize=(10, 10))\nsns.distplot(train_data['kills'], color=\"b\", ax=axes[0, 0])\nsns.distplot(train_data['walkDistance'], color=\"r\", ax=axes[0, 1])\nsns.distplot(train_data['killStreaks'], color=\"g\", ax=axes[1, 0])\nsns.distplot(train_data['longestKill'], color=\"m\", ax=axes[1, 1])\nsns.distplot(train_data['rideDistance'], color=\"g\", ax=axes[2, 0])\nsns.distplot(train_data['matchDuration'], color=\"m\", ax=axes[2, 1])\nplt.setp(axes, yticks=[])\nplt.tight_layout()","3d987b3b":"#Specifying input and target variable\ny=train_data['winPlacePerc']\nX = train_data.drop(['winPlacePerc','Id','groupId','matchId','matchType'],axis=1,inplace=False)","e981eeab":"X.columns","8dd0e563":"#Splitting into Train-Test Data\nX_train,X_valid,y_train,y_valid=train_test_split(X,y,train_size=0.8,test_size=0.2,random_state=0)","d1055649":"matches_num = train_data.loc[:,\"matchId\"].nunique()\nprint(\"There are {} matches registered in our data.\".format(matches_num))","599a6aee":"match_types = train_data.loc[:,\"matchType\"].value_counts().to_frame().reset_index()\nmatch_types.columns = [\"Type\",\"Count\"]\nmatch_types","b1f40b72":"plt.figure(figsize=(15,8))\nticks = match_types.Type.values\nax = sns.barplot(x=\"Type\", y=\"Count\", data=match_types)\nax.set_xticklabels(ticks,rotation=60, fontsize=14)\nax.set_title(\"Match types\")\nplt.show()","acd13472":"plt.figure(figsize=(15,8))\nax1 = sns.boxplot(x=\"kills\",y=\"damageDealt\", data = train_data)\nax1.set_title(\"Damage Dealt vs. Number of Kills\")\nplt.show()","25abfae6":"plt.figure(figsize=(15,8))\nax2 = sns.boxplot(x=\"DBNOs\",y=\"kills\", data = train_data)\nax2.set_title(\"Number of DBNOs vs. Number of Kills\")\nplt.show()","75e5cb1d":"plt.figure(figsize = (15, 15))\nsns.pointplot(train_data[\"heals\"], train_data[\"walkDistance\"],color = \"blue\",label='heals',linestyles=\"-\")\nsns.pointplot(train_data[\"boosts\"], train_data[\"walkDistance\"],color = \"red\",label='boosts',linestyles=\"--\")\nplt.xlabel(\"heals\/boost\")\nplt.legend(['heals','boosts']) \nplt.grid()\nplt.show()","19bade98":"plt.figure(figsize=(10,7))\nsns.pointplot(x=\"kills\", y=\"winPlacePerc\", data=train_data)\nplt.show()","f22e1c9b":"x_test = test_data.drop(['Id','groupId','matchId','matchType'],axis=1)","14d9e798":"import xgboost as xgb\nmodel = xgb.XGBRegressor(max_depth=17, gamma=0.3, learning_rate= 0.1)\nmodel.fit(X_train,y_train)","c49ac11f":"xgb.plot_importance(model)","2fbae253":"preds = model.predict(x_test)","37cbd85c":"test_id = test_data[\"Id\"]\nsubmit_xgb = pd.DataFrame({'Id': test_id, \"winPlacePerc\": preds} , columns=['Id', 'winPlacePerc'])\nprint(submit_xgb.head())\nsubmit_xgb.to_csv(\"submission.csv\", index = False)","5a128301":"### 3.DBNO and KILLS","6631636e":"## PUBG Finish Placement Prediction (Kernels Only)","51563eee":"### Submission ","6dbb26aa":"# **Exploratory Data Analysis**","089e52ed":"## Model Development","ef7f7ebe":"There is an obvious correlation between number of kills and damage dealt. We see also that there are some outliers, more in the lower range. As the number of kills increases number of outliers reduces","cffc208c":"The graph above shows that the most popular game modes are squad and duo.","6812d5e6":"### 2.Kills and damage dealt","ab9f5d08":"### 1.Match types","91220784":"As we can see that as the person walk in game, in starting period person uses boosts more than the heals.\nbut at ending of the game boost and heals consumed are somewhat equal.","92d39fdd":"### Data Converted into DataFrame","8ea38bf6":"### 5.kills and winplaceprediction","971e8f54":"Inferences from the correlation data:\n1. killPoints and winPoints are highly correlated which is obvious.\n2. walkDistance and winPlacePerc are strongly correlated which makes sense.\n3. kills and killStreaks are strongly correlated. Again true.\n4. kills and damageDealth are strongly correlated too.","68b6bb5f":"As we can see that there is a direct relation between kills and win which is obvious.","78aa3aaf":"### Correaltion Between Features","b8c57a31":"### Probability Distribution Curves","64fe2afd":"### 4.Heals\/Boost with Walk distance ","a8538dd0":"DBNO is somewhat related with kills as its relevant that if a person knocks somebody then he\/she will try to kill that enemy.","8334ed02":"### Feature Importance","f695be7d":"AS we have tried - \n\nLinear Regression Approach\n\nRandom Forest Approach\n\nSVM Approach\n\nBut we find xgboost more effective.\n"}}