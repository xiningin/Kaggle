{"cell_type":{"5e70f514":"code","a17740cf":"code","8e224e83":"code","3273395b":"code","f60fd90a":"code","e9472c12":"code","3984fe21":"code","8c1e9674":"code","10db509e":"code","82ced392":"code","8737e0c7":"code","dbd0b184":"code","1e9cf7e3":"code","28fbe533":"code","5aefe688":"code","e7940578":"code","332b544c":"code","51ec251e":"code","1bd390fa":"code","0ced23c5":"code","8660ccb8":"code","32562948":"code","148f626b":"code","3d4b1dd5":"code","6688527b":"code","cd8e7d4f":"code","0d097027":"code","5716b483":"code","dc915b3c":"code","c4d65cb1":"code","af279ada":"code","60003030":"code","04bdf031":"code","ff355b91":"code","9bd425e8":"code","e9398371":"code","8d2d6552":"code","2988e22b":"code","a3adf775":"markdown","3849c9da":"markdown","384231d7":"markdown","f1e2c818":"markdown","9ee72dde":"markdown","2f039f88":"markdown","b02591d2":"markdown","dd32a087":"markdown","f8a55e88":"markdown","2f96591b":"markdown","ee82a519":"markdown","3c6b09e4":"markdown","33856e62":"markdown"},"source":{"5e70f514":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a17740cf":"train=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\nsample_submission=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","8e224e83":"train.head()","3273395b":"test.head()","f60fd90a":"print(train.info(), '\\n', '-'*50)\nprint(test.info())","e9472c12":"y_train=train['SalePrice']","3984fe21":"# Drop 'Id' columns in train, test('Id' \uceec\ub7fc\uc744 \uc81c\uac70 \ud569\ub2c8\ub2e4.)\ntrain_Id=train['Id']\ntest_Id=test['Id']\ntrain.drop('Id', axis=1, inplace=True)\ntest.drop('Id', axis=1, inplace=True)","8c1e9674":"for col in ['MSSubClass', 'OverallCond', 'YrSold', 'MoSold']:\n    train[col]=train[col].astype('object')\n    test[col]=test[col].astype('object')","10db509e":"# Correlation coefficient(\uc0c1\uad00\uacc4\uc218)\nnum_col=train.select_dtypes(exclude='object')\n\nnum_col_corr=num_col.corr()\n\nf, ax=plt.subplots(figsize=(30,30))\nsns.heatmap(num_col_corr, annot=True, ax=ax)","82ced392":"num_col_corr['SalePrice'].sort_values(ascending=False)","8737e0c7":"# Only select columns with a correlation of 0.3 or higher.(\uc0c1\uad00\uacc4\uc218\uac00 0.3 \uc774\uc0c1\uc778 \uceec\ub7fc\ub4e4\ub9cc \uace8\ub77c\ub0c5\ub2c8\ub2e4.) \nhigh_corr_num_col=[]\nfor col in list(num_col_corr['SalePrice'].index):\n    if (abs(num_col_corr['SalePrice'][col])>0.3):\n        high_corr_num_col.append(col)\n        \nhigh_corr_num_col.remove('SalePrice')","dbd0b184":"high_corr_num_col","1e9cf7e3":"object_col=train.select_dtypes('object')","28fbe533":"object_col.head()","5aefe688":"f, axes=plt.subplots(10,5, figsize=(30,50))\nax=axes.ravel()\nfor i, col in enumerate(object_col.columns):\n    sns.boxplot(x=object_col[col], y=train['SalePrice'], ax=ax[i])","e7940578":"high_corr_object_col=['MSZoning','Alley','LotShape','LandContour','Neighborhood','Condition1','Condition2','OverallCond','RoofMatl','Exterior1st','Exterior2nd','MasVnrType','ExterQual',\n'ExterCond','Foundation','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2','Heating','HeatingQC','CentralAir','Electrical','KitchenQual','FireplaceQu',\n'GarageType','GarageFinish','GarageQual','GarageCond','PavedDrive','PoolQC','MiscFeature','SaleType','SaleCondition']","332b544c":"print('numberical columns : ',high_corr_num_col)\nprint('categorical columns : ', high_corr_object_col)","51ec251e":"# Combine the two columns list.(\ub450 \uceec\ub7fc \ub9ac\uc2a4\ud2b8\ub97c \ud569\uce69\ub2c8\ub2e4.)\ncorr_columns=high_corr_num_col+high_corr_object_col","1bd390fa":"train[corr_columns].head()","0ced23c5":"test[corr_columns].head()","8660ccb8":"ntrain=train.shape[0]\nntest=test.shape[0]\n\nall_data = pd.concat((train[corr_columns], test[corr_columns])).reset_index(drop=True)","32562948":"all_data.shape","148f626b":"all_data","3d4b1dd5":"pd.DataFrame({'columns':all_data.isnull().sum().sort_values(ascending=False).index,\n             'missing data':all_data.isnull().sum().sort_values(ascending=False).values\/all_data.shape[0]})","6688527b":"missing_data_col=[col for col in all_data.isnull().sum().sort_values(ascending=False).index[:27]]","cd8e7d4f":"missing_data_col","0d097027":"all_data.drop(['PoolQC','MiscFeature','Alley'], axis=1, inplace=True)","5716b483":"all_data['FireplaceQu'].fillna('None', inplace=True)\nall_data['GarageCond'].fillna('None', inplace=True)\nall_data['GarageQual'].fillna('None', inplace=True)\nall_data['GarageFinish'].fillna('None', inplace=True)\nall_data['GarageType'].fillna('None', inplace=True)\nall_data['BsmtExposure'].fillna('None', inplace=True)\nall_data['BsmtCond'].fillna('None', inplace=True)\nall_data['BsmtQual'].fillna('None', inplace=True)\nall_data['BsmtFinType2'].fillna('None', inplace=True)\nall_data['KitchenQual'].fillna('None', inplace=True)\nall_data['SaleType'].fillna('None', inplace=True)\nall_data['Exterior1st'].fillna('None', inplace=True)\nall_data['Electrical'].fillna('None', inplace=True)\nall_data['BsmtFinType1'].fillna('None', inplace=True)\nall_data['MasVnrType'].fillna('None', inplace=True)\nall_data['Exterior2nd'].fillna('None', inplace=True)\nall_data['MSZoning'].fillna('None', inplace=True)\nall_data['LotFrontage'].fillna(all_data['LotFrontage'].median(), inplace=True)\nall_data['GarageYrBlt'].fillna(all_data['GarageYrBlt'].median(), inplace=True)\nall_data['GarageCars'].fillna(all_data['GarageCars'].median(), inplace=True)\nall_data['TotalBsmtSF'].fillna(all_data['TotalBsmtSF'].median(), inplace=True)\nall_data['BsmtFinSF1'].fillna(all_data['BsmtFinSF1'].median(), inplace=True)\nall_data['GarageArea'].fillna(all_data['GarageArea'].median(), inplace=True)\nall_data['MasVnrArea'].fillna(all_data['MasVnrArea'].median(), inplace=True)","dc915b3c":"all_data=pd.get_dummies(all_data)","c4d65cb1":"all_data.head()","af279ada":"# Isolate the train, test data.(train, test \ub370\uc774\ud130\ub97c \ubd84\ub9ac\ud569\ub2c8\ub2e4.)\ntrain=all_data[:ntrain]\ntest=all_data[ntrain:]","60003030":"sns.distplot(y_train)","04bdf031":"y_train=np.log(y_train)\nsns.distplot(y_train)","ff355b91":"from sklearn.linear_model import LinearRegression\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.model_selection import KFold, cross_val_score, train_test_split","9bd425e8":"linear_regression=LinearRegression(n_jobs=-1)\nsvr=make_pipeline(RobustScaler(), SVR())\nforest=RandomForestRegressor(random_state=42)\nGDR=GradientBoostingRegressor(random_state=42)\n\nprint('LinearRegression score : ', cross_val_score(linear_regression, train.values, y_train, cv=KFold(5, shuffle=True, random_state=42)).mean())\nprint('svr score : ', cross_val_score(svr, train.values, y_train, cv=KFold(5, shuffle=True, random_state=42)).mean())\nprint('forest score : ', cross_val_score(forest, train.values, y_train, cv=KFold(5, shuffle=True, random_state=42)).mean())\nprint('GDR score : ', cross_val_score(GDR, train.values, y_train, cv=KFold(5, shuffle=True, random_state=42)).mean())","e9398371":"forest.fit(train.values, y_train)","8d2d6552":"predict=forest.predict(test.values)\npredict=np.exp(predict)","2988e22b":"sub=sample_submission\nsub['SalePrice']=predict\nsub.to_csv('submission.csv', index=False)","a3adf775":"# Explore, preprocessing  data(\ub370\uc774\ud130 \ud0d0\uc0c9 \ubc0f \uc804\ucc98\ub9ac)","3849c9da":"Fill in missing values. I just filled it with none or median, but there are probably many better ways.(\uacb0\uce21\uac12\uc744 \ucc44\uc6c1\ub2c8\ub2e4. \uc800\ub294 \uadf8\ub0e5 None\uacfc \uc911\uc559\uac12\uc73c\ub85c \ucc44\uc6e0\uc9c0\ub9cc \ub354 \uc88b\uc740 \ubc29\ubc95\ub4e4\uc774 \uc544\ub9c8 \ub9ce\uc744\uac83\uc785\ub2c8\ub2e4.)","384231d7":"* Before we model machine running, let's look at the target data.(\uba38\uc2e0 \ub7ec\ub2dd \ubaa8\ub378\ub9c1\uc5d0 \uc55e\uc11c, \ud0c0\uac9f \ub370\uc774\ud130\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.)","f1e2c818":"I'll run one hot encoding.(\uc6d0\ud56b\uc778\ucf54\ub529\uc744 \uc2e4\ud589\ud574 \uc8fc\uaca0\uc2b5\ub2c8\ub2e4.)","9ee72dde":"* For convenience, we will combine the data, train and test.(\ud3b8\uc758\ub97c \uc704\ud574 train, test \ub450 \ub370\uc774\ud130\ub97c \ud569\uce58\uaca0\uc2b5\ub2c8\ub2e4.)","2f039f88":"'PoolQC','MiscFeature','Alley'\n\nThe above columns have so large missing values that we will exclude them from the data for machine learning.(\uc704 \uceec\ub7fc\ub4e4\uc740 \uacb0\uce21\uce58\uac00 \ub108\ubb34 \ucee4\uc11c \uba38\uc2e0\ub7ec\ub2dd\uc744 \uc704\ud55c \ub370\uc774\ud130\uc5d0\uc11c \uc81c\uc678\ud558\uaca0\uc2b5\ub2c8\ub2e4.)","b02591d2":"* Let's check the missing data.(\ub370\uc774\ud130\uc758 \uacb0\uce21\uce58\ub97c \ud655\uc778\ud558\uaca0\uc2b5\ub2c8\ub2e4.)","dd32a087":"'MSZoning','Alley','LotShape','LandContour','Neighborhood','Condition1','Condition2','OverallCond','RoofMatl','Exterior1st','Exterior2nd','MasVnrType','ExterQual',\n'ExterCond','Foundation','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2','Heating','HeatingQC','CentralAir','Electrical','KitchenQual','FireplaceQu',\n'GarageType','GarageFinish','GarageQual','GarageCond','PavedDrive','PoolQC','MiscFeature','SaleType','SaleCondition'\n\n* I selected the above columns through my subjective judgment and will use them for machine learning. All columns may be used, which depends on individual judgment.(\uc800\uc758 \uc8fc\uad00\uc801\uc778 \ud310\ub2e8\uc744 \ud1b5\ud574 \uc704\uc758 \uceec\ub7fc\ub4e4\uc744 \uc120\ud0dd\ud558\uc600\uace0 \uc774\ub97c \uba38\uc2e0\ub7ec\ub2dd\uc5d0 \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uceec\ub7fc\uc744 \ub2e4 \uc0ac\uc6a9\ud574\ub3c4 \ub418\uba70 \uc774\ub294 \uac1c\uc778\uc758 \ud310\ub2e8\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9d1\ub2c8\ub2e4.) ","f8a55e88":"* Numerical variables but are categorical variables, Transform to object\n(\uc22b\uc790\ud0c0\uc785\uc774\uc9c0\ub9cc \ubc94\uc8fc\ud615 \ubcc0\uc218\uc778 \uceec\ub7fc\ub4e4\uc744 \ubaa8\ub450 object \ud0c0\uc785\uc73c\ub85c \ubc14\uafb8\uc5b4\uc90d\ub2c8\ub2e4.)\n\n* 'MSSubClass', 'OverallCond', 'YrSold', 'MoSold' is Numerical but categorical bariables ","2f96591b":"# Modeling (\ubaa8\ub378\ub9c1)","ee82a519":"We're going to use these columns for machine learning.(\uc704\uc640 \uac19\uc774 \uace8\ub77c\ub0b8 \uceec\ub7fc\ub4e4\uc744 \uba38\uc2e0\ub7ec\ub2dd\uc5d0 \uc774\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4.)\n\n* Next, let's take a look at the categorical variables and how they relate to home prices.(\ub2e4\uc74c\uc73c\ub85c \ubc94\uc8fc\ud615 \ubcc0\uc218\ub4e4\uacfc \uc9d1 \uac00\uaca9\uacfc\uc758 \uad00\ub828 \uc815\ub3c4\ub97c \uadf8\ub798\ud504\ub85c \uc0b4\ud3b4\ubd05\ub2c8\ub2e4.)","3c6b09e4":"* See the Correlation coefficient and choice high correlation variables\n(\uc0c1\uad00\uacc4\uc218\ub97c \ubcf8 \ud6c4 \uac00\uaca9\uacfc \ub192\uc740 \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c4 \ud2b9\uc131\uc744 \uace8\ub77c \ub0b4\uaca0\uc2b5\ub2c8\ub2e4.)","33856e62":"Target data is too skewed to one side. I will use log to supplement this.(\ud0c0\ucf13 \ub370\uc774\ud130\uac00 \ub108\ubb34 \ud55c\ucabd\uc73c\ub85c \uce58\uc6b0\uccd0\uc800 \uc788\uc2b5\ub2c8\ub2e4. log\ub97c \uc774\uc6a9\ud558\uc5ec \uc774\ub97c \ubcf4\uc644\ud558\uaca0\uc2b5\ub2c8\ub2e4.)"}}