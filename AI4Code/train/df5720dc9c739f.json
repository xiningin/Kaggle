{"cell_type":{"3f4469a5":"code","564e6852":"code","3eb43d0c":"code","d6515bbc":"code","b57938c9":"code","48ca4fac":"code","5d03bd8e":"code","f3ad7de2":"code","626f148d":"code","3206446e":"code","1a0b970b":"code","5a8f1106":"code","3035f035":"code","1c3a8f08":"code","28221caa":"code","67345b3a":"code","611f8261":"code","e23265c4":"code","6f7244c4":"code","267b9fe4":"code","4229ac7c":"markdown","94b1e51d":"markdown"},"source":{"3f4469a5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport matplotlib as mpl\nmpl.rcParams['figure.dpi'] = 100\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","564e6852":"df=pd.read_csv(\"\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\")\ndf.head(5)","3eb43d0c":"#Selecting the data we want to work with and changing date to date\ndf1 = df[['country','date','daily_vaccinations','daily_vaccinations_per_million']]\ndf1['date'] = pd.to_datetime(df1['date'],)\ndf1 = df1.set_index('date')","d6515bbc":"#Further creating a dataset to work with desired data\ndf2 = df1[['country','daily_vaccinations']]\ndf2","b57938c9":"#Total vaccinations in the countries(Top 10)\ndf3= df2.groupby(\"country\")[\"daily_vaccinations\"].sum().nlargest(10)\ndf3","48ca4fac":"df3.plot(x = \"country\", kind = 'bar',color = 'b', alpha = 0.75)\nplt.ylabel(\"Total vaccinations\")\nplt.xlabel(\"Country\")\nplt.show()","5d03bd8e":"df3 = df1.groupby('country')[\"daily_vaccinations_per_million\"].mean().nlargest(10)\ndf3","f3ad7de2":"df3.plot(x = \"country\", kind = 'bar', color = \"c\", alpha =0.75)\nplt.ylabel(\"Average daily vaccinations per million\")\nplt.xlabel(\"Country\")\nplt.show()","626f148d":"df3 = df1.groupby('country')[\"daily_vaccinations_per_million\"].mean().nsmallest(10)\ndf3","3206446e":"df3.plot(x = \"country\", kind = 'bar', color = \"m\", alpha =0.75)\nplt.ylabel(\"Average daily vaccinations per million\")\nplt.xlabel(\"Country\")\nplt.show()","1a0b970b":"df3 = df.groupby('country')[\"people_fully_vaccinated\"].max().nlargest(10)\ndf3","5a8f1106":"df3.plot(x = \"country\", kind = 'bar', color = \"g\", alpha =0.75)\nplt.ylabel(\"People fully vaccinated\")\nplt.xlabel(\"Country\")\nplt.show()","3035f035":"df3 = df.groupby('country')[\"people_fully_vaccinated\"].max().nsmallest(10)\ndf3","1c3a8f08":"#Trying seaborn for this visualization\nsns.barplot(x = df3.values, y = df3.index, orient='h',palette='Blues_d')\nplt.xlabel(\"Country\")\nplt.ylabel(\"Fully Vaccinated People\")","28221caa":"df.describe()","67345b3a":"df4 = pd.read_csv('..\/input\/covid-world-vaccination-progress\/country_vaccinations_by_manufacturer.csv')\ndf4.head(10)","611f8261":"df4['location'].unique()","e23265c4":"df4['location'].nunique()","6f7244c4":"df_EU = df4[df4['location']=='European Union']\ndf_EU","267b9fe4":"df_EU.plot(x = 'vaccine', y = 'total_vaccinations', kind ='scatter',figsize = (10,6) )\nplt.xlabel('Vaccination name', fontsize = 15, loc = 'center', labelpad = 10)\nplt.ylabel('Total number of vaccinations', fontsize = 15,loc = 'center', labelpad = 10)\nplt.show()","4229ac7c":"We will take a look at the data corresponding to European Union","94b1e51d":"Reading the second dataset"}}