{"cell_type":{"0fb1797d":"code","4eda1991":"code","1f8f40b9":"code","29d5fa9e":"code","1c268eb3":"code","48e7c01d":"code","dce6199e":"code","2a68132c":"code","f578cbe7":"code","217363b9":"code","6b9d511c":"code","e8c0548e":"code","da108a9a":"code","a90eda9b":"code","31000bbe":"code","17104cde":"code","b8c4125d":"code","fc0ad427":"code","cb44ce5f":"code","a0b5fcc7":"code","3ed17d2f":"code","2d88105e":"code","6344ec16":"code","5f02a7e9":"code","e3f56125":"code","b6ab3e67":"code","427ae288":"code","2fe18917":"code","37d35c62":"markdown","4b23da16":"markdown","bd7946f0":"markdown","576e5111":"markdown","73d28e41":"markdown"},"source":{"0fb1797d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport warnings\nwarnings.filterwarnings(action='ignore')\n\nfrom sklearn.linear_model import SGDRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error , r2_score \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4eda1991":"df = pd.read_csv('\/kaggle\/input\/vehicle-dataset-from-cardekho\/car data.csv')","1f8f40b9":"df.head(6)","29d5fa9e":"df.shape","1c268eb3":"df.info()","48e7c01d":"df.isna().sum()","dce6199e":"# unique cars\ndf.Car_Name.unique().size","2a68132c":"# unique categories in seller_type column\ndf.Seller_Type.unique()","f578cbe7":"# unique categories in Owner column \ndf.Owner.unique()","217363b9":"num_features = ['Year' , 'Selling_Price' , 'Present_Price' , 'Kms_Driven' ]\ncat_features = ['Car_Name', 'Fuel_Type' ,'Seller_Type' , 'Transmission' ]","6b9d511c":"# Average Selling price\nprint(f'Selling Price Mean : {df.Selling_Price.mean():.2f}' )\nprint(f'Selling Price Median : {df.Selling_Price.median():.2f}' )","e8c0548e":"# Average Present Price\nprint(f'Present Price Mean : {df.Present_Price.mean():.2f}' )\nprint(f'Present Price Median : {df.Present_Price.median():.2f}' )","da108a9a":"# Average Present Price\nprint(f'Kms Driven Mean : {df.Kms_Driven.mean():.2f}' )\nprint(f'Kms Driven Price Median : {df.Kms_Driven.median():.2f}' )","a90eda9b":"df1 = df.groupby('Car_Name').agg({'Car_Name':'count'})\ndf1.index.name = ''\ndf1 = df1.sort_values('Car_Name' , ascending=False)[:10]","31000bbe":"plt.figure(dpi=100 ,figsize=(10 ,4) , facecolor='black' ,edgecolor='lightgreen')\nplt.title('Most Common Car' ,color='salmon')\nplt.plot(df1.index , df1.values.flatten() ,color='salmon' , marker='o' ,)\nplt.xticks(color='salmon' ,rotation=90)\nplt.yticks( np.arange(0 ,31 , 5) ,color='salmon')\nplt.grid(ls=':' , lw='.5' , color='k' ,alpha=.3)\nplt.legend()\nplt.show()\n","17104cde":"ls = ['Selling_Price' , 'Present_Price' , 'Kms_Driven']\nfor i in ls:\n    plt.figure(dpi=100 ,figsize=(9 ,5))\n    plt.title(f'{i} Distribution')\n    sns.distplot(x=df[i])\n    plt.xlabel(i)\n    plt.show()","b8c4125d":"df1 = df.groupby('Car_Name').agg({'Selling_Price':'mean' , 'Present_Price':'mean'})\ndf1 = df1.sort_values('Selling_Price')","fc0ad427":"plt.figure(dpi=100 ,figsize=(30 ,10) , facecolor='black' ,edgecolor='lightgreen')\nplt.title('Average Selling Price of Each car',color='salmon')\nplt.plot(df1.index , df1['Selling_Price'] ,color='salmon' , marker='o' ,)\nplt.xticks(color='salmon' ,rotation=90)\nplt.yticks(color='salmon')\nplt.grid(ls=':' , lw='.5' , color='k' ,alpha=.3)\nplt.show()\n","cb44ce5f":"df1 = df1.sort_values('Present_Price')\n\nplt.figure(dpi=100 ,figsize=(30 ,10) , facecolor='black' ,edgecolor='lightgreen')\nplt.title('Average Present Price of Each Car',color='salmon')\nplt.plot(df1.index , df1['Present_Price'] ,color='salmon' , marker='o' ,)\nplt.xticks(color='salmon' ,rotation=90)\nplt.yticks(color='salmon')\nplt.grid(ls=':' , lw='.5' , color='k' ,alpha=.3)\nplt.show()\n","a0b5fcc7":"df1 = df.groupby('Year').agg({'Selling_Price':'mean','Present_Price':'mean'})\ndf1","3ed17d2f":"x = np.arange(0 ,16)-.2\nplt.figure(dpi=200 ,figsize=(10 ,4))\nfor i in ['Selling_Price','Present_Price']:\n    bars = plt.bar(x,df1[i] ,width=.4 , align='center' ,label=i)\n    for bar in bars:\n        plt.text(bar.get_x()+bar.get_width()\/3 , bar.get_height()+.2 , s=f'{bar.get_height():.2f}' ,fontdict={'size':8}  ,rotation=90)\n    x = x+.4\nplt.xticks(np.arange(0 ,16) ,df1.index , rotation=90)\nplt.yticks(np.arange(0 ,20 ,2))\nplt.legend()\nplt.show()\n\n","2d88105e":"df1 = df.groupby('Seller_Type').agg({'Selling_Price':'mean','Present_Price':'mean'})\ndf1['Percentage_Price_Drop'] = df1['Selling_Price']*100 \/ df1['Present_Price']\ndf1\n# here the ","6344ec16":"x = np.arange(0 ,2)-.2 ; w = .4\nplt.figure(dpi=100 ,figsize=(5 ,4))\nfor i ,color in zip(['Selling_Price','Present_Price'] , ['lightgreen','darkgreen']):\n    bars = plt.bar(x,df1[i] ,width=w , align='center' ,label=i)\n    for bar in bars:\n        bar.set_color(color)\n        plt.text(bar.get_x()+bar.get_width()\/2 , bar.get_height()+1 , s=f'{bar.get_height():.2f}' ,fontdict={'size':8}  ,rotation=90)\n    x = x+w\nplt.xticks( np.arange(2) ,df1.index ,rotation=90)\nplt.yticks(np.arange(0 ,16 ,2))\nplt.legend()\nplt.show()\n","5f02a7e9":"# plot to show selller_type affects selling price \n# eg: if preice of a car is 100 then Dealer will sell it upto 60 - 62 but indivisual\/normal men will sell it in less than 58\nplt.figure(dpi=100,facecolor='Black' , figsize=(9 ,5))\nplt.title('Selling Price Percentage' ,color='lightgreen' ,size=14 , weight='heavy')\nbars = plt.bar(df1.index , df1.Percentage_Price_Drop ,color='lightgreen')\nfor bar in bars:\n     plt.text(bar.get_x()+bar.get_width()\/2 , bar.get_height()+3 , s=f'{bar.get_height():.2f}%' ,fontdict={'size':8}  ,rotation=90)\nplt.xticks(color='lightgreen'  , size=12)\nplt.yticks(np.arange(0,91,10), color='lightgreen',size=12)\nplt.grid(ls=':' , lw='.5' , color='k' ,alpha=.3)\nplt.show()","e3f56125":"df.head()","b6ab3e67":"df1 = df.groupby('Owner').agg({'Owner':'count','Selling_Price':'mean'})\ndf1['Percentage'] = df1.Selling_Price \/ df1.Owner\ndf1","427ae288":"# plot to show how owner ship affects selling price \nplt.figure(dpi=100,facecolor='Black' , figsize=(9 ,5))\nplt.title('Selling Price By Owner' ,color='lightgreen' ,size=14 , weight='heavy')\nbars = plt.bar(list(map(str ,df1.index)) , df1.Selling_Price ,color='lightgreen')\nfor bar in bars:\n     plt.text(bar.get_x()+bar.get_width()\/2 , bar.get_height()-.5 , s=f'{bar.get_height():.2f}' ,fontdict={'size':8}  ,rotation=90)\nplt.xticks(np.arange(0 ,3),list(map(str ,df1.index)) ,color='lightgreen'  , size=12)\nplt.yticks(color='lightgreen',size=12)\nplt.ylabel('Selling Price',color='lightgreen',size=14)\nplt.xlabel('Owner',color='lightgreen',size=14)\nplt.grid(ls=':' , lw='.5' , color='k' ,alpha=.3)\nplt.show()","2fe18917":"# plot to show how owner ship affects selling price \nplt.figure(dpi=100,facecolor='Black' , figsize=(9 ,5))\nplt.title('Selling Price Percentage By Owner' ,color='lightgreen' ,size=14 , weight='heavy')\nbars = plt.bar(list(map(str ,df1.index)) , df1.Percentage ,color='lightgreen')\nfor bar in bars:\n     plt.text(bar.get_x()+bar.get_width()\/2 , bar.get_height()+.2 , s=f'{bar.get_height():.2f}%' ,fontdict={'size':12})\nplt.xticks(np.arange(0 ,3),list(map(str ,df1.index)) ,color='lightgreen'  , size=12)\nplt.yticks(np.arange(0 ,5),color='lightgreen',size=12)\nplt.ylabel('Selling Price',color='lightgreen',size=14)\nplt.xlabel('Owner',color='lightgreen',size=14)\nplt.grid(ls=':' , lw='.5' , color='k' ,alpha=.3)\nplt.show()","37d35c62":"#### lets check does selling price depends on selling price\n","4b23da16":"### `Selling` , `Present` Price Per `Year` ","bd7946f0":"### Lets See Skewness of Numerical Data","576e5111":"### Lets See How Owner-Ship Affects Selling Price  ","73d28e41":"**Average Selling and Present Price of Top 5 Brands**"}}