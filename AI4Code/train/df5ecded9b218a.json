{"cell_type":{"04b494e2":"code","f990d53a":"code","c5dc0ea1":"code","301e41f8":"code","65ba70a1":"code","80175b43":"code","84399f43":"code","73179f28":"code","da8fcdd5":"code","fb73a1ab":"code","ee2d5885":"code","bf23b580":"code","a8b59250":"code","d2ba82c5":"code","ffacff15":"code","02e66945":"code","796f6009":"code","663a1710":"code","a919dbbc":"code","46c2218b":"code","b9c056dc":"code","50324a6b":"code","ccd28b60":"code","a4692524":"code","2c86f899":"code","f635ee88":"code","1ff28041":"code","0e88ab4a":"code","b805be82":"code","16efa6c7":"code","c6b3b28c":"code","43d7409f":"code","88189a80":"code","dfc0b53a":"code","c46535f2":"code","c569245f":"code","55b954ec":"code","5b5d0e6c":"code","7a04677c":"markdown","dca73e7c":"markdown","17200f0b":"markdown","f215b404":"markdown","faa9a262":"markdown","14ce45aa":"markdown","9ef8366f":"markdown","e68e26b0":"markdown","f4062b2b":"markdown","898fb73c":"markdown","fb4003fd":"markdown","b07ceaf8":"markdown","a7784997":"markdown","c0aa8083":"markdown","304ce077":"markdown","c8f0cf9f":"markdown","c8e355d8":"markdown","03b3a870":"markdown","98d16e0e":"markdown","dc28cb71":"markdown","afc03aa8":"markdown","1e8e4716":"markdown","b925eb57":"markdown","db6d4213":"markdown","4021f87c":"markdown","53591858":"markdown","4c4b20f9":"markdown","cf1fea01":"markdown","2ffc0213":"markdown","c9bc34f2":"markdown","8a531666":"markdown","18080416":"markdown","8b53af83":"markdown"},"source":{"04b494e2":"# Set up import statements for all of the packages that needed\n\nimport numpy as np\nimport pandas as pd\nimport datetime as dt\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n","f990d53a":"# Load the data and view a few lines\ndf = pd.read_csv('..\/input\/noshowappointments\/KaggleV2-May-2016.csv')\ndf.head()","c5dc0ea1":"# Dimensions of DataFrame\ndf.shape","301e41f8":"# Check null data\ndf.info()","65ba70a1":"# Check strange data\ndf.describe()","80175b43":"# Specify the datatype of some columns\nprint(type(df['ScheduledDay'][0]))\nprint(type(df['AppointmentDay'][0]))","84399f43":"df = df.query('Age >= 0')\ndf.shape","73179f28":"df.rename(columns={'No-show' : 'Show'}, inplace=True)\ndf.rename(columns={'Hipertension' : 'Hypertension', 'Handcap' : 'Handicap','PatientId':'PatientID'}, inplace=True)","da8fcdd5":"df['Show'] = df['Show'].replace({'No': 1, 'Yes': 0})\ndf['Show'] = df['Show'].astype('int64')\ndf.head()","fb73a1ab":"df.drop(['AppointmentID'], axis=1, inplace=True)\ndf.head(1)","ee2d5885":"df = df.drop_duplicates()\ndf.shape","bf23b580":"df['ScheduledDay'] = pd.to_datetime(df['ScheduledDay'])\ndf['AppointmentDay'] = pd.to_datetime(df['AppointmentDay'])\ndf['PatientID'] = df['PatientID'].astype('int64')","a8b59250":"df['ScheduledDay'] = df['ScheduledDay'].dt.date\ndf['AppointmentDay'] = df['AppointmentDay'].dt.date\n\ndf['Waitingdays'] = df['AppointmentDay'] - df['ScheduledDay']\ndf.shape","d2ba82c5":"df['Waitingdays'] = df['Waitingdays'].astype('str')\ndf['Waitingdays'] = df['Waitingdays'].apply(lambda x: x.split()[0])\ndf['Waitingdays'] = df['Waitingdays'].astype('int64')\ndf = df.query('Waitingdays >= 0')\ndf.info()","ffacff15":"# Overview of variable distribution\ndf.hist(figsize = (10,10));","02e66945":"df.groupby('Show')['Show'].count().plot(figsize=(5,5),kind='pie',autopct='%.2f',colors=['lightcoral','lightgray']);","796f6009":"presence = df.query('Show == 1')\nabsence = df.query('Show == 0')\npresence.Age.hist(alpha=0.5, bins=max(df.Age), label='presence', color='red')\nabsence.Age.hist(alpha=0.5, bins=max(df.Age), label='absence', color='black')\nplt.title('Age Distribution')\nplt.xlabel('Age')\nplt.legend();","663a1710":"presence.Waitingdays.hist(alpha=0.5, bins=max(df.Waitingdays), label='presence', color='red', figsize=(15,10))\nabsence.Waitingdays.hist(alpha=0.5, bins=max(df.Waitingdays), label='absence', color='black',figsize=(15,10))\nplt.title('Waitingdays Distribution')\nplt.xlabel('Waitingdays')\nplt.legend();","a919dbbc":"# Define two functions that return the number of counts in show people and no-show people in each group, \n# and show rate for each subgroup. For example, for Gender group, female and male is its subgroup.\ndef count_group(group):\n    x = df.groupby([group,'Show'])['Show'].count()\n    return x\n\ndef proportion_subgroup(subgroup):\n    show = df.query('Show == 1').groupby(subgroup)['Show'].count()\n    total = df.groupby(subgroup)['Show'].count()\n    y = show \/ total\n    return y","46c2218b":"count_gender = count_group('Gender')\ncount_gender.plot(kind='bar',title='Counts by Gender', color=['black', 'black', 'red', 'red'], alpha=.7)\nplt.xlabel('Gender and Show', fontsize=18)\nplt.ylabel('Count', fontsize=18);","b9c056dc":"proportion_gender = proportion_subgroup('Gender')\nproportion_gender.plot(kind='bar',title='Proportion by Gender', color=['black', 'red'], alpha=.7)\nplt.xlabel('Gender and Show', fontsize=18)\nplt.ylabel('Proportion of Show', fontsize=18);\nprint(proportion_gender)","50324a6b":"proportion_age = proportion_subgroup('Age')\nproportion_age.plot(x='Age',title='Proportion by Age', color=['black'], alpha=.7, figsize=(18,6))\nplt.axhline(y=0.8, color='red', linestyle='-')\nplt.axvline(x=90, color='red', linestyle='-')\nplt.xlabel('Age', fontsize=18)\nplt.ylabel('Proportion of Show', fontsize=18);","ccd28b60":"proportion_neighbour = proportion_subgroup('Neighbourhood')\nproportion_neighbour.plot(kind='bar',title='Proportion by Neighbourhood', color=['black'], alpha=.7, figsize=(35,8))\nplt.axhline(y=0.77, color='red', linestyle='-')\nplt.xlabel('Neighbourhood', fontsize=18)\nplt.ylabel('Proportion of Show', fontsize=18);","a4692524":"neighbourhood = pd.DataFrame()\nneighbourhood['total_dow'] = df.groupby('Neighbourhood').Show.count()\nneighbourhood['show_dow'] = df.groupby('Neighbourhood').Show.sum()\nneighbourhood['show_prop'] = df.groupby('Neighbourhood').Show.mean()\nneighbourhood.reset_index(inplace=True)\nneighbourhood.query('show_prop == 0')","2c86f899":"count_scholarship = count_group('Scholarship')\ncount_scholarship.plot(kind='bar',title='Counts by Scholarship', color=['black', 'black', 'red', 'red'], alpha=.7)\nplt.xlabel('Scholarship and Show', fontsize=18)\nplt.ylabel('Count', fontsize=18);","f635ee88":"proportion_scholarship = proportion_subgroup('Scholarship')\nproportion_scholarship.plot(kind='bar',title='Proportion by Scholarship', color=['black', 'red'], alpha=.7)\nplt.xlabel('Scholarship', fontsize=18)\nplt.ylabel('Proportion of Show', fontsize=18);\nprint(proportion_scholarship)","1ff28041":"proportion_wait = proportion_subgroup('Waitingdays')\nproportion_wait.plot(x='Waitingdays',title='Proportion by Waitingdays', color=['black'], alpha=.7, figsize=(15,6))\nplt.axvline(x=25, color='red', linestyle='-')\nplt.xlabel('Waitingdays', fontsize=18)\nplt.ylabel('Proportion of Show', fontsize=18);","0e88ab4a":"count_hypertension = count_group('Hypertension')\ncount_hypertension.plot(kind='bar',title='Counts by Hypertension', color=['black', 'black', 'red', 'red'], alpha=.7)\nplt.xlabel('Hypertension and Show', fontsize=18)\nplt.ylabel('Count', fontsize=18);","b805be82":"proportion_hypertension = proportion_subgroup('Hypertension')\nproportion_hypertension.plot(kind='bar',title='Proportion by Hypertension', color=['black', 'red'], alpha=.7)\nplt.xlabel('Hypertension', fontsize=18)\nplt.ylabel('Proportion of Show', fontsize=18);\nprint(proportion_hypertension)","16efa6c7":"count_diabetes = count_group('Diabetes')\ncount_diabetes.plot(kind='bar',title='Counts by Diabetes', color=['black', 'black', 'red', 'red'], alpha=.7)\nplt.xlabel('Diabetes and Show', fontsize=18)\nplt.ylabel('Count', fontsize=18);","c6b3b28c":"proportion_diabetes = proportion_subgroup('Diabetes')\nproportion_diabetes.plot(kind='bar',title='Proportion by Diabetes', color=['black', 'red'], alpha=.7)\nplt.xlabel('Diabetes', fontsize=18)\nplt.ylabel('Proportion of Show', fontsize=18);\nprint(proportion_diabetes)","43d7409f":"count_alcohol = count_group('Alcoholism')\ncount_alcohol.plot(kind='bar',title='Counts by Alcoholism', color=['black', 'black', 'red', 'red'], alpha=.7)\nplt.xlabel('Alcoholism and Show', fontsize=18)\nplt.ylabel('Count', fontsize=18);","88189a80":"proportion_alcohol = proportion_subgroup('Alcoholism')\nproportion_alcohol.plot(kind='bar',title='Proportion by Alcoholism', color=['black', 'red'], alpha=.7)\nplt.xlabel('Alcoholism', fontsize=18)\nplt.ylabel('Proportion of Show', fontsize=18);\nprint(proportion_alcohol)","dfc0b53a":"count_handicap = count_group('Handicap')\ncount_handicap.plot(kind='bar',title='Counts by Handicap', color=['black', 'black', 'red', 'red','red', 'red', 'red', 'red','red', 'red'], alpha=.7)\nplt.xlabel('Handicap and Show', fontsize=18)\nplt.ylabel('Count', fontsize=18);","c46535f2":"proportion_handicap = proportion_subgroup('Handicap')\nproportion_handicap.plot(kind='bar',title='Proportion by Handicap', color=['black', 'red','red','red', 'red'], alpha=.7)\nplt.xlabel('Handicap', fontsize=18)\nplt.ylabel('Proportion of Show', fontsize=18);","c569245f":"handicap = pd.DataFrame()\nhandicap['total_dow'] = df.groupby('Handicap').Show.count()\nhandicap['show_dow'] = df.groupby('Handicap').Show.sum()\nhandicap['show_prop'] = df.groupby('Handicap').Show.mean()\nhandicap.reset_index(inplace=True)\nhandicap","55b954ec":"count_sms = count_group('SMS_received')\ncount_sms.plot(kind='bar',title='Counts by SMS_received', color=['black', 'black', 'red', 'red'], alpha=.7)\nplt.xlabel('SMS_received and Show', fontsize=18)\nplt.ylabel('Count', fontsize=18);","5b5d0e6c":"proportion_sms = proportion_subgroup('SMS_received')\nproportion_sms.plot(kind='bar',title='Proportion by SMS_received', color=['black', 'red'], alpha=.7)\nplt.xlabel('SMS_received', fontsize=18)\nplt.ylabel('Proportion of Show', fontsize=18);\nprint(proportion_sms)","7a04677c":"About 80% of all patients showed up to their medical appointments while 20% did not show up","dca73e7c":"Fortunately, there is no missing or duplicated data in the dataset. However, some changes are also need to be made.\n>1. There is '-1 years old' in age column, which is impossible, this row need to be dropped.\n>2. No-show column is confusing. Inorder to make it straightforwad, we can change the column name to 'Show', and change the object in this column. Some mistake in label name such as'Handcap' and 'Hipertension' should also be corrected.\n>3. If two rows has absolutely same information regardless of AppointmentID, we can treat them as duplicated information.\n>4. The data types of scheduled day and appointment day are str, which need to be transfered to datatime, in order to be analyzed easily.\n>5. In order to make in-depth analysis of relationship between appointment time and presence, some new columns show be added.\n","17200f0b":"Drop row contains minus number in Age column","f215b404":"<a id='wrangling'><\/a>\n## Data Wrangling\n","faa9a262":"Most patients don't have hypertension, and the mean show-rate of these patiens is a little bit lower than the patients who has hypertension.","14ce45aa":"#### Double variable exploration","9ef8366f":"Most waitingdays distributed between 0-25, and there are few people waits over 40 days.","e68e26b0":"Most patients don't join the welfare program, and mean show-rate of these patiens is a little bit higher than the patients who joins.","f4062b2b":"Most patients don't receive SMS. Surperisingly, mean show rate is low in SMS received group than un-received group.","898fb73c":"\n### Data Cleaning\n ","fb4003fd":"Show-rate of patients aging between 10-30 is lower than those aging between 50-80, indicates that the older patients tends to show more. But because of the small amount of data for very old patients (>90) , the statistic is not accurate at that age.","b07ceaf8":"Drop Appointmentid column from dataset","a7784997":"### Research Question: \n> What factors are important for us to know in order to predict if a patient will show up for their scheduled appointment? ","c0aa8083":"# Project: Investigate a Dataset - [ No-show appointment ]\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","304ce077":"<a id='conclusions'><\/a>\n## Conclusions\n\n>From these analysis, we can find that patients with old age, short waiting time and don't receive the SMS tend to have highter means of show-rate. Other factors such as welfare system participation, underlying diseases or disability have sight effect.\n\n>Hospital location and patients' gender do not affect the mean show-rate\n\n\n### Limitations\n> These analysis are conducted without taking the patientID into consideration. Some patients may have bad record in appointment (didn't show often), and if these patients reserved the appointment many times, it may have influnce on total rate. Therefore, the analysis for specific patient could be important.\n","c8f0cf9f":"Rename columns name that are incorrect or confusing","c8e355d8":"A lots of factors can lead to the decrease of show-rate in patients, but some of them just have slight effect. According to this analysis report, there might be 3 important factors that is helpful for the prediction of patients' show: ***1. The age of patient***, ***2. How long the patients wait before appointment***, and ***3. Whether the patients received the SMS***.\n","03b3a870":"Relationship between waiting days and show-rate indicates that the shorter time patients wait, the higher show-rate they tend to have. But this conclusion only fits for the patients who wait less than 25 days.","98d16e0e":"Most patients don't have disbates, and the mean show-rate of these patiens is a little bit lower than the patients who has diabetes.","dc28cb71":"Most variables just have 2 values, but the data distribution **Age**, **Waitingdays** need to be carefully investigated.","afc03aa8":"<a id='intro'><\/a>\n## Introduction\n\n### Dataset Description\n> Here I used No-show appointment dataset. It colleted 110527 medical appointment parralel with 14 variables.\n\n### Column information\n>**PatientId:** Identification of patients      \n>**AppointmentID:** Identification of appointment\n>**Gender:** Gender of patients           \n>**ScheduledDay:** Scheduled time of appointment      \n>**AppointmentDay:** Actual time of appointment    \n>**Age:** Age of patients              \n>**Neighbourhood:** Location of the hospital     \n>**Scholarship:** Whether or not  the patient is enrolled in welfare system      \n>**Hipertension:** Whether or not the patient has hypertension     \n>**Diabetes:** Whether or not the patient has diabates       \n>**Alcoholism:** Whether or not the patient has alcoholism \n>**Handcap:** Whether or not the patient is disabled, and their severity          \n>**SMS_received:** Whether or not the patient has received the SMS about appointment    \n>**No-show:**  Whether or not the patient showed for appointment         \n\n### Question:\n> 1. What factors are important for us to know in order to predict if a patient will show up for their scheduled appointment? ","1e8e4716":"Change 'No' in Show column to '1', and 'Yes' to '0', and change to int type in order to analyze easily","b925eb57":"<a id='eda'><\/a>\n## Exploratory Data Analysis\n\nHere, I will focus on the relationship between different variables and Show.","db6d4213":"Convert time included date-time columns to only date columns, and Calculate waiting days and add the result to new column","4021f87c":"Change waitigdays datatype from str o int, and drop rows where waiting days is negative","53591858":"There is no difference in show-rate between different locations of hospital, regardless of a hospital with only 2 patients' record.","4c4b20f9":"Females make more appointments than males, but the show-rates between them are almost same.","cf1fea01":"Most patients are not disabled, and the mean show-rate of these patiens is a little bit lower than the patients who are slightly disabled(rate=1). But for the patients who ahave severe disability (rate >= 2), the mean show-rate for them is same or lower than normal patients.","2ffc0213":"Most patients don't have Alcohilism, and the mean show-rate of these patiens is same as the patients who has alcoholism.","c9bc34f2":"#### Single variable exploration","8a531666":"Change the data type in column scheduledday and appointmentday from str to datetime, and pstientid from float to int","18080416":"Most record age distributed between 0-65, and there are few people aged beyound 90.","8b53af83":"Drop duplicated columns"}}