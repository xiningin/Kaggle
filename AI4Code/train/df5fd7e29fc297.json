{"cell_type":{"d36bdb65":"code","e3c81650":"code","4bc05a4b":"code","27810948":"code","ed98b21a":"code","c40e64d7":"code","ba38e7de":"code","7710fdbf":"code","f102f4c4":"code","8d0a0da0":"code","7309dffe":"code","3756b978":"code","1efe20ee":"code","65a03ebf":"code","35821e68":"code","30453de5":"code","0dbf12b9":"code","c299c0c0":"code","5da20166":"code","c29c540f":"code","a8606fda":"code","33da09a2":"markdown","fc5387df":"markdown","cb4e95b3":"markdown","90de372c":"markdown","87fe1f8f":"markdown","c5f74ca5":"markdown","52f6fc65":"markdown","fb9ff0b3":"markdown","48371cb7":"markdown"},"source":{"d36bdb65":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e3c81650":"cancer_df=pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv')\ncancer_df.head()","4bc05a4b":"cancer_df.columns","27810948":"cancer_df.isnull().sum()","ed98b21a":"#remove the uunamed column\ncancer_df=cancer_df.drop(['Unnamed: 32'],axis=1)","c40e64d7":"import seaborn as sns\nimport matplotlib.pyplot as plt","ba38e7de":"#check the correletion of whole data\nplt.figure(figsize=(20,10))\nsns.heatmap(cancer_df.corr())\nplt.show()","7710fdbf":"cancer_df.corr()","f102f4c4":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\nfor i in list(cancer_df.columns):\n    if cancer_df[i].dtype=='object':\n        cancer_df[i]=le.fit_transform(cancer_df[i])","8d0a0da0":"y=cancer_df['diagnosis']\nx=cancer_df.drop('diagnosis',axis=1)","7309dffe":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0,test_size=0.2)","3756b978":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nlist_1=[]\nfor i in range(1,21):\n    knn=KNeighborsClassifier(n_neighbors=i)\n    knn.fit(x_train,y_train)\n    pred_s=knn.predict(x_test)\n    scores=accuracy_score(y_test,pred_s)\n    list_1.append(scores)","1efe20ee":"plt.figure(figsize=(10,10))\nplt.scatter(range(1,21),list_1)\nplt.xlabel('k values')\nplt.ylabel('accuracy scores')\nplt.show()","65a03ebf":"plt.figure(figsize=(20,10))\nsns.barplot(x=list(range(1,21)),y=list_1)\nplt.xlabel('score')\nplt.ylabel('values')\nplt.show()","35821e68":"print(max(list_1))","30453de5":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression(max_iter=10000)\nlr.fit(x_train,y_train)\npred_1=lr.predict(x_test)\nscore_1=accuracy_score(y_test,pred_1)","0dbf12b9":"score_1","c299c0c0":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier()\nrfc.fit(x_train,y_train)\npred_2=rfc.predict(x_test)\nscore_2=accuracy_score(y_test,pred_2)","5da20166":"score_2","c29c540f":"from sklearn.ensemble import GradientBoostingClassifier\ngbc=GradientBoostingClassifier()\ngbc.fit(x_train,y_train)\npred_3=gbc.predict(x_test)\nscore_3=accuracy_score(y_test,pred_3)","a8606fda":"score_3","33da09a2":"## Apple Machine Learning Model","fc5387df":"### Thank You For Having A Look At This Notebook\n### Please **Upvote** if this was Helpful.","cb4e95b3":"## random forest classifier gives the best score among all","90de372c":"# Cancer prediction for beginners(acc 96%)","87fe1f8f":"## Visualization","c5f74ca5":"## Use Logistic Regression","52f6fc65":"## Use Random Forest Classifier","fb9ff0b3":"## Use Gradien Boosting Classifier","48371cb7":"## Use KNeighbors Classifier"}}