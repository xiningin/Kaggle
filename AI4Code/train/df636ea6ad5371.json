{"cell_type":{"4c7a4d96":"code","247b9fae":"code","aa4dab34":"code","10099986":"code","00a27d03":"code","e6113507":"code","0e89eecf":"code","91f1b381":"code","1906b2fe":"code","596b86af":"code","139c3829":"code","c19b93d7":"code","2bb4829c":"code","c045c18f":"code","6eaccc00":"code","7e57600b":"code","a8522df1":"code","23db72a1":"code","017f7d28":"code","aea7cea3":"code","873e6427":"code","19ebe023":"code","7094cacf":"code","05e55c78":"code","1f109d45":"code","4c3a7f38":"code","78721e21":"markdown","88e32a3a":"markdown","94e9a182":"markdown","5940038d":"markdown","0bddf926":"markdown","6bd4dad2":"markdown","62abdf40":"markdown","fd8cee09":"markdown","e91cab75":"markdown","7ae801cd":"markdown"},"source":{"4c7a4d96":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","247b9fae":"import matplotlib.pyplot as plt\nimport seaborn as sb\nsb.set_style('whitegrid')\n%matplotlib inline","aa4dab34":"df=pd.read_csv('..\/\/input\/london-bike-sharing-dataset\/london_merged.csv',parse_dates=True)","10099986":"\n#Data feature descriptions\n\n# \"timestamp\" - timestamp field for grouping the data\n# \"cnt\" - the count of a new bike shares\n# \"t1\" - real temperature in C\n# \"t2\" - temperature in C \"feels like\"\n# \"hum\" - humidity in percentage\n# \"wind_speed\" - wind speed in km\/h\n# \"weather_code\" - category of the weather\n# \"is_holiday\" - boolean field - 1 holiday \/ 0 non holiday\n# \"is_weekend\" - boolean field - 1 if the day is weekend\n# \"season\" - category field meteorological seasons: 0-spring ; 1-summer; 2-fall; 3-winter.\n\n# \"weathe_code\" category description:\n# 1 = Clear ; mostly clear but have some values with haze\/fog\/patches of fog\/ fog in vicinity\n# 2 = scattered clouds \/ few clouds\n# 3 = Broken clouds\n# 4 = Cloudy\n# 7 = Rain\/ light Rain shower\/ Light rain\n# 10 = rain with thunderstorm\n# 26 = snowfall\n# 94 = Freezing Fog","00a27d03":"df.head()","e6113507":"df.info()","0e89eecf":"df['timestamp'] = pd.to_datetime(df['timestamp'])","91f1b381":"type(df['timestamp'].iloc[0])","1906b2fe":"df['Hour']=df['timestamp'].apply(lambda time: time.hour)\ndf['Month']=df['timestamp'].apply(lambda time: time.month)\ndf['day of week']=df['timestamp'].apply(lambda time: time.dayofweek)","596b86af":"dmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\n","139c3829":"df['day of week'] = df['day of week'].map(dmap)","c19b93d7":"df.head()","2bb4829c":"# plotting no of counts on each day w.r.t to weather\nplt.figure(figsize=(8,4), dpi=100)\nsb.countplot(x='day of week',hue='weather_code',data=df,palette='viridis')\n# To relocate the legend\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","c045c18f":"plt.figure(figsize=(8,4), dpi=100)\n\n#plotting Hourly data w.r.t weather.\nsb.countplot(x='Hour',data=df,hue='weather_code',palette='viridis')\n# To relocate the legend\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","6eaccc00":"plt.figure(figsize=(8,4), dpi=100)\n# plotting count of bikes on each day on hourly basis.\nsb.countplot(x='day of week',hue='Hour',data=df,palette='viridis')\n# To relocate the legend\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","7e57600b":"# no of bikes according to is_weekend column\nplt.figure(figsize=(8,4), dpi=100)\nsb.countplot(x='is_weekend',data=df,palette='viridis')","a8522df1":"# no of bikes according to is_holiday column.\nplt.figure(figsize=(8,4), dpi=100)\nsb.countplot(x='is_holiday',data=df,palette='viridis')","23db72a1":"# no. of bikes accoding to season column\nplt.figure(figsize=(8,4), dpi=100)\nsb.countplot(x='season',data=df,palette='viridis')","017f7d28":"#no 0f bikes according to weather code\nplt.figure(figsize=(8,4), dpi=100)\nsb.countplot(x='weather_code',data=df,palette='viridis')","aea7cea3":"plt.figure(figsize=(8,4), dpi=100)\nsb.countplot(x='Month',data=df,palette='viridis')","873e6427":"df.max()","19ebe023":"df.min()","7094cacf":"#seleting row with max humidity\ndf.iloc[df['hum'].idxmax()]\n#we can see when the humidity is high bike count is low","05e55c78":"#seleting row with min humidity\ndf.iloc[df['hum'].idxmin()]\n#when humidity is low bike count is comparitively high.","1f109d45":"#seleting row with max wind speed\ndf.iloc[df['wind_speed'].idxmax()]","4c3a7f38":"#seleting row with min wnd speed\ndf.iloc[df['wind_speed'].idxmin()]\n#number of bike count is high with maximum speed.","78721e21":"No of Bikes are higher on the day when the weather is clear.","88e32a3a":"Reading data","94e9a182":"Getting info of data","5940038d":"Getting Hour,month and day of week from the timestamp column.","0bddf926":"The Day of Week is an integer 0-6. Use the .map() with this dictionary to map the actual string names to the day of the week","6bd4dad2":"Number of bikes are higher when there is no holiday.","62abdf40":"importing libraries","fd8cee09":"Converting timestamp column into Time stamp object.","e91cab75":"Getting first five rows of dataset.","7ae801cd":"As we can see the count of bikes are high on weekdays."}}