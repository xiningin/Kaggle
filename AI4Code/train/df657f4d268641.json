{"cell_type":{"6bf6841c":"code","7a4b1a9b":"code","221e8056":"code","7f37b8cf":"code","2f8efb3b":"code","92dab560":"code","658cb298":"code","b29e83f4":"code","dfdd256b":"code","992ee041":"code","b23a448d":"code","f87984c2":"code","c62798f2":"code","eacb98d2":"code","179195da":"code","3431d7f2":"code","a93f2255":"code","10ff3084":"code","6572a955":"code","fa889094":"code","2333de13":"code","6d5cbb69":"markdown","ac69991b":"markdown","50931207":"markdown","59a879b0":"markdown","425ac80c":"markdown","1946b697":"markdown"},"source":{"6bf6841c":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn.datasets as sk\nimport plotly.express as px\nimport plotly.subplots as pxs\nimport skimage.io as ski\nimport plotly.graph_objects as pxg\nimport librosa as lr\nimport librosa.display as lrd\n\nplt.rcParams['figure.figsize'] = [9, 9] ","7a4b1a9b":"#\u041d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 iris\niris_data = pd.DataFrame(data=sk.load_iris().data, columns=sk.load_iris().feature_names)\niris_data.shape","221e8056":"iris_data.head(15)","7f37b8cf":"#\u041a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f iris\niris_data.corr().style.background_gradient(cmap=\"coolwarm\")","2f8efb3b":"#\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e\u0431 iris\niris_data.describe()","92dab560":"#\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 iris\npx.bar(iris_data)","658cb298":"# fashion mnist\nfashion_mnist_data = pd.read_csv('\/kaggle\/input\/fashionmnist\/fashion-mnist_test.csv')\nfashion_mnist_data.shape","b29e83f4":"clothing_labels = {}\nfor el in set(fashion_mnist_data.label):\n    clothing_labels[el] = list(fashion_mnist_data.label).count(el)\nset(clothing_labels), clothing_labels\n\n","dfdd256b":"fig = px.pie(values=clothing_labels.values(), names=clothing_labels.keys())\nfig.show()","992ee041":"#chinese mnist\nchinese_mnist_data = pd.read_csv(\"\/kaggle\/input\/chinese-mnist\/chinese_mnist.csv\")\nchinese_mnist_data.shape","b23a448d":"#\u0421\u0442\u043e\u043b\u0431\u0446\u044b \u0438\u0437 \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445\nchinese_mnist_data.keys()","f87984c2":"def return_image(el):\n    return f\"input_{el[0]}_{el[1]}_{el[2]}.jpg\"\nchinese_mnist_data['image'] = chinese_mnist_data.apply(return_image, axis=1)","c62798f2":"px.imshow(ski.imread(f\"\/kaggle\/input\/chinese-mnist\/data\/data\/{chinese_mnist_data.image[0]}\"), color_continuous_scale='gray')","eacb98d2":"# \u0447\u0438\u0442\u0430\u0435\u043c \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 signmnist\nsign_mnist = pd.read_csv(\"\/kaggle\/input\/sign-language-mnist\/sign_mnist_test\/sign_mnist_test.csv\")\nsign_mnist.shape","179195da":"sign_mnist.label.unique()","3431d7f2":"# \u0431\u0440\u0438\u0442\u0430\u043d\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b \u0438 \u0438\u0445 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\nsign_lab_unique = {}\nfor el in set(sign_mnist.label):\n    sign_lab_unique[el] = list(sign_mnist.label).count(el)\nsign_lab_unique","a93f2255":"# \u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445\npx.pie(values=sign_lab_unique.values(), names=sign_lab_unique.keys())","10ff3084":"#\u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \"sound\"\nsound_set = pd.read_csv(\"\/kaggle\/input\/urbansound8k\/UrbanSound8K.csv\")\nsound_set.head(30)","6572a955":"# \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\nsound_unique = {}\nfor el in set(sound_set.classID):\n    sound_unique[el] = list(sound_set.classID).count(el)\nsound_unique","fa889094":"# \u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 \u043f\u043b\u0430\u043d - 1, \u0444\u043e\u043d\u043e\u0432\u044b\u0435 \u0437\u0432\u0443\u043a\u0438 - 2 \nsound_for_back = {}\nfor el in set(sound_set.salience):\n    sound_for_back[el] = list(sound_set.salience).count(el)\nsound_for_back","2333de13":"#\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c sounds\npx.pie(values=sound_unique.values(), names=sound_unique.keys())","6d5cbb69":"conclusion (urban sound) this dataset contains .wav files of different sounds. you can represent sound files as array of numbers. also this dataset contains foreground and background sounds as well. dataset has 9 different types of audio fragments (child play, dog bark, air cond, etc)","ac69991b":"conclusion (iris): iris dataset is a dataset about Iris plant. This dataset contains 4 columns (outer leaf height, outer leaf width, inner leaf height, inner leaf width), and 150 rows (150 plants). This dataset can be used to generate more information about Iris plants","50931207":"\u0412\u0438\u043a\u043e\u043d\u0430\u0442\u0438 Data Understanding \u0430\u043d\u0430\u043b\u0456\u0437 \u0442\u0430\u043a\u0438\u0445 \u043d\u0430\u0431\u043e\u0440\u0456\u0432 \u0434\u0430\u043d\u0438\u0445:\n\nIris\nMNIST\nFashion MNIST\nchinese-mnist (https:\/\/www.kaggle.com\/gpreda\/chinese-mnist)\nsign-language-mnist (https:\/\/www.kaggle.com\/datamunge\/sign-language-mnist)\nUrban Sound (https:\/\/www.kaggle.com\/chrisfilo\/urbansound8k)\nUrban Sound Spectrograms (https:\/\/www.kaggle.com\/gokulrejith\/urban-sound-8k-images)\n\nData Understanding \u043f\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0430\u0454:\n\u0430\u043d\u0430\u043b\u0456\u0437 \u043e\u043f\u0438\u0441\u043e\u0432\u043e\u0457 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 (\u0441\u0435\u0440\u0435\u0434\u043d\u0454 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f, \u0434\u0438\u0441\u043f\u0435\u0440\u0441\u0456\u044f, \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0435 \u0442\u0430 \u043c\u0456\u043d\u0456\u043c\u0430\u043b\u044c\u043d\u0435. \u041a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0441\u043f\u043e\u0441\u0442\u0435\u0440\u0435\u0436\u0435\u043d\u044c \u0443 \u043a\u043b\u0430\u0441\u0430\u0445)\n\u0432\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0434\u0430\u043d\u0438\u0445 (\u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u0431\u0456\u0431\u043b\u0456\u043e\u0442\u0435\u043a\u0438 PIL, OpenCV, scikit-image, librosa, seaborn, plotly)","59a879b0":"conclusion (sign mnist) sign mnist dataset can be used for machine learning algorithm for understanding sign language. this dataset contains 25 letters in 28x28 format.","425ac80c":"conclusion (chinese mnist) chinese mnist dataset contains images with chinese characters. this dataset can be used to train a learning algorithm to classify chinese letters and translate chinese text (use in translator)","1946b697":"conclusion (mnist fashion) mnist fashion dataset contains 10000 photos of different types of clothes. there's 10 types of clothes (T-shirt\/top, Trouser, Pullover, Dress, Coat, Sandal, Shirt, Sneaker, Bag, Ankle boot). this dataset can be used for machine learning for clothes classification"}}