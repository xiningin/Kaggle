{"cell_type":{"2b89f990":"code","1c6a949b":"code","fb01f508":"code","62d78aaa":"code","1ef065e9":"code","fdfbf13e":"code","1b0dfe69":"code","6ea3fd45":"code","1a277e89":"code","45b4e165":"code","5405cbd3":"code","46a4e48f":"code","e4005787":"code","d215aee3":"code","c007c2e8":"code","50115c42":"code","d71028cc":"code","2d597fb8":"code","3929b657":"code","c8e20a5f":"markdown","eaa21688":"markdown","798b30ea":"markdown","3ac48f12":"markdown","2937e7ad":"markdown","640691e4":"markdown","73e4d446":"markdown","4dd3d436":"markdown","6afff6a4":"markdown","359d6377":"markdown","f6f4710a":"markdown","16dc5409":"markdown","64bcad3d":"markdown","908ce123":"markdown","969d4e5f":"markdown","dd527b5a":"markdown"},"source":{"2b89f990":"import math\nimport pandas as pd\nimport geopandas as gpd\n#from geopandas.tools import geocode            \nfrom learntools.geospatial.tools import geocode \n\nimport folium \nfrom folium import Marker\nfrom folium.plugins import MarkerCluster\n\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.geospatial.ex4 import *","1c6a949b":"def embed_map(m, file_name):\n    from IPython.display import IFrame\n    m.save(file_name)\n    return IFrame(file_name, width='100%', height='500px')","fb01f508":"# Load and preview Starbucks locations in California\nstarbucks = pd.read_csv(\"..\/input\/geospatial-learn-course-data\/starbucks_locations.csv\")\nstarbucks.head()","62d78aaa":"# How many rows in each column have missing values?\nprint(starbucks.isnull().sum())\n\n# View rows with missing locations\nrows_with_missing = starbucks[starbucks[\"City\"]==\"Berkeley\"]\nrows_with_missing","1ef065e9":"# Your code here\ndef my_geocoder(row):\n    point = geocode(row, provider='nominatim').geometry[0]\n    return pd.Series({'Longitude': point.x, 'Latitude': point.y})\n\nberkeley_locations = rows_with_missing.apply(lambda x: my_geocoder(x['Address']), axis=1)\nstarbucks.update(berkeley_locations)\n\n\nberkeley_locations.head()","fdfbf13e":"# Create a base map\nm_2 = folium.Map(location=[37.88,-122.26], zoom_start=13)\n\n#Add a marker for each Berkeley location\nfor idx, row in berkeley_locations.iterrows():\n    Marker([row['Latitude'], row['Longitude']]).add_to(m_2)\n\n# Show the map\nembed_map(m_2, 'q_2.html')","1b0dfe69":"CA_counties = gpd.read_file(\"..\/input\/geospatial-learn-course-data\/CA_county_boundaries\/CA_county_boundaries\/CA_county_boundaries.shp\")\nCA_counties.head()","6ea3fd45":"CA_pop = pd.read_csv(\"..\/input\/geospatial-learn-course-data\/CA_county_population.csv\", index_col=\"GEOID\")\nCA_high_earners = pd.read_csv(\"..\/input\/geospatial-learn-course-data\/CA_county_high_earners.csv\", index_col=\"GEOID\")\nCA_median_age = pd.read_csv(\"..\/input\/geospatial-learn-course-data\/CA_county_median_age.csv\", index_col=\"GEOID\")","1a277e89":"CA_pop.head()","45b4e165":"CA_high_earners.head()","5405cbd3":"CA_median_age.head()","46a4e48f":"\ncols_to_add = CA_pop.join([CA_high_earners, CA_median_age]).reset_index()\nCA_stats = CA_counties.merge(cols_to_add, on=\"GEOID\")\n\n\nCA_stats.head()","e4005787":"CA_stats[\"density\"] = CA_stats[\"population\"] \/ CA_stats[\"area_sqkm\"]","d215aee3":"CA_stats.head()","c007c2e8":"sel_counties= CA_stats.loc[((CA_stats.median_age < 38.5) &\n              (CA_stats.density > 285) & \n              (CA_stats.high_earners>100000) &\n              (CA_stats.median_age < 35.5) |\n              (CA_stats.high_earners>500000) | \n              (CA_stats.density > 140))]\nsel_counties.head()","50115c42":"starbucks_gdf = gpd.GeoDataFrame(starbucks, geometry=gpd.points_from_xy(starbucks.Longitude, starbucks.Latitude))\nstarbucks_gdf.crs = {'init': 'epsg:4326'}","d71028cc":"starbucks_gdf.head()","2d597fb8":"# Fill in your answer\nlocations_of_interest = gpd.sjoin(starbucks_gdf, sel_counties)\nnum_stores = len(locations_of_interest)\n\n","3929b657":"# Create a base map\nm_6 = folium.Map(location=[37,-120], zoom_start=6)\n\n#show selected store locations\nfor idx, row in locations_of_interest.iterrows():\n    Marker([row['Latitude'], row['Longitude']]).add_to(m_6)\n\n\n# Show the map\nembed_map(m_6, 'q_6.html')","c8e20a5f":"Next, we create three DataFrames:\n- `CA_pop` contains an estimate of the population of each county.\n- `CA_high_earners` contains the number of households with an income of at least $150,000 per year.\n- `CA_median_age` contains the median age for each county.","eaa21688":"We can use the ampersand (&) to bring the two questions together\n,for or we can use (|)","798b30ea":"# Introduction\n\nAs a data analyst looking to find the next store into a [Starbucks Reserve Roastery](https:\/\/www.businessinsider.com\/starbucks-reserve-roastery-compared-regular-starbucks-2018-12#also-on-the-first-floor-was-the-main-coffee-bar-five-hourglass-like-units-hold-the-freshly-roasted-coffee-beans-that-are-used-in-each-order-the-selection-rotates-seasonally-5).  These roasteries are much larger than a typical Starbucks store and have several additional features, including various food and wine options, along with upscale lounge areas.  You'll investigate the demographics of various counties in the state of California, to determine potentially suitable locations.\n\n<center>\n<img src=\"https:\/\/i.imgur.com\/BIyE6kR.png\" width=\"450\"><br\/><br\/>\n<\/center>\n\nBefore you get started, run the code cell below to set everything up.","3ac48f12":"So, how many stores are in the counties you selected?","2937e7ad":"### 4) Which counties look promising?\n\nCollapsing all of the information into a single GeoDataFrame also makes it much easier to select counties that meet specific criteria.\n\nUse the next code cell to create a GeoDataFrame `sel_counties` that contains a subset of the rows (and all of the columns) from the `CA_stats` GeoDataFrame.  In particular, you should select counties where:\n- there are at least 100,000 households making \\$150,000 per year,\n- the median age is less than 38.5, and\n- the density of inhabitants is at least 285 (per square kilometer).\n\nAdditionally, selected counties should satisfy at least one of the following criteria:\n- there are at least 500,000 households making \\$150,000 per year,\n- the median age is less than 35.5, or\n- the density of inhabitants is at least 1400 (per square kilometer).","640691e4":"Now that we have all of the data in one place, it's much easier to calculate statistics that use a combination of columns.  Run the next code cell to create a \"density\" column with the population density.","73e4d446":"### 5) How many stores did you identify?\n\nWhen looking for the next Starbucks Reserve Roastery location, you'd like to consider all of the stores within the counties that you selected.  So, how many stores are within the selected counties?\n\nTo prepare to answer this question, run the next code cell to create a GeoDataFrame `starbucks_gdf` with all of the starbucks locations.","4dd3d436":"### 2) View Berkeley locations.\n\nLet's take a look at the locations you just found.  Visualize the (latitude, longitude) locations in Berkeley in the OpenStreetMap style. ","6afff6a4":"I will use the `embed_map()` function from the previous exercise to visualize your maps.","359d6377":"\n\n### 1) Geocode the missing locations.\n\nRun the next code cell to create a DataFrame `starbucks` containing Starbucks locations in the state of California.","f6f4710a":"Most of the stores have known (latitude, longitude) locations.  But, all of the locations in the city of Berkeley are missing.","16dc5409":"### 3) Consolidate the data.\n\nRun the code below to load a GeoDataFrame `CA_counties` containing the name, area (in square kilometers), and a unique id (in the \"GEOID\" column) for each county in the state of California.  The \"geometry\" column contains a polygon with county boundaries.","64bcad3d":"### 6) Visualize the store locations.\n\nCreate a map that shows the locations of the stores that you identified in the previous question.","908ce123":"\n\nIn this exercise, you will use a slightly different function `geocode()` (from `learntools.geospatial.tools`).  This function was imported at the top of the notebook and works identically to the function from GeoPandas.\n\n\n\n","969d4e5f":"Use the next code cell to join the `CA_counties` GeoDataFrame with `CA_pop`, `CA_high_earners`, and `CA_median_age`.\n","dd527b5a":"\nAll locations appear to be correct in the above"}}