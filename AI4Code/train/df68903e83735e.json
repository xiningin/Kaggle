{"cell_type":{"97306a44":"code","c223844a":"code","8965020c":"code","c57fc2a3":"code","87024dd9":"code","b297095a":"code","ab827cec":"code","ceaa3031":"code","d4fa01fe":"code","b7d90a6b":"markdown","4fad1a9e":"markdown","0049fc2b":"markdown","0a06d096":"markdown","5d8b4713":"markdown","71a61cfb":"markdown","2e952244":"markdown","0e2ad03b":"markdown","dbff79b1":"markdown","90371fef":"markdown","d17a8205":"markdown","c3d764fe":"markdown","72a0fce5":"markdown"},"source":{"97306a44":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\n\n%matplotlib inline\n\nmultiple = pd.read_csv('..\/input\/multipleChoiceResponses.csv', dtype=np.object)\nmulcQ = multiple.iloc[0,:]\nmulcA = multiple.iloc[1:,:]\n","c223844a":"fast = mulcA[round(mulcA.iloc[:,0].astype(int) \/ 60) <= 3].index\nmulcA = mulcA.drop(fast, axis=0)\nrol = mulcA.Q5\nrol.value_counts(normalize=True).plot(kind='bar')","8965020c":"rem = mulcA.Q9\nrem.value_counts().plot(kind='bar')","c57fc2a3":"#\nmulcA.replace({'Q9':{'0-10,000':1,'10-20,000':2,'20-30,000':3,'30-40,000':4,'40-50,000':5,'50-60,000':6,\n                       '60-70,000':7,'70-80,000':8,'80-90,000':9,'90-100,000':10,'100-125,000':11,'125-150,000':12,\n                       '150-200,000':13,'200-250,000':14,'250-300,000':15,'300-400,000':16,'400-500,000':17,\n                                 '500,000+':18}},inplace = True)\nmulcA.replace({'Q3':{'United Kingdom of Great Britain and Northern Ireland':'Great B.','Iran, Islamic Republic of...':'Iran',\n                       'United States of America':'USA','Hong Kong (S.A.R.)':'Hong Kong','Republic of Korea':'R. Korea',\n                      'Czech Republic':'Czech R.'}},inplace = True)\n\nq16 = multiple.filter(regex=\"(Q{t}$|Q{t}_)\".format(t = 16))[1:]\nq16_col = {'Q16_Part_1':'Python','Q16_Part_2':'R','Q16_Part_3':'SQL','Q16_Part_4': 'Bash','Q16_Part_5':'Java',\n           'Q16_Part_6':'Javascript','Q16_Part_7':'VBA','Q16_Part_8':'C\/C++','Q16_Part_9':'MATLAB',\n           'Q16_Part_10':'Scala','Q16_Part_11':'Julia','Q16_Part_12':'Go','Q16_Part_13':'C#\/.NET','Q16_Part_14':'PHP',\n           'Q16_Part_15':'Ruby','Q16_Part_16':'SAS\/STATA'}\n\nq16_lim= q16.rename(columns=q16_col).fillna(0).replace('[^\\\\d]',1, regex=True)\nq16_lim.pop('Q16_Part_17')\nq16_lim.pop('Q16_Part_18')\nq16_lim.pop('Q16_OTHER_TEXT')\nlab = list(q16_lim.iloc[:0])\nfor i in lab:\n    mulcA[i]= q16_lim['{}'.format(i)]\n#\ncom_sci = mulcA[(mulcA.Q5 == 'Computer science (software engineering, etc.)') & (mulcA.Q9 != 'I do not wish to disclose my approximate yearly compensation')]\neng_nco = mulcA[(mulcA.Q5 == 'Engineering (non-computer focused)') & (mulcA.Q9 != 'I do not wish to disclose my approximate yearly compensation')]\nmat_sta = mulcA[(mulcA.Q5 == 'Mathematics or statistics') & (mulcA.Q9 != 'I do not wish to disclose my approximate yearly compensation')]\nbiu_dis = mulcA[(mulcA.Q5 == 'A business discipline (accounting, economics, finance, etc.)') & (mulcA.Q9 != 'I do not wish to disclose my approximate yearly compensation')]\nphy_ast = mulcA[(mulcA.Q5 == 'Physics or astronomy') & (mulcA.Q9 != 'I do not wish to disclose my approximate yearly compensation')]\ninf_tec = mulcA[(mulcA.Q5 == 'Information technology, networking, or system administration') & (mulcA.Q9 != 'I do not wish to disclose my approximate yearly compensation')]\nmed_sci = mulcA[(mulcA.Q5 == 'Medical or life sciences (biology, chemistry, medicine, etc.)') & (mulcA.Q9 != 'I do not wish to disclose my approximate yearly compensation')]\nsoc_sci = mulcA[(mulcA.Q5 == 'Social sciences (anthropology, psychology, sociology, etc.)') & (mulcA.Q9 != 'I do not wish to disclose my approximate yearly compensation')]\nhum_tie = mulcA[(mulcA.Q5 == 'Humanities (history, literature, philosophy, etc.)') & (mulcA.Q9 != 'I do not wish to disclose my approximate yearly compensation')]\nenv_sci = mulcA[(mulcA.Q5 == 'Environmental science or geology') & (mulcA.Q9 != 'I do not wish to disclose my approximate yearly compensation')]\nfin_art = mulcA[(mulcA.Q5 == 'Fine arts or performing arts') & (mulcA.Q9 != 'I do not wish to disclose my approximate yearly compensation')]\n\n\nrem_prom = [com_sci.Q9.mean(),eng_nco.Q9.mean(),mat_sta.Q9.mean(),biu_dis.Q9.mean(),phy_ast.Q9.mean(),inf_tec.Q9.mean(),med_sci.Q9.mean(),\n            soc_sci.Q9.mean(),hum_tie.Q9.mean(),env_sci.Q9.mean(),fin_art.Q9.mean()]\nplt.figure(figsize=(20,10))\nplt.bar(np.arange(11),rem_prom,color=['dodgerblue','c','tomato','silver','midnightblue','tan'])\nplt.xticks(np.arange(11), ('Com. Science', 'Engieneering', 'Mathematics', 'Economics', 'Physics','Inf. Tecnologist','Medics','Social sciences','Humanities',\n                            'Env. Sciense','Arts'))\nplt.yticks(np.arange(10),('$10000','$20000','$30000','$40000','$50000','$60000','$70000','$80000','$90000','$100000'))","87024dd9":"\nage_18_21 = mulcA.Q5[(mulcA.Q2 == '18-21')&(mulcA.Q5 != 'Other')&(mulcA.Q5 != 'I never declared a major')]\nage_22_24 = mulcA.Q5[(mulcA.Q2 == '22-24')&(mulcA.Q5 != 'Other')&(mulcA.Q5 != 'I never declared a major')]\nage_25_29 = mulcA.Q5[(mulcA.Q2 == '25-29')&(mulcA.Q5 != 'Other')&(mulcA.Q5 != 'I never declared a major')]\nage_30_34 = mulcA.Q5[(mulcA.Q2 == '30-34')&(mulcA.Q5 != 'Other')&(mulcA.Q5 != 'I never declared a major')]\nage_35_39 = mulcA.Q5[(mulcA.Q2 == '35-39')&(mulcA.Q5 != 'Other')&(mulcA.Q5 != 'I never declared a major')]\nage_40_44 = mulcA.Q5[(mulcA.Q2 == '40-44')&(mulcA.Q5 != 'Other')&(mulcA.Q5 != 'I never declared a major')]\nage_45_49 = mulcA.Q5[(mulcA.Q2 == '45-49')&(mulcA.Q5 != 'Other')&(mulcA.Q5 != 'I never declared a major')]\nage_50_54 = mulcA.Q5[(mulcA.Q2 == '50-54')&(mulcA.Q5 != 'Other')&(mulcA.Q5 != 'I never declared a major')]\nage_55_59 = mulcA.Q5[(mulcA.Q2 == '55-59')&(mulcA.Q5 != 'Other')&(mulcA.Q5 != 'I never declared a major')]\nage_60_69 = mulcA.Q5[(mulcA.Q2 == '60-69')&(mulcA.Q5 != 'Other')&(mulcA.Q5 != 'I never declared a major')]\nage_70_79 = mulcA.Q5[(mulcA.Q2 == '70-79')&(mulcA.Q5 != 'Other')&(mulcA.Q5 != 'I never declared a major')]\nage_80m = mulcA.Q5[(mulcA.Q2 == '80+')&(mulcA.Q5 != 'Other')&(mulcA.Q5 != 'I never declared a major')]\n\ndf_arol = pd.DataFrame([age_18_21.value_counts(normalize=True),age_22_24.value_counts(normalize=True),age_25_29.value_counts(normalize=True),age_30_34.value_counts(normalize=True),\n                        age_35_39.value_counts(normalize=True),age_40_44.value_counts(normalize=True),age_45_49.value_counts(normalize=True),age_50_54.value_counts(normalize=True)\n                        ,age_55_59.value_counts(normalize=True),age_60_69.value_counts(normalize=True),age_70_79.value_counts(normalize=True),age_80m.value_counts(normalize=True)],\n                       index=['age18-21','age22-24','age25-29','age30-34','age35-39','age40-44','age45-49','age50-54','age55-59'\n                              ,'age60-69','age70-79','age80+']).T\n\naxes = df_arol.plot.barh(rot=0, subplots=True,figsize=(15,35))\n","b297095a":"plt.figure(figsize=(15,3))\nnames = ['Comp. Science','Engeneering','Mathematics','Inf. Technology','Business','Physics','Medical','Soc. Science']\ndf_coun = pd.DataFrame([com_sci.Q3.value_counts(),eng_nco.Q3.value_counts(),mat_sta.Q3.value_counts(),inf_tec.Q3.value_counts()\n                        ,biu_dis.Q3.value_counts(),phy_ast.Q3.value_counts(),med_sci.Q3.value_counts(),soc_sci.Q3.value_counts()]\n                       ,index=[names])\ndf_coun= df_coun.drop(['Other'],axis=1).T\nfig, axes = plt.subplots(4, 2,  sharey=True,figsize=(15,20))\naxes[0, 0].barh(df_coun.index[:10],list(map(int,df_coun['Comp. Science'].values[:10])),color='cadetblue')\naxes[0, 0].set_title('Comp. Science')\naxes[0, 1].barh(df_coun.index[:10],list(map(int,df_coun['Engeneering'].values[:10])),color='slategray')\naxes[0, 1].set_title('Engeneering')\naxes[1, 0].barh(df_coun.index[:10],list(map(int,df_coun['Mathematics'].values[:10])),color='seagreen')\naxes[1, 0].set_title('Mathematics')\naxes[1, 1].barh(df_coun.index[:10],list(map(int,df_coun['Inf. Technology'].values[:10])),color='palevioletred')\naxes[1, 1].set_title('Inf. Technology')\naxes[2, 0].barh(df_coun.index[:10],list(map(int,df_coun['Business'].values[:10])),color='darkblue')\naxes[2, 0].set_title('Business')\naxes[2, 1].barh(df_coun.index[:10],list(map(int,df_coun['Physics'].values[:10])),color='khaki')\naxes[2, 1].set_title('Physics')\naxes[3, 0].barh(df_coun.index[:10],list(map(int,df_coun['Medical'].values[:10])),color='k')\naxes[3, 0].set_title('Medical')\naxes[3, 1].barh(df_coun.index[:10],list(map(int,df_coun['Soc. Science'].values[:10])),color='firebrick')\naxes[3, 1].set_title('Soc. Science')","ab827cec":"lengs = pd.DataFrame([mulcA['Python'].sum(),mulcA['R'].sum(),mulcA['SQL'].sum(),mulcA['Bash'].sum(),mulcA['Java'].sum(),\n                           mulcA['Javascript'].sum(),mulcA['VBA'].sum(),mulcA['C\/C++'].sum(),mulcA['MATLAB'].sum(),\n                           mulcA['Scala'].sum(),mulcA['Julia'].sum(),mulcA['Go'].sum(),mulcA['C#\/.NET'].sum(),\n                           mulcA['PHP'].sum(),mulcA['Ruby'].sum(),mulcA['SAS\/STATA'].sum()],index=lab)\nlengs.plot(kind='bar',color='brown')","ceaa3031":"com_sci_lengs=[mulcA[i][mulcA.Q5=='Computer science (software engineering, etc.)'].sum() for i in lab ]\neng_nco_lengs=[mulcA[i][mulcA.Q5=='Engineering (non-computer focused)'].sum() for i in lab ]\nmat_sta_lengs=[mulcA[i][mulcA.Q5=='Mathematics or statistics'].sum() for i in lab ]\nbiu_dis_lengs=[mulcA[i][mulcA.Q5=='A business discipline (accounting, economics, finance, etc.)'].sum() for i in lab ]\nphy_ast_lengs=[mulcA[i][mulcA.Q5=='Physics or astronomy'].sum() for i in lab ]\ninf_tec_lengs=[mulcA[i][mulcA.Q5=='Information technology, networking, or system administration'].sum() for i in lab ]\nmed_sci_lengs=[mulcA[i][mulcA.Q5=='Medical or life sciences (biology, chemistry, medicine, etc.)'].sum() for i in lab ]\nsoc_sci_lengs=[mulcA[i][mulcA.Q5=='Social sciences (anthropology, psychology, sociology, etc.)'].sum() for i in lab ]\n\nfig, axes = plt.subplots(4, 2,  sharey=True,figsize=(15,20))\naxes[0, 0].barh(lab,com_sci_lengs,color='c')\naxes[0, 0].set_title('Comp. Science')\naxes[0, 1].barh(lab,eng_nco_lengs,color='r')\naxes[0, 1].set_title('Engeneering')\naxes[1, 0].barh(lab,mat_sta_lengs,color='k')\naxes[1, 0].set_title('Mathematics')\naxes[1, 1].barh(lab,inf_tec_lengs)\naxes[1, 1].set_title('Inf. Technology')\naxes[2, 0].barh(lab,biu_dis_lengs,color = 'tomato')\naxes[2, 0].set_title('Business')\naxes[2, 1].barh(lab,phy_ast_lengs,color='b')\naxes[2, 1].set_title('Physics')\naxes[3, 0].barh(lab,med_sci_lengs,color='y')\naxes[3, 0].set_title('Medical')\naxes[3, 1].barh(lab,soc_sci_lengs,color='g')\naxes[3, 1].set_title('Soc. Science')","d4fa01fe":"fem_oc = mulcA.Q5[mulcA.Q1 == \"Female\"]\nmal_oc = mulcA.Q5[mulcA.Q1 == \"Male\"]\ndf_gen = pd.DataFrame([fem_oc.value_counts(normalize=True),mal_oc.value_counts(normalize=True)],index=['Female','Male']).T\naxes = df_gen.plot.barh(rot=0, subplots=True,figsize=(15,15))    ","b7d90a6b":"En Kaggle predominan la comunidad que se dedica a la Ciencia computacional con un 40%, seguido por la comunidad en ingenier\u00eda con un poco mas de 16%, pero sorprende ver ocupaciones que normalmente se pensar\u00eda que no utilizan estas herramientas como ciencias sociales, Humanidades o Artes est\u00e1n presentes.  Poco a poco la programaci\u00f3n va entrando en cada \u00e1rea de conocimiento.\n\nUna de las cosas interesante es ver que tan bien le va a la comunidad Kaggle econ\u00f3micamente hablando.","4fad1a9e":"**La edad de los profecionistas en Kaggle.**","0049fc2b":"\nLos datos obtenidos del promedio de cuanto gana cada ocupaci\u00f3n de la comunidad kaggle:\n\n**Ganancias por ocupaciones.**\n*   Arts $83,050.\n\n*  Humanities $73,047 .\n\n*  Social Sciences $ 63,000.\n\n* Physics $61,000.\n\n* Economics $58,000.\n\n* Medics $56,000.\n \n* Env. Siences $54,000. \n\n* Mathematics $53,000.\n\n* Engieneering $50,000.\n\n* Com. Science $40,000.\n\n* Inf. Technology $37,000.\n","0a06d096":"Se puede ver  que la Ciencia computacional va ganando popularidad en los mas j\u00f3venes mientras en los mas viejos la popularidad fueron las \u00e1reas de matem\u00e1ticas e ingenier\u00eda.","5d8b4713":"**Top 3 de paises con un mayor n\u00famero de personas en Ciencia computacional.**\n\n* India.\n* USA.\n* China.\n\n**Top 3 de paises con un mayor n\u00famero de personas en Ingenier\u00eda.**\n\n* India.\n* USA.\n* China.\n\n**Top 3 de paises con un mayor n\u00famero de personas en Matematicas.**\n\n* USA.\n* India.\n* France.\n\n**Top 3 de paises con un mayor n\u00famero de personas en Tecnolog\u00edas de la informaci\u00f3n.**\n\n* India.\n* USA.\n* China.\n\n**Top 3 de paises con un mayor n\u00famero de personas en Econom\u00eda.**\n\n* USA.\n* India.\n* Germany.\n\n**Top 3 de paises con un mayor n\u00famero de personas en F\u00edsica.**\n\n* USA.\n* Great B.\n* Germany.\n\n**Top 3 de paises con un mayor n\u00famero de personas en Medicina.**\n\n* USA.\n* India.\n* China.\n\n**Top 3 de paises con un mayor n\u00famero de personas en Ciencias Sociales.**\n\n* USA.\n* Canada.\n* Germany.","71a61cfb":"La tecnolog\u00eda en el mundo avanza a pasos gigantescos, por esto mismo es ahora indispensable saber programar sin importar, g\u00e9nero, \u00e1rea de conocimiento o edades. La programaci\u00f3n puede ayudar a cualquiera a facilitar su vida, ya sea en trabajo como en casa. En este an\u00e1lisis se buscar\u00e1n las correlaciones que existan entre las diferentes ocupaciones de la cominudad de Kaggle y los lenguajes de programaci\u00f3n que la comunidad ocupa en estos d\u00edas.","2e952244":"Se puede notar que en la comunidad Kaggle en ambos g\u00e9neros predomina la especializaci\u00f3n en Ciencia computacional,  los hombres tienen una mayor tendencia a estudiar en un \u00e1rea de Ingenier\u00eda y las mujeres una mayor en matem\u00e1ticas. Las mujeres prefieren las ciencias sociales y los hombres la f\u00edsica.","0e2ad03b":"Primero vamos a ver cuales son las ocupaciones top de la comunidad Kaggle,  se aplica un filtro para eliminar a los que respondieron la encuesta r\u00e1pidamente, ya que puede que los datos no sean verdaderos.","dbff79b1":"**Ganancias por ocupaciones.**","90371fef":"**Los lenguajes de programaci\u00f3n utilizados por cada \u00e1rea de conocimiento.**","d17a8205":"La comunidad kaggle tiene en mayor\u00eda personas que reciben menos de $50,000.  Uno de los puntos interesantes es ver cual \u00e1rea de conocimiento es la que tiene una mayor remuneraci\u00f3n dentro de la comunidad Kaggle. Para esto se remplazan los valores de compensaci\u00f3n econ\u00f3mica por unos num\u00e9ricos y as\u00ed poder hacer un promedio de cada una de las ocupaciones de la comunidad.","c3d764fe":"La aceptaci\u00f3n de Python en Kaggle es impresionante, para cada una de las \u00e1reas de conocimiento de la comunidad de Kaggle, python es el m\u00e1s utilizado.\nEn la ingenier\u00eda, en la computaci\u00f3n cient\u00edfica y en la tecnolog\u00eda de la informaci\u00f3n se ocupa SQL en segundo lugar mientras en las ciencias sociales , medicina y matem\u00e1ticas se ocupa R. Desde la salida de Python llego a acaparar el mercado, gracias a su versatilidad y se nota en las encuestas.","72a0fce5":"La comunidad de Kaggle ama Python.\n\n**Top 5 de lenguajes de programaci\u00f3n usados por los usuarios de Kaggle:**\n\n* Python.\n* SQL.\n* R.\n* C\/C++.\n* Java.\n"}}