{"cell_type":{"21af0ed8":"code","1b7540c5":"code","0b372e55":"code","fa7ccb67":"code","504de219":"code","46609d40":"code","94fb6814":"code","da5e64ae":"code","b8146e08":"code","04e5249d":"code","6551640c":"code","2d3417f1":"code","0ef07050":"code","d72b7a6e":"markdown","9566e88b":"markdown"},"source":{"21af0ed8":"import numpy as np\nimport pandas as pd\n\ndf = pd.read_csv(\"..\/input\/houseprediction\/Xdata.csv\")\ndf.head()","1b7540c5":"def preprocessing(df, columns_to_remove = ['price','date','street','city','statezip','country', 'id']):\n    \n    # functions\n    def take_columns(df, columns_to_remove):\n        df = df.drop(columns=columns_to_remove)\n        return df\n    \n    # Function calls\n    df = take_columns(df, columns_to_remove)\n    return df\n\ndef rmse(predictions, targets):\n    return np.sqrt(((predictions - targets) ** 2).mean())\n    \n\n","0b372e55":"x = preprocessing(df)\ny = df['price']","fa7ccb67":"x.head()","504de219":"y.head()","46609d40":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test =  train_test_split(x, y, test_size= 0.3)","94fb6814":"print(f\"x_train : {len(x_train)}\")\nprint(f\"y_train : {len(y_train)}\")\nprint(f\"y_test : {len(y_test)}\")\nprint(f\"x_test : {len(x_test)}\")","da5e64ae":"from sklearn.linear_model import LinearRegression\nlinear_regressor = LinearRegression()\n\nmodel = linear_regressor.fit(x_train, y_train)\n\nloss,predictions  = [], []\nfor i in range(len(x_test)):\n    prediction = model.predict(np.expand_dims(x_test.iloc[i].values, axis = 0))\n    predictions.append(prediction[0])\n    loss.append(abs(prediction[0] - y_test.iloc[i]))\n    \n    \nrmse(predictions, y_test)","b8146e08":"import pandas as pd\ndf = pd.read_csv(\"..\/input\/houseprediction\/test_data.csv\")\ndf","04e5249d":"x = preprocessing(df, columns_to_remove = ['date','street','city','statezip','country'])","6551640c":"loss,predictions, id_  = [], [],[]\nfor i in range(len(x)):\n    id_.append(int(x.iloc[i].values[-1])) \n    x_features = x.iloc[i].values[:-1]\n    \n    prediction = model.predict(np.expand_dims(x_features, axis = 0))\n    predictions.append(prediction[0])\n    ","2d3417f1":"submission = pd.DataFrame({\"Predicted\":predictions, \"id\": id_})\nsubmission","0ef07050":"submission.to_csv(\"submission\", index=False)","d72b7a6e":"#  Submission","9566e88b":"# All Functions Are Implemented here"}}