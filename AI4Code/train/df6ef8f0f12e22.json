{"cell_type":{"b60f9503":"code","6a41155f":"code","e1d76dc7":"code","6a3fcb9f":"code","5f25b985":"code","d0f9293e":"code","683e0cf9":"code","c7e584ac":"code","5e823665":"markdown","bf965b17":"markdown","64c8a27d":"markdown","5fe81fb9":"markdown","e88eef60":"markdown","c155f719":"markdown","24b977af":"markdown"},"source":{"b60f9503":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D,Dense,MaxPool2D,Flatten,Dropout\nfrom keras.preprocessing.image import ImageDataGenerator,img_to_array,load_img","6a41155f":"train_datagen = ImageDataGenerator(rescale=1\/255)\ntest_datagen = ImageDataGenerator(rescale=1\/255)\ntrain_path = '..\/input\/cat-and-dogs\/dataset\/training_set'\ntrain_set = train_datagen.flow_from_directory(directory=train_path,target_size=(128,128),batch_size=32,color_mode=\"rgb\",class_mode = 'binary')\ntest_path = '..\/input\/cat-and-dogs\/dataset\/test_set'\ntest_set = train_datagen.flow_from_directory(directory=train_path,target_size=(128,128),batch_size=30,color_mode=\"rgb\",class_mode = 'binary')","e1d76dc7":"img=load_img(train_path + \"\/cats\/cat.10.jpg\")\nplt.imshow(img)\nplt.axis(\"off\")\nplt.title(\"Sample Cat Image\")\nplt.show()\n\nplt.figure()\n\nimg=load_img(train_path + \"\/dogs\/dog.100.jpg\")\nplt.imshow(img)\nplt.axis(\"off\")\nplt.title(\"Sample Dog Image\")\nplt.show()","6a3fcb9f":"model = Sequential()\nmodel.add(Conv2D(filters = 64, kernel_size = (5,5), activation = \"relu\", input_shape = (128,128,3)))\nmodel.add(MaxPool2D(pool_size = (2,2)))\nmodel.add(Conv2D(filters = 32, kernel_size = (5,5), activation = \"relu\"))\nmodel.add(MaxPool2D(pool_size = (2,2)))\nmodel.add(Dropout(0.25))\nmodel.add(Conv2D(filters = 16, kernel_size = (5,5), activation = \"relu\"))\nmodel.add(MaxPool2D(pool_size = (2,2)))\nmodel.add(Dropout(0.25))\nmodel.add(Flatten())\nmodel.add(Dense(units = 256, activation = \"relu\"))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(units = 1, activation = \"sigmoid\"))","5f25b985":"model.compile(optimizer='rmsprop',loss='binary_crossentropy',metrics=['accuracy'])","d0f9293e":"model.summary()","683e0cf9":"hist = model.fit(train_set, validation_data = test_set, epochs = 20)","c7e584ac":"plt.figure(figsize=(6,6))\nplt.style.use(\"ggplot\")\nplt.plot(hist.history['loss'], color='b', label=\"Training loss\")\nplt.plot(hist.history['val_loss'], color='r', label=\"Validation loss\")\nplt.legend()\nplt.show()\n\nplt.figure()\n\nplt.figure(figsize=(6,6))\nplt.style.use(\"ggplot\")\nplt.plot(hist.history['accuracy'], color='b', label=\"Training accuracy\")\nplt.plot(hist.history['val_accuracy'], color='r',label=\"Validation accuracy\")\nplt.legend(loc = \"lower right\")\nplt.show()","5e823665":"### Defining the Compiler","bf965b17":"### Visualizing","64c8a27d":"## Fitting the Model","5fe81fb9":"## Evaluate the Model","e88eef60":" ### Loading Data","c155f719":"## Import Libraries","24b977af":"## Convolutional Neural Network"}}