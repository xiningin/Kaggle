{"cell_type":{"cb3ac875":"code","c21a70a5":"code","5cea4026":"code","3b4722b9":"code","6c1b0a1a":"code","3095ef6e":"code","7661fda0":"code","b2c208b3":"code","fd028847":"code","a681c0aa":"code","4f44856c":"code","9a5032f6":"code","172238f4":"code","bbb7118b":"code","6a19de1f":"code","7fca6e5e":"code","1a8a3b2e":"code","9a575409":"code","27e84a4f":"code","5d84c6c9":"code","af499a79":"code","7ac79b7c":"code","541d9c6e":"code","2b76571e":"code","487cff68":"code","1d0d3e78":"code","0c2ae106":"code","9023cbd8":"code","5c5e96cd":"code","479ead41":"code","576b486f":"code","d4555022":"code","601684ca":"code","626d640c":"code","d3c87463":"code","234ed6c3":"code","f185ff9a":"code","24886765":"code","358bdf82":"code","e0d084dd":"code","535d17d4":"markdown","44df0cee":"markdown","8d5a57d8":"markdown","23d8ebd8":"markdown","2fb273bd":"markdown","add871b4":"markdown","42197cc2":"markdown","dbf59e0b":"markdown","45bfb740":"markdown","b35f0bbd":"markdown","78afddb0":"markdown","0bf5e907":"markdown","613c90fa":"markdown","53ee94c6":"markdown","f2637bed":"markdown","4350f70c":"markdown","c128cc84":"markdown","1a060d14":"markdown","3c0d4731":"markdown","52270281":"markdown","db281d0f":"markdown","d1aa30c5":"markdown","f912ba41":"markdown","df83f8e1":"markdown","9249922e":"markdown","8510a303":"markdown"},"source":{"cb3ac875":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n","c21a70a5":"data=pd.read_csv(\"..\/input\/heart-disease-uci\/heart.csv\")","5cea4026":"data.info()","3b4722b9":"data[\"age\"].unique()","6c1b0a1a":"data.head()","3095ef6e":"age_list=list(data[\"age\"].unique())\ntrestbps_of_category=[]\nfor i in age_list:\n    x=data[data[\"age\"]==i]\n    trestbps_value=sum(x.trestbps)\/len(x)\n    trestbps_of_category.append(trestbps_value)\ndatum=pd.DataFrame({\"age_list\":age_list,\"trestbps_of_category\":trestbps_of_category})\nnew_index=(datum[\"trestbps_of_category\"].sort_values(ascending=False)).index.values\nsorted_data=datum.reindex(new_index)\n    \n\nplt.figure(figsize=(10,10))\nsns.barplot(x=sorted_data['age_list'], y=sorted_data['trestbps_of_category'])\nplt.xticks(rotation= 45)\nplt.xlabel('Age')\nplt.ylabel('Trestbps')\nplt.title('Age-Trestbps Bar Plot-1')\nplt.show()\n    ","7661fda0":"sorted_chol_data=data.chol.sort_values()\nx,y=list(data.age),list(sorted_chol_data)\n\nplt.figure(figsize=(10,10))\nax=sns.barplot(x=x,y=y,palette= sns.cubehelix_palette(len(data.age.unique())))\nplt.xlabel(\"Age\")\nplt.ylabel(\"chol\")\nplt.title(\"Age-chol Bar Plot\")\nplt.show()","b2c208b3":"data.head()","fd028847":"age_list=list(data[\"age\"].unique())\ntrestbps= []\nthalach= []\nchol= []\nfor i in age_list:\n    y=data[data[\"age\"]==i]\n    trestbps.append(sum(y.trestbps)\/len(y))\n    thalach.append(sum(y.thalach)\/len(y))\n    chol.append(sum(y.chol)\/len(y))\nf,ax=plt.subplots(figsize=(12,12))\nsns.barplot(x=age_list,y=trestbps,color='black',alpha = 0.9,label='trestbps' )\nsns.barplot(x=age_list,y=thalach,color='blue',alpha = 0.4,label='thalach')\nsns.barplot(x=age_list,y=chol,color='cyan',alpha = 0.29,label='chol')\n \nax.legend(loc='lower right',frameon = True)    \nax.set(xlabel='Trestpbs-Thalach-Chol', ylabel='Age',title = \" Trestpbs-Thalach-Chol--Age Horizontal Bar Plot\")","a681c0aa":"data.head()","4f44856c":"sorted_data","9a5032f6":"sorted_data['trestbps_of_category'] = sorted_data['trestbps_of_category']\/max( sorted_data['trestbps_of_category'])\n# we are using like that beacuse \u0131f we rate the numbers we will see numbers easily .\n\nsorted_data.sort_values('trestbps_of_category',inplace=True)\n \n\n\nf,ax1 = plt.subplots(figsize =(10,10))\nsns.pointplot(x='age_list',y='trestbps_of_category',data=sorted_data,color='lime',alpha=0.8) \n \nplt.xlabel('age',fontsize = 15,color='blue')\nplt.ylabel('trestbps',fontsize = 15,color='blue')\nplt.title('trestbps-age ',fontsize = 20,color='blue')\nplt.grid()","172238f4":"g = sns.jointplot(sorted_data.age_list, sorted_data.trestbps_of_category, kind=\"kde\", size=7)\nplt.savefig('graph.png')\nplt.show()","bbb7118b":"g = sns.jointplot(\"age_list\", \"trestbps_of_category\", data=sorted_data,size=5, ratio=3, color=\"r\")","6a19de1f":"#for this chart I will use another dataset.\nmall_customers_data=pd.read_csv(\"..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\")","7fca6e5e":"mall_customers_data.info()","1a8a3b2e":"mall_customers_data.head()","9a575409":"mall_customers_data.Age.dropna(inplace = True)\nlabels = mall_customers_data.Age.value_counts().index\ncolors = ['grey','blue','red','yellow','green','brown']\nexplode=np.zeros((len(mall_customers_data.Age.value_counts()),), dtype=np.int) \n \n \nsizes = mall_customers_data.Age.value_counts().values\n\n#visulazation\n\nplt.figure(figsize = (12,12))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Killed People According to Races',color = 'blue',fontsize = 15)","27e84a4f":"mall_customers_data.head()","5d84c6c9":"sns.lmplot(x=\"CustomerID\", y=\"Annual Income (k$)\", data=mall_customers_data)\nplt.show()","af499a79":"sns.kdeplot(mall_customers_data.Age, mall_customers_data[\"Spending Score (1-100)\"], shade=True, cut=3)\nplt.show()\n#As we know,This plot type is working like joint plot.\n#With shade=True we are adding coloring on this plot.","7ac79b7c":"mall_customers_data.head()","541d9c6e":"pal = sns.cubehelix_palette(5, rot=-.4, dark=.5)\nsns.violinplot(data=mall_customers_data[\"Age\"], palette=pal, inner=\"quartile\",orient=\"h\")\n#orient=\"h\" is horizontal ,orient=\"v\" is vertival.Try and see the difference.\n#palette is for color selection.\n# inner can be \"stick\",\"quartile\",\"box\",\"point\".\u0130f you try you can see what are they doing.\nplt.show()","2b76571e":"f,ax = plt.subplots(figsize=(12, 12))\nsns.heatmap(mall_customers_data.corr(), annot=True, linewidths=1,linecolor=\"Black\", fmt= '.5f',ax=ax)\nplt.show()","487cff68":"data.head()","1d0d3e78":" data.sex.unique()","0c2ae106":"sns.boxplot(x=\"sex\", y=\"age\", hue=\"sex\", data=data, palette=\"PRGn\")\nplt.show()\n\n","9023cbd8":"sns.swarmplot(x=\"fbs\", y=\"age\",hue=\"fbs\", data=data)\nplt.show()","5c5e96cd":"sns.pairplot(mall_customers_data)\nplt.show()","479ead41":" \nsns.countplot(data.sex )\n \nplt.title(\"Sex Counts\",color = 'blue',fontsize=15)","576b486f":" \nsns.countplot(mall_customers_data[\"Age\"])\n \nplt.title(\"Customers Ages\",color = 'blue',fontsize=15)","d4555022":"data.age.value_counts()","601684ca":"data.head()","626d640c":"trestbps130 =['trestbps130' if i >= 130 else 'below130' for i in data.trestbps]\ndf = pd.DataFrame({'trestbps':trestbps130})\nsns.countplot(x=df.trestbps)\nplt.ylabel('trestbps')\nplt.title('trestbps of  people',color = 'blue',fontsize=15)","d3c87463":"mall_customers_data.head()","234ed6c3":"sns.countplot(data=mall_customers_data, x='Gender')\nplt.title('Gender Counts',color = 'green',fontsize=20)","f185ff9a":"fbs = data.fbs.value_counts()\n\nplt.figure(figsize=(10,10))\nsns.barplot(x=fbs[ :5].index,y=fbs[ :5].values)\nplt.xticks(rotation=45)\nplt.title('Fbs',color = 'black',fontsize=15)","24886765":"data.head()","358bdf82":"data.thalach[:4]","e0d084dd":"sns.countplot(data.thalach[:22])\nplt.xlabel('Thalach')\nplt.title('Thalach numbers',color = 'blue', fontsize = 15)","535d17d4":" ## Violin Plot","44df0cee":"Thank you for your attention.If there any question about this kernel or plots you can ask about.","8d5a57d8":"**Joint Plot**","23d8ebd8":"**Pie Chart**","2fb273bd":"Another joint plot example.","add871b4":"## Box Plot","42197cc2":"**Lm Plot **","dbf59e0b":"## Kde Plot","45bfb740":"We are using these plots for know relationship between datas.\nFor examle, let's take bottom example.We have sorted age list and sorted trestbps datas.With joint plot we will see correlation between datas.If the color density is high, there is so much correlation.","b35f0bbd":" ** Different Bar Plot**","78afddb0":"Basically this plot used for linear regression.","0bf5e907":"**Point Plot**","613c90fa":"Actually I am aware it is little silly but I did this plot for showing different things(pandas functions) and propertys. ","53ee94c6":"**First of all,We are reading our csv. ** ","f2637bed":"**Our data info.**","4350f70c":"**  We will make plot for category-reviews numbers.**","c128cc84":"You see the datas(Annual Income (k$) for every CustomerID.This line is making these ===> Looking datas and draws the line where their average is.","1a060d14":"## Count Plot","3c0d4731":"## Swarm Plot","52270281":"## Pair Plot","db281d0f":"**Different bar plot.**\n\n\n\nWe are using seaborn dictionary.","d1aa30c5":"With this Box Plot , we  can see  where is our datas average .","f912ba41":"There are different useges of Count Plot.I will give examples in here.Generally,We are counting what we want.For example,First example.We are counting Custemers Sexs and  there diffent examples and usages like that.","df83f8e1":"With point plot,I did it for age\/chol-trestbps relationship.","9249922e":"## Heatmap ","8510a303":"## Box Plot"}}