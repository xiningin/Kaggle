{"cell_type":{"42ae2c3f":"code","7635e676":"code","c6eda23b":"code","f4e9d1d4":"code","29108754":"code","714becb3":"code","6e077ed0":"code","8fcf25d4":"code","3acc9a41":"code","07288b19":"code","64d7e3f0":"code","af379648":"code","5e1aebae":"code","24e44f98":"code","d0c18010":"code","6b6fd110":"code","4e762cbc":"code","c9e39b18":"code","157dca2c":"markdown","b712b260":"markdown","ebeb4115":"markdown","c980bce5":"markdown","2f20e2e0":"markdown","03907139":"markdown","5cfa344b":"markdown","37ab0017":"markdown","b9d57069":"markdown"},"source":{"42ae2c3f":"import numpy as np \nimport pandas as pd\nimport matplotlib\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline \nfrom wordcloud import WordCloud, STOPWORDS\nfrom nltk.sentiment import SentimentIntensityAnalyzer\nfrom textblob import TextBlob\nimport warnings\nwarnings.simplefilter(\"ignore\")","7635e676":"data_df = pd.read_csv(\"\/kaggle\/input\/tokyo-olympics-2020-tweets\/tokyo_2020_tweets.csv\")","c6eda23b":"data_df.head()","f4e9d1d4":"data_df.info()","29108754":"def missing_data(data):\n    total = data.isnull().sum()\n    percent = (data.isnull().sum()\/data.isnull().count()*100)\n    tt = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n    types = []\n    for col in data.columns:\n        dtype = str(data[col].dtype)\n        types.append(dtype)\n    tt['Types'] = types\n    return(np.transpose(tt))","714becb3":"missing_data(data_df)","6e077ed0":"def show_wordcloud(data, title=\"\"):\n    text = \" \".join(t for t in data.dropna())\n    stopwords = set(STOPWORDS)\n    stopwords.update([\"t\", \"co\", \"https\", \"amp\", \"U\", \"Olympics\" \"Tokyo2020\", \"TokyoOlympics\", \"Olympic\", \"Olympics Tokyo2020\", \"Tokyo2020 Olympics\"])\n    wordcloud = WordCloud(stopwords=stopwords, scale=4, max_font_size=50, max_words=500,background_color=\"black\").generate(text)\n    fig = plt.figure(1, figsize=(16,16))\n    plt.axis('off')\n    fig.suptitle(title, fontsize=20)\n    fig.subplots_adjust(top=2.3)\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.show()","8fcf25d4":"show_wordcloud(data_df['text'], title = 'Prevalent words in text')","3acc9a41":"# borrowed from https:\/\/www.kaggle.com\/pashupatigupta\/sentiments-transformer-vader-embedding-bert\nsia = SentimentIntensityAnalyzer()\ndef find_sentiment(post):\n    if sia.polarity_scores(post)[\"compound\"] > 0:\n        return \"Positive\"\n    elif sia.polarity_scores(post)[\"compound\"] < 0:\n        return \"Negative\"\n    else:\n        return \"Neutral\"       ","07288b19":"def plot_sentiment(df, feature, title):\n    counts = df[feature].value_counts()\n    percent = counts\/sum(counts)\n\n    fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12, 5))\n\n    counts.plot(kind='bar', ax=ax1, color='green')\n    percent.plot(kind='bar', ax=ax2, color='blue')\n    ax1.set_ylabel(f'Counts : {title} sentiments', size=12)\n    ax2.set_ylabel(f'Percentage : {title} sentiments', size=12)\n    plt.suptitle(f\"Sentiment analysis: {title}\")\n    plt.tight_layout()\n    plt.show()","64d7e3f0":"data_df['text_sentiment'] = data_df['text'].apply(lambda x: find_sentiment(x))\nplot_sentiment(data_df, 'text_sentiment', 'Text')","af379648":"show_wordcloud(data_df.loc[data_df['text_sentiment']=='Positive', 'text'], title = 'Prevalent words in texts (Positive sentiment)')","5e1aebae":"show_wordcloud(data_df.loc[data_df['text_sentiment']=='Negative', 'text'], title = 'Prevalent words in texts (Negative sentiment)')","24e44f98":"show_wordcloud(data_df.loc[data_df['text_sentiment']=='Neutral', 'text'], title = 'Prevalent words in texts (Neutral sentiment)')","d0c18010":"def find_sentiment_polarity_textblob(post):\n    blob = TextBlob(post)\n    polarity = 0\n    for sentence in blob.sentences:\n        polarity += sentence.sentiment.polarity\n    return polarity\n\ndef find_sentiment_subjectivity_textblob(post):\n    blob = TextBlob(post)\n    subjectivity = 0\n    for sentence in blob.sentences:\n        subjectivity += sentence.sentiment.subjectivity\n    return subjectivity","6b6fd110":"data_df['text_sentiment_polarity'] = data_df['text'].apply(lambda x: find_sentiment_polarity_textblob(x))\ndata_df['text_sentiment_subjectivity'] = data_df['text'].apply(lambda x: find_sentiment_subjectivity_textblob(x))","4e762cbc":"def plot_sentiment_textblob(df, feature, title):\n    polarity = df[feature+'_sentiment_polarity']\n    subjectivity = df[feature+'_sentiment_subjectivity']\n\n    fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12, 5))\n\n    polarity.plot(kind='kde', ax=ax1, color='magenta')\n    subjectivity.plot(kind='kde', ax=ax2, color='green')\n    ax1.set_ylabel(f'Sentiment polarity : {title}', size=12)\n    ax2.set_ylabel(f'Sentiment subjectivity: {title}', size=12)\n    plt.suptitle(f\"Sentiment analysis (polarity & subjectivity): {title}\")\n    plt.tight_layout()\n    plt.show()","c9e39b18":"plot_sentiment_textblob(data_df, \"text\", 'Text')","157dca2c":"# Data visualization\n\n\nWe will use wordclouds to identify the most frequent words in the titles and body of the posts.\n\nWe will remove frequent used words, like \"vaccine\", \"vaccination\", some bad words as well as \"Comment\" which is a keyword we used for the title of comments (vs. messages, that have also a title)","b712b260":"## With TextBlob","ebeb4115":"We also look to things like data quality, for example missing data.","c980bce5":"# Analysis preparation\n\nWe initialize the packages that we will use in the analysis.","2f20e2e0":"# Sentiment analysis\n\n## With nltk SentimentIntensityAnalyzer","03907139":"Body of posts is missing in approximatively half of the data.","5cfa344b":"# Introduction\n\n\n\nWe capture here tweets about Tokyo Olympics 2020, identified with #Tokyo2020.\n\nDataset is updated daily but this is a very dynamic dataset, so sometimes multiple daily updates might be seen.\n\n","37ab0017":"## Title","b9d57069":"We read and glimpse the data."}}