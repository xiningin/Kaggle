{"cell_type":{"c2276e2b":"code","c09cfa32":"code","c85302e4":"code","b8b3394a":"code","f0ea9a53":"code","4490252b":"code","9f8e6286":"code","cb0f55d2":"code","ea39525c":"code","1915452f":"code","2a7ab52b":"code","549a5d60":"code","9d2f4b78":"code","1d62d1c2":"code","d63758b9":"code","90e5c634":"code","b93b9b26":"code","bb343c3c":"code","4163b70d":"code","39c79343":"code","5a891791":"code","192bf1bf":"code","5ac5dda2":"code","32bf97ef":"code","a650096b":"code","fd16fec9":"markdown","1198650c":"markdown","7d058760":"markdown","33eb4723":"markdown","e09feb59":"markdown","99457bbd":"markdown","f6e86a58":"markdown"},"source":{"c2276e2b":"from collections import Counter\nimport csv\nimport gc\nimport json\nimport os\n\nimport matplotlib.pyplot as plt\nimport networkx as nx\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom tqdm import tqdm","c09cfa32":"MIN_STATEMENTS = 5","c85302e4":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b8b3394a":"file_path = \"\/kaggle\/input\/kensho-derived-wikimedia-data\/property.csv\"\np_df = pd.read_csv(file_path)\np_df","f0ea9a53":"file_path = \"\/kaggle\/input\/kensho-derived-wikimedia-data\/statements.csv\"\nqpq_df = pd.read_csv(file_path, dtype=np.int)\nqpq_df","4490252b":"qpq_source_counts = qpq_df.groupby('source_item_id').size().sort_values(ascending=False)\nqpq_source_counts","9f8e6286":"qpq_source_counts.plot.hist(bins=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5], log=False, ylim=(1e1, 1.75e7))","cb0f55d2":"qpq_source_counts[qpq_source_counts >= MIN_STATEMENTS]","ea39525c":"keep_source_item_ids = set(qpq_source_counts[qpq_source_counts >= MIN_STATEMENTS].index)","1915452f":"qpq_df = qpq_df[qpq_df['source_item_id'].isin(keep_source_item_ids)]","2a7ab52b":"qpq_df['source_item_id'].nunique()","549a5d60":"p279g = nx.DiGraph()\np279g.add_edges_from(qpq_df[qpq_df['edge_property_id']==279][['source_item_id', 'target_item_id']].values)","9d2f4b78":"root_qids = {\n    'per': 5,        # https:\/\/www.wikidata.org\/wiki\/Q5  human\n    'loc': 2221906,  # https:\/\/www.wikidata.org\/wiki\/Q2221906  geographic location\n    'org': 43229,    # https:\/\/www.wikidata.org\/wiki\/Q43229  organization\n    'state': 7275,   # https:\/\/www.wikidata.org\/wiki\/Q7275  state\n}","1d62d1c2":"subclass_qids = {\n    lbl: set(nx.ancestors(p279g, qid)).union(set([qid]))\n    for lbl, qid in root_qids.items()\n}","d63758b9":"df = pd.DataFrame(index=keep_source_item_ids)\ndf.index.name = 'qid'","90e5c634":"qpq_signature_dfs = {}\nmask1 = qpq_df['edge_property_id']==31\nfor lbl, qid in root_qids.items():\n    mask2 = qpq_df['target_item_id'].isin(subclass_qids[lbl])\n    qpq_signature_dfs[lbl] = qpq_df[mask1 & mask2][['source_item_id', 'target_item_id']]\n    \n    qpq_signature_dfs[lbl].set_index('source_item_id', drop=True, inplace=True)\n    qpq_signature_dfs[lbl].index.name = 'qid'\n    \n    # de-duplicate index \n    qpq_signature_dfs[lbl] = qpq_signature_dfs[lbl][~qpq_signature_dfs[lbl].index.duplicated()]\n    \n    # add to dataframe\n    df[lbl] = qpq_signature_dfs[lbl]['target_item_id']","b93b9b26":"df = df.fillna(0).astype(np.int)\ndf","bb343c3c":"mask1 = df['org'] > 0\nmask2 = df['state'] > 0\ndf[mask1 & mask2]","4163b70d":"mask1 = df['org'] > 0\nmask2 = df['state'] > 0\ndf[mask2]","39c79343":"def get_most_common_edges(ner_type, qpq_df, p_df):\n    ner_qids = df[df[ner_type]>0].index\n    common_edges = (\n        qpq_df[qpq_df['source_item_id'].isin(ner_qids)].\n        groupby('edge_property_id').\n        size().\n        sort_values(ascending=False).\n        to_frame().\n        rename(columns={0: 'count'})\n    )\n    return pd.merge(\n        p_df, \n        common_edges, \n        left_on='property_id', \n        right_index=True).sort_values('count', ascending=False)","5a891791":"ner_common_edges = {}\nfor ner_type in root_qids.keys():\n    print(ner_type)\n    ner_common_edges[ner_type] = get_most_common_edges(ner_type, qpq_df, p_df)","192bf1bf":"ner_common_edges['per'].head(50)","5ac5dda2":"ner_common_edges['loc'].head(50)","32bf97ef":"ner_common_edges['org'].head(50)","a650096b":"ner_common_edges['state'].head(50)","fd16fec9":"# Most Common Edges for each Class","1198650c":"# Subclass Graphs","7d058760":"# Statements","33eb4723":"# Properties","e09feb59":"# Filter out items with few statements\nCount how many statements we have about each item.","99457bbd":"# Kensho Dervied Wikimedia Dataset (KDWD) - Wikidata Small Ontology\n\nLet's try and create a small number of classes for Wikidata items. ","f6e86a58":"# Subclass Signatures"}}