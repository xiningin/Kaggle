{"cell_type":{"1eca350c":"code","bea1da67":"code","97877904":"code","452081bb":"code","ed26fc93":"code","80a7bbde":"code","c1279f4f":"code","57242a53":"code","8033b53b":"code","2731b46c":"code","4ec37f8a":"code","8fcc9b43":"code","bc15b9ff":"code","1c08f99f":"code","d76c0141":"code","1ac4f79b":"code","0df0ba04":"code","3c78faaa":"code","643cfcc2":"code","00ea8832":"code","1b0f0e99":"code","5e452c14":"code","7e039cf4":"code","260f3cc4":"code","657a7eda":"code","88d58c34":"code","5291d493":"code","f569367d":"code","24a7b381":"code","b6e2b3de":"code","f0a05378":"code","65b83587":"code","d11de99f":"code","5a8b5a76":"code","0cef0eff":"code","8c41ee66":"code","67144b8d":"code","a31f95a5":"code","674835cb":"code","86646121":"code","4c2a1ba9":"code","c0e41cf9":"code","74330e1c":"code","c5e9195e":"code","a9f0c69c":"code","2f6c4610":"code","26f940bf":"code","5b72211b":"code","ed481fe2":"code","93dcacf4":"code","f853b487":"code","66bdfbaf":"code","3925bf15":"code","ff782f5b":"code","da3f9bbd":"code","88dabd81":"code","2692c6b4":"code","17cd0f4e":"code","53ab902c":"code","308bad05":"code","6da277b4":"code","1cd106c3":"code","0b2e933a":"code","64cecce3":"code","dac66039":"code","5b24e682":"code","e4e0edae":"code","e5b0ae48":"code","41ce7107":"code","e5bf8e20":"code","ca4022fd":"code","565546b8":"code","6b1b3f12":"code","cea16507":"markdown","2b11bad0":"markdown"},"source":{"1eca350c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bea1da67":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","97877904":"data=pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")","452081bb":"data.isnull().sum()","ed26fc93":"#Correlation between Features\nplt.figure(figsize=(12,10))\nsns.heatmap(data.corr(),annot=True)","80a7bbde":"data.head()","c1279f4f":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"age\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"age\",data=data)","57242a53":"#As you may notice,The people of higher ages are more likely to face Heartfailure Than Young People","8033b53b":"data.groupby(\"anaemia\")[\"DEATH_EVENT\"].describe()","2731b46c":"sns.countplot(x=\"anaemia\",data=data,hue=\"DEATH_EVENT\")","4ec37f8a":"# As you can notice people having anaemia are more vulnerable towards Heart_Faliure","8fcc9b43":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"creatinine_phosphokinase\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"creatinine_phosphokinase\",data=data)","bc15b9ff":"data[\"creatinine_phosphokinase\"]=np.log(data[\"creatinine_phosphokinase\"])","1c08f99f":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"creatinine_phosphokinase\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"creatinine_phosphokinase\",data=data)","d76c0141":"data.head()","1ac4f79b":"data.groupby(\"diabetes\")[\"DEATH_EVENT\"].describe()","0df0ba04":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"ejection_fraction\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"ejection_fraction\",data=data)","3c78faaa":"data[\"ejection_fraction\"].describe()","643cfcc2":"for i in data.loc[data[\"ejection_fraction\"]>60].index:\n    data.iloc[i,4]=60","00ea8832":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"ejection_fraction\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"ejection_fraction\",data=data)","1b0f0e99":"data.head(1)","5e452c14":"data.groupby(\"high_blood_pressure\")[\"DEATH_EVENT\"].describe()","7e039cf4":"# As you can see the people having high blood pressure has high tendency of Heart_Failure","260f3cc4":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"platelets\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"platelets\",data=data)","657a7eda":"data[\"platelets\"].describe()","88d58c34":"263358-2*97804","5291d493":"for i in data.loc[data[\"platelets\"]>458966].index:\n    data.iloc[i,6]=458966","f569367d":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"platelets\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"platelets\",data=data)","24a7b381":"data.head(1)","b6e2b3de":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"serum_creatinine\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"serum_creatinine\",data=data)","f0a05378":"sns.distplot((data[\"serum_creatinine\"]))","65b83587":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"serum_creatinine\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"serum_creatinine\",data=data)","d11de99f":"sns.distplot(data.loc[data[\"DEATH_EVENT\"]==0][\"serum_creatinine\"])","5a8b5a76":"sns.distplot(data.loc[data[\"DEATH_EVENT\"]==1][\"serum_creatinine\"])","0cef0eff":"for i in data.loc[(data[\"DEATH_EVENT\"]==1) & (data[\"serum_creatinine\"]>5.3436)].index:\n     data.iloc[i,7]=5.3436","8c41ee66":"data.loc[data[\"DEATH_EVENT\"]==0][\"serum_creatinine\"].describe()","67144b8d":"for i in data.loc[(data[\"DEATH_EVENT\"]==0) & (data[\"serum_creatinine\"]>2.5)].index:\n     data.iloc[i,7]=2.5","a31f95a5":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"serum_creatinine\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"serum_creatinine\",data=data)","674835cb":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"serum_sodium\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"serum_sodium\",data=data)","86646121":"data.loc[data[\"DEATH_EVENT\"]==1][\"serum_sodium\"].describe()","4c2a1ba9":"for i in data.loc[(data[\"DEATH_EVENT\"]==0) & (data[\"serum_sodium\"]<128)].index:\n     data.iloc[i,8]=128","c0e41cf9":"for i in data.loc[(data[\"DEATH_EVENT\"]==1) & (data[\"serum_sodium\"]<120)].index:\n     data.iloc[i,8]=120","74330e1c":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"serum_sodium\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"serum_sodium\",data=data)","c5e9195e":"data.columns","a9f0c69c":"data.groupby(\"sex\")[\"DEATH_EVENT\"].describe()","2f6c4610":"data.groupby(\"smoking\")[\"DEATH_EVENT\"].describe()","26f940bf":"plt.figure(figsize=(14,6))\nplt.subplot(1,2,1)\nsns.distplot(data[\"time\"])\nplt.subplot(1,2,2)\nsns.boxplot(x=\"DEATH_EVENT\",y=\"time\",data=data)","5b72211b":"from sklearn.model_selection import StratifiedShuffleSplit,GridSearchCV\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score,recall_score,precision_score,roc_auc_score,confusion_matrix,classification_report","ed481fe2":"X=data.iloc[:,:-1]\ny=data.iloc[:,-1]","93dcacf4":"sf=StratifiedShuffleSplit(n_splits=1,test_size=0.33,random_state=100)\nfor i,j in sf.split(X,y):\n    train_X,train_y=X.iloc[i],y.iloc[i]\n    test_X,test_y=X.iloc[j],y.iloc[j]","f853b487":"RandomForestClassifier().get_params().keys()","66bdfbaf":"params={'class_weight':[{0:1,1:2},{0:1,1:1}],\n        'max_depth':[2,4,6],'max_leaf_nodes':[6,8,12,10],'min_samples_leaf':[4,6,8],\n                      'min_samples_split':[6,8,12],'n_estimators':[50,100,150,200]}\ngrid=GridSearchCV(RandomForestClassifier(),cv=10,scoring=\"roc_auc\",verbose=2,n_jobs=-1,param_grid=params)","3925bf15":"grid.fit(train_X,train_y)","ff782f5b":"def check_score(test_y,pred):\n    print(accuracy_score(test_y,pred))\n    print(recall_score(test_y,pred))\n    print(precision_score(test_y,pred))\n    print(roc_auc_score(test_y,pred))\n    print(confusion_matrix(test_y,pred))\n    print(classification_report(test_y,pred))","da3f9bbd":"grid.best_score_","88dabd81":"grid.best_estimator_","2692c6b4":"rf=RandomForestClassifier(class_weight={0: 1, 1: 2}, max_depth=6,\n                       max_leaf_nodes=12, min_samples_leaf=4,\n                       min_samples_split=6, n_estimators=50)","17cd0f4e":"rf.fit(train_X,train_y)","53ab902c":"prediction=rf.predict(test_X)","308bad05":"check_score(test_y,prediction)","6da277b4":"important_features=rf.feature_importances_","1cd106c3":"pd.DataFrame(important_features,index=X.columns).sort_values(0).plot(kind=\"barh\")","0b2e933a":"cols=[\"time\",\"age\",\"serum_creatinine\",\"ejection_fraction\",\"creatinine_phosphokinase\",\"serum_sodium\",\"platelets\"]\nX=X[cols]","64cecce3":"sf=StratifiedShuffleSplit(n_splits=1,test_size=0.33,random_state=100)\nfor i,j in sf.split(X,y):\n    train_X,train_y=X.iloc[i],y.iloc[i]\n    test_X,test_y=X.iloc[j],y.iloc[j]","dac66039":"params={'class_weight':[{0:1,1:2},{0:1,1:1}],\n        'max_depth':[2,4,6],'max_leaf_nodes':[6,8,12,10],'min_samples_leaf':[4,6,8],\n                      'min_samples_split':[6,8,12],'n_estimators':[30,50,100,150,200]}\ngrid=GridSearchCV(RandomForestClassifier(),cv=10,scoring=\"roc_auc\",verbose=2,n_jobs=-1,param_grid=params)","5b24e682":"grid.fit(train_X,train_y)","e4e0edae":"grid.best_estimator_","e5b0ae48":"grid.best_score_","41ce7107":"def check_score(test_y,pred):\n    print(accuracy_score(test_y,pred))\n    print(recall_score(test_y,pred))\n    print(precision_score(test_y,pred))\n    print(roc_auc_score(test_y,pred))\n    print(confusion_matrix(test_y,pred))\n    print(classification_report(test_y,pred))","e5bf8e20":"rf_se=RandomForestClassifier(class_weight={0: 1, 1: 2}, max_depth=4,\n                       max_leaf_nodes=10, min_samples_leaf=6,\n                       min_samples_split=8, n_estimators=200)","ca4022fd":"rf_se.fit(train_X,train_y)","565546b8":"prediction=rf_se.predict(test_X)","6b1b3f12":"check_score(test_y,prediction)","cea16507":"#The is missing from Nan Values","2b11bad0":"# Lets Perform Feature Selection"}}