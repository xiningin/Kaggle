{"cell_type":{"bd2dea22":"code","c990f24f":"code","25e9a841":"code","cb6a74e2":"code","cd7711ac":"code","8563d82c":"code","4c3a13ea":"code","f04e3ee9":"code","8d91d7a9":"code","7151fef7":"code","bfa2041d":"code","ca3d369d":"code","830a1458":"code","9ad3d7d7":"code","aedfa254":"code","bbd6e23e":"code","099296b8":"code","2329c8e9":"code","d69ade0a":"code","3f21c127":"code","9619d821":"code","e490a5a9":"code","9756aad0":"markdown","54c103fa":"markdown","98ddc2b2":"markdown","1b1d2238":"markdown","577dc231":"markdown","173c9675":"markdown","7255e28b":"markdown","657f7b8a":"markdown","c224f7e9":"markdown","94b3b560":"markdown","66d4f472":"markdown","57d67543":"markdown","34241fa8":"markdown","80259d49":"markdown","4e2aa94f":"markdown"},"source":{"bd2dea22":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c990f24f":"import matplotlib\nimport matplotlib.pyplot as plt # for plotting\nimport seaborn as sns # for making plots with seaborn\ncolor = sns.color_palette()\n# import plotly.offline as py\n# py.init_notebook_mode(connected=True)\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.offline as offline\noffline.init_notebook_mode()\nfrom plotly import tools\nimport plotly.tools as tls\nimport squarify\nfrom mpl_toolkits.basemap import Basemap\nfrom numpy import array\nfrom matplotlib import cm\n\nimport warnings\nwarnings.filterwarnings('ignore')","25e9a841":"df1=pd.read_csv('..\/input\/athlete_events.csv')\ndf1.head()","cb6a74e2":"df1.shape","cd7711ac":"print(' Total of',df1['Sport'].nunique(),'unique sports were played. \\n \\n Following is the list:\\n \\n', df1['Sport'].unique())","8563d82c":"from wordcloud import WordCloud, STOPWORDS\nstopwords = set(STOPWORDS)\n\ndef show_wordcloud(data, title = None):\n    wordcloud = WordCloud(\n        background_color='black',\n        stopwords=stopwords,\n        max_words=200,\n        max_font_size=40, \n        scale=3,\n        random_state=1 # chosen at random by flipping a coin; it was heads\n).generate(str(data))\n\n    fig = plt.figure(1, figsize=(15, 15))\n    plt.axis('off')\n    if title: \n        fig.suptitle(title, fontsize=20)\n        fig.subplots_adjust(top=2.3)\n\n    plt.imshow(wordcloud)\n    plt.show()\n\nshow_wordcloud(df1['Sport'])","4c3a13ea":"fig = {\n  \"data\": [\n    {\n      \"values\": df1['Sex'].value_counts(),\n      \"labels\": [\n        \"Male\",\n        \"Female\",\n      ],\n        'marker': {'colors': ['rgb(175, 49, 35)',\n                                  'rgb(177, 180, 34)']},\n      \"name\": \"Sex Ratio of Participants\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .4,\n      \"type\": \"pie\"\n    }],\n     \"layout\": {\n        \"title\":\"Sex Ratio of Participants\"\n     }\n}\niplot(fig, filename='donut')","f04e3ee9":"y0 = df1.ix[df1['Sex']=='M']['Age']\ny1 = df1.ix[df1['Sex']=='F']['Age']\n\ntrace0 = go.Box(\n    y=y0,\n    name=\"Age Distribution for Male\")\ntrace1 = go.Box(\n    y=y1,\n    name=\"Age Distribution for Female\")\ndata = [trace0, trace1]\niplot(data)","8d91d7a9":"df_medals=df1.ix[df1['Medal']=='Gold']\n\ncnt_srs = df_medals['Team'].value_counts().head(20)\n\ntrace = go.Bar(\n    x=cnt_srs.index,\n    y=cnt_srs.values,\n    marker=dict(\n        color=\"blue\",\n        #colorscale = 'Blues',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='Top 20 countries with Maximum Gold Medals'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename=\"medal\")  ","7151fef7":"cnt_srs = df1['Sport'].value_counts()\n\ntrace = go.Bar(\n    x=cnt_srs.index,\n    y=cnt_srs.values,\n    marker=dict(\n        color=cnt_srs.values,\n        colorscale = 'Picnic',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='Most Popular Sport'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename=\"sport\")","bfa2041d":"df_usa=df1.ix[(df1['Team']=='United States')]\ndf_usa_medal=df_usa.ix[df_usa['Medal']=='Gold']\n\nmedal_map = {'Gold':1}\ndf_usa_medal['Medal'] = df_usa_medal['Medal'].map(medal_map)\n\ndf_usa_sport=df_usa_medal.groupby(['Sport'],as_index=False)['Medal'].agg('sum')\n\ndf_usa_sport=df_usa_sport.sort_values(['Medal'],ascending=False)\n\ndf_usa_sport=df_usa_sport.head(10)\n\ncolors = ['#91BBF4', '#91F4F4', '#F79981', '#F7E781', '#C0F781','rgb(32,155,160)', 'rgb(253,93,124)', 'rgb(28,119,139)', 'rgb(182,231,235)', 'rgb(35,154,160)']\n\nn_phase = len(df_usa_sport['Sport'])\nplot_width = 200\n\n# height of a section and difference between sections \nsection_h = 100\nsection_d = 10\n\n# multiplication factor to calculate the width of other sections\nunit_width = plot_width \/ max(df_usa_sport['Medal'])\n\n# width of each funnel section relative to the plot width\nphase_w = [int(value * unit_width) for value in df_usa_sport['Medal']]\n\nheight = section_h * n_phase + section_d * (n_phase - 1)\n\n# list containing all the plot shapes\nshapes = []\n\n# list containing the Y-axis location for each section's name and value text\nlabel_y = []\n\nfor i in range(n_phase):\n        if (i == n_phase-1):\n                points = [phase_w[i] \/ 2, height, phase_w[i] \/ 2, height - section_h]\n        else:\n                points = [phase_w[i] \/ 2, height, phase_w[i+1] \/ 2, height - section_h]\n\n        path = 'M {0} {1} L {2} {3} L -{2} {3} L -{0} {1} Z'.format(*points)\n\n        shape = {\n                'type': 'path',\n                'path': path,\n                'fillcolor': colors[i],\n                'line': {\n                    'width': 1,\n                    'color': colors[i]\n                }\n        }\n        shapes.append(shape)\n        \n        # Y-axis location for this section's details (text)\n        label_y.append(height - (section_h \/ 2))\n\n        height = height - (section_h + section_d)\n        \nlabel_trace = go.Scatter(\n    x=[-200]*n_phase,\n    y=label_y,\n    mode='text',\n    text=df_usa_sport['Sport'],\n    textfont=dict(\n        color='rgb(200,200,200)',\n        size=15\n    )\n)\n \n# For phase values\nvalue_trace = go.Scatter(\n    x=[-350]*n_phase,\n    y=label_y,\n    mode='text',\n    text=df_usa_sport['Medal'],\n    textfont=dict(\n        color='rgb(200,200,200)',\n        size=12\n    )\n)\n\ndata = [label_trace, value_trace]\n \nlayout = go.Layout(\n    title=\"<b>Top 10 Sports in which USA is best<\/b>\",\n    titlefont=dict(\n        size=12,\n        color='rgb(203,203,203)'\n    ),\n    shapes=shapes,\n    height=600,\n    width=800,\n    showlegend=False,\n    paper_bgcolor='rgba(44,58,71,1)',\n    plot_bgcolor='rgba(44,58,71,1)',\n    xaxis=dict(\n        showticklabels=False,\n        zeroline=False,\n    ),\n    yaxis=dict(\n        showticklabels=False,\n        zeroline=False\n    )\n)\n \nfig = go.Figure(data=data, layout=layout)\niplot(fig)","ca3d369d":"df_china=df1.ix[(df1['Team']=='China')]\ndf_china_medal=df_china.ix[df_china['Medal']=='Gold']\n\nmedal_map = {'Gold':1}\ndf_china_medal['Medal'] = df_china_medal['Medal'].map(medal_map)\n\ndf_china_sport=df_china_medal.groupby(['Sport'],as_index=False)['Medal'].agg('sum')\n\ndf_china_sport=df_china_sport.sort_values(['Medal'],ascending=False)\n\ndf_china_sport=df_china_sport.head(10)\n\ntemp_series = df_china_sport['Medal']\nlabels = df_china_sport['Sport']\nsizes = (np.array((temp_series \/ temp_series.sum())*100))\n\ntrace = go.Pie(labels=labels, values=sizes)\nlayout = go.Layout(\n    title='Sports in which China has won maximum Gold Medals',\n    width=900,\n    height=900,\n)\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename=\"china\")","830a1458":"df_medal=df1.dropna(subset=['Medal'])\n\ndf_medal_male=df_medal.ix[df_medal['Sex']==\"M\"]\ndf_medal_female=df_medal.ix[df_medal['Sex']==\"F\"]","9ad3d7d7":"df_medal_male_gold=df_medal_male.ix[df_medal_male['Medal']=='Gold']\n\nmedal_map = {'Gold':1}\ndf_medal_male_gold['Medal'] = df_medal_male_gold['Medal'].map(medal_map)\n\ndf_medal_male_gold=df_medal_male_gold.groupby(['Sport'],as_index=False)['Medal'].agg('sum')\n\ndf_medal_female_gold=df_medal_female.ix[df_medal_female['Medal']=='Gold']\n\ndf_medal_female_gold['Medal'] = df_medal_female_gold['Medal'].map(medal_map)\n\ndf_medal_female_gold=df_medal_female_gold.groupby(['Sport'],as_index=False)['Medal'].agg('sum')","aedfa254":"temp1 = df_medal_male_gold[['Sport', 'Medal']] \ntemp2 = df_medal_female_gold[['Sport', 'Medal']] \n# temp1 = gun[['state', 'n_killed']].reset_index(drop=True).groupby('state').sum()\n# temp2 = gun[['state', 'n_injured']].reset_index(drop=True).groupby('state').sum()\ntrace1 = go.Bar(\n    x=temp1.Sport,\n    y=temp1.Medal,\n    name = 'Sports in which Males have won max. Gold Medals'\n)\ntrace2 = go.Bar(\n    x=temp2.Sport,\n    y=temp2.Medal,\n    name = 'Sports in which Females have won max. Gold Medals'\n)\n\nfig = tools.make_subplots(rows=1, cols=2, subplot_titles=('Sports in which Males have won max. Gold Medals', 'Sports in which Females have won max. Gold Medals'))\n                                                          \n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\n                          \nfig['layout']['xaxis1'].update(title='Name of Sport')\nfig['layout']['xaxis2'].update(title='Name of Sport')\n\nfig['layout']['yaxis1'].update(title='Sports in which Males have won Gold Medals')\nfig['layout']['yaxis2'].update(title='Sports in which Females have won Gold Medals')\n                          \nfig['layout'].update(height=500, width=1500, title='Sports in which Males and Females have won max. Gold Medals')\niplot(fig, filename='simple-subplot')","bbd6e23e":"df_india=df1.ix[df1['Team']==\"India\"]\ndf_india_medal=df_india.dropna(subset=['Medal'])","099296b8":"df_india_medal.head(1)","2329c8e9":"cnt_srs = df_india_medal['Sport'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1]\n    ),\n)\n\nlayout = dict(\n    title='Sports at which India are good at:',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename=\"india_sports\")","d69ade0a":"df1.head(2)","3f21c127":"df_medals = df1.dropna(subset=['Medal']).reset_index(drop=True)\ndf_medals.drop_duplicates(inplace=True)\ndf_medals = pd.DataFrame(df_medals.groupby(['Team', 'Medal'])['Medal'].agg({'Medal_Count':'count'})).reset_index()\ndf_medals.head()","9619d821":"df_medals = pd.merge(df_medals,pd.DataFrame(df_medals.groupby('Team')['Medal_Count'].sum()).reset_index().rename(columns={'Medal_Count':'Total_Medals'}), on=['Team'], how='left')\ndf_medals = df_medals.sort_values(by=['Total_Medals'], ascending=False)\ndf_medals.reset_index(drop=True, inplace=True)\ndf_medals = df_medals.head(30) # Top 10 Countries with max. medals\ndf_medals.head()","e490a5a9":"fig = go.Figure(data=[\n    go.Bar(name='Bronze',x=df_medals[df_medals['Medal']=='Bronze']['Team'], y=df_medals[df_medals['Medal']=='Bronze']['Medal_Count']),\n    go.Bar(name='Silver', x=df_medals[df_medals['Medal']=='Silver']['Team'], y=df_medals[df_medals['Medal']=='Silver']['Medal_Count']),\n    go.Bar(name='Gold', x=df_medals[df_medals['Medal']=='Gold']['Team'], y=df_medals[df_medals['Medal']=='Gold']['Medal_Count'])\n])\n# Change the bar mode\nfig.layout.update(barmode='stack', title='Top 10 Country with max. Medals')\niplot(fig)","9756aad0":"As far as I know, India is also pretty good at boxing. Maybe missing data is the reason!","54c103fa":"### So they have won maximum gold  medals in Swimming\n\nMichael Phelps alone won so many ;)\n\n###  China have been performing very well in the last few Olympics, lets have a look at their stats","98ddc2b2":"So I want to check out the facts for my country. Although India has never been able to perform well in the  Olympics but they have won medals in Boxing and shooting. So lets check out for India","1b1d2238":"### What are the sports involved in the Olympics?","577dc231":"###  A small wordcloud of different sports","173c9675":"### Lets have look at how many males and how many females have taken part","7255e28b":"Umm... good in diving and gymnastics","657f7b8a":"## Importing Libraries","c224f7e9":"## Most popular sport","94b3b560":"### Lets see which are the sports USA have won maximum Gold Medals","66d4f472":"## Country with maximum gold medals","57d67543":"### Lets see which are the sports in which males are good and in which females are good","34241fa8":"# **The notebook mainly focuses on the analytics part, visualizing, trying to find out the most dominating countries for the past 120 yrs, etc.**","80259d49":"So **females** are **good** at **Swimming and Athletics** and **males** are **good** at **Badminton, Rowing and Swimming.**","4e2aa94f":"Can we do a forecasting of medal counts for different countries? Please add your suggestions in the comments!"}}