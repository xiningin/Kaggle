{"cell_type":{"284d5fcb":"code","336612b6":"code","2193593b":"code","fd030d08":"code","0291da2e":"code","f37b11c2":"code","6855749b":"code","adcfb6b5":"code","14e97a7d":"code","c5993f62":"code","3e9f608e":"code","1a1aec3f":"code","b3a6fb45":"code","b4024652":"code","f09f49ff":"code","2fe2ca77":"code","64242811":"code","8a446309":"code","87070393":"code","2bb03600":"code","781ddad3":"code","ed016b8c":"code","23fa9590":"code","c83ffb2e":"code","caee1e24":"code","ca90c61d":"code","d6e3dee2":"code","8f7a7bc4":"code","6e3fd0ff":"markdown","55d3923d":"markdown","6345d598":"markdown","e2b09073":"markdown","33530f8a":"markdown","1c0021ce":"markdown","0f36d79c":"markdown"},"source":{"284d5fcb":"import os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport cv2\nimport random","336612b6":"len(os.listdir('..\/input\/beginners-cats-and-dogs\/testing_set\/testing_set'))","2193593b":"import pandas as pd\ndf = pd.read_csv(\"..\/input\/beginners-cats-and-dogs\/Train.csv\")\ndf['label'] = df['label'].astype('str')\ndf\n\n# 1 = cat, 0 = dog","fd030d08":"df_test = pd.read_csv(\"..\/input\/beginners-cats-and-dogs\/Test.csv\")\ndf_test","0291da2e":"df[\"label\"].hist(bins = 4)","f37b11c2":"df[\"label\"].value_counts()","6855749b":"# import matplotlib.pyplot as plt\n# import cv2\n\nimg = cv2.imread('..\/input\/beginners-cats-and-dogs\/training_set\/training_set\/training_5.jpg')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n\nfig, ax = plt.subplots(1, 1, figsize=(10,10))\nax.imshow(img)\n\nimg = cv2.imread('..\/input\/beginners-cats-and-dogs\/training_set\/training_set\/training_4.jpg')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n\nfig, ax = plt.subplots(1, 1, figsize=(10,10))\nax.imshow(img)","adcfb6b5":"# df = df[df['label'] == 1]\n# random.shuffle(df['filename'].tolist())\n# # df['filename'].tolist()","14e97a7d":"\n#setting_____________________________\nkey = 'cat' #cat = 1, dog = 0\nshuffle_img = True \ncolumns = 5 \nrow = 2 \nstart_photo = 0\npathh = '..\/input\/beginners-cats-and-dogs\/training_set\/training_set\/'\n\n\n# code_______________________________\n# filter class\nif key == 'cat':\n    df_vis = df[df['label'] == '1']\n    path_file = df_vis['filename'].tolist()\n\nelif key == 'dog':\n    df_vis = df[df['label'] == '0']\n    path_file = df_vis['filename'].tolist()\n    \nelse:\n    path_file = df['filename'].tolist()\n\n    \n# shuffle data\nphoto = path_file[start_photo:]\nif shuffle_img == True:\n    random.shuffle(photo)\nelse:\n    pass\n\n\n# Visualize img\ntry:\n    fig, ax = plt.subplots(row, columns, figsize=(columns * 5 , row * 4))\n    num = 0\n\n    for i in range(row):\n        for j in range(columns):\n    \n            image = cv2.imread(pathh + '\/' + photo[num])\n            image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n            ax[i][j].imshow(image)\n            num = num + 1\n            \nexcept:\n    print('Please re-setting')\n    pass\n","c5993f62":"import numpy as np\nimport pandas as pd \nfrom keras.preprocessing.image import ImageDataGenerator, load_img\nfrom keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nimport random","3e9f608e":"IMAGE_WIDTH=224\nIMAGE_HEIGHT=224\nIMAGE_SIZE=(IMAGE_WIDTH, IMAGE_HEIGHT)\nIMAGE_CHANNELS=3","1a1aec3f":"import tensorflow as tf\nfrom tensorflow import keras\n\nresnet = tf.keras.applications.ResNet50(\n    include_top=False,\n    weights=\"imagenet\",\n    input_tensor=None,\n    input_shape=None,\n    pooling=None,\n    classes=1000,\n    classifier_activation=\"softmax\",\n    \n)","b3a6fb45":"from tensorflow.keras import layers, Model\nx_in = layers.Input(shape=(IMAGE_WIDTH, IMAGE_HEIGHT, IMAGE_CHANNELS)) # \u0e2a\u0e23\u0e49\u0e32\u0e07 input layer\nx = resnet(x_in)\nx = layers.Flatten()(x) # \u0e40\u0e2d\u0e32 x \u0e40\u0e02\u0e49\u0e32 flatten\nx = layers.Dense(2, activation='softmax')(x) # \u0e40\u0e2d\u0e32 x \u0e40\u0e02\u0e49\u0e32 dense\nmodel = Model(x_in, x)\nmodel.summary()","b4024652":"from sklearn.model_selection import train_test_split\nx_train, x_val = train_test_split(df, test_size=0.20) # random_state=42\nx_train = x_train.reset_index(drop=True)\nx_val = x_val.reset_index(drop=True)","f09f49ff":"total_train = x_train.shape[0]\ntotal_validate = x_val.shape[0]\nbatch_size = 128","2fe2ca77":"# Augment\ntrain_datagen = ImageDataGenerator(\n#     rotation_range=3,\n    rescale=1.\/255,\n#     zoom_range=0.5,\n#     rotation_range=40,\n#     width_shift_range=0.2,\n#     height_shift_range=0.2,\n#     shear_range=0.2,\n#     zoom_range=0.2,\n    horizontal_flip=True,\n#     fill_mode='nearest'\n)\n\ntrain_generator = train_datagen.flow_from_dataframe(\n    x_train,\n    \"..\/input\/beginners-cats-and-dogs\/training_set\/training_set\", \n    x_col='filename',\n    y_col='label',\n    target_size=IMAGE_SIZE,\n    class_mode='categorical',\n#     class_mode='raw', #raw'\n    batch_size=batch_size\n)","64242811":"validation_datagen = ImageDataGenerator(rescale=1.\/255)\nvalidation_generator = validation_datagen.flow_from_dataframe(\n    x_val, \n    \"..\/input\/beginners-cats-and-dogs\/training_set\/training_set\", \n    x_col='filename',\n    y_col='label',\n    target_size=IMAGE_SIZE,\n    class_mode='categorical',\n#     class_mode='binary', #raw'\n    batch_size=batch_size\n)","8a446309":"example_df = x_train.sample(n=1).reset_index(drop=True)\nexample_generator = train_datagen.flow_from_dataframe(\n    example_df, \n    \"..\/input\/beginners-cats-and-dogs\/training_set\/training_set\", \n    x_col='filename',\n    y_col='label',\n    target_size=IMAGE_SIZE,\n    class_mode='categorical',\n)","87070393":"plt.figure(figsize=(12, 12))\nfor i in range(0, 15):\n    plt.subplot(5, 3, i+1)\n    for X_batch, Y_batch in example_generator:\n        image = X_batch[0]\n        plt.imshow(image)\n        break\nplt.tight_layout()\nplt.show()","2bb03600":"model.compile(loss='categorical_crossentropy', optimizer='adam',metrics=['accuracy'])","781ddad3":"history = model.fit_generator(\n        train_generator,\n        epochs=15,\n        validation_data=validation_generator,\n#         callbacks=callbacks,\n        steps_per_epoch=total_train\/\/batch_size,\n        validation_steps=total_validate\/\/batch_size\n)","ed016b8c":"# model.save_weights(\"newmodel.h5\")","23fa9590":"fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(12, 12))\nax1.plot(history.history['loss'], color='b', label=\"Training loss\")\nax1.plot(history.history['val_loss'], color='r', label=\"validation loss\")\nax1.set_xticks(np.arange(1, epochs, 1))\nax1.set_yticks(np.arange(0, 1, 0.1))\n\nax2.plot(history.history['acc'], color='b', label=\"Training accuracy\")\nax2.plot(history.history['val_acc'], color='r',label=\"Validation accuracy\")\nax2.set_xticks(np.arange(1, epochs, 1))\n\nlegend = plt.legend(loc='best', shadow=True)\nplt.tight_layout()\nplt.show()","c83ffb2e":"test_gen = ImageDataGenerator(rescale=1.\/255)\ntest_generator = test_gen.flow_from_dataframe(\n    df_test, \n    \"..\/input\/beginners-cats-and-dogs\/testing_set\/testing_set\", \n    x_col='filename',\n    y_col=None,\n    class_mode=None,\n    target_size=IMAGE_SIZE,\n    batch_size=batch_size,\n    shuffle=False\n)","caee1e24":"predict = model.predict(test_generator)","ca90c61d":"df_test['category'] = np.argmax(predict, axis=-1)","d6e3dee2":"ans = df_test[['filename', 'category']]\nans = ans.rename(columns={'category': 'label'})\nans","8f7a7bc4":"ans.to_csv('ans.csv', index=False)","6e3fd0ff":"model","55d3923d":"![image.png](attachment:b1c87769-7140-449b-acee-edd581b875ac.png)","6345d598":"# Visualize data","e2b09073":"# **Prepare data**","33530f8a":"DataGen","1c0021ce":"# Model","0f36d79c":"prepare-data"}}