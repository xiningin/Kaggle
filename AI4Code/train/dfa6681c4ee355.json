{"cell_type":{"1c4125ad":"code","64b8edb8":"code","3196ba1a":"code","663b212c":"code","8676816f":"code","c3d2ac34":"code","7be21f8c":"code","67e6460e":"code","f8e296d9":"code","f262cadf":"code","85618982":"code","09fedabe":"code","5f07bf7f":"code","b27721a4":"code","238fa049":"code","0b5c424b":"code","13f11dc9":"code","37ef5df8":"code","2851e61b":"code","5ee1fe7b":"code","ddd3bcc2":"code","c0d1af86":"code","bd75f4e0":"code","537ab901":"code","89f8d188":"code","89fd2199":"code","b87ebf5b":"code","bccff716":"code","a94721e9":"code","b3d998d7":"code","a56d050f":"code","c60012b1":"code","cbee7fd8":"markdown"},"source":{"1c4125ad":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","64b8edb8":"import warnings\n\nwarnings.filterwarnings('ignore')","3196ba1a":"db = \"\/kaggle\/input\/iris-flower-dataset\/IRIS.csv\"\ndados = pd.read_csv(db, header=None)","663b212c":"dados.shape","8676816f":"dados.head()","c3d2ac34":"dados = dados.drop(0)\ndados.head()","7be21f8c":"col_names = ['ComprimentoSepala', 'LarguraSepala', 'ComprimentoPetala', 'LarguraPetala', 'Especies']\n\ndados.columns = col_names\ndados.columns\n","67e6460e":"dados.head()","f8e296d9":"dados.info()","f262cadf":"a_trocar = {\n    'Iris-setosa' : 0,\n    'Iris-versicolor' : 1,\n    'Iris-virginica' : 2\n}\n\ndados.Especies = dados.Especies.map(a_trocar)\ndados.head()","85618982":"dados['Especies'].value_counts()","09fedabe":"dados.info()","5f07bf7f":"dados['ComprimentoSepala'] = pd.to_numeric(dados['ComprimentoSepala'], errors='coerce')\ndados['LarguraSepala'] = pd.to_numeric(dados['LarguraSepala'], errors='coerce')\ndados['ComprimentoPetala'] = pd.to_numeric(dados['ComprimentoPetala'], errors='coerce')\ndados['LarguraPetala'] = pd.to_numeric(dados['LarguraPetala'], errors='coerce')\ndados['Especies'] = pd.to_numeric(dados['Especies'], errors='coerce')","b27721a4":"dados.info()","238fa049":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score\n\nx = dados.drop(['Especies'], axis=1)\ny = dados['Especies']","0b5c424b":"raw_treino_x, raw_teste_x, treino_y, teste_y = train_test_split(x, y, test_size = 0.2, random_state = 0)\nprint(\"Treinaremos com %d elementos e testaremos com %d elementos\" % (len(raw_treino_x), len(raw_teste_x)))\n","13f11dc9":"raw_treino_x.shape, raw_teste_x.shape","37ef5df8":"for col in raw_treino_x.columns:\n    if raw_treino_x[col].isnull().mean()>0:\n        print(col, round(raw_treino_x[col].isnull().mean(),4))","2851e61b":"for df1 in [raw_treino_x, raw_teste_x]:\n    for col in raw_treino_x.columns:\n        col_median=raw_treino_x[col].median()\n        df1[col].fillna(col_median, inplace=True)   ","5ee1fe7b":"raw_treino_x.head()","ddd3bcc2":"raw_teste_x.head()","c0d1af86":"cols = raw_treino_x.columns","bd75f4e0":"scaler = StandardScaler()\ntreino_x = scaler.fit_transform(raw_treino_x)\nteste_x = scaler.transform(raw_teste_x)\n","537ab901":"treino_x = pd.DataFrame(treino_x, columns=[cols])\nteste_x = pd.DataFrame(teste_x, columns=[cols])","89f8d188":"treino_x.head()","89fd2199":"dados.dtypes","b87ebf5b":"from sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier(n_neighbors=9)\n\nknn.fit(treino_x, treino_y)","bccff716":"y_pred = knn.predict(teste_x)\n\ny_pred","a94721e9":"from sklearn.metrics import accuracy_score\n\nprint('Porcentagem de acuracia do modelo: %.2f %%' % ((accuracy_score(teste_y, y_pred)) *100))","b3d998d7":"y_pred_treino = knn.predict(treino_x)\nprint('Porcentagem de acuracia do modelo de treino: %.2f %%' % ((accuracy_score(treino_y, y_pred_treino) *100)))","a56d050f":"print('Pontua\u00e7\u00e3o do conjunto de treinamento: %.2f %%' % ((knn.score(treino_x, treino_y))*100))\n\nprint('Pontua\u00e7\u00e3o do conjunto de teste: %.2f %%' %((knn.score(teste_x, teste_y))*100))","c60012b1":"teste_y.value_counts()","cbee7fd8":"Iris-setosa = 0\n\nIris-versicolor = 1\n\nIris-virginica = 2"}}