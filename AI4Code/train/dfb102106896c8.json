{"cell_type":{"050c7500":"code","c4ae4556":"code","c9e1c3a0":"code","59469291":"code","0aa31341":"code","bd599b3a":"code","68811762":"code","602e85e3":"code","b17c5c57":"code","ff39a913":"code","c8221540":"code","6f049a50":"code","bfacdc90":"code","42ba99d9":"code","37c417c4":"code","83ca5195":"code","7f509180":"code","f466a420":"code","118d07f1":"code","4383a5ca":"code","61b39882":"code","4e678f13":"code","90efdb14":"code","81d7edc8":"code","c5768054":"code","c4a8cc2a":"code","9fe590b6":"code","5e47692f":"code","3eb6231a":"code","03efec86":"code","29d52fb9":"code","983c6693":"code","018a31be":"code","7033a20e":"code","bb8d4cef":"code","3a2b00f3":"markdown","3ea39c62":"markdown","f5611782":"markdown","6e09fa4d":"markdown","51dc503d":"markdown","18ed6222":"markdown","e3f7f437":"markdown","2dc44892":"markdown","ba4fc60e":"markdown","2c984df7":"markdown","a06071e4":"markdown","eaa8d3f9":"markdown","82f6ed37":"markdown","44050cff":"markdown","4dcb991e":"markdown"},"source":{"050c7500":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c4ae4556":"from PIL import Image\n\nimag=Image.open(\"\/kaggle\/input\/anwean.jpg\")\nimag","c9e1c3a0":"imag.rotate(-90)","59469291":"type(imag)","0aa31341":"imag_array=np.asarray(imag)","bd599b3a":"imag_array.shape","68811762":"plt.imshow(imag_array)","602e85e3":"img_test=imag_array.copy()","b17c5c57":"plt.imshow(img_test[:,:,0])","ff39a913":"plt.imshow(img_test[:,:,2])#use cmap=\"gray\" for grayscale","c8221540":"img_test[:,:,0]=0\nplt.imshow(img_test)","6f049a50":"import cv2","bfacdc90":"imag=cv2.imread(\"\/kaggle\/input\/anwean.jpg\")\nimag","42ba99d9":"imag.shape","37c417c4":"type(imag)","83ca5195":"plt.imshow(imag)","7f509180":"imag_fix=cv2.cvtColor(imag,cv2.COLOR_BGR2RGB)\nplt.imshow(imag_fix)","f466a420":"imag_one=cv2.imread(\"\/kaggle\/input\/anwean.jpg\",cv2.IMREAD_GRAYSCALE)","118d07f1":"plt.imshow(imag_one,cmap=\"gray\")","4383a5ca":"imag_one.shape","61b39882":"imag_resize=cv2.resize(imag_one,(1000,500))\nplt.imshow(imag_resize,cmap=\"gray\")","4e678f13":"h=0.5\nw=0.75","90efdb14":"img1=cv2.resize(imag_fix,(0,0),imag_fix,w,h)\nplt.imshow(img1)","81d7edc8":"img1.shape","c5768054":"img3=cv2.flip(imag_fix,0)\nplt.imshow(img3)","c4a8cc2a":"img4=cv2.flip(imag_fix,1)\nplt.imshow(img4)","9fe590b6":"black_img=np.zeros(shape=(512,512,3),dtype=np.int16)\nplt.imshow(black_img)","5e47692f":"cv2.circle(img=black_img,center=(250,250),radius=50,color=(45,245,0),thickness=8)","3eb6231a":"plt.imshow(black_img)","03efec86":"cv2.circle(img=black_img,center=(250,250),radius=50,color=(45,245,0),thickness=-1)\nplt.imshow(black_img)","29d52fb9":"cv2.rectangle(img=black_img,pt1=(100,100),pt2=(400,56),color=(145,0,0),thickness=-1)\nplt.imshow(black_img)","983c6693":"vertices=np.array([[10,450],[110,350],[180,450]],dtype=np.int32)\npts=np.reshape(vertices,(-1,1,2))\ncv2.polylines(black_img,[pts],isClosed=True,color=(123,123,223),thickness=3)\nplt.imshow(black_img)","018a31be":"vertices=np.array([[10,450],[110,350],[180,450]],dtype=np.int32)\npts=np.reshape(vertices,(-1,1,2))\ncv2.fillPoly(black_img,[pts],color=(123,123,223))\nplt.imshow(black_img)","7033a20e":"cv2.line(black_img,pt1=(0,512),pt2=(512,0),color=(34,69,11),thickness=8)\nplt.imshow(black_img)         \n         ","bb8d4cef":"font=cv2.FONT_HERSHEY_SIMPLEX\n\ncv2.putText(black_img,text=\"diehard\",org=(0,500),fontFace=font,fontScale=3,color=(255,0,255),thickness=3,lineType=cv2.LINE_AA)\nplt.imshow(black_img)","3a2b00f3":"here 1000 is the width and 500 height. first argument is width and second argument is height","3ea39c62":"haa. thats me . a smurf. opencv reads bgr while matplotlib reads rgb causing this confusion. so we need to convert opencv.\n","f5611782":"convert the whole image into one class(grayscale)","6e09fa4d":"draw shapes on images","51dc503d":"# triangles","18ed6222":"# filled circle","e3f7f437":"fill triangle","2dc44892":"# Horizontal Flip","ba4fc60e":"ratio dimensional changes","2c984df7":"using opencv","a06071e4":"# verti flip","eaa8d3f9":"create a black image","82f6ed37":"WRITE STUFF","44050cff":"# drawing lines","4dcb991e":"channel 0 is red, green is 1 and blue is 2. by specifying the the third number in the array parameter given below you specify which colour yu want to isolate"}}