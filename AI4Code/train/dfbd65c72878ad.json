{"cell_type":{"7a8cf0a2":"code","0564a8d0":"code","9e446267":"code","382df722":"code","b71e3b4c":"code","252c98fd":"code","f983cb17":"code","a3b3dc9e":"code","9ea95aec":"code","e021e585":"code","79a4dcaf":"code","6a7ead5d":"code","9a43aba7":"code","0720d382":"code","6fb1ba71":"code","d8589f08":"markdown","a1f0303e":"markdown","558769e1":"markdown","c1d710c0":"markdown","3be33d25":"markdown","ac3b1259":"markdown","0235218f":"markdown","2ab1aac5":"markdown","2354f318":"markdown","474deca1":"markdown","368872e9":"markdown","38dc6259":"markdown","85138455":"markdown","c8febefc":"markdown","aa0af457":"markdown","31c4029f":"markdown","d3b03c6b":"markdown"},"source":{"7a8cf0a2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","0564a8d0":"cat = \"\"\"user\nchurches\nresorts\nbeaches\nparks\ntheatres\nmuseums\nmalls\nzoo\nrestaurants\npubs\/bars\nlocal services\nburger\/pizza shops\nhotels\/other lodgings\njuice bars\nart galleries\ndance clubs\nswimming pools\ngyms\nbakeries\nbeauty & spas\ncafes\nview points\nmonuments\ngardens\"\"\"\ncolumns_list = cat.split(\"\\n\")\n# for i in range(len(columns_list)):\n#   columns_list[i] = columns_list[i].strip()","9e446267":"df = pd.read_csv('..\/input\/travel-review-rating-dataset\/google_review_ratings.csv',header=0,names = columns_list,index_col=False)\ndf = df.set_index('user')\ndf.head()","382df722":"display(df.info())\ndisplay(df.describe())","b71e3b4c":"df['local services'] = pd.to_numeric(df['local services'], errors='coerce')","252c98fd":"print('Total missing values in dataset')\ndisplay(df.isnull().sum())\ndf = df.dropna()","f983cb17":"sns.set(style='darkgrid',palette = 'Set3',font_scale=1.25)","a3b3dc9e":"df_transform = pd.melt(df,value_vars=['churches', 'resorts', 'beaches', 'parks', 'theatres', 'museums',\n       'malls', 'zoo', 'restaurants', 'pubs\/bars', 'local services',\n       'burger\/pizza shops', 'hotels\/other lodgings', 'juice bars',\n       'art galleries', 'dance clubs', 'swimming pools', 'gyms', 'bakeries',\n       'beauty & spas', 'cafes', 'view points', 'monuments', 'gardens'])\n\nfig = plt.figure(figsize = (15,7))\ng = sns.boxenplot(x='variable',y='value',data=df_transform,palette = 'Set3')\ng = sns.stripplot(x='variable',y='value',data=df_transform,size=1.5, color=\".6\")\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\ng.set_title(f'Overall Rating Distribution',y=1.05,fontsize=20)\ng.set_xlabel(\"\")\ng.set_ylabel(\"Rating\",labelpad = 20)\nfig.tight_layout(pad = 0.5)\nplt.savefig('Overall Rating Distribution.png')","9ea95aec":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_samples, silhouette_score\nfrom sklearn.decomposition import PCA\nimport matplotlib.ticker as ticker\n\n#Original data\ndf_original = df\n\n#Scaled Data\ndf_scaled = StandardScaler().fit_transform(df)\n\n#PCA without scaling\npca = PCA(n_components = 2,random_state=42)\ndf_PCA = pca.fit_transform(df_original)\n\n#PCA with scaling\ndf_PCA_scaled = pca.fit_transform(df_scaled)\n\ndata_list = [df_original,df_scaled,df_PCA,df_PCA_scaled]\ninertia_list = []\nlist_k = list(range(1, 30))\n\n#Run elbow to evaluate number of clusters\nfor i in range(len(data_list)):\n    sse = []\n    data = data_list[i]\n    for k in list_k:\n        km = KMeans(n_clusters=k,random_state=42)\n        km.fit(data)\n        sse.append(km.inertia_)\n    inertia_list.append(sse)\n\nresult_ori = pd.DataFrame({'K':list_k,'Inertia':inertia_list[0],'data_type':'original'})\nresult_ori_scaled = pd.DataFrame({'K':list_k,'Inertia':inertia_list[1],'data_type':'original_scaled'})\nresult_PCA = pd.DataFrame({'K':list_k,'Inertia':inertia_list[2],'data_type':'PCA'})\nresult_PCA_scaled = pd.DataFrame({'K':list_k,'Inertia':inertia_list[3],'data_type':'PCA_scaled'})\nresult = result_ori.append(result_ori_scaled).append(result_PCA).append(result_PCA_scaled)","e021e585":"fig = plt.figure(figsize=(12,8))\ng = sns.lineplot(data=result,x='K',y='Inertia',hue='data_type',linewidth=4,marker='o')\ng.set_xlabel('Nummber of cluster', labelpad = 20)\ng.set_ylabel('Inertia', labelpad = 20)\ng.yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: '{:,.0f}'.format(x\/1000) + 'K'))\ng.tick_params(which=\"both\", bottom=True)\ng.set_title('Selecting proper cluster number with elbow method',y=1.05, fontsize=20);","79a4dcaf":"pca.explained_variance_ratio_.sum()","6a7ead5d":"pca = PCA(n_components = 2,random_state=42)\ndf_PCA_scaled = pca.fit_transform(df_scaled)\n\nmodel = KMeans(n_clusters=4,random_state=42)\nmodel.fit(df_PCA_scaled)\ncluster = model.labels_","9a43aba7":"coeff = np.transpose(pca.components_[0:2, :])\nn = coeff.shape[0]\nlabels = list(df.columns)\n\n\nxs = df_PCA_scaled[:,0]\nys = df_PCA_scaled[:,1]\nscalex = 1.0\/(xs.max() - xs.min())\nscaley = 1.0\/(ys.max() - ys.min())\n\nfig = plt.figure(figsize=(15,10))\n\n#scatter plot of each data point\ng = sns.scatterplot(xs * scalex,ys * scaley,hue=cluster,palette='Set2',alpha=0.8)\n\n#add cluster centroid\nplt.scatter(x=model.cluster_centers_[:,0]*scalex, y=model.cluster_centers_[:,1]*scaley, color='b',s=100,marker='X')\n\n#add EigenVector representing how each attraction categories related to PC1 and PC2\nfor i in range(n):\n        plt.arrow(0, 0, coeff[i,0], coeff[i,1],color = 'r',alpha = 0.5)\n        plt.text(coeff[i,0]* 1.15, coeff[i,1] * 1.15, labels[i], color = 'g', ha = 'center', va = 'center')\n        \n        \ng.set_xlabel(\"PC{}\".format(1))\ng.set_ylabel(\"PC{}\".format(2))\ng.set_title('Result of K-Means clustering',y=1.05, fontsize=20);\nplt.savefig('Clustering Result.png')","0720d382":"df['cluster'] = model.labels_\ndf_long = pd.melt(df, \"cluster\", var_name=\"categories\")\n\nfig = plt.figure(figsize = (20,10))\nfor i in range(len(df_long.cluster.unique())):\n    plt.subplot(1,len(df_long.cluster.unique()),i+1)\n    g = sns.barplot(y='categories',x='value',data=df_long[df_long['cluster']==i],palette='Set3',ci=None,estimator=np.median)\n#     g.set_xticklabels(g.get_xticklabels(),rotation=90);\n    g.set_title(f'Review distribution of Cluster#{i}',y=1.02,fontsize=20)\n#     g.set_xlabel(\"\")\n    g.set_ylabel('Categories')\n    g.set_xlim(0,5)\nfig.tight_layout(pad=0.5)\nplt.savefig","6fb1ba71":"fig = plt.figure(figsize = (20,10))\ng = sns.catplot(y='categories',x='value',data=df_long,kind='bar',\n                palette='Set3',ci=None,estimator=np.median,col = 'cluster',\n               height = 12,aspect=0.4,\n               facet_kws={'xlim':(0,5)})\nfig.tight_layout(pad=0.5)\ng.fig.suptitle('Review rating of each cluster',y=1.05,ha='center')\nplt.savefig('Review rating of each cluster')","d8589f08":"In this notebook, we've done exploratory data analysis and find out that\n\n* Distribution of rating in each attraction categories are not the same. Some of them have wide range distribution while some are distribute narrowly in low rating region.\n\nWe also compared each data preparation methods and found out that with Stadardized data and reduced dimension with PCA. We are able to divide google review user into 4 separable groups. Even though relatively low cumulative explained varianced ratio from only 2 principle components with each cluster having following characteristics.\n\n1. Cluster#0 (Green)  : User who prefer nature like beaches and park, And also love to go to museums and theatres\n1. Cluster#1 (Orange) : Fast food lover, pay attention to hotel and juice bar and also have art in thier heart\n1. Cluster#2 (Light Blue) : Activities finder, this type of user love to go to local service, spend thier time in zoo, shopping in mall, having dinner in fine restaurant and pubs\/bars\n1. Cluster#3 (Pink) :  Although user in this group gave overall rating about 2 to all attraction, but compared to other 3 clusters, they seem to have more attention to dance clubs, swimming pools, gyms, bakeries, beauty and spas, cafes, view points, monuments and gardens than above 3 clusters. Therefore cluster#3 can be summarized as healthy and sightseeing lover. \n\nWith information of how different user group prefer different attraction. We can further use this information to build recommender system where we can recommend specific type of attractions to specific user to enhanced thier traveling experience and boost revenue for attraction point.\n","a1f0303e":"# Conclusion","558769e1":"K-Means clustering result in 4 clusters(segments) of user as follow,\n1. Cluster#0 (Green)  : User who prefer nature like beaches and park, And also love to go to museums and theatres\n1. Cluster#1 (Orange) : Fast food lover, pay attention to hotel and juice bar and also have art in thier heart\n1. Cluster#2 (Light Blue) : Activities finder, this type of user love to go to local service, spend thier time in zoo, shopping in mall, having dinner in fine restaurant and pubs\/bars\n1. Cluster#3 (Pink) : From scatter plot, member of this cluster are not loosely spread, they might or might not share common interest ","c1d710c0":"![Google Review](https:\/\/www.manyoujingyu.com\/wp-content\/uploads\/2020\/04\/GOOGLE-REVIEW-banner.jpg)","3be33d25":"All attribute should be float64 datatype, there is something wrong with \"local services\" attribute. Since they're in object type. It might be error while loading file, I'll simply cast datatype to float","ac3b1259":"# Introduction\n\nI'm kind of people who love traveling. But sometimes I've problems like where should I visit? Are there somewhere interesting places matched with my lifestyle? Often I spent hours to search for interesting place to go out. Such a waste of time. \n\nWhat if we can build a recommender system which can recommend you several interesting venue based on your preferences. With information from Google review, I'll try to divide Google review user into cluster of similar interest for further work of building recommender system based on thier preference.\n\nGoogle review is a platform where customers give a rating (from 0-5 stars) and leave a comment to a specific places in google maps","0235218f":"## Dataset Explanation\n\nThis data set has been sourced from the Machine Learning Repository of University of California, Irvine (UC Irvine) : Travel Review Ratings Data Set. This data set is populated by capturing user ratings from Google reviews. Reviews on attractions from 24 categories across Europe are considered. Google user rating ranges from 1 to 5 and average user rating per category is calculated.\n\n* Attribute 1 : Unique user id \n* Attribute 2 : Average ratings on churches\n* Attribute 3 : Average ratings on resorts\n* Attribute 4 : Average ratings on beaches\n* Attribute 5 : Average ratings on parks\n* Attribute 6 : Average ratings on theatres\n* Attribute 7 : Average ratings on museums\n* Attribute 8 : Average ratings on malls\n* Attribute 9 : Average ratings on zoo\n* Attribute 10 : Average ratings on restaurants\n* Attribute 11 : Average ratings on pubs\/bars\n* Attribute 12 : Average ratings on local services\n* Attribute 13 : Average ratings on burger\/pizza shops\n* Attribute 14 : Average ratings on hotels\/other lodgings\n* Attribute 15 : Average ratings on juice bars\n* Attribute 16 : Average ratings on art galleries\n* Attribute 17 : Average ratings on dance clubs\n* Attribute 18 : Average ratings on swimming pools\n* Attribute 19 : Average ratings on gyms\n* Attribute 20 : Average ratings on bakeries\n* Attribute 21 : Average ratings on beauty & spas\n* Attribute 22 : Average ratings on cafes\n* Attribute 23 : Average ratings on view points\n* Attribute 24 : Average ratings on monuments\n* Attribute 25 : Average ratings on gardens\n","2ab1aac5":"**Observation**\n\n* Overall rating are lying between 0.5 to 5 stars\n* Some attractions have wide-range of rating distribution (suchas pubs\/bars, restaurants) since they are common attraction point where most of tourist must visit\n* On the other hand, some attrations such as gyms, bakeries, swimming pools have relatively low rating. It might be interesting to find out why most of user gave low rating to this type of attractions\n* Since we don't have enough information about attraction itself or descriptive user reivews, In this notebook we'll focus on segmenting user into different cluster based on their preferences","2354f318":"This data set has been sourced from the Machine Learning Repository of University of California, Irvine (UC Irvine) : Travel Review Ratings Data Set \n\n\nThe UCI page mentions the following publication as the original source of the data set:\nRenjith, Shini, A. Sreekumar, and M. Jathavedan. 2018. Evaluation of Partitioning Clustering Algorithms for Processing Social Media Data in Tourism Domain. In 2018 IEEE Recent Advances in Intelligent Computational Systems (RAICS), 12731. IEEE","474deca1":"There is only 1 missing values in gardens and burger\/pizza shops review. So, I'll simply drop those instance out.\n\nNow let's look how our data is distributed","368872e9":"# K-Means clustering : Result and Discussion","38dc6259":"# K-Means Clustering : Find right number of cluster","85138455":"# Exploratory Data Analysis","c8febefc":"Above plot show median of rating given by user in different cluster. As discussed above,\n\n* Cluster#0 : love beaches, park, theatres, museums the most\n* Cluster#1 : love burger\/pizza, hotel\/other lodgings, juice bars  and art galleries the most\n* Cluster#2 : love malls, zoo, restaurants, pub\/bars, local services the most\n* Cluster#3 : Although user in this group gave overall rating about 2 to all attraction, but compared to other 3 clusters, they seem to have more attention to dance clubs, swimming pools, gyms, bakeries, beauty and spas, cafes, view points, monuments and gardens than above 3 clusters. Therefore cluster#3 can be summarized as healthy and sightseeing lover.\n\n\n","aa0af457":"# Acknowledgement","31c4029f":"In this section, I'll try K-Means clustering algorithm on 4 Scenarios and compared it result\n\n1. K-Means Clustering on original data (24 features)\n1. K-Means Clustering on scaled origninal data (24 features with scaled) by using StandardScaler\n1. K-Means Clustering on PCA component\n1. K-Means Clustering on PCA component with scaled data\n\nLet's see how it's like in action","d3b03c6b":"**Observation:** \n\n* It's clear that PCA version with scaled data has much more lower inertia than original one and unscaled version\n* Moreover, It's really hard to select appropriate number of cluster when using original data (It's have no distinguish elbow shape compared to PCA version)\n\nHowever, please also note that running K-Mean clustering algorithm on only 2 principle components which represent only 34% of original information (cummilative explianed variance ratio ~ 34%) may result in not so good clustering performance\n\n\n**In conclusion, I'll continue on K-Mean clustering analysis on PCA_scaled data with number of cluster = 4**\n"}}