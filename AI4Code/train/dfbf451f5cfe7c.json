{"cell_type":{"4b99f01f":"code","36b3f9a0":"code","dcc8f7e8":"code","0d17a942":"code","52bfd287":"code","072ac4a8":"code","201f9730":"code","48267883":"code","359147ad":"code","3b465bf6":"code","cb8025ee":"code","e2a3dfd1":"code","ab029957":"code","88059a3f":"code","59bc5bb7":"code","929cfd7f":"code","67303eef":"code","8ad90de6":"code","6766677e":"code","78f0e9dd":"code","a02a5118":"code","40432581":"code","5f84cdfb":"code","16c48981":"code","9e343b0d":"code","5c0402e3":"code","d93a988b":"code","2fab7b33":"code","94844a06":"code","34ef8761":"code","57871bc5":"code","330fe2f8":"code","4397fb44":"code","7cfbf5c1":"markdown","b6c1611b":"markdown","4878e811":"markdown","0ef20ff8":"markdown","760a3207":"markdown","5d02bbe3":"markdown","724d3151":"markdown","31fb6af2":"markdown","8eea68b4":"markdown","233ecbfc":"markdown","cc3404fd":"markdown","c459d8d2":"markdown","e80c8e11":"markdown"},"source":{"4b99f01f":"import numpy as np\nimport pandas as pd\nfrom scipy.spatial import distance\nfrom scipy.spatial.distance import pdist\nfrom sklearn.cluster import KMeans as kmeans, AgglomerativeClustering as hclust\nfrom scipy.cluster.hierarchy import dendrogram, ward","36b3f9a0":"movies=pd.read_csv(\"http:\/\/files.grouplens.org\/datasets\/movielens\/ml-100k\/u.item\",header=None,sep='|',encoding='iso-8859-1')","dcc8f7e8":"movies","0d17a942":"movies.columns=[\"ID\", \"Title\", \"ReleaseDate\", \"VideoReleaseDate\", \"IMDB\", \"Unknown\", \"Action\", \"Adventure\", \"Animation\", \"Children\", \"Comedy\", \"Crime\", \"Documentary\", \"Drama\", \"Fantasy\", \"FilmNoir\", \"Horror\", \"Musical\", \"Mystery\", \"Romance\", \"SciFi\", \"Thriller\", \"War\", \"Western\"]","52bfd287":"movies.shape","072ac4a8":"movies=movies.drop([\"ID\",\"ReleaseDate\",\"VideoReleaseDate\",\"IMDB\"],axis=1)","201f9730":"movies.head()","48267883":"movies.drop_duplicates(inplace=True)","359147ad":"movies.shape","3b465bf6":"dist=pdist(movies.iloc[:,1:20],'euclidean')  # euclidean distance","cb8025ee":"1664*1663\/2","e2a3dfd1":"len(dist)","ab029957":"model = hclust(affinity=\"euclidean\",linkage=\"ward\",n_clusters=10)  #lets make 10 clusters","88059a3f":"model.fit(movies.iloc[:,1:20])","59bc5bb7":"model.n_clusters","929cfd7f":"model.labels_   # labels of 10 clusters  ","67303eef":"len(model.labels_)  #each data point is assigned a label between o to 9","8ad90de6":"np.unique(model.labels_,return_counts=True)  #return_counts will give number of data points in each cluster","6766677e":"Z=ward(movies.iloc[:,1:20],)\nZ","78f0e9dd":"%matplotlib inline \nimport matplotlib.pyplot as plt \nplt.figure(figsize=(8,8))\nx = dendrogram(Z)","a02a5118":"movies['hclust_label'] = model.labels_       #make a new column in cluster in movies dataset which shows clister label for each movie","40432581":"movies","5f84cdfb":"movies.groupby(by='hclust_label').mean()","16c48981":"movies[movies.hclust_label==1].head(10)  # we can see that all these movies are either of horror genre or docimentary or both\n                                    # and also our cluster 1 is of hooror and documentary genre\n                                    # our model is performing good","9e343b0d":"km = kmeans(n_clusters=10,random_state=42)","5c0402e3":"km.fit(movies.iloc[:,1:20])","d93a988b":" km.labels_","2fab7b33":"np.unique(km.labels_,return_counts=True)","94844a06":"movies['kmeansclust_labels'] = km.labels_","34ef8761":"movies.head()","57871bc5":"movies.groupby('kmeansclust_labels').mean()","330fe2f8":"# we want to find movies similar to toy story\\\nmovies[movies.Title.str.match(\"toy story\",case=False)]  # FINDING INFO ABOUT THIS MOVIE\n# THIS MOVIES BELONGS TO hclust_label 6 and kmeansclust_labels 4\n# we can use any of them","4397fb44":"movies[movies[\"hclust_label\"]==6].head(10)  #lets say 10 movies","7cfbf5c1":"# Display ten  movies that belong to cluster no 1","b6c1611b":"# making model","4878e811":"# columns labels are missing ","0ef20ff8":"# dropping unnecessary columns","760a3207":"# now if we want to find movies related to a particular movie\n\n# step1: find the cluster of that movie\n\n# step2 : find all movies in that cluster","5d02bbe3":"## Calculating distances between each and every point","724d3151":"# reading data","31fb6af2":"# cluster no 0 contains movies with comedy genre\n# cluster 1 contains movies with horror and documentary genre","8eea68b4":"# droppimg duplicate values","233ecbfc":"## 1. Hierarchical Clustering (HClust)","cc3404fd":"# importing libraries","c459d8d2":"## 2. Kmeans Clustering","e80c8e11":"## Clustering (HClust and Kmeans)"}}