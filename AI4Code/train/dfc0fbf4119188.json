{"cell_type":{"7ee4b6f2":"code","aa08ab91":"code","bfa9159a":"code","5e3eba32":"code","35de7f85":"code","b4f95c8a":"code","c9c3eb18":"code","fed9d9f2":"code","8ae7bba5":"code","4fca428f":"code","dce5a9ef":"code","598fa406":"code","e259c6b5":"code","2d4070a3":"code","35b56171":"code","ed71f225":"code","5c2e7373":"code","3170c867":"code","e6439119":"code","6b06ed1e":"code","a334363c":"code","67542bcb":"code","1750da08":"code","b601d664":"code","5993069d":"code","d379fd9b":"code","dd0bda84":"code","2ede073a":"code","5f61e371":"code","f3d1523e":"markdown","787b7c9d":"markdown","9daa3fd9":"markdown","eb7e033f":"markdown","c530369e":"markdown","064ac4de":"markdown","a785a866":"markdown","0ce47ce8":"markdown","befd343a":"markdown","655520e7":"markdown","94c651d7":"markdown","ebbe95e7":"markdown","2914c2cb":"markdown","d0cbb444":"markdown","651c345d":"markdown","7caf0af4":"markdown","ecb737fd":"markdown","0e673f01":"markdown"},"source":{"7ee4b6f2":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly.graph_objects as go\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport datetime\n\n#Define plot style\nplt.style.use(\"fivethirtyeight\")\n\nimport gc","aa08ab91":"df = pd.read_csv(r\"..\/input\/ashrae-global-thermal-comfort-database-ii\/ashrae_db2.01.csv\")\ndf_city = pd.read_csv(r\"..\/input\/cities-of-the-world\/cities15000.csv\",encoding = \"ISO-8859-1\") # Location data","bfa9159a":"df.head()","5e3eba32":"df.info()","35de7f85":"to_drop = [\"Air temperature (F)\",#Duplicate data, we have it in celsius.\n           \"Ta_h (F)\",\"Ta_m (F)\",#Duplicate data.\n           \"Ta_l (F)\",\"Operative temperature (F)\", #Duplicate data.\n           \"Radiant temperature (F)\", #Duplicate data.\n           \"Globe temperature (F)\", #Duplicate data\n           \"Tg_h (F)\", #Duplicate data\n           \"Tg_m (F)\", #Duplicate data\n           \"Tg_l (F)\", #Duplicate data\n           \"Publication (Citation)\", #Unnecessary for the analysis\n           \"Data contributor\",#Unnecessary for the analysis\n           \"Database\", #Unnecessary for the analysis\n           \"Air velocity (fpm)\", #Duplicate data\n           \"Velocity_h (fpm)\", #Duplicate data\n           \"Velocity_m (fpm)\", #Duplicate data\n           \"Velocity_l (fpm)\", #Duplicate data\n           \"Outdoor monthly air temperature (F)\",#Duplicate data\n           \"Blind (curtain)\", #Unnecessary for the analysis\n           'Fan', 'Window', #Unnecessary for the analysis\n           'Door','Heater', #Unnecessary for the analysis\n           'activity_10', #Unnecessary for the analysis\n           'activity_20', #Unnecessary for the analysis\n           'activity_30', #Unnecessary for the analysis\n           'activity_60' #Unnecessary for the analysis\n          ]\n\ndf.drop(to_drop, axis=1, inplace=True)","b4f95c8a":"geo_df = df.groupby(\"City\")[\"City\"].agg(\"size\")\ngeo_df = geo_df.reset_index(name=\"Count\")\n\ndf_city = df_city[[\"asciiname\", \"latitude\", \"longitude\"]]\ndf_city.rename(columns = {\"asciiname\" : \"City\",\"latitude\" : \"Lat\", \"longitude\" : \"Lng\"},inplace=True)\ndf_city.drop_duplicates(subset=\"City\",inplace=True)\n\n#Midland is in the UK\ndf_city.loc[(df_city.City == \"Midland\"),\"Lat\"]= 52.489471\ndf_city.loc[(df_city.City == \"Midland\"),\"Lng\"]= -1.898575\n\ngeo_df = pd.merge(geo_df,df_city,how=\"left\", on=\"City\")\n\ngeo_df.sort_values(by=\"Count\",ascending=False, inplace=True)","c9c3eb18":"fig = go.Figure(go.Scattergeo(lon=geo_df[\"Lng\"],\n                              lat=geo_df[\"Lat\"],\n                              text=geo_df[\"City\"] + \"<br>Count: \" + geo_df[\"Count\"].astype(str),\n                              marker = dict(\n                                  size = geo_df[\"Count\"]\/1000,\n                                  line_width = 0,sizemin=5)\n                             )\n               )\n\n\nfig.update_layout(title_text = \"Geographical distribution fo the buildings\")\n\nfig.update_geos(projection_type=\"natural earth\")\n\nfig.show()","fed9d9f2":"#Data\ngeo_df.sort_values(by=\"Count\",ascending=True, inplace=True)\n\n#Plot\nax, fig = plt.subplots(figsize=(10,5))\n\nplt.barh(geo_df[\"City\"][-10:],geo_df[\"Count\"][-10:])\n\nplt.ylabel(\"Cities\", fontsize=18, alpha=.75)\nplt.xlabel(\"Number\", fontsize=18, alpha=.75)\n\nplt.yticks(alpha=0.75,weight=\"bold\")\nplt.xticks(alpha=0.75)\n\nplt.title(\"Most enteries per city\",alpha=0.75,weight=\"bold\",fontsize=20, loc=\"left\")","8ae7bba5":"#Plot\nax, fig = plt.subplots(figsize=(10,5))\n\nplt.barh(df[\"Country\"].value_counts().index,df[\"Country\"].value_counts())\n\nplt.ylabel(\"Countries\", fontsize=18, alpha=.75)\nplt.xlabel(\"Number\", fontsize=18, alpha=.75)\n\nplt.yticks(alpha=0.75, fontsize=10)\nplt.xticks(alpha=0.75)\n\nplt.title(\"Most enteries per country\",alpha=0.75,weight=\"bold\",fontsize=20, loc=\"left\")\n\ndel geo_df","4fca428f":"cooling_geo = df.groupby([\"City\",\"Cooling startegy_building level\"])[\"City\"].agg(\"size\")\ncooling_geo = cooling_geo.reset_index(name=\"Count\")\ncooling_geo = pd.merge(cooling_geo,df_city,how=\"left\", on=\"City\")\n\ngc.collect()","dce5a9ef":"fig = go.Figure()\n\nfor i in cooling_geo[\"Cooling startegy_building level\"].unique():\n\n    df_part = cooling_geo[cooling_geo[\"Cooling startegy_building level\"] == i]\n    fig.add_trace(go.Scattergeo(\n        lon = df_part[\"Lng\"],\n        lat = df_part[\"Lat\"],\n        text= df_part[\"City\"] + \"<br>Count: \" + df_part[\"Count\"].astype(str),\n        name = i,\n        marker = dict(\n            size = df_part[\"Count\"]\/25,\n            line_color='rgb(40,40,40)',\n            line_width=1.5,\n            sizemode = 'area'\n        )\n    ))\n\nfig.update_layout(dict(\n        title = \"Geographical cooling strategies (click on the legend to filter data)\",\n        height=450,\n        geo = dict(\n            showland = True,\n            landcolor = \"rgb(250, 250, 250)\",\n            subunitcolor = \"rgb(217, 217, 217)\",\n            countrycolor = \"rgb(217, 217, 217)\",\n            countrywidth = 0.5,\n            subunitwidth = 0.5\n        )))\nfig.update_geos(projection_type=\"natural earth\")\n\nfig.show()","598fa406":"table = pd.pivot_table(df[[\"Climate\",\"Cooling startegy_building level\"]],\n                       index=[\"Climate\"],columns=[\"Cooling startegy_building level\"],\n                       aggfunc=len,\n                       fill_value=0)","e259c6b5":"def conv_to_per(df):\n\n    \"\"\"\n    Converts columns to %\n    \"\"\"\n    to_drop = []\n    df[\"Sum\"] = np.sum(table,axis=1)\n    for i in df:\n        \n        df[i + \" percent\"] = np.round(df[i] \/ df[\"Sum\"] * 100,2)\n        to_drop.append(i)\n\n    df = df.drop(to_drop,axis=1)\n    df = df.drop(\"Sum percent\",axis=1)\n\n    return df","2d4070a3":"#Data\ntable = conv_to_per(table)\n\n#Plot\ntable.plot.barh(stacked=True,figsize=(15,10))\n\nplt.legend(loc='upper center', bbox_to_anchor=(0.5, -0.05),\n          fancybox=True, ncol=5)\n\nplt.title(\"Percentage of cooling strategies per climate\",\n          alpha=0.75,weight=\"bold\",fontsize=20, loc=\"left\")","35b56171":"fig, axs = plt.subplots(figsize=(15,40))\n\nlab = table.columns\n\nfor i in range(19):\n    \n    data = table.iloc[i,:]\n    data_adjusted = np.concatenate((data,[data[0]]))\n    label_palce = np.linspace(start=0, stop=2*np.pi, num=len(data_adjusted))\n\n    plt.subplot(10,2,1+i,polar=True)\n    plt.title(table.index[i], fontsize=18)\n    plt.tight_layout()\n    plt.subplots_adjust(top=1.5)\n    plt.plot(label_palce, data_adjusted)\n    lines, labels = plt.thetagrids(np.degrees(label_palce), labels=lab)\n    ","ed71f225":"ax, fig = plt.subplots(figsize=(10,7))\n\nplt.bar(df[\"Thermal preference\"].value_counts().index,df[\"Thermal preference\"].value_counts())\n\nplt.ylabel(\"Number\", fontsize=18, alpha=.75)\nplt.xlabel(\"Subject temperature satisfaction\", fontsize=18, alpha=.75)\n\nplt.yticks(alpha=0.75, fontsize=10)\nplt.xticks(alpha=0.75)\n\nplt.title(\"Subjective temperature review\",alpha=0.75,weight=\"bold\",fontsize=20, loc=\"left\")\n\ngc.collect()","5c2e7373":"ax, fig = plt.subplots(figsize=(10,5))\n\nsns.distplot(df[\"Thermal sensation\"].dropna())\n\nplt.ylabel(\"\",alpha=.75)\nplt.xlabel(\"Subject thermal sensation\", fontsize=18, alpha=.75)\n\nplt.yticks(alpha=0.75, fontsize=10)\nplt.xticks(alpha=0.75)\n\nplt.title(\"Distribution of thermal sensation\",alpha=0.75,weight=\"bold\",fontsize=20, loc=\"left\")\n\ngc.collect()","3170c867":"fig, ax = plt.subplots(figsize=(12,7))\n\n#Data\ndf_numeric = df[[\"Age\",\"Sex\",\"Clo\",\"Met\",\"Subject\u00abs height (cm)\",\"Subject\u00abs weight (kg)\",\"Thermal sensation\"]]\ndf_numeric = df_numeric.corr()\n\n#Heatmap\nax = sns.heatmap(df_numeric, annot=True,annot_kws={\"size\": 14},linewidths=.5,center=0,cbar=False)\n\n#Heatmap bug fix\nbottom, top = ax.get_ylim()\nax.set_ylim(bottom + 0.5, top - 0.5)\n\ndel df_numeric\n\ngc.collect()","e6439119":"termal_pref = df.groupby([\"City\",\"Thermal preference\"])[\"City\"].agg(\"size\")\ntermal_pref = termal_pref.reset_index(name=\"Count\")\n\n\ntermal_pref = pd.merge(termal_pref,df_city,how=\"left\", on=\"City\")","6b06ed1e":"fig = go.Figure()\n\nfor i in termal_pref[\"Thermal preference\"].unique():\n\n    df_part = termal_pref[termal_pref[\"Thermal preference\"] == i]\n    fig.add_trace(go.Scattergeo(\n        lon = df_part[\"Lng\"],\n        lat = df_part[\"Lat\"],\n        text= df_part[\"City\"] + \"<br>Count: \" + df_part[\"Count\"].astype(str),\n        name = i,\n        marker = dict(\n            size = df_part[\"Count\"]\/25,\n            line_color='rgb(40,40,40)',\n            line_width=1.5,\n            sizemode = 'area'\n        )\n    ))\n\nfig.update_layout(dict(\n        title = \"Geographical thermal preference (click on the legend to filter data)\",\n        height=450,\n        geo = dict(\n            showland = True,\n            landcolor = \"rgb(250, 250, 250)\",\n            subunitcolor = \"rgb(217, 217, 217)\",\n            countrycolor = \"rgb(217, 217, 217)\",\n            countrywidth = 0.5,\n            subunitwidth = 0.5\n        )))\nfig.update_geos(projection_type=\"natural earth\")\n\nfig.show()","a334363c":"#Data\nwarmer_df = df[df[\"Thermal preference\"] == \"warmer\"]\n\n#Plot\nax, fig = plt.subplots(figsize=(10,5))\n\nplt.barh(warmer_df[\"Climate\"].value_counts().index,warmer_df[\"Climate\"].value_counts())\n\nplt.ylabel(\"Climate\",alpha=.75)\nplt.xlabel(\"Count\", fontsize=18, alpha=.75)\n\nplt.yticks(alpha=0.75, fontsize=10)\nplt.xticks(alpha=0.75)\n\nplt.title(\"Count of warmer requests per climate\", alpha=.75, fontsize=20, weight=\"bold\", loc=\"left\")\n\ngc.collect()","67542bcb":"warmer_season = warmer_df[warmer_df[\"Climate\"].isin(warmer_df[\"Climate\"].value_counts().index[:3])]\n\nwarmer_season = warmer_season[[\"Season\",\n                               \"Climate\",\n                               \"Operative temperature (C)\",\n                               \"Outdoor monthly air temperature (C)\"]] ","1750da08":"i = 0\naxs, fig = plt.subplots(figsize=(15,5),sharex=True)\n\nfor climate in warmer_season[\"Climate\"].unique():\n    \n    df = warmer_season.query(\"Climate == @climate\")\n    \n    #25% as sample since my CPU is going to burn up\n    sample_size = df.sample(frac=0.25)\n    \n    try:\n        plt.subplot(1,3,1+i)\n        i+=1\n        sns.swarmplot(x=\"Season\",\n                      y=\"Operative temperature (C)\",\n                      color=\"#008FD5\",\n                      alpha=0.75,\n                      data=sample_size,\n                      label=\"Op\"\n                     )\n        sns.swarmplot(x=\"Season\",\n                      y=\"Outdoor monthly air temperature (C)\",\n                      color=\"#FF2700\",\n                      alpha=0.75,\n                      data=sample_size,\n                      label=\"Outside\"\n                     )\n        \n        plt.title(climate, fontsize=18, alpha=0.75)\n        plt.ylabel(\"Temperature\", fontsize=18)\n        \n    except:\n        pass\n    \nplt.text(x=-11,y=30, s=\"Operative vs Outside temperature\", fontsize=25, weight=\"bold\", alpha=0.75)","b601d664":"ax, fig = plt.subplots(figsize=(10,5))\n\nsns.distplot(warmer_df[\"Operative temperature (C)\"].dropna(), label=\"Operative temperature\")\nsns.distplot(warmer_df[\"Outdoor monthly air temperature (C)\"].dropna(), label=\"Outdoor temperature\")\n\nplt.xlabel(\"Temperature\", fontsize=15, alpha=0.75, weight=\"bold\")\n\nplt.title(\"Temperature distribution: Operative vs Outdoor\", fontsize=20, alpha=0.75, weight=\"bold\", loc=\"left\")\nplt.legend(loc='upper center', bbox_to_anchor=(0.5, -0.15),\n          fancybox=True, ncol=5)","5993069d":"#Lets see how geographic factors affect the pref\n\ncooler_df = df[df[\"Thermal preference\"] == \"cooler\"]\n\nplt.barh(cooler_df[\"Climate\"].value_counts().index,cooler_df[\"Climate\"].value_counts())","d379fd9b":"plt.barh(cooler_df[\"Cooling startegy_building level\"].value_counts().index,cooler_df[\"Cooling startegy_building level\"].value_counts())","dd0bda84":"sns.distplot(cooler_df[\"Operative temperature (C)\"].dropna())","2ede073a":"op_temp = df.groupby(\"City\")[\"Operative temperature (C)\"].agg(\"mean\")\nop_temp = op_temp.reset_index(name=\"Mean\")\n\nop_temp = pd.merge(op_temp,df_city,how=\"left\", on=\"City\")","5f61e371":"fig = go.Figure()\n\ndf_part = op_temp.dropna()\ndf_part = df_part[df_part[\"Mean\"] <= 22]\nfig.add_trace(go.Scattergeo(\n    lon = df_part[\"Lng\"],\n    lat = df_part[\"Lat\"],\n    text= df_part[\"City\"] + \"<br>Mean Operative Temperature: \" + round(df_part[\"Mean\"],2).astype(str),\n    name = \"<= 22\",\n    marker = dict(\n        size = round(df_part[\"Mean\"]\/2,2),\n        line_color='rgb(40,40,40)',\n        line_width=1.5\n    )\n))\n\ndf_part = op_temp.dropna()\ndf_part = df_part[df_part[\"Mean\"] > 22]\nfig.add_trace(go.Scattergeo(\n    lon = df_part[\"Lng\"],\n    lat = df_part[\"Lat\"],\n    text= df_part[\"City\"] + \"<br>Mean Operative Temperature: \" + round(df_part[\"Mean\"],2).astype(str),\n    name = \"> 22\",\n    marker = dict(\n        size = round(df_part[\"Mean\"]\/2,2),\n        line_color='rgb(40,40,40)',\n        line_width=1.5\n    )\n))\n\nfig.update_layout(dict(\n        title = \"Geographical operative temperature\",\n        height=450,\n        geo = dict(\n            showland = True,\n            landcolor = \"rgb(250, 250, 250)\",\n            subunitcolor = \"rgb(217, 217, 217)\",\n            countrycolor = \"rgb(217, 217, 217)\",\n            countrywidth = 0.5,\n            subunitwidth = 0.5\n        )))\nfig.update_geos(projection_type=\"natural earth\")\n\nfig.show()","f3d1523e":"Most data steams from Europe, USA and India. We will do a quick part plot analysis to determine the exact numbers for the cities\/countries.","787b7c9d":"# **Initial data analysis**\n\nWe are going to take a sneak peek at the data and determine how much of it we are going to use.","9daa3fd9":"# **Importing libraries and data**\n\n\nIn addition to the ASHRAE dataset, I am going to import the city dataset for its location data. Please note that there will be some changes to the location data that we need to apply manually.","eb7e033f":"We will present the different strategies on an interactive geo plot using plotly. Plotly geoplot can sometimes get a bit crowded so please click on each value of the legend to filter it out.","c530369e":"# **Introduction**\n\nASHRAE Global Thermal Comfort dataset is another fascinating dataset that combines objective and subjective data. The combination allows for an interesting perspective on how real people are affected by HVAC systems. This unique perspective will allow us to conduct a dive into the world of HVAC science and hopefully emerge with new insights.\n\nMy initial idea for this dataset is to conduct a geographical analysis of HVAC systems and thermal preferences. We will do a lot of geographical plotting combined with some spider graphs and stacked bar graphs. The end goals are:\n\nExploring how geography and climate affect HVAC systems and thermal preferences.\nFind possible correlations between thermal preferences and subjective data.\nDetermine what factors influence thermal dissatisfaction.\n","064ac4de":"# **Categorical warmer\/cooler split**\n\nLike I mentioned above, it is difficult to analyse multi-category data as various aspects influence separate categories uniquely. To combat this, we will split the data based on the occupier's response warmer\/cooler\/no change. For now, we will leave out the no change group as they are perfectly content as they are.","a785a866":"As previously mentioned, the main focus of this notebook will be on the geographical analysis of the thermal dataset. To that end, we will first be plotting all buildings on a world map. It is important to note that this dataset covers the thermal preference of subjects in these buildings over almost a century. To simplify, it means that the number of entries doesn't equal number of unique buildings.\n\nWe will need to merge the location dataset with the thermal dataset. Before we do that, we will need to address some data mismatches on the dataset. In particular, the city of \"Midlands\" exists in both the US and UK. Please note that Midlands is not an actual city in this context, but an area.","0ce47ce8":"The thermal sensation scale goes from -3 to +3 as represents how hot\/cold a subject is. Extremes of this scale are used to showcase major discomfort with the temperature situation of the individual sites. Plotting this information results in a Gaussian-shaped distribution with most occupiers being content.\n\nNow, lets to a quick linear correlation check using a heatmap. The columns I choose for this particular heatmap are all related to the individual subject.","befd343a":" # **Exploratory data analysis**\n ","655520e7":"There is almost no linear correlation between the variables. However, this doesn't mean that the individual columns don't have any correlation between them. There is still non-linear correlation and we are still using multi-category data for the analysis which might have an impact.\n\n Before we go into the deeper analysis we are going to plot and mark the geographical locations of all thermal preferences and try to find any insights.","94c651d7":"Now we will shift our focus on the heating and cooling strategies each of these entries uses. We will try to determine and plot the most frequently occurring strategies in this dataset.\n\nUnfortunately, the first issue happens here. The heating strategies column has a large number of missing values and is unsuitable for plotting and analysis due to the remaining data only being one category. That is why our focus completely shifts to the cooling strategies of the dataset.  This focus will further allow us to present the data in a couple of ways and it should be fun.","ebbe95e7":"Another interesting way to present this data is via spider\/radar plots. Researching for this plot, I found that many methods for it are a bit complicated and difficult to understand. The code I wrote for it requires very little alteration and is more straightforward.","2914c2cb":"The dataset has a lot of columns, and many of them have less than 40% of their data. Additionally, there are duplicate columns (for example temperature data in both Fahrenheit and Celsius). We are going to cover them and determine the ones that need dropping.","d0cbb444":"To summarize the different strategies per location, we will convert each strategy to a % and present it as a stacked bar plot.","651c345d":"# **Thermal preference\/comfort**\n\nThis is the central piece of the whole dataset. Thermal comfort in this context expressed the satisfaction with the thermal environment and is appraised by a subjective evaluation as stated by the ANSI\/ASHRAE Standard 55. One of the major goals of HVAC systems is maintaining the standard thermal comfort of the building's occupants. To achieve this the temperature must be in equilibrium with the occupants and allow the human-generated metabolism heat to disperse - meaning not too hot and not too cold. Many factors affect this process like metabolic rate, clothing insulation, air temperature, mean radiant temperature, airspeed and relative humidity. There are also some psychological factors involved, but we will not dwell that deep into that part of the subject. All of this means that the thermal comfort zone is not a fixed point, but rather a flexible range that is unique to the individual.\n\n\nFirst and foremost we are going to look into the subjective data of the individual if they are content with the temperature in the building.","7caf0af4":"A lot of people are content with the temperature situation in their respective buildings. However, there are still quite a lot of occupiers unsatisfied with the current situation.","ecb737fd":"**Location data preperation**","0e673f01":"# **Not finished from this point onwards :D**"}}