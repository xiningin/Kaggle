{"cell_type":{"8d01701a":"code","f31771c2":"code","87865838":"code","aca85329":"code","fcdebb35":"code","0c0912b6":"code","4472981e":"code","d602d35b":"code","dd1f88b9":"code","8b318844":"code","a34f9478":"code","b316f0da":"code","c74673e1":"code","37ba3c10":"code","7fd30226":"code","356a2e2b":"code","2ef980e5":"code","7e253f87":"code","0c5ade1f":"code","ceaa7752":"code","a6a4c7e3":"code","fdb6c90e":"code","cad44494":"code","b390f031":"code","d8d157ca":"code","94eba1d9":"code","0c3aef0f":"code","d22f68d7":"code","41742040":"code","e68eebe9":"code","6eaebcd0":"markdown","5c628b93":"markdown","87a630b3":"markdown","998ff8e4":"markdown","d0a96bad":"markdown","6ee65a36":"markdown","e756070f":"markdown","437de85b":"markdown","0fa60ec8":"markdown"},"source":{"8d01701a":"import numpy as np \nimport pandas as pd ","f31771c2":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\n%matplotlib inline","87865838":"df=pd.read_csv(\"..\/input\/911csv\/911.csv\")\ndf.head()","aca85329":"#top 5 zipcode\ndf['zip'].value_counts().head(5)","fcdebb35":"#Top 5 Township\ndf['twp'].value_counts().head(5)","0c0912b6":"# ** Take a look at the 'title' column, how many unique title codes are there? **\ndf['title'].nunique()","4472981e":"df['Reason']=df['title'].apply(lambda title: title.split(':')[0])\ndf['Reason']","d602d35b":"df['Reason'].value_counts()","dd1f88b9":"sns.countplot(x='Reason',data=df,palette='viridis')","8b318844":"type(df['timeStamp'].iloc()[0])","a34f9478":"df['timeStamp'] = pd.to_datetime(df['timeStamp'])\ndf['timeStamp']","b316f0da":"time = df['timeStamp'].iloc[0]\ntime.hour","c74673e1":"df['Hour'] = df['timeStamp'].apply(lambda time: time.hour)\ndf['Month'] = df['timeStamp'].apply(lambda time: time.month)\ndf['Day of Week'] = df['timeStamp'].apply(lambda time: time.dayofweek)","37ba3c10":"df.head()","7fd30226":"dmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}","356a2e2b":"df['Day of Week'] = df['Day of Week'].map(dmap)","2ef980e5":"df.head()","7e253f87":"sns.countplot(x='Day of Week',data=df,hue='Reason',palette='viridis')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","0c5ade1f":"sns.countplot(x='Month',data=df,hue='Reason',palette='viridis')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","ceaa7752":"byMonth=df.groupby('Month').count()\nbyMonth.head()","a6a4c7e3":"byMonth['lat'].plot()","fdb6c90e":"sns.lmplot(x='Month',y='twp',data=byMonth.reset_index())","cad44494":"df['Date']=df['timeStamp'].apply(lambda t: t.date())\ndf.head()","b390f031":"df.groupby('Date').count()['twp'].plot()\nplt.tight_layout()","d8d157ca":"df[df['Reason']=='Traffic'].groupby('Date').count()['twp'].plot()\nplt.title('Traffic')\nplt.tight_layout()","94eba1d9":"df[df['Reason']=='Fire'].groupby('Date').count()['twp'].plot()\nplt.title('Fire')\nplt.tight_layout()","0c3aef0f":"df[df['Reason']=='EMS'].groupby('Date').count()['twp'].plot()\nplt.title('EMS')\nplt.tight_layout()","d22f68d7":"dayHour = df.groupby(by=['Day of Week','Hour']).count()['Reason'].unstack()\ndayHour.head()","41742040":"plt.figure(figsize=(12,6))\nsns.heatmap(dayHour,cmap='viridis')","e68eebe9":"sns.clustermap(dayHour,cmap='viridis')","6eaebcd0":"** Now groupby this Date column with the count() aggregate and create a plot of counts of 911 calls.**","5c628b93":"** In the titles column there are \"Reasons\/Departments\" specified before the title code. These are EMS, Fire, and Traffic. Use .apply() with a custom lambda expression to create a new column called \"Reason\" that contains this string value.** \n\n**For example, if the title column value is EMS: BACK PAINS\/INJURY , the Reason column value would be EMS. **","87a630b3":"** Now use seaborn to create a countplot of the Day of Week column with the hue based off of the Reason column. **","998ff8e4":"For some missing month","d0a96bad":"** Now let us begin to focus on time information. What is the data type of the objects in the timeStamp column? **\n","6ee65a36":"Heatmap ,combine groupby unstack","e756070f":"**Create a new column called 'Date' that contains the date from the timeStamp column. You'll need to use apply along with the .date() method. ** ","437de85b":"** What is the most common Reason for a 911 call based off of this new column? **","0fa60ec8":"** Now use seaborn to create a countplot of 911 calls by Reason. **"}}