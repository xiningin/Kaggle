{"cell_type":{"c89698c7":"code","bfd0e968":"code","b2f89237":"code","2ef7259c":"code","bdcb84e9":"code","ed653b05":"code","31a5c2b7":"code","8e83038b":"code","5c3ae0c4":"code","dbaa045f":"code","db1c19c9":"code","2fed8729":"code","ad5fef1a":"markdown"},"source":{"c89698c7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt \nimport plotly.graph_objects as go\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn import datasets, linear_model\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import GradientBoostingRegressor\n\n\nlabelencoder = LabelEncoder()\n%matplotlib inline\n\nfrom sklearn.datasets import load_boston\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","bfd0e968":"data = pd.read_csv('\/kaggle\/input\/air-pollution-in-seoul\/AirPollutionSeoul\/Measurement_summary.csv')\ndata.head()","b2f89237":"data.isna().sum()","2ef7259c":"BBox = ((data.Longitude.min(),   data.Longitude.max(), data.Longitude.mean(),       \n         data.Latitude.min(), data.Latitude.max(), data.Latitude.mean()))\nBBox        ","bdcb84e9":"cols = data.columns[:50]\nplt.figure(figsize = (16,5))\nsns.heatmap(data[cols].corr(), annot = True, cmap= 'coolwarm', fmt='.2g')","ed653b05":"#sns.swarmplot(x='NO2', y='O3', data=data)","31a5c2b7":"train_data = [data['O3'],data['SO2'], data['NO2'], data['CO'], data['PM10'], data['PM2.5']]\nheaders = [\"O3\",\"SO2\",\"NO2\", \"CO\", \"PM10\", \"PM2.5\"]\ndataset = pd.concat(train_data, axis=1, keys=headers)\ndataset.head()","8e83038b":"dataset.dtypes","5c3ae0c4":"#dataset = pd.get_dummies(data, columns = [\"NO2\", \"O3\", \"SO2\"])\n\ntrain = dataset[:int(len(data)\/2)]\ntest = dataset[int(len(data)\/2):]\n\ny=train['O3']\nX=train.drop('O3', axis=1)\n\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size = 473, random_state = 2)","dbaa045f":"model_1 = RandomForestClassifier(n_estimators=100)\nmodel_1.fit(X_train.astype('int'), y_train.astype('int'))\n\npredict1 = model_1.predict(X_val.astype('int'))\nacuracy1 = accuracy_score(predict1, y_val.astype('int'))\nprint('Accuracy: ', acuracy1)","db1c19c9":"y_train = train['O3']\nX_train = train[['SO2','NO2', 'CO', 'PM10', 'PM2.5']]\n\nX_test = test[['SO2','NO2', 'CO', 'PM10', 'PM2.5']]\nselected_columns = X_train[['SO2','NO2',  'CO', 'PM10', 'PM2.5']]\ndf1 = selected_columns.copy()\n\n#y_train = y_train.reindex(X_test.index)\n#X_train = X_train.reindex(X_test.index)\ndf1 = X_test.reindex(X_test.index)\ndf1 = df1[:-1]","2fed8729":"final_model = RandomForestClassifier(n_estimators=100)\nfinal_model.fit(df1.astype('int'), y_train.astype('int'))\n\nfinal_predictions = final_model.predict(X_test)\noutput = pd.DataFrame({'Id': test.index, 'O3': final_predictions})\nfinal_predictions = final_predictions[:-1]\nfinal_accuracy = accuracy_score(final_predictions, y_train.astype('int'))\nprint('Accuracy: ', final_accuracy)\n\noutput.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","ad5fef1a":"<a id = \"submit\"><\/a>\n# Submission"}}