{"cell_type":{"3f87044d":"code","6b8c2bc7":"code","b2ef4868":"code","fd518090":"code","6b2fb882":"code","5671db63":"code","dc970653":"code","4b630cc6":"code","74e6c7c1":"code","5e93ab28":"code","24427663":"code","4a19736b":"code","09436ee7":"code","aa6751ff":"code","6e94db2c":"code","0142156b":"code","f3a71449":"code","f66ad6f5":"code","9f95188b":"markdown","849eeffc":"markdown","f0c21517":"markdown","1751cd0a":"markdown","0d1f282b":"markdown","79176fe1":"markdown","81e43db8":"markdown","e349df52":"markdown","713009ba":"markdown","272b9a47":"markdown","17ef3b49":"markdown","9a7ed5d1":"markdown","5a2cba96":"markdown","98aa763e":"markdown","9b122fe1":"markdown"},"source":{"3f87044d":"import pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport numpy as np\ndata = pd.read_csv('\/kaggle\/input\/heart-failure-prediction\/heart.csv')","6b8c2bc7":"data.info()","b2ef4868":"data.head()","fd518090":"data.tail()","6b2fb882":"data.describe()","5671db63":"data.info()","dc970653":"cat_cols = ['Sex', 'ChestPainType', 'FastingBS', 'RestingECG', 'ExerciseAngina',\n            'ST_Slope','HeartDisease']\ndata[cat_cols] = data[cat_cols].astype('category')","4b630cc6":"fig, axes = plt.subplots(3, 2 , figsize=(7, 5))\nsns.histplot(data['Age'], ax=axes[0, 0])\nsns.histplot(data['RestingBP'], ax=axes[0, 1])\nsns.histplot(data['Cholesterol'], ax=axes[1, 0])\nsns.histplot(data['MaxHR'], ax=axes[1, 1], bins=70)\nsns.histplot(data['Oldpeak'], ax=axes[2, 0])\nfig.delaxes(axes[2,1])\nfig.tight_layout()","74e6c7c1":"data['Cholesterol'] = data['Cholesterol'].replace(0, np.nan)\ndata['Cholesterol_Missing'] = data['Cholesterol'].isna().astype('int').astype('category')\ndata['Oldpeak'] = data['Oldpeak'].replace(0, np.nan)\ndata['Oldpeak_Missing'] = data['Oldpeak'].isna().astype('int').astype('category')","5e93ab28":"num_cols = data.select_dtypes(exclude='category').columns.values\n\nfig, axes = plt.subplots(1, len(num_cols), figsize=(10,2))\nfor idx, col in enumerate(num_cols):\n    sns.violinplot(data=data, y=col, x='HeartDisease', ax=axes[idx])\nfig.tight_layout()","24427663":"for col in num_cols:\n    q_low = data[col].quantile(0.01)\n    q_hi  = data[col].quantile(0.99)\n    data = data.drop(data[(data[col] > q_hi) | (data[col] < q_low)].index, axis=0)","4a19736b":"cat_cols = data.select_dtypes(include='category').columns.values\nfig, axes = plt.subplots(3, 2, figsize=(14,7))\nsns.countplot(data=data, x='Sex', hue='HeartDisease', ax=axes[0,0])\nsns.countplot(data=data, x='ChestPainType', hue='HeartDisease', ax=axes[0,1])\nsns.countplot(data=data, x='FastingBS', hue='HeartDisease', ax=axes[1,0])\nsns.countplot(data=data, x='RestingECG', hue='HeartDisease', ax=axes[1,1])\nsns.countplot(data=data, x='ExerciseAngina', hue='HeartDisease', ax=axes[2,0])\nsns.countplot(data=data, x='ST_Slope', hue='HeartDisease', ax=axes[2,1])\nfig.tight_layout()","09436ee7":"fig, axes = plt.subplots(1, 3, figsize=(12,5))\nsns.violinplot(data=data, x='Sex', y='Age', hue='HeartDisease', ax=axes[0])\nsns.violinplot(data=data, x='Sex', y='Cholesterol', hue='HeartDisease', ax=axes[1])\nsns.violinplot(data=data, x='Sex', y='RestingBP', hue='HeartDisease', ax=axes[2])\nfig.tight_layout()","aa6751ff":"from sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.impute import SimpleImputer, KNNImputer\nfrom sklearn.compose import ColumnTransformer\n\nx = data.drop('HeartDisease', axis=1)\ny = data['HeartDisease']\n\ncat_cols = x.select_dtypes(include='category').columns.values\nnum_cols = x.select_dtypes(exclude='category').columns.values\n\nnum_pipe = make_pipeline(KNNImputer(n_neighbors=10), StandardScaler())\ncat_pipe = make_pipeline(OneHotEncoder(handle_unknown='error', drop='if_binary'))\n\ncol_trans = ColumnTransformer([\n    ('num', num_pipe, num_cols),\n    ('cat', cat_pipe, cat_cols),\n])","6e94db2c":"from sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score, StratifiedKFold\nfrom sklearn.linear_model import LogisticRegression\n\nclfs = [SVC(), DecisionTreeClassifier(), RandomForestClassifier(), AdaBoostClassifier(),\n       KNeighborsClassifier(), LogisticRegression()]\n\nskf = StratifiedKFold(n_splits=10, shuffle=True, random_state=23)\n\nfor clf in clfs:\n    pipe = make_pipeline(col_trans, clf)\n    res = cross_val_score(pipe, x, y, cv=skf).mean()\n    print(clf.__class__.__name__, res)","0142156b":"x_trans = col_trans.fit_transform(x)","f3a71449":"import optuna\n\ndef objective(trial):\n    \n    optuna_x = col_trans.fit_transform(x)\n    \n    svc_c = trial.suggest_float(\"C\", 1e-2, 1e1, log=True)\n    svc_gamma = trial.suggest_float(\"gamma\", 1e-2, 1e1, log=True)\n    classifier_obj = SVC(kernel='rbf', C=svc_c, gamma=svc_gamma, random_state=23)\n    score = cross_val_score(classifier_obj, x_trans, y, n_jobs=-1, cv=skf)\n    accuracy = score.mean()\n    return accuracy\n\n\nstudy = optuna.create_study(direction=\"maximize\")\nstudy.optimize(objective, n_trials=200)\nprint(study.best_trial)","f66ad6f5":"best_params = study.best_params\nprint('ACC:', cross_val_score(SVC(**best_params), x_trans, y, cv=skf).mean())\nprint('AUC:', cross_val_score(SVC(**best_params), x_trans, y, cv=skf, scoring='roc_auc').mean())\nprint('F1:', cross_val_score(SVC(**best_params), x_trans, y, cv=skf, scoring='f1').mean())\n","9f95188b":"Best path what i found it's remove all data lower 0.01 quantile and above 0.99","849eeffc":"# FInal results on cross validation is:\n**ACC: 0.885, \nAUC: 0.930, \nF1_score: 0.897**","f0c21517":"In future it'll make our life easier","1751cd0a":"Let's change column's categories","0d1f282b":"Now we need to see some plots","79176fe1":"Best model is SVC","81e43db8":"We can see there's no non values","e349df52":"# Read data\nUsing pandas to read csv file","713009ba":"We found:\n* Male is more susceptible to heart disease\n* People with ASY chestpain are most likely sick\n* People with a Fasting bs sick almost 3 times more\n* Those who have ST RstingECG sick almost in 2 times more\n* ExerceiseAngeina is really good feature\n* People with Flat ST Slope sick in 4 times more\n","272b9a47":"# EDA\nWe'll use seaborn and pandas to analyse the data","17ef3b49":"As you can see, there's some outliers in data","9a7ed5d1":"# Modeling\n* Create column transformer\n* Select best type of model\n* Hyperparameters tuning","5a2cba96":"Maybe all null values was imputed by zeroes.\nWe need to remove it","98aa763e":"**If you have any advice or promt please let me know, i'll be really thankful**","9b122fe1":"There's some interesting thing. Zero values in Cholesterol & FastingBS"}}