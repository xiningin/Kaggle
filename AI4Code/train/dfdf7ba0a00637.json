{"cell_type":{"bfb2b959":"code","6c9edfc2":"code","0cd30d72":"code","bd57b217":"code","1ff0ab4f":"code","68850866":"code","256738aa":"code","f8359692":"code","5a21eb9d":"code","1d3ccae8":"code","ae699a4f":"code","8afe591b":"code","1d3836b1":"code","ffa65615":"code","a8b68199":"code","13585765":"code","05b5c918":"code","823030eb":"code","f0da92b7":"code","719c56dc":"code","edb61009":"code","6bfee56e":"code","fbe7260a":"code","a6a820fb":"code","46513801":"code","048eda4e":"code","2cd01c2b":"code","b0ef2691":"code","8993db21":"code","096f22b1":"code","eb855976":"code","e38e5220":"code","6f0e756d":"code","668fe440":"code","d7674e99":"markdown","41449123":"markdown","149e6fa9":"markdown","54708180":"markdown","528d0616":"markdown","eb618363":"markdown","913b179d":"markdown","449e62f2":"markdown","7ef64edd":"markdown","13d356f0":"markdown","21a79b60":"markdown","de9a5216":"markdown","50b85471":"markdown","e55bd0f8":"markdown","09aedd64":"markdown","75d29698":"markdown","2751291a":"markdown","9a83b1e9":"markdown","f4c2af95":"markdown","5cd42375":"markdown","c718e799":"markdown","54621fbc":"markdown","65964643":"markdown"},"source":{"bfb2b959":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n!pip install pywaffle --quiet\nfrom pywaffle import Waffle\nfrom wordcloud import WordCloud","6c9edfc2":"df= pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")","0cd30d72":"df","bd57b217":"df.info()","1ff0ab4f":"df.describe()","68850866":"print(\"A detailed description of the dataset \")\nd = df.describe().T\nd","256738aa":"print('Insights obtained from the dataset are as follows :')\nprint(\"1. MEAN NORTH AMERICA SALES =\",d.iloc[2,1])\nprint(\"1. MEAN EUROPE SALES =\",d.iloc[3,1])\nprint(\"1. MEAN JAPAN SALES =\",d.iloc[4,1])\nprint(\"1. MEAN OTHER SALES =\",d.iloc[5,1])\nprint(\"1. MEAN GLOBAL SALES =\",d.iloc[6,1])","f8359692":"print(\"Number of games: \", len(df))\npublishers = df['Publisher'].unique()\nprint(\"Number of publishers: \", len(publishers))\nplatforms = df['Platform'].unique()\nprint(\"Number of platforms: \", len(platforms))\ngenres =df['Genre'].unique()\nprint(\"Number of genres: \", len(genres))","5a21eb9d":"df.isnull().sum()","1d3ccae8":"df=df.dropna()\ndata=df","ae699a4f":"data_genre = df.groupby(by=['Genre'])['Global_Sales'].sum().reset_index().sort_values(by=['Global_Sales'], ascending=False)","8afe591b":"plt.figure(figsize=(15, 10))\nax=sns.barplot(x=\"Genre\", y=\"Global_Sales\", data=data_genre)\nplt.xticks(rotation=90)\nfor p in ax.patches:\n    ax.annotate(int(p.get_height()), (p.get_x()+0.25, p.get_height()+1), va='bottom',\n                    color= 'black')\nplt.show()","1d3836b1":"publisher = df.loc[:,['Publisher','Global_Sales']]\npublisher['total_sales'] = publisher.groupby('Publisher')['Global_Sales'].transform('sum')\npublisher.drop('Global_Sales', axis=1, inplace=True)\npublisher = publisher.drop_duplicates()\npublisher = publisher.head(10)\n\nfig = px.pie(publisher, names='Publisher', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=[0.2,0.1,0.1,0.1,0.1], textinfo=\"percent+label\")\nfig.show()","ffa65615":"GP=df[[\"Platform\", \"Global_Sales\"]].groupby(['Platform'], as_index=False).mean().sort_values(by='Global_Sales', ascending=False)\nplt.figure(figsize=(20,8))\n\nsns.barplot(x='Platform', y='Global_Sales', data=GP)","a8b68199":"game = data.loc[data['Name']!='Wii Sports',['Name','EU_Sales']]\ngame = game.sort_values('EU_Sales', ascending=False)\ngame = game.head()\n\nfig = px.pie(game, names='Name', values='EU_Sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","13585765":"game = data.loc[data['Name']!='Wii Sports',['Name','NA_Sales']]\ngame = game.sort_values('NA_Sales', ascending=False)\ngame = game.head()\n\nfig = px.pie(game, names='Name', values='NA_Sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","05b5c918":"game = data.loc[data['Name']!='Wii Sports',['Name','JP_Sales']]\ngame = game.sort_values('JP_Sales', ascending=False)\ngame = game.head()\n\nfig = px.pie(game, names='Name', values='JP_Sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","823030eb":"game = data.loc[data['Name']!='Wii Sports',['Name','Global_Sales']]\ngame = game.sort_values('Global_Sales', ascending=False)\ngame = game.head()\n\nfig = px.pie(game, names='Name', values='Global_Sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","f0da92b7":"platform = data.loc[data['Name']!='Wii Sports',['Platform','NA_Sales']]\nplatform['total_sales'] = platform.groupby('Platform')['NA_Sales'].transform('sum')\nplatform.drop('NA_Sales', axis=1, inplace=True)\nplatform = platform.drop_duplicates()\nplatform = platform.sort_values('total_sales', ascending=False)\nplatform = platform.head()\n\nfig = px.pie(platform, names='Platform', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","719c56dc":"platform = data.loc[data['Name']!='Wii Sports',['Platform','EU_Sales']]\nplatform['total_sales'] = platform.groupby('Platform')['EU_Sales'].transform('sum')\nplatform.drop('EU_Sales', axis=1, inplace=True)\nplatform = platform.drop_duplicates()\nplatform = platform.sort_values('total_sales', ascending=False)\nplatform = platform.head()\n\nfig = px.pie(platform, names='Platform', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","edb61009":"platform = data.loc[data['Name']!='Wii Sports',['Platform','JP_Sales']]\nplatform['total_sales'] = platform.groupby('Platform')['JP_Sales'].transform('sum')\nplatform.drop('JP_Sales', axis=1, inplace=True)\nplatform = platform.drop_duplicates()\nplatform = platform.sort_values('total_sales', ascending=False)\nplatform = platform.head()\n\nfig = px.pie(platform, names='Platform', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","6bfee56e":"platform = data.loc[data['Name']!='Wii Sports',['Platform','Global_Sales']]\nplatform['total_sales'] = platform.groupby('Platform')['Global_Sales'].transform('sum')\nplatform.drop('Global_Sales', axis=1, inplace=True)\nplatform = platform.drop_duplicates()\nplatform = platform.sort_values('total_sales', ascending=False)\nplatform = platform.head()\n\nfig = px.pie(platform, names='Platform', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","fbe7260a":"publisher = data.loc[data['Name']!='Wii Sports',['Publisher','NA_Sales']]\npublisher['total_sales'] = publisher.groupby('Publisher')['NA_Sales'].transform('sum')\npublisher.drop('NA_Sales', axis=1, inplace=True)\npublisher = publisher.drop_duplicates()\npublisher = publisher.sort_values('total_sales', ascending=False)\npublisher = publisher.head()\n\nfig = px.pie(publisher, names='Publisher', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","a6a820fb":"publisher = data.loc[data['Name']!='Wii Sports',['Publisher','EU_Sales']]\npublisher['total_sales'] = publisher.groupby('Publisher')['EU_Sales'].transform('sum')\npublisher.drop('EU_Sales', axis=1, inplace=True)\npublisher = publisher.drop_duplicates()\npublisher = publisher.sort_values('total_sales', ascending=False)\npublisher = publisher.head()\n\nfig = px.pie(publisher, names='Publisher', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","46513801":"publisher = data.loc[data['Name']!='Wii Sports',['Publisher','JP_Sales']]\npublisher['total_sales'] = publisher.groupby('Publisher')['JP_Sales'].transform('sum')\npublisher.drop('JP_Sales', axis=1, inplace=True)\npublisher = publisher.drop_duplicates()\npublisher = publisher.sort_values('total_sales', ascending=False)\npublisher = publisher.head()\n\nfig = px.pie(publisher, names='Publisher', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","048eda4e":"publisher = data.loc[data['Name']!='Wii Sports',['Publisher','Global_Sales']]\npublisher['total_sales'] = publisher.groupby('Publisher')['Global_Sales'].transform('sum')\npublisher.drop('Global_Sales', axis=1, inplace=True)\npublisher = publisher.drop_duplicates()\npublisher = publisher.sort_values('total_sales', ascending=False)\npublisher = publisher.head()\n\nfig = px.pie(publisher, names='Publisher', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=0.06, textinfo=\"percent+label\")\nfig.show()","2cd01c2b":"EU = df.pivot_table('EU_Sales', columns='Name', index='Year', aggfunc='sum').sum(axis=1)\nNA = df.pivot_table('NA_Sales', columns='Name', index='Year', aggfunc='sum').sum(axis=1)\nJP = df.pivot_table('JP_Sales', columns='Name', index='Year', aggfunc='sum').sum(axis=1)\nOther = df.pivot_table('Other_Sales', columns='Name', index='Year', aggfunc='sum').sum(axis=1)\nyears = Other.index.astype(int)\nregions = ['European Union','Japan','North America','Other']\n\nplt.figure(figsize=(12,8))\nax = sns.pointplot(x=years, y=EU, color='mediumslateblue', scale=0.7)\nax = sns.pointplot(x=years, y=NA, color='cornflowerblue', scale=0.7)\nax = sns.pointplot(x=years, y=JP, color='orchid', scale=0.7)\nax = sns.pointplot(x=years, y=Other, color='thistle', scale=0.7)\nax.set_xticklabels(labels=years, fontsize=12, rotation=50)\nax.set_xlabel(xlabel='Year', fontsize=16)\nax.set_ylabel(ylabel='Revenue in $ Millions', fontsize=16)\nax.set_title(label='Distribution of Total Revenue Per Region by Year in $ Millions', fontsize=20)\nax.legend(handles=ax.lines[::len(years)+1], labels=regions, fontsize=18)\nplt.show();","b0ef2691":"top_publisher = data.groupby(by=['Publisher'])['Year'].count().sort_values(ascending=False).head(20)\ntop_publisher = pd.DataFrame(top_publisher).reset_index()","8993db21":"plt.figure(figsize=(15, 10))\nax=sns.countplot(x=\"Publisher\", data=data, order = data.groupby(by=['Publisher'])['Year'].count().sort_values(ascending=False).iloc[:20].index)\nplt.xticks(rotation=90)\nfor p in ax.patches:\n    ax.annotate(int(p.get_height()), (p.get_x()+0.25, p.get_height()+1), va='bottom',\n                    color= 'black')","096f22b1":"data = df.groupby(['Publisher']).sum()['Global_Sales']\ndata = pd.DataFrame(data.sort_values(ascending=False))[0:20]\npublishers = data.index\ndata.columns = ['Global Sales']\n\ncolors = sns.color_palette(\"cool\", len(data))\nplt.figure(figsize=(12,8))\nax = sns.barplot(y = publishers , x = 'Global Sales', data=data, orient='h', palette=colors)\nax.set_xlabel(xlabel='Revenue in $ Millions', fontsize=16)\nax.set_ylabel(ylabel='Publisher', fontsize=16)\nax.set_title(label='Top 10 Total Publisher Game Revenue', fontsize=20)\nax.set_yticklabels(labels = publishers, fontsize=14)\nplt.show();","eb855976":"x = df.groupby(['Year']).count()\nx = x['Global_Sales']\ny = x.index.astype(int)\n\nplt.figure(figsize=(12,8))\ncolors = sns.color_palette(\"muted\")\nax = sns.barplot(y = y, x = x, orient='h', palette=colors)\nax.set_xlabel(xlabel='Number of releases', fontsize=16)\nax.set_ylabel(ylabel='Year', fontsize=16)\nax.set_title(label='Game Releases Per Year', fontsize=20)\nplt.show();","e38e5220":"y = df.groupby(['Year']).sum()\ny = y['Global_Sales']\nx = y.index.astype(int)\n\nplt.figure(figsize=(12,8))\nax = sns.barplot(y = y, x = x)\nax.set_xlabel(xlabel='$ Millions', fontsize=16)\nax.set_xticklabels(labels = x, fontsize=12, rotation=50)\nax.set_ylabel(ylabel='Year', fontsize=16)\nax.set_title(label='Game Sales in $ Millions Per Year', fontsize=20)\nplt.show();","6f0e756d":"EU = df.pivot_table('EU_Sales', columns='Publisher', aggfunc='sum').T\nEU = EU.sort_values(by='EU_Sales', ascending=False).iloc[0:3]\nEU_publishers = EU.index\n\nJP = df.pivot_table('JP_Sales', columns='Publisher', aggfunc='sum').T\nJP = JP.sort_values(by='JP_Sales', ascending=False).iloc[0:3]\nJP_publishers = JP.index\n\nNA = df.pivot_table('NA_Sales', columns='Publisher', aggfunc='sum').T\nNA = NA.sort_values(by='NA_Sales', ascending=False).iloc[0:3]\nNA_publishers = NA.index\n\nOther = df.pivot_table('Other_Sales', columns='Publisher', aggfunc='sum').T\nOther = Other.sort_values(by='Other_Sales', ascending=False).iloc[0:3]\nOther_publishers = Other.index\n\ncolors =  {'Nintendo':sns.xkcd_rgb[\"teal blue\"], 'Electronic Arts':sns.xkcd_rgb[\"denim blue\"], 'Activision':sns.xkcd_rgb[\"dark lime green\"], 'Namco Bandai Games':sns.xkcd_rgb[\"pumpkin\"], 'Konami Digital Entertainment':sns.xkcd_rgb[\"burnt umber\"], 'Sony Computer Entertainment':sns.xkcd_rgb[\"yellow orange\"]}\nfig = plt.figure(figsize=(12,8))\nax1 = fig.add_subplot(1,4,1)\nax1.set_xticklabels(labels = EU_publishers, rotation=90, size=14)\nsns.barplot(x=EU_publishers, y=EU['EU_Sales'], palette=colors)\nplt.title('European Union', size=18)\nplt.ylabel('Revenue in $ Millions', size=16)\n\nax2 = fig.add_subplot(1,4,2)\nax2.set_xticklabels(labels = JP_publishers, rotation=90, size=14)\nsns.barplot(x=JP_publishers, y=JP['JP_Sales'], palette=colors)\nplt.title('Japan', size=18)\n\nax3 = fig.add_subplot(1,4,3)\nax3.set_xticklabels(labels = NA_publishers, rotation=90, size=14)\nsns.barplot(x=NA_publishers, y=NA['NA_Sales'], palette=colors)\nplt.title('North America', size=18)\n\nax4 = fig.add_subplot(1,4,4)\nax4.set_xticklabels(labels = Other_publishers, rotation=90, size=14)\nsns.barplot(x=Other_publishers, y=Other['Other_Sales'], palette=colors)\nplt.title('Other', size=18)\nplt.suptitle('Top 3 Publishers by Revenue Per Region', size=22)\nplt.show();","668fe440":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='Black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.Publisher))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('cast.png')\nplt.show()","d7674e99":"# **==>Action genre have the highest sale price globally.**\n","41449123":"# !!!!Top 20 Publisher!!!!\n","149e6fa9":"# Most popular platform in North America, Europe, Japan, Globally","54708180":"# Most popular publisher in North America, Europe, Japan, Globally","528d0616":"# EUROPE ==> NINTENDO","eb618363":"# THE END","913b179d":"# GLOBALLY ==> PS2","449e62f2":"# EUROPE ==> PS3","7ef64edd":"* Rank - Ranking of overall sales\n* Name - The games name\n* Platform - Platform of the games release (i.e. PC,PS4, etc.)\n* Year - Year of the game's release\n* Genre - Genre of the games\n* Publisher - Publisher of the game\n* NA_Sales - Sales in North America (in millions)\n* EU_Sales - Sales in Europe (in millions)\n* JP_Sales - Sales in Japan (in millions)\n* Other_Sales - Sales in the rest of the world (in millions)\n* Global_Sales - Total worldwide sales.","13d356f0":"# GLOBALLY ==> NINTENDO","21a79b60":"# GLOBALLY ==> Super Mario Bros.","de9a5216":"# NORTH AMERICA ==> X360","50b85471":"# THE DATA CONTAINS FOLLOWING FEATURES:","e55bd0f8":"# JAPAN ==> NINTENDO","09aedd64":"# **==>Nintendo has highest sales**","75d29698":"# NORTH AMERICA ==> Super Mario Bros.","2751291a":"# ***THINGS YOU HAVE TO FOLLOW WHILE WALKING THROUGH THE WHOLE REPORT***\n\n1. If you are familiar with python then only follow the code. \n2. The simple explanations about any visual or graph will be there.\n3. There will be a brief conclusion of the report.\n4. Every explanation is presented below the line of code's output.\n\n***Enjoy***","9a83b1e9":"# EUROPE ==> Mario Kart wii","f4c2af95":"# ==>PLATFORM GB HAS HIGHEST SALES","5cd42375":"# JAPAN ==> DS","c718e799":"# JAPAN ==> Pokemon Red\/ Pokemon Blue","54621fbc":"# Most popular game in North America, Europe, Japan, Globally","65964643":"# NORTH AMERICA ==> NINTENDO"}}