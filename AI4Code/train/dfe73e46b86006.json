{"cell_type":{"f9ff9dd5":"code","472b4793":"code","50310b63":"code","cee4c1a4":"code","15022326":"code","be29c427":"code","feaef18d":"code","bcef8507":"code","1f530f9d":"code","92a0a01a":"code","a140323e":"code","f418b2e2":"code","56beb813":"markdown"},"source":{"f9ff9dd5":"import numpy as np \nimport pandas as pd \nimport json\nimport seaborn as sns\nimport re","472b4793":"no_of_examples = None #reducing the number for experimentation, using None for final code (applied on papers dict generation only)\n\ntrain_path = '..\/input\/coleridgeinitiative-show-us-the-data\/train.csv'\ntrain = pd.read_csv(train_path)\n\ntrain_folder = '..\/input\/coleridgeinitiative-show-us-the-data\/train'\npapers = {}\nfor paper_id in train[:no_of_examples]['Id'].unique():\n    with open(f'{train_folder}\/{paper_id}.json', 'r') as f:\n        paper = json.load(f)\n        papers[paper_id] = paper","50310b63":"train.describe()","cee4c1a4":"#creating a dataframe with papers info and text divided into sections\n\ndf_list = []\n\nfor paper_id in train[:no_of_examples]['Id'].unique():\n    \n    for count, s in enumerate(papers[paper_id]):\n        extended_train = {}\n        \n        extended_train['Id'] = paper_id\n        extended_train['pub_title'] = train.loc[train.Id == paper_id, 'pub_title']\n        extended_train['dataset_title'] = train.loc[train.Id == paper_id, 'dataset_title']\n        extended_train['dataset_label'] = train.loc[train.Id == paper_id, 'dataset_label']\n        extended_train['cleaned_label'] = train.loc[train.Id == paper_id, 'cleaned_label']\n        \n        extended_train['section_title'] = s['section_title']\n        extended_train['section_number'] = count\n        extended_train['text'] = s['text']\n        \n        df_list.append(pd.DataFrame(extended_train))\n        \ndf_extended = pd.concat(df_list, ignore_index = True)\ndf_extended = df_extended.sort_values(['Id', 'section_number'])","15022326":"df_extended.shape","be29c427":"df_extended","feaef18d":"#adding cleaned_text column\n\ndef clean_text(txt):\n    return re.sub('[^A-Za-z0-9]+', ' ', str(txt).lower())\n\ndf_extended['cleaned_text'] = df_extended['text'].apply(clean_text)","bcef8507":"#adding a column indicating if a cleaned label is in the cleaned text with bool\ndf_extended['label_match'] = df_extended.apply(lambda x:x.cleaned_label in x.cleaned_text, axis =1)","1f530f9d":"df_extended.groupby('dataset_title').dataset_label.unique().apply(len)","92a0a01a":"df_extended.groupby('dataset_title').cleaned_label.unique().apply(len)","a140323e":"df_extended.head()","f418b2e2":"df_extended.to_pickle(\"coleridge_train_extended.pkl\")","56beb813":"## Creating training df for \"Coleridge - Show US the data\" competition"}}