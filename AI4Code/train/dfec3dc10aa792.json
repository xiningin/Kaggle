{"cell_type":{"3fca00a4":"code","ec7d54f4":"code","573f0bdd":"code","120c215a":"code","84cf2179":"code","22896a0e":"code","cf80c0aa":"code","2d9337fe":"code","1cf48d95":"code","ddcf6228":"code","5419e2d8":"code","c4cbd28f":"code","c54d8e81":"code","c0934cf7":"code","4e430ead":"code","12eccc9d":"code","67a8ca2f":"code","e226bae8":"code","5f8fd131":"code","6cefe2d2":"code","b7f12c83":"code","047fab92":"markdown","98cb3701":"markdown","09e0a0b2":"markdown","f19814d3":"markdown","9abf460f":"markdown","9c2993cc":"markdown","2eea0f0b":"markdown"},"source":{"3fca00a4":"import pandas as pd\nfrom json import load\nimport urllib.request, json \nfrom pandas.io.json import json_normalize\nimport seaborn as sns\nimport pylab as plt\nimport multiprocessing as mp\nimport numpy as np\nfrom sklearn.manifold import TSNE\nfrom pathlib import Path\n%matplotlib inline\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('max_colwidth',500)\nfrom IPython.core.display import display, HTML\ndisplay(HTML(\"<style>.container { width:100% !important; }<\/style>\"))\nfrom urllib.error import HTTPError\nfrom time import sleep\nfrom joblib import Parallel, delayed","ec7d54f4":"def run_tsne(pp, Xnn):\n    res = TSNE(n_iter=5000, perplexity=pp).fit_transform(Xnn)\n    return res","573f0bdd":"df_t1w_unique = pd.read_csv('..\/input\/mriqc-data-cleaning\/t1w.csv', low_memory=False)","120c215a":"more_metacols = ['dataset',\n 'hash_HPC',\n 'path_HPC',\n 'dataset_dl',\n 'subdataset_dl',\n 'subdataset',\n 'dataset_lr',\n 'hashing_algo']","84cf2179":"# Split up collumns\nmetric_columns = ['cjv',\n                  'cnr',\n                  'efc',\n                  'fber',\n                  'fwhm_avg',\n                  'fwhm_x',\n                  'fwhm_y',\n                  'fwhm_z',\n                  'icvs_csf',\n                  'icvs_gm',\n                  'icvs_wm',\n                  'inu_med',\n                  'inu_range',\n                  'qi_1',\n                  'qi_2',\n                  'rpve_csf',\n                  'rpve_gm',\n                  'rpve_wm',\n                  'size_x',\n                  'size_y',\n                  'size_z',\n                  'snr_csf',\n                  'snr_gm',\n                  'snr_total',\n                  'snr_wm',\n                  'snrd_csf',\n                  'snrd_gm',\n                  'snrd_total',\n                  'snrd_wm',\n                  'spacing_x',\n                  'spacing_y',\n                  'spacing_z',\n                  'summary_bg_k',\n                  'summary_bg_mad',\n                  'summary_bg_mean',\n                  'summary_bg_median',\n                  'summary_bg_n',\n                  'summary_bg_p05',\n                  'summary_bg_p95',\n                  'summary_bg_stdv',\n                  'summary_csf_k',\n                  'summary_csf_mad',\n                  'summary_csf_mean',\n                  'summary_csf_median',\n                  'summary_csf_n',\n                  'summary_csf_p05',\n                  'summary_csf_p95',\n                  'summary_csf_stdv',\n                  'summary_gm_k',\n                  'summary_gm_mad',\n                  'summary_gm_mean',\n                  'summary_gm_median',\n                  'summary_gm_n',\n                  'summary_gm_p05',\n                  'summary_gm_p95',\n                  'summary_gm_stdv',\n                  'summary_wm_k',\n                  'summary_wm_mad',\n                  'summary_wm_mean',\n                  'summary_wm_median',\n                  'summary_wm_n',\n                  'summary_wm_p05',\n                  'summary_wm_p95',\n                  'summary_wm_stdv',\n                  'tpm_overlap_csf',\n                  'tpm_overlap_gm',\n                  'tpm_overlap_wm',\n                  'wm2max']\nmeta_columns = ['_created',\n               '_etag',\n               '_id',\n               '_updated',\n               'bids_meta.modality',\n               'bids_meta.subject_id',\n               'provenance.md5sum',\n               'provenance.settings.testing',\n               'provenance.software',\n               'provenance.version',\n               'bids_meta.EchoTime',\n               'bids_meta.FlipAngle',\n               'bids_meta.MagneticFieldStrength',\n               'bids_meta.Manufacturer',\n               'bids_meta.ManufacturersModelName',\n               'bids_meta.PhaseEncodingDirection',\n               'bids_meta.RepetitionTime',\n               'bids_meta.run_id',\n               'bids_meta.session_id',\n               'bids_meta.PulseSequenceType',\n               'bids_meta.acq_id',\n               'bids_meta.InversionTime',\n               'bids_meta.AccelNumReferenceLines',\n               'bids_meta.AccelerationFactorPE',\n               'bids_meta.AcquisitionMatrix',\n               'bids_meta.DeviceSerialNumber',\n               'bids_meta.EchoTrainLength',\n               'bids_meta.ImageType',\n               'bids_meta.ImagingFrequency',\n               'bids_meta.InPlanePhaseEncodingDirection',\n               'bids_meta.MRAcquisitionType',\n               'bids_meta.NumberOfAverages',\n               'bids_meta.NumberOfPhaseEncodingSteps',\n               'bids_meta.PatientPosition',\n               'bids_meta.PercentPhaseFieldOfView',\n               'bids_meta.PercentSampling',\n               'bids_meta.PixelBandwidth',\n               'bids_meta.ProtocolName',\n               'bids_meta.ReceiveCoilName',\n               'bids_meta.ScanOptions',\n               'bids_meta.ScanningSequence',\n               'bids_meta.SequenceName',\n               'bids_meta.SequenceVariant',\n               'bids_meta.SoftwareVersions',\n               'bids_meta.TotalScanTimeSec',\n               'bids_meta.TransmitCoilName',\n               'bids_meta.VariableFlipAngleFlag',\n               'provenance.email',\n               'bids_meta.EffectiveEchoSpacing',\n               'bids_meta.SliceEncodingDirection',\n               'bids_meta.TotalReadoutTime',\n               'bids_meta.ConversionSoftware',\n               'bids_meta.ConversionSoftwareVersion',\n               'bids_meta.InstitutionName',\n               'bids_meta.InstitutionAddress',\n               'bids_meta.PartialFourier',\n               'bids_meta.PulseSequenceDetails',\n               'bids_meta.ParallelReductionFactorInPlane',\n               'bids_meta.TaskName',\n               'bids_meta.ParallelAcquisitionTechnique',\n               'provenance.warnings.large_rot_frame',\n               'provenance.warnings.small_air_mask',\n               'provenance.webapi_port',\n               'provenance.webapi_url',\n               'dataset_lr',\n               'bids_meta.AcquisitionMatrixPE',\n               'bids_meta.AcquisitionNumber',\n               'bids_meta.AcquisitionTime',\n               'bids_meta.ImageOrientationPatientDICOM',\n               'bids_meta.InPlanePhaseEncodingDirectionDICOM',\n               'bids_meta.Modality',\n               'bids_meta.PercentPhaseFOV',\n               'bids_meta.ProcedureStepDescription',\n               'bids_meta.ReconMatrixPE',\n               'bids_meta.SAR',\n               'bids_meta.SeriesDescription',\n               'bids_meta.SeriesNumber',\n               'bids_meta.SliceThickness',\n               'bids_meta.SpacingBetweenSlices',\n               'bids_meta.StationName',\n               'bids_meta.dcmmeta_affine',\n               'bids_meta.dcmmeta_reorient_transform',\n               'bids_meta.dcmmeta_shape',\n               'bids_meta.dcmmeta_slice_dim',\n               'bids_meta.dcmmeta_version',\n               'bids_meta.global.const.AcquisitionMatrix',\n               'bids_meta.global.const.AcquisitionNumber',\n               'bids_meta.global.const.AcquisitionTime',\n               'bids_meta.global.const.AngioFlag',\n               'bids_meta.global.const.BitsAllocated',\n               'bids_meta.global.const.BitsStored',\n               'bids_meta.global.const.CardiacNumberOfImages',\n               'bids_meta.global.const.Columns',\n               'bids_meta.global.const.EchoNumbers',\n               'bids_meta.global.const.EchoTime',\n               'bids_meta.global.const.EchoTrainLength',\n               'bids_meta.global.const.FlipAngle',\n               'bids_meta.global.const.GroupLength_0X10_0X0',\n               'bids_meta.global.const.GroupLength_0X18_0X0',\n               'bids_meta.global.const.GroupLength_0X28_0X0',\n               'bids_meta.global.const.GroupLength_0X40_0X0',\n               'bids_meta.global.const.GroupLength_0X7FE0_0X0',\n               'bids_meta.global.const.GroupLength_0X8_0X0',\n               'bids_meta.global.const.HeartRate',\n               'bids_meta.global.const.HighBit',\n               'bids_meta.global.const.ImageOrientationPatient',\n               'bids_meta.global.const.ImageType',\n               'bids_meta.global.const.ImagedNucleus',\n               'bids_meta.global.const.ImagesInAcquisition',\n               'bids_meta.global.const.ImagingFrequency',\n               'bids_meta.global.const.InPlanePhaseEncodingDirection',\n               'bids_meta.global.const.InversionTime',\n               'bids_meta.global.const.MRAcquisitionType',\n               'bids_meta.global.const.MagneticFieldStrength',\n               'bids_meta.global.const.Manufacturer',\n               'bids_meta.global.const.ManufacturerModelName',\n               'bids_meta.global.const.Modality',\n               'bids_meta.global.const.NumberOfAverages',\n               'bids_meta.global.const.PercentPhaseFieldOfView',\n               'bids_meta.global.const.PercentSampling',\n               'bids_meta.global.const.PhotometricInterpretation',\n               'bids_meta.global.const.PixelBandwidth',\n               'bids_meta.global.const.PixelRepresentation',\n               'bids_meta.global.const.PixelSpacing',\n               'bids_meta.global.const.PositionReferenceIndicator',\n               'bids_meta.global.const.ProtocolName',\n               'bids_meta.global.const.ReceiveCoilName',\n               'bids_meta.global.const.ReconstructionDiameter',\n               'bids_meta.global.const.ReferencedPerformedProcedureStepSequence',\n               'bids_meta.global.const.ReferencedStudySequence',\n               'bids_meta.global.const.RepetitionTime',\n               'bids_meta.global.const.Rows',\n               'bids_meta.global.const.SAR',\n               'bids_meta.global.const.SamplesPerPixel',\n               'bids_meta.global.const.ScanOptions',\n               'bids_meta.global.const.ScanningSequence',\n               'bids_meta.global.const.SequenceVariant',\n               'bids_meta.global.const.SeriesDescription',\n               'bids_meta.global.const.SeriesNumber',\n               'bids_meta.global.const.SliceThickness',\n               'bids_meta.global.const.SmallestImagePixelValue',\n               'bids_meta.global.const.SoftwareVersions',\n               'bids_meta.global.const.SpacingBetweenSlices',\n               'bids_meta.global.const.SpecificCharacterSet',\n               'bids_meta.global.const.StackID',\n               'bids_meta.global.const.TriggerWindow',\n               'bids_meta.global.const.VariableFlipAngleFlag',\n               'bids_meta.global.slices.GroupLength_0X20_0X0',\n               'bids_meta.global.slices.ImagePositionPatient',\n               'bids_meta.global.slices.InStackPositionNumber',\n               'bids_meta.global.slices.InstanceNumber',\n               'bids_meta.global.slices.LargestImagePixelValue',\n               'bids_meta.global.slices.SliceLocation',\n               'bids_meta.global.slices.WindowCenter',\n               'bids_meta.global.slices.WindowWidth',\n               'bids_meta.global.slices.AcquisitionTime',\n               'bids_meta.global.slices.ContentTime',\n               'bids_meta.global.slices.GroupLength_0X28_0X0',\n               'bids_meta.global.slices.GroupLength_0X8_0X0',\n               'bids_meta.global.slices.SmallestImagePixelValue',\n               'null_count',\n               'action',\n               'dsid',\n               'metadata',\n               'metadata__@context__@vocab',\n               'metadata__annex__MRI',\n               'metadata__annex__age',\n               'metadata__annex__dcterms_format',\n               'metadata__annex__diagnosis',\n               'metadata__annex__distribution-restrictions',\n               'metadata__annex__education',\n               'metadata__annex__ethnicity',\n               'metadata__annex__full_iq',\n               'metadata__annex__handedness',\n               'metadata__annex__key',\n               'metadata__annex__marital_status',\n               'metadata__annex__occupation',\n               'metadata__annex__participant_id',\n               'metadata__annex__performance_iq',\n               'metadata__annex__project',\n               'metadata__annex__session_count',\n               'metadata__annex__session_id',\n               'metadata__annex__sex',\n               'metadata__annex__site_id',\n               'metadata__annex__species',\n               'metadata__annex__tag',\n               'metadata__annex__verbal_iq',\n               'metadata__bids__@context',\n               'metadata__bids__AccelFactPE',\n               'metadata__bids__AccelNumReferenceLines',\n               'metadata__bids__AccelerationFactorPE',\n               'metadata__bids__AcquisitionDateTime',\n               'metadata__bids__AcquisitionDuration',\n               'metadata__bids__AcquisitionMatrix',\n               'metadata__bids__AcquisitionMatrixPE',\n               'metadata__bids__AcquisitionMatrixText',\n               'metadata__bids__AcquisitionNumber',\n               'metadata__bids__AcquisitionTime',\n               'metadata__bids__AcquisitionType',\n               'metadata__bids__AngioFlag',\n               'metadata__bids__BIDSVersion',\n               'metadata__bids__BackgroundSuppression',\n               'metadata__bids__BandwidthPerPixelPhaseEncode',\n               'metadata__bids__BaseResolution',\n               'metadata__bids__BodyPartExamined',\n               'metadata__bids__Bolus',\n               'metadata__bids__CalibrationImage',\n               'metadata__bids__CalibrationImageTR',\n               'metadata__bids__CardiacTriggerDelayTimes',\n               'metadata__bids__CogAtlasID',\n               'metadata__bids__CogPOID',\n               'metadata__bids__CoilCombinationMethod',\n               'metadata__bids__Columns',\n               'metadata__bids__ConsistencyInfo',\n               'metadata__bids__ConversionSoftware',\n               'metadata__bids__ConversionSoftwareVersion',\n               'metadata__bids__DerivedVendorReportedEchoSpacing',\n               'metadata__bids__DeviceSerialNumber',\n               'metadata__bids__DwellTime',\n               'metadata__bids__ECHO',\n               'metadata__bids__EPIFactor',\n               'metadata__bids__EPI_Factor',\n               'metadata__bids__EchoNumber',\n               'metadata__bids__EchoTime',\n               'metadata__bids__EchoTime1',\n               'metadata__bids__EchoTime2',\n               'metadata__bids__EchoTimes',\n               'metadata__bids__EchoTrainLength',\n               'metadata__bids__EffectiveEchoSpacing',\n               'metadata__bids__ExcitationFlipAngle',\n               'metadata__bids__FLipAngle',\n               'metadata__bids__FieldOfView',\n               'metadata__bids__FieldStrength',\n               'metadata__bids__FlipAngle',\n               'metadata__bids__GEImageTypeRIMPCode',\n               'metadata__bids__HardcopyDeviceSoftwareVersion',\n               'metadata__bids__ImageComments',\n               'metadata__bids__ImageOrientationPatientDICOM',\n               'metadata__bids__ImageSliceThickness',\n               'metadata__bids__ImageType',\n               'metadata__bids__ImagedNucleus',\n               'metadata__bids__ImagingFrequency',\n               'metadata__bids__InPlanePhaseEncodingDirection',\n               'metadata__bids__InPlanePhaseEncodingDirectionDICOM',\n               'metadata__bids__InflowTimes',\n               'metadata__bids__InplanePhaseEncodingDirection',\n               'metadata__bids__InstitutionAddress',\n               'metadata__bids__InstitutionName',\n               'metadata__bids__InstitutionalDepartmentName',\n               'metadata__bids__Instructions',\n               'metadata__bids__IntendedFor',\n               'metadata__bids__InversionTime',\n               'metadata__bids__KSpaceBlipDir',\n               'metadata__bids__Labeling',\n               'metadata__bids__License',\n               'metadata__bids__LookLocker',\n               'metadata__bids__MRAcquisition Type ',\n               'metadata__bids__MRAcquisitionType',\n               'metadata__bids__MagneticFieldStrength',\n               'metadata__bids__Manufacturer',\n               'metadata__bids__ManufacturerModelName',\n               'metadata__bids__ManufacturersModelName',\n               'metadata__bids__MatrixCoilMode',\n               'metadata__bids__Modality',\n               'metadata__bids__MultibandAccelerationFactor',\n               'metadata__bids__MultibandAccellerationFactor',\n               'metadata__bids__Name',\n               'metadata__bids__NumberOfAverages',\n               'metadata__bids__NumberOfEPIShots',\n               'metadata__bids__NumberOfEchoes',\n               'metadata__bids__NumberOfPhaseEncodingSteps',\n               'metadata__bids__NumberOfSlices',\n               'metadata__bids__NumberOfVolumesDiscardedByScanner',\n               'metadata__bids__NumberOfVolumesDiscardedByUser',\n               'metadata__bids__NumberShots',\n               'metadata__bids__NumberofAverages',\n               'metadata__bids__NumberofPhaseEncodingSteps',\n               'metadata__bids__NumberofSlices',\n               'metadata__bids__OrientationAngle',\n               'metadata__bids__OriginalFunctionalRunIndex',\n               'metadata__bids__PATModeText',\n               'metadata__bids__ParallelAcquisitionTechnique',\n               'metadata__bids__ParallelImagingReductionFactor',\n               'metadata__bids__ParallelImagingReductionFactors',\n               'metadata__bids__ParallelReductionFactorInPlane',\n               'metadata__bids__ParellelReductionType',\n               'metadata__bids__PartialFourier',\n               'metadata__bids__PatientName',\n               'metadata__bids__PatientPosition',\n               'metadata__bids__PercentPhaseFOV',\n               'metadata__bids__PercentPhaseFieldOfView',\n               'metadata__bids__PercentPhaseFieldofView',\n               'metadata__bids__PercentSampling',\n               'metadata__bids__PhaseEncodingAxis',\n               'metadata__bids__PhaseEncodingDirection',\n               'metadata__bids__PhaseEncodingLines',\n               'metadata__bids__PhaseEncodingSteps',\n               'metadata__bids__PhaseOversampling',\n               'metadata__bids__PhaseResolution',\n               'metadata__bids__PhotometInterpret',\n               'metadata__bids__PixelBandwidth',\n               'metadata__bids__PixelSpacing',\n               'metadata__bids__PreparationDirection',\n               'metadata__bids__ProcedureStepDescription',\n               'metadata__bids__ProtocolName',\n               'metadata__bids__PulseSequenceDetails',\n               'metadata__bids__PulseSequenceType',\n               'metadata__bids__RealDwellTime',\n               'metadata__bids__ReceiveCoilActiveElements',\n               'metadata__bids__ReceiveCoilName',\n               'metadata__bids__ReconMatrixPE',\n               'metadata__bids__RefocusingFlipAngle',\n               'metadata__bids__RepetitionTime',\n               'metadata__bids__Rows',\n               'metadata__bids__SAR',\n               'metadata__bids__SATFatWaterBone',\n               'metadata__bids__ScanDuration',\n               'metadata__bids__ScanMode',\n               'metadata__bids__ScanOptions',\n               'metadata__bids__ScannerSoftwareVersionsPd',\n               'metadata__bids__ScanningSequence',\n               'metadata__bids__SequenceName',\n               'metadata__bids__SequenceType',\n               'metadata__bids__SequenceVariant',\n               'metadata__bids__SeriesDate',\n               'metadata__bids__SeriesDescription',\n               'metadata__bids__SeriesNumber',\n               'metadata__bids__SeriesTime',\n               'metadata__bids__ShimSetting',\n               'metadata__bids__SliceAcquisitionDirection',\n               'metadata__bids__SliceEncodingDirection',\n               'metadata__bids__SliceGap',\n               'metadata__bids__SliceThickness',\n               'metadata__bids__SliceTimeComputationMethod',\n               'metadata__bids__SliceTiming',\n               'metadata__bids__SliceTimingCalculationMethod',\n               'metadata__bids__SliceTimingComputationMethod',\n               'metadata__bids__SoftwareVersion',\n               'metadata__bids__SoftwareVersions',\n               'metadata__bids__SpacingBetweenSlices',\n               'metadata__bids__StationName',\n               'metadata__bids__StudyID',\n               'metadata__bids__StudyTime',\n               'metadata__bids__SubtractionType',\n               'metadata__bids__TagControlOrdering',\n               'metadata__bids__TaskDescription',\n               'metadata__bids__TaskFullName',\n               'metadata__bids__TaskInstructions',\n               'metadata__bids__TaskName',\n               'metadata__bids__TotalEpiReadoutTime',\n               'metadata__bids__TotalReadoutTime',\n               'metadata__bids__TotalScanTimeSec',\n               'metadata__bids__TransmitCoilName',\n               'metadata__bids__TransmittingCoil',\n               'metadata__bids__TrueEchoSpacing',\n               'metadata__bids__TxRefAmp',\n               'metadata__bids__Units',\n               'metadata__bids__VariableFlipAngle',\n               'metadata__bids__VariableFlipAngleFlag',\n               'metadata__bids__VascularSuppression',\n               'metadata__bids__VendorReportedEchoSpacing',\n               'metadata__bids__acq',\n               'metadata__bids__acquisition',\n               'metadata__bids__broken_volumes',\n               'metadata__bids__class',\n               'metadata__bids__dcmmeta_affine',\n               'metadata__bids__dcmmeta_reorient_transform',\n               'metadata__bids__dcmmeta_shape',\n               'metadata__bids__dcmmeta_slice_dim',\n               'metadata__bids__dcmmeta_version',\n               'metadata__bids__dir',\n               'metadata__bids__dummyScans',\n               'metadata__bids__echo',\n               'metadata__bids__fmap',\n               'metadata__bids__missing_volumes',\n               'metadata__bids__mod',\n               'metadata__bids__modality',\n               'metadata__bids__reconstruction',\n               'metadata__bids__run',\n               'metadata__bids__session',\n               'metadata__bids__space',\n               'metadata__bids__subject',\n               'metadata__bids__task',\n               'metadata__bids__type',\n               'metadata__datalad_core__url',\n               'metadata__nifti1__@context',\n               'metadata__nifti1__aux_file',\n               'metadata__nifti1__cal_max',\n               'metadata__nifti1__cal_min',\n               'metadata__nifti1__datatype',\n               'metadata__nifti1__description',\n               'metadata__nifti1__dim',\n               'metadata__nifti1__freq_axis',\n               'metadata__nifti1__intent',\n               'metadata__nifti1__intent_name',\n               'metadata__nifti1__magic',\n               'metadata__nifti1__phase_axis',\n               'metadata__nifti1__pixdim',\n               'metadata__nifti1__qform_code',\n               'metadata__nifti1__sform_code',\n               'metadata__nifti1__sizeof_hdr',\n               'metadata__nifti1__slice_axis',\n               'metadata__nifti1__slice_duration',\n               'metadata__nifti1__slice_end',\n               'metadata__nifti1__slice_order',\n               'metadata__nifti1__slice_start',\n               'metadata__nifti1__spatial_resolution(mm)',\n               'metadata__nifti1__t_unit',\n               'metadata__nifti1__temporal_spacing(s)',\n               'metadata__nifti1__toffset',\n               'metadata__nifti1__vox_offset',\n               'metadata__nifti1__xyz_unit',\n               'parentds',\n               'path',\n               'query_matched',\n               'refcommit',\n               'status',\n               'type',\n               'hash',\n               '_merge',\n               'dataset',\n               'hash_HPC',\n               'path_HPC',\n               '_dsst',\n               'dataset_dl',\n               'subdataset_dl',\n               'subdataset']","22896a0e":"X = df_t1w_unique.loc[:,metric_columns]\n# Drop rows with null data\nnotnull_mask = (X.notnull().sum(1).astype(bool) \n               & np.logical_not(np.logical_not(np.isfinite(X)).sum(1).astype(bool))\n               & ((X <= np.finfo(np.float32).max) & (X >= np.finfo(np.float32).min)).all(1))\n\nXnn = X.loc[notnull_mask,:]","cf80c0aa":"df_bold_unique = pd.read_csv('..\/input\/mriqc-data-cleaning\/bold.csv', low_memory=False)\n\n# Split up collumns\nbold_metric_columns = ['aqi',\n                       'dummy_trs',\n                       'dvars_nstd',\n                       'dvars_std',\n                       'dvars_vstd',\n                       'efc',\n                       'fber',\n                       'fd_mean',\n                       'fd_num',\n                       'fd_perc',\n                       'fwhm_avg',\n                       'fwhm_x',\n                       'fwhm_y',\n                       'fwhm_z',\n                       'gcor',\n                       'gsr_x',\n                       'gsr_y',\n                       'size_t',\n                       'size_x',\n                       'size_y',\n                       'size_z',\n                       'snr',\n                       'spacing_tr',\n                       'spacing_x',\n                       'spacing_y',\n                       'spacing_z',\n                       'summary_bg_k',\n                       'summary_bg_mad',\n                       'summary_bg_mean',\n                       'summary_bg_median',\n                       'summary_bg_n',\n                       'summary_bg_p05',\n                       'summary_bg_p95',\n                       'summary_bg_stdv',\n                       'summary_fg_k',\n                       'summary_fg_mad',\n                       'summary_fg_mean',\n                       'summary_fg_median',\n                       'summary_fg_n',\n                       'summary_fg_p05',\n                       'summary_fg_p95',\n                       'summary_fg_stdv',\n                       'tsnr']\nbold_meta_columns =[l for l in df_bold_unique.columns \n                    if l not in metric_columns]","2d9337fe":"bold_X = df_bold_unique.loc[:, bold_metric_columns]\n# Drop rows with null data\nbold_notnull_mask = np.logical_and(bold_X.notnull().sum(1).astype(bool), np.logical_not(np.logical_not(np.isfinite(bold_X)).sum(1).astype(bool)))\nbold_Xnn = bold_X.loc[bold_notnull_mask,:]","1cf48d95":"perplexities=[30, 250]\n\n# We're running TSNE on BOLD and T1 at the same time\n# On kaggle we'll use njobs=4\ntsne_res = Parallel(n_jobs=4)(\n               delayed(run_tsne)(pp=pp, Xnn=thisXnn) \n               for thisXnn in [Xnn, bold_Xnn] for pp in perplexities)\n","ddcf6228":"res = tsne_res[:len(perplexities)]\nt1_res_df = df_t1w_unique.loc[notnull_mask,meta_columns]\n# Rename the \"CMI\" dataset to the more informative, HBN (For healthy brain network)\nt1_res_df.loc[t1_res_df.dataset=='cmi', 'dataset'] = 'hbn'\n\nfor pp, rr in zip(perplexities, res):\n    t1_res_df['x_%05d'%pp] = rr[:,0]\n    t1_res_df['y_%05d'%pp] = rr[:,1]\n     ","5419e2d8":"bold_res = tsne_res[len(perplexities):]\nbold_res_df = df_bold_unique.loc[bold_notnull_mask,bold_meta_columns]\n# Rename the \"CMI\" dataset to the more informative, HBN (For healthy brain network)\nbold_res_df.loc[bold_res_df.dataset=='cmi', 'dataset'] = 'hbn'\n\nfor pp, rr in zip(perplexities, bold_res):\n    bold_res_df['x_%05d'%pp] = rr[:,0]\n    bold_res_df['y_%05d'%pp] = rr[:,1]\n","c4cbd28f":"# melt tsne results\nmelted = []\nfor pp in perplexities:\n    tmp_df = t1_res_df.loc[:, meta_columns + ['x_%05d'%pp, 'y_%05d'%pp]].copy()\n    tmp_df['perplexity'] = pp\n    tmp_df.rename({'x_%05d'%pp:'x', 'y_%05d'%pp:'y'}, axis=1, inplace=True)\n    melted.append(tmp_df)\nt1_res_df = pd.concat(melted).reset_index(drop=True)","c54d8e81":"# melt tsne results\nmelted = []\nfor pp in perplexities:\n    tmp_df = bold_res_df.loc[:, bold_meta_columns + ['x_%05d'%pp, 'y_%05d'%pp]].copy()\n    tmp_df['perplexity'] = pp\n    tmp_df.rename({'x_%05d'%pp:'x', 'y_%05d'%pp:'y'}, axis=1, inplace=True)\n    melted.append(tmp_df)\nbold_res_df = pd.concat(melted).reset_index(drop=True)","c0934cf7":"sns.set_context('paper', font_scale = 0.5)\ndef sne_plot(var, plist, res_df, **kwargs):\n    splot = sns.lmplot('x','y', res_df.query('perplexity in @plist').sample(frac=1), \n               fit_reg=False, n_boot=0, ci=None,\n               hue=var,\n               col='perplexity', \n               scatter_kws = {\"alpha\":0.1 , 's':1},\n               height=4, aspect=1.1,\n               sharey=False, sharex=False,\n               **kwargs\n              )\n    for ax in splot.axes.flat:\n        ax.set_axis_off()\n    for lh in splot._legend.legendHandles:\n        try:\n            lh.set_sizes([36.])\n        except AttributeError:\n            pass\n        lh.set_alpha(1)\n\n    splot.fig.set_dpi(300)\n    splot.fig.suptitle(var, y=1.05)\n    return splot\n","4e430ead":"t1splot = sne_plot('bids_meta.Manufacturer',perplexities , t1_res_df, col_wrap=3)","12eccc9d":"sne_plot('bids_meta.Manufacturer',perplexities, bold_res_df,\n         col_wrap=3,\n        palette=t1splot._colors,\n        hue_order=t1splot.hue_names,\n        )","67a8ca2f":"sne_plot('bids_meta.MultibandAccelerationFactor',perplexities, bold_res_df)","e226bae8":"bold_res_df['RepetitionTime_binned'] = pd.cut(bold_res_df['bids_meta.RepetitionTime'], np.arange(0,9))\nsne_plot('RepetitionTime_binned',[30, 5000], bold_res_df)","5f8fd131":"fig,axs = plt.subplots(2, 2, figsize=(5,5), dpi=200)\nrowax = axs[0]\ncp = sns.color_palette()\nfor axpp, ax in zip([30,250], rowax):\n    for ii, mfg in enumerate(t1_res_df.loc[t1_res_df['bids_meta.Manufacturer'].notnull(), 'bids_meta.Manufacturer'].unique()):\n        axind = (t1_res_df['bids_meta.Manufacturer'] == mfg) & (t1_res_df['perplexity'] == axpp)\n        ax.scatter(t1_res_df.loc[axind, 'x'], t1_res_df.loc[axind,'y'], marker='o', label=mfg, color=cp[ii], s=1, alpha=0.3)\n        ax.set_axis_off()\n        ax.set_title('T1w\\nPerplexity: %d'%axpp)\n\nrowax=axs[1]\nfor axpp, ax in zip([30,250], rowax):\n    for ii, mfg in enumerate(bold_res_df.loc[bold_res_df['bids_meta.Manufacturer'].notnull(), 'bids_meta.Manufacturer'].unique()):\n        axind = (bold_res_df['bids_meta.Manufacturer'] == mfg) & (bold_res_df['perplexity'] == axpp)\n        ax.scatter(bold_res_df.loc[axind, 'x'], bold_res_df.loc[axind,'y'], marker='o', label=mfg, color=cp[ii], s=1, alpha=0.3)\n        ax.set_axis_off()\n        ax.set_title('BOLD\\nPerplexity: %d'%axpp)\nleg =  axs[0][0].get_legend_handles_labels()\n\nfl = fig.legend(*leg, loc='lower center', bbox_to_anchor=(0.53,0.02), ncol=3)\nfor lh in fl.legendHandles:\n    try:\n        lh.set_sizes([12.])\n    except AttributeError:\n        pass\n    lh.set_alpha(1)\nfig.tight_layout(pad=0)\nfig.get_size_inches()\n#fig.savefig('tsne__.png', bbox_inches=\"tight\", dpi=300)","6cefe2d2":"voe = 'bids_meta.MagneticFieldStrength'\nfig,axs = plt.subplots(2, 2, figsize=(5,5), dpi=200)\nrowax = axs[0]\ncp = sns.color_palette()\nfor axpp, ax in zip([30,250], rowax):\n    for ii, mfg in enumerate(t1_res_df.loc[t1_res_df[voe].notnull(), voe].unique()):\n        axind = (t1_res_df[voe] == mfg) & (t1_res_df['perplexity'] == axpp)\n        ax.scatter(t1_res_df.loc[axind, 'x'],t1_res_df.loc[axind,'y'], marker='o', label=mfg, color=cp[ii], s=1, alpha=0.3)\n        ax.set_axis_off()\n        ax.set_title('T1w\\nPerplexity: %d'%axpp)\n\nrowax=axs[1]\nfor axpp, ax in zip([30,250], rowax):\n    for ii, mfg in enumerate(bold_res_df.loc[bold_res_df[voe].notnull(), voe].unique()):\n        axind = (bold_res_df[voe] == mfg) & (bold_res_df['perplexity'] == axpp)\n        ax.scatter(bold_res_df.loc[axind, 'x'], bold_res_df.loc[axind,'y'], marker='o', label=mfg, color=cp[ii], s=1, alpha=0.3)\n        ax.set_axis_off()\n        ax.set_title('BOLD\\nPerplexity: %d'%axpp)\nleg =  axs[0][0].get_legend_handles_labels()\n\nfl = fig.legend(*leg, loc='lower center', bbox_to_anchor=(0.53,0.02), ncol=3)\nfor lh in fl.legendHandles:\n    try:\n        lh.set_sizes([12.])\n    except AttributeError:\n        pass\n    lh.set_alpha(1)\nfig.tight_layout(pad=0)\nfig.get_size_inches()\n#fig.savefig('tsne_fig1.png', bbox_inches=\"tight\", dpi=300)","b7f12c83":"t1_dataset_order = [ 'hcp', 'sald', 'openneuro', 'openfmri',\n                 'nndsp', 'hbn', 'abide', 'abide2', 'corr', 'fcon1000',]\nbold_dataset_order = ['fcon1000',  'openneuro','openfmri',  'abide', 'abide2', 'hbn', 'nndsp']\ncp = sns.color_palette()\ncdict = {ds:color for ds, color in (zip(t1_dataset_order,cp))}\n\n\nvoe = 'dataset'\nfig,axs = plt.subplots(2, 2, figsize=(5,5), dpi=200)\nrowax = axs[0]\n\nfor axpp, ax in zip([30,250], rowax):\n    for ii, mfg in enumerate(t1_dataset_order):\n        if mfg not in ['openfmri', 'openneuro']:\n            label=mfg.upper()\n        elif mfg == 'openfmri':\n            label='OpenFMRI'\n        elif mfg == 'openneuro':\n            label='OpenNeuro'\n        axind = (t1_res_df[voe] == mfg) & (t1_res_df['perplexity'] == axpp)\n        ax.scatter(t1_res_df.loc[axind, 'x'], t1_res_df.loc[axind,'y'], marker='o', label=label, color=cdict[mfg], s=1, alpha=0.3)\n        #print(ii)\n        ax.set_axis_off()\n        ax.set_title('T1w\\nPerplexity: %d'%axpp)\n\nrowax=axs[1]\nfor axpp, ax in zip([30,250], rowax):\n    for ii, mfg in enumerate(bold_dataset_order):\n        axind = (bold_res_df[voe] == mfg) & (bold_res_df['perplexity'] == axpp)\n        ax.scatter(bold_res_df.loc[axind, 'x'], bold_res_df.loc[axind,'y'], marker='o', label=mfg, color=cdict[mfg], s=1, alpha=0.3)\n        #print(ii)\n        ax.set_axis_off()\n        ax.set_title('BOLD\\nPerplexity: %d'%axpp)\nleg =  axs[0][0].get_legend_handles_labels()\n\nfl = fig.legend(*leg, loc='upper center', bbox_to_anchor=(0.55,0.1), ncol=5)\nfor lh in fl.legendHandles:\n    try:\n        lh.set_sizes([12.])\n    except AttributeError:\n        pass\n    lh.set_alpha(1)\nfig.tight_layout(pad = 0)\nfig.get_size_inches()\n#fig.savefig('tsne_fig2.png', bbox_inches=\"tight\", dpi=300)","047fab92":"The TSNE projections can be time consuming to calculate, and since we'd like to explore multiple perplexities, we'd use ipyparallel to speed things up if weren't running on Kaggle, but for this notebook we'll just limit ourselves to lower perplexities. You can find code for running on lots of perplexities on my github page: https:\/\/github.com\/Shotgunosine\/mriqc_tsne and all of the data is also available at OSF here: https:\/\/osf.io\/haf97\/.","98cb3701":"### Make TSNE Plots\nbold_merge_datalad_with_tsnes.csv is available to download from the OHBM2019-TSNE-Analysis directory here: https:\/\/osf.io\/haf97\/","09e0a0b2":"## Run TSNEs for BOLD and T1","f19814d3":"## Prepare BOLD data for TSNE","9abf460f":"## Prepare T1w Data for TSNE","9c2993cc":"# Make plots showing both T1 and BOLD TSNEs","2eea0f0b":"# Look at T-Statistic Neighbor Embedding of QC Metrics\nScikit-Learns TSNE function: http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.manifold.TSNE.html\nTSNE analysis suggested by Satrajit Ghosh"}}