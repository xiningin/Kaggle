{"cell_type":{"1b56e264":"code","3492a864":"code","f1e30a6b":"code","31b90eb9":"code","e3314dd1":"code","5be032d3":"code","12c7c51a":"code","99ef86e8":"code","43498c97":"code","e15ba587":"code","19cf2ec8":"code","ff13d552":"code","665a6746":"code","4074b8d8":"code","43c12602":"code","4dfafeb6":"code","a321a5fe":"code","49e3fe00":"code","7900382d":"code","d9f7c884":"code","e01fe840":"code","e2b2c661":"code","ef5498d6":"code","290b0341":"code","0a759f2c":"code","9f95e520":"code","6d4f0334":"code","acafabc1":"code","4ded0b2d":"code","d0c9ee1c":"code","4f689b07":"code","4a490273":"code","cc00f4b2":"code","1e09a3cf":"code","cadd3ddd":"code","a3247ef2":"code","34ce93d5":"code","c085ea71":"code","4e20cb63":"code","7896193a":"code","da6a52c1":"code","ae6479ff":"code","b8aed930":"code","e3cf882e":"code","592a0b62":"code","e6121c88":"code","a84b66fd":"code","323ea34e":"code","fa1e457c":"code","412923c8":"code","2eb39c0f":"code","d74dd982":"code","63e51bee":"code","dfeec7c2":"code","56427221":"code","48ae7bbd":"code","0b1d353f":"markdown","f061f5f3":"markdown","82b192a6":"markdown","0b777a15":"markdown","3519ba3e":"markdown"},"source":{"1b56e264":"#import library\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nimport math\nfrom sklearn import metrics","3492a864":"df = pd.read_csv('..\/input\/diabetes-health-indicators-dataset\/diabetes_binary_health_indicators_BRFSS2015.csv')","f1e30a6b":"df.shape","31b90eb9":"df.head()","e3314dd1":"#transform data\ndf['Diabetes_binary'] = df['Diabetes_binary'].astype('int')\ndf['HighBP'] = df['HighBP'].astype('int')\ndf['HighChol'] = df['HighChol'].astype('int')\ndf['CholCheck'] = df['CholCheck'].astype('int')\ndf['BMI'] = df['BMI'].astype('int')\ndf['Smoker'] = df['Smoker'].astype('int')\ndf['Stroke'] = df['Stroke'].astype('int')\ndf['HeartDiseaseorAttack'] = df['HeartDiseaseorAttack'].astype('int')\ndf['PhysActivity'] = df['PhysActivity'].astype('int')\ndf['Fruits'] = df['Fruits'].astype('int')\ndf['Veggies'] = df['Veggies'].astype('int')\n\ndf['HvyAlcoholConsump'] = df['HvyAlcoholConsump'].astype('int')\ndf['AnyHealthcare'] = df['AnyHealthcare'].astype('int')\ndf['NoDocbcCost'] = df['NoDocbcCost'].astype('int')\ndf['GenHlth'] = df['GenHlth'].astype('int')\ndf['MentHlth'] = df['MentHlth'].astype('int')\ndf['PhysHlth'] = df['PhysHlth'].astype('int')\ndf['DiffWalk'] = df['DiffWalk'].astype('int')\ndf['Sex'] = df['Sex'].astype('int')\ndf['Age'] = df['Age'].astype('int')\ndf['Education'] = df['Education'].astype('int')\ndf['Income'] = df['Income'].astype('int')\ndf.head()","5be032d3":"df.describe()","12c7c51a":"df.info()","99ef86e8":"#heatmap correlation\nplt.figure(figsize = (10,6))\nsns.heatmap(df.corr(), vmax = 0.9, square = True)\nplt.title(\"Pearson Correlation\")\nplt.show()","43498c97":"#split data\nX = df.drop('Diabetes_binary', axis = 1)\ny = df['Diabetes_binary']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","e15ba587":"#build model\nrf = RandomForestClassifier(random_state = 1, max_features = 'sqrt', n_jobs = 1, verbose = 1)\n%time rf.fit(X_train, y_train)\nrf.score(X_test, y_test)","19cf2ec8":"#prediction\ny_pred = rf.predict(X_test)\nprint(y_pred)","ff13d552":"#check MSE & RMSE \nmse = metrics.mean_squared_error(y_test, y_pred)\nprint('Mean Squared Error : '+ str(mse))\nrmse = math.sqrt(metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error : '+ str(rmse))","665a6746":"#confusion matrix\nmatrix = metrics.confusion_matrix(y_test, y_pred)\nprint(matrix)\n\n#heatmap matrix\nplt.figure(figsize = (8,6))\nsns.heatmap(matrix, annot = True, fmt = \".0f\", cmap = 'viridis')\nplt.title(\"Confusion Matrix\")\nplt.xlabel(\"Prediction\")\nplt.ylabel(\"Actual\")\nplt.show()","4074b8d8":"#classification report\nreport = metrics.classification_report(y_test, y_pred)\nprint(report)","43c12602":"#defining of feature\nfeature = pd.Series(rf.feature_importances_, index = X_train.columns).sort_values(ascending = False)\nprint(feature)","4dfafeb6":"#visualize feature\nplt.figure(figsize = (10,6))\nsns.barplot(x = feature, y = feature.index)\nplt.title(\"Feature Importance\")\nplt.xlabel('Score')\nplt.ylabel('Features')\nplt.show()","a321a5fe":"#transform data\ndf.Diabetes_binary[df['Diabetes_binary'] == 0] = 'No Diabetes'\ndf.Diabetes_binary[df['Diabetes_binary'] == 1] = 'Diabetes'\n\ndf.HighBP[df['HighBP'] == 0] = 'No High'\ndf.HighBP[df['HighBP'] == 1] = 'High BP'\n\ndf.HighChol[df['HighChol'] == 0] = 'No High Cholesterol'\ndf.HighChol[df['HighChol'] == 1] = 'High Cholesterol'\n\ndf.CholCheck[df['CholCheck'] == 0] = 'No Cholesterol Check in 5 Years'\ndf.CholCheck[df['CholCheck'] == 1] = 'Cholesterol Check in 5 Years'\n\ndf.Smoker[df['Smoker'] == 0] = 'No'\ndf.Smoker[df['Smoker'] == 1] = 'Yes'\n\ndf.Stroke[df['Stroke'] == 0] = 'No'\ndf.Stroke[df['Stroke'] == 1] = 'Yes'\n\ndf.HeartDiseaseorAttack[df['HeartDiseaseorAttack'] == 0] = 'No'\ndf.HeartDiseaseorAttack[df['HeartDiseaseorAttack'] == 1] = 'Yes'\n\ndf.PhysActivity[df['PhysActivity'] == 0] = 'No'\ndf.PhysActivity[df['PhysActivity'] == 1] = 'Yes'\n\ndf.Fruits[df['Fruits'] == 0] = 'No'\ndf.Fruits[df['Fruits'] == 1] = 'Yes'\n\ndf.Veggies[df['Veggies'] == 0] = 'No'\ndf.Veggies[df['Veggies'] == 1] = 'Yes'\n\ndf.HvyAlcoholConsump[df['HvyAlcoholConsump'] == 0] = 'No'\ndf.HvyAlcoholConsump[df['HvyAlcoholConsump'] == 1] = 'Yes'\n\ndf.AnyHealthcare[df['AnyHealthcare'] == 0] = 'No'\ndf.AnyHealthcare[df['AnyHealthcare'] == 1] = 'Yes'\n\ndf.NoDocbcCost[df['NoDocbcCost'] == 0] = 'No'\ndf.NoDocbcCost[df['NoDocbcCost'] == 1] = 'Yes'\n\ndf.GenHlth[df['GenHlth'] == 1] = 'Excellent'\ndf.GenHlth[df['GenHlth'] == 2] = 'Very Good'\ndf.GenHlth[df['GenHlth'] == 3] = 'Good'\ndf.GenHlth[df['GenHlth'] == 4] = 'Fair'\ndf.GenHlth[df['GenHlth'] == 5] = 'Poor'\n\ndf.DiffWalk[df['DiffWalk'] == 0] = 'No'\ndf.DiffWalk[df['DiffWalk'] == 1] = 'Yes'\n\ndf.Sex[df['Sex'] == 0] = 'Female'\ndf.Sex[df['Sex'] == 1] = 'Male'\n\ndf.Education[df['Education'] == 1] = 'Never Attended School'\ndf.Education[df['Education'] == 2] = 'Elementary'\ndf.Education[df['Education'] == 3] = 'Junior High School'\ndf.Education[df['Education'] == 4] = 'Senior High School'\ndf.Education[df['Education'] == 5] = 'Undergraduate Degree'\ndf.Education[df['Education'] == 6] = 'Magister'\n\ndf.Income[df['Income'] == 1] = 'Less Than $10,000'\ndf.Income[df['Income'] == 2] = 'Less Than $10,000'\ndf.Income[df['Income'] == 3] = 'Less Than $10,000'\ndf.Income[df['Income'] == 4] = 'Less Than $10,000'\ndf.Income[df['Income'] == 5] = 'Less Than $35,000'\ndf.Income[df['Income'] == 6] = 'Less Than $35,000'\ndf.Income[df['Income'] == 7] = 'Less Than $35,000'\ndf.Income[df['Income'] == 8] = '$75,000 or More'\ndf.head()","49e3fe00":"#visualize diabetes status\nplt.figure(figsize = (8,6))\nsns.countplot(df['Diabetes_binary'])\nplt.title(\"Diabetes Status\")\nplt.show()","7900382d":"#group diabetes status & BP\ndiabetes_bp = df.groupby(['Diabetes_binary', 'HighBP']).size().reset_index(name = 'Count')\nprint(diabetes_bp)","d9f7c884":"#visualize diabetes status ~ BP\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'HighBP', data = diabetes_bp, palette = 'Set1')\nplt.title(\"Dibaetes Status ~ BP\")\nplt.show()","e01fe840":"#group diabetes status & cholesterol status\ndiabetes_chol = df.groupby(['Diabetes_binary', 'HighChol']).size().reset_index(name = 'Count')\nprint(diabetes_chol)","e2b2c661":"#visualize diabetes status ~ cholesterol status\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'HighChol', data = diabetes_chol, palette = 'Set2')\nplt.title(\"Dibaetes Status ~ Cholesterol Status\")\nplt.show()","ef5498d6":"#group diabetes status & cholesterol check\ndiabetes_check = df.groupby(['Diabetes_binary', 'CholCheck']).size().reset_index(name = 'Count')\nprint(diabetes_check)","290b0341":"#visualize diabetes status ~ cholesterol check \nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'CholCheck', data = diabetes_check)\nplt.title(\"Dibaetes Status ~ Cholesterol Check\")\nplt.show()","0a759f2c":"#visualize diabetes status ~ BMI\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'Diabetes_binary', y = 'BMI', palette = 'Set1')\nplt.title(\"Dibaetes Status ~ BMI\")\nplt.show()","9f95e520":"#group diabetes status & smoker status\ndiabetes_smoker = df.groupby(['Diabetes_binary', 'Smoker']).size().reset_index(name = 'Count')\nprint(diabetes_smoker)","6d4f0334":"#visualize diabetes status ~ smoker status \nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'Smoker', data = diabetes_smoker, palette = 'Set2')\nplt.title(\"Dibaetes Status ~ Smoker Status\")\nplt.show()","acafabc1":"#group diabetes status & stroke status\ndiabetes_stroke = df.groupby(['Diabetes_binary', 'Stroke']).size().reset_index(name = 'Count')\nprint(diabetes_stroke)","4ded0b2d":"#visualize diabetes status ~ stroke status \nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'Stroke', data = diabetes_stroke, palette = 'Set1')\nplt.title(\"Dibaetes Status ~ Stroke Status\")\nplt.show()","d0c9ee1c":"#group diabetes status & heart diseaseor attack\ndiabetes_heart = df.groupby(['Diabetes_binary', 'HeartDiseaseorAttack']).size().reset_index(name = 'Count')\nprint(diabetes_heart)","4f689b07":"#visualize diabetes status ~ heart diseaseor attack\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'HeartDiseaseorAttack', data = diabetes_heart, palette = 'Set2')\nplt.title(\"Dibaetes Status ~ Heart Diseaseor Attack\")\nplt.show()","4a490273":"#group diabetes status & physical activity\ndiabetes_physical = df.groupby(['Diabetes_binary', 'PhysActivity']).size().reset_index(name = 'Count')\nprint(diabetes_physical)","cc00f4b2":"#visualize diabetes status ~ physical activity\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'PhysActivity', data = diabetes_physical)\nplt.title(\"Dibaetes Status ~ Physical Activity\")\nplt.show()","1e09a3cf":"#group diabetes status & fruits\ndiabetes_fruit = df.groupby(['Diabetes_binary', 'Fruits']).size().reset_index(name = 'Count')\nprint(diabetes_fruit)","cadd3ddd":"#visualize diabetes status ~ fruits\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'Fruits', data = diabetes_fruit, palette = 'Set1')\nplt.title(\"Dibaetes Status ~ Fruits\")\nplt.show()","a3247ef2":"#group diabetes status & veggies\ndiabetes_veggies = df.groupby(['Diabetes_binary', 'Veggies']).size().reset_index(name = 'Count')\nprint(diabetes_veggies)","34ce93d5":"#visualize diabetes status ~ veggies\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'Veggies', data = diabetes_veggies, palette = 'Set2')\nplt.title(\"Dibaetes Status ~ Veggies\")\nplt.show()","c085ea71":"#group diabetes status & HvyAlcoholConsump\ndiabetes_alcohol = df.groupby(['Diabetes_binary', 'HvyAlcoholConsump']).size().reset_index(name = 'Count')\nprint(diabetes_alcohol)","4e20cb63":"#visualize diabetes status ~ HvyAlcoholConsump\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'HvyAlcoholConsump', data = diabetes_alcohol)\nplt.title(\"Dibaetes Status ~ Alcohol Consumption\")\nplt.show()","7896193a":"#group diabetes status & AnyHealthcare\ndiabetes_healthcare = df.groupby(['Diabetes_binary', 'AnyHealthcare']).size().reset_index(name = 'Count')\nprint(diabetes_healthcare)","da6a52c1":"#visualize diabetes status ~ AnyHealthcare\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'AnyHealthcare', data = diabetes_healthcare, palette = 'Set1')\nplt.title(\"Dibaetes Status ~ Healthcare\")\nplt.show()","ae6479ff":"#group diabetes status & doctor cost\ndiabetes_NoDocbcCost = df.groupby(['Diabetes_binary', 'NoDocbcCost']).size().reset_index(name = 'Count')\nprint(diabetes_NoDocbcCost)","b8aed930":"#visualize diabetes status ~ doctor cost\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'NoDocbcCost', data = diabetes_NoDocbcCost, palette = 'Set2')\nplt.title(\"Dibaetes Status ~ Doctor Cost\")\nplt.show()","e3cf882e":"#group diabetes status & general health\ndiabetes_general = df.groupby(['Diabetes_binary', 'GenHlth']).size().reset_index(name = 'Count')\nprint(diabetes_general)","592a0b62":"#visualize diabetes status ~ general health\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'GenHlth', data = diabetes_general)\nplt.title(\"Dibaetes Status ~ General Health\")\nplt.show()","e6121c88":"#visualize diabetes status ~ mental health\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'Diabetes_binary', y = 'MentHlth', palette = 'Set1')\nplt.title(\"Dibaetes Status ~ Mental Health\")\nplt.show()","a84b66fd":"#visualize diabetes status ~ physical health\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'Diabetes_binary', y = 'PhysHlth', palette = 'Set2')\nplt.title(\"Dibaetes Status ~ Physical Health\")\nplt.show()","323ea34e":"#group diabetes status & difficulty walking\ndiabetes_walk = df.groupby(['Diabetes_binary', 'DiffWalk']).size().reset_index(name = 'Count')\nprint(diabetes_walk)","fa1e457c":"#visualize diabetes status ~ difficulty walking\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'DiffWalk', data = diabetes_walk)\nplt.title(\"Dibaetes Status ~ Difficulty Walking\")\nplt.show()","412923c8":"#group diabetes status & gender\ndiabetes_sex = df.groupby(['Diabetes_binary', 'Sex']).size().reset_index(name = 'Count')\nprint(diabetes_sex)","2eb39c0f":"#visualize diabetes status ~ gender\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'Sex', data = diabetes_sex, palette = 'Set1')\nplt.title(\"Dibaetes Status ~ Gender\")\nplt.show()","d74dd982":"#visualize diabetes status ~ age\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'Diabetes_binary', y = 'Age', palette = 'Set2')\nplt.title(\"Dibaetes Status ~ Age\")\nplt.show()","63e51bee":"#group diabetes status & education\ndiabetes_education = df.groupby(['Diabetes_binary', 'Education']).size().reset_index(name = 'Count')\nprint(diabetes_education)","dfeec7c2":"#visualize diabetes status ~ education\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'Education', data = diabetes_education)\nplt.title(\"Dibaetes Status ~ Education\")\nplt.show()","56427221":"#group diabetes status & income\ndiabetes_income = df.groupby(['Diabetes_binary', 'Income']).size().reset_index(name = 'Count')\nprint(diabetes_income)","48ae7bbd":"#visualize diabetes status ~ income\nplt.figure(figsize = (8,6))\nsns.barplot(x = 'Diabetes_binary', y = 'Count', hue = 'Income', data = diabetes_income, palette = 'Set1')\nplt.title(\"Dibaetes Status ~ Income\")\nplt.show()","0b1d353f":"# Diabetes Health Prediction","f061f5f3":"## Data Extraction","82b192a6":"## Random Forest Model","0b777a15":"## Visualization","3519ba3e":"## Check Feature Importance"}}