{"cell_type":{"783a54e1":"code","f52d10c0":"code","e83d12ee":"code","0b4a6bed":"code","0b08bc34":"code","ce1ca645":"code","74abf01c":"code","9a68110b":"code","9501e7eb":"code","92c7113d":"code","38e2a058":"code","fa10b663":"code","11a44029":"code","2b5d15f9":"code","d7f805bd":"code","adf8dd3b":"code","f453b635":"code","af15df05":"code","d8944b2f":"code","4ddad29b":"markdown","326cfa80":"markdown","febdf48a":"markdown","c9cc5f52":"markdown"},"source":{"783a54e1":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f52d10c0":"df = pd.read_csv(\"..\/input\/heart-failure-prediction\/heart.csv\")\ndf.head()","e83d12ee":"df.shape","0b4a6bed":"df.isnull().sum()","0b08bc34":"print(\"Sex:\",df['Sex'].unique())\nprint(\"RestingECG:\",df['RestingECG'].unique())\nprint(\"ChestPainType:\",df['ChestPainType'].unique())\nprint(\"ExerciseAngina:\",df['ExerciseAngina'].unique())\nprint(\"ST_Slope:\",df['ST_Slope'].unique())","ce1ca645":"f, axes = plt.subplots(2, 3, figsize=(15, 10))\n\nsns.countplot(x = df['HeartDisease'], data = df, palette='rocket', ax=axes[0,0])\nsns.countplot(x = df['RestingECG'], data = df, palette='rocket', ax=axes[0,1])\nsns.countplot(x = df['ChestPainType'], data = df, palette='rocket', ax=axes[0,2])\n\nsns.countplot(x = df['ExerciseAngina'], data = df, palette='rocket', ax=axes[1,0])\nsns.countplot(x = df['RestingECG'], data = df, palette='rocket', ax=axes[1,1])\nsns.countplot(x = df['Sex'], data = df, palette='rocket', ax=axes[1,2])\nplt.show()","74abf01c":"plt.figure(figsize = (15, 10))\nsns.displot(df['RestingBP'], color = 'y', kind='kde')\n\nplt.show()","9a68110b":"plt.figure(figsize = (20, 10))\nsns.displot(df['Cholesterol'])\n\nplt.show()","9501e7eb":"from sklearn.preprocessing import LabelEncoder\n\nle=LabelEncoder()\n\ndf['Sex']=le.fit_transform(df['Sex'])\ndf['RestingECG']=le.fit_transform(df['RestingECG'])\ndf['ChestPainType']=le.fit_transform(df['ChestPainType'])\ndf['ExerciseAngina']=le.fit_transform(df['ExerciseAngina'])\ndf['ST_Slope']=le.fit_transform(df['ST_Slope'])\n\ndf.head()","92c7113d":"plt.figure(figsize=(15,10))\nsns.heatmap(df.corr(), annot=True, cmap='RdYlBu')","38e2a058":"X = df.drop('HeartDisease', axis=1)\ny = df['HeartDisease']","fa10b663":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4)\n\nprint(\"X_train: \", X_train.shape)\nprint(\"X_test: \", X_test.shape)\nprint(\"y_train: \", y_train.shape)\nprint(\"y_test: \", y_test.shape)","11a44029":"from sklearn.ensemble import AdaBoostClassifier\n\nabc = AdaBoostClassifier(n_estimators=500, learning_rate=0.01, random_state=0)\nmodel = abc.fit(X_train, y_train)","2b5d15f9":"y_pred_adaboost = model.predict(X_test)\nprint(y_pred_adaboost)","d7f805bd":"from sklearn.metrics import accuracy_score\n\nprint(\"AdaBoost Classifier Model Accuracy:\", accuracy_score(y_test, y_pred_adaboost))","adf8dd3b":"from sklearn.ensemble import GradientBoostingClassifier\n\ngbc = GradientBoostingClassifier(n_estimators=500, learning_rate=0.01, random_state=0)\nmodel = gbc.fit(X_train, y_train)","f453b635":"y_pred_xgboost = model.predict(X_test)\nprint(y_pred_xgboost)","af15df05":"from sklearn.metrics import accuracy_score\n\nprint(\"XGBoost Classifier Model Accuracy:\", accuracy_score(y_test, y_pred_xgboost))","d8944b2f":"acc = pd.DataFrame({\n    \"algorithms\": ['Adaboost', 'Xgboost'],\n    \"accuracy\": [accuracy_score(y_test, y_pred_adaboost),accuracy_score(y_test, y_pred_xgboost)]\n})\nsns.barplot(x='accuracy', y='algorithms', data=acc, palette='rocket')","4ddad29b":"# Comparision between Adaboost and XGboost","326cfa80":"# XGBoost Classifier","febdf48a":"# AdaBoost Classifier ","c9cc5f52":"To conclude, we can say that Xgboost is slightly works better than Adaboost."}}