{"cell_type":{"10211b19":"code","513aa1d0":"code","db753b2d":"code","eb7d4d66":"code","6002161e":"code","f422ccdb":"code","f2c11a7a":"code","30663f65":"code","e55d2804":"code","10a5db87":"code","f26b13ed":"code","de02fcd9":"code","441baa5c":"code","70d00008":"code","3b47a833":"code","5c4cf36f":"code","a9f2a884":"code","98acb976":"code","57c49822":"code","df83e347":"code","2f57fc03":"code","7180f29d":"code","c119ca4d":"code","ca454343":"code","4d2ee8fc":"code","8bfad4e2":"code","3c94e8c7":"code","70eb3ca1":"code","d9851d90":"code","318a0d38":"code","3f4afc31":"code","acb6b531":"code","abbf2bbc":"code","4fb1f0e0":"code","b2e7b348":"code","0b8c7012":"code","11855e3e":"code","31f09abd":"code","713294ef":"code","4ef47c79":"code","32737107":"code","283f7516":"code","80e517de":"code","9d75ba8e":"code","2b17f335":"code","113c805b":"code","0e104da7":"code","c854a348":"code","dfc50281":"code","3070415c":"markdown","4bb6feb6":"markdown","47a85d8a":"markdown"},"source":{"10211b19":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","513aa1d0":"# Carregando os dados\ndf = pd.read_csv('\/kaggle\/input\/costa-rican-household-poverty-prediction\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/costa-rican-household-poverty-prediction\/test.csv')\n\ndf.shape, test.shape","db753b2d":"# Juntando os dataframes\ndf_all = df.append(test)\n\ndf_all.shape","eb7d4d66":"# Vamos visualizar os dados\ndf_all.info()","6002161e":"# Vamos aumentar o n\u00famero de colunas para o info mostrar\ndf_all.info(max_cols=145)","f422ccdb":"# Quais colunas do dataframe s\u00e3o do tipo object\ndf_all.select_dtypes('object').head()","f2c11a7a":"# Olhando a coluna dependency\ndf_all['dependency'].value_counts()","30663f65":"# Vamos obter o idhogar de alguns casos\ndf_all[df_all['dependency'] == 'yes']['idhogar'].head(20)","e55d2804":"# Vamos investigar o idhogar 2b58d945f pegando as vari\u00e1veis de c\u00e1lculo da coluna dependency\ndf_all[df_all['idhogar'] == '2b58d945f'][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total']]","10a5db87":"# Vamos investigar o idhogar d6dae86b7 pegando as vari\u00e1veis de c\u00e1lculo da coluna dependency\ndf_all[df_all['idhogar'] == 'd6dae86b7'][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total']]","f26b13ed":"# Vamos investigar o idhogar 652a7ffa0 pegando as vari\u00e1veis de c\u00e1lculo da coluna dependency\ndf_all[df_all['idhogar'] == '652a7ffa0'][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total']]","de02fcd9":"# Vamos obter o idhogar de alguns casos\ndf_all[df_all['dependency'] == 'no']['idhogar'].head(20)","441baa5c":"# Vamos investigar o idhogar 3e16fab89 pegando as vari\u00e1veis de c\u00e1lculo da coluna dependency\ndf_all[df_all['idhogar'] == '3e16fab89'][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total']]","70d00008":"# Vamos investigar o idhogar 3e16fab89 pegando as vari\u00e1veis de c\u00e1lculo da coluna dependency\ndf_all[df_all['idhogar'] == 'bcc196e5a'][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'hogar_total']]","3b47a833":"# Analisando os dados da coluna edjefa\ndf_all['edjefa'].value_counts()","5c4cf36f":"# Analisando os dados da coluna edjefe\ndf_all['edjefe'].value_counts()","a9f2a884":"# Vamos transformar 'yes' em 1 e 'no' em 0\n# nas colunas edjefa e edjefe\nmapeamento = {'yes': 1, 'no': 0}\n\ndf_all['edjefa'] = df_all['edjefa'].replace(mapeamento).astype(int)\ndf_all['edjefe'] = df_all['edjefe'].replace(mapeamento).astype(int)","98acb976":"# Quais colunas do dataframe s\u00e3o do tipo object\ndf_all.select_dtypes('object').head()","57c49822":"# Vamos transformar 'yes' em 1 e 'no' em 0\n# na coluna dependency\ndf_all['dependency'] = df_all['dependency'].replace(mapeamento).astype(float)","df83e347":"# Quais colunas do dataframe s\u00e3o do tipo object\ndf_all.select_dtypes('object').head()","2f57fc03":"# Visualizando do comando info\ndf_all.info(max_cols=145)","7180f29d":"# Verificando os valores nulos\ndf_all.isnull().sum()","c119ca4d":"# Verificando os valores nulos\ndf_all.isnull().sum().sort_values(ascending=False)","ca454343":" # Verificando os valores de aluguel (v2a1) para os chefes\/as de familia (parentesco1 = 1)\ndf_all[df_all['parentesco1'] == 1]['v2a1'].isnull().sum()","4d2ee8fc":"# Qual a cara dos dados de v18q\ndf_all['v18q'].value_counts()","8bfad4e2":"# Prenchendo com -1 os valores nulos de v2a1\ndf_all['v2a1'].fillna(-1, inplace=True)","3c94e8c7":"# Prenchendo com 0 os valores nulos de v18q1\ndf_all['v18q1'].fillna(0, inplace=True)","70eb3ca1":"# Verificando os valores nulos\ndf_all.isnull().sum().sort_values()","d9851d90":"# Vamos obter o idhogar de alguns casos onde o meanaeduc \u00e9 vazio\ndf_all[df_all['meaneduc'].isnull()]['idhogar'].head(20)","318a0d38":"# Investigando a casa com ID = e197a50ea\ndf_all[df_all['idhogar'] == 'e197a50ea'][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'edjefe', 'edjefa', 'Target']]","3f4afc31":"# Investigando a casa com ID = a874b7ce7\ndf_all[df_all['idhogar'] == 'a874b7ce7'][['hogar_nin', 'hogar_adul', 'hogar_mayor', 'edjefe', 'edjefa', 'Target']]","acb6b531":"# Prenchendo com -1 os valores nulos de SQBmeaned, meaneduc e rez_esc\ndf_all['SQBmeaned'].fillna(-1, inplace=True)\ndf_all['meaneduc'].fillna(-1, inplace=True)\ndf_all['rez_esc'].fillna(-1, inplace=True)","abbf2bbc":"# Separando as colunas para treinamento\nfeats = [c for c in df_all.columns if c not in ['Id', 'idhogar', 'Target']]","4fb1f0e0":"# Separar os dataframes\ntrain, test = df_all[~df_all['Target'].isnull()], df_all[df_all['Target'].isnull()]\n\ntrain.shape, test.shape","b2e7b348":"# Instanciando o random forest classifier\nfrom sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(n_jobs=-1, n_estimators=200, random_state=42)","0b8c7012":"# Treinando o modelo\nrf.fit(train[feats], train['Target'])","11855e3e":"# Prever o Target de teste usando o modelo treinado\ntest['Target'] = rf.predict(test[feats]).astype(int)","31f09abd":"# Vamos verificar as previs\u00f5es\ntest['Target'].value_counts(normalize=True)","713294ef":"# Vamos verificar a distribui\u00e7\u00e3o da vari\u00e1vel Target na base de treino\ntrain['Target'].value_counts(normalize=True)","4ef47c79":"# Criando o arquivo para submiss\u00e3o\ntest[['Id', 'Target']].to_csv('submission.csv', index=False)","32737107":"import matplotlib.pyplot as plt\n\nfig=plt.figure(figsize=(15, 20))\n\n# Avaliando a importancia de cada coluna (cada vari\u00e1vel de entrada)\npd.Series(rf.feature_importances_, index=feats).sort_values().plot.barh()","283f7516":"# Transformando idhogar em vari\u00e1vel num\u00e9rica\ndf_all['idhogar'] = df_all['idhogar'].astype('category').cat.codes\n\ndf_all.info()","80e517de":"# Separando as colunas para treinamento\nfeats = [c for c in df_all.columns if c not in ['Id', 'Target']]","9d75ba8e":"# Separar os dataframes\ntrain, test = df_all[~df_all['Target'].isnull()], df_all[df_all['Target'].isnull()]\n\ntrain.shape, test.shape","2b17f335":"# Instanciando o random forest classifier\nfrom sklearn.ensemble import RandomForestClassifier\n\nrf2 = RandomForestClassifier(n_jobs=-1, n_estimators=200, random_state=42)","113c805b":"# Treinando o modelo\nrf2.fit(train[feats], train['Target'])","0e104da7":"# Prever o Target de teste usando o modelo treinado\ntest['Target'] = rf2.predict(test[feats]).astype(int)","c854a348":"# Vamos verificar as previs\u00f5es\ntest['Target'].value_counts(normalize=True)","dfc50281":"# Criando o arquivo para submiss\u00e3o\ntest[['Id', 'Target']].to_csv('submission.csv', index=False)","3070415c":"# IESB - Miner II - Aula 05 - Random Forest","4bb6feb6":"## Vamos usar a vari\u00e1vel idhogar para treinar o modelo","47a85d8a":"### Vamos investigar o valor 'yes' na coluna dependency"}}