{"cell_type":{"be0c41b9":"code","c4531da3":"code","9e4b15d5":"code","04e795e7":"code","44ca6f26":"code","cdab8b8c":"code","4040eeee":"code","9aa300c4":"code","9d2a08f7":"code","08b22df6":"code","9e52318c":"code","1b65af52":"code","e28efc4a":"code","9a73221c":"code","05e58a8d":"code","130d9f08":"code","86eb0882":"code","35d60b96":"code","6fddf10e":"code","4b30aaee":"code","80a5d27b":"code","38be915a":"code","4b201fe9":"code","e943e195":"code","d6283f7a":"code","d8142bdd":"code","186cff3c":"code","ead83287":"code","99ffdb27":"code","15551281":"code","5e6a3660":"code","c97c6869":"code","b7428cfb":"code","72a0ea5c":"code","93f93c5c":"code","3a354f3c":"code","6f29943f":"code","0ee2c24a":"code","c524eb6d":"code","c8e730a6":"code","e56b4912":"markdown","d99d6000":"markdown","a75f6ac4":"markdown","ee2b5b4e":"markdown","2d61dfe7":"markdown","1acbef05":"markdown","a0261f73":"markdown","756417a2":"markdown","73265c85":"markdown","cf702072":"markdown","899bfa02":"markdown"},"source":{"be0c41b9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c4531da3":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nfrom scipy import stats as stat","9e4b15d5":"cpy = pd.read_csv('..\/input\/tweets-about-the-top-companies-from-2015-to-2020\/Company.csv')\ncpy_tweet = pd.read_csv('..\/input\/tweets-about-the-top-companies-from-2015-to-2020\/Company_Tweet.csv')\ntweet = pd.read_csv('..\/input\/tweets-about-the-top-companies-from-2015-to-2020\/Tweet.csv')","04e795e7":"cpy","44ca6f26":"cpy_tweet","cdab8b8c":"tweet","4040eeee":"tweets = pd.merge(tweet,cpy_tweet,on='tweet_id',how='inner')\ntweets.head()","9aa300c4":"tweets['post_date'] = pd.to_datetime(tweets['post_date'], unit='s')","9d2a08f7":"tweets['date'] = pd.to_datetime(tweets['post_date'].apply(lambda date: date.date()))","08b22df6":"tweets['date'].head()","9e52318c":"tweets.info()","1b65af52":"tweets = tweets.drop(['tweet_id'],axis=1)","e28efc4a":"tweets.isna().sum()","9a73221c":"tweets.ticker_symbol.value_counts()","05e58a8d":"aapl = tweets[tweets['ticker_symbol'] == 'AAPL']\ntsla = tweets[tweets['ticker_symbol'] == 'TSLA']\namzn = tweets[tweets['ticker_symbol'] == 'AMZN']\nmsft = tweets[tweets['ticker_symbol'] == 'MSFT']\ngoog = tweets[tweets['ticker_symbol'] == 'GOOG']\ngoogl = tweets[tweets['ticker_symbol'] == 'GOOGL'] ## With stockholders voting rights","130d9f08":"!pip install yfinance","86eb0882":"import yfinance as yf","35d60b96":"tsla_stock = yf.Ticker('TSLA')","6fddf10e":"start = min(tsla['date'])\nend = max(tsla['date'])\n\ntsla_stock = tsla_stock.history(start=start.date(), end=end.date())","4b30aaee":"tsla_stock","80a5d27b":"aapl_stock = yf.Ticker(\"AAPL\").history(start=min(aapl['date']).date(),end=max(aapl['date']).date())\namzn_stock = yf.Ticker(\"AMZN\").history(start=min(amzn['date']).date(),end=max(amzn['date']).date())\ngoogl_stock = yf.Ticker(\"GOOGL\").history(start=min(googl['date']).date(),end=max(googl['date']).date())\nmsft_stock = yf.Ticker(\"MSFT\").history(start=min(msft['date']).date(),end=max(msft['date']).date())","38be915a":"def tweet_vol_affect(tweets,stocks,title):\n    tweet_shift1 = tweets.groupby('date').size().shift(-1).dropna() \n    stock_data = stocks['Volume'].dropna()\n    corr, pval = stat.spearmanr(tweet_shift1.reindex(stock_data.index), stock_data,nan_policy='omit')\n    tweets_vol = tweets.groupby('date').size().rolling(30).mean().dropna()\n    stocks_data = stocks['Volume'].rolling(30).mean().dropna()\n    fig = plt.figure(figsize=(16,8))\n    ax1 = fig.add_subplot()\n    ax2 = fig.add_subplot()\n    ax2 = ax1.twinx()\n    ax1.plot(tweets_vol.index,tweets_vol,label='Tweet Volume')\n    ax2.plot(stocks_data.index,stocks_data,color='orange',label='Trade Volume')\n    ax2.set_title(title+\" \\n Spearman correlation: corr={0:.5f} pval={1:.5f}\".format(corr,pval))\n    \n    lines, labels = ax1.get_legend_handles_labels()\n    lines2, labels2 = ax2.get_legend_handles_labels()\n    ax2.legend(lines + lines2, labels + labels2, loc=0)\n    plt.show()\n    \n  ","4b201fe9":"tweet_vol_affect(tsla,tsla_stock,\"Tesla\")    ","e943e195":"tweet_vol_affect(aapl,aapl_stock,\"Apple\")","d6283f7a":"tweet_vol_affect(amzn,amzn_stock,\"Amazon\")\n","d8142bdd":"tweet_vol_affect(googl,googl_stock,\"Google\")","186cff3c":"tweet_vol_affect(msft,msft_stock,\"Microsoft\")","ead83287":"!pip install afinn","99ffdb27":"from afinn import Afinn\nafinn = Afinn()","15551281":"tsla['score'] =  tsla['body'].apply(lambda tweet: afinn.score(tweet))\naapl['score'] =  aapl['body'].apply(lambda tweet: afinn.score(tweet))\namzn['score'] =  amzn['body'].apply(lambda tweet: afinn.score(tweet))\nmsft['score'] =  msft['body'].apply(lambda tweet: afinn.score(tweet))\ngoogl['score'] =  googl['body'].apply(lambda tweet: afinn.score(tweet))","5e6a3660":"tsla.score.plot(kind='hist',range=(-5,5),bins=40,edgecolor='black');","c97c6869":"amzn.score.plot(kind='hist',range=(-5,5),bins=40,edgecolor='black');","b7428cfb":"googl.score.plot(kind='hist',range=(-5,5),bins=40,edgecolor='black');","72a0ea5c":"msft.score.plot(kind='hist',range=(-5,5),bins=40,edgecolor='black');","93f93c5c":"def sentiment_overtime(tweets,stock,title):\n    visual= tweets.groupby('date')['score'].mean().shift(-1).rolling(30).mean().dropna()\n    corr_test = tweets.groupby('date')['score'].mean().shift(-1).dropna()\n    corr, pval = stat.spearmanr(corr_test.reindex(stock.index), stock['Open'],nan_policy='omit')\n\n    fig = plt.figure(figsize=(16,8))\n    ax1 = fig.add_subplot()\n    ax2 = fig.add_subplot()\n    ax2 = ax1.twinx()\n    \n    ax1.plot(visual.index,visual,label='Tweets Sentiment')\n    ax2.plot(stock.index,stock['Close'],color='orange',label='share price')\n    ax2.set_title(\"Effects of \"+title+\" tweets to shareprice\" +\"\\n Spearman correlation: corr={0:.5f} pval={1:.5f}\".format(corr,pval))\n    lines, labels = ax1.get_legend_handles_labels()\n    lines2, labels2 = ax2.get_legend_handles_labels()\n    ax2.legend(lines + lines2, labels + labels2, loc=0)\n    plt.show()\n    ","3a354f3c":"sentiment_overtime(tsla,tsla_stock,\"Tesla\");","6f29943f":"sentiment_overtime(amzn,amzn_stock,\"Amazon\");","0ee2c24a":"sentiment_overtime(msft,msft_stock,\"Mircosoft\");","c524eb6d":"sentiment_overtime(googl,googl_stock,\"Google\");","c8e730a6":"sentiment_overtime(aapl,aapl_stock,\"Apple\");","e56b4912":"The next hypothesis that I will be testing are as follows:\n* Null Hypothesis: The sentiment of the tweet has no correlation with the shareprice of the company \n* Alternate Hypothesis: The sentiment of the tweet has a correlation with the shareprice of the company\n\nIn order to identify the sentiment of the tweets, I will be using the Afinn library. \n\nMore information can be found [here.](http:\/\/pypi.org\/project\/afinn\/)\n\nIn general, the afinn library will be able to provide a score where 0 is neutral, negative value would mean that the tweet is negative while postive would be otherwise.","d99d6000":"There seems to be a stronger correlation between the sentiment of the tweets to the share price of the company as compared to the previous hypothesis. However, the result shown on Tesla dataset appears to show a different result from the rest much like how Microsoft result was different in the previous hypothesis.\n\nIn conclusion, although 4\/5 of the companies in this notebook have shown positive result but the strength of the correlation differs across the different company. On top of that, these companies may not be a good representative of the other stocks out there in the market. Further research needs to be done, to prove the viability of using tweet to determine the stock movement of the company.","a75f6ac4":"# **Classifying positive and negative tweets**","ee2b5b4e":"**Importing the essential libraries**","2d61dfe7":"Next, I will be adopting the same method as aforementioned to test my hypothesis","1acbef05":"Firstly, I would like to find out if the amount of tweets affects the volume traded of the particular company. To do that,I made us of panda shift operator to shift the entire timeseries back by 1 period. By doing so, I will be able to compare the effects of the volume of tweets the day before on the particular company share price the following day. \n\nI decided to use the Spearman correlation statistic test instead of the Pearson correlation because Spearman correlation test does not assume that the dataset are normally distributed. \n\n* null hypothesis: There is no correlation between the volume of tweets with the volume of stock traded\n* alternate hypothesis: There is a correlation between the volume of tweets with the volume of stock traded\n\nIf the p-value of the spearman correlation, falls below the pre-determined threshold of 0.05, I will reject the null hypothesis and we will have enough evidence to conclude that there is a positive\/negative correlation between the volume of stocks traded and the amount of tweets.\n\nBeside the statistic test, I have also decided to plot the volume traded and the volume of tweets in the same graph to visualise the data for a overview of the relationship between these 2 variables. To get a clearer picture of how these two variables correlates, I had to use the rolling operator to get the average of 30 days window to have a clearer senses of the overall trend. \n","a0261f73":"**Inspecting the dataframes**","756417a2":"I have always been curious of how tweets can affect a company's share price. If you have the same question in mind, I hope to address it in this notebook. \n\n*P.S I am still fairly new to this and I would welcome any form of feedback as to how to improve my skill or approach to this question*","73265c85":"The \"writer\" column is the only column with missing data. Since we are not likely to use this column, I decided to ignore the missing value for now.","cf702072":"After inspecting the dataframes, I decided to merge the tweet dataframe with the cpy_tweet dataframe which will allow me to identify the company that is talked about in the tweet","899bfa02":"Looking at it, it appears that the shear volume of tweets does seems to have a positive correlation with the trade volume. However, the strength of the correlation is questionable. Additionally, it is not certain that volume of tweets is always correlated with the share price as demostrated in Mircosoft's case where the p-value exceeded the predetermined threshold of 0.05"}}