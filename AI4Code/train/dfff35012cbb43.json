{"cell_type":{"fa9d81a7":"code","2c37e2c0":"code","c3755b88":"code","5d1b6195":"code","96a141f7":"code","e84b9b90":"code","2019ad73":"code","d32db5f6":"code","6b3effe6":"code","4bddeada":"code","3d6ef920":"code","2e1a1633":"code","60d4f56e":"code","5c155a04":"code","9d71ab86":"code","47ad0c94":"code","10467ce2":"code","90d3c08c":"code","456eeafe":"code","3b4b1426":"code","b7d91727":"code","7286002c":"code","92df66b0":"code","7465100a":"code","eb14c1e0":"code","e147f4db":"code","094ec0c8":"code","02466526":"code","35e24ca8":"code","6fbdb92f":"code","05f2f59d":"code","3cac71b0":"code","adefa22d":"code","4a81bb92":"code","b5bb0713":"code","c4e1bcd0":"code","5a329a51":"markdown","3b18ceac":"markdown","09f9a322":"markdown","069f42f6":"markdown","73c0ec5e":"markdown","345b182f":"markdown"},"source":{"fa9d81a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2c37e2c0":"#\u30c7\u30fc\u30bf\u683c\u7d0d\nData = pd.read_csv(\"..\/input\/kickstarter-projects\/ks-projects-201801.csv\")\nData.shape","c3755b88":"Data.head()","5d1b6195":"#\u6b20\u640d\u5024\u78ba\u8a8d\u21d2name usd pledged\nprint(Data.isnull().any())","96a141f7":"#\u5fc5\u8981\u306e\u306a\u3044\u3082\u306e\u3092\u9664\u304f\n#state\u306f\u4f7f\u3063\u3066\u3082\u3088\u3044\u2026\uff1f\ndata=Data.drop(\"name\",1)#\u500b\u4eba\u5358\u4f4d\u3067\u7570\u306a\u308b\ndata=data.drop(\"ID\",1)#\u500b\u4eba\u5358\u4f4d\u3067\u7570\u306a\u308b\ndata=data.drop(\"usd pledged\",1)#\u7d50\u679c\u3068\u3057\u3066\u5f97\u3089\u308c\u308b\u305f\u3081\ndata=data.drop(\"state\",1)#\u7d50\u679c\u3068\u3057\u3066\u5f97\u3089\u308c\u308b\u305f\u3081\ndata.head()","e84b9b90":"#\u6642\u7cfb\u5217\u884c\uff08deadline\uff09\u306e\u5909\u63db\ndata['deadline2']=pd.to_datetime(data['deadline'])\ndata['deadline_y']=(data['deadline2'].dt.year)\ndata['deadline_m']=(data['deadline2'].dt.month)\ndata=data.drop(\"deadline\",1)\ndata=data.drop(\"deadline2\",1)\ndata.head()","2019ad73":"#\u6642\u7cfb\u5217\u884c\uff08launched\uff09\u306e\u5909\u63db\ndata['launched2']=pd.to_datetime(data['launched'])\ndata['launched_y']=(data['launched2'].dt.year)\ndata['launched_m']=(data['launched2'].dt.month)\ndata=data.drop(\"launched\",1)\ndata=data.drop(\"launched2\",1)\ndata.head()","d32db5f6":"#\u7a2e\u985e\u66f8\u304d\u51fa\u3057\u3066\u307f\u308b\nu_category=data['category'].unique()\nu_mcategory=data['main_category'].unique()\nu_carrency=data['currency'].unique()\nu_country=data['country'].unique()\nprint(u_category)\nprint(u_mcategory)\nprint(u_carrency)\nprint(u_country)","6b3effe6":"#\u30ef\u30f3\u30db\u30c3\u30c8\u30a8\u30f3\u30b3\u30fc\u30c9\u5316\ndata2=pd.get_dummies(data,columns=['category'])\ndata2=pd.get_dummies(data2,columns=['main_category'])\ndata2=pd.get_dummies(data2,columns=['currency'])\ndata2=pd.get_dummies(data2,columns=['country'])\ndata2.head(10)","4bddeada":"#usd_pledged_real \/ usd_goal_real\u306e\u8ffd\u52a0\ndata3=data2.assign(P = data2[\"usd_pledged_real\"]\/data2[\"usd_goal_real\"])\ndata3=data3.drop(\"usd_pledged_real\",1)\ndata3=data3.drop(\"usd_goal_real\",1)\ndata3.head()","3d6ef920":"#\u6a19\u6e96\u504f\u5dee\u7b97\u51fa\ndata3.describe()","2e1a1633":"#\u76f8\u95a2\u4fc2\u6570\u7b97\u51fa\nC=data3.corr()\nC.head()","60d4f56e":"#\u8aac\u660e\u5909\u6570\nX=data3.drop(\"P\",1)\nX.head()\nX.dropna()","5c155a04":"#\u76ee\u7684\u5909\u6570\nY=data3.P\nY.head(10)","9d71ab86":"#\u76ee\u7684\u5909\u6570\u6563\u5e03\u56f3\u884c\u5217\na=np.zeros((378661,1))\nfor i in range(378661):\n    a[i,0]=i+1\n\nimport matplotlib.pyplot as plt\nplt.scatter(a,Y)\nplt.show()","47ad0c94":"#\u6a19\u6e96\u5316\nXX=((X-X.mean())\/X.std())\nXX.head()","10467ce2":"#\u767d\u8272\u5316\u5b9a\u7fa9\ndef white(X,epsilon=1e-5):\n    n,p=X.shape\n    u,v = np.linalg.eig(np.dot(X.T,X)\/n)  #u\u56fa\u6709\u5024 v\u30d9\u30af\u30c8\u30eb\n    Z=np.dot(X,np.dot(v,np.diag(1\/(np.sqrt(u)+epsilon))))\n    return (Z)","90d3c08c":"#\u767d\u8272\u5316\nXXX=white(X,epsilon=1e-5)","456eeafe":"#\u4ea4\u5dee\u691c\u8a3c\u3068\u91cd\u56de\u5e30\u5206\u6790\nfrom sklearn.linear_model import LinearRegression\nlr=LinearRegression()\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import KFold\nkf=KFold(n_splits=10,shuffle=True)\n\nscores1 = cross_validate(lr,XX,Y,cv=kf,scoring={\"neg_mean_squared_error\",\"r2\"})","3b4b1426":"#\u7cbe\u5ea6\nprint('Cross-Validation scores\uff08\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\u30fb\u6c7a\u5b9a\u4fc2\u6570\uff09:{}'.format(scores1))","b7d91727":"#Ridge\u56de\u5e30\nfrom sklearn.linear_model import Ridge\nrg=Ridge()\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import KFold\nkf=KFold(n_splits=5,shuffle=True)\n\nscores1 = cross_validate(rg,XX,Y,cv=kf,scoring={\"neg_mean_squared_error\",\"r2\"})","7286002c":"#\u7cbe\u5ea6\nprint('Cross-Validation scores\uff08\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\u30fb\u6c7a\u5b9a\u4fc2\u6570\uff09:{}'.format(scores1))","92df66b0":"#Lasso\u56de\u5e30\nfrom sklearn.linear_model import Lasso\nls=Lasso()\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import KFold\nkf=KFold(n_splits=5,shuffle=True)\n\nscores1 = cross_validate(ls,XX,Y,cv=kf,scoring={\"neg_mean_squared_error\",\"r2\"})","7465100a":"#\u7cbe\u5ea6\nprint('Cross-Validation scores\uff08\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\u30fb\u6c7a\u5b9a\u4fc2\u6570\uff09:{}'.format(scores1))","eb14c1e0":"#ElasticNet\nfrom sklearn.linear_model import ElasticNet\nen=ElasticNet()\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import KFold\nkf=KFold(n_splits=5,shuffle=True)\n\nscores1 = cross_validate(en,XX,Y,cv=kf,scoring={\"neg_mean_squared_error\",\"r2\"})","e147f4db":"#\u7cbe\u5ea6\nprint('Cross-Validation scores\uff08\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\u30fb\u6c7a\u5b9a\u4fc2\u6570\uff09:{}'.format(scores1))","094ec0c8":"#ElasticNet\u306b\u3066\u7279\u5fb4\u91cf\u9078\u629e\nfrom sklearn.linear_model import ElasticNet\nestimator=ElasticNet()\n\nfrom sklearn.feature_selection import RFECV\nrfecv=RFECV(estimator,cv=3,scoring='neg_mean_absolute_error')","02466526":"rfecv.fit(XX,Y)","35e24ca8":"#\u7279\u5fb4\u91cf\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u8868\u793a\nprint('Feature ranking: \\n{}'.format(rfecv.ranking_))","6fbdb92f":"# \u7279\u5fb4\u6570\u3068\u30b9\u30b3\u30a2\u306e\u5909\u5316\u3092\u30d7\u30ed\u30c3\u30c8\nplt.plot(range(1, len(rfecv.grid_scores_) + 1), rfecv.grid_scores_)\nplt.show()","05f2f59d":"rfecv.support_","3cac71b0":"remove_idx = ~rfecv.support_\nremove_idx\nremove_feature = XX.columns[remove_idx]\nremove_feature\nXX2 = XX.drop(remove_feature, axis=1)\nXX2.head()","adefa22d":"#ElasticNet\nfrom sklearn.linear_model import ElasticNet\nen=ElasticNet()\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import KFold\nkf=KFold(n_splits=5,shuffle=True)\n\nscores1 = cross_validate(en,XX2,Y,cv=kf,scoring={\"neg_mean_squared_error\",\"r2\"})","4a81bb92":"#\u7cbe\u5ea6\nprint('Cross-Validation scores\uff08\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\u30fb\u6c7a\u5b9a\u4fc2\u6570\uff09:{}'.format(scores1))","b5bb0713":"from sklearn.ensemble import RandomForestRegressor\nrfr=RandomForestRegressor()\nkf=KFold(n_splits=5,shuffle=True)\nscores1 = cross_validate(rfr,XX,Y,cv=kf,scoring={\"neg_mean_squared_error\",\"r2\"})\nprint('Cross-Validation scores\uff08\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\u30fb\u6c7a\u5b9a\u4fc2\u6570\uff09:{}'.format(scores1))","c4e1bcd0":"#\u7279\u5fb4\u91cf\u306e\u91cd\u8981\u5ea6\u8a55\u4fa1\u3092\u884c\u3046\nrfr=rfr.fit(X,Y)\nfeature=rfr.feature_importances_\nprint('\u7279\u5fb4\u91cf:{}'.format(feature))\n","5a329a51":"\u7dda\u5f62\u56de\u5e30","3b18ceac":"ElasticNet","09f9a322":"\u30b9\u30c6\u30c3\u30d7\u30ef\u30a4\u30ba\u6cd5\u306b\u3088\u308b\u7279\u5fb4\u9078\u629e","069f42f6":"Ridge\u56de\u5e30","73c0ec5e":"Lasso\u56de\u5e30","345b182f":"\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8"}}