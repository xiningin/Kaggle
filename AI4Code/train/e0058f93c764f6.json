{"cell_type":{"f8b38eec":"code","d4df124f":"code","18f6a765":"code","9cb220ed":"code","e6f3e9d9":"code","59743812":"code","3ae118e8":"code","882a7be4":"code","4f91c4f9":"code","03909598":"code","f6ba46fd":"code","3d6bd02c":"code","2eb1d7d7":"code","d1424ed0":"code","5037e409":"code","1cfb5296":"code","276c8b3d":"code","71107774":"code","dc9eb63b":"code","daec2d5c":"code","43a2c555":"code","2659b659":"code","3a9efbf4":"code","2952f622":"code","560a3b70":"code","d03b2166":"code","79def7c8":"code","0c191657":"code","7789de9f":"code","322440df":"code","05861dc2":"code","3ac130c6":"code","e5da3b20":"code","7489d10b":"code","fd72e7f2":"markdown","76baa489":"markdown","0acab328":"markdown","b0db626b":"markdown","8b9ac76e":"markdown","580d57c7":"markdown","fe59a19a":"markdown","304021a6":"markdown","97ff91f2":"markdown","880b689d":"markdown","f2edd4af":"markdown","395137e8":"markdown","5aebbd1c":"markdown","e72b1f50":"markdown","1d63dfc5":"markdown","4948dd95":"markdown","11836ad4":"markdown","ea83ff59":"markdown","a1452747":"markdown","660e5880":"markdown","88144864":"markdown","32957be0":"markdown","4c4a2789":"markdown","479cc6d1":"markdown","5c8490b1":"markdown","43431109":"markdown","ae8d0c22":"markdown","6b86687c":"markdown","63789ffb":"markdown","ffa44047":"markdown","cf81deb1":"markdown","2e8c4738":"markdown","694dfd8b":"markdown","0ff6b1b8":"markdown","14b3df3e":"markdown","bf181723":"markdown"},"source":{"f8b38eec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n#LIBRERIAS ADICIONALES\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px #Viz","d4df124f":"productos_df = pd.read_excel('\/kaggle\/input\/productos-consumo-masivo\/output - Kaggle.xlsx', decimal=',')\nproductos_df ","18f6a765":"#Tipo de variables\ntype(productos_df)\nproductos_df.dtypes","9cb220ed":"productos_df.info()","e6f3e9d9":"#Explorar datos de variable prod_unit_price\nproductos_df['prod_unit_price'].describe()","59743812":"#eliminar columnas que no se utilizaran\nproductos_df = productos_df.drop('prod_icon',1)\nproductos_df = productos_df.drop('source_type',1)\nproductos_df = productos_df.drop('prod_units',1)\nproductos_df","3ae118e8":"# Group by Proveedor\nproveedor_groups = productos_df.groupby(\"prod_source\")\n# Apply mean function to wieght column\ncount_proveedor = proveedor_groups['prod_unit_price'].mean()\ncount_proveedor\n","882a7be4":"sns.barplot(count_proveedor, count_proveedor.index, palette=\"Greys\")\nplt.title(\"Precio promedio por producto de cada Proveedor\", fontsize=20) # seting the title size\nplt.xlabel(\"Promedio por producto\", fontsize=12) # seting the \nplt.ylabel(\"Proveedor\", fontsize=12) # seting the ","4f91c4f9":"subcategory_count_df = productos_df.groupby([\"subcategory\"])[\"prod_unit_price\"]. mean()\nsubcategory_count_df","03909598":"sns.barplot(subcategory_count_df.values, subcategory_count_df.index, palette=\"icefire\")\nplt.title(\"Frecuencia Subcategorias vs precio promedio por producto\", fontsize=20) # seting the title size\nplt.xlabel(\"Promedio por producto\", fontsize=12) # seting the \nfig=plt.gcf()\nfig.set_size_inches(15,12)\nplt.show()\n\n","f6ba46fd":"a= productos_df[(productos_df['subcategory'] == 'Despensa')]\nDespensa_df= a.sort_values(\"prod_unit_price\", ascending=False)[:5]\nDespensa_df\n","3d6bd02c":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in a.prod_brand)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=3000, background_color=\"Black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.title(\"Marcas (Brand) mas frecuentes subcategoria Despensa\", fontsize=24)\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","2eb1d7d7":"counts = a.prod_brand.value_counts()\nmost_frequent_category_names = counts[:10].index.tolist()\nmost_frequent_category_counts = counts[:10].values.tolist()\n\n\nsns.barplot(most_frequent_category_names,most_frequent_category_counts,palette='icefire')\nplt.title('Top 10 Marcas (Brand) con mayor Frecuencia de las subcategoria Belleza', fontsize=20)\nplt.xlabel('')\nfig=plt.gcf()\nfig.set_size_inches(15,9)\nplt.show()\n","d1424ed0":"counts [:10]","5037e409":"#Top 5 productos de la Marca destacada MAGGI comparando su precio\nmaggi = productos_df[(productos_df['prod_brand'] == 'MAGGI')]\nmaggi_df = pd.DataFrame({'mean' : maggi.groupby(['prod_name']).prod_unit_price.max()}).reset_index()\nmaggi_df = maggi_df.sort_values(['mean'],ascending=False).reset_index(drop=True)\norder_maggi = maggi['prod_name'][:5]\nplt.figure(figsize = (12, 5))\nplt.title('Top 5 productos de la marca MAGGI y sus respectivos precios unitarios',size=18)\nsns.boxplot(x=\"prod_unit_price\", y=\"prod_name\", data=maggi, order= order_maggi ,palette='icefire')\n","1cfb5296":"\n# Different category distributions por tama\u00f1o\ndata = pd.DataFrame({'std' : a[a['date'] == 20190709].groupby(['subcategory', 'tags']).size()}).reset_index()\nfig = px.treemap(data, path=['subcategory', 'tags'], values='std')\nfig.show()\n","276c8b3d":"belleza= productos_df[(productos_df['subcategory'] == 'Belleza')]\nbelleza_df= belleza.sort_values(\"prod_unit_price\", ascending=False)[:5]\nbelleza_df","71107774":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in belleza.prod_brand)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=3000, background_color=\"Black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.title(\"Marcas (Brand) mas frecuentes subcategoria Belleza\", fontsize=24)\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","dc9eb63b":"counts_belleza = belleza.prod_brand.value_counts()\nmost_frequent_category_names_belleza = counts_belleza[:10].index.tolist()\nmost_frequent_category_counts_belleza = counts_belleza[:10].values.tolist()\n\n\nsns.barplot(most_frequent_category_names_belleza,most_frequent_category_counts_belleza,palette='icefire')\nplt.title('Top 10 Marcas (Brand) con mayor Frecuencia de las subcategoria Belleza', fontsize=20)\nplt.xlabel('')\nfig=plt.gcf()\nfig.set_size_inches(15,8)\nplt.show()","daec2d5c":"counts_belleza [:10]","43a2c555":"#Top 5 productos de la Marca destacada VOGUE comparando su precio\nvogue = productos_df[(productos_df['prod_brand'] == 'VOGUE')]\nvogue_df = pd.DataFrame({'mean' : vogue.groupby(['prod_name']).prod_unit_price.max()}).reset_index()\nvogue_df = vogue_df.sort_values(['mean'],ascending=False).reset_index(drop=True)\norder_vogue = vogue['prod_name'][:5]\nplt.figure(figsize = (10, 5))\nplt.title('Top 5 productos de la marca VOGUE y sus respectivos precios unitarios',size=18)\nsns.boxplot(x=\"prod_unit_price\", y=\"prod_name\", data=vogue, order= order_vogue ,palette='icefire')\n","2659b659":"# Different category distributions por tama\u00f1o\ndata_belleza = pd.DataFrame({'std' : belleza[belleza['date'] == 20190709].groupby(['subcategory', 'tags']).size()}).reset_index()\nfig = px.treemap(data_belleza, path=['subcategory', 'tags'], values='std')\nfig.show()\n","3a9efbf4":"vinos= productos_df[(productos_df['subcategory'] == 'Vinos y Licores')]\nvinos_df= vinos.sort_values(\"prod_unit_price\", ascending=False)[:5]\nvinos_df","2952f622":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in vinos.prod_brand)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=3000, background_color=\"Black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.title(\"Marcas (Brand) mas frecuentes de la subcategoria Vinos y Licores\", fontsize=24)\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","560a3b70":"counts_vinos = vinos.prod_brand.value_counts()\nmost_frequent_category_names_vinos = counts_vinos[:10].index.tolist()\nmost_frequent_category_counts_vinos = counts_vinos[:10].values.tolist()\n\n\nsns.barplot(most_frequent_category_names_vinos,most_frequent_category_counts_vinos,palette='icefire')\nplt.title('Top 10 Marcas (Brand) con mayor Frecuencia de las subcategoria Vinos y Licores', fontsize=20)\nplt.xlabel('')\nfig=plt.gcf()\nfig.set_size_inches(20,10)\nplt.show()","d03b2166":"counts_vinos [:10]","79def7c8":"#Top 5 productos de la Marca destacada NECTAR comparando su precio\nnectar = productos_df[(productos_df['prod_brand'] == 'NECTAR')]\nnectar_df = pd.DataFrame({'mean' : nectar.groupby(['prod_name']).prod_unit_price.max()}).reset_index()\nnectar_df = nectar_df.sort_values(['mean'],ascending=False).reset_index(drop=True)\norder_nectar = nectar['prod_name'][:5]\nplt.figure(figsize = (12, 5))\nplt.title('Top 5 productos de la marca NECTAR y sus respectivos precios unitarios',size=18)\nsns.boxplot(x=\"prod_unit_price\", y=\"prod_name\", data=nectar, order= order_nectar ,palette='icefire')\n","0c191657":"\n# Different category distributions por tama\u00f1o\ndata_vinos = pd.DataFrame({'std' : vinos[vinos['date'] == 20190709].groupby(['subcategory', 'tags']).size()}).reset_index()\nfig = px.treemap(data_vinos, path=['subcategory', 'tags'], values='std')\nfig.show()\n\n","7789de9f":"charcuteria= productos_df[(productos_df['subcategory'] == 'Charcuter\u00eda')]\ncharcuteria_df= charcuteria.sort_values(\"prod_unit_price\", ascending=False)[:5]\ncharcuteria_df","322440df":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in charcuteria.prod_brand)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=3000, background_color=\"Black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.title(\"Marcas (Brand) mas frecuentes subcategoria Vinos y Licores\", fontsize=24)\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","05861dc2":"counts_charcuteria = charcuteria.prod_brand.value_counts()\nmost_frequent_category_names_charcuteria = counts_charcuteria[:10].index.tolist()\nmost_frequent_category_counts_charcuteria = counts_charcuteria[:10].values.tolist()\n\n\nsns.barplot(most_frequent_category_names_charcuteria,most_frequent_category_counts_charcuteria,palette='icefire')\nplt.title('Top 10 Marcas (Brand) con mayor Frecuencia de las subcategoria Charcuteria', fontsize=20)\nplt.xlabel('')\nfig=plt.gcf()\nfig.set_size_inches(18,10)\nplt.show()","3ac130c6":"counts_charcuteria [:10]","e5da3b20":"#Top 5 productos de la Marca destacada CENTURION FOODS comparando su precio\ncenturion = productos_df[(productos_df['prod_brand'] == 'CENTURION FOODS')]\ncenturion_df = pd.DataFrame({'mean' : nectar.groupby(['prod_name']).prod_unit_price.max()}).reset_index()\ncenturion_df = centurion_df.sort_values(['mean'],ascending=False).reset_index(drop=True)\norder_centurion = centurion['prod_name'][:5]\nplt.figure(figsize = (15, 5))\nplt.title('Top 5 productos de la marca CENTURION FOODS y sus respectivos precios unitarios',size=18)\nsns.boxplot(x=\"prod_unit_price\", y=\"prod_name\", data=centurion, order= order_centurion ,palette='icefire')","7489d10b":"# Different category distributions por tama\u00f1o\ndata_charcuteria = pd.DataFrame({'std' : charcuteria[charcuteria['date'] == 20190709].groupby(['subcategory', 'tags']).size()}).reset_index()\nfig = px.treemap(data_charcuteria, path=['subcategory', 'tags'], values='std')\nfig.show()\n","fd72e7f2":"# Top 5 Productos de la marca NECTAR con mayor frecuencia de la subcategoria \"Vinos y Licores\"","76baa489":"Teniendo en cuenta el an\u00e1lisis realizado a las 13 variables se decide eliminar 3 de ellas (prod_icon, source_type y Prod_units) de la base, debido a que no entregan informaci\u00f3n relevante a la exploraci\u00f3n.","0acab328":"# Las variables reflejan que son de tipo:\n* Cuantitativa\/num\u00e9rico-discreto en enteros (int64) las denominadas \"date\", \"prod_id\" y \"source_type\".\n* Cuantitativa\/num\u00e9rico-continuo en decimales (float64) la denominada \"prod_unit_price\".\n* Cualitativo\/categ\u00f3rico-nominal (object) las denominadas \"prod_name\", \"prod_name_long\", \"prod_btand\", \"category\", \"subcategory\", \"tags\", \"prod_units\", \"prod_icon\" y \"prod_source\".","b0db626b":"# Top 10 Marcas (Brands) con mayor frecuencia de la subcategoria \"Belleza\"","8b9ac76e":"# 3.1. VARIABLES\n\n\nIncialmente se aplica una exploraci\u00f3n en los tipos de datos de cada una de las variables.","580d57c7":"# Distribuci\u00f3n por tama\u00f1o de la categoria \"Belleza\" en cada uno de los \"tags\"","fe59a19a":"# Distribuci\u00f3n por tama\u00f1o de la categoria \"Charcuteria\" en cada uno de los \"tags\"","304021a6":"# 3.3.4. Subcategor\u00eda: *Charcuteria*","97ff91f2":"# Top 5 Productos de la marca MAGGI con mayor frecuencia de la subcategoria \"Despensa\"","880b689d":"Al aplicar una primera revisi\u00f3n de los datos, se aprecia que se tienen 25638 filas con 13 columnas (variables).\n","f2edd4af":"# 3.3.2. Subcategor\u00cda: *Belleza*","395137e8":" # **3.3. SUBCATEGOR\u00cdAS**\n\nSe realiza exploraci\u00f3n de las subcategorias (subcategory) y el precio unitario de los productos (prod_unit_price), con el fin de obtener el promedio por producto e identificar las 2 subcategorias con el precio mas alto y las 2 subcategorias con el mas bajo.","5aebbd1c":"# **3.2. PROVEEDORES**\n\nLa columna \"product_source\" nos indica el proveedor de cada producto, siendo dos las opciones, proveedor AMARILLO y proveedor VERDE.\n\nSe evalu\u00f3 el promedio del precio por producto en cada uno de los dos proveedores (Amarillo y Verde), destacando un costo promedio mas alto del proveedor AMARILLO. ","e72b1f50":"# Top 10 Marcas (Brands) con mayor frecuencia de la subcategoria \"Belleza\"","1d63dfc5":"De este modo se aprecia que las subcategorias con mayor promedio en el precio por producto son:\n* Vinos y licores\n* Charcuteria\n\nPor otro lado las subcategorias con menor promedio de precio por producto son:\n* Despensa\n* Belleza\n\n\n\nUna vez identificadas las 4 subcategor\u00edas objetivo, se procede a realizar una exploraci\u00f3n mas detallada de las mismas.","4948dd95":"\n\nEl presente notebook muestra la exploraci\u00f3n de la base de datos de consumo masivo, contando con tres objetivos principales.\n\n\n# **1. OBJETIVOS**\n* Llevar a cabo una exploraci\u00f3n de los datos con el fin de analizar los diferentes aspectos, tendencias y caracter\u00edsticas de consumo que se logren identificar a trav\u00e9s de dicha exploraci\u00f3n.\n* Identificar y explorar las 2 subcategorias que tienen un precio por producto medio mas alto.\n* Identificar y explorar las 2 subcategorias que tienen un precio por producto medio mas bajo.","11836ad4":"En la variable de precio por unidad de producto (prod_unit_price), se aprecia una gran variaci\u00f3n de precios de los productos con un maximo de 990000 y una media de 16180 aproximadamente, teniendo 25633 precios diferentes.","ea83ff59":"# 3.3.3. Subcategor\u00eda: *Vinos y Licores*","a1452747":"# Distribuci\u00f3n por tama\u00f1o de la categoria \"Despensa\" en cada uno de los \"tags\"","660e5880":"El anterior diagrama de palabras permite visualizar que las marcas sobresalientes son:\n* VOGUE\n* MASGLO\n* VITU\n* LANDER\n* SHOCK","88144864":"El anterior diagrama de palabras permite visualizar que las marcas sobresalientes son:\n* EL REY\n* MAGGI\n* LA MU\u00d1ECA\n* DORIA\n* SAN JORGE","32957be0":"# Top 10 Marcas (Brands) con mayor frecuencia de la subcategoria \"Vinos y Licores\"","4c4a2789":"# Top 10 Marcas (Brands) con mayor frecuencia de la subcategoria \"Vinos y Licores\"","479cc6d1":"# Top 5 Productos de la marca CENTURION FOODS con mayor frecuencia de la subcategoria \"Charcuteria\"","5c8490b1":"# Top 5 Productos de la marca VOGUE con mayor frecuencia de la subcategoria \"Belleza\"","43431109":"# **2. LIBRER\u00cdAS**","ae8d0c22":"# Top 10 Marcas (Brands) con mayor frecuencia de la subcategoria \"Charcuteria\"","6b86687c":"# Top 10 Marcas (Brands) con mayor frecuencia de la subcategoria \"Charcuteria\"","63789ffb":"# Top 10 Marcas (Brands) con mayor frecuencia de la subcategoria \"Despensa\"\n","ffa44047":"El anterior diagrama de palabras permite visualizar que las marcas sobresalientes son:\n* NECTAR\n* GATO NEGRO\n* ANTIOQUE\u00d1O\n* UNDURRAGA\n* SANTA HELENA","cf81deb1":"# **4. CONCLUSIONES**\n\n- Se destaca que el proveedor AMARILLO tiene un promedio de precios por unidad (21801.26) ligeramente mayor al proveedor VERDE (15869.72), al realizar una comparaci\u00f3n con el promedio general presentado en el an\u00e1lisis, el promedio amarillo esta por encima del promedio general, caso contrario al promedio verde que esta por debajo del mismo.\n- En la subcategoria con mayor promedio de precios \"Vinos y Licores\", aunque su tag con mayores productos hace referencias a productos tipo \"vinos\", en la frecuencia de Marcas no se destacan tanto, esto debido a que las marcas de vinos tienen mayor variedad que las marcas de aguardiente (Nectar, Antioque\u00f1o); de modo que las Marcas de aguardiente disponen de 4 o 5 productos en comparaci\u00f3n a cada marca de vino que cuenta con mas de 15 tipos de productos.\n- La subcategoria con menor promedio \"Despensa\", se evidencia que las tres marcas principales MAGGI, EL REY y DORIA tienen valores de frecuencias similares, por lo cual el n\u00famero de productos de estas tres marca es similar. En relaci\u00f3n a esto estas marcas representan un tandem de consumo en la subcategoria ya mencionada.\n- Para la subcategoria \"Charcuteria\", la cual cuenta con segundo mayor promedio de precios unitarios, se observa que las marcas Centurion Foods y Premium Choice que tienen caracteristicas similares en funci\u00f3n a el promedio de precio y a la poblaci\u00f3n objetivo que abordan, tienen una diferencia significativa sobre las demas marcadas relacionadas en el top 10 de la subcategoria de Charcuteria.   \n- Para la subcategoria \"Belleza\", contando con segundo menor promedio de precios unitarios se evidencia que la marca Vogue tiene un monopolio de consumo basado en las diferencias abismales que se observan en las cifras entregadas en el top 10 de la subcategoria belleza, adicional a eso dentro del diagramas de distribuci\u00f3n por tama\u00f1o el maquillaje ocupa mas de un 60% de los consumos descritos en el diagrama lo que refuerza el comportamiento observado.\n- En terminos generales se puede concluir que en el an\u00e1lisis realizado a las subcategorias mencionadas, se observa un consumo determinado por las marcas de tradici\u00f3n. No obstante hay un segmento de marcas que se reparten el resto del mercado y se encuentran por debajo del promedio, porlo que las mismas son importantes para los consumidores por que ofrecen una calidad que incentiva su consumo.","2e8c4738":"# Top 10 Marcas (Brands) con mayor frecuencia de la subcategoria \"Despensa\"","694dfd8b":"# Distribuci\u00f3n por tama\u00f1o de la categoria \"Vinos y Licores\" en cada uno de los \"tags\"","0ff6b1b8":"El anterior diagrama de palabras permite visualizar que las marcas sobresalientes son:\n* CENTURION FOODS \n* PREMIUM CHOICE\n* LA FACTORIA\n* COLANTA\n* VILA SECA","14b3df3e":"# **3. EXPLORACI\u00d3N DE DATOS**","bf181723":"# 3.3.1. Subcategor\u00cda: *Despensa*"}}