{"cell_type":{"b597a417":"code","5fa6e2ef":"code","4b63a93f":"code","aef08459":"code","102d8018":"code","f68ccf6c":"code","a151becb":"code","c0c7753f":"code","5553ad9a":"code","e4fff624":"code","719e9a26":"code","c1479c7b":"code","77ea9d52":"code","cc90770b":"code","aee31e13":"code","a5e1256c":"code","9600c0f4":"code","9293e870":"code","ed40ee57":"code","897ef088":"markdown","8abab5ce":"markdown","7ccf8ba1":"markdown","1b6983f6":"markdown","cee28ab9":"markdown","9a16e3d2":"markdown","d7326c03":"markdown","5697b61b":"markdown","ae6350a7":"markdown","d7f85250":"markdown"},"source":{"b597a417":"import matplotlib.pyplot as plt\nplt.rcParams['figure.figsize']=[16,9]\nimport seaborn as sns","5fa6e2ef":"from sklearn.datasets import load_digits","4b63a93f":"digits=load_digits()\ndir(digits)","aef08459":"# digits.DESCR","102d8018":"display(digits.data)\ndisplay(digits.data.shape)\ndisplay(digits.data[:2])\ndisplay(digits.data[0].shape)","f68ccf6c":"matfig = plt.figure(figsize=(20,9))\nplt.matshow(digits.data, fignum=1, aspect='auto', interpolation='nearest', cmap='coolwarm')","a151becb":"display(digits.feature_names[:4])\ndisplay(len(digits.feature_names))","c0c7753f":"# Actual name\ndisplay(digits.images)\ndisplay(digits.images.shape)\ndisplay(digits.images[0])\ndisplay(digits.images[0].shape)","5553ad9a":"plt.figure(figsize=(4,4))\nplt.gray()\nplt.matshow(digits.images[0], fignum=1, aspect='auto', interpolation='nearest')","e4fff624":"display(digits['target'])\ndisplay(digits['target'].shape) # equal to image\ndisplay(digits['target_names'])","719e9a26":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(digits.data,digits.target,test_size=0.2)","c1479c7b":"from sklearn.linear_model import LogisticRegression\nmodel=LogisticRegression(solver='liblinear').fit(x_train,y_train)\ny_predict=model.predict(x_test)\ndisplay(model.score(x_test,y_test))\ndisplay(model.predict_proba(x_test))","77ea9d52":"plt.figure(figsize=(16,6))\nsns.boxplot(x=y_test,y=y_predict)\nplt.ylabel('y-predict',fontsize=24)\nplt.xlabel('y-test',fontsize=24)","cc90770b":"# fig, ax =plt.subplots(1,2,figsize=(25,35)) \nfig,(ax1,ax2) = plt.subplots(1,2,figsize=(16,6))\nax1.set_xlabel('y_predict',fontsize=24)\nsns.histplot(y_predict,ax=ax1)\nax2.set_xlabel('y_test',fontsize=24)\nsns.histplot(y_test,ax=ax2)","aee31e13":"from sklearn.metrics import confusion_matrix\ncon_max=confusion_matrix(y_test,y_predict)\ncon_max","a5e1256c":"sns.heatmap(con_max,annot=True)\nplt.xlabel('y-test',fontsize=24)\nplt.ylabel('y-predict',fontsize=24)","9600c0f4":"# index=randrange(digits.images.shape[0])\n# from random import randrange\n# print(randrange(10))\nimport random\nindex=random.randint(0,digits.images.shape[0])\nplt.figure(figsize=(4,4))\nplt.matshow(digits.images[index])","9293e870":"digits.target[index]","ed40ee57":"model.predict([digits.data[index]])","897ef088":"Above Diagram tell that when \n\nour y-test is 5 but our model predicted it as 9 (1 time)\n\ny-test  our_model  times\n\n1       8           1\n\n8       9           2 ....\n\nDiagonal also tell the how many time's our model predicted correctly\n","8abab5ce":"# Diagram","7ccf8ba1":"# Check with sklearn Confusion matrix\n\nfrom sklearn.metrics import confusion_matrix","1b6983f6":"# Load","cee28ab9":"# Train Test split","9a16e3d2":"# Logistic Regression","d7326c03":"# Logistic Regression using In-build dataset load_digits in sklearn","5697b61b":"# Double Check Our Model with Image data","ae6350a7":"# View","d7f85250":"# Conclusion\n\nHence Proved"}}