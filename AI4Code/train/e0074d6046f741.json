{"cell_type":{"90e06aee":"code","64a1d290":"code","8d93ed4d":"code","030f0a7e":"code","dd39fe5a":"code","32734f51":"code","491939a1":"code","b71e5f56":"code","a5a271a3":"code","455bd7f7":"code","19cdd89b":"code","d2cbabb1":"code","92985298":"code","88c1c8b7":"code","da1a97a7":"code","a3e401d4":"code","91080787":"code","4a16ca82":"code","64e97c33":"code","ea416d89":"code","7062661c":"code","e2322749":"code","6e4af345":"code","fbb9113e":"code","ea85b88a":"markdown","9424ea1b":"markdown","a4f3fbe5":"markdown","0f5d9fc7":"markdown","4908857b":"markdown","e8dd0ef6":"markdown","322cb894":"markdown","1d16ec6b":"markdown","6b6a62ca":"markdown","4d70f833":"markdown","3984c90a":"markdown","fdbec3c5":"markdown","0737e67f":"markdown","b4241ea0":"markdown"},"source":{"90e06aee":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statsmodels.api as sm\nimport statsmodels.tsa.api as smt\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX\nfrom sklearn.metrics import mean_squared_log_error as RMSLE\nfrom statsmodels.tsa.seasonal import STL\nfrom datetime import datetime","64a1d290":"import warnings\nwarnings.filterwarnings(\"ignore\")","8d93ed4d":"train = pd.read_csv('..\/input\/bri-data-hackathon-cr-optimization\/train.csv')\ntrain['periode'] = pd.to_datetime(train['periode'])\ntrain = train.set_index(train['periode'], drop=True).asfreq('D')\n\ntrain.drop(['periode', 'cr_ketetapan_total_bkn_sum'], axis=1, inplace=True)","030f0a7e":"train.head()","dd39fe5a":"train[train.kas_kantor.isna()]","32734f51":"# Deal with nan values\ntrain.kas_kantor = train.kas_kantor.fillna(train.kas_kantor.shift(1).rolling(7, min_periods=2).mean())\ntrain.kas_echannel = train.kas_echannel.fillna(train.kas_echannel.shift(1).rolling(7, min_periods=2).mean())","491939a1":"corr = train.corr()\n\n# Generate a mask for the upper triangle\nmask = np.triu(np.ones_like(corr, dtype=bool))\nf, ax = plt.subplots(figsize=(11, 9))\nsns.heatmap(corr, mask=mask, cmap='BrBG', vmin=-1, vmax=1, annot=True)","b71e5f56":"#Plot kas_kantor and kas_echannel\nfig, (ax1, ax2) = plt.subplots(1, 2)\n\ntrain['kas_kantor'].plot(ax = ax1)\nax1.set_title('kas kantor')\n\nax2 = train['kas_echannel'].plot()\nax2.set_title('kas_echannel')","a5a271a3":"holiday_2019 = pd.to_datetime([datetime(2019, 8, 11),\n                datetime(2019, 8, 17), datetime(2019, 9, 1), datetime(2019, 11, 9),\n                datetime(2019, 12, 24), datetime(2019, 12, 25)])\n\nholiday_2020 = pd.to_datetime([datetime(2020, 1, 1), datetime(2020, 1, 25), datetime(2020, 3, 22),\n                datetime(2020, 3, 25), datetime(2020, 4, 10), datetime(2020, 5, 1),\n                datetime(2020, 5, 7), datetime(2020, 5, 21), datetime(2020, 5, 22),\n                datetime(2020, 5, 24), datetime(2020, 5, 25), datetime(2020, 6, 1),\n                datetime(2020, 7, 31), datetime(2020, 8, 17), datetime(2020, 8, 20),\n                datetime(2020, 8, 21), datetime(2020, 10, 28), datetime(2020, 10, 29),\n                datetime(2020, 10, 30), datetime(2020, 12, 9), datetime(2020, 12, 24),\n                datetime(2020, 12, 25), datetime(2020, 12, 31),])","455bd7f7":"holiday_idx = holiday_2019.union(holiday_2020)\n\ntrain['is_weekend'] = [1 if x.weekday() == 6 or x.weekday() == 5 else 0 for x in train.index]\ntrain['is_holiday'] = [1 if x in holiday_idx else 0 for x in train.index]\n\nweekend_idx = train.index[train.is_weekend == 1]","19cdd89b":"def highlight_datetimes(indices, ax, color, alpha=.3):\n    i = 0\n    while i < len(indices)-1:\n        ax.axvline(indices[i] , color=color, alpha=alpha)\n        i += 1","d2cbabb1":"fig, ax = plt.subplots()\ntrain.kas_echannel.plot(ax=ax)\nhighlight_datetimes(holiday_idx, ax, color='purple')","92985298":"fig, ax = plt.subplots(figsize=(15,15))\ntrain.kas_echannel.plot(ax=ax)\nhighlight_datetimes(weekend_idx, ax, color='green')","88c1c8b7":"#Decompose Kas e-channel\nstl_echannel = STL(train.kas_echannel)\nresult_echannel = stl_echannel.fit()\n\nseasonal_echannel, trend_echannel, resid_echannel = (result_echannel.seasonal, \n                                                     result_echannel.trend, \n                                                     result_echannel.resid)\n\nfig, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(10,10))\nax1.plot(train.kas_echannel)\nax1.set_title('Original Series')\n\nax2.plot(trend_echannel)\nax2.set_title('Trend')\n\nax3.plot(seasonal_echannel)\nax3.set_title('Seasonal')\n\nax4.plot(resid_echannel)\nax4.set_title('Residual')","da1a97a7":"#Lets calculate the tolerance value from the residual, here I assume any value which is lower or higher 3 times \n#std deviation of residual values are anomaly\n\nresid_mu = resid_echannel.mean()\nresid_dev = resid_echannel.std()\n\nlower = resid_mu - 3*resid_dev\nupper = resid_mu + 3*resid_dev\n\nanomalies = train.kas_echannel[(resid_echannel<lower) | (resid_echannel>upper)]","a3e401d4":"fig, ax = plt.subplots()\nax.plot(resid_echannel)\nax.axhline(lower, linestyle='--', color='grey', alpha=0.3)\nax.axhline(upper, linestyle='--', color='grey', alpha=0.3)\nax.set_title('residual plot')","91080787":"fig, ax = plt.subplots(figsize=(7,7))\nax.plot(train.kas_echannel)\nax.plot(seasonal_echannel+trend_echannel)\nax.legend(['Original', 'Estimated'])\nax.scatter(anomalies.index, anomalies, color='r', marker='D')\nax.set_title('original kas_echannel and estimated e_channel')","4a16ca82":"fig, ax = plt.subplots(figsize=(7,7))\nax.plot(train.kas_echannel)\nax.plot(seasonal_echannel+trend_echannel)\nax.legend(['Original', 'Estimated'])\nax.scatter(anomalies.index, anomalies, color='r', marker='D')\nax.set_title('original kas_echannel and estimated e_channel')\nhighlight_datetimes(holiday_idx, ax, color='green')","64e97c33":"fig, ax = plt.subplots()\ntrain.kas_kantor.plot(ax=ax)\nhighlight_datetimes(holiday_idx, ax, color='purple')","ea416d89":"stl_kantor = STL(train.kas_kantor)\nresult_kantor = stl_kantor.fit()\n\nseasonal_kantor, trend_kantor, resid_kantor = (result_kantor.seasonal, \n                                                     result_kantor.trend, \n                                                     result_kantor.resid)\n\nfig, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(7,7))\nax1.plot(train.kas_kantor)\nax1.set_title('Original Series')\n\nax2.plot(trend_kantor)\nax2.set_title('Trend')\n\nax3.plot(seasonal_kantor)\nax3.set_title('Seasonal')\n\nax4.plot(resid_kantor)\nax4.set_title('Residual')","7062661c":"#Lets calculate the tolerance value from the residual, here I assume any value which is lower or higher 3 times \n#std deviation of residual values are anomaly\n\nresid_mu = resid_kantor.mean()\nresid_dev = resid_kantor.std()\n\nlower = resid_mu - 3*resid_dev\nupper = resid_mu + 3*resid_dev\n\nanomalies = train.kas_kantor[(resid_kantor<lower) | (resid_kantor>upper)]","e2322749":"fig, ax = plt.subplots()\nax.plot(resid_kantor)\nax.axhline(lower, linestyle='--', color='grey', alpha=0.3)\nax.axhline(upper, linestyle='--', color='grey', alpha=0.3)\nax.set_title('residual plot')","6e4af345":"fig, ax = plt.subplots(figsize=(7,7))\nax.plot(train.kas_kantor)\nax.plot(seasonal_kantor+trend_kantor)\nax.legend(['Original', 'Estimated'])\nax.scatter(anomalies.index, anomalies, color='r', marker='D')\nax.set_title('original kas_echannel and estimated e_channel')","fbb9113e":"fig, ax = plt.subplots(figsize=(7,7))\nax.plot(train.kas_kantor)\nax.plot(seasonal_kantor+trend_kantor)\nax.legend(['Original', 'Estimated'])\nax.scatter(anomalies.index, anomalies, color='r', marker='D')\nax.set_title('original kas_kantor and estimated kas_kantor')\nhighlight_datetimes(holiday_idx, ax, color='green')","ea85b88a":"I think it is harder to tell wether holiday affect kas kantor or not from the graph. Lets decompose it using STL Decomposition","9424ea1b":"We could tell that some of those anomalies are caused by holiday effect.","a4f3fbe5":"From the plot, it seems that there is a pattern, in the weekend we have high value of kas echannel, then it drops in the weekday. It seems that seasonality is occured. Lets prove it with STL decomposition.","0f5d9fc7":"From the plot I could tell that Holiday does affect the kas kantor too, then Holiday effect could be used as exogenous variables in Sarimax. \n\nThats all for this Notebook. Hope to see your feedback.","4908857b":"We would like to know wether those anomaly is cause by holiday effect or other effect. We can prove it by depict it in graph","e8dd0ef6":"Lets repeat the same process for Kas Kantor and detect the anomalies","322cb894":"# Preprocess and Get Insight","1d16ec6b":"It is obvious to say that kas_kantor has strong upward trend, but it is not clear wether there are trend in kas_echannel. We can prove it with Dickey-Fuller test and STL Decomposition. \n\nI want to add holiday effect and weekend effect in my data for the exogenous feature. I have a list of all Indonesia's public holiday in 2019 and 2020, starting from 2019 August","6b6a62ca":"We have a weekly seasonality, and it seems that we have an upward trend near the end. Next, I want to see the residual value and see which time point could be considered unusual or anomaly","4d70f833":"# Anomaly Detection on Kas Kantor","3984c90a":"From the correlation matrix above, we could tell that there are no strong correlation of any features with kas_kantor and kas_echannel. So in this notebook I will use univariate analysis.","fdbec3c5":"If we see from the graph, mostly when it is holiday, there will be spike for the kas_echannel. For now, lets assume Holiday does affect the kas echannel, and we it could be used as exogenous feature in the SARIMA model. But we could see stronger evidence in residual plot. Now lets plot kas echannel with weekend effect.","0737e67f":"There are 3 days missing in the data given. Those are 6 June 2020, 24 June 2020, and 27 August 2020. My strategy is to impute it with 7 days average value","b4241ea0":"# Anomaly Detection on Kas e-channel"}}