{"cell_type":{"a065c43a":"code","29fd831d":"code","a1b36c20":"code","a4b2f9b4":"code","94a06f78":"code","414313c0":"code","22f42d8a":"code","34818355":"code","03d21d65":"code","ebeadf77":"code","bcec2235":"code","dafcc247":"code","a968dbd3":"code","bfadd1e3":"code","be013fea":"code","1fce8785":"code","b6971ab0":"code","1cc9b64e":"code","f737e1c3":"code","92e17596":"code","47d15451":"code","ae4c8e84":"code","672f13ca":"markdown"},"source":{"a065c43a":"!pip install xgboost","29fd831d":"import pandas as pd\nimport xgboost as xgb","a1b36c20":"dataset = pd.read_csv('..\/input\/titanic\/train.csv')\n","a4b2f9b4":"null_columns=dataset.columns[dataset.isnull().any()]\ndataset[null_columns].isnull().sum()","94a06f78":"#drop unimportant features\ndf_dataset = dataset.drop('Cabin', axis=1).drop('Name', axis=1).drop('Ticket', axis=1)","414313c0":"df_dataset['Age'].fillna((df_dataset['Age'].mean()), inplace=True)","22f42d8a":"X_dataset = df_dataset.drop('Survived', axis=1).drop('PassengerId', axis=1)\ny_dataset = df_dataset[['Survived']]","34818355":"#gets test columns based on train featured columns\ncolumns = X_dataset.columns\nvalidation=pd.read_csv('..\/input\/titanic\/test.csv')\ndf_validation = validation[columns]\ndf_validation.head()","03d21d65":"df_validation['Age'].fillna((df_dataset['Age'].mean()), inplace=True)","ebeadf77":"X_dataset =  pd.get_dummies(X_dataset)\n\nX_validation= df_validation\nX_validation =  pd.get_dummies(X_validation)","bcec2235":"from sklearn import preprocessing\n#min-Max Scaler\nmin_max_scaler = preprocessing.MinMaxScaler()\n\n#transform main set\nX_dataset_values = X_dataset.values \nX_dataset_values_scaled = min_max_scaler.fit_transform(X_dataset_values)\nX_dataset_values_scaled = pd.DataFrame(X_dataset_values_scaled)\n\n#transform validation set\nX_validation_values = X_validation.values\nX_validation_values_scaled = min_max_scaler.transform(X_validation_values)\nX_validation_values_scaled = pd.DataFrame(X_validation_values_scaled)","dafcc247":"from sklearn.model_selection import train_test_split, StratifiedKFold, RandomizedSearchCV\n\n#X_train, X_test, y_train, y_test = train_test_split(X_dataset_values_scaled, y_dataset, test_size=0.1)\n","a968dbd3":"# A parameter grid for XGBoost\nparams = {\n        'min_child_weight': [1, 5, 10],\n        'gamma': [0.5, 1, 1.5, 2, 5],\n        'subsample': [0.6, 0.8, 1.0],\n        'colsample_bytree': [0.6, 0.8, 1.0],\n        'max_depth': [3, 4, 5]\n        }","bfadd1e3":"xgb_model = xgb.XGBClassifier(learning_rate=0.02, n_estimators=600, objective='binary:logistic',\n                    silent=True, nthread=1)","be013fea":"folds = 3\nparam_comb = 5\n\nX = X_dataset_values_scaled\nY = y_dataset\n\nskf = StratifiedKFold(n_splits=folds, shuffle = True)\n\nrandom_search = RandomizedSearchCV(xgb_model, param_distributions=params, n_iter=param_comb, scoring='roc_auc', n_jobs=4, cv=skf.split(X,Y), verbose=3)\nrandom_search.fit(X, Y)","1fce8785":"print('\\n Best estimator:')\nprint(random_search.best_estimator_)","b6971ab0":"xgb_model_final = random_search.best_estimator_","1cc9b64e":"#xgb_model.fit(X_train, y_train)","f737e1c3":"#TEST_SPLIT_CASE\n#from sklearn.metrics import classification_report, confusion_matrix, accuracy_score, roc_auc_score\n\n#y_hat = xgb_model.predict(X_test)\n#print(\"Roc AUC: \", roc_auc_score(y_test, xgb_model.predict_proba(X_test)[:,1],\n#              average='macro'))\n#print(confusion_matrix(y_test,y_hat))\n#print(classification_report(y_test,y_hat))","92e17596":"y_hat_sub = xgb_model_final.predict(X_validation_values_scaled)\ny_hat_sub = pd.DataFrame(y_hat_sub)\ny_hat_sub.shape","47d15451":"validation['Survived'] = y_hat_sub","ae4c8e84":"validation[['PassengerId','Survived']].to_csv('submission_final.csv',index=False)","672f13ca":"## Model"}}