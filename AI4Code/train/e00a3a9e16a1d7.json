{"cell_type":{"b24a4ab8":"code","df2566cc":"code","d39717cc":"code","94de3d2b":"code","3de875f1":"code","3ad706f4":"code","3b362109":"code","d3882312":"code","750b22f1":"code","69ae6121":"code","fe372f9d":"code","8e05b930":"code","70a0e91c":"code","a52ff3b8":"code","819d4767":"code","b3b89b38":"code","ba542989":"code","e5801275":"code","282b347a":"code","2fa2d281":"code","cbc50bb0":"code","df7d1679":"code","89b370cd":"code","23d9f536":"code","4a1f3727":"code","d6e1e693":"code","c19d63da":"code","920076a4":"code","ffae38c7":"code","5753f2e5":"code","4ca7fd26":"code","68a6b6e6":"code","a3e7c5e4":"code","4825d210":"code","726ac971":"code","4402c2ed":"code","a88cd21f":"code","fd1d6bcd":"code","53d79bd4":"code","8b919b99":"code","e39ca5c2":"code","b2744697":"code","ff2451d4":"code","79aacc76":"code","62c6f1a0":"code","c9152fb7":"code","4bbcceea":"code","bbb02acb":"code","a7f7096e":"code","d2e1c4b1":"code","255aa8b4":"code","22401d67":"code","cd2a7750":"code","43a13103":"code","3d8f595c":"markdown","fffa6291":"markdown","73011fb3":"markdown","e49ec6d3":"markdown","4070a8db":"markdown","b0e682b8":"markdown","a550c9ab":"markdown","c75222e1":"markdown","54e28d62":"markdown","7213af77":"markdown","034e5bd1":"markdown","36e80396":"markdown","c4ef0717":"markdown","aaf61217":"markdown","95635d77":"markdown","c3e64cbf":"markdown","6d08dd03":"markdown","c4eebbf6":"markdown","c43e3425":"markdown","00a37d37":"markdown","161b1aa9":"markdown","edb6a8c5":"markdown","bdb138c3":"markdown","5c41aa8f":"markdown","9963eb20":"markdown","bbeb07f3":"markdown","29475014":"markdown"},"source":{"b24a4ab8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","df2566cc":"data = pd.read_csv(\"\/kaggle\/input\/fifa19\/data.csv\")","d39717cc":"data.head()","94de3d2b":"data.shape","3de875f1":"def country_list_player(country_name):\n    country = data[data[\"Nationality\"]==country_name][[\"Name\", \"Age\", \"Overall\", \"Potential\", \"Position\", \"Club\", \"Jersey Number\"]]\n    return country","3ad706f4":"print(country_list_player(\"Greece\").shape)\ncountry_list_player(\"Greece\")","3b362109":"import matplotlib.pyplot as plt\nimport seaborn as sns","d3882312":"nation_ = data[\"Nationality\"].value_counts()","750b22f1":"nation_","69ae6121":"index = data.index\npercentage_of_diff_country = (nation_ \/ len(index)) * 100","fe372f9d":"sns.set(style=\"darkgrid\", palette='Set1')\npercentage_of_diff_country[:20].plot(kind=\"bar\", figsize=(20,5), color='green')\nplt.ylabel(\"Percentage\");","8e05b930":"col_name = []\nfor col in data.columns:\n    col_name.append(col)\nprint(col_name)","70a0e91c":"def club_stat(name_of_club):\n    club = data[data[\"Club\"]==name_of_club][[\"Name\", \"Age\", \"Value\", \"Wage\", \"Special\", \"International Reputation\"]].sort_values(\"International Reputation\", ascending=False)\n    return club","a52ff3b8":"club_stat(\"FC Barcelona\")","819d4767":"club_stat(\"Paris Saint-Germain\")","b3b89b38":"def change_form_of_value(Value):\n    change = Value.replace(\"\u20ac\", \"\")\n    if \"M\" in change:\n        change = float(change.replace(\"M\",\"\"))*1000000\n    elif \"K\" in change:\n        change = float(change.replace(\"K\", \"\")) * 1000\n    return float(change)","ba542989":"data[\"Value\"] = data[\"Value\"].apply(lambda x: change_form_of_value(x))","e5801275":"data[\"Wage\"] = data[\"Wage\"].apply(lambda x: change_form_of_value(x))","282b347a":"print(data[\"Wage\"].head())\nprint(data[\"Value\"].head())","2fa2d281":"data[\"International Reputation\"].fillna(data[\"International Reputation\"].mean(), inplace=True)\ndata[\"Curve\"].fillna(data[\"Curve\"].mean(), inplace=True)\ndata[\"ShotPower\"].fillna(data[\"ShotPower\"].mean(), inplace=True)\ndata[\"Jumping\"].fillna(data[\"Jumping\"].mean(), inplace=True)\ndata[\"Stamina\"].fillna(data[\"Stamina\"].mean(), inplace=True)\ndata[\"Strength\"].fillna(data[\"Strength\"].mean(), inplace=True)\n\ndata[\"LongShots\"].fillna(data[\"LongShots\"].mean(), inplace=True)\ndata[\"Aggression\"].fillna(data[\"Aggression\"].mean(), inplace=True)\ndata[\"Interceptions\"].fillna(data[\"Interceptions\"].mean(), inplace=True)\ndata[\"Positioning\"].fillna(data[\"Positioning\"].mean(), inplace=True)\ndata[\"Vision\"].fillna(data[\"Vision\"].mean(), inplace=True)\ndata[\"Penalties\"].fillna(data[\"Penalties\"].mean(), inplace=True)\ndata[\"Composure\"].fillna(data[\"Composure\"].mean(), inplace=True)\ndata[\"Marking\"].fillna(data[\"Marking\"].mean(), inplace=True)\ndata[\"StandingTackle\"].fillna(data[\"StandingTackle\"].mean(), inplace=True)\ndata[\"SlidingTackle\"].fillna(data[\"SlidingTackle\"].mean(), inplace=True)\ndata[\"GKDiving\"].fillna(data[\"GKDiving\"].mean(), inplace=True)\ndata[\"GKHandling\"].fillna(data[\"GKHandling\"].mean(), inplace=True)\ndata[\"GKKicking\"].fillna(data[\"GKKicking\"].mean(), inplace=True)\ndata[\"GKPositioning\"].fillna(data[\"GKPositioning\"].mean(), inplace=True)\ndata[\"GKReflexes\"].fillna(data[\"GKReflexes\"].mean(), inplace=True)\n\ndata[\"Crossing\"].fillna(data[\"Crossing\"].mean(), inplace=True)\ndata[\"Finishing\"].fillna(data[\"Finishing\"].mean(), inplace=True)\ndata[\"HeadingAccuracy\"].fillna(data[\"HeadingAccuracy\"].mean(), inplace=True)\ndata[\"ShortPassing\"].fillna(data[\"ShortPassing\"].mean(), inplace=True)\ndata[\"Volleys\"].fillna(data[\"Volleys\"].mean(), inplace=True)\ndata[\"Dribbling\"].fillna(data[\"Dribbling\"].mean(), inplace=True)\ndata[\"FKAccuracy\"].fillna(data[\"FKAccuracy\"].mean(), inplace=True)\ndata[\"LongPassing\"].fillna(data[\"LongPassing\"].mean(), inplace=True)\ndata[\"BallControl\"].fillna(data[\"BallControl\"].mean(), inplace=True)\ndata[\"Acceleration\"].fillna(data[\"Acceleration\"].mean(), inplace=True)\ndata[\"SprintSpeed\"].fillna(data[\"SprintSpeed\"].mean(), inplace=True)\ndata[\"Agility\"].fillna(data[\"Agility\"].mean(), inplace=True)\ndata[\"Reactions\"].fillna(data[\"Reactions\"].mean(), inplace=True)\ndata[\"Balance\"].fillna(data[\"Balance\"].mean(), inplace=True)\n\ndata[\"Jersey Number\"].fillna(8, inplace=True)\ndata[\"Joined\"].fillna('Jan 1, 2004', inplace=True)\ndata[\"Contract Valid Until\"].fillna('Jan 1, 2019', inplace=True)","cbc50bb0":"data.columns[data.isnull().any()]","df7d1679":"sns.countplot(x=\"Preferred Foot\", data=data)\nplt.title(\"Player count of Left and Right foot\");","89b370cd":"plt.subplots(figsize=(16,8))\nsns.countplot(x=\"Height\", data=data)\nplt.title(\"Player count of various Height\");","23d9f536":"sns.lmplot(data = data, x = 'Age', y = 'SprintSpeed', lowess=True,line_kws={'color':'black'}, scatter_kws={'alpha':0.01})","4a1f3727":"df = ['Name', 'Age', 'Nationality', 'Club', 'Overall', 'Potential', 'Value', 'Wage', 'Special', 'Preferred Foot', 'International Reputation', 'Weak Foot', 'Skill Moves', 'Work Rate', 'Body Type', 'Real Face', 'Position', 'Jersey Number', 'Joined', 'Loaned From', 'Contract Valid Until', 'Height', 'Weight', 'LS', 'ST', 'RS', 'LW', 'LF', 'CF', 'RF', 'RW', 'LAM', 'CAM', 'RAM', 'LM', 'LCM', 'CM', 'RCM', 'RM', 'LWB', 'LDM', 'CDM', 'RDM', 'RWB', 'LB', 'LCB', 'CB', 'RCB', 'RB', 'Crossing', 'Finishing', 'HeadingAccuracy', 'ShortPassing', 'Volleys', 'Dribbling', 'Curve', 'FKAccuracy', 'LongPassing', 'BallControl', 'Acceleration', 'SprintSpeed', 'Agility', 'Reactions', 'Balance', 'ShotPower', 'Jumping', 'Stamina', 'Strength', 'LongShots', 'Aggression', 'Interceptions', 'Positioning', 'Vision', 'Penalties', 'Composure', 'Marking', 'StandingTackle', 'SlidingTackle', 'GKDiving', 'GKHandling', 'GKKicking', 'GKPositioning', 'GKReflexes', 'Release Clause']","d6e1e693":"new_dataset = pd.DataFrame(data, columns=df)","c19d63da":"new_dataset.head()","920076a4":"print(new_dataset.shape)","ffae38c7":"new_dataset.iloc[new_dataset.groupby(new_dataset['Position'])['Potential'].idxmax()][['Position', 'Name', 'Age', 'Value', 'Club', 'Nationality']]","5753f2e5":"country_list = [\"Brazil\" , \"Argentina\", \"Italy\", \"Germany\", \"Spain\", \"Columbia\", \"France\", \"Uruguay\", \"Prtugal\", \"Denmark\"]\ncountry_vs_age = new_dataset.loc[new_dataset[\"Nationality\"].isin(country_list) & data[\"Age\"]]","4ca7fd26":"plt.subplots(figsize=(10,6))\nsns.barplot(x=country_vs_age[\"Nationality\"], y=country_vs_age[\"Age\"], data=new_dataset)\nplt.title(\"Some countries and their player age\");","68a6b6e6":"club_list = [\"FC Barcelona\" , \"Real Madrid\", \"Juventus\", \"Paris Saint-Germain\", \"Manchester City\", \"Manchester United\", \"Chelsea\", \"Napoli\", \"Arsenal\", \"Liverpool\"]\nclub_vs_wage = new_dataset.loc[new_dataset[\"Club\"].isin(club_list) & new_dataset[\"Wage\"]]","a3e7c5e4":"plt.subplots(figsize=(10,10))\nsns.barplot(x=club_vs_wage[\"Club\"], y=club_vs_wage[\"Wage\"], data=new_dataset)\nplt.title(\"Some club and their player age\");\nplt.xticks(rotation=-40);","4825d210":"# df = new_dataset.groupby([new_dataset[\"Name\", \"Age\", \"Value\", \"Club\"])[]\n\ndf2 = new_dataset.groupby([\"Name\", \"Value\", \"Club\", \"Nationality\"])[\"Age\"].sum()\\\n.groupby([\"Name\", \"Club\", \"Nationality\"]).max().sort_values()\n# .groupby([\"Age\"]).sum().sort_values(ascending=False)","726ac971":"young_club = pd.DataFrame(df2)","4402c2ed":"young_club.head(20)","a88cd21f":"df2 = new_dataset.groupby([\"Name\", \"Value\", \"Club\", \"Nationality\"])[\"Age\"].sum()\\\n.groupby([\"Name\", \"Club\", \"Nationality\"]).max().sort_values(ascending=False)","fd1d6bcd":"eldest_age_club = pd.DataFrame(df2)","53d79bd4":"eldest_age_club.head(20)","8b919b99":"def ComparePlayer(*argv):\n#     Stamina\n#     Finishing\n#     Dribbling\n#     Balance\n#     ShotPower\n#     Strength\n    name_1 = argv[0]\n    name_2 = argv[1]\n    Name_1_data = new_dataset.loc[(new_dataset[\"Name\"]==name_1)].reset_index(drop=True)\n    Name_2_data = new_dataset.loc[(new_dataset[\"Name\"]==name_2)].reset_index(drop=True)\n    print(Name_1_data.Overall)\n    print(Name_2_data.Overall)\n    \n    \n    ","e39ca5c2":"ComparePlayer(\"K. De Bruyne\", \"L. Messi\")","b2744697":"def player(name):\n    club_nem = new_dataset.loc[(new_dataset[\"Name\"]==name)]  \n    pd.set_option('display.max_columns', 200)\n    return club_nem","ff2451d4":"player(\"Neymar Jr\").T","79aacc76":"new_dataset.columns","62c6f1a0":"import datetime\nnow = datetime.datetime.now()\nnew_dataset['Joining_year'] = new_dataset.Joined.dropna().map(lambda x:x.split(\",\")[1].split(\" \")[1])\nnew_dataset[\"Memebership_year\"] = (new_dataset.Joining_year.dropna().map(lambda x:now.year - int(x)).astype(int))","c9152fb7":"year_of_membership = new_dataset[[\"Name\", \"Club\", \"Memebership_year\"]].sort_values(\"Memebership_year\", ascending=False).head(20)\nyear_of_membership.set_index(\"Name\", inplace=True)","4bbcceea":"year_of_membership","bbb02acb":"player_feature = new_dataset[['Position','Acceleration', 'Agility', 'Balance', 'BallControl',\n       'ShotPower', 'Jumping', 'Crossing', 'LongShots',\n       'Aggression', 'Interceptions', 'Positioning', 'Penalties',\n       'Composure', 'StandingTackle', 'SlidingTackle', 'GKDiving',\n       'GKHandling', 'GKKicking', 'GKPositioning', 'GKReflexes']]","a7f7096e":"player_feature.head()","d2e1c4b1":"feature_of_player = ('Acceleration', 'Agility', 'Balance', 'BallControl',\n       'ShotPower', 'Jumping', 'Crossing', 'LongShots',\n       'Aggression', 'Interceptions', 'Positioning', 'Penalties',\n       'Composure', 'StandingTackle', 'SlidingTackle', 'GKDiving',\n       'GKHandling', 'GKKicking', 'GKPositioning', 'GKReflexes', 'Crossing')","255aa8b4":"i = 0\nwhile i < len(feature_of_player):\n    print('Best {0} : {1}'.format(feature_of_player[i],new_dataset.loc[new_dataset[feature_of_player[i]].idxmax()][0]))\n    i+=1","22401d67":"for i, val in player_feature.groupby(player_feature[\"Position\"])[feature_of_player].mean().iterrows():\n    print(\"Position Of Player in {}: {}, {}, {}, {}\".format(i, *tuple(val.nlargest(4).index)))","cd2a7750":"from math import pi\nidx = 1\nplt.figure(figsize=(15,45))\nfor position_name, features in new_dataset.groupby(new_dataset[\"Position\"])[feature_of_player].mean().iterrows():\n    top_features = dict(features.nlargest(5))\n    \n    categories = top_features.keys()\n    N = len(categories)\n    \n    values = list(top_features.values())\n    values += values[:1]\n    \n    angles =[n \/ float(N) * 2 * pi for n in range(N)]\n    angles += angles[:1]\n    \n    ax = plt.subplot(9, 3, idx, polar=True)\n    \n    plt.xticks(angles[:-1], categories, color='grey', size=8)\n    \n    ax.set_rlabel_position(0)\n    plt.yticks([25,50,75], [\"25\", \"50\", \"75\"], color=\"grey\", size=7)\n    plt.ylim(0, 100)\n    \n    plt.subplots_adjust(hspace = 0.5)\n    \n    ax.plot(angles, values, linewidth=1, linestyle=\"solid\")\n    \n    ax.fill(angles, values, 'b', alpha=0.1)\n    \n    plt.title(position_name, size=11, y=1.1)\n    \n    idx += 1","43a13103":"new_dataset.groupby(new_dataset[\"Overall\"])[\"Name\", \"Age\"].max().sort_values(\"Overall\", ascending=False).head(10)","3d8f595c":"## Player with different height","fffa6291":"## Fill the null values","73011fb3":"## Some top club vs wage","e49ec6d3":"Shape of Dataset","4070a8db":"Country And Players","b0e682b8":"## Top 4 feature with position...\nIn that position this skills must","a550c9ab":"## Age increase, sprintspeed decrease","c75222e1":"## Left foot VS Right foot players","54e28d62":"## Calculate The Percentage","7213af77":"## Check the percentage of player from different country","034e5bd1":"## Best Player with best feature","36e80396":"## Convert wage and value to float by replace M and K and Euro Sign","c4ef0717":"## Player from different Club","aaf61217":"## List all the Column Name","95635d77":"## Club membership joining year till today ","c3e64cbf":"## Definning those skills","6d08dd03":"## search by player name, to get full bio","c4eebbf6":"## Compare Two FootBaller","c43e3425":"## Import Dataset","00a37d37":"## Create newdataset with feature of a player ","161b1aa9":"Create new framework exclude some data","edb6a8c5":"Visualize for 20 countries","bdb138c3":"Different Player and their positions","5c41aa8f":"## Young player in club","9963eb20":"## Eldest player in club","bbeb07f3":"## Diffeeent Country players","29475014":"## Top Football Countries and player ages..."}}