{"cell_type":{"87c7b534":"code","831bbb55":"code","7734d8ed":"code","aca87535":"markdown"},"source":{"87c7b534":"import csv\nimport pandas as pd # not key to functionality of kernel\n\nsub_files = ['..\/input\/ensembling-m13-0-736\/sub_ens.csv',\n             '..\/input\/rxt50-448-rxt50-384-c-bb-lb-0-718\/submission.csv',\n            '..\/input\/ensembling-with-averaged-probabilties-0-701-lb\/submission.csv']\n\n\n# Weights of the individual subs\nsub_weight = [0.736**2, # public lb score (local cv would be better)\n              0.718**2,\n             0.701**2] # public lb score (local cv would be better)","831bbb55":"abc = pd.read_csv(sub_files[0])\nxyz = pd.read_csv(sub_files[1])\n\nprint(abc.head())\nprint(xyz.head())","7734d8ed":"Hlabel = 'Image' \nHtarget = 'Id'\nnpt = 5 # number of places in target\n\nplace_weights = {}\nfor i in range(npt):\n    place_weights[i] = ( 1 \/ (i + 1) )\n    \nprint(place_weights)\n\nlg = len(sub_files)\nsub = [None]*lg\nfor i, file in enumerate( sub_files ):\n    ## input files ##\n    print(\"Reading {}: w={} - {}\". format(i, sub_weight[i], file))\n    reader = csv.DictReader(open(file,\"r\"))\n    sub[i] = sorted(reader, key=lambda d: str(d[Hlabel]))\n\n## output file ##\nout = open(\"sub_ens.csv\", \"w\", newline='')\nwriter = csv.writer(out)\nwriter.writerow([Hlabel,Htarget])\n\nfor p, row in enumerate(sub[0]):\n    target_weight = {}\n    for s in range(lg):\n        row1 = sub[s][p]\n        for ind, trgt in enumerate(row1[Htarget].split(' ')):\n            target_weight[trgt] = target_weight.get(trgt,0) + (place_weights[ind]*sub_weight[s])\n    tops_trgt = sorted(target_weight, key=target_weight.get, reverse=True)[:npt]\n    writer.writerow([row1[Hlabel], \" \".join(tops_trgt)])\nout.close()","aca87535":"Ensembling can be a valuable tool for combining the insights of many different machine learning models.  Given the nature of this problem (rank the 5 most likely), a different ensembling algorithm than mere averaging must be used.  Here, I employ an ensembling algorithm that was recently very successful in a recent image recognition competition, [Quick! Draw! Doodle Recognition Challenge](https:\/\/www.kaggle.com\/c\/quickdraw-doodle-recognition\/discussion\/73738)."}}