{"cell_type":{"1f53c4c5":"code","be25883e":"code","a04907b4":"code","420c5dd1":"code","164fc5ae":"code","5b4c1466":"code","1ada4636":"code","e2e2455f":"code","7a2af17d":"code","66735c0f":"code","982158da":"code","260423f8":"code","ffb03aa4":"code","4ab0e38e":"code","b900a4e2":"code","ca34f6cf":"code","700a27f8":"code","ca5c73a7":"code","cf08d935":"code","f02c780b":"code","cb5342d8":"code","82191ce6":"code","46676b15":"code","0d3a9f46":"code","34076a4f":"code","ce64e2c5":"markdown","f46cae89":"markdown","f7c289b8":"markdown","52e4068f":"markdown","13678f69":"markdown","e63960cb":"markdown","5c46d5a7":"markdown","cefc24d6":"markdown","947c323e":"markdown","1cd753fa":"markdown","c281bd8b":"markdown","749599bb":"markdown","94d04f85":"markdown","1351b3c4":"markdown","cc2734d1":"markdown","21ff7b08":"markdown"},"source":{"1f53c4c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfrom glob import glob\nimport tensorflow as tf\nfrom tensorflow.keras.applications import VGG16, ResNet101\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator, img_to_array\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.layers import *\nfrom tensorflow.keras.metrics import categorical_accuracy, top_k_categorical_accuracy\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport cv2\n\nimport h5py\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","be25883e":"folder = glob('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/*')","a04907b4":"img = cv2.imread('..\/input\/chest-xray-pneumonia\/chest_xray\/test\/PNEUMONIA\/person109_bacteria_526.jpeg')\nplt.imshow(img, cmap=plt.cm.bone)","420c5dd1":"IMAGE_SIZE = [224,224]","164fc5ae":"vgg = VGG16(input_shape = IMAGE_SIZE + [3], weights='imagenet', include_top=False)\n\nfor layer in vgg.layers:\n    layer.trainable = False","5b4c1466":"x = Flatten()(vgg.output)\npreds = Dense(512, activation='relu')(x)\npredictions = Dense(len(folder), activation='softmax')(preds)\n\nvgg_model = Model(inputs=vgg.input, outputs=predictions)","1ada4636":"vgg_model.compile(loss='categorical_crossentropy',\n  optimizer='adam',\n  metrics=[categorical_accuracy])","e2e2455f":"test_datagen = ImageDataGenerator(rescale = 1.\/255)\n#For train data\ntrain_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)","7a2af17d":"train_set = train_datagen.flow_from_directory('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/', \n                                                            target_size = (224, 224),\n                                                                batch_size = 32, \n                                                            class_mode = 'categorical'\n                                                )\n# for test data\ntest_set = test_datagen.flow_from_directory('..\/input\/chest-xray-pneumonia\/chest_xray\/test\/',\n                                            target_size = (224, 224),\n                                            batch_size = 32,\n                                            class_mode = 'categorical'\n                                           )","66735c0f":"filepath = \"vgg16_model.h5\"\ncheckpoint = tf.keras.callbacks.ModelCheckpoint(filepath, monitor='val_categorical_accuracy', verbose=1, \n                             save_best_only=True, mode='max')\n\nreduce_lr = tf.keras.callbacks.ReduceLROnPlateau(monitor='val_categorical_accuracy', factor=0.5, patience=2, \n                                   verbose=1, mode='max', min_lr=0.00001)\n                              \n                              \ncallbacks_list = [checkpoint, reduce_lr]\n\nhistory = vgg_model.fit_generator(train_set, steps_per_epoch=len(train_set), \n                              #class_weight=class_weights,\n                    validation_data=test_set,\n                    validation_steps=len(test_set),\n                    epochs=1, verbose=1,\n                   callbacks=callbacks_list)","982158da":"y_pred = vgg_model.predict_generator(test_set)","260423f8":"y_pred = np.argmax(y_pred, axis=1)\ny_pred","ffb03aa4":"test_set.class_indices","4ab0e38e":"batch_size = 32\nval_steps = np.ceil(len(test_set) \/ batch_size)\n\nval_loss, val_cat_acc = \\\nvgg_model.evaluate_generator(test_set, \n                        steps=val_steps)\n\nprint('val_loss:', val_loss)\nprint('val_cat_acc:', val_cat_acc)","b900a4e2":"vgg_model.load_weights('vgg16_model.h5')\n\nval_loss, val_cat_acc = \\\nvgg_model.evaluate_generator(test_set, \n                        steps=val_steps)\n\nprint('val_loss:', val_loss)\nprint('val_cat_acc:', val_cat_acc)","ca34f6cf":"from sklearn.metrics import confusion_matrix, classification_report\n\ncm = confusion_matrix(test_set.classes,y_pred)\ncm","700a27f8":"tn, fp, fn, tp = cm.ravel()\nprint('False Positives : {}'.format(fp))\nprint('False Negatives: {}'. format(fn))\nprint('True Positives : {}'.format(tp))","ca5c73a7":"sns.heatmap(cm, annot=True, cmap='coolwarm')","cf08d935":"print('The Classification Report : \\n{}'.format(classification_report(test_set.classes,y_pred)))","f02c780b":"from skimage import io\nfrom keras.preprocessing import image\n#path='imbalanced\/Scratch\/Scratch_400.jpg'\nimg = image.load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/test\/PNEUMONIA\/person109_bacteria_527.jpeg', grayscale=False, target_size=(224, 224))\nshow_img=image.load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/test\/PNEUMONIA\/person109_bacteria_527.jpeg', grayscale=False, target_size=(224, 224))\ndisease_class=['Normal','Pneumonia']\nx = image.img_to_array(img)\nx = np.expand_dims(x, axis = 0)\nx \/= 255\n\ncustom = vgg_model.predict(x)\nprint(custom[0])\n\nplt.imshow(show_img)\nplt.show()\n\na=custom[0]\nind=np.argmax(a)\n        \nprint('Prediction:',disease_class[ind])","cb5342d8":"# End of Model Building\n### ===================================================================================== ###\n# Convert the Model from Keras to Tensorflow.js","82191ce6":"!pip install tensorflowjs\n!pip install --upgrade pip","46676b15":"os.mkdir('tfjs_dir')\n\n# convert to Tensorflow.js\nimport tensorflowjs as tfjs\n\ntfjs.converters.save_keras_model(vgg_model, 'tfjs_dir')","0d3a9f46":"!ls","34076a4f":"os.listdir('tfjs_dir')","ce64e2c5":"# Loading Dataset\n\n**To get all the categories under the train folder path in a list we use a glob method.**","f46cae89":"# Image Preprocessing and Augmentation","f7c289b8":"**`loss = 'categorical_crossentropy'` as our model is going to predict either pneumonia or normal case based on the images checked**","52e4068f":"# Loading Libraries","13678f69":"**Let's look at the labels to see what model is predicting, for this `test_set.class_indices` is used**","e63960cb":"**Loading the saved weights and checking the metrics**","5c46d5a7":"**Let's train the model using `fit_generator` method**","cefc24d6":"# Prediction of Images","947c323e":"**Now, let's remove the last layer**","1cd753fa":"# VGG-16\n\n**We start with loading the pretrained model of VGG-16, `IMAGE_SIZE` is set to 224x224 as the default size, `+ [3]` indicates including channels or depth as 3 i.e., RGB channel. `include_top=False` implies that the we will be only training 2 classes and not otherwise 1000 classess**\n\n**`for layer in vgg.layers:\n    layer.trainable = False` indicates that we wish not to retrain the layers of pretrained VGG-16 model**\n    \n![](https:\/\/neurohive.io\/wp-content\/uploads\/2018\/11\/vgg16-1-e1542731207177.png)","c281bd8b":"**So our model has a good accuracy on test dataset**","749599bb":"# Visualizing some Images","94d04f85":"**check the the directory containing the model is available**","1351b3c4":"# Confusion Matrix","cc2734d1":"**So while the model has less false negatives which is decent as failure in detecting a disease is worse**","21ff7b08":"# Introduction\n\n![](https:\/\/i.imgur.com\/jZqpV51.png)\n\n**The project flow is to be followed in 2 ways:**\n\n1. **Developing a Deep Learning Model using VGG and ResNet to get predictions**\n2. **Complete deployment using Tensorflow js**"}}