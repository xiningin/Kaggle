{"cell_type":{"6c0accb9":"code","3e4bb82c":"code","c1e1b95c":"code","2fbe16c9":"code","2dfb2a48":"code","612b5f42":"code","9e5c3f23":"code","7d3c97ae":"code","b1c3e7a3":"code","7e47c867":"code","6fc644bd":"code","e4b9fcda":"code","315ef110":"code","99f31be4":"code","716f0cd6":"code","6f381800":"code","79ee94d1":"code","3d6223e7":"code","a1ad955f":"code","3373ca40":"code","d54fd136":"code","5657b519":"code","94ca69fa":"code","8f39cf93":"code","797e1608":"markdown","847e8b71":"markdown","67d1e185":"markdown","f93d890d":"markdown","361e0d12":"markdown","0b90fb4c":"markdown","dc6cc997":"markdown"},"source":{"6c0accb9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3e4bb82c":"#=======================  IMPORTING LIBRARIES   ==========================#\nimport pandas as pd\nimport folium\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport matplotlib.font_manager\n%matplotlib inline\nfrom collections import Counter\nfrom geopy.geocoders import Nominatim\nfrom folium import plugins\nimport plotly.express as px\n\n\n#==============================   functions   ================================#\n\n#importing coordinates with accident address\n\ndef listaloc(X): \n    loc = X.copy()\n    lista = []\n    for i in loc:\n        location = geolocator.geocode(i)\n        if location == None:\n            pass\n        else:\n            # australia\n            if -60 <= location.latitude <= 35 and 70 <= location.longitude <= 200:\n                coor = [location.latitude, location.longitude]\n                lista.append(coor)\n            else:\n                pass\n    return lista\n","c1e1b95c":"#importando dados\ndf = pd.read_csv(\"..\/input\/shark-attack-dataset\/attacks.csv\")\ntype(df)\n#conection mapa\ngeolocator = Nominatim(user_agent=\"Shark\")","2fbe16c9":"df.columns","2dfb2a48":"#===================================   rename columns    ========================================#\ndf.rename(columns ={'Sex ':'Sex'},inplace=True)\ndf.rename(columns ={'Species ':'Species'},inplace=True)\ndf.rename(columns ={'Fatal (Y\/N)':'Fatal'},inplace=True)","612b5f42":"country = df['Country']\nCounter(country).most_common(5)","9e5c3f23":"country = country.dropna()\ntop_country = dict(Counter(country).most_common(10))\ny_count= (top_country.keys())\nx_count= top_country.values()\ny_pos_count = np.arange(len(y_count))\n#=========================================================#\n\nplt.style.use('bmh')\nplt.rcParams['figure.figsize'] = [12, 8]\nfig, ax = plt.subplots()\nax.barh(y_pos_count, x_count, align='center')\nax.set_yticks(y_pos_count)\nax.set_yticklabels(y_count)\nax.invert_yaxis()  \nax.set_xlabel('Number of cases')\nax.set(xlim=[0, 2500])\nax.set_title('Countries with the highest number of cases')\nplt.show()","7d3c97ae":"#analyzing data from australia\ndf = df[df.Country == \"AUSTRALIA\"]","b1c3e7a3":"#Missing values\ndf.isnull().sum()","7e47c867":"print(\"Fatal =\" ,dict(df['Fatal'].value_counts()))\nprint(\"Sex = \",dict(df['Sex'].value_counts()))\nprint(\"Area = \",dict(df['Area'].value_counts()))\nprint(\"Type = \",dict(df['Type'].value_counts()))","6fc644bd":"df['Year'].describe()","e4b9fcda":"#========================  removing missing values    ========================#\ndf.drop(['Unnamed: 22',\n         'Unnamed: 23',\n         'Case Number',\n         'Name',\n         'Investigator or Source',\n         'pdf',\n         'href formula',\n         'href',\n         'Case Number.1',\n         'Case Number.2',\n         'Injury',\n         'original order',\n         'Time',\n         'Date'], axis=1 , inplace=True)\ndf.drop(df.index[6401:] , inplace=True)\n#=========================================   Location    ===========================================#\ndf_loc = df[\"Location\"].dropna()\ndf_loc = df_loc.map('{},Australia'.format)\ndf_list_loc = sorted(set(list(df_loc)))\n#===================================    completing data    ======================================#\ndf[\"Sex\"].fillna('UNKNOWN', inplace = True)\ndf['Fatal'].fillna('UNKNOWN', inplace = True)\ndf['Activity'].fillna('UNKNOWN', inplace = True)\ndf['Location'].fillna('UNKNOWN', inplace = True)\ndf['Area'].fillna('UNKNOWN', inplace = True)\ndf['Age'].fillna('UNKNOWN', inplace = True)\ndf['Year'].fillna('UNKNOWN' , inplace = True)\ndf['Type'].fillna('UNKNOWN', inplace = True)\n#===================================   adjusting values    ========================================#\ndf = df.replace({'Sex':{'M ':'M','N':'M'}})\ndf = df.replace({'Year':{5:1936,0:1903, 'UNKNOWN':1936}})\ndf = df.replace({'Type':{'Invalid':'UNKNOWN',\n                         'Boat':'Watercraft',\n                         'Questionable':'UNKNOWN',\n                         'Unverified':'UNKNOWN'}})\ndf = df.replace({'Fatal':{' N':'N','N ':'N'}})\ndf = df.replace({'Area':{'Westerm Australia':'Western Australia',\n                     'Northern Territory ':'Northern Territory',\n                     'Victoria ':'Victoria',\n                     'Torres Strait ':'Torres Strait',\n                     'New South Wales ':'New South Wales',\n                     'Queensland ':'Queensland'}})\n#======================================   reset index    ===========================================#\ndf = df.reset_index()\ndf.drop(['index'], axis=1 , inplace=True)","315ef110":"#missing values\ndf.isnull().sum()","99f31be4":"#lista = listaloc(df_list_loc) #import coordenadas","716f0cd6":"mapa = folium.Map(location=[-25.27,133.77], #location australia\n                    tiles='Stamen Terrain',\n                    zoom_start=3.5,\n                    min_zoom = 3.5)","6f381800":"coor = pd.read_csv(\"..\/input\/shark-attack-dataset\/list_coor_australia.csv\")","79ee94d1":"mapa.add_child(plugins.HeatMap(coor))\nmapa","3d6223e7":"df","a1ad955f":"#============================   accidents \/ sex =================================#\nsex = df['Sex']\nsex = dict(sex.value_counts())\nSexo = list(sex.keys())\nQuant = list(sex.values())\nax=sns.barplot(x=Sexo, y=Quant, palette=\"bright\",).set(xlabel='Sex', ylabel='amount', \n                                                      title=\"Accidents by sex (AUSTRALIA)\")","3373ca40":"#============================  Survived \/ Died ================================#\nfatal = df['Fatal']\nfatal = dict(fatal.value_counts())\nFatal = list(fatal.keys())\nFatal[0]= \"Survived\"\nFatal[1]= \"Died\"\nQuant_fatal = list(fatal.values())\nPorcentagem = []\nexplode = (0.04,0.04,0.04)\nfor i in Quant_fatal:\n    Porcentagem.append(int(i * 100\/df['Fatal'].count()))\n    \nplt.rcParams['figure.figsize'] = [12, 8]\nplt.rcParams['font.size'] = 15\nfig1, ax1 = plt.subplots()\nax1.pie(Porcentagem, explode=explode, labels=Fatal, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.set_title('Survived \/ Died')\nplt.axis('equal')\nplt.legend(loc='upper right')","d54fd136":"year = dict(df['Year'].value_counts())\nyear = dict(sorted(year.items()))\nyear_cop=dict(year)\ntype(year_cop)\nfor x, y in year.items():\n    if x<1950:\n        del year_cop[x]\n    else:\n        pass\nax1=plt.plot(year_cop.keys(), year_cop.values(), 'b-')\nplt.title('Attacks per year')","5657b519":"sharkc = df.groupby(['Species'],as_index=False).size()\nsharkc = sharkc.sort_values(by=['size'], ascending=False)\nsharkc = sharkc[0:4]\nmlabels=['White shark','Tiger shark','Bull shark','Wobbegong shark']\nplt.pie(sharkc['size'],labels=mlabels,explode = (0.02,0.02,0.02,0.02),autopct='%1.1f%%')\nplt.title('Percentage share between the 4 most dangerous sharks in australia')\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nplt.legend(loc=2)","94ca69fa":"area = df['Area']\narea = dict(Counter(area).most_common(10))\ndel area['UNKNOWN']\nNSW = [-31.840233, 145.612793]\nQLD = [-23.0 ,143.0]\nWA = [-25.042261, 117.793221]\nSA = [-30.000233, 136.209152]\nVIC = [-37.020100,144.964600]\nTS = [-9.874829834 ,142.587664316]\nTAS =[-42.0, 147.0]\nNT = [ -19.491411, 132.550964]\nTOC = [-12.1709,  96.8417]\nColor= '#2F4F4F'\ntooltip=\"Click me\"\nprint(area)","8f39cf93":"m = folium.Map(location=[-25.27,133.77], #location australia\n                  tiles='openstreetmap',\n                  zoom_start=3.5,\n                  min_zoom = 3.5,)\nfolium.CircleMarker(\n    location=NSW,\n    radius=50,\n    popup=\"New South Wales:<b>496<b>\",\n    tooltip=tooltip,\n    color=Color,\n    fill=True,\n    fill_color=Color,\n).add_to(m)\nfolium.CircleMarker(\n    location=QLD,\n    radius=32,\n    popup=\"Queensland:<b>322<b>\",\n    tooltip=tooltip,\n    color=Color,\n    fill=True,\n    fill_color=Color,\n).add_to(m)\nfolium.CircleMarker(\n    location=WA,\n    radius=20,\n    popup=\"Western Australia:<b>196<b>\",\n    tooltip=tooltip,\n    color=Color,\n    fill=True,\n    fill_color=Color,\n).add_to(m)\nfolium.CircleMarker(\n    location=SA,\n    radius=11,\n    popup=\"South Australia:<b>104<b>\",\n    tooltip=tooltip,\n    color=Color,\n    fill=True,\n    fill_color=Color,\n).add_to(m)\nfolium.CircleMarker(\n    location=VIC,\n    radius=12,\n    popup=\"Victoria:<b>92<b>\",\n    tooltip=tooltip,\n    color=Color,\n    fill=True,\n    fill_color=Color,\n).add_to(m)\nfolium.CircleMarker(\n    location=TS,\n    radius=7,\n    popup=\"Torres Strait:<b>72<b>\",\n    tooltip=tooltip,\n    color=Color,\n    fill=True,\n    fill_color=Color,\n).add_to(m)\nfolium.CircleMarker(\n    location=TAS,\n    radius=8,\n    popup=\"Tasmania:<b>42<b>\",\n    tooltip=tooltip,\n    color=Color,\n    fill=True,\n    fill_color=Color,\n).add_to(m)\nfolium.CircleMarker(\n    location=NT ,\n    radius=6,\n    popup=\"Northern Territory':<b>25<b>\",\n    tooltip=tooltip,\n    color=Color,\n    fill=True,\n    fill_color=Color,\n).add_to(m)\nfolium.CircleMarker(\n    location=TOC,\n    radius=3,\n    popup=\"Territory of Cocos Islands:<b>1<b>\",\n    tooltip=tooltip,\n    color=Color,\n    fill=True,\n    fill_color=Color,\n).add_to(m)\nm","797e1608":"# Countries with the highest number of cases","847e8b71":"# Survived \/ Died","67d1e185":"# Most dangerous sharks in australia","f93d890d":"# Attacks per year","361e0d12":"# Cases by Australian States and Territories","0b90fb4c":"# Accident site","dc6cc997":"# Accidents by sex"}}