{"cell_type":{"38360853":"code","eeb76977":"code","99396edf":"code","6d760139":"code","185f06d7":"code","99da47ee":"code","9cd83710":"code","643e2ea2":"code","9fa0a14d":"code","010b5fc2":"code","c8e1224f":"code","c400e506":"code","b4ce8dcb":"code","da091de2":"code","f347a4e8":"code","50e9881a":"code","10124cde":"code","85b79c65":"code","b7179690":"code","30e2ad9a":"code","66e93a5d":"code","f53fc30d":"code","b3d3eb01":"code","b2986989":"code","ae8108c3":"code","134b9f04":"code","a6d01f8e":"code","673ca35d":"code","7416f84b":"code","64c4e484":"code","c9d0b996":"markdown","9f2c2621":"markdown","835b24bd":"markdown","b7122eb0":"markdown","e43d47ad":"markdown","140c60e0":"markdown","46e64c2a":"markdown","fbb900a3":"markdown","011b3911":"markdown","25f521f6":"markdown","7183612a":"markdown","c0818341":"markdown","1d0ad86c":"markdown","9976d090":"markdown","e0bee7de":"markdown","d259d8ce":"markdown","c173f258":"markdown","090d93a9":"markdown","655ec0f6":"markdown","97205cf4":"markdown","438eca46":"markdown","8c07f5df":"markdown","149bb4e0":"markdown","5cd11ebc":"markdown","46af51ff":"markdown","4e2bba47":"markdown","f4f5bdf7":"markdown","3d641be6":"markdown","ff030202":"markdown","39f666be":"markdown","4f299740":"markdown","c704f3de":"markdown","821bbe86":"markdown","0ad08866":"markdown","399697b1":"markdown","8a37e455":"markdown","db678c31":"markdown","56fab6b1":"markdown"},"source":{"38360853":"## Database Phase\nimport pandas as pd\nimport numpy as np\n\n#Visualization Phase\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib as mpl\nimport matplotlib.pylab as pylab\n%matplotlib inline\npd.set_option('display.max_columns', 500)\nmpl.style.use('ggplot')\nsns.set_style('white')\npylab.rcParams['figure.figsize'] = 12,8\n\n#ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')","eeb76977":"anime_data=pd.read_csv('..\/input\/anime-recommendations-database\/anime.csv')\nrating_data=pd.read_csv('..\/input\/anime-recommendations-database\/rating.csv')\n## print shape of dataset with rows and columns and information \nprint (\"The shape of the  data is (row, column):\"+ str(anime_data.shape))\nprint (anime_data.info())","99396edf":"print (\"The shape of the  data is (row, column):\"+ str(rating_data.shape))\nprint (rating_data.info())","6d760139":"anime_fulldata=pd.merge(anime_data,rating_data,on='anime_id',suffixes= ['', '_user'])\nanime_fulldata = anime_fulldata.rename(columns={'name': 'anime_title', 'rating_user': 'user_rating'})\nanime_fulldata.head()","185f06d7":"# Creating a dataframe for rating counts\ncombine_anime_rating = anime_fulldata.dropna(axis = 0, subset = ['anime_title'])\nanime_ratingCount = (combine_anime_rating.\n     groupby(by = ['anime_title'])['user_rating'].\n     count().\n     reset_index().rename(columns = {'rating': 'totalRatingCount'})\n    [['anime_title', 'user_rating']]\n    )\n\n\ntop10_animerating=anime_ratingCount[['anime_title', 'user_rating']].sort_values(by = 'user_rating',ascending = False).head(10)\nax=sns.barplot(x=\"anime_title\", y=\"user_rating\", data=top10_animerating, palette=\"Dark2\")\nax.set_xticklabels(ax.get_xticklabels(), fontsize=11, rotation=40, ha=\"right\")\nax.set_title('Top 10 Anime based on rating counts',fontsize = 22)\nax.set_xlabel('Anime',fontsize = 20) \nax.set_ylabel('User Rating count', fontsize = 20)","99da47ee":"anime_fulldata = anime_fulldata.merge(anime_ratingCount, left_on = 'anime_title', right_on = 'anime_title', how = 'left')\nanime_fulldata = anime_fulldata.rename(columns={'user_rating_x': 'user_rating', 'user_rating_y': 'totalratingcount'})","9cd83710":"duplicate_anime=anime_fulldata.copy()\nduplicate_anime.drop_duplicates(subset =\"anime_title\", \n                     keep = 'first', inplace = True)","643e2ea2":"top10_animemembers=duplicate_anime[['anime_title', 'members']].sort_values(by = 'members',ascending = False).head(10)\nax=sns.barplot(x=\"anime_title\", y=\"members\", data=top10_animemembers, palette=\"gnuplot2\")\nax.set_xticklabels(ax.get_xticklabels(), fontsize=11, rotation=40, ha=\"right\")\nax.set_title('Top 10 Anime based on members',fontsize = 22)\nax.set_xlabel('Anime',fontsize = 20) \nax.set_ylabel('Community Size', fontsize = 20)","9fa0a14d":"plt.figure(figsize = (15, 7))\nplt.subplot(1,2,1)\nanime_fulldata['rating'].hist(bins=70)\nplt.title(\"Rating of websites\")\nplt.subplot(1,2,2)\nanime_fulldata['user_rating'].hist(bins=70)\nplt.title(\"Rating of users\")","010b5fc2":"import plotly.graph_objects as go\nlabels = anime_fulldata['type'].value_counts().index\nvalues = anime_fulldata['type'].value_counts().values\ncolors = ['gold', 'mediumturquoise', 'darkorange', 'lightgreen']\nfig = go.Figure(data=[go.Pie(labels=labels,\n                             values=values)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2)))\n\nfig.update_layout(\n    title={\n        'text': \"Medium of Streaming\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nfig.show()","c8e1224f":"#Sharingan copy: https:\/\/www.kaggle.com\/indralin\/try-content-based-and-collaborative-filtering\nnonull_anime=anime_fulldata.copy()\nnonull_anime.dropna(inplace=True)\nfrom collections import defaultdict\n\nall_genres = defaultdict(int)\n\nfor genres in nonull_anime['genre']:\n    for genre in genres.split(','):\n        all_genres[genre.strip()] += 1\n        \nfrom wordcloud import WordCloud\n\ngenres_cloud = WordCloud(width=800, height=400, background_color='white', colormap='gnuplot').generate_from_frequencies(all_genres)\nplt.imshow(genres_cloud, interpolation='bilinear')\nplt.axis('off')","c400e506":"anime_feature=anime_fulldata.copy()\nanime_feature[\"user_rating\"].replace({-1: np.nan}, inplace=True)\nanime_feature.head()","b4ce8dcb":"anime_feature = anime_feature.dropna(axis = 0, how ='any') \nanime_feature.isnull().sum()","da091de2":"anime_feature['user_id'].value_counts()","f347a4e8":"counts = anime_feature['user_id'].value_counts()\nanime_feature = anime_feature[anime_feature['user_id'].isin(counts[counts >= 200].index)]","50e9881a":"anime_pivot=anime_feature.pivot_table(index='anime_title',columns='user_id',values='user_rating').fillna(0)\nanime_pivot.head()","10124cde":"from scipy.sparse import csr_matrix\n\nanime_matrix = csr_matrix(anime_pivot.values)\n\nfrom sklearn.neighbors import NearestNeighbors\n\n\nmodel_knn = NearestNeighbors(metric = 'cosine', algorithm = 'brute')\nmodel_knn.fit(anime_matrix)","85b79c65":"query_index = np.random.choice(anime_pivot.shape[0])\nprint(query_index)\ndistances, indices = model_knn.kneighbors(anime_pivot.iloc[query_index,:].values.reshape(1, -1), n_neighbors = 6)\n","b7179690":"for i in range(0, len(distances.flatten())):\n    if i == 0:\n        print('Recommendations for {0}:\\n'.format(anime_pivot.index[query_index]))\n    else:\n        print('{0}: {1}, with distance of {2}:'.format(i, anime_pivot.index[indices.flatten()[i]], distances.flatten()[i]))","30e2ad9a":"#Sharingan copy:https:\/\/www.kaggle.com\/indralin\/try-content-based-and-collaborative-filtering\nimport re\ndef text_cleaning(text):\n    text = re.sub(r'&quot;', '', text)\n    text = re.sub(r'.hack\/\/', '', text)\n    text = re.sub(r'&#039;', '', text)\n    text = re.sub(r'A&#039;s', '', text)\n    text = re.sub(r'I&#039;', 'I\\'', text)\n    text = re.sub(r'&amp;', 'and', text)\n    \n    return text\n\nanime_data['name'] = anime_data['name'].apply(text_cleaning)","66e93a5d":"from sklearn.feature_extraction.text import TfidfVectorizer\n\n\ntfv = TfidfVectorizer(min_df=3,  max_features=None, \n            strip_accents='unicode', analyzer='word',token_pattern=r'\\w{1,}',\n            ngram_range=(1, 3),\n            stop_words = 'english')\n\n# Filling NaNs with empty string\nanime_data['genre'] = anime_data['genre'].fillna('')\ngenres_str = anime_data['genre'].str.split(',').astype(str)\ntfv_matrix = tfv.fit_transform(genres_str)","f53fc30d":"tfv_matrix.shape","b3d3eb01":"from sklearn.metrics.pairwise import sigmoid_kernel\n\n# Compute the sigmoid kernel\nsig = sigmoid_kernel(tfv_matrix, tfv_matrix)","b2986989":"indices = pd.Series(anime_data.index, index=anime_data['name']).drop_duplicates()","ae8108c3":"def give_rec(title, sig=sig):\n    # Get the index corresponding to original_title\n    idx = indices[title]\n\n    # Get the pairwsie similarity scores \n    sig_scores = list(enumerate(sig[idx]))\n\n    # Sort the movies \n    sig_scores = sorted(sig_scores, key=lambda x: x[1], reverse=True)\n\n    # Scores of the 10 most similar movies\n    sig_scores = sig_scores[1:11]\n\n    # Movie indices\n    anime_indices = [i[0] for i in sig_scores]\n\n    # Top 10 most similar movies\n    return pd.DataFrame({'Anime name': anime_data['name'].iloc[anime_indices].values,\n                                 'Rating': anime_data['rating'].iloc[anime_indices].values})","134b9f04":"give_rec('Naruto: Shippuuden')","a6d01f8e":"give_rec('Steins;Gate')","673ca35d":"give_rec('Shingeki no Kyojin')","7416f84b":"give_rec('One Piece')","64c4e484":"give_rec('Dragon Ball Z')","c9d0b996":"# Table of Contents:\n1. [Introduction](#section-one)\n\n2. [Meet and greet data - Konnichiwa(\u3053\u3093\u306b\u3061\u308f)](#section-two)\n\n3. [Analyze the data- Byakugan (\u767d\u30ac\u30f3)](#section-three)\n\n4. [Preparing data for consumption- Sonaeru (\u5099\u3048\u308b)](#section-four)\n\n5. [Recommendation building phase - Tsukuru (\u4f5c\u308b)](#section-five)\n\n    ","9f2c2621":"<img src=\"https:\/\/vignette.wikia.nocookie.net\/deathnote\/images\/9\/9c\/Light_yagami.jpg\/revision\/latest?cb=20110801092518\">\n\n\n> ### \"Look around you, and all you will see are people <br> the world would be better off without.\"-Light Yagami (Death Note)","835b24bd":"<a id=\"section-two\"><\/a>\n# Meet and Greet data - Konnichiwa (\u3053\u3093\u306b\u3061\u308f)\n\n<img src=\"https:\/\/media.tenor.com\/images\/a817ee0bafb1e43469f099b63b76ca6b\/tenor.png\">\n\n\n#### Konnichiwa (\u3053\u3093\u306b\u3061\u306f or in kanji \u4eca\u65e5\u306f) is a Japanese greeting, typically a mid-day greeting. It is also used as an informal greeting, \"hello\". So here our guests are the data. So let's welcome our guests !","b7122eb0":"**Results:**\n* Death note captures the crown again . \"I want to tell you **I'M L** \"","e43d47ad":"**Results:** <br>\n* Death Note wears the crown for rating count followed by sword art online and Attack on Titan","140c60e0":"## Top 10 Anime based on rating counts\n#### I'm sensing the top anime's based on their rating counts provided by the user id's. Let's see who tops the throne","46e64c2a":"<a id=\"section-five\"><\/a>\n# Recommendation building phase - Tsukuru (\u4f5c\u308b)\n\n## Collaborative Filtering\n\n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/5\/52\/Collaborative_filtering.gif\/300px-Collaborative_filtering.gif\">\n\n#### Collaborative filtering is a technique that can filter out items that a user might like on the basis of reactions by similar users. It works by searching a large group of people and finding a smaller set of users with tastes similar to a particular user.\n\n### Cosine Similarity using KNN\n\n\n<img src=\"https:\/\/dataconomy.com\/wp-content\/uploads\/2015\/04\/Five-most-popular-similarity-measures-implementation-in-python-4-620x475.png\">\n\n\n#### Cosine similarity is a metric used to measure how similar the documents are irrespective of their size. Mathematically, it measures the cosine of the angle between two vectors projected in a multi-dimensional space. The cosine similarity is advantageous because even if the two similar documents are far apart by the Euclidean distance (due to the size of the document), chances are they may still be oriented closer together. The smaller the angle, higher the cosine similarity.","fbb900a3":"<img src=\"https:\/\/lh3.googleusercontent.com\/proxy\/xWZd8JnnPSeJmwMfs5fU2y9dBbKJCyg_bgRGz0d6wC_S4P-5um69-8XSe4E6dJynbSIIaoBELMIU5-a0EITO04qX0x74hkohqmpsp5zRIQIAnXWR1UejCfRJjQmHGtYzi0go-8R2D1gOsP63Bgk\">\n\n\n> ### \"There Is No Heaven Or Hell. No Matter What You Do While You're Alive, <br> Everybody Goes To The Same Place Once You Die. Death Is Equal.\"-L (Death Note)","011b3911":"<a id=\"section-three\"><\/a>\n# Analyze the data- Byakugan (\u767d\u30ac\u30f3)\n<img src=\"https:\/\/giantbomb1.cbsistatic.com\/uploads\/scale_medium\/16\/164924\/2763709-5436457361-Hinat.jpg\">\n\n\n#### Inorder to build a recommendation engine, we have to understand our dataset. So, let's see an overview of the dataset. BYAKUGAAN !!","25f521f6":"<img src=\"https:\/\/static1.cbrimages.com\/wordpress\/wp-content\/uploads\/2020\/03\/goku-2.jpg\">\n\n> ### I could go one step farther If I wanted to.\u201d \u2013 Goku (Dragon ball z)\n\n### A new kaggle notebook has revealed its face. Is this capable of an upvote?\n### Will I post better notebooks ?\n### Will I be able to become master ?  \n\n### Find out on the next episode on [Kaggle Notebook Z](https:\/\/www.kaggle.com\/benroshan\/notebooks)","7183612a":"<img src=\"https:\/\/vignette.wikia.nocookie.net\/naruto\/images\/d\/dd\/Naruto_Uzumaki%21%21.png\/revision\/latest?cb=20161013233552\">\n\n\n> ### \u201cI\u2019m not gonna run away, I never go back on my word! That\u2019s my nindo: my ninja way.\u201d - Naruto Uzumaki","c0818341":"#### There are users who has rated only once, even if they have rated it 5, it can't be considered a valuable record for recommendation. So I have considered minimum 200 ratings by the user as threshold value. You can play around changing the threshold value to get better results, but this worked fine.","1d0ad86c":"### c) Recommendation function\n\n#### Here we create the function for getting the recommendation for an anime. We turn the similarity scores into lists using enumerate function, sort the list and select the top 10 score for recommendation. ","9976d090":"<img src=\"https:\/\/i.pinimg.com\/originals\/f8\/1c\/4a\/f81c4ab79f3aae7151099ccf7cb7a882.jpg\">\n\n<a id=\"section-one\"><\/a>\n# Introduction\n\n#### The notebook follows a boy whose stumbled upon this amazing dataset unintentionally. With the ability of machine learning, he explores the dataset in search of 'what to watch next?' using content based and collaborative filtering.\n\n## Problem statement\n#### Every streaming content has its own viewers and each content has it's rating. Viewers leave some good ratings for the content if they like it. But where does it apply? Viewers can spend hours scrolling through hundreds, sometimes thousands of anime's  never finding an content they like. Business need to be provided suggestions based on their likes and needs in order to create a better streaming environment that boosts revenue and increases the time spent on a website.\n\n## [What is a recommendation engine ?](https:\/\/towardsdatascience.com\/web-scraping-recommender-systems-project-1d360fa678e4)\n\n<img src=\"https:\/\/miro.medium.com\/max\/757\/1*UxsrvB1oWpTYxUgSRNW92g.jpeg\">\n\n####  It is an unsupervised learning algorithm (one that does not have a target variable to measure accuracy against) mostly used to aid in consumer decision making. I\u2019m sure you have seen them while online shopping. They also appear in places like streaming apps (aka Netflix and Hulu) to help you select a TV show or movie to watch next and on journalism\/media websites like Medium to suggest other articles you may like to read, among many other uses. Obviously many e-retailers like Amazon have already been using recommender algorithms for quite some time, but many smaller or newer sites are still in need. There are different varieties of recommenders that base their predictions on different features.\n## About Dataset\n#### This data set contains information on user preference data from 73,516 users on 12,294 anime. Each user is able to add anime to their completed list and give it a rating and this data set is a compilation of those ratings. \n\n[Anime Recommendations Database](https:\/\/www.kaggle.com\/CooperUnion\/anime-recommendations-database)\n\n## Project summary\n\n## Objectives of the project\n1. Meet and greet data - Konnichiwa  (\u3053\u3093\u306b\u3061\u308f)\n2. Analyze the data- Byakugan (\u767d\u30ac\u30f3)\n3. Preparing data for consumption- Sonaeru (\u5099\u3048\u308b)\n4. Recommendation building phase - Tsukuru (\u4f5c\u308b)\n\n### Import Libraries\n#### Let's import all necessary libraries for the analysis and along with it let's bring down our dataset","e0bee7de":"## Content based filtering\n\n<img src=\"https:\/\/miro.medium.com\/max\/4056\/1*yrkvweErbifbPFkBUyZlOw.png\">\n\n\n#### Content-based filtering, also referred to as cognitive filtering, recommends items based on a comparison between the content of the items and a user profile. The content of each item is represented as a set of descriptors or terms, typically the words that occur in a document.A content based recommender works with data that the user provides, either explicitly (rating) or implicitly (clicking on a link). Based on that data, a user profile is generated, which is then used to make suggestions to the user. As the user provides more inputs or takes actions on the recommendations, the engine becomes more and more accurate.\n\n### a) Cleaning anime_title\n\n#### We got many symbols found in anime_title. Let's remove those using this function","d259d8ce":"<img src=\"https:\/\/static0.cbrimages.com\/wordpress\/wp-content\/uploads\/2019\/12\/Ging-Freecss-Featured-Image.jpg\">\n\n> ### \u201cYou should enjoy the little detours to the fullest. Because that's where you'll find the things more important than what you want.\u201d - Ging Freecss (HUNTER X HUNTER)","c173f258":"## Genre Word Cloud\n#### Look up, witness the genre cloud !","090d93a9":"#### As we see, these are the recommended anmime for . But this code doesn't have much flexibility of our choice. I advise you to check out [Indra Lin's notebook](https:\/\/www.kaggle.com\/indralin\/try-content-based-and-collaborative-filtering) where he had created an awesome function for this collaborative filtering. I used my sharingan eyes to capture two code section from him . LOL\n\n<img src=\"https:\/\/blogs.forbes.com\/olliebarder\/files\/2019\/06\/one_punch_man_game.jpg\">\n\n> ### \"Human beings are strong because we have the ability to change ourselves.\" -Saitama (One Punch Man)","655ec0f6":"#### We have got the title cleaned and neat. Now it's time for the ultimate TFIDF to recommend us the next anime","97205cf4":"#### We have got the indices for the anime_title, now let's jump onto figure out the recommended anime","438eca46":"### b) Term Frequency (TF) and Inverse Document Frequency (IDF)\n\n<img src=\"https:\/\/miro.medium.com\/max\/3604\/1*qQgnyPLDIkUmeZKN2_ZWbQ.png\">\n\n\n#### TF is simply the frequency of a word in a document. IDF is the inverse of the document frequency among the whole corpus of documents. TF-IDF is used mainly because of two reasons: Suppose we search for \u201cthe rise of analytics\u201d on Google. It is certain that \u201cthe\u201d will occur more frequently than \u201canalytics\u201d but the relative importance of analytics is higher than the search query point of view. In such cases, TF-IDF weighting negates the effect of high frequency words in determining the importance of an item (document).\n\n#### Here we are gonna use it on the genre so that we can recommend the users based on genre content.","8c07f5df":"## Medium of streaming \n#### Byakugan ! I'm now seeing from where does this powerul anime's are coming from ","149bb4e0":"<a id=\"section-four\"><\/a>\n# Preparing data for consumption- Sonaeru (\u5099\u3048\u308b)\n\n#### Before giving our data guests to the recommendation engine we have to fine tune them, sculpt them,train them to face the boss !\n\n### a) Handling NaN values\n\n#### First we have to take care of the NaN values, as this revolves around ratings, a user who hasn't given any ratings has added no value to the engine. So let's drop and crush those NaN values","5cd11ebc":"## Dataset Details\n\n### 1)anime_data:\n\n* **anime_id** - myanimelist.net's unique id identifying an anime.\n* **name** - full name of anime.\n* **genre** - comma separated list of genres for this anime.\n* **type** - movie, TV, OVA, etc.\n* **episodes** - how many episodes in this show. (1 if movie).\n* **rating** - average rating out of 10 for this anime.\n* **members** - number of community members that are in this anime's \"group\".\n\n### 2)rating_data:\n\n* **user_id** - non identifiable randomly generated user id.\n* **anime_id** - the anime that this user has rated.\n* **rating** - rating out of 10 this user has assigned (-1 if the user watched it but didn't assign a rating).","46af51ff":"**Insights:**\n* 67.6% of the anime's were aired on TV followed by 13.5% through Movie\n* 10.2% of anime's are streamed as OVA which is greater than ONA(1.18%)","4e2bba47":"## Merging dataframes - Fusion(\u878d\u5408)\n![FusionDanceFinaleGotenTrunksBuuSaga.png](attachment:FusionDanceFinaleGotenTrunksBuuSaga.png)\n\n#### In this section we are fusing our csv guests to make the recomenndation engine more powerful. FUSION HA !\n","f4f5bdf7":"#### Here we are returning the distances and indices of 6 neighbours through KNN from the randomly chosen index(anime_title) those will be our recommended anime's","3d641be6":"## Distribution of ratings\n#### I'll be now sensing the distribution of ratings on both the datasets. I beleive the rating from anime.csv is from review websites and user_rating in rating.csv is from user id's","ff030202":"### b) Filtering user_id\n\n#### Let's check out the counts of user id and filter based on it","39f666be":"**Insights:**\n* Most of the ratings are spread between 6-10\n* The mode of the distribution is around 7.5-8.0\n* Both the distribution are left skewed\n* We have -1 rating as an outlier in rating of users which can be made into NaN","4f299740":"#### We have fitted the sparse matrix, let's get a random anime title and find recommendation for it. ","c704f3de":"\n#### We have successfully merged(fused) the csv's and made it powerful. Let's get into action\n\n<img src=\"https:\/\/media.comicbook.com\/2020\/05\/attack-on-titan-final-season-eren-yeager-1222950-1280x0.jpeg\">\n\n\n> ### \u201cI want to see and understand the world outside. I don\u2019t want to die inside these walls without knowing what\u2019s out there.\u201d \u2013 Eren Jaeger ( Attack on Titan | Shingeki no Kyojin)","821bbe86":"#### Scikit-learn already provides pairwise metrics (a.k.a. kernels in machine learning parlance) that work for both dense and sparse representations of vector collections. Here we need to assign 1 for recommended anime and 0 for not recommended anime. So we are using sigmoid kernel","0ad08866":"We can sense there are many Comedy genre anime's followd by action, romance,drama in our dataset\n\n<img src=\"https:\/\/ctd-thechristianpost.netdna-ssl.com\/en\/full\/65364\/monkey-dluffy.jpg?w=760&h=419&l=50&t=40\">\n\n> ### \"I\u2019ve set myself to become the King of the Pirates\u2026and if I die trying\u2026then at least I tried!\"-Monkey D. Luffy (One Piece)","399697b1":"#### Let's bring the battle of recommendation !","8a37e455":"## Top 10 Anime based on Community size\n#### I'm now sensing the top anime's based on their community size(membercount) . Let's see who tops the throne","db678c31":"### c) Pivot Dojo\n\n#### This pivot table consists of rows as title and columns as user id, this will help us to create sparse matrix which can be very helpful in finding the cosine similarity ! Don't know what is cosine similarity ? don't worry, We will reveal that in the next section.","56fab6b1":"<img src=\"https:\/\/nefariousreviews.files.wordpress.com\/2015\/04\/code-geass-featured.jpg\">\n\n> ### \u201cTo defeat evil, I shall become an even GREATER evil.\u201d \u2013 Lelouch Lamperouge (Code Geass)"}}