{"cell_type":{"591e7964":"code","e8c012fd":"code","58353348":"code","5ffbf3c0":"code","c80b3e2f":"code","dbacc1af":"code","46ec245f":"code","b6417ab6":"code","3332bc59":"code","1e3d55de":"code","845aab62":"code","9740fe47":"code","bf0cdfc6":"code","20684317":"code","5ce842b8":"code","88513724":"code","27cf94c2":"code","405a6849":"code","85f520ac":"markdown","fc533d01":"markdown","3347b3f6":"markdown","de13c871":"markdown","18adcc40":"markdown","c5c57abf":"markdown","f7b16cdb":"markdown"},"source":{"591e7964":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","e8c012fd":"df_mat = pd.read_csv('\/kaggle\/input\/student-performance\/student-mat.csv', delimiter=';')","58353348":"df_mat.head()","5ffbf3c0":"df_mat.isna().sum()","c80b3e2f":"obj_columns = [x for x in df_mat.columns if df_mat[x].dtype == \"object\"]\nint_columns = [x for x in df_mat.columns if df_mat[x].dtype != \"object\"]\nint_columns = int_columns[:-1]","dbacc1af":"for i in int_columns:\n    df_mat[i] = (df_mat[i] - df_mat[i].mean()) \/ df_mat[i].std()","46ec245f":"train, train_target = df_mat.iloc[:, :-3], df_mat.iloc[:,-1]","b6417ab6":"train = pd.get_dummies(train, dummy_na=True)","3332bc59":"train","1e3d55de":"from sklearn.tree import DecisionTreeRegressor\n","845aab62":"d_reg = DecisionTreeRegressor()\nd_reg.fit(train, train_target)","9740fe47":"d_reg.score(train, train_target)","bf0cdfc6":"from sklearn.linear_model import SGDRegressor","20684317":"s_reg = SGDRegressor()\ns_reg.fit(train, train_target)","5ce842b8":"s_reg.score(train, train_target)","88513724":"from sklearn.ensemble import RandomForestRegressor","27cf94c2":"r_reg = RandomForestRegressor()\nr_reg.fit(train, train_target)","405a6849":"r_reg.score(train, train_target)","85f520ac":"## Finding the best model","fc533d01":"## Data processing","3347b3f6":"### Using Random forest","de13c871":"## loading the data","18adcc40":"### Using Decision Tree","c5c57abf":"## Data Cleaning","f7b16cdb":"### Using SGDRegressor"}}