{"cell_type":{"96aec8be":"code","1560fad4":"code","302c48c5":"code","3c3536f8":"code","c188ac91":"code","50d57348":"code","06bdd619":"code","b3023d26":"code","c2e98319":"code","03020f97":"code","d9d37e26":"code","eced6a66":"code","179bd2ac":"code","e012d750":"code","c01e8283":"code","256dc1da":"code","0fa37854":"code","bf7cd87d":"code","a189840b":"code","9f93bed3":"code","f34456d8":"code","49c5ff5b":"code","45d2f3dc":"code","f3a4ccdf":"code","77314031":"code","8ac9fed3":"code","db65d36e":"code","a4719e74":"code","65756b94":"code","19552c4c":"code","b3147551":"code","fbe49d78":"code","389cc056":"code","db6cd2f2":"code","5dc36174":"code","f85e033e":"markdown","6dc504c4":"markdown","e0f550e3":"markdown","80062fb0":"markdown","647ff3ec":"markdown","cd32b5de":"markdown","db7f7a8d":"markdown","ee433a3a":"markdown","d91c70d9":"markdown","f6cb246a":"markdown","8bb6f77a":"markdown","61fe3680":"markdown","a6beb5b3":"markdown","e6d3d44a":"markdown","2e2a8156":"markdown","f500ec5b":"markdown","ae9aba11":"markdown","0ffa3a58":"markdown","12ad0529":"markdown","8385b6ca":"markdown","9070b2ec":"markdown","51b32a20":"markdown","7861aadd":"markdown","0a47e14d":"markdown","d34adf30":"markdown","dbb04661":"markdown","e53653d1":"markdown","343c68c6":"markdown","ad359c12":"markdown","1ecfee96":"markdown"},"source":{"96aec8be":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1560fad4":"df = pd.read_table(\"\/kaggle\/input\/impact-of-covid19-on-unemployment-rate-in-india\/Unemployment_Rate_-_Trailing_30_days_D_Rural.txt\",sep=\", \")\nprint(df)","302c48c5":"a_file = open(\"\/kaggle\/input\/impact-of-covid19-on-unemployment-rate-in-india\/Unemployment_Rate_-_Trailing_30_days_D_Rural.txt\", \"r\")\n\nlines = a_file.readlines()[1:]\nwith open(\"sample.txt\",\"w\") as f1:\n    for i in lines:\n        f1.write(i+'\\n')\na_file.close()","3c3536f8":"d = pd.read_table(\"sample.txt\",sep=\", \")\nprint(d)","c188ac91":"d.columns","50d57348":"d.head(5)","06bdd619":"d.info()","b3023d26":"d.head(6)","c2e98319":"d['Value'].describe()","03020f97":"np.unique(d['Region'])","d9d37e26":"d['Date'].unique()","eced6a66":"np.unique(d['Frequency'])","179bd2ac":"np.unique(d['Value'])","e012d750":"d.isna().sum()","c01e8283":"d.insert(4,'Day',0)\nd.insert(5,'Month',0)\nd.insert(6,'Year',0)","256dc1da":"d.info()","0fa37854":"for i in range(2053):\n    d['Day'][i]=int(d['Date'][i][0:2])\n    d['Month'][i]=int(d['Date'][i][3:5])\n    d['Year'][i]=int(d['Date'][i][6:])","bf7cd87d":"d.head(6)","a189840b":"#checking the max of the column Year\nmax(d['Year'])","9f93bed3":"#checking the min of the column Year\nmin(d['Year'])","f34456d8":"import matplotlib.pyplot as plt","49c5ff5b":"plt.scatter(d['Date'],d['Value'],c='#FF6B6B')\nplt.title('Scatter plot of Date vs Value of Unemployment')\nplt.xlabel('Date(From 29 Jan 2016 to 14 Sep 2021)')\nplt.ylabel('Value')\nplt.xticks(rotation=0)\nplt.show()","45d2f3dc":"ValMean=d['Value'].mean()","f3a4ccdf":"plt.scatter(d['Date'],d['Value'],c='#FF6B6B')\nplt.title('Scatter plot of Date vs Value of Unemployment')\nplt.xlabel('Date (From 29 Jan 2016 to 14 Sep 2021)')\nplt.ylabel('Value')\nplt.xticks(rotation=0)\nplt.plot(['29-01-2016','14-09-2021'], [ValMean, ValMean])\n\nplt.show()","77314031":"plt.scatter(d['Year'],d['Value'],c='#FF6B6B')\nplt.title('Scatter plot of Year vs Value of Unemployment')\nplt.xlabel('Year')\nplt.ylabel('Value')\nplt.xticks(rotation=0)\nplt.plot([2016,2021], [ValMean, ValMean])\nplt.show()\n","8ac9fed3":"plt.scatter(d['Month'],d['Value'],c='#FF6B6B')\nplt.title('Scatter plot of Month vs Value of Unemployment')\nplt.xlabel('Month')\nplt.ylabel('Value')\nplt.xticks(rotation=90)\nplt.show()","db65d36e":"arr1=[]\narr2=[]\nfor i in range (2053):\n    if d['Year'][i]==2020:\n        arr1.append(d['Value'][i])\n        arr2.append(d['Month'][i])","a4719e74":"plt.scatter(arr2, arr1,c='#FF6B6B')\nplt.title('Scatter plot of Month vs Value of Unemployment for the year 2020')\nplt.xlabel('Month')\nplt.ylabel('Value')\nplt.show()","65756b94":"import seaborn as sns","19552c4c":"sns.set_theme(style=\"darkgrid\")","b3147551":"sns.pairplot(d,kind=\"scatter\",hue=\"Value\")\nplt.show()","fbe49d78":"sns.pairplot(d,kind=\"scatter\")\nplt.show()","389cc056":"sns.pairplot(d, kind=\"kde\")\nplt.show()","db6cd2f2":"sns.pairplot(d, kind=\"hist\")","5dc36174":"sns.histplot(x=\"Value\",data=d,kde=True,bins=30)","f85e033e":"# From this Graph we can see that the highest has been recorded in the year 2020 ranging from around 5 upto approximately 25","6dc504c4":"The range for the year 2016 is 5 to 10. The range for the year 2017 is below 5 to 5.5. The range for the year 2018 is 5 to 5.5. The range for the year 2019 is between 5 to 10 and the range for the year 2021 is 5 to 10.5.","e0f550e3":"Due to the fact that the first Line of the .txt file is just an information but not a data. It was removed by the help of File handling","80062fb0":"# Detailings of the Data Set","647ff3ec":"# Visualization Of The DataSet","cd32b5de":"# Checking the Max, min, standard deviation, count, mean, 20%, 75% and 50% of the Column \"Value\"","db7f7a8d":"Checking the first 5 Rows of the Dataset","ee433a3a":"# Clearly you can see 2017 is under the mean of Values. Hence its better year of Employment than all other years","d91c70d9":"# Now Extracting the days, months and years individually to the respective columns from Date","f6cb246a":"The three Colums are extracted from Date and are added for convenience so that more information can be extracted","8bb6f77a":"From this we are getting an idea that the Value is peaking around 2020 August or september","61fe3680":"5 pictures bar chart - 2016 - jan to Dec","a6beb5b3":"Now checking the range of values for each year","e6d3d44a":"# Checking for Null Values","2e2a8156":"# As we can see from the graph that there was a sudden rise of unemployment from the month of April 2020 and the highest is recorded in the month of May","f500ec5b":"Importing the Modules needed for the Analysis","ae9aba11":"Checking the Number of Columns","0ffa3a58":"Visualization of Date and Values","12ad0529":"# Inserting 3 new Columns to the Data Set i.e Day, Month and Year","8385b6ca":"Here the blue line represents the mean of the Values that has been recorded","9070b2ec":"Checking if the datas are correctly placed","51b32a20":"# Checking the Unique values of the Columns for Clarification\n","7861aadd":"Now Reading the Cleaned Dataset to the DataFrame (d)\n\n","0a47e14d":"Checking the Dataset after Adding the Columns","d34adf30":"# From this Graph we can see that the highest has been recorded in the month of 5 i.e May ranging from around 5 upto approximately 25 from the year 2016 to 2021.","dbb04661":"The Value '7' has occured the most in the data set.","e53653d1":"Importing matplotlib module","343c68c6":"# Reading the Data Set impact-of-covid19-on-unemployment-rate-in-india(UnemploymentRate-_Trailing_30_days_D_Rural.txt)","ad359c12":"What we get from this date are-\nThere are total 2053 rows in the Data Set. Ther are 4 Columns (Region, Date, Frequency and Value) with NO NULL VALUES\nRegion ---- object\nDate ----- object\nFrequency - object\nValue ----- float64","1ecfee96":"# Analysis On the Unemployment Data of India Starting from 2016 to 2021"}}