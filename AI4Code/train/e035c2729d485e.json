{"cell_type":{"6e6790d0":"code","bceddb94":"code","cdd200b1":"code","b6460a8c":"code","f445df5d":"code","e62dbb8e":"code","8f52953d":"code","eee00364":"code","be8066b8":"code","993ef567":"code","26232888":"markdown","78263a7e":"markdown","3b281c3c":"markdown","5f3ddcec":"markdown","78b7f50d":"markdown","40dc0eb3":"markdown","498d4641":"markdown","1320c376":"markdown","9bdebbfe":"markdown","4d864fb1":"markdown","a95a3a41":"markdown"},"source":{"6e6790d0":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly\nimport plotly.offline as py\nimport plotly.graph_objs as go\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)","bceddb94":"Surv2020 = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\nSurv2020.replace(to_replace=\"No \/ None\", value=\"None\", inplace=True)\n\nQuestion_Text = Surv2020.iloc[0,:]\nSurv2020.drop(0,axis=0,inplace=True)","cdd200b1":"Surv2020.head()","b6460a8c":"NonProf = Surv2020[(Surv2020['Q5'] == \"Student\") | (Surv2020['Q5'] == \"Currently not employed\") | (Surv2020['Q25'] == \"$0 ($USD)\") | (Surv2020['Q25'] == \"NaN\")]\nProf = Surv2020[(Surv2020['Q5'] != \"Student\") & (Surv2020['Q5'] != \"Currently not employed\") & ((Surv2020['Q25'] != \"$0 ($USD)\") | (Surv2020['Q25'] == \"NaN\"))]","f445df5d":"Prof_Group = pd.DataFrame(Prof['Q1'].value_counts())\nNonProf_Group = pd.DataFrame(NonProf['Q1'].value_counts())\n\npie_Cl1A = go.Pie(labels=Prof_Group.index,values=Prof_Group.Q1,name=\"Professionals\",hole=0.7,domain={'x': [0,0.4]})\npie_Cl2A = go.Pie(labels=NonProf_Group.index,values=NonProf_Group.Q1,name=\"Non-Prof\",hole=0.7,domain={'x': [0.5,1]})\n\nlayout = dict(title = 'Age distribution amongst both groups', font=dict(size=15), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.12, y=0.5, text='Professionals', showarrow=False, font=dict(size=20)),\n                             dict(x=0.87, y=0.5, text='Non-Professionals', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_Cl1A, pie_Cl2A], layout=layout)\npy.iplot(fig)\n","e62dbb8e":"Prof_Group = pd.DataFrame(Prof['Q5'].value_counts())\nNonProf_Group = pd.DataFrame(NonProf['Q5'].value_counts())\n\npie_Cl1A = go.Pie(labels=Prof_Group.index,values=Prof_Group.Q5,name=\"Professionals\",hole=0.7,domain={'x': [0,0.4]})\npie_Cl2A = go.Pie(labels=NonProf_Group.index,values=NonProf_Group.Q5,name=\"Non-Prof\",hole=0.7,domain={'x': [0.5,1]})\n\nlayout = dict(title = 'Job distribution amongst both groups', font=dict(size=15), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.12, y=0.5, text='Professionals', showarrow=False, font=dict(size=20)),\n                             dict(x=0.87, y=0.5, text='Non-Professionals', showarrow=False, font=dict(size=20)) ])\n\nfig = dict(data=[pie_Cl1A, pie_Cl2A], layout=layout)\npy.iplot(fig)","8f52953d":"Quest = list({'Q26', 'Q27'})\nTitle = {\"Q26\": \"Cloud computing platforms used (left) or planned to be used (right)\",\n        \"Q27\": \"Cloud computing products used (left) or planned to be used (right)\",\n        \"Q28\": \"ML products used (left) or planned to be used (right)\",\n        \"Q29\": \"Big Data products used (left) or planned to be used (right)\",\n        \"Q31\": \"Business Intelligence tools used (left) or planned to be used (right)\",\n        \"Q33\": \"Automated ML tools used (left) or planned to be used (right)\",\n        \"Q35\": \"Tools to manage ML experiements used (left) or planned to be used (right)\",}\nfor i in Quest:   \n    Cloud1 = Prof.filter(regex=i)\n    Cloud2 = NonProf.filter(regex=i)\n    Cloud1_A = Cloud1.apply(pd.value_counts)\n    Cloud2_A = Cloud2.apply(pd.value_counts)\n    Cloud1_A[\"sum\"] = Cloud1_A.sum(axis=1)\n    Cloud2_A[\"sum\"] = Cloud2_A.sum(axis=1)\n    Cloud1_A[\"sum_Norm\"] = Cloud1_A[\"sum\"]\/len(Cloud1)*100\n    Cloud2_A[\"sum_Norm\"] = Cloud2_A[\"sum\"]\/len(Cloud2)*100\n\n    Cloud1_A.sort_values(by = \"sum_Norm\", axis=0, ascending=False, inplace=True)\n\n    trace1 = go.Bar(\n        x=Cloud1_A.index,\n        y=Cloud1_A['sum_Norm'],\n        name='Professionals'\n    )\n    trace2 = go.Bar(\n        x=Cloud2_A.index,\n        y=Cloud2_A['sum_Norm'],\n        name='Non-Professionals'\n    )\n\n    data = [trace1, trace2]\n    printtitle = Title[i]\n    py.offline.iplot({\n        \"data\": data,\n        \"layout\": go.Layout(barmode='group', title=printtitle,width=800,height=500,)\n    })","eee00364":"Quest = list({'Q28','Q29'})\nfor i in Quest:   \n    Cloud1 = Prof.filter(regex=i)\n    Cloud2 = NonProf.filter(regex=i)\n    Cloud1_A = Cloud1.apply(pd.value_counts)\n    Cloud2_A = Cloud2.apply(pd.value_counts)\n    Cloud1_A[\"sum\"] = Cloud1_A.sum(axis=1)\n    Cloud2_A[\"sum\"] = Cloud2_A.sum(axis=1)\n    Cloud1_A[\"sum_Norm\"] = Cloud1_A[\"sum\"]\/len(Cloud1)*100\n    Cloud2_A[\"sum_Norm\"] = Cloud2_A[\"sum\"]\/len(Cloud2)*100\n\n    Cloud1_A.sort_values(by = \"sum_Norm\", axis=0, ascending=False, inplace=True)\n\n    trace1 = go.Bar(\n        x=Cloud1_A.index,\n        y=Cloud1_A['sum_Norm'],\n        name='Professionals'\n    )\n    trace2 = go.Bar(\n        x=Cloud2_A.index,\n        y=Cloud2_A['sum_Norm'],\n        name='Non-Professionals'\n    )\n\n    data = [trace1, trace2]\n    printtitle = Title[i]\n    py.offline.iplot({\n        \"data\": data,\n        \"layout\": go.Layout(barmode='group', title=printtitle,width=800,height=500,)\n    })","be8066b8":"Quest = list({'Q31'})\nfor i in Quest:   \n    Cloud1 = Prof.filter(regex=i)\n    Cloud2 = NonProf.filter(regex=i)\n    Cloud1_A = Cloud1.apply(pd.value_counts)\n    Cloud2_A = Cloud2.apply(pd.value_counts)\n    Cloud1_A[\"sum\"] = Cloud1_A.sum(axis=1)\n    Cloud2_A[\"sum\"] = Cloud2_A.sum(axis=1)\n    Cloud1_A[\"sum_Norm\"] = Cloud1_A[\"sum\"]\/len(Cloud1)*100\n    Cloud2_A[\"sum_Norm\"] = Cloud2_A[\"sum\"]\/len(Cloud2)*100\n\n    Cloud1_A.sort_values(by = \"sum_Norm\", axis=0, ascending=False, inplace=True)\n\n    trace1 = go.Bar(\n        x=Cloud1_A.index,\n        y=Cloud1_A['sum_Norm'],\n        name='Professionals'\n    )\n    trace2 = go.Bar(\n        x=Cloud2_A.index,\n        y=Cloud2_A['sum_Norm'],\n        name='Non-Professionals'\n    )\n\n    data = [trace1, trace2]\n    printtitle = Title[i]\n    py.offline.iplot({\n        \"data\": data,\n        \"layout\": go.Layout(barmode='group', title=printtitle,width=800,height=500,)\n    })","993ef567":"Quest = list({'Q33','Q35'})\nfor i in Quest:   \n    Cloud1 = Prof.filter(regex=i)\n    Cloud2 = NonProf.filter(regex=i)\n    Cloud1_A = Cloud1.apply(pd.value_counts)\n    Cloud2_A = Cloud2.apply(pd.value_counts)\n    Cloud1_A[\"sum\"] = Cloud1_A.sum(axis=1)\n    Cloud2_A[\"sum\"] = Cloud2_A.sum(axis=1)\n    Cloud1_A[\"sum_Norm\"] = Cloud1_A[\"sum\"]\/len(Cloud1)*100\n    Cloud2_A[\"sum_Norm\"] = Cloud2_A[\"sum\"]\/len(Cloud2)*100\n\n    Cloud1_A.sort_values(by = \"sum_Norm\", axis=0, ascending=False, inplace=True)\n\n    trace1 = go.Bar(\n        x=Cloud1_A.index,\n        y=Cloud1_A['sum_Norm'],\n        name='Professionals'\n    )\n    trace2 = go.Bar(\n        x=Cloud2_A.index,\n        y=Cloud2_A['sum_Norm'],\n        name='Non-Professionals'\n    )\n\n    data = [trace1, trace2]\n    printtitle = Title[i]\n    py.offline.iplot({\n        \"data\": data,\n        \"layout\": go.Layout(barmode='group', title=printtitle,width=800,height=500,)\n    })","26232888":"# If wishes were horses...\n\n![image.png](https:\/\/upload.wikimedia.org\/wikipedia\/en\/4\/4a\/Spin_Doctors_-_You%27ve_Got_to_Believe_in_Something.jpg)\n\n<a href=\"https:\/\/upload.wikimedia.org\/wikipedia\/en\/4\/4a\/Spin_Doctors_-_You%27ve_Got_to_Believe_in_Something.jpg\">Spin Dcotors. Downloaded from Wikipedia.<\/a>\n\nMusic plays an important role in my life and I have to admit that I am a Spin Doctors fan. I do like the rhythm of most of their songs. Especially the album \"You've got to believe in something\". Great songs....\n\nOne might ask how is this connected to the survey and to the more than strange year of 2020 with most of us locked down and at home?\n\nThe answer is quite simple. End of year is always a time for wishes and plans for the next year, so I came across with the supplementary questions in the 2020 survey which give a projection of the future plans of survey participants.\n\nDriving question is: **Are there trends to be identified in the plans of Non-Profesionals when it comes to future learings?**\n\nMy initial guess was yes there is and that there would be some slight shifts to better and more efficient tools. However the final answer is a little bit more complex.\n\nSo let's start the journey...","78263a7e":"Most of the Professionals would describe themsels as Data Scientists , Product\/Project Managers and Data Analysts. For the Non-Professionals most of this group is still in Student status enrolled in some sort of Bachelor and\/or Master. ","3b281c3c":"Now we need to separate both groups to work further with them. According to the provided documentation participants that have answered to be Student or Not Employed or having spend no Money in the cloud are considered as Non Professionals.  ","5f3ddcec":"# The analysis\n\nIn this chapter the answers will be analyzed for bith groups individually to find out further trends and insights on future developments.\n\n## Cloud computing products and platform use","78b7f50d":"Here I can see myself reflected well. For me as Data Scientist Business Intelligence tools are interesting to know and learn, but hardly used in my daily work. Too much clicks, too little coding in front of a black screen :-)\n\n## Automated ML tools and ML Management tools","40dc0eb3":"With regards to Big Data and ML products there are some intersting features that could indicate what will be the new products to be used.\n\nFor the Big Data products MySQL is still the first choice for Professionals as well as Non-Professionals to be learnt. On the other hand other products are catching interest of the community such as MongoDB or GoogleCloud SQL for which a high interest of Non-Professionals exist to get to know these tools.\n\nRegarding ML products the most surprising result might be that more than a quarter of Professionals do not use these tools at all in their daily work and that more than 12% of Non-Professionals have no plan to learn either of these products. When it comes to plans for learing these tools Google Cloud AI Platform as well as other Google products are the clear winner in this race. \n\n## Business Intelligence tools\n","498d4641":"The last two questions in the survey were about automated ML tools as well as tools to manage these ML experiements. \n\nWhat we can see here is quite interesting and might reflect two realities: \n\nThe most obvious result is that a large relative mayority of Professionals is not using either of these tools. Additonally ML Management tools are not planned to be learnt by Non-Professionals either.\n\nOn the other hand both categories of tools are gaining interest in the next generation of Data Scientists. For Automated ML tools the picture is not very clear which tools will be the prefered choice in the future. For the ML Management tools the picture is somewhat clearer with TensorBoard being the prefered choice for Professionals who use it and Non-Professionals who plan to learn a new tool.\n\n# Conclusion\n\nOff the beaten track or follow the herd? That is somehwo the question to be answered with this analysis.\n\nFor cloud computing platforms and products I would say that even though the Amazon products are still the first choice for todays Data Science community there is an increasing interest in Google platforms and it is worth start lerning these in case you have spare time.\n\nFor ML products the picture is not clear and all products offered by the big three are well received and gain interest of Next Generation Data Scientists. For Big Data products, namly data bases MongoDB is gaining more and more interest and it is worth give this database a try and lern how to use.\n\nBusiness Intelligence tools are interesting and a good interlink to the next level in the hierachy. Bower BI and Tableau are still the first choice for Business Intelligence tools, but Google is on a rise as well. \n\nThe most interesting part of the analysis is for the end. Automated ML tools and ML Management tools. Here the Next Generation Data Scientists can make a huge difference and boost their carrier in my opinion. Mainly because the current Data Science community is not using nor implementing these tools in a mayority.\n\nFor Automated ML tools the field is huge and there is no clear trend which will be the number one choice in the next years, so it might be worth looking into all of them.\n\nFor ML management tools the trend seems to lean towards TensorBoard.\n","1320c376":"As it can be seen above (and not surprising) the Non profesionals are younger than the Professionals. For that reason and for the fact that most of the Non-Professionals are students or currently unemployed we could call them Next Generation Data Scientists.","9bdebbfe":"# Input data\n\nFirst of course the input data need to be taken into the Notebook. In that step the \"No \/ None\" answers for the professionals has been replaced by \"None\" to make the plotting and data exploration easier afterwards.","4d864fb1":"As we can observe from the above graphs there is a great interest of Non-Professionals in all type of Computing platforms, this is mainly due to the fact that as this group of participants is not yet employed there is no need to focus on a specific product and\/or platform.\n\n## Big Data and ML products","a95a3a41":"The next step and first investigate who are Professional and Non-Professionals according to the survey, so the following parameters are to be investigated:\n\n1. Age ranges for each group;\n2. Position held.\n\n## Professionals vs. Non-Professionals\n\n\nSo here is the first exploration of the two groups."}}