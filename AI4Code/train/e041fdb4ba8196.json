{"cell_type":{"4506e189":"code","bd90c225":"code","58dfd8d7":"code","c916a25d":"code","bc2d8a5d":"code","d7ca3e79":"code","689fe903":"code","b790b3b5":"code","b3c54838":"code","44a4bb0b":"code","4ffeab20":"code","0e218af8":"code","6809af3e":"code","83c0908c":"code","e7f4426b":"code","f2297da6":"code","100e45fb":"code","bcbe72e2":"code","346fde01":"code","16c20e71":"code","ee738bd6":"code","46e51367":"code","37bb4004":"code","7678dbc7":"code","fc3a2cd4":"code","c6d095b6":"code","b2f2552f":"code","d8e31fb5":"code","8eb22796":"code","fb529d72":"code","5c870df0":"code","d3a09700":"code","7cd53d70":"code","34ec506a":"code","82366d87":"code","403e8480":"code","bc4a21ff":"code","20faadfe":"code","87a9eb7c":"code","ee448ce0":"code","8fd59dc9":"code","e0d13f63":"code","68a216bf":"code","d7db8584":"code","2ab0386c":"code","b375a3a4":"code","44e0d186":"code","b65de173":"code","39abb673":"code","a378ddec":"code","b931f530":"markdown","381a2a4a":"markdown","189ebaca":"markdown","06249051":"markdown","6e61f170":"markdown","0cd82acb":"markdown","2b90032f":"markdown","d12870f8":"markdown","87c97233":"markdown","121d9351":"markdown","b6df3703":"markdown","318d7f29":"markdown","862d6b11":"markdown","c9721ef1":"markdown","49faaea6":"markdown","dd02fa64":"markdown","ea86e9d9":"markdown","e145a9b9":"markdown","43dd0e67":"markdown","efd1b194":"markdown","dbafc10e":"markdown","ceec1d77":"markdown","d4ff1253":"markdown","d1de6edd":"markdown","3670df21":"markdown"},"source":{"4506e189":"#!pip install -U \"pycaret[full]\"\n#!pip install optuna\n#!pip install backtesting","bd90c225":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom scipy.stats import poisson\nimport math\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","58dfd8d7":"calcio = pd.read_csv('\/kaggle\/input\/sports-betting\/calcio_italiano_risultati_scomesse.csv')\ncalcio = calcio.loc[calcio.week > 5] #\u041e\u0442\u0440\u0435\u0437\u0430\u0435\u043c \u0440\u0430\u043d\u043d\u0438\u0435 \u0438\u0433\u0440\u044b \u0431\u0435\u0437 \u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438\ncalcio_columns = list(calcio.columns) \ncalcio_columns[9] = 'team1_draw' #\u0418\u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\ncalcio.columns = calcio_columns\n\ncalcio['K1'] = round(calcio.P1 * (1 \/ calcio.P1 + 1 \/ calcio.PD + 1\/calcio.P2) \/ 1.05, 2)\ncalcio['KD'] = round(calcio.PD * (1 \/ calcio.P1 + 1 \/ calcio.PD + 1\/calcio.P2) \/ 1.05, 2)\ncalcio['K2'] = round(calcio.P2 * (1 \/ calcio.P1 + 1 \/ calcio.PD + 1\/calcio.P2) \/ 1.05, 2)\ncalcio['R1'] = 1 \/ calcio.P1 \/ (1 \/ calcio.P1 + 1 \/ calcio.PD + 1\/calcio.P2)\ncalcio['RD'] = 1 \/ calcio.PD \/ (1 \/ calcio.P1 + 1 \/ calcio.PD + 1\/calcio.P2)\ncalcio['R2'] = 1 \/ calcio.P2 \/ (1 \/ calcio.P1 + 1 \/ calcio.PD + 1\/calcio.P2)\n\ncalcio = calcio.loc[(calcio.R1 > 0.15) & (calcio.R1 <0.85)]\ncalcio = calcio.iloc[:-10,:]\n\ncalcio['home_goals_fact'] = calcio.team1_goal #\u0444\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\ncalcio['away_goals_fact'] = calcio.team2_goal\ncalcio.loc[calcio['home_goals_fact'] == 0, 'home_goals_fact'] = 0.25 #\u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442 \u043a 0, \ncalcio.loc[calcio['away_goals_fact'] == 0, 'away_goals_fact'] = 0.175 #\u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u041f\u0443\u0430\u0441\u0441\u043e\u043d\u0430\n#\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0440\u0430\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0431\u0438\u0442\u044c n -\u043c\u044f\u0447\u0435\u0439\ncalcio['f_home_0'] = poisson.pmf(0.25, mu=calcio.home_goals_fact, loc=0) \ncalcio['f_away_0'] = poisson.pmf(0.175, mu=calcio.away_goals_fact, loc=0)\ncalcio['f_home_1'] = poisson.pmf(1, mu=calcio.home_goals_fact, loc=0)\ncalcio['f_away_1'] = poisson.pmf(1, mu=calcio.away_goals_fact, loc=0)\ncalcio['f_home_2'] = poisson.pmf(2, mu=calcio.home_goals_fact, loc=0)\ncalcio['f_away_2'] = poisson.pmf(2, mu=calcio.away_goals_fact, loc=0)\ncalcio['f_home_3'] = poisson.pmf(3, mu=calcio.home_goals_fact, loc=0)\ncalcio['f_away_3'] = poisson.pmf(3, mu=calcio.away_goals_fact, loc=0)\ncalcio['f_home_4'] = poisson.pmf(4, mu=calcio.home_goals_fact, loc=0)\ncalcio['f_away_4'] = poisson.pmf(4, mu=calcio.away_goals_fact, loc=0)\ncalcio['f_home_5'] = poisson.pmf(5, mu=calcio.home_goals_fact, loc=0)\ncalcio['f_away_5'] = poisson.pmf(5, mu=calcio.away_goals_fact, loc=0)\ncalcio['f_home_6'] = poisson.pmf(6, mu=calcio.home_goals_fact, loc=0)\ncalcio['f_away_6'] = poisson.pmf(6, mu=calcio.away_goals_fact, loc=0)\n\nhome_win_results = [\n                    (1, 0), (2, 0), (2, 1), (3, 0), (3, 1), (3, 2), \n                    (4, 0), (4, 1), (4, 2), (4, 3), \n                    (5, 0), (5, 1), (5, 2), (5, 3), (5, 4),\n                    (6, 0), (6, 1), (6, 2), (6, 3), (6, 4), (6, 5)\n                    ]\ndraw_results = [\n                    (0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)\n                    ]\naway_win_results = [\n                    (0, 1), (0, 2), (1, 2), (0, 3), (1, 3), (2, 3), \n                    (0, 4), (1, 4), (2, 4), (3, 4), \n                    (0, 5), (1, 5), (2, 5), (3, 5), (4, 5),\n                    (0, 6), (1, 6), (2, 6), (3, 6), (4, 6), (5, 6)\n                    ]\n\ncalcio['f_home_win'] = 0\nfor res in home_win_results:\n    calcio['f_home_win'] = calcio['f_home_win'] + calcio['f_home_' + str(res[0])]*calcio['f_away_' + str(res[1])]\n\ncalcio['f_draw'] = 0\nfor res in draw_results:\n    calcio['f_draw'] = calcio['f_draw'] + calcio['f_home_' + str(res[0])]*calcio['f_away_' + str(res[1])]\n\ncalcio['f_away_win'] = 0\nfor res in away_win_results:\n    calcio['f_away_win'] = calcio['f_away_win'] + calcio['f_home_' + str(res[0])]*calcio['f_away_' + str(res[1])]\n\ncalcio['f_prob_sum'] = calcio['f_home_win'] + calcio['f_draw'] + calcio['f_away_win']\ncalcio['fRP1'] = calcio.f_home_win \/ calcio.f_prob_sum\ncalcio['fRPD'] = calcio.f_draw \/ calcio.f_prob_sum\ncalcio['fRP2'] = calcio.f_away_win \/ calcio.f_prob_sum\n\ncalcio['f_prob_sum'] = calcio['f_home_win'] + calcio['f_draw'] + calcio['f_away_win']\ncalcio['fRP1'] = calcio.f_home_win \/ calcio.f_prob_sum\ncalcio['fRPD'] = calcio.f_draw \/ calcio.f_prob_sum\ncalcio['fRP2'] = calcio.f_away_win \/ calcio.f_prob_sum\n\ncalcio['coeff_fact'] = calcio.R1-calcio.fRP1\ncalcio['coeff_fact_sign'] = 1\ncalcio.loc[calcio.coeff_fact <= 0, 'coeff_fact_sign'] = -1","c916a25d":"calcio['coeff_fact_sign'].sum()","bc2d8a5d":"calcio.head()","d7ca3e79":"from sklearn.decomposition import PCA\nimport numpy as np\nfrom datetime import date, timedelta","689fe903":"calcio_backtesting = calcio[['year', 'week', 'team1_win', 'K1']].copy()\ncalcio_backtesting.year = '20' + calcio_backtesting.year.str.split('\/').str[0]\n#calcio_backtesting['predicted'] = list(calcio_predicted.Label)\ncalcio_backtesting = calcio_backtesting.append(pd.Series(\n                                                        list(calcio_backtesting.iloc[-1]), \n                                                        index=calcio_backtesting.columns,\n                                                        name=calcio_backtesting.index[-1] +1\n                                                        ))\ndate_list = []\nyr = 0\noff = 0\nfor cnt, row in enumerate(zip(calcio_backtesting.year, calcio_backtesting.week)):\n    if int(row[0]) > yr:\n        yr = int(row[0])\n        off = 0\n    \n    date_list.append(date(int(row[0]), 1, 1) + timedelta(days=1) * off) \n    off +=1\n\ncalcio_backtesting['Date'] = date_list\ncalcio_backtesting['Date'] = pd.to_datetime(calcio_backtesting['Date'])\ncalcio_backtesting.K1 = calcio_backtesting.K1 - 1\ncalcio_backtesting['Open'] = calcio_backtesting.team1_win * calcio_backtesting.K1\ncalcio_backtesting.Open = calcio_backtesting.Open.apply(lambda x: -1 if x < 0 else x).cumsum().shift(1).fillna(0) +100\ncalcio_backtesting['High'] = calcio_backtesting['Low'] = calcio_backtesting['Close'] = calcio_backtesting.Open","b790b3b5":"calcio_backtesting.head()","b3c54838":"from backtesting import Backtest, Strategy\nfrom bokeh.io import output_notebook","44a4bb0b":"def Kf(array):\n    return pd.Series(array)","4ffeab20":"class optimStrategy(Strategy):\n#\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u043f\u043e\u043a\u0443\u043f\u043a\u0443\n    def init(self):        \n        # Precompute value\n        self.vStrat = self.I(Kf, self.data.predicted)       \n        \n    def next(self):\n        if not self.position:        \n            if self.vStrat == 1:\n                self.buy(size = 1) # \u043f\u043e\u043a\u0443\u043f\u0430\u0435\u043c \u043d\u0430 \u0443\u0441\u043b\u043e\u0432\u043d\u044b\u0439 1$, \u0437\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u043d\u043e\u0439 \u043f\u043e\u0434\u0443\u043c\u0430\u0442\u044c \u043d\u0430\u0434 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0435\u0439 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0441\u0442\u0430\u0432\u043e\u043a\n        else:                      # \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u043e\u0436\u043d\u043e \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438\n            if self.position.is_long:\n                if self.vStrat == 0: # \u0432 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 \u0442\u0440\u0435\u0439\u0434\u0438\u043d\u0433\u0430, \u0441\u0438\u0433\u043d\u0430\u043b \u043d\u0430 \u0432\u044b\u0445\u043e\u0434 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u043c \u0441\u0438\u0433\u043d\u0430\u043b\u043e\u043c \u0432\u0445\u043e\u0434\u0430\n                    self.position.close()","0e218af8":"home_reduced = PCA(n_components = 2).fit_transform(\ncalcio[[\n        'team1_back_1g_goals', 'team1_back_2g_goals', 'team1_back_3g_goals', 'team1_back_4g_goals', 'team1_back_5g_goals',\n        'team1_back_1g_goals_home', 'team1_back_2g_goals_home', 'team1_back_3g_goals_home', \n        'team1_back_1g_concs', 'team1_back_2g_concs', 'team1_back_3g_concs', 'team1_back_4g_concs', 'team1_back_5g_concs',\n        'team1_back_1g_concs_home', 'team1_back_2g_concs_home', 'team1_back_3g_concs_home'\n        ]]\n)\n\naway_reduced = PCA(n_components = 2).fit_transform(\ncalcio[[\n        'team2_back_1g_goals', 'team2_back_2g_goals', 'team2_back_3g_goals', 'team2_back_4g_goals', 'team2_back_5g_goals',\n        'team2_back_1g_goals_away', 'team2_back_2g_goals_away', 'team2_back_3g_goals_away', \n        'team2_back_1g_concs', 'team2_back_2g_concs', 'team2_back_3g_concs', 'team2_back_4g_concs', 'team2_back_5g_concs',\n        'team2_back_1g_concs_away', 'team2_back_2g_concs_away', 'team2_back_3g_concs_away'\n        ]]\n)","6809af3e":"calcio_pca = pd.DataFrame(np.concatenate((home_reduced, away_reduced), axis = 1), \n             columns=[\n                 'home_pca1', 'home_pca2', \n                 'away_pca1', 'away_pca2',\n                      ])","83c0908c":"calcio_pca['R1'] = calcio.R1.values\ncalcio_pca['coeff_fact_sign'] = pd.get_dummies(calcio.coeff_fact_sign).iloc[:,0].reset_index(drop = True)","e7f4426b":"def single_instance_metric(row):\n    if row['y_true'] == 1 and row['y_pred'] == 1: # False Positive\n        return 1\n    elif row['y_true'] == 0 and row['y_pred'] == 1: # False Negative\n        return -1\n    else: # Correct Predictions\n        return 0\n        \ndef calcio_score(y_true, y_pred):\n    df = pd.DataFrame({'y_true':y_true, 'y_pred':y_pred})\n    df['metric'] = df.apply(single_instance_metric, axis=1)\n    return np.sum(df['metric'].values)","f2297da6":"from imblearn.over_sampling import *\nadasyn1 = ADASYN(sampling_strategy='minority')","100e45fb":"adasyn1","bcbe72e2":"from pycaret.classification import *","346fde01":"exp_clf102 = setup(\n                  data = calcio_pca, \n                  target = 'coeff_fact_sign', session_id=123,\n                  #combine_rare_levels = False, rare_level_threshold = 0.05,\n                  remove_multicollinearity = False, multicollinearity_threshold = 0.95, \n                  #ignore_features = [],\n                  train_size = 0.91,\n                  data_split_shuffle = False,\n                  normalize = False, \n                  transformation = True,\n                  pca = False,\n                  #pca_components = 2,\n                  #fix_imbalance=True,\n                  #fix_imbalance_method= adasyn1,\n                  log_experiment = False, \n                  experiment_name = 'calcio1',\n                  silent = True \n                   )","16c20e71":"add_metric(\n    id='calcio_score',\n    name='Calcio Score',\n    score_func=calcio_score,\n    target='pred',\n    greater_is_better=True)","ee738bd6":"get_metrics()","46e51367":"best = compare_models(\n                      fold=10,\n                      sort='Prec.'\n                      )","37bb4004":"ada = create_model('ada', fold =10)","7678dbc7":"tuned_ada = tune_model(\n                      ada, optimize = 'Calcio Score', \n                      fold = 10, n_iter = 25, \n                      search_library = 'optuna', \n                      search_algorithm = 'random'\n                     )","fc3a2cd4":"plot_model(tuned_lda, plot = 'confusion_matrix')","c6d095b6":"ensembled_ada = ensemble_model(tuned_ada, optimize = 'Calcio Score', fold = 10, n_estimators = 25, method='Boosting')","b2f2552f":"plot_model(ensembled_ada, plot = 'confusion_matrix')","d8e31fb5":"predictions = predict_model(ensembled_ada, data=calcio_pca)\nprediction_list = list(predictions.Label)\nprediction_list.append(prediction_list[-1])\ncalcio_backtesting['predicted'] = prediction_list\noptbt = Backtest(\n                 calcio_backtesting[['Date', 'Open', 'High', 'Low', 'Close', 'predicted']].set_index('Date')[2235:], #(\u0442\u0435\u0441\u0442\/\u0442\u0440\u0435\u0439\u043d)\n                 optimStrategy, \n                 cash=200, \n                 commission=.0, \n                 exclusive_orders = True)\nstats = optbt.run()\nprint(stats)","8eb22796":"output_notebook()\noptbt.plot(plot_width=1200, plot_volume = False, plot_drawdown = True)","fb529d72":"rf = create_model('rf', fold = 10)","5c870df0":"tuned_rf = tune_model(rf, optimize = 'Prec.', \n                           fold = 10, n_iter = 25, search_library = 'optuna', \n                           search_algorithm = 'tpe')","d3a09700":"plot_model(tuned_rf, plot = 'confusion_matrix')","7cd53d70":"ensembled_rf = ensemble_model(tuned_rf, optimize = 'Calcio Score', fold = 10, n_estimators = 25, method='Boosting')","34ec506a":"predictions = predict_model(tuned_rf, data=calcio_pca)\nprediction_list = list(predictions.Label)\nprediction_list.append(prediction_list[-1])\ncalcio_backtesting['predicted'] = prediction_list\noptbt = Backtest(\n                 calcio_backtesting[['Date', 'Open', 'High', 'Low', 'Close', 'predicted']].set_index('Date')[2235:],\n                 optimStrategy, \n                 cash=200, \n                 commission=.0, \n                 exclusive_orders = True)\nstats = optbt.run()\nprint(stats)","82366d87":"output_notebook()\noptbt.plot(plot_width=1200, plot_volume = False, plot_drawdown = True)","403e8480":"gbc = create_model('gbc', fold = 10)","bc4a21ff":"tuned_gbc = tune_model(gbc, optimize = 'Prec.', \n                           fold = 10, n_iter = 25, search_library = 'optuna', \n                           search_algorithm = 'tpe')","20faadfe":"plot_model(tuned_gbc, plot = 'confusion_matrix')","87a9eb7c":"ensembled_gbc = ensemble_model(tuned_gbc, optimize = 'Calcio Score', fold = 10, n_estimators = 25, method='Bagging')","ee448ce0":"plot_model(ensembled_gbc, plot = 'confusion_matrix')","8fd59dc9":"predictions = predict_model(ensembled_gbc, data=calcio_pca)\nprediction_list = list(predictions.Label)\nprediction_list.append(prediction_list[-1])\ncalcio_backtesting['predicted'] = prediction_list\noptbt = Backtest(\n                 calcio_backtesting[['Date', 'Open', 'High', 'Low', 'Close', 'predicted']].set_index('Date')[2235:],\n                 optimStrategy, \n                 cash=200, \n                 commission=.0, \n                 exclusive_orders = True)\nstats = optbt.run()\nprint(stats)","e0d13f63":"output_notebook()\noptbt.plot(plot_width=1200, plot_volume = False, plot_drawdown = True)","68a216bf":"# blend individual models\nblender = blend_models(estimator_list = [\n                                         tuned_ada,\n                                         tuned_gbc,\n                                         tuned_rf\n                                         ], \n                       optimize = 'Calcio Score', fold = 10\n                       )","d7db8584":"plot_model(blender, plot = 'confusion_matrix')","2ab0386c":"predictions = predict_model(blender, data=calcio_pca)\nprediction_list = list(predictions.Label)\nprediction_list.append(prediction_list[-1])\ncalcio_backtesting['predicted'] = prediction_list\noptbt = Backtest(\n                 calcio_backtesting[['Date', 'Open', 'High', 'Low', 'Close', 'predicted']].set_index('Date')[2235:],\n                 optimStrategy, \n                 cash=200, \n                 commission=.0, \n                 exclusive_orders = True)\nstats = optbt.run()\nprint(stats)","b375a3a4":"output_notebook()\noptbt.plot(plot_width=1200, plot_volume = False, plot_drawdown = True)","44e0d186":"stacker = stack_models(estimator_list = [\n                                         tuned_ada,\n                                         tuned_gbc,\n                                         tuned_rf\n                                         ], \n                       optimize = 'F1', fold =10,\n                       meta_model = ada\n                       )","b65de173":"predictions = predict_model(blender, data=calcio_pca)\nprediction_list = list(predictions.Label)\nprediction_list.append(prediction_list[-1])\ncalcio_backtesting['predicted'] = prediction_list\noptbt = Backtest(\n                 calcio_backtesting[['Date', 'Open', 'High', 'Low', 'Close', 'predicted']].set_index('Date')[2235:],\n                 optimStrategy, \n                 cash=200, \n                 commission=.0, \n                 exclusive_orders = True)\nstats = optbt.run()\nprint(stats)","39abb673":"output_notebook()\noptbt.plot(plot_width=1200, plot_volume = False, plot_drawdown = True)","a378ddec":"print(stacker)","b931f530":"### \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0438\u043c GBC","381a2a4a":"### \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0438\u043c \u0431\u043b\u0435\u043d\u0434\u0435\u0440","189ebaca":"<img src=\"https:\/\/s4.gifyu.com\/images\/animation_200_knjec20j.gif\" width=\"200\" height=\"200\">","06249051":"# **\u041a\u0430\u0441\u0442\u043e\u043c\u043d\u0430\u044f \u043c\u0435\u0442\u0440\u0438\u043a\u0430**","6e61f170":"# **\u0413\u043e\u0442\u043e\u0432\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c**\n1. \u0411\u0435\u0440\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u044b\u0442\u044b 5 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 \u043c\u0430\u0442\u0447\u0435\u0439 \u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e 3 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 (\u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445, \u0432\u044b\u0435\u0437\u0434\u043d\u044b\u0445)\n2. \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0431\u0435\u0440\u0451\u043c 2 \u043f\u0435\u0440\u0432\u044b\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b PCA\n3. \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432\u0435\u0440\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0431\u0443\u043a\u043c\u0435\u043a\u0435\u0440\u0430\n4. \u043d\u0430 \u0432\u044b\u0445\u043e\u0434 \u043f\u043e\u0434\u0430\u0451\u043c \u043f\u0435\u0440\u0435\u043e\u0446\u0435\u043d\u0435\u043d\u0430 \u043b\u0438 \u0432\u0430\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0431\u0443\u043a\u043c\u0435\u043a\u0435\u0440\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442","0cd82acb":"<img src=\"https:\/\/cdn-static.dagospia.com\/img\/patch\/06-2018\/italia-campione-del-mondo-2006-1027177.gif\" width=\"500\" height=\"300\">","2b90032f":"<img src=\"https:\/\/s4.gifyu.com\/images\/animation_200_knjetzgi.gif\" width=\"200\" height=\"200\">","d12870f8":"# \u0427\u0442\u043e \u0431\u044b \u0435\u0449\u0435 \u043f\u0440\u0438\u0433\u043e\u0434\u0438\u043b\u043e\u0441\u044c:\n1. \u041c\u0435\u043d\u0435\u0434\u0436\u043c\u0435\u043d\u0442 (\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f) \u0441\u0442\u0430\u0432\u043e\u043a. \u041c\u043d\u043e\u0433\u043e\u0435 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0436\u0430\u0442\u044c \u0440\u0435\u0433\u0443\u043b\u0438\u0440\u0443\u044e \u0440\u0430\u0437\u043c\u0435\u0440 \u0441\u0442\u0430\u0432\u043a\u0438\n2. \u041c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043d\u0435\u0439\u0440\u043e\u043d\u043e\u0447\u043a\u0438 \u0438 \u0437\u0430\u0441\u0443\u043d\u0443\u0442\u044c \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0438\u043d\u0433 \u0432 callback","87c97233":"**\u041f\u043e\u0441\u043b\u0435 pip install -U \"pycaret[full]\" \u043d\u0443\u0436\u0435\u043d \u0441\u043e\u0444\u0442 RESET!!!**\n\n<img src=\"https:\/\/s4.gifyu.com\/images\/animation_200_knjdldvj.gif\" width=\"200\" height=\"200\">","121d9351":"# RF","b6df3703":"### \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0438\u043c RF","318d7f29":"### **\u0413\u043e\u0442\u043e\u0432\u0438\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u0434\u043b\u044f \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0438\u043d\u0433\u0430**\n\u0414\u0435\u043b\u0430\u0435\u043c \u043f\u043e\u0434\u043e\u0431\u0438\u0435 \u0442\u0430\u0439\u043c\u0444\u0440\u0435\u0439\u043c\u0430, \u0447\u0442\u043e\u0431\u044b \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0438\u0442\u044c \u043d\u0430 \u0433\u043e\u0442\u043e\u0432\u043e\u043c \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0435 \u0434\u043b\u044f \u0442\u0440\u0435\u0439\u0434\u0438\u043d\u0433\u0430.\n- \u043f\u0440\u0438\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442 - 1 \u043a \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0431\u0430\u0440\u0430, \u0435\u0441\u043b\u0438 \u0445\u043e\u0437\u044f\u0435\u0432\u0430 \u0432\u044b\u0438\u0433\u0440\u0430\u043b\u0438, \u0432\u044b\u0447\u0438\u0442\u0430\u0435\u043c 1, \u0435\u0441\u043b\u0438 \u043f\u0440\u043e\u0438\u0433\u0440\u0430\u043b\u0438\n- \u043f\u043e\u0442\u043e\u043c \u0438\u0437 \u043f\u0440\u0435\u0434\u0438\u043a\u0448\u0435\u043d\u0430 \u0434\u0435\u043b\u0430\u0435\u043c \u0441\u0438\u0433\u043d\u0430\u043b \u0434\u043b\u044f \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0438\u043d\u0433\u0430.","862d6b11":"<img src=\"https:\/\/s4.gifyu.com\/images\/animation_200_knjemytt.gif\" width=\"200\" height=\"200\">","c9721ef1":"### \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0438\u043c ada","49faaea6":"<img src=\"https:\/\/s4.gifyu.com\/images\/animation_200_knjf8nl6.gif\" width=\"200\" height=\"200\">","dd02fa64":"### \u0440\u0438\u0441\u0443\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0430","ea86e9d9":"# ada","e145a9b9":"### \u0440\u0438\u0441\u0443\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0430","43dd0e67":"# **\u0413\u043e\u0442\u043e\u0432\u0438\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442**\n(\u0441\u043c. Introduction notebook)","efd1b194":"<img src=\"https:\/\/s4.gifyu.com\/images\/animation_200_knjgf0c3.gif\" width=\"200\" height=\"200\">","dbafc10e":"### \u0440\u0438\u0441\u0443\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0430","ceec1d77":"# GBC","d4ff1253":"# **\u0412\u0430\u0440\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u0438**","d1de6edd":"\u041f\u043b\u0430\u043d:\n1. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0444\u0438\u0447\u0435\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 5 \u043c\u0430\u0442\u0447\u0435\u0439 (PCA), \u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u043c\u0438 \u0442\u0440\u0435\u043d\u0434\u0430\u043c\u0438 \u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u043e\u0444\u0438\u0442\u043d\u044b\u0435 \u0441\u0442\u0430\u0432\u043a\u0438\n2. \u0422\u0430\u0440\u0433\u0435\u0442 \u043f\u0435\u0440\u0435\u043e\u0446\u0435\u043d\u0435\u043d\u0430 \u043b\u0438 \u0441\u0442\u0430\u0432\u043a\u0430 (\u0441\u043c\u043e\u0442\u0440\u0438 Introduction notebook)\n3. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e pycaret c \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0439 score function, \u0438\u0449\u0435\u043c \u043b\u0443\u0447\u0448\u0435\u0435 \u0441\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435\n4. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a backtest \u0434\u043b\u044f \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438","3670df21":"### \u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0438\u043c \u0441\u0442\u044d\u043a\u0438\u043d\u0433"}}