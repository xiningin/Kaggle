{"cell_type":{"7e9158dd":"code","2f01611d":"code","4cbbde70":"code","6618e7c6":"code","1c1004e8":"code","e2f0f26a":"code","1a1fea0a":"code","5e1883c3":"code","e8bc0705":"code","eaef1a84":"code","a0021107":"code","3e187166":"markdown","ebb9e9f6":"markdown","fb19b2e8":"markdown","36506211":"markdown","216d737d":"markdown","7197b0a1":"markdown","5e67791d":"markdown","e77ae411":"markdown","f9397cf7":"markdown","45fe8df1":"markdown","679d07eb":"markdown","026cd7d1":"markdown","ec876aa5":"markdown","10f2513d":"markdown","b12da022":"markdown","b33816bb":"markdown","a5c06e2a":"markdown","d63986f0":"markdown"},"source":{"7e9158dd":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","2f01611d":"train_data = pd.read_csv('\/kaggle\/input\/loan-prediction\/train_loan.csv')","4cbbde70":"train_data.head()","6618e7c6":"train_data.info()","1c1004e8":"from pandas_profiling import ProfileReport\nprofile = ProfileReport(train_data, title=\"Pandas Profiling Report\")","e2f0f26a":"profile.to_widgets()","1a1fea0a":"profile.to_file(\"test_report.html\")","5e1883c3":"!pip install sweetviz","e8bc0705":"import sweetviz as sv\nfirst_report = sv.analyze(train_data)\nfirst_report.show_notebook() ","eaef1a84":"compare_report = sv.compare([train_data[500:], \"Part 1\"], [train_data[:-(len(train_data)-500)], \"Part 2\"],\n                           \"Loan_Status\")\ncompare_report.show_notebook()","a0021107":"compare_intra_report = sv.compare_intra(train_data, train_data['Loan_Status']=='Y', [\"Y\", \"N\"])\ncompare_intra_report.show_notebook()","3e187166":"#### You can get this as an HTML report for presentation purpose via this command","ebb9e9f6":"### 2. The compare_intra() helps divide the dataset into various parts basis the categories in a column\/feature.\n#### Below is an example where the target variable has been used to show contrast between the two datasets.","fb19b2e8":"## 2.1 Support Functions","36506211":"### So here we have a good variety of data, numerical, textual, all unique ids, categorical textual data, categorical numeric data. Good.","216d737d":"## Exploration and story telling are the most important part of any data science flow. There are ways to plot and explore data via multiple visualization libraries. I am trying to explore better solutions to automate some basic EDA and see how it can enable Data Scientists to tell their story better.","7197b0a1":"### 1. The compare() function facilitates a comparitive study between different parts of the same data. This can be very helpful in comparing test and train dataset. Specifying the target variable can be very helpful in this case.\n\n#### Below is an example of a random split.","5e67791d":"## 2.2 Possible error while installing sweetviz library","e77ae411":"###### AttributeError: module 'numpy.linalg.lapack_lite' has no attribute '_ilp64'\n#### Solution that worked in this case: Restart notebook, reinstall the library and import it. ","f9397cf7":"* Notice how there are two different colours used in every visualisation and data representation. The two different colors show comparison between two different datasets.\n* The top pane shows stats about the two datasets and also shows which color represents which of the two datasets. \n* This function can be very useful in different comparitive analysis before and after model development for evaluation.","45fe8df1":"## To be updated with more such libraries and their demo and features!","679d07eb":"### Let's have a baseline understanding of the data so that we can see how good the other libraries are able to capture the data.","026cd7d1":"# 1. Pandas Profiling","ec876aa5":"#### What does pandas profiling tell about the data?\n### 1. Overview tab - This tab gives us a bird's eye view level of information about the dataset. \n#### What stood out?\nThe warning tab stood out to me where at a larger level there are insights about dataset's properties such as high cardinality in some columns or too many zeros that can act as a good indicator of the attention needed at the right place. \n\n### 2. Variables Tab - Contains drop down menus for each variable\/column in the dataset along with important details like distribution, uniqueness, missing count, datatype etc.\n#### What stood out?\nIt is good to see that the variable with only 0's and 1's and the variables with Yes\/No or even Y\/N are treated as Boolean type even though there are other variables with only two categories but they are only marked as categorical in datatype (Gender and Education in this example). So the identification level is appreciable.\n\n### 3. Interactions Tab- Takes all continuous variables and shows in sub tabs the interactions among them.\n\n### 4. Correlations Tab - Takes all numeric variables and shows different sorts of correlations between them.\n\n### 5. Missing Tab - Shows different visualisations on missing count. \n#### What stood out?\nThe heatmap seems very useful in choosing to make certain types of imputations.\n\n### 6. Sample Tab - Printing out a few of the first and last rows from the dataset","10f2513d":"# Introduction","b12da022":"#### As of creating this notebook Kaggle doesn't provide this library built-in so below is the way to download it. Make sure that you have your internet option in settings pane activated for this to work.","b33816bb":"#### 1. The Sweetviz dashboard looks very attractive.\n#### 2. Right on the top pane there is a set of statistics and information regarding the dataset at a larger level.\n#### 3. Each of the columns are explained in separate tabs with a lot of statistical details and distribution plots. Missing value details are also there. On the right there's detailed information about the correlation analysis regarding the selected variable.\n#### 4. For numeric columns details like most frequent values etc. are there which stood out. \n#### 5. The association plot heatmap is highly intuitive, I really like how the size and shape of the filling for each correlation change as the level of correlation changes. This is quite different from the generic heatmaps we see.\n\nIn addition to showing the traditional numerical correlations, it unifies in a single graph both numerical correlation but also the uncertainty coefficient (for categorical-categorical) and correlation ratio (for categorical-numerical). Squares represent categorical-featured-related variables and circles represent numerical-numerical correlations.\n\nIMPORTANT: categorical-categorical associations (provided by the uncertainty coefficient) are ASSYMMETRICAL, meaning that each row represents how much the row title (on the left) gives information on each column.","a5c06e2a":"# 2. SweetViz","d63986f0":"#### This is a well known library for EDA. Let's see what it captures for this dataset."}}