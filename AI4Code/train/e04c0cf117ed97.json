{"cell_type":{"26f42e0c":"code","8da36255":"code","e86453ba":"code","d4a70144":"code","a037c789":"code","0b5e5d7b":"code","baf00f03":"code","3ab44c53":"code","8d25bd2e":"code","a2babde0":"code","ed020513":"code","22b71408":"code","eecf82f3":"code","05f89be2":"code","4c2d1e16":"code","7e7e3619":"code","869de4ad":"code","302058ac":"code","03d22762":"code","8da5bf32":"code","57bf09f7":"code","d87a735f":"code","418615c7":"code","8ee76d35":"code","c76893fa":"code","2a821d68":"code","d1a19024":"code","530185d3":"code","1ac1bd9c":"code","33633b7c":"code","c3c1da98":"code","90c382aa":"code","c59dc57b":"code","c3a79967":"code","a4fdfad4":"code","83a453b7":"code","8e240914":"code","931826d9":"code","80c4c8c2":"code","63d2d2a3":"code","95b66166":"code","61d98d23":"code","ac2095d0":"code","1dca9709":"code","cb197fc7":"code","b1ce5585":"code","f89c8dab":"code","d32eaa89":"code","b2b3f470":"code","6a4ad3e2":"code","13228c57":"code","832ca98c":"code","ebffffd2":"code","4f3a76e3":"code","31fd0364":"code","950c2613":"code","aed376ef":"code","e3c87b99":"code","5a0074f1":"code","e7aa4ec1":"code","c2f25eeb":"code","3390b223":"code","334fdd4a":"code","495f78a1":"code","594c05ba":"code","e36c6274":"code","572961cb":"code","a6b896fc":"code","3f01e626":"code","66b25866":"code","89e0dfb7":"code","ca5d30f5":"code","83e8fcdb":"code","c24f7932":"code","14be0e45":"code","f0fe716a":"code","87abbc24":"code","2c961366":"markdown","0cfaf3bd":"markdown","e0099410":"markdown","bb0e9512":"markdown","381d7aeb":"markdown","03d60362":"markdown","5a9ee186":"markdown","06b80c04":"markdown","fbfd0684":"markdown","34bcde85":"markdown","26f060f8":"markdown","6db074bb":"markdown"},"source":{"26f42e0c":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns ","8da36255":"df =  pd.read_csv(\"..\/input\/vehicleprice\/Data Analysis Challenge Data Set.csv\", na_values=['.','?'])\ndf","e86453ba":"type(df) #to know the type of dataset","d4a70144":"df.shape #to know number of rows and columns","a037c789":"df.info() #overall summery of dataframe","0b5e5d7b":"df.head() #first five row ","baf00f03":"df.tail() #last five row","3ab44c53":"df.duplicated().sum() # checkfor duplicates value","8d25bd2e":"df.isnull().sum() # check for missing value","a2babde0":"\ndf.dropna(inplace=True) #to clear missing values","ed020513":"df.isnull().sum() ","22b71408":"df.shape","eecf82f3":"import plotly.graph_objects as go","05f89be2":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['symboling'],\n    xbins=dict( # bins used for histogram\n        start=-5,\n        end=5,\n        size=0\n    ),\n  \n    marker_color='blue',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='SYMBOLING_DISTRIBUTION',\n    xaxis_title_text='SYMBOLING',\n    yaxis_title_text='COUNT', \n    bargap=0.05, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n     width=500,\n    height=500\n)\n\nfig.show()","4c2d1e16":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['normalized-losses'],\n    xbins=dict( # bins used for histogram\n        start=60,\n        end=300,\n        size=2\n    ),\n    marker_color='red',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='NORMALIZED_LOSSES_DISTRIBUTION',\n    xaxis_title_text='NORMALIZED-LOSSES',\n    yaxis_title_text='COUNT', \n    bargap=0.05, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","7e7e3619":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['fuel-type'],\n    marker_color='green',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='FUEL_TYPE_DISTRIBUTION',\n    xaxis_title_text='FUEL_TYPE',\n    yaxis_title_text='COUNT', \n    bargap=0.8, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","869de4ad":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['make'],\n    marker_color='firebrick',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='MAKE_DISTRIBUTION',\n    xaxis_title_text='MAKE',\n    yaxis_title_text='COUNT', \n    bargap=0.05, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","302058ac":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['aspiration'],\n\n    marker_color='coral',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='ASPIRATION_DISTRIBUTION',\n    xaxis_title_text='ASPIRATION',\n    yaxis_title_text='COUNT', \n    bargap=0.8, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","03d22762":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['num-of-doors'],\n\n    marker_color='indigo',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='NUMBERS_OF_DOORS_DISTRIBUTION',\n    xaxis_title_text='NO_OF_DOORS',\n    yaxis_title_text='COUNT', \n    bargap=0.8, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","8da5bf32":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['body-style'],\n\n    marker_color='olive',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='BODY_STYLE_DISTRIBUTION',\n    xaxis_title_text='BODY_STYLE',\n    yaxis_title_text='COUNT', \n    bargap=0.5, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","57bf09f7":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['drive-wheels'],\n\n    marker_color='hotpink',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='DRIVE_WHEELS_DISTRIBUTION',\n    xaxis_title_text='DRIVE_WHEELS',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","d87a735f":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['engine-location'],\n\n    marker_color='teal',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='ENGINE_LOCATION_DISTRIBUTION',\n    xaxis_title_text='ENGINE_LOCATION',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","418615c7":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['wheel-base'],\n\n    marker_color='orchid',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='WHEEL_BASE_DISTRIBUTION',\n    xaxis_title_text='WHEEL_BASE',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","8ee76d35":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['length'],\n\n    marker_color='lime',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='LENGTH_DISTRIBUTION',\n    xaxis_title_text='LENGTH',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","c76893fa":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['width'],\n\n    marker_color='mediumpurple',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='WIDTH__DISTRIBUTION',\n    xaxis_title_text='WIDTH',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","2a821d68":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['height'],\n\n    marker_color='royalblue',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='HEIGHT_DISTRIBUTION',\n    xaxis_title_text='HEIGHT',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","d1a19024":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['wheel-base'],\n\n    marker_color='orchid',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='WHEEL_BASE_DISTRIBUTION',\n    xaxis_title_text='WHEEL_BASE',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","530185d3":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['curb-weight'],\n\n    marker_color=' crimson',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='CURB_WEIGHT_DISTRIBUTION',\n    xaxis_title_text='CURB_WEIGHT',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","1ac1bd9c":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['engine-type'],\n\n    marker_color='orchid',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='ENGINE_TYPE_DISTRIBUTION',\n    xaxis_title_text='ENGINE_TYPE',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False },\n    width=500,\n    height=500\n)\n\nfig.show()","33633b7c":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['num-of-cylinders'],\n\n    marker_color='dodgerblue',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='NUMBER_OF_CYLINDERS_DISTRIBUTION',\n    xaxis_title_text='NUMBER_OF_CYLINDER',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False }\n    , width=500,\n    height=500\n)\n\nfig.show()","c3c1da98":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['engine-size'],\n\n    marker_color='turquoise',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='ENGINE_SIZE_DISTRIBUTION',\n    xaxis_title_text='ENGINE_SIZE',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False }\n     , width=500,\n    height=500\n)\n\nfig.show()","90c382aa":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['fuel-system'],\n\n    marker_color='black',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='FUEL_SYSTEM_DISTRIBUTION',\n    xaxis_title_text='FUEL_SYSTEM',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False }\n     , width=500,\n    height=500\n)\n\nfig.show()","c59dc57b":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['bore'],\n\n    marker_color='aqua',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='BORE_DISTRIBUTION',\n    xaxis_title_text='BORE',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False }\n     , width=500,\n    height=500\n)\n\nfig.show()","c3a79967":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['stroke'],\n\n    marker_color='mediumseagreen',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='STROKE_DISTRIBUTION',\n    xaxis_title_text='STROKE',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False }\n     , width=500,\n    height=500\n)\n\nfig.show()","a4fdfad4":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['compression-ratio'],\n\n    marker_color='salmon',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='COMPRESSION_RATIO_DISTRIBUTION',\n    xaxis_title_text='COMPRESSION_RATIO',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False }\n     , width=500,\n    height=500\n)\n\nfig.show()","83a453b7":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['horsepower'],\n\n    marker_color='darkslategrey',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='HORSEPOWER_DISTRIBUTION',\n    xaxis_title_text='HORSEPOWER',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False }\n     , width=500,\n    height=500\n)\n\nfig.show()","8e240914":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['peak-rpm'],\n\n    marker_color='gold',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='PEAK_RPM_DISTRIBUTION',\n    xaxis_title_text='PEAK_RPM',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False }\n     , width=500,\n    height=500\n)\n\nfig.show()","931826d9":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['city-mpg'],\n\n    marker_color='cyan',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='CITY_MPG_DISTRIBUTION',\n    xaxis_title_text='CITY_MPG',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False }\n     , width=500,\n    height=500\n)\n\nfig.show()","80c4c8c2":"fig = go.Figure()\nfig.add_trace(go.Histogram(\n    x = df['highway-mpg'],\n\n    marker_color='orchid',\n    opacity=1\n))\n\nfig.update_layout(\n    title_text='HIGHWAY_MPG_DISTRIBUTION',\n    xaxis_title_text='HIGHWAY_MPG',\n    yaxis_title_text='COUNT', \n    bargap=0.6, # gap between bars of adjacent location coordinates\n    xaxis =  {'showgrid': False },\n    yaxis = {'showgrid': False }\n     , width=500,\n    height=500\n)\n\nfig.show()","63d2d2a3":"import plotly.express as px","95b66166":"fig = px.scatter(df,x='symboling', y='price' , color='price' , title='PRICE V\/S SYMBOLING'   , width=500,\n    height=500)\nfig.show()\n\n","61d98d23":"fig = px.scatter(df,x='normalized-losses', y='price' , color='price',title='PRICE V\/S NORMALIZED_LOSSES'  , width=500,\n    height=500) \nfig.show()\n","ac2095d0":"fig = px.scatter(df, x='make', y='price',color='price',title='PRICE V\/S MAKE'  , width=500,\n    height=500)\nfig.show()","1dca9709":"fig = px.scatter(df, x='fuel-type', y='price',color='price' ,title='PRICE V\/S FUEL-TYPE'  , width=500,\n    height=500)\nfig.show()","cb197fc7":"fig = px.scatter(df, x='aspiration', y='price' ,color='price',title=\"PRICE V\/S ASPIRATION\"  , width=500,\n    height=500)\nfig.show()","b1ce5585":"fig = px.scatter(df, x='num-of-doors', y='price',color='price',title=\"PRICE V\/S NUM-OF-DOORS\"  , width=500,\n    height=500)\nfig.show()","f89c8dab":"fig = px.scatter(df, x='body-style', y='price',color='price',title=\"PRICE V\/S BODY STYLE\"  , width=500,\n    height=500)\nfig.show()","d32eaa89":"fig = px.scatter(df, x='drive-wheels', y='price',color='price',title=\"PRICE V\/S DRIVE-WHEELS\" , width=500,\n    height=500)\nfig.show()","b2b3f470":"fig = px.scatter(df, x='engine-location', y='price',color='price',title=\"PRICE V\/S ENGINE-LOCATION\"  , width=500,\n    height=500)\nfig.show()\n","6a4ad3e2":"fig = px.scatter(df, x='wheel-base', y='price',color='price',title=\"PRICE V\/S WHEEL-BASE\"  , width=500,\n    height=500)\nfig.show()","13228c57":"fig = px.scatter(df, x='length', y='price',color='price',title=\"PRICE V\/S LENGTH\"  , width=500,\n    height=500)\nfig.show()","832ca98c":"fig = px.scatter(df, x='width', y='price',color='price',title=\"PRICE V\/S WIDTH\"  , width=500,\n    height=500)\nfig.show()","ebffffd2":"fig = px.scatter(df, x='height', y='price',color='price',title=\"PRICE V\/S HEIGHT\"  , width=500,\n    height=500)\nfig.show()","4f3a76e3":"fig = px.scatter(df, x='curb-weight', y='price',color='price',title=\"PRICE V\/S CURB-WEIGHT\"  , width=500,\n    height=500)\nfig.show()","31fd0364":"fig = px.scatter(df, x='engine-type', y='price',color='price',title=\"PRICE V\/S ENGINE-TYPE\"  , width=500,\n    height=500)\nfig.show()","950c2613":"fig = px.scatter(df, x='num-of-cylinders', y='price',color='price',title=\"PRICE V\/S NUM-OF-CYLINDERS\"  , width=500,\n    height=500)\nfig.show()","aed376ef":"fig = px.scatter(df, x='engine-size', y='price',color='price',title=\"PRICE V\/S ENGINE-SIZE\"  , width=500,\n    height=500)\nfig.show()","e3c87b99":"fig = px.scatter(df, x='fuel-system', y='price',color='price',title=\"PRICE V\/S FUEL-SYSTEM\"  , width=500,\n    height=500)\nfig.show()","5a0074f1":"fig = px.scatter(df, x='bore', y='price',color='price',title=\"PRICE V\/S BORE\"  , width=500,\n    height=500)\nfig.show()","e7aa4ec1":"fig = px.scatter(df, x='stroke', y='price',color='price',title=\"PRICE V\/S STROKE\"  , width=500,\n    height=500)\nfig.show()","c2f25eeb":"\nfig = px.scatter(df, x='compression-ratio', y='price',color='price',title=\"PRICE V\/S COMPRESSION-RATIO\"  , width=500,\n    height=500)\nfig.show()","3390b223":"fig = px.scatter(df, x='horsepower', y='price',color='price',title=\"PRICE V\/S HORSEPOWER\"  , width=500,\n    height=500)\nfig.show()","334fdd4a":"fig = px.scatter(df, x='peak-rpm', y='price',color='price',title=\"PRICE V\/S PEAK(RP)\"  , width=500,\n    height=500)\nfig.show()","495f78a1":"fig = px.scatter(df, x='city-mpg', y='price',color='price',title=\"PRICE V\/S CITY(MPG)\"  , width=500,\n    height=500)\nfig.show()","594c05ba":"fig = px.scatter(df, x='highway-mpg', y='price',color='price',title=\"PRICE V\/S HIGHWAY(MPG)\"  , width=500,\n    height=500)\nfig.show()","e36c6274":"fig = px.pie(df, values='price', names='symboling')\nfig.update_traces(hole=.4)\nfig.update_layout(\n    title_text=\"SYMBOLING DISTRIBUTION IN THE DATASET \"\n     , width=500,\n    height=500)\nfig.show()","572961cb":"fig = px.pie(df, values='price', names='make')\nfig.update_layout(\n    title_text=\"MAKE DISTRIBUTION IN THE DATASET \"\n     , width=500,\n    height=500)\nfig.update_traces(hole=.4)\nfig.show()","a6b896fc":"fig = px.pie(df, values='price', names='fuel-type')\nfig.update_traces(hole=.4)\nfig.update_layout(\n    title_text=\"FUEL DISTRIBUTION IN THE DATASET \"\n     , width=500,\n    height=500)\nfig.show()","3f01e626":"fig = px.pie(df, values='price', names='aspiration')\nfig.update_layout(\n    title_text=\"ASPIRATION DISTRIBUTION IN THE DATASET \"\n     , width=500,\n    height=500)\nfig.update_traces(hole=.4)\nfig.show()","66b25866":"fig = px.pie(df, values='price', names='num-of-doors')\nfig.update_layout(\n    title_text=\"DOORS DISTRIBUTION IN THE DATASET \"\n     , width=500,\n    height=500)\nfig.update_traces(hole=.4)\nfig.show()","89e0dfb7":"fig = px.pie(df, values='price', names='drive-wheels')\nfig.update_layout(\n    title_text=\"WHEELS DISTRIBUTION IN THE DATASET \"\n     , width=500,\n    height=500)\nfig.update_traces(hole=.4)\nfig.show()","ca5d30f5":"fig = px.pie(df, values='price', names='engine-location')\nfig.update_layout(\n    title_text=\"ENGINE LOCATION DISTRIBUTION IN THE DATASET \"\n     , width=500,\n    height=500)\nfig.update_traces(hole=.4)\nfig.show()","83e8fcdb":"fig = px.pie(df, values='price', names='engine-type')\nfig.update_layout(\n    title_text=\"ENGINE TYPE DISTRIBUTION IN THE DATASET \"\n     , width=500,\n    height=500)\nfig.update_traces(hole=.4)\nfig.show()","c24f7932":"fig = px.pie(df, values='price', names='num-of-cylinders')\nfig.update_layout(\n    title_text=\"CYLINDERS DISTRIBUTION IN THE DATASET \"\n     , width=500,\n    height=500)\nfig.update_traces(hole=.4)\nfig.show()","14be0e45":"fig = px.pie(df, values='price', names='fuel-system')\nfig.update_layout(\n    title_text=\"FUEL SYSTEM DISTRIBUTION IN THE DATASET \"\n     , width=500,\n    height=500)\nfig.update_traces(hole=.4)\nfig.show()","f0fe716a":"# Heatmap for visualizing correlation analysis\ncor = df.corr()\nplt.figure(figsize=(18,12))\nsns.heatmap(cor,annot=True,cmap='coolwarm')  \nplt.show()","87abbc24":"cor[abs(cor['price']) > 0.1]['price']","2c961366":"Correlation Matrix with Heatmap","0cfaf3bd":"**DATA ANALYSIS AND VISUALIZATION**","e0099410":"DATA CLEANING","bb0e9512":"DATA VISUALIZATION","381d7aeb":"price  - normalized-losses , price - height , price - stroke and price - compression-ratio have weak positive linear relationship.\n\nprice - bore have moderate positive linear relationship.\n\nprice - wheel-base , price - length , price - width , price - curb-weight , price - engine-size  ,  price - horsepower have strong relationship\n","03d60362":"Import the required libraries","5a9ee186":"Lets have a look at the dataset : The dataset contains symboling , normalized-losses , make , fuel-type , aspiration , num-of-doors , body-style , drive-wheels , engine-location , wheel-base , length , width , height , curb-weight , engine-type , num-of-cylinders , engine-size , fuel-system , bore , stroke , compression-ratio , horsepower , peak-rpm , city-mpg , highway-mpg and  price.\n\nWhat we have to do : we have to analyse the data and find relation between the various factors. And to analyse how the others factors are affecting the price of the vehicle.","06b80c04":"DATA EXPLORATION ","fbfd0684":"![picture](https:\/\/i.ytimg.com\/vi\/MBZMTL9Q2RU\/maxresdefault.jpg)","34bcde85":"Read the data","26f060f8":"Now the dataset is ready to used","6db074bb":"\n\nLanguage Used : Python\n\nSoftware used  : jupyter notebook  , Python\n\nOperating System : Microsoft Windows\n\nAim and Objective : To gain  useful information and discover patterns from the data.  \n\nFeature Scope : The scope of data analytics is to help to get pattern from the data. The data is cleaned and analysed . This data can be  used to derive insights. The insights can be used for business-related decision-making purposes.\n\nAbout the code : \n\n    Programming Language used : Python\n    Libraries used : Numpy , pandas , matplotlib , seaborn , plotly.\n\n\n\n"}}