{"cell_type":{"8c3d5ab9":"code","80f761a0":"code","38ba4662":"code","300ed9fb":"code","411336e5":"code","1199dead":"code","faed2441":"code","38ad9a2d":"code","0c99502d":"code","f24a84aa":"code","0a276197":"code","4908d7b0":"code","ea7b0a4a":"code","1990b9ab":"code","57fb4d08":"code","fecf248c":"code","bdfa653b":"code","c1cbe2b9":"code","da516af1":"code","b987aa9d":"code","de7920c1":"markdown","1879f3d0":"markdown","17d65d24":"markdown","10becc01":"markdown","98184146":"markdown","60cb9598":"markdown","100b9395":"markdown","509f41b8":"markdown","a7b93201":"markdown","c31a4d89":"markdown","a1aa57dd":"markdown","00d5bd39":"markdown"},"source":{"8c3d5ab9":"#Python 3 environment ","80f761a0":"!wget -O drug200.csv https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/ML0101ENv3\/labs\/drug200.csv","38ba4662":"import numpy as np\nimport pandas as pd\nfrom sklearn.tree import DecisionTreeClassifier","300ed9fb":"my_data = pd.read_csv(\"\/kaggle\/input\/drug200.csv\", delimiter=\",\")\nmy_data[0:5]","411336e5":"X = my_data[['Age','Sex','BP','Cholesterol','Na_to_K']].values\nX[0:5]","1199dead":"from sklearn import preprocessing\n\n#SEX\nle_sex = preprocessing.LabelEncoder()\nle_sex.fit(['F','M'])\nX[:,1] = le_sex.transform(X[:,1]) \n\n#BP\nle_BP = preprocessing.LabelEncoder()\nle_BP.fit([ 'LOW', 'NORMAL', 'HIGH'])\nX[:,2] = le_BP.transform(X[:,2])\n\n#Cholesterol\nle_Chol = preprocessing.LabelEncoder()\nle_Chol.fit([ 'NORMAL', 'HIGH'])\nX[:,3] = le_Chol.transform(X[:,3]) \n\nX[0:5]","faed2441":"my_data['Drug'].unique()","38ad9a2d":"y = my_data['Drug']\ny[0:5]","0c99502d":"from sklearn.model_selection import train_test_split\nX_trainset, X_testset, y_trainset, y_testset = train_test_split(X, y, test_size=0.3, random_state=3)","f24a84aa":"X_trainset[0:5]","0a276197":"y_trainset[0:5]","4908d7b0":"drugTree = DecisionTreeClassifier(criterion=\"entropy\", max_depth = 4)\ndrugTree","ea7b0a4a":"drugTree.fit(X_trainset,y_trainset)","1990b9ab":"predTree = drugTree.predict(X_testset)","57fb4d08":"print (predTree [0:5])\nprint (y_testset [0:5])\n","fecf248c":"from sklearn import metrics\nimport matplotlib.pyplot as plt\nprint(\"DecisionTrees's Accuracy: \", metrics.accuracy_score(y_testset, predTree))","bdfa653b":"!conda install -c conda-forge pydotplus -y","c1cbe2b9":"!conda install -c conda-forge python-graphviz -y","da516af1":"from sklearn.externals.six import StringIO\nimport pydotplus\nimport matplotlib.image as mpimg\nfrom sklearn import tree\n%matplotlib inline ","b987aa9d":"dot_data = StringIO()\nfilename = \"drugtree.png\"\nfeatureNames = my_data.columns[0:5]\ntargetNames = my_data[\"Drug\"].unique().tolist()\nout=tree.export_graphviz(drugTree,feature_names=featureNames, out_file=dot_data, class_names= np.unique(y_trainset), filled=True,  special_characters=True,rotate=False)  \ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())  \ngraph.write_png(filename)\nimg = mpimg.imread(filename)\nplt.figure(figsize=(100, 200))\nplt.imshow(img,interpolation='nearest')","de7920c1":"Load dataset","1879f3d0":"As you may figure out, some features in this dataset are categorical such as __Sex__ or __BP__. Unfortunately, Sklearn Decision Trees do not handle categorical variables. But still we can convert these features to numerical values. __pandas.get_dummies()__\nConvert categorical variable into dummy\/indicator variables.","17d65d24":"<h1><center>Decision Trees<\/center><\/h1>","10becc01":"### Features","98184146":"<div href=\"pre-processing\">\n    <h2>Pre-processing<\/h2>\n<\/div>","60cb9598":"Download Dataset","100b9395":"### Setting up the Decision Tree","509f41b8":"### Evaluation\n","a7b93201":"Import the Following Libraries:\n<ul>\n    <li> <b>numpy (as np)<\/b> <\/li>\n    <li> <b>pandas<\/b> <\/li>\n    <li> <b>DecisionTreeClassifier<\/b> from <b>sklearn.tree<\/b> <\/li>\n<\/ul>","c31a4d89":"### Modeling","a1aa57dd":"### Prediction","00d5bd39":"### Visualization"}}