{"cell_type":{"b3e99465":"code","009216cd":"code","329a52b9":"code","b6b3d5c2":"code","062a2491":"code","17bf7d93":"code","0ae68282":"code","ddbee13c":"code","e7e5e5c5":"code","7e55771d":"code","7843c422":"code","de4c28a5":"code","536d3b9e":"code","255099a5":"code","60c60e92":"code","60119ac8":"code","5c25c105":"code","9118b1cc":"code","bc8918e3":"code","db32ae03":"code","06384de1":"code","fb912190":"code","881212cb":"code","ebb3bff9":"code","bcaa504a":"code","8d168fea":"code","c0befbc1":"code","32db8256":"code","f77d9683":"code","8b5d870b":"code","725687de":"code","9e4a7bdc":"code","f25bb83f":"code","247d8033":"code","47c12a8e":"code","da0aa72b":"code","5a57bee4":"code","09ff231a":"code","bd2f309d":"code","ea29eab6":"code","0aa2c461":"code","ef7f6454":"code","e284e428":"code","bbc1c84f":"code","4cb7a904":"code","0e295130":"code","53258225":"code","d68f59cb":"code","01fafb1b":"code","ae49f0e2":"code","ad46af7f":"code","0522fd09":"code","0727742f":"code","bc67e9eb":"code","3c97fa43":"code","382c64cc":"code","5436c2b0":"code","63f5b385":"code","fd795702":"code","3fba29f1":"markdown","73492168":"markdown","c004bb71":"markdown","242272e9":"markdown","dd3a229c":"markdown","9882da77":"markdown","3ff31c81":"markdown","dda7a092":"markdown","b3eedc57":"markdown","83f16827":"markdown","284c31f6":"markdown","23f6132f":"markdown","1f1d0ed9":"markdown","be13b57f":"markdown","53efea02":"markdown","7a94751e":"markdown","85f37523":"markdown","95b79dcd":"markdown","a1618609":"markdown","2fc3aab0":"markdown","5e44dc10":"markdown","bef2e090":"markdown","53c50331":"markdown"},"source":{"b3e99465":"import numpy as np\nimport pandas as pd\n\n#Import visualisation libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n%matplotlib inline\n\nimport missingno as msno\nimport warnings\nwarnings.filterwarnings('ignore')","009216cd":"weather=pd.read_csv('..\/input\/weather-dataset-rattle-package\/weatherAUS.csv')\nweather.head()","329a52b9":"#Shape of dataframe\nprint('Shape of dataframe: ',weather.shape)\nprint('\\n')\n\n#Names of columns of dataframe\nprint('Names of columns of dataframe: ',weather.columns)","b6b3d5c2":"#Null values\nmsno.matrix(weather)\n\nweather.isnull().sum()","062a2491":"#Statistical insights into the dataset\nweather.describe()","17bf7d93":"sns.countplot(weather['RainTomorrow'])","0ae68282":"weather['Date'] = pd.to_datetime(weather['Date'])\nweather['Day'] = weather['Date'].dt.day\nweather['Year'] = weather['Date'].dt.year","ddbee13c":"#Dropping the Date column since day and month have already been extracted as integer values.\nweather.drop('Date',axis=1,inplace=True)","e7e5e5c5":"#NUMERICAL COLUMNS\nnumerical_columns=weather._get_numeric_data().columns\nprint('Numerical columns:', list(numerical_columns))\nprint('\\n')\n\n#CATEGORICAL COLUMNS\ncategorical_columns=list(set(weather)-set(numerical_columns))\nprint('Categorical colums: ',categorical_columns)","7e55771d":"plt.figure(figsize=(18,8))\n\n#Define the mask to set the values in the upper triangle to True\nmask_1=np.triu(np.ones_like(weather.corr(),dtype=np.bool))   \nheatmap=sns.heatmap(weather.corr(),annot=True,cmap='coolwarm',mask=mask_1)\nheatmap.set_title('Correlation heatmap',fontdict={'fontsize':16})","7843c422":"fig,axes=plt.subplots(2,2,figsize=(30,20))\nsns.set_style('whitegrid')\n\n#Maximum Temperature\nplt.subplot(2,2,1)\nplt.title('Maximum Temperature variation over the years',fontweight='bold',fontsize=20)\nplt.xlabel('MaxTemp',fontweight='bold',fontsize=16)\nsns.distplot(weather['MaxTemp'],color='indigo',bins=25)\n\n#Minimum Temperature\nplt.subplot(2,2,2)\nplt.title('Minimum Temperature variation over the years',fontweight='bold',fontsize=20)\nplt.xlabel('MinTemp',fontweight='bold',fontsize=16)\nsns.distplot(weather['MinTemp'],color='blue')\n\n#Sunshine\nplt.subplot(2,2,3)\nsns.distplot(weather['Sunshine'],bins=50,color='green')\nplt.title('Sunshine over the years',fontweight='bold',fontsize=20)\nplt.xlabel('Sunshine',fontweight='bold',fontsize=16)\n\n#Evaporation\nplt.subplot(2,2,4)\nsns.distplot(weather['Evaporation'],bins=50,color='red')\nplt.title('Evaporation over the years',fontweight='bold',fontsize=20)\nplt.xlabel('Evaporation',fontweight='bold',fontsize=16)\n\n\nprint('\\033[1m'+'The mean max. temp. is: ', weather['MaxTemp'].mean())\nprint('\\033[1m'+'The mean min. temp. is: ', weather['MinTemp'].mean())\nprint('\\033[1m'+'The mean sunshine over the years is: ', weather['Sunshine'].mean())\nprint('\\033[1m'+'The mean evaporation over the years is: ', weather['Evaporation'].mean())","de4c28a5":"#Imputing missing values(with mean) \n\nweather['MinTemp'].fillna(weather['MinTemp'].mean(),inplace=True)\nweather['MaxTemp'].fillna(weather['MaxTemp'].mean(),inplace=True)\nweather['Evaporation'].fillna(weather['Evaporation'].mean(),inplace=True)\nweather['Sunshine'].fillna(weather['Sunshine'].mean(),inplace=True)","536d3b9e":"plt.figure(figsize=(18,6))\nsns.distplot(weather['Rainfall'],bins=50,color='black')\nplt.title('Rainfall over the years',fontweight='bold',fontsize=16)\nplt.show()\n\n\nprint('\\033[1m'+'The mean rainfall over the years is: ', weather['Rainfall'].mean())","255099a5":"#Filling missing values \nweather['Rainfall'].fillna(weather['Rainfall'].mean(),inplace=True)","60c60e92":"sns.set_style('darkgrid')\nfig,axes=plt.subplots(6,2,figsize=(50,75))\n\n#WindSpeed9am\nplt.subplot(6,2,1)\nsns.distplot(weather['WindSpeed9am'],bins=50,color='black')\nplt.title('Wind Speed at 9am',fontweight='bold',fontsize=24)\nplt.xlabel('Wind Speed 9am',fontweight='bold',fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\n\n#WindSpeed3pm\nplt.subplot(6,2,2)\nsns.distplot(weather['WindSpeed3pm'],bins=50,color='black')\nplt.title('Wind Speed at 3pm',fontweight='bold',fontsize=24)\nplt.xlabel('Wind Speed 3pm',fontweight='bold',fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\n\n\n#Humidity9am\nplt.subplot(6,2,3)\nsns.distplot(weather['Humidity9am'],bins=50,color='red')\nplt.title('Humidity at 9am',fontweight='bold',fontsize=24)\nplt.xlabel('Humidity 9am',fontweight='bold',fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\n\n\n#Humidity3pm\nplt.subplot(6,2,4)\nsns.distplot(weather['Humidity3pm'],bins=50,color='red')\nplt.title('Humidity at 3pm',fontweight='bold',fontsize=24)\nplt.xlabel('Humidity 3pm',fontweight='bold',fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\n\n\n#Pressure9am\nplt.subplot(6,2,5)\nsns.distplot(weather['Pressure9am'],bins=50,color='orange')\nplt.title('Pressure at 9am',fontweight='bold',fontsize=24)\nplt.xlabel('Pressure 9am',fontweight='bold',fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\n\n\n#Pressure3pm\nplt.subplot(6,2,6)\nsns.distplot(weather['Pressure3pm'],bins=50,color='orange')\nplt.title('Pressure at 3pm',fontweight='bold',fontsize=24)\nplt.xlabel('Pressure 3pm',fontweight='bold',fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\n\n\n#Cloud9am\nplt.subplot(6,2,7)\nsns.distplot(weather['Cloud9am'],bins=50,color='green')\nplt.title('Cloud 9am',fontweight='bold',fontsize=24)\nplt.xlabel('Cloud 9am',fontweight='bold',fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\n\n\n#Cloud3pm\nplt.subplot(6,2,8)\nsns.distplot(weather['Cloud3pm'],bins=50,color='green')\nplt.title('Cloud 3pm',fontweight='bold',fontsize=24)\nplt.xlabel('Cloud 3pm',fontweight='bold',fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\n\n\n#Temp9am\nplt.subplot(6,2,9)\nsns.distplot(weather['Temp9am'],bins=50,color='violet')\nplt.title('Temp 9am',fontweight='bold',fontsize=24)\nplt.xlabel('Temp 9am',fontweight='bold',fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\n\n\n#Temp3pm\nplt.subplot(6,2,10)\nsns.distplot(weather['Temp3pm'],bins=50,color='violet')\nplt.title('Temp 3pm',fontweight='bold',fontsize=24)\nplt.xlabel('Temp 3pm',fontweight='bold',fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\n\n\n#WindGustSpeed\nplt.subplot(6,2,11)\nsns.distplot(weather['WindGustSpeed'],bins=50,color='blue')\nplt.title('WindGustSpeed',fontweight='bold',fontsize=24)\nplt.xlabel('WindGustSpeed',fontweight='bold',fontsize=20)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.tight_layout()\n\n\nprint('\\033[1m'+'The mean WindSpeed9am is: ', weather['WindSpeed9am'].mean())\nprint('\\033[1m'+'The mean WindSpeed3pm is: ', weather['WindSpeed3pm'].mean())\nprint('\\033[1m'+'The mean Humidity9am is: ', weather['Humidity9am'].mean())\nprint('\\033[1m'+'The mean Humidity3pm is: ', weather['Humidity3pm'].mean())\nprint('\\033[1m'+'The mean Pressure9am is: ', weather['Pressure9am'].mean())\nprint('\\033[1m'+'The mean Pressure3pm is: ', weather['Pressure3pm'].mean())\nprint('\\033[1m'+'The mean Cloud9am is: ', weather['Cloud9am'].mean())\nprint('\\033[1m'+'The mean Cloud3pm is: ', weather['Cloud3pm'].mean())\nprint('\\033[1m'+'The mean Temp9am is: ', weather['Temp9am'].mean())\nprint('\\033[1m'+'The mean Temp9am is: ', weather['Temp3pm'].mean())\nprint('\\033[1m'+'The mean WindGustSpeed is: ', weather['WindGustSpeed'].mean())","60119ac8":"#Imputing missing values with mean values\n\nweather['WindSpeed9am'].fillna(weather['WindSpeed9am'].mean(),inplace=True)\nweather['WindSpeed3pm'].fillna(weather['WindSpeed3pm'].mean(),inplace=True)\nweather['Humidity9am'].fillna(weather['Humidity9am'].mean(),inplace=True)\nweather['Humidity3pm'].fillna(weather['Humidity3pm'].mean(),inplace=True)\nweather['Pressure9am'].fillna(weather['Pressure9am'].mean(),inplace=True)\nweather['Pressure3pm'].fillna(weather['Pressure3pm'].mean(),inplace=True)\nweather['Cloud9am'].fillna(weather['Cloud9am'].mean(),inplace=True)\nweather['Cloud3pm'].fillna(weather['Cloud3pm'].mean(),inplace=True)\nweather['Temp9am'].fillna(weather['Temp9am'].mean(),inplace=True)\nweather['Temp3pm'].fillna(weather['Temp3pm'].mean(),inplace=True)\nweather['WindGustSpeed'].fillna(weather['WindGustSpeed'].mean(),inplace=True)","5c25c105":"#WindGustDir\nvalues=weather.groupby('WindGustDir').Year.count()\ndirections=values.index\ncount_of_direction=list(values)\nfig=px.pie(values=count_of_direction,names=directions,color_discrete_sequence=px.colors.sequential.RdBu,title='WinGustDir')\nfig.show()\n\n#WindDir9am\nvalues_9am=weather.groupby('WindDir9am').Year.count()\ndirections_9am=values_9am.index\ncount_of_direction_9am=list(values_9am)\n\nfig,axes=plt.subplots(1,2,figsize=(50,25))\naxes[0].pie(count_of_direction_9am,labels=directions_9am,autopct='%1.1f%%',explode=(0,0,0,0.1,0,0,0,0,0,0,0,0,0,0,0,0),textprops={'fontsize':30},)\naxes[0].set_title('WindDir9am',fontweight='bold',fontsize=36)\n\n#WindDir3pm\nvalues_3pm=weather.groupby('WindDir3pm').Year.count()\ndirections_3pm=values_3pm.index\ncount_of_direction_3pm=list(values_3pm)\n\naxes[1].pie(count_of_direction_3pm,labels=directions_3pm,explode=(0,0,0,0,0,0,0,0,0,0.1,0,0,0,0,0,0),textprops={'fontsize':30},autopct='%1.1f%%')\naxes[1].set_title('WindDir3pm',fontweight='bold',fontsize=36)\n\nplt.show()","9118b1cc":"#Imputing values in categorical columns\n\nweather['WindGustDir'].fillna('W',inplace=True)\nweather['WindDir9am'].fillna('N',inplace=True)\nweather['WindDir3pm'].fillna('SE',inplace=True)","bc8918e3":"plt.subplots(2,2,figsize=(16,14))\n\n#Sunshine vs rainfall\nplt.subplot(2,2,1)\nsns.scatterplot(data=weather,x='Sunshine',y='Rainfall',color='red')\nplt.title('Sunshine vs Rainfall',fontweight='bold',fontsize=20)\n\n#Evaporation vs rainfall\nplt.subplot(2,2,2)\nsns.scatterplot(data=weather,x='Evaporation',y='Rainfall',color='orange')\nplt.title('Evaporation vs Rainfall',fontweight='bold',fontsize=20)\n\n#MaxTemp vs rainfall\nplt.subplot(2,2,3)\nsns.scatterplot(data=weather,x='MaxTemp',y='Rainfall',color='purple')\nplt.title('MaxTemp vs Rainfall',fontweight='bold',fontsize=20)\n\n#MinTemp vs rainfall\nplt.subplot(2,2,4)\nsns.scatterplot(data=weather,x='MinTemp',y='Rainfall',color='indigo')\nplt.title('MinTemp vs Rainfall',fontweight='bold',fontsize=20)\nplt.show()","db32ae03":"i=0\nl=[]\nm=[]\nfor i in weather['RainToday']:\n    if i=='Yes':\n        l.append(i)\n    else:\n        m.append(i)\nprint(len(l),len(m))\n\na=[]\nb=[]\nfor i in weather['RainTomorrow']:\n    if i=='Yes':\n        a.append(i)\n    else:\n        b.append(i)\nprint(len(a),len(b))","06384de1":"weather['RainToday'].fillna('No',inplace=True)\nweather['RainTomorrow'].fillna('No',inplace=True)","fb912190":"sns.heatmap(weather.isnull())","881212cb":"plt.figure(figsize=(18,10))\nsns.heatmap(weather[numerical_columns].corr(),annot=True)","ebb3bff9":"a=4\nb=4\nc=1\nfig = plt.figure(figsize=(35,32))\nfor i in weather:\n    if weather[i].dtype=='float64':\n        plt.subplot(a, b, c)\n        sns.boxplot(weather[i])\n        c = c+1\n    else:\n        continue\nplt.tight_layout()\nplt.show()    ","bcaa504a":"#Removing outliers\nfor i in weather:\n    if weather[i].dtype=='float64':\n        q1 = weather[i].quantile(0.25)\n        q3 = weather[i].quantile(0.75)\n        iqr = q3-q1\n        Lower_tail = q1 - 1.5 * iqr\n        Upper_tail = q3 + 1.5 * iqr\n        med = np.median(weather[i])\n        for j in weather[i]:\n            if j > Upper_tail or j < Lower_tail:\n                weather[i] = weather[i].replace(j, med)\n    else:\n        continue\n#Since outliers affect the mean value as well thus here we are relacing the outliers with median values.","8d168fea":"from sklearn.preprocessing import LabelEncoder\nlabel_encoder=LabelEncoder()\ncategorical_columns=['RainTomorrow', 'WindDir3pm', 'WindGustDir', 'WindDir9am', 'RainToday', 'Location']\nfor i in categorical_columns:\n    weather[i]=label_encoder.fit_transform(weather[i])","c0befbc1":"weather.head()","32db8256":"X=weather.drop('RainTomorrow',axis=1)\ny=weather['RainTomorrow']\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=42)","f77d9683":"X_train.head(2)\nprint('Shape of X_train:', X_train.shape)\nprint('Shape of X_test:', X_test.shape)","8b5d870b":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression(max_iter=1000)","725687de":"X_train.shape","9e4a7bdc":"lr.fit(X_train,y_train)\npredict=lr.predict(X_test)","f25bb83f":"predict","247d8033":"from sklearn.metrics import classification_report, confusion_matrix","47c12a8e":"print(classification_report(predict,y_test))","da0aa72b":"print(confusion_matrix(predict,y_test))","5a57bee4":"lr.score(X_test,y_test)","09ff231a":"from sklearn.metrics import mean_squared_error\nprint(np.sqrt(mean_squared_error(predict,y_test)))","bd2f309d":"from sklearn.tree import DecisionTreeClassifier\ndtree=DecisionTreeClassifier()\ndtree.fit(X_train,y_train)","ea29eab6":"prediction=dtree.predict(X_test)","0aa2c461":"from sklearn.metrics import classification_report,confusion_matrix\nprint(classification_report(prediction,y_test))","ef7f6454":"print(confusion_matrix(prediction,y_test))","e284e428":"dtree.score(X_test,y_test)","bbc1c84f":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators = 100, random_state = 0)\nrf.fit(X_train,y_train)","4cb7a904":"RandomForestRegressorScore = rf.score(X_test,y_test)","0e295130":"print(classification_report(prediction,y_test))","53258225":"print(confusion_matrix(prediction,y_test))","d68f59cb":"rf.score(X_test,y_test)","01fafb1b":"from xgboost import  XGBClassifier","ae49f0e2":"xgb_model=XGBClassifier()","ad46af7f":"xgb_model.fit(X_train,y_train)","0522fd09":"predictions_xgb=xgb_model.predict(X_test)","0727742f":"predictions_xgb","bc67e9eb":"xgb_model.score(X_test,y_test)","3c97fa43":"from sklearn.neighbors import KNeighborsClassifier","382c64cc":"knn=KNeighborsClassifier(n_neighbors=4)\nknn.fit(X_train,y_train)\npredictions=knn.predict(X_test)","5436c2b0":"predictions","63f5b385":"knn.score(X_test,y_test)","fd795702":"classification_report(predictions,y_test)\nprint('\\n')\nconfusion_matrix(predictions,y_test)","3fba29f1":"## Categorical columns","73492168":"### Rainfall ","c004bb71":"#### Random Forest classifiers","242272e9":"**There are many missing rows in the entire dataset. Imputation is required.**","dd3a229c":"**XGBoost**","9882da77":"The dataset does not contain any more null values. All have been imputed.","3ff31c81":"#### Logistic Regression","dda7a092":"From the box plots made above it can be seen that the following columns contain outliers:\n\n  Rainfall\n  \n  Evaporation\n  \n  WindGustSpeed\n  \n  WindSpeed9am\n  \n  WindSpped3pm","b3eedc57":"## Handling numerical data","83f16827":"![image.png](attachment:ca59bb96-f5ff-4ece-80d7-92f1cc970a13.png)","284c31f6":"# <center><span style='color:red'>EDA and missing values <\/span><\/center>","23f6132f":"# <center><span style='color:red'>Importing libraries & data <\/span><\/center>","1f1d0ed9":"**KNearestNeighbors**","be13b57f":"### Handling outliers \n**Drawing box plots to identify ourliers in the numerical columns**","53efea02":"Rainfall in Australia is highly variable, largely because of large-scale atmospheric and oceanic drivers that affect the region.\n\n**Let us dive deep into understanding and exploring various aspects of rainfall in Australia.**","7a94751e":"#### Label encoding","85f37523":"### MinTemp, MaxTemp, Evaporation & Sunshine","95b79dcd":"### Handling categorical data","a1618609":"**THANKS FOR READING!!**\n\n**DO UPVOTE IF YOU LIKED IT :)**","2fc3aab0":"# <center><span style='color:red'>Feature engineering <\/span><\/center>","5e44dc10":"### WindGustDir","bef2e090":"### Bivariate Analysis","53c50331":"#### Decision Tree"}}