{"cell_type":{"8a39aa09":"code","40127803":"code","20a5bfe1":"code","154d590f":"code","0dedf0c7":"code","227ec8b2":"code","e1fd4f80":"code","46b3a667":"code","4df0492f":"code","d75abb7a":"code","ebd797eb":"code","b66a258f":"code","fe3466eb":"code","e82c4374":"markdown","ddbf15a3":"markdown","b34ac176":"markdown","9754ce85":"markdown","8ce7fc01":"markdown","8cd05e72":"markdown","c7ab1f7d":"markdown","43d69cb0":"markdown"},"source":{"8a39aa09":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn import preprocessing\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score","40127803":"covid19=pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\n# Converting dates to datetime\ncovid19['ObservationDate']=pd.to_datetime(covid19['ObservationDate'])","20a5bfe1":"df=covid19.groupby(['ObservationDate'])[['Confirmed','Recovered','Deaths']].sum()\nplt.figure(figsize=(20,10))\nplt.title('Cases of Novel covid_19 since 22 Jan 2020',fontsize=30)\nplt.xlabel('Date',fontsize=20)\nplt.ylabel('Number of cases',fontsize=20)\nplt.plot(df.index,df['Confirmed'],label='Infected',linewidth=3)\nplt.plot(df.index,df['Recovered'],label='Recovered',linewidth=3,color='green')\nplt.plot(df.index,df['Deaths'],label='Deaths',linewidth=3,color='red')\nplt.bar(df.index,df['Confirmed'],alpha=0.2,color='c')\nplt.xticks(fontsize=15,rotation=90)\nplt.yticks(fontsize=15)\nplt.style.use('ggplot')\nplt.legend()","154d590f":"df1=covid19.groupby(['Country\/Region'])[['ObservationDate','Confirmed','Recovered','Deaths']]\nindia_cases=df1.get_group('India')\nplt.figure(figsize=(20,8))\nplt.title('Cases of Novel covid_19 in India',fontsize=20)\n\nplt.ylabel('Number of cases',fontsize=20)\nplt.xlabel('Dates',fontsize=20)\nplt.plot(india_cases['ObservationDate'],india_cases['Confirmed'],'-o',linewidth=2,markersize=10,mfc='red',mew=2.9,mec='black')\nplt.xticks(rotation=90)\nplt.grid()","0dedf0c7":"country=covid19.groupby(['Country\/Region'])[['Confirmed','Recovered','Deaths']].sum()\ntop_5=country.nlargest(5,['Confirmed'])\nplt.figure(figsize=(20,16))\nplt.subplot(311)\nplt.title('Top 5 Countries with confirmed, recovered and death cases',fontsize=20)\nplt.barh(top_5.index,top_5['Confirmed'],color='blue')\nplt.yticks(fontsize=20)\nplt.xlabel('Confirmed',fontsize=20)\nplt.subplot(312)\nplt.barh(top_5.index,top_5['Deaths'],color='red')\nplt.yticks(fontsize=20)\nplt.xlabel('Deaths',fontsize=20)\nplt.subplot(313)\nplt.barh(top_5.index,top_5['Recovered'],color='green')\nplt.yticks(fontsize=20)\nplt.xlabel('Recovered',fontsize=20)","227ec8b2":"covid19['day']=covid19['ObservationDate'].dt.day\nimport matplotlib.ticker as ticker\ncv1=covid19[covid19['ObservationDate']>'2020-03']\nfig, ax=plt.subplots(figsize=(15,8))\ndef draw_barchart(date):\n    df=cv1[cv1['day'].eq(date)].sort_values(by='Confirmed',ascending=True).tail(10)\n    ax.clear()\n    ax.text(0,1.12,'The top most infected Countries on 18 March 2020',size=24,weight=600,transform=ax.transAxes,ha='left')\n    ax.barh(df['Country\/Region'],df['Confirmed'],color='orange')\n    for i, (country,value) in enumerate(zip(df['Country\/Region'],df['Confirmed'])):\n        ax.text(value,i, country, size=14, ha='right',va='bottom')\n        ax.text(value,i,f'{value:.0f}', size=14, ha='left',va='center')\n    ax.xaxis.set_major_formatter(ticker.StrMethodFormatter('{x:,.0f}')) \n    ax.set_yticks([])\n    ax.set_axisbelow(True)\n    ax.margins(0,0.1)\n    ax.tick_params(axis='x',labelsize=15,colors='blue')\n    ax.grid(which='major',axis='x',linestyle='--')\n    plt.box(False) \ndraw_barchart(18)\n","e1fd4f80":"rank=country.nlargest(179,['Confirmed']).head(10)\nconfirmed=[]\nrecovered=[]\ndeath=[]\nfor i in rank.index:\n    df1=covid19[covid19['Country\/Region']==i]\n    confirmed.append(df1['Confirmed'].mean())\n    recovered.append(df1['Recovered'].mean())\n    death.append(df1['Deaths'].mean())\nplt.figure(figsize=(20,20))\n\nplt.subplot(311)\nplt.title('Top 10 countries with mean confirmed, recovered and death cases',fontsize=20,color='green')\nplt.plot(rank.index,confirmed,'-o',mfc='black')\nplt.ylabel('Confirmed',fontsize=20)\nplt.grid()\nplt.subplot(312)\nplt.plot(rank.index,recovered,'-o',color='green',mfc='black')\nplt.ylabel('Recovered',fontsize=20)\nplt.grid()\nplt.subplot(313)\nplt.plot(rank.index,death,'-o',color='red',mfc='black')\nplt.ylabel('Death',fontsize=20)\nplt.grid()    ","46b3a667":"rank1=country.nlargest(179,['Confirmed']).head(20)\nconfirmed_perc=[]\nfor i in rank1['Confirmed']:\n    confirmed_perc.append(i\/rank1['Confirmed'].sum())\nplt.figure(figsize=(20,20))    \nplt.title('Distribution of confirmed cases',fontsize=20)    \nplt.pie(confirmed_perc,autopct='%1.1f%%')\nplt.legend(rank1.index,loc='best')\nplt.show()    ","4df0492f":"symptoms={'symptom':['Fever',\n        'Dry cough',\n        'Fatigue',\n        'Sputum production',\n        'Shortness of breath',\n        'Muscle pain',\n        'Sore throat',\n        'Headache',\n        'Chills',\n        'Nausea or vomiting',\n        'Nasal congestion',\n        'Diarrhoea',\n        'Haemoptysis',\n        'Conjunctival congestion'],'percentage':[87.9,67.7,38.1,33.4,18.6,14.8,13.9,13.6,11.4,5.0,4.8,3.7,0.9,0.8]}\n\nsymptoms=pd.DataFrame(data=symptoms,index=range(14))\nsymptoms","d75abb7a":"plt.figure(figsize=(20,15))\nplt.title('Distribution of Symptoms',fontsize=20)    \nplt.pie(symptoms['percentage'],autopct='%1.1f%%')\nplt.legend(symptoms['symptom'],loc='best')\nplt.show() ","ebd797eb":"covid19['Country\/Region']=covid19['Country\/Region'].astype('str')\ncovid19['Province\/State']=covid19['Province\/State'].astype('str')\ncovid19['day']=covid19['ObservationDate'].dt.day\ncovid19['month']=covid19['ObservationDate'].dt.month\nlbl=preprocessing.LabelEncoder()\nfor c in ['Province\/State','Country\/Region']:\n    lbl.fit(covid19[c].unique())\n    covid19[c]=lbl.transform(covid19[c])\nx=covid19.drop(['Confirmed','SNo','Last Update','ObservationDate'],1)\ny=covid19['Confirmed']\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)","b66a258f":"model=LinearRegression()\nmodel.fit(x_train,y_train)","fe3466eb":"y_pred=model.predict(x_test)\nfrom sklearn.metrics import r2_score\n\nprint(' R2 Score   : ',r2_score(y_test, y_pred))","e82c4374":"## Data Visualization\n\nVisualization helps in understanding the spread of corona virus from one country to other and for how much.","ddbf15a3":"The first case of the 2019\u201320 coronavirus pandemic in India was reported on 30 January 2020, originating from China. After 3 March 2020, the infected cases increases gradually in India. As of 20 March 2020, the Ministry of Health and Family Welfare has confirmed a total of 223 cases and 4 deaths in the country.","b34ac176":"## Prevention\nYou can protect yourself and help prevent spreading the virus to others if you:\n\nDo\n - Wash your hands regularly for 20 seconds, with soap and water or alcohol-based hand rub\n - Cover your nose and mouth with a disposable tissue or flexed elbow when you cough or sneeze\n - Avoid close contact (1 meter or 3 feet) with people who are unwell\n - Stay home and self-isolate from others in the household if you feel unwell\n  \nDon't\n\nTouch your eyes, nose, or mouth if your hands are not clean","9754ce85":"\n# <font color=red> COVID 19 <\/font>\n\n\nCoronavirus disease 2019 (COVID-19) is an infectious disease caused by the virus strain \"severe acute respiratory syndrome coronavirus 2\" (SARS-CoV-2). The disease was first identified in 2019 in Wuhan, China, and has since spread globally, resulting in the 2019\u201320 coronavirus pandemic.\n\nThe infection is typically spread from one person to another via respiratory droplets produced during coughing and sneezing.Time from exposure to onset of symptoms is generally between 2 and 14 days, with an average of 5 days.\n\nThe World Health Organization (WHO) declared the 2019\u201320 coronavirus outbreak a pandemic and a Public Health Emergency of International Concern (PHEIC).","8ce7fc01":"## Loading data\n\nJohns Hopkins University has made an excellent dashboard using the affected cases data. Data is extracted from the google sheets associated.\nThe data is available from 22 Jan, 2020.\n### Column Description\n - Sno - Serial number\n - ObservationDate - Date of the observation in MM\/DD\/YYYY\n - Province\/State - Province or state of the observation (Could be empty when missing)\n - Country\/Region - Country of observation\n - Last Update - Time in UTC at which the row is updated for the given province or country. (Not standardised and so please clean before using it)\n - Confirmed - Cumulative number of confirmed cases till that date\n - Deaths - Cumulative number of of deaths till that date\n - Recovered - Cumulative number of recovered cases till that date","8cd05e72":"## Symptoms\n\nAlthough those infected with the virus may be asymptomatic, many develop flu-like symptoms including fever, cough, and shortness of breath.","c7ab1f7d":"## Building Model\n\nWe have to build a  strong model that predicts how the virus could spread across different countries and regions may be able to help mitigation efforts. The goal of this task is to build a model that predicts the progression of the virus throughout March 2020.","43d69cb0":"##  Importing Libraries"}}