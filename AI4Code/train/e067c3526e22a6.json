{"cell_type":{"8248f006":"code","24816caa":"code","36a4b304":"code","4beed182":"code","fc7bdf2c":"code","3dbd6068":"code","e6786578":"code","42ec69ae":"code","c5ba3a2f":"code","4f312628":"code","ba460688":"code","fb51a26a":"code","79069bdf":"code","3aabc690":"code","325768c5":"code","60f85fbb":"code","4ec51d42":"code","4b9d3129":"markdown"},"source":{"8248f006":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","24816caa":"#importing the data and overview \n\ndf= pd.read_csv('..\/input\/real-estate-price-prediction\/Real estate.csv')\ndf.drop('No',axis=1, inplace=True)","36a4b304":"df.head()","4beed182":"df.info()","fc7bdf2c":"sns.pairplot(df,diag_kind='kde')","3dbd6068":"sns.displot(data= df, x='Y house price of unit area' , bins=25 , kde=True)","e6786578":"sns.heatmap(df.corr(), annot=True, cmap='Blues')","42ec69ae":"#defining features and the label\n\nX = df.drop('Y house price of unit area',axis=1)\ny = df['Y house price of unit area']","c5ba3a2f":"#spliting the dataset to work on train and test\n\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","4f312628":"#Training the model\n\nfrom sklearn.linear_model import LinearRegression\n\nmodel= LinearRegression()\nmodel.fit(X_train, y_train)","ba460688":"#Coeficient \n\npd.DataFrame(model.coef_, X.columns, columns=['Coeficient'])","fb51a26a":"#predicting Test\n\ny_pred=model.predict(X_test)\npd.DataFrame({'Y_Test': y_test,'Y_Pred':y_pred }).head(5)","79069bdf":"#Testing the model\n\nfrom sklearn import metrics\n\n\nMAE= metrics.mean_absolute_error(y_test, y_pred)\nMSE= metrics.mean_squared_error(y_test, y_pred)\nRMSE=np.sqrt(MSE)\n\npd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics'])","3aabc690":"#observing the mean of our target and comparing to the metrics\n\ndf['Y house price of unit area'].mean()","325768c5":"#Residuals\n\ntest_residuals=y_test-y_pred   #(y-y^)\n\nsns.scatterplot(x=y_test, y=y_pred)\nplt.xlabel('Y-Test')\nplt.ylabel('Y-Pred')","60f85fbb":"sns.scatterplot(x=y_test, y=test_residuals)\nplt.axhline(y=0, color='r', ls='--')","4ec51d42":"sns.displot(test_residuals, bins=20, kde=True)","4b9d3129":"**#EDA**"}}