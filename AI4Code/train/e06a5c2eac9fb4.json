{"cell_type":{"1806ab78":"code","47964734":"code","3fc1c311":"code","de1c47d6":"code","13480a26":"code","af9fb4df":"code","edf13c02":"code","163da620":"code","c7f3f30b":"code","813aefcf":"code","188fd081":"code","7c93cdf3":"code","8c5c819d":"code","c7c4e239":"code","d9b3495d":"code","360d6d01":"code","071a4ad0":"code","6c49a1ce":"code","c0f252e7":"code","10ebffb8":"code","b7186cba":"code","e212d38e":"code","b722a562":"code","1049b94e":"code","0be36fdb":"code","37c5ad99":"code","093f427e":"code","c107f0da":"code","6ec35ce9":"code","2904f3df":"code","faad0b7c":"code","f0fe3f76":"code","17b40ecf":"code","ee11847d":"code","634bce54":"code","c3013586":"code","1c659e12":"code","62147729":"code","7d4c31ab":"code","aff42f2e":"markdown","3c4ac2b0":"markdown","faab5439":"markdown","f615a3c7":"markdown","43070e04":"markdown","0674391f":"markdown","dbec8fd8":"markdown","5eab7279":"markdown","51e4a019":"markdown","d3f2bd62":"markdown","9ef993e9":"markdown","2b82f434":"markdown","72d082c3":"markdown","999609c6":"markdown","3fe38387":"markdown","a7b826dd":"markdown","e244c5d9":"markdown","b582bed7":"markdown","a1fc3e5f":"markdown","bd7864f5":"markdown","a4d43328":"markdown","55d4ac53":"markdown"},"source":{"1806ab78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","47964734":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport geopandas as gpd\nfrom shapely.geometry import Point, Polygon\nimport matplotlib.pyplot as plt\nimport pandas as pd\n%matplotlib inline\nfrom IPython.core.display import HTML\nimport gc\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport warnings\nwarnings.filterwarnings(\"ignore\")","3fc1c311":"df = pd.read_csv(\"..\/input\/daily-temperature-of-major-cities\/city_temperature.csv\")\ndf.head()","de1c47d6":"df.info()","13480a26":"df.shape #(row,column)","af9fb4df":"df.Country.unique()","edf13c02":"us_df = df[df[\"Country\"] == \"US\"]\nus_df.head()","163da620":"us_df.shape","c7f3f30b":"us_df.Region.value_counts()","813aefcf":"print(us_df.City.unique())\nprint(len(us_df.City.unique()))","188fd081":"us_df.isnull().sum()","7c93cdf3":"us_df.describe().T","8c5c819d":"avgtemp_drop_list = us_df[us_df.AvgTemperature  == -99].index\nus_df[us_df.AvgTemperature  == -99]","c7c4e239":"us_df.drop(avgtemp_drop_list, axis=0, inplace=True)\nus_df.drop([\"Region\"], axis = 1, inplace=True)","d9b3495d":"us_df[\"Time_steps\"] = pd.to_datetime((us_df.Year*10000 + us_df.Month*100 + us_df.Day).apply(str),format='%Y%m%d')\nus_df.head()","360d6d01":"us_df.reset_index(inplace=True)\nus_df.drop([\"index\"], axis=1, inplace=True)\nus_df.head()","071a4ad0":"us_df.describe().T","6c49a1ce":"us_df[\"State\"].value_counts()","c0f252e7":"df_world = df.copy()\ndf_world.describe().T","10ebffb8":"df_world.drop(df_world[df_world[\"AvgTemperature\"] == -99].index, axis=0, inplace=True)","b7186cba":"iso_code = pd.read_csv('..\/input\/iso-codes\/iso_codes.csv')\niso_code = iso_code[['Country','ISO_Code']].drop_duplicates().reset_index(drop=True)\niso_code.head()","e212d38e":"dfc = (\n       df_world.groupby(['Year','Country'])['AvgTemperature'].agg(['mean'])\n      .reset_index()\n      .rename(columns={'mean': 'AvgTemperature'})\n      .merge(iso_code,left_on='Country',right_on='Country')\n      .sort_values(by=['Year','Country'])\n      )\ndfc['Rank_hottest'] = dfc.groupby(by=['Year'])['AvgTemperature'].rank(method=\"min\",ascending=False)\ndfc['Rank_coldest'] = dfc.groupby(by=['Year'])['AvgTemperature'].rank(method=\"min\",ascending=True)\n\nfig = (\n   px.choropleth(\n                 dfc               \n                ,locations='ISO_Code'               \n                ,color='AvgTemperature'\n                ,hover_name='Country'  \n                ,hover_data={'ISO_Code':False, 'Year':True,'AvgTemperature':':.2f'}\n                ,animation_frame='Year'\n                ,color_continuous_scale='Portland' \n                ,height=600)\n  .update_layout(\n                 title_text='WORLD AVERAGE TEMPERATURE'\n                ,title_x=0.3\n                ,margin=dict(r=10, t=40, b=10, l=10)\n                ,coloraxis_colorbar_title='Temp \u00b0C')\n)\nfig.layout.updatemenus[0].buttons[0].args[1][\"frame\"][\"duration\"] = 800\nfig.show()","b722a562":"us_1995_1 = us_df[(us_df[\"Year\"] == 1995) & (us_df[\"Month\"] == 1)]\nplt.figure(figsize=(22,10))\nplt.title(\"The Average Temperature of States in the United States in January 1995.\")\nsns.barplot(x = us_1995_1[\"State\"], y=us_1995_1[\"AvgTemperature\"], data=us_1995_1)\nplt.xticks(rotation=90)\nplt.show()","1049b94e":"us_2020_1 = us_df[(us_df[\"Year\"] == 2020) & (us_df[\"Month\"] == 1)]\nplt.figure(figsize=(22,10))\nplt.title(\"The Average Temperature of States in the United States in January 2020.\")\nsns.barplot(x = us_2020_1[\"State\"], y=us_2020_1[\"AvgTemperature\"], data=us_2020_1)\nplt.xticks(rotation=90)\nplt.show()","0be36fdb":"alaska_df = us_df[us_df[\"State\"] == \"Alaska\"]\nalaska_df_time = alaska_df.set_index('Time_steps')\nsns.set(rc={'figure.figsize':(11, 4)})\nalaska_df_time['AvgTemperature'].plot(linewidth=0.5);\nplt.title(\"Average Temperature in Alaska by Years\");","37c5ad99":"plt.figure(figsize=(22,10))\nplt.title(\"Average Temperature of Alaska Cities by Years\")\nsns.barplot(x = alaska_df[\"Year\"], y=alaska_df[\"AvgTemperature\"],hue=alaska_df[\"City\"], data=alaska_df)\nplt.xticks(rotation=90)\nplt.show()","093f427e":"texas_df = us_df[us_df[\"State\"] == \"Texas\"]\ntexas_df_time = texas_df.set_index('Time_steps')\nsns.set(rc={'figure.figsize':(11, 4)})\ntexas_df_time['AvgTemperature'].plot(linewidth=0.5);\nplt.title(\"Average Temperature in Texas by Years\");","c107f0da":"texas_df[\"City\"].value_counts()","6ec35ce9":"texas_df.describe().T","2904f3df":"texas_compare_df = texas_df[(texas_df[\"Year\"] == 1995) | (texas_df[\"Year\"] == 2000) | (texas_df[\"Year\"] == 2010) | (texas_df[\"Year\"] == 2020)]\nplt.figure(figsize=(22,10))\nplt.title(\"Average Temperature of Texas Cities by Years\")\nsns.barplot(x = texas_compare_df[\"Year\"], y=texas_compare_df[\"AvgTemperature\"],hue=texas_compare_df[\"City\"], data=texas_compare_df)\nplt.xticks(rotation=90)\nplt.show()","faad0b7c":"texas_df.reset_index(inplace=True)\ntexas_df.drop([\"index\"], axis=1, inplace=True)\ntexas_df.head()","f0fe3f76":"texas_df.drop([\"Country\",\"Day\",\"Time_steps\",\"State\"], axis=1, inplace=True)\ntexas_df.head()","17b40ecf":"from sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.model_selection import train_test_split, GridSearchCV, RepeatedStratifiedKFold\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score\nfrom sklearn.pipeline import make_pipeline","ee11847d":"le = LabelEncoder()\ntexas_df[\"City\"] = le.fit_transform(texas_df[\"City\"])\ntexas_df.head()","634bce54":"texas_df.info()","c3013586":"X = texas_df.drop([\"AvgTemperature\"], axis=1)\ny = texas_df[\"AvgTemperature\"]","1c659e12":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","62147729":"tree = DecisionTreeRegressor()\ntree.fit(X_train, y_train)\ny_pred = tree.predict(X_test)\nr2_score(y_test, y_pred)","7d4c31ab":"rf = RandomForestRegressor().fit(X_train, y_train)\nr2_score(y_test, rf.predict(X_test))","aff42f2e":"According to the United States Environmental Protection Agency, the climate in Texas is already changing due to anthropogenic climate change. As of 2016, most of the state had already warmed by 1.5 degrees since the previous century because of global warming. Texas is expected to have a wide range of environmental impacts, including rising sea levels, increased extreme weather and wildfires, and pressure on water resources.","3c4ac2b0":"We will use US as a country. We can select it and create a dataframe.","faab5439":"# Examine the Data","f615a3c7":"Since we only took the US country from the data set, its indexes came to the indexes in the old data set. We will use the reset_index () function in the pandas library to reset the indexes. We use the ***inplace = true*** parameter to make the change permanent.","43070e04":"## Random Forest ","0674391f":"While dealing with categorical data, we should examine the variables in it. We can do this by using value_counts() method and can see how many of which value.","dbec8fd8":"The following code shows the average temperatures of the states in the United States in January 1995. The year 1995 is the oldest year in the data set for the US.","5eab7279":"For showing average temperature feature's minimum value (-99) we are using code below. There are 79672 rows equal to -99. We will drop this rows therefore we are holding their indexes in a list","51e4a019":"# Reading Data","d3f2bd62":"In the below code we are dropping rows that average temperature equals to -99. I am also drop region feature to because it has just one variable for US.","9ef993e9":"We need International Organization for Standardization (ISO) codes of countries for visualization. That's why we include this data set in the project.","2b82f434":"## Decison Tree","72d082c3":"# ML Model For Texas","999609c6":"## Visualization About Texas","3fe38387":"## Visualization For World","a7b826dd":"When we use value_counts() if there is a lot of variable, it will not show all variables to us. For avoid that we can use unique() method so we can see every variable in categoric feature.","e244c5d9":"Before starting the visualization, we copy the data set to the variable named df_world. When we look at the statistics of the data set, the average temperature seems to be the lowest value -99. These values are missing data. So we will drop these values.","b582bed7":"Data has 4 object values, 3 integer values and 1 float values","a1fc3e5f":"Now we will have the same graph drawn for 2020 and look at the difference. According to first impressions, there is a visible change between temperatures. While the average temperatures of some states have decreased, others have increased.","bd7864f5":"## General Visualization About United States","a4d43328":"# Visualization","55d4ac53":"## Visualization About Alaska"}}