{"cell_type":{"80f16369":"code","05cbb285":"code","b261ae00":"code","9baccba5":"code","98f417d0":"code","e0449cae":"code","94d26816":"code","0397b69c":"code","22f9e4ed":"code","5bc2144b":"code","3e443423":"code","bec4351d":"code","0583680c":"code","dbd40c49":"code","51b7006f":"code","269d7120":"code","3b4eda7e":"code","2da6d110":"code","277729ee":"code","71864e56":"code","8c0347e2":"code","25977a7c":"markdown","a77f4ce2":"markdown","bbda0919":"markdown"},"source":{"80f16369":"import numpy as np\nimport pandas as pd \nimport cv2\nfrom fastai.vision import *\nfrom wordcloud import WordCloud, STOPWORDS\nfrom collections import Counter\nfrom nltk.corpus import stopwords\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport shutil\nfrom glob import glob\n%matplotlib inline\n!pip freeze > '..\/working\/dockerimage_snapshot.txt'","05cbb285":"def makeWordCloud(df,column,numWords):\n    topic_words = [ z.lower() for y in\n                       [ x.split() for x in df[column] if isinstance(x, str)]\n                       for z in y]\n    word_count_dict = dict(Counter(topic_words))\n    popular_words = sorted(word_count_dict, key = word_count_dict.get, reverse = True)\n    popular_words_nonstop = [w for w in popular_words if w not in stopwords.words(\"english\")]\n    word_string=str(popular_words_nonstop)\n    wordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white',\n                          max_words=numWords,\n                          width=1000,height=1000,\n                         ).generate(word_string)\n    plt.clf()\n    plt.imshow(wordcloud)\n    plt.axis('off')\n    plt.show()\n\ndef plotImages(artist,directory):\n    print(artist)\n    multipleImages = glob(directory)\n    plt.rcParams['figure.figsize'] = (15, 15)\n    plt.subplots_adjust(wspace=0, hspace=0)\n    i_ = 0\n    for l in multipleImages[:25]:\n        im = cv2.imread(l)\n        im = cv2.resize(im, (128, 128)) \n        plt.subplot(5, 5, i_+1) #.set_title(l)\n        plt.imshow(cv2.cvtColor(im, cv2.COLOR_BGR2RGB)); plt.axis('off')\n        i_ += 1\n\nnp.random.seed(7)\noverview = pd.read_csv('..\/input\/artists.csv')\noverviewArtist = overview[['name','paintings']]\noverviewArtist = overviewArtist.sort_values(by=['paintings'],ascending=False)\noverviewArtist = overviewArtist.reset_index()\noverviewArtist = overviewArtist[['name','paintings']]","b261ae00":"print(os.listdir(\"..\/input\/images\/images\/\"))","9baccba5":"plt.rcParams['figure.figsize'] = (15, 15)\nplt.imshow(cv2.imread(\"..\/input\/images\/images\/Salvador_Dali\/Salvador_Dali_86.jpg\"))\nshutil.copyfile(\"..\/input\/images\/images\/Salvador_Dali\/Salvador_Dali_86.jpg\", \"\/kaggle\/working\/Salvador_Dali_86.jpg\")           ","98f417d0":"plotImages(\"Vincent van Gogh\",\"..\/input\/images\/images\/Vincent_van_Gogh\/**\")      ","e0449cae":"plotImages(\"Leonardo da Vinci\",\"..\/input\/images\/images\/Leonardo_da_Vinci\/**\")      ","94d26816":"plotImages(\"Andy Warhol\",\"..\/input\/images\/images\/Andy_Warhol\/**\")      ","0397b69c":"plotImages(\"Pablo Picasso\",\"..\/input\/images\/images\/Pablo_Picasso\/**\")      ","22f9e4ed":"plotImages(\"Salvador Dali\",\"..\/input\/images\/images\/Salvador_Dali\/**\")","5bc2144b":"plotImages(\"Jackson Pollock\",\"..\/input\/images\/images\/Jackson_Pollock\/**\")","3e443423":"plotImages(\"Raphael\",\"..\/input\/images\/images\/Raphael\/**\")      ","bec4351d":"plotImages(\"Rembrandt\",\"..\/input\/images\/images\/Rembrandt\/**\")      ","0583680c":"plt.figure(figsize=(10,10))\nmakeWordCloud(overview,'bio',10000000)","dbd40c49":"plt.figure(figsize=(5,5))\nnationalityPlot = sns.countplot(y='nationality',data=overview)\nnationalityPlot","51b7006f":"overviewArtist.head(25)","269d7120":"img_dir='..\/input\/images'\npath=Path(img_dir)\ndata = ImageDataBunch.from_folder(path, train=\".\", \n                                  valid_pct=0.2,\n                                  ds_tfms=get_transforms(do_flip=False,flip_vert=False, max_rotate=0,max_lighting=0.3),\n                                  size=299,bs=64, \n                                  num_workers=0).normalize(imagenet_stats)\nprint(f'Classes: \\n {data.classes}')\ndata.show_batch(rows=8, figsize=(40,40))","3b4eda7e":"learn = create_cnn(data, models.resnet50, metrics=accuracy,model_dir=Path(\"\/kaggle\/working\/\"),path=Path(\".\"))\nlearn.fit_one_cycle(3)","2da6d110":"plt.rcParams['figure.figsize'] = (5, 5)\nlearn.unfreeze()\nlearn.lr_find()\nlearn.recorder.plot()","277729ee":"learn.fit_one_cycle(10)\n","71864e56":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix(figsize=(15,15), dpi=60)","8c0347e2":"plt.rcParams['figure.figsize'] = (15, 15)\nplt.imshow(cv2.imread(\"..\/input\/images\/images\/Salvador_Dali\/Salvador_Dali_86.jpg\"))","25977a7c":"**Collections of Paintings from 50 Influential Artists**\n* Part 1: Exploratory Data Analysis\n* Part 2: Image Classification using Fastai","a77f4ce2":"*Part 1: Exploratory Data Analysis*","bbda0919":"*Part 2: Image Classification using Fastai*"}}