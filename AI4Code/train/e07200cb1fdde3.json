{"cell_type":{"91f7a9eb":"code","a17c8503":"code","8df85ae9":"code","4ddb8ef9":"code","097daa2a":"code","017a5581":"code","62726fae":"code","88efb3b9":"code","9bda9e4c":"code","ce72b546":"code","0e0ac516":"code","b1eab53b":"code","be8baea2":"markdown","36466b94":"markdown","7e5a1ce2":"markdown"},"source":{"91f7a9eb":"import pandas as pd\nfrom spacy import displacy\nimport re\nfrom termcolor import colored\nfrom collections import Counter","a17c8503":"new_metadata = pd.read_pickle('..\/input\/bert-question-abstract-similarity\/metadata_2020.pkl')","8df85ae9":"new_metadata.head()","4ddb8ef9":"def color(text, to_color):\n    colored_text = text\n    for tc, color in to_color.items():\n        colored_text = re.sub(tc, colored(tc, color), colored_text, flags=re.IGNORECASE)\n    return colored_text","097daa2a":"COVID = set(['SARS-CoV2', 'SARS-CoV-2', 'COVID19', 'COVID-19', 'new coronavirus'])\n# TARGET = set(['vaccin', 'treatment', 'drug', 'therapeutic'])\nTARGET = set(['transmission', 'incubation', 'environment'])\n# TARGET = set(['risk', 'smok', 'pregnan', 'socio'])\n# TARGET = set(['surface', ])\nINSIGHT = set(['associat', 'caus', 'found', 'report', 'show', 'conclud', 'confirm', 'identif', 'develop', 'estimat'])\n\ndef has_covid(sent):\n    return any(re.search(t, sent, flags=re.IGNORECASE) for t in COVID)\ndef has_target(sent): \n    return any(re.search(t, sent, flags=re.IGNORECASE) for t in TARGET)\ndef has_insight(sent):\n    return any(re.search(t, sent, flags=re.IGNORECASE) for t in INSIGHT)\n\nto_color = {}\nfor t in COVID: to_color[t] = 'red'\nfor t in TARGET: to_color[t] = 'green'\nfor t in INSIGHT: to_color[t] = 'blue'","017a5581":"new_metadata.abstract.str.contains('new coronavirus').sum()","62726fae":"def print_baseline(target_fn):\n    to_print = []\n    for idx, row in new_metadata.sort_values(by='publish_time', ascending=False).iterrows():\n        for sent in row.abstract_spacy.sents:\n            tokens = [t.text for t in sent]\n            if has_covid(sent.text) and target_fn(sent.text) and has_insight(sent.text):\n                to_print.append(\n                    f\"{colored('title   :', 'yellow')} [{row.publish_time.date()}] {colored(row.title, 'cyan')}\\n\"\n                    f\"{colored('insight :', 'yellow')} {color(sent.text, to_color)}\\n\\n\"\n                )\n    print(f\"{len(to_print)} results:\\n\\n{''.join(to_print)}\")","88efb3b9":"print_baseline(has_target)","9bda9e4c":"verbs = [srl_pred['verb'] for srl_doc in new_metadata.srl for srl_sent in srl_doc for srl_pred in srl_sent['verbs']]\nCounter(verbs).most_common(100)","ce72b546":"def get_srl_tokens(tokens, tags):\n    assert len(tokens) == len(tags)\n    return [token for token, tag in zip(tokens, tags) if tag != 'O']","0e0ac516":"def print_srl(target_fn):\n    to_print = []\n    for idx, row in new_metadata.sort_values(by='publish_time', ascending=False).iterrows():\n        for srl_sent in row.srl:\n            text = ' '.join(srl_sent['words'])\n            for srl_pred in srl_sent['verbs']:\n                srl_tokens = ' '.join(get_srl_tokens(srl_sent['words'], srl_pred['tags']))\n                if has_insight(srl_pred['verb']) and target_fn(srl_tokens) and has_covid(srl_tokens):\n                    to_print.append(\n                        f\"{colored('title   :', 'yellow')} [{row.publish_time.date()}] {colored(row.title, 'cyan')}\\n\"\n                        f\"{colored('insight :', 'yellow')} {color(srl_pred['description'], to_color)}\\n\\n\"\n                    )\n    print(f\"{len(to_print)} results:\\n\\n{''.join(to_print)}\")","b1eab53b":"print_srl(has_target)","be8baea2":"# Query with SRL","36466b94":"# Query with baseline","7e5a1ce2":"Most common verbs:"}}