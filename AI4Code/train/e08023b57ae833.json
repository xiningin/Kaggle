{"cell_type":{"2f30fce4":"code","3b35068c":"code","bb886750":"code","5536de7d":"code","122926ee":"code","fca18c23":"code","5aa81711":"code","07b67738":"code","f0510bd1":"code","2e0711af":"code","68c5512c":"code","c6570e2c":"code","7801220d":"code","96b61590":"code","d9f8dcf5":"code","b0f6c8c4":"code","0f6becc2":"code","ba5fe4ba":"code","836e5fc2":"code","080a1869":"code","4e106567":"markdown","a63928e1":"markdown","f0fdc11f":"markdown","50291253":"markdown","b4f34abf":"markdown","e69da0b7":"markdown","38c50dd7":"markdown","589ab67c":"markdown","3ec79ac2":"markdown","ad72c8bb":"markdown","0301ed1f":"markdown","31f044a3":"markdown","1fc5bcbe":"markdown","e00d1c2d":"markdown"},"source":{"2f30fce4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3b35068c":"import pandas as pd\ndf1 = pd.read_csv('..\/input\/african-development-bank\/agri1.csv', encoding='latin-1')\ndf2 = pd.read_csv('..\/input\/african-development-bank\/finance1.csv', encoding='latin-1')\ndf3 = pd.read_csv('..\/input\/african-development-bank\/multisector1.csv', encoding='latin-1')\ndf4 = pd.read_csv('..\/input\/african-development-bank\/power1.csv', encoding='latin-1')\ndf5 = pd.read_csv('..\/input\/african-development-bank\/transport1.csv', encoding='latin-1')\n#to check the data\ndf1.info()\ndf2.info()\ndf3.info()\ndf4.info()\ndf5.info()","bb886750":"a = df1.dropna()\nf = df2.dropna()\nm = df3.dropna()\np = df4.dropna()\nt = df5.dropna()","5536de7d":"a['Starting Date'] = pd.to_datetime(t['Starting Date'])\nf['Starting Date'] = pd.to_datetime(t['Starting Date'])\nm['Starting Date'] = pd.to_datetime(t['Starting Date'])\np['Starting Date'] = pd.to_datetime(t['Starting Date'])\nt['Starting Date'] = pd.to_datetime(t['Starting Date'])\n\na['Starting_Year'] = a['Starting Date'].dt.year\nf['Starting_Year'] = f['Starting Date'].dt.year\nm['Starting_Year'] = m['Starting Date'].dt.year\np['Starting_Year'] = p['Starting Date'].dt.year\nt['Starting_Year'] = t['Starting Date'].dt.year\n\nag = a[a['Starting_Year'] == 2019]\nfi = f[f['Starting_Year'] == 2019]\nmu = m[m['Starting_Year'] == 2019]\npo = p[p['Starting_Year'] == 2019]\ntr = t[t['Starting_Year'] == 2019]","122926ee":"agr = ag.drop(['Project Code', 'Title', 'Starting Date', 'Status', 'Source of Financing', 'Sovereign'], axis = 1)\nfin = fi.drop(['Project Code', 'Title', 'Starting Date', 'Status', 'Source of Financing', 'Sovereign'], axis = 1)\nmul = mu.drop(['Project Code', 'Title', 'Starting Date', 'Status', 'Source of Financing', 'Sovereign'], axis = 1)\npor = po.drop(['Project Code', 'Title', 'Starting Date', 'Status', 'Source of Financing', 'Sovereign'], axis = 1)\ntra = tr.drop(['Project Code', 'Title', 'Starting Date', 'Status', 'Source of Financing', 'Sovereign'], axis = 1)\ndata = [agr, fin, mul, por, tra]\ndf = pd.concat(data)\n\ndf['Commitment in U.A'] = df['Commitment in U.A'].str.replace(r',', '') #error raise because of , when we try to make this column as numeric\ndf['Commitment in U.A'] = df['Commitment in U.A'].apply(pd.to_numeric)\ndf.info()\ndf.to_csv('mydata.csv')","fca18c23":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\ndf = pd.read_csv('mydata.csv')\n%matplotlib inline\ndf.head()","5aa81711":"df1_agri = df.query('Sector == \"Agriculture and Rural Development\"')\ndf1_fin = df.query('Sector == \"Finance\"')\ndf1_tra = df.query('Sector == \"Transport\"')\ndf1_mul = df.query('Sector == \"Multi-Sector\"')\ndf1_pow = df.query('Sector == \"Power\"')","07b67738":"df1_fin.plot(x ='Country', y = 'Commitment in U.A' ,kind ='bar', figsize = (8,8))\n# first multinational, second Morocco, third Kenya","f0510bd1":"df1_agri.plot(x ='Country', y = 'Commitment in U.A' ,kind ='bar', figsize = (8,8))\n# first C\u00f4te d'Ivoire, second congo, third sudan","2e0711af":"df1_pow.plot(x ='Country', y = 'Commitment in U.A' ,kind ='bar', figsize = (8,8))\n# first angola, second Mozambique, third Morocco","68c5512c":"df1_tra.plot(x ='Country', y = 'Commitment in U.A' ,kind ='bar', figsize = (8,8))\n# first tanzania, second Uganda, third Kenya","c6570e2c":"df1_mul.plot(x ='Country', y = 'Commitment in U.A' ,kind ='bar', figsize = (8,8))\n# first niger, second rwanda, third Madagascar","7801220d":"xm = df1_mul['Commitment in U.A'].sum()\nxt = df1_tra['Commitment in U.A'].sum()\nxp = df1_pow['Commitment in U.A'].sum()\nxa = df1_agri['Commitment in U.A'].sum()\nxf = df1_fin['Commitment in U.A'].sum()\n#Finance\nyf1 = df1_fin.query('Country == \"Multinational\"')\nyf2 = df1_fin.query('Country == \"Morocco\"')\nyf3 = df1_fin.query('Country == \"Kenya\"')\nmultinational_percent = (yf1['Commitment in U.A'].sum() \/ xf) * 100\n# 50.274878045406936\nmorocco1_percent = (yf2['Commitment in U.A'].sum() \/ xf) * 100\n# 17.308766996498854\nkenya1_percent = (yf3['Commitment in U.A'].sum() \/ xf) * 100\n# 17.104531773436218\n#Agriculture\nya1 = df1_agri.query('Country == \"C\u00f4te d\\'Ivoire\"')\nya2 = df1_agri.query('Country == \"Congo\"')\nya3 = df1_agri.query('Country == \"Sudan\"')\ncote_percent = (ya1['Commitment in U.A'].sum() \/ xa) * 100\n# 31.50741594033916\ncongo_percent = (ya2['Commitment in U.A'].sum() \/ xa) * 100\n# 18.711099794684774\nsudan_percent = (ya3['Commitment in U.A'].sum() \/ xa) * 100\n# 13.336644343098406\n#Power\nyp1 = df1_pow.query('Country == \"Angola\"')\nyp2 = df1_pow.query('Country == \"Mozambique\"')\nyp3 = df1_pow.query('Country == \"Morocco\"')\nangola_percent = (yp1['Commitment in U.A'].sum() \/ xp) * 100\n# 22.607751209625953\nmozambique_percent = (yp2['Commitment in U.A'].sum() \/ xp) * 100\n# 19.404458459382017\nmorocco2_percent = (yp3['Commitment in U.A'].sum() \/ xp) * 100\n# 12.89769995885802\n#Transport\nyt1 = df1_tra.query('Country == \"Uganda\"')\nyt2 = df1_tra.query('Country == \"Kenya\"')\nyt3 = df1_tra.query('Country == \"Tanzania, United Republic of\"')\nuganda_percent = (yt1['Commitment in U.A'].sum() \/ xt) * 100\n# 14.39372966123651\nkenya2_percent = (yt2['Commitment in U.A'].sum() \/ xt) * 100\n# 10.677509240332622\ntanzania_percent = (yt3['Commitment in U.A'].sum() \/ xt) * 100\n# 17.001848235170208\n#multi-Sector\nym1 = df1_mul.query('Country == \"Niger\"')\nym2 = df1_mul.query('Country == \"Rwanda\"')\nym3 = df1_mul.query('Country == \"Madagascar\"')\nniger_percent = (ym1['Commitment in U.A'].sum() \/ xm) * 100\n# 12.729731880022277\nrwanda_percent = (ym2['Commitment in U.A'].sum() \/ xm) * 100\n# 11.29763704351977\nmadagascar_percent = (ym3['Commitment in U.A'].sum() \/ xm) * 100\n# 9.547298910016707","96b61590":"rest_finance = 100 - (multinational_percent + morocco1_percent + kenya1_percent)\nrest_agriculture = 100 - (cote_percent + congo_percent + sudan_percent)\nrest_power = 100 - (angola_percent + mozambique_percent + morocco2_percent)\nrest_transport = 100 - (uganda_percent + kenya2_percent + tanzania_percent)\nrest_multi = 100 - (niger_percent + rwanda_percent + madagascar_percent)","d9f8dcf5":"dfchart1 = pd.DataFrame({'finance sector':[multinational_percent, morocco1_percent, kenya1_percent, rest_finance]}, index = ['Multinational', 'Morocco', 'Kenya', 'Rest of Africa'])\ndfchart2 = pd.DataFrame({'agriculture sector': [cote_percent, congo_percent, sudan_percent, rest_agriculture]}, index = ['Cote d\\'Ivoire', 'Congo', 'Sudan', 'Rest of Africa'])\ndfchart3 = pd.DataFrame({'power sector': [angola_percent, mozambique_percent, morocco2_percent, rest_power]}, index = ['Angola', 'Mozambique', 'Morocco', 'Rest of Africa'])\ndfchart4 = pd.DataFrame({'transport sector': [uganda_percent, kenya2_percent, tanzania_percent, rest_transport]}, index = ['Uganda', ' Kneya', 'Tanzania', 'Rest of Africa'])\ndfchart5 = pd.DataFrame({'multi sector': [niger_percent, rwanda_percent, madagascar_percent, rest_multi]}, index = ['Niger', 'Rwanda', 'Madagascar', 'Rest of Africa'])","b0f6c8c4":"dfchart1.plot.pie(y = 'finance sector', figsize = (8,8))","0f6becc2":"dfchart2.plot.pie(y = 'agriculture sector', figsize = (8,8))","ba5fe4ba":"dfchart3.plot.pie(y = 'power sector', figsize = (8,8))","836e5fc2":"dfchart4.plot.pie(y = 'transport sector', figsize = (8,8))","080a1869":"dfchart5.plot.pie(y = 'multi sector', figsize = (8,8))","4e106567":"# **Drawing conlusion**\nnow we have our data and it's ready to be used we can now draw our conclusions out of it","a63928e1":"# **Gathering Data**\ngathering data is quit easy, you can gather such data from the bank website, and here the link for the website: https:\/\/www.afdb.org\/en\nand i downloaded each sector alone and named the file after the sector (for instance finance.csv and etc)","f0fdc11f":"# Cleaning Data \nfirst of all the data is downloaded in XlsX format of course we can work with this type in pandas but i prefer the CSV formate so i changed it first and then started the cleaning process as follows","50291253":"# **Difine the Problem**\nwell the problem is i wanted to know which country is the most contributing in the development of Africa and declaring the top 3 countries and graph thier percent of contribution in the developments","b4f34abf":"# **Conclusion**\ntop 3 countries in Finance sector:\n* Multinational\n* Morocco\n* Kenya\n\ntop 3 countries in Agriculture sector:\n* C\u00f4te d'Ivoire\n* Congo\n* Sudan\n\ntop 3 countries in Power sector:\n* Angola\n* Mozambique\n* Morocco\n\ntop 3 countries in Transport sector:\n* Tanzania\n* Uganda\n* Kenya\n\ntop 3 countries in Multi-Sector:\n* Niger\n* Rwanda\n* Madagascar","e69da0b7":"after we computed each percent we will now find the percent for the rest of the countries in Africa","38c50dd7":"Now let's find out the the percentage of each country","589ab67c":"# **Content**\nin this notebook i will be analyzing the data from african development bank,\nthe data is about the top 5 sector that the bank is finding the most investment in and these are (Agriculture and rural development, Finance, Power, Transport, and ,Multi-Sector).\nthe bank lists the project name and which country it belongs to and how much the country pays in U.A.\nwhat is U.A. well U.A An activity is defined by a \"project\" or \"operation\". Currency : XDR For reporting purposes we will use the ISO 4217 Currency Codes. UA is the official currency for the AfDB projects. 1 UA=1 SDR (International Monetary Fund Special Drawing Rights). \n(Source: https:\/\/www.iatiregistry.org\/publisher\/about\/afdb )\n\n","3ec79ac2":"Lets create a pie chart to visualize our findings","ad72c8bb":"now lets drop all the un wanted coulmns and create one big CSV that contain all the data that we need for our analysis","0301ed1f":"now we need to change the type of starting date to make it contain only the starting years as we will work on the year of 2019 only for now as the 2020 is not yet compeleted and i wanted to make something that is up to date","31f044a3":"now lets create a graph for each sector to spot the top 3 controbuting countries in each sector ","1fc5bcbe":"Now we need to modify the data to contain only the data we need\nand start things off by dropping null cells ","e00d1c2d":"# **Declration**\nnote that this is my first own project, i created it from start to the finish and that i just started learning python 2 monthes ago and i wanted to create something with what i have learned so please excuse all the mistakes and bad codes that might be there better code to do this and if this so please provide such valiable feedback to me and thanks a lot in advance"}}