{"cell_type":{"3cf723c5":"code","e9a8a5a9":"code","1e94229d":"code","e1119229":"code","c279f236":"code","a45af5b0":"code","d5a0e16b":"code","f36dfded":"code","43ae2019":"code","7770b074":"code","470d42c6":"code","76efe28e":"code","2b35667e":"code","19634c56":"code","1db0debe":"code","c662aed7":"code","410139f6":"code","af5c47a1":"code","3725cf18":"code","6671be5b":"code","c0ba58da":"markdown","004c999b":"markdown","3072255d":"markdown","0ab528ec":"markdown","57429b0a":"markdown","44a4d14d":"markdown","9edbe5d8":"markdown","f1e3f0bf":"markdown","e82432cb":"markdown","f810b4ae":"markdown","b9ae67b0":"markdown","983cfc48":"markdown","b98f75c4":"markdown"},"source":{"3cf723c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\n# print(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n\ndata = pd.read_csv(\"..\/input\/multipleChoiceResponses.csv\", encoding = \"ISO-8859-1\")\nchang_rate = pd.read_csv(\"..\/input\/conversionRates.csv\", encoding = \"ISO-8859-1\")","e9a8a5a9":"data_merged = pd.merge(data,chang_rate, how = 'left',left_on='CompensationCurrency', right_on='originCountry' )\ndata_usefull = data_merged[['GenderSelect','Country', 'Age','EmploymentStatus','CodeWriter',\n             'CurrentJobTitleSelect', 'CurrentEmployerType', 'LanguageRecommendationSelect',\n             'FormalEducation', 'CompensationAmount', 'CompensationCurrency', 'exchangeRate']]","1e94229d":"data_selected = data_usefull[data_usefull['EmploymentStatus']=='Employed full-time']\ndata_selected = data_selected.dropna(axis=0, how = 'any', subset=['Country', 'CompensationAmount','exchangeRate'])","e1119229":"data_selected['CompensationAmount'] = data_selected['CompensationAmount'].apply(lambda x: x.replace(',',''))\ndata_selected.drop(data_selected[data_selected['CompensationAmount']=='-'].index,inplace=True)\ndata_selected['CompensationAmountExanged'] = data_selected.apply(lambda x : float(x['CompensationAmount'])*float(x['exchangeRate']),  axis=1)","c279f236":"data_selected.replace({\"People 's Republic of China\":'China' , \"Republic of China\":'China', \"Taiwan\":'China'}, inplace = True)","a45af5b0":"data_selected.head()","d5a0e16b":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n#Import Plotly and use it in the Offline Mode\nimport plotly\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.tools as tls\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nimport plotly.figure_factory as fig_fact\nplotly.tools.set_config_file(world_readable=True, sharing='public')","f36dfded":"sns.countplot(y='GenderSelect', data=data_selected)\nplt.show()","43ae2019":"data_country = data_selected.drop(data_selected[data_selected['Country']=='Other'].index)['Country'].value_counts().to_frame()\nsns.barplot(data_country['Country'][:15],data_country.index[:15],palette='inferno')\nplt.title('Top 15 Countries by number of respondents')\nplt.xlabel('')\nfig=plt.gcf()\nfig.set_size_inches(10,10)\nplt.show()\ndata_country[:15]","7770b074":"data = [ dict(\n        type = 'choropleth',\n        locations = data_country.index,\n        locationmode = 'country names',\n        z = data_country['Country'],\n        text = data_country.index,\n        colorscale = [[0,'rgb(255, 255, 255)'],[1,'rgb(56, 142, 60)']],\n        autocolorscale = False,\n        reversescale = False,\n        marker = dict(\n            line = dict (\n                color = 'rgb(180,180,180)',\n                width = 0.5\n            ) ),\n        colorbar = dict(\n            autotick = False,\n            tickprefix = '',\n            title = 'Survey Respondents'),\n      ) ]\n\nlayout = dict(\n    title = 'Survey Respondents by Nationality',\n    geo = dict(\n        showframe = False,\n        showcoastlines = False,\n        projection = dict(\n            type = 'Mercator'\n        )\n    )\n)\n\nfig = dict( data=data, layout=layout )\npy.iplot( fig, validate=False, filename='survey-world-map')","470d42c6":"#Plot the Age distribution\nfig = fig_fact.create_distplot([data_selected[data_selected['Age'] > 0]['Age']], ['age'], colors=['#BA68C8'])\npy.iplot(fig, filename='Basic Distplot')","76efe28e":"plt.subplots(figsize=(15,8))\ndata_salary=data_selected[data_selected['CompensationAmountExanged']<1000000]\nsns.distplot(data_salary['CompensationAmountExanged'])\nplt.title('Salary Distribution',size=15)\nplt.show()","2b35667e":"f,ax=plt.subplots(1,2,figsize=(18,8))\nsal_coun=data_salary.groupby('Country')['CompensationAmountExanged'].median().sort_values(ascending=False)[:15].to_frame()\nsns.barplot('CompensationAmountExanged',sal_coun.index,data=sal_coun,palette='RdYlGn',ax=ax[0])\nax[0].axvline(data_salary['CompensationAmountExanged'].median(),linestyle='dashed')\nax[0].set_title('Highest Salary Paying Countries')\nax[0].set_xlabel('')\nresp_coun=data_country[:15]\nmax_coun=data_salary.groupby('Country')['CompensationAmountExanged'].median().to_frame()\nmax_coun=max_coun[max_coun.index.isin(resp_coun.index)]\nmax_coun.sort_values(by='CompensationAmountExanged',ascending=True).plot.barh(width=0.8,ax=ax[1],color=sns.color_palette('RdYlGn'))\nax[1].axvline(data_salary['CompensationAmountExanged'].median(),linestyle='dashed')\nax[1].set_title('Compensation of Top 15 Respondent Countries')\nax[1].set_xlabel('')\nax[1].set_ylabel('')\nplt.subplots_adjust(wspace=0.8)\nplt.show()","19634c56":"plt.subplots(figsize=(10,8))\nsns.boxplot(y='GenderSelect',x='CompensationAmountExanged',data=data_salary)\nplt.ylabel('')\nplt.show()","1db0debe":"sal_job=data_salary.groupby('CurrentJobTitleSelect')['CompensationAmountExanged'].median().to_frame().sort_values(by='CompensationAmountExanged',ascending=False)\nax=sns.barplot(sal_job.CompensationAmountExanged,sal_job.index,palette=sns.color_palette('inferno',20))\nplt.title('Compensation By Job Title',size=15)\nfor i, v in enumerate(sal_job.CompensationAmountExanged): \n    ax.text(.5, i, v,fontsize=10,color='white',weight='bold')\nfig=plt.gcf()\nfig.set_size_inches(8,8)\nplt.show()\n","c662aed7":"data_plot = data_selected[data_selected['Country'].isin(data_selected['Country'].value_counts().index[0:5].tolist())]\ndata_plot = data_plot[data_plot['CurrentJobTitleSelect'].isin(data_plot['CurrentJobTitleSelect'].value_counts().index[0:4].tolist())]\nsns.set(style=\"whitegrid\")\n\n# Draw a nested barplot to show survival for class and sex\ng = sns.factorplot(x=\"Country\", y=\"CompensationAmountExanged\", hue=\"CurrentJobTitleSelect\", data=data_plot,\n                size=12, kind=\"bar\", palette=\"muted\")\ng.despine(left=True)\ng.set_ylabels(\"survival probability\")\nplt.show()","410139f6":"data_plot = data_selected[data_selected['Country'].isin(data_selected['Country'].value_counts().index[0:4].tolist())]\ndata_plot = data_plot[data_plot['CurrentJobTitleSelect'].isin(data_plot['CurrentJobTitleSelect'].value_counts().index[0:4].tolist())]\ng = sns.FacetGrid(data_plot, row=\"CurrentJobTitleSelect\", col=\"Country\", margin_titles=True)\nbins = np.linspace(0, 120000, 1000)\ng.map(plt.hist, \"CompensationAmountExanged\", color=\"steelblue\", bins=bins)\nplt.show()","af5c47a1":"data_plot = data_selected[data_selected['Country'].isin(data_selected['Country'].value_counts().index[0:15].tolist())]\ndata_plot = data_plot[data_plot['CurrentJobTitleSelect'].isin(data_plot['CurrentJobTitleSelect'].value_counts().index[0:10].tolist())]\nfig = plt.figure(figsize=(20, 8))\nsns.set(style=\"darkgrid\")\nax = sns.countplot(y=\"Country\",  hue=\"CurrentJobTitleSelect\",  data=data_plot)\nplt.show()","3725cf18":"data_plot = data_selected[data_selected['Country'].isin(data_selected['Country'].value_counts().index[0:10].tolist())]\ndata_plot = data_plot[data_plot['CurrentJobTitleSelect'].isin(data_plot['CurrentJobTitleSelect'].value_counts().index[0:10].tolist())]\nplt.subplots(figsize=(25,35))\nuseful = data_plot['Country'].value_counts().index.tolist()\nlength=len(data_plot['Country'].value_counts())\nfor i,j in zip(useful,range(length)):\n    plt.subplot((length\/2),3,j+1)\n    plt.subplots_adjust(wspace=0.2,hspace=0.2)\n    data_plot[data_plot['Country'] == i]['CurrentJobTitleSelect'].value_counts().plot.pie(autopct='%1.1f%%',wedgeprops = { 'linewidth' : 2, 'edgecolor' : 'white' })\n    plt.title(i,size=25)\n    my_circle=plt.Circle( (0,0), 0.7, color='white')\n    p=plt.gcf()\n    p.gca().add_artist(my_circle)\n    plt.xlabel('')\n    plt.ylabel('')\nplt.show()","6671be5b":"*Refrence*\n1. https:\/\/www.kaggle.com\/rounakbanik\/data-science-faq\n2. https:\/\/www.kaggle.com\/ash316\/novice-to-grandmaster\n3. https:\/\/www.kaggle.com\/hakkisimsek\/plotly-tutorial-1","c0ba58da":"**Replace the other name of China into \"Chian\" especially including \u201cTaiwan\u201d.**","004c999b":"**Show some basic Information**","3072255d":"**Select the data with full-time job and delete the data without the information of Countray or salay.**","0ab528ec":"**Gender**","57429b0a":"## plot","44a4d14d":"**Import some necessary tools for data pre-processing and load the data to pandas including exchange rate of different currency to USD.**","9edbe5d8":"**Salary**","f1e3f0bf":"**Age**","e82432cb":"**Combine with this to dataframe and select the features we needed.**","f810b4ae":"**Country**","b9ae67b0":"**Change the string to float and exchange all salary into USD.**","983cfc48":"## Dispose of the data\nThe original data is contain 16716 respondents from about 52 countrys. However, some important information is absent for some of data, we need to select a part of it to achieve our purpose.","b98f75c4":"# Datascientist_selary_analysis\nThe data is downloaded from kaggle(https:\/\/www.kaggle.com\/kaggle\/kaggle-survey-2017), our purpose is to analysis the salary of Datascientist around world."}}