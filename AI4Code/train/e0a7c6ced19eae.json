{"cell_type":{"cc0a6daa":"code","3ea68ed8":"code","c8f4233c":"code","38a2ce5d":"code","619a39c4":"code","b2166e7d":"code","5e07b3e9":"code","550144b8":"code","686468f4":"code","3e512482":"code","a847c5e0":"code","9cb126b9":"code","872480b3":"code","3061fc55":"code","b1dae6e7":"code","b533d82f":"code","0ef25c96":"code","e30103f4":"code","fc2a1236":"code","3d48dd3a":"code","3c201ca4":"code","d9793ead":"code","b18365dd":"code","ae3b3d38":"code","9afa3cd0":"code","9257f0fc":"code","2ca3d57c":"code","960b79b5":"code","7c6bf135":"code","92d57d6f":"code","ca0d0b38":"code","28f69e24":"code","56f44b9c":"code","ac2d7832":"code","a550ba4b":"code","9c8aa14c":"code","9445b995":"code","5133b0b3":"code","8a31fbe7":"code","815e368b":"code","29b81807":"code","86eb5232":"code","7d066cca":"code","6dc549ca":"code","9da653ff":"code","28828a03":"code","f95a797a":"code","3314887b":"code","0d0db6b2":"code","acfa3499":"code","6286f915":"markdown","abad160e":"markdown","d888e2da":"markdown","8cc2cd4a":"markdown","8f5a1770":"markdown","cc1c4c91":"markdown","85a63757":"markdown","a5546225":"markdown","0ad95c08":"markdown","3c9997e1":"markdown","766ce5db":"markdown","f243fef6":"markdown","5c1ecc51":"markdown","f821d00e":"markdown","57d382aa":"markdown","e6e42e71":"markdown","19057e4d":"markdown","529a2ef0":"markdown","cae1d1ae":"markdown","28a5e833":"markdown","474efaf9":"markdown"},"source":{"cc0a6daa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\/'","3ea68ed8":"# list of librairies used in this project\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy.stats as st \n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nimport sklearn.metrics as metrics\nfrom mlxtend.plotting import plot_confusion_matrix\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import AdaBoostClassifier","c8f4233c":"# Colors and style settings\nsns.set_palette(\"Set1\")\nsns.set_style('ticks')","38a2ce5d":"dataset = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')","619a39c4":"dataset.head()","b2166e7d":"print(dataset.shape)\nprint(dataset.columns)","5e07b3e9":"s = (dataset.dtypes == 'object')\nobject_cols = list(s[s].index)\nprint('Categorial columns :', object_cols)","550144b8":"dataset.isnull().mean()","686468f4":"dataset.duplicated().sum()","3e512482":"plt.figure(figsize = (40,40))\n\nplt.subplot(3, 3, 1)\nsns.boxplot('age', data=dataset)\n\nplt.subplot(3,3,2)\nsns.boxplot('creatinine_phosphokinase', data=dataset)\n\nplt.subplot(3,3,3)\nsns.boxplot('ejection_fraction', data=dataset)\n\nplt.subplot(3,3,4)\nsns.boxplot('platelets', data=dataset)\n\nplt.subplot(3,3,5)\nsns.boxplot('serum_creatinine', data=dataset)\n\nplt.subplot(3,3,6)\nsns.boxplot('serum_sodium', data=dataset)\n\nplt.subplot(3,3,7)\nsns.boxplot('time', data=dataset)\n\nplt.tight_layout()\n\nplt.show()","a847c5e0":"outliers = dataset['ejection_fraction'] >= 70\ndataset[outliers]","9cb126b9":"dataset = dataset[~outliers]","872480b3":"plt.figure(figsize = (40,40))\n\nplt.subplot(3, 3, 1)\nsns.boxplot('age', data=dataset)\n\nplt.subplot(3,3,2)\nsns.boxplot('creatinine_phosphokinase', data=dataset)\n\nplt.subplot(3,3,3)\nsns.boxplot('ejection_fraction', data=dataset)\n\nplt.subplot(3,3,4)\nsns.boxplot('platelets', data=dataset)\n\nplt.subplot(3,3,5)\nsns.boxplot('serum_creatinine', data=dataset)\n\nplt.subplot(3,3,6)\nsns.boxplot('serum_sodium', data=dataset)\n\nplt.subplot(3,3,7)\nsns.boxplot('time', data=dataset)\n\nplt.tight_layout()\n\nplt.show()","3061fc55":"plt.figure(figsize = (15,15))\n\nplt.subplot(2,3,1)\nsns.countplot('sex', hue='DEATH_EVENT', data=dataset)\nplt.legend()\n\nplt.subplot(2,3,2)\nsns.countplot('anaemia', hue='DEATH_EVENT', data=dataset)\nplt.legend()\n\nplt.subplot(2,3,3)\nsns.countplot('high_blood_pressure', hue='DEATH_EVENT', data=dataset)\nplt.legend()\n\nplt.subplot(2,3,4)\nsns.countplot('smoking', hue='DEATH_EVENT', data=dataset)\nplt.legend()\n\nplt.subplot(2,3,5)\nsns.countplot('diabetes', hue='DEATH_EVENT', data=dataset)\nplt.legend()\n\nplt.tight_layout()\n\nplt.show()","b1dae6e7":"X = 'sex'\nY = 'DEATH_EVENT'\ncont = dataset[[X, Y]].pivot_table(index=X, columns=Y, aggfunc=len, margins=True, margins_name='Total')","b533d82f":"tx = cont.loc[:,[\"Total\"]]\nty = cont.loc[[\"Total\"],:]\nn = len(dataset)\nindep = tx.dot(ty) \/ n\n\nc = cont.fillna(0)\nmeasure = (c-indep)**2\/indep\nxi_n = measure.sum().sum()\ntable = measure\/xi_n\n\nplt.figure(figsize = (10,10))\nsns.heatmap(table.iloc[:-1,:-1],annot=c.iloc[:-1,:-1])\nplt.ylabel('sex')\nplt.xlabel('DEATH_EVENT')\nplt.yticks(rotation = 360)\nplt.title('Contingency table')\n\nplt.show()","0ef25c96":"print('xi_n : ', xi_n)\n\nst_chi2, st_p, st_dof, st_exp = st.chi2_contingency(cont)\nprint('chi-squared :', st_chi2)\nprint('p-value :', st_p)","e30103f4":"X = 'smoking'\nY = 'DEATH_EVENT'\ncont = dataset[[X, Y]].pivot_table(index=X, columns=Y, aggfunc=len, margins=True, margins_name='Total')","fc2a1236":"tx = cont.loc[:,[\"Total\"]]\nty = cont.loc[[\"Total\"],:]\nn = len(dataset)\nindep = tx.dot(ty) \/ n\n\nc = cont.fillna(0)\nmeasure = (c-indep)**2\/indep\nxi_n = measure.sum().sum()\ntable = measure\/xi_n\n\nplt.figure(figsize = (10,10))\nsns.heatmap(table.iloc[:-1,:-1],annot=c.iloc[:-1,:-1])\nplt.ylabel('smoking')\nplt.xlabel('DEATH_EVENT')\nplt.yticks(rotation = 360)\nplt.title('Contingency table')\n\nplt.show()","3d48dd3a":"print('xi_n : ', xi_n)\n\nst_chi2, st_p, st_dof, st_exp = st.chi2_contingency(cont)\nprint('chi-squared :', st_chi2)\nprint('p-value :', st_p)","3c201ca4":"X = 'anaemia'\nY = 'DEATH_EVENT'\ncont = dataset[[X, Y]].pivot_table(index=X, columns=Y, aggfunc=len, margins=True, margins_name='Total')","d9793ead":"tx = cont.loc[:,[\"Total\"]]\nty = cont.loc[[\"Total\"],:]\nn = len(dataset)\nindep = tx.dot(ty) \/ n\n\nc = cont.fillna(0)\nmeasure = (c-indep)**2\/indep\nxi_n = measure.sum().sum()\ntable = measure\/xi_n\n\nplt.figure(figsize = (10,10))\nsns.heatmap(table.iloc[:-1,:-1],annot=c.iloc[:-1,:-1])\nplt.ylabel('anaemia')\nplt.xlabel('DEATH_EVENT')\nplt.yticks(rotation = 360)\nplt.title('Contingency table')\n\nplt.show()","b18365dd":"print('xi_n : ', xi_n)\n\nst_chi2, st_p, st_dof, st_exp = st.chi2_contingency(cont)\nprint('chi-squared :', st_chi2)\nprint('p-value :', st_p)","ae3b3d38":"X = 'high_blood_pressure'\nY = 'DEATH_EVENT'\ncont = dataset[[X, Y]].pivot_table(index=X, columns=Y, aggfunc=len, margins=True, margins_name='Total')","9afa3cd0":"tx = cont.loc[:,[\"Total\"]]\nty = cont.loc[[\"Total\"],:]\nn = len(dataset)\nindep = tx.dot(ty) \/ n\n\nc = cont.fillna(0)\nmeasure = (c-indep)**2\/indep\nxi_n = measure.sum().sum()\ntable = measure\/xi_n\n\nplt.figure(figsize = (10,10))\nsns.heatmap(table.iloc[:-1,:-1],annot=c.iloc[:-1,:-1])\nplt.ylabel('high_blood_pressure')\nplt.xlabel('DEATH_EVENT')\nplt.yticks(rotation = 360)\nplt.title('Contingency table')\n\nplt.show()","9257f0fc":"print('xi_n : ', xi_n)\n\nst_chi2, st_p, st_dof, st_exp = st.chi2_contingency(cont)\nprint('chi-squared :', st_chi2)\nprint('p-value :', st_p)","2ca3d57c":"plt.figure(figsize=[10,10])\n\nsns.boxplot(x='DEATH_EVENT', y='creatinine_phosphokinase', data=dataset)\nplt.show()","960b79b5":"X = dataset['DEATH_EVENT'] # qualitative\nY = dataset['creatinine_phosphokinase']\n\ndef eta_squared(x,y):\n    moyenne_y = y.mean()\n    classes = []\n    for classe in x.unique():\n        yi_classe = y[x==classe]\n        classes.append({'ni': len(yi_classe),\n                        'moyenne_classe': yi_classe.mean()})\n    SCT = sum([(yj-moyenne_y)**2 for yj in y])\n    SCE = sum([c['ni']*(c['moyenne_classe']-moyenne_y)**2 for c in classes])\n    return SCE\/SCT\n    \nprint('eta-squared :', eta_squared(X,Y))","7c6bf135":"plt.figure(figsize=[10,10])\n\nsns.boxplot(x='DEATH_EVENT', y='platelets', data=dataset)\nplt.show()","92d57d6f":"X = dataset['DEATH_EVENT'] # qualitative\nY = dataset['platelets']\n\nprint('eta-squared :', eta_squared(X,Y))","ca0d0b38":"plt.figure(figsize=[10,10])\n\nsns.boxplot(x='DEATH_EVENT', y='ejection_fraction', data=dataset)\nplt.show()","28f69e24":"X = dataset['DEATH_EVENT'] # qualitative\nY = dataset['ejection_fraction']\n\nprint('eta-squared :', eta_squared(X,Y))","56f44b9c":"plt.figure(figsize=[10,10])\n\nsns.boxplot(x='DEATH_EVENT', y='serum_creatinine', data=dataset)\nplt.show()","ac2d7832":"X = dataset['DEATH_EVENT'] # qualitative\nY = dataset['serum_creatinine']\n\nprint('eta-squared :', eta_squared(X,Y))","a550ba4b":"plt.figure(figsize=[10,10])\n\nsns.boxplot(x='DEATH_EVENT', y='serum_sodium', data=dataset)\nplt.show()","9c8aa14c":"X = dataset['DEATH_EVENT'] # qualitative\nY = dataset['serum_sodium']\n\nprint('eta-squared :', eta_squared(X,Y))","9445b995":"plt.figure(figsize=[10,10])\n\nsns.boxplot(x='DEATH_EVENT', y='time', data=dataset)\nplt.show()","5133b0b3":"X = dataset['DEATH_EVENT'] # qualitative\nY = dataset['time']\n\nprint('eta-squared :', eta_squared(X,Y))","8a31fbe7":"corrMatrix = dataset.corr()\nplt.figure(figsize=(15,15))\nsns.heatmap(corrMatrix,square = True, cmap=\"coolwarm\",linewidths=.5, annot=True)\nplt.show()","815e368b":"X = dataset[['age','ejection_fraction','serum_creatinine', 'serum_sodium', 'time']]\ny = dataset['DEATH_EVENT']","29b81807":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, train_size = 0.8, random_state=1)","86eb5232":"rf = RandomForestClassifier(max_depth=2, random_state=42)\nrf.fit(X_train, y_train)\ny_pred = rf.predict(X_test)\n\nprint('Accuracy : ', metrics.accuracy_score(y_pred=y_pred,y_true=y_test) * 100, '%')","7d066cca":"cm = metrics.confusion_matrix(y_test, y_pred)\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Reds)\nplt.title(\"Random Forest Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Failed\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Failed\"], fontsize=16)\nplt.show()","6dc549ca":"importances = rf.feature_importances_\nindices = np.argsort(importances)\n \nplt.figure(1)\nplt.title('Feature Importances')\nplt.barh(range(len(indices)), importances[indices], color='b', align='center')\nplt.yticks(range(len(indices)), [dataset.columns[i] for i in indices])\nplt.xlabel('Relative Importance')","9da653ff":"gbc = GradientBoostingClassifier(max_depth=2, random_state=42)\ngbc.fit(X_train, y_train)\ny_pred = gbc.predict(X_test)\n\nprint('Accuracy : ', metrics.accuracy_score(y_pred=y_pred,y_true=y_test) * 100, '%')","28828a03":"cm = metrics.confusion_matrix(y_test, y_pred)\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Reds)\nplt.title(\"Gradient Boosting Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Failed\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Failed\"], fontsize=16)\nplt.show()","f95a797a":"importances = gbc.feature_importances_\nindices = np.argsort(importances)\n \nplt.figure(1)\nplt.title('Feature Importances')\nplt.barh(range(len(indices)), importances[indices], color='b', align='center')\nplt.yticks(range(len(indices)), [dataset.columns[i] for i in indices])\nplt.xlabel('Relative Importance')","3314887b":"adc = AdaBoostClassifier(n_estimators=100, random_state=42)\nadc.fit(X_train, y_train)\ny_pred = adc.predict(X_test)\n\nprint('Accuracy: ', metrics.accuracy_score(y_pred=y_pred,y_true=y_test) * 100, '%')","0d0db6b2":"cm = metrics.confusion_matrix(y_test, y_pred)\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Reds)\nplt.title(\"AdaBoost Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Failed\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Failed\"], fontsize=16)\nplt.show()","acfa3499":"importances = adc.feature_importances_\nindices = np.argsort(importances)\n \nplt.figure(1)\nplt.title('Feature Importances')\nplt.barh(range(len(indices)), importances[indices], color='b', align='center')\nplt.yticks(range(len(indices)), [dataset.columns[i] for i in indices])\nplt.xlabel('Relative Importance')","6286f915":"### 2.1. Random Forest","abad160e":"#### Quantitative data representations","d888e2da":"Duplicated values","8cc2cd4a":"## Exploratory analysis","8f5a1770":"Missing values","cc1c4c91":"#### 1.3.3. Matrice de corr\u00e9lation globale","85a63757":"### 2.3. AdaBoost","a5546225":"We show two outliers in ejection_fraction.","0ad95c08":"References : \n- https:\/\/archive.ics.uci.edu\/ml\/datasets\/Heart+failure+clinical+records\n- https:\/\/journals.plos.org\/plosone\/article?id=10.1371\/journal.pone.0181001\n- https:\/\/bmcmedinformdecismak.biomedcentral.com\/articles\/10.1186\/s12911-020-1023-5\n- https:\/\/www.fedecardio.org\/Les-gestes-qui-sauvent\/L-arret-cardiaque\/larret-cardiaque-un-bilan-alarmant\n- https:\/\/www.who.int\/fr\/news-room\/fact-sheets\/detail\/the-top-10-causes-of-death\n","3c9997e1":"# Heart Failure Predictions","766ce5db":"### 2.2. Gradient Boosting","f243fef6":"### Cleaning","5c1ecc51":"Cardiovascular diseases (CVDs) are the first cause of death in the world with an estimated 17.9 million deaths each year, which accounts for 31% of all deaths worlwide.\nHeart failure is a common event caused by CVDs and this dataset contains 12 features that can be used to predict mortality by heart failure.\nMost cardiovascular diseases can be prevented by addressing behavioural risk factors such as tobacco use, unhealthy diet and obesity, physical inactivity and harmful use of alcohol using population-wide strategies.\nPeople with cardiovascular disease or who are at high cardiovascular risk, due to the presence of one or more risk factors such as hypertension, diabetes, hyperlipidaemia or already established disease, need early detection and management wherein a machine learning model can be of great help.\n","f821d00e":"### Descriptive analysis","57d382aa":"#### Categorial data","e6e42e71":"#### Categorial data and correlations","19057e4d":"## Working environment","529a2ef0":"### Bivariate analysis","cae1d1ae":"## Machine Learning and modelisation","28a5e833":"#### Correlation of quantitative data","474efaf9":"**Conclusions :**\n- Random Forest is the method with more accuracy\n- ejection_fraction and creatinine_phosphokinase are the most importante features"}}