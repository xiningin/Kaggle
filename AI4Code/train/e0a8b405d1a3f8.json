{"cell_type":{"a64817c5":"code","4dcbc460":"code","6ce9bab2":"code","34568458":"code","9277dee5":"code","7af3b175":"code","072577f9":"code","92d1a0c6":"markdown","4e9be9bf":"markdown","ca752536":"markdown","14e7b0fe":"markdown"},"source":{"a64817c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4dcbc460":"train = pd.read_csv('..\/input\/g-research-crypto-forecasting\/train.csv') \ntest = pd.read_csv('..\/input\/g-research-crypto-forecasting\/example_test.csv') \nsub = pd.read_csv('..\/input\/g-research-crypto-forecasting\/example_sample_submission.csv') \nasset_details = pd.read_csv('..\/input\/g-research-crypto-forecasting\/asset_details.csv')  ","6ce9bab2":"train.head()","34568458":"train.describe()","9277dee5":"train.info()","7af3b175":"test.head()","072577f9":"# import pandas_profiling as pp\n# pp.ProfileReport(train)","92d1a0c6":"### Author: [Roshan Ram](https:\/\/linkedin.com\/in\/roshanr11)\n---\n##### About: Hi! I'm Roshan, an undergraduate student @ Carnegie Mellon studying Information Systems, Machine Learning, and Software Engineering.\n---\n##### I blog about ML on my [LinkedIn](https:\/\/linkedin.com\/in\/roshanr11) and [Medium](https:\/\/medium.com\/@roshan.ram0101), check it out!\n\n---\n\n##### Please feel free to give this notebook an upvote if you found it helpful, and connect with me on LinkedIn! :) \n\n---\n\n### Note: Notebook is still a work in progress! ","4e9be9bf":"# Work in progress...","ca752536":"# Automated EDA","14e7b0fe":"#### We note that we have 10 columns. \n\n`timestamp` - A timestamp for the minute covered by the row.  \n`Asset_ID` - An ID code for the cryptoasset.  \n`Count` - The number of trades that took place this minute.  \n`Open` - The USD price at the beginning of the minute.  \n`High` - The highest USD price during the minute.  \n`Low` - The lowest USD price during the minute.  \n`Close` - The USD price at the end of the minute.  \n`Volume` - The number of cryptoasset units traded during the minute.  \n`VWAP` - The volume weighted average price for the minute.  \n`Target` - 15 minute residualized returns. See the 'Prediction and Evaluation' section of this notebook for details of how the target is calculated.  "}}