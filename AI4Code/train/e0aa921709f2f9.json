{"cell_type":{"9b01bc0e":"code","83470a6e":"code","ef4c5d41":"code","bbe9a988":"code","0abe72d6":"code","a09a9ad4":"code","2a043a85":"code","42c7f833":"code","8eb65b1a":"code","d532c5f9":"code","e0e45840":"code","262d3e9b":"code","79c41666":"code","976c8787":"code","bbfb63e6":"code","0823f5d6":"code","c20fb34c":"code","69db631d":"code","7d864ef4":"code","116d215f":"code","3d9016ad":"code","cd7a649a":"code","1a5f439c":"code","f754a897":"code","15c7c2d3":"code","88d83913":"code","94da8737":"code","97a0e368":"code","1e6539ab":"code","93da7861":"code","48b8285a":"code","23a289dc":"code","3e74e6d8":"code","ad16b996":"code","21bed388":"code","948e53ef":"code","e1a05c2f":"code","223c09ce":"code","fc53ad69":"code","ceeefa59":"code","f46adf6e":"code","d82fdfa8":"code","7061e6a9":"code","4a356dee":"code","be691a65":"code","cc9c55ee":"code","6fc50d4a":"code","fac6e658":"code","2a37d7ea":"code","02fc0955":"code","b9beb6a4":"code","d67734fa":"code","851aeb1e":"code","8651641c":"code","f6cb2f33":"code","f3f9a426":"code","49a610bf":"code","ba4e2179":"code","149bc9bb":"code","f98f190b":"code","3464e413":"code","10ae4986":"code","55e0e66b":"markdown","97019fc2":"markdown","bdea030f":"markdown","2bd05ddd":"markdown","4c068872":"markdown","5f901550":"markdown","9047e50b":"markdown"},"source":{"9b01bc0e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","83470a6e":"import numpy as np \nimport pandas as pd\nimport calendar\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport squarify\nimport gc\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nsns.set_style('white')\n\npd.options.display.float_format = '{:,.2f}'.format","ef4c5d41":"df_sorted = pd.read_pickle('\/kaggle\/input\/em-1inicio\/EasyMoney_Nuevo.pkl',compression='zip')","bbe9a988":"df_sorted.info()","0abe72d6":"df_sorted['debit_card_E']=df_sorted['dif_debit_card']*10\ndf_sorted['em_account_p_E']=df_sorted['dif_em_account_p']*10\ndf_sorted['em_account_pp_E']=df_sorted['dif_em_account_pp']*10\ndf_sorted['em_acount_E']=df_sorted['dif_em_acount']*10\ndf_sorted['emc_account_E']=df_sorted['dif_emc_account']*10\ndf_sorted['payroll_E']=df_sorted['dif_payroll']*10\ndf_sorted['payroll_account_E']=df_sorted['dif_payroll_account']*10","a09a9ad4":"productos_easymoney_cuenta_simple = ['debit_card_E','em_account_p_E','em_account_pp_E','em_acount_E','emc_account_E','payroll_E','payroll_account_E']","2a043a85":"DFCS = df_sorted.groupby('pk_partition')[productos_easymoney_cuenta_simple].sum()","42c7f833":"for i in DFCS:\n    DFCS[i] = np.where(DFCS[i]<=0,0,DFCS[i])","8eb65b1a":"DFCS.style.background_gradient(cmap=\"Reds\")","d532c5f9":"DFCS.groupby('pk_partition')[productos_easymoney_cuenta_simple].sum().plot()","e0e45840":"DFCS1=DFCS.sum()","262d3e9b":"DFCS2=list(DFCS1)","79c41666":"plt.figure(figsize=(200,600))\nx = productos_easymoney_cuenta_simple\ny = DFCS2\nfig, ax = plt.subplots()\nax.set_ylabel('Euros')\nax.set_xlabel('Productos')\nax.set_title('Ventas Productos Cuenta Simple (expresado en euros)')\nplt.xticks(rotation=45)\nplt.bar(x, y, color='red')\nplt.show()","976c8787":"DFCS3 = pd.DataFrame(DFCS1).reset_index()","bbfb63e6":"DFCS3.rename(columns={\"index\":\"Producto\"},inplace=True)\nDFCS3.rename(columns={0:\"Venta_Total\"},inplace=True)","0823f5d6":"DFCS3","c20fb34c":"DFCS3['Ventas%'] = DFCS3['Venta_Total']\/DFCS3['Venta_Total'].sum()\nDFCS3","69db631d":"figura=px.treemap(DFCS3, path=[productos_easymoney_cuenta_simple], values=\"Ventas%\", height=500, width=800)\nfigura.show()","7d864ef4":"df_sorted['funds_E']=df_sorted['dif_funds']*40\ndf_sorted['long_term_deposit_E']=df_sorted['dif_long_term_deposit']*40\ndf_sorted['mortgage_E']=df_sorted['dif_mortgage']*40\ndf_sorted['pension_plan_E']=df_sorted['dif_pension_plan']*40\ndf_sorted['securities_E']=df_sorted['dif_securities']*40","116d215f":"productos_easymoney_cuenta_ahorro = ['funds_E','long_term_deposit_E','mortgage_E','pension_plan_E',\n                                     'securities_E']","3d9016ad":"DFCA = df_sorted.groupby('pk_partition')[productos_easymoney_cuenta_ahorro].sum()","cd7a649a":"for i in DFCA:\n    DFCA[i]=np.where(DFCA[i]<=0,0,DFCA[i])","1a5f439c":"DFCA.style.background_gradient(cmap=\"PuBu\")","f754a897":"DFCA.groupby('pk_partition')[productos_easymoney_cuenta_ahorro].sum().plot()","15c7c2d3":"DFCA1 = DFCA.sum()","88d83913":"DFCA2 = list(DFCA1)","94da8737":"DFCA2","97a0e368":"plt.figure(figsize=(20,6))\nx = productos_easymoney_cuenta_ahorro\ny = DFCA2\nfig, ax = plt.subplots()\nax.set_ylabel('Euros')\nax.set_xlabel('Productos')\nplt.xticks(rotation=90)\nax.set_title('Ventas Productos Cuenta Ahorro (expresado en euros)')\nplt.bar(x, y)\nplt.show()","1e6539ab":"DFCA3 = pd.DataFrame(DFCA1).reset_index()","93da7861":"DFCA3.rename(columns={\"index\":\"Producto\"},inplace=True)\nDFCA3.rename(columns={0:\"Venta_Total\"},inplace=True)","48b8285a":"DFCA3","23a289dc":"DFCA3['Ventas%'] = DFCA3['Venta_Total']\/DFCA3['Venta_Total'].sum()\nDFCA3","3e74e6d8":"figura=px.treemap(DFCA3, path=[productos_easymoney_cuenta_ahorro], values=\"Ventas%\", height=500, width=800)\nfigura.show()","ad16b996":"df_sorted['loans_E']=df_sorted['dif_loans']*60\ndf_sorted['credit_card_E']=df_sorted['dif_credit_card']*60","21bed388":"productos_easymoney_cuenta_financiamiento = ['loans_E','credit_card_E']","948e53ef":"DFCF = df_sorted.groupby('pk_partition')[productos_easymoney_cuenta_financiamiento].sum()","e1a05c2f":"for i in DFCF:\n    DFCF[i]=np.where(DFCF[i]<=0,0,DFCF[i])","223c09ce":"DFCF.style.background_gradient(cmap=\"Reds\")","fc53ad69":"DFCF.groupby('pk_partition')[productos_easymoney_cuenta_financiamiento].sum().plot()","ceeefa59":"DFCF1 = DFCF.sum()","f46adf6e":"DFCF2 = list(DFCF1)","d82fdfa8":"plt.figure(figsize=(20,6))\nx = productos_easymoney_cuenta_financiamiento\ny = DFCF2\nfig, ax = plt.subplots()\nax.set_ylabel('Euros')\nax.set_xlabel('Productos')\nax.set_title('Ventas Productos Cuenta Financiamiento (expresado en euros)')\nplt.bar(x, y)\nplt.show() ","7061e6a9":"DFCF3 = pd.DataFrame(DFCF1).reset_index()","4a356dee":"DFCF3.rename(columns={\"index\":\"Producto\"},inplace=True)\nDFCF3.rename(columns={0:\"Venta_Total\"},inplace=True)","be691a65":"DFCF3","cc9c55ee":"DFCF3['Ventas%'] = DFCF3['Venta_Total']\/DFCF3['Venta_Total'].sum()\nDFCF3","6fc50d4a":"figura=px.treemap(DFCF3, path=[productos_easymoney_cuenta_financiamiento], values=\"Ventas%\", height=500, width=800)\nfigura.show()","fac6e658":"IPC = {'Cuenta_Simple':DFCS3['Venta_Total'].sum(),'Cuenta_Ahorro':DFCA3['Venta_Total'].sum(),'Cuenta_Financiamiento':DFCF3['Venta_Total'].sum()}","2a37d7ea":"IPC1 = pd.DataFrame(list(IPC.items()),columns=['Cuenta','Venta_Total'])\nIPC1","02fc0955":"IPC1['Venta_Total%']=IPC1['Venta_Total']\/IPC1['Venta_Total'].sum()\nIPC1","b9beb6a4":"IPC2 = list(IPC1['Venta_Total'])\nIPC3 = list(IPC1['Cuenta'])","d67734fa":"plt.figure(figsize=(20,6))\nx = IPC3\ny = IPC2\nfig, ax = plt.subplots()\nax.set_ylabel('Euros')\nax.set_xlabel('Cuentas')\nax.set_title('Ventas Cuentas Total (expresado en miles euros)')\nplt.bar(x, y)\nplt.show() ","851aeb1e":"figura=px.treemap(IPC1, path=[IPC3], values=\"Venta_Total%\", height=500, width=800)\nfigura.show()","8651641c":"IPC1['Venta_Total'].sum()","f6cb2f33":"DFT = pd.concat([DFCS3,DFCA3,DFCF3])","f3f9a426":"DFT.drop(['Ventas%'],axis=1,inplace=True)","49a610bf":"DFT","ba4e2179":"DFT['VentaT%']=DFT['Venta_Total']\/ DFT['Venta_Total'].sum()\nDFT","149bc9bb":"DFT['Venta_Total'].sum()","f98f190b":"DFT1 = list(DFT['Venta_Total'])\nDFT2 = list(DFT['Producto'])","3464e413":"plt.figure(figsize=(20,6))\nx = DFT2\ny = DFT1\nfig, ax = plt.subplots()\nax.set_ylabel('Euros')\nax.set_xlabel('Productos')\nplt.xticks(rotation=90)\nax.set_title('Ventas Productos Total (expresado en euros)')\nplt.bar(x, y)\nplt.show() ","10ae4986":"figura=px.treemap(DFT, path=[DFT2], values=\"VentaT%\", height=500, width=800)\nfigura.show()","55e0e66b":"# **1.C Ventas Cuenta Financiamiento**","97019fc2":"# 1.VENTAS POR TIPO DE CUENTA","bdea030f":"# **2.B Ventas por productos**","2bd05ddd":"# 2.VENTAS CONSOLIDADOS","4c068872":"# **1.A Ventas Cuenta Simple**","5f901550":"# **1.B Ventas Cuenta Ahorro**","9047e50b":"# **2.A Ventas por cuentas**"}}