{"cell_type":{"20a1173b":"code","9edd7970":"code","28719dd6":"code","b908aa5e":"code","76408b42":"code","64847541":"code","89bae823":"code","121716da":"code","57e79467":"code","322109f9":"code","e9e505c1":"code","928ec360":"code","18b9288d":"code","6050a0f5":"code","4dc24514":"code","9964cefb":"code","c944bf46":"markdown","f2965b50":"markdown","84c682b0":"markdown","ef7d0227":"markdown","b555c405":"markdown"},"source":{"20a1173b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9edd7970":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","28719dd6":"train_data = train_data.drop(columns=['Name','Cabin'])\ntrain_data['family_member'] = train_data['SibSp'] + train_data['Parch']\ntrain_data = train_data.drop(columns=['SibSp', 'Parch'])","b908aa5e":"test_data = test_data.drop(columns=['Name','Cabin'])\ntest_data['family_member'] = test_data['SibSp'] + test_data['Parch']\ntest_data = test_data.drop(columns=['SibSp', 'Parch'])","76408b42":"train_data.fillna(0,inplace=True)\ntest_data.fillna(0,inplace=True)","64847541":"X = train_data.drop(columns=['Survived'])\nY = train_data['Survived']\n\n\n\n#choose the features we want to train, just forget the float data\ncate_features_index = np.where(X.dtypes != float)[0]\n","89bae823":"from catboost import CatBoostClassifier, cv, Pool","121716da":"from sklearn.model_selection import train_test_split","57e79467":"#make the x for train and test (also called validation data) \nxtrain,xtest,ytrain,ytest = train_test_split(X,Y,train_size=0.82,random_state=42)","322109f9":"clf =CatBoostClassifier(eval_metric='Accuracy',use_best_model=True,random_seed=42)","e9e505c1":"#now just to make the model to fit the data\nclf.fit(xtrain,ytrain,cat_features=cate_features_index,eval_set=(xtest,ytest), early_stopping_rounds=50)","928ec360":"test_id = test_data.PassengerId","18b9288d":"test_data.isnull().sum()","6050a0f5":"prediction = clf.predict(test_data)","4dc24514":"len(test_id),len(prediction)","9964cefb":"df_sub = pd.DataFrame()\ndf_sub['PassengerId'] = test_id\ndf_sub['Survived'] = prediction.astype(np.int)\n\ndf_sub.to_csv('submission.csv', index=False)","c944bf46":"**Preprocessing Test_Data like train data**","f2965b50":"**kfOLD validation**","84c682b0":"**Splitting labels and target**","ef7d0227":"**Remove Cabin as it contains many Nan Data**","b555c405":"Percentage of column ith missing "}}