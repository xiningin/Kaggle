{"cell_type":{"d73f31ba":"code","f32afc99":"code","ae3e4a55":"code","41b4b049":"code","562b56fa":"code","683f32f7":"code","252ad8dc":"code","cb85ea14":"code","62546c21":"code","c2448e9b":"code","973b4c35":"code","2e24c1f3":"code","c463f4e6":"code","218d8b12":"code","1502b1c6":"code","1eca6c0d":"code","1c8337e5":"code","65787028":"code","3e2cc0fb":"code","e6a0f5c1":"code","13d46906":"code","5a9402ec":"code","1bfe76dc":"code","81d8efc0":"code","17ecaa9a":"code","800bb83e":"code","e0c0f674":"code","88204c7f":"code","23d78f37":"code","fa474134":"code","022aa874":"code","50ac138a":"code","608fa9fa":"markdown","14971f4b":"markdown","c5162aaa":"markdown","4d74247d":"markdown","5400a1f0":"markdown","5ad65aa3":"markdown","6265fe71":"markdown","5d9ca1cf":"markdown","b2a76b7a":"markdown","ba59385d":"markdown","00024f6f":"markdown","0776142e":"markdown","7cf8d0fc":"markdown","6a7d7cb1":"markdown","3d991f3b":"markdown","1c6992c5":"markdown","b1081725":"markdown","6d3c9d6d":"markdown","da246939":"markdown","33288cbf":"markdown","83ce9bd3":"markdown","0be6e673":"markdown","85382b32":"markdown","7f625d6c":"markdown"},"source":{"d73f31ba":"import numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nfrom matplotlib import pyplot as plt\n# import sklearn\n# from sklearn.model_selection import StratifiedShuffleSplit, StratifiedKFold, GroupKFold","f32afc99":"sample_submission = pd.read_csv(r\"..\/input\/ventilator-pressure-prediction\/sample_submission.csv\")","ae3e4a55":"sample_submission.head()","41b4b049":"sample_submission.shape, sample_submission.id.dtype, sample_submission.pressure.dtype","562b56fa":"sample_submission.id.nunique(), sample_submission.pressure.nunique()","683f32f7":"train_csv = pd.read_csv(r\"..\/input\/ventilator-pressure-prediction\/train.csv\")","252ad8dc":"train_csv.head()","cb85ea14":"train_csv.columns, train_csv.index, train_csv.isna().sum().sum()","62546c21":"train_csv.shape, train_csv.id.nunique(), train_csv.breath_id.nunique()","c2448e9b":"(train_csv.breath_id.value_counts().sort_index().values == 80).sum()","973b4c35":"train_csv.breath_id.value_counts().sort_index().index","2e24c1f3":"train_csv_breath_id_5 = train_csv[train_csv.breath_id == 10]  # Taking a look at the Breath ID 5. \ntrain_csv_breath_id_5","c463f4e6":"(train_csv_breath_id_5.index == range(320, 400)).sum()","218d8b12":"train_csv_breath_id_5[[\"R\", \"C\"]]","1502b1c6":"train_csv_breath_id_5.R.value_counts(), train_csv_breath_id_5.C.value_counts()","1eca6c0d":"train_csv_breath_id_5.time_step","1c8337e5":"train_csv_breath_id_5.u_in.values","65787028":"train_csv_breath_id_5.u_out.values","3e2cc0fb":"x = range(80)\ny1 = train_csv_breath_id_5.u_in\ny2 = train_csv_breath_id_5.u_out\n\nplt.xlabel(\"Time\")\nplt.ylabel(\"u_in\/u_out range\")\nplt.plot(x, y1, label=\"u_in\")\nplt.plot(x, y2, label=\"u_out\")\nplt.legend()","e6a0f5c1":"plt.xlabel(\"Time\")\nplt.ylabel(\"Pressure\")\nplt.plot(x, train_csv_breath_id_5.pressure.values, label=\"pressure\")\nplt.ylabel(\"pressure\/u_in\/u_out\")\nplt.plot(x, y1, label=\"u_in\")\nplt.plot(x, y2, label=\"u_out\")\nplt.legend()\nplt.legend()","13d46906":"display(train_csv.R.value_counts()), print(\"\"), display(train_csv.C.value_counts())","5a9402ec":"# for idx, group in train_csv.groupby(\"breath_id\"):\n#     assert group.R.nunique() == 1\n#     assert group.C.nunique() == 1\n#     assert np.all(group[[\"R\", \"C\"]].values == group[[\"R\",\"C\"]].iloc[0].values)\n#     assert group.time_step.max() < 3.0\n#     assert group.time_step.min() == 0\n\n# All true.","1bfe76dc":"train_csv.time_step.min(), train_csv.time_step.max()","81d8efc0":"train_csv.u_in.min(), train_csv.u_in.max()","17ecaa9a":"train_csv.info()","800bb83e":"train_csv.describe()","e0c0f674":"train_csv.u_in.hist()","88204c7f":"train_csv.u_out.hist()","23d78f37":"pd.plotting.scatter_matrix(train_csv.drop(columns=[\"id\", \"breath_id\", \"R\", \"C\"])[:320])","fa474134":"train_csv.pressure.hist()","022aa874":"test_csv = pd.read_csv(r\"..\/input\/ventilator-pressure-prediction\/test.csv\")","50ac138a":"test_csv","608fa9fa":"Notice how the orange line goes to 1 right when \"u_in\" goes to 0 meaning the inspiratory solenoid valve is closed. The exploratory solenoid valve is kept open all throughout this time and when the inspiratory solennoid valve is opened (opened to roughly just 5).","14971f4b":"These 2 are definitely correlated. When \"u_in\" is open and as it gradually closes (as it goes to 0), the u_out opens up. u_out opens up when u_in is 0 but also when it is open again. This trend of closing u_out while decreasing u_in, then gradually opening u_in till it plateaus while opening u_out could be something to be considered. ","c5162aaa":"```\nFiles\n\ntrain.csv - the training set\ntest.csv - the test set\nsample_submission.csv - a sample submission file in the correct format\n\nColumns\n\nid - globally-unique time step identifier across an entire file\nbreath_id - globally-unique time step for breaths\nR - lung attribute indicating how restricted the airway is (in cmH2O\/L\/S). Physically, this is the change in pressure per change in flow (air volume per time). Intuitively, one can imagine blowing up a balloon through a straw. We can change R by changing the diameter of the straw, with higher R being harder to blow.\nC - lung attribute indicating how compliant the lung is (in mL\/cmH2O). Physically, this is the change in volume per change in pressure. Intuitively, one can imagine the same balloon example. We can change C by changing the thickness of the balloon\u2019s latex, with higher C having thinner latex and easier to blow.\ntime_step - the actual time stamp.\nu_in - the control input for the inspiratory solenoid valve. Ranges from 0 to 100.\nu_out - the control input for the exploratory solenoid valve. Either 0 or 1.\npressure - the airway pressure measured in the respiratory circuit, measured in cmH2O.\n```","4d74247d":"What is time step measured in and is this even a useful variable? ","5400a1f0":"## Looking at a Single Breath ID","5ad65aa3":"R and C should be categorical variables not int64.","6265fe71":"Skewed right distribution with most u_in values being between 0 and 10. ","5d9ca1cf":"Most of the pressure values are around 5-10 and it's skewed right. There are some cases where the pressure reaches 50. ","b2a76b7a":"# Looking at Test CSV","ba59385d":"Every globally-unique Breath ID has exactly 80 rows.","00024f6f":"# Train CSV EDA","0776142e":"## ID and Breath ID","7cf8d0fc":"u_in does reach 100.0 at times.","6a7d7cb1":"## Sanity Checking a Few Things","3d991f3b":"# Setup","1c6992c5":"## Looking at R and C Values","b1081725":"Looks like within the train_csv, all observations for a Breath ID are in top down\/chronological order. And consequently, the \"id\" column would be too.","6d3c9d6d":"These conditions guarantee the following:\n\n1. Only 1 unique value for all R values for any given Breath ID (same for all C values). \n2. All R and C pairs are the same for any given Breath ID.\n3. The max time step is never above 3 and the min time step is always 0 for each Breath ID.","da246939":"These findings were checked with observation with Breath ID 10 and it seems that generally the u_in would escalate upwards steeply then curve downwards slowly at first, then plummet. It would plateau towards the bottom for a bit before gradually curving upwards (concaving down) and then plateauing. u_out would switch from 0 to 1 when u_in plummets to 0 (closing of the solenoid valve). u_out would stay opened for the duration of the breath (is it breath? I'm still bit a unsure!). Pressure would rapidly and steeply climb upwards and then oscillate (or curve downwards) before dropping near vertically at around the opening of u_out (which is also the closing of u_in). It then oscillates for a bit and stabilizes at a plateau. ","33288cbf":"# Moving back to Exploring the Entire Train CSV","83ce9bd3":"# Looking at Sample Submission","0be6e673":"One interesting thing I noticed about this is that the pressure changes (drops) during the steepest drop in u_in and slightly after the opening of u_out. The pressure then oscillates a little bit and begins to plateau much like the u_in value. ","85382b32":"Some Breath IDs do approach 3 seconds (slight variations on a per Breath ID basis). ","7f625d6c":"For the variable breath_id, there are 75450 unique values, however, the IDs themselves do not go from 1 to 75450. As you can see they end at 125749. I wonder: why is there a gap like that?"}}