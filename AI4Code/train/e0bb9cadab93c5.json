{"cell_type":{"c191484a":"code","0827fab8":"code","54fd7dee":"code","1180fef5":"code","06ba9f7f":"code","7dec71ac":"code","743e5ddb":"code","aff299d1":"code","67b2f0e0":"code","db4dffda":"code","db24324e":"code","eec806bf":"code","fade5f30":"code","00486c0b":"code","6f2f9f43":"code","b77bea40":"code","591df65e":"code","9bbba659":"code","8f4d1197":"code","0dbcc67b":"markdown","4291678a":"markdown"},"source":{"c191484a":"import pandas as pd\nimport numpy as np\nimport datetime\nimport os","0827fab8":"df = pd.read_csv('\/kaggle\/input\/delivery_orders_march.csv')\n\n# changing from epoch time to date strings\ndf['1st_deliver_attempt'] = df['1st_deliver_attempt'].apply(lambda x : datetime.datetime.fromtimestamp(x).strftime('%Y-%m-%d %H:%M:%S'))\ndf['pick'] = df['pick'].apply(lambda x : datetime.datetime.fromtimestamp(x).strftime('%Y-%m-%d %H:%M:%S'))\ndf['2nd_deliver_attempt'] = df['2nd_deliver_attempt'].apply(lambda x : datetime.datetime.fromtimestamp(x).strftime('%Y-%m-%d %H:%M:%S') if pd.notnull(x) else x)\n\n\n# Converting to datetime objects for all dates \ndf['1st_deliver_attempt'] = pd.to_datetime(df['1st_deliver_attempt'])\ndf['pick'] = pd.to_datetime(df['pick'])\ndf['2nd_deliver_attempt'] = pd.to_datetime(df['2nd_deliver_attempt'], errors ='coerce')\n\n\n# Creating Rows to track time difference between deliveries \ndf['1st_attempt'] = df['1st_deliver_attempt'] - df['pick']\ndf['1st_attempt'] = df['1st_attempt'].dt.days.astype(float)\ndf['2nd_attempt'] = df['2nd_deliver_attempt'] - df['1st_deliver_attempt']\ndf['2nd_attempt'] = df['2nd_attempt'].dt.days\n\n\n# Preprocessing addresses \ndf['buyeraddress'] = df['buyeraddress'].apply(lambda x : x.split(' ')[-1:]).apply(lambda x : ' '.join(x).lower())\ndf['selleraddress'] = df['selleraddress'].apply(lambda x : x.split(' ')[-1:]).apply(lambda x : ' '.join(x).lower())\n\n\n# Replacing 0's for NaN values\ndf['2nd_attempt'].fillna(0, inplace=True)\n\ndf.head()","54fd7dee":"df.info()","1180fef5":"df['is_late'] = [0 if attempt < 7 and attempt2 < 3 else 1 for (attempt, attempt2) in zip(df['1st_attempt'], df['2nd_attempt'])]","06ba9f7f":"df2 = df[['orderid', '1st_attempt', '2nd_attempt', 'buyeraddress', 'selleraddress']]","7dec71ac":"df2_1 = df2[(df2['buyeraddress'] == 'manila') & (df2['selleraddress'] == 'manila')]\ndf2_1['is_late'] = [0 if attempt<3 and attempt2<3 else 1 for (attempt,attempt2) in zip(df2_1['1st_attempt'], df2_1['2nd_attempt'])]\ndf2_1.head() # need to be combined","743e5ddb":"df2_2 = df2[(df2['buyeraddress'] == 'luzon') & (df2['selleraddress'] == 'manila')]\ndf2_2['is_late'] = [0 if attempt<5 and attempt2<3 else 1 for (attempt,attempt2) in zip(df2_2['1st_attempt'], df2_2['2nd_attempt'])]\ndf2_2.head() # needs to be combined","aff299d1":"df2_3 = df2[(df2['buyeraddress'] == 'manila') & (df2['selleraddress'] == 'luzon')]\ndf2_3['is_late'] = [0 if attempt<5 and attempt2<3 else 1 for (attempt,attempt2) in zip(df2_3['1st_attempt'], df2_3['2nd_attempt'])]\ndf2_3 # nothing for this condition","67b2f0e0":"df2_4 = df2[(df2['buyeraddress'] == 'luzon') & (df2['selleraddress'] == 'luzon')]\ndf2_4['is_late'] = [0 if attempt<5 and attempt2<3 else 1 for (attempt,attempt2) in zip(df2_4['1st_attempt'], df2_4['2nd_attempt'])]\ndf2_4 # needs to be combined","db4dffda":"df_partial = pd.concat([df2_1, df2_2, df2_4])\ndf_partial","db24324e":"df2['is_late'] = [0 if attempt < 7 and attempt2 < 3 else 1 for (attempt, attempt2) in zip(df2['1st_attempt'], df2['2nd_attempt'])]\ndf2 # Rest of the conditions","eec806bf":"df_full = pd.merge(df_partial, df2, on='orderid', how='outer')","fade5f30":"df_full","00486c0b":"df_full.is_late_x = df_full.is_late_x.fillna(df_full.is_late_y) # combining values\ndf_full = df_full[['orderid', 'is_late_x']] # taking the relevant information\ndf_full = df_full[['orderid', 'is_late_x']].rename(columns={'is_late_x' : 'is_late'})\ndf_full.is_late = df_full.is_late.astype('int')","6f2f9f43":"df_full","b77bea40":"df_full.info()","591df65e":"df_submission = df_full.copy()","9bbba659":"df_submission.to_csv('submission.csv', index=False)","8f4d1197":"df_submission.info()","0dbcc67b":"## Fitting conditions of being late deliveries","4291678a":"## Submission Part"}}