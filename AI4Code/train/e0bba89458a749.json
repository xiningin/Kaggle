{"cell_type":{"e67a9625":"code","ecb23e87":"code","b853a275":"code","322e847b":"code","9ed956cd":"code","0bc5a348":"code","0140b4cb":"code","a6bb09e5":"code","d5c02001":"code","a51f5a7c":"code","a279049e":"code","5aa319b8":"code","5fb463cc":"code","5e878ca3":"code","12e9228a":"markdown","05778993":"markdown","9e2d3a94":"markdown","d42cf1f1":"markdown","bfe2f072":"markdown","6e8f9cce":"markdown","a2968231":"markdown","ff89c98c":"markdown","00292bcb":"markdown","697d25e6":"markdown","a8f775d4":"markdown","560b5cc5":"markdown"},"source":{"e67a9625":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nfrom warnings import filterwarnings\nfrom sklearn.metrics import mean_squared_error as mse\nfilterwarnings(\"ignore\")","ecb23e87":"df = pd.read_csv(\"..\/input\/national-stock-exchange-time-series\/infy_stock.csv\",\n                 usecols=['Date', 'Close'], parse_dates=['Date'],index_col='Date')\nstock_price = pd.concat([df.Close[:'2015-06-12']\/2,df.Close['2015-06-15':]]) # adjustment\nstock_price = stock_price.squeeze()\nplt.figure(figsize=(17,5))\nplt.plot(stock_price)\nplt.title(\"Closing Price Adjusted\",fontsize=20)\nplt.show()","b853a275":"y_train = stock_price.iloc[:190]\ny_test = stock_price.iloc[190:]\n\ndef plot_pred(pred,title):\n    plt.figure(figsize=(17,5))\n    plt.plot(y_train,label='Train')\n    plt.plot(y_test,label='Actual')\n    plt.plot(pred,label='Predicted')\n    plt.ylabel(\"Stock prices\")\n    plt.title(title,fontsize=20)\n    plt.legend()\n    plt.show()\n","322e847b":"print(\"start:\",y_test.index.min())\nprint(\"end:\",y_test.index.max())","9ed956cd":"y_test.shape","0bc5a348":"from statsmodels.tsa.ar_model import AR\nar_model = AR(y_train).fit()\ny_ar = ar_model.predict(190,247)\ny_ar = y_ar.reset_index(drop=True)\ny_ar.index = y_test.index\nmse(y_ar,y_test)","0140b4cb":"plot_pred(y_ar,\"Autoregression\")","a6bb09e5":"from statsmodels.tsa.arima_model import ARMA\nma = ARMA(y_train, order=(0, 1)).fit()\ny_mam = ma.predict(190,247)\ny_mam.index = y_test.index\nmse(y_mam,y_test)\n","d5c02001":"plot_pred(y_mam,\"Moving Average(MA)\")","a51f5a7c":"arma = ARMA(y_train,order=(1,1)).fit()\ny_arma =arma.predict(190,247)\ny_arma.index = y_test.index\nmse(y_arma,y_test)\n","a279049e":"plot_pred(y_arma,\"ARMA Model\")","5aa319b8":"from statsmodels.tsa.arima_model import ARIMA\narima = ARIMA(y_train,order=(1,1,1)).fit(disp=False)\ny_arima = arima.predict(190,247,typ='levels')\ny_arima.index = y_test.index\nmse(y_arima,y_test)","5fb463cc":"plot_pred(y_arima,\"ARIMA Model\")","5e878ca3":"from statsmodels.tsa.statespace.sarimax import SARIMAX\nsarima = SARIMAX(y_train, order=(1, 1, 1), seasonal_order=(1, 1, 1, 45),mle_regression=True)\\\n.fit(disp=False)\ny_sarima = sarima.predict(190,247,typ='levels')\ny_sarima.index = y_test.index\nmse(y_sarima,y_test)\n# Here we can assume a max seasonality of 45 since the function requires atleat 4 seasons. ","12e9228a":"# Auto Regression\nThe prediction will be a linear combination of the past values. ","05778993":"# SARIMA","9e2d3a94":"# Introduction\n This is the second part of Time Series Stock Price Predictions. You find the part 1 [here](https:\/\/www.kaggle.com\/viswanathanc\/time-series-stock-price-predictions-part-1).. The First part contains simple models for time series prediction. This notebook contains some classical model for time series predicttions.","d42cf1f1":"Ref: https:\/\/machinelearningmastery.com\/time-series-forecasting-methods-in-python-cheat-sheet\/","bfe2f072":"Seasonal ARIMA is applicable to time series with trend and seasonality. The results are predicted as the combination of ARIMA model of the entire series and the seasonal component of the time series. Seasonality can be determined from Auto correlation Plots.","6e8f9cce":"# Moving Average\n  Moving Average is not the predictions based on the moving average of the previous values, instead it is the moving average of the residuals of the previous values.\n","a2968231":"# ARMA\nThis is a combination of Auto Regression and Moving Average.","ff89c98c":"The data to be used is the closing stock price of Infosys in NSE. EDA of the data was done in the 'Adjustment for Split-up' section in Part 1.","00292bcb":"# ARIMA\n  This is an extension of ARMA wherein the 'Integration' term finds the difference of the values in the series. This will reduce the trend. In ARIMA(1,1,1) we will predict the value based on the difference of the previous two values and the moving average of the same two values.\n  \n   But this unsuitable for Series with Seasonality. We have a seasonality in our data, but we do not have a trend. Lets construct an ARIMA model for this.","697d25e6":"So this is the broad view of univariate time series analysis of Stock Price.","a8f775d4":"We donot have a good prediction as there is no significant trend in the data!","560b5cc5":"  This also does not make a good prediction because there are only one seasonality (7 months) seen in the training data. We can better predict if we have four seasons in the training data."}}