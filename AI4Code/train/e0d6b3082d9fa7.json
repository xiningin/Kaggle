{"cell_type":{"c812eb15":"code","9a65f989":"code","dcd42d62":"code","c7d03a77":"code","2eec4c84":"code","1cd6321b":"code","4954513b":"code","26af1dde":"code","b9d85b7a":"code","002457ee":"code","38a11eb9":"code","1637ecf0":"code","ad03567a":"markdown","2d6cfc25":"markdown","dab0d683":"markdown","9a8a23ad":"markdown","2b9761af":"markdown","100f233c":"markdown"},"source":{"c812eb15":"# data structure manipulation libraries\nimport numpy as np\nimport pandas as pd\n\n# data visualization libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\n# data splitting\nfrom sklearn.model_selection import train_test_split\n\n# machine learning algorithms\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\n\nimport os\nprint(os.listdir('..\/input'))","9a65f989":"train = pd.read_csv('..\/input\/train.csv')\ntrain.head()","dcd42d62":"train.info()","c7d03a77":"train.describe()","2eec4c84":"# The number of empty values for each column\ncols = list(train)\nfor i in cols:\n    print(i, ' '*(20-len(i)), train[i].isnull().sum())","1cd6321b":"# Dropping irrelevant (for this demo) columns \n\nprint('Before: ', train.shape)\n\ncols_to_drop = ['Ticket', 'Name', 'Cabin', 'PassengerId']\ntrain = train.drop(cols_to_drop, axis=1)\n\nprint('After:  ', train.shape)","4954513b":"# fill empty embarkation values\ntrain['Embarked'] = train['Embarked'].fillna('C')\n\n# transforming text data into numerical values\ntrain['Sex'] = train['Sex'].apply(lambda x: 1 if x=='female' else 0)\ntrain['Embarked'] = train['Embarked'].map({'S': 0, 'Q': 1, 'C': 2}).astype(int)\ntrain.head()","26af1dde":"# fill empty ages of passengers according to the distribution of existing ages data\ndef fillAges(df):\n    count = df['Age'].isnull().sum()\n    avg = df['Age'].mean()\n    std = df['Age'].std()\n    random_age = np.random.randint(avg - std, avg + std, count)\n    df['Age'][np.isnan(df['Age'])] = random_age\n    return df\n\ntrain = fillAges(train)\n\n# def groupAges(df):\n#     df.loc[df['Age'] <= 18, 'Age'] = 0\n#     df.loc[(df['Age'] > 18) & (df['Age'] <= 36), 'Age'] = 1\n#     df.loc[(df['Age'] > 36) & (df['Age'] <= 54), 'Age'] = 2\n#     df.loc[(df['Age'] > 54) & (df['Age'] <= 72), 'Age'] = 3\n#     df.loc[df['Age'] > 72, 'Age'] = 4\n#     return df\n\n# train = groupAges(train)\n\ntrain.head()","b9d85b7a":"plt.figure(figsize=(10, 12))\nplt.title('Heatmap (Correlation between columns)')\ncolormap = plt.cm.RdBu\nsns.heatmap(train.astype(float).corr(), annot=True, cmap=colormap)","002457ee":"# An array of 'Survived' data of the passengers. We call these 'labels' of the passengers.\n# The label is what our model is going to predict\ny = train['Survived']\n\n# Passenger data without the 'Survived' data. We call these the 'features' of the passengers.\n# Our model will base its prediction of whether a passenger survived based on his or her features\nx = train.drop('Survived', axis=1)\n\n# Think of x_train as a sample exam, and y_train the answers to the sample exam.\n# Think of x_test as the final exam, and y_test the answers to the final exam.\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3)","38a11eb9":"# set up our training algorithm\nlr = LogisticRegression()\n\n# train our model using the 'sample exam'\nlr.fit(x_train, y_train)\n\n# score our model using the 'final exam'\nlr_score = round(lr.score(x_test, y_test) * 100, 2)\n\n# the score represents the percentage of the survival data our model predicts correctly\nprint(lr_score)","1637ecf0":"# Let's trying training our model using another algorithm\nsvc = SVC()\nsvc.fit(x_train, y_train)\n\nsvc_score = round(svc.score(x_test, y_test) * 100, 2)\nprint(svc_score)","ad03567a":"## A simple experiment\n\nTry uncommenting the code in the last cell of the data wrangling section and run all cells again. Does that change the performance of the algorithms?","2d6cfc25":"## Inspecting data\n\nLoad data into a data frame and some basic inspection.","dab0d683":"## Basic data visualization","9a8a23ad":"## Data wrangling\n\nCleaning the data before applying machine learning.","2b9761af":"## Machine learning\n\nBuild a couple of basic machine learning model using simple algorithms","100f233c":"## Library setup"}}