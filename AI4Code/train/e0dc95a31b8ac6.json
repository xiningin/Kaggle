{"cell_type":{"9a77534b":"code","2df1e950":"code","28fc5667":"code","da122d2b":"code","adecee4e":"code","e81dccaf":"code","ca976211":"code","dd7f89ee":"markdown","e3e8c5be":"markdown","c0007238":"markdown"},"source":{"9a77534b":"%matplotlib inline\nfrom glob import glob\nimport os, pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom skimage.io import imread\nimport seaborn as sns\nfrom matplotlib.collections import PatchCollection\nfrom matplotlib.patches import Rectangle\n# make the necessary conversion\nread_hu = lambda x: imread(x).astype(np.float32)-32768\ndef create_boxes(in_row):\n    box_list = []\n    for (start_x, start_y, end_x, end_y) in in_row['bbox']:\n        box_list += [Rectangle((start_x, start_y), \n                         np.abs(end_x-start_x),\n                         np.abs(end_y-start_y)\n                         )]\n    return box_list\nbase_img_dir = '..\/input\/minideeplesion\/'","2df1e950":"patient_df = pd.read_csv('..\/input\/DL_info.csv')\npatient_df['kaggle_path'] = patient_df.apply(lambda c_row: os.path.join(base_img_dir, \n                                                                        '{Patient_index:06d}_{Study_index:02d}_{Series_ID:02d}'.format(**c_row),\n                                                                        '{Key_slice_index:03d}.png'.format(**c_row)), 1)\n\nprint('Loaded', patient_df.shape[0], 'cases')\npatient_df['exists'] = patient_df['kaggle_path'].map(os.path.exists)\npatient_df = patient_df[patient_df['exists']].drop('exists', 1)\n# extact the bounding boxes\npatient_df['bbox'] = patient_df['Bounding_boxes'].map(lambda x: np.reshape([float(y) for y in x.split(',')], (-1, 4)))\npatient_df['norm_loc'] = patient_df['Normalized_lesion_location'].map(lambda x: np.reshape([float(y) for y in x.split(',')], (-1)))\npatient_df['Spacing_mm_px_'] = patient_df['Spacing_mm_px_'].map(lambda x: np.reshape([float(y) for y in x.split(',')], (-1)))\npatient_df['Lesion_diameters_Pixel_'] = patient_df['Lesion_diameters_Pixel_'].map(lambda x: np.reshape([float(y) for y in x.split(',')], (-1)))\npatient_df['Radius_x'] = patient_df.apply(lambda x: x['Lesion_diameters_Pixel_'][0]*x['Spacing_mm_px_'][0], 1)\nfor i, ax in enumerate('xyz'):\n    patient_df[f'{ax}_loc'] = patient_df['norm_loc'].map(lambda x: x[i])\nprint('Found', patient_df.shape[0], 'patients with images')\npatient_df.sample(3)","28fc5667":"sns.pairplot(hue='Patient_gender', data=patient_df[['Patient_age', 'Patient_gender', 'Key_slice_index', 'Radius_x']])","da122d2b":"freq_flyers_df = patient_df.groupby('Patient_index')[['Patient_age']].apply(\n    lambda x: pd.Series({'counts': x.shape[0], \n                         'Age_Range': np.max(x['Patient_age'])-np.min(x['Patient_age'])})).reset_index().sort_values('Age_Range', ascending = False)\nsns.pairplot(freq_flyers_df[['counts', 'Age_Range']])\nfreq_flyers_df.head(5)","adecee4e":"fig, m_axs = plt.subplots(5, 8, figsize = (25, 25))\n[c_ax.axis('off') for c_ax in m_axs.flatten()]\njoin_df = pd.merge(patient_df, freq_flyers_df.head(5))\nfor n_axs, (_, c_df) in zip(m_axs, join_df.groupby('Patient_index')):\n    _, t_row = next(c_df.iterrows())\n    n_axs[0].scatter(c_df['Patient_age'], c_df['Radius_x'])\n    n_axs[0].set_xlabel('Age')\n    n_axs[0].set_ylabel('Tumor Size (mm)')\n    n_axs[0].set_title('ID:{Patient_index}-SEX:{Patient_gender}'.format(**t_row))\n    n_axs[0].axis('on')\n    for c_ax, (_, c_row) in zip(n_axs[1:], c_df.sort_values('Study_index').iterrows()):\n        c_img = read_hu(c_row['kaggle_path'])\n        c_ax.imshow(c_img, vmin = -1200, vmax = 600, cmap = 'gray')\n        c_ax.add_collection(PatchCollection(create_boxes(c_row), alpha = 0.25, facecolor = 'red'))\n        c_ax.set_title('Age:{Patient_age:1.0f}'.format(**c_row))\n        c_ax.axis('off')\nfig.savefig('overview.png', dpi = 300)","e81dccaf":"join_df = pd.merge(patient_df, freq_flyers_df.head(15))\nax = sns.lmplot(x='Patient_age', y='Radius_x', ci=50,\n                sharex=False, sharey=False, x_jitter=0.5,\n                 col='Patient_index', col_wrap=5,\n                data = join_df)","ca976211":"?sns.factorplot","dd7f89ee":"# Draw Image and  Bounding Box\nHere we use basic code to draw the image and the bounding box. We use the Lung window for the CT to make the views as consistent as possible","e3e8c5be":"# Group the patient scans together","c0007238":"# Overall Statistics\nHere we try and look at more patients and the relationship between the lesion size and the age of the patient"}}