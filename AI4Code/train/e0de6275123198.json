{"cell_type":{"fb36543c":"code","0d846bfb":"code","654f3454":"code","5a997aaa":"code","4f375466":"code","324446a3":"code","642ad953":"code","5ace1a1d":"code","95b8178c":"code","97129b5f":"code","7802cc04":"code","4a76e346":"code","a9dee32f":"code","9f871eaa":"code","05f918b5":"code","3c1e06af":"code","b1be7d03":"code","1330be4f":"code","138e5ade":"code","c99cc605":"code","4d3d31c8":"code","1ddac677":"code","4204a4a5":"code","95870bf3":"code","b7b4d43a":"code","dfc629a4":"code","65ec13fc":"code","f874a933":"code","d4528396":"markdown","3ade4a6a":"markdown","2471c4d5":"markdown","4cd6924b":"markdown","f6d7c358":"markdown","20154398":"markdown","2d8ffd04":"markdown","ec9963eb":"markdown","ad120685":"markdown","938a89a0":"markdown","3b949b33":"markdown","b458ee20":"markdown","86e8cbd5":"markdown"},"source":{"fb36543c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot # plotly offline mode\ninit_notebook_mode(connected=True)\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport seaborn as sns\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","0d846bfb":"#read csv file\ndata = pd.read_csv(\"..\/input\/world-happiness-report-2019.csv\")","654f3454":"# get some informations about data\ndata.info()","5a997aaa":"data.head()","4f375466":"data.tail()","324446a3":"data.describe()","642ad953":"data.columns","5ace1a1d":"#i want to rename columns for easy coding, i prefer change the columns names but you can use the real names of columns\ndata.rename(columns={'Country (region)':'Country',\n                    'SD of Ladder':'SDOfLadder',\n                    'Positive affect':'PositiveAffect',\n                    'Negative affect':'NegativeAffect',\n                    'Social support':'SocialSupport',\n                    'Log of GDP\\nper capita':'GDPCapita',\n                    'Healthy life\\nexpectancy':'HealthyLife'},inplace=True)\n#new names of columns\ndata.columns","95b8178c":"# make the corrolation map of data\ndata.corr()","97129b5f":"#plot the correlation map\nfig,ax=plt.subplots(figsize=(12,6))\nsns.heatmap(data.corr(),annot=True,ax=ax,fmt='.1f')# annot= show numbers on squares, fmt= how many number comes after comma\nplt.show()\n# this correlation map gives the direct proportion between variables(columns) of data","7802cc04":"data.plot(subplots=True,grid=True,figsize=(15,15))\nplt.show()","4a76e346":"# list of countries\ndata","a9dee32f":"# make the map of unhappy countries\nmap_data = [go.Choropleth( \n           locations = data['Country'], #Sets the coordinates via location names\n           locationmode = 'country names',# Determines the set of locations used to match entries in `locations` to regions on the map.\n           z = data[\"Ladder\"], #Sets the color values\n           text = data['Country'],#Sets the text elements associated with each location.\n           colorbar = {'title':'Ladder Rank'})]\n\nlayout = dict(title = 'Unhappiest Level Of Countries', \n             geo = dict(showframe = True, \n                       projection = dict(type = 'equirectangular')))\n\nworld_map = go.Figure(data=map_data, layout=layout)\niplot(world_map)","9f871eaa":"data.GDPCapita.plot(kind=\"line\",grid=True,color=\"blue\",label=\"GDP problem\",linestyle=\":\",alpha=0.75,figsize=(7,7))\nplt.legend()\nplt.xlabel(\"Ladder Rank\")\nplt.show()","05f918b5":"gdpCapita = data.sort_values(by=\"GDPCapita\")\ngdpCapita","3c1e06af":"map_data = [go.Choropleth( \n           locations = data['Country'],\n           locationmode = 'country names',\n           z = data[\"GDPCapita\"], \n           text = data['Country'],\n           colorbar = {'title':'Ladder Rank'})]\n\nlayout = dict(title = 'GDP Problem Of Countries', \n             geo = dict(showframe = True, \n                       projection = dict(type = 'equirectangular')))\n\nworld_map = go.Figure(data=map_data, layout=layout)\niplot(world_map)","b1be7d03":"data.Freedom.plot(kind=\"line\",grid=True,color=\"red\",label=\"Freedom Problem\",linestyle=\":\",alpha=0.75,figsize=(7,7))\nplt.legend()\nplt.xlabel(\"Ladder Rank\")\nplt.show()","1330be4f":"freedom_data= data.sort_values(by=\"Freedom\")\nfreedom_data","138e5ade":"map_data = [go.Choropleth( \n           locations = data['Country'],\n           locationmode = 'country names',\n           z = data[\"Freedom\"], \n           text = data['Country'],\n           colorbar = {'title':'Ladder Rank'})]\n\nlayout = dict(title = 'Countries With Least Freedom', \n             geo = dict(showframe = True, \n                       projection = dict(type = 'equirectangular')))\n\nworld_map = go.Figure(data=map_data, layout=layout)\niplot(world_map)","c99cc605":"data.SocialSupport.plot(kind=\"line\",grid=True,color=\"green\",label=\"Social Support Problem\",linestyle=\":\",alpha=0.75,figsize=(7,7))\nplt.legend()\nplt.xlabel(\"Ladder Rank\")\nplt.show()","4d3d31c8":"# sort the data\nsocial_data = data.sort_values(by=\"SocialSupport\")\nsocial_data","1ddac677":"map_data = [go.Choropleth( \n           locations = data['Country'],\n           locationmode = 'country names',\n           z = data[\"SocialSupport\"], \n           text = data['Country'],\n           colorbar = {'title':'Ladder Rank'})]\n\nlayout = dict(title = 'Countries With Least Social Support', \n             geo = dict(showframe = True, \n                       projection = dict(type = 'equirectangular')))\n\nworld_map = go.Figure(data=map_data, layout=layout)\niplot(world_map)","4204a4a5":"data.Corruption.plot(kind=\"line\",grid=True,color=\"purple\",label=\"Corruption\",linestyle=\":\",alpha=0.75,figsize=(7,7))\nplt.legend()\nplt.xlabel(\"Ladder Rank\")\nplt.show()","95870bf3":"# sort the data\ncorruption_data = data.sort_values(by=\"Corruption\")\ncorruption_data","b7b4d43a":"map_data = [go.Choropleth( \n           locations = data['Country'],\n           locationmode = 'country names',\n           z = data[\"Corruption\"], \n           text = data['Country'],\n           colorbar = {'title':'Ladder Rank'})]\n\nlayout = dict(title = 'Corruption Level Of Countries', \n             geo = dict(showframe = True, \n                       projection = dict(type = 'equirectangular')))\n\nworld_map = go.Figure(data=map_data, layout=layout)\niplot(world_map)","dfc629a4":"data.HealthyLife.plot(kind=\"line\",grid=True,color=\"navy\",label=\"Health Problem\",linestyle=\":\",alpha=0.75,figsize=(7,7))\nplt.legend()\nplt.xlabel(\"Ladder Rank\")\nplt.show()","65ec13fc":"health_data=data.sort_values(by=\"HealthyLife\")\nhealth_data","f874a933":"map_data = [go.Choropleth( \n           locations = data['Country'],\n           locationmode = 'country names',\n           z = data[\"HealthyLife\"], \n           text = data['Country'],\n           colorbar = {'title':'Ladder Rank'})]\n\nlayout = dict(title = 'Health Problems Of Countries', \n             geo = dict(showframe = True, \n                       projection = dict(type = 'equirectangular')))\n\nworld_map = go.Figure(data=map_data, layout=layout)\niplot(world_map)","d4528396":"**\u0130n this kernel we will analize the happiness data of 155 countries.**","3ade4a6a":"Now, i want to explain relation between parameters of data and happiness levels of countries with graphics and maps.","2471c4d5":"# Relations Between Parameters And Happiness","4cd6924b":"**GDP per Capita**","f6d7c358":"Lets make a map of GDP levels of countries, this map means: the darker places have bad GDP level, the lighter countries have good GDP level.","20154398":"**Healthy Life(Health problems)**","2d8ffd04":"# Happiness Analysis Of countries","ec9963eb":"**\u0130t will be updated...**","ad120685":"**Corruption**","938a89a0":"**Social Support**","3b949b33":"**Unhappy Countries**","b458ee20":"**Freedom**","86e8cbd5":"Now, i sort the countries for GDP per capita to analize the relation between happiness and GDP."}}