{"cell_type":{"83238b35":"code","ac825823":"code","bf686347":"code","3b1657b9":"code","5ad72161":"code","a29f8c4e":"code","b7d492e2":"code","b31272e8":"code","24efd5fc":"code","b786d22d":"code","fe682fdb":"code","780658b5":"code","acdd6022":"code","f5f24666":"code","7737d0f1":"code","8d1b2038":"code","3e5c3426":"code","f7d59aff":"code","4b27fb4b":"code","6708f47c":"code","daa2b3e9":"code","982d6772":"code","bbeb13a1":"code","8e383929":"code","288b335a":"code","d0936c40":"code","2dc51a71":"code","8c30b4e3":"code","8f07a836":"code","95d01bbe":"code","29b116ab":"code","b45e9711":"code","6cf62a21":"code","9bcb6b99":"code","ffe4a8dc":"code","852cfa76":"code","6000c3b2":"code","d89cde9e":"code","1db4e5c7":"code","3e8838fa":"code","dabf1fd5":"code","39dd08b8":"code","18c78a87":"code","1987cbd7":"code","62fa0de7":"code","05322ab9":"code","8797875c":"code","fa02ded5":"code","10bcbc99":"code","973f2f5c":"code","470fc8db":"code","4bce4aa9":"code","787e6e08":"markdown","e0e061b4":"markdown","17f8ecf5":"markdown","72adcfdf":"markdown","0700b3c4":"markdown","f1f0ef6d":"markdown","39f17e45":"markdown","0c140af6":"markdown","e3617aee":"markdown","30c3c24a":"markdown","7f46ae36":"markdown","e3fd3f9f":"markdown","d7711481":"markdown","0d243593":"markdown"},"source":{"83238b35":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ac825823":"import matplotlib","bf686347":"df = pd.read_csv(\n    os.path.join(\"\/\", \"kaggle\", \"input\", \"airbnb-listings-reviews\", \"Airbnb Data\", \"Listings.csv\")\n)","3b1657b9":"df.isnull().sum()","5ad72161":"df1 = df.drop(labels = ['district','host_response_time', 'host_acceptance_rate', 'host_response_rate'], axis = 1)","a29f8c4e":"df1.head()","b7d492e2":"df1 = df1.dropna()","b31272e8":"df1.isnull().sum()","24efd5fc":"df1['city'].unique()","b786d22d":"df1[df1['host_location'] == 'Turkey']['city'].unique()","fe682fdb":"df1[df1['host_location'] == 'France']['city'].unique()","780658b5":"df1[df1['host_location'] == 'Australia']['city'].unique()","acdd6022":"dPar = df1[df1['city'] == 'Paris']","f5f24666":"dPar.head()","7737d0f1":"dPar.describe()","8d1b2038":"dPar.host_location.unique().shape","3e5c3426":"dPar.neighbourhood.unique()","f7d59aff":"nei_stats = dPar.groupby('neighbourhood')['neighbourhood'].agg('count').sort_values(ascending = False)\nnei_stats","4b27fb4b":"l = []\nfor i in nei_stats.index:\n    l.append(i)\nl","6708f47c":"fig = plt.figure(figsize = (17, 5))\nplt.xlabel('Districts')\nplt.ylabel('No. of Hosts')\nplt.title('Top districts with most BNB hosts')\nplt.bar(l[:9], nei_stats[:9], width = 0.6)\nplt.show()","daa2b3e9":"dict = {}\nfor i in l:\n    dict[i] = 0\n\nfor i in dPar.index:\n    dict[dPar['neighbourhood'][i]] += dPar['review_scores_rating'][i]\ndict","982d6772":"k = 0\nfor i in dict:\n    dict[i] = dict[i]\/(nei_stats[k])\n    k+=1\n    \ndict","bbeb13a1":"for i in dict:\n    dict[i] = round(dict[i], 3)","8e383929":"dict","288b335a":"fig = plt.figure(figsize = (17, 5))\nplt.ylim(92, 95)\nplt.xlabel('District')\nplt.ylabel('Average rating')\nplt.title('Average ratings of the districts with most BNB hosts')\nplt.bar(list(dict.keys())[:9], list(dict.values())[:9], width = 0.6, color = ['blue', 'red']*5)\nplt.show()","d0936c40":"dict1 = {}\nfor i in l:\n    dict1[i] = 0\n\nfor i in dPar.index:\n    dict1[dPar['neighbourhood'][i]] += dPar['review_scores_location'][i]\ndict1","2dc51a71":"k = 0\nfor i in dict1:\n    dict1[i] = dict1[i]\/(nei_stats[k])\n    k+=1\n    \ndict1","8c30b4e3":"sorted_dict = {}\nsorted_keys = sorted(dict1, key = dict1.get)\nsorted_keys","8f07a836":"for j in sorted_keys:\n    sorted_dict[j] = dict1[j]\nsorted_dict","95d01bbe":"fig = plt.figure(figsize = (17, 5))\nplt.ylim(9.1, 10)\nplt.xlabel('Districts')\nplt.ylabel('Average Location Rating')\nplt.title('Top 10 districts based on location')\nplt.bar(list(sorted_dict.keys())[-10:], list(sorted_dict.values())[-10:], width = 0.6, color = ['green', 'orange']*5)\nplt.show()","29b116ab":"dPar.describe()","b45e9711":"dPar['room_type'].unique()","6cf62a21":"room_stats = dPar.groupby('room_type')['room_type'].agg('count').sort_values(ascending = False)","9bcb6b99":"room_stats","ffe4a8dc":"l = [i for i in room_stats.index]\nl","852cfa76":"def func(x, room_stats):\n    #pct = (x*100)\/room_stats.sum()\n    return \"{:.1f}%\".format(x)\n    \nfig = plt.figure(figsize = (8, 8))\nplt.pie(room_stats,\n        labels = l,\n        autopct = lambda pct: func(pct, room_stats),\n        explode = [0.2, 0.1, 0.1, 0.2],\n        shadow = True)\nplt.title('Types of Hosts')\nplt.show()","6000c3b2":"dPar.head()","d89cde9e":"amen = dPar['amenities'].unique()\namen","1db4e5c7":"import ast\ndef Lis(x):\n    arr = ast.literal_eval(x)\n    return arr\n\nLis(\"['Hello']\")\n\ndPar['amen_as_list'] = dPar['amenities'].apply(Lis)","3e8838fa":"dPar['amen_as_list']","dabf1fd5":"amenities = {}\n\nfor i in dPar['amen_as_list'].index:\n    for j in range(len(dPar['amen_as_list'][i])):\n        if(dPar['amen_as_list'][i][j] not in amenities):\n            amenities[(dPar['amen_as_list'][i][j])] = 1\n        else:\n            amenities[(dPar['amen_as_list'][i][j])] += 1\namenities","39dd08b8":"#new_dict = [(key, value) for value, key in amenities.items()]\n#dict(new_dict)\nnew_amen = sorted(amenities.items(), key = lambda x: x[1])","18c78a87":"new_amen[-25:]","1987cbd7":"newDict = []\nfor i in range(15,25):\n    newDict.append(new_amen[-25:][i][0])\nnewDict","62fa0de7":"dnew = pd.DataFrame()\ndnew['scores'] = dPar['review_scores_rating']\ndnew","05322ab9":"for i in newDict:\n    dnew[i] = 0\n\ndnew","8797875c":"for i in dPar['amen_as_list'].index:\n    for j in range(len(dPar['amen_as_list'][i])):\n        if dPar['amen_as_list'][i][j] in newDict:\n            dnew[dPar['amen_as_list'][i][j]][i] = 1\n\ndnew","fa02ded5":"from sklearn.ensemble import ExtraTreesClassifier\netf = ExtraTreesClassifier()\n\nX = dnew.drop(labels = ['scores'], axis = 1)\ny = dnew['scores']\n\netf.fit(X, y)","10bcbc99":"feature_importance = etf.feature_importances_\nfeature_importance","973f2f5c":"for i in range(10):\n    feature_importance[i] = feature_importance[i]*100","470fc8db":"newDict[4] = 'Long term stays'","4bce4aa9":"fig = plt.figure(figsize=(17, 5))\nplt.ylim(6,12)\nplt.bar(newDict, feature_importance)\nplt.xlabel('Amenities')\nplt.ylabel('Contributing factor to a good score')\nplt.title('Ameninties')\nplt.show()","787e6e08":"Sorting basis the highest number of AirBNB hosts","e0e061b4":"## Top 10 districts based on Location","17f8ecf5":"Amenities most commonly found at Hosts' locations","72adcfdf":"## Average ratings of the BNBs' Distirict wise ","0700b3c4":"there does seem to be some inconsistent data over here. Apart from Paris, none of the othe cities present in the above snippet of code are located in France. Thus we might have to ignore the 'host_location' column or we may drop it later","f1f0ef6d":"Now dividing the data city wise","39f17e45":"## Types of BNB hosts","0c140af6":"Filling the new data of amentities","e3617aee":"too many values in district are NAN\/Null, so lets drop this column","30c3c24a":"converting the string value to list","7f46ae36":"# AirBNB Paris Data","e3fd3f9f":"### Getting Paris data","d7711481":"## Factor importance of amenities for a good rating","0d243593":"there might be different amenities available at different BNB host locations. So lets see just the importance of 10 most commonly\nfound amenities"}}