{"cell_type":{"faf8180a":"code","37ff2fb1":"code","8295a37d":"code","3ad95ca6":"code","764d7501":"code","fa51eacb":"code","8b1fa129":"code","88dfbcee":"code","2031822a":"code","b6cefaca":"code","800208d1":"code","fc1f7bdc":"code","7f7546aa":"code","8bde8d3b":"code","af7e8168":"code","99ace185":"code","18f689db":"code","e92d286b":"code","dcdf46e9":"code","d7ea1acb":"code","34ea9bf4":"code","32908c08":"code","200b531a":"code","5292b79a":"code","0ec828f4":"code","ab2fa15a":"code","7a173c90":"code","307d7e9e":"code","f8c6c56c":"code","5de7c1cb":"markdown","5915f62b":"markdown","4b5b54a6":"markdown","db22519c":"markdown","e7f6c59d":"markdown","f5a860ae":"markdown","ac2468df":"markdown","356b5a46":"markdown","cf78155a":"markdown","aa46d338":"markdown","b237591b":"markdown","6f9939f3":"markdown","a54c2ac3":"markdown","4425595c":"markdown","db42596b":"markdown","a584320f":"markdown","fc33ef4a":"markdown","b8dc7323":"markdown","540fd846":"markdown","7669161f":"markdown","b388f181":"markdown","ff34d1f7":"markdown","09619db8":"markdown","06edd3a7":"markdown","c468a13e":"markdown"},"source":{"faf8180a":"from transformers import BertForSequenceClassification, BertTokenizer\nimport torch\n\n#initialise our model and tokenizer\ntokenizer= BertTokenizer.from_pretrained('ProsusAI\/finbert')\nmodel = BertForSequenceClassification.from_pretrained('ProsusAI\/finbert')\n\n# we will place the porcessing our input text into a function for easier prediction later\ndef sentiment(tokens):\n    # get output logits from the model\n    output = model(**tokens)\n    # convert to probabilities\n    probs = torch.nn.functional.softmax(output[0],dim=-1)\n    # we will return the probability tensor ( we will not need argmax until later)\n    return probs","37ff2fb1":"txt = \"\"\"\nI would like to get your all  thoughts on the bond yield increase this week.  I am not worried about the market downturn but the sudden increase in yields. On 2\/16 the 10 year bonds yields increased by almost  9 percent and on 2\/19 the yield increased by almost 5 percent.\n\nKey Points from the CNBC Article:\n\n* **The \u201ctaper tantrum\u201d in 2013 was a sudden spike in Treasury yields due to market panic after the Federal Reserve announced that it would begin tapering its quantitative easing program.**\n* **Major central banks around the world have cut interest rates to historic lows and launched unprecedented quantities of asset purchases in a bid to shore up the economy throughout the pandemic.**\n* **However, the recent rise in yields suggests that some investors are starting to anticipate a tightening of policy sooner than anticipated to accommodate a potential rise in inflation.**\n\nThe recent rise in bond yields and U.S. inflation expectations has some investors wary that a repeat of the 2013 \u201ctaper tantrum\u201d could be on the horizon.\n\nThe benchmark U.S. 10-year Treasury note climbed above 1.3% for the first time since February 2020 earlier this week, while the 30-year bond also hit its highest level for a year. Yields move inversely to bond prices.\n\nYields tend to rise in lockstep with inflation expectations, which have reached their highest levels in a decade in the U.S., powered by increased prospects of a large fiscal stimulus package, progress on vaccine rollouts and pent-up consumer demand.\n\nThe \u201ctaper tantrum\u201d in 2013 was a sudden spike in Treasury yields due to market panic after the Federal Reserve announced that it would begin tapering its quantitative easing program.\n\nMajor central banks around the world have cut interest rates to historic lows and launched unprecedented quantities of asset purchases in a bid to shore up the economy throughout the pandemic. The Fed and others have maintained supportive tones in recent policy meetings, vowing to keep financial conditions loose as the global economy looks to emerge from the Covid-19 pandemic.\n\nHowever, the recent rise in yields suggests that some investors are starting to anticipate a tightening of policy sooner than anticipated to accommodate a potential rise in inflation.\n\nWith central bank support removed, bonds usually fall in price which sends yields higher. This can also spill over into stock markets as higher interest rates means more debt servicing for firms, causing traders to reassess the investing environment.\n\n\u201cThe supportive stance from policymakers will likely remain in place until the vaccines have paved a way to some return to normality,\u201d said Shane Balkham, chief investment officer at Beaufort Investment, in a research note this week.\n\n\u201cHowever, there will be a risk of another \u2018taper tantrum\u2019 similar to the one we witnessed in 2013, and this is our main focus for 2021,\u201d Balkham projected, should policymakers begin to unwind this stimulus.\n\nLong-term bond yields in Japan and Europe followed U.S. Treasurys higher toward the end of the week as bondholders shifted their portfolios.\n\n\u201cThe fear is that these assets are priced to perfection when the ECB and Fed might eventually taper,\u201d said Sebastien Galy, senior macro strategist at Nordea Asset Management, in a research note entitled \u201cLittle taper tantrum.\u201d\n\n\u201cThe odds of tapering are helped in the United States by better retail sales after four months of disappointment and the expectation of large issuance from the $1.9 trillion fiscal package.\u201d\n\nGaly suggested the Fed would likely extend the duration on its asset purchases, moderating the upward momentum in inflation.\n\n\u201cEquity markets have reacted negatively to higher yield as it offers an alternative to the dividend yield and a higher discount to long-term cash flows, making them focus more on medium-term growth such as cyclicals\u201d he said. Cyclicals are stocks whose performance tends to align with economic cycles.\n\nGaly expects this process to be more marked in the second half of the year when economic growth picks up, increasing the potential for tapering.\n\n## Tapering in the U.S., but not Europe\n\nAllianz CEO Oliver B\u00e4te told CNBC on Friday that there was a geographical divergence in how the German insurer is thinking about the prospect of interest rate hikes.\n\n\u201cOne is Europe, where we continue to have financial repression, where the ECB continues to buy up to the max in order to minimize spreads between the north and the south \u2014 the strong balance sheets and the weak ones \u2014 and at some point somebody will have to pay the price for that, but in the short term I don\u2019t see any spike in interest rates,\u201d B\u00e4te said, adding that the situation is different stateside.\n\n\u201cBecause of the massive programs that have happened, the stimulus that is happening, the dollar being the world\u2019s reserve currency, there is clearly a trend to stoke inflation and it is going to come. Again, I don\u2019t know when and how, but the interest rates have been steepening and they should be steepening further.\u201d\n\n## Rising yields a \u2018normal feature\u2019\n\nHowever, not all analysts are convinced that the rise in bond yields is material for markets. In a note Friday, Barclays Head of European Equity Strategy Emmanuel Cau suggested that rising bond yields were overdue, as they had been lagging the improving macroeconomic outlook for the second half of 2021, and said they were a \u201cnormal feature\u201d of economic recovery.\n\n\u201cWith the key drivers of inflation pointing up, the prospect of even more fiscal stimulus in the U.S. and pent up demand propelled by high excess savings, it seems right for bond yields to catch-up with other more advanced reflation trades,\u201d Cau said, adding that central banks remain \u201cfirmly on hold\u201d given the balance of risks.\n\nHe argued that the steepening yield curve is \u201ctypical at the early stages of the cycle,\u201d and that so long as vaccine rollouts are successful, growth continues to tick upward and central banks remain cautious, reflationary moves across asset classes look \u201cjustified\u201d and equities should be able to withstand higher rates.\n\n\u201cOf course, after the strong move of the last few weeks, equities could mark a pause as many sectors that have rallied with yields look overbought, like commodities and banks,\u201d Cau said.\n\n\u201cBut at this stage, we think rising yields are more a confirmation of the equity bull market than a threat, so dips should continue to be bought.\u201d\n\"\"\"\n\ntokens = tokenizer.encode_plus(txt, add_special_tokens=False)\nlen(tokens['input_ids'])\n","8295a37d":"print(tokens['input_ids'])","3ad95ca6":"type(tokens['input_ids'])","764d7501":"input_ids= tokens['input_ids']\nattention_mask = tokens['attention_mask']","fa51eacb":"input_ids[16:32]","8b1fa129":"# define our starting position (0) and window size (number of tokens in each chunk)\nstart = 0\nwindow_size = 512\n\n# get the total length of our tokens\ntotal_len = len(input_ids)\n\n# initialize condition for our while loop to run\nloop = True\n\n# loop through and print out start\/end positions\nwhile loop:\n    # the end position is simply the start + window_size\n    end = start + window_size\n    # if the end position is greater than the total length, make this our final iteration\n    if end >= total_len:\n        loop = False\n        # and change our endpoint to the final token position\n        end = total_len\n    print(\"Start = {}\".format(start))\n    print(\"End = {}\".format(end))\n    # we need to move the window to the next 512 tokens\n    start = end","88dfbcee":"# initialize probabilities list\nprobs_list = []\n\nstart = 0\nwindow_size = 510 # we take 2 off here so that we can fit in out [CLS] and [SEP token ]\n\nloop= True\n\nwhile loop:\n    end = start + window_size\n    if end >= total_len:\n        loop = False\n        end= total_len\n        \n    # (1) extract window from input_ids and attention_mask\n    input_ids_chunk = input_ids[start:end]\n    attention_mask_chunk = attention_mask[start:end]\n    # (2) add [CLS] and [SEP]\n    input_ids_chunk = [101] + input_ids_chunk + [102]\n    attention_mask_chunk= [1] + attention_mask_chunk + [1]\n    # (3) add padding upto window_size + 2 (512) tokens\n    input_ids_chunk += [0]*(window_size - len(input_ids_chunk) + 2)\n    attention_mask_chunk += [0] * (window_size - len(attention_mask_chunk) + 2)\n    # (4) format into pytorch tensors dictionary\n    input_dict = {\n        'input_ids': torch.Tensor([input_ids_chunk]).long(),\n        'attention_mask': torch.Tensor([attention_mask_chunk]).int()\n    }\n    # (5)  make logits prediction\n    outputs= model(**input_dict)\n    # (6) calculate softmax and append to list\n    probs = torch.nn.functional.softmax(outputs[0],dim=-1)\n    probs_list.append(probs)\n    \n    start= end\n\n# let's view the probabilities given\nprobs_list","2031822a":"stacks = torch.stack(probs_list)\nstacks","b6cefaca":"shape= stacks.shape\nshape","800208d1":"shape[0], shape[2]","fc1f7bdc":"# stacks.resize_(shape[0],shape[2])","7f7546aa":"with torch.no_grad():\n    # we must include our stacks operation in here too\n    stacks = torch.stack(probs_list)\n    # now resize\n    stacks = stacks.resize_(stacks.shape[0], stacks.shape[2])\n    # finally, we can calculate the mean value for each sentiment class\n    mean= stacks.mean(dim=0)\n    \nmean\n    \n    ","8bde8d3b":"torch.argmax(mean).item()","af7e8168":"from transformers import BertForSequenceClassification, BertTokenizer\ntokernizer = BertTokenizer.from_pretrained('ProsusAI\/finbert')\nmodel = BertForSequenceClassification.from_pretrained('ProsusAI\/finbert')","99ace185":"txt = \"\"\"\nI would like to get your all  thoughts on the bond yield increase this week.  I am not worried about the market downturn but the sudden increase in yields. On 2\/16 the 10 year bonds yields increased by almost  9 percent and on 2\/19 the yield increased by almost 5 percent.\n\nKey Points from the CNBC Article:\n\n* **The \u201ctaper tantrum\u201d in 2013 was a sudden spike in Treasury yields due to market panic after the Federal Reserve announced that it would begin tapering its quantitative easing program.**\n* **Major central banks around the world have cut interest rates to historic lows and launched unprecedented quantities of asset purchases in a bid to shore up the economy throughout the pandemic.**\n* **However, the recent rise in yields suggests that some investors are starting to anticipate a tightening of policy sooner than anticipated to accommodate a potential rise in inflation.**\n\nThe recent rise in bond yields and U.S. inflation expectations has some investors wary that a repeat of the 2013 \u201ctaper tantrum\u201d could be on the horizon.\n\nThe benchmark U.S. 10-year Treasury note climbed above 1.3% for the first time since February 2020 earlier this week, while the 30-year bond also hit its highest level for a year. Yields move inversely to bond prices.\n\nYields tend to rise in lockstep with inflation expectations, which have reached their highest levels in a decade in the U.S., powered by increased prospects of a large fiscal stimulus package, progress on vaccine rollouts and pent-up consumer demand.\n\nThe \u201ctaper tantrum\u201d in 2013 was a sudden spike in Treasury yields due to market panic after the Federal Reserve announced that it would begin tapering its quantitative easing program.\n\nMajor central banks around the world have cut interest rates to historic lows and launched unprecedented quantities of asset purchases in a bid to shore up the economy throughout the pandemic. The Fed and others have maintained supportive tones in recent policy meetings, vowing to keep financial conditions loose as the global economy looks to emerge from the Covid-19 pandemic.\n\nHowever, the recent rise in yields suggests that some investors are starting to anticipate a tightening of policy sooner than anticipated to accommodate a potential rise in inflation.\n\nWith central bank support removed, bonds usually fall in price which sends yields higher. This can also spill over into stock markets as higher interest rates means more debt servicing for firms, causing traders to reassess the investing environment.\n\n\u201cThe supportive stance from policymakers will likely remain in place until the vaccines have paved a way to some return to normality,\u201d said Shane Balkham, chief investment officer at Beaufort Investment, in a research note this week.\n\n\u201cHowever, there will be a risk of another \u2018taper tantrum\u2019 similar to the one we witnessed in 2013, and this is our main focus for 2021,\u201d Balkham projected, should policymakers begin to unwind this stimulus.\n\nLong-term bond yields in Japan and Europe followed U.S. Treasurys higher toward the end of the week as bondholders shifted their portfolios.\n\n\u201cThe fear is that these assets are priced to perfection when the ECB and Fed might eventually taper,\u201d said Sebastien Galy, senior macro strategist at Nordea Asset Management, in a research note entitled \u201cLittle taper tantrum.\u201d\n\n\u201cThe odds of tapering are helped in the United States by better retail sales after four months of disappointment and the expectation of large issuance from the $1.9 trillion fiscal package.\u201d\n\nGaly suggested the Fed would likely extend the duration on its asset purchases, moderating the upward momentum in inflation.\n\n\u201cEquity markets have reacted negatively to higher yield as it offers an alternative to the dividend yield and a higher discount to long-term cash flows, making them focus more on medium-term growth such as cyclicals\u201d he said. Cyclicals are stocks whose performance tends to align with economic cycles.\n\nGaly expects this process to be more marked in the second half of the year when economic growth picks up, increasing the potential for tapering.\n\n## Tapering in the U.S., but not Europe\n\nAllianz CEO Oliver B\u00e4te told CNBC on Friday that there was a geographical divergence in how the German insurer is thinking about the prospect of interest rate hikes.\n\n\u201cOne is Europe, where we continue to have financial repression, where the ECB continues to buy up to the max in order to minimize spreads between the north and the south \u2014 the strong balance sheets and the weak ones \u2014 and at some point somebody will have to pay the price for that, but in the short term I don\u2019t see any spike in interest rates,\u201d B\u00e4te said, adding that the situation is different stateside.\n\n\u201cBecause of the massive programs that have happened, the stimulus that is happening, the dollar being the world\u2019s reserve currency, there is clearly a trend to stoke inflation and it is going to come. Again, I don\u2019t know when and how, but the interest rates have been steepening and they should be steepening further.\u201d\n\n## Rising yields a \u2018normal feature\u2019\n\nHowever, not all analysts are convinced that the rise in bond yields is material for markets. In a note Friday, Barclays Head of European Equity Strategy Emmanuel Cau suggested that rising bond yields were overdue, as they had been lagging the improving macroeconomic outlook for the second half of 2021, and said they were a \u201cnormal feature\u201d of economic recovery.\n\n\u201cWith the key drivers of inflation pointing up, the prospect of even more fiscal stimulus in the U.S. and pent up demand propelled by high excess savings, it seems right for bond yields to catch-up with other more advanced reflation trades,\u201d Cau said, adding that central banks remain \u201cfirmly on hold\u201d given the balance of risks.\n\nHe argued that the steepening yield curve is \u201ctypical at the early stages of the cycle,\u201d and that so long as vaccine rollouts are successful, growth continues to tick upward and central banks remain cautious, reflationary moves across asset classes look \u201cjustified\u201d and equities should be able to withstand higher rates.\n\n\u201cOf course, after the strong move of the last few weeks, equities could mark a pause as many sectors that have rallied with yields look overbought, like commodities and banks,\u201d Cau said.\n\n\u201cBut at this stage, we think rising yields are more a confirmation of the equity bull market than a threat, so dips should continue to be bought.\u201d\n\"\"\"","18f689db":"tokens= tokenizer.encode_plus(txt, add_special_tokens=False, return_tensors='pt')\nprint(len(tokens['input_ids'][0]))\ntokens","e92d286b":"a= torch.arange(10)\na","dcdf46e9":"torch.split(a,4)","d7ea1acb":"input_id_chunks = tokens['input_ids'][0].split(510)\nmask_chunks = tokens['attention_mask'][0].split(510)","34ea9bf4":"input_id_chunks","32908c08":"a= torch.cat([torch.Tensor([101]),a,torch.Tensor([102])])\na","200b531a":"padding_len = 20 - a.shape[0]\npadding_len","5292b79a":"if padding_len > 0:\n    a= torch.cat([a,torch.Tensor([0]* padding_len)])\na","0ec828f4":"# define target chunksize\nchunksize = 512\n\n# split into chunks of 510 tokens, we also convert to list (default is tuple which is immutable)\ninput_id_chunks = list(tokens['input_ids'][0].split(chunksize-2))\nmask_chunks = list(tokens['attention_mask'][0].split(chunksize - 2))\n\n# loop through each chunk\nfor i in range(len(input_id_chunks)):\n    # add CLS and SEP tokens to input IDs\n    input_id_chunks[i] = torch.cat([\n        torch.tensor([101]), input_id_chunks[i], torch.tensor([102])\n    ])\n    # add attention takes to attention mask\n    mask_chunks[i]= torch.cat([torch.tensor([1]),mask_chunks[i], torch.tensor([1])])\n    # get required padding length\n    pad_len = chunksize - input_id_chunks[i].shape[0]\n    \n    # check if tensor length satisfies required chunk size\n    if pad_len>0:\n    # check if tensor length is more than 0, we must add padding \n        input_id_chunks[i]= torch.cat([input_id_chunks[i],torch.Tensor([0]*pad_len)])\n        mask_chunks[i] = torch.cat([mask_chunks[i],torch.Tensor([0]*pad_len)])\n    \n# check length of each tensor\nfor chunk in input_id_chunks:\n    print(len(chunk))\n# print final chunk so we can see 101, 102, and 0 (PAD) tokens are all correctly placed\nchunk","ab2fa15a":"input_ids= torch.stack(input_id_chunks)\nattention_mask= torch.stack(mask_chunks)\n\ninput_dict = {\n    'input_ids': input_ids.long(),\n    'attention_mask': attention_mask.int()\n}\ninput_dict","7a173c90":"input_ids.shape, attention_mask.shape","307d7e9e":"outputs = model(**input_dict)\nprobs = torch.nn.functional.softmax(outputs[0],dim=-1)\nprobs = probs.mean(dim=0)\nprobs","f8c6c56c":"torch.argmax(probs).item()","5de7c1cb":"From here we will calculate the mean score of each column (positive, negative, and neutral sentiment respectively) using `mean(dim=0)`. But before we do that we must reshape our tensor into a *3x3* shape - it is currently a 3x1x3:","5915f62b":"It's that easy! We're almost there now, but we still need to add padding to our tensors to push them upto a length of *512*, which should only be required for the final chunk. To do this we will build an if-statement that checks if the tensor length requires padding, and if so add the correct amount of padding which will be something like `required_len = 512 - tensor_len`. Again, let's test it on tensor `a` first:","4b5b54a6":"# Window Method in PyTorch\n\nIn the previous section we built a method for calculating the average sentiment for long pieces of text by breaking the text up into *windows* and calculating the sentiment for each window individually.\n\nOur approach in the last section was a quick-and-dirty solution. Here, we will work on improving this process and implementing it solely using PyTorch functions to improve efficiency.\n\nThe first thing we will do is import modules and initialize our model and tokenizer.","db22519c":"When we try to resize our tensor, we will receive this `RuntimeError` telling us that we cannot resize variables that require *grad*. What this is referring to is the *gradient updates* of our model tensors during training. PyTorch cannot calculate gradients for tensors that have been reshaped. Fortunately, we don't actually want to use this tensor during any training, so we can use the `torch.no_grad()` namespace to tell PyTorch that we do **not** want to calculate any gradients.","e7f6c59d":"`0: negative , 1: neutral , 2: positive `","f5a860ae":"<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h2 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:black; border:0; color:lightgreen' role=\"tab\" aria-controls=\"home\"><center>Thank You \ud83d\ude0a <\/center><\/h2>\n","ac2468df":"We can now access slices of these lists like so:","356b5a46":"This time, because we are using PyTorch, we will specify `return_tensors='pt'` when encoding our input text.","cf78155a":"Now let's get to how we apply sentiment to longer pieces of text. There are two approaches that we cover in these notebooks:\n\n* Using neural text summarization to shorten the text to below 512 tokens.\n\n* Iterating through the text using a *window* and calculate the average article sentiment.\n\nIn this notebook we will be using the second approach. The window in question will be a subsection of our tokenized text, of length `512`. First, let's define an example and tokenize it.","aa46d338":"It all looks good! Now the final step of placing our tensors back into the dictionary style format we had before.","b237591b":"We will be using this to break our lists into smaller sections, let's test it in a simple loop.","6f9939f3":"Each section has been assign varying levels of sentiment. The first and section sections both score *negatively* (index *1*) and the final sections scores *positively* (index *0*). To calculate the average sentiment across the full text, we will merge these tensors using the `stack` method:","a54c2ac3":"Now we have a set of tensors where each tensor contains **1345** tokens. We will use a similiar approach to what we used before where we will pull out a length of **510** tokens (or less), add the CLS and SEP tokens, then add PAD tokens when needed. To create these tensors of length **510** we  need to use the `torch.split` method.","4425595c":"We will be using the same text example as we did previously.","db42596b":"We can reshape our tensor dimensions using the `resize_` method, and use dimensions `0` and `2` of our current tensor shape:","a584320f":"This logic works for shifting our window across the full length of input IDs, so now we can modify it to iterately predict sentiment for each window. There will be a few added steps for us to get this to work:\n\n1. Extract the window from `input_ids` and `attention_mask`.\n\n2. Add the start of sequence token `[CLS]`\/`101` and seperator token `[SEP]`\/`102`.\n\n3. Add padding (only applicable to final batch).\n\n4. Format into dictionary containing PyTorch tensors.\n\n5. Make logits predictions with the model.\n\n6. Calculate softmax and append softmax vector to a list `probs_list`.","fc33ef4a":"**`-------------------------------------------------------------------------------------------------------------------`**","b8dc7323":"Our final sentiment prediction shows a reasonable balanced sentiment of both positive and negative classes, with a slightly stronger negative sentiment score overall. We can take the `argmax` too to specify our winning class.","540fd846":"<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h2 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:black; border:0; color:lightgreen' role=\"tab\" aria-controls=\"home\"><center>Long Text Sentiment Classification BERT Windowing<\/center><\/h2>\n","7669161f":"# Long Text Sentiment\n\nSo far, we have restricted the length of the text being fed into our models. Bert in particular is restricted to consuming 512 tokens per sample. For many use-cases, this is most likely not a problem - but in some cases it can be.\n\nIf we take the example of Reddit posts on the *\/r\/investing* subreddit, many of the more important posts are **DD** (due-diligence), which often consists of deep dives into why the author thinks a stock is a good investment or not. On these longer pieces of text, the actual sentiment from the author may not be clear from the first 512 tokens. We need to consider the full post.\n\nBefore working through the logic that allows us to consider the full post, let's import and define everything we need to make a prediction on a single chunk of text (using much of what we covered in the last section).","b388f181":"Now we apply `split` to our *input IDs* and *attention mask* tensors. Note that we must access the first element of each tensor because they are shaped like a list within a list (you can see this by comparing the number of square brackets between tensor `a` above, and the tensors shown when outputting `tokens` above.","ff34d1f7":"First, we break our tokenized dictionary into `input_ids` and `attention_mask` variables.","09619db8":"Now let's use the same logic with our `tokens` tensors.","06edd3a7":"To add our CLS (**101**) and SEP (**102**) tokens, we can use the `torch.cat` method. This method takes a *list* of tensors and con**cat**enates them. Let's try it on our example tensor `a` first:","c468a13e":"If we tokenize this longer piece of text we get a total of **1345** tokens, far too many to fit into our BERT model containing a maximum limit of 512 tokens. We will need to split this text into chunks of 512 tokens at a time, and calculate our sentiment probabilities for each chunk seperately.\n\nBecause we are taking this slightly different approach, we have encoded our tokens using a different set of parameters to what we have used before. This time, we:\n\n* Avoided adding special tokens `add_special_tokens=False` because this will add *[CLS]* and *[SEP]* tokens to the start and end of the full tokenized tensor of length **1345**, we will instead add them manually later.\n\n* We will not specify `max_length`, `truncation`, or `padding` parameters (as we do not use any of them here).\n\n* We will return standard Python *lists* rather than tensors by not specifying `return_tensors` (it will return lists by default). This will make the following logic steps easier to follow - but we will rewrite them using PyTorch code in the next section."}}