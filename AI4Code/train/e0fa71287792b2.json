{"cell_type":{"3caebc1d":"code","ae7abbea":"code","4431579b":"code","4df3a7f7":"code","e823ea80":"code","1808a202":"code","f3896ce6":"code","31f2b6ce":"code","d1742923":"code","d8069eb3":"code","07a6f624":"code","7b9395d2":"code","31382143":"code","a1d7b858":"code","50e439be":"code","5d5f7dca":"code","7becb1fb":"code","1ae6743f":"code","115bee02":"code","dccda8a9":"code","6dc4cbfc":"code","076db6ce":"code","5e627e6f":"code","415b3fef":"code","0ff09c6f":"code","4dd4346e":"code","90bfb121":"code","e35b73d9":"code","113019ee":"code","d147edd3":"code","d73cabda":"code","5bff0935":"code","37307848":"code","41a7babd":"code","64fc0282":"code","3d1e4f89":"code","45a0a61a":"code","a89ed5a2":"code","2bb22e6b":"code","4127110c":"code","608a5441":"code","619f8289":"code","9c952bc4":"code","7f3cb932":"code","f0cbcdf8":"code","02bdcdb1":"code","f8b860bb":"code","69a1bced":"code","bc2c24e0":"code","10e1d253":"code","b4c5ef11":"code","0812bc33":"code","e3bad521":"code","15f09961":"code","4ae0631a":"code","67e46ca2":"code","37c1ff0a":"code","3157c4db":"code","915862ee":"code","da092c9b":"code","66ebccdc":"code","3d5ac3ed":"code","a7e7f280":"code","20e60959":"code","12678405":"code","138727c7":"code","0b317ad3":"code","fbe2a7b7":"code","d29af477":"code","c34299d8":"code","075771cc":"code","2cd483f1":"code","e85e97ba":"code","f970d32a":"code","daed4ad6":"code","c262b560":"code","65673aba":"code","a0a1f119":"code","ec0dbf47":"code","037c751f":"code","901b8cd0":"code","eee8ab5d":"code","abea4251":"markdown"},"source":{"3caebc1d":"#PROBLEM STATEMENT\n\n#1)Find best jobs by Salary, Company Rating and Location\n#2)Is there correlation between rating and salary offered by the company ?(in Python)\n#3)Show correlation between various features using a heatmap.\n#4)Find the best jobs by salary and company rating\n#5)Explore skills required in job descriptions\n#6)Predict salary based on industry, location, company revenue\n","ae7abbea":"# Importing Pandas and NumPy\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\n%matplotlib inline\nimport seaborn as sns\nimport matplotlib\nmatplotlib.rcParams[\"figure.figsize\"] = (20,10)","4431579b":"data=pd.read_csv('..\/input\/data-analyst-jobs\/DataAnalyst.csv')","4df3a7f7":"data.head(3)","e823ea80":"data['Easy Apply'].value_counts()\n","1808a202":"data['Competitors'].value_counts()[0:4]\n","f3896ce6":"data['Rating'].value_counts()[:5]\n","31f2b6ce":"#we can see there are number of values such as  -1, -1.0 in the data frame. this is kind of null values. we need to clean this","d1742923":"df1 = data.copy()","d8069eb3":"df1.columns","07a6f624":"df1 = df1.drop(['Unnamed: 0'], axis = 'columns')","7b9395d2":"df1.columns","31382143":"df2 = df1.dropna()\ndf2.isnull().sum()","a1d7b858":"#we can see there are number of values such as  -1, -1.0 in the data frame. this is kind of null values. we need to clean this","50e439be":"df2=df2.replace(-1,np.nan)\ndf2=df2.replace(-1.0,np.nan)\n","5d5f7dca":"df2['Competitors'].value_counts()[:5]\n","7becb1fb":"df2=df2.replace('-1',np.nan)\n","1ae6743f":"df2['Competitors'].value_counts()[:5]\n","115bee02":"df2.columns","dccda8a9":"df2['Company Name'].unique()","6dc4cbfc":"#df2['Company Name'] = df2['Company Name'].apply(lambda x: str(x.strip('\\n', 1).str))","076db6ce":"df2['Company Name'],_=df2['Company Name'].str.split('\\n', 1).str\n","5e627e6f":"df2.head(3)","415b3fef":"df2['Salary Estimate'],_=df2['Salary Estimate'].str.split('(', 1).str\n","0ff09c6f":"df2.head(3)","4dd4346e":"#here in the below code we have created extra columns, separating information from 'job title'","90bfb121":"df2['Job Title'],df2['Department']=df2['Job Title'].str.split(',', 1).str","e35b73d9":"df2.head()","113019ee":"df2['Salary Estimate'].unique()","d147edd3":"df3 =df2.copy()","d73cabda":"df3['Min_Salary'], df3['Max_Salary'] = df3['Salary Estimate'].str.split('-').str\n\n","5bff0935":"df3.columns","37307848":"df3['Min_Salary'].unique()\n","41a7babd":"\ndf3['Min_Salary'] = df3['Min_Salary'].str.strip(' ').str.lstrip('$').str.rstrip('K').fillna(0).astype('int')\n\n\n","64fc0282":"df3['Min_Salary'].unique()\n","3d1e4f89":"df3['Max_Salary'].unique()\n","45a0a61a":"df3['Max_Salary'] = df3['Max_Salary'].str.strip(' ').str.lstrip('$').str.rstrip('K').fillna(0).astype('int')","a89ed5a2":"df3['Max_Salary'].unique()\n","2bb22e6b":"df4 = df3.copy()\ndf4.head(3)","4127110c":"df4 = df4.drop(['Salary Estimate'], axis = 'columns')","608a5441":"df4.columns","619f8289":"#current openings\n","9c952bc4":"df4['Easy Apply']=df4['Easy Apply'].fillna(False).astype('bool')\n","7f3cb932":"df4['Easy Apply'].unique()","f0cbcdf8":"df4_easy_apply =  df4[df4['Easy Apply'] == True]\n\ndf5 = df4_easy_apply.groupby('Company Name')['Easy Apply'].count().reset_index()\n\ncurrent_openings = df5.sort_values('Easy Apply',ascending=False).head(10)","02bdcdb1":"current_openings.head(5)","f8b860bb":"df5.head(5)","69a1bced":"df4_easy_apply.head(5)","bc2c24e0":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data=current_openings,\n    x='Company Name',\n    y='Easy Apply',\n    palette='Set1'\n)\nchart=chart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment='right',\n    fontweight='light',\n    \n)\n ","10e1d253":"df4.head(3)","b4c5ef11":"#salary distribution of data analyst","0812bc33":"data_analyst = df4[df4['Job Title']=='Data Analyst']\n\n\nsns.set(style=\"white\", palette=\"muted\", color_codes=True)\n\n\nf, axes = plt.subplots(1, 2, figsize=(15, 8), sharex=True)\nsns.despine(left=True)\n\n#Plot a histogram and kernel density estimate\n\nsns.distplot(data_analyst['Min_Salary'], color=\"b\", ax=axes[0])\n\nsns.distplot(data_analyst['Max_Salary'], color=\"r\",ax=axes[1])\n\nplt.setp(axes, yticks=[])\nplt.tight_layout()","e3bad521":"#top 20 cities of maximum and minimum salary","15f09961":"df5=df4.groupby('Location')[['Max_Salary','Min_Salary']].mean().sort_values(['Max_Salary','Min_Salary'],ascending=False).head(20)","4ae0631a":"df5.head(5)","67e46ca2":"fig = go.Figure()\n\nfig.add_trace(go.Bar(x=df5.index,y=df5['Min_Salary'],name='Minimum salary'))\nfig.add_trace(go.Bar(x=df5.index,y=df5['Max_Salary'],name='Maximum Salary'))\n\nfig.update_layout(title='Top 20 cities with their minimum and maximum salaries',barmode='stack')\n\nfig.show()","37c1ff0a":"# top 20 roles","3157c4db":"df6=df4.groupby('Job Title')[['Max_Salary','Min_Salary']].mean().sort_values(['Max_Salary','Min_Salary'],ascending=False).head(20)","915862ee":"fig = go.Figure()\n\nfig.add_trace(go.Bar(x=df6.index,y=df6['Min_Salary'],name='Minimum salary'))\nfig.add_trace(go.Bar(x=df6.index,y=df6['Max_Salary'],name='Maximum Salary'))\n\nfig.update_layout(title='Top 20 roles with their minimum and maximum salaries',barmode='stack')\n\nfig.show()","da092c9b":"#revenue","66ebccdc":"df4.head(3)\n","3d5ac3ed":"df4['Revenue'].unique()","a7e7f280":"def filter_revenue(x):\n    revenue=0\n    if(x== 'Unknown \/ Non-Applicable' or type(x)==float):\n        revenue=0\n    elif(('million' in x) and ('billion' not in x)):\n        maxRev = x.replace('(USD)','').replace(\"million\",'').replace('$','').strip().split('to')\n        if('Less than' in maxRev[0]):\n            revenue = float(maxRev[0].replace('Less than','').strip())\n        else:\n            if(len(maxRev)==2):\n                revenue = float(maxRev[1])\n            elif(len(maxRev)<2):\n                revenue = float(maxRev[0])\n    elif(('billion'in x)):\n        maxRev = x.replace('(USD)','').replace(\"billion\",'').replace('$','').strip().split('to')\n        if('+' in maxRev[0]):\n            revenue = float(maxRev[0].replace('+','').strip())*1000\n        else:\n            if(len(maxRev)==2):\n                revenue = float(maxRev[1])*1000\n            elif(len(maxRev)<2):\n                revenue = float(maxRev[0])*1000\n    return revenue","20e60959":"# applying the above function to REVENUE","12678405":"df4['Max_revenue']=df4['Revenue'].apply(lambda x: filter_revenue(x))","138727c7":"df4.head()","0b317ad3":"df7=df4.groupby('Sector')[['Max_revenue']].mean().sort_values(['Max_revenue'],ascending=False).head(20)","fbe2a7b7":"df7.head()","d29af477":"df7.reset_index(inplace = True)\ndf7.head()","c34299d8":"df7","075771cc":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data=df7,\n    x='Sector',\n    y='Max_revenue'\n)\nchart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment='right',\n    fontweight='light',\n \n)\nchart.axes.yaxis.label.set_text(\"Revenue(Million dollars)\")","2cd483f1":"#jobs with openings","e85e97ba":"df9=pd.DataFrame(df4[df4['Easy Apply']==True]['Job Title'].value_counts()).rename(columns={'Job Title':'No_of_openings'})","f970d32a":"df9","daed4ad6":"df9=df9.reset_index().rename(columns={'index':'Job Title'})","c262b560":"df9.head()","65673aba":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data=df9,\n    x='Job Title',\n    y='No_of_openings',\n    palette='Set1'\n)\nchart=chart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment='right',\n    fontweight='light',\n \n)","a0a1f119":"#heat map","ec0dbf47":"# all numeric (float and int) variables in the dataset\ndf4_numeric = df4.select_dtypes(include=['float64', 'int64'])\n","037c751f":"df4_numeric.head()","901b8cd0":"# correlation matrix\ncor = df4_numeric.corr()\ncor","eee8ab5d":"# plotting correlations on a heatmap\n\n# figure size\nplt.figure(figsize=(16,8))\n\n# heatmap\nsns.heatmap(cor, cmap=\"YlGnBu\", annot=True)\nplt.show()\n","abea4251":"# DATA ANALYST JOBS"}}