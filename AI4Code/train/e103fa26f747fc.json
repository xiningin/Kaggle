{"cell_type":{"21fbf27c":"code","f22f72a7":"code","3b390f73":"code","ca85d199":"code","29f65b66":"code","1a5ce6eb":"code","bd68b0ac":"code","29d48683":"code","43c3ec38":"markdown"},"source":{"21fbf27c":"import pandas as pd\nfrom PIL import Image, ImageDraw, ImageFont\nfrom pathlib import Path\nimport os","f22f72a7":"def get_frame_from_video(video, frame, file_format):\n    f_name = f'frame.{file_format}'\n    frame = frame - 1\n    !ffmpeg \\\n        -hide_banner \\\n        -loglevel fatal \\\n        -nostats \\\n        -i $video -vf \"select=eq(n\\,$frame)\" -vframes 1 $f_name\n    print(f'Loading {file_format} file of size: {(os.path.getsize(f_name)\/1e6):.2f} MB')\n    img = Image.open(f_name)\n    os.remove(f_name)\n    return img\n\ndef zoom_images(bbox, imgs, labels, size = None):\n    \n    if size is None:\n        h, w = bbox[3] - bbox[1], bbox[2] - bbox[0]\n    else:\n        h, w = size, size\n    img_out = Image.new('RGB', (len(imgs) * w, h))\n    for i, img in enumerate(imgs):\n        img = img.crop(bbox)\n        if size is not None:\n            font = ImageFont.truetype(\"..\/input\/font-dataset\/FontScripts\/Arabic.ttf\", size\/\/10)\n            img = img.resize((size,size), Image.NEAREST)\n        else: font = ImageFont.truetype(\"..\/input\/font-dataset\/FontScripts\/Arabic.ttf\", 10)\n        draw = ImageDraw.Draw(img)\n        draw.text((10, 10),labels[i],(255,255,255),font=font)\n        img_out.paste(im=img, box=(i*w, 0))\n    return img_out\n\nclass compare_frames():\n    def __init__(self, video, frame, ext = ['jpg', 'png', 'bmp']):\n        self.ext = ext\n        imgs = []\n        for e in ext:\n            imgs.append(get_frame_from_video(video, frame, e))\n        self.imgs = imgs\n    def show(self, xc, yc, size, resize = 600):\n        bbox = (xc - size\/\/2, yc - size\/\/2, xc + size\/\/2, yc + size\/\/2)\n        return zoom_images(bbox, self.imgs, self.ext, resize)","3b390f73":"comp = compare_frames('..\/input\/nfl-health-and-safety-helmet-assignment\/train\/57583_000082_Endzone.mp4', 1)","ca85d199":"comp.show(280, 380, 150)","29f65b66":"comp = compare_frames('..\/input\/nfl-health-and-safety-helmet-assignment\/train\/57676_003572_Sideline.mp4', 50)","1a5ce6eb":"comp.show(220, 240, 100)","bd68b0ac":"comp = compare_frames('..\/input\/nfl-health-and-safety-helmet-assignment\/train\/57594_000923_Endzone.mp4', 150)","29d48683":"comp.show(200, 375, 200)","43c3ec38":"# Image quality comparison for NFL Helmet comp\n\nThis notebook provides simple tools to analyze different image formats when converting video files to frames. If you think this is useful, please throw an upvote =)\n\nConsidering that a typical image size of those images can vary from:\n* 0.08 MB for JPG\n* 1.42 MB for PNG\n* 2.76 MB for MBP\n\nI think it is essential to see if it is worth the trouble. This is especially true as PNG\/BMP files can easily surpass the 19GB maximum disk space of Kaggle.\n\nIn my opinion, the video encoder already compresses the image enough that further converting it to JPG won't degrade the image too much. I am happy to hear your feedback!\n\nThat is it for now! more coming soon! =)\n\n"}}