{"cell_type":{"6ca641ca":"code","f24ab3b4":"code","71b987c6":"code","a6f07851":"code","c671a97a":"code","ad216e45":"code","c3cddba6":"code","524608be":"code","b8b01c02":"code","304da410":"code","bcb19079":"code","a988b483":"code","f2ff3159":"code","1a8bfd10":"code","3f9425be":"code","90bec939":"code","675fd554":"code","f3cba998":"code","f2752823":"code","11829909":"code","262e63b0":"code","a3288287":"code","5b7fe20b":"code","e73fd422":"code","d8a383b9":"code","44b55643":"code","2e776a68":"code","799d0549":"code","ee068a1f":"markdown"},"source":{"6ca641ca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f24ab3b4":"FILEPATH = '\/kaggle\/input\/sms-spam-collection-dataset\/spam.csv'","71b987c6":"df = pd.read_csv(FILEPATH, encoding='iso-8859-1', engine = 'c') # engine 'c' used instead of 'python' for higher performance\ndf.head(5)","a6f07851":"# delete unnecessary cols\ncols = ['Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4']\n\ndf.drop(cols, axis = 1, inplace = True)","c671a97a":"df.head()","ad216e45":"# Title change v1 = result, v2 = input\n\ndf.columns = ['result', 'input']\n\n# we can also use df.rename() option here","c3cddba6":"df.head()","524608be":"# reorder options - must be applicable for all cols\ndf = df[['input','result']]\n ","b8b01c02":"df.head()","304da410":"# Buggy, please don't use\nnew_cols = ['my_input', 'my_result']\n\ndf1 = df.reindex(columns = new_cols)\n# df1.to_csv(FILEPATH)\n# df1.head()","bcb19079":"# Rename cols by using .rename - can be used for selected cols\n\ndf.rename(columns = {'input' : 'my_new_input', 'result' : 'my_new_result'}, inplace = True)","a988b483":"df.head()","f2ff3159":"df.count()","1a8bfd10":"# print first string\n\ndf.iloc[1][0]","3f9425be":"df.iloc[2][0]","90bec939":"def find_message_length(msg):\n    \n    msg_words = msg.split(' ')\n    \n    msg_len = len(msg_words)\n    \n    return msg_len","675fd554":"print(find_message_length(df.iloc[0][0]))","f3cba998":"# Create a new col called 'message_word_length' showing how many words in the message\ndf['input_words_count'] = df['my_new_input'].apply(find_message_length)\ndf.head()\n\n# ref: https:\/\/rajacsp.github.io\/mlnotes\/python\/data-wrangling\/advanced-custom-lambda\/","f2752823":"# show the unique labels\n\nset(df['my_new_result'])","11829909":"def find_length(msg):\n    \n    msg_len = len(msg)\n    \n    return msg_len","262e63b0":"print(find_length(df.iloc[0][0]))","a3288287":"# Create a new col called 'message_word_length' showing how many words in the message\ndf['input_char_length'] = df['my_new_input'].apply(find_length)\ndf.head()","5b7fe20b":"# History words count\n\nimport matplotlib.pyplot as plt\n\n# to avoid popups use inline\n%matplotlib inline ","e73fd422":"# plt.hist(data['label'], bins=3, weights=np.ones(len(data['label'])) \/ len(data['label']))\n\nimport numpy as np\n\nplt.hist(df['input_words_count'], bins = 100, weights = np.ones(len(df['input_words_count'])) \/ len(df['input_words_count']))\n\nplt.xlabel('Word Length')\nplt.ylabel('Group Count')\nplt.title('Word Length Histogram')","d8a383b9":"# Find more than 80 words\ndf['input_words_count']","44b55643":"df_above_80 = df[df['input_words_count'] > 80]","2e776a68":"df_above_80","799d0549":"import numpy as np\n\nplt.hist(df['input_char_length'], bins = 100, weights = np.ones(len(df['input_char_length'])) \/ len(df['input_char_length']))\n\nplt.xlabel('Char Length')\nplt.ylabel('Group Count')\nplt.title('Char Length Histogram')","ee068a1f":"Source:\n\nhttps:\/\/docs.python.org\/3\/library\/codecs.html#standard-encodings\n\nhttps:\/\/www.kaggle.com\/devghiles\/step-by-step-solution-with-f1-score-as-a-metric\n\nhttps:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.read_csv.html\n\nTo rename:\nhttps:\/\/stackoverflow.com\/questions\/11346283\/renaming-columns-in-pandas\n\nTo change cols:\nhttps:\/\/stackoverflow.com\/questions\/12329853\/how-to-rearrange-pandas-column-sequence\/23741704\n\nhttps:\/\/rajacsp.github.io\/mlnotes\/python\/data-wrangling\/advanced-custom-lambda\/\n"}}