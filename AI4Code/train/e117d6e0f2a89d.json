{"cell_type":{"5d282223":"code","2dd5aa04":"code","36f12f81":"code","ef247efb":"markdown","631d9242":"markdown","ac2ca4f0":"markdown","1da8719c":"markdown"},"source":{"5d282223":"import glob\nimport pandas as pd\nimport numpy as np\nimport datetime\nimport matplotlib.pyplot as plt\nimport math","2dd5aa04":"base_time = pd.datetime(year=2018, month=12, day=10)\n\ndf_flight_stat = pd.read_csv(glob.glob('.\/data\/FlightStatistics*.csv')[0],\n                             usecols=['FlightID', 'DayNum', 'FlightNum', 'Orig', 'Dest', 'ScDepTimeUTC', 'ScArrTimeUTC',\n                                      'SeqNum', 'RouteCode'])\n\ndf_flight_stat = df_flight_stat[df_flight_stat.DayNum == 1]  # filter for one day\ndf_flight_stat['ScDepTimeUTC'] = pd.to_datetime(df_flight_stat['ScDepTimeUTC'])\ndf_flight_stat['ScArrTimeUTC'] = pd.to_datetime(df_flight_stat['ScArrTimeUTC'])\n\ndf_crew_rule = pd.read_csv(glob.glob('.\/data\/CrewDutyTime*.csv')[0], skiprows=2)\ndf_crew_rule = df_crew_rule[df_crew_rule.CrewType == 'Cockpit']  # cockpit crew for SWA\ndf_crew_rule.CheckInWindowStartTime = pd.to_timedelta(df_crew_rule.CheckInWindowStartTime + ':00')\ndf_crew_rule.CheckInWindowEndTime = pd.to_timedelta(df_crew_rule.CheckInWindowEndTime + ':00')\nindx = df_crew_rule.CheckInWindowEndTime < df_crew_rule.CheckInWindowStartTime\ndf_crew_rule.CheckInWindowEndTime[indx] += pd.Timedelta(hours=24)\ndf_crew_rule.CrewDutyTime = pd.to_timedelta(df_crew_rule.CrewDutyTime + ':00')\n\ndf_crew_stat = pd.read_csv(glob.glob('.\/data\/CrewBaseStatistics*.csv')[0])\ndf_crew_stat = df_crew_stat[df_crew_stat.DayNum == 1]  # filter for one day\ndf_crew_stat.DutyStartTimeLocal = pd.to_datetime(df_crew_stat.DutyStartTimeLocal)\ndf_crew_stat.DutyEndTimeLocal = pd.to_datetime(df_crew_stat.DutyEndTimeLocal)\ndf_crew_stat.DutyStartTimeUTC = pd.to_datetime(df_crew_stat.DutyStartTimeUTC)\ndf_crew_stat.DutyEndTimeUTC = pd.to_datetime(df_crew_stat.DutyEndTimeUTC)","36f12f81":"for index, plan in df_crew_stat.iterrows():\n    flight_seq = plan.FlightNum.split('>')\n\n    flight_seq_from_stat = []\n    for i, flight_name in enumerate(flight_seq):\n        flight_num = int(flight_name.replace('WN', ''))\n        flight_indx = (df_flight_stat.FlightNum == flight_num)\n        if i == 0:\n            flight_indx &= df_flight_stat.Orig == plan.StartAirport\n        else:\n            flight_indx &= df_flight_stat.Orig == flight_seq_from_stat[i - 1].Dest\n\n        if flight_indx.sum() != 1:\n            print('couldn\\'t find a unique flight:', plan.FlightNum)\n            continue\n\n        flight_seq_from_stat.append(df_flight_stat[flight_indx].iloc[0])\n\n        if len(flight_seq_from_stat) > 1 and flight_seq_from_stat[-1].SeqNum != flight_seq_from_stat[-2].SeqNum + 1:\n            print('seq number issue:', plan.FlightNum)\n\n    if flight_seq_from_stat[-1].Dest != plan.EndAirport:\n        print('end airport mismatch:', plan.FlightNum)\n\n    routeCode = set([f.RouteCode for f in flight_seq_from_stat])\n    if len(routeCode) != 1:\n        print('different routes:', plan.FlightNum)\n\n    # Depending on if crew duty times are in UTC or any other time zone this can change\n    duty_start_time = pd.Timedelta(hours=plan.DutyStartTimeUTC.time().hour + plan.DutyStartTimeUTC.time().minute \/ 60)\n    rule_indx = (df_crew_rule.CheckInWindowStartTime <= duty_start_time) & \\\n                (df_crew_rule.CheckInWindowEndTime >= duty_start_time) & \\\n                (df_crew_rule.MinSectorCount <= plan.NumLegs) & \\\n                (df_crew_rule.MaxSectorCount >= plan.NumLegs)\n\n    if rule_indx.sum() != 1:\n        print('rule not found', plan.FlightNum)\n        continue\n\n    rule = df_crew_rule[rule_indx].iloc[0]\n\n    time_diff = flight_seq_from_stat[-1].ScArrTimeUTC - flight_seq_from_stat[\n        0].ScDepTimeUTC - rule.CrewDutyTime + pd.Timedelta(hours=0.5)\n    if time_diff > pd.Timedelta(hours=0):\n        print('duty max duration violated', plan.FlightNum)\n","ef247efb":"# Crew Duty\n\n>Define a crew duty as a sequence of flights, i.e. its sectors, which are served by a specific crew.\n\nLet $d^c$ to be 1 if duty $c$ is selected, 0 otherwise.\nLet $td^c$ be total duty time\n\n## Crew Duty Candidate Generation\n\nTake a route and enumerate all the sub-routes. For a route of length $n$, there are $n \\times (n+1)\/2$ sub-routes.\n\nEvery sub-route could is a crew dury candidate.\n\n## Crew Duty Assignment Mathematical Model\n\n### Objective function\n$$Obj = min \\sum cost_{d^c} \\times d^c - \\sum costAdj_{c_i,c_j} \\times p^{c_i,c_j}$$\n\nAn example cost structure for a duty is as follows:\n\n- Every duty has a base cost of 1.0\n- Add 1.1, if duty does not originate at a crew base\n- Add 1.1, if duty does not terminate at a crew base\n- Subtract 0.1, if duty\u2019s last flight is terminator of operational day\n\n### Flight Cover Constraints\n\n### Crew Connection Balance Constraints\n\n### Crew Duty Limit Constraint\nThese constraints limit the duration of a crew duty based on:\n- crew base\n- check in time\n- number of sectors (flights)\n\nAlso, there is `cew duty adjustment` requirement which further reduces the duty duration based on:\n- crew base\n- check out time. \n\nThe constraint reads:\n$$t_d + retiming \\leq t_d^{max} - e_d \\qquad \\forall \\ d \\in D, retiming$$\n\n- Data includes _Crew Duty Adjustment_ and _Crew Duty Time_.\n- $\\mathcal{O}(|D| \\times |Ret|)$.\n- No violation for this constraint.\n- `XYZ()` implements the constraint.\n- Test:\n\n### Crew Rest Constraint\n\n$$ DutyTimeVar -\\sum_{f} db_f = SchDutyTime \\qquad \\forall \\ duty $$\n\n$$ (1+M) \\times DutyTimeVar - MaxDutyTime \\times \\sum_f ds_f \\leq M \\qquad \\forall \\ duty $$\n\n\n### No-harm Constraint \n\n\n\n\n\n","631d9242":"## Step 2: Perform the following tests:\n\n- Break every duty into its sectors (i.e. flights)\n- Stations should be consistent as every duty is on a route\n- Duty duration should honor the duty time rule","ac2ca4f0":"## Crew Aircraft Base\n\nrule to create crew bases under this rule:\n- is a feild of `FlightLeg`\n- ","1da8719c":"## Step 1: Load _flight statistics, crew duty time, and crew base statistics_"}}