{"cell_type":{"7c207ffd":"code","a9553212":"code","1c8bcc51":"code","02060da0":"code","7301c28e":"code","4157af2e":"code","b7af24d9":"code","167f9a05":"code","1a7301f0":"code","c2307673":"code","e9d0ebdc":"code","343b5b16":"code","5214aff5":"code","97449549":"code","5c62f59b":"code","6c287972":"code","3da8d346":"markdown","0c0f2fb6":"markdown","f865b574":"markdown","ccbb443e":"markdown","17da2db0":"markdown","5aa65398":"markdown","7d8e4896":"markdown","85c3427d":"markdown","e091cd15":"markdown","6c77aa28":"markdown","19eb703a":"markdown","4f2b024f":"markdown","b0a8ac44":"markdown"},"source":{"7c207ffd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a9553212":"from sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.metrics import r2_score\nimport numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nfrom matplotlib.dates import AutoDateLocator\nimport plotly.graph_objects as go\nimport seaborn as sns\nimport plotly.express as px","1c8bcc51":"#df = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv', index_col='Date', parse_dates=True)\ndf = pd.read_csv('..\/input\/coronavirus-2019ncov\/covid-19-all.csv', index_col='Date', parse_dates=True)\n#df['Date'] = pd.to_datetime(df['Date'], format='%Y-%m-%d')\ndf[['Confirmed','Recovered','Deaths']] = df[['Confirmed','Recovered','Deaths']].fillna(0).astype(int)","02060da0":"df_china = df[:][df['Country\/Region']=='China']\ndf_china['Day Number'] = range(1,df_china.shape[0]+1)\n\nplt.style.use('fivethirtyeight')\n#plt.plot(df_china['Day Number'], df_china['Confirmed'],color='b',marker='.', label=\"Number of cases\")\n#plt.plot(df_china['Day Number'], df_china['Recovered'],color='g',marker='.', label=\"Recovered\",linestyle='--')\n#plt.plot(df_china['Day Number'], df_china['Deaths'],color='r',marker='.', label=\"Death\",linestyle='--')\n\ndf_china[['Confirmed','Recovered', 'Deaths']].plot(color=['b','g','r'])\n\nplt.xlabel(\"Date\")\nplt.xticks(rotation=90)\nplt.ylabel(\"Cases\")\nplt.title(\"Corona virus in China\")\nplt.legend()\nplt.grid(False)\n#plt.tight_layout()\nplt.show()","7301c28e":"#df_china.tail(33)\ndf_china_temp = df_china.tail(33)\nactive = sum(df_china_temp['Confirmed']) - sum(df_china_temp['Recovered']) - sum(df_china_temp['Deaths'])\nlabels = ['Active','Recovered','Deaths']\nvalues = [active, sum(df_china_temp['Recovered']), sum(df_china_temp['Deaths'])]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values)],layout=go.Layout(title='China Corona Virus Cases'))\nfig.show()","4157af2e":"df_italy = df[:][df['Country\/Region']=='Italy']\ndf_italy['Day Number'] = range(1,df_italy.shape[0]+1)\n\nplt.style.use('fivethirtyeight')\n#plt.plot(df_china['Day Number'], df_china['Confirmed'],color='b',marker='.', label=\"Number of cases\")\n#plt.plot(df_china['Day Number'], df_china['Recovered'],color='g',marker='.', label=\"Recovered\",linestyle='--')\n#plt.plot(df_china['Day Number'], df_china['Deaths'],color='r',marker='.', label=\"Death\",linestyle='--')\n\ndf_italy[['Confirmed','Recovered', 'Deaths']].plot(color=['b','g','r'])\n\nplt.xlabel(\"Date\")\nplt.xticks(rotation=90)\nplt.ylabel(\"Cases\")\nplt.title(\"Corona virus in Italy\")\nplt.legend()\nplt.grid(True)\n#plt.tight_layout()\nplt.show()\n\ndf_italy['Active'] = df_italy['Confirmed'] - df_italy['Recovered'] - df_italy['Deaths']\nlabels = ['Active','Recovered','Deaths']\nvalues = [df_italy['Active'][-1:].iloc[-1], df_italy['Recovered'][-1:].iloc[-1], df_italy['Deaths'][-1:].iloc[-1]]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values)],layout=go.Layout(title='Italy Corona Virus Cases'))\nfig.show()\n\n\nconfirmed_cases = df_italy['Confirmed'].as_matrix()\nadded_cases = np.diff(confirmed_cases)\nadded_cases_no_day = range(1,added_cases.shape[0]+1)\ndf_italy['Added Cases'] = 0\ndf_italy['Added Cases'][1:] = added_cases\n\nplt.style.use('fivethirtyeight')\n#plt.plot(added_cases_no_day, added_cases,color='b',marker='o', label=\"New Added Cases\")\ndf_italy[['Added Cases']].plot(color='b',marker='o', label=\"New Added Cases\")\n\nplt.xlabel(\"Date\")\nplt.ylabel(\"New Added Cases\")\nplt.title(\"Corona virus in Italy\",)\nplt.legend()\nplt.grid(True)\n#plt.tight_layout()\nplt.show()","b7af24d9":"df_germany = df[:][df['Country\/Region']=='Germany']\ndf_germany['Day Number'] = range(1,df_germany.shape[0]+1)\ndf_germany.to_csv('Dataframe_Germany.csv')\ndf_germany.tail()","167f9a05":"df_germany['Active'] = df_germany['Confirmed'] - df_germany['Recovered'] - df_germany['Deaths']\nlabels = ['Active','Recovered','Deaths']\nvalues = [df_germany['Active'][-1:].iloc[-1], df_germany['Recovered'][-1:].iloc[-1], df_germany['Deaths'][-1:].iloc[-1]]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values)],layout=go.Layout(title='Germany Corona Virus Cases'))\nfig.show()","1a7301f0":"plt.style.use('fivethirtyeight')\n\n#plt.plot(df_germany['Day Number'], df_germany['Confirmed'],color='b',marker='D', label=\"Number of cases\")\n#plt.plot(df_germany['Day Number'], df_germany['Recovered'],color='g',marker='.', label=\"Recovered\",linestyle='--')\n#plt.plot(df_germany['Day Number'], df_germany['Deaths'],color='r',marker='.', label=\"Death\",linestyle='--')\n\ndf_germany[['Confirmed','Recovered', 'Deaths']].plot(color=['b','g','r'],marker='>' )\n\nplt.xlabel(\"Date\")\n#plt.xticks(rotation=45)\nplt.ylabel(\"Cases\")\nplt.title(\"Corona virus in Germany\",)\nplt.legend()\nplt.grid(True)\n#plt.tight_layout()\nplt.show()","c2307673":"#df_germany.set_index('Date', inplace=True)\n\nplt.style.use('fivethirtyeight')\n#plt.plot(df_germany['Day Number'], df_germany['Recovered'],color='g',marker='.', label=\"Recovered\",linestyle='--')\n#plt.plot(df_germany['Day Number'], df_germany['Deaths'],color='r',marker='.', label=\"Death\",linestyle='--')\n\ndf_germany[['Recovered', 'Deaths']].plot(marker='>')\n\nplt.xlabel(\"Date\")\nplt.xticks(rotation=90)\nplt.ylabel(\"Cases\")\nplt.title(\"Corona virus in Germany\",)\nplt.legend()\nplt.grid(True)\n#plt.tight_layout()\nplt.show()\n","e9d0ebdc":"modal_germany = LinearRegression(fit_intercept=True)\npoly = PolynomialFeatures(degree=12)\nnum_days_poly = poly.fit_transform(df_germany['Day Number'].as_matrix().reshape(-1,1))\npoly_reg = modal_germany.fit(num_days_poly, df_germany['Confirmed'].as_matrix().reshape(-1,1))\npredictions_for_given_days = modal_germany.predict(num_days_poly)\n#print(\"coef_ :\",modal_germany.coef_,\"intercept_:\",modal_germany.intercept_)","343b5b16":"plt.style.use('fivethirtyeight')\nplt.plot(df_germany['Day Number'], df_germany['Confirmed'],color='b',marker='D', label=\"Number of cases\")\nplt.plot(df_germany['Day Number'], predictions_for_given_days,color='k',marker='o', label=\"Prediction\",linestyle='--')\n\nplt.plot(df_germany['Day Number'], df_germany['Recovered'],color='g',marker='.', label=\"Recovered\",linestyle='--')\nplt.plot(df_germany['Day Number'], df_germany['Deaths'],color='r',marker='.', label=\"Death\",linestyle='--')\nplt.xlabel(\"Date\")\nplt.ylabel(\"Cases\")\nplt.title(\"Corona virus in Germany\",)\nplt.legend()\nplt.grid(True)\nplt.tight_layout()\nplt.show()","5214aff5":"tomorrow_value = df_germany[\"Day Number\"].iloc[-1] + 1 \nvalue_prediction = poly.fit_transform(np.array([[tomorrow_value]]))\nprediction = modal_germany.predict(value_prediction)\n#print(f'Prediction for tomorrow (for day number {tomorrow_value}) : {prediction} cases ')","97449549":"confirmed_cases = df_germany['Confirmed'].as_matrix()\nadded_cases = np.diff(confirmed_cases)\nadded_cases_no_day = range(1,added_cases.shape[0]+1)\ndf_germany['Added Cases'] = 0\ndf_germany['Added Cases'][1:] = added_cases\nadded_cases_prediction = prediction[0][0] - df_germany['Confirmed'][-1:]\n#print(f'Hospitals should be ready with {round(added_cases_prediction[:1].iloc[-1])} new beds.')\ndf_germany[['Added Cases']].tail(10)","5c62f59b":"\n\n\nplt.style.use('fivethirtyeight')\n#plt.plot(added_cases_no_day, added_cases,color='b',marker='o', label=\"New Added Cases\")\ndf_germany[['Added Cases']].plot(color='b',marker='o', label=\"New Added Cases\")\n\nplt.xlabel(\"Date\")\nplt.ylabel(\"New Added Cases\")\nplt.title(\"Corona virus in Germany\",)\nplt.legend()\nplt.grid(True)\n#plt.tight_layout()\nplt.show()","6c287972":"df_temp2=pd.DataFrame()\ndf_temp2['Confirmed'] = df_germany['Confirmed']\ndf_temp2['Deaths'] = df_germany['Deaths']\ndf_temp2['Recovered'] = df_germany['Recovered']\nsns.pairplot(df_temp2)","3da8d346":"#### The graph below shows that our prediction curve is fitting well to our data.","0c0f2fb6":"# Polynomial Regression model\n\nIn order to train our model, polynomial regration would be better choice. Linear regration won't provide accurate result. <br><br>\nTo compute the better approximation 8 degree of polynomial equation is used. ","f865b574":"#### Here, We can observe that almost 86% recovery which is not bad.","ccbb443e":"### The figure above shows the acceleration of Corona cases.","17da2db0":"# <u> Germany - Coronavirus predictor <\/u> \n\n### Before analysing Coronavirus in Germany, let's see how Coronavirus condition in china and Italy.","5aa65398":"# Acceleration of Corona cases in Germany :","7d8e4896":"Reading the Dataset: ","85c3427d":"Now, We will read the data for **Germany**. ","e091cd15":"# Corona virus in Germany\n\n#### Corona virus is spreading exponentially just like china. Nevertheless, Germany can take China as an example and should take similar steps to control. \n\n#### till now 86% people could recover from the virus which is really good news.","6c77aa28":"### Here, we can observe how Corona virus spread in china and how active cases are reducing. steps taken by China is really showing positive result.\n### We can also observe from pie chart 92% people recovered and only 4% active cases which is huge success. ","19eb703a":"### The table above shows the ADDED CASES on each day.","4f2b024f":"# Prediction for tomorrow:\n\n#### This model is efficient for short term prediction because growth rate won't change much for short term. Hopefully in long term growth rate will reduce.","b0a8ac44":"# Italy Condition :\n\n### Italy situation is realy bad. 76% people are in hospital and only 13% recovery. 10% people died which is huge. China should guid Italy."}}