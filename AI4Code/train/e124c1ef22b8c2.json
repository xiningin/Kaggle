{"cell_type":{"4b861816":"code","7e39340b":"code","5883dcec":"code","e8031dfb":"code","b9661f96":"code","27ec69c9":"code","d7db6c23":"code","acd2fb60":"code","6a73beb2":"code","466dd3fe":"code","b3ed6fd5":"code","66d0ae52":"code","414f62f6":"code","e0bc5123":"code","a720e64d":"code","9d703e4e":"code","ebafaeed":"code","ed5be6ad":"code","0496983c":"code","991497cb":"code","731cb328":"code","79d84322":"code","810802d3":"code","634e8463":"code","d78981be":"code","abfa3091":"code","d517b35c":"code","d70ae8a7":"code","b5cf2237":"code","f11b76b9":"code","26910c38":"code","731d8cd9":"code","25334b3a":"markdown","bcfff86b":"markdown","ad1cd57d":"markdown","bc7da57b":"markdown","96bc6a66":"markdown","b11872dd":"markdown","f525c677":"markdown","ce71010c":"markdown","f7d1eb9c":"markdown","d480096a":"markdown","d0dacaf3":"markdown","63e32c28":"markdown","4df0cf58":"markdown","1423a802":"markdown","767c3921":"markdown","cb7e7537":"markdown","5e8981e3":"markdown","d3636964":"markdown","f4ce5558":"markdown","b963eb83":"markdown","0472607e":"markdown","93848170":"markdown","871fdd9f":"markdown","4720889b":"markdown","5de83fda":"markdown","6be5a09e":"markdown","02980ce2":"markdown","3bcc4884":"markdown","63a630d1":"markdown","e9862949":"markdown","6864480c":"markdown","975b6c6b":"markdown"},"source":{"4b861816":"!pip3 install opentsne==0.5.0","7e39340b":"import openTSNE\nopenTSNE.__version__","5883dcec":"from sklearn import metrics\nfrom sklearn.datasets import fetch_openml\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import StratifiedKFold\n\nfrom sklearn.decomposition import PCA\n\nfrom openTSNE import TSNE\nfrom openTSNE.callbacks import ErrorLogger\n\nimport umap\n\nimport matplotlib.cm as cm\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\ndef show_grid(data):\n    plt.figure(figsize=(16, 6))\n    for i in range(10):\n        plt.subplot(2, 5, i + 1)\n        plt.imshow(data[i,:].reshape([28,28]), cmap='gray');\n\ndef plot_2d_components(data_x,data_y,title):\n    plt.figure(figsize=(12,10))\n    plt.scatter(data_x[:, 0], data_x[:, 1], c=list(map(int,data_y)), \n                edgecolor='none', alpha=0.7, s=40,\n                cmap=plt.cm.get_cmap('nipy_spectral', 10))\n    plt.colorbar()\n    plt.title(title)\n    \ndef estimate_clf_score(clf,X_train,X_test,y_train,y_test):\n    cv = StratifiedKFold(n_splits=5, random_state=123, shuffle=True)\n    accuracy_s = []\n\n    for (train_index, test_index), i in zip(cv.split(X_train, y_train), range(5)):\n        clf.fit(X_train[train_index], y_train[train_index])\n        accuracy = clf.score(X_train[test_index], y_train[test_index])\n        accuracy_s.append(accuracy * 100)\n    \n    clf.fit(X_train, y_train)\n    \n    print(\"Train mean accuracy: %.2f%% (std=%.2f)\" % (np.mean(accuracy_s),np.std(accuracy_s)))\n    print(\"Test mean accuracy:  %.2f%%\" % (clf.score(X_test, y_test) * 100))\n\n    ","e8031dfb":"# Load data from https:\/\/www.openml.org\/d\/554\nX, y = fetch_openml('mnist_784', version=1, return_X_y=True)\nX.shape","b9661f96":"test_size = 10000\nX_train, X_test = X[:test_size], X[test_size:]\ny_train, y_test = y[:test_size], y[test_size:]\nprint(\"Test size is %.2f%% of dataset\" % (test_size * 100 \/ X.shape[0]))\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","27ec69c9":"%%time\nclf = RandomForestClassifier(max_depth=3, n_estimators=100)\nestimate_clf_score(clf,X_train,X_test,y_train,y_test)","d7db6c23":"components=2\nprint('Projecting %d-dimensional data to %dD' % (X_train.shape[1],components))\npca = PCA(n_components=components)\nX_train_reduced = pca.fit_transform(X_train)\nX_test_reduced = pca.transform(X_test)","acd2fb60":"plot_2d_components(X_train_reduced,y_train,'MNIST. PCA projection')","6a73beb2":"pca = PCA()\nX_train_reduced = pca.fit_transform(X_train)\nX_test_reduced = pca.transform(X_test)","466dd3fe":"plt.figure(figsize=(10,7))\nratio_sums = np.cumsum(pca.explained_variance_ratio_)\nplt.plot(ratio_sums, color='k', lw=2)\nplt.xlabel('Number of components')\nplt.ylabel('Total explained variance')\nplt.xlim(0, 748)\nplt.yticks(np.arange(0, 1.1, 0.1))\nenough_components = np.where(ratio_sums >= 0.9)[0][0]\nplt.axvline(enough_components, c='b')\nplt.axhline(0.9, c='r')\nplt.show();","b3ed6fd5":"%%time\ncomponents=enough_components\nprint('Projecting %d-dimensional data to %dD' % (X_train.shape[1],components))\npca = PCA(n_components=components)\nX_train_reduced = pca.fit_transform(X_train)\nX_test_reduced = pca.transform(X_test)\n\nclf = RandomForestClassifier(max_depth=3, n_estimators=100)\n\nestimate_clf_score(clf,X_train_reduced,X_test_reduced,y_train,y_test)","66d0ae52":"show_grid(pca.components_)","414f62f6":"%%time\n\ntsne = TSNE(\n    perplexity=50,\n    metric=\"euclidean\",\n    verbose=True,\n    n_jobs=4,\n    random_state=1,\n)\n\ntsne_embedding_train = tsne.fit(X_train)","e0bc5123":"%%time\nX_test_tsne = tsne_embedding_train.transform(X_test)","a720e64d":"plot_2d_components(tsne_embedding_train,y_train,'MNIST. t-SNE projection')","9d703e4e":"%%time\nclf = RandomForestClassifier(max_depth=3, n_estimators=100)\nestimate_clf_score(clf,tsne_embedding_train,X_test_tsne,y_train,y_test)","ebafaeed":"%%time\n\npca = PCA(n_components=20)\nX_train_reduced = pca.fit_transform(X_train)\nX_test_reduced = pca.transform(X_test)\n\ntsne = TSNE(\n    n_components=2,\n    perplexity=50,\n    metric=\"euclidean\",\n    verbose=True,\n    n_jobs=4,\n    random_state=1,\n)\n\ntsne_embedding_train_2 = tsne.fit(X_train_reduced)","ed5be6ad":"plot_2d_components(tsne_embedding_train_2,y_train,'MNIST. t-SNE projection')","0496983c":"tsne = TSNE(\n    n_components=2,\n    perplexity=10,\n    metric=\"euclidean\",\n    verbose=False,\n    n_jobs=4,\n    random_state=1,\n)\n\ntsne_embedding_train_2 = tsne.fit(X_train_reduced)\nplot_2d_components(tsne_embedding_train_2,y_train,'MNIST. t-SNE projection')","991497cb":"tsne = TSNE(\n    n_components=2,\n    perplexity=100,\n    metric=\"euclidean\",\n    verbose=False,\n    n_jobs=4,\n    random_state=1,\n)\n\ntsne_embedding_train_2 = tsne.fit(X_train_reduced)\nplot_2d_components(tsne_embedding_train_2,y_train,'MNIST. t-SNE projection')","731cb328":"tsne = TSNE(\n    n_components=2,\n    early_exaggeration=32,\n    perplexity=50,\n    metric=\"euclidean\",\n    verbose=False,\n    n_jobs=4,\n    random_state=1,\n)\n\ntsne_embedding_train_2 = tsne.fit(X_train_reduced)\nplot_2d_components(tsne_embedding_train_2,y_train,'MNIST. t-SNE projection')","79d84322":"%%time\numap_reducer = umap.UMAP(random_state=1)\numap_embedding = umap_reducer.fit_transform(X_test)\n\nplot_2d_components(umap_embedding,y_test,'MNIST. UMAP projection')","810802d3":"%%time\numap_reducer = umap.UMAP(random_state=1,min_dist=0.0)\numap_embedding = umap_reducer.fit_transform(X_test)\n\nplot_2d_components(umap_embedding,y_test,'MNIST. UMAP projection')","634e8463":"%%time\numap_reducer = umap.UMAP(random_state=1,min_dist=0.3)\numap_embedding = umap_reducer.fit_transform(X_test)\n\nplot_2d_components(umap_embedding,y_test,'MNIST. UMAP projection')","d78981be":"%%time\numap_reducer = umap.UMAP(random_state=1,min_dist=0.5)\numap_embedding = umap_reducer.fit_transform(X_test)\n\nplot_2d_components(umap_embedding,y_test,'MNIST. UMAP projection')","abfa3091":"%%time\numap_reducer = umap.UMAP(random_state=1,n_neighbors=5)\numap_embedding = umap_reducer.fit_transform(X_test)\n\nplot_2d_components(umap_embedding,y_test,'MNIST. UMAP projection')","d517b35c":"%%time\numap_reducer = umap.UMAP(random_state=1,n_neighbors=25)\numap_embedding = umap_reducer.fit_transform(X_test)\n\nplot_2d_components(umap_embedding,y_test,'MNIST. UMAP projection')","d70ae8a7":"%%time\numap_reducer = umap.UMAP(random_state=1,n_neighbors=100)\numap_embedding = umap_reducer.fit_transform(X_test)\n\nplot_2d_components(umap_embedding,y_test,'MNIST. UMAP projection')","b5cf2237":"X = np.random.rand(1000,10)\nX[:3,:5]","f11b76b9":"tsne = TSNE(\n    n_components=2,\n    perplexity=5,\n    metric=\"euclidean\",\n    verbose=False,\n    n_jobs=4,\n    random_state=1,\n)\n\nX_embedding = tsne.fit(X)\n\n\nplt.figure(figsize=(12,10))\nplt.scatter(X_embedding[:, 0], X_embedding[:, 1])","26910c38":"# np.arange(len(X))\nX[:,0] = np.arange(len(X))\nX[:3,:5]","731d8cd9":"tsne = TSNE(\n    n_components=2,\n    perplexity=5,\n    metric=\"euclidean\",\n    verbose=False,\n    n_jobs=4,\n    random_state=1,\n)\n\nX_embedding = tsne.fit(X)\n\n\nplt.figure(figsize=(12,10))\nplt.scatter(X_embedding[:, 0], X_embedding[:, 1])","25334b3a":"# t-SNE","bcfff86b":"## \u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 PCA","ad1cd57d":"### early_exaggeration = 32","bc7da57b":"## n_components\n\n\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 \u0438\u043b\u0438 \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430. \n\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 2","96bc6a66":"## learning_rate, n_iter\n\n\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e:\n- learning_rate=200.0 (\u043e\u0431\u044b\u0447\u043d\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0435 [10.0, 1000.0])\n- n_iter=1000","b11872dd":"## \u041a\u0440\u0438\u0432\u0430\u044f \u043e\u0431\u044c\u044f\u0441\u043d\u044f\u0435\u043c\u043e\u0439 \u0434\u0438\u0441\u043f\u0435\u0440\u0441\u0438\u0438","f525c677":"## \u041d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u0438 \u0448\u0443\u043c","ce71010c":"## min_dist\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 min_dist \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u0443\u0435\u0442, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0435\u0441\u043d\u043e UMAP \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e \u0443\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0442\u044c \u0442\u043e\u0447\u043a\u0438 \u0432\u043c\u0435\u0441\u0442\u0435 \u0432\u043d\u0443\u0442\u0440\u0438 \u043d\u0438\u0437\u043a\u043e\u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0430. \n\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 0.1","f7d1eb9c":"### min_dist = 0.5","d480096a":"### n_neighbors = 100","d0dacaf3":"### min_dist = 0.0","63e32c28":"## \u041d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u0438 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445","4df0cf58":"# \u0418\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0435 \u043c\u043e\u043c\u0435\u043d\u0442\u044b","1423a802":"# \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b t-SNE","767c3921":"## \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043f\u043e\u043c\u043e\u0447\u044c \u0441\u043b\u0430\u0431\u043e\u043c\u0443 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443","cb7e7537":"### n_neighbors = 25","5e8981e3":"## \u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0435\u0440\u0435\u0437 PCA","d3636964":"### min_dist = 0.3","f4ce5558":"### perplexity = 10","b963eb83":"## n_components \n\n\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 \u0438\u043b\u0438 \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430. ","0472607e":"## perplexity\n\n\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u043e\u0441\u0435\u0434\u0435\u0439 \u043a\u0430\u0436\u0434\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u0435\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u043f\u0440\u0438 \u043f\u043e\u0438\u0441\u043a\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u043c\u043d\u043e\u0433\u043e\u043e\u0431\u0440\u0430\u0437\u0438\u044f.","93848170":"## early_exaggeration\n\u0423\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0442\u0435\u043c, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043b\u043e\u0442\u043d\u043e \u0435\u0441\u0442\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u044b \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432\u043e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u043c \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435 \u0438 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0435\u0441\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u043c\u0435\u0436\u0434\u0443 \u043d\u0438\u043c\u0438. \u0414\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e \u043c\u0435\u0436\u0434\u0443 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0430\u043c\u0438 \u0431\u0443\u0434\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0435 \u0432 \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u043c \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435.\n\n\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 12","871fdd9f":"### n_neighbors = 5","4720889b":"### perplexity = 100","5de83fda":"## \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u0441\u043b\u0430\u0431\u044b\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440","6be5a09e":"# \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b\n\n- \u0422\u0443\u0442\u043e\u0440\u0438\u0430\u043b \u043f\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e t-SNE https:\/\/distill.pub\/2016\/misread-tsne\/\n- \u041c\u0430\u0441\u0441\u0430 \u0442\u0443\u0442\u043e\u0440\u0438\u0430\u043b\u043e\u0432 \u043f\u043e UMAP https:\/\/umap-learn.readthedocs.io\/en\/latest\/\n- \u041a\u0440\u0430\u0441\u0438\u0432\u0430\u044f \u0441\u0442\u0430\u0442\u044c\u044f \u043f\u0440\u043e UMAP \u0438 t-SNE https:\/\/pair-code.github.io\/understanding-umap\/","02980ce2":"## n_neighbors\n\n\u042d\u0442\u043e\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043a\u0430\u043a UMAP \u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u0443\u0435\u0442 \u043c\u0435\u0436\u0434\u0443 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0438 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445. \u042d\u0442\u043e \u0434\u043e\u0441\u0442\u0438\u0433\u0430\u0435\u0442\u0441\u044f \u0437\u0430 \u0441\u0447\u0435\u0442 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 UMAP \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0449\u0430\u0442\u044c \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043f\u0440\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0435 \u0438\u0437\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0434\u0430\u043d\u043d\u044b\u0437. \n\n\u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u0437\u043a\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f n_neighbors \u0437\u0430\u0441\u0442\u0430\u0432\u044f\u0442 UMAP \u0441\u043e\u0441\u0440\u0435\u0434\u043e\u0442\u043e\u0447\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u043e\u0447\u0435\u043d\u044c \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435 (\u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u0432 \u0443\u0449\u0435\u0440\u0431 \u043e\u0431\u0449\u0435\u0439 \u043a\u0430\u0440\u0442\u0438\u043d\u0435), \u0432 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u0441\u0442\u0430\u0432\u044f\u0442 UMAP \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u0431\u043e\u043b\u0435\u0435 \u043a\u0440\u0443\u043f\u043d\u044b\u0435 \u043e\u043a\u0440\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438 \u043a\u0430\u0436\u0434\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u043f\u0440\u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u043f\u043e\u0442\u0435\u0440\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u043c\u0435\u043b\u043a\u0438\u0445 \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u0440\u0430\u0434\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u0435\u0435 \u0448\u0438\u0440\u043e\u043a\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.\n\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 15.","3bcc4884":"## \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043a \u0441\u043b\u0430\u0431\u043e\u043c\u0443 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443","63a630d1":"## \u041c\u043e\u0436\u043d\u043e \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0443\u0441\u043a\u043e\u0440\u0438\u0442\u044c\u0441\u044f PCA + t-SNE","e9862949":"# UMAP","6864480c":"# \u0417\u0430\u0433\u0440\u0443\u0437\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 MNIST","975b6c6b":"# PCA"}}