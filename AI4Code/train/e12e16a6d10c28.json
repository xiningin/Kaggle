{"cell_type":{"c9022746":"code","2a484b87":"code","56c3a6f4":"code","eb12b919":"code","f722a379":"code","8d3e43c7":"code","6e401443":"code","313e9102":"code","373d4f50":"code","cea08409":"code","dc4b9027":"code","6a8c817a":"code","e597af87":"code","26aff45f":"code","18726013":"code","4460efc2":"code","4355ed70":"code","fa93090b":"code","d57c4ad9":"code","27139809":"code","8f51491f":"code","c630ecbe":"code","e1dd6383":"code","72f57e93":"code","1e10cf1e":"code","56b6e5c0":"code","2c0fe9c3":"code","eb0436b9":"code","7c1de821":"code","ad419510":"code","094750d0":"code","a628b58f":"markdown","69e0aea2":"markdown","8c229887":"markdown","4b598146":"markdown","38472f48":"markdown","956f9b62":"markdown","84142b1a":"markdown","0ab0f936":"markdown","33500c9d":"markdown","d76913b8":"markdown","202a0f5c":"markdown","80d6da80":"markdown","40c55aba":"markdown","5fa63f41":"markdown","c2811b7d":"markdown","b03dc63c":"markdown","013d45a2":"markdown"},"source":{"c9022746":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","2a484b87":"data_f = pd.read_csv(r'..\/input\/BlackFriday.csv')\ndata_f.head()","56c3a6f4":"data_f.info()","eb12b919":"data_f.describe()","f722a379":"plt.figure(figsize=(9, 6))\n\ncolors = ['dodgerblue', 'pink']\nlabels = ['Male', 'Female']\n\npatches, l_text, p_text = plt.pie(\n    data_f.Gender.value_counts(),\n    labels=labels,\n    colors=colors,\n    explode=(0, 0.08),\n    autopct='%4.2f%%',\n    startangle=90,\n    shadow=True)\n\nfor t in l_text + p_text:\n    t.set_size(20)\nfor t in p_text:\n    t.set_color('white')\nplt.legend(fontsize=15, loc='best', title='Gender', frameon=False)\nplt.axis('equal')","8d3e43c7":"plt.figure(figsize=(9, 6))\n\nGender_M = data_f[data_f.Gender == 'M'].Purchase.sum()\nGender_F = data_f[data_f.Gender == 'F'].Purchase.sum()\ncolors = ['blueviolet', 'lightcoral']\nlabels = ['Male', 'Female']\n\npatches, l_text, p_text = plt.pie([Gender_M, Gender_F],\n                                  labels=labels,\n                                  colors=colors,\n                                  explode=(0, 0.08),\n                                  autopct='%4.2f%%',\n                                  startangle=90,\n                                  shadow=True)\n\nfor t in l_text + p_text:\n    t.set_size(20)\nfor t in p_text:\n    t.set_color('white')\nplt.legend(fontsize=15, loc='best', title='Total-Purchase', frameon=False)\nplt.axis('equal')","6e401443":"plt.figure(figsize=(10, 6))\n\nsizes = data_f.City_Category.value_counts()\nlabels = data_f.City_Category.value_counts().index\ncolors = ['sandybrown', 'deepskyblue', 'limegreen']\n\npatches, l_text, p_text = plt.pie(\n    sizes,\n    labels=labels,\n    colors=colors,\n    explode=(0.08, 0, 0),\n    autopct='%3.1f%%',\n    startangle=90,\n    shadow=True)\n\nfor t in l_text + p_text:\n    t.set_size(20)\nfor t in p_text:\n    t.set_color('white')\nplt.legend(fontsize=15, loc='best', title='City-Purchases', frameon=False)\nplt.axis('equal')","313e9102":"plt.figure(figsize=(10, 6))\n\nsizes = data_f.groupby('City_Category')['Purchase'].sum().sort_values(\n    ascending=False)\nlabels = data_f.groupby('City_Category')['Purchase'].sum().sort_values(\n    ascending=False).index\ncolors = ['tomato', 'deepskyblue', 'limegreen']\n\npatches, l_text, p_text = plt.pie(\n    sizes,\n    labels=labels,\n    colors=colors,\n    explode=(0.08, 0, 0),\n    autopct='%3.1f%%',\n    startangle=90,\n    shadow=True)\n\nfor t in l_text + p_text:\n    t.set_size(20)\nfor t in p_text:\n    t.set_color('white')\nplt.legend(fontsize=15, loc='best', title='City-Purchase', frameon=False)\nplt.axis('equal')","373d4f50":"group_City_Gender = data_f.groupby(['City_Category', 'Gender'])\ngroup_City_Gender.count()","cea08409":"fig = plt.figure(figsize=(10, 8))\n# ax1 = fig.add_subplot(121)\nP_M = data_f.City_Category[data_f['Gender'] == 'M'].value_counts()\nP_F = data_f.City_Category[data_f['Gender'] == 'F'].value_counts()\ndf = pd.DataFrame({'Female': P_F, 'Male': P_M})\ndf.plot.bar()\nplt.title('city-gender', fontsize=20)\nplt.xlabel('City_Category', fontsize=20)\nplt.ylabel('Number_Of_Times', fontsize=20)\nplt.grid(axis='y', linestyle=':')\nax = plt.gca()\nax.set_xticklabels(df.index, rotation=0, fontsize=15)\n\nfig = plt.figure(figsize=(10, 8))\n# ax2 = fig.add_subplot(122)\ndf_p = data_f.groupby(['City_Category',\n                       'Gender'])['Purchase'].sum().unstack().sort_values(\n                           by='M', ascending=False)\ndf_p.plot.bar()\nplt.title('city-gender-Purchase', fontsize=20)\nplt.ylabel('Purchase-sum', fontsize=20)\nplt.xlabel('City_Category', fontsize=20)\nplt.legend(['Female', 'Male'])\nplt.grid(axis='y', linestyle=':')\nax = plt.gca()\nax.set_xticklabels(df_p.index, rotation=0, fontsize=15)\n\nplt.tight_layout()","dc4b9027":"data_f.groupby('City_Category')[[\n    'Product_Category_1', 'Product_Category_2', 'Product_Category_3'\n]].count()","6a8c817a":"plt.figure(figsize=(10, 8))\ndf = data_f.groupby('City_Category')[[\n    'Product_Category_1', 'Product_Category_2', 'Product_Category_3'\n]].count().sort_values(\n    by='Product_Category_1', ascending=False)\ndf.plot.bar()\nplt.grid(axis='y', linestyle=':')\nplt.xlabel('City_Category', fontsize=20)\nplt.ylabel('Number_Of_Times', fontsize=20)\nax = plt.gca()\nax.set_xticklabels(df.index, rotation=0, fontsize=15)","e597af87":"df_A = data_f.groupby('Age')['Purchase'].sum()\ndf_A.plot.bar(figsize=(10, 8))\nplt.title('Age-Purchase', fontsize=20)\nplt.xlabel('Age', fontsize=20)\nplt.ylabel('Purchase', fontsize=20)\nplt.grid(axis='y', linestyle=':')\nax = plt.gca()\nax.set_xticklabels(\n    df_A.index, fontsize=12, rotation=30, horizontalalignment='center')\nplt.legend()","26aff45f":"df_A = data_f.groupby(['Age', 'Gender'])['Purchase'].count().unstack()\ndf_A.plot.bar(figsize=(10, 8))\nplt.title('Age-Gender', fontsize=20)\nplt.xlabel('Age', fontsize=20)\nplt.ylabel('Number_Of_Times', fontsize=20)\nplt.grid(axis='y', linestyle=':')\nax = plt.gca()\nax.set_xticklabels(\n    df_A.index, fontsize=12, rotation=30, horizontalalignment='center')\nplt.legend(['Female', 'Male'],\n           fontsize=15,\n           loc='best',\n           title='Gender',\n           frameon=False)","18726013":"df_A = data_f.groupby(['Age', 'Gender'])['Purchase'].sum().unstack()\ndf_A.plot.bar(figsize=(10, 8))\nplt.title('Age-Gender-Purchase', fontsize=20)\nplt.xlabel('Age', fontsize=20)\nplt.ylabel('Purchase', fontsize=20)\nplt.grid(axis='y', linestyle=':')\nax = plt.gca()\nax.set_xticklabels(\n    df_A.index, fontsize=12, rotation=30, horizontalalignment='center')\nplt.legend(['Female', 'Male'],\n           fontsize=15,\n           loc='best',\n           title='Gender',\n           frameon=False)","4460efc2":"df_C_A = data_f.groupby(['City_Category', 'Age'])['Purchase'].sum().unstack()\ndf_C_A.plot.bar(figsize=(10, 8))\nplt.title('City_Category-Age-Purchase', fontsize=20)\nplt.xlabel('City_Category', fontsize=20)\nplt.ylabel('Purchase', fontsize=20)\nplt.grid(axis='y', linestyle=':')\nax = plt.gca()\nax.set_xticklabels(\n    df_C_A.index, fontsize=12, rotation=0, horizontalalignment='center')\nplt.legend(df_C_A.columns, fontsize=15, loc='best', title='Age', frameon=False)","4355ed70":"df_A_P = data_f.groupby('Age')[[\n    'Product_Category_1', 'Product_Category_2', 'Product_Category_3'\n]].count()\ndf_A_P.plot.bar(figsize=(10, 8))\nplt.title('Age-Product_Category', fontsize=20)\nplt.xlabel('Age', fontsize=20)\nplt.ylabel('Number_Of_Times', fontsize=20)\nplt.grid(axis='y', linestyle=':')\nax = plt.gca()\nax.set_xticklabels(\n    df_A_P.index, fontsize=12, rotation=0, horizontalalignment='center')\nplt.legend(\n    df_A_P.columns,\n    fontsize=15,\n    loc='best',\n    title='Product_Category',\n    frameon=False)","fa93090b":"plt.figure(figsize=(10, 6))\n\nsizes = data_f.groupby('Marital_Status')['Purchase'].sum().sort_values(\n    ascending=False)\nlabels = data_f.groupby('Marital_Status')['Purchase'].sum().sort_values(\n    ascending=False).rename(index={\n        0: 'NO',\n        1: 'YES'\n    }).index\ncolors = ['deepskyblue', 'tomato']\n\npatches, l_text, p_text = plt.pie(\n    sizes,\n    labels=labels,\n    colors=colors,\n    explode=(0.08, 0),\n    autopct='%3.1f%%',\n    startangle=90,\n    shadow=True)\n\nfor t in l_text + p_text:\n    t.set_size(20)\nfor t in p_text:\n    t.set_color('white')\nplt.legend(\n    fontsize=15, loc='best', title='Marital_Status-Purchase', frameon=False)\nplt.axis('equal')","d57c4ad9":"df_M_A = data_f.groupby(['Marital_Status', 'Age'])['Purchase'].sum().unstack()\ndf_M_A.plot.bar(figsize=(10, 8))\nplt.title('Age-Marital_Status-Purchase', fontsize=20)\nplt.xlabel('Marital_Status', fontsize=20)\nplt.ylabel('Purchase', fontsize=20)\nplt.grid(axis='y', linestyle=':')\nax = plt.gca()\nax.set_xticklabels(\n    df_M_A.index, fontsize=12, rotation=0, horizontalalignment='center')\nplt.legend(df_M_A.columns, fontsize=15, loc='best', title='Age', frameon=False)","27139809":"df_M_P = data_f.groupby('Marital_Status')[[\n    'Product_Category_1', 'Product_Category_2', 'Product_Category_3'\n]].count()\ndf_M_P.plot.bar(figsize=(10, 8))\nplt.title('Marital_Status-Product_Category', fontsize=20)\nplt.xlabel('Marital_Status', fontsize=20)\nplt.ylabel('Number_Of_Times', fontsize=20)\nplt.grid(axis='y', linestyle=':')\nax = plt.gca()\nax.set_xticklabels(\n    df_M_P.index, fontsize=12, rotation=0, horizontalalignment='center')\nplt.legend(\n    df_M_P.columns,\n    fontsize=15,\n    loc='best',\n    title='Product_Category',\n    frameon=False)","8f51491f":"df_M_P = data_f.groupby('Marital_Status')[[\n    'Product_Category_1', 'Product_Category_2', 'Product_Category_3'\n]].sum()\ndf_M_P.plot.bar(figsize=(10, 8))\nplt.title('Marital_Status-Product_Category', fontsize=20)\nplt.xlabel('Marital_Status', fontsize=20)\nplt.ylabel('Number_Of_Product', fontsize=20)\nplt.grid(axis='y', linestyle=':')\nax = plt.gca()\nax.set_xticklabels(\n    df_M_P.index, fontsize=12, rotation=0, horizontalalignment='center')\nplt.legend(\n    df_M_P.columns,\n    fontsize=15,\n    loc='best',\n    title='Product_Category',\n    frameon=False)","c630ecbe":"plt.figure(figsize=(15, 8))\n\nsizes = data_f.groupby('Stay_In_Current_City_Years')['Purchase'].sum(\n).sort_values(ascending=False)\nlabels = data_f.groupby('Stay_In_Current_City_Years')['Purchase'].sum(\n).sort_values(ascending=False).rename(\n    index={\n        '0': 'Geust',\n        '1': 'First Year',\n        '2': 'Second Year',\n        '3': 'Third Year',\n        '4+': 'More Than Four Years'\n    }).index\ncolors = ['tomato', 'deepskyblue', 'aqua', 'lime', 'violet']\n\npatches, l_text, p_text = plt.pie(\n    sizes,\n    labels=labels,\n    colors=colors,\n    explode=(0.08, 0.08, 0, 0, 0),\n    autopct='%3.1f%%',\n    startangle=90,\n    shadow=True)\n\nfor t in l_text + p_text:\n    t.set_size(20)\nfor t in p_text:\n    t.set_color('white')\nplt.legend(\n    fontsize=12,\n    loc='best',\n    title='Stay_In_Current_City_Years-Purchase',\n    frameon=False)\nplt.axis('equal')","e1dd6383":"df_Y_P = data_f.groupby(\n    'Stay_In_Current_City_Years')['Purchase'].sum().sort_values(ascending=True)\ndf_Y_P.plot.bar(figsize=(10, 8))\nplt.title('Stay_In_Current_City_Years-Purchase', fontsize=20)\nplt.xlabel('Stay_In_Current_City_Years', fontsize=20)\nplt.ylabel('Purchase', fontsize=20)\nplt.grid(axis='y', linestyle=':')\nax = plt.gca()\nax.set_xticklabels(\n    df_Y_P.index, fontsize=12, rotation=0, horizontalalignment='center')","72f57e93":"df_Y_P = data_f.groupby('Stay_In_Current_City_Years')[[\n    'Product_Category_1', 'Product_Category_2', 'Product_Category_3'\n]].sum()\ndf_Y_P.plot.bar(figsize=(10, 8))\nplt.title('Stay_In_Current_City_Years-Product', fontsize=20)\nplt.xlabel('Stay_In_Current_City_Years', fontsize=20)\nplt.ylabel('Number_Of_Product', fontsize=20)\nplt.grid(axis='y', linestyle=':')\nax = plt.gca()\nax.set_xticklabels(\n    df_Y_P.index, fontsize=12, rotation=0, horizontalalignment='center')\nplt.legend(\n    df_Y_P.columns,\n    fontsize=15,\n    loc='best',\n    title='Product_Category',\n    frameon=False)","1e10cf1e":"df_O_P = data_f.groupby('Occupation')[[\n    'Product_Category_1', 'Product_Category_2', 'Product_Category_3'\n]].count().sort_values(\n    by='Product_Category_2', ascending=True)\ndf_O_P.plot.barh(figsize=(15, 15))\nplt.title('Occupation-Product-Num', fontsize=20)\nplt.xlabel('number of times', fontsize=20)\nplt.ylabel('Occupation', fontsize=20)\nplt.grid(axis='x', linestyle=':')\nax = plt.gca()\nax.set_yticklabels(\n    df_O_P.index, fontsize=12, rotation=0, horizontalalignment='center')\nplt.legend(\n    df_O_P.columns,\n    fontsize=15,\n    loc='best',\n    title='Product_Category',\n    frameon=False)","56b6e5c0":"df_O_P = data_f.groupby('Occupation')[[\n    'Product_Category_1', 'Product_Category_2', 'Product_Category_3'\n]].sum().sort_values(\n    by='Product_Category_2', ascending=True)\ndf_O_P.plot.barh(figsize=(15, 15))\nplt.title('Occupation-Product-Sum', fontsize=20)\nplt.xlabel('Number of pieces', fontsize=20)\nplt.ylabel('Occupation', fontsize=20)\nplt.grid(axis='x', linestyle=':')\nax = plt.gca()\nax.set_yticklabels(\n    df_O_P.index, fontsize=12, rotation=0, horizontalalignment='center')\nplt.legend(\n    df_O_P.columns,\n    fontsize=15,\n    loc='best',\n    title='Product_Category',\n    frameon=False)","2c0fe9c3":"df_O_P = data_f.groupby('Occupation')['Purchase'].sum().sort_values(\n    ascending=True)\ndf_O_P.plot.barh(figsize=(15, 15))\nplt.title('Occupation-Purchase', fontsize=20)\nplt.xlabel('Purchase', fontsize=20)\nplt.ylabel('Occupation', fontsize=20)\nplt.grid(axis='x', linestyle=':')\nax = plt.gca()\nax.set_yticklabels(\n    df_O_P.index, fontsize=12, rotation=0, horizontalalignment='center')\nplt.legend()","eb0436b9":"df_O_P = data_f.groupby('Product_ID')['Purchase'].count().nlargest(\n    10).sort_values(ascending=True)\ndf_O_P.plot.barh(figsize=(10, 10))\nplt.title('Product_ID-Count-TOP10', fontsize=20)\nplt.xlabel('count', fontsize=20)\nplt.ylabel('Product_ID', fontsize=20)\nplt.grid(axis='x', linestyle=':')\nax = plt.gca()\nax.set_yticklabels(\n    df_O_P.index, fontsize=12, rotation=0, horizontalalignment='right')\nplt.legend()","7c1de821":"df_O_P = data_f.groupby('Product_ID')['Purchase'].sum().nlargest(\n    10).sort_values(ascending=True)\ndf_O_P.plot.barh(figsize=(10, 10))\nplt.title('Product_ID-Purchase-TOP10', fontsize=20)\nplt.xlabel('Purchase', fontsize=20)\nplt.ylabel('Product_ID', fontsize=20)\nplt.grid(axis='x', linestyle=':')\nax = plt.gca()\nax.set_yticklabels(\n    df_O_P.index, fontsize=12, rotation=0, horizontalalignment='right')\nplt.legend()","ad419510":"df_M_PID = data_f[data_f['Gender'] == 'M'].groupby(\n    'Product_ID')['Purchase'].sum().nlargest(10).sort_values(ascending=True)\ndf_M_PID.plot.barh(figsize=(10, 10))\nplt.title('Product_ID-Purchase-TOP10-M', fontsize=20)\nplt.xlabel('Purchase', fontsize=20)\nplt.ylabel('Product_ID', fontsize=20)\nplt.grid(axis='x', linestyle=':')\nax = plt.gca()\nax.set_yticklabels(\n    df_M_PID.index, fontsize=12, rotation=0, horizontalalignment='right')\nplt.legend()","094750d0":"df_F_PID = data_f[data_f['Gender'] == 'F'].groupby(\n    'Product_ID')['Purchase'].sum().nlargest(10).sort_values(ascending=True)\ndf_F_PID.plot.barh(figsize=(10, 10))\nplt.title('Product_ID-Purchase-TOP10-F', fontsize=20)\nplt.xlabel('Purchase', fontsize=20)\nplt.ylabel('Product_ID', fontsize=20)\nplt.grid(axis='x', linestyle=':')\nax = plt.gca()\nax.set_yticklabels(\n    df_M_PID.index, fontsize=12, rotation=0, horizontalalignment='right')\nplt.legend()","a628b58f":"### 4. View data distribution by marital status","69e0aea2":"### This is just some simple basic analysis, which is designed to be practiced. Of course, some details need to be noted. For example, the indicators in the visual map need to be displayed correspondingly. Sometimes, the label is written by itself, which may be wrong in the figure. . . . . ","8c229887":"### 1. Observe the distribution of data by gender","4b598146":"### 3. Distribution of purchase data by age","38472f48":"#### It can be seen that the occupational category has a lot to do with the amount of consumption. It can provide products that are more in line with professional characteristics according to the top ranked occupations. Of course, it is also necessary to analyze why the lower ranking occupations are so low. Reasons for overall improvement in consumption","956f9b62":"#### Consumption in the 18-45 age group accounts for the vast majority, exceeding 3.9 billion, including more than 3 billion men and more than 900 million women. The most prominent is that the male consumption in the 26-35 age group is close to 1.6 billion, which is basically in line with the normal level of consumption according to age. distributed","84142b1a":"#### Product_Category_2 and Product_Category_3 has Null value","0ab0f936":"### 2. View data distribution by city","33500c9d":"### Overall data situation","d76913b8":"#### The top 10 products are not related to gender. They may be life necessities. In addition to the maintenance of these products, they may also provide some products for consumers to choose. Of course, how to improve the rankings. Product sales is a tricky business","202a0f5c":"#### Men\u2019s purchasing power is about three times that of women.","80d6da80":"### 6. View data distribution by occupation category","40c55aba":"### 7. View top10 product sales","5fa63f41":"#### Reflecting the overall sales of the three cities A, B and C, including three types of products.\nMen are dominant in every city, regardless of the number of purchases or expenses.","c2811b7d":"#### People who live for a year consume the most, and then decrement, which is a good explanation. When you first come to the city, you need to buy all kinds of daily necessities. Of course, this is not to say that other people do not need daily necessities, such as pots and tableware, unless you are a Violent, only need to buy in the first year","b03dc63c":"#### Regardless of the overall or all ages or the three types of products from multiple perspectives, the consumption of unmarried state is relatively high, about 6 to 4, and sure enough, people are more concerned about themselves, hahahaha. . . . . .","013d45a2":"### 5. Stay_In_Current_City_Years"}}