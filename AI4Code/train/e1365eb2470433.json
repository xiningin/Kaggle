{"cell_type":{"f1a0764d":"code","9dd12423":"code","4c62e660":"code","e230d571":"code","db103273":"code","ea79425d":"code","9474d356":"code","7cd55b05":"code","9914abab":"code","2428637c":"code","cb9adad6":"markdown","8d96f8a1":"markdown","cb8541c0":"markdown"},"source":{"f1a0764d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport warnings\n\nwarnings.filterwarnings('ignore')\n\nsns.set(style=\"whitegrid\", palette=\"muted\")\nplt.rcParams[\"figure.figsize\"] = (16, 8)\nparams = {'axes.labelsize': 16, 'axes.titlesize': 18, 'font.size': 15}\nplt.rcParams.update(params)","9dd12423":"datafile = \"\/kaggle\/input\/electricity-demand-in-victoria-australia\/complete_dataset.csv\"\n\ndf = pd.read_csv(datafile)\ndf.head()","4c62e660":"df.info()","e230d571":"fig, ax = plt.subplots(2, 1, figsize = (16, 14))\nax[0].tick_params(axis='both', which='major', labelsize=13)\nax[1].tick_params(axis='both', which='major', labelsize=13)\n\ndf['demand'] = df['demand'] \/ 1000\ndf.plot(x='date', y='demand', lw = 1, ax = ax[0])\ndf['demand'] = df['demand'] * 1000\nax[0].set_title(\"Daily electricity demand in Victoria from January 2015 to October 2020\")\nax[0].set_ylabel(\"Demand [GWh]\")\nax[0].get_legend().remove()\n\ndf.plot(x='date', y='RRP', lw = 1, color='red', ax = ax[1])\nax[1].set_title(\"Daily average RRP of 1 MWh of electricity in Victoria from January 2015 to October 2020\")\nax[1].set_ylabel(\"Price [AUD$\/MWh]\")\nax[1].get_legend().remove()\nplt.yscale(\"log\")\n\nNone","db103273":"plt.figure(figsize=(16, 6))\nplt.plot(pd.to_datetime(df['date']), df['demand_neg_RRP']\/df['demand'], lw=3, color='black', alpha=0.7)\nplt.xlabel('date')\nplt.ylabel('Fraction of daily demand')\nplt.title(\"Electricity demand in Victoria at negative price\")\nplt.ylim([0, 0.65])\nNone","ea79425d":"fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 7))\n\ndef shift_log(df, col_name):\n    \"\"\"\n    Transform by shift so that min element = 1 and taking log\n    \"\"\"\n    vals = df[col_name].values\n    shift = np.min(vals)\n    vals = np.log(vals - shift + 1)\n    df[col_name + \" (norm)\"] = (vals - vals.mean())\/vals.std()\n\nshift_log(df, 'max_temperature')\n    \nsns.distplot(df['min_temperature'], ax=ax1)\nsns.distplot(df['max_temperature'], color='orange', ax=ax2)\nsns.distplot(df['max_temperature (norm)'], color='red', ax=ax3)\nNone","9474d356":"pd.options.plotting.backend = \"matplotlib\" #\"plotly\"\ndf.plot(x='date', y=['min_temperature', 'max_temperature'], title='Temperature')\nNone","7cd55b05":"fig, ax = plt.subplots(2, 1, figsize=(18, 14))\n\ndf.plot(x='date', y='solar_exposure', ax=ax[0], color='orange', title = \"Daily solar exposure, MJ\/m^2\")\ndf.plot(x='date', y='rainfall', color='blue', ax=ax[1], title = \"Daily rainfall, mm\")\nNone","9914abab":"from statsmodels.tsa.seasonal import seasonal_decompose\n\nplt.rcParams[\"figure.figsize\"] = (16, 16)\n\nT = 365 # days in a year\ndecompose = seasonal_decompose(x=df['demand'], period=T, model='additive')\ndecompose.plot()\nNone","2428637c":"corr = df[[col for col in df.columns if df[col].dtypes == np.float64]].corr()\nsns.heatmap(corr, annot=True)\nNone","cb9adad6":"Maximum and minimum daily temperatures have a skewed distribution. Some model better deal with normalised data. Last plot on the right depicts normalised (mean = 0, std = 1) temperature.","8d96f8a1":"Frequency and a relative magnitude (to a total demand on that day) of demand at negative prices.","cb8541c0":"## Deeper dive into Demand"}}