{"cell_type":{"2ecff41d":"code","0859a333":"code","628449cd":"code","355a1864":"code","4d05aa62":"code","8eb8ae6a":"code","3c89a6de":"code","aef6a47c":"code","b564050d":"code","37c03abf":"code","4579bea9":"code","77bcd48f":"code","a702b7d5":"code","e74b1d1d":"code","3c23731c":"markdown","953d780f":"markdown","5a1cd256":"markdown","07d28309":"markdown","7f6a38d6":"markdown"},"source":{"2ecff41d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n#           Uncomment the line below to view Filenames\n#           print(os.path.join(dirname, filename))\n        pass\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0859a333":"# DATA_PATH = \"..\/input\/CORD-19-research-challenge\/\"\nCLEAN_DATA_PATH = \"..\/input\/cord-19-eda-parse-json-and-generate-clean-csv\/\"\n\n\n# Read in the papers from each source to a dataframe\npmc_df = pd.read_csv(CLEAN_DATA_PATH + \"clean_pmc.csv\")\nbiorxiv_df = pd.read_csv(CLEAN_DATA_PATH + \"biorxiv_clean.csv\")\ncomm_use_df = pd.read_csv(CLEAN_DATA_PATH + \"clean_comm_use.csv\")\nnoncomm_use_df = pd.read_csv(CLEAN_DATA_PATH + \"clean_noncomm_use.csv\")\n\n# Add all the papers into one large dataframe\npapers_df = pd.concat([pmc_df,\n                       biorxiv_df,\n                       comm_use_df,\n                       noncomm_use_df], axis=0).reset_index(drop=True)","628449cd":"# View first few rows of papers dataframe\n\nprint (papers_df.shape)\npapers_df.head()","355a1864":"# Reading data direct from source\n\ndf_cases = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/web-data\/data\/cases.csv\")\ndf_cases_country = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/web-data\/data\/cases_country.csv\")\ndf_cases_state = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/web-data\/data\/cases_state.csv\")\ndf_cases_time = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/web-data\/data\/cases_time.csv\", parse_dates = ['Last_Update','Report_Date_String'])","4d05aa62":"# View first few rows of cases data and date of last update\n\nprint (df_cases.shape)\nprint ('Last Update: ' + str(df_cases.Last_Update.max()))\ndf_cases.head()","8eb8ae6a":"# View first few rows of cases by country and date of last update\n\n\nprint (df_cases_country.shape)\nprint ('Last Update: ' + str(df_cases_country.Last_Update.max()))\ndf_cases_country.head()","3c89a6de":"# View first few rows of cases by state and date of last update\n\n\nprint (df_cases_state.shape)\ndf_cases_state.head()","aef6a47c":"# View first few rows of cases over time and date of last update\n\nprint (df_cases_time.shape)\ndf_cases_time.head()","b564050d":"# Reading data direct from source\n\ndf_confirmed_global = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv')\ndf_confirmed_us = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_US.csv')\ndf_deaths_global = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv')\ndf_deaths_us = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_US.csv')\ndf_recovered_global = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_recovered_global.csv')","37c03abf":"# View first few rows of global confirmed deaths over time and date of last update\n\nprint (df_confirmed_global.shape)\ndf_confirmed_global.head()","4579bea9":"# View first few rows of US confirmed deaths over time and date of last update\n\nprint (df_confirmed_us.shape)\ndf_confirmed_us.head()","77bcd48f":"# View first few rows of global deaths over time and date of last update\n\nprint (df_deaths_global.shape)\ndf_deaths_global.head()","a702b7d5":"# View first few rows of US deaths over time and date of last update\n\nprint (df_deaths_us.shape)\ndf_deaths_us.head()","e74b1d1d":"# View first few rows of global recoved cases over time and date of last update\n\nprint (df_recovered_global.shape)\ndf_recovered_global.head()","3c23731c":"# **Kaggle provided code to view raw data filenames and ingest numpy and pandas:**","953d780f":"# **Reading cleaned research papers data source (Text):**","5a1cd256":"# **Introduction: This notebook provides an example ingestion of Kaggle provided text-based data and other helpful external numerical data.**","07d28309":"# **Ingesting John Hopkins University Covid-19 Cases Data (Numerical):**","7f6a38d6":"# **Ingesting John Hopkins University Covid-19 Deaths Data (Numerical):**"}}