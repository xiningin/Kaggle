{"cell_type":{"567443de":"code","8e755ee0":"code","c704622d":"code","286ea7d6":"code","783aedf9":"code","00b34c81":"code","649ccc61":"code","8747ce39":"code","745bbefb":"code","2578146f":"code","807616d4":"code","417c9633":"code","9e3429dd":"code","81e11224":"code","1caed725":"code","72629b11":"code","1a585e96":"code","b88b2d1d":"code","f484fc02":"code","f6efa970":"markdown","106d2916":"markdown","ccd06ddf":"markdown","c9078ca5":"markdown","40ff66fc":"markdown","fad0f56a":"markdown","14aa2a96":"markdown","d67e46ce":"markdown","e1cea684":"markdown","4bb8fc6e":"markdown","de06c1fb":"markdown","f4e4a774":"markdown","131e1bdc":"markdown","41d26a75":"markdown","117947cc":"markdown","5be565d1":"markdown","49e7e67b":"markdown","a193361b":"markdown","fd396bbc":"markdown","e7dff9f5":"markdown","625f31df":"markdown","b998cf9a":"markdown","bf7dcf07":"markdown","db34c659":"markdown"},"source":{"567443de":"#Upgrade seaborn to latest version\n\n!pip install seaborn --upgrade","8e755ee0":"#Import libraries\n\nimport matplotlib.gridspec as gridspec\nimport re\nimport numpy as np \nimport warnings\nimport pandas as pd \nfrom pandas.core.common import SettingWithCopyWarning\n#Ignored this warning because they created outputs that made the notebook less visually appealing\nwarnings.simplefilter(action=\"ignore\", category=SettingWithCopyWarning)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c704622d":"#Import Kaggle survey data from 2017-2020\n\nresp_2020 = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\nresp_2019 = pd.read_csv('\/kaggle\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\nresp_2018 = pd.read_csv('\/kaggle\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv')\nresp_2017 = pd.read_csv('\/kaggle\/input\/kaggle-survey-2017\/multipleChoiceResponses.csv', encoding='ISO-8859-1')\n\n\n#Function returns the users(and their information) of a country and the number of users by year\ndef users_of_country(df_2020, df_2019, df_2018, df_2017, country):\n    \n    if country == 'World':\n        ctry_2020 = df_2020\n        ctry_2019 = df_2019\n        ctry_2018 = df_2018\n        ctry_2017 = df_2017\n        \n        tot_2020 = ctry_2020.shape[0]\n        tot_2019 = ctry_2019.shape[0]\n        tot_2018 = ctry_2018.shape[0]\n        tot_2017 = ctry_2017.shape[0]\n        \n        tot = {'Country': [country, country, country, country],\n        'Kaggle Users': [tot_2020, tot_2019, tot_2018, tot_2017],\n         'Year': [2020, 2019, 2018, 2017]}\n        tot_df = pd.DataFrame(data = tot)\n        \n        return ctry_2020, ctry_2019, ctry_2018, ctry_2017, tot_2020, tot_2019, tot_2018, tot_2017, tot, tot_df\n    \n    ctry_2020 = df_2020[df_2020['Q3'].str.contains(country)]\n    ctry_2019 = df_2019[df_2019['Q3'].str.contains(country)]\n    ctry_2018 = df_2018[df_2018['Q3'].str.contains(country)]\n    ctry_2017 = df_2017[df_2017['Country'].str.contains(country, na=False)]\n    \n    if country == 'United States of America':\n        ctry_2017 = df_2017[df_2017['Country'].str.contains('United States', na=False)]\n    \n    tot_2020 = ctry_2020.shape[0]\n    tot_2019 = ctry_2019.shape[0]\n    tot_2018 = ctry_2018.shape[0]\n    tot_2017 = ctry_2017.shape[0]\n    \n    tot = {'Country': [country, country, country, country],\n        'Kaggle Users': [tot_2020, tot_2019, tot_2018, tot_2017],\n         'Year': [2020, 2019, 2018, 2017]}\n    tot_df = pd.DataFrame(data = tot)\n    \n    return ctry_2020, ctry_2019, ctry_2018, ctry_2017, tot_2020, tot_2019, tot_2018, tot_2017, tot, tot_df","286ea7d6":"#Loading Data by Country\n\n#Korea\nkr_2020 = resp_2020[resp_2020['Q3'].str.contains('South Korea')].append(resp_2020[resp_2020['Q3'].str.contains('Republic of Korea')])\nkr_2019 = resp_2019[resp_2019['Q3'].str.contains('South Korea')].append(resp_2019[resp_2019['Q3'].str.contains('Republic of Korea')])\nkr_2018 = resp_2018[resp_2018['Q3'].str.contains('South Korea')].append(resp_2018[resp_2018['Q3'].str.contains('Republic of Korea')])\nkr_2017 = resp_2017[resp_2017['Country'].str.contains('South Korea', na=False)]\n\nkr_tot_2020 = kr_2020.shape[0]\nkr_tot_2019 = kr_2019.shape[0]\nkr_tot_2018 = kr_2018.shape[0]\nkr_tot_2017 = kr_2017.shape[0]\nkr_tot = {'Country': ['South Korea', 'South Korea', 'South Korea', 'South Korea'],\n        'Kaggle Users': [kr_tot_2020, kr_tot_2019, kr_tot_2018, kr_tot_2017],\n         'Year': [2020, 2019, 2018, 2017]}\nkr_tot_df = pd.DataFrame(data = kr_tot)\n\n#World\nglob_2020, glob_2019, glob_2018, glob_2017, glob_tot_2020, glob_tot_2019, glob_tot_2018, glob_tot_2017, glob_tot, glob_tot_df = users_of_country(resp_2020, resp_2019, resp_2018, resp_2017, 'World')\n\n#Japan\njp_2020, jp_2019, jp_2018, jp_2017, jp_tot_2020, jp_tot_2019, jp_tot_2018, jp_tot_2017, jp_tot, jp_tot_df = users_of_country(resp_2020, resp_2019, resp_2018, resp_2017, 'Japan')\n\n#India\nind_2020, ind_2019, ind_2018, ind_2017, ind_tot_2020, ind_tot_2019, ind_tot_2018, ind_tot_2017, ind_tot, ind_tot_df = users_of_country(resp_2020, resp_2019, resp_2018, resp_2017, 'India')\n\n#United States\nus_2020, us_2019, us_2018, us_2017, us_tot_2020, us_tot_2019, us_tot_2018, us_tot_2017, us_tot, us_tot_df = users_of_country(resp_2020, resp_2019, resp_2018, resp_2017, 'United States of America')\n","783aedf9":"#global matplotlib settings\n\nsns.set(style=\"whitegrid\")\nplt.rc('xtick', labelsize=18) \nplt.rc('ytick', labelsize=16) \nplt.rc('axes', titlesize=22) #title size\nplt.rc('figure', titlesize=22)\nplt.rc('axes', labelsize=20) #x y label size\nplt.rc('legend', fontsize=13)    # legend fontsize","00b34c81":"#Global population comparison\n\n#Create dataframe for plotting\nglobal_pop_comp_2020 = pd.DataFrame(data = {'Country': ['India(1st)', 'United States(2nd)', 'Japan(5th)', 'South Korea(19th)'],\n                                           'Kaggle Users': [ind_tot_2020, us_tot_2020, jp_tot_2020, kr_tot_2020]})\n#Create figure and axes\nglob_pop_comp_fig, glob_pop_comp_ax = plt.subplots(1,1)\nglob_pop_comp_fig.set_size_inches(10,6)\n\n#Plot \nglobal_pop_comp_2020_barplot =  sns.barplot(x = 'Country', y = 'Kaggle Users', data = global_pop_comp_2020,\n                                           palette = ['lightgray', 'lightgray', 'lightgray', '#FA62A1'])\nplt.title('Kaggle Users by Country')\nsns.despine(left='True')","649ccc61":"#Gather percentage data by gender in Korea\nkr_pct_men = kr_2020[kr_2020['Q2']=='Man']['Q2'].size \/ 266\nkr_pct_women = kr_2020[kr_2020['Q2']=='Woman']['Q2'].size \/ 266\n\n#Create dataframe for plotting\nkr_pct_gender = pd.DataFrame({'Gender': ['Women', 'Men'],\n                             'Percentage': [kr_pct_women * 100, kr_pct_men * 100]})\n\n#Create figure and axes\nkr_pct_gender_fig, kr_pct_gender_ax = plt.subplots(1,1)\nkr_pct_gender_fig.set_size_inches(10, 6)\n\n#Plot\nkr_pct_gender_barplot = sns.barplot(data = kr_pct_gender, x = 'Gender', y = 'Percentage',\n                                   palette = ['#EA744A', '#4AC0EA'])\nkr_pct_gender_barplot.set_yticks(ticks=[0, 20, 40, 60, 80, 100])\nkr_pct_gender_barplot.set_yticklabels(['0', '20', '40','60', '80', '100']) \nkr_pct_gender_barplot.set_title('Gender Distribution of Korean Kagglers');\nsns.despine(left='True')","8747ce39":"#Create figure and axes\npop_growth_comp_fig, pop_growth_comp_ax = plt.subplots(1,2)\npop_growth_comp_fig.set_size_inches(20, 6)\n\n#Create dataframe for Korea's yearly user comparison plot\nyearly_comp_korea = pd.DataFrame(data = {'Year': [2017, 2018, 2019, 2020],\n                                        'Kaggle Users': [kr_tot_2017, kr_tot_2018, kr_tot_2019, kr_tot_2020]})\n\n#Plot for Korea's yearly user comparison\nyearly_comp_korea_lineplot = sns.lineplot(data = yearly_comp_korea, x = 'Year', y = 'Kaggle Users', marker='o', ax = pop_growth_comp_ax[0],\n                                         color = '#FA62A1')\nyearly_comp_korea_lineplot.set_xticks(ticks=[2017, 2018, 2019, 2020])\nyearly_comp_korea_lineplot.set_xticklabels(['2017', '2018', '2019','2020'])\nyearly_comp_korea_lineplot.set_title('Number of Korean Kagglers 2017-2020',y=1.10)\n\n\n#Create growth percentage dataframe for Korea\npct_kr_tot = {'Country': ['South Korea', 'South Korea', 'South Korea', 'South Korea'],\n        'Kaggle Users': [((kr_tot_2020-kr_tot_2017)\/kr_tot_2017)*100, ((kr_tot_2019-kr_tot_2017)\/kr_tot_2017)*100, ((kr_tot_2018-kr_tot_2017)\/kr_tot_2017)*100, 0],\n         'Year': [2020, 2019, 2018, 2017]}\npct_kr_tot_df = pd.DataFrame(data = pct_kr_tot)\n\n#Create growth percentage dataframe for India\npct_ind_tot = {'Country': ['India', 'India', 'India', 'India'],\n        'Kaggle Users': [((ind_tot_2020-ind_tot_2017)\/ind_tot_2017)*100, ((ind_tot_2019-ind_tot_2017)\/ind_tot_2017)*100, ((ind_tot_2018-ind_tot_2017)\/ind_tot_2017)*100, 0],\n         'Year': [2020, 2019, 2018, 2017]}\npct_ind_tot_df = pd.DataFrame(data = pct_ind_tot)\n\n#Create growth percentage dataframe for US\npct_us_tot = {'Country': ['United States', 'United States', 'United States', 'United States'],\n        'Kaggle Users': [((us_tot_2020-us_tot_2017)\/us_tot_2017)*100, ((us_tot_2019-us_tot_2017)\/us_tot_2017)*100, ((us_tot_2018-us_tot_2017)\/us_tot_2017)*100, 0],\n         'Year': [2020, 2019, 2018, 2017]}\npct_us_tot_df = pd.DataFrame(data = pct_us_tot)\n\n#Create growth percentage dataframe for Japan\npct_jp_tot = {'Country': ['Japan', 'Japan', 'Japan', 'Japan'],\n        'Kaggle Users': [((jp_tot_2020-jp_tot_2017)\/jp_tot_2017)*100, ((jp_tot_2019-jp_tot_2017)\/jp_tot_2017)*100, ((jp_tot_2018-jp_tot_2017)\/jp_tot_2017)*100, 0],\n         'Year': [2020, 2019, 2018, 2017]}\npct_jp_tot_df = pd.DataFrame(data = pct_jp_tot)\n\n#Combine dataframes of countries\npct_country_user = pct_kr_tot_df.append([pct_ind_tot_df, pct_us_tot_df, pct_jp_tot_df])\n\n#Plot for percentage growth\npct_users = sns.lineplot(data = pct_country_user, \n             x = 'Year', y='Kaggle Users', hue='Country',\n            style=\"Country\", markers=True, dashes=False,\n            ax = pop_growth_comp_ax[1], palette = ['#FA62A1', '#6F62FA', '#62FABC', '#EDFA62'])\npct_users.set(ylabel='Percent Change')\npct_users.set_xticks(ticks=[2017, 2018, 2019, 2020])\npct_users.set_xticklabels(['2017', '2018', '2019','2020']) \npct_users.set_title('Yearly Percent Change of Kagglers Compared to 2017', y=1.10);\nsns.despine(left='True')","745bbefb":"#Create figure and axes\nkr_ml_exp_fig, kr_ml_exp_ax = plt.subplots(1,2)\nkr_ml_exp_fig.set_size_inches(20, 6)\nkr_ml_exp_fig.suptitle('Machine Learning Experience of Kagglers by Region', y=1.10)\n\n#Create dataframe for Korea's years of machine learning research\nkr_ml_exp_df = kr_2020['Q15'].value_counts().to_frame().reset_index().rename(\n    columns={'index': 'Years of Experience in Machine Learning Methods', 'Q15': 'Percentage'})\n\n#Preprocess Korea's dataframe for plotting\nkr_ml_exp_df = kr_ml_exp_df.reindex([5, 0, 1, 2, 3, 6, 4])\nkr_ml_exp_df['Percentage'] = kr_ml_exp_df['Percentage'].apply(lambda x: (x*100)\/194)\nkr_ml_exp_df['Years of Experience in Machine Learning Methods'].iloc[0] = 'No Usage of ML'\n\n#Plot Korea's dataframe\nkr_ml_exp_barplot = sns.barplot(data = kr_ml_exp_df, x='Years of Experience in Machine Learning Methods', y='Percentage',\n                               ax = kr_ml_exp_ax[0], palette = ['lightgray', 'lightgray', 'lightgray', 'lightgray', 'lightgray', 'lightgray',\n                                                               '#FA62A1'])\nkr_ml_exp_barplot.set_xticklabels(kr_ml_exp_barplot.get_xticklabels(), rotation = 30)\nkr_ml_exp_barplot.set_yticks(ticks=[0, 20, 40, 60, 80, 100])\nkr_ml_exp_barplot.set_yticklabels(['0', '20', '40','60', '80', '100']) \nkr_ml_exp_barplot.set_title('South Korea')\n\n#Create dataframe for US's years of machine learning research\nus_ml_exp_df = us_2020['Q15'].value_counts().to_frame().reset_index().rename(\n    columns={'index': 'Years of Experience in Machine Learning Methods', 'Q15': 'Percentage'})\n\n#Preprocess US's dataframe for plotting\nus_ml_exp_df = us_ml_exp_df.reindex([2, 0, 1, 3, 5, 6, 4, 7, 8])\nus_ml_exp_df['Percentage'] = us_ml_exp_df['Percentage'].apply(lambda x: (x*100)\/1950)\nus_ml_exp_df['Years of Experience in Machine Learning Methods'].iloc[0] = 'No Usage of ML'\n\n#Plot US's dataframe\nus_ml_exp_barplot = sns.barplot(data = us_ml_exp_df, x='Years of Experience in Machine Learning Methods', y='Percentage',\n                               ax = kr_ml_exp_ax[1], palette = ['lightgray', 'lightgray', 'lightgray', 'lightgray', 'lightgray', 'lightgray',\n                                                                '#62FABC', '#62FABC', '#62FABC'])\nus_ml_exp_barplot.set_xticklabels(us_ml_exp_barplot.get_xticklabels(), rotation = 45)\nus_ml_exp_barplot.set_yticks(ticks=[0, 20, 40, 60, 80, 100])\nus_ml_exp_barplot.set_yticklabels(['0', '20', '40','60', '80', '100']) \nus_ml_exp_barplot.set_title('United States');\nsns.despine(left='True')","2578146f":"#Gather data on number of research scientists in Korea, Japan, US\nkr_res_sci = kr_2020['Q5'].value_counts().loc['Research Scientist']\njp_res_sci = jp_2020['Q5'].value_counts().loc['Research Scientist']\nus_res_sci = us_2020['Q5'].value_counts().loc['Research Scientist']\n\n#Create dataframe combining research scientist data\nres_sci_df = pd.DataFrame({'Country': ['South Korea', 'Japan', 'United States'],\n                          'Research Scientists': [kr_res_sci, jp_res_sci, us_res_sci]})\n\n\n#Gather data on people who research machine learning in Korea, Japan, US\nkr_adv_ml = kr_2020['Q23_Part_6'].value_counts()[0]\njp_adv_ml = jp_2020['Q23_Part_6'].value_counts()[0]\nus_adv_ml = us_2020['Q23_Part_6'].value_counts()[0]\n\n#Create dataframe combining data for researchers in machine learning\nadv_ml_df = pd.DataFrame({'Country': ['South Korea', 'Japan', 'United States'],\n                          'Number of Kagglers': [kr_adv_ml, jp_adv_ml, us_adv_ml]})\n\n#Create figure\nres_comp_fig, res_comp_ax = plt.subplots(1,2)\nres_comp_fig.set_size_inches(20, 6)\nres_comp_fig.suptitle('Research Scientists and Kagglers Researching State of the Art Machine Learning by Region', y=1.10)\n\n#Create research scientist plot\nres_sci_barplot = sns.barplot(data=res_sci_df, x='Country', y='Research Scientists', ax=res_comp_ax[0],\n                             palette = ['#FA62A1', '#EDFA62', '#62FABC'])\nres_sci_barplot.set_title('Research Scientists')\n\n#Create advancing ML plot\nadv_ml_barplot = sns.barplot(data=adv_ml_df, x='Country', y='Number of Kagglers', ax=res_comp_ax[1],\n                            palette = ['#FA62A1', '#EDFA62', '#62FABC'])\nadv_ml_barplot.set_title('Researching State of the Art Machine Learning'); #semicolon at end stops black text from coming out\nsns.despine(left='True')\n\n#Standardize y values\nres_sci_barplot.set_yticks(list(range(0, 350, 50)));\nadv_ml_barplot.set_yticks(list(range(0, 350, 50)));","807616d4":"#Create figure and axes\nkr_pct_gender_fig, kr_pct_gender_ax = plt.subplots(1,3)\nkr_pct_gender_fig.set_size_inches(20, 6)\nkr_pct_gender_fig.suptitle('Gender Distribution by Region', y= 1.10)\n\n#Gather data on gender distribution of Korean Kagglers\nkr_pct_men = kr_2020[kr_2020['Q2']=='Man']['Q2'].size \/ 266\nkr_pct_women = kr_2020[kr_2020['Q2']=='Woman']['Q2'].size \/ 266\n\n#Create Korea's dataframe for plotting\nkr_pct_gender = pd.DataFrame({'Gender': ['Women', 'Men'],\n                             'Percentage': [kr_pct_women * 100, kr_pct_men * 100]})\n\n#Plot Korea's gender distribution\nkr_pct_gender_barplot = sns.barplot(data = kr_pct_gender, x = 'Gender', y = 'Percentage',\n                                   ax=kr_pct_gender_ax[0], palette = ['#EA744A', '#4AC0EA'])\nkr_pct_gender_barplot.set_yticks(ticks=[0, 20, 40, 60, 80, 100])\nkr_pct_gender_barplot.set_yticklabels(['0', '20', '40','60', '80', '100']) \nkr_pct_gender_barplot.set_title('Korea');\n\n#Gather data on gender distribution of all Kagglers in the world\nglob_pct_men = resp_2020[resp_2020['Q2']=='Man']['Q2'].size \/ 20037\nglob_pct_women = resp_2020[resp_2020['Q2']=='Woman']['Q2'].size \/ 20037\nglob_pct_gender = pd.DataFrame({'Gender': ['Women', 'Men'],\n                             'Percentage': [glob_pct_women * 100, glob_pct_men * 100]})\n\n#Plot World's gender distribution\nglob_pct_gender_barplot = sns.barplot(data = glob_pct_gender, x = 'Gender', y = 'Percentage',\n                                     ax=kr_pct_gender_ax[1], palette = ['#EA744A', '#4AC0EA'])\nglob_pct_gender_barplot.set_yticks(ticks=[0, 20, 40, 60, 80, 100])\nglob_pct_gender_barplot.set_yticklabels(['0', '20', '40','60', '80', '100']) \nglob_pct_gender_barplot.set_title('Global');\n\n#Gather data on gender distribution of US Kagglers\nus_pct_men = us_2020[us_2020['Q2']=='Man']['Q2'].size \/ 2237\nus_pct_women = us_2020[us_2020['Q2']=='Woman']['Q2'].size \/ 2237\n\n#Create US's dataframe for plotting\nus_pct_gender = pd.DataFrame({'Gender': ['Women', 'Men'],\n                             'Percentage': [us_pct_women * 100, us_pct_men * 100]})\n\n#Plot US's gender distribution\nus_pct_gender_barplot = sns.barplot(data = us_pct_gender, x = 'Gender', y = 'Percentage',\n                                   ax=kr_pct_gender_ax[2], palette = ['#EA744A', '#4AC0EA'])\nus_pct_gender_barplot.set_yticks(ticks=[0, 20, 40, 60, 80, 100])\nus_pct_gender_barplot.set_yticklabels(['0', '20', '40','60', '80', '100']) \nus_pct_gender_barplot.set_title('United States');\nsns.despine(left='True')","417c9633":"#Function for getting stem majors and non stem majors from 2018 data\ndef stem_major(df, gender):\n    #Takes in df of all major data and outputs combined df that's ready to plot gender distribution in STEM majors\n    \n    #Excluded people with 'I never declared a major' because they don't add to the data\n    df = df[df['index'] != 'I never declared a major']\n    \n    #Create stem dataframe containing STEM majors and create non_stem dataframe containing non-STEM majors\n    non_stem_majors = ['Fine arts or performing arts', 'Social sciences (anthropology, psychology, sociology, etc.)',\n           'Humanities (history, literature, philosophy, etc.)', 'Other', 'A business discipline (accounting, economics, finance, etc.)']\n    pat = '|'.join(map(re.escape, non_stem_majors))\n    stem = df[~df['index'].str.contains(pat)]\n    non_stem = df[df['index'].str.contains(pat)]\n    \n    #Assign label based on gender\n    if gender == 'Women':\n        stem = stem.assign(Gender='Women')\n        non_stem = non_stem.assign(Gender='Women')\n    if gender == 'Men':\n        stem = stem.assign(Gender='Men')\n        non_stem = non_stem.assign(Gender='Men')\n    \n    #Rename columns for clarity\n    stem = stem.rename(columns = {'Q5': 'Percentage of Majors'})\n    non_stem = non_stem.rename(columns = {'Q5': 'Percentage of Majors'})\n    \n    #Count number of people present in STEM, non-STEM, and the total count\n    stem_count = stem['Percentage of Majors'].sum()\n    non_stem_count = non_stem['Percentage of Majors'].sum()\n    total_count = stem_count + non_stem_count\n    \n    #Create dataframe for counting STEM and non-STEM majors\n    total = pd.DataFrame({'Majors': ['STEM', 'Non-STEM'], 'Percentage of Majors': [(stem_count\/total_count) * 100, (non_stem_count\/total_count) * 100],\n                             'Gender': [gender, gender]})\n    \n    return stem_count, non_stem_count, total\n\n#Gather data and create dataframe for plotting for Korea\nkr_men_maj = kr_2018[kr_2018['Q1']=='Male']['Q5'].value_counts().to_frame().reset_index()\nkr_men_stem , kr_men_n_stem, kr_men_maj_perc = stem_major(kr_men_maj, 'Men')\nkr_wom_maj = kr_2018[kr_2018['Q1']=='Female']['Q5'].value_counts().to_frame().reset_index()\nkr_wom_stem , kr_wom_n_stem, kr_wom_maj_perc = stem_major(kr_wom_maj, 'Women')\n\n#Combine data for men and women in Korea\nkr_maj_perc = pd.concat([kr_wom_maj_perc, kr_men_maj_perc])\n\n#Gather data and create dataframe for plotting for Globe\nglob_men_maj = resp_2018[resp_2018['Q1']=='Male']['Q5'].value_counts().to_frame().reset_index()\nglob_men_stem , glob_men_n_stem, glob_men_maj_perc = stem_major(glob_men_maj, 'Men')\nglob_wom_maj = resp_2018[resp_2018['Q1']=='Female']['Q5'].value_counts().to_frame().reset_index()\nglob_wom_stem , glob_wom_n_stemm, glob_wom_maj_perc = stem_major(glob_wom_maj, 'Women')\n\n#Combine data for men and women in Globe\nglob_maj_perc = pd.concat([glob_wom_maj_perc, glob_men_maj_perc])\n\n\n#Gather data and create dataframe for plotting for US\nus_men_maj = us_2018[us_2018['Q1']=='Male']['Q5'].value_counts().to_frame().reset_index()\nus_men_stem , us_men_n_stem, us_men_maj_perc = stem_major(us_men_maj, 'Men')\nus_wom_maj = us_2018[us_2018['Q1']=='Female']['Q5'].value_counts().to_frame().reset_index()\nus_wom_stem , us_wom_n_stem, us_wom_maj_perc = stem_major(us_wom_maj, 'Women')\n\n#Combine data for men and women in US\nus_maj_perc = pd.concat([us_wom_maj_perc, us_men_maj_perc])\n\n#Create figure\nmaj_comp_fig, maj_comp_ax = plt.subplots(1,3)\nmaj_comp_fig.set_size_inches(21, 6)\nmaj_comp_fig.suptitle('Gender Distribution in Undergraduate Majors by Region', y=1.10)\n\n\n#Plot data for Korea\nkr_maj_barplot = sns.barplot(data = kr_maj_perc,\n                            x='Majors', y='Percentage of Majors', hue='Gender',\n                            ax = maj_comp_ax[0], palette = ['#EA744A', '#4AC0EA'])\nkr_maj_barplot.set_xticklabels(kr_maj_barplot.get_xticklabels(), rotation = 0)\nkr_maj_barplot.set_title('South Korea')\n\n\n#Plot data for Globe\nglob_maj_barplot = sns.barplot(data = glob_maj_perc,\n                            x='Majors', y='Percentage of Majors', hue='Gender',\n                            ax = maj_comp_ax[1], palette = ['#EA744A', '#4AC0EA'])\nglob_maj_barplot.set_xticklabels(glob_maj_barplot.get_xticklabels(), rotation = 0)\nglob_maj_barplot.set_title('Global')\n\n\n#Plot data for US\nus_maj_barplot = sns.barplot(data = us_maj_perc,\n                            x='Majors', y='Percentage of Majors', hue='Gender',\n                            ax = maj_comp_ax[2], palette = ['#EA744A', '#4AC0EA'])\nus_maj_barplot.set_xticklabels(us_maj_barplot.get_xticklabels(), rotation = 0)\nus_maj_barplot.set_title('United States');\n\n#Standardize y axises\nkr_maj_barplot.set_yticks(ticks = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10]);\nglob_maj_barplot.set_yticks(ticks = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10]);\nus_maj_barplot.set_yticks(ticks = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10]);\nsns.despine(left='True')","9e3429dd":"#Function for creating dataframe to plot gender distribution within STEM majors\ndef spec_major(df, gender):\n    #takes in df of all major data and outputs percentage data for selected STEM majors \n    \n    #excluded people with 'I never declared a major'\n    df = df[df['index'] != 'I never declared a major']\n    \n    #Take in desired majors\n    spec = ['Computer science (software engineering, etc.)', 'Mathematics or statistics',\n            'Medical or life sciences (biology, chemistry, medicine, etc.)',\n           'Environmental science or geology']\n    pat = '|'.join(map(re.escape, spec))\n    spec_maj = df[df['index'].str.contains(pat)]\n    other_maj = df[~df['index'].str.contains(pat)]\n    \n    #Rename majors for readability\n    conv_dict = {'Computer science (software engineering, etc.)':'Computer Science\/Engineering', \n                'Mathematics or statistics':'Math\/Statistics', \n                'Medical or life sciences (biology, chemistry, medicine, etc.)': 'Life Sciences\/Medical',\n                'Environmental science or geology': 'Environ. Science\/Geology'\n                }\n    spec_maj['index'] = spec_maj['index'].map(conv_dict)\n    \n    #Assign labels for plotting\n    if gender == 'Women':\n        spec_maj = spec_maj.assign(Gender='Women')\n    if gender == 'Men':\n        spec_maj = spec_maj.assign(Gender='Men')\n    \n    #Rename for clarity\n    spec_maj = spec_maj.rename(columns = {'Q5': 'Percentage of Majors'})\n    other_maj = other_maj.rename(columns = {'Q5': 'Percentage of Majors'})\n    spec_maj = spec_maj.rename(columns = {'index': 'Majors'})\n    other_maj = other_maj.rename(columns = {'index': 'Majors'})\n    \n    #Count sums of majors in each category then calculates total sum\n    spec_count = spec_maj['Percentage of Majors'].sum()\n    other_count = other_maj['Percentage of Majors'].sum()\n    total_count = spec_count + other_count\n    \n    #Turn raw major counts into percentages\n    spec_maj['Percentage of Majors'] = spec_maj['Percentage of Majors'].apply(lambda x: (x\/total_count) * 100)\n    \n    return spec_maj\n\n#Create dataframe for Korea\nkr_spec_men = spec_major(kr_men_maj, 'Men')\nkr_spec_wom = spec_major(kr_wom_maj, 'Women')\nkr_spec_wom = kr_spec_wom.reset_index(drop=True).reindex([0, 5, 6, 1, 2, 4, 3])\nkr_spec_perc = pd.concat([kr_spec_wom, kr_spec_men])\n\n#Create dataframe for Globe\nglob_spec_men = spec_major(glob_men_maj, 'Men')\nglob_spec_wom = spec_major(glob_wom_maj, 'Women')\nglob_spec_wom = glob_spec_wom.reindex([0, 2, 8, 1, 4, 10, 5])\nglob_spec_perc = pd.concat([glob_spec_wom, glob_spec_men])\n\n#Create dataframe for US\nus_spec_men = spec_major(us_men_maj, 'Men')\nus_spec_wom = spec_major(us_wom_maj, 'Women')\nus_spec_wom = us_spec_wom.reindex([0, 3, 9, 1, 4, 10, 7])\nus_spec_perc = pd.concat([us_spec_wom, us_spec_men])\n\n#Create figure\nspec_comp_fig, spec_comp_ax = plt.subplots(1,3)\nspec_comp_fig.set_size_inches(27, 6)\nspec_comp_fig.suptitle('Gender Distribution Within STEM Majors by Region', y=1.10)\n\n#Plot data for Korea\nkr_spec_barplot = sns.barplot(data = kr_spec_perc,\n                            x='Majors', y='Percentage of Majors', hue='Gender',\n                            ax = spec_comp_ax[0], palette = ['#EA744A', '#4AC0EA'])\nkr_spec_barplot.set_xticklabels(kr_spec_barplot.get_xticklabels(), rotation = 80)\nkr_spec_barplot.set_title('South Korea')\n\n\n#Plot data for Globe\nglob_spec_barplot = sns.barplot(data = glob_spec_perc,\n                            x='Majors', y='Percentage of Majors', hue='Gender',\n                            ax = spec_comp_ax[1], palette = ['#EA744A', '#4AC0EA'])\nglob_spec_barplot.set_xticklabels(glob_spec_barplot.get_xticklabels(), rotation = 80)\nglob_spec_barplot.set_title('Global')\n\n\n#Plot data for US\nus_spec_barplot = sns.barplot(data = us_spec_perc,\n                            x='Majors', y='Percentage of Majors', hue='Gender',\n                            ax = spec_comp_ax[2], palette = ['#EA744A', '#4AC0EA'])\nus_spec_barplot.set_xticklabels(us_spec_barplot.get_xticklabels(), rotation = 80)\nus_spec_barplot.set_title('United States');\n\n#Standardize y axises\nkr_spec_barplot.set_yticks(ticks = [50, 40, 30, 20, 10]);\nglob_spec_barplot.set_yticks(ticks = [50, 40, 30, 20, 10]);\nus_spec_barplot.set_yticks(ticks = [50, 40, 30, 20, 10]);\nsns.despine(left='True')","81e11224":"#Function converting data labels to numbers\ndef cat_to_num(df):\n    #for responses in 2020\n    #converts from strings to numerical data\n    #I put inputted the value of salary that was right in between the range of salaries in order for a fair estimate of salaries\n    conv_dict = {'$0-999':500, '10,000-14,999':12500, '1,000-1,999':1500, '100,000-124,999': 112500,\n                '40,000-49,999':45000, '30,000-39,999':35000, '50,000-59,999': 55000, '5,000-7,499':6250,\n                '15,000-19,999':17500, '60,000-69,999':65000, '20,000-24,999': 22500, '70,000-79,999':75000,\n                '7,500-9,999':8750, '150,000-199,999':175000, '2,000-2,999':2500, '125,000-149,999':137500,\n                '25,000-29,999':27500, '90,000-99,999':95000, '4,000-4,999':4500, '80,000-89,999':85000,\n                '3,000-3,999':3500, '200,000-249,999':225000, '300,000-500,000':400000, '> $500,000':500000,\n                '250,000-299,999':275000}\n    df = df['Q24'].map(conv_dict)\n    return df\n\n#min yearly salary was calculated by hourly wage * 40(hr workweek) * 52(weeks in a year)\n#16259.152 USD--> korea's lowest possible yearly salary\n#300000 --> took out the biggest salary outliers so the graph looked a little bit better\n\n#Get male and female salary dataframes for korea\nkr_sal_wom = cat_to_num(kr_2020[kr_2020['Q2']=='Woman']['Q24'].to_frame()).to_frame()\nkr_sal_wom = kr_sal_wom.drop(kr_sal_wom[kr_sal_wom['Q24'] < 16259.152].index) #take out outliers\nkr_sal_men = cat_to_num(kr_2020[kr_2020['Q2']=='Man']['Q24'].to_frame()).to_frame()\nkr_sal_men = kr_sal_men.drop(kr_sal_men[(kr_sal_men['Q24'] < 16259.152) | (kr_sal_men['Q24'] > 300000)].index) #take out outliers\nkr_sal_men = kr_sal_men.rename(columns = {'Q24': 'Salary in USD'})\nkr_sal_wom = kr_sal_wom.rename(columns = {'Q24': 'Salary in USD'})\nkr_sal_men = kr_sal_men.assign(Gender='Men')\nkr_sal_wom = kr_sal_wom.assign(Gender='Women')\n\n#Combine male and female dataframes for korea\nkr_womenvsmen = pd.concat([kr_sal_wom, kr_sal_men])\n\n#Get male and female salary dataframes for US\nus_sal_wom = cat_to_num(us_2020[us_2020['Q2']=='Woman']['Q24'].to_frame()).to_frame()\nus_sal_wom = us_sal_wom.drop(us_sal_wom[(us_sal_wom['Q24'] < 15080.0) | (us_sal_wom['Q24'] > 300000)].index) #take out outliers\nus_sal_men = cat_to_num(us_2020[us_2020['Q2']=='Man']['Q24'].to_frame()).to_frame()\nus_sal_men = us_sal_men.drop(us_sal_men[(us_sal_men['Q24'] < 15080.0) | (us_sal_men['Q24'] > 300000)].index) #take out outliers\nus_sal_men = us_sal_men.rename(columns = {'Q24': 'Salary in USD'})\nus_sal_wom = us_sal_wom.rename(columns = {'Q24': 'Salary in USD'})\nus_sal_men = us_sal_men.assign(Gender='Men')\nus_sal_wom = us_sal_wom.assign(Gender='Women')\n\n#Combine male and female dataframes for US\nus_womenvsmen = pd.concat([us_sal_wom, us_sal_men]) #df for boxplot\n\n\n#Get male and female salary dataframes for Globe\nglob_sal_wom = cat_to_num(resp_2020[resp_2020['Q2']=='Woman']['Q24'].to_frame()).to_frame()\nglob_sal_wom = glob_sal_wom.drop(glob_sal_wom[(glob_sal_wom['Q24'] < 15080.0) | (glob_sal_wom['Q24'] > 300000)].index) #take out outliers\nglob_sal_men = cat_to_num(resp_2020[resp_2020['Q2']=='Man']['Q24'].to_frame()).to_frame()\nglob_sal_men = glob_sal_men.drop(glob_sal_men[(glob_sal_men['Q24'] < 15080.0) | (glob_sal_men['Q24'] > 300000)].index) #take out outliers\nglob_sal_men = glob_sal_men.rename(columns = {'Q24': 'Salary in USD'})\nglob_sal_wom = glob_sal_wom.rename(columns = {'Q24': 'Salary in USD'})\nglob_sal_men = glob_sal_men.assign(Gender='Men')\nglob_sal_wom = glob_sal_wom.assign(Gender='Women')\n\n#Combine male and female dataframes for Globe\nglob_womenvsmen = pd.concat([glob_sal_wom, glob_sal_men]) #df for boxplot\n\n#Create figure and use gridspec to create plots\nsal_comp_fig = plt.figure(constrained_layout = True)\nsal_comp_fig.suptitle('Male and Female Wage Comparisons by Region', y=1.10)\nsal_comp_fig.set_size_inches(20, 12)\nsal_comp_gs = gridspec.GridSpec(ncols=2, nrows=2, figure=sal_comp_fig)\nsal_comp_ax1 = plt.subplot(sal_comp_gs[0, :])\nsal_comp_ax2 = plt.subplot(sal_comp_gs[1, 0])\nsal_comp_ax3 = plt.subplot(sal_comp_gs[1, 1])\n\n    \n#Plot data for Korea\nkr_womvsmen_boxplot = sns.violinplot(data = kr_womenvsmen, x='Gender', y='Salary in USD', ax=sal_comp_ax1,\n                                    palette = ['#EA744A', '#4AC0EA'])\nkr_womvsmen_boxplot.set_title('South Korea')\nkr_sal_medians = kr_womenvsmen.groupby(['Gender'])['Salary in USD'].median() #added median salary text\nkr_sal_v_offset = kr_womenvsmen['Salary in USD'].median()*0.02\nfor xtick in kr_womvsmen_boxplot.get_xticks():\n    kr_womvsmen_boxplot.text(xtick,kr_sal_medians[xtick-1]+ kr_sal_v_offset,kr_sal_medians[xtick-1], \n            horizontalalignment='center',color='white',weight='semibold', size = 20) #took out size='small'\n\n\n#Plot data for Globe\nglob_womvsmen_boxplot = sns.violinplot(data = glob_womenvsmen, x='Gender', y='Salary in USD', ax = sal_comp_ax2,\n                                      palette = ['#EA744A', '#4AC0EA'])\nglob_womvsmen_boxplot.set_title('Global')\nglob_sal_medians = glob_womenvsmen.groupby(['Gender'])['Salary in USD'].median() #added median salary text\nglob_sal_v_offset = glob_womenvsmen['Salary in USD'].median()*0.02\nfor xtick in glob_womvsmen_boxplot.get_xticks():\n    glob_womvsmen_boxplot.text(xtick,glob_sal_medians[xtick-1]+ glob_sal_v_offset,glob_sal_medians[xtick-1], \n            horizontalalignment='center',color='white',weight='semibold', size = 20) #took out size='small'\n\n#Plot data for US\nus_womvsmen_boxplot = sns.violinplot(data = us_womenvsmen, x='Gender', y='Salary in USD', ax = sal_comp_ax3,\n                                    palette = ['#EA744A', '#4AC0EA'])\nus_womvsmen_boxplot.set_title('United States')\nus_sal_medians = us_womenvsmen.groupby(['Gender'])['Salary in USD'].median() #added median salary text\nus_sal_v_offset = us_womenvsmen['Salary in USD'].median()*0.02 \nfor xtick in us_womvsmen_boxplot.get_xticks():\n    us_womvsmen_boxplot.text(xtick,us_sal_medians[xtick-1]+ us_sal_v_offset,us_sal_medians[xtick-1], \n            horizontalalignment='center',color='white',weight='semibold', size = 20) #took out size='small'\nsns.despine(left='True')","1caed725":"#Function for counting how many elements within el_list exist in one row of dataframe\ndef count_ele(df, el_list):\n    #returns count of elements that are within el_list in one row of dataframe \n    count = df[df['Job Type'].str.contains('|'.join(el_list))]\n    count = count['Percentage of Jobs'].sum()\n    \n    return count\n\n#Function for returning job distribution data for men and women\ndef job_dist(df):\n\n    #Split jobs into 4 categories - scientist, analyst, leader, engineer\n    job_excl = ['Currently not employed', 'Student', 'Other']\n    sci = ['Data Scientist', 'Research Scientist', 'Statistician']\n    eng = ['Software Engineer', 'Data Engineer', 'DBA\/Database Engineer', 'Machine Learning Engineer']\n    lead = ['Product\/Project Manager']\n    anal = ['Data Analyst', 'Business Analyst']\n\n    #Take out null values\n    w_out_null = df[~df['Q5'].isnull()]\n    job_titles = w_out_null[~w_out_null['Q5'].str.contains('|'.join(job_excl))]\n\n    #Rename and reorder dataframe\n    job_titles = job_titles[['Q2', 'Q5']].value_counts().to_frame().reset_index()\n    job_titles = job_titles.rename(columns = {'Q2': 'Gender', 'Q5': 'Job Type', 0: 'Percentage of Jobs'})\n\n    #Count number of men in each category\n    man_job_titles = job_titles[job_titles['Gender']=='Man']\n    man_sci_count = count_ele(man_job_titles, sci)\n    man_eng_count = count_ele(man_job_titles, eng)\n    man_lead_count = count_ele(man_job_titles, lead)\n    man_anal_count = count_ele(man_job_titles, anal)\n\n    #Create dataframe for plotting for men\n    total_man = pd.DataFrame({'Gender': ['Men', 'Men', 'Men', 'Men'],\n                              'Job Type': ['Engineers', 'Leaders', 'Scientists', 'Analysts'],\n                             'Percentage of Jobs': [man_eng_count, man_lead_count, man_sci_count, man_anal_count]})\n    man_sum = man_job_titles['Percentage of Jobs'].sum()\n    total_man['Percentage of Jobs'] = total_man['Percentage of Jobs'].apply(lambda x: (x\/man_sum) * 100)\n\n    #Count number of men in each category\n    wom_job_titles = job_titles[job_titles['Gender']=='Woman']\n    wom_sci_count = count_ele(wom_job_titles, sci)\n    wom_eng_count = count_ele(wom_job_titles, eng)\n    wom_lead_count = count_ele(wom_job_titles, lead)\n    wom_anal_count = count_ele(wom_job_titles, anal)\n\n    #Create dataframe for plotting for women\n    total_wom = pd.DataFrame({'Gender': ['Women', 'Women', 'Women', 'Women'],\n                              'Job Type': ['Engineers', 'Leaders', 'Scientists', 'Analysts'],\n                             'Percentage of Jobs': [wom_eng_count, wom_lead_count, wom_sci_count, wom_anal_count]})\n    wom_sum = wom_job_titles['Percentage of Jobs'].sum()\n    total_wom['Percentage of Jobs'] = total_wom['Percentage of Jobs'].apply(lambda x: (x\/wom_sum) * 100)\n    \n    #Combine male and female dataframes\n    df_for_graph = pd.concat([total_wom, total_man])\n\n    return df_for_graph\n\n#Create figure\njob_comp_fig, job_comp_ax = plt.subplots(1,3)\njob_comp_fig.set_size_inches(27, 6)\njob_comp_fig.suptitle('Gender Distribution in Job Types by Region', y=1.10)\n\n#Plot data for Korea\nkr_job_comp = job_dist(kr_2020)\nkr_job_comp_barplot = sns.barplot(data = kr_job_comp,\n                                 x='Job Type', y='Percentage of Jobs', hue='Gender',\n                                 ax=job_comp_ax[0], palette = ['#EA744A', '#4AC0EA'])\nkr_job_comp_barplot.set_title('South Korea')\n\n#Plot data for Globe\nglob_job_comp = job_dist(resp_2020)\nglob_job_comp_barplot = sns.barplot(data = glob_job_comp,\n                                 x='Job Type', y='Percentage of Jobs', hue='Gender',\n                                 ax=job_comp_ax[1], palette = ['#EA744A', '#4AC0EA'])\nglob_job_comp_barplot.set_title('World')\n\n#Plot data for US\nus_job_comp = job_dist(us_2020)\nus_job_comp_barplot = sns.barplot(data = us_job_comp,\n                                 x='Job Type', y='Percentage of Jobs', hue='Gender',\n                                 ax=job_comp_ax[2], palette = ['#EA744A', '#4AC0EA'])\nus_job_comp_barplot.set_title('United States');\n\n#Standardize y axises\nkr_job_comp_barplot.set_yticks(ticks = list(range(0, 110, 20)));\nglob_job_comp_barplot.set_yticks(ticks = list(range(0, 110, 20)));\nus_job_comp_barplot.set_yticks(ticks = list(range(0, 110, 20)));\nsns.despine(left='True')","72629b11":"#Function converting data labels to numbers\ndef cat_to_num(df):\n    #for responses in 2020\n    #converts from strings to numerical data\n    #I put inputted the value of salary that was right in between the range of salaries in order for a fair estimate of salaries\n    conv_dict = {'$0-999':500, '10,000-14,999':12500, '1,000-1,999':1500, '100,000-124,999': 112500,\n                '40,000-49,999':45000, '30,000-39,999':35000, '50,000-59,999': 55000, '5,000-7,499':6250,\n                '15,000-19,999':17500, '60,000-69,999':65000, '20,000-24,999': 22500, '70,000-79,999':75000,\n                '7,500-9,999':8750, '150,000-199,999':175000, '2,000-2,999':2500, '125,000-149,999':137500,\n                '25,000-29,999':27500, '90,000-99,999':95000, '4,000-4,999':4500, '80,000-89,999':85000,\n                '3,000-3,999':3500, '200,000-249,999':225000, '300,000-500,000':400000, '> $500,000':500000,\n                '250,000-299,999':275000}\n    df = df['Q24'].map(conv_dict)\n    return df\n\n#min yearly salary was calculated by hourly wage * 40(hr workweek) * 52(weeks in a year)\n#16259.152 USD--> korea's lowest possible yearly salary\n#300000 --> took out the biggest salary outliers so the graph looked a little bit better\n\n#Get male and female salary dataframes for korea\nkr_sal_wom = cat_to_num(kr_2020[kr_2020['Q2']=='Woman']['Q24'].to_frame()).to_frame()\nkr_sal_wom = kr_sal_wom.drop(kr_sal_wom[kr_sal_wom['Q24'] < 16259.152].index) #take out outliers\nkr_sal_men = cat_to_num(kr_2020[kr_2020['Q2']=='Man']['Q24'].to_frame()).to_frame()\nkr_sal_men = kr_sal_men.drop(kr_sal_men[(kr_sal_men['Q24'] < 16259.152) | (kr_sal_men['Q24'] > 300000)].index) #take out outliers\nkr_sal_men = kr_sal_men.rename(columns = {'Q24': 'Salary in USD'})\nkr_sal_wom = kr_sal_wom.rename(columns = {'Q24': 'Salary in USD'})\nkr_sal_men = kr_sal_men.assign(Gender='Men')\nkr_sal_wom = kr_sal_wom.assign(Gender='Women')\n\n#Combine male and female dataframes for korea\nkr_womenvsmen = pd.concat([kr_sal_wom, kr_sal_men])\n\n#Get male and female salary dataframes for US\nus_sal_wom = cat_to_num(us_2020[us_2020['Q2']=='Woman']['Q24'].to_frame()).to_frame()\nus_sal_wom = us_sal_wom.drop(us_sal_wom[(us_sal_wom['Q24'] < 15080.0) | (us_sal_wom['Q24'] > 300000)].index) #take out outliers\nus_sal_men = cat_to_num(us_2020[us_2020['Q2']=='Man']['Q24'].to_frame()).to_frame()\nus_sal_men = us_sal_men.drop(us_sal_men[(us_sal_men['Q24'] < 15080.0) | (us_sal_men['Q24'] > 300000)].index) #take out outliers\nus_sal_men = us_sal_men.rename(columns = {'Q24': 'Salary in USD'})\nus_sal_wom = us_sal_wom.rename(columns = {'Q24': 'Salary in USD'})\nus_sal_men = us_sal_men.assign(Gender='Men')\nus_sal_wom = us_sal_wom.assign(Gender='Women')\n\n#Combine male and female dataframes for US\nus_womenvsmen = pd.concat([us_sal_wom, us_sal_men]) #df for boxplot\n\n\n#Get male and female salary dataframes for Globe\nglob_sal_wom = cat_to_num(resp_2020[resp_2020['Q2']=='Woman']['Q24'].to_frame()).to_frame()\nglob_sal_wom = glob_sal_wom.drop(glob_sal_wom[(glob_sal_wom['Q24'] < 15080.0) | (glob_sal_wom['Q24'] > 300000)].index) #take out outliers\nglob_sal_men = cat_to_num(resp_2020[resp_2020['Q2']=='Man']['Q24'].to_frame()).to_frame()\nglob_sal_men = glob_sal_men.drop(glob_sal_men[(glob_sal_men['Q24'] < 15080.0) | (glob_sal_men['Q24'] > 300000)].index) #take out outliers\nglob_sal_men = glob_sal_men.rename(columns = {'Q24': 'Salary in USD'})\nglob_sal_wom = glob_sal_wom.rename(columns = {'Q24': 'Salary in USD'})\nglob_sal_men = glob_sal_men.assign(Gender='Men')\nglob_sal_wom = glob_sal_wom.assign(Gender='Women')\n\n#Combine male and female dataframes for Globe\nglob_womenvsmen = pd.concat([glob_sal_wom, glob_sal_men]) #df for boxplot\n\n#Create figure and use gridspec to create plots\nsal_comp_fig = plt.figure(constrained_layout = True)\nsal_comp_fig.suptitle('Male and Female Wage Comparisons by Region', y=1.10)\nsal_comp_fig.set_size_inches(20, 12)\nsal_comp_gs = gridspec.GridSpec(ncols=2, nrows=2, figure=sal_comp_fig)\nsal_comp_ax1 = plt.subplot(sal_comp_gs[0, :])\nsal_comp_ax2 = plt.subplot(sal_comp_gs[1, 0])\nsal_comp_ax3 = plt.subplot(sal_comp_gs[1, 1])\n\n    \n#Plot data for Korea\nkr_womvsmen_boxplot = sns.violinplot(data = kr_womenvsmen, x='Gender', y='Salary in USD', ax=sal_comp_ax1,\n                                    palette = ['#EA744A', '#4AC0EA'])\nkr_womvsmen_boxplot.set_title('South Korea')\nkr_sal_medians = kr_womenvsmen.groupby(['Gender'])['Salary in USD'].median() #added median salary text\nkr_sal_v_offset = kr_womenvsmen['Salary in USD'].median()*0.02\nfor xtick in kr_womvsmen_boxplot.get_xticks():\n    kr_womvsmen_boxplot.text(xtick,kr_sal_medians[xtick-1]+ kr_sal_v_offset,kr_sal_medians[xtick-1], \n            horizontalalignment='center',color='white',weight='semibold', size = 20) #took out size='small'\n\n\n#Plot data for Globe\nglob_womvsmen_boxplot = sns.violinplot(data = glob_womenvsmen, x='Gender', y='Salary in USD', ax = sal_comp_ax2,\n                                      palette = ['#EA744A', '#4AC0EA'])\nglob_womvsmen_boxplot.set_title('Global')\nglob_sal_medians = glob_womenvsmen.groupby(['Gender'])['Salary in USD'].median() #added median salary text\nglob_sal_v_offset = glob_womenvsmen['Salary in USD'].median()*0.02\nfor xtick in glob_womvsmen_boxplot.get_xticks():\n    glob_womvsmen_boxplot.text(xtick,glob_sal_medians[xtick-1]+ glob_sal_v_offset,glob_sal_medians[xtick-1], \n            horizontalalignment='center',color='white',weight='semibold', size = 20) #took out size='small'\n\n#Plot data for US\nus_womvsmen_boxplot = sns.violinplot(data = us_womenvsmen, x='Gender', y='Salary in USD', ax = sal_comp_ax3,\n                                    palette = ['#EA744A', '#4AC0EA'])\nus_womvsmen_boxplot.set_title('United States')\nus_sal_medians = us_womenvsmen.groupby(['Gender'])['Salary in USD'].median() #added median salary text\nus_sal_v_offset = us_womenvsmen['Salary in USD'].median()*0.02 \nfor xtick in us_womvsmen_boxplot.get_xticks():\n    us_womvsmen_boxplot.text(xtick,us_sal_medians[xtick-1]+ us_sal_v_offset,us_sal_medians[xtick-1], \n            horizontalalignment='center',color='white',weight='semibold', size = 20) #took out size='small'\nsns.despine(left='True')","1a585e96":"#Function for getting ML usage dataframe that is plottable\ndef ml_usage(df):\n    \n    #Create dictionary to rename options for better readability\n    conv_dict = {'We have well established ML methods (i.e., models in production for more than 2 years)': 'Model Usage 2+ Years',\n                'We are exploring ML methods (and may one day put a model into production)': 'Exploring ML(NM)',\n                'We recently started using ML methods (i.e., models in production for less than 2 years)': 'Model Usage <2 Years',\n                'No (we do not use ML methods)': 'No ML Usage',\n                'We use ML methods for generating insights (but do not put working models into production)': 'ML Used for Insight(NM)'}\n    \n    #Create new dataframe\n    ml_usage = df['Q22'].value_counts().to_frame().reset_index()\n    ml_usage = ml_usage.rename(columns = {'index': 'ML Usage for Firms', 'Q22': 'Number of Firms'})\n    ml_usage = ml_usage[ml_usage['ML Usage for Firms'] != 'I do not know'] #Removed these because they weren't useful for analysis\n    ml_usage['ML Usage for Firms'] = ml_usage['ML Usage for Firms'].map(conv_dict)\n\n    return ml_usage\n\n#Gather and reorder data for Korea\nkr_ml_usage = ml_usage(kr_2020)\nkr_ml_usage = kr_ml_usage.reindex([3, 0, 2, 1, 5])\n\n#Gather and reorder data for US\nus_ml_usage_index = [3, 1, 4, 2, 0]\nus_ml_usage = ml_usage(us_2020)\nus_ml_usage = us_ml_usage.reindex(us_ml_usage_index)\n\n#Create figure\nml_usage_comp_fig, ml_usage_comp_ax = plt.subplots(1,1)\nml_usage_comp_fig.set_size_inches(20, 6)\nml_usage_comp_fig.suptitle('Machine Learning(ML) Method Usage in Firms by Region (NM = No Model)', y=1.10)\n\n#Combine dataframes amongst regions after naming them\nkr_ml_usage = kr_ml_usage.assign(Country = 'South Korea')\nus_ml_usage = us_ml_usage.assign(Country = 'United States')\ntot_ml_usage = pd.concat([kr_ml_usage, us_ml_usage])\n\n#Plot data of all regions\ntot_ml_usage_barplot = sns.barplot(data = tot_ml_usage,\n                                  x='ML Usage for Firms', y='Number of Firms', hue = 'Country',\n                                  palette = [\n                                            '#FA62A1', '#62FABC', '#FA62A1', '#62FABC', '#FA62A1', '#62FABC'])\nsns.despine(left='True')","b88b2d1d":"#Function creates df for plotting money used for cloud services\ndef res_funds(df, country):\n    #Takes in df of country and country name in string\n    \n    #Remove 0 USD, 1-99, because I want to look at researchers who need funding for big projects not just personal ones\n    conv_dict = {'$0 ($USD)': '0', '$1000-$9,999': '1000-9,999' , '$100-$999': '100-999',\n            '$1-$99': '1-99', '$10,000-$99,999': '10,000-99,999', '$100,000 or more ($USD)': '100,000 or more'}\n    \n    #Create dataframe for raw numbers of people using cloud services\n    fund_df = df[df['Q5'] == 'Research Scientist']['Q25'].dropna()\n    fund_df = fund_df.map(conv_dict)\n    fund_df = fund_df.value_counts().to_frame().reset_index()\n    fund_df = fund_df.rename(columns = {'index': 'Cost of ML and Cloud Computing Services(USD)', 'Q25': 'Number of People\/Teams Using Services'})\n    fund_df = fund_df[(fund_df['Cost of ML and Cloud Computing Services(USD)'] != '0') & (fund_df['Cost of ML and Cloud Computing Services(USD)'] != '1-99')]\n    fund_df = fund_df.assign(Country = country)\n    \n    #Create dataframe for percentage of people using cloud services(Unused)\n    perc_df = fund_df\n    perc_df = perc_df.rename(columns = {'Cost of ML and Cloud Computing Services(USD)': 'Cost of ML and Cloud Computing Services(USD)', \n                                        'Number of People\/Teams Using Services': 'Percentage of People\/Teams Using Services'})\n    count = perc_df['Percentage of People\/Teams Using Services'].sum()\n    perc_df['Percentage of People\/Teams Using Services'] = perc_df['Percentage of People\/Teams Using Services'].apply(lambda x: x\/count)\n    \n    return fund_df, perc_df\n\n#Create dataframe for Korea\nkr_res_funds, perc_kr_res_f = res_funds(kr_2020, 'South Korea')\nkr_res_funds = kr_res_funds.reindex([2,3,1,4])\nperc_kr_res_f = perc_kr_res_f.reindex([0, 3, 1, 5])\n\n#Create dataframe for Globe\nglob_res_funds, perc_glob_res_f = res_funds(resp_2020, 'World')\nglob_res_funds = glob_res_funds.reindex([2, 1, 4, 5])\nperc_glob_res_f = perc_glob_res_f.reindex([2, 1, 4, 5])\n\n#Create dataframe for US\nus_res_funds, perc_us_res_f = res_funds(us_2020, 'United States')\nus_res_funds = us_res_funds.reindex([4, 1, 3, 2])\nperc_us_res_f = perc_us_res_f.reindex([4,1,3,2])\n\n#Combine dataframes amongst regions\ntot_res_funds = pd.concat([kr_res_funds, us_res_funds])\ntot_perc_res_funds = pd.concat([perc_kr_res_f, perc_glob_res_f, perc_us_res_f])\n\n#Create figure\nres_funds_comp_fig, res_funds_comp_ax = plt.subplots(1,1)\nres_funds_comp_fig.set_size_inches(10, 6)\n\n#Plot data for all 3 regions\ntot_res_funds_barplot = sns.barplot(data = tot_res_funds,\n                                   x='Cost of ML and Cloud Computing Services(USD)', y = 'Number of People\/Teams Using Services',\n                                   hue='Country',\n                                   palette = ['#FA62A1', '#62FABC', '#FA62A1', '#62FABC', '#FA62A1', '#62FABC'])\ntot_res_funds_barplot.set_title('Researcher\/Team Usage of ML\/Cloud Computing Services by Region', y=1.10);\nres_funds_comp_ax.set_ylabel('Number Using Services');\ntot_res_funds_barplot.set_xticklabels(tot_res_funds_barplot.get_xticklabels(), rotation = 30);\nsns.despine(left='True')","f484fc02":"#Create dictionary to change label names for readability\ncomp_size_conv_dict = {'0-49 employees': '0-49', '50-249 employees': '50-249', '1000-9,999 employees': '1000-9,999',\n                      '250-999 employees': '250-999', '10,000 or more employees': '10,000 or more'}\n\n#Crate dataframe of Korean firm sizes\nkr_comp_size = kr_2020['Q20'].value_counts().to_frame().reset_index()\nkr_comp_size = kr_comp_size.rename(columns = {'index': 'Number of Employees Employed by Firm', 'Q20': 'Number of Firms'})\nkr_comp_size['Number of Employees Employed by Firm'] = kr_comp_size['Number of Employees Employed by Firm'].map(comp_size_conv_dict)\nkr_comp_size = kr_comp_size.reindex([0, 1, 3, 2, 4])\n\n#Create figure\nkr_comp_size_fig, kr_comp_size_ax = plt.subplots(1,1)\nkr_comp_size_fig.set_size_inches(10, 6)\n\n#Plot data\nkr_comp_size_barplot = sns.barplot(data = kr_comp_size,\n                                  x='Number of Employees Employed by Firm', y='Number of Firms',\n                                  palette = ['#FA62A1', 'lightgray', 'lightgray', 'lightgray', 'lightgray'])\nkr_comp_size_barplot.set_title('Size of Firms Korean Kagglers Work At', y=1.10);\nkr_comp_size_barplot.set_xticklabels(kr_comp_size_barplot.get_xticklabels(), rotation = 30);\nsns.despine(left='True')","f6efa970":"Korean Kagglers are predominantly male. **Out of the 266 respondents this year, 220 are men, and 46 are women, meaning that 83% are men, and 17% are women.**","106d2916":"# Women in Engineering\n\nWomen are present in the sciences, but much less so in engineering. A study by Korea's Center for Women in Science, Engineering, and Technology (WISET), showed that in 2018, **although 53.3% of undergraduates in natural sciences were female, just 21.8% of undergraduates in engineering were female**. Even in the natural sciences, the equality drops off at the doctorate level, where only 35.9% of doctorate graduates were female. These factors contribute to gender inequality in STEM fields[15].\n\nAt first glance, it looks like the difference between the percentage of STEM majors for men and women isn't that large, but if we look at some selected STEM majors, we can get more insight. **Korean male Kagglers were 13% more likely to major in Computer Science\/Engineering than Korean female Kagglers were**, which is the major that arguably sets up students best for a career in AI. The gap in Korea is relatively larger than that of the world or the US. \n\nAn interesting finding in all three regions is that women are more likely to, or are almost just as likely as men to pursue Math\/Statistics, Life Sciences\/Medical, Environmental Sciences\/Geology as an undergraduate major. This could be due to more women preferring to major in the natural sciences instead of engineering. \n\nDisclaimer: Percentages in the graph do not add to 100 because not all of the majors from the STEM major category are included. ","ccd06ddf":"# Inequality in the Workforce\n\nFemale Kagglers in Korea are far more likely to become analysts or scientists than engineers and leaders when they join the workforce. **According to the survey data, women in Korea are 4 times less likely to become engineers than men, and there were no women who held leadership positions, compared to the 7% of men surveyed that reported that they held leadership positions**. This is reflected in a survey by Korea' Ministry of Gender Equality and Family in 2020, where it was found that in Korea, **only 7.6% of officers in high ranking positions were women[16]**. If we compare Korea's results to the world or the US, we find that the same trends persist, but that the discrepancies are larger in Korea. \n\nThis lack of diversity in the field is concerning for Korea. Growth is one thing, but growing in the right direction is crucial as well. Without women present in all parts of the field, it becomes more likely that gender biases and stereotypes will make their way into technologies, further cementing a dominant ideology as part of our lives[17]. The only way to make sure that AI doesn't contain biases against women is to make sure that women contribute to the creation of such AI.","c9078ca5":"<a id=\"Factor2\"><\/a>\n# Factor 2 - A Gender Chasm\nWomen are dissuaded from entering the workforce, and find it harder to land a job due to gender biases. This is true everywhere in the world, but compared to Western nations, Korean women have more barriers to break through. Choi Mi-Jin, president of the Women Labor Law Support Center, put it this way: **\"Our society is dominated by stereotypes about gender roles. Men are the breadwinners, and women are responsible for child-rearing and housework. This is why gender discrimination in hiring is widely accepted and continues to be practiced.\"[11]**\n\nIt is in South Korea's best interests to bridge this gap. Korea's working age population is expected to decline very soon, which makes better integration of women into the workforce a necessity to maintain economic growth. In 2019, the IMF found that if Korea could raise female participation in the workforce to be the same as male participation by 2035, it would be able to enjoy a **7% GDP growth**. However, if it failed to do so, economic competitiveness would decline due to aging women dropping out of the workforce and there not being enough new women to replace them[12].\n\nThe declining population and gender discrimination affects the AI sector as well. Bridging the gender gap is not only a matter of achieving greater equality, but is also necessary to increase Korea's AI workforce. ","40ff66fc":"# Korean Companies Pay Less, AI Experts Move Elsewhere\n\nKorea's AI workforce is being drained into other countries, especially the US and China, where they offer higher salaries and better environments for research[19]. Because Korea's AI sector is still very young, this especially damages its capability to foster domestic AI talent. \n\nThe difference in wages is reflected in median wage comparisons. **The median wage for both men and women are 10,000 USD higher globally than it is in Korea, and in the United States, it is 67,500 USD higher for women, and 57,500 USD higher for men.** These offers are especially more attractive to women, because they enjoy a relatively higher increase in salary. Considering that many South Koreans want to leave the country, and that foreign countries can offer them a higher salary, it's almost inevitable that Korea's AI talent will continue to move to greener pastures if things don't change. ","fad0f56a":"# Stopping Brain Drain\n\nKorean companies may find it hard to fork out impressive salaries to match that of those offered by Chinese, or US companies. And changing Korean work culture is far too massive of an undertaking to be considered a solution because South Korea needs to lower rates of brain drain as soon as possible. A quick, practical step in the right direction is instituting better research infrastructure through government funding and loosening up regulations on gathering data so that researchers can gather big data to undertake the big projects they want to carry out.\n\nThe good news for Korea's AI sector is that **the Korean government proposed investing 2.2 billion USD into the Digital New Deal, a government initiative focused on growing digital technologies that include big data and AI**. An additional 2 billion USD is to be invested into AI research by 2022. Furthermore, the government aims to create a \"data dam\" that protects individual privacy yet gives access to large datasets that researchers need to carry out their work. The Korean government has recognized some key problems holding back the AI sector. Now it just needs to execute its plans effectively[28].","14aa2a96":"<a id=\"Hope\"><\/a>\n# Why Things Will Get Better\n\nAs much as things may look bad, there are still many reasons to be optimistic about Korea's future in AI, and the nation's overall well-being. \n\nFor one, the younger generation is pushing back against toxic masculinity and traditional work culture. When the Me Too movement that was started in the United States spread to Korea, women took to the streets and social media to condemn sexual abuse, share their experiences, and prosecute those who had wronged them. Policitians, coaches for professional athletes, abusers in the workplace, and even K-pop stars were tried for sexual abuse[29]. This opened up new discussions about gender inequality in Korea, which are still continuing today. Traditional work culture is also coming under fire as Korean millennials push for work-life balance, bringing about new Korean words such as *\"worabel\"* (short for work-life balance) and *\"kkondae\"* (the Korean equivalent for \"Ok, boomer\"). Improvements for work culture have come in the form of government policies that enforce maximum 52-hour workweeks, along with companies practicing new policies such as paternity leave, and allowing paid leave for employees whenever they choose, even if they're new employees[30].\n\nSpecifically in terms of AI, although Korea may be comparatively lacking in scientific research and university resources at the moment, Korea has an abundance of AI-related startups. **In a 2018 survey done on 7 countries (Korea, US, China, Japan, Europe, India, Israel), Korea placed second in terms of the number of AI startups (465 of them), bested just by the US, which had 1,393[8].** This is shown in the Kaggle survey data shown below as well. **45% of employed Korean Kagglers that chose to reveal the size of their firm reported that their firm employed 0-49 employees, suggesting that many Korean Kagglers work at small firms or startups.** This is another reason to be hopeful that Korea's AI sector will continue to grow. \n\nSome of these Korean AI startups are doing quite well for themselves. One such startup is Riid!, which offers AI-based solutions to education. If this name sounds familiar for some reason, it's because they launched a competition on Kaggle a couple months ago [here](https:\/\/www.kaggle.com\/c\/riiid-test-answer-prediction).","d67e46ce":"# A Severe Wage Gap\n\n**In a survey done by the OECD in 2018, South Korea placed 30th out of 36 OECD countries for women's employment, despite the country having the highest tertiary education rate for women between 25 and 34 years of age**, meaning that **Korean women aren't being employed despite their high level of education**[11]. In 2018, the World Economic Forum released a report on gender gaps. **The report ranked South Korea at 115th out of 149 countries overall**. The report showed large amounts of wage inequality between genders[13].\n\nThe wage gap is present in the Kaggle survey data as well. South Korea's wage gap between men and women is far more noticeable than that of the world or America. **Korea's gender wage gap based on the median wage is 10,000 USD**. The global wage gap is 10,000 USD as well, but keeping in mind that the global wage is, on average, higher than wages in Korea, Korea has a larger wage gap in proportion. Meanwhile, the US has the same median salary between men and women.\n\nThe data also shows that Korean male Kagglers have a higher range in salary than women do. In case you're unfamiliar with violin plots, violin plots are practically identical to box and whisker plots except for the fact that the width of the plot shows how concentrated datapoints are for that particular y value. For example, since the violin plot is the thickest\/stretched out for Korean women at the 45,000 USD mark, we know that of the Korean women surveyed, the highest proportion of them answered that they earn 45,000 USD per year. The violin plot for Korean wages shows that a higher proportion of men than women earn above 45,000 USD, which is the median wage for Korean women. Furthermore, **no Korean women earn above 100,000 USD, while no small proportion of Korean men do**. Although the wage gap is evident in the global data and the US data, the graphs don't even come close to showing the pronounced difference that the graph for Korea does. \n\nWithin the data, I excluded any unrealistic data below about 16,000 USD, based on Korea's yearly minimum wage. I also excluded wage data above 300,000 USD because they made the graphs unreadable. An interesting point I found when excluding outliers above 300,000 USD was that globally and in the US, both men and women had these high earners. **In Korea, women did not have high outlier salaries above 300,000 USD, while men did.**\n\nIf employers were less discriminatory towards women, then more women would be motivated to stay in the workplace, and therefore bolster the AI workforce. ","e1cea684":"\n<img align=middle src=\"http:\/\/img.koreatimes.co.kr\/upload\/newsV2\/images\/201807\/f1d24a6e189a4a269a92f1fea3314810.jpg\" width=\"600px\">\n\n<h6><center>In some ways, Korea is pretty high tech. In 2018, Incheon Airport installed helper robots to guide travelers[1].<\/center><\/h6>\n\n\n","4bb8fc6e":"# South Korea: Home to Samsung, But Few AI Experts\n**South Korea needs to modernize its education system, close the gender gap, and stop brain drain if it wants to build up its lagging AI sector.**\n\nPractically every male citizen in South Korea has to serve in the Korean military at some point in their life. Because I had lived most of my life in the US, I didn't know what to expect when I entered the service. So far, it has been a tumultuous experience in which I met, talked, and lived with randomly selected South Koreans from all over the nation. Through it, I was, albeit forcefully, somewhat reconnected to the culture of my home country. When talking to fellow soldiers, I discovered a significant amount of people who had a pessimistic outlook on their futures, and Korea's future. Some even compared living in Korea to \"hell.\" When I was researching why Korea's AI sector was lagging, I found that the same societal problems that my fellow soldiers struggled with were also hurting the AI industry. \n\nThere's a certain irony to this.  Many see Korea as a high-tech first world nation and think first about the glitz and glamor of Korean idols, or Samsung phones when they first think about the country. But beneath all the neon lights, there lie deeply ingrained societal problems and a weak AI sector that is hurt by them. \n\nI found that South Korea, despite being home to renowned tech superpowers like Samsung, is lacking in its AI sector due to 3 main factors: the education system, the gender gap, and brain drain. \n\n**Table of Contents**\n1. [Overview](#Overview)\n2. [Factor 1 - An Archaic Education System](#Factor1)\n3. [Factor 2 - A Gender Chasm](#Factor2)\n4. [Factor 3 - A Bad Case of Brain Drain](#Factor3)\n5. [Why Things Will Get Better](#Hope)\n6. [Last Remarks](#Last)\n7. [Thanks and References](#Thanks)","de06c1fb":"<a id=\"Last\"><\/a>\n# Last Remarks\n\nAs long as Koreans refuse to settle for the status quo and believe in their country, things will get better. Despite the hardships that come with living in Korea, Koreans still like their country deep inside. I know this is true for me and the Koreans I've met - within the service and outside of it. We sometimes give Korea a hard time, but it doesn't come from malicious intent - we just know that things could be so much better, and we have hope that things will change. \n\nMr. Roh, who works as an English teacher in South Korea, put it best: **\"Let\u2019s think of Korea as a big baseball team. This is my baseball team. Sometimes I don\u2019t like my coach, I don\u2019t like my team. My team sucks. But at the same time, inside we want to win the next game. Saying \u2018Hell Joseon\u2019 is actually [an] insult to our own team, hoping it might change the country.\"[23]**","f4e4a774":"# Lack of Research\n\nKorea also has less researchers than other nations, hurting its chances to get ahead in the AI industry. I included Japan in the data as a sanity check because Japan was the closest sized country compared to Korea out of the 7 countries surveyed in the study by The National Information Society Agency[8]. The survey data showed that **Korea had 26 Kagglers stating that they were research scientists, Japan had about 2 times as much at 53 Kagglers, and the US had about 5 times as much at 140 Kagglers**. **In terms of people researching machine learning, Korea had 41 Kagglers, Japan had 1.6 times as much at 66 Kagglers, and the US had about 7 times as much at 280 Kagglers.** Even if the comparison is not completely fair due to Korea being a smaller country than Japan or the US, I felt the need to show the comparative lack of manpower because Korea cannot hope to get ahead of the competition without at least coming somewhat close to the research manpower that other nations have. \n\nIf we make the reasonable assumption that most research scientist and researcher job positions require high-level education found in universities, we can once again carefully presume that Korea's lack of AI-centered university programs have a hand in the small amount of researchers. ","131e1bdc":"<a id=\"Factor1\"><\/a>\n# Factor 1 - An Archaic Education System\nSouth Korea is obsessed with education. This isn't such a big surprise if you consider two things. One, South Korea's culture is heavily influenced by Confucianism, which places a high importance on education. Two, South Korea went from one of the poorest countries in the world in the 1950s, to the world's 12th largest economy in 2018, in no small part due to extensive government investment in education[2]. Due to this, and other historical factors, Koreans see education as a means to economic prosperity. \n\nThis trend is well and alive today. In 2019, \"Elementary, middle and high school students spent 20.99 trillion won (17.6 billion USD) on private education[3].\" And some studies show that many South Korean students spend 16 hours or more studying at school and attending private prep schools called *hagwons*[2]. This is because **students' scores on *Suneung*, a nationally conducted standardized test for college admissions, is a deciding factor in what colleges they will attend, future income, employment prospects, and even future relationships[4].** Education is not just a stressful topic for South Koreans. It is the root of mental health problems that hurt countless South Korean students, even if they're still in elementary school.[5].\n\nBut if Korean students are so educated, they must be well-prepared to study topics such as AI and data science, right? Wrong. The South Korean education system is especially problematic because it is primarily based on rote memorization and test-taking[6]. This means students have trouble figuring out answers to new problems they haven't seen before[7], which is exactly what new and complex fields like AI require. Furthermore, studies show that Korean universities provide less programs to study AI than other nations do[8].\n\nIn this section, I'll show why the Korean education system, particularly universities, are ill-equipped to producing an AI workforce, and how that shows in the Kaggle survey data.","41d26a75":"# Inexperience in Machine Learning\n\nThe lack of university resources may be to blame for Korea's inexperience in machine learning.\n\nThe National Information Society Agency, a government agency in Korea, released a report showing that **as of 2018, 0 universities in Korea offered undergraduate, graduate, or doctorate programs for learning AI**. Furthermore, the report stated that **Korea placed last amongst 7 countries (Korea, United States, China, Japan, Europe, India, Israel) in the number of scientific papers published in AI[8]**. Even if Korean university students want to learn machine learning techniques, they have little opportunity to do so in classes. If we compare Korea to the US, a current world leader in AI, we can see that the US has numerous graduate, doctorate, and even undergraduate programs focused on AI[31].\n\nAlthough there is no evidence for causation, we can carefully venture to say that Korean Kagglers have less opportunity to study machine learning techniques in university compared to US Kagglers, which may be part of the reason why Korean Kagglers are inexperienced in machine learning. For a fairer comparison, I used the percentage of Kagglers per experience level rather than raw numbers because due to a larger population, the US is inevitably going to have more people in each category. I chose to compare Korea to the US because the US is a world leader in AI, which is what Korea should strive to be.\n\n**Korean Kagglers have, on maximum, 5-10 years of experience utilizing machine learning (ML) methods, while US Kagglers have users with 10-20 years of experience, and in some cases, 20 or more years of experience. Looking at the distribution, 5.7% of Korean Kagglers have 5-10 years of ML experience, while 15.4% of US Kagglers have 5-10 years of ML experience or more.** This showcases a large gap in experience, which may be due to the lack of educational resources available. ","117947cc":"<a id=\"Thanks\"><\/a>\n# Thanks and References\n\nI'd like to thank my fellow soldiers serving in the Korean military for treating me well and giving me inspiration for this notebook. Thank you [Leonie](https:\/\/www.kaggle.com\/iamleonie) for your notebook [Japan: Country of the Rising Women](https:\/\/www.kaggle.com\/iamleonie\/japan-country-of-the-rising-women). I learned a lot from it. I'd like to thank my friends Rachel, Darien, and Junyoung for looking through my notebook and giving me feedback.\n\nFinally, I'd like you thank you for reading through my notebook. \n\nThese are my references.\n\n[1] Technology takes off: AI-powered robots help travelers at Incheon Int\u2019l Airport. (2018, July 12). Korea Times. http:\/\/www.koreatimes.co.kr\/www\/art\/2018\/07\/141_252144.html\n\n[2] Roach, E. (2019, April 16). Education in South Korea. WENR. https:\/\/wenr.wes.org\/2018\/10\/education-in-south-korea\n\n[3] Herald, T. K. (2020, March 10). Students\u2019 private education spending surges to 10-year high in 2019. Korean Herald. http:\/\/www.koreaherald.com\/view.php?ud=20200310000780\n\n[4] Sharif, B. H. (2018, November 26). Suneung: The day silence falls over South Korea. BBC News. https:\/\/www.bbc.com\/news\/world-asia-46181240\n\n[5] Nearly 34 pct of S. Korean adolescents have thought about suicide over academic pressure: poll. (n.d.). Yonhap News Agency. https:\/\/en.yna.co.kr\/view\/AEN20190724007000315\n\n[6] Study: S. Korean kids learning too much math too early. (n.d.). Hankyoreh, Inc. http:\/\/english.hani.co.kr\/arti\/english_edition\/e_national\/693441.html\n\n[7] Fendos, J. F. (2017, October 13). [Justin Fendos] Why Korean students lack creativity. Korean Herald. http:\/\/www.koreaherald.com\/view.php?ud=20171013000786\n\n[8] Cho, C. S. H. (2020, January 2). \ud55c\uad6d AI \ub300\ud559 \ub17c\ubb38\uc218 \uae30\uc5c5\uc218 \u201c\uac08 \uae38 \uba40\ub2e4.\u201d Donga Science. http:\/\/dongascience.donga.com\/news.php?idx=33315\n\n[9] \uc774. (2020, August 17). S. Korea to offer AI classes as part of regular curriculum in high school. Yonhap News Agency. https:\/\/en.yna.co.kr\/view\/AEN20200817001900325\n\n[10] \uc138\uacc4 \uc720\uc218 \ub300\ud559\ub4e4\uc758 AI \uc5f0\uad6c\uc5ed\ub7c9 \ube44\uad50 \u2013 Sciencetimes. (n.d.). Science Times. https:\/\/www.sciencetimes.co.kr\/news\/%EC%84%B8%EA%B3%84-%EC%B5%9C%EA%B3%A0%EC%9D%98-%EC%9D%B8%EA%B3%B5%EC%A7%80%EB%8A%A5-%EB%8C%80%ED%95%99%EC%9D%80\/\n\n[11] Jeong, S. C. (2019, February 2). South Korea\u2019s glass ceiling: the women struggling to get hired by companies that only want men. CNN. https:\/\/edition.cnn.com\/2019\/01\/31\/asia\/south-korea-hiring-discrimination-intl\/index.html\n\n[12] Stangarone, T. (2019, June 15). Gender Inequality Makes South Korea Poorer. The Diplomat. https:\/\/thediplomat.com\/2019\/06\/gender-inequality-makes-south-korea-poorer\/\n\n[13] World Economic Forum. (2020). Global Gender Gap Report 2020. http:\/\/www3.weforum.org\/docs\/WEF_GGGR_2020.pdf\n\n[14] Wadhwa. (2019, May 17). There are fewer female than male STEM graduates in 107 of 114 economies. World Bank Blogs. https:\/\/blogs.worldbank.org\/opendata\/there-are-fewer-female-male-stem-graduates-107-114-economies\n\n[15] Looking into Statistics: Achievements of Support Programs for Promoting women in STEM during 10 years. (n.d.). Center for Women in Science, Engineering, and Technology(WISET). https:\/\/www.wiset.or.kr\/eng\/contents\/policy_statistics.jsp#policy_01\n\n[16] Ministry of Gender Equality and Family. (n.d.). Statistics. http:\/\/www.mogef.go.kr\/eng\/lw\/eng_lw_f002.do\n\n[17] Fatemi, F. (2020, February 17). Bridging The Gender Gap In AI. Forbes. https:\/\/www.forbes.com\/sites\/falonfatemi\/2020\/02\/17\/bridging-the-gender-gap-in-ai\/?sh=2c952d785ee8\n\n[18] National Bureau of Economic Research, Jaegeum Lim, J. L., & Jonathan Meer, J. M. (2017, December). Persistent Effects of Teacher-Student Gender Matches. National Bureau of Economic Research. https:\/\/doi.org\/10.3386\/w24128\n\n[19] Korea\u2019s AI workforce lags behind China, Japan. (2019, December 15). Koreatimes. https:\/\/www.koreatimes.co.kr\/www\/biz\/2020\/01\/367_280339.html\n\n[20] Park, P. H. J. (2019, December 30). 75% of younger S. Koreans want to leave country. Hankyoreh, Inc. http:\/\/english.hani.co.kr\/arti\/english_edition\/e_national\/922522.html\n\n[21] Study: South Korea\u2019s social mobility ladder is broken. (n.d.). Hankyoreh, Inc. http:\/\/english.hani.co.kr\/arti\/english_edition\/e_national\/732768.html#:%7E:text=Data%20published%20by%20the%20Korea,to%20unity%20and%20economic%20growth\n\n[22] Health status - Suicide rates - OECD Data. (n.d.). OECD. https:\/\/data.oecd.org\/healthstat\/suicide-rates.htm\n\n[23] Work, work, work, repeat: Inside \u201cHell Joseon.\u201d (2020, January 30). ABC News. https:\/\/www.abc.net.au\/news\/2020-01-30\/south-korea-hell-joseon-sampo-generation\/11844506?nw=0\n\n[24] Korean ICT Companies Forge AI Alliances against Google and Apple. (2020, May 26). Business Korea. http:\/\/www.businesskorea.co.kr\/news\/articleView.html?idxno=46409#:%7E:text=Korean%20ICT%20companies%20are%20forging,and%20joint%20AI%20technology%20development.\n\n[25] S. (2018, June 13). South Korea Aims High on AI, Pumps $2 Billion Into R&D. Medium. https:\/\/medium.com\/syncedreview\/south-korea-aims-high-on-ai-pumps-2-billion-into-r-d-de8e5c0c8ac5\n\n[26] The work\/family balance in Korean workplaces | Rejuvenating Korea: Policies for a Changing Society | OECD iLibrary. (n.d.). OECD ILibrary. https:\/\/www.oecd-ilibrary.org\/sites\/a4a3830c-en\/index.html?itemId=\/content\/component\/a4a3830c-en\n\n[27] The Diplomat. (2017, July 6). South Korea\u2019s Brain Drain. https:\/\/thediplomat.com\/2017\/07\/south-koreas-brain-drain\/\n\n[28] Stangarone, T. (2020, June 26). South Korea\u2019s Digital New Deal. The Diplomat. https:\/\/thediplomat.com\/2020\/06\/south-koreas-digital-new-deal\/\n\n[29] McCurry, J. (2019, March 22). Spycams, sex abuse and scandal: #MeToo reaches Korean pop. The Guardian. https:\/\/www.theguardian.com\/music\/2019\/mar\/22\/metoo-k-pop-music-industry-sexaul-assault-scandals-korean-cultural-life\n\n[30] Kim, S. Z. (n.d.). The \u2018condescending old people\u2019 of South Korea\u2019s workforce. BBC Worklife. https:\/\/www.bbc.com\/worklife\/article\/20190726-the-condescending-old-people-of-south-koreas-workforce\n\n[31] Akins, J. (2020, December 31). 25 Best Artificial Intelligence Colleges | Bachelor\u2019s and Master\u2019s AI Degrees. SuccessfulStudent.Org. https:\/\/successfulstudent.org\/best-artificial-intelligence-colleges\/","5be565d1":"# Getting the Education System Up to Speed \n\nCompletely fixing the Korean education system is beyond the scope of this notebook. What can be done is touching on suggestions for improving the education system's ability to foster AI experts. First, Korea's love affair with standardized tests needs to change. It has built up a system of public and private education that kills the creativity that students will need to survive in today's economy. To do this, more holistic methods of evaluating a person's capabilities must be developed. Furthermore, universities need to create programs that allow students to study AI, and teach students skills that employers find valuable. Korea is already implementing some of these suggestions. \n\nKorea is already planning to change the education system to bolster the AI sector, as a part of the National Strategy for Artificial Intelligence laid out by the Moon administration shortly before COVID-19 hit. **In 2021, Korea is planning to introduce AI courses as electives for South Korean high schools**. They will be able to take introductory courses in AI, or AI mathematics, and this increased exposure could cause more students to study AI in university[9]. Furthermore, starting in 2019, AI education began to be introduced to universities. **In 2019, 4 select universities were chosen to create graduate and doctorate programs in AI, and in 2020, 3 more universities did the same**. At the undergraduate levels as well, some universities began to create curriculums specialized for AI, in cooperation with corporations to make sure the curriculum could prepare students for a job in the AI sector[10]. ","49e7e67b":"# Bridging the Gender Gap\n\nBridging the gender gap is a massive undertaking that involves a complete overhaul of the way Korean society views women. \n\nOne smaller, yet still significant step South Korea could take to bridge the gender gap in STEM and AI is through hiring more female math and science teachers. **A study by the National Bureau of Economic Research done in Korea showed that when female students in 7th grade were assigned a female math instructor, they were 15.1% more likely to choose a math-science track in high school**. **It was also found that when assigned a female math teacher in 7th grade, the gender gap in interest in majoring in a STEM field later on was closed by a significant amount.** If just one interaction with a female teacher is shown to have such significant effects on female students' futures, one can only imagine how much things could change if more female STEM subject teachers were hired around the country[18].","a193361b":"# Women Outnumbered in STEM\n\nData from the UNESCO Institute for Statistics shows that **for every 100 STEM graduates in South Korea, only 26 are women[14].** Since backgrounds in STEM are favorable for learning AI, starting from university, women seeking to pursue careers in AI are disadvantaged compared to men who decide to do the same. \n\nThe gap is present in the survey data from 2018 as well. **While 70% of Korean female Kagglers majored in a STEM field, 82% of Korean male Kagglers majored in STEM.** Worldwide, the gap in STEM majors was 5% and in the US, the gap was 7%. Considering that Kaggle is a website for learning about data analysis and machine learning, we could presume that the 12% gap in STEM majors of female and male Korean Kagglers is even wider within Korean society. \n\nBackgrounds in STEM are much more favorable for learning AI than backgrounds in other majors, making it imperative that Korean women are encouraged to study in STEM fields.","fd396bbc":"# Korean Companies Slow To Utilize Machine Learning (ML)\n\n**In 2020, large Korean tech firms such as Samsung Electronics and Kakao are joined together in \"artificial intelligence alliances\" to compete with global tech firms such as Apple and Google [24].** However, what must be considered is that, in places like the US, firms have started earlier and have been quick to implement ML and AI into their services and products. **Korea's Ministry of Science and ICT (MSICT) predicted that Korean AI technology is 1.8 years behind the US[25]**. \n\nAnother reason AI experts look to the US for employment comes from the fact that US firms may have far more job opportunities for these AI experts because they have more firms that are actively using ML. Comparison of ML Usage in Korean and US firms show that a much larger proportion of US firms use ML in some capacity(ML Used for Insight, Models Usage <2 Years, Models Usage +2 Years) compared to Korea. **While only 59 of 122 Korean firms actively utilize ML, 850 of 1,325 US firms utilize ML.** The data suggests that when Korean AI experts look abroad for opportunities, they find a greater variety and number of opportunities. **One optimistic datapoint is that approximately a third of Korean firms are \"Exploring ML,\" meaning that a large proportion of Korean firms are getting ready to incorporate ML into their business operations. **","e7dff9f5":"# Better and More Research\/Work Environments Lie Outside of Korea\n\nSouth Korean work environments can be toxic, and encourage employees to put in long hours - **in a 2017 OECD survey, Korea ranked third in OECD nations for weekly working hours with 47.8 hours per week for men and 45.2 for women[26]**. The workforce is primarily male-dominated, and the culture is infused with an almost militaristic hierarchy(often based on age), not to mention that hiring practices are corrupt and gender discriminating[27], resulting in an un-inclusive, undesirable workplace. AI researchers in particular want to leave Korea because its research infrastructure is lacking, and because legal systems in Korea prevent researchers from collecting large datasets to protect the privacy of individuals[19]. \n\nResearching AI can be expensive, as it may involve working with large cloud databases and specialized software. A snapshot of what looks like Korea's weak research infrastructure reveals itself in the small number of research scientists\/research teams that get access to expensive machine learning and cloud computing services. On the other hand, **The US has 3 times more researchers\/teams that are able to spend 10,000-99,999 USD per year and 21 times more researchers\/teams that are able to spend 100,000 USD or more per year compared to Korea**. Not only does the US have more groups of research scientists that are funded, but they are also generously funded. This makes the US a much more desirable country to research AI at than Korea. \n\n\nNote: I excluded datapoints that used amounts under 100 USD because I wanted to see individuals\/teams that were doing large-scale data related projects. Although I found in my research that China was heavily investing into AI research, I excluded China because research scientists did not provide substantial information on how much they\/their teams were spending. ","625f31df":"# The Beginning of a Complex Problem: A Stagnant Kaggle Userbase\n\nUp until now, the data shows nothing special about Korea. It's a smaller country, so it has less respondents to the survey compared to some larger countries, and it has a gender gap in respondents, like practically every country in the world. But I found something interesting that prompted my research into the state of Korea's AI sector. Korea's userbase on Kaggle has been fairly stagnant over the years after a growth spike in 2018. Take 2020's survey for example - just 11 more users participated in this year's survey compared to last year's. \n\nThis is more apparent when we compare Korea's percentage growth in users compared to 2017 to other countries. **Korea's percentage growth since 2017 stayed fairly consistent from 2018 to 2020, hovering at around 35%.** Admittedly, there are countries like the United States that have had their userbase decrease after 2018, but have a strong AI sector. But there are also countries with strong AI sectors like Japan and India that have shown continual growth. Although less people participated in the survey in Japan in 2020 than 2019, Japan's userbase has continued growing overall, ending at 130% growth this year. India's userbase, on the other hand, has continued to grow each year, ending at 116% growth this year. \n\nKaggle is arguably one of the best places to learn the basics of machine learning and apply them to competitions that are available all year round. Kagglers also have the opportunity to learn from each other through notebooks. The number of Kaggle users for a country doesn't accurately represent how competitive their AI resources are, but it can be an indicator. Korea is nearly stagnant in that regard. The data surprised me because it indicated that data science and AI hadn't taken off completely in Korea yet, despite it housing tech powerhouses like Samsung. This led me to dig deeper. ","b998cf9a":"<a id=\"Factor3\"><\/a>\n# Factor 3 - A Bad Case of Brain Drain\n\nSouth Korea has been diagnosed with a bad case of brain drain. **AI experts with doctorates in Korea will often leave the country to escape the poor research infrastructure and pursue better opportunities[19].**\n\nBrain drain is only partly due to foreign companies offering more lucrative opportunities to Korean AI experts than domestic companies do. It is also caused by the fact that Koreans, AI experts or not, want to leave Korea. Young Koreans view living in Korea as a living hell, giving birth to a nickname for the country: *\"Hell Joseon.\"* In a survey from 2019, **79% of women and 71% of men aged between 19 and 34 said they wanted to leave Korea, and within the same age group, 83% of women and 78% of men said they viewed their country as \"hell.\"** The consensus between the younger(age 19-34) and older(age 35-59) generations was not as large for the previous two survey questions, but older and younger generations agreed resoundingly on the third survey question. **Around 89% of women and 82% of men, both older and younger, believed that people born into poverty could never compete with those born into wealth[20].** Korea's worsening economic mobility means that no matter how hard people work, they may never be able to improve their standard of living[21]. Although the survey did not state the reason why a higher percentage of women than men had a negative view of Korea, we can think back to the second factor (gender gap), and guess why. \n\nIn fact, the third factor (brain drain) of why Korea's AI sector is suffering is partly due to the first factor (education) and the second factor (gender gap). A hyper-competitive educational system, responsible for a generation of students with poor mental health, stifling societal expectations for both genders, but especially women, and a widening wealth inequality combine to create living conditions that resemble the inside of a pressure-cooker. This is reflected in the fact that South Korea possesses the highest suicide rate out of the OECD nations as of 2017[22]. **South Korean natives want to jump ship to greener pastures outside Korea, even if they aren't AI experts offered better opportunities outside of Korea[23].**","bf7dcf07":"<a id=\"Overview\"><\/a>\n# Overview\n\nI'll start with an initial overview of Korea's Kaggle Survey data. When gathering data, I chose to combine the population that identified as part of South Korea or Republic of Korea, assuming that nobody in North Korea was participating in this survey. **In 2020, Korea had the 19th most respondents out of 53 countries present(excluding \"Other\")**, with 266 Korean Kagglers answering the survey. ","db34c659":"# A Comparison of Gender Ratios\n\nThe following graphs show percentage data on how likely women are to be X or Y and how likely men are to be X or Y. Before I go any further, I want to once again stress that in terms of absolute numbers, there are far more male Korean Kagglers than female. **For every 10 Korean Kagglers, about 2 are women, and 8 are men**. 17% of Korean Kagglers are female, compared to the 19% percent globally, and 21% in the US, showing that the discrepancy is a little larger in South Korea. In this section, I will also continually compare Korea to the world and the US - to see how Korea compares to the global average, and to see how Korea compares to the US, a country that has considerably more gender equality compared to Korea and is also a world leader in the AI sector[13]."}}