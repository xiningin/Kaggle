{"cell_type":{"9e3fe46a":"code","d6481891":"code","9bc05bfe":"code","15f2a8ed":"code","7253d222":"code","86cc9628":"code","0967bf0e":"code","b029fc55":"code","472facdc":"code","6bce4f3a":"code","fde5168e":"code","cf1c4f81":"code","811d1bf3":"code","bca209e9":"code","fc3aa4d1":"code","8ee94f61":"code","9dd39ac8":"code","2a74441e":"code","e3fb68c3":"code","eaf91f76":"code","e007f620":"code","71cf9320":"code","d39e5197":"code","2c92dba5":"code","d0fa91d6":"code","5f93a8b6":"code","3070237e":"code","61ef5baa":"code","b1d4efbe":"code","e707b009":"code","b97ac382":"code","fd33d4fc":"code","e0042f48":"code","97f42730":"code","521d8c61":"code","c7233f35":"code","489d477a":"code","462d0983":"code","a72de0cb":"code","f5319ffc":"code","a82e934a":"code","db003131":"code","72f35fdd":"code","97db1a70":"code","adb58e7d":"code","b698dab1":"code","02ab3d3f":"code","1eda398a":"code","850949e6":"code","c873e26d":"code","a445d896":"code","4272fdf0":"code","7f5ee205":"code","e146a182":"code","4929d066":"code","00f57f60":"code","af12089e":"code","922dfc99":"code","9b21bdc4":"code","e0bbb86a":"code","4bdaee07":"code","91aa9bbd":"markdown","212bd6d9":"markdown","f31b2bd3":"markdown","c36dc7a2":"markdown","b2eea2b7":"markdown","02d7f83a":"markdown","b8fd646f":"markdown","11f1c7a4":"markdown","2f9d6cd1":"markdown","1ed88849":"markdown","bb11bbd3":"markdown","f368448a":"markdown","6e8ef0bb":"markdown","0737ac54":"markdown","3f1485f5":"markdown","7f5a9fce":"markdown","ae173fda":"markdown","d5d75a44":"markdown","dfcfeb42":"markdown","ae3b1720":"markdown","387a6a05":"markdown","529b3f2d":"markdown"},"source":{"9e3fe46a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\npd.set_option('display.max_columns', None)\n%matplotlib.inline","d6481891":"df_credits = pd.read_csv('..\/input\/the-movies-dataset\/credits.csv')\ndf_credits.head(1)","9bc05bfe":"df_meta = pd.read_csv('..\/input\/the-movies-dataset\/movies_metadata.csv')\ndf_meta.head(1)","15f2a8ed":"df_meta.release_date.dtype","7253d222":"df_meta['release_date'] = pd.to_datetime(df_meta['release_date'],errors='coerce')\ndf_meta['year'] = df_meta['release_date'].dt.year","86cc9628":"df_meta['id'] = df_meta['id'].apply(lambda x: x.replace('-','0'))\ndf_meta['id'] = df_meta['id'].astype(int)","0967bf0e":"merged_data = pd.merge(df_meta,df_credits,on='id')","b029fc55":"merged_data.sample(1)","472facdc":"data_to_use = merged_data.drop(['belongs_to_collection','homepage','homepage','poster_path','tagline','video','adult','imdb_id','status'],axis=1)","6bce4f3a":"data_to_use.head(1)","fde5168e":"plt.figure(figsize=(8,5))\nsns.heatmap(data_to_use.isnull(),cmap='Blues',cbar=False,yticklabels=False)","cf1c4f81":"import ast\ndata_to_use['genres'] = data_to_use['genres'].map(lambda x: ast.literal_eval(x))\ndata_to_use['cast'] = data_to_use['cast'].map(lambda x: ast.literal_eval(x))\ndata_to_use['crew'] = data_to_use['crew'].map(lambda x: ast.literal_eval(x))","811d1bf3":"data_to_use['production_companies'] = data_to_use['production_companies'].replace(np.nan,'unknown')\ndata_to_use['production_countries'] = data_to_use['production_countries'].replace(np.nan,'unknown')\ndata_to_use['spoken_languages'] = data_to_use['spoken_languages'].replace(np.nan,'unknown')","bca209e9":"data_to_use['production_company_name_only_first'] = data_to_use['production_companies'].apply(lambda x: x.split(',')[0])","fc3aa4d1":"data_to_use['production_company_name_only_first'] = data_to_use['production_company_name_only_first'].apply(lambda x: x.split(':')[-1])","8ee94f61":"data_to_use.head(1)","9dd39ac8":"data_to_use['production_company_name_only_first1'] = data_to_use['production_company_name_only_first'].apply(lambda x: x.replace('[]','Unknown'))","2a74441e":"data_to_use.drop(['production_company_name_only_first'],inplace=True,axis=1)","e3fb68c3":"data_to_use['production_countries_name'] = data_to_use['production_countries'].apply(lambda x: x.split(':')[-1])","eaf91f76":"data_to_use['production_countries_name_only'] = data_to_use['production_countries_name'].apply(lambda x : x[:-2])","e007f620":"data_to_use.head(1)","71cf9320":"data_to_use.spoken_languages[1112]","d39e5197":"data_to_use['spoken_languages_only'] = data_to_use['spoken_languages'].apply(lambda x: x.split(',')[-1])","2c92dba5":"data_to_use['spoken_languages_only1'] = data_to_use['spoken_languages'].apply(lambda x: x.split(':')[-1])","d0fa91d6":"data_to_use['spoken_languages_only12'] = data_to_use['spoken_languages_only1'].apply(lambda x : x[:-2])","5f93a8b6":"data_to_use.head(1)","3070237e":"def make_genresList(x):\n    gen = []\n    st = \" \"\n    for i in x:\n        if i.get('name') == 'Science Fiction':\n            scifi = 'Sci-Fi'\n            gen.append(scifi)\n        else:\n            gen.append(i.get('name'))\n    if gen == []:\n        return np.NaN\n    else:\n        return (st.join(gen))","61ef5baa":"data_to_use['genres_list'] = data_to_use['genres'].map(lambda x: make_genresList(x))","b1d4efbe":"def get_actor1(x):\n    casts = []\n    for i in x:\n        casts.append(i.get('name'))\n    if casts == []:\n        return np.NaN\n    else:\n        return (casts[0])","e707b009":"data_to_use['actor_1_name'] = data_to_use['cast'].map(lambda x: get_actor1(x))","b97ac382":"def get_actor2(x):\n    casts = []\n    for i in x:\n        casts.append(i.get('name'))\n    if casts == [] or len(casts)<=1:\n        return np.NaN\n    else:\n        return (casts[1])","fd33d4fc":"data_to_use['actor_2_name'] = data_to_use['cast'].map(lambda x: get_actor2(x))","e0042f48":"def get_actor3(x):\n    casts = []\n    for i in x:\n        casts.append(i.get('name'))\n    if casts == [] or len(casts)<=2:\n        return np.NaN\n    else:\n        return (casts[2])","97f42730":"data_to_use['actor_3_name'] = data_to_use['cast'].map(lambda x: get_actor3(x))","521d8c61":"def get_directors(x):\n    dt = []\n    st = \" \"\n    for i in x:\n        if i.get('job') == 'Director':\n            dt.append(i.get('name'))\n    if dt == []:\n        return np.NaN\n    else:\n        return (st.join(dt))","c7233f35":"data_to_use['director_name'] = data_to_use['crew'].map(lambda x: get_directors(x))","489d477a":"data_to_use.head(1)","462d0983":"data_for_analyses = data_to_use.drop(['genres','id','original_language','production_companies','production_countries','release_date','spoken_languages','cast','crew','production_countries_name','spoken_languages_only','spoken_languages_only1'],axis=1)","a72de0cb":"data_for_analyses.head(2)","f5319ffc":"# converting budget column to int.\ndata_for_analyses['budget'] = data_for_analyses['budget'].astype(int)","a82e934a":"data_for_analyses.describe()","db003131":"data_for_analyses[data_for_analyses['revenue']==2787965087.0]","72f35fdd":"data_for_analyses['Profit'] = data_for_analyses['revenue'] - data_for_analyses['budget']","97db1a70":"data_for_analyses.head(1)","adb58e7d":"data_for_analyses.year.value_counts(dropna=False).sort_index().plot(kind='barh',color='g',figsize=(20,25))","b698dab1":"data_for_analyses['popularity'] = data_for_analyses['popularity'].astype(float)","02ab3d3f":"data_for_analyses_clean = data_for_analyses.dropna(how='any')","1eda398a":"plt.figure(figsize=(8,5))\nsns.heatmap(data_for_analyses_clean.isnull(),cmap='Blues',cbar=False,yticklabels=False)","850949e6":"correlations = data_for_analyses_clean.corr()\nf,ax = plt.subplots(figsize=(10,6))\nsns.heatmap(correlations, annot=True, cmap=\"YlGnBu\", linewidths=.5)","c873e26d":"df_for_ML = data_for_analyses_clean[['budget','popularity','revenue','runtime','vote_average','vote_count','year','Profit']]","a445d896":"df_for_ML.hist(bins=30,figsize=(15,8),color='g')","4272fdf0":"for i in df_for_ML.columns:\n    axis = data_for_analyses_clean.groupby('vote_average')[[i]].mean().plot(figsize=(10,5),marker='o',color='g')","7f5ee205":"df_for_ML.head(1)","e146a182":"from sklearn.model_selection import train_test_split\nX = df_for_ML.drop('Profit',axis=1)\ny = df_for_ML['Profit']\nX.shape,y.shape","4929d066":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","00f57f60":"from sklearn.linear_model import LinearRegression\nlm = LinearRegression()\nlm.fit(X_train,y_train)","af12089e":"prec_lm=lm.predict(X_test)","922dfc99":"from sklearn.metrics import mean_squared_error, mean_absolute_error\nprint('The mean squared error using Linear regression is: ',mean_squared_error(y_test,prec_lm))\nprint('The mean absolute error using Linear regression is: ',mean_absolute_error(y_test,prec_lm))","9b21bdc4":"from sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor()\nrf.fit(X_train,y_train)","e0bbb86a":"prec_rf=rf.predict(X_test)","4bdaee07":"print('The mean squared error using Random Forest model is: ',mean_squared_error(y_test,prec_rf))\nprint('The mean absolute error using Random Forest model is: ',mean_absolute_error(y_test,prec_rf))","91aa9bbd":"### Converting the date to datetime and using year to create a new column.","212bd6d9":"### This dataframe I am going to use for my Movie recommendation notebook later on. ","f31b2bd3":"### Importing the datasets.","c36dc7a2":"### Visualising the relations between vote average and other features. ","b2eea2b7":"### Using the Linear Regression model to predict the Profit of a movie based on selected features.","02d7f83a":"### Using the random Forest model to predict the Profit of a movie based on selected features.","b8fd646f":"### Making correlations to find which numerical features influence the Profit feature most. ","11f1c7a4":"### Splitting my machine learning dataset into train and test. ","2f9d6cd1":"# Analysing the Metadata on over 45,000 movies & predicting the Movie Profit.\n#### In this notebook I have worked on this movies meta dataset & credits dataset to perform the following tasks:\n##### Cleaned the Movies_metadataset and merged it with credits.csv to get more information about a movie. For example: director name, actor name.\n##### Picked out some important information from the combined dataset to create new columns like: country of production, production companies, spoken language, actor 1 name, actor 2 name, director name etc.\n##### Analysed the combined dataset using some important visualizations. \n##### Using correlations found out the most important numerical features that influence the profit of movies the most. \n##### Used Linear regression & Random forest models to predict the Profit of movies based on these important numerical features. ","1ed88849":"### Picking up all the important columns for exploratory data analysis.","bb11bbd3":"### Conclusions:\n\n#### The random forest model has perforemed the best with MSE of '8177714132974.215' and MAE of '271274.95012048195'\n#### The budget of the movie has a big influence on the profit of a movie.\n#### Movies with higher budget tent get better vote average.","f368448a":"### Looking for null values in the new dataframe.","6e8ef0bb":"### replacing all the nan values with unknown and cleaning up the important features further. ","0737ac54":"### Maikng a new dataframe for my machine learning model","3f1485f5":"### Making a new column called as profit = revenue - budget. I am going to use this feature for building my predictive model.","7f5a9fce":"### Picking up only the important features from the dataframe to use it further.","ae173fda":"### Importing all the libraries needed","d5d75a44":"### Looking at this graph we can see in 2014 there were the most number of movies produced. ","dfcfeb42":"### By using the ast library retrieving the genres list and important features from cast and crew columns and displaying them in readable format. ","ae3b1720":"### Plotting the histograms of all the features in my Machine learning dafaframe","387a6a05":"### Displaying some important features like actor names, director names etc in direct readable format in the dataframe.","529b3f2d":"### Cleaning up the Id column in Movie_metadata & converting it to 'int' & merging the 2 dataframes."}}