{"cell_type":{"0a8c3eb7":"code","eedd3916":"code","dc93c8d3":"code","4f192dcf":"code","7a3505c9":"code","d38d5cbf":"code","9f7937be":"code","10f63062":"code","ec31ab0d":"code","fa297c23":"code","74fcd44c":"code","6b3b8767":"code","f52fbddc":"code","f1bf6024":"code","224173a8":"code","18e253c4":"code","f193f3da":"markdown"},"source":{"0a8c3eb7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eedd3916":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\ndataset = pd.read_csv(\"..\/input\/aapl-stock\/aapl.csv\", parse_dates=[\"Date\"])\ndataset.head()","dc93c8d3":"#plt.figure(figsize=(20,10))\nfor col in dataset.columns[1:]:\n    gr = sns.relplot(x='Date', y=col, kind='line', data=dataset[:30], height=5, aspect=1.75)\n    gr.fig.autofmt_xdate()","4f192dcf":"dataset.corr()","7a3505c9":"plt.figure(figsize=(16,8))\nsns.heatmap(dataset.corr(), cmap='PuBu', annot=True)\nplt.title('Correlation among parameters')","d38d5cbf":"sns.clustermap(dataset[dataset.columns[1:-2][:20]])","9f7937be":"plt.figure(figsize=(16,8))\nsns.scatterplot(x='High', y='Close', data=dataset)","10f63062":"plt.figure(figsize=(16,8))\nsns.scatterplot(x='Open', y='Low', data=dataset)","ec31ab0d":"dataset['hl-ratio'] = ((dataset['High']\/dataset['Low']) - 1.0) * 1000\ndataset['hl-ratio']","fa297c23":"dataset['Volume'].describe()","74fcd44c":"def get_sale_variability(row):\n    if(row['hl-ratio'] < 8.0 and row['Volume'] < 30000000):\n        return 'low'\n    elif(8.0 < row['hl-ratio'] < 16.0 or 30000000 < row['Volume'] < 60000000):\n        return 'med'\n    else:\n        return 'high'\n    \ndataset['Sale Variability'] = dataset.apply(get_sale_variability, axis='columns')\ndataset['Sale Variability']","6b3b8767":"dataset['Sale Variability'].value_counts()","f52fbddc":"plt.figure(figsize=(16,8))\nsns.scatterplot(x='Open', y='Low', data=dataset, hue='Sale Variability')","f1bf6024":"mean_low_month = dataset.groupby(dataset[\"Date\"].dt.month)[\"Low\"].mean()\nmean_low_month","224173a8":"plt.figure(figsize=(16,8))\nmean_low_month.plot(kind='bar')","18e253c4":"plt.figure(figsize=(16,8))\ndataset[:100]['Volume'].plot(kind='hist')","f193f3da":"**Just a demo of popular data visualization techniques using Pandas, Matplotlib and Seaborn, on a stock market related data.**"}}