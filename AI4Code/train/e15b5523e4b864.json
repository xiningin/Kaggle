{"cell_type":{"1aa2a1ac":"code","87ea96ae":"code","21ce2dd6":"code","9d4d476e":"code","a1581e15":"code","e22f3683":"code","91365dd7":"code","e246acf3":"code","77081d61":"code","2b72ffd5":"code","4a8cd84b":"code","a99e265b":"code","bf391283":"code","4e5d9a11":"code","3de2f1ca":"code","8e9b82e8":"code","92004caa":"code","d7a1fab3":"code","035e1631":"code","02a4c025":"markdown","d3b1c210":"markdown","f908d5d2":"markdown","ef7a332e":"markdown","5d9bfa48":"markdown","eb5f50d2":"markdown","c1e6913a":"markdown","afd20e86":"markdown","18c98b39":"markdown","9ae8ef71":"markdown","ac2e0b79":"markdown","467a22f7":"markdown","20683dce":"markdown","0a38671f":"markdown","b54fd3a0":"markdown","4536930c":"markdown","436654f4":"markdown","f104b5c5":"markdown","d3d3148e":"markdown","5b589df9":"markdown","d9769bbc":"markdown","104ed2fc":"markdown","f92d88e9":"markdown","cf1b5c37":"markdown","9d0ff899":"markdown","22ab4d1f":"markdown","b00af8dc":"markdown","d4d41e95":"markdown"},"source":{"1aa2a1ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","87ea96ae":"import matplotlib.pyplot as plt","21ce2dd6":"# Lionel Messi goals in La Liga\ngoals = [1,6,14,10,23,34,31,50,46,28,43,26,37,34,36,13]","9d4d476e":"print(\"number of seasons: \", len(goals)) # len() is the length of the list","a1581e15":"print(\"range: \", np.min(goals), \"-\", np.max(goals))","e22f3683":"print(\"goals per season: \", np.mean(goals))\nprint(\"median: \", np.median(goals))","91365dd7":"from statistics import mode #import the function 'mode'\nprint(\"mode: \", mode(goals))","e246acf3":"plt.hist(goals,10) # Even though the homework says 6 bins, I've put 10 to see the histogram better\nplt.xlabel(\"Goals\")\nplt.ylabel(\"N\")\nplt.title(\"Lionel Messi Goal Distribution\")\nplt.show()","77081d61":"# goals over time\n\nseason_number = np.arange(len(goals))\nprint(season_number) # keep in mind, computers start counting at 0!","2b72ffd5":"plt.plot(season_number,goals)\nplt.xlabel(\"Season Number\")\nplt.ylabel(\"Goals\")\nplt.title(\"Lionel Messi's goals over the years\")\nplt.show()","4a8cd84b":"# Adding 4 other players\n# Making sure these are the same seasons that they played in and filling in nothing if they didn't play\nsuarez_goals = [np.nan,np.nan,np.nan,np.nan,np.nan,np.nan,np.nan,np.nan,np.nan,np.nan,16,40,29,25,21,11]\nneymar_goals = [np.nan,np.nan,np.nan,np.nan,np.nan,np.nan,np.nan,np.nan,np.nan,9,22,24,13,np.nan,np.nan,np.nan]\npedro_goals = [np.nan,np.nan,np.nan,0,0,12,13,5,7,15,6,np.nan,np.nan,np.nan,np.nan,np.nan]\niniesta_goals = [2,0,6,3,4,1,8,2,3,3,0,1,0,1,np.nan,np.nan]","a99e265b":"plt.plot(season_number,goals,label = \"Messi\")\nplt.plot(season_number,suarez_goals,label = \"Suarez\")\nplt.plot(season_number,neymar_goals,label = \"Neymar\")\nplt.plot(season_number,pedro_goals,label = \"Pedro\")\nplt.plot(season_number,iniesta_goals,label = \"Iniesta\")\nplt.legend()\n\nplt.xlabel(\"Season Number\")\nplt.ylabel(\"Goals\")\nplt.title(\"Barcelona's goals over time\")\nplt.show()","bf391283":"goals_std = np.std(goals)\nprint(\"Standard Deviation:\", goals_std)","4e5d9a11":"# What I've commented off below is what we plotted in Homework 2. Look how similar the code is!\n# plt.plot(season_number,goals)\nplt.errorbar(season_number,goals,\n             yerr=goals_std)\nplt.xlabel(\"Season Number\")\nplt.ylabel(\"Goals\")\nplt.title(\"Lionel Messi's goals over the years\")\n# I also want to restrict the width of my y axis because negative goals are not possible (well, maybe own goals)\n# Use your discression here, but think about what limits might make sense in your case!\nplt.ylim(0,65)\nplt.show()","3de2f1ca":"from scipy.optimize import curve_fit","8e9b82e8":"def f(x, A, B): # this is your 'straight line' y=f(x)\n    return A*x + B","92004caa":"popt, pcov = curve_fit(f, season_number, goals) # your data x, y to fit\nprint(\"Slope:\",popt[0]) \nprint(\"Intercept:\",popt[1])","d7a1fab3":"# y = m*x + b\ny_fit = popt[0]*season_number + popt[1]","035e1631":"plt.errorbar(season_number,goals,\n             yerr=goals_std)\n# the fit!\nplt.plot(season_number, y_fit,'--')\nplt.xlabel(\"Season Number\")\nplt.ylabel(\"Goals\")\nplt.title(\"Lionel Messi's goals over the years\")\nplt.ylim(0,65)\nplt.show()","02a4c025":"In this homework, we are going to work on adding uncertainties or error bars to our points\/goals\/statistic over time plot. We are also going to fit our data to a simple linear fit. (As a side note, try to comment your code with #'s so that you remember what you did later. This is very good coding practice and it is very hard to remember what you've done easily when your code gets messy!)","d3b1c210":"And mode (which is a bit trickier since we need to import something extra)","f908d5d2":"And then we plot the same stuff as above, adding the extra plt.plot for our fit","ef7a332e":"In order to find the range of goals scored, I find the minimum and maximum values in my list and print to my screen","5d9bfa48":"Now we need to define the y values that correspond to the fit","eb5f50d2":"Favorite Player Notebook: Messi\n\nErik Peterson\n\nLast Modified: 1\/26\/2020","c1e6913a":"Now we use plt.plot in order to make this new diagram, we label, and we show the plot","afd20e86":"And now the histogram. We use the plotting package (which we've renamed as plt), label our axes, and show the plot.","18c98b39":"# Homework 2","9ae8ef71":"We use the plot function each time for each player, we also label each line according to the player name and add a legend, and we label the axes and show the plot","ac2e0b79":"The linear fit does not look good here! We should probably do a polynomial fit.","467a22f7":"Messi's goals over time drastically increase as he's become more experienced until about season 7. He has remained relatively constant, but the sudden drop in the most recent season can be explained by the fact that the season is only 1\/3 the way done.","20683dce":"Then we collect data on the other players, but we ensure that the seasons line up (inputting np.nan 'not a number' if they did not play in that season).","0a38671f":"Look at what you've printed to your screen. This new list matches up with the corresponding game or season (starting at 0)","b54fd3a0":"I want to print to my screen the number of seasons Messi has played in. This is the length of my list","4536930c":"We are going to use this standard deviation as an error bar for every point. There are many other ways we could calculate an uncertainty, but this is a simple and effective way.","436654f4":"Printing the mean and median","f104b5c5":"Now let's add a linear fit to the plot too. Import this tool for fitting curves","d3d3148e":"Looks a bit skewed left due to Messi's first 4 seasons!","5b589df9":"We want to make a new plot with our statistic over time. We start by creating another list which numbers our game or season","d9769bbc":"The first cell has been made for you by Kaggle.\n\nIt imports a few packages and sets up a directory where your notebooks are saved.","104ed2fc":"Next I am making a list that contains my data. I call that list **goals**. Beginning a line with # starts a comment","f92d88e9":"Now we need to define the function curve_fit will be using. In this case, a simple line","cf1b5c37":"Remember in Homework 1 you plotted your statistic in a histogram. Let's get a standard deviation of that histogram first","9d0ff899":"We must import a plotting package first","22ab4d1f":"# Homework 1","b00af8dc":"We now apply curve_fit on our data. This function uses f (which we defined above), our x, and our y. It gives us a lot of good information, some of which I have printed below.","d4d41e95":"# Homework 3"}}