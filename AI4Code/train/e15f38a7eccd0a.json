{"cell_type":{"d0c394d0":"code","558f5a61":"code","2714937e":"code","55cfcab3":"code","082f03ae":"code","412e3bbd":"code","c7f9b894":"code","e26777be":"code","b190f1b3":"code","e80a249e":"code","e3d21ec2":"code","9e972fdf":"code","2ee78b9a":"code","cdb9d6df":"markdown","ff99ed11":"markdown","34941220":"markdown","9a920c5b":"markdown","5a06b927":"markdown","ae9b3403":"markdown","d9ba5289":"markdown","7fc16ede":"markdown","f083975b":"markdown","52bc8112":"markdown","96a111e7":"markdown"},"source":{"d0c394d0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","558f5a61":"data = pd.read_csv(\"\/kaggle\/input\/polynomial-position-salary-data\/Position_Salaries.csv\")\ndata","2714937e":"X = data.drop([\"Position\",\"Salary\"] , axis = 1) \ny = data[\"Salary\"]","55cfcab3":"plt.scatter(X, y , label = \"Distribution\")\nplt.xlabel(\"Level\")\nplt.ylabel(\"Salary\")\nplt.show()","082f03ae":"poly = PolynomialFeatures(degree = 3)\nX_poly = poly.fit_transform(X)","412e3bbd":"X_train , X_test , y_train , y_test = train_test_split(X_poly , y, test_size = 0.10 , random_state = 42)","c7f9b894":"model = LinearRegression()\nmodel = model.fit(X_train , y_train)","e26777be":"y_pred = model.predict(X_test)","b190f1b3":"MSE = mean_squared_error(y_test , y_pred)\nprint(\"MSE = {}\".format(MSE))","e80a249e":"model_linear = LinearRegression()\nmodel_linear = model_linear.fit(X, y)","e3d21ec2":"y_pred_linear = model_linear.predict(X)","9e972fdf":"y_pred_all = model.predict(X_poly)","2ee78b9a":"plt.scatter(X, y , label = \"Distribution\" , color = \"navy\")\nplt.plot(X, y_pred_all, label = \"Polynomial Regression\" , color = \"orange\" , linewidth = 4)\nplt.plot(X, y_pred_linear, label = \"Linear Regression\" , color = \"gray\")\nplt.xlabel(\"Level\")\nplt.ylabel(\"Salary\")\nplt.legend()\nplt.show()","cdb9d6df":"**Create Model**","ff99ed11":"**Prediction**","34941220":"# Create Polynomial Feature","9a920c5b":"# Read Dataset","5a06b927":"# Data Split","ae9b3403":"# Data Visualization","d9ba5289":"# Control","7fc16ede":"# Model Visualization","f083975b":"# Prediction","52bc8112":"# Linear Regression","96a111e7":"# Create Model"}}