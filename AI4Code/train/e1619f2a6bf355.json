{"cell_type":{"9f1814b7":"code","5b4c00e1":"code","47d48588":"code","a75c35ee":"code","98003e1e":"code","0ee44948":"code","684e7102":"code","aea9044e":"code","7329afe5":"code","e736da8b":"code","76548612":"code","b19740b9":"code","46cb2676":"code","c0de9b3e":"code","0784d15c":"code","fea9164b":"code","cd723a0a":"code","66bd0699":"code","90e940f3":"code","e748d04d":"markdown","0988fb5b":"markdown","db2741fd":"markdown","fe871983":"markdown","94eb65a4":"markdown","b0ed717f":"markdown","cb038942":"markdown","8faa5cd9":"markdown","885ffcb0":"markdown","ca6185c0":"markdown","51bcf2d1":"markdown","5bde6b68":"markdown","676d0400":"markdown","ff5fc5f4":"markdown","2fcbd94a":"markdown","cb764a9d":"markdown","fb74f516":"markdown","8b20fd3c":"markdown","969aa9f8":"markdown"},"source":{"9f1814b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns","5b4c00e1":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename));\n        \nData_vg = pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\");\nData_vg","47d48588":"Data_vg.dropna(inplace=True)\nData_vg.drop(columns=\"Rank\",inplace=True)\nData_vg = Data_vg[Data_vg[\"Year\"]<2017.0]\nData_vg","a75c35ee":"matrix = Data_vg.corr()\nplt.figure(figsize=(8,6))\n#plot heat map\ng=sns.heatmap(matrix,annot=True,cmap=\"YlGn_r\")","98003e1e":"# Summary\nData_vg.describe()","0ee44948":"sns.pairplot(Data_vg);","684e7102":"df = Data_vg.groupby(by  = 'Year').sum()\ndf.plot.line(figsize=(10,10), grid=\"on\");\nplt.ylabel(\"Sales in million $\");","aea9044e":"df = pd.DataFrame(Data_vg['Genre'].value_counts(normalize=True))\nplot = df.plot.pie(subplots=True, autopct='%1.1f%%', figsize=(10, 10))","7329afe5":"df1 = pd.DataFrame(Data_vg.groupby('Platform')['Genre'].nunique())\ndf1.sort_values(by=['Genre'], inplace=True)\ndf1[df1[\"Genre\"]>11]","e736da8b":"df = pd.DataFrame(Data_vg[\"Name\"].value_counts().head(5))\ndf","76548612":"title = {'family': 'serif',\n        'color':  'darkblue',\n        'weight': 'normal',\n        'size': 16,\n        }\nsub_head = {'family': 'monospace',\n        'color':  'darkblue',\n        'size': 16,\n        'weight': 'demibold',\n        }","b19740b9":"dt = pd.DataFrame(Data_vg['Year'].value_counts()).sort_index().tail(15)\ndt = list(dt[\"Year\"])","46cb2676":"plt.figure(figsize=(16,8))\nsns.countplot(\"Year\",data=Data_vg)\nplt.xlim([21.5,31.5])\nplt.xlabel(\"no. of games launched\")\nli=21.9\nfor i in range(10):\n    plt.text(li, dt[i], dt[i])\n    li+=1\nplt.title(\"10 Most frequent launch years\",fontdict=title)\nplt.ylabel(\"Year of release\");","c0de9b3e":"dft = Data_vg[Data_vg[\"Year\"]!=1981.0]\ndt = pd.DataFrame(dft['Year'].value_counts()).sort_index().head(10)\ndt = list(dt[\"Year\"])","0784d15c":"plt.figure(figsize=(16,8))\nsns.countplot(\"Year\",data=dft)\nplt.xlim([-0.5,9.5])\nplt.ylim([0,50])\nli=-0.1\nfor i in range(10):\n    plt.text(li, dt[i], '['+ str(dt[i]) + ']' )\n    li+=1\nplt.xlabel(\"no. of games launched\")\nplt.title(\"10 Least frequent launch years\",fontdict=sub_head)\nplt.ylabel(\"Year of release\");","fea9164b":"Data_vg[Data_vg[\"Global_Sales\"]<1.5].hist(column=\"Global_Sales\",bins = 20, color= 'orange' )\nplt.xlabel(\"Sales in million less than 1.5 million $\")\nplt.title(\"Worldwide Sales\",fontdict=title);","cd723a0a":"df1 = pd.DataFrame(Data_vg.groupby('Publisher')['Global_Sales'].sum())\ndf1.sort_values(by=['Global_Sales'], inplace=True)\ndf1 = df1.tail(10)\nplot = df1.plot.pie(y='Global_Sales', autopct='%1.1f%%', figsize=(10, 10))\nplt.title(\"Publisher market share\",fontdict=title);","66bd0699":"df = Data_vg.drop(columns=[\"Year\",\"Global_Sales\"]).head(10)\nax = df.plot.bar(x=\"Name\",stacked=True,rot=85)\nplt.title(\"Top 10 Games globally\",fontdict=title);","90e940f3":"df1 = pd.DataFrame(Data_vg.groupby('Name')['NA_Sales'].sum())\ndf1.sort_values(by=['NA_Sales'], inplace=True)\ndf1 = df1.tail(5)\ndf1.plot.pie(y='NA_Sales', autopct='%1.1f%%', figsize=(6, 6))\nplt.title(\"Best selling games in North America\", fontdict=title)\n\ndf1 = pd.DataFrame(Data_vg.groupby('Name')['EU_Sales'].sum())\ndf1.sort_values(by=['EU_Sales'], inplace=True)\ndf1 = df1.tail(5)\ndf1.plot.pie(y='EU_Sales', autopct='%1.1f%%', figsize=(6, 6))\nplt.title(\"Best selling games in Europe\", fontdict=title)\n\ndf1 = pd.DataFrame(Data_vg.groupby('Name')['JP_Sales'].sum())\ndf1.sort_values(by=['JP_Sales'], inplace=True)\ndf1 = df1.tail(5)\ndf1.plot.pie(y='JP_Sales', autopct='%1.1f%%', figsize=(6, 6))\nplt.title(\"Best selling games in Japan\", fontdict=title);","e748d04d":"# <p style=\"color:orange; font-size:24px;\">3. Qualitative analysis<\/p> ","0988fb5b":"# <p style=\"color:orange; font-size:24px;\">1. Libraries used<\/p>","db2741fd":"As seen by the pairplot:\n> NA sales contributes almost linearly in Global Sales\n\n> EU is scattered graph while JP is a curve","fe871983":"# <p style=\"color:orange; font-size:24px;\">6. Best selling Games area wise<\/p>","94eb65a4":"**Action Games are the most prefered games of all time**","b0ed717f":"# <p style=\"color:orange; font-size:24px;\">5. Global Sales<\/p>","cb038942":"## **Most frequent games**","8faa5cd9":"**Sales increasing over time, clearly shows the raise in interest in video games.**","885ffcb0":"## **All rounder Platforms used for most Genres**","ca6185c0":"# <p style=\"Black; text-decoration:underline; font-family:serif; text-align:center; font-size:30px;\">Video Game Sales<\/p>\n\n**Analyze sales data from more than 16,500 games.**\n\nDescription\n\n> This dataset contains a list of video games with sales greater than 100,000 copies. It was generated by a scrape of vgchartz.com.\n\nFields include\n\n* Name - The games name\n\n* Platform - Platform of the games release (i.e. PC,PS4, etc.)\n\n* Year - Year of the game's release\n\n* Genre - Genre of the game\n\n* Publisher - Publisher of the game\n\n* NA_Sales - Sales in North America (in millions)\n\n* EU_Sales - Sales in Europe (in millions)\n\n* JP_Sales - Sales in Japan (in millions)\n\n* Other_Sales - Sales in the rest of the world (in millions)\n\n* Global_Sales - Total worldwide sales.\n\n> The script to scrape the data is available at https:\/\/github.com\/GregorUT\/vgchartzScrape.\nIt is based on BeautifulSoup using Python.\nThere are 16,598 records. 2 records were dropped due to incomplete information.","51bcf2d1":"## Top 10 publishers globally(gross sales)","5bde6b68":"## <p style=\"color:orange; font-size:24px;\">1.2 Correlation in Data<\/p>","676d0400":"## **Global Sales of video Games**","ff5fc5f4":"## <p style=\"color:orange; font-size:24px;\">1.1 Import Dataset<\/p>","2fcbd94a":"**This data excludes *invalid values \/ NaN* in the *Year* column and 4 records whose three of them it was from 2017 and one from 2020.**","cb764a9d":"## <p style=\"color:orange; font-size:24px;\">4. Most games launch in year<\/p>","fb74f516":"## **Genre wise distribution of games**","8b20fd3c":"# <p style=\"color:orange; font-size:24px;\">2. Quanitative analysis<\/p>","969aa9f8":"$$\\textrm{If you like the work please upvote :-) }$$\n$$\\textrm{Comments are Welcome}$$"}}