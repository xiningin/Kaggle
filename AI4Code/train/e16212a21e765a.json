{"cell_type":{"20e1249a":"code","f87a2854":"code","41ee6f8a":"code","29d600bf":"code","ea60389d":"code","e96b53e0":"code","5a981b57":"code","dcb219e6":"code","285df86a":"code","ecbab34a":"code","83d6ed06":"code","5f614bc3":"code","4eaeb418":"code","e456ed45":"code","9381d86a":"code","56bdca5c":"code","95d1967f":"code","598bf0c2":"code","e869f28b":"code","c6948f30":"code","2c900757":"code","935acd82":"code","037d0b83":"code","e001e0f2":"code","666cc6d1":"code","d52fc3b0":"markdown","a4e5dea5":"markdown","33747b61":"markdown","5154d873":"markdown","1e24ef0e":"markdown","dcc27ea8":"markdown","926aefdc":"markdown"},"source":{"20e1249a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f87a2854":"#read the csv file and make the data frame \nzomato_df = pd.read_csv('..\/input\/zomato.csv')","41ee6f8a":"#display the data frame\nzomato_df","29d600bf":"#display the first 5 rows\nzomato_df.head()","ea60389d":"#display the last five rows\nzomato_df.tail()","e96b53e0":"#display the how many rows and columns are there\nprint(\"the data frame has {} rows and {} columns\".format(zomato_df.shape[0],zomato_df.shape[1]))","5a981b57":"#display the data types of columns\nzomato_df.dtypes","dcb219e6":"#display the size of data frame\nprint(\"the size of data frame is {}\".format(zomato_df.size))","285df86a":"#dispaly the information of data frame\nzomato_df.info()","ecbab34a":"#display null values for each column\nzomato_df.apply(lambda x:sum(x.isnull()))","83d6ed06":"#display null values for each column graphically\nsns.heatmap(zomato_df.isnull(),cbar=0)\nplt.show()","5f614bc3":"#make the copy of data frame and apply changes to the new data frame\nnew_zomato_df = zomato_df.copy()","4eaeb418":"#so approx_cost is object type we have to make it integer type and remove ','\nimport re\ndef align_proper(x):\n    if (re.search(',',x)):\n        return(x.replace(',',''))\n    else:\n        return x\nnew_zomato_df['approx_cost(for two people)'] = new_zomato_df[new_zomato_df['approx_cost(for two people)'].notnull()]['approx_cost(for two people)'].apply(align_proper).astype('int')","e456ed45":"#fill null values of approx_cost with mean value of approx_cost\nnew_zomato_df['approx_cost(for two people)'] = new_zomato_df['approx_cost(for two people)'].fillna(value=np.mean(new_zomato_df['approx_cost(for two people)']))","9381d86a":"new_zomato_df['approx_cost(for two people)'] = new_zomato_df['approx_cost(for two people)'].astype('int')","56bdca5c":"#display the list of restaurant whose approx_cost(for two people) is minimum\nnew_zomato_df[new_zomato_df['approx_cost(for two people)']==new_zomato_df['approx_cost(for two people)'].min()]","95d1967f":"#display the list of restaurant whose approx_cost(for two people) is maximum\nnew_zomato_df[new_zomato_df['approx_cost(for two people)']==new_zomato_df['approx_cost(for two people)'].max()]","598bf0c2":"#display 5 number summary of approx_cost(for two people)\nnew_zomato_df['approx_cost(for two people)'].describe()","e869f28b":"#display graphically how approx_cost(for two people) distributed\nsns.distplot(new_zomato_df['approx_cost(for two people)'],kde=0)\nplt.show()","c6948f30":"#display which location has more restaurants\nnew_zomato_df['listed_in(city)'].value_counts()","2c900757":"#display which type of restaurants are more\nnew_zomato_df['listed_in(type)'].value_counts()","935acd82":"chart =sns.countplot(new_zomato_df['listed_in(type)'])\nchart.set_xticklabels(chart.get_xticklabels(),rotation=30)","037d0b83":"#display how many restaurants with online order \nnew_zomato_df['online_order'].value_counts()","e001e0f2":"#display which type of restaurant having online order option or not\nchart =sns.countplot(new_zomato_df['listed_in(type)'],hue=new_zomato_df['online_order'])\nchart.set_xticklabels(chart.get_xticklabels(),rotation=30)","666cc6d1":"pd.crosstab(new_zomato_df['listed_in(type)'],new_zomato_df['online_order'])","d52fc3b0":"so from above we can see BTM has maximum number of restaurants","a4e5dea5":"so from above we can see that 354 buffet type restaurants having online order facility while 528 buffet type restaurant not having online order facility","33747b61":"so from above we can see that some columns have null values","5154d873":"so from above we can see delivery type of restaurants are more and pubs and bars are least","1e24ef0e":"so we can see from above heatmap that dish_liked has more null values","dcc27ea8":"so from above we can see dish_liked has more null values","926aefdc":"so from above we can see 30444 restaurants with online order"}}