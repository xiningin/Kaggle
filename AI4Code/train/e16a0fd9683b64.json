{"cell_type":{"9e4876fc":"code","2fed9047":"code","3e1ac7bf":"code","caa341a1":"code","e975242c":"code","02300e9b":"code","4027bb3f":"code","92bcef60":"code","c3faa518":"code","4078aa40":"code","22d8f8d8":"code","cecf15b3":"code","63791031":"code","82a7efcc":"code","c23fabc7":"code","935b44db":"code","af1c0a5b":"code","8a95b054":"code","000bdfdc":"code","26e17ee5":"code","752c2acf":"code","cb683135":"code","ef269695":"code","05de59f9":"code","b36c4951":"code","e263340a":"code","543c9a7b":"code","8c2ead6d":"code","a0d55ea5":"code","47c9ade4":"code","6538ed2c":"code","2064b8cf":"code","a31a0946":"code","99834167":"code","20090508":"code","6222a433":"code","38c976b7":"code","46e56802":"markdown"},"source":{"9e4876fc":"!pip install openpyxl","2fed9047":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n%matplotlib inline","3e1ac7bf":"df_dir = \"..\/input\/tour-de-france-beginner-dataset\/tour_de_france.xlsx\"\ndf = pd.read_excel(df_dir, engine=\"openpyxl\")","caa341a1":"df.head()","e975242c":"df.dtypes","02300e9b":"df.columns","4027bb3f":"df.describe()","92bcef60":"df.columns","c3faa518":"newdf = df.rename(columns= lambda x : x.strip())\nnewdf","4078aa40":"newdf.dtypes","22d8f8d8":"newdf.columns","cecf15b3":"plt.scatter(newdf[\"Year\"], newdf[\"Finishers\"])\nplt.xlabel(\"Year\")\nplt.ylabel(\"Finishers\")\nplt.title(\"Number of finishers per year\")","63791031":"plt.scatter(newdf[\"Start Date\"], newdf[\"Entrants\"])\nplt.xlabel(\"Start Date\")\nplt.ylabel(\"Entrants\")","82a7efcc":"plt.scatter(newdf[\"Total distance (km)\"], newdf[\"Winner's avg speed\"])\nplt.xlabel(\"Total Distance\")\nplt.ylabel(\"Winner's avg speed\")\nplt.title(\"Winner's avg speed per distance\")","c23fabc7":"plt.scatter(newdf[\"Total distance (km)\"], newdf[\"Finishers\"])\nplt.xlabel(\"Total distance (km)\")\nplt.ylabel(\"Finishers\")\nplt.title(\"Number of finishers per distance\")","935b44db":"sns.jointplot( x = \"Year\", y = \"Finishers\", data = newdf, kind=\"reg\")","af1c0a5b":"sns.histplot(newdf[\"Entrants\"] , kde= True)","8a95b054":"sns.displot(newdf[\"Number of stages\"], kde = True)","000bdfdc":"sns.set_style(\"whitegrid\")\nsns.jointplot(x=\"Finishers\", y=\"Entrants\", data = newdf, kind = \"kde\")","26e17ee5":"sns.set_style(\"whitegrid\")\nsns.jointplot(x=\"Finishers\", y=\"Entrants\", data = newdf, kind = \"hist\")","752c2acf":"newdf[newdf[\"Winner's Nationality\"] == \"\u00ffFrance\" ].head()","cb683135":"null_list = df.isnull()\nnull_list.head(5)","ef269695":"for column in null_list.columns.values.tolist():\n    print(column)\n    print (null_list[column].value_counts())\n    print(\"\")","05de59f9":"new_df = newdf.drop(columns = [\"Winner\",\"Winner's Nationality\",\"Winner's Team\",\"Start Date\",\"End Date\", \"Starting city\", \"Starting country\", \"Finishing city\"])\nnew_df","b36c4951":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.neighbors import KNeighborsRegressor","e263340a":"new_df","543c9a7b":"new_df = new_df.drop([\"Finishers\"], axis = 1)","8c2ead6d":"x = new_df\ny = df.pop(\" Finishers \")","a0d55ea5":"train_test = pd.concat([x, y], axis = 1)\ntrain_test","47c9ade4":"X_train, X_test, y_train, y_test = train_test_split(train_test , y, test_size = 0.2, random_state = 69)","6538ed2c":"pipe = Pipeline([\n    (\"scale\", MinMaxScaler()),\n    (\"model\", KNeighborsRegressor(n_neighbors=2))\n])\n\npipe.get_params()","2064b8cf":"model = GridSearchCV(estimator = pipe,\n                     param_grid ={\"model__n_neighbors\": [1,2,3,4,5,6,7,8,9,10]},\n                     cv = 3)","a31a0946":"model.fit(X_train, y_train)","99834167":"pd.DataFrame(model.cv_results_)","20090508":"pred = model.predict(X_test)\npred","6222a433":"pd.DataFrame(pred)","38c976b7":"plt.scatter(pred, y_test)","46e56802":"**Machine Learning**"}}