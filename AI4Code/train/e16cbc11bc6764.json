{"cell_type":{"e5fa2ead":"code","672477d2":"code","84af3295":"code","c5e830e6":"code","3bf2b167":"code","d425067f":"code","84a7b759":"code","8e17af0b":"code","230c3d6d":"code","1acde52e":"code","a1280f0b":"code","9e59741e":"code","2617e31c":"code","675689f7":"code","7f2ba3e9":"code","f708e447":"code","77c18c79":"code","93435135":"code","73346465":"code","24e2143a":"code","2fe6e63f":"code","ef9966f2":"code","cf73b282":"code","3df0cc72":"code","c872473e":"code","468643e8":"code","527ec768":"code","90b33dc0":"code","bf33dc24":"code","2957136d":"code","9f333d11":"code","614b1767":"code","c172c2c7":"code","3e78e662":"code","c62179bc":"code","f7baef00":"code","e4712b37":"code","7f5b43f3":"markdown","9a4b881b":"markdown","84d8d800":"markdown","5325a3b0":"markdown","0d8c357a":"markdown","0f72b906":"markdown","5a9583bd":"markdown","bdd9b619":"markdown","10d4d2c9":"markdown","b7364a8b":"markdown","7bd6e448":"markdown","6d603601":"markdown","f7032f1e":"markdown","3e23a333":"markdown","378a359a":"markdown","032b34dc":"markdown","aad98241":"markdown","4314eb8c":"markdown","2427ea08":"markdown"},"source":{"e5fa2ead":"# Use this cell to set up import statements for all of the packages that you\n#   plan to use.\n\n# Remember to include a 'magic word' so that your visualizations are plotted\n#   inline with the notebook. See this page for more:\n#   http:\/\/ipython.readthedocs.io\/en\/stable\/interactive\/magics.html\n# import the requird modules\nimport pandas as pd\nimport numpy as np\nimport time\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n#% matplotlib inline","672477d2":"# Load your data and print out a few lines. Perform operations to inspect data\n#   types and look for instances of missing or possibly errant data.\n# Import data from \"URL\"\nurl = \"https:\/\/d17h27t6h515a5.cloudfront.net\/topher\/2017\/October\/59dd2e9a_noshowappointments-kagglev2-may-2016\/noshowappointments-kagglev2-may-2016.csv\"\ndf = pd.read_csv(url)","84af3295":"df.head()","c5e830e6":"#Information about every columns's datatype \ndf.info()","3bf2b167":"#columns names\ndf.columns","d425067f":"\n#IS THERE DUPLICATED ROW\ndf.duplicated().sum()\n","84a7b759":"#Number of NaN VALUES OF each columns\ndf.isnull().sum()","8e17af0b":"#Generate descriptive statistics\ndf.describe()","230c3d6d":"df[df[\"Age\"]<0]","1acde52e":"#Taking a copy of dataset to perform the cleaning process without  changing the real data\ndf_clean = df.copy()\ndf_clean","a1280f0b":"# After discussing the structure of the data and any problems that need to be\n#   cleaned, perform those cleaning steps in the second part of this section.\n","9e59741e":"# (1)name of last coulmn \"No-show\" convert to \"ATTEND APPOINTMENT\" TO be more clear\ndf_clean.rename(columns={\"No-show\":\"Attend_Appointment\"},inplace = True)\ndf_clean.info()","2617e31c":"# (2)convert \"ScheduledDay\"and\"AppointmentDay\" to datetime","675689f7":"df_clean[\"ScheduledDay\"] = pd.to_datetime(df_clean[\"ScheduledDay\"])\n\n\ndf_clean.info()","7f2ba3e9":"df_clean[\"AppointmentDay\"] = pd.to_datetime(df_clean[\"AppointmentDay\"])\ndf_clean.info()","f708e447":"#(3) I chage age from -1 to 1\n\ndf_clean.loc[(df.Age==-1),\"Age\"]=1","77c18c79":"\ndf_clean[df_clean.Age==-1]\n","93435135":"#(4) I change last column \"Yes\" to \"0\" and \"No\" to \"1\"\ndf_clean[\"Attend_Appointment\"] = df_clean[\"Attend_Appointment\"].replace([\"Yes\"],\"0\")\n#df_clean[\"Attend_Appointment\"].value_counts()","73346465":"df_clean[\"Attend_Appointment\"] = df_clean[\"Attend_Appointment\"].replace ( [\"No\"],\"1\")","24e2143a":"df_clean","2fe6e63f":"#(5)drop first and secound coulmna \ndf_clean.drop([\"PatientId\",\"AppointmentID\"],axis=1,inplace=True)","ef9966f2":"df_clean.info()","cf73b282":"df_clean_attend = df_clean[df_clean[\"Attend_Appointment\"]==\"1\"]\ndf_clean_attend.info()","3df0cc72":"df_clean_no_attend = df_clean[df_clean[\"Attend_Appointment\"]==\"0\"]\ndf_clean_no_attend","c872473e":"x = df_clean_attend[\"SMS_received\"].value_counts()[1]# number of patient that receive sms and attend appointment\nx","468643e8":"f = df_clean_attend[\"SMS_received\"].value_counts()[0]# number of patient that not receive sms and attend appointments\nf","527ec768":"y = df_clean_attend[\"Attend_Appointment\"].value_counts()# total number of patient attend\ny","90b33dc0":"l=round(x\/y*100)\nprint(\"percentage of patient that receive SMS\",l)\n","bf33dc24":"m = round(f\/y*100)\nprint(\"percentage of patient that not receive SMS\",m)","2957136d":"\nleft = [1,2]\nheight = [29,71]\ntick_label = [\"receive SMS\",\"NO SMS\"]\nplt.bar(left,height,tick_label = tick_label,width = 0.8,color = [\"red\",\"green\"])\nplt.xlabel(\"receive message OR no\")\nplt.ylabel(\"percentage of people attend\")\nplt.title(\"Relation between [number of patient attend] and [receive massage or not]\")","9f333d11":"G = df_clean_attend[\"Gender\"].value_counts()","614b1767":"female = G[0]\nMale = G[1]\nfemale,Male","c172c2c7":"left=[1,2]\nheight=[57246,30962]\ntick_label=[\"female\",\"male\"]\nplt.bar(left,height,tick_label=tick_label,width = 0.8,color=[\"yellow\",\"black\"])\nplt.xlabel(\"GENDER\")\nplt.ylabel(\"number of patient attend\")\nplt.title(\"relation between gender and attend\")","3e78e662":"df_clean_attend[\"Diabetes\"].value_counts().plot(kind='bar',title='relation between diabetes and attend')\nplt.xlabel(\"Diabets Patient\")\nplt.ylabel(\"count of attend patient\")","c62179bc":"plt.figure(figsize=(20,6))\nplt.xticks(rotation=90)\nsns.countplot(df_clean.Neighbourhood,hue=df_clean.Attend_Appointment)\nplt.title(\"Attend or NO by Neighbourhood\")\n\nplt.show","f7baef00":" df_clean[\"Attend_Appointment\"].value_counts().plot(kind=\"pie\",autopct=\"%.0f%%\",labels=[\"Attend\",\"NotAttend\"])#,shadow=True,radius=3,explode=[0,.2],fontsize=20)\n#plt.title(\"TITLE: percentage of attend or not\")\nplt.axis(\"equal\")","e4712b37":"from subprocess import call\ncall(['python', '-m', 'nbconvert', 'Investigate_a_Dataset.ipynb'])","7f5b43f3":"NOW FINALLY WE HAVE CLEAN DATA 100%","9a4b881b":"# # Q2: IS RELATION BETWEEN GENDER AND ATTEND APPOINTMENT?","84d8d800":"<a id='intro'><\/a>\n## Introduction\n\n> **Tip**: In this section of the report, provide a brief introduction to the dataset you've selected for analysis. At the end of this section, describe the questions that you plan on exploring over the course of the report. Try to build your report around the analysis of at least one dependent variable and three independent variables. If you're not sure what questions to ask, then make sure you familiarize yourself with the dataset, its variables and the dataset context for ideas of what to explore.\n\n> If you haven't yet selected and downloaded your data, make sure you do that first before coming back here. In order to work with the data in this workspace, you also need to upload it to the workspace. To do so, click on the jupyter icon in the upper left to be taken back to the workspace directory. There should be an 'Upload' button in the upper right that will let you add your data file(s) to the workspace. You can then click on the .ipynb file name to come back here.","5325a3b0":"# it is clear that female attend more than male","0d8c357a":"# its clear that no relation between SMS AND PATIENT ATTEND","0f72b906":"# Q4:PERCENTAGE OF PATIENT ATTEND AND PATIENT NOT ATTENG?","5a9583bd":"# <a id='conclusions'><\/a>\n## Conclusions\nAfter clean data i found: (1)female attend appointment more than male\n                          (2)normal pepople attend more than diabies\n                          (3)sending SMS TO patient donot effect\n                          (4)the most number of patient that attend appointment in neighbourhood \"ARDIM CAMBURI\"\n\n##limitations\nFor more clear data analysis want to look into more details like :\n*The address of patient this help to determine if the distance from patient to medical centre make difference\n> **Tip**: Finally, summarize your findings and the results that have been performed. Make sure that you are clear with regards to the limitations of your exploration. If you haven't done any statistical tests, do not imply any statistical conclusions. And make sure you avoid implying causation from correlation!\n\n> **Tip**: Once you are satisfied with your work here, check over your report to make sure that it is satisfies all the areas of the rubric (found on the project submission page at the end of the lesson). You should also probably remove all of the \"Tips\" like this one so that the presentation is as polished as possible.\n\n## Submitting your Project \n\n> Before you submit your project, you need to create a .html or .pdf version of this notebook in the workspace here. To do that, run the code cell below. If it worked correctly, you should get a return code of 0, and you should see the generated .html file in the workspace directory (click on the orange Jupyter icon in the upper left).\n\n> Alternatively, you can download this report as .html via the **File** > **Download as** submenu, and then manually upload it into the workspace directory by clicking on the orange Jupyter icon in the upper left, then using the Upload button.\n\n> Once you've done this, you can submit your project by clicking on the \"Submit Project\" button in the lower right here. This will create and submit a zip file with this .ipynb doc and the .html or .pdf version you created. Congratulations!","bdd9b619":"## GATHERING DATA","10d4d2c9":"# Quetion 1 Is their relation between \"receive message\" and \"attend appointment\"?","b7364a8b":"# ASSESSING DATA ","7bd6e448":"# Use this, and more code cells, to explore your data. Don't forget to add\n\n#I SEPRATE DATA IN TWO SEPERATE FRAME ONE FOR ATTENT AND ANOTHER FRAME FOR NOT ATTEND\n","6d603601":"# > **Tip**: Welcome to the Investigate a Dataset project! \n\n# Project: Investigate a Dataset (MEDICAL APPOINTED NO SHOWS)\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","f7032f1e":"# THAT  CLEAR MOST PATIENT ATTEND APPOINTMENT IN NEIGHBOURHOOD \"JARDIM CAMBURI\"","3e23a333":"<a id='wrangling'><\/a>\n## Data Wrangling\n\n> **Tip**: In this section of the report, you will load in the data, check for cleanliness, and then trim and clean your dataset for analysis. Make sure that you document your steps carefully and justify your cleaning decisions.\n\n### General Properties","378a359a":"# it is clear that normal patient attend appointment more than diabetes patient","032b34dc":"# > **Tip**: You should _not_ perform too many operations in each cell. Create cells freely to explore your data. One option that you can take with this project is to do a lot of explorations in an initial notebook. These don't have to be organized, but make sure you use enough comments to understand the purpose of each code cell. Then, after you're done with your analysis, create a duplicate notebook where you will trim the excess and organize your steps so that you have a flowing, cohesive report.\n\n> **Tip**: Make sure that you keep your reader informed on the steps that you are taking in your investigation. Follow every code cell, or every set of related code cells, with a markdown cell to describe to the reader what was found in the preceding cell(s). Try to make it so that the reader can then understand what they will be seeing in the following cell(s).\n\n### Data Cleaning ","aad98241":"##### for data cleaning \n#(1) I rename last coulmn to more clear name\n#(2) convert type of coulmns to suitable datatype\n#(3) there is mistake or error in Age = -1 so I CHANGE IT TO 1   \n#(4) last column Attend appointent , I replace \"No\" insted of  \" no no show up\" to \"1 \" and \"Yes\" to \"0\"\n#(5) I drop patientId and APPOINTMENTID because i donot need in analysis","4314eb8c":"# Q3: WHAT IS NEIGHBOURHOOD THAT INCLUDE MORE PATIENT ATTRND?","2427ea08":"# CLEANINAG DATA"}}