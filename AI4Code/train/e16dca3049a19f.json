{"cell_type":{"2662f7b0":"code","5e737c82":"code","0116ac4e":"code","b9c882ec":"code","6ea3197e":"code","1fd33cbc":"code","6f0b69e8":"code","e16fe114":"code","537ce0fe":"code","d1953719":"code","5b909bbf":"code","5808934b":"markdown","cd6d1d00":"markdown","d168d83e":"markdown","6756657f":"markdown","a30727dc":"markdown","99d30f96":"markdown","fb997fdc":"markdown","7fec01ad":"markdown","752e3184":"markdown","c8661c3f":"markdown","7de7acea":"markdown"},"source":{"2662f7b0":"!pip install kaggle-environments==0.3.2","5e737c82":"def east_agent(obs, config):\n    actions = {}\n    me = obs.players[obs.player]\n    num_yards = len(me[1])\n    num_ships = len(me[2])\n    for i, ship_id in enumerate(me[2].keys()):\n        if obs.step != 2:\n            if i % 2 == 0:\n                actions[ship_id] = \"EAST\"\n            else:\n                actions[ship_id] = \"WEST\"\n    if num_yards == 0:\n        first_ship = next(iter(me[2].keys()))\n        actions[first_ship] = \"CONVERT\"\n    elif num_ships == 0 or obs.step == 2:\n        first_yard = next(iter(me[1].keys()))\n        actions[first_yard] = \"SPAWN\"\n    return actions\n\n\ndef south_agent(obs, config):\n    actions = {}\n    me = obs.players[obs.player]\n    num_yards = len(me[1])\n    num_ships = len(me[2])\n    for ship_id in me[2].keys():\n        actions[ship_id] = \"SOUTH\"\n    if num_yards == 0:\n        first_ship = next(iter(me[2].keys()))\n        actions[first_ship] = \"CONVERT\"\n    elif num_ships == 0:\n        first_yard = next(iter(me[1].keys()))\n        actions[first_yard] = \"SPAWN\"\n    return actions\n    ","0116ac4e":"from kaggle_environments import make\n\nenv = make(\"halite\", configuration={\"episodeSteps\": 10})\nenv.run([east_agent, south_agent])\nenv.render(mode=\"ipython\", width=800, height=600)","b9c882ec":"def east_agent2(obs, config):\n    actions = {}\n    me = obs.players[obs.player]\n    num_yards = len(me[1])\n    num_ships = len(me[2])\n    for i, ship_id in enumerate(me[2].keys()):\n        if obs.step == 2:\n            actions[ship_id] = \"WEST\"\n        elif obs.step == 3:\n            pass\n        elif obs.step == 4:\n            actions[ship_id] = \"EAST\"\n        elif obs.step > 4:\n            if i % 2 == 0:\n                actions[ship_id] = \"EAST\"\n            else:\n                actions[ship_id] = \"WEST\"\n    if num_yards == 0:\n        first_ship = next(iter(me[2].keys()))\n        actions[first_ship] = \"CONVERT\"\n    elif num_ships == 0 or obs.step == 4:\n        first_yard = next(iter(me[1].keys()))\n        actions[first_yard] = \"SPAWN\"\n    return actions\n\n","6ea3197e":"import random\nimport numpy as np\n\nfrom kaggle_environments import make\n\nrandom.seed(0)\nnp.random.seed(1)\nenv = make(\"halite\", configuration={\"episodeSteps\": 10})\nenv.run([east_agent2, south_agent])\nenv.render(mode=\"ipython\", width=800, height=600)","1fd33cbc":"def east_agent3(obs, config):\n    actions = {}\n    me = obs.players[obs.player]\n    num_yards = len(me[1])\n    num_ships = len(me[2])\n    for i, ship_id in enumerate(me[2].keys()):\n        if i % 2 == 1:\n            actions[ship_id] = \"EAST\"\n        else:\n            actions[ship_id] = \"WEST\"\n    if num_yards == 0:\n        first_ship = next(iter(me[2].keys()))\n        actions[first_ship] = \"CONVERT\"\n    elif num_ships == 0 or obs.step == 2:\n        first_yard = next(iter(me[1].keys()))\n        actions[first_yard] = \"SPAWN\"\n    return actions","6f0b69e8":"from kaggle_environments import make\n\n# SET episodeSteps to 13\nenv = make(\"halite\", configuration={\"episodeSteps\": 13})\nenv.run([east_agent3, south_agent])\nenv.render(mode=\"ipython\", width=800, height=600)","e16fe114":"from kaggle_environments import make\n\n# CHANGED episodeSteps to 14\nenv = make(\"halite\", configuration={\"episodeSteps\": 14})\nenv.run([east_agent3, south_agent])\nenv.render(mode=\"ipython\", width=800, height=600)","537ce0fe":"def east_agent3b(obs, config):\n    actions = {}\n    me = obs.players[obs.player]\n    num_yards = len(me[1])\n    num_ships = len(me[2])\n    for i, ship_id in enumerate(me[2].keys()):\n        actions[ship_id] = \"EAST\"\n    if num_yards == 0:\n        first_ship = next(iter(me[2].keys()))\n        actions[first_ship] = \"CONVERT\"\n    elif num_ships == 0:\n        first_yard = next(iter(me[1].keys()))\n        actions[first_yard] = \"SPAWN\"\n    return actions\n\n\ndef occupy_agent(obs, config):\n    actions = {}\n    me = obs.players[obs.player]\n    num_yards = len(me[1])\n    num_ships = len(me[2])\n    if obs.step == 0:\n        first_ship = next(iter(me[2].keys()))\n        actions[first_ship] = \"CONVERT\"\n    elif obs.step == 1:\n        first_yard = next(iter(me[1].keys()))\n        actions[first_yard] = \"SPAWN\"\n    return actions\n","d1953719":"import random\nimport numpy as np\n\nfrom kaggle_environments import make\n\nrandom.seed(0)\nnp.random.seed(1)\n\nenv = make(\"halite\", configuration={\"episodeSteps\": 15})\nenv.run([east_agent3b, occupy_agent])\nenv.render(mode=\"ipython\", width=800, height=600)","5b909bbf":"import random\nimport numpy as np\n\n\ndef echo_min_halite_agent(obs, config):\n    actions = {}\n    print(f\"Step {obs.step} min halite square {min(obs.halite)}\")\n    return actions\n\nrandom.seed(0)\nnp.random.seed(0)\nenv = make(\"halite\", configuration={\"episodeSteps\": 15})\nenv.run([echo_min_halite_agent, \"random\", \"random\", \"random\"])\nenv.render(mode=\"ipython\", width=800, height=600)\n","5808934b":"But run the game to step 14 where two ships collide with an enemy shipyard and the game crashes.","cd6d1d00":"After step 12 a ship collides with an occupied enemy shipyard.  The enemy ship survives the collision.  Shouldn't the enemy ship be destroyed?","d168d83e":"When a ship with cargo is in the shipyard during a spawn it should be destroyed, but the new ship should live.","6756657f":"# Occupied Spawn\n\nShips can be successfully spawned while a shipyard is occupied.  Based on the text of the rules this should result in a collision.","a30727dc":"Up until step 13 everything is fine.","99d30f96":"On step 4 a ship is spawned while an empty ship is in the shipyard.  You see an explosion.  Both ships should be destroyed.  On the next step two ships emerge from the shipyard.","fb997fdc":"# Negative Halite\n\nThe new halite seeding algorithm sometimes results in negative halite.","7fec01ad":"# The bugs described in this notebook have been fixed in kaggle-environments 0.3.9","752e3184":"## Occupied Collision\n\nIn this case an enemy ship collides with an occupied shipyard.","c8661c3f":"After step 5 a ship with cargo will go to the shipyard while a new ship is being spawned.  Again, both ships survive.","7de7acea":"# Simultaneous Shipyard Collision\n\nThis bug occurs when multiple ships including at least one enemy ship are in a shipyard at the same time.  I'll demonstrate two different ways this can occur.\n\n## Enemy Collision\nWhen two or more ships collide with the same enemy shipyard the halite game crashes."}}