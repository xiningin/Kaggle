{"cell_type":{"3e22d19f":"code","073d8610":"markdown","cc83f603":"markdown"},"source":{"3e22d19f":"import pandas as pd\n\n# Calculate information value\ndef calc_iv(df, feature, target, pr=0):\n\n    lst = []\n\n    for i in range(df[feature].nunique()):\n        val = list(df[feature].unique())[i]\n        lst.append([feature, val, df[df[feature] == val].count()[feature], df[(df[feature] == val) & (df[target] == 1)].count()[feature]])\n\n    data = pd.DataFrame(lst, columns=['Variable', 'Value', 'All', 'Bad'])\n    data = data[data['Bad'] > 0]\n\n    data['Share'] = data['All'] \/ data['All'].sum()\n    data['Bad Rate'] = data['Bad'] \/ data['All']\n    data['Distribution Good'] = (data['All'] - data['Bad']) \/ (data['All'].sum() - data['Bad'].sum())\n    data['Distribution Bad'] = data['Bad'] \/ data['Bad'].sum()\n    data['WoE'] = np.log(data['Distribution Good'] \/ data['Distribution Bad'])\n    data['IV'] = (data['WoE'] * (data['Distribution Good'] - data['Distribution Bad'])).sum()\n\n    data = data.sort_values(by=['Variable', 'Value'], ascending=True)\n\n    if pr == 1:\n        print(data)\n\n    return data['IV'].values[0]","073d8610":"# Information Value (IV) & Weight of evidence (WOE) using Python\nInformation value (IV) and Weight of evidence (WOE) are simple, yet powerful techniques to perform variable transformation and selection. These concepts have huge connection with the logistic regression modeling technique. It is widely used in credit scoring to measure the separation of good vs bad customers.\nThe advantages of WOE transformation are\n* Handles missing values\n* Handles outliers\n* The transformation is based on logarithmic value of distributions. This is aligned with the logistic regression output function\n* No need for dummy variables\n* By using proper binning technique, it can establish monotonic relationship (either increase or decrease) between the independent and dependent variable","cc83f603":"## The WOE and IV calculation can be invoked using the below code.\n* final_iv, IV = data_vars(df, df.target)\nThe final_iv dataframe has all the WOE transformations and looks similar to the Figure 2 shown above. The IV dataframe gives the consolidated IV values for each input variables and looks like below."}}