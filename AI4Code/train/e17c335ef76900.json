{"cell_type":{"3aeeb5ef":"code","46119ef5":"code","c2694d8f":"code","e133b052":"code","dc5777b6":"code","25642c09":"code","32e3177b":"code","689002b3":"code","c37dfa63":"code","68f75c9d":"code","1fe6e096":"markdown"},"source":{"3aeeb5ef":"#importing pandas with alias pd\nimport pandas as pd","46119ef5":"#creating a dataframe from the dataset\ndataset=pd.read_csv(\"..\/input\/awamiawaz-sindhi-articles-classification-dataset\/Articles Dataset.csv\")","c2694d8f":"# having a look at the dataset\ndataset.head()","e133b052":"# intializing the label column for the classifier\ny=dataset.iloc[:,4].values\ny","dc5777b6":"# creating corpus of vector from title of article \ncorpus=[]\nfor i in range(0,3366):\n    review = dataset['title'][i]\n    review=review.split()\n    review=' '.join(review)\n    corpus.append(review)","25642c09":"# creating matrix of features using CountVectorizer\nfrom sklearn.feature_extraction.text import CountVectorizer    \ncv=CountVectorizer(max_features=3000)\nx=cv.fit_transform(corpus).toarray()","32e3177b":"# applying label encoder to the y as labels in y are form of text\nfrom sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\ny=le.fit_transform(y)","689002b3":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.20, random_state=0)","c37dfa63":"#importing the deicsion tree classifier\nfrom sklearn.tree import DecisionTreeClassifier\nclassifier=DecisionTreeClassifier()\n#fiting the classifier on training data\nclassifier.fit(X_train,y_train)\n#performing prediction on testing data\npred=classifier.predict(X_test)","68f75c9d":"#importing the evaluation paramters \nfrom sklearn.metrics import accuracy_score,precision_score,recall_score\nfrom sklearn.metrics import confusion_matrix\n#creating confusion matrix based on the results\ncm=confusion_matrix(y_test,pred)\nprint(\"confusion matrix\")\nprint(cm)\n#printing accuracy of the classifier\nprint('Accuracy score: {}'.format(accuracy_score(y_test, pred)))\n#printing precision of the classifier\nprint('Precision score: {}'.format(precision_score(y_test, pred,average=None)))\n#printing accuracy of the classifier\nprint('Recall score: {}'.format(recall_score(y_test, pred,average=None)))","1fe6e096":"# Sindhi Text Classification Sample Notebook\n#### Here in this notebook we will be creating a simple Decision Tree Classifier for sindhi text classification.\n - The feature taken for the classification is the title of the text\n - Label is the genre of the article i.e. entertainment, sport and technology\n - The Goal is to predict genre by text of title"}}