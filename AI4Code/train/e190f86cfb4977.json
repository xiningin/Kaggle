{"cell_type":{"fd7be252":"code","934b03ac":"code","d7fc39c6":"code","31c511f1":"code","61d390dc":"code","64651a86":"code","77d0694e":"code","37351af4":"code","cefe3434":"code","608282ab":"code","a858f8da":"code","06102544":"code","c2a82a7e":"code","fca05018":"code","20bf5e81":"code","e5ff0edf":"code","d0fcb886":"code","a3389518":"code","b2cdda1e":"code","b5d276a1":"markdown"},"source":{"fd7be252":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os","934b03ac":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ndata=pd.read_csv('\/kaggle\/input\/game-of-thrones\/character-deaths.csv')\ndata.head(5)\n\n","d7fc39c6":"data","31c511f1":"data.isna().sum()","61d390dc":"df=data.fillna(0) ## 1. Replacing every NaN with 0","64651a86":"## Sometimes replacing missing values with 0 might not be fine for the string data,\n## like if we would have data for \"Death Chapter\" :First chapter, Second Chapter\n## Replacing the NaN data with 0 will be not a good idea,\n## So we would replace with the String Value \"no chapter\"\n## whereas all other columns with missing data with 0 value","77d0694e":"new_df1=data.fillna({\n    \"Death Year\":0,\n    \"Book of Death\":0,\n    \"Death Chapter\": \"no chapter\",\n    \"Book Intro Chapter\":0\n    \n})","37351af4":"new_df1[\"Death Chapter\"]","cefe3434":"df1=data.fillna(method=\"ffill\") ## Replaces missing values with the preceding value instead of having 0\ndf1","608282ab":"df2=data.fillna(method=\"bfill\") ## Replaces missing values with the following value instead of having 0\ndf2","a858f8da":"df3=data.interpolate() ## interpolate() that, by default, performs linear interpolation at missing data points","06102544":"df3[\"Death Year\"]\n","c2a82a7e":"df4=data.dropna()","fca05018":"df4","20bf5e81":"data","e5ff0edf":"## dropna() dropped more than 625 rows..\n","d0fcb886":"df5=data.dropna(thresh=2) \n\n## thresh=N requires that a column has at least N non-NaNs to survive.\n","a3389518":"data=data.replace(\"None\", np.NaN)","b2cdda1e":"data","b5d276a1":"Personally, I don't think replacing methods with the previous or the following fields would make sense, especially with our data where the data is algorithmically sorted and replacing the death of year with the previous or forwading data would be really inaccurate. \n\nMaybe this method would be more appropriate for the data that does not vary so much and presented in the time-sorted way...But I think we need to be careful using that method."}}