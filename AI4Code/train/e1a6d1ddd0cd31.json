{"cell_type":{"5b2f3e13":"code","3a5cbf15":"code","cf5db37b":"code","e2866bfe":"code","e25d5c39":"code","a9e118c6":"code","05ea1337":"code","4a80b5d7":"code","fffb9bb1":"code","b6d00c5e":"code","f4bcd64b":"code","6f942cc4":"code","531f1bd3":"code","a2bcf1e1":"code","eb979e1b":"code","14f117c9":"code","a7f3bc91":"code","a7855852":"code","8633044f":"code","9b1ca430":"code","489360c9":"code","c5a80957":"code","659b90ed":"code","df2084bb":"code","1cc0ca8b":"code","6eefb93f":"code","a39d3278":"code","66796d12":"code","6dfc39bf":"code","e285b64d":"code","71ff2431":"code","03046c05":"code","348a343c":"markdown","34ef6fab":"markdown","a4067851":"markdown","71750c97":"markdown","3a83a391":"markdown","b9a30699":"markdown","557ec817":"markdown","a1949a23":"markdown","502b101f":"markdown","68e5da2b":"markdown","8160d7d9":"markdown","2c118e95":"markdown","83196eb8":"markdown","b6114b71":"markdown","0ecb1968":"markdown","bc3ab410":"markdown","dc24396f":"markdown","2bb80362":"markdown"},"source":{"5b2f3e13":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3a5cbf15":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nsns.set() #overwrite the matplotlib with style of seaborn, we'll code the graphs using matplot but displayed with seaborn","cf5db37b":"!pip install openpyxl","e2866bfe":"df = pd.read_excel('..\/input\/real-estate-florida\/Real Estate Florida.xlsx')","e25d5c39":"df.head()","a9e118c6":"df.drop(df[:3].index, inplace=True)\n","05ea1337":"df.head()","4a80b5d7":"df.drop(labels=\"Unnamed: 0\", axis=1, inplace=True)\n","fffb9bb1":"df.head()","b6d00c5e":"df, df.columns = df[1:] , df.iloc[0]\n","f4bcd64b":"df.columns","6f942cc4":"df.head()","531f1bd3":"df.reset_index(drop=True, inplace=True)\ndf.head()","a2bcf1e1":"df.groupby('Type of property').count()['Price'].hist(bins=7)","eb979e1b":"grouped = df.groupby('Type of property')\ngrouped.head()","14f117c9":"group1 = grouped.get_group(\"Apartment\")\ngroup2 = grouped.get_group(\"House\")\ngroup3 = grouped.get_group(\"Office\")","a7f3bc91":"import numpy as np\nbinwidth = 100000\ndf.Price.hist(by=df['Type of property'],bins=np.arange(min(df['Price']), max(df['Price']) + binwidth, binwidth)\n              , figsize=(10,10))","a7855852":"sns.set_style(\"white\") # override the default matplotlib style, to avoid the grey background and grid\nplt.figure(figsize = (8, 6)) # determine the size of the figure\ny, x, patches = plt.hist(group1[\"Price\"],# the variable on which to create the histogram\n         bins = 7, # create a histogram with 8 bins\n         color = \"#108A99\")\nplt.title(\"Distribution of Real Estate Prices of Apartments\", fontsize = 14, weight = \"bold\")\nplt.xlabel(\"Price in (000's $)\")\nplt.ylabel(\"Number of Properties\")\nsns.despine() # removes the top and right border of our graph\nplt.show()\n\nprint (x.max())\nprint (y.max())\n","8633044f":"[print(x) for x in patches] ","9b1ca430":"sns.set_style(\"white\") # override the default matplotlib style, to avoid the grey background and grid\nplt.figure(figsize = (8, 6)) # determine the size of the figure\nplt.hist(group2[\"Price\"],# the variable on which to create the histogram\n         bins = 8, # create a histogram with 8 bins\n         color = \"#108A99\")\nplt.title(\"Distribution of Real Estate Prices of Houses\", fontsize = 14, weight = \"bold\")\nplt.xlabel(\"Price in (000's $)\")\nplt.ylabel(\"Number of Properties\")\nsns.despine() # removes the top and right border of our graph\nplt.show()","489360c9":"sns.set_style(\"white\") # override the default matplotlib style, to avoid the grey background and grid\nplt.figure(figsize = (8, 6)) # determine the size of the figure\nplt.hist(group3[\"Price\"],# the variable on which to create the histogram\n         bins = 8, # create a histogram with 8 bins\n         color = \"#108A99\")\nplt.title(\"Distribution of Real Estate Prices of Offices\", fontsize = 14, weight = \"bold\")\nplt.xlabel(\"Price in (000's $)\")\nplt.ylabel(\"Number of Properties\")\nsns.despine() # removes the top and right border of our graph\nplt.show()","c5a80957":"plt.figure(figsize = (12, 8)) # size of the figure\nscatter = plt.scatter(group1['Area (ft.)'],\n            group1['Price'], \n            alpha = 0.6, #transparency level of points on the plot. Used to avoid overplotting\n            cmap = 'viridis') #color map for the third variable\n# add and format additional elements, such as legends, titles and axis labels\nplt.legend(*scatter.legend_elements(),\n           loc = \"upper left\",\n           title = \"Building Type\")\nplt.title(\"Relationship between Area and Price of Florida Real Estate (Apartments)\", \n          fontsize = 14, \n          weight = \"bold\")\nplt.xlabel(\"Area (sq. ft.)\", weight = \"bold\")\nplt.ylabel(\"Price (000's of $)\")\nplt.show()","659b90ed":"plt.figure(figsize = (12, 8)) # size of the figure\nscatter = plt.scatter(group2['Area (ft.)'],\n            group2['Price'], \n            alpha = 0.6, #transparency level of points on the plot. Used to avoid overplotting\n            cmap = 'viridis') #color map for the third variable\n# add and format additional elements, such as legends, titles and axis labels\nplt.legend(*scatter.legend_elements(),\n           loc = \"upper left\",\n           title = \"Building Type\")\nplt.title(\"Relationship between Area and Price of Florida Real Estate (House)\", \n          fontsize = 14, \n          weight = \"bold\")\nplt.xlabel(\"Area (sq. ft.)\", weight = \"bold\")\nplt.ylabel(\"Price (000's of $)\")\nplt.show()","df2084bb":"plt.figure(figsize = (12, 8)) # size of the figure\nscatter = plt.scatter(group3['Area (ft.)'],\n            group3['Price'], \n            alpha = 0.6, #transparency level of points on the plot. Used to avoid overplotting\n            cmap = 'viridis') #color map for the third variable\n# add and format additional elements, such as legends, titles and axis labels\nplt.legend(*scatter.legend_elements(),\n           loc = \"upper left\",\n           title = \"Building Type\")\nplt.title(\"Relationship between Area and Price of Florida Real Estate (Office)\", \n          fontsize = 14, \n          weight = \"bold\")\nplt.xlabel(\"Area (sq. ft.)\", weight = \"bold\")\nplt.ylabel(\"Price (000's of $)\")\nplt.show()","1cc0ca8b":"from scipy.stats import skew\nfrom scipy import stats","6eefb93f":"from scipy.stats import kurtosis\nfrom scipy import stats\n\nz=np.array(group1['Price'],dtype=np.float32)\nprint(kurtosis(z))","a39d3278":"z=np.array(group2['Price'],dtype=np.float32)\nprint(kurtosis(z))","66796d12":"z=np.array(group3['Price'],dtype=np.float32)\nprint(kurtosis(z))","6dfc39bf":"mean = np.mean(group2['Price'])\nmedian = np.median(group2['Price'])\nmode = stats.mode(group2['Price'])\n\nprint('Mean = ', mean)\nprint('Median = ', median)\nprint('Mode = ', mode)","e285b64d":"print (\"Covariance = \", np.cov(group1['Price'].astype(float), group1['Area (ft.)'].astype(float), rowvar=False)[0][1])\nprint (\"Correlation = \", stats.pearsonr(group1['Area (ft.)'], group1['Price'])[0])    # Pearson's r\n","71ff2431":"print (\"Covarianc e= \", np.cov(group2['Price'].astype(float), group2['Area (ft.)'].astype(float), rowvar=False)[0][1])\nprint (\"Correlation = \", stats.pearsonr(group2['Area (ft.)'], group2['Price'])[0])    # Pearson's r\n","03046c05":"print (\"Covariance = \", np.cov(group3['Price'].astype(float), group3['Area (ft.)'].astype(float), rowvar=False)[0][1])\nprint (\"Correlation = \", stats.pearsonr(group3['Area (ft.)'], group3['Price'])[0])    # Pearson's r\n","348a343c":"**Data Wrangling:**","34ef6fab":"Office","a4067851":"At the same time, the scatter plot shows a low correlation between Price and Area for Houses.","71750c97":"Skewnees of apartment Prices: ","3a83a391":"Covariance and Correlation Calculation:","b9a30699":"Note that \"Houses\" exhibit the highest correlation between Price and Area","557ec817":"**Importing Data Sets**","a1949a23":"The scatter plots show a very strong linear relationship between Price and Area for Offices","502b101f":"Calculate mean, median and mode","68e5da2b":"Apartment","8160d7d9":"**Thanks for reading!**","2c118e95":"The scatter plots show a very strong linear relationship between Price and Area for Apartments ","83196eb8":"Skewnees of office Prices","b6114b71":"Skewnees of house Prices:  \n \n \nThe house prices exhibit a negative skewness. The mean will be less than the median.","0ecb1968":"**Data Visualization for Statistics**","bc3ab410":"**Statistical Analysis**","dc24396f":"Create three histograms based on the price variable of the different property types (Apartment, House, and Office).","2bb80362":"House\n"}}