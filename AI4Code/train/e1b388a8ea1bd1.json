{"cell_type":{"c49553da":"code","a42e99e1":"code","a0073598":"code","9b087c37":"code","797608ef":"code","2b6b45b5":"code","0d22ffe4":"code","a7f0cc8b":"code","a1ba4a3b":"code","2a530906":"code","76226896":"code","810fd55c":"code","2262feda":"code","14e590ef":"code","66efc711":"code","d04db627":"code","616dd51a":"code","630f6f46":"code","8b5a906d":"code","551719c7":"code","cee767cd":"code","1cca9a29":"code","a25310d4":"code","e2f0a67c":"code","5578e048":"code","7892c067":"code","ab646e8e":"code","b05266b2":"code","538f749d":"code","04bc6258":"code","f0f49ea3":"code","de9e9967":"code","45ecfb62":"code","fabd745b":"code","bd7c77cb":"code","46f1efbc":"code","db9b08bb":"code","74f44b38":"code","3a55743c":"code","8a9882a5":"code","f3d2ddd9":"code","251b2ea4":"code","629100f4":"code","3252fab5":"code","1a2bfa55":"code","f3640787":"code","b57f8dd4":"code","dfcb11b4":"code","66b5fa9c":"code","36713c44":"code","f43b9e40":"code","9333f743":"code","cda5b444":"code","520a746b":"code","5098616c":"code","82764086":"code","24f02308":"code","84fb8825":"code","08241f74":"code","a5ccc560":"code","1a40d115":"code","722a49d1":"code","8f535f2c":"code","b348ff92":"code","a71a4c14":"code","a164481c":"code","32953a60":"code","603bbcfd":"code","813f1a31":"code","56e14c2b":"markdown","607dfd39":"markdown","22d4eccd":"markdown","e88ef746":"markdown","f13f34f1":"markdown","9491fa36":"markdown","be32277b":"markdown","0e5a34d1":"markdown","03a43610":"markdown","72e4fa0c":"markdown","96639bfc":"markdown","e872a297":"markdown","eadb5dfd":"markdown","90e14b6b":"markdown","c2ab8aa4":"markdown","fba82f6f":"markdown","0d30bdf4":"markdown","43672927":"markdown","a7c05ef1":"markdown","de9c9de6":"markdown","9182ba24":"markdown","957b2890":"markdown","1ad11b92":"markdown","2eef6fb2":"markdown","1b708800":"markdown","fffa5dfa":"markdown","d6d96999":"markdown","096f3110":"markdown","7a3eeaa1":"markdown","8e83f227":"markdown","b0a0e863":"markdown","c662298c":"markdown","205fcab5":"markdown","ca088ebe":"markdown","410f5264":"markdown","1fdb7048":"markdown","e7245434":"markdown","ce695f60":"markdown","a9637195":"markdown","a2f3299d":"markdown","bc696c94":"markdown","78d4fd0a":"markdown","f34b88f3":"markdown","74532e55":"markdown","2761cfdb":"markdown","06d9b805":"markdown","e32b517f":"markdown","9eb8fd99":"markdown","4976a66d":"markdown","d021fef0":"markdown","cf900902":"markdown","7d8582aa":"markdown","36df8098":"markdown","60669b2a":"markdown"},"source":{"c49553da":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot,iplot\ninit_notebook_mode (connected=True)\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import GridSearchCV\nimport xgboost as xgb\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nimport plotly.io as pio\npio.renderers.default='notebook'","a42e99e1":"df=pd.read_csv('..\/input\/covid19-dataset\/Covid-19_Dataset.csv')","a0073598":"df.head(2)","9b087c37":"df.shape","797608ef":"df.dtypes","2b6b45b5":"df.info()","0d22ffe4":"df.drop(['id','case_in_country','summary','symptom_onset', 'If_onset_approximated', 'hosp_visit_date', 'exposure_start',\n'exposure_end', 'symptom', 'source', 'link'],axis=1,inplace=True)","a7f0cc8b":"100*df.isnull().sum()\/df.shape[0]","a1ba4a3b":"df['age']= df['age']. fillna(df['age'].mean())","2a530906":"df_dum=pd.get_dummies(df['gender'].dropna(), drop_first=True)","76226896":"df_dum['male'].median()","810fd55c":"df['gender']= df['gender']. fillna('male')","2262feda":"df.dropna(inplace=True)","14e590ef":"df.isnull().sum()","66efc711":"df.columns=df.columns.str.lower().str.replace(' ','_')","d04db627":"df['reporting_date']=pd.to_datetime(df['reporting_date'])","616dd51a":"df['year']=df['reporting_date'].apply(lambda x:x.year)\ndf['month']=df['reporting_date'].apply(lambda x:x.month)","630f6f46":"df['month'].unique()","8b5a906d":"df.drop(['reporting_date', 'year'], axis=1, inplace=True)","551719c7":"df.head(2)","cee767cd":"plt.figure(figsize=(8,6))\ndf[df['death']==1]['age'].plot(kind='hist',bins=70,colormap='Accent')\nplt.title('Number of Patients Died Based On Their Age',fontsize=15)\nplt.xlabel('Age',fontsize=12)\nplt.ylabel('Frequency',fontsize=12)\nplt.show()","1cca9a29":"plt.figure(figsize=(8,6))\ndf[df['recovered']==1]['age'].plot(kind='hist',bins=70,colormap='rainbow')\nplt.title('Number of Patients Recovered Based On Their Age',fontsize=15)\nplt.xlabel('Age',fontsize=12)\nplt.ylabel('Frequency',fontsize=12)\nplt.show()","a25310d4":"print('Current count of patients:',df['death'].count())\nprint('Number of Dead Patients:', df[df['death']==1]['death'].count())\nprint('Number of Recovered Patients:',df[df['recovered']==1]['death'].count())\nprint('Number of Patients Receiving Treatment:',df[(df['death']==0)&(df['recovered']==0)]['death'].count())","e2f0a67c":"plt.figure(figsize=(8,6))\nplt.bar(x=['Recovered','Dead'],height=[159,63], color='pink')\nplt.title('Patients Status',fontsize=15)\nplt.xlabel('Status', fontsize=12)\nplt.ylabel('Number',fontsize=12)\nplt.show()","5578e048":"plt.figure(figsize=(15,6))\nplt.subplot(1,2,1)\nsns.countplot(x='gender', data=df[df['death']==1], palette='viridis')\nplt.xlabel('Gender', fontsize=12)\nplt.ylabel('Count', fontsize=12)\nplt.title('Dead Patients',fontsize=15)\nplt.subplot(1,2,2)\nsns.countplot(x='gender', data=df[df['recovered']==1], palette='spring')\nplt.xlabel('Gender', fontsize=12)\nplt.ylabel('Count', fontsize=12)\nplt.title('Recoverred Patients',fontsize=15)\nplt.show()","7892c067":"plt.figure(figsize=(15,6))\nplt.subplot(1,2,1)\nsns.countplot(x='from_wuhan', data=df[df['death']==1], palette='BuPu')\nplt.xticks([0,1], ['Not from Wuhan','from Wuhan'])\nplt.xlabel('Origin', fontsize=12)\nplt.ylabel('Count', fontsize=12)\nplt.title('Dead Patients',fontsize=15)\nplt.subplot(1,2,2)\nsns.countplot(x='from_wuhan', data=df[df['recovered']==1], palette='hot')\nplt.xticks([0,1], ['Not from Wuhan','from Wuhan'])\nplt.xlabel('Origin', fontsize=12)\nplt.ylabel('Count', fontsize=12)\nplt.title('Recoverred Patients',fontsize=15)\nplt.show()","ab646e8e":"country_order=list(df.groupby('country').count()['location'].sort_values(ascending=False).index)","b05266b2":"plt.figure(figsize=(12,6))\nsns.countplot(x='country',data=df,color='blue',order=country_order)\nplt.xticks(rotation=90)\nplt.ylabel('Number of Patients')\nplt.xlabel('Country')\nplt.title('Number of Covid Patients in Different Countries',fontsize=15)\nplt.show()","538f749d":"groupby_df=df.groupby('country').sum()","04bc6258":"data=dict (type='choropleth', locations=list(groupby_df.index), locationmode='country names', colorscale='viridis', reversescale=True, text= list(groupby_df.index),z=groupby_df['death'], colorbar={'title':'Number of Death Patients'})\nlayout=dict(title='Number of Death Patients in Each Country', geo=dict(showframe=False, projection={'type':'mercator'}))\nchoromap=go.Figure(data=[data], layout=layout)\niplot(choromap)","f0f49ea3":"data=dict (type='choropleth', locations=list(groupby_df.index), locationmode='country names', colorscale='viridis', reversescale=True, text= list(groupby_df.index),z=groupby_df['recovered'], colorbar={'title':'Number of Recovered Patients'})\nlayout=dict(title='Number of Recovered Patients in Each Country', geo=dict(showframe=False, projection={'type':'mercator'}))\nchoromap=go.Figure(data=[data], layout=layout)\niplot(choromap)","de9e9967":"le1=LabelEncoder()\nle1.fit(df['location'])\ndf['location']=le1.transform(df['location'])","45ecfb62":"le2=LabelEncoder()\nle2.fit(df['country'])\ndf['country']=le2.transform(df['country'])","fabd745b":"le3=LabelEncoder()\nle3.fit(df['gender'])\ndf['gender']=le3.transform(df['gender'])","bd7c77cb":"df.head()","46f1efbc":"y=df['recovered']\nX=df[['location','country','gender','age','visiting_wuhan','from_wuhan','month']]","db9b08bb":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","74f44b38":"lr1=LogisticRegression()\nlr1.fit(X,y)\npredictions_lr1=lr1.predict(X_test)","3a55743c":"print(confusion_matrix(y_test,predictions_lr1))\nprint('\\n')\nprint(classification_report(y_test,predictions_lr1))","8a9882a5":"dtc1=DecisionTreeClassifier()\ndtc1.fit(X_train,y_train)\npredictions_dtc1=dtc1.predict(X_test)","f3d2ddd9":"print(confusion_matrix(y_test,predictions_dtc1))\nprint(\"\\n\")\nprint(classification_report(y_test,predictions_dtc1))","251b2ea4":"rfc1=RandomForestClassifier(n_estimators=200)\nrfc1.fit(X_train,y_train)\npredictions_rfc1=rfc1.predict(X_test)","629100f4":"print(confusion_matrix(y_test,predictions_rfc1))\nprint('\\n')\nprint(classification_report(y_test,predictions_rfc1))","3252fab5":"svc1=SVC()\nsvc1.fit(X_train,y_train)\npredictions_svc1=svc1.predict(X_test)","1a2bfa55":"print(confusion_matrix(y_test,predictions_svc1))\nprint('\\n')\nprint(classification_report(y_test,predictions_svc1))","f3640787":"param_grid={'C':[0.1,1,10,100,1000], 'gamma':[1,0.1,0.01,0.001], 'kernel':['rbf']}","b57f8dd4":"gs1=GridSearchCV(SVC(),param_grid, verbose=3)\ngs1.fit(X_train,y_train)\npredictions_gs1=gs1.predict(X_test)","dfcb11b4":"print(confusion_matrix(y_test,predictions_gs1))\nprint('\\n')\nprint(classification_report(y_test,predictions_gs1))","66b5fa9c":"xgbc1=xgb.XGBClassifier(n_estimators=200, learning_rate=0.08, gamma=0, subsample=0.5,colsample_bytree=1, max_depth=8)\nxgbc1.fit(X_train,y_train)","36713c44":"predictions_xgbc1=xgbc1.predict(X_test)","f43b9e40":"print(confusion_matrix(y_test,predictions_xgbc1))\nprint('\\n')\nprint(classification_report(y_test,predictions_xgbc1))","9333f743":"print('Accuracy Score, Logistic Regression: ', round(accuracy_score(y_test,predictions_lr1),ndigits=3))\nprint('Accuracy Score, Decision Tree Classifier: ', round(accuracy_score(y_test,predictions_dtc1),ndigits=3))\nprint('Accuracy Score, Random Forest Classifier: ', round(accuracy_score(y_test,predictions_rfc1),ndigits=3))\nprint('Accuracy Score, Support Vector Classifier: ', round(accuracy_score(y_test,predictions_gs1),ndigits=3))\nprint('Accuracy Score, XGBoost Classifier: ', round(accuracy_score(y_test,predictions_xgbc1), ndigits=2))","cda5b444":"y=df['death']\nX=df[['location','country','gender','age','visiting_wuhan','from_wuhan','month']]","520a746b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","5098616c":"lr2=LogisticRegression()\nlr2.fit(X,y)\npredictions_lr2=lr2.predict(X_test)","82764086":"print(confusion_matrix(y_test,predictions_lr2))\nprint('\\n')\nprint(classification_report(y_test,predictions_lr2))","24f02308":"dtc2=DecisionTreeClassifier()\ndtc2.fit(X_train,y_train)\npredictions_dtc2=dtc2.predict(X_test)","84fb8825":"print(confusion_matrix(y_test,predictions_dtc2))\nprint(\"\\n\")\nprint(classification_report(y_test,predictions_dtc2))","08241f74":"rfc2=RandomForestClassifier(n_estimators=200)\nrfc2.fit(X_train,y_train)\npredictions_rfc2=rfc2.predict(X_test)","a5ccc560":"print(confusion_matrix(y_test,predictions_rfc2))\nprint('\\n')\nprint(classification_report(y_test,predictions_rfc2))","1a40d115":"svc2=SVC()\nsvc2.fit(X_train,y_train)\npredictions_svc2=svc2.predict(X_test)","722a49d1":"print(confusion_matrix(y_test,predictions_svc2))\nprint('\\n')\nprint(classification_report(y_test,predictions_svc2))","8f535f2c":"param_grid={'C':[0.1,1,10,100,1000], 'gamma':[1,0.1,0.01,0.001], 'kernel':['rbf']}","b348ff92":"gs2=GridSearchCV(SVC(),param_grid, verbose=3)\ngs2.fit(X_train,y_train)\npredictions_gs2=gs2.predict(X_test)","a71a4c14":"print(confusion_matrix(y_test,predictions_gs2))\nprint('\\n')\nprint(classification_report(y_test,predictions_gs2))","a164481c":"xgbc2=xgb.XGBClassifier(n_estimators=200, learning_rate=0.08, gamma=0, subsample=0.5,colsample_bytree=1, max_depth=8)\nxgbc2.fit(X_train,y_train)","32953a60":"predictions_xgbc2=xgbc2.predict(X_test)","603bbcfd":"print(confusion_matrix(y_test,predictions_xgbc2))\nprint('\\n')\nprint(classification_report(y_test,predictions_xgbc2))","813f1a31":"print('Accuracy Score, Logistic Regression: ', round(accuracy_score(y_test,predictions_lr2),ndigits=3))\nprint('Accuracy Score, Decision Tree Classifier: ', round(accuracy_score(y_test,predictions_dtc2),ndigits=3))\nprint('Accuracy Score, Random Forest Classifier: ', round(accuracy_score(y_test,predictions_rfc2),ndigits=3))\nprint('Accuracy Score, Support Vector Classifier: ', round(accuracy_score(y_test,predictions_gs2),ndigits=3))\nprint('Accuracy Score, XGBoost Classifier: ', round(accuracy_score(y_test,predictions_xgbc2), ndigits=3))","56e14c2b":"#### Decision Tree Classifier","607dfd39":"#### Support Vector Classifier","22d4eccd":"First we remove unnecessary columns.","e88ef746":"## Importing Libraries","f13f34f1":"Now we select the columns that contain between 0.5% and 70% null values, and replace the null values with the mean (for numerical columns) or median (for categorical columns) of each column.","9491fa36":"# <center> Covid-19 Analysis, Visualization and Forecasting <center> ","be32277b":"## Introduction","0e5a34d1":"#### Logistic Regression","03a43610":"#### XGBoost Classifier","72e4fa0c":"#### Splitting the Data","96639bfc":"Now we change the format of date and add month column to df.","e872a297":"We create bar plots for recovered and dead patients and categorize them versus gender.","eadb5dfd":"-  We performed Data Cleaning and Feature Engineering to convert the dataset to an acceptable format.\n\n-  We performed Exploratory Data Analysis and determined the factors that were more important in the death and recovery of patients\n\n-  XGBoost Classifier with the accuracy of 93% was the best model for predicting the number of recovered patients. \n\n-  Random Forest Classifier with the accuracy of 96.3% was the best model for predicting the number of dead patients.","90e14b6b":"## Data Cleaning","c2ab8aa4":"<h1>Table of Contents<span class=\"tocSkip\"><\/span><\/h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Introduction\" data-toc-modified-id=\"Introduction-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;<\/span>Introduction<\/a><\/span><\/li><li><span><a href=\"#Importing-Libraries\" data-toc-modified-id=\"Importing-Libraries-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;<\/span>Importing Libraries<\/a><\/span><\/li><li><span><a href=\"#Loading-Dataset\" data-toc-modified-id=\"Loading-Dataset-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;<\/span>Loading Dataset<\/a><\/span><\/li><li><span><a href=\"#Data-Cleaning\" data-toc-modified-id=\"Data-Cleaning-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;<\/span>Data Cleaning<\/a><\/span><\/li><li><span><a href=\"#Feature-Engineering\" data-toc-modified-id=\"Feature-Engineering-5\"><span class=\"toc-item-num\">5&nbsp;&nbsp;<\/span>Feature Engineering<\/a><\/span><\/li><li><span><a href=\"#Exploratory-Data-Analysis\" data-toc-modified-id=\"Exploratory-Data-Analysis-6\"><span class=\"toc-item-num\">6&nbsp;&nbsp;<\/span>Exploratory Data Analysis<\/a><\/span><\/li><li><span><a href=\"#Prediction-of-Death-or-Recovery-of-Patients\" data-toc-modified-id=\"Prediction-of-Death-or-Recovery-of-Patients-7\"><span class=\"toc-item-num\">7&nbsp;&nbsp;<\/span>Prediction of Death or Recovery of Patients<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Label-Encoding\" data-toc-modified-id=\"Label-Encoding-7.1\"><span class=\"toc-item-num\">7.1&nbsp;&nbsp;<\/span>Label Encoding<\/a><\/span><\/li><li><span><a href=\"#Predicting-the-Recovery\" data-toc-modified-id=\"Predicting-the-Recovery-7.2\"><span class=\"toc-item-num\">7.2&nbsp;&nbsp;<\/span>Predicting the Recovery<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Splitting-the-Data\" data-toc-modified-id=\"Splitting-the-Data-7.2.1\"><span class=\"toc-item-num\">7.2.1&nbsp;&nbsp;<\/span>Splitting the Data<\/a><\/span><\/li><li><span><a href=\"#Logistic-Regression\" data-toc-modified-id=\"Logistic-Regression-7.2.2\"><span class=\"toc-item-num\">7.2.2&nbsp;&nbsp;<\/span>Logistic Regression<\/a><\/span><\/li><li><span><a href=\"#Decision-Tree-Classifier\" data-toc-modified-id=\"Decision-Tree-Classifier-7.2.3\"><span class=\"toc-item-num\">7.2.3&nbsp;&nbsp;<\/span>Decision Tree Classifier<\/a><\/span><\/li><li><span><a href=\"#Random-Forest-Classifier\" data-toc-modified-id=\"Random-Forest-Classifier-7.2.4\"><span class=\"toc-item-num\">7.2.4&nbsp;&nbsp;<\/span>Random Forest Classifier<\/a><\/span><\/li><li><span><a href=\"#Support-Vector-Classifier\" data-toc-modified-id=\"Support-Vector-Classifier-7.2.5\"><span class=\"toc-item-num\">7.2.5&nbsp;&nbsp;<\/span>Support Vector Classifier<\/a><\/span><\/li><li><span><a href=\"#XGBoost-Classifier\" data-toc-modified-id=\"XGBoost-Classifier-7.2.6\"><span class=\"toc-item-num\">7.2.6&nbsp;&nbsp;<\/span>XGBoost Classifier<\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Predicting-the-Death\" data-toc-modified-id=\"Predicting-the-Death-7.3\"><span class=\"toc-item-num\">7.3&nbsp;&nbsp;<\/span>Predicting the Death<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Splitting-the-Data\" data-toc-modified-id=\"Splitting-the-Data-7.3.1\"><span class=\"toc-item-num\">7.3.1&nbsp;&nbsp;<\/span>Splitting the Data<\/a><\/span><\/li><li><span><a href=\"#Logistic-Regression\" data-toc-modified-id=\"Logistic-Regression-7.3.2\"><span class=\"toc-item-num\">7.3.2&nbsp;&nbsp;<\/span>Logistic Regression<\/a><\/span><\/li><li><span><a href=\"#Decision-Tree-Classifier\" data-toc-modified-id=\"Decision-Tree-Classifier-7.3.3\"><span class=\"toc-item-num\">7.3.3&nbsp;&nbsp;<\/span>Decision Tree Classifier<\/a><\/span><\/li><li><span><a href=\"#Random-Forest-Classifier\" data-toc-modified-id=\"Random-Forest-Classifier-7.3.4\"><span class=\"toc-item-num\">7.3.4&nbsp;&nbsp;<\/span>Random Forest Classifier<\/a><\/span><\/li><li><span><a href=\"#Support-Vector-Classifier\" data-toc-modified-id=\"Support-Vector-Classifier-7.3.5\"><span class=\"toc-item-num\">7.3.5&nbsp;&nbsp;<\/span>Support Vector Classifier<\/a><\/span><\/li><li><span><a href=\"#XGBoost-Classifier\" data-toc-modified-id=\"XGBoost-Classifier-7.3.6\"><span class=\"toc-item-num\">7.3.6&nbsp;&nbsp;<\/span>XGBoost Classifier<\/a><\/span><\/li><\/ul><\/li><\/ul><\/li><li><span><a href=\"#Conclusion\" data-toc-modified-id=\"Conclusion-8\"><span class=\"toc-item-num\">8&nbsp;&nbsp;<\/span>Conclusion<\/a><\/span><\/li><\/ul><\/div>","fba82f6f":"# ![7.jpg](attachment:7.jpg)","0d30bdf4":"**Country**","43672927":"To improve the results obtained by SVC, we define C and gamma parameters.","a7c05ef1":"Patients from Wuhan have higher chance of death and lower  chance of recovery as compared to patients not from Wuhan.","de9c9de6":"#### XGBoost Classifier","9182ba24":"We rename some of the columns.","957b2890":"So we fill the null values in gender column with 'male'.","1ad11b92":"#### Logistic Regression","2eef6fb2":"## Conclusion","1b708800":"China and Japan have more patients as compared to others.","fffa5dfa":"To improve the results obtained by SVC, we use GridSearchCV and define C and gamma parameters.","d6d96999":"## Prediction of Death or Recovery of Patients","096f3110":"From World Health Organization - On 31 December 2019, WHO was alerted to several cases of pneumonia in Wuhan City, Hubei Province of China. The virus did not match any other known virus. This raised concern because when a virus is new, we do not know how it affects people. So daily level information on the affected people can give some interesting insights when it is made available to the broader data science community. Johns Hopkins University has made an excellent dashboard using the affected cases data, and our data is extracted from this dashboard.\n\nIn this notebook we will use Covid-19_Datase that is the same as COVID19_line_list_data.csv dataset taken from https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset, but the only difference is that in our dataset death and recovered features are encoded as (0 or 1) and not in form of dates as in the former dataset.\n\n\nThere are three parts to our report, as follows:\n-  Data Cleaning and Feature Engineering\n-  Exploratory Data Analysis\n-  Prediction of Death or Recovery of Patients\n\nOur first objective is to find out the factors that are more important in the death and recovery of patients. Our second purpose is to implement several machine learning algorithms such as Logistic Regression, Decision Tree Classifier, Random Forest Classifier, Support Vector Classifier and XGBoost Classifier to predict the death and recovery of patients and compare the result to discover which algorithm works better for this specific dataset.","7a3eeaa1":"#### Decision Tree Classifier","8e83f227":"Next we create a dataframe that shows the percentage of null values in each column of df.","b0a0e863":"#### Random Forest Classifier","c662298c":"Let's create two world maps to demonstrate the number of death patients and recovered patients in each country.","205fcab5":"So we conclude that Random Forest Classifier with the accuracy of 96.3% is the best model for predicting the number of dead patients.","ca088ebe":"## Feature Engineering","410f5264":"Patients with age of 50 or lower have higher chance of recovery.","1fdb7048":"We create Countplot of number of Covid patients in different countries.","e7245434":"We want to find the number of patients died and recovered based on their age.","ce695f60":"### Label Encoding","a9637195":"### Predicting the Death","a2f3299d":"**Gender**","bc696c94":"#### Splitting the Data","78d4fd0a":"Fianlly the columns that contain less than 0.5% null values are remained, and we drop the rows of df that contain these null values.","f34b88f3":"We calculate the current number of patients, those who recovered, diad, or those who arer receiving treatment.","74532e55":"#### Support Vector Classifier","2761cfdb":"So we conclude that XGBoost Classifier with the accuracy of 93% is the best model for predicting the number of recovered patients.","06d9b805":"We create bar plots for recovered and dead patients and categorize them versus they are from wuhan or not from wuhan.","e32b517f":"Most of both dead and recovered patients were male.","9eb8fd99":"As there is only one year, we can remove the year column.","4976a66d":"## Exploratory Data Analysis","d021fef0":"#### Random Forest Classifier","cf900902":"## Loading Dataset","7d8582aa":"**Location**","36df8098":"### Predicting the Recovery","60669b2a":"We can conclude that Pateints with age more than 48 have higher chance of death because of their weaker immune system."}}