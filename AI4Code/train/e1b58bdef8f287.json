{"cell_type":{"d1605a32":"code","1b5a03ed":"code","25f4a071":"code","66f135e1":"code","cb573680":"code","e990f3af":"code","6ffcb03b":"code","438c0f25":"code","dc77c9ed":"code","81ce20a9":"code","772b10af":"code","e38467cc":"code","c2357514":"code","3e87b6f8":"code","11e3e71a":"code","39c269d1":"code","170ca6a5":"code","3730ca9e":"code","8dce9f17":"code","d7bdee89":"code","ca1b7658":"code","5c0ee36a":"code","43d6902b":"code","16ee889e":"code","52460af6":"code","4e873911":"code","e894ff93":"code","c92f2f6d":"code","d107e895":"code","42e0563c":"code","464957b1":"code","f869fd46":"code","f47a5337":"code","e4e7ed22":"code","6f4974b6":"code","72022787":"code","00d41159":"markdown","99af0d82":"markdown","736e187c":"markdown","5b88e894":"markdown","3bb8430a":"markdown","313ac87b":"markdown","e81c873f":"markdown","df22f465":"markdown","17b9994b":"markdown","a8072c02":"markdown","4fc2c19b":"markdown","a456bc2a":"markdown","213e4dc3":"markdown","3ba91320":"markdown","58569a4a":"markdown"},"source":{"d1605a32":"import catboost as cb\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport shap\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nsns.set()","1b5a03ed":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","25f4a071":"audi_df = pd.read_csv('\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/audi.csv')\ntoyota_df = pd.read_csv('\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/toyota.csv')\nford_df = pd.read_csv('\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/ford.csv')\nbmw_df = pd.read_csv('\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/bmw.csv')\nvw_df = pd.read_csv('\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/vw.csv')\nhyundai_df = pd.read_csv('\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/hyundi.csv')\nmercedez_df = pd.read_csv('\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/merc.csv')","66f135e1":"print(audi_df.info())\ndisplay(audi_df.head())","cb573680":"print(toyota_df.info())\ndisplay(toyota_df.head())","e990f3af":"print(ford_df.info())\ndisplay(ford_df.head())","6ffcb03b":"print(bmw_df.info())\ndisplay(bmw_df.head())","438c0f25":"print(vw_df.info())\ndisplay(vw_df.head())","dc77c9ed":"print(hyundai_df.info())\ndisplay(hyundai_df.head())","81ce20a9":"hyundai_df.rename(columns={'tax(\u00a3)':'tax'}, inplace=True)\nhyundai_df.info()","772b10af":"print(mercedez_df.info())\ndisplay(mercedez_df.head())","e38467cc":"audi_df['model'] = 'audi'\ntoyota_df['model'] = 'toyota'\nford_df['model'] = 'ford'\nbmw_df['model'] = 'bmw'\nvw_df['model'] = 'vw'\nhyundai_df['model'] = 'hyundai'\nmercedez_df['model'] = 'mercedez'","c2357514":"car_manufacturers = pd.concat([audi_df,toyota_df,ford_df,bmw_df,vw_df,hyundai_df,mercedez_df])\n","3e87b6f8":"car_manufacturers.info()","11e3e71a":"car_manufacturers['model'].value_counts()","39c269d1":"car_manufacturers['transmission'].value_counts()","170ca6a5":"car_manufacturers['fuelType'].value_counts()","3730ca9e":"car_manufacturers.describe().T","8dce9f17":"car_manufacturers = car_manufacturers[car_manufacturers['year'] <= 2021]","d7bdee89":"car_manufacturers.describe().T","ca1b7658":"fig, ax = plt.subplots(3,2,figsize=(10,10))\nax[0,0] = sns.kdeplot(car_manufacturers['year'], ax=ax[0,0])\nax[0,1] = sns.kdeplot(car_manufacturers['price'],log_scale=True, ax=ax[0,1])\nax[1,0] = sns.kdeplot(car_manufacturers['mileage'],log_scale=True, ax=ax[1,0])\nax[1,1] = sns.kdeplot(car_manufacturers['tax'], ax=ax[1,1])\nax[2,0] = sns.kdeplot(car_manufacturers['mpg'], ax=ax[2,0])\nax[2,1] = sns.kdeplot(car_manufacturers['engineSize'], ax=ax[2,1])\nplt.tight_layout()","5c0ee36a":"car_manufacturers_corr = car_manufacturers.corr()\nmask = np.triu(np.ones_like(car_manufacturers_corr, dtype=bool))\nsns.heatmap(car_manufacturers_corr, mask=mask, cbar=False, cmap=\"BuGn\", linewidths=0.3)","43d6902b":"fig, ax = plt.subplots(2,1,figsize=(10,10))\nax[0] = sns.regplot(data = car_manufacturers,y='price',x='engineSize',x_estimator=np.mean,ci=None, ax=ax[0])\nax[1] = sns.regplot(data = car_manufacturers,y='price',x='tax',x_estimator=np.mean,ci=None, ax=ax[1])\nplt.tight_layout()","16ee889e":"X_df = car_manufacturers.drop(\"price\", axis=1)\nX_df.info()","52460af6":"y = car_manufacturers[\"price\"]\ny[:5]","4e873911":"cat_features = [0,2,4]","e894ff93":"X_train, X_test, y_train, y_test = train_test_split(X_df, y, test_size = 0.2, random_state = 42)\nX_train, X_valid, y_train, y_valid = train_test_split(X_train, y_train, test_size = 0.2, random_state = 42)","c92f2f6d":"train_dataset = cb.Pool(X_train, y_train, cat_features = cat_features ) \nvalid_dataset = cb.Pool(X_valid, y_valid, cat_features = cat_features ) \ntest_dataset = cb.Pool(X_test, y_test, cat_features = cat_features )","d107e895":"#Grid Search\n#model = cb.CatBoostRegressor(loss_function='RMSE', verbose = 100)\n#grid = {'iterations': [100, 150, 200],\n#        'learning_rate': [0.03, 0.07, 0.1],\n#        'depth': [2, 4, 6, 8],\n#        'l2_leaf_reg': [0.2, 0.5, 1, 3]}\n#model.grid_search(grid, train_dataset)","42e0563c":"model = cb.CatBoostRegressor(loss_function='RMSE', iterations= 500,\n        learning_rate= 0.15,\n        depth= 8,\n        l2_leaf_reg= 0.2,\n        logging_level='Silent')","464957b1":"model.fit(train_dataset, eval_set=valid_dataset, plot=True)","f869fd46":"model.score(X_test, y_test)","f47a5337":"pred = model.predict(X_test)\nrmse = (np.sqrt(mean_squared_error(y_test, pred)))\nr2 = r2_score(y_test, pred)\nprint('Testing performance')\nprint('RMSE: {:.2f}'.format(rmse))\nprint('R2: {:.2f}'.format(r2))","e4e7ed22":"model.get_feature_importance(prettified=True)","6f4974b6":"plt.figure(figsize=(12, 6));\nax = sns.barplot(x=\"Importances\", y=\"Feature Id\", data=model.get_feature_importance(prettified=True));\nax.set_title('CatBoost features importance:', fontsize=16);\nax.set_xlabel('Importance', fontsize=14);\nax.set_ylabel('Feature', fontsize=14);\nplt.show()","72022787":"import shap\nexplainer = shap.TreeExplainer(model)\nshap_values = explainer.shap_values(train_dataset) \nshap.summary_plot(shap_values, X_train)","00d41159":"#### Using shap values","99af0d82":"## Preparing the data in features and target value","736e187c":"* It loks like price is more correlated with engine size and tax","5b88e894":"## Plotting correlation matrix","3bb8430a":"Best parameters\nBest so far :\n* iterations : 500\n* lr: 0.15\n* depth: 8\n* l2_leaf_reg: 0.2","313ac87b":"### All dataframes have the same number of columns but the number of instances is different, in consequence we have to consider the unbalance that it represent.\n### I will use the manufacture company instead of the individual models","e81c873f":"#### Feature Importance","df22f465":"### Sanity checks","17b9994b":"* In general, audi and mercedez are the brands with bigger engines and also the ones that pay more taxes","a8072c02":"### Apperently there are cars manufactured in the year 2060, lets filter the rows where the year is less than 2021","4fc2c19b":"## Our model predicts the price with a precision of +\/- 2281.83 euros and 95% of our data fits the model","a456bc2a":"# Importing libraries","213e4dc3":"## Plotting some basic information","3ba91320":"* Year and mileage are skew to the right\n* Price follows a quite normal distribution\n* Tax and mpg are skew to the left\n* Engine size appears as multimodal because of how the engines are measure (cc)","58569a4a":"### The tax column is different in the symbol, let's change that before we concatenate"}}