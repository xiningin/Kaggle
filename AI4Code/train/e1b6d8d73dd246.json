{"cell_type":{"2ac39262":"code","9a31966a":"code","491c125b":"code","7cdd9357":"code","62775a22":"code","abc7e747":"code","70431c44":"code","b33ee523":"code","ad714b2e":"code","b259c576":"code","1806f8c1":"code","52c11141":"code","7e298356":"code","219aed57":"code","9c330a26":"code","2232568b":"code","ae5ce74f":"code","f9f128a7":"code","bd0c903d":"code","a3269155":"code","014a5a75":"code","04976d0c":"code","4c3236b7":"code","92e3ba30":"code","e594131e":"code","a8cae52e":"code","57324130":"code","ed4852e3":"code","14f0f409":"code","dd35085e":"code","a93e8da8":"code","82768a60":"code","42aab208":"code","9a9eac7d":"code","aa61c2f2":"code","04a362ac":"code","fc676fbb":"code","37577172":"code","a15fb614":"code","8f81104c":"code","84a59c9d":"code","05c2b6dd":"markdown","31a2bfd5":"markdown","f9160f0c":"markdown","a2878034":"markdown","deb281d7":"markdown","cf05c67c":"markdown","1d73c76b":"markdown","a5d3c8a5":"markdown","af9225b0":"markdown","5cf3f315":"markdown","5e469d17":"markdown","66a19706":"markdown","15ccefbf":"markdown","8b2eb097":"markdown","e1843673":"markdown","b276296b":"markdown","4e0a6dd3":"markdown"},"source":{"2ac39262":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # data visualision\nimport seaborn as sns # data visualision\nimport scipy as sp # statistical calcution\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9a31966a":"#Import the dataset\ndf = pd.read_csv(\"\/kaggle\/input\/insurance\/insurance.csv\")\ndf.head()","491c125b":"#Lets look general information of our datset\ndf.info()","7cdd9357":"#Now look if there are any missing value or not\ndf.isnull().sum()","62775a22":"#Now we look the statistical inferance of datset\ndf.describe()","abc7e747":"# At first we check our target variable\nsns.distplot(df['charges'])\nprint('Skewness: %f', df['charges'].skew())\nprint(\"Kurtosis: %f\" % df['charges'].kurt())","70431c44":"#Log Transformation\ndf['charges_log'] = np.log(df['charges'])\nsns.distplot(df['charges_log'], color = 'blue')\nprint('Skewness: %f', df['charges_log'].skew())\nprint(\"Kurtosis: %f\" % df['charges_log'].kurt())","b33ee523":"#Now lets drop the charges coloumn\ndf.drop('charges', axis = 1, inplace = True)","ad714b2e":"#Lets look the distribution of bmi\nsns.distplot(df['bmi'], color = 'purple')\nplt.title('Distribution of BMI')\nprint('Skewness: %f', df['bmi'].skew())\nprint(\"Kurtosis: %f\" % df['bmi'].kurt())","b259c576":"#Lets look the distribution of age\nsns.distplot(df['age'], color = 'deeppink')\nplt.title('Distribution of Age')\nprint('Skewness: %f', df['age'].skew())\nprint(\"Kurtosis: %f\" % df['age'].kurt())","1806f8c1":"#Now lets count the categorical variables\n#Count of Sex\nsns.countplot(df['sex'])\nplt.title('Count of Sex')","52c11141":"#Count of Smoker\nsns.countplot(df['smoker'])\nplt.title('Count of Smoker')\n","7e298356":"# Encoding the Categorical data\nfrom sklearn.preprocessing import LabelEncoder\nlabelencoder = LabelEncoder()\ndf['sex'] = labelencoder.fit_transform(df['sex'])#Female=0, Male=1\ndf['smoker'] = labelencoder.fit_transform(df['smoker'])#Smoker=1, Non-smoker=0\ndf['region'] = labelencoder.fit_transform(df['region'])\n","219aed57":"#Lets see the Distribution of charges_log of smoker and non-smoker\nf= plt.figure(figsize=(12,5))\n\nax=f.add_subplot(121)\nsns.distplot(df[(df.smoker == 1)][\"charges_log\"],color='c',ax=ax)\nax.set_title('Distribution of charges for smokers')\n\nax=f.add_subplot(122)\nsns.distplot(df[(df.smoker == 0)]['charges_log'],color='b',ax=ax)\nax.set_title('Distribution of charges for non-smokers')","9c330a26":"#Lets see the Distribution of charges_log of male and female\nf= plt.figure(figsize=(12,5))\n\nax=f.add_subplot(121)\nsns.distplot(df[(df.sex == 1)][\"charges_log\"],color='pink',ax=ax)\nax.set_title('Distribution of charges for male')\n\nax=f.add_subplot(122)\nsns.distplot(df[(df.smoker == 0)]['charges_log'],color='purple',ax=ax)\nax.set_title('Distribution of charges for female')\n","2232568b":"#Correlation and Heat map\ncorr = df.corr()\ncolormap = sns.diverging_palette(220, 10, as_cmap = True)\nplt.figure(figsize = (8,8))\nsns.heatmap(corr,\n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values,\n            annot=True,fmt='.2f',linewidths=0.30,\n            cmap = colormap, linecolor='white')\nplt.title('Correlation of df Features', y = 1.05, size=15)","ae5ce74f":"#Lets look the correlation score\nprint (corr['charges_log'].sort_values(ascending=False), '\\n')","f9f128a7":"df.drop('region', axis = 1, inplace = True)","bd0c903d":"#BMI with Charges_log\nsns.jointplot(x = df['bmi'], y = df['charges_log'], kind ='scatter',color = 'green')","a3269155":"#Age and Charges_log\nsns.jointplot(x = df['age'], y = df['charges_log'], kind ='scatter',color = 'red')","014a5a75":"#At first we take our matrices of features\nx = df.iloc[:,:-1].values\ny = df.iloc[:,5].values","04976d0c":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size =0.2, random_state = 0)","4c3236b7":"#Fitting Simple Linear Regression to the tranning set\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(x_train, y_train)","92e3ba30":"#Lets check the accuracy of trainning set\naccuracy_train = regressor.score(x_train, y_train)\nprint(accuracy_train)","e594131e":"#Predicting test set result\ny_pred = regressor.predict(x_test)","a8cae52e":"#Lets check the accuracy of test set\naccuracy_test = regressor.score(x_test, y_test)\nprint(accuracy_test)","57324130":"\n#Now Check the error for regression\nfrom sklearn import metrics\nprint('MAE :',\" \", metrics.mean_absolute_error(y_test,y_pred))\nprint('MSE :',\" \", metrics.mean_squared_error(y_test,y_pred))\nprint('RMAE :',\" \", np.sqrt(metrics.mean_squared_error(y_test,y_pred)))\n","ed4852e3":"#Visualising the Acutal and predicted Result\nplt.plot(y_test, color = 'deeppink', label = 'Actual')\nplt.plot(y_pred, color = 'blue', label = 'Predicted')\nplt.grid(alpha = 0.3)\nplt.xlabel('Number of Candidate')\nplt.ylabel('charges_log')\nplt.title('Actual vs Predicted')\nplt.legend()\nplt.show()","14f0f409":"#Fitting SVR to dataset\nfrom sklearn.svm import SVR\nregressor = SVR(kernel = 'rbf')\nregressor.fit(x_train, y_train)","dd35085e":"#Lets check the accuracy of trainning set\naccuracy_train = regressor.score(x_train, y_train)\nprint(accuracy_train)","a93e8da8":"#Predicting test set result\ny_pred = regressor.predict(x_test)","82768a60":"#Lets check the accuracy of test set\naccuracy_test = regressor.score(x_test, y_test)\nprint(accuracy_test)","42aab208":"#Now Check the error for regression\nfrom sklearn import metrics\nprint('MAE :',\" \", metrics.mean_absolute_error(y_test,y_pred))\nprint('MSE :',\" \", metrics.mean_squared_error(y_test,y_pred))\nprint('RMAE :',\" \", np.sqrt(metrics.mean_squared_error(y_test,y_pred)))\n","9a9eac7d":"#Visualising the Acutal and predicted Result\nplt.plot(y_test, color = 'deeppink', label = 'Actual')\nplt.plot(y_pred, color = 'blue', label = 'Predicted')\nplt.grid(alpha = 0.3)\nplt.xlabel('Number of Candidate')\nplt.ylabel('charges_log')\nplt.title('Actual vs Predicted')\nplt.legend()\nplt.show()","aa61c2f2":"#Now fitting the Random forest regression to the traning set\nfrom sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 100, random_state = 0)\nregressor.fit(x_train, y_train)\n","04a362ac":"#Lets check the accuracy of trainning set\naccuracy_train = regressor.score(x_train, y_train)\nprint(accuracy_train)","fc676fbb":"#Predicting test set result\ny_pred = regressor.predict(x_test)","37577172":"#Lets check the accuracy of test set\naccuracy_test = regressor.score(x_test, y_test)\nprint(accuracy_test)","a15fb614":"#Now Check the error for regression\nfrom sklearn import metrics\nprint('MAE :',\" \", metrics.mean_absolute_error(y_test,y_pred))\nprint('MSE :',\" \", metrics.mean_squared_error(y_test,y_pred))\nprint('RMAE :',\" \", np.sqrt(metrics.mean_squared_error(y_test,y_pred)))","8f81104c":"#Visualising the Acutal and predicted Result\nplt.plot(y_test, color = 'deeppink', label = 'Actual')\nplt.plot(y_pred, color = 'blue', label = 'Predicted')\nplt.grid(alpha = 0.3)\nplt.xlabel('Number of Candidate')\nplt.ylabel('charges_log')\nplt.title('Actual vs Predicted')\nplt.legend()\nplt.show()","84a59c9d":"y_pred = np.expm1(y_pred)","05c2b6dd":"Now apply Ramdom Forest","31a2bfd5":"Now lets build our Mechine Learning model ","f9160f0c":"From above graph we can conclude the result is good enough for our analisis","a2878034":"From above graph we can see result is not good enough. We can try another model","deb281d7":"clearly there are no missing value.","cf05c67c":"Explotary Data Analisis","1d73c76b":"From above graph we can clearly see the bmi is well distributed.","a5d3c8a5":"From above graph we can see result is poor than simple linear regression","af9225b0":"Now we apply Suport Vector Mechine Regression ","5cf3f315":"Now we check the correlation of target variable with other variables","5e469d17":"From above graph we can noted age is distributed 18 years to 65 years","66a19706":"Now convert back logarithem value to charges","15ccefbf":"We see the region is negetively correlated with charges_log variable. So we can remove this variable from our analysis","8b2eb097":"At first we apply Simple Linear Regression","e1843673":"Clearly we see distribution of charges is right-skewed, so we need to log transformation our target variable","b276296b":"Now check the correlation and heat map","4e0a6dd3":"For our analisis we need to encode these catagorical valriables"}}