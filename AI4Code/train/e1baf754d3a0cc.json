{"cell_type":{"410963dc":"code","c6dc97b2":"code","2f314cbd":"code","e6fe27f1":"code","dc4dca18":"code","e0233735":"code","25358f49":"code","a245f71d":"code","33a5de4f":"code","41788714":"code","13be6c65":"code","db2a1301":"code","3037a22e":"code","c693b8ac":"code","3b193bc7":"code","0556c50c":"code","026048e5":"code","81ede652":"code","806e5296":"code","b4e3ab5d":"code","cf2ab685":"code","230f965a":"code","40847e5b":"code","62004976":"code","f67036f2":"markdown","b041ea78":"markdown","05836a7a":"markdown","5e449af1":"markdown","f717ae66":"markdown","5207d6fe":"markdown","8ca296f5":"markdown","131d45ef":"markdown"},"source":{"410963dc":"from tensorflow.compat.v1 import ConfigProto\nfrom tensorflow.compat.v1 import InteractiveSession\n\nconfig = ConfigProto()\nconfig.gpu_options.per_process_gpu_memory_fraction = 0.5\nconfig.gpu_options.allow_growth = True\nsession = InteractiveSession(config=config)","c6dc97b2":"from tensorflow.keras.layers import Input, Lambda, Dense, Flatten\nfrom tensorflow.keras.models import Model\nfrom keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.applications.inception_v3 import preprocess_input\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img\nfrom tensorflow.keras.models import Sequential\nimport numpy as np\nfrom glob import glob","2f314cbd":"# Re-sizing all the Images \nIMAGE_SIZE = [224, 224]\n\ntrain_path = '\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/train'\nvalid_path = '\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/test'\n","e6fe27f1":"# Here we will be using imagenet weights\n\nvgg16 = VGG16(input_shape=IMAGE_SIZE + [3], weights='imagenet', include_top=False)","dc4dca18":"# don't train existing weights\nfor layer in vgg16.layers:\n    layer.trainable = False","e0233735":"# useful for getting number of output classes\nfolders = glob('\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/train\/*')","25358f49":"# Flatten the input\nx = Flatten()(vgg16.output)","a245f71d":"prediction = Dense(len(folders), activation='softmax')(x)\n\n#create a model object\nmodel = Model(inputs=vgg16.input, outputs=prediction)","33a5de4f":"# Model Summary\nmodel.summary()","41788714":"# Compile the Model\nmodel.compile( loss='categorical_crossentropy',\n               optimizer='adam',\n               metrics=['accuracy'])","13be6c65":"# Use the Image Data Generator to import the images from the dataset\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)","db2a1301":"# Make sure you provide the same target size as initialied for the image size\ntraining_set = train_datagen.flow_from_directory('\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/train',\n                                                 target_size = (224, 224),\n                                                 batch_size = 32,\n                                                 class_mode = 'categorical')","3037a22e":"test_set = test_datagen.flow_from_directory('\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/test',\n                                            target_size = (224, 224),\n                                            batch_size = 32,\n                                            class_mode = 'categorical')","c693b8ac":"# Fit the model\nr = model.fit_generator( training_set,\n                         validation_data=test_set,\n                        epochs=20,\n                        steps_per_epoch=len(training_set),\n                         validation_steps=len(test_set))","3b193bc7":"import matplotlib.pyplot as plt","0556c50c":"#Ploting Acuracy & Loss\nimport matplotlib.pyplot as plt\nplt.plot(r.history['accuracy'])\nplt.plot(r.history['val_accuracy'])\nplt.plot(r.history['loss'])\nplt.plot(r.history['val_loss'])\nplt.title(\"Model Accuracy\")\nplt.ylabel(\"Accuracy\")\nplt.xlabel(\"Epoch\")\nplt.legend([\"Accuracy\",\"Validation Accuracy\",\"loss\",\"Validation Loss\"])\nplt.show()","026048e5":"#Save the model as h5 file\nfrom tensorflow.keras.models import load_model\nmodel.save('model_inception.h5')","81ede652":"#Example 1\n\nimport numpy as np\nfrom tensorflow.keras.preprocessing import image\ntest_image = image.load_img('\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/test\/fresh cotton plant\/dsd (140)_iaip.jpg', target_size = (224, 224))\nimgplot = plt.imshow(test_image)\ntest_image = image.img_to_array(test_image)\ntest_image=test_image\/255\ntest_image = np.expand_dims(test_image, axis = 0)\npreds = model.predict(test_image)","806e5296":"preds","b4e3ab5d":"preds = np.argmax(preds, axis=1)","cf2ab685":"if preds==0:\n  print(\"The leaf is diseased cotton leaf\")\nelif preds==1:\n  print(\"The leaf is diseased cotton plant\")\nelif preds==2:\n  print(\"The leaf is fresh cotton leaf\")\nelse:\n  print(\"The leaf is fresh cotton plant\")","230f965a":"#Example 2\n\nimport numpy as np\nfrom tensorflow.keras.preprocessing import image\ntest_image = image.load_img('\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/test\/diseased cotton leaf\/dis_leaf (153)_iaip.jpg', target_size = (224, 224))\nimgplot = plt.imshow(test_image)\ntest_image = image.img_to_array(test_image)\ntest_image=test_image\/255\ntest_image = np.expand_dims(test_image, axis = 0)\npreds = model.predict(test_image)","40847e5b":"preds = np.argmax(preds, axis=1)","62004976":"if preds==0:\n  print(\"The leaf is diseased cotton leaf\")\nelif preds==1:\n  print(\"The leaf is diseased cotton plant\")\nelif preds==2:\n  print(\"The leaf is fresh cotton leaf\")\nelse:\n  print(\"The leaf is fresh cotton plant\")","f67036f2":"# **Testing**","b041ea78":"# Transfer Learning VGG16 using Keras","05836a7a":"### Importing the libraries","5e449af1":"# **The End**","f717ae66":"### Example 2","5207d6fe":"# InceptionV3, ResNet152V2 Present on my github\n# https:\/\/github.com\/Prachi-Gopalani13\/Cotton-Leaf-disease-prediction","8ca296f5":"### Import the Vgg 16 library","131d45ef":"### Example 1"}}