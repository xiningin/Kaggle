{"cell_type":{"b0fc5118":"code","4c4aebe1":"code","1a91c448":"code","4e8195c4":"code","2a91a31d":"code","6aca14f6":"code","2a34902a":"code","c9d09682":"code","adc002ab":"code","ed169a1e":"code","b293a556":"code","038fca28":"code","b6b446d8":"code","dc0a3713":"code","a5dcc9db":"code","ad9dc7c6":"code","d912d1bd":"code","755f118d":"code","c877c6ab":"code","b50656cc":"code","584fc501":"code","4d20831d":"code","d801f43e":"code","d6709584":"code","073d416d":"code","3ae92521":"code","10d6796c":"code","e7ee2cb3":"code","371e80ba":"code","f3ec919a":"code","187966da":"code","e7c24dcd":"code","6d41b3bc":"code","f7451263":"code","f8a36719":"code","2ec36c49":"code","fed4ef7b":"code","faa46968":"code","b424cd08":"code","f620e7e6":"code","c8d73386":"code","3ac83e44":"code","e6cf3bef":"code","a15af419":"code","c0722cf6":"code","39f06981":"code","e75cbce5":"code","93e004a4":"code","f1959f91":"code","ca698576":"code","7015c6d5":"code","dd2bc3bc":"code","9a924a3b":"code","685bead3":"code","0a433851":"code","87d7eb1f":"code","dbee31c7":"code","30cb2899":"code","9bbc136b":"markdown","6995a9d9":"markdown","628507d5":"markdown","c95c654b":"markdown","5fc75b73":"markdown","1124fdf5":"markdown","8dbbdaf9":"markdown","0acd194b":"markdown","b6e9d66f":"markdown","8d8b7b67":"markdown","3c93d401":"markdown","8b8d8e3e":"markdown","ec1f9223":"markdown","fd94c78f":"markdown","af9fcb47":"markdown","b3f3d795":"markdown","decaad6e":"markdown","ad3959a6":"markdown","ede93ca8":"markdown","769c5cb0":"markdown","10eb3a2c":"markdown","c082a0c0":"markdown","ebff71f9":"markdown","fd852335":"markdown","49790359":"markdown","50ca4a22":"markdown","66149e77":"markdown","ca460aee":"markdown","991d8a49":"markdown","ec47da3e":"markdown","bad700b7":"markdown","6c6bf2a5":"markdown","99559b1b":"markdown","a46737e7":"markdown","3e86a6b0":"markdown","bc606d55":"markdown","ff9115a2":"markdown","a608a84b":"markdown","1ca7aa6d":"markdown","d45f6209":"markdown","7e7bfaca":"markdown","10b2182b":"markdown","8469f9aa":"markdown","4f30a611":"markdown","b8d2a658":"markdown","54de9ce7":"markdown","cf7603bc":"markdown","7dabbc56":"markdown","59f3e077":"markdown","5a26fafd":"markdown","39e420f2":"markdown","6d043404":"markdown","7ea34df0":"markdown","0d91c8dd":"markdown","a38157f6":"markdown","1509c591":"markdown","188b1360":"markdown","bc8ffed2":"markdown","bdc97b47":"markdown","138649d9":"markdown","85704dd5":"markdown","f0e397da":"markdown","25419130":"markdown","d9b2578b":"markdown","cec3580b":"markdown","a58638e8":"markdown","cef83898":"markdown","cb13474b":"markdown","22b161d5":"markdown","3f62e648":"markdown","527fe179":"markdown","d14349db":"markdown","903f4097":"markdown","8c609495":"markdown","c7fdf2f8":"markdown","9f2c5398":"markdown","afc0fcab":"markdown"},"source":{"b0fc5118":"# Make                Car Make\n# Model               Car Model\n# Year                Car Year (Marketing)\n# Engine Fuel Type    Engine Fuel Type\n# Engine HP           Engine Horse Power (HP)\n# Engine Cylinders    Engine Cylinders\n# Transmission Type   Transmission Type\n# Driven_Wheels       Driven Wheels\n# Number of Doors     Number of Doors\n# Market Category     Market Category\n# Vehicle Size        Size of Vehicle\n# Vehicle Style       Type of Vehicle\n# highway MPG         Highway MPG\n# city mpg            City MPG\n# Popularity          Popularity (Twitter)\n# MSRP                Manufacturer Suggested Retail Price","4c4aebe1":"# Object manipulation\nimport statistics\nimport numpy as np\nimport pandas as pd\nfrom collections import defaultdict\n\n# Plot\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff\nimport seaborn as sns","1a91c448":"# Loading the data\ndf = pd.read_csv(\"..\/input\/data.csv\")\ndf.head(5)","4e8195c4":"print(\"The dataframe contains\",df.shape[0],\"rows and\",df.shape[1],\"columns\\n\")\nprint(\"The labels are\",[df.columns[i] for i in range(df.shape[1])], \"\\n\")\n\ndf.info()","2a91a31d":"# Construct data\nindex = df.groupby(['Year']).mean()['MSRP'].index.tolist()\nmean_prices = df.groupby(['Year']).mean()['MSRP'].values.tolist()\nstd_prices = df.groupby(['Year']).std()['MSRP'].values.tolist()\n\n# Data that will be used\nprice_per_year = pd.DataFrame(np.column_stack((mean_prices, std_prices)), columns=['Mean', 'Std'], index=index)\n\n# Plot\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x=index, y=price_per_year.Mean,\n                    mode='markers',\n                    name='Mean Price'))\n\nfig.add_trace(go.Scatter(x=index, y=price_per_year.Std,\n                    mode='markers',\n                    name='Std Price'))\n\nfig.update_layout(title=\"Average MSRP per Year\",\n                  xaxis_title=\"Year\",\n                  yaxis_title=\"MSRP\")\n\nfig.show()","6aca14f6":"np.argmax(df.loc[df['Year']==2008, 'MSRP'])\ndata_2008 = df[df['Year']==2008]\ndata_2008.iloc[326, :]","2a34902a":"# Construct data\ndf_below_2000 = df[df['Year']<=2000]\n\n# Plot\nfig = px.box(df_below_2000, x=\"Year\", y=\"MSRP\")\n\nreference_line = go.Scatter(x=[1989, 2001],\n                            y=[10000, 10000],\n                            mode=\"lines\",\n                            line=go.scatter.Line(color=\"red\"),\n                            showlegend=False)\n\nfig.add_trace(reference_line)\n\nfig.update_layout(title=\"Boxplots of MSRP per Year for cars sold before 2000\",\n                  xaxis_title=\"Year\",\n                  yaxis_title=\"MSRP\")\n\nfig.show()","c9d09682":"# Filtering\ndf_below_2000_filtered = df.loc[((df['Year']<=2000) & (df['MSRP']< 10000))]","adc002ab":"# Plot\nfig = px.box(df_below_2000_filtered, x=\"Year\", y=\"MSRP\")\n\nfig.update_layout(title=\"Boxplots of MSRP per Year Filtered\",\n                  xaxis_title=\"Year\",\n                  yaxis_title=\"MSRP\")\n\nfig.show()","ed169a1e":"# Filtering\ndf_after_2000 = df[df['Year']>2000]","b293a556":"fig = px.box(df_after_2000, x=\"Year\", y=\"MSRP\")\n\nreference_line = go.Scatter(x=[2000, 2018],\n                            y=[500000, 500000],\n                            mode=\"lines\",\n                            line=go.scatter.Line(color=\"red\"),\n                            showlegend=False)\n\nfig.add_trace(reference_line)\n\nfig.update_layout(title=\"Boxplots of MSRP per Year\",\n                  xaxis_title=\"Year\",\n                  yaxis_title=\"MSRP\")\n\nfig.show()","038fca28":"# Filtering\ndf_after_2000_filtered = df.loc[((df['Year']>2000) & (df['MSRP']< 500000))]","b6b446d8":"# Plot\nfig = px.box(df_after_2000_filtered, x=\"Year\", y=\"MSRP\")\n\nfig.update_layout(title=\"Boxplots of MSRP per Year Filtered\",\n                  xaxis_title=\"Year\",\n                  yaxis_title=\"MSRP\")\n\nfig.show()","dc0a3713":"# Create index\ndic = {1990+i : sum(df['Year']==1990+i) for i in range(28)}\nx_dic = [1990 + i for i in range(28)]\ny_dic = [dic[1990 + i] for i in range(28)]\n\n# Plot\nfig = go.Figure([go.Bar(x=x_dic, y=y_dic)])\n\nfig.update_layout(title=\"Car year distribution\",\n                  xaxis_title=\"Year\",\n                  yaxis_title=\"Count Cars sold\")\n\n\nfig.show()","a5dcc9db":"# Check Proportion of observations during last three years\nprint(\"Proportion of observations during last three years:\",round(sum(y_dic[-3:])\/sum(y_dic),2))","ad9dc7c6":"# Percentage of car per brand\ncounts = df['Make'].value_counts()*100\/sum(df['Make'].value_counts())\n\n# 10 most present labels\npopular_labels = counts.index[:10]\n\n# Plot\ncolors = ['lightslategray',] * len(popular_labels)\ncolors[0] = 'crimson'\n\nfig = go.Figure(data=[go.Bar(\n    x=counts[:10],\n    y=popular_labels,\n    marker_color=colors, # marker color can be a single color value or an iterable\n    orientation='h'\n)])\n\nfig.update_layout(title_text='Proportion of Car brands in America (in %)',\n                  xaxis_title=\"Percentage\",\n                  yaxis_title=\"Car Brand\")","d912d1bd":"print(f\"Over {len(counts)} different car brands, the 10 most recurrent car brands in that dataset represents {np.round(sum(counts[:10]))}% of the total number of cars !\")","755f118d":"prices = df[['Make','MSRP']].loc[(df['Make'].isin(popular_labels))].groupby('Make').mean()\nprint(prices)","c877c6ab":"# Filtering\ndata_to_display = df[['Make','Year','MSRP']].loc[(df['Make'].isin(popular_labels)) & (df['Year'] > 2000)]\n\n# Plot\nfig = px.box(data_to_display, x=\"Year\", y=\"MSRP\")\n\nfig.update_layout(title=\"MSRP over the 10 most represented Car brands\",\n                  xaxis_title=\"Year\",\n                  yaxis_title=\"MSRP\")\n\nfig.show()","b50656cc":"# Group categories (unleaded, flex-fuel, diesel, electric, natural gas)\ndf.loc[df['Engine Fuel Type']=='regular unleaded','Engine Fuel Type'] = 'unleaded'\ndf.loc[df['Engine Fuel Type']=='premium unleaded (required)','Engine Fuel Type'] = 'unleaded'\ndf.loc[df['Engine Fuel Type']=='premium unleaded (recommended)','Engine Fuel Type'] = 'unleaded'\n\ndf.loc[df['Engine Fuel Type']=='flex-fuel (unleaded\/E85)','Engine Fuel Type'] = 'flex-fuel'\ndf.loc[df['Engine Fuel Type']=='flex-fuel (premium unleaded required\/E85)','Engine Fuel Type'] = 'flex-fuel'\ndf.loc[df['Engine Fuel Type']=='flex-fuel (premium unleaded recommended\/E85)','Engine Fuel Type'] = 'flex-fuel'\ndf.loc[df['Engine Fuel Type']=='flex-fuel (unleaded\/natural gas)','Engine Fuel Type'] = 'flex-fuel'\n\neng = df.loc[~df['Year'].isin([2015,2016,2017]),'Engine Fuel Type'].value_counts()\neng2 = df.loc[df['Year'].isin([2015,2016,2017]),'Engine Fuel Type'].value_counts()\n\nprint('From last three years: \\n')\nprint(eng, '\\n')\nprint('From 1990 to 2014: \\n')\nprint(eng2)\n\n# Proportion before 2015\nprop_eng_ft = pd.DataFrame({'Engine Fuel Type' : eng.index,\n                            'Proportion': (eng\/sum(eng)).tolist()})\n\n# Proportion after 2015\nprop_eng_ft2 = pd.DataFrame({'Engine Fuel Type' : eng2.index,\n                            'Proportion 3years': (eng2\/sum(eng2)).tolist()})","584fc501":"# Plot\nfig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=prop_eng_ft['Engine Fuel Type'],\n    y=prop_eng_ft['Proportion'],\n    name='Proportion of cars per fuel type before 2015',\n    marker_color='indianred'\n))\n\nfig.add_trace(go.Bar(\n    x=prop_eng_ft2['Engine Fuel Type'],\n    y=prop_eng_ft2['Proportion 3years'],\n    name='Proportion of engine fuel type after 2015',\n    marker_color='lightsalmon'\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(barmode='group', xaxis_tickangle=-45,\n                  title_text='Proportion of engine fuel type')\n\nfig.show()","4d20831d":"# Print correlation matrix\ndf.corr()","d801f43e":"# Selecting only numerical features\nlist_numeric = list(df.describe().columns)","d6709584":"corr = df.corr()\n\n# generate a mask for the upper triangle\nmask = np.zeros_like(corr, dtype = np.bool)\n\n# return the indices for the upper triangle of an (n,m) array\nmask[np.triu_indices_from(mask)] = True\n\n# Plot\nsns.set_style(\"white\")\nf, ax = plt.subplots(figsize=(11,7))\nplt.title(\"Correlation matrix\")\nsns.heatmap(corr, mask=mask, cmap=sns.diverging_palette(220,10, as_cmap=True),\n            square=True, vmax = 1, center = 0, linewidths = .5, cbar_kws = {\"shrink\": .5})\n\nplt.show()","073d416d":"# Plot\nfig = px.histogram(df, x=\"Engine Cylinders\", title='Engine cylinders',)\nfig.show()","3ae92521":"# Get index of highest number of cylinders\nindex = np.argmax(df['Engine Cylinders'])\ndf.loc[index,:]","10d6796c":"print(np.argmax(df['MSRP']) == index)\nprint(np.argmax(df['MSRP']) == np.argmax(df['Engine HP']))","e7ee2cb3":"# Get data\ndata_pie = df['Transmission Type'].value_counts()\n\n# Plot\nfig = go.Figure(data=[go.Pie(labels=data_pie.index, values=data_pie.tolist(), textinfo='label+percent',\n                             insidetextorientation='radial'\n                            )])\n\nfig.update_traces(hole=.3, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    title_text=\"Pie chart of transmission type\")\n\nfig.show()","371e80ba":"# Get data\ndata_pie = df['Driven_Wheels'].value_counts()\n\n# Plot\nfig = go.Figure(data=[go.Pie(labels=data_pie.index, values=data_pie.tolist(), textinfo='label+percent',\n                             insidetextorientation='radial'\n                            )])\n\nfig.update_traces(hole=.3, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    title_text=\"Pie chart of driven wheels variable\")\n\nfig.show()","f3ec919a":"# Create data\nmore_than_4_cyl = df[df['Engine Cylinders']>4]\nless_than_4_cyl = df[~(df['Engine Cylinders']>4)]","187966da":"# Plot\nfig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=more_than_4_cyl['Number of Doors'].value_counts().index,\n    y=(more_than_4_cyl['Number of Doors'].value_counts()\/sum(more_than_4_cyl['Number of Doors'].value_counts())).tolist(),\n    name='Number of doors for vehicles with more than 4 cylidners',\n    marker_color='indianred'\n))\n\nfig.add_trace(go.Bar(\n    x=less_than_4_cyl['Number of Doors'].value_counts().index,\n    y=(less_than_4_cyl['Number of Doors'].value_counts()\/sum(less_than_4_cyl['Number of Doors'].value_counts())).tolist(),\n    name='Number of doors for vehicles with less than 4 cylidners',\n    marker_color='lightsalmon'\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(barmode='group', xaxis_tickangle=-45,\n                  title_text='Proportion of Number of Doors')\nfig.show()","e7c24dcd":"# Get data\ndata_pie = df['Vehicle Size'].value_counts()\n\n# Plot\nfig = go.Figure(data=[go.Pie(labels=data_pie.index, values=data_pie.tolist(), textinfo='label+percent',\n                             insidetextorientation='radial'\n                            )])\n\nfig.update_traces(hole=.3, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    title_text=\"Pie chart of driven wheels variable\")\n\nfig.show()","6d41b3bc":"# Plot\nfig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=df['Make'].unique(),\n    y=df.groupby(['Make']).mean()['Popularity'],\n    name='Proportion of cars per fuel type before 2015',\n    marker_color='indianred'\n))\n\nfig.update_layout(xaxis_tickangle=-45,\n                  title_text='Popularity of different car brands',\n                  xaxis_title=\"Car Brand\",\n                  yaxis_title=\"Popularity\")\nfig.show()","f7451263":"# Get data\ndata = np.log10(df.MSRP)\n\n# Plot\nfig = ff.create_distplot([data], ['G1'], bin_size=.05,\n                         curve_type='normal', # override default 'kde'\n                         show_rug=False,\n                         show_curve=False,\n                         histnorm='probability')\n\nfig.update_layout(title_text='MSRP Distribution',\n                  xaxis_title=\"Log10 MSRP\")\n\nfig.show()","f8a36719":"# Some observations\nprint(sum(df['MSRP']>400000),\"cars worth more than 400k$\")\nprint(sum(df['MSRP']>200000),\"cars worth more than 200k$\")\nprint(sum(df['MSRP']>50000),\"cars worth more than 50k$\")\nprint(\"Most expensive car costs\", max(df['MSRP']))\nprint(\"There are\",sum(df['MSRP']<5000),\"cars worth less than 5k$\")","2ec36c49":"# Filtering\nbelow_5k_per_year_mean = df.loc[df['MSRP']<5000].groupby(['Year']).mean()['MSRP']\nbelow_5k_per_year_count = df.loc[df['MSRP']<5000].groupby(['Year']).count()['MSRP']","fed4ef7b":"# Create figure with secondary y-axis\nfig = make_subplots(specs=[[{\"secondary_y\": True}]])\n\nfig.add_trace(\n    go.Scatter(x=below_5k_per_year_mean.index, \n               y=below_5k_per_year_mean, \n               name=\"Mean MSRP per year\",\n               marker_color='indianred'),\n    secondary_y=True,\n)\n\nfig.add_trace(go.Bar(\n    x=below_5k_per_year_count.index,\n    y=below_5k_per_year_count,\n    name='Count cars per year',\n    marker_color='lightsalmon'\n))\n\n# Set x-axis title\nfig.update_xaxes(title_text=\"Year\")\n\n# Set y-axes titles\nfig.update_yaxes(title_text=\"<b>Count<\/b> cars\", secondary_y=False)\nfig.update_yaxes(title_text=\"<b>Mean MSRP<\/b> (in USD)\", secondary_y=True)\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(barmode='group', \n                  xaxis_tickangle=-45,\n                  title_text='Age of less than 5k USD sold cars')\n\nfig.show()","faa46968":"# Copy of the dataset\ndf_to_clean = df.copy()\nprint(df_to_clean.describe().columns)","b424cd08":"# Check NAs per column\ndf_to_clean.isnull().sum()","f620e7e6":"index = df_to_clean.isnull().sum()>0\nprint(\"The feature which contain missing values are\\n\",[df.columns[index][i] for i in range(sum(index))])","c8d73386":"# Drop rows containing at least one NA\ndf_drop_rows_with_na = df_to_clean.dropna()","3ac83e44":"(df.shape[0] - df_drop_rows_with_na.shape[0]) \/ df.shape[0]","e6cf3bef":"print(df_to_clean['Engine Fuel Type'].value_counts())\nprint(sum(df_to_clean['Engine Fuel Type'].value_counts()))","a15af419":"print(df_to_clean['Engine Fuel Type'].unique())\nengine_fuel_type_mapping = {label:idx for idx,label in enumerate(df_to_clean['Engine Fuel Type'].unique())}\nprint(\"\\n\",engine_fuel_type_mapping)\n\n# Apply once\ndf_to_clean['Engine Fuel Type'] = df_to_clean['Engine Fuel Type'].map(engine_fuel_type_mapping)","c0722cf6":"indexes_eft = np.where(df_to_clean.loc[:,'Engine Fuel Type']==5)\ndf_to_clean.loc[indexes_eft[0][0]:(indexes_eft[0][0]+5),:]","39f06981":"# Inputing\ndf_to_clean.loc[indexes_eft[0],'Engine Fuel Type'] = 1","e75cbce5":"# Check the 10 category which corresponds to NA has been removed\nprint(df_to_clean['Engine Fuel Type'].unique())","93e004a4":"# Plot\nfig = px.box(df, y=\"Engine HP\")\n\nfig.update_layout(title=\"MSRP over the 10 most represented Car brands\",\n                  xaxis_title=\"Year\",\n                  yaxis_title=\"MSRP\")\n\nfig.show()","f1959f91":"# Index of each NA values in 'Engine HP'\nindexes_engine_hp = np.where(df_to_clean['Engine HP'].isnull())\nprint(\"Indexes of each NA in 'Engine HP'\",indexes_engine_hp[0])\n\n# Numbers of NA (does it fit with the dataframe ?)\nprint(len(indexes_engine_hp[0]))\n\n# Mean inputation\nfor i in range(len(indexes_engine_hp[0])):\n    df_to_clean.loc[indexes_engine_hp[0][i],'Engine HP'] = np.mean(df_to_clean['Engine HP'])","ca698576":"print(df_to_clean['Engine Cylinders'].value_counts(), \"\\n\")\nprint(sum(df_to_clean['Engine Cylinders'].value_counts()))","7015c6d5":"indexes_engine_cyl = np.where(df_to_clean['Engine Cylinders'].isnull())\nprint('There are',len(indexes_engine_cyl[0]),'missing values as expected')","dd2bc3bc":"display_cars = pd.DataFrame(df_to_clean.loc[indexes_engine_cyl[0],['Make','Model']].values, columns = ['Make','Model'])\nprint(display_cars.head(30))","9a924a3b":"# Solution to reduce redundancy\nlist(display_cars.groupby(['Make','Model']).groups.keys())","685bead3":"df_to_clean.loc[indexes_engine_cyl[0][0:10],'Engine Cylinders'] = 0 \ndf_to_clean.loc[indexes_engine_cyl[0][10:],'Engine Cylinders'] = 0","0a433851":"indexes_nb_doors = np.where(df_to_clean['Number of Doors'].isnull())\ndf_to_clean.loc[indexes_nb_doors]","87d7eb1f":"df_to_clean.loc[indexes_nb_doors[0][0],'Number of Doors'] = 3\ndf_to_clean.loc[indexes_nb_doors[0][1:],'Number of Doors'] = 5","dbee31c7":"df_to_clean.loc[np.where(df_to_clean['Market Category'].isnull())[0],'Market Category'] = 'No category'\n\n# 5 most frequent categories\ndf_to_clean['Market Category'].value_counts().head(5)","30cb2899":"# Save dataframe\ndf_to_clean.to_csv('cars_cleaned.csv')","9bbc136b":"#### <font color='blue' size='3'> 4.5 Correlation matrix<\/font>","6995a9d9":"##### <font color='orange' size='2'>Encoding Engine Fuel Type<\/font>","628507d5":"#### <font color='blue' size='3'>4.8 Driven wheels pie<\/font>","c95c654b":"<div align='justify'><font size=3>This graph shows an increase in the average price of the MRSP, as seen at the beginning of this notebook. It also shows the number of car models sold per year of marketing. It is also noted that on the x-axis, no models marketed after the 2000s appear.<\/font><\/div>","5fc75b73":"> - Prices retained\n> \n>     \u25e6 for vehicles sold in 2017 (1 668 vehicles), new price suggested by the manufacturer\n>\n>     \u25e6 for used vehicles (10 246 vehicles), edmunds.com True Market Value\n>     \nThis difference in method could lead to a discontinuity. However we see on different examples there isn't any significant gap.\n> \n> - All prices are recorded at the same time and can be compared. There is no need for inflation ajustment.\n> \n> - Used car prices are floored on edmunds.com. Oldest or cheapest vehicles have a minimum price of 2000 USD (1 036 vehicles).","1124fdf5":"#### <font color='blue' size='3'> 4.3 Car brands<\/font>","8dbbdaf9":"#### <font color='blue' size='3'>5.1 Which features need to be cleaned ?<\/font>","0acd194b":"**<font size=\"2\"><a href=\"#summary\">Back to summary<\/a><\/font>**\n\n---","b6e9d66f":"**<font size=\"2\"><a href=\"#summary\">Back to summary<\/a><\/font>**\n\n---","8d8b7b67":"<div align='justify'><font size=3>The following graph shows the average MSRP per year. Between the 1990s and 2000, prices are concentrated around 2000 USD. They are much more variable from 2000 onwards. There is an extremely high variance in 2008, the year in which the most expensive car on the market was sold. In the years with very high variances, there are systematically very expensive cars sold, in contrast to a large majority of vehicles with average prices.<\/font><\/div>","3c93d401":"<div align='justify'><font size=3>On this graph, we can see that Pontiac, Chrysler and MB are the most talked about. In the dataset, there is no visibility on the definition of popularity other than the fact that it is measured via the twitter API. However, nothing tells us whether the object of such popularity is based on a positive or negative event.<\/font><\/div>","8b8d8e3e":"**<font color='blue' size='3'>2.1 Explanation of MPG<\/font>** \n\n<div align='justify'><font size=3>A measure of how far a car can travel if you put just one gallon of petrol or diesel in its tank.<\/font><\/div>","ec1f9223":"#### <font color='blue' size='3'>5.3 Second approach : input properly NA values<\/font>","fd94c78f":"#### <font color='blue' size='3'>4.11 Which brand is most popular ?<\/font>","af9fcb47":"<div align='justify'><font size=3>This car is really impressive and it's not surprising that it's so expensive. What's more, it's been built very little, which makes it a rare car. I drop you a link <a href=\"https:\/\/en.wikipedia.org\/wiki\/Bugatti_Veyron\">here<\/a> if you woudl like to know more about it.<\/font><\/div>","b3f3d795":"### <div id=\"chap3\">3. Setup<\/div>","decaad6e":"#### <font color='blue' size='3'>5.2 First approach : drop rows which contain NA values<\/font>","ad3959a6":"<hr>\n<br>\n<div align='justify'><font color=\"#353B47\" size=\"4\">Thank you for taking the time to read this notebook. I hope that I was able to answer your questions or your curiosity and that it was quite understandable. <u>any constructive comments are welcome<\/u>. They help me progress and motivate me to share better quality content. I am above all a passionate person who tries to advance my knowledge but also that of others. If you liked it, feel free to <u>upvote and share my work.<\/u> <\/font><\/div>\n<br>\n<div align='center'><font color=\"#353B47\" size=\"3\">Thank you and may passion guide you.<\/font><\/div>","ede93ca8":"<div align='justify'><font size=3>The easy way... Here I got rid of more than 32% of observations, dropping all of it can affect the quality of the model. There are several ways to input missing values.<\/font><\/div>\n<br>\n\n- For categorical variables : input by most frequent category, create another category ...\n- For numerical variables: mean input, std input, min\/max input, manually (if the number of missing values is little)","769c5cb0":"##### <font color='orange' size='2'>Dependancy between variables ?<\/font>","10eb3a2c":"#### <font color='blue' size='3'>4.10 Vehicle size pie<\/font>","c082a0c0":"#### <font color='blue' size='3'>4.6 Engine cylinders histogram<\/font>","ebff71f9":"##### <font color='orange' size='2'>Number of Doors<\/font>","fd852335":"#### <font color='blue' size='3'>4.12 Distribution of MSRP<\/font>","49790359":"<div align='justify'><font size=3>The data come from the Kaggle dataset Car Features and MSRP of Kaggle. It describes almost 12 000 car models sold in the USA between 1990 and 2018 with the market price (new or used) and some features. This study aims at performing some data manipulations and define a statistical model to predict the price of a car.<\/font><\/div>","50ca4a22":"##### <font color='orange' size='2'>What is the average price among the 10 most represented brands ?<\/font>","66149e77":"## References","ca460aee":"### <div id=\"chap2\">2. Data description<\/div>","991d8a49":"<div align='center'><font size=\"5\" color='#353B47'>CARS PRICING<\/font><\/div>\n<div align='center'><font size=\"4\" color=\"#353B47\">PART1<\/font><\/div>\n<br>\n<div align=\"center\"><img alt=\"Super Sports Cars Wallpaper  HD Car Wallpapers\" height=\"auto\" src=\"http:\/\/www.hdcarwallpapers.com\/download\/super_sports_cars-1366x768.jpg\" title=\"Super Sports Cars Wallpaper  HD Car Wallpapers\" width=\"65%\"><\/div>\n<hr>","ec47da3e":"#### <font color='blue' size='3'> 3.3 Data structure<\/font>","bad700b7":"**<font color='red'>WARNING<\/font>**\n\n<div align='justify'><font size=3>Be aware that brand proportions are specific to this dataset. It might not be significant regarding to the real distribution of Car brands in the USA from 1994 to 2018. Thus, It do not reflect vehicle sales on the market as a brand with many different models will obtain a higher proportion than another one with fewer models.<\/font><\/div>","6c6bf2a5":"##### <font color='orange' size='2'>After Year 2000<\/font>","99559b1b":"#### <font color='blue' size='3'> 3.2 Import datas<\/font>","a46737e7":"<div align='justify'><font size=3>We retrieve the peak around 2000 USD and a slightly left skewed normal distribution after 10k USD.<\/font><\/div>","3e86a6b0":"##### <font color='orange' size='2'>Plot heatmap<\/font>","bc606d55":"##### <font color='orange' size='2'>Engine HP<\/font>","ff9115a2":"<div align='justify'><font size=3>Now we can check that category 5 is gone. It worked, Goodbye category 5, No more NA for Engine Fuel Type.<\/font><\/div>","a608a84b":"**<font color='blue' size='3'>2.2 Explanation on MSRP<\/font>**\n\n<div align='justify'><font size=3>MSRP is the manufacturer's suggested retail price, a price recommended for the sale of an item in all retail outlets. A vendor can require retailers to sell its products at the MSRP and refuse to sell its products to a discounter if they price products below it.<\/font><\/div>","1ca7aa6d":"#### <font color='blue' size='3'>4.2 Car year distribution<\/font>","d45f6209":"##### <font color='orange' size='2'>What are the most represented car brands ?<\/font>","7e7bfaca":"##### <font color='orange' size='2'>Market Category<\/font>","10b2182b":"## <div id=\"chap6\">Conclusion<\/div>","8469f9aa":"<div align='justify'><font size=3>The role of this notebook is to present a way of doing data mining. It's not perfect and not always very relevant, but I try to make my work as clear as possible and present small analyses to help me progress in my reasoning. As you can see, this notebook does not address the modeling aspect. That's the purpose of the second part.<\/font><\/div>\n<br>\n\n<div align='justify'><font size=3>Now the data are ready, let's do some Machine Learning with XGBoost, LGBM with Shap library for ML explainability <a href='https:\/\/www.kaggle.com\/bryanb\/xgboost-output-interpretation-with-shap'>here<\/a><\/font><\/div>","4f30a611":"* https:\/\/www.kaggle.com\/CooperUnion\/cardataset\n\n* https:\/\/www.edmunds.com\/\n\n* https:\/\/en.wikipedia.org\/wiki\/Bugatti_Veyron","b8d2a658":"### <div id=\"chap5\">5. Data cleaning<\/div>","54de9ce7":"#### <font color='blue' size='3'> 4.4 Engine fuel type proportion<\/font>","cf7603bc":"<div align='justify'><font size=3>Mean input is more appropriate because there are not really outliers for that feature (otherwise median would have been more suitable).<\/font><\/div>","7dabbc56":"__Ferrari FF__:\n<br>https:\/\/en.wikipedia.org\/wiki\/Ferrari_FF\n<br>Contains 3 doors\n\n__Tesla Model S__:\n<br>https:\/\/www.tesla.com\/models\n<br>Contains 5 doors","59f3e077":"<div align='justify'><font size=3>On this graph also, there are many outliers for a car having marketed a model after the 2000s sells for more than 500k USD. For more clarity and readability, I choose to set a threshold of 500k USD.<\/font><\/div>","5a26fafd":"##### <font color='orange' size='2'>Age of less than 5k USD cars<\/font>","39e420f2":"<div align='justify'><font size=3>Now the overview is greater and we can see that there are still many outliers but we can see that we are on an upward trend from 1994 to 2000.<\/font><\/div>","6d043404":"<div align='justify'><font size=3>I would like to check the Number of Doors distribution according to Engine Cylinders.<\/font><\/div>","7ea34df0":"##### <font color='orange' size='2'>Engine Cylinders<\/font>","0d91c8dd":"<div align='justify'><font size=3>Almost 70% of cars are automatic. For decades automatic transmission have been considered much more convenient in the USA than in Europe. The American car industry was more competitive, with more powerful engines and cheap fuel.<\/font><\/div>","a38157f6":"<div align='justify'><font size=3>As few columns have NA values <i>Engine Fuel Type<\/i>, <i>Engine HP<\/i>, <i>Engine Cylinders<\/i>, <i>Number of Doors<\/i> and <i>Market Category<\/i>. It is possible to handle these NAs manually. Otherwise, an automatic input method would have been used.<\/font><\/div>","1509c591":"To input missing values, I checked directly to any trustworthy website.\n\n> __Chevrolet bolt EV__:\n<br>Car with 100% electric motor -> no cylinder\n<br>https:\/\/www.auto123.com\/fr\/vehicules-neufs\/caracteristiques\/chevrolet\/bolt-ev\/2017\/base\/lt\/#mechanical\n>\n> __Mazda RX__:\n<br>Mazda RX is not a cylinder engine. It is a <a href=\"https:\/\/en.wikipedia.org\/wiki\/Wankel_engine\">Wenkel<\/a> -> no cylinder\n\n__Volkswagen__, __Mitsubishi__, __Toyota__ : no cylinder","188b1360":"#### <font color='blue' size='3'> 4.1 Average price car per year<\/font>","bc8ffed2":"<div align='justify'><font size=3>The dataset contains (at most) only the last three years of a model production. For instance, a model discontinuited in 2010 will have data for years 2008, 2009 and 2010. All current model will have data only for years 2015, 2016 and 2017 (About 50% of samples).<\/font><\/div>","bdc97b47":"<div align='justify'><font size=3>According to this histogram, the engine fuel type diversifies after 2015. A decrease of unleaded fuel type from 93% to 86% in favour of other types such as <i>flex fuel<\/i>, <i>diesel<\/i> and <i>electric<\/i>.<\/font><\/div>","138649d9":"**<font size=\"2\"><a href=\"#summary\">Back to summary<\/a><\/font>**\n\n---","85704dd5":"<div align='justify'><font size=3>Now the overview is greater and we can see that there are still many outliers but we can see that we are on an upward trend from 2000 to 2018. In fact, the purchasing power of households kept increasing at that time.<\/font><\/div>","f0e397da":"<div align='justify'><font size=3>On this graph, we can see that there are still cars with up to 16 cylinders in their composition. Let's have a look at such a car. I wonder what its price is.<\/font><\/div>","25419130":"## <div id=\"summary\">Table of contents<\/div>\n\n**<font size=\"2\"><a href=\"#chap1\">Introduction<\/a><\/font>**\n<br>\n**<br><font size=\"2\"><a href=\"#chap2\">2. Data description<\/a><\/font>**\n**<br><font size=\"2\"><a href=\"#chap3\">3. Setup<\/a><\/font>**\n**<br><font size=\"2\"><a href=\"#chap4\">4. Data visualization<\/a><\/font>**\n**<br><font size=\"2\"><a href=\"#chap5\">5. Data cleaning<\/a><\/font>**\n<br>\n**<br><font size=\"2\"><a href=\"#chap6\">Conclusion<\/a><\/font>**","d9b2578b":"<div align='justify'><font size=3>It turns out that this is the same car responsible of the high variance observed in 2008. Now I will check whether the most expensive car is also the one having most cylinders and the most Engine Horse Power.<\/font><\/div>","cec3580b":"#### <font color='blue' size='3'>4.7 Transmission type pie<\/font>","a58638e8":"<div align='justify'><font size=3>According to this barplot, we can see that the brand that has sold the most models is Chevrolet (more than 9%). Toyota, Volkswagen, Ford and Chevrolet together share almost a third of the car market.<\/font><\/div>","cef83898":"**<font size=\"2\"><a href=\"#summary\">Back to summary<\/a><\/font>**\n\n---","cb13474b":"### <div id=\"chap4\">4. Data Visualization<\/div>","22b161d5":"<div align='justify'><font size=3>According to this histogram, the number of doors is lower for vehicles having more than 4 cylinders. It might be due to the fact that a vehicle which has more cylinders is more likely to be a racing or sport car. Such cars need to be as light as possible to impreove the motor yield.<\/font><\/div>","3f62e648":"#### <font color='blue' size='3'> 3.1 Librairies<\/font>","527fe179":"<div align='justify'><font size=3>As the Fuel Type is not given, it is complicated to guess as each model may have diesel or fuel version... given the 2005 model, let's chose the regular unleaded option.<\/font><\/div>","d14349db":"##### <font color='orange' size='2'>Below Year 2000<\/font>","903f4097":"**High correlation between**\n    - Engine cylinders & Engine HP\n    - highway mpg & City mpg\n    \nThe more cylinders there are, the more poverful the car is.\n\n**High anticorrelation**\n    - Engine cylinders & highway mpg\n    \nHighway mpg \/ Engine Cylinders have a strong negative correlation with highway and city MPG because lower MPG figures mean higher fuel consumption.","8c609495":"##### <font color='orange' size='2'>Is fuel type proportion changing between all the previous years and the last three years ?<\/font>\n\n<div align='justify'><font size=3>We can assume that engine fuel types current proportions would be quite different from only a couple of years ago, and from the whole dataset.<\/font><\/div>","c7fdf2f8":"<div align='justify'><font size=3>On this graph, there are many outliers for a car having marketed a model before the 2000s sells for more than 10k USD. For more clarity and readability, I choose to set a threshold of 10k USD.<\/font><\/div>","9f2c5398":"> ### <div id=\"chap1\">Introduction<\/div>","afc0fcab":"#### <font color='blue' size='3'>4.9 Number of doors<\/font>"}}