{"cell_type":{"7171c5c6":"code","5bbd503d":"code","75ebf44f":"code","6610cec3":"code","0f1c783d":"code","a77099a2":"code","61ac6a33":"code","b722105e":"code","0ff76571":"markdown","a44274f3":"markdown","28cac64a":"markdown","83f16b70":"markdown","2c1e8922":"markdown","4a744ac9":"markdown","8b53b830":"markdown"},"source":{"7171c5c6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np\nimport pandas as pd\nfrom keras.models import Sequential\nfrom keras.layers import Dense,Dropout\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import KFold\nfrom sklearn.preprocessing import LabelEncoder\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5bbd503d":"df=pd.read_csv(\"..\/input\/winequality-red.csv\")\ndf.head()\nx=df.iloc[:,0:11]\nX=x.values\ny=df.iloc[:,-1].values\nx.head()","75ebf44f":"x.shape","6610cec3":"print(y.shape)\nprint(y)","0f1c783d":"from keras.utils import np_utils\nencoder = LabelEncoder()\nencoder.fit(y)\nencoded_Y = encoder.transform(y)\n# convert integers to dummy variables\n# convert integers to dummy variables (i.e. one hot encoded)\ndummy_y = np_utils.to_categorical(encoded_Y)\ndummy_y.shape","a77099a2":"def baseline_model():\n# create model\n    model = Sequential()\n    model.add(Dense(100, input_dim=11, kernel_initializer='normal', activation='relu'))\n    model.add(Dense(6, kernel_initializer='normal', activation='sigmoid'))\n    # Compile model\n    model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\n    return model","61ac6a33":"from keras.wrappers.scikit_learn import KerasClassifier\nestimator = KerasClassifier(build_fn=baseline_model, epochs=100, batch_size=100, verbose=0)\nkfold = KFold(n_splits=10, shuffle=True, random_state=42)\nresults = cross_val_score(estimator, X, dummy_y, cv=kfold)\nprint(\"Accuracy: %.2f%% (%.2f%%)\" % (results.mean()*100, results.std()*100))","b722105e":"model = Sequential()\nmodel.add(Dense(100, input_dim=11, kernel_initializer='normal', activation='relu'))\nmodel.add(Dense(6, kernel_initializer='normal', activation='sigmoid'))\n# Compile model\nmodel.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\nmodel.fit(X, dummy_y)","0ff76571":"Load the file,","a44274f3":"Classification is a technique in which we classify series of objects. Let us assume we have six categories of samples of wine and we need to make a model to classify the wine quality.\n\nImport the libraries required for the analysis,","28cac64a":"Using simple modeling technique,","83f16b70":"Using K-Fold method,","2c1e8922":"Now , transform the data to be fit into a deep learning model,","4a744ac9":"The resource article is available from here:  (http:\/\/www.machineintellegence.com\/classification\/#more-697)","8b53b830":"Create a model, this model is having 11 input and 6 as the categorical shape as we have encoded it with categorical encoding( refer shape above)"}}