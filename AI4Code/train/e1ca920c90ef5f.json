{"cell_type":{"5ca43faa":"code","75148cc1":"code","75462db5":"code","abeee142":"code","dd349b72":"code","190aba89":"code","406ef420":"code","9f3c22a9":"code","b58f4327":"code","2fe23473":"code","2f3aabd3":"code","b58e091c":"code","2d25b1f9":"code","ac74edd5":"code","09bacdf2":"code","90481418":"code","03f9b140":"code","f04b989a":"code","0d75d942":"code","1507b764":"code","93dbe3e6":"code","97e0265a":"code","2f5d56a5":"code","42e46b01":"code","b4ed282b":"code","23af13c7":"code","79a3cea8":"code","b95c53df":"code","e052fa16":"code","dde4c1c2":"code","f949eab7":"code","5136d799":"code","d5410588":"code","c68864aa":"code","bb696599":"markdown","d798a613":"markdown","106bfb10":"markdown","a91a8098":"markdown","6f039b55":"markdown","c9809053":"markdown","d75deeff":"markdown","2789939b":"markdown","a8c453b8":"markdown","2ceabd02":"markdown","26985675":"markdown","fe85054e":"markdown"},"source":{"5ca43faa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","75148cc1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","75462db5":"malaria = pd.read_csv(\"\/kaggle\/input\/who-worldhealth-statistics-2020-complete\/incedenceOfMalaria.csv\")\ntuberculosis = pd.read_csv(\"\/kaggle\/input\/who-worldhealth-statistics-2020-complete\/incedenceOfTuberculosis.csv\")\nhepatiteB = pd.read_csv(\"\/kaggle\/input\/who-worldhealth-statistics-2020-complete\/hepatitusBsurfaceAntigen.csv\")\nHIV = pd.read_csv(\"\/kaggle\/input\/who-worldhealth-statistics-2020-complete\/newHivInfections.csv\")\nNTDs = pd.read_csv(\"\/kaggle\/input\/who-worldhealth-statistics-2020-complete\/interventionAgianstNTDs.csv\")","abeee142":"malaria.head()","dd349b72":"allCountries = malaria['Location'].unique().tolist()","190aba89":"# allCountries","406ef420":"def compareCountries(countries):\n    fig = plt.figure(figsize = (10,10))\n    ax1 = plt.subplot2grid((1,1),(0,0))\n\n    for country in countries:\n        if country not in allCountries:\n            print(f\"Country {country} DO NOT EXIST \")\n            return\n        tempData = malaria[malaria['Location'] == country]\n        tempData['Period'] = pd.to_datetime(tempData['Period'], format = '%Y')\n        ax1.plot(tempData['Period'], tempData['First Tooltip'], label=country)\n        \n    for tick in ax1.get_xticklabels():\n        tick.set_rotation(45)\n    plt.grid()\n    plt.legend()\n    plt.xlabel(\"Year\")\n    plt.ylabel(\"Malaria incidence\")\n    plt.title(\"Malaria incidence (per 1 000 population at risk)\")\n    plt.show()","9f3c22a9":"# print(\"Enter the countries you want to show : \")\n# x = [s for s in input().split(\" \")]\ncountries = ['India', 'Nepal', 'Bhutan', 'Malaysia']\ncompareCountries(countries)","b58f4327":"def autoLabel(rects):\n    for rect in rects:\n        height = rect.get_height()\n        ax.text(rect.get_x() + rect.get_width()\/2, height, '%d'%int(height), ha='center', va = 'bottom')","2fe23473":"tempData = malaria[malaria['Period'] == 2018]\ntempData.sort_values('First Tooltip', inplace=True)\ntempDataBot = tempData[-20:]\nfig = plt.figure(figsize=(20,6))\nax = plt.subplot2grid((1,1),(0,0))\nrects = ax.bar(tempDataBot['Location'], tempDataBot['First Tooltip'], color = \"#fc7272\")\nfor tick in ax.get_xticklabels():\n    tick.set_rotation(90)\nautoLabel(rects)\nplt.xlabel(\"Countries\")\nplt.ylabel(\"Malaria incidence\")\nplt.title(\"Top 20 Countries with highest Malaria Incidence\")\nplt.show()","2f3aabd3":"tempData = malaria[malaria['Period'] == 2018]\ntempData = tempData[tempData['First Tooltip'] == 0.0]\nbestCountries=tempData['Location'].values.tolist()\ncompareCountries(bestCountries)","b58e091c":"tempData = malaria[malaria['Period'] == 2018]\ntempData = tempData[tempData['First Tooltip'] == 0.0]\nbestCountries=tempData['Location'].values.tolist()\ntempData = malaria[malaria.Location.isin(bestCountries)]\ntempData = tempData[tempData['Period'] == 2000]\ntempData.sort_values('First Tooltip', ascending=False, inplace=True)\n\nfig = plt.figure(figsize=(20,6))\nax = plt.subplot2grid((1,1),(0,0))\nrects = ax.bar(tempData['Location'], tempData['First Tooltip'], color = \"#92f779\")\nfor tick in ax.get_xticklabels():\n    tick.set_rotation(90)\nautoLabel(rects)\nplt.xlabel(\"Countries\")\nplt.ylabel(\"Progress\")\nplt.title(\"Best Progress over year\")\nplt.show()","2d25b1f9":"countries = ['Timor-Leste', 'Sri Lanka', 'Paraguay', 'Iran (Islamic Republic of)', 'Malaysia']\ncompareCountries(countries)","ac74edd5":"tempData2018 = malaria[malaria['Period'] == 2018]\ntempData2000 = malaria[malaria['Period'] == 2000]\ntempData2018.reset_index(inplace=True)\ntempData2000.reset_index(inplace=True)\ntempData = tempData2018.join(tempData2000, lsuffix='_18', rsuffix='_00')\ntempData['progress'] = tempData['First Tooltip_00'] - tempData['First Tooltip_18']\ntempData = tempData[['Location_18', 'progress']].sort_values('progress', ascending=False)\ntempDataTop = tempData[:20]\ntempDataBot = tempData[-20:]\n\nfig = plt.figure(figsize=(20,10))\n\nax1 = plt.subplot2grid((1,1), (0,0), rowspan=1, colspan=1)\nrects1 = ax1.bar(tempDataTop['Location_18'], tempDataTop['progress'], color = '#92f779')\nrects1 = ax1.bar(tempDataBot['Location_18'], tempDataBot['progress'], color = '#fc7272')\nfor tick in ax1.get_xticklabels():\n    tick.set_rotation(90)\n\nplt.xlabel(\"Countries\")\nplt.ylabel(\"Progress\")\nplt.title(\"Progress of Different Countries\")\nplt.show()","09bacdf2":"countries = ['Rwanda', 'Niger', 'Solomon Islands', 'Guinea-Bissau']\ncompareCountries(countries)","90481418":"tuberculosis.head()","03f9b140":"allCountries = tuberculosis['Location'].unique().tolist()\nprint(len(allCountries))","f04b989a":"# allCountries","0d75d942":"tuberculosis['Lower'] = tuberculosis['First Tooltip'].apply(lambda s:float(s.split(\" \")[1][1:-1].split(\"-\")[0]))\ntuberculosis['Upper'] = tuberculosis['First Tooltip'].apply(lambda s:float(s.split(\" \")[1][1:-1].split(\"-\")[1]))\ntuberculosis['First Tooltip'] = tuberculosis['First Tooltip'].apply(lambda s:float(s.split(\" \")[0]))","1507b764":"tuberculosis.head()","93dbe3e6":"def compareCountries(countries):\n    fig = plt.figure(figsize = (10,10))\n    ax1 = plt.subplot2grid((1,1),(0,0))\n\n    for country in countries:\n        if country not in allCountries:\n            print(f\"Country {country} DO NOT EXIST \")\n            return\n        tempData = tuberculosis[tuberculosis['Location'] == country]\n        tempData['Period'] = pd.to_datetime(tempData['Period'], format = '%Y')\n        ax1.plot(tempData['Period'], tempData['First Tooltip'], label=country)\n    for tick in ax1.get_xticklabels():\n        tick.set_rotation(45)\n    plt.grid()\n    plt.legend()\n    plt.xlabel(\"Year\")\n    plt.ylabel(\"Tuberculosis incidence\")\n    plt.title(\"Tuberculosis incidence (per 100,000 population at risk)\")\n    plt.show()","97e0265a":"compareCountries(['India', 'China', 'Germany', 'United States of America'])","2f5d56a5":"tempData = tuberculosis[tuberculosis['Period'] == 2019]\ntempData.sort_values('First Tooltip', inplace=True)\ntempDataBot = tempData[-20:]\ntempDataTop = tempData[:20]\nfig = plt.figure(figsize=(20,10))\n\nax1 = plt.subplot2grid((2,1),(0,0))\nrects1 = ax1.bar(tempDataTop['Location'], tempDataTop['First Tooltip'], color = \"#92f779\")\nfor tick in ax1.get_xticklabels():\n    tick.set_rotation(90)\nax1.set_ylabel(\"Tuberculosis incidence\")\nax1.set_title(\"Bottom 20 Countries with lowest Tuberculosis Incidence\")\n    \nax2 = plt.subplot2grid((2,1),(1,0))\nrects2 = ax2.bar(tempDataBot['Location'], tempDataBot['First Tooltip'], color = \"#fc7272\")\nfor tick in ax2.get_xticklabels():\n    tick.set_rotation(90)\n\nax2.set_xlabel(\"Countries\")\nax2.set_ylabel(\"Tuberculosis incidence\")\nax2.set_title(\"Top 20 Countries with highest Tuberculosis Incidence\")\nplt.subplots_adjust(hspace = 0.6)\nplt.show()","42e46b01":"tempData = tuberculosis[tuberculosis['Period'] == 2019]\ntempData.sort_values('First Tooltip', inplace=True)\ntempData.reset_index(inplace=True)\ntempData.set_index('Location',drop=True,inplace=True)\ncountries=['India', 'China', 'United States of America', 'Germany',\n           'United Kingdom of Great Britain and Northern Ireland', \n           'Japan', 'Canada']\n\n\nax_1 = tempData['First Tooltip'].plot(kind='bar', title =\"graph\", figsize=(22, 6), fontsize=12)\nax_1.set_xlabel(\"Country Name\", fontsize=12)\nax_1.set_title(\"Where Different Countries Stand in 2019\")\nax_1.set_ylabel(\"Tuberculosis Incidence\")\nfor ticks in ax_1.xaxis.get_major_ticks():\n    if ticks.label1.get_text() not in countries:\n        ticks.label1.set_visible(False)\n        ax_1.patches[tempData.index.get_indexer([ticks.label1.get_text()])[0]].set_facecolor('w')\n        ax_1.patches[tempData.index.get_indexer([ticks.label1.get_text()])[0]].set_edgecolor('#c7c3c3')\n    else:\n        ax_1.patches[tempData.index.get_indexer([ticks.label1.get_text()])[0]].set_facecolor('r')\n        ","b4ed282b":"tempData = tuberculosis[tuberculosis['Period'] == 2019]\ntempData.sort_values('First Tooltip', inplace=True)\ntop5countries = tempData[:5].Location.values.tolist()\nbot5countries = tempData[-5:].Location.values.tolist()\nprint(\"Plot For TOP 5 Countries\")\ncompareCountries(top5countries)\nprint(\"Plot For BOTTOM 5 Countries\")\ncompareCountries(bot5countries)\n","23af13c7":"tempData = tuberculosis.sort_values('First Tooltip', ascending=False).groupby(\"Location\").first()\ntempData = tempData.groupby(\"Period\")['First Tooltip'].count()\ntempData = tempData.reset_index()\ntempData['Period'] = pd.to_datetime(tempData['Period'], format = '%Y')\nfig = plt.figure()\nax = plt.subplot2grid((1,1),(0,0))\nax.plot(tempData['Period'], tempData['First Tooltip'])\nfor tick in ax.get_xticklabels():\n    tick.set_rotation(45)\nplt.xlabel(\"Year\")\nplt.ylabel(\"# of countries have peaks\")\nplt.title(\"\")\nplt.grid()","79a3cea8":"tempData = tuberculosis.sort_values('First Tooltip', ascending=False).groupby(\"Location\").first().reset_index()\ncountriesPeak2019 = tempData[tempData['Period'] == 2019].Location.values.tolist()\ncompareCountries(countriesPeak2019)","b95c53df":"tempData2019 = tuberculosis[tuberculosis['Period'] == 2019]\ntempData2000 = tuberculosis[tuberculosis['Period'] == 2000]\n\ntempData2019.set_index(\"Location\", inplace=True)\ntempData2000.set_index(\"Location\", inplace=True)\n\ntempData = tempData2019.join(tempData2000, lsuffix='_19', rsuffix='_00')\ntempData['progress'] = tempData['First Tooltip_00'] - tempData['First Tooltip_19']\ntempData.dropna(inplace=True)\ntempData.reset_index(inplace=True)\ntempData = tempData[['Location', 'progress']].sort_values('progress', ascending=False)\ntempDataTop = tempData[:20]\ntempDataBot = tempData[-20:]\n\nfig = plt.figure(figsize=(20,10))\n\nax1 = plt.subplot2grid((1,1), (0,0), rowspan=1, colspan=1)\nrects1 = ax1.bar(tempDataTop['Location'], tempDataTop['progress'], color = '#92f779')\nrects1 = ax1.bar(tempDataBot['Location'], tempDataBot['progress'], color = '#fc7272')\nfor tick in ax1.get_xticklabels():\n    tick.set_rotation(90)\n\nplt.xlabel(\"Countries\")\nplt.ylabel(\"Progress\")\nplt.title(\"Progress of Different Countries\")\nplt.show()","e052fa16":"tempData2019 = tuberculosis[tuberculosis['Period'] == 2019]\ntempData2000 = tuberculosis[tuberculosis['Period'] == 2000]\n\ntempData2019.set_index(\"Location\", inplace=True)\ntempData2000.set_index(\"Location\", inplace=True)\n\ntempData = tempData2019.join(tempData2000, lsuffix='_19', rsuffix='_00')\ntempData['progress'] = tempData['First Tooltip_00'] - tempData['First Tooltip_19']\ntempData.dropna(inplace=True)\ntempData.reset_index(inplace=True)\ntempData = tempData[['Location', 'progress']].sort_values('progress', ascending=False)\ntempData.set_index(\"Location\", inplace=True)\n\ncountries=['India', 'China', 'United States of America', 'Germany',\n           'United Kingdom of Great Britain and Northern Ireland', \n           'Japan', 'Canada']\n\n\nax_1 = tempData['progress'].plot(kind='bar', title =\"graph\", figsize=(22, 6), fontsize=12)\nax_1.set_xlabel(\"Country Name\", fontsize=12)\nax_1.set_title(\"Where Different Countries Stand in progress\")\nax_1.set_ylabel(\"Progress\")\nfor ticks in ax_1.xaxis.get_major_ticks():\n    if ticks.label1.get_text() not in countries:\n        ticks.label1.set_visible(False)\n        ax_1.patches[tempData.index.get_indexer([ticks.label1.get_text()])[0]].set_facecolor('w')\n        ax_1.patches[tempData.index.get_indexer([ticks.label1.get_text()])[0]].set_edgecolor('#c7c3c3')\n    else:\n        ax_1.patches[tempData.index.get_indexer([ticks.label1.get_text()])[0]].set_facecolor('r')\n        ","dde4c1c2":"countries = ['Botswana', 'Eswatini', 'Nauru', 'Marshall Islands']\ncompareCountries(countries)","f949eab7":"hepatiteB['Lower'] = hepatiteB['First Tooltip'].apply(lambda s:float(s.split(\" \")[1][1:-1].split(\"-\")[0]))\nhepatiteB['Upper'] = hepatiteB['First Tooltip'].apply(lambda s:float(s.split(\" \")[1][1:-1].split(\"-\")[1]))\nhepatiteB['First Tooltip'] = hepatiteB['First Tooltip'].apply(lambda s:float(s.split(\" \")[0]))","5136d799":"hepatiteB.head()","d5410588":"tempData = hepatiteB[['Location','First Tooltip']].sort_values(\"First Tooltip\", ascending=False)\ntempDataTop = tempData[:20]\ntempDataBot = tempData[-20:]\n\nfig = plt.figure(figsize=(20,10))\n\nax1 = plt.subplot2grid((2,1), (0,0))\nax1.bar(tempDataTop['Location'], tempDataTop['First Tooltip'], color = \"#fc7272\")\nfor tick in ax1.get_xticklabels():\n    tick.set_rotation(90)\nax1.set_ylabel(\"HBsAg prevalence among children under 5 years\")\nax1.set_title(\"Bottom 20 Countries\")\n\nax2 = plt.subplot2grid((2,1), (1,0))\nax2.bar(tempDataBot['Location'], tempDataBot['First Tooltip'], color = \"#92f779\")\nfor tick in ax2.get_xticklabels():\n    tick.set_rotation(90)\nax2.set_ylabel(\"HBsAg prevalence among children under 5 years\")\nax2.set_title(\"Top 20 Countries\")\nax2.set_xlabel(\"Countries\")\n\nplt.subplots_adjust(hspace = 0.6)\nplt.show()","c68864aa":"tempData = hepatiteB[['Location','First Tooltip']].sort_values(\"First Tooltip\", ascending=False)\ntempData.set_index('Location', inplace=True)\n\ncountries=['India', 'China', 'United States of America', 'Germany',\n           'United Kingdom of Great Britain and Northern Ireland', \n           'Japan', 'Canada']\n\n\nax_1 = tempData['First Tooltip'].plot(kind='bar', figsize=(22, 6))\nax_1.set_xlabel(\"Country Name\", fontsize=12)\nax_1.set_title(\"Where Different Countries Stand in progress\")\nax_1.set_ylabel(\"HBsAg prevalence among children under 5 years\")\nfor ticks in ax_1.xaxis.get_major_ticks():\n    if ticks.label1.get_text() not in countries:\n        ticks.label1.set_visible(False)\n        ax_1.patches[tempData.index.get_indexer([ticks.label1.get_text()])[0]].set_facecolor('w')\n        ax_1.patches[tempData.index.get_indexer([ticks.label1.get_text()])[0]].set_edgecolor('#c7c3c3')\n    else:\n        ax_1.patches[tempData.index.get_indexer([ticks.label1.get_text()])[0]].set_facecolor('r')\n        ","bb696599":"We can see that most of countries achieve their peak in 2000 <br>But some countries are at their peak at 2019 also, lets have a look at those countries progress ","d798a613":"Lets Look at the progress","106bfb10":"Countries with highest Progess :- Timor-Leste <br> Lets look at these countries progress","a91a8098":"# Tuberculosis","6f039b55":"Top 2 countries with highest positive growth and Bottom two countries with highest negative growth","c9809053":"# Hepatite-B","d75deeff":"Lets Look at the progress of TOP 5 and BOTTOM 5 countries","2789939b":"This Graph does not show us much information, but it tells us there are some countries which makes very high progess over the year. so it is intresting to see which countries makes the highest progress","a8c453b8":"There are many countries which have 0 Malaria incidence in 2018, lets look at them ","2ceabd02":"Lets look at when each country achieve its peak.","26985675":"# Communicable Diseases\n* incedenceOfMalaria.csv-> Malaria incidence per 1000 population at risk\n* incedenceOfTuberculosis.csv-> Incidence of TB per 100,000 population per year.\n* hepatitusBsurfaceAntigen.csv -> Hepatitis B surface antigen (HBsAg) prevalence among children under 5 years)\n* interventionAgianstNTD's.csv -> Reported number of people requiring interventions against NTDs.\n* newHivInfections.csv ->New HIV infections per 1000 uninfected population","fe85054e":"# Malaria"}}