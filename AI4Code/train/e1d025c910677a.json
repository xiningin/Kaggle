{"cell_type":{"241a0da3":"code","18c1311d":"code","64dd8eea":"code","53de6296":"code","9b50d2af":"code","a5539832":"code","9189bb74":"code","6a958596":"code","5a23d49c":"code","9806dfcd":"code","ca4fcb1b":"code","bbd123b4":"markdown","be3d22ca":"markdown","fbede9e9":"markdown","ecdf3ff0":"markdown","028e6cf8":"markdown","91d1d5bc":"markdown","1b81f6a6":"markdown","ce838045":"markdown"},"source":{"241a0da3":"import numpy as np\nimport pandas as pd\nfrom pathlib import Path\nimport os.path\n\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nimport tensorflow as tf\n\nfrom sklearn.metrics import accuracy_score, f1_score","18c1311d":"image_dir = Path('..\/input\/dandelionimages\/Images')","64dd8eea":"filepaths = list(image_dir.glob(r'**\/*.jpg'))\nlabels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1], filepaths))\n\nfilepaths = pd.Series(filepaths, name='Filepath').astype(str)\nlabels = pd.Series(labels, name='Label')\n\nimage_df = pd.concat([filepaths, labels], axis=1)\n\ntrain_df, test_df = train_test_split(image_df, train_size=0.7, shuffle=True, random_state=1)","53de6296":"train_df","9b50d2af":"test_df","a5539832":"train_generator = ImageDataGenerator(\n    preprocessing_function=tf.keras.applications.mobilenet_v2.preprocess_input,\n    validation_split=0.2\n)\n\ntest_generator = ImageDataGenerator(\n    preprocessing_function=tf.keras.applications.mobilenet_v2.preprocess_input\n)","9189bb74":"train_images = train_generator.flow_from_dataframe(\n    dataframe=train_df,\n    x_col='Filepath',\n    y_col='Label',\n    target_size=(224, 224),\n    color_mode='rgb',\n    class_mode='binary',\n    batch_size=32,\n    shuffle=True,\n    seed=42,\n    subset='training'\n)\n\nval_images = train_generator.flow_from_dataframe(\n    dataframe=train_df,\n    x_col='Filepath',\n    y_col='Label',\n    target_size=(224, 224),\n    color_mode='rgb',\n    class_mode='binary',\n    batch_size=32,\n    shuffle=True,\n    seed=42,\n    subset='validation'\n)\n\ntest_images = test_generator.flow_from_dataframe(\n    dataframe=test_df,\n    x_col='Filepath',\n    y_col='Label',\n    target_size=(224, 224),\n    color_mode='rgb',\n    class_mode='binary',\n    batch_size=32,\n    shuffle=False\n)","6a958596":"feature_extractor = tf.keras.applications.MobileNetV2(\n    input_shape=(224, 224, 3),\n    weights='imagenet',\n    include_top=False,\n    pooling='avg'\n)\n\nfeature_extractor.trainable = False","5a23d49c":"inputs = feature_extractor.input\nx = tf.keras.layers.Dense(128, activation='relu')(feature_extractor.output)\nx = tf.keras.layers.Dense(128, activation='relu')(x)\noutputs = tf.keras.layers.Dense(1, activation='sigmoid')(x)\n\nmodel = tf.keras.Model(inputs=inputs, outputs=outputs)\n\nmodel.compile(\n    optimizer='adam',\n    loss='binary_crossentropy',\n    metrics=['accuracy']\n)\n\nprint(model.summary())","9806dfcd":"history = model.fit(\n    train_images,\n    validation_data=val_images,\n    epochs=100,\n    callbacks=[\n        tf.keras.callbacks.EarlyStopping(\n            monitor='val_loss',\n            patience=3,\n            restore_best_weights=True\n        )\n    ]\n)","ca4fcb1b":"predictions = np.squeeze(model.predict(test_images))\npredictions = (predictions >= 0.5).astype(np.int)\n\nacc = accuracy_score(test_images.labels, predictions)\nf1 = f1_score(test_images.labels, predictions)\n\nprint(\"Accuracy: {:.2f}%\".format(acc * 100))\nprint(\"F1-Score: {:.5f}\".format(f1))","bbd123b4":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/SBZ-xZcKTuU","be3d22ca":"# Creating File DataFrame","fbede9e9":"# Training","ecdf3ff0":"# Creating Generators","028e6cf8":"# Downloading the Feature Extractor","91d1d5bc":"# Task for Today  \n\n***\n\n## Dandelion Image Classification  \n  \nGiven *images of grass*, let's try to predict whether there are **dandelions** in a given image.  \n  \nWe will use a TensorFlow\/Keras pretrained convolutional neural network to make our predictions.","1b81f6a6":"# Getting Started","ce838045":"# Results"}}