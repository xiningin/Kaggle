{"cell_type":{"4506697e":"code","9ad9ad4f":"code","9151e4ac":"code","cfeff8c8":"code","c891ccd6":"code","29b88d48":"code","c9f19202":"code","ecc1d060":"code","3e5c9a59":"code","4858210b":"code","56f57c2d":"code","a97853e9":"code","15a62f81":"code","ddc535f2":"code","c41040b0":"code","f98789bc":"code","b7ab9836":"code","11a73e6c":"code","739356e9":"code","43f44c67":"code","4870fd14":"code","7c892f4b":"markdown","5f154a65":"markdown","cb039278":"markdown","aea85449":"markdown","552631a3":"markdown","49ae9fb0":"markdown","13c1f1d4":"markdown","434298c4":"markdown","af19fd83":"markdown","611af0f1":"markdown","6ec629cf":"markdown","e4dec7fb":"markdown","159ef96a":"markdown","9d948997":"markdown","8aee00e7":"markdown","85227366":"markdown","abedb97f":"markdown","b0c49db0":"markdown","4090f069":"markdown","cd827729":"markdown","a11e9adb":"markdown","2abef1b4":"markdown","838a6c65":"markdown","6e3f1afa":"markdown","41e0a927":"markdown"},"source":{"4506697e":"import numpy as np \nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport plotly.offline as py\npy.init_notebook_mode(connected = True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nimport matplotlib.image as mpimg\nimport matplotlib.pyplot as plt\nimport matplotlib\n%matplotlib inline\n\nfrom sklearn.decomposition import PCA","9ad9ad4f":"train = pd.read_csv('\/kaggle\/input\/cervical-cancer-risk-classification\/kag_risk_factors_cervical_cancer.csv')\ntrain.head()","9151e4ac":"print(train.shape)","cfeff8c8":"print(train.dtypes)","c891ccd6":"for i in range(1,28):\n    train.iloc[:,i]=pd.to_numeric(train.iloc[:,i], errors='coerce')\nprint(train.dtypes)","29b88d48":"train.isnull().sum()","c9f19202":"train2 = train[train.columns[28:37]]\ntrain2.reset_index(drop=True, inplace=True)\ntrain3= train[[\"Age\"]]\ntrain3.reset_index(drop=True, inplace=True)\ntrain4=train[[\"STDs: Number of diagnosis\"]]\ntrain4.reset_index(drop=True, inplace=True)\nframes=[train2,train3,train4]\nfirst_PCA = pd.concat(frames, axis=1)\nfirst_PCA.head()","ecc1d060":"from sklearn.decomposition import PCA\npca = PCA(n_components=6)\npca.fit(first_PCA)\npca_output = pca.transform(first_PCA)\nps = pd.DataFrame(pca_output)\nps.head()","3e5c9a59":"print(pca.explained_variance_ratio_)","4858210b":"from mpl_toolkits.mplot3d import Axes3D\nfrom mpl_toolkits.mplot3d import proj3d\ntwo_comp = pd.DataFrame(ps[[0,1]])\n\nfig = plt.figure(figsize=(8,8))\nplt.plot(two_comp[0], two_comp[1], 'x', markersize=6, color='blue', alpha=0.5)\n\n\nplt.xlabel('First Principal Component')\nplt.ylabel('Second Principal Component')\nplt.show()","56f57c2d":"from sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nclusterer = KMeans(n_clusters=3,random_state=42).fit(two_comp)\ncenters = clusterer.cluster_centers_\nc_preds = clusterer.predict(two_comp)\n\nfig = plt.figure(figsize=(8,8))\ncolors = ['orange','blue','green']\ncolored = [colors[k] for k in c_preds]\n\nplt.scatter(two_comp[0],two_comp[1],  color = colored)\nfor i,c in enumerate(centers):\n    plt.plot(c[0], c[1], 'X', markersize=10, color='red', alpha=0.9, label=''+str(i))\n\nplt.xlabel('First Principal Component')\nplt.ylabel('Second Principal Component')\nplt.legend()\nplt.show()","a97853e9":"first_PCA['cluster']=c_preds\nfirst_PCA.head(10)","15a62f81":"fig = plt.figure(figsize=(8,8))\nplt.plot(first_PCA['cluster'], first_PCA['Age'], 'x', markersize=6, color='blue')\n\nplt.xlabel('Cluster')\nplt.ylabel('Age')\nplt.show()","ddc535f2":"#Continuous variable imputation\ntrain['Number of sexual partners'].fillna(train['Number of sexual partners'].median(), inplace=True)\ntrain['First sexual intercourse'].fillna(train['First sexual intercourse'].median(), inplace=True)\ntrain['Num of pregnancies'].fillna(train['Num of pregnancies'].median(), inplace=True)\ntrain['Smokes (years)'].fillna(train['Smokes (years)'].median(), inplace=True)\ntrain['Smokes (packs\/year)'].fillna(train['Smokes (packs\/year)'].median(), inplace=True)\ntrain['Hormonal Contraceptives (years)'].fillna(train['Hormonal Contraceptives (years)'].median(), inplace=True)\ntrain['STDs (number)'].fillna(train['STDs (number)'].median(), inplace=True)\ntrain['STDs: Time since first diagnosis'].fillna(train['STDs: Time since first diagnosis'].median(), inplace=True)\ntrain['STDs: Time since last diagnosis'].fillna(train['STDs: Time since last diagnosis'].median(), inplace=True)\ntrain['IUD (years)'].fillna(train['IUD (years)'].median(), inplace=True)\n\n#Discrete variable imputation (without population estimates)\ntrain['STDs:condylomatosis'].fillna(train['STDs:condylomatosis'].median(), inplace=True)\ntrain['STDs:cervical condylomatosis'].fillna(train['STDs:cervical condylomatosis'].median(), inplace=True)\ntrain['STDs:vaginal condylomatosis'].fillna(train['STDs:vaginal condylomatosis'].median(), inplace=True)\ntrain['STDs:vulvo-perineal condylomatosis'].fillna(train['STDs:vulvo-perineal condylomatosis'].median(), inplace=True)\ntrain['STDs:syphilis'].fillna(train['STDs:syphilis'].median(), inplace=True)\ntrain['STDs:molluscum contagiosum'].fillna(train['STDs:molluscum contagiosum'].median(), inplace=True)\ntrain['STDs'].fillna(train['STDs'].median(), inplace=True)\ntrain['STDs:AIDS'].fillna(train['STDs:AIDS'].median(), inplace=True)\ntrain['STDs:HIV'].fillna(train['STDs:HIV'].median(), inplace=True)","c41040b0":"#Discrete variable imputation (with population estimates)\ns = int(.136*train.shape[0])\nsmokes = np.hstack((np.ones(s), np.zeros(train.shape[0]-s)))\nnp.random.shuffle(smokes)\ntrain['Smokes'].fillna(pd.Series(smokes), axis=0, inplace=True)\n\ns = int(.103*train.shape[0])\niud = np.hstack((np.ones(s), np.zeros(train.shape[0]-s)))\nnp.random.shuffle(iud)\ntrain['IUD'].fillna(pd.Series(iud), axis=0, inplace=True)\n\ns = int(.229*train.shape[0])\nhc = np.hstack((np.ones(s), np.zeros(train.shape[0]-s)))\nnp.random.shuffle(hc)\ntrain['Hormonal Contraceptives'].fillna(pd.Series(hc), axis=0, inplace=True)\n\ns = int(.399*train.shape[0])\nhpv = np.hstack((np.ones(s), np.zeros(train.shape[0]-s)))\nnp.random.shuffle(hpv)\ntrain['STDs:HPV'].fillna(pd.Series(hpv), axis=0, inplace=True)\n\ns = int(.034*train.shape[0])\nhep = np.hstack((np.ones(s), np.zeros(train.shape[0]-s)))\nnp.random.shuffle(hep)\ntrain['STDs:Hepatitis B'].fillna(pd.Series(hep), axis=0, inplace=True)\n\ns = int(.159*train.shape[0])\ngen = np.hstack((np.ones(s), np.zeros(train.shape[0]-s)))\nnp.random.shuffle(gen)\ntrain['STDs:genital herpes'].fillna(pd.Series(gen), axis=0, inplace=True)\n\ns = int(.044*train.shape[0])\npid = np.hstack((np.ones(s), np.zeros(train.shape[0]-s)))\nnp.random.shuffle(pid)\ntrain['STDs:pelvic inflammatory disease'].fillna(pd.Series(pid), axis=0, inplace=True)","f98789bc":"train.isnull().sum()","b7ab9836":"pca = PCA(n_components=6)\npca.fit(train)\npca_output2 = pca.transform(train)\nps2 = pd.DataFrame(pca_output2)\nps2.head()","11a73e6c":"print(pca.explained_variance_ratio_)","739356e9":"two_comp = pd.DataFrame(ps2[[0,1]])\nfig = plt.figure(figsize=(8,8))\nplt.plot(two_comp[0], two_comp[1], 'x', markersize=6, color='blue')\n\nplt.xlabel('First Principal Component')\nplt.ylabel('Second Principal Component')\nplt.show()","43f44c67":"tocluster = pd.DataFrame(ps2[[0,1]])\nclusterer = KMeans(n_clusters=4,random_state=42).fit(tocluster)\ncenters = clusterer.cluster_centers_\nc_preds = clusterer.predict(tocluster)\n\nfig = plt.figure(figsize=(8,8))\ncolors = ['orange','blue','green','purple']\ncolored = [colors[k] for k in c_preds]\n\nplt.scatter(two_comp[0],two_comp[1],  color = colored)\nfor i,c in enumerate(centers):\n    plt.plot(c[0], c[1], 'X', markersize=10, color='red', alpha=0.9, label=''+str(i))\n\nplt.xlabel('First Principal Component')\nplt.ylabel('Second Principal Component')\nplt.legend()\nplt.show()","4870fd14":"train['cluster']=c_preds\n\nfig = plt.figure(figsize=(8,8))\nplt.plot(train['cluster'], train['Age'], 'x', markersize=6, color='blue')\n\nplt.xlabel('Cluster')\nplt.ylabel('Age')\nplt.show()","7c892f4b":"This is an attempt at exploring the cervical cancer risk classification dataset (https:\/\/www.kaggle.com\/loveall\/cervical-cancer-risk-classification) using Principal Component Analysis (PCA) and K-means clustering methods to draw out some patterns, inspired by a similar analysis performed on customer data from Instacart (https:\/\/www.kaggle.com\/asindico\/customer-segments-with-pca).","5f154a65":"In order to see how much variation each component captures, we can used the explained variance ratio. ","cb039278":"Before, we observed that 26 columns included at least one null value. In order to correct this, we can substitute the median value for the continuous variables, and a value of either 0 or 1 for select discrete variables with no readily available population data. The values for the remaining discrete variables were selected based on population statistics for these features from the CDC (e.g. [how many American women use an IUD implant](https:\/\/www.cdc.gov\/nchs\/fastats\/contraceptive.htm)).\n","aea85449":"We can once again divide the data using a K-means clustering algorithm in order to develop coherent groups.","552631a3":"We will now rerun the PCA algorithm with the missing values imputed. ","49ae9fb0":"The 36 variables included are a mix of continuous (i.e. \"Number of sexual partners\") and discrete (i.e. \"Dx: HPV\"). Before we can perform PCA, we must ensure every variable is coded numerically and search for potential problematic or null values. ","13c1f1d4":"# PCA: Cervical Cancer Risk Classification","434298c4":"Now, we can check to see if all null values are gone.","af19fd83":"This clustering strongly supports the notion that in this incomplete dataset, age explains the largest amount of variation in cervical cancer risk factors for biopsy. The clusters are divided neatly based on the First Principal Component, which captures most of the variation in the data. Now, we can check how closely these clusters correspond with age.","611af0f1":"# Exploring the Data","6ec629cf":"The First Principal Component now has less of an influence on clustered groups than before. In order to check if age still has a major influence on risk classification, we can once again plot Age vs. Cluster. ","e4dec7fb":"A rudimentary analysis suggests that those who fall in the 40s or older age range center in cluster 2, while younger women fall into clusters 0 or 1. In order to test this hypothesis, we can make a plot of Age vs. Cluster. ","159ef96a":"Age remains a significant factor, especially among younger women who are all in the same cluster. Women younger than 20 are in fact very unlikely to be at risk for cervical cancer. However, there is significantly more mixing between ages than in the first run of PCA; imputing the missing values has improved the quality of analysis which can be done on this dataset. ","9d948997":"For further insight, we can perform K-means clustering to see if the data sorts neatly into age groups. ","8aee00e7":"The first principal component now explains significantly less of the variation, as compared to earlier. We can create a plot in order to visualize the spread of the data.","85227366":"Since each variable is now either a float or int, we can work towards running PCA. However, we must also check for null values. ","abedb97f":"Before applying a more elegant solution, we can first try running PCA using only the variables with no null values (Age, STDs: Number of diagnosis, etc.) and then compare our results. ","b0c49db0":"# PCA: Complete Data","4090f069":"So, a very large amount of variation is captured in the first component. This is likely due to the overwhelming influence of age on cervical cancer risk and screening (according to the source, 50% of cervical cancer diagnoses occur in women ages 35 - 54). Age is the only continuous variable we were able to keep. In order to visualize this phenomenon, we can plot the resulting scatterplot from the first two principal components. ","cd827729":"# Missing Values","a11e9adb":"We will apply PCA with a total of 6 components on the obtained dataframe.  ","2abef1b4":"# PCA: Incomplete Data","838a6c65":"*Isabella DeClue*\n\nDate Created: July 16, 2020","6e3f1afa":"We can convert the \"object\" variables to numeric types using a simple for loop. ","41e0a927":"Now that we've run PCA on an incomplete subset of the data and observed the influence of age, we can compare this to the data with the missing columns included, and missing values imputed."}}