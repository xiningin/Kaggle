{"cell_type":{"5714509f":"code","78c76622":"code","a6b4bb17":"code","abaca2d7":"code","84f445f5":"code","90ca4a9f":"code","d917d890":"code","a466e311":"code","fd65fc3b":"code","746f3b27":"code","cd0a0892":"code","49911991":"code","102da1f2":"code","754f495a":"code","7414a4aa":"code","d8be5b0f":"code","664819c8":"code","4babcd9f":"code","fc2bca96":"code","433e8870":"code","41e50a33":"code","325dc181":"code","74decf3e":"code","b4d8f7ff":"code","77aae0a7":"code","6f857aaf":"code","c3d5cdbe":"markdown","ad6d3c41":"markdown","054b6c85":"markdown","a8b1a69d":"markdown","5bf92173":"markdown","51cdfbf0":"markdown","bb88eead":"markdown","c66727e2":"markdown","c0a1ae2e":"markdown"},"source":{"5714509f":"# Import libraries\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nprint(os.listdir(\"..\/input\"))","78c76622":"df = pd.read_csv(\"..\/input\/creditcard.csv\")\ndf.info()","a6b4bb17":"df.head()","abaca2d7":"df.corr()","84f445f5":"df.columns","90ca4a9f":"#correlation map\nf,ax = plt.subplots(figsize=(21,21))\nsns.heatmap(df.corr(), annot=True, linewidths=.6, fmt= '.1f',ax=ax)\nplt.show()","d917d890":"# Line Plot\ndf.Time.plot(kind = 'line', color = 'red',label = 'Time',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndf.Amount.plot(color = 'blue',label = 'Amount',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('Line Plot')\nplt.show()","a466e311":"# Scatter Plot \ndf.plot(kind='scatter', x='Time', y='Amount',alpha = 0.7,color = 'blue')\nplt.xlabel('Time')          \nplt.ylabel('Amount')\nplt.title('Time Amount Scatter Plot')\nplt.show()","fd65fc3b":"# Histogram\ndf.Time.plot(kind = 'hist',bins = 75,figsize = (10,10))\nplt.show()","746f3b27":"# clf() = cleans it up again you can start a fresh\ndf.Time.plot(kind = 'hist',bins = 50)\nplt.clf()","cd0a0892":"# Create dictionary and look its keys and values\ndict = {\"Volkswagen\":\"Passat\", \"Renault\":\"Megane\"}\nprint(dict.keys())\nprint(dict.values())","49911991":"# Update existing key value\ndict[\"Volkswagen\"] = \"Golf\"\nprint(dict)\n\n# Add new key-value pair\ndict[\"Nissan\"] = \"Micra\"\nprint(dict)\n\n# Remove one of entries\ndel dict[\"Renault\"]\nprint(dict)\n\n# Check key exist or not\nprint('Nissan' in dict)\n\n# Remove all entries\ndict.clear()\nprint(dict)\n\n# Deallocate dict object from cache\ndel dict\nprint(dict)","102da1f2":"df = pd.read_csv(\"..\/input\/creditcard.csv\")\ndf.head()","754f495a":"# Define Series\nseries = df['Time']\nprint(type(series))\n\n# Define DataFrames\ndata_frame = df[['Amount']]\nprint(type(data_frame))","7414a4aa":"print('A' == 'a')\nprint(0 == 'zero')\nprint(5 != 2)\nprint(False & False)\nprint(1<2 or 4>3)","d8be5b0f":"# Filter data using greater condition\na = df[\"Amount\"] > 12910.93\ndf[a]","664819c8":"df[np.logical_and(df['Time']>48401.0, df['Amount']>=19656.53)]","4babcd9f":"df[(df['Time']>48401.0) & (df['Amount']>=19656.53)]","fc2bca96":"i=-3\nwhile i<5:\n    print('value i is:', i)\n    i+=1\nprint('Current value for i is:', i)","433e8870":"dict = {\"Volkswagen\":\"Passat\", \"Renault\":\"Megane\"}\n\nfor key, value in enumerate(dict):\n    print('key&value of dictionary is:', str(key)+'-'+value)","41e50a33":"# Get Index&Value of data frame\nfor index,value in df[['V1']][0:2].iterrows():\n    print(index,\" : \",value)","325dc181":"a = df[df.Time>0.117396]\ndef min_time():\n    print(a[\"Amount\"])\nmin_time()","74decf3e":"df[df.Time>0.117396][\"Amount\"]","b4d8f7ff":"def circle_circumference(x):\n    pi = 3.14\n    return 2*pi*x\nprint(circle_circumference(3))","77aae0a7":"def square(x):\n    print(x**2)\nsquare(6)","6f857aaf":"square = lambda x:x**3+4\nprint(square(6))","c3d5cdbe":"***2. Python Data Science Toolbox***","ad6d3c41":"***1.1 Matplotlib***","054b6c85":"***2.1. User Defined Function***","a8b1a69d":"***1. Introduction to Python***","5bf92173":"***2.3  Lambda Function***","51cdfbf0":"***1.4 While and For Loop***","bb88eead":"***2.2 Nested Function***","c66727e2":"***1.2 Dictionary***","c0a1ae2e":"***1.3 Pandas***"}}