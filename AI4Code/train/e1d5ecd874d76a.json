{"cell_type":{"ff9bc8d7":"code","f45930df":"code","df865d99":"code","213ef0bb":"code","0294634d":"code","b9834a30":"code","1d09f3ce":"markdown","b6526a83":"markdown","1329d081":"markdown"},"source":{"ff9bc8d7":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\n\nplt.rcParams['axes.unicode_minus'] = False\nplt.style.use('seaborn') \nsns.set(font_scale=1)  \npd.set_option('display.max_columns', None)","f45930df":"train = pd.read_csv('..\/input\/tabular-playground-series-nov-2021\/train.csv', index_col = 'id')\ntest = pd.read_csv('..\/input\/tabular-playground-series-nov-2021\/test.csv', index_col = 'id')","df865d99":"def distributionGraph(train,test):\n    FEATURES = test.columns\n    full = pd.concat([train[FEATURES], test[FEATURES]], axis=0)\n\n    columns = full.columns.values\n\n    cols = 5\n    rows = len(columns) \/\/ cols + 1\n\n    fig, axs = plt.subplots(ncols=cols, nrows=rows, figsize=(16,65), sharex=False)\n\n    plt.subplots_adjust(hspace = 0.3)\n    i=0\n\n    for r in np.arange(0, rows, 1):\n        for c in np.arange(0, cols, 1):\n            if i >= len(columns):\n                axs[r, c].set_visible(False)\n            else:\n                hist1 = axs[r, c].hist(train[columns[i]].values,\n                                       range=(full[columns[i]].min(),\n                                              full[columns[i]].max()),\n                                       bins=40,\n                                       color=\"deepskyblue\",\n                                       edgecolor=\"black\",\n                                       alpha=0.7,\n                                       label=\"Train Dataset\")\n                hist2 = axs[r, c].hist(test[columns[i]].values,\n                                       range=(full[columns[i]].min(),\n                                              full[columns[i]].max()),\n                                       bins=40,\n                                       color=\"palevioletred\",\n                                       edgecolor=\"black\",\n                                       alpha=0.7,\n                                       label=\"Test Dataset\")\n                axs[r, c].set_title(columns[i], fontsize=12, pad=5)\n                axs[r, c].set_yticks(axs[r, c].get_yticks())\n                axs[r, c].set_yticklabels([str(int(i\/1000))+\"k\" for i in axs[r, c].get_yticks()])\n                axs[r, c].tick_params(axis=\"y\", labelsize=10)\n                axs[r, c].tick_params(axis=\"x\", labelsize=10)\n                axs[r, c].grid(axis=\"y\")\n                if i == 0:\n                    axs[r, c].legend(fontsize=10)\n\n            i+=1\n\n    plt.show();\n    ","213ef0bb":"distributionGraph(train,test)","0294634d":"FEATURES = test.columns\nsscaler = StandardScaler()\n\nfor col in FEATURES:\n    train[col] = sscaler.fit_transform(train[[col]])\n    test[col] = sscaler.transform(test[[col]])","b9834a30":"distributionGraph(train,test)","1d09f3ce":"# before scaling","b6526a83":"# after scaling","1329d081":"# standard scaling"}}