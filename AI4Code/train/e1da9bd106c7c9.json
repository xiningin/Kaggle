{"cell_type":{"36ff7b90":"code","1dc1609c":"code","87b88241":"code","b74c9155":"code","eea285c5":"code","af000471":"code","55f6396b":"code","06bbc344":"code","94853a58":"code","0a3aacdd":"code","d4afa38c":"code","f98e0776":"code","2f48bd3f":"code","a46ac21b":"code","4fb95c6a":"code","ea03a90d":"code","9c309956":"code","317d3959":"code","0f1419a2":"code","05cee052":"code","91c8ebbe":"code","1a132d18":"code","d2ff0b4e":"code","60cad973":"code","c5e7c129":"code","41fff1d3":"code","1375d61d":"code","622e8b39":"code","6b12bf85":"code","d04a7f42":"code","00d002d6":"code","bf414d73":"code","f09676a3":"code","4751b8dc":"code","ad41d811":"code","ae3a66c1":"code","b82fa902":"code","fe867033":"code","dc622914":"code","60970bb5":"code","09cdfda2":"markdown","3fa36b98":"markdown","ebbf072b":"markdown","9b6b5ecf":"markdown","834f2531":"markdown","776700dc":"markdown","d3e40ff1":"markdown","0c714a6d":"markdown","24fb7b00":"markdown","cf474419":"markdown","d208da2f":"markdown","e12bef65":"markdown","156f8fcc":"markdown"},"source":{"36ff7b90":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1dc1609c":"df = pd.read_csv(os.path.join(dirname, filename))","87b88241":"df.head()","b74c9155":"len(df)","eea285c5":"deduplicated = df.drop_duplicates(subset =\"show_id\",\n                     keep = False, inplace = False)\nlen(deduplicated)","af000471":"df_country = df.drop_duplicates(subset = [\"country\"])\nprint(\"Number of entries: \", len(df))\nprint(\"Unique country values: \", len(df_country[\"country\"]))","55f6396b":"df['type']==\"TV Show\"","06bbc344":"TV_shows = df[df['type']==\"TV Show\"]","94853a58":"TV_shows.info()","0a3aacdd":"TV_shows['duration']","d4afa38c":"TV_shows.describe()","f98e0776":"TV_shows['duration'] = TV_shows['duration'].str.replace(' Seasons', '')\nTV_shows['duration'] = TV_shows['duration'].str.replace(' Season', '')","2f48bd3f":"TV_shows['duration'] = TV_shows['duration'].astype(int)","a46ac21b":"TV_shows[TV_shows['release_year'] == 1925]","4fb95c6a":"import seaborn as sns\nsns.boxplot(x=df['release_year'])","ea03a90d":"duration_series = TV_shows['duration']\nsns.boxplot(x=duration_series)","9c309956":"TV_shows['duration'].max()","317d3959":"pd.isna(df)","0f1419a2":"pd.isna(df).sum()","05cee052":"bool_series_null = pd.isnull(df[\"country\"])\nbool_series_notnull = pd.notnull(df[\"country\"])","91c8ebbe":"df[bool_series_null]","1a132d18":"df['country'] = df['country'].fillna(\"Unknown\")","d2ff0b4e":"pd.isna(df).sum()","60cad973":"df['rating'].mode()","c5e7c129":"df['rating'].fillna(df['rating'].mode())","41fff1d3":"df","1375d61d":"from sklearn import preprocessing\nimport numpy as np\nscaler = preprocessing.StandardScaler().fit(TV_shows[['duration']])","622e8b39":"scaler.mean_","6b12bf85":"scaler.scale_","d04a7f42":"scaled_duration = scaler.transform(TV_shows[['duration']])\nscaled_duration[:10]","00d002d6":"scaled_duration.mean()","bf414d73":"scaled_duration.std()","f09676a3":"X = [[ 1., -1.,  2.],\n     [ 2.,  0.,  0.],\n     [ 0.,  1., -1.]]\nX_normalized = preprocessing.normalize(X, norm='l2')\n\nX_normalized","4751b8dc":"normalizer = preprocessing.Normalizer().fit(X)\nnormalizer.transform(X)\n","ad41d811":"normalizer.transform([[-1.,  1., 0.]])","ae3a66c1":"enc = preprocessing.OrdinalEncoder()\nenc.fit(TV_shows[['rating']])\nenc.transform(TV_shows[['rating']])","b82fa902":"TV_shows['rating'] = TV_shows['rating'].fillna(TV_shows['rating'].mode())","fe867033":"TV_shows[['rating']][:10]","dc622914":"enc.fit(TV_shows[['rating']][:10])\nenc.transform(TV_shows[['rating']][:10])","60970bb5":"X = np.array([[ -3., 5., 15 ],\n              [  0., 6., 14 ],\n              [  6., 3., 11 ]])\nest = preprocessing.KBinsDiscretizer(n_bins=[3, 2, 2], encode='ordinal').fit(X)","09cdfda2":"## Missing data","3fa36b98":"## Normalization","ebbf072b":"## Dimension reduction\n\n","9b6b5ecf":"## Deduplication","834f2531":"# Transformations","776700dc":"## Filter (Irrelevant data)","d3e40ff1":"## Sampling","0c714a6d":"## Outliers","24fb7b00":"## Binarization","cf474419":"## Standardization","d208da2f":"## Load data","e12bef65":"## Labeling and encoding","156f8fcc":"## Aggregation"}}