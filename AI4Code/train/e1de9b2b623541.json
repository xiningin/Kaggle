{"cell_type":{"e628ade6":"code","3734fc9e":"code","4b5c950a":"code","df8d4c11":"code","6605607a":"code","0117b6c6":"code","471b8578":"code","8a85d829":"code","31c7283f":"code","a9de43d4":"code","5bf0f0ed":"code","7f570d6c":"code","cbee6afa":"code","3322c170":"code","c6462fc5":"code","06681880":"code","fff8a964":"code","14aa1384":"code","3456a92a":"code","2e8a34c9":"code","75eda34e":"code","d65a5877":"code","50ca68d1":"code","bc942dee":"code","7045c140":"markdown","6883b431":"markdown","3dcb5485":"markdown","89b48eef":"markdown","e0ed6679":"markdown","8c51380c":"markdown","38887ac5":"markdown"},"source":{"e628ade6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3734fc9e":"import pandas as pd\ninsurance = pd.read_csv(\"..\/input\/insurance-premium-prediction\/insurance.csv\")\nf,ax = plt.subplots(figsize=(16, 16))\nsns.heatmap(insurance.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","4b5c950a":"insurance.head()","df8d4c11":"plt.scatter(insurance.age,insurance.expenses)\nplt.xlabel(\"Age\")\nplt.ylabel(\"Expenses\")\nplt.show()","6605607a":"from sklearn.linear_model import LinearRegression\nlinear_reg = LinearRegression()\nx = pd.DataFrame(insurance.groupby('age')['expenses'].mean().index)\ny = insurance.groupby('age')['expenses'].mean().values.reshape(-1,1)\n\nlinear_reg.fit(x,y)\ny_=linear_reg.predict(x)\nprint(x)","0117b6c6":"print(y)","471b8578":"from sklearn.metrics import r2_score\nscore_DT=r2_score(y,y_)\nprint(score_DT)\n","8a85d829":"plt.scatter(x,y,color=\"red\")\nplt.plot(x,y_,color=\"green\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"means of Expense\")\nplt.title(\"Linear Regression of between Expense and Group of ages\")\nplt.show()","31c7283f":"linear_reg.predict([[70],[75],[100]])","a9de43d4":"insurance.head()","5bf0f0ed":"from sklearn.ensemble import RandomForestRegressor\nx=insurance.bmi.values.reshape(-1,1)\ny=insurance.expenses.values.reshape(-1,1)\n\nplt.scatter(x,y,color=\"red\")\nplt.xlabel(\"Body\/Mass index(BMI)\")\nplt.ylabel(\"Expense\")\nplt.title(\"Correlation of between Expense and BMI\")\nplt.show()","7f570d6c":"random_forest=RandomForestRegressor(n_estimators=100,random_state=42)\n\nx = pd.DataFrame(insurance.groupby('bmi')['expenses'].mean().index)\ny = insurance.groupby('bmi')['expenses'].mean().values.reshape(-1,1)\nrandom_forest.fit(x,y)\ny_head=random_forest.predict(x)","cbee6afa":"from sklearn.metrics import r2_score\nscore_DT=r2_score(y,y_head)\nprint(score_DT)","3322c170":"plt.scatter(x,y,color=\"red\")\nplt.plot(x,y_head,color=\"green\")\nplt.xlabel(\"Body\/Mass index(BMI)\")\nplt.ylabel(\"Expense\")\nplt.title(\"Predictions of between Expense and BMI\")\nplt.show()\n","c6462fc5":"#a sample of prediction\n\nprint(* random_forest.predict([[10],[51],[61]]))\n","06681880":"insurance.head()","fff8a964":"insurance_multi=pd.DataFrame()\ninsurance_multi[\"age\"]=insurance.groupby('age')['expenses'].mean().index\ninsurance_multi[\"bmi\"]=insurance.groupby('age')['bmi'].mean().values\ninsurance_multi[\"expenses\"]=insurance.groupby('age')['expenses'].mean().values \n\n                ","14aa1384":"from sklearn.linear_model import LinearRegression\n# df[[\"col1\", \"col3\"]]\nx = insurance_multi[[\"age\", \"bmi\"]].values\ny = insurance_multi.expenses.values.reshape(-1,1)\nmultiple_linear_regression = LinearRegression()\nmultiple_linear_regression.fit(x,y)\n\nprint(\"b0: \", multiple_linear_regression.intercept_)\nprint(\"b1,b2: \",multiple_linear_regression.coef_)\n\nprint(multiple_linear_regression.predict(np.array([[19,27.9],[28,33]])))","3456a92a":"\ny_head=multiple_linear_regression.predict(x)","2e8a34c9":"from sklearn.metrics import r2_score\nscore_DT=r2_score(y,y_head)\nprint(score_DT)","75eda34e":"\n# plt.scatter(x,y,color=\"red\")\nplt.plot(x,y_head,color=\"green\")\nplt.xlabel(\"Body\/Mass index(BMI)\")\nplt.ylabel(\"Expense\")\nplt.title(\"Predictions of between Expense and BMI\")\nplt.show()\n","d65a5877":"y = insurance.expenses.values.reshape(-1,1)\nx = insurance.bmi.values.reshape(-1,1)\nfrom sklearn.linear_model import LinearRegression\n\nlr = LinearRegression()\n\nlr.fit(x,y)\ny_head = lr.predict(x)\n\nplt.plot(x,y_head,color=\"red\",label =\"linear\")\nplt.show()","50ca68d1":"from sklearn.preprocessing import PolynomialFeatures\npolynomial_regression = PolynomialFeatures(degree = 2)\n\nx_polynomial = polynomial_regression.fit_transform(x)\n\n\nlinear_regression2 = LinearRegression()\nlinear_regression2.fit(x_polynomial,y)\n\ny_head2 = linear_regression2.predict(x_polynomial)\n\nplt.plot(x,y_head2,color= \"green\",label = \"poly\")\nplt.legend()\nplt.show()","bc942dee":"from sklearn.metrics import r2_score\nscore_DT=r2_score(y,y_head2)\nprint(score_DT)","7045c140":"a sample of prediction:\nif the BMI are 10,51 and 161, how much are Insurance Expenses?","6883b431":"a sample of prediction:\nif the age are 70,75 and 100, how much are Insurance Expenses?","3dcb5485":"Linear Regression","89b48eef":"Random Forest Regression between BMI and Expense\n\nWe formed a group in terms of BMI to show the Random Forest Reegression Between BMI and Expense.","e0ed6679":"Polinomial","8c51380c":"Multiple Linear regression\nWe formed a group in terms of age to show the Multiple Linear Regression among Age, BMI and Expense.","38887ac5":"We formed a group in terms of age to show the Linear Orientation Between Age and Expense."}}