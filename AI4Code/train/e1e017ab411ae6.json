{"cell_type":{"420bc2ed":"code","f86c9f66":"code","aa25861c":"code","99f5b39d":"code","a0aebb54":"code","12282745":"code","0b16096a":"code","a79bf74f":"code","e2005f7a":"code","1e1139a8":"markdown","2437cd8c":"markdown","46fd910e":"markdown","6d45f1e5":"markdown","24122c42":"markdown"},"source":{"420bc2ed":"#Importing Libraries :\nimport matplotlib.pyplot as plt #visulization\nfrom sklearn import datasets #pre-prepared dataset that we can directly use\nfrom sklearn import svm #SupportVectorMachine","f86c9f66":"#Importing dataset :\n#I am using a pre-existing data from the scikit-learn library :\ndigits = datasets.load_digits()","aa25861c":"print(digits.data) #digit.data = features","99f5b39d":"print(digits.target) #digits.target = actual label (ground truth)","a0aebb54":"clf = svm.SVC(gamma=0.001, C=100) #SVM Classifier","12282745":"#Train vector :\nX = digits.data[:-10] #take all elements but leave the last 10 for testing\n\n#Test vector :\ny = digits.target[:-10] #same, just leave the last 10 elements (to use them for predictions later)","0b16096a":"#fitting the classifier :\nclf.fit(X, y)\n\n#test on one element :\n\n#classifier.predict has some problems so:\n    #use of reshape(-1, 1) when the data has one feature (one column)\n    #use of reshape(1, -1) when the data is a sample data\nprint(clf.predict(digits.data[-5].reshape(1, -1))) #element number 5 from buttom (so it is not in the training set)\nplt.imshow(digits.images[-5], cmap=plt.cm.gray_r, interpolation='nearest')     \nplt.show()","a79bf74f":"#Other test :\nprint(clf.predict(digits.data[-9].reshape(1, -1)))\nplt.imshow(digits.images[-9], cmap=plt.cm.gray_r, interpolation='nearest')     \nplt.show()","e2005f7a":"#Other test :\nprint(clf.predict(digits.data[-1].reshape(1, -1)))\nplt.imshow(digits.images[-1], cmap=plt.cm.gray_r, interpolation='nearest')     \nplt.show()","1e1139a8":"# Support Vector Machine Character Recognition","2437cd8c":"Note :\nI made this notebook file by following this youtube tuto :\n[https:\/\/www.youtube.com\/watch?v=KTeVOb8gaD4](http:\/\/)","46fd910e":"SVM comes with many build-in parameters, you can check the official sklearn page for more informations: \nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.svm.SVC.html","6d45f1e5":"As you can see the algorithm predicted","24122c42":"This is a mini tutorial about SVM.\nSupport Vector Machine is a ML supervied algorithm that has as objectif to find an hyperplane in an N-dimensional space(N\u200a\u2014\u200athe number of features) that distinctly classifies the data points.\nAs the name suggests, the algo must at first find the support vectors then it will make the hyperplane relaying on these vectors.\nin this picture the support vectors are points on the interrupted lines : \n\n![SVM_margin.png](attachment:SVM_margin.png)"}}