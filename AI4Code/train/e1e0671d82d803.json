{"cell_type":{"3931de72":"code","9773015b":"code","d1ddba70":"code","41b0ad93":"code","a77fcdc0":"code","d6494873":"code","7e7ab793":"code","000b7405":"code","3ffb60e0":"code","fda8cb81":"code","ce3f67d5":"code","0c8463c3":"code","f1bfeabe":"code","0bdc4742":"code","92dbc265":"code","ca97abcc":"code","4f8dcfe0":"code","b05bd5c2":"code","74c084c0":"code","5a55c286":"code","8a76f893":"code","fc1f3578":"code","d87bdc59":"code","47e3a59c":"code","32c50ed9":"code","9d3e8227":"code","006af3f3":"code","cfd72594":"code","bbcd39eb":"code","a2ee2596":"code","201c30ab":"code","da9a3036":"code","da2eb91e":"code","20e6f184":"code","15dc459a":"code","0e237468":"code","8aa53b48":"code","c3e1bfba":"code","98eb8616":"code","9dd5344b":"code","13c97bce":"code","745dbb6d":"code","d0f837c6":"code","3ed8dc44":"code","db0035fd":"code","11a23f2e":"code","64906f97":"code","2ccb4a8d":"code","46981bac":"code","e5622c51":"code","35b8ba1c":"code","6454dbfc":"code","ac5b91a9":"code","d95156fb":"code","eb828405":"code","403e21c6":"code","2c4aa80b":"code","00bf940e":"code","79b1ff2f":"code","9ff1d92e":"code","af32ad99":"code","4b07132b":"code","aa40c297":"code","7b0edabe":"code","3a725b52":"code","2d84fefa":"code","bba14578":"code","84eceda3":"code","260141a3":"code","d8037e8f":"code","34d5fd46":"code","d4e8a493":"code","0d0c8258":"code","f4f57384":"code","8ff5d5dc":"code","7eaa58d3":"code","6bc21f19":"code","3ebebc5a":"code","d05aa25b":"code","42f1719c":"code","53917f31":"code","8fdaebbb":"code","dd8ef310":"code","a9fd217c":"code","77c42243":"code","c231d111":"code","a617feb6":"code","176958ef":"code","6ef79e14":"code","89465cf2":"code","8cd4ab6b":"code","1b88fbde":"code","06df2387":"code","987fb197":"code","7aff2366":"code","6de66d84":"code","26c4a355":"markdown","599a14fe":"markdown","3a567544":"markdown","6435f8c2":"markdown","8d707e24":"markdown","de034af4":"markdown","fae566b6":"markdown","40f22473":"markdown","ffa8868b":"markdown","eb82b045":"markdown","ff4b9462":"markdown","106a2f4a":"markdown","770be0ba":"markdown","6aa63803":"markdown","912e6466":"markdown","cb23ce0f":"markdown","9a477fb9":"markdown","10f9cc49":"markdown","d43005d5":"markdown","cc2fda28":"markdown","c678d023":"markdown","47c81de9":"markdown","98901cb5":"markdown","790ddd8c":"markdown","bf0dd800":"markdown","ef0e27b0":"markdown","782ea286":"markdown","b4447460":"markdown","feb5ddb2":"markdown","1a5c8597":"markdown","7274c766":"markdown","d4eceb90":"markdown","404aceed":"markdown","da833303":"markdown","6874b54f":"markdown","a47f3fc5":"markdown","2352a024":"markdown","798cf786":"markdown","ad505127":"markdown","f73600f6":"markdown","18c31e72":"markdown","09a95b39":"markdown","2f42af30":"markdown","a25bf683":"markdown","e6e1e050":"markdown","4cbf81a9":"markdown","2337dafa":"markdown"},"source":{"3931de72":"# Install required library\n!pip3 install calmap\n!pip3 install bar_chart_race\n!pip3 install pywaffle\n!pip3 install folium","9773015b":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \nimport calmap\nfrom datetime import datetime\nimport json\nimport requests\nplt.style.use('fivethirtyeight')\n%matplotlib inline\n\n#bar chart race\nimport bar_chart_race as bcr\n\n# Waffle Chart\nfrom pywaffle import Waffle\n\n# plotly\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import init_notebook_mode, iplot\n\n#geopandas\nimport geopandas as gpd\n\n#folium\nimport folium\n\n# color pallette\ncnf, dth, rec, act = '#393e46', '#ff2e63', '#21bf73', '#fe9801'\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\n\ndef print_files():\n    for dirname, _, filenames in os.walk('\/kaggle\/input'):\n        for filename in filenames:\n            print(os.path.join(dirname, filename))\n\n# List is to long, thus I am not printing files.\n# print_files()","d1ddba70":"confirmed_cases_data = pd.read_csv('..\/input\/novel-covid19-dataset\/time_series_covid19_confirmed_global.csv')\ndeaths_cases_data = pd.read_csv('..\/input\/novel-covid19-dataset\/time_series_covid19_deaths_global.csv')\ncovid_data = pd.read_csv('..\/input\/novel-covid19-dataset\/novel_corona_virus_dataset.csv')\ncases_country_data = pd.read_csv('..\/input\/novel-covid19-dataset\/cases_country.csv')","41b0ad93":"confirmed_cases_data.head()","a77fcdc0":"deaths_cases_data.head()","d6494873":"covid_data.head()","7e7ab793":"cases_country_data.head()","000b7405":"confirmed_cases_data = confirmed_cases_data.rename(columns={'Province\/State':'State','Country\/Region':'Country'})\ndeaths_cases_data = deaths_cases_data.rename(columns={'Province\/State':'State','Country\/Region':'Country'})\ncovid_data = covid_data.rename(columns={'Province\/State':'State','Country\/Region':'Country'})\ncases_country_data = cases_country_data.rename(columns={'Country_Region': 'Country', 'Long_':'Long'})","3ffb60e0":"#cases_country_data = cases_country_data.drop(['Last_Update', 'People_Tested', 'People_Hospitalized', 'UID', 'ISO3'], axis=1)","fda8cb81":"confirmed_cases_data.loc[confirmed_cases_data['Country'] == \"US\", \"Country\"] = \"USA\"\ndeaths_cases_data.loc[deaths_cases_data['Country'] == \"US\", \"Country\"] = \"USA\"\ncovid_data.loc[covid_data['Country'] == \"US\", \"Country\"] = \"USA\"\ncases_country_data.loc[cases_country_data['Country'] == \"US\", \"Country\"] = \"USA\"\n\nconfirmed_cases_data.loc[confirmed_cases_data['Country'] == 'Taiwan*', \"Country\"] = 'Taiwan'\ndeaths_cases_data.loc[deaths_cases_data['Country'] == 'Taiwan*', \"Country\"] = 'Taiwan'\ncovid_data.loc[covid_data['Country'] == 'Taiwan*', \"Country\"] = 'Taiwan'\ncases_country_data.loc[cases_country_data['Country'] == 'Taiwan*', \"Country\"] = 'Taiwan'\n\nconfirmed_cases_data.loc[confirmed_cases_data['Country'] == 'Korea, South', \"Country\"] = 'South Korea'\ndeaths_cases_data.loc[deaths_cases_data['Country'] == 'Korea, South', \"Country\"] = 'South Korea'\ncovid_data.loc[covid_data['Country'] == 'Korea, South', \"Country\"] = 'South Korea'\ncases_country_data.loc[cases_country_data['Country'] == 'Korea, South', \"Country\"] = 'South Korea'\n\nconfirmed_cases_data.loc[confirmed_cases_data['Country'] == 'Congo (Kinshasa)', \"Country\"] = 'Democratic Republic of the Congo'\ndeaths_cases_data.loc[deaths_cases_data['Country'] == 'Congo (Kinshasa)', \"Country\"] = 'Democratic Republic of the Congo'\ncovid_data.loc[covid_data['Country'] == 'Congo (Kinshasa)', \"Country\"] = 'Democratic Republic of the Congo'\ncases_country_data.loc[cases_country_data['Country'] == 'Congo (Kinshasa)', \"Country\"] = 'Democratic Republic of the Congo'","ce3f67d5":"covid_data['Date'] = pd.to_datetime(covid_data['Date'])\ncases_country_data['Last_Update'] = pd.to_datetime(cases_country_data['Last_Update'])","0c8463c3":"country_wise_cases = cases_country_data.copy().drop(['Last_Update', 'Lat', 'Long', 'Incident_Rate','People_Tested', 'People_Hospitalized', 'UID', 'ISO3'], axis=1)\ncountry_wise_cases.index = country_wise_cases[\"Country\"]\ncountry_wise_cases = country_wise_cases.drop(['Country'], axis=1)","f1bfeabe":"df = pd.DataFrame(pd.to_numeric(country_wise_cases.sum()),dtype=np.float64).transpose()\ndf.style.background_gradient(cmap='PuBu',axis=1)","0bdc4742":"temp = cases_country_data.groupby('Last_Update')['Confirmed', 'Deaths', 'Recovered', 'Active'].sum().reset_index()\ntemp['Con']='Confirmed'\ntemp = temp.reset_index(drop=True)\n\n\ntm = temp.melt(id_vars=\"Last_Update\", value_vars=['Active', 'Deaths', 'Recovered'])\nfig = px.treemap(tm, path=[\"variable\"], values=\"value\", height=225, width=900,\n                 color_discrete_sequence=[act, rec, dth])\nfig.data[0].textinfo = 'label+value'\nfig.show()","92dbc265":"temp = covid_data.groupby('Date')['Active', 'Deaths', 'Recovered'].sum().reset_index()\ntemp = temp.melt(id_vars=\"Date\", value_vars=['Active', 'Deaths', 'Recovered'],\n                 var_name='Case', value_name='Count')\n#temp.head()\n\nfig = px.area(temp, x=\"Date\", y=\"Count\", color='Case', height=600,\n             title='Cases over time', color_discrete_sequence = [act, dth, rec])\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.show()","ca97abcc":"temp = covid_data.groupby('Date')['Confirmed', 'Deaths', 'Recovered', 'Active'].sum().reset_index()\n\nfig = go.Figure(data=[\n    go.Bar(name='Active', x=temp[\"Date\"], y=temp[\"Active\"], marker=go.bar.Marker(\n    color=act)),\n    go.Bar(name='Deaths', x=temp[\"Date\"], y=temp[\"Deaths\"],marker=go.bar.Marker(\n    color=dth)),\n    go.Bar(name='Recovered', x=temp[\"Date\"], y=temp[\"Recovered\"],marker=go.bar.Marker(\n    color=rec))\n])\n# Change the bar mode\nfig.update_layout(\n    width = 900,\n    height=500,\n    barmode='stack', \n    title='Total cases over time',\n    font=dict(size=14, color='#686868'),\n    xaxis_tickangle=-45,\n    yaxis=dict(\n        title='Count'\n        ))\n\nfig.show()","4f8dcfe0":"country_wise_cases.sort_values('Confirmed', ascending= False).style\\\n    .background_gradient(cmap='BrBG_r', subset=['Confirmed'])\\\n    .background_gradient(cmap='YlGn_r', subset=[\"Deaths\"])\\\n    .background_gradient(cmap='YlOrBr',subset=['Recovered'])\\\n    .background_gradient(cmap='summer_r', subset=['Active'])\\\n    .background_gradient(cmap='GnBu_r', subset=['Mortality_Rate'])","b05bd5c2":"full_latest = covid_data[covid_data['Date'] == max(covid_data['Date'])]\n                         \nfig = px.treemap(full_latest.sort_values(by='Confirmed', ascending=False).reset_index(drop=True), \n                 path=[\"Country\"], values=\"Confirmed\", height=700, title='Total Confirmed Cases')\nfig.data[0].textinfo = 'label+text+value'\nfig.show()","74c084c0":"fig = px.scatter(cases_country_data.sort_values('Deaths', ascending=False).iloc[:20, :], \n                 x='Confirmed', y='Deaths', color='Country', size='Confirmed', height=700,\n                 text='Country', log_x=True, log_y=True, title='Deaths vs Confirmed (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.show()","5a55c286":"# horizontal bar chart\ndef horizontal_bar_chart(df, x, y, title, x_label, y_label, color):\n    fig = px.bar(df, x=x, y=y, orientation='h', title=title, \n                 labels={x.name: x_label,\n                         y.name: y_label}, color_discrete_sequence=[color])\n    fig.update_layout(yaxis={'categoryorder': 'total ascending'})\n    fig.show()","8a76f893":"top_10_confirmed_contries = country_wise_cases.sort_values('Confirmed', ascending=False)[:10]\nhorizontal_bar_chart(top_10_confirmed_contries,top_10_confirmed_contries.Confirmed, top_10_confirmed_contries.index,\n                     'Top 10 Countries (Confirmed Cases)', 'Number of Confirmed cases (in Million)','Country Name',cnf)","fc1f3578":"top_10_deaths_contries = country_wise_cases.sort_values('Deaths', ascending=False)[:10]\nhorizontal_bar_chart(top_10_deaths_contries, top_10_deaths_contries.Deaths, top_10_deaths_contries.index,\n                     'Top 10 Countries (Deaths Cases)', 'Number of Deaths cases (in Thousand)','Country Name', dth)","d87bdc59":"top_10_recovered_contries = country_wise_cases.sort_values('Recovered', ascending=False)[:10]\nhorizontal_bar_chart(top_10_recovered_contries, top_10_recovered_contries.Recovered, top_10_recovered_contries.index,\n                    'Top 10 Countries (Recovered Cases)', 'Number of Recovered cases (in Million)', 'Country Name', rec)","47e3a59c":"top_10_active_contries = country_wise_cases.sort_values('Active', ascending=False)[:10]\nhorizontal_bar_chart(top_10_active_contries, top_10_active_contries.Active, top_10_active_contries.index,\n                     'Top 10 Countries (Active Cases)', 'Number of Active cases (in Million)', 'Country Name', act)","32c50ed9":"def waffle_chart(values, title, rows, ncol, cmap, figsize):\n    plt.figure(figsize=(20,15))\n    fig = plt.figure(FigureClass = Waffle,\n                     values = values, rows=rows,\n                     title={'label': title, 'loc': 'left'},\n                     legend={'loc': 'lower left',\n                             'bbox_to_anchor': (0, -0.4), #check matplotlib legend doc for axis position info\n                             'ncol': ncol, 'fontsize':12, 'framealpha':0 \n                            },\n                     figsize = figsize,\n                     cmap_name=cmap, characters='\u2b24')\n    fig.set_facecolor('#DDDDDD')","9d3e8227":"waffle_top_10_confirmed_contries = country_wise_cases.sort_values('Confirmed', ascending=False)\nconfimed_values = {k:v for k,v in zip(waffle_top_10_confirmed_contries.index[:10], waffle_top_10_confirmed_contries['Confirmed'][:10]\/100000)}\nwaffle_chart(confimed_values, 'Top 10 Country affected by COVID-19 (Confirmed Cases).\\nEach Circle represents 100,000 confirmed cases.', \n             7, 6, 'tab10', (15,5))","006af3f3":"waffle_top_10_deaths_contries = country_wise_cases.sort_values('Deaths', ascending=False)\ndeaths_values = {k:v for k,v in zip(waffle_top_10_deaths_contries.index[:10], waffle_top_10_deaths_contries['Deaths'][:10]\/10000)}\nwaffle_chart(deaths_values, 'Top 10 Country affected by COVID-19 (Deaths Cases).\\nEach Circle represents 10,000 deaths.', \n             5, 5, 'tab10', (15,5))","cfd72594":"waffle_top_10_recover_contries = country_wise_cases.sort_values('Recovered', ascending=False)\nrecovered_values = {k:v for k,v in zip(waffle_top_10_recover_contries.index[:10], waffle_top_10_recover_contries['Recovered'][:10]\/100000)}\nwaffle_chart(recovered_values, 'Top 10 Country affected by COVID-19 (Recovered Cases).\\nEach Circle represents 100,000 recovered cases.', \n             6, 5, 'tab10', (15,5))","bbcd39eb":"waffle_top_10_active_contries = country_wise_cases.sort_values('Active', ascending=False)\nactive_values = {k:v for k,v in zip(waffle_top_10_active_contries.index[:10], waffle_top_10_active_contries['Active'][:10]\/100000)}\nwaffle_chart(active_values, 'Top 10 Country affected by COVID-19 (Active Cases).\\nEach Circle represents 10,000 active cases.', \n             5, 5, 'tab10', (15,5))","a2ee2596":"bcr_confirmed = covid_data.pivot_table('Confirmed',['Date'], 'Country')\nbcr_confirmed.sort_values(list(bcr_confirmed.columns),inplace=True)\nbcr_confirmed = bcr_confirmed.sort_index()","201c30ab":"bcr.bar_chart_race(\n    df=bcr_confirmed,\n    filename=None,\n    #filename='Confirmed cases Bar Chart Race.mp4',\n    orientation='h',\n    sort='desc',\n    n_bars=10,\n    fixed_order=False,\n    fixed_max=True,\n    steps_per_period=10,\n    interpolate_period=False,\n    label_bars=True,\n    bar_size=.90,\n    period_label={'x': .99, 'y': .25, 'ha': 'right', 'va': 'center'},\n    period_summary_func=lambda v, r: {'x': .99, 'y': .18,\n                                      's': f'Total Confirmed Cases: {v.nlargest(39).sum():,.0f}',\n                                      'ha': 'right', 'size': 8, 'family': 'Courier New'},\n    period_length=500,\n    figsize=(6.5,5),\n    dpi=144,\n    cmap='dark12',\n    title='Confirmed cases by Country.',\n    title_size='',\n    bar_label_size=7,\n    tick_label_size=5,\n    shared_fontdict={'family' : 'Helvetica','color' : '.1'},\n    scale='linear',\n    writer=None,\n    fig=None,\n    bar_kwargs={'alpha': .7},\n    filter_column_colors=True)","da9a3036":"bcr_deaths = covid_data.pivot_table('Deaths',['Date'], 'Country')\nbcr_deaths.sort_values(list(bcr_deaths.columns),inplace=True)\nbcr_deaths = bcr_deaths.sort_index()","da2eb91e":"bcr.bar_chart_race(\n    df=bcr_deaths,\n    filename=None,\n    #filename='Deaths cases Bar Chart Race.mp4',\n    orientation='h',\n    sort='desc',\n    n_bars=10,\n    fixed_order=False,\n    fixed_max=True,\n    steps_per_period=10,\n    interpolate_period=False,\n    label_bars=True,\n    bar_size=.90,\n    period_label={'x': .99, 'y': .25, 'ha': 'right', 'va': 'center'},\n    period_summary_func=lambda v, r: {'x': .99, 'y': .18,\n                                      's': f'Total Deaths Cases: {v.nlargest(39).sum():,.0f}',\n                                      'ha': 'right', 'size': 8, 'family': 'Courier New'},\n    period_length=500,\n    figsize=(6.5,5),\n    dpi=144,\n    cmap='dark12',\n    title='Deaths due to Corona Virus by Country.',\n    title_size='',\n    bar_label_size=7,\n    tick_label_size=5,\n    shared_fontdict={'family' : 'Helvetica','color' : '.1'},\n    scale='linear',\n    writer=None,\n    fig=None,\n    bar_kwargs={'alpha': .7},\n    filter_column_colors=True)","20e6f184":"bcr_recovered = covid_data.pivot_table('Deaths',['Date'], 'Country')\nbcr_recovered.sort_values(list(bcr_recovered.columns),inplace=True)\nbcr_recovered = bcr_recovered.sort_index()","15dc459a":"bcr.bar_chart_race(\n    df=bcr_recovered,\n    filename=None,\n    orientation='h',\n    sort='desc',\n    n_bars=10,\n    fixed_order=False,\n    fixed_max=True,\n    steps_per_period=10,\n    interpolate_period=False,\n    label_bars=True,\n    bar_size=.90,\n    period_label={'x': .99, 'y': .25, 'ha': 'right', 'va': 'center'},\n    period_summary_func=lambda v, r: {'x': .99, 'y': .18,\n                                      's': f'Recovered: {v.nlargest(39).sum():,.0f}',\n                                      'ha': 'right', 'size': 8, 'family': 'Courier New'},\n    period_length=500,\n    figsize=(6.5,5),\n    dpi=144,\n    cmap='dark12',\n    title='Recovered by Country.',\n    title_size='',\n    bar_label_size=7,\n    tick_label_size=5,\n    shared_fontdict={'family' : 'Helvetica','color' : '.1'},\n    scale='linear',\n    writer=None,\n    fig=None,\n    bar_kwargs={'alpha': .7},\n    filter_column_colors=True)","0e237468":"bcr_active = covid_data.pivot_table('Deaths',['Date'], 'Country')\nbcr_active.sort_values(list(bcr_active.columns),inplace=True)\nbcr_active = bcr_active.sort_index()","8aa53b48":"bcr.bar_chart_race(\n    df=bcr_active,\n    filename=None,\n    orientation='h',\n    sort='desc',\n    n_bars=10,\n    fixed_order=False,\n    fixed_max=True,\n    steps_per_period=10,\n    interpolate_period=False,\n    label_bars=True,\n    bar_size=.90,\n    period_label={'x': .99, 'y': .25, 'ha': 'right', 'va': 'center'},\n    period_summary_func=lambda v, r: {'x': .99, 'y': .18,\n                                      's': f'Total Active Cases: {v.nlargest(39).sum():,.0f}',\n                                      'ha': 'right', 'size': 8, 'family': 'Courier New'},\n    period_length=500,\n    figsize=(6.5,5),\n    dpi=144,\n    cmap='dark12',\n    title='Active cases by Country.',\n    title_size='',\n    bar_label_size=7,\n    tick_label_size=5,\n    shared_fontdict={'family' : 'Helvetica','color' : '.1'},\n    scale='linear',\n    writer=None,\n    fig=None,\n    bar_kwargs={'alpha': .7},\n    filter_column_colors=True)","c3e1bfba":"# function to create contry wise data\ndef country_wise_data(country):\n    return covid_data[covid_data['Country'] == country]","98eb8616":"latest_date = datetime.strptime(confirmed_cases_data.columns[-1],'%m\/%d\/%y').strftime(\"%m-%d-%Y\")\nurl = 'https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_daily_reports_us\/'+latest_date+'.csv'\nlatest_covid_19_usa = pd.read_csv(url)","9dd5344b":"latest_covid_19_usa = latest_covid_19_usa.rename(columns={'Province_State':'State', 'Country_Region':'Country', 'Long_':'Long'})","13c97bce":"latest_covid_19_usa.head()","745dbb6d":"usa_wise_cases = latest_covid_19_usa.copy().drop(['Country','Last_Update', 'Lat', 'Long', 'Incident_Rate','FIPS', 'People_Tested', 'People_Hospitalized', 'Mortality_Rate', 'UID', 'ISO3', 'Testing_Rate', 'Hospitalization_Rate'], axis=1).fillna(0)\nusa_wise_cases.index = usa_wise_cases[\"State\"]\nusa_wise_cases = usa_wise_cases.drop(['State'], axis=1)","d0f837c6":"df = pd.DataFrame(pd.to_numeric(usa_wise_cases.sum()),dtype=np.float64).transpose()\ndf.style.background_gradient(cmap='PuBu',axis=1)","3ed8dc44":"temp = latest_covid_19_usa.groupby('Last_Update')['Confirmed', 'Deaths', 'Recovered', 'Active'].sum().reset_index()\ntemp['Con']='Confirmed'\ntemp = temp.reset_index(drop=True)\n\n\ntm = temp.melt(id_vars=\"Last_Update\", value_vars=['Active', 'Deaths', 'Recovered'])\nfig = px.treemap(tm, path=[\"variable\"], values=\"value\", height=225, width=900,\n                 color_discrete_sequence=[act, rec, dth])\nfig.data[0].textinfo = 'label+value'\nfig.show()","db0035fd":"usa_wise_cases.sort_values('Confirmed', ascending= False).style\\\n    .background_gradient(cmap='BrBG_r', subset=['Confirmed'])\\\n    .background_gradient(cmap='YlGn_r', subset=[\"Deaths\"])\\\n    .background_gradient(cmap='YlOrBr',subset=['Recovered'])\\\n    .background_gradient(cmap='summer_r', subset=['Active'])","11a23f2e":"full_latest = latest_covid_19_usa[latest_covid_19_usa['Last_Update'] == max(latest_covid_19_usa['Last_Update'])]\n                         \nfig = px.treemap(full_latest.sort_values(by='Confirmed', ascending=False).reset_index(drop=True),\n                 path=[\"State\"], values=\"Confirmed\", height=700, title='Total Confirmed Cases')\nfig.data[0].textinfo = 'label+text+value'\nfig.show()","64906f97":"top_10_us_confirmed_states = usa_wise_cases.sort_values('Confirmed', ascending=False)[:10]\nfig = px.bar(top_10_us_confirmed_states, x='Confirmed', y=top_10_us_confirmed_states.index, orientation='h',\n             title='Top 10 Affected States (Confirmed Cases)', \n             labels={\"Confirmed\": \"Number of Confirmed cases (in Million)\",\n                     \"Country\": \"Country Name\"}, color_discrete_sequence=[cnf]\n            )\nfig.update_layout(yaxis={'categoryorder': 'total ascending'})\nfig.show()","2ccb4a8d":"top_10_us_deaths_states = usa_wise_cases.sort_values('Deaths', ascending=False)[:10]\nfig = px.bar(top_10_us_deaths_states, x='Deaths', y=top_10_us_deaths_states.index, orientation='h',\n             title='Top 10 Affected States (Deaths Cases)', \n             labels={\"Deaths\": \"Number of Deaths cases (in Thousand)\",\n                     \"Country\": \"Country Name\"}, color_discrete_sequence=[dth]\n            )\nfig.update_layout(yaxis={'categoryorder': 'total ascending'})\nfig.show()","46981bac":"top_10_us_recovered_states = usa_wise_cases.sort_values('Recovered', ascending=False)[:10]\nfig = px.bar(top_10_us_recovered_states, x='Recovered', y=top_10_us_recovered_states.index, orientation='h',\n             title='Top 10 Affected States (Recovered Cases)', \n             labels={\"Recovered\": \"Number of Recovered cases (in Thousand)\",\n                     \"Country\": \"Country Name\"}, color_discrete_sequence=[rec]\n            )\nfig.update_layout(yaxis={'categoryorder': 'total ascending'})\nfig.show()","e5622c51":"top_10_us_active_states = usa_wise_cases.sort_values('Active', ascending=False)[:10]\nfig = px.bar(top_10_us_active_states, x='Active', y=top_10_us_active_states.index, orientation='h',\n             title='Top 10 Affected States (Active Cases)', \n             labels={\"Active\": \"Number of Active cases (in Thousand)\",\n                     \"Country\": \"Country Name\"}, color_discrete_sequence=[act]\n            )\nfig.update_layout(yaxis={'categoryorder': 'total ascending'})\nfig.show()","35b8ba1c":"waffle_usa_wise_cases = usa_wise_cases.sort_values('Confirmed', ascending= False)\nvalues = {k:v for k,v in zip(waffle_usa_wise_cases.index[:10], waffle_usa_wise_cases['Confirmed'][:10]\/10000)}","6454dbfc":"fig = plt.figure(\n    FigureClass = Waffle,\n    title={'label': 'Top 10 States wise Confirmed cases in USA (1 Circle = 10k Confimed Cases)', 'loc': 'left'},\n    rows = 12,\n    values = values,\n    legend={'loc': 'lower left',\n            'bbox_to_anchor': (0, -0.4), #check matplotlib legend doc for axis position info\n            'ncol': 7, 'fontsize':12, 'framealpha':0\n    },\n    figsize = (20, 7),\n    block_arranging_style='snake',\n    cmap_name=\"tab10\",\n    characters='\u2b24',\n    rounding_rule='floor',\n    facecolor='#DDDDDD'\n)\n","ac5b91a9":"waffle_usa_wise_death_cases = usa_wise_cases.sort_values('Deaths', ascending= False)\ndeaths_values = {k:v for k,v in zip(waffle_usa_wise_death_cases.index[:10], waffle_usa_wise_death_cases['Deaths'][:10]\/1000)}\nfig = plt.figure(\n    FigureClass = Waffle,\n    title={'label': 'Top 10 State wise Deaths in USA (1 Circle = 1k Death Cases)', 'loc': 'left'},\n    rows = 5,\n    values = deaths_values,\n    legend={'loc': 'lower left',\n            'bbox_to_anchor': (0, -0.4), #check matplotlib legend doc for axis position info\n            'ncol': 10, 'fontsize':12, 'framealpha':0\n    },\n    figsize = (20, 7),\n    block_arranging_style='snake',\n    cmap_name=\"tab10\",\n    characters='\u2b24'\n)\n\nfig.set_facecolor('#DDDDDD')","d95156fb":"state_geo = requests.get('https:\/\/raw.githubusercontent.com\/python-visualization\/folium\/master\/examples\/data\/us-states.json').json()\ncounty_geo = requests.get('https:\/\/raw.githubusercontent.com\/python-visualization\/folium\/master\/examples\/data\/us_counties_20m_topo.json').json()","eb828405":"data_temp = latest_covid_19_usa.groupby([\"State\"]).sum().reset_index().drop([\"Lat\",\"Long\"],axis=1)\nm = folium.Map(location=[37, -102], zoom_start=5)\n \n# Add the color for the chloropleth:\nfolium.Choropleth(\n    geo_data=state_geo,\n    name='choropleth',\n    data = data_temp,\n    columns=['State', 'Confirmed'],\n    key_on='feature.properties.name',\n    fill_color='BuPu',\n    fill_opacity=0.7,\n    line_opacity=0.2,\n   # bins = bins,\n    reset=True,\n    legend_name='Confirmed cases'\n).add_to(m)\n\nfolium.LayerControl().add_to(m)\n\nm","403e21c6":"covid_19_india = pd.read_csv('..\/input\/covid19-in-india\/covid_19_india.csv')","2c4aa80b":"covid_19_india.head()","00bf940e":"covid_19_india = covid_19_india.drop(['Sno','Time','ConfirmedIndianNational', 'ConfirmedForeignNational'], axis=1)\ncovid_19_india = covid_19_india.rename(columns={'State\/UnionTerritory':'States','Cured':'Recovered'})","79b1ff2f":"covid_19_india['Active'] = covid_19_india['Confirmed'] - covid_19_india['Recovered'] - covid_19_india['Deaths']\ncovid_19_india = covid_19_india.sort_values(['Date', 'States']).reset_index(drop=True)","9ff1d92e":"covid_19_india['Date'] = pd.to_datetime(covid_19_india['Date'])","af32ad99":"covid_data","4b07132b":"covid_19_india","aa40c297":"india_wise_cases = covid_19_india[covid_19_india['Date'] == covid_19_india['Date'].max()].copy().fillna(0)\nindia_wise_cases.index = india_wise_cases[\"States\"]\nindia_wise_cases = india_wise_cases.drop(['States', 'Date'], axis=1)","7b0edabe":"df = pd.DataFrame(pd.to_numeric(india_wise_cases.sum()),dtype=np.float64).transpose()\ndf.style.background_gradient(cmap='PuBu',axis=1)","3a725b52":"df_last_date = covid_19_india[covid_19_india['Date'] == covid_19_india['Date'].max()]\ntemp = df_last_date.groupby('Date')['Confirmed', 'Deaths', 'Recovered', 'Active'].sum().reset_index()\ntemp = temp.reset_index(drop=True)\n\n\ntm = temp.melt(id_vars=\"Date\", value_vars=['Active', 'Deaths', 'Recovered'])\nfig = px.treemap(tm, path=[\"variable\"], values=\"value\", height=225, width=700,\n                 color_discrete_sequence=[act, rec, dth])\nfig.data[0].textinfo = 'label+value'\nfig.show()","2d84fefa":"india_wise_cases.sort_values('Confirmed', ascending= False).style\\\n    .background_gradient(cmap='BrBG_r', subset=['Confirmed'])\\\n    .background_gradient(cmap='YlGn_r', subset=[\"Deaths\"])\\\n    .background_gradient(cmap='YlOrBr',subset=['Recovered'])\\\n    .background_gradient(cmap='summer_r', subset=['Active'])","bba14578":"full_latest = covid_19_india[covid_19_india['Date'] == max(covid_19_india['Date'])]\n                         \nfig = px.treemap(full_latest.sort_values(by='Confirmed', ascending=False).reset_index(drop=True), \n                 path=[\"States\"], values=\"Confirmed\", height=700, title='Total Confirmed Cases')\nfig.data[0].textinfo = 'label+text+value'\nfig.show()","84eceda3":"top_10_indian_confirmed_states = india_wise_cases.sort_values('Confirmed', ascending=False)[:10]\nhorizontal_bar_chart(top_10_indian_confirmed_states,top_10_indian_confirmed_states.Confirmed, top_10_indian_confirmed_states.index,\n                     'Top 10 Indian States (Confirmed Cases)', 'Number of Confirmed cases (in Thousands)','States Name',cnf)","260141a3":"top_10_indian_state_deaths = india_wise_cases.sort_values('Deaths', ascending=False)[:10]\nhorizontal_bar_chart(top_10_indian_state_deaths, top_10_indian_state_deaths.Deaths, top_10_indian_state_deaths.index,\n                     'Top 10 States (Deaths Cases)', 'Number of Deaths cases (in Thousands)','States Name', dth)","d8037e8f":"top_10_indian_recovered_states = india_wise_cases.sort_values('Recovered', ascending=False)[:10]\nhorizontal_bar_chart(top_10_indian_recovered_states, top_10_indian_recovered_states.Recovered, top_10_indian_recovered_states.index,\n                    'Top 10 States (Recovered Cases)', 'Number of Recovered cases (in Thousands)', 'States Name', rec)","34d5fd46":"top_10_india_active_states = india_wise_cases.sort_values('Active', ascending=False)[:10]\nhorizontal_bar_chart(top_10_india_active_states, top_10_india_active_states.Active, top_10_india_active_states.index,\n                     'Top 10 States (Active Cases)', 'Number of Active cases (in Thousands)', 'States Name', act)","d4e8a493":"waffle_top_10_confirmed_states = india_wise_cases.sort_values('Confirmed', ascending=False)\nconfimed_values = {k:v for k,v in zip(waffle_top_10_confirmed_states.index[:10], waffle_top_10_confirmed_states['Confirmed'][:10]\/10000)}\nwaffle_chart(confimed_values, 'Top 10 States affected by COVID-19 (Confirmed Cases).\\nEach Circle represents 10,000 confirmed cases.', \n             7, 6, 'tab10', (15,5))","0d0c8258":"waffle_top_10_india_deaths_states = india_wise_cases.sort_values('Deaths', ascending=False)\ndeaths_values = {k:v for k,v in zip(waffle_top_10_india_deaths_states.index[:10], waffle_top_10_india_deaths_states['Deaths'][:10]\/1000)}\nwaffle_chart(deaths_values, 'Top 10 Indian States affected by COVID-19 (Deaths Cases).\\nEach Circle represents 1,000 deaths.', \n             3, 6, 'tab10', (15,5))","f4f57384":"waffle_top_10_india_recover_states = india_wise_cases.sort_values('Recovered', ascending=False)\nrecovered_values = {k:v for k,v in zip(waffle_top_10_india_recover_states.index[:10], waffle_top_10_india_recover_states['Recovered'][:10]\/10000)}\nwaffle_chart(recovered_values, 'Top 10 India States affected by COVID-19 (Recovered Cases).\\nEach Circle represents 10,000 recovered cases.', \n             6, 6, 'tab10', (15,5))","8ff5d5dc":"waffle_top_10_india_active_states = india_wise_cases.sort_values('Active', ascending=False)\nactive_values = {k:v for k,v in zip(waffle_top_10_india_active_states.index[:10], waffle_top_10_india_active_states['Active'][:10]\/10000)}\nwaffle_chart(active_values, 'Top 10 Country affected by COVID-19 (Active Cases).\\nEach Circle represents 10,000 active cases.', \n             4, 5, 'tab10', (15,5))","7eaa58d3":"unique_states = covid_19_india['States'].unique()\nplt.style.use(\"seaborn-talk\")","6bc21f19":"# Get last date to see which states have the most cases currently\nlast_date = covid_19_india['Date'].max()\ndf_last_date = covid_19_india[covid_19_india['Date'] == last_date]\nseries_last_date = df_last_date.groupby('States')['Confirmed'].sum().sort_values(ascending=False)\n\nlabels = []\nvalues = []\nstate_count = 5\nother_total = 0\nfor state in series_last_date.index:\n    if state_count > 0:\n        labels.append(state)\n        values.append(series_last_date[state])\n        state_count -= 1\n    else:\n        other_total += series_last_date[state]\nlabels.append(\"Other\")\nvalues.append(other_total)\n\nwedge_dict = {\n    'edgecolor': 'black',\n    'linewidth': 2        \n}\n\nexplode = (0, 0.1, 0, 0, 0, 0)\nfig = plt.figure(figsize=(15,9))\nplt.title(f\"Total Cases on {last_date}\")\nplt.pie(values, labels=labels, explode=explode, autopct='%1.1f%%', wedgeprops=wedge_dict)\nplt.show()","3ebebc5a":"fp = '..\/input\/india-2020-gisdata\/Igismap\/Indian_States.shp'\nmap_df = gpd.read_file(fp)\n\n# change state name to match in both files -- I manually checked few\nmap_df['st_nm'].iloc[0]  = 'Andaman and Nicobar Islands'\nmap_df['st_nm'].iloc[12] = 'Jammu and Kashmir'\nmap_df['st_nm'].iloc[6] = 'Dadara and Nagar Havelli'\nmap_df['st_nm'].iloc[23] = 'Delhi'","d05aa25b":"merged = map_df.set_index('st_nm').join(covid_19_india.set_index('States'))\n\n#fill NaN values with Zero\n\nmerged[['Confirmed', 'Recovered', 'Deaths']] = merged[['Confirmed', 'Recovered', 'Deaths']].fillna(0).astype('int')","42f1719c":"fig, ax = plt.subplots(1, figsize=(23, 19))\nax.axis('on')\nax.set_title('Total COVID-19 cases in India', fontdict={'fontsize': '35', 'fontweight' : '5'})\n\n# plot the figure\nmerged.plot(column='Confirmed', cmap='Oranges', linewidth=0.8, ax=ax, edgecolor='0.8', legend=True)\n\n\n\n# Save the output as a PNG image\n#fig.savefig(\"TotalCase_India.png\", dpi=100)","53917f31":"# create figure and axes for Matplotlib and set the title\nfig, ax = plt.subplots(1, figsize=(23, 19))\nax.axis('on')\nax.set_title('Total Deaths due to COVID-19 in India', fontdict={'fontsize': '35', 'fontweight' : '5'})\n\n# plot the figure\nmerged.plot(column='Deaths', cmap='Blues', linewidth=0.8, ax=ax, edgecolor='0.8', legend=True)\n\n\n# Save the output as a PNG image\n#fig.savefig(\"TotalDeath_India.png\", dpi=100)","8fdaebbb":"covid_19_brazil = pd.read_csv('..\/input\/corona-virus-brazil\/brazil_covid19.csv')","dd8ef310":"covid_19_brazil.head()","a9fd217c":"brazil_wise_cases = covid_19_brazil[covid_19_brazil['date']==covid_19_brazil['date'].max()].copy().drop(['region','date'], axis=1).fillna(0)\nbrazil_wise_cases.index = brazil_wise_cases[\"state\"]\nbrazil_wise_cases = brazil_wise_cases.drop(['state'], axis=1)","77c42243":"df = pd.DataFrame(pd.to_numeric(brazil_wise_cases.sum()),dtype=np.float64).transpose()\ndf.style.background_gradient(cmap='PuBu',axis=1)","c231d111":"temp = covid_19_brazil.groupby('date')['cases', 'deaths'].sum().reset_index()\ntemp['Con']='cases'\ntemp = temp.reset_index(drop=True)\n\n\ntm = temp.melt(id_vars='date', value_vars=['cases', 'deaths'])\nfig = px.treemap(tm[tm['date']==tm['date'].max()], path=[\"variable\"], values=\"value\", height=225, width=800,\n                 color_discrete_sequence=[act, dth])\nfig.data[0].textinfo = 'label+value'\nfig.show()","a617feb6":"brazil_wise_cases.sort_values('cases', ascending= False).style\\\n    .background_gradient(cmap='BrBG_r', subset=['cases'])\\\n    .background_gradient(cmap='YlGn_r', subset=[\"deaths\"])","176958ef":"full_latest = covid_19_brazil[covid_19_brazil['date'] == max(covid_19_brazil['date'])]\n                         \nfig = px.treemap(full_latest.sort_values(by='cases', ascending=False).reset_index(drop=True), \n                 path=[\"state\"], values=\"cases\", height=700, title='Total Confirmed Cases')\nfig.data[0].textinfo = 'label+text+value'\nfig.show()","6ef79e14":"covid_19_italy = pd.read_csv('..\/input\/covid19-in-italy\/covid19_italy_region.csv')","89465cf2":"covid_19_italy['Date'] = pd.to_datetime(covid_19_italy['Date'])","8cd4ab6b":"covid_19_italy.head()","1b88fbde":"italy_wise_cases = covid_19_italy[covid_19_italy['Date']==covid_19_italy['Date'].max()].copy().drop(['SNo','RegionCode','Country', \n                                                                                                     'HospitalizedPatients', 'IntensiveCarePatients', 'HomeConfinement',\n                                                                                                     'NewPositiveCases', 'NewPositiveCases', 'TotalHospitalizedPatients','TestsPerformed',\n                                                                                                     'Latitude', 'Longitude'], axis=1).fillna(0)\nitaly_wise_cases.index = italy_wise_cases[\"RegionName\"]\nitaly_wise_cases = italy_wise_cases.drop(['RegionName'], axis=1)","06df2387":"df = pd.DataFrame(pd.to_numeric(italy_wise_cases.sum()),dtype=np.float64).transpose()\ndf.style.background_gradient(cmap='PuBu',axis=1)","987fb197":"df_last_date = covid_19_italy[covid_19_italy['Date'] == covid_19_italy['Date'].max()]\ntemp = df_last_date.groupby('Date')['TotalPositiveCases', 'Deaths', 'Recovered', 'CurrentPositiveCases'].sum().reset_index()\ntemp = temp.reset_index(drop=True)\n\ntm = temp.melt(id_vars=\"Date\", value_vars=['CurrentPositiveCases', 'Deaths', 'Recovered'])\nfig = px.treemap(tm, path=[\"variable\"], values=\"value\", height=225, width=900,\n                 color_discrete_sequence=[act, rec, dth])\nfig.data[0].textinfo = 'label+value'\nfig.show()","7aff2366":"italy_wise_cases.sort_values('TotalPositiveCases', ascending= False).style\\\n    .background_gradient(cmap='BrBG_r', subset=['TotalPositiveCases'])\\\n    .background_gradient(cmap='YlGn_r', subset=[\"Deaths\"])\\\n    .background_gradient(cmap='YlOrBr',subset=['Recovered'])\\\n    .background_gradient(cmap='summer_r', subset=['CurrentPositiveCases'])","6de66d84":"full_latest = covid_19_italy[covid_19_italy['Date'] == max(covid_19_italy['Date'])]\n                         \nfig = px.treemap(full_latest.sort_values(by='TotalPositiveCases', ascending=False).reset_index(drop=True), \n                 path=[\"RegionName\"], values=\"TotalPositiveCases\", height=700, title='Total Confirmed Cases')\nfig.data[0].textinfo = 'label+text+value'\nfig.show()","26c4a355":"<a id='usa_total_cases'><\/a>\n## USA total cases","599a14fe":"<a id='india_state_wise_tree_map'><\/a>\n### India State wise Total Confirmed cases Tree Map","3a567544":"<a id='brc_recovered'><\/a>\n## Bar Chart Race - Recovered Cases\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","6435f8c2":"<a id='pie_chart_india'><\/a>\n# Pie Chart of Top 5 India States with Confirmed cases.","8d707e24":"<a id='toc'><\/a>\n## Content\n* [Import Required Libraries](#imports)\n* [Load Dataset](#load_dataset)\n* [Data Pre-Processing](#data_preprocessing)\n* [Data Analysis and Visualization](#data_analysis)\n    - [Global Data Analysis and Visualization](#global_data_analysis)\n        * [Global COVID 19 Cases](#global_cases)\n        * [Global Total Active, Recovered and Deaths Cases Tree Map](#global_cases_tree_map)\n        * [Global Total Active, Recovered and Deaths Cases over Time](#global_cases_over_time)\n    - [Country wise Data Analysis and Visualization](#country_data_analysis)\n        * [Country wise reported cases](#country_wise_reported_cases)\n        * [Country wise Tree Map](#countrywise_tree_map)\n        * [Bar chart of Top 10 Countries with confirmed, deaths, recovered and active cases.](#top_10_countries)\n        * [Waffle Chart of Top 10 Countries with confirmed, deaths, recovered and active cases.](#waffle_top_10_countries)\n        * [Bar Chart Race - Confirmed Cases](#brc_confirmed)\n        * [Bar Chart Race - Deaths](#brc_deaths)\n        * [Bar Chart Race - Recovered Cases](#brc_recovered)\n        * [Bar Chart Race - Active Cases](#brc_active)\n* [Country wise Analysis](#country_wise_analysis)\n    - [COVID 19 : USA](#usa_covid_19)\n        * [USA total cases](#usa_total_cases)\n        * [USA total cases Tree Map](#usa_total_cases_tree_map)\n        * [USA State wise reported cases](#usa_state_wise_reported_cases)\n        * [USA State wise Total Confirmed cases Tree Map](#usa_state_wise_tree_map)\n        * [Bar Chart of Top 10 US States with Confirmed, Death, Recovered and Active cases.](#top_10_usa)\n        * [Waffle Chart of Top 10 US States with Confirmed and Death cases.](#waffle_usa)\n        * [USA Map Visualization](#usa_map_visualization)\n    - [COVID 19 : India](#india_covid_19)\n        * [India total cases](#india_total_cases)\n        * [India total cases Tree Map](#india_total_cases_tree_map)\n        * [India State wise reported cases](#india_state_wise_reported_cases)\n        * [India State wise Total Confirmed cases Tree Map](#india_state_wise_tree_map)\n        * [Bar Chart of Top 10 India States with Confirmed, Death, Recovered and Active cases.](#top_10_india)\n        * [Waffle Chart of Top 10 India States with Confirmed and Death cases.](#waffle_india)\n        * [Pie Chart of Top 5 India States with Confirmed cases.](#pie_chart_india)\n        * [India Map Visualization](#india_map_visualization)\n    - [COVID 19 : Brazil](#brazil_covid_19)\n    - [COVID-19 : ITALY](#italy_covid_19)\n","de034af4":"<a id='top_10_india'><\/a>\n# Bar Chart of Top 10 India States with Confirmed, Death, Recovered and Active cases.","fae566b6":"# <font size=6 color='blue'> <center> NOVEL CORONA VIRUS (COVID19) EDA AND VISUALIZATION <\/center> <\/font>\n\n![](https:\/\/eyewire.news\/wp-content\/uploads\/sites\/2\/2020\/03\/banner.png)\n\n<font size=1><center> Source: https:\/\/eyewire.news\/wp-content\/uploads\/sites\/2\/2020\/03\/banner.png <\/center><\/font>","40f22473":"<a id='global_cases'><\/a>\n## Global Corona Virus Cases\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>\n\n----\nLet's have a look at statistics of total confirmed cases, number of people died, number of people recovered and total active cases worldwise. ","ffa8868b":"<a id='countrywise_deaths_vs_confirmed'><\/a>\n### Countrywise Deaths vs Confirmed cases","eb82b045":"### Rename column name for Province\/State and Country\/Region.","ff4b9462":"<a id='italy_covid_19'><\/a>\n## COVID-19 : ITALY\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>\n\n----","106a2f4a":"<a id='global_cases_tree_map'><\/a>\n### Global Total Active, Recovered and Deaths Cases Tree Map","770be0ba":"<a id='country_wise_reported_cases'><\/a>\n## Country wise reported cases\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","6aa63803":"<a id='usa_total_cases_tree_map'><\/a>\n## USA total cases Tree Map","912e6466":"### Changing country name","cb23ce0f":"## Please UPVOTE if you LIKE this NOTEBOOK\n## COMMENT BELOW if you have suggestions or doubts.","9a477fb9":"### Dropping unwanted columns","10f9cc49":"<a id='italy_total_cases_tree_map'><\/a>\n## Italy total cases Tree Map","d43005d5":"<a id='country_wise_analysis'><\/a>\n# Country wise Analysis\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>\n\n---","cc2fda28":"<a id='india_covid_19'><\/a>\n# COVID-19 : INDIA\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>\n\n----","c678d023":"> Coronavirus disease (COVID-19) is an infectious disease caused by a newly discovered coronavirus. Most people infected with the COVID-19 virus will experience mild to moderate respiratory illness and recover without requiring special treatment.  Older people, and those with underlying medical problems like cardiovascular disease, diabetes, chronic respiratory disease, and cancer are more likely to develop serious illness.\n> \n> Source -- [WHO](https:\/\/www.who.int\/health-topics\/coronavirus#tab=tab_1)","47c81de9":"<a id='waffle_india'><\/a>\n# Waffle Chart of Top 10 India States with Confirmed and Death cases.","98901cb5":"<a id='brazil_covid_19'><\/a>\n## COVID-19 : BRAZIL\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>\n\n----","790ddd8c":"<a id='waffle_usa'><\/a>\n# Waffle Chart of Top 10 US States with Confirmed and Death cases.\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","bf0dd800":"<a id='usa_map_visualization'><\/a>\n# USA Map Visualization\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","ef0e27b0":"<a id='data_preprocessing'><\/a>\n# Data Pre-processing\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","782ea286":"<a id='countrywise_tree_map'><\/a>\n### Country wise Tree Map","b4447460":"<a id='india_map_visualization'><\/a>\n## India Map Visualization","feb5ddb2":"<a id='global_cases_over_time'><\/a>\n### Global Total Active, Recovered and Deaths Cases over Time","1a5c8597":"<a id='brc_deaths'><\/a>\n## Bar Chart Race - Deaths\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","7274c766":"<a id='india_total_cases'><\/a>\n## India total cases","d4eceb90":"<a id='waffle_top_10_countries'><\/a>\n## Waffle Chart of Top 10 Countries with confirmed, deaths, recovered and active cases.\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","404aceed":"<a id='usa_covid_19'><\/a>\n# COVID-19 : USA\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","da833303":"<a id='bar_top_10_countries'><\/a>\n## Bar chart of Top 10 Countries with confirmed, deaths, recovered and active cases.\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","6874b54f":"<a id='top_10_usa'><\/a>\n# Bar Chart of Top 10 US States with Confirmed, Death, Recovered and Active cases.\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","a47f3fc5":"<a id='load_dataset'><\/a>\n# Load Dataset\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","2352a024":"<a id='india_total_cases_tree_map'><\/a>\n## India total cases Tree Map","798cf786":"<a id='data_analysis'><\/a>\n# Data Analysis and Visualization\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>\n----","ad505127":"<a id='usa_state_wise_tree_map'><\/a>\n### USA State wise Total Confirmed cases Tree Map","f73600f6":"### Setting date formate for date column","18c31e72":"<a id='country_wise_data_function'><\/a>\n# Define funtion to create country wise data","09a95b39":"<a id='brc_active'><\/a>\n## Bar Chart Race - Active Cases\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","2f42af30":"<a id='usa_state_wise_reported_cases'><\/a>\n## USA State wise reported cases","a25bf683":"I will update this notebook **continuously** with new **visualization** and updated **data**.\n\n### Feel free to provide me with feedbacks.\n### Please give me upvote, if you like my work.","e6e1e050":"<a id='imports'><\/a>\n# Import and Install required libraries.\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","4cbf81a9":"<a id='brc_confirmed'><\/a>\n## Bar Chart Race - Confirmed Cases\n<a href=\"#toc\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\">Go to TOC<\/a>","2337dafa":"<a id='india_state_wise_reported_cases'><\/a>\n## India State wise reported cases"}}