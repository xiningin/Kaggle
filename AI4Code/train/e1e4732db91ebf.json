{"cell_type":{"f5a97afd":"code","2b8b9772":"code","0b704186":"code","525664aa":"code","3f134189":"code","c5e45d40":"code","19dcb08c":"code","cb0dbfca":"code","ba7ed2b8":"code","357facc9":"code","a37b4874":"markdown","a77e6458":"markdown","f937ca1f":"markdown","44948a03":"markdown","c87c9f66":"markdown"},"source":{"f5a97afd":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas_profiling\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2b8b9772":"data=pd.read_csv('\/kaggle\/input\/imdbreview\/imdb_review.csv')\ndata","0b704186":"data.profile_report()","525664aa":"X=data['review']\ny=data['sentiment']","3f134189":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X, y, test_size=0.33, random_state=0)","c5e45d40":"from sklearn.pipeline import Pipeline\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.svm import LinearSVC\n\ntext_clf = Pipeline([('tfidf', TfidfVectorizer()),\n                     ('clf', LinearSVC(random_state=0)),\n])\ntext_clf.fit(X_train, y_train) ","19dcb08c":"y_test_pred=text_clf.predict(X_test)\n\nfrom sklearn import metrics\nprint(metrics.classification_report(y_test,y_test_pred))\n\ncm = metrics.confusion_matrix(y_test,y_test_pred)\nplt.figure(figsize=(9,9))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'Blues_r');\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Confusion Matrix - score:'+str(metrics.accuracy_score(y_test,y_test_pred))\nplt.title(all_sample_title, size = 15);\nplt.show()\n","cb0dbfca":"import nltk\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\nsid=SentimentIntensityAnalyzer()","ba7ed2b8":"y_pred=X.apply(lambda review: sid.polarity_scores(review))","357facc9":"y_pred = y_pred.apply(lambda d:d['compound']).apply(lambda compound: 1 if compound>0 else 0)\n\nfrom sklearn import metrics\n\nprint(metrics.classification_report(y, y_pred))\n\ncm = metrics.confusion_matrix(y, y_pred)\nplt.figure(figsize=(9,9))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'Blues_r');\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Confusion Matrix - score:'+str(metrics.accuracy_score(y, y_pred))\nplt.title(all_sample_title, size = 15);\nplt.show()","a37b4874":"## Supervised classification using LinearSVC","a77e6458":"## Sentiment Intensity Analyzer\n\nHow well does it work. Note that this is unsupervised, therefore it is expected to give a lower accuracy score. I wil run this on the whole data set. Not just the test.","f937ca1f":"## Data preparation","44948a03":"## Introduction\n\nI will perform a linearSVC classification and also an unsupervised sentiment analysis on this dataset.","c87c9f66":"## Importing data and first look"}}