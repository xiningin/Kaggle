{"cell_type":{"68e72c56":"code","0bc3db25":"code","6143f4ea":"code","e7d6473d":"code","0267071f":"code","c556246f":"code","f0553f20":"code","4de04656":"code","8d426481":"code","d47ff1e7":"code","7daced4d":"code","5638a571":"code","08e383fc":"code","dd73eac0":"code","53fea442":"code","f4f85a56":"code","3f69339e":"code","89dedef3":"code","6ca19ca1":"code","39288d01":"code","a43fca3f":"code","c627bc9b":"code","c19f851d":"code","99b29a88":"code","4995162e":"code","f4e58138":"code","8cf2d8d8":"code","8ec42db5":"code","44c4106e":"code","14d8d1e0":"code","b3a72c8b":"code","7d2af91b":"code","c7741557":"code","573d9d37":"code","3ab58ea9":"code","0a49b9c5":"code","656de845":"code","bb5f3b7c":"code","e461ec7a":"code","5e6856a5":"code","21d19519":"code","5dcae23f":"code","cdfd13b9":"code","55426d8a":"code","974185b5":"code","8b4ee05b":"code","6d095307":"code","3e79ba52":"code","a99af289":"markdown","c02bd5f8":"markdown","81e37a2d":"markdown","1deb638a":"markdown","1bc66bea":"markdown"},"source":{"68e72c56":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0bc3db25":"# load data from url\nurl = \"https:\/\/datafaculty.s3.us-east-2.amazonaws.com\/Indore\/song_football-class13.csv\"\n\ndf = pd.read_csv(url, encoding=\"latin1\")\ndf.head()","6143f4ea":"df.columns","e7d6473d":"# rename columns\ndf = df.rename(columns={'Player Id': 'pid', 'Tackles': 'tackles', 'Last_Name': 'lname', 'First_Name': 'fname'})\ndf.columns","0267071f":"df['name'] = df['fname'] + ' ' + df['lname']\n\ndf.drop(['fname', 'lname'], axis=1, inplace=True)","c556246f":"df.describe(include='all')","f0553f20":"df.loc[(df.interception <= 10) & (df.tackles <= 10) & (df.duels <= 10)]","4de04656":"sns.boxplot(x=df['tackles'])","8d426481":"sns.boxplot(x=df['duels'])","d47ff1e7":"# number of rows\nlen(df)","7daced4d":"# NaN check\ndf.isna().sum()","5638a571":"# null check\ndf.isnull().sum()","08e383fc":"# create the list of players\nplayers = df['name'].values\nplayers[:5]","dd73eac0":"numeric_cols = df.select_dtypes(include=np.number).columns.tolist()\nnumeric_cols","53fea442":"numeric_cols.remove('pid')\nnumeric_cols","f4f85a56":"feature_cols = ['tackles', 'duels', 'passes', 'interception']\nratio_cols = ['wontackles', 'wonduels', 'wonpasses',]","3f69339e":"numeric_data = df[numeric_cols]\nnumeric_data.sample(7)","89dedef3":"sns.set()\nplt.legend(ncol=2, loc='upper right');","6ca19ca1":"for col in feature_cols:\n    plt.hist(df[col], alpha=0.5)","39288d01":"for col in feature_cols:\n    sns.kdeplot(df[col], shade=True)","a43fca3f":"for col in ratio_cols:\n    sns.kdeplot(df[col], shade=True)","c627bc9b":"for col in ratio_cols:\n    plt.hist(df[col], alpha=0.5)","c19f851d":"sns.kdeplot(numeric_data[feature_cols])","99b29a88":"sns.kdeplot(numeric_data[ratio_cols])","4995162e":"with sns.axes_style('white'):\n    sns.jointplot('wontackles', 'wonduels', df, kind='kde')","f4e58138":"with sns.axes_style('white'):\n    sns.jointplot('wontackles', 'wonpasses', df, kind='kde')","8cf2d8d8":"g = sns.PairGrid(numeric_data, vars=feature_cols, palette='RdBu_r')\ng.map(plt.scatter, alpha=0.8)\ng.add_legend()","8ec42db5":"sns.scatterplot(x='tackles', y='wontackles', hue='pid', palette=\"Set2\", data=df)","44c4106e":"from sklearn.cluster import KMeans","14d8d1e0":"X = df[numeric_cols].values","b3a72c8b":"kmeans = KMeans(n_clusters=4)\nkmeans","7d2af91b":"kmeans.fit(X)","c7741557":"y_kmeans = kmeans.predict(X)\ny_kmeans","573d9d37":"plt.scatter(X[:, 0], X[:, 1], c=y_kmeans, s=50, cmap='viridis')\n\ncenters = kmeans.cluster_centers_\nplt.scatter(centers[:, 0], centers[:, 1], c='black', s=200, alpha=0.5)","3ab58ea9":"# cluster columns\ndef cluster_cols(df, l, n):\n    \n    X = df[l].values\n    kmeans = KMeans(n_clusters=n)\n\n    kmeans.fit(X)\n    \n    y_kmeans = kmeans.predict(X)\n    \n    plt.scatter(X[:, 0], X[:, 1], c=y_kmeans, s=50, cmap='viridis')\n\n    centers = kmeans.cluster_centers_\n    plt.scatter(centers[:, 0], centers[:, 1], c='black', s=200, alpha=0.5)\n    \n    return y_kmeans\n","0a49b9c5":"tackles = ['tackles', 'wontackles']\n\ncluster_cols(df, tackles, 6)","656de845":"df.pid.unique()[:5]","bb5f3b7c":"numeric_data.head()","e461ec7a":"numeric_data['cluster'] = cluster_cols(df, numeric_cols, 8)","5e6856a5":"numeric_data.head()","21d19519":"g = sns.PairGrid(numeric_data, vars=feature_cols, hue='cluster', palette='RdBu_r')\ng.map(plt.scatter, alpha=0.8)\ng.add_legend()","5dcae23f":"df['cluster'] = numeric_data['cluster']\ndf.head()","cdfd13b9":"sns.scatterplot(x='tackles', y='wontackles', hue='cluster', palette=\"Set2\", data=df)","55426d8a":"df['cluster'].value_counts()","974185b5":"df['name'].loc[df.cluster == 3].unique()","8b4ee05b":"df['name'].loc[df.cluster == 4].unique()","6d095307":"df.loc[df.cluster == 4]","3e79ba52":"df.loc[df.cluster == 7]","a99af289":"### Data description\n\n* pid *(Player Id) - id of the player\n* tackles - total number of tackles\n* wontackles - number of tackles won by the player \n* duels - total number of duels\n* wonduels - number of duels won by the player\n* passes - total number of passes\n* wonpasses - \n* interception - number of interceptions\n* Last_name\n* First_name\n\n### Indicators\n\n* Ratio of wontackles to tackles - ideal is 1\n* Ratio of wonduels to duels - ideal is 1\n* Ratio of wonpasses to passes - ideal is 1\n* More the number of interceptions better the player\n","c02bd5f8":"## Cluster","81e37a2d":"## Exploratory Data Analysis","1deb638a":"# Football Stats\n\n\n* Cluster football players based on the following features\n    - tackles +won\n    - duels + won\n    - passes + won\n    - interception\n    - \n    \n* Find outliers\n    - goalkeepers!\n    - ","1bc66bea":"## Identify Goalkeepers!"}}