{"cell_type":{"ba6f36cc":"code","a8f93718":"code","31e23696":"code","98183ba1":"code","56eb4875":"code","5549ff91":"code","d268dc79":"code","e5251840":"code","ede076b9":"code","eb8f5c69":"code","915a0cc5":"code","c7b255e6":"code","c8d65240":"code","eb633c90":"code","c432b92e":"code","d7f261a6":"code","ddad4d6d":"code","edfb4499":"code","4a7b4269":"code","a837ad68":"code","f59ef4cc":"code","5bd74f95":"code","1ac5475f":"code","204310a4":"code","d6289e1e":"code","1b231c56":"code","60781153":"markdown","0f0b0a70":"markdown","1b7494f4":"markdown","248441e3":"markdown","5d160496":"markdown","a2e73ed3":"markdown","8b86586c":"markdown","752eb5c2":"markdown","ce10cb5e":"markdown","97342a17":"markdown","ac30883f":"markdown","7b6323c3":"markdown","6326730c":"markdown","3851699e":"markdown","2c0cd9c1":"markdown","fd805078":"markdown","5d7e8792":"markdown","197c31bf":"markdown","4daabcc3":"markdown","8c5f769a":"markdown","f20ade6c":"markdown","fb052923":"markdown","53af0781":"markdown","f3252911":"markdown","95f48b1e":"markdown","23629373":"markdown","1e7a5dc7":"markdown","f56666cd":"markdown","134c0b51":"markdown","9a39d70c":"markdown"},"source":{"ba6f36cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport collections\nimport matplotlib\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a8f93718":"df =  pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')\n","31e23696":"df.head()","98183ba1":"df.info()","56eb4875":"df.isnull().sum()","5549ff91":"plt.figure(figsize=(15,5))\nsns.heatmap(df.isnull(),yticklabels=False,cmap='viridis')","d268dc79":"df.drop(['date_added','director','cast'],axis = 1,inplace = True)","e5251840":"df['country'].value_counts()","ede076b9":"df['country'].replace(np.nan,'United States',inplace = True)","eb8f5c69":"df.isnull().sum()","915a0cc5":"df['rating'].value_counts()","c7b255e6":"df['rating'].replace(np.nan,'TV-MA',inplace = True)","c8d65240":"df.isnull().sum()","eb633c90":"df.head()","c432b92e":"sns.set()\nplt.figure(figsize=(50,20))\nsns.countplot(df['release_year'],order = df['release_year'].value_counts().index[0:50])\nplt.xticks(rotation=45,fontsize = 15)\nplt.yticks(fontsize = 20)\nplt.show()","d7f261a6":"sns.set()\nplt.figure(figsize=(40,20))\nsns.countplot(df['country'],order = df['country'].value_counts().index[0:20])\nplt.xticks(rotation=45,fontsize = 15)\nplt.yticks(fontsize = 20)\nplt.show()","ddad4d6d":"sns.set()\nplt.figure(figsize=(40,20))\nsns.countplot(df['listed_in'],order = df['listed_in'].value_counts().index[0:20])\nplt.xticks(rotation=45,fontsize = 15)\nplt.yticks(fontsize = 20)\nplt.show()","edfb4499":"sns.countplot(df['type'])\n","4a7b4269":"df['duration']","a837ad68":"data = df[['duration']].apply(lambda x:x.str.contains('Season|Seasons',regex =True)).any(axis =1)\ndf2 = df[~data]\ndf2.index = np.arange(len(df2))\nlist1 =[]\nfor i in df2.duration:\n    if i[2]=='m':\n        list1.append(int(i[:2]))\n    else:\n        list1.append(int(i[:3]))\ndf2['duration_time'] = list1  ","f59ef4cc":"plt.figure(figsize =(10,5))\nsns.distplot(df2.duration_time,kde =False)\nplt.title('Duration Distribution')","5bd74f95":"top_genres=df[\"listed_in\"].value_counts()[0:15]\ntop_genres.head()","1ac5475f":"plt.figure(figsize=(12,9))\nsns.countplot(x=\"rating\",data=df,order= df['rating'].value_counts().index[0:14])","204310a4":"sns.set()\nplt.figure(figsize=(25,9))\nsns.countplot(x=\"rating\",data= df,hue= \"type\",order = df['rating'].value_counts().index[0:15])\nplt.xticks(rotation=45)\nplt.show()","d6289e1e":"from wordcloud import WordCloud","1b231c56":"\nplt.figure(figsize=(40,20))\nwordcloud = WordCloud(\n                          background_color='Black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.description))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('cast.png')\nplt.show()","60781153":"so Finally we got zero nan values,after wroking on it\n","0f0b0a70":"now I am going to drop the cast ,date added column because these don't contribute in my EDA,also droping the director column since this have a large no. of NaN values,and there is no way to deal with them except the hardcoding way by searching it on google i guess","1b7494f4":"Country has some signifiance in my EDA,so let's look what we can do","248441e3":"seems like the rating has also have a 10 NaN values,so i am using the same way which i have used for the country column","5d160496":"Checking out the count of NaN values in each column","a2e73ed3":"Now the data looks clean ,let's start visualizing the data","8b86586c":"Movies are more in number,as a student i also loves to watch movies,because they are just of 3 hours. so here we talks out duration so why not check the duration column of the datasets,\n\n> *the more you play with data,the more insight you get,so ofcourse you can generate the more things.*","752eb5c2":"We can see there is null values present on above data,so we have to deal with these NaN values","ce10cb5e":"few more things,lets look on them also","97342a17":"**Here goes TV-Rating Vs. the type of show**","ac30883f":"**looking out on data for analysis**","7b6323c3":"since almost every Netflix shows is being realsed in USA, so i thing it's a best way to replace NaN values by USA","6326730c":"let's check whether what they prefer TV_SHOWS OR MOVIES.","3851699e":"Netflix made what users loves the most,so they target a thing which users like, for eg. Documentaries,Satnd-up comedies,Dramas,which is clearly visible from the above fig.","2c0cd9c1":"The director column has a largest sum of NaN values,and least for rating Column,let's visulaize it through Heat Map","fd805078":"let's have a look on wordcloud aslo.","5d7e8792":"# visualization\n","197c31bf":"**Reading the CSV FILE**","4daabcc3":"checking out the count for the country","8c5f769a":"**lets look out on top genres also.**","f20ade6c":"checking whether we have Deal with the Null values or not","fb052923":"now let's have a look of the country netflix targets the most","53af0781":"Let's check the genres tag for movies","f3252911":"let's start with checking which year has the max no. of Release","95f48b1e":"so clearly visible netflix has realses it most of the shows in USA follwed by INDIA & UK,can i say that these are the countries producing the 60-70% revenue for netflix,the answer will be BIG YES.","23629373":"# starting the EDA\n","1e7a5dc7":"# Dealing with NaN values","f56666cd":"**FINALLY I AM CONCLUDING MY NOTEBOOK,I HAVE LEARNT MANY THINGS FROM OTHER NOTEBOOKS ALSO,DO UPVOTE IF YOU GET SOME INSIGHTS FROM MY NOTEBOOK.**","134c0b51":"as you can see max movies and shows has around 90 min. duration,so have short movies more fun.","9a39d70c":"clearly we can see that the 2018 year has mos no. of Releases,follwed by 2017,2019."}}