{"cell_type":{"c5fa35f8":"code","80376cdf":"code","2dcfcea5":"code","c9b302d6":"code","91ae643f":"code","81e9dde7":"code","d6e881ca":"code","fae786d1":"code","b0bfc4e5":"code","223eb924":"code","0a1f5240":"code","5031f853":"code","fe263a49":"code","8c715344":"code","7ae45041":"code","ac5f5fa0":"code","02388d50":"code","999bcb34":"code","6818487a":"code","10403c8d":"code","d7f29d89":"markdown","37a50572":"markdown","21390d0a":"markdown","7918db17":"markdown","3979d03c":"markdown","3019b850":"markdown","c84fdaa7":"markdown","87dd5cbd":"markdown"},"source":{"c5fa35f8":"!pip install tinytag","80376cdf":"!pip install mutagen","2dcfcea5":"import numpy as np\nimport pandas as pd\n\nimport mutagen\nfrom mutagen.mp3 import MP3\nfrom tinytag import TinyTag\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","c9b302d6":"DATA_PATH = '..\/input\/birdsong-recognition\/'\nAUDIO_PATH = \"..\/input\/birdsong-recognition\/train_audio\"\n\nDATA_PATH_EXT_A_M = '..\/input\/xeno-canto-bird-recordings-extended-a-m\/'\nAUDIO_PATH_EXT_A_M = \"..\/input\/xeno-canto-bird-recordings-extended-a-m\/A-M\"\n\nDATA_PATH_EXT_N_Z = '..\/input\/xeno-canto-bird-recordings-extended-n-z\/'\nAUDIO_PATH_EXT_N_Z = '..\/input\/xeno-canto-bird-recordings-extended-n-z\/N-Z'","91ae643f":"df_train = pd.read_csv(DATA_PATH + 'train.csv')\ndf_train_ext_a_m = pd.read_csv(DATA_PATH_EXT_A_M + 'train_extended.csv')\ndf_train_ext_n_z = pd.read_csv(DATA_PATH_EXT_N_Z + 'train_extended.csv')","81e9dde7":"#Original dataset\nfor row in df_train.columns:\n    print(row)","d6e881ca":"#New dataset from A to M\nfor row in df_train_ext_a_m.columns:\n    print(row)","fae786d1":"#New dataset from N to Z\nfor row in df_train_ext_n_z.columns:\n    print(row)","b0bfc4e5":"a = df_train.columns\nb = df_train_ext_a_m.columns\nc = df_train_ext_n_z.columns","223eb924":"set(a).difference(b)","0a1f5240":"#Just to make sure that there is no difference between A-M and N-Z parts\nset(b).difference(c)","5031f853":"#Common info\nmutagen.File(\"..\/input\/xeno-canto-bird-recordings-extended-a-m\/A-M\/aldfly\/XC133197.mp3\")","fe263a49":"#Only what we need\naudio = MP3(\"..\/input\/xeno-canto-bird-recordings-extended-a-m\/A-M\/aldfly\/XC133197.mp3\")\nprint(audio.info.bitrate)\nprint(audio.info.length)\nprint(audio.info.channels)","8c715344":"tag = TinyTag.get(\"..\/input\/xeno-canto-bird-recordings-extended-a-m\/A-M\/aldfly\/XC133197.mp3\", image=True)","7ae45041":"print('file comment', tag.comment)\nprint('samples per second', tag.samplerate)\nprint('title of the song', tag.title)","ac5f5fa0":"df_train['volume'].value_counts()","02388d50":"df_train['number_of_notes'].value_counts()","999bcb34":"df_train['pitch'].value_counts()","6818487a":"df_train['rating'].value_counts()","10403c8d":"df_train['speed'].value_counts()","d7f29d89":"### Rest columns ###\n\nThe rest columns are: number_of_notes, pitch, rating, speed, volume. Let's check what values they have.","37a50572":"\nThanks to @rohanrao, because now we have additional datasets for training:\n\nhttps:\/\/www.kaggle.com\/rohanrao\/xeno-canto-bird-recordings-extended-a-m <br>\nhttps:\/\/www.kaggle.com\/rohanrao\/xeno-canto-bird-recordings-extended-n-z\n\nBut there are 14 columns missing, so we need to get somehow the data to fill them.<br> \n\nLet's check how we can do it. Hope it will be useful.","21390d0a":"### TinyTag ###\n\nTinyTag alows to extract data for columns: background, description, primary_label, sampling_rate, secondary_labels, title. Most of the data stored at tag.comment, so it is necessary to work with strings a little bit. By the way there are more useful tags for extraction, which you can find in docs.","7918db17":"So, as we can see 14 columns are missing.","3979d03c":"I found two nice libraries which can extract metadata from mp3:\n\n### MUTAGEN ###\n\nhttps:\/\/pypi.org\/project\/mutagen\/\n\n### TINY TAG ###\n\nhttps:\/\/pypi.org\/project\/tinytag\/\n\nAnd in this notebook I used both of them.","3019b850":"### Mutagen ###\nWith Mutagen we can get data for columns: bitrate_of_mp3, length, channels. Let's do it for one file.","c84fdaa7":"Let's compare new datasets with old one","87dd5cbd":"All of these remaining columns are secondary of importance. I believe that they can simply be filled with standard methods for filling data gaps. <br>\n\n<strong>So here are methods, which you can use for metadata extraction straight from the file to get more training data or to use in some other way.<\/strong>"}}