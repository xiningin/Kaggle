{"cell_type":{"129b1553":"code","b8696331":"code","e3eb0dce":"code","6cb565a6":"code","35d1a5da":"code","f0608e13":"code","72495e95":"code","d9647bda":"code","6f745691":"code","fea81ee0":"code","3446d226":"code","2e050f76":"code","38221da1":"code","8b14ec2d":"markdown","83618621":"markdown","cbcc4a1e":"markdown","e5170497":"markdown","e8bb0e8b":"markdown","e4e8a290":"markdown","b9dafeb5":"markdown","e5fb2e10":"markdown","d596631a":"markdown","d5937d06":"markdown","cfd218ac":"markdown"},"source":{"129b1553":"!pip install natsort\n\nimport os\nimport numpy as np\nimport SimpleITK as sitk\nimport matplotlib.pyplot as plt\nfrom natsort import natsorted","b8696331":"path_train = os.path.join('..\/input\/osic-pulmonary-fibrosis-progression', 'train')\nptns_train = [os.path.join(path_train, _) for _ in os.listdir(path_train)]","e3eb0dce":"ptns_train[:10]","6cb565a6":"tot_len = []\n\nfor ptn in ptns_train:\n    dcmlist = os.listdir(ptn)\n    tot_len.append(len(dcmlist))","35d1a5da":"plt.hist(tot_len, bins=20)\nplt.show()","f0608e13":"slice_thickness = []\n\nfor ptn in ptns_train:\n    exdcm = [os.path.join(ptn, _) for _ in os.listdir(ptn)][0]\n    spacing = sitk.ReadImage(exdcm).GetSpacing()\n    slice_thickness.append(spacing[2])\nplt.hist(slice_thickness, bins=20)\nplt.show()","72495e95":"slice_interval = []\nspacing_list = []\n\nimport pydicom\n\nfor ptn in ptns_train:\n    try:\n        exdcm1 = natsorted([os.path.join(ptn, _) for _ in os.listdir(ptn)])[0]\n        exdcm2 = natsorted([os.path.join(ptn, _) for _ in os.listdir(ptn)])[1]\n        location1 = sitk.ReadImage(exdcm1).GetMetaData('0020|0032').split('\\\\')[2]\n        location2 = sitk.ReadImage(exdcm2).GetMetaData('0020|0032').split('\\\\')[2]\n        spacing = sitk.ReadImage(exdcm1).GetSpacing()[0]\n        spacing_list.append(spacing)\n        interval = np.abs(float(location2) - float(location1))\n        slice_interval.append(interval)\n    except:\n        print(ptn)\n    slice_thickness.append(interval)\n\nprint(len(slice_interval))","d9647bda":"plt.title(\"Physical size of each pixel\")\nplt.hist(spacing_list, bins=20)\nplt.show()","6f745691":"plt.title(\"Distance between slices\")\nplt.hist(slice_interval, bins=20)\nplt.show()","fea81ee0":"ptn1_path = os.path.join(path_train, 'ID00078637202199415319443')\nptn1_dcm = [os.path.join(path_train, 'ID00078637202199415319443', _) for _ in natsorted(os.listdir(ptn1_path))][0]\nnpy1 = sitk.GetArrayFromImage(sitk.ReadImage(ptn1_dcm)).squeeze()\nplt.title('Patient 1')\nplt.imshow(npy1, 'gray')\nplt.show()\n\nptn2_path = os.path.join(path_train, 'ID00128637202219474716089')\nptn2_dcm = [os.path.join(path_train, 'ID00128637202219474716089', _) for _ in natsorted(os.listdir(ptn2_path))][0]\nnpy2 = sitk.GetArrayFromImage(sitk.ReadImage(ptn2_dcm)).squeeze()\nplt.title(\"Patient 2\")\nplt.imshow(npy2, 'gray')\nplt.show()","3446d226":"print(npy1.min(), npy2.min())","2e050f76":"plt.title(\"Histogram of Patient 1\")\nplt.hist(npy1.flatten(), bins=20)\nplt.show()\n\nplt.title(\"Histogram of Patient 2\")\nplt.hist(npy2.flatten(), bins=20)\nplt.show()","38221da1":"less_than_3000 = []\nbigger_than_3000 = []\n\nfor ptn in ptns_train:\n    exdcm = natsorted([os.path.join(ptn, _) for _ in os.listdir(ptn)])[0]\n    if sitk.GetArrayFromImage(sitk.ReadImage(exdcm)).min()<-3000:\n        less_than_3000.append(ptn)\n    else:\n        bigger_than_3000.append(ptn)\n    \nprint(\"Number of DICOMS that have HU less than -3000:\", len(less_than_3000))\nprint(\"Else:\", len(bigger_than_3000))","8b14ec2d":"In conclusion, DICOM is not that easy as png, jpeg image formats. There are lots to consider when preprocessing.\n\nThis is just start of DICOM handling!\n\nI hope this notebook would be helpful for begineers who start handling DICOM.","83618621":"Well, pixel size is very different from patient to patient, as well as distance between slices.\n\nWhy distance has discrepancy though slice thickness is 1mm?\n\nThis can happen when protocols of hospital is \"Reconstruct CT image with 1mm. Then save 1 slice of consecutive 10 slices\" for various reasons.\n\nFor example, slict distance with 20mm is that only one slice is selected of consecutive 20 slices.\n\nHappiness does not go so far...","cbcc4a1e":"# Slice Thickness\n\nWhen you handle DICOM, especially CT or MRI data, data are stored in bulk of one shooting.\n\nTherefore, it can be considered as 3-dimensional data.\n\nHowever, computers can only handle discrete data, thus there is a concept called \"Slice Thickness\" in CT images.\n\nUsually, CT machine takes image of the patient by rotating spirally. Therefore, original CT data can be re-constructed with any slice thickness bigger than 0.6mm (Usually. This can depend on CT machine).\n\nTo see how thick train images are, we can check slice thickness metadata. \n\nThis can be done with .GetSpacing() method or .GetMetaData(\"0018|0050\") method on SimpleITK Image class.","e5170497":"When you handle medical images, most images have format called DICOM(.dcm).\n\nDICOM is global standard of medical imaging and has some unique properties compared to usual imaging formats, such as .png, .jpeg.\n\nIn this notebook, we will see what factors should we concern, and how to handle them.\n\nFirst, let's load some packages.","e8bb0e8b":"Oops! There is high discrepancy between patients!!!","e4e8a290":"In the above images, there is a significant difference - Patient 1 is surrounded by a circle, yet Patient 2 is not.\n\nWhy is this important?\n\nWhen CT gantry rotates, it has round shape and gets image with circle shape.\n\nHowever, what we really see is square image, therefore what we really see is not exactly what CT machine takes.\n\nSome CT manufacturers consider area outside of the gantry as uncredible area thus masking it with values less than -1024(Hounsfield unit of air), like -3072.\n\nOther CT manufacturers consider area outside of the gantry as noise area and just fills that area with air Hounsfield unit.\n\nTherefore, if we see the min value of npy1, npy2 and draws histogram,","b9dafeb5":"As we count CT images that has circle area, there seems to be 44 cases for this case","e5fb2e10":"I know pydicom is more famous than SimpleITK, yet I prefer SimpleITK.\n\nYou can use whatever package you want.\n\nNatsort is natural sort package in python.","d596631a":"# Number of Slices\n\nFirst, let's see how much slices each patient have. This can be counted by reading number of files in one folder (=patient).","d5937d06":"As you can see, the circled image (Patient 1) has three peaks on histogram - the left peak is outside of circle, middle peak is air area, right peak is body area\n\nHowever, the non-circled image (Patient 2) has two peaks on histogram - the left peak is air area, right peak is body area.","cfd218ac":"Every patient has slice thickness with 1mm! How happy we are!!\n\nHowever, for the cross-check, let's see how far between slices are.\n\n# Slice Distance, Pixel Spacing\n\nBy subtracting absolute location of each DICOM files, we can acquire distance between slices.\n\nThis can be done with .GetMetaData(\"0020|0032\") method on SimpleITK Image class.\n\nAnd also, we can know physical length of each pixel by .GetSpacing() method."}}