{"cell_type":{"c57dc67c":"code","50787e0d":"code","e8b32bc3":"code","8a7753b9":"code","d7301a81":"code","e7b5afc6":"code","31a02869":"code","24b2b724":"code","1e751923":"code","f1bcebef":"code","e62e0591":"code","a6dd3004":"code","435e6e64":"code","fc08824b":"code","c408bcba":"code","fec31ff6":"code","7362f7b5":"code","6cbdaa92":"code","62919395":"code","998498ad":"code","bf8e8545":"code","6f521b34":"code","0950f8a1":"code","c49d7cec":"code","09c6886a":"code","9664b894":"code","c42413f9":"code","50e874ff":"code","c390718b":"code","d78fcc75":"code","a638eebf":"code","9f1fd7c0":"code","720f8dbf":"code","e10e018d":"code","b4fef86b":"code","f3ab720d":"code","6d6528c0":"code","7edd1534":"code","4e36a26c":"code","ab8c3bcb":"code","100bd333":"code","e8e9dddd":"code","534b59e7":"code","5c494bd2":"code","14b53df1":"code","bd39e578":"code","e9fea03f":"code","8c0989cc":"code","240302d0":"code","8002d749":"code","1817f05a":"code","7ba94f59":"code","e8cbf72e":"code","0d114081":"code","c3a12a99":"code","88793898":"code","c977645b":"code","a7585dd8":"code","30ab3e55":"code","34d91707":"code","57ef2577":"code","d3c9ab30":"code","f33ad7e3":"code","c89349dc":"code","2b068c60":"code","3e2f7405":"code","fae9aae6":"code","3199ce51":"code","fa3c59a4":"code","f05974c0":"code","e683d46a":"code","cb03561b":"code","1474c890":"code","7fc288f3":"code","19f0a680":"code","46fdfa4b":"code","29c83ada":"code","e2228200":"code","381bb9ac":"code","7be9df2f":"code","0166b468":"code","0e54553a":"code","62e59d46":"code","9841ebcb":"code","cc9b01f1":"code","dedd2913":"code","8519bd83":"code","0a861721":"code","3cdd5d67":"code","6e87fed2":"code","eae1075e":"code","05761d7a":"code","865ca721":"code","dcff860f":"code","6d286145":"code","4e0e0a6a":"code","09effc2c":"code","d13b7291":"code","bb875cc6":"code","267ac252":"code","7574d61a":"code","bf983178":"code","7408fe4c":"code","9e06264e":"code","6ac99c5f":"code","002e3196":"code","ef2e95c7":"code","2e6ba827":"code","45aa6c47":"code","f8601f75":"code","3bc993ce":"code","a45eaefd":"code","0efc4516":"code","9ad21949":"code","7e9bd689":"code","5c3f6cb8":"code","074c9fdf":"code","852b356e":"code","fee59e04":"code","37b3b0d0":"code","42242192":"code","de228471":"code","3c0f8276":"code","45297742":"code","1771804d":"code","5e41b688":"code","7c078b0c":"code","d6b80a72":"code","73e24db0":"code","62bb80a4":"code","e93a39b4":"code","6782d1e9":"code","480407ad":"code","e68140ac":"code","1eaf6c87":"code","68ff3a03":"code","e17328e5":"code","fbb12629":"code","e4d6d450":"code","b27da1df":"code","4efc9273":"code","cb23a2c7":"code","65d4768e":"code","1ca8ab8a":"code","2f48c8a3":"code","89a5489a":"code","7313fb1f":"code","37474159":"code","89b0c199":"code","2bab4774":"code","99519b64":"code","133d1c19":"code","dd754f34":"code","0e7bd368":"code","a255b95a":"code","a6fa3487":"code","ba44443a":"code","0cd3de5a":"code","919826c2":"code","a2cff9cc":"code","e1206c2f":"code","8e69b4b7":"code","284b92ae":"code","ec7dffc2":"code","6068dd3b":"code","4e4ca7fe":"code","14e83961":"code","7130c696":"code","c7a5c827":"code","4612bfc8":"code","febd42f5":"code","6549fb8f":"code","19e3d6bd":"code","7d152039":"code","4d0baa0b":"code","ae3c70bf":"code","d44550d0":"code","d4d17bd1":"code","e56016d8":"code","be088b46":"code","57570af3":"code","662943c1":"code","72f17975":"code","707fe5a0":"code","972d388a":"code","84d726df":"code","1d15dd53":"code","5e7da0b4":"code","d176fa38":"code","5ace1b57":"code","cce1ee78":"code","43a445df":"code","b6cfacd9":"code","fd2086d2":"code","4a902cf6":"code","2c1edf29":"code","062e57d9":"code","77858be2":"code","3ef3c960":"code","4baa4ed0":"code","544d89e9":"code","5f82af76":"code","3f4763bc":"code","fdeedcc4":"code","66c9a066":"code","013ed5ab":"code","3aece632":"code","80fbf803":"code","4f0ce6fb":"code","a4681234":"code","9d8ba918":"code","df5ed9e1":"code","4e39ac70":"code","afd1403b":"code","0f56f8ff":"code","465d3c92":"code","8d603f1d":"code","87796aaa":"code","dd075bf4":"code","b40f24d8":"code","606f44d4":"code","85e70deb":"code","f833c786":"code","8345acaf":"code","6ac9f7ad":"code","923ff7bc":"code","20a2fed6":"code","3ff4aee4":"code","7900cef9":"code","40fab0a5":"code","74d4de27":"code","79fac10a":"code","04f51a63":"code","c056ff55":"code","e33c5ab6":"code","ef8ecd6d":"code","9a6d0fac":"code","4c083685":"code","82d1c842":"code","8f35af91":"code","60ea4266":"code","a3bdf58a":"code","d0cb776b":"markdown","da5a3920":"markdown","cae6f03b":"markdown","61f8791c":"markdown","9e31759a":"markdown","9853ecac":"markdown","05a0a41b":"markdown","8730d0e5":"markdown","879875cc":"markdown","3ef3e91c":"markdown","2ff6bc3a":"markdown","f55a9d11":"markdown","313d25cd":"markdown","a2730ece":"markdown","ec71cb02":"markdown","64b393a6":"markdown","6a1a97c3":"markdown","9c52d371":"markdown","93306af8":"markdown","dda47660":"markdown","0fb590cf":"markdown","ade9b04f":"markdown","1a6e298b":"markdown","8323d122":"markdown","cd9e1664":"markdown","cd6b7cd1":"markdown","a9800362":"markdown","6eb84c94":"markdown","927715d3":"markdown","ae2366bb":"markdown","61703c93":"markdown","07756f1e":"markdown","f75bfe02":"markdown","7bb66229":"markdown","5d0f1e15":"markdown","232952d8":"markdown","e0093bd9":"markdown","12ff4622":"markdown","633a817c":"markdown","88fbef73":"markdown","b0becae1":"markdown","09c8a26c":"markdown","11279594":"markdown","595d2846":"markdown","d1e1fb1b":"markdown","62c4a15b":"markdown","dcc07a2a":"markdown","62b83ba8":"markdown","24ddb016":"markdown","f10690ef":"markdown","b5c736e8":"markdown","2b5a5a83":"markdown","5f5b1373":"markdown","72785925":"markdown","f9d81601":"markdown","21cc638c":"markdown","04bdd455":"markdown","8bfeada4":"markdown","25f9d9a2":"markdown","e1c3b7ea":"markdown","7bd15996":"markdown","b9b92fac":"markdown","f9d9ed2d":"markdown","a9de521a":"markdown","409a036e":"markdown","27bdfaad":"markdown","6a48e94e":"markdown","bb3effb4":"markdown","43586508":"markdown","2180a700":"markdown","f595e12f":"markdown","4e987ca6":"markdown","b8cb65e2":"markdown","5ddd7f2d":"markdown","6d482d83":"markdown","90c4c35a":"markdown","a5e9614c":"markdown","71574229":"markdown","297c529f":"markdown","d4d5e2a1":"markdown","9926bc7a":"markdown","9d4844cd":"markdown","fd056618":"markdown","df89e8f2":"markdown","087274b9":"markdown","fa868ffb":"markdown","a7130859":"markdown","5b0c49d8":"markdown","dc4c9e95":"markdown","79c20482":"markdown","c07110d9":"markdown","6e1a9945":"markdown","70e993c0":"markdown","a928d7f8":"markdown","d005f15f":"markdown","d70f4b6d":"markdown","c3b6c076":"markdown","03b6a7f3":"markdown","74b83379":"markdown","4594aa11":"markdown","f9bda2fd":"markdown","54b6924f":"markdown","4af6497c":"markdown","5248f853":"markdown","6ddddcfa":"markdown","116e7ab0":"markdown","9ee2bbc0":"markdown","cb128cad":"markdown","c355eec5":"markdown","b39e9d58":"markdown","cc335f4d":"markdown","34619cfe":"markdown","7c355964":"markdown","f254602c":"markdown","4dbbfd86":"markdown","f23fc927":"markdown","fcc9f38e":"markdown","0468a26a":"markdown","e55906e6":"markdown","11a7cd39":"markdown","d1f85805":"markdown","05a80a25":"markdown","1877aac0":"markdown","e54ba641":"markdown","e7875353":"markdown","13537317":"markdown","c1470b2a":"markdown","042be4cf":"markdown"},"source":{"c57dc67c":"import matplotlib \nimport seaborn as sns\nimport statsmodels as sm\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport geopy as gpy\nimport geopandas as gpd\nfrom warnings import filterwarnings\nimport os","50787e0d":"filterwarnings('ignore')\nplt.style.use('fivethirtyeight')","e8b32bc3":"for root, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(root, filename))","8a7753b9":"!pip install xlrd\n!pip install openpyxl","d7301a81":"file1 = '\/kaggle\/input\/school-closures\/covid_impact_education.csv'\nfile2 = '\/kaggle\/input\/school-closures\/COVID_19_Education data on school closures - Schools data.csv'\nfile3 = '\/kaggle\/input\/school-closures\/COVID-19 US state policy database 8_3_2021.xlsx'\nfile4 = '\/kaggle\/input\/school-closures\/duration_school_closures.csv'\nfile5 = '\/kaggle\/input\/school-closures\/school-closure-evolution.xlsx'","e7b5afc6":"covidImpEduc = pd.read_csv(file1)# covid-19 impact education data\neducSchClos = pd.read_csv(file2)# COVID_19_Education data on school closures - Schools data \nusPolicy = pd.read_excel(file3) # COVID-19 US state policy database 8_3_2021\ndurationSchcl = pd.read_csv(file4) # duration_school_closures\nschCloEvo = pd.read_excel(file5) # school-closure-evolution","31a02869":"covidImpEduc.head(2)","24b2b724":"educSchClos.head(2)","1e751923":"usPolicy.head(2)","f1bcebef":"durationSchcl.head(2)","e62e0591":"schCloEvo.head(2)","a6dd3004":"#missing values\neducSchClos.isnull().sum()[educSchClos.isnull().sum()>0]","435e6e64":"educSchClos.dropna(inplace=True)","fc08824b":"educSchClos.drop([educSchClos.columns[5], educSchClos.columns[6]], axis=1, inplace=True)","c408bcba":"print(f\"The number of country in this data are: {covidImpEduc['Country'].nunique()}.\")","fec31ff6":"print(f\"Number of status is: {covidImpEduc['Status'].nunique()}  are: {covidImpEduc['Status'].unique()}\")","7362f7b5":"plt.figure(figsize=(15,5))\ngc = sns.countplot(x='Status', data=covidImpEduc)\nplt.title(f\"Covid-19 impact on education from 2020-02-17 to 2021-07-31.\", fontsize=18)\nplt.show()","6cbdaa92":"#initialize\ncountry_status = {}\nname_ctry = covidImpEduc.ISO.unique()# name of the countries","62919395":"for u in covidImpEduc.Status.unique().tolist():# for each status\n    row = covidImpEduc[covidImpEduc.Status == u]# we select data.\n    #we want to get table such that columns is status and index is the country \n    country_status[u] = {c:row[row.ISO == c].ISO.value_counts().values[0] if c in row.ISO.unique()\n                        else 0 for c in name_ctry}","998498ad":"#Dataframe our data\ncountry_status = pd.DataFrame(country_status)","bf8e8545":"#This table shows how many each status appear in each country between 2020-02-17 to 2021-07-31.\n#For example, YEMEN have fully open school 29 times, partially open school 6 times, close school due to\n#Covid-19 14 times and Academic break 54 times with permutation.\ncountry_status.tail(2)","6f521b34":"#load world earth data\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))","0950f8a1":"#merge it with country_status\nstatusMap = world.merge(country_status, right_on=country_status.index, left_on='iso_a3', suffixes=('', ''))","c49d7cec":"colors = ['Greens', 'Blues', 'OrRd', 'cividis_r']\nfig = plt.figure(figsize=(15,20), dpi=150)\nfor i, u in enumerate(covidImpEduc.Status.unique().tolist()):\n    plt.style.use('ggplot')\n    ax = fig.add_subplot(4, 1, i+1)\n    plt.suptitle(\"Global school status between 2020-02-17 to 2021-07-31.\", fontsize=20)\n    statusMap.plot(cmap=colors[i], column=u, legend=True, scheme='quantiles', k=5, ax=ax)\n    ax.set_title(f'School status: {u}', fontsize=15)\nplt.show()","09c6886a":"educSchClos.replace(['Partially Open', 'fully open'], ['Fully open', 'Partially open'], inplace=True)","9664b894":"#some data are recorded in this format 16,500,100 but pandas does not recognize it.\n#we create function convertString2Int to fix it.\ndef convertString2Int(row):\n    if row == '--' or row == '..':\n        return 0\n    else:\n        return int(\"\".join(u for u in str(row).split(',')))","c42413f9":"cols = educSchClos.columns# columns\n#apply function \neducSchClos[cols[2]] = educSchClos[cols[2]].apply(convertString2Int)\neducSchClos[cols[3]] = educSchClos[cols[3]].apply(convertString2Int)","50e874ff":"#define \nfully_open = educSchClos[educSchClos['Status of school closures']=='Fully open']\nclosed = educSchClos[educSchClos['Status of school closures']=='Closed due to COVID-19']\npartial_open = educSchClos[educSchClos['Status of school closures']=='Partially open']\naca_break = educSchClos[educSchClos['Status of school closures'] =='Academic break']","c390718b":"#remove duplicated\nfully_open.drop_duplicates(inplace=True,subset=educSchClos.columns)\nclosed.drop_duplicates(inplace=True,subset=educSchClos.columns)\npartial_open.drop_duplicates(inplace=True,subset=educSchClos.columns)\naca_break.drop_duplicates(inplace=True,subset=educSchClos.columns)","d78fcc75":"map_fullOpen = world.merge(fully_open, right_on='ISO3 country',  left_on='iso_a3', suffixes=('', ''))","a638eebf":"fig1 = plt.figure(figsize=(15,20), dpi=150)\nfor i, u in enumerate([cols[2], cols[3]]):\n    ax = fig1.add_subplot(2, 1, i+1)\n    plt.suptitle(\"Fully open school.\", fontsize=20)\n    map_fullOpen.plot(cmap='Greens', column=u, legend=True, scheme='quantiles', k=3, ax=ax)\n    ax.set_title(f'{u}', fontsize=15)\nplt.show()","9f1fd7c0":"print(f'Total {cols[2]} for Fully open school in the world are: {fully_open[cols[2]].sum()}.')","720f8dbf":"print(f'Total {cols[3]} for Fully open school in the world are: {fully_open[cols[3]].sum()}.')","e10e018d":"map_par = world.merge(partial_open, right_on='ISO3 country',  left_on='iso_a3', suffixes=('', ''))\n","b4fef86b":"fig1 = plt.figure(figsize=(15,20),dpi=150)\nfor i, u in enumerate([cols[2], cols[3]]):\n    ax = fig1.add_subplot(2, 1, i+1)\n    plt.suptitle(\"Partially open school.\", fontsize=20)\n    map_par.plot(cmap='OrRd', column=u, legend=True, scheme='quantiles', k=3, ax=ax)\n    ax.set_title(f'{u}', fontsize=15)\nplt.show()","f3ab720d":"print(f'Total {cols[2]} for Partially open school in the world are: {partial_open[cols[2]].sum()}.')","6d6528c0":"print(f'Total {cols[3]} for Partially open school in the world are: {partial_open[cols[3]].sum()}.')","7edd1534":"plt.style.use('fivethirtyeight')\nclosed.plot(x=cols[1], y=[cols[2], cols[3]], kind='barh', subplots=True, figsize=(10, 20),\n            sharex=True, sharey=True, logx=True)\nplt.show()","4e36a26c":"print(f'Total {cols[2]} for Close school in the world are: {closed[cols[2]].sum()}.')","ab8c3bcb":"print(f'''Total {cols[3]} for Close school in the world are: {closed[cols[3]].sum()}.''')","100bd333":"aca_break","e8e9dddd":"plt.figure(figsize=(10,5), dpi=150)\nsns.heatmap(durationSchcl.corr(), center=0, annot=True)\nplt.show()","534b59e7":"school = durationSchcl[['ISO', 'Country']+list(durationSchcl.columns[5:])]","5c494bd2":"#merge it with country_status\ngeoSchool = world.merge(school, right_on='ISO', left_on='iso_a3', suffixes=('', ''))","14b53df1":"colors = ['Reds', 'Blues', 'OrRd', 'cividis_r']\nfigx = plt.figure(figsize=(20,20), dpi=200)\n#plt.style.use('ggplot')\nfor i, u in enumerate(school.columns[2:]):\n    ax = figx.add_subplot(4, 1, i+1)\n    plt.suptitle(\"Duration school closures.\", fontsize=20)\n    geoSchool.plot(cmap=colors[i], column=u, legend=True, scheme='quantiles', k=3, ax=ax)\n    ax.set_title(f'School period: {u}', fontsize=15)\nplt.show()","bd39e578":"us = usPolicy[['STATE','POSTCODE', 'CLSCHOOL']]","e9fea03f":"us.drop(index=[0,1,2,3], inplace=True)","8c0989cc":"state = {}\nfor u in us.CLSCHOOL.unique().tolist():# for each date\n    row = us[us.CLSCHOOL == u]# we select data.\n    #we want to get table such that columns is date\n    state[str(u)] = len(row['STATE'].tolist())","240302d0":"#sorted \ntemp = {}\nfor u in sorted(state.keys()):\n    temp[u] = state[u]\nstate = temp","8002d749":"plt.figure(figsize=(9,8), dpi=180)\nplt.pie(list(state.values()), labels=list(state.keys()), shadow=True, startangle=180, autopct='%1.1f%%',\n       explode=(0,0.1,0,0,0,0,0,0,0,0,0))\nplt.suptitle('The date a state closed K-12 public schools statewide.', fontsize=18)\nplt.axis('equal')\nplt.show()","1817f05a":"usa = schCloEvo[schCloEvo.Country == 'United States of America'][['Date', 'Status']]","7ba94f59":"#Labelize \ndef labelizer(row):\n    if row == 'Fully open':\n        return 1\n    elif row == 'Partially open':\n        return 0.5\n    else:\n        return 0","e8cbf72e":"usa['Label_status'] = usa['Status'].apply(labelizer)","0d114081":"usa.plot(x='Date', y='Label_status', figsize=(15,5), title='School closure evolution in USA..')\nplt.show()","c3a12a99":"#load package\nfrom statsmodels.tsa import seasonal  ","88793898":"label_status = usa.set_index('Date')['Label_status']\nseason = seasonal.seasonal_decompose(label_status, period=90)","c977645b":"fig, (ax1, ax2, ax3) = plt.subplots(3,1, figsize=(15,15))\nseason.trend.plot(ax=ax1)\nseason.seasonal.plot(ax=ax2)\nseason.resid.plot(ax=ax3)\nplt.show()","a7585dd8":"file6='\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv'","30ab3e55":"district = pd.read_csv(file6)","34d91707":"district.head()","57ef2577":"district.tail()","d3c9ab30":"district.info()","f33ad7e3":"district.isnull().sum()[district.isnull().sum()>0]","c89349dc":"#We remove NAN from state column because we have not information. \ndistrict.dropna(subset=['state'], inplace=True)","2b068c60":"from sklearn.impute import SimpleImputer","3e2f7405":"imputer = SimpleImputer(strategy = \"most_frequent\")","fae9aae6":"cols_with_missing = [col for col in district.columns if district[col].isnull().any()]","3199ce51":"imputed_data = imputer.fit_transform(district[cols_with_missing])","fa3c59a4":"district[cols_with_missing] = imputed_data","f05974c0":"fig, axis1 = plt.subplots(1, 1, figsize=(5,10), dpi=180)\nsns.countplot(y='state', data=district, ax=axis1, color='blue')\nplt.suptitle('State distribution.', fontsize=18)\nplt.show()","e683d46a":"print(f\"Mode is {district['state'].mode().values[0]}\")","cb03561b":"#We create function for plotting\ndef categoricalPlot(y1=None, y2=None, hue=None, data=None, title=None):\n    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 12), dpi=200)\n    plt.suptitle(title, fontsize=18)\n    sns.countplot(y=y1, hue=hue, data=data, ax=ax1)\n    ax1.set_title('States', fontsize=18)\n    sns.countplot(x=y2, hue=hue, data=data, ax=ax2)\n    ax2.set_title('Locale', fontsize=18)\n    plt.show()","1474c890":"categoricalPlot(y1='state', y2='pct_black\/hispanic', hue='locale', data=district,\n                title='Percentage of students identified as black\/hispanic.')","7fc288f3":"categoricalPlot(y1='state', y2='pct_free\/reduced', hue='locale', data=district,\n                title='Percentage of students eligible for free or reduced-price lunch.')","19f0a680":"categoricalPlot(y1='state', y2='county_connections_ratio', hue='locale', data=district,\n                title='Residential fixed high-speed connections over 200 kbps.')","46fdfa4b":"fig, (ax11, ax12) = plt.subplots(nrows=1, ncols=2, figsize=(15, 10), dpi=180)\nsns.countplot(y='pp_total_raw', hue='locale', data=district, ax=ax11)\nsns.countplot(y='pp_total_raw', hue='pct_free\/reduced', data=district, ax=ax12)\nplt.suptitle('Per-pupil total expenditure by each category. ', fontsize=20)\nplt.show()","29c83ada":"_, (ax21, ax22) = plt.subplots(nrows=1, ncols=2, figsize=(15, 10), dpi=180)\nsns.countplot(y='pp_total_raw', hue='pct_black\/hispanic', data=district, ax=ax21)\nsns.countplot(y='pp_total_raw', hue='county_connections_ratio', data=district, ax=ax22)\nplt.suptitle('Per-pupil total expenditure by each category. ', fontsize=20)\nplt.show()","e2228200":"plt.figure(figsize=(15,5))\nsns.countplot(hue='pct_black\/hispanic', x='county_connections_ratio', data=district)\nplt.title('The black\/hispanic students internet connectivity.')\nplt.show()","381bb9ac":"plt.figure(figsize=(15,5))\nsns.countplot(hue='pct_black\/hispanic', x='pct_free\/reduced', data=district)\nplt.show()","7be9df2f":"#We create function to take minimun value from interval\ndef minimun_value(row):\n    row1 = row.split(',')# split by ','\n    a = row1[0].split('[')[1]# split \n    #b = row1[1].split('[')[0]\n    return float(a) #+float(b))\/2","0166b468":"data = pd.DataFrame()","0e54553a":"for u in ['pct_black\/hispanic', 'pct_free\/reduced', 'county_connections_ratio', 'pp_total_raw']:\n    data[u] = district[u].apply(minimun_value)","62e59d46":"data.tail()","9841ebcb":"#corelation\ndata.corr()","cc9b01f1":"file7 = \"\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\"","dedd2913":"product = pd.read_csv(file7)","8519bd83":"product.head(3)","0a861721":"product.info()","3cdd5d67":"print('------------ Inventory -------------')\nprint(f\"Total Company: {product['Provider\/Company Name'].nunique()}.\")\nprint(f\"Total Sector: {product['Sector(s)'].nunique()}.\")\nprint(f\"Total Function: {product['Primary Essential Function'].nunique()}.\")\nprint(f\"Total product: {product['Product Name'].nunique()}.\")","6e87fed2":"#count value\ncompany_name = product['Provider\/Company Name'].value_counts().sort_values(ascending = True)\nsector = product['Sector(s)'].value_counts()\npessfunc = product['Primary Essential Function'].value_counts() ","eae1075e":"#company name with counts > 1\ncompany_name[company_name>1].plot(kind='barh', figsize=(10,15),\n                                  title=' Name of the product provider (counts>1).')\nfor i, u in enumerate(company_name[company_name>1]):\n    plt.text(u, i, str(u), bbox=dict(facecolor='yellow', alpha=0.5), fontsize=15, ha='left')\nplt.xlabel('counts')\nplt.ylabel('Company')\nplt.show()","05761d7a":"sector.plot(kind='bar', figsize=(15,5))\nfor i, u in enumerate(sector):\n    plt.text(i, u, str(u), bbox=dict(facecolor='green', alpha=0.5), fontsize=15, ha='center')\nplt.ylabel('counts')\nplt.title(\"Sectors\", fontsize=18)\nplt.show()","865ca721":"pessfunc[pessfunc>5].sort_values(ascending=True).plot(kind='barh', figsize=(10, 15))\nplt.title('Primary Essential Function(counts>5)', fontsize=18)\nfor i, u in enumerate(pessfunc[pessfunc>5].sort_values(ascending=True)):\n    plt.text(u, i, str(u), bbox=dict(facecolor='yellow', alpha=0.5), fontsize=15, ha='left')\nplt.xlabel('counts')\nplt.show()","dcff860f":"google = product[product['Provider\/Company Name'] == 'Google LLC']","6d286145":"google.head(2)","4e0e0a6a":"print(f\"Google LLC provide {google['Product Name'].nunique()} products\\n\\nWho are:\\n{google['Product Name'].tolist()}\")","09effc2c":"print(f\"The sectors where google provides its product: {product['Sector(s)'].unique()}\")","d13b7291":"print(f\"total function: {product['Primary Essential Function'].nunique()}\")","bb875cc6":"google['Sector(s)'].value_counts().plot(kind='bar', figsize=(15,5))\nfor i, u in enumerate(google['Sector(s)'].value_counts()):\n    plt.text(i, u, str(u), bbox=dict(facecolor='red', alpha=0.5), fontsize=18, ha='center')\nplt.title('The sectors where Google offers its products.') \nplt.ylabel('counts')\nplt.show()","267ac252":"google['Primary Essential Function'].value_counts().sort_values(ascending=True).plot(kind='barh',\n                                                                                     figsize=(10,15),\n                                        title='Primary Essential Function of the products.')\nfor i, u in enumerate(google['Primary Essential Function'].value_counts().sort_values(ascending=True)):\n    plt.text(u, i, str(u), bbox=dict(facecolor='yellow', alpha=0.5), fontsize=18, ha='center')  \nplt.xlabel('counts')\nplt.show()","7574d61a":"houghton = product[product['Provider\/Company Name'] == 'Houghton Mifflin Harcourt']","bf983178":"houghton","7408fe4c":"microsoft = product[product['Provider\/Company Name'] == 'Microsoft']","9e06264e":"microsoft","6ac99c5f":"az =product[product['Provider\/Company Name'] == 'Learning A-Z'] ","002e3196":"az","ef2e95c7":"ixl =product[product['Provider\/Company Name'] == 'IXL Learning']  ","2e6ba827":"ixl","45aa6c47":"#we take all district where we select only a first five company more represented showing above.\n# after we append it in engagement list\n#we create function\ndef select_product(tech=None, take_state=False):\n    \n    engagement = [] #list for concatenation\n    \n    for root, _, filenames in os.walk('\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/'):\n        for filename in filenames:\n            data = pd.read_csv(os.path.join(root, filename))\n        \n            xdata = data[data['lp_id'].isin(tech)]\n            dist_id = os.path.splitext(filename)[0]\n            state = district[district['district_id'] == int(dist_id)]\n            state = state['state'].unique()\n            \n            if len(state) != 0 and take_state:\n                xdata['district_id'] = [int(dist_id) for _ in range(xdata.shape[0])]\n                xdata['state'] = [state[0] for _ in range(xdata.shape[0])]\n                engagement.append(xdata)\n            else:\n                engagement.append(xdata)\n            \n    return engagement","f8601f75":"#create asssemble_data function\ndef assemble_data():\n    \"\"\"This function assemble data\"\"\"\n    \n    assemble = [] #list\n    for root, _, filenames in os.walk('\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/'):\n        for filename in filenames:\n            #load data\n            data = pd.read_csv(os.path.join(root, filename))\n            \n            #select columns\n            xdata = data[['time', 'engagement_index']]\n            dist_id = os.path.splitext(filename)[0]# select name of filename\n            #filter district\n            state = district[district['district_id'] == int(dist_id)]\n            state = state['state'].unique()# choose unique value due to duplication\n            \n            #\n            if len(state) != 0:\n                #create state column\n                xdata['state'] = [state[0] for _ in range(xdata.shape[0])]\n                assemble.append(xdata)# append data\n                \n    return pd.concat(assemble)# concatenation","3bc993ce":"#we take all filename in engagement data folder after we concatenate.\nengagement_2020 = []\nfor root, _, filenames in os.walk('\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/'):\n    for filename in filenames:\n        data = pd.read_csv(os.path.join(root, filename))\n        engagement_2020.append(data)","a45eaefd":"engagement_2020 = pd.concat(engagement_2020, ignore_index=True)","0efc4516":"engagement_2020.head()","9ad21949":"engagement_2020.info()","7e9bd689":"engagement_2020['time'] = pd.to_datetime(engagement_2020['time'], errors='ignore')","5c3f6cb8":"engage_usa_2020 = engagement_2020.groupby('time')['engagement_index'].agg('sum')","074c9fdf":"mean_engage_2020 = engage_usa_2020.rolling(7).mean()","852b356e":"engage_usa_2020.plot(figsize=(15,5), legend=True)\nmean_engage_2020.plot(label='Moving average', legend=True)\nplt.title('Digital learning: Engagement for year 2020.', fontsize=15)\nplt.ylabel('engagement_index')\nplt.xlabel('time: day')\nplt.axis('tight')\nplt.show()","fee59e04":"week_engage = engage_usa_2020.resample('W').sum()\nmonth_engage = engage_usa_2020.resample('M').sum()\nquart_engage = engage_usa_2020.resample('Q').sum()","37b3b0d0":"fig, (ax1, ax2, ax3) = plt.subplots(3,1, figsize=(15,20), dpi=180)\nweek_engage.plot(ax=ax1, legend=True)\nmonth_engage.plot(ax=ax2, legend=True)\nquart_engage.plot(ax=ax3, legend=True)\nax1.set_title('Weekly engagement', fontsize=15)\nax2.set_title('Monthly engagement', fontsize=15)\nax3.set_title('Quarterly engagement', fontsize=15)\nplt.show()","42242192":"quart_engage.plot(kind='area', figsize=(15, 5), legend=True)\nplt.title('USA: Digital learning Engagement area')\nplt.ylabel('engagement_index')\nplt.show()","de228471":"#we take all google product \nproduct_name_google = google['Product Name'].tolist()\nlp_id_google = google['LP ID'].tolist()","3c0f8276":"google_engagement = engagement_2020[engagement_2020['lp_id'].isin(lp_id_google)]","45297742":"#now, we can plot.\nfigure = plt.figure(figsize=(18, 18), dpi=180)\nfigure.subplots_adjust(wspace=0.2, hspace=0.5)\nfor i, u in enumerate(lp_id_google):\n    name = product_name_google[i]\n    data = google_engagement[google_engagement['lp_id'] == u]\n    ax = figure.add_subplot(6, 5, i+1)\n    data.plot(ax=ax, x='time', y='pct_access')\n    ax.set_title(name)\n    ax.set_xlabel(' ')\nplt.suptitle('Pourcentage access in different google product.', fontsize=20)\nplt.show()","1771804d":"figure1 = plt.figure(figsize=(18, 18), dpi=200)\nfigure1.subplots_adjust(wspace=0.2, hspace=0.5)\nfor i, u in enumerate(lp_id_google):\n    name = product_name_google[i]\n    data = google_engagement[google_engagement['lp_id'] == u]\n    ax = figure1.add_subplot(6, 5, i+1)\n    data.plot(ax=ax, x='time', y='engagement_index')\n    ax.set_title(name)\n    ax.set_xlabel(' ')\nplt.suptitle('Engagement index in different google product.', fontsize=20)\nplt.show()","5e41b688":"best_prod = google[google['Product Name'].isin([\"Google Docs\", \"Google Classroom\", \n                                                \"Google Calendar\", \"Meet\", \"YouTube\"])]","7c078b0c":"figur_ = plt.figure(figsize=(18, 18), dpi=180)\nfigur_.subplots_adjust(hspace=0.5)\nprod_names = [\"Google Docs\", \"Google Classroom\", \"Google Calendar\", \"Meet\", \"YouTube\"]\nfor i, u in enumerate(best_prod['LP ID'].tolist()):\n    name = prod_names[i] \n    data = google_engagement[google_engagement['lp_id'] == u]\n    ax = figur_.add_subplot(5, 1, i+1)\n    data.plot(ax=ax, x='time', y='engagement_index')\n    ax.set_title(name)\n    ax.set_xlabel(' ')\nplt.suptitle('Best google product.', fontsize=20)\nplt.show()","d6b80a72":"#we take all microsoft product\nproduct_name_microsoft = microsoft['Product Name'].tolist()\nlp_id_microsoft = microsoft['LP ID'].tolist()","73e24db0":"microsoft_engagement = engagement_2020[engagement_2020['lp_id'].isin(lp_id_microsoft)]","62bb80a4":"figure2 = plt.figure(figsize=(15, 10))\nfigure2.subplots_adjust(wspace=0.2, hspace=0.5)\nfor i, u in enumerate(lp_id_microsoft):\n    name = product_name_microsoft[i]\n    data = microsoft_engagement[microsoft_engagement['lp_id'] == u]\n    ax = figure2.add_subplot(2, 3, i+1)\n    data.plot(ax=ax, x='time', y='pct_access')\n    ax.set_title(name)\n    ax.set_xlabel(' ')\nplt.suptitle('Pourcentage access in different microsoft product.', fontsize=20)\nplt.show()","e93a39b4":"figure3 = plt.figure(figsize=(15, 10))\nfigure3.subplots_adjust(wspace=0.2, hspace=0.5)\nfor i, u in enumerate(lp_id_microsoft):\n    name = product_name_microsoft[i]\n    data = microsoft_engagement[microsoft_engagement['lp_id'] == u]\n    ax = figure3.add_subplot(2, 3, i+1)\n    data.plot(ax=ax, x='time', y='engagement_index')\n    ax.set_title(name)\n    ax.set_xlabel(' ')\nplt.suptitle('Engagement index in different microsoft product.', fontsize=20)\nplt.show()","6782d1e9":"product_name_houghton = houghton['Product Name'].tolist()\nlp_id_houghton = houghton['LP ID'].tolist()","480407ad":"houghton_engagement = engagement_2020[engagement_2020['lp_id'].isin(lp_id_houghton)]","e68140ac":"figure3 = plt.figure(figsize=(15, 10))\nfigure3.subplots_adjust(wspace=0.2, hspace=0.5)\nfor i, u in enumerate(lp_id_houghton):\n    name = product_name_houghton[i]\n    data = houghton_engagement[houghton_engagement['lp_id'] == u]\n    ax = figure3.add_subplot(2, 3, i+1)\n    data.plot(ax=ax, x='time', y='pct_access')\n    ax.set_title(name)\n    ax.set_xlabel(' ')\nplt.suptitle('Pourcentage access in different houghton product.', fontsize=20)\nplt.show()","1eaf6c87":"figure4 = plt.figure(figsize=(15, 10))\nfigure4.subplots_adjust(wspace=0.2, hspace=0.5)\nfor i, u in enumerate(lp_id_houghton):\n    name = product_name_houghton[i]\n    data = houghton_engagement[houghton_engagement['lp_id'] == u]\n    ax = figure4.add_subplot(2, 3, i+1)\n    data.plot(ax=ax, x='time', y='engagement_index')\n    ax.set_title(name)\n    ax.set_xlabel(' ')\nplt.suptitle('Engagement index in different houghton product.', fontsize=20)\nplt.show()","68ff3a03":"product_name_az = az['Product Name'].tolist()\nlp_id_az = az['LP ID'].tolist()","e17328e5":"product_name_ixl = ixl['Product Name'].tolist()\nlp_id_ixl = ixl['LP ID'].tolist()","fbb12629":"az_engagement = engagement_2020[engagement_2020['lp_id'].isin(lp_id_az)]\nixl_engagement = engagement_2020[engagement_2020['lp_id'].isin(lp_id_ixl)]\n","e4d6d450":"figure5 = plt.figure(figsize=(15, 10))\nfigure5.subplots_adjust(wspace=0.2, hspace=0.5)\nfor i, u in enumerate(lp_id_az+lp_id_ixl):\n    \n    if i < 4:\n        name = product_name_az[i]\n        data = az_engagement[az_engagement['lp_id'] == u]\n        ax = figure5.add_subplot(2, 4, i+1)\n        data.plot(ax=ax, x='time', y='engagement_index')\n        ax.set_title(name)\n        #ax.set_xlabel(' ')\n    else:\n        name = product_name_ixl[i%2]\n        data = ixl_engagement[ixl_engagement['lp_id'] == u]\n        ax = figure5.add_subplot(2, 4, i+1)\n        data.plot(ax=ax, x='time', y='engagement_index')\n        ax.set_title(name)\n        #ax.set_xlabel(' ')\n        \nplt.suptitle('Engagement index in different Learning A-Z and IXL Learning product.', fontsize=20)\nplt.show()","b27da1df":"assemble_engage = assemble_data()","4efc9273":"#pivot table\nstate_student_engagement = assemble_engage.pivot_table(values='engagement_index', index='time', columns='state', \n                                                      aggfunc='sum')","cb23a2c7":"state_student_engagement.head(3)","65d4768e":"state_student_engagement.drop(columns=['Minnesota', 'North Dakota'], inplace=True)","1ca8ab8a":"# rename colum\nstate_student_engagement.columns = ['Arizona', 'California', 'Connecticut', 'District of Columbia',\n       'Florida', 'Illinois', 'Indiana', 'Massachusetts', 'Michigan',\n       'Missouri', 'New Hampshire', 'New Jersey', 'New York', 'North Carolina',\n       'Ohio', 'Tennessee', 'Texas', 'Utah', 'Virginia', 'Washington',\n       'Wisconsin']","2f48c8a3":"state_region = pd.read_csv('\/kaggle\/input\/usa-states-to-region\/states.csv')","89a5489a":"region ={} #dict\nfor u in state_region[\"Region\"].unique().tolist():\n    region[u] = state_region[state_region['Region'] == u].State.unique().tolist()","7313fb1f":"for u in state_region[\"Region\"].unique():\n    res = list(set(state_student_engagement.columns).intersection(set(region[u])))\n    state_student_engagement[res].plot(figsize=(15,15), subplots=True)\n    plt.suptitle(f'Student engagement index: {u} region.', fontsize=20)\nplt.show() ## see well plot ","37474159":"#load data schools state\nschool_st = pd.read_csv('\/kaggle\/input\/osf-data\/schools_state_csv.csv')","89b0c199":"#state_name column have upper character we are going to capitalize\nschool_st['state_name'] = school_st['state_name'].apply(lambda x: x.capitalize())","2bab4774":"#replace values\nschool_st.replace(value=['North Carolina', 'New Jersey', 'New York', 'New Hampshire', 'District of Columbia'],\n                  to_replace=['North carolina', 'New jersey', 'New york', 'New hampshire',\n                              'District of columbia'], inplace=True)","99519b64":"schools_state = school_st.groupby('state_name')['total_students'].agg('sum').reset_index()","133d1c19":"#we select neccesary state and but state_column in index\nrelevant_schools_state = schools_state[schools_state['state_name'].isin(state_student_engagement.columns)]\nrelevant_schools_state.set_index('state_name', inplace=True)","dd754f34":"relevant_schools_state.sort_values(ascending=False, by=['total_students']).plot(figsize=(15, 5), kind='bar')\nplt.title('Total students by state', fontsize=18)\nplt.ylabel(\"number of students\")\nplt.show()","0e7bd368":"#we create total_load_page_events\ntotal_student = relevant_schools_state.to_dict()['total_students']# total_student","a255b95a":"for res in  [['California', 'Texas'], ['Florida', 'New York'], ['Illinois', 'Ohio'], ['North Carolina', 'Michigan']]:\n    state_student_engagement[res].plot(figsize=(15,5))\n    plt.ylabel('engagement_index')\n    plt.title(f'{res[0]}: {total_student[res[0]]} students vs {res[1]}: {total_student[res[1]]} students.',\n              fontsize=18)\n    plt.show()","a6fa3487":"ncols_states = [['California', 'Texas'], ['Florida', 'New York'], \n                ['Illinois', 'Ohio'], ['North Carolina', 'Michigan'], ['New Jersey', 'Virginia'],\n               ['Arizona', 'Washington'], ['Indiana', 'Tennessee'], [\"Massachusetts\",\"Missouri\"],\n               ['Connecticut','New Hampshire']]","ba44443a":"for res in ncols_states:\n    state_student_engagement[res].plot(figsize=(15,5), kind=\"box\", logy=True)\n    plt.ylabel('engagement_index')\n    plt.title(f'{res[0]}: {total_student[res[0]]} students vs {res[1]}: {total_student[res[1]]} students.',\n              fontsize=18)\n    plt.show()","0cd3de5a":"policy = pd.read_excel(file3)","919826c2":"district_ = pd.read_csv(file6)","a2cff9cc":"#we want to take category as column\ninv_policy = policy.T # transpose policy data","e1206c2f":"inv_policy.columns= inv_policy.iloc[0, :].tolist()# first row becomes header ","8e69b4b7":"inv_policy.drop(index=['STATE','POSTCODE','FIPS'], inplace=True)","284b92ae":"inv_policy['category'].unique()","ec7dffc2":"#we select \nneed_category = ['state_of_emergency', 'physical_distance_closure', 'shelter', 'physical_distance_closures',\n                'second_closures', 'second_closures)', 'third_closures', 'housing', 'food_security',\n                'unemployment', 'workplace', 'SUD_policies', 'state_characteristics', 'minimum_wage']","6068dd3b":"category = {}# dictionary\nfor u in need_category:\n    category[u] = inv_policy[inv_policy['category'] == u].index.tolist()","4e4ca7fe":"#In this cell, each value of category is now a data.\n\n#state of emergency data\nstate_of_emergency = policy[['STATE']+category['state_of_emergency']]\n\n#food security data\nfood_security = policy[['STATE']+category['food_security']]\n\n#physical distance closure data\nphysical_distance_closure = policy[['STATE']+category['physical_distance_closure']+category['physical_distance_closures']]\nshelter = policy[['STATE']+category['shelter']]# shelter data\nhousing = policy[['STATE']+category['housing']]# housing for eviction moratorium\nunemployment = policy[['STATE']+category['unemployment']]# unemployement data\nstate_characteristics = policy[['STATE']+category['state_characteristics']]# state characteristics\nminimun_wage = policy[['STATE']+category['minimum_wage']]#minimun wage data\n#closures\nclosures = policy[['STATE']+category['second_closures']+category['second_closures)']+category['third_closures']]\nworkplace = policy[['STATE']+category['workplace']]\nsud_policy = policy[['STATE']+category['SUD_policies']]","14e83961":"state_of_emergency.drop(index=[0,1,2,3]).head()","7130c696":"district_['state'].replace(to_replace=['District Of Columbia'], value=['District of Columbia'], inplace=True)","c7a5c827":"district_.dropna(subset=['state'], inplace=True)","4612bfc8":"state = district_['state'].unique().tolist()","febd42f5":"state.remove('Minnesota')","6549fb8f":"state.remove('North Dakota')","19e3d6bd":"emergency = state_of_emergency[state_of_emergency.STATE.isin(state)]","7d152039":"emergency.drop(columns=\"STEMERG2\", inplace=True)","4d0baa0b":"shel = shelter[shelter['STATE'].isin(state)][[\"STATE\",\"STAYHOME\",\"END_STHM\"]]","ae3c70bf":"emerg_shel = emergency.merge(shel, left_on='STATE', right_on='STATE', suffixes=(' ', ' '))","d44550d0":"emerg_shel","d4d17bd1":"wage = minimun_wage[minimun_wage['STATE'].isin(state)][[\"STATE\", \"MINWAGEJAN2020\", \"MINWAGESEP2020\"]]","e56016d8":"fig, axis = plt.subplots(1, 2, figsize=(15,15), dpi=180)\nwage.set_index('STATE')[\"MINWAGEJAN2020\"].sort_values().plot(kind=\"barh\", ax=axis[0])\nfor i, u in enumerate(wage.set_index('STATE')[\"MINWAGEJAN2020\"].sort_values()):\n    axis[0].text(u, i, \"$\"+str(u), bbox=dict(facecolor='yellow', alpha=0.25), fontsize=15, ha='center')\n    axis[0].set_title(\" January 2020\")\n    axis[0].set_xlabel(\"wage\")\n    axis[0].axis('tight')\n    \nwage.set_index('STATE')[\"MINWAGESEP2020\"].sort_values().plot(kind=\"barh\", ax=axis[1], rot=60)\nfor i, u in enumerate(wage.set_index('STATE')[\"MINWAGESEP2020\"].sort_values()):\n    axis[1].text(u, i, \"$\"+str(u), bbox=dict(facecolor='yellow', alpha=0.25), fontsize=15, ha='center')\n    axis[1].set_title(\" September 2020\")\n    axis[1].set_xlabel(\"wage\")\n    axis[1].axis('tight')\n    \nplt.suptitle('Minimun hourly wage', fontsize=18, ha='center')\nplt.show()","be088b46":"#  we remove Texas, Utah, Connecticut due to stayHome start date not inplemented\nstayhome = shel.drop(index=[10, 47, 48])","57570af3":"stayhome['STAYHOME'] = pd.to_datetime(stayhome['STAYHOME'], errors='ignore')\nstayhome['END_STHM'] = pd.to_datetime(stayhome['END_STHM'], errors='ignore')","662943c1":"stayhome['DURATION_STAYHOME'] = stayhome['END_STHM'] - stayhome['STAYHOME']","72f17975":"stayhome['LOSS_WAGE(Hour)'] = stayhome['DURATION_STAYHOME'].apply(lambda v: 30*(v.days\/6.0))","707fe5a0":"stayhome.sort_values(by='DURATION_STAYHOME', ascending=False, inplace=True)","972d388a":"wage_stayhome = stayhome.merge(wage[['STATE', 'MINWAGEJAN2020']], left_on=\"STATE\", right_on=\"STATE\")  ","84d726df":"wage_stayhome['MINWAGEJAN2020'] = pd.to_numeric(wage_stayhome[\"MINWAGEJAN2020\"], errors=\"coerce\")","1d15dd53":"wage_stayhome[\"LOSS_WAGE($)\"] = wage_stayhome['LOSS_WAGE(Hour)']*wage_stayhome['MINWAGEJAN2020']","5e7da0b4":"wage_stayhome.style.background_gradient('OrRd')","d176fa38":"def currency(x, pos):\n    \"\"\"The two args are the value and tick position\"\"\"\n    if x >= 1e3:\n        s = '${:1.0f}K'.format(x*1e-3)\n    else:\n        s = '${:1.0f}'.format(x)\n    return s","5ace1b57":"figp, axp = plt.subplots(1, 2, figsize=(15, 10), dpi=180)\naxp[0].barh(wage_stayhome[\"STATE\"].tolist(), [u.days for u in wage_stayhome[\"DURATION_STAYHOME\"].tolist()])\naxp[1].barh(wage_stayhome['STATE'].tolist(), wage_stayhome['LOSS_WAGE($)'].tolist())\nlabels1 = axp[0].get_xticklabels()\nlabels2 = axp[1].get_xticklabels()\nplt.setp(labels1, rotation=45, horizontalalignment='right')\nplt.setp(labels2, rotation=45, horizontalalignment='right')\naxp[0].set(xlim=[0, 325], xlabel='Days', ylabel='STATE',\n       title='Duration stay home in each state')\naxp[1].set(xlim=[0, 20500], xlabel='Loss wage', ylabel='STATE',\n       title='Employee wage loss in each state ')\naxp[1].xaxis.set_major_formatter(currency)\naxp[0].axvline(np.mean([u.days for u in wage_stayhome[\"DURATION_STAYHOME\"].tolist()]),\n               ls='--', color='r', label=\"mean\")\naxp[1].axvline(wage_stayhome[\"LOSS_WAGE($)\"].mean(), ls=\"--\", color='r', label=\"mean\")\naxp[0].legend(loc=\"best\")\naxp[1].legend(loc='best')\nplt.show()","cce1ee78":"unemp_pov18 = state_characteristics[state_characteristics[\"STATE\"].isin(state)][[\"STATE\",\"UNEMP18\",\"POV18\"]]","43a445df":"unemp_pov18[\"UNEMP18\"] = pd.to_numeric(unemp_pov18['UNEMP18'], errors=\"coerce\")\nunemp_pov18[\"POV18\"] = pd.to_numeric(unemp_pov18['POV18'], errors=\"coerce\")","b6cfacd9":"unemp_pov18.corr()","fd2086d2":"fig1, axis1 = plt.subplots(1, 2, figsize=(15,15), dpi=180)\nunemp_pov18.set_index('STATE')[\"UNEMP18\"].sort_values().plot(kind=\"barh\", ax=axis1[0])\nfor i, u in enumerate(unemp_pov18.set_index('STATE')[\"UNEMP18\"].sort_values()):\n    axis1[0].text(u, i, str(u), bbox=dict(facecolor='yellow', alpha=0.25), fontsize=15, ha='center')\n    axis1[0].set_title(\" Unemployment 2018\")\n    axis1[0].set_xlabel(\"unemp(%)\")\n    axis1[0].axis('tight')\n    \nunemp_pov18.set_index('STATE')[\"POV18\"].sort_values().plot(kind=\"barh\", ax=axis1[1], rot=30)\nfor i, u in enumerate(unemp_pov18.set_index('STATE')[\"POV18\"].sort_values()):\n    axis1[1].text(u, i, str(u), bbox=dict(facecolor='yellow', alpha=0.25), fontsize=15, ha='center')\n    axis1[1].set_title(\" Poverty 2018\")\n    axis1[1].set_xlabel(\"pov (%)\")\n    axis1[1].axis('tight')\n    \nplt.suptitle('State characteristics', fontsize=18)\nplt.show()","4a902cf6":"closures.head()","2c1edf29":"#\nclos = closures[closures['STATE'].isin(state)]\n","062e57d9":"bars = clos[['STATE', 'BCLBAR2', 'END_BRS2', 'CLBAR3', 'END_CLBAR3']]\nmovie_theaters = clos[['STATE', 'CLMV2', 'END_CLMV2']]\nhair_barber = clos[['STATE', 'CLHAIR2', 'END_CLHAIR2']]\ngym = clos[['STATE', 'CLGYM2', 'END_CLGYM2']]\nrestaurants = clos[['STATE', 'CLRST2', 'ENDREST2', 'CLRST3', 'END_CLRST3']]\ncasinos = clos[['STATE', 'CASCLOSE2', 'CASOPEN2']]","77858be2":"bars","3ef3c960":"#we convert values\nbars_ = bars.set_index('STATE').applymap(lambda x: pd.to_datetime(x) if x == 0 else pd.to_datetime(x))","4baa4ed0":"#We compute a duration close-open bars in each state first and second time.\nbars_['DURATION_BARS2'] = bars_['END_BRS2'] - bars_['BCLBAR2']\nbars_['DURATION_BARS3'] = bars_['END_CLBAR3'] - bars_['CLBAR3']","544d89e9":"#we correct\nbars_[['DURATION_BARS2', 'DURATION_BARS3']] = bars_[['DURATION_BARS2', 'DURATION_BARS3']].applymap(lambda x: x if x > pd.Timedelta(0) else  pd.Timedelta(0) )","5f82af76":"bars_[['DURATION_BARS2', 'DURATION_BARS3']].sort_values(by='DURATION_BARS2', ascending=False).style.background_gradient('OrRd')","3f4763bc":"barman = pd.DataFrame()\nbarman['TOTAL_DURATION_BARS'] = bars_['DURATION_BARS2'] + bars_['DURATION_BARS3']","fdeedcc4":"barman['LOSS_WAGE(Hour)'] = barman['TOTAL_DURATION_BARS'].apply(lambda v: 60*(v.days\/7.0))","66c9a066":"barman.sort_values(by='TOTAL_DURATION_BARS', ascending=False).style.background_gradient('OrRd')","013ed5ab":"movie_theaters","3aece632":"#remove 0\nmovie_ = movie_theaters.set_index('STATE').applymap(lambda x: pd.to_datetime(x) if x == 0 else pd.to_datetime(x))","80fbf803":"movie_['DURATION_CLMV2'] = movie_['END_CLMV2'] - movie_['CLMV2']","4f0ce6fb":"movie_['LOSS_WAGE(Hour)'] = movie_['DURATION_CLMV2'].apply(lambda v: 60*(v.days\/7.0))","a4681234":"movieman = movie_[['DURATION_CLMV2', 'LOSS_WAGE(Hour)']]","9d8ba918":"movieman.sort_values(by=\"DURATION_CLMV2\", ascending=False).style.background_gradient('OrRd')","df5ed9e1":"restaurants","4e39ac70":"restau_ = restaurants.set_index('STATE').applymap(lambda x: pd.to_datetime(x) if x == 0 else pd.to_datetime(x))","afd1403b":"restau_['DURATION_RST2'] = restau_['ENDREST2'] - restau_['CLRST2'] ","0f56f8ff":"restau_['LOSS_WAGE(Hour)'] = restau_['DURATION_RST2'].apply(lambda v: 60*(v.days\/7.0))","465d3c92":"restau_man = restau_[['DURATION_RST2', 'LOSS_WAGE(Hour)']]","8d603f1d":"restau_man.sort_values(by=\"DURATION_RST2\", ascending=False).style.background_gradient('OrRd')","87796aaa":"gym","dd075bf4":"gym_ = gym.set_index('STATE').applymap(lambda x: pd.to_datetime(x) if x == 0 else pd.to_datetime(x))\n\ngym_['DURATION_GYM2'] = gym_['END_CLGYM2'] - gym_['CLGYM2'] \n\ngym_['LOSS_WAGE(Hour)'] = gym_['DURATION_GYM2'].apply(lambda v: 60*(v.days\/7.0))","b40f24d8":"gym_man = gym_[['DURATION_GYM2', 'LOSS_WAGE(Hour)']]","606f44d4":"gym_man.sort_values(by=\"DURATION_GYM2\", ascending=False).style.background_gradient('OrRd')","85e70deb":"casinos","f833c786":"casinos_ = casinos.set_index('STATE').applymap(lambda x: pd.to_datetime(x) if x == 0 else pd.to_datetime(x))","8345acaf":"casinos_['DURATION_CAS'] = - (casinos_['CASCLOSE2'] - casinos_['CASOPEN2']) \n\ncasinos_['LOSS_WAGE(Hour)'] = casinos_['DURATION_CAS'].apply(lambda v: 60*(v.days\/7.0))\n\ncasinos_man = casinos_[['DURATION_CAS', 'LOSS_WAGE(Hour)']]","6ac9f7ad":"casinos_man.sort_values(by=\"DURATION_CAS\", ascending=False).style.background_gradient('OrRd')","923ff7bc":"#plot bars, casinos, gym, restaurants, \nimport matplotlib.gridspec as gridspec\nfigp = plt.figure(figsize=(15,10), constrained_layout=True, dpi=180)\ngs = figp.add_gridspec(2, 3)\nf3_ax1 = figp.add_subplot(gs[0, 0])\ncas_ = casinos_man[casinos_man[\"LOSS_WAGE(Hour)\"] > 0]\nf3_ax1.barh(cas_.index, [u.days for u in cas_[\"DURATION_CAS\"].tolist()])\nf3_ax1.set_title('Duration casinos closures')\nf3_ax1.set_xlabel(\"days\")\nf3_ax1.set_ylabel(\"STATE\")\n#-----------------------------------------------------------------------------------\ngyman_ = gym_man[gym_man['LOSS_WAGE(Hour)'] > 0]\nf3_ax2 = figp.add_subplot(gs[0, 1])\nf3_ax2.barh(gyman_.index, [u.days for u in gyman_[\"DURATION_GYM2\"].tolist()])\nf3_ax2.set_title('Duration gym closures')\nf3_ax2.set_xlabel('days')\nf3_ax2.set_ylabel(\"STATE\")\n#---------------------------------------------------------------------------------------------\nrst = restau_man[restau_man[\"LOSS_WAGE(Hour)\"] > 0]\nf3_ax3 = figp.add_subplot(gs[0, 2])\nf3_ax3.barh(rst.index, [u.days for u in rst['DURATION_RST2'].tolist()])\nf3_ax3.set_title('Duration restaurants closures')\nf3_ax3.set_xlabel('days')\nf3_ax3.set_ylabel(\"STATE\")\nf3_ax3.axvline(np.mean([u.days for u in rst['DURATION_RST2'].tolist()]),\n              ls='--', color='r', label='mean')\nf3_ax3.legend(loc='best')\n#########################################################\"#####################################\"\nmov = movieman[movieman['LOSS_WAGE(Hour)']>0]\nf3_ax4 = figp.add_subplot(gs[1, 0])\nf3_ax4.barh(mov.index, [u.days for u in mov['DURATION_CLMV2'].tolist()])\nf3_ax4.set_title('Duration movie & theaters closures')\nf3_ax4.set_xlabel(\"days\")\nf3_ax4.set_ylabel(\"STATE\")\nf3_ax4.axvline(np.mean([u.days for u in mov['DURATION_CLMV2'].tolist()]),\n              ls='--', color='r', label='mean')\nf3_ax4.legend(loc='best')\n#*******************************************************************************************\ndrink_bar = barman[barman['LOSS_WAGE(Hour)']>0]\nf3_ax5 = figp.add_subplot(gs[1, 1:])\nf3_ax5.bar(drink_bar.index, [u.days for u in drink_bar['TOTAL_DURATION_BARS'].tolist()])\nf3_ax5.axhline(np.mean([u.days for u in drink_bar['TOTAL_DURATION_BARS'].tolist()]),\n               ls='--', color='r', label=\"mean\")\nf3_ax5.set_title('Duration bars closures')\nf3_ax5.set_ylabel('days')\nf3_ax5.set_xlabel(\"STATE\")\nf3_ax5.legend(loc='best')\nlabels_f3_ax5 = f3_ax5.get_xticklabels()\nplt.setp(labels_f3_ax5, rotation=45, horizontalalignment='right')\nplt.show()","20a2fed6":"housing.head()","3ff4aee4":"eviction_moratorium_housing = housing[housing['STATE'].isin(state)] ","7900cef9":"overall_evic_moratorium = eviction_moratorium_housing[[\"STATE\", \"EMSTART\", \"EMEND\", \"EMSTART2\",\"EMEND2\",\n                                                       \"EMSTART3\", \"EMEND3\", \"EMNOW\"]]","40fab0a5":"evic_mora_now_state = overall_evic_moratorium[overall_evic_moratorium['EMNOW'] == 1]\nevic_mora_expired_state = overall_evic_moratorium[overall_evic_moratorium['EMNOW'] == 0]","74d4de27":"evic_mora_now_state.head()","79fac10a":"print(f\"The state that the moratorium on eviction are currently in place\\n: {evic_mora_now_state.STATE.unique().tolist()}\")","04f51a63":"#we plot these state their student engament\n#now_mora_dates = [str(u) for u in evic_mora_now_state['EMSTART']]\nmora_student_engagement = state_student_engagement[evic_mora_now_state.STATE.unique().tolist()]","c056ff55":"mora_student_engagement.index = pd.to_datetime(mora_student_engagement.index, errors='ignore')","e33c5ab6":"figg = plt.figure(figsize=(15,20))\nfigg.subplots_adjust(hspace=0.5)\nfor i, u in enumerate(evic_mora_now_state.STATE.unique().tolist()):\n    date = evic_mora_now_state[evic_mora_now_state['STATE'] == u]['EMSTART'].values[0]\n    day = str(date).split(' ')[0] #take date\n    data = mora_student_engagement[u]\n    #print(day in data.index)\n    ax = figg.add_subplot(9, 1, i+1)\n    data.plot(ax=ax, legend=True)\n    ax.set_xlabel(' ')\n    ax.axvline(ymin=0, ymax=max(data), x=day, linestyle='--', color='red', label=\"Start moratorium\")\n    ax.legend(loc='upper left')\n    ax.text('2020-05-30', max(data)\/\/2, 'Currently in place',\n           bbox=dict(facecolor='yellow', alpha=0.25), fontsize=15, ha='center')\nplt.suptitle(\"Moratorium on eviction and student engagement\")\nplt.show()","ef8ecd6d":"evic_mora_expired_state = evic_mora_expired_state[evic_mora_expired_state['EMSTART'] !=0]   #.head()","9a6d0fac":"evic_mora_expired_state.head()","4c083685":"print(f\"The state that the moratorium on eviction areexpired\\n: {evic_mora_expired_state.STATE.unique().tolist()}\")","82d1c842":"exp_mora_student_engagement = state_student_engagement[evic_mora_expired_state.STATE.unique().tolist()]","8f35af91":"exp_mora_student_engagement.index = pd.to_datetime(exp_mora_student_engagement.index, errors='ignore')","60ea4266":"figg1 = plt.figure(figsize=(15,20))\nfigg1.subplots_adjust(hspace=0.5)\nfor i, u in enumerate(['Arizona', 'Florida', 'Indiana', 'Michigan', 'New Hampshire']):\n    date1 = evic_mora_expired_state[evic_mora_expired_state['STATE'] == u]['EMSTART'].values[0]\n    date2 = evic_mora_expired_state[evic_mora_expired_state['STATE'] == u]['EMEND'].values[0]\n    day1 = str(date1).split(' ')[0] #take date\n    day2 = str(date2).split(' ')[0]\n    data = exp_mora_student_engagement[u]# state engagement index\n    #print(day in data.index)\n    ax = figg1.add_subplot(5, 1, i+1)\n    data.plot(ax=ax, legend=True)\n    ax.set_xlabel(' ')\n    ax.axvline(ymin=0, ymax=max(data), x=day1, linestyle='--', color='green', label=\"Start moratorium\")\n    ax.axvline(ymin=0, ymax=max(data), x=day2, linestyle='--', color='red', label=\"End moratorium\")\n    ax.legend(loc='upper left')\n    ax.text('2020-06-30', max(data)\/\/2, 'Expired',\n           bbox=dict(facecolor='red', alpha=0.25), fontsize=15, ha='center')\nplt.suptitle(\"Moratorium on eviction and student engagement\")\nplt.show()","a3bdf58a":"figg1 = plt.figure(figsize=(15,20))\nfigg1.subplots_adjust(hspace=0.5)\nfor i, u in enumerate(['Tennessee', 'Texas', 'Utah', 'Virginia', 'Wisconsin']):\n    date1 = evic_mora_expired_state[evic_mora_expired_state['STATE'] == u]['EMSTART'].values[0]\n    date2 = evic_mora_expired_state[evic_mora_expired_state['STATE'] == u]['EMEND'].values[0]\n    day1 = str(date1).split(' ')[0] #take date\n    day2 = str(date2).split(' ')[0]\n    data = exp_mora_student_engagement[u]# state engagement index\n    #print(day in data.index)\n    ax = figg1.add_subplot(5, 1, i+1)\n    data.plot(ax=ax, legend=True)\n    ax.set_xlabel(' ')\n    ax.axvline(ymin=0, ymax=max(data), x=day1, linestyle='--', color='green', label=\"Start moratorium\")\n    ax.axvline(ymin=0, ymax=max(data), x=day2, linestyle='--', color='red', label=\"End moratorium\")\n    ax.legend(loc='upper left')\n    ax.text('2020-04-15', max(data)\/\/2, 'Expired',\n           bbox=dict(facecolor='red', alpha=0.25), fontsize=15, ha='center')\nplt.suptitle(\"Moratorium on eviction and student engagement\")\nplt.show()","d0cb776b":"We consider\n\n- 1 = Full open\n- 0.5 = Partially open\n- 0 = Academic break","da5a3920":"#### Fully Open school\nMajorities of the countries have chosen social distancing and hygiene in the schools. we prefer to see it in the map.","cae6f03b":"170 products in PreK-12 sector. 115 products in PreK-12; Higer Ed and Corporate sector. 65 products in PreK-12 and Higher Ed.","61f8791c":"### The bars and the wage loss per hour","9e31759a":"the product with increasing pct access for year 2020 are\n- Google Docs\n- Google Forms\n- Google Sites\n- Google Translate\n- Youtube\n- Google ClassRooms\n- Google Drawing\n- Google Sheet\n- Google Calendar\n- Kiddle\n- Meet\nMeet and Google Classroom are relevant and stable. It shows very well relation between students and teachers.\n\nAs we can see, Google Docs, Classroom, Calendar, Meet, Youtube are the products with the highest engagement index. This shows also that students have easy access to these educational technologies compared to other Google product.","9853ecac":"By seeing this graph, we can tell that the school closure status changes after 3 months according to the pandemic situation.\n\nDespite the spread of Covid-19 in the world, each country try to control the disruptions to  education; by trying partially open school. UNESCO recommend each country to use online learning or distance learning but this solution have huge challenge that we discover below.","05a0a41b":"pct_black\/hispanic and pct_free\/reduced seems to trend together.i.e majorities of students in the districts eligible for free or reduced-price lunch seems to be a black\/hispanic student.","8730d0e5":"## I.1\/ USA and Row\n\nIn this section, we are going to explore, analyse and visualize data.","879875cc":"### Microsoft company","3ef3e91c":"We only observe two. For what follows, we proceed to the same method as that of the bars.","2ff6bc3a":"# Conclusion\n\nWhat we can retain in this analysis is the following\n- Internet access should be affordable for low-income people.\n- Digital learning must have a technology that allows the circulation of basic educational resources for students and teachers (timetable, school program, etc.)\n- The socio-economic status of people is a real problem for digital learning.\n- The moratorium on expulsions from states has allowed student engagement to improve as the school year progresses.","f55a9d11":"Only 7 states have decided to close the bars. Where five have reopened. Only the state of New York does not say the date of the opening of the bars. For Michigan, we see the first and second phase of bar opening. Most of the bar closings started in May 2020.","313d25cd":"### Moratorium on eviction expired and student engagement\n\nHere, we are studying how student engagement evolves with a moratorium expired.","a2730ece":"#### Academics break","ec71cb02":"Arizona, Illinois and Michigan have closed movie theaters and theaters.","64b393a6":"### Minimun wage","6a1a97c3":"### Learning A-Z company","9c52d371":"### School closure evolution","93306af8":"<a id=\"dist\"><\/a>","dda47660":"**NB:** Do not forget that Texas, Utah, Connecticut are not there for lack of information.","0fb590cf":"We can see that some state have good student engagement with moratorium on eviction, others more less.\n\n**N.B:** It should be noted that the states with good student engagement are those that have a moratorium on expulsions currently in place.","ade9b04f":"### GOOGLE LLC company","1a6e298b":"### EDA","8323d122":"We are going to plot state student engagement in each region of USA.","cd9e1664":"<a id=\"challenge\"><\/a>","cd6b7cd1":"California have huge duration stay home and wage loss due to **[Covid-19 wave & variant tracker](https:\/\/www.kaggle.com\/lumierebatalong\/covid-19-wave-variant-tracker)**.","a9800362":"## EduTech: Microsoft","6eb84c94":"<a id = \"prod\"><\/a>","927715d3":"## EduTech: Houghton Mifflin Harcourt","ae2366bb":"The objective of this notebook is to better understand and measure the scope and impact of the pandemic on digital learning of students based on the two challenges below.\n\n- state of digital learning 2020\n- the link between engagement in digital learning and factors such as district demographics, broadband access, and state \/ national policies and events.","61703c93":"### IXL Learning company","07756f1e":"## Visualization","f75bfe02":"### COVID-19 Education data on school closures","7bb66229":"We will summarize all the results in a single graph.","5d0f1e15":"We choose a four last columns. Because it is period of school and strong correlate with others features.","232952d8":"# Student engagement and socio economic status \n\nThe socio-economic aspect of a state is very important for a healthy education.","e0093bd9":"Okay, these are the google product with a good student engagement.","12ff4622":"De la m\u00eame mani\u00e8re que pour le bar nous avons.","633a817c":"In this notebook, we are talking about:\n\n- **[School closures in the worldwide](#closures)**: \n    - **[USA vs ROW](#usr)**\n    - **[USA school closure](#usc)**\n- **[Challenge of the digital learning in USA](#challenge)**\n    - **[Part I: district study](#dist)**\n    - **[Part I: product study](#prod)**\n    - **[The picture of digital connectivity and engagement in 2020](#digi2020)**\n    - **[The effect of the covid-19 pandemic on online and distance](#effect)**\n    - **[Student engagement and type of education technology](#student)**\n    - **[Student engagement and geographic, demographic](#socio)**\n- **[Student engagement and socio-econimic status](#status)**\n    - **[Impact of Covid-19 on socio-\u00e9conomic](#covid)**\n- **[State intervention, practice or policy.](#inter)**\n    - **[Closing and reopening of bars, restaurants, casinos, gym, etc.](#clo)**\n    - **[Moratoriums on evictions](#mora)**\n    \n- **[Conclusion](#conc)**\n    \n\n","88fbef73":"# Part I: product study","b0becae1":"### Casinos","09c8a26c":"## I.2\/ USA school closure\nIn this section, we are studying the school closure evolution and see school closure in each state.","11279594":"We observe the engagement index in three stages: weeks, months and quarters; and it increases.we can say that the engagement for the year 2020 had a positive trend.","595d2846":"We have 23 states due to missing values. Some districts do not have information about state, pct_black\/hispanic, etc, .. in district csv file. We remove Minnesota, North Dakota because it have respective 95 non-null and 33 non-null values.","d1e1fb1b":"All states in the table have alerted the state of emergency, some have ceased the alert (Florida, Massachussets, Michigan, New Jersey, New York, Ohio, Virginia) but others not implemented. By this emergency, all of us instructed the confinement in March except three states that we do not know the date namely Texas, Utah, Connecticut.","62c4a15b":"## EduTech: Google LLC","dcc07a2a":"<a id=\"sch\"><\/a>","62b83ba8":"<a id=\"effect\"><\/a>","24ddb016":"This table gives us the number of days that  bars is closed and that bars employee loses his wage in each state. If we want to calculate the wage losses in hours for this employee, we will calculate the total number of days without work, then we convert into a week (7 days). Considering that the employee's working hours are 60 hours per week. We have what a bartender loses in every state.","f10690ef":"### Unemployment and poverty estimated","b5c736e8":"<a id=\"inter\"><\/a>","2b5a5a83":"You should know that the countries that have fully opened their schools are those who have succeeded in controlling the level of spread of Covid-19 i.e. the recovery rate is higher than the transmission rate with a very low case fatality rate for example Cameroon, China, Japan, etc ...","5f5b1373":"### Gym","72785925":"### Duration school closures\nWe present the duration school closures of each country in the map.","f9d81601":"California and Texas are two states with more total students than Florida, New York, Illinois, Ohio.","21cc638c":"**Definitions attributes**\n\n- **Full school closures** refer to situations where all schools were closed at the nation-wide level due to COVID-19.\n- **Partial school closures** refer to school closures in some regions or for some grades, or with reduced in-person instruction.","04bdd455":"#### Partially open school\nHere, many countries have partially open school in some region and opt digital learning.","8bfeada4":"This graph gives us a square signal with a period to be determined. The periodic form of the signal may be due to the partial opening of schools and academic shutdown of each state and each day.","25f9d9a2":"### Moratorium on evictions currently in place and expired","e1c3b7ea":"<a id = \"closures\"><\/a>","7bd15996":"### Wage losses \n\nLots of families lost their salaries during confinement. When we look at the hourly minimum wage for each state above, we can calculate the lost wages for each state assuming the working hours are 30 hours per week. We take a week equal to 6 days with Sunday as the day of rest.","b9b92fac":"# State intervention, practice or policy.","f9d9ed2d":"# Student engagement and geographic, demographic,  socio-economics status","a9de521a":"ISO3 country have missing value, we can remove it. And also remove column Date from source and also Date update done.","409a036e":"We note that between Q1 and Q2 the index of engagement is 0.6 and drops to 0.5 in Q3 (remember that between Q2 and Q3, we are at the beginning of the holiday) then quickly rises to 1 of Q4.","27bdfaad":"<a id=\"clo\"><\/a>","6a48e94e":"The student engagement index differs considerably between regions. In each region, the states do not have the same trend.\n\nIn the West region, the state of California and Utah reached a million engagement index in the year 2020. On the other hand, the state of Arizona and Washington reached respectively 200,000 and 400,000 engagement index with a decreasing trend. We notice anomalies between the period March 2020 and April 2020.\n\nIn the South region, the states of Virginia, Texas, Tennesses, Florida, North Carolina respectively achieved an engagement index of 500,000, 150,000, 125,000, 150,000 and 400,000 throughout the year 2020. But, we find that the state of North Carolina, Texas, Tennesses suffered an abrupt interruption (for Texas) of engagement index between the period of March to April 2020. This may be caused by the socio-economic situation that through these two states.\n\nOnly the states of Connecticut, New York and Massachusetts in the Northeast region reached respectively 4 millions, one million and 2.5 million engagement index against 300,000 for New Hampshire and 200,000 for New jersey. This difference can be caused by the total number of students from each state.\n\nThe states Indiana, Ohio, Illinois also reached respectively one million and 3 million engagement index with a good trend even as we see an anomaly between March-April 2020. As for the other states of the Midwest region, we observe a good rise in the index after passing the anomaly indicated while Michigan saw its engagement index disappear as an evanescent signal.\n\nWhen we look at the figures, we find that all the states are experiencing a strange anomaly between March-April 2020. After this anomaly has passed, some states such as North Carolina, Tennesses, Texas, Disrict of Columbia and Michigan see their engagement index curve disappear after April 2020.\n\nWe need to know what is causing this anomaly.","bb3effb4":"<a id=\"k12\"><\/a>","43586508":"## Impact of Covid-19 on socio economic","2180a700":"UNEMP18 and POV18 are nonlinear correlated","f595e12f":"According to [The date a state closed K-12 public schools statewide](#k12) chart, we can see that the engagement index increases between Mar-Apr. After decreasing slowly between Apr-Jun, at this time each state opened partially their school. The Sep-2020 to Jan-2021, engagement index increases very fast than the previous academic year (because USA have closed school during 40 weeks, see [Duration school closures](#sch) chart.","4e987ca6":"Majorities of student expends between 8000 and 10000 US dollars.","b8cb65e2":"<a id=\"black\"><\/a>","5ddd7f2d":"74 products have basic function LC-Digital Learning Platform, 47 products have basic function LC-Sites, Ressources and Reference, 36 products have basic function LC-Content Creation and Curation, 25 products have basic function LC-study Tools.","6d482d83":"# II\/ The challenges of the digital learning in USA","90c4c35a":"## Geographic context\nStudent engagement can also vary depending on the geographic context. So we proceed.","a5e9614c":"### Covid-19 impact on education.\n\n**Definition**\n\n- Closed due to COVID-19: Government-mandated closures of educational institutions affecting most or all of the student population enrolled from pre-primary through to upper secondary levels [ISCED levels 0 to 3]. In most cases, various distance learning strategies are deployed to ensure educational continuity.\n- Academic break: Most schools across the country are on scheduled academic breaks. All study during this period is suspended.\nFully open: For the majority of schools, classes are being held exclusively in person, noting that measures to ensure safety and hygiene in schools vary considerably from context to context and\/or by level of education.\n- Partially open: Schools are : (a) open\/closed in certain regions only; and\/or (b) open\/closed for some grade levels\/age groups only; and\/or (c) open but with reduced in-person class time, combined with distance learning (hybrid approach).","71574229":"22 states gives connection ratio to residents between 0.18 and 1. Only Rural locate (North Dakota state) give connection ratio between 1 and 2.","297c529f":"Illinois and Michigan close casinos","d4d5e2a1":"## Impact of Covid-19 on socio-economic","9926bc7a":"# Part II: The challenges of the digital learning in USA\n\nNow, we work with an engagement data. To begin, we interest us only with a first five companies more represented in data.","9d4844cd":"### Cinema and wage loss per hour","fd056618":"<a id=\"socio\"><\/a>","df89e8f2":"By observing this graph, we see that\n\n- the state of Michigan is closing bars, cinemas and theaters, restaurants and casinos. It took less than 100 days for it to open cinemas and theaters, restaurants and finally casinos. But for the opening of the bars, it took more than 50 days. Michiqan has opted to reopen activities gradually.\n- the state of Illinois has opted to reopen bars, restaurants, casinos, etc. globally within 80 days.\n\nThe employees of each activity in each state have a considerable wage losses which has a huge impact on the payment of rent, internet subscription, etc ... Which can hinder the digital learning of his children.","087274b9":"<a id=\"mora\"><\/a>","fa868ffb":"## Closing and reopening of bars, restaurants, casinos, gym, etc.\nWe will see how the interventions, practices or policies of the state evolve and the correlation with an engagement index.\n\nTo do so, we will study the behavior of bars, cinema, hairdressing salon, gym, restaurant, casinos according to the strategy of each state to fight against Covid-19. Then we observe the decisions made on the closing and opening of its economic activities.","a7130859":"Fully open and Academic break are majorities in this data. Between 2020-02-17 to 2021-07-31, we are going to see how different countries, Covid-19 impact education.","5b0c49d8":"# I\/ School closures in the worldwide ","dc4c9e95":"<a id=\"digi2020\"><\/a>","79c20482":"### Source: \n- [Impact of COVID-19 on education in the United States](https:\/\/en.wikipedia.org\/wiki\/Impact_of_COVID-19_on_education_in_the_United_States)\n- [UNESCO School Closures](https:\/\/data.humdata.org\/showcase\/unesco-school-closures)\n- [Global School Closures COVID-19](https:\/\/data.humdata.org\/m\/dataset\/global-school-closures-covid19)\n- [US school closure & distance learning database](https:\/\/osf.io\/tpwqf\/files\/)\n- [EuropeanSchoolnet](http:\/\/www.eun.org\/news\/detail?articleId=4993184)\n- [Parolin, Z., Lee, E.K. (2021) Large socio-economic, geographic and demographic disparities exist\nin exposure to school closures. Nature Human Behaviour](https:\/\/www.nature.com\/articles\/s41562-021-01087-8)\n- [South Africa: COVID-19, schools reopening and digital learning](https:\/\/blogs.unicef.org\/blog\/south-africa-covid-19-schools-reopening-digital-learning\/)\n- [ COVID-19 US State Policy database](https:\/\/www.openicpsr.org\/openicpsr\/project\/119446\/version\/V75\/view;jsessionid=851ECB80E6CB42252D396C29564184DC)\n","c07110d9":"#### Closed due to Covid-19\nCountries without control over the evolution of the pandemic find themselves constrained to close their schools and then use digital learning as recommended by UNESCO. This situation can be changed.","6e1a9945":"Student engagement will vary depending on the type of educational technology; if a technology offers ease of internet access and use then teaching will be easy for students and also for teachers.\n\nIf technology is moving towards the basic need of students and teachers then engagement will be positive. For example if we take Google Docs, Youtube and Meet we see that their curve is increasing and stabilizing, which means that the students acquire knowledge positively.\n\nOther technology does not follow.","70e993c0":" # The picture of digital connectivity and engagement in 2020\n According to the [Black\/Hispanic Student Connectivity](#black), digital connectivity is between [36kbps, 200kbps]. And below, we will take a look at how engagement behaves.","a928d7f8":"23 products of google llc works in PreK-12; Higher Ed; Corporate sector againt 2 in PreK-12 and 2 in PreK-12; Higher Ed.","d005f15f":"By this four figures, we see that engagement index is different in each demographic. California and Texas have huge students population but engagement index for Texas is very low and also between February to May 2020 is practically equal to zeros.\n\nWe see again a same behavior between Florida and New York.","d70f4b6d":"### Moratorium on eviction currently in place and student engagement\n\nHere, we are studying how student engagement evolves with a moratorium currently in place.","c3b6c076":"This graph shows that many black or hispanic student have connection ratio in their resident between 0.18 and 1. And only 20% of black\/hispanic student have connection ratio between 1 and 2.","03b6a7f3":"Through this graph, we see that some states have improved their minimum hourly wages. The state of Connecticut gains one more place and finds itself 6th on the list of September 2020. Illinois, which was 11th in the list of January 2020 by improving its minimum hourly wage of 0.75 dollars, gains two places and is \nnow  9th of the September 2020 list.\n\nSurely the confinement is responsible for improving the hourly minimum wage.","74b83379":"During the school period (Mar-Aug 2020) on time of the peak of pandemic (in March, Europe was the main focus with Italy), USA had not completely closed its schools as well as this school year Sep 2020-Jun 2021. USA have opted for the partial closure of schools between March-August 2020 with a duration of 19 weeks. Unfortunately, this partial closure increases by 20 more weeks (see table below) i.e. a total of 39 weeks. This is the cause of the 3rd or 4th waves and the delta variant also that the inefficient of vaccine against disease.\n\nBetween the Sep 2020-Jun 2021 school year, many countries are using digital learning recommended by UNESCO. Therefore, many countries have undergone third or fourth wave and variant Covid-19 for example, USA(Cal.C20), Brazil(P.4), India (hybrid variant), England(Delta) etc ...\n\nN.B: The duration of school closure depends on the pandemic control of the country.","4594aa11":"In this first part, we learn that:\n\n- All black\/hispanic students have in their resident connection ratio between 0.18 and 1.0 everywhere.\n\n- Majorities of students expends betwween 8000 and 10000 US dollars.\n\n- pct_black\/hispanic and pct_free\/reduced seems to trend together.\n\n- Google LLC is the company that is most represented in the digital learning following by Microsoft and Houghton Mifflin Harcourt company.","f9bda2fd":"In the same way as for the bar we have.","54b6924f":"### Status map\nWe create new data to map the different status.","4af6497c":"#### The date a state closed K-12 public schools statewide","5248f853":"<a id=\"usc\"><\/a>","6ddddcfa":"<a id=\"usr\"><\/a>","116e7ab0":"A little bit of change here.","9ee2bbc0":"## Demographic context\nWe know that engagement_index is the total page-load events per one thousand students of a given product and on a given day. We are going to see how engagement_index evolves in each demographic state.","cb128cad":"# COVID-19 Impact on Digital Learning\n\n**Summary**\n\nThis report represents my analysis of Covid-19 impact on digital learning (LearnPlatform). The data in my possession enabled me to highlight the following three essential points on student engagement.\n- Students' engagement in digital learning is best if educational technology (Google Docs, Google Meet, etc.) allows students to have easy and reliable internet access connectivity. And also, it goes to the basic needs of the students and the teachers.\n- The socio-economic aspect is the main problem which can decrease the engagement of the pupils because a parent who has a wage loss during the confinement of the population and the closure of economic activities can lead him to a poverty, to an expulsion of home, abrupt stopping or absenteeism of his child in digital learning.\n- To reduce the impact of Covid-19 on the socio-economic life, some American states have preferred to increase the minimum hourly wage and to reopen certain economic activities.To solve the problem of eviction from home, some American states have chosen to give moratoriums on evictions to homeowners (some are still active; others are expired). Thanks to this, we observe an improvement in student engagement in some states.","c355eec5":"Only 41.2% of the states had chosen to close school on 2020-03-16 00:00:00. And the next day, 17.6% of the states had also chosen to close school.","b39e9d58":"## Introduction\n\nThe Covid-19 pandemic has affected education systems around the world, leading to the near total closure of schools, early childhood education and care services, universities and colleges. Most governments decided to temporarily shut down an educational institution in an attempt to reduce the spread of covid-19. As of January 2021, around 825 million learners are affected due to school closures in response to the pandemic.\n\nTherefore, UNESCO has recommended the use of distance learning programs and open educational apps and platforms that schools and teachers can use to reach distance learners and limit disruption to education.\n\n![unicef](https:\/\/s32152.pcdn.co\/wp-content\/uploads\/2020\/10\/Digital-Learning_South-Africa-UNI363429.jpg)\n\n### The consequences of Covid-19 on education in the United States\n1. In March 2020, schools in the United States began to close.\n2. 55.1 million students in 124,000 US public and private schools are affected by school closures.\n3. The effect of the generalized closure of schools has been felt nationwide and has worsened several social inequalities, gender, technology, academic success, etc ...\n4. Most schools shifted to online learning that lead an another problem like unequal access to technology, unequal access to educational resource, absenteeism of students and accomodation for special needs student, etc...","cc335f4d":"**Duration bars closures**","34619cfe":"By this graph, Google LLC is the provider most represented in data 30 products; follows by four others provider which are Houghton Mifflin Harcourt 6 products, Microsoft products, Learning A-Z 4 products, IXL Learning 4 products.","7c355964":"# The effect of the COVID-19 pandemic on online and distance learning,\n\n It was on March 13, 2020 that Trump declared COVID-19 a national emergency. March 19, 2020 - California issues statewide stay-at-home order. Three days before i.e. March 16, 2020 41.2% of states closed K-12 schools and the next 2 days 17.6% and 13.7% of states in the USA were doing the same. (see: [The date a state closed K-12 public schools statewide](#k12)).\n\nBetween March-August 2020 in USA, the partial closure of schools lasted 19 weeks while for this year i.e. Sep 20-Jun 21 it lasted 39 weeks so 20 more than that of last year (see: [Duration school closures](#sch). This is the reason why in the following figure we see a higher engagement.","f254602c":"### State of emergency and shelter\n\nThe majority of states have not stopped the state of emergency.\n\n**N.B:** 0 means not implemented.","4dbbfd86":"# Part I: district study\n\nin this part, we study a district csv file.","f23fc927":"### Houghton Mifflin Harcourt company","fcc9f38e":"## Engagement by weekly, monthy and quarterly","0468a26a":"Just only microsoft office 365 and microsoft onedrive have a good pct access. We see it on engagement index.","e55906e6":"<a id=\"student\"><\/a>","11a7cd39":"## EduTech: Learning A-Z and IXL Learning","d1f85805":"According to the evolution of the pandemic between the two dates given on the graph, we see that the countries tends to adopt the four situations and others not.\n\nFor example, the majorities of African countries have fully opened their schools over a very long period. Others have completely closed schools because of Covid-19 to continue digital learning, for example Mexico, Brazil and India.\n\nFor USA, we see that the four situations are present despite the partial opening of schools and the end of academic teaching are majorities. You should know that in USA, it is the states that defines their type of strategy on the issue of the impact of covid-19 on education.","05a80a25":"<a id=\"prov\"><\/a>","1877aac0":"As we can see the engagement index goes with the number of students that has each state. Some states have higher minimum engagement index than others. Also, some state have good observation on engagement index and others have outliers.","e54ba641":"## Overall moratoriums on evictions","e7875353":"## Company exploration and visualization\nWe are going to study a first five companies (Google LLC, Houghton Mifflin Harcourt, Microsoft, Learning A-Z, IXL Learning) more represented in the data. To do so, we are find\n\n- how many product provide company?\n- in what sector are products?\n- what is its function?","13537317":"## EDA & Visualization","c1470b2a":"### Restaurants and wage loss per hour","042be4cf":"# Student engagement and the type of education technology\nWe use five provider more represented which are: Google LLC, Microsoft, Houghton Mifflin Harcourt, Learning A-Z, IXL Learning. See: [provider](#prov)"}}