{"cell_type":{"6eef31ae":"code","12e3b889":"code","61d97a39":"code","992c7933":"code","267dbcee":"code","5e295a7c":"code","8fbcd33a":"code","383d4768":"code","2459535d":"code","752c6547":"code","80ec3e30":"code","67341a9d":"code","c85143cd":"code","896c6568":"code","fac49032":"code","4228d790":"code","2b832147":"markdown","581bf1f3":"markdown","208aedbf":"markdown","621dc7bc":"markdown","eb13cd9c":"markdown","2a1cdce2":"markdown","09dab6a6":"markdown","04e512a4":"markdown","f1833f21":"markdown","133a86a1":"markdown","8b7b73f7":"markdown","23601dd1":"markdown","600a50f2":"markdown","e685e262":"markdown"},"source":{"6eef31ae":"import numpy as np\nimport pandas as pd","12e3b889":"df = pd.read_csv('..\/input\/baseball_reference_2016_scrape.csv')","61d97a39":"df['attendance'] = df['attendance'].apply(lambda x: x.strip(\"]'\"))\ndf['game_duration'] = df['game_duration'].apply(lambda x: x.strip(\": \"))\ndf['venue'] = df['venue'].apply(lambda x: x.strip(\" :\"))\ndf['start_time'] = df['start_time'].apply(lambda x: x.strip(\"Start Time: \"))","992c7933":"df['attendance'] = df['attendance'].str.replace(' ', '')\ndf['attendance'] = df['attendance'].str.replace(',', '')\ndf['day_of_week'] = df['date'].str.split(',', 3, expand=True)[0]\ndf['game_type_remove'] = df['game_type']\ndf['game_type'] = df['game_type_remove'].str.split(',', 2, expand=True)[0]\ndf['field_type'] = df['game_type_remove'].str.split(',', 2, expand=True)[1]\ndf['field_type'] = df['field_type'].str.replace(' on', 'on')","267dbcee":"df['start_time_weather'] = df['other_info_string'].str.split('<\/strong> ', 5, expand=True)[5]\n\nn = 0\nfor weather in df['start_time_weather']:\n    if df.loc[n, 'start_time_weather']==None:\n        df.loc[n, 'start_time_weather'] = df['other_info_string'].str.split('<\/strong> ', 5, expand=True)[4][n]\n        n += 1\n    else:\n        n+= 1\n        \ndf['temperature'] = df['start_time_weather'].str.split('&', 2, expand=True)[0]\ndf['start_time_weather1'] = df['start_time_weather'].str.split(', ', 3, expand=True)[1]\ndf['start_time_weather2'] = df['start_time_weather'].str.split('Wind ', 3, expand=True)[1]\ndf['start_time_weather3'] = df['start_time_weather2'].str.split('.', 2, expand=True)[0]\ndf['wind_speed'] = df['start_time_weather3'].str.split(', ', 2, expand=True)[0]\ndf['wind_speed'] = df['start_time_weather3'].str.split('mph', 2, expand=True)[0]\ndf['wind_speed'] = df['start_time_weather3'].str.split('mph', 2, expand=True)[0]\ndf['start_time_weather3'] = df['start_time_weather3'].str.split('mph', 2, expand=True)[1]\ndf['wind_direction'] = df['start_time_weather3'].str.split(', ', 2, expand=True)[0]\ndf['sky'] = df['start_time_weather3'].str.split(', ', 2, expand=True)[1]","5e295a7c":"df['total_runs'] = df['away_team_runs'] + df['home_team_runs']","8fbcd33a":"df.loc[220, 'attendance'] = None\ndf.loc[220, 'game_duration'] = '3:18'\ndf.loc[220, 'game_type'] = 'Day Game'\ndf.loc[220, 'field_type'] = 'on grass'\ndf.loc[220, 'venue'] = 'Citi Field'\n\ndf.loc[1724, 'attendance'] = None\ndf.loc[1724, 'game_duration'] = '2:40'\ndf.loc[1724, 'game_type'] = 'Day Game'\ndf.loc[1724, 'field_type'] = 'on grass'\ndf.loc[1724, 'venue'] = 'PNC Park'\n\ndf.loc[1912, 'attendance'] = None\ndf.loc[1912, 'game_duration'] = '3:10'\ndf.loc[1912, 'game_type'] = 'Day Game'\ndf.loc[1912, 'field_type'] = 'on grass'\ndf.loc[1912, 'venue'] = 'U.S. Cellular Field'","383d4768":"df['attendance'] = df['attendance'].astype(float)\ndf['date'] = pd.to_datetime(df['date'])\ndf['temperature'] = df['temperature'].astype(float)\ndf['wind_speed'] = df['wind_speed'].astype(float)\ndf['game_hours_dec'] = df['game_duration'].str.split(':', 2, expand=True)[1].astype(float)\/60 + df['game_duration'].str.split(':', 2, expand=True)[0].astype(float)","2459535d":"df['sky'] = df['sky'].astype(object).fillna('Unknown')\n\nn = 0\nfor wind_direction in df['wind_direction']:\n    if df.loc[n, 'wind_direction']=='':\n        df.loc[n, 'wind_direction'] = ' in unknown direction'\n        n += 1\n    elif df.loc[n, 'wind_direction']==' ':\n        df.loc[n, 'wind_direction'] = ' in unknown direction'\n        n += 1\n    else:\n        n+= 1","752c6547":"df.drop(['boxscore_url','game_duration','game_type_remove','other_info_string','start_time_weather','start_time_weather1','start_time_weather2','start_time_weather3'],axis=1,inplace=True)","80ec3e30":"df['season'] = 0\nn = 0\nfor date in df['date']:\n    if df.loc[n, 'date'].month==10 and df['date'][n].day > 2:\n        df.loc[n, 'season'] = 'post season'\n        n += 1\n    elif df.loc[n, 'date'].month==11:\n        df.loc[n, 'season'] = 'post season'\n        n += 1\n    else:\n        df.loc[n, 'season'] = 'regular season'\n        n += 1","67341a9d":"df['home_team_win'] = 0\nn = 0\nfor win in df['home_team_win']:\n    if df.loc[n, 'home_team_runs'] > df['away_team_runs'][n]:\n        df.loc[n, 'home_team_win'] = 1\n        n += 1\n    else:\n        df.loc[n, 'home_team_win'] = 0\n        n += 1","c85143cd":"df['home_team_loss'] = 0\nn = 0\nfor win in df['home_team_loss']:\n    if df.loc[n, 'home_team_runs'] < df['away_team_runs'][n]:\n        df.loc[n, 'home_team_loss'] = 1\n        n += 1\n    else:\n        df.loc[n, 'home_team_loss'] = 0\n        n += 1","896c6568":"df['home_team_outcome'] = 0\nn = 0\nfor win in df['home_team_outcome']:\n    if df.loc[n, 'home_team_runs'] > df['away_team_runs'][n]:\n        df.loc[n, 'home_team_outcome'] = 'Win'\n        n += 1\n    else:\n        df.loc[n, 'home_team_outcome'] = 'Loss'\n        n += 1","fac49032":"df.info()","4228d790":"df.to_csv('baseball_reference_2016_clean.csv')","2b832147":"filling in missing data","581bf1f3":"### ** Cleaning Data Scraped from Baseball-Reference.com **","208aedbf":"export cleaned data to csv","621dc7bc":"create a column to state a home team win or loss","eb13cd9c":"cleaning and adjusting the weather column, currently titled as 'other_info_string'\n","2a1cdce2":"dropping columns from the dataframe that will not be needed","09dab6a6":"splitting columns from the dataframe","04e512a4":"creating a new field to differentiate between reular season and post season games","f1833f21":"create a column for total runs","133a86a1":"create a column to count the number of home team wins","8b7b73f7":"create a column to count the number of home team losses","23601dd1":"changing data types","600a50f2":"adjusting for missing data that caused misalignment in initial scrape","e685e262":"stripping extraneous characters from columns in the dataframe"}}