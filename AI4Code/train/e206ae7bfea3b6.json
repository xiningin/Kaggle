{"cell_type":{"f64f729e":"code","9215a90c":"code","53c71f16":"code","54b25695":"code","b0b75143":"code","505e77ef":"code","08c4d635":"markdown","111a6c2c":"markdown","b26dab6f":"markdown","f94747f9":"markdown"},"source":{"f64f729e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9215a90c":"df1 = pd.read_csv('\/kaggle\/input\/the-human-freedom-index\/hfi_cc_2020.csv')\ndf2 = pd.read_csv('\/kaggle\/input\/the-human-freedom-index\/hfi_cc_2019.csv')\ndf3 = pd.read_csv('\/kaggle\/input\/the-human-freedom-index\/hfi_cc_2018.csv')\ndf = pd.concat([df1, df2, df3])\ndf","53c71f16":"cual = list()\ncuant = list()\nfor col, typ in zip(df.columns,df.dtypes):\n    if typ == np.int64:\n        cuant.append(col)\n    elif typ == np.float64:\n        cuant.append(col)\n    else:\n        cual.append(col)\nprint(cual)\nprint(cuant)","54b25695":"for i in cuant:\n    print(f'{i}: {np.max(df[i])-np.min(df[i])}')","b0b75143":"from scipy import stats \n\nfor i in df:\n    if i in cuant: print(f'{i}: {np.mean(df[i])}')\n    elif i in cual: print(f'{i}: {df[i].mode()[0]}')","505e77ef":"for i in cuant:\n    print(f'{i}: {df[i].max()-df[i].min()} | {np.var(df[i])} | {np.std(df[i])}')","08c4d635":"### Obt\u00e9n una lista con los atributos cuantitativos y otra lista con los atributos cualitativos.","111a6c2c":"### Define el rango de cada uno de los atributos (cuantitativos).","b26dab6f":"### Obt\u00e9n la moda o promedio dependiendo el caso para cada atributo.","f94747f9":"### Obt\u00e9n el rango, varianza, desviaci\u00f3n estandar para los atributos cuantitativos."}}