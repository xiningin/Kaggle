{"cell_type":{"92a92136":"code","aa5ac1f4":"code","eadddc9c":"code","d3a4210c":"code","f62f06d6":"code","fd9b4790":"code","65b57032":"code","cc99739a":"code","2a92322b":"code","19cd267b":"code","ee4a7a9a":"code","83c28a4e":"code","ccdbf5da":"code","77fda77c":"code","b9dc1418":"code","5a16d8ef":"code","f57aee44":"code","e98a11bb":"code","cd3ba845":"code","354f1458":"code","32c03cea":"code","5d5defd7":"code","e8e35a69":"code","75ad1b0f":"code","2ae2472e":"code","a37c99bc":"code","b2331bd3":"code","689f6c76":"code","d90c2f76":"markdown","911bde0c":"markdown","e015370b":"markdown","956c96b4":"markdown","e7b214c3":"markdown","144bba0d":"markdown","c3bdde97":"markdown","638aac98":"markdown","c1e6b8f9":"markdown","e2f566d7":"markdown","298b4166":"markdown","b7df474b":"markdown","94a1ed2a":"markdown","60b3e43d":"markdown","2d1ff894":"markdown","a3a968f9":"markdown","abe7f7ce":"markdown","85a205c2":"markdown"},"source":{"92a92136":"import pandas as pd\nimport sklearn\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nfrom sklearn import preprocessing as prep\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap\nimport numpy as np","aa5ac1f4":"nomes = [\"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n            \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n            \"Hours per week\", \"Country\", \"Target\"]\n\ntrain_data = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\", names = nomes,\n        sep= r'\\s*,\\s*',\n        engine= 'python',\n        na_values= \"?\")\n\ntrain_data = train_data.iloc[1:]\ntrain_data.shape","eadddc9c":"train_data.head()","d3a4210c":"nomes = [\"Id\", \"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n            \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n            \"Hours per week\", \"Country\", \"Target\"]\ntest_data = pd.read_csv(\"..\/input\/adult-pmr3508\/test_data.csv\", names = nomes,\n        sep= r'\\s*,\\s*',\n        engine= 'python',\n        na_values= \"?\")\n\ntest_data.shape","f62f06d6":"test_data.head()","fd9b4790":"plt.title('Age')\nplt.ylabel('Adults')\nplt.xlabel('Age')\nplot_data = train_data[\"Age\"].value_counts()\nplot_data.plot(kind = \"line\", sharex=False)\n#plt.legend()\nplt.show()","65b57032":"plot_data = train_data[\"Workclass\"].value_counts().copy()\nplot_data.plot(kind = \"bar\", fontsize=12)\nplt.title('Workclass')\nplt.ylabel('Adults')\nplt.show()","cc99739a":"plot_data = train_data[\"Education\"].value_counts().copy()\nplot_data.plot(kind = \"bar\", fontsize=10)\nplt.title('Education')\nplt.ylabel('Adults')\nplt.show()","2a92322b":"plot_data = train_data[\"Martial Status\"].value_counts().copy()\nplot_data.plot(kind = \"bar\")\nplt.title('Martial Status')\nplt.ylabel('Adults')\nplt.show()\n","19cd267b":"plot_data = train_data[\"Occupation\"].value_counts().copy()\nplot_data.plot(kind = \"bar\", fontsize=10)\n\nplt.title('Occupation')\nplt.ylabel('Adults')\nplt.show()","ee4a7a9a":"plot_data = train_data[\"Relationship\"].value_counts().copy()\nplot_data.plot(kind = \"pie\", fontsize=8, ylabel=\"\")\nplt.title('Relationship')\nplt.show()","83c28a4e":"plot_data = train_data[\"Race\"].value_counts().copy()\nplot_data.plot(kind = \"pie\", legend=True, fontsize=0, ylabel=\"\")\n\nplt.title('Race')\nplt.show()","ccdbf5da":"plot_data = train_data[\"Sex\"].value_counts().copy()\nplot_data.plot(kind = \"pie\", ylabel=\"\", autopct='%1.0f%%', radius=1)\n\nplt.title('Sex')\nplt.show()","77fda77c":"plot_data = train_data[\"Country\"].value_counts().copy()\n\nus_data = plot_data[0]\nmex_data = plot_data[1]\nothers_data = 0\ni = 2\nwhile i < len(plot_data): \n    others_data += plot_data[i]\n    i += 1\n    \nx = ['United States', 'Mexico','Others']\ny = [us_data, mex_data, others_data]\n\nplt.bar(x, y)\nplt.title('Countries (US | Mex | Others)')\nplt.show()\n    \nplot_data.iloc[2:].plot(kind = \"bar\", fontsize=8)\n\nplt.title('Countries (Others)')\nplt.ylabel('Adults')\nplt.show()","b9dc1418":"def bar_plot(data, hue, by=\"Target\", size=20, normalize_by_index = True):\n    index = data[by].unique()\n    \n    columns = data[hue].unique()\n  \n    data_to_plot = pd.DataFrame({'index': index})\n    \n    for column in columns:\n        temp = []\n        for unique in index:\n            filtered_data = data[data[by] == unique]\n            filtered_data = filtered_data[filtered_data[hue] == column]\n            \n            temp.append(filtered_data.shape[0])\n        data_to_plot = pd.concat([data_to_plot, pd.DataFrame({column: temp})], axis = 1)\n        \n    data_to_plot = data_to_plot.set_index('index', drop = True)\n    \n    if normalize_by_index:\n        for row in index:\n            data_to_plot.loc[row] = data_to_plot.loc[row].values\/data_to_plot.loc[row].values.sum()\n    \n    ax = data_to_plot.plot.bar(rot=0, figsize = (14,7), alpha = 0.9, cmap = 'Wistia', xlabel=\"\", fontsize=size)","5a16d8ef":"bar_plot(train_data, 'Education')","f57aee44":"bar_plot(train_data, 'Race')","e98a11bb":"bar_plot(train_data, 'Sex')","cd3ba845":"train_data.isnull().sum()","354f1458":"moda_workclass = train_data['Workclass'].describe().top\ntrain_data['Workclass'] = train_data['Workclass'].fillna(moda_workclass)\n\nmoda_occupation = train_data['Occupation'].describe().top\ntrain_data['Occupation'] = train_data['Occupation'].fillna(moda_occupation)\n\nmoda_country = train_data['Country'].describe().top\ntrain_data['Country'] = train_data['Country'].fillna(moda_country)","32c03cea":"moda_workclass = test_data['Workclass'].describe().top\ntest_data['Workclass'] = test_data['Workclass'].fillna(moda_workclass)\n\nmoda_occupation = test_data['Occupation'].describe().top\ntest_data['Occupation'] = test_data['Occupation'].fillna(moda_occupation)\n\nmoda_country = test_data['Country'].describe().top\ntest_data['Country'] = test_data['Country'].fillna(moda_country)","5d5defd7":"train_data = train_data.apply(prep.LabelEncoder().fit_transform)\ntest_data = test_data.apply(prep.LabelEncoder().fit_transform)\n\ntrain_data.head()\n","e8e35a69":"features = [\"Age\", \"Workclass\", \"Education\", \"Occupation\", \"Race\", \"Capital Gain\", \"Capital Loss\", \"Hours per week\"]\n\nx_train = train_data[features]\ny_train = train_data.Target\n\nx_test = test_data[features]\ny_test = test_data.Target","75ad1b0f":"knn = KNeighborsClassifier(n_neighbors = 5)\n\nscores = cross_val_score(knn, x_train, y_train, cv=10)\nscores.mean()","2ae2472e":"inf = 1\nsup = 35\n\nscores_media = []\naux = 0\nk_max = 0\n\ni = 0\nfor k in range(inf, sup):\n    knn = KNeighborsClassifier(n_neighbors = k)\n    scores = cross_val_score(knn, x_train, y_train, cv=10)\n    scores_media.append(scores.mean())\n\n    if scores_media[i] > aux:\n        k_max = k\n        aux = scores_media[i]\n\n    i = i + 1\n\nx = np.arange(1, sup)\n\nknn = KNeighborsClassifier(n_neighbors = k_max)\n\nscores = cross_val_score(knn, x_train, y_train, cv=10)\ny = scores.mean()\n\nplt.figure(figsize=(10, 5))\nplt.plot(x, scores_media, '--', color = 'red', linewidth = 2)\nplt.plot(k_max, y, 'o')\n\nplt.xlabel('K')\nplt.ylabel('Acur\u00e1cia')\nplt.title('Acur\u00e1cia da predi\u00e7\u00e3o  X  Valor de K')\n\nprint(k_max)","a37c99bc":"knn = KNeighborsClassifier(n_neighbors = 20)\n\nscores = cross_val_score(knn, x_train, y_train, cv=10)\nscore = scores.mean()\n\nprint('Acur\u00e1cia para k = {0} : {1:2.2f}%'.format(k_max, 100 * score))","b2331bd3":"knn.fit(x_train, y_train)\npredict_knn = knn.predict(x_test)","689f6c76":"valores_originais = {0: '<=50K', 1: '>50K'}\npredicao = np.array([valores_originais[i] for i in predict_knn], dtype=object)\n\nsubmission = pd.DataFrame()\n\nprint(len(test_data.index), len(predicao))\n\nsubmission[0] = test_data.index\nsubmission[1] = predicao\nsubmission.columns = ['Id', 'Income']\n\nsubmission.to_csv('final_results.csv',index = False)","d90c2f76":"# Nesse momento transformaremos os dados n\u00e3o-num\u00e9ricos em dados num\u00e9ricos:","911bde0c":"# Finalmente, vamos transformar de volta os valores num\u00e9ricos da feature \"Income\" a <=50K e >50K\n# Ent\u00e3o escreveremos a predi\u00e7\u00e3o no csv:","e015370b":"        N \u00baUsp: 11871326\n        Data: 08\/09\/2020","956c96b4":"# Em seguida, importamos os dados do csv:","e7b214c3":"# Agora vamos analizar os dados, atrav\u00e9s de graficos, para ver quais devem ser descartados para a predi\u00e7\u00e3o:  ","144bba0d":"# Encontraremos o melhor valor para o hyperpar\u00e2metro K: ","c3bdde97":"Assim, vimos que o valor ideal para K \u00e9 20","638aac98":"# Primeiramente, importaremos tudo o que vamos precisar:","c1e6b8f9":"# Nesse ponto vamos dividir os dados em X e Y para posteriormente coloc\u00e1-los no classificador:","e2f566d7":"# Fazemos ent\u00e3o a valida\u00e7\u00e3o cruzada desses dados:","298b4166":"**Conclus\u00f5es:**\n1. A feature \"Country\" deve ser descartada, uma vez que US \u00e9 a esmagadora maioria     \n2. A feature \"fnlwgt\", por n\u00e3o ter nenhuma const\u00e2ncia ou rela\u00e7\u00e3o com a predi\u00e7\u00e3o, tamb\u00e9m ser\u00e1 descartada\n3. Ser\u00e1 utilizada a feature \"Education-Num\" e n\u00e3o a \"Education\", pois j\u00e1 est\u00e1 com valores num\u00e9ricos","b7df474b":"Nota-se que as features \"Workclass\", \"Occupation\" e \"Country\" concentram os dados faltantes\n\n# Assim, iremos substituir esses dados pela moda nas respectivas features:","94a1ed2a":"# Portanto, ap\u00f3s analizar e preparar os dados e trein\u00e1-los no modelo KNN, obtivemos como melhor resultado 81% de acur\u00e1cia na predi\u00e7\u00e3o, o que \u00e9 um valor bastante aceit\u00e1vel no caso.","60b3e43d":"# Finalmente, colocaremos esses dados no classificador Knn e observar sua acur\u00e1cia:","2d1ff894":"# Compararemos agora alguns dados em rela\u00e7\u00e3o \u00e0 feature \"income\":","a3a968f9":"# Analizemos agora os dados faltantes:","abe7f7ce":"Vale notar aqui que h\u00e1 uma vers\u00e3o numrica desssa feature, \"Education-Num\" que ser\u00e1 mais util na predi\u00e7\u00e3o","85a205c2":"Ao comparar as features \"Race\" e \"Sex\" com \"income\", \u00e9 poss\u00edvel perceber as desigualdades existentes entre brancos e negros e homens e mulheres na quest\u00e3o da renda. J\u00e1 na feature \"Education\" pode-se notar que a renda \u00e9 de certa forma distribuida proporcionalmente \u00e0 quantidade de cada grupo, e n\u00e3o que quanto mais estudo maior a renda, como muitos pensam."}}