{"cell_type":{"9808c215":"code","a5f084e8":"code","2b89fcfa":"code","9c528683":"code","e5c8e8af":"code","369108f8":"code","3e973109":"code","e78cbc11":"code","18207ba8":"code","54eae144":"code","b0b7a59e":"code","925c5895":"code","cc11b031":"code","c8855b1b":"code","5186a01a":"code","ec7db258":"code","40bb231e":"code","c91688a2":"code","c4a2d905":"code","23ab1d2e":"code","afe9cef2":"code","064d0509":"code","97dbe39d":"code","bff16e83":"code","ed57a201":"markdown","81e87678":"markdown","c29d26d6":"markdown","54fb7866":"markdown","2047858c":"markdown","fd46a5e3":"markdown","60adb1e0":"markdown","6f0d3d5d":"markdown","6594a2f4":"markdown","e51994ff":"markdown"},"source":{"9808c215":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport sqlite3\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\ndatabase = \"..\/input\/database.sqlite\"  #Insert path here\n\n# Any results you write to the current directory are saved as output.","a5f084e8":"conn = sqlite3.connect(database)\n\ntables = pd.read_sql(\"\"\"SELECT *\n                        FROM sqlite_master\n                        WHERE type='table'\n                     \"\"\", conn)\ntables","2b89fcfa":"salaries = pd.read_sql('''SELECT *\n                         FROM Salaries\n                      ''', conn ) \nsalaries.head()","9c528683":"rich_employees = pd.read_sql(''' SELECT EmployeeName, BasePay\n                                 FROM Salaries\n                                 WHERE BasePay > 300000''', conn)\nrich_employees.head()","e5c8e8af":"medium_employees = pd.read_sql(''' SELECT EmployeeName, BasePay\n                                   FROM Salaries\n                                   WHERE BasePay BETWEEN 200000 AND 300000 ''', conn)\nmedium_employees.head()","369108f8":"not_ford = pd.read_sql(''' SELECT EmployeeName, BasePay\n                           FROM Salaries\n                           WHERE BasePay IN (167411.18,155966.02,212739.13) \n                           LIMIT 10\n                        ''', conn)\nnot_ford","3e973109":"employee_2011 = pd.read_sql(''' SELECT EmployeeName, TotalPay, Year  \n                                FROM Salaries\n                                WHERE Year = '2011'\n                                LIMIT 10\n                                       ''', conn)\nemployee_2011","e78cbc11":"employee_2011_2012 = pd.read_sql(''' SELECT EmployeeName, TotalPay, Year  \n                                     FROM Salaries\n                                     WHERE Year BETWEEN '2011' AND '2012'\n                                       ''', conn)\nemployee_2011_2012.tail()","18207ba8":"last_name_Carajan = pd.read_sql(''' SELECT EmployeeName, JobTitle, BasePay \n                                    FROM Salaries\n                                    WHERE EmployeeName LIKE '%Carajan' \n                                    ''', conn)\nlast_name_Carajan","54eae144":"start_with_j = pd.read_sql(''' SELECT EmployeeName, JobTitle \n                               FROM Salaries\n                               WHERE EmployeeName LIKE 'j%'\n                               LIMIT 10\n                           ''', conn)\nstart_with_j","b0b7a59e":"second_letter_j = pd.read_sql(''' SELECT EmployeeName, JobTitle \n                                  FROM Salaries\n                                  WHERE EmployeeName LIKE '_j%'\n                                  LIMIT 10\n                              ''', conn)\nsecond_letter_j","925c5895":"third_letter_j = pd.read_sql(''' SELECT EmployeeName, JobTitle \n                                 FROM Salaries\n                                 WHERE EmployeeName LIKE '__j%'\n                                 LIMIT 10\n                             ''', conn)\nthird_letter_j","cc11b031":"last_letter_j = pd.read_sql(''' SELECT EmployeeName, JobTitle \n                                FROM Salaries\n                                WHERE EmployeeName LIKE '%j'\n                                LIMIT 10\n                             ''', conn)\nlast_letter_j","c8855b1b":"start_with_j_end_with_j = pd.read_sql(''' SELECT EmployeeName, JobTitle \n                                          FROM Salaries\n                                          WHERE EmployeeName LIKE 'j%j'\n                                          LIMIT 10\n                                      ''', conn)\nstart_with_j_end_with_j","5186a01a":"job_start_with_captain = pd.read_sql(''' SELECT EmployeeName, JobTitle\n                                         FROM Salaries\n                                         WHERE JobTitle LIKE 'captain%'\n                                         LIMIT 10\n                                         ''', conn)\njob_start_with_captain","ec7db258":"other_pay_end_16 = pd.read_sql(''' SELECT EmployeeName, OtherPay\n                                   FROM Salaries\n                                   WHERE OtherPay LIKE '%16'\n                                   LIMIT 10\n                                ''', conn)\nother_pay_end_16","40bb231e":"other_pay_start_with_20_end_16 = pd.read_sql(''' SELECT EmployeeName, OtherPay\n                                                 FROM Salaries\n                                                 WHERE OtherPay LIKE '20%16'\n                                                 LIMIT 10\n                                              ''', conn)\nother_pay_start_with_20_end_16","c91688a2":"other_pay_start_with_20_end_16 = pd.read_sql(''' SELECT EmployeeName, OtherPay\n                                                 FROM Salaries\n                                                 WHERE OtherPay LIKE '20%16'\n                                                 LIMIT 10\n                                              ''', conn)\nother_pay_start_with_20_end_16","c4a2d905":"employee_name_contain_er_then_one_letter_kan = pd.read_sql(''' SELECT EmployeeName, OtherPay\n                                                               FROM Salaries\n                                                               WHERE EmployeeName LIKE '%er_kan%'\n                                                               LIMIT 10\n                                                           ''', conn)\nemployee_name_contain_er_then_one_letter_kan","23ab1d2e":"emplyee_name_albert_and_job_title_captain = pd.read_sql(''' SELECT EmployeeName, JobTitle\n                                                            FROM Salaries\n                                                            WHERE EmployeeName LIKE '%albert%' AND JobTitle LIKE '%captain%'\n                                                            LIMIT 10\n                                                        ''', conn)\nemplyee_name_albert_and_job_title_captain","afe9cef2":"emplyee_name_albert_or_jennifer = pd.read_sql(''' SELECT EmployeeName, JobTitle\n                                                  FROM Salaries\n                                                  WHERE EmployeeName in ('ALBERT HOLT JR', 'Jennifer Kane')\n                                                  LIMIT 10\n                                              ''', conn)\nemplyee_name_albert_or_jennifer","064d0509":"# this is valid for PostgreSQL\n# emplyee_name_jennifer = pd.read_sql(''' SELECT EmployeeName, JobTitle\n#                                         FROM Salaries\n#                                         WHERE EmployeeName iLIKE '%jennifer%'\n#                                         LIMIT 10\n#                                     ''', conn)\n# emplyee_name_jennifer","97dbe39d":"emplyee_hired_before_2011_or_after_2013 = pd.read_sql(''' SELECT EmployeeName, JobTitle, Year\n                                                          FROM Salaries\n                                                          WHERE Year < 2012 OR Year > 2013\n                                                          LIMIT 10\n                                                      ''', conn)\nemplyee_hired_before_2011_or_after_2013","bff16e83":"rich_employees_2011 = pd.read_sql(''' SELECT *\n                                      FROM Salaries\n                                      WHERE (BasePay > 300000 OR TotalPay > 500000) AND Year = 2011\n                                      LIMIT 10\n                                  ''', conn)\nrich_employees_2011","ed57a201":"**1. show tables**","81e87678":"6. Select Employees From Specific Year","c29d26d6":"**2. select 'Salaries' table **","54fb7866":"3. employees whose base pay is more than 300.000","2047858c":"5. Select employees with specific BasePay","fd46a5e3":"7. Choose employees with last name Carajan\n\n    % means the rest of the letters","60adb1e0":"4. employees whose base pay is betwee 200.000 and 300.000","6f0d3d5d":"9. How we can excape Caps ?\n\nLIKE  is already case insensitive. But in PostgreSQL, it is used ILIKE instead","6594a2f4":"8. Find","e51994ff":"10. using AND & OR"}}