{"cell_type":{"ead2caa2":"code","79f0f3a1":"code","d5c774d3":"code","44f64b03":"code","c9666311":"code","7222ed2f":"code","5a1ade8b":"code","bdb9df3b":"code","0f1e7754":"code","b6cbb715":"code","7c06d402":"code","f8f2ecf3":"code","eaae7e58":"code","aedabbee":"code","ebafaaae":"code","82ead363":"code","14c2ee13":"code","3d49b90c":"code","eba2d1a4":"markdown","4ea0665b":"markdown","b96bda01":"markdown","e7b973ed":"markdown","46f5be37":"markdown","e434c708":"markdown","a4812f2a":"markdown","9fe254f5":"markdown","1bdef5ce":"markdown","badc01b7":"markdown","7f1b708f":"markdown","9062977a":"markdown","0b0162e5":"markdown","67763cdf":"markdown","ca113c51":"markdown","157bf6e0":"markdown","759db8e6":"markdown","92a91d19":"markdown"},"source":{"ead2caa2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","79f0f3a1":"from scipy.io import loadmat\n\nmat_contents = loadmat('\/kaggle\/input\/1056lab-cardiac-arrhythmia-detection\/test\/B07957.mat')\nmat_contents","d5c774d3":"mat_contents.keys()","44f64b03":"mat_contents['val']","c9666311":"\nmat_contents['val'][0]","7222ed2f":"import matplotlib.pyplot as plt\n\ny = mat_contents['val'][0]\nlength = len(y)\nx = np.linspace(0, length, length)\n\nplt.style.use('ggplot')\nplt.figure()\nplt.plot(x, y)\nplt.show()","5a1ade8b":"from glob import glob\n\nidx_ = []  # index\nlen_ = []  # length\nmean_ = []  # mean\nstd_ = []  # standard deviation\nste_ = []  # standard error\nmax_ = []  # maximum value\nmin_ = []  # minimum value\ny_ = []\nfor d in ['normal', 'af']:\n    for path in sorted(glob('\/kaggle\/input\/1056lab-cardiac-arrhythmia-detection\/' + d +'\/*.mat')):\n        filename = path.split('\/')[-1]  # e.g. B05821.mat\n        i = filename.split('.')[0]  # e.g. B05821\n        idx_.append(i)\n        mat_contents = loadmat(path)\n        x = mat_contents['val'][0]\n        len_.append(len(x))\n        mean_.append(x.mean())\n        std_.append(x.std())\n        ste_.append(x.std()\/np.sqrt(len(x)))\n        max_.append(x.max())\n        min_.append(x.min())\n        if d == 'normal':\n            y_.append(0)\n        else:\n            y_.append(1)","bdb9df3b":"train_df = pd.DataFrame(index=idx_, columns=['length', 'mean', 'standard deviation', 'standard error', 'maximum value', 'minimum value', 'y'])\ntrain_df['length'] = len_\ntrain_df['mean'] = mean_\ntrain_df['standard deviation'] = std_\ntrain_df['standard error'] = ste_\ntrain_df['maximum value'] = max_\ntrain_df['minimum value'] = min_\ntrain_df['y'] = y_\ntrain_df","0f1e7754":"from glob import glob\n\nidx_ = []  # index\nlen_ = []  # length\nmean_ = []  # mean\nstd_ = []  # standard deviation\nste_ = []  # standard error\nmax_ = []  # maximum value\nmin_ = []  # minimum value\nfor path in sorted(glob('\/kaggle\/input\/1056lab-cardiac-arrhythmia-detection\/test\/*.mat')):\n    filename = path.split('\/')[-1]  # e.g. B05821.mat\n    i = filename.split('.')[0]  # e.g. B05821\n    idx_.append(i)\n    mat_contents = loadmat(path)\n    x = mat_contents['val'][0]\n    len_.append(len(x))\n    mean_.append(x.mean())\n    std_.append(x.std())\n    ste_.append(x.std()\/np.sqrt(len(x)))\n    max_.append(x.max())\n    min_.append(x.min())\n","b6cbb715":"test_df = pd.DataFrame(index=idx_, columns=['length', 'mean', 'standard deviation', 'standard error', 'maximum value', 'minimum value'])\ntest_df['length'] = len_\ntest_df['mean'] = mean_\ntest_df['standard deviation'] = std_\ntest_df['standard error'] = ste_\ntest_df['maximum value'] = max_\ntest_df['minimum value'] = min_\ntest_df","7c06d402":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('ggplot')\nplt.figure()\nsns.pairplot(train_df)\nplt.show()","f8f2ecf3":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\ncorr = train_df.corr()\n\nplt.style.use('ggplot')\nplt.figure()\nsns.heatmap(corr, square=True, annot=True)\nplt.show()","eaae7e58":"from sklearn.ensemble import RandomForestClassifier\n\nX_train = train_df.drop('y', axis=1).to_numpy()\ny_train = train_df['y'].to_numpy()\n\nmodel = RandomForestClassifier()\nmodel.fit(X_train, y_train)","aedabbee":"p_train = model.predict_proba(X_train)\np_train","ebafaaae":"y_train","82ead363":"X_test = test_df.to_numpy()\n\np_test = model.predict_proba(X_test)\np_test","14c2ee13":"submit_df = pd.read_csv('\/kaggle\/input\/1056lab-cardiac-arrhythmia-detection\/sampleSubmission.csv', index_col=0)\nsubmit_df['af'] = p_test[:,1]\nsubmit_df","3d49b90c":"submit_df.to_csv('submission.csv')","eba2d1a4":"# Loading a data in Matlab format","4ea0665b":"## Test data","b96bda01":"# DataFrame","e7b973ed":"## Scatterplot matrix","46f5be37":"## Values","e434c708":"## Answers","a4812f2a":"## Training data","9fe254f5":"## Structure","1bdef5ce":"## Raw\nTo load Matlab format, you can use `scipy.io.loadmat()`.\nIt returns a dictionary.\n\nSee also [scipy.io.loadmat](https:\/\/docs.scipy.org\/doc\/scipy\/reference\/generated\/scipy.io.loadmat.html) in the SciPy Reference Guide.","badc01b7":"# Visualization","7f1b708f":"## Correlation heatmap","9062977a":"## Traning data","0b0162e5":"## Visualizing","67763cdf":"## Test data","ca113c51":"# Predicting","157bf6e0":"# Random Forest","759db8e6":"# Making a submission file","92a91d19":"## NumPy ndarray"}}