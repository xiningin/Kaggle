{"cell_type":{"277c87d3":"code","60ea930a":"code","6b3e761b":"code","4f350c06":"code","40a9c401":"code","17a2aa00":"code","06178c28":"code","a254d083":"code","bacb98fc":"code","dc865034":"code","ecfa08c4":"code","7fc7885d":"code","2ff59a0a":"code","73d3f125":"code","02ebec3b":"code","385fe40d":"markdown","2b69a81d":"markdown","e396096c":"markdown","c5ff203e":"markdown","eb712d9a":"markdown","c46bb263":"markdown","21744222":"markdown","60e2c1dc":"markdown","529e1a43":"markdown","34d6c18a":"markdown","c3b45a27":"markdown","730d9107":"markdown","b46b435d":"markdown","52b0c5cc":"markdown","7f6ad9be":"markdown","3b49b8d8":"markdown","66b13562":"markdown","6e4b014b":"markdown","f8657e61":"markdown","ee377744":"markdown","d15fa3a0":"markdown","698b89f6":"markdown","610d8a7f":"markdown"},"source":{"277c87d3":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\n%matplotlib inline","60ea930a":"dataset = pd.read_csv('..\/input\/worlddevelpmentindicator\/dataset.csv', skiprows=4)\ndataset.head(5)","6b3e761b":"dataset.drop(['Country Code', 'Indicator Name', 'Indicator Code', '1960', '2016', 'Unnamed: 61'],\n             axis = 1, inplace = True)\ndataset.head(5)","4f350c06":"dataset.dropna(how = 'any', axis = 0, inplace = True)\ndataset.isnull().sum()","40a9c401":"x = dataset.columns[1:]\ny = dataset.iloc[0][1:]\ncountry = dataset.iloc[0][0]\nplt.plot(x, y)","17a2aa00":"plt.rcParams['figure.figsize'] = (30, 30)\nplt.rcParams['font.size'] = '20'\nplt.title('Population density of ' + country + ' over the years')\nplt.xlabel('Years')\nplt.xticks(rotation = '90')\nplt.ylabel('Population density (People per sq. Km)')\nplt.plot(x, y, linewidth = 4)","06178c28":"x = dataset.columns[1:]\ncolors = cm.rainbow(np.linspace(0, 1, 5))\n\nfor index in range(5):\n    y = dataset.iloc[index][1:]\n    plt.plot(x, \n             y, \n             c = colors[index],\n             label = dataset.iloc[index][0],\n             linewidth = 4)\n    plt.title('Comparing population density of various conutries')\n    plt.xlabel('Years')\n    plt.xticks(rotation = '90')\n    plt.ylabel('Population Density')\n    plt.legend(prop = {'size': 24})","a254d083":"countries = dataset['Country Name']\npopulationDensity2015 = dataset['2015']\nplt.xticks(rotation = '90')\nplt.bar(countries, populationDensity2015, color = cm.rainbow(np.linspace(0, 1, len(countries))))","bacb98fc":"top10 = dataset.sort_values('2015', ascending = False).head(10)\nplt.xticks(rotation = '45')\nplt.title('Population Density of 10 most densely populated countries for the year 2015')\nplt.xlabel('Countires')\nplt.ylabel('Population Density')\nplt.bar(top10['Country Name'],\n        top10['2015'],\n        color = cm.rainbow(np.linspace(0, 1, len(top10))))","dc865034":"total_columns = dataset.shape[1]\nselected_data = dataset[dataset.sum(axis = 1).apply(lambda x: x\/total_columns) <= 10]\nconsolidated_data = selected_data.sum(axis = 1).apply(lambda x: x\/total_columns)\ncountries = selected_data['Country Name']\nplt.rcParams['figure.figsize'] = (20, 20)\nplt.rcParams['font.size'] = 14\nplt.title('Average Population density for various countries')\nplt.xlabel('Countries')\nplt.ylabel('Average Population Density')\nplt.xticks(rotation = '90')\nplt.scatter(countries, \n            consolidated_data, \n            s = consolidated_data*20, \n            c = cm.rainbow(np.linspace(0, 1, len(countries))))","ecfa08c4":"minimum = dataset.loc[:, dataset.columns != 'Country Name'].min()\nmaximum = dataset.loc[:, dataset.columns != 'Country Name'].max()\ndiff = maximum - minimum\nminOfMax = maximum.min()\nplt.title('Range of Population Density for years 1962-2015')\nplt.xticks(rotation = '90')\nplt.xlabel('Years')\nplt.ylabel('Population Density')\nplt.bar(dataset.columns[1:], diff.apply(lambda x: x-minOfMax), color = cm.rainbow(np.linspace(0, 1, dataset.shape[1])))","7fc7885d":"from urllib.request import urlopen\nfrom bs4 import BeautifulSoup\n\ncontent = BeautifulSoup(urlopen('https:\/\/en.wikipedia.org\/wiki\/List_of_countries_and_dependencies_by_area'),\n                        'html.parser')","2ff59a0a":"dataset['Area'] = 0.0\ntable = content.find_all('table')[0]\nrows = table.find_all('tr')\nfor tr in rows:\n    td = tr.find_all('td')\n    a = tr.find('a')\n    try:\n        area = td[3].text.split('\u2660')[1].split('(')[0].replace(',', '')\n        dataset.loc[dataset['Country Name'] == a.text, 'Area'] = int(area)\n    except Exception:\n        continue","73d3f125":"dataset = dataset[dataset['Area'] != 0]\ndataset.shape","02ebec3b":"population = dataset['Area'].multiply(dataset['2015'], axis = 0)\ncountries = dataset['Country Name']\n\nplt.subplot(2,2,1)\nplt.title('Population of various countries for year 2015')\nplt.xlabel('Countries')\nplt.ylabel('Population')\nplt.xticks(rotation = '90')\nplt.bar(countries[:20], population[:20], color = 'b')\n\nplt.subplot(2,2,2)\nplt.title('Population Density of various countries for year 2015')\nplt.xlabel('Countries')\nplt.ylabel('Population Density')\nplt.xticks(rotation = '90')\nplt.bar(countries[:20], dataset['2015'][:20], color = 'r')","385fe40d":"From the graph above, we can see that Macao SAR and Monaco have the maximum population density in the year 2015.","2b69a81d":"We can see that for all 5 countries, Aruba, Andorra, Afghanistan, Angola and Albania there has been a rise in the population density. Now that we have plot all their line graphs on a single plot, it's very easy to see that Aruba always has had higher population density as compared to other 4 countries.","e396096c":"# Visualization using Matplotlib\n\nData visualization is one of the most essential steps in understanding the data at hand and the relations that can be drawn amongst various features and labels. While there are many libraries, Matplotlib forms the basics for data visualization and this notebook deals with its basics and common usage.","c5ff203e":"## Import dataset\n\nWe will import the dataset as a Panda's dataframe in the variable `dataset`.\nHowever, we must first take a look at the data file. We find that first `4` rows can be skipped and then we can read the data into the variable.","eb712d9a":"The plot seems right but the years are overlapping and there is no indication for the axis. We will now use various customizations to make the plot more descriptive and readable.","c46bb263":"## Conclusion\n\nIn this notebook, we used several `matplotlib` plots to understand the world population data and draw inferences from them.","21744222":"## Population vs Population Density\n\nIf we can find the areas of each country, we can get their total population in the year 2015. We can then compare if the population density is a good measure and if it aligns with the population of a country.","60e2c1dc":"For the year 2015, we'd like to compare the population of various countries and their population density.","529e1a43":"We can also compare multiple countries together by plotting them on the same graph.\nLet's take the first 5 countries from the dataset and compare their growth. But as there will be multiple graphs it is a good practice to show a legend that helps the viewer see which graph belongs to which country.","34d6c18a":"The plot is now much more interpretable.\nFrom the plot above for Aruba, we can see that there was a steady rise in the population density uptil the 1980s. From 1990s, the density shot up drastically and continued to show the same growth till it became steady in mid 2000s.","c3b45a27":"## Import libraries","730d9107":"Even though this looks good (excluding the x-axis labels) this is not at all useful to us as there is so much overlapping that we cannot associate a given bar to a specific country. We can simplify this by just taking the top 10 out of these countries.","b46b435d":"## Visualization\n\nNow that our data is imported and setup to be visualized, we can begin working with matplotlib.\nWe begin by analysing Aruba's population density. Firstly, we take the x-axis values as years and the y-axis values as the population density over the years for Aruba.","52b0c5cc":"## Descriptive Analysis\n\nIt would also be really useful to see the gap between the most and least densely populated areas over the years.","7f6ad9be":"We can see that `Population Density` is not always the correct measure to describe the population of a country. This is evident when we look at the country `Bahrain`. Even though the population density is very high for it, the population for `Bangladesh` is much higher than `Bahrain`.","3b49b8d8":"It appears that we can either keep the `Country Name` or the `Country Code`. For easy reference, let's keep the country name. The columns `Indicator Name` and `Indicator Code` are not required.\nColumns `1960` and `2016` has values represented as `NaN` which means `Not a Number` and hence we can drop those columns too. Finally, the last column is unnamed and also has `NaN` values so we drop it too.","66b13562":"The dataset has countries where all information is not available and hence, it's better to drop such rows as they provide no useful information.","6e4b014b":"### Bar Plot\n\nWe analyse that the trend for population density grows with as the years progress. Thus, we can compare the final population density of various countries and check which countries are the most densely populated.\nFurther, we can use more descriptive variable names for better code readability.","f8657e61":"The size of each point is a reflection of the density value. The scatter plot is for all countries that have density of less than 10 people per sqaure Km. Moreover, `Greenland` has the lowest value for density.","ee377744":"### Line Plot","d15fa3a0":"We see that for the year `2001` there was the maximum gap between the most densely populated country and the least densely populated country and then there was a sharp fall in the year `2002`.","698b89f6":"### Scatter Plot\n\nNext, we can get a overview of the dataset by using a scatter plot for various countries. As for some countries, the density is vastly different from others, we skip them to understand the data for the remaining countries. We will select countries where the average density is less than or equal to 10 people per square Km.","610d8a7f":"We will use the population dataset available on Kaggle to understand how we can leverage the power of visualizations to actually draw meaningful conclusions."}}