{"cell_type":{"2ab0c424":"code","09f8e531":"code","ee94f875":"code","3f8818ba":"code","7eda3d6c":"code","d730aecb":"code","07c66c5d":"code","b3f616dd":"code","692ef66e":"code","cd257d92":"code","4bb59923":"markdown","d1465f37":"markdown","91af7f1c":"markdown","11f1f2d7":"markdown","97a2d688":"markdown"},"source":{"2ab0c424":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","09f8e531":"#By Rob Mulla https:\/\/www.kaggle.com\/robikscube\/kaggle-deepfake-detection-introduction  \n\nimport cv2 as cv\nimport os\nimport matplotlib.pylab as plt\ntrain_dir = '\/kaggle\/input\/bisindo-video-dataset\/bisindo - video dataset\/Testing\/U\/'\nfig, ax = plt.subplots(1,1, figsize=(15, 15))\ntrain_video_files = [train_dir + x for x in os.listdir(train_dir)]\n# video_file = train_video_files[30]\nvideo_file = '..\/input\/bisindo-video-dataset\/bisindo - video dataset\/Testing\/U\/01.mp4'\ncap = cv.VideoCapture(video_file)\nsuccess, image = cap.read()\nimage = cv.cvtColor(image, cv.COLOR_BGR2RGB)\ncap.release()   \nax.imshow(image)\nax.xaxis.set_visible(False)\nax.yaxis.set_visible(False)\nax.title.set_text(f\"FRAME 0: {video_file.split('\/')[-1]}\")\nplt.grid(False)","ee94f875":"#From https:\/\/stackoverflow.com\/questions\/36634807\/how-do-i-open-an-mp4-video-file-with-python\n\nimport cv2\n \n# Create a VideoCapture object and read from input file\n# If the input is the camera, pass 0 instead of the video file name\ncap = cv2.VideoCapture('..\/input\/bisindo-video-dataset\/bisindo - video dataset\/Testing\/R\/01.mp4')\n \n \n# Check if camera opened successfully\nif (cap.isOpened()== False):\n  print(\"Error opening video stream or file\")\n \n# Read until video is completed\nwhile (cap.isOpened()):\n    # Capture frame-by-frame\n    ret, frame = cap.read()\n    if ret == True:\n \n        # Display the resulting frame\n        cv2.imshow('Frame', frame)\n \n        # Press Q on keyboard to  exit\n        if cv2.waitKey(25) & 0xFF == ord('q'):\n            break\n \n    # Break the loop\n    else:\n        break\n \n# When everything done, release the video capture object\ncap.release()\n \n# Closes all the frames\ncv2.destroyAllWindows()","3f8818ba":"!pip install imageio-ffmpeg","7eda3d6c":"import pylab\nimport imageio\nfilename = '..\/input\/bisindo-video-dataset\/bisindo - video dataset\/Testing\/K\/01.mp4'\nvid = imageio.get_reader(filename,  'ffmpeg')\nnums = [10, 287]\nfor num in nums:\n    image = vid.get_data(num)\n    fig = pylab.figure()\n    fig.suptitle('image #{}'.format(num), fontsize=20)\n    pylab.imshow(image)\npylab.show()","d730aecb":"!pip install sk-video","07c66c5d":"import skvideo.io  \nvideodata = skvideo.io.vread(\"..\/input\/bisindo-video-dataset\/bisindo - video dataset\/Testing\/R\/01.mp4\")  \nprint(videodata.shape)","b3f616dd":"#By Rob Mulla https:\/\/www.kaggle.com\/robikscube\/kaggle-deepfake-detection-introduction  \n\nimport cv2 as cv\nimport os\nimport matplotlib.pylab as plt\ntrain_dir = '\/kaggle\/input\/bisindo-video-dataset\/bisindo - video dataset\/Testing\/H\/'\nfig, ax = plt.subplots(1,1, figsize=(15, 15))\ntrain_video_files = [train_dir + x for x in os.listdir(train_dir)]\n# video_file = train_video_files[30]\nvideo_file = '..\/input\/bisindo-video-dataset\/bisindo - video dataset\/Testing\/H\/01.mp4'\ncap = cv.VideoCapture(video_file)\nsuccess, image = cap.read()\nimage = cv.cvtColor(image, cv.COLOR_BGR2RGB)\ncap.release()   \nax.imshow(image)\nax.xaxis.set_visible(False)\nax.yaxis.set_visible(False)\nax.title.set_text(f\"FRAME 0: {video_file.split('\/')[-1]}\")\nplt.grid(False)","692ef66e":"#By Rob Mulla https:\/\/www.kaggle.com\/robikscube\/kaggle-deepfake-detection-introduction  \n\nimport cv2 as cv\nimport os\nimport matplotlib.pylab as plt\ntrain_dir = '\/kaggle\/input\/bisindo-video-dataset\/bisindo - video dataset\/Train\/J\/'\nfig, ax = plt.subplots(1,1, figsize=(15, 15))\ntrain_video_files = [train_dir + x for x in os.listdir(train_dir)]\n# video_file = train_video_files[30]\nvideo_file = '..\/input\/bisindo-video-dataset\/bisindo - video dataset\/Train\/J\/02.mp4'\ncap = cv.VideoCapture(video_file)\nsuccess, image = cap.read()\nimage = cv.cvtColor(image, cv.COLOR_BGR2RGB)\ncap.release()   \nax.imshow(image)\nax.xaxis.set_visible(False)\nax.yaxis.set_visible(False)\nax.title.set_text(f\"FRAME 0: {video_file.split('\/')[-1]}\")\nplt.grid(False)","cd257d92":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. That is all kagglers, @mpwolke was Here.' )","4bb59923":"#By Rob Mulla https:\/\/www.kaggle.com\/robikscube\/kaggle-deepfake-detection-introduction ","d1465f37":"#Code by Soham Mukherjee https:\/\/www.kaggle.com\/soham1024\/read-all-kind-of-files-using-python\/data","91af7f1c":"#BISINDO (Bahasa Isyarat Indonesia - I)ndonesian Sign Language)\n\nIndonesian Sign Language, or Bahasa Isyarat Indonesia (BISINDO), is any of several related deaf sign languages of Indonesia, at least on the island of Java. It is based on American Sign Language, with local admixture in different cities. Although presented as a coherent language when advocating for recognition by the Indonesian government and use in education, the varieties used in different cities may not be mutually intelligible.\n\nhttps:\/\/en.wikipedia.org\/wiki\/Indonesian_Sign_Language","11f1f2d7":"#Below from Stack Overflow\n\nError: OpenCV(4.5.1) \/tmp\/pip-req-build-tk9iuyva\/opencv\/modules\/highgui\/src\/window.cpp:651: error: (-2:Unspecified error) The function is not implemented. Rebuild the library with Windows, GTK+ 2.x or Cocoa support. If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config, then re-run cmake or configure script in function 'cvShowImage'","97a2d688":"![](http:\/\/i0.wp.com\/ispasier.files.wordpress.com\/2016\/11\/img_20161120_200721.jpg?w=336)ispasier.wordpress.com"}}