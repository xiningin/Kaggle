{"cell_type":{"e1c8661d":"code","2b6e305e":"code","4c93a296":"code","eb2e3a5e":"code","c954ce96":"code","06133180":"code","56533091":"code","5b232d56":"code","195383ed":"code","f6f3213f":"code","ab334553":"code","a3aeb682":"code","fca0c76b":"code","889a97fa":"code","26e05628":"markdown","a791fbea":"markdown","ba833ccc":"markdown","64e0a49e":"markdown","f156756e":"markdown","b17a5046":"markdown","de21f22f":"markdown","5c8e673f":"markdown","7720c484":"markdown","171e622a":"markdown","540da70e":"markdown","dc062393":"markdown","27fe5c32":"markdown"},"source":{"e1c8661d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nfrom collections import Counter\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n\n\n\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\nimport plotly as py\n\nimport plotly.graph_objs as go\n\ninit_notebook_mode(connected=True)\n\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2b6e305e":"cases = pd.read_csv('\/kaggle\/input\/coronavirusdataset\/Case.csv')\ncases.info()","4c93a296":"\n#cases.confirmed = cases.confirmed.astype(float)\n\nprovince_list = list(cases['province'].unique())\nnumber_of_cases = []\nfor j in province_list:\n    x = cases[cases['province'] == j]\n    total = sum(x.confirmed)\n    number_of_cases.append(total)\ndata = pd.DataFrame({'province_list': province_list, 'number_of_cases' : number_of_cases})\nnew_index = (data['number_of_cases'].sort_values(ascending = False)).index.values\nsorted_data = data.reindex(new_index)\n\n#visualization\nplt.figure(figsize = (10,5))\nsns.barplot(x = sorted_data['province_list'], y = sorted_data['number_of_cases'])\nplt.xticks(rotation = 80)\nplt.xlabel('Provinces')\nplt.ylabel('Number of Cases')\nplt.title('Number of Cases for each province')\n\n\n\nlabels = cases.province.value_counts().index\n\n\n\n\n#figure\nfig = {\n    \"data\" : [\n        {\n            \"values\" : number_of_cases,\n            \"labels\" : labels,\n            \"domain\" : {\"x\":[0, .5]},\n            \"name\" : \"Distrubition of Cases over cities\",\n            \"hoverinfo\" : \"label+percent+name\",\n            \"hole\" : .3,\n            \"type\" : \"pie\"\n        },\n    ],\n    \"layout\" : {\n        \"title\" : \"Distrubiton of Cases Over Cities\",\n        \"annotations\" : [\n            {\n                \"font\" : {\"size\" : 20},\n                \"showarrow\" : False,\n                \"text\" : \"Cases\",\n                \"x\" : 0.20,\n                \"y\" : 1\n            },\n        ]\n    }\n}\niplot(fig)\n\n","eb2e3a5e":"cases.group.dropna(inplace = True)\nlabels = ['Group Infection','Not Group']\ncolors = ['red', 'green']\nexplode = [0,0]\nsizes = cases.group.value_counts().values\n\n#visualization\nplt.figure(figsize = (8,8))\nplt.pie(sizes, explode = explode, labels = labels, colors = colors, autopct = '%.1f%%')\nplt.title('Group Infection Rates', color = 'black',fontsize = 12)\nplt.show()","c954ce96":"patients = pd.read_csv('..\/input\/coronavirusdataset\/PatientInfo.csv')\npatients.head()","06133180":"patients.info()","56533091":"patients.age.dropna(inplace = True)\nassert 1 == 1\nages = []\nfor x in patients.age:\n    ages.append(x)\n\nages.sort()\nage_counts = Counter(ages) \np = age_counts.most_common(10)\n\nx,y = zip(*p)\nx,y = list(x),list(y)\n\nplt.figure(figsize = (10,7))\nax = sns.barplot(x = x, y = y, palette = sns.cubehelix_palette(17))\nplt.xlabel('Ages')\nplt.ylabel('Counts')\nplt.title('Number of cases by age')\nplt.show()","5b232d56":"patients.sex.value_counts()\nsns.countplot(patients.sex)\nplt.title('Distribution of cases over genders', color = 'red', fontsize = 13)\nplt.show()\n","195383ed":"patients.state.dropna(inplace = True)\nlabels = ['Isolated','Released','Deceased']\ncolors = ['purple','green','red', ]\nexplode = [0,0,0]\nsizes = patients.state.value_counts()\n\n#visualization\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode = explode, labels = labels, colors = colors, autopct = '%.2f%%')\nplt.title('States of People who exposed virus', color = 'black',fontsize = 14)\nplt.show()","f6f3213f":"time_data = pd.read_csv('..\/input\/coronavirusdataset\/Time.csv')\ntime_data.info()","ab334553":"first_21_days = time_data.head(21)\n\ntrace1 = go.Scatter(\n                   x = first_21_days.test,\n                   y = first_21_days.negative,\n                   mode = \"lines\",\n                   name = \"Negatives\",\n                   marker = dict(color = 'rgba(16,112,2,0.8)'),\n                   text = first_21_days.date\n                   )\n\ntrace2 = go.Scatter(\n                   x = first_21_days.test,\n                   y = first_21_days.confirmed,\n                   mode = \"lines + markers\",\n                   name = \"Positives\",\n                   marker = dict(color = 'rgba(80,10,22,0.8)'),\n                   text = first_21_days.date\n                   )\ndata = [trace1, trace2]\nlayout = dict(title = 'Negative - positive comparison in the first 21 days', xaxis = dict(title = '# of negative or positive', ticklen = 5, zeroline = False), yaxis = dict(title = 'Number of tests'))\nfig = dict(data = data, layout = layout)\niplot(fig)\n\n","a3aeb682":"\n\nf,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=first_21_days.confirmed,y=first_21_days.date,color='blue',alpha = 0.5,label='Confirmed' )\nsns.barplot(x=first_21_days.released,y=first_21_days.date,color='green',alpha = 0.7,label='Released')\nsns.barplot(x=first_21_days.deceased,y=first_21_days.date,color='red',alpha = 0.6,label='Deceased')\n\nax.legend( loc = 'upper right', frameon = True)\nax.set(xlabel = 'States', ylabel = 'Days', title = 'States of Confirmed People')\nplt.show()","fca0c76b":"last_21_days = time_data.tail(21) \n\ntrace1 = go.Scatter(\n                   x = last_21_days.test,\n                   y = last_21_days.negative,\n                   mode = \"lines\",\n                   name = \"Negatives\",\n                   marker = dict(color = 'rgba(16,112,2,0.8)'),\n                   text = last_21_days.date\n                   )\n\ntrace2 = go.Scatter(\n                   x = last_21_days.test,\n                   y = last_21_days.confirmed,\n                   mode = \"lines + markers\",\n                   name = \"Positives\",\n                   marker = dict(color = 'rgba(80,10,22,0.8)'),\n                   text = last_21_days.date\n                   )\ndata = [trace1, trace2]\nlayout = dict(title = 'Negative - positive comparison in the last 21 days', xaxis = dict(title = '# of negative or positive', ticklen = 5, zeroline = False), yaxis = dict(title = 'Number of tests'))\nfig = dict(data = data, layout = layout)\niplot(fig)\n","889a97fa":"f,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=last_21_days.confirmed,y=last_21_days.date,color='blue',alpha = 0.3,label='Confirmed' )\nsns.barplot(x=last_21_days.released,y=last_21_days.date,color='green',alpha = 0.7,label='Released')\nsns.barplot(x=last_21_days.deceased,y=last_21_days.date,color='red',alpha = 0.9,label='Deceased')\n\nax.legend( loc = 'upper right', frameon = True)\nax.set(xlabel = 'States', ylabel = 'Days', title = 'States of Confirmed People')\nplt.show()","26e05628":"<a id = 3.2><\/a>\n ### * Distribution of cases over genders","a791fbea":"<a id = 6.1><\/a>\n### * Negative - positive comparison","ba833ccc":"<a id = 5><\/a>\n## 5. States of people","64e0a49e":"<a id = 7.1><\/a>\n### * Negative - positive comparison","f156756e":"<a id = \"1\"><\/a>\n## Distribution of cases by cities","b17a5046":"<a id = 3><\/a>\n## 3. Patients Examinations ","de21f22f":"# Introcudtion\nCoronavirus is the one of the most important issues that the world faces nowadays and South Korea is very successful on handle it. In this kernel, I just want to visualize data about cases from South Korea so that may be we can understand what they did right.\n\n<font color = 'green'>\nContent:\n    \n1. [Distribution of cases by cities](#1)\n2. [Group Interactions](#2)\n3. [Patients Examinations](#3)\n   * [Number of cases by age](#3.1)\n   * [Distribution of cases over genders](#3.2)\n4. [States of People](#5)\n5. [First 21 days results](#6)\n   * [Negative - positive comparison](#6.1)\n   * [States of Confirmed People](#6.2) \n6. [Last 21 days results](#7)\n   * [Negative - positive comparison](#7.1)\n   * [States of Confirmed People](#7.2) \n","5c8e673f":"<a id = 6.2><\/a>\n### * States of Confirmed People in the first 21 days","7720c484":"<a id = 7><\/a>\n## Last 21 days results","171e622a":"<a id = 7.2><\/a>\n### * States of Confirmed People in the last 21 days","540da70e":"<a id = \"2\"><\/a>\n## Let's see how dangerous group interaction is","dc062393":"<a id = 3.1><\/a>\n ### * Number of cases by age","27fe5c32":"<a id = 6><\/a>\n## First 21 days results"}}