{"cell_type":{"4d3de498":"code","76a49204":"code","eb9324e7":"code","4f47c421":"code","56e7801e":"code","061bce44":"code","2082001f":"code","0324a930":"code","c3672ddc":"code","d5ed9f7c":"code","3d2818d0":"code","370b755f":"code","dd09a4a7":"code","8f1542fa":"code","9cd1f245":"code","97c25391":"code","6af97968":"code","e5d5c9e1":"code","449216ef":"code","b575cc43":"code","52cbefc2":"code","00936022":"code","107f67a1":"code","d7b0574f":"markdown","d04760df":"markdown","5caa5e82":"markdown","9b19f2fe":"markdown","56b39507":"markdown","d86fbabf":"markdown","3ae3dd11":"markdown","b0c7bbe2":"markdown","b94f91ae":"markdown","3d2f40e0":"markdown","f1de89f0":"markdown","5e87e49c":"markdown","05704032":"markdown"},"source":{"4d3de498":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\n%matplotlib inline","76a49204":"dataset = pd.read_csv('..\/input\/covid19-dataset\/covid_19_data.csv')\nrecovered = pd.read_csv('..\/input\/covid19-dataset\/recovered.csv')\ncovid_19_data = pd.read_csv('..\/input\/covid19-dataset\/date_wise_data.csv')\nconfirmed_df = pd.read_csv('..\/input\/covid19-dataset\/confirmed.csv')\nrecovered_df = pd.read_csv('..\/input\/covid19-dataset\/recovered.csv')\ndeaths_df = pd.read_csv('..\/input\/covid19-dataset\/deaths.csv')\nindividual_details = pd.read_csv('..\/input\/covid19-dataset\/patients_data.csv')\ncovid_india = pd.read_csv('..\/input\/covid-india\/covid_india.csv')","eb9324e7":"dataset.head()","4f47c421":"dataset.columns","56e7801e":"dataset.describe()","061bce44":"dataset.isnull().sum()","2082001f":"dataset[\"Province\/State\"].fillna(\"Unknown\", inplace = True) \ndataset.isnull().sum()","0324a930":"country = confirmed_df.groupby('Country\/Region')['10\/13\/20'].sum()\ncountry = country.to_frame()","c3672ddc":"Top10_country = country['10\/13\/20'].nlargest(10)\nTop10_country","d5ed9f7c":"fig, ax = plt.subplots(figsize = (5,7))\n\nplt.figure(figsize =(12, 7)) \nplt.rcParams['font.sans-serif'] = 'Arial'\nplt.rcParams['font.family'] = 'sans-serif'\nplt.rcParams['text.color'] = '#909090'\nplt.rcParams['axes.labelcolor']= '#909090'\nplt.rcParams['xtick.color'] = '#909090'\nplt.rcParams['ytick.color'] = '#909090'\nplt.rcParams['font.size']= 14\n\ncolor_palette_list = ['#8693AB','#AAB9CF', '#F3FFBD', '#FF1654', '#9B287B', '#FF220C', '#BDD4E7', '#212227', '#637074',   \n                       '#FF3622']\n\nc_name = ['US','India','Brazil','Russia','Colombia','Argentina', 'Spain','Peru', 'Mexico','France']\n\nax.pie(Top10_country, labels=c_name,  \n       colors=color_palette_list[0:8], autopct='%1.0f%%', \n       shadow=True, startangle=0,   \n       pctdistance=1.2,labeldistance=1.4)\nax.axis('equal')\nax.set_title(\"Covid- 19 World\",fontsize = 30, pad = 60, fontweight =\"bold\")\nax.legend(frameon=True, bbox_to_anchor=(3,0.8))\n\n","3d2818d0":"fig, ax = plt.subplots(figsize = (12,6))\nplt.rcParams['font.sans-serif'] = 'Arial'\nplt.rcParams['font.family'] = 'sans-serif'\nplt.rcParams['text.color'] = '#909090'\nplt.rcParams['axes.labelcolor']= '#909090'\nplt.rcParams['xtick.color'] = '#909090'\nplt.rcParams['ytick.color'] = '#909090'\nplt.rcParams['font.size']= 15\ncolor_palette_list = ['#8693AB','#AAB9CF', '#F3FFBD', '#FF1654', '#9B287B', '#FF220C', '#BDD4E7', '#212227', '#637074',   \n                       '#FF3622']\nc_name = ['US','India','Brazil','Russia','Colombia','Argentina', 'Spain','Peru', 'Mexico','France']\n\nn = 10\nbars1 = ax.bar( c_name,Top10_country, \n        color = color_palette_list, \n        label='Bar graph of Covid 19')\nax.set_title(\"Top 10 Covid affected countries\")\nax.set_ylabel(\"No of Covid cases\")\nax.set_ylim((10000,8000000))\nax.set_xticks(range(10))\nax.set_xticklabels(c_name, rotation=70)\nax.set_xlabel(\"Country\")","370b755f":"state = covid_india.groupby('Name of State \/ UT')['Total Confirmed cases'].sum()\nstate = state.to_frame()","dd09a4a7":"Top10_state = state['Total Confirmed cases'].nlargest(10)\nTop10_state","8f1542fa":"fig, ax = plt.subplots(figsize = (5,7))\n\nplt.figure(figsize =(12, 7)) \nplt.rcParams['font.sans-serif'] = 'Arial'\nplt.rcParams['font.family'] = 'sans-serif'\nplt.rcParams['text.color'] = '#909090'\nplt.rcParams['axes.labelcolor']= '#909090'\nplt.rcParams['xtick.color'] = '#909090'\nplt.rcParams['ytick.color'] = '#909090'\nplt.rcParams['font.size']= 15\n\ncolor_palette_list = ['#8693AB','#AAB9CF', '#F3FFBD', '#FF1654', '#9B287B', '#FF220C', '#BDD4E7', '#212227', '#637074',   \n                       '#FF3622']\n\ns_name = ['Maharashtra','Andhra Pradesh','Karnataka', 'Tamil Nadu','Uttar Pradesh','Delhi','Kerala','West Bengal','Odisha','Telengana']\n\nax.pie(Top10_state, labels=s_name,  \n       colors=color_palette_list[0:8], autopct='%1.0f%%', \n       shadow=True, startangle=0,   \n       pctdistance=1.2,labeldistance=1.4)\nax.axis('equal')\nax.set_title(\"Top 10 states affected by Covid in India\",fontsize = 30, pad = 50, fontweight =\"bold\")\nax.legend(frameon=True, bbox_to_anchor=(3,0.8))\n\n","9cd1f245":"label = ['Maharashtra','Andhra Pradesh','Karnataka', 'Tamil Nadu','Uttar Pradesh','Delhi','Kerala','West Bengal','Odisha','Telengana']","97c25391":"import plotly.express as px\nfig = px.bar( x=label, y=Top10_state, title=\"Top 10 Covid-19 affected states of India\",\n            labels={'x':'State', 'y':'No of cases'})\nfig.show()","6af97968":"data_recovered = recovered[['Country\/Region','Lat', 'Long','10\/11\/20']]\ndata_recovered.shape","e5d5c9e1":"temp = covid_19_data","449216ef":"fig = go.Figure(data=[\ngo.Bar(name='Deaths', x=temp['Date'], y=temp['Deaths'],marker_color='#ff0000'),\ngo.Bar(name='Recovered Cases', x=temp['Date'], y=temp['Cured'],marker_color='#2bad57'),\ngo.Bar(name='Confirmed Cases', x=temp['Date'], y=temp['Confirmed'],marker_color='#326ac7')])\nfig.update_layout(barmode='stack')\nfig.update_traces(textposition='inside')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.update_layout(title_text='COVID-19 Cases,Recovery and Deaths in India from Feb till May',\n                  plot_bgcolor='rgb(275, 270, 273)')\nfig.show()","b575cc43":"total_recovered = recovered_df['10\/11\/20'].sum(axis=0)\ntotal_deaths = deaths_df['10\/11\/20'].sum(axis=0)\ntotal_confirmed = confirmed_df['10\/11\/20'].sum(axis=0)\ntotal_active = total_confirmed - (total_deaths + total_recovered)","52cbefc2":"labels = ['Active','Recovered','Deaths']\nsizes = [total_active,total_recovered,total_deaths]\ncolor= ['#66b3ff','green','red']\nexplode = []\n\n\nfor i in labels:\n    explode.append(0.05)\n    \nplt.figure(figsize= (12,6))\nplt.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=9, explode =explode,colors = color)\ncentre_circle = plt.Circle((0,0),0.70,fc='white')\n\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\nplt.title('World COVID-19 Cases',fontsize = 20)\nplt.axis('equal')  \nplt.tight_layout()\n","00936022":"labels = ['Missing', 'Male', 'Female']\nsizes = []\nsizes.append(individual_details['Gender'].isnull().sum())\nsizes.append(list(individual_details['Gender'].value_counts())[0])\nsizes.append(list(individual_details['Gender'].value_counts())[1])\n\nexplode = (0, 0.1, 0)\ncolors = ['#ff9999','#99ccff','#ff99cc']\n\nplt.figure(figsize= (10,5))\nplt.title('Percentage of Gender',fontsize = 20)\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',shadow=True, startangle=90)\nplt.axis('equal')\nplt.tight_layout()","107f67a1":"labels = ['Male', 'Female']\nsizes = []\nsizes.append(list(individual_details['Gender'].value_counts())[0])\nsizes.append(list(individual_details['Gender'].value_counts())[1])\n\nexplode = (0.1, 0)\ncolors = ['#99ccff','#ff9999']\n\nplt.figure(figsize= (10,5))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',\n        shadow=True, startangle=90)\n\nplt.title('Percentage of Gender (Ignoring the Missing Values)',fontsize = 20)\nplt.axis('equal')\nplt.tight_layout()","d7b0574f":"## Figuring out the commonly affected gender by Covid-19","d04760df":"## Mapping the Covid-19 Active, Recovered and Deaths across the world using pie chart","5caa5e82":"## Finding null values and replacing them with \"Unknown\" value","9b19f2fe":"## Plotting the Top 10 Covid-19 affected states of India by using Plotly","56b39507":"## Importing Library","d86fbabf":"## Visualizing COVID-19  Confirmed cases,Recovered and Deaths in India from February to May 2020","3ae3dd11":"## Visualizing the Top 10 countries in the form of pie chart ","b0c7bbe2":"## Visualizing the Top 10 countries in the form of barplot for easy understanding","b94f91ae":"## Visualizing the Top 10 States of India in the form of pie chart","3d2f40e0":"## Importing Datasets","f1de89f0":"### Finding the Top 10 Countries with Confirmed Covid - 19 Cases ","5e87e49c":"## Finding out the Top 10 Covid-19 affected states in India","05704032":"## Removing the missing values and separating the gender as male and female"}}