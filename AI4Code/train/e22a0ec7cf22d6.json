{"cell_type":{"87b59548":"code","83d64593":"code","a6b64724":"code","be4d354a":"code","7c82b88d":"code","57da9f73":"code","36c85196":"code","c59181ea":"code","df692b8a":"code","2a2cdd57":"code","81701bdf":"code","8adc2d46":"code","d7d88bb5":"code","0150541b":"code","219766af":"code","fd009be8":"code","341308c0":"code","cde0341f":"code","0d091706":"code","da242cc6":"code","0a6aedae":"code","ac692e14":"code","f205d352":"code","a485d18e":"code","561fc4fb":"code","0ee32b0d":"code","9e7666e7":"code","433825eb":"code","15f571e6":"code","86d77a93":"code","af68aa26":"code","efa26fb1":"code","8cfe9276":"markdown","56ef1e96":"markdown","d8b18225":"markdown","d9b3c372":"markdown","325b7a00":"markdown","df9d4cc8":"markdown","5639bad1":"markdown","aacb60dc":"markdown","c1ade6cd":"markdown","656f2f2c":"markdown","02601453":"markdown","80d5043d":"markdown","eb8e44dd":"markdown","341ded68":"markdown","711a06a3":"markdown","6ad2e6ea":"markdown","f772a658":"markdown","fa05070f":"markdown"},"source":{"87b59548":"#importing libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns","83d64593":"#loading data\ndf = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","a6b64724":"#inspecting data\ndf.head()","be4d354a":"#dropping customerID\ndf = df.drop(['CustomerID'], axis = 1)","7c82b88d":"#inspecting data\ndf.head()","57da9f73":"#inspecting datatypes\ndf.dtypes","36c85196":"#checking for missing values\nmissing_df = df.isnull()\nmissing_df.head()","c59181ea":"for column in missing_df.columns.values.tolist():\n    print(column)\n    print(missing_df[column].value_counts())\n    print()","df692b8a":"#plotting data for insights\nsns.pairplot(df, kind = 'reg')","2a2cdd57":"#performing binning on age\nbins = np.array([min(df['Age']), 35, 55, max(df['Age'])])\nbins","81701bdf":"#making groups\ngroup_names = ['Young', 'Adult', 'Elder']","8adc2d46":"#adding groups to the table\ndf['Age-binned'] = pd.cut(df['Age'], bins, labels = group_names, include_lowest = True)\ndf.head()","d7d88bb5":"#plotting distribution of each bin\nsns.set(style=\"whitegrid\")\nsns.countplot(x = df['Age-binned'])","0150541b":"#performing binning on income\nbins = np.linspace(min(df['Annual Income (k$)']), max(df['Annual Income (k$)']), 4)\nbins","219766af":"#making groups\ngroup_names = ['Low', 'Medium', 'High']","fd009be8":"#adding groups to table\ndf['Income-binned'] = pd.cut(df['Annual Income (k$)'], bins, labels = group_names, include_lowest = True)\ndf.head()","341308c0":"#plotting distribution of each bin\nsns.countplot(x = df['Income-binned'])","cde0341f":"#Understanding data distribution\ndf.describe()","0d091706":"#understanding inter column correlations\ndf.corr()","da242cc6":"#understanding gender distribution\nsns.countplot(x = df['Gender'])","0a6aedae":"#finding relation between income and spending score\nsns.boxplot(x = df['Income-binned'], y = df['Spending Score (1-100)'], hue = df['Gender']).legend(loc='upper left')","ac692e14":"#finding relation between Age and Spending Score\nsns.boxplot(x = df['Age-binned'], y = df['Spending Score (1-100)'], hue = df['Gender'])","f205d352":"#finding relation between age and annual income\nsns.boxplot(x = df['Age-binned'], y = df['Annual Income (k$)'], hue = df['Gender'])","a485d18e":"#Dropping extra columns used for analysis\ndf.drop(['Age-binned', 'Income-binned'], axis = 1, inplace = True)","561fc4fb":"#Handling categorical data\ndf = pd.concat([df, pd.get_dummies(df['Gender'])], axis = 1)","0ee32b0d":"#inspecting dataframe\ndf.head()","9e7666e7":"#dropping Gender column\ndf.drop(['Gender'], axis = 1, inplace = True)","433825eb":"#inspecting dataframe\ndf.head()","15f571e6":"#Normalizing data\nfrom sklearn import preprocessing\nnormalized_df = preprocessing.normalize(df)","86d77a93":"#Calculating Kmeans intertia\nfrom sklearn.cluster import KMeans\nKmeans_inertia = []\nK = range(1,15)\nfor k in K:\n    km = KMeans(n_clusters=k)\n    km = km.fit(normalized_df)\n    Kmeans_inertia.append(km.inertia_)","af68aa26":"#Plotting inertia to find knee.\nax = sns.lineplot(K, Kmeans_inertia)\nax.set(xlabel='clusters', ylabel='Sum of squared distances')","efa26fb1":"#Visualizing the five types of customers\nkm = KMeans(n_clusters = 5)\nkm.fit(df)\ncluster = km.predict(df)\nax = sns.scatterplot(df['Annual Income (k$)'], df['Spending Score (1-100)'], hue = cluster)\nax.legend(['cluster 1', 'cluster 2', 'cluster 3', 'cluster 4', 'cluster 5'])","8cfe9276":"Now we segregate customers based on their spending habits using Kmeans.","56ef1e96":"### Exploratory Data Analysis","d8b18225":"##### Conclusion:\n\nThere is no relation in income and age brackets. Males tend to have more income than females on an average.","d9b3c372":"### Loading data","325b7a00":"##### Conclusion:\n\nThere is some correlation between Age and Spending score.","df9d4cc8":"### Data Preprocessing","5639bad1":"##### Conclusion:\n\nOptimal number of clusters is five. Therefore there are broadly five types of customers.","aacb60dc":"# CUSTOMER SEGMENTATION","c1ade6cd":"##### Conclusion:\n\nHigh income males tend to spend more in the mall.","656f2f2c":"##### Conclusion\n\nThe mall is frequented mostly by young people followed by adults and hardly by elders.","02601453":"##### Conclusion:\n\nAll datatypes are coherent to expectation","80d5043d":"##### Conclusion:\n\nYoung people tend to spend more in the mall. Especially females.","eb8e44dd":"##### Conclusion:\n\nThe mall is frequented mostly by low and medium wealth income people and hardly by high income people.","341ded68":"##### Conclusion:\nMore females frequent the mall than males","711a06a3":"##### Conclusion:\n\nThere seems to be some correlation between age and spending score.","6ad2e6ea":"##### Conclusion:\n\nNo missing values in the dataset","f772a658":"# Conclusions:\n\n1) High income males are to be targeted.\n\n2) Low income young males and females are to be advertised.\n\n3) There are five types of customers: High income High spenders, High income low spenders, Average income average spenders,        Low income high spenders and low income low spenders. ","fa05070f":"### Kmeans Clustering"}}