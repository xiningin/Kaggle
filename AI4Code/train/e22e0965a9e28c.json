{"cell_type":{"e73714ed":"code","d42765b7":"code","70eb03f9":"code","baf271c2":"code","35ed08c6":"code","d80a9668":"code","5b453e08":"code","4cfbf135":"code","1c6c3be0":"code","2d5b41c4":"code","be1d249f":"code","def0910b":"code","50915f71":"code","735acd67":"code","01214e0c":"code","ed4ae5ce":"code","4ce771a8":"code","6f58254a":"code","e53c2aa7":"code","a4c5a23e":"code","a1cf5dd5":"code","c57039ba":"code","ca1fa3e4":"code","886e4dca":"code","b9b6e005":"code","f16656f3":"code","ac06b542":"code","963c8a7f":"code","28ec0c2e":"code","82bcbaf2":"markdown","f903be50":"markdown","8232a1a2":"markdown"},"source":{"e73714ed":"# Basic Libraries\n\nimport numpy as np\nimport pandas as pd\n\n#Visuals\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.offline as py\nimport plotly.figure_factory as ff\n\n#NLP tasks\n\nimport nltk\nfrom nltk.corpus import stopwords\nfrom sklearn.feature_extraction.text import TfidfVectorizer  \nfrom nltk.stem.porter import PorterStemmer\nfrom wordcloud import WordCloud,STOPWORDS\n\n\n#DL Tasks\n\nimport keras\nfrom keras.preprocessing.text import Tokenizer\nfrom keras.preprocessing.sequence import pad_sequences\nfrom keras.models import Sequential\nfrom keras.layers import Embedding,GlobalAvgPool1D,Dense,Dropout,Bidirectional,LSTM,GRU\nimport tensorflow as tf\n\n#ML Tasks\n\nfrom sklearn.ensemble import GradientBoostingClassifier,RandomForestClassifier,RandomForestRegressor,GradientBoostingRegressor\nfrom xgboost import XGBClassifier,XGBRFRegressor,XGBRegressor\nfrom sklearn.tree import DecisionTreeClassifier,DecisionTreeRegressor\nfrom sklearn.linear_model import LogisticRegression,LinearRegression,SGDRegressor\nfrom sklearn.svm import SVC,SVR\nfrom sklearn.neighbors import KNeighborsClassifier,KNeighborsRegressor\nfrom lightgbm import LGBMRegressor,LGBMClassifier\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix","d42765b7":"data=pd.read_json(\"..\/input\/news-headlines-dataset-for-sarcasm-detection\/Sarcasm_Headlines_Dataset_v2.json\",lines=True)\ndata.head()","70eb03f9":"data.describe()","baf271c2":"plt.figure(figsize=(15,10))\nsns.countplot(data.is_sarcastic)","35ed08c6":"sen=np.array(data.headline)\nwc=WordCloud(width=500,height=500)\nwc.generate(' '.join(sen))\nwc.to_image()","d80a9668":"import re\ndef process(x):\n    processed_tweet = re.sub(r'\\W', ' ', str(x))\n    processed_tweet = re.sub(r'\\s+[a-zA-Z]\\s+', ' ', processed_tweet)\n    processed_tweet = re.sub(r'\\^[a-zA-Z]\\s+', ' ', processed_tweet) \n    processed_tweet= re.sub(r'\\s+', ' ', processed_tweet, flags=re.I)\n    processed_tweet = re.sub(r'^b\\s+', '', processed_tweet)\n    processed_tweet = processed_tweet.lower()\n    return processed_tweet\ndata.headline=data.headline.apply(process)","5b453e08":"data.head()","4cfbf135":"tfidfconverter = TfidfVectorizer(max_features=1000, min_df=5, max_df=0.7, stop_words=stopwords.words('english'))  \ndata.headline= tfidfconverter.fit_transform(data.headline).toarray()","1c6c3be0":"data.columns","2d5b41c4":"from sklearn.model_selection import train_test_split as split,cross_val_score,KFold,GridSearchCV\nx=data.drop(['is_sarcastic','article_link'],axis=1)\ny=data['is_sarcastic']\nxr,xt,yr,yt=split(x,y,test_size=0.9)","be1d249f":"model=LGBMClassifier()\nparameters={\"n_estimators\":[1000]}\ngrid=GridSearchCV(model,parameters,cv=2)\ngrid.fit(x,y)\nprint(grid.best_score_)\nprint(grid.best_params_)\nyp=grid.predict(xt)","def0910b":"print(accuracy_score(yt,yp))\nprint(classification_report(yt,yp))","50915f71":"sns.heatmap(confusion_matrix(yt,yp),annot=True,cmap='rainbow')","735acd67":"labels=np.array(data.is_sarcastic)\nlen(np.unique(labels))","01214e0c":"tf=Tokenizer(num_words=1000,oov_token=\"oov<>\")\ntf.fit_on_texts(data.headline)","ed4ae5ce":"a=tf.word_index\na[\"oov<>\"]","4ce771a8":"seq=tf.texts_to_sequences(data.headline)\nseq[:5]","6f58254a":"pad=pad_sequences(seq,maxlen=100,padding=\"post\")","e53c2aa7":"pad=np.array(pad)","a4c5a23e":"pad","a1cf5dd5":"num_class=len(np.unique(labels))","c57039ba":"xr,xt,yr,yt=train_test_split(pad,labels,test_size=0.1)","ca1fa3e4":"yr=keras.utils.to_categorical(yr,num_class)\nyt=keras.utils.to_categorical(yt,num_class)","886e4dca":"model=Sequential()\nmodel.add(Embedding(10000,10,input_length=100))\nmodel.add(Bidirectional(GRU(32,return_sequences=True)))\nmodel.add(GlobalAvgPool1D())\nmodel.add(Dense(500,activation='relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(num_class,activation='softmax'))","b9b6e005":"model.summary()","f16656f3":"model.compile(loss=\"categorical_crossentropy\",optimizer=\"adam\",metrics=[\"accuracy\"])","ac06b542":"history=model.fit(xr,yr,epochs=10,batch_size=128,validation_split=0.1)","963c8a7f":"score=model.evaluate(xt,yt,verbose=1)\nprint(\"Loss : {}\".format(score[0]))\nprint(\"Accuracy : {}\".format(score[1]))","28ec0c2e":"import matplotlib.pyplot as plt\nfigure=plt.figure(figsize=(15,15))\nax=figure.add_subplot(121)\nax.plot(history.history['accuracy'])\nax.plot(history.history['val_accuracy'])\nax.legend(['Training Accuracy','Val Accuracy'])\nbx=figure.add_subplot(122)\nbx.plot(history.history['loss'])\nbx.plot(history.history['val_loss'])\nbx.legend(['Training Loss','Val Loss'])\nplt.show()","82bcbaf2":"# Thanks for viewing this\n\n<img src =\"https:\/\/thumbs.gfycat.com\/GoldenDelayedGreyhounddog-max-1mb.gif\">","f903be50":"# DL Approach","8232a1a2":"# ML Approach"}}