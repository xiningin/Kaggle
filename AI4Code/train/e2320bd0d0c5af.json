{"cell_type":{"f51ff20b":"code","501a8144":"code","c1d9afed":"code","f80d6213":"code","67590d64":"code","fcb277fb":"code","b9001b30":"code","798c8c47":"code","2680cab4":"code","e900b666":"code","9af181d4":"code","207509a8":"code","26d0a3d3":"code","04a0fbe6":"code","16535825":"code","b3fef609":"code","6db2ea81":"code","5e3959bd":"code","ed54b876":"code","61603e0b":"code","0d5aaf60":"code","d84ce22d":"code","bf4adffb":"code","23d74f71":"code","d9a8cdf0":"markdown","e0aeedf2":"markdown","9b51f912":"markdown","bc3574cb":"markdown","c566bdaf":"markdown","9c17b4a3":"markdown","4e075b9b":"markdown","65676562":"markdown","a4d826f6":"markdown","9ea66102":"markdown","a0b63f44":"markdown","3b71bb53":"markdown","ad8d12ea":"markdown"},"source":{"f51ff20b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n# Importing Random forest classifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","501a8144":"df.head()","c1d9afed":"df = pd.read_csv('..\/input\/Admission_Predict.csv')","f80d6213":"df.columns\n","67590d64":"df=df.rename(columns = {'Chance of Admit ':'Chance of Admit','LOR ':'LOR'})","fcb277fb":"\nprint(df.info())","b9001b30":"# TOEFL Score\nplt.scatter(df[\"TOEFL Score\"],df['Chance of Admit'])\nplt.title(\"Chance of Admit for TOEFL Scores\")\nplt.xlabel(\"TOEFL Score\")\nplt.ylabel(\"Chance of Admit\")\nplt.show()\n# GRE Score\nplt.scatter(df[\"GRE Score\"],df['Chance of Admit'])\nplt.title(\"Chance of Admit for GRE Scores\")\nplt.xlabel(\"GRE Score\")\nplt.ylabel(\"Chance of Admit\")\nplt.show()\n# Correlation between these score and  chance of admit \nprint('Correlation between TOEFL Score and Chance of Admit : ',df['TOEFL Score'].corr(df['Chance of Admit']))\nprint('Correlation between GRE Score and Chance of Admit : ',df['GRE Score'].corr(df['Chance of Admit']))","798c8c47":"df.head(10)","2680cab4":"X = df.iloc[:, 1:8].values\ny = df.iloc[:, 8].values","e900b666":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\nregressor = RandomForestRegressor(n_estimators =500, random_state = 42)\nregressor.fit(X_train, y_train)","9af181d4":"y_pred = regressor.predict(X_test)\nfrom sklearn.metrics import r2_score\nprint(\"r_square score: \", r2_score(y_test,y_pred))\n","207509a8":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","26d0a3d3":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train,y_train)\n\ny_pred_linReg = regressor.predict(X_test)\nprint(\"r_square score: \", r2_score(y_test,y_pred_linReg))","04a0fbe6":"df['Admit'] = (df['Chance of Admit']>0.5).astype(int)\ndf[['Chance of Admit','Admit']].head(10)","16535825":"X = df.iloc[:, 1:8].values\ny = df.iloc[:, 9].values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","b3fef609":"from sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(n_estimators= 500,random_state = 0)\nclassifier.fit(X_train,y_train)\ny_pred = classifier.predict(X_test)","6db2ea81":"from sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import precision_score, recall_score,f1_score\ncm = confusion_matrix(y_test,y_pred)\nprint('Random Forrest metrics\\n')\nprint('Confusion Matrix: \\n',cm)\nprint('Precision Score: ',precision_score(y_test,y_pred))\nprint('Recall Scoree  : ',recall_score(y_test,y_pred))\nprint('F1 Score       : ',f1_score(y_test,y_pred))","5e3959bd":"from sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression(random_state = 0)\nclassifier.fit(X_train, y_train)\n","ed54b876":"y_pred = classifier.predict(X_test)\ncm = confusion_matrix(y_test,y_pred)\nprint('Logistics Regression metrics\\n')\nprint('Confusion Matrix: \\n',cm)\nprint('Precision Score: ',precision_score(y_test,y_pred))\nprint('Recall Scoree  : ',recall_score(y_test,y_pred))\nprint('F1 Score       : ',f1_score(y_test,y_pred))\n","61603e0b":"from sklearn.naive_bayes import GaussianNB\nnb = GaussianNB()\nnb.fit(X_train,y_train)\n","0d5aaf60":"y_pred = classifier.predict(X_test)","d84ce22d":"print('GaussianNB metrics\\n')\nprint('Confusion Matrix: \\n',cm)\nprint('Precision Score: ',precision_score(y_test,y_pred))\nprint('Recall Scoree  : ',recall_score(y_test,y_pred))\nprint('F1 Score       : ',f1_score(y_test,y_pred))","bf4adffb":"from sklearn.svm import SVC\nclassifier = SVC(kernel = 'linear', random_state = 0)\nclassifier.fit(X_train, y_train)\ny_pred = classifier.predict(X_test)","23d74f71":"print('SVM metrics\\n')\nprint('Confusion Matrix: \\n',cm)\nprint('Precision Score : ',precision_score(y_test,y_pred))\nprint('Recall Scoree   : ',recall_score(y_test,y_pred))\nprint('F1 Score        : ',f1_score(y_test,y_pred))","d9a8cdf0":"**Classification **\n1. Random Forest Classifier\n2. Logistic\n3. SVM\n4. Naive Bayes\n5. K-NN\n","e0aeedf2":"**Lets add Admit column to dataframe  it is 0 if probabilty < 0.5 and 1 otherwise**","9b51f912":"Random forest doesn't overfit,so lets add more trees as the performance doesn't effect for the small data set available","bc3574cb":"**If the probabilty  if greater than 50 percent we consider he gets an admit**","c566bdaf":"**Feature Scaling for Linear Regression**","9c17b4a3":"* **Now y is Admit Column**","4e075b9b":"**Lets see our dataset**","65676562":"**What are the columns present**","a4d826f6":"> There seems to be almost equal correlation !!!","9ea66102":"***Lets know more about the data***","a0b63f44":"*TOEFL SCORE *","3b71bb53":"** Do universities look for GRE score or TOEFL score,Which of thess two co-relate to Chance of Admit ??**\n*  TOEFL score and GRE score relate to Chance of Admit","ad8d12ea":"**Changing the column names by removing unnecessary spaces**"}}