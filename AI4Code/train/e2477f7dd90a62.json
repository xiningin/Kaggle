{"cell_type":{"3014e93c":"code","35ee20a4":"code","897c038e":"code","bce469e7":"code","806f0fcf":"code","5848b212":"code","9e0a561e":"code","68a7be3f":"code","cd58947f":"code","f0cfc43c":"code","d25b3869":"code","dba5f7b2":"code","5f3a3a62":"code","de78cdc2":"code","7058a905":"code","63aa6ce4":"code","baeb646f":"code","ab78b351":"code","30edc688":"code","8631d8d0":"code","8d129e3d":"code","be859f39":"code","96a3d702":"code","b45cfe69":"code","6b4f18b5":"code","96db5d92":"code","53ce0bb9":"code","dbc8d4a7":"code","ceefa23e":"code","cebe2e60":"code","292a2004":"code","75fd34be":"markdown","69ad528a":"markdown","b67734db":"markdown","a1e78e79":"markdown","6ac16749":"markdown","74d9149e":"markdown","33a8ffe9":"markdown","79d12ebf":"markdown","8ecebbce":"markdown","f0e4bb71":"markdown","b59d9e0e":"markdown","3056b321":"markdown","2b37f823":"markdown","7a1ddab1":"markdown","996079c8":"markdown","51b03bbd":"markdown","f3468eb0":"markdown","abdd3736":"markdown","253665f0":"markdown","a54c3209":"markdown","8b266cb9":"markdown","d1f81f26":"markdown","f4ef743e":"markdown","509434e6":"markdown","93558634":"markdown","6a1b893e":"markdown","66430beb":"markdown","79cc4625":"markdown","02429a83":"markdown","672aa0fd":"markdown","a38870c5":"markdown","bf25fe5d":"markdown","c3e5d3ac":"markdown","5a9c572b":"markdown","0a5675c7":"markdown","694b93f1":"markdown","7af2c8c9":"markdown","8bfa3267":"markdown","e61492a4":"markdown","aa2bb900":"markdown","c568aaf1":"markdown","c5a7be97":"markdown","05090c58":"markdown","1df0ef57":"markdown","8ba7c4a2":"markdown","f29208e6":"markdown","287f00a6":"markdown","04ed9e2b":"markdown"},"source":{"3014e93c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib as rc\n\ndf = pd.read_csv(\"..\/input\/ligue-1-results-1999-to-2019\/Ligue1 Championship.csv\")","35ee20a4":"# Columns for Home team and away team Points\nconditions = [(df['Home Team'] == df['Winner']),(df['Home Team'] == df['Loser'])]\nvalues = [3,0]\nvalues1 = [0,3]\ndf['Home Team Points'] = np.select(conditions, values, default=1)\ndf['Away Team Points'] = np.select(conditions, values1, default=1)","897c038e":"# Games per season\nseason = df.groupby('Season')['Season'].count()\nseason = pd.DataFrame(season)\nseason.columns = ['Games']\nseason.reset_index(level=0, inplace=True)\n\n# Goals per season\nseason1 = df.groupby('Season')['Score'].sum()\nseason1 = pd.DataFrame(season1)\nseason1.columns = ['Total Goals']\nseason1.reset_index(level=0, inplace=True)\n\n# Home goals by season\nseason2 = df.groupby('Season')['Home Team Goals'].sum()\nseason2 = pd.DataFrame(season2)\nseason2.columns = ['Home Goals']\nseason2.reset_index(level=0, inplace=True)\n\n# Away goals by season\nseason3 = df.groupby('Season')['Away Team Goals'].sum()\nseason3 = pd.DataFrame(season3)\nseason3.columns = ['Away Goals']\nseason3.reset_index(level=0, inplace=True)\n\n# Home Team Points\nseason4 = df.groupby('Season')['Home Team Points'].sum()\nseason4 = pd.DataFrame(season4)\nseason4.columns = ['Home Team Points']\nseason4.reset_index(level=0, inplace=True)\n\n# Away Team Points\nseason5 = df.groupby('Season')['Away Team Points'].sum()\nseason5 = pd.DataFrame(season5)\nseason5.columns = ['Away Team Points']\nseason5.reset_index(level=0, inplace=True)\n\n# Merging dataframes\nseason = season.merge(season1, how='left', on='Season')\nseason = season.merge(season2, how='left', on='Season')\nseason = season.merge(season3, how='left', on='Season')\nseason = season.merge(season4, how='left', on='Season')\nseason = season.merge(season5, how='left', on='Season')\n\n# Goals per game\nseason['Goals per game'] = round(season['Total Goals']\/season['Games'],2)","bce469e7":"r = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]\n\nnames = ('1999\/00','2000\/01','2001\/02','2002\/03','2003\/04','2004\/05','2005\/06','2006\/07','2007\/08','2008\/09',\n         '2009\/10','2010\/11','2011\/12','2012\/13','2013\/14','2014\/15','2015\/16','2016\/17','2017\/18','2018\/19')\n\ncolumn1 = season['Total Goals']\n\n# bar width\nbarWidth = 0.9\n\n# Goals bar\nplt.bar(r, column1, color='darkblue', width=barWidth)\n\n# Axis\nplt.xticks(r, names)\nplt.xlabel(\"Seasons\")\nplt.ylabel(\"Goals\")\nplt.title(\"Goals by Season\")\nplt.ylim(600, 1100)\n\n# Horizontal gridlines\naxes = plt.gca()\naxes.yaxis.grid()\n\n# Chart size\nplt.rcParams[\"figure.figsize\"] = [24,8]\n \n# Show Chart\nplt.show()","806f0fcf":"column1 = season['Goals per game']\n\n# Bar width\nbarWidth = 0.9\n\n# Goals per Game bar\nplt.bar(r, column1, color='darkblue', width=barWidth)\n\n# Axis\nplt.xticks(r, names)\nplt.xlabel(\"Seasons\")\nplt.ylabel(\"Goals per game\")\nplt.title(\"Goals per game by Season\")\nplt.ylim(2, 2.8)\n\n# Horizontal gridlines\naxes = plt.gca()\naxes.yaxis.grid()\n\n# Chart size\nplt.rcParams[\"figure.figsize\"] = [24,6]\n \n# Show chart\nplt.show()","5848b212":"column1 = season['Home Goals']\/season['Total Goals']\ncolumn2 = season['Away Goals']\/season['Total Goals']\n\n# Bars width\nbarWidth = 0.9\n\n# Home Goals bar\nplt.bar(r, column1, color='darkblue', edgecolor='white', width=barWidth,label='Home Goals')\n# Away Goals bar\nplt.bar(r, column2, bottom=column1, color='red', edgecolor='white', width=barWidth,label='Away Goals')\n\n# Axis\nplt.xticks(r, names)\nplt.xlabel(\"Seasons\")\nplt.ylabel(\"Proportion\")\nplt.title(\"Proportion of Home and Away Teams Goals\")\n\n# Horizontal gridlines\naxes = plt.gca()\naxes.yaxis.grid()\n\n# Char Size\nplt.rcParams[\"figure.figsize\"] = [24,8]\n \n# Show chart\nplt.legend()\nplt.show()","9e0a561e":"column1 = season['Home Team Points']\/(season['Home Team Points']+season['Away Team Points'])\ncolumn2 = season['Away Team Points']\/(season['Home Team Points']+season['Away Team Points'])\n\n# Bars width\nbarWidth = 0.9\n\n# Home Goals bar\nplt.bar(r, column1, color='darkblue', edgecolor='white', width=barWidth,label='Home Points')\n# Away Goals bar\nplt.bar(r, column2, bottom=column1, color='red', edgecolor='white', width=barWidth,label='Away Points')\n\n# Axis\nplt.xticks(r, names)\nplt.xlabel(\"Seasons\")\nplt.ylabel(\"Proportion\")\nplt.title(\"Proportion of Home and Away Teams Points\")\n\n# Horizontal gridlines\naxes = plt.gca()\naxes.yaxis.grid()\n\n# Char Size\nplt.rcParams[\"figure.figsize\"] = [24,8]\n \n# Show chart\nplt.legend()\nplt.show()","68a7be3f":"# Games by team\nhome_games = df.groupby('Home Team')['Home Team'].count()\nhome_games = pd.DataFrame(home_games)\nhome_games.columns = ['Games']\nhome_games.reset_index(level=0, inplace=True)\n\n# Goals scored by team\nhome_games1 = df.groupby('Home Team')['Home Team Goals'].sum()\nhome_games1 = pd.DataFrame(home_games1)\nhome_games1.columns = ['Goals Scored']\nhome_games1.reset_index(level=0, inplace=True)\n\n# Goals against by team\nhome_games2 = df.groupby('Home Team')['Away Team Goals'].sum()\nhome_games2 = pd.DataFrame(home_games2)\nhome_games2.columns = ['Goals Against']\nhome_games2.reset_index(level=0, inplace=True)\n\n# Wins by team\ndf['Home Team'] = df['Home Team'].astype('category')\nhome_games3 = df[df['Winner'] == df['Home Team']].groupby(['Home Team']).size().reset_index(name='Wins')\n\n# Loss by team\ndf['Home Team'] = df['Home Team'].astype('category')\nhome_games4 = df[df['Winner'] == df['Away Team']].groupby(['Home Team']).size().reset_index(name='Loss')\n\n# Draws by team\ndf['Home Team'] = df['Home Team'].astype('category')\nhome_games5 = df[df['Winner'] == 'Draw'].groupby(['Home Team']).size().reset_index(name='Draws')\n\n# Merging dataframes\nhome_games = home_games.merge(home_games1, how='left', on='Home Team')\nhome_games = home_games.merge(home_games2, how='left', on='Home Team')\nhome_games = home_games.merge(home_games3, how='left', on='Home Team')\nhome_games = home_games.merge(home_games4, how='left', on='Home Team')\nhome_games = home_games.merge(home_games5, how='left', on='Home Team')\n\n# Goals scored per game\nhome_games['Goals scored per game'] = round(home_games['Goals Scored']\/home_games['Games'],2)\n\n# Goals against per game\nhome_games['Goals against per game'] = round(home_games['Goals Against']\/home_games['Games'],2)\n\n# Create 'Proportion Wins' column\nhome_games['% Wins'] = 100*round(home_games['Wins']\/home_games['Games'],3)\n\n# Create 'Proportion Loss' column\nhome_games['% Loss'] = 100*round(home_games['Loss']\/home_games['Games'],3)\n\n# Create 'Proportion Draws' column\nhome_games['% Draws'] = 100*round(home_games['Draws']\/home_games['Games'],3)\n\n# Create 'Aprov' column\nhome_games['% Points Performance'] = 100*round((3*home_games['Wins']+home_games['Draws'])\/(3*home_games['Games']),3)","cd58947f":"# Order dataframe by '% Wins'\nhome_games.sort_values(by=['% Wins'], inplace=True, ascending=False)\nax = home_games.plot.barh(x='Home Team', y='% Wins',color ='darkblue',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","f0cfc43c":"# Order dataframe by 'Goals per game'\nhome_games.sort_values(by=['Goals scored per game'], inplace=True, ascending=False)\nax = home_games.plot.barh(x='Home Team', y='Goals scored per game',color ='darkblue',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","d25b3869":"# Order dataframe by 'Goals Suf per game'\nhome_games.sort_values(by=['Goals against per game'], inplace=True, ascending=False)\nax = home_games.plot.barh(x='Home Team', y='Goals against per game',color ='darkblue',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","dba5f7b2":"home_games.sort_values(by=['% Points Performance'], inplace=True, ascending=False)\nax = home_games.plot.barh(x='Home Team', y='% Points Performance',color ='darkblue',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","5f3a3a62":"# Games by team\naway_games = df.groupby('Away Team')['Away Team'].count()\naway_games = pd.DataFrame(away_games)\naway_games.columns = ['Games']\naway_games.reset_index(level=0, inplace=True)\n\n# Goals scored by team\naway_games1 = df.groupby('Away Team')['Away Team Goals'].sum()\naway_games1 = pd.DataFrame(away_games1)\naway_games1.columns = ['Goals Scored']\naway_games1.reset_index(level=0, inplace=True)\n\n# Goals against by team\naway_games2 = df.groupby('Away Team')['Home Team Goals'].sum()\naway_games2 = pd.DataFrame(away_games2)\naway_games2.columns = ['Goals Against']\naway_games2.reset_index(level=0, inplace=True)\n\n# Wins by team\ndf['Away Team'] = df['Away Team'].astype('category')\naway_games3 = df[df['Winner'] == df['Away Team']].groupby(['Away Team']).size().reset_index(name='Wins')\n\n# Loss by team\ndf['Away Team'] = df['Away Team'].astype('category')\naway_games4 = df[df['Winner'] == df['Home Team']].groupby(['Away Team']).size().reset_index(name='Loss')\n\n# Draws by team\ndf['Away Team'] = df['Away Team'].astype('category')\naway_games5 = df[df['Winner'] == 'Draw'].groupby(['Away Team']).size().reset_index(name='Draws')\n\n# Merging dataframes\naway_games = away_games.merge(away_games1, how='left', on='Away Team')\naway_games = away_games.merge(away_games2, how='left', on='Away Team')\naway_games = away_games.merge(away_games3, how='left', on='Away Team')\naway_games = away_games.merge(away_games4, how='left', on='Away Team')\naway_games = away_games.merge(away_games5, how='left', on='Away Team')\n\n# Goals scored per game\naway_games['Goals scored per game'] = round(away_games['Goals Scored']\/away_games['Games'],2)\n\n# Goals against per game\naway_games['Goals against per game'] = round(away_games['Goals Against']\/away_games['Games'],2)\n\n# Create 'Proportion Wins' column\naway_games['% Wins'] = 100*round(away_games['Wins']\/away_games['Games'],3)\n\n# Create 'Proportion Loss' column\naway_games['% Loss'] = 100*round(away_games['Loss']\/away_games['Games'],3)\n\n# Create 'Proportion Draws' column\naway_games['% Draws'] = 100*round(away_games['Draws']\/away_games['Games'],3)\n\n# Create 'Aprov' column\naway_games['% Points Performance'] = 100*round((3*away_games['Wins']+away_games['Draws'])\/(3*away_games['Games']),3)","de78cdc2":"# Order dataframe by '% Wins'\naway_games.sort_values(by=['% Wins'], inplace=True, ascending=False)\nax = away_games.plot.barh(x='Away Team', y='% Wins',color ='red',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","7058a905":"# Order dataframe by 'Goals per game'\naway_games.sort_values(by=['Goals scored per game'], inplace=True, ascending=False)\nax = away_games.plot.barh(x='Away Team', y='Goals scored per game',color ='red',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","63aa6ce4":"# Order dataframe by 'Goals against per game'\naway_games.sort_values(by=['Goals against per game'], inplace=True, ascending=False)\nax = away_games.plot.barh(x='Away Team', y='Goals against per game',color ='red',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","baeb646f":"away_games.sort_values(by=['% Points Performance'], inplace=True, ascending=False)\nax = away_games.plot.barh(x='Away Team', y='% Points Performance',color ='red',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","ab78b351":"# Make some changes\nhome_results = home_games.copy()\nhome_results = home_results.drop(['Goals Scored', 'Goals Against','Goals scored per game', 'Goals against per game',\n                                  '% Wins','% Loss','% Draws','% Points Performance'], axis = 1)\nhome_results = home_results.rename(columns={\"Home Team\":\"Team\",\"Games\":\"Home Games\",\"Wins\":\"Wins Home\",\"Loss\":\"Loss Home\",\n                               \"Draws\":\"Draws Home\"})\n\naway_results = away_games.copy()\naway_results = away_results.drop(['Goals Scored', 'Goals Against','Goals scored per game', 'Goals against per game',\n                                  '% Wins', '% Loss','% Draws','% Points Performance'], axis = 1)\naway_results = away_results.rename(columns={\"Away Team\":\"Team\",\"Games\":\"Away Games\",\"Wins\":\"Wins Away\",\"Loss\":\"Loss Away\",\n                                                \"Draws\":\"Draws Away\"})\n\n# Merger dataframes\ngames_results = home_results.merge(away_results, how='left', on='Team')\n\n# Create column 'Total Games'\ngames_results['Total Games'] = games_results['Home Games'] + games_results['Away Games']\n\n# Create column 'Total Wins'\ngames_results['Total Wins'] = games_results['Wins Home'] + games_results['Wins Away']\n\n# Create column 'Total Loss'\ngames_results['Total Loss'] = games_results['Loss Home'] + games_results['Loss Away']\n\n# Create column 'Total Draws'\ngames_results['Total Draws'] = games_results['Draws Home'] + games_results['Draws Away']\n\n# Create column 'Home points'\ngames_results['Home points'] = 3*games_results['Wins Home'] + games_results['Draws Home']\n\n# Create column 'Away points'\ngames_results['Away points'] = 3*games_results['Wins Away'] + games_results['Draws Away']\n\n# Create column 'Total points'\ngames_results['Total points'] = games_results['Home points'] + games_results['Away points']\n\n# Create column 'Points performance'\ngames_results['Points Performance'] = 100*round((3*games_results['Total Wins']+games_results['Total Draws'])\/\n                                                (3*games_results['Total Games']),3)\n\n# Create column '% Wins at home'\ngames_results['% Wins Home'] = 100*round(games_results['Wins Home']\/games_results['Total Wins'],3)\n\n# Create column '% Wins Away'\ngames_results['% Wins Away'] = 100*round(games_results['Wins Away']\/games_results['Total Wins'],3)\n\n# Create column '% Home points'\ngames_results['% Home points'] = 100*round(games_results['Home points']\/games_results['Total points'],3)\n\n# Create column '% Away points'\ngames_results['% Away points'] = 100*round(games_results['Away points']\/games_results['Total points'],3)","30edc688":"games_results.sort_values(by=['Total Wins'], inplace=True, ascending=False)\nax = games_results.plot.barh(x='Team', y='Total Wins',color ='darkblue',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","8631d8d0":"# Sort dataframe\ngames_results.sort_values(by=['% Wins Home'], inplace=True, ascending=False)\n\n# Create columns for teams\nteam = games_results['Team'].tolist()\n\n# Create columns for wins at home and wins away\nwin_home = games_results['% Wins Home'].to_numpy()\nwin_away = games_results['% Wins Away'].to_numpy()\nvalues = np.vstack((win_home, win_away)).T\n\n# Create new dataframe\nprop_win = pd.DataFrame(values, team)\n\n# Define color\ncolor = ['darkblue','red']\n\n# Define legend\nlabels = ['% Wins Home','% Wins Away']\n\n# Plot chart\nprop_win.plot.barh(color = color,stacked=True,figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()\nplt.legend(labels,loc=1)","8d129e3d":"games_results.sort_values(by=['Total points'], inplace=True, ascending=False)\nax = games_results.plot.barh(x='Team', y='Total points',color ='red',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","be859f39":"games_results.sort_values(by=['Points Performance'], inplace=True, ascending=False)\nax = games_results.plot.barh(x='Team', y='Points Performance',color ='red',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","96a3d702":"# Sort dataframe\ngames_results.sort_values(by=['% Home points'], inplace=True, ascending=False)\n\n# Create columns for teams\nteam = games_results['Team'].tolist()\n\n# Create columns for wins at home and wins away\npoints_home = games_results['% Home points'].to_numpy()\npoints_away = games_results['% Away points'].to_numpy()\nvalues = np.vstack((points_home, points_away)).T\n\n# Create new dataframe\nprop_win = pd.DataFrame(values, team)\n\n# Define color\ncolor = ['darkblue','red']\n\n# Define legend\nlabels = ['% Home points','% Away points']\n\n# Plot chart\nprop_win.plot.barh(color = color,stacked=True,figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()\nplt.legend(labels,loc=1)","b45cfe69":"# Make some changes\nhome_goals = home_games.copy()\nhome_goals = home_goals.drop(['Wins','Loss','Draws','Goals scored per game','Goals against per game','% Wins',\n                             '% Loss','% Draws','% Points Performance'], axis = 1)\nhome_goals = home_goals.rename(columns={\"Home Team\":\"Team\",\"Games\":\"Home Games\",\"Goals Scored\":\"Goals Scored Home\",\n                                       \"Goals Against\":\"Goals Against Home\"})\n\naway_goals = away_games.copy()\naway_goals = away_goals.drop(['Wins','Loss','Draws','Goals scored per game','Goals against per game','% Wins',\n                             '% Loss','% Draws','% Points Performance'], axis = 1)\naway_goals = away_goals.rename(columns={\"Away Team\":\"Team\",\"Games\":\"Away Games\",\"Goals Scored\":\"Goals Scored Away\",\n                                       \"Goals Against\":\"Goals Against Away\"})\n\n# Merger datafrmaes\ngames_goals = home_goals.merge(away_goals, how='left', on='Team')\n\n# Create 'Total Games' column\ngames_goals['Total Games'] = games_goals['Home Games'] + games_goals['Away Games']\n\n# Create 'Total goals scored' column\ngames_goals['Total goals scored'] = games_goals['Goals Scored Home'] + games_goals['Goals Scored Away']\n\n# Create 'Total goals against' column\ngames_goals['Total goals against'] = games_goals['Goals Against Home'] + games_goals['Goals Against Away']\n\n# Create 'Total goals scored per game' column\ngames_goals['Total goals scored per game'] = round(games_goals['Total goals scored']\/games_goals['Total Games'],2)\n\n# Create 'Total goals against per game' column\ngames_goals['Total goals against per game'] = round(games_goals['Total goals against']\/games_goals['Total Games'],2)\n\n# Create '% goals scored home' column\ngames_goals['% goals scored home'] = 100*round(games_goals['Goals Scored Home']\/games_goals['Total goals scored'],3)\n\n# Create '% goals scored away' column\ngames_goals['% goals scored away'] = 100*round(games_goals['Goals Scored Away']\/games_goals['Total goals scored'],3)\n\n# Create '% goals against home' column\ngames_goals['% goals against home'] = 100*round(games_goals['Goals Against Home']\/games_goals['Total goals against'],3)\n\n# Create '% goals against away' column\ngames_goals['% goals against away'] = 100*round(games_goals['Goals Against Away']\/games_goals['Total goals against'],3)\n\n# Create 'Dif goals' column -- Difference between total goals scored and total goals against\ngames_goals['Dif Goals'] = games_goals['Total goals scored'] - games_goals['Total goals against']","6b4f18b5":"games_goals.sort_values(by=['Total goals scored'], inplace=True, ascending=False)\nax = games_goals.plot.barh(x='Team', y='Total goals scored',color ='red',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","96db5d92":"games_goals.sort_values(by=['Total goals scored per game'], inplace=True, ascending=False)\nax = games_goals.plot.barh(x='Team', y='Total goals scored per game',color ='red',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","53ce0bb9":"games_goals.sort_values(by=['Total goals against'], inplace=True, ascending=False)\nax = games_goals.plot.barh(x='Team', y='Total goals against',color ='red',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","dbc8d4a7":"games_goals.sort_values(by=['Dif Goals'], inplace=True, ascending=False)\nax = games_goals.plot.barh(x='Team', y='Dif Goals',color ='darkblue',figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()","ceefa23e":"# Sort dataframe\ngames_goals.sort_values(by=['% goals scored home'], inplace=True, ascending=False)\n\n# Create columns for teams\nteam = games_goals['Team'].tolist()\n\n# Create columns for goals at home and goals away\ngoals_home = games_goals['% goals scored home'].to_numpy()\ngoals_away = games_goals['% goals scored away'].to_numpy()\nvalues = np.vstack((goals_home, goals_away)).T\n\n# Create new dataframe\nprop_win = pd.DataFrame(values, team)\n\n# Define color\ncolor = ['darkblue','red']\n\n# Define legend\nlabels = ['% Home goals','% Away goals']\n\n# Plot chart\nprop_win.plot.barh(color = color,stacked=True,figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()\nplt.legend(labels,loc=1)","cebe2e60":"# Sort dataframe\ngames_goals.sort_values(by=['% goals against home'], inplace=True, ascending=False)\n\n# Create columns for teams\nteam = games_goals['Team'].tolist()\n\n# Create columns for goals against at home and goals away\ngoals_a_home = games_goals['% goals against home'].to_numpy()\ngoals_a_away = games_goals['% goals against away'].to_numpy()\nvalues = np.vstack((goals_a_home, goals_a_away)).T\n\n# Create new dataframe\nprop_win = pd.DataFrame(values, team)\n\n# Define color\ncolor = ['darkblue','red']\n\n# Define legend\nlabels = ['% Home goals against','% Away goals against']\n\n# Plot chart\nprop_win.plot.barh(color = color,stacked=True,figsize=(10,10))\naxes = plt.gca()\naxes.xaxis.grid()\nplt.legend(labels,loc=1)","292a2004":"goals = games_goals['Total goals scored'].sum()\nprint(\"Goals scored: \"+str(goals))\n\ngames = games_goals['Total Games'].sum()\ngoals_per_game = round(goals\/games,2)\nprint(\"Goals scored per game: \"+str(goals_per_game))\n\nb_winner = games_results.nlargest(1, 'Total Wins')\nwinner = b_winner.iloc[0][0]\nwins = b_winner.iloc[0][10]\nprint(\"Most wins: \"+str(winner)+ \" with \" + str(wins)+ \" wins.\")\n\nb_goals = games_goals.nlargest(1, 'Total goals scored')\nteam = b_goals.iloc[0][0]\ngoals = b_goals.iloc[0][8]\nprint(\"Most goals: \"+str(team)+ \" with \" + str(goals)+ \" goals.\")\n\n\nb_goals_per_game = games_goals.nlargest(1, 'Total goals scored per game')\nteam = b_goals_per_game.iloc[0][0]\ngpg = b_goals_per_game.iloc[0][10]\nprint(\"Most goals per game: \"+str(team)+ \" with \" + str(gpg)+ \" goals.\")\n\nb_points = games_results.nlargest(1, 'Total points')\nteam = b_points.iloc[0][0]\npoints = b_points.iloc[0][15]\nprint(\"Most points earned: \"+str(team)+ \" with \" + str(points)+ \" points.\")","75fd34be":"In this kernel I'll make a quick analysis of Ligue 1. The analyze will be divided in 3 topics:\n\n### Season\n* Goals by season\n* Goals per game by season\n* Proportion of Goals scored by home and away teams\n* Proportion of Points earned by home and away teams\n\n\n\n### Team\n#### Home Games\n* Proportion of wins at home\n* Goals scored per game at home\n* Goals against per game at home\n* Points performance\n\n#### Away Games\n* Proportion of wins away\n* Goals scored per game away\n* Goals against per game away\n* Points performance\n\n#### All Games\n* Wins by team\n* Proportion of wins at home and wins away\n* Total points\n* Points Performance\n* Proportion of points earned at home and points earned away\n* Total Goals\n* Total goals per game\n* Total goals against\n* Difference between goals scored and goals against\n* Proportion between goals scored at home and scored away\n* Proportion of goals against at home and away\n\n\n\n### Conclusion\n* How many goals were scored in Ligue 1 during this period\n* How many goals were scored per game in Ligue 1 during this period\n* Which team won the most games\n* Which team scored the most goals\n* Which team scored the most goals per game\n* Which team earned the most points\n\n\n\nIf you find anything wrong or if you have any suggestion, let me know.","69ad528a":"## Away games","b67734db":"### Proportion of Wins Away","a1e78e79":"# Conclusion","6ac16749":"### Goals per Game","74d9149e":"I'll make 4 dataframes, one for home games, one for away games, one for results of all games and one for goals of all games.\n","33a8ffe9":"### Proportion of Points earned by home and away teams","79d12ebf":"### Points Performance","8ecebbce":"### Total Goals","f0e4bb71":"## All Games","b59d9e0e":"### Goals against per game at home","3056b321":"### Proportion between goals scored at home and scored away","2b37f823":"No team won more than 50% of the games played on the road.","7a1ddab1":"### Total goals per game","996079c8":"Only Lyon and PSG won more than 60% of their home games.","51b03bbd":"Let's build a dataframe for seasons. First, I'll group games and goals.","f3468eb0":"### Points performance","abdd3736":"# Importing packages and dataset","253665f0":"### Proportion of goals against at home and away","a54c3209":"More than 80% of Istres wins happened when the team played at home.\nNo team has more wins away than when playing at home. It seems like there's a home field advantage.","8b266cb9":"## Home Games","d1f81f26":"### Goals against per game","f4ef743e":"Now, let's see goals scored and against.","509434e6":"It's interesting to notice that the most dominat teams (Lyon, PSG, Monaco and Marseille) have earned less than 60% of points at home. To be a great team, it's important to earn points on the road.","93558634":"I'll create a column with points earned by the home team and away team.","6a1b893e":"Proportionally, how many goals were scored by teams playing at home and how many goals were scored by teams playing away?","66430beb":"Let's build a dataframe using the others two dataframes 'home_games' and 'away_games'.\n\nFirst, let's see wins and points.","79cc4625":"What's the share of home games won by each team?","02429a83":"### Proportion of wins at home","672aa0fd":"### Proportion of wins at home and wins away","a38870c5":"### Proportion of Goals scored by home and away teams","bf25fe5d":"Only 6 teams earned more than 50% of the points played.","c3e5d3ac":"### Goals by Season","5a9c572b":"### Goals per game by Season","0a5675c7":"### Goals per game at home","694b93f1":"# Season","7af2c8c9":"### Points Performance","8bfa3267":"### Difference between goals scored and goals against","e61492a4":"What's the share of away games won by each team?","aa2bb900":"Proportionally, how many points were earned by teams playing at home and how many points were earned by teams playing away?","c568aaf1":"From all the wins, how ","c5a7be97":"### Total points","05090c58":"Except for Ajaccio GFCO and Boulogne, most goals against happened when the teams played away.","1df0ef57":"### Wins by team","8ba7c4a2":"Lyon and PSG are the only teams to earn more than 50% of points played when playing on the road.","f29208e6":"# Teams","287f00a6":"### Proportion of points earned at home and points earned away","04ed9e2b":"### Total goals against"}}