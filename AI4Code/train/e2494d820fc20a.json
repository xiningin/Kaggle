{"cell_type":{"1e099202":"code","279ca131":"code","9886ed23":"code","ef0a1e5f":"code","6fc9d47a":"code","4951f9ec":"code","a1aa9cd5":"code","75f06300":"code","c1973065":"code","930a174b":"code","ff7dd68f":"code","4671d93e":"code","56d54e8a":"code","86dc700d":"code","f02025bf":"code","bc235aba":"code","3e32bf88":"code","68936087":"code","d5203160":"code","a2f7453c":"code","6fad66dc":"code","0b471cc1":"markdown","0ca6d405":"markdown","0afc55f2":"markdown","355b2c36":"markdown","96d4bced":"markdown","c3043bae":"markdown","8f900f35":"markdown","51955a24":"markdown","10a53046":"markdown"},"source":{"1e099202":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%config Completer.use_jedi = False\n\nimport warnings\nwarnings.filterwarnings('ignore')","279ca131":"df = pd.read_csv('..\/input\/cassava-leaf-disease-classification\/train.csv')\ndf.head()","9886ed23":"# Importing the json file with labels\nimport json\n\nwith open('..\/input\/cassava-leaf-disease-classification\/label_num_to_disease_map.json') as f:\n    real_labels = json.load(f)\n    real_labels = {int(k):v for k,v in real_labels.items()}\n\nreal_labels","ef0a1e5f":"sns.countplot(df['label'])","6fc9d47a":"from sklearn.model_selection import train_test_split\ntrain,test = train_test_split(df,test_size = 0.1,stratify = df['label'])","4951f9ec":"from tensorflow.keras.applications.efficientnet import EfficientNetB3, preprocess_input\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","a1aa9cd5":"datagen = ImageDataGenerator(\n    preprocessing_function = preprocess_input)","75f06300":"train['label'] = train['label'].astype(str)\ntrain_gen = datagen.flow_from_dataframe(\n    train,\n    directory = '..\/input\/cassava-leaf-disease-classification\/train_images',\n    x_col = 'image_id',\n    y_col = 'label',\n    target_size = (512,512),\n    batch_size = 8\n)\n\ntest['label'] = test['label'].astype(str)\nval_gen = datagen.flow_from_dataframe(\n    test,\n    directory = '..\/input\/cassava-leaf-disease-classification\/train_images',\n    x_col = 'image_id',\n    y_col = 'label',\n    target_size = (512,512),\n    batch_size = 8\n)","c1973065":"base_model = EfficientNetB3(include_top=False, weights='imagenet',input_shape=(512,512,3))","930a174b":"from tensorflow.keras import layers,models\n\nmodel = models.Sequential()\nmodel.add(base_model)\nmodel.add(layers.GlobalAveragePooling2D())\nmodel.add(layers.Dense(256,activation='relu'))\nmodel.add(layers.Dropout(0.4))\nmodel.add(layers.Dense(5,activation='softmax'))\n\nmodel.summary()","ff7dd68f":"model.compile(\n    optimizer='adam',\n    loss = 'categorical_crossentropy',\n    metrics = ['accuracy'])","4671d93e":"from keras.callbacks import ModelCheckpoint,ReduceLROnPlateau\ncheckpoint = ModelCheckpoint(filepath='.\/best_model.h5', monitor='val_loss', save_best_only=True,verbose=1)\n\nreducelr = ReduceLROnPlateau( \n    monitor='val_loss',\n    factor=0.2,\n    patience=2,\n    min_lr=1e-6,\n    mode='min',\n    verbose=1\n)\n\nmy_callbacks = [checkpoint,reducelr]","56d54e8a":"train_steps = np.ceil(train_gen.n\/train_gen.batch_size)\nval_steps = np.ceil(val_gen.n\/val_gen.batch_size)","86dc700d":"history = model.fit(\n    train_gen,\n    batch_size = 8,\n    epochs = 10,\n    steps_per_epoch = train_steps,\n    validation_data = val_gen,\n    validation_steps = val_steps,\n    callbacks = my_callbacks)","f02025bf":"model.save('.\/best_model2.h5')","bc235aba":"import matplotlib.pyplot as plt\n# summarize history for accuracy\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()\n# summarize history for loss\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()","3e32bf88":"from tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.models import load_model\nmodel = load_model('.\/best_model.h5')","68936087":"ss = pd.read_csv('..\/input\/cassava-leaf-disease-classification\/sample_submission.csv')\nss.head()","d5203160":"test_path = '..\/input\/cassava-leaf-disease-classification\/test_images\/'","a2f7453c":"preds = []\n\nfor image_name in ss.image_id:\n    img = image.load_img(test_path+image_name,target_size = (512,512))\n    x = image.img_to_array(img)\n    x = np.expand_dims(x,axis=0)\n    x = preprocess_input(x)\n    \n    prediction = model.predict(x)\n    prediction = np.argmax(prediction)\n    \n    preds.append(prediction)","6fad66dc":"my_submission = pd.DataFrame({'image_id': ss.image_id, 'label': preds})\nmy_submission.to_csv('submission.csv', index=False)\nmy_submission.head()","0b471cc1":"# Data Loading and Splitting","0ca6d405":"# Modeling","0afc55f2":"# Training","355b2c36":"# Submission\n### Note: Separate notebook has to be created for submission","96d4bced":"# Cassava Disease Classification","c3043bae":"# Conclusion\n1. The current model was able to get accuracy of 87% on validation data and 96% on training data.\n2. On test dataset it gives accuracy of 88%.\n3. Furthers techniques can be applied to prevent the model from overfiiting to get better accuracy.\n\n\n![](https:\/\/st3.depositphotos.com\/1998651\/13850\/v\/1600\/depositphotos_138506364-stock-illustration-cup-of-coffee-with-have.jpg)\n","8f900f35":"# Data Generator","51955a24":"# Plotting results","10a53046":"## Introduction\n1. The notebook is beginners approach for Cassava Disease Classification.\n2. The current notebook uses EfficientNetB3 for transfer learning.\n3. It achieve accuracy of more than 87% on validation data and 96% on training data. "}}