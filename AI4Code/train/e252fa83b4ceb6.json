{"cell_type":{"0eddcc12":"code","d156cfe8":"code","1be0f248":"code","970c6057":"code","cfbb93c4":"code","d157e5ad":"code","3ee0ef7f":"code","9fe3262e":"code","6f42b92e":"code","2ea141ae":"code","e6703041":"code","5808e092":"code","ae57c1b2":"code","ba87db51":"code","698fd212":"code","3d6fb3f8":"code","8cfa2b5c":"code","dab26a7f":"code","dba9fb13":"code","1940fb9f":"code","00003b3f":"code","0b537f6d":"code","7f858847":"code","222b33d3":"code","efa1c386":"code","933bcfe5":"code","dfb8d4d9":"code","2aeae25e":"code","390c789d":"code","ec4b31e3":"code","6a0cd661":"code","6dc95fa1":"code","05154da5":"code","fe456e07":"code","3a7df0bf":"code","8a417b68":"code","0987cd59":"code","ff79cad8":"code","139219c5":"code","5a2f9536":"code","cd1869b2":"code","11adbe00":"markdown","86c6dccf":"markdown"},"source":{"0eddcc12":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d156cfe8":"data = pd.read_csv('..\/input\/credit-card-customers\/BankChurners.csv')\npd.set_option('display.max_columns', None)\ndata.head()","1be0f248":"data = data.drop(data.iloc[:, 21:], \n                       axis = 1) \ndata.head()","970c6057":"data.info()","cfbb93c4":"data.isna().sum()","d157e5ad":"for i in data.columns:\n    if 'object' in str(data[str(i)].dtype):\n        print(data[str(i)].unique())","3ee0ef7f":"data = pd.get_dummies(data, drop_first=True)\ndata.head()","9fe3262e":"print(data.shape)","6f42b92e":"data.info()","2ea141ae":"import seaborn as sns\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(18,18))\nsns.heatmap(data.corr())","e6703041":"#sns.pairplot(data)","5808e092":"data.describe()\ndata.columns","ae57c1b2":"from numpy import asarray\nfrom sklearn.preprocessing import MinMaxScaler\n# define min max scaler\nnorm = MinMaxScaler().fit(data)\ndata_norm_arr = norm.transform(data)\ndata_norm=pd.DataFrame(data=data_norm_arr, columns = ['CLIENTNUM', 'Customer_Age', 'Dependent_count', 'Months_on_book',\n       'Total_Relationship_Count', 'Months_Inactive_12_mon',\n       'Contacts_Count_12_mon', 'Credit_Limit', 'Total_Revolving_Bal',\n       'Avg_Open_To_Buy', 'Total_Amt_Chng_Q4_Q1', 'Total_Trans_Amt',\n       'Total_Trans_Ct', 'Total_Ct_Chng_Q4_Q1', 'Avg_Utilization_Ratio',\n       'Attrition_Flag_Existing Customer', 'Gender_M',\n       'Education_Level_Doctorate', 'Education_Level_Graduate',\n       'Education_Level_High School', 'Education_Level_Post-Graduate',\n       'Education_Level_Uneducated', 'Education_Level_Unknown',\n       'Marital_Status_Married', 'Marital_Status_Single',\n       'Marital_Status_Unknown', 'Income_Category_$40K - $60K',\n       'Income_Category_$60K - $80K', 'Income_Category_$80K - $120K',\n       'Income_Category_Less than $40K', 'Income_Category_Unknown',\n       'Card_Category_Gold', 'Card_Category_Platinum', 'Card_Category_Silver'])","ba87db51":"data_norm.describe()","698fd212":"data_norm.shape","3d6fb3f8":"data_norm.head()","8cfa2b5c":"y= data_norm[\"Attrition_Flag_Existing Customer\"]\ny.unique()\nx=data_norm.drop(\"Attrition_Flag_Existing Customer\", axis=1)","dab26a7f":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=0)","dba9fb13":"x_test","1940fb9f":"import xgboost as xgb\nclassifier=xgb.XGBClassifier()\nclassifier.fit(x_train,y_train)","00003b3f":"print(\"Coefficient of determination R^2 <-- on train set: {}\".format(classifier.score(x_train, y_train)))","0b537f6d":"from sklearn.model_selection import cross_val_score\nscore=cross_val_score(classifier,x,y,cv=5)","7f858847":"score.mean()","222b33d3":"xgb_pred=classifier.predict(x_test)","efa1c386":"xgb_pred","933bcfe5":"y_test","dfb8d4d9":"import matplotlib.pyplot as plt\ndata.plot(x = \"Gender_M\", y = \"Attrition_Flag_Existing Customer\", kind = \"hist\")\nplt.show()","2aeae25e":"import matplotlib.pyplot as plt\ndata.plot(x = \"Attrition_Flag_Existing Customer\", y = \"Customer_Age\", kind = \"hist\")\nplt.show()","390c789d":"df1= data[[\"Gender_M\",\"Customer_Age\", \"Attrition_Flag_Existing Customer\"]]\ndf1.groupby([\"Gender_M\",\"Customer_Age\"]).sum()","ec4b31e3":"orig_data = pd.read_csv('..\/input\/credit-card-customers\/BankChurners.csv')\npd.set_option('display.max_columns', None)\norig_data.head()\norig_data = orig_data.drop(orig_data.iloc[:, 21:], \n                       axis = 1) \norig_data.head()\norig_data.groupby([\"Gender\",\"Customer_Age\"]).sum()","6a0cd661":"#example 1\npd.set_option('display.max_rows', None)\nresult = data[['Gender_M','Attrition_Flag_Existing Customer','Customer_Age']].groupby(['Gender_M','Customer_Age']).agg(['count','sum']).reset_index()\nresult","6dc95fa1":"result['Prob_churn'] = 1-(result.iloc[:,3]\/result.iloc[:,2])\nresult","05154da5":"result.sort_values(by='Prob_churn', ascending=False, inplace=True)\nresult","fe456e07":"result.groupby(by=['Gender_M', 'Customer_Age']).sum().sort_values(by='Prob_churn', ascending=False)","3a7df0bf":"plt.hist(result['Prob_churn'])#, bins=int(150\/5))","8a417b68":"lst= result.columns\nlst","0987cd59":"sns.distplot(result[('Attrition_Flag_Existing Customer', 'sum')], hist=True, kde=True, \n             bins=int(180\/5), color = 'darkblue', \n             hist_kws={'edgecolor':'black'},\n             kde_kws={'linewidth': 4})","ff79cad8":"sns.distplot(result[('Prob_churn', '')], hist=True, kde=True, \n             bins=int(180\/5), color = 'darkblue', \n             hist_kws={'edgecolor':'black'},\n             kde_kws={'linewidth': 4})","139219c5":"result['Churn']=result.iloc[:,1]-result.iloc[:,2]\nsns.distplot(result[('Churn', '')], hist=True, kde=True, \n             bins=int(180\/5), color = 'darkblue', \n             hist_kws={'edgecolor':'black'},\n             kde_kws={'linewidth': 4})","5a2f9536":"sns.distplot(result[('Attrition_Flag_Existing Customer', 'count')], hist=True, kde=True, \n             bins=int(180\/5), color = 'darkblue', \n             hist_kws={'edgecolor':'black'},\n             kde_kws={'linewidth': 4})","cd1869b2":"data[['Gender_M','Attrition_Flag_Existing Customer','Customer_Age']].groupby(['Gender_M','Customer_Age']).sum().sort_values(by='Attrition_Flag_Existing Customer', ascending=True)","11adbe00":"we will try that: label encode of income and check final accuracy","86c6dccf":"Less females are existing customers than males"}}