{"cell_type":{"2b094d9b":"code","f4938259":"code","c89e933e":"code","e71d1ba5":"code","c2747aba":"code","d3864552":"code","25256918":"code","665d3d73":"code","fb8d5f95":"code","6f5c2cb1":"code","bb11335c":"code","9c199590":"code","8afdaaba":"code","e931f211":"code","3eb8fdc5":"code","01b5db6e":"code","ce2e7fa2":"code","ccf22ce3":"code","34d5941e":"code","faceda96":"code","67f335b1":"code","6bf938ca":"code","9523514f":"code","9719274d":"code","32f5aa42":"code","2c6ab765":"code","149ef8a5":"code","b84f7cbd":"markdown","dd1d3715":"markdown","44e56d45":"markdown","f985fe6d":"markdown","9cf788ab":"markdown","401b4aa5":"markdown","53f76d3d":"markdown","dae0a161":"markdown","61e90510":"markdown","df829d9a":"markdown","cc144811":"markdown","9de3ad75":"markdown","51371aef":"markdown","5289bfeb":"markdown","5ace8ff4":"markdown","3aa054a0":"markdown","85e81fb5":"markdown","a95ce06e":"markdown","735ff6bf":"markdown","d851fa4d":"markdown","3ef92458":"markdown","7bed8dac":"markdown"},"source":{"2b094d9b":"import matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport pandas as pd\nimport regex as re\nimport os\nfrom pathlib import Path\n\nspreadspoke_path = Path(\"..\/input\", 'spreadspoke_scores.csv')","f4938259":"nfl_games = pd.read_csv(spreadspoke_path)\n\n# Drop columns with\n    # sparse data entries: weather_detail, weather_humidity\n    # sparse data entries for the superbowl: weather_temperature, weather_wind_mph\n    # heavily unbalanced categorical data: stadium_neutral, schedule_playoff\n    # Unused columns: stadium\nnfl_games.drop(['weather_detail', 'weather_humidity'],axis='columns',inplace=True)\nnfl_games.drop(['weather_temperature', 'weather_wind_mph'],axis='columns',inplace=True)\nnfl_games.drop(['stadium_neutral', 'schedule_playoff'],axis='columns',inplace=True)\nnfl_games.drop(['schedule_date','stadium','over_under_line'],axis='columns',inplace=True)\n\n# Drop rows for games before year 1980\nnfl_games_since_1980_bool = (nfl_games.loc[:,'schedule_season'] >= 1980)\nnfl_games_since_1980 = nfl_games[nfl_games_since_1980_bool]\n\n# Drop rows for games in the future\ngame_was_played_bool = nfl_games_since_1980.loc[:,'score_home'].notnull()\nnfl_games_since_1980 = nfl_games_since_1980[game_was_played_bool].copy()\nnfl_games_since_1980.head()","c89e933e":"nfl_games_since_1980.team_favorite_id.unique()","e71d1ba5":"# Need to replace the above team IDs in team_favorite_id \n# so we can match the team_home\/team_away with team_favorite_id\nname_mappings = [('ATL','Falcons'),\n                 ('BUF', 'Bills'),\n                 ('JAX','Jaguars'),\n                 ('DAL', 'Cowboys'),\n                 ('GB', 'Packers'),\n                 ('IND','Colts'),\n                 ('MIA', 'Dolphins'),\n                 ('MIN','Vikings'),\n                 ('TB', 'Buccaneers'),\n                 ('NYG','Giants'),\n                 ('OAK', 'Raiders'),\n                 ('BAL','Ravens'),\n                 ('WAS', 'Redskins'),\n                 ('LAR', 'Rams'),\n                 ('ARI', 'Cardinals'),\n                 ('CIN', 'Bengals'),\n                 ('DEN', 'Broncos'),\n                 ('PHI', 'Eagles'),\n                 ('LAC','Chargers'),\n                 ('CAR','Panthers'),\n                 ('TEN','Titans'),\n                 ('NYJ', 'Jets'),\n                 ('CHI', 'Bears'),\n                 ('PIT', 'Steelers'),\n                 ('KC', 'Chiefs'),\n                 ('NE','Patriots'),\n                 ('SEA','Seahawks'),\n                 ('NO', 'Saints'),\n                 ('DET', 'Lions'),\n                 ('SF', '49ers'),\n                 ('CLE', 'Browns'),\n                 ('HOU', 'Texans')]\n    \nfor mapping in name_mappings:\n    nfl_games_since_1980.team_favorite_id.replace(mapping[0], mapping[1],inplace=True)","c2747aba":"nfl_games_since_1980.head()","d3864552":"# Function determines if home or away team is favorite and returns how much the favorite won by\ndef calc_favorite_won_by (row):\n    # Favored team played at home\n    if re.search(row['team_favorite_id'], row['team_home'], re.IGNORECASE):\n        return row['score_home']-row['score_away']\n    else:\n        return row['score_away']-row['score_home']\n\n# Function determines if home or away team is favorite and returns how much the favorite beat spread by\ndef calc_favorite_beat_spread_by (row):\n    return row['spread_favorite']+row['favorite_won_by']    \n    \n# Populate new columns with how much the favorite won by and how much the favorite beat spread by\nnfl_games_since_1980['favorite_won_by']=nfl_games_since_1980.apply(lambda row: calc_favorite_won_by(row),axis=1)\nnfl_games_since_1980['favorite_beat_spread_by']=nfl_games_since_1980.apply(lambda row: calc_favorite_beat_spread_by(row),axis=1)\n\nnfl_games_since_1980.head()","25256918":"nfl_games_since_1980.isnull().sum()","665d3d73":"print(\"Favorite beat spread\")\nprint((nfl_games_since_1980.loc[:,'favorite_won_by']+nfl_games_since_1980.loc[:,'spread_favorite']>0).value_counts(True))\nprint(\"\\nFavorite won\")\nprint((nfl_games_since_1980.loc[:,'favorite_won_by']>0).value_counts(True))","fb8d5f95":"is_superbowl_since_1980 = (nfl_games_since_1980.loc[:,'schedule_week'].str.lower()==\"superbowl\")\nprint(\"\\nFavorite beat spread in Superbowl\")\nprint((nfl_games_since_1980.loc[is_superbowl_since_1980,'favorite_won_by']+nfl_games_since_1980.loc[is_superbowl_since_1980,'spread_favorite']>0).value_counts(True))\nprint(\"\\nFavorite won in Superbowl\")\nprint((nfl_games_since_1980.loc[is_superbowl_since_1980,'favorite_won_by']>0).value_counts(True))","6f5c2cb1":"superbowls_since_1980 = nfl_games_since_1980.loc[is_superbowl_since_1980].copy()\n\nsuperbowls_since_1980.head()","bb11335c":"superbowls_since_1980.head()","9c199590":"# Takes in nfl games df and a year and\n# downselects to games in the specified year\ndef downselect_to_games_in_year(nfl_df,year):\n    in_year_only_bool = (nfl_df.loc[:,'schedule_season'] == year)\n    return nfl_df.loc[in_year_only_bool].copy()","8afdaaba":"# Takes in games from a single year and \n# returns lists of Super Bowl teams (city + team name) and Super Bowl team names\ndef get_superbowl_teams(nfl_year_only):\n    # Find the teams in the Superbowl that year\n    is_superbowl_for_year = (nfl_year_only.loc[:,'schedule_week'].str.lower()==\"superbowl\")\n    superbowl_teams_df = nfl_year_only.loc[is_superbowl_for_year,['team_home','team_away']].copy()\n    superbowl_teams = list(superbowl_teams_df.values.flatten())\n\n    # Extract team names from longer strings\n    superbowl_team_names = []\n    for i,team in enumerate(superbowl_teams):\n        team_name = team.split(' ')[-1]\n        if team_name not in superbowl_team_names:\n            superbowl_team_names.append(team.split(' ')[-1])\n    \n    return (superbowl_teams,superbowl_team_names)","e931f211":"# Takes in games from a single year and \n# returns the list of playoff teams\ndef get_playoff_teams(nfl_year_only):\n    # Find the teams in the Super Bowl that year\n    is_playoff_in_year = (nfl_year_only.loc[:,'schedule_week'].str.lower().isin([\"superbowl\",\"division\",\"conference\"]))\n    playoff_teams_df = nfl_year_only.loc[is_playoff_in_year,['team_home','team_away']].copy()\n    playoff_teams = list(playoff_teams_df.values.flatten())\n    \n    return playoff_teams","3eb8fdc5":"# Takes in games from a single year and list of Super Bowl teams and\n# downselects to games that include either Super Bowl team\ndef downselect_to_games_with_superbowl_teams(nfl_year_only, superbowl_teams):\n    team_home_in_superbowl_bool = (nfl_year_only['team_home'].isin(superbowl_teams)) \n    team_away_in_superbowl_bool = (nfl_year_only['team_away'].isin(superbowl_teams))\n    team_in_superbowl_bool = team_home_in_superbowl_bool | team_away_in_superbowl_bool\n\n    return nfl_year_only.loc[team_in_superbowl_bool].copy()","01b5db6e":"# Takes in games with Super Bowl teams and\n# returns superbowl favorite's ID for this year\ndef get_superbowl_favorite_id(games_with_superbowl_teams):\n    is_superbowl_for_year = (games_with_superbowl_teams.loc[:,'schedule_week'].str.lower()==\"superbowl\")\n    superbowl_favorite_id = games_with_superbowl_teams.loc[is_superbowl_for_year,'team_favorite_id'].copy()\n    superbowl_favorite_id = superbowl_favorite_id.values[0]\n    return superbowl_favorite_id","ce2e7fa2":"# Populates has_superbowl_favorite column\ndef populate_has_superbowl_favorite_column(games_with_superbowl_teams,superbowl_favorite_id):\n    has_superbowl_favorite_bool = games_with_superbowl_teams['team_home'].str.contains(superbowl_favorite_id,0) | games_with_superbowl_teams['team_away'].str.contains(superbowl_favorite_id,0)\n    games_with_superbowl_teams.loc[:,'has_superbowl_favorite'] = has_superbowl_favorite_bool.astype(int).copy()\n    return games_with_superbowl_teams","ccf22ce3":"# Populates favored_team_in_superbowl column\ndef populate_favored_team_in_superbowl(games_with_superbowl_teams,superbowl_team_names):\n    favored_team_in_superbowl_bool = games_with_superbowl_teams['team_favorite_id'].str.contains(superbowl_team_names[0],0) | games_with_superbowl_teams['team_favorite_id'].str.contains(superbowl_team_names[1],0)\n    games_with_superbowl_teams.loc[:,'favored_team_in_superbowl'] = favored_team_in_superbowl_bool.astype(int).copy()\n    return games_with_superbowl_teams","34d5941e":"# Takes in games from a single year and the list of playoff teams and\n# downselects to games against playoff teams\ndef downselect_to_games_against_playoff_teams(nfl_year_only, playoff_teams):\n    # Downselect to games against playoff teams\n    team_home_in_playoffs_bool = (nfl_year_only['team_home'].isin(playoff_teams))  \n    team_away_in_playoffs_bool = (nfl_year_only['team_away'].isin(playoff_teams))\n    team_in_playoffs_bool = team_home_in_playoffs_bool & team_away_in_playoffs_bool\n\n    return nfl_year_only.loc[team_in_playoffs_bool].copy()","faceda96":"# Takes in the year\n# returns games with Super Bowl teams, games with playoff teams, \n# Super Bowl favorite ID, and list of Super Bowl teams\ndef extract_info_from_nfl_df_for_year(year):\n    # Downselect to this year's games\n    nfl_year_only = downselect_to_games_in_year(nfl_games_since_1980, year)\n\n    # For this year's games\n    # Get list of Super Bowl teams, list of Super Bowl team names,\n    # list of playoff teams, & games with Super Bowl teams df\n    (superbowl_teams_list,superbowl_team_names_list) = get_superbowl_teams(nfl_year_only)\n    \n    playoff_teams_list = get_playoff_teams(nfl_year_only)\n    \n    games_with_superbowl_teams = downselect_to_games_with_superbowl_teams(nfl_year_only, superbowl_teams_list)\n\n    # For this year's games with Super Bowl teams\n    # Get Super Bowl favorite ID, populate additional columns in\n    # games with Super Bowl teams df, and games with playoff teams df\n    superbowl_favorite_id = get_superbowl_favorite_id(games_with_superbowl_teams)\n    \n    games_with_superbowl_teams = populate_has_superbowl_favorite_column(games_with_superbowl_teams, superbowl_favorite_id)\n\n    games_with_superbowl_teams = populate_favored_team_in_superbowl(games_with_superbowl_teams, superbowl_team_names_list)\n    \n    games_with_playoff_teams = downselect_to_games_against_playoff_teams(games_with_superbowl_teams, playoff_teams_list)\n    \n    return (games_with_superbowl_teams, games_with_playoff_teams, superbowl_favorite_id, superbowl_teams_list)\n","67f335b1":"for year in range(1980,2018):\n    (games_with_superbowl_teams, games_with_playoff_teams, superbowl_favorite_id, superbowl_teams) = extract_info_from_nfl_df_for_year(year)\n    \n    # Determine super bowl favorite's team name\n    if superbowl_favorite_id in superbowl_teams[0]:\n        superbowl_favorite = superbowl_teams[0]\n        superbowl_unfavorite = superbowl_teams[1]\n    else:\n        superbowl_favorite = superbowl_teams[1]\n        superbowl_unfavorite = superbowl_teams[0]\n\n    # Remove superbowl from df and separate games into (2) dfs for\n    # games with Super Bowl favorite & games with Super Bowl unfavorite\n    not_superbowl_bool = (games_with_superbowl_teams.loc[:,'schedule_week'].str.lower()!=\"superbowl\")\n    game_has_superbowl_favorite_bool = (games_with_superbowl_teams.loc[:,'has_superbowl_favorite']==1) & not_superbowl_bool\n    # e.g. Pats games\n    all_games_with_superbowl_favorite = games_with_superbowl_teams.loc[game_has_superbowl_favorite_bool].copy()\n    # e.g. Eagles games\n    all_games_with_superbowl_unfavorite = games_with_superbowl_teams.loc[~game_has_superbowl_favorite_bool & not_superbowl_bool].copy()\n    \n    # Calculate points_against_favorite\n    favored_team_in_superbowl_is_hometeam = all_games_with_superbowl_favorite.loc[:,'team_home'] == superbowl_favorite\n    points_against_favorite = (all_games_with_superbowl_favorite.loc[favored_team_in_superbowl_is_hometeam,'score_away'].sum() + \n                               all_games_with_superbowl_favorite.loc[~favored_team_in_superbowl_is_hometeam,'score_home'].sum())\n    \n    # Calculate wins_for_favorite\n    home_team_wins = all_games_with_superbowl_favorite.loc[:,'score_home'] > all_games_with_superbowl_favorite.loc[:,'score_away']\n    wins_for_favorite = (all_games_with_superbowl_favorite.loc[favored_team_in_superbowl_is_hometeam & home_team_wins,'score_home'].size + \n                          all_games_with_superbowl_favorite.loc[~favored_team_in_superbowl_is_hometeam & ~home_team_wins,'score_away'].size)\n    \n    # Calculate points_for_unfavorite\n    unfavored_team_in_superbowl_is_hometeam = all_games_with_superbowl_unfavorite.loc[:,'team_home'] == superbowl_unfavorite\n    points_for_unfavorite = (all_games_with_superbowl_unfavorite.loc[unfavored_team_in_superbowl_is_hometeam,'score_home'].sum() + \n                                 all_games_with_superbowl_unfavorite.loc[~unfavored_team_in_superbowl_is_hometeam,'score_away'].sum())    \n\n    # Add features to superbowls_since_1980 df\n    is_superbowl_in_year = (superbowls_since_1980.loc[:,'schedule_season'] == year)\n    superbowls_since_1980.loc[is_superbowl_in_year,'points_against_favorite'] = points_against_favorite.copy()\n    superbowls_since_1980.loc[is_superbowl_in_year,'wins_for_favorite'] = wins_for_favorite\n    superbowls_since_1980.loc[is_superbowl_in_year,'points_for_unfavorite'] = points_for_unfavorite.copy()\n    superbowls_since_1980.loc[:,'unfavorite_coach_win_%'] = [0.75,0.75,0.75,1,0.58,0.75,0.67,0.77,0.75,0.6, 0.7,0.625,0.67,0.67,0.75,0.5,0.71,0.75,0.53,0.75,0.67,0.75,0.67,0.75,0.78,0.58,0.67,0.54,0.75,0.75,0.86,0.61,0.67,0.56,0.67,0.67,0.75,0.75]","6bf938ca":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import LeaveOneOut\nfrom sklearn import metrics\n\nfeature_cols = [ 'points_against_favorite',   # favorite's lack of defense loses to spread\n                 'wins_for_favorite',         # favorite's good record beats spread\n                 'unfavorite_coach_win_%']    # underdogs winning coach beats spread\n\n#                 'points_for_unfavorite',     # underdogs offense beats spread \/\/ strange positive correlation\n\nX = superbowls_since_1980.loc[:,feature_cols]\ny = superbowls_since_1980.loc[:,'favorite_beat_spread_by']\n\nloo = LeaveOneOut()\nloo.get_n_splits(X)\n\nMSE_train_scores = []\nMSE_scores = []\nnull_MSE_scores = []\n\nfor train_indices, test_indices in loo.split(X, y):\n    lr = LinearRegression()\n    X_train = X.iloc[train_indices, :]\n    y_train = y.iloc[train_indices]\n    lr.fit(X_train, y_train)\n    \n    # Calculate training MSE\n    y_train_pred = lr.predict(X_train)\n    MSE_train = metrics.mean_squared_error(y_train,y_train_pred)\n    MSE_train_scores.append(MSE_train)\n    \n    # Calculate MSE\n    X_test = X.iloc[test_indices, :]\n    y_test = y.iloc[test_indices]\n    y_pred = lr.predict(X_test)\n    MSE = metrics.mean_squared_error(y_test, y_pred)\n    MSE_scores.append(MSE)\n    \n    # Calculate null MSE\n    y_pred_null = np.zeros(y_test.shape) + y_train.mean()\n    null_MSE = metrics.mean_squared_error(y_test,y_pred_null)\n    null_MSE_scores.append(null_MSE)\n\nprint('max MSE:',max(MSE_scores))\nprint('MSE:', np.array(MSE_scores).mean())\nprint('null MSE:', np.array(null_MSE_scores).mean()) \nprint('MSE train:', np.array(MSE_train))","9523514f":"# Use 1980 to 2016 Super Bowls to predict 2017 Super Bowl\nlr_point_spread = LinearRegression()\nX_train = X.iloc[:-1,:]\ny_train = y.iloc[:-1]\nX_test = X.tail(1)\ny_test = y.tail(1)\n\nlr_point_spread.fit(X_train,y_train)\n\ny_pred = lr_point_spread.predict(X_test)\nMSE = metrics.mean_squared_error(y_test,y_pred)\n\nprint('y_pred:',y_pred[0])\nprint('y_test:',y_test.values[0])\nprint('MSE:',MSE)","9719274d":"x = pd.to_numeric(superbowls_since_1980.loc[:,'points_against_favorite'])\ny = superbowls_since_1980.loc[:,'favorite_beat_spread_by']\nplt.scatter(x, y)\nplt.show()\nprint(np.corrcoef(x, y))\n\nx = pd.to_numeric(superbowls_since_1980.loc[:,'unfavorite_coach_win_%'])\ny = superbowls_since_1980.loc[:,'favorite_beat_spread_by']\nplt.scatter(x, y)\nplt.show()\nprint(np.corrcoef(x, y))\n\nx = pd.to_numeric(superbowls_since_1980.loc[:,'wins_for_favorite'])\ny = superbowls_since_1980.loc[:,'favorite_beat_spread_by']\nplt.scatter(x, y)\nplt.show()\nprint(np.corrcoef(x, y))\n\nx = pd.to_numeric(superbowls_since_1980.loc[:,'points_for_unfavorite'])\ny = superbowls_since_1980.loc[:,'favorite_beat_spread_by']\nplt.scatter(x, y)\nplt.show()\nprint(np.corrcoef(x, y))","32f5aa42":"feature_cols = ['points_against_favorite','unfavorite_coach_win_%', 'wins_for_favorite']\nax2 = sns.heatmap(superbowls_since_1980.loc[:,feature_cols].corr(),vmin=-1,vmax=1,cmap=sns.diverging_palette(h_neg=220,h_pos=10,n=21))","2c6ab765":"import seaborn as sns; sns.set(style=\"ticks\", color_codes=True)\nax1 = sns.pairplot(superbowls_since_1980.loc[:,feature_cols])","149ef8a5":"#     not_superbowl_bool = (games_with_playoff_teams.loc[:,'schedule_week'].str.lower()!=\"superbowl\")\n#     game_has_superbowl_favorite_bool = (games_with_playoff_teams.loc[:,'has_superbowl_favorite']==1) & not_superbowl_bool\n#     # e.g. Pats games\n#     games_with_superbowl_favorite = games_with_playoff_teams.loc[game_has_superbowl_favorite_bool].copy()\n#     # e.g. Eagles games\n#     games_with_superbowl_unfavorite = games_with_playoff_teams.loc[~game_has_superbowl_favorite_bool & not_superbowl_bool].copy()\n\n#     # Calculate super_bowl_favorite_won_by_mean\n#     favored_team_in_superbowl_bool = games_with_superbowl_favorite.loc[:,'favored_team_in_superbowl'] == 1\n#     favored_sum = games_with_superbowl_favorite.loc[favored_team_in_superbowl_bool,'favorite_won_by'].sum()\n#     unfavored_sum = games_with_superbowl_favorite.loc[~favored_team_in_superbowl_bool,'favorite_won_by'].sum()\n#     super_bowl_favorite_won_by_mean = (favored_sum - unfavored_sum) \/ games_with_superbowl_favorite.shape[0]\n    \n#     # Calculate super_bowl_favorite_consecutive_wins\n#     favored_team_in_superbowl_all = all_games_with_superbowl_favorite.loc[:,'favored_team_in_superbowl'] == 1\n#     all_games_with_superbowl_favorite.loc[:,'superbowl_favorite_won'] = ((all_games_with_superbowl_favorite.loc[:,'favorite_won_by'] > 0) & favored_team_in_superbowl_all) | ((all_games_with_superbowl_favorite.loc[:,'favorite_won_by'] < 0) & ~favored_team_in_superbowl_all)\n#     s = all_games_with_superbowl_favorite.loc[:,'superbowl_favorite_won']\n#     super_bowl_favorite_consecutive_wins = np.array((~s).cumsum()[s].value_counts(sort=False))[-1]\n    \n#     # Calculate points_against_favorite & points_for_favorite\n#     favored_team_in_superbowl_hometeam = all_games_with_superbowl_favorite.loc[:,'team_home'] == superbowl_favorite\n#     points_against_favorite = (all_games_with_superbowl_favorite.loc[favored_team_in_superbowl_hometeam,'score_away'].sum() + \n#                                all_games_with_superbowl_favorite.loc[~favored_team_in_superbowl_hometeam,'score_home'].sum())\n#     points_for_favorite = (all_games_with_superbowl_favorite.loc[favored_team_in_superbowl_hometeam,'score_home'].sum() + \n#                            all_games_with_superbowl_favorite.loc[~favored_team_in_superbowl_hometeam,'score_away'].sum())\n#     # Calculate wins_for_favorite\n#      home_team_wins = all_games_with_superbowl_favorite.loc[:,'score_home'] > all_games_with_superbowl_favorite.loc[:,'score_away']\n#      wins_for_favorite = (all_games_with_superbowl_favorite.loc[favored_team_in_superbowl_hometeam & home_team_wins,'score_home'].size + \n#                           all_games_with_superbowl_favorite.loc[~favored_team_in_superbowl_hometeam & ~home_team_wins,'score_away'].size)\n    \n#     # Calculate points_against_unfavorite & points_for_unfavorite\n#     unfavored_team_in_superbowl_hometeam = all_games_with_superbowl_unfavorite.loc[:,'team_home'] == superbowl_unfavorite\n#     points_against_unfavorite = (all_games_with_superbowl_unfavorite.loc[unfavored_team_in_superbowl_hometeam,'score_away'].sum() + \n#                                  all_games_with_superbowl_unfavorite.loc[~unfavored_team_in_superbowl_hometeam,'score_home'].sum())\n#     points_for_unfavorite = (all_games_with_superbowl_unfavorite.loc[unfavored_team_in_superbowl_hometeam,'score_home'].sum() + \n#                                  all_games_with_superbowl_unfavorite.loc[~unfavored_team_in_superbowl_hometeam,'score_away'].sum())\n#     # Calculate wins_for_unfavorite\n#     home_team_wins = all_games_with_superbowl_unfavorite.loc[:,'score_home'] > all_games_with_superbowl_unfavorite.loc[:,'score_away']\n#     wins_for_unfavorite = (all_games_with_superbowl_unfavorite.loc[unfavored_team_in_superbowl_hometeam & home_team_wins,'score_home'].size + \n#                          all_games_with_superbowl_unfavorite.loc[~unfavored_team_in_superbowl_hometeam & ~home_team_wins,'score_away'].size)\n    \n#     # Calculate super_bowl_unfavorite_won_by_mean\n#     favored_team_in_superbowl = games_with_superbowl_unfavorite.loc[:,'favored_team_in_superbowl'] == 1\n#     favored_sum = games_with_superbowl_unfavorite.loc[favored_team_in_superbowl,'favorite_won_by'].sum()\n#     unfavored_sum = games_with_superbowl_unfavorite.loc[~favored_team_in_superbowl,'favorite_won_by'].sum()\n#     super_bowl_unfavorite_won_by_mean = (favored_sum - unfavored_sum) \/ games_with_superbowl_unfavorite.shape[0]\n#     #print(super_bowl_unfavorite_won_by_mean)\n    \n#     # Calculate super_bowl_unfavorite_consecutive_wins\n#     favored_team_in_superbowl_all = all_games_with_superbowl_unfavorite.loc[:,'favored_team_in_superbowl'] == 1\n#     all_games_with_superbowl_unfavorite.loc[:,'superbowl_unfavorite_won'] = (((all_games_with_superbowl_unfavorite.loc[:,'favorite_won_by'] > 0) & favored_team_in_superbowl_all) | \n#                                                                              ((all_games_with_superbowl_unfavorite.loc[:,'favorite_won_by'] < 0)  & ~favored_team_in_superbowl_all))\n#     s = all_games_with_superbowl_unfavorite.loc[:,'superbowl_unfavorite_won']\n#     super_bowl_unfavorite_consecutive_wins = np.array((~s).cumsum()[s].value_counts(sort=False))[-1]\n\n#     # calculate super_bowl_favorite_won_by_mean\n#     favored_team_in_superbowl = games_with_superbowl_favorite.loc[:,'favored_team_in_superbowl'] == 1\n#     favored_sum = games_with_superbowl_favorite.loc[favored_team_in_superbowl,'favorite_beat_spread_by'].sum()\n#     unfavored_sum = games_with_superbowl_favorite.loc[~favored_team_in_superbowl,'favorite_beat_spread_by'].sum()\n#     super_bowl_favorite_beat_spread_by_mean = (favored_sum - unfavored_sum) \/ games_with_superbowl_favorite.shape[0]\n#     #print(super_bowl_favorite_won_by_mean)\n    \n#     # calculate super_bowl_unfavorite_won_by_mean\n#     favored_team_in_superbowl = games_with_superbowl_unfavorite.loc[:,'favored_team_in_superbowl'] == 1\n#     favored_sum = games_with_superbowl_unfavorite.loc[favored_team_in_superbowl,'favorite_beat_spread_by'].sum()\n#     unfavored_sum = games_with_superbowl_unfavorite.loc[~favored_team_in_superbowl,'favorite_beat_spread_by'].sum()\n#     super_bowl_unfavorite_beat_spread_by_mean = (favored_sum - unfavored_sum) \/ games_with_superbowl_unfavorite.shape[0]\n#     #print(super_bowl_unfavorite_won_by_mean)\n    \n#     is_superbowl_in_year = (superbowls_since_1980.loc[:,'schedule_season'] == year)\n    \n#     superbowls_since_1980.loc[is_superbowl_in_year,'super_bowl_favorite_beat_spread_by_mean'] = super_bowl_favorite_beat_spread_by_mean\n#     superbowls_since_1980.loc[is_superbowl_in_year,'super_bowl_unfavorite_beat_spread_by_mean'] = super_bowl_unfavorite_beat_spread_by_mean\n#     superbowls_since_1980.loc[is_superbowl_in_year,'delta'] = superbowls_since_1980.loc[is_superbowl_in_year,'super_bowl_favorite_beat_spread_by_mean'] - superbowls_since_1980.loc[is_superbowl_in_year,'super_bowl_unfavorite_beat_spread_by_mean']\n#     superbowls_since_1980.loc[is_superbowl_in_year,'super_bowl_favorite_consecutive_wins'] = super_bowl_favorite_consecutive_wins\n#     superbowls_since_1980.loc[is_superbowl_in_year,'super_bowl_unfavorite_consecutive_wins'] = super_bowl_unfavorite_consecutive_wins\n#     superbowls_since_1980.loc[:,'over_under_line'] = pd.to_numeric(superbowls_since_1980.loc[:,'over_under_line'])\n    \n#     superbowls_since_1980.loc[is_superbowl_in_year,'points_against_favorite'] = points_against_favorite.copy()\n#     superbowls_since_1980.loc[is_superbowl_in_year,'points_for_unfavorite'] = points_for_unfavorite.copy()\n#     superbowls_since_1980.loc[is_superbowl_in_year,'wins_for_favorite'] = wins_for_favorite\n#     superbowls_since_1980.loc[is_superbowl_in_year,'wins_for_unfavorite'] = wins_for_unfavorite\n#     superbowls_since_1980.loc[is_superbowl_in_year,'points_for_favorite'] = points_for_favorite.copy()\n#     superbowls_since_1980.loc[is_superbowl_in_year,'points_against_unfavorite'] = points_against_unfavorite.copy()\n\n# superbowls_since_1980.loc[:,'favorite_coach_win_%'] = [0.4,0.75,0.59,0.875,0.86,0.75,0.5,0.57,0.69,0.75,0.6,0.78,0.75,0.71,0.72,0.75,0.67,0.75,0.86,0.56,0.75,0.67,0.75,0.86,0.9,0.55,0.5,0.83,0.66,0.75,0.66,0.74,0.75,0.62,0.7,0.6,0.71,0.74]\n# superbowls_since_1980.loc[:,'favorite_offense_rank'] = [6,7,10,1,2,2,8,4,7,1,1,1,2,2,1,3,1,2,2,1,14,1,2,12,4,9,2,1,20,7,10,3,11,1,4,1,3,2,]\n# superbowls_since_1980.loc[:,'favorite_defense_rank'] = [1,2,2,11,1,1,2,7,8,3,6,2,5,2,6,3,1,5,8,4,1,7,6,1,2,3,23,4,1,8,2,15,2,22,8,6,1,5,]\n# superbowls_since_1980.loc[:,'unfavorite_offense_rank'] = [7,3,12,3,1,10,6,4,1,8,15,2,3,7,5,5,2,1,4,7,15,6,18,15,8,1,2,14,3,1,12,9,10,8,10,19,1,3,]\n# superbowls_since_1980.loc[:,'unfavorite_defense_rank'] =  [10,12,1,13,7,6,15,6,16,1,1,19,14,5,9,9,14,6,4,15,5,6,1,10,2,7,3,17,28,20,1,25,12,1,1,4,27,4]\n# superbowls_since_1980.loc[:,'favorite_turnovers'] = [28,25,23,18,22,31,32,36,26,25,21,23,24,22,24,23,24,32,20,31,26,44,19,24,27,23,19,15,25,24,22,17,16,26,13,19,11,12,]\n# superbowls_since_1980.loc[:,'favorite_opp_turnovers'] = [35,48,27,61,38,54,43,47,38,37,35,41,31,28,35,25,39,32,30,36,49,34,31,41,36,30,26,31,29,26,32,34,25,26,25,39,23,18,]\n# superbowls_since_1980.loc[:,'unfavorite_turnovers'] = [44,24,16,49,28,42,29,37,27,32,14,35,38,35,23,34,27,21,24,22,24,28,21,31,22,17,36,34,30,28,18,24,16,19,14,31,11,20,]\n# superbowls_since_1980.loc[:,'unfavorite_opp_turnovers'] = [52,37,24,36,36,47,35,34,36,43,34,37,35,47,32,34,34,31,44,40,31,35,38,26,28,27,44,25,30,39,35,31,25,39,24,27,22,31,]\n# superbowls_since_1980.loc[:,'temp'] = [65,65,54,51,45,65,56,58,72,65,62,65,56,65,73,54,65,59,74,65,65,65,81,65,59,65,67,65,66,60,65,65,65,49,65,76,65,65]\n# superbowls_since_1980.loc[:,'wind'] = [0,0,9,16,8,0,7,6,17,0,9,0,10,0,6,5,0,6,11,0,8,0,0,0,12,0,10,0,1,6,0,0,0,4,0,16,0,0]","b84f7cbd":"## Backup (code for constructing features that did not improve MSE)","dd1d3715":"## All NFL Game Data Stats","44e56d45":"## Target Variable","f985fe6d":"## Create Superbowls dataframe","9cf788ab":"## Construct new features and add them to superbowls_since_1980","401b4aa5":"## Check feature data types & correlation","53f76d3d":"## Plot correlation between features and target variable","dae0a161":"## Superbowl Data Stats","61e90510":"- favorite_beat_spread_by: How many points favored team beat spread by","df829d9a":"Issues to address:\n- team_favorite_id has the value 'PICK' for games with no spread","cc144811":"## Input Features","9de3ad75":"## Import Libraries","51371aef":"## Check that there are no missing values","5289bfeb":"## Map Team IDs to Team Names","5ace8ff4":"Interestingly, only 43% of the Superbowl favorites have beaten the spread since 1980.","3aa054a0":"## Populate new column with how much the favorite beat the spread by (This is the Target Variable)","85e81fb5":"## Use LeaveOneOut and LinearRegression models and calculate MSE of each Super Bowl from 1980 to 2017 using every other year's data","a95ce06e":"Features that improve MSE:\n- points_against_favorite: Points scored against favorite during season\n- unfavorite_coach_win_%: Career playoff win % of coach of unfavored team going into superbowl\n- wins_for_unfavorite: Number of wins by unfavored team during season\n\nFeatures examined but do not improve MSE:\n- spread_favorite: Spread for the favorited team\n- favorite_coach_win_%: Career playoff win % of coach of favored team going into superbowl\n- favorite_offense_rank: Favored team's league offense rating\n- favorite_defense_rank: Favored team's league defense rating\n- unfavorite_offense_rank: Unfavored team's league offense rating\n- unfavorite_defense_rank: Unfavored team's league defense rating\n- favorite_turnovers: Turnovers by favored team during season\n- favorite_opp_turnovers: Turnovers forced by favored team during season\n- unfavorite_turnovers: Turnovers by unfavored team during season\n- unfavorite_opp_turnovers: Turnovers forced by unfavored team during season\n- temp: Temperature during superbowl\n- wind: Wind speed during superbowl (0 mph for games inside dome's)\n- super_bowl_favorite_consecutive_wins: Number of consecutive games favored team has won going into superbowl\n- super_bowl_unfavorite_consecutive_wins: Number of consecutive games unfavored team has won going into superbowl\n- super_bowl_favorite_beat_spread_by_mean: Average points favored team beat spread by during season\n- super_bowl_unfavorite_beat_spread_by_mean: Average points unfavored team beat spread by during season\n- points_for_favorite: Total points scored by favored team during season\n- points_for_unfavorite: Total points scored by unfavored team during season\n- wins_for_favorite: Number of wins by favored team during season\n\n\n\n- has_superbowl_favorite (boolean): Does game include the superbowl favorite\n- favored_team_in_superbowl (boolean): Is the team that's in the superbowl, favored in this game\n\n\n\n","735ff6bf":"## Functions to extract info from nfl_games_since_1980 df","d851fa4d":"## Use 1980 to 2016 Super Bowls to predict how much 2017 Super Bowl Favorite will beat spread by","3ef92458":"## This function calls all of the above functions to extract info from nfl games df for a given year","7bed8dac":"## Create NFL df and reduce data timeframe (from 1980 to most recent game with a score)"}}