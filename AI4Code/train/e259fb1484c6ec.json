{"cell_type":{"1835fa1e":"code","f776cf78":"code","503415a3":"code","0b6bdd3a":"code","86f3153d":"code","de112c26":"code","7a5121b4":"code","e5cda61e":"code","956018b8":"code","54c6546e":"code","dde83c80":"code","0ef00251":"code","3f78c0e2":"code","ec56bc32":"code","8cb25f20":"code","a6e31336":"code","c8e2e616":"code","89a8aa68":"code","9efec81c":"code","0b33f34c":"code","584f1e8f":"code","9208d176":"code","3c9a289c":"code","6e0fde6c":"code","0026d46e":"code","33f43374":"code","75198b48":"code","61ef986d":"code","fec15d50":"markdown","7107a7f5":"markdown","200995ae":"markdown","44ac3506":"markdown","98c93d12":"markdown","8182b4d2":"markdown","46d6dba5":"markdown","b311f7fc":"markdown"},"source":{"1835fa1e":"## Phase d'analyse des donn\u00e9es\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n## Affichage de toutes les colonnes du dataframe\n\npd.pandas.set_option('display.max_columns',None)","f776cf78":"dataset=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\n\n# Affichage du nombre de lignes et de colonnes \n\nprint(dataset.shape)","503415a3":"#Top 5 dossiers\n\ndataset.head()","0b6bdd3a":"## Ici, nous allons v\u00e9rifier le pourcentage de valeurs nan pr\u00e9sentes dans chaque fonctionnalit\u00e9\n\n## 1e \u00e9tape : faire la liste des fonctionnalit\u00e9s qui a des valeurs manquantes\n\nfeatures_with_na=[features for features in dataset.columns if dataset[features].isnull().sum()>1]\n\n## 2e \u00e9tape : imprimer le nom de la caract\u00e9ristique et le pourcentage de valeurs manquantes\n                  \nfor feature in features_with_na:\n    print(feature, np.round(dataset[feature].isnull().mean(), 4), '% Valeurs Manquantes')","86f3153d":"for feature in features_with_na:\n    data = dataset.copy()\n    \n   \n    # cr\u00e9ons une variable qui indique 1 si l'observation \u00e9tait manquante ou 0 sinon\n    data[feature] = np.where(data[feature].isnull(), 1, 0)\n    \n    # calculons le prix de vente moyen o\u00f9 l'information est manquante ou pr\u00e9sente\n    sns.barplot(x=feature ,y='SalePrice' ,data=data , ci=False, estimator=np.median)\n    plt.title(feature)\n    barlist=plt.bar([1,2],[1,2])\n    barlist[0].set_color('orange')\n    plt.show()","de112c26":"print(\"Id of House {}\".format(len(dataset.Id)))","7a5121b4":"# Liste des variables num\u00e9riques\nnumerical_features = [feature for feature in dataset.columns if dataset[feature].dtypes != 'O']\n\nprint('Number of numerical variables: ', len(numerical_features))\n\n# Visualiser les variables num\u00e9riques\n\ndataset[numerical_features].head()","e5cda61e":"# liste de variables contenant des informations sur l'ann\u00e9e\n\nyear_feature = [feature for feature in numerical_features if 'Yr' in feature or 'Year' in feature]\n\nyear_feature","956018b8":"# explorons le contenu de ces variables d'ann\u00e9e\n\nfor feature in year_feature:\n    print(feature, dataset[feature].unique())","54c6546e":"# Analysons les variables temporelles Datetime\n# Nous allons v\u00e9rifier s'il existe une relation entre l'ann\u00e9e de vente de la maison et le prix de vente\n\ndataset.groupby('YrSold')['SalePrice'].median().plot()\nplt.xlabel('Year Sold')\nplt.ylabel('Median House Price')\nplt.title(\"House Price vs YearSold\")","dde83c80":"year_feature","0ef00251":"# Ici, nous allons comparer la diff\u00e9rence entre la fonction Toutes les ann\u00e9es et SalePrice.\n\nfor feature in year_feature:\n    if feature!='YrSold':\n        data=dataset.copy()\n        \n        # Nous allons saisir la diff\u00e9rence entre la variable d'ann\u00e9e et l'ann\u00e9e pour laquelle la maison a \u00e9t\u00e9 vendue \n        \n        data[feature]=data['YrSold']-data[feature]\n\n        plt.scatter(data[feature],data['SalePrice'])\n        plt.xlabel(feature)\n        plt.ylabel('SalePrice')\n        plt.show()\n","3f78c0e2":"## Les variables num\u00e9riques sont g\u00e9n\u00e9ralement de 2 types\n## Variable continue et variables discr\u00e8tes\n\ndiscrete_feature=[feature for feature in numerical_features if len(dataset[feature].unique())<25 and feature not in year_feature+['Id']]\nprint(\"Discrete Variables Count: {}\".format(len(discrete_feature)))","ec56bc32":"discrete_feature","8cb25f20":"dataset[discrete_feature].head()","a6e31336":"## Cherchons la relation entre les variables et le prix de vente.\nfor feature in discrete_feature:\n    data=dataset.copy()\n    sns.barplot(x=feature ,y='SalePrice' ,data=data , ci=False, estimator=np.median)\n    plt.xlabel(feature)\n    plt.ylabel('SalePrice')\n    plt.title(feature)\n    plt.show()","c8e2e616":"continuous_feature=[feature for feature in numerical_features if feature not in discrete_feature+year_feature+['Id']]\nprint(\"Continuous feature Count {}\".format(len(continuous_feature)))","89a8aa68":"## Analysons les valeurs continues en cr\u00e9ant des histogrammes pour comprendre la distribution.\n\nfor feature in continuous_feature:\n    data=dataset.copy()\n    data[feature].hist(bins=25)\n    plt.xlabel(feature)\n    plt.ylabel(\"Count\")\n    plt.title(feature)\n    plt.show()","9efec81c":"## Nous allons utiliser la transformation logarithmique\n\nfor feature in continuous_feature:\n    data=dataset.copy()\n    if 0 in data[feature].unique():\n        pass\n    else:\n        data[feature]=np.log(data[feature])\n        data['SalePrice']=np.log(data['SalePrice'])\n        plt.scatter(data[feature],data['SalePrice'])\n        plt.xlabel(feature)\n        plt.ylabel('SalesPrice')\n        plt.title(feature)\n        plt.show()","0b33f34c":"for feature in continuous_feature:\n    data=dataset.copy()\n    if 0 in data[feature].unique():\n        pass\n    else:\n        data[feature]=np.log(data[feature])\n        data.boxplot(column=feature)\n        plt.ylabel(feature)\n        plt.title(feature)\n        plt.show()","584f1e8f":"categorical_features=[feature for feature in dataset.columns if data[feature].dtypes=='O']\ncategorical_features","9208d176":"dataset[categorical_features].head()","3c9a289c":"for feature in categorical_features:\n    print('La fonctionnalit\u00e9 est {} et le nombre de cat\u00e9gories est {}'.format(feature,len(dataset[feature].unique())))","6e0fde6c":"for feature in categorical_features:\n    data=dataset.copy()\n    sns.barplot(x=feature ,y='SalePrice' ,data=data , ci=False, estimator=np.median)\n    plt.xlabel(feature)\n    plt.ylabel('SalePrice')\n    plt.title(feature)\n    plt.show()","0026d46e":"pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\n","33f43374":"df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","75198b48":"df","61ef986d":"df.to_csv('submission.csv', index=False)","fec15d50":"# Les variables continues ","7107a7f5":"Il y'a effectivement une relation entre les variables et SalePrice","200995ae":"Nous avons extrait des informations des variables datetime comme le nombre d'ann\u00e9es ou le nombre de jours. Un exemple dans ce sc\u00e9nario sp\u00e9cifique peut \u00eatre la diff\u00e9rence d'ann\u00e9es entre l'ann\u00e9e de construction de la maison et l'ann\u00e9e de vente de la maison.","44ac3506":"Outliers","98c93d12":"Cat\u00e9gorie de variables","8182b4d2":"Valeurs perdu lors du processus  ","46d6dba5":"# Projet Analyse de donn\u00e9es : Advance House Prices prediction ","b311f7fc":"Puisqu'il y a beaucoup de valeurs manquantes, nous devons trouver la relation entre les valeurs manquantes et le prix de vente\n\nTra\u00e7ons un diagramme pour cette relation\n"}}