{"cell_type":{"b87f4f39":"code","6d794742":"code","bf0be281":"code","b0c4ff0f":"code","5014e84b":"code","98b567a6":"code","4cd709b2":"code","9f610c66":"code","68e3c4ab":"code","f3a21366":"code","b2f5e9fc":"code","08ad12e9":"code","3a836127":"code","839e8297":"code","554fd702":"code","ca76945d":"code","4a11f198":"code","2f5ac9c7":"code","036a7655":"code","fad27bba":"code","76202605":"code","6852fc11":"code","a955ecb4":"code","e8c398aa":"code","8a6b2c6f":"code","18ec1914":"code","b5724353":"code","8db0175f":"code","20c96ad1":"code","9d4595ac":"code","79f3cff2":"code","58f4a021":"code","bb4d1c89":"code","7754e41b":"code","0eac6cfd":"code","8d0e0799":"code","4cc4c228":"code","4400d96b":"code","f78e17e5":"code","4a88fa6e":"code","bb90ee95":"code","a275b33c":"markdown","1766cd4a":"markdown","c73afe10":"markdown","b728ea7c":"markdown","b777cccc":"markdown","8936df28":"markdown","868ab066":"markdown","e5448047":"markdown","765001aa":"markdown","95f16b4b":"markdown","57f26fc2":"markdown","6dc9197e":"markdown"},"source":{"b87f4f39":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d794742":"!pip install tensorflow_decision_forests --upgrade","bf0be281":"!pip install tensorflow==2.5.0","b0c4ff0f":"!pip install -q wurlitzer","5014e84b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nimport tensorflow as tf\nimport tensorflow_decision_forests as tfdf","98b567a6":"train = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/train.csv')\ntrain.head()","4cd709b2":"test = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/test.csv')\ntest.head()","9f610c66":"sample_submission = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/sample_submission.csv')\nsample_submission.head()","68e3c4ab":"train.info()","f3a21366":"test.info()","b2f5e9fc":"train.drop('id', axis=1, inplace = True)\ntest.drop('id', axis=1, inplace = True)","08ad12e9":"train.describe().T\\\n        .style.bar(subset=['mean'], color=px.colors.qualitative.G10[0])\\\n        .background_gradient(subset=['std'], cmap='Greens')\\\n        .background_gradient(subset=['50%'], cmap='BuGn')","3a836127":"train['target'].value_counts()","839e8297":"plt.figure(figsize=(10,5))\nsns.countplot(x = train['target'])","554fd702":"train_copy = train.copy()","ca76945d":"train.drop('target', axis=1, inplace = True)","4a11f198":"data = pd.concat([train,test])\ndata.head()","2f5ac9c7":"data.tail()","036a7655":"corr = data.corr()\nfig, ax = plt.subplots(figsize=(30,20))\nmask = np.triu(data.corr())\nsns.heatmap(corr, vmin=-1, vmax=1, center= 0, linewidths=3, linecolor='white', square = True, mask = mask)","fad27bba":"n_rows = 15\nn_cols = 5\ninit = 1\nfeatures = data.columns.values\n\nfig = plt.figure(figsize=(100,90))\n\nfor i in features:\n    plt.subplot(n_rows, n_cols, init)\n    plt.xlabel(i)\n    sns.countplot(data=data, x=data[i])\n    init = init + 1\nplt.show()","76202605":"for i in data.columns:\n    print(data[i].value_counts())","6852fc11":"# Performing log transformation\nnp.seterr(divide = 'ignore')\nfor i in data.columns:\n    #data[i] = np.where(data[i]>0, np.log1p(data[i]), 0)\n    data[i] = np.log(data[i]-(min(data[i]-1)))","a955ecb4":"data.head()","e8c398aa":"train = data[:200000]\ntest = data[200000:]","8a6b2c6f":"train = pd.concat([train,train_copy['target']], axis=1)\ntrain.head()","18ec1914":"train.replace({'Class_1': 0, 'Class_2': 1, 'Class_3':2, 'Class_4': 3, 'Class_5': 4, 'Class_6': 5, 'Class_7': 6, 'Class_8': 7,'Class_9': 8}, inplace = True)","b5724353":"X = train.iloc[:,0:75]\ny = train.iloc[:,75:]","8db0175f":"train_tf_ds = train[:140000]\neval_tf_ds = train[140000:]","20c96ad1":"train_ds = tfdf.keras.pd_dataframe_to_tf_dataset(train_tf_ds, label = 'target')","9d4595ac":"eval_ds = tfdf.keras.pd_dataframe_to_tf_dataset(eval_tf_ds, label = 'target')","79f3cff2":"test_ds = tfdf.keras.pd_dataframe_to_tf_dataset(test, label = None)","58f4a021":"model = tfdf.keras.GradientBoostedTreesModel(hyperparameter_template=\"benchmark_rank1\")","bb4d1c89":"model.compile(metrics=[\"accuracy\"])","7754e41b":"model.fit(train_ds)","0eac6cfd":"model.evaluate(eval_ds)","8d0e0799":"model.summary()","4cc4c228":"model.make_inspector().training_logs()","4400d96b":"logs = model.make_inspector().training_logs()\n\nplt.figure(figsize=(12, 4))\n\nplt.subplot(1, 2, 1)\nplt.plot([log.num_trees for log in logs], [log.evaluation.accuracy for log in logs])\nplt.xlabel(\"Number of trees\")\nplt.ylabel(\"Accuracy (out-of-bag)\")\n\nplt.subplot(1, 2, 2)\nplt.plot([log.num_trees for log in logs], [log.evaluation.loss for log in logs])\nplt.xlabel(\"Number of trees\")\nplt.ylabel(\"Logloss (out-of-bag)\")\n\nplt.show()","f78e17e5":"y_pred = model.predict(test_ds)\ny_pred","4a88fa6e":"sample_submission.iloc[:,1:10] = y_pred\nsample_submission","bb90ee95":"sample_submission.to_csv('submission_df.csv',index=False)","a275b33c":"*  #### From the above observation we can see that we dont have null values.\n*  #### The datatype of  the features are numerical and integer type.","1766cd4a":"#### There is no correlation between features","c73afe10":"#### data is right skewed so we need to do some kind of transformation to make it bring to normal.","b728ea7c":"# Load train and test dataset","b777cccc":"## Tenorflow decision Forest","8936df28":"# Please Upvote the notebook if you find it helpful.","868ab066":"# Model\/Pipeline Building","e5448047":"# Import Libraries","765001aa":"# EDA","95f16b4b":"* #### Target data is highly imbalance","57f26fc2":"# Submission","6dc9197e":"# Data Preprocessing"}}