{"cell_type":{"8b9246dd":"code","d0b66c16":"code","0829c3e9":"code","18228cf9":"code","ee3fa946":"code","f0f74ae9":"markdown","ef7202f5":"markdown","c50bbd5f":"markdown","bf0df78f":"markdown"},"source":{"8b9246dd":"contador = 1\n#range(3)--> [0,1,2]\n\nfor contador in range(3):\n    print(contador)","d0b66c16":"# Muestra todos los n\u00fameros entre 0,1,2,3,4\nfor x in range(5):\n    print(x)\n\n# Muestra 3,4,5\nfor x in range(3,6):\n    print(x)\n    \nnombres=[\"Juan\",\"Maria\",\"Jose\"]\nfor name in nombres:\n    print(name)\n    \n   \n    ","0829c3e9":" lista=[6,9,3,7,3,8]\n for i in lista: ##acceso directo a los elementos de la lista\n    print(i)\n    \n   \nprint(\"\")\n\nfor i in range(6): ## acceso mediante referencia de posicion\n    print(lista[i])","18228cf9":"count = 0\nwhile count < 5:\n    print(count)\n    count = count + 1","ee3fa946":"# Muestra 0,1,2,3,4\n\ncount = 0\nwhile True:\n    print(count)\n    count += 1\n    if count >= 5:\n        break\n      \n\n# Muestra solo n\u00fameros impares - 1,3,5,7,9\nfor x in range(10):\n    # Check if x is even\n    if x % 2 == 0:\n        continue\n    print(x)","f0f74ae9":"# Loops\nHay dos tipos de b\u00facles en Python, for y while.\n##  El b\u00facle \"for\"\nLos b\u00facles For iteran sobre una secuencia. Aqu\u00ed un ejemplo:","ef7202f5":"Para bucles pueden iterar sobre una secuencia de n\u00fameros usando las funciones de \"range\". La diferencia entre rango y range el que la funci\u00f3n de rango devuelve una nueva lista con n\u00fameros que el rango especifica","c50bbd5f":"## b\u00facle \"while\"\nMientras que los b\u00facles While se repiten mientras se cumpla una condici\u00f3n boleana sea cumplida. Por ejemplo:\n\n","bf0df78f":"## sentencias \"break\" y \"continue\"\n"}}