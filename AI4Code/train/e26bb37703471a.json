{"cell_type":{"64ec1e11":"code","270a6952":"code","cdff2835":"code","c3fe7603":"code","157a0320":"code","c9236518":"code","019898c9":"code","a52cc5ce":"code","d89856a1":"code","df9b6d59":"code","de73f768":"code","2c129ce5":"code","936616bd":"code","f7063be2":"code","3a4e42bb":"code","e9205a53":"code","26052767":"code","53383850":"code","64419757":"code","215351c6":"code","e74a8a2a":"code","0ac13e3e":"code","96c8dccf":"code","2cca55db":"code","c77e7bba":"code","576240a5":"code","c13793e2":"code","337e43cc":"code","673d6f8c":"code","c06a328a":"code","e17251eb":"code","1d46b86a":"code","8cf04a0f":"code","136547ff":"code","82241d09":"code","2ed4686b":"code","108f5c8e":"code","42e2eba5":"code","764922fc":"code","a0f5b564":"code","286ff3d9":"code","26495ab4":"code","f6ccec55":"code","6c4de27c":"code","42f8e9ae":"code","aa2eef73":"code","efddc053":"code","f09416a4":"code","297b901e":"code","e3535d2d":"code","049c76ae":"code","1a99668b":"code","1ae68c56":"code","94d22a06":"code","7d40b433":"code","8fe8dba4":"code","cbc6e6e6":"code","14acf53c":"code","1317045d":"code","e3053ae0":"code","1f67d9de":"code","4ab5dabe":"code","357997d1":"markdown","97ec22a8":"markdown","6d5718b5":"markdown","56383ea6":"markdown","777e94ca":"markdown","4cd58563":"markdown","4480583d":"markdown","44d5cc36":"markdown","160fc79f":"markdown"},"source":{"64ec1e11":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","270a6952":"train = pd.read_csv('..\/input\/titanic\/train.csv')\n","cdff2835":"train.head()","c3fe7603":"train.shape\n","157a0320":"train.columns","c9236518":"train.isnull().sum()","019898c9":"train['Survived'].value_counts()","a52cc5ce":"sns.countplot(x='Survived',data=train)","d89856a1":"train['Sex'].value_counts()","df9b6d59":"sns.countplot(x='Survived',hue='Sex',data=train,palette='winter')","de73f768":"train['Pclass'].value_counts()","2c129ce5":"sns.countplot(x='Survived',hue='Pclass',data=train,palette='PuBu')","936616bd":"sns.distplot(train['Age'],kde=False)","f7063be2":"sns.countplot(x='SibSp',data=train,palette='rocket')","3a4e42bb":"train['Parch'].plot.hist()","e9205a53":"train.info()","26052767":"train.isnull().sum()","53383850":"sns.boxplot(x='Pclass',y='Age',data=train)","64419757":"print(train[train['Pclass']==1]['Age'].mean())\nprint(train[train['Pclass']==2]['Age'].mean())\nprint(train[train['Pclass']==3]['Age'].mean())","215351c6":"def fill_in_na_values(cols):\n    age=cols[0]\n    pclass=cols[1]\n    if pd.isnull(age):\n        if pclass ==1:\n            return round(train[train['Pclass']==1]['Age'].mean())\n        elif pclass ==2:\n            return round(train[train['Pclass']==2]['Age'].mean())\n        elif pclass==3:\n            return round(train[train['Pclass']==3]['Age'].mean())\n    else:\n            return age\ntrain['Age']=train[['Age','Pclass']].apply(fill_in_na_values,axis=1) ","e74a8a2a":"train.isnull().sum()","0ac13e3e":"sns.heatmap(train.isnull())","96c8dccf":"train.head()","2cca55db":"train.drop(['Cabin'],axis=1,inplace=True)","c77e7bba":"train.head()","576240a5":"train.isnull().sum()","c13793e2":"train.dropna(inplace=True)","337e43cc":"train.isnull().sum()","673d6f8c":"train.head()","c06a328a":"train.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)","e17251eb":"train.head()","1d46b86a":"train['Sex'].unique()","8cf04a0f":"train['Embarked'].unique()","136547ff":"train.Sex=train.Sex.map({'female':0, 'male':1})\ntrain.Embarked=train.Embarked.map({'S':0, 'C':1, 'Q':2,'nan':'NaN'})","82241d09":"train.head()","2ed4686b":"#Scaling the data\ntrain.Age = (train.Age-min(train.Age))\/(max(train.Age)-min(train.Age))\ntrain.Fare = (train.Fare-min(train.Fare))\/(max(train.Fare)-min(train.Fare))","108f5c8e":"train.head()","42e2eba5":"from sklearn.model_selection import train_test_split","764922fc":"X_train, X_test, y_train, y_test = train_test_split(\n    train.drop(['Survived'], axis=1),\n    train.Survived,\n    test_size= 0.2,\n    random_state=0,\n    stratify=train.Survived\n)","a0f5b564":"# Logistic regression\nfrom sklearn.linear_model import LogisticRegression\nclf = LogisticRegression()\nclf.fit(X_train, y_train)\n\nfrom sklearn.metrics import accuracy_score\n\nY_pred = clf.predict(X_test)\naccuracy_score(y_test, Y_pred)","286ff3d9":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test, Y_pred)\ncm","26495ab4":"sns.heatmap(cm,annot=True)","f6ccec55":"test=pd.read_csv('..\/input\/titanic\/test.csv')\ntest.head()","6c4de27c":"test.shape","42f8e9ae":"test.info()","aa2eef73":"test.isnull().sum()","efddc053":"def fill_in_na_values(cols):\n    age=cols[0]\n    pclass=cols[1]\n    if pd.isnull(age):\n        if pclass ==1:\n            return round(test[test['Pclass']==1]['Age'].mean())\n        elif pclass ==2:\n            return round(test[test['Pclass']==2]['Age'].mean())\n        elif pclass==3:\n            return round(test[test['Pclass']==3]['Age'].mean())\n    else:\n            return age\ntest['Age']=test[['Age','Pclass']].apply(fill_in_na_values,axis=1)      ","f09416a4":"test.head()","297b901e":"test.isnull().sum()","e3535d2d":"test.drop(['Cabin'],axis=1,inplace=True)","049c76ae":"test.isnull().sum()","1a99668b":"test['Fare']=test['Fare'].fillna(test['Fare'].median())","1ae68c56":"df=test.drop(['PassengerId','Name','Ticket'],axis=1)","94d22a06":"df.head()","7d40b433":"df.Sex=df.Sex.map({'female':0, 'male':1})\ndf.Embarked=df.Embarked.map({'S':0, 'C':1, 'Q':2,'nan':'NaN'})","8fe8dba4":"df.Age = (df.Age-min(df.Age))\/(max(df.Age)-min(df.Age))\ndf.Fare = (df.Fare-min(df.Fare))\/(max(df.Fare)-min(df.Fare))","cbc6e6e6":"df.head()","14acf53c":"pred = clf.predict(df)","1317045d":"pred","e3053ae0":"submission = pd.DataFrame({\n        \"PassengerId\": test[\"PassengerId\"],\n        \"Survived\": pred\n    })\nsubmission.to_csv('submission.csv', index=False)","1f67d9de":"pred_df = pd.read_csv('submission.csv')","4ab5dabe":"sns.countplot(x='Survived', data=pred_df)","357997d1":"Cleaning the train data","97ec22a8":"Loading and Cleaning test dataset","6d5718b5":"Loading Modules","56383ea6":"Looking into training dataset","777e94ca":"Modeling the data","4cd58563":"Confusion Matrix","4480583d":"Relationship between Features and Survival","44d5cc36":"Exploratory Data Analysis","160fc79f":"Looking into testing dataset"}}