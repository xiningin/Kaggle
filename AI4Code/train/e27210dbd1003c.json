{"cell_type":{"31f6dec8":"code","fbff9bd0":"code","b61e891e":"code","bdfeac65":"code","59eabdf4":"code","e993a8e2":"code","0f72e4b1":"code","194ac567":"code","56661f80":"code","fe76b58a":"code","5eb576b5":"code","62a33560":"code","21e8435b":"code","c42f61e9":"markdown","d42f555c":"markdown"},"source":{"31f6dec8":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport tensorflow as tf\nfrom tensorflow import keras","fbff9bd0":"train_data = pd.read_csv('..\/input\/tobigs14-mnist-competition\/train_df.csv')\ntest_data = pd.read_csv('..\/input\/tobigs14-mnist-competition\/test_df.csv')\nsample_submission = pd.read_csv(\"..\/input\/tobigs14-mnist-competition\/sample_submission.csv\")","b61e891e":"# \uc5b4\ub5a4 \uc790\ub8cc\uc778\uc9c0 \ubcf4\uc790\ntrain_data.head()","bdfeac65":"X_train = train_data.drop('label',axis = 1).values\ny_train = train_data['label'].values\n\nX_test = test_data.iloc[:,1:].values","59eabdf4":"X_train.shape, y_train.shape, X_test.shape","e993a8e2":"# \ud558\ub098 \ucd9c\ub825\ud574\ubcfc\uae4c!\n\nindex = 0\nimage = X_train[index].reshape(28,28)\nplt.imshow(image, 'gray')\nplt.title('label : {}'.format(y_train[index]))\nplt.show()","0f72e4b1":"# \uc804\uccb4 784 pixel, \uc989, 28*28 \uc0ac\uc774\uc988\uc758 \uadf8\ub9bc\ub4e4\uc784!\n\nimage_size = X_train.shape[1]\nprint ('image_size => {0}'.format(image_size))\n\n# in this case all images are square\nimage_width = image_height = np.ceil(np.sqrt(image_size)).astype(np.uint8)\n\nprint ('image_width => {0}\\nimage_height => {1}'.format(image_width,image_height))","194ac567":"# scaling\n\nX_train = X_train.astype(np.float)\nX_test = X_test.astype(np.float)\nX_train \/= 255\nX_test \/= 255\n\nprint('maximum value after scaling:', X_train.max(),\n      '\\nminimum value after scaling:' ,X_train.min())","56661f80":"# train test split\nX_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.2)\n\nprint(X_train.shape, y_train.shape)\nprint(X_val.shape, y_val.shape)","fe76b58a":"model = keras.Sequential([\n    keras.layers.Dense(512, activation='relu'),\n    keras.layers.Dropout(0.3),\n    keras.layers.Dense(512, activation='relu'),\n    keras.layers.Dropout(0.2), \n    # dropout \ub300\uc2e0 keras.layers.BatchNormalization() \uc774\uc6a9 \uac00\ub2a5\n    keras.layers.Dense(10, activation='softmax')\n])\n\nmodel.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n\nmodel.fit(X_train, y_train, epochs=5, batch_size=100)\nmodel.evaluate(X_val, y_val)","5eb576b5":"predictions = model.predict_classes(X_test)","62a33560":"sample_submission['Category'] = pd.Series(predictions)\nsample_submission.head()","21e8435b":"sample_submission.to_csv(\"submission.csv\",index=False)\n","c42f61e9":"## tensorflow keras model","d42f555c":"# Framework Tutorial\n\n*by tobigs 13\uae30 \uae40\ud604\uc120*"}}