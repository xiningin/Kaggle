{"cell_type":{"126a7656":"code","212fc6ff":"code","52567bdd":"code","7885a0cb":"code","5815c356":"code","261b3924":"code","8128aedf":"code","5869287f":"code","cdef66cc":"code","1108553d":"code","39ab17ef":"code","931963fc":"code","17186e04":"code","af04ea33":"code","22ddb467":"code","ce38506c":"code","4733e192":"code","44378e8e":"code","309b1b13":"code","e35b0724":"code","192ed0a8":"code","bcdc25c9":"code","f625bfd3":"code","21acece3":"code","ad27e437":"code","3c4928d2":"code","64157f1c":"code","1c08666b":"code","41c43b23":"code","42155969":"code","9b39b8a7":"code","8dfab00f":"code","69e8a3d4":"code","3b08dd69":"code","504cbe5a":"code","a863803e":"code","4210cb97":"code","dae4548b":"markdown","583150e1":"markdown","c35a0971":"markdown","d5f01852":"markdown","a71ad393":"markdown"},"source":{"126a7656":"# numpy and pandas for data manipulation\nimport numpy as np\nimport pandas as pd \n\n# sklearn preprocessing for dealing with categorical variables\nfrom sklearn.preprocessing import LabelEncoder\nfrom tqdm import tqdm_notebook as tqdm\n# File system manangement\nimport os\n\n# Suppress warnings \nimport warnings\nwarnings.filterwarnings('ignore')\n\n# matplotlib and seaborn for plotting\nimport matplotlib.pyplot as plt\nimport seaborn as sns","212fc6ff":"def separate_cat_num(df):\n    categorical_cols = df.select_dtypes(include=['object'])\n    num_cols = df.select_dtypes(exclude=['object']) \n    num_cols.drop(['SK_ID_PREV', 'SK_ID_CURR'], axis= 1,inplace = True)\n    return categorical_cols,num_cols","52567bdd":"def one_hot_encoder(categorical_cols):\n    categorical_cols = pd.get_dummies(categorical_cols,dummy_na =True) \n    return categorical_cols","7885a0cb":"def create_aggregations_dictionary(categorical_cols,num_cols):\n    PREVIOUS_APPLICATION_AGGREGATION_DICTIONARY = []\n    for agg in ['mean', 'min', 'max', 'sum', 'var']:\n        for select in categorical_cols.columns:\n            PREVIOUS_APPLICATION_AGGREGATION_DICTIONARY.append((select, agg))\n        for select in num_cols.columns:\n            PREVIOUS_APPLICATION_AGGREGATION_DICTIONARY.append((select, agg))\n    PREVIOUS_APPLICATION_AGGREGATION_DICTIONARY = [(['PREV'], PREVIOUS_APPLICATION_AGGREGATION_DICTIONARY)]\n    return PREVIOUS_APPLICATION_AGGREGATION_DICTIONARY","5815c356":"def merge_upper_table(prev_agg_dict,application):\n    groupby_aggregate_names = []\n    for groupby_cols, specs in tqdm(prev_agg_dict):\n        group_object = prev.groupby(groupby_cols)\n        for select, agg in tqdm(specs):\n            groupby_aggregate_name = '{}_{}_{}'.format('_'.join(groupby_cols), agg, select)\n            application = application.merge(group_object[select]\n                              .agg(agg)\n                              .reset_index()\n                              .rename(index=str,\n                                      columns={select: groupby_aggregate_name})\n                              [groupby_cols + [groupby_aggregate_name]],\n                              on=groupby_cols,\n                              how='left')\n            groupby_aggregate_names.append(groupby_aggregate_name)\n    return application","261b3924":"# Function to calculate missing values by column# Funct \ndef missing_values_table(df):\n        # Total missing values\n        mis_val = df.isnull().sum()\n        \n        # Percentage of missing values\n        mis_val_percent = 100 * df.isnull().sum() \/ len(df)\n        \n        # Make a table with the results\n        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n        \n        # Rename the columns\n        mis_val_table_ren_columns = mis_val_table.rename(\n        columns = {0 : 'Missing Values', 1 : '% of Total Values'})\n        \n        # Sort the table by percentage of missing descending\n        mis_val_table_ren_columns = mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n        '% of Total Values', ascending=False).round(1)\n        \n        # Print some summary information\n        print (\"Your selected dataframe has \" + str(df.shape[1]) + \" columns.\\n\"      \n            \"There are \" + str(mis_val_table_ren_columns.shape[0]) +\n              \" columns that have missing values.\")\n        \n        # Return the dataframe with missing information\n        return mis_val_table_ren_columns","8128aedf":"\"\"\" Process previous_application.csv and return a pandas dataframe. \"\"\"\nprev = pd.read_csv('..\/input\/home-credit\/previous_application.csv')\nprint('previous_application data shape: ', prev.shape)\nprev.head()","5869287f":"categorical_cols,num_cols = separate_cat_num(prev)","cdef66cc":"categorical_cols.head()","1108553d":"num_cols.head()","39ab17ef":"missing_values_table(categorical_cols)","931963fc":"missing_values_table(num_cols)","17186e04":"num_cols.describe().T","af04ea33":"import missingno as msno","22ddb467":"msno.bar(num_cols);","ce38506c":"msno.matrix(num_cols);","4733e192":"msno.heatmap(num_cols);","44378e8e":"# Correlation matrix graph of the data set\nf, ax = plt.subplots(figsize= [20,15])\nsns.heatmap(num_cols.corr(), annot=True, fmt=\".2f\", ax=ax, cmap = \"magma\" )\nax.set_title(\"Correlation Matrix\", fontsize=20)\nplt.show()","309b1b13":"!pip install pandas-profiling","e35b0724":"from pandas_profiling import ProfileReport","192ed0a8":"profile = ProfileReport(num_cols, minimal=True)","bcdc25c9":"profile.to_widgets()","f625bfd3":"# Feature engineering: ratios and difference\nprev['NEW_APPLICATION_CREDIT_DIFF'] = prev['AMT_APPLICATION'] - prev['AMT_CREDIT']\n\nprev['NEW_APPLICATION_CREDIT_RATIO'] = prev['AMT_APPLICATION'] \/ prev['AMT_CREDIT']\n\nprev['NEW_CREDIT_TO_ANNUITY_RATIO'] = prev['AMT_CREDIT']\/prev['AMT_ANNUITY']\n\nprev['NEW_DOWN_PAYMENT_TO_CREDIT'] = prev['AMT_DOWN_PAYMENT'] \/ prev['AMT_CREDIT']","21acece3":"# Innterest ratio previous application (simplified)\nprev['NEW_TOTAL_PAYMENT'] = prev['AMT_ANNUITY'] * prev['CNT_PAYMENT']\n\nprev['NEW_TOTAL_PAYMENT_TO_AMT_CREDIT'] = prev['NEW_TOTAL_PAYMENT'] \/ prev['AMT_CREDIT']\n\nprev['NEW_SIMPLE_INTERESTS'] = (prev['NEW_TOTAL_PAYMENT'\/prev['AMT_CREDIT'] - 1)\/prev['CNT_PAYMENT']","ad27e437":"prev['NEW_CREDIT_TO_ANNUITY_RATIO'].head()","3c4928d2":"prev['CNT_PAYMENT'].head()","64157f1c":"100 *  prev['NEW_SIMPLE_INTERESTS'].isnull().sum() \/ len( prev['NEW_SIMPLE_INTERESTS']) ","1c08666b":"missing_values_table(prev)","41c43b23":"prev.shape","42155969":"prev[prev['AMT_ANNUITY'].isnull()==True]","9b39b8a7":"prev[prev['NEW_SIMPLE_INTERESTS'].isnull()==True]","8dfab00f":"prev['NAME_PORTFOLIO'].value_counts()","69e8a3d4":"prev['NAME_PORTFOLIO'].replace('XNA', np.nan, inplace= True)","3b08dd69":"prev['NAME_PORTFOLIO'].value_counts()","504cbe5a":"prev['NAME_PORTFOLIO'].isnull().sum()","a863803e":"prev['NAME_PRODUCT_TYPE'].value_counts() ","4210cb97":"prev['NAME_PRODUCT_TYPE'].replace('XNA', np.nan, inplace= True)","dae4548b":"## https:\/\/pandas-profiling.github.io\/pandas-profiling\/docs\/master\/index.html","583150e1":"### Pandas Profiling","c35a0971":"https:\/\/www.kaggle.com\/c\/home-credit-default-risk\/discussion\/61353","d5f01852":"https:\/\/pazarlamaturkiye.com\/capraz-satis-nedir-nasil-yapilir-teknikleri-nelerdir\/","a71ad393":"https:\/\/www.calculatorsoup.com\/calculators\/financial\/simple-interest-plus-principal-calculator.php"}}