{"cell_type":{"46e520f0":"code","e3e8a690":"code","8e7d3820":"code","cf787d56":"code","46ac0cfd":"code","32fb4c14":"code","30bd6384":"code","c03ec240":"code","979ddde9":"code","f127a488":"code","48ace095":"code","1a6881df":"code","1d847c93":"code","a2b2f8b9":"code","a4963c85":"code","9d3f9122":"markdown","197c242d":"markdown","76d630f3":"markdown","9440824d":"markdown","0a593ed6":"markdown","2237375b":"markdown","20f21993":"markdown","5974b344":"markdown","8ca5ff8a":"markdown","e1e8cad1":"markdown","bd0c87d4":"markdown"},"source":{"46e520f0":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom sklearn.cluster import KMeans\nfrom scipy.spatial.distance import cdist, pdist\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import DBSCAN","e3e8a690":"country_data = pd.read_csv('..\/input\/unsupervised-learning-on-country-data\/Country-data.csv')\ncountry_data.head(3)","8e7d3820":"country_data.info()","cf787d56":"plt.figure(figsize=(18, 8))\nsns.heatmap(country_data.corr(), vmin = -1, vmax = 1, annot = True, cmap = 'coolwarm')\nplt.title('Correlation Map Of Country Data', fontdict={'fontsize':12}, pad=12);","46ac0cfd":"count_data = country_data[['child_mort', 'imports', 'gdpp']]","32fb4c14":"plt.figure(figsize=(18,8))\nplt.subplot(1, 2, 1)\nsns.scatterplot(x = 'gdpp', y = 'child_mort', data = count_data)\nplt.title('Child Mortality')\nplt.xlabel('GDPP')\nplt.ylabel('Child Mortality')\nplt.subplot(1, 2, 2)\nsns.scatterplot(x = 'gdpp', y = 'imports', data = count_data)\nplt.title('Imports')\nplt.xlabel('GDPP')\nplt.ylabel('Imports')\nplt.show()","30bd6384":"number_of_cluster = range(1,11)\nclusterings = [KMeans(n_clusters = k).fit(count_data) for k in number_of_cluster]\ncentroids = [k.cluster_centers_ for k in clusterings]\n\nD_k = [cdist(count_data, cent, 'euclidean') for cent in centroids] \ncIdx = [np.argmin(D, axis = 1) for D in D_k] \ndist = [np.min(D, axis = 1) for D in D_k] \navg_withinSS = [sum(d)\/count_data.shape[0] for d in dist] ","c03ec240":"plt.figure(figsize=(18,8))\nsns.lineplot(number_of_cluster, avg_withinSS)\nsns.scatterplot(number_of_cluster, avg_withinSS)\nplt.xticks(number_of_cluster)\nplt.xlabel('Number Of Cluster')\nplt.ylabel('Average Within SS')\nplt.show()","979ddde9":"kmeans = KMeans(n_clusters = 2)\nkmeans.fit(count_data)\ncountry_clust = count_data.copy()\ncountry_clust['clustkmeans'] = kmeans.labels_","f127a488":"plt.figure(figsize = (18,8))\nplt.subplot(1, 2, 1)\nsns.scatterplot(x = 'gdpp', y = 'child_mort', data = country_clust, hue = 'clustkmeans', palette = 'bright')\nplt.title('Silhouette Plot Child Mortality')\nplt.xlabel('GDPP')\nplt.ylabel('Child Mortality')\nplt.subplot(1, 2, 2)\nsns.scatterplot(x = 'gdpp', y = 'imports', data = country_clust, hue = 'clustkmeans', palette = 'bright')\nplt.title('Silhouette Plot Imports')\nplt.xlabel('GDPP')\nplt.ylabel('Imports')\nplt.show()","48ace095":"cluster_name = ['Cluster 0', 'Cluster 1']\ncolor = ['Blue', 'Orange']\nmortality = ['Low GDPP VS Low to Medium Child Mortality', 'Medium GDPP VS Low Child Mortality']\nimports = ['Low GDPP VS Medium Imports', 'Medium GDPP VS Medium Imports']\nbest_summary = pd.DataFrame({'Color': color, 'Name': cluster_name,\n                        'Child Mortality': mortality, 'Imports': imports})\nbest_summary","1a6881df":"scaler = StandardScaler()\ncountry_clust_scaled = scaler.fit_transform(country_clust)\n\nfor eps in [i\/10 for i in range(2,5)]:\n    for min_samples in range (7,9):\n        print(f'\\neps {eps}')\n        print(f'\\min samples {min_samples}')\n        \n        dbscan = DBSCAN(eps = eps, min_samples = min_samples)\n        labels = dbscan.fit_predict(country_clust_scaled)\n        score = silhouette_score(country_clust_scaled, labels)\n        \n        print(f'clusters present: {np.unique(labels)}')\n        print(f'clusters sizes: {np.bincount(labels + 1)}')\n        print(f'Silhouette Score: {score}')","1d847c93":"dbscan = DBSCAN(eps = 0.4, min_samples = 7)\nlabels = dbscan.fit_predict(country_clust_scaled)\ncountry_clust['clustdbscan'] = labels","a2b2f8b9":"plt.figure(figsize = (18,8))\nplt.subplot(1, 2, 1)\nsns.scatterplot(x = 'gdpp', y = 'child_mort', data = country_clust, hue = 'clustdbscan', palette = 'bright')\nplt.legend(loc = 1)\nplt.title('DBSCAN Child Mortality')\nplt.xlabel('GDPP')\nplt.ylabel('Child Mortality')\nplt.subplot(1, 2, 2)\nsns.scatterplot(x = 'gdpp', y = 'imports', data = country_clust, hue = 'clustdbscan', palette = 'bright')\nplt.legend(loc = 1)\nplt.title('DBSCAN Imports')\nplt.xlabel('GDPP')\nplt.ylabel('Imports')\nplt.show()","a4963c85":"cluster_name = ['Cluster -1', 'Cluster 0', 'Cluster 1']\ncolor = ['Blue', 'Orange', 'Green']\nmortality = ['Noise', 'Low GDPP VS Low to Medium Imports', 'Medium GDPP VS Low Imports']\nimports = ['Noise', 'Low GDPP VS Medium Imports', 'Medium GDPP VS Medium Imports']\ndbscan_summary = pd.DataFrame({'Color': color, 'Name': cluster_name,\n                        'Child Mortality': mortality, 'Imports': imports})\ndbscan_summary","9d3f9122":"From this heatmap, I can define the top 3 highest positive correlation score:\n* ***gdpp*** and income with 0.9\n* total_fer and ***child_mort*** with 0.85\n* ***imports*** and exports with 0.74\n\nI pick one of each correlation pair to see how the cluster will be made from those data. So the next step, I show you clustering between GDPP VS Child Mortality and GDPP VS Imports. Will it represent a good clustering model?","197c242d":"### Elbow Method","76d630f3":"Surprisingly, there is a lot of noise more than I think. With DBSCAN, I can see the accurate model.","9440824d":"The best n_clusters is 2 based on elbow method.","0a593ed6":"*Optimizing Minimum Sample And Epsilon*","2237375b":"Let's determine optimal number of cluster using 2 methods:\n* KMeans Clustering\n* DBSCAN","20f21993":"# DBSCAN","5974b344":"# Define Clustering Target","8ca5ff8a":"The best hyperparam are eps: 0.4 and min samples: 7, because it has the highest silhouette score, but samples is inlcuded with noise.","e1e8cad1":"# KMeans Clustering","bd0c87d4":"From these plots, I can easily define that there are only 2 clusters but I can spot a few outliers or noise. On DBSCAN, I hope it can determine if there are any outliers or noise, so I can have a better clustering model."}}