{"cell_type":{"2c421ee1":"code","2d7b4e33":"code","1cd588b5":"code","f9a75518":"code","32032fe6":"code","33c56188":"code","acd4ad9b":"code","f94ce7c2":"code","2c8e5165":"code","c2021374":"code","237da167":"code","951aed11":"code","ad0c89e2":"code","9823c758":"code","3ac98569":"code","b3112421":"code","61879b15":"code","890f2fcb":"code","a2675bbc":"code","e60e871f":"code","d4108ef3":"code","bd9a91fe":"code","8a36476d":"code","d5e9c0be":"code","e5d67c12":"code","0d6232e9":"code","dd4bd8ce":"code","7bc979fa":"code","9f7d1f07":"code","a1ac2ce6":"code","ba3b938f":"code","4187838c":"code","774b818a":"code","56494acc":"code","1377d922":"code","a5b4d614":"code","208591db":"code","bc544ee8":"code","b3b43b74":"code","b07faf54":"code","520e8dc1":"code","36f3a7a8":"code","28235828":"code","d0c37cc6":"code","467b32ef":"code","7e6f9484":"markdown","6e5f2329":"markdown","34cfbfc5":"markdown","559395dc":"markdown","bd9bc629":"markdown","f91e3c7d":"markdown","533840bd":"markdown"},"source":{"2c421ee1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2d7b4e33":"import os","1cd588b5":"import numpy as np\nimport pandas as pd\nimport graphviz\nimport matplotlib.pyplot as plt\nimport seaborn\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz,DecisionTreeRegressor\nfrom sklearn.metrics import accuracy_score,mean_absolute_error\nfrom sklearn import tree","f9a75518":"test1 = np.array([1,0,1,0,1,0,1,0,1])\ntest2 = np.array([7.5,6,7,4,5,10,9.5,8.8,9])\nx = np.array([test1, test2])\n\njob = np.array([0,0,0,0,0,1,1,1,1])","32032fe6":"plt.scatter(test1, job)\nplt.xlabel('test1')\nplt.ylabel(\"job\")","33c56188":"plt.scatter(test2, job)\nplt.xlabel(\"test2\")\nplt.ylabel(\"job\")","acd4ad9b":"dtc = DecisionTreeClassifier()","f94ce7c2":"dtc.fit(X=x.T,y=job)","2c8e5165":"dtc.predict(X=x.T)","c2021374":"graphviz.Source(export_graphviz(dtc, out_file=None))","237da167":"import missingno as msno","951aed11":"bank1 = pd.read_csv(\"..\/input\/new_bank.csv\")","ad0c89e2":"bank1.head()","9823c758":"bank1.tail()","3ac98569":"bank1.describe()","b3112421":"msno.matrix(bank1)","61879b15":"bank2 = pd.get_dummies(bank1,columns=['marital','loan','contact','y'],drop_first=True)","890f2fcb":"bank2.head()","a2675bbc":"bank2.tail()","e60e871f":"msno.matrix(bank2)","d4108ef3":"#Imputing train_test_split\nfrom sklearn.model_selection import train_test_split","bd9a91fe":"\ntrainx,testx,trainy,testy = train_test_split(bank2.iloc[:,:-1],bank2.iloc[:,-1],\\\n                                             test_size=0.3,random_state=1)","8a36476d":"dtc = DecisionTreeClassifier()","d5e9c0be":"dtc.fit(trainx,trainy)","e5d67c12":"predict_train = dtc.predict(trainx)\npredict_test = dtc.predict(testx)","0d6232e9":"print(\"Accuracy on train is:\",accuracy_score(trainy,predict_train))\nprint(\"Accuracy on test is:\",accuracy_score(testy,predict_test))","dd4bd8ce":"dtc_2 = DecisionTreeClassifier(max_depth=2)\n","7bc979fa":"dtc_2.fit(trainx,trainy)","9f7d1f07":"predict_train_2 = dtc_2.predict(trainx)\npredict_test_2 = dtc_2.predict(testx)","a1ac2ce6":"print(\"Accuracy on train is:\",accuracy_score(trainy,predict_train_2))\nprint(\"Accuracy on test is:\",accuracy_score(testy,predict_test_2))","ba3b938f":"graphviz.Source(export_graphviz(dtc_2,feature_names=trainx.columns,\\\n                                filled=True,class_names=[\"0\",\"1\"],out_file=None))","4187838c":"customer1 = pd.read_csv(\"..\/input\/new_customer.csv\")","774b818a":"customer1.head()","56494acc":"customer2 = pd.get_dummies(customer1, columns=[\"City\",\"FavoriteGame\"], drop_first = True)","1377d922":"customer2.head()","a5b4d614":"trainx,testx,trainy,testy = train_test_split(customer2.iloc[:,np.r_[0:4,5,6]],\\\n                                customer2.TotalRevenueGenerated,test_size=0.3,random_state=1)","208591db":"dtr = DecisionTreeRegressor()","bc544ee8":"dtr.fit(trainx,trainy)","b3b43b74":"predict_train = dtr.predict(trainx)\npredict_test = dtr.predict(testx)","b07faf54":"print(\"Train Error:\", mean_absolute_error(trainy,predict_train))\nprint(\"Test Error:\", mean_absolute_error(testy,predict_test))","520e8dc1":"dtr_2 = DecisionTreeRegressor(max_depth = 2)","36f3a7a8":"dtr_2.fit(trainx,trainy)","28235828":"predict_train_2 = dtr_2.predict(trainx)\npredict_test_2 = dtr_2.predict(testx)","d0c37cc6":"print(\"Train Error:\", mean_absolute_error(trainy,predict_train_2))","467b32ef":"print(\"Train Error:\", mean_absolute_error(testy,predict_test_2))","7e6f9484":"*Decision Tree Classification*","6e5f2329":"DTR with max depth","34cfbfc5":"* DTC with maxdepth","559395dc":"**Decision Tree Regression***","bd9bc629":"DTR with no paramater tuning","f91e3c7d":"Loading the requird libraries","533840bd":"*DTC with no parameter tuning*"}}