{"cell_type":{"cfdc14d6":"code","debc0085":"code","b0c0e7ef":"code","0ebe78d3":"code","04f45166":"code","57faa541":"code","dbbb84b6":"code","518c45e6":"code","7f44052d":"code","6ce4e6ea":"markdown"},"source":{"cfdc14d6":"import torch\nprint(torch.__version__)","debc0085":"import fastai\nfastai.__version__","b0c0e7ef":"from fastai.vision import * \nfrom fastai import *","0ebe78d3":"import fastai; \nfastai.show_install(1)","04f45166":"planet = untar_data(URLs.PLANET_TINY)\nplanet_tfms = get_transforms(flip_vert=False, max_lighting=0.1, max_zoom=1.05, max_warp=0.)","57faa541":"data = ImageDataBunch.from_csv(planet, folder='train', size=128, suffix='.jpg', sep = ' ', ds_tfms=planet_tfms)","dbbb84b6":"data = (ImageItemList.from_csv(planet, 'labels.csv', folder='train', suffix='.jpg')\n        #Where to find the data? -> in planet 'train' folder\n        .random_split_by_pct()\n        #How to split in train\/valid? -> randomly with the default 20% in valid\n        .label_from_df(sep=' ')\n        #How to label? -> use the csv file\n        .transform(planet_tfms, size=128)\n        #Data augmentation? -> use tfms with a size of 128\n        .databunch())                          \n        #Finally -> use the defaults for conversion to databunch","518c45e6":"data.show_batch(rows=2, figsize=(9,7))","7f44052d":"learn = create_cnn(data, models.resnet18,  metrics=[accuracy_thresh])\nlearn.fit(5)","6ce4e6ea":"https:\/\/docs.fast.ai\/metrics.html#accuracy_thresh"}}