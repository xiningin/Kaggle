{"cell_type":{"5df2d26f":"code","8878da61":"code","aa59f390":"code","f0f331db":"code","f72deb6f":"code","8fc35c18":"code","925a1196":"code","6da005a3":"code","f9fa1030":"code","7668ed54":"code","494e054a":"code","26a7b3a5":"code","6a848f60":"code","68a8acd7":"code","cfb95203":"code","23e3262f":"code","9de91e05":"code","03a44f7b":"code","c71e8138":"code","0a54593a":"code","94fa4535":"code","86814f3b":"code","4d9f7a6d":"code","1925d11d":"code","2ba421d8":"code","455f6ee3":"code","60d64593":"code","f24c4b1e":"code","f113971b":"code","cb3a4708":"code","76f21cc9":"code","f49ec767":"code","44fe1c9d":"code","ad08ba6e":"code","e75ef64c":"code","96d260fa":"code","55642fd8":"code","ee63094b":"code","b77d9576":"code","3c7f2e28":"code","e52a0975":"code","1b08099a":"code","666ca23e":"code","7ce2141d":"code","49253558":"code","d41a6311":"code","bfdd9355":"code","05ed8cf1":"code","97525bca":"code","66911d71":"code","8aa7589b":"code","36bd97b7":"code","6f53f4bc":"code","9f6b3b63":"code","0a74e575":"code","0bedbfa6":"code","4019f8dd":"code","4975b0c5":"code","c2109522":"code","5aca1756":"code","0da65ac4":"code","f16fafbf":"code","21872639":"code","b21240aa":"code","25480fb0":"code","fcc63bee":"code","0b3957c5":"code","bff6bd7c":"code","da2e5fc7":"code","46342570":"code","bea2eeb2":"markdown","5144d960":"markdown","c5a967f5":"markdown","4259d8ee":"markdown","2cc8994c":"markdown"},"source":{"5df2d26f":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport matplotlib\nmatplotlib.rcParams[\"figure.figsize\"] = (20,10)","8878da61":"df1 = pd.read_csv(\"..\/input\/bengaluru-house-price-data\/Bengaluru_House_Data.csv\")\ndf1.head()","aa59f390":"df1.shape","f0f331db":"df1.groupby('area_type')['area_type'].agg('count')","f72deb6f":"df2 = df1.drop(['area_type','society','balcony','availability'],axis='columns')\ndf2.head()","8fc35c18":"df2.isnull().sum()","925a1196":"df3 = df2.dropna()\ndf3.isnull().sum()","6da005a3":"df3['size'].unique()\n","f9fa1030":"df3['bhk'] = df3['size'].apply(lambda x: int(x.split(' ')[0]))","7668ed54":"df3.head()","494e054a":"df3['bhk'].unique()","26a7b3a5":"df3[df3.bhk>20]","6a848f60":"df3.total_sqft.unique()","68a8acd7":"def is_float(x):\n    try:\n        float(x)\n    except:\n        return False\n    return True","cfb95203":"# ~ gives -ve outcomes\ndf3[~df3['total_sqft'].apply(is_float)].head(10)","23e3262f":" def convert_to_num(x):\n        tokens = x.split('-')\n        if len(tokens) == 2:\n            return (float(tokens[0])+float(tokens[1]))\/2\n        try:\n            return float(x)\n        except:\n            return None","9de91e05":"convert_to_num('10')","03a44f7b":"convert_to_num('3067 - 8156')","c71e8138":"convert_to_num('34.46Sq. Meter')","0a54593a":"df4 = df3.copy()\ndf4['total_sqft'] = df4['total_sqft'].apply(convert_to_num)\ndf4.head(5)","94fa4535":"df4.loc[30]","86814f3b":"df5 = df4.copy()","4d9f7a6d":"df5['price_per_sqft'] = df5['price']*100000\/df5['total_sqft']\ndf5.head()","1925d11d":"df5.location.unique()","2ba421d8":"len(df5.location.unique())","455f6ee3":"# High dimensionality problem","60d64593":"#remove extra space\ndf5.location = df5.location.apply(lambda x: x.strip())\nlocation_stats = df5.groupby('location')['location'].agg('count').sort_values(ascending=False)\nlocation_stats","f24c4b1e":"location_stats_less_than_10 = location_stats[location_stats <= 10]\nlocation_stats_less_than_10","f113971b":"df5.location = df5.location.apply(lambda x: 'other' if x in location_stats_less_than_10 else x)\nlen(df5.location.unique())","cb3a4708":"df5[df5.total_sqft\/df5.bhk<300].head()","76f21cc9":"df5.shape","f49ec767":"df6 = df5[~(df5.total_sqft\/df5.bhk<300)]\ndf6.shape","44fe1c9d":"df6.price_per_sqft.describe()","ad08ba6e":"def remove_pps_outliers(df):\n    df_out = pd.DataFrame()\n    for key,subdf in df.groupby('location'):\n        m = np.mean(subdf.price_per_sqft)\n        st = np.std(subdf.price_per_sqft)\n        reduced_df = subdf[(subdf.price_per_sqft>(m-st)) & (subdf.price_per_sqft<=(m+st))]\n        df_out = pd.concat([df_out,reduced_df],ignore_index=True)\n    return df_out","e75ef64c":"df7 = remove_pps_outliers(df6)\ndf7.head()","96d260fa":"def plot_scatter_chart(df,location):\n    bhk2 = df[(df.location==location) & (df.bhk==2)]\n    bhk3 = df[(df.location==location) & (df.bhk==3)]\n    matplotlib.rcParams['figure.figsize'] = (15,10)\n    plt.scatter(bhk2.total_sqft,bhk2.price,color='blue',label='2 BHK',s=50)\n    plt.scatter(bhk3.total_sqft,bhk3.price,marker='+',color='green',label='3 BHK',s=50)\n    plt.xlabel(\"Total Square Feet Area\")\n    plt.ylabel(\"Price Per Square Feet\")\n    plt.title(location)\n    plt.legend()","55642fd8":"plot_scatter_chart(df7,\"Rajaji Nagar\")","ee63094b":"plot_scatter_chart(df7,\"Hebbal\")","b77d9576":"# remove items having 'N BHK' where price_per_sqft is less than mean price_per_sqft of 'N-1 BHK' \ndef remove_bhk_outliers(df):\n    exclude_indices = np.array([])\n    for location, location_df in df.groupby('location'):\n        bhk_stats = {}\n        for bhk,bhk_df in location_df.groupby('bhk'):\n            bhk_stats[bhk] = {\n                'mean': np.mean(bhk_df.price_per_sqft),\n                'std' : np.std(bhk_df.price_per_sqft),\n                'count': bhk_df.shape[0]\n            }\n        for bhk,bhk_df in location_df.groupby('bhk'):\n            stats = bhk_stats.get(bhk-1)\n            if stats and stats['count']>5:\n                exclude_indices = np.append(exclude_indices, bhk_df[bhk_df.price_per_sqft<(stats['mean'])].index.values)\n    return df.drop(exclude_indices,axis='index')","3c7f2e28":"df8 = remove_bhk_outliers(df7)\ndf8.head()","e52a0975":"plot_scatter_chart(df8,\"Hebbal\")","1b08099a":"plt.hist(df8.price_per_sqft,rwidth=0.8)\nplt.xlabel(\"Price per square feet\")\nplt.ylabel(\"Count\")","666ca23e":"df8.bath.unique()","7ce2141d":"df8[df8.bath>10]","49253558":"plt.hist(df8.bath,rwidth=0.8)\nplt.xlabel(\"Number of bathrooms\")\nplt.ylabel(\"Count\")","d41a6311":"df8[df8.bath>df8.bhk+2]","bfdd9355":"df9 = df8[df8.bath<df8.bhk+2]\ndf9.shape","05ed8cf1":"df10 = df9.drop(['size','price_per_sqft'],axis='columns')\ndf10.head(3)","97525bca":"dummies = pd.get_dummies(df10.location)\ndummies.head()","66911d71":"df11 = pd.concat([df10,dummies.drop('other',axis='columns')],axis='columns')\ndf11.head(5)","8aa7589b":"df12 = df11.drop('location',axis='columns')\ndf12.head(3)","36bd97b7":"df12.shape","6f53f4bc":"x = df12.drop('price',axis='columns')\nx.head()","9f6b3b63":"y = df12.price\ny.head()","0a74e575":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=10)","0bedbfa6":"from sklearn.linear_model import LinearRegression\nlr_clf = LinearRegression()\nlr_clf.fit(X_train,y_train)\nlr_clf.score(X_test,y_test)","4019f8dd":"from sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import cross_val_score\n\ncv = ShuffleSplit(n_splits=5,test_size=0.2,random_state=0)\n\ncross_val_score(LinearRegression(),x,y,cv=cv)","4975b0c5":"from sklearn.model_selection import GridSearchCV\n\nfrom sklearn.linear_model import Lasso\nfrom sklearn.tree import DecisionTreeRegressor\n\ndef find_best_model(x,y):\n    algos = {\n        'linear_regression' :{\n            'model': LinearRegression(),\n            'params':{'normalize' :[True,False]}\n        \n            },\n        'lasso':{\n            'model': Lasso(),\n            'params' : {'alpha': [1,2],'selection' : ['random','cyclic']}\n            },\n        'decision_tree':{\n            'model': DecisionTreeRegressor(),\n            'params':{'criterion':['mse','friedman_mse'],'splitter':['best','random']}\n            }\n        }\n\n    scores=[]\n    cv = ShuffleSplit(n_splits=5,test_size=0.2,random_state=0)\n    for algo_name,config in algos.items():\n        gs = GridSearchCV(config['model'],config['params'],cv=cv,return_train_score=False)\n        gs.fit(x,y)\n        scores.append({\n            'model': algo_name,\n            'best_scores': gs.best_score_,\n            'best_params': gs.best_params_\n        })\n        \n    return pd.DataFrame(scores,columns=['model','best_scores','best_params'])","c2109522":"find_best_model(x,y)","5aca1756":"x.columns","0da65ac4":"len(x.columns)","f16fafbf":"np.where(x.columns=='1st Phase JP Nagar')[0][0]","21872639":"def predict_price(location,sqft,bath,bhk):\n    loc_index = np.where(x.columns==location)[0][0]\n    \n    X = np.zeros(len(x.columns))\n    X[0] = sqft\n    X[1] = bath\n    X[2] = bhk\n    if loc_index >= 0:\n        X[loc_index] = 1\n    return lr_clf.predict([X])[0]","b21240aa":"predict_price('1st Phase JP Nagar',1000,2,2)","25480fb0":"predict_price('1st Phase JP Nagar',1000,2,3)","fcc63bee":"predict_price('1st Phase JP Nagar',1000,3,4)","0b3957c5":"predict_price('Indira Nagar',1000,2,2)","bff6bd7c":"predict_price('Indira Nagar',1000,3,4)","da2e5fc7":"import pickle\nwith open('banglore_home_prices_model.pickle','wb') as f:\n    pickle.dump(lr_clf,f)","46342570":"import json\ncolumns = {\n    'data_columns' : [col.lower() for col in x.columns]\n}\nwith open(\"columns.json\",\"w\") as f:\n    f.write(json.dumps(columns))","bea2eeb2":"### Outlier detection and removal","5144d960":"### Data Cleaning","c5a967f5":"### Train model","4259d8ee":"## Visualisation","2cc8994c":"### Feature Engineering"}}