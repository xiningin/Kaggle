{"cell_type":{"2ef7ba4a":"code","d3ab1877":"code","4e434140":"code","b5679182":"code","acca1da2":"code","be56517e":"code","b18556cf":"code","4c7d9c16":"code","a19e61e7":"code","67608472":"code","d0acfd5d":"code","a47f4bd2":"markdown","73edaaab":"markdown"},"source":{"2ef7ba4a":"#import libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import load_digits\n%matplotlib inline","d3ab1877":"dig = load_digits() #initialization\ndir(dig) #returns the properties of an object without it's values","4e434140":"plt.gray() #display images in grayscale\n#Loop through the top 5 rows of the images and display each of the images\nfor i in range(5): \n    plt.matshow(dig.images[i])","b5679182":"data_df = pd.DataFrame(dig.data) #convert data to a DataFrame \ndata_df[\"Target\"] = dig.target #add target from initial data to see the target number for each line of data in the data frame\ndata_df","acca1da2":"#import scikit learn libraries for machine learning\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score","be56517e":"#assign independent variables to x\nx = data_df.drop([\"Target\"], axis = \"columns\")\n#assign dependent variable to y\ny = dig.target\n#split your data into train and test samples\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2)\n#initialize randomforestclassifier and fit model\nclassifier = RandomForestClassifier()\nclassifier.fit(x_train, y_train)","b18556cf":"classifier.score(x_test,y_test)","4c7d9c16":"y_pred = classifier.predict(x_test)","a19e61e7":"c_matrix = confusion_matrix(y_test,y_pred)","67608472":"import seaborn as sb\n#plot actual and predicted values in a confusion matrix to visualize how accurate the model predictions are\nplt.subplots(figsize=(8,8))\nax = sb.heatmap(c_matrix, annot = True)\nax.set_xlabel(\"Actual\")\nax.set_ylabel(\"Predicted\")\nax.set_title(\"Confusion Matrix\")","d0acfd5d":"accuracy_score(y_test,y_pred)","a47f4bd2":"Model has an accuracy score of 97%.","73edaaab":"Task: Create a Machine Learning Model to classify images of digits into a number between 0 and 9.\n\nProblem Type: Multiclass Classification.\n\nAlgorithm: RandomForestClassification.\n\nPublished by Adedayo Okubanjo."}}