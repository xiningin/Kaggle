{"cell_type":{"afcb8024":"code","40ddb237":"code","267fe2de":"code","4a8da5d5":"code","5c60905c":"code","abc4105f":"code","24385c96":"code","665aa4f2":"code","5f9c1c46":"code","d13b5b96":"code","c7fc83d5":"code","e48bc9ff":"code","5634b12e":"code","8d94eff7":"code","7d2e53e7":"code","7cd506c5":"code","df2d92bd":"code","6df06e5e":"code","d115720f":"code","27258f9f":"code","d8b7bc3f":"code","555d6b92":"code","999cd1e7":"code","ee6bbde3":"code","9ea905fc":"code","ab6fd29b":"code","a1184e43":"code","5cb10b3d":"code","6d0590db":"code","084b3e09":"code","c72546f2":"code","7b7bb591":"code","d63653a2":"code","44e3c543":"code","49ecec08":"code","a613d1ab":"code","bb56938b":"code","2e6609e9":"code","9b26e6ce":"code","4ddd5a64":"code","2eb5deda":"code","39a2a689":"code","a0dc9b0a":"code","ad499fc0":"code","e80b454b":"code","235639e4":"markdown","7398e941":"markdown","ca259077":"markdown","754d1546":"markdown","6fb1d0d3":"markdown","b61ea620":"markdown","68960a6c":"markdown","66a04b41":"markdown","99285c50":"markdown","bf84074e":"markdown","702d7f8b":"markdown","ff46dbab":"markdown"},"source":{"afcb8024":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","40ddb237":"import warnings\nwarnings.filterwarnings('ignore')","267fe2de":"# visualization libraries\nimport seaborn as sns\nsns.set(rc={'figure.figsize':(12,8)})\nimport matplotlib.pyplot as plt\nplt.style.use('classic')\n%matplotlib inline\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport cufflinks as cf\ncf.go_offline()\ninit_notebook_mode(connected=True)\n\n# model training libraries\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix,classification_report,plot_confusion_matrix,accuracy_score","4a8da5d5":"df = pd.read_csv(\"\/kaggle\/input\/penguins\/penguins.csv\")\ndf.head()","5c60905c":"df.shape","abc4105f":"df.isnull().sum()","24385c96":"df = df.dropna() # dropping rows with any column having null values\n","665aa4f2":"df = df.drop('Unnamed: 0',axis=1)","5f9c1c46":"df.shape # 10 null rows dropped","d13b5b96":"df.head()","c7fc83d5":"df.info()","e48bc9ff":"sns.pairplot(df,hue='species')","5634b12e":"sns.kdeplot(df['bill_length_mm'], shade=True)","8d94eff7":"sns.distplot(df['bill_length_mm'])\n","7d2e53e7":"sns.distplot(df['bill_depth_mm']);","7cd506c5":"sns.violinplot(\"species\", \"flipper_length_mm\", data=df, palette=[\"lightblue\", \"lightpink\"]);","df2d92bd":"sns.violinplot(\"species\", \"body_mass_g\", data=df, palette=[\"lightblue\", \"lightpink\"]);","6df06e5e":"sns.jointplot(\"bill_length_mm\",\"bill_depth_mm\", data=df, kind='reg');","d115720f":"sns.jointplot(\"bill_length_mm\",\"flipper_length_mm\", data=df, kind='reg');","27258f9f":"sns.jointplot(\"body_mass_g\",\"flipper_length_mm\", data=df, kind='reg');","d8b7bc3f":"sns.jointplot(\"bill_length_mm\",\"body_mass_g\", data=df, kind='reg');","555d6b92":"# year wise the count of different species can be seen. Adelie count more in 2009, Gentoo more in 2008.  Chinstrap decreased from 2007 to 2008 and increased again in 2009\nwith sns.axes_style('white'):\n    g = sns.factorplot(\"year\", data=df, aspect=4.0, kind='count',hue='species', order=range(2007, 2010))\n    g.set_ylabels('Number of Penguin Species')","999cd1e7":"sns.kdeplot(df.body_mass_g[df.sex=='male'], label='Male', shade=True)\nsns.kdeplot(df.body_mass_g[df.sex=='female'], label='Female', shade=True)\nplt.xlabel('body_mass_g');\n# How body_mass_g differs among the Male and Female penguins","ee6bbde3":"sns.displot(data=df, x='bill_depth_mm', hue='species', kind='kde', fill=True) # How bill_depth_mm differs among the three species","9ea905fc":"fig, ax = plt.subplots(1,2,figsize=(12,6), gridspec_kw=dict(width_ratios=[4,3]))\nsns.scatterplot(data=df, x='bill_depth_mm',y='body_mass_g', hue='species', ax=ax[0]) # Adelie and Chinstrap mixed together and Gentoo pretty much separate group\nsns.kdeplot(data=df, x='bill_depth_mm', hue='species', shade=True, ax=ax[1])\nfig.tight_layout()","ab6fd29b":"fig = sns.FacetGrid(df, col=\"island\", hue=\"species\", aspect=.75, height=4)\nfig.map_dataframe(sns.scatterplot, x=\"bill_depth_mm\", y=\"body_mass_g\")  # bill_depth_mm vs body_mass_g in the 3 islands and the 3 species\nfig.set_axis_labels(\"Bill Depths (mm)\", \"Body Mass (g)\")\nfig.add_legend()","a1184e43":"df[['bill_length_mm','bill_depth_mm','flipper_length_mm','body_mass_g']].corr() # correlation plot","5cb10b3d":"plt.figure(figsize=(16, 6))\nheatmap = sns.heatmap(df[['bill_length_mm','bill_depth_mm','flipper_length_mm','body_mass_g']].corr(), vmin=-1, vmax=1, annot=True)\nheatmap.set_title('Correlation Heatmap', fontdict={'fontsize':12}, pad=12);","6d0590db":"mask_ut=np.triu(np.ones(df[['bill_length_mm','bill_depth_mm','flipper_length_mm','body_mass_g']].corr().shape)).astype(np.bool)","084b3e09":"mask_ut[0:5,0:5]","c72546f2":"plt.figure(figsize=(16, 6))\nheatmap = sns.heatmap(df[['bill_length_mm','bill_depth_mm','flipper_length_mm','body_mass_g']].corr(), mask=mask_ut, vmin=-1, vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('Triangle Correlation Heatmap', fontdict={'fontsize':18}, pad=16);","7b7bb591":"df.iplot(kind='scatter', x='bill_length_mm', y='flipper_length_mm', mode='markers')","d63653a2":"df.iplot(kind='bar', x=['species', 'island'],y='flipper_length_mm')","44e3c543":"# Create an interactive bar chart:\ndf.iplot(\n    x='island',\n    y='flipper_length_mm',\n    kind='bar'\n)","49ecec08":"#defining data\ntrace = go.Scatter(x = df['bill_length_mm'],y=df['flipper_length_mm'],text = df['species'],mode='markers')\ndata=[trace]\n#defining layout\nlayout = go.Layout(title='bill_length_mm Vs flipper_length_mm Scatter Plot',xaxis=dict(title='bill_length_mm'),yaxis=dict(title='flipper_length_mm'),hovermode='closest')\n#defining figure and plotting\nfigure = go.Figure(data=data,layout=layout)\niplot(figure)\n\n# we can hover over any data point to see the value\n","a613d1ab":"fig = px.scatter(df, x=\"bill_length_mm\", y='bill_depth_mm', color=\"species\", size='year', hover_data=['flipper_length_mm'])\nfig.show() # we can hover over any data point to see the value","bb56938b":"# Train and test split\nX = pd.get_dummies(df.drop('species',axis=1),drop_first=True)\ny = df['species']","2e6609e9":"df['species'].value_counts()","9b26e6ce":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","4ddd5a64":"### RandomForest Classification\n\n# Use 10 random trees\nmodel = RandomForestClassifier(n_estimators=10,max_features='auto',random_state=101)","2eb5deda":"model.fit(X_train,y_train)","39a2a689":"preds = model.predict(X_test)","a0dc9b0a":"confusion_matrix(y_test,preds)","ad499fc0":"plot_confusion_matrix(model,X_test,y_test)","e80b454b":"print(classification_report(y_test,preds))","235639e4":"# Model training and evaluation","7398e941":"#### How to Make Lower Triangle Heatmap with Seaborn?","ca259077":"iplot to create interactive plots directly in a Jupyter notebook output.","754d1546":"#### The histogram on the top shows the distribution of the variable bill_length_mm and the histogram to the right shows the distribution of the variable bill_depth_mm at the y-axis. And the scatter plot is bill_length_mm vs bill_depth_mm","6fb1d0d3":"#### A violint plot allow to visualize the distribution of a numeric variable for one or several groups","b61ea620":"# Data visualization","68960a6c":"#### a Kernel Distribution Estimation Plot which depicts the probability density function of the continuous variables","66a04b41":"Cufflinks \u2013 Using Plotly with Pandas directly.The \u201ccufflinks\u201d library is a library that provides bindings between Plotly and Pandas. Cufflinks provides a method to create plots from Pandas DataFrames using the existing Pandas Plot interface but with Plotly output.","99285c50":"#### Working on variety of plots with seaborn and plotly","bf84074e":"#### Lower Triangular Heatmap with Seaborn using mask","702d7f8b":"#### RF","ff46dbab":"#### A Distplot or distribution plot, depicts the variation in the data distribution."}}