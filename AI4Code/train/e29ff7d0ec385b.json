{"cell_type":{"77970148":"code","7c2bd358":"code","006a19e8":"code","2c191103":"code","b6aa3fe8":"code","2df56fb6":"code","b9feca52":"code","204e0493":"code","5065f45e":"code","a3810eb3":"code","1480ac4b":"code","b4e04960":"code","329d5bc8":"code","96b7d482":"code","6bb1f838":"code","e566f9b2":"code","9943b9e9":"code","8663f9c3":"code","1b738578":"code","4074ef61":"code","b6c7a980":"code","c7e5936c":"code","e7d37e72":"code","9e928628":"code","5dc54576":"code","dfadc224":"code","63342bdc":"markdown","1715a56a":"markdown","b308468b":"markdown","4d385e73":"markdown","e7b5abb1":"markdown","15d0bc79":"markdown","3873499d":"markdown","7297d825":"markdown","adc9c3b0":"markdown","a14e8063":"markdown","0597b75f":"markdown","7ce2f328":"markdown","d706fe75":"markdown","823ef7a6":"markdown","804b22c3":"markdown","5e6c19c5":"markdown","f63400ad":"markdown","86af3e68":"markdown","4e81664e":"markdown","20ef6bb4":"markdown","abed836f":"markdown","7e7a2de4":"markdown","62ac9710":"markdown","1481f99c":"markdown","50088c01":"markdown","6655e37a":"markdown","0a6de145":"markdown"},"source":{"77970148":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nfrom patsy import dmatrices\nimport statsmodels.api as sm\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nimport statsmodels.formula.api as smf\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\ndf = pd.read_csv(\"..\/input\/nyc-property-sales\/nyc-rolling-sales.csv\")\nprint(df.shape)","7c2bd358":"for i in df.columns:\n    print(\"\\t\", i, \"of type\", df[i].dtype ,\"has\", df[i].nunique(), \"unique values. \\n\",\n          \"Values:\", df[i].unique())","006a19e8":"df.drop([\"Unnamed: 0\", \"EASE-MENT\", \"APARTMENT NUMBER\", \"ADDRESS\", \"BLOCK\", \"LOT\", \"SALE DATE\"], axis = 1, inplace = True)\ndf[\"LAND SQUARE FEET\"] = pd.to_numeric(df[\"LAND SQUARE FEET\"], errors = \"coerce\")\ndf[\"GROSS SQUARE FEET\"] = pd.to_numeric(df[\"GROSS SQUARE FEET\"], errors = \"coerce\")\ndf[\"SALE PRICE\"] = pd.to_numeric(df[\"SALE PRICE\"], errors = \"coerce\")\ndf[\"BOROUGH\"] = df[\"BOROUGH\"].astype(str)\ndf[\"ZIP CODE\"] = df[\"ZIP CODE\"].astype(str)\ndf[\"TAX CLASS AT TIME OF SALE\"] = df[\"TAX CLASS AT TIME OF SALE\"].astype(str)","2c191103":"df.info()","b6aa3fe8":"df = df[df[\"SALE PRICE\"].isna() == 0]","2df56fb6":"df.describe()","b9feca52":"plt.figure(figsize = (12,8))\nplt.subplot(2,2,1)\nplt.hist(df[\"SALE PRICE\"], density = True)\nplt.title(\"Sale Price\")\nplt.subplot(2,2,2)\nplt.hist(np.log1p(df[\"SALE PRICE\"]), density = True)\nplt.title(\"Sale Price Log\")\nplt.subplot(2,2,3)\nplt.hist(df[(df[\"SALE PRICE\"] > 1000) & (df[\"SALE PRICE\"] < 1e7)][\"SALE PRICE\"], bins = 50, density = True)\nplt.title(\"Sale Price - Outliers Removed\")\nplt.subplot(2,2,4)\nplt.hist(np.log1p(df[(df[\"SALE PRICE\"] > 10000) & (df[\"SALE PRICE\"] < 1e7)][\"SALE PRICE\"]), density = True)\nplt.title(\"Sale Price - Outliers Removed Log\")\nplt.show()","204e0493":"df = df[df[\"SALE PRICE\"] > 1000]\ndf = df[df[\"SALE PRICE\"] < 1e7]\ndf.shape","5065f45e":"df = df[df[\"GROSS SQUARE FEET\"].isna() == False]\ndf = df[df[\"LAND SQUARE FEET\"].isna() == False]\ndf.shape","a3810eb3":"df = df[df[\"TAX CLASS AT PRESENT\"] != \" \"]\ndf = df[df[\"BUILDING CLASS AT PRESENT\"] != \" \"]\ndf = df[df[\"ZIP CODE\"] != \"0\"]\ndf = df[df[\"YEAR BUILT\"] > 1500]\ndf.shape","1480ac4b":"plt.figure(figsize = (12,8))\nplt.subplot(2,2,1)\nplt.hist(df[\"GROSS SQUARE FEET\"], bins = 500)\nplt.title(\"Gross sq feet\")\nplt.xlim(0,0.2e6)\nplt.subplot(2,2,2)\nplt.hist(np.log1p(df[\"GROSS SQUARE FEET\"]), bins = 50)\nplt.title(\"Gross sq feet - log\")\nplt.subplot(2,2,3)\nplt.hist(df[(df[\"GROSS SQUARE FEET\"] > 100) & (df[\"GROSS SQUARE FEET\"] < 1e5)][\"GROSS SQUARE FEET\"], bins = 50)\nplt.title(\"Gross sq feet - outliers removed\")\nplt.subplot(2,2,4)\nplt.hist(np.log1p(df[(df[\"GROSS SQUARE FEET\"] > 100) & (df[\"GROSS SQUARE FEET\"] < 1e5)][\"GROSS SQUARE FEET\"]), bins = 50)\nplt.title(\"Gross sq feet - outliers removed - log\")\nplt.show()","b4e04960":"df = df[(df[\"GROSS SQUARE FEET\"] > 100)]\ndf = df[(df[\"GROSS SQUARE FEET\"] < 1e5)]\ndf.shape","329d5bc8":"sns.set(font_scale = 1)\ncorrelation_matrix = df.corr()\nplt.figure(figsize = (8, 8))\nsns.heatmap(correlation_matrix, vmax = 1, square = True, annot = True, cmap = 'RdYlGn')\nplt.title('Correlation matrix between the features')\nplt.xticks(rotation = 90)\nplt.show()","96b7d482":"#changing blanks in feature names to use them with statsmodels properly\ndf.columns = ['BOROUGH', 'NEIGHBORHOOD', 'BUILDING_CLASS_CATEGORY',\n       'TAX_CLASS_AT_PRESENT', 'BUILDING_CLASS_AT_PRESENT', 'ZIP_CODE',\n       'RESIDENTIAL_UNITS', 'COMMERCIAL_UNITS', 'TOTAL_UNITS',\n       'LAND_SQUARE_FEET', 'GROSS_SQUARE_FEET', 'YEAR_BUILT',\n       'TAX_CLASS_AT_TIME_OF_SALE', 'BUILDING_CLASS_AT_TIME_OF_SALE',\n       'SALE_PRICE']","6bb1f838":"Y, X = dmatrices(\"SALE_PRICE ~ RESIDENTIAL_UNITS + COMMERCIAL_UNITS + TOTAL_UNITS + LAND_SQUARE_FEET + GROSS_SQUARE_FEET + YEAR_BUILT\", data = df, return_type = \"dataframe\")\nvif = pd.DataFrame()\nvif[\"VIF Factor\"] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\nvif[\"features\"] = X.columns\ndf_vif=vif.iloc[1:] #remove the row for intercept \ndf_vif.round(2)","e566f9b2":"model = smf.ols(\"SALE_PRICE ~ RESIDENTIAL_UNITS + TOTAL_UNITS + GROSS_SQUARE_FEET + YEAR_BUILT\",\n                data = df)\nfitted = model.fit()\nprint(fitted.summary())","9943b9e9":"model = smf.ols(\"SALE_PRICE ~ RESIDENTIAL_UNITS + GROSS_SQUARE_FEET + YEAR_BUILT\",\n                data = df)\nfitted = model.fit()\nprint(fitted.summary())","8663f9c3":"df['residential_med'] = df[\"RESIDENTIAL_UNITS\"] > df[\"RESIDENTIAL_UNITS\"].median()\ndf['residential_med'] = np.where(df.residential_med == False, \"Below Median\", \"Above Median\")\nsns.lmplot(x='GROSS_SQUARE_FEET', y='SALE_PRICE', hue='residential_med', data=df, ci=None, height=5, aspect=2.5)\nplt.xlim(0,2e4)\nplt.ylim(0,0.3e7)\nplt.show()","1b738578":"model = smf.ols(\"SALE_PRICE ~ RESIDENTIAL_UNITS:GROSS_SQUARE_FEET + RESIDENTIAL_UNITS + GROSS_SQUARE_FEET + YEAR_BUILT\",\n                data = df)\nfitted = model.fit()\nprint(fitted.summary())","4074ef61":"plt.figure(figsize=(14,5))\nplt.subplot(121)\nplt.scatter(fitted.fittedvalues, fitted.resid_pearson, color='green', s=6)\nplt.axhline(y=0, c='r', lw=1)\nplt.xlabel('Fitted values') ; plt.ylabel('Standardized Residuals')\nplt.subplot(122)\nsns.distplot(fitted.resid_pearson, hist=True, kde=True, bins=20, \n             color = 'darkblue', hist_kws={'edgecolor':'black'}, kde_kws={'linewidth': 3})\nplt.show()","b6c7a980":"model = smf.ols(\"np.log(SALE_PRICE) ~ RESIDENTIAL_UNITS:GROSS_SQUARE_FEET + RESIDENTIAL_UNITS + GROSS_SQUARE_FEET + YEAR_BUILT\",\n                data = df)\nfitted = model.fit()\nprint(fitted.summary())","c7e5936c":"plt.figure(figsize=(14,5))\nplt.subplot(121)\nplt.scatter(fitted.fittedvalues, fitted.resid_pearson, color='green', s=6)\nplt.axhline(y=0, c='r', lw=1)\nplt.xlabel('Fitted values') ; plt.ylabel('Standardized Residuals')\nplt.subplot(122)\nsns.distplot(fitted.resid_pearson, hist=True, kde=True, bins=20, \n             color = 'darkblue', hist_kws={'edgecolor':'black'}, kde_kws={'linewidth': 3})\nplt.show()","e7d37e72":"model = smf.ols(\"np.log(SALE_PRICE) ~ RESIDENTIAL_UNITS:GROSS_SQUARE_FEET + RESIDENTIAL_UNITS + np.log(GROSS_SQUARE_FEET) + YEAR_BUILT\",\n                data = df)\nfitted = model.fit()\nprint(fitted.summary())","9e928628":"plt.figure(figsize=(14,5))\nplt.subplot(121)\nplt.scatter(fitted.fittedvalues, fitted.resid_pearson, color='green', s=6)\nplt.axhline(y=0, c='r', lw=1)\nplt.xlabel('Fitted values') ; plt.ylabel('Standardized Residuals')\nplt.subplot(122)\nsns.distplot(fitted.resid_pearson, hist=True, kde=True, bins=20, \n             color = 'darkblue', hist_kws={'edgecolor':'black'}, kde_kws={'linewidth': 3})\nplt.show()","5dc54576":"model = smf.ols(\"np.log(SALE_PRICE) ~ RESIDENTIAL_UNITS:GROSS_SQUARE_FEET + RESIDENTIAL_UNITS + np.log(GROSS_SQUARE_FEET) + YEAR_BUILT\\\n                                    + C(ZIP_CODE) +  C(BUILDING_CLASS_CATEGORY)\",\n                data = df)\nfitted = model.fit()\nprint(fitted.summary())","dfadc224":"plt.figure(figsize=(14,5))\nplt.subplot(121)\nplt.scatter(fitted.fittedvalues, fitted.resid_pearson, color='green', s=6)\nplt.axhline(y=0, c='r', lw=1)\nplt.xlabel('Fitted values') ; plt.ylabel('Standardized Residuals')\nplt.subplot(122)\nsns.distplot(fitted.resid_pearson, hist=True, kde=True, bins=20, \n             color = 'darkblue', hist_kws={'edgecolor':'black'}, kde_kws={'linewidth': 3})\nplt.show()","63342bdc":"Looks more neat now. I am also deleting null sale price values as I cannot use them for regression analysis.","1715a56a":"Still not the ideal, but much better than the previous one. Also residuals look more normally distributed.\nThis time, I am going to add two categorical features and see if our adjusted R^2 increses, which would suggest how much variability our model could explain.","b308468b":"Below, I wanted to see VIF (variance inflation factor) for each numerical feature. VIF makes a regression with features each one being target and find R^2. Lower, better.","4d385e73":"Good increse in adjusted R^2, good reduce in AIC. Coefficients look normal. Finally let's see the residuals one last time","e7b5abb1":"from 70k to 28k seems a lot, but enough for some analysis purposes","15d0bc79":"Below, I wanted to see how column wise data looks like","3873499d":"Also removing some dirty-looking data here","7297d825":"Note that the numbers in report changed a lot, that's because we are using a different target now as we took the logarithm. Now these ones should be taken as benchmark for further changes","adc9c3b0":"I would expect residential units, and total units have positive coefficients. Total units may have an effect on this, also it is not significant as p value is greater than 0.05. Let's remove it and see what happens.","a14e8063":"As a final remark, the way I handled (or not handled) the missing and the other values might not the correct way of doing it but with limited knowledge of domain, I am happy with the step by step progress.\n\n**Thank you for reading this far, please upvote if you like my notebook!**","0597b75f":"Distribution of residuals look normal-ish, but fitted values - residuals graph looks terrible! Fortunately conic shape of it suggests that a transformation on the target might be needed. Let's take logarithm of sale price and see again","7ce2f328":"Sale price distribution has some values that doesn't make sense, at least they need further investigation. Because of simplicity, I am removing them.","d706fe75":"Distribution of residuals look way better, way closer to being heteroscedastic. Still, not looking good but relatively better. The linear pattern below -5 in the middle suggests that we failed at extracting some more information, but I think overall, good progress until here.","823ef7a6":"Again increase in R^2 values and decrase in AIC, which is good, let's see the residuals","804b22c3":"Units obviously need attention as expected. I am not going to use commercial units for this analysis and see what would others do.","5e6c19c5":"**Gross Square Feet**","f63400ad":"From the correlation matrix above:\n* Total units and commercial units are almost perfectly correlated, using them together will make our model suffer from multicollinearity, and we would lose interpretation of coefficients. Makes more sense to use total units but let's see.\n* Residential units and gross square feet are seems to be fair features for our model, but also highly collinear.\n* No harm for using year built, I don't think it would contribute to R^2 but it would also reduce AIC.\n* Land square feet seems to be not predictive, also possibility of multicollinerity with gross square feet, so out of my scope.","86af3e68":"No effect on R^2 and AIC. Gross sq feet feature coefficient turns positive. At least we get rid of one insignificant feature. Still residential units coefficient is not positive. The reason might be the collinearity between residential units and gross sq feet. \nI also want to see the interactions between these two. We can visualize this by adding above-below median feature for residential units and plot these two for gross sq feet against target","4e81664e":"The shape still looks bad, but again, inverse u shape suggests a transformation is needed too, this time it is going to be for one of the targets. Above, we saw that log of gross square feet plot. I am going to include it to the model now","20ef6bb4":"**Sale Price**","abed836f":"Around 13k more data removed.","7e7a2de4":"As a result:\n* Increase in adjusted R^2, reduce in AIC (which btw indicates the ability of model to handle the complexity of adding new features, tradeoff between model complexity and goodness of fit, lower, better)\n* Positive residential unit coefficient\n\nTime to see the residuals now:","62ac9710":"Gross sq feet and land sq feet has quite a lot missing values. Imputing them with mean or median would create a peak within the distribution, so imputing with other features or using a model could be more appropriate. That would also require domain knowledge -which I don't have- so I am just going to remove them too and accept the number of observations I will be left with for further investigation.","1481f99c":"After removing null sale price values, we are left with 70k observations.","50088c01":"**Welcome to my regression analysis on this dataset!**\n\nBelow, I tried to\n* Transform data to get ready for analysis\n* Slight exploration on data\n* Make regression analysis via statsmodels\n* Explain some concepts like R^2, AIC, VIF, concept of interacting terms, multicollinearity, variable transformation, residuals and explain their change by adding new features to the model\n\nI hope you will enjoy it!","6655e37a":"There's a crossing point, which suggests that there's an interaction, for lower residential units (below median), gross sq feet has more strong relationship with sale price and vice-versa. another way of saying this is sq feet increases price more for lower number of residential units. Let's add the interaction term and see.","0a6de145":"Some of the features does not make sense to use, some needs type casting and some has irregular values. Below is how I handled them"}}