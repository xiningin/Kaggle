{"cell_type":{"4a9d42bb":"code","e4a2aa5b":"code","4784dd5b":"code","dacb30b0":"code","8286476e":"code","3528a91e":"code","ec186593":"code","0f41c771":"code","aaf641ea":"code","102b3967":"code","4421fb89":"code","d4bb09f1":"code","482509dd":"code","c3c520d3":"code","c75568b7":"markdown","9ab28576":"markdown","4487edf5":"markdown","b9c17c25":"markdown","1d36841a":"markdown"},"source":{"4a9d42bb":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport tensorflow as tf","e4a2aa5b":"df_labels = pd.read_csv(\"\/kaggle\/input\/dog-breed-identification\/labels.csv\")\ndf_labels['id'] = df_labels['id'] + '.jpg'\ndf_labels.head()","4784dd5b":"from sklearn.model_selection import train_test_split\ndf_train, df_validation = train_test_split(df_labels, test_size=0.2, shuffle=True)","dacb30b0":"from keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(\n        rotation_range=40,\n        width_shift_range=0.2,\n        height_shift_range=0.2,\n        rescale=1.\/255,\n        shear_range=0.2,\n        zoom_range=0.2,\n        horizontal_flip=True,\n        fill_mode='nearest'\n)\n\nvalidation_datagen = ImageDataGenerator(\n        rescale=1.\/255)\n\ntraining_set = train_datagen.flow_from_dataframe(\n    dataframe=df_train,\n    directory='\/kaggle\/input\/dog-breed-identification\/train',\n    x_col=\"id\",\n    y_col=\"breed\",\n    target_size=(150, 150),\n    class_mode=\"categorical\",\n    batch_size=128\n)\n\nvalidation_set = validation_datagen.flow_from_dataframe(\n    dataframe=df_validation,\n    directory='\/kaggle\/input\/dog-breed-identification\/train',\n    x_col=\"id\",\n    y_col=\"breed\",\n    target_size=(150, 150),\n    class_mode=\"categorical\",\n    batch_size=128\n)","8286476e":"classes = df_labels['breed'].unique().shape[0]\nprint(\"Total breeds: \", classes)","3528a91e":"from keras.layers import Conv2D, MaxPooling2D, GlobalAveragePooling2D\nfrom keras.layers import Dropout, Flatten, Dense\nfrom keras.models import Sequential\n\nmodel = Sequential()\n\n\nmodel.add(Conv2D(32, (3, 3),input_shape=(150,150,3), activation = 'relu'))\n\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\nmodel.add(Conv2D(32, (3, 3), activation = 'relu'))\n\nmodel.add(Flatten())\nmodel.add(Dropout(0.25))\n\nmodel.add(Dense(units=128, activation='relu'))\nmodel.add(Dense(units=classes, activation='softmax'))\n\nmodel.summary()","ec186593":"model.compile(optimizer='adam',\n             loss='categorical_crossentropy',\n             metrics=['accuracy'])","0f41c771":"model.fit(x = training_set, validation_data = validation_set, epochs = 20)","aaf641ea":"test_datagen = ImageDataGenerator ( \n    rescale=1\/255.\n)\n\ntest_set = test_datagen.flow_from_directory (\n    '\/kaggle\/input\/dog-breed-identification',\n    target_size = (150,150),\n    batch_size = 128,\n    classes=['test']\n)","102b3967":"y_pred = model.predict(test_set)","4421fb89":"df_submission = pd.read_csv('\/kaggle\/input\/dog-breed-identification\/sample_submission.csv')\ndf_submission","d4bb09f1":"import re\nfile_list = test_set.filenames\nid_list = []\nfor name in file_list:\n    m = re.sub('test\/', '', name)\n    m = re.sub('.jpg', '', m)\n    id_list.append(m)","482509dd":"df_submission['id'] = id_list\ndf_submission.iloc[:,1:] = y_pred\ndf_submission","c3c520d3":"final_df = df_submission.set_index('id')\nfinal_df.to_csv('Submission.csv')","c75568b7":"### Model","9ab28576":"### Splitting data","4487edf5":"### Verifying data and generating images for testing","b9c17c25":"### Load data","1d36841a":"### Importing packages"}}