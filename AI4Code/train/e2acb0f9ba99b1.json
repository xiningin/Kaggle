{"cell_type":{"502fbe0b":"code","ebc440da":"code","d719b1df":"code","ae8cc4c3":"code","1b4d7889":"code","640e87df":"code","3fb094fe":"code","c1ff2357":"code","dae99412":"code","43ca9694":"code","51f903bb":"code","6d0aa998":"code","fd1e7003":"code","1070191e":"code","b68f8eba":"code","ce12c331":"code","db267dcc":"code","1214f12d":"code","de5d4248":"code","f8c00489":"code","ca490a11":"code","0c6e0976":"code","fc17d994":"code","fd79d034":"code","6eef8002":"code","92d92ac7":"code","5d719ab3":"code","760a07e8":"code","b0013973":"markdown","e0163225":"markdown","f83eaa0d":"markdown","ff51f46b":"markdown","b245e459":"markdown","0d6d4fcc":"markdown","72ec4163":"markdown","ee18d12f":"markdown","893b351d":"markdown","26958e3f":"markdown","a2f72a2e":"markdown","d00b53a9":"markdown","7feaf5e6":"markdown","79d3bd4f":"markdown","d06d02f5":"markdown","d89f7a28":"markdown"},"source":{"502fbe0b":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nsns.set_style(\"darkgrid\")\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.neighbors import KNeighborsClassifier, NeighborhoodComponentsAnalysis, LocalOutlierFactor\nfrom sklearn.decomposition import PCA\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ebc440da":"data = pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv')\ndata.drop([\"Unnamed: 32\",\"id\"], axis = 1, inplace =True)\ndata = data.rename(columns = {\"diagnosis\":\"target\"})\ndata.head()","d719b1df":"sns.countplot(data[\"target\"])\nprint(data.target.value_counts())","ae8cc4c3":"data[\"target\"] = [1 if i.strip() == \"M\" else 0 for i in data.target]\nprint(\"Data Shape:\", data.shape)","1b4d7889":"corr_matrix = data.corr()\nf,ax=plt.subplots(figsize = (15,15))\nsns.heatmap(corr_matrix,annot= True,fmt = \".1f\",ax=ax,cmap='coolwarm',vmin=-1,vmax=1)\nplt.xticks(rotation=90)\nplt.yticks(rotation=0)\nplt.title('Correlation Map', size = 14)\nplt.show()","640e87df":"threshold = 0.75\nfiltre = np.abs(corr_matrix[\"target\"]) > threshold\ncorr_features = corr_matrix.columns[filtre].tolist()\nf,ax=plt.subplots(figsize = (8,8))\nsns.heatmap(data[corr_features].corr(),annot= True,fmt = \".2f\",ax=ax,cmap='coolwarm',vmin=-1,vmax=1)\nplt.xticks(rotation=60)\nplt.yticks(rotation=0)\nplt.title(\"Correlation Between Features w Correlation Threshold 0.75\", size = 14)\nplt.show()","3fb094fe":"data_melted = pd.melt(data, id_vars = \"target\",\n                     var_name = \"features\",\n                     value_name = \"value\")\nplt.figure(figsize = (12,6))\nsns.boxplot(x = \"features\", y =\"value\", hue = \"target\", data = data_melted)\nplt.xticks(rotation = 90);","c1ff2357":"sns.pairplot(data[corr_features], diag_kind = \"kde\", markers = \"+\", hue = \"target\")\nplt.show()","dae99412":"y = data.target\nx = data.drop([\"target\"], axis = 1)\ncolumns = x.columns.tolist()\ncolumns","43ca9694":"clf = LocalOutlierFactor()\ny_pred = clf.fit_predict(x)\nX_score = clf.negative_outlier_factor_\noutlier_score = pd.DataFrame()\noutlier_score[\"score\"] = X_score\noutlier_score.head()","51f903bb":"radius = (X_score.max() - X_score) \/ (X_score.max() - X_score.min())\noutlier_score[\"radius\"] = radius\nthreshold = -2.5\nfilter_ = outlier_score[\"score\"] < threshold\noutlier_index = outlier_score[filter_].index.tolist()\nplt.figure(figsize = (12,8))\nplt.scatter(x.iloc[outlier_index,0],x.iloc[outlier_index,1], color = \"blue\", s = 50, label = \"Outliers\" )\nplt.scatter(x.iloc[:,0],x.iloc[:,1], color = \"k\", s = 3, label = \"Data Points\" )\nplt.scatter(x.iloc[:,0],x.iloc[:,1], s = 1000*radius, edgecolor = \"r\", facecolors = \"none\", label =\"Outlier Scores\")\nplt.legend()\nplt.show()","6d0aa998":"x = x.drop(outlier_index)\ny = y.drop(outlier_index).values\nx.head()","fd1e7003":"test_size = 0.3\nX_train, X_test, Y_train, Y_test = train_test_split(x,y, test_size = test_size, random_state = 42)","1070191e":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\nx_train_df = pd.DataFrame(X_train, columns = columns)\nx_train_df.head()","b68f8eba":"x_train_df.describe()","ce12c331":"x_train_df[\"target\"] = Y_train\ndata_melted = pd.melt(x_train_df, id_vars = \"target\",\n                     var_name = \"features\",\n                     value_name = \"value\")\n\nplt.figure(figsize = (14,8))\nsns.boxplot(x = \"features\", y =\"value\", hue = \"target\", data = data_melted)\nplt.xticks(rotation = 90)\nplt.show()","db267dcc":"sns.pairplot(x_train_df[corr_features], diag_kind = \"kde\", hue = \"target\")\nplt.show()","1214f12d":"knn = KNeighborsClassifier(n_neighbors= 2)\nknn.fit(X_train,Y_train)\ny_pred =  knn.predict(X_test)\ncm = confusion_matrix(Y_test, y_pred)\nacc = accuracy_score(Y_test, y_pred)\nscore = knn.score(X_test, Y_test)\nprint(\"Score:\", score)\nprint(\"CM:\", cm)\nprint(\"Basic KNN Accuracy:\", acc)","de5d4248":"def KNN_Best_Params(x_train, x_test, y_train,y_test):\n    \n    k_range = list(range(1,31))\n    weight_options = [\"uniform\",\"distance\"]\n    print()\n    param_grid = dict(n_neighbors = k_range, weights = weight_options)\n    \n    knn = KNeighborsClassifier()\n    grid = GridSearchCV(knn, param_grid, cv = 10, scoring = \"accuracy\")\n    grid.fit(x_train, y_train)\n    \n    print(\"Best Training Score: {} with parameters: {}\".format(grid.best_score_, grid.best_params_))\n    print()\n    \n    knn = KNeighborsClassifier(**grid.best_params_)\n    knn.fit(x_train,y_train)\n    \n    y_pred_test = knn.predict(x_test)\n    y_pred_train = knn.predict(x_train)\n    \n    cm_test = confusion_matrix(y_test, y_pred_test)\n    cm_train = confusion_matrix(y_train, y_pred_train)\n    \n    acc_test = accuracy_score(y_test, y_pred_test)\n    acc_train = accuracy_score(y_train, y_pred_train)\n    \n    print(\"Test Score: {}, Train Score: {}\".format(acc_test,acc_train))\n    \n    print()\n    \n    print(\"CM Test:\" ,cm_test)\n    print(\"CM Train:\", cm_train)\n    \n    return grid","f8c00489":"grid = KNN_Best_Params(X_train, X_test, Y_train, Y_test)","ca490a11":"scaler = StandardScaler()\nx_scaled = scaler.fit_transform(x)\n\npca = PCA(n_components = 2)\npca.fit(x_scaled)\nX_reduced_pca = pca.transform(x_scaled)\npca_data = pd.DataFrame(X_reduced_pca, columns = [\"p1\",\"p2\"])\npca_data[\"target\"] = y\n\nplt.figure(figsize = (14,8))\nsns.scatterplot(x = \"p1\", y = \"p2\", hue = \"target\", data = pca_data)\nplt.title(\"PCA: p1 vs p2\")\nplt.show()","0c6e0976":"X_train_pca, X_test_pca, Y_train_pca, Y_test_pca = train_test_split(X_reduced_pca, y,test_size = test_size, random_state = 42)\ngrid_pca = KNN_Best_Params(X_train_pca, X_test_pca, Y_train_pca, Y_test_pca)","fc17d994":"cmap_light = ListedColormap(['orange', 'cornflowerblue'])\ncmap_bold = ListedColormap(['darkorange', \"darkblue\"])\n\nh = 0.05\nX = X_reduced_pca\nx_min, x_max = X[:,0].min() -1, X[:,0].max() + 1\ny_min, y_max = X[:,1].min() -1, X[:,1].max() + 1\nxx, yy = np.meshgrid(np.arange(x_min, x_max, h),\n                    np.arange(y_min,y_max,h))\n\nZ = grid_pca.predict(np.c_[xx.ravel(), yy.ravel()])\n\nZ = Z.reshape(xx.shape)\nplt.figure(figsize = (14,8))\nplt.pcolormesh(xx,yy,Z, cmap = cmap_light)\n\nplt.scatter(X[:,0], X[:,1], c = y, cmap = cmap_bold,\n           edgecolor = 'k', s = 20)\nplt.xlim(xx.min(), xx.max())\nplt.ylim(yy.min(), yy.max())\nplt.title(\"%i-Class Classification (k = %i, weights = '%s')\"\n         % (len(np.unique(y)), grid_pca.best_estimator_.n_neighbors, grid_pca.best_estimator_.weights))\nplt.show()","fd79d034":"nca = NeighborhoodComponentsAnalysis(n_components = 2, random_state = 42)\nnca.fit(x_scaled, y)\nX_reduced_nca = nca.transform(x_scaled)\nnca_data = pd.DataFrame(X_reduced_nca, columns = [\"p1\",\"p2\"])\nnca_data[\"target\"] = y\nplt.figure(figsize = (14,8))\nsns.scatterplot(x = \"p1\", y= \"p2\", hue = \"target\", data = nca_data )\nplt.title(\"NCA: p1 vs p2\")\nplt.show()","6eef8002":"X_train_nca, X_test_nca, Y_train_nca, Y_test_nca = train_test_split(X_reduced_nca, y,test_size = test_size, random_state = 42)\ngrid_nca = KNN_Best_Params(X_train_nca, X_test_nca, Y_train_nca, Y_test_nca)","92d92ac7":"cmap_light = ListedColormap(['orange', 'cornflowerblue'])\ncmap_bold = ListedColormap(['darkorange', \"darkblue\"])\nh = 0.35\nX = X_reduced_nca\nx_min, x_max = X[:,0].min() -1, X[:,0].max() + 1\ny_min, y_max = X[:,1].min() -1, X[:,1].max() + 1\nxx, yy = np.meshgrid(np.arange(x_min, x_max, h),\n                    np.arange(y_min,y_max,h))\n\nZ = grid_nca.predict(np.c_[xx.ravel(), yy.ravel()])\n\nZ = Z.reshape(xx.shape)\nplt.figure(figsize = (14,8))\nplt.pcolormesh(xx,yy,Z, cmap = cmap_light)\n\nplt.scatter(X[:,0], X[:,1], c = y, cmap = cmap_bold,\n           edgecolor = 'k', s = 20)\nplt.xlim(xx.min(), xx.max())\nplt.ylim(yy.min(), yy.max())\nplt.title(\"%i-Class Classification (k = %i, weights = '%s')\"\n         % (len(np.unique(y)), grid_nca.best_estimator_.n_neighbors, grid_nca.best_estimator_.weights));","5d719ab3":"knn = KNeighborsClassifier(**grid_nca.best_params_)\nknn.fit(X_train_nca,Y_train_nca)\ny_pred_nca = knn.predict(X_test_nca)\nacc_test_nca = accuracy_score(y_pred_nca, Y_test_nca)\nprint(\"KNN Accuracy: %{}\".format(round(knn.score(X_test_nca, Y_test_nca)*100,2)))","760a07e8":"test_data = pd.DataFrame()\ntest_data[\"X_test_nca_p1\"] = X_test_nca[:,0]\ntest_data[\"X_test_nca_p2\"] = X_test_nca[:,1]\ntest_data[\"y_pred_nca\"] = y_pred_nca\ntest_data[\"Y_test_nca\"] = Y_test_nca\n\nplt.figure(figsize = (14,8))\nsns.scatterplot(\"X_test_nca_p1\", y= \"X_test_nca_p2\", hue =\"Y_test_nca\", data = test_data)\ndiff = np.where(y_pred_nca!= Y_test_nca)[0]\nplt.scatter(test_data.iloc[diff,0], test_data.iloc[diff,1],label = \"Wrong Classified\", alpha = 0.2,color = \"red\", s = 1000)\nplt.show()","b0013973":"<a id = \"13\"><\/a>\n# Principal Component Analysis","e0163225":"<a id = \"7\"><\/a>\n# Outlier Detection","f83eaa0d":"<a id = \"11\"><\/a>\n# Basic KNN Method","ff51f46b":"<a id = \"5\"><\/a>\n# Exploratory Data Analysis","b245e459":"<a id = \"6\"><\/a>\n## Correlation Map","0d6d4fcc":"<a id = \"9\"><\/a>\n# Train Test Split","72ec4163":"<a id = \"10\"><\/a>\n# Standardization","ee18d12f":"<a id = \"14\"><\/a>\n# Neighborhood Component Analysis (NCA)","893b351d":"<a id = \"12\"><\/a>\n## Finding Best KNN Parameters","26958e3f":"<a id = \"15\"><\/a>\n## Finding Wrong Decision","a2f72a2e":"1. [Libraries and Utilities](#2)   \n2. [Load and Check Data](#3)   \n    - [Malignant to 1 and Bening to 0](#4)\n3. [Exploratory Data Analysis](#5)\n    - [Correlation Map](#6)\n4. [Outlier Detection](#7)\n5. [Drop Outliers](#8)\n6. [Train Test Split](#9)\n7. [Standardization](#10)\n8. [Basic KNN Method](#11)\n    - [Finding Best KNN Parameters](#12)\n9. [Principal Component Analysis](#13)\n10. [Neighborhood Component Analysis (NCA)](#14)\n    - [Finding Wrong Decision](#15)","d00b53a9":"<a id = \"4\"><\/a>\n## Malignant to 1 and Bening to 0","7feaf5e6":"# Breast Cancer Classification\n\nBreast cancer is cancer that develops from breast tissue. Signs of breast cancer may include a lump in the breast, a change in breast shape, dimpling of the skin, fluid coming from the nipple, a newly inverted nipple, or a red or scaly patch of skin. In those with distant spread of the disease, there may be bone pain, swollen lymph nodes, shortness of breath, or yellow skin.\n\n![image.png](attachment:32b9c468-981d-46c0-b444-24c4c3a61d5d.png)","79d3bd4f":"<a id = \"2\"><\/a>\n# Libraries and Utilities","d06d02f5":"<a id = \"3\"><\/a>\n# Load and Check Data","d89f7a28":"<a id = \"8\"><\/a>\n# Drop Outliers"}}