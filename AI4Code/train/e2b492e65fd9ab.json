{"cell_type":{"b7397cad":"code","d3337d1a":"code","8b477cfc":"code","758d6fa1":"code","08b08a36":"code","a5c7c093":"code","bb0b03c5":"code","981a653c":"code","5b6baa78":"code","0c65001c":"code","3d83c611":"code","a9a1a7c9":"code","c1155213":"code","3127f069":"code","b39509e7":"code","c25110a9":"code","9035c415":"code","5e35a657":"code","7517224e":"code","6a83c97b":"code","4957d9ed":"code","7c1506af":"code","e0396db6":"code","2fd7bd80":"code","db1fea22":"code","a732b22b":"code","ba60abd7":"code","b3366151":"code","73314f16":"code","f28c5e1d":"code","daad2053":"code","82dfa82e":"code","f6aacc24":"code","5d98ee4b":"code","4db567e6":"code","a79bb618":"code","c081b33b":"code","21cf01c9":"code","c4f05be4":"code","31e8ce8f":"code","7ce1d6dd":"code","3643ace8":"code","cf1c2279":"code","095feb33":"code","76058909":"code","929476a3":"code","1831041c":"code","393e6dc5":"code","82812d7b":"code","d4df3987":"code","9c307807":"code","ec09e153":"markdown","f9568ef6":"markdown","e2c4da25":"markdown","0521c095":"markdown","95e031c4":"markdown","fb104363":"markdown","4a7c9990":"markdown","f7c04b08":"markdown","e216c3bd":"markdown","17fb9543":"markdown","9d2bce4b":"markdown","46f71fbc":"markdown","7fdea7a7":"markdown","9199f850":"markdown","20b8b093":"markdown","a116aad1":"markdown","2c01adad":"markdown","aada0a07":"markdown","ee93a4c7":"markdown","5c758646":"markdown","9f0de800":"markdown","c4796a97":"markdown"},"source":{"b7397cad":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style='darkgrid')\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d3337d1a":"# load the dataset\ndf = pd.read_csv('..\/input\/hotel-booking-demand\/hotel_bookings.csv')\ndf.head()","8b477cfc":"df.describe()","758d6fa1":"# check for missing values\ndf.isnull().sum()","08b08a36":"# check for the shape of dataset\ndf.shape","a5c7c093":"# check for data type of each column\ndf.dtypes","bb0b03c5":"df['is_canceled'].value_counts(normalize=True)","981a653c":"df['reservation_status'].value_counts(normalize=True)","5b6baa78":"df.drop(columns=['agent', 'company', 'reservation_status'],inplace=True)\ndf.dropna(axis=0,inplace=True)\ndf.shape","0c65001c":"df.isnull().sum()","3d83c611":"df['meal'].value_counts()","a9a1a7c9":"# \"meal\" contains values \"Undefined\", which is equal to SC\ndf['meal'].replace('Undefined','SC',inplace=True)","c1155213":"df.hist(figsize=(20,20))\nplt.show()","3127f069":"len(df[(df['adults']==0) & (df['children']==0) & (df['babies']==0)])","b39509e7":"zero_guests = df[(df['adults']==0) & (df['children']==0) & (df['babies']==0)].index\ndf.drop(zero_guests, inplace=True)\ndf.shape","c25110a9":"print('There are ' + str(len(df[(df['hotel']=='Resort Hotel') & (df['is_canceled']==1)])) + ' cancelations at Resort Hotel')\nprint('There are ' + str(len(df[(df['hotel']=='City Hotel') & (df['is_canceled']==1)])) + ' cancelations at City Hotel')","9035c415":"plt.figure(figsize=(6,6))\nplt.title(label='Cancellations by Hotel Types')\nsns.countplot(x='hotel',hue='is_canceled',data=df)\nplt.show()","5e35a657":"# % of cancellations in Resort Hotel\ndf[df['hotel']=='Resort Hotel']['is_canceled'].value_counts(normalize=True)","7517224e":"# % of cancellations in City Hotel\ndf[df['hotel']=='City Hotel']['is_canceled'].value_counts(normalize=True)","6a83c97b":"plt.figure(figsize=(12,6))\nplt.title(label='Cancellation by Lead Time')\nsns.barplot(x='hotel',y='lead_time',hue='is_canceled',data=df)\nplt.show()","4957d9ed":"plt.figure(figsize=(6,6))\nplt.title(label='Cancellation by ADR')\nsns.barplot(x='is_canceled',y='adr',data=df)\nplt.show()","7c1506af":"plt.figure(figsize=(6,6))\nplt.title(label='Cancellation by ADR & Hotel Type')\nsns.barplot(x='hotel',y='adr',hue='is_canceled',data=df)\nplt.show()","e0396db6":"plt.figure(figsize=(6,6))\nplt.title(label='Cancellation by Deposit Type')\nsns.countplot(x='deposit_type',hue='is_canceled',data=df)\nplt.show()","2fd7bd80":"plt.figure(figsize=(6,6))\nplt.title(label='Cancellation by Market Segments')\nplt.xticks(rotation=45) \nsns.countplot(x='market_segment',hue='is_canceled',data=df)\nplt.show()","db1fea22":"plt.figure(figsize=(6,6))\nplt.title(label='Cancellation by Market Segments & ADR')\nplt.xticks(rotation=45) \nsns.barplot(x='market_segment',y='adr',hue='is_canceled',data=df)\nplt.show()","a732b22b":"plt.figure(figsize=(6,6))\nplt.title(label='Cancellation by Distribution Channels')\nplt.xticks(rotation=45) \nsns.countplot(x='distribution_channel',hue='is_canceled',data=df)\nplt.show()","ba60abd7":"df['reservation_status_date'] = pd.to_datetime(df['reservation_status_date'], format='%Y-%m-%d')","b3366151":"plt.figure(figsize=(6,6))\nplt.title(label='Cancellation by Month')\nplt.xticks(rotation=45) \nsns.countplot(x=df['reservation_status_date'].dt.month,hue='is_canceled',data=df)\nplt.show()","73314f16":"plt.figure(figsize=(19,6))\nplt.title(label='Cancellation by Week Number')\nplt.xticks(rotation=45) \nsns.countplot(x=df['arrival_date_week_number'],hue='is_canceled',data=df)\nplt.show()","f28c5e1d":"plt.figure(figsize=(16,6))\nplt.title(label='Cancellation by day')\nplt.xticks(rotation=45) \nsns.countplot(x=df['reservation_status_date'].dt.day,hue='is_canceled',data=df)\nplt.show()","daad2053":"cat_cols=['is_canceled','arrival_date_month','meal','market_segment','distribution_channel','reserved_room_type',\n      'is_repeated_guest','deposit_type','customer_type']\ndf[cat_cols] = df[cat_cols].astype('category')\nnum_cols = ['lead_time','arrival_date_week_number','arrival_date_day_of_month','stays_in_weekend_nights','stays_in_week_nights',\n        'adults','children','babies','previous_cancellations','previous_bookings_not_canceled','required_car_parking_spaces',\n        'total_of_special_requests','adr']","82dfa82e":"model_df = df[cat_cols+num_cols]\nmodel_df.shape","f6aacc24":"model_df.corr()","5d98ee4b":"# Create dummy variables\ndf_dummies = pd.get_dummies(model_df.drop(columns=['is_canceled']))","4db567e6":"df_dummies.head()","a79bb618":"y = model_df['is_canceled']\nX = df_dummies","c081b33b":"# Load modules for machine learning\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report, confusion_matrix","21cf01c9":"X_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.3, random_state=0)\nsc = StandardScaler()\n\nsc.fit(X_train)\nX_train_std = sc.transform(X_train)\nX_test_std = sc.transform(X_test)","c4f05be4":"from sklearn.linear_model import LogisticRegression\n\nlr = LogisticRegression()\nlr.fit(X_train_std, y_train)\ny_lr_pred = lr.predict(X_test_std)\n\nprint('Accuracy: %.4f' % accuracy_score(y_test, y_lr_pred))\nprint(confusion_matrix(y_test, y_lr_pred))\nprint(classification_report(y_test,y_lr_pred))","31e8ce8f":"from sklearn.tree import DecisionTreeClassifier\n\nclf = DecisionTreeClassifier()\nclf.fit(X_train_std, y_train)\ny_clf_pred = clf.predict(X_test_std)\n\nprint('Accuracy: %.4f' % accuracy_score(y_test, y_clf_pred))\nprint(confusion_matrix(y_test, y_clf_pred))\nprint(classification_report(y_test,y_clf_pred))","7ce1d6dd":"from sklearn.ensemble import AdaBoostClassifier\n\nada = AdaBoostClassifier()\nada.fit(X_train_std, y_train)\ny_ada_pred = ada.predict(X_test_std)\n\nprint('Accuracy: %.4f' % accuracy_score(y_test, y_ada_pred))\nprint(confusion_matrix(y_test, y_ada_pred))\nprint(classification_report(y_test,y_ada_pred))","3643ace8":"from sklearn.ensemble import GradientBoostingClassifier\n\ngbc = GradientBoostingClassifier()\ngbc.fit(X_train_std, y_train)\ny_gbc_pred = gbc.predict(X_test_std)\n\nprint('Accuracy: %.4f' % accuracy_score(y_test, y_gbc_pred))\nprint(confusion_matrix(y_test, y_gbc_pred))\nprint(classification_report(y_test,y_gbc_pred))","cf1c2279":"from xgboost import XGBClassifier\n\nxgb = XGBClassifier()\nxgb.fit(X_train_std, y_train)\ny_xgb_pred = xgb.predict(X_test_std)\n\nprint('Accuracy: %.4f' % accuracy_score(y_test, y_xgb_pred))\nprint(confusion_matrix(y_test, y_xgb_pred))\nprint(classification_report(y_test,y_xgb_pred))","095feb33":"from sklearn.ensemble import RandomForestClassifier\n\nrfl = RandomForestClassifier()\nrfl.fit(X_train_std, y_train)\ny_rfl_pred = rfl.predict(X_test_std)\n\nprint('Accuracy: %.4f' % accuracy_score(y_test, y_rfl_pred))\nprint(confusion_matrix(y_test, y_rfl_pred))\nprint(classification_report(y_test,y_rfl_pred))","76058909":"importances = rfl.feature_importances_ \n# Sort feature importances in descending order\nindices = np.argsort(importances)[::-1]\n\n# Rearrange feature names so they match the sorted feature importances\nnames = [X.columns[i] for i in indices]\n\n# Create plot\nplt.figure(figsize=(30,30))\n\n# Create plot title\nplt.title(\"Feature Importance\")\n\n# Add bars\nplt.bar(range(X.shape[1]), importances[indices])\n\n# Add feature names as x-axis labels\nplt.xticks(range(X.shape[1]), names, rotation=90)\n\n# Show plot\nplt.show()","929476a3":"# pring all feature importance\nindices = np.argsort(importances)[::-1]\nfeat_labels = X.columns[:]\n\nfor f in range(X_train_std.shape[1]):\n    print(\"%2d) %-*s %f\" % (f + 1, 30, \n                            feat_labels[indices[f]], \n                            importances[indices[f]]))","1831041c":"from sklearn.metrics import roc_curve, roc_auc_score","393e6dc5":"y_score = rfl.predict_proba(X_test_std)[:,1]\n# Create true and false positive rates\nfalse_positive_rate, true_positive_rate, threshold = roc_curve(y_test, y_score)\n# Plot ROC curve\nplt.title('Receiver Operating Characteristic')\nplt.plot(false_positive_rate, true_positive_rate)\nplt.plot([0, 1], ls=\"--\")\nplt.plot([0, 0], [1, 0] , c=\".7\"), plt.plot([1, 1] , c=\".7\")\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()","82812d7b":"import scikitplot as skplt","d4df3987":"rf = rfl.fit(X_train_std, y_train)\ny_probas = rf.predict_proba(X_test_std)\nskplt.metrics.plot_roc(y_test,y_probas)\nplt.show()","9c307807":"skplt.metrics.plot_lift_curve(y_test, y_probas)\nplt.show()","ec09e153":"### Modeling\n\nI will look up 1's precision, recall, accuracy as model metrics as well as interpretability to decide the best model.","f9568ef6":"##### XGBoost","e2c4da25":"Looks like the random forest has the highest precision, recall and accuracy, let's take a look at feature importance.","0521c095":"##### Random Forest","95e031c4":"##### Gradient Boosting","fb104363":"### Import Dataset & Preparation","4a7c9990":"is_canceled & reservation_status provide same information, we can drop reservation_status for model building purpose","f7c04b08":"##### Decision Tree","e216c3bd":"There are many missing values in agent & company columns. These two columns can be dropped. We can drop the missing value in country & children since there is only small proportion missing values.","17fb9543":"Let's dive deeper into the performance","9d2bce4b":"So, the best model is the Random Forest with precision of 0.86, recall of 0.74, and overall accuracy of 0.8570. Also, we are able to interpret the model results by extracting feature importances","46f71fbc":"Reservations with No-deposit or Non-refund policy are more likely to be canceled\n\n##### Any difference in market segments?","7fdea7a7":"\u2022 The cancellation percentage of groups is higher than other segments\n\n\u2022 The cancellation number of Online TA is higher than other segments\n\n\u2022 Almost all canceled reservations have a higher ADR.\n\n#### Distribution Channels\n","9199f850":"Reservations from Travel Agents or Tour Operators are more likely to be canceled\n\n\n##### Cancellations by Month, Day and Week Number","20b8b093":"Looks like there are some reservation with 0 adults, we need to take a look at those records.","a116aad1":"##### Logistic Regression","2c01adad":"Looks like the cancellations in Resort Hotels had a higher ADR.\n\n##### Would Deposit Type makes a difference?","aada0a07":"Looks like the longer the lead time, the reservation is more likely to be canceled.\n\n#### How about ADR?","ee93a4c7":"City Hotel has a higher cancellations rate of 41.78% comparing to Resort Hotel\u2019s 27.98%\n\n#### Any difference in lead time?","5c758646":"### EDA\n\nNow the data is cleaned and ready for analysis.\n\n#### Which hotel has more cancelations?","9f0de800":"##### Ada Boosting","c4796a97":"## Context\n\nReservation cancellation is not uncommon in the hotel industry. Each cancellation means a lost revenue opportunity that can never be recovered. When working at the front desk at an airport hotel, we had to call each guest to confirm if they will show up in the afternoon. If they confirm that they cannot show up, we could try to sell the room again. This practice ensures the revenue to a certain degree. However, it is not sufficient to call each guest in the afternoon since a majority of guests check-in during the afternoon. \n\nTherefore, if we can predict if a guest would cancel a reservation, hotels could contact guests that most likely to cancel to confirm more efficiently and to resell the room to optimize revenues.\n\n## Content\nThis [data](https:\/\/www.kaggle.com\/jessemostipak\/hotel-booking-demand) set contains booking information for a city hotel and a resort hotel, and includes information such as when the booking was made, length of stay, the number of adults, children, and\/or babies, and the number of available parking spaces, among other things.\n\n## Questions\n1. Which hotel has more cancelations?\n2. Any difference in lead time?\n3. How about ADR?\n4. Would Deposit Type makes a difference?\n5. Any difference in market segments?\n6. How about distribution channels?\n7. How about Month, Day, and Week Number?"}}