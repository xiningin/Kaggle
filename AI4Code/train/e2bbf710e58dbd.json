{"cell_type":{"a30765c3":"code","54b7709e":"code","20750024":"code","9e746c42":"code","ebb4619a":"code","edb6ad5a":"code","7c6a347e":"code","e04c7a68":"code","f0d2a9bc":"code","f3dc59ec":"code","40245317":"code","5e9e1589":"code","0b6a4e3d":"code","c53bb2a2":"code","e7f30037":"code","5242d0a5":"code","b677a841":"code","a2b721d6":"code","7d88ca65":"code","159cde92":"code","ae3ae7d0":"code","b225d04e":"code","c980caa7":"code","06468033":"code","566c9417":"code","4a74cba0":"code","c06d55cc":"markdown","e26c7fcb":"markdown"},"source":{"a30765c3":"import numpy as np \nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","54b7709e":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","20750024":"train = pd.read_csv('\/kaggle\/input\/sf-crime\/train.csv.zip', parse_dates= ['Dates'])\ntest = pd.read_csv('\/kaggle\/input\/sf-crime\/test.csv.zip', parse_dates= ['Dates'], index_col = 'Id')","9e746c42":"train.head()","ebb4619a":"test.head()","edb6ad5a":"x = list(test)\nt_data= train[x]\njoin = pd.concat([t_data, test])\nmerge = join.copy()\n","7c6a347e":"merge.head()","e04c7a68":"t= train['Category']\nmerge.isnull().sum()","f0d2a9bc":"from sklearn.preprocessing import LabelEncoder\nLB = LabelEncoder()\ntar = LB.fit_transform(t)\nprint(LB.classes_)","f3dc59ec":"date = pd.to_datetime(join['Dates'])\nmerge['Date'] = date.dt.date\nmerge['Year'] = date.dt.year\nmerge['Month'] = date.dt.month\nmerge['Day'] = date.dt.day\nmerge['Hour'] = date.dt.hour\nmerge.drop('Dates', axis = 1, inplace = True)","40245317":"date = merge.groupby('Date').count().iloc[:, 0]","5e9e1589":"sns.kdeplot(data = date, shade = True)\nplt.axvline(x = date.median(), ymax = 0.95, linestyle = '-')\nplt.annotate('Median' + str(date.median()), xy = (date.median(), 0.005))","0b6a4e3d":"lb= LabelEncoder()\nmerge['PdDis'] = lb.fit_transform(merge['PdDistrict'])\nsns.countplot(merge['PdDis'])","c53bb2a2":"merge[['PdDistrict', 'PdDis']].head(10)","e7f30037":"merge.drop('PdDistrict', axis = 1, inplace = True)","5242d0a5":"merge['DayWeek'] = lb.fit_transform(merge['DayOfWeek'])\nmerge[['DayOfWeek', 'DayWeek']].head(10)","b677a841":"merge.drop('DayOfWeek', axis = 1, inplace = True)","a2b721d6":"merge['Block'] = merge['Address'].str.contains('block', case = False)\nmerge['ST'] = merge['Address'].str.contains('ST', case = False)\nmerge.drop('Address', axis = 1, inplace = True)","7d88ca65":"print(merge['X'].min(), merge['X'].max())\nprint(merge['Y'].min(), merge['Y'].max())","159cde92":"medX= merge[merge['X'] < -120.5]['X'].median()\nmedY = merge[merge['Y'] < 90]['Y'].median()\nmerge.loc[merge['X'] >= -120.5, 'X'] = medX\nmerge.loc[merge['Y'] >= 90, 'Y'] = medY","ae3ae7d0":"merge['X+Y'] = merge['X'] + merge['Y']\nmerge['X-Y'] = merge['X'] - merge['Y']","b225d04e":"merge.drop('Date', axis = 1, inplace = True)","c980caa7":"data_train = merge[:train.shape[0]]\ndata_test = merge[train.shape[0]:]","06468033":"import lightgbm as lg\ntrains = lg.Dataset(data_train, label = tar, categorical_feature=['PdDis', 'DayWeek'])\nparams = {\n    'boosting':'gbdt',\n    'objective':'multiclass',\n    'num_class':39,\n    'max_delta_step':0.9,\n    'min_data_in_leaf': 20,\n    'learning_rate': 0.4,\n    'max_bin': 480,\n    'num_leaves': 45,\n    'verbose' : 1\n}\nbst = lg.train(params, trains, 120)","566c9417":"prediction = bst.predict(data_test)","4a74cba0":"result1 = pd.DataFrame(prediction, columns = LB.inverse_transform(np.linspace(0, 38, 39, dtype='int16')),index=data_test.index) \nresult1.head()\nresult1.to_csv('final_submission', index_label = 'Id')","c06d55cc":"# Importing Datasets","e26c7fcb":"# Importing modules"}}