{"cell_type":{"014f8b96":"code","57794c10":"code","109a13ea":"code","e0418607":"code","df95e8c9":"code","3741410a":"code","387c14da":"code","dd9e2644":"code","7a54dcf4":"code","529452db":"code","70d6d733":"code","b02f32c5":"code","9e006fbf":"markdown","f013a8ba":"markdown","71e5aa35":"markdown","363c8249":"markdown","3b9e04e8":"markdown","53bc2254":"markdown","d5f95b97":"markdown","1c016cda":"markdown"},"source":{"014f8b96":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","57794c10":"df_attack= pd.read_csv('..\/input\/health-care-data-set-on-heart-attack-possibility\/heart.csv')\ndf_attack","109a13ea":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nData=df_attack.drop('target',axis=1)\n","e0418607":"scaler.fit(X=Data)\nscaled_features= scaler.transform(df_attack.drop('target',axis=1))","df95e8c9":"df_accepted_feat= pd.DataFrame(scaled_features,columns=df_attack.columns[:13])\ndf_accepted_feat","3741410a":"from sklearn.model_selection import train_test_split\nx= df_accepted_feat\ny=df_attack['target']\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.4, random_state=109)","387c14da":"from sklearn.neighbors import KNeighborsRegressor\nknn= KNeighborsRegressor(n_neighbors=3)\nknn.fit(x_train,y_train)\npred= knn.predict(x_test)","dd9e2644":"from sklearn import metrics\nmetrics.mean_absolute_error(y_test,pred)","7a54dcf4":"metrics.mean_squared_error(y_test,pred)","529452db":"np.sqrt(metrics.mean_squared_error(y_test,pred))","70d6d733":"error_rate= []\nfor i in range(1,50):\n    knn=KNeighborsRegressor(n_neighbors=i)\n    knn.fit(x_train,y_train)\n    pred_i= knn.predict(x_test)\n    error_rate.append(np.mean(pred_i!= y_test))","b02f32c5":"plt.figure(figsize=(12,8))\nplt.plot(range(1,50), error_rate, color='blue', linestyle='dashed', marker='o', markerfacecolor='red',markersize=8)\nplt.title('Error rate vs K values')\nplt.xlabel('K Values')\nplt.ylabel('Error rate')","9e006fbf":"## KNN CLASSIFICATION MODEL!","f013a8ba":"## SHOWING THE BEST K-NEIGHBOR VALUE VS ERROR\n### By making an error rate in for loop that takes the error in all k-values from range 1 to 50!","71e5aa35":"### 1- SCALE FEATURES \"preprocessing\"\n#### In practice we often ignore the shape of the distribution and just transform the data to center it by removing the mean value of each feature, then scale it by dividing non-constant features by their standard deviation.\n\n","363c8249":"### 2- TRAIN\/TEST SPLIT","3b9e04e8":"### BEGIN FORWARD TO KNN MODEL","53bc2254":"### CALCULATE MAE & MSE & RMSE","d5f95b97":"# SO THE BEST K-VLUE BETWEEN 0 AND 5!","1c016cda":"### IMPORTING LIBRARIES & DATA:"}}