{"cell_type":{"ccac1ca7":"code","71903181":"code","b4bfcd6f":"code","7df79a21":"markdown"},"source":{"ccac1ca7":"# multilevel causality network diagram with Fruchterman-Reingold force-directed algorithm\n\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport json #simple parsing of json data from the datasource to dataframe\nimport pandas as pd\nimport networkx as nx\nimport matplotlib.pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","71903181":"df = pd.read_csv(\"\/kaggle\/input\/multilevel-causality-relations-deaths-age-sex\/multilevel_causality_deaths.csv\")\nprint(df.shape)","b4bfcd6f":"#create graph instance\nG = nx.DiGraph()\nfor i, row in df.iterrows():\n       if not pd.isna(row.predecessors_array) :\n            #json formating\n            json_array = json.loads(str(row.predecessors_array))\n            edgeTemp = [[ j['predecessor_id'],row.concept_id, float(j['impact'])*row.total_yr_deaths_FRANCE \/ 1200] for j in json_array]\n            G.add_weighted_edges_from(edgeTemp)\n\n#dict for position of root and direct\ncount = 0\nY = 0\nfixed_positions = {}\nfor i, row in df.iterrows():\n    if (row.level_of_cause == \"root\" and row.total_yr_deaths_FRANCE > 0) :\n        position  = (0,Y)\n        fixed_positions[row.concept_id] = position\n        count+=1\n        Y+=12\ncount = 0\nY = 30\nfor i, row in df.iterrows():\n    if (row.level_of_cause == \"direct\" and row.total_yr_deaths_FRANCE > 0) :\n        position  = (500,Y)\n        fixed_positions[row.concept_id] = position\n        count+=1\n        Y+=55\n\n#Fruchterman-Reingold force-directed algorithm with fixed start and end\nfixed_nodes = fixed_positions.keys()\npos = nx.spring_layout(G,pos=fixed_positions ,fixed = fixed_nodes , k = 0.1,iterations = 1)\n\n#set node size\nnode_sizes = []\nlabel_colors = []\nlabel_transparency = []\nfor n in G.nodes(): #n is a concept_id value\n    #df look up as nodes might not all be computed (e.g. death=0) and order might be different\n    deaths = df.loc[df['concept_id'] == n,'total_yr_deaths_FRANCE'].iloc[0]\n    size = deaths\/10\n    node_sizes.append(size)\n    if deaths > 15000:\n        color = 'red'\n    elif deaths > 5000:\n        color = 'orange'\n    else :\n        color = 'yellow'\n    label_colors.append(color)\n\n#rendering only\n#set edge width based on weight\nedge_widths = []\nfor edge in G.edges(data='weight'):\n    edge_widths.append(edge[2])\n\nplt.figure(num= 1, figsize=(22, 18), dpi=60, frameon = False , clear = True)\nnx.draw_networkx_edges(G, pos,alpha=0.5, edge_color = 'grey', arrowsize  =17, width=edge_widths) #node_size=60,font_size=8)\nnx.draw_networkx_nodes(G, pos, node_size=node_sizes, alpha=0.3,node_color=label_colors) #node_size=60,font_size=8)\nnx.draw_networkx_labels(G,pos)\nplt.title('Multilevel causality deaths for COUNTRY=FRANCE, no subgroup', size=15)\nplt.tight_layout()\nplt.show()","7df79a21":"This network diagram illustrate relations between direct cause of deaths, root cause of deaths and indirect causes.\n\nThis is a population study. This compilation of data is not intended for patients.For health issues, please consult a medical doctor.\nSee all disclaimers and complet dataset descriptions in the source webpage (link below).\nSource: \"Multi-Level causality relations of underlying of deaths with age, sex and country stratifications, Schicklin, C., https:\/\/doi.org\/10.34740\/kaggle\/dsv\/2161283\"\n"}}