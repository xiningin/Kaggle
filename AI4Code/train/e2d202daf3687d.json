{"cell_type":{"8ee143a8":"code","227a1d23":"code","767ed37d":"code","ac78cd79":"code","1c7e8e64":"code","8e69da18":"code","aaeed187":"code","ed94cb59":"code","242b00f1":"code","22071d75":"code","fbd163b6":"code","74d0134c":"code","e6ba08ce":"code","b56f09d3":"code","77ff45e0":"code","a00ed3e7":"code","401ed77e":"code","da1be9e7":"code","9cdc684c":"code","b60c8ff7":"code","8c163dd8":"code","24d28e89":"code","797b8de2":"code","f3356ce5":"code","38f6ec6a":"code","26b0548a":"markdown","fec9f427":"markdown","e41c242b":"markdown","1f4fbe49":"markdown","6322fc00":"markdown"},"source":{"8ee143a8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","227a1d23":"data = pd.read_csv('\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\ndata.head()","767ed37d":"data.info()","ac78cd79":"data.describe()","1c7e8e64":"print('No. Category of name:', len(data['name'].unique()), 'from total sample', data.shape[0])\nprint('\\n', data['name'].unique())","8e69da18":"data.isnull().sum().sort_values(ascending= False)","aaeed187":"data = data.drop(columns=['id', 'name', 'host_id', 'host_name', 'last_review'], axis= 1)\ndata.head()","ed94cb59":"data = data.fillna({\"reviews_per_month\" : 0})\ndata.isnull().sum().sort_values(ascending= False)","242b00f1":"import matplotlib.pyplot as plt\ndata.neighbourhood_group.value_counts().plot(kind=\"bar\")\nplt.title(\"Share of neighbourhood\")\nplt.xlabel(\"neighbourhood_group\")\nplt.ylabel(\"Count\")","22071d75":"data['neighbourhood_group'].value_counts().plot.pie(explode=[0,0.1,0,0,0], autopct='%1.1f%%',shadow=True)","fbd163b6":"import seaborn as sns\nplt.figure(figsize=(10,6))\nsns.countplot(x = 'room_type',hue = \"neighbourhood_group\",data = data)\nplt.title(\"Room types occupied by the neighbourhood_group\")\nplt.show()","74d0134c":"sns.barplot(data=data,x=\"neighbourhood_group\",y=\"price\")","e6ba08ce":"data['price'].describe()","b56f09d3":"sns.heatmap(data.corr(),\n            annot= True\n            ,cmap= \"coolwarm\")","77ff45e0":"sns.stripplot(data= data, x= 'room_type', y= 'price', jitter= True)\n\nplt.show()","a00ed3e7":"data1= data.sort_values(by=['number_of_reviews'],ascending=False).head(100)\ndata1.head()","401ed77e":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndata['neighbourhood_group'] = le.fit_transform(data['neighbourhood_group'])\ndata['neighbourhood_group'].unique()","da1be9e7":"data['neighbourhood'] = le.fit_transform(data['neighbourhood'])\ndata['room_type'] = le.fit_transform(data['room_type'])\ndata","9cdc684c":"X= data.drop('price',axis=1)\ny= data['price']","b60c8ff7":"from sklearn.preprocessing import StandardScaler\nSC = StandardScaler()\nX = SC.fit_transform(X)","8c163dd8":"import statsmodels.api as sm\nfrom sklearn.model_selection import train_test_split, KFold\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error,r2_score\nfrom sklearn import preprocessing\nfrom sklearn.feature_selection import RFE\n\nimport warnings \nwarnings.filterwarnings('ignore')","24d28e89":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)","797b8de2":"lr= LinearRegression()\nlr.fit(X_train, y_train)\ny_pred= lr.predict(X_test)\nr2_score(y_test, y_pred)","f3356ce5":"rfe = RFE(lr, 7)\n\n#Transforming data using RFE\nX_rfe = rfe.fit_transform(X, y)  \n\n#Fitting the data to model\nlr.fit(X_rfe, y)\n\nprint(rfe.support_)\nprint(rfe.ranking_)","38f6ec6a":"xc=sm.add_constant(X)\nlm=sm.OLS(y,xc).fit()\nlm.summary()","26b0548a":"#### delete id, name, host_id, host_name","fec9f427":"## Displaying rooms type with maximum reviews","e41c242b":"# Exploratory Data Analysis","1f4fbe49":"### We are using Superwise linear regression model(SLR) and the accuracy we got is 12.47%.\n### Our model is predicting that how price is varying in newyork on different features.","6322fc00":"# Missing data \n### 1- NAN  \n### 2- unnecessary features "}}