{"cell_type":{"56b3bd3e":"code","b4e0eb12":"code","6ee1fcf1":"code","5e8c7f01":"code","9cd9a1fb":"code","af27f6ef":"code","9f827527":"code","802f8849":"code","39fb5762":"code","ba8986c8":"code","455b73c3":"code","a2db2783":"code","59ce9424":"markdown","8c174779":"markdown","f3f1458b":"markdown"},"source":{"56b3bd3e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b4e0eb12":"test = pd.read_csv('\/kaggle\/input\/student-shopee-code-league-sentiment-analysis\/test.csv')\ntrain = pd.read_csv('\/kaggle\/input\/student-shopee-code-league-sentiment-analysis\/train.csv')\nsub = pd.read_csv(\"\/kaggle\/input\/student-shopee-code-league-sentiment-analysis\/sampleSubmission.csv\")","6ee1fcf1":"train","5e8c7f01":"(train['rating'].value_counts()\/len(train)).sort_index()","9cd9a1fb":"test.head()","af27f6ef":"test.tail()","9f827527":"proportions = (train['rating'].value_counts()\/len(train)).sort_index()","802f8849":"ans_1 = [1]* int(round(proportions[1]*len(test)))\nans_2 = [2]* int(round(proportions[2]*len(test)))\nans_3 = [3]* int(round(proportions[3]*len(test)))\nans_4 = [4]* int(round(proportions[4]*len(test)))\nans_5 = [5]* int(round(proportions[5]*len(test)))","39fb5762":"pred = ans_1+ans_2+ans_3+ans_4+ans_5","ba8986c8":"test['rating'] = pred","455b73c3":"test","a2db2783":"test[['review_id', 'rating']].to_csv(\"submission.csv\", index=False)","59ce9424":"## Wow the train set is sorted by rating","8c174779":"## Hypothesis: test set is also sorted","f3f1458b":"## Create rating prediction similar to train set proportion"}}