{"cell_type":{"08816243":"code","49f6a13e":"code","1add16ae":"code","d786f491":"code","987a6f95":"code","5a278b2d":"code","06f24725":"code","d010f71a":"code","5041548b":"code","c5810a6f":"code","b9d01e3c":"code","8eca1a9d":"code","a6eaea5d":"markdown","9049dad2":"markdown","312434d7":"markdown","54be3eb9":"markdown","18b832b0":"markdown","9054169d":"markdown"},"source":{"08816243":"import pandas as pd\nimport matplotlib.pyplot as plt \nimport geopandas as gpd\nimport mapclassify\nimport PIL\n%matplotlib inline","49f6a13e":"confirmed_file = '..\/input\/covid19-case-worldwide-cases-till-30th-dec20\/time_series_covid19_confirmed_global.csv'\ndeaths_file = '..\/input\/covid19-case-worldwide-cases-till-30th-dec20\/time_series_covid19_deaths_global.csv'\nrecoverd_file = '..\/input\/covid19-case-worldwide-cases-till-30th-dec20\/time_series_covid19_recovered_global.csv'","1add16ae":"confirmed = pd.read_csv(confirmed_file)\n#print(confirmed.shape)\ndeaths = pd.read_csv(deaths_file)\n#print(deaths.shape)\nrecoverd = pd.read_csv(recoverd_file)\n#print(recoverd.shape)\n\nconfirmed = confirmed.drop(['Province\/State','Lat','Long'],axis=1 )\ndeaths = deaths.drop(['Province\/State','Lat','Long'],axis=1 )\nrecoverd = recoverd.drop(['Province\/State','Lat','Long'],axis=1 )\n\nconfirmed = confirmed.groupby(confirmed['Country\/Region']).aggregate('sum')\ndeaths = deaths.groupby(deaths['Country\/Region']).aggregate('sum')\nrecoverd = recoverd.groupby(recoverd['Country\/Region']).aggregate('sum')\n\nconfirmed = confirmed.T\ndeaths = deaths.T\nrecoverd = recoverd.T \n\nnew_cases = confirmed.copy()\n\nfor day in range(1,len(confirmed)):\n    new_cases.iloc[day]= confirmed.iloc[day] - confirmed.iloc[day - 1]\n\ngrowth_rate = confirmed.copy()\n\nfor day in range(1,len(confirmed)):\n    growth_rate.iloc[day] = (new_cases.iloc[day] \/ confirmed.iloc[day - 1]) * 100   \n\nactive_cases = confirmed.copy()\n\nfor day in range(0,len(confirmed)):\n    active_cases.iloc[day] = confirmed.iloc[day] - deaths.iloc[day] - recoverd.iloc[day]\n\noverall_growth_rate = confirmed.copy()\n\nfor day in range(1,len(confirmed)):\n    overall_growth_rate.iloc[day] = ((active_cases.iloc[day] - active_cases.iloc[day - 1]) \/  active_cases.iloc[day - 1] ) * 100 \n\ndeath_rate = confirmed.copy()\n\nfor day in range(0,len(confirmed)):\n    death_rate.iloc[day] = (deaths.iloc[day] \/ confirmed.iloc[day]) * 100\n\nhospitalization_rate_estimate = 0.05\nhospitalization_needed = confirmed.copy()\n\nfor day in range(0,len(confirmed)):\n    hospitalization_needed.iloc[day] = active_cases.iloc[day] * hospitalization_rate_estimate\n","d786f491":"countries = [\"India\",\"China\",\"Russia\",\"US\",\"Italy\",\"Brazil\"]","987a6f95":"data = pd.read_csv(confirmed_file)\ndata = data.groupby('Country\/Region').sum()\ndata = data.drop(columns = ['Lat','Long'])","5a278b2d":"data_transposed = data.T\ndata_transposed.plot(y=[\"India\",\"China\",\"Russia\",\"US\",\"Brazil\"], use_index = True, figsize = (10,10));","06f24725":"for country in countries:\n    ax = plt.subplot()\n    ax.set_facecolor('black')\n    ax.figure.set_facecolor('#969291')\n    ax.tick_params(axis='x',color='black')\n    ax.tick_params(axis='y',color='black')\n    ax.set_title(f'Covid-19 - Overall growth rate in {country}', color='white')\n    overall_growth_rate[country][312:344:].plot.bar()\n    plt.show()","d010f71a":"world = gpd.read_file(r\"..\/input\/shpfile\/World_Map.shp\")\nworld.plot(figsize=(10,10));","5041548b":"world.replace('Viet Nam', 'Vietnam', inplace = True)\nworld.replace('Brunei Darussalam', 'Brunei', inplace = True)\nworld.replace('Cape Verde', 'Cabo Verde', inplace = True)\nworld.replace('Democratic Republic of the Congo','Congo (Kinshasa)', inplace = True)\nworld.replace('Congo', 'Congo (Brazzaville)', inplace = True)\nworld.replace('Czech Republic', 'Czechia', inplace = True)\nworld.replace('Switzerland', 'Eswatini', inplace = True)\nworld.replace('Iran (Islamic Republic of)', 'Iran', inplace = True)\nworld.replace('Korea, Republic of', 'Korea, South', inplace = True)\nworld.replace('Lao People\\'s Democratic Republic', 'Laos', inplace = True)\nworld.replace('Libyan Arab Jamahiriya', 'Libya', inplace = True)\nworld.replace('Republic of Moldova', 'Moldova', inplace = True)\nworld.replace('The former Yugoslav Republic of Macedonia', 'North Macedonia', inplace = True)\nworld.replace('Syrian Arab Republic', 'Syria', inplace = True)\nworld.replace('Taiwan', 'Taiwan*', inplace = True)\nworld.replace('United Republic of Tanzania', 'Tanzania', inplace = True)\nworld.replace('United States', 'US', inplace = True)\nworld.replace('Palestinian', 'West Bank of Gaza', inplace = True)","c5810a6f":"for index,row in data.iterrows():\n    if index not in world['NAME'].to_list():\n        print(index + \": is not in list\")\n    else:\n        pass","b9d01e3c":"merge = world.join(data, on = 'NAME', how = 'right')","8eca1a9d":"ax = merge.plot(column = '11\/14\/20',\n                cmap = 'OrRd',\n                figsize = (15,15),\n                legend = True,\n                scheme = 'user_defined',\n                classification_kwds = {'bins': [500, 1000, 10000, 50000, 100000, 500000, 1000000, 5000000]},\n                edgecolor = 'black',\n                linewidth = 0.4)\n\nax.set_title('Total Confirmed Covid-19 Cases: ',fontdict = {'fontsize':20}, pad = 12.5)\nax.set_axis_off()\nax.get_legend().set_bbox_to_anchor((0.25,0.2))","a6eaea5d":"# Novel Corona Virus Analysis ","9049dad2":"# Covid case live links from [JHU](http:\/\/\/\/www.jhu.edu\/)","312434d7":"# World Map..","54be3eb9":"### Overall Growth Cases..","18b832b0":"### Total Cases..","9054169d":"# EDA"}}