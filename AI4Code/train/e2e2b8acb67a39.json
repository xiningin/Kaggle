{"cell_type":{"99474815":"code","0f29a850":"code","cc3f1887":"code","f7a945f3":"code","57f22580":"code","70f16a57":"code","7d9f57fc":"code","523206e1":"code","75d3735e":"code","8a9711ff":"code","fdaee9dc":"code","1f580077":"code","8122acee":"code","ea7d652e":"code","ed2f509c":"code","7b9984c8":"code","6c5764ee":"code","bf71a063":"code","ad3196d1":"markdown","efdcdc82":"markdown"},"source":{"99474815":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Import Libraries for Visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Import Keras specific library.\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0f29a850":"# Load train and test data into Dataframes\ntrain = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')","cc3f1887":"# Check the first two elements of training set.\nprint(\"Check the first two rows of Train DataFrame: \")\ntrain.head(2)","f7a945f3":"# Check the first five elements of testing set \nprint(\"Check the first two rows of Test DataFrame: \")\ntest.head(2)","57f22580":"# Check the dimension of training and testing data\nprint(\"Shape of training data:\", train.shape)\nprint(\"Shape of testing data:\", test.shape)","70f16a57":"# Seperate the X and y part in train data.\nX_train = train.drop(labels = [\"label\"],axis = 1)\ny_train = train[\"label\"]","7d9f57fc":"X_train.head()","523206e1":"y_train.head()","75d3735e":"X_train.shape","8a9711ff":"# Check the distribution of each class in train dataset\ny_train.value_counts()","fdaee9dc":"# Scale images to the [0, 1] range\nX_train = X_train.astype(\"float32\") \/ 255\ntest = test.astype(\"float32\") \/ 255","1f580077":"X_train = X_train.values.reshape(-1,28,28,1)\ntest = test.values.reshape(-1,28,28,1)\nprint(\"X_train Shape: \",X_train.shape)\nprint(\"Test Shape: \",test.shape)","8122acee":"# convert class vectors to binary class matrices\n# # Model \/ data parameters\nnum_classes = 10\ninput_shape = (28, 28, 1)\ny_train = keras.utils.to_categorical(y_train, num_classes)","ea7d652e":"model = keras.Sequential(\n    [\n        keras.Input(shape=input_shape),\n        layers.Conv2D(32, kernel_size=(3, 3), activation=\"relu\"),\n        layers.MaxPooling2D(pool_size=(2, 2)),\n        layers.Conv2D(64, kernel_size=(3, 3), activation=\"relu\"),\n        layers.MaxPooling2D(pool_size=(2, 2)),\n        layers.Flatten(),\n        layers.Dropout(0.5),\n        layers.Dense(num_classes, activation=\"softmax\"),\n    ]\n)\n\nmodel.summary()","ed2f509c":"batch_size = 128\nepochs = 15\n\nmodel.compile(loss=\"categorical_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])\n\nmodel.fit(X_train, y_train, batch_size=batch_size, epochs=epochs, validation_split=0.1)","7b9984c8":"#Predicting Test data\nprediction = model.predict(test)\nprediction = np.array([np.argmax(x) for x in prediction])","6c5764ee":"prediction[0]","bf71a063":"submission_file = pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')\nsubmission_file.Label = prediction\nsubmission_file.to_csv('submission.csv', index=False)","ad3196d1":"Model Building\n1. Using Keras Sequential network.","efdcdc82":"Train the model"}}