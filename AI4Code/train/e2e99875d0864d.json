{"cell_type":{"50d35a02":"code","a9617882":"code","11bc886f":"code","c370175b":"code","a6e555a5":"code","53511dc9":"code","cc96b520":"code","a82ba76c":"code","77c08945":"code","b8bf204e":"code","78b181c6":"code","ff693713":"code","e3373417":"code","703ebbac":"code","8d568ff2":"code","938dc7f4":"code","039be179":"code","d2731066":"code","4d90ffdc":"code","6e187e4a":"code","ab417c32":"code","52587608":"code","9a61aa2f":"code","ee4a60e7":"code","2e2232e2":"code","5adfcd7d":"code","cc1528b8":"code","5ee5ec69":"code","810470d4":"code","d4bea598":"code","b5a8f0d0":"code","a9e66032":"markdown","9515800c":"markdown","8722a5dd":"markdown","371e4399":"markdown","aebc5ac9":"markdown","266018c3":"markdown"},"source":{"50d35a02":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a9617882":"from fbprophet import Prophet\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n%config InlineBackend.figure_format = 'retina'\nplt.rcParams[\"figure.figsize\"] = (20, 8)","11bc886f":"df = pd.read_csv('https:\/\/raw.githubusercontent.com\/facebook\/prophet\/master\/examples\/example_wp_log_peyton_manning.csv')\ndf.head()","c370175b":"df.plot()\nplt.show()","a6e555a5":"df.shape","53511dc9":"df.info()","cc96b520":"# for prophet we must have columns (ds, y) in this form\ndf['ds'] = pd.to_datetime(df['ds'])","a82ba76c":"df.info()","77c08945":"df.head()","b8bf204e":"train,test = df[:int(len(df)*0.8)],df[int(len(df)*0.8):]","78b181c6":"print(len(train),len(test))","ff693713":"test.tail()","e3373417":"model = Prophet()\nmodel.fit(train)","703ebbac":"future_dates = model.make_future_dataframe(periods = 581)\n                                          \n                                          \n","8d568ff2":"future_dates.tail()","938dc7f4":"prediction = model.predict(future_dates)\nprediction","039be179":"prediction.shape","d2731066":"prediction.head()","4d90ffdc":"prediction.shape","6e187e4a":"df.shape","ab417c32":"df['predicted'] = prediction['yhat']","52587608":"df","9a61aa2f":"df[['y','predicted']].plot()","ee4a60e7":"model.component_modes","2e2232e2":"model.plot(prediction)","5adfcd7d":"df.tail(581)[['y','predicted']].plot()","cc1528b8":"model.plot_components(prediction)","5ee5ec69":"train.shape","810470d4":"#### cross-validation\nfrom fbprophet.diagnostics import cross_validation\ndf_cv = cross_validation(model, initial = '700 days', period = '180 days', horizon = '365 days')\ndf_cv","d4bea598":"from fbprophet.diagnostics import performance_metrics\ndf_p = performance_metrics(df_cv)\ndf_p.head()","b5a8f0d0":"from fbprophet.plot import plot_cross_validation_metric\nfig = plot_cross_validation_metric(df_cv, metric= 'rmse')\n","a9e66032":"### Cross Validation\n* For measuring forecast error by comparing the predicted values with the actual values\n* initial: the size of the initial training period \n* period: the spacing between cutoff dates \n* horizon: the forecast horizon ( ds minus cutoff)\n* by default: the inital training period is set to the three times the horizon, and cutoffs are made every half a horizon","9515800c":"* #### We can see that this library is very well followed the test(unseen data ) ","8722a5dd":"using crossvalidation we can see how model performs and we can see the error it does when we increase forecast steps ","371e4399":"#### splitting the data to see how accurate is the fbprophet library is ","aebc5ac9":"### forecasting using FBprophet is so easy lets see","266018c3":"#### dataframe must have column name in the form of (ds, y)"}}