{"cell_type":{"b3390375":"code","b6448fdf":"code","1173d625":"code","1822ad40":"code","c7b23a7f":"code","4aeb0f43":"code","293c992d":"code","cbd20344":"code","1513de30":"code","3bc630d5":"code","032dcb64":"code","0fa1f2c9":"code","30204fce":"code","6a759aee":"code","8324daba":"code","0bf56090":"code","6c7b74c1":"code","5f9bc66e":"code","86cef92c":"code","25dafda0":"code","6cab4e9c":"code","8f80fa89":"code","277e3a56":"code","c3f54c32":"code","ed5312d0":"code","daa4e0d8":"code","515a12e7":"code","32b57bdf":"code","9b896a4b":"code","e52bd9e0":"code","b8863707":"code","63b68d6f":"code","12c55a3d":"code","7f0787fa":"code","ac6f7745":"code","1e2566c3":"code","67bdafec":"code","fe6a6aa8":"code","1a3b9b84":"code","b9bb0a03":"code","0ea01cc2":"code","ffb148e5":"code","4af10847":"code","8ec439bf":"code","df8b9b9b":"code","775114b6":"code","65b1ebce":"code","84417711":"code","db2a962f":"code","55241dcf":"code","9a2d2878":"markdown","49129cf2":"markdown","aac3f12d":"markdown","cd7ca1ab":"markdown","be56760b":"markdown","cd62476d":"markdown","ef85b926":"markdown","b24513c1":"markdown","3aecbd78":"markdown","c7ef16fb":"markdown","268455fc":"markdown","0444cfe0":"markdown","c64f0f6b":"markdown","80e89a30":"markdown","6338314e":"markdown","f5a7a014":"markdown","7d68d2e3":"markdown","3679c558":"markdown","ba764735":"markdown","5a41909d":"markdown","f3f888d2":"markdown","49e76fe4":"markdown","72b0bb54":"markdown","b46bcf5a":"markdown","e7c4ddf9":"markdown","efca09b3":"markdown","a19df984":"markdown","7a052b97":"markdown","494221b7":"markdown","43662755":"markdown","42fcdd65":"markdown","1f032ac7":"markdown","591a14c1":"markdown","7a42e09e":"markdown","76238b5d":"markdown"},"source":{"b3390375":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","b6448fdf":"pa = pd.read_csv(\"..\/input\/Police_activity.csv\")\n","1173d625":"pa.head(2)","1822ad40":"print(pa.columns)\nprint(pa.columns.size) # or print(pa.shape[1])","c7b23a7f":"print(pa.index)\nprint(pa.shape)","4aeb0f43":"pa.isnull().sum()","293c992d":"for col in pa.columns:\n    if pa[col].isnull().sum() > 50:\n        pa.drop(col,axis=\"columns\",inplace=True)","cbd20344":"pa.isnull().sum() # small missing values, we are going to replace with mean,median or mode based on need","1513de30":"pa.head(2)","3bc630d5":"np.array([pa.location_raw != pa.district]).sum() # checking if location_raw is exactly same as district. if sum = 0 then same","032dcb64":"pa.drop([\"state\",\"location_raw\"],axis=1,inplace=True)","0fa1f2c9":"pa.head(2)","30204fce":"pa.isnull().sum()","6a759aee":"for col in pa.columns:\n    if pa[col].isnull().sum():\n        print(\"Data type of %s column is %s\"%(col,pa[col].dtype))","8324daba":"pa.dropna(subset=[\"stop_date\",\"stop_time\"],inplace=True)","0bf56090":"pa.isnull().sum()","6c7b74c1":"pa.head(2)","5f9bc66e":"pa[\"start_stop_time\"] = pa.stop_date+\" \"+pa.stop_time","86cef92c":"pa.head(2)","25dafda0":"pa.start_stop_time.dtype","6cab4e9c":"pa.start_stop_time = pd.to_datetime(pa.start_stop_time,infer_datetime_format=True)","8f80fa89":"pa.start_stop_time.dtype","277e3a56":"pa.start_stop_time.head(5) # We can see that dtype is converted as pandas `datetime` dtype","c3f54c32":"pa.head(2)","ed5312d0":"plt.figure(figsize=(16,4))\npa.start_stop_time.dt.hour.value_counts().plot(kind=\"bar\",color=\"r\")\nplt.xlabel(\"Hour\")\nplt.ylabel(\"Hourly_Count\")\nplt.title(\"Hourly_Count_Details\")\nplt.show()","daa4e0d8":"plt.figure(figsize=(16,4))\nsns.distplot(pa.start_stop_time.dt.hour)\nplt.xlabel(\"Hour\")\nplt.ylabel(\"Hourly_freq\")\nplt.title(\"Hourly_Count_Details_Histogram\")\nplt.show()","515a12e7":"plt.figure(figsize=(16,4))\npa.start_stop_time.dt.year.value_counts().plot(kind=\"bar\",color=\"g\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Yearly_Count\")\nplt.title(\"Yearly_Count_Details\")\nplt.show()","32b57bdf":"plt.figure(figsize=(16,4))\nsns.distplot(pa.start_stop_time.dt.year)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Yearly_Count\")\nplt.title(\"Yearly_Count_Details_Histogram\")\nplt.show()","9b896a4b":"plt.figure(figsize=(16,4))\npa.start_stop_time.dt.month.value_counts().plot(kind=\"bar\",color=\"c\")\nplt.xlabel(\"Month_Number\")\nplt.ylabel(\"Monthly_Count\")\nplt.title(\"Monthly_Count_Details\")\nplt.show()","e52bd9e0":"plt.figure(figsize=(16,4))\nsns.distplot(pa.start_stop_time.dt.month)\nplt.xlabel(\"Month\")\nplt.ylabel(\"Monthly_Count\")\nplt.title(\"Monthly_Count_Details_Histogram\")\nplt.show()","b8863707":"plt.figure(figsize=(16,4))\nsns.distplot(pa.start_stop_time.dt.day)\nplt.xlabel(\"Daily\")\nplt.ylabel(\"Daily_Count\")\nplt.title(\"Dailly_Count_Details_Histogram\")\nplt.show()","63b68d6f":"pa.head(2)","12c55a3d":"np.log(pa.drugs_related_stop.value_counts().values)","7f0787fa":"pa.drugs_related_stop.value_counts().plot(kind=\"bar\")\nplt.xlabel(\"True\/False\")\nplt.ylabel(\"True\/False_Count\")\nplt.title(\"drugs_related_True\/False_Count_Details\")\nplt.show()","ac6f7745":"np.log(pa.drugs_related_stop.value_counts()).plot(kind=\"bar\")\nplt.xlabel(\"True\/False\")\nplt.ylabel(\"True\/False_Count\")\nplt.title(\"Log: drugs_related_True\/False_Count_Details\")\nplt.show()","1e2566c3":"pa.head(2)","67bdafec":"pa[\"year\"] = pa.start_stop_time.dt.year\npa[\"month\"] = pa.start_stop_time.dt.month\n","fe6a6aa8":"pa.head(2)","1a3b9b84":"grp1 = pa.groupby([\"year\"])","b9bb0a03":"plt.figure(figsize=(16,4))\nfor key in grp1.groups:\n    true_val = grp1.get_group(key).search_conducted.value_counts().loc[True]\n    false_val = grp1.get_group(key).search_conducted.value_counts().loc[False]\n    plt.bar(str(key),false_val,color=\"#934666\",width=.5)\n    plt.text(str(key),false_val-11000,false_val,rotation=90)\n    plt.bar(str(key),true_val,bottom=false_val,color=\"#930006\",width=.5)\n    plt.text(str(key),true_val+false_val+500,true_val)\nplt.xticks(rotation=90)\nplt.legend([\"False\",\"True\"])\nplt.xlabel(\"Year\")\nplt.ylabel(\"Yearly_Count\")\nplt.title(\"Grouping With Yearly search_conducted Count_Details\")\nplt.show()\n","0ea01cc2":"pa.head(2)","ffb148e5":"plt.figure(figsize=(16,4))\nfor key in grp1.groups:\n    true_val = grp1.get_group(key).contraband_found.value_counts().loc[True]\n    false_val = grp1.get_group(key).contraband_found.value_counts().loc[False]\n    plt.bar(str(key),false_val,color=\"#934666\",width=.5)\n    plt.text(str(key),false_val-11000,false_val,rotation=90)\n    plt.bar(str(key),true_val,bottom=false_val,color=\"k\",width=.5)\n    plt.text(str(key),true_val+false_val+500,true_val)\nplt.xticks(rotation=90)\nplt.legend([\"False\",\"True\"])\nplt.xlabel(\"Year\")\nplt.ylabel(\"Yearly_Count\")\nplt.title(\"Grouping With Yearly Contraband_found Count_Details\")\n\nplt.show()","4af10847":"plt.figure(figsize=(16,4))\nfor key in grp1.groups:\n    true_val = grp1.get_group(key).drugs_related_stop.value_counts().loc[True]\n    false_val = grp1.get_group(key).drugs_related_stop.value_counts().loc[False]\n    plt.bar(str(key),false_val,color=\"#934666\",width=.5)\n    plt.text(str(key),false_val-11000,false_val,rotation=90)\n    plt.bar(str(key),true_val,bottom=false_val,color=\"b\",width=.5)\n    plt.text(str(key),true_val+false_val+500,true_val)\nplt.xticks(rotation=90)\nplt.legend([\"False\",\"True\"])\nplt.xlabel(\"Year\")\nplt.ylabel(\"Yearly_Count\")\nplt.title(\"Grouping With Yearly frugs_related Count_Details\")\nplt.show()","8ec439bf":"pa.head(2)","df8b9b9b":"grp2 = pa.groupby([\"month\"])","775114b6":"plt.figure(figsize=(16,4))\nfor key in grp2.groups:\n    true_val = grp2.get_group(key).search_conducted.value_counts().loc[True]\n    false_val = grp2.get_group(key).search_conducted.value_counts().loc[False]\n    plt.bar(str(key),false_val,color=\"#934666\",width=.5)\n    plt.text(str(key),false_val-11000,false_val,rotation=90)\n    plt.bar(str(key),true_val,bottom=false_val,color=\"#930006\",width=.5)\n    plt.text(str(key),true_val+false_val+500,true_val)\nplt.xticks(rotation=90)\nplt.legend([\"False\",\"True\"])\nplt.xlabel(\"Month\")\nplt.ylabel(\"Monthly_Count\")\nplt.title(\"Grouping With Monthly search_conducted Count_Details\")\nplt.show()","65b1ebce":"plt.figure(figsize=(16,4))\nfor key in grp2.groups:\n    true_val = grp2.get_group(key).contraband_found.value_counts().loc[True]\n    false_val = grp2.get_group(key).contraband_found.value_counts().loc[False]\n    plt.bar(str(key),false_val,color=\"m\",width=.5)\n    plt.text(str(key),false_val-11000,false_val,rotation=90)\n    plt.bar(str(key),true_val,bottom=false_val,color=\"k\",width=.5)\n    plt.text(str(key),true_val+false_val+500,true_val)\nplt.xticks(rotation=90)\nplt.legend([\"False\",\"True\"])\nplt.xlabel(\"Month\")\nplt.ylabel(\"Monthly_Count\")\nplt.title(\"Grouping With Monthly contraband_found Count_Details\")\nplt.show()","84417711":"plt.figure(figsize=(16,4))\nfor key in grp2.groups:\n    true_val = grp2.get_group(key).drugs_related_stop.value_counts().loc[True]\n    false_val = grp2.get_group(key).drugs_related_stop.value_counts().loc[False]\n    plt.bar(str(key),false_val,color=\"c\",width=.5)\n    plt.text(str(key),false_val-11000,false_val,rotation=90)\n    plt.bar(str(key),true_val,bottom=false_val,color=\"b\",width=.5)\n    plt.text(str(key),true_val+false_val+500,true_val)\nplt.xticks(rotation=90)\nplt.legend([\"False\",\"True\"])\nplt.xlabel(\"Month\")\nplt.ylabel(\"Monthly_Count\")\nplt.title(\"Grouping With Monthly drugs_related_stop Count_Details\")\nplt.show()","db2a962f":"pa.head(2)","55241dcf":"plt.figure(figsize=(16,4))\ndata_to_display = 5000\nsns.scatterplot(pa.stop_date[:data_to_display],pa.search_conducted[:data_to_display],\n                hue=pa.district[:data_to_display],\n                alpha=.1,\n                s=20*pa.start_stop_time.dt.hour[:data_to_display]\n               )\nplt.xticks(pa.stop_date[:data_to_display:2],rotation=90)\nplt.xlabel(\"Date\")\nplt.ylabel(\"Daily_Search_Conducted\")\nplt.title(\"Scatter plot Date Vs search Conducted Vs District Vs Hours\")\nplt.show()","9a2d2878":"#### Column details","49129cf2":"###### year wise search_conducted","aac3f12d":"#### Frequently stopped YEAR details using histogram plot","cd7ca1ab":"#### drop those columns which is having more than 50 missing values","be56760b":"#### Verify number of NULL values","cd62476d":"#### Check data type of those missing values columns","ef85b926":"#### It seems oll the missing values from other columns (police department as well as search_conducted ) were falling under same stop_date and stop_time, that is what is shown in next output, now no more missing values in any of the considered column","b24513c1":"#### Drop those colums which is not required for analysis\n- State :: only one unique value, hence drop\n- location_raw and district are same so drop either of them\n","3aecbd78":"#### Since its not a good idea to assume any stop_date and stop_time, hence we will drop those rows where missing values are there for those columns","c7ef16fb":"#### Scatter plot of Stop_date Vs Search _Conducted Vs Hourly_Stop","268455fc":"#### Now drop above mentioned columns","0444cfe0":"### Create group for month wise","c64f0f6b":"###### Lets see in which MONTH most of the time police stopped","80e89a30":"###### year wise contraband_found","6338314e":"###### year wise drugs_related_stop","f5a7a014":"# Now our data is completely ready for further analysis ","7d68d2e3":"###### month wise contraband_found","3679c558":"#### Total observations","ba764735":"###### Lets see which Count of drug related stops","5a41909d":"###### We will use `str` method to concatenate strings and create new columns","f3f888d2":"###### Total search conducted yearwise\/monthwise\n- Need to add year & month column so that grouping can be made","49e76fe4":"### In our data, we have start and stop date\/time, that can be used as index of the dataframe, lets see how we can use those columns as index. To do this we need to merge them and create standard time format for analysis","72b0bb54":"#### Frequently stopped MONTH details using histogram plot","b46bcf5a":"###### month wise search_conducted","e7c4ddf9":"##### Log representation, to cut short big values","efca09b3":"#### Few columns have very less missing values, so we will fill those missing values based on there data type","a19df984":"#### Lets see in which HOUR most of the time police stopped","7a052b97":"#### Frequently stopped timing HOUR details using histogram plot","494221b7":"###### Convert pa.start_stop_time to time series data type","43662755":"###### month wise drugs_related_stop","42fcdd65":"#### Frequently stopped Day details using histogram plot","1f032ac7":"###### Lets see in which YEAR most of the time police stopped","591a14c1":"#### See number of NULL values","7a42e09e":"#### Glimpse of data","76238b5d":"### Create group for year wise"}}