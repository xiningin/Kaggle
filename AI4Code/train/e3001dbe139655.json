{"cell_type":{"8d3c9650":"code","3db2e11b":"code","9fb80868":"code","678ff892":"code","a1a22ae1":"code","2fef0de1":"code","1005fc56":"code","2ec64e67":"code","da453868":"code","d0f4268d":"code","33f09ee5":"code","f816fc30":"code","91b25033":"code","d8b26cbf":"code","1af8e7f3":"code","cd4b5c0c":"code","a3f33f70":"code","b83a7b35":"code","2c887a62":"code","bbef810d":"code","251530fb":"markdown"},"source":{"8d3c9650":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/updated-netflix-stock-price-all-time\/netflix.csv')\nnetflix.head()","3db2e11b":"netflix=netflix[['Date','Close']]\nnetflix.head()","9fb80868":"netflix.info()","678ff892":"!pip install pycaret-ts-alpha","a1a22ae1":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","2fef0de1":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","1005fc56":"netflix = netflix.asfreq('d')\nnetflix.index","2ec64e67":"netflix.head()","da453868":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","d0f4268d":"data=netflix.Close\ndata","33f09ee5":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","f816fc30":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","91b25033":"## Create a model manually\nmodel = exp.create_model(\"arima\")\nmodel","d8b26cbf":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","1af8e7f3":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","cd4b5c0c":"tuned_model = exp.tune_model(model,optimize = 'R2')\ntuned_model","a3f33f70":"exp.predict_model(tuned_model)","b83a7b35":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","2c887a62":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","bbef810d":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","251530fb":"# "}}