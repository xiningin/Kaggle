{"cell_type":{"2e565d93":"code","f55d1f41":"code","fb26d9bd":"code","d9e17c5a":"code","ae50f1f3":"code","933da910":"code","3cec0d95":"code","88a90884":"code","83b5ba3c":"code","e3da1bbe":"code","479e8a49":"code","f6afe717":"code","9da0096c":"code","5ad16a90":"code","81decd11":"code","0c7cb77e":"code","3bf449c7":"code","f0cf5670":"code","9e576275":"code","ffd757cc":"code","9f4efc91":"code","ed2125ec":"code","48e12d75":"code","da4d2b0b":"code","d2411d16":"code","352f81f6":"code","16bafeea":"code","3dc0c856":"code","505297da":"code","641a7992":"code","fc095d69":"code","03ff54da":"code","98c3376a":"code","e749b7a8":"code","e3360a5d":"code","b1619071":"code","e9c177b3":"code","37db2e79":"code","99d67e5d":"code","6719d284":"code","8e64920b":"code","fa090610":"code","23abe62b":"code","5cbfe3d7":"code","a58a7083":"code","378b749d":"code","e73c1e4e":"code","8466a116":"code","9ae5a118":"code","a60c31e5":"code","7a8bbc5b":"code","2a27925c":"markdown"},"source":{"2e565d93":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt \nfrom collections import Counter\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nfrom subprocess import check_output\nprint(check_output([\"ls\",\"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","f55d1f41":"# Read datas\nmedian_house_hold_in_come = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\nshare_race_city = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv', encoding=\"windows-1252\")\nkill = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","fb26d9bd":"percentage_people_below_poverty_level.head()","d9e17c5a":"percentage_people_below_poverty_level.info()","ae50f1f3":"percentage_people_below_poverty_level.poverty_rate.value_counts()","933da910":"percentage_people_below_poverty_level['Geographic Area'].unique()","3cec0d95":"percentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace=True)","88a90884":"percentage_people_below_poverty_level.poverty_rate=percentage_people_below_poverty_level.poverty_rate.astype(float)\narea_list = list(percentage_people_below_poverty_level['Geographic Area'].unique())\narea_poverty_ratio = []\nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_poverty_ratio':area_poverty_ratio})\nnew_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_poverty_ratio'])\nplt.xticks(rotation= 45)\nplt.xlabel('States')\nplt.ylabel('Poverty Rate')\nplt.title('Poverty Rate Given States')","83b5ba3c":"kill.head()","e3da1bbe":"kill.name.value_counts()","479e8a49":"separate=kill.name[kill.name!='TK Tk'].str.split()\na,b=zip(*separate)\nname_list=a+b","f6afe717":"name_count=Counter(name_list)\nmost_common_names=name_count.most_common(15)\nx,y=zip(*most_common_names)\nx,y=list(x),list(y)\n\nplt.figure(figsize=(15,10))\nax= sns.barplot(x=x, y=y,palette = sns.cubehelix_palette(len(x)))\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people')","9da0096c":"percent_over_25_completed_highSchool.head()","5ad16a90":"percent_over_25_completed_highSchool.info()","81decd11":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()","0c7cb77e":"percent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)","3bf449c7":"percent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)","f0cf5670":"area_list = list(percent_over_25_completed_highSchool['Geographic Area'].unique())\narea_highschool = []\nfor i in area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n\ndata = pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\nnew_index = (data['area_highschool_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data.reindex(new_index)\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation= 45)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")","9e576275":"share_race_city.head()","ffd757cc":"share_race_city.info()","9f4efc91":"share_race_city.share_white.value_counts()","ed2125ec":"share_race_city.replace(['(X)'],0.0,inplace = True)\nshare_race_city.replace(['-'],0.0,inplace = True)\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\narea_list = list(share_race_city['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\nfor i in area_list:\n    x = share_race_city[share_race_city['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black) \/ len(x))\n    share_native_american.append(sum(x.share_native_american) \/ len(x))\n    share_asian.append(sum(x.share_asian) \/ len(x))\n    share_hispanic.append(sum(x.share_hispanic) \/ len(x))\nf,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=share_white,y=area_list,color='green',alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='red',alpha = 0.6,label='Hispanic')\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")","48e12d75":"# high school graduation rate vs Poverty rate of each state\nsorted_data['area_poverty_ratio'] = sorted_data['area_poverty_ratio']\/max( sorted_data['area_poverty_ratio'])\nsorted_data2['area_highschool_ratio'] = sorted_data2['area_highschool_ratio']\/max( sorted_data2['area_highschool_ratio'])\ndata = pd.concat([sorted_data,sorted_data2['area_highschool_ratio']],axis=1)\ndata.sort_values('area_poverty_ratio',inplace=True)\n# visualize\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='area_list',y='area_poverty_ratio',data=data,color='lime',alpha=0.8)\nsns.pointplot(x='area_list',y='area_highschool_ratio',data=data,color='red',alpha=0.8)\nplt.text(40,0.6,'high school graduate ratio',color='red',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'poverty ratio',color='lime',fontsize = 18,style = 'italic')\nplt.xlabel('States',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('High School Graduate  VS  Poverty Rate',fontsize = 20,color='blue')\nplt.grid()","da4d2b0b":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# joint kernel density\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables\n# Show the joint distribution using kernel density estimation \ng = sns.jointplot(data.area_poverty_ratio, data.area_highschool_ratio, kind=\"scatter\", size=7)\nplt.savefig('graph.png')\nplt.show()","d2411d16":"# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n# Different usage of parameters but same plot with previous one\ng = sns.jointplot(\"area_poverty_ratio\", \"area_highschool_ratio\", data=data,size=5, ratio=3, color=\"r\")","352f81f6":"kill.race.head(15)","16bafeea":"kill.race.value_counts()","3dc0c856":"kill.race.dropna(inplace = True)\nlabels = kill.race.value_counts().index\ncolors = ['grey','blue','red','yellow','green','brown']\nexplode = [0,0,0,0,0,0]\nsizes = kill.race.value_counts().values\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Killed People According to Races',color = 'blue',fontsize = 15)","505297da":"data.head()","641a7992":"# lmplot \n# Show the results of a linear regression within each dataset\nsns.lmplot(x=\"area_poverty_ratio\", y=\"area_highschool_ratio\", data=data)\nplt.show()","fc095d69":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# cubehelix plot\nsns.kdeplot(data.area_poverty_ratio, data.area_highschool_ratio, shade=False, cut=3)\nplt.show()","03ff54da":"# Show each distribution with both violins and points\n# Use cubehelix to get a custom sequential palette\npal = sns.cubehelix_palette(2, rot=-.5, dark=.3)\nsns.violinplot(data=data, palette=pal, inner=\"points\")\nplt.show()","98c3376a":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\nf,ax = plt.subplots(figsize=(5, 5))\nsns.heatmap(data.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show()","e749b7a8":"kill.head()","e3360a5d":"kill.manner_of_death.unique()","b1619071":"# manner of death(olum sekli) : ates edilerek, ates edilerek ve sok tabancasiyla\n# gender cinsiyet\n# age: yas\n# Plot the orbital period with horizontal boxes\nsns.boxplot(x=\"gender\", y=\"age\", hue=\"manner_of_death\", data=kill, palette=\"PRGn\")\nplt.show()","e9c177b3":"# swarm plot\n# manner of death(olum sekli) : ates edilerek, ates edilerek ve sok tabancasiyla\n# gender cinsiyet\n# age: yas\nsns.swarmplot(x=\"gender\", y=\"age\",hue=\"manner_of_death\", data=kill)\nplt.show()","37db2e79":"# pair plot\nsns.pairplot(data)\nplt.show()","99d67e5d":"kill.gender.value_counts()","6719d284":"# kill properties\n# Manner of death\nsns.countplot(kill.gender)\n#sns.countplot(kill.manner_of_death)\nplt.title(\"gender\",color = 'blue',fontsize=15)","8e64920b":"kill.head()","fa090610":"# kill weapon\narmed = kill.armed.value_counts()\n#print(armed)\nplt.figure(figsize=(10,7))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\nplt.title('Kill weapon',color = 'blue',fontsize=15)","23abe62b":"# age of killed people\nabove25 =['above25' if i >= 25 else 'below25' for i in kill.age]\ndf = pd.DataFrame({'age':above25})\nsns.countplot(x=df.age)\nplt.ylabel('Number of Killed People')\nplt.title('Age of killed people',color = 'blue',fontsize=15)","5cbfe3d7":"# Race of killed people\nsns.countplot(data=kill, x='race')\nplt.title('Race of killed people',color = 'blue',fontsize=15)","a58a7083":"# Most dangerous cities\ncity = kill.city.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=45)\nplt.title('Most dangerous cities',color = 'blue',fontsize=15)","378b749d":"# most dangerous states\nstate = kill.state.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\nplt.title('Most dangerous state',color = 'blue',fontsize=15)","e73c1e4e":"# Having mental ilness or not for killed people\nsns.countplot(kill.signs_of_mental_illness)\nplt.xlabel('Mental illness')\nplt.ylabel('Number of Mental illness')\nplt.title('Having mental illness or not',color = 'blue', fontsize = 15)","8466a116":"# Threat types\nsns.countplot(kill.threat_level)\nplt.xlabel('Threat Types')\nplt.title('Threat types',color = 'blue', fontsize = 15)","9ae5a118":"sns.countplot(kill.flee)\nplt.xlabel('Flee Types')\nplt.title('Flee types',color = 'blue', fontsize = 15)","a60c31e5":"# Having body cameras or not for police\nsns.countplot(kill.body_camera)\nplt.xlabel('Having Body Cameras')\nplt.title('Having body cameras or not on Police',color = 'blue',fontsize = 15)","7a8bbc5b":"# Kill numbers from states in kill data\nsta = kill.state.value_counts().index[:10]\nsns.barplot(x=sta,y = kill.state.value_counts().values[:10])\nplt.title('Kill Numbers from States',color = 'blue',fontsize=15)","2a27925c":"1. 1-Read datas\n1. 2-Poverty rate of each state\n1. 3-Most common 15 Name or Surname of killed people\n1. 4-High school graduation rate of the population that is older than 25 in states\n1. 5-Percentage of state's population according to races that are black,white,native american, asian and hispanic\n1. 6-High school graduation rate vs Poverty rate of each state\n1. 7-Kill properties\n* *Manner of death\n* *Kill weapon\n* *Age of killed people\n* *Race of killed people\n* *Most dangerous cities\n* *Most dangerous states\n* *Having mental ilness or not for killed people\n* *Threat types\n* *Flee types\n* *Having body cameras or not for police\n1. 8-Race rates according to states in kill data\n1. 9-Kill numbers from states in kill data"}}