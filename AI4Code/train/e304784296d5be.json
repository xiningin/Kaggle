{"cell_type":{"7e398814":"code","55e2e050":"code","d3582a7f":"code","effa2fc5":"code","727a95fc":"code","3e753c6f":"code","8b5d178f":"code","0bede591":"code","288d632d":"code","64a380f6":"code","d79cb568":"code","f59dfdc4":"code","5a5e1683":"code","85cc922f":"code","cbb89869":"code","7c7197a4":"code","03fe1617":"code","333b2cb2":"code","fc192c08":"code","f8b300bf":"code","ae871961":"code","ecd5a3d3":"code","55d73191":"code","d92d0e89":"code","e565de2e":"code","e7430207":"code","89ce9d25":"code","2cfb8a9f":"code","d0f25544":"code","3796bcdf":"code","9d34c912":"code","d389198e":"code","d2b653c4":"code","86f1ae0b":"code","97e88d36":"markdown","0e44e207":"markdown"},"source":{"7e398814":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","55e2e050":"import pandas as pd\ndata = pd.read_csv(\"..\/input\/ufcdata\/data.csv\")\nraw_fighter_data = pd.read_csv(\"..\/input\/ufcdata\/raw_fighter_details.csv\")","d3582a7f":"data.head(5)","effa2fc5":"# Size of the original data\ndata.shape","727a95fc":"# Feature Names\nprint(\", \".join(data.columns))","3e753c6f":"# Data types of each feature\ndata.dtypes","8b5d178f":"data['Winner'].value_counts()","0bede591":"data.head()","288d632d":"# Replace Winner column with the winner of the fight\nwinners = []\nfor i in data.index:\n    \n    decision = data.loc[i, 'Winner']\n    \n    if decision == 'Draw':\n        winners.append(\"No Contest\")\n    else:\n        if decision == 'Red':\n            fighter_name = data.loc[i, 'R_fighter']\n\n        elif decision == 'Blue':\n            fighter_name = data.loc[i, 'B_fighter']\n        winners.append(fighter_name)\nprint(winners)","64a380f6":"data['Winner'] = winners","d79cb568":"# remove columns we won't be using\ncols = ['R_fighter', 'B_fighter', 'date', 'location', 'Winner', 'title_bout', 'weight_class','no_of_rounds', \n        'B_total_time_fought(seconds)',\n        'B_current_lose_streak', 'B_current_win_streak', 'B_longest_win_streak', 'B_losses', 'B_Height_cms', 'B_age',\n        'R_current_lose_streak', 'R_current_win_streak', 'R_longest_win_streak', 'R_losses', 'R_Height_cms', 'R_age',\n        'B_avg_BODY_att', 'B_avg_BODY_landed', 'B_avg_GROUND_att', 'B_avg_GROUND_landed'\n       ]\nnew_data = data[cols]\nnew_data.head(5)","f59dfdc4":"# missing values for the features\nvalues = pd.isnull(new_data).sum()\n\n# remove rows that are less than 5%\nindices = np.where((values[:] \/ 5144 < 0.05) & (values[:] \/ 5144 >0.00))\nrows = [indices]\nnew_data.dropna(how = 'any', inplace = True)\npd.isnull(new_data).sum()\n\nnew_data.shape","5a5e1683":"# How many fights per year\nnew_data.date = pd.to_datetime(new_data.date)\nnew_data['year'] = new_data['date'].dt.year\nnew_data.groupby(['year']).size()","85cc922f":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set_style(\"darkgrid\")\nplt.plot(new_data.groupby(['year']).size())\nplt.show()","cbb89869":"women_indices = (new_data['weight_class'] == \"Women's Strawweight\") | (new_data['weight_class'] == \"Women's Bantamweight\") | (new_data['weight_class'] == \"Women's Flyweight\") | (new_data['weight_class'] == \"Women's Featherweight\")\nwomen_data = new_data[women_indices]\nplt.plot(women_data.groupby(['year']).size())\nplt.title(\"Women Fights Per Year\")\nplt.show()","7c7197a4":"winners[2107]","03fe1617":"# Subset of data before USADA implementation \nbefore2015 = new_data['year'] < 2015\npre2015data = new_data[before2015]\npre2015data.tail(5)\n\n# Subset of data after USADA implementation\nafter2015 = new_data['year'] >= 2015\npost2015data = new_data[after2015]\npost2015data.tail(6)","333b2cb2":"# Find the average age pre 2015\navg_age_pre = []\nfor x in pre2015data.index:\n    age_of_fight = pre2015data['R_age'][x] + pre2015data['B_age'][x]\n    avg_age_pre.append(age_of_fight \/ 2)\n\n# Find the average age post 2015\navg_age_post = []\nfor x in post2015data.index:\n    age_of_fight = post2015data['R_age'][x] + post2015data['B_age'][x]\n    avg_age_post.append(age_of_fight \/ 2)\n","fc192c08":"plt.figure(figsize = (10,10))\n\nsns.distplot(avg_age_pre, bins = 10, label = 'pre 2015')\nsns.distplot(avg_age_post, bins = 10, label = 'post 2015')\nplt.legend()\nplt.title(\"Average Age\")","f8b300bf":"raw_fighter_data = pd.read_csv(\"..\/input\/ufcdata\/raw_fighter_details.csv\")\n\nraw_fighter_data['Weight'] = raw_fighter_data['Weight'].str.strip(' lbs.')\nraw_fighter_data['Weight'] = pd.to_numeric(raw_fighter_data['Weight'], errors='coerce')\n\nraw_fighter_data = raw_fighter_data.dropna(subset=['Weight'])\nraw_fighter_data['Weight'] = raw_fighter_data['Weight'].astype(int)\nraw_fighter_data.dtypes\n\nprint(raw_fighter_data['Weight'].mean())\n\nplt.xlim(90,350)\nsns.distplot(raw_fighter_data['Weight'], bins=30)\nplt.title(\"Distribution of Weight\")","ae871961":"# Graph for Weight Class pre USADA 2015\nplot = (pre2015data['weight_class'].value_counts().plot.pie(figsize = (10, 10), autopct='%1.1f', fontsize = 20, explode = (0.15, 0.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))\nplt.title(\"Distribution of amount of fights for weight classes before 2015\")\nplt.show(plot)\n\n# This shows that Welterweight & Lightweight make up the majority of fights ","ecd5a3d3":"# Graph for Weight Class post USADA 2015\nplot = (post2015data['weight_class'].value_counts().plot.pie(figsize = (10,10), autopct='%1.1f', fontsize = 20, explode = (0.15, 0.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))\nplt.title(\"Distribution of amount of fights for weight classes after 2015\")\nplt.show(plot)\n\n\n# Both before and after USADA implementations shows that Lightweight & Welterweight STILL make up majority of fights\n# However, all Women's weight classes have increased in the amount of fights since 2015","55d73191":"# Graph for pre 2015 USADA implementation Title Fights by weight class distributions\nchampspre2015 = (pre2015data['title_bout'] == False)\npre2015title = pre2015data[~champspre2015]\nplot = pre2015title['weight_class'].value_counts().plot.pie(figsize = (10,10), autopct = '%1.1f', fontsize = 20, explode = (0.15, 0.15, 0, 0, 0, 0, 0, 0, 0, 0))\nplt.title(\"Distribution of title fights for weight classes before 2015\")","d92d0e89":"# Graph for post 2015 Title Fights by weight class distributions\nchampspost2015 = (post2015data['title_bout'] == False)\npost2015title = post2015data[~champspost2015]\nplot = post2015title['weight_class'].value_counts().plot.pie(figsize = (10,10), autopct = '%1.1f', fontsize = 20, explode = (0.15, 0.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))\nplt.title(\"Distribution of title fights for weight classes after 2015\")","e565de2e":"# # using information from the all fights seeing how have Lightweight & Welterweight have changed post 2015 in longest win streaks, lose streaks, age\nLightWeight_indices = post2015data['weight_class'] == 'Lightweight'\nWelterWeight_indices = post2015data['weight_class'] == 'Welterweight'\n\nLW_data = post2015data[LightWeight_indices]\nWW_data = post2015data[WelterWeight_indices]\n\n\nLightWeight_indices = pre2015data['weight_class'] == 'Lightweight'\nWelterWeight_indices = pre2015data['weight_class'] == 'Welterweight'\n\nLW_pre2015data = pre2015data[LightWeight_indices]\nWW_pre2015data = pre2015data[WelterWeight_indices]\n","e7430207":"# Comparing Win Streaks for Red & Blue on the Lightweight class\nplt.figure(figsize=(10,5))\n\nsns.distplot(LW_data['R_longest_win_streak'].value_counts(), label = 'Lightweight post 2015 for Red Fighter');\nsns.distplot(LW_pre2015data['R_longest_win_streak'].value_counts(), label = 'Lightweight pre 2015 for Red Fighter');\n\nplt.title(\"Difference between pre and post 2015 win streaks for Red fighter \")","89ce9d25":"plt.figure(figsize=(10,5))\n\nsns.distplot(LW_data['B_longest_win_streak'].value_counts(), label = 'Lightweight post 2015 for Blue Fighter');\nsns.distplot(LW_pre2015data['B_longest_win_streak'].value_counts(), label = 'Lightweight pre 2015 for Blue Fighter');\n\nplt.title(\"Difference between pre and post 2015 win streaks for Blue fighter \")","2cfb8a9f":"# Comparing Win Streaks for Red & Blue on the Welterweight class\nplt.figure(figsize=(10,5))\n\nsns.distplot( WW_data['R_longest_win_streak'].value_counts(), label = 'Welterweight post 2015 for Red Fighter');\nsns.distplot( WW_pre2015data['R_longest_win_streak'].value_counts(), label = 'Welterweight pre 2015 for Red Fighter');\n\nplt.legend()","d0f25544":"plt.figure(figsize=(10,5))\n\nsns.distplot( WW_data['B_longest_win_streak'].value_counts(), label = 'Welterweight post 2015 for Blue Fighter');\nsns.distplot(WW_pre2015data['B_longest_win_streak'].value_counts(), label = 'Welterweight pre 2015 for Blue Fighter');\n\nplt.legend()","3796bcdf":"import re\nraw_fighter_data['Height'] = raw_fighter_data['Height'].astype(str)\nr = re.compile(r\"([0-9]+)' ([0-9]*\\.?[0-9]+)\\\"\")\ndef get_inches(el):\n    m = r.match(el)\n    if m == None:\n        return float('NaN')\n    else:\n        return int(m.group(1))*12 + float(m.group(2))\n \nraw_fighter_data['HeightInCm'] = raw_fighter_data['Height'].apply(lambda x:get_inches(x))\n \nprint(raw_fighter_data['HeightInCm'].mean())\nplt.xlim(55,100)\nsns.distplot(raw_fighter_data['HeightInCm'], bins=30)\nraw_fighter_data.head()","9d34c912":"pre2015data = pre2015data.dropna(subset=['B_avg_BODY_att'])\npost2015data = post2015data.dropna(subset=['B_avg_BODY_att'])\n\nplt.xlim(-5,40)\n\nsns.distplot(pre2015data['B_avg_BODY_att'], label='Pre 2015')\nsns.distplot(post2015data['B_avg_BODY_att'], label='Post 2015')\n\nplt.legend()\nplt.title('Number of body shots attempted, pre and post 2015')","d389198e":"pre2015data = pre2015data.dropna(subset=['B_avg_BODY_landed'])\npost2015data = post2015data.dropna(subset=['B_avg_BODY_landed'])\n\nplt.xlim(-5,25)\n\nsns.distplot(pre2015data['B_avg_BODY_landed'], label='Pre 2015')\nsns.distplot(post2015data['B_avg_BODY_landed'], label='Post 2015')\n\nplt.legend()\nplt.title('Number of body shots landed, pre and post 2015')","d2b653c4":"pre2015data = pre2015data.dropna(subset=['B_avg_GROUND_att'])\npost2015data = post2015data.dropna(subset=['B_avg_GROUND_att'])\n\nplt.xlim(-5,35)\n\nsns.distplot(pre2015data['B_avg_GROUND_att'], label='Pre 2015')\nsns.distplot(post2015data['B_avg_GROUND_att'], label='Post 2015')\n\nplt.legend()\nplt.title('Number of ground shots attempted, pre and post 2015')","86f1ae0b":"pre2015data = pre2015data.dropna(subset=['B_avg_GROUND_landed'])\npost2015data = post2015data.dropna(subset=['B_avg_GROUND_landed'])\n\nplt.xlim(-5,25)\n\nsns.distplot(pre2015data['B_avg_GROUND_landed'], label='Pre 2015')\nsns.distplot(post2015data['B_avg_GROUND_landed'], label='Post 2015')\n\nplt.legend()\nplt.title('Number of ground shots landed, pre and post 2015')","97e88d36":"# Andy Estevez & Jordan Roman: UFC Data from 1993 to 2019 Project","0e44e207":"### Change the winner column to the name of fighter"}}