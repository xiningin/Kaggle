{"cell_type":{"5512d9d5":"code","9c352b0a":"code","1bb9f840":"code","df1c9723":"code","c9aa3bd1":"code","07f88e2e":"code","531df6f5":"code","689ea62a":"code","8c0e0470":"code","c8fa43c6":"code","7ffc7104":"code","0e57d049":"code","a6017bd1":"code","092c5103":"code","d42f491a":"code","035abbfb":"code","501a6b7a":"code","5a3498b4":"code","0ecaeaf2":"code","08b41f93":"code","fa9c1bee":"code","747f99ac":"code","54a2400e":"code","c35ab9bb":"code","3fd994a2":"code","2f91267f":"code","7862ab32":"code","a3fabf6c":"code","9c9a4576":"code","f548a54d":"code","84e00d6e":"code","b673680e":"code","63c1fabf":"code","c346f0a8":"code","ea09dccf":"code","8099b7fb":"code","53982cfa":"code","82deceaa":"code","7bcbc3d7":"markdown","69dae354":"markdown","d8951659":"markdown","4ca0642f":"markdown","ff079ac5":"markdown"},"source":{"5512d9d5":"import numpy as np\nimport pandas as pd","9c352b0a":"events = pd.read_csv('..\/input\/store-sales-time-series-forecasting\/holidays_events.csv')\nevents.head()","1bb9f840":"oil = pd.read_csv('..\/input\/store-sales-time-series-forecasting\/oil.csv')\noil","df1c9723":"stores = pd.read_csv('..\/input\/store-sales-time-series-forecasting\/stores.csv')\nstores.head()","c9aa3bd1":"trans = pd.read_csv('..\/input\/store-sales-time-series-forecasting\/transactions.csv')\ntrans.head()","07f88e2e":"train = pd.read_csv('..\/input\/store-sales-time-series-forecasting\/train.csv')\ntrain.head()","531df6f5":"test = pd.read_csv('..\/input\/store-sales-time-series-forecasting\/test.csv')\ntest.head()","689ea62a":"print(train.shape)\n\ntrain_df = None\n\ntrain_df = train.merge(stores, how='left', left_on='store_nbr', right_on = 'store_nbr')\ntrain_df = train_df.merge(events, how='left', left_on='date', right_on = 'date')\ntrain_df = train_df.merge(trans, how='left', left_on=['date', 'store_nbr'], right_on = ['date', 'store_nbr'])\ntrain_df = train_df.merge(oil, how='left', left_on='date', right_on = 'date')\nprint(train_df.shape)","8c0e0470":"print(test.shape)\ntest_df = None\n\ntest_df = test.merge(stores, how='left', left_on='store_nbr', right_on = 'store_nbr')\ntest_df = test_df.merge(events, how='left', left_on='date', right_on = 'date')\ntest_df = test_df.merge(trans, how='left', left_on=['date', 'store_nbr'], right_on = ['date', 'store_nbr'])\ntest_df = test_df.merge(oil, how='left', left_on='date', right_on = 'date')\nprint(test_df.shape)","c8fa43c6":"train_df.isna().sum()","7ffc7104":"train_df['type_y'] = train_df['type_y'].fillna('Day')\ntrain_df['locale'] = train_df['locale'].fillna('National')\ntrain_df['locale_name'] = train_df['locale_name'].fillna('None')\ntrain_df['transferred'] = train_df['transferred'].fillna('False')\ntrain_df['transactions'] = train_df['transactions'].fillna(0)\ntrain_df['dcoilwtico'] = train_df['dcoilwtico'].fillna(0)\ntrain_df = train_df.drop(columns=['id', 'description', 'locale_name'], axis = 1)","0e57d049":"train_df.isna().sum()","a6017bd1":"test_df['type_y'] = test_df['type_y'].fillna('Day')\ntest_df['locale'] = test_df['locale'].fillna('National')\ntest_df['locale_name'] = test_df['locale_name'].fillna('None')\ntest_df['transferred'] = test_df['transferred'].fillna('False')\ntest_df['transactions'] = test_df['transactions'].fillna(0)\ntest_df['dcoilwtico'] = test_df['dcoilwtico'].fillna(0)\n\nsub=pd.DataFrame()\nsub['id'] = test_df['id']\ntest_df = test_df.drop(columns=['id', 'description', 'locale_name'], axis = 1)","092c5103":"test_df.isna().sum()","d42f491a":"train_df['holiday'] = train_df['locale'] + '_' + train_df['type_y']\ntrain_df['location'] = train_df['city'] +',' + train_df['state']","035abbfb":"test_df['location'] = test_df['city'] +',' + test_df['state']\ntest_df['holiday'] = test_df['locale'] +',' + test_df['type_y']","501a6b7a":"train_df = train_df.drop(columns = ['city', 'state', 'locale', 'type_y'], axis = 1)\ntest_df = test_df.drop(columns = ['city', 'state', 'locale', 'type_y'], axis = 1)","5a3498b4":"train_df['family'].unique()","0ecaeaf2":"import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(15,7))\ntrain_df.groupby(\"family\").sum()['sales'].plot(kind='bar')","08b41f93":"# 15\n# Tools -Automotive + Hardware + Home Appliances  + Lawn and Garden +Players and Electronics\n# Clothing - Beauty + Lingerie + Ladies Wear\n# Lifestyle - Babycare + Books + Magazines + Celebration + School and Office Supplies\n# Other Foods - Grocery2 + Pet Foods + Sea Food\n# rest remains the same","fa9c1bee":"## Merged many categories from the family feature to observe change in the case.","747f99ac":"train_df['family'].replace(['AUTOMOTIVE', 'HARDWARE', 'LAWN AND GARDEN', 'PLAYERS AND ELECTRONICS'], 'Tools', inplace = True)\n\ntrain_df['family'].replace(['BEAUTY', 'LINGERIE', 'LADIESWEAR','PERSONAL CARE','CELEBRATION','MAGAZINES','BOOKS', 'BABY CARE'], 'LifeStyle', inplace = True)\n\ntrain_df['family'].replace(['HOME APPLIANCES','HOME AND KITCHEN I', 'HOME AND KITCHEN II','HOME CARE','SCHOOL AND OFFICE SUPPLIES'], 'Home', inplace=True)\n\ntrain_df['family'].replace([ 'GROCERY II', 'PET SUPPLIES','SEAFOOD','LIQUOR,WINE,BEER'], 'Food', inplace=True)\n\ntrain_df['family'].replace(['DELI', 'EGGS'], 'Daily', inplace=True)","54a2400e":"test_df['family'].replace(['AUTOMOTIVE', 'HARDWARE', 'LAWN AND GARDEN', 'PLAYERS AND ELECTRONICS'], 'Tools', inplace = True)\n\ntest_df['family'].replace(['BEAUTY', 'LINGERIE', 'LADIESWEAR','PERSONAL CARE','CELEBRATION','MAGAZINES','BOOKS', 'BABY CARE'], 'LifeStyle', inplace = True)\n\ntest_df['family'].replace(['HOME APPLIANCES','HOME AND KITCHEN I', 'HOME AND KITCHEN II','HOME CARE','SCHOOL AND OFFICE SUPPLIES'], 'Home', inplace=True)\n\ntest_df['family'].replace([ 'GROCERY II', 'PET SUPPLIES','SEAFOOD','LIQUOR,WINE,BEER'], 'Food', inplace=True)\n\ntest_df['family'].replace(['DELI', 'EGGS'], 'Daily', inplace=True)","c35ab9bb":"train_df['family'].unique()","3fd994a2":"import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(15,7))\ntrain_df.groupby(\"family\").sum()['sales'].plot(kind='bar')","2f91267f":"train_df.sort_values(by=['store_nbr', 'date', 'family'], inplace=True)\ntest_df.sort_values(by=['store_nbr', 'date', 'family'], inplace=True)","7862ab32":"train_df[[\"year\", \"month\", \"day\"]] = train_df[\"date\"].str.split(\"-\", expand = True)\ntrain_df = train_df.drop(columns=['date'], axis = 1)\n\ntest_df[[\"year\", \"month\", \"day\"]] = test_df[\"date\"].str.split(\"-\", expand = True)\ntest_df = test_df.drop(columns=['date'], axis = 1)","a3fabf6c":"train_df['onpromo_lag1'] = train_df['onpromotion'].shift(periods=1)\ntest_df['onpromo_lag1'] = test_df['onpromotion'].shift(periods=1)","9c9a4576":"train_df.shape","f548a54d":"test_df.shape","84e00d6e":"from datetime import datetime\ntrain_df[\"day\"] = train_df[\"day\"].astype('category')\ntrain_df[\"day\"] = train_df[\"day\"].cat.codes\ntrain_df[\"month\"] = train_df[\"month\"].astype('category')\ntrain_df[\"month\"] = train_df[\"month\"].cat.codes\ntrain_df[\"year\"] = train_df[\"year\"].astype('category')\ntrain_df[\"year\"] = train_df[\"year\"].cat.codes\n\ntrain_df[\"type_x\"] = train_df[\"type_x\"].astype('category')\ntrain_df[\"type_x\"] = train_df[\"type_x\"].cat.codes\ntrain_df[\"holiday\"] = train_df[\"holiday\"].astype('category')\ntrain_df[\"holiday\"] = train_df[\"holiday\"].cat.codes\ntrain_df[\"family\"] = train_df[\"family\"].astype('category')\ntrain_df[\"family\"] = train_df[\"family\"].cat.codes\ntrain_df[\"location\"] = train_df[\"location\"].astype('category')\ntrain_df[\"location\"] = train_df[\"location\"].cat.codes\n\ntrain_df[\"transferred\"] = train_df[\"transferred\"].astype('category')\ntrain_df[\"transferred\"] = train_df[\"transferred\"].cat.codes","b673680e":"#train_df['sale_lag1'] = train_df['sale_lag1'].fillna(0) \ntrain_df['onpromo_lag1'] = train_df['onpromo_lag1'].fillna(0) ","63c1fabf":"from datetime import datetime\ntest_df[\"day\"] = test_df[\"day\"].astype('category')\ntest_df[\"day\"] = test_df[\"day\"].cat.codes\ntest_df[\"month\"] = test_df[\"month\"].astype('category')\ntest_df[\"month\"] = test_df[\"month\"].cat.codes\ntest_df[\"year\"] = test_df[\"year\"].astype('category')\ntest_df[\"year\"] = test_df[\"year\"].cat.codes\n\ntest_df[\"type_x\"] = test_df[\"type_x\"].astype('category')\ntest_df[\"type_x\"] = test_df[\"type_x\"].cat.codes\ntest_df[\"holiday\"] = test_df[\"holiday\"].astype('category')\ntest_df[\"holiday\"] = test_df[\"holiday\"].cat.codes\ntest_df[\"family\"] = test_df[\"family\"].astype('category')\ntest_df[\"family\"] = test_df[\"family\"].cat.codes\ntest_df[\"location\"] = test_df[\"location\"].astype('category')\ntest_df[\"location\"] = test_df[\"location\"].cat.codes\n\ntest_df[\"transferred\"] = test_df[\"transferred\"].astype('category')\ntest_df[\"transferred\"] = test_df[\"transferred\"].cat.codes","c346f0a8":"test_df['onpromo_lag1'] = test_df['onpromo_lag1'].fillna(0) ","ea09dccf":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(train_df.loc[:, train_df.columns != 'sales'], train_df['sales'], test_size=0.33, random_state=42)","8099b7fb":"import xgboost as xgb\nmodel = xgb.XGBRegressor()\nmodel.fit(train_df.loc[:, train_df.columns != 'sales'], train_df['sales'])\n# score 3.8","53982cfa":"sub['sales'] = model.predict(test_df)","82deceaa":"sub.to_csv('submission123.csv', index=False)","7bcbc3d7":"READING DATA","69dae354":"MERGING DATA","d8951659":"FEATURE ENGINEERING","4ca0642f":"DATA CLEANING","ff079ac5":"MODEL"}}