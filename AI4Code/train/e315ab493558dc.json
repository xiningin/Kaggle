{"cell_type":{"987edf64":"code","202d36fd":"code","1e6a4355":"code","8583ae4e":"code","784bf154":"code","c966a03c":"code","6f65674a":"code","6f5f5738":"code","5360bc47":"code","46f1b2d1":"code","8c1d68aa":"code","2f82fff7":"code","053753a5":"code","0c9e6ca5":"code","93bf0e2f":"code","49f3f088":"code","7c71b614":"code","fceeb763":"code","3f1146f7":"code","4e49e650":"code","611ea312":"code","f7300c34":"code","29319c06":"code","b15a473c":"code","79542372":"code","fbe36b13":"markdown","b7694c93":"markdown","ee75830a":"markdown","53270120":"markdown","ca8fff81":"markdown","b62e2d06":"markdown","f4bcc8a7":"markdown","bb8fed47":"markdown","1edf3951":"markdown","e47f4d68":"markdown","3b7ea809":"markdown","1e639966":"markdown","f5c07017":"markdown"},"source":{"987edf64":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport seaborn as sns\n\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import confusion_matrix, precision_score, classification_report\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","202d36fd":"dados_treino = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ndados = dados_treino\ndados_teste = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ndados_treino.head()\n","1e6a4355":"dados_treino = dados_treino.drop('Name', axis=1,)\ndados_treino = dados_treino.drop('Ticket', axis=1,)\ndados_treino = dados_treino.drop('Cabin', axis=1,)\n","8583ae4e":"dados_treino.isnull().sum()\n","784bf154":"dados_treino.describe()","c966a03c":"idade_media = dados_treino[\"Age\"].median()\ndados_treino['Age'] = dados_treino['Age'].fillna(idade_media)\ndados_treino.isnull().sum()\n","6f65674a":"idade_media = dados_teste[\"Age\"].median()\ndados_teste['Age'] = dados_teste['Age'].fillna(idade_media)\ndados_teste.isnull().sum()","6f5f5738":"dados_treino.groupby(['Embarked']).count()","5360bc47":"dados_treino['Embarked'] = dados_treino['Embarked'].fillna('S')\ndados_teste['Embarked'] = dados_teste['Embarked'].fillna('S')\ndados_treino.isnull().sum()","46f1b2d1":"dados_treino['Family'] = dados_treino['SibSp'] + dados_treino['Parch'] \ndados_treino = dados_treino.drop('SibSp', axis=1,)\ndados_treino = dados_treino.drop('Parch', axis=1,)\n\ndados_teste['Family'] = dados_teste['SibSp'] + dados_teste['Parch'] \n","8c1d68aa":"dados_treino['Adult'] = dados_treino['Age'].apply(lambda x: 0 if x<18 else 1) # 1 para adultos e 0 para menores de 18\ndados_treino = dados_treino.drop('Age', axis=1,)\ndados_treino['Sex'] = dados_treino['Sex'].apply(lambda x: 0 if x=='male' else 1) # 0 para Masculino e 1 para Feminino\ndados_treino['Embarked'] = dados_treino['Embarked'].apply(lambda x: 0 if x=='S' else 1 if x=='C' else 2)\ndados_treino['Family'] = dados_treino['Family'].apply(lambda x: 0 if x<3 else 1 if x==3 else 2)\n\ndados_treino.head()","2f82fff7":"dados_teste['Adult'] = dados_teste['Age'].apply(lambda x: 0 if x<18 else 1) # 1 para adultos e 0 para menores de 18\ndados_teste = dados_teste.drop('Age', axis=1,)\ndados_teste['Sex'] = dados_teste['Sex'].apply(lambda x: 0 if x=='male' else 1) # 0 para Masculino e 1 para Feminino\ndados_teste['Embarked'] = dados_teste['Embarked'].apply(lambda x: 0 if x=='S' else 1 if x=='C' else 2)\ndados_teste['Family'] = dados_teste['Family'].apply(lambda x: 0 if x<3 else 1 if x==3 else 2)\n\ndados_teste.head()","053753a5":"dados_teste.isnull().sum()","0c9e6ca5":"dados_treino.isnull().sum()","93bf0e2f":"sns.barplot(x='Pclass', y='Survived', data=dados_treino)","49f3f088":"sns.barplot(x='Embarked', y='Survived', data=dados_treino)","7c71b614":"sns.barplot(x='Adult', y='Survived', data=dados_treino)","fceeb763":"sns.barplot(x='Family', y='Survived', data=dados_treino)","3f1146f7":"sns.heatmap(dados_treino.corr(), annot=True)","4e49e650":"dados_teste['Family']","611ea312":"x = dados_treino.filter(['Pclass','Sex','Embarked','Adult'], axis=1) # input de dados para treino\ny = dados_treino[['Survived']] # Classifica\u00e7\u00e3o target\n\nx_teste = dados_teste.filter(['Pclass','Sex','Embarked','Adult'], axis=1) # dados para teste\nx_teste\n","f7300c34":"# Decision Tree - M\u00e9todo de Classifica\u00e7\u00e3o\nclassificador = DecisionTreeClassifier()\nclassificador.fit(x, y)\n\ny_pred = classificador.predict(x_teste)\n\nprint(\"R2 = {}\".format(classificador.score(x,y)))\n\noutput = pd.DataFrame({'PassengerId': dados_teste.PassengerId, 'Survived': y_pred})\noutput.to_csv('c_lucariello.csv', index=False)\nprint(\"Your submission was successfully saved!\")","29319c06":"# Random Forest\nclassificador = RandomForestClassifier(n_estimators=100)\nclassificador.fit(x, y)\n\ny_prediction = classificador.predict(x_teste)\n\nclassificador.score(x, y)\nacc_random_forest = round(classificador.score(x, y) * 100, 2)\nprint(round(acc_random_forest,2,), \"%\")\n\noutput = pd.DataFrame({'PassengerId': dados_teste.PassengerId, 'Survived': y_pred})\noutput.to_csv('c_lucariello_random_forest.csv', index=False)\nprint(\"Your submission was successfully saved!\")\n","b15a473c":"valores = dados.groupby('Survived').count()\nsobreviventes = valores['Sex'].tolist()\n\nmortes = go.Figure(data=[go.Pie(labels=['Morreram','Sobreviveram'],values=sobreviventes, hole=0.4)])\nmortes.show()","79542372":"dados['Menores'] = dados['Age'].apply(lambda x: 1 if x<18 else 0) # defini\u00e7\u00e3o de menores de idade\nmenores_sobreviventes = dados.groupby(['Survived'], as_index=False)['Menores'].sum() # defini\u00e7\u00e3o de menores sobreviventes\nlista_menores = menores_sobreviventes['Menores'].tolist()\nmortes_menores = lista_menores[0]\nvidas_menores = lista_menores[1]\ntotal = menores_sobreviventes['Menores'].sum()\n\ngrafico_menores = go.Figure(data=[go.Pie(labels=['Morreram','Sobreviveram'],values=lista_menores, hole=0.4)])\ngrafico_menores.show()\n","fbe36b13":"# Carregando os dados","b7694c93":"Vis\u00e3o geral de sobreviventes ao naufr\u00e1gio","ee75830a":"Para simplificar o modelo, substit\u00edmos as colunas referentes \u00e0 familiares no navio por uma informa\u00e7\u00e3o consolidada do numero de familiares:","53270120":"Por raz\u00f5es l\u00f3gicas,exclu\u00edmos as colunas que n\u00e3o devem possui qualquer correla\u00e7\u00e3o com a sobreviv\u00eancia ao acidente. S\u00e3o elas o nome, o ticket e a cabine.","ca8fff81":"# Pr\u00e9 Processamento","b62e2d06":"Como esperamos que a idade tenha uma correla\u00e7\u00e3o com a sobreviv\u00eancia, \u00e9 necess\u00e1rio tratar os valores nulos enontrados na base. \n\nPara simplificar o problema, idades com valor nulo ser\u00e3o substituidos pela m\u00e9dia das idades das pessoas no navio.\n","f4bcc8a7":"Crian\u00e7as por faixa et\u00e1ria que n\u00e3o sobreviveram ao naufr\u00e1gio","bb8fed47":"Para utilizar os m\u00e9todos de ML, atribu\u00edmos valores num\u00e9ricos para cada classifica\u00e7\u00e3o.","1edf3951":"# Visualiza\u00e7\u00e3o de Indicadores\n","e47f4d68":"Avaliando a a presen\u00e7a de outliers na base","3b7ea809":"# Treinamento do modelo\n","1e639966":"Os 2 registros nulos de local de embarque podem ser subsitu\u00eddos pelo porto com maior n\u00famero de embarques.","f5c07017":"Total de crian\u00e7as no navio, separadas por faixa et\u00e1ria"}}