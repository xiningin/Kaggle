{"cell_type":{"0d7a72b9":"code","0e403dee":"code","75da6f64":"code","7ab40385":"code","94d347e2":"code","7477391b":"code","06c534cd":"code","508cefcb":"code","c7a0f0ce":"code","3e0614c3":"code","f19b4fa6":"code","fce28316":"code","5ac4388d":"code","9fa63bc3":"code","4db87c06":"code","5a569b9d":"code","994297dd":"code","a3529096":"code","29e131ba":"code","4e8b87de":"code","14a5943c":"code","45b71b6b":"code","2686c30b":"code","8003582c":"markdown","b4880371":"markdown","072fa5db":"markdown","1f86ee61":"markdown","4c163b35":"markdown","e258c9d8":"markdown","abecaefb":"markdown","47c63bd1":"markdown","98eebe72":"markdown","4b1e85c4":"markdown","b9d97ff3":"markdown","689076c9":"markdown","9f37d5f6":"markdown"},"source":{"0d7a72b9":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns \nsns.set(style=\"darkgrid\")\nimport cufflinks as cf\n\nimport plotly.offline as py \nimport plotly.figure_factory as ff \nimport plotly.graph_objs as go \n\nfrom plotly import tools \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, iplot, plot \n\npy.init_notebook_mode(connected= True)\ncf.go_offline()\n\nimport warnings\nwarnings.filterwarnings('ignore')","0e403dee":"df= pd.read_csv(\"..\/input\/BlackFriday.csv\")","75da6f64":"df.head()","7ab40385":"df.info()","94d347e2":"df.describe()","7477391b":"male = df[df['Gender'] == 'M']\nfemale = df[df['Gender'] == 'F']\n\nmale_pur = male.groupby('Age')[\"Purchase\"].mean().to_frame()\nfemale_pur = female.groupby('Age')[\"Purchase\"].mean().to_frame()\n\ntrace0 = go.Scatter(\n    x = male_pur.index,\n    y = male_pur['Purchase'].round(-2),\n    name = 'male',\n    line = dict(\n        color = 'lime',\n        width = 2,\n        dash='dash')\n)\n\ntrace1 = go.Scatter(\n      x = female_pur.index,\n    y = female_pur['Purchase'].round(-2),\n    name = 'female',\n    line = dict(\n        color = 'maroon',\n        width = 2,\n        dash = 'dash')\n    )\n\n\ndata = [trace0, trace1]\nlayout = dict(title = 'The Average Purchases of Men & Women by Age',\n              xaxis = dict(title = 'Age'),\n              yaxis = dict(title = 'Average Purchase ($)')\n             )\n\nfig = dict(data=data, layout=layout)\nfig['layout']['xaxis'].update(dict(title = 'Age', tickfont = dict(size = 12)))\npy.iplot(fig)","06c534cd":"male_mar = df[(df['Gender'] == 'M') & (df[\"Marital_Status\"] ==0)]\nmale_mar_non = df[(df['Gender'] == 'M') & (df[\"Marital_Status\"] == 1)]\n\n\nfemale_mar = df[(df['Gender'] == 'F') & (df[\"Marital_Status\"] ==0)]\nfemale_mar_non = df[(df['Gender'] == 'F') & (df[\"Marital_Status\"] ==1)]\n\n\nmale_mar = male_mar.groupby(\"Age\")[\"Purchase\"].mean().to_frame()\nmale_mar_non = male_mar_non.groupby(\"Age\")[\"Purchase\"].mean().to_frame()\n\nfemale_mar = female_mar.groupby(\"Age\")[\"Purchase\"].mean().to_frame()\nfemale_mar_non =female_mar_non.groupby(\"Age\")[\"Purchase\"].mean().to_frame()\n\ntrace0 = go.Scatter(\n    x = male_mar.index,\n    y = male_mar['Purchase'].round(-2),\n    name = 'Married Male',\n    line = dict(\n        color = 'blue',\n        width = 2,\n        dash='longdash'))\n\n\ntrace1 = go.Scatter(\n    x = male_mar_non.index,\n    y = male_mar_non['Purchase'].round(-2),\n    name = 'Non-Married Male',\n    line = dict(\n        color = 'maroon',\n        width = 2,\n        dash='longdash'))\n\n\n\n\ntrace2 = go.Scatter(\n      x = female_mar.index,\n    y = female_mar['Purchase'].round(-2),\n    name = 'Married Female',\n    line = dict(\n        color = 'pink',\n        width = 2,\n        dash = 'dashdot'))\n\ntrace3 = go.Scatter(\n      x = female_mar_non.index,\n    y = female_mar_non['Purchase'].round(-2),\n    name = 'Non-Married Female',\n    line = dict(\n        color = 'lime',\n        width = 2,\n        dash = 'dashdot'))\n\n\n\ndata = [trace0, trace1, trace2, trace3]\nlayout = dict(title = 'Avergae Purchases of Men & Women by Marital Status',\n              xaxis = dict(title = 'Age'),\n              yaxis = dict(title = 'Average Purchase ($)')\n             )\n\nfig = dict(data=data, layout=layout)\nfig['layout']['xaxis'].update(dict(title = 'Age', tickfont = dict(size = 12)))\npy.iplot(fig)","508cefcb":"occ=[]\nfor i in df[\"Occupation\"]:\n    if i not in occ:\n        occ.append(i)\n\nocc0 = df[df['Occupation'] == 0]\nocc1 = df[df['Occupation'] == 1]\nocc2= df[df['Occupation'] == 2]\nocc3= df[df['Occupation'] == 3]\nocc4= df[df['Occupation'] == 4]\nocc5= df[df['Occupation'] == 5]\nocc6= df[df['Occupation'] == 6]\nocc7= df[df['Occupation'] == 7]\nocc8= df[df['Occupation'] == 8]\nocc9= df[df['Occupation'] == 9]\nocc10= df[df['Occupation'] == 10]\n\n\nocc_0 = occ0.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_1 = occ1.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_2 = occ2.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_3 = occ3.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_4 = occ4.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_5 = occ5.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_6 = occ6.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_7 = occ7.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_8 = occ8.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_9 = occ9.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_10 = occ10.groupby('Age')[\"Purchase\"].mean().to_frame()\n\ntrace0 = go.Scatter(\n    x = occ_0.index,\n    y = occ_0['Purchase'].round(-2),\n    name = '0',\n    line = dict(\n        color = 'olive',\n        width = 2,\n        dash='dot'))\n\ntrace1 = go.Scatter(\n      x = occ_1.index,\n    y = occ_1['Purchase'].round(-2),\n    name = '1',\n    line = dict(\n        color = 'linen',\n        width = 2,\n        dash = 'dashdot'))\n\ntrace2 = go.Scatter(\n      x = occ_2.index,\n    y = occ_2['Purchase'].round(-2),\n    name = '2',\n    line = dict(\n        color = 'brown',\n        width = 2,\n        dash = 'dash'))\n\n\ntrace3 = go.Scatter(\n      x = occ_3.index,\n    y = occ_3['Purchase'].round(-2),\n    name = '3',\n    line = dict(\n        color = 'peachpuff',\n        width = 2,\n        dash = 'dashdot'))\n\n\ntrace4 = go.Scatter(\n      x = occ_4.index,\n    y = occ_4['Purchase'].round(-2),\n    name = '4',\n    line = dict(\n        color = 'navy',\n        width = 2,\n        dash = 'dot'))\n\n\ntrace5 = go.Scatter(\n      x = occ_5.index,\n    y = occ_5['Purchase'].round(-2),\n    name = '5',\n    line = dict(\n        color = 'orange',\n        width = 2,\n        dash = 'dashdot'))\n\n\ntrace6 = go.Scatter(\n      x = occ_6.index,\n    y = occ_6['Purchase'].round(-2),\n    name = '6',\n    line = dict(\n        color = 'pink',\n        width = 2,\n        dash = 'dot'))\n\n\ntrace7 = go.Scatter(\n      x = occ_7.index,\n    y = occ_7['Purchase'].round(-2),\n    name = '7',\n    line = dict(\n        color = 'aqua',\n        width = 2,\n        dash = 'dashdot'))\n\n\ntrace8 = go.Scatter(\n      x = occ_8.index,\n    y = occ_8['Purchase'].round(-2),\n    name = '8',\n    line = dict(\n        color = 'lime',\n        width = 2,\n        dash = 'dot'))\n\n\ntrace9 = go.Scatter(\n      x = occ_9.index,\n    y = occ_9['Purchase'].round(-2),\n    name = '9',\n    line = dict(\n        color = 'red',\n        width = 2,\n        dash = 'dash'))\n\n\ntrace10 = go.Scatter(\n      x = occ_10.index,\n    y = occ_10['Purchase'].round(-2),\n    name = '10',\n    line = dict(\n        color = 'green',\n        width = 2,\n        dash = 'dot'))\n\ndata = [trace0, trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace8, trace9, trace10]\nlayout = dict(title = 'The Average Purchases Based on Occupation less than 10 years',\n              xaxis = dict(title = 'Age'),\n              yaxis = dict(title = 'Average Purchase ($)')\n             )\n\nfig = dict(data=data, layout=layout)\nfig['layout']['xaxis'].update(dict(title = 'Age', tickfont = dict(size = 12)))\npy.iplot(fig)","c7a0f0ce":"occ11= df[df['Occupation'] == 11]\nocc12= df[df['Occupation'] == 12]\nocc13= df[df['Occupation'] == 13]\nocc14= df[df['Occupation'] == 14]\nocc15= df[df['Occupation'] == 15]\nocc16= df[df['Occupation'] == 16]\nocc17= df[df['Occupation'] == 17]\nocc18= df[df['Occupation'] == 18]\nocc19= df[df['Occupation'] == 19]\nocc20= df[df['Occupation'] == 20]\n\nocc_11 = occ11.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_12= occ12.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_13 = occ13.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_14 = occ14.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_15 = occ15.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_16 = occ16.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_17 = occ17.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_18 = occ18.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_19 = occ19.groupby('Age')[\"Purchase\"].mean().to_frame()\nocc_20 = occ20.groupby('Age')[\"Purchase\"].mean().to_frame()\n\n\n\ntrace11 = go.Scatter(\n      x = occ_11.index,\n    y = occ_11['Purchase'].round(-2),\n    name = '11',\n    line = dict(\n        color = 'moccasin',\n        width = 2,\n        dash = 'dashdot'))\n\ntrace12 = go.Scatter(\n      x = occ_12.index,\n    y = occ_12['Purchase'].round(-2),\n    name = '12',\n    line = dict(\n        color = 'mistyrose',\n        width = 2,\n        dash = 'dashdot'))\ntrace13 = go.Scatter(\n      x = occ_13.index,\n    y = occ_13['Purchase'].round(-2),\n    name = '13',\n    line = dict(\n        color = 'yellowgreen',\n        width = 2,\n        dash = 'dashdot'))\ntrace14 = go.Scatter(\n      x = occ_14.index,\n    y = occ_14['Purchase'].round(-2),\n    name = '14',\n    line = dict(\n        color = 'maroon',\n        width = 2,\n        dash = 'dashdot'))\n\ntrace15 = go.Scatter(\n      x = occ_15.index,\n    y = occ_15['Purchase'].round(-2),\n    name = '15',\n    line = dict(\n        color = 'tan',\n        width = 2,\n        dash = 'dashdot'))\n\ntrace16 = go.Scatter(\n      x = occ_16.index,\n    y = occ_16['Purchase'].round(-2),\n    name = '16',\n    line = dict(\n        color = 'slateblue',\n        width = 2,\n        dash = 'dashdot'))\n\ntrace17 = go.Scatter(\n      x = occ_17.index,\n    y = occ_17['Purchase'].round(-2),\n    name = '17',\n    line = dict(\n        color = 'aqua',\n        width = 2,\n        dash = 'dashdot'))\n\ntrace18 = go.Scatter(\n      x = occ_18.index,\n    y = occ_18['Purchase'].round(-2),\n    name = '18',\n    line = dict(\n        color = 'green',\n        width = 2,\n        dash = 'dashdot'))\n\ntrace19 = go.Scatter(\n      x = occ_19.index,\n    y = occ_19['Purchase'].round(-2),\n    name = '19',\n    line = dict(\n        color = 'red',\n        width = 2,\n        dash = 'dashdot'))\n\ntrace20 = go.Scatter(\n      x = occ_20.index,\n    y = occ_20['Purchase'].round(-2),\n    name = '20',\n    line = dict(\n        color = 'blue',\n        width = 2,\n        dash = 'dashdot'))\n\ndata = [trace11, trace12, trace13, trace14, trace15, trace16, trace17, trace18, trace19, trace20]\nlayout = dict(title = 'he Average Purchases Based on Occupation more than 10 years',\n              xaxis = dict(title = 'Age'),\n              yaxis = dict(title = 'Average Purchase ($)')\n             )\n\nfig = dict(data=data, layout=layout)\nfig['layout']['xaxis'].update(dict(title = 'Age', tickfont = dict(size = 12)))\npy.iplot(fig)","3e0614c3":"# Creating function for Barplots:\ndef barplot_func(col, title, colorscale = \"Portland\", ylabel = \"y-axis name\"):\n    trace = go.Bar(x = col.index, y = col.values, \n                    marker= dict(color = df[\"Purchase\"], colorscale = colorscale))\n    \n    layout = go.Layout(title = title, yaxis= dict(title = ylabel))\n    \n    data = [trace]\n    \n    fig = go.Figure(data = data, layout= layout)\n    \n    py.iplot(fig)\n    ","f19b4fa6":"# Gender! \nma_fe = df[\"Gender\"].value_counts()\n\nbarplot_func(col = ma_fe, title = \"Number of Male Vs Female\", ylabel=\"Number of customers\", colorscale=\"Picnic\")","fce28316":"male = df[df[\"Gender\"] ==\"M\"]\nfemale = df[df[\"Gender\"] ==\"F\"]\n\ntrace1 = go.Box(y=male[\"Purchase\"], fillcolor=\"Blue\", name=\"Male\")\ntrace2 = go.Box(y=female[\"Purchase\"], fillcolor=\"Pink\",name=\"Female\")\nlayout = go.Layout(title=\"Purchases based on gender\")\n\ndata = [trace1, trace2]\n\nfig = go.Figure(data=data, layout=layout)\n\npy.iplot(fig)","5ac4388d":"#['Greys', 'YlGnBu', 'Greens', 'YlOrRd', 'Bluered', 'RdBu','Reds', 'Blues', 'Picnic', 'Rainbow', 'Portland', 'Jet','Hot', 'Blackbody', 'Earth', 'Electric', 'Viridis', 'Cividis']\n\nage = df[\"Age\"].value_counts()\nbarplot_func(col=age, title=\"Age Distribution\", ylabel=\"Number of customers\")","9fa63bc3":"city = df[\"City_Category\"].value_counts()\nbarplot_func(city, \"Cities Counts\", colorscale=\"Jet\", ylabel=\"Number of customers\")","4db87c06":"stay = df[\"Stay_In_Current_City_Years\"].value_counts()\nbarplot_func(stay, \"Stay in current city\", ylabel=\"Number of customers\", colorscale=\"Cividis\")","5a569b9d":"occ = df[\"Occupation\"].value_counts()\nbarplot_func(occ, \"Occupation Distribution\", ylabel=\"Number of customers\", colorscale=\"Earth\")","994297dd":"prod1 = df[\"Product_Category_1\"].value_counts()\nprod2 = df[\"Product_Category_2\"].value_counts()\nprod3 = df[\"Product_Category_3\"].value_counts()\n\nage = df[\"Age\"].value_counts()","a3529096":"colors = ['lime', 'navy', 'red', 'lightgreen', 'pink', 'lightblue', 'purple']\n\n    \ndef sub_plot_pie(col1, col2,title = \"Main title\",  title1 = \"Left plot title\", title2 = \"Right plot title\" ):\n    \n    trace1 = go.Pie(labels = col1.index, values = col1.values,name= title1, \n                    hole= .6, textposition= \"inside\",\n                    \n                    domain= dict(x = [0, .48]), \n                  \n                    marker=dict(colors=colors))\n    \n    \n    trace2 = go.Pie(labels = col2.index, values = col2.values,name= title2, \n                    hole= .6, textposition= \"inside\",\n                    \n                    domain= dict(x = [.51, 1]), \n                  \n                    marker=dict(colors=colors))\n    \n    \n    layout = go.Layout(title = title,annotations = [dict(text = title1,\n                                                font = dict(size = 13),\n                                                showarrow = False,\n                                                x = 0, y = 1),\n                                           dict(text = title2,\n                                                font = dict(size = 13),\n                                                showarrow = False,\n                                                x = .6,y = 1\n                                               ) ] )\n    data = [trace1, trace2]                                              \n    \n    fig = go.Figure(data = data, layout = layout)\n  \n    py.iplot(fig)","29e131ba":"sub_plot_pie(col1=prod1, col2=prod2, title=\"Product Sold\", title1=\"Product 1\", title2=\"Product2\")","4e8b87de":"## Distribution of the purchases \nplt.figure(figsize =(16,8))\nsns.distplot(df[\"Purchase\"], bins=10)","14a5943c":"sub_plot_pie(col1=prod3, col2=age, title=\"Product Sold & Age Distribution\", title1=\"Product 3 \", title2=\"Age\")","45b71b6b":"df.head(2)","2686c30b":"'''dat = df[['Age','Occupation','Purchase']]\ndat[\"index\"] = np.arange(len(dat))\nfig = ff.create_scatterplotmatrix(dat, diag='box', index='index',\n                                  colormap_type='cat',colormap='Jet',\n                                  height=800, width=800)\npy.iplot(fig)'''","8003582c":"### 7. Occupation length Distribution [^](#0) <a id=\"10\"><\/a> <br>","b4880371":"### Work under progress! \n\n### Please upvote if you liked the kernel \n### Thank you ! ","072fa5db":"### 6. How long the customers have stayed in the city. [^](#0) <a id=\"9\"><\/a> <br>","1f86ee61":"## 2. Revenue [^](#0) <a id =\"2\"><\/a> <br>","4c163b35":"### 8. Target Variable ( Purchase Distribution)  [^](#0) <a id=\"11\"><\/a> <br>","e258c9d8":"### 1. Loading and Exploring the data  [^](#0)  <a id =\"1\"><\/a> <br>","abecaefb":"### 5. From which city the customer are? [^](#0) <a id=\"8\"> <\/a> <br>","47c63bd1":"### 3. Number of Males and Females went to store [^](#0)  <a id =\"6\"><\/a> <br>","98eebe72":"### 2.c. Average Purchase based on work experince [^](#0)  <a id =\"5\"><\/a> <br>","4b1e85c4":"<img src=\"https:\/\/i.imgur.com\/NU6ew7G.png\" width =\"800\" height = \"500\"\/>\n\n\n\n### A simple exploratory data analysis kernel. In which I tried to manipulate data in an extensive data visualisation. \n### **Summary** <a id=\"0\"><\/a> <br>\nIn this kernel we will doing exploratory data analysis and will try to find out relationship between the items been sold on black friday based on the gender and employement lenght \n\n#### **Content:**\n* 1-[Load and Exploring the Data](#1)\n* 2-[Revenue](#2)\n    * a.[ Average Purchase by men and women](#3)\n    * b.[ Average Purchase by married & non-arried men vs married & non-arriedwomen ](#4)\n    * c.[ Average Purchase based on work experince](#5)\n* 3-[ Number of Males and Females went to store](#6)\n* 4-[The age distribution of the customers](#7)\n* 5-[ From which city the customer are?](#8)\n* 6-[How long the customers have stayed in the city.](#9)\n* 7-[Occupation length Distribution](#10)\n* 8-[Target Variable ( Purchase Distribution) ](#11)\n* 8-[Apriori](#12)\n* 9-[Conclusion](#13)","b9d97ff3":"### 2.a. Average Purchase by men and women [^](#0) <a id =\"3\"> <\/a> <br>","689076c9":"### 4 The age distribution of the customers [^](#0) <a id=\"7\"><\/a> <br>","9f37d5f6":"### 2.b. Average Purchase by married & non-arried men vs married & non-arriedwomen  [^](#0) <a id =\"4\"><\/a> <br>\n"}}