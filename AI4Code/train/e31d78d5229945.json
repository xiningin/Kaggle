{"cell_type":{"275e1248":"code","555b0f2d":"code","43d0e506":"code","9a90b4a1":"code","f99445f2":"code","9f6e5770":"code","5d40b8df":"code","792c1d1b":"code","66b9a1a6":"code","bd049054":"code","bf161384":"code","61fd8fb3":"code","a8546cc9":"code","7758c8f4":"code","83721f0b":"code","49324e9c":"code","50cf4597":"code","9fe5c62a":"code","a90a2c5f":"code","ab594616":"code","f6d91449":"code","4a20ed4c":"code","87bf8af4":"code","52ea891c":"code","08cbc20b":"code","aa96491e":"code","a9cbdd1d":"code","e25f0dae":"markdown","cf4398e4":"markdown"},"source":{"275e1248":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","555b0f2d":"data = pd.read_csv(\"\/kaggle\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 5.csv\")\nmydata = data\nmydata.info()","43d0e506":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n# FOR FUZZY MATCH\nimport fuzzywuzzy\nfrom fuzzywuzzy import process, fuzz\n\n# FOR TRANSLATE URDU-ENGLISH\nfrom textblob import TextBlob","9a90b4a1":"mydata = mydata.rename({\"Order Number\": \"OrdNumber\", \n                        \"Order Status\": \"OrdStatus\", \n                        \"Book Name\" : \"BookName\", \n                        \"Order Date & Time\": \"OrdDate\", \n                        \"City\": \"city\", \n                        \"Payment Method\": \"PayMethod\", \n                        \"Total items\": \"TotItems\", \n                        \"Total weight (grams)\": \"weight\"}, \n                       axis = 1 )\nmydata.head()","f99445f2":"mydata.city =mydata.city.astype('str')\nmydata.city = mydata.city.str.lower()\nmydata.city = mydata.city.str.strip()\nprovided_data = mydata.city.value_counts()\nprovided_data","9f6e5770":"print (mydata.city.value_counts().sum())\nprint (\"Unique Cities: \", len(mydata.city.unique()))","5d40b8df":"short_names = mydata.city.str.len()<=4\nprint ( mydata[short_names].city.unique())\nprint (\"\\nUnique Cities whith Short Name: \", len(mydata[short_names].city.unique()) )","792c1d1b":"short_to_full = {\n    \"fsd\": \"faisalabad\",\n    \"rwp\": \"rawalpindi\",\n    \"lhr\": \"lahore\",\n    \"isb\": \"islamabad\",\n    \"ryk\": \"rahim yar khan\",    \n    \"khi\": \"karachi\",\n    \"hyd\": \"hydrabad\",\n    \"aj&k\": \"azad jammu & kashmir\",\n    \"lahr\": \"lahore\",\n    \"lah\": \"lahore\",\n    \"d i khan\": \"dera ismail khan\",\n    \"g g khan\": \"dera ghazi khan\",\n    \"dgk\": \"dera ghazi khan\",\n    \"vehari\": \"vihari\",\n    \"mailsi, district vehari\": \"vihari\"\n}\nmydata.city = mydata.city.replace(short_to_full)","66b9a1a6":"after_short_names = mydata.city.str.len()<=4\nmydata[after_short_names].city.unique()\nprint ( mydata[after_short_names].city.unique())\nprint (\"\\nUnique Cities whith Short Name: \", len(mydata[after_short_names].city.unique()) )","bd049054":"alpha_num_name = mydata.city.str.contains(\"[a-zA-Z0-9]\")\nbeore_urduNames = mydata[~alpha_num_name].city.unique()\nbeore_urduNames.shape","bf161384":"len(beore_urduNames), beore_urduNames","61fd8fb3":"convert_to_eng = {}\nfor x in beore_urduNames:\n    try:\n        tr = TextBlob(x).translate().string\n        convert_to_eng[x] = tr\n    except:\n        pass","a8546cc9":"convert_to_eng","7758c8f4":"mydata.city = mydata.city.replace(convert_to_eng)","83721f0b":"alpha_num_name = mydata.city.str.contains(\"[a-zA-Z0-9]\")\nafter_urduNames = mydata[~alpha_num_name].city.unique()\nafter_urduNames.shape","49324e9c":"after_urduNames","50cf4597":"remaing_translate_to_eng = {\n    \"\u062e\u0627\u0646\u06cc\u0648\u0627\u0644\": \"khanewal\",\n    \"\u06c1\u06cc\u0644\u0627\u06ba\": \"heelan\",\n    \"\u0627\u0648\u06a9\u0627\u0691\u06c1\": \"okara\",\n    \"\u067e\u06be\u0627\u0644\u06cc\u06c1\": \"phalia\",\n    \"\u067e\u06cc\u0631\u0645\u062d\u0644\": \"pir mahal\",\n    \"\u0644\u06cc\u06c1\": \"layyah\",\n    \"\u0633\u0646\u0627\u0646\u0648\u0627\u06ba\": \"sananwan\",\n    \"\u062c\u0639\u0641\u0631\u0627\u0628\u0627\u062f\": \"jaffarabad\",\n    \"\u06a9\u0648\u06c1\u06cc\u0679\u0627\": \"kohita\",\n    \"\u0631\u0648\u06c1\u06cc\u0644\u0627\u0646\u0648\u0627\u0644\u06cc\": \"rohilanwali\",\n    \"\u06c1\u0631\u0646\u0627\u0626\u06cc\": \"harnai\",\n    \"\u06c1\u0646\u06af\u0648\": \"hangu\",\n    \"\u0645\u062d\u0644\u06c1 \u06af\u0648\u0691\u06be\u0627\": \"mohalla godha\",\n    \"\u0679\u0645\u0646\": \"timon\",\n    \"\u06c1\u0631\u0646\u0648\u0644\u06cc\": \"harnoli\",\n    \"\u0633\u06a9\u06c1\u0631\": \"sukkur\",\n    \"\u062c\u0627\u0645 \u067e\u0648\u0631\": \"jampur\",\n    \"\u0645\u064a\u0631\u067e\u0648\u0631\u062e\u0627\u0635\": \"mirpurkhas\",\n    \"\u0644\u0627\u0644\u06cc\u0627\u06ba\": \"lalian\",\n    \"\u0628\u06be\u06a9\u0631\": \"bhakkar\",\n    \"\u067e\u0644\u0646\u062f\u0631\u06cc\": \"pallandri\",\n    \"\u06a9\u0646\u0688\u06cc\u0627\u0631\u0648\": \"kandiaro\",\n    \"\u062f\u06be\u0648\u06a9 \u0645\u0635\u0627\u062d\u0628\": \"dhok musahib\",\n    \"\u0635\u0627\u0644\u062d \u067e\u0679\": \"saleh Pat\",\n    \"\u0644\u0648\u062f\u06be\u0631\u0627\u06ba\": \"lodhran\",\n    \"\u067e\u062a\u0648\u06a9\u06cc\": \"patoki\",\n    \"\u0686\u0648\u06a9 \u0622\u0639\u0638\u0645\": \"chowk azam\"\n}\nmydata.city = mydata.city.replace(remaing_translate_to_eng)","9fe5c62a":"alpha_num_name = mydata.city.str.contains(\"[a-zA-Z0-9]\")\nafter_replace_urduNames = mydata[~alpha_num_name].city.unique()\nafter_replace_urduNames.shape","a90a2c5f":"mydata.city.str.lower()\nmydata.city.value_counts()","ab594616":"externalData = pd.read_csv(\"..\/input\/pakistan-cities\/pk.csv\")\nexternalData.info()","f6d91449":"externalData.city = externalData.city.str.lower()\nexternalData.city = externalData.city.str.strip()\nexternalData.head()","4a20ed4c":"externalData[externalData.city.str.contains('city')]","87bf8af4":"externalData.city = externalData.city.replace('sialkot city', 'sialkot')\nexternalData.city = externalData.city.replace('jhang city', 'jhang')\nexternalData.city = externalData.city.replace('hyderabad city', 'hyderabad')\nexternalData.city = externalData.city.replace('attock city', 'attock')","52ea891c":"testExt = {}\nmydata.new_city = None\nmydata.lat = None\nmydata.lng = None\nmydata.ratio = None\n\nfor x, xRows in externalData.iterrows():\n    for y, yRows in mydata.iterrows():\n        if (xRows.city not in yRows.city):\n            if xRows.city not in testExt:\n                testExt[xRows.city] = {\"count\":1}\n            else:\n                testExt[xRows.city][\"count\"] = testExt[xRows.city][\"count\"] + 1\n        else:\n            getRatio = fuzz.ratio(yRows.city, xRows.city)\n            mydata.at[y, 'ratio'] = getRatio\n            mydata.at[y, 'new_city'] = xRows.city\n            mydata.at[y, 'lat'] = xRows.lat\n            mydata.at[y, 'lng'] = xRows.lng","08cbc20b":"mydata.info()\nmydata","aa96491e":"print ('-------- BEFORE CITIES --------\\n', provided_data )\n\nafter_data = mydata['new_city'].value_counts()\nprint ('\\n\\n-------- AFTER CITIES --------\\n', after_data)\n#after_data = mydata.city.value_counts()","a9cbdd1d":"print (\"\\nTotal Number of Rows: \", len(mydata))\nprint (\"\\n\\n----------------- BEFORE PROCESSING --------------------\\n\")\nprint (\"Unique Cities: \", len(mydata['city'].unique()))\nprint (f\"Total Unique Cities: {mydata['city'].nunique()} \" )\nprint (\"\\n\\n------------------ AFTER PROCESSING --------------------\\n\")\nprint (\"Unique Cities: \", len(mydata['new_city'].unique()))\nprint (f\"Total Unique Cities: {mydata['new_city'].nunique()} \" )\nprint (\"\\n\\n---------- UNPROCCESSED\/INVALID CITIES --------------\\n\")\nprint (\"Number of Invalid \/ UnProccessed Cities: \", mydata['new_city'].isnull().sum())","e25f0dae":"Hope attempt is appriciated, looking for your guidance **like, UPVOTES and with lots of love**\n\n**Only one confussion about textblob**: with same line of code why sometime not execute (uncertainty behaviour without any change in code), loop working fine but textblob statement skip from code and unable to get required record.\n","cf4398e4":"Use External Data for Cities Normalization"}}