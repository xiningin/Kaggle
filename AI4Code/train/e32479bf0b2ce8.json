{"cell_type":{"c0500e7e":"code","24f0c62f":"code","8058e483":"code","25e5cc6f":"code","0977def9":"code","97c986c8":"code","307f680c":"code","3b3e33d3":"code","cab174be":"code","aba8689b":"code","ad694148":"code","a89379b4":"code","3c03f3db":"code","d32cfa40":"code","41b2e70a":"code","7cf64690":"code","f332c2d6":"code","cd411266":"code","efb9a343":"code","f87ae044":"code","3e2ec622":"code","181a2419":"code","a5eec88d":"code","9fa78329":"code","34cbf887":"code","089fbf5f":"code","370abe07":"code","6aa83f15":"code","c31baec5":"code","6f4f2934":"code","2b3af2f3":"code","c53c1af8":"code","dceeaf39":"code","cb8e3f36":"code","eabfb114":"code","031fead2":"code","d7b60204":"code","e540b2d5":"code","8bca1591":"code","7d90ddaa":"code","25cab60b":"code","e29b8c44":"code","90615728":"code","2eb76ff8":"code","086a21a4":"code","1290edc9":"code","99e84da8":"code","588d35e3":"code","1e024515":"code","2e3e40b3":"code","b116b99c":"code","63321e00":"code","045f141a":"code","0222d848":"code","a14f38ab":"code","2a29b205":"code","dd1b4b4c":"code","80d3644d":"code","5204eb97":"code","abfe5ba4":"code","1d2038aa":"code","2b5c5ba8":"code","841d07f0":"code","2a9a7a8e":"code","18e6220e":"code","5874b98b":"code","959ad7b7":"code","e6d9b10e":"code","43f758ac":"code","9f248eb7":"code","2ae74f20":"code","512c5e3e":"code","98abf8f6":"code","1a9b215d":"code","9396c4db":"code","0413a4da":"code","d5d28bd6":"code","18c1dbd4":"code","0a3d7c55":"code","8914f32a":"code","42ff993d":"code","c37b2763":"code","ddb1e9b6":"code","65135264":"code","be5c8e20":"code","9efbe5c2":"code","8ba9e3a6":"code","db74b56d":"code","46e5a71e":"code","422186a6":"code","c1db4e18":"code","a228b4c1":"code","a874c421":"code","68486fba":"code","cb09f304":"code","a1b38a3f":"code","895e8300":"markdown"},"source":{"c0500e7e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","24f0c62f":"train_data=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","8058e483":"train_data.info()","25e5cc6f":"train_data.describe()","0977def9":"train_data.head()","97c986c8":"test_data=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","307f680c":"train_data","3b3e33d3":"test_data","cab174be":"import matplotlib.pyplot as plt","aba8689b":"%matplotlib inline","ad694148":"import seaborn as sns","a89379b4":"sns.set_style('whitegrid')","3c03f3db":"pd.set_option('precision', 2)","d32cfa40":"plt.figure(figsize=(12,6))\nsns.heatmap(train_data.isnull(),cmap='viridis',yticklabels=False)","41b2e70a":"sns.countplot(train_data['Sex'])","7cf64690":"sns.countplot(x='Survived',data=train_data,hue='Sex')","f332c2d6":"women = train_data.loc[train_data.Sex == 'female']['Survived']\nrate_women = sum(women)\/len(women)\n\nprint(\"% of women who survived:\", rate_women)\n","cd411266":"sns.countplot(x='Survived',data=train_data,hue='Pclass')","efb9a343":"pclass1 = train_data.loc[train_data.Pclass == 1]['Survived']\nrate_Pclass1 = sum(pclass1)\/len(pclass1)\n\npclass2 = train_data.loc[train_data.Pclass == 2]['Survived']\nrate_Pclass2 = sum(pclass2)\/len(pclass2)\n\npclass3 = train_data.loc[train_data.Pclass == 3]['Survived']\nrate_Pclass3 = sum(pclass3)\/len(pclass3)\n\nprint(\"% of First P Class who survived:\", rate_Pclass1)\nprint(\"% of Second P Class who survived:\", rate_Pclass2)\nprint(\"% of Third P Class who survived:\", rate_Pclass3)","f87ae044":"sns.countplot(x='Survived',data=train_data,hue='SibSp')","3e2ec622":"sns.countplot(x='Survived',data=train_data,hue='Parch')","181a2419":"train_data['Fare'].hist(bins=40,figsize=(10,4))","a5eec88d":"sns.boxplot(x='Pclass',y='Age',data=train_data)","9fa78329":"train_data","34cbf887":"plt.figure(figsize=(12,8))\nsns.heatmap(train_data.corr(),annot=True,cmap='viridis')","089fbf5f":"train_data.drop('Cabin',axis=1,inplace=True)","370abe07":"train_data.corr()","6aa83f15":"def impute_age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass==1:\n            return 37\n        elif Pclass==2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","c31baec5":"train_data['Age']=train_data[['Age','Pclass']].apply(impute_age,axis=1)","6f4f2934":"sns.heatmap(train_data.isnull(),yticklabels=False,cbar=False,cmap='viridis')","2b3af2f3":"train_data['Embarked'].unique()","c53c1af8":"train_data.loc[train_data.Embarked.isnull()]","dceeaf39":"train_data.dropna(inplace=True)","cb8e3f36":"sex=pd.get_dummies(train_data['Sex'],drop_first=True)","eabfb114":"sex","031fead2":"embark=pd.get_dummies(train_data['Embarked'],drop_first=True)","d7b60204":"train_data=pd.concat([train_data,sex,embark],axis=1)","e540b2d5":"train_data","8bca1591":"train_data.drop(['Sex','Ticket','Embarked'],axis=1,inplace=True)","7d90ddaa":"X_train=train_data.drop(['Survived','PassengerId'],axis=1)\ny_train=train_data['Survived']","25cab60b":"train_data.head()","e29b8c44":"#X_train=X_train.drop(['Cabin'],axis=1)","90615728":"test_data.head()","2eb76ff8":"test_data.loc[test_data.Embarked.isnull()]","086a21a4":"sns.heatmap(test_data.isnull(),yticklabels=False,cbar=False,cmap='viridis')","1290edc9":"test_data['Age']=test_data[['Age','Pclass']].apply(impute_age,axis=1)","99e84da8":"sns.heatmap(test_data.isnull(),yticklabels=False,cbar=False,cmap='viridis')","588d35e3":"test_data.groupby('Pclass').mean()['Fare']","1e024515":"def impute_fare(cols):\n    Fare=cols[0]\n    Pclass=cols[1]\n    \n    if pd.isnull(Fare):\n        if Pclass==1:\n            return 94.28\n        elif Pclass==2:\n            return 22.20\n        else:\n            return 12.45\n    else:\n        return Fare","2e3e40b3":"test_data['Fare']=test_data[['Fare','Pclass']].apply(impute_fare,axis=1)","b116b99c":"sns.heatmap(test_data.isnull(),yticklabels=False,cbar=False,cmap='viridis')","63321e00":"test_data['Embarked'].unique()","045f141a":"test_sex=pd.get_dummies(test_data['Sex'],drop_first=True)","0222d848":"test_sex","a14f38ab":"test_embark=pd.get_dummies(test_data['Embarked'],drop_first=True)","2a29b205":"test_data=pd.concat([test_data,test_sex,test_embark],axis=1)","dd1b4b4c":"test_data.drop(['Sex','Ticket','Embarked','Cabin'],axis=1,inplace=True)","80d3644d":"test_data.head()","5204eb97":"X_test=test_data.drop('PassengerId',axis=1)","abfe5ba4":"X_test","1d2038aa":"X_train['Title']=X_train['Name'].apply(lambda name: name.split(',')[1].split()[0])\ndummies=pd.get_dummies(X_train['Title'],drop_first=True)\nX_train=pd.concat([X_train,dummies],axis=1)","2b5c5ba8":"X_test['Title']=X_test['Name'].apply(lambda name: name.split(',')[1].split()[0])\ndummies=pd.get_dummies(X_test['Title'],drop_first=True)\nX_test=pd.concat([X_test,dummies],axis=1)","841d07f0":"X_train\n","2a9a7a8e":"X_train=X_train.drop('Name',axis=1)","18e6220e":"X_train=X_train.drop('Title',axis=1)","5874b98b":"X_train","959ad7b7":"X_test","e6d9b10e":"X_test=X_test.drop(['Name','Title'],axis=1)","43f758ac":"X_test","9f248eb7":"X_train.info()","2ae74f20":"X_train=X_train.drop(['the','Sir.','Mlle.','Mme.','Major.','Jonkheer.','Col.','Lady.','Don.'],axis=1)","512c5e3e":"X_test=X_test.drop('Dona.',axis=1)","98abf8f6":"X_train","1a9b215d":"X_test","9396c4db":"X_train=X_train.values\ny_train=y_train.values\nX_test=X_test.values","0413a4da":"X_test.shape","d5d28bd6":"from sklearn.preprocessing import MinMaxScaler","18c1dbd4":"scaler=MinMaxScaler()","0a3d7c55":"X_train=scaler.fit_transform(X_train)","8914f32a":"X_test=scaler.transform(X_test)","42ff993d":"import tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout","c37b2763":"model=Sequential()\nmodel.add(Dense(15,activation='relu'))\n\nmodel.add(Dense(10,activation='relu'))\n\nmodel.add(Dense(1,activation='sigmoid'))\n\nmodel.compile(loss='binary_crossentropy',optimizer='adam')","ddb1e9b6":"model.fit(x=X_train,y=y_train,epochs=300)","65135264":"model_los=pd.DataFrame(model.history.history)","be5c8e20":"model_los.plot()","9efbe5c2":"predictions=model.predict_classes(X_test)","8ba9e3a6":"pred=predictions.tolist()","db74b56d":"pred=pd.Series(pred)","46e5a71e":"pred2=pred.apply(lambda x: x[0])","422186a6":"pred2","c1db4e18":" test_data.PassengerId","a228b4c1":"#from sklearn.linear_model import LogisticRegression","a874c421":"#logmodel=LogisticRegression()","68486fba":"#logmodel.fit(X_train,y_train)","cb09f304":"#predictions=logmodel.predict(X_test)","a1b38a3f":"output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': pred2})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","895e8300":"model_los=pd.DataFrame(model.history.history)"}}