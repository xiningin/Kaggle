{"cell_type":{"2ea63995":"code","7837cafc":"code","741c3757":"code","45f0d9f8":"code","fd31c639":"code","547b5c66":"code","247510f7":"code","aa06ffc8":"code","53ef7b6f":"code","31ff41b5":"code","14755cd5":"code","1663ddb4":"code","de6ae786":"code","9073cf25":"code","14a7a96e":"code","51c2fbdb":"markdown","f529de73":"markdown","7afcb708":"markdown","aa1b6644":"markdown","50dbe2ad":"markdown"},"source":{"2ea63995":"import pandas as pd\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\ntrain = pd.read_csv('..\/input\/happy-whale-and-dolphin\/train.csv')\ntest = pd.read_csv('..\/input\/happy-whale-and-dolphin\/sample_submission.csv')\nimport pickle\nimage_sizes = pickle.load(open('..\/input\/whale-image-eda-image-size\/sizes.pkl','rb'))","7837cafc":"train_sizes = []\nfor name, size in zip(image_sizes['train_images']['names'], image_sizes['train_images']['sizes']):\n    name = name.replace('..\/input\/happy-whale-and-dolphin\/train_images\/','')\n    train_sizes.append({'image':name, 'width': size[0], 'height': size[1]})\ntest_sizes = []\nfor name, size in zip(image_sizes['test_images']['names'], image_sizes['test_images']['sizes']):\n    name = name.replace('..\/input\/happy-whale-and-dolphin\/test_images\/','')\n    test_sizes.append({'image':name, 'width': size[0], 'height': size[1]})","741c3757":"train_images = pd.DataFrame(train_sizes)\ntest_images = pd.DataFrame(test_sizes)","45f0d9f8":"train = train.merge(train_images, on=['image'], how='inner')\ntest = test.merge(test_images, on=['image'], how='inner')","fd31c639":"train","547b5c66":"train['group'] = 'train'\ntrain['predictions'] = ''\ntest['group'] = 'test'\ntest['species'] = ''\ntest['individual_id'] = ''\nall_df = pd.concat([train,test], axis=0)\nall_df['ratio'] = all_df['height']\/all_df['width']\nall_df","247510f7":"all_df['area'] = all_df['width']*all_df['height']","aa06ffc8":"all_df = all_df.reset_index()","53ef7b6f":"def fix_species_name(species):\n    if species in ['bottlenose_dolphin','bottlenose_dolpin']:\n        return 'bottlenose_dolphin'\n    elif species in ['killer_whale','kiler_whale']:\n        return 'kiler_whale'\n    else:\n        return species\nall_df.species = all_df.species.apply(lambda name: fix_species_name(name))","31ff41b5":"import seaborn as sns\nimport matplotlib.pyplot as plt \np = sns.jointplot(\"width\", \"height\", all_df, hue='group')\np.fig.suptitle(\"Train vs Test (Width vs Height)\")\np.fig.set_dpi(100)\n\np = sns.jointplot(\"width\", \"ratio\", all_df, hue='group')\np.fig.suptitle(\"Train vs Test (Width vs Ratio)\")\np.fig.set_dpi(100)\n\np = sns.jointplot(\"height\", \"ratio\", all_df, hue='group')\np.fig.suptitle(\"Train vs Test (Height vs Ratio)\")\np.fig.set_dpi(100)","14755cd5":"prev = 0\nfor max_w in [500,1000,1500,2000,5000]:\n    curr = max_w\n    p = sns.jointplot(\"width\", \"height\", all_df[(all_df.width<curr) & (all_df.width>=prev)], hue='group')\n    p.fig.suptitle(f\"Train vs Test Width:{prev} to {curr}\")\n    p.fig.set_dpi(100)\n    prev = curr","1663ddb4":"prev = 0\nfor max_h in [500,1000,1500,2000,5000]:\n    curr = max_h\n    p = sns.jointplot(\"width\", \"height\", all_df[(all_df.height<curr) & (all_df.height>=prev)], hue='group')\n    p.fig.suptitle(f\"Train vs Test Height:{prev} to {curr}\")\n    p.fig.set_dpi(100)\n    prev = curr","de6ae786":"all_species = set(all_df['species'].values)-set([''])\nlen(all_species)","9073cf25":"for name in all_species:\n    p = sns.jointplot(\"width\", \"height\", all_df[(all_df.species==name)], hue='group')\n    p.fig.suptitle(f\"{name} distribution\")\n    p.fig.set_dpi(100)","14a7a96e":"all_df.to_csv('all.csv', index=False)","51c2fbdb":"# Interesting Data split by height is good option","f529de73":"# Please Upvote if you find this Helpful","7afcb708":"# **frasiers dolphin are outliers from all other species**","aa1b6644":"# Train vs Test images are well overlapped","50dbe2ad":"# Can we find the source from width\/height\/species analysis ? "}}