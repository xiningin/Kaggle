{"cell_type":{"1fdd3452":"code","230227f6":"code","384f8960":"code","df33fd46":"code","de913ed5":"code","66928f1a":"code","c0311b09":"code","04aeca3d":"code","de38114d":"code","5b03d903":"code","689cf67c":"code","8d111da4":"code","050d834d":"code","fadf3c88":"code","28bae5f4":"code","a9c171ca":"code","b719ca71":"code","b8e8859b":"code","105e9b12":"code","ad95fa06":"code","30d83882":"code","d6d50516":"code","c68270b4":"code","302c1270":"code","cf110be8":"code","f6520700":"code","bd92ad85":"code","3f681c76":"code","42a5225c":"code","825aaad6":"code","5116edda":"code","ae3f0e8c":"code","a63a4487":"code","75c4786c":"code","a5d06864":"code","74757db6":"markdown","4dc45baf":"markdown","be2fb33d":"markdown","3e74ff72":"markdown","fcf8a1ce":"markdown","44b0c3b5":"markdown","db68e2e5":"markdown","6d0e3078":"markdown","34a267b8":"markdown","617d3e4d":"markdown","31c7c564":"markdown","92b50e9e":"markdown"},"source":{"1fdd3452":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","230227f6":"#import dataset\npath = '\/kaggle\/input\/the-big-bang-theory-series-transcript\/1_10_seasons_tbbt.csv'\n\ndf = pd.read_csv(path)","384f8960":"df.head(5)","df33fd46":"df.tail(5)","de913ed5":"#episodes included in the dataset\ndf.episode_name.unique()","66928f1a":"df.person_scene.unique()","c0311b09":"# Continue with loading all necessary libraries\nfrom os import path\nfrom PIL import Image\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nimport matplotlib.pyplot as plt\n","04aeca3d":"#list the main characters\npersons = ['Sheldon', 'Leonard', 'Raj', 'Penny','Howard','Amy','Bernadette']","de38114d":"#other characters\nothers = ['Ramona','Beverley']","5b03d903":"data = df[df.person_scene.isin(persons)]\ndata.head(5)","689cf67c":"sheldon = \" \".join(dialogue for dialogue in data[data[\"person_scene\"]==\"Sheldon\"].dialogue)","8d111da4":"# Create stopword list:\nstopwords = set(STOPWORDS)\nstopwords.update([\"Leonard\",\"Penny\",\"Sheldon\",\"Raj\",\"Howard\",\"Amy\",\"Bernadette\",\"Ramona\",\"Beverly\",\"Cooper\",\"Dr\",\"Leslie\",\"Priya\",\n                  \"one\",\"two\",\"three\",\"first\",\"second\",\"a\",\"an\",\n                  \"it\",\"s\",\"ve\",\"got\",\"make\",\"go\",\"making\",\"going\",\"are\",\"re\",\"do\",\"don\",\"t\",\"give\",\"see\",\"take\",\"think\",\"isn\",\"want\",\n                  \"will\",\"ll\",\"did\",\"didn\",\"let\",\"know\",\"say\",\"need\",\"haven\",\"look\",\"may\",\"come\",\"making\",\"does\",\"doesn\",\"said\",\"made\",\"put\",\n                  \"what\",\"how\",\"m\",\"r\",\"e\",\"u\",\"d\",\"USA\",\"India\",\n                  \"Huh\",\"Uh\",\"Oh\",\"Yes\",\"No\",\"Well\",\"Really\",\"right\",\"Okay\",\"Yeah\",\"So\",\"now\",\"Ew\",\"Ow\",\n                  \"good\",\"bad\",\"ever\",\"never\",\"back\",\"much\",\"many\",\"something\",\"anything\",\"some\",\"any\",\"Maybe\",\"someone\",\"anyone\",\"somebody\",\"anybody\",\n                  \"may\",\"might\",\"Of\",\"course\",\"hello\",\"please\",\"sure\",\n                  \"I\",\"You\",\"me\",\"your\",\"his\",\"her\",\"mine\",\"us\",\"we\",\"them\"\n                 ])","050d834d":"# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=60, background_color=\"white\").generate(sheldon)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","fadf3c88":"leonard = \" \".join(dialogue for dialogue in data[data[\"person_scene\"]==\"Leonard\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=60, background_color=\"white\").generate(leonard)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()\n","28bae5f4":"#Halloween Party Episode\ndf_halloween = df[df.episode_name==\"Series 01 Episode 06 \u2013 The Middle Earth\\xa0Paradigm\"]\ndf_halloween.head()","a9c171ca":"leonard = \" \".join(dialogue for dialogue in df_halloween[df_halloween[\"person_scene\"]==\"Leonard\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=80, background_color=\"white\").generate(leonard)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","b719ca71":"sheldon = \" \".join(dialogue for dialogue in df_halloween[df_halloween[\"person_scene\"]==\"Sheldon\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=80, background_color=\"white\").generate(sheldon)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","b8e8859b":"howard = \" \".join(dialogue for dialogue in df_halloween[df_halloween[\"person_scene\"]==\"Howard\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=50, background_color=\"white\").generate(howard)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","105e9b12":"raj = \" \".join(dialogue for dialogue in df_halloween[df_halloween[\"person_scene\"]==\"Raj\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=50, background_color=\"white\").generate(raj)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","ad95fa06":"#Episode when Leonard's mother comes to visit\ndf_mother = df[df.episode_name==\"Series 02 Episode 15 \u2013 The Maternal\\xa0Capacitance\"]\ndf_mother.head()","30d83882":"beverley = \" \".join(dialogue for dialogue in df_mother[df_mother[\"person_scene\"]==\"Beverley\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=80, background_color=\"white\").generate(beverley)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","d6d50516":"sheldon = \" \".join(dialogue for dialogue in df_mother[df_mother[\"person_scene\"]==\"Sheldon\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=80, background_color=\"white\").generate(sheldon)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","c68270b4":"df_theorem = df[df.episode_name==\"Series 02 Episode 06 \u2013 The Cooper-Nowitzki\\xa0Theorem\"]\ndf_theorem.head()","302c1270":"ramona = \" \".join(dialogue for dialogue in df_theorem[df_theorem[\"person_scene\"]==\"Ramona\"].dialogue)","cf110be8":"# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=100, background_color=\"white\").generate(ramona)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","f6520700":"sheldon = \" \".join(dialogue for dialogue in df_theorem[df_theorem[\"person_scene\"]==\"Sheldon\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=40, background_color=\"white\").generate(sheldon)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","bd92ad85":"df_wildebeast = df[df.episode_name==\"Series 04 Episode 22 \u2013 The Wildebeest\\xa0Implementation\"]\ndf_wildebeast.head()","3f681c76":"bernadette = \" \".join(dialogue for dialogue in df_wildebeast[df_wildebeast[\"person_scene\"]==\"Bernadette\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=80, background_color=\"white\").generate(bernadette)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","42a5225c":"df_chair = df[df.episode_name==\"Series 05 Episode 02 \u2013 The Infestation\\xa0Hypothesis\"]\ndf_chair.head()","825aaad6":"sheldon = \" \".join(dialogue for dialogue in df_chair[df_chair[\"person_scene\"]==\"Sheldon\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=100, background_color=\"white\").generate(sheldon)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","5116edda":"penny = \" \".join(dialogue for dialogue in df_chair[df_chair[\"person_scene\"]==\"Penny\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=50, background_color=\"white\").generate(penny)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","ae3f0e8c":"amy = \" \".join(dialogue for dialogue in df_chair[df_chair[\"person_scene\"]==\"Amy\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=20, background_color=\"white\").generate(amy)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","a63a4487":"show = [\"Series 06 Episode 20 \u2013 The Tenure\\xa0Turbulence\"]\ndf_tenure = df[df.episode_name.isin(show)]\ndf_tenure.head(5)","75c4786c":"raj = \" \".join(dialogue for dialogue in df_tenure[df_tenure[\"person_scene\"]==\"Raj\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=80, background_color=\"white\").generate(raj)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","a5d06864":"leonard = \" \".join(dialogue for dialogue in df_tenure[df_tenure[\"person_scene\"]==\"Leonard\"].dialogue)\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, max_words=80, background_color=\"white\").generate(leonard)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")","74757db6":"I create a list with stopwords. The list includes words that are often used in sentences.","4dc45baf":"**The Wildebeast Implementation Episode**","be2fb33d":"Now, let's find out which words are mostly used by Sheldon.","3e74ff72":"**Episode first visit Leonard's mother**","fcf8a1ce":"This dataset contains dialogues from the sitcom. What words are mostly used by the main characters?","44b0c3b5":"# **The Big Bang Theory TV Series Transcript**","db68e2e5":"**Halloween Party Episode**","6d0e3078":"**The Tenure Turbulence**","34a267b8":"Now, let's look at the words at episode level.","617d3e4d":"**The Cooper-Nowitzki Theorem**","31c7c564":"Thanks for opening this notebook! I found this great dataset while I was scrolling through the public datasets page. The Big Bang Theory is my favorite sitcom! The show premiered on September 24, 2007, and it concluded on May 16, 2019. In this notebook, I explore the data by generating Word Clouds. WordClouds in Python allows us to explore text data. Enjoy!","92b50e9e":"**The episode with the new chair in Penny's appartment**"}}