{"cell_type":{"49a4be21":"code","e4927f30":"code","8eb5e511":"code","cfd5c479":"code","ab6d7d64":"code","f82dc351":"code","d11b8ab4":"code","8c041d05":"code","b11f1e62":"code","cd2b140a":"code","40738d04":"code","ae6a3a68":"code","164b6bc1":"code","947f7fbb":"code","d3b7012a":"code","0535d75b":"code","ff1221e4":"code","f828ac8e":"code","a7d6691a":"markdown","82dd100d":"markdown","db97b893":"markdown","77430fc6":"markdown","abd0e835":"markdown","7d138a43":"markdown","92c95b27":"markdown","2d5cb38f":"markdown","7694d9c7":"markdown","62f61dae":"markdown","aec6eeeb":"markdown","5ae0ebec":"markdown","0dbcc0ee":"markdown","f83f8663":"markdown"},"source":{"49a4be21":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom pandas.plotting import autocorrelation_plot\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import MinMaxScaler, RobustScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\n\n\nimport xgboost as xgb\nfrom xgboost import plot_importance, plot_tree\nimport pickle\nfrom math import sqrt\n","e4927f30":"seed = 42","8eb5e511":"dat_dir = '\/kaggle\/input\/bitcoin-historical-data'\ndat_file = 'bitstampUSD_1-min_data_2012-01-01_to_2021-03-31.csv'\ndf = pd.read_csv(os.path.join(dat_dir, dat_file))\ndf.head()","cfd5c479":"\ndf.Timestamp = pd.to_datetime(df.Timestamp, unit='s')\ndf.index = df.Timestamp\ndf = df.resample('D').mean()\ndf = df.dropna()\ndf.head()","ab6d7d64":"df.shape","f82dc351":"\ndf.Weighted_Price.plot(title = \"Bitcoin Price\", figsize=(14,6))\nplt.tight_layout()\nplt.xlabel('Years')\nplt.ylabel('US Dollars')\nplt.show()\n","d11b8ab4":"autocorrelation_plot(df)\nplt.show()","8c041d05":"\ndf.Weighted_Price.iloc[-200:].plot(title = \"Bitcoin Price\", figsize=(14,6))\nplt.tight_layout()\nplt.xlabel('Years')\nplt.ylabel('US Dollars')\nplt.show()","b11f1e62":"\ndf = df.iloc[(-365*4):]\nprint(df.shape)","cd2b140a":"df.Weighted_Price.plot(title = \"Bitcoin Price\", figsize=(14,6))\nplt.tight_layout()\nplt.xlabel('Dates')\nplt.ylabel('$ Price')\nplt.show()","40738d04":"X = df\nsize = int(len(X) * 0.7)\ndata_train, data_test = X[0:size], X[size:len(X)]","ae6a3a68":"# a method to create a variety of features from a time series df\ndef create_features(df, label=None):\n    df['date'] = df.index\n    df['hour'] = df['date'].dt.hour\n    df['dayofweek'] = df['date'].dt.dayofweek\n    df['quarter'] = df['date'].dt.quarter\n    df['month'] = df['date'].dt.month\n    df['year'] = df['date'].dt.year\n    df['dayofyear'] = df['date'].dt.dayofyear\n    df['dayofmonth'] = df['date'].dt.day\n    df['weekofyear'] = df['date'].dt.weekofyear\n    X = df[['hour','dayofweek','quarter','month','year',\n           'dayofyear','dayofmonth','weekofyear']]\n    if label:\n        y = df[label]\n        return X, y\n    return X","164b6bc1":"# assigning training and testing, features and labels (price)\nX_train, y_train = create_features(data_train, label='Weighted_Price')\nX_test, y_test = create_features(data_test, label='Weighted_Price')","947f7fbb":"model =  xgb.XGBRegressor(objective ='reg:linear',min_child_weight=10, booster='gbtree', colsample_bytree = 0.3, learning_rate = 0.1,\n                max_depth = 5, alpha = 10, n_estimators = 100)\nmodel.fit(X_train, y_train, eval_set=[(X_train, y_train), (X_test, y_test)], early_stopping_rounds=50, verbose=False)","d3b7012a":"# assign predictions to data_test and then data_all\ndata_test['Weighted_Price_Prediction'] = model.predict(X_test)\ndata_all = pd.concat([data_test, data_train], sort=False)","0535d75b":"data_all[['Weighted_Price','Weighted_Price_Prediction']].plot(figsize=(15, 5))","ff1221e4":"data_test.head()","f828ac8e":"rmse = np.sqrt(mean_squared_error(data_test['Weighted_Price'], data_test['Weighted_Price_Prediction']))\nprint('Test RMSE: %.3f' % rmse)","a7d6691a":"Graph bitcoin price over the years.","82dd100d":"As the graph shows 2017-2021 price behavior looks signficantly different than 2012-2017","db97b893":"Since the first couple years of bitcoin don't properly represent the movement and volatility of the price. we focus on the previous 4 years of data before March 31st, 2021.","77430fc6":"# Prepare data","abd0e835":"Let's look again on the data:","7d138a43":"# Explore data","92c95b27":"Plot the autocorrelation to see if there are a large number of lags in the time series","2d5cb38f":"XGBoost is one of the most popular machine learning algorithms these days. Regardless of the type of prediction task at hand; regression, or classification. XGBoost is well known to provide better solutions than other machine learning algorithms. In fact, since its inception, it has become the \u201cstate-of-the-art\u201d machine learning algorithm to deal with structured data. However, in this situation we will be using it on time series data. Therefore, the model needed to create time series features from the datetime index - to be used alongside its target price labels when predicting. Unfortunately, in the end the model did not fair well.","7694d9c7":"# Model","62f61dae":"# Load data","aec6eeeb":"- Resample the data to the average daily value of each column. \n- Removes excessive frequency.\n- Drop any missing values that are present","5ae0ebec":"let's look at the past 200 days to possibly adjust our data to this period","0dbcc0ee":"# Clean data","f83f8663":"# Evaluate"}}