{"cell_type":{"0e1a8819":"code","c9ddff33":"code","81fbd5f7":"code","dae57a40":"code","eb4ed50b":"code","535c567e":"code","a41b1b6e":"code","652a99f9":"code","6dab691b":"code","108b1776":"code","df48960c":"code","2e15312b":"code","56fd9ac4":"code","e3bfd6ab":"code","fc39293e":"code","ac32cdd0":"code","067d672c":"code","f9a8e09d":"code","dfe4c26c":"code","85416651":"markdown","0d75c557":"markdown","24a46778":"markdown","82d1bcd8":"markdown","13213a75":"markdown"},"source":{"0e1a8819":"#Importing Libraries  \n\nimport pandas as pd \nimport numpy as np \n\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\n\n\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline\n\n\nimport scipy.stats as st\nimport sklearn.metrics as sm","c9ddff33":"#Loading the data set \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\ndata = pd.read_csv('\/kaggle\/input\/austin-weather\/austin_weather.csv')\ndata","81fbd5f7":"# checking the shape and variable types in dataset \nprint(data.shape)\nprint(data.dtypes)","dae57a40":"# Cleaning the data \n\ndata.isnull().sum()\n\n# Here the number of null values in Event column is displayed as 0 but we can see some missing rows in that column. \n# So, its good to go through the raw data beforehand\n","eb4ed50b":"# Checking for charecters in object columns with numerical values\nprint('Unique values in DewPointHF:\\n',data.DewPointHighF.unique())\nprint('\\nUnique values in DewPointAvgF:\\n',data.DewPointAvgF.unique())\nprint('\\nUnique values in DewPointLowF:\\n',data.DewPointLowF.unique())\n\nprint('\\nUnique values in HumidityHighPercent:\\n',data.HumidityHighPercent.unique())\nprint('\\nUnique values in HumidityAvgPercent:\\n',data.HumidityAvgPercent.unique())\nprint('\\nUnique values in HumidityLowPercent:\\n',data.HumidityLowPercent.unique())\n\nprint('\\nUnique values in SeaLevelPressureHighInches:\\n',data.SeaLevelPressureHighInches.unique())\nprint('\\nUnique values in SeaLevelPressureAvgInches:\\n',data.SeaLevelPressureAvgInches.unique())\nprint('\\nUnique values in SeaLevelPressureLowInches:\\n',data.SeaLevelPressureLowInches.unique())\n\nprint('\\nUnique values in VisibilityHighMiles:\\n',data.VisibilityHighMiles.unique())\nprint('\\nUnique values in VisibilityAvgMiles:\\n',data.VisibilityAvgMiles.unique())\nprint('\\nUnique values in VisibilityLowMiles:\\n',data.VisibilityLowMiles.unique())\n\nprint('\\nUnique values in WindHighMPH:\\n',data.WindHighMPH.unique())\nprint('\\nUnique values in WindAvgMPH:\\n',data.WindAvgMPH.unique())\nprint('\\nUnique values in WindGustMPH:\\n',data.WindGustMPH.unique())\n\nprint('\\nUnique values in PrecipitationSumInches:\\n',data.PrecipitationSumInches.unique())\n\nprint('\\nUnique values in Events:\\n',data.Events.unique())\n\n","535c567e":"# Removing charecters from the datset\n\ndata = data.replace(to_replace =\"-\", value =\"0\")\ndata = data.replace(to_replace = ' ', value = 'Nan')\ndata['PrecipitationSumInches'] = data[['PrecipitationSumInches']].replace('T', '0')","a41b1b6e":"# Changing dtypes\n\ndata['Date'] = pd.to_datetime(data.Date)\n\ndata['DewPointHighF'] = data['DewPointHighF'].astype(float)\ndata['DewPointAvgF'] = data['DewPointAvgF'].astype(float)\ndata['DewPointLowF'] = data['DewPointLowF'].astype(float)\ndata['HumidityHighPercent'] = data['HumidityHighPercent'].astype(float)\ndata['HumidityAvgPercent'] = data['HumidityAvgPercent'].astype(float)\ndata['HumidityLowPercent'] = data['HumidityLowPercent'].astype(float)\ndata['SeaLevelPressureHighInches'] = data['SeaLevelPressureHighInches'].astype(float)\ndata['SeaLevelPressureAvgInches'] = data['SeaLevelPressureAvgInches'].astype(float)\ndata['SeaLevelPressureLowInches'] = data['SeaLevelPressureLowInches'].astype(float)\ndata['VisibilityHighMiles'] = data['VisibilityHighMiles'].astype(float)\ndata['VisibilityAvgMiles'] = data['VisibilityAvgMiles'].astype(float)\ndata['VisibilityLowMiles'] = data['VisibilityLowMiles'].astype(float)\ndata['WindHighMPH'] = data['WindHighMPH'].astype(float)\ndata['WindAvgMPH'] = data['WindAvgMPH'].astype(float)\ndata['WindGustMPH'] = data['WindGustMPH'].astype(float)\ndata['PrecipitationSumInches'] = data['PrecipitationSumInches'].astype(float)\n","652a99f9":"# Encoding categorial Column with LabelEncoder\n\nlabel = LabelEncoder()\ndata['Events'] = label.fit_transform(data['Events'].astype('str'))\n\nprint(data['Events'].head())\nprint(data.Events.unique())","6dab691b":"data.dtypes","108b1776":"# Extracting Year , Month and Day from Column Date\n\ndata['Year'] = data['Date'].dt.year\ndata['Month'] = data['Date'].dt.month\ndata['Day'] = data['Date'].dt.day","df48960c":"data = data.drop('Date' ,axis = 1)\ndata.head()","2e15312b":"# Correlation between the data Dimensionss \n\ncorrMatrix = data.corr()\nplt.figure(figsize=(12, 12))\nsns.heatmap(corrMatrix, annot=True,)","56fd9ac4":"#Spliting the data \nx = data.drop('TempHighF' , axis = 1).values\ny = data['TempHighF'].values","e3bfd6ab":"X_train , X_test , Y_train , Y_test = train_test_split(x,y, test_size = 0.3 , random_state = 0)","fc39293e":"lnr = LinearRegression()\n\nlnr.fit(X_train,Y_train)","ac32cdd0":"y_pred = lnr.predict(X_test)\n","067d672c":"df = pd.DataFrame({'Actual': Y_test, 'Predicted': y_pred})\n\ndf.head()","f9a8e09d":"plt.style.use('dark_background')\nplt.figure(figsize=(10, 10))\nplt.scatter(Y_test, y_pred, c = 'red')\nplt.xlabel('Actual values')\nplt.ylabel('Predicted Values')","dfe4c26c":"# Checking the accuracy  of the model \n\nprint(\"Accuracy of the model =\",lnr.score(X_train, Y_train))\nprint(\"Mean absolute error =\", round(sm.mean_absolute_error(Y_test, y_pred),2)) \nprint(\"Mean squared error =\", round(sm.mean_squared_error(Y_test, y_pred), 2)) \nprint(\"Median absolute error =\", round(sm.median_absolute_error(Y_test, y_pred), 2)) \nprint(\"Explain variance score =\", round(sm.explained_variance_score(Y_test, y_pred), 2)) \nprint(\"R2 score =\", round(sm.r2_score(Y_test, y_pred), 2))\n","85416651":"* # R2 is a statistic that will give some information about the goodness of fit of a model. \n* # In regression, the R2 coefficient of determination is a statistical measure of how well the regression predictions approximate the real data points.\n* # An R2 of 1 indicates that the regression predictions perfectly fit the data","0d75c557":"# Loading and Cleaning the data","24a46778":"#        **Multiple** **Regression** **Analysis**","82d1bcd8":"# From the plot our model looks like a very good fit for this data ","13213a75":"# Data is cleaned and ready for Regression analysis"}}