{"cell_type":{"4515db95":"code","b62c1edb":"code","4f91d039":"code","e0094380":"code","60b48517":"code","01d5be57":"code","2eb13da5":"code","2c3ac10d":"code","78ba04ca":"code","272016cd":"code","5ed75ad2":"code","c50e9930":"code","3a4ae595":"code","1c7efe8b":"code","5450faed":"code","61136bcd":"code","e8529b67":"code","463cc4d2":"code","db2edb28":"code","620c48b0":"markdown","7b4a3cba":"markdown","7af8e9e8":"markdown"},"source":{"4515db95":"import numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.metrics import roc_auc_score, roc_curve, accuracy_score\nfrom sklearn.metrics import precision_score, recall_score\nfrom sklearn import preprocessing\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n","b62c1edb":"test = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntrain = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\n","4f91d039":"train.head()","e0094380":"test.head()","60b48517":"test.describe()","01d5be57":"train.describe()","2eb13da5":"test.dtypes\n","2c3ac10d":"train.dtypes","78ba04ca":"# We will see if there's a relationship between SalesPrice and OverallQual: overall material and finish of the house.\n# 1-10 where 1=Very Poor and 10=Very Excellent\nsns.barplot(train.OverallQual,train.SalePrice)\n","272016cd":"# Scatter plot to see the relationship between numerical values\n\n#lotarea = px.scatter(house, x='LotArea', y='SalePrice')\n#lotarea.update_layout(title='Sales Price Vs Area',xaxis_title=\"Area\",yaxis_title=\"Price\")\n#lotarea.show()\n\n\nplt.scatter(x =train.LotArea,y = train.SalePrice,c = 'black')\nplt.title('Sales Price Vs Area')\nplt.xlabel('LotArea')\nplt.ylabel('SalePrice')\nplt.show()","5ed75ad2":"# Distribution of SalesPrice \nprint(train['SalePrice'].describe())\nsns.distplot(train['SalePrice'], color='g', bins=100, hist_kws={'alpha': 0.5});\n\n","c50e9930":"train.dtypes","3a4ae595":"# we will now only inlcude the numerical variables to see numerical distribution as a whole\ntrain_num = train.select_dtypes(include = ['float64', 'int64'])\ntrain_num.head()","1c7efe8b":"train_num.hist(figsize=(16, 20), bins=50, xlabelsize=8, ylabelsize=8);\n\n","5450faed":"# pulling data into  the target (y) which is the SalePrice and predictors (X)\ntrain_y = train.SalePrice\npred_cols = ['LotArea', 'OverallQual', 'YearBuilt', 'TotRmsAbvGrd']","61136bcd":"#prediction data\ntrain_x = train[pred_cols]\n\nmodel =  LogisticRegression()\n\nmodel.fit(train_x, train_y)","e8529b67":"# pulling same columns from the test data\ntest_x = test[pred_cols]\npred_prices = model.predict(test_x)\nprint(pred_prices)","463cc4d2":"#save file\nayesha_submission = pd.DataFrame({'Id': test.Id, 'SalePrice' : pred_prices})\nayesha_submission.to_csv('submission.csv', index=False)","db2edb28":"#sns.distplot(train.loc[:,feature], norm_hist=True, ax = ax1)\n","620c48b0":"After looking at the graph we can see that the variable SalesPrice is skewed right\nand there are some outliers which are above ~500,000. We will get rid of them\nto get normal ditribution of the independent variable (`SalePrice`).","7b4a3cba":"### Import packages (libraries)","7af8e9e8":"### Show first few rows"}}