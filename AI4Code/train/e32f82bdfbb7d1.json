{"cell_type":{"8be57613":"code","35295cb7":"code","cd9108d3":"code","e877ef42":"code","cf698c72":"code","9780ab09":"code","834868a4":"code","30c66d19":"code","fe7cb72c":"code","1356f97c":"code","6093ac98":"code","2726dfc7":"code","49db76cf":"code","e23193aa":"code","cec0682e":"code","de4036a8":"code","99991810":"code","9d33d047":"code","85706065":"code","052a5efd":"code","f57df35f":"code","843e6cb9":"code","4eddcc90":"code","07f6e74e":"code","4ea5ba3b":"code","dc048e21":"code","bbd89ace":"code","7f95a75d":"code","c06e9777":"code","715fa9ba":"code","66570223":"code","680e3338":"code","943cd8da":"code","544e35ac":"code","f2f0c5ca":"code","7f8d21d9":"code","579a9324":"code","be1f9eb5":"code","a64079aa":"code","b2e46ead":"code","4baccbeb":"code","c06193c3":"code","82429a07":"code","796e107c":"code","34e00b01":"code","3ac3b86c":"code","6ad04332":"code","33031c1e":"code","6dd484a1":"code","79e6fec9":"code","972d9d7c":"code","a8177733":"code","aa523153":"code","cf4b999b":"code","6f54f079":"code","9247a6e0":"code","02c4e53e":"code","c51a3061":"code","2f838ff4":"code","71896a0f":"code","e8252394":"code","e2fb017d":"code","9fd11b86":"code","3c8643e6":"code","4ac1d045":"code","ab3ad8dc":"code","cb019edf":"code","1e5a5c4f":"code","67085454":"code","ec2e3932":"code","c481a771":"code","ab8c4ae8":"code","8c1c4262":"code","e363bef1":"code","b0dd8fc5":"code","591aec52":"code","4fd1f9c2":"code","a54e12f1":"code","8198eda2":"code","8e5b420f":"code","2357280d":"code","219a10ac":"code","a2b50a60":"code","096d76fb":"code","efa42577":"code","e7d1eb96":"code","7d29b2d9":"code","5dc9eecb":"code","0724b412":"code","e89993dd":"code","f25db139":"code","03de1d67":"code","8e55e2c4":"code","584b2174":"code","3f8d8518":"code","accb9ee1":"code","85911aec":"code","37228be1":"code","8a8154f4":"code","96b2b563":"code","1dcf319c":"code","f2f923c7":"code","9103d83d":"code","37d6eecd":"code","f59401bd":"code","9294fa2f":"code","d02c93a4":"code","6967ea55":"code","4f629197":"code","3bd6b9c3":"code","86182f31":"code","550d9d9c":"code","7e167904":"code","242a4056":"code","8ae098e7":"code","5cb4f1aa":"code","fdec51d0":"code","f1a66d23":"code","f8f6e546":"code","7ceb8ed7":"code","23db1b70":"code","1ed69d29":"code","81c6c6b8":"code","d584eb93":"code","97330564":"code","8df57d59":"code","fa95d289":"code","1fcd1ec5":"code","40552ea7":"code","78b7bc8b":"code","279de0f0":"code","ba18e286":"code","5471391f":"code","402a44e1":"code","c4c1e49e":"code","7b6ff1a5":"code","cb17cdf6":"code","613c1ad5":"code","7d73a138":"code","15f3e235":"markdown","c762d280":"markdown","f1a256cc":"markdown","01dcb4cc":"markdown","fc30f99b":"markdown","de5fa1f1":"markdown","9e004528":"markdown","2783371f":"markdown","4f386e65":"markdown","2d77327e":"markdown","b758d951":"markdown","c16c85b6":"markdown","bf79de70":"markdown","8d208925":"markdown","3811e96e":"markdown","d35a43d4":"markdown","08dc4e10":"markdown","36900a5e":"markdown","1e043c34":"markdown","180bf68f":"markdown","3032890c":"markdown","e5d586fe":"markdown","408a6a29":"markdown","ee0c2b91":"markdown","185bcd02":"markdown","511d0fd5":"markdown"},"source":{"8be57613":"print('HELLO WORLD')","35295cb7":"r_message = 'hello world'\n\nprint('hi')","cd9108d3":"print(r_message)","e877ef42":"r_name = 'rumeysa'\nr_surname = 'kayk\u0131s\u0131z'\n \nr_fullname = r_name + r_surname \nprint(r_fullname)","cf698c72":"r_fullname = r_name +' '+ r_surname \nprint(r_fullname)","9780ab09":"r_num1 = '100'\nr_num2 = '200'\nr_numSum1 = r_num1 + r_num2\nprint(r_numSum1)","834868a4":"#LENGHT\nr_lenFull = len(r_fullname)\nprint('r_fullname :',r_fullname,'and lenght is :',r_lenFull)","30c66d19":"r_titleF = r_fullname.title()\nprint('r_fullname:',r_fullname,'and title is :',r_titleF)","fe7cb72c":"#UPPER:\nr_upperF = r_fullname.upper()\n\n#LOWER\nr_lowerF = r_fullname.lower()\nprint('r_fullname:',r_fullname,'upper :',r_upperF,'lower :',r_lowerF)\n","1356f97c":"r_2ch = r_fullname[11]\nprint(r_2ch)","6093ac98":"r_num1 = 100\nr_num2 = 200\nr_sum1 = r_num1 + r_num2  \n\nprint(r_sum1 , \"and type :\" ,type (r_sum1))","2726dfc7":"r_num1 = r_num1 + 60\nr_num2 = r_num2 - 25.5\nr_sum1 = r_num1 + r_num2\n\nprint(r_num1)","49db76cf":"print(\"r_sum1 : \",r_sum1,'type :',type(r_sum1))","e23193aa":"r_fl1 = 25.5\nr_fl2 = 15.5\nr_s3 = r_fl1 + r_fl2\n\nprint(r_s3,type(r_s3))","cec0682e":"def f_SayHello():\n    print('Hi,I am coming from f_SayHello')\n    \ndef f_SayHello2():\n    print('Hi,I am coming from f_SayHello2')\n    print('Good')\n    \nf_SayHello()    \n        ","de4036a8":"f_SayHello2()","99991810":"def f_sayMessage(r_Message1) :\n    print (r_Message1 ,\"came from 'f_sayMessage'\")\n    \ndef f_getFullname (r_FirstName,r_Surname,r_Age):\n    print (\"Welcome\",r_FirstName,\" \",r_Surname,\"your age:\",r_Age)","9d33d047":"f_sayMessage('How are you?')","85706065":"f_getFullname(\"Rumeysa\",\"KAYKISIZ\",16)","052a5efd":"def f_Calc1(f_Num1,f_Num2,f_Num3):\n    r_Sonuc = f_Num1 + f_Num2 + f_Num3\n    print('sonu\u00e7=',' ',r_Sonuc)","f57df35f":"f_Calc1(100,250,50)","843e6cb9":"# return funct\u0131on\ndef f_Calc2(r_Num1 , r_Num2,r_Num3):\n    r_Out = r_Num1 + r_Num2 + r_Num3 * 2\n    print('Hi from f_Calc2')\n    return r_Out","4eddcc90":"r_gelen = f_Calc2(1,2,3)\nprint('Score is :',r_gelen)","07f6e74e":"#Default Functions :\ndef f_getSchoolInfo(r_Name , r_StudentCount , r_City = \"ISTANBUL\"):\n    print(\"Name :\", r_Name , \"St Count:\",r_StudentCount ,\"City:\" , r_City)","4ea5ba3b":"f_getSchoolInfo(\"AAIHL\",521)\nf_getSchoolInfo(\"Ankara Fen\",521,\"ANKARA\")","dc048e21":"#Flexible Function:\ndef f_Flex1(r_Name , *r_messages):\n    print(\"Hi\",r_Name , \"your first message is:\",r_messages[2])","bbd89ace":"f_Flex1(\"Rumeysa\", \"Selam\", \"Naber\",\"\u0130yisindir \u0130n\u015fAllah\")","7f95a75d":"#Lambda Function:\n\nr_result1 = lambda x:x*3\nprint(\"Result is :\", r_result1(6))","c06e9777":"def f_alan(kenar1 ,kenar2):\n    print(kenar1 * kenar2)","715fa9ba":"f_alan(6,8)","66570223":"l_list1=[1,5,3,6,8,9]\nprint(l_list1)\nprint(\"type of'l_list1'is:\",type(l_list1))","680e3338":"l_list2=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\nprint(l_list2)\nprint(\"type of'l_list2'is:\",type(l_list1))","943cd8da":"r_list2_4= l_list2[3]\nprint(r_list2_4)\nprint(\"Type of'r_list2_4'is:\",type(r_list2_4))","544e35ac":"r_list2_x3 = l_list2[-3]\nprint (r_list2_x3)","f2f0c5ca":"l_list2_2=l_list2[0:3]\nprint(l_list2_2)\n","7f8d21d9":"#Len\n\nr_len_l_list2_2=len(l_list2_2)\nprint(\"Size of 'l_list2_2'is:\",r_len_l_list2_2)\nprint(l_list2_2)","579a9324":"#Append\nl_list2_2.append(\"Saturday\")\nprint(l_list2_2)\n\nl_list2_2.append(\"Tuesday\")\nprint(l_list2_2)","be1f9eb5":"#Reverse\nl_list2_2.reverse()\nprint(l_list2_2)","a64079aa":"#Sort\nl_list2_2.sort()\nprint(l_list2_2)","b2e46ead":"#Remove\n\n#First add 'Saturday' then Remove 'Saturday'\nl_list2_2.append(\"Saturday\")\nprint(l_list2_2)","4baccbeb":"l_list2_2.remove(\"Saturday\")\nprint(l_list2_2)","c06193c3":"d_dict1={\"\u015einasi\":\"\u015eair Evlenmesi\",\"Mehmet Rauf\":\"Eyl\u00fcl\",\"Nam\u0131k Kemal\":\"\u0130ntibah\"}\n\nprint(d_dict1)\nprint(type(d_dict1))","82429a07":"r_\u015einasi=d_dict1[\"\u015einasi\"]\nprint(r_\u015einasi)\nprint(type(r_\u015einasi))","796e107c":"\n\nr_keys=d_dict1.keys()\nr_values=d_dict1.values()\n\nprint(r_keys)\nprint(r_values)\nprint(type(r_values))","34e00b01":"r_var1=15\nr_var2=20\n\nif r_var1 > r_var2:\n    print(r_var1,\"is greater then\",r_var2)\nelif r_var1 < r_var2:\n    print(r_var1,\"is smaller then\",r_var2)\nelse:\n    print(\"This 2 variables are equal\")\n    ","3ac3b86c":"def f_comparison1(r_comp1,r_comp2):\n    if r_comp1>r_comp2:\n        print(r_comp1,\"is greater then\",r_comp2)\n    elif r_comp1 < r_comp2:\n        print(r_comp1,\"is smaller then\",r_comp2)\n    else:\n        print(\"These\",r_comp1,\"variablesare equal\")\n        \nf_comparison1(25,42)\nf_comparison1(85,62)\nf_comparison1(8,8)","6ad04332":"\n\n\n\ndef f_IncludeOrNot(r_search,r_searchlist):\n    if r_search in r_searchlist:\n        print(\"Good news!\",r_search ,\"is in list.\")\n    else :\n        print(r_search ,\"is not in list.Sorry :(\")\n        \nl_list = list (d_dict1. keys()) \nprint(l_list)\nprint(type(l_list))\n\nf_IncludeOrNot (\"\u015einasi\",l_list)\nf_IncludeOrNot (\"Mevlana\",l_list)\n\n  ","33031c1e":"for a in range(10,20):\n    print(\"Hi\" , a)\n   ","6dd484a1":"r_happyMessage = \"GOOD MORNING\"\nprint(r_happyMessage)\n\n","79e6fec9":"for  r_chrs in r_happyMessage :\n    print(r_chrs)\n    print(\"-------\")","972d9d7c":"for r_chrs in r_happyMessage.split():\n    print(r_chrs)","a8177733":"print(l_list1)\nr_sum_list1 = sum(l_list1)\nprint(\"Sum of l_list1 is : \" , r_sum_list1)\n\nprint()\nr_cum_list1 = 0\nr_loopindex = 0\nfor r_current in l_list1:\n    r_cum_list1 = r_cum_list1 + r_current\n    print(r_loopindex , \" nd value is : \" , r_current)\n    print(\"Cumulative is : \" , r_cum_list1)\n    r_loopindex = r_loopindex + 1\n    print(\"------\")\n","aa523153":"i=0\nwhile(i<4):\n    print(\"Hi\", i)\n    i=i+1","cf4b999b":"print(l_list1)\nprint()\n\ni=0\nk=len(l_list1)\n\nwhile(i<k):\n    print(l_list1[i])\n    i=i+1\n","6f54f079":"#Let's find minimum and maximum number in list\n\nl_list2=[0,5,-6,-698,-45,56,-56,-9,7]\n\nr_min=0\nr_max=0\n\nr_index=0\nr_len=len(l_list2)\n\nwhile(r_index<r_len):\n    r_current=l_list2[r_index]\n    \n    if r_current > r_max:\n        r_max=r_current\n        \n    if r_current<r_min:\n        r_min=r_current\n        \n    r_index=r_index+1\n    \nprint(\"Maximum number is\",r_max)\nprint(\"Minimum number is\",r_min)\n        \n   ","9247a6e0":"# Import library to use\nimport numpy as np","02c4e53e":"r_array1=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\nr_array2_np=np.array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])","c51a3061":"print(\"r_array1:\",r_array1)\nprint(\"Type of r_array1:\",type(r_array1))","2f838ff4":"print(\"r_array2_np :\",r_array2_np)\nprint(\"Type of r_array2_np:\",type(r_array2_np))","71896a0f":"#Shape\nr_shape1=r_array2_np.shape\nprint(\"r_shape1:\",r_shape1,\"and type is:\",type(r_shape1))","e8252394":"#Reshape\nr_array3_np=r_array2_np.reshape(3,5)\nprint(r_array3_np)\n","e2fb017d":"r_shape2=r_array3_np.shape\nprint(\"r_shape2:\",r_shape2,\"and type is:\",type(r_shape2))","9fd11b86":"#Dimension\nr_dimen1=r_array3_np.ndim\nprint(\"r_dimen1:\",r_dimen1,\" type is:\",type(r_dimen1))","3c8643e6":"#Dtype.name\nr_dtype1=r_array3_np.dtype.name\nprint(\"r_dtype1:\",r_dtype1,\"and type is:\",type(r_dtype1))","4ac1d045":"#Size\nr_size1=r_array3_np.size\nprint(\"r_size1:\",r_size1,\"type is:\",type(r_size1))","ab3ad8dc":"# Let's create 3x4 array\nr_array4_np= np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]])\nprint(r_array4_np)\nprint(\"---------------\")\nprint(\"Shape is:\",r_array4_np.shape)","cb019edf":"#Zeros\nr_array5_np=np.zeros((3,5))\nprint(r_array5_np)","1e5a5c4f":"# Update an item on this array \nr_array5_np[0,2]=21\nprint(r_array5_np)","67085454":"#Ones\nr_array6_np=np.ones((3,3))\nprint(r_array6_np)","ec2e3932":"#Empty\nr_array7_np=np.empty((2,3))\nprint(r_array7_np)","c481a771":"#Arrange\nv_array8_np = np.arange(10,45,5)\nprint(v_array8_np)\nprint(v_array8_np.shape)","ab8c4ae8":"# Linspace\nv_array9_np = np.linspace(10,30,5)\nv_array10_np = np.linspace(10,30,20)\n\nprint(v_array9_np)\nprint(v_array9_np.shape)\nprint(\"-----------------------\")\nprint(v_array10_np)\nprint(v_array10_np.shape)","8c1c4262":"# Sum , Subtract , Square\nv_np1 = np.array([1,2,3])\nv_np2 = np.array([7,8,9])\n\nprint(v_np1 + v_np2)\nprint(v_np1 - v_np2)\nprint(v_np2 - v_np1)\nprint(v_np1 ** 2)","e363bef1":"# Sinus\nprint(np.sin(v_np2))","b0dd8fc5":"# True \/ False\nv_np2_TF = v_np2 < 8\nprint(v_np2_TF)\nprint(v_np2_TF.dtype.name)","591aec52":"# Element wise Prodcut\nv_np1 = np.array([1,2,3])\nv_np2 = np.array([7,8,9])\nprint(v_np1 * v_np2)","4fd1f9c2":"# Transpose\n\nr_np5=np.array([[2,4,8],[3,6,1]])\nr_np5Transpose=r_np5 .T\nprint(r_np5)\nprint(r_np5.shape)\nprint()\nprint(r_np5Transpose)\nprint(r_np5Transpose.shape)","a54e12f1":"# Matrix Multiplication\n\nr_np6=r_np5.dot(r_np5Transpose)\nprint(r_np6)","8198eda2":"# Exponential --> We will use on Statistics Lesson\nr_np5Exp=np.exp(r_np5)\n\nprint(r_np5)\nprint(r_np5Exp)","8e5b420f":"# Random\nr_np8=np.random.random((6,6)) # --> It will get between 0 and 1 random numbers\nprint(r_np8)","2357280d":"#Sum , Max ,Min\nr_np8Sum = r_np8.sum()\nprint(\"Sum of array : \", r_np8Sum)  #--> Remember ! If you get sum of array we can use that :  sum(array1)\nprint(\"Max of array : \", r_np8.max()) #--> Remember ! If you get max of array we can use that :  max(array1)\nprint(\"Min of array : \", r_np8.min()) #--> Remember ! If you get min of array we can use that :  min(array1)","219a10ac":"# Sum with Column or Row\nprint(\"Sum of Columns :\")\nprint(r_np8.sum(axis=0)) # --> Sum of Columns\nprint()\nprint(\"Sum of Rows :\")\nprint(r_np8.sum(axis=1)) #Sum of Rows","a2b50a60":"# Square , Sqrt\nprint(np.sqrt(r_np8))\nprint()\nprint(np.square(r_np8))","096d76fb":"# Add\nv_np10 = np.array([1,2,3,4,5])\nv_np11 = np.array([10,20,30,40,50])\n\nprint(np.add(v_np10,v_np11))","efa42577":"v_np12 = np.array([9,8,7,6,5,4,3,2,1])\n\nprint(\"First item is : \" , v_np12[0])\nprint(\"Third item is : \" , v_np12[2])","e7d1eb96":"# Get top 4 rows :\n\nprint(v_np12[0:4])","7d29b2d9":"# Reverse\n\nv_np12_Rev = v_np12[::-1]\nprint(v_np12_Rev)","5dc9eecb":"v_np13 = np.array([[1,2,3,4,5],[11,12,13,14,15]])\nprint(v_np13)\nprint()\nprint(v_np13[1,3]) #--> Get a row\n\nprint()\nv_np13[1,3] = 314 #--> Update a row\nprint(v_np13)","0724b412":"# Get all rows but 3rd columns :\n\nprint(v_np13[:,2])","e89993dd":"#Get 2nd row but 2,3,4th columns\n\nprint(v_np13[1,1:4])","f25db139":"# Get last row all columns\n\nprint(v_np13[-1,:])","03de1d67":"# Get last columns but all rows\nprint(v_np13[:,-1])","8e55e2c4":"#Flatten\n\nv_np14 = np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])\nv_np15 = v_np14.ravel()\n\nprint(v_np14)\nprint(\"Shape of v_np14 is : \" ,v_np14.shape)\nprint()\nprint(v_np15)\nprint(\"Shape of v_np15 is : \" ,v_np15.shape)\nprint()","584b2174":"# Reshape\n\nv_np16 = v_np15.reshape(3,4)\nprint(v_np16)\nprint(\"Shape of v_np16 is : \" ,v_np16.shape)","3f8d8518":"v_np17 = v_np16.T\nprint(v_np17)\nprint(\"Shape of v_np17 is : \" ,v_np17.shape)","accb9ee1":"v_np20 = np.array([[1,2],[3,4],[5,6]])\n\nprint(v_np20)\nprint()\nprint(v_np20.reshape(2,3))\n\nprint()\nprint(v_np20) #--> It has not changed !!","85911aec":"# Resize\n\nv_np20.resize((2,3))\nprint(v_np20) # --> Now it changed !  Resize can change its shape","37228be1":"v_np21 = np.array([[1,2],[3,4]])\nv_np22 = np.array([[5,6],[7,8]])\n\nprint(v_np21)\nprint()\nprint(v_np22)","8a8154f4":"# Vertical Stack\n\nv_np23 = np.vstack((v_np21,v_np22))\nv_np24 = np.vstack((v_np22,v_np21))\n\nprint(v_np23)\nprint()\nprint(v_np24)","96b2b563":"# Horizontal Stack\n\nv_np25 = np.hstack((v_np21,v_np22))\nv_np26 = np.hstack((v_np22,v_np21))\n\nprint(v_np25)\nprint()\nprint(v_np26)","1dcf319c":"v_list1 = [21,5,28,4]\nv_np30 = np.array(v_list1)\n\nprint(v_list1)\nprint(\"Type of list : \" , type(v_list1))\nprint()\nprint(v_np30)\nprint(\"Type of v_np30 : \" , type(v_np30))","f2f923c7":"v_list2 = list(v_np30)\nprint(v_list2)\nprint(\"Type of list2 : \" , type(v_list2))","9103d83d":"v_list3 = v_list2\nv_list4 = v_list2\n\nprint(v_list2)\nprint()\nprint(v_list3)\nprint()\nprint(v_list4)","37d6eecd":"v_list2[0] = 12\n\nprint(v_list2)\nprint()\nprint(v_list3) # --> Same address with list2\nprint()\nprint(v_list4) # --> Same address with list2","f59401bd":"v_list5 = v_list2.copy()\nv_list6 = v_list2.copy()\n\nprint(v_list5)\nprint()\nprint(v_list6)","9294fa2f":"v_list2[0] = 13\n\nprint(v_list2)\nprint()\nprint(v_list5) # --> Not same address with list2\nprint()\nprint(v_list6) # --> Not same address with list2","d02c93a4":"# Import Library\nimport pandas as pd","6967ea55":"r_dict1 = { \"COUNTRY\" : [\"TURKEY\",\"U.K.\",\"GERMANY\",\"FRANCE\",\"U.S.A\",\"AZERBAIJAN\",\"IRAN\"],\n            \"CAPITAL\":[\"ISTANBUL\",\"LONDON\",\"BERLIN\",\"PARIS\",\"NEW YORK\",\"BAKU\",\"TAHRAN\"],\n            \"POPULATION\":[15.07,8.13,3.57,2.12,8.62,4.3,8.69]}\n\nr_dataFrame1 = pd.DataFrame(r_dict1)\n\nprint(r_dataFrame1)\nprint()\nprint(\"Type of r_dataFrame1 is : \" , type(r_dataFrame1))","4f629197":"r_head1 = v_dataFrame1.head()\nprint(r_head1)\nprint()\nprint(\"Type of r_head1 is :\" ,type(r_head1))\n","3bd6b9c3":"print(r_dataFrame1.head(100))","86182f31":"r_tail1 = r_dataFrame1.tail()\nprint(r_tail1)\nprint()\nprint(\"Type of r_tail1 is :\" ,type(r_tail1))","550d9d9c":"r_columns1 = r_dataFrame1.columns\nprint(r_columns1)\nprint()\nprint(\"Type of r_columns is : \" , type(r_columns1))","7e167904":"r_info1 = r_dataFrame1.info()\nprint(r_info1)\nprint()\nprint(\"Type of r_info1 is : \" , type(r_info1))","242a4056":"r_dtypes1 = r_dataFrame1.dtypes\nprint(r_dtypes1)\nprint()\nprint(\"Type of r_dtypes1 is : \" , type(r_dtypes1))\n","8ae098e7":"r_descr1 = r_dataFrame1.describe()\nprint(r_descr1)\nprint()\nprint(\"Type of r_descr1 is : \" , type(r_descr1))\n","5cb4f1aa":"r_country1 = r_dataFrame1[\"COUNTRY\"]\nprint(r_country1)\nprint()\nprint(\"Type of r_country1 is : \" , type(r_country1))","fdec51d0":"r_currenyList1 = [\"TRY\",\"GBP\",\"EUR\",\"EUR\",\"USD\",\"AZN\",\"IRR\"]\nr_dataFrame1[\"CURRENCY\"] = r_currenyList1\n\nprint(r_dataFrame1.head())","f1a66d23":"r_AllCapital = r_dataFrame1.loc[:,\"CAPITAL\"]\nprint(r_AllCapital)\nprint()\nprint(\"Type of v_AllCapital is : \" , type(r_AllCapital))","f8f6e546":"r_top3Currency = r_dataFrame1.loc[0:3,\"CURRENCY\"]\nprint(r_top3Currency)","7ceb8ed7":"r_CityCountry = r_dataFrame1.loc[:,[\"CAPITAL\",\"COUNTRY\",\"BLABLA\"]] #--> BLABLA not defined !!!\nprint(r_CityCountry)","23db1b70":"r_Reverse1 = r_dataFrame1.loc[::-1,:]\nprint(r_Reverse1)","1ed69d29":"print(r_dataFrame1.loc[:,:\"POPULATION\"])\nprint()\nprint(r_dataFrame1.loc[:,\"POPULATION\":])","81c6c6b8":"print(r_dataFrame1.iloc[:,2])","d584eb93":"r_filter1 = r_dataFrame1.POPULATION > 4\nprint(r_filter1)\n","97330564":"r_filter2 = r_dataFrame1[\"POPULATION\"] < 9\nprint(r_filter2)","8df57d59":"print(r_dataFrame1[r_filter1 & r_filter2])","fa95d289":"print(r_dataFrame1[r_dataFrame1[\"CURRENCY\"] == \"EUR\"])","1fcd1ec5":"r_meanPop =r_dataFrame1[\"POPULATION\"].mean()\nprint(r_meanPop)\n\nr_meanPopNP = np.mean(r_dataFrame1[\"POPULATION\"])\nprint(r_meanPopNP)","40552ea7":"for a in r_dataFrame1[\"POPULATION\"]:\n    print(a)","78b7bc8b":"r_dataFrame1[\"POP LEVEL\"] = [\"Low\" if r_meanPop > a else \"HIGH\" for a in r_dataFrame1[\"POPULATION\"]]\nprint(r_dataFrame1)","279de0f0":"print(r_dataFrame1.columns)\n\nr_dataFrame1.columns = [a.lower() for a in r_dataFrame1.columns]\n\nprint(r_dataFrame1.columns)","ba18e286":"r_dataFrame1.columns = [a.split()[0]+\"_\"+a.split()[1] if (len(a.split())>1) else a for a in r_dataFrame1.columns]\nprint(r_dataFrame1.columns)","5471391f":"r_dataFrame1[\"test1\"] = [-1,-2,-3,-4,-5,-6,-7]\n\nprint(r_dataFrame1)","402a44e1":"r_dataFrame1.drop([\"test1\"],axis=1,inplace = True) #--> inplace = True must be written\nprint(r_dataFrame1)","c4c1e49e":"r_data1 = r_dataFrame1.head()\nr_data2 = r_dataFrame1.tail()\n\nprint(r_data1)\nprint()\nprint(r_data2)","7b6ff1a5":"r_dataConcat1 = pd.concat([r_data1,r_data2],axis=0) # axis = 0 --> VERTICAL CONCAT\nr_dataConcat2 = pd.concat([r_data2,r_data1],axis=0) # axis = 0 --> VERTICAL CONCAT\n\nprint(r_dataConcat1)\nprint()\nprint(r_dataConcat2)","cb17cdf6":"r_CAPITAL = r_dataFrame1[\"capital\"]\nr_POPULATION = r_dataFrame1[\"population\"]\n\nr_dataConcat3 = pd.concat([r_CAPITAL,r_POPULATION],axis=1) #axis = 1 --> HORIZONTAL CONCAT\nr_dataConcat4 = pd.concat([r_POPULATION,r_CAPITAL],axis=1) #axis = 1 --> HORIZONTAL CONCAT\nprint(r_dataConcat3)\nprint()\nprint(r_dataConcat4)","613c1ad5":"r_dataFrame1[\"test1\"] = [a*2 for a in r_dataFrame1[\"population\"]]\nprint(r_dataFrame1)","7d73a138":"def f_multiply(r_population):\n    return r_population*3\n\nr_dataFrame1[\"test2\"] = r_dataFrame1[\"population\"].apply(f_multiply)\nprint(r_dataFrame1)","15f3e235":"2) VARIABLES","c762d280":"8.3. Indexing and Slicing","f1a256cc":"**5.IF ELSE**","01dcb4cc":"8.4.Shape Manipulation","fc30f99b":"**8.1)BASIC**","de5fa1f1":"8.2. Basic Operations\n\n","9e004528":"8.6.Convert and Copy Array","2783371f":"**9.1)Introdoction**","4f386e65":"2.1)Strings","2d77327e":"2.2)NUMBERS:","b758d951":"2)FUNCTIONS","c16c85b6":"**INTRODUCTION**","bf79de70":"**9.2.Basic Methods**\n\n","8d208925":"**9.5.List Comprehension**","3811e96e":"\n****9.6.Drop and Concatenating Data****","d35a43d4":"**9.7.Transforming Data**","08dc4e10":"****9.3.Indexing and Slicing****\n","36900a5e":"**7)WHILE LOOP**","1e043c34":"****6)FOR LOOP****","180bf68f":"**3)L\u0130ST**","3032890c":"****4.DICTIONARY****","e5d586fe":"**9.PANDAS**","408a6a29":"1) BASIC","ee0c2b91":"**9.4.Filtering**","185bcd02":"8.NUMPY","511d0fd5":"8.5.Stacking Arrays"}}