{"cell_type":{"eaa8b21f":"code","4b9a77af":"code","06ba2801":"code","4ab20717":"code","844895c7":"code","178e491e":"code","2024fc27":"code","bf82b717":"code","e74b8c3f":"code","a265ae19":"code","f58ad2d8":"code","f46ecb0b":"code","1a510e02":"code","567b4050":"code","2e1391ff":"code","34f85ddd":"code","595377ce":"code","fcf290f9":"code","23bb57a6":"code","8f6a572e":"code","46cea2dc":"code","4a4912da":"code","065e7a4d":"code","827adb81":"code","3509301e":"code","51f19fa7":"code","1a888105":"code","57e0b29d":"code","ee9982e7":"code","76bfcd9c":"code","cef72297":"code","6e130083":"code","dd2c3a44":"code","df5e6f1c":"code","2f58d657":"code","3c484b7d":"code","2ef9ea3b":"code","1e2ee26c":"code","5d218da8":"code","58b1c333":"markdown","7de3aafe":"markdown","8ba8d380":"markdown","333f2bc9":"markdown","b5036a44":"markdown","ca4ab6d0":"markdown","87dd2cc2":"markdown","0e161803":"markdown","6b03b566":"markdown","e49b8f1b":"markdown","0f6c3368":"markdown","94ce508e":"markdown","edd40a70":"markdown","3057a7f8":"markdown","e1202931":"markdown","4c8873ab":"markdown","e35841dd":"markdown","904747c1":"markdown","3233886b":"markdown","7298a8f9":"markdown","6ebbc259":"markdown","c1998065":"markdown"},"source":{"eaa8b21f":"import pandas as pd\n\n## Loading the data using pandas from CSV\niris = pd.read_csv('..\/input\/iris.csv')\n","4b9a77af":"# To display the first 5 rows of the data frame\niris.head()","06ba2801":"# To print the basic statistical details of the dataframe\n\niris.describe()","4ab20717":"iris.shape","844895c7":"iris.info()","178e491e":"# To check whether there are any null values\niris.isnull().sum()","2024fc27":"# As there is no null values the irrelevant\/not necessary column can be removed\n#iris.drop('Id',axis=1,inplace=True) ","bf82b717":"iris.info()","e74b8c3f":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set() # setting Seaborn for plots as default","a265ae19":"### Univariate Analysis - To understand each feature\n\n# Histogram\n\n# Sepal Length\nfig = plt.figure(figsize=(8,2))\nax = fig.add_subplot(111)\nax.set(title=\"Histogram\",\n      ylabel='No of Sepals', xlabel='Sepal Length')\nax.hist(iris['SepalLengthCm'])\nplt.show()\n\n#Sepal Width\nfig = plt.figure(figsize=(8,2))\nax = fig.add_subplot(111)\nax.set(title=\"\",\n      ylabel='No of Sepals', xlabel='Sepal Width')\nax.hist(iris['SepalWidthCm'])\nplt.show()\n\n#Petal Length\nfig = plt.figure(figsize=(8,2))\nax = fig.add_subplot(111)\nax.set(title=\"\",\n      ylabel='No of Petals', xlabel='Petal Length')\nax.hist(iris['PetalLengthCm'])\nplt.show()\n\n#Petal Width\nfig = plt.figure(figsize=(8,2))\nax = fig.add_subplot(111)\nax.set(title=\"\",\n      ylabel='No of Petals', xlabel='Petal width')\nax.hist(iris['PetalWidthCm'])\nplt.show()","f58ad2d8":"#Box and Whisker Analysis\n\n#BoxPlot - Sepal Length\nfig = plt.figure(figsize=(8,2))\nax = fig.add_subplot(111)\nax.set(title=\"Box Plot\",\n      ylabel='No. of Petals', xlabel='Sepal Length')\nax.boxplot(iris['SepalLengthCm'])\nplt.show()\n\n#BoxPlot - Sepal Width\nfig = plt.figure(figsize=(8,2))\nax = fig.add_subplot(111)\nax.set(title=\"Box Plot\",\n      ylabel='No. of Petals', xlabel='Sepal Width')\nax.boxplot(iris['SepalWidthCm'])\nplt.show()\n\n#BoxPlot - Petal Length\nfig = plt.figure(figsize=(8,2))\nax = fig.add_subplot(111)\nax.set(title=\"Box Plot\",\n      ylabel='No. of Petals', xlabel='Petal Length')\nax.boxplot(iris['PetalLengthCm'])\nplt.show()\n\n# BoxPlot - Petal Width\nfig = plt.figure(figsize=(8,2))\nax = fig.add_subplot(111)\nax.set(title=\"Box Plot\",\n      ylabel='No. of Petals', xlabel='Petal Width')\nax.boxplot(iris['PetalWidthCm'])\nplt.show()","f46ecb0b":"#BiVariate Analysis\n\n#ScatterPlot\nsns.FacetGrid(iris, hue=\"Species\", palette=\"Set1\", size=7)\\\n.map(plt.scatter, \"SepalLengthCm\", \"SepalWidthCm\").add_legend()","1a510e02":"#Bi Variate - ScatterPlot\nsns.FacetGrid(iris, hue=\"Species\", palette=\"Set1\", size=7).map(plt.scatter, \"PetalLengthCm\", \"PetalWidthCm\").add_legend()\n","567b4050":"#HeatMapMatSeaborn\nplt.figure(figsize=(8,4)) \nsns.heatmap(iris.corr(),annot=True,cmap='YlGnBu') \n#draws  heatmap with input as the correlation matrix #calculted by(iris.corr())\nplt.show()","2e1391ff":"### The above Heatmap represents that the Sepal Width has negative correlation","34f85ddd":"facet = sns.FacetGrid(iris, hue=\"Species\",aspect=4)\nfacet.map(sns.kdeplot,'SepalWidthCm',shade= True)\nfacet.set(xlim=(0, iris['SepalWidthCm'].max()))\nfacet.add_legend()\n \nplt.show() ","595377ce":"iris.info()","fcf290f9":"### Import pandas, sKlearn and their modules and sub library to split the dataframe to train and test\n\nimport pandas as pd\nfrom sklearn import datasets, linear_model\nfrom sklearn.model_selection import train_test_split\nfrom matplotlib import pyplot as plt\n","23bb57a6":"# Assign the target variable\ny=iris.Species\nTrain_X, Test_X, Train_y, Test_y = train_test_split(iris, y, test_size = 0.2, random_state = 0)\n#Train_X = iris[['Id','SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]\n","8f6a572e":"print(Train_X.shape)\nprint(Train_y.shape)\nprint(Test_X.shape)\nprint(Test_y.shape)","46cea2dc":"# Drop the Species and Id of Training Data\ndrop_features = ['Species', 'Id']\nXtrain = Train_X.drop(drop_features, axis=1)\n\n# Drop the Species of Test data\nTest_X =  Test_X.drop(\"Species\", axis=1)","4a4912da":"Xtrain.head()","065e7a4d":"Xtrain.shape, Train_y.shape","827adb81":"Train_y.head()","3509301e":"Test_X.shape, Test_y.shape","51f19fa7":"Test_X.head()","1a888105":"# Importing Classifier Modules\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\n\nimport numpy as np","57e0b29d":"Xtrain.info()","ee9982e7":"from sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nk_fold = KFold(n_splits=10, shuffle=True, random_state=0)","76bfcd9c":"clf = KNeighborsClassifier(n_neighbors = 13)\nscoring = 'accuracy'\nscore = cross_val_score(clf,Xtrain, Train_y, cv=k_fold, n_jobs=1, scoring=scoring)\nprint(score)","cef72297":"# kNN Score\nround(np.mean(score)*100, 2)","6e130083":"clf = DecisionTreeClassifier()\nscoring = 'accuracy'\nscore = cross_val_score(clf, Xtrain, Train_y, cv=k_fold, n_jobs=1, scoring=scoring)\nprint(score)","dd2c3a44":"# Decision Tree score\nround(np.mean(score)*100, 2)","df5e6f1c":"clf = SVC()\nscoring = 'accuracy'\nscore = cross_val_score(clf, Xtrain, Train_y, cv=k_fold, n_jobs=1, scoring=scoring)\nprint(score)","2f58d657":"# SVM Score\nround(np.mean(score)*100,2)","3c484b7d":"Test_X.head()","2ef9ea3b":"clf = SVC()\nclf.fit(Xtrain, Train_y)\n\n#Drop the Id \nXtest = Test_X.drop(\"Id\", axis=1).copy()\nprediction = clf.predict(Xtest)","1e2ee26c":"submission = pd.DataFrame({\"Id\": Test_X[\"Id\"],\"Species\": prediction})\n\nsubmission.to_csv('submission.csv',index=False)","5d218da8":"submission = pd.read_csv('submission.csv')\nsubmission.head()","58b1c333":"## Step 5: Modelling","7de3aafe":"##  Step 1: Problem Statment\n\n## To create a model that will predict the flower species from the given sepal and petal (length & width) in the dataset\n","8ba8d380":"## Visualization of Data","333f2bc9":"## Step 2: Collection of Data\n- Data set are available in local path in the form of CSV","b5036a44":"### The above Petal scatter plot shows that the points are closely packed and in a straight line so that the graph can have the Trend line.  It is better than the scatter plot of Sepal","ca4ab6d0":"## Step 4 Train Test Split","87dd2cc2":"## 5.1.2 kNN","0e161803":"### Outliers are present in the Sepal width below 2.2cm and above 4 cm ","6b03b566":"### Total rows and column","e49b8f1b":"## Feature Vector","0f6c3368":"#### Feature Engineering\n- Irrelevant, unused or redundant features can be removed","94ce508e":"#### There are 150 rows and 6 columns","edd40a70":"#### There are no null values in the dataframe and drop the irrelevant and unused columns","3057a7f8":"#### Iris is a flower with different species - Iris-versicolor, Iris-setosa, Iris-virginica","e1202931":"## 5.1 Cross Validation (K-Fold)","4c8873ab":"## 5.1.3 Deision Tree","e35841dd":"## 5.1.4 SVM","904747c1":"## Step 3: Exploratory data analysis","3233886b":"## Iris - Machine learning from Flower Species\n### To identify the different Species of Iris flower\n     1. Defining the problem statement\n     2. Collecting the data\n     3. Exploratory data analysis\n     4. Feature engineering\n     5. Modelling\n     6. Testing\n","7298a8f9":"## Step 6: Testing","6ebbc259":"## Importing Python library for visualization of data to get better understanding","c1998065":"## Data Dictionary\n- Sepal Length(cm) - between 4cm to 8cm\n- Sepal width(cm) - between 2cm to 5cm\n- Petal Length(cm) - between 1cm to 7cm\n- Petal width(cm) - between 0cm to 2.5cm"}}