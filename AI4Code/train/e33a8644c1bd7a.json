{"cell_type":{"2070c53e":"code","efb84483":"code","ed02c103":"code","4622c3a6":"code","2f2549b4":"code","f33c7e11":"code","cd7ddc58":"code","9ab3db38":"code","e6d4d0d8":"code","f6ff69a5":"code","a2485ef1":"code","b0ec0b19":"code","2eaae5bc":"code","c42cd4ec":"code","950b283a":"code","f14d695f":"code","83f0d6c1":"code","8f38ff78":"code","d0bf95b2":"code","e1790b1c":"code","1c52c9dd":"code","4ffd5441":"code","67d8bde6":"code","3fd6adb5":"code","360ae184":"code","063c95ec":"code","1c57b843":"code","24af8e0b":"code","82c55bd4":"code","364d6909":"code","0cb25e4b":"code","86ecfa5b":"code","dd2e8d67":"code","9a82c741":"code","69fc66eb":"code","d01ca0e0":"code","77228aa5":"code","6e04a6f0":"code","20e8c60b":"code","c8d3e476":"code","3039e568":"code","1b0c53d1":"code","f268b123":"code","20d445c2":"code","23817fd7":"code","e6154dd4":"code","c16dfa10":"code","4e65b509":"code","aa0a321a":"code","3af42e9d":"code","34305439":"code","e60a80dc":"code","3c751324":"code","42b70c46":"code","d9747b1f":"code","254cd507":"code","db5e7599":"code","6d7c702a":"code","cac15a32":"code","1a0124a1":"code","f11fb3c4":"code","5697e623":"code","4865d420":"code","bb23589d":"code","3479d55a":"code","87cbb187":"code","f2ed2477":"code","92a6caf8":"code","f1a55077":"code","5213dccc":"code","dca91263":"code","b8d71e36":"code","c58579f9":"code","b151d186":"code","fda14afd":"code","5aa030f0":"code","4f1fba3d":"code","46c49d40":"code","a9e542e1":"code","f05bc793":"code","01b748cc":"code","3c8caab2":"code","d002ac7b":"code","48a9dadd":"code","b0881287":"code","35fc592e":"code","e7afb9a0":"code","b56d36ce":"code","596a24f7":"code","19e937cd":"code","fb805962":"code","51005a5c":"code","6dafd8d1":"markdown","e0a3cac2":"markdown","590974eb":"markdown","0c8dc4e7":"markdown","fcbd14df":"markdown"},"source":{"2070c53e":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nfrom datetime import datetime\nfrom sklearn import preprocessing\n%matplotlib inline","efb84483":"#importing the dataset\ndf=pd.read_csv(\"..\/input\/ml-lab-exam\/traindata_SJC.csv\")","ed02c103":"#loading dataset\ndf","4622c3a6":"df.head()","2f2549b4":"df.info()   #data frame summary","f33c7e11":"df.describe(include=\"all\")  #data summary","cd7ddc58":"df.columns","9ab3db38":"df_clean=df[df!=' ?']","e6d4d0d8":"df_clean.shape,df.shape","f6ff69a5":"df_clean[df_clean==\" ?\"].count()","a2485ef1":"df_clean.isnull().sum()","b0ec0b19":"df_clean=df_clean.dropna()","2eaae5bc":"df_clean.shape,df.shape","c42cd4ec":"df_clean['MaritalStatus'].value_counts()","950b283a":"df_mode=df[df!=\" ?\"]","f14d695f":"df_mode['MaritalStatus'].mode()","83f0d6c1":"type(df_mode['MaritalStatus'].mode()) # Private is a series.so this won't be helpful","8f38ff78":"df_mode['MaritalStatus'].fillna(df_mode['MaritalStatus'].mode()).isnull().sum()## still there are missing values.fillna can't impute series","d0bf95b2":"type(df_mode['MaritalStatus'].mode()[0])","e1790b1c":"df_mode['MaritalStatus']=df_mode['MaritalStatus'].fillna(df_mode['MaritalStatus'].mode()[0])","1c52c9dd":"df_mode.isnull().sum()","4ffd5441":"df['WeeklyWages'].fillna(df['WeeklyWages'].mean(),inplace=True)","67d8bde6":"df['HoursWorkedPerWeek'].fillna(df['HoursWorkedPerWeek'].mean(),inplace=True)","3fd6adb5":"df.isnull().sum()","360ae184":"df.columns","063c95ec":"df.T","1c57b843":"# Claim number seems to rise with time. Extract number  \ndf['ClaimNumberInt'] = df['ClaimNumber'].str[2:].astype(int)\n","24af8e0b":"# Some date features\ndf['YearOfAccident']  = pd.DatetimeIndex(df['DateTimeOfAccident']).year\ndf['MonthOfAccident']  = pd.DatetimeIndex(df['DateTimeOfAccident']).month\ndf['DayOfAccident']  = pd.DatetimeIndex(df['DateTimeOfAccident']).day\ndf['WeekdayOfAccident']  = pd.DatetimeIndex(df['DateTimeOfAccident']).day_name()\ndf['HourOfAccident']  = pd.DatetimeIndex(df['DateTimeOfAccident']).hour\ndf['YearReported']  = pd.DatetimeIndex(df['DateReported']).year","82c55bd4":"# Reporting delay in weeks \ndf['DaysReportDelay'] = pd.DatetimeIndex(df['DateReported']).date - pd.DatetimeIndex(df['DateTimeOfAccident']).date\ndf['DaysReportDelay'] = (df['DaysReportDelay']  \/ np.timedelta64(1, 'D')).astype(int)\ndf['WeeksReportDelay'] = np.floor(df['DaysReportDelay'] \/ 7.).astype(int)\ndf['WeeksReportDelay'] = np.clip(df['WeeksReportDelay'], a_max=55, a_min=None)","364d6909":"# drop unneccessary columns\ndf.drop(['ClaimNumber','DateTimeOfAccident','DaysReportDelay','DateReported','ClaimDescription'],axis=1,inplace=True)\ndf.shape","0cb25e4b":"df.head()","86ecfa5b":"plt.hist(data=df, x='Gender', bins=5,color='violet')\nplt.xlabel('Gender')\nplt.show()","dd2e8d67":"plt.hist(data=df, x='PartTimeFullTime', bins=3,color='palevioletred')\nplt.xlabel('PartTimeFullTime')\nplt.show()","9a82c741":"plt.hist(data=df, x='WeekdayOfAccident',color='skyblue')\nplt.xlabel('WeekdayOfAccident')\nplt.show()","69fc66eb":"sns.catplot(data=df,x='Age',col='Gender',kind='box',color='palevioletred')","d01ca0e0":"sns.catplot(data=df,x='WeeklyWages',col='Gender',kind='violin',color='cyan')","77228aa5":"sns.boxplot(data=df,x='DaysWorkedPerWeek')","6e04a6f0":"# calcuate correlation matrix\ncorrmat = df.corr()\n\n# Draw the heatmap \nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(corrmat, annot=True, square=True, cmap='rainbow')\nplt.show()","20e8c60b":"df.info()","c8d3e476":"import sklearn.preprocessing as pre\nimport sklearn.model_selection as ms","3039e568":"le=pre.LabelEncoder()","1b0c53d1":"list_df=['Age','WeeklyWages','Gender','MaritalStatus','PartTimeFullTime','HoursWorkedPerWeek']","f268b123":"for x in list_df:\n  df[x]=le.fit_transform(df[x].astype(str))","20d445c2":"df","23817fd7":"df.info()","e6154dd4":"import sklearn.model_selection as ms\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score","c16dfa10":"df.columns","4e65b509":"features = ['Age', 'Gender','MaritalStatus','DependentChildren', 'DependentsOther', 'WeeklyWages',\n       'PartTimeFullTime', 'HoursWorkedPerWeek', 'DaysWorkedPerWeek',\n        'InitialIncurredCalimsCost']\nX = df[features]\nY = df['UltimateIncurredClaimCost']","aa0a321a":"x_train,x_test,y_train,y_test=ms.train_test_split(X,Y,test_size=0.3,random_state=42)","3af42e9d":"x_train.shape,x_test.shape,y_train.shape,y_test.shape","34305439":"# Model initialization\nregression_model = LinearRegression()\n# Fit the data(train the model)\nregression_model.fit(x_train,y_train)\n# Predict\ny_predicted = regression_model.predict(x_test)","e60a80dc":"y_predicted","3c751324":"regression_model.score(x_train,y_train)","42b70c46":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nfrom datetime import datetime\nfrom sklearn import preprocessing\n%matplotlib inline","d9747b1f":"#importing the dataset\ndf1=pd.read_csv(\"..\/input\/machine-learning-24-hrs-hackathon\/Test_SJC.csv\")","254cd507":"#loading dataset\ndf1","db5e7599":"df1.head()","6d7c702a":"df1.info()   #data frame summary","cac15a32":"df1.describe(include=\"all\")  #data summary","1a0124a1":"df1.columns","f11fb3c4":"df1_clean=df[df!=' ?']","5697e623":"df1_clean.shape,df.shape","4865d420":"df1_clean[df_clean==\" ?\"].count()","bb23589d":"df1_clean.isnull().sum()","3479d55a":"df1_clean=df_clean.dropna()","87cbb187":"df1_clean.shape,df.shape","f2ed2477":"df1_clean['MaritalStatus'].value_counts()","92a6caf8":"df1_mode=df[df!=\" ?\"]","f1a55077":"df1_mode['MaritalStatus'].mode()","5213dccc":"type(df1_mode['MaritalStatus'].mode())","dca91263":"df1_mode['MaritalStatus'].fillna(df_mode['MaritalStatus'].mode()).isnull().sum()","b8d71e36":"type(df1_mode['MaritalStatus'].mode()[0])","c58579f9":"df1_mode['MaritalStatus']=df_mode['MaritalStatus'].fillna(df_mode['MaritalStatus'].mode()[0])","b151d186":"df1_mode.isnull().sum()","fda14afd":"df1.columns","5aa030f0":"df1.T","4f1fba3d":"# Claim number seems to rise with time. Extract number  \ndf1['ClaimNumberInt'] = df1['ClaimNumber'].str[2:].astype(int)\n","46c49d40":"# Some date features\ndf1['YearOfAccident']  = pd.DatetimeIndex(df1['DateTimeOfAccident']).year\ndf1['MonthOfAccident']  = pd.DatetimeIndex(df1['DateTimeOfAccident']).month\ndf1['DayOfAccident']  = pd.DatetimeIndex(df1['DateTimeOfAccident']).day\ndf1['WeekdayOfAccident']  = pd.DatetimeIndex(df1['DateTimeOfAccident']).day_name()\ndf1['HourOfAccident']  = pd.DatetimeIndex(df1['DateTimeOfAccident']).hour\ndf1['YearReported']  = pd.DatetimeIndex(df1['DateReported']).year","a9e542e1":"# Reporting delay in weeks \ndf1['DaysReportDelay'] = pd.DatetimeIndex(df1['DateReported']).date - pd.DatetimeIndex(df1['DateTimeOfAccident']).date\ndf1['DaysReportDelay'] = (df1['DaysReportDelay']  \/ np.timedelta64(1, 'D')).astype(int)\ndf1['WeeksReportDelay'] = np.floor(df1['DaysReportDelay'] \/ 7.).astype(int)\ndf1['WeeksReportDelay'] = np.clip(df1['WeeksReportDelay'], a_max=55, a_min=None)","f05bc793":"# drop unneccessary columns\ndf1.drop(['ClaimNumber','DateTimeOfAccident','DaysReportDelay','DateReported','ClaimDescription'],axis=1,inplace=True)\ndf1.shape","01b748cc":"df1.head()","3c8caab2":"df1.info()","d002ac7b":"import sklearn.preprocessing as pre\nimport sklearn.model_selection as ms","48a9dadd":"le=pre.LabelEncoder()","b0881287":"list_df1=['Age','WeeklyWages','Gender','MaritalStatus','PartTimeFullTime','HoursWorkedPerWeek']","35fc592e":"for x in list_df1:\n  df1[x]=le.fit_transform(df1[x].astype(str))","e7afb9a0":"df1","b56d36ce":"df1.info()","596a24f7":"features = ['Age', 'Gender','MaritalStatus','DependentChildren', 'DependentsOther', 'WeeklyWages',\n       'PartTimeFullTime', 'HoursWorkedPerWeek', 'DaysWorkedPerWeek',\n        'InitialIncurredCalimsCost']\nX_new = df1[features]\n","19e937cd":"x_train,x_test,y_train,y_test=ms.train_test_split(X,Y,test_size=0.3,random_state=42)","fb805962":"regression_model.predict(X_new)","51005a5c":"sub=pd.read_csv('..\/input\/machine-learning-24-hrs-hackathon\/sample_submission.csv')\nsub['UltimateIncurredClaimCost'] = regression_model.predict(X_new)\nsub.to_csv('Regression.csv', index = False)\nsub.head(5)\nprint(np.mean(sub['UltimateIncurredClaimCost']))","6dafd8d1":"# EDA","e0a3cac2":"# Label Encoding","590974eb":"# Model Selection","0c8dc4e7":"# Data Preprocessing","fcbd14df":"# Loading Dataset"}}