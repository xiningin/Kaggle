{"cell_type":{"21fd49fd":"code","fb3bb5b8":"code","bdb957ac":"code","08b5d685":"code","ce1150df":"code","83fb1ef0":"code","ae6e0d02":"code","7693d7f1":"code","91420e91":"code","3fce37f3":"code","8a421a67":"code","026c89d0":"markdown"},"source":{"21fd49fd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport cv2","fb3bb5b8":"train_df = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntest_df = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","bdb957ac":"X_train = train_df.drop(['label'], axis = 1).values\ny_train = train_df['label'].values\nX_test = test_df.values","08b5d685":"X_train, X_test = X_train \/ 255.0, X_test \/ 255.0","ce1150df":"X_train.shape","83fb1ef0":"X_train, X_test = X_train.reshape(-1, 28, 28, 1), X_test.reshape(-1, 28, 28, 1)","ae6e0d02":"index_list = [1, 0, 16, 7, 3, 8, 21, 6, 10, 11]\nfig, axes = plt.subplots(2, 5, figsize = (20, 10))\n\nk = 0\n\nfor i in range(2):\n  for j in range(5):\n    img_arr = cv2.resize(X_train[index_list[k]], (224, 224))\n    axes[i, j].imshow(img_arr, cmap = 'gray')\n    axes[i, j].set_title(y_train[index_list[k]], {'fontsize' : '30'})\n    axes[i, j].axes.get_xaxis().set_visible(False)\n    axes[i, j].axes.get_yaxis().set_visible(False)\n    k += 1","7693d7f1":"import tensorflow as tf\n\n\nfrom tensorflow.keras.layers import Conv2D, MaxPool2D, Flatten, Dropout, Dense","91420e91":"model = tf.keras.Sequential()\nmodel.add(Conv2D(filters = 32, kernel_size = (5,5), padding = 'same', activation ='relu', input_shape = (28,28,1)))\nmodel.add(Conv2D(filters = 32, kernel_size = (5,5), padding = 'same', activation ='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2)))\nmodel.add(Dropout(0.25))\nmodel.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'same', activation ='relu'))\nmodel.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'same', activation ='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2), strides=(2,2)))\nmodel.add(Dropout(0.25))\nmodel.add(Flatten())\nmodel.add(Dense(256, activation = 'relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(10, activation = \"softmax\"))\nmodel.compile(optimizer=tf.keras.optimizers.Adam(learning_rate = 0.0001), loss = 'sparse_categorical_crossentropy', metrics=['accuracy'])\n\nmodel.summary()","3fce37f3":"history = model.fit(X_train, y_train, epochs = 30, validation_split = 0.3)","8a421a67":"prediction = model.predict(X_test)\nprediction = np.argmax(prediction, axis = 1)\nprediction = pd.Series(prediction, name = \"Label\")","026c89d0":"# Reference\n[Introduction to CNN Keras - 0.997 (top 6%)](https:\/\/www.kaggle.com\/yassineghouzam\/introduction-to-cnn-keras-0-997-top-6)"}}