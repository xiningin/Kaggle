{"cell_type":{"9adca0ac":"code","e2d54e54":"code","55ee5ded":"code","b33638a3":"code","83950daf":"code","165b0ea1":"code","f69ec90f":"code","6a2096d5":"code","f83dddfb":"code","0f5b5ca5":"code","1fa68ede":"code","3ff37ede":"code","6fe726d8":"code","bcb976a9":"code","6492e576":"code","b1167541":"code","abe4ba51":"code","2615b058":"code","fd72542b":"markdown","158067d4":"markdown","8661aa51":"markdown","edb067a1":"markdown","268204c0":"markdown","10ed8a56":"markdown","9c5d69b0":"markdown","a64d0adf":"markdown","10d0ece3":"markdown","671c363e":"markdown"},"source":{"9adca0ac":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport geopandas as gpd\nfrom geopandas import GeoDataFrame\nfrom shapely.geometry import Point,Polygon\n\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster\n\nimport requests ","e2d54e54":"URL = \"https:\/\/coronavirus-tracker-api.herokuapp.com\/v2\/locations\"","55ee5ded":"# sending get request and saving the response as response object \nr = requests.get(url = URL) \n\n# extracting data in json format \ndata = r.json() ","b33638a3":"asian_countries = [ 'Afghanistan', 'Armenia', 'Azerbaijan', 'Bahrain', 'Bangladesh', 'Bhutan, Brunei', 'Burma,Cambodia',\n                   'China', 'East Timor', 'Georgia', 'Hong Kong','India', 'Indonesia', 'Iran', 'Iraq','Israel', 'Japan', \n                   'Jordan', 'Kazakhstan', 'Kuwait', 'Kyrgyzstan', 'Laos', 'Lebanon', 'Malaysia', 'Mongolia', 'Nepal', \n                   'North Korea', 'Oman', 'Pakistan', 'Papua New Guinea', 'Philippines', 'Qatar', 'Russia', \n                   'Saudi Arabia', 'Singapore', 'South Korea', 'Sri Lanka', 'Syria', 'Taiwan', 'Tajikistan', \n                   'Thailand', 'Turkey', 'Turkmenistan', 'United Arab Emirates', 'Uzbekistan', 'Vietnam', 'Yemen']\nsouth_asian = ['Sri Lanka', 'India', 'Bangladesh', 'Bhutan', 'Nepal', 'Pakistan','Maldives']\n","83950daf":"coordintes_confirmed = []\nfor values in data['locations']:\n    country = values['country']\n    latitude = float((values['coordinates'])['latitude'])\n    longitude = float((values['coordinates'])['longitude'])\n    confirmed = int((values['latest'])['confirmed'])\n    deaths = int((values['latest'])['deaths'])\n    if(values['province'] != ''):\n        province = values['province']\n    else:\n        province = 'Nan'\n    coordintes_confirmed.append((country,latitude,longitude,province,confirmed,deaths))","165b0ea1":"world_frame = pd.DataFrame(coordintes_confirmed, columns=['Country', 'Latitude', 'Longitude', 'Province','Confired_Cases','Deaths'])","f69ec90f":"world_frame.head()","6a2096d5":"world_frame_map = world_frame.copy()","f83dddfb":"world_frame_map.head()","0f5b5ca5":"world_frame_map_copy = world_frame_map.copy()\ngeometry_copy = [Point(xy) for xy in zip(world_frame_map.Latitude, world_frame_map.Longitude)]\ncrs = {'init' : 'epsg:4326'}\ngdf_world_copy = GeoDataFrame(world_frame_map_copy, crs=crs, geometry=geometry_copy)","1fa68ede":"gdf_world_copy.head()","3ff37ede":"# save the GeoDataFrame\ngdf_world_copy.to_file(driver = 'ESRI Shapefile', filename= \"CoronaVirus.shp\")","6fe726d8":"world_frame_map = world_frame_map.reindex(world_frame.index.repeat(world_frame.Confired_Cases))","bcb976a9":"geometry = [Point(xy) for xy in zip(world_frame_map.Latitude, world_frame_map.Longitude)]\nworld_frame_map = world_frame_map.drop(['Confired_Cases', 'Province', 'Deaths'], axis = 1)\ncrs = {'init' : 'epsg:4326'}\ngdf_world = GeoDataFrame(world_frame_map, crs=crs, geometry=geometry)","6492e576":"gdf_world_indexed = gdf_world.set_index('Country')","b1167541":"plot_dict = gdf_world.Country.value_counts()\nplot_dict.head()","abe4ba51":"#read world map shape file\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))","2615b058":"# Create a base map\nm_2 = folium.Map(location=[25.0376,76.4563], tiles='openstreetmap', zoom_start=2)\n\n# Add a heatmap to the base map\nHeatMap(data=world_frame_map[['Latitude', 'Longitude']], radius=10).add_to(m_2)\n\n# Display the map\nm_2","fd72542b":"**World CoronaData**","158067d4":"**HeatMap World**","8661aa51":"**Make Pandas DataFrame from the list**","edb067a1":"**Save a copy of final Dataframe with coordiantes**","268204c0":"**Couting Country with no of confirmed Case**","10ed8a56":"**Readint the datainto GeoDataFrame**","9c5d69b0":"**Count No of Confirmed in each Country**","a64d0adf":"**Preprocessing for Choropleth maps**","10d0ece3":"**Fetching the real updated time dataset**","671c363e":"**Copy in other dataset for further analysis for Maps**"}}