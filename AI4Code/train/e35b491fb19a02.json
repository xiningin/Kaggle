{"cell_type":{"6806a45e":"code","73bdcdf8":"code","f3571d29":"code","a448ab9a":"code","f781b59a":"code","743f766a":"code","0a352c9e":"code","6e51e8f6":"code","bf66978d":"code","1492bd1f":"code","9e8b078b":"code","0227fa2e":"markdown","c4bfb2e2":"markdown","906bc708":"markdown"},"source":{"6806a45e":"import numpy as np","73bdcdf8":"# list into array\ndata = [6, 7.5, 8, 0, 1]\narr = np.array(data)\narr","f3571d29":"# equal length list into muti dimensional array\ndata1 = [[1, 2, 3, 4], [5, 6, 7, 8]]\narr1 = np.array(data1)\narr1","a448ab9a":"# shape, dimension and data type of array\nprint(f\"The shape of array is {arr.shape} and dimension is {arr.ndim}. The data type is {arr.dtype}. \")\nprint(f\"The shape of array is: {arr1.shape} and dimension is {arr1.ndim}. The data type is {arr1.dtype}.\")","f781b59a":"# zero array\narr_zero = np.zeros(10)\narr_zero_2d = np.zeros((3, 6))\nprint(f\"\"\"The shape of array is {arr_zero.shape} and dimension is {arr_zero.ndim}. \nThe data type is {arr_zero.dtype}. The array is {arr_zero}\"\"\")\nprint(f\"\"\"\\n The shape of array is {arr_zero_2d.shape} and dimension is {arr_zero_2d.ndim}. \nThe data type is {arr_zero_2d.dtype}. The array is \\n{arr_zero_2d}\"\"\")\n\narr_zeros_like = np.zeros_like(arr1)\nprint(f\"\"\"The shape of original array is {arr1.shape} same as that of new array {arr_zeros_like.shape}.\"\"\" )","743f766a":"# It\u2019s not safe to assume that np.empty will return an array of all zeros. In many cases it will return \n#uninitialized garbage values.\n\narr_empty = np.empty((2, 3, 2))\narr_empty\nprint(arr_empty)\n\n\na = [[1,2,3], [4,5,6]]\narr_empty_like = np.empty_like(a)\nprint(arr_empty_like)","0a352c9e":"# arange is an array-valued version of the built-in Python range function\narr_arange = np.arange(10)\narr_arange","6e51e8f6":"arr_asarray = np.asarray([1, 2, 3])\narr_asarray","bf66978d":"# create ones array\narr_ones = np.ones(5)\narr_ones_2d = np.ones((5, 3))\nprint(\"1d array is: \", arr_ones)\nprint(\"2d array is: \\n\", arr_ones_2d)","1492bd1f":"a = np.asarray([[1, 2, 3, 4, 5],[6, 7, 8, 9, 10]])\narr_ones_like = np.ones_like(a)\nprint(f\"The shape of original array \\n {a} is \\n {a.shape} and that of new array \\n{arr_ones_like} is \\n{arr_ones_like.shape}\")","9e8b078b":"# return matrix with 0 and 1 values\narr_eye = np.eye(3, 3, k = 1)\nprint(\"The matrix with zero and one is: \\n\",arr_eye)\narr_identity = np.identity(3)\nprint(\"\\n The identity matrix is: \\n\", arr_identity)","0227fa2e":"If you like the notebook please upvote. I am planning to release new notebook every week. Stay tuned for more such shorts notes!!","c4bfb2e2":"<h1><center><font size=\"6\">Numpy Basics Series <\/font><\/center><\/h1>\n<h3><center>Ways to Create an Array (Part 1)<\/center><\/h3>\n\n\n\n<center><img src=\"https:\/\/images.unsplash.com\/photo-1474546652694-a33dd8161d66?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2684&q=80\"><\/img><\/center>\n\nPhoto by <a href=\"https:\/\/unsplash.com\/@austris_a?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Austris Augusts<\/a> on <a href=\"https:\/\/unsplash.com\/s\/photos\/numbers?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash<\/a>\n  ","906bc708":"When I started my data science journey the first python library I studies was numpy. I am planning to start the numpy series that deals with commands at basic level. This notebook will contain my notes about the major most common numpy commands that will be helpfull to all. The notes are inspired by \"<b>Python for Data Analysis<\/b>\" book by \"<b>Wes McKinney<\/b>\". "}}