{"cell_type":{"92dc4b31":"code","398fd728":"code","b7b7f2a3":"code","7134dbf2":"code","28e03c3c":"code","e8c7e7e2":"code","f6467077":"code","323d4129":"code","b38cecfb":"code","57e25505":"code","82e3a012":"code","4ceda187":"code","5aa8b0ab":"code","117371b8":"code","56adbb5c":"code","326a8b84":"code","0db3524a":"code","575c8786":"code","3792f0b3":"code","95133a6d":"code","45b70c40":"code","b78f44c0":"code","5dec20c3":"code","ab073655":"code","b705d676":"code","5d28d481":"markdown","655a5e11":"markdown","b17c2610":"markdown","0f05b0be":"markdown","3f8e0459":"markdown","7b3380d9":"markdown","f706e86b":"markdown","09cdde1a":"markdown","e06f33dc":"markdown","098d1004":"markdown","23d855e6":"markdown","abf2e9bc":"markdown","24ae1b09":"markdown","a1d60654":"markdown","bb748a4d":"markdown","ee4c674c":"markdown","ee9432c4":"markdown","93c51782":"markdown","56b0e83a":"markdown","ed1b2327":"markdown","c6d1bcbb":"markdown","d1734707":"markdown","0d260e7f":"markdown","84ac89c0":"markdown","6a6ee5c5":"markdown","5d715f8c":"markdown","eb7135f4":"markdown","036d077d":"markdown"},"source":{"92dc4b31":"import numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport datetime as dt\nimport re\nfrom iso3166 import countries\n\nimport warnings\nwarnings.filterwarnings('ignore')","398fd728":"data = pd.read_csv(\"..\/input\/all-space-missions-from-1957\/Space_Corrected.csv\")\ndata.drop(['Unnamed: 0','Unnamed: 0.1'],1,inplace = True)\ndata.shape","b7b7f2a3":"data.head(10)","7134dbf2":"data.info()","28e03c3c":"data.describe().transpose()","e8c7e7e2":"data.rename(columns={' Rocket':'Rocket','Datum':'Date'},inplace=True)\n\ndata['Rocket'] = data['Rocket'].apply(lambda x: x if(type(x)==float or (type(x)==int)) else float(x.replace(',','')) if(',' in x) else float(x) )\nprint('NaN Value in Rocket Column = {0:.2f}'.format(data['Rocket'].isna().sum()\/len(data)*100))","f6467077":"data['Date'] = pd.to_datetime(data['Date'],utc = True)\ndata['Time'] = data['Date'].dt.time\ndata['Days'] = data['Date'].dt.day_name()\ndata['Date'] = data['Date'].dt.date","323d4129":"data['Region'] = data['Location'].apply(lambda x:','.join(x.split(',')[-2:]).strip())\ndata['Country'] = data['Location'].apply(lambda x:''.join(x.split(',')[-1]).strip())\ndata['States'] = data['Location'].apply(lambda x:''.join(x.split(',')[-2]).strip())","b38cecfb":"data['Company Name'].value_counts()\n\nfig = px.pie(data,values = data['Company Name'].value_counts().values[:10],\n             names = data['Company Name'].value_counts().index[:10]\n             ,hole=.4,height = 700\n            )\n\nfig.update_traces(textinfo='label+percent',textposition='inside')\n\nfig.update_layout(title='Top 10 Companies',\n                 annotations=[dict(x=0.5,y=0.5,text='Companies',showarrow=False,font_size=20)])\n\nfig.show()","57e25505":"data['Country'].value_counts().index[:10]\n\nfig = px.pie(data,values=data['Country'].value_counts().values[:10],\n                 names = data['Country'].value_counts().index[:10],\n                 title='Top 10 Countries with Maximum Mission',\n                 hole=.4,height = 700\n                )\n\nfig.update_traces(textposition='inside',textinfo='label+percent')\n\nfig.update_layout(annotations=[dict(x=.5,y=.5,text='Countries',showarrow=False,font_size=20)])\n\nfig.show()","82e3a012":"def findTopTen(col1,col2,val):\n    \n    final = {'Success':0,'Failure':0, 'Partial Failure':0, 'Prelaunch Failure':0,col1:''}\n    finalDF = pd.DataFrame(final,index=[0])\n    n = val[col1].value_counts().index[:15].values\n    \n    for i in n:\n        m = val[val[col1]==i][col2]\n        unique = m.value_counts()\n        for key,values in zip(unique.index.values,unique.values):\n            final[key] = values\n        final[col1] = i\n        finalDF = finalDF.append(final,ignore_index=True)\n        \n    return finalDF","4ceda187":"\ntopcountry = findTopTen('Country','Status Mission',data)\nfig = px.bar(topcountry,x='Country',y=['Success','Failure','Partial Failure','Prelaunch Failure'],\n             title='Top 15 Countries Mission Status',height = 700)\n\nfig.show()","5aa8b0ab":"topCompany = findTopTen('Company Name','Status Mission',data)\n\nfig = px.bar(topCompany,x='Company Name',y=['Success','Failure','Partial Failure','Prelaunch Failure'],\n            title = 'Top 15 Space Organisations Mission Status',height = 700)\n\nfig.show()","117371b8":"data['Rocket']  = data['Rocket'].values*1000000\n\nbudget = data[['Date','Rocket']]\nbudget['Date'] = pd.to_datetime(budget['Date'])\nbudget.set_index('Date',inplace = True)\n\nYearlybudget = budget.resample('Y').sum().ffill()\nmonthlyBudget = budget.resample('M').sum().ffill()","56adbb5c":"fig  = px.line(Yearlybudget,x=Yearlybudget.index,y='Rocket',title='Total Budget year by year',height = 600)\n\nfig.update_traces(hoverinfo='text+name', mode='lines+markers')\n\nfig.show()","326a8b84":"launch = data['Date'].value_counts()\nlaunch = pd.DataFrame(launch.values,columns=['Count'],index=launch.index)\nlaunch.index = pd.to_datetime(launch.index)\nyearLaunch = launch.resample('Y').sum()\n\n\n#launch\nfig = px.bar(yearLaunch , x=yearLaunch.index,y='Count',title='Total Number of Rocket Launch year by year',height = 600,\n            color='Count')\nfig.show()","0db3524a":"org = data['Company Name'].value_counts()\norg = pd.DataFrame(org.values,columns = ['Count'],index = org.index)\n\nfig = px.bar(org,x = org.index, y = 'Count',title = 'Organisation with Highest Rocket Missions over Years',color='Count',\n            height = 650)\nfig.show()","575c8786":"fig = px.sunburst(data,path = ['Country','States'],height = 700,title = 'Contries and their Rocket Launch Pad')\n\nfig.show()","3792f0b3":"fig = px.sunburst(data, path = ['Country','Company Name'], title = 'Country and their Space Organisations',height = 700)\n\nfig.show()","95133a6d":"newDf = data[data['Country'].isin(['USA','Russian Federation'])]\n\nfig = px.bar(newDf , x='Country', facet_col = \"Status Mission\",color = 'Country'\n             ,color_continuous_scale=px.colors.sequential.Cividis_r, title = 'USA and Russia and their Mission Status'\n            )\nfig.show()\n","45b70c40":"fig = px.histogram(newDf , x = 'Date',y='Rocket',color = 'Country',title = 'Total Money Spend by USA and Russia year by year')\n\nfig.show()","b78f44c0":"fig = px.histogram(newDf , x = 'Date',y='Rocket',color = 'Status Mission'\n                   ,title = 'Mission Cost and Status of USA and Russia year by year',\n                  height = 650)\n\nfig.show()","5dec20c3":"data.loc[data['Country'] == 'Russia', 'Country'] = 'Russian Federation'\ndata.loc[data['Country'] == 'New Mexico', 'Country'] = 'USA'\ndata.loc[data['Country'] == \"Yellow Sea\", 'Country'] = \"China\"\ndata.loc[data['Country'] == \"Shahrud Missile Test Site\", 'Country'] = \"Iran\"\ndata.loc[data['Country'] == \"Pacific Missile Range Facility\", 'Country'] = \"USA\"\ndata.loc[data['Country'] == \"Barents Sea\", 'Country'] = 'Russian Federation'\ndata.loc[data['Country'] == \"Gran Canaria\", 'Country'] = 'USA'\n\nallCountries = {}\n\nfor c in countries:\n    allCountries[c.name] = c.alpha3\n\nallCountries\n\ndata['AlphaNames'] = data['Country']\n\ndata = data.replace({'AlphaNames':allCountries})\n\ndata.loc[data['Country'] == \"North Korea\", 'AlphaNames'] = \"PRK\"\ndata.loc[data['Country'] == \"South Korea\", 'AlphaNames'] = \"KOR\"","ab073655":"mapdf = data.groupby(['Country', 'AlphaNames'])['Status Mission'].count().reset_index()\nfig = px.choropleth(mapdf,locations = 'AlphaNames',color='Country',projection=\"equirectangular\",height = 600,width = 1200)\nfig.show()","b705d676":"data['Date'] = pd.to_datetime(data['Date'], errors='coerce')\ndata.sort_values('Date',inplace = True)\ndata['Year'] = data['Date'].dt.year\n\nfig = px.choropleth(data,locations = 'AlphaNames',animation_frame = 'Year',color = 'Status Mission',title = 'Countries Rocket Mission Status year by year',\n                   height = 650)\nfig.show()","5d28d481":"**Top 10 Countries with Maximum Mission**","655a5e11":"# Total Mission and Status of Russia and USA","b17c2610":"# Plotting Countries location on Global Map","0f05b0be":"# Data pre-processing","3f8e0459":"**Extracting Country in Seprate Columns for better Understanding**","7b3380d9":"# Year by year Mission took place and Mission Status","f706e86b":"# Contries and their Rocket Launch Pad","09cdde1a":"* If you guys find this usefull then please upvote\n* If you guys have any suggestion or find any mistake then please comment down, I will try to improvise.\n\n**Thank You**","e06f33dc":"# Total number of Launches in every years","098d1004":"# Basic Information","23d855e6":"# Which Space Organisation have highest number of Rocket Missions","abf2e9bc":"# Countries on Global Map","24ae1b09":"# Maximum numbers of Rocket Mission year by year","a1d60654":"**Top ten companies\/organisation which have maxium numbers of rocket mission**","bb748a4d":"**Converting Date Column data type from Object to pandas Datetime**\n\n**ans also making new column\/seperate columns for Time, Days and Date**","ee4c674c":"# What we will cover in this DATASET\n\n* Basic Information of dataset\n\n* Data pre-processing\n\n* In Data Visualisation\n  1. Maximum numbers of Rocket Mission year by year\n  2. Top 15 Coutries Mission Status\n  3. Top 15 Space Organisations Mission Status\n  4. Total Budget year by year\n  5. Total number of Launches in every years\n  6. Which Space Organisation have highest number of Rocket Missions\n  7. Countries and their Rocket Launch Pad\n  8. Countries and their Space Organisations\n  9. USA VS Russia \n  10. Plotting Countries location on Global Map","ee9432c4":"> so we hava more than 50% values are Nan in Rocket Column \n\n> There are multiple Imputing method to fill NaN value like\n\n> Mean , Median , Mode , KNN Imputer , Predictive Imputer and etc\n\n> But we have only ~22% of data in Column \n\n> So Imputing value will be not a good idea","93c51782":"# Total Budget year by year","56b0e83a":"![maxresdefault.jpg](attachment:maxresdefault.jpg)","ed1b2327":"# Total Money Spend by USA and Russia year by year","c6d1bcbb":"# Country and their Space Organisations","d1734707":"# Mission Cost and Status of USA and Russia year by year","0d260e7f":"> Rocket Feature is Cost of Rocket in $Million\n\n> so we will convert Object to Float Data type and also rename as Rocket","84ac89c0":"pic credit - google images","6a6ee5c5":"# Top 15 Space Organisations Mission Status","5d715f8c":"# Top 15 Coutries Mission Status","eb7135f4":"# Data Visualization","036d077d":"# Explore the Space"}}