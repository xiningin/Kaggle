{"cell_type":{"99795f0b":"code","b9bde224":"code","6bf99a6c":"code","beb9930b":"code","f0427c27":"code","cd23d93c":"markdown","8a1297e0":"markdown","120549cf":"markdown"},"source":{"99795f0b":"import numpy as np \nimport pandas as pd \nimport datetime as dt\n!cp -r \/kaggle\/input\/CORD-19-research-challenge\/Kaggle\/target_tables\/* \/kaggle\/working\/\n!rm -r \/kaggle\/working\/0_table_formats_and_column_definitions\/\n!rm -r \/kaggle\/working\/unsorted_tables\/\n!rm \/kaggle\/working\/__notebook_source__.ipynb","b9bde224":"df_metadata = pd.read_csv('..\/input\/CORD-19-research-challenge\/metadata.csv',index_col=[0])\ndf_metadata['publish_time'] = pd.to_datetime(df_metadata['publish_time'])\ndf_metadata['Year'] = pd.DatetimeIndex(df_metadata['publish_time']).year\ndf_metadata = df_metadata[(df_metadata['publish_time'] >= '2020-02-01') & (df_metadata['publish_time'] <= dt.datetime.now())]\ndf_metadata['Month'] = pd.DatetimeIndex(df_metadata['publish_time']).month\ndf_metadata['pdf_json_files'].replace('', np.nan, inplace=True) # Full-text only\ndf_metadata.dropna(subset=['pdf_json_files'], inplace=True) # Full-text only","6bf99a6c":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\ninitialize = True\nfor dirname, _, filenames in os.walk('\/kaggle\/working\/'):\n    for filename in filenames:\n        df_tmp = pd.read_csv(os.path.join(dirname, filename))\n        df_tmp.rename(columns={df_tmp.columns[1]:'Date',df_tmp.columns[2]:'Study',df_tmp.columns[3]:'Study Link',df_tmp.columns[4]:'Journal'},inplace=True)\n        if initialize == True:\n            \n            df_inreview = df_tmp[df_tmp.columns[1:5]]\n            initialize = False\n        else:\n            df_inreview = df_inreview.append(df_tmp[df_tmp.columns[1:5]],sort=False)\n        \n# Any results you write to the current directory are saved as output.\ndf_inreview = df_inreview[['Date','Study','Journal']].drop_duplicates()\ndf_inreview['Month'] = pd.to_datetime(df_inreview['Date'], errors='coerce')\ndf_inreview['Month'] = pd.DatetimeIndex(df_inreview['Month']).month","beb9930b":"df_coverage = df_metadata.groupby('Month').count()[['doi']].merge(df_inreview.groupby('Month')['Study'].count(),how='inner',left_index=True,right_index=True).rename(columns={'doi':'Total','Study':'In Lit Review'})\nprint(\"Covers {}% of the studies published since February 1 ({} of the {} papers)\".format(np.round(df_coverage[df_coverage.index > 1].sum()[1]\/df_coverage[df_coverage.index > 1].sum()[0],3)*100,df_coverage[df_coverage.index > 1].sum()[1],df_coverage[df_coverage.index > 1].sum()[0]))\n\n","f0427c27":"print(\"Covers <a href=\\\"https:\/\/www.kaggle.com\/antgoldbloom\/literature-review-coverage\/\\\" target=\\\"_blank\\\">{}%<\/a> of the studies published since February 1 ({} of the {} papers)\".format(np.round(df_coverage[df_coverage.index > 1].sum()[1]\/df_coverage[df_coverage.index > 1].sum()[0],3)*100,df_coverage[df_coverage.index > 1].sum()[1],df_coverage[df_coverage.index > 1].sum()[0]))\n","cd23d93c":"# Joining the two counts into one table","8a1297e0":"# Number of papers published in 2020 \nStarting by counting the number of papers in the CORD-19 dataset by month in 2022","120549cf":"# Number of our literature review \nCounting the number of papers in our literature review"}}