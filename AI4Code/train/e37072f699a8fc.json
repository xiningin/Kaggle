{"cell_type":{"26fca076":"code","b3598ecc":"code","b402fcb5":"code","8861ec7c":"code","9c32d151":"code","02dbb4b3":"code","f1085eef":"code","30fe7424":"code","e243b3ac":"code","ce992000":"code","fbe87bc4":"code","d2a8df85":"code","05a650f4":"code","d738760f":"code","1e51f211":"code","3da9bf5e":"code","a3401f61":"code","16a24490":"code","c48b096f":"code","133a019f":"code","5ee61064":"code","a20fe09b":"code","2dee8c35":"code","2ffdb3b7":"code","62a8d8a8":"code","fa3b5214":"code","7b5e4904":"code","260bab11":"code","36df2cb8":"code","d9fd1148":"code","3aabecf0":"code","fd59b930":"code","1c45c873":"code","09134e36":"code","8c342471":"code","7a2a04b6":"code","0ea86f7a":"code","7c9c5e27":"code","7467f9f6":"code","32b6f7b2":"code","2a427a81":"code","b34b4021":"code","8eaa658f":"code","ab049811":"code","4fc76ad7":"code","98f94f25":"code","6d7296d6":"code","f4bb4451":"code","a9753b9e":"code","9bf5358a":"code","2da70c83":"code","c72f3e9f":"code","324b8dd6":"code","51745c7c":"code","66ce1211":"code","54667c90":"code","6549db0f":"code","d81cb6d1":"code","e85afc3c":"code","289107b5":"code","5c2f7afd":"code","1ae51ea5":"code","61a13941":"code","fbc9c72f":"code","31763351":"code","9431c256":"code","952e2ebc":"code","024fe426":"code","c8c25f8b":"code","4300047e":"code","8d4ddc8c":"code","f83282fc":"code","b78faafb":"code","875dcbd9":"code","c9f286dc":"code","70a327e5":"code","68195906":"code","e976f6af":"code","2c1bcaf5":"code","15f3170e":"code","84a6432a":"markdown","dc3799a4":"markdown","b0df6f98":"markdown","24cc49aa":"markdown"},"source":{"26fca076":"!pip install -U lightautoml","b3598ecc":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score\nimport torch\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML, TabularUtilizedAutoML\nfrom lightautoml.tasks import Task\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns \n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom tqdm import tqdm ","b402fcb5":"train = pd.read_csv('..\/input\/loan-prediction-analytics-vidhya\/train_ctrUa4K.csv')\ntest = pd.read_csv('..\/input\/loan-prediction-analytics-vidhya\/test_lAUu6dG.csv')\nsub = pd.read_csv('..\/input\/loan-prediction-analytics-vidhya\/sample_submission_49d68Cx.csv')","8861ec7c":"train.info(memory_usage=\"deep\")","9c32d151":"print(\"Shape of train data:\",train.shape)\nprint(\"Number of columns in train data:\",train.shape[1])\nprint(\"Number of rows in train data:\",train.shape[0])\ntrain.head()","02dbb4b3":"print(\"Shape of test data:\",test.shape)\nprint(\"Number of columns in test data:\",test.shape[1])\nprint(\"Number of rows in test data:\",test.shape[0])","f1085eef":"print(\"Shape of submission data:\",sub.shape)\nprint(\"Number of columns in submission data:\",sub.shape[1])\nprint(\"Number of rows in submission data:\",sub.shape[0])\nsub.head()","30fe7424":"train.isnull().sum()","e243b3ac":"test.isnull().sum()","ce992000":"# Checking Null values  \nplt.figure(figsize=(10,8))\nsns.heatmap(train.isnull(),cmap='plasma')\n\ndef percent_missing(d):\n    percentage = pd.DataFrame(100*(d.isnull().sum()\/len(d)),columns=['Missing_%']).sort_values('Missing_%',ascending=False)\n    return (percentage.head(10))","fbe87bc4":"percent_missing(train)","d2a8df85":"percent_missing(test)","05a650f4":"train['Loan_Status'].value_counts()","d738760f":"target=train['Loan_Status'].value_counts(normalize=True)\nprint(target*100)","1e51f211":"y_True = train[\"Loan_Status\"][train[\"Loan_Status\"] == False]\nprint (\"Churn Percentage = \"+str( (y_True.shape[0] \/ train[\"Loan_Status\"].shape[0]) * 100 ))","3da9bf5e":"plt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'Gender',hue='Loan_Status',data=train,palette='rainbow')","a3401f61":"train[\"Gender\"].value_counts()","16a24490":"plt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'Married',hue='Loan_Status',data=train,palette='Set2')","c48b096f":"train[\"Married\"].value_counts()","133a019f":"plt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'Married',hue='Gender',data=train,palette='Set2')","5ee61064":"plt.figure(figsize=(10, 5))\nsns.set_style('whitegrid')\nsns.countplot(y = 'Dependents',hue='Loan_Status',data=train,palette='Set1')","a20fe09b":"plt.figure(figsize=(8, 5))\nsns.catplot(x='Dependents',\n            y='ApplicantIncome',\n            hue='Loan_Status',\n            kind='box',\n            data=train);","2dee8c35":"train[\"Dependents\"].value_counts()","2ffdb3b7":"plt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'Education',hue='Loan_Status',data=train,palette='Spectral')","62a8d8a8":"plt.figure(figsize=(8, 5))\nsns.catplot(x='Education',\n            y='ApplicantIncome',\n            hue='Loan_Status',\n            data=train);","fa3b5214":"train[\"Education\"].value_counts()","7b5e4904":"plt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'Self_Employed',hue='Loan_Status',data=train,palette='cool')","260bab11":"train[\"Self_Employed\"].value_counts()","36df2cb8":"plt.figure(figsize=(12, 5))\nsns.distplot(train['ApplicantIncome'])","d9fd1148":"a = sns.FacetGrid(train, hue = 'Loan_Status', aspect=4 )\na.map(sns.kdeplot, 'ApplicantIncome', shade= True )\na.set(xlim=(0 , train['ApplicantIncome'].max()))\na.add_legend()","3aabecf0":"train['ApplicantIncome'].plot.box()","fd59b930":"plt.figure(figsize=(8, 5))\nsns.relplot(x='CoapplicantIncome',\n            y='ApplicantIncome',\n            col='Gender',\n            data=train);","1c45c873":"train['ApplicantIncome'].value_counts(bins = 10)","09134e36":"test['ApplicantIncome'].value_counts(bins = 10)","8c342471":"colors = [ \"darkorange\",\"black\"]\ncustomPalette = sns.set_palette(sns.color_palette(colors))\nplt.figure(figsize=(12, 5))\nsns.kdeplot(data=train, x =\"CoapplicantIncome\" ,hue = \"Loan_Status\", palette=customPalette,linewidth=3.5)","7a2a04b6":"train['CoapplicantIncome'].value_counts(bins = 10)","0ea86f7a":"test['CoapplicantIncome'].value_counts(bins = 10)","7c9c5e27":"colors = [ \"lightskyblue\",\"tomato\"]\ncustomPalette = sns.set_palette(sns.color_palette(colors))\nplt.figure(figsize=(12, 5))\nsns.kdeplot(data=train, x =\"LoanAmount\" ,hue = \"Loan_Status\", palette=customPalette,linewidth=3.5)","7467f9f6":"train['LoanAmount'].value_counts(bins = 10)","32b6f7b2":"colors = [ \"gold\",\"violet\"]\ncustomPalette = sns.set_palette(sns.color_palette(colors))\nplt.figure(figsize=(16, 8))\nsns.set_style('whitegrid')\nsns.countplot(y = 'Loan_Amount_Term',hue='Loan_Status',data=train,palette=customPalette)","2a427a81":"train[\"Loan_Amount_Term\"].value_counts()","b34b4021":"test[\"Loan_Amount_Term\"].value_counts()","8eaa658f":"colors = [ \"aquamarine\",\"orangered\"]\ncustomPalette = sns.set_palette(sns.color_palette(colors))\nplt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'Credit_History',hue='Loan_Status',data=train,palette=customPalette)","ab049811":"train[\"Credit_History\"].value_counts()","4fc76ad7":"plt.figure(figsize=(8, 5))\nsns.set_style('whitegrid')\nsns.countplot(x = 'Property_Area',hue='Loan_Status',data=train,palette='YlOrBr')","98f94f25":"colors = [ \"coral\",\"cyan\",\"greenyellow\"]\ncustomPalette = sns.set_palette(sns.color_palette(colors))\nplt.figure(figsize=(16, 5))\nsns.kdeplot(data=train, x =\"LoanAmount\" ,hue = \"Property_Area\", palette=customPalette,linewidth=3.5)","6d7296d6":"train[\"Property_Area\"].value_counts()","f4bb4451":"train.hist(figsize=(13,13))","a9753b9e":"train.describe().T.style.bar(subset=['mean'], color='#205ff2')\\\n                            .background_gradient(subset=['std'], cmap='Reds')\\\n                            .background_gradient(subset=['50%'], cmap='coolwarm')","9bf5358a":"test.describe().T.style.bar(subset=['mean'], color='#205ff2')\\\n                            .background_gradient(subset=['std'], cmap='Reds')\\\n                            .background_gradient(subset=['50%'], cmap='coolwarm')","2da70c83":"train = train[train['ApplicantIncome'] <= 24405.0]","c72f3e9f":"train['ApplicantIncome'].describe()","324b8dd6":"#train = train[train['LoanAmount'] <= 492.7]\ntrain = train.drop('LoanAmount', axis = 1)\ntest = test.drop('LoanAmount', axis = 1)\ntrain = train[train['CoapplicantIncome'] <= 8333.4]","51745c7c":"percent_missing(train)","66ce1211":"percent_missing(test)","54667c90":"print(\"Shape of train data:\",train.shape)\nprint(\"Number of columns in train data:\",train.shape[1])\nprint(\"Number of rows in train data:\",train.shape[0])","6549db0f":"print(\"Shape of test data:\",test.shape)\nprint(\"Number of columns in test data:\",test.shape[1])\nprint(\"Number of rows in test data:\",test.shape[0])","d81cb6d1":"sns.heatmap(train.corr())","e85afc3c":"mapp = {'Y':1,'N':0}\ntrain[\"Loan_Status\"] = train[\"Loan_Status\"].astype(str).map(mapp)","289107b5":"false_target = train[train['Loan_Status'] == 0]\nfalse_target.head()","5c2f7afd":"false_target['ApplicantIncome'] = false_target['ApplicantIncome'] + 1.0","1ae51ea5":"false_target['Loan_ID']","61a13941":"false_target['Loan_ID'] = false_target['Loan_ID']+'1'","fbc9c72f":"train1 = pd.concat([train,false_target])","31763351":"target1=train1['Loan_Status'].value_counts(normalize=True)\nprint(target1*100)","9431c256":"def feature_generator(dataset, features):\n    # Numerical feature\n    dataset['median'] = dataset[features].median(axis=1)\n    dataset['std'] = dataset[features].std(axis=1)\n    dataset['avg'] = dataset[features].mean(axis=1)\n    dataset['max'] = dataset[features].max(axis=1)\n    dataset['min'] = dataset[features].min(axis=1)","952e2ebc":"train1.columns.values","024fe426":"features = ['ApplicantIncome', 'CoapplicantIncome']\nfeature_generator(train1, features)\nfeature_generator(test, features)","c8c25f8b":"N_THREADS = 4\nN_FOLDS = 10\nRANDOM_STATE = 42\nTEST_SIZE = 0.15\nTIMEOUT = 8*3600\nTARGET_NAME = 'Loan_Status'","4300047e":"np.random.seed(RANDOM_STATE)\ntorch.set_num_threads(N_THREADS)","8d4ddc8c":"def acc_score(y_true, y_pred, **kwargs):\n    return accuracy_score(y_true, (y_pred > 0.5).astype(int), **kwargs)\n\ntask = Task('binary', metric = acc_score)","f83282fc":"roles = {'target': TARGET_NAME,\n         'drop': ['Loan_ID']\n         }","b78faafb":"automl = TabularAutoML(task = task, \n                       timeout = TIMEOUT,\n                       cpu_limit = N_THREADS,\n                       general_params = {'use_algos': [['linear_l2', 'lgb', 'lgb_tuned']]},\n                       reader_params = {'n_jobs': N_THREADS, 'cv': N_FOLDS, 'random_state': RANDOM_STATE}\n                      )","875dcbd9":"oof_pred = automl.fit_predict(train1, roles = roles)","c9f286dc":"test_pred = automl.predict(test)","70a327e5":"print('Check scores...')\nprint('OOF score: {}'.format(acc_score(train1['Loan_Status'].values, oof_pred.data[:, 0])))","68195906":"mapp = {1:'Y',0:'N'}","e976f6af":"sub[TARGET_NAME] = (test_pred.data[:, 0] > 0.5).astype(int)\nsub.head()","2c1bcaf5":"sub[\"Loan_Status\"] = sub[\"Loan_Status\"].map(mapp)","15f3170e":"sub.to_csv('submission.csv', index = False)","84a6432a":"# Outliers","dc3799a4":"# Submission","b0df6f98":"# Data visualization","24cc49aa":"# Auto ML"}}