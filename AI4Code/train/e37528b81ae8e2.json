{"cell_type":{"056265fd":"code","4e834096":"code","e037c7a9":"code","9df06c96":"code","5088213b":"code","13667c89":"code","dfbbe282":"code","5552d059":"code","2d3c9522":"code","7a562e8f":"code","323cbea7":"code","0a9df172":"markdown","02129abd":"markdown","b502e7e6":"markdown"},"source":{"056265fd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","4e834096":"data=pd.read_csv(\"..\/input\/column_2C_weka.csv\")","e037c7a9":"data.info()","9df06c96":"data.head()","5088213b":"data.describe()","13667c89":"y=data[\"class\"].values #class\nx_data=data.drop([\"class\"],axis=1) #features","dfbbe282":"x=(x_data-np.min(x_data))\/(np.max(x_data)-np.min(x_data)) #normalization","5552d059":"y=[1 if each==\"Abnormal\" else 0 for each in data[\"class\"]]","2d3c9522":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42) #splitting train and test data","7a562e8f":"scores=[]\nfor each in range(1,18):\n    knn_t=KNeighborsClassifier(n_neighbors=each)\n    knn_t.fit(x_train,y_train)\n    scores.append(knn_t.score(x_test,y_test))\nplt.plot(range(1,18),scores)\nplt.xlabel(\"K values\")\nplt.ylabel(\"Scores\")\nplt.show()","323cbea7":"knn=KNeighborsClassifier(n_neighbors=15)\nknn.fit(x_train,y_train)\nprint(\"test accuracy is \",knn.score(x_test,y_test))","0a9df172":"K=15 gives best result. so \u0131 will use 15.","02129abd":"I want to find best K value.","b502e7e6":"I will make abnormal=1 normal=0 "}}