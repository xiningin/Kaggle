{"cell_type":{"bb3425af":"code","5dcad13a":"code","3e2b890e":"code","4559777c":"code","4aa9b578":"code","f1d6a003":"code","81e62ada":"code","9fae5a0c":"code","27a35192":"code","a73202e0":"code","3c934692":"code","e5d0461d":"code","c9f0617f":"code","aa6c6dbf":"code","4c05dbc9":"code","3dbbdbff":"code","cdf5b3c2":"code","b7f367dd":"code","31f84c3d":"code","2b81a3c5":"code","f135f1e8":"code","5632b900":"code","46eb097b":"code","3982b6ea":"code","89a74997":"code","4eca5c80":"code","84e58b50":"code","1875bd78":"code","707b8800":"code","25200210":"code","6ac7fb0d":"code","16a65980":"code","3394f221":"code","414fa547":"code","4cf742cf":"code","80e4619c":"code","04370310":"code","0c1e40b4":"code","be266d47":"code","81efab76":"code","f1cf66e0":"code","cac6a26d":"code","7d8cdebc":"code","febe64fc":"code","ca91cc75":"code","f6d385a4":"code","dac3f24a":"markdown","0e342244":"markdown","f1aeb014":"markdown","b708815b":"markdown","d4c9f7ad":"markdown","7cbc6d8b":"markdown","6703a410":"markdown","f579ebff":"markdown","3099fbae":"markdown","6434ddbf":"markdown","33420b6f":"markdown","27f8097c":"markdown","eed9559a":"markdown","37e7b0af":"markdown","4de4d43b":"markdown","9b20528b":"markdown","42c9fa2e":"markdown"},"source":{"bb3425af":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","5dcad13a":"from sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","3e2b890e":"#Train the Model\nfrom sklearn.linear_model import Ridge\n#Evaluating the Model\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\n#Train the Model\nfrom sklearn.linear_model import RidgeCV\n\nfrom sklearn.linear_model import LassoCV\nfrom sklearn.linear_model import ElasticNetCV","4559777c":"df= pd.read_csv('..\/input\/real-estate-price-prediction\/Real estate.csv')","4aa9b578":"df.head()","f1d6a003":"df.shape\n","81e62ada":"df.info()\n","9fae5a0c":"df.describe()\n","27a35192":"sns.pairplot(df)\n","a73202e0":"sns.heatmap(df.corr(), annot=True,cmap='RdYlBu_r')\n","3c934692":"X= df.drop(['Y house price of unit area','No'], axis=1)\ny=df['Y house price of unit area']","e5d0461d":"polynomial_converter= PolynomialFeatures(degree=3, include_bias=False)","c9f0617f":"poly_features= polynomial_converter.fit_transform(X)","aa6c6dbf":"poly_features.shape","4c05dbc9":"X_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)","3dbbdbff":"scaler= StandardScaler()","cdf5b3c2":"scaler.fit(X_train)","b7f367dd":"X_train= scaler.transform(X_train)\nX_test= scaler.transform(X_test)","31f84c3d":"ridge_model= Ridge(alpha=10)","2b81a3c5":"ridge_model.fit(X_train, y_train)","f135f1e8":"#predict Test Data\ny_pred= ridge_model.predict(X_test)","5632b900":"MAE= mean_absolute_error(y_test, y_pred)\nMSE= mean_squared_error(y_test, y_pred)\nRMSE= np.sqrt(MSE)","46eb097b":"pd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['metrics'])","3982b6ea":"ridge_cv_model=RidgeCV(alphas=(0.1, 1.0, 10.0), scoring='neg_mean_absolute_error')","89a74997":"ridge_cv_model.fit(X_train, y_train)","4eca5c80":"ridge_cv_model.alpha_","84e58b50":"#Predicting Test Data\ny_pred_ridge= ridge_cv_model.predict(X_test)","1875bd78":"MAE_ridge= mean_absolute_error(y_test, y_pred_ridge)\nMSE_ridge= mean_squared_error(y_test, y_pred_ridge)\nRMSE_ridge= np.sqrt(MSE_ridge)","707b8800":"pd.DataFrame([MAE_ridge, MSE_ridge, RMSE_ridge], index=['MAE', 'MSE', 'RMSE'], columns=['Ridge Metrics'])","25200210":"ridge_cv_model.coef_","6ac7fb0d":"lasso_cv_model= LassoCV(eps=0.01, n_alphas=100, cv=5)","16a65980":"lasso_cv_model.fit(X_train, y_train)","3394f221":"lasso_cv_model.alpha_","414fa547":"y_pred_lasso= lasso_cv_model.predict(X_test)","4cf742cf":"MAE_Lasso= mean_absolute_error(y_test, y_pred_lasso)\nMSE_Lasso= mean_squared_error(y_test, y_pred_lasso)\nRMSE_Lasso= np.sqrt(MSE_Lasso)","80e4619c":"pd.DataFrame([MAE_Lasso, MSE_Lasso, RMSE_Lasso], index=['MAE', 'MSE', 'RMSE'], columns=['Lasso Metrics'])","04370310":"lasso_cv_model.coef_","0c1e40b4":"elastic_model= ElasticNetCV(l1_ratio=[0.1, 0.5, 0.7, 0.9, 0.95, 0.99, 1],cv=5, max_iter=100000)","be266d47":"elastic_model.fit(X_train, y_train)","81efab76":"elastic_model.l1_ratio_","f1cf66e0":"y_pred_elastic=elastic_model.predict(X_test)","cac6a26d":"MAE_Elastic= mean_absolute_error(y_test, y_pred_elastic)\nMSE_Elastic= mean_squared_error(y_test, y_pred_elastic)\nRMSE_Elastic= np.sqrt(MSE_Elastic)","7d8cdebc":"pd.DataFrame([MAE_Elastic, MSE_Elastic, RMSE_Elastic], index=['MAE', 'MSE', 'RMSE'], columns=['Elastic Metrics'])","febe64fc":"elastic_model.coef_","ca91cc75":"list_elastic_model_coef=[]\nlist_elastic_model_coef = elastic_model.coef_\n","f6d385a4":"count = 0\nfor i in list_elastic_model_coef:\n    if i!=0:\n        count+=1\nprint(\"After Elastic Net, we have only \", count , \" none-zero coefficients.\")","dac3f24a":"### Dataset Information","0e342244":"### Load Dataset","f1aeb014":"#### 1- Ridge Regression","b708815b":"### Regularization","d4c9f7ad":"### 3: Elastic Net","7cbc6d8b":"### Train - Test Split","6703a410":"### Exploratory Data Analysis (EDA)","f579ebff":"### Import libraries","3099fbae":"### Regularization\nHave you ever encountered a situation where your machine learning model models the training data exceptionally well but fails to perform well on the testing data i.e. was not able to predict test data? This situation can be dealt with regularization in Machine learning.\n\nOverfitting happens when a model learns the very specific pattern and noise from the training data to such an extent that it negatively impacts our model\u2019s ability to generalize from our training data to new (\u201cunseen\u201d) data. By noise, we mean the irrelevant information or randomness in a dataset.\n\nPreventing overfitting is very necessary to improve the performance of our machine learning model.\n\n**What is Regularization?**\n\nIn general, regularization means to make things regular or acceptable. This is exactly why we use it for applied machine learning. In the context of machine learning, regularization is the process which regularizes or shrinks the coefficients towards zero. In simple words, regularization discourages learning a more complex or flexible model, to prevent overfitting.\n\n\n**How Does Regularization Work?**\n\nThe basic idea is to penalize the complex models i.e. adding a complexity term that would give a bigger loss for complex models. To understand it, let\u2019s consider a simple relation for linear regression. ","6434ddbf":"####  residual sum of squares (RSS)\n![](https:\/\/miro.medium.com\/max\/908\/1*DY3-IaGcHjjLg7oYXx1O3A.png)\n\n","33420b6f":"### Data Preprocessing","27f8097c":"### Scaling the data","eed9559a":"#### Lasso Regression\n![](https:\/\/miro.medium.com\/max\/1094\/1*tHJ4sSPYV0bDr8xxEdiwXA.png)","37e7b0af":"### 2: Lasso Regression","4de4d43b":"### Generate polynomial and interaction features","9b20528b":"#### Ridge Regression\n![](https:\/\/miro.medium.com\/max\/1106\/1*CiqZ8lhwxi5c4d1nV24w4g.png)","42c9fa2e":"### Ridge Regression (Coosing an alpha value with Cross-Validation)"}}