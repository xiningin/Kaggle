{"cell_type":{"660cead1":"code","c35ae48e":"code","8a985288":"code","7105151e":"code","6ce4f348":"code","edda6c66":"code","ea3a2be4":"code","5d493d7c":"code","8830b998":"code","b9e4048f":"code","3a3ba2ab":"code","86786c79":"code","8b719995":"code","fc8c0474":"code","9283cf9c":"code","aa401362":"code","14a7374e":"code","5b3b44e1":"code","bb0fd135":"code","c4b2213a":"code","f223c09a":"code","4f5f01d6":"code","98d5895e":"code","79692405":"code","8a954df6":"code","f8a7331a":"code","4b60058b":"code","71bdd551":"code","26a964df":"code","82c6c34a":"code","358106c3":"markdown"},"source":{"660cead1":"import tensorflow as tf\nfrom tensorflow import keras\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","c35ae48e":"print(tf.__version__, keras.__version__)","8a985288":"fashin_ds = keras.datasets.fashion_mnist","7105151e":"(Xtrain, ytrain), (Xtest, ytest) = fashin_ds.load_data()","6ce4f348":"Xtrain.shape","edda6c66":"Xtrain.dtype","ea3a2be4":"Xtrain, Xvalid = Xtrain[5000:] \/ 255.0, Xtrain[:5000] \/ 255.0\nytrain, yvalid = ytrain[5000:] , ytrain[:5000] ","5d493d7c":"class_names = [\"T-shirt\/top\", \"Trouser\", \"Pullover\", \"Dress\", \"Coat\",\n\"Sandal\", \"Shirt\", \"Sneaker\", \"Bag\", \"Ankle boot\"]","8830b998":"class_names[ytrain[0]]","b9e4048f":"Xtrain[1].shape","3a3ba2ab":"# This chunk of code is copied from https:\/\/www.kaggle.com\/cdeotte\/25-million-images-0-99757-mnist\n# PREVIEW IMAGES\nplt.figure(figsize=(15,4.5))\nfor i in range(50):  \n    plt.subplot(5, 10, i+1)\n    plt.imshow(Xtrain[i],cmap=plt.cm.binary)\n    plt.axis('off')\nplt.subplots_adjust(wspace=-.1, hspace=-0.01)\nplt.show()","86786c79":"model = keras.models.Sequential()\nmodel.add(keras.layers.Flatten(input_shape=[28,28]))\nmodel.add(keras.layers.Dense(300, activation='relu'))\nmodel.add(keras.layers.Dense(100, activation='relu'))\nmodel.add(keras.layers.Dense(10, activation='softmax'))","8b719995":"model.summary()","fc8c0474":"235500+30100+1010","9283cf9c":"keras.utils.plot_model(model)","aa401362":"model.layers","14a7374e":"model.layers[1].get_weights()[1].shape","5b3b44e1":"model.compile(loss=\"sparse_categorical_crossentropy\",\n              optimizer=\"sgd\",\n              metrics=[\"accuracy\"])","bb0fd135":"history = model.fit(Xtrain, ytrain, epochs=30, validation_data=(Xvalid, yvalid))","c4b2213a":"pd.DataFrame(history.history).plot(figsize=(8, 5))\nplt.grid(True)\nplt.gca().set_ylim(0, 1) # set the vertical range to [0-1]\nplt.show()","f223c09a":"model.evaluate(Xtest \/ 255.0, ytest)","4f5f01d6":"history.params","98d5895e":"history.history.keys()","79692405":"[len(history.history[key]) for key in history.history.keys()]","8a954df6":"X_new = Xtest[:50]\nypred = np.argmax(model.predict(X_new), axis=-1)","f8a7331a":"ypred","4b60058b":"misclassified = ypred - ytest[:50]\n\nmisclassified = misclassified.tolist()\nwrongs = [misclassified.index(i) for i in misclassified if i != 0]","71bdd551":"# original targets for wrongs\nfor i in wrongs:\n    print(class_names[ytest[i]])","26a964df":"# wrong predictions\nfor i in wrongs:\n    print(class_names[ypred[i]])","82c6c34a":"plt.figure(figsize=(15,4.5))\nj = 1\nfor i in wrongs:  \n    plt.subplot(4, 2, j)\n    j += 1\n    plt.imshow(Xtest[i],cmap=plt.cm.binary)\n    plt.axis('off')\nplt.subplots_adjust(wspace=-.1, hspace=-0.01)\nplt.show()","358106c3":"This model came out as a practicing Hands on Machine Lerning by A. Geron. A very lovely book. I am new in the area. As always comments and suggestions are more than welcome. Thanks a lot."}}