{"cell_type":{"8fa7e401":"code","7c389fbc":"code","968ae4e4":"code","b0fc33ad":"code","888f51e0":"code","806d7dd2":"code","d3f99e7a":"code","49f7f62c":"code","5a08f09d":"code","e402651f":"code","d5b93e58":"code","142b4273":"code","1ee2e61b":"code","c4af0884":"code","4030590c":"code","92927720":"code","c4ebf9cb":"code","c703337a":"code","7cb4e844":"code","56080c84":"code","d85534da":"code","e1ef9f47":"code","3cee1903":"code","303adf51":"code","211f600b":"code","22f05790":"code","eb65b432":"code","9feaec35":"code","b6930d78":"code","d435edea":"code","c2cf3a23":"code","5a2069bf":"code","07fab37e":"code","670c6b39":"code","b234c29e":"code","f2623e96":"code","b6b3986b":"code","fc08b196":"code","1d0e8959":"code","78b47d6c":"code","34e4b86e":"code","7ee8379a":"code","5b36a604":"code","e36808f9":"code","461843a9":"code","ece0cf1e":"code","0d5ee6d4":"code","cd2bf687":"code","7e579c78":"code","f8bae96c":"code","86b7f2ba":"code","d67b0ea6":"code","c8a54e0c":"code","a653989f":"code","78f6ccab":"code","74d80090":"code","d184fc5f":"code","584761f7":"code","3cbbfdc2":"code","89fedca0":"code","4a6f054b":"code","01b4536c":"code","63f75a94":"code","1c84fefe":"code","c66f9e00":"code","35e78b23":"code","bc41081d":"code","653cfaf8":"code","4ec8591e":"code","903f9146":"code","ab5699c4":"code","20810db5":"code","1851b7e7":"code","5b265bcc":"code","004adc6e":"code","99c11b28":"code","ec6b1e0b":"code","963cbae8":"code","da2e6bb4":"code","cee031c2":"markdown","17e1569d":"markdown","cd2c539c":"markdown","91dc538c":"markdown","6f995aae":"markdown","4f4a4abf":"markdown","a8f32252":"markdown","202cfd79":"markdown","7b0b19ce":"markdown","a7ac7bb7":"markdown","fedaabcd":"markdown","636f87df":"markdown","1e1e0ea6":"markdown"},"source":{"8fa7e401":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport matplotlib \nmatplotlib.rcParams[\"figure.figsize\"] = (20,10)","7c389fbc":"df = pd.read_csv('..\/input\/flats-for-rent-in-mumbai\/prop_data_clean.csv')\ndf.head()","968ae4e4":"df['city'].unique()","b0fc33ad":"df.columns","888f51e0":"df.count().sum()","806d7dd2":"df['floor_count'].isnull().sum()","d3f99e7a":"df1 = df.drop(['city','desc','dev_name','floor_count', 'floor_num', 'id', 'id_string','post_date', 'poster_name','project',\n       'title', 'trans', 'type', 'url', 'latitude','longitude'],axis='columns')\ndf1.head()","49f7f62c":"df1['user_type'].unique()","5a08f09d":"df1.shape","e402651f":"df1.isnull().sum()","d5b93e58":"df2 = df1.dropna()\ndf2.isnull().sum()","142b4273":"df2.shape","1ee2e61b":"df2.head()","c4af0884":"location = df2['locality'].value_counts()\nlocation","4030590c":"location.values.sum()","92927720":"len(location[location>10])","c4ebf9cb":"len(location)","c703337a":"len(location[location<=10])","7cb4e844":"location_stats_less_than_10 = location[location<=10]\nlocation_stats_less_than_10","56080c84":"len(df2.locality.unique())","d85534da":"df2['locality'] = df2.locality.apply(lambda x: 'other' if x in location_stats_less_than_10 else x)\nlen(df2.locality.unique())","e1ef9f47":"df2.head(10)","3cee1903":"df3 = df2.copy()","303adf51":"df3.head()","211f600b":"df3['furnishing'].unique()","22f05790":"df3.head()","eb65b432":"df3['price_per_sqft'] = df3['price']\/df3['area']\ndf3.head()","9feaec35":"df3_stats = df3['price_per_sqft'].describe()\ndf3_stats","b6930d78":"df3.to_csv(\"stage1_sufyan_project_mumbai_home_price.csv\",index=False)","d435edea":"df3.head()","c2cf3a23":"df3['bedroom_num'].value_counts()","5a2069bf":"bathroom_stat = df3['bathroom_num'].value_counts()\nbathroom_stat","07fab37e":"bathroom_stat_greater_six = bathroom_stat[bathroom_stat<=4]\nbathroom_stat_greater_six","670c6b39":"df3[df3.area\/df3.bedroom_num<300].head(20)","b234c29e":"df3.price_per_sqft.describe()","f2623e96":"df3.shape","b6b3986b":"df4 = df3.copy()","fc08b196":"df4.head()","1d0e8959":"temp = df4[df4.area\/df4.bedroom_num<200]\nlen(temp)","78b47d6c":"df4.shape","34e4b86e":"df5 = df4[~(df4.area\/df4.bedroom_num<200)]\ndf5.shape","7ee8379a":"df5['price_per_sqft'].describe()","5b36a604":"df6 = df5.copy()\ndf6.head()","e36808f9":"df6.shape","461843a9":"def remove_pps_outliers(df):\n    df_out = pd.DataFrame()\n    for key, subdf in df.groupby('locality'):\n        m = np.mean(subdf.price_per_sqft)\n        st = np.std(subdf.price_per_sqft)\n        reduced_df = subdf[(subdf.price_per_sqft>(m-st)) & (subdf.price_per_sqft<=(m+st))]\n        df_out = pd.concat([df_out,reduced_df],ignore_index=True)\n    return df_out\ndf7 = remove_pps_outliers(df6)\ndf7.shape","ece0cf1e":"df7.head()","0d5ee6d4":"def plot_scatter_chart(df,locality):\n    bhk2 = df[(df.locality==locality) & (df.bedroom_num==1)]\n    bhk3 = df[(df.locality==locality) & (df.bedroom_num==2)]\n    matplotlib.rcParams['figure.figsize'] = (15,10)\n    plt.scatter(bhk2.area,bhk2.price,color='blue',label='1 BHK', s=50)\n    plt.scatter(bhk3.area,bhk3.price,marker='+', color='green',label='2 BHK', s=50)\n    plt.xlabel(\"Total Square Feet Area\")\n    plt.ylabel(\"Price (Lakh Indian Rupees)\")\n    plt.title(locality)\n    plt.legend()\n    \nplot_scatter_chart(df7,\"Andheri East\")","cd2bf687":"def plot_scatter_chart(df,locality):\n    bhk2 = df[(df.locality==locality) & (df.bedroom_num==1)]\n    bhk3 = df[(df.locality==locality) & (df.bedroom_num==2)]\n    matplotlib.rcParams['figure.figsize'] = (15,10)\n    plt.scatter(bhk2.area,bhk2.price,color='blue',label='1 BHK', s=50)\n    plt.scatter(bhk3.area,bhk3.price,marker='+', color='green',label='2 BHK', s=50)\n    plt.xlabel(\"Total Square Feet Area\")\n    plt.ylabel(\"Price (Lakh Indian Rupees)\")\n    plt.title(locality)\n    plt.legend()\n    \nplot_scatter_chart(df7,\"Lokhandwala Complex\")","7e579c78":"df7.shape","f8bae96c":"def remove_bhk_outliers(df):\n    exclude_indices = np.array([])\n    for location, location_df in df.groupby('locality'):\n        bhk_stats = {}\n        for bhk, bhk_df in location_df.groupby('bedroom_num'):\n            bhk_stats[bhk] = {\n                'mean': np.mean(bhk_df.price_per_sqft),\n                'std': np.std(bhk_df.price_per_sqft),\n                'count': bhk_df.shape[0]\n            }\n        for bhk, bhk_df in location_df.groupby('bedroom_num'):\n            stats = bhk_stats.get(bhk-1)\n            if stats and stats['count']>5:\n                exclude_indices = np.append(exclude_indices, bhk_df[bhk_df.price_per_sqft<(stats['mean'])].index.values)\n    return df.drop(exclude_indices,axis='index')\ndf8 = remove_bhk_outliers(df7)\n# df8 = df7.copy()\ndf8.shape","86b7f2ba":"def plot_scatter_chart(df,locality):\n    bhk2 = df[(df.locality==locality) & (df.bedroom_num==1)]\n    bhk3 = df[(df.locality==locality) & (df.bedroom_num==2)]\n    matplotlib.rcParams['figure.figsize'] = (15,10)\n    plt.scatter(bhk2.area,bhk2.price,color='blue',label='1 BHK', s=50)\n    plt.scatter(bhk3.area,bhk3.price,marker='+', color='green',label='2 BHK', s=50)\n    plt.xlabel(\"Total Square Feet Area\")\n    plt.ylabel(\"Price (Lakh Indian Rupees)\")\n    plt.title(locality)\n    plt.legend()\n    \nplot_scatter_chart(df8,\"Andheri East\")","d67b0ea6":"def plot_scatter_chart(df,locality):\n    bhk2 = df[(df.locality==locality) & (df.bedroom_num==1)]\n    bhk3 = df[(df.locality==locality) & (df.bedroom_num==2)]\n    matplotlib.rcParams['figure.figsize'] = (15,10)\n    plt.scatter(bhk2.area,bhk2.price,color='blue',label='1 BHK', s=50)\n    plt.scatter(bhk3.area,bhk3.price,marker='+', color='green',label='2 BHK', s=50)\n    plt.xlabel(\"Total Square Feet Area\")\n    plt.ylabel(\"Price (Lakh Indian Rupees)\")\n    plt.title(locality)\n    plt.legend()\n    \nplot_scatter_chart(df8,\"Lokhandwala Complex\")","c8a54e0c":"df9 = df8.copy()\ndf9.head()","a653989f":"import matplotlib\nmatplotlib.rcParams[\"figure.figsize\"] = (20,10)\nplt.hist(df9.price_per_sqft,rwidth=0.8)\nplt.xlabel(\"Price Per Square Feet\")\nplt.ylabel(\"Count\")","78f6ccab":"df9['bathroom_num'].unique()","74d80090":"df9[df9['bathroom_num']>df9['bedroom_num']+2]","d184fc5f":"df9 = df9[df9['bathroom_num']<df9['bedroom_num']+2]\ndf9.shape","584761f7":"df10 = df9.drop(['price_per_sqft','user_type'],axis='columns')\ndf10.head()","3cbbfdc2":"df10['furnishing'].unique()","89fedca0":"df11 = df10.copy()","4a6f054b":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","01b4536c":"df11['furnishing']= le.fit_transform(df10['furnishing']) \ndf11['furnishing'].unique()","63f75a94":"df11.head()","1c84fefe":"dummies = pd.get_dummies(df11.locality)\ndummies.head(3)","c66f9e00":"df11 = pd.concat([df11,dummies.drop('other',axis='columns')],axis='columns')\ndf11.head()","35e78b23":"df12 = df11.drop('locality',axis='columns')\ndf12.head(2)","bc41081d":"df12.shape","653cfaf8":"X = df12.drop(['price'],axis='columns')\nX.head(3)","4ec8591e":"X.shape","903f9146":"y = df12.price\ny.head(3)","ab5699c4":"len(y)","20810db5":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=10)","1851b7e7":"from sklearn.linear_model import LinearRegression\nlr_clf = LinearRegression()\nlr_clf.fit(X_train,y_train)\nlr_clf.score(X_test,y_test)","5b265bcc":"from sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import cross_val_score\n\ncv = ShuffleSplit(n_splits=5, test_size=0.2, random_state=0)\n\ncross_val_score(LinearRegression(), X, y, cv=cv)","004adc6e":"from sklearn.model_selection import GridSearchCV\n\nfrom sklearn.linear_model import Lasso\nfrom sklearn.tree import DecisionTreeRegressor\n\ndef find_best_model_using_gridsearchcv(X,y):\n    algos = {\n        'linear_regression' : {\n            'model': LinearRegression(),\n            'params': {\n                'normalize': [True, False]\n            }\n        },\n        'lasso': {\n            'model': Lasso(),\n            'params': {\n                'alpha': [1,2],\n                'selection': ['random', 'cyclic']\n            }\n        },\n        'decision_tree': {\n            'model': DecisionTreeRegressor(),\n            'params': {\n                'criterion' : ['mse','friedman_mse'],\n                'splitter': ['best','random']\n            }\n        }\n    }\n    scores = []\n    cv = ShuffleSplit(n_splits=5, test_size=0.2, random_state=0)\n    for algo_name, config in algos.items():\n        gs =  GridSearchCV(config['model'], config['params'], cv=cv, return_train_score=False)\n        gs.fit(X,y)\n        scores.append({\n            'model': algo_name,\n            'best_score': gs.best_score_,\n            'best_params': gs.best_params_\n        })\n\n    return pd.DataFrame(scores,columns=['model','best_score','best_params'])\n\nfind_best_model_using_gridsearchcv(X,y)","99c11b28":"def predict_price(location,sqft,bath,bhk):    \n    loc_index = np.where(X.columns==location)[0][0]\n\n    x = np.zeros(len(X.columns))\n    x[0] = sqft\n    x[1] = bath\n    x[2] = bhk\n    if loc_index >= 0:\n        x[loc_index] = 1\n\n    return lr_clf.predict([x])[0]","ec6b1e0b":"predict_price('4 Bunglows',700, 2, 2)","963cbae8":"import pickle\nwith open('banglore_home_prices_model.pickle','wb') as f:\n    pickle.dump(lr_clf,f)","da2e6bb4":"import json\ncolumns = {\n    'data_columns' : [col.lower() for col in X.columns]\n}\nwith open(\"columns.json\",\"w\") as f:\n    f.write(json.dumps(columns))","cee031c2":"Area is in Sq feet ","17e1569d":"<h2 style='color:blue'>Data Load: Load Flats for Rent in Mumbai into a dataframe<\/h2>","cd2c539c":"K Fold cross validation","91dc538c":"In furnishing column   \n 0 = 'Furnished'   \n 1 = 'Semi-Furnished'   \n 2 = 'Unfurnished'","6f995aae":"<h2 style='color:blue'>Export location and column information to a file<\/h2>","4f4a4abf":"**Drop features that are not required to build our model**","a8f32252":"<h2 style='color:blue'>Export the tested model to a pickle file<\/h2>","202cfd79":"Test the model for few properties","7b0b19ce":"<h2 style='color:blue'>Build a Model Now...<\/h2>","a7ac7bb7":"Dataset is downloaded from here: https:\/\/www.kaggle.com\/jedipro\/flats-for-rent-in-mumbai\/download","fedaabcd":"<h1 style='color:purple' align='center'>Data Science Regression Project: Predicting Flats for Rent in Mumbai<\/h1>","636f87df":"GridSearchCV","1e1e0ea6":"<h2 style='color:blue'>Data Cleaning:<\/h2>"}}