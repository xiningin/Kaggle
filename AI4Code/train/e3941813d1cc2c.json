{"cell_type":{"c1b9b24d":"code","d9aff3ed":"code","07795c5a":"code","12dae95a":"code","865199af":"code","fb9b7b2f":"code","f86409f4":"code","e67c9594":"code","3cdde74c":"code","adcc4638":"code","f3dd4deb":"code","12f6b0f5":"code","f05bbd1f":"code","98811fca":"code","56d59329":"code","dc456b35":"code","abd98d12":"code","fa9be2fd":"code","3ed56d06":"markdown","cc57a2b5":"markdown","8878bbaf":"markdown","4a187336":"markdown","f9070c3d":"markdown","83c6f24e":"markdown","9d0e6bc0":"markdown"},"source":{"c1b9b24d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d9aff3ed":"#Importing python libraries\nfrom sklearn.metrics import make_scorer, accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn import preprocessing\nimport matplotlib.pylab as pylab\nimport matplotlib.pyplot as plt\nfrom pandas import get_dummies\nimport matplotlib as mpl\nimport xgboost as xgb\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport matplotlib\nimport warnings\nimport sklearn\nimport scipy\nimport numpy\nimport json\nimport sys\nimport csv\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.linear_model import Perceptron\nimport os\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn import linear_model","07795c5a":"pd.set_option('display.max_rows',100)# amount of rows that can be seen at a time","12dae95a":"# import train and test to play with it\ntrain_df = pd.read_csv('..\/input\/train.csv')\ntest_df = pd.read_csv('..\/input\/test.csv')","865199af":"train_df.info()","fb9b7b2f":"test_df.info()","f86409f4":"test_df['SalePrice'] = 0\n# Adding a row in test data for further calcualtion","e67c9594":"train_df.head()","3cdde74c":"# We are concating to get to know more about the complete dataset\ndf = pd.concat((train_df,test_df),axis = 0)\ndf = df.reset_index()","adcc4638":"df.info()","f3dd4deb":"df = df.drop(['index'],axis = 1)\ndf.tail()","12f6b0f5":"df = df.set_index(['Id'])","f05bbd1f":"df.head()","98811fca":"df.describe(include = 'all')","56d59329":"df.isnull().sum()","dc456b35":"df.MSZoning.value_counts()","abd98d12":"df.LotFrontage.value_counts()","fa9be2fd":"df.to_csv('out.csv')","3ed56d06":"<h2> After going through the dataset once , we know that we have to preprocess the complete data before applying machine learning algorithm <h2>","cc57a2b5":"<h1>We are making  test and train  dataframe to analyse the given dataset.<h1>","8878bbaf":"<h1>lets check out our data to get info about it.","4a187336":"<h1> Importing of Classes <h1>","f9070c3d":"\n<h1>File descriptions<h1>\n\ntrain.csv - the training set\ntest.csv - the test set\ndata_description.txt - full description of each column, originally prepared by Dean De Cock but lightly edited to match the column names used here\nsample_submission.csv - a benchmark submission from a linear regression on year and month of sale, lot square footage, and number of bedrooms\n\nData fields<br>\n<h1>Here's a brief version of what you'll find in the data description file.<br><h1>\n\nSalePrice - the property's sale price in dollars. This is the target variable that you're trying to predict.<br>\nMSSubClass: The building class<br>\nMSZoning: The general zoning classification<br>\nLotFrontage: Linear feet of street connected to property<br>\nLotArea: Lot size in square feet<br>\nStreet: Type of road access<br>\nAlley: Type of alley access<br>\nLotShape: General shape of property<br>\nLandContour: Flatness of the property<br>\nUtilities: Type of utilities available<br>\nLotConfig: Lot configuration<br>\nLandSlope: Slope of property<br>\nNeighborhood: Physical locations within Ames city limits<br>\nCondition1: Proximity to main road or railroad<br>\nCondition2: Proximity to main road or railroad (if a second is present)<br>\nBldgType: Type of dwelling<br>\nHouseStyle: Style of dwelling<br>\nOverallQual: Overall material and finish quality<br>\nOverallCond: Overall condition rating<br>\nYearBuilt: Original construction date<br>\nYearRemodAdd: Remodel date<br>\nRoofStyle: Type of roof<br>\nRoofMatl: Roof material<br>\nExterior1st: Exterior covering on house<br>\nExterior2nd: Exterior covering on house (if more than one material)<br>\nMasVnrType: Masonry veneer type<br>\nMasVnrArea: Masonry veneer area in square feet<br>\nExterQual: Exterior material quality<br>\nExterCond: Present condition of the material on the exterior<br>\nFoundation: Type of foundation<br>\nBsmtQual: Height of the basement<br>\nBsmtCond: General condition of the basement<br>\nBsmtExposure: Walkout or garden level basement walls<br>\nBsmtFinType1: Quality of basement finished area<br>\nBsmtFinSF1: Type 1 finished square feet<br>\nBsmtFinType2: Quality of second finished area (if present)<br>\nBsmtFinSF2: Type 2 finished square feet<br>\nBsmtUnfSF: Unfinished square feet of basement area<br>\nTotalBsmtSF: Total square feet of basement area<br>\nHeating: Type of heating<br>\nHeatingQC: Heating quality and condition<br>\nCentralAir: Central air conditioning<br>\nElectrical: Electrical system<br>\n1stFlrSF: First Floor square feet<br>\n2ndFlrSF: Second floor square feet<br>\nLowQualFinSF: Low quality finished square feet (all floors)<br>\nGrLivArea: Above grade (ground) living area square feet<br>\nBsmtFullBath: Basement full bathrooms<br>\nBsmtHalfBath: Basement half bathrooms<br>\nFullBath: Full bathrooms above grade<br>\nHalfBath: Half baths above grade<br>\nBedroom: Number of bedrooms above basement level<br>\nKitchen: Number of kitchens<br>\nKitchenQual: Kitchen quality<br>\nTotRmsAbvGrd: Total rooms above grade (does not include bathrooms)<br>\nFunctional: Home functionality rating<br>\nFireplaces: Number of fireplaces<br>\nFireplaceQu: Fireplace quality<br>\nGarageType: Garage location<br>\nGarageYrBlt: Year garage was built<br>\nGarageFinish: Interior finish of the garage<br>\nGarageCars: Size of garage in car capacity<br>\nGarageArea: Size of garage in square feet<br>\nGarageQual: Garage quality<br>\nGarageCond: Garage condition<br>\nPavedDrive: Paved driveway<br>\nWoodDeckSF: Wood deck area in square feet<br>\nOpenPorchSF: Open porch area in square feet<br>\nEnclosedPorch: Enclosed porch area in square feet<br>\n3SsnPorch: Three season porch area in square feet<br>\nScreenPorch: Screen porch area in square feet<br>\nPoolArea: Pool area in square feet<br>\nPoolQC: Pool quality<br>\nFence: Fence quality<br>\nMiscFeature: Miscellaneous feature not covered in other categories<br><br>\nMiscVal: $Value of miscellaneous feature <br>\nMoSold: Month Sold<br>\nYrSold: Year Sold<br>\nSaleType: Type of sale<br>\nSaleCondition: Condition of sale<br>","83c6f24e":"<p>Ask a home buyer to describe their dream house, and they probably won't begin with the height of the basement ceiling or the proximity to an east-west railroad. But this playground competition's dataset proves that much more influences price negotiations than the number of bedrooms or a white-picket fence.\n\nWith 79 explanatory variables describing (almost) every aspect of residential homes in Ames, Iowa, this competition challenges you to predict the final price of each home.<p>","9d0e6bc0":"* <h1><b>Competition Description<h1><br>\n    <br>\n![image.png](attachment:image.png)"}}