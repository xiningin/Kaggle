{"cell_type":{"0bc94967":"code","8764ee96":"code","db1289f0":"code","ecc5460c":"code","6aafe9e4":"code","9d34d41e":"code","25231daa":"code","603f4889":"code","4d954663":"code","d308a0c1":"code","aa26cec0":"code","dd3b763a":"code","3a27b7f9":"code","c51bab06":"code","cfd51675":"code","92198139":"code","f2c2e6c7":"code","d1ebfa12":"code","2778455d":"code","3f041309":"code","f626adb4":"code","a7372a4f":"code","c468e635":"code","ea865e93":"code","a82105e6":"code","1935802e":"code","8895efc5":"code","3bba66c4":"code","0abdbe16":"code","b6e0144a":"code","798847c6":"code","f81cce29":"markdown","8fbe48e7":"markdown","b0ef6d4a":"markdown","d0b0bcfa":"markdown","0c588887":"markdown","df345bd5":"markdown","c2b0c67c":"markdown","117c41a0":"markdown","7b1c616f":"markdown","6e0e30a3":"markdown","d54433fa":"markdown","e52719db":"markdown","7afa7c91":"markdown","09ed223e":"markdown","7b8b13e6":"markdown","88ba0b66":"markdown"},"source":{"0bc94967":"import numpy as np \nimport pandas as pd\nimport matplotlib\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline \nfrom wordcloud import WordCloud, STOPWORDS","8764ee96":"tweets_df = pd.read_csv(\"\/kaggle\/input\/trump-tweets\/trump_tweets.csv\")","db1289f0":"print(f\"data shape: {tweets_df.shape}\")","ecc5460c":"tweets_df.info()","6aafe9e4":"tweets_df.describe()","9d34d41e":"tweets_df.head()","25231daa":"def missing_data(data):\n    total = data.isnull().sum()\n    percent = (data.isnull().sum()\/data.isnull().count()*100)\n    tt = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n    types = []\n    for col in data.columns:\n        dtype = str(data[col].dtype)\n        types.append(dtype)\n    tt['Types'] = types\n    return(np.transpose(tt))","603f4889":"missing_data(tweets_df)","4d954663":"def unique_values(data):\n    total = data.count()\n    tt = pd.DataFrame(total)\n    tt.columns = ['Total']\n    uniques = []\n    for col in data.columns:\n        unique = data[col].nunique()\n        uniques.append(unique)\n    tt['Uniques'] = uniques\n    return(np.transpose(tt))","d308a0c1":"unique_values(tweets_df)","aa26cec0":"def most_frequent_values(data):\n    total = data.count()\n    tt = pd.DataFrame(total)\n    tt.columns = ['Total']\n    items = []\n    vals = []\n    for col in data.columns:\n        itm = data[col].value_counts().index[0]\n        val = data[col].value_counts().values[0]\n        items.append(itm)\n        vals.append(val)\n    tt['Most frequent item'] = items\n    tt['Frequence'] = vals\n    tt['Percent from total'] = np.round(vals \/ total * 100, 3)\n    return(np.transpose(tt))","dd3b763a":"most_frequent_values(tweets_df)","3a27b7f9":"tweets_df['datedt'] = pd.to_datetime(tweets_df['date'])","c51bab06":"tweets_df['year'] = tweets_df['datedt'].dt.year\ntweets_df['month'] = tweets_df['datedt'].dt.month\ntweets_df['day'] = tweets_df['datedt'].dt.day\ntweets_df['dayofweek'] = tweets_df['datedt'].dt.dayofweek\ntweets_df['hour'] = tweets_df['datedt'].dt.hour\ntweets_df['minute'] = tweets_df['datedt'].dt.minute","cfd51675":"tweets_df['dated'] = tweets_df.apply(lambda x: x.date[0:10], axis=1)\ntweets_df['dated'] = pd.to_datetime(tweets_df['dated'])","92198139":"def plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:31], palette='Set3')\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 0.2,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()    ","f2c2e6c7":"plot_count(\"dayofweek\", \"tweets per day of week\", tweets_df, size=2)","d1ebfa12":"plot_count(\"hour\", \"tweets per hour\", tweets_df, size=3)","2778455d":"plot_count(\"day\", \"tweets per day of month\", tweets_df, size=4)","3f041309":"def plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:20], palette='Set3')\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()    ","f626adb4":"stopwords = set(STOPWORDS)\n\ndef show_wordcloud(data, title = None):\n    wordcloud = WordCloud(\n        background_color='white',\n        stopwords=stopwords,\n        max_words=50,\n        max_font_size=40, \n        scale=5,\n        random_state=1\n    ).generate(str(data))\n\n    fig = plt.figure(1, figsize=(10,10))\n    plt.axis('off')\n    if title: \n        fig.suptitle(title, fontsize=20)\n        fig.subplots_adjust(top=2.3)\n\n    plt.imshow(wordcloud)\n    plt.show()","a7372a4f":"show_wordcloud(tweets_df['text'], title = 'Prevalent words in tweets')","c468e635":"tweets_df['hashtags'] = tweets_df['hashtags'].replace(np.nan, \"['None']\", regex=True)\ntweets_df['hashtags'] = tweets_df['hashtags'].apply(lambda x: x.replace('\\\\N',''))\ntweets_df['hashtags_count'] = tweets_df['hashtags'].apply(lambda x: len(x.split(',')))","ea865e93":"tweets_df['hashtags_individual'] = tweets_df['hashtags'].apply(lambda x: x.split(','))\nfrom itertools import chain\nall_hashtags = set(chain.from_iterable(list(tweets_df['hashtags_individual'])))\nprint(f\"There are totally: {len(all_hashtags)}: {all_hashtags}\")","a82105e6":"for hashtag in all_hashtags:\n    _d_df = tweets_df.loc[tweets_df.hashtags==hashtag]\n    print(f\"Hashtag: {hashtag}, tweets: {_d_df.shape[0]}\")","1935802e":"def plot_time_variation(df, x='date', y='retweets', hue=None, size=1, title=\"\", is_log=False):\n    f, ax = plt.subplots(1,1, figsize=(4*size,3*size))\n    g = sns.lineplot(x=x, y=y, hue=hue, data=df)\n    plt.xticks(rotation=90)\n    if hue:\n        plt.title(f'{y} grouped by {hue} | {title}')\n    else:\n        plt.title(f'{y} | {title}')\n    if(is_log):\n        ax.set(yscale=\"log\")\n    ax.grid(color='black', linestyle='dotted', linewidth=0.75)\n    plt.show() ","8895efc5":"plot_time_variation(tweets_df, x='dated', y='retweets', title= 'day averages and variation', size=4, is_log=False)","3bba66c4":"plot_time_variation(tweets_df, x='dated', y='favorites', title='day averages and variation',size=4, is_log=True)","0abdbe16":"plot_time_variation(tweets_df, x='dated', y='user_followers', title='day average and variation', size=4, is_log=False)","b6e0144a":"pd.set_option('display.max_colwidth', 150)\ntweets_ordered_df = tweets_df.sort_values(by=[\"retweets\"], ascending=False)\ntweets_ordered_df[[\"text\", \"date\", \"hashtags\",\"day\", \"hour\",  \"dayofweek\", \"retweets\", \"favorites\"]].head(5)","798847c6":"pd.set_option('display.max_colwidth', 150)\ntweets_ordered_df = tweets_df.sort_values(by=[\"favorites\"], ascending=False)\ntweets_ordered_df[[\"text\", \"date\", \"hashtags\",\"day\", \"hour\", \"dayofweek\", \"retweets\", \"favorites\"]].head(5)","f81cce29":"<h1>Trump Tweets<\/h1>\n\n\n<img src=\"https:\/\/static01.nyt.com\/images\/2017\/05\/31\/us\/31tweet-sub1\/31tweet-sub1-videoSixteenByNineJumbo1600.jpg\" width=\"600\"><\/img>\n\n# Introduction\n\n\nThe Dataset we are using here is collected using [Twitter API](https:\/\/developer.twitter.com\/en\/docs\/api-reference-index), and **[tweepy](https:\/\/www.tweepy.org\/)** Python package for easy use of Twitter API.  \n\nIt contains the recent Trump Tweets.\n\n\nNote: due to frequent abusive posts, some of the tweets of President Trump were censored by Twitter. As well, recently, his Twitter account was suspended and then permanently canceled.\n","8fbe48e7":"### Missing data","b0ef6d4a":"### Unique values","d0b0bcfa":"# Data preparation\n\n## Load packages","0c588887":"Most of the tweets have no hashtag associated and most of the tweets with hashtag have the trademark **MAGA** hashtag.","df345bd5":"Let's count the tweets with each of these hashtags.","c2b0c67c":"Let's see what are the tweets with most retweets and favorites.","117c41a0":"### Extract date & time features","7b1c616f":"### Most frequent values","6e0e30a3":"## Visualize the data distribution","d54433fa":"### Text wordcloauds","e52719db":"# Data exploration\n\n\n## Glimpse the data","7afa7c91":"Until recently, the tweets with most retweets and favorites have *MAGA* hashtag (Make America Great Again) or just the uppercase text of it or promote conspiracy theories related to the election.\n\nThen, the most retweets and favorites are with the tweets about POTUS Donald Trump and FLOTUS Melania Trump covid infection updates.\n\nWe also see in top 5 now (due to election days and counting the votes) recent tweets about election results (with claims of President Trump that he won the elections).\n\n\nRecent tweets related with the election (and vote counting) days are also making an impact. Let's do not forget that, due to fake news content, recent tweets from President Trump were censored by Twitter.  \n\nAlso recently we see a decrease in the number of followers of Donald Trump.\n","09ed223e":"## Load data","7b8b13e6":"### Impact analysis","88ba0b66":"### Hashtags analysis"}}