{"cell_type":{"8607bd58":"code","071b3a5f":"code","5e1774e7":"code","0d3f0814":"code","750648d0":"code","c5dde7a7":"code","43164aa0":"code","f3d294f5":"code","7f7aa495":"code","de17cf61":"markdown","9331c786":"markdown","882b8279":"markdown","81bb1e2d":"markdown","ec9cfe77":"markdown"},"source":{"8607bd58":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom xgboost import XGBRegressor","071b3a5f":"train = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/test.csv')\nprint('train shape:',train.shape)\nprint('test shape:',test.shape)","5e1774e7":"train.head()\n","0d3f0814":"# Train data\nX_train = train.drop(columns = ['loss','id'])\ny_train = train['loss'].values\n\n# Test data\nX_test=test.drop(columns = ['id'])\nprint('Train set:', X_train.shape)\nprint('Test set:', X_test.shape)","750648d0":"xgb_params = {'n_estimators': 10000,\n              'learning_rate': 0.010154255408501112,\n              'subsample': 0.8406787739843629,\n              'colsample_bytree': 0.7078557348809151,\n              'max_depth': 7,\n              'reg_lambda': 93.9874814976386,\n              'reg_alpha': 33.26324929265035,\n              'random_state': 42,\n              'n_jobs': 4}","c5dde7a7":"model = XGBRegressor(**xgb_params)\nmodel.fit(X_train, y_train,\n          eval_metric=\"rmse\",\n          verbose=True)","43164aa0":"y_pred = model.predict(X_test)","f3d294f5":"preds = pd.read_csv(\"..\/input\/tabular-playground-series-aug-2021\/sample_submission.csv\")\npreds.loss = y_pred\npreds.head()","7f7aa495":"preds.to_csv('submission_xgbboost_101.csv', index=False)","de17cf61":"# Submission","9331c786":"# Prediction","882b8279":"# Model training","81bb1e2d":"# Load dataset","ec9cfe77":"# Imports"}}