{"cell_type":{"65d5a0fa":"code","3b12c969":"code","33f1c6a2":"code","413538a8":"code","c199ff21":"code","30190674":"code","23d7a8e6":"code","b85a99cf":"code","48a9c389":"code","1fb7bf4a":"code","5cc4d2b4":"code","22e2e201":"code","cb8ec9d1":"code","1589032f":"code","99841aea":"code","b1a096d6":"code","ab68db16":"code","0ec695f4":"code","97c7885c":"code","5c52def3":"code","f4bcec5b":"code","7dca0e77":"code","49d41111":"code","49fb2bad":"code","b6a5ce9f":"code","614c6938":"code","81cfb406":"code","c7bf9aea":"code","a97e8201":"markdown","68f6ea7c":"markdown","54061a24":"markdown","907b64f8":"markdown","f190e8ce":"markdown","eb361fe2":"markdown","db1dc994":"markdown","ef0e8f60":"markdown","5a8028dd":"markdown","21bdd8cc":"markdown","502165b0":"markdown"},"source":{"65d5a0fa":"import numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px","3b12c969":"import pandas as pd\n \ndf = pd.read_csv('..\/input\/ibm-hr-analytics-attrition-dataset\/WA_Fn-UseC_-HR-Employee-Attrition.csv')\ndf\n","33f1c6a2":"df.head()","413538a8":"df.columns","c199ff21":"df.info()","30190674":"df.describe()","23d7a8e6":"df.isnull().sum()","b85a99cf":"# affiche des fr\u00e9quences des valeurs pour chaque colonne \nfor i in df.columns:\n  print(df[i].value_counts())","48a9c389":"# afficher les histogrames de toute la dateset\nimport matplotlib.pyplot as plt\ndf.hist(figsize=(20,30))\nplt.show()","1fb7bf4a":"attrition_freq = df[['Attrition']].apply(lambda x: x.value_counts())\nattrition_freq['frequency_percent'] = round((100 * attrition_freq \/ attrition_freq.sum()),2)\n\nprint(attrition_freq)\n\n# Attrition distribution bar plot\nplot = attrition_freq[['frequency_percent']].plot(kind=\"bar\");\nplot.set_title(\"Attrition Distribution\", fontsize=20);\nplot.grid(color='lightgray', alpha=0.5);","5cc4d2b4":"gender = {\n    'Male' : 1,\n    'Female' : 0\n}\ndf['Gender'] = df['Gender'].replace(gender)\ndf","22e2e201":"MaritalStatus = {\n    'Married' : 1,\n    'Single' : 0,\n    'Divorced' : 3,\n}\ndf['MaritalStatus'] = df['MaritalStatus'].replace(MaritalStatus)\ndf","cb8ec9d1":"# afficher les fr\u00e9quences des variable qualitatives\nprint(df['Attrition'].value_counts())\nprint(df['BusinessTravel'].value_counts())\nprint(df['Department'].value_counts())\nprint(df['EducationField'].value_counts())\nprint(df['JobRole'].value_counts())","1589032f":"fig = px.bar(df, x=\"EducationField\", y=\"Attrition\",\n              barmode='group',\n             height=600)\nfig.show()","99841aea":"fig = px.bar(df, x=\"JobRole\", y=\"Attrition\",\n              barmode='group',\n             height=600)\nfig.show()","b1a096d6":"fig = px.bar(df, x=\"EducationField\", y=\"Attrition\",\n              barmode='group',\n             height=600)\nfig.show()","ab68db16":"df.Attrition.replace({'Yes': 1, 'No': 0}, inplace=True)\n\ndf.BusinessTravel.replace({'Non-Travel': 0, 'Travel_Rarely': 1, 'Travel_Frequently': 2}, inplace=True)\n\ndf.Department.replace({'Sales': 0, 'Research & Development': 1, 'Human Resources': 2}, inplace=True)\n\ndf.OverTime.replace({'No': 0, 'Yes': 1}, inplace=True)\n\ndf.EducationField.replace({'Life Sciences': 0, 'Medical': 1, 'Marketing': 2, 'Technical Degree': 3, 'Human Resources': 4, 'Other': 5}, inplace=True)\n\ndf.JobRole.replace({\n'Sales Executive': 0, 'Research Scientist': 1, 'Laboratory Technician': 2,'Manufacturing Director': 3,'Healthcare Representative': 4,'Manager': 5,\n    'Sales Representative': 6,'Research Director': 7,'Human Resources': 8\n}, inplace=True)\n\ndf","0ec695f4":"df.drop(['EmployeeCount', 'EmployeeNumber', 'StandardHours', 'Over18'], axis=\"columns\", inplace=True)","97c7885c":"df.columns","5c52def3":"# traduire la matrice de corr\u00e9laion avec les heat map\ns , ax = plt.subplots( figsize =( 30 , 20 ) )\ncmap = sns.diverging_palette( 220 , 10 , as_cmap = True )\ns = sns.heatmap( df.corr(), cmap = cmap,square=True, cbar_kws={ 'shrink' : .9 }, ax=ax, annot = True, annot_kws = { 'fontsize' : 12 } )","f4bcec5b":"from sklearn.model_selection import train_test_split\ncol = ['Age', 'BusinessTravel', 'DailyRate', 'Department',\n       'DistanceFromHome', 'Education', 'EducationField',\n       'Gender', 'HourlyRate', 'JobInvolvement',\n       'JobLevel', 'JobRole', 'MaritalStatus',\n       'MonthlyIncome', 'MonthlyRate', 'NumCompaniesWorked', 'OverTime',\n       'PercentSalaryHike', 'PerformanceRating', 'RelationshipSatisfaction',\n       'StockOptionLevel', 'TotalWorkingYears', 'TrainingTimesLastYear',\n       'WorkLifeBalance', 'YearsAtCompany', 'YearsInCurrentRole',\n       'YearsSinceLastPromotion', 'YearsWithCurrManager']\nx = df[col]\ny = df.Attrition\nx_train,x_test,y_train,y_test = train_test_split(x,y, test_size=.3 ,random_state=30 )","7dca0e77":"from sklearn.preprocessing import StandardScaler ,Normalizer\n\ncol = ['Age', 'BusinessTravel', 'DailyRate', 'Department',\n       'DistanceFromHome', 'Education', 'EducationField',\n       'Gender', 'HourlyRate', 'JobInvolvement',\n       'JobLevel', 'JobRole', 'MaritalStatus',\n       'MonthlyIncome', 'MonthlyRate', 'NumCompaniesWorked', 'OverTime',\n       'PercentSalaryHike', 'PerformanceRating', 'RelationshipSatisfaction',\n       'StockOptionLevel', 'TotalWorkingYears', 'TrainingTimesLastYear',\n       'WorkLifeBalance', 'YearsAtCompany', 'YearsInCurrentRole',\n       'YearsSinceLastPromotion', 'YearsWithCurrManager']\nx = df[col]\ny = df.Attrition\nscaler = StandardScaler()\nnx = scaler.fit_transform(x)\nx_train,x_test,y_train,y_test = train_test_split(nx,y, test_size=.3 ,random_state=30 )","49d41111":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score,f1_score,precision_score,recall_score\n\nmodel = LogisticRegression()\nmodel.fit(x_train,y_train)\ny_pred = model.predict(x_test)\n\nprint('Accuracy : ', accuracy_score(y_test,y_pred))\nprint('f1_score : ', f1_score(y_test,y_pred))\nprint('precision_score : ', precision_score(y_test,y_pred))\nprint('recall_score : ', recall_score(y_test,y_pred))","49fb2bad":"from sklearn import svm\n\nmodel = svm.SVC(kernel='poly')\nmodel.fit(x_train,y_train)\ny_pred = model.predict(x_test)\n\nprint('Accuracy : ', accuracy_score(y_test,y_pred))\nprint('f1_score : ', f1_score(y_test,y_pred))\nprint('precision_score : ', precision_score(y_test,y_pred))\nprint('recall_score : ', recall_score(y_test,y_pred))","b6a5ce9f":"from math import sqrt\nsqrt(len(x_test))","614c6938":"from sklearn.neighbors import KNeighborsClassifier","81cfb406":"model = KNeighborsClassifier(n_neighbors=15)\nmodel.fit(x_train,y_train)\ny_pred = model.predict(x_test)\n\nprint('Accuracy : ', accuracy_score(y_test,y_pred))\nprint('f1_score : ', f1_score(y_test,y_pred))\nprint('precision_score : ', precision_score(y_test,y_pred))\nprint('recall_score : ', recall_score(y_test,y_pred))","c7bf9aea":"from sklearn.tree import DecisionTreeClassifier\n\nmodel = DecisionTreeClassifier()\nmodel.fit(x_train,y_train)\ny_pred = model.predict(x_test)\n\nprint('Accuracy : ', accuracy_score(y_test,y_pred))\nprint('f1_score : ', f1_score(y_test,y_pred))\nprint('precision_score : ', precision_score(y_test,y_pred))\nprint('recall_score : ', recall_score(y_test,y_pred))","a97e8201":"# **Applying machine learning algorithms**","68f6ea7c":"# **Logistic Regression**","54061a24":"Analyse des r\u00e9sultats de corr\u00e9lation (analyse d'\u00e9chantillons):\n\n* Monthly income est fortement corr\u00e9l\u00e9 avec Job level.\n* Job level est fortement corr\u00e9l\u00e9 avec total working years.\n* Monthly income est fortement corr\u00e9l\u00e9 au total working hours.\n* Age est \u00e9galement positivement corr\u00e9l\u00e9 avec the Total working hours.\n* Marital status et stock option level sont n\u00e9gativement corr\u00e9l\u00e9s","907b64f8":"# DecisionTree (DT)","f190e8ce":"# Support Vector Machines (SVM)","eb361fe2":"* EmployeeNumber peut \u00eatre supprim\u00e9 car il s'agit d'une repr\u00e9sentation unique de Employee et n'a aucune signification avec l'attrition.\n* EmployeCount n'a qu'une seule valeur, ce qui, encore une fois, n'aidera pas notre mod\u00e8le de pr\u00e9diction.\n* StandardHours n'a qu'une seule valeur qui est 80, encore une fois n'aidera pas dans notre mod\u00e8le de pr\u00e9diction.\n* Over18 c'est les employ\u00e9s \u00e2g\u00e9s de plus de 18 ans et n'a qu'une valeur unique, Donc cette fonctionnalit\u00e9 n'a pas de variation et n'aidera pas notre mod\u00e8le de pr\u00e9diction.","db1dc994":"# k-Nearest neighbors (k-NN)","ef0e8f60":"**Objectif:** pr\u00e9dire si un employ\u00e9 va d\u00e9missionner ou non. D\u00e9couvrez les facteurs qui m\u00e8nent \u00e0 l'attrition des employ\u00e9s et explorez comment chaque caract\u00e9ristique est li\u00e9e \u00e0 l'attrition.\n\nJeu de donn\u00e9es: Nous utilisons un jeu de donn\u00e9es mis en place par IBM pour notre analyse. Le jeu de donn\u00e9es contient 35 entit\u00e9s avec la variable cible Attrition. Il s'agit d'un ensemble de donn\u00e9es fictif cr\u00e9\u00e9 par les data scientists d'IBM.\n\n**M\u00e9thodologie:** Gr\u00e2ce \u00e0 notre analyse, nous avons l'intention de construire un mod\u00e8le qui peut pr\u00e9dire si un employ\u00e9 est sur le point de quitter. Nous allons examiner toutes les variables \u00e0 travers quelques graphiques et en d\u00e9duire dans notre analyse exploratoire. Apr\u00e8s notre exploration, nous allons construire quelques fonctionnalit\u00e9s bas\u00e9es sur les variables \u00e0 port\u00e9e de main et prendre un appel d'exclusion de quelques variables dans notre cas.\n\n**Attrition dans une organisation || Pourquoi les travailleurs quittent-ils?**\n\nLes employ\u00e9s sont l'\u00e9pine dorsale de l'organisation. La performance de l'organisation est fortement bas\u00e9e sur la qualit\u00e9 des employ\u00e9s. Les d\u00e9fis auxquels une organisation doit faire face en raison de l'attrition des employ\u00e9s sont les suivants:\n\n* Co\u00fbteux en termes d'argent et de temps pour former de nouveaux employ\u00e9s.\n* Perte d'employ\u00e9s exp\u00e9riment\u00e9s.\n* Impact sur la productivit\u00e9.\n* Impact sur les b\u00e9n\u00e9fices.\n\n**Questions commerciales \u00e0 r\u00e9fl\u00e9chir:**\n\n* Quels facteurs contribuent le plus \u00e0 l'attrition des employ\u00e9s?\n* Quel type de mesures l'entreprise doit-elle prendre pour fid\u00e9liser ses employ\u00e9s?","5a8028dd":"Attrition Target Variable Distribution","21bdd8cc":"**Conclusion:**\n\n* Les employ\u00e9s ayant un faible JobLevel, MonthlyIncome, YearAtCompany, and TotalWorkingYears sont plus susceptibles de quitter leur emploi.\n\n* JobRole : Les techniciens de laboratoire, les repr\u00e9sentants des ventes et des ressources humaines sont plus susceptibles de quitter compar\u00e9 aux employ\u00e9s occupant d'autres postes.\n\n* MaritalStatus: Les travailleurs qui ont le statut c\u00e9libataire sont plus susceptibles de quitter compar\u00e9 aux employ\u00e9s mari\u00e9es et divorc\u00e9es.\n\n* Gender: les hommes sont plus susceptibles de quitter.\n\n* D\u00e9partment: Les employ\u00e9s en recherche et d\u00e9veloppement sont plus susceptibles de rester relativement aux employ\u00e9s d'un autre d\u00e9partement.\n\n* EducationField: Les travailleurs ayant des diplomes en ressources humaines et en technique sont plus susceptibles de quitter compar\u00e9 aux employ\u00e9s dans d'autres domaines d'\u00e9tudes.","502165b0":"Il y a quelques variables qui sont repr\u00e9sent\u00e9es sous forme num\u00e9rique, mais ce sont en fait des variables cat\u00e9goriques ordonn\u00e9es, c'est-\u00e0-dire Eduation, EnvironmentSatisfaction, JobInvolvement, JobLevel, JobSatisfaction,PerformanceRating, RelationshipSatisfaction, WorkLifeBalance, StockOptionLevel.\n\n**Education** 1 'Au-dessous du coll\u00e8ge' 2 'Coll\u00e8ge' 3 'Licence' 4 'Ma\u00eetre' 5 'Docteur'\n\n**EnvironnementSatisfaction** 1 'Faible' 2 'Moyen' 3 'haut' 4 'Tr\u00e8s \u00e9lev\u00e9'\n\n**JobInvolvemen** 1 'Faible' 2 'Moyen' 3 'haut' 4 'Tr\u00e8s \u00e9lev\u00e9'\n\n**JobSatisfaction** 1 'Faible' 2 'Moyen' 3 'haut' 4 'Tr\u00e8s \u00e9lev\u00e9'\n\n**PerformanceRating** 1 'Faible' 2 \u00abBon\u00bb 3 \u00abExcellent\u00bb 4 'Exceptionnel'\n\n**RelationshipSatisfaction** 1 'Faible' 2 'Moyen' 3 'haut' 4 'Tr\u00e8s \u00e9lev\u00e9'\n\n**WorkLifeBalance** 1 'Mauvais' 2 'Bon' 3 'Mieux' 4 'Meilleur'"}}