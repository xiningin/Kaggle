{"cell_type":{"91e99cf4":"code","dca518d5":"code","56f75a26":"code","e70fd7f1":"code","c04e6595":"code","3ecabf93":"code","27516478":"code","f69a8a9d":"code","697f157e":"code","4a94b5df":"markdown","9c2dae1a":"markdown","4ee49b5c":"markdown","8a43260f":"markdown","76f96a12":"markdown","f5f64d3f":"markdown"},"source":{"91e99cf4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","dca518d5":"sample = pd.read_csv(\"..\/input\/stage_1_sample_submission.csv\")\ntrain_labels  = pd.read_csv(\"..\/input\/stage_1_train_labels.csv\")","56f75a26":"print(\"number of points in the 0 Neg class is %i\" % (train_labels.drop_duplicates('patientId', keep = 'first'))[(train_labels.drop_duplicates('patientId', keep = 'first'))['Target'] == 0].shape[0])\nprint(\"number of points in the 1 pos class is %i\" % (train_labels.drop_duplicates('patientId', keep = 'first'))[(train_labels.drop_duplicates('patientId', keep = 'first'))['Target'] == 1].shape[0]) ","e70fd7f1":"print(\"The number of traning examples(data points) = %i \" % train_labels.shape[0])\nprint(\"The number of features we have = %i \" % train_labels.shape[1])","c04e6595":"train_labels.describe()","3ecabf93":"train_labels.isna().sum()","27516478":"train_labels","f69a8a9d":"import pydicom\n\nPathDicom = \"..\/input\/stage_1_train_images\/\"\nimages = []  # create an empty list\nfor dirName, subdirList, fileList in os.walk(PathDicom):\n    for filename in fileList:\n        images.append((os.path.join(dirName,filename),filename))","697f157e":"import matplotlib.pyplot as plt\nimport matplotlib.patches as patches\n\nf, ax = plt.subplots(2, 2, figsize=(25,20))\nimage_index = 0\nfor i in ax:\n    for j in i:\n        print(j)\n        data = pydicom.read_file(images[image_index][0])\n        print(\"\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\\n\", data, \"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\/n\" )\n        image = data.pixel_array\n        j.imshow(image) \n        rows = train_labels[train_labels[\"patientId\"].str.match(images[image_index][1][:-4])]\n        print( rows )\n        for index, row in rows.iterrows():\n            rect = patches.Rectangle((row['x'],row['y']),row['width'],row['height'],linewidth=5,edgecolor='b',facecolor='none')\n            j.add_patch(rect)\n        image_index += 1\n    ","4a94b5df":"I need to explore the number of data points in the dataset to know how many bounding boxes i have","9c2dae1a":"I will see how much nulls we have but since the data of the neg. class have nulls in the x , y and dimentions of the bounding boxes for the images, it seems that we will only need to drop them later when drawing.","4ee49b5c":"We should know the number of data points in each of the two classes we have to determine which performance metric must be used.","8a43260f":"After knowing the numbers of examples in each class it seems that the data is skewed that is one class is domenating the other in the RSNA dataset so I should use F1 score later instead of accuracy.\nNow i will explore some statistics using Dataframe.describe() ...","76f96a12":"Now I will import the data into a dataframe to be able to use it later","f5f64d3f":"Let's start with exploring the dataset and see how the images look ?"}}