{"cell_type":{"bf5ad305":"code","2d0ce55f":"code","4319b542":"code","44433042":"code","757fda6e":"code","72730b70":"code","30c9e95f":"code","366489d4":"code","a8bcbc74":"code","6b899576":"code","b0a336cf":"code","e1b3d027":"code","0f49d790":"code","35664dcd":"code","6e0eeaad":"code","f7624935":"code","292cc853":"code","9474299f":"code","6d66d0a0":"code","06415c77":"code","d7626288":"code","556dfbd4":"code","d1c43a6b":"code","72ff39b9":"code","1c06b5d2":"markdown","e4a54e6c":"markdown","b9fae282":"markdown","7e95c333":"markdown","c5064dcd":"markdown","3e460209":"markdown","e822ed59":"markdown"},"source":{"bf5ad305":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings \nwarnings.filterwarnings('ignore' )","2d0ce55f":"# Read the dataset\ndf = pd.read_csv('..\/input\/ls-results-constituency-wise-2014\/Data_LS.csv')","4319b542":"# Displaying first 5 enteries\ndf.head()","44433042":"# Displaying last 5 enteries\ndf.tail()","757fda6e":"# To find number of rows and columns\n\nprint(\"There are {} rows and {} columns in the dataframe.\".format(df.shape[0],df.shape[1]))","72730b70":"# To know datatypes and missing values if any\n\ndf.info()","30c9e95f":"# Total number of votes polled\n\ntotal_votes = df.groupby(['Name of State\/ UT']).agg({'Total Votes Polled':sum}).sum()\nprint(\"Total number of votes polled during 2014 Lak sabha election was : {}\".format(total_votes[0]))","366489d4":"# Statewise total number of voters\n\ntotal_votes_statewise = df.groupby(['Name of State\/ UT']).agg({'Total Votes Polled':sum}).sort_values(\n    'Total Votes Polled', ascending=False).reset_index()\n\nplt.figure(figsize=(15,5))\nplt.title('Total number of people casted vote in perticular state',fontweight=\"bold\")\nsns.barplot('Name of State\/ UT','Total Votes Polled', data=total_votes_statewise)\nplt.xticks(rotation=90)\nplt.show()","a8bcbc74":"# Total votes partywise\n\npartywise_total_vate = df.groupby(['Party Name']).agg({'Total Votes Polled':sum}).sort_values(\n    'Total Votes Polled',ascending=False).reset_index().head(25)\n\nplt.figure(figsize=(15,5))\nplt.title('Total number of people casted vote to perticular political party',fontweight=\"bold\")\nsns.barplot('Party Name','Total Votes Polled',data=partywise_total_vate)\nplt.xticks(rotation=90)\nplt.show()","6b899576":"# Statewise top party that recieved total number of votes\n\nswtpv =df.groupby(['Name of State\/ UT','Party Name']).agg({'Total Votes Polled':sum}).sort_values([\n    'Name of State\/ UT','Total Votes Polled'],ascending=False).reset_index().drop_duplicates(\n    'Name of State\/ UT').reset_index().drop('index',axis=1)\nswtpv","b0a336cf":"# pie chart of percentage of candidates won out of total candidate participated\n\nplt.figure(figsize=(10,7))\nplt.title('Pie Chart for percentage of candidates won',fontweight=\"bold\")\nplt.pie(df['Winner or Not?'].value_counts(),autopct='%1.1f%%', explode=(0,0.1),labels=df['Winner or Not?'\n                                                                                        ].value_counts().index.tolist())\nplt.show()","e1b3d027":"# statewise top 5 party with highest total number of votes \n\ntop_5 = df.groupby(['Name of State\/ UT','Party Name']).agg({'Total Votes Polled':sum}).sort_values([\n    'Name of State\/ UT','Total Votes Polled'],ascending=False).groupby(['Name of State\/ UT']).head(5)\ntop_5","0f49d790":"# statewise number of seats a party won\n\ndf[df['Winner or Not?']=='yes'].groupby(['Name of State\/ UT','Party Name']).agg({'Winner or Not?':'count'})","35664dcd":"# Top 15 party with most number of seats won\n\nTop_15 = df[df['Winner or Not?']=='yes'].groupby('Party Name').agg({\"Winner or Not?\": 'count'}).sort_values(\n    \"Winner or Not?\",ascending=False).rename(columns={\"Winner or Not?\": 'Seats_won'}).head(15)\n\nTop_15","6e0eeaad":"a=Top_15.reset_index()\nplt.figure(figsize=(15,3))\nplt.title('Top 15 political party in terms of seats won',fontweight=\"bold\")\nsns.barplot(x=a['Party Name'],y=a['Seats_won'])\nplt.xticks(rotation=90)\nplt.show()","f7624935":"# Grouping\na=df[df['Winner or Not?']=='yes'].groupby('Party Name').agg({\"Winner or Not?\": 'count'}).sort_values(\n    \"Winner or Not?\",ascending=False).rename(columns={\"Winner or Not?\": 'Seats_won'})\n\n# Taking top 15 party by number of seats and remaining put in to other\nother_value = a.sum()[0]-a.head(15).sum()[0]\n\na=a.head(15).reset_index()\n\n# DataFrame for other\nb=pd.DataFrame({'Party Name':['Other'],\n             'Seats_won':[other_value]})\n\n# Joing the other with the top 15\na=a.append(b,ignore_index=True)\n\ndata=a.Seats_won.tolist()\nlabel=a['Party Name'].tolist()\nplt.figure(figsize=(20,8))\nplt.title('Percentage of seats won per political party',fontweight=\"bold\")\nplt.pie(data,labels=label, autopct='%1.1f%%')\nplt.show()","292cc853":"# Taking out all the candiates that has df_won\ndf_won = df[df['Winner or Not?']=='yes'].reset_index().drop('index',axis=1)\n\n# Taking column name is list\nconstituency_name = pd.unique(df_won['Parliamentary Constituency'])\n\n# Creating new column as assigning with 'NaN'\ndf_won['Vote_margin'] = np.nan","9474299f":"# For loop to calculate vote margin and filling it to its respective place\nfor i in constituency_name:\n    row = df[df['Parliamentary Constituency']== i ].sort_values('Total Votes Polled', ascending=False)\n    first = row.iloc[0][3]\n    second = row.iloc[1][3]\n    difference = first - second\n    df_won[df_won['Parliamentary Constituency']== i] = df_won[df_won['Parliamentary Constituency']== i].fillna(difference)\n    \n# Since the column 'Vote_margin' is in float, changing it to int\ndf_won['Vote_margin']=df_won['Vote_margin'].astype(int)","6d66d0a0":"# Bottom 10 candidates in turms of vote vargin\nbuttom_10_margin = df_won.sort_values('Vote_margin',ascending=False).tail(10)","06415c77":"# Plotting for Bottom 10 candidates in turms of vote vargin\nplt.figure(figsize=(15,5))\nplt.title('Bottom 10 candiadtes with lowest win margin',fontweight=\"bold\")\nsns.barplot('Candidate Name','Vote_margin',hue='Party Abbreviation',data=buttom_10_margin, dodge=False)\nplt.xticks(rotation=90)\nplt.show()","d7626288":"# Top 10 candidates in turms of vote vargin\ntop_10_margin = df_won.sort_values('Vote_margin',ascending=False).head(10)","556dfbd4":"# Plotting for Top 10 candidates in turms of vote vargin\nplt.figure(figsize=(15,5))\nplt.title('Top 10 candiadtes with highest win margin',fontweight=\"bold\")\nsns.barplot('Candidate Name','Vote_margin',hue='Party Abbreviation',data=top_10_margin, dodge=False)\nplt.xticks(rotation=90)\nplt.show()","d1c43a6b":"# Maximum vote margin\ndf_won[df_won['Vote_margin']==max(df_won['Vote_margin'])]","72ff39b9":"# Minimum vote margin\ndf_won[df_won['Vote_margin']==min(df_won['Vote_margin'])]","1c06b5d2":"### Exploratory Data Analysis:","e4a54e6c":"### Do let me know if anything better or extra could be done. If you like the work done on the notebook please do upvote. \n## Happy Learning!","b9fae282":"- There are 6 object column and 1 integer column\n- There are no mussing values","7e95c333":"### Importing import Libraries:","c5064dcd":"#### Pie chart for total number of seats per political party:","3e460209":"#### Calculating Vote margin by which a candidate has won:","e822ed59":"# Exploratory Data Analysis(EDA) on Lok Sabha Election - 2014"}}