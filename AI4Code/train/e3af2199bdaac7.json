{"cell_type":{"2ba840da":"code","983cd5fb":"code","9f0ce62f":"code","12199b39":"code","cd3d4f47":"code","02c73174":"code","b44a0c2a":"code","254c1c9b":"code","a52db169":"code","7bb00cdf":"code","0e9a27ef":"code","0114f52c":"code","fe51e62b":"code","c3f5d44a":"code","dae24357":"code","58e34a64":"code","e433ffab":"code","315e1bd6":"code","30c293cf":"code","6f6e2f81":"code","fbc3c9a1":"code","2b29c15e":"code","b8bd1253":"code","737e9e1a":"code","426d5d89":"code","3317e229":"code","cd5a5aa9":"code","a7d00f89":"code","14675900":"code","41c46ec4":"code","d1f7a6bb":"markdown","89abe38a":"markdown","fc5d927d":"markdown","85d311b1":"markdown","06bf086e":"markdown","1d835fa7":"markdown","d6fea0c3":"markdown","26fdd3cc":"markdown","d2645039":"markdown"},"source":{"2ba840da":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff","983cd5fb":"df = pd.read_excel(\"..\/input\/usa-monthly-retail-trade\/mrtssales92-present.xls\",sheet_name = None, header = 0, encoding = 'utf-8',errors='strict')","9f0ce62f":"df","12199b39":"for key in df:\n    df[key] = df[key].loc[:, ~df[key].columns.str.contains('^Unnamed')]","cd3d4f47":"df_cat_ad = {}\ndf_cat_nad = {}\nfor key in df:\n    df_cat = df.copy()\n    df_cat[key]['NAICS  Code'] = df_cat[key]['NAICS  Code'].astype('str')\n    df_cat[key]['NAICS Code Cat'] = df_cat[key]['NAICS  Code'].str.extract('^(\\d{3})$')\n    index = pd.Index(df_cat[key]['Kind of Business'])\n    x = index.get_loc('ADJUSTED(2)')\n    df_cat_ad[key] = df_cat[key].iloc[x:]\n    df_cat_ad[key] = df_cat_ad[key].dropna(subset = ['NAICS Code Cat'])\n    df_cat_ad[key] = df_cat_ad[key].reset_index(drop = True)\n    df_cat_ad[key] = df_cat_ad[key].drop(['NAICS Code Cat'], axis=1)\n    df_cat_nad[key] = df_cat[key].iloc[0:x]\n    df_cat_nad[key] = df_cat_nad[key].dropna(subset = ['NAICS Code Cat'])\n    df_cat_nad[key] = df_cat_nad[key].reset_index(drop = True)\n    df_cat_nad[key] = df_cat_nad[key].drop(['NAICS Code Cat'], axis=1)","02c73174":"df_cat_nad['2016']","b44a0c2a":"df_cat_nad['2019'].info()","254c1c9b":"df_cat_nad['2019']","a52db169":"def string_finder(row, words):\n    if any(word in field for field in row for word in words):\n        return 1\n    return 0","7bb00cdf":"match = ['(NA)', '(S)']\nfor key in df:\n    df_cat_nad[key]['isContained'] = df_cat_nad[key].astype(str).apply(string_finder, words=match, axis=1)\n    df_cat_ad[key]['isContained'] = df_cat_ad[key].astype(str).apply(string_finder, words=match, axis=1)\n    print(key)\n    print('Not Adjusted data contains', df_cat_nad[key]['isContained'].sum(), '(NA):Not Available or (S):Suppressed values')\n    print('Adjusted data contains', df_cat_ad[key]['isContained'].sum(), '(NA):Not Available or (S):Suppressed values')\n#     df_cat_nad[key] = df_cat_nad[key].drop(['isContained'], axis=1)\n#     df_cat_ad[key] = df_cat_ad[key].drop(['isContained'], axis=1)","0e9a27ef":"for key in df:\n    df_cat_nad[key].info()\n    df_cat_ad[key].info()","0114f52c":"df_cat_nad['1992']","fe51e62b":"for key in df:\n    df_cat_nad[key].iloc[ : ,2: ] = df_cat_nad[key].iloc[ : ,2: ].astype(float)\n    df_cat_ad[key].iloc[ : ,2: ] = df_cat_ad[key].iloc[ : ,2: ].astype(float)","c3f5d44a":"for key in df:\n    df_cat_nad[key].info()\n    df_cat_nad[key].info()","dae24357":"for key in df:\n    df_cat_nad[key] = df_cat_nad[key].drop(['isContained'], axis=1)\n    df_cat_ad[key] = df_cat_ad[key].drop(['isContained'], axis=1)","58e34a64":"for key in df:\n    df_cat_nad[key]['Kind of Business'] = df_cat_nad[key]['NAICS  Code'] + ': ' + df_cat_nad[key]['Kind of Business']\n    df_cat_ad[key]['Kind of Business'] = df_cat_ad[key]['NAICS  Code'] + ': ' + df_cat_ad[key]['Kind of Business']","e433ffab":"df_cat_nad_m = {}\ndf_cat_ad_m = {}\nfor key in df:\n    df_cat_nad_m[key] = df_cat_nad[key].iloc[ : ,1:-1]\n    df_cat_nad_m[key] = df_cat_nad_m[key].transpose(copy = True)\n    header = df_cat_nad_m[key].iloc[0]\n    df_cat_nad_m[key] = df_cat_nad_m[key][1:]\n    df_cat_nad_m[key] = df_cat_nad_m[key].rename(columns = header)\n    df_cat_nad_m[key] = df_cat_nad_m[key].astype(float)\n    df_cat_nad_m[key] = df_cat_nad_m[key].reset_index().rename(columns={'index': 'Months'})\n    df_cat_ad_m[key] = df_cat_ad[key].iloc[ : ,1:-1]\n    df_cat_ad_m[key] = df_cat_ad_m[key].transpose(copy = True)\n    header = df_cat_ad_m[key].iloc[0]\n    df_cat_ad_m[key] = df_cat_ad_m[key][1:]\n    df_cat_ad_m[key] = df_cat_ad_m[key].rename(columns = header)\n    df_cat_ad_m[key] = df_cat_ad_m[key].astype(float)\n    df_cat_ad_m[key] = df_cat_ad_m[key].reset_index().rename(columns={'index': 'Months'})","315e1bd6":"df_cat_ad_m['2016']","30c293cf":"for key in df:\n    df_cat_nad_m[key].info()\n    df_cat_nad_m[key].info()","6f6e2f81":"df_NA_months = pd.concat(df_cat_nad_m,ignore_index=True)\ndf_A_months = pd.concat(df_cat_ad_m,ignore_index=True)","fbc3c9a1":"df_A_months","2b29c15e":"df_NA_months['Months'] = pd.to_datetime(df_NA_months['Months'], infer_datetime_format=True)\ndf_A_months['Months'] = pd.to_datetime(df_A_months['Months'], infer_datetime_format=True)","b8bd1253":"df_NA_months = df_NA_months.set_index('Months')\ndf_A_months = df_A_months.set_index('Months')","737e9e1a":"df_A_months","426d5d89":"full_grouped = df_A_months.rename(columns = {'Months': 'ds'})\n\n# Group data\ndf_group = full_grouped.groupby(by = 'ds')['Confirmed', 'Deaths', 'Recovered', 'Active'].sum()\n\n# change index to datetime\ndf_group.index = pd.to_datetime(df_group.index)\n\n# Set frequncy of time series\ndf_group = df_group.asfreq(freq = '1D')\n\n# Sort the values\ndf_group = df_group.sort_index(ascending = True)\n\n# Fill NA values with zero\ndf_group = df_group.fillna(value = 0)\n\ndf_group = df_group.rename(columns = {'Date': 'ds'})\n\n# Show the end of th data\ndisplay(df_group.tail())\ndisplay(df_group.head())","3317e229":"categories = list(df_A_months.columns)\ncategories.remove('Months')","cd5a5aa9":"temp = df_A_months.melt(id_vars=\"Months\", value_vars = categories,\n                 var_name='Categories', value_name ='Sales')\n\nfig = px.scatter(temp, x=\"Months\", y = 'Sales' , color='Categories',\n             title='Sales over time')\ndisplay(fig)","a7d00f89":"fig = go.Figure()\n\n# Add traces\nfig.add_trace(go.Scatter(temp, x=\"Months\", y = 'Sales' , color='Categories',title='Sales over time',\n                    mode='lines+markers',\n                    name='lines+markers'))","14675900":"temp","41c46ec4":"from plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\nfig = make_subplots(rows=1, cols=2)\n\nfig.add_trace(\n    go.Scatter(x=[1, 2, 3], y=[4, 5, 6]),\n    row=1, col=1\n)\n\nfig.add_trace(\n    go.Scatter(x=[20, 30, 40], y=[50, 60, 70]),\n    row=1, col=2\n)\n\nfig.update_layout(height=600, width=800, title_text=\"Side By Side Subplots\")\nfig.show()","d1f7a6bb":"Slicing Database into two dataframes of Not Adjusted and Adjusted Main Categories (NAICS code : 4xx, 7xx)","89abe38a":"### Time Series Indexing\nConverting Months to Datetime64[ns] for time series analysis","fc5d927d":"Removing Unnamed columns created due to encoding error by pandas in the dataframe","85d311b1":"Since our data is Categorical data we need to modify it\n* seperating Total from data \n* Encoding rows into columns\n* converting Rows to column and making a single dataframe for all years","06bf086e":"checking weather data contains (NA):Not Available or (S):Suppressed values","1d835fa7":"Since data contains many different kinds of dtypes, cleaning data of different dtypes","d6fea0c3":"## Data Cleaning","26fdd3cc":"## Data Visualization","d2645039":"### Extract main categories"}}