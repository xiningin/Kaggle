{"cell_type":{"68282969":"code","62eec542":"code","c299e998":"code","bf51a1ba":"code","7fecbf2b":"code","37847b96":"code","72569791":"code","3d586158":"code","3392d4d9":"code","b0061e08":"code","cdd6c43a":"code","a4d85e8e":"code","ad3f3268":"code","acb0e1eb":"code","d5c26c7b":"code","3321e75c":"code","445a1fc1":"code","720f63df":"code","e2847542":"code","a417456a":"code","297fd09a":"code","fac510eb":"code","9080c46c":"markdown","b001c7bc":"markdown","adb7e71d":"markdown"},"source":{"68282969":"import numpy as np\nimport pandas as pd\nimport random\n\nfrom sklearn.metrics import classification_report, log_loss, accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import RandomizedSearchCV,GridSearchCV\nimport category_encoders as ce\n\nfrom xgboost import XGBClassifier\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","62eec542":"data = pd.read_csv(\"..\/input\/weather-dataset-rattle-package\/weatherAUS.csv\")\ndata[0:5].T","c299e998":"n=len(data)\nprint(n)","bf51a1ba":"data1=data[data['Location']=='Albury']\ndata1[0:5].T","7fecbf2b":"data1.columns","37847b96":"list_cols = [ 'Evaporation','WindDir9am', 'WindDir3pm',\n       'Sunshine', 'WindGustDir', 'WindGustSpeed','Cloud9am', 'Cloud3pm', \n       'Temp9am', 'Temp3pm', 'RainToday', 'RainTomorrow']\nce_ohe = ce.OrdinalEncoder(cols=list_cols,handle_unknown='impute')\ndata2 = ce_ohe.fit_transform(data1)\ndata2[0:5].T\n","72569791":"data2.info()","3d586158":"n=len(data2)\nprint(n)","3392d4d9":"t=0\nfor item in data2['Date']:\n    if item[0:4]=='2017':\n        t+=1\nprint(t) ","b0061e08":"def dummy_date(df):\n    df[\"year\"] = df[\"Date\"].apply(lambda x: x.split(\"-\")[0])\n    df[\"month\"] = df[\"Date\"].apply(lambda x: x.split(\"-\")[1])\n    df[\"day\"] = df[\"Date\"].apply(lambda x: x.split(\"-\")[2])\n    df.drop(\"Date\",inplace=True,axis=1)\n    return df\n\ndef LabelEncord_categorical(df):\n    categorical_params = [\"year\",\"month\",\"day\"]\n    for params in categorical_params:\n        le = LabelEncoder()\n        df[params] = le.fit_transform(df[params])\n    return df\n\ndef dummies(df):\n    categorical_params = [\"year\",\"month\",\"day\"]\n    for params in categorical_params:\n        dummies =  pd.get_dummies(df[params])\n        df = pd.concat([df, dummies],axis=1)\n    return df\n\ndef pre_processing(df):\n    df = dummy_date(df)\n    df = LabelEncord_categorical(df)\n#    df = dummies(df)\n    return df\n\ndata3 = pre_processing(data2)","cdd6c43a":"data3","a4d85e8e":"data3=data3.fillna(0)","ad3f3268":"datay=data3['Rainfall'].apply(lambda x: x*10)\ndatax=data3.drop(['Rainfall','Location'],axis=1)","acb0e1eb":"pd.Series(datay).value_counts()","d5c26c7b":"datax=np.array(datax)\ndatay=np.array(datay)","3321e75c":"train=datax[0:t]\ntest=datax[t:]\ntrainy=datay[0:t]\ntesty=datay[t:]","445a1fc1":"X = train\ny = trainy","720f63df":"clf = XGBClassifier(max_depth=3, n_estimators=1000, learning_rate=0.01)","e2847542":"ss = ShuffleSplit(n_splits=5,train_size=0.8,test_size =0.2,random_state=0) \n\nfor train_index, test_index in ss.split(X): \n    X_train, X_test = X[train_index], X[test_index]\n    Y_train, Y_test = y[train_index], y[test_index]\n    clf.fit(X_train, Y_train) \n    print(clf.score(X_test, Y_test))","a417456a":"PRED = clf.predict(test)\nPRED[0:20]","297fd09a":"ANS=testy\nANS[0:20]","fac510eb":"accuracy=accuracy_score(ANS,PRED)\nprint(accuracy)","9080c46c":"# Modeling","b001c7bc":"# Predict","adb7e71d":"# Data Process"}}