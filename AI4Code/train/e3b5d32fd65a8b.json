{"cell_type":{"eee4b5df":"code","0ed37389":"code","0eb0c7be":"code","2da7b552":"code","78dd685f":"code","5ac26533":"code","dc13712b":"code","a56fb4d2":"code","1d0ceb77":"code","bc50aa24":"code","3dc137b2":"code","00febcd9":"code","c868e6b3":"code","1a2f227b":"code","e8d0b85e":"code","14b24b63":"code","a09d3a35":"code","479c2e4d":"code","0e7c30a1":"code","e37fd874":"code","1acc8131":"code","ae7501d5":"code","ebb13bc4":"code","3a696dbc":"code","556d99bc":"code","3b34f976":"code","5efd5b04":"code","4b03e02b":"code","7431fd76":"code","9454991b":"code","785da5ac":"code","db3b8c4d":"code","c816241f":"code","361337a3":"code","96fb94a8":"code","4858538b":"code","faf54c96":"code","98236299":"code","da47a2a6":"code","a508c0dd":"code","65f46b60":"code","99ef5d30":"code","41970382":"code","94c806c6":"code","b0fd4f37":"markdown","68d62eb8":"markdown","68e50977":"markdown","66cd40eb":"markdown","104f2124":"markdown","e6c56dd7":"markdown","ef73c737":"markdown","d0ea5a43":"markdown","bec60c10":"markdown","562248a0":"markdown","88b34f2f":"markdown","d20e5485":"markdown","dc3fdf45":"markdown","9675aa73":"markdown","128d9d59":"markdown","80451a1a":"markdown","02a3d798":"markdown","56d742a6":"markdown","4077f939":"markdown","aeb513bc":"markdown"},"source":{"eee4b5df":"import numpy as np\nimport pandas as pd","0ed37389":"!ls ..\/input\/avocado-prices\/","0eb0c7be":"avocado = pd.read_csv(\"..\/input\/avocado-prices\/avocado.csv\")\navocado.head()\n#avocado['Date'].head()","2da7b552":"avocado['AveragePrice'].value_counts()","78dd685f":"avocado_year_bool = avocado['year']<=2016\nidx = avocado_year_bool.sum()\navocado_test = avocado[:idx]\navocado_answer = avocado[idx:]\nprint(len(avocado),len(avocado_test),len(avocado_answer))","5ac26533":"def year_average_price(y):\n    avo_sum = {}\n    date_cnt = {}\n    for i in range(len(avocado)):\n        if avocado['year'][i] != y:\n            continue\n        avo_sum[avocado['Date'][i]] = 0\n        date_cnt[avocado['Date'][i]] = 0\n    for i in range(len(avocado)):\n        if avocado['year'][i] != y:\n            continue\n        avo_sum[avocado['Date'][i]] += avocado['AveragePrice'][i]\n        date_cnt[avocado['Date'][i]] += 1\n    for k,v in date_cnt.items():\n        avo_sum[k] \/= v\n    return sorted(avo_sum.items(),key=lambda x:x[0])","dc13712b":"import matplotlib.pyplot as plt\nimport matplotlib.ticker as plticker\n\nfig, ax = plt.subplots()\navosum2015 = year_average_price(2015)\nas5x = []\nas5y = []\nfor a,b in avosum2015:\n    as5x.append(a[5:])\n    as5y.append(b)\nax.plot(as5x,as5y,label='2015')\navosum2016 = year_average_price(2016)\nas6x = []\nas6y = []\nfor a,b in avosum2016:\n    as6x.append(a[5:])\n    as6y.append(b)\nax.plot(as6x,as6y,label='2016')\navosum2017 = year_average_price(2017)\nas7x = []\nas7y = []\nfor a,b in avosum2017:\n    as7x.append(a[5:])\n    as7y.append(b)\nax.plot(as7x,as7y,label='2017')\nax.legend()\nloc = plticker.MultipleLocator(base=15)\nax.xaxis.set_major_locator(loc)","a56fb4d2":"def year_average_bags(y):\n    bag_sum = {}\n    date_cnt = {}\n    for i in range(len(avocado)):\n        if avocado['year'][i] != y:\n            continue\n        bag_sum[avocado['Date'][i][5:]] = 0\n        date_cnt[avocado['Date'][i][5:]] = 0\n    for i in range(len(avocado)):\n        if avocado['year'][i] != y:\n            continue\n        bag_sum[avocado['Date'][i][5:]] += avocado['Total Bags'][i]\n        date_cnt[avocado['Date'][i][5:]] += 1\n    for k,v in date_cnt.items():\n        bag_sum[k] \/= v\n    return sorted(bag_sum.items(),key=lambda x:x[0])","1d0ceb77":"fig, ax = plt.subplots()\nbagsum2015 = year_average_bags(2015)\nbs5x = []\nbs5y = []\nfor a,b in bagsum2015:\n    bs5x.append(a)\n    bs5y.append(b)\nax.plot(bs5x,bs5y,label='2015')\nbagsum2016 = year_average_bags(2016)\nbs6x = []\nbs6y = []\nfor a,b in bagsum2016:\n    bs6x.append(a)\n    bs6y.append(b)\nax.plot(bs6x,bs6y,label='2016')\nbagsum2017 = year_average_bags(2017)\nbs7x = []\nbs7y = []\nfor a,b in bagsum2017:\n    bs7x.append(a)\n    bs7y.append(b)\nax.plot(bs7x,bs7y,label='2017')\nax.legend()\nloc = plticker.MultipleLocator(base=15)\nax.xaxis.set_major_locator(loc)","bc50aa24":"fig = plt.figure()\nax1 = fig.add_subplot(1,1,1)\nax2 = ax1.twinx()\nax1.plot(as5x,as5y,'C0',label='avocado price')\nax2.plot(bs5x,bs5y,'C1',label='number of bags')\nh1, l1 = ax1.get_legend_handles_labels()\nh2, l2 = ax2.get_legend_handles_labels()\nax1.legend(h1+h2, l1+l2, loc='lower right')\nloc = plticker.MultipleLocator(base=15)\nax1.xaxis.set_major_locator(loc)\nax2.xaxis.set_major_locator(loc)","3dc137b2":"fig = plt.figure()\nax1 = fig.add_subplot(1,1,1)\nax2 = ax1.twinx()\nax1.plot(as6x,as6y,'C0',label='avocado price')\nax2.plot(bs6x,bs6y,'C1',label='number of bags')\nh1, l1 = ax1.get_legend_handles_labels()\nh2, l2 = ax2.get_legend_handles_labels()\nax1.legend(h1+h2, l1+l2, loc='lower right')\nloc = plticker.MultipleLocator(base=15)\nax1.xaxis.set_major_locator(loc)\nax2.xaxis.set_major_locator(loc)","00febcd9":"fig = plt.figure()\nax1 = fig.add_subplot(1,1,1)\nax2 = ax1.twinx()\nax1.plot(as7x,as7y,'C0',label='avocado')\nax2.plot(bs7x,bs7y,'C1',label='number of bags')\nh1, l1 = ax1.get_legend_handles_labels()\nh2, l2 = ax2.get_legend_handles_labels()\nax1.legend(h1+h2, l1+l2, loc='lower right')\nloc = plticker.MultipleLocator(base=15)\nax1.xaxis.set_major_locator(loc)\nax2.xaxis.set_major_locator(loc)","c868e6b3":"ss5,ds5 = 0,0\nfor i in range(0,len(avosum2015)-1):\n    x = avosum2015[i+1][1]-avosum2015[i][1]\n    y = bagsum2015[i+1][1]-bagsum2015[i][1]\n    if (x<0 and y<0) or (x>0 and y>0):\n        ss5 += 1\n    else:\n        ds5 += 1\nplt.pie([ss5,ds5],labels=['same sign','different sign'],autopct='%1.1f%%')","1a2f227b":"ss6,ds6 = 0,0\nfor i in range(0,len(avosum2016)-1):\n    x = avosum2016[i+1][1]-avosum2016[i][1]\n    y = bagsum2016[i+1][1]-bagsum2016[i][1]\n    if (x<0 and y<0) or (x>0 and y>0):\n        ss6 += 1\n    else:\n        ds6 += 1\nplt.pie([ss6,ds6],labels=['same sign','different sign'],autopct='%1.1f%%')","e8d0b85e":"ss7,ds7 = 0,0\nfor i in range(0,len(avosum2017)-1):\n    x = avosum2017[i+1][1]-avosum2017[i][1]\n    y = bagsum2017[i+1][1]-bagsum2017[i][1]\n    if (x<0 and y<0) or (x>0 and y>0):\n        ss7 += 1\n    else:\n        ds7 += 1\nplt.pie([ss7,ds7],labels=['same sign','different sign'],autopct='%1.1f%%')","14b24b63":"plt.pie([ss5+ss6+ss7,ds5+ds6+ds7],labels=['same sign','different sign'],autopct='%1.1f%%')","a09d3a35":"ss,ds = 0,0\nfor i in range(0,len(avosum2015)-2):\n    x = avosum2015[i+2][1]-avosum2015[i][1]\n    y = bagsum2015[i+2][1]-bagsum2015[i][1]\n    if (x<0 and y<0) or (x>0 and y>0):\n        ss += 1\n    else:\n        ds += 1\nfor i in range(0,len(avosum2016)-2):\n    x = avosum2016[i+2][1]-avosum2016[i][1]\n    y = bagsum2016[i+2][1]-bagsum2016[i][1]\n    if (x<0 and y<0) or (x>0 and y>0):\n        ss += 1\n    else:\n        ds += 1\nfor i in range(0,len(avosum2017)-2):\n    x = avosum2017[i+2][1]-avosum2017[i][1]\n    y = bagsum2017[i+2][1]-bagsum2017[i][1]\n    if (x<0 and y<0) or (x>0 and y>0):\n        ss += 1\n    else:\n        ds += 1\nplt.pie([ss,ds],labels=['same sign','different sign'],autopct='%1.1f%%')","479c2e4d":"def year_average_volume(y):\n    avo_sum = {}\n    date_cnt = {}\n    for i in range(len(avocado)):\n        if avocado['year'][i] != y:\n            continue\n        avo_sum[avocado['Date'][i]] = 0\n        date_cnt[avocado['Date'][i]] = 0\n    for i in range(len(avocado)):\n        if avocado['year'][i] != y:\n            continue\n        avo_sum[avocado['Date'][i]] += avocado['Total Volume'][i]\n        date_cnt[avocado['Date'][i]] += 1\n    for k,v in date_cnt.items():\n        avo_sum[k] \/= v\n    return sorted(avo_sum.items(),key=lambda x:x[0])","0e7c30a1":"fid,ax = plt.subplots()\navovlm2015 = year_average_volume(2015)\nav5x = []\nav5y = []\nfor a,b in avovlm2015:\n    av5x.append(a[5:])\n    av5y.append(b)\nax.plot(av5x,av5y,label='2015')\navovlm2016 = year_average_volume(2016)\nav6x = []\nav6y = []\nfor a,b in avovlm2016:\n    av6x.append(a[5:])\n    av6y.append(b)\nax.plot(av6x,av6y,label='2016')\navovlm2017 = year_average_volume(2017)\nav7x = []\nav7y = []\nfor a,b in avovlm2017:\n    av7x.append(a[5:])\n    av7y.append(b)\nax.plot(av7x,av7y,label='2017')\nplt.legend()\nloc = plticker.MultipleLocator(base=15)\nax.xaxis.set_major_locator(loc)","e37fd874":"fig = plt.figure()\nax1 = fig.add_subplot(1,1,1)\nax2 = ax1.twinx()\nax1.plot(as5x,as5y,'C0',label='2015-price')\nax2.plot(av5x,av5y,'C1',label='2015-volume')\nh1, l1 = ax1.get_legend_handles_labels()\nh2, l2 = ax2.get_legend_handles_labels()\nax1.legend(h1+h2, l1+l2, loc='lower right')\nloc = plticker.MultipleLocator(base=15)\nax1.xaxis.set_major_locator(loc)\nax2.xaxis.set_major_locator(loc)","1acc8131":"fig = plt.figure()\nax1 = fig.add_subplot(1,1,1)\nax2 = ax1.twinx()\nax1.plot(as6x,as6y,'C0',label='2016-price')\nax2.plot(av6x,av6y,'C1',label='2016-volume')\nh1, l1 = ax1.get_legend_handles_labels()\nh2, l2 = ax2.get_legend_handles_labels()\nax1.legend(h1+h2, l1+l2, loc='lower right')\nloc = plticker.MultipleLocator(base=15)\nax1.xaxis.set_major_locator(loc)\nax2.xaxis.set_major_locator(loc)","ae7501d5":"fig = plt.figure()\nax1 = fig.add_subplot(1,1,1)\nax2 = ax1.twinx()\nax1.plot(as7x,as7y,'C0',label='2017-price')\nax2.plot(av7x,av7y,'C1',label='2017-volume')\nh1, l1 = ax1.get_legend_handles_labels()\nh2, l2 = ax2.get_legend_handles_labels()\nax1.legend(h1+h2, l1+l2, loc='lower right')\nloc = plticker.MultipleLocator(base=15)\nax1.xaxis.set_major_locator(loc)\nax2.xaxis.set_major_locator(loc)","ebb13bc4":"a,b = 0,0\nfor i in range(0,len(avosum2015)-1):\n    x = avosum2015[i+1][1]-avosum2015[i][1]\n    y = avovlm2015[i+1][1]-avovlm2015[i][1]\n    if (x<0 and y<0) or (x>0 and y>0):\n        a += 1\n    else:\n        b += 1\nfor i in range(0,len(avosum2016)-1):\n    x = avosum2016[i+1][1]-avosum2016[i][1]\n    y = avovlm2016[i+1][1]-avovlm2016[i][1]\n    if (x<0 and y<0) or (x>0 and y>0):\n        a += 1\n    else:\n        b += 1\nfor i in range(0,len(avosum2017)-1):\n    x = avosum2017[i+1][1]-avosum2017[i][1]\n    y = avovlm2017[i+1][1]-avovlm2017[i][1]\n    if (x<0 and y<0) or (x>0 and y>0):\n        a += 1\n    else:\n        b += 1\nplt.pie([a,b],labels=['same sign','different sign'],autopct='%1.1f%%')","3a696dbc":"def year_average_price_type(y,t):\n    avo_sum = {}\n    date_cnt = {}\n    idx_to_date = {}\n    for i in range(len(avocado)):\n        if avocado['year'][i] != y:\n            continue\n        if avocado['type'][i] != t:\n            continue\n        avo_sum[avocado['Unnamed: 0'][i]] = 0\n        date_cnt[avocado['Unnamed: 0'][i]] = 0\n        idx_to_date[avocado['Unnamed: 0'][i]] = avocado['Date'][i]\n    for i in range(len(avocado)):\n        if avocado['year'][i] != y:\n            continue\n        if avocado['type'][i] != t:\n            continue\n        avo_sum[avocado['Unnamed: 0'][i]] += avocado['AveragePrice'][i]\n        date_cnt[avocado['Unnamed: 0'][i]] += 1\n    for k,v in date_cnt.items():\n        avo_sum[k] \/= v\n    return avo_sum","556d99bc":"avopri_15_0 = year_average_price_type(2015,0)\navopri_15_1 = year_average_price_type(2015,1)\navopri_16_0 = year_average_price_type(2016,0)\navopri_16_1 = year_average_price_type(2016,1)\navopri_17_0 = year_average_price_type(2017,0)\navopri_17_1 = year_average_price_type(2017,1)\nplt.plot(list(avopri_15_0.keys()),list(avopri_15_0.values()),label='2015-convenical')\nplt.plot(list(avopri_16_0.keys()),list(avopri_16_0.values()),label='2016-convenical')\nplt.plot(list(avopri_17_0.keys()),list(avopri_17_0.values()),label='2017-convenical')\nplt.plot(list(avopri_15_1.keys()),list(avopri_15_1.values()),label='2015-organic')\nplt.plot(list(avopri_16_1.keys()),list(avopri_16_1.values()),label='2016-organic')\nplt.plot(list(avopri_17_1.keys()),list(avopri_17_1.values()),label='2017-organic')\nplt.legend()","3b34f976":"a,b = 0,0\nfor i in range(0,len(avopri_15_0)-1):\n    x = avopri_15_0[i+1]-avopri_15_0[i]\n    y = avopri_15_1[i+1]-avopri_15_1[i]\n    if (x<0 and y<0) or (x>0 and y>0):\n        a += 1\n    else:\n        b += 1\nplt.pie([a,b],labels=['same sign','different sign'],autopct='%1.1f%%')","5efd5b04":"a,b = 0,0\nfor i in range(0,len(avopri_16_0)-1):\n    x = avopri_16_0[i+1]-avopri_16_0[i]\n    y = avopri_16_1[i+1]-avopri_16_1[i]\n    if (x<0 and y<0) or (x>0 and y>0):\n        a += 1\n    else:\n        b += 1\nplt.pie([a,b],labels=['same sign','different sign'],autopct='%1.1f%%')","4b03e02b":"a,b = 0,0\nfor i in range(0,len(avopri_17_0)-1):\n    x = avopri_17_0[i+1]-avopri_17_0[i]\n    y = avopri_17_1[i+1]-avopri_17_1[i]\n    if (x<0 and y<0) or (x>0 and y>0):\n        a += 1\n    else:\n        b += 1\nplt.pie([a,b],labels=['same sign','different sign'],autopct='%1.1f%%')","7431fd76":"a,b,c,d = 0,0,0,0\nfor i in range(0,len(avopri_15_0)-1):\n    x = avopri_15_0[i+1]-avopri_15_0[i]\n    y = avopri_15_1[i+1]-avopri_15_1[i]\n    if x>0 and y<0:\n        if bagsum2015[i+1]-bagsum2015[i] > 0:\n            a += 1\n        else:\n            b += 1\n    elif x<0 and y>0:\n        if bagsum2015[i+1]-bagsum2015[i] > 0:\n            c += 1\n        else:\n            d += 1\nprint(a,b,c,d)\nplt.pie([a,b],labels=['bags increase','bags decrease'],autopct='%1.1f%%')\n","9454991b":"plt.pie([c,d],labels=['bags increase','bags decrease'],autopct='%1.1f%%')","785da5ac":"a,b,c,d = 0,0,0,0\nfor i in range(0,len(avopri_16_0)-1):\n    x = avopri_16_0[i+1]-avopri_16_0[i]\n    y = avopri_16_1[i+1]-avopri_16_1[i]\n    if x>0 and y<0:\n        if bagsum2016[i+1]-bagsum2016[i] > 0:\n            a += 1\n        else:\n            b += 1\n    elif x<0 and y>0:\n        if bagsum2016[i+1]-bagsum2016[i] > 0:\n            c += 1\n        else:\n            d += 1\nprint(a,b,c,d)\nplt.pie([a,b],labels=['bags increase','bags decrease'],autopct='%1.1f%%')\n","db3b8c4d":"plt.pie([c,d],labels=['bags increase','bags decrease'],autopct='%1.1f%%')","c816241f":"a,b,c,d = 0,0,0,0\nfor i in range(0,len(avopri_17_0)-1):\n    x = avopri_17_0[i+1]-avopri_17_0[i]\n    y = avopri_17_1[i+1]-avopri_17_1[i]\n    if x>0 and y<0:\n        if bagsum2017[i+1]-bagsum2017[i] > 0:\n            a += 1\n        else:\n            b += 1\n    elif x<0 and y>0:\n        if bagsum2017[i+1]-bagsum2017[i] > 0:\n            c += 1\n        else:\n            d += 1\nprint(a,b,c,d)\nplt.pie([a,b],labels=['bags increase','bags decrease'],autopct='%1.1f%%')\n","361337a3":"plt.pie([c,d],labels=['bags increase','bags decrease'],autopct='%1.1f%%')","96fb94a8":"avocado['XLarge Bags'].value_counts()","4858538b":"avocado['region'].value_counts()\n","faf54c96":"avocado['type'] = avocado['type'].map({'conventional':0,'organic':1}).astype(int)\navocado['region'] = avocado['region'].map({'Spokane':0,'HartfordSpringfield':1,'SouthCentral':2,'BuffaloRochester':3,'CincinnatiDayton':4,'DallasFtWorth':5,'GrandRapids':6,'HarrisburgScranton':7,'Charlotte':8,'Tampa':9,'Louisville':10,'Southeast':11,'Portland':12,'RaleighGreensboro':13,'MiamiFtLauderdale':14,'Sacramento':15,'SanDiego':16,'Philadelphia':17,'Houston':18,'NorthernNewEngland':19,'Roanoke':20,'Detroit':21,'StLouis':22,'NewOrleansMobile':23,'PhoenixTucson':24,'Boston':25,'Boise':26,'TotalUS':27,'LasVegas':28,'Seattle':29,'Nashville':30,'SanFrancisco':31,'Denver':32,'Pittsburgh':33,'Indianapolis':34,'West':35,'Syracuse':36,'BaltimoreWashington':37,'Midsouth':38,'LosAngeles':39,'Columbus':40,'Orlando':41,'Northeast':42,'Plains':43,'GreatLakes':44,'SouthCarolina':45,'Albany':46,'Atlanta':47,'Jacksonville':48,'California':49,'Chicago':50,'RichmondNorfolk':51,'NewYork':52,'WestTexNewMexico':53}).astype(int)","98236299":"avocado.head()","da47a2a6":"avocado_test = avocado[:idx]\navocado_answer = avocado[idx:]\n\ny_avocado = avocado_test['AveragePrice']\nX_avocado = avocado_test.drop('AveragePrice',axis=1).drop('Date',axis=1).drop('Total Volume',axis=1)\nX_ans = avocado_answer.drop('AveragePrice',axis=1).drop('Date',axis=1).drop('Total Volume',axis=1)","a508c0dd":"from sklearn                        import metrics, svm\nfrom sklearn.linear_model           import LogisticRegression\nfrom sklearn import preprocessing\nfrom sklearn import utils\n\nlab_enc = preprocessing.LabelEncoder()\ny_avocado = lab_enc.fit_transform(y_avocado)\n\nclf = LogisticRegression(penalty='l2',solver='sag',random_state=0)\nclf.fit(X_avocado,y_avocado)\n","65f46b60":"y_pred = clf.predict(X_ans)\nxaxis = np.arange(0,len(y_avocado))","99ef5d30":"data = avocado\ndata['AveragePrice'] = lab_enc.fit_transform(data['AveragePrice'])\ndata.head()","41970382":"def show2017():\n    data_sum_t = {}\n    data_sum_s = {}\n    data_cnt_d = {}\n    for i in range(0,len(data)):\n        if data['year'][i] == 2017:\n            data_sum_t[data['Unnamed: 0'][i]] = 0\n            data_sum_s[data['Unnamed: 0'][i]] = 0\n            data_cnt_d[data['Unnamed: 0'][i]] = 0\n    idx = 0\n    for i in range(0,len(data)):\n        if data['year'][i] == 2017:\n            data_sum_t[data['Unnamed: 0'][i]] += y_avocado[idx]\n            data_sum_s[data['Unnamed: 0'][i]] += y_pred[idx]\n            data_cnt_d[data['Unnamed: 0'][i]] += 1\n            idx += 1\n    data_ave_t = data_sum_t\n    data_ave_s = data_sum_s\n    for k,v in data_cnt_d.items():\n        data_ave_t[k] \/= v\n        data_ave_s[k] \/= v\n\n    plt.plot(list(data_ave_t.keys()),list(data_ave_t.values()),label='Theoretical value')\n    plt.plot(list(data_ave_s.keys()),list(data_ave_s.values()),label='predictical value')\n    plt.legend()\nshow2017()","94c806c6":"y_avocado = avocado_test['AveragePrice']\nX_avocado = avocado_test.drop('AveragePrice',axis=1).drop('Date',axis=1)\nX_ans = avocado_answer.drop('AveragePrice',axis=1).drop('Date',axis=1)\ny_avocado = lab_enc.fit_transform(y_avocado)\n\nclf = LogisticRegression()\nclf = LogisticRegression(penalty='l2',solver='sag',random_state=0)\nclf.fit(X_avocado,y_avocado)\ny_pred = clf.predict(X_ans)\ndata = avocado\ndata['AveragePrice'] = lab_enc.fit_transform(data['AveragePrice'])\nshow2017()","b0fd4f37":"\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30","68d62eb8":"\u30b0\u30e9\u30d5\u3068\u3057\u3066\u8868\u793a\u3059\u308b","68e50977":"total volume\u3092\u5fd8\u308c\u3066\u3044\u305f\u3000\u3053\u308c\u306f\u306a\u3093\u3067\u3059\u304b","66cd40eb":"average price\u3068total volume","104f2124":"\u3053\u308c\u3082\u866b\u3068\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u304c\u8a00\u3048\u305d\u3046\u3067\u3059\u306d","e6c56dd7":"\u866b\u304c\u591a\u3044\u3068\u4fa1\u683c\u304c\u4e0b\u308a\u305d\u3046","ef73c737":"\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u6271\u3048\u308b\u3088\u3046\u306b\u5168\u3066\u306e\u5024\u3092\u6570\u5024\u306b\u5909\u63db\u3059\u308b","d0ea5a43":"\u5b66\u7fd2\u7528\u3068\u7b54\u3048\u5408\u308f\u305b\u7528\u306b\u30c7\u30fc\u30bf\u3092\u5206\u3051\u308b","bec60c10":"\u5c90\u961c\u9ad8\u5c02\u96fb\u6c17\u60c5\u5831\u5de5\u5b66\u79d14\u5e74\u3000\u96fb\u6c17\u60c5\u5831\u5de5\u5b66\u5b9f\u9a133\u3000\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u306e\u89e3\u6790","562248a0":"\u30d5\u30a1\u30a4\u30eb\u3092\u78ba\u8a8d\u3059\u308b","88b34f2f":"type\u3092\u8003\u3048\u308b","d20e5485":"2015~2017\u5e74\u306e\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u7528\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u30662018\u5e74\u306e\u30c7\u30fc\u30bf\u3092\u4e88\u6e2c\u3059\u308b\n\u305d\u306e\u305f\u3081\u306bavocado\u3092\u4e8c\u3064\u306b\u308f\u3051\u308b","dc3fdf45":"2018\u5e74\u306e\u30c7\u30fc\u30bf\u304c\u5c11\u306a\u3044\n2015,6,7\u5e74\u306f5000\u4ef6\u3050\u3089\u3044\u30672018\u5e74\u306f1000\u4ef6\u3061\u3087\u3063\u3068","9675aa73":"\u866b(total bags)\u3092\u8868\u793a\u3055\u305b\u3066\u307f\u308b","128d9d59":"\u30b0\u30e9\u30d5","80451a1a":"\u8aad\u307f\u8fbc\u3093\u3067\u78ba\u8a8d","02a3d798":"\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8aad\u307f\u8fbc\u3080","56d742a6":"\u4f8b\u3048\u3070conventional\u304c\u4e0a\u304c\u3063\u3066organic\u304c\u4e0b\u304c\u308b\u3068\u3044\u3063\u305f\u3068\u304d\u306b\u866b\u306e\u91cf\u3068\u95a2\u4fc2\u306f\u3042\u308b\u304b","4077f939":"\u65e5\u4ed8\u3054\u3068\u306b\u5168\u3066\u306e\u90fd\u5e02\u306e\u5e73\u5747\u3092\u3068\u308b","aeb513bc":"\n\u866b\u304c\u591a\u304f\u306a\u308b\u3068\u4fa1\u683c\u304c\u9ad8\u304f\u306a\u308a\u305d\u3046\u3067\u305d\u306e\u9006\u3082\u8a00\u3048\u305d\u3046\n\u7b2cn\u9031\u76ee\u304b\u3089n+1\u9031\u76ee\u306b\u304b\u3051\u3066\u4fa1\u683c\u304c\u5897\u3048\u3066\u3044\u305f\u3089\u866b\u306f\u6e1b\u3063\u3066\u3044\u308b\u3001\u4fa1\u683c\u304c\u4e0b\u304c\u3063\u3066\u3044\u305f\u3089\u866b\u306f\u5897\u3048\u3066\u3044\u308b\n\u5dee\u306e\u7b26\u53f7\u304c\u540c\u3058\u306a\u3089\u3053\u308c\u306f\u5618\u3067\u7570\u306a\u308c\u3070\u3001\u826f\u3044"}}