{"cell_type":{"b28e8512":"code","63112832":"code","eb20c617":"code","fa2850fe":"code","7b62ddeb":"code","825a3e94":"code","40d19b6e":"code","21b4763f":"code","e50488a0":"code","bb325d81":"code","2942081c":"code","9b551211":"code","4ee55e76":"code","7b1ea362":"code","72269fd1":"code","456bb86b":"code","a15b7d97":"code","f52128a6":"code","3f38b386":"code","7b4f0c3a":"code","50d91f9d":"code","a948baec":"code","2538627a":"code","ea193211":"code","d136a60c":"code","839b1369":"code","6a90bb20":"code","0ecef23b":"code","d6fc823e":"code","102860e3":"code","5bbe90a8":"code","3bfac388":"code","df730114":"code","0edfc54b":"code","bec8e925":"code","b5621e48":"code","e6d5ec20":"code","ba294e2a":"code","5334c635":"code","8576462f":"code","d324636f":"code","7cc1ff21":"code","0f3199bb":"code","e2d4da37":"code","e5f6d175":"code","f50c3b0d":"code","189c548f":"code","de348f1c":"code","ac9b4785":"code","0407697e":"code","b302654a":"code","b0eef42a":"code","b34c3292":"code","0ac1d384":"code","9a06c0cf":"code","66b22524":"code","16c399c4":"code","141c1845":"code","4a4a001b":"code","8ebb385a":"code","f7213e34":"code","94acba78":"code","72378b0f":"code","5e83a1b6":"code","8880812c":"code","0a845992":"code","c9e430b8":"code","b51c5eb1":"code","6f8a2b10":"code","523dadfc":"code","31647aae":"code","dcf3fd95":"code","213c223e":"code","15464343":"code","9e8752d0":"code","a143482a":"code","c20ceb1c":"code","449177f5":"code","177a7f0f":"code","e85a07ec":"code","cc7a12cb":"code","1eb7ae5c":"code","d6ccc7a1":"code","c68ead5e":"code","d27c2048":"markdown","915a1aef":"markdown","86eb0921":"markdown","7e0c4ed9":"markdown","853cf414":"markdown","4129e48f":"markdown","a81cdb09":"markdown","8a72ad88":"markdown","c73a1ddb":"markdown"},"source":{"b28e8512":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","63112832":"# Reading the file as saving to dataframe(df)","eb20c617":"df=pd.read_csv('..\/input\/liver.csv')\ndf.head()","fa2850fe":"# Checking dataframe to see if there are any missing values. There are two missing values","7b62ddeb":"sns.heatmap(df.isnull(), cmap='coolwarm',xticklabels=True,yticklabels=False,cbar=False)","825a3e94":"# Impute missing values by importing the Imputer class from sklearn.preprocessing","40d19b6e":"from sklearn.preprocessing import Imputer","21b4763f":"imputer = Imputer(missing_values='NaN',strategy='mean',axis=0)","e50488a0":"imputer = imputer.fit(df.iloc[:,9:10])","bb325d81":"df.iloc[:,9:10]= imputer.transform(df.iloc[:,9:10])","2942081c":"# Checking for missing data again","9b551211":"sns.heatmap(df.isnull(), cmap='coolwarm',xticklabels=True,yticklabels=False,cbar=False)","4ee55e76":"# Get some info on the dataset","7b1ea362":"df.info()","72269fd1":"df.drop('Selector',axis=1).describe()","456bb86b":"# Checking if data is skewed","a15b7d97":"df.skew()","f52128a6":"# As the heatmap shows there are no missing values. Now let's do some visalization.","3f38b386":"#plt.figure(figsize= (6\n#df.hist()","7b4f0c3a":"sns.pairplot(df)","50d91f9d":"# Looks like there may be some linear correlations between some of the features. More data visualizations","a948baec":"sns.barplot(x='Selector',y='Age',data =df)","2538627a":"# Mean Age is roughly the same for both selctors","ea193211":"sns.jointplot(x='Selector',y='Age',data =df)","d136a60c":"sns.distplot(df['Age'])","839b1369":"# Age looks almost normally distributed","6a90bb20":"sns.countplot(x='Gender',data=df)","0ecef23b":"# More Males than Females in the dataset","d6fc823e":"sns.countplot(x='Gender',data=df,hue='Selector')","102860e3":"# The percentage of females falling under category 2 is higher than that of of males when compared to the total of\n#their gender.","5bbe90a8":"sns.violinplot(x='Gender',y='Age',hue='Selector',data=df)","3bfac388":"sns.heatmap(df.corr())","df730114":"# Some of the features are highly correlated","0edfc54b":"df.head()","bec8e925":"# Encoding gender ","b5621e48":"Gender = pd.get_dummies(df.iloc[: ,1], drop_first=True)","e6d5ec20":"df = pd.concat([df,Gender],axis=1)","ba294e2a":"df.head()","5334c635":"df.drop('Gender',axis=1,inplace=True)","8576462f":"df.head()","d324636f":"#Encoding Selector and Renaming it as Prognosis","7cc1ff21":"Result = pd.get_dummies(df['Selector'],drop_first=True)","0f3199bb":"df=pd.concat([df,Result],axis=1)","e2d4da37":"df.head(10)","e5f6d175":"df.drop('Selector',axis=1,inplace=True)","f50c3b0d":"# This turned the categories in the Selector column: Category 2 is now category 1 and Category 1 is now category 0","189c548f":"df.head()","de348f1c":"#renaming column 2 to Prognosis","ac9b4785":"df['Prognosis'] = df[2]","0407697e":"df.drop(2,axis=1,inplace=True)","b302654a":"df.head(10)","b0eef42a":"#checking if target variable is imbalanced","b34c3292":"df['Prognosis'].value_counts()","0ac1d384":"from sklearn.utils import resample","9a06c0cf":"# Creating 2 different dataframes df_majority and df_minority","66b22524":"df_majority = df[df['Prognosis']==0]","16c399c4":"df_minority = df[df['Prognosis']==1]","141c1845":"# Upsample minority class","4a4a001b":"df_minority_upsampled = resample(df_minority,replace=True,n_samples=416, random_state=123)","8ebb385a":"# Combine majority class with upsampled minority class","f7213e34":"df_upsampled = pd.concat([df_majority,df_minority_upsampled])","94acba78":"df_upsampled['Prognosis'].value_counts()","72378b0f":"X =df_upsampled.drop('Prognosis', axis=1)","5e83a1b6":"y = df_upsampled['Prognosis']","8880812c":"from sklearn.preprocessing import StandardScaler","0a845992":"sc_X = StandardScaler()","c9e430b8":"X = sc_X.fit_transform(X)","b51c5eb1":"from sklearn.model_selection import train_test_split","6f8a2b10":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=101)","523dadfc":"import keras","31647aae":"from keras.models import Sequential","dcf3fd95":"from keras.layers import Dense","213c223e":"# Initializing the Network","15464343":"nn_classifier = Sequential()","9e8752d0":"# Adding the first input layer and the first hidden layer","a143482a":"nn_classifier.add(Dense(output_dim=6,init='uniform',activation='relu',input_dim=10))","c20ceb1c":"# Adding second Layer","449177f5":"nn_classifier.add(Dense(output_dim=6,init='uniform',activation='relu'))","177a7f0f":"# Adding output layer","e85a07ec":"nn_classifier.add(Dense(output_dim=1,init='uniform',activation='sigmoid'))","cc7a12cb":"# Compiling Neural Network","1eb7ae5c":"nn_classifier.compile(optimizer='adam', loss = 'binary_crossentropy',metrics=['accuracy'])","d6ccc7a1":"nn_classifier.fit(X_train,y_train,batch_size=10,epochs=1000)","c68ead5e":"# Neural Network gives us an 80-81% accuracy","d27c2048":"# Feature Scaling","915a1aef":"# Using pd.get_dummies instead to turn categorical data into inegers","86eb0921":"# Importing Packages and looking into the dataset\n","7e0c4ed9":"# Data Visualization","853cf414":"# Preparing data for Machine Learning Algorithms","4129e48f":"# Spliting Data into Test and Train Data","a81cdb09":"# 9. Deep Neural Networks","8a72ad88":"# Spliting the dataset into independent variables X and dependent variable y and into test and train sets","c73a1ddb":"# Data is unbalanced - Balancing it by Up-sampling the minority class"}}