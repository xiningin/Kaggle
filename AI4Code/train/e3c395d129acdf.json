{"cell_type":{"7ceff451":"code","226ce8a1":"code","2fdc0fa2":"code","abd9d9a9":"code","d0491e91":"code","56310570":"code","b6266730":"code","9a19b2e2":"code","3d41f2ad":"code","6c1dc636":"code","f23c4400":"code","daecb089":"code","4cff8a39":"code","000718ca":"code","1b927393":"code","dc589fa6":"code","9bfb441f":"code","9b41f19d":"code","8af88b1f":"code","3deae23c":"code","aecdb492":"code","0bb85322":"code","9d212d22":"code","c7389476":"code","b9d1d81b":"code","8fd58d1a":"code","cec38f3b":"code","c781edb6":"code","5be6bafb":"code","460d1e6a":"code","5a15dde4":"code","04acd16f":"code","3934e483":"code","b70b9637":"code","35fc3726":"code","a464f168":"code","86ba396a":"code","04533f9f":"code","f721ab72":"code","7b900a52":"code","3978abd2":"code","59dc39c1":"code","1b7d0944":"code","db75744d":"code","2f20d0e2":"code","655ce0c0":"code","ddbf3194":"code","79ddf7a9":"code","87f5eaf8":"code","ae0fce0a":"code","389045c2":"code","952b4bbf":"code","ef4b688f":"code","a8cfed45":"code","b173edc0":"code","a1df5188":"code","ce856a80":"code","4d32814e":"code","0724f539":"code","1c7d2e3a":"code","e098677b":"code","dc9e03aa":"code","7bdc6d4b":"code","a8d44f3c":"code","f658526a":"code","96a3ee84":"code","db9133e6":"code","69368631":"code","392000dd":"code","baeb7947":"code","e74938e1":"code","5d4aceeb":"code","8f26c42b":"code","0e2f50ea":"code","925e03ef":"code","b2edc14a":"code","55824245":"markdown","bdc11ee8":"markdown"},"source":{"7ceff451":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression \nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nfrom sklearn import metrics\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix","226ce8a1":"train=pd.read_csv('..\/input\/advertsuccess\/Train.csv')","2fdc0fa2":"test=pd.read_csv('..\/input\/advertsuccess\/Test.csv')","abd9d9a9":"train.head()","d0491e91":"train.columns","56310570":"test.shape","b6266730":"train.isnull().sum()","9a19b2e2":"train.describe()","3d41f2ad":"train['netgain'].value_counts()","6c1dc636":"count_F, count_T = train.netgain.value_counts()\n\n# Divide by class\ndf_class_F = train[train['netgain'] == 0]\ndf_class_T = train[train['netgain'] == 1]","f23c4400":"df_class_F_under = df_class_F.sample(count_T)\ndf_train = pd.concat([df_class_F_under, df_class_T], axis=0)\n\nprint('Random under-sampling:')\nprint(df_train.netgain.value_counts())\n\ndf_train.netgain.value_counts().plot(kind='bar', title='Count (netgain)');","daecb089":"df_class_T_over = df_class_T.sample(count_F,replace=True)\ndf_train1 = pd.concat([df_class_F, df_class_T_over], axis=0)\n\nprint('Random under-sampling:')\nprint(df_train1.netgain.value_counts())\n\ndf_train1.netgain.value_counts().plot(kind='bar', title='Count (netgain)');","4cff8a39":"df_train1.shape","000718ca":"df_train['netgain'].value_counts()\n","1b927393":"from imblearn.over_sampling import SMOTE \n\n#SMOTE have to be applied for training set only\n\n#preprocessor = Pipeline(steps=[('encoder',encoding),('Std',StandardScaler())])\n\n#X_train = preprocessor.fit_transform(X_train)\n#X_test = preprocessor.transform(X_test)\n\n#print(\"Shape of train dataset before applying SMOTE:\",X_train.shape)\n\n#X_train, y_train = SMOTE().fit_resample(X_train,y_train)\n\n#print(\"Shape of train dataset after applying SMOTE:\",X_train.shape)","dc589fa6":"df_corr=df_train.corr()\nf=plt.subplots(figsize=(10,8))\nsns.heatmap(df_corr,annot=True)","9bfb441f":"df_corr","9b41f19d":"df_train1['ratings']","8af88b1f":"train['ratings'].skew()","3deae23c":"sns.catplot(data=df_train,x='netgain',y='ratings',hue='genre',kind='point')","aecdb492":"sns.catplot(data=df_train,x='netgain',y='ratings',hue='realtionship_status',kind='bar')","0bb85322":"sns.catplot(data=df_train,x='netgain',y='ratings',hue='industry',kind='bar')","9d212d22":"sns.relplot(data=df_train,x='ratings',y='average_runtime(minutes_per_week)',kind='line',color='red')","c7389476":"C=['realtionship_status','genre','industry','expensive']\nfor i in C:\n    sns.catplot(data=df_train,x=i,y='average_runtime(minutes_per_week)',hue='netgain')","b9d1d81b":"r=pd.get_dummies(df_train['targeted_sex'])\nr1=(sum(r[\"Female\"]),sum(r[\"Male\"]))\nplt.pie(r1,labels=[\"Male\",\"Female\"],shadow=True,explode=(.1,.1),autopct='%1.1f%%')","8fd58d1a":"r=pd.get_dummies(df_train['expensive'])\nr1=(sum(r[\"High\"]),sum(r[\"Low\"]),sum(r[\"Medium\"]))\nplt.pie(r1,labels=[\"High\",\"low\",\"Medium\"],shadow=True,explode=(.1,.1,.1),autopct='%1.1f%%')","cec38f3b":"r=pd.get_dummies(df_train['airtime'])\nr1=(sum(r[\"Primetime\"]),sum(r[\"Morning\"]),sum(r[\"Daytime\"]))\nplt.pie(r1,labels=[\"Primetime\",\"Morning\",\"Daytime\"],shadow=True,explode=(.1,.1,.1),autopct='%1.1f%%')","c781edb6":"cr=pd.crosstab(df_train['industry'],df_train['netgain'],margins=True,)\nprint(cr)\nplt.figure(figsize=(10,4))\nsns.countplot(x='industry',hue='netgain',data=df_train,order=df_train['industry'].value_counts().index);","5be6bafb":"cr1=pd.crosstab(df_train['genre'],df_train['netgain'],margins=True,)\nprint(cr1)\nplt.figure(figsize=(10,4))\nsns.countplot(x='genre',hue='netgain',data=df_train,order=df_train['genre'].value_counts().sort_values().index);","460d1e6a":"cr2=pd.crosstab(df_train['realtionship_status'],df_train['netgain'],margins=True,)\nprint(cr2)\nplt.figure(figsize=(20,8))\nsns.countplot(x='realtionship_status',hue='netgain',data=df_train,order=df_train['realtionship_status'].value_counts().index);","5a15dde4":"cr3=pd.crosstab(df_train['expensive'],df_train['netgain'],margins=True,)\nprint(cr3)\nplt.figure(figsize=(10,4))\nsns.countplot(x='expensive',hue='netgain',data=df_train,order=df_train['expensive'].value_counts().index);","04acd16f":"cr=pd.crosstab(df_train['targeted_sex'],df_train['netgain'],margins=True,)\nprint(cr)\nplt.figure(figsize=(10,4))\nsns.countplot(x='targeted_sex',hue='netgain',data=df_train,order=df_train['targeted_sex'].value_counts().index);","3934e483":"sns.countplot(df_train.airtime,hue=df_train.netgain,color='blue')","b70b9637":"sns.kdeplot(df_train[\"average_runtime(minutes_per_week)\"],color='b',shade=True)\nplt.xlabel('average runtime') \nplt.ylabel('Probability Density') ","35fc3726":"rel=pd.crosstab(train[\"industry\"],train[\"genre\"])\nrel","a464f168":"rel=pd.crosstab(train[\"realtionship_status\"],train[\"genre\"])\nrel","86ba396a":"rel=pd.crosstab(train[\"industry\"],train[\"expensive\"])\nrel","04533f9f":"train.head(5)","f721ab72":"def Interchange(data,variable):\n    a=preprocessing.LabelEncoder()\n    a.fit(data[variable])\n    list(a.classes_)\n    data[variable]=a.transform(data[variable])\n    return(data[variable])","7b900a52":"variable=['realtionship_status', 'industry', 'genre', 'targeted_sex','airtime', 'expensive', 'money_back_guarantee','airlocation','netgain']\nfor i in variable:\n    Interchange(df_train,[i])\ndf_train.dtypes","3978abd2":"df_train.head(5)","59dc39c1":"x=df_train[['realtionship_status', 'industry', 'genre', 'targeted_sex','ratings','average_runtime(minutes_per_week)','expensive', 'money_back_guarantee','airlocation','airtime']]\ny=df_train[['netgain']]","1b7d0944":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.30)","db75744d":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score, cross_val_predict\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import accuracy_score\n\n","2f20d0e2":"logreg=LogisticRegression()\n#lr=LinearRegression()","655ce0c0":"models=[]\nmodels.append(('LR',LogisticRegression()))\nmodels.append(('RFC',RandomForestClassifier()))","ddbf3194":"logreg.fit(x_train,y_train)","79ddf7a9":"c=[10,100]\nsolver=['liblinear','newton-cg','saga']\nscore=[]\nfor i in range(len(c)):\n    for j in range(len(solver)):\n        logreg=LogisticRegression(C=c[i],solver=solver[j])\n        logreg.fit(x_train,y_train)\n        y_test_pred=logreg.predict(x_test)\n        score.append(accuracy_score(y_test,y_test_pred))\n","87f5eaf8":"score","ae0fce0a":"from sklearn.metrics import classification_report\nlogreg=LogisticRegression(C=100,solver='newton-cg')\nlogreg.fit(x_train,y_train)\ny_test_pred=logreg.predict(x_test)\nprint(classification_report(y_test,y_test_pred))\n","389045c2":"predicted=logreg.predict(x_train)\nAcc_score_tr=accuracy_score(y_train,predicted)\nprint('Accuracy score:',Acc_score_tr)","952b4bbf":"estimators=[10,50,100]\nrfcscore=[]\nfor i in range(len(estimators)):\n    rfc=RandomForestClassifier(n_estimators=estimators[i])\n    rfc.fit(x_train,y_train)\n    y_pred1=rfc.predict(x_test)\n    rfcscore.append(accuracy_score(y_test,y_pred1))\n","ef4b688f":"rfcscore","a8cfed45":"Con_matrix_tr=confusion_matrix(y_train,predicted)\nprint('Confusin metrix:',Con_matrix_tr)","b173edc0":"sns.heatmap(confusion_matrix(y_train,predicted))","a1df5188":"#fpr,tpr,thresholds=metrics.roc_auc_score(y_train,predicted)","ce856a80":"from sklearn.metrics import average_precision_score\naverage_precision_tr = average_precision_score(y_train, predicted)\n\nprint('Average precision-recall score: {0:0.2f}'.format(\n      average_precision_tr))","4d32814e":"from sklearn.metrics import recall_score\nRe_score_tr=recall_score(y_train, predicted)\nprint('recall_score on train set :',Re_score_tr)","0724f539":"from sklearn.metrics import f1_score\nF1_score_tr=f1_score(y_train, predicted)\nprint('F1_sccore on train set :',F1_score_tr)","1c7d2e3a":"prediction = logreg.predict(x_test)\naccuracy_score_ts= accuracy_score(y_test,prediction)\nprint('accuracy score on test  :',accuracy_score_ts)","e098677b":"Con_matrix_ts=confusion_matrix(y_test,prediction)\nprint('Confusin metrix:',Con_matrix_ts)","dc9e03aa":"from sklearn.metrics import average_precision_score\naverage_precision_ts = average_precision_score(y_test, prediction)\n\nprint('Average precision-recall score: {0:0.2f}'.format(\n      average_precision_ts))","7bdc6d4b":"Re_score_ts=recall_score(y_test, prediction)\nprint('recall_score on train set :',Re_score_ts)","a8d44f3c":"F1_score_ts=f1_score(y_test, prediction)\nprint('F1_sccore on train set :',F1_score_ts)","f658526a":"data=pd.DataFrame({'Accuracy_score':[Acc_score_tr,accuracy_score_ts],'Confusion_matrix':[Con_matrix_tr,Con_matrix_ts],\n                  'Average_precision_score':[average_precision_tr,average_precision_ts],'recall_score':[Re_score_tr,Re_score_ts]\n                  ,'f1_score':[F1_score_tr,F1_score_ts]},\n                 index=['Train','Test'])","96a3ee84":"np.transpose(data)","db9133e6":"from sklearn.model_selection import cross_val_score, cross_val_predict","69368631":"cross_val_score(logreg,x,y,cv=3)","392000dd":"from sklearn.ensemble import RandomForestClassifier,RandomForestRegressor","baeb7947":"#model on train using all the independent values in df\nrfc_prediction = rfc.predict(x_train)\nrfc_score= accuracy_score(y_train,rfc_prediction)\nprint('accuracy Score on train using RandomForest :',rfc_score)","e74938e1":"confusion_matrix(y_train, rfc_prediction)","5d4aceeb":"fpr, tpr, thresholds = metrics.roc_curve(y_train,rfc_prediction)\nprint(\"AUC on train using RandomForest :\",metrics.auc(fpr, tpr))","8f26c42b":"average_precision = average_precision_score(y_train, rfc_prediction)\n\nprint('Average precision-recall score: {0:0.2f}'.format(\n      average_precision))","0e2f50ea":"print('recall_score on train set :',recall_score(y_train, rfc_prediction))","925e03ef":"print('F1_sccore on train set :',f1_score(y_train, rfc_prediction))","b2edc14a":"rfc_prediction = rfc.predict(x_test)\nrfc_score= accuracy_score(y_test,rfc_prediction)\nprint('accuracy score on test using RandomForest ',rfc_score)","55824245":"# DATA VISULIZATION","bdc11ee8":"# correlation"}}