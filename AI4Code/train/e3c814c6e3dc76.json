{"cell_type":{"c356a6fa":"code","3903f2c2":"code","cc291bc2":"code","27a9bc3f":"code","2e0c42b1":"code","23c8fdd2":"code","15d97ceb":"code","246919cf":"code","34311a5c":"code","c96463fa":"code","18f71cc6":"code","3eebab4a":"code","3d840a76":"code","2788452c":"code","74d03082":"code","6deab607":"code","946f8873":"markdown","0efd9952":"markdown","57867a27":"markdown","9bc12b8f":"markdown","9d4061bf":"markdown","1a4c9a56":"markdown","ea9be7fe":"markdown","1c5ba9dd":"markdown","bb70f904":"markdown","492eaccc":"markdown","39da3b47":"markdown","c35d1e0a":"markdown","fc7ab5a8":"markdown"},"source":{"c356a6fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3903f2c2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","cc291bc2":"df=pd.read_csv(\"\/kaggle\/input\/golden-globe-awards\/golden_globe_awards.csv\")\ndf.head(10)","27a9bc3f":"df.isnull().sum()","2e0c42b1":"df.shape","23c8fdd2":"df['category'].nunique()","15d97ceb":"print('Number of unique films in the award ceremony: ', df['film'].nunique())","246919cf":"most_nominated_nominee = df.groupby('nominee')['win'].count()\npd.DataFrame(most_nominated_nominee[most_nominated_nominee == most_nominated_nominee.max()])","34311a5c":"more_5_win = df.groupby('nominee')['win'].sum()\nmore_5_win = more_5_win.reset_index()\nmore_5_win = more_5_win[more_5_win['win'] >= 5].sort_values(ascending=False, by='win')\n\n# print('There are ', more_5_win['win'].count(), 'nominees who won more than 5 awards')\nplt.figure(figsize=(20,8))\nsns.set_style('whitegrid')\nsns.barplot(x='nominee', y='win', data=more_5_win, palette='hls')\nplt.title('Nominees who won more than 5 awards', fontsize=14)\nplt.xlabel('Nominee', fontsize=14)\nplt.ylabel('Total Wins', fontsize=14)\nplt.xticks(fontsize=12, rotation=90)\nplt.yticks(fontsize=12)\nplt.show()","c96463fa":"more_15_nominated = df.groupby('nominee')['win'].count()\nmore_15_nominated = more_15_nominated.reset_index()\nmore_15_nominated = more_15_nominated[more_15_nominated['win'] >= 15].sort_values(ascending=False, by='win')\n\n# top_10_nominated\nplt.figure(figsize=(20,8))\nsns.set_style('whitegrid')\nsns.barplot(x='nominee', y='win', data=more_15_nominated, palette='hls')\nplt.title('Nominees who were nominated more than 15 times', fontsize=14)\nplt.xlabel('Nominee', fontsize=14)\nplt.ylabel('Nomination Count', fontsize=14)\nplt.xticks(fontsize=12, rotation=90)\nplt.yticks(fontsize=12)\nplt.show()","18f71cc6":"film_most_awards = df.groupby('film')['win'].sum()\npd.DataFrame(film_most_awards[film_most_awards == film_most_awards.max()])","3eebab4a":"more_5_films = df.groupby('film')['win'].sum()\nmore_5_films = more_5_films.reset_index()\nmore_5_films = more_5_films[more_5_films['win'] >= 5].sort_values(ascending=False, by='win')\n\nplt.figure(figsize=(20,8))\nsns.set_style('whitegrid')\nsns.barplot(x='film', y='win', data=more_5_films, palette='hls')\nplt.title('Films that have won atleast 5 awards', fontsize=12)\nplt.xlabel('Film', fontsize=12)\n\nplt.ylabel('Award Count', fontsize=12)\nplt.xticks(rotation=90, fontsize=12)\nplt.yticks(rotation=90, fontsize=12)\nplt.show()","3d840a76":"film_awards_year = df.groupby(['film', 'year_award'])['win'].sum()\npd.DataFrame(film_awards_year[film_awards_year == film_awards_year.max()])","2788452c":"film_nominations = df.groupby(['film', 'year_award'])['win'].count()\npd.DataFrame(film_nominations[film_nominations == film_nominations.max()]).reset_index()","74d03082":"director_motion_picture = df[df['category'].str.contains('Best Director - Motion Picture')]\ndirector_motion_picture = director_motion_picture.groupby('nominee')['win'].count().reset_index().sort_values(ascending=False, by='win')\ndirector_motion_picture = director_motion_picture[director_motion_picture['win'] >= 5]\n# director_motion_picture\n\nplt.figure(figsize=(15,6))\nsns.set_style('whitegrid')\nsns.barplot(x='nominee', y='win', data=director_motion_picture, palette='hls')\nplt.title('Most nominated directors in motion picture category', fontsize=12)\nplt.xlabel('Director', fontsize=12)\n\nplt.ylabel('Nominations', fontsize=12)\nplt.xticks(rotation=90, fontsize=12)\nplt.yticks(rotation=90, fontsize=12)\nplt.show()","6deab607":"df_year = pd.DataFrame()\ndf_year['total_nominations'] = df.groupby(['year_award'])['win'].count()\ndf_year['wins'] = df.groupby(['year_award'])['win'].sum()\nplt.plot(df_year.index, df_year['total_nominations'], label = 'nominations')\nplt.plot(df_year.index, df_year['wins'], label = 'wins')\nplt.legend()","946f8873":"**Films\/T.V. Show that have won atleast 5 awards**","0efd9952":"**Number of unique films in the dataset**","57867a27":"**Nominee who was nominated the most number of times**","9bc12b8f":"**Film that has won most awards in a single year**","9d4061bf":"**Film won most award :-**","1a4c9a56":"**NO of null val**","ea9be7fe":"**Dimension of data set**","1c5ba9dd":"****Most nominated directors in the Motion Picture category****","bb70f904":"**Film that got the most nominations in a single year**","492eaccc":"**Nominees who were nominated more than 15 times**","39da3b47":"**Total unique category of awards**","c35d1e0a":"**Nominees who won atlest 5 awards**","fc7ab5a8":"** NOMINATIONS AND AWARDS HAVE CHANGED OVER THE YEARS**"}}