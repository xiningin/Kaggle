{"cell_type":{"4ce5c969":"code","7f88c3e2":"code","4801785a":"code","c8ef9bbf":"code","6024e1a1":"code","00a2d5bb":"code","a6cdd59b":"code","af20116e":"code","362f36c3":"code","edc8dbdc":"code","1514ce55":"code","609f2d03":"code","ead27221":"code","2884306a":"code","ffb95406":"code","1b66fc0f":"code","104d3eca":"code","5b5e5783":"code","3b50ac0b":"code","3078bdbd":"code","71eca3cb":"code","f9f83d78":"code","e47059dd":"code","64452ee4":"code","d084d4e3":"markdown","97df71b3":"markdown","4ca62e55":"markdown","702557b9":"markdown","5b63538b":"markdown","08a19839":"markdown","71ed718d":"markdown","0c040f66":"markdown","c50c5498":"markdown","19267ef9":"markdown","9fb2e538":"markdown","defc8c10":"markdown","e08f24dd":"markdown","f0b300b6":"markdown","dbebedde":"markdown","ff19efb7":"markdown","6ef98af7":"markdown","14b9c804":"markdown","49711884":"markdown","08758b69":"markdown","5269bfd2":"markdown","51bf6297":"markdown","55febe58":"markdown","e5aab2f8":"markdown","e6df1ee3":"markdown"},"source":{"4ce5c969":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport folium\nfrom folium.plugins import HeatMap\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport numpy as np, matplotlib.pyplot as plt, seaborn as sns\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7f88c3e2":"crimes=pd.read_csv(\"..\/input\/crimes-in-boston\/crime.csv\",encoding = \"ISO-8859-1\")\ncrimes.head()","4801785a":"crimes.columns = map(str.lower, crimes.columns)\ncrimes.head()","c8ef9bbf":"print(crimes.shape, crimes.drop_duplicates().shape)\ncrimes = crimes.drop_duplicates() #It has 23 duplicates.","6024e1a1":"import missingno as msno\nmsno.matrix(crimes)","00a2d5bb":"print(crimes.isnull().sum(), end = '\\n\\n')\nprint(crimes[(crimes['lat'].isnull()) | (crimes['long'].isnull())]['location'].unique())","a6cdd59b":"off = crimes.groupby('offense_code_group')['offense_code'].nunique().sort_values(ascending = False)\noff.to_frame().reset_index()[:10]","af20116e":"y=crimes.year.value_counts()\nprint(y)","362f36c3":"sns.set(style=\"whitegrid\", color_codes=True)\n\nyear_counts = crimes.groupby('year').count()['incident_number'].to_frame().reset_index()\npal = sns.color_palette(\"GnBu_d\", len(year_counts['year']))\nrank = year_counts[\"incident_number\"].argsort().argsort() \nsns.set(rc={'figure.figsize':(5,5)})\nax = sns.barplot(x = 'year' , y=\"incident_number\", data = year_counts, palette=np.array(pal[::-1])[rank])\n\nplt.ylim(40000,110000)\nplt.show()","edc8dbdc":"month_counts = crimes.groupby('month').count()['incident_number'].to_frame().reset_index()\nsns.set(rc={'figure.figsize':(8,5)})\npal = sns.color_palette(\"Blues_d\", len(month_counts['month']))\nrank = month_counts[\"incident_number\"].argsort().argsort() \nax = sns.barplot(x = 'month' , y=\"incident_number\", data = month_counts,palette=np.array(pal[::-1])[rank])","1514ce55":"plt.figure(figsize=(15,7))\ncrimes.groupby(['year','month']).count()['incident_number'].plot.bar()","609f2d03":"day_counts = crimes.groupby('day_of_week').count()['incident_number'].to_frame().reset_index()\nsns.set(rc={'figure.figsize':(8,8)})\npal = sns.color_palette(\"ch:3.1,-.2,dark=.2\", len(day_counts['day_of_week']))\nrank = day_counts[\"incident_number\"].argsort().argsort() \nax = sns.barplot(x = 'day_of_week' , y=\"incident_number\", data = day_counts, palette=np.array(pal[::])[rank])","ead27221":"hour_nums = crimes.groupby(['hour']).count()['incident_number'].to_frame().reset_index()\nsns.set(rc={'figure.figsize':(20,6)})\npal = sns.color_palette(\"ch:3.2,-.2,dark=.2\", len(hour_nums['hour']))\nrank = hour_nums[\"incident_number\"].argsort().argsort() \nax = sns.barplot(x = 'hour' , y=\"incident_number\", data = hour_nums, palette=np.array(pal[::])[rank])\n\n# ax.set_xticklabels(ax.get_xticklabels(),rotation=90); #x eks.deki de\u011ferleri yatay yazar.","2884306a":"district_nums =  crimes.groupby('district').count()['incident_number'].sort_values(ascending = False).to_frame().reset_index()\nsns.set(rc={'figure.figsize':(7,5)})\npal = sns.color_palette(\"ch:3.4,-.2,dark=.2\", len(district_nums['district']))\nrank = district_nums[\"incident_number\"].argsort().argsort() \nax = sns.barplot(x = 'district' , y=\"incident_number\", data = district_nums, palette=np.array(pal[::])[rank])","ffb95406":"print(crimes.groupby('year').count()['incident_number'])\nsns.set(rc={'figure.figsize':(5,5)})\npal = sns.color_palette(\"ch:3.5,-.2,dark=.2\", len(year_counts['year']))\nrank = year_counts[\"incident_number\"].argsort().argsort() \nax = sns.barplot(x = 'year' , y=\"incident_number\", data = year_counts, palette=np.array(pal[::])[rank])\n","1b66fc0f":"print('Count of Months Per Year:\\n',crimes.groupby('year')['month'].nunique())\nav_month = (crimes.groupby('year').count()['incident_number'] \/ crimes.groupby('year')['month'].nunique()).to_frame().reset_index()\nprint('\\nAverage monthly incident per year:\\n',av_month)\nav_month.rename(columns = {0:'incident_number'}, inplace = True)\n\npal = sns.color_palette(\"ch:3.7,-.3,dark=.3\", len(year_counts['year']))\nrank = av_month[\"incident_number\"].argsort().argsort() \nsns.set(rc={'figure.figsize':(5,5)})\nax = sns.barplot(x = 'year' , y=\"incident_number\", data = av_month, palette=np.array(pal[::])[rank])","104d3eca":"print(crimes.min()['occurred_on_date'])\nprint(crimes.max()['occurred_on_date'])","5b5e5783":"crimes['occurred_on_date'] = pd.to_datetime(crimes['occurred_on_date'])\nyearly_counts = crimes.groupby('year').count()['incident_number'].to_numpy()\ndays = []\nfor year in crimes.year.sort_values().unique():\n    days.append((crimes[crimes['year'] == year].max().occurred_on_date - crimes[crimes['year'] == year].min().occurred_on_date).days)\n\naverage_daily_incidents = yearly_counts \/ days  \n    \nprint([str(year)+ \": \"+ str(avg)[:4] for year, avg in enumerate(average_daily_incidents, 2015)])","3b50ac0b":"d_avg = pd.DataFrame(data = average_daily_incidents, index = av_month.index)\nd_avg.rename(columns = {0:'counts'}, inplace = True)\n\npal = sns.color_palette(\"ch:3.8,-.1,dark=.2\", len(year_counts['year']))\nrank = av_month[\"incident_number\"].argsort().argsort() \nsns.set(rc={'figure.figsize':(5,5)})\nax = sns.barplot(x = d_avg.index , y=\"counts\", data = d_avg, palette=np.array(pal[::])[rank])\nax.set_xticklabels(crimes.year.sort_values().unique());","3078bdbd":"shooting_years","71eca3cb":"shooting = crimes.dropna(subset = ['shooting'])\nshooting_years = shooting.groupby('year').count()['incident_number'].to_frame().reset_index()\n\nsns.set(rc={'figure.figsize':(5,5)})\npal = sns.color_palette(\"ch:4.2,-.1,dark=.2, light=.8\", len(shooting_years['year']))\n\nsns.set(rc={'figure.figsize':(5,5)})\nax = sns.barplot(x = shooting_years[\"year\"] , y=\"incident_number\", data = shooting_years, palette=np.array(pal[::])[rank])","f9f83d78":"# Now let's look at the top 10 places to see where the crime was committed the most.\n\"\"\" stmax = df.STREET.value_counts().head(10)\nprint(stmax)\nprint(stmax[\"CENTRE ST\"])\"\"\"","e47059dd":"# Now let's visualize it.\n''' sns.catplot(y='STREET',\n           kind='count',\n           height=7, \n           aspect=2,\n           order=df.STREET.value_counts().head(10).index,\n           data=df) '''","64452ee4":"# In the graph below, we see the 30 most common crimes in the city. Top 3 crimes are: Motor Vehicle,  Accident Response, Larceny, Medical Assistance.\n''' df2 = pd.DataFrame(columns = ['offenses'])\ndf2[\"offenses\"]=[each for each in crimes.offense_code_group.unique()]\ndf2[\"count\"]=[len(crimes[crimes.offense_code_group==each]) for each in df2.offenses]\ndf2=df2.sort_values(by=['count'],ascending=False)\n\nplt.figure(figsize=(25,15))\nsns.barplot(x=df2.offenses.head(30), y=df2.value_counts().head(30)\nplt.xticks(rotation= 90)\nplt.xlabel('offenses')\nplt.ylabel('count')\nplt.show() '''","d084d4e3":"### Crime counts per year:\nLet's first look at how many crimes are in what years.","97df71b3":"* We find the offense_code_group with most incidents over the years and plot the change of it in chart. As we can see, the two complete years have close counts similar to their total count of incidents while the two uncomplete year have less count","4ca62e55":"* When we print first and last occurred_on_date we see that the records starts with 15th of the month 6 for year 2015 which means there are missing records for month 6 and we also see that there are only 3 days from month 10 of year 2018. We then find the days for each year and use it to calculate daily count of incidents per year.\n* When we plot the average daily incidents we see that they are quite close to each other. The daily average increases a couple of incidents from 2015 to 2016 and increase a couple from 2016 to 2017 as well while there is around 7 incident decrease from 2017 to 2018.","702557b9":"Printing & plotting the count of incidents per year, first thing we see is that the counts of the reports has increased almost two times from 2015 to 2016 and almost didn't increase from 2016 to 2017 and finally has dropped around 25 percent from 2017 to 2018.\n\n<br>But this is just the surface and might be misleading. We shall dive deep and get more information before we make a call.","5b63538b":"### Crime counts per day","08a19839":"* Now we can try to understand our columns a little bit. When we call crimes.head(), we can see an example of the data with first 5 rows. First things that can be reliazed are:\n* INCIDENT_NUMBER is the record number of the incident.\n* OFFENSE_CODE is the code for crime.\n* OFFENSE_CODE_GROUP seems to be a more general category which includes different OFFENSE_CODEs, we will look at it later. It also seems to be a general explanation of the incident.\n* OFFENSE_DESCRIPTION seems to be a more understandable, more self explanatory column.\n* DISTRICT areas are most probably areas of Boston, neighbors in a way.\n* REPORTING_AREA seems to be a more spesific location than district which where the incidents was reported.\n* SHOOTING is to explain whether was there any shootings in incident or not.\n* OCCURED_ON_DATE, YEAR, MONTH, DAY_OF_WEEK, HOUR STREET, Lat, Long columns are self explanatory.\n* UCR_PART is a mystery at this point which we will search for more information.","71ed718d":"# A-2) Answering the Question","0c040f66":"* We can generally say that crimes are committed mostly in the summer.","c50c5498":"### Hour incident counts","19267ef9":"At the below cell, we print count of unique offence_code per offense_code_group and sort them descending. We can see some offense_code_group has more than 1 offense_code under their section. The first 10 are printed. We see that Drug Violation offense_code_group has 26 offense_code underneath it.","9fb2e538":"* We can see that there is an increase in crime during the hours when people continue their daily lives.\n* For example, while there is an increase in the rush hours (on the way home from work), a more sluggish situation is observed between 3-6 AM.","defc8c10":"* Let's look at how many days we collect data over the years.**","e08f24dd":"# A-1) How has crime changed over the years?","f0b300b6":"* In terms of day, we can say that the most crime was committed on Fridays and on the weekend.","dbebedde":"* When we examine the graph, we can see that the crimes increased until 2017 and decreased after peaking in 2017.\n* The reasons for the decrease in the number of crimes after 2017 may be the regulations or the increase in penalties. However, we can't make a detailed comment without reviewing crime counts per year and month.\n","ff19efb7":"### Crime counts per year and month","6ef98af7":"Let's find out how many duplicates df has to heck and eventually remove them.","14b9c804":"* When we first examined the data in the upper part, we saw that the number of crimes is very different from each other annually. However, when the daily average of incidents per year is examined, we see that the number of crimes committed has not changed much annually.","49711884":"*  When we groupby our data based on year and get count of months for each year, we see that 2015 has only 7 months and and 2018 has 10. 2016 and 2017 has all 12 months. \n*  This kind of explains why 2015 was almost half of the 2016 and 2018 was around 3\/4 of the 2017. The missing months cause a wrong assumption if we don't be cautious. \n* At the next step we find the monthly average incident per year by dividing count of incident to number of months for each year. We see that there actually isn't much  change when we get an average of months. ahere is an increase from 2015 to 2016 and a little increase as well from 2016 to 2017 and finally a decrease from 2017 to 2018.  \n*  But this also may be misleading because we don't know if the first month of 2016 which is month 6, has all the days also the last month of 2018 which is month 10, has all the days as well .\n*  Therefore we may better get the count of the days and find the daily average of incidents per year","08758b69":"## Visualization:","5269bfd2":"* Below we can see the count of the incidents which shooting was involved. We can see that the shootings increases from 2015 to 2016 and from 2016 to 2017 and then there is a decrease from 2017 to 2018. \n* We of course need to take into consideration that 2015 is almost half year and 2018 is almost 3 months missing. But the increase from 2016 to 2017 is clear as both years are completed","51bf6297":"### Crime counts per month","55febe58":"Let's see how many missing values that we have.","e5aab2f8":"Let's make column names lowercase so that we won't be thinking which one was uppercase and which one was lower. Plus it is easier to write in lowercase.","e6df1ee3":"### District incident counts"}}