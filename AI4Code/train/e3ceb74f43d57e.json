{"cell_type":{"5b14ff03":"code","003d9389":"code","24fb9a53":"code","6eba5b81":"code","7bd4cf25":"code","ec2417d4":"code","468076bf":"markdown","cab7c959":"markdown"},"source":{"5b14ff03":"!pip install sklearn\n!pip install pandas\n!pip install numpy\n!pip install sklearn\n!pip install imutils","003d9389":"#necessary packages\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom imutils import paths\nimport os","24fb9a53":"#necessary package\nimport cv2\n\nclass ImgProcessor:\n    def __init__(self, width, height, inter=cv2.INTER_AREA):\n        self.width=width\n        self.height=height\n        self.inter=inter\n\n    def process(self, img):\n        #same image ratio for all images\n        return cv2.resize(img, (self.width, self.height), interpolation=self.inter)\n","6eba5b81":"#nessary package\nimport numpy as np\n\nclass DataLoader:\n    def __init__(self, prepros=None):\n        self.prepros=prepros\n        if self.prepros is None:\n            self.prepros=[]\n\n    def load(self, imgpaths, verbose=-1):\n        #create two list for data and label\n        data = []\n        labels=[]\n        #loop over the input image\n        for(i, imgpath) in enumerate(imgpaths):\n            img=cv2.imread(imgpath)\n            label=imgpath.split(os.path.sep)[-2]\n\n            if self.prepros is not None:\n                for p in self.prepros:\n                    img=p.process(img)\n\n            data.append(img)\n            labels.append(label)\n\n            if verbose > 0 and i > 0 and (i + 1) % verbose == 0:\n                print(\"[INFO] processed {}\/{}\".format(i + 1, len(imgpaths)))\n        return (np.array(data), np.array(labels))","7bd4cf25":"#dataset path\ndataset_path = '..\/input\/animal-image-datasetdog-cat-and-panda\/animals'\nneighbors = 3\njobs = 1","ec2417d4":"print(\"Loading Images:\")\nimgpaths=list(paths.list_images(dataset_path))\n# 32*32 pixel image size processing\nip = ImgProcessor(32, 32)\ndl = DataLoader(prepros=[ip])\n(data, labels) = dl.load(imgpaths, verbose=500)\ndata = data.reshape((data.shape[0], 3072))\nprint(\"[INFO] features matrix: {:.1f}KB\".format(data.nbytes \/ (1024)))\nprint(data[1].shape)\n# encoding the labels for each animal\n# convert these to interger like 0, 1, 2\n# for cat class 0, dog class 1 and panda class 2\n\nle = LabelEncoder()\nlabels = le.fit_transform(labels)\n\n#75% training and 25% testing data\n(Xtrain, Xtest, ytrain, ytest) = train_test_split(data, labels, test_size=0.25, random_state=40)\n\n#evaluating with knn classifier\nmodel = KNeighborsClassifier(n_neighbors=neighbors, n_jobs=jobs)\n\nmodel.fit(Xtrain, ytrain)\n\n\nprint(classification_report(ytest, model.predict(Xtest), target_names=le.classes_))","468076bf":"## **Image Preprocessing**","cab7c959":"## **KNN**"}}