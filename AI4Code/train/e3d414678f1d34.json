{"cell_type":{"324457a5":"code","e3a5729e":"code","c66b2393":"code","b3edaf7e":"code","3c6265f5":"code","5055f730":"code","f6d39620":"code","b36e0b2a":"code","c0177d8f":"code","2bfc2628":"code","f06a244a":"code","a1dbb40a":"code","56fee9c6":"code","3daf3430":"markdown","a3a0f048":"markdown","71fbe940":"markdown","1405f4b0":"markdown","f4b7ca95":"markdown","78b1be70":"markdown","1f07aa61":"markdown","cf310193":"markdown"},"source":{"324457a5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e3a5729e":"import pandas as pd\ndf_participant = pd.read_csv('\/kaggle\/input\/dqthonparticipantscompetition\/dqthon-participants.csv')","c66b2393":"df_participant.head()","b3edaf7e":"df_participant['address'].head()","3c6265f5":"# Transform Postal Code\ndf_participant['postal_code'] = df_participant['address'].str.extract(r'(\\d+)$')\ndf_participant['postal_code'].head()","5055f730":"# Transform City\ndf_participant['city'] = df_participant['address'].str.extract(r'(?<=\\n)(\\w.+)(?=,)') \ndf_participant['city'].head()","f6d39620":"# Transform Github Profile\ndf_participant['github_profile'] = 'https:\/\/github.com\/' + df_participant['first_name'].str.lower() + df_participant['last_name'].str.lower()\ndf_participant['github_profile'].head()","b36e0b2a":"df_participant['phone_number'].head()","c0177d8f":"# Transform Phone Number\ndf_participant['cleaned_phone_number'] = df_participant['phone_number'].str.replace(r'^(\\+62|62)', '0')\ndf_participant['cleaned_phone_number'] = df_participant['cleaned_phone_number'].str.replace(r'[()-]', '')\ndf_participant['cleaned_phone_number'] = df_participant['cleaned_phone_number'].str.replace(r'\\s+', '')\ndf_participant['cleaned_phone_number'].head()","2bfc2628":"def func(col):\n    abbrev_name = \"%s%s\"%(col['first_name'][0],col['last_name'][0])\n    country = col['country']\n    abbrev_institute = '%s'%(''.join(list(map(lambda word: word[0], col['institute'].split()))))\n    return \"%s-%s-%s\"%(abbrev_name,country,abbrev_institute)\ndf_participant['team_name'] = df_participant.apply(func, axis=1)\ndf_participant['team_name'].head()","f06a244a":"def func(col):\n    first_name_lower = col['first_name'].lower()\n    last_name_lower = col['last_name'].lower()\n    institute = ''.join(list(map(lambda word: word[0], col['institute'].lower().split())))\n    \n    if 'Universitas' in col['institute']:\n        if len(col['country'].split()) > 1:\n            country = ''.join(list(map(lambda word: word[0], col['country'].lower().split())))\n        else:\n            country = col['country'][:3].lower()\n        return \"%s%s@%s.ac.%s\"%(first_name_lower,last_name_lower,institute,country)\n        \n    return \"%s%s@%s.com\"%(first_name_lower,last_name_lower,institute)\n    \ndf_participant['email'] = df_participant.apply(func, axis=1)\ndf_participant['email'].head()","a1dbb40a":"df_participant['birth_date'].head()","56fee9c6":"df_participant['birth_date'] = pd.to_datetime(df_participant['birth_date'], format='%d-%b-%y')\ndf_participant['birth_date'].head()","3daf3430":"**Transform Bagian I - Kode Pos**\nAda permintaan datang dari tim Logistik bahwa mereka membutuhkan kode pos dari peserta agar pengiriman piala lebih mudah dan cepat sampai. Maka dari itu buatlah kolom baru bernama postal_code yang memuat informasi mengenai kode pos yang diambil dari alamat peserta (kolom address).\n\nDiketahui bahwa kode pos berada di paling akhir dari alamat tersebut.\n\nNote:\nJika regex yang dimasukkan tidak bisa menangkap pattern dari value kolom address maka akan menghasilkan NaN.","a3a0f048":"1. **The Original Data**","71fbe940":"**Transform Bagian IV - Nomor Handphone**\nJika kita lihat kembali, ternyata nomor handphone yang ada pada data csv kita memiliki format yang berbeda-beda. Maka dari itu, kita perlu untuk melakukan cleansing pada data nomor handphone agar memiliki format yang sama. Anda sebagai Data Engineer diberi privilege untuk menentukan format nomor handphone yang benar. Pada kasus ini mari kita samakan format nya dengan aturan:\n\n* Jika awalan nomor HP berupa angka 62 atau +62 yang merupakan kode telepon Indonesia, maka diterjemahkan ke 0.\n* Tidak ada tanda baca seperti kurung buka, kurung tutup, strip\u27f6 ()-\n* Tidak ada spasi pada nomor HP Nama kolom untuk menyimpan hasil cleansing pada nomor HP yaitu cleaned_phone_number","1405f4b0":"**Transform Bagian VII - Tanggal Lahir**\nMySQL merupakan salah satu database yang sangat populer dan digunakan untuk menyimpan data berupa tabel, termasuk data hasil pengolahan yang sudah kita lakukan ini nantinya bisa dimasukkan ke MySQL.\n\nMeskipun begitu, ada suatu aturan dari MySQL terkait format tanggal yang bisa mereka terima yaitu YYYY-MM-DD dengan keterangan:\n\n* YYYY: 4 digit yang menandakan tahun\n* MM: 2 digit yang menandakan bulan\n* DD: 2 digit yang menandakan tanggal\n* Contohnya yaitu: 2021-04-07\n\n","f4b7ca95":"**Transform Bagian V - Nama Tim**\nDataset saat ini belum memuat nama tim, dan rupanya dari tim Data Analyst membutuhkan informasi terkait nama tim dari masing-masing peserta.\n\nDiketahui bahwa nama tim merupakan gabungan nilai dari kolom first_name, last_name, country dan institute.\n\nTugas Anda yakni buatlah kolom baru dengan nama team_name yang memuat informasi nama tim dari peserta.","78b1be70":"**Transform Bagian II - Kota**\nSelain kode pos, mereka juga membutuhkan kota dari peserta.\n\nUntuk menyediakan informasi tersebut, buatlah kolom baru bernama city yang didapat dari kolom address. Diasumsikan bahwa kota merupakan sekumpulan karakter yang terdapat setelah nomor jalan diikuti dengan \\n (newline character) atau dalam bahasa lainnya yaitu enter","1f07aa61":"**Transform Bagian III - Github**\nSalah satu parameter untuk mengetahui proyek apa saja yang pernah dikerjakan oleh peserta yaitu dari git repository mereka.\n\nPada kasus ini kita menggunakan profil github sebagai parameter nya. Tugas Anda yaitu membuat kolom baru bernama github_profile yang merupakan link profil github dari peserta.\n\nDiketahui bahwa profil github mereka merupakan gabungan dari first_name dan last_name yang sudah di-lowercase. ","cf310193":"**Transform Bagian VI - Email**\nSetelah dilihat kembali dari data peserta yang dimiliki, ternyata ada satu informasi yang penting namun belum tersedia, yaitu email.\n\n* xx -> nama depan (first_name) dalam lowercase\n* yy -> nama belakang (last_name) dalam lowercase\n* aa -> nama institusi\n\nUntuk nilai bb, dan cc mengikuti nilai dari aa. Aturannya:\n- Jika institusi nya merupakan Universitas, maka\n  bb -> gabungan dari huruf pertama pada setiap kata dari nama Universitas dalam lowercase\n  Kemudian, diikuti dengan .ac yang menandakan akademi\/institusi belajar dan diikuti dengan pattern cc\n- Jika institusi bukan merupakan Universitas, maka\n  bb -> gabungan dari huruf pertama pada setiap kata dari nama Universitas dalam lowercase\n  Kemudian, diikuti dengan .com. Perlu diketahui bahwa pattern cc tidak berlaku pada kondisi ini\n\ncc -> merupakan negara asal peserta, adapun aturannya:\n- Jika banyaknya kata pada negara tersebut lebih dari 1 maka ambil singkatan dari negara tersebut dalam lowercase\n- Namun, jika banyaknya kata hanya 1 maka ambil 3 huruf terdepan dari negara tersebut dalam lowercase\n\nContoh:\n*   Nama depan: Citra\n*   Nama belakang: Nurdiyanti\n*   Institusi: UD Prakasa Mandasari\n*   Negara: Georgia\n*   Maka,Email nya: citranurdiyanti@upm.geo\n  -----------------------------------\n*   Nama depan: Aris\n*   Nama belakang: Setiawan\n*   Institusi: Universitas Diponegoro\n*   Negara: Korea Utara\n*   Maka, Email nya: arissetiawan@ud.ac.ku"}}