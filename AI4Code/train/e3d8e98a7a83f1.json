{"cell_type":{"ca52192a":"code","aec1ca20":"code","88eb745e":"code","4d5ea01e":"code","a0b7afe4":"code","3fc370f2":"code","128a0143":"code","090cd493":"code","89c5c646":"code","d67601f4":"code","b96caba1":"code","0d618faa":"code","9df7d4e3":"code","40fb2298":"code","37ab3006":"code","d771022c":"code","6d417684":"code","64534708":"code","10b944f2":"code","105c370e":"code","32871fe2":"code","f3b0e45a":"code","e8827a12":"code","29bf09a9":"code","b62e996c":"code","0c4dbacd":"code","a72ca4e9":"code","0d9515a0":"code","357c9383":"code","d2f1c92f":"code","bdd00d5e":"code","f1409560":"markdown","7d68f5cf":"markdown","664e9eca":"markdown","9ec77c5f":"markdown","e4f461cc":"markdown","b46fc8bd":"markdown","e867e71b":"markdown","88629fd6":"markdown","9d29088b":"markdown","73616b7b":"markdown"},"source":{"ca52192a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set(rc={'figure.figsize':(10,10)})\nsns.set_style(\"whitegrid\")\nimport warnings\nwarnings.filterwarnings(\"ignore\")","aec1ca20":"df = pd.read_csv('..\/input\/german-credit\/german_credit_data.csv', index_col=0)\ndf.head()","88eb745e":"df.info()","4d5ea01e":"df.isnull().sum()","a0b7afe4":"## Age Dist\n\nsns.distplot(df.Age, hist=True, rug=True,color='c')","3fc370f2":"## Gender Dist\n\ndf.Sex.value_counts().plot.bar()","128a0143":"## Customer by age and sex\n\nax = sns.boxplot(x=\"Sex\", y=\"Age\",\n                 data=df, palette=\"viridis\")","090cd493":"## Corr between number of checking account and Credit amount by Sex\n\nax = sns.violinplot(x=\"Checking account\", y=\"Credit amount\", hue='Sex',\n                 data=df, palette=\"plasma\")","89c5c646":"## People housing for each Job and their credit amount\n\nax = sns.boxplot(x=\"Job\", y=\"Credit amount\", hue='Housing',\n                 data=df, palette=\"plasma\")","d67601f4":"## Corr between number of checking account and Credit amount by Job \/ Skill\n\nax = sns.swarmplot(x=\"Checking account\", y=\"Credit amount\", hue='Job',\n                 data=df, palette=\"spring\")","b96caba1":"## Corr between Credit amount and Purpose by Job\n\nax = sns.boxplot(x=\"Purpose\", y=\"Credit amount\", hue='Job',\n                 data=df, palette=\"Pastel1\")","0d618faa":"## Corr between Credit Amount and Age by Sex\n\nax = sns.scatterplot(x=\"Credit amount\", y=\"Age\", hue='Sex',\n                 data=df, palette=\"rainbow\")","9df7d4e3":"## Corr between Credit Amount and Age by Purpose\n\nax = sns.scatterplot(x=\"Credit amount\", y=\"Age\", hue='Purpose',\n                 data=df, palette=\"jet_r\")","40fb2298":"import sklearn.preprocessing as pre\nfrom scipy.special import inv_boxcox\nfrom scipy.stats import boxcox","37ab3006":"## Categorical Data\n\ndf = pd.get_dummies(df)\ndf.head()","d771022c":"## heatmap\n\nsns.heatmap(df.corr(), cmap='twilight')","6d417684":"# Cluster column\n\nCluster = df.loc[:,[\"Age\",\"Credit amount\", \"Duration\"]]","64534708":"## Scalling\n\nfig, (ax1, ax2, ax3) = plt.subplots(3,1, figsize=(8,8))\nprint('Skew Value : ' + str(Cluster.Age.skew()))\nsns.distplot(Cluster[\"Age\"], ax=ax1)\nprint('Skew Value : ' + str(Cluster['Credit amount'].skew()))\nsns.distplot(Cluster[\"Credit amount\"], ax=ax2)\nprint('Skew Value : ' + str(Cluster.Duration.skew()))\nsns.distplot(Cluster[\"Duration\"], ax=ax3)\nplt.tight_layout()","10b944f2":"def scalling(df, column):\n    f = plt.figure(figsize=(15,13))\n\n    # log 1 Transform\n    ax = f.add_subplot(221)\n    L1p = np.log1p(df[column])\n    sns.distplot(L1p,color='b',ax=ax)\n    ax.set_title('skew value Log 1 transform: ' + str(np.log1p(df[column]).skew()))\n\n    # Square Log Transform\n    ax = f.add_subplot(222)\n    SRT = np.sqrt(df[column])\n    sns.distplot(SRT,color='c',ax=ax)\n    ax.set_title('Skew Value Square Transform: ' + str(np.sqrt(df[column]).skew()))\n\n    # Log Transform\n    ax = f.add_subplot(223)\n    LT = np.log(df[column])\n    sns.distplot(LT, color='r',ax=ax)\n    ax.set_title('Skew value Log Transform: ' + str(np.log(df[column]).skew()))\n\n    # Box Cox Transform\n    ax = f.add_subplot(224)\n    BCT,fitted_lambda = boxcox(df[column],lmbda=None)\n    sns.distplot(BCT,color='g',ax=ax)\n    ax.set_title('Skew Value Box Cox Transform: ' + str(pd.Series(BCT).skew()))","105c370e":"scalling(Cluster, 'Age')","32871fe2":"scalling(Cluster, 'Credit amount')","f3b0e45a":"scalling(Cluster, 'Duration')","e8827a12":"## Apply Transformation\n\nCluster['Age'],fitted_lambda = boxcox(Cluster['Age'],lmbda=None)\nCluster['Credit amount'], fitted_lambda = boxcox(Cluster['Credit amount'],lmbda=None)\nCluster['Duration'], fitted_lambda = boxcox(Cluster['Duration'],lmbda=None)\nCluster.head()","29bf09a9":"from sklearn.cluster import KMeans \nfrom sklearn import metrics \nfrom scipy.spatial.distance import cdist\nfrom mpl_toolkits.mplot3d import Axes3D","b62e996c":"distortions = []\nmapping1 = {}\nK = range(1,15) \n\nfor k in K:\n    kmeanModel = KMeans(n_clusters=k).fit(Cluster)\n    kmeanModel.fit(Cluster)\n\n    distortions.append(sum(np.min(cdist(Cluster, kmeanModel.cluster_centers_, \n                    'euclidean'),axis=1)) \/ Cluster.shape[0]) \n\n    mapping1[k] = sum(np.min(cdist(Cluster, kmeanModel.cluster_centers_, \n                'euclidean'),axis=1)) \/ Cluster.shape[0] ","0c4dbacd":"for key,val in mapping1.items(): \n    print(str(key)+' : '+str(val)) ","a72ca4e9":"plt.plot(K, distortions, 'bx-') \nplt.xlabel('Values of K') \nplt.ylabel('Distortion') \nplt.title('The Elbow Method using Distortion') \nplt.show() ","0d9515a0":"kmeans = KMeans(n_clusters = 4)\nkmeans.fit(Cluster)\ny_pred = kmeans.predict(Cluster)\nprint(kmeans.cluster_centers_)","357c9383":"df[\"label\"] = kmeans.labels_\ndf.head()","d2f1c92f":"fig = plt.figure(figsize=(10,6))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(df[\"Credit amount\"], df[\"Duration\"], df[\"Age\"], c=y_pred, cmap='jet_r')\nax.set_xlabel(\"Credit amount\")\nax.set_ylabel(\"Duration\")\nax.set_zlabel(\"Age\")","bdd00d5e":"## Detailed Overview\n\nf = plt.figure(figsize=(15,13))\nax = f.add_subplot(311)\nax = sns.scatterplot(x=\"Credit amount\", y=\"Duration\", hue='label', data=df, palette=\"jet_r\")\nax = f.add_subplot(312)\nax = sns.scatterplot(x=\"Age\", y=\"Credit amount\", hue='label', data=df, palette=\"jet_r\")\nax = f.add_subplot(313)\nax = sns.scatterplot(x=\"Age\", y=\"Duration\", hue='label', data=df, palette=\"jet_r\")","f1409560":"In this dataset, i'm going to use 3 column as the cluster column. They are Age, Credit amount and Duration.","7d68f5cf":"After seeing all the result, the best skew value on all three clumn provided by Box Cox Transformation, therefore we are going to use Box Cox Transformation.","664e9eca":"## Introduction\n\nIn this kernel we will discover customer segmentation using K-Means","9ec77c5f":"In elbow method we determine k value of k means by using distortion. If the graph would likely be stable onward, that k value is the best value in kmeans. In this case we are using 4 as number of cluster.","e4f461cc":"## Import Modules","b46fc8bd":"## EDA","e867e71b":"Handling skewed value in distribution of cluster column. I'm going to use 4 method in scalling, there are Log Transform, Log1 Transform, Box Cox transformation and Square Log Transform. When the skew value is nearing 0, it is the best method we could use in scalling.","88629fd6":"## Feature Engineering","9d29088b":"## Summary\n\nConclusion from this analysis is there is 4 kind of customer in this bank :\n\nA. Brown Customer, they are a customer with long duration, mostly have a high amount of credit, this customer is the youngest costumer on this bank.\n\nB. Yellow Customer, they have a 3rd high amount of credit, 3rd long duration, and 3rd youngest customers between all customer.\n\nC. Cyan customer, they are a customer with 2nd high amount of credit, 2nd long of duration, and 2nd youngest age than any other cluster.\n\nD. Dark Blue Customer have the lowest amount of credit in their account, shortest duration, and oldest customers in this bank.","73616b7b":"## Modelling\n\nIn this modelling, to determine k value, i'm using Elbow method."}}