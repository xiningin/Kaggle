{"cell_type":{"f1025331":"code","851a7f00":"code","8e855129":"code","78ad4536":"code","407b01e9":"code","f9745981":"code","88f8bf8b":"code","828ca255":"code","6a60d48e":"code","5a8737cc":"code","d8935d98":"code","58a1dc0f":"code","293d70a1":"code","57ba48b5":"code","3f1d32dd":"code","ff3da346":"code","b853e6da":"code","0227cdf7":"code","4dcddeca":"code","d4444d88":"code","ba6bd677":"code","35208a3f":"code","aa619ac3":"code","cd1ca3f1":"code","d54488ed":"code","fb3661de":"code","4a67bdd5":"code","b6e937ec":"code","89879317":"code","4d60c543":"code","3b18cda0":"code","5b9e28d8":"code","9bfa1cd5":"code","67a980fc":"code","cae689bc":"code","6a053881":"code","c017a739":"code","dcd2fa75":"code","a5404fe6":"code","d37b4436":"code","b1b63384":"code","bad16877":"code","f40f024e":"code","ce09e62d":"code","9c14f2ee":"code","7c5bcad7":"code","089ee12c":"code","a14ef213":"code","0a171e4f":"code","e5037c18":"code","b56fc567":"code","9dc9f9bd":"code","bd8bb318":"code","29978b9a":"code","876a1054":"code","d2c0e673":"code","392da466":"code","e6f8e9b9":"code","64ea61c6":"code","f5a5eefe":"code","748c83ee":"code","ac485132":"markdown","00bedfd0":"markdown","5a964238":"markdown","e3d83e61":"markdown","7a7fe078":"markdown","f42f1d74":"markdown","e8db62b8":"markdown","1763d095":"markdown","53ce8c02":"markdown","6d95a14b":"markdown","0e4822c8":"markdown","005be527":"markdown","f62536ef":"markdown"},"source":{"f1025331":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import OneHotEncoder, MinMaxScaler\nfrom sklearn.metrics import mean_absolute_error, r2_score\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.ensemble import RandomForestRegressor\nimport xgboost as xgb\nfrom xgboost import XGBRegressor\nimport seaborn as sns\nimport numpy as np\nimport matplotlib.ticker as mtick","851a7f00":"df = pd.read_csv('..\/input\/laptop-price\/laptop_price.csv',encoding = \"ISO-8859-1\")","8e855129":"df.info()","78ad4536":"df.select_dtypes(exclude=['float64','int64']).describe()","407b01e9":"df = df.drop('Product', axis=1)\ndf","f9745981":"df['Weight'] = df['Weight'].str.extract(r'(\\d.\\d+|\\d.\\d|\\d)')","88f8bf8b":"df['Weight'] = df['Weight'].astype('float64')","828ca255":"df.Cpu.unique()","6a60d48e":"df['Cpu_model'] = df['Cpu'].str.extract(r'(i\\d|AMD|Samsung|Pentium|Celeron|Atom|Core M|Xeon)')","5a8737cc":"df.Cpu_model.isnull().sum()","d8935d98":"df['Cpu_freq'] = df['Cpu'].str.extract(r'(\\d+\\.\\d+GHz|\\d+GHz)')","58a1dc0f":"df['Cpu_freq'] = df['Cpu_freq'].str.replace('GHz','').astype('float64')","293d70a1":"df['Cpu_freq'].isnull().sum()","57ba48b5":"df.ScreenResolution.unique()","3f1d32dd":"df['Resolution'] = df.ScreenResolution.str.extract(r'(\\d+x\\d+)')","ff3da346":"df.Resolution.isnull().sum()","b853e6da":"df.Memory.unique()","0227cdf7":"df['Memory_Size'] = df.Memory.str.extract(r'(\\d+GB|\\d+TB)')","4dcddeca":"df['Memory_Size'] = df.Memory_Size.str.extract(r'(\\d+)').astype('int64')","d4444d88":"df['Memory_Size'] = list((map((lambda x: x*1000 if x < 16 else x),df['Memory_Size'])))","ba6bd677":"df['Storage_type'] = df.Memory.str.extract(r'(.+[+].+|SSD|HDD|Flash Storage|Hybrid)')","35208a3f":"df['Storage_type'].isnull().sum()","aa619ac3":"df.Gpu.unique()","cd1ca3f1":"df['Gpu_brand'] = df.Gpu.str.extract(r'(Nvidia|AMD|Intel)')","d54488ed":"print([col for col in df.columns if df[col].isnull().sum() > 0])","fb3661de":"df.Ram.unique()","4a67bdd5":"df['Ram'] = df.Ram.str.extract(r'(\\d+)').astype('int64')","b6e937ec":"df.info()","89879317":"df1 = df.drop(['ScreenResolution','Cpu','Memory','Gpu','laptop_ID'], axis= 1)","4d60c543":"df1.select_dtypes(exclude=['float64','int64']).describe()","3b18cda0":"df1.dropna(inplace=True)","5b9e28d8":"df1.columns","9bfa1cd5":"company_sales = df1.groupby('Company').sum().sort_values(by = 'Price_euros', ascending = False)\ncompany_sales\nplt.figure(figsize=(15,5))\nplt.xticks(rotation=90)\nsns.barplot(data = company_sales, x= company_sales.index , y= 'Price_euros')","67a980fc":"ram_sales = df1.groupby('Ram').count().sort_values(by = 'Company', ascending = True)\nsales_pct = list(map(lambda x: (x\/1302)*100, ram_sales.Company ))\n\nfig4, ax4 = plt.subplots(figsize=(10,8))\nax4.pie(sales_pct, startangle= 90, labels = list(map(lambda x: f'{x:.1f}%',sales_pct)), rotatelabels= True)\nax4.legend(list(map(lambda x: f'{x} Mb RAM',ram_sales.index)), loc = 'best')\nplt.show()\n","cae689bc":"os_sales = df1.groupby('OpSys').count().sort_values(by = 'Company', ascending = False)\npct = list(map(lambda x: (x \/ 1302)*100, os_sales.Company))\n\nfig, ax1 = plt.subplots(figsize=(10,5))\nsns.barplot(data = os_sales, x= os_sales.index, y= pct)\nax1.yaxis.set_major_formatter(mtick.PercentFormatter())\n\nplt.show()","6a053881":"freq_sales = df1.groupby('Cpu_freq').count().sort_values(by = 'Company', ascending = False)\n\nfreq_pct = list(map(lambda x: (x\/1302)*100, freq_sales.Company))\n\nfig2, ax2 = plt.subplots(figsize = (10,5))\nsns.barplot(x = freq_sales.index, y = freq_pct)\nax2.yaxis.set_major_formatter(mtick.PercentFormatter())","c017a739":"resolution_sales = df1.groupby(by = 'Resolution').count().sort_values(by = 'Company', ascending = False)\n\nres_pct = list(map(lambda x: (x\/1302)*100, resolution_sales.Company))\n\nfig, ax3 = plt.subplots(figsize = (10,5))\nsns.barplot(data = resolution_sales, x = resolution_sales.index, y = res_pct)\nax3.yaxis.set_major_formatter(mtick.PercentFormatter())\nplt.xticks(rotation = 90)\nplt.show()","dcd2fa75":"fig, ax = plt.subplots(figsize = (10,5))\nsns.heatmap(df1.corr(), annot = True)\nplt.show()","a5404fe6":"df1.info()","d37b4436":"x = df1.drop('Price_euros', axis=1)\ny = df1.Price_euros","b1b63384":"x_train, x_val, y_train, y_val = train_test_split(x, y)","bad16877":"good_cat_cols = [col for col in x_train.columns if x_train[col].nunique() < 10 and x_train[col].dtype == 'object']\nbad_cat_cols = [col for col in x_train.columns if x_train[col].nunique() > 10 and x_train[col].dtype == 'object']\nnum_cols = [col for col in x_train.columns if x_train[col].dtype != 'object']","f40f024e":"cat_transf = OneHotEncoder(handle_unknown='ignore', sparse = False)\nnum_transf = MinMaxScaler(feature_range= (-1, 1))","ce09e62d":"preprocessor = ColumnTransformer(transformers = [('num', num_transf, num_cols),('cat', cat_transf, good_cat_cols)])","9c14f2ee":"num_cols","7c5bcad7":"model = XGBRegressor(n_estimators = 10)","089ee12c":"clf = Pipeline(steps= [('preprocessor',preprocessor),('model', model)])","a14ef213":"clf.fit(x_train, y_train)","0a171e4f":"preds = clf.predict(x_val)","e5037c18":"xgb_r2 = r2_score(y_val, preds)","b56fc567":"mean_absolute_error(y_val, preds)","9dc9f9bd":"model1 = RandomForestRegressor(n_estimators = 10)","bd8bb318":"clf2 = Pipeline(steps=[('preprocessor',preprocessor),('model1', model1)])","29978b9a":"clf2.fit(x_train, y_train)","876a1054":"preds2 = clf2.predict(x_val)","d2c0e673":"rf_r2 = r2_score(y_val, preds2)","392da466":"print(f'R2 for Random forest regression = {rf_r2:.2f}\\nR2 for XGBoost Regressor = {xgb_r2:.2f}')","e6f8e9b9":"cat_features = preprocessor.transformers_[1][1].get_feature_names().tolist()","64ea61c6":"feature_names = num_cols","f5a5eefe":"feature_names.extend(cat_features)","748c83ee":"plt.figure(figsize = (10,5))\nsns.barplot(x = feature_names ,y= model.feature_importances_)\nplt.xticks(rotation = 90)\nplt.title('Feature importance')\nplt.show()","ac485132":"## Which Cpu frequency customers choose?","00bedfd0":"## Which OS is preferred ?","5a964238":"# Featuring Engineering","e3d83e61":"## How many Ram memory customers prefer buying a notebook?","7a7fe078":"# Preprocessing and Modeling","f42f1d74":"# Laptop Price prediction","e8db62b8":"## Which variables are correlated to the price?","1763d095":"## XGboost model","53ce8c02":"## Which company has higher sales?","6d95a14b":"## What is the most important feature for price?","0e4822c8":"## Random Forest model","005be527":"## Which resolution do the customers prefer?","f62536ef":"# Exploratory data analisys"}}