{"cell_type":{"c3931f11":"code","7b853960":"code","48a5826a":"code","0d370f07":"code","6ee5cb69":"code","487631cf":"code","42287d17":"markdown","ab416483":"markdown","a44a085d":"markdown","6d942e20":"markdown","2e331382":"markdown","35bbcb47":"markdown"},"source":{"c3931f11":"import numpy as np \nimport pandas as pd \nimport plotly.express as px\nimport plotly.graph_objects as go\n\ndef plot_three_columns_using_plotly_regular(dataframe,column_one,column_two,column_three,title):    \n    '''\n    This function plots four numerical columns against a date column.\n    It using the regular plotly library instead of plotly express.\n    '''\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(x=dataframe.result_date, y=dataframe[column_one],\n                        mode='lines+markers',name=column_one))\n    fig.add_trace(go.Scatter(x=dataframe.result_date, y=dataframe[column_two],\n                        mode='lines+markers',name=column_two))\n    fig.add_trace(go.Scatter(x=dataframe.result_date, y=dataframe[column_three],\n                        mode='lines+markers',name=column_three))\n    fig.update_layout(title={'text':title},\n                      xaxis_title='result_date',yaxis_title='COVID-19 Cases in SF',\n                      #legend_orientation=\"h\",\n                      showlegend=True)\n    fig.show()    ","7b853960":"tests = pd.read_csv('\/kaggle\/input\/san-francisco-covid19-data\/rows_4.csv')\ncases = pd.read_csv('\/kaggle\/input\/san-francisco-covid19-data\/rows_1.csv')\nhospitalizations = pd.read_csv('\/kaggle\/input\/san-francisco-covid19-data\/rows.csv')\nage_and_gender = pd.read_csv('\/kaggle\/input\/san-francisco-covid19-data\/rows_3.csv')\nrace_and_ethnicity = pd.read_csv('\/kaggle\/input\/san-francisco-covid19-data\/rows_2.csv')","48a5826a":"tests['pct'] = tests['pct']*100\ntests = tests.sort_values('result_date',ascending=True)\ntodays_date = '2020-04-26' ","0d370f07":"plot_three_columns_using_plotly_regular(tests,'tests','pos','pct','Percent and Number of COVID-19 Tests that are Positive')","6ee5cb69":"fig = px.bar(age_and_gender.sort_values('Age Group',ascending=True)[0:20], \n             x=\"Age Group\", \n             y=\"Confirmed Cases\",\n             color='Gender',\n             barmode='group',\n             title='COVID-19 Infections in SF as of '+todays_date)\nfig.show()","487631cf":"fig = px.bar(race_and_ethnicity.sort_values('Confirmed Cases',ascending=True)[0:20], \n             x=\"Race\", \n             y=\"Confirmed Cases\",\n             color='Ethnicity',\n             barmode='group',\n             title='COVID-19 Infections in SF as of '+todays_date)\nfig.show()","42287d17":"Step 4: Plot positive tests by age","ab416483":"# COVID-19 Cases in SF by Age, Race, and Gender","a44a085d":"Step 4: Plot positive tests by ethnicity","6d942e20":"Step 3: Plot percent of tests that are positive over time","2e331382":"Step 1: Import Python Modules and Define Helper Functions","35bbcb47":"Step 2: Load the data"}}