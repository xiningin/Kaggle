{"cell_type":{"33e86618":"code","30c54f6c":"code","7a83924e":"code","ebbc3460":"code","e58c76d8":"code","2f299cb5":"code","45a1c743":"code","7eadc231":"markdown","c4fce593":"markdown","1631e562":"markdown","f02cf4c3":"markdown","564bdcdd":"markdown","c579b35a":"markdown"},"source":{"33e86618":"import numpy as np\nimport pandas as pd\nx = list(range(10))\ny = np.exp(x)\nnotas = [[6, 400], [7, 1150], [8, 3000]]\nprint(pd.DataFrame({'x': x, 'y':y}))\n","30c54f6c":"import matplotlib.pyplot as plt","7a83924e":"plt.figure(figsize=(12, 6))\n\n\nplt.plot(x, y)\nplt.title('Usando matplotlib')\nplt.xlabel('eixo x')\nplt.ylabel('eixo y')\nfor i, v in enumerate(notas):\n  plt.annotate(f'Nota {i+1}', xy=(v[0], v[1]),\n              arrowprops=dict(arrowstyle='->'),\n              xytext=(v[0]-1.5, v[1]+200))\n\nplt.show()","ebbc3460":"import plotly.graph_objects as go\n\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x=x, y=y))\nfor i, v in enumerate(notas):\n  fig.add_annotation(x=v[0], y=v[1],\n              text=f\"Nota {i+1}\",\n              showarrow=True,\n              arrowhead=1)\n\nfig.update_layout(showlegend=False, template='plotly_white',\n                  title='Usando plotly', width=900, height=600)\n\nfig.show()","e58c76d8":"import seaborn as sns\n\nfig, ax = plt.subplots(figsize=(12, 8))\n\nsns.lineplot(x=x, y=y, ax=ax, palette='rocket').set_title('Usando seaborn')\nsns.set_theme(style=\"white\")\n\nfor i, v in enumerate(notas):\n  # plt.text(v[0], v[1], f'Nota {i+1}')\n  ax.annotate(f'Nota {i+1}', xy=(v[0], v[1]),\n              arrowprops={},\n              xytext=(v[0]-1.5, v[1]+200))\nplt.show()","2f299cb5":"from bokeh.models import ColumnDataSource, Label, LabelSet\nfrom bokeh.models import Arrow, NormalHead\nfrom bokeh.plotting import figure, show\nfrom bokeh.io import output_notebook\noutput_notebook()\n\n\np = figure(plot_width=800, plot_height=400,\n           title='Usando bokeh')\np.line(x, y)\nvx, vy, vt = [], [], []\nfor i, v in enumerate(notas):\n  vx.append(v[0]-1.5)\n  vy.append(v[1]+200)\n  vt.append(f'Nota {i+1}')\n  p.add_layout(Arrow(end=NormalHead(fill_color=\"lightblue\"),\n                     x_start=v[0]-0.75, \n                     y_start=v[1]+400, \n                     x_end=v[0], \n                     y_end=v[1]))\n\ndadosNotas = ColumnDataSource(data=dict(vx=vx, vy=vy, vt=vt))\nlabelNotas = LabelSet(x='vx', y='vy', text='vt',\n              x_offset=5, y_offset=5, source=dadosNotas, render_mode='canvas')\n\np.add_layout(labelNotas)\n\nshow(p)","45a1c743":"import altair as alt\n\ndf = pd.DataFrame({'x': x, 'y':y})\ndf['vt'] = ''\nfor i, v in enumerate(notas):\n  df.loc[v[0], 'vt'] = f'Nota {i+1}'\ndados = alt.Chart(df).mark_line(point=True).encode(\n    x='x', \n    y='y'\n)\n\ntextos = dados.mark_text(\n    align='left',\n    baseline='middle',\n    fontSize = 15,\n    dx = 7\n).encode(\n    x='x',\n    y='y',\n    text='vt'\n)\n\nalt.layer(dados, textos).configure_view(stroke='transparent').properties(\n    width=700,\n    height=300,\n    title='Usando altair'\n).configure_axis(\n    grid=False)\n","7eadc231":"# **Seaborn**","c4fce593":"# **Bokeh**","1631e562":"# **Altair**","f02cf4c3":"# **Creating charts with annotations**\n\n**Data ficticius**\n","564bdcdd":"# **Matplotlib**","c579b35a":"# **Plotly**"}}