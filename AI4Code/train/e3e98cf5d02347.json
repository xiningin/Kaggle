{"cell_type":{"e61213b5":"code","6b8e79ba":"code","09ad21cc":"code","ec6db104":"code","d2782f77":"code","06aab16d":"code","c6ec3af9":"code","60f067b6":"code","f5a6ebe0":"code","269f1988":"code","474c0442":"markdown","88203ace":"markdown","94e08814":"markdown"},"source":{"e61213b5":"#lets import the required libraries, pandas, numpy, matplotlib\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","6b8e79ba":"#load the dataset into variable called dataset and display the 5 rows of the dataset, and also print the shape of the dataset\ndataset = pd.read_csv('..\/input\/data-science-machine-learning-and-ai-using-python\/dataset.csv')\ndataset.head()","09ad21cc":"dataset.shape","ec6db104":"#fetch the headsize column and store it X, and Brainweight column to Y\nX = dataset['Head Size(cm^3)']\nY = dataset['Brain Weight(grams)']","d2782f77":"#find the mean of X and Y, and store it in x_mean and y_mean respectively, hint(for mean, use np.mean())\nx_mean = np.mean(X)\ny_mean = np.mean(Y)","06aab16d":"#find the total values of X\nn = len(X)","c6ec3af9":"#using the formula to calculate m and c\nnumerator = 0\ndenominator = 0\n\nfor i in range(n):\n  numerator += (X[i] - x_mean) * (Y[i] - y_mean)\n  denominator += (X[i] - x_mean) **2\n\nm = numerator \/ denominator\nc = y_mean - (m * x_mean)","60f067b6":"#plotting the values\nx_max = np.max(X)\nx_min = np.min(X)\n\n#lets calculate the line values of X and Y\nx = np.linspace(x_min, x_max, 1000, endpoint=True)\ny = c + m*x\n\n#lets plot the line \nplt.plot(x,y, color='g', label='Linear Regression')\n\n\n#lets plot the datapoints\nplt.scatter(X,Y, color='r', label='Data Points')\n\n\n#x-axis\nplt.xlabel('Head Size(cm^3)')\n\n#y-axis\nplt.ylabel('Brain Weight(grams)')\n\nplt.legend()\nplt.show()","f5a6ebe0":"#lets find the RMSE\nrmse = 0\nfor i in range(n):\n  y_pred = c + (m * X[i])\n  rmse += (Y[i] - y_pred) **2\n\nrmse = np.sqrt(rmse\/n)\nprint(\"Root Mean Square Error is: \",rmse)","269f1988":"#lets find the accuracy of our model\nsst = 0\nssr = 0\nfor i in range(n):\n  y_pred = c + (m * X[i])\n  sst += (Y[i] - y_mean) **2\n  ssr += (Y[i] - y_pred) **2\n\nscore = 1 - (ssr\/sst)\nprint(\"R^2 score is: \",score)","474c0442":"AS we have our linear model, let plot it graphically.","88203ace":"**Problem Statement**\n\nTo predict the relationship between headsize and brain weight","94e08814":"# **Day 8**\n\n**Linear Regression**\n\nIts a method used to find the relationship between dependent variable and independent variable."}}