{"cell_type":{"97a83070":"code","07988f71":"code","25262382":"code","bd3d1967":"code","041e329b":"code","5e37e36c":"code","d184fb09":"code","3b2dab08":"code","ed2957c2":"code","a7eb82de":"markdown","b1beed55":"markdown","71ae3315":"markdown","e55d83ae":"markdown","57f9759e":"markdown","dd50e9e2":"markdown","30daf684":"markdown","294aa730":"markdown","e37e554c":"markdown"},"source":{"97a83070":"import os\nimport datetime as dt\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","07988f71":"input_dir = \"..\/input\"\n\nemails = pd.read_csv(os.path.join(input_dir, 'emails.csv'))\nmatches = pd.read_csv(os.path.join(input_dir, 'matches.csv'))\n\nquestions = pd.read_csv(os.path.join(input_dir, 'questions.csv'))\nanswers = pd.read_csv(os.path.join(input_dir, 'answers.csv'))\n\nemails['emails_date_sent'] = pd.to_datetime(emails['emails_date_sent'])\nquestions['questions_date_added'] = pd.to_datetime(questions['questions_date_added'])\nanswers['answers_date_added'] = pd.to_datetime(answers['answers_date_added'])","25262382":"emails_matches = emails.merge(\n    matches, left_on='emails_id', right_on='matches_email_id')[\n    ['emails_date_sent', 'emails_frequency_level', 'emails_recipient_id', \n      'matches_question_id']]","bd3d1967":"questions_professionals = questions.merge(\n    emails_matches, left_on='questions_id', right_on='matches_question_id')[\n    ['questions_id','questions_author_id', 'questions_date_added', 'emails_recipient_id']]","041e329b":"questions_professionals_answers = questions_professionals.merge(\n    answers[['answers_question_id', 'answers_author_id']], \n    left_on='questions_id', right_on='answers_question_id', how='left')","5e37e36c":"negative_examples = questions_professionals_answers[\n    questions_professionals_answers['emails_recipient_id'] != \n    questions_professionals_answers['answers_author_id']]\n\nnegative_examples = negative_examples[\n    ['questions_id', 'questions_author_id', 'questions_date_added', 'emails_recipient_id']]\nnegative_examples = negative_examples.rename(columns={'emails_recipient_id': 'answer_user_id'})\nnegative_examples['matched'] = 0","d184fb09":"positive_examples = questions.merge(\n    answers, left_on='questions_id', right_on='answers_question_id', how='inner')[\n    ['questions_id', 'questions_author_id', 'questions_date_added', 'answers_author_id']]\npositive_examples = positive_examples.rename(columns={'answers_author_id': 'answer_user_id'})\npositive_examples['matched'] = 1","3b2dab08":"combined_examples = pd.concat([negative_examples, positive_examples], axis=0)\n\ncombined_examples = combined_examples.merge(emails_matches,\n                                            left_on=['answer_user_id', 'questions_id'],\n                                            right_on=['emails_recipient_id', 'matches_question_id'],\n                                            how='left')[['questions_date_added', 'questions_author_id', \n                                                         'questions_id', 'answer_user_id', 'emails_date_sent', 'matched']]","ed2957c2":"combined_examples = combined_examples.sort_values(\n    by=['questions_date_added', 'questions_author_id', 'questions_id', 'answer_user_id', 'emails_date_sent'])\ncombined_examples.to_parquet('positive_negative_examples.parquet.gzip', compression='gzip')","a7eb82de":" ### Saving the data set to a file for next processing steps ### ","b1beed55":"** Merging matches and questions gives us all questions and their corresponding recommendations generated by the current system. **","71ae3315":"# II. Joining Data Tables #","e55d83ae":"# I. Loading Relevant Data Tables #","57f9759e":"** Merging the above results further with questions and answers to have more information on students who ask the questions and on answers for the questions. **","dd50e9e2":"### Combining matched and unmatched data into a data set for supervised machine learning ###","30daf684":"### Creating unmatched data ###","294aa730":"# III. Creating Supervised Data for Matched and Unmatched Recommendations #","e37e554c":"### Creating matched data ###"}}