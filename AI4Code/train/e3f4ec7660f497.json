{"cell_type":{"c5c05200":"code","7fe6f0ba":"code","8008ab30":"code","11c4e787":"code","1fc76731":"code","41fa6150":"code","40b1bbb9":"markdown","c52461c4":"markdown","388fe62d":"markdown","7ff14b5b":"markdown"},"source":{"c5c05200":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score","7fe6f0ba":"data = pd.read_csv('----------\/diabetes.csv')\n\ndata_x= data.drop(labels=['Outcome'],axis=1,inplace=False)     \ndata_y=data['Outcome']   \n\nprint(data.isnull().sum())\nprint('\/'*15)\n\ncol = data.columns\n\ndiabetes_copy  = data.copy(deep = True)\n\ndiabetes_copy[['Glucose','BloodPressure','SkinThickness','Insulin',\n               'BMI']] = diabetes_copy[['Glucose','BloodPressure',\n                                             'SkinThickness','Insulin',\n                                             'BMI']].replace(0,np.NaN)\nprint(diabetes_copy.isna().sum())\nprint('\/'*15)","8008ab30":"diabetes_copy.hist(figsize=(25,25))\nplt.show()","11c4e787":"violin_col = data_x.columns\n    \nfor i in violin_col:\n    figure=plt.figure(figsize=(20,15))\n    sns.violinplot(x='Outcome',y=i,data=diabetes_copy)\n    plt.show()","1fc76731":"corr_Pearson = diabetes_copy.corr(method='pearson')\n\nfigure = plt.figure(figsize=(25,15))\nsns.heatmap(corr_Pearson,vmin=-1,vmax=+1,cmap='Blues',annot=True, \n            linewidths=1,linecolor = 'white')\nplt.title('Pearson Correlation')\nplt.show()","41fa6150":"data_x= data.drop(labels=['Outcome'],axis=1,inplace=False)\n\nx_train, x_test, y_train, y_test = train_test_split(data_x,data_y,\n                        test_size = 0.3, random_state = 44, shuffle = True)\n\n\nLogistic_R = LogisticRegression(solver=\"liblinear\").fit(x_train,y_train)\nDecision_Tree = DecisionTreeClassifier(random_state=44).fit(x_train,\n                                                            y_train)\n\n\nLogistic_R_Pre = Logistic_R.predict(x_test)\nlogis_accuracy = accuracy_score(y_test,Logistic_R_Pre)\n\nDecision_Tree_Pre = Decision_Tree.predict(x_test)\nTree_accuracy = accuracy_score(y_test,Decision_Tree_Pre)\n\nprint('Logistic Regression Model: ',round(logis_accuracy,2))\nprint('Decision Tree Model: ',round(Tree_accuracy,2))","40b1bbb9":"![Insulin.png](attachment:6ddf028c-ce33-465d-a038-27d0b3024ad5.png)![Pregnancies.png](attachment:52cebede-56a7-469c-8a3e-e83682838326.png)![SkinThickness.png](attachment:6b13dfb1-98dd-4ff2-ba66-287399c09b73.png)![Age.png](attachment:b92adce9-5536-452b-9e75-9bdb038dc8bf.png)![BloodPressure.png](attachment:2f78071d-0f28-4abb-bc8a-93f567292532.png)![BMI.png](attachment:3790efcb-5b75-4f53-ac45-5d195f9c18cb.png)![DiabetesPedigreeFunction.png](attachment:51c5039b-9501-4743-b4c0-322cc80dc521.png)![Glucose.png](attachment:dff2c075-0584-4734-9f39-63e70a97bce2.png)","c52461c4":"![cor.png](attachment:c660df08-3860-491f-a6fc-8366dec8453e.png)","388fe62d":"Logistic Regression Model:  0.78\nDecision Tree Model:  0.72","7ff14b5b":"![hist.png](attachment:4b55faa5-dd00-4440-af51-49ca1ab22028.png)"}}