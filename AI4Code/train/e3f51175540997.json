{"cell_type":{"d138a2a8":"code","8eef0b07":"code","bec43311":"code","078d12fa":"code","8f724e55":"code","1bad8b78":"code","42315690":"code","04a13fde":"code","da25469c":"code","94b67b63":"code","2d24305d":"code","86cf6de7":"code","31ce727f":"code","28973419":"code","92ec3e88":"code","368f59c6":"code","4d95fa86":"code","5b1ba800":"code","b83c9db1":"code","0c5e99e7":"code","f5ce5cda":"code","9037a4b5":"code","63eef288":"code","b8ca4fb2":"code","903378e1":"code","ebed3d2c":"code","d4902d0a":"code","5c86d0ca":"code","c998a0e3":"code","1a964ab3":"code","30101051":"code","946cd0d3":"code","cd7aeb05":"code","5b346b77":"code","1aeae039":"code","2fbe8304":"code","cc9b2f65":"code","68b146af":"code","85200a8a":"code","78985751":"code","59b57b69":"code","4ffe6f62":"code","4027cc82":"code","84e5a84c":"code","5f2dd1dd":"code","ed851cc5":"code","0f360e7a":"code","5216c6fe":"code","26f59d14":"code","fd24a532":"code","942aac05":"code","9034c7f0":"code","2d6dfde7":"code","a569183c":"code","329ba11e":"code","2c1b8697":"code","57ecd3f7":"code","123e389c":"code","9aaa646f":"code","2bfc2fbf":"code","541cc03c":"code","6cf81740":"code","78b2630e":"code","46cefab2":"code","00a5dbe2":"code","1fd1a399":"code","bdcfefdd":"code","396ece66":"code","449e143a":"code","2cc394f5":"code","e56a42e5":"code","dc6b131e":"code","e5d00373":"code","76a597ae":"code","66e166da":"code","d2bbd2cd":"code","7246b414":"code","2cff795c":"code","0c66e250":"code","30885810":"code","d12f9f15":"code","7ff42147":"code","44eba644":"code","6fb7f750":"code","7b0f43e7":"code","fe2036b0":"code","3e89a8ae":"code","2a23756e":"code","31cb7919":"code","26994601":"code","0afecee2":"code","3c398fff":"code","1c745e01":"code","27c9ae08":"code","9d98f9ac":"code","e40d7b7c":"code","8d22d156":"code","1837fbf9":"code","5ed3ccb5":"code","e3b1d3cb":"code","9e0fa54d":"code","e6960d8f":"code","d1dab8cc":"code","ef398c39":"code","f4023e8f":"code","c54fd3d2":"code","2727d308":"code","3898585f":"code","c385d1c7":"code","f80fbdc5":"code","877886d3":"code","aa13c114":"code","cd94b8fa":"code","ac47eaa2":"code","50f4dc78":"markdown","64eda7cd":"markdown","ffc24c0a":"markdown","ea0734b3":"markdown","67306718":"markdown","0190c087":"markdown","d374dca4":"markdown","fe44b9e0":"markdown","7ad67650":"markdown","b59b180b":"markdown","e880a9ba":"markdown","c53b0bd1":"markdown","07893bd0":"markdown","917e48ab":"markdown","e45b8832":"markdown","9812afba":"markdown","59ba5894":"markdown","c8f1f7da":"markdown","fd12564a":"markdown","73eaa47c":"markdown","eacfc5ee":"markdown","25fa459f":"markdown","1d5c3ae0":"markdown","422284d0":"markdown","ea523372":"markdown","df0338d3":"markdown","bf652787":"markdown","af4f0ca6":"markdown","52d98ee8":"markdown","72e57498":"markdown","bad55935":"markdown","e6a5a2c0":"markdown"},"source":{"d138a2a8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8eef0b07":"# A base de treino ser\u00e1 chamada de df\ndf = pd.read_csv('..\/input\/train.csv')\ndf.head()","bec43311":"test = pd.read_csv('..\/input\/test.csv')\ntrain = pd.read_csv('..\/input\/train.csv')","078d12fa":"df = pd.concat([test,train])","8f724e55":"df['codigo_mun'] = df['codigo_mun'].apply(lambda x: x.replace('ID_ID_', ''))","1bad8b78":"df['codigo_mun'] = df['codigo_mun'].values.astype('int64')","42315690":"df['area'] = df['area'].apply(lambda x: x.replace(',', ''))","04a13fde":"df['area'] = df['area'].values.astype('float64')","da25469c":"#retorna (n row, n col)\ndf.shape","94b67b63":"#Retorna informa\u00e7\u00f5es do dataset\ndf.info()","2d24305d":"#Retorna estat\u00edsticas descritivas para as vari\u00e1veis quantitativas\ndf.describe()","86cf6de7":"# Retorna a soma dos valores nulos em cada coluna\ndf.isnull().sum()\n\n# As seguintes vari\u00e1veis possuem valores nulos\n# densidade_dem, participacao_transf_receita, servidores, perc_pop_econ_ativa gasto_pc_saude, \n# hab_p_medico,exp_vida, gasto_pc_educacao, exp_anos_estudo  \n","31ce727f":"#Retorna o tipo de vari\u00e1vel de cada coluna\ndf.dtypes","28973419":"# M\u00e9dia da participa\u00e7\u00e3o transferencia receita por porte\ndf.groupby('porte').participacao_transf_receita.mean()  ","92ec3e88":"# M\u00e9dia da participa\u00e7\u00e3o transferencia receita por regiao\ndf.groupby('regiao').participacao_transf_receita.mean()  ","368f59c6":"sns.boxplot(y='participacao_transf_receita', x = 'porte', data=df)","4d95fa86":"## Quanto maior o porte, menor a participa\u00e7\u00e3o_transf_receita","5b1ba800":"# Mostra a distribui\u00e7\u00e3o de municipios por porte\ndf['porte'].value_counts()","b83c9db1":"# M\u00e9dia da participa\u00e7\u00e3o transferencia receita por porte\nsns.boxplot(y='servidores', x = 'porte', data=df)","0c5e99e7":"df.groupby('porte').servidores.median()  ","f5ce5cda":"df.groupby('porte').servidores.mean()  ","9037a4b5":"df.groupby('porte').gasto_pc_saude.mean()    ","63eef288":"df.groupby('regiao').gasto_pc_saude.mean()    ","b8ca4fb2":"sns.boxplot(y='gasto_pc_saude', x = 'regiao', data=df)","903378e1":"sns.boxplot(y='gasto_pc_saude', x = 'porte', data=df)","ebed3d2c":"df.groupby('porte').hab_p_medico.mean()   ","d4902d0a":"df.groupby('regiao').hab_p_medico.mean()   ","5c86d0ca":"df.groupby('capital').hab_p_medico.mean()   ","c998a0e3":"sns.boxplot(y='hab_p_medico', x = 'porte', data=df)","1a964ab3":"sns.boxplot(y='hab_p_medico', x = 'regiao', data=df)","30101051":"df.groupby('porte').gasto_pc_educacao.mean()    ","946cd0d3":"df.groupby('regiao').gasto_pc_educacao.mean()    ","cd7aeb05":"df.groupby('porte').gasto_pc_educacao.median()    ","5b346b77":"df.groupby('regiao').gasto_pc_educacao.median()   ","1aeae039":"sns.boxplot(y='gasto_pc_educacao', x = 'regiao', data=df)","2fbe8304":"sns.boxplot(y='gasto_pc_educacao', x = 'porte', data=df)","cc9b2f65":"df.groupby('porte').idhm.mean()    ","68b146af":"df.groupby('regiao').idhm.mean()  ","85200a8a":"sns.boxplot(y='idhm', x = 'regiao', data=df)","78985751":"df.corr()","59b57b69":"plt.scatter('nota_mat', 'idhm', data = df)","4ffe6f62":"plt.scatter('nota_mat', 'anos_estudo_empreendedor', data = df)","4027cc82":"plt.scatter('nota_mat', 'perc_pop_econ_ativa', data = df)","84e5a84c":"plt.scatter('nota_mat', 'exp_vida', data = df)","5f2dd1dd":"# Categorizar a vari\u00e1vel 'Regiao'\ndf['regiao'].head()\ndf['regiao'].astype('category').cat.codes.value_counts()","ed851cc5":"#Criando uma fun\u00e7\u00e3o para transformar todas as colunas que tem tipo objeto\ndef transf_num(df):\n    for i in df.columns:\n        if df[i].dtypes == 'object':\n         df[i] = df[i].astype('category').cat.codes","0f360e7a":"transf_num(df)\ndf.dtypes","5216c6fe":"## Criando c\u00f3pias dos bancos de dados para realizar as diferentes abordagens ##\ndf1 = df.copy()\ndf2 = df.copy()\ndf3 = df.copy()","26f59d14":"## sempre que convertemos uma coluna de letras para n\u00fameros ele muitas vezes assume o valor -1\n## utilizaremos a transforma\u00e7\u00e3o em -2 para n\u00e3o confundir as informa\u00e7\u00f5es\ndf1.min().min()","fd24a532":"#substituindo os valores nulos por -2 saberemos exatamente quais os valores eram nulos,\n#e os valores 'nulos' estar\u00e3o fora do range do modelo que iremos construir\ndf1.fillna(-2, inplace=True)\ndf1.head()\ndf1.isnull().sum()","942aac05":"df1.corr()","9034c7f0":"#Criar histograma da vari\u00e1vel nota_mat\ndf1['nota_mat'].hist()","2d6dfde7":"df1['nota_mat'].plot.box()","a569183c":"import matplotlib.pyplot as plt\nimport seaborn as sns","329ba11e":"removed_cols = ['Unnamed: 0', 'codigo_mun', 'nota_ciencias', 'nota_humanas', 'nota_linguagem',\n               'nota_mat', 'nota_redacao']\nfeats1 = [c for c in df1.columns if c not in removed_cols]","2c1b8697":"from sklearn.model_selection import train_test_split","57ecd3f7":"train1, valid1 = train_test_split(df1, random_state=42)","123e389c":"train1.shape, valid1.shape","9aaa646f":"from sklearn.ensemble import RandomForestRegressor","2bfc2fbf":"rf = RandomForestRegressor(random_state=42)","541cc03c":"rf.fit(train1[feats1], train1['nota_mat'])","6cf81740":"from sklearn.metrics import mean_squared_error","78b2630e":"mean_squared_error(rf.predict(valid1[feats1]), valid1['nota_mat'])**(1\/2)","46cefab2":"rf = RandomForestRegressor(random_state=42, n_estimators=100, max_features=0.8)","00a5dbe2":"#padr\u00e3o do numero de \u00e1rvores\n#ao alterar a semente \u00e9 normal o erro mudar pq muda a amostra. Mas ganhos pequenos s\u00e3o aleat\u00f3rios \nrf.fit(train1[feats1], train1['nota_mat'])\nmean_squared_error(rf.predict(valid1[feats1]),valid1['nota_mat'])**(1\/2)","1fd1a399":"#Verifica quais os crit\u00e9rios mais import\u00e3ntes utlizados pelo modelo para a tomada de decis\u00e3o\npd.Series(rf.feature_importances_, index=feats1).sort_values().plot.barh()","bdcfefdd":"df2.fillna(-1000, inplace=True)\ndf2.head()\ndf2.isnull().sum()","396ece66":"removed_cols = ['Unnamed: 0', 'codigo_mun', 'nota_ciencias', 'nota_humanas', 'nota_linguagem',\n               'nota_mat', 'nota_redacao']\nfeats2 = [c for c in df2.columns if c not in removed_cols]","449e143a":"train2, valid2 = train_test_split(df2, random_state=42)","2cc394f5":"train1.shape, valid1.shape","e56a42e5":"rf.fit(train2[feats2], train2['nota_mat'])","dc6b131e":"mean_squared_error(rf.predict(valid2[feats2]), valid2['nota_mat'])**(1\/2)","e5d00373":"rf = RandomForestRegressor(random_state=42, n_jobs= -1, max_features = 18, max_depth = 20, n_estimators = 100)","76a597ae":"#padr\u00e3o do numero de \u00e1rvores\n#ao alterar a semente \u00e9 normal o erro mudar pq muda a amostra. Mas ganhos pequenos s\u00e3o aleat\u00f3rios \nrf.fit(train2[feats2], train2['nota_mat'])\nmean_squared_error(rf.predict(valid2[feats2]),valid2['nota_mat'])**(1\/2)","66e166da":"#Verifica quais os crit\u00e9rios mais import\u00e3ntes utlizados pelo modelo para a tomada de decis\u00e3o\npd.Series(rf.feature_importances_, index=feats1).sort_values().plot.barh()","d2bbd2cd":"## Rodando novamente estes comandos apenas por conta da categoriza\u00e7\u00e3o\ndf = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')\ntrain = pd.read_csv('..\/input\/train.csv')\ndf = pd.concat([test,train])\ndf['codigo_mun'] = df['codigo_mun'].apply(lambda x: x.replace('ID_ID_', ''))\ndf['codigo_mun'] = df['codigo_mun'].values.astype('int64')\ndf['area'] = df['area'].apply(lambda x: x.replace(',', ''))\ndf['area'] = df['area'].values.astype('float64')\ndf3 = df.copy()","7246b414":"# A vari\u00e1vel ranking IGM e indice_governanca oculta os valores outliers utilizando valores nulos, dessa forma utilizaremos um valor\n# extremo para preencher seus valores nulos\ndf3['ranking_igm'].fillna(-1000, inplace=True)\ndf3['indice_governanca'].fillna(-1000, inplace=True)\ndf3.isnull().sum()","2cff795c":"## A vari\u00e1vel servidores possui 131 valores nulos, estes iremos tratar utilizando a m\u00e9dia de servidores\n## baseada no porte do munic\u00edpio\n","0c66e250":"# Mostra a distribui\u00e7\u00e3o de municipios por porte\ndf3['porte'].value_counts()","30885810":"# M\u00e9dia de servidores por porte de municipio\ndf3.groupby('porte').servidores.mean()        ","d12f9f15":"df3.groupby('porte').servidores.mean().plot.bar()","7ff42147":"## Segmentando df3 nos 4 tipos de porte para realizar a imputa\u00e7\u00e3o\npequeno_1 = df3[df3['porte']== 'Pequeno porte 1']\npequeno_2 = df3[df3['porte']== 'Pequeno porte 2']\nmedio = df3[df3['porte']== 'M\u00e9dio porte']\ngrande = df3[df3['porte']== 'Grande porte']","44eba644":"## Preenchendo os valores nulos da vari\u00e1vel servidores com a mediana de cada porte\npequeno_1['servidores'].fillna(pequeno_1['servidores'].median(), inplace=True)\npequeno_1['participacao_transf_receita'].fillna(pequeno_1['participacao_transf_receita'].mean(), inplace=True)","6fb7f750":"grande['servidores'].median()","7b0f43e7":"pequeno_2['servidores'].fillna(pequeno_2['servidores'].median(), inplace=True)\npequeno_2['participacao_transf_receita'].fillna(pequeno_2['participacao_transf_receita'].mean(), inplace=True)","fe2036b0":"medio['servidores'].fillna(medio['servidores'].median(), inplace=True)\nmedio['participacao_transf_receita'].fillna(medio['participacao_transf_receita'].mean(), inplace=True)","3e89a8ae":"grande['servidores'].fillna(grande['servidores'].median(), inplace=True)\ngrande['participacao_transf_receita'].fillna(grande['participacao_transf_receita'].mean(), inplace=True)","2a23756e":"## juntando novamente as 4 bases no df3\ndf3 = pd.concat([pequeno_1,pequeno_2,medio, grande])\ndf3.isnull().sum()","31cb7919":"## Segmentando df3 nos 5 tipos de regi\u00e3o para realizar a imputa\u00e7\u00e3o\nCENTRO_OESTE = df3[df3['regiao']== 'CENTRO-OESTE']\nNORDESTE = df3[df3['regiao']== 'NORDESTE']\nNORTE = df3[df3['regiao']== 'NORTE']\nSUDESTE = df3[df3['regiao']== 'SUDESTE']\nSUL = df3[df3['regiao']== 'SUL']","26994601":"## Preenchendo os valores nulos da vari\u00e1vel servidores com a mediana de cada porte\nCENTRO_OESTE['gasto_pc_educacao'].fillna(CENTRO_OESTE['gasto_pc_educacao'].mean(), inplace=True)\nCENTRO_OESTE['gasto_pc_saude'].fillna(CENTRO_OESTE['gasto_pc_saude'].mean(), inplace=True)\nCENTRO_OESTE['idhm'].fillna(CENTRO_OESTE['idhm'].mean(), inplace=True)\nCENTRO_OESTE['hab_p_medico'].fillna(CENTRO_OESTE['hab_p_medico'].mean(), inplace=True)\n","0afecee2":"## Preenchendo os valores nulos da vari\u00e1vel servidores com a mediana de cada porte\nNORDESTE['gasto_pc_educacao'].fillna(NORDESTE['gasto_pc_educacao'].mean(), inplace=True)\nNORDESTE['gasto_pc_saude'].fillna(NORDESTE['gasto_pc_saude'].mean(), inplace=True)\nNORDESTE['idhm'].fillna(NORDESTE['idhm'].mean(), inplace=True)\nNORDESTE['hab_p_medico'].fillna(NORDESTE['hab_p_medico'].mean(), inplace=True)","3c398fff":"NORTE['gasto_pc_educacao'].fillna(NORTE['gasto_pc_educacao'].mean(), inplace=True)\nNORTE['gasto_pc_saude'].fillna(NORTE['gasto_pc_saude'].mean(), inplace=True)\nNORTE['idhm'].fillna(NORTE['idhm'].mean(), inplace=True)\nNORTE['hab_p_medico'].fillna(NORTE['hab_p_medico'].mean(), inplace=True)","1c745e01":"SUDESTE['gasto_pc_educacao'].fillna(SUDESTE['gasto_pc_educacao'].mean(), inplace=True)\nSUDESTE['gasto_pc_saude'].fillna(SUDESTE['gasto_pc_saude'].mean(), inplace=True)\nSUDESTE['idhm'].fillna(SUDESTE['idhm'].mean(), inplace=True)\nSUDESTE['hab_p_medico'].fillna(SUDESTE['hab_p_medico'].mean(), inplace=True)","27c9ae08":"SUL['gasto_pc_educacao'].fillna(SUL['gasto_pc_educacao'].mean(), inplace=True)\nSUL['gasto_pc_saude'].fillna(SUL['gasto_pc_saude'].mean(), inplace=True)\nSUL['idhm'].fillna(SUL['idhm'].mean(), inplace=True)\nSUL['hab_p_medico'].fillna(SUL['hab_p_medico'].mean(), inplace=True)","9d98f9ac":"## juntando novamente as 4 bases no df3\ndf3 = pd.concat([CENTRO_OESTE,NORDESTE,NORTE, SUDESTE, SUL])\ndf3.isnull().sum()","e40d7b7c":"# Categorizar a vari\u00e1vel 'Regiao'\ndf3['regiao'].head()\ndf3['regiao'].astype('category').cat.codes.value_counts()","8d22d156":"#Criando uma fun\u00e7\u00e3o para transformar todas as colunas que tem tipo objeto\ndef transf_num(df3):\n    for i in df3.columns:\n        if df3[i].dtypes == 'object':\n         df3[i] = df3[i].astype('category').cat.codes","1837fbf9":"transf_num(df3)\ndf3.dtypes","5ed3ccb5":"#Preenchendo os valores nulos restantes com -suas respectivas m\u00e9dias\ndf3['densidade_dem'].fillna(df3['densidade_dem'].mean(), inplace=True)\ndf3['exp_vida'].fillna(df3['exp_vida'].mean(), inplace=True)\ndf3['exp_anos_estudo'].fillna(df3['exp_anos_estudo'].mean(), inplace=True)\ndf3['perc_pop_econ_ativa'].fillna(df3['perc_pop_econ_ativa'].mean(), inplace=True)\ndf3.head()\ndf3.isnull().sum()","e3b1d3cb":"#substituindo os valores nulos por -2 saberemos exatamente quais os valores eram nulos,\n#e os valores 'nulos' estar\u00e3o fora do range do modelo que iremos construir\ndf3.fillna(-2, inplace=True)\ndf3.head()\ndf3.isnull().sum()","9e0fa54d":"test = df3[df3['nota_mat']== -2]\ndf3 = df3[df3['nota_mat']!= -2]","e6960d8f":"test.head()\n","d1dab8cc":"test.shape","ef398c39":"df3.head()","f4023e8f":"df3.shape","c54fd3d2":"removed_cols = ['Unnamed: 0', 'codigo_mun', 'nota_ciencias', 'nota_humanas', 'nota_linguagem',\n               'nota_mat', 'nota_redacao']\nfeats3 = [c for c in df3.columns if c not in removed_cols]","2727d308":"from sklearn.model_selection import train_test_split\ntrain3, valid3 = train_test_split(df3, random_state=42)","3898585f":"train3.shape, valid3.shape","c385d1c7":"from sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor(random_state=42, n_jobs= -1, max_features = 18, max_depth = 20, n_estimators = 100)\nrf.fit(train3[feats3], train3['nota_mat'])","f80fbdc5":"from sklearn.metrics import mean_squared_error\nmean_squared_error(rf.predict(valid3[feats3]), valid3['nota_mat'])**(1\/2)","877886d3":"#padr\u00e3o do numero de \u00e1rvores\n#ao alterar a semente \u00e9 normal o erro mudar pq muda a amostra. Mas ganhos pequenos s\u00e3o aleat\u00f3rios \nrf.fit(train3[feats3], train3['nota_mat'])\nmean_squared_error(rf.predict(valid3[feats3]),valid3['nota_mat'])**(1\/2)","aa13c114":"#Verifica quais os crit\u00e9rios mais import\u00e3ntes utlizados pelo modelo para a tomada de decis\u00e3o\npd.Series(rf.feature_importances_, index=feats3).sort_values().plot.barh()","cd94b8fa":"test['nota_mat'] = rf.predict(test[feats3])","ac47eaa2":"test[['codigo_mun','nota_mat']].to_csv('kalyxton.csv', index=False)","50f4dc78":"Nesta abordagem iremos tratar de maneira espec\u00edfica os valores nulos de cada vari\u00e1vel, utilizando como base a an\u00e1ise descritiva feita inicialmente\nDesta maneira, os crit\u00e9rios de imputa\u00e7\u00e3o ser\u00e3o os seguintes:","64eda7cd":"**Avaliando correla\u00e7\u00f5es entre as vari\u00e1veis**","ffc24c0a":"**AVALIANDO AS VARI\u00c1VEIS COM VALORES NULOS**","ea0734b3":"**AN\u00c1LISES DESCRITIVAS**","67306718":"Comparando as estat\u00edsticas descritivas da vari\u00e1vel gasto_pc_saude quando categorizadas, tanto em porte e em regi\u00e3o, foi possivel identificar que o comportamento das duas categorias n\u00e3o apresentou muita diferen\u00e7a quanto a distribuicao de outliers. J\u00e1 quanto as medias de cada categoria, a categorizacao em regioes faz mais sentido.","0190c087":"Transforma\u00e7\u00e3o de Vari\u00e1veis:","d374dca4":"O boxplot acima mostra uma grande quantidade de outliers referente \u00e4 variavel servidores quando categorizadas quanto ao porte","fe44b9e0":"*** Abordadagem 2 - Preencher os valores nulos com -1000 ***","7ad67650":"**Participa\u00e7\u00e3o Transferencia Receita**","b59b180b":"**IDHM**","e880a9ba":"Juntar os 2 DataFrames em uma \u00fanica vari\u00e1vel","c53b0bd1":"* Preencher Valores em Branco\n* Ser\u00e3o feitas algumas abordagens de como lidar com os dados faltantes\n","07893bd0":"N\u00e3o h\u00e1 grande diferen\u00e7a de distribui\u00e7\u00e3o de habitantes por m\u00e9dico quanto a regi\u00e3o e porte. Entretanto, a m\u00e9dia por regi\u00e3o mostra uma separa\u00e7ao mais l\u00f3gica do que a proporta pelas m\u00e9dias por porte.","917e48ab":"**Servidores**","e45b8832":"**HABITANTES POR M\u00c9DICO**","9812afba":"**Separar as bases de volta em test e df**","59ba5894":"Selecionando as Colunas que Iremos Executar o Modelo","c8f1f7da":"**Instanciando o Modelo**","fd12564a":"Selecionando as Colunas que Iremos Executar o Modelo","73eaa47c":"Fazendo previs\u00f5es","eacfc5ee":"**ENVIANDO AS PREVIS\u00d5ES**","25fa459f":"*** Regras de Imputa\u00e7\u00e3o ***\n\n** Por Porte **\n    Servidores (mediana)\n    Participacao_transf_receita (m\u00e9dia)\n    \n** Por Regi\u00e3o **\n    gasto_pc_educacao (m\u00e9dia)\n    gasto_pc_saude (m\u00e9dia)\n    idhm (m\u00e9dia)\n    hab_p_medico (m\u00e9dia)\n  \n** Por Valores Extremos (-1000) **\n    ranking_igm\n    indice_governanca","1d5c3ae0":" ** Abordadagem 1 - Preencher os valores nulos com -2 **","422284d0":"**GASTO PER CAPITA COM SAUDE**","ea523372":"Embora seja poss\u00edvel observar alguns outliers na distribui\u00e7ao de gasto per capita, tanto por porte quanto por regi\u00e3o, estes valores extremos influenciam pouco as m\u00e9dias por categoria.","df0338d3":"**GASTO PER CAPITA COM EDUCA\u00c7\u00c3O**","bf652787":"**CRIAR O CONJUNTO TREINO E VALIDA\u00c7\u00c3O**","af4f0ca6":"**RANKING IGM** \/ \n**INDICE GOVERNAN\u00c7A**","52d98ee8":"*** Segmentando Por REGI\u00d5ES ***","72e57498":"**** Abordadagem 3 - Preencher os valores nulos de maneira espec\u00edfica *****","bad55935":"Essas vari\u00e1veis omitiram os valores considerados outliers, este \u00e9 o motivo de haver tantos valores nulos.","e6a5a2c0":"**Vari\u00e1veis com maiores correla\u00e7\u00f5es lineares com nota_mat**\n\n1.  idhm 0.7730\n2. anos_estudo_empreendedor 0.7068\n3. perc_pop_eco_ativa 0.7062\n4. exp_vida 0.7038\n"}}