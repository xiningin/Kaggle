{"cell_type":{"4aedc709":"code","51617de4":"code","89f4825a":"code","19d283a0":"code","0403c099":"code","e1fb2bd5":"code","f5676bb2":"code","81622d1a":"code","c8be0999":"code","08ab6cfd":"code","9401f322":"code","13fd31f9":"code","ab4bb9a2":"code","90a42648":"code","6facc736":"code","ed4f05ad":"code","b3c33cb0":"code","bf178f90":"code","9476726d":"code","e88f5265":"code","d054e8cf":"code","871e2d60":"code","3bd3f9ab":"code","f253c770":"code","85c3635d":"code","c6a1c239":"code","c68ce92b":"code","e8371ae3":"code","f8a0da83":"code","8f9129a8":"code","2d65b9dc":"code","d2558dc3":"code","2212d5c0":"code","fd9769a0":"code","88e4cb87":"code","0a5b90e9":"code","f4fb7459":"code","a06d9e3b":"code","1ce1f85d":"code","97ab0229":"code","d65dc275":"code","8923eb6a":"code","53bf1188":"code","30884147":"code","bccf69f7":"code","51688db6":"code","67f34190":"markdown","6f8b1f95":"markdown","77040aa3":"markdown"},"source":{"4aedc709":"import numpy as np\nimport pandas as pd","51617de4":"data = pd.read_csv(\"..\/input\/water-water-everywhere-not-a-drop-to-drink\/train.csv\")\ntest = pd.read_csv(\"..\/input\/water-water-everywhere-not-a-drop-to-drink\/test.csv\")\nsubmission = pd.read_csv(\"..\/input\/water-water-everywhere-not-a-drop-to-drink\/sample_submission.csv\")","89f4825a":"data.shape\n","19d283a0":"data.head()","0403c099":"data.columns","e1fb2bd5":"data.describe(include='object')","f5676bb2":"y = data['result']\ndata = data.drop(['result'],axis = 1)","81622d1a":"data = data.drop(['id'],axis = 1)","c8be0999":"cat = (data.dtypes == 'object')\nobject_cols = list(cat[cat].index)\n","08ab6cfd":"print(\"Categorical variables are:\")\nprint(object_cols)\n","9401f322":"cat_data = data[object_cols]\n\ntest_cat_data = test[object_cols]","13fd31f9":"cat_data.head()","ab4bb9a2":"from sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ncat_data['categoryA'] = label_encoder.fit_transform(cat_data['categoryA'])\ncat_data['categoryC'] = label_encoder.fit_transform(cat_data['categoryC'])\ncat_data['categoryE'] = label_encoder.fit_transform(cat_data['categoryE'])\ncat_data['unit'] = label_encoder.fit_transform(cat_data['unit'])\n\ntest_cat_data['categoryA'] = label_encoder.fit_transform(test_cat_data['categoryA'])\ntest_cat_data['categoryC'] = label_encoder.fit_transform(test_cat_data['categoryC'])\ntest_cat_data['categoryE'] = label_encoder.fit_transform(test_cat_data['categoryE'])\ntest_cat_data['unit'] = label_encoder.fit_transform(test_cat_data['unit'])","90a42648":"cat_data.head()","6facc736":"cat_data.shape","ed4f05ad":"cat_data = pd.get_dummies(cat_data,columns=['categoryB','categoryD','categoryF'])\n\ntest_cat_data = pd.get_dummies(test_cat_data,columns=['categoryB','categoryD','categoryF'])","b3c33cb0":"cat_data.shape","bf178f90":"test_cat_data.shape","9476726d":"cat_data.head()","e88f5265":"test_cat_data.head()","d054e8cf":"num_data = data.select_dtypes(exclude=['object'])\ntest_num_data = test.select_dtypes(exclude=['object'])","871e2d60":"num_data.head()","3bd3f9ab":"new_data = pd.concat([num_data,cat_data],axis=1)\n\ntest_new_data = pd.concat([test_num_data,test_cat_data],axis=1)","f253c770":"new_data.head()","85c3635d":"test_new_data.head()","c6a1c239":"print(new_data.isnull().sum())","c68ce92b":"null_columns = new_data.columns[new_data.isnull().any()]\n\ntest_null_columns = test_new_data.columns[test_new_data.isnull().any()]","e8371ae3":"for col in null_columns:\n    new_data[col].fillna(value=new_data[col].mean(), inplace=True)\n    \nfor test_col in test_null_columns:\n    test_new_data[test_col].fillna(value=test_new_data[test_col].mean(), inplace=True)","f8a0da83":"print(new_data.isnull().sum())","8f9129a8":"print(test_new_data.isnull().sum())","2d65b9dc":"# correleation\ncorr_new_data = pd.concat([new_data,y],axis=1)","d2558dc3":"\nfeatures = new_data.columns.tolist()\ntarget = y.name\n\n","2212d5c0":"from scipy.stats import pearsonr\ncorrelations = {}\nfor f in features:\n    data_temp = corr_new_data[[f,target]]\n    x1 = data_temp[f].values\n    x2 = data_temp[target].values\n    key = f + ' vs ' + target\n    correlations[key] = pearsonr(x1,x2)[0]","fd9769a0":"data_correlations = pd.DataFrame(correlations, index=['Value']).T\ndata_correlations.loc[data_correlations['Value'].abs().sort_values(ascending=False).index]","88e4cb87":"new_data = new_data.drop(['categoryF_catF_0','categoryE','categoryD_catD_2','featureB','categoryF_catF_1','compositionB','categoryC'],axis = 1)\ntest_new_data = test_new_data.drop(['categoryF_catF_0','categoryE','categoryD_catD_2','featureB','categoryF_catF_1','compositionB','categoryC'],axis = 1)","0a5b90e9":"new_data","f4fb7459":"from sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\n# poly_dict = {}\n# for feature in X.columns:\n#     for p in range(2, 5):\n#         X_train_poly = X\n#         X_train_poly['sq'] = X_train_poly[feature] ** p\n#         lr = LinearRegression()\n#         lr.fit(X_train_poly, y)\n#         poly_dict[lr.score(X_train_poly, y)] = [feature, p]\n    \n# poly_dict[max(poly_dict.keys())]","a06d9e3b":"# X['categoryA_cube'] = X['categoryA']**3\n# test_new_data['categoryA_cube'] = test_new_data['categoryA']**3","1ce1f85d":"# X.drop('sq', axis = 1, inplace = True)","97ab0229":"X_train, X_test, y_train, y_test = train_test_split(new_data, y, test_size = 0.25)","d65dc275":"np.any(np.isnan(test_new_data))","8923eb6a":"np.all(np.isfinite(test_new_data))\n","53bf1188":"test_new_data.replace([np.inf, -np.inf], np.nan, inplace=True)","30884147":"model = LinearRegression()\n  \nmodel.fit(X_train, y_train)","bccf69f7":"test_preds = model.predict(test_new_data)","51688db6":"output = pd.DataFrame({'id': test.id,\n                     'result': test_preds})\noutput.to_csv('water_quality_submission.csv', index=False)","67f34190":"### Competition : Water, water everywhere, not a drop to drink!\n#### Kaggle Days Meet Up - 2\n","6f8b1f95":"# Water Quality Prediction","77040aa3":"### I hope you liked my notebook"}}