{"cell_type":{"6ba39b1b":"code","ac78ef95":"code","9f8dd482":"code","cf6ef3c7":"code","354adc51":"code","b7c03866":"code","83a2c88d":"code","7d4c8418":"code","f4be595f":"code","e80c424c":"code","c12b8cb0":"code","35bd830d":"code","b34f165c":"code","e7de6510":"code","bb9f0386":"code","4eb212ce":"code","cda7df49":"code","883592ed":"code","b24f1a51":"code","65b6181e":"code","7141dca7":"code","dd50a180":"code","74821dd6":"code","cb743826":"code","65e7cc87":"code","558e0ef0":"code","b99dcd9e":"code","ac7f9d9b":"code","9f2cb6d5":"code","c9ad4e51":"code","2b1ebf5b":"code","bdd3c373":"code","0dbc43f1":"code","bb1051ca":"code","6f8d607c":"code","842e4806":"code","9df652d6":"code","919ad2c5":"code","baee2c77":"code","1a43a142":"code","3798af67":"code","8bcdb0fa":"code","c6ebd6ed":"markdown","2e1ff3d9":"markdown","9dbfa0f6":"markdown","ccaa785d":"markdown","e0d5f2c4":"markdown","75792079":"markdown","36440db3":"markdown","a2145dc2":"markdown","7ab643b5":"markdown","80e76ff2":"markdown","36b33ba5":"markdown"},"source":{"6ba39b1b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import *\nimport datetime as dt\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ac78ef95":"df_train = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/test.csv')\ndf_train.date_time = df_train.date_time.astype('datetime64[ns]')\ndf_test.date_time = df_test.date_time.astype('datetime64[ns]')","9f8dd482":"df_train","cf6ef3c7":"df_test","354adc51":"df_train.describe().T","b7c03866":"print(df_train.target_carbon_monoxide.value_counts())\nprint(df_train.target_benzene.value_counts())\nprint(df_train.target_nitrogen_oxides.value_counts())\n","83a2c88d":"df_train['year'] = df_train.date_time.dt.year\ndf_train['month'] = df_train.date_time.dt.month\ndf_train['day'] = df_train.date_time.dt.day\ndf_train['week_day'] = df_train.date_time.dt.weekday\ndf_train['hour'] = df_train.date_time.dt.hour\ndf_train\n\ndf_test['year'] = df_test.date_time.dt.year\ndf_test['month'] = df_test.date_time.dt.month\ndf_test['day'] = df_test.date_time.dt.day\ndf_test['week_day'] = df_test.date_time.dt.weekday\ndf_test['hour'] = df_test.date_time.dt.hour","7d4c8418":"df_list = []\nfor i in range(1,30):\n    df = df_train[(df_train.month == 12) & (df_train.day == i)]\n    df_list.append(df)\n\ndf_list[0].head()","f4be595f":"fig, ax = plt.subplots(6, 5,figsize=(16.0, 12.0))\n\nfor i in range(0,29):\n    plt.subplot(6,5,i+1)\n    ax[i\/\/5][i-(i\/\/5)*5].plot(df_list[i].hour,df_list[i].target_carbon_monoxide)\n    ax[i\/\/5][i-(i\/\/5)*5].set_title(str(df_list[i].month.iloc[0]) + '-' + str(df_list[i].day.iloc[0]))\n\nplt.show()","e80c424c":"fig, ax = plt.subplots(6, 5,figsize=(16.0, 12.0))\n\nfor i in range(0,29):\n    plt.subplot(6,5,i+1)\n    ax[i\/\/5][i-(i\/\/5)*5].plot(df_list[i].hour,df_list[i].target_benzene)\n    ax[i\/\/5][i-(i\/\/5)*5].set_title(str(df_list[i].month.iloc[0]) + '-' + str(df_list[i].day.iloc[0]))\n\nplt.show()","c12b8cb0":"fig, ax = plt.subplots(6, 5,figsize=(16.0, 12.0))\n\nfor i in range(0,29):\n    plt.subplot(6,5,i+1)\n    ax[i\/\/5][i-(i\/\/5)*5].plot(df_list[i].hour,df_list[i].target_nitrogen_oxides)\n    ax[i\/\/5][i-(i\/\/5)*5].set_title(str(df_list[i].month.iloc[0]) + '-' + str(df_list[i].day.iloc[0]))\n\nplt.show()","35bd830d":"df_day = df_train.groupby('week_day').mean()\ndf_day.head()","b34f165c":"plt.plot(df_day.index,df_day.target_carbon_monoxide)\nplt.title('target_carbon_monoxide')\nplt.show()\n\nplt.plot(df_day.index,df_day.target_benzene)\nplt.title('target_benzene')\nplt.show()\n\nplt.plot(df_day.index,df_day.target_nitrogen_oxides)\nplt.title('target_nitrogen_oxides')\nplt.show()\n","e7de6510":"df_month = df_train.groupby('month').mean()\ndf_month","bb9f0386":"plt.plot(df_month.index,df_month.target_carbon_monoxide)\nplt.title('target_carbon_monoxide')\nplt.show()\n\nplt.plot(df_month.index,df_month.target_benzene)\nplt.title('target_benzene')\nplt.show()\n\nplt.plot(df_month.index,df_month.target_nitrogen_oxides)\nplt.title('target_nitrogen_oxides')\nplt.show()\n\nplt.plot(df_month.index,df_month.sensor_1)\nplt.title('sensor_1')\nplt.show()\n\nplt.plot(df_month.index,df_month.sensor_2)\nplt.title('sensor_2')\nplt.show()\n\nplt.plot(df_month.index,df_month.sensor_3)\nplt.title('sensor_3')\nplt.show()\n\nplt.plot(df_month.index,df_month.sensor_4)\nplt.title('sensor_4')\nplt.show()\n\nplt.plot(df_month.index,df_month.sensor_5)\nplt.title('sensor_5')\nplt.show()\n\nplt.plot(df_month.index,df_month.deg_C)\nplt.title('deg_C')\nplt.show()\n\nplt.plot(df_month.index,df_month.relative_humidity)\nplt.title('relative_humidity')\nplt.show()\n\nplt.plot(df_month.index,df_month.absolute_humidity)\nplt.title('absolute_humidity')\nplt.show()","4eb212ce":"# 1-2\u6708\u309212\u6708\u30683\u6708\u306e\u9593\u306b\u3057\u305f\u3044\u306e\u3067\u3001\u6708\u30c7\u30fc\u30bf\u30928\u6708\u59cb\u307e\u308a\u306b\u5909\u66f4\n# 1\u6708\u309212\u6708\u30012\u6708\u30923\u6708\u306b\u5909\u66f4\n\ndef transform_month(month):\n    if month > 7:\n        month = month - 7\n    else:\n        month = month + 5\n        \n    \n    if month == 6:\n        month = 5\n    elif month == 7:\n        month = 8\n    \n    return month\n","cda7df49":"df_train['month'] = df_train['month'].apply(transform_month)\ndf_test['month'] = df_test['month'].apply(transform_month)","883592ed":"# 1\u6708\u5206\u306e\u30c7\u30fc\u30bf\u304c1\u4ef6\u30671\u6708\u30c7\u30fc\u30bf\u3092\u4ee3\u8868\u3057\u3066\u3057\u307e\u3046\u305f\u3081\u524a\u9664\u3059\u308b\n\ndf_train = df_train.drop(7110)","b24f1a51":"!pip install pycaret","65b6181e":"from pycaret.regression import *\nimport shap","7141dca7":"train_c = df_train[['deg_C', 'relative_humidity', 'absolute_humidity',\n       'sensor_1', 'sensor_2', 'sensor_3', 'sensor_4', 'sensor_5',\n       'target_carbon_monoxide','hour', 'week_day','month']]\n\ntest = df_test[['deg_C', 'relative_humidity', 'absolute_humidity',\n       'sensor_1', 'sensor_2', 'sensor_3', 'sensor_4', 'sensor_5',\n       'hour', 'week_day','month']]\n","dd50a180":"reg_c = setup(data=train_c,target='target_carbon_monoxide',session_id=12,numeric_features=['month'])","74821dd6":"# \u30e2\u30c7\u30eb\u306e\u6bd4\u8f03\u3092\u5b9f\u65bd\ncompare_models()","cb743826":"cat = create_model('catboost')\n# tuned_cat = tune_model(cat)","65e7cc87":"final_c = finalize_model(cat)\n","558e0ef0":"pred_c = predict_model(final_c, data=test)","b99dcd9e":"train_b = df_train[['deg_C', 'relative_humidity', 'absolute_humidity',\n       'sensor_1', 'sensor_2', 'sensor_3', 'sensor_4', 'sensor_5',\n       'target_benzene','hour', 'week_day','month']]\n\n# \u30d9\u30f3\u30bc\u30f3\u304c0.1\u306e\u3082\u306e\u306f\u30c7\u30fc\u30bf\u304c\u53d6\u308c\u3066\u3044\u306a\u3044\u3068\u601d\u308f\u308c\u308b\ntrain_b = train_b.drop(train_b.index[train_b.target_benzene == 0.1],axis=0)","ac7f9d9b":"reg_b = setup(data=train_b,target='target_benzene',session_id=12,numeric_features=['month'])","9f2cb6d5":"# \u30e2\u30c7\u30eb\u306e\u6bd4\u8f03\u3092\u5b9f\u65bd\ncompare_models()","c9ad4e51":"cat_b = create_model('catboost')\n#tuned_cat_b = tune_model(cat_b)","2b1ebf5b":"final_b = finalize_model(cat_b)\npred_b = predict_model(final_b, data=test)","bdd3c373":"train_n = df_train[['deg_C', 'relative_humidity', 'absolute_humidity',\n       'sensor_1', 'sensor_2', 'sensor_3', 'sensor_4', 'sensor_5',\n       'target_nitrogen_oxides','hour', 'week_day','month']]","0dbc43f1":"reg_n = setup(data=train_n,target='target_nitrogen_oxides',session_id=12,numeric_features=['month'])","bb1051ca":"# \u30e2\u30c7\u30eb\u306e\u6bd4\u8f03\u3092\u5b9f\u65bd\ncompare_models()","6f8d607c":"et_n = create_model('et')\n# tuned_cat_n = tune_model(cat_n)","842e4806":"final_n = finalize_model(et_n)\npred_n = predict_model(final_n, data=test)","9df652d6":"submission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')","919ad2c5":"submission.head()","baee2c77":"submission.target_carbon_monoxide = pred_c.Label\nsubmission.target_benzene = pred_b.Label\nsubmission.target_nitrogen_oxides = np.maximum(pred_n.Label,0)","1a43a142":"submission","3798af67":"submission.describe()","8bcdb0fa":"submission.to_csv('catboost_etr_submission2.csv',index=False)","c6ebd6ed":"3\u3064\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u5168\u3066\u306b\u304a\u3044\u3066\u3001\uff18\u6708\u304c\u6700\u3082\u5c0f\u3055\u304f11\u6708\u304c\u5927\u304d\u3044  \n\u7279\u306bnitrogen_oxides\u306b\u304a\u3044\u3066\u306f\u3001\u5909\u52d5\u306e\u5e45\u304c\u5927\u304d\u3044  \n\u5168\u4f53\u7684\u306a\u5b63\u7bc0\u5909\u52d5\u3068\u3001\u6c17\u6e29\u3001\u6e7f\u5ea6\u3001\u30bb\u30f3\u30b5\u30fc\u985e\u306b\u5927\u304d\u306a\u76f8\u95a2\u306f\u306a\u3055\u305d\u3046","2e1ff3d9":"score:0.26220","9dbfa0f6":"# \u65e5\u4ed8\u306b\u3088\u308b\u5468\u671f\u6027\u306e\u6709\u7121\u306e\u78ba\u8a8d","ccaa785d":"## \u571f\u65e5\u306b\u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c83\u3064\u3068\u3082\u5c11\u306a\u304f\u306a\u308b\u50be\u5411\u304c\u3042\u308b","e0d5f2c4":"# Predict carbon_monoxide","75792079":"# Predict Benzene","36440db3":"target_benzene\u304c0.1\u306e\u5834\u5408\u306f\u3001\u30c7\u30fc\u30bf\u304c\u6b63\u5e38\u306b\u53d6\u5f97\u3067\u304d\u3066\u3044\u306a\u3044\u3068\u601d\u308f\u308c\u308b\u3002","a2145dc2":"## \u307e\u3068\u3081\n\u9031\u3001\u6642\u9593\u306b\u3064\u3044\u3066\u306f\u3001\u660e\u3089\u304b\u306a\u5468\u671f\u6027\u304c\u5b58\u5728\u3059\u308b\u3002\n\u5b63\u7bc0\u6027\u306e\u5909\u52d5\u306f\u3001\u5b58\u5728\u3057\u3066\u3044\u308b\u304c\u30bf\u30fc\u30b2\u30c3\u30c8\u30c7\u30fc\u30bf\u3067\u3042\u308b\u30011,2\u6708\u306e\u30c7\u30fc\u30bf\u304c\u5b58\u5728\u3057\u306a\u3044\u70b9\u304c\u554f\u984c  \n8\u6708\u30920\u3068\u3057\u3066\u3001\u91cf\u7684\u5909\u6570\u3068\u3057\u3066\u3001\u6708\u30c7\u30fc\u30bf\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u7279\u5fb4\u3092\u63b4\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u78ba\u8a8d  \n\u30d9\u30f3\u30bc\u30f3\u304c0.1\u306e\u6642\u306f\u30d9\u30f3\u30bc\u30f3\u306e\u30c7\u30fc\u30bf\u304c\u53d6\u308c\u3066\u3044\u306a\u3044\u3068\u601d\u308f\u308c\u308b\u3002  \n\u30d9\u30f3\u30bc\u30f3\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u3057\u3066\u306f\u3001\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b","7ab643b5":"# Nitrogen oxides","80e76ff2":"# \u6642\u9593\u306b\u3088\u308b\u5468\u671f\u6027\u306e\u78ba\u8a8d","36b33ba5":"## \u5b8c\u5168\u306a\u5468\u671f\u6027\u306f\u306a\u3044\u304c\u30013\u3064\u306e\u5024\u3068\u3082\u5c11\u306a\u304f\u3068\u3082\u65e9\u671d\u306e\u6642\u9593\uff083-5\u6642\u3050\u3089\u3044\uff09\u306f\u5024\u304c\u4f4e\u3044\u3053\u3068\u306f\u898b\u3066\u53d6\u308c\u308b\u306e\u3067\u3001\u5f31\u3044\u306a\u304c\u3089\u3082\u6642\u9593\u306b\u3088\u308b\u5468\u671f\u6027\u306f\u3042\u308b\u3002"}}