{"cell_type":{"f92b88ee":"code","1d8cd859":"code","754d2b8f":"code","473e86d4":"code","5bc20729":"code","49728429":"code","2ca24676":"code","9489cc48":"code","3a17a036":"code","82d27fd8":"code","6e9bce30":"code","dc29f837":"code","e60efb97":"code","f2f5a0d1":"code","2b1af29e":"code","8abd9703":"code","4f8d6c10":"code","456e37ac":"code","778df31e":"code","01a71982":"code","9d840a38":"code","c2a7236e":"code","97a1ba05":"code","a673361c":"code","72a314f3":"code","ac03c221":"code","a10f3c91":"code","a9ea3be1":"code","e72f905c":"code","aa2a12fe":"code","b28b72cd":"code","fab357c4":"code","501cde56":"code","bd9dd9cb":"code","64ed4cd9":"code","8bbf70a6":"code","e97fcba8":"code","db20e8a1":"code","8d36baa4":"code","20279a09":"code","4106c44e":"code","7a210d26":"code","3ef88d34":"code","b818e9a5":"code","363b324d":"code","0ec64690":"code","5983fd3e":"code","cff8837a":"code","cdfdb33e":"code","8d760a5f":"code","a5b6d4b9":"code","4a4b48c6":"code","25078978":"markdown","d2dccf35":"markdown","b458d6c1":"markdown","6e602ec4":"markdown","538d0c9e":"markdown","11cd9979":"markdown","03fd8adb":"markdown","d2551449":"markdown","53baa950":"markdown","c1e6ccdb":"markdown","c4881a1b":"markdown","baf2948d":"markdown","fcc162fe":"markdown","b2c6dddb":"markdown","3961e450":"markdown","81c8ce5b":"markdown","616ae018":"markdown","0f6bec18":"markdown","92e94ccd":"markdown","b09b8f97":"markdown","4da5dffe":"markdown","3f7bc268":"markdown","2b6666c8":"markdown","102f67cf":"markdown","9b868c63":"markdown","79ae2e90":"markdown","cc4cab11":"markdown"},"source":{"f92b88ee":"# data analysis\nimport pandas as pd\nimport numpy as np\nimport random as rnd\nimport math as m\n\n# visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.color_palette(\"Pastel2\")\nplt.palette = 'pastel'\n\n#Machine Learning\nfrom sklearn.ensemble import RandomForestRegressor\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n#import os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n","1d8cd859":"#Cargo los datasets\ntrain_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain_data.head()","754d2b8f":"test_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest_data.head()","473e86d4":"print(train_data.isnull().sum())\nprint('\\n','#'*30, '\\n')\nprint(test_data.isnull().sum())","5bc20729":"#Tenemos 3 columnas con datos nulos en el set de train, y otras 3 en el set de test\nprint('Porcentajes de valores nulos en el set de training:')\nfor col in train_data:\n    if train_data[col].isnull().sum() > 0:\n        print('{}: {}%'.format(col, (train_data[col].isnull().sum() \/ train_data.shape[0])*100 ) )\n        \nprint('\\n','#'*30, '\\n')\n\nprint('Porcentajes de valores nulos en el set de test:')\nfor col in test_data:\n    if test_data[col].isnull().sum() > 0:\n        print('{}: {}%'.format(col, (test_data[col].isnull().sum() \/ test_data.shape[0])*100 ) )\n","49728429":"colors=sns.color_palette('muted')\nf,ax=plt.subplots(1,2,figsize=(12,6))\ntrain_data['Survived'].value_counts().plot.pie(explode=[0,0.05],autopct='%1.1f%%',ax=ax[0], colors=colors)\nax[0].set_title('Supervivientes')\nax[0].set_ylabel('')\nsns.countplot('Survived',data=train_data,ax=ax[1], palette=colors)\nax[1].set_title('Supervivientes')","2ca24676":"train_data.groupby(['Sex','Survived'])['Survived'].mean()","9489cc48":"f,ax=plt.subplots(1,2,figsize=(12,6))\n\ntrain_data[['Sex','Survived']].groupby(['Sex']).mean().plot.bar(ax=ax[0], color=colors)\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex',hue='Survived',data=train_data,ax=ax[1], palette=colors)\nax[1].set_title('Sex: Survived or Not')","3a17a036":"pd.crosstab([train_data.Sex,train_data.Survived],train_data.Pclass,margins=True).style.background_gradient(cmap='Dark2')","82d27fd8":"f,ax=plt.subplots(1,2,figsize=(18,8))\ntrain_data['Pclass'].value_counts().plot.bar(color=colors,ax=ax[0])\nax[0].set_title('Numero De Pasajeros Por Clase')\nax[0].set_ylabel('Count')\nsns.countplot('Pclass',hue='Survived',data=train_data,ax=ax[1], palette=colors)\nax[1].set_title('Pclass: Supervivientes vs Muertos')\nplt.show()","6e9bce30":"pd.crosstab([train_data.Sex,train_data.Survived],train_data.Pclass,margins=True).style.background_gradient(cmap='Dark2')","dc29f837":"plt.figure(figsize=(6,6))\nsns.factorplot('Pclass','Survived',hue='Sex',data=train_data, palette=colors)\nplt.show()","e60efb97":"train_data.Age.describe()","f2f5a0d1":"f,ax=plt.subplots(1,2,figsize=(18,8))\nsns.violinplot(\"Pclass\",\"Age\", hue=\"Survived\", data=train_data,split=True,ax=ax[0])\nax[0].set_title('Pclass and Age vs Survived')\nax[0].set_yticks(range(0,110,10))\nsns.violinplot(\"Sex\",\"Age\", hue=\"Survived\", data=train_data,split=True,ax=ax[1])\nax[1].set_title('Sex and Age vs Survived')\nax[1].set_yticks(range(0,110,10))\nplt.show()","2b1af29e":"train_data['Initial']=0\nfor i in train_data:\n    train_data['Initial']=train_data.Name.str.extract('([A-Za-z]+)\\.') #Extraemos los sobrenombres\n    \ntest_data['Initial']=0\nfor i in test_data:\n    test_data['Initial']=test_data.Name.str.extract('([A-Za-z]+)\\.') #Extraemos los sobrenombres","8abd9703":"print(train_data.Initial.unique())","4f8d6c10":"pd.crosstab(train_data.Initial,train_data.Sex).T.style.background_gradient(cmap='summer_r') #Comprobamos las iniciales con el genero","456e37ac":"train_data['Initial'].replace(['Mlle','Mme','Ms','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don'],\n                              ['Miss','Miss','Miss','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr'],inplace=True)\ntest_data['Initial'].replace(['Mlle','Mme','Ms','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don','Dona'],\n                              ['Miss','Miss','Miss','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mrs'],inplace=True)","778df31e":"train_data.groupby('Initial')['Age'].mean() #Comprobamos la edad media de las iniciales","01a71982":"train_data.loc[(train_data.Age.isnull())&(train_data.Initial=='Dr'),'Age']=42\ntrain_data.loc[(train_data.Age.isnull())&(train_data.Initial=='Mr'),'Age']=33\ntrain_data.loc[(train_data.Age.isnull())&(train_data.Initial=='Mrs'),'Age']=36\ntrain_data.loc[(train_data.Age.isnull())&(train_data.Initial=='Master'),'Age']=5\ntrain_data.loc[(train_data.Age.isnull())&(train_data.Initial=='Miss'),'Age']=22\ntrain_data.loc[(train_data.Age.isnull())&(train_data.Initial=='Other'),'Age']=46\n\ntest_data.loc[(test_data.Age.isnull())&(test_data.Initial=='Dr'),'Age']=42\ntest_data.loc[(test_data.Age.isnull())&(test_data.Initial=='Mr'),'Age']=33\ntest_data.loc[(test_data.Age.isnull())&(test_data.Initial=='Mrs'),'Age']=36\ntest_data.loc[(test_data.Age.isnull())&(test_data.Initial=='Master'),'Age']=5\ntest_data.loc[(test_data.Age.isnull())&(test_data.Initial=='Miss'),'Age']=22\ntest_data.loc[(test_data.Age.isnull())&(test_data.Initial=='Other'),'Age']=46","9d840a38":"train_data.Age.isnull().any() #Finalmente no queda ningun valor nulo en la edad","c2a7236e":"f,ax=plt.subplots(1,2,figsize=(20,10))\ntrain_data[train_data['Survived']==0].Age.plot.hist(ax=ax[0],bins=20,edgecolor='black',color='red')\nax[0].set_title('Survived= 0')\nx1=list(range(0,85,5))\nax[0].set_xticks(x1)\ntrain_data[train_data['Survived']==1].Age.plot.hist(ax=ax[1],color='green',bins=20,edgecolor='black')\nax[1].set_title('Survived= 1')\nx2=list(range(0,85,5))\nax[1].set_xticks(x2)\nplt.show()","97a1ba05":"sns.factorplot('Pclass','Survived',col='Initial',data=train_data)\nplt.show()","a673361c":"pd.crosstab([train_data.Embarked,train_data.Pclass],[train_data.Sex,train_data.Survived],margins=True).style.background_gradient(cmap='summer_r')","72a314f3":"sns.factorplot('Embarked','Survived',data=train_data)\nfig=plt.gcf()\nfig.set_size_inches(5,3)\nplt.show()","ac03c221":"f,ax=plt.subplots(2,2,figsize=(20,15))\nsns.countplot('Embarked',data=train_data,ax=ax[0,0])\nax[0,0].set_title('No. Of Passengers Boarded')\nsns.countplot('Embarked',hue='Sex',data=train_data,ax=ax[0,1])\nax[0,1].set_title('Male-Female Split for Embarked')\nsns.countplot('Embarked',hue='Survived',data=train_data,ax=ax[1,0])\nax[1,0].set_title('Embarked vs Survived')\nsns.countplot('Embarked',hue='Pclass',data=train_data,ax=ax[1,1])\nax[1,1].set_title('Embarked vs Pclass')\nplt.subplots_adjust(wspace=0.2,hspace=0.5)\nplt.show()","a10f3c91":"sns.factorplot('Pclass','Survived',hue='Sex',col='Embarked',data=train_data)\nplt.show()","a9ea3be1":"train_data['Embarked'].fillna('S', inplace=True)\ntest_data['Embarked'].fillna('S', inplace=True)\ntrain_data.Embarked.isnull().any()","e72f905c":"pd.crosstab([train_data.SibSp],train_data.Survived).style.background_gradient(cmap='summer_r')","aa2a12fe":"f,ax=plt.subplots(1,2,figsize=(20,8))\nsns.barplot('SibSp','Survived',data=train_data,ax=ax[0])\nax[0].set_title('SibSp vs Survived')\nsns.pointplot('SibSp','Survived',data=train_data,ax=ax[1])\nax[1].set_title('SibSp vs Survived')\nplt.close(2)\nplt.show()","b28b72cd":"pd.crosstab(train_data.SibSp,train_data.Pclass).style.background_gradient(cmap='summer_r')","fab357c4":"pd.crosstab(train_data.Parch,train_data.Pclass).style.background_gradient(cmap='summer_r')","501cde56":"f,ax=plt.subplots(1,2,figsize=(20,8))\nsns.barplot('Parch','Survived',data=train_data,ax=ax[0])\nax[0].set_title('Parch vs Survived')\nsns.pointplot('Parch','Survived',data=train_data,ax=ax[1])\nax[1].set_title('Parch vs Survived')\nplt.close(2)\nplt.show()","bd9dd9cb":"print('Highest Fare was:',train_data['Fare'].max())\nprint('Lowest Fare was:',train_data['Fare'].min())\nprint('Average Fare was:',train_data['Fare'].mean())","64ed4cd9":"f,ax=plt.subplots(1,3,figsize=(20,8))\nsns.distplot(train_data[train_data['Pclass']==1].Fare,ax=ax[0])\nax[0].set_title('Fares in Pclass 1')\nsns.distplot(train_data[train_data['Pclass']==2].Fare,ax=ax[1])\nax[1].set_title('Fares in Pclass 2')\nsns.distplot(train_data[train_data['Pclass']==3].Fare,ax=ax[2])\nax[2].set_title('Fares in Pclass 3')\nplt.show()","8bbf70a6":"train_data.head()","e97fcba8":"x_train = train_data.drop(['PassengerId', 'Name', 'Ticket', 'Cabin', 'Survived'], axis=1)\nx_test = test_data.drop(['PassengerId', 'Name', 'Ticket', 'Cabin'], axis=1)\nx_train.head()","db20e8a1":"y_train = train_data.Survived\ny_train.head()","8d36baa4":"#x_train.join(pd.get_dummies(x_train, columns=['Sex', 'Embarked', 'Initial'], prefix=['Sex', 'Embarked', 'Initial']))\nx_train = x_train.join(pd.get_dummies(x_train.Sex, prefix='Sex'))\nx_train = x_train.join(pd.get_dummies(x_train.Embarked, prefix='Embarked'))\nx_train = x_train.join(pd.get_dummies(x_train.Initial, prefix='Initial'))\nx_train = x_train.drop(['Sex', 'Embarked', 'Initial'], axis=1)\nx_train.head()","20279a09":"x_test = x_test.join(pd.get_dummies(x_test.Sex, prefix='Sex'))\nx_test = x_test.join(pd.get_dummies(x_test.Embarked, prefix='Embarked'))\nx_test = x_test.join(pd.get_dummies(x_test.Initial, prefix='Initial'))\nx_test = x_test.drop(['Sex', 'Embarked', 'Initial'], axis=1)\nx_test.Fare.fillna(x_test.Fare.mean())\nx_test.head()","4106c44e":"print('{}, {}, {}'.format(x_train.shape, y_train.shape, x_test.shape))","7a210d26":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.layers import Dense, Dropout, Input\nfrom tensorflow.keras import models \nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.callbacks import EarlyStopping","3ef88d34":"model = Sequential([\n    layers.Dense(units = 32, input_shape = [16]),\n    layers.BatchNormalization(),\n    layers.Activation('relu'),\n    \n    #Capas ocultas\n    layers.Dense(units = 64, activation = 'relu', use_bias = False),\n    layers.Dense(units = 128, activation = 'relu', use_bias = False),\n    layers.Dropout(0.1),\n    layers.Dense(units = 64, activation = 'relu', use_bias = False),\n    layers.Dropout(0.1),\n    layers.Dense(units = 32, activation = 'relu'),\n    layers.Dropout(0.15),\n    layers.Dense(units = 16, activation = 'relu'),\n    layers.Dense(units = 8, activation = 'relu', use_bias = False),\n    \n    #Capa de clasificacion binaria\n    layers.Dense(units =1 , activation = 'sigmoid')\n])","b818e9a5":" model.summary()","363b324d":"early_stopping = EarlyStopping(\n    min_delta=0.02, # minimium amount of change to count as an improvement\n    patience=10, # how many epochs to wait before stopping\n    restore_best_weights=True,\n)","0ec64690":"model.compile(\n    loss = \"binary_crossentropy\", \n    optimizer = \"adam\",\n    metrics=['accuracy']\n)","5983fd3e":"history = model.fit(\n    x_train, y_train,\n    batch_size = 32,\n    verbose = 2,\n    epochs = 80, \n    callbacks=[early_stopping])","cff8837a":"predict = model.predict(x_test)\npredict = (predict > 0.5).astype(int).ravel()\nprint(predict)","cdfdb33e":"submit = pd.DataFrame({\"PassengerId\":test_data.PassengerId, 'Survived':predict})\nsubmit.to_csv(\"submission.csv\",index = False)","8d760a5f":"from sklearn import metrics\nY_predict_activation = (model.predict(x_train) > 0.5).astype(int)\nprint('Precision : ', np.round(metrics.precision_score(y_train, Y_predict_activation)*100,2))\nprint('Accuracy : ', np.round(metrics.accuracy_score(y_train, Y_predict_activation)*100,2))\nprint('Recall : ', np.round(metrics.recall_score(y_train, Y_predict_activation)*100,2))\nprint('F1 score : ', np.round(metrics.f1_score(y_train, Y_predict_activation)*100,2))\nprint('AUC : ', np.round(metrics.roc_auc_score(y_train, Y_predict_activation)*100,2))","a5b6d4b9":"plt.plot(history.history['accuracy'])\nplt.show()","4a4b48c6":"plt.plot(history.history['loss'])\nplt.show()","25078978":"## Influencia de la caracteristica SibSip","d2dccf35":"**Rellenar los embarques nulos**\n\nComo la mayoria de las personas embarcaron en el puerto S, voy a asignar este valor a los nulos","b458d6c1":"Reemplazo las iniciales que puedan estar mal escritas, como Mlle","6e602ec4":"## Influencia de la caracteristica Sex","538d0c9e":"**Observaciones**\n1. En el puerto S, los pasajeros de tercera clase tienen muy poco ratio de supervivencia\n2. La probabilidad de supervivencia es casi de 1 entre las mujeres de clase 1 y 2, independientemente del puerto.","11cd9979":"# Tratamiento de datos","03fd8adb":"Podemos ver que el pasajer mas joven no llegaba al a\u00f1o, 0,42.\nEl pasajero con mayor eddad tenia 80 a\u00f1os.\nLa edad media se situa en los 29.69 a\u00f1os.","d2551449":"## Influencia de la caracteristica Age","53baa950":"**Observaciones**\n\n* Cuanto mas baja la clase, mas poblacion menor de 10 a\u00f1os hay, aun asi, la clase no parece afectar a la supervivencia de los menores de 10 a\u00f1os.\n* La supervivencia entre 20 y 50 a\u00f1os es alta, incluso mas entre las mujeres.\n* Para los hombres, las probabilidades de sobrevivir se reducen con la edad\n\nComo vimos antes, la columna de Age, tiene un 20% de valores nulos, por lo tanto vamos a tener que rellenarla, dado que esta columna esta estrechamente relacionada con las probabilidades que tiene una persona de sobrevivir. Para esto podriamos usar la media, que es de 29 a\u00f1os, pero dar el valor de 29 a\u00f1os a alguien con 4 u 80, llevaria a error en el modelo. Es por esto que voy a dividir a la poblacion del titanic por sus sobrenombres, miss, mr, etc... Y a rellenar los valores nulos con la media de la franja, reduciendo asi el error que se pudiera cometer.","c1e6ccdb":"Estos porcentajes me hacen pensar en quitar la columna de Cabin, y rellenar las de Age Embarked y Fare, dependera de como de relacionadas esten con el ratio de supervivencia","c4881a1b":"Los graficos anteriores nos indican que no mucha gente se salvo, ya que la clase 0 es la mayoritaria.","baf2948d":"Las dos primeras versiones de este cuaderno tienen una aproximacion si casi estudio previo de los datos, en las siguientes versiones voy a comparar la mejora con estudio y limpieza de los datos. Tambien usare una red neuronal en vez de un solo modelo de machine learning.\n\nHe seguido este notebook durante la elaboracion del mio: https:\/\/www.kaggle.com\/ash316\/eda-to-prediction-dietanic","fcc162fe":"# Estudio de la relacion entre las diferentes caracteristicas y el ratio de supervivencia","b2c6dddb":"Esta claro que la clase es un rasgo importante a la hora de determinar la supervivencia en el titanic, pero este grafico nos muestra que el genero es incluso mas importante. Podemos observar que las mujeres de tercera clase tienen mas probabilidad de ser rescatadas que incluso los hombres de primera clase.","3961e450":"## Porcentaje de supervivientes","81c8ce5b":"**Rellenar los valores nulos**","616ae018":"Las graficas de este apartado y el anterior muestran como estar acompa\u00f1ado aumenta las probabilidades de sobrevivir, si estas acompa\u00f1ado por poca gente, ya que esta probabilidad decrece rapidamente cuanta mas gente te acompa\u00f1e.","0f6bec18":"Probabilidad de sobrevivir por puerto de embarque","92e94ccd":"Como se puede ver de las dos celdas anteriores, pese a haber un mayor numero de mujeres abordo, tienen un mayor ratio de supervivencia. Esto nos muestra que el genero es un rasgo muy importante para nuestro modelo.","b09b8f97":"# Creacion del modelo","4da5dffe":"## Observaciones finales:\n\nSex: Las mujeres tienen una probabilidad mucho mas alta que los hombres de sobrevivir.\n\nPclass: De los graficos se puede deducir que ser pasajero de primera clase te da privilegios sobre los de tercera clase a la hora de sobrevivir.\n\nAge: Ni\u00f1os con menos de 5-10 a\u00f1os tienen una alta probabilidad de sobrevivir. Murieron muchos pasajeros entre 15 y 35 a\u00f1os.\n\nEmbarked: Las probabilidades de sobrevivir en el puerto C parecen ser mejores, aunque la mayoria de los pasajeros de primera clase embarcaran en el puerto S. Los pasajeros del puerto Q eran todos de tercera clase.\n\nParch+SibSp: Tener 1-2 hermanos, esposo a bordo o 1-3 padres muestra una mayor probabilidad de supervivencia, mas que estar solo o tener una familia grande.","3f7bc268":"Se puede apreciar que, pese a haber mucha mas gente en tercera clase, hay mas supervivientes pertenecientes a primera clase. Esto indica que a los pasajeros de primera clase se les dio mayor prioridad.\n\nAhora vamos a juntar la clase con la caracteristica anterior, el genero. ","2b6666c8":"Para las filas con strings, como Sex, Embarked o Initial, voy a usar el OneHotEncoding","102f67cf":"De las columnas anteriores, he optado por quitar el id, el  nombre, el ticket, y la cabina, ya que no es posible categorizarlos o no son utiles.","9b868c63":"## Influencia de la caracteristica Pclass","79ae2e90":"## Influencia de la caracteristica Embarked","cc4cab11":"## Influencia de la caracteristica ParCh"}}