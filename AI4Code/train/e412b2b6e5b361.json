{"cell_type":{"f3113139":"code","aceeeb8a":"code","4034808b":"code","90693f04":"code","c702b2df":"code","f9e6cfd3":"code","9c60b084":"code","0bb664bd":"code","7dae480f":"code","d3842c40":"code","75f4997c":"code","b544d3ca":"code","a0360a81":"code","97ac4136":"code","0f440fb5":"code","47f1b846":"code","3120400f":"code","3743a8d6":"code","9ea1d14d":"code","8761774c":"code","fc802f0b":"code","69cac26b":"code","3bf7f728":"code","aaa28d91":"code","26819d2d":"code","fb71e975":"code","12aefe37":"code","dd36e153":"code","7984f67d":"code","686bbc92":"code","686e3118":"code","ececc2db":"code","94219cd6":"code","135c13d8":"code","7cde6874":"code","c9215dd8":"code","261a42f2":"code","56c76b0e":"markdown","7074c846":"markdown"},"source":{"f3113139":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","aceeeb8a":"train = pd.read_csv('..\/input\/beyond-analysis\/train.csv')\ntest = pd.read_csv('..\/input\/beyond-analysis\/test.csv')\nsample_submission = pd.read_csv('..\/input\/beyond-analysis\/sample_submission_random.csv')","4034808b":"train.head().T","90693f04":"train.drop([\"UNIQUE_IDENTIFIER\",\"SEQUENCE_NO\",\"ENTRY_NUMBER\"],axis=1,inplace=True)","c702b2df":"#train1=train\n#train2=train","f9e6cfd3":"train.drop(\"Y2\",axis=1).corr()","9c60b084":"train1=train.drop([\"ACTIVE_YN\",\"WINNINGS_2\",\"PRACTICE_ENTRY\",\"PRACTICE_WINNINGS\",\"PRACTICE_ENTRY_NUMBER\",\"PRACTICE_WINNINGS_NUMBER\",\"Y2\"],axis=1)","0bb664bd":"train.drop(\"Y1\",axis=1).corr()","7dae480f":"train2=train.drop([\"DISCOUNT\",\"DEPOSIT_2\",\"PRACTICE_ENTRY\",\"PRACTICE_WINNINGS\",\"PRACTICE_ENTRY_NUMBER\",\"PRACTICE_WINNINGS_NUMBER\",\"Y1\"],axis=1)","d3842c40":"train['CATEGORY_2'].unique()","75f4997c":"from sklearn.preprocessing import LabelEncoder\n\nLE = LabelEncoder()\ntrain1['CATEGORY_1'] = LE.fit_transform(train1['CATEGORY_1'])\ntrain1['CATEGORY_2'] = LE.fit_transform(train1['CATEGORY_2'])\n\ntrain2['CATEGORY_1'] = LE.fit_transform(train2['CATEGORY_1'])\ntrain2['CATEGORY_2'] = LE.fit_transform(train2['CATEGORY_2'])","b544d3ca":"test.head().T","a0360a81":"sample_submission.head()","97ac4136":"train.info()","0f440fb5":"train1_data = train1.drop('Y1', axis = 1)","47f1b846":"train_data_labels = train[\"Y1\"]","3120400f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(train1_data, train_data_labels, random_state = 0, test_size = 0.20)","3743a8d6":"import xgboost as xg\nxgb_r = xg.XGBRegressor(objective ='reg:squarederror',booster=\"dart\",\n                  n_estimators = 47, seed = 130)\nxgb_r.fit(X_train,y_train)\nxgb_r.score(X_test,y_test)","9ea1d14d":"train2_data = train2.drop('Y2', axis = 1)","8761774c":"train_data_labels = train[\"Y2\"]","fc802f0b":"X_train, X_test, y_train, y_test = train_test_split(train2_data, train_data_labels, random_state = 0, test_size = 0.20)","69cac26b":"import xgboost as xg\nxgb_r1 = xg.XGBRegressor(objective ='reg:squarederror',booster=\"dart\",\n                  n_estimators = 47, seed = 130)\nxgb_r1.fit(X_train,y_train)\nxgb_r1.score(X_test,y_test)","3bf7f728":"test1=test.drop([\"UNIQUE_IDENTIFIER\",\"SEQUENCE_NO\",\"ENTRY_NUMBER\",\"ACTIVE_YN\",\"WINNINGS_2\",\"PRACTICE_ENTRY\",\"PRACTICE_WINNINGS\",\"PRACTICE_ENTRY_NUMBER\",\"PRACTICE_WINNINGS_NUMBER\"],axis=1)","aaa28d91":"test2=test.drop([\"UNIQUE_IDENTIFIER\",\"SEQUENCE_NO\",\"ENTRY_NUMBER\",\"DISCOUNT\",\"DEPOSIT_2\",\"PRACTICE_ENTRY\",\"PRACTICE_WINNINGS\",\"PRACTICE_ENTRY_NUMBER\",\"PRACTICE_WINNINGS_NUMBER\"],axis=1)","26819d2d":"from sklearn.preprocessing import LabelEncoder\n\nLE = LabelEncoder()\ntest1['CATEGORY_1'] = LE.fit_transform(test1['CATEGORY_1'])\ntest1['CATEGORY_2'] = LE.fit_transform(test1['CATEGORY_2'])\n\ntest2['CATEGORY_1'] = LE.fit_transform(test2['CATEGORY_1'])\ntest2['CATEGORY_2'] = LE.fit_transform(test2['CATEGORY_2'])","fb71e975":"y1=xgb_r.predict(test1)\ny2=xgb_r1.predict(test2)","12aefe37":"train1.head().T","dd36e153":"test1.shape","7984f67d":"x = pd.DataFrame(y1,columns = ['Y1'])","686bbc92":"x[\"Y2\"]=y2","686e3118":"x","ececc2db":"test","94219cd6":"idx = 0\nx.insert(loc = idx, value = test['UNIQUE_IDENTIFIER'],column =  \"UNIQUE_IDENTIFIER\")","135c13d8":"x","7cde6874":"x = x.drop_duplicates(subset = \"UNIQUE_IDENTIFIER\")","c9215dd8":"x","261a42f2":"x.to_csv(\"final_submission.csv\", index=False)","56c76b0e":"UNIQUE_IDENTIFIER - Unique ID of a customer\nSEQUENCE_NO - Sequence number of the entries for each customer\nSTATUS_CHECK - Customer sanity check\nCATEGORY_1 - Customer segment 1\nCATEGORY_2 - Customer segment 2\nACTIVE_YN - Activity status\nENTRY - Entry chips needed\nREVENUE - Revenue\nWINNINGS_1 - Total chips won\nWINNINGS_2 - Other chips won (subset of WINNINGS_1)\nDISCOUNT - Discount offered\nDEPOSIT - Chips purchased\nDEPOSIT_NUMBER - Deposit number\nDEPOSIT_2 - Other deposit (subset of DEPOSIT)\nWITHDRAW - Withdraw\nWITHDRAW_NUMBER - Withdraw number\nDEPOSIT_TRAILS - Deposit attempt\nENTRY_NUMBER - Contests participated\nWINNINGS_NUMBER - Contests won\nPRACTICE_ENTRY - Fun contests' entry chips\nPRACTICE_WINNINGS - Fun contests chips won\nPRACTICE_ENTRY_NUMBER - Fun contests participated\nPRACTICE_WINNINGS_NUMBER - Fun contests won","7074c846":"# Data fields"}}