{"cell_type":{"f1c6b7e2":"code","bf1ab0b3":"code","c183e594":"code","d4860d79":"code","beab6ae5":"code","f631bf41":"code","82704d1b":"code","c3b20a94":"code","869462e7":"code","2b5ed217":"code","b6bc5082":"code","e9edd16d":"code","c8b67c68":"code","726912ee":"code","e561cc32":"code","c72c9973":"code","17218b6f":"code","46948425":"code","b1db32e7":"code","70f4a447":"code","ab64a239":"code","d62cae11":"code","e19d528e":"code","cf1e192f":"code","6c6fe729":"code","1062a378":"code","c3e45ca1":"code","0c96da69":"code","23f1e0c7":"code","76b16abe":"code","4adc516d":"code","4d749878":"code","911729df":"code","e810915d":"code","2f01e760":"code","e984eaac":"code","4d4a3305":"code","d86e0107":"code","4f870394":"code","697f7d58":"code","159962b1":"code","8828a4e3":"code","f74348ac":"code","c13c18dc":"code","a8959a6e":"code","51261193":"code","e728eccd":"code","934786c0":"code","8f00c2bd":"code","951709a7":"code","6a9bf9f1":"code","01f2b156":"code","d3400e25":"code","ab13bfb5":"code","d82e6cc3":"code","0d7b9d38":"code","b9363a16":"code","eac79870":"code","a2d6cb05":"code","2fdd0847":"code","ad3655cd":"code","4a459563":"code","9bdf4b5b":"code","f3b4792f":"code","89834a19":"code","cc8fb4b8":"code","83347bb7":"code","1e6fb903":"code","511e506d":"code","da246724":"code","e1b9fe25":"code","b468086b":"code","1d95a3f2":"code","8416e185":"code","3a76cdd4":"code","0ee58b69":"code","e2abcd65":"code","67593dd4":"code","68506293":"code","fe5513d5":"code","6436a51e":"code","20d9f1a2":"code","dd496b45":"code","60fc5f99":"code","22620369":"code","97218b53":"code","a523239b":"markdown","ea36c0c5":"markdown","cead22a8":"markdown","44d8ead2":"markdown","228ddcd3":"markdown","d59bab46":"markdown","06cbc56e":"markdown","598acea0":"markdown","cf98c592":"markdown","57920798":"markdown","80476deb":"markdown","ed5d90df":"markdown","69c2dbe8":"markdown","697a36f5":"markdown","03ca6fd0":"markdown","d560995e":"markdown","dda58648":"markdown","ec88ebc4":"markdown","f3c3f66f":"markdown","0b8fcead":"markdown","8b77b71e":"markdown","c8da68db":"markdown","1da70213":"markdown","c767e7fd":"markdown","da0becf8":"markdown","749eb5da":"markdown","b41694f9":"markdown","de00e9b5":"markdown","c3cde6b8":"markdown","a62ed39c":"markdown","07b240d3":"markdown","b505d902":"markdown","00a2b3ad":"markdown","6df832e6":"markdown","bf9623e5":"markdown","83407817":"markdown","76f1ecad":"markdown"},"source":{"f1c6b7e2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bf1ab0b3":"df = pd.read_csv(\"\/kaggle\/input\/delhi-house-price-prediction\/MagicBricks.csv\")","c183e594":"print(\"The Number of rows and columns in the dataset are:\",df.shape)","d4860d79":"df.head()","beab6ae5":"df.info()","f631bf41":"df.isnull().sum()","82704d1b":"df.columns","c3b20a94":"import matplotlib.pyplot as plt\nimport seaborn as sns","869462e7":"plt.hist(df[\"Area\"])\nplt.xlabel(\"Area\")\nplt.ylabel(\"Count of Records\")\nplt.title(\"Histogram of Area\")\nplt.show()","2b5ed217":"plt.hist(np.log(df[\"Area\"]), bins=50)\nplt.xlabel(\"Log (Area)\")\nplt.ylabel(\"Count of Records\")\nplt.title(\"Histogram of Log(Area)\")\nplt.show()","b6bc5082":"sns.countplot(df[\"BHK\"])\nplt.show()","e9edd16d":"sns.countplot(df[\"Bathroom\"])\nplt.show()","c8b67c68":"sns.countplot(df[\"Furnishing\"])\nplt.show()","726912ee":"df.columns","e561cc32":"df.head()","c72c9973":"sns.countplot(df[\"Parking\"])\nplt.show()","17218b6f":"df[\"Parking\"].value_counts()","46948425":"plt.hist(df[\"Price\"])\nplt.show()","b1db32e7":"plt.hist(np.log(df[\"Price\"]), bins=50)\nplt.show()","70f4a447":"sns.countplot(df[\"Status\"])\nplt.show()","ab64a239":"sns.countplot(df[\"Transaction\"])\nplt.show()","d62cae11":"sns.countplot(df[\"Type\"])\nplt.show()","e19d528e":"plt.hist(df[\"Per_Sqft\"])\nplt.show()","cf1e192f":"plt.hist(np.log(df[\"Per_Sqft\"]), bins=50)\nplt.show()","6c6fe729":"df.describe()","1062a378":"df.columns","c3e45ca1":"sns.scatterplot(x=df[\"Area\"], y=df[\"Price\"])\nplt.show()","0c96da69":"sns.scatterplot(x=df[\"Per_Sqft\"], y=df[\"Price\"])\nplt.show()","23f1e0c7":"sns.scatterplot(x=np.log(df[\"Per_Sqft\"]), y=np.log(df[\"Price\"]))\nplt.show()","76b16abe":"df.columns","4adc516d":"temp = pd.pivot_table(data=df, index=\"BHK\", aggfunc=\"median\")\nsns.barplot(x=temp.index,y=temp.Price)\nplt.show()","4d749878":"temp = pd.pivot_table(data=df, index=\"Bathroom\", aggfunc=\"median\")\nsns.barplot(x=temp.index,y=temp.Price)\nplt.show()","911729df":"temp = pd.pivot_table(data=df, index=\"Parking\", aggfunc=\"median\")\nsns.barplot(x=temp.index,y=temp.Price)\nplt.show()","e810915d":"df.columns","2f01e760":"temp = pd.pivot_table(data=df, index=\"Furnishing\", aggfunc=\"median\")\nsns.barplot(x=temp.index,y=temp.Price)\nplt.show()","e984eaac":"temp = pd.pivot_table(data=df, index=\"Status\", aggfunc=\"median\")\nsns.barplot(x=temp.index,y=temp.Price)\nplt.show()","4d4a3305":"temp = pd.pivot_table(data=df, index=\"Transaction\", aggfunc=\"median\")\nsns.barplot(x=temp.index,y=temp.Price)\nplt.show()","d86e0107":"temp = pd.pivot_table(data=df, index=\"Type\", aggfunc=\"median\")\nsns.barplot(x=temp.index,y=temp.Price)\nplt.show()","4f870394":"df.columns","697f7d58":"sns.boxplot(df[\"Area\"])\nplt.show()","159962b1":"sns.boxplot(df[\"BHK\"])\nplt.show()","8828a4e3":"sns.boxplot(df[\"Parking\"])\nplt.show()","f74348ac":"sns.boxplot(df[\"Price\"])\nplt.show()","c13c18dc":"sns.boxplot(df[\"Per_Sqft\"])\nplt.show()","a8959a6e":"corr = df.corr()\ncorr[\"Price\"].sort_values(ascending=False)","51261193":"df_reduced = df.loc[(df[\"Price\"]<1e8) & (df[\"Area\"]<10000) &\n           (df[\"BHK\"]<8) & (df[\"Parking\"]<9) & (df[\"Per_Sqft\"]<50000)]\n\n# df_reduced = df.loc[(df[\"Price\"]<1e8)]","e728eccd":"print(\"Shape of orginal dataset:\", df.shape)\nprint(\"Shape of reduced dataset:\", df_reduced.shape)","934786c0":"df_reduced.info()","8f00c2bd":"df_reduced.head()","951709a7":"df_reduced.drop(columns=\"Locality\", inplace=True)","6a9bf9f1":"df_reduced.head()","01f2b156":"cat_cols = [\"BHK\", \"Bathroom\", \"Furnishing\", \"Parking\",\"Status\", \"Transaction\", \"Type\"]\nnum_cols = [\"Area\", \"Price\", \"Per_Sqft\"]","d3400e25":"for col in cat_cols:\n    df_reduced[col] = df_reduced[col].astype(str)","ab13bfb5":"for col in num_cols:\n    df_reduced[col] = np.log(df_reduced[col])","d82e6cc3":"df_reduced.head()","0d7b9d38":"df_reduced = pd.get_dummies(data=df_reduced, drop_first=True)","b9363a16":"df_reduced.head()","eac79870":"y = df_reduced[\"Price\"].copy()\nX = df_reduced.drop(\"Price\", axis=1)","a2d6cb05":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","2fdd0847":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nX_train = pd.DataFrame(scaler.fit_transform(X_train), columns=X_train.columns)","ad3655cd":"X_train.head()","4a459563":"from sklearn.linear_model import LinearRegression\n\nlr = LinearRegression()\nlr.fit(X_train, y_train)","9bdf4b5b":"from sklearn.metrics import mean_squared_error, r2_score","f3b4792f":"lr_predictions = lr.predict(X_train)\n\nprint(\"RMSE:\", np.sqrt(mean_squared_error(lr_predictions, y_train)))\nprint(\"R-Squared:\", r2_score(y_train, lr_predictions))","89834a19":"plt.scatter(x=y_train, y=lr_predictions)\nplt.show()","cc8fb4b8":"plt.hist(lr_predictions-y_train)\nplt.show()","83347bb7":"from sklearn.ensemble import RandomForestRegressor\n\nrf = RandomForestRegressor()\nrf.fit(X_train, y_train)","1e6fb903":"rf_predictions = rf.predict(X_train)\n\nprint(\"RMSE:\", np.sqrt(mean_squared_error(rf_predictions, y_train)))\nprint(\"R-Squared:\", r2_score(y_train, rf_predictions))","511e506d":"plt.scatter(x=y_train, y=rf_predictions)\nplt.show()","da246724":"plt.hist(rf_predictions-y_train)\nplt.show()","e1b9fe25":"from sklearn.model_selection import cross_val_score\n\ncv_rf_scores = cross_val_score(rf, X_train, y_train,\n                        scoring=\"neg_mean_squared_error\",cv=10)\n\ncv_rf_rmse = np.sqrt(-cv_rf_scores)","b468086b":"def display_scores(score):\n    print(\"Scores:\", scores)\n    print(\"Mean:\", scores.mean())\n    print(\"Standar Deviation:\", scores.std())","1d95a3f2":"display_scores(cv_rf_rmse)","8416e185":"cv_lr_scores = cross_val_score(lr, X_train, y_train,\n                               scoring=\"neg_mean_squared_error\",cv=10)\n\ncv_lr_rmse = np.sqrt(-cv_lr_scores)\n\ndisplay_scores(cv_lr_rmse)","3a76cdd4":"X_test = pd.DataFrame(scaler.fit_transform(X_test), columns=X_test.columns)","0ee58b69":"lr_test_predictions = lr.predict(X_test)\n\nprint(\"RMSE:\", np.sqrt(mean_squared_error(lr_test_predictions, y_test)))\nprint(\"R-Squared:\", r2_score(y_test, lr_test_predictions))","e2abcd65":"rf_test_predictions = rf.predict(X_test)\n\nprint(\"RMSE:\", np.sqrt(mean_squared_error(rf_test_predictions, y_test)))\nprint(\"R-Squared:\", r2_score(y_test, rf_test_predictions))","67593dd4":"from sklearn.ensemble import GradientBoostingRegressor\n\ngbr = GradientBoostingRegressor()\ngbr.fit(X_train, y_train)","68506293":"gbr_predictions = gbr.predict(X_train)\nprint(\"RMSE:\", np.sqrt(mean_squared_error(gbr_predictions, y_train)))\nprint(\"R-Squared:\", r2_score(y_train, gbr_predictions))","fe5513d5":"gbr_test_predictions = gbr.predict(X_test)\nprint(\"RMSE:\", np.sqrt(mean_squared_error(gbr_test_predictions, y_test)))\nprint(\"R-Squared:\", r2_score(y_test, gbr_test_predictions))","6436a51e":"from xgboost import XGBRegressor\n\nxgbr = XGBRegressor()\nxgbr.fit(X_train, y_train)","20d9f1a2":"xgbr_predictions = xgbr.predict(X_train)\nprint(\"RMSE:\", np.sqrt(mean_squared_error(xgbr_predictions, y_train)))\nprint(\"R-Squared:\", r2_score(y_train, xgbr_predictions))","dd496b45":"xgbr_test_predictions = xgbr.predict(X_test)\nprint(\"RMSE:\", np.sqrt(mean_squared_error(xgbr_test_predictions, y_test)))\nprint(\"R-Squared:\", r2_score(y_test, xgbr_test_predictions))","60fc5f99":"from lightgbm import LGBMRegressor\n\nlgbmr = LGBMRegressor()\nlgbmr.fit(X_train, y_train)","22620369":"lgbmr_predictions = lgbmr.predict(X_train)\nprint(\"RMSE:\", np.sqrt(mean_squared_error(lgbmr_predictions, y_train)))\nprint(\"R-Squared:\", r2_score(y_train, lgbmr_predictions))","97218b53":"lgbmr_test_predictions = xgbr.predict(X_test)\nprint(\"RMSE:\", np.sqrt(mean_squared_error(lgbmr_test_predictions, y_test)))\nprint(\"R-Squared:\", r2_score(y_test, lgbmr_test_predictions))","a523239b":"* Both Linear Regression and Random Forest show similar cross validation scores","ea36c0c5":"* The house prices normally increase as the number of bathroom increase.","cead22a8":"* The house price rises as the Area increases.\n* There are some outliers with more than 10000 Area.","44d8ead2":"#### 1. Handling Outliers","228ddcd3":"* Majority of the houses are Semi-Furnished","d59bab46":"* Most of the houses are in ready to move condition.","06cbc56e":"### Cross-Validation","598acea0":"**This looks like a decent model:**\n\n1. R-Squared is 0.8139\n2. The predictions and the actual labels have a linear relation\n3. The difference between actual and predicted values is normally distributed","cf98c592":"### Continuous numeric features","57920798":"* Most of the houses have 2 bathrooms.\n* About 350 of the houses have 3 bathrooms.\n* There are about 150 houses which have 1 bathroom or 4 bathrooms.\n* Some houses do have more than 4 bathrooms as well.","80476deb":"* Upto 3 parking slots, the prices increase and further decreases.\n* There is only 1 record with Parking value as 9. This could an outlier.","ed5d90df":"* Majority of the houses are for Resale","69c2dbe8":"* The ready to move houses have a higher price.\n* Other than the Status, no other categorical column seems to have any major impact on the average price of the houses.","697a36f5":"# Exploratory Data Analysis","03ca6fd0":"# Model Building","d560995e":"* The column is right skewed","dda58648":"# Gradient Boosting, XGBoost, LGBM","ec88ebc4":"* The RMSE and R-Square looks better for Random Forest\n* We need to check for Overfitting though","f3c3f66f":"* We see that the prediction accuracy decreases on the test set, however Random Forest still preserves a higher accuracy","0b8fcead":"* There might be outliers in the data, specially in the columns: Area, Parking, Price and Per_Sqft","8b77b71e":"* There are no more missing values","c8da68db":"### Categorical Features","1da70213":"### Discrete numeric features","c767e7fd":"* There is concentration of data points when looked at the histogram of log of Area","da0becf8":"# How does the Target variable change with the independent features","749eb5da":"* Target variable \"Price\" is right skewed as well.","b41694f9":"* There are some missing values in the columns: Bathroom, Furnishing, Parking and Type","de00e9b5":"# Predicting on the test set","c3cde6b8":"* The houses see a rise in the Price as the number of BHK increase upto 5 and then it sees a sharp decline in the Prices for 6, 7 and 10","a62ed39c":"* Parking column have some offset values like 39 and 114. We might need to check on the validity of these entries.","07b240d3":"* There are more 3 BHK houses followed by 2 BHK, 4 BHK and 1 BHK.\n* There are few records available for 5, 6, 7 and 10 BHK as well.","b505d902":"* There seems to almost equal number of house types: Apartment and Builder Floor","00a2b3ad":"### 2. Handling Missing Values","6df832e6":"### Feature Engineering","bf9623e5":"* There is no visible trend in the actual values of the Per_Sqft with Price. However, the their logs show near linear relationship","83407817":"### Linear Regression","76f1ecad":"### Random Forest"}}