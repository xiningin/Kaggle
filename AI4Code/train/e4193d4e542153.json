{"cell_type":{"59eea64a":"code","ec9dad71":"code","ec1ccb99":"code","ba25f412":"code","4a0bca4f":"code","87b70c4b":"code","797d9290":"code","dadfc1f4":"code","2c4fcf8a":"code","890145b1":"code","d900f1e3":"code","6c4334b6":"code","6ae7071a":"code","7f327464":"code","0f97e218":"code","402a1b32":"code","5a90b8f3":"code","a738e54b":"code","2e0502f8":"code","a21f1788":"code","4be3d816":"code","1ba1f0d3":"code","10a79186":"code","d3114d2b":"code","53d60519":"code","16d7cdb4":"markdown","2f633689":"markdown","56220485":"markdown","aff316dc":"markdown","380b3cb7":"markdown","86cd01f3":"markdown","703192ac":"markdown","6bf7d25f":"markdown","6082aba0":"markdown","155dbec9":"markdown","ab2c713a":"markdown"},"source":{"59eea64a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ec9dad71":"# loading data\natletas = pd.read_csv('\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/athlete_events.csv')\nnoc_regions = pd.read_csv('\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/noc_regions.csv')","ec1ccb99":"# checking data\natletas.head(5)","ba25f412":"# checking data\nnoc_regions.head(5)","4a0bca4f":"print(f'The athlete_events file has {len(atletas)} rows and {len(atletas.columns)} columns')\nprint(f'The noc_regions file has {len(noc_regions)} rows and {len(noc_regions.columns)} columns')","87b70c4b":"# cleaning noc_regions file\nnoc_regions.head()\nnoc_regions.pop('notes')","797d9290":"# checking NULL values in the atletas file\natletas.isnull().sum()","dadfc1f4":"# number of unique athletes and Olympic Games\nnum_atl = atletas['Name'].nunique()\nnum_games = atletas['Games'].nunique()\nprint(f'120 years of history include {num_games} editions of Olympic Games which have already participated in total {num_atl:.0f} athletes')","2c4fcf8a":"# piechart\ngames = atletas.drop_duplicates(['Games'])\npiechart_data = games.groupby(\"Season\").count()\nexplode = (0, 0.1)\nfig1, ax1 = plt.subplots()\nlabels = ['Summer Games', 'Winter Games']\nax1.pie(piechart_data['Games'], explode=explode, labels = labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","890145b1":"# cleaning and completing data, leaving only winners\natletas_medalha = atletas[atletas['Medal'].isnull() == False]","d900f1e3":"atletas_medalha.head(5)","6c4334b6":"num_atl_med = atletas_medalha['Name'].nunique()\nprint(f'N\u00famero de medalhistas nas {num_games} Olimp\u00edadas disputadas nos 120 anos: {num_atl_med:.0f} atletas')","6ae7071a":"# checking null values\natletas_medalha.isnull().sum()","7f327464":"print(atletas_medalha['Age'].isnull().sum()\/len(atletas_medalha)*100)\nprint(atletas_medalha['Height'].isnull().sum()\/len(atletas_medalha)*100)\nprint(atletas_medalha['Weight'].isnull().sum()\/len(atletas_medalha)*100)","0f97e218":"atletas_medalha = atletas_medalha[atletas_medalha['Age'].isnull() == False] # removing Null values in 'Age column' ","402a1b32":"atletas_medalha.pop('Height')","5a90b8f3":"atletas_medalha.pop('Weight')","a738e54b":"merged = pd.merge(atletas_medalha, noc_regions, on='NOC', how = 'left')","2e0502f8":"merged.head(5)","a21f1788":"merged.isnull().sum()\n# 9 null values in region var - not a problem","4be3d816":"sns.set_theme(style=\"darkgrid\")\nsns.displot(\n    merged, x=\"Age\", hue=\"Medal\", col=\"Medal\",\n    binwidth=2, height=5, facet_kws=dict(margin_titles=True),\n)","1ba1f0d3":"sns.set_theme(style=\"darkgrid\")\nsns.displot(\n    merged, x=\"Age\", hue=\"Medal\", col=\"Sex\",\n    binwidth=2, height=5, facet_kws=dict(margin_titles=True),\n)","10a79186":"sns.set_theme(style=\"darkgrid\")\nsns.displot(\n    merged, x=\"Age\", hue=\"Medal\", row='Medal', col=\"Sex\",\n    binwidth=2, height=5, facet_kws=dict(margin_titles=True),\n)","d3114d2b":"top25 = merged.Name.value_counts().reset_index(name='Medal').head(25)\ng = sns.catplot(x=\"index\", y=\"Medal\", data=top25,\n                height=6, kind=\"bar\", palette=\"muted\")\ng.despine(left=True)\ng.set_xlabels(\"Top 25 Athletes\")\ng.set_ylabels(\"Number of Medals\")\ng.set_xticklabels(rotation=90)\nplt.title('Top 25')","53d60519":"top10countries = merged.region.value_counts().reset_index(name='Medal').head(10)\ng = sns.catplot(x=\"index\", y=\"Medal\", data=top10countries,\n                height=6, kind=\"bar\", palette=\"muted\")\ng.despine(left=True)\ng.set_xlabels(\"Top 10 Countries\")\ng.set_ylabels(\"Number of Medals\")\ng.set_xticklabels(rotation=90)\nplt.title('Top 10 Countries')","16d7cdb4":"**top 25 athletes of all times**","2f633689":"**top 10 countries**","56220485":"There are *null* values in the Age, Height, Weight and Medal columns.\nWe'll come back to those columns in the future.","aff316dc":"To be continued","380b3cb7":"**Medals distribution by Age and Sex**","86cd01f3":"EDA - historic of 120 years on the modern Olympic Game. \n\nThe dataset includes all the Games from Athens 1896 to Rio 2016 and have been scraped from www.sports-reference.com.","703192ac":"**51 editions of Olympic Games**","6bf7d25f":"* in column 'Age' there are 1.8% of missing values;\n* in column 'Height' there are 1.8% of missing values;\n* in column 'Weight' there are 1.8% of missing values;\n\nI don't think this data would be relevant for the analyses. So I'll just drop the columns 'Height' and 'Weight' and the rows with null values in the 'Age' column.","6082aba0":"**Medals distribution by Age**","155dbec9":"56.9% (29 editions) were Summer Games and 43.1% (22 editions) were Winter Games. \n","ab2c713a":"Going back to deal with the columns with Null values."}}