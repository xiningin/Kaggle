{"cell_type":{"9a248181":"code","02f2e56c":"code","7da27a59":"code","e7d701d8":"code","b0f37990":"code","7bf9505e":"code","79227fa6":"code","71224f20":"code","abb894fb":"code","7da64f47":"code","2fe546ab":"code","29795d94":"code","e0c3babd":"code","ca658078":"code","e72ccdc6":"code","a2a47e2f":"code","90b3f9cd":"code","4ffb5507":"code","66640c21":"code","2c9bb69d":"code","98aef5dd":"code","767b5600":"code","b02e8999":"code","2ad02d41":"code","759bb637":"code","398eff6b":"code","2b9f66e9":"code","4ea22455":"code","eb9e8175":"code","74e5fa1a":"code","22767033":"code","3c450426":"code","1911e5a4":"code","5f9dbc26":"code","e4d1c2d6":"code","8e997c76":"code","fdfe1c21":"code","9d950096":"code","056d12b4":"code","733adb04":"code","92bf2e8e":"code","2f919f20":"code","f4f79300":"code","65fd608c":"code","73cd949c":"code","d191480f":"code","a3295f33":"code","e49c8a8a":"markdown","d39e0efa":"markdown","242bbe95":"markdown","d3bcb6fe":"markdown","db5b9d91":"markdown","71d62f81":"markdown","b87c78af":"markdown","468e7936":"markdown","18f60cc5":"markdown","1e0b8473":"markdown","3e2394d9":"markdown","f1944174":"markdown","e915455e":"markdown","5f38682a":"markdown","cf404f08":"markdown","2ebaca63":"markdown","c22453cc":"markdown","6763779a":"markdown","2f7f3080":"markdown","a2271176":"markdown","925f8bda":"markdown","8389ad55":"markdown","9a33fadf":"markdown"},"source":{"9a248181":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","02f2e56c":"df=pd.read_csv('\/kaggle\/input\/sp-500-companies-with-financial-information\/financials.csv')","7da27a59":"df","e7d701d8":"df.describe()","b0f37990":"df.isnull().sum()","7bf9505e":"import seaborn as sns\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt","79227fa6":"sns.heatmap(df.corr())","71224f20":"a=pd.DataFrame(df.groupby('Sector')['Price'].mean())\nb=pd.DataFrame(df.groupby('Sector')['Price\/Earnings'].mean())\nc=pd.DataFrame(df.groupby('Sector')['Price\/Book'].mean())\na['sector']=a.index\nb['sector']=b.index\nc['sector']=c.index\nd=pd.merge(a,b)\ne=pd.merge(c,d)\ne=e.set_index('sector')","abb894fb":"e.plot.bar(figsize=(10,5))","7da64f47":"df.groupby('Sector')['Market Cap'].sum().plot.bar(figsize=(10,5))","2fe546ab":"df.groupby('Sector')['Market Cap'].sum().plot.pie(autopct=\"%.1f%%\",figsize=(10,5))","29795d94":"df_IT=df[df['Sector']=='Information Technology']\ndf_ID=df[df['Sector']=='Industrials']\ndf_HC=df[df['Sector']=='Health Care']\ndf_FI=df[df['Sector']=='Financials']\ndf_EN=df[df['Sector']=='Enegy']\ndf_CS=df[df['Sector']=='Consumer Staples']\ndf_CD=df[df['Sector']=='Consumer Discretionary']\ndf_UT=df[df['Sector']=='Utilities']\ndf_TS=df[df['Sector']=='Telecommunication Services']\ndf_RE=df[df['Sector']=='Real Estate']\ndf_MT=df[df['Sector']=='Materials']","e0c3babd":"df_IT1=df_IT[(df_IT['Price\/Earnings']<df_IT['Price\/Earnings'].mean()) &( df_IT['Price\/Book']<df_IT['Price\/Book'].mean())\n             &(df_IT['Price']<(df_IT['52 Week Low']+df_IT['52 Week High'])\/2)]\ndf_ID1=df_ID[(df_ID['Price\/Earnings']<df_ID['Price\/Earnings'].mean()) &( df_ID['Price\/Book']<df_ID['Price\/Book'].mean())\n             &(df_ID['Price']<(df_ID['52 Week Low']+df_ID['52 Week High'])\/2)]\ndf_HC1=df_HC[(df_HC['Price\/Earnings']<df_HC['Price\/Earnings'].mean()) &( df_HC['Price\/Book']<df_HC['Price\/Book'].mean())\n             &(df_HC['Price']<(df_HC['52 Week Low']+df_HC['52 Week High'])\/2)]\ndf_FI1=df_FI[(df_FI['Price\/Earnings']<df_FI['Price\/Earnings'].mean()) &( df_FI['Price\/Book']<df_FI['Price\/Book'].mean())\n             &(df_FI['Price']<(df_FI['52 Week Low']+df_FI['52 Week High'])\/2)]\ndf_EN1=df_EN[(df_EN['Price\/Earnings']<df_EN['Price\/Earnings'].mean()) &( df_EN['Price\/Book']<df_EN['Price\/Book'].mean())\n             &(df_EN['Price']<(df_EN['52 Week Low']+df_EN['52 Week High'])\/2)]\ndf_CS1=df_CS[(df_CS['Price\/Earnings']<df_CS['Price\/Earnings'].mean()) &( df_CS['Price\/Book']<df_CS['Price\/Book'].mean())\n             &(df_CS['Price']<(df_CS['52 Week Low']+df_CS['52 Week High'])\/2)]\ndf_CD1=df_CD[(df_CD['Price\/Earnings']<df_CD['Price\/Earnings'].mean()) &( df_CD['Price\/Book']<df_CD['Price\/Book'].mean())\n             &(df_CD['Price']<(df_CD['52 Week Low']+df_CD['52 Week High'])\/2)]\ndf_UT1=df_UT[(df_UT['Price\/Earnings']<df_UT['Price\/Earnings'].mean()) &( df_UT['Price\/Book']<df_UT['Price\/Book'].mean())\n             &(df_UT['Price']<(df_UT['52 Week Low']+df_UT['52 Week High'])\/2)]\ndf_TS1=df_TS[(df_TS['Price\/Earnings']<df_TS['Price\/Earnings'].mean()) &( df_TS['Price\/Book']<df_TS['Price\/Book'].mean())\n             &(df_TS['Price']<(df_TS['52 Week Low']+df_TS['52 Week High'])\/2)]\ndf_RE1=df_RE[(df_RE['Price\/Earnings']<df_RE['Price\/Earnings'].mean()) &( df_RE['Price\/Book']<df_RE['Price\/Book'].mean())\n             &(df_RE['Price']<(df_RE['52 Week Low']+df_RE['52 Week High'])\/2)]\ndf_MT1=df_MT[(df_MT['Price\/Earnings']<df_MT['Price\/Earnings'].mean()) &( df_MT['Price\/Book']<df_MT['Price\/Book'].mean())\n             &(df_MT['Price']<(df_MT['52 Week Low']+df_MT['52 Week High'])\/2)]","ca658078":"df_IT2=df_IT1.sort_values(by='EBITDA',ascending=False).head(20)\ndf_IT2","e72ccdc6":"df_ID2=df_ID1.sort_values(by='EBITDA',ascending=False).head(20)\ndf_ID2","a2a47e2f":"df_HC2=df_HC1.sort_values(by='EBITDA',ascending=False).head(20)\ndf_HC2","90b3f9cd":"df_FI2=df_FI1.sort_values(by='EBITDA',ascending=False).head(20)\ndf_FI2","4ffb5507":"df_EN2=df_EN1.sort_values(by='EBITDA',ascending=False).head(20)\ndf_EN2","66640c21":"df_CS2=df_CS1.sort_values(by='EBITDA',ascending=False).head(20)\ndf_CS2","2c9bb69d":"df_CD2=df_CD1.sort_values(by='EBITDA',ascending=False).head(20)\ndf_CD2","98aef5dd":"df_UT2=df_UT1.sort_values(by='EBITDA',ascending=False).head(20)\ndf_UT2","767b5600":"df_TS2=df_TS1.sort_values(by='EBITDA',ascending=False).head(20)\ndf_TS2","b02e8999":"df_RE2=df_RE1.sort_values(by='EBITDA',ascending=False).head(20)\ndf_RE2","2ad02d41":"df_MT2=df_MT1.sort_values(by='EBITDA',ascending=False).head(20)\ndf_MT2","759bb637":"sns.heatmap(df_IT.corr())","398eff6b":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()","2b9f66e9":"from sklearn.model_selection import train_test_split\nx = df_IT.drop(['Price','Symbol','Name','Sector','SEC Filings'],axis=1)\ny = df_IT['Price']","4ea22455":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=123)","eb9e8175":"lr.fit(x_train,y_train)","74e5fa1a":"print(lr.intercept_)\nprint(lr.coef_)","22767033":"prediction_IT = lr.predict(x_test)","3c450426":"from sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score","1911e5a4":"print('MAE:',mean_absolute_error(y_test, prediction_IT))\nprint('MSE:',mean_squared_error(y_test, prediction_IT))\nprint('RMSE:',np.sqrt(mean_squared_error(y_test, prediction_IT)))\nprint('R2:',r2_score(y_test, prediction_IT))","5f9dbc26":"sns.heatmap(df_FI.corr())","e4d1c2d6":"x2 = df_FI.drop(['Price','Symbol','Name','Sector','SEC Filings'],axis=1)\ny2 = df_FI['Price']","8e997c76":"x2_train,x2_test,y2_train,y2_test=train_test_split(x2,y2,test_size=0.3,random_state=123)","fdfe1c21":"lr.fit(x2_train,y2_train)","9d950096":"print(lr.intercept_)\nprint(lr.coef_)","056d12b4":"prediction_FI = lr.predict(x2_test)","733adb04":"print('MAE:',mean_absolute_error(y2_test, prediction_FI))\nprint('MSE:',mean_squared_error(y2_test, prediction_FI))\nprint('RMSE:',np.sqrt(mean_squared_error(y2_test, prediction_FI)))\nprint('R2:',r2_score(y2_test, prediction_FI))","92bf2e8e":"sns.heatmap(df_HC.corr())","2f919f20":"df_HC=df_HC.dropna(how='any')\nx3 = df_HC.drop(['Price','Symbol','Name','Sector','SEC Filings'],axis=1)\ny3 = df_HC['Price']","f4f79300":"x3_train,x3_test,y3_train,y3_test=train_test_split(x3,y3,test_size=0.3,random_state=123)","65fd608c":"lr.fit(x3_train,y3_train)","73cd949c":"print(lr.intercept_)\nprint(lr.coef_)","d191480f":"prediction_HC = lr.predict(x3_test)","a3295f33":"print('MAE:',mean_absolute_error(y3_test, prediction_HC))\nprint('MSE:',mean_squared_error(y3_test, prediction_HC))\nprint('RMSE:',np.sqrt(mean_squared_error(y3_test, prediction_HC)))\nprint('R2:',r2_score(y3_test, prediction_HC))","e49c8a8a":"Average Price by Sector and Average Price\/Earnings by Sector","d39e0efa":"**1. Information Technology Sector**","242bbe95":"Let's find top 20 EBITDA in below average PE and PB, and lower pirce than its 52 week average in each sectors.","d3bcb6fe":"Let's start to find good companies in each sectors.\nFirst, I will make DF of each sectors.","db5b9d91":"Thare are some difference between the sectors in PE and PB in average. It means that I have to find good companies by sector.","71d62f81":"**2.Industrials Sector**","b87c78af":"**Price prediction of IT Secotr, Financials Sector and Health Care Sector**","468e7936":"**8.Utilities Sector**","18f60cc5":"**3.Health Care Sector**","1e0b8473":"**6.Consumer Staples Sewctor**","3e2394d9":"I tried two things.\n1.I tried to find good companies to invest in the point of below views.\n1) Sectors\n2) PE\n3) PB\n4) EBITDA\nI could find compnies in each sector to good for invest.\n\n2.Prediction Model of 3 Sector.\nI built prediction model of Information Technology Sector, Finansilas Sector and Health Care Sector, which occupy 50% of Total Market Cap.","f1944174":"IT sector is a largest Market Cap, and Financials, Health Cate and Consumer Discretionary are following.","e915455e":"Find the companies whose both PE and PB are below avarage of the sector, and Price is also below its average of 52 week high and low.","5f38682a":"**11.Materials Sector**","cf404f08":"**5. Energy Sector**","2ebaca63":"**1.Information Technology Sector**","c22453cc":"**3.Health Care Sector**","6763779a":"**2.Funancials Sector**","2f7f3080":"**4.Financials Sector**","a2271176":"Market Cap by Sector","925f8bda":"**7.Consumer Discretionary Sector**","8389ad55":"**10.Real Estate Sector**","9a33fadf":"**9.Telecommunication Service Sector**"}}