{"cell_type":{"a036bd57":"code","f827f96f":"code","69c23e69":"code","5845f586":"code","a479147c":"code","824ff0d6":"code","306b8980":"code","42fcf1c8":"code","064df503":"code","ef2014b2":"code","a64f050f":"code","3b9ff129":"code","016d87f6":"code","526c4e28":"code","146bdd5c":"code","ac88f027":"code","6851a19a":"code","6a05c708":"code","beaeff5b":"code","6ae490ba":"code","e2e5df13":"code","f2ff8b85":"code","efff99a3":"code","607c3398":"code","4a4b96ea":"code","195fb15d":"code","8e7eff1e":"code","f73cfff0":"code","4032e0aa":"code","a685fe6f":"code","a9290dd6":"code","e716d0f2":"code","bf42ad59":"code","d0e11637":"code","943ec102":"code","9694e96e":"code","6fc92c7c":"code","ad2b37fd":"code","cd888689":"code","5ac998c4":"code","47d0db72":"code","6d5e4ffc":"code","48a494d8":"code","06fa4663":"code","a1cb8195":"code","2b76c00d":"code","792571b2":"code","e9f2a359":"markdown","b70ffd3e":"markdown","1ef0d965":"markdown","911c3b89":"markdown","48393b91":"markdown","0b4205a5":"markdown","d0c5ef20":"markdown","2a521b47":"markdown","6f46efc6":"markdown","a7ac1297":"markdown","3283aebb":"markdown","fa2d68c7":"markdown","cf462c48":"markdown","8b2e3818":"markdown","43990727":"markdown","a26803b9":"markdown"},"source":{"a036bd57":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression  \nimport seaborn as sns\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score\nimport xgboost as xgb\nfrom sklearn.neural_network import MLPRegressor as MLPR\nfrom sklearn.metrics import  mean_squared_error","f827f96f":"# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nfor dirname, _, filenames in os.walk('..\/input\/ieee-pes-bdc-datathon-year-2020'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","69c23e69":"train=pd.read_csv('..\/input\/ieee-pes-bdc-datathon-year-2020\/train.csv')\ntest=pd.read_csv('..\/input\/ieee-pes-bdc-datathon-year-2020\/test.csv')","5845f586":"test.head()","a479147c":"x_test=test.iloc[:,:].values\nx_test=x_test[:,1:]\ntest_ID=x_test[:,0]","824ff0d6":"train.head()","306b8980":"train=train.drop(columns=['ID'],axis=0)\ntrain.head()","42fcf1c8":"corr = train.corr()\nmask = np.triu(np.ones_like(corr, dtype=np.bool))\nf, ax = plt.subplots(figsize=(8, 5))\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","064df503":"#train.shape\ntrain=np.array(train)\nx=train[:,1:]\ny=train[:,0]","ef2014b2":"x_train,x_valid,y_train,y_valid=train_test_split(x,y,test_size=0.2,shuffle=True)","a64f050f":"\nLR=LinearRegression(normalize=True)\nLR.fit(x_train,y_train)","3b9ff129":"#LR.coef_\nLR.score(x_valid,y_valid)","016d87f6":"y_pred=LR.predict(x_test)\ny_pred = [0 if p<0 else p for p in y_pred]\ny_pred=np.array(y_pred)","526c4e28":"y_pred.shape\ny_pred","146bdd5c":"v_pred=LR.predict(x_valid)\nv_pred = [0 if p<0 else p for p in v_pred]\nv_pred=np.array(v_pred)","ac88f027":"mse=mean_squared_error(y_valid, v_pred)\n\nprint(np.sqrt(mse))","6851a19a":"DF=pd.DataFrame({'actual':y_valid.flatten(),'predcited':v_pred.flatten()})\nDF\n","6a05c708":"plt.scatter(v_pred,y_valid)\nplt.show()","beaeff5b":"from sklearn.tree import DecisionTreeRegressor\nmodel = DecisionTreeRegressor()\nmodel.fit(x_train, y_train)","6ae490ba":"yp=model.predict(x_test)\nyp = [0 if p<0 else p for p in yp]\nyp=np.array(yp)","e2e5df13":"yp.shape\nyp","f2ff8b85":"vyp=model.predict(x_valid)\nvyp = [0 if p<0 else p for p in vyp]\nvyp=np.array(vyp)","efff99a3":"mse=mean_squared_error(y_valid, vyp)\n\nprint(np.sqrt(mse))","607c3398":"com=pd.DataFrame({'actual':y_valid.flatten(),'predcited':vyp.flatten()})\ncom\n","4a4b96ea":"model.score(x_valid,y_valid)","195fb15d":"from sklearn.ensemble import RandomForestRegressor\nRFR = RandomForestRegressor()\nRFR.fit(x_train, y_train)","8e7eff1e":"Ypred=RFR.predict(x_test)\nYpred = [0 if p<0 else p for p in Ypred]\nYpred=np.array(Ypred)","f73cfff0":"Ypred.shape\nYpred","4032e0aa":"vYpred=RFR.predict(x_valid)\nvYpred = [0 if p<0 else p for p in vYpred]\nvYpred=np.array(vYpred)","a685fe6f":"Ypred.shape","a9290dd6":"RFR.score(x_valid,y_valid)","e716d0f2":"\nmse=mean_squared_error(y_valid, vYpred)\n\nprint(np.sqrt(mse))","bf42ad59":"c=pd.DataFrame({'actual':y_valid.flatten(),'predcited':vYpred.flatten()})\nc\n","d0e11637":"xgb_model = xgb.XGBRegressor(objective=\"reg:linear\", random_state=42)\n\nxgb_model.fit(x_train, y_train)\n\ny_pred = xgb_model.predict(x_test)","943ec102":"y_pred  = [0 if p<0 else p for p in y_pred]\ny_pred =np.array(y_pred )","9694e96e":"y_pred.shape\n#y_pred","6fc92c7c":"vy_pred = xgb_model.predict(x_valid)\nvy_pred  = [0 if p<0 else p for p in vy_pred]\nvy_pred =np.array(vy_pred )","ad2b37fd":"x=pd.DataFrame({'actual':y_valid.flatten(),'predcited':vy_pred.flatten()})\nx\n","cd888689":"from sklearn.metrics import  mean_squared_error\nmse=mean_squared_error(y_valid, vy_pred)\n\nprint(np.sqrt(mse))","5ac998c4":"regr = MLPR(random_state=1, hidden_layer_sizes = (32, 8, 2), max_iter=10, validation_fraction=0.1, learning_rate_init=0.001, verbose=True)\nregr.fit(x_train, y_train)","47d0db72":"preds = regr.predict(x_test)\npreds = [0 if p<0 else p for p in preds] # Since GHI can not be less than 0\npreds =np.array(preds)","6d5e4ffc":"vpreds = regr.predict(x_valid)\nvpreds = [0 if p<0 else p for p in vpreds]\nvpreds =np.array(vpreds)","48a494d8":"mse=mean_squared_error(y_valid, vpreds)\n\nprint(np.sqrt(mse))","06fa4663":"n=pd.DataFrame({'actual':y_valid.flatten(),'predcited':vpreds.flatten()})\nn\n","a1cb8195":"test_ID=test[\"ID\"]\nprint(test_ID.shape,Ypred.shape)\ntest_ID","2b76c00d":"zippedList =  list(zip( test_ID, Ypred))\nsubmission = pd.DataFrame(zippedList, columns = ['ID','global_horizontal_irradiance'])\nsubmission.to_csv('submission.csv', index=False)","792571b2":"s=pd.read_csv('submission.csv')\ns.head()","e9f2a359":"# Let's see the correlation!!","b70ffd3e":"# Algo:LinearRegression","1ef0d965":"Get an Idea of RMSE by validationset","911c3b89":"# Features and target","48393b91":"# Train and Validation split then fit the model","0b4205a5":"Get an Idea of RMSE by validationset","d0c5ef20":"# Importing Necessary Libraries","2a521b47":"Get an Idea of RMSE by validationset","6f46efc6":"# NN","a7ac1297":"Get an Idea of RMSE by validationset","3283aebb":"# XGBoost","fa2d68c7":"# Algo:RandomForestRegressor","cf462c48":"# Loading Dataset","8b2e3818":"It is a known fact that the GHI score depends on several parameters such as precipitation, atmospheric pressure, relative humidity, air temperature, wind direction and wind speed. But their proper relation is unknown. Our objective is to find a relation between GHI and these parameters.\n\n ","43990727":"Get an Idea of RMSE by validationset","a26803b9":"# Algo:DecisionTreeRegressor"}}