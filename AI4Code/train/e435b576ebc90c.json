{"cell_type":{"aee28d0d":"code","fbed1007":"code","06f327d3":"code","47c3068e":"code","bfc24202":"markdown"},"source":{"aee28d0d":"import itertools\nimport numpy as np","fbed1007":"def mincost(a:np.array) -> float:\n    n, k = a.shape[0], a.shape[1]\n    if n < k:\n        a = np.append(a, np.zeros((k-n,k)), axis=0)\n    perm = itertools.permutations([i for i in range(k)])\n    price = np.inf\n    q = [i for i in range(k)]\n    for p in perm:\n        s = 0\n        for i in range(k):\n            s += a[i,p[i]]\n        if s < price:\n            price = s\n            q = p\n    return price, q[:n]        ","06f327d3":"a = np.random.randint(1,10,(2,3))\n#a = np.append(a, np.zeros((2,3)), axis=0)\nmincost(a),a","47c3068e":"for i in range(2,5):\n    for j in range(2,4):\n        a = np.random.randint(1,10,(i,j))\n        print(a, mincost(a), '\\n\\n')\n        ","bfc24202":"Good morning! Here's your coding interview problem for today.\n\nThis problem was asked by Facebook.\n\nA builder is looking to build a row of N houses that can be of K different colors. He has a goal of minimizing cost while ensuring that no two neighboring houses are of the same color.\n\nGiven an N by K matrix where the nth row and kth column represents the cost to build the nth house with kth color, return the minimum cost which achieves this goal."}}