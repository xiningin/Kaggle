{"cell_type":{"32dd5d77":"code","7519f800":"code","ba0fdf13":"code","dc1294e3":"code","90fe235f":"code","846ab657":"code","ba59b520":"code","4b805e17":"markdown","1fe6974f":"markdown","c7d4686b":"markdown","f0a28d12":"markdown","a8f83cbb":"markdown","061fa35e":"markdown","381758e6":"markdown","1739f370":"markdown"},"source":{"32dd5d77":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","7519f800":"# we will be using only the following columns \n# Date ,State\/Union Territory & Confirmed Count\n\nuse_columns = ['Date' , 'State\/UnionTerritory', 'Confirmed']\nimport pandas as pd\ndf = pd.read_csv('\/kaggle\/input\/covid19-in-india\/covid_19_india.csv' , usecols = use_columns)\n# Let us convert the date from String into YYYY-MM-DD format using pandas to_datetime function\ndf['Date'] =pd.to_datetime(df['Date'] , format='%d\/%m\/%y')\ndf.head(5)\n","ba0fdf13":"import matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport matplotlib.animation as animation\nfrom IPython.display import HTML\ncurrent_date = '2020-04-30'\ndf_10 = (df[df['Date']==current_date]\n       .sort_values(by='Confirmed', ascending=False)\n       .head(10))\nprint(df_10)\n\nfig, ax = plt.subplots(figsize=(16, 8))\nax.barh(df_10['State\/UnionTerritory'], df_10['Confirmed'])","dc1294e3":"fig, ax = plt.subplots(figsize=(16, 8))\ndf_10= df_10[::-1]   # States with highest count will be pushed down - so that it shows up in the graph\n\nax.barh(df_10['State\/UnionTerritory'], df_10['Confirmed'] , color ='plum')\n\nfor i, (count, region) in enumerate(zip(df_10['Confirmed'], df_10['State\/UnionTerritory'])):\n    ax.text(count, i,     region,      size=12,      ha='right' )  # Maharashtra\n    ax.text(count, i,     count,       size=12  ,  ha='left')   # 9915\n\nax.text(1, 0.4, current_date, transform=ax.transAxes, size=40, ha='right') # add the date ","90fe235f":"fig, ax = plt.subplots(figsize=(16, 8))\ndef draw_horizontal_bar (date):\n    ax.clear()  # this is important - as each function execution should run on fresh axis \n    df_10 = (df[df['Date']==date].sort_values(by='Confirmed', ascending=False).head(10))\n    df_10= df_10[::-1] # flip the values\n    ax.barh(df_10['State\/UnionTerritory'], df_10['Confirmed'] , color ='plum')\n    filler = df_10['Confirmed'].max() \/100 #  to add space between the States\/UnionTerritory Name and the count\n    \n    for i, (count, region) in enumerate(zip(df_10['Confirmed'], df_10['State\/UnionTerritory'])):\n        ax.text(count -filler, i,     region,      size=12,  weight =400,    ha='right' )  # Maharashtra\n        ax.text(count +filler , i,     count,       size=12  ,  ha='left')   # 9915\n\n    ax.text(1, 0.4, date, transform=ax.transAxes, size=40, ha='right') # add the date \n    ax.text(0, 1.08, 'COVID confirmed cases', transform=ax.transAxes, size=18, color='black')\n    ax.xaxis.set_ticks_position('top')\n    ax.grid(which='major', axis='x', linestyle='-')\n    ax.set_yticks([])\n    ax.text(0, 1.20, 'States with highest COVID 19 Confirmed Cases in INDIA',\n            transform=ax.transAxes, size=24,  ha='left')\n    plt.box(False) # remove the box \n    \n\ndraw_horizontal_bar('2020-04-30')","846ab657":"# Lets us get all the dates \n\nall_dates = df[df['Date'] >= '2020-04-01']['Date'].astype(str).to_list() # this is contain duplicates\ndates = list(set(all_dates)) # we get uniques dates - but they are not sorted\ndates = sorted(dates) # all dates arranged in order \n\nimport matplotlib.animation as animation # import animation \nfrom IPython.display import HTML\nfig, ax = plt.subplots(figsize=(16, 8))\nanim = animation.FuncAnimation(fig, draw_horizontal_bar, frames=dates) # this will call our \n# function for all the dates one by one\nHTML(anim.to_jshtml()) \n\n\n","ba59b520":"f = r\"covid_india.gif\" \nwritergif = animation.PillowWriter(fps=4) \nanim.save(f, writer=writergif)","4b805e17":"**We will be using COVID 19 India Data Set for this notebook.We can add the data COVID 19 India dataset using the add data option and search for \"COVID 19 INDIA\". Let's take a glimpse at the data by listing all the files we added.**","1fe6974f":"**We will be using covid_19_india.csv for our visualization. So lets us load the data and take a glimpse at the information available **\n\n1. Sno = Serial Number\n2. Date = Date of recording the Covid 19 count (format DD\/MM\/YY)\n3. Time = Time of recording the Covid 19 count\n4. State\/UnionTerritory = Contains the full name of the State or the Union Territory \n5. ConfirmedIndianNational = Confirmed Indian National having Covid 19 as of this date in a given State or Union Territory\n6. ConfirmedForeignNational = Confirmed Foreign National having Covid 19 as of this date in a given State or Union Territory\n7. Cured = Count of Patient recovered or cured as of this date in a given State or Union Territory\n8. Deaths = Count of patient who have died as of this date in a given State or Union Territory\n9. Confirmed = Count of Total Patient having Covid 19 as of this date in a given State or Union Territory\n","c7d4686b":"# Lets create the animation from 1st of April ","f0a28d12":"# Running Bar Chart using Python Matplolib library in few lines of codes\n\n## Mustafa Fatakdawala May 2020\n\n\n**We will be creating a running bar chart as shown below**\n\n![covid_india.jpg](attachment:covid_india.jpg)\n","a8f83cbb":"# Lets store our animation as a GIF image","061fa35e":"# Let us get the 10 States\/Union Territory with the highest Confirmed cases for a given day and plot the horizontal bar graph","381758e6":"# Since we are getting the States\/Union Territory with the highest count at the bottom , let's flip it and add some colors and style\n","1739f370":"# Mission accomplished - now lets create a function which takes input as a date and produce the above graph"}}