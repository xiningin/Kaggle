{"cell_type":{"4961cc48":"code","a12007fe":"code","892375df":"code","2d0c139d":"code","7d5bdece":"code","6132c044":"code","d5662211":"code","1ebf5236":"code","3f579039":"code","ce6e04d2":"code","927984e3":"code","3b62b053":"code","4c934367":"code","af1f9812":"code","9f509732":"code","04594de9":"code","258b59d3":"code","7a8103b9":"code","b1284f4b":"code","ba3e1514":"code","d818c4c5":"code","0d2315c5":"code","742bed5e":"code","adba6c29":"code","64e58831":"code","8ff8bc4a":"code","3f1b8c2a":"code","99e4babf":"code","f1cccbf3":"markdown","951b55ab":"markdown","00d1aaa0":"markdown","43327bbf":"markdown","f73454b8":"markdown","f52b338e":"markdown","f6033c80":"markdown","b0bf8abb":"markdown","f43e87c8":"markdown","45fda4ee":"markdown","38040a24":"markdown","9aae8c28":"markdown","984be4bc":"markdown","dc059b0d":"markdown","383b5be5":"markdown","949a20f5":"markdown","ccf86d39":"markdown","d07b1022":"markdown","1ac7937a":"markdown","b69bd84a":"markdown","3cbb872c":"markdown","08062739":"markdown","8c2c18bc":"markdown","20ee7ce5":"markdown","ab517c9c":"markdown","c935bb7c":"markdown","c249d86e":"markdown","904fa7ac":"markdown","d74e1303":"markdown","fabff37f":"markdown","f31db405":"markdown","71387b4c":"markdown"},"source":{"4961cc48":"import pandas as pd, numpy as np, os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport gc\nimport warnings\nwarnings.filterwarnings('ignore')\npd.set_option('max_columns', None)\nfrom matplotlib.ticker import FuncFormatter\n\nPAL = ['#336b87', '#b4b4b4','#dd4124','#009473','#F1C40F','#DFFF00','#40E0D0','#6495ED','#FF0000','#00FF00','#0000FF','#FF00FF','#800080'] # blue,grey,orange,green,yellow\n\n%matplotlib inline","a12007fe":"#funtion to clean plot\ndef setup_plot(w=1,h=1,rows=1,cols=1,X_label='',y_label='',dpi=600):\n    '''\n    w: width of the figsize parameter of matplotlib.pyplot\n    h: height of the figsize parameter of matplotlib.pyplot\n    rows: numbers of rows in gridspec\n    cols: numbers of cols in gridspec\n    X_label: Label of the x-axis\n    y_label: Label of the y-axis\n    dpi: to set dpi for the figure.dpi\n    Return axes (only single axes for now, still working on the multiple axes)\n    \n    design by @ankitkalauni\n    '''\n    #setting plot theme\n    plt.rcParams['figure.dpi'] = dpi\n\n    fig = plt.figure(figsize=(w,h), facecolor='#f6f5f5')\n    gs = fig.add_gridspec(rows, cols)\n    gs.update(wspace=1.5, hspace=0.05)\n\n    background_color = \"#f6f5f5\"\n    sns.set_palette(PAL)\n    \n    #making single ax\n    ax_dict = {}\n    for row in range(rows):\n        for col in range(cols):\n            ax_dict[\"ax%s%s\" %(row,col)] = fig.add_subplot(gs[row, col])\n\n    locals().update(ax_dict)\n\n    #setting theme for every ax in local()\n    for row in range(rows):\n        for col in range(cols):\n                    \n            for s in [\"right\", \"top\"]:\n                locals()['ax' + str(row) + str(col)].spines[s].set_visible(False)\n                \n            locals()['ax' + str(row) + str(col)].set_facecolor(background_color)\n\n            locals()['ax' + str(row) + str(col)].set_facecolor(background_color)\n            locals()['ax' + str(row) + str(col)].set_xlabel(X_label,fontsize=3, weight='bold')\n            locals()['ax' + str(row) + str(col)].set_ylabel(y_label,fontsize=3, weight='bold')\n\n            locals()['ax' + str(row) + str(col)].tick_params(labelsize=3, width=0.5, length=1.5)\n            locals()['ax' + str(row) + str(col)].grid(which='major', axis='x', zorder=0, color='#EEEEEE', linewidth=0.4)\n            locals()['ax' + str(row) + str(col)].grid(which='major', axis='y', zorder=0, color='#EEEEEE', linewidth=0.4)\n\n    return locals()['ax' + str(row) + str(col)]\n\n#function to map columns with its new name and return it as dataframe\ndef clean(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    re = pd.DataFrame(ddict.items())\n    re.iloc[:,-1] = re.iloc[:,-1].astype('int32')\n    re.columns = ['Cloud Notebook\\'s','values']\n    return re\n\n#function to map columns with its new name and return it as dictionary\ndef clean_dict(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    return ddict\n\ndef map_col(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n\n\n    ddict = {}\n    for index, i in enumerate(x):\n        ddict[str(x[index])] = data[i].value_counts().keys()[0]\n    return ddict\n\n#below function copied from @Ruchi Bhatia\ndef visualize_relation(start_slice, end_slice, new_col_names, old_col, new_col, xlabel, title, p1,p2,W=1,H=1):\n    df_sliced = df.iloc[:,start_slice:end_slice].iloc[1:]\n\n    df_sliced = df_sliced.rename(columns=new_col_names).fillna(0).replace('[^\\\\d]',1, regex=True)\n    df_sliced = df_sliced.join(df[old_col])\n\n    df_sliced_stats = pd.DataFrame()\n    for col in df_sliced.columns[:-1]:\n        df_sliced_stats[col] = df_sliced.groupby(old_col)[col].mean().values\n\n    df_sliced = df_sliced.rename(columns={old_col:new_col})\n    df_sliced_stats.index = df_sliced.groupby(new_col)[list(new_col_names.items())[0][1]].mean().index\n\n    cmap = sns.diverging_palette(p1, p2, as_cmap=True)\n    display(df_sliced_stats.style.background_gradient(cmap, axis=0).format(\"{:.0%}\"))\n\n    df_sliced_stats[new_col] = df_sliced_stats.index\n    for i in range(len(df_sliced_stats.columns[:-1])):\n        color = PAL[i]\n        col = df_sliced_stats.columns[i]\n        if i ==0:\n            ax = df_sliced_stats.plot(kind=\"scatter\", x=col,y=new_col, color=color, label=col,ax=setup_plot(w=W,h=H,X_label=xlabel,y_label=''),alpha=.6, s=30)\n        else:\n            ax = df_sliced_stats.plot(kind=\"scatter\", x=col,y=new_col, color=color, label=col,ax=ax, s=30,alpha=.6)\n    ax.xaxis.set_major_formatter(FuncFormatter(lambda y, _: '{:.0%}'.format(y))) \n    ax.set_xlabel(xlabel)\n    ax.legend(loc='upper right',bbox_to_anchor=(1.55, 1), frameon=False)\n    ax.set_title(title,font=\"Serif\")\n    plt.show()","892375df":"#reading dataframe\ndf = pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv')","2d0c139d":"print(df.shape)\n_df_ = df[df.Q3 == 'India'] #my country\nprint(_df_.shape)\n\ndf.head(2)","7d5bdece":"#q1\n_q = str(df.iloc[0,1])\n_df = df.iloc[1:,1]\ngender = df.iloc[1:,2]\n_df = pd.concat([_df,gender],axis=1)\n\n_df['sort'] = _df['Q1'].str.extract('(^[0-9]{2})', expand=False).astype(int)\n_df.sort_values('sort',inplace=True, ascending=True)\n_df = _df.drop('sort', axis=1)\n\nq1 = sns.histplot(x = _df.Q1,ax=setup_plot(w=4,h=1,X_label='Age Group',y_label='Count'),zorder=4,linewidth=0.2,hue=_df.Q2,multiple='dodge')\nplt.title(_q,fontsize=4, weight='bold',ha='left',loc='left')\n\nmean=_df['Q1'].value_counts().values.mean()\nmedian=np.median(_df['Q1'].value_counts().values)\n\nq1.axhline(mean, color='r', linestyle='--',linewidth=0.7)\nq1.axhline(median, color='g', linestyle='-',linewidth=0.7)\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmin,ymax+140,'Age-group of  All Countries',fontsize=3,ha='left')\n# plt.xticks(rotation=45)\n\nq1.legend(['Mean','Median','NonBinary','Prefer to self-describe','Prefer not to say','Women','Man'], facecolor='#D8D8D8', edgecolor='#f6f5f5', fontsize=3, bbox_to_anchor=(1, 1.3), loc='upper right')\n\nplt.show()\n\ndel gender, _df\ngc.collect()","6132c044":"#q3\n_q = 'What is your age?'\ngender = df.iloc[1:,1]\n\n_x = gender.value_counts().values\n_y = gender.value_counts().index\n\nq1 = sns.barplot(y =_y,x=_x ,ax=setup_plot(w=1,h=2,X_label='Counts',y_label='Age'),zorder=2,linewidth=0.2,color='#009473',ec='black')\nplt.title(_q,fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\n\nplt.text(xmax+1000,ymax,'Age Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/gender.shape[0]):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 150\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()\n\ndel gender, _x, _y\ngc.collect()","d5662211":"#q1\n_q = 'What is your age?'\n_df = _df_.iloc[1:,1]\ncountry = _df_.iloc[1:,3]\ngender = _df_.iloc[1:,2]\n_df = pd.concat([_df,gender,country],axis=1)\n\n#sort the values according the age-group\n_df['sort'] = _df['Q1'].str.extract('(^[0-9]{2})', expand=False).astype(int)\n_df.sort_values('sort',inplace=True, ascending=True)\n_df = _df.drop('sort', axis=1)\n\n#only seeing dataframe where counry is india\n_df = _df[_df.Q3 == 'India']\n\nq1 = sns.histplot(x = _df.Q1,ax=setup_plot(w=4,h=1,X_label='Age Group',y_label='Count'),zorder=4,linewidth=0.2,hue=_df.Q2,multiple='dodge')\nplt.title('What is your age (# years)?',fontsize=4, weight='bold',ha='left',loc='left')\n\n#plot mean and median\nmean=_df['Q1'].value_counts().values.mean()\nmedian=np.median(_df['Q1'].value_counts().values)\nq1.axhline(mean, color='r', linestyle='--',linewidth=0.7)\nq1.axhline(median, color='g', linestyle='-',linewidth=0.7)\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmin,ymax+100,'Age-group from India',fontsize=3,ha='left')\n\nq1.legend(['Mean','Median','NonBinary','Prefer to self-describe','Prefer not to say','Women','Man'], facecolor='#D8D8D8', edgecolor='#f6f5f5', fontsize=3, bbox_to_anchor=(1, 1.01), loc='upper right')\n\nplt.show()\n\ndel gender, _df\ngc.collect()","1ebf5236":"#q3\n_q = 'What is you gender?'\ngender = df.iloc[1:,2]\n\n_x = gender.value_counts().values\n_y = gender.value_counts().index\n\nq1 = sns.barplot(y =_y,x=_x ,ax=setup_plot(w=1,h=1,X_label='Counts',y_label='Genders'),zorder=2,linewidth=0.2,color='#009473',ec='black')\nplt.title(_q,fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmax+11000,ymax,'Genders Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/gender.shape[0]):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 500\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()\n\ndel gender, _x, _y\ngc.collect()","3f579039":"#q3\n_q = str(df.iloc[0,3])\ncountry = df.iloc[1:,3]\n\n_x = country.value_counts().values\n_y = ['India', 'United States of America', 'Other', 'Japan', 'China',\n       'Brazil', 'Russia', 'Nigeria',\n       'United Kingdom', 'Pakistan',\n       'Egypt', 'Germany', 'Spain', 'Indonesia', 'Turkey', 'France',\n       'South Korea', 'Taiwan', 'Canada', 'Bangladesh', 'Italy', 'Mexico',\n       'Viet Nam', 'Australia', 'Kenya', 'Colombia', 'Poland',\n       'Iran, Islamic Republic of...', 'Ukraine', 'Singapore', 'Argentina',\n       'Malaysia', 'Netherlands', 'South Africa', 'Morocco', 'Israel',\n       'Thailand', 'Portugal', 'Peru', 'United Arab Emirates', 'Tunisia',\n       'Philippines', 'Sri Lanka', 'Greece', 'Chile', 'Ghana', 'Saudi Arabia',\n       'Ireland', 'Sweden', 'Hong Kong (S.A.R.)', 'Nepal', 'Switzerland',\n       'confidential', 'Belgium', 'Czech Republic',\n       'Romania', 'Austria', 'Belarus', 'Ecuador', 'Denmark', 'Uganda',\n       'Kazakhstan', 'Norway', 'Algeria', 'Ethiopia', 'Iraq']\n\nq1 = sns.barplot(y =_y,x=_x ,ax=setup_plot(w=1,h=8,X_label='Counts',y_label='Country'),zorder=2,linewidth=0.2,color='#dd4124',ec='black')\nplt.title(_q,fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmax+4000,ymax,'Age-Group Plot with Genders',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/country.shape[0]):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 200\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()\n\ndel  _x, _y\ngc.collect()","ce6e04d2":"#q3\n_q = str(df.iloc[0,4])\nplot = df.iloc[1:,4]\n\n_x = plot.value_counts().values\n_y = ['Master\u2019s degree', 'Bachelor\u2019s degree', 'Doctoral degree',\n       'Some studies without bachelor\u2019s degree',\n       'I prefer not to answer', 'No formal education past high school',\n       'Professional doctorate']\n\nq1 = sns.barplot(y =_y,x=_x ,ax=setup_plot(w=1,h=1,X_label='Counts',y_label='attain within 2yrs'),zorder=2,linewidth=0.2,color='#b4b4b4',alpha=1,ec='black')\nplt.title('highest level of formal education',fontsize=4, weight='bold',ha='right',loc='right')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmax+5500,ymax,'Qualification Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/country.shape[0]):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 500\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","927984e3":"#q3\n_q = str(df.iloc[0,5])\nplot = df.iloc[1:,5]\n\n_x = plot.value_counts().values\n_y = plot.value_counts().index\n\nq1 = sns.barplot(y =_y,x=_x ,ax=setup_plot(w=1,h=2,X_label='Counts',y_label='title most similar to your current role'),zorder=2,linewidth=0.2,color='#336b87',ec='black')\nplt.title('Current Role',fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmax+4000,ymax,'Qualification Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/country.shape[0]):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 200\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","3b62b053":"#q3\n_q = str(df.iloc[0,6])\nplot = df.iloc[1:,6]\n\n_x = plot.value_counts().values\n_y = plot.value_counts().index\n\nq1 = sns.barplot(y =_y,x=_x ,ax=setup_plot(w=1,h=1,X_label='Counts',y_label='Coding Experience in yrs'),zorder=2,linewidth=0.2,color='#009473',ec='black')\nplt.title('Experience in coding Plot',fontsize=4, weight='bold',ha='right',loc='right')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\n\nplt.text(xmax+5000,ymax,'Experience Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/country.shape[0]):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 250\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","4c934367":"def clean(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q7_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    re = pd.DataFrame(ddict.items())\n    re.iloc[:,-1] = re.iloc[:,-1].astype('int32')\n    re.columns = ['Programming Languages','values']\n    return re\n\nplot = clean(df,'Q7_Part_',12)\n_all = plot['values'].sum()\nplot = plot.sort_values(['values'],ascending=False)\n\nq1 = sns.barplot(y =plot['Programming Languages'],x=plot['values'],ax=setup_plot(w=1,h=2,X_label='Counts',y_label='Programming Languages'),zorder=2,linewidth=0.2,color='#009473',ec='black')\n                   \nplt.title('Most Used Programming Languages',fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmax+10000,ymax,'programming languages Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/_all):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 600\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","af1f9812":"#q3\n_q = str(df.loc[0,'Q8'])\nplot = df.loc[1:,'Q8']\n\n_x = plot.value_counts().values\n_y = plot.value_counts().index\n\nq1 = sns.barplot(y =_y,x=_x ,ax=setup_plot(w=1,h=2,X_label='Counts',y_label='Recommend Programming Language for DS'),zorder=2,linewidth=0.2,color=PAL[2],ec='black')\nplt.title('Recommend Programming Language\\nfor Aspiring Data Scientist',fontsize=3, weight='bold',ha='right',loc='right')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\n\nplt.text(xmax+7000,ymax,'Experience Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/country.shape[0]):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 550\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","9f509732":"def clean(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q9_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    re = pd.DataFrame(ddict.items())\n    re.iloc[:,-1] = re.iloc[:,-1].astype('int32')\n    re.columns = ['IDE\\'s','values']\n    return re\n\nplot = clean(df,'Q9_Part_',12)\n_all = plot['values'].sum()\nplot = plot.sort_values(['values'],ascending=False).reset_index(drop=True)\n\nplot.iloc[0,-1] = int(plot.iloc[0,-1]) + 5488\nplot.drop(3,inplace=True)\n\nq1 = sns.barplot(y =plot['IDE\\'s'],x=plot['values'],ax=setup_plot(w=1,h=2,X_label='Counts',y_label='IDE\\'s'),zorder=2,linewidth=0.2,color=PAL[-3],ec='black')\n                   \nplt.title('Most Used IDE',fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmax+10000,ymax,'programming languages Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/_all):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 600\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","04594de9":"def clean(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q10_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    re = pd.DataFrame(ddict.items())\n    re.iloc[:,-1] = re.iloc[:,-1].astype('int32')\n    re.columns = ['Cloud Notebooks','values']\n    return re\n\ndef clean_dict(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q10_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    return ddict\n\nplot = clean(df,'Q10_Part_',16)\n_all = plot['values'].sum()\nplot = plot.sort_values(['values'],ascending=False).reset_index(drop=True)\n\nplot.iloc[0,-1] = int(plot.iloc[0,-1]) + 5488\nplot.drop(3,inplace=True)\n\nq1 = sns.barplot(y =plot['Cloud Notebooks'],x=plot['values'],ax=setup_plot(w=1,h=2,X_label='Counts',y_label='Cloud Notebooks'),zorder=2,linewidth=0.2,color=PAL[-1],ec='black')\n                   \nplt.title('Most Used Cloud Notebook',fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmax+10000,ymax,'programming languages Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/_all):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 600\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","258b59d3":"#q3\n_q = str(df.loc[0,'Q11'])\nplot = df.loc[1:,'Q11']\n\n_x = plot.value_counts().values\n_y = ['A laptop', 'A personal computer \/ desktop',\n       'A cloud computing platform',\n       'A deep learning workstation', 'None',\n       'Other']\n\nq1 = sns.barplot(y =_y,x=_x ,ax=setup_plot(w=1,h=1,X_label='Counts',y_label='Computing Platform'),zorder=2,linewidth=0.2,color=PAL[2],ec='black')\nplt.title('Most Used Computing Platform for\\nData Science Project',fontsize=3, weight='bold',ha='right',loc='right')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\n\nplt.text(xmax+7000,ymax,'Experience Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/country.shape[0]):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 550\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","7a8103b9":"plot = map_col(df,'Q7_Part_',13)\nplot['Q7_OTHER'] = 'Others'\n\nvisualize_relation(7,20, plot, 'Q5', 'Job Title', \"Usage of Programming Language\", \"Job Title vs Programming Language\", 150, 275,4,4)","b1284f4b":"def clean(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q12_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    re = pd.DataFrame(ddict.items())\n    re.iloc[:,-1] = re.iloc[:,-1].astype('int32')\n    re.columns = ['Specialized Hardware','values']\n    return re\n\ndef clean_dict(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q12_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    return ddict\n\nplot = clean(df,'Q12_Part_',5)\nplot = plot.sort_values(['values'],ascending=False).reset_index(drop=True)\n_all = plot['values'].sum()\n\n\nq1 = sns.barplot(y =plot['Specialized Hardware'],x=plot['values'],ax=setup_plot(w=1,h=1,X_label='Counts',y_label='Specialized Hardwares'),zorder=2,linewidth=0.2,color=PAL[-4],ec='black')\n                   \nplt.title('Most Used Specialized Hardware',fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmax+5000,ymax,'programming languages Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/_all):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 300\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","ba3e1514":"#q13\n_q = str(df.loc[0,'Q13'])\nplot = df.loc[1:,'Q13']\n\n_x = plot.value_counts().values\n_y = plot.value_counts().index\n\nq1 = sns.barplot(y =_y,x=_x ,ax=setup_plot(w=1,h=1,X_label='Counts',y_label='No.of times TPU Used'),zorder=2,linewidth=0.2,color=PAL[6],ec='black')\nplt.title('How many times have you used a TPU',fontsize=3, weight='bold',ha='right',loc='right')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\n\nplt.text(xmax+7000,ymax,'Experience Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/country.shape[0]):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 550\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","d818c4c5":"def clean(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q14_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    re = pd.DataFrame(ddict.items())\n    re.iloc[:,-1] = re.iloc[:,-1].astype('int32')\n    re.columns = ['data visualization libraries or tools','values']\n    return re\n\ndef clean_dict(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q14_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    return ddict\n\nplot = clean(df,'Q14_Part_',11)\nplot = plot.sort_values(['values'],ascending=False).reset_index(drop=True)\n_all = plot['values'].sum()\n\n\nq1 = sns.barplot(y =plot['data visualization libraries or tools'],x=plot['values'],ax=setup_plot(w=1,h=2,X_label='Counts',y_label='data visualization libraries or tools'),zorder=2,linewidth=0.2,color=PAL[-4],ec='black')\n                   \nplt.title('Most Used data visualization libraries or tools',fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmax+9100,ymax,'programming languages Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/_all):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 700\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","0d2315c5":"#q13\n_q = str(df.loc[0,'Q15'])\nplot = df.loc[1:,'Q15']\n\n_x = plot.value_counts().values\n_y = ['Under 1 year', '1-2 years', 'I do not use ML',\n       '2-3 years', '3-4 years', '5-10 years', '4-5 years', '10-20 years',\n       '20 or more years']\n\nq1 = sns.barplot(y =_y,x=_x ,ax=setup_plot(w=1,h=2,X_label='Counts',y_label='years'),zorder=2,linewidth=0.2,color=PAL[3],ec='black')\nplt.title('For how many years have you used machine learning methods?',fontsize=3.4, weight='bold',ha='right',loc='right')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\n\nplt.text(xmax+5000,ymax,'Experience Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/country.shape[0]):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 450\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","742bed5e":"def clean(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q16_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    re = pd.DataFrame(ddict.items())\n    re.iloc[:,-1] = re.iloc[:,-1].astype('int32')\n    re.columns = ['machine learning frameworks','values']\n    return re\n\ndef clean_dict(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q16_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    return ddict\n\nplot = clean(df,'Q16_Part_',17)\nplot = plot.sort_values(['values'],ascending=False).reset_index(drop=True)\n_all = plot['values'].sum()\n\n\nq1 = sns.barplot(y =plot['machine learning frameworks'],x=plot['values'],ax=setup_plot(w=1,h=3,X_label='Counts',y_label='machine learning frameworks'),zorder=2,linewidth=0.2,color=PAL[4],ec='black')\n                   \nplt.title('Most Used Machine Learning Frameworks',fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmax+9100,ymax,'programming languages Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/_all):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 700\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","adba6c29":"def clean(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q17_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    re = pd.DataFrame(ddict.items())\n    re.iloc[:,-1] = re.iloc[:,-1].astype('int32')\n    re.columns = ['ML algorithms','values']\n    return re\n\ndef clean_dict(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q17_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    return ddict\n\nplot = clean(df,'Q17_Part_',11)\nplot = plot.sort_values(['values'],ascending=False).reset_index(drop=True)\n_all = plot['values'].sum()\n\n\nq1 = sns.barplot(y =plot['ML algorithms'],x=plot['values'],ax=setup_plot(w=1,h=2,X_label='Counts',y_label='ML algorithms'),zorder=2,linewidth=0.2,color=PAL[4],ec='black')\n                   \nplt.title('Most Used ML algorithms',fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\nplt.text(xmax+9100,ymax,'programming languages Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/_all):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 700\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","64e58831":"def clean(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q18_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    re = pd.DataFrame(ddict.items())\n    re.iloc[:,-1] = re.iloc[:,-1].astype('int32')\n    re.columns = ['Computer Vision Methods','values']\n    return re\n\ndef clean_dict(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q18_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    return ddict\n\nplot = clean(df,'Q18_Part_',6)\nplot = plot.sort_values(['values'],ascending=False).reset_index(drop=True)\n_all = plot['values'].sum()\n\nplot['Computer Vision Methods'] = ['Image classification',\n       'Image segmentation',\n       'Object detection',\n       'General purpose image\/video tools',\n       'Generative Networks', 'Other']\n\n\n\nq1 = sns.barplot(y =plot['Computer Vision Methods'],x=plot['values'],ax=setup_plot(w=1,h=1,X_label='Counts',y_label='Computer Vision Methods'),zorder=2,linewidth=0.2,color=PAL[10],ec='black')\n                   \nplt.title('Computer Vision Methods',fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\n\nplt.text(xmax+3000,ymax,'programming languages Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/_all):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 120\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","8ff8bc4a":"def clean(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q19_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    re = pd.DataFrame(ddict.items())\n    re.iloc[:,-1] = re.iloc[:,-1].astype('int32')\n    re.columns = ['NLP Methods','values']\n    return re\n\ndef clean_dict(data,Question,n):\n    x = []\n    for i in range(1,n):\n        x.append(Question+str(i))\n    x.append(str('Q19_OTHER'))\n\n\n    ddict = {}\n    for i in x:\n        ddict[data[i].value_counts().keys()[0]]=data[i].value_counts()[0]\n    return ddict\n\nplot = clean(df,'Q19_Part_',5)\nplot = plot.sort_values(['values'],ascending=False).reset_index(drop=True)\n_all = plot['values'].sum()\n\nplot['NLP Methods'] = ['Word embeddings\/vectors',\n       'Transformer language',\n       'Encoder-decorder',\n       'Contextualized embeddings', 'Other']\n\nq1 = sns.barplot(y =plot['NLP Methods'],x=plot['values'],ax=setup_plot(w=1,h=1,X_label='Counts',y_label='NLP Methods'),zorder=2,linewidth=0.2,color=PAL[-10],ec='black')\n                   \nplt.title('Natural Language Processing Methods',fontsize=4, weight='bold')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\n\nplt.text(xmax+2000,ymax,'programming languages Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/_all):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 120\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","3f1b8c2a":"#q13\n_q = str(df.loc[0,'Q20'])\nplot = df.loc[1:,'Q20']\n\n_x = plot.value_counts().values\n_y = plot.value_counts().index\n\nq1 = sns.barplot(y =_y,x=_x ,ax=setup_plot(w=1,h=3,X_label='Counts',y_label='Industries'),zorder=2,linewidth=0.2,color=PAL[3],ec='black')\nplt.title('In what industry is your current employer\/contract',fontsize=3.1, weight='bold',ha='right',loc='right')\n\nxmin, xmax = q1.get_xlim()\nymin, ymax = q1.get_ylim()\n\n\nplt.text(xmax+3000,ymax,'Experience Plot',fontsize=3,ha='right',alpha=.001) #ignore this line\nfor p in q1.patches:\n            value = f'{p.get_width():.0f} | {(p.get_width()\/country.shape[0]):,.1%}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 150\n                y = p.get_y() + p.get_height() \/ 2 \n                q1.text(x, y, value, ha='left', va='center', fontsize=2, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\nplt.show()","99e4babf":"sns.palplot(sns.color_palette(PAL*2))\nplt.show()","f1cccbf3":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ11\n    \n    Most Used Computing Platform for Data Science Project\n<\/div>\n\n> 62.5% people who gave the survey uses laptop for data science projects.\n\n    working...\n\n<a id=1.11><\/a>\n\n* [Go to top](#0)","951b55ab":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ1.1\n    \n    What is your age? (India)\n<\/div>\n\n<a id=1.1.1><\/a>\n\n* [Go to top](#0)","00d1aaa0":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ19\n    \n    Natural Language Processing (NLP) Methods do you use\n<\/div>\n\n> None\n\n> Word embeddings\/vectors, Transformer language and Encoder-decoder are quit well popular around NLP methods\n\n<a id=1.19><\/a>\n\n* [Go to top](#0)","43327bbf":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#dd4124;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nNote: Upvote is Free!!!\n<\/div>","f73454b8":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ12\n    \n    Most Used Specialized Hardware\n<\/div>\n\n> \n\n    working...\n\n<a id=1.12><\/a>\n\n* [Go to top](#0)","f52b338e":"## **Let's see which programming language do we need to get started in the specific profession.**","f6033c80":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ20\n    \n    In what industry is your current employer\/contract\n<\/div>\n\n> Computer\/Technology, Academics\/Education and Accounting\/Finance are the 3 most engaging industry where data scientist, ML engineers works\n\n> what is the job profession we can see in the top 3 industries?\n\n    >working...\n    \n<a id=1.20><\/a>\n\n* [Go to top](#0)","b0bf8abb":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ8\n    \n    Recommend Programming Language for Aspiring Data Scientist \n<\/div>\n\n> True, I will also recommend python to anyone who is getting started with AI\/ML etc.\n\n\n    working...\n\n<a id=1.8><\/a>\n\n* [Go to top](#0)","f43e87c8":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ6\n    \n    Coding Experience\n<\/div>\n\n> what are the qualification and most used programming languge of the people having coding experice between 1-3yrs?\n    \n    working...\n\n<a id=1.6><\/a>\n\n* [Go to top](#0)","45fda4ee":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#E74C3C;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ21\n    \n    Work in progress!!\n    If you like the work please upvote. you can make copy of this starter notebook and start your own eda.\n<\/div>\n\n<a id=1.21><\/a>\n\n* [Go to top](#0)","38040a24":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ15\n    \n    For how many years have you used machine learning methods?\n<\/div>\n\n> I have been using machine learning models for the past 5-6 months.\n\n\n    working...\n\n<a id=1.15><\/a>\n\n* [Go to top](#0)","9aae8c28":"<a><img src=\"https:\/\/i.ibb.co\/PWvpT9F\/header.png\" alt=\"header\" border=\"0\" width=800 height=400><\/a>","984be4bc":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ10\n    \n    Most Used Cloud Notebook\n<\/div>\n\n> As I said, kaggle\/Colab notebook is very easy to use, and they also provide free GPU & TPU support.\n\n> 50.1% people who gave the survey uses colab notebook, followed by Kaggle 31.2% people.\n\n    working...\n\n<a id=1.10><\/a>\n\n* [Go to top](#0)","dc059b0d":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ4\n    \n    highest level of formal education\n<\/div>\n\n> will have bachelor's Degree in 2022\n\n> What is the coding experience of the people having bachelor's \/ master's Degrees?\n\n> What is the percentage of employed people holding bachelor's \/ master's Degrees?\n\n    Working...\n<a id=1.4><\/a>\n\n* [Go to top](#0)","383b5be5":"## Below `visualize_relation()` copied from this [notebook](https:\/\/www.kaggle.com\/ruchi798\/kaggle-ml-ds-survey-analysis\/notebook) by [@Ruchi Bhatia](https:\/\/www.kaggle.com\/ruchi798)","949a20f5":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:210%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQuestion Answer\n<\/div>\n\n## **What we know up so far?**\n>This is the 5th survey from kaggle on Machine learning & Data Science 2021.\n\n>25974 Responded, 7434 From India (28.6%) followed by USA : 2650 (10.2%)\n\n<a id=1><\/a>\n\n* [Go to top](#0)","ccf86d39":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ3\n    \n    In which country do you currently reside?\n<\/div>\n\n> India :), 28.6% of the people who has given survey are from india.\n> Followed by United States of America with 10.2% of the total number of people who gave the survey.\n<a id=1.3><\/a>\n\n* [Go to top](#0)","d07b1022":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ17\n    \n    Which of the following Machine Learning Algorithms\n<\/div>\n\n> Good to see that Convolutional Neural Network (CNN) getting hype as boosting models which are mainly used in Kaggle competition.\n\n<a id=1.17><\/a>\n\n* [Go to top](#0)","1ac7937a":"Hey Kagglers!\nI am **Ankit Kalauni** from **India**, I started learning machine learning 3-4 months ago with `learning_rate = 0.001`\nI should say after I started learning along with kaggle it helped me a lot in many ways, the best thing I came across is learning from other codes and applying them. In this notebook, I will be going to do a simple analysis of where I stand in my Machine Learning \/ Data Science career, and I will try to build my path for the future by seeing what others doing in the same field and how they succeed.","b69bd84a":"# **Volume of data\/information created, captured, copied, and consumed worldwide from 2010 to 2025 (in zettabytes)**\n\n<img src=\"https:\/\/i.ibb.co\/Xs95wnS\/stats.jpg\" alt=\"stats\" border=\"0\">\n\n* Above image is taken from [@statista](https:\/\/www.statista.com\/statistics\/871513\/worldwide-data-created\/)\n\n> **As we can see there is an exponential increase in data created, captured, copied, and consumed worldwide, to compute this big data we need speed in computing. this is one of the main reasons of use of GPUs and TPUs**","3cbb872c":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ16\n    \n    Which of the following machine learning frameworks\n<\/div>\n\n> Sklearn is used by 25.7% of the people who gave the survey. I have used sklearn, xgboost, tensorflow 1 time, catboost, lightgbm and caret\n\n> 63.4% of the ML models in the survey i have used atleast once. \n\n    working...\n\n<a id=1.16><\/a>\n\n* [Go to top](#0)","08062739":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ13\n    \n    how many times have you used a TPU (tensor processing unit)?\n<\/div>\n\n> I have also not used TPU once, That's amazing that 63.4% of the people how has given the survey also have not used TPU once\n\n> Only 6% of the people use the TPU often. \n\n    working...\n\n<a id=1.13><\/a>\n\n* [Go to top](#0)","8c2c18bc":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ14\n    \n    Most Used data visualization libraries or tools\n<\/div>\n\n> Most Used data visualization libraries i have used is matplotlib and seaborn and i love it, I haved used plotly 3-4 times only, but plotly comes\nhandy sometimes because of its interactive plots and clean themes. as we can see from the below plots. most of the people uses matplotlib, seaborn and\nploty, as for R people uses ggplot.\n\n\n    working...\n\n<a id=1.14><\/a>\n\n* [Go to top](#0)","20ee7ce5":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ5\n    \n    title most similar to your current role\n<\/div>\n\n>Student :(\n\n> Which region has the most numbers of student??\n\n    working...\n<a id=1.5><\/a>\n\n* [Go to top](#0)","ab517c9c":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\n    Hold your horses! \n<\/div>\n\n> Hmm.., I wanted to be a Machine Learning Engineer, so which programming language is suitable for me to get started??. let see the table below.\n\n> so, after seeing row named Machine Learning Engineer, we came to know that ML Engineer needs to know Python and SQL, as it is the two most used language among ML Engineer who has given survey\n\n    working...\n\n<a id=1.101><\/a>\n\n* [Go to top](#0)","c935bb7c":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:270%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nTable of Contents\n<\/div>\n\n* [1.Question Answer](#1)\n    * [Q1. What is your age?](#1.1)\n        * [Q1.1. What is your age? (India Region)](#1.1.1)\n    * [Q2. What is your gender?](#1.2)\n    * [Q3. In which country do you currently reside?](#1.3)\n    * [Q4. highest level of formal education](#1.4)\n    * [Q5. title most similar to your current role](#1.5)\n    * [Q6. Coding Experience](#1.6)\n    * [Q7. Programming language](#1.7)\n    * [Q8. Recommend Programming Language for Aspiring Data Scientist](#1.8)\n    * [Q9. Most Used IDE](#1.9)\n    * [Q10. Most Used Cloud Notebook](#1.10)\n    * [Hold your horses! ](#1.101)\n    * [Q11. Most Used Computing Platform for Data Science Project](#1.11)\n    * [Q12. Most Used Specialized Hardware](#1.12)\n    * [Q13. how many times have you used a TPU (tensor processing unit)?](#1.13)\n    * [Q14. Most Used data visualization libraries or tools](#1.14)\n    * [Q15. For how many years have you used machine learning methods?](#1.15)\n    * [Q16. Which of the following machine learning frameworks](#1.16)\n    * [Q17. Which of the following Machine Learning Algorithms](#1.17)\n    * [Q18. Which categories of Computer Vision methods do you use](#1.18)\n    * [Q19. Natural Language Processing (NLP) Methods do you use](#1.19)\n    * [Q20. In what industry is your current employer\/contract](#1.20)\n    * [Q21. Work in progress](#1.21)\n\n<a id = 0><\/a>","c249d86e":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ2\n    \n    What is your gender?\n<\/div>\n\n>My Gender? I am a Man. Bam!! 79.3% of the people who did the survey are Man &18.8% Woman. (see the plot below)\n\n<a id=1.2><\/a>\n\n* [Go to top](#0)","904fa7ac":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ1\n    \n    What is your age?\n<\/div>\n\n## My Age? Huh 20\n>The Data was taken for 18 above only. I have seen some people of age 16-17 learning machine learning.\n\n>18.9% of the people in the survery falls in my age range, 81.1% people in the survery are older than me!\n\n<a id=1.1><\/a>\n\n* [Go to top](#0)","d74e1303":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ9\n    \n    Most Used IDE\n<\/div>\n\n> For me, i am a student and i dont have good laptop, i am using old 2012 laptop running light linux OS, and I mostly use kaggle\/colab notebooks\nsometimes VScode, I like using VScode but I cant find the run selected code functionality in jupyter notebook. \n\n    working...\n\n<a id=1.9><\/a>\n\n* [Go to top](#0)","fabff37f":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:270%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\n2021 Kaggle Machine Learning & Data Science Survey\n<\/div>","f31db405":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ18\n    \n    Which categories of Computer Vision methods do you use\n<\/div>\n\n> None\n\n<a id=1.18><\/a>\n\n* [Go to top](#0)","71387b4c":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nQ7\n    \n    Programming Language\n<\/div>\n\n> how many students uses python over r?\n\n> what is the ratio of python and r in Data Science field?\n\n    working...\n\n<a id=1.7><\/a>\n\n* [Go to top](#0)"}}