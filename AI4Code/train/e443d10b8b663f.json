{"cell_type":{"02b93f31":"code","18fda7b4":"code","4fa0588f":"code","ed2a5b9f":"code","3ec1eff7":"code","ee4eb262":"code","88e3fcd7":"code","9e527d51":"code","d8ab8acd":"code","1f845432":"code","fbc7766d":"markdown","39053c46":"markdown","c97dec92":"markdown","b7a86b90":"markdown","2cafb308":"markdown","a86ced20":"markdown","39b14e32":"markdown","a181265b":"markdown"},"source":{"02b93f31":"!pip install -U plotly==3.10.0","18fda7b4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pylab as plt\nimport plotly\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport cufflinks as cf\nimport datetime\nimport colorlover as cl\ncf.go_offline()\nplt.style.use('ggplot')\ncolor_pal = [x['color'] for x in plt.rcParams['axes.prop_cycle']]\n\n# Format the data\ndf = pd.read_csv('..\/input\/2019-3rd-ml-month-with-kakr-leaderboard\/2019-3rd-ml-month-with-kakr-publicleaderboard.csv')\ndf['SubmissionDate'] = pd.to_datetime(df['SubmissionDate'])\ndf = df.set_index(['TeamName','SubmissionDate'])['Score'].unstack(-1).T\ndf.columns = [name for name in df.columns]","4fa0588f":"FIFTEENTH_SCORE = df.max().sort_values(ascending=False)[15]\nFIFTYTH_SCORE = df.max().sort_values(ascending=False)[50]\nTOP_SCORE = df.max().sort_values(ascending=False)[0]","ed2a5b9f":"# Interative Plotly\nmypal = cl.scales['8']['qual']['Dark2']\ncolors = cl.interp( mypal, 15 )\nannotations = []\ninit_notebook_mode(connected=True)\nTOP_TEAMS = df.min().loc[df.max() > FIFTEENTH_SCORE].index.values\ndf_filtered = df[TOP_TEAMS].ffill()\ndf_filtered = df_filtered.iloc[(df_filtered.index > '06-14-2019') & (df_filtered.index < '08-18-2019')]\nteam_ordered = df_filtered.loc[df_filtered.index.max()].sort_values(ascending=False).index.tolist()\n\ndata = []\ni = 0\nfor col in df_filtered[team_ordered].columns:\n    data.append(go.Scatter(\n                        x = df_filtered.index,\n                        y = df_filtered[col],\n                        name=col,\n                        line=dict(color=colors[i], width=2),)\n               )\n    i += 1\n\nannotations.append(dict(xref='paper', yref='paper', x=0.0, y=1.05,\n                              xanchor='left', yanchor='bottom',\n                              text='2019 3rd ML month with KaKR Leaderboard Tracking',\n                              font=dict(family='Arial',\n                                        size=30,\n                                        color='rgb(37,37,37)'),\n                              showarrow=False))\n\nlayout = go.Layout(\n            yaxis=dict(range=[0.82, TOP_SCORE+0.0001]),\n            hovermode='x',\n            plot_bgcolor='white',\n            annotations=annotations,\n)\nfig = go.Figure(data=data, layout=layout)\nfig.layout.update(\n    legend=go.layout.Legend(\n        traceorder=\"normal\",\n        font=dict(\n            family=\"sans-serif\",\n            size=12,\n            color=\"black\"\n        ),\n        bgcolor=\"LightSteelBlue\",\n        bordercolor=\"Black\",\n        borderwidth=2,\n    )\n)\n\nfig.layout.update(legend_orientation=\"h\")\nfig.layout.update(template=\"plotly_white\")\n#fig.update_yaxes(showgrid=True, gridwidth=0.5, gridcolor='LightGrey')\nfig.update_xaxes(showgrid=False)\n\niplot(fig)","3ec1eff7":"# Interative Plotly\nmypal = cl.scales['8']['qual']['Dark2']\ncolors = cl.interp( mypal, 15 )\nannotations = []\ninit_notebook_mode(connected=True)\nTOP_TEAMS = df.min().loc[df.max() > FIFTEENTH_SCORE].index.values\ndf_filtered = df[TOP_TEAMS].ffill()\ndf_filtered = df_filtered.iloc[(df_filtered.index > '07-10-2019') & (df_filtered.index < '08-18-2019')]\nteam_ordered = df_filtered.loc[df_filtered.index.max()].sort_values(ascending=False).index.tolist()\n\ndata = []\ni = 0\nfor col in df_filtered[team_ordered].columns:\n    data.append(go.Scatter(\n                        x = df_filtered.index,\n                        y = df_filtered[col],\n                        name=col,\n                        line=dict(color=colors[i], width=2),)\n               )\n    i += 1\n\nannotations.append(dict(xref='paper', yref='paper', x=0.0, y=1.05,\n                              xanchor='left', yanchor='bottom',\n                              text='2019 3rd ML month with KaKR Leaderboard Tracking',\n                              font=dict(family='Arial',\n                                        size=30,\n                                        color='rgb(37,37,37)'),\n                              showarrow=False))\n\nlayout = go.Layout(\n            yaxis=dict(range=[0.955, TOP_SCORE+0.0001]),\n            hovermode='x',\n            plot_bgcolor='white',\n            annotations=annotations,\n)\nfig = go.Figure(data=data, layout=layout)\nfig.layout.update(\n    legend=go.layout.Legend(\n        traceorder=\"normal\",\n        font=dict(\n            family=\"sans-serif\",\n            size=12,\n            color=\"black\"\n        ),\n        bgcolor=\"LightSteelBlue\",\n        bordercolor=\"Black\",\n        borderwidth=2,\n    )\n)\n\nfig.layout.update(legend_orientation=\"h\")\nfig.layout.update(template=\"plotly_white\")\n#fig.update_yaxes(showgrid=True, gridwidth=0.5, gridcolor='LightGrey')\nfig.update_xaxes(showgrid=False)\n\niplot(fig)","ee4eb262":"# Scores of top teams over time\nALL_TEAMS = [x for x in df.columns.values if x != 'nan']\ndf[ALL_TEAMS].ffill().plot(figsize=(20, 10),\n                           color=color_pal[0],\n                           legend=False,\n                           alpha=0.05,\n                           ylim=(0.0001,TOP_SCORE+0.01),\n                           title='All Teams Public LB Scores over Time')\ndf.ffill().max(axis=1).plot(color=color_pal[1], label='1st Place Public LB', legend=True)\nplt.show()","88e3fcd7":"layout = cf.Layout(\n    height=1400,\n    width=800,\n    xaxis=dict(\n        range=[FIFTYTH_SCORE-0.0001,TOP_SCORE+0.0001]\n    ),\n    yaxis=go.layout.YAxis(\n        automargin=True,\n    )\n)\n\n# Create Top Teams List\nTOP_TEAMS = df.max().loc[df.max() > FIFTYTH_SCORE].index.values\n#TOP_TEAMS = df.max().index.values\n\ndf[TOP_TEAMS].max().sort_values().iplot(kind='barh',\n                                        layout=layout,\n                                        color='grey',\n                                        title='Top 50 Public LB Teams')","9e527d51":"layout = cf.Layout(\n    height=1400,\n    width=800,\n    yaxis=go.layout.YAxis(\n        automargin=True,\n    )\n)\n\n\ndf[TOP_TEAMS].nunique().sort_values().iplot(kind='barh',\n                                            layout=layout,\n                                            color='blue',\n                                            title='Count of Submissions improving LB score by Team')","d8ab8acd":"ax = df.ffill() \\\n    .count(axis=1) \\\n    .plot(figsize=(20, 8),\n          title='Number of Teams in the Competition by Date',\n         color=color_pal[5], lw=5)\nax.set_ylabel('Number of Teams')\nplt.show()","1f845432":"plt.rcParams[\"font.size\"] = \"8\"\nn_days = (datetime.date(2019, 8, 17) - datetime.date(2019, 6, 14)).days # Num days of the comp\nfig, axes = plt.subplots(n_days, 1, figsize=(15, 12), sharex=True)\nplt.subplots_adjust(top=8, bottom=2)\nfor x in range(n_days):\n    date2 = df.loc[df.index.date == datetime.date(2019, 6, 14) + datetime.timedelta(x)].index.min()\n    num_teams = len(df.ffill().loc[date2].dropna())\n    max_cutoff = df.ffill().loc[date2] < 5\n    df.ffill().loc[date2].loc[max_cutoff].plot(kind='hist',\n                               bins=100,\n                               ax=axes[x],\n                               title='{} ({} Teams)'.format(date2.date().isoformat(),\n                                                            num_teams))\n    y_axis = axes[x].yaxis\n    y_axis.set_label_text('')\n    y_axis.label.set_visible(False)\n    \nplt.xlim(left=0, right=1);","fbc7766d":"# Closer look at the top","39053c46":"# Number of teams by date","c97dec92":"# Count of LB Submissions that improved score\n\nThis is the count of times the person submitted and got the fun \"You're score improved\" notification. This is not the total submission count.","b7a86b90":"# All competitors LB Position over Time","2cafb308":"# Distribution of Scores over time","a86ced20":"# A look at the public LB standings over time.\n\n\uce90\ucf54 3\ud68c \ub300\ud68c \ucc38\uac00\ud300\uc758 \ub300\ud68c \uae30\uac04 \ub3d9\uc548\uc758 \ud37c\ube14\ub9ad \ub9ac\ub354\ubcf4\ub4dc \uc2a4\ucf54\uc5b4 \ud2b8\ub80c\ub4dc\ub97c \ubcf4\uc5ec\uc8fc\ub294 \ucee4\ub110\uc785\ub2c8\ub2e4.\n\n\ub300\ud68c\uac00 \ub05d\ub098\ub3c4 \uce90\uae00\uc740 \ud37c\ube14\ub9ad \ub9ac\ub354\ubcf4\ub4dc \uc2a4\ucf54\uc5b4\ub9cc \ub370\uc774\ud130\ub85c \uc81c\uacf5\ud558\uae30 \ub54c\ubb38\uc5d0 \ud504\ub77c\uc774\ube57 \ub9ac\ub354\ubcf4\ub4dc \uc2a4\ucf54\uc5b4\uac00 \uc544\ub2d8\uc744 \ucc38\uace0\ud558\uc138\uc694.\n\n[Rob Mulla](https:\/\/www.kaggle.com\/robikscube) \ub2d8\uc774 \ub9cc\ub4e0 \uc544\ub798 \ucee4\ub110\uc744 \ubc14\ud0d5\uc73c\ub85c \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4.\n\nhttps:\/\/www.kaggle.com\/robikscube\/the-race-to-predict-molecular-properties\n\n**Last updated Aug 17, 2019**","39b14e32":"# Top LB Scores","a181265b":"# Public LB Scores of Top Teams over time"}}