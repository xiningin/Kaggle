{"cell_type":{"6abe7c8e":"code","9827fe66":"code","de7f8e10":"code","a6cb5dea":"code","0976bd7d":"code","2bb8bc8e":"code","02ded598":"code","e91d6ea2":"code","e2a8d5ce":"code","53e7c258":"code","de7afbd6":"code","165021bc":"code","9f60de39":"code","f5c7c0f7":"code","fc827f89":"code","b26f854a":"code","11c20994":"code","04353cde":"code","7f4e8d84":"code","ea1d16eb":"code","8d429d22":"code","5735870a":"markdown","69a8857f":"markdown","2939e5d9":"markdown","25b97d0b":"markdown","2f55c8e8":"markdown","4e8a9623":"markdown","91574fe3":"markdown","df4f2a36":"markdown","3f4f52a2":"markdown","9d12eded":"markdown","a48ddefd":"markdown","41ff62aa":"markdown"},"source":{"6abe7c8e":"!pip install plotly==4.5.2","9827fe66":"#Helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #Viz\nimport seaborn as sns #Viz\nimport plotly.express as px #Viz\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","de7f8e10":"df = pd.read_excel('\/kaggle\/input\/productos-consumo-masivo\/output - Kaggle.xlsx', decimal=',')\n# Print the head of df\ndf.head(3)","a6cb5dea":"# NaN values\ndf.isnull().sum()","0976bd7d":"# Print the info of df\nprint(df.info())\n\n# Print the shape of df\nprint(df.shape)","2bb8bc8e":"# Statistics for continuous variables\ndf.describe()","02ded598":"# Statistics for categorical variables\nprint(pd.DataFrame(df['date'].value_counts(dropna=False)))\ndf.describe(include=[np.object])","e91d6ea2":"# Distribution by date and supermarket\ndata = df.groupby(['date', 'prod_source']).size()\nsns.barplot(data.values, data.index, palette=\"Blues\")","e2a8d5ce":"# Distribution by product in a specific date\ndata = df[df['date'] == 20200220].groupby(['subcategory']).size()\nsns.barplot(data.values, data.index, palette=\"husl\")","53e7c258":"# Different category distributions by size\ndata = pd.DataFrame({'count' : df[df['date'] == 20200220].groupby(['subcategory', 'tags']).size()}).reset_index()\ndata = data[data[\"subcategory\"] == \"Vinos y Licores\"]\nfig = px.treemap(data, path=['subcategory', 'tags'], values='count')\nfig.update_layout(title_text='Map Count Tags')\nfig.show()\n\ndata = pd.DataFrame({'mean' : df[df['date'] == 20200220].groupby(['subcategory', 'tags']).prod_unit_price.mean()}).reset_index()\ndata = data[data[\"subcategory\"] == \"Vinos y Licores\"]\nfig = px.treemap(data, path=['subcategory', 'tags'], values='mean')\nfig.update_layout(title_text='Map mean prices')\nfig.show()","de7afbd6":"# Different category distributions by mean price\ndata = pd.DataFrame({'value' : df[df['date'] == 20200220].groupby(['subcategory', 'tags']).prod_unit_price.mean()}).reset_index()\ndata = data[data['subcategory']== 'Vinos y Licores']\ndata = data.sort_values(['value'],ascending=False).reset_index(drop=True)\n##################################################################\nfig, (ax1, ax2) = plt.subplots(2,1,figsize=(10,10))\nax1.set_title(\"Precios por tag de Licor\")\nax2.set_title(\"Distirbucion de precios licores\")\nsns.barplot(data['value'], data['tags'], palette=\"Blues\", ax=ax1)\nsns.distplot(data['value'],kde=False,rug=True, bins=10,   ax=ax2)","165021bc":"# Boxplot licores supermercado VERDE\nsns.boxplot(x=\"subcategory\", y=\"value\", data=data)","9f60de39":"# Different category distributions by standard deviation\ndata = pd.DataFrame({'std' : df[df['date'] == 20200220].groupby(['subcategory', 'tags']).prod_unit_price.std()}).reset_index()\ndata = data [data ['subcategory'] == 'Vinos y Licores']\nfig = px.treemap(data, path=['subcategory', 'tags'], values='std')\nfig.show()","f5c7c0f7":"# Different category distributions by standard deviation\ndata = df[df['date'] == 20190709]\nsns.boxplot(x=\"prod_unit_price\", y=\"subcategory\", data=data)","fc827f89":"# Inspection of Wine and Liquior\ndf[(df['date'] == 20200220) & ((df['tags'] == 'Cognac') | (df['tags'] == 'Whisky') |  (df['tags'] == 'Cervezas') )].head(5)","b26f854a":"data = pd.DataFrame({'count' : df[(df['date'] == 20200220) & ((df['tags'] == 'Cognac'))].groupby(['tags', 'prod_name']).size()}).reset_index()\nfig = px.treemap(data, path=['tags', 'prod_name'], values='count')\nfig.show()","11c20994":"data = pd.DataFrame({'count' : df[(df['date'] == 20200220) & ((df['tags'] == 'Whisky'))].groupby(['tags', 'prod_name']).size()}).reset_index()\nfig = px.treemap(data, path=['tags', 'prod_name'], values='count')\nfig.show()","04353cde":"data = pd.DataFrame({'count' : df[(df['date'] == 20200220) & ((df['tags'] == 'Cervezas'))].groupby(['tags', 'prod_name']).size()}).reset_index()\nfig = px.treemap(data, path=['tags', 'prod_name'], values='count')\nfig.show()","7f4e8d84":"# word cloud library\nfrom wordcloud import WordCloud\ndata = df[(df['date'] == 20200220) & ((df['tags'] == 'Cervezas'))].groupby(['tags', 'prod_name']).size().reset_index()\ndata.rename(columns = {0:'Counts'}, inplace = True)\ntext = \" \".join(str(each) for each in data.prod_name)\ntext\nwordcloud = WordCloud (\n                    background_color = 'white',\n                    width = 512,\n                    height = 384\n                        ).generate(text)\nplt.figure(figsize=(15,10))\nplt.imshow(wordcloud) # image show\nplt.axis('off') # to off the axis of x and y\nplt.show()","ea1d16eb":"# word cloud library\nfrom wordcloud import WordCloud\ndata = df[(df['date'] == 20200220) & ((df['tags'] == 'Vino'))].groupby(['tags', 'prod_name']).size().reset_index()\ndata.rename(columns = {0:'Counts'}, inplace = True)\ntext = \" \".join(str(each) for each in data.prod_name)\ntext\nwordcloud = WordCloud (\n                    background_color = 'white',\n                    width = 512,\n                    height = 384\n                        ).generate(text)\nplt.figure(figsize=(15,10))\nplt.imshow(wordcloud) # image show\nplt.axis('off') # to off the axis of x and y\nplt.show()","8d429d22":"# word cloud library\nfrom wordcloud import WordCloud\ndata = df[(df['date'] == 20200220) & ((df['tags'] == 'Whisky'))].groupby(['tags', 'prod_name']).size().reset_index()\ndata.rename(columns = {0:'Counts'}, inplace = True)\ntext = \" \".join(str(each) for each in data.prod_name)\ntext\nwordcloud = WordCloud (\n                    background_color = 'white',\n                    width = 512,\n                    height = 384\n                        ).generate(text)\nplt.figure(figsize=(15,10))\nplt.imshow(wordcloud) # image show\nplt.axis('off') # to off the axis of x and y\nplt.show()","5735870a":"> La mayor desviaci\u00f3n entre el precio de productos de la misma categor\u00eda esta en vinos sin embargo esto se da por que tienen un precio mucho mas alto que el resto de los productos.","69a8857f":"# Objetivo\n\nEl an\u00e1lisis exploratorio hace referencia al proceso investigar, descubrir patrones, anomal\u00edas, probar hip\u00f3tesis y comprobar supuestos con la ayuda de la estad\u00edstica y visualizaciones. Este es un proceso iterativo basado en el ensayo y error. Es este notebook se mostrar\u00e1 el esquema l\u00f3gico de un an\u00e1lisis exploratorio y unas conclusiones sobre uno de los muchos enfoques que tiene este conjunto de datos. ","2939e5d9":"Se puede observar que la distribuci\u00f3n de precios sigue una simetr\u00eda positiva con una gran curtosis. Adem\u00e1s observamos que existe un punto at\u00edpico e los precios de los licores superando 200.000 pesos colombianos.","25b97d0b":"> La muestra de datos se puede identificar que en general todos los cortes por fecha tienen la misma informaci\u00f3n de productos, 2019-07-09 es el \u00fanico mes donde podr\u00edan hacerse comparaciones entre supermercados.","2f55c8e8":"## An\u00e1lisis Exploratorio","4e8a9623":"> se puede observar que las subcategorias de licores que m\u00e1s desvici\u00f3n Estandar son el Whisky y el Cognac","91574fe3":"En este an\u00e1lisis exploratorio nos centraremos en el estudio de los licores en los supermercados Colombianos. Tratandose de de la tercera categor\u00eda m\u00e1s famosa en el supermercado verde en el perido de Febrero del 2020.","df4f2a36":"## Librerias","3f4f52a2":"Se procede entonces a realizar el an\u00e1lisis sobre el \u00faltimo periodo del supermercado 'VERDE' para el 20 de Febrero del 2020.","9d12eded":"> El primer paso es identificar el tama\u00f1o de la base de datos y como lucen dichos datos, cuantos puntos de informaci\u00f3n tiene, cuantas variables.Esto nos da un panorama general de los datos y su dimensi\u00f3n, pero adem\u00e1s es un criterio fundamental con el fin de conocer la confiabilidad de las conclusiones. ","a48ddefd":"Se puede observar que al leer el data frame se encuentra productos 132 nombres de productos que se encuentran vacios o sin nombres. 52 marcas de productos que no tienen nombre. 407 unidades de cada producto sin clasificar y 407 iconos no cargados o con problemas.","41ff62aa":"# **Notebook exploratorio - Carlos Due\u00f1as - David Ricaurte**"}}