{"cell_type":{"545ba12f":"code","a6bc5406":"code","b2fd816c":"code","5ec09002":"code","cfa66869":"code","197d73a2":"code","8fc0cd9a":"code","c347f517":"code","a9712fa3":"code","b29792c5":"code","33d91941":"code","260cbe51":"code","7ca3206c":"code","48ada55d":"code","2f2245af":"code","06a8a75e":"code","87d904db":"code","524745b4":"code","c3e28363":"code","e3a09261":"code","10c3c1b5":"code","c7ac0592":"code","9524c5c9":"code","1547cabb":"code","e9985243":"code","1f82d287":"code","f3dc4b79":"code","1cfacda3":"code","4cd920fa":"code","5d6630e5":"code","8ae14f16":"code","1fef3380":"code","63da8407":"code","c7dc3314":"code","cc249509":"code","029f8f25":"code","f36ed165":"code","5b217eae":"code","097df61b":"code","0059ee67":"code","7029c2f2":"code","34404a52":"code","b5abcdb0":"code","1af04483":"code","01ad5ad1":"code","27539070":"code","b85ab3fd":"code","57f76378":"code","d1d4eb58":"code","2df3e109":"code","8855bc69":"code","c7af0fbe":"code","dfbd61e1":"markdown","8b9c29e3":"markdown","12d31d5b":"markdown","869cf88d":"markdown","b54f9847":"markdown","0434e821":"markdown","9e99d982":"markdown","567b5fae":"markdown","4438b35c":"markdown","ebcef815":"markdown","1d9bb462":"markdown","92d89538":"markdown","5202fd42":"markdown","bb682851":"markdown","0fa9e3d2":"markdown","3538b944":"markdown","a51670fe":"markdown","3a89c142":"markdown","74e8eb28":"markdown","053c46db":"markdown","d5e7578d":"markdown","f5e7480c":"markdown","8454a382":"markdown","37944a22":"markdown","2597c3a6":"markdown","5f2f3673":"markdown","952f7c19":"markdown","f735ef0d":"markdown","138d930a":"markdown","57b36cee":"markdown","6a18ceea":"markdown","5b73bf2d":"markdown","9123788f":"markdown","27ffe6ab":"markdown","0d859426":"markdown","daec7cbe":"markdown","b1f4bb54":"markdown","4e79f833":"markdown","f4e7fde6":"markdown","e6805a81":"markdown","37c22614":"markdown","8505f7d8":"markdown","92df0fd3":"markdown","88cab20f":"markdown","95b4b022":"markdown","9a28e0d3":"markdown","bec6da30":"markdown","37bcc0e6":"markdown","a8f7e773":"markdown"},"source":{"545ba12f":"# General tools\nimport pandas as pd\nimport numpy as np\nimport os, math\nfrom collections import Counter\n\n# Plotting\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nmorancolor=sns.color_palette(['#66260b', '#cb8034', '#ddc08d', '#9c886f', '#47261a','#363634', '#524636', '#ac7330', '#b19a78', '#d1c5ab'])\nsns.set_theme(style=\"whitegrid\", palette=morancolor)\nplt.rcParams['font.family']='serif'\nplt.rcParams['figure.dpi'] =100 # high resolution\n\n# Manage warnings\nimport warnings\nwarnings.filterwarnings('ignore')","a6bc5406":"path=\"..\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv\"\ndf=pd.read_csv(path)\ndf.shape","b2fd816c":"df.sample(3)","5ec09002":"df.info()","cfa66869":"# data completeness\ndf.isnull().sum().sort_values(ascending=False)","197d73a2":"df.describe()","8fc0cd9a":"df.describe(include='O')","c347f517":"df.TotalCharges=df.TotalCharges.replace(' ',0).astype('float32')\ndf.Churn=df.Churn.map({'Yes':1,'No':0}).astype('int')","a9712fa3":"def despine():\n    sns.despine(top=1,bottom=1,right=1,left=1)\n    \ndef title(title,fontsize=13):\n    plt.title(title,fontweight='bold',fontsize=fontsize)","b29792c5":"from scipy.stats import skew\ndef kdeall(df,lst,target,h=4,w=15,cut=3,showmeans=False,hspace=.5,wspace=.25,showskew=True):\n    f=plt.figure(figsize=(w,h))\n    plt.subplots_adjust(hspace=hspace,wspace=wspace)\n    for i,col in enumerate(lst):\n        f.add_subplot(math.ceil(len(lst)\/cut),cut,i+1)\n        sns.kdeplot(df.dropna(subset=[col,target])[col],cut=0,multiple='stack',alpha=.2)\n        sns.kdeplot(df.dropna(subset=[col,target])[col],hue=df[target],cut=0)\n        sns.rugplot(df.dropna(subset=[col,target])[col],hue=df.Churn)\n        despine()\n        plt.ylabel('')\n        plt.xlabel(col,fontweight='bold')","33d91941":"def barall(df,lst,target,h=4,w=15,cut=3,hspace=.5,wspace=.25,rotatelst=[],rotation=20,xticksize=10,titlesize=11,yticksize=10):\n    f=plt.figure(figsize=(w,h))\n    plt.subplots_adjust(hspace=hspace,wspace=wspace)\n    for i,col in enumerate(lst):\n        f.add_subplot(math.ceil(len(lst)\/cut),cut,i+1)\n        sns.barplot(data=df,x=col,y=target)\n        if col in rotatelst: plt.xticks(rotation=rotation)\n        plt.xticks(fontsize=xticksize)\n        plt.yticks(fontsize=yticksize)\n        plt.xlabel('')\n        plt.title(col,fontweight='bold',fontsize=titlesize)\n        plt.ylabel('')\n        despine()","260cbe51":"def boxall(df,lst,h=4,w=10,cut=3,hspace=.5,wspace=.25,showmeans=True):\n    f=plt.figure(figsize=(w,h))\n    plt.subplots_adjust(hspace=hspace,wspace=wspace)\n    for i,col in enumerate(lst):\n        f.add_subplot(math.ceil(len(lst)\/cut),cut,i+1)\n        sns.boxplot(df[col], showmeans=showmeans)\n        plt.xlabel(col,fontweight='bold')\n        plt.ylabel('')\n        despine()","7ca3206c":"df.Churn.value_counts(1)","48ada55d":"sns.catplot(data=df,y='Churn',kind='count',height=3,aspect=2)\ntitle('Distribution of Churn')\ndespine()","2f2245af":"numcol=df.select_dtypes('number').drop(['SeniorCitizen','Churn'],axis=1).columns.tolist()\nnumcol","06a8a75e":"kdeall(df,numcol,'Churn',h=6,cut=2,w=10,hspace=.3)\nplt.suptitle('Distribution for our numerical features',fontweight='bold')\nplt.show()","87d904db":"boxall(df,numcol,h=2)","524745b4":"df.select_dtypes(\"O\").nunique().sort_values(ascending=False)","c3e28363":"catcol=df.select_dtypes(\"O\").nunique().sort_values(ascending=False)[1:].index.tolist()\nprint(f\"We have {len(catcol)} categorical features\")","e3a09261":"barall(df,catcol,'Churn',w=10,h=11,cut=4,\n       rotatelst=['PaymentMethod','MultipleLines','OnlineSecurity','OnlineBackup','DeviceProtection','TechSupport',\n                 'Contract','StreamingTV','StreamingMovies'],\n       xticksize=8,rotation=27,hspace=1)","10c3c1b5":"# we use pd.factorize to encode the object as an enumerated type or categorical variable\ndf.apply(lambda x: pd.factorize(x)[0]).corr().Churn.abs().sort_values(ascending=False)[1:].plot(kind='bar',figsize=(10,2))\nplt.xticks(fontsize=8.5, rotation=40)\ndespine()","c7ac0592":"sub=df.apply(lambda x: pd.factorize(x)[0]).corr()\nmask = np.triu(np.ones_like(sub))\nsns.heatmap(sub,vmax=1,vmin=-1,cmap='coolwarm',mask=mask,lw=.5)\nplt.xticks(fontsize=8)\nplt.yticks(fontsize=8)\ndespine()","9524c5c9":"f,ax=plt.subplots(1,2,figsize=(10,3))\nplt.subplots_adjust(wspace=.25)\nsns.pointplot(data=df,x='Partner',y='Churn',hue='Dependents',ax=ax[0])\nsns.countplot(df.Partner,hue=df.Dependents,ax=ax[1])\nplt.suptitle('Churn rate by Partner and Dependents',fontweight='bold')\ndespine()","1547cabb":"sub.corr().Dependents['Partner']","e9985243":"sub.corr().Contract[['PaperlessBilling','PaymentMethod']]","1f82d287":"sub.corr().PaperlessBilling['PaymentMethod']","f3dc4b79":"g=sns.catplot(data=df,x=\"PaymentMethod\",col=\"PaperlessBilling\",hue=\"Contract\",kind='count',height=3,aspect=1.3,\n             col_wrap=2)\nfor ax in g.axes:\n    ax.set_xticklabels(ax.get_xticklabels(),rotation=50,fontsize=9)\ng.set_titles(fontweight='bold')\ng.set_ylabels(fontweight='bold')\ndespine()","1cfacda3":"g=sns.catplot(data=df,x=\"PaymentMethod\",y=\"Churn\",col=\"PaperlessBilling\",hue=\"Contract\",kind='point',height=3,aspect=1.3,\n             col_wrap=2)\nfor ax in g.axes:\n    ax.set_xticklabels(ax.get_xticklabels(),rotation=50,fontsize=9)\ng.set_titles(fontweight='bold')\ng.set_ylabels(fontweight='bold')\ndespine()","4cd920fa":"f,ax=plt.subplots(1,2,figsize=(10,3.5))\nplt.subplots_adjust(wspace=.25)\nsns.boxplot(df.Contract,df.MonthlyCharges,hue=df.Churn,ax=ax[0])\nsns.pointplot(df.Contract,df.MonthlyCharges,hue=df.Churn)\nplt.suptitle('MonthlyCharges by Contract and Churn',fontweight='bold')\ndespine()","5d6630e5":"f,ax=plt.subplots(1,2,figsize=(10,3.5))\nplt.subplots_adjust(wspace=.25)\nsns.boxplot(df.PaymentMethod,df.MonthlyCharges,hue=df.Churn,ax=ax[0])\nsns.pointplot(df.PaymentMethod,df.MonthlyCharges,hue=df.Churn)\nplt.suptitle('MonthlyCharges by PaymentMethod and Churn',fontweight='bold')\nfor i in [0,1]:\n    ax[i].tick_params(axis='x', rotation=30, labelsize=9)\ndespine()","8ae14f16":"sub=df.select_dtypes(include='O').nunique()\nsub=sub[sub==2].index.tolist()\nsub # features with 2 unique values","1fef3380":"sub=[i for i in sub if set(df[i].unique())=={'Yes','No'}]\nsub # features with values: No - Yes","63da8407":"for i in sub:\n    df[i]=df[i].map({'Yes':1,'No':0}).astype('int')","c7dc3314":"df.gender=df.gender.map({'Female':0,'Male':1})\ndf=df.drop('customerID',axis=1)\ndf.info()","cc249509":"df=pd.get_dummies(df)","029f8f25":"df.info()","f36ed165":"X,y=df.drop('Churn',axis=1),df.Churn\nX.shape,y.shape","5b217eae":"from sklearn.ensemble import RandomForestClassifier\nparams={'random_state':42, 'n_estimators':500}\nclf=RandomForestClassifier(**params)\nclf.fit(X,y)","097df61b":"sub=pd.Series(data=clf.feature_importances_,index=X.columns).sort_values()\nplt.figure(figsize=(5,10))\nplt.barh(sub.index,sub.values)\nplt.yticks(fontsize=8)\ntitle('Our features importance')\ndespine()","0059ee67":"f=plt.figure(figsize=(10,5))\nplt.subplots_adjust(hspace=.5,wspace=.25)\nfor i,col in enumerate(numcol):\n    f.add_subplot(math.ceil(len(numcol)\/2),2,i+1)\n    sns.kdeplot(df[col])\n    sns.rugplot(df[col])\n    plt.ylabel('')\n    plt.xlabel(col,fontweight='bold')\nplt.suptitle('Distribution for our continuous features',fontweight='bold')\ndespine()","7029c2f2":"from sklearn.preprocessing import MinMaxScaler\nsc=MinMaxScaler()\nfor i in numcol:\n    df[i]=sc.fit_transform(df[i].values.reshape(-1,1)).reshape(1,-1)[0]","34404a52":"f=plt.figure(figsize=(10,5))\nplt.subplots_adjust(hspace=.5,wspace=.25)\nfor i,col in enumerate(numcol):\n    f.add_subplot(math.ceil(len(numcol)\/2),2,i+1)\n    sns.kdeplot(df[col])\n    sns.rugplot(df[col])\n    plt.ylabel('')\n    plt.xlabel(col,fontweight='bold')\nplt.suptitle('Distribution for our continuous features',fontweight='bold')\ndespine()","b5abcdb0":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, classification_report\n\nX,y=df.drop(columns='Churn'),df.Churn\nXtrain,Xval,ytrain,yval=train_test_split(X,y,test_size=.25,random_state=42)\nXtrain.shape,Xval.shape","1af04483":"def fit(clf,Xtrain,ytrain,Xval,yval,cmap='RdBu'):\n    clf.fit(Xtrain,ytrain)\n    ypred=clf.predict(Xval)\n    sns.heatmap(confusion_matrix(yval,ypred),annot=True,fmt='.0f',cmap=cmap)\n    print(f\"train score: {clf.score(Xtrain,ytrain)}\")\n    print(f\"test score: {clf.score(Xval,yval)}\\n\")\n    print(classification_report(yval,ypred))","01ad5ad1":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier(n_neighbors=21)\nfit(knn,Xtrain,ytrain,Xval,yval)","27539070":"from sklearn.svm import SVC\nsvc=SVC(random_state=42)\nfit(svc,Xtrain,ytrain,Xval,yval)","b85ab3fd":"from sklearn.ensemble import RandomForestClassifier\nrf=RandomForestClassifier(random_state=42, n_estimators=200)\nfit(rf,Xtrain,ytrain,Xval,yval)","57f76378":"from lightgbm import LGBMClassifier\nlgbm=LGBMClassifier(learning_rate=.03,n_estimators=400)\nfit(lgbm,Xtrain,ytrain,Xval,yval)","d1d4eb58":"from xgboost import XGBClassifier\nxgb=XGBClassifier(booster='gblinear', learning_rate=.05, n_estimators=100, random_state=42)\nfit(xgb,Xtrain,ytrain,Xval,yval)","2df3e109":"from catboost import CatBoostClassifier","8855bc69":"cb=CatBoostClassifier(random_state=42, learning_rate=.05, iterations=200)\nfit(cb,Xtrain,ytrain,Xval,yval)","c7af0fbe":"from sklearn.ensemble import GradientBoostingClassifier\ngbc=GradientBoostingClassifier(learning_rate=.1, n_estimators=100, random_state=42, loss='deviance')\nfit(gbc,Xtrain,ytrain,Xval,yval)","dfbd61e1":"- Feature not showing a clear difference between churning and non-churning customers: gender\n- Feature showing a slightly difference between groups: MultipleLines and PhoneService\n- We also notice that **customers without internet service have the lowest churn rate**\n\nMore details:\n- Partner and Dependents: customers without a partner are more likely to churn and customers without dependents are also more likely to churn\n- Contract, PaymentMethod and PaperlessBilling: customers with long-term contracts have lower churn rates, customers with paperless billing are more likely to churn, customers using electronic check as a payment method have a higher churn rate\n- Additional services: There are 6 additional services, including: OnlineSecurity, OnelineBackup, DeviceProtection, TechSupport, StreamingTV, and StreamingMovies. It can be seen that **customers not using these additional services are more likely to churn**, except for streaming services that do not show a clear difference\n- MultipleLines and PhoneService: Customers having multiple lines, customers using phone services have a higher probability of churning","8b9c29e3":"## 1.1 Importing python libraries","12d31d5b":"# 3. Data preprocessing","869cf88d":"- In general, long-term contracts have higher MonthlyCharges\n- Customers leaving pay higher MonthlyCharges","b54f9847":"### SVC","0434e821":"- Our target variable is not really well-balanced with about 73% of customers leaving","9e99d982":"# 4. Modeling","567b5fae":"- Our dataset includes 7042 observations and 21 features\n- Our target feature is Churn, indicating whether or not a customer has left within the last month\n- There are only 3 numerical features: SeniorCitizen, TotalCharges and tenure (SeniorCitizen is actually a categorical feature with 2 values, 0 and 1). We also notice that TotalCharges may contains some inconsistent values (like strings) due to its datatype (object)\n- Looks like we do not have missing data","4438b35c":"## 1.3 Data distribution","ebcef815":"- Some features show significant correlation, such as: Dependents and Parner, MonthlyCharges and additional services","1d9bb462":"- Our numerical features **do not contain outliers, so no need processing**","92d89538":"### XGBClassifier","5202fd42":"### 2.3.2 Partner and Dependents","bb682851":"## 3.2 Calculate feature importances","0fa9e3d2":"- Our numerical features are not normally distributed, so we are going to use MinMaxScaler to scale them","3538b944":"# Content\n1. Importing data\n    - 1.1 Importing python libraries\n    - 1.2 Importing our dataset\n    - 1.3 Data distribution\n2. Exploratory data analysis\n    - 2.1 Defining functions\n    - 2.2 Univariate analysis\n    - 2.3 Multivariate analysis\n3. Data preprocessing\n    - 3.1 Categorical features encoding\n    - 3.2 Calculate feature importances\n    - 3.3 Features Scaling\n4. Modeling","a51670fe":"### 2.2.2 Numerical features","3a89c142":"Let's see our continuous features' distribution again","74e8eb28":"## 3.1 Categorical features encoding","053c46db":"### LGBMClassifier","d5e7578d":"### RandomForestClassifier","f5e7480c":"- 3 most importance features (in order) are: TotalCharges, MonthlyCharges, and tenure","8454a382":"- Mailed check payment method has the lowest MonthlyCharges, and it also has lowest churn rates\n- There is a huge gap between churning and non-churning customers using mailed check as a payment method","37944a22":"# Data Dictionary\n- Source: https:\/\/www.kaggle.com\/blastchar\/telco-customer-churn\n- Reference: https:\/\/www.kaggle.com\/jsaguiar\/exploratory-analysis-with-seaborn\/notebook\n\n        - Customer ID\n        - gender: Whether the customer is a male or a female\n        - SeniorCitizen: Whether the customer is a senior citizen or not (1, 0)\n        - Partner: Whether the customer has a partner or not (Yes, No)\n        - Dependents: Whether the customer has dependents or not (Yes, No)\n        - tenure: Number of months the customer has stayed with the company\n        - PhoneService: Whether the customer has a phone service or not (Yes, No)\n        - MultipleLines: Whether the customer has multiple lines or not (Yes, No, No phone service)\n        - InternetService: Customer\u2019s internet service provider (DSL, Fiber optic, No)\n        - OnlineSecurity: Whether the customer has online security or not (Yes, No, No internet service)\n        - Churn: our target variable","2597c3a6":"From the kdeplot, we see that:\n- New customers are more likely to churn\n- Customers having higher monthly charges are more likely to churn, monthly charges show a significant different trend between churning and non-churning customers\n- For total charges, we haven't seen any clear trend\n- **Tenure and monthly charges could be important features in our model**","5f2f3673":"# 2. Exploratory data analysis","952f7c19":"### CatBoostClassifier","f735ef0d":"## 2.1 Defining functions","138d930a":"## 1.2 Importing our dataset","57b36cee":"### 2.3.5 Contract, PaymentMethod and MonthlyCharges","6a18ceea":"# 1. Importing data","5b73bf2d":"#### MonthlyCharges and PaymentMethod","9123788f":"### GradientBoostingClassifier","27ffe6ab":"- 5 binary features\n- 10 features with 3-4 unique values\n- We don't concern about customerID becase it acts as an index","0d859426":"### KNN","daec7cbe":"### 2.3.4 Contract, PaperlessBilling and PaymentMethod","b1f4bb54":"#### MonthlyCharges and Contract","4e79f833":"## 2.2 Univariate analysis","f4e7fde6":"- But when looking at the distribution of categorical features, we find that the mode value for TotalCharges is \" \" (a blank space), so we will treat these values as missing data","e6805a81":"- It seems like there are no extremely difference on our numerical data","37c22614":"## 3.3 Features Scaling","8505f7d8":"## 2.3 Multivariate analysis","92df0fd3":"### 2.2.1 Our target variable: Churn","88cab20f":"- The correlation coefficient of -0.75 between Dependents and Partner indicates that customers with partner are more likely to have dependents, which makes sense\n- We've noticed that customers without parner and\/or dependents have a higher churn rate","95b4b022":"### 2.2.3 Categorical features","9a28e0d3":"- We found that customers with short-term contracts tend to use manual payment methods more, and they are also more likely to use paperless payment methods","bec6da30":"- The most important features (in order) are: Contract, OnlineSecurity, TechSupport, DeviceProtection and PaymentMethod","37bcc0e6":"- The trend is similar to what we've seen earlier","a8f7e773":"### 2.3.1 Correlation Matrix"}}