{"cell_type":{"7d7eb71d":"code","01ecee40":"code","1f448511":"code","0f857e50":"code","10b1811e":"code","b1ee78c1":"code","f25d434a":"code","9ff446df":"code","280f48d6":"code","cfc8c90f":"code","b7e16cd7":"code","92d1ea02":"code","6e5efef1":"code","5bcefead":"code","924e217c":"code","78890a3d":"code","33a6d162":"code","ecd77082":"code","cb844c85":"code","0c0dde59":"code","672640a0":"code","f13999b7":"markdown","b8e46651":"markdown","a3563637":"markdown","25cd6d0c":"markdown","90659ce6":"markdown","20aef195":"markdown","bf70d882":"markdown","709bbb7e":"markdown","5ad4954a":"markdown"},"source":{"7d7eb71d":"from fastai.tabular import *","01ecee40":"import pandas as pd\nsample_submission = pd.read_csv(\"..\/input\/cat-in-the-dat-ii\/sample_submission.csv\")\nX_test = pd.read_csv(\"..\/input\/cat-in-the-dat-ii\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/cat-in-the-dat-ii\/train.csv\")","1f448511":"train.head()","0f857e50":"procs = [FillMissing, Categorify, Normalize]\nFillMissing.FillStrategy='MEAN'\n\ndep_var = 'target'\ncat_names = ['bin_0', 'bin_1', 'bin_2', 'bin_3', 'bin_4', 'nom_0', 'nom_1', 'nom_2', \n             'nom_3', 'nom_4', 'nom_5', 'nom_6', 'nom_7', 'nom_8', 'nom_9',\n            'ord_0', 'ord_1', 'ord_2', 'ord_3', 'ord_4', 'ord_5', 'day', 'month']\ncont_names = []\nX=train[cont_names]\nX=train[cat_names]","10b1811e":"PATH = Path('\/kaggle\/input\/cat-in-the-dat-ii\/')\ntest = TabularList.from_df(X_test, path=PATH, cat_names=cat_names, cont_names=cont_names)","b1ee78c1":"data = (TabularList.from_df(train, path=PATH,\n                            cat_names=cat_names, \n                            cont_names=cont_names,\n                            procs=procs)\n                           .split_by_idx(valid_idx = range(len(train)-50000, len(train)))\n                           .label_from_df(cols=dep_var)\n                           .add_test(test)\n                           .databunch())\nprint(data.train_ds.cont_names)\nprint(data.train_ds.cat_names)","f25d434a":"data.show_batch()","9ff446df":"learn = tabular_learner(data, layers=[200,100], metrics=accuracy,model_dir=\"\/tmp\/model\/\", ps=0.15)","280f48d6":"# learn.lr_find()\n# learn.recorder.plot()","cfc8c90f":"learn.fit(1, lr=1e-3)","b7e16cd7":"# learn.lr_find()\n# learn.recorder.plot()","92d1ea02":"lr=1e-03","6e5efef1":"learn.fit_one_cycle(1, slice(lr))","5bcefead":"# learn.lr_find()\n# learn.recorder.plot()","924e217c":"lr=1e-03","78890a3d":"learn.fit_one_cycle(2, slice(lr),wd=0.3)","33a6d162":"learn.recorder.plot_losses()","ecd77082":"learn.save('model_1')","cb844c85":"preds = learn.get_preds(ds_type=DatasetType.Test)[0][:,1].numpy()","0c0dde59":"submission = pd.DataFrame({'id':sample_submission['id'],'target':preds})\nsubmission.to_csv('my_submission.csv', header=True, index=False)","672640a0":"submission.describe()","f13999b7":"It shows that the model get stuck so I used 'wd' weight decay but is didnt seem to work","b8e46651":"# Prepare train\/test set","a3563637":"# Select features","25cd6d0c":"# Train model","90659ce6":"![](https:\/\/media.giphy.com\/media\/l2JJu8U8SoHhQEnoQ\/giphy.gif)","20aef195":"# Submission","bf70d882":"# Importing data","709bbb7e":"# Tabular model","5ad4954a":"Tabular data should be in a Pandas `DataFrame`."}}