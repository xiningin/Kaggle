{"cell_type":{"9661176a":"code","6530ae44":"code","8dfcf682":"code","1ef1f6f2":"code","d1ec8473":"code","08fcef08":"code","0f1ddac3":"code","79711f81":"code","5a0de952":"code","c60e0d28":"code","2eedc3c7":"code","5644fb7b":"code","2b143127":"code","317cc9bc":"code","08386b64":"code","4be94ed1":"code","d452fef9":"code","4d6b4808":"code","d081d23b":"code","7c1be91d":"code","2c05818f":"code","a41a1713":"code","b225e4a6":"code","700a85d7":"code","e41e2e02":"markdown","16d0d7d6":"markdown"},"source":{"9661176a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6530ae44":"# Read the csv file \n\nvehicle_csv=pd.read_csv(\"\/kaggle\/input\/st4035-2019-assignment-1\/sampleSubmisssionFile.csv\")\nvehicle_test=pd.read_csv(\"\/kaggle\/input\/st4035-2019-assignment-1\/vehicle_test.csv\")\nvehicle_train=pd.read_csv(\"\/kaggle\/input\/st4035-2019-assignment-1\/vehicle_train.csv\")\nvehicle_labels=pd.read_csv(\"\/kaggle\/input\/st4035-2019-assignment-1\/vehicle_training_labels.csv\")\n","8dfcf682":"#Shape of the dataset\nprint(vehicle_csv.shape)\nprint(vehicle_labels.shape)\nprint(vehicle_test.shape)\nprint(vehicle_train.shape)","1ef1f6f2":"#Display the training dataset\n\nvehicle_train.head(5)","d1ec8473":"#Displaying the columns\n\nvehicle_train.columns","08fcef08":"#Data type of the attributes\n\nvehicle_csv.dtypes","0f1ddac3":"#Five point summary of the dataset\n\nvehicle_train.describe().T","79711f81":"vehicle_train.dtypes","5a0de952":"#Boxplot to understand spread and outliers\nvehicle_train.plot(kind='box', figsize=(25,15))","c60e0d28":"vehicle_train.hist(figsize=(15,15))","2eedc3c7":"vehicle_train.isnull().sum()","5644fb7b":"vehicle_train.info()","2b143127":"#Identify outliers and replace them by median\nfor col_name in vehicle_train.columns[:-1]:\n    q1 = vehicle_train[col_name].quantile(0.25)\n    q3 = vehicle_train[col_name].quantile(0.75)\n    iqr = q3 - q1\n    \n    low = q1-1.5*iqr\n    high = q3+1.5*iqr\n    \n    vehicle_train.loc[(vehicle_train[col_name] < low) | (vehicle_train[col_name] > high), col_name] = vehicle_train[col_name].median()","317cc9bc":"vehicle_train.plot(kind='box', figsize=(20,10))","08386b64":"from pandas.plotting import scatter_matrix\nscatter_matrix(vehicle_train, alpha=0.2, figsize=(20, 20),diagonal='kde')\n\n#spd = pd.scatter_matrix(vehicle_train, figsize = (20,20), diagonal='kde')","4be94ed1":"#Create and view the correlation matrix\nvehicle_train.corr()","d452fef9":"## There are several variables that are highly correlated with each other","4d6b4808":"#Run PCA and plot to visualise the ideal number of components\nfrom sklearn.decomposition import PCA\n\npca = PCA().fit(vehicle_train)\n\nplt.plot(np.cumsum(pca.explained_variance_ratio_))\n\n\n","d081d23b":"#Based on the plot, we will select 10 components\npca = PCA(n_components=10)\npca.fit(vehicle_train)\n\n#Assign the components to the X variable\nvehicle_train = pca.transform(vehicle_train)","7c1be91d":"## We will use the Naive Bayes & Support Vector Classifiers","2c05818f":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC","a41a1713":"#Grid search to tune model parameters for SVC\nfrom sklearn.model_selection import GridSearchCV\n\nmodel = SVC()\n\nparams = {'C': [0.01, 0.1, 0.5, 1], 'kernel': ['linear', 'rbf']}\n\nmodel1 = GridSearchCV(model, param_grid=params, verbose=5)\n\nmodel1.fit(vehicle_train, vehicle_labels)\n\nprint(\"Best Hyper Parameters:\\n\", model1.best_params_)","b225e4a6":"#Build the model with the best hyper parameters\nfrom sklearn.cross_validation import cross_val_score\n\nmodel = SVC(C=0.5, kernel=\"linear\")\n\nscores = cross_val_score(model, X, Y, cv=10)\n\nprint(scores)","700a85d7":"#Use the Naive Bayes CLassifier with k fold cross validation\nmodel = GaussianNB()\n\nscores = cross_val_score(model, X, Y, cv=10)\n\nprint(scores)","e41e2e02":"### Since SVC gives a better performance, it can be used for final model building and prediction","16d0d7d6":"**We have all the columns containing the numeric value ,while only class atttribute has categorical values**"}}