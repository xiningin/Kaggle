{"cell_type":{"65700a76":"code","bade8ab1":"code","13328200":"code","197fb3c8":"code","a0c7f55e":"code","b927777d":"code","195f2c0f":"code","521b65ec":"code","616168b4":"code","426950de":"code","e422fe81":"code","ff4e50a1":"code","f0e34464":"code","27aa9ac8":"code","332680cc":"code","637e0611":"code","d3fa64e8":"code","02cab392":"code","8c408123":"code","d1ce39b4":"code","163ecf86":"code","9b4617be":"code","ffcf3a96":"code","e417170f":"code","73030141":"code","135ff60a":"markdown","8e202d31":"markdown","d470d69e":"markdown","56250867":"markdown","35b12944":"markdown","921ef136":"markdown","b759d244":"markdown","4ef245f5":"markdown","c997a4d6":"markdown","aedd0ec1":"markdown"},"source":{"65700a76":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport missingno as msno\n\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import roc_auc_score, confusion_matrix\n\nimport warnings\nwarnings.filterwarnings('ignore')","bade8ab1":"# load data\ntrain = pd.read_csv(\"..\/input\/widsdatathon2021\/TrainingWiDS2021.csv\")\ntest = pd.read_csv(\"..\/input\/widsdatathon2021\/UnlabeledWiDS2021.csv\")\ndata_dict = pd.read_csv('..\/input\/widsdatathon2021\/DataDictionaryWiDS2021.csv') \n# sol = pd.read_csv(\"..\/input\/widsdatathon2021\/SolutionTemplateWiDS2021.csv\")\n\n# split out train labels\ntrain_labels = train[['diabetes_mellitus']]\ntrain = train.drop(['Unnamed: 0', 'diabetes_mellitus'], axis=1)\ntest = test.drop(['Unnamed: 0'], axis=1)\n\nprint(\"Train:\", train.shape)\nprint(\"Train label:\", train_labels.shape)\nprint(\"Test:\", test.shape)","13328200":"train.head()","197fb3c8":"def missing_values_table(df):\n        # Total missing values\n        mis_val_table_ren_columns = pd.DataFrame({\n            'dtype': df.dtypes,\n            'num_missing': df.isnull().sum(),\n            '% missing': round(100 * df.isnull().sum() \/ len(df), 2)\n            }).sort_values('num_missing', ascending=False)\n                \n        return mis_val_table_ren_columns\n\ntrain_missing = missing_values_table(train)\nprint(train_missing)\nprint(missing_values_table(test))","a0c7f55e":"vars_to_drop = set(train_missing.index[train_missing.iloc[:,2] > 70])\n\ntrain.drop(vars_to_drop, axis=1, inplace=True)\ntest.drop(vars_to_drop, axis=1, inplace=True)","b927777d":"print(train.shape, test.shape)","195f2c0f":"cols_by_dtype = train.columns.to_series().groupby(train.dtypes).groups\ncols_by_dtype = {k.name: v for k, v in cols_by_dtype.items()}\ncols_by_dtype","521b65ec":"cols_by_dtype['float64'][:21]\n\nf = pd.melt(train[cols_by_dtype['float64'][:21]])\ng = sns.FacetGrid(f, col=\"variable\",  col_wrap=3, sharex=False, sharey=False, size=5)\ng = g.map(sns.distplot, \"value\")","616168b4":"cols_by_dtype['float64'][21:42]\n\nf = pd.melt(train[cols_by_dtype['float64'][21:42]])\ng = sns.FacetGrid(f, col=\"variable\",  col_wrap=3, sharex=False, sharey=False, size=5)\ng = g.map(sns.distplot, \"value\")","426950de":"cols_by_dtype['float64'][43:64]\n\nf = pd.melt(train[cols_by_dtype['float64'][43:64]])\ng = sns.FacetGrid(f, col=\"variable\",  col_wrap=3, sharex=False, sharey=False, size=5)\ng = g.map(sns.distplot, \"value\")","e422fe81":"cols_by_dtype['object']","ff4e50a1":"sns.catplot(x=\"gender\", y=\"d1_heartrate_min\", hue=\"icu_stay_type\", kind=\"point\", data=train)","f0e34464":"cols_by_dtype['object']\n\ndef num_of_categories(df):\n    \"\"\" Prints number of unique values per column of type object\"\"\" \n\n    for col in df.dtypes[df.dtypes == 'object'].index.tolist():\n        print(col, ':', df[col].nunique())\n        \nnum_of_categories(train[cols_by_dtype['object']])","27aa9ac8":"sns.set(style=\"dark\")\n\nsns.catplot(y=\"hospital_admit_source\", hue=\"gender\", kind=\"count\", \n            palette=\"pastel\", edgecolor=\".6\",\n            data=train)","332680cc":"sns.violinplot(x=train.icu_stay_type, y=train.creatinine_apache)","637e0611":"pd.melt(train, value_vars=train[cols_by_dtype['object']]).groupby('variable')['value'].value_counts()\n# pd.melt(train, value_vars=train[cols_by_dtype['object']])\n\nfor col in cols_by_dtype['object']:\n    f, ax = plt.subplots(figsize=(8,4))\n    plot = sns.barplot(x = train[col].value_counts().index, y = train[col].value_counts().values, palette=\"ch:.25\")\n    plt.xticks(rotation=45)\n    plt.show()","d3fa64e8":"def explore_cat(category, df = data_dict):\n    return df[df.Category == category]\n    \nexplore_cat('APACHE covariate')","02cab392":"data_dict.Category.value_counts()","8c408123":"explore_cat('vitals')[:20]\n# ['Data Type'].value_counts()","d1ce39b4":"for i in range(173,180):\n    print(explore_cat('APACHE comorbidity')['Variable Name'][i], ':', \n          explore_cat('APACHE comorbidity')['Description'][i], '\\n')","163ecf86":"sns.boxplot(x=train_labels['diabetes_mellitus'], y=train.bmi, hue=train.aids)\nplt.legend(loc=1, labels=['AIDS', 'no_AIDS'])\nplt.xlabel('Diabetes mellitus')\nplt.ylabel('Body mass index')","9b4617be":"sns.catplot(x=\"ethnicity\", y=\"d1_mbp_max\", kind=\"boxen\",\n            data=train.sort_values(\"ethnicity\"))\nplt.xticks(rotation=45)","ffcf3a96":"sns.boxplot(x='ethnicity', y='age', hue='icu_stay_type', data=train)\nplt.xticks(rotation=45)","e417170f":"sns.factorplot(x='ethnicity',y='weight',hue='gender',jitter=True,dodge=True,palette=\"Set2\",data=train)\nplt.xticks(rotation=45)","73030141":"sns.set(style=\"whitegrid\")\n\ndata_subset = train[['d1_mbp_min','d1_mbp_max','d1_heartrate_min','creatinine_apache','icu_stay_type'] ]\n\n# \"Melt\" the dataset to \"long-form\" or \"tidy\" representation\ndata_subset = pd.melt(data_subset, \"icu_stay_type\", var_name=\"measurement\")\n\n# Initialize the figure\nf, ax = plt.subplots()\nsns.despine(bottom=True, left=True)\n\n# Show each observation with a scatterplot\nsns.stripplot(x=\"value\", y=\"measurement\", hue=\"icu_stay_type\",\n              data=data_subset, dodge=True, alpha=.25, zorder=1)\n\n# Show the conditional means\nsns.pointplot(x=\"value\", y=\"measurement\", hue=\"icu_stay_type\",\n              data=data_subset, dodge=.532, join=False, palette=\"dark\",\n              markers=\"d\", scale=.75, ci=None)\n\n# Improve the legend \nhandles, labels = ax.get_legend_handles_labels()\nax.legend(handles[3:], labels[3:], title=\"icu_stay_type\",\n          handletextpad=0, columnspacing=1,\n          loc=\"lower right\", ncol=3, frameon=True)","135ff60a":"Let's look at the distribution of numeric variables. ","8e202d31":"Asians tend to have lowest average weight than other ethnic groups. ","d470d69e":"# WiDS 2021","56250867":"# Vizualization","35b12944":"## 1. Define the Problem\n\nThe Problem: Given the information of vitals of a patient X, predict whether patient X has diabetes mellitus or not\n\nThe Task: Binary Classification\n\nThe Data: The competition provides us with 5 tabular datasets.\n\n`TrainingWiDS2021.csv` : The training data with 130,157 instances and 180 features(including the target feature represented by `diabetes_mellitus`)  \n`UnlabeledWiDS2021.csv` : The testing data with 10,234 instances and 179 features  \n`SampleSubmissionWiDS2021.csv` : A sample submission  \n`SolutionTemplateWiDS2021.csv` : Solution template for competition  \n`DataDictionaryWiDS2021.csv` : File describing all the features in the dataset  ","921ef136":"Women's lowest value of heartrate is slightly higher than that of men. ","b759d244":"Patients with a definitive diagnosis of acquired immune deficiency syndrome (AIDS) have lower body mass index than those without AIDS. ","4ef245f5":"Let's have a look at the first 5 rows of the train dataset.","c997a4d6":"### Handling missing values\n\nWe'll first remove variables containg more than 70% missing values, because these are unlikely to be used further in the model.","aedd0ec1":"We have a dataset which describes all the variables, so let's look closer to get an idea of what all those 170+ variables mean. "}}