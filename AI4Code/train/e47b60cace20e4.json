{"cell_type":{"82d7ef6c":"code","cf08b350":"code","11352d09":"code","41b7bb3d":"code","af633cd8":"code","be0e26e7":"code","af2170bb":"code","4a3a6a64":"code","908650f6":"code","d19ae897":"code","04333b3c":"code","7ed83e68":"code","72c74d68":"code","109c6f21":"code","d610f84f":"code","44393110":"code","1d5f9dcb":"code","f921a9de":"code","f0eac50c":"code","a542ffed":"code","8c18f78e":"code","fcda71d5":"code","843bf200":"markdown","159d256d":"markdown","230f2432":"markdown","2b05ace8":"markdown","2c6b0fc1":"markdown","7e1bbec1":"markdown","8fd098c4":"markdown","67babcbf":"markdown","67c1a79f":"markdown","f67fc743":"markdown"},"source":{"82d7ef6c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cf08b350":"file_path = '\/kaggle\/input\/30-days-of-ml\/train.csv'\nX = pd.read_csv(file_path)\nprint(X.columns)","11352d09":"# Remove rows with missing target\nX.dropna(axis=0, subset=['target'], inplace=True)\n\n#Separate target from predictors\ny = X['target']\nX.drop(['target'], axis=1, inplace=True)\n\n#Remove ID\nX.drop(['id'], axis=1, inplace=True)\n\nprint(X.columns)","41b7bb3d":"from sklearn.model_selection import train_test_split\n\n# split data into training and validation data, for both features and target\n# The split is based on a random number generator. \ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 0)\n\nprint('The number of train_X:', len(train_X))\nprint('The number of train_y:', len(train_y))\nprint('The number of val_X:', len(val_X))\nprint('The number of val_Y:', len(val_y))","af633cd8":"train_X.shape","be0e26e7":"train_X.head()","af2170bb":"train_X.describe()","4a3a6a64":"#pick just continous features\ncont_cols = ['cont0', 'cont1', 'cont2', 'cont3', 'cont4', 'cont5', 'cont6', 'cont7', 'cont8', 'cont9', 'cont10', 'cont11', 'cont12', 'cont13']\ntrain_X_cont = train_X[cont_cols]\nval_X_cont = val_X[cont_cols]\nprint(train_X_cont.columns)\n\ncat_cols = ['cat0', 'cat1', 'cat2', 'cat3', 'cat4', 'cat5', 'cat6', 'cat7', 'cat8', 'cat9']\ntrain_X_cat = train_X[cat_cols]\nval_X_cat = val_X[cat_cols]\nprint(train_X_cat.columns)","908650f6":"train_X_cont.isnull().sum()","d19ae897":"val_X_cont.isnull().sum()","04333b3c":"train_X_cat.isnull().sum()","7ed83e68":"val_X_cat.isnull().sum()","72c74d68":"from sklearn.linear_model import LinearRegression\n\nlinear_regression_model = LinearRegression()","109c6f21":"linear_regression_model.fit(train_X_cont, train_y)","d610f84f":"predictions_linear_regression = linear_regression_model.predict(val_X_cont)","44393110":"from sklearn.metrics import mean_squared_error\n\nRMSE = mean_squared_error(val_y, predictions_linear_regression)**0.5\nprint(RMSE)","1d5f9dcb":"# path to file you will use for predictions\ntest_data_path = '\/kaggle\/input\/30-days-of-ml\/test.csv'\n\n# read test data file using pandas\ntest_data = pd.read_csv(test_data_path)\nprint(test_data.columns)\n","f921a9de":"# create test_X which comes from test_data but includes only the columns you used for prediction.\n\n# The list of columns is stored in a variable called features\ntest_X = test_data[cont_cols]\n\nprint(test_X.columns)","f0eac50c":"test_X.isnull().sum()","a542ffed":"test_X.shape","8c18f78e":"test_predictions = linear_regression_model.predict(test_X)","fcda71d5":"# Run the code to save predictions in the format used for competition scoring\noutput = pd.DataFrame({'id': test_data.id,\n                       'target': test_predictions})\noutput.to_csv('submission.csv', index=False)","843bf200":"## Get Data","159d256d":"## Explore Dataset","230f2432":"## Feature Selection","2b05ace8":"## Evaluation","2c6b0fc1":"## Predict for Test Dataset","7e1bbec1":"## Generate a Submit File","8fd098c4":"## Modeling","67babcbf":"## Handle Missing Values","67c1a79f":"## Split Data","f67fc743":"### Linear Regression on continuous features"}}