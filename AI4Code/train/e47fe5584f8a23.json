{"cell_type":{"60f38106":"code","293a5259":"code","3227ccc8":"code","9fc0ff11":"code","1222455d":"code","722c5cd7":"code","29f4113f":"code","ad0606d8":"code","d5898560":"code","d7562444":"code","76f09597":"code","32145fc4":"code","cbbc02bf":"code","87d1f912":"code","17759645":"code","e3399a02":"code","9d3a960a":"code","52fc7c46":"code","8c62f95b":"code","f104a540":"code","f8459eef":"code","2ca57560":"code","c57c589d":"code","4fd72225":"code","4676523e":"code","286dbaa7":"code","f9daf624":"code","3ea963e5":"code","2f3152b7":"code","175c7c0a":"code","07da9d39":"code","cb31e725":"code","9fc82467":"code","44ac09bf":"code","e1f5b17a":"code","21caee68":"code","a0ce21b0":"code","af595f8c":"code","5b7863f1":"code","23f479e9":"markdown","97327bd4":"markdown","f13ace71":"markdown","faf9b30b":"markdown","1bc01b65":"markdown","842096ca":"markdown","5ca65ee0":"markdown","944ffc9a":"markdown","ededcfd1":"markdown","a956dcbf":"markdown","d97dcaf2":"markdown","01321c6b":"markdown","72e66aa9":"markdown","6d4bd8b0":"markdown","a6b5949a":"markdown","1ec060e5":"markdown"},"source":{"60f38106":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","293a5259":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3227ccc8":"heart = pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")\nsaturation = pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/o2Saturation.csv\")","9fc0ff11":"heart.head()","1222455d":"heart.info()","722c5cd7":"heart.describe()","29f4113f":"heart.isnull().sum()","ad0606d8":"plt.figure(figsize=(10, 6))\nsns.countplot(x='age',data=heart)","d5898560":"plt.figure(figsize=(12, 12))\nsns.heatmap(heart.corr(),annot=True, cmap=\"YlGnBu\")\nplt.title('Co-Relation')","d7562444":"plt.figure(figsize=(12,8))\nsns.countplot(x='output',data=heart, hue=heart['sex'])\npositions = (0, 1)\nlabels = (\"Less Chance of Heart Attack\", \"More Chance of Heart Attack\")\nplt.xticks(positions, labels)","76f09597":"plt.figure(figsize=(12,8))\nplt.title('Heart attack by Chest Pain',fontsize=15)\nsns.countplot(x='output',data=heart, hue=heart['cp'])\nplt.legend([\"Typical Angina\", \"Atypical\",\"Anginanon Anginal Pain\",\"Asymptomatic\"], loc =\"upper right\",fontsize=13)\npositions = (0, 1)\nlabels = (\"Less Chance of Heart Attack\", \"More Chance of Heart Attack\")\nplt.xticks(positions, labels)","32145fc4":"plt.figure(figsize=(12,8))\nplt.title('Heart attack by fasting blood sugar > 120 mg\/dl',fontsize=15)\nsns.countplot(x='output',data=heart,hue=heart['fbs'])\nplt.legend([\"True\",\"False\"],fontsize=13)\npositions = (0, 1)\nlabels = (\"Less Chance of Heart Attack\", \"More Chance of Heart Attack\")\nplt.xticks(positions, labels)","cbbc02bf":"plt.figure(figsize=(12,8))\nplt.title('Heart attack by restecg',fontsize=15)\nsns.countplot(x='output',data=heart,hue = heart['restecg'])\nplt.legend([\"Normal\",\"Having ST-T wave abnormality\",\"Showing probable or definite left ventricular hypertrophy by Estes\"],fontsize=11)\npositions = (0, 1)\nlabels = (\"Less Chance of Heart Attack\", \"More Chance of Heart Attack\")\nplt.xticks(positions, labels)","87d1f912":"plt.figure(figsize=(12,8))\nplt.title('Exercise induced angina',fontsize=15)\nsns.countplot(x='output',data=heart,hue=heart['exng'])\nplt.legend([\"No\",\"Yes\"],fontsize=11)\npositions = (0, 1)\nlabels = (\"Less Chance of Heart Attack\", \"More Chance of Heart Attack\")\nplt.xticks(positions, labels)","17759645":"plt.figure(figsize=(12,8))\n\nplt.title('Heart Attack by SLP',fontsize=15)\nsns.countplot(x='output',data=heart,hue=heart['slp'])\npositions = (0, 1)\nlabels = (\"Less Chance of Heart Attack\", \"More Chance of Heart Attack\")\nplt.xticks(positions, labels)","e3399a02":"plt.figure(figsize=(12,8))\n\nplt.title('Heart attack by number of major vessels',fontsize=15)\nsns.countplot(x='output',data=heart,hue=heart['caa'])\npositions = (0, 1)\nlabels = (\"Less Chance of Heart Attack\", \"More Chance of Heart Attack\")\nplt.xticks(positions, labels)","9d3a960a":"plt.figure(figsize=(12,8))\n\nplt.title('Heart attack by thall',fontsize=15)\nsns.countplot(x='output',data=heart,hue=heart['thall'],palette=\"rocket\")\npositions = (0, 1)\nlabels = (\"Less Chance of Heart Attack\", \"More Chance of Heart Attack\")\nplt.xticks(positions, labels)","52fc7c46":"plt.figure(figsize=(10,10))\nplt.xlabel(\"Cholestrol\")\nplt.ylabel(\"Resting Blood Pressure\")\nsns.scatterplot(x=\"chol\", y=\"trtbps\",data=heart,hue=\"output\",s=50)\nplt.legend([\"Less Chance of Heart Attack\", \"More Chance of Heart Attack\"],fontsize=11)","8c62f95b":"plt.figure(figsize=(10,10))\n\nsns.scatterplot(x='trtbps', y='thalachh',data=heart,hue=\"output\",s=50)\nplt.legend([\"Less Chance of Heart Attack\", \"More Chance of Heart Attack\"],fontsize=11)\nplt.xlabel('Maximum Heart Rate acheived')\nplt.ylabel('Resting blood Pressure')","f104a540":"plt.figure(figsize=(10,10))\nsns.scatterplot(x='chol', y='thalachh',data=heart,hue=\"output\",s=50)\nplt.legend([\"Less Chance of Heart Attack\", \"More Chance of Heart Attack\"],fontsize=11)\nplt.xlabel('Cholestrol')\nplt.ylabel('Resting blood Pressure')","f8459eef":"from sklearn.model_selection import train_test_split\nX = heart[['age', 'sex', 'cp', 'trtbps', 'chol', 'fbs', 'restecg', 'thalachh','exng', 'oldpeak', 'slp', 'caa', 'thall']]\ny = heart['output']","2ca57560":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.3,random_state = 101)","c57c589d":"from sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nX_train = ss.fit_transform(X_train)\nX_test = ss.transform(X_test)","4fd72225":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\n\n\nlogmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)\npredictions = logmodel.predict(X_test)\nprint(classification_report(y_test,predictions))","4676523e":"Log_Accuracy = accuracy_score(y_test,predictions)\nLog_Accuracy\nprint (\"The accuracy of Logistic Regression is : \",Log_Accuracy*100, \"%\")","286dbaa7":"sns.heatmap(confusion_matrix(y_test,predictions),annot=True,cmap=\"YlGnBu\")","f9daf624":"from sklearn.ensemble import RandomForestClassifier\n\nrfc = RandomForestClassifier()\nrfc.fit(X_train, y_train)\npred = rfc.predict(X_test)\nprint(classification_report(y_test,pred))","3ea963e5":"rfc_acc = accuracy_score(pred, y_test)\nprint (\"The accuracy of Random Forest Classifier is : \",rfc_acc*100, \"%\")","2f3152b7":"sns.heatmap(confusion_matrix(y_test,pred),annot=True,cmap=\"YlGnBu\")","175c7c0a":"from sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier()\nknn.fit(X_train, y_train)\ny_pred = knn.predict(X_test)\nprint(classification_report(y_test,y_pred))","07da9d39":"knn_acc = accuracy_score(y_pred, y_test)\nprint (\"The accuracy of K Neighbors Classifier is : \",knn_acc*100, \"%\")","cb31e725":"error_rate = []\n  \nfor i in range(1, 40):\n      \n    knn = KNeighborsClassifier(n_neighbors = i)\n    knn.fit(X_train, y_train)\n    y_pred = knn.predict(X_test)\n    error_rate.append(np.mean(y_pred != y_test))\n  \nplt.figure(figsize =(10, 6))\nplt.plot(range(1, 40), error_rate, color ='blue',linestyle ='dashed', marker ='*',markerfacecolor ='red', markersize = 15)\n  \nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","9fc82467":"knn_n = KNeighborsClassifier(n_neighbors = 7)\n  \nknn_n.fit(X_train, y_train)\ny_pred_n = knn_n.predict(X_test)\n\nknn_n_acc = accuracy_score(y_test, y_pred_n)","44ac09bf":"print(\"The accuracy of KNN is : \", knn_n_acc*100, \"%\")","e1f5b17a":"sns.heatmap(confusion_matrix(y_test,y_pred),annot=True,cmap=\"YlGnBu\")","21caee68":"from sklearn.svm import SVC\n\nmodel = SVC()\nmodel.fit(X_train, y_train)\npredicted = model.predict(X_test)\nprint(classification_report(y_test,predicted))","a0ce21b0":"svc_acc = accuracy_score(predicted, y_test)\nsvc_acc\nprint (\"The accuracy of Support Vector Machine is : \",svc_acc*100, \"%\")","af595f8c":"sns.heatmap(confusion_matrix(predicted, y_test),annot=True,cmap=\"YlGnBu\")","5b7863f1":"print (\"The accuracy of Logistic Regression is : \",Log_Accuracy*100, \"%\")\nprint (\"The accuracy of Random Forest Classifier is : \",rfc_acc*100, \"%\")\nprint (\"The accuracy of K Neighbors Classifier is : \",knn_acc*100, \"%\")\nprint(\"The accuracy of KNN is when K=7 : \", knn_n_acc*100, \"%\")\nprint (\"The accuracy of Support Vector Machine is : \",svc_acc*100, \"%\")","23f479e9":"# **Features:**\n\n* Age : Age of the patient\n* Sex : Sex of the patient\n* exang: exercise induced angina (1 = yes; 0 = no)\n* ca: number of major vessels (0-3)\n* cp : Chest Pain type chest pain type\n    1. Value 1: typical angina\n    2. Value 2: atypical angina\n    3. Value 3: non-anginal painplt.ylabel\n    4. Value 4: asymptomatic\n* trtbps : resting blood pressure (in mm Hg)\n* chol : cholestoral in mg\/dl fetched via BMI sensor\n* fbs : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n* rest_ecg : resting electrocardiographic results\n    1. Value 0: normal\n    2. Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n    3. Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n* thalach : maximum heart rate achieved\n* target : 0 = less chance of heart attack \n           1 = more chance of heart attack","97327bd4":"> As seen above that age range between 41 - 67 are more to heart attacks","f13ace71":"# Countplot","faf9b30b":"# KNN","1bc01b65":"> Reading Datasets","842096ca":"# Scatter Plot","5ca65ee0":"# **Random Forest Classifier**","944ffc9a":"# **Co-Relation Representation**","ededcfd1":"![](https:\/\/www.deccanherald.com\/sites\/dh\/files\/styles\/article_detail\/public\/article_images\/2019\/11\/20\/heart-attack-1574189524.jpg?itok=brZDaNY7)","a956dcbf":"# Logistic Regression","d97dcaf2":"> **Importing Required Libraries**","01321c6b":"## **Exploratory Data Analysis**","72e66aa9":"# **Data preprocessing**","6d4bd8b0":"**Knn with diff K**","a6b5949a":"# Support Vector Machine","1ec060e5":"# **Model Comparison**"}}