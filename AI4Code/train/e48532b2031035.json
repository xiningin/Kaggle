{"cell_type":{"4f4e1c31":"code","bbb38691":"code","117e2cdd":"code","6508a976":"code","7139fd71":"code","26a8f277":"code","b0c86b72":"code","24ae5de6":"code","41a9afdb":"code","e8adc2bb":"code","7e4d379f":"code","881ea10e":"code","6fe4ef92":"code","e3777ead":"code","69632455":"code","b21aefcb":"code","2360eb3f":"code","3b7d98e4":"code","ca94a2a6":"code","f561fe76":"code","00fc4f81":"code","f19273d7":"code","edb7371f":"markdown","c7f7246b":"markdown","0d385706":"markdown","b0d70e99":"markdown","45f17aca":"markdown","32e0ee15":"markdown","9b673496":"markdown"},"source":{"4f4e1c31":"import pandas as pd\nimport numpy as np","bbb38691":"iris_df = pd.read_csv(\"..\/input\/iris\/Iris.csv\") ","117e2cdd":"iris_df.head(10)","6508a976":"iris_df.describe()","7139fd71":"iris_df.info()","26a8f277":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.pairplot(data = iris_df,hue=\"Species\")","b0c86b72":"%matplotlib inline\n#Import Modules\nfrom sklearn import datasets\nimport matplotlib.pyplot as plt","24ae5de6":"#Loading the dataset\niris = datasets.load_iris()\n#shows available methods on the dataset\nprint(dir(iris))","41a9afdb":"print(iris)","e8adc2bb":"#Features\nprint(iris.feature_names)","7e4d379f":"print(iris.data)","881ea10e":"print(iris.target)","6fe4ef92":"print(iris.target_names)\nlabel  ={0:'red',1:'blue',2:'green'}","e3777ead":"#dataset slicing\nx_axis = iris.data[:,0] #sepal length\ny_axis = iris.data[:,2] #sepal width","69632455":"#plotting\nplt.scatter(x_axis,y_axis,c=iris.target)\nplt.show()","b21aefcb":"#Importing the k-means model from sci-kit learn library\nfrom sklearn import datasets\nfrom sklearn.cluster import KMeans","2360eb3f":"#Declaring the model\nmodel = KMeans(n_clusters=3)","3b7d98e4":"#fitting the model\nmodel.fit(iris.data)","ca94a2a6":"#Predicting a single input\npredict_label = model.predict([[7.6,3.9,0.6,1.9]])\nprint(predict_label)","f561fe76":"#Prediction on the entire data \nall_predictions  =  model.predict(iris.data)\nprint(all_predictions)","00fc4f81":"features = iris_df.loc[:,[\"SepalLengthCm\",\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\"]]","f19273d7":"from sklearn.cluster import KMeans\nwcss = []\n\nfor k in range(1,15):\n    kmeans = KMeans(n_clusters=k)\n    kmeans.fit(features)\n    wcss.append(kmeans.inertia_)\n\n\nplt.figure(figsize=(20,8))\nplt.title(\"WCSS \/ K Chart\", fontsize=18)\nplt.plot(range(1,15),wcss,\"-o\")\nplt.grid(True)\nplt.xlabel(\"Amount of Clusters\",fontsize=14)\nplt.ylabel(\"Inertia\",fontsize=14)\nplt.xticks(range(1,20))\nplt.tight_layout()\nplt.show()","edb7371f":"# K-MEANS CLUSTERING\n**K-Means Custering is an iterative clustering algorithm, which aims to find the local maxima in each iteration. At first we will choose the desired number of clusters. We program the algorithm to group the data into the number of classes, in this case which is 3, by passing a parameter called *n_clusters* into our K-means model\". Based on the centroid distance between each point, the next given inputs are segregated into respected clusters and the centroids are recomputed from the clusters. Each centroid of a cluster is a collection of feature values which define the resulting groups.**","c7f7246b":"**According to the Elbow Rule, Elbow forms at around 2 or 3, so 2 or 3 seems like a good value for n_clusters**","0d385706":"# Preparing the Iris dataset for Unsupervised Learning","b0d70e99":"# What is Unsupervised Learning\n**It is a class of machine learning techniques used to find patterns in data. The data given to unsupervised algorithms is not labelled, i.e, only the input variables(x) are given with no corresponding output variables. In Unsupervised Learning, the algorithms discover interesting structures and pattern from the data on their own**","45f17aca":"# Exploring the dataset","32e0ee15":"**The dataset contains a set of 150 records with 4 features - petal lengthm petal width, sepal length , sepal width and also target variables or labels of Iris species called - Setosa, Virginica and Versicolor. We will feed the 4 featres in our unsupervised algorithm which will predict which class the iris belongs to.**","9b673496":"# Looking for the best n_clusters value using the elbow method"}}