{"cell_type":{"d6f8b04d":"code","88f55fcf":"code","ca533c7b":"code","2335a020":"code","d860b92f":"code","f2540d50":"code","5314adb4":"markdown","51aad4e1":"markdown","e31c5923":"markdown","c276fc6d":"markdown","228301c7":"markdown","2b817bfa":"markdown","8d4df1aa":"markdown","64685e07":"markdown"},"source":{"d6f8b04d":"import pandas as pd\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split","88f55fcf":"df = pd.read_csv('..\/input\/home-data-for-ml-course\/train.csv', index_col='Id')\ntest_data = pd.read_csv('..\/input\/home-data-for-ml-course\/test.csv')","ca533c7b":"c_feat = list(df.select_dtypes(['float64', 'int64']).columns)\nc_data = df[c_feat].fillna(0)","2335a020":"y = c_data.SalePrice\nX = c_data[c_feat[:-1]]\nX_tr, X_ts, y_tr, y_ts = train_test_split(X, y, random_state=1, test_size=0.3)","d860b92f":"re_or = GradientBoostingRegressor(random_state=1)\nre_or.fit(X_tr, y_tr)\ny_pred = re_or.predict(X_ts)\ner_mae = mean_absolute_error(y_pred, y_ts)\nprint(er_mae)","f2540d50":"model_on_full_data = GradientBoostingRegressor(random_state=1)\nmodel_on_full_data.fit(X, y)\n\nXt = test_data[c_feat[:-1]]\nXt = Xt.fillna(0)\n\ntest_preds = model_on_full_data.predict(Xt)\noutput = pd.DataFrame({'Id': test_data.Id,\n                       'SalePrice': test_preds})\noutput.to_csv('submission.csv', index=False)","5314adb4":"Looks better, yeah?\nLet\u2019s train ours model on the entire DataSet and write the risults into the file. Please, don't forget to use the list of numeric columns and fill with '0' all NaNs.","51aad4e1":"Extracting numerical columns and fill all NaNs with \u20180\u2019 in our DataSet","e31c5923":"Libraries in use","c276fc6d":"Just simple playing with data. Nothing special, just try to use only numerical columns... It's simple and clear for understanding for everyone","228301c7":"# **The easiest way to jump from 21217 to 15941 right after micro-course finishing**","2b817bfa":"Data preparation for Machine learning","8d4df1aa":"let's open data","64685e07":"As a model this time we will use **GradientBoostingRegressor**. Let\u2019s train it and check the Mean Absolute Error"}}