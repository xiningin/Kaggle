{"cell_type":{"49255ec1":"code","f23bb064":"code","6cc18fe4":"code","87998cbc":"code","ffb7be33":"code","a22d13fc":"code","b67e4471":"code","3d8e4b5e":"code","6b5b7f87":"code","dbb73bcf":"code","b3eb4d2b":"code","b637c0b6":"code","ba616245":"code","04342713":"code","ba348260":"code","406c3876":"code","527bb684":"code","4a4b70f5":"code","b9f2c103":"code","201e5d43":"code","23b252b2":"markdown","be906505":"markdown","c90414f8":"markdown","45048b01":"markdown","b9ca0a9a":"markdown","691f9d66":"markdown","91deb896":"markdown","d0e45858":"markdown","29248718":"markdown","b61533da":"markdown","4842d2ee":"markdown","272cba8f":"markdown","9a687229":"markdown","ae3c329d":"markdown","b6a2d17a":"markdown","a5ea6189":"markdown","9c4226ed":"markdown","54aecb39":"markdown","cfe78dc4":"markdown","4715ce57":"markdown","329edaac":"markdown","52b85118":"markdown","b8783a00":"markdown"},"source":{"49255ec1":"import numpy as np\nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt \n#Plot Maps\nimport geopandas\nimport pycountry \n\nfrom sklearn.impute import SimpleImputer\nimport datetime\n\nimport os","f23bb064":"nd = pd.read_csv('..\/input\/emdat19002021\/EMDAT_1900-2021_NatDis.csv')","6cc18fe4":"def basic_EDA(df):\n    size = df.shape\n    sum_duplicates = df.duplicated().sum()\n    sum_null = df.isnull().sum().sum()\n    is_NaN = df. isnull()\n    row_has_NaN = is_NaN. any(axis=1)\n    rows_with_NaN = df[row_has_NaN]\n    count_NaN_rows = rows_with_NaN.shape\n    return print(\"Number of Samples: %d,\\nNumber of Features: %d,\\nDuplicated Entries: %d,\\nNull Entries: %d,\\nNumber of Rows with Null Entries: %d %.1f%%\" %(size[0],size[1], sum_duplicates, sum_null,count_NaN_rows[0],(count_NaN_rows[0] \/ df.shape[0])*100))\n\ndef summary_table(df):\n\n    summary = pd.DataFrame(df.dtypes,columns=['dtypes'])\n    summary = summary.reset_index()\n    summary['Name'] = summary['index']\n    summary = summary[['Name','dtypes']]\n    summary['Missing'] = df.isnull().sum().values    \n    summary['Uniques'] = df.nunique().values\n    return summary\n\ndef heatmap(df, index,columns,values,vmax,Title):\n    DisasterDuration_wide = df.pivot(index=index, columns=columns, values=values)\n    #DisasterDuration_wide = DisasterDuration_wide.sort_values(by = sort_by, ascending = False)#ignore_index = True)\n\n    plt.figure(figsize=(12,8))\n\n    ax = sns.heatmap(DisasterDuration_wide, annot=True, fmt='.0f', yticklabels='auto', cmap=sns.color_palette(\"YlGnBu\", as_cmap=True), center=.2,vmin = 0, vmax = vmax,linewidths=.5)\n    ax.xaxis.tick_top() # x axis on top\n    ax.xaxis.set_label_position('top')\n    ax.set_title(Title,fontsize = 16,weight = 'bold',pad=20)\n    plt.show()\n    \ndef histplot(df, x, x_axis_title,y_axys_title, plot_title):\n    plt.figure(figsize=(20,8))\n    sns.set(style=\"ticks\", font_scale = 1)\n    ax = sns.countplot(data = df,x=x)\n    plt.xticks(rotation=70,fontsize = 8)\n    ax.set_xlabel(x_axis_title)\n    ax.set_ylabel(y_axys_title)\n    plt.title(plot_title, fontsize = 16,weight = 'bold')    \n\ndef bar_plot(x,y,xlabel,ylabel,title, label):\n    plt.figure(figsize=(20,5))\n    sns.set(style=\"ticks\", font_scale = 1)\n    ax = sns.barplot(x=x, y = y, palette=\"Blues_d\")\n    sns.despine(top=True, right=True, left=True, bottom=False)\n    plt.xticks(rotation=90,fontsize = 12)\n    ax.set_xlabel(xlabel)\n    ax.set_ylabel(ylabel)\n    plt.title(title)\n    \n    if label == 'percent':\n        for p in ax.patches:\n                     ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/15827)), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                         ha='center', va='bottom', color='black', xytext=(0, 10),rotation = 'vertical',\n                         textcoords='offset points')\n    if label == 'number':\n        for p in ax.patches:\n             ax.annotate(\"%d\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                 ha='center', va='bottom', color='black', xytext=(0, 10),rotation = 'horizontal',\n                 textcoords='offset points')\n    \n\ndef Null_Analysis(df,title):\n    null_columns=df.columns[df.isnull().any()]\n    null_columns_plot = df[null_columns].isnull().sum().sort_values(ascending = False)\n    bar_plot(null_columns_plot.index, null_columns_plot,\"Features\", \"Number of Null Values\", title, 'percent')\n\n#Get 3 Letters code from Countries List to plot Map\ndef alpha3code(column):\n    CODE=[]\n    for country in column:\n        try:\n            code=pycountry.countries.get(name=country).alpha_3\n           # .alpha_3 means 3-letter country code \n           # .alpha_2 means 2-letter country code\n            CODE.append(code)\n        except:\n            CODE.append('None')\n    return CODE","87998cbc":"basic_EDA(nd)","ffb7be33":"summary_table(nd)","a22d13fc":"Null_Analysis(nd,'Features with Most Numbers of Missing Values')","b67e4471":"info_subgroups = nd.loc[:,['Disaster Subgroup','Disaster Type','Disaster Subtype','Disaster Subsubtype']]\n\nvalues = {'Disaster Subtype': '-', 'Disaster Subsubtype': '-'}\ninfo_subgroups = info_subgroups.fillna(value=values)\n\ndata_subgroups = pd.DataFrame(info_subgroups.groupby(['Disaster Subgroup','Disaster Type','Disaster Subtype','Disaster Subsubtype']).size().to_frame('Count'))\ndata_subgroups.iloc[:,:-1]","3d8e4b5e":"nd_general = nd.loc[:,['Year','Disaster Subgroup','Disaster Type','Total Deaths','Total Affected']]\nnd_general = nd_general[nd_general['Disaster Subgroup'] != 'Extra-terrestrial']\n\n#Plot 'Number of Disasters Recorded by Year'\nplt.figure(figsize=(20,8))\nax = sns.countplot(data = nd_general,x='Year', palette = 'husl')\nplt.xticks(rotation=90,fontsize = 12)\nax.grid()\n#Avoid ticks to crowd the X axis\nfor label in ax.get_xticklabels():\n    if np.int(label.get_text()) % 10 == 0:  \n        label.set_visible(True)\n    else:\n        label.set_visible(False)\n\nax.set_xlabel('Year')\nax.set_ylabel('Number of Disasters')\nplt.title('Number of Disasters Recorded by Year', fontsize = 16,weight = 'bold');    \n\n# Plot 'Number of Disasters by Subtype'\nplt.figure(figsize=(20,8))\nax = sns.countplot(data = nd_general,x='Disaster Subgroup', palette = 'Blues_d')\n\nfor p in ax.patches:\n        ax.annotate(\"%d\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n        ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',textcoords='offset points')\n\nax.set(yticklabels=[])\nax.axes.get_yaxis().set_visible(False)         \nsns.despine(top=True, right=True, left=True, bottom=False)\nplt.xticks(rotation=0,fontsize = 12)\nax.set_xlabel('Disaster Subgroup')\nax.set_ylabel('Number of Disasters')\nplt.title('Number of Disasters by Subtype', fontsize = 16,weight = 'bold');  ","6b5b7f87":"#Separate in Numerical and Categorical Variables\nnumeric_data = nd.select_dtypes(include=[np.number])\nnumeric_features = numeric_data.columns\n\ncategorical_data = nd.select_dtypes(exclude=[np.number])\ncategorical_features = categorical_data.columns","dbb73bcf":"rec_dis = nd_general[(nd_general['Year'] >= 2010) & (nd_general['Year'] <= 2020)]\nrec_dis = rec_dis.groupby(['Disaster Subgroup','Year']).size().reset_index(name=\"Count\")\n\ntotal = rec_dis.groupby(['Year']).sum().reset_index()\ntotal['Disaster Subgroup'] = list(['Total']*11)\ntotal = total.loc[:,['Disaster Subgroup','Year','Count']]\n\nrec_dis = rec_dis.append(total, ignore_index = True)\n\nplt.figure(figsize=(22,10))\n\nax = sns.barplot(data=rec_dis, x='Year', y = 'Count',hue ='Disaster Subgroup', \n                 hue_order = ['Biological', 'Climatological', 'Geophysical','Meteorological','Hydrological','Total'],\n                 palette = \"husl\")\n\nfor p in ax.patches:\n        ax.annotate(\"%d\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n        ha='center', va='bottom', color='black', xytext=(-3, 5),rotation = 'horizontal',textcoords='offset points')\n\nsns.despine(top=True, right=True, left=False, bottom=False)\nax.set_xlabel('Year')\nax.set_ylabel('Number of Disasters')\nplt.title(\"Number of Natural Disasters - Period from 2015 to 2020\", fontsize = 16,weight = 'bold');","b3eb4d2b":"graph_subgroups = info_subgroups.groupby(['Disaster Subgroup','Disaster Type']).size().to_frame('Count').reset_index()\ngraph_subgroups.sort_values('Count',ascending=False, inplace=True)\n\nplt.figure(figsize=(20,8))\n\nax = sns.barplot(data=graph_subgroups, x='Count', y = 'Disaster Type', ci=None, palette = 'husl')\n\nfor p in ax.patches:\n        width = int(p.get_width())\n        ax.annotate(\"%d\" % p.get_width(), (width, p.get_y() + p.get_height()\/ 2),\n        ha='left', va='center', color='black', xytext=(2, 0),rotation = 'horizontal',textcoords='offset points')\n        \n\nsns.despine(top=True, right=True, left=False, bottom=True)\nax.set_xlabel('Number of Occurrences')\nax.set(ylabel=None)\nax.set(xticklabels=[])\nax.axes.get_xaxis().set_visible(False) \n\nplt.title(\"Number of Natural Disasters by Disaster Type since 1900\", fontsize = 16,weight = 'bold');","b637c0b6":"NDYears = nd.loc[:,['Year','Disaster Type']]\nNDYears = NDYears[(NDYears['Year'] <= 2020)]\nNDYears = NDYears.groupby(['Year','Disaster Type']).size().to_frame('Count').reset_index()\nDisaster_list = ['Flood', 'Storm','Landslide','Earthquake','Drought', 'Epidemic', \n                 'Volcanic activity', 'Mass movement (dry)', \n                 'Wildfire', 'Insect infestation', 'Extreme temperature']\n\n\nfor i in Disaster_list:\n    plt.figure(figsize=(20,8))\n    \n    df = NDYears[NDYears['Disaster Type'] == i]\n    mean5Years = df.iloc[-5:,2].mean()\n    \n    ax = sns.barplot(data=df, x='Year', y = 'Count')\n    \n    ax.axhline(mean5Years, ls='--', c = 'b')\n    ax.text(1,(mean5Years),\"Mean of previous 5 Years\",\n            bbox=dict(facecolor='white', edgecolor='none'))\n    ax.set_title(\"Number Disaster Types since 1900: \" + i, fontsize = 16,weight = 'bold');\n    ax.set_xlabel('Year')\n    ax.set_ylabel('Number of Natural Disasters')\n    \n    plt.xticks(rotation=90,fontsize = 12)\n\n    for label in ax.get_xticklabels():\n        if np.int(label.get_text()) % 5 == 0:  \n            label.set_visible(True)\n        else:\n            label.set_visible(False)\n    plt.show()","ba616245":"death_cumsum = nd_general.groupby(['Disaster Subgroup','Year']).sum()\\\n                .groupby(['Disaster Subgroup']).cumsum().reset_index()\n\nfig, axarr = plt.subplots(1, 2, figsize=(20, 10))\nsns.despine(top=True, right=True, left=False, bottom=False)\n\nsns.lineplot(x = 'Year', y = 'Total Deaths', hue='Disaster Subgroup',data=death_cumsum, palette = \"husl\", ax = axarr[0])\nsns.lineplot(x = 'Year', y = 'Total Affected', hue='Disaster Subgroup',data=death_cumsum, palette = \"husl\", ax = axarr[1])\n\naxarr[0].set_title(\"Cumulative Analysis of Death by Natural Disasters\",fontsize = 16,weight = 'bold')\naxarr[1].set_title(\"Cumulative Analysis of Number of Affected People by Natural Disasters\",fontsize = 16,weight = 'bold')\nfig.tight_layout(pad=3.0)  \nplt.show()","04342713":"nd_deaths = nd_general.loc[:,['Disaster Subgroup','Total Deaths','Total Affected']]\nnd_deaths = nd_deaths.groupby(['Disaster Subgroup']).sum().reset_index()\n\nnd_deaths['Death%'] = 100*(nd_deaths['Total Deaths'].div(nd_deaths['Total Deaths'].sum()))\nnd_deaths['Affected%'] = 100*(nd_deaths['Total Affected'].div(nd_deaths['Total Affected'].sum()))\ntotal_row = {'Disaster Subgroup':'Total',\n             'Total Deaths':nd_deaths['Total Deaths'].sum(), \n             'Total Affected':nd_deaths['Total Affected'].sum()}\n\nnd_deaths = nd_deaths.append(total_row,ignore_index=True)\nnd_deaths['DeathRatio'] = nd_deaths['Total Deaths'].div(nd_deaths['Total Affected'])\n\nfig, axarr = plt.subplots(1, 2, figsize=(20, 10))\n\nsns.despine(top=True, right=True, left=True, bottom=False)\n\ndfs = list(['Total Deaths','Total Affected'])\nz = 0\n\nfor i in dfs:\n    ax = sns.barplot(data=nd_deaths, x='Disaster Subgroup', y = i ,ax=axarr[z], palette = \"husl\")\n    \n    for p in ax.patches:\n        ax.annotate(\"%s\" % (\"{:.2e}\".format(p.get_height())), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n        ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',textcoords='offset points')\n\n    axarr[z].set(yticklabels=[])\n    axarr[z].axes.get_yaxis().set_visible(False) \n    axarr[z].set_title(i + \" - Period from 1900 to 2021\",fontsize = 16,weight = 'bold')\n    z +=1\n\nfig.tight_layout(pad=3.0)    \nplt.show()","ba348260":"nd_deaths = nd_deaths.sort_values(by = 'DeathRatio', ascending = False)\n\nplt.figure(figsize=(20,8))\nax = sns.barplot(data=nd_deaths, x='DeathRatio', y = 'Disaster Subgroup',  palette = 'husl',order=['Biological', 'Geophysical','Climatological', 'Hydrological','Meteorological'])\n\nfor p in ax.patches:\n        width = int(p.get_width())\n        ax.annotate(\"%.2f%%\" % (p.get_width()*100), (p.get_width(), p.get_y() + p.get_height()\/ 2),\n        ha='left', va='center', color='black', xytext=(2, 0),rotation = 'horizontal',textcoords='offset points')\n        \n\nsns.despine(top=True, right=True, left=False, bottom=True)\nax.set_xlabel('Number of Occurrences')\nax.set(ylabel=None)\nax.set(xticklabels=[])\nax.axes.get_xaxis().set_visible(False) \n\nplt.title(\"Number of Casualties per Affected People\", fontsize = 16,weight = 'bold');","406c3876":"Country = nd.loc[:,['Start Year','Total Deaths','Total Affected','Continent','Disaster Type','Country']]\n\n#List of Countries not Originally found, Data Cleanse to map to python library names\n\nCountry.loc[(Country.Country == 'Bahamas (the)'),'Country']='Bahamas'\nCountry.loc[(Country.Country == 'Bolivia (Plurinational State of)'),'Country']='Bolivia, Plurinational State of'\nCountry.loc[(Country.Country == 'Comoros (the)'),'Country']='Comoros'\nCountry.loc[(Country.Country == 'Congo (the Democratic Republic of the)'),'Country']='Congo'\nCountry.loc[(Country.Country == 'Congo (the)'),'Country']='Congo'\nCountry.loc[(Country.Country == 'C\u00f4te d\u2019Ivoire'),'Country']=\"C\u00f4te d'Ivoire\"\nCountry.loc[(Country.Country == 'Dominican Republic (the)'),'Country']=\"Dominican Republic\"\nCountry.loc[(Country.Country == 'Gambia (the)'),'Country']=\"Gambia\"\nCountry.loc[(Country.Country == 'Iran (Islamic Republic of)'),'Country']=\"Iran, Islamic Republic of\" \nCountry.loc[(Country.Country == \"Korea (the Democratic People's Republic of)\"),'Country']=\"Korea, Democratic People's Republic of\" \nCountry.loc[(Country.Country == \"Korea (the Republic of)\"),'Country']=\"Korea, Republic of\" \nCountry.loc[(Country.Country == \"Lao People's Democratic Republic (the)\"),'Country']=\"Lao People's Democratic Republic\" \nCountry.loc[(Country.Country == \"Marshall Islands (the)\"),'Country']=\"Marshall Islands\" \nCountry.loc[(Country.Country == \"Micronesia (Federated States of)\"),'Country']=\"Micronesia, Federated States of\" \nCountry.loc[(Country.Country == \"Moldova (the Republic of)\"),'Country']=\"Moldova, Republic of\" \nCountry.loc[(Country.Country == \"Netherlands (the)\"),'Country']=\"Netherlands\" \nCountry.loc[(Country.Country == \"Niger (the)\"),'Country']=\"Niger\" \nCountry.loc[(Country.Country == \"Philippines (the)\"),'Country']=\"Philippines\" \nCountry.loc[(Country.Country == \"Russian Federation (the)\"),'Country']=\"Russian Federation\" \nCountry.loc[(Country.Country == \"Sudan (the)\"),'Country']=\"Sudan\" \nCountry.loc[(Country.Country == \"Taiwan (Province of China)\"),'Country']=\"Taiwan, Province of China\" \nCountry.loc[(Country.Country == \"United Kingdom of Great Britain and Northern Ireland (the)\"),'Country']=\"United Kingdom\" \nCountry.loc[(Country.Country == 'United States of America (the)'),'Country']=\"United States\" \nCountry.loc[(Country.Country == 'Venezuela (Bolivarian Republic of)'),'Country']='Venezuela, Bolivarian Republic of' \nCountry.loc[(Country.Country == 'Swaziland'),'Country']='eSwatini' \n\n#Check for official names of countries\n#pycountry.countries.search_fuzzy('Somal')","527bb684":"CountryCount = Country[(Country['Start Year'] == 2019)]\nCountryCount = CountryCount.groupby(['Country'])[['Total Deaths','Total Affected']].agg('sum').reset_index()\nCountryCount['CountryCode'] = alpha3code(CountryCount.Country)\n\n#Check for countries not found\nCountryCount[CountryCount['CountryCode']=='None']\n\nworld = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))\n#Remove Antartica\nworld = world[(world.pop_est>0) & (world.name!=\"Antarctica\")]\n# rename the columns so that we can merge with our data\nworld.columns=['pop_est', 'continent', 'name', 'CountryCode', 'gdp_md_est', 'geometry']\n\n#Some countries are presenting -99 as 3 letter code, let's correct this - A bit more Data Cleanse\n#world[world['CountryCode'] =='-99']\nworld.loc[(world.name == 'Norway', 'CountryCode')] = 'NOR'\nworld.loc[(world.name == 'France', 'CountryCode')] = 'FRA'\nworld.loc[(world.name == 'N. Cyprus', 'CountryCode')] = 'CYP'\nworld.loc[(world.name == 'Somaliland', 'CountryCode')] = 'SOM'\nworld.loc[(world.name == 'Kosovo', 'CountryCode')] = 'SRB'\n\n#For the left join to work proeperly - CountryCode on the first Column\nCountryCount = CountryCount[['CountryCode','Country', 'Total Deaths', 'Total Affected']]\n\n# Left Join, otherwise missing countries appear as a blank on the plot\nCountryCount=world.merge(CountryCount,on='CountryCode',how='left')\n\n#Convert Lat and Long to different Coordinates (makes a nicer plot)\nCountryCount = CountryCount.to_crs(\"EPSG:3395\")","4a4b70f5":"fig, axarr = plt.subplots(2, 1, figsize=(15, 20))\n\ndfs = list(['Total Deaths','Total Affected'])\nz = 0\n\nfor i in dfs:\n    ax = CountryCount.plot(column=i,ax=axarr[z],legend=True,\n        scheme=\"quantiles\",figsize=(15, 20),missing_kwds={\n            \"color\": \"lightgrey\",\n            \"edgecolor\": \"red\",\n            \"hatch\": \"\/\/\/\",\n            \"label\": \"Missing values\",},\n        edgecolor='black',cmap = 'OrRd');\n    \n    axarr[z].set_title(i + \" - 2019\",fontsize = 16,weight = 'bold')\n    fig.patch.set_visible(False)\n    axarr[z].axis('off')\n    z +=1\n\nfig.tight_layout(pad=3.0)    \nplt.show()","b9f2c103":"#Some Data Cleanse to extract Datetime from the Dataset.\n#All of this to calculate the Duration of each event\nnd_duration = nd.loc[:,['Start Year','Start Month','Start Day','End Year','End Month','End Day','Total Deaths','Total Affected','Continent','Disaster Type','Country']]\nnan_list = ['Start Year','Start Month','Start Day','End Year','End Month','End Day']\n\nimp = SimpleImputer(missing_values=np.nan, strategy='most_frequent')\nnd_duration[['Start Month','Start Day']] = imp.fit_transform(nd_duration[['Start Month','Start Day']])\n\nEndMonthNulls_index = nd_duration[nd_duration['End Month'].isnull()].index.tolist()\nEndDayNulls_index = nd_duration[nd_duration['End Day'].isnull()].index.tolist()\n\nnd_duration.loc[EndMonthNulls_index,['End Month']] = nd_duration.loc[EndMonthNulls_index,['Start Month']].values    \nnd_duration.loc[EndDayNulls_index,['End Day']] = nd_duration.loc[EndDayNulls_index,['Start Day']].values   \n\nnd_duration = nd_duration.astype({'Start Year' : int,\n                'Start Month': int,\n                'Start Day': int,\n                'End Year': int,\n                'End Month': int,\n                'End Day': int})\n\nnd_duration['SdateInt']=nd_duration['Start Year'].astype(str) + nd_duration['Start Month'].astype(str).str.zfill(2)  + nd_duration['Start Day'].astype(str).str.zfill(2)\nnd_duration['EdateInt']=nd_duration['End Year'].astype(str) + nd_duration['End Month'].astype(str).str.zfill(2)  + nd_duration['End Day'].astype(str).str.zfill(2)\n\nnd_duration['SDate'] = pd.to_datetime(nd_duration['SdateInt'],format='%Y%m%d',errors='coerce')\nnd_duration['EDate'] = pd.to_datetime(nd_duration['EdateInt'],format='%Y%m%d',errors='coerce')\n\nnd_duration['Duration'] = nd_duration['EDate']  - nd_duration['SDate'] \n\nDisMonths = nd_duration.groupby('Start Month').size().reset_index()\n\n#Data Cleanse\n#This event had a \"-150\" days because the start and end month were probably mistaken\nnd_duration.loc[12286,['Start Month']] = 1\n#Drop rows that did not coverted to Datetime properly\nnd_duration.dropna(subset=['Duration'], inplace = True)\n\n#Transform Duration column in integer so we can compute the mean\nnd_duration['Duration'] = nd_duration['Duration'].dt.days.astype('int16')\nnd_duration = nd_duration.astype({'Duration' : int})\nDisasterDuration = nd_duration.groupby(['Disaster Type', 'Continent'])[['Total Deaths','Total Affected','Duration']].agg('mean').reset_index()\n\nheatmap(DisasterDuration, 'Disaster Type','Continent','Total Deaths',1600,'Average Number of Casualties by Continent and Event')\nheatmap(DisasterDuration, 'Disaster Type','Continent','Total Affected',1e6,'Average Number of People Affected by Disaster according to Continent and Event')","201e5d43":"heatmap(DisasterDuration, 'Disaster Type','Continent','Duration',50,'Average Duration of Disaster according to Continent and Event')","23b252b2":"* In 2019, most of the higher number of deaths are presented by third world countries. Exceptions are USA, France, Belgium, Netherlands and Japan that also present a number of deaths above the upper quantile\n* Japan is the only of the G8 countries that present high number of deaths and affected\n* Asia and Africa present concerning numbers for casualties and affected, with several countries above the upper quantile. South America presents a similar trend, clearly, this is related to the number of poor countries that are present in these continents","be906505":"# **1. Overview**\n\nIn 1988, the Centre for Research on the Epidemiology of Disasters (CRED) launched the Emergency Events Database (EM-DAT). EM-DAT was created with the initial support of the World Health Organisation (WHO) and the Belgian Government.\n\nThe main objective of the database is to serve the purposes of humanitarian action at national and international levels. The initiative aims to rationalise decision making for disaster preparedness, as well as provide an objective base for vulnerability assessment and priority setting.\n\nEM-DAT contains essential core data on the occurrence and effects of over 22,000 mass disasters in the world from 1900 to the present day. The database is compiled from various sources, including UN agencies, non-governmental organisations, insurance companies, research institutes and press agencies.\n\n## 1.1. Content ##\n\nThe current data was obtained by querying the EM-DAT database on 4th March 2021. Only Natural Disasters were considered, excluding Technological and Complex Disasters options. All locations of the world were also enabled. The time period starts in 1900 to the current year, 2021.\n\nFor an event to be registered into the EM-DAT database it must fulfill one of three entry criteria:\n\n* **Deaths**: 10 or more people deaths\n\n* **Affected**: 100 or more people affected\/injured\/homeless.\n\n* **Declaration\/international appeal**: Declaration by the country of a state of emergency and\/or an appeal for international assistance\n    \n\n## 1.1. Acknowledgements ##\n\nI cannot make this dataset public as I am not the one creating or mantaining it. It can be downloaded in the link below.\n\nThe credit for creating and maintaining the Database is for the Centre for Research on the Epidemiology of Disasters - CRED and the School of Public Health from the Universit\u00e9 catholique de Louvain.\n\n\u201cEM-DAT, CRED \/ UCLouvain, Brussels, Belgium \u2013 www.emdat.be (D. Guha-Sapir)\u201d","c90414f8":"## 3.1. Natural Disasters in Numbers##\n\nIn this section we aim to answer what is most common, the most critical, and have a better insight on the magnitude Natural Disasters consequences in a worldwide view.","45048b01":"# **2. Key Insights**\n\n* The number of Natural Disasters recorded has increased over the years. While the EM-DAT has started collecting data officially from 1988, we see a proeminent upward trend starting in the 60's and seems to reach a peak in the 00's, and continue to vary around this peak to this day\n* In total, the number of disasters seem to have stabilised, however, there seems to be a trend that every two or three years there is a sharp rise \n* Metereological (e.g. Storms) and Hydrological (e.g. Floods) are the most commonly occurring types of disasters, followed by Geophysical (e.g. Volcanic Activity), Biological (e.g. Epidemic) and Climatological (e.g. Drought)\n* Climatological events have taken more lives than any other type of Natural Disasters, followed by Hydrological events\n* Hydrological events are the ones who affect most people\n* Floods (Hydro), Storms (Meteo) and Earthquakes (Geo) are the Disasters Subtypes that occurred the most since 1900. In total, 5.400 Floods, 4.400 Storms and 1.500 have been recorded since then.","b9ca0a9a":"So far we have seen that Metereological and Hydrological events are the most common, but within this general classification of events there are ramifications. The bar chart below illustrates how the Natural Disasters subtypes are distributed. The analysis considers all the events since 1900.","691f9d66":"# **5. Conclusion**\n\nIn this notebook we analysed the EM-DAT database of Natural Disasters. Containing almost fifty features and fifteen thousand entries, it is an interesting topic for a Data Analysis journey.\n\nClimatological events, such as droughts, have shown to be one of the most common as well as the one that have caused more deaths. However, as we have well learned in past year, Biological disasters can also disrupt our lives and cause a significant number of casualties even if affects a reduced number of people in comparison.\n\nThe analysis is by far complete, as more information can be extracted. Let me know your ideas in the comments below and I hope to update this analysis shortly with more content.\n\nIf you found this useful, please consider upvote :)","91deb896":"## 3.2. Natural Disasters Casualties and Affected##\n\nWe can perceive some Natural Disasters are demonstrations of the powerful force of Nature. While sometimes beatiful, it can also be fatal, affecting not only our physical body but also leaving mental health issues to whoever survived and had to cope with tragic events. \n\nIn this section we analyse in more depth the Number of Fatalities and Total Number of Affected people for each disaster type. On this analysis, only the Total Affected is taken into account as it aggregates all the people who were injured or made homeless due to the disaster occurrence.\n\n* **No Affected**: People requiring immediate assistance during an emergency situation. \n* **No Homeless**: Number of people whose house is destroyed or heavily damaged and therefore need shelter after an event.\n* **Total affected**: The total affected is the sum of injured, affected and homeless\n\n> *Note on Number of Affected, Number of Homeless and Total Affected ([source EM-DAT](https:\/\/public.emdat.be\/about)*)\n\nThe linear plot below shows the cumulative sum of Deaths (left) and Affected People (right) since 1900.","d0e45858":"Let's analyse how the individual Natural Disasters have been recorded across the years, and check for any patterns and trends. ","29248718":"## 4. Natural Disasters Around the World##\n\nSo far we have analysed all events without taking into account their location. In this section we try to understand what Continents and Countries are more prone to certain disasters and if there has been any change over the years regarding the Natural Disasters challenges each location has faced.","b61533da":"The next graph analyses the number of Natural Disasters in the last ten years in more detail.","4842d2ee":"The graph below is a more friendly way to display the number of missing values by feature. While there are attributes with almost 100% of missing values, the most crucial information regarding the events have relatively low missing values or no missing values. \n\nDisaster location, number of casualties, and dates are the most relevant features, and they display a lower value of missing entries. If such features had a higher number of missing values it would be necessary to ignore such samples or to use some kind of imputation method, which could reduce the representativeness of the dataset.","272cba8f":"* As expected, Hydrological and Metereological events are within the top two most common Natural Disasters. The EM-DAT has a record of 5399 floods since 1900 and 4420 Storms. These two events accounts for 60% of all events in the Database\n* It is interesting that Earthquakes are almost as \"common\" as Epidemic disasters. Before Covid we did not hear that much about Epidemic cases. One reason could be that more serioues Epidemies happened several years ago. Another reason could be that Epidemy currently happens in places of extreme poverty, and there is not much media to bring awareness. When we analyse Disaster by Country some of these questions could be answered","9a687229":"* In the last ten years the total number of Natural Disasters has ranged from 336 to 443, with a mean of 377\n* The distribution of Disaster Subtypes follows a similar trend if compared to the previous graph. Hydrological and Metereological are dominant across all years\n* In 2015 there was a higher incidence than usual of Geophysical events. That year, it was recorded 23 earthquakes, 6 volcanic activities and 1 mass movement\n* Biological events had a sudden rise in 2010 and 2019, displaying double the amount of records compared to other years of the same decade. Biological events are divided into Epidemic or Insect Infestation. A rise in Epidemic records  (44 - 2010 \/ 36 - 2019) is behind this peak. It is surprising that the same trend has not repeated in 2020. In addition, 2019 also had 8 Insect Infestation events that contributed to this total\n* 2019 and 2010 were also the years with a higher number of Natural Disasters in total, with 443 and 441 respectively. Both years present a higher number than usual of Biological, and Hydrological events. Floods and Epidemic were the disasters that had a higher incidence than usual for both years","ae3c329d":"* Floods, Storms, Landslides and Earthquakes are events that are presenting higher number of occurrences in recent years. They also present, in 2019 or 2020, a higher number of incidences than the 5 year mean, which could indicate an upward trend\n* Droughts seem to have a five-year peak cycle. Other events do not show any particular seasonality\n* Ironically, Epidemic seem to have peaked in the 2000's. Perhaps it is necessary to have a better understanding if the recent COVID pandemic has been recorded on this dataset","b6a2d17a":"![image.png](https:\/\/images.unsplash.com\/photo-1534862262637-373c120dcbcc?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80)\n*Photo by <a href=\"https:\/\/unsplash.com\/@jimgade?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">jim gade<\/a> on <a href=\"\/s\/photos\/natural-disasters?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash<\/a>*\n  \n\n# Natural Disasters 1900-2021: An EDA\n\n## List of Worldwide Natural Disasters by EM-DAT Database\n\n> \"*EM-DAT contains essential core data on the occurrence and effects of over 22,000 mass disasters in the world from 1900 to the present day. The database is compiled from various sources, including UN agencies, non-governmental organisations, insurance companies, research institutes and press agencies.*\"\n[\u201cEM-DAT, CRED \/ UCLouvain, Brussels, Belgium \u2013 www.emdat.be (D. Guha-Sapir)\u201d*\"](https:\/\/www.kaggle.com\/kaggle-survey-2020).\n\nThis notebook explores EM-DAT data extracted from [www.emdat.be](http:\/\/www.emdat.be). The data being analysed takes into account all continents, and presents details regarding natural disasters from 1900 to currrent date. \n\n\n## <center style=\"background-color:Gainsboro; width:40%;\">Contents<\/center>\n1. [Overview](#1.-Overview)<br>\n1.1. [Content](#1.1.-Content)<br>\n1.2. [Acknowledgements](#1.2.-Acknowledgements)<br>\n2. [Key Insights](#2.-Key-Insights)<br>\n3. [The Data](#3.-The-Data)<br>\n3.1 [Natural Disasters in Numbers](#3.1-Natural-Disasters-in-Numbers)<br>\n3.2. [Natural Disasters Casualties and Affected](#3.2-Natural-Disasters-Casualties-and-Affected)<br>\n4. [Natural Disasters Around the World](#4.-Natural-Disasters-Around-the-World)\n5. [Conclusion](#5.-Conclusion)<br>\n\n*Please remember to upvote if you find this Notebook helpful!*","a5ea6189":"* The two features show a very distinct pattern. While the fatalities increase in a more stepwise manner, the number of affected people displays an exponential growth\n* The steps we see in the Number of Deaths could be related to specific events. However, it is interesting to note that after 1960 - 1980 all events seem to rise more linearly. As such, the steps could be also related to difficulties in data collection\n* Looking at the Number of Casualties for Biological disasters, between 1900 - 1920 there is a sharp rise and the stabilise in a linear pattern\n* Metereological and Geophysical events are the only ones that have a more linear pattern from the early 1900. One reason could be that earthquakes and severe storms were more commonly tracked by the Government and other Institutions early on. In addition, extreme floods or draughts do not happen every year, as such these large jumps in the graph appear as a consequence\n","9c4226ed":"* The Heatmaps display the AVERAGE number of affected people and casualties for each Natural Disaster Subtype\n* Drought is highlighted as a major issue for most continents, especially if considering the Number of Affected. Only the Americas and Oceania do not report a high number of fatalities due to drought\n* Asia is impacted by a diverse range of Natural Disasters, presenting high numbers of deaths and affected. The population density of this continent certainly plays a role, however, it is quite often that we hear on the news about floods, earthquakes and tsunamis in this region of the planet","54aecb39":"* The number of records of Natural Disasters has increased over the years, mostly due to advances in technology, communication and ease of data collection\n* The yearly quantity of Natural Disasters rise upto the year 2000. For the last 10 years, the total number seems to fluctuate around 350 - 400 Natural Disaster per Year\n* Between 2000 and 2010 it has been a period where the total number of Natural Disaster were higher. During that decade, most years have recorded near 400 disasters and surpassed 500 events in 2000 and 2002\n* Natural Disaster are classified into five classes (excluding extra-terrestrial). The most common type of disaster are from Hydrological nature, followed by Metereological. Together the two classes of disaster account for more than 70% of all cases\n","cfe78dc4":"The table below is an extraction of the DataFrame, and explains the hierarchy used by EM-DAT to organize the events. As shown by the above plot, Disaster Subtype and Subsubtype are not present for all samples and have been replaced with a \"-\" for demonstration. \n\n**Am I the only one bothered by the fact that there is an EXTRA-TERRESTRIAL category??? Just kidding, this is just for meteor impacts...right?**","4715ce57":"* One can understand why Hydrological events have a higher Number of Affected people. A river that floods can impact a whole community and leave thousands homeless in a short period of time. Considering that the top 10 biggest citis of the world are near the coast, it is a problem that must be addressed to avoid major consequences in the future\n* The analysis also shows that Climatological events are a dangerous threat as they combine a high number of deaths and a significant number of affected pepople, being only behind Hydrological events\n* Biological events have a proportionaly limited participation when considering the Number of Affected (right). However, considering Number of Deaths it is only behind Climatological events (left). Even though currently this is a sensitive topic, it is a fair analysis to conclude that epidemics are extremly dangerous, since they have a higher Death\/Affected ratio than other Natural Disasters\n\nThe graph below displays the Death per Affected People ratio of each Natural Disaster. As presumed, Biological disasters have a higher indice than any other. While a Geophysical event kills 1 (1.16%) when 100 people are affected, Biological events have killed 18 (18.88%) for every 100 people affected.","329edaac":"The summary below is helpful to give an overview of our features. The table below explains which features are categorical, which ones are numerical and we start to see a pattern of the missing values. As the feature become more specific to an event, such as cost or Local Time, more missing values are present. ","52b85118":"# **3. The Data**\n\nAs mentioned above, the data has been downloaded from the EM-DAT website using their query service. In this section we perform an initial exploration to understand the features, missing values and general characteristics of the data.\n\nIt is an interesting dataset. From the outputs below we understand that it contains a considerable amount of features, where we can extract a lot of information regarding one single event. Notice it contains numerical and categorical features as well as several Null entries. The Null entries are somewhat expected since it must be difficult to collect perfect data regarding all events.","b8783a00":"* Drought is the event that has the longest duration across different Continents\n* For some reason, floods in Africa last double the amount of days when compared to the remaining Continents\n* In contrast, in Africa extreme temperature events have half the duration when compared to the Americas and other places. Africa is also showing an odd number of days for Earthquakes to last, which is probably a error in the Database input\n* Wildfires in the Americas have a longer duration than any other place. It makes sense if we consider the fires in the US and Amazonia florest"}}