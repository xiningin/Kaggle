{"cell_type":{"73fbfa0e":"code","f62c8171":"code","ce772675":"code","f5bcd0e5":"code","b56faa5b":"code","5abbc63b":"code","dcb6b279":"code","3d274457":"code","f6752df7":"code","92441cc0":"code","8e934430":"code","5a560adc":"code","04529a6b":"code","fcadda9d":"code","d1d49955":"code","fa317156":"code","e173f5b3":"code","660e211c":"code","a2e0f7f3":"code","c0ce449c":"code","d604ca2d":"code","ebfd0796":"code","c3953996":"code","41071488":"code","d0a0a65a":"code","7a4e8218":"code","3b232ba3":"code","6b375eb5":"code","2cf0f817":"code","0c133d17":"code","416fafa2":"code","bdcec464":"code","53248e73":"code","6b9a25ee":"code","4b0c195a":"code","f5a0ea7f":"code","c91193c7":"code","4232cd65":"code","49a7d00f":"code","641c149e":"code","4683292b":"code","d225cedc":"code","00ca3701":"code","3442a84d":"code","893ce51b":"code","8a69ebe3":"code","f6ab17f7":"code","1318bd11":"code","a1363aec":"code","62783ea9":"code","6d4229b2":"code","848d2868":"code","5d6d3033":"code","1e6b0a07":"code","db842142":"code","a83a1391":"code","7cba4731":"code","b5fb7aed":"code","38e2f7ae":"code","b61e8238":"code","70ca95ce":"code","fa4ffeaa":"code","a0b6d2fd":"code","f99a934e":"code","91f0e2c7":"code","823a7152":"code","551d5a6b":"code","1e39bf3f":"code","40387a72":"markdown","c177fa1c":"markdown","c6261d10":"markdown","1a811ef3":"markdown","9743a4e4":"markdown","61efc264":"markdown","5f112a36":"markdown","2da987f8":"markdown","1158c7f3":"markdown","5c650c0f":"markdown","65612847":"markdown","2c746c9a":"markdown","98492086":"markdown","e717d957":"markdown","03a1551d":"markdown","f2ad3cd4":"markdown","eaf6ef33":"markdown","c5766926":"markdown","0ae4e728":"markdown","c96c729a":"markdown","4e60a113":"markdown","2ab96cd6":"markdown","04de2be3":"markdown","ea945113":"markdown","61e89d80":"markdown","a9e4009e":"markdown"},"source":{"73fbfa0e":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","f62c8171":"data=pd.read_csv('..\/input\/ccdata\/CC GENERAL.csv')","ce772675":"data.head()","f5bcd0e5":"data.info()","b56faa5b":"data.shape","5abbc63b":"data.drop(\"CUST_ID\", axis=1,inplace = True)","dcb6b279":"data.isna().sum()","3d274457":"data.MINIMUM_PAYMENTS.fillna(data.MINIMUM_PAYMENTS.mean(), inplace = True) ","f6752df7":"data.CREDIT_LIMIT.fillna(data.CREDIT_LIMIT.mean(),inplace = True)","92441cc0":"data.isna().sum()","8e934430":"data.describe()","5a560adc":"q1=data.quantile(0.25)\nq3=data.quantile(0.75)\niqr=q3-q1\nll=q1-(1.5*iqr)\nul=q3+(1.5*iqr)","04529a6b":"num=list()\nfor a in data.columns:\n    if a in ll.index:\n        num.append(a)","fcadda9d":"data=data[num]","d1d49955":"df = data[~((data < (q1 - 1.5 * iqr)) |(data > (q3 + 1.5 * iqr))).any(axis=1)]","fa317156":"df.head()","e173f5b3":"df.shape","660e211c":"df.info()","a2e0f7f3":"df.describe()","c0ce449c":"graph_by_variables = ['BALANCE', 'BALANCE_FREQUENCY', 'PURCHASES',\n       'ONEOFF_PURCHASES', 'INSTALLMENTS_PURCHASES', 'CASH_ADVANCE',\n       'PURCHASES_FREQUENCY', 'ONEOFF_PURCHASES_FREQUENCY',\n       'PURCHASES_INSTALLMENTS_FREQUENCY', 'CASH_ADVANCE_FREQUENCY',\n       'CASH_ADVANCE_TRX', 'PURCHASES_TRX', 'CREDIT_LIMIT', 'PAYMENTS',\n       'MINIMUM_PAYMENTS', 'PRC_FULL_PAYMENT', 'TENURE']","d604ca2d":"plt.figure(figsize=(20,35))\n\nfor i in range(0,17):\n    plt.subplot(6, 3, i+1)\n    plt.boxplot(df[graph_by_variables[i]].dropna())\n    plt.title(graph_by_variables[i])","ebfd0796":"plt.figure(figsize=(9,7))\nsns.heatmap(df.corr(),cmap='coolwarm')\n\nplt.title('Correlation Matrix')","c3953996":"plt.figure(figsize=(10,60))\nfor i in range(0,17):\n    plt.subplot(17,1,i+1)\n    sns.distplot(df[df.columns[i]],kde_kws={'color':'b','bw': 0.1,'lw':3,'label':'KDE'},hist_kws={'color':'r'})\n    plt.title(df.columns[i])\nplt.tight_layout()","41071488":"df['Monthly_avg_purchase']=df['PURCHASES']\/df['TENURE']","d0a0a65a":"print(df['Monthly_avg_purchase'].head(),'\\n ',\ndf['TENURE'].head(),'\\n', df['PURCHASES'].head())","7a4e8218":"df['Monthly_cash_advance']= df['CASH_ADVANCE'] \/ df['TENURE']","3b232ba3":"df[df['ONEOFF_PURCHASES']==0]['ONEOFF_PURCHASES'].count()","6b375eb5":"df.loc[:,['ONEOFF_PURCHASES','INSTALLMENTS_PURCHASES']]","2cf0f817":"def purchase(df):\n    if (df['ONEOFF_PURCHASES']==0) & (df['INSTALLMENTS_PURCHASES']==0):\n        return 'none'\n    if (df['ONEOFF_PURCHASES']>0) & (df['INSTALLMENTS_PURCHASES']>0):\n         return 'both_oneoff_installment'\n    if (df['ONEOFF_PURCHASES']>0) & (df['INSTALLMENTS_PURCHASES']==0):\n        return 'one_off'\n    if (df['ONEOFF_PURCHASES']==0) & (df['INSTALLMENTS_PURCHASES']>0):\n        return 'installment'","0c133d17":"df['purchase_type']=df.apply(purchase, axis=1)","416fafa2":"df['purchase_type'].value_counts()","bdcec464":"df['limit_usage'] = df.apply(lambda x: x['BALANCE']\/x['CREDIT_LIMIT'], axis=1)","53248e73":"df['limit_usage'].head()","6b9a25ee":"df['PAYMENTS'].isnull().any()\ndf['MINIMUM_PAYMENTS'].isnull().value_counts()","4b0c195a":"df['MINIMUM_PAYMENTS'].describe()","f5a0ea7f":"df['payment_minpay']= df.apply(lambda x:x['PAYMENTS']\/x['MINIMUM_PAYMENTS'],axis=1)","c91193c7":"df['payment_minpay']","4232cd65":"df.groupby('purchase_type').apply(lambda x: np.mean(x['limit_usage'])).plot.barh()","49a7d00f":"df.groupby('purchase_type').apply(lambda x: np.mean(x['Monthly_cash_advance'])).plot.barh()\nplt.title('Average cash advance taken by customers of different Purchase type : Both, None,Installment,One_Off')","641c149e":"x=df.groupby('purchase_type').apply(lambda x: np.mean(x['payment_minpay']))\ntype(x)\nx.values","4683292b":"fig,ax=plt.subplots()\nax.barh(y=range(len(x)), width=x.values,align='center')\nax.set(yticks= np.arange(len(x)),yticklabels = x.index);\nplt.title('Mean payment_minpayment ratio for each purchse type')","d225cedc":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nimport sklearn.cluster as cluster\nfrom sklearn.decomposition import FactorAnalysis","00ca3701":"scaler = StandardScaler()\ndf_std=pd.DataFrame(scaler.fit_transform(data))","3442a84d":"for i in range(len(data.columns)):\n    df_std.rename(columns={i:data.columns[i]},inplace=True)","893ce51b":"df_std.head()","8a69ebe3":"transformer = FactorAnalysis(n_components=10, random_state=0)","f6ab17f7":"transformer.fit(df_std)","1318bd11":"components_df=pd.DataFrame(transformer.components_)\nfor i in range(len(data.columns)):\n    components_df.rename(columns={i:data.columns[i]},inplace=True)","a1363aec":"plt.figure(figsize=(10,8))\ncomponents_df.loc[0].plot(kind=\"bar\")\nplt.grid(True)","62783ea9":"components_df.loc[0].sort_values()","6d4229b2":"cluster_df=data[['PURCHASES','ONEOFF_PURCHASES','PURCHASES_TRX','ONEOFF_PURCHASES_FREQUENCY','INSTALLMENTS_PURCHASES','PURCHASES_FREQUENCY','PURCHASES_INSTALLMENTS_FREQUENCY','CREDIT_LIMIT','PAYMENTS','CASH_ADVANCE_FREQUENCY']]","848d2868":"cluster_df.head()","5d6d3033":"distortions = []\nK = range(1,30)\nfor k in K:\n    kmeanModel = KMeans(n_clusters=k)\n    kmeanModel.fit(cluster_df)\n    distortions.append(kmeanModel.inertia_)\nplt.plot(K, distortions, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Distortion')\nplt.title('The Elbow Method showing the optimal k')\nplt.show()","1e6b0a07":"km = KMeans(init=\"random\", n_clusters=8)\ny_pred = km.fit(cluster_df)","db842142":"labels=km.labels_","a83a1391":"labels=labels.tolist()","7cba4731":"labels=pd.Series(data=labels,index=range(len(labels)))","b5fb7aed":"labels_x=list()\nfor i in range(10):\n    labels_x.append(labels[labels.values==i])","38e2f7ae":"cluster_df.iloc[labels_x[0].index,:].describe().T","b61e8238":"cluster_df.iloc[labels_x[1].index,:].describe().T","70ca95ce":"cluster_df.iloc[labels_x[2].index,:].describe().T","fa4ffeaa":"cluster_df.iloc[labels_x[3].index,:].describe().T","a0b6d2fd":"cluster_df.iloc[labels_x[4].index,:].describe().T","f99a934e":"cluster_df.iloc[labels_x[5].index,:].describe().T","91f0e2c7":"cluster_df.iloc[labels_x[6].index,:].describe().T","823a7152":"cluster_df.iloc[labels_x[7].index,:].describe().T","551d5a6b":"data[\"cluster\"] = y_pred\ncols = list(data.columns)\n\nsns.pairplot( data[ cols ], hue=\"cluster\",diag_kws={'bw': 0.2})","1e39bf3f":"best_cols = [\"BALANCE\", \"PURCHASES\", \"CASH_ADVANCE\",\"CREDIT_LIMIT\", \"PAYMENTS\", \"MINIMUM_PAYMENTS\"]\nkmeans = KMeans(n_clusters=8, init=\"k-means++\", n_init=10, max_iter=300) \nbest_vals = data[best_cols].iloc[ :, 1:].values\ny_pred = kmeans.fit_predict( best_vals )\n\ndata[\"cluster\"] = y_pred\nbest_cols.append(\"cluster\")\nsns.pairplot( data[ best_cols ], hue=\"cluster\", diag_kws={'bw': 0.2})","40387a72":"# KPIs","c177fa1c":"### Cluster 3","c6261d10":"1. 'Balance_Frequency' for most customers is updated frequently ~ 1\n2. Very small number of customers pay their balance in full 'PRC_FULL_PAYMENT' ~ 0\n3. Most customers are ~ 12 years tenure\n4. For 'PURCHASES_FREQUENCY', there are two distinct group of customers\n5. For 'ONEOFF_PURCHASES_FREQUENCY' and 'PURCHASES_INSTALLMENT_FREQUENCY' most users don't do one off puchases or installment purchases frequently","1a811ef3":"### Cluster 8","9743a4e4":"### Cluster 6","61efc264":"# Exploratory Data Analysis","5f112a36":"1. Balance has a higher level of correlation with Cash Advance, Cash Advance Frequency and Credit Limit\n2. Payments variable has a high correletion with Purchases and one off Purchases\n3. Tenure has a negative correlation with Cash Advance and Cash Advance Frequency variables","2da987f8":"Customers which don't do either one-off or installment purchases take more cash on advance","1158c7f3":"### Cash advance amount","5c650c0f":"# Data Pre-processing","65612847":"Balance has a higher level of correlation with Cash Advance, Cash Advance Frequency and Credit Limit. Payments variable has a high correletion with Purchases and one off Purchases. Tenure has a negative correlation with Cash Advance and Cash Advance Frequency variables.","2c746c9a":"### Cluster 4","98492086":"### Cluster 2","e717d957":"Customers with installment purchases are paying dues","03a1551d":"Average payment_minpayment ratio for each purchse type","f2ad3cd4":"### Limit usage (balance to credit limit ratio)","eaf6ef33":"1. Big Spenders with large Payments - they make expensive purchases and have a credit limit that is between average and high. This is only a small group of customers\n2. Cash Advances with large Payments - this group takes the most cash advances. They make large payments, but this appears to be a small group of customers\n3. Medium Spenders with third highest Payments - the second highest Purchases group\n4. Highest Credit Limit but Frugal - this group doesn't make a lot of purchases. It looks like the 3rd largest group of customers\n5. Cash Advances with Small Payments - this group likes taking cash advances, but make only small payments\n6. Small Spenders and Low Credit Limit - they have the smallest Balances after the Smallest Spenders, their Credit Limit is in the bottom 3 groups, the second largest group of customers\n7. Smallest Spenders and Lowest Credit Limit - this is the group with the lowest credit limit but they don't appear to buy much. Unfortunately this appears to be the largest group of customers\n8. Highest Min Payments - this group has the highest minimum payments\n\nSo a marketing strategy that targeted the first five groups might be effective.","c5766926":"###  Monthly average purchase ","0ae4e728":"### Cluster 1","c96c729a":"Let's choose n=8 clusters","4e60a113":"# Clustering","2ab96cd6":"### Cluster 5","04de2be3":"## Gain insight on the customer profiles","ea945113":"### Purchases by type (one-off, installments)","61e89d80":"### Cluster 7","a9e4009e":"### Payments to minimum payments ratio etc (think of more types of similar analysis)"}}