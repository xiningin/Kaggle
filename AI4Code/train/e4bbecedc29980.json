{"cell_type":{"67e31641":"code","8b2d3a5f":"code","5c4aa24d":"code","e7748899":"code","e82237d7":"code","fd7faf55":"code","e365e600":"code","732ab468":"code","44e42fa9":"code","a2494b72":"code","64d84143":"code","889feb6d":"code","7774cec5":"code","78e0e2f0":"code","d4fe5281":"code","c4475410":"code","0e25a738":"code","9bdfc2c5":"code","fef0700d":"code","4717896b":"code","1cc0cc7c":"code","df678cb8":"code","a5f8cdb5":"code","054dc1c6":"code","88800a1e":"code","98750179":"markdown","5b671c0e":"markdown","6d25fc00":"markdown","1c7ca46a":"markdown","7e7ec317":"markdown","84379f86":"markdown","edf84e65":"markdown","74b27670":"markdown"},"source":{"67e31641":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\nimport seaborn as sns\nplt.style.use(\"bmh\")","8b2d3a5f":"# Load data\nlife_data = pd.read_csv(\"..\/input\/life-expectancy-who\/Life Expectancy Data.csv\")","5c4aa24d":"life_data.head(20)","e7748899":"life_data.shape","e82237d7":"life_data.columns","fd7faf55":"# check missing data\nlife_data.isnull().sum()","e365e600":"# fill missing data\nfor column in life_data.columns:\n    if life_data[column].isnull().sum() != 0:\n        life_data[column].fillna(life_data[column].mean(), inplace=True)","732ab468":"life_data.isnull().sum()","44e42fa9":"fig, ax = plt.subplots(figsize=(25, 10))\ng1 = life_data.groupby(\"Country\")[\"Life expectancy \"].mean()\ng1.plot(kind=\"bar\", alpha=0.3, ec=\"k\", color=\"green\")\nplt.ylabel(\"Mean life expectancy\")\nplt.show()","a2494b72":"plt.scatter(x=life_data[\"Year\"], y=life_data[\"Life expectancy \"], color=\"purple\", alpha=0.3)\nplt.ylabel(\"Life expectancy\")\nplt.show()","64d84143":"g2 = life_data.groupby(\"Status\")[\"Life expectancy \"].mean()\ng2.plot(kind=\"bar\", alpha=0.3, ec=\"k\", color=\"brown\")\nplt.ylabel(\"Life expectancy\")\nplt.show()","889feb6d":"sns.pairplot(life_data, x_vars=[\"Adult Mortality\", \"infant deaths\", \"Alcohol\", \"percentage expenditure\", \"Hepatitis B\"], y_vars=[\"Life expectancy \"])","7774cec5":"sns.pairplot(life_data, x_vars=[\"Measles \", \" BMI \", \"under-five deaths \", \"Polio\", \"Total expenditure\"], y_vars=[\"Life expectancy \"])","78e0e2f0":"sns.pairplot(life_data, x_vars=[\"Diphtheria \", \" HIV\/AIDS\", \"GDP\", \"Population\", \" thinness  1-19 years\"], y_vars=[\"Life expectancy \"])","d4fe5281":"sns.pairplot(life_data, x_vars=[\" thinness 5-9 years\", \"Income composition of resources\", \"Schooling\"], y_vars=[\"Life expectancy \"])","c4475410":"corrMatrix = life_data.corr()\nfig, ax = plt.subplots(figsize=(18, 10))\nsns.heatmap(corrMatrix, annot=True)","0e25a738":"life_data.dtypes","9bdfc2c5":"# Since Country and Status columns aren't numerical values, I will transform them\n\nprint(life_data[\"Country\"].unique())\nletters = life_data[\"Country\"].unique()\nnumbers = list(range(len(life_data[\"Country\"].unique())))\nd = dict(zip(letters, numbers))\nlife_data[\"Country\"] = life_data[\"Country\"].map(d)\nprint(life_data[\"Country\"].unique())\n\nprint(life_data[\"Status\"].unique())\nmappingstatus = {\"Developing\": 0, \"Developed\": 1}\nlife_data[\"Status\"] = life_data[\"Status\"].map(mappingstatus)\nprint(life_data[\"Status\"].unique())","fef0700d":"life_data.describe()","4717896b":"# Now I will make all variables range from 0 to 1, because machine learning algorithms work better that way.\n\nfor column in life_data.columns:\n    maxcolumn = life_data[column].max()\n    if maxcolumn > 1:\n        life_data[column] = life_data[column] \/ maxcolumn","1cc0cc7c":"life_data.describe()","df678cb8":"# Split data\nlife_data_X = life_data.drop(\"Life expectancy \", axis=1)\nlife_data_y = life_data[\"Life expectancy \"]","a5f8cdb5":"Xtrain, Xtest, ytrain, ytest = train_test_split(life_data_X, life_data_y, test_size=0.3)","054dc1c6":"linearparam = {\"fit_intercept\": [True, False], \"normalize\": [True, False], \"copy_X\": [True, False]}\nlineargrid = GridSearchCV(LinearRegression(), linearparam, cv=10)\nlineargrid.fit(Xtrain, ytrain)\nprint(\"Best Linear Regression estimator:\", lineargrid.best_estimator_)","88800a1e":"ypredictedlinear = lineargrid.best_estimator_.predict(Xtest)\n\nmae = metrics.mean_absolute_error(ytest, ypredictedlinear)\nmse = metrics.mean_squared_error(ytest, ypredictedlinear)\nr2 = metrics.r2_score(ytest, ypredictedlinear)\n\nprint(\"Linear Regression performance:\")\nprint(\"MAE:\", mae)\nprint(\"MSE:\", mse)\nprint(\"R2 score:\", r2)","98750179":"Let's see how each characteristic affects life expectancy.","5b671c0e":"Over the years life expectancy has been growing, because of the development in health sector.","6d25fc00":"Developed countries have higher life expectancy.","1c7ca46a":"### Variable notes:\n\n* **Country:** Country\n* **Year:** Year\n* **Status:** Developed or Developing status\n* **Life expectancy:** Life Expectancy in age\n* **Adult Mortality:** Adult Mortality Rates of both sexes (probability of dying between 15 and 60 years per 1000 population)\n* **infant deaths:** Number of Infant Deaths per 1000 population\n* **Alcohol:** Alcohol, recorded per capita (15+) consumption (in litres of pure alcohol)\n* **percentage expenditure:** Expenditure on health as a percentage of Gross Domestic Product per capita(%)\n* **Hepatitis B:** Hepatitis B (HepB) immunization coverage among 1-year-olds (%)\n* **Measles:** Measles - number of reported cases per 1000 population\n* **BMI:** Average Body Mass Index of entire population\n* **under-five deaths:** Number of under-five deaths per 1000 population\n* **Polio:** Polio (Pol3) immunization coverage among 1-year-olds (%)\n* **Total expenditure:** General government expenditure on health as a percentage of total government expenditure (%)\n* **Diphtheria:** Diphtheria tetanus toxoid and pertussis (DTP3) immunization coverage among 1-year-olds (%)\n* **HIV\/AIDS:** Deaths per 1 000 live births HIV\/AIDS (0-4 years)\n* **GDP:** Gross Domestic Product per capita (in USD)\n* **Population:** Population of the country\n* **thinness  1-19 years:** Prevalence of thinness among children and adolescents for Age 10 to 19 (% )\n* **thinness 5-9 years:** Prevalence of thinness among children for Age 5 to 9(%)\n* **Income composition of resources:** Human Development Index in terms of income composition of resources (index ranging from 0 to 1)\n* **Schooling:** Number of years of Schooling(years)","7e7ec317":"The objective of this notebook is to predict life expectancy.","84379f86":"Let's see the correlations between the variables.\n* A value near 1.0 indicates a positive correlation.\n* A value near -1.0 indicates a negative correlation.\n* And a value near zero indicates the absence of any correlation.","edf84e65":"# Life Expectancy","74b27670":"Since this is a supervised learning problem, and the y values are continuous, I will use Linear Regression."}}