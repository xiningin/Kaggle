{"cell_type":{"4d29010b":"code","4fae1e43":"code","b5effb31":"code","2f323587":"code","98e1406e":"code","dd65da56":"code","b2d162fb":"code","147b83d0":"code","899c5246":"code","6da375fd":"code","555ccf4d":"code","7f4bf1e3":"code","eb6ceec4":"code","fa10d114":"code","325bb3b6":"markdown","59338dd6":"markdown"},"source":{"4d29010b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","4fae1e43":"train = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/train.csv\")\ntrain.head()","b5effb31":"test = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/test.csv\")\ntest.head()","2f323587":"X= train.loc[:, train.columns != 'label']\ny=train[['label']]","98e1406e":"# split data into train and test sets\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42,stratify=y)","dd65da56":"from sklearn.neural_network import MLPClassifier\nmodel = MLPClassifier().fit(X_train, y_train)","b2d162fb":"from sklearn.metrics import classification_report\nprint(classification_report(y_train, model.predict(X_train)))","147b83d0":"print(classification_report(y_test, model.predict(X_test)))","899c5246":"X_train= train.loc[:, train.columns != 'label']\ny_train=train[['label']]","6da375fd":"from sklearn.neural_network import MLPClassifier\nmodel = MLPClassifier().fit(X_train, y_train)","555ccf4d":"from sklearn.metrics import classification_report\nprint(classification_report(y_train, model.predict(X_train)))","7f4bf1e3":"# predict result\npred = model.predict(test)\nresult=pd.DataFrame(pred)\nresult= result.rename(columns={ 0 : 'Label'})\nresult.head()","eb6ceec4":"submission = pd.concat([pd.Series(range(1,28001),name = \"ImageId\"),result],axis = 1)\n\nsubmission.to_csv(\"cnn_mnist_datagen.csv\",index=False)","fa10d114":"submission.head()","325bb3b6":"# Model with full data ","59338dd6":"# Model with only train data"}}