{"cell_type":{"4162f2e4":"code","139176d6":"code","620b6c1a":"code","9f6529a0":"code","90a9dc60":"code","5cd49e9c":"code","00f1c70b":"code","cb9ac76f":"code","11941a26":"code","6865d144":"code","886b9c5e":"code","e7af29f9":"code","80c0e2fb":"code","67fb1412":"code","34ca1501":"code","bbf2a9d8":"code","fe9e7d8f":"code","40d17f45":"code","7e803bdd":"code","94168fa8":"code","8e756468":"code","f5705d9d":"code","7c88f72b":"code","71d3fa95":"code","baa66bf9":"code","4a3f8168":"markdown","8786bce4":"markdown","606fde98":"markdown","693c8c89":"markdown","7faa7f5a":"markdown","be675680":"markdown","c7a375d9":"markdown","6daf6e18":"markdown","2e3680b0":"markdown","874213ba":"markdown","e686ed91":"markdown"},"source":{"4162f2e4":"# We will use this libraries\nimport numpy as np\nimport pandas as pd\nimport nltk\n\nfrom PIL import Image\nimport urllib.request\nfrom collections import Counter\nfrom wordcloud import WordCloud, ImageColorGenerator\n\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go","139176d6":"# Reading data from csv\ndataFrame = pd.read_csv(\"\/kaggle\/input\/covid19-250000-tweets\/covid19_en.csv\")","620b6c1a":"# This functions gets a tweet as string and finds hashtags or usernames\n\ndef extractHashTags(tweet):\n    # We use nltk TweetTokenizer to tokenize twitter special keywords like #abc or @abc\n    tokenized_tweet = nltk.tokenize.TweetTokenizer().tokenize(tweet)\n    # We check every token\/word first char\n    hashTags = [word for word in tokenized_tweet if word[0] == \"#\" and len(word) > 1]\n    return hashTags\n\ndef extractUserNames(tweet):\n    tokenized_tweet = nltk.tokenize.TweetTokenizer().tokenize(tweet)\n    userNames = [word for word in tokenized_tweet if word[0] == \"@\" and len(word) > 1]\n    return userNames","9f6529a0":"# We apply functions to our dataframe. Results will write as new columns\ndataFrame[\"userNames\"] = dataFrame[\"tweet\"].apply(extractUserNames)\ndataFrame[\"hashTags\"] = dataFrame[\"tweet\"].apply(extractHashTags)","90a9dc60":"# Filter if there is no hashtag or username in a tweet\nuserNames = dataFrame[dataFrame[\"userNames\"].str.len() != 0]['userNames']\nhashTags = dataFrame[dataFrame[\"hashTags\"].str.len() != 0]['hashTags']","5cd49e9c":"# Merge lists as a one new list\nuN = [i for u in userNames.values for i in u]\nhT = [i for h in hashTags.values for i in h]","00f1c70b":"# To find most frequent elements in a list we need this function\ndef mostFrequentelemnts(List, n): \n    occurence_count = Counter(List) \n    return occurence_count.most_common(n)","cb9ac76f":"# We use plotly bar graph to visualize most used 10 usernames\n\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=[i[0] for i in mostFrequentelemnts(uN, 10)],\n    y=[i[1] for i in mostFrequentelemnts(uN, 10)],\n    marker_color='aqua',\n    opacity=0.5\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(title = \"Most Used 10 Usernames\", barmode='group', xaxis_tickangle=-45)\nfig.show()","11941a26":"# Create our images and show\nmask = np.array(Image.open(urllib.request.urlopen(\"https:\/\/dslv9ilpbe7p1.cloudfront.net\/_FsA5Yg9iTCQnkQFlfyrxw_store_header_image\")))\n\nwc = WordCloud(background_color=\"black\", width = 1920, height = 1080)\n\nwc.generate(\" \".join(uN))\n\nimage_colors = ImageColorGenerator(mask)\nwc.recolor(color_func=image_colors)\n\nfig = plt.figure(figsize = (40, 30))\nplt.imshow(wc, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","6865d144":"wc = WordCloud(background_color=\"black\", width = 1920, height = 1080)\n\nwc.generate(\" \".join(hT))\n\nimage_colors = ImageColorGenerator(mask)\nwc.recolor(color_func=image_colors)\n\nfig = plt.figure(figsize = (40, 30))\nplt.imshow(wc, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","886b9c5e":"filtered_hT = [hashtag for hashtag in hT if \"covid\" not in hashtag.lower() and \"corona\" not in hashtag.lower()]","e7af29f9":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x=[i[0] for i in mostFrequentelemnts(filtered_hT, 10)],\n    y=[i[1] for i in mostFrequentelemnts(filtered_hT, 10)],\n    marker_color='magenta',\n    opacity=0.5\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(title = \"Most Used 10 Hashtags\", barmode='group', xaxis_tickangle=-45)\nfig.show()","80c0e2fb":"wc = WordCloud(background_color=\"black\", width = 1920, height = 1080)\n\nwc.generate(\" \".join(filtered_hT))\n\nimage_colors = ImageColorGenerator(mask)\nwc.recolor(color_func=image_colors)\n\nfig = plt.figure(figsize = (40, 30))\nplt.imshow(wc, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","67fb1412":"dataFrame = pd.read_csv(\"\/kaggle\/input\/covid19-250000-tweets\/covid19_tr.csv\", encoding='utf-8')\n\n# We apply functions to our dataframe. Results will write as new columns\ndataFrame[\"userNames\"] = dataFrame[\"tweet\"].apply(extractUserNames)\ndataFrame[\"hashTags\"] = dataFrame[\"tweet\"].apply(extractHashTags)\n\n# Filter if there is no hashtag or username in a tweet\nuserNames = dataFrame[dataFrame[\"userNames\"].str.len() != 0]['userNames']\nhashTags = dataFrame[dataFrame[\"hashTags\"].str.len() != 0]['hashTags']\n\n# Merge lists as a one new list\nuN = [i for u in userNames.values for i in u]\nhT = [i for h in hashTags.values for i in h]","34ca1501":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x=[i[0] for i in mostFrequentelemnts(uN, 10)],\n    y=[i[1] for i in mostFrequentelemnts(uN, 10)],\n    marker_color='aqua',\n    opacity=0.5\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(title = \"Most Used 10 Usernames\", barmode='group', xaxis_tickangle=-45)\nfig.show()","bbf2a9d8":"wc = WordCloud(background_color=\"black\", width = 1920, height = 1080)\n\nwc.generate(\" \".join(uN))\n\nimage_colors = ImageColorGenerator(mask)\nwc.recolor(color_func=image_colors)\n\nfig = plt.figure(figsize = (40, 30))\nplt.imshow(wc, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","fe9e7d8f":"filtered_hT = [hashtag for hashtag in hT if \"covid\" not in hashtag.lower() and \"corona\" not in hashtag.lower()]","40d17f45":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x=[i[0] for i in mostFrequentelemnts(filtered_hT, 10)],\n    y=[i[1] for i in mostFrequentelemnts(filtered_hT, 10)],\n    marker_color='magenta',\n    opacity=0.5\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(title = \"Most Used 10 Hashtags\", barmode='group', xaxis_tickangle=-45)\nfig.show()","7e803bdd":"wc = WordCloud(background_color=\"black\", width = 1920, height = 1080)\n\nwc.generate(\" \".join(filtered_hT))\n\nimage_colors = ImageColorGenerator(mask)\nwc.recolor(color_func=image_colors)\n\nfig = plt.figure(figsize = (40, 30))\nplt.imshow(wc, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","94168fa8":"dataFrame = pd.read_csv(\"\/kaggle\/input\/covid19-250000-tweets\/covid19_de.csv\", encoding='utf-8')\n\n# We apply functions to our dataframe. Results will write as new columns\ndataFrame[\"userNames\"] = dataFrame[\"tweet\"].apply(extractUserNames)\ndataFrame[\"hashTags\"] = dataFrame[\"tweet\"].apply(extractHashTags)\n\n# Filter if there is no hashtag or username in a tweet\nuserNames = dataFrame[dataFrame[\"userNames\"].str.len() != 0]['userNames']\nhashTags = dataFrame[dataFrame[\"hashTags\"].str.len() != 0]['hashTags']\n\n# Merge lists as a one new list\nuN = [i for u in userNames.values for i in u]\nhT = [i for h in hashTags.values for i in h]","8e756468":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x=[i[0] for i in mostFrequentelemnts(uN, 10)],\n    y=[i[1] for i in mostFrequentelemnts(uN, 10)],\n    marker_color='aqua',\n    opacity=0.5\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(title = \"Most Used 10 Usernames\", barmode='group', xaxis_tickangle=-45)\nfig.show()","f5705d9d":"wc = WordCloud(background_color=\"black\", width = 1920, height = 1080)\n\nwc.generate(\" \".join(uN))\n\nimage_colors = ImageColorGenerator(mask)\nwc.recolor(color_func=image_colors)\n\nfig = plt.figure(figsize = (40, 30))\nplt.imshow(wc, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","7c88f72b":"filtered_hT = [hashtag for hashtag in hT if \"covid\" not in hashtag.lower() and \"corona\" not in hashtag.lower()]","71d3fa95":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x=[i[0] for i in mostFrequentelemnts(filtered_hT, 10)],\n    y=[i[1] for i in mostFrequentelemnts(filtered_hT, 10)],\n    marker_color='magenta',\n    opacity=0.5\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(title = \"Most Used 10 Hashtags\", barmode='group', xaxis_tickangle=-45)\nfig.show()","baa66bf9":"wc = WordCloud(background_color=\"black\", width = 1920, height = 1080)\n\nwc.generate(\" \".join(filtered_hT))\n\nimage_colors = ImageColorGenerator(mask)\nwc.recolor(color_func=image_colors)\n\nfig = plt.figure(figsize = (40, 30))\nplt.imshow(wc, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","4a3f8168":"### Usernames","8786bce4":"### Let's check other languages.","606fde98":"# Turkish","693c8c89":"# Most Used Hashtags and Usernames in Covid-19 Tweets\n\n<table>\n  <tr>\n    <td><img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/8\/82\/SARS-CoV-2_without_background.png\" width=270 height=480><\/td>\n    <td><img src=\"https:\/\/help.twitter.com\/content\/dam\/help-twitter\/brand\/logo.png\" width=270 height=480><\/td>\n  <\/tr>\n <\/table>\n<br>\n<br>\n\n**Hello,**\n\n**In this kernel we will extract hashtags and user nick names from tweets and visualize most used ones.**","7faa7f5a":"### Usernames","be675680":"### Hashtags","c7a375d9":"# German","6daf6e18":"### There are lot of covid strings here as expected. So lets filter from covid or corona keywords for hashtags.","2e3680b0":"## Most Used Usernames in Tweets","874213ba":"## Most Used Hashtags in Tweets","e686ed91":"### Hashtags"}}