{"cell_type":{"5a98e2b7":"code","8ceae7e5":"code","6ff46f10":"code","7f2369dd":"code","0d6b292e":"code","c05991c7":"code","7ceaaf1f":"code","a323b692":"code","e2c98580":"code","eb07e10a":"markdown","b1bccb6b":"markdown","ec7d5433":"markdown","06e38cd8":"markdown","4e823ad8":"markdown","88e6c978":"markdown"},"source":{"5a98e2b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8ceae7e5":"df = pd.read_csv('..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')","6ff46f10":"df.info()","7f2369dd":"df.head()","0d6b292e":"round(100*(df.isnull().sum()\/len(df.index)),2)","c05991c7":"df.loc[np.isnan(df['total_vaccinations']),['total_vaccinations']] = 0\ndf.loc[np.isnan(df['people_vaccinated']),['people_vaccinated']] = 0\ndf.loc[np.isnan(df['people_fully_vaccinated']),['people_fully_vaccinated']] = 0\ndf.loc[np.isnan(df['daily_vaccinations_raw']),['daily_vaccinations_raw']] = 0\ndf.loc[np.isnan(df['daily_vaccinations']),['daily_vaccinations']] = 0\ndf.loc[np.isnan(df['total_vaccinations_per_hundred']),['total_vaccinations_per_hundred']] = 0\ndf.loc[np.isnan(df['people_vaccinated_per_hundred']),['people_vaccinated_per_hundred']] = 0\ndf.loc[np.isnan(df['people_fully_vaccinated_per_hundred']),['people_fully_vaccinated_per_hundred']] = 0\ndf.loc[np.isnan(df['daily_vaccinations_per_million']),['daily_vaccinations_per_million']] = 0","7ceaaf1f":"df.groupby([df.country]).sum().sort_values(by='total_vaccinations',ascending=False)","a323b692":"plt.figure(figsize=[10,10])\ndf_top5 = df.groupby([df.country]).sum().sort_values(by='total_vaccinations',ascending=False)[0:10]\ndf_top5\ndf_top5['daily_vaccinations'].plot.bar()\nplt.show()","e2c98580":"plt.figure(figsize=[10,10])\ndf_top5 = df.groupby([df.country]).sum().sort_values(by='total_vaccinations',ascending=False)[-11:-1]\ndf_top5\ndf_top5['daily_vaccinations'].plot.bar()\nplt.show()","eb07e10a":"## Replacing all the NAN values with 0. ","b1bccb6b":"## Top 5 Countries for Daily Vaccinations","ec7d5433":"## Check the % of missing Data","06e38cd8":"The Dataset consists of all numbers. Any missing data can be marked as 0 (with the assumption that there were no vaccinations provided on that particular day).","4e823ad8":"## Calculating the Sum of all Columns for Each Country","88e6c978":"## Countries at the end of the Covid19 Vaccionation drive"}}