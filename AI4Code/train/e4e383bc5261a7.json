{"cell_type":{"708f8d03":"code","5e1c4939":"code","0b9f853b":"code","06072611":"code","e5c56eb1":"code","86bdaf94":"code","dc143a21":"code","fb066be2":"code","5d7fa2ff":"code","6f84306e":"code","6bf89726":"code","5686d50b":"code","1149d0bd":"code","e25b0774":"code","856ded97":"code","4289630d":"code","ef43d706":"code","e353648c":"code","0e89fe92":"code","16722a3a":"code","5b86b439":"code","399384a4":"code","ab1d4b35":"code","4ef5983a":"code","df6bc7a1":"code","12c166c5":"markdown","2f31fd67":"markdown","2cab5000":"markdown","deaf174a":"markdown","851936ea":"markdown","75030843":"markdown","82c8f371":"markdown","876764a5":"markdown","a963ab95":"markdown","725ba178":"markdown","1601ee7d":"markdown","dd9e8d90":"markdown","8ac3a0ea":"markdown","c93b3435":"markdown","38bd1b95":"markdown","c77a88de":"markdown","e387d011":"markdown"},"source":{"708f8d03":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5e1c4939":"import matplotlib.pyplot as plt\n%matplotlib inline","0b9f853b":"data_df = pd.read_csv(\"\/kaggle\/input\/california-housing-prices\/housing.csv\")","06072611":"data_df.head()","e5c56eb1":"print(data_df.shape)","86bdaf94":"data_df.info()","dc143a21":"data_df.hist(bins=50, figsize=(15,15))\nplt.show()","fb066be2":"data_df.isnull().sum()","5d7fa2ff":"import math \ntotal_bedrooms_median = math.floor(data_df[\"total_bedrooms\"].median())\nprint(total_bedrooms_median)","6f84306e":"data_df[\"total_bedrooms\"] = data_df[\"total_bedrooms\"].fillna(total_bedrooms_median)","6bf89726":"data_df.isnull().sum()","5686d50b":"from sklearn.preprocessing import LabelEncoder,StandardScaler\nl_er = LabelEncoder()\ndata_df['ocean_proximity'] = l_er.fit_transform(data_df['ocean_proximity'])","1149d0bd":"data_df.info()","e25b0774":"X_Features_1=['longitude', 'latitude', 'housing_median_age', 'total_rooms',\n       'total_bedrooms', 'population', 'households', 'median_income',\n       'ocean_proximity']\nviewing = data_df[X_Features_1]\nviewing.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\", alpha=0.4,\n            s=viewing[\"population\"]\/100, label=\"population\",\n            c=data_df[\"median_house_value\"], cmap=plt.get_cmap(\"jet\"), colorbar=True,\n            figsize=(20,10))\nplt.legend() # cmap is showing the median house value","856ded97":"\"\"\"\nHouse value increases with the increasing of the Median Income\n\"\"\"\n\ndata_df.plot(kind='scatter', x='median_income', y='median_house_value',\n            alpha=0.1, figsize=(8,5))","4289630d":"from sklearn import preprocessing\n\n# Get column names first\ncol_names = data_df.columns\n\n\"\"\"\nStandardScaler is useful for the features that follow a Normal distribution.\n\"\"\"\n\n# create the scaler object\nscaler = preprocessing.StandardScaler() # MUST USE Standscaler\n\n# Fit the data on the scaler object\ndata_df_scaled = scaler.fit_transform(data_df)\ndata_df_scaled = pd.DataFrame(data_df_scaled, columns=col_names)","ef43d706":"data_df_scaled.head()","e353648c":"X_Features=['longitude', 'latitude', 'housing_median_age', 'total_rooms',\n       'total_bedrooms', 'population', 'households', 'median_income',\n       'ocean_proximity']\n\nX=data_df_scaled[X_Features]\nX.head()","0e89fe92":"print(X.shape)","16722a3a":"Y=data_df_scaled['median_house_value']\nY.head()","5b86b439":"print(Y.shape)","399384a4":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X,Y,test_size=0.25,random_state=1)\n\nprint (\"x_train \", x_train.shape, \", y_train \" ,y_train.shape)\nprint (\"x_test \", x_test.shape, \", y_test \" ,y_test.shape)","ab1d4b35":"from sklearn.ensemble import RandomForestRegressor\n\nrfr_model = RandomForestRegressor(max_depth=5, random_state=0)\nrfr_model.fit(x_train, y_train)\nacc_rfr_model = rfr_model.score(x_test, y_test) \nprint(acc_rfr_model)","4ef5983a":"dict_rfr_model_acc = {}\nfor i in range(5, 25):\n  rfr_model = RandomForestRegressor(max_depth=i, random_state=0)\n  rfr_model.fit(x_train, y_train)\n  acc_rfr_model = rfr_model.score(x_test, y_test) \n  dict_rfr_model_acc[i]= acc_rfr_model\n\nimport operator\nmax_accuracy_key = max(dict_rfr_model_acc.items(), key=operator.itemgetter(1))[0]\nprint(max_accuracy_key)","df6bc7a1":"rfr_model = RandomForestRegressor(max_depth=24, random_state=0)\nrfr_model.fit(x_train, y_train)\nacc_rfr_model = rfr_model.score(x_test, y_test) \nprint(acc_rfr_model)","12c166c5":"### Loading the dataset","2f31fd67":"### Visualize the Data","2cab5000":"### Split the dataset","deaf174a":"### Viewing the Dataset","851936ea":"#### Random Forest Regressor","75030843":"### Handling the Missing Values","82c8f371":"### Convert the categorical data of \"ocean_proximity\" column","876764a5":"### Relation between median House Value and the Median House Income","a963ab95":"### Seeing the Shape","725ba178":"### Checking Null Values","1601ee7d":"### Train the Model","dd9e8d90":"### Extract Features and Label Data","8ac3a0ea":"### Viewing the Feature data using a Scatter Plot","c93b3435":"#### Finding the best value for max_depth","38bd1b95":"#### Train the model with the max_depth value which has shown the highest accuracy","c77a88de":"### Information about the dataset","e387d011":"### Scaling the Column Values"}}