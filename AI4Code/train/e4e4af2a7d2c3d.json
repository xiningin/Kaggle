{"cell_type":{"c00cdeea":"code","e8869c9e":"code","cbadfced":"code","9037d051":"code","5255d41c":"code","0a7bb6f2":"code","e453a181":"code","a5cb78ae":"code","8a645384":"code","ab0597bc":"code","eb455a37":"code","4f126362":"code","3b026986":"code","b478dcad":"code","39a9b1e5":"code","b1d4a3d0":"code","a98c7c6f":"code","bfa9de8a":"code","c79e96a4":"code","c8088f18":"code","47714710":"code","72ba38d0":"code","ce59016f":"code","d24d393e":"code","aac5796a":"code","7a1b8548":"code","cd47b180":"code","e243af23":"code","7cc984d6":"code","4b53b7aa":"code","cca9928a":"markdown"},"source":{"c00cdeea":"!pip install pycaret","e8869c9e":"import pandas as pd \nimport numpy as np\nimport category_encoders as ce\nfrom pycaret.regression import *\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor,GradientBoostingRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import r2_score, mean_squared_error\nfrom sklearn.linear_model import Ridge\nfrom sklearn.preprocessing import normalize","cbadfced":"df_train = pd.read_csv(\"..\/input\/pubg-finish-placement-prediction\/train_V2.csv\")\ndf_test = pd.read_csv(\"..\/input\/pubg-finish-placement-prediction\/test_V2.csv\")\ndf_test_copy = df_test.copy()","9037d051":"df_train","5255d41c":"df_test","0a7bb6f2":"df_train.isnull().sum()","e453a181":"df_test.isnull().sum()","a5cb78ae":"df_train[\"winPlacePerc\"] = df_train[\"winPlacePerc\"].fillna(np.mean(df_train[\"winPlacePerc\"]))","8a645384":"for i in df_train.columns:\n    print(i,df_train[i].value_counts())","ab0597bc":"cols_to_be_removed=[\"Id\",\"groupId\",\"matchId\"]","eb455a37":"df_train[\"assists\"].unique()","4f126362":"df_train[\"damageDealt\"].describe()","3b026986":"df_train.dtypes","b478dcad":"df_train.describe()","39a9b1e5":"df_train[\"DBNOs\"].unique()","b1d4a3d0":"df_train[\"matchType\"].describe()","a98c7c6f":"df_train = df_train.drop(columns=cols_to_be_removed,axis = 1)\ndf_test = df_test.drop(columns=cols_to_be_removed,axis = 1)","bfa9de8a":"def one_hot_encoding(df,col):\n    one_hot_encoder=ce.OneHotEncoder(cols=col,return_df=True,use_cat_names=True)\n    df_final = one_hot_encoder.fit_transform(df)\n    return df_final","c79e96a4":"df_train = one_hot_encoding(df_train,\"matchType\")\n","c8088f18":"df_test = one_hot_encoding(df_test,\"matchType\")","47714710":"df_train.dtypes","72ba38d0":"# experiment = setup(data= df_train,target = \"winPlacePerc\")","ce59016f":"# compare_models()","d24d393e":"X_train = df_train.drop(\"winPlacePerc\",axis = 1)\nX_test = df_test.copy()\nY_train = df_train[\"winPlacePerc\"]","aac5796a":"X_train = normalize(X_train)\nX_test = normalize(X_test)\n","7a1b8548":"gradient_boosting_regr = GradientBoostingRegressor()\ngradient_boosting_regr.fit(X_train, Y_train)","cd47b180":"df_train.to_csv(\"df_train_cleaned.csv\",index = False)\ndf_test.to_csv(\"df_test_cleaned.csv\",index = False)","e243af23":"Y_pred = gradient_boosting_regr.predict(X_test)","7cc984d6":"submission = pd.DataFrame()\nsubmission[\"id\"] = df_test_copy[\"Id\"]\nsubmission[\"winPlacePerc\"] = Y_pred","4b53b7aa":"submission.to_csv(\"submission.csv\",index = False)","cca9928a":"<a href=\"https:\/\/www.kaggle.com\/klmsathishkumar\/pubg-analysis\"> Download File <\/a>"}}