{"cell_type":{"edfc08b4":"code","803465cc":"code","87147e9b":"code","392830b9":"code","3d2816c3":"code","f30c630b":"code","a8920d37":"code","3251ba96":"code","a4559ffc":"code","c9a73c04":"code","631fee73":"code","82f0f540":"code","9aef7de3":"code","d4de2855":"code","e1b60590":"code","6ae8cff4":"code","b68c0a07":"code","2f36b474":"code","8dbfd735":"code","0de30164":"code","9d68d78e":"code","4a0267c2":"code","90ca9508":"code","ed1bd89d":"code","9c12d30b":"code","319bceb8":"code","ea608619":"code","bd5b6c14":"code","49bd652d":"code","71b8ad3b":"code","ded18d7f":"code","542e0bb1":"code","75ae5592":"code","8f1a989c":"code","805539e7":"code","f0f590fc":"code","b0fda145":"code","146a4d18":"code","0a8f0667":"code","1ee3a5fe":"markdown","19a49e6b":"markdown","d87e367d":"markdown"},"source":{"edfc08b4":"import numpy as np\nimport pandas as pd\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt","803465cc":"real_estate_kl = pd.read_csv('..\/input\/real-estate-kuala-lumpur-malaysia\/kl_properties.csv')","87147e9b":"real_estate_kl.head()","392830b9":"real_estate_kl.tail()","3d2816c3":"real_estate_kl.info()","f30c630b":"real_estate_kl['Price'].replace(' ', '', regex=True, inplace=True)\nreal_estate_kl['Price'].replace('RM', '', regex=True, inplace=True)\nreal_estate_kl","a8920d37":"real_estate_kl['Size'].replace(' ', '', regex=True, inplace=True)\nreal_estate_kl['Size'].replace('sq.ft.', '', regex=True, inplace=True)\nreal_estate_kl","3251ba96":"real_estate_kl['Bedrooms'].replace(' ', '', regex=True, inplace=True)\nreal_estate_kl['Bedrooms'].replace('Bedrooms', '', regex=True, inplace=True)\nreal_estate_kl['Bedrooms'].replace('Bedroom', '', regex=True, inplace=True)\nreal_estate_kl","a4559ffc":"real_estate_kl['Bathrooms'].replace(' ', '', regex=True, inplace=True)\nreal_estate_kl['Bathrooms'].replace('Bathrooms', '', regex=True, inplace=True)\nreal_estate_kl['Bathrooms'].replace('Bathroom', '', regex=True, inplace=True)\nreal_estate_kl","c9a73c04":"areas = real_estate_kl['Area'].unique()\nareas","631fee73":"real_estate_kl.dtypes","82f0f540":"real_estate_kl.convert_dtypes().dtypes","9aef7de3":"real_estate_kl['Price'] = real_estate_kl['Price'].astype(int)\nreal_estate_kl['Size'] = real_estate_kl['Size'].astype(int)","d4de2855":"real_estate_kl.loc[~(real_estate_kl['Bedrooms'].str.match('^[+-]?\\d+$'))]","e1b60590":"real_estate_kl.loc[3416, 'Bedrooms'] = 10","6ae8cff4":"real_estate_kl['Bedrooms'] = real_estate_kl['Bedrooms'].astype(int)\nreal_estate_kl['Bathrooms'] = real_estate_kl['Bathrooms'].astype(int)","b68c0a07":"real_estate_kl.info()","2f36b474":"real_estate_kl.describe()","8dbfd735":"real_estate_kl.columns","0de30164":"# How many areas we have\nreal_estate_kl['Area'].nunique()","9d68d78e":"# Find unique values in the Data Frame\nareas = real_estate_kl['Area'].unique()\nareas","4a0267c2":"# How many rows we have for each area\nreal_estate_kl.groupby(['Area']).size()","90ca9508":"# How to retrieve properties only in DESA PETALING\ndesa_petaling = real_estate_kl[real_estate_kl['Area'] == 'DESA PETALING']\ndesa_petaling","ed1bd89d":"desa_petaling.corr()","9c12d30b":"plt.figure(figsize=(12,6))\nsns.heatmap(desa_petaling.corr(), annot=True)","319bceb8":"sns.pairplot(desa_petaling)","ea608619":"desa_petaling['Price']","bd5b6c14":"plt.figure(figsize=(12,6))\nsns.displot(desa_petaling['Price'], kind=\"kde\", fill=True)","49bd652d":"plt.figure(figsize=(12,6))\ndesa_petaling.hist('Price', bins=40)","71b8ad3b":"desa_petaling.plot.scatter(x='Price', y='Size');","ded18d7f":"desa_petaling.plot.scatter(x='Price', y='Bedrooms');","542e0bb1":"desa_petaling.plot.scatter(x='Price', y='Bathrooms');","75ae5592":"X = desa_petaling[['Size']]\ny = desa_petaling['Price']","8f1a989c":"from sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression(normalize=True)\nlin_reg.fit(X, y)","805539e7":"lin_reg.predict([[1167, 3, 2]])","f0f590fc":"lin_reg.predict([[1050, 3, 2]])","b0fda145":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\n\npipeline = Pipeline([\n    ('std_scalar', StandardScaler())\n])\n\nX = pipeline.fit_transform(X)","146a4d18":"from sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression(normalize=True)\nlin_reg.fit(X, y)","0a8f0667":"lin_reg.predict([[1167, 3, 2]])","1ee3a5fe":"# Exploratory Data Analysis (EDA)","19a49e6b":"# Loading Data","d87e367d":"# Preprocessing"}}