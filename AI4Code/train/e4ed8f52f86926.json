{"cell_type":{"dc9e0996":"code","20f6fa21":"code","2fe0f317":"code","3ec9ae6b":"code","8f433d5e":"code","ca122084":"code","5085013f":"code","de622c64":"code","ef41b5b3":"code","cb5bea2e":"code","4c2f9b90":"code","09c9ca50":"code","32b0ddd5":"code","31c01606":"code","9ffd0cdb":"code","31bf66fa":"code","4f30e9b8":"code","8c755d1c":"code","6e6d851e":"code","a9792a74":"code","c631e6c3":"code","bbdf505a":"code","2f59a253":"code","f130ce58":"code","c75319ad":"code","67738d54":"code","343b3450":"code","a12cdf4a":"code","fe1166c7":"code","81f66383":"code","af0a165c":"code","b25e7507":"code","ab7ad0f7":"code","894d7e3b":"code","4f598e70":"code","05e6abe5":"code","7da949a9":"code","69dbd50f":"code","cd40a9a1":"code","0ff9d073":"code","77f81bf0":"code","a96fae05":"code","1638fd28":"markdown","d0ff336f":"markdown","259fb33c":"markdown","1b47a132":"markdown","f369a2e1":"markdown","84bded8b":"markdown","a6607bda":"markdown","0f843231":"markdown","30cef496":"markdown","7df2c6bf":"markdown","2e5314c7":"markdown","2f253e98":"markdown","10fac86d":"markdown","c5ed67fa":"markdown","0ab0d492":"markdown","7b804c98":"markdown","2672e0d5":"markdown","c0f958c3":"markdown","1e837392":"markdown","a9914929":"markdown","cbea55f9":"markdown","e375deeb":"markdown","79dd4cb2":"markdown","59d2d4bf":"markdown","0d2723fa":"markdown","3484f848":"markdown","4b38ca55":"markdown","1c32a0ea":"markdown","5689a87a":"markdown","2d2fb336":"markdown","074b80c6":"markdown"},"source":{"dc9e0996":"import pandas as pd\nfrom pandas import Series,DataFrame\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport ipywidgets as widgets\nfrom ipywidgets import interact, interact_manual","20f6fa21":"df=pd.read_csv('..\/input\/online-streaming\/Mo.csv',index_col=False)\ndf1=pd.read_csv('..\/input\/online-streaming\/Mo.csv',index_col=False)\ndf.head()","2fe0f317":"df.shape","3ec9ae6b":"df.drop_duplicates(inplace=True)","8f433d5e":"df.info()","ca122084":"df.isnull().sum()","5085013f":"df.drop('Type',axis=1,inplace=True)","de622c64":"df.describe()","ef41b5b3":"s = df['Genres'].str.split(',').apply(Series, 1).stack()\ns.index = s.index.droplevel(-1)\ns.name = 'Genres'\ndel df['Genres']\ndf_Genre = df.join(s)","cb5bea2e":"d= df1['Language'].str.split(',').apply(Series, 1).stack()\nd.index = d.index.droplevel(-1)\nd.name = 'Language'\ndel df1['Language']\ndf1 = df1.join(d)","4c2f9b90":"df1.head()","09c9ca50":"df_Genre.head()","32b0ddd5":"Netflix=df['Netflix'].sum()\nprint(\"Number of movies on Netflix:\",Netflix)","31c01606":"Hulu=df['Hulu'].sum()\nprint(\"Number of movies on Hulu:\",Hulu)","9ffd0cdb":"Prime_Video=df['Prime Video'].sum()\nprint(\"Number of movies on Amazon Prime Video:\",Prime_Video)","31bf66fa":"Disney=df['Disney+'].sum()\nprint(\"Number of movies on Disney+:\",Disney)","4f30e9b8":"Total=Netflix+Hulu+Prime_Video+Disney\nprint(\"The total number of movies on these online platform:\",Total)","8c755d1c":"num_platform = (Netflix,Hulu,Prime_Video,Disney)\ncol_names = ('Netflix','Hulu','Prime Video','Disney+')\nPlatformList = list(zip(col_names,num_platform))\nPlatformCounts = pd.DataFrame(data=PlatformList,columns=['Platform','Number of Movie'])\nPlatformCounts","6e6d851e":"print(\"The movies available in these platforms are from the year:\",df['Year'].min(),\"to:\",df['Year'].max())","a9792a74":"print(\"The genre of the movies are:\",df_Genre['Genres'].unique())\nprint(\"The number of unique genres are:\",df_Genre['Genres'].nunique())","c631e6c3":"print(\"Average run time of movies on these platforms:\",df['Runtime'].mean())","bbdf505a":"df.hist(color='brown',figsize=(10,10))","2f59a253":"df['Age'].replace(\"13+\",13,inplace=True)\ndf['Age'].replace(\"18+\",18,inplace=True)\ndf['Age'].replace(\"7+\",7,inplace=True)\ndf['Age'].replace(\"all\",0,inplace=True)\ndf['Age'].replace(\"16+\",16,inplace=True)","f130ce58":"df_year = pd.DataFrame(df.groupby(df['Year']).Title.nunique())\ndf_year.head()","c75319ad":"df_year.nlargest(5,'Title')","67738d54":"df_year.plot(title='Movies made per year',color='red',kind='line')","343b3450":"df_Genre['Genres'].value_counts().plot(kind='barh',figsize=(10,10))","a12cdf4a":"df['Age'].value_counts().plot(kind='barh')","fe1166c7":"print(\"The unique languages\",df1['Language'].unique())\nprint(\"The number of unique languages:\",df1['Language'].nunique())","81f66383":"@interact\ndef show_articles_more_than( x=3.1):\n    return df.loc[df['IMDb'] >= x]\n#interact will help you in toggling the age through the toggle button, it will only work in jupyter notebook","af0a165c":"@interact\ndef show_articles_more_than(x=1000):\n    print(\"The number of movies in the year:\",x,\"are:\",df.loc[df['Year']==x].shape[0])\n    return df.loc[df['Year'] ==x]","b25e7507":"@interact\ndef show_articles_more_than(x=10):\n    return df.loc[df['Age']<=x]\n#age=0 means every individual can see that movie","ab7ad0f7":"df['Rotten Tomatoes'] = df['Rotten Tomatoes'].str.rstrip('%').astype('float') ","894d7e3b":"disney_avg_rt= round(df.loc[df['Disney+']==1]['Rotten Tomatoes'].mean(),1)\nhulu_avg_rt=round(df.loc[df['Hulu']==1]['Rotten Tomatoes'].mean(),1)\nnetflix_avg_rt=round(df.loc[df['Netflix']==1]['Rotten Tomatoes'].mean(),1)\nprime_avg_rt=round(df.loc[df['Prime Video']==1]['Rotten Tomatoes'].mean(),1)","4f598e70":"disney_avg_imdb= round(df.loc[df['Disney+']==1]['IMDb'].mean(),1)\nhulu_avg_imdb=round(df.loc[df['Hulu']==1]['IMDb'].mean(),1)\nnetflix_avg_imdb=round(df.loc[df['Netflix']==1]['IMDb'].mean(),1)\nprime_avg_imdb=round(df.loc[df['Prime Video']==1]['IMDb'].mean(),1)","05e6abe5":"Net=df.loc[df['Netflix']==1]\nNet.head()","7da949a9":"Hu=df.loc[df['Hulu']==1]\nHu.head()","69dbd50f":"Pr=df.loc[df['Prime Video']==1]\nPr.head()","cd40a9a1":"# create dataframe:\nno_platform = (Netflix,Hulu,Prime_Video,Disney)\ncol_names = ('Netflix','Hulu','Prime Video','Disney+')\navg_imdb = (netflix_avg_imdb,hulu_avg_imdb,prime_avg_imdb,disney_avg_imdb)\navg_roto = (netflix_avg_rt,hulu_avg_rt,prime_avg_rt,disney_avg_rt)\nList = list(zip(col_names,no_platform,avg_imdb,avg_roto))\nCounts =  pd.DataFrame(data=List,columns=['Platform','Number of Movie','Average IMDb rate','Average % Rotten Tomattoes rate'])\nCounts","0ff9d073":"sns.barplot(x='Platform',y='Number of Movie',data=PlatformCounts)","77f81bf0":"df['Rotten_t']=df['Rotten Tomatoes']\/10","a96fae05":"df.plot.scatter(x='IMDb', y='Rotten_t',title='Profit vs Vote Avg',color='DarkBlue',figsize=(6,5));","1638fd28":"## IMDb Rating vs Rotten Tomatoes Rating Scatter Plot.","d0ff336f":"# Checking the null values in the dataframe.","259fb33c":"## Movies available on Hulu.","1b47a132":"## Splitting the genres so that we can find unique genres.","f369a2e1":"## Movies available on Netflix.","84bded8b":"## Splitting the languages so we can find unique languages.","a6607bda":"## Line plot of the movies produced in a year","0f843231":"# Reading the data","30cef496":"# To sort the movies according to the IMDb rating","7df2c6bf":"# Importing the important packages","2e5314c7":"> ## Changing the string age into int age.","2f253e98":"## Movies available on Prime Video.","10fac86d":"## Calculating the average rating of IMDb on various platforms.","c5ed67fa":"## Calculating the average rating of Rotten Tomatoes.","0ab0d492":"# Plotted Histogram to see how the variables are distributed.","7b804c98":"# Droping the duplicate values from the dataframe.","2672e0d5":"# Knowing the data.","c0f958c3":"## Horizontal bar plot of the movies grouped by age.","1e837392":"## Dropping type column because it  only contains 0 values which are not at all considerable.","a9914929":"# Checking the size of the dataframe.","cbea55f9":"# Max movies produced in the year","e375deeb":"## Horizontal bar plot of the movies sorted by genres.","79dd4cb2":"## Changing the data type of the rotten tomatoes rating from string to float.","59d2d4bf":"## A bar graph to show the movie counts on the platforms.","0d2723fa":"## To sort movies according to age.","3484f848":"## Creating a dataframe that contains the number of movies, average imdb rating and the rotten tomatoes rating of the movies on various platforms.","4b38ca55":"# Getting the summary of our data from the describe method.","1c32a0ea":"## We can se the change in the dataset after splitting the values.","5689a87a":"# No. of movies  released per year","2d2fb336":"# To sort movies according to the year","074b80c6":"## Normalizing the rating of rotten tomatoes in 10 so that it can be easily understood while plotting the scatter plots."}}