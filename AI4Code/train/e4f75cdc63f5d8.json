{"cell_type":{"c147f343":"code","7ab239b3":"code","3622e5c8":"code","b610997c":"code","66f5fb73":"code","5345da1f":"code","52cc7f6a":"code","24d7f1fd":"code","d4796cc4":"code","e911066b":"code","769c77a6":"code","938b8a89":"code","eb8a6920":"code","053fa0cb":"code","ce7082a8":"code","cf5edb5d":"code","0a8a60f7":"code","f2c5e990":"code","96199628":"code","2ddce2a8":"code","5de9c05c":"code","f05335a9":"code","665d3f90":"code","4a182648":"code","626381ca":"code","78bf3fff":"code","cb3cf237":"code","d3211abe":"code","5cd4c54c":"code","57007f19":"code","e7e519b4":"markdown","80bb4fe8":"markdown","731ef1d5":"markdown","746e46fd":"markdown","fb059fdd":"markdown","7fb0d108":"markdown","62b0fc24":"markdown","6909e776":"markdown","4f7f7c33":"markdown","e4e5a796":"markdown","33966896":"markdown"},"source":{"c147f343":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nimport matplotlib.pyplot as plt\nimport seaborn as sns","7ab239b3":"df=pd.read_csv(\"..\/input\/diamonds\/diamonds.csv\")","3622e5c8":"df.head(5)","b610997c":"df.dtypes","66f5fb73":"df.columns","5345da1f":"# df['Total Depth percentage']=round(2*df['z']\/(df['x']+df['y'])*100,2)\ndf=df.drop(['Unnamed: 0'],axis=1)","52cc7f6a":"df.head(5)","24d7f1fd":"df.corr()","d4796cc4":"sns.heatmap(df.corr(),annot=True)","e911066b":"df=df.drop(['carat','x','y'],axis=1)","769c77a6":"df.describe()","938b8a89":"# fig,axs=plt.subplots(3,1,figsize=(15,5))\n# #plt.figure(figsize=(15,5))\n# sns.histplot(x='depth',data=df,ax=axs[0,0])\n# sns.histplot(x='table',data=df,ax=axs[1,0])\n# sns.histplot(x='z',data=df,ax=axs[2,0])","eb8a6920":"plt.figure(figsize=(15,5))\nsns.histplot(x='depth',data=df)","053fa0cb":"plt.figure(figsize=(15,5))\nsns.histplot(x='table',data=df)","ce7082a8":"plt.figure(figsize=(15,5))\nsns.histplot(x='z',data=df)","cf5edb5d":"plt.figure(figsize=(15,5))\nsns.histplot(x='price',data=df)","0a8a60f7":"df.head(5)","f2c5e990":"df['cut'].unique()","96199628":"df['color'].unique()","2ddce2a8":"df['clarity'].unique()","5de9c05c":"plt.figure(figsize=(15,5))\nsns.boxplot(x='cut',y='price',data=df)","f05335a9":"plt.figure(figsize=(15,5))\nsns.boxplot(x='color',y='price',data=df)","665d3f90":"plt.figure(figsize=(15,5))\nsns.boxplot(x='clarity',y='price',data=df)","4a182648":"y=df['price']","626381ca":"rest=df.drop(['price'],axis=1)","78bf3fff":"x=pd.get_dummies(rest,drop_first=True)","cb3cf237":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test=train_test_split(x,y,test_size=.20,random_state=2)","d3211abe":"from sklearn.linear_model import LinearRegression\nregression=LinearRegression()\nregression.fit(X_train,y_train)","5cd4c54c":"y_pred=regression.predict(X_test)","57007f19":"from sklearn.metrics import r2_score\nscore=r2_score(y_test,y_pred)\nscore","e7e519b4":"Inference from box plots:\n1. The average price of the diamond with ideal cut is lowest while the other have similar average price.\n2. The price of daimond varies with respect to color, here J is most expensive.\n3. In case of clarity SI2 have the highest price.","80bb4fe8":"***REGRESSION MODEL***","731ef1d5":"***NOW, PLOTTING CATEGORICAL VARIABLE***","746e46fd":"After plotting the box plot for the categorical data, we can conclude that every entity has a outlier present init. These outlier can be trimmed if required.","fb059fdd":"1. Since carat has high correlation with x, y z we can drop it.\n2. Similarly x, y, and z have high correlation so we dropped x and y from our model.","7fb0d108":"***PLOTTING NUMERICAL VARIABLE***","62b0fc24":"Since we have calculated the total depth of the diamond we can eliminate x,y and z from out dataset as there information is curtailed in Total depth percentage","6909e776":"The R square value for our model is 83.60%","4f7f7c33":"Creating a dummy variable for the categorical variable","e4e5a796":"We can drop unnamed column in the dataset","33966896":"From the plotting of numerical variable we can infer the distribution pattern of the various variable:\n1. depth seems to be normally distributed across its average.\n2. table seems to be skewed toward right.\n3. z follows a random distribution.\n4. price can be said to be following chi-squared distribution."}}