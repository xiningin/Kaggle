{"cell_type":{"3b838781":"code","0fdfad4d":"code","239637c1":"code","43232c58":"code","9fb1a7a8":"code","4b40db96":"code","971ae717":"code","ea5df88d":"code","92373c69":"code","002613f1":"code","d9cc6e18":"code","73f269ac":"code","361bfa35":"code","e7387807":"code","ced162a7":"code","b8c56c27":"code","5ed83e34":"code","530de34a":"code","b28603e9":"code","eb7021b2":"markdown","f2a608c0":"markdown","48073df8":"markdown","649ed93f":"markdown","1edf5087":"markdown","9161445e":"markdown","179719b9":"markdown","5afe95de":"markdown","8f78d46b":"markdown","170ddce9":"markdown","6606843a":"markdown","3c56e2bd":"markdown","0d19ea2f":"markdown","ce5a04ad":"markdown","3df10194":"markdown","9cfe4a93":"markdown","505cdde6":"markdown","325a56c4":"markdown"},"source":{"3b838781":"import numpy as np\nimport matplotlib.pyplot as plt\n\nimport pandas as pd\ndata = pd.DataFrame(\n    {'group':['a', 'a', 'a', 'b','b', 'b', 'c', 'c','c'],\n     'ounces':[4, 3, 12, 6, 7.5, 8, 3, 5, 6]\n    })\ndata","0fdfad4d":"# TODO \n# Write your step 1 in this cell\n# Delete these comments and write your codes\ndFrame = data.sort_values( ['ounces'], ascending=True ,inplace= False)\ndFrame","239637c1":"# TODO \n# Write your step 2 in this cell\n# Delete these comments and write your codes\ndFrame = data.sort_values( ['group'], ascending=True ,inplace= False)\ndFrame","43232c58":"# TODO \n# Write your step 3 in this cell\n# Delete these comments and write your codes\n_data = data.drop_duplicates(\"group\" , keep='first')\n_data","9fb1a7a8":"# TODO \n# Write your step 4 in this cell\n# Delete these comments and write your codes\nplt.figure(figsize=(6,6))\nplt.plot(_data['group'] , _data['ounces'])\nplt.grid()\nplt.show()","4b40db96":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns","971ae717":"np.random.seed(0)\n\ndf = pd.DataFrame(data={'a':np.random.randint(0, 100, 30),\n                        'b':np.random.randint(0, 100, 30),\n                        'c':np.random.randint(0, 100, 30)})\ndf.head()","ea5df88d":"fig, ax = plt.subplots(2,2, figsize=(15,8)) # This creates a figure of size 15*8","92373c69":"df.describe()\nrange(len(df))","002613f1":"#TODO\n# in location (0,0) put x = index values   and  y = 'a'  ..... The top_left axes\n# in location (0,1) put x = index values   and  y = 'b'  ..... The top_right axes\n# in location (1,0) put x = index values   and  y = 'c'  ..... The bottom_left axes\n# in location (1,0) put x = index values   and  y = range of len of df  ..... The bottom_right axes\n\nfig, ax = plt.subplots(2,2, figsize=(15,8)) # This creates a figure of size 15*8\nfig.suptitle(\"Let's begin our first plot ...\")\n\nax[0 , 0].plot( df.index, df['a'])\nax[0 , 1].plot( df.index, df['b'])\nax[1 , 0].plot( df.index, df['c'])\nax[1 , 1].plot( df.index, range(len(df)))\n\nax[0 , 0].grid()\nax[0 , 1].grid()\nax[1 , 0].grid()\nax[1 , 1].grid()\n\nplt.show()","d9cc6e18":"sns.set_style('darkgrid') # setting the plotting style\n                          # we only need to call this once,\n                          # usually before we start plotting.\n        \n# TODO : set a fig,axe and subplot with 1*1 axes and 15*8 figsize\n# TODO : plot the first one with x = index values & y = 'a'\n# TODO : plot the second one with x = index values & y = 'b'\n# Plot both! in one plot\n\nfig, axes = plt.subplots(1,2, figsize=(19,8)) # This creates a figure of size 15*8\nfig.suptitle(\"Let's begin our seaborn plot\")\naxes[0].plot( df.index, df['a'])\naxes[1].plot( df.index, df['b'])\nplt.show()","73f269ac":"# TODO : in first line write the fig, ax with 3*1 plot (3 rows and 1 columns) and figsize 15*8\n\n# TODO : in row = 1 show x= index values & y = 'a' with label = 'Line A'   ..... Top\n# TODO : in row = 2 show x= index values & y = 'b' with label = 'Line B'   ..... Middle\n# TODO : in row = 3 show x= index values & y = 'c' with label = 'Line C'   ..... Bottom\n\n# For all 3 rows\nfig, axes = plt.subplots(3,1, figsize=(15,8))\nfig.suptitle(\"Let's begin our seaborn plot\")\naxes[0].plot( df.index , df['a'] , '-b', label='Line A')\naxes[0].legend(loc='upper left', frameon=False)\n\naxes[1].plot( df.index, df['b'] , '-b', label='Line B')\naxes[1].legend(loc='upper left', frameon=False)\n\naxes[2].plot( df.index, df['c'] , '-b', label='Line C')\naxes[2].legend(loc='upper left', frameon=False)\n\nplt.show()","361bfa35":"# input\ndf = pd.DataFrame(np.arange(20).reshape(-1, 5), columns=list('abcde'))","e7387807":"# Solution to question 1\n# TODO : Change a and c . a to c and c to a\n# sol 1\n\ndf_q1_s1 = df.reindex(columns=list('cbade'))\ndf_q1_s1","ced162a7":"# Solution to question 1\n# TODO : Change a and c . a to c and c to a\n# sol 2\n\ndf_q1_s2 = df[list('cbade')]\ndf_q1_s2","b8c56c27":"# Solution to question 2\n\ndef change_cols(df, col1, col2):\n    #in this define function lets do this:\n    #TODO : define your df_columns method\n    #TODO : define your index1 method\n    #TODO : define your index2 method\n    #swaping your values : index1 to col1 & index2 to col2\n    \n    newList = df.columns.tolist()\n    indexCol1 , indexCol2 = newList.index(col1) , newList.index(col2)\n    newList[indexCol2] , newList[indexCol1] = newList[indexCol1] , newList[indexCol2]\n    \n    return df[newList]\n\ndf_new = change_cols(df, \"b\", \"e\")\ndf_new","5ed83e34":"# Solution to question 3\n# Sol 1\ncol_list = list(df.columns)\nreverse_list1 = col_list[::-1]\n\ndf[reverse_list1]","530de34a":"# Solution to question 3\n# Sol 2\ncol_list = list(df.columns)\nreverse_list2 = sorted(col_list , key=None, reverse=True)\n\ndf[reverse_list2]","b28603e9":"# Solution to question 3\ncol_list = list(df.columns)\n\n# Using the trick from solution 1\n# TODO : Show your in-place df\ndf.sort_index(axis=1, ascending=False, inplace=True)\ndf","eb7021b2":"### Dataset for this part","f2a608c0":"# Exercise 3: (Hard)","48073df8":"### In this part, we will cover the basic plot types and parameters of Matplotlib. Then we going to make it complex.","649ed93f":"# Exercise 1 : (easy one)","1edf5087":"### At the end of this part, Lets combining subplots with Line Graph and using Legend","9161445e":"## Step 3: Now remove Duplicated values from 'group'","179719b9":"## How to change the order of columns of a DataFrame???","5afe95de":"## Step 1:  Let's sort the dataframe by 'ounces', make ascending = True and inplace = Fales","8f78d46b":"### Let's begin our first plot","170ddce9":"## Step 2: Let's sort the dataframe by 'group', make ascending = True and inplace = Fales","6606843a":"### First, importing our libraries.","3c56e2bd":"### There are 3 questions.\n\n    1. in df, interchange columns 'a' and 'c'\n    \n    2. Create a generic function to interchange two columns, without hardcoding column names.\n\n    3. Sort the columns in reverse alphabetical order, that is colume 'e' first through column 'a' last.\n","0d19ea2f":"## Step 4: Now plot your finall edited dataframe","ce5a04ad":"# Practice_5_IMT","3df10194":"### This function is 'seaborn.set_style('dakgrid')' from the library seaborn","9cfe4a93":"### Now, complete above plots with below comments","505cdde6":"# Exercise 2: (normal)","325a56c4":"### In this cell, it's worth mentioning a convenient function that makes our plots much prettier without having a configure theme"}}