{"cell_type":{"052c53c7":"code","ed19da9c":"code","39560def":"code","23e90d88":"code","8bf26f56":"code","55e5c70c":"code","a8920ca0":"code","a5c158f3":"code","c4956a2d":"code","62e2c75e":"code","ebbf7b35":"code","55bd6f32":"code","0a1fc81a":"code","1ac354d5":"markdown","da5cbc49":"markdown","38051473":"markdown","81152b1a":"markdown","5288d83a":"markdown","c4871a39":"markdown"},"source":{"052c53c7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ed19da9c":"import pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nsns.set_style('whitegrid')\n\ndf = pd.read_csv('\/kaggle\/input\/santa-workshop-tour-2019\/family_data.csv')\nprint('Santa must attend {} families!'.format(df.shape[0]))\ndf.head()","39560def":"plt.figure(figsize=(20,12))\nsns.countplot(x='n_people', data=df, order=df['n_people'].value_counts().index)","23e90d88":"people_prob_density = df['n_people'].value_counts(normalize=True).to_dict()","8bf26f56":"demand = [0 for _ in range(101)]\n\ndef add_demand(x):\n    for i in range(0,10):\n        y = x.at['choice_'+str(i)]\n        demand[y] = demand[y] + ((10-i)*x.at['n_people'])\n    return x\ndf = df.apply(lambda x: add_demand(x), axis=1)\ndemand = demand[1:]\ndemand = [float(x)\/sum(demand) * 100 for x in demand]\nsns.scatterplot(y=demand, x=list(range(1,101)))","55e5c70c":"import numpy as np\ndemand_arr = np.array(demand)\nnp.where(demand_arr > 2)[0]+1","a8920ca0":"import numpy as np\nnp.where(np.logical_and(demand_arr<2, demand_arr > 1))[0]+1","a5c158f3":"import numpy as np\nnp.where(demand_arr<1)[0]+1","c4956a2d":"demand_dict = dict(enumerate(demand, 1))\ndef calculate_eagerness(x):\n    eagerness = 0\n    for i in range(0,9):\n        eagerness = eagerness + (9-i)*demand_dict[x.at['choice_'+str(i)]]\n    return round(eagerness,0)\n    \ndf['eagerness'] = df.apply(lambda x: calculate_eagerness(x), axis=1)","62e2c75e":"sns.distplot(df['eagerness'])","ebbf7b35":"eager_df = df.sort_values(by='eagerness', ascending=False)[['family_id','eagerness','n_people']]\ndisplay(eager_df.head())\ndisplay(eager_df.tail())","55bd6f32":"df[df.family_id==4851]","0a1fc81a":"df[df.family_id==4904]","1ac354d5":"As expected, most of them want to meet on christmas.\nas the day approaches 100, the demand gradually descreases.\nBut there seems to be a pattern where demand rises and falls over the days","da5cbc49":"Let's do some analysis through visualization","38051473":"What makes this family most eager??","81152b1a":"Let's find out which family is very eager on meeting only on On-Demand days!","5288d83a":"What makes this family least eager?","c4871a39":"Let's define the schema to define demand of a particular date.\n"}}