{"cell_type":{"1c7a29a2":"code","dae2ffd6":"code","b90883a3":"code","97f5ff35":"code","961f45ac":"code","c039d2ed":"code","51c18f20":"code","4b449e3a":"code","9b722816":"code","5b6d04ac":"code","17ec6e72":"code","8a3ae564":"code","9ae1ccac":"code","a8cac05f":"code","1b8a4441":"code","db3ac0d4":"code","b2afb852":"code","b748c388":"code","3cba22b3":"code","97175248":"code","832009b5":"code","d26a5139":"markdown","75ff4281":"markdown","2ef062cb":"markdown","ca38151b":"markdown","69f12ce5":"markdown","a6effe5f":"markdown"},"source":{"1c7a29a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","dae2ffd6":"df = pd.read_csv(\"..\/input\/avocado.csv\")\ndf.head()","b90883a3":"df.shape","97f5ff35":"df.info()","961f45ac":"df.columns","c039d2ed":"df.describe()","51c18f20":"df.isnull().sum()","4b449e3a":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas import datetime\n\ndf['Date'] = pd.to_datetime(df['Date'])\n\nmask = df['type']=='conventional'\ng = sns.factorplot('Date','AveragePrice',data=df[mask],\n                   hue='year',\n                   size=10,\n                   aspect=0.8,\n                   palette='vlag',\n                   join = False\n              )","9b722816":"df['Date'] = pd.to_datetime(df['Date'])\n\nmask = df['type']=='organic'\ng = sns.factorplot('Date','AveragePrice',data=df[mask],\n                   hue='year',\n                   size=10,\n                   aspect=0.8,\n                   palette='RdGy',\n                   join = False\n                  )","5b6d04ac":"df['Month'] = df['Date'].dt.month\nmask = df['type']=='conventional'\ng = sns.factorplot('Month','region',data=df[mask],\n                   hue='year',\n                   size=10,\n                   aspect=0.8,\n                   palette='RdBu_r',\n                   join = False\n              )","17ec6e72":"df['Date'] = pd.to_datetime(df['Date'])\ndf['Month'] = df['Date'].dt.month\nmask = df['type']=='organic'\ng = sns.factorplot('Month','region',data=df[mask],\n                   hue='year',\n                   size=10,\n                   aspect=0.8,\n                   palette='rainbow',\n                   join = False\n              )","8a3ae564":"g = sns.factorplot('AveragePrice','region',data = df,\n                   hue='type',\n                   size=13,\n                   aspect=0.8,\n                   palette='winter',\n                   join=False,\n              )","9ae1ccac":"mask = df['type']=='conventional'\ng = sns.factorplot('AveragePrice','region',data=df[mask],\n                   hue='year',\n                   size=13,\n                   aspect=0.8,\n                   palette='prism',\n                   join=False,\n              )","a8cac05f":"mask = df['type']=='organic'\ng = sns.factorplot('AveragePrice','region',data=df[mask],\n                   hue='year',\n                   size=13,\n                   aspect=0.8,\n                   palette='magma',\n                   join=False,\n              )","1b8a4441":"df_org = df.copy()\ndf_org[\"type\"] = df_org[\"type\"].replace({\"conventional\":1, \"organic\":0})\ndf_org = df_org.drop(columns = 'region')\ndf_org.head()","db3ac0d4":"X = df_org.drop(columns = ['type','Date','Unnamed: 0'])\ny = df_org.type","b2afb852":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.3)","b748c388":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\nmodel_rf = RandomForestClassifier(n_estimators=1000 , oob_score = True, n_jobs = -1,\n                                  random_state =50, max_features = \"auto\",\n                                  max_leaf_nodes = 30)\nmodel_rf.fit(x_train, y_train)\n\n# Make predictions\nprediction_test = model_rf.predict(x_test)\nprint (metrics.accuracy_score(y_test, prediction_test))","3cba22b3":"importances = model_rf.feature_importances_\nweights = pd.Series(importances,\n                 index=X.columns.values)\nweights.sort_values()[-10:].plot(kind = 'barh')","97175248":"from xgboost import XGBClassifier\nxgb = XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n                    colsample_bytree=1, gamma=0, learning_rate=0.9, max_delta_step=0,\n                    max_depth = 7, min_child_weight=1, missing=None, n_estimators=100,\n                    n_jobs=1, nthread=None, objective='binary:logistic', random_state=0,\n                    reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n                    silent=True, subsample=1)\nxgb.fit(x_train, y_train)\nprediction_test1 = xgb.predict(x_test)\nprint (metrics.accuracy_score(y_test, prediction_test1))","832009b5":"importances = xgb.feature_importances_\nweights = pd.Series(importances,\n                 index=X.columns.values)\nweights.sort_values()[-10:].plot(kind = 'barh')","d26a5139":"Importing the data","75ff4281":"# Price analysis of Avocado\nAnalysis of Avocado data based on date, month, years, type.","2ef062cb":"# RandomForest Classifier","ca38151b":"# Train Test Split","69f12ce5":"![![image.png](attachment:image.png)](https:\/\/i.pinimg.com\/originals\/b5\/3c\/06\/b53c061ae4ee0f1e3f34c84657702468.gif)","a6effe5f":"# XGBoost Classifier"}}