{"cell_type":{"7c6cf936":"code","ac23635a":"code","5e84c0f3":"code","53560d82":"code","0f366b11":"code","06c1bcd4":"code","a162152b":"code","cada9061":"code","f97b18d7":"code","ccb0622d":"code","520f3504":"code","e8e2b8c9":"code","7d1e3934":"code","92672b0c":"code","7f021f51":"code","066f7dc7":"code","c93849bb":"code","092cd963":"code","a2fd7fea":"code","e4363dbc":"code","d8c0aa03":"code","33ec84fb":"code","14503cde":"code","14f77e79":"code","02690733":"code","a30b1e81":"code","4950b145":"code","1125c820":"code","00dafae9":"code","2eb0031f":"code","049e43e1":"code","e36ea74a":"code","8b339d4f":"code","e3cae51f":"code","5126b372":"code","43cfc963":"code","86b6d6fb":"code","b487f5e9":"code","0ef191bc":"code","f7a50dde":"markdown","8c4000ff":"markdown","80fb2a27":"markdown","b7b85ad0":"markdown","8bbe910f":"markdown","8c4c547b":"markdown","cf8b7266":"markdown","bc107ba2":"markdown","e9806e44":"markdown","9b4b25af":"markdown","c9ea2aa4":"markdown","f1e6648a":"markdown","349ed018":"markdown","97604a34":"markdown","b7203a06":"markdown","4d9eacd5":"markdown","85472269":"markdown","cfc80b30":"markdown","6356963a":"markdown","21ffbb8d":"markdown","38792a26":"markdown","603a3c51":"markdown","1a52dd83":"markdown","6a1adfdf":"markdown","034cba91":"markdown","8b78bdac":"markdown","06d77d50":"markdown","b5525ecf":"markdown","98e6ac59":"markdown","d08e5b0b":"markdown","dfb94a67":"markdown"},"source":{"7c6cf936":"import pandas as pd\nimport numpy as np\nimport missingno as msno\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats ","ac23635a":"df = pd.read_csv('..\/input\/vancouver-bc-historical-crime-data\/crimedata_csv_all_years.csv')\ndf.columns = map(str.lower, df.columns)\ndf.head()","5e84c0f3":"import pyproj\np = pyproj.Proj(\"+proj=utm +zone=10, +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs\")\n\nlon, lat = p(df['x'].values, df['y'].values, inverse=True)\nlatitude, longitude = p(lon, lat)\ndf2 = pd.DataFrame(np.c_[lat, lon], columns=['Latitude', 'Longitude'])\ndf2.head()","53560d82":"df = pd.concat([df, df2], axis=1)\ndf.head()","0f366b11":"figure, (ax1, ax2) = plt.subplots(1, 2, figsize=(10,5))\nmsno.matrix(df, ax=ax1, sparkline=False, fontsize = 12, color=(0., 0.25, 0.25))\nmsno.bar(df, ax=ax2, fontsize = 12, color=(0.25, 0., 0.25))\nplt.show()","06c1bcd4":"plt.figure(figsize=(12, 6))\nax = sns.countplot(x=\"year\", data=df)\nplt.title('Total of All Kinds of Crimes over the Years (2003-2020)')","a162152b":"Type = df.type.value_counts().to_frame().reset_index(drop = False)\nType.columns = ['type', 'count']\nType","cada9061":"import bqplot\nfrom palettable.colorbrewer.diverging import *\nfrom altair import Row, Column, Chart, Text, Scale, Color\n\ncolors = Spectral_8.hex_colors\ncolors.reverse()\n\n#plt.title('Which type of crimes occurred most frequently through 2003-2020?')\ntype_count_chart = Chart(Type).mark_bar().encode(x='count', y='type', color=Color('type', scale=Scale(range=colors)))\ndisplay(type_count_chart)","f97b18d7":"neigh = df.neighbourhood.value_counts().to_frame().reset_index(drop = False)\nneigh.columns = ['neighborhood', 'count']\nneigh","ccb0622d":"import bqplot\nfrom palettable.colorbrewer.diverging import *\nfrom altair import Row, Column, Chart, Text, Scale, Color\n\ncolors = Spectral_8.hex_colors\ncolors.reverse()\n\nplt.figure(figsize=(18, 8))\nneigh_count_chart = Chart(neigh).mark_bar().encode(x='count',y='neighborhood', color=Color('neighborhood', scale=Scale(range=colors)))\ndisplay(neigh_count_chart)\nplt.show()","520f3504":"# plot data\nfig, ax = plt.subplots(figsize=(15, 8))\ndf.groupby(['year', 'type']).agg({'type':'count'}).unstack().plot(ax=ax)\nplt.title('Yearly Trend of Total Number of Crimes over the Years (2003-2020)')\nplt.xlim(2003, 2020)\nplt.legend(loc='best', frameon = False, bbox_to_anchor=(1, 1))","e8e2b8c9":"plt.figure(figsize=(12, 6))\nax = sns.countplot(x=\"month\", data=df, palette= 'magma')\nplt.title('Monthly trend of Total Number of Crimes over the Years (2003-2020)')","7d1e3934":"plt.figure(figsize=(12, 6))\nax = sns.countplot(x=\"day\", data=df, palette= 'viridis')\nplt.title('Dayly Trend of Total Number of Crimes over the Years (2003-2020)')","92672b0c":"plt.figure(figsize=(12, 6))\nax = sns.countplot(x=\"hour\", data=df, palette= 'Reds')\nplt.title('Hourly Trend of Total Number of Crimes over the Years (2003-2020)')","7f021f51":"df_2020 = df[df.year == 2020]\nplt.figure(figsize=(15, 6))\nax = sns.countplot(y=\"type\", data=df_2020, palette = 'rocket' )\nplt.title('Number of Different Kinds of Crimes in 2020')","066f7dc7":"# plot data\nfig, ax = plt.subplots(figsize=(15, 8))\ndf_2020.groupby(['month', 'type']).agg({'type':'count'}).unstack().plot(ax=ax)\nplt.legend(loc='best', frameon = False, bbox_to_anchor=(1, 1))\nplt.xticks((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))\nplt.title('Monthly Trend (Total) of Different Kinds of Crimes in 2020')\nplt.show()","c93849bb":"# plot data\nfig, ax = plt.subplots(figsize=(15, 8))\ndf_2020.groupby(['day', 'type']).agg({'type':'count'}).unstack().plot(ax=ax)\nplt.xticks((1,2, 3, 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31))\nplt.legend(loc='best', frameon = False, bbox_to_anchor=(1, 1))\nplt.title('Daily Trend (Total) of Different Kinds of Crimes in 2020')\nplt.show()","092cd963":"# plot data\nfig, ax = plt.subplots(figsize=(15,8))\ndf_2020.groupby(['hour', 'type']).agg({'type':'count'}).unstack().plot(ax=ax)\nplt.xticks((0, 1,2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))\nplt.legend(loc='best', frameon = False, bbox_to_anchor=(1, 1))\nplt.title('Hourly Trend (Total) of Different Kinds of Crimes in 2020')\nplt.show()","a2fd7fea":"plt.figure(figsize=(25, 6))\nax = sns.countplot(x=\"neighbourhood\", data=df_2020 , hue= 'type')\nplt.title('Total Number of Crimes in Different Neighbourhoods in 2020')\nplt.xticks(rotation=90)","e4363dbc":"oct_2020 = df_2020[(df_2020.month == 10)]\n\nfrequent_oct_2020 = oct_2020.type.value_counts().to_frame().reset_index(drop = False)\nfrequent_oct_2020.columns = ['type', 'count']\nfrequent_oct_2020 = frequent_oct_2020.nlargest(4, \"count\") \n\ntype_oct_2020 = list(frequent_oct_2020.type.values)\noct_2020_type = oct_2020[oct_2020['type'].isin(type_oct_2020)]\n\nfrequent_oct_2020","d8c0aa03":"plt.figure(figsize=(12, 6))\nax = sns.countplot(y=\"type\", data=oct_2020, palette = 'Greens')\nplt.title('Total of Different Kinds of Crimes on October 2020')\nplt.show()","33ec84fb":"off_2020_oct = oct_2020_type[oct_2020_type.type == 'Offence Against a Person']\n\nplt.figure(figsize=(12, 6))\nax = sns.countplot(x=\"day\", data=off_2020_oct)\nplt.title('Number of \\'Offence Against a Person\\' in October 2020')\nplt.xticks(rotation=90)\nplt.show()","14503cde":"plt.figure(figsize=(25, 10))\nax = sns.countplot(x=\"neighbourhood\", data=oct_2020_type , hue= 'type', palette=[\"lightpink\", \"lightseagreen\", 'lightblue', 'salmon'])\nplt.title('Total of Different Kinds of Crimes in Various Neighborhoods in October 2020')\nplt.xticks(rotation=90)\nplt.show()","14f77e79":"plt.figure(figsize=(20, 15))\nsns.stripplot(\n    data=oct_2020_type, x=\"hour\", y=\"day\", hue = 'type',\n    sizes=(10, 100),  palette=[\"lightpink\", \"lightseagreen\", 'lightblue', 'salmon'])\nplt.title('Date and Time of the Occurrence of Different Kinds of Crimes in October 2020')\nplt.legend(loc='best', frameon = False, bbox_to_anchor=(1, 1))\nplt.show()","02690733":"frequent_oct_2020_n = oct_2020.neighbourhood.value_counts().to_frame().reset_index(drop = False)\nfrequent_oct_2020_n.columns = ['neighbourhood', 'count']\nfrequent_oct_2020_n = frequent_oct_2020_n.nlargest(4, \"count\") \n\nneigh_oct_2020 = list(frequent_oct_2020_n.neighbourhood.values)\noct_2020_neigh = oct_2020_type[oct_2020_type['neighbourhood'].isin(neigh_oct_2020)]\n\nfrequent_oct_2020_n","a30b1e81":"CBD_2020_oct = oct_2020_type[oct_2020_type.neighbourhood == 'Central Business District']\n\nplt.figure(figsize=(20, 10))\nsns.stripplot(\n    data=CBD_2020_oct, x=\"day\", y=\"hour\", hue = 'type',\n    sizes=(10, 100),  palette=[\"lightpink\", \"lightseagreen\", 'lightgray', 'salmon'])\nplt.title('Date and Time of Crimes in Central Business District, Vancouver in October 2020')\nplt.legend(loc='best', frameon = False, bbox_to_anchor=(1, 1))\nplt.show()","4950b145":"WE_2020_oct = oct_2020_type[oct_2020_type.neighbourhood == 'West End']\n\nplt.figure(figsize=(20, 10))\nsns.stripplot(\n    data=CBD_2020_oct, x=\"day\", y=\"hour\", hue = 'type',\n    sizes=(10, 100),  palette=[\"lightpink\", \"lightseagreen\", 'salmon', 'gray'])\nplt.title('Date and Time of Crimes in West End, Vancouver in October 2020')\nplt.legend(loc='best', frameon = False, bbox_to_anchor=(1, 1))\nplt.show()","1125c820":"Sun_2020_oct = oct_2020_type[oct_2020_type.neighbourhood == 'Sunset']\n\nplt.figure(figsize=(20, 10))\nsns.stripplot(\n    data=Sun_2020_oct, x=\"day\", y=\"hour\", hue = 'type',\n    sizes=(20, 500),  palette=[\"lightpink\", \"lightseagreen\", 'mediumseagreen', 'gray'])\nplt.title('Date and Time of Crimes in Sunset, Vancouver in October 2020')\nplt.legend(loc='best', frameon = False, bbox_to_anchor=(1, 1))\nplt.show()","00dafae9":"tfv_2020_oct = Sun_2020_oct[Sun_2020_oct.type == 'Theft from Vehicle']\n\nplt.figure(figsize=(6, 4))\nax = sns.countplot(x=\"day\", data=tfv_2020_oct, palette= 'Blues')\nplt.title('Number of \\'Theft from Vehicle\\' in Sunset, Vancouver in October 2020')\n\nsns.jointplot('day', \"hour\", tfv_2020_oct, kind='kde', height=6)\nplt.show()","2eb0031f":"mis_2020_oct = Sun_2020_oct[Sun_2020_oct.type == 'Mischief']\n\nplt.figure(figsize=(6, 4))\nax = sns.countplot(x=\"day\", data=mis_2020_oct, palette= 'Reds')\nplt.title('Number of \\'Mischief\\' in Sunset, Vancouver in October 2020')\n\nsns.jointplot('day', \"hour\", mis_2020_oct, kind='kde', height=6)\nplt.show()","049e43e1":"ot_2020_oct = Sun_2020_oct[Sun_2020_oct.type == 'Other Theft']\n\nplt.figure(figsize=(6, 4))\nax = sns.countplot(x=\"day\", data=ot_2020_oct, palette= 'Greens')\nplt.title('Number of \\'Other Theft\\' in Sunset, Vancouver in October 2020')\n\nsns.jointplot('day', \"hour\", ot_2020_oct, kind='kde', height=6)\nplt.show()","e36ea74a":"import folium\nfrom folium.plugins import *\nfrom folium import plugins","8b339d4f":"neighborhood = list(df.neighbourhood.unique())","e3cae51f":"df = df.dropna()\ndf = df[(df['Latitude'] != 0) & (df['Longitude'] != 0)]\n\ndef map(neigh):\n\n    # Create a dataset of vehicle thefts in 2017\n    tfv2020_oct_sunset =  df[(df['year'] == 2020) & (df['month'] == 10) & (df['neighbourhood'] == neigh) & (df['type'] == \"Theft from Vehicle\")]\n\n    # Create a map centered on Vancouver\n    map_van = folium.Map(location= [49.24, -123.11], zoom_start = 12)\n\n    # Create a list with lat and long values and add the list to a heat map, then show map\n    heat_data = [[row['Latitude'],row['Longitude']] for index, row in tfv2020_oct_sunset.iterrows()]\n    HeatMap(heat_data).add_to(map_van)\n\n    # instantiate a feature group for the incidents in the dataframe\n    incidents = folium.map.FeatureGroup()\n\n    # loop through the 100 crimes and add each to the incidents feature group\n    for lat, lng, in zip(tfv2020_oct_sunset.Latitude, tfv2020_oct_sunset.Longitude):\n        incidents.add_child(\n            folium.CircleMarker(\n                [lat, lng],\n                radius=5, # define how big you want the circle markers to be\n                color='gray',\n                fill=True,\n                fill_color='red',\n                fill_opacity=0.6\n            )\n        )\n    \n    map_van.add_child(incidents)\n\n    # instantiate a mark cluster object for the incidents in the dataframe\n    incident = plugins.MarkerCluster().add_to(map_van)\n\n    # loop through the dataframe and add each data point to the mark cluster\n    for lat, lng, label, in zip(tfv2020_oct_sunset.Latitude, tfv2020_oct_sunset.Longitude, tfv2020_oct_sunset.hundred_block):\n        folium.Marker(\n            location=[lat, lng],\n            icon=None,\n            popup=label,\n        ).add_to(incident)\n\n    # add incidents to map\n    map_van.add_child(incident)\n    return map_van","5126b372":"map ('Marpole')","43cfc963":"map ('West End')","86b6d6fb":"map ('West Point Grey')","b487f5e9":"map ('Mount Pleasant')","0ef191bc":"map ('Sunset')","f7a50dde":"## Hourly trend of different types of crimes during 2020","8c4000ff":"# Part 3: Let's focus on last month October 2020","80fb2a27":"## Total number of crimes throughout the year 2003-2020","b7b85ad0":"## Which crimes occurred the most in 2020?","8bbe910f":"## Which neighbourhoods were more prone to criminal acts in October 2020?","8c4c547b":"## Most frequently occurred crimes throughout 2003-2020","cf8b7266":"# Part 1: Let's look at the trend over 2003-2020","bc107ba2":"#### What about Missing Values?","e9806e44":"## Day-wise total of crimes over the years 2003-2020","9b4b25af":"## What about West End?","c9ea2aa4":"#### Remark: We can use this code in similar way to find out more detail about the time and date or neighborhood where the criminal act took place.","f1e6648a":"## Let's look at the day and time of the crimes in Central Business District","349ed018":"## Total Number of Crimes in Different Neighbourhoods in 2020","97604a34":"## Yearly trend of total number of crimes over the years 2003-2020","b7203a06":"## Let's look at the most frequntly occurred crimes first","4d9eacd5":"## Neighborhoods where most crimes took place","85472269":"## Where these 4 types of crimes took place?","cfc80b30":"# Part 2: Let's look at the crime data for 2020","6356963a":"## Hour-wise total of crimes over the years 2003-2020","21ffbb8d":"## Let's look at the stripplot to see the day and time of occurance of the 4 types of crimes","38792a26":"## Month-wise total of crimes over the years 2003-2020","603a3c51":"## What about Sunset? \n\n### I'm interested to rent in this neighbourhood. So let's look closely here.","1a52dd83":"## Monthly trend of different types of crimes during 2020","6a1adfdf":"### We'll write a function to plot the map with crime for every neighborhood","034cba91":"## Import Libraries","8b78bdac":"## Load Dataset\n\nAttribute Information:\n\n- TYPE: The type of crime activities\n        - BNE Commercial: (Commercial Break and Enter) Breaking and entering into a commercial property with intent to commit an offence\n        - BNE Residential\/Other: (Residential Break and Enter) Breaking and entering into a dwelling\/house\/apartment\/garage with intent to commit an offence\n        - Vehicle Collision or Pedestrian Struck (with Fatality): Includes primarily pedestrian or cyclist struck and killed by a vehicle. It also includes vehicle to vehicle fatal     accidents, however these incidents are fewer in number when compared to the overall data set. Note: There is no neighbourhood information.\n        - Vehicle Collision or Pedestrian Struck (with Injury): Includes all categories of vehicle involved accidents with injuries. This includes pedestrian and cyclist involved incidents with injuries. Note: There is no neighbourhood information\n        - Homicide: A person, directly or indirectly, by any means, causes the death of another person.\n        - Mischief: A person commits mischief that willfully causes malicious destruction, damage, or defacement of property. This also includes any public mischief towards another person.\n        - Offence Against a Person: An attack on a person causing harm that may include usage of a weapon.\n        - Other Theft: Theft of property that includes personal items (purse, wallet, cellphone, laptop, etc.), bicycle, etc.\n        - Theft from Vehicle: Theft of property from a vehicle\n        - Theft of Vehicle: Theft of a vehicle, motorcycle, or any motor vehicle\n        - Theft of Bicycle: Theft of a bicycle\n- YEAR: A four-digit field that indicates the year when the reported crime activity occurred\n- MONTH: A numeric field that indicates the month when the reported crime activity occurred\n- DAY: A two-digit field that indicates the day of the month when the reported crime activity occurred\n- HOUR: A two-digit field that indicates the hour time (in 24 hours format) when the reported crime activity occurred. Note: This information is based on the findings of the police investigation. No time information will be provided for Offences Against a Person crime type\n- MINUTE: A two-digit field that indicates the minute when the reported crime activity occurred. Note: This information is based on the findings of the police investigation. No time information will be provided for Offences Against a Person crime type.\n- HUNDRED_BLOCK: Generalized location of the report crime activity. Note: Locations for reported incidents involving Offences Against a Person have been deliberately randomized to several blocks and offset to an intersection. No time or street location name will be provided for these offences. For property related offences, the VPD has provided the location to the hundred block of these incidents within the general area of the block. All data must be considered offset and users should not interpret any locations as related to a specific person or specific property. Coordinates data for records with \u201cOffset to Protect Privacy\u201d was not disclosed to provide privacy protection. X NK_LOC ST is default location value used for incidents with unknown location and is geolocated to 312 Main Street\n- NEIGHBOURHOOD: The Vancouver Police Department uses the Statistics Canada definition of neighbourhoods within municipalities. Neighbourhoods within the City of Vancouver are based on the census tract (CT) concept within census metropolitanarea (CMA). The Musqueam Indian Band is located in the southwest corner of the City of Vancouver. There is a service agreement between Musqueam and the City of Vancouver, where the City provides municipal services such as policing. As a result, Musqueam crime data is included with the VPD Open Data.\n- X: Coordinate values are projected in UTM Zone 10. All data must be considered offset and users should not interpret any locations as related to a specific person or specific property.\n- Y: Coordinate values are projected in UTM Zone 10. All data must be considered offset and users should not interpret any locations as related to a specific person or specific property.","06d77d50":"### Thanks for looking! Was it helpful at all? ","b5525ecf":"# Vancouver Crime Data Visualization","98e6ac59":"## Let's look at the location of 'Theft from Vehicle' in Sunset in October 2020","d08e5b0b":"## Daily trend of different types of crimes during 2020","dfb94a67":"## Offence Against a Person"}}