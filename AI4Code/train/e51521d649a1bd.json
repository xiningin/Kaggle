{"cell_type":{"fee9ac7d":"code","71db0958":"code","a4f788b7":"code","da32734f":"code","090c4981":"code","700d83cd":"code","1e56445c":"code","d6115c59":"code","53c3b5d4":"code","b77d90ff":"code","0e5ad393":"code","c78f3369":"code","eee407c2":"code","4947d733":"code","5bb849ee":"code","01064679":"code","ce4b05ef":"code","6e646cec":"code","affea422":"code","819f71fe":"markdown","7c5afe73":"markdown","207c2173":"markdown","2d545953":"markdown","fc801caf":"markdown","eda78921":"markdown","22ef96f3":"markdown"},"source":{"fee9ac7d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","71db0958":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","a4f788b7":"data = pd.read_csv(\"..\/input\/tmnist-typeface-mnist\/TMNIST_Data.csv\")\ndata.head()","da32734f":"data.info()","090c4981":"data.describe()","700d83cd":"print(data['names'].unique())","1e56445c":"data['names'].value_counts()","d6115c59":"len(data)","53c3b5d4":"X = data.drop({'labels','names'},axis=1)\ny = data[['labels']]","b77d90ff":"# Sample Set\nX.head()","0e5ad393":"# Labels\ny.head()","c78f3369":"X_images = X.values.reshape(-1,28,28)\nfig,axs = plt.subplots(3,3,figsize=(9,9))\nfor i in range(9):\n    r=i\/\/3\n    c=i%3\n    axs[r][c].set_xticks([])\n    axs[r][c].set_yticks([])\n    axs[r][c].imshow(X_images[i])\nplt.show()","eee407c2":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\ny_train = y_train.values.reshape((-1,))\ny_test = y_test.values.reshape((-1,))","4947d733":"print(f\"1. Length of X_train: {X_train.shape} \\n2. Length of X_test: {X_test.shape}\")","5bb849ee":"from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression(random_state=47, solver='sag')","01064679":"# Train the model\n\nmodel.fit(X_train, y_train)","ce4b05ef":"prediction = model.predict(X_test)","6e646cec":"from sklearn.metrics import accuracy_score\n\nprint(f\"Accuracy for Train: {accuracy_score(y_train, model.predict(X_train))}\")\nprint(f\"Accuracy for Test: {accuracy_score(y_test, prediction)}\")","affea422":"from sklearn.metrics import confusion_matrix\n\nconfusion_matrix(y_test, prediction)","819f71fe":"# Dataset\nTMNIST: A database of Typeface based digits\nThis dataset is inspired by the MNIST database for handwritten digits. It consists of images representing digits from 0-9 produced using 2,990 google fonts files. \nThe dataset consists of a single file:\nTMNIST_Data.csv\nThis file consists of 29,900 examples with labels and font names. Each row contains 786 elements: the first element represents the font name (ex-Chivo-Italic, Sen-Bold), the second element represents the label (a number from 0-9) and the remaining 784 elements represent the grayscale pixel values (from 0-255) for the 28x28 pixel image.","7c5afe73":"# Import the TMNIST CSV File","207c2173":"# Import Libraries","2d545953":"# Train Test Dataset Split","fc801caf":"# Split Sample set and Label","eda78921":"# Logistic Classification","22ef96f3":"# Sample Images"}}