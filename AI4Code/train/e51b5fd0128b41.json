{"cell_type":{"7fd1b033":"code","862cda1d":"code","417179d9":"code","7b4a896b":"code","86ae5ecb":"code","0bd8498b":"code","e891e310":"code","9784c421":"code","c2eac5c4":"code","6086cd39":"code","24a29756":"code","726f54f5":"code","605815c7":"code","161e932c":"code","ca382c54":"code","5b62f428":"code","0dbf6eff":"code","94917fd0":"code","5cb68710":"code","33671940":"code","0aa04dd9":"code","aab85adb":"code","9113c7b3":"code","1a7a5a4a":"code","78a4a950":"code","9cf478f3":"code","5ec525dd":"code","dba020ad":"code","7fab1000":"markdown","1b825426":"markdown","151afc6e":"markdown","f480bc3c":"markdown","fbc6204e":"markdown","3fa25894":"markdown","19fa3d34":"markdown","4402db41":"markdown","7781d34b":"markdown","244f06c5":"markdown","63c0c9f4":"markdown","637811c0":"markdown","0d91633d":"markdown","e4d1fc4a":"markdown","1f54ec65":"markdown","3a91d3c0":"markdown","8f28e3e6":"markdown","6279c1bc":"markdown","1e5cb9e0":"markdown","a96366ea":"markdown","633e0b01":"markdown"},"source":{"7fd1b033":"!pip install xlrd openpyxl","862cda1d":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nimport numpy as np\nfrom scipy import stats as st\nimport math","417179d9":"#location of dataset\ndataset = '\/kaggle\/input\/cosmetics-inc\/Cosmetics-Inc-Data.csv'","7b4a896b":"# reading the dataset into dataframe\ndf = pd.read_csv(dataset)","86ae5ecb":"#sampling the data\nprint(df.head())","0bd8498b":"#number of rows and coulmns in dataset\nprint(df.shape)","e891e310":"#dataset information\nprint(df.info())","9784c421":"# removing the $ sign and converting the type to float\ndf['Price'] = df['Price'].str.replace('$','').astype(float)","c2eac5c4":"# removing the $ and , signs and converting the type to float\ndf['Total'] = df['Total'].str.replace('$','')\ndf['Total'] = df['Total'].str.replace(',','').astype(float)","6086cd39":"# converting the type to object\ndf['Product ID 1'] = df['Product ID 1'].astype(object)","24a29756":"# method to extract codes and remove the extra digits\ndef remove_digit(x):\n  return x[:5]","726f54f5":"# correcting clients codes\ndf['Client Code'] = df['Client Code'].apply(remove_digit)","605815c7":"# replacing space with underscore in column names\ndf.columns = df.columns.str.replace(\" \", \"_\")","161e932c":"#drop not needed columns\ndf = df.drop(['Product_Codes'], axis=1)","ca382c54":"num_cols = df.select_dtypes('number').columns.tolist()","5b62f428":"cat_cols = df.select_dtypes('object').columns.tolist()","0dbf6eff":"# Summary Statistics for Numerical columns\nprint(df.describe())","94917fd0":"# Summary Statistics for Categorical columns\nprint(df[cat_cols].describe().T)","5cb68710":"#distribution of items price\ndf['Price'].hist(bins=5)","33671940":"#correlation between orders and total sales\nx = df['Orders']\ny = df['Total']\nplt.scatter(x,y)\nplt.xlabel('Orders')\nplt.ylabel('Total');","0aa04dd9":"#number of stores in each state\nsns.countplot(data=df, x='Store_State',order=df['Store_State'].value_counts().index);","aab85adb":"# distribution of orders for each state\nsns.boxplot(y=df['Store_State'], x=df['Total'],order=df['Store_State'].value_counts().index);","9113c7b3":"#Converting categorical variables to dummies\ndf2 = pd.get_dummies(df, columns=cat_cols, drop_first=True)","1a7a5a4a":"print(df2.head())","78a4a950":"#Pair plot of features\nsns.pairplot(df2[num_cols], plot_kws=dict(alpha=.1, edgecolor='none'));","9cf478f3":"#heatmap of features\nsns.heatmap(df2[num_cols]);","5ec525dd":"#Hypothesis 3 will be tested\n#A naive way of checking the hypothesis\nsum_sales = df.groupby(['Store_State'])['Total'].sum().reset_index()\nsum_sales = sum_sales.sort_values('Total', ascending=False)\nplt.bar(sum_sales['Store_State'],sum_sales['Total'])\nplt.ylabel(\"Survival Rate\")\nplt.title(\"Survival Rate for people in the first and third classes\")\nplt.show();","dba020ad":"#testing the hypothesis\nsignificance_level = 0.05\nSC_Sample = np.array([np.mean(df[df[\"Store_State\"]=='SC'].sample(3)[\"Total\"].values) for i in range(2)])\nMD_Sample = np.array([np.mean(df[df[\"Store_State\"]=='MD'].sample(3)[\"Total\"].values) for i in range(2)])\neffect = np.mean(SC_Sample) - np.mean(MD_Sample)\nsigma_first = np.std(SC_Sample)\nsigma_third = np.std(MD_Sample)\nsigma_difference = np.sqrt((sigma_first**2)\/len(SC_Sample)  +  (sigma_third**2)\/len(MD_Sample))\nz_score = effect \/ sigma_difference\npvalue = st.norm.sf(abs(z_score))*2\ncompare = pvalue < significance_level\nprint(f\"The comparasion if the p-value is smaller than the significance level is {compare}\")","7fab1000":"General information about the dataset","1b825426":"**Key Findings and Insights, which synthesizes the results of Exploratory Data Analysis in an insightful and actionable manner**","151afc6e":"**A paragraph that summarizes the quality of this data set and a request for additional data if needed**","f480bc3c":"### Determining the Null and Alternative Hypothesis 3\n**Null:** Most profitable Orders from SC state\n\n**Alternative:** Most profitable orders from MD state\n","fbc6204e":"Visual Exploration of Categorical columns","3fa25894":"Visual Exploration of Numerical Columns","19fa3d34":"**Suggestions for next steps in analyzing this data**","4402db41":"Data Cleaning Operations","7781d34b":"### Determining the Null and Alternative Hypothesis 1\n\n**Null:** the price median is 12\n\n**Alternative:** the price median is more than 12","244f06c5":"**Initial plan for data exploration**","63c0c9f4":"### Determining the Null and Alternative Hypothesis 2\n**Null:** the state with highest number of stores in SC\n\n**Alternative:** the state with highest number of stores in not SC\n","637811c0":"Features Encoding","0d91633d":"Classifying columns as Numerical or Categorical","e4d1fc4a":"no further suggestions","1f54ec65":"The conclusion is that the provided samples proves the sales from MD state is more profitable than the sales from SC state","3a91d3c0":"**Formulating at least 3 hypothesis about this data**","8f28e3e6":"the dataset have been cleaned and examined and transformed into machine learning ready format\n\nno request for additional data","6279c1bc":"Data Description\n\n| S No. | Column | Description| Data Type |\n| --- | --- | --- | --- |\n|1 | Product Codes | Combination of the products purchased by client | Object |\n|2 | Price | price for unit of purchased items | Object |\n|3 | Client | Client Name | Object |\n|4 |Client Code | Unique Identifier for the client | Object |\n|5 | Orders | Number of orders in the purchase | int |\n|6 | Total | Total amount of the purchase | int |\n|7 | Product ID 1 | Unique Identifier for first purchased item | Object |\n|8 | Product ID 2 | Unique Identifier for second purchased item | Object |\n|9 | Store State | The state where the purchase took place | Object |","1e5cb9e0":"**Actions taken for data cleaning and feature engineering**","a96366ea":"Summary Statistics for the dataset","633e0b01":"**Conducting a formal significance test for one of the hypotheses and discuss the results**\n\n"}}