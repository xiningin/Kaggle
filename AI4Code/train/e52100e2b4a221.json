{"cell_type":{"e43822bb":"code","fd02daff":"code","103e7f1a":"code","fb761f3a":"code","9b3c8dc2":"code","0131ca5b":"code","8edf0a9a":"code","7b04a5fb":"code","1cd4914e":"markdown","4a555f95":"markdown","f10c4e6e":"markdown","9d96a9a7":"markdown","f5d88585":"markdown","94b35fbf":"markdown","99563fac":"markdown"},"source":{"e43822bb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # data visualization\nimport seaborn as sns #data visualization\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fd02daff":"df = pd.read_csv(\"\/kaggle\/input\/bitcoin-historical-data\/bitstampUSD_1-min_data_2012-01-01_to_2020-04-22.csv\")\ndf.head()","103e7f1a":"df.rename(columns={\"Volume_(BTC)\": \"Volume_BTC\", \"Volume_(Currency)\" : \"Volume_Currency\"}, \n                 inplace=True)\nprint(df.columns)","fb761f3a":"df.Weighted_Price.plot(kind = 'line', color = 'g', label = 'Weighted_Price',linewidth = 1,figsize = (16,6), alpha = 0.5, grid = True, linestyle = ':')\nplt.ylabel(\"Weighted Price($)\")\nplt.show()","9b3c8dc2":"df.corr()","0131ca5b":"#set the width and heigth of the figure\nplt.subplots(figsize=(11,11))\nplt.title(\"Bitcoin Dataset Correlation Heatmap\")\n\nsns.heatmap(df.corr(), annot = True, linewidths = 1, fmt = '.1f')\nplt.show()\n","8edf0a9a":"df.plot(kind='scatter', x='Open', y='Close',alpha = 0.5,color = 'purple')\nplt.xlabel(\"Open\")  \nplt.ylabel(\"Close\")\nplt.show()","7b04a5fb":"df.Weighted_Price.plot(kind = 'hist', bins = 90, figsize = (20, 20), color = 'grey')\nplt.show()","1cd4914e":"Bitcoin dataset correlation heatmap","4a555f95":"Firstly let's take look first five data in dataset","f10c4e6e":"Name changing for column names without special characters","9d96a9a7":"'Open' and 'Close' are in direct proportion","f5d88585":"Correlation table ","94b35fbf":"Then this is the weighted price historgram graph","99563fac":"Here is weighted price graph for bitcoin but I couldn't set the y axis by year. If you know something about that please let me know ^^"}}