{"cell_type":{"7fbbd101":"code","5e1fb75e":"code","b76f56aa":"code","7e826f1d":"code","a51db255":"code","75ef3d2f":"code","41d362da":"code","9060a4ac":"code","cf0b720a":"code","8cfc81e6":"code","e0c45e5f":"code","526cc65e":"code","638bf4a7":"code","b82339b5":"code","fac70b6a":"code","d44532bb":"code","5f99317f":"code","faaf2a7b":"code","7dd04535":"markdown","f5ed72da":"markdown","783b59c7":"markdown","d66bd7e5":"markdown","57141918":"markdown","cab74041":"markdown","f1ece59a":"markdown","6cb93706":"markdown","9c10376a":"markdown","f7c741fe":"markdown","516be1b6":"markdown","afb334b6":"markdown","927b8843":"markdown"},"source":{"7fbbd101":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5e1fb75e":"import pandas as pd\nimport numpy as np","b76f56aa":"burrow = pd.read_csv('\/kaggle\/input\/collegefb\/bur.csv')\ntua = pd.read_csv('\/kaggle\/input\/collegefb\/tua.csv')\nhurts = pd.read_csv('\/kaggle\/input\/collegefb\/jalen.csv')\nherbert = pd.read_csv('\/kaggle\/input\/collegefb\/herbert.csv')","7e826f1d":"burrow = burrow.dropna()\nherbert = herbert.iloc[0:4]","a51db255":"burrow['name'] = 'burrow'\ntua['name'] = 'tua'\nhurts['name'] = 'hurts'\nherbert['name'] = 'herbert'","75ef3d2f":"all_rookies = pd.concat([burrow, tua, hurts, herbert], axis=0)\n\nagg_stats = all_rookies.groupby('name').agg(\n            {'Att' : ['sum'], \n             'Yds' : ['sum'], \n             'Cmp' : ['sum'],\n             'TD' : ['sum'],\n             'Int' : ['sum']\n            })\n\nagg_stats['YPA'] = agg_stats['Yds']\/agg_stats['Att']\nagg_stats","41d362da":"td = np.random.beta(78, 945, size=10000)\nyds = np.random.normal(9.36, 3, size =10000)\nintr = np.random.beta(11, 945, size=10000)\ncmp = np.random.beta(650, 945, size=10000)","9060a4ac":"import warnings\n\nwarnings.filterwarnings('ignore')\nwarnings.simplefilter('ignore')","cf0b720a":"import seaborn as sns\nimport  matplotlib.pyplot as plt\n\nf, axes = plt.subplots(2, 2, figsize=(7, 7), sharex=False)\n\nsns.despine(left=True)\n\nsns.distplot(td, color=\"b\", ax=axes[0, 0]).set_title(\"TD Rate Prior\")\nsns.distplot(yds, color=\"m\", ax=axes[0, 1]).set_title(\"YPA Prior\")\nsns.distplot(intr, color=\"r\", ax=axes[1, 0]).set_title(\"Int Rate Prior\")\nsns.distplot(cmp, color=\"g\", ax=axes[1, 1]).set_title(\"Cmp% Prior\")\n\nplt.setp(axes, yticks=[])\nplt.tight_layout()","8cfc81e6":"td_nfl = np.random.binomial(404, 13\/404, size=1000)\nyds_nfl = np.random.normal(6.65, 4.5, size =1000)\nintr_nfl = np.random.binomial(404, 5\/404, size=1000)\ncmp_nfl = np.random.binomial(404, 264\/404, size=1000)","e0c45e5f":"f, axes = plt.subplots(2, 2, figsize=(7, 7), sharex=False)\n\nsns.despine(left=True)\n\nsns.distplot(td_nfl, color=\"b\", ax=axes[0, 0]).set_title(\"TD Rate Likelihood\")\nsns.distplot(yds_nfl, color=\"m\", ax=axes[0, 1]).set_title(\"YPA Likelihood\")\nsns.distplot(intr_nfl, color=\"r\", ax=axes[1, 0]).set_title(\"Int Rate Likelihood\")\nsns.distplot(cmp_nfl, color=\"g\", ax=axes[1, 1]).set_title(\"Cmp% Likelihood\")\n\nplt.setp(axes, yticks=[])\nplt.tight_layout()","526cc65e":"import pymc3 as pm","638bf4a7":"def run_model(a,b,c,d):\n\n    model = pm.Model()\n\n    with model:\n        params = pm.Beta('param_of_interest', a, b)\n        observed = pm.Binomial('observed', c, d,observed=True) \n        trace = pm.sample(1000, return_inferencedata=False)\n        \n        plot = pm.plot_posterior(trace)\n        \n    return plot","b82339b5":"run_model(6,100,404,13\/404)","fac70b6a":"####int###\nrun_model(1.9,100,404,5\/404)","d44532bb":"def run_model2(a,b,c,d):\n\n    model = pm.Model()\n\n    with model:\n        params = pm.Normal('param_of_interest', a, b)\n        observed = pm.Normal('observed', c, d,observed=True) \n        trace = pm.sample(1000, return_inferencedata=False)\n        \n        plot = pm.plot_posterior(trace)\n        \n    return plot","5f99317f":"run_model2(7.02,3,6.7,3)","faaf2a7b":"d = {'QB': ['Burrow', 'Herbert', 'Hurts', 'Tua'], \n     'Projected TDs': [30, 28, 29, 37],\n     'Projected Ints': [10, 16, 17, 13],\n     'Projected Yards': [3900, 3410, 3685, 4450]\n    }\n\ndf = pd.DataFrame(data=d)\n\ndf","7dd04535":"Out of his posterior samples, the average td rate is 0.056. Joe Burrow had a 0.032 td rate last season. For next season we might predict a td rate between (0.018, 0.09) - this is our 95% credible interval (the bayesian version of a confidence interval). Let's take the posterior sample average of 0.056, our prediction (let's say Burrow throws 550 passes) is that Burrow will throw 30.8 passes. \n\nNote: Burrow got hurt last season, but had he finished the year, he probably would have thrown close to 20 TDs. ","f5ed72da":"Now let's visualize the associated likelihood distributions which will be the biominal distribution for cmp, td_rate, int_rate and will be normal for YPA. Again, this is just for Joe Burrow's 2020 NFL season. I took these numbers from: https:\/\/www.espn.com\/nfl\/player\/_\/id\/3915511\/joe-burrow.","783b59c7":"Remember, I'm using 550 attempts to project the rate statistics forward (Herbert threw close to 600 passes last season). As you can see, based on really strong college statistics, Tua is projected for a huge season. Likewise, the projection is pretty soft on Herbert, and considers him very similar to Hurts (their numbers is college or almost identitical- Hurts won out by a small edge). And like we saw before, Burrow is projected to have a good second year.","d66bd7e5":"Let's visualize the prior distributions for Joe Burrow. For td, int & cmp (again, what these distributions really show are are td_rate, int_rate, i.e #ofTDs\/#ofATT) I used a beta distribution which is good for approximating percentages and numbers between 0,1. For YPA (yards per attempt) I used a normal distribution (beta distribution is confined between 0,1 and YPA is usually somewhere between 6 - 12) ","57141918":"a,b will represent the \"75th percent\" college stats (as a rate, i.e td_rate = #TD\/#Att) and c,d are stats from the 2020 season as referenced above. So any value found as the 'a' parameter can be found by just multiplying ).7 (or 1.7 in the case of interceptions) by the numbers found in the prior distributions. ","cab74041":"Finally, we can now determine the posterior distribution for each player (I'll show you the results for Joe Burrow and summarize the rest). I'll make an approximation and say that roughly 75% of the player's college statistics will translate to the NFL (call it my strength of competition adjustment).","f1ece59a":"If you know anything about bayesian inference, the idea is to update your prior beliefs (in our case, our college data) with a likelihood distribution (this will their stats from the 2020 NFL season). The resulting distribution (postior distribution) will give us our 2021 season projections. I refer you to http:\/\/varianceexplained.org\/r\/empirical_bayes_baseball\/ and https:\/\/github.com\/CamDavidsonPilon\/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers for 2 great resources for explanations.","6cb93706":"Our model projects Burrow to throw about 3900 yards on 550 pass attempts. ","9c10376a":"Similarly, we might project Burrow to throw 10 picks over 550 Attempts next year. I'll have to change the run_model function to project the YPA (yards per attempt). ","f7c741fe":"The 4 rookie QBs who played a meaningful number of stats last season were: Joe Burrow, Jalen Hurts, Justin Herbert and Tua Tagovailoa. The following dataframes contain all their college stats.","516be1b6":"I'm finding aggregates from their college careers to summarize what they did on average (hence- I'm not puting on more weight on more recent seasons unfortunately). I'll use this info as my 'prior', which represents my belief about how well they'll do in the future. ","afb334b6":"The results for the other players are summarized below:","927b8843":"In this notebook, I'm taking data from https:\/\/www.sports-reference.com\/cfb\/players\/tua-tagovailoa-1.html to compare how last years rookie QB's class did compared to what they did in college. I'll use bayesian methods to project their stats for the 2021 NFL season based on their statistics from the 2020 season, and information about their college careers. "}}