{"cell_type":{"4490bc8d":"code","6ae932c6":"code","78677b7d":"code","4e05a5f8":"code","fc1af816":"code","869b8eb8":"code","6e78fa05":"markdown","338b7259":"markdown"},"source":{"4490bc8d":"# IMPORTS\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os","6ae932c6":"# Load Submission files\nsubmission_1 = pd.read_csv(\"..\/input\/submission-v3\/submission_1000_iter.csv\")\nsubmission_2 = pd.read_csv(\"..\/input\/submission-peter\/submission_peter.csv\")\nsubmission_3 = pd.read_csv(\"..\/input\/score-by-confidence\/submission_new.csv\")","78677b7d":"# Utility Scripts\n\ndef load_submission(mode=\"multi\"):\n    \"\"\"Returns submission file for corresponding mode viz multi-mode and single mode\"\"\"\n    if mode==\"multi\":\n        return pd.read_csv(\"..\/input\/lyft-motion-prediction-autonomous-vehicles\/multi_mode_sample_submission.csv\")\n    else:\n        return pd.read_csv(\"..\/input\/lyft-motion-prediction-autonomous-vehicles\/single_mode_sample_submission.csv\")\n\ndef generate_submission(base_submission, coefs, submissions=None):\n    \"\"\"Updates base_submission to the new predictions\"\"\"\n    \n    # Getting Columns\n    cols = list(base_submission.columns)\n    \n    # Getting Coefficients and column indices\n    # for predictions of different models\n    coords = []\n    coff = cols[2:5]\n    cords1 = cols[5: 105]\n    coords.append(cols[5: 105])\n    coords.append(cols[105: 205])\n    coords.append(cols[205:305])\n\n    assert submissions != None , \"At least one submission file should be provided\"\n    \n    # Updating columns for corresponding submission file.\n    # Note that even if you provide more than three submission files,\n    # only the first three would be selected as size of coords is 3.\n    print(\"Ensembling predictions...\")\n    for cord, each in zip(coords, submissions):\n        base_submission[cord] = each[cords1]\n    print(\"Ensembling done...\")\n    \n    # Updating the coefs \n    assert len(coefs) == 3, \"Length of coefs must be exactly three\"\n    assert sum(coefs) == 1, \"Sum of coefs must be exactly one\"\n    \n    base_submission[coff] = coefs\n    \n    return base_submission","4e05a5f8":"sample_submission = load_submission(mode=\"multi\")\n\nsubmission = generate_submission(sample_submission, [0.2 ,0.1, 0.7], \n                                 [submission_1, submission_2, submission_3])","fc1af816":"submission.head()","869b8eb8":"submission.to_csv(\"submission.csv\", index=False, float_format=\"%.6g\")","6e78fa05":"**I've ensembled the predictions from Peter's as well as Paulo Pinto's csv files along with the predictions from the model that I trained. You could look over my model's training process [here](https:\/\/www.kaggle.com\/forwet\/lyft-efficientnet-model-train).**","338b7259":"**This notebook is based on ensembling of the predictions. I've tried to make things easier by implementing functions for the ensembling task.**\n\n**You could run the notebook for either of the modes of submission viz multi-mode or single-mode.**"}}