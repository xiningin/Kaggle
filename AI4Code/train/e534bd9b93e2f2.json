{"cell_type":{"9fe002d5":"code","c6ce332e":"code","c676a58b":"code","217c0123":"code","af4ad838":"code","1d507b0e":"code","d2360afc":"code","d049c24d":"code","38e61892":"code","1e0f2e65":"code","b13618dd":"code","0f5f00cf":"code","f194dfaf":"code","d6ec2bab":"code","403f1f20":"code","d7d91b01":"code","f115af95":"code","25d7bd01":"code","13c1bbd9":"code","c2114b64":"code","cbba4676":"code","c041b281":"code","e47c0b96":"code","4ec35df2":"code","3f0e6028":"code","f1c37114":"code","2a2fe0e1":"code","b25d84c9":"code","f469cbee":"code","37d874fa":"code","0e0956be":"code","6f7b3bb1":"code","4fbdad4c":"code","3af5e912":"code","b448b1be":"code","e16bccc9":"code","c02e956e":"code","3c3c9182":"code","dcf05cc6":"code","0834d79f":"code","b84680c4":"code","5cb996bc":"code","17f3d90b":"code","7455c8a2":"code","34bc9a6d":"code","2f2c013e":"code","32791160":"code","88c8e297":"markdown","46aea594":"markdown","c3a64797":"markdown","18c979d6":"markdown","32e62ced":"markdown","36880d7b":"markdown","3e777236":"markdown","daacf7f4":"markdown","baf38b36":"markdown","769bd8c7":"markdown","3b883245":"markdown","3fd172dc":"markdown","265bd5a3":"markdown","244e1557":"markdown","ad0c01ce":"markdown","470c8cc8":"markdown","6a04cf54":"markdown","179bef74":"markdown","edc80918":"markdown","19f240a3":"markdown","885c2cda":"markdown","54d0117b":"markdown","1bef536d":"markdown","3bd8441a":"markdown","826a13c1":"markdown"},"source":{"9fe002d5":"! pip install ModelAuto","c6ce332e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport ModelAuto as ma\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c676a58b":"Life_Expectancy_Data = pd.read_csv(\"\/kaggle\/input\/life-expectancy-who\/Life Expectancy Data.csv\")\ndata = Life_Expectancy_Data.copy()\n","217c0123":"data.head(10)","af4ad838":"data.info()","1d507b0e":"data.isna().sum()","d2360afc":"#We can see nan in tht target variable itself , lets analyse that\ndata['Life expectancy '].isna().sum()","d049c24d":"nan_country_names = data[data['Life expectancy '].isna()]['Country']\nnan_country_names.value_counts()","38e61892":"[data[data['Country']==cou] for cou in nan_country_names]","1e0f2e65":"ind_to_romove = [data[data['Country']==cou].index[0] for cou in nan_country_names]\ndata = data.drop(ind_to_romove,axis=0).reset_index(drop=True)","b13618dd":"data.head()","0f5f00cf":"country_list = data.Country.unique()\nfill_list = data.columns[3:]#['Life_Expectancy','Adult_Mortality','Alcohol','HepatitisB','BMI','Polio','Tot_Exp','Diphtheria','GDP','Population','thinness_1to19_years','thinness_5to9_years','Income_Comp_Of_Resources','Schooling']","f194dfaf":"country_list = data.Country.unique()\nfor feat in fill_list:\n    new = []\n    i=0\n    for i in range(len(data[feat])):\n        val = data[feat].iloc[i]\n        if pd.isna(val):\n            cou = data[data.index==i].Country.values[0]\n            mead = data[data.Country == cou][feat].median()\n            if pd.isna(mead):\n                mead = data[feat].median() \n            data[feat].iloc[i] = mead\n           ","d6ec2bab":"data.isna().sum()","403f1f20":"col_dict = {data.columns[3+i]:i+1 for i in range(len(data.columns[3:])) }\ncol_dict","d7d91b01":"plt.figure(figsize=(20,30))\n\nfor variable,i in col_dict.items():\n                     plt.subplot(5,4,i)\n                     plt.boxplot(data[variable],whis=1.5)\n                     plt.title(variable)\n\nplt.show()","f115af95":"fig,axe = plt.subplots(len(col_dict),2,figsize=(15,80))\nc = 0\nfor variable in col_dict.keys():\n    q75, q25 = np.percentile(data[variable], [75 ,25])\n    iqr = q75 - q25\n    min_val = q25 - (iqr*1.5)\n    max_val = q75 + (iqr*1.5)\n    lmax = len(data[data[variable]>max_val])\n    lmin = len(data[data[variable]<min_val])\n    sns.scatterplot(ax=axe[c][0],x=data['Life expectancy '],y=data[variable],color='blue',label='normal')\n        \n    if lmin!=0:\n        sns.scatterplot(ax=axe[c][1],x=data[data[variable]>min_val]['Life expectancy '],y=data[data[variable]>min_val][variable],color='blue',label='normal')\n        sns.scatterplot(ax=axe[c][1],x=data[data[variable]<=min_val]['Life expectancy '],y=data[data[variable]<=min_val][variable],color='red',label='outlier')\n    if lmax !=0:\n        sns.scatterplot(ax=axe[c][1],x=data[data[variable]<max_val]['Life expectancy '],y=data[data[variable]<max_val][variable],color='blue',label='normal')\n        sns.scatterplot(ax=axe[c][1],x=data[data[variable]>=max_val]['Life expectancy '],y=data[data[variable]>=max_val][variable],color='red',label='outlier')\n    plt.legend()\n    c=c+1","25d7bd01":"d3 = data.copy()","13c1bbd9":"def fun(x,min_val,max_val):\n    if x<min_val:\n        return min_val\n    elif x>max_val:\n        return max_val\n    else:\n        return x\n\nfor variable in col_dict.keys():\n    q75, q25 = np.percentile(data[variable], [75 ,25])\n    iqr = q75 - q25\n    min_val = q25 - (iqr*1.5)\n    max_val = q75 + (iqr*1.5)\n    data[variable] = data[variable].apply(lambda x:fun(x,min_val,max_val))","c2114b64":"# Calculating Avg Life Expect.. Per Year\navg_life = [data[data['Year']==year]['Life expectancy '].mean() for year in data.Year.value_counts().keys()]","cbba4676":"fig = plt.figure(figsize=(10,5))\nsns.scatterplot(list(data.Year.value_counts().keys()),avg_life)\nsns.lineplot(list(data.Year.value_counts().keys()),avg_life)\nplt.ylabel('Avg Life Expectency')\nplt.xlabel('Years')\nplt.title('Trend for Life Expectency wrt Year')","c041b281":"sns.barplot(x=data.Status,y=data['Life expectancy '])","e47c0b96":"X = list(data.Country.value_counts().keys())#[:20]\navg_life_country = [data[data['Country']==year]['Life expectancy '].max() for year in X]","4ec35df2":"fig = plt.figure(figsize=(20,8))\nsns.barplot(X[:5],y=avg_life_country[:5])","3f0e6028":"data[data['Status']=='Developed']['Life expectancy '].var()","f1c37114":"fig = plt.figure(figsize=(25,10))\nsns.barplot(data=data[data['Status']=='Developed'],x='Country',y='Life expectancy ')\nplt.title('Variance in Life Expectency of Devloped Countries',fontdict={'fontsize':30})","2a2fe0e1":"data[data['Status']=='Developing']['Life expectancy '].var()","b25d84c9":"developing = data[data['Status']=='Developing']\nfig = plt.figure(figsize=(25,10))\nsns.barplot(data=developing,x='Country',y='Life expectancy ')\nplt.title('Variance in Life Expectency of Devloping Countries',fontdict={'fontsize':30})","f469cbee":"fig = plt.figure(figsize=(10,5))\nsns.lineplot(data=data,x='Year',y='Adult Mortality',label = 'Adult Mortality')\nsns.lineplot(data=data,x='Year',y='infant deaths',label = 'Infant Deaths')\nsns.lineplot(data=data,x='Year',y='Life expectancy ',label = 'Life expectancy ')\nplt.legend()","37d874fa":"data.columns","0e0956be":"sns.pairplot(data.iloc[3:])","6f7b3bb1":"ma.FeatureSelection.Draw_Corr_map(data.iloc[:,3:],target_index=0)","4fbdad4c":"feat = ma.FeatureSelection.Corrilation_selection(data.iloc[:,3:],target_index=0,Minimum_Corr=0.4)","3af5e912":"data.iloc[:,3:].shape","b448b1be":"# Concatinating Numerical Features with Catagorical Features\ndata3 = pd.concat([data.iloc[:,:3],feat],axis = 1)","e16bccc9":"data3.head()","c02e956e":"data2 = pd.concat([data.iloc[:,:3],feat],axis = 1)","3c3c9182":"data2 = ma.handel_standardization(data2)\ndata2 = ma.handel_Catagorical(data2)","dcf05cc6":"data2.head()","0834d79f":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score","b84680c4":"Y = data['Life expectancy ']\nX_train, X_test, y_train, y_test = train_test_split(data2, Y, test_size=0.30)","5cb996bc":"Linear_model= LinearRegression()\nLinear_model.fit(X_train,y_train)\npred = Linear_model.predict(X_test)","17f3d90b":"linReg_on_train = Linear_model.score(X_train,y_train)\nlinReg_on_test = r2_score(pred,y_test)","7455c8a2":"rfc = RandomForestRegressor()\nrfc.fit(X_train,y_train)","34bc9a6d":"Train_score_RandForest = rfc.score(X_train,y_train)\nTest_score_RandForest = rfc.score(X_test,y_test)","2f2c013e":"round(Train_score_RandForest*100),round(Test_score_RandForest*100)","32791160":"round(linReg_on_train*100),round(linReg_on_test*100)","88c8e297":"### So out of 19 Numerical Features we are have selected 14 Features","46aea594":"# OutLiers","c3a64797":"## Random Forest","18c979d6":"## Let's see how are the Numerical Columns related with Life Expectancy","32e62ced":"## Relationship of Status with Life Expectancy","36880d7b":"## Relationship of Country with Life Expectancy (Latest Life Expectency)","3e777236":"#### Filling the NaN values with the Median taken from data points of there respective countries","daacf7f4":"<strong>It is quite clear that with years Mortality and Infant Deaths Reduces and <br> hence these explaines why Life expectancy increases with time <\/strong>","baf38b36":"Analysing NaN values","769bd8c7":"# EDA","3b883245":"#### Variation in Life Expectancy of Devloping Countries","3fd172dc":"### Spliting the data","265bd5a3":"#### Let's plot the frap to analyse the outliers in detail","244e1557":"### Lets Choose all the Features having Corelation above 0.4","ad0c01ce":"<h1>\n    1. Accuracy(approx) on Train data : Random Forest 99, Linear Regresion 96<br>\n    2. Accuracy(approx) on Test data : Random Forest 95, Linear Regresion 95\n\n<\/h1>","470c8cc8":"#### Removing Outliers","6a04cf54":"Let's see the countries Whose Life Expectancy is not given","179bef74":"## The Above Observation Shows a clear Signs of Overfitting in Random Forest hence we have selected **Linear Regresion Model** as our Final Model","edc80918":"## Linear Regression Model","19f240a3":"#### Variation in Life Expectancy of Devloped Countries","885c2cda":"As we can see that Only one data point or row is present for these countries and that too with lots of Nan in them hence it would be safe to remove these Features","54d0117b":"#### Variance : 15.45","1bef536d":"#### So we can see a very natural conclusion that with the increase in Medical Science avg lie expectancy also increases","3bd8441a":"## Relationship between Life Expectancy and Mortality, Infant Death","826a13c1":"<h3>\nFrom the above graphs It is quite clear that <br>\nFor <strong> Devloped Countries <\/strong> the <strong> Variance is quite low <\/strong>,<br> But\nsince there is <strong> a large variance <\/strong> in <strong> Devloping countries <br>\n<\/strong> we cannot Perform Binning on these features.\n<\/h3>"}}