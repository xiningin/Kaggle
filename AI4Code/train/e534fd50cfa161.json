{"cell_type":{"c69f60fc":"code","ff33fd30":"code","d81f122c":"code","5eb0d271":"code","aec54c74":"code","36187e0a":"code","c280ab8e":"code","002c8f29":"code","7c969918":"code","f9bf8c4d":"code","79433e3a":"code","57c2f8e2":"code","4f8315bb":"code","06a78fb6":"code","a9bf5f1a":"code","263cd38c":"code","c7e90aca":"code","b89b6a2c":"code","4fce0147":"code","b1186f7d":"code","88ca2372":"code","e844ad16":"code","04035d1c":"code","1193d033":"code","be28ee5d":"code","e6f14023":"code","38df4210":"code","4b6808f8":"code","94f79dfd":"code","3f3a7c62":"code","69e6a3b7":"code","dfe58689":"code","919544a3":"code","5cdf277d":"code","73ed3332":"code","d9981b2a":"code","d7bd34a6":"code","86b73b72":"code","7b0404f0":"code","beb67c80":"code","81f4a811":"code","246f7be8":"code","db29601e":"code","6449af79":"code","6062b8b0":"code","85256f2a":"code","ec82a3d0":"code","6bf0ef22":"code","1f834212":"code","ec195182":"code","4f66b6c2":"code","b4ef0bba":"code","7dec052a":"code","584ed4c6":"code","0647fd93":"code","2f13b14f":"code","2da0f734":"code","833e8bbf":"code","c9cefcbe":"code","6f43ddb3":"code","c543b64b":"code","cccefb52":"code","8bab2b40":"code","9c657380":"code","9a289217":"code","2755c984":"code","d23aa042":"code","346100f0":"code","5999ccfa":"code","d61413c5":"code","eef8c7e6":"code","42201854":"code","b4942129":"code","e08dc554":"code","9400c38d":"code","0183f4f3":"code","4b8a572d":"code","883ae2a6":"markdown","a8fe1d38":"markdown","2cc77fd2":"markdown","dcd9d534":"markdown","7832f1f8":"markdown","214bbd73":"markdown","04b8f43c":"markdown","b33c9717":"markdown"},"source":{"c69f60fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ff33fd30":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","d81f122c":"train=pd.read_csv('..\/input\/titanic\/train.csv') # reading train data\ntest=pd.read_csv('..\/input\/titanic\/test.csv') # reading test data\ntrain","5eb0d271":"train.head() # to print first 5 rows of the data set","aec54c74":"train.shape # to print number of rows and columns","36187e0a":"train.columns # to get the column names","c280ab8e":"train.describe() ","002c8f29":"train.isnull().sum() # number of null values in dataset","7c969918":"test.shape","f9bf8c4d":"test.head()","79433e3a":"test.isnull().sum()","57c2f8e2":"train.Sex.value_counts()","4f8315bb":"train.groupby('Sex').Survived.value_counts()","06a78fb6":"sns.barplot(x='Sex', y='Survived', data=train)","a9bf5f1a":"train['Embarked'].value_counts()","263cd38c":"train.groupby('Embarked').Survived.value_counts()","c7e90aca":"sns.countplot(x='Embarked', data=train)","b89b6a2c":"train['Pclass'].value_counts()","4fce0147":"sns.countplot(x='Pclass', data=train)","b1186f7d":"train['SibSp'].value_counts()","88ca2372":"train.groupby('SibSp').Survived.value_counts()","e844ad16":"sns.countplot(x='SibSp', data=train)","04035d1c":"sns.countplot(x='Survived',hue='Pclass',data=train) # survival based on passenger class","1193d033":"sns.distplot(train['Age'].dropna(),kde=False,bins=30)","be28ee5d":"sns.countplot(x='SibSp',data=train) # count based on sibling or spouse","e6f14023":"train['Fare'].hist(bins=40,figsize=(10,4))","38df4210":"sns.countplot(x='Parch',data=train)","4b6808f8":"train['Died'] = 1 - train['Survived']","94f79dfd":"train.groupby('Sex').agg('mean')[['Survived', 'Died']].plot(kind='bar', figsize=(10, 5),stacked=True)","3f3a7c62":"sns.barplot(x='Fare', y='Survived', data=train)","69e6a3b7":"sns.barplot(x='SibSp',y='Survived',data=train)","dfe58689":"titles=set()\nfor name in train['Name']:\n    titles.add(name.split(',')[1].split('.')[0].strip())\nprint(titles)","919544a3":"titles_dict={'Mrs':'Mrs','Major':'Other','Master':'Master','Lady':'Other','Mlle':'Miss','Dr':'Other','Col':'Other','Capt':'Other','Don':'Other','the Countess':'Other','Mme':'Mrs','Miss':'Miss','Jonkheer':'Other','Rev':'Other','Sir':'Other','Ms':'Miss','Mr':'Mr'}\n","5cdf277d":"train['Title'] = train['Name'].map(lambda name:name.split(',')[1].split('.')[0].strip())\ntrain['Title'] = train.Title.map(titles_dict)\ntrain.head()","73ed3332":"df1=train.drop(['Name','Ticket','Cabin','PassengerId','Died'], axis=1)\ndf1.head()","d9981b2a":"df1.Sex=df1.Sex.map({'female':0, 'male':1})\ndf1.Title=df1.Title.map({\"Mr\": 1, \"Miss\": 2, \"Mrs\": 3, \"Master\": 4, \"Other\": 5})\ndf1.Embarked=df1.Embarked.map({'S':0, 'C':1, 'Q':2,'nan':'NaN'})","d7bd34a6":"df1","86b73b72":"train.Title.value_counts()","7b0404f0":"mean_men=df1[df1['Sex']==0]['Age'].mean()\nmean_female=df1[df1['Sex']==1]['Age'].mean()","beb67c80":"df1.loc[(df1.Age.isnull())&(df1['Sex']==1),'Age']=mean_female\ndf1.loc[(df1.Age.isnull())&(df1['Sex']==0),'Age']=mean_men","81f4a811":"df1.dropna(inplace=True)","246f7be8":"df1.isnull().sum()","db29601e":"df1.Age=(df1.Age-min(df1.Age))\/(max(df1.Age)-min(df1.Age))\ndf1.Fare=(df1.Fare-min(df1.Fare))\/(max(df1.Fare)-min(df1.Fare))","6449af79":"df1.head()","6062b8b0":"from sklearn.model_selection import train_test_split","85256f2a":"x_train,x_test,y_train,y_test=train_test_split(df1.drop(['Survived'],axis=1),df1.Survived,test_size=0.25,random_state=0,stratify=df1.Survived)","ec82a3d0":"from sklearn.linear_model import LogisticRegression\nclf= LogisticRegression()\nclf.fit(x_train,y_train)","6bf0ef22":"from sklearn.metrics import accuracy_score\ny_pred= clf.predict(x_test)\naccuracy_score (y_test,y_pred)\n","1f834212":"from sklearn.metrics import confusion_matrix\nmatrix=confusion_matrix(y_test, y_pred)\nmatrix","ec195182":"sns.heatmap(matrix,annot=True)","4f66b6c2":"test.info()","b4ef0bba":"test.isnull().sum()","7dec052a":"test.head()","584ed4c6":"titles= set()\nfor name in test['Name']:\n    titles.add(name.split(',')[1].split('.')[0].strip())\nprint(titles)","0647fd93":"titles_dict","2f13b14f":"test['Title'] = test['Name'].map(lambda name:name.split(',')[1].split('.')[0].strip())\ntest['Title'] = test.Title.map(titles_dict)\ntest.head()","2da0f734":"df2=test.drop(['PassengerId','Name','Ticket','Cabin'], axis=1)","833e8bbf":"df2.Sex=df2.Sex.map({'female':0, 'male':1})\ndf2.Embarked=df2.Embarked.map({'S':0, 'C':1, 'Q':2,'nan':'Nan'})\ndf2.Title=df2.Title.map({\"Mr\": 1, \"Miss\": 2, \"Mrs\": 3, \"Master\": 4, \"Other\": 5})\n","c9cefcbe":"df2.head()","6f43ddb3":"df2.isnull().sum()","c543b64b":"mean_female=df2[df2['Sex']==1]['Age'].mean()\nmean_men=df2[df2['Sex']==0]['Age'].mean()","cccefb52":"df2.loc[(df2.Age.isnull())&(df2['Sex']==1),'Age']=mean_female\ndf2.loc[(df2.Age.isnull())&(df2['Sex']==0),'Age']=mean_men","8bab2b40":"df2.isnull().sum()","9c657380":"df2['Fare']=df2['Fare'].fillna(df2['Fare'].mean())","9a289217":"df2.isnull().sum()","2755c984":"df2[df2.Title.isnull()]","d23aa042":"df2['Title']=df2.Title.fillna(3)\n","346100f0":"df2.isnull().sum()","5999ccfa":"df2.head()","d61413c5":"df2['Age']=(df2.Age-min(df2.Age))\/(max(df2.Age)-min(df2.Age))","eef8c7e6":"df2['Fare']=(df2.Fare-min(df2.Fare))\/(max(df2.Fare)-min(df2.Fare))","42201854":"df2.head()","b4942129":"pred=clf.predict(df2)","e08dc554":"pred","9400c38d":"submit=pd.DataFrame({'PassengerId':test['PassengerId'],'Survived':pred})\nsubmit.to_csv('.\/submission.csv',index=False)","0183f4f3":"pred_df = pd.read_csv('.\/submission.csv')","4b8a572d":"sns.countplot(x='Survived', data=pred_df)","883ae2a6":"## Cleaning test dataset","a8fe1d38":"## loading dataset","2cc77fd2":"## Data modelling","dcd9d534":"## Logistic regression","7832f1f8":"## Prediction","214bbd73":"## feature extraction","04b8f43c":"Women are more likely to survive.","b33c9717":"## feature scaling"}}