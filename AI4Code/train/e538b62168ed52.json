{"cell_type":{"55a97fb2":"code","19558668":"code","e66020c5":"code","18bd99f1":"markdown","9ca218ac":"markdown"},"source":{"55a97fb2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","19558668":"import numpy as np\nimport scipy.special as sp\nimport matplotlib.pyplot as plt\n# plt.matplotlib.rc('text', usetex = True)\nplt.matplotlib.rc('grid', linestyle = 'dotted')\nplt.matplotlib.rc('figure', figsize = (6.4,4.8)) # (width,height) inches\nx = np.linspace(0, 15, 500)\nfor v in range(0, 6):\n    plt.plot(x, sp.jv(v, x))\nplt.xlim((0, 15))\nplt.ylim((-0.5, 1.1))\nplt.legend(('${J}_0(x)$', '${J}_1(x)$', '${J}_2(x)$','${J}_3(x)$', '${J}_4(x)$', '${J}_5(x)$'), loc = 0)\nplt.xlabel('$x$')\nplt.ylabel('${J}_n(x)$')\nplt.grid(True)\n# plt.tight_layout(0.5)","e66020c5":"import numpy as np\nimport scipy.special as sp\nimport matplotlib.pyplot as plt\n# plt.matplotlib.rc('text', usetex = True)\nplt.matplotlib.rc('grid', linestyle = 'dotted')\nplt.matplotlib.rc('figure', figsize = (6.4,4.8)) # (width,height) inches\nx = np.linspace(0, 15, 500)\nfor v in range(0, 6):\n    plt.plot(x, 0.5*(sp.jv(v-1, x)-sp.jv(v+1, x)))\n#     plt.plot(x, -sp.jv(1, x))\nplt.xlim((0, 15))\nplt.ylim((-0.8, 0.8))\nplt.legend(('${J^\\prime}_0(x)$', '${J ^\\prime}_1(x)$', '${J ^\\prime}_2(x)$','${J ^\\prime}_3(x)$', '${J ^\\prime}_4(x)$', '${J ^\\prime}_5(x)$'), loc = 1)\nplt.xlabel('$x$')\nplt.ylabel('${J ^\\prime}_n(x)$')\nplt.grid(True)\n# plt.tight_layout(0.5)","18bd99f1":"# This notebook is for ploting electric and magnetic fields distribution for a circular waveguid.  \nIt is not done yet.","9ca218ac":"https:\/\/functions.wolfram.com\/Bessel-TypeFunctions\/BesselJ\/20\/ShowAll.html  \n$J_n^\\prime = 0.5(J_{n-1}-J_{n+1})$"}}