{"cell_type":{"f66bee3e":"code","23a5e095":"code","41d5048d":"code","e043fc92":"code","a710a9fb":"code","88cdf3d6":"code","6117fb09":"code","2e25c681":"code","93a6aa96":"code","ed1b06f6":"code","01fb211e":"code","4547e7ab":"code","9cd8dd8b":"code","fbf148bb":"code","e5828bd7":"code","a726a0f6":"code","1e5a6215":"code","083bb365":"code","dc5d242b":"code","66bbb152":"code","bb661a53":"code","6fc7c805":"markdown","ee2ca29a":"markdown","f29e6e45":"markdown","13d75be0":"markdown","48916c3f":"markdown","36fe72a5":"markdown","219026ce":"markdown","202a3a41":"markdown","115b4546":"markdown","0c409712":"markdown"},"source":{"f66bee3e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","23a5e095":"df_apps=pd.read_csv('\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv')","41d5048d":"df_apps.columns.values","e043fc92":"df_apps.Category.unique()","a710a9fb":"trash_data = df_apps[df_apps['Category'] == \"1.9\"]\ndf_apps.drop(trash_data.index, inplace=True)","88cdf3d6":"df_apps.Rating.unique()","6117fb09":"trash_data = df_apps[df_apps['Rating'] == \"nan\"]\ndf_apps.drop(trash_data.index, inplace=True)\ndf_apps[\"Rating\"] = df_apps[\"Rating\"].astype(float)","2e25c681":"df_apps[\"Reviews\"] = df_apps[\"Reviews\"].astype(int)","93a6aa96":"df_apps.Size.unique()","ed1b06f6":"trash_data = df_apps[df_apps['Size'] == \"Varies with device\"]\ndf_apps.drop(trash_data.index, inplace=True)\n\ndf_apps[\"Size\"] = df_apps[\"Size\"].apply(lambda x: str(x).strip('M').replace('M', ''))\ndf_apps[\"Size\"] = df_apps[\"Size\"].apply(lambda x: str(x).strip('M').replace('k', ''))\ndf_apps[\"Size\"] = df_apps[\"Size\"].astype(float)","01fb211e":"df_apps.Installs.unique()","4547e7ab":"df_apps[\"Installs\"] = df_apps[\"Installs\"].apply(lambda x: str(x).strip('+').replace('+', ''))\ndf_apps[\"Installs\"] = df_apps[\"Installs\"].apply(lambda x: str(x).strip(',').replace(',', '')).astype(int)","9cd8dd8b":"df_apps.Price.unique()","fbf148bb":"df_apps[\"Price\"] = df_apps[\"Price\"].apply(lambda x: str(x).strip('$').replace('$', ''))\ndf_apps[\"Price\"] = df_apps[\"Price\"].astype(float)","e5828bd7":"df_apps[\"Content Rating\"].unique()","a726a0f6":"trash_data = df_apps[df_apps[\"Content Rating\"] == \"Unrated\"]\ndf_apps.drop(trash_data.index, inplace=True)","1e5a6215":"df_apps[\"Current Ver\"].unique()","083bb365":"trash_data = df_apps[df_apps[\"Current Ver\"] == \"Varies with device\"]\ndf_apps.drop(trash_data.index, inplace=True)\ntrash_data = df_apps[df_apps[\"Current Ver\"] == \"nan\"]\ndf_apps.drop(trash_data.index, inplace=True)","dc5d242b":"df_apps[\"Android Ver\"].unique()","66bbb152":"trash_data = df_apps[df_apps[\"Android Ver\"] == \"Varies with device\"]\ndf_apps.drop(trash_data.index, inplace=True)\ntrash_data = df_apps[df_apps[\"Android Ver\"] == \"nan\"]\ndf_apps.drop(trash_data.index, inplace=True)","bb661a53":"df_apps.head()","6fc7c805":"#### Clean 'Size' column","ee2ca29a":"#### Clean 'Price' column","f29e6e45":"#### Clean 'Category' column by removing \"1.9\"","13d75be0":"#### Clean 'Installs' column","48916c3f":"#### Clean 'Android Ver' column","36fe72a5":"#### Clean 'Reviews' column converting the values to int","219026ce":"#### Clean 'Rating' column by removing \"nan\" value and converting the values to float","202a3a41":"#### Clean 'Current Ver' column","115b4546":"#### Clean 'Content Rating' column","0c409712":"#### Show columns in dataframe"}}