{"cell_type":{"d1929963":"code","6ecaa789":"code","5fd2dfbb":"code","e42c80f3":"code","92f73158":"code","f0941d11":"code","8a6f4302":"code","ef88d880":"code","973e668a":"code","2a378f06":"code","9d17fcf3":"code","2ef186b7":"code","7978382f":"code","5659f571":"code","7b0e86d6":"code","d01f7154":"code","b8fb32df":"code","58a16a66":"code","f74e5e80":"code","3c552a74":"code","0ecb37b0":"markdown","5a29e07a":"markdown","2f49465b":"markdown","d61d17a8":"markdown","00e239ef":"markdown","ad96a947":"markdown","18108f36":"markdown","66d215e1":"markdown","db09fd3b":"markdown","ca17fa99":"markdown"},"source":{"d1929963":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # plotting\nimport seaborn as sns # plotting\nimport plotly.express as px # plotting\nimport plotly.figure_factory as ff # plotting\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6ecaa789":"# Load paths to CSV\ntrain_csv_path = \"\/kaggle\/input\/titanic\/train.csv\"\ntest_csv_path = \"\/kaggle\/input\/titanic\/test.csv\"\nsubmission_csv_path = \"\/kaggle\/input\/titanic\/gender_submission.csv\"","5fd2dfbb":"# Generate Dataframes from CSVs\ntrain_df = pd.read_csv(train_csv_path, index_col = \"PassengerId\")\ntest_df = pd.read_csv(test_csv_path, index_col = \"PassengerId\")","e42c80f3":"# View first 10 data entries\ntrain_df.head(10)","92f73158":"# Shape of the dataset\ntrain_df.shape","f0941d11":"# Information of the dataset\ntrain_df.info()","8a6f4302":"# Description of the dataset\ntrain_df.describe()","ef88d880":"# Count of survival status\ntrain_df[\"Survived\"].value_counts()","973e668a":"# Count of male\/female\ntrain_df[\"Sex\"].value_counts()","2a378f06":"# Count of Pclass\ntrain_df[\"Pclass\"].value_counts()","9d17fcf3":"# Count of Embarked\ntrain_df[\"Embarked\"].value_counts()","2ef186b7":"# Distribution Plot of Survived vs SociEconomic Status\nfig = px.histogram(train_df, x=\"Pclass\", color=\"Survived\", hover_data=train_df.columns)\nfig.show()","7978382f":"# Distribution Plot of Survived vs Age\nfig = px.histogram(train_df, x=\"Age\", color=\"Survived\", hover_data=train_df.columns)\nfig.show()","5659f571":"# Distribution Plot of Survived vs Number of siblings\/spouse\nfig = px.histogram(train_df, x=\"SibSp\", color=\"Survived\", hover_data=train_df.columns)\nfig.show()","7b0e86d6":"# Distribution Plot of Survived vs Number of parents\/children\nfig = px.histogram(train_df, x=\"Parch\", color=\"Survived\", hover_data=train_df.columns)\nfig.show()","d01f7154":"# Distribution Plot of Survived vs Sex\nfig = px.histogram(train_df, x=\"Sex\", color=\"Survived\", hover_data=train_df.columns)\nfig.show()","b8fb32df":"# Box plot of Survived vs Age\nfig = px.box(train_df, x = \"Survived\", y=\"Age\")\nfig.show()","58a16a66":"# Box plot of Survived vs Fare\nfig = px.box(train_df, x = \"Survived\", y=\"Fare\")\nfig.show()","f74e5e80":"# Box plot of Survived vs Age\nfig = px.box(train_df, x = \"Pclass\", y=\"Age\")\nfig.show()","3c552a74":"sns.pairplot(train_df, hue = \"Survived\", height = 5).add_legend()","0ecb37b0":"### Observations\n\n- More number of PClass 3 (lower class) people died\n- People with lesser number of Sibsp survived in lesser number\n- People with lesser number of Parch survived in lesser number\n- More males did not survive\n- More females survived\n","5a29e07a":"## Univariate Analysis","2f49465b":"## Basic Data Exploration","d61d17a8":"# Exploratory Data Analysis\n\nDataset : Titanic","00e239ef":"## Bivariate Analysis","ad96a947":"### Observations\n\n- There are 891 training data samples.\n- Cabin feature has the least number of useable values (204 useable)\n- Age feature also has some non useable values (714 useable)\n- Embarked feature has very less non useable values (889 useable)\n- The mean Age feature is around 30\n- Mostly middle class people (Pclass feature ~ 2)\n- 342 out of 891 people survived\n- More males than females\n- Distribution of people based on Pclass 3 > 1 > 2 (3 is lower class people)\n\n### Implications\n\n- Age feature can be imputed through mean\n- Embarked feature can be imputed through mode\n- Cabin feature can be converted to boolean","18108f36":"## Multivariate Analysis","66d215e1":"## Importing Libraries","db09fd3b":"### Observations\n\n- Approximately, higher fare giving people survived in greater number\n- Average Age varies across PClass","ca17fa99":"## Loading Datasets"}}