{"cell_type":{"0c108bff":"code","416d1007":"code","90851b48":"code","62307762":"code","9b896bb7":"code","1c026d1e":"code","c69100bd":"code","e5e3ca25":"code","c0146e23":"code","50d8c36c":"code","057cc9b7":"code","7dd3230e":"code","b1c36f8f":"code","f2c6c133":"code","cafb61bf":"code","fb8556b7":"code","619f3eeb":"code","697ddd63":"code","da13197b":"code","0678e235":"code","d5432660":"code","9aaf142d":"code","ebf79879":"markdown","9952f762":"markdown","5110ed1d":"markdown","b729106f":"markdown","8daa6fea":"markdown","bc22cd38":"markdown","9983f26d":"markdown","c9817533":"markdown","72a8161d":"markdown","020cb7f7":"markdown","64d78960":"markdown","92d97d74":"markdown","40e30a07":"markdown","776e032d":"markdown","d8e233d4":"markdown"},"source":{"0c108bff":"!pip install pyspark","416d1007":"# import findspark\n# findspark.init('\/home\/krystian\/spark-3.1.2-bin-hadoop3.2')\nimport pyspark\nfrom pyspark.sql import SparkSession\nspark = SparkSession.builder.appName('cluster1').getOrCreate()","90851b48":"df = spark.read \\\n    .options(header=True, inferSchema=True) \\\n    .csv(f\"..\/input\/ford-gobike-2019feb-tripdata\/201902-fordgobike-tripdata.csv\")","62307762":"from pyspark.sql.functions import max, min, datediff, format_number, collect_list, struct, mean, when, size, collect_set, count, to_date, countDistinct, current_date, sumDistinct, col, year, date_format, month, dayofmonth\nfrom pyspark.sql import Window\nimport pyspark.sql.functions as F","9b896bb7":"df.columns","1c026d1e":"print((df.count(), len(df.columns)))","c69100bd":"df.groupBy('member_gender').agg(\n    F.expr(\"count(member_gender)\").alias(\"No of records\"),\n).show()","e5e3ca25":"df = df.withColumn(\"Age\", 2017 - df.member_birth_year).alias(\"Age\")\ndf.groupBy('member_gender').agg(\n    F.expr(\"avg(Age)\").alias(\"AVG Age\"),\n    F.expr(\"min(Age)\").alias(\"MIN Age\"),\n    F.expr(\"max(Age)\").alias(\"MAX Age\")\n).withColumn('AVG Age', F.round(F.col('AVG Age'), 0).cast('integer')).show()","c0146e23":"df.select(\"bike_id\").distinct().count()","50d8c36c":"df.dropDuplicates(['start_station_name','end_station_name'])\\\n.select('start_station_name').distinct().count()","057cc9b7":"aggData = df.groupBy('bike_id').agg(\n    F.expr(\"count(bike_id)\").alias(\"Total No of rents\"),\n    F.expr(\"avg(duration_sec)\").alias(\"AVG Rent Time\"),\n    F.expr(\"min(duration_sec)\").alias(\"MIN Rent Time\"),\n    F.expr(\"max(duration_sec)\").alias(\"MAX Rent Time\")\n).orderBy(\"MAX Rent Time\",ascending=False)\naggData.show(2)","7dd3230e":"aggData.orderBy(\"Total No of rents\",ascending=False).show(2)","b1c36f8f":"aggData.orderBy(\"MIN Rent Time\",ascending=True).show(2)","f2c6c133":"aggData.orderBy(\"AVG Rent Time\",ascending=False).show(2)","cafb61bf":"df.select(mean('duration_sec').alias(\"AVG rent time\")).show()","fb8556b7":"df.groupBy('start_station_name', 'end_station_name').agg(\n    F.expr(\"count(bike_id)\").alias(\"Total No of connections\"))\\\n.orderBy(\"Total No of connections\",ascending=False).show(1, False)","619f3eeb":"df.withColumn(\"Ex Time of Rent\", date_format('start_time', 'HH:mm'))\\\n.select(\"Ex Time of Rent\")\\\n.groupBy('Ex Time of Rent').count()\\\n.orderBy(\"count\",ascending=False).show(1) \n","697ddd63":"df.withColumn(\"Rent day\", date_format('start_time', 'EEEE')).select('Rent day')\\\n.groupBy('Rent day').count()\\\n.orderBy(\"count\",ascending=False).show() ","da13197b":"df.withColumn(\"Rent month\", date_format('start_time', 'MMMM'))\\\n.select('Rent month').groupBy('Rent month').count()\\\n.orderBy(\"count\",ascending=False).show() ","0678e235":"dataDaily = df.withColumn(\"date\", date_format('start_time', 'D'))\\\n.groupBy('date').agg(\n    F.expr(\"avg(duration_sec)\").alias(\"avg_duration_sec\"),   \n    F.expr(\"count(bike_id)\").alias(\"n_trips\"),\n    countDistinct(\"bike_id\").alias(\"n_bikes\"),\n    count(when(col(\"user_type\") == \"Subscriber\", True)).alias(\"n_subscriber\"))\\\n.withColumn('avg_duration_sec', F.round(F.col('avg_duration_sec'), 0).cast('integer'))\\\n.orderBy(\"date\",ascending=True) \n\ndataDaily.show(5)","d5432660":"df2 = df.withColumn(\"sl2\", when(df['end_station_id'] < df['start_station_id'],  df['end_station_id'])\\\n.otherwise(df['start_station_id']))\\\n.withColumn(\"el2\", when(df['end_station_id'] > df['start_station_id'],  df['end_station_id'])\\\n.otherwise(df['start_station_id']))\\\n.drop(\"start_station_id\", \"end_station_id\")\n\ndf2_agg = df2.withColumn(\"date\", date_format('start_time', 'D'))\\\n.groupBy('date').agg(collect_set(struct(col('sl2'), col('el2'))).alias(\"n_routes\")) \n\ndf2_agg.select(\"date\", size(\"n_routes\")).alias(\"n_routes\")\\\n.orderBy(\"date\",ascending=True).show(5)","9aaf142d":"bikeDaily = df.withColumn(\"date\", date_format('start_time', 'D'))\\\n.groupBy('bike_id').pivot('date').sum(\"duration_sec\")\n\nbikeDaily.select('bike_id','32','33','34','35','36',).show(3)","ebf79879":"# Between which stations there was the greatest traffic","9952f762":"# Number of unique combinations of stations (x -> y == y -> x) for the day","5110ed1d":"# Number of unique bike stations","b729106f":"# RDD dataDaily containing data aggregated down to the level of the day. Each day of the year (element in RDD) is to contain the following information:\n\n- 'date' : Date \n- 'avg_duration_sec' : Average duration of rentals for the day\n- 'n_trips' : liczba wypo\u017cycze\u0144 danego dnia\n- 'n_bikes' : number of rentals on a given day\n- 'n_subscriber' : number of rentals made by subscribers on a given day\n","8daa6fea":"# The average number of rentals for individual days of the week","bc22cd38":"# The number of unique bikes","9983f26d":"# Exploratory Data Analysis of bike rentals database with Pyspark\n# Krystian Warda","c9817533":"# The average number of rentals for individual months","72a8161d":"# Average duration of a single loan","020cb7f7":"# RDD key-value `bikeDaily` containing one element for each` \"bike_id\" `. The values \u200b\u200bin the RDD are to be lists of the total daily use of a given bike in seconds (items of the list in chronological order).","64d78960":"# The minimum, maximum and average age of bicycle rentals","92d97d74":"# At what time during the day were the most bicycles rented","40e30a07":"# Distribution of the variable \"member_gender\"","776e032d":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","d8e233d4":"# Which bike was rented the longest and which was the shortest during the analyzed period (and for how long)"}}