{"cell_type":{"57b34ca0":"code","9ff82233":"code","c1117ae8":"code","b3d97dcd":"code","95c1dbdf":"code","5171bf6b":"markdown","7e47ea52":"markdown","d6566702":"markdown","27d81b9a":"markdown","b720b568":"markdown"},"source":{"57b34ca0":"import numpy as np\nimport pandas as pd\nfrom tensorflow.python import keras\n\nimg_rows, img_cols = 28, 28\nnum_classes = 10\n\ndef prep_data(raw):\n    y = raw[:, 0]\n    out_y = keras.utils.to_categorical(y, num_classes)\n    \n    x = raw[:,1:]\n    num_images = raw.shape[0]\n    out_x = x.reshape(num_images, img_rows, img_cols, 1)\n    out_x = out_x \/ 255\n    return out_x, out_y\n\ntrain_file = \"..\/input\/train.csv\"\ndata = np.loadtxt(train_file, skiprows=1, delimiter=',')\nx, y = prep_data(data)\n\ntest_file = \"..\/input\/test.csv\"\ntest = np.loadtxt(test_file, skiprows=1, delimiter=',')\ntest = test \/ 255\nnum_images = test.shape[0]\ntest = test.reshape(num_images,img_rows, img_cols, 1)","9ff82233":"from tensorflow.python import keras\nfrom tensorflow.python.keras.models import Sequential\nfrom tensorflow.python.keras.layers import Dense, Flatten, Conv2D\n\n#Specifying Model Architecture\nmodel = Sequential()\nmodel.add(Conv2D(12, kernel_size=(3,3), activation='relu', input_shape=(img_rows,img_cols,1)))\nmodel.add(Conv2D(12, kernel_size=(3,3), activation='relu'))\nmodel.add(Conv2D(12, kernel_size=(3,3), activation='relu'))\nmodel.add(Flatten())\nmodel.add(Dense(100,activation='relu'))\nmodel.add(Dense(num_classes, activation='softmax'))","c1117ae8":"model.compile(loss = keras.losses.categorical_crossentropy, optimizer = 'adam', metrics = ['accuracy'])","b3d97dcd":"#Fitting the model\nmodel.fit(x,y,batch_size=100, epochs = 4, validation_split = 0.2)","95c1dbdf":"results = model.predict(test)\nresults = np.argmax(results,axis=1)\nresults = pd.Series(results,name=\"Label\")\n\nsubmission = pd.concat([pd.Series(range(1,28001),name = \"ImageId\"),results],axis = 1)\n\nsubmission.to_csv(\"cnn_mnist_datagen.csv\",index=False)","5171bf6b":"# Compiling the model","7e47ea52":"# Submitting results","d6566702":"# Fitting the model","27d81b9a":"\n# Specify Model","b720b568":"# Data Preperation\n\nThe code below should prepare our data. \nThe images in MNIST are 28x28 pixels and we need to classify those images into 1 of 10 catagories. The numbers 0 to 10. "}}