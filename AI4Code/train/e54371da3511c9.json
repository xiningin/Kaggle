{"cell_type":{"975d059c":"code","a5fd55eb":"code","00132b5b":"code","481214c8":"code","0a6465d3":"code","4330c587":"code","5ccba2c4":"code","80bcdb8c":"code","23dffd09":"code","e7b430f4":"code","72ba911b":"code","6cff7e80":"code","9678f954":"code","4b89a06c":"code","3afb4da9":"code","eaecf24e":"code","53fd6b5f":"code","482fb937":"code","d9658f81":"code","680e2b95":"code","60bca9c2":"code","1656232e":"code","1a783428":"code","8bea8dcb":"code","94c99898":"code","ca7467db":"code","6114703b":"code","6d972b69":"code","955fe015":"code","4ea79fc3":"code","04dc47be":"code","61b6f5cb":"code","832a2f5f":"code","38da8cf7":"code","c8187e09":"markdown","85ec116e":"markdown","08eb6fbf":"markdown","b54878bf":"markdown","017c5785":"markdown","9847882e":"markdown","400fcc13":"markdown","c162c232":"markdown","10dd233b":"markdown","69394dd5":"markdown","1a81adab":"markdown","8bb40a53":"markdown","22a8f3c2":"markdown","ac01e09d":"markdown","0de32f33":"markdown","89caaa95":"markdown","298179e6":"markdown","98fcf6ff":"markdown","b19bf6c2":"markdown","03986a88":"markdown","c4e419a2":"markdown","6fa4f56b":"markdown","f329a3d9":"markdown","2ab631f9":"markdown","033af83f":"markdown","2348d9ce":"markdown","a19ebc46":"markdown","9345f547":"markdown","eec4ec33":"markdown"},"source":{"975d059c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a5fd55eb":"df = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('..\/input\/titanic\/test.csv')","00132b5b":"df","481214c8":"test_df","0a6465d3":"df['Sex'].value_counts()","4330c587":"sns.countplot(data=df, x='Survived', hue='Sex')","5ccba2c4":"complete_df = pd.concat([df, test_df])","80bcdb8c":"complete_df.isnull().sum() ","23dffd09":"complete_df[complete_df['Embarked'].isnull()]","e7b430f4":"sns.boxplot(data=complete_df[complete_df['Pclass']==1],y='Fare',x='Embarked')","72ba911b":"complete_df['Embarked'] = complete_df['Embarked'].fillna('C')","6cff7e80":"complete_df[complete_df['Fare'].isnull()]","9678f954":"complete_df['Fare'] = complete_df.groupby('Pclass')['Fare'].transform(lambda val: val.fillna(val.median()))","4b89a06c":"complete_df.loc[complete_df['Sex']=='female','Age'] = complete_df[complete_df['Sex']=='female']['Age'].transform(lambda val: val.fillna(val.median()))\ncomplete_df.loc[complete_df['Sex']=='male', 'Age'] = complete_df[ complete_df['Sex']=='male' ]['Age'].transform(lambda val: val.fillna(val.median()))","3afb4da9":"complete_df.isnull().sum()","eaecf24e":"X = complete_df[:891].drop(['PassengerId', 'Survived', 'Name', 'Ticket', 'Cabin'] ,axis=1)\nX","53fd6b5f":"X = pd.get_dummies(X)\nX","482fb937":"y = complete_df[:891]['Survived']","d9658f81":"from sklearn.model_selection import train_test_split","680e2b95":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","60bca9c2":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV","1656232e":"param_grid = {'max_depth':[4,5,6,7,8,9,10]}","1a783428":"forest = RandomForestClassifier(random_state=42)\ngrid = GridSearchCV(forest, param_grid, cv=10)\ngrid.fit(X_train, y_train)","8bea8dcb":"grid.best_params_","94c99898":"from sklearn.metrics import accuracy_score, classification_report","ca7467db":"test_predictions = grid.predict(X_test)\nprint(accuracy_score(y_test, test_predictions))","6114703b":"print(classification_report(y_test, test_predictions))","6d972b69":"X_final = complete_df[891:].drop(['PassengerId', 'Survived', 'Name', 'Ticket', 'Cabin'] ,axis=1)\nX_final = pd.get_dummies(X_final)","955fe015":"X_final","4ea79fc3":"forest = RandomForestClassifier(max_depth=6, random_state=42)\nforest.fit(X,y)\nfinal_preds = forest.predict(X_final)","04dc47be":"submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsubmission # Remember that this example assumes that all women survived, and all men died.","61b6f5cb":"submission['Survived'] = final_preds\nsubmission","832a2f5f":"submission['Survived'] = submission['Survived'].astype(int)\nsubmission","38da8cf7":"submission.to_csv('submission.csv', index=False)","c8187e09":"We can use the Fare and Pclass values to guess from which place they embarked.","85ec116e":"The following is the dataset on which we are going to train our model:","08eb6fbf":"We train the model now on the X_train and y_train sets. We also use a random_state equal to 42 on our RF model to be able to replicate these results. ","b54878bf":"We will try a simple grid search with these hyperparameters:","017c5785":"And this is the dataset from which we have to predict the survivors (notice the 'Survived' missing column):","9847882e":"# Data Preprocessing","400fcc13":"We now perform one-hot encoding to deal with the categorical features 'Sex' and 'Embarked'.","c162c232":"Don't forget to submit your predictions as integer numbers, and not float numbers. Otherwise you will get a score equal to 0 !! ","10dd233b":"Let's see what the best max_depth value resulted to be:","69394dd5":"Finally, we split this data in order to train and evaluate the model. We will use a test size of 0.33 and a random state of 42.","1a81adab":"# Submitting our predictions","8bb40a53":"To fill this value, we will use the median 'Fare' from the Pclass 3. We can do this directly with the transform method from pandas.","22a8f3c2":"Let's evaluate our model.","ac01e09d":"Now, we'll do exactly the same thing for the missing ages, by using the median age of both 'male' and 'female' people.","0de32f33":"To finish this notebook, we will load the \"gender submission\" example and simply replace the 'Survived' column with our results.","89caaa95":"Now to the 'Fare' missing value.","298179e6":"This should've taken care of the 'age' missing values.","98fcf6ff":"As we can see, this model performed pretty decently. ","b19bf6c2":"Since these datasets contain some missing values, we will use the complete dataset (train + test) in order to fill these missing points.","03986a88":"The 'Survived' missing values come from the test set, so we can ignore those. Let's take a look at the 'Embarked' missing values.","c4e419a2":"# Building our model (Random Forest)","6fa4f56b":"Since their fares are closer to the median of 'C', we'll use this as our guess.","f329a3d9":"# Loading libraries and datasets","2ab631f9":"Then, we grab the label which is the original 'Survived' column from the train dataset.","033af83f":"Finally, we will train a RF model on the full X and Y with max_depth=6, and submit our predictions for the competition score.","2348d9ce":"As we can see after submitting the csv, we got a 0.79186 score.\n\nAt the moment of writing this, this got the place 1126 out of 14619 (among the best 7.7%). ","a19ebc46":"Since the 'Cabin' column has too many missing values, we will simply drop it along with the columns that don't seem to have some relationship with our desired predictions.","9345f547":"We will import the RF Classifiear, as well as GridSearchCV in order to cross validate the model.","eec4ec33":"As it is well known, women were more likely to survive than men."}}