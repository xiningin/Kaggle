{"cell_type":{"c6c3b599":"code","e097b808":"code","f5a60b6f":"code","3ad2fe75":"code","9bc9bbe8":"code","1c2418e2":"markdown","a4de4dd3":"markdown","c7b11835":"markdown","27a27ff4":"markdown","c32049dc":"markdown","96d88025":"markdown","f39f28a8":"markdown"},"source":{"c6c3b599":"import pandas as pd\n\ndf = pd.DataFrame({\n    \"Order_id\" : [i for i in range(1,8)],\n    \"TIP($)\"   : [5, 7, 11, 12, 1, 5, 11]\n})\n\nimport plotly.express as px\n\nfig = px.line(df, x=\"Order_id\", y=\"TIP($)\", title='Tip Calulation')\nfig.show()","e097b808":"\n\nimport plotly.graph_objects as go\n\n# Create traces\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=list(df.Order_id.values), y=list(df[\"TIP($)\"].values),\n                    mode='lines+markers',\n                    name='TIP'))\nfig.add_trace(go.Scatter(x=list(df.Order_id.values), y=[(sum(df[\"TIP($)\"].values)\/ len(df[\"TIP($)\"].values)) for i in range(0,len(df[\"TIP($)\"].values))],\n                    mode='lines',\n                    name='Mean'))\n\nfig.update_layout(title='Relation in Tips and Mean')\n                   \nfig.show()\n\n\n\n","f5a60b6f":"df[\"distance\"]= df[\"TIP($)\"].apply(lambda x: x - 6.8)\nprint(f\"Error of Best Fit Line :{sum(df['distance'].values)}\")","3ad2fe75":"df = pd.DataFrame({\n    \"Order_id\" : [i for i in range(1,8)],\n    \"TIP($)\"   : [5, 7, 11, 12, 1, 5, 11],\n    \"Bill\"   : [50, 56.5 ,100, 110, 5, 52, 101]\n})\n\n\nimport plotly.graph_objects as go\n\n# Create traces\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=list(df.Order_id.values), y=list(df[\"TIP($)\"].values),\n                    mode='lines+markers',\n                    name='TIP'))\nfig.add_trace(go.Scatter(x=list(df.Order_id.values), y=list(df.Bill.values),\n                    mode='lines',\n                    name='Mean'))\n\nfig.update_layout(title='Relation in Tips and Mean')\n                   \nfig.show()\n\n","9bc9bbe8":"import numpy as np \nimport matplotlib.pyplot as plt \n  \ndef estimate_coef(x, y): \n    # number of observations\/points \n    n = np.size(x) \n  \n    # mean of x and y vector \n    m_x, m_y = np.mean(x), np.mean(y) \n  \n    # calculating cross-deviation and deviation about x \n    SS_xy = np.sum(y*x) - n*m_y*m_x     # ss  stands for sum squared\n    SS_xx = np.sum(x*x) - n*m_x*m_x \n  \n    # calculating regression coefficients \n    b_1 = SS_xy \/ SS_xx \n    b_0 = m_y - b_1*m_x \n  \n    return(b_0, b_1) \n  \ndef plot_regression_line(x, y, b): \n    # plotting the actual points as scatter plot \n    plt.scatter(x, y, color = \"m\", \n               marker = \"o\", s = 30) \n  \n    # predicted response vector \n    y_pred = b[0] + b[1]*x \n    \n    # plotting the regression line \n    plt.plot(x, y_pred, color = \"g\") \n  \n    # putting labels \n    plt.xlabel('x') \n    plt.ylabel('y') \n  \n    # function to show plot \n    plt.show()\n    \n\n    \ndef Linear_regression(x,y):\n        # estimating coefficients \n        \n        b = estimate_coef(x, y) \n        # Here b[0] is error and b[1] is the value which we got when we multiply it with x (amount bill) to get the amount of tip\n        \n        print(\"Estimated coefficients:\\nb_0 = {} nb_1 = {}\".format(b[0], b[1])) \n        print(b)\n\n        # plotting regression line \n        plot_regression_line(x, y, b) \n        \nLinear_regression(df[\"Bill\"],df[\"TIP($)\"])","1c2418e2":"So here is the visualisation Now go ahead and try to give me a value for the 7th Tip.\nwith only one variable the best way to predict next point is by taking its mean so the next point (amount of tip) will be $6.8.\n\n [5 + 7 + 11 + 12 + 1 + 5 + 11] \/ 7 = 7.42\n \nwith only one variable best possible answer is 6.88.\n\n\n","a4de4dd3":"# Linear Regression Forluma\n\nLinear Regression formulat =  h(x) = beta _0 + (beta_1 * x)  \n\n# Error Calculation\n\nHere, e_i is residual error in ith observation.\nSo, our aim is to minimize the total residual error.\n\n![Screenshot%202020-06-28%20at%207.39.00%20PM.png](attachment:Screenshot%202020-06-28%20at%207.39.00%20PM.png)","c7b11835":"Now we have to calculate error of this mean line which is our best fit line for now. To find out the error of the line\nwe have to calcualte distance of every datapoint from the mean point and add it. so lets see our error.","27a27ff4":"Now lets find second variable for which we can get more information and to be more accurate. \n\nNow you again go to manager and manager is happy with your work but after some time when data get increased manager see some anomolies and invite you again to build more accurate model.Now you go again and started to view more orders you see that order bill is relating to the amount of tip. When the order is of 5 dollar amount of tip paid is 1 dollar and when order bill is 50 dollar the amount of tip is 5 dollar you got the variable on which amount is tip is depending on Now you collect the data of the order bills with tip amount now you have 2 variables and when we have more data we have chance to build more accurate model. You come back to your office and start working on the data again.\n\n\n\n| Order_id  | TIP($) | Bill |\n| ------------- | ------------- | ------------- |\n| 1  | 5  |  50  |\n| 2  | 7  |  56.5  |\n| 3  | 11  |  100  |\n| 4  | 12  |  110  |\n| 5  | 1 |  5  |\n| 6  | 5  |  52  |\n| 7  | 11  |  101  |\n\n","c32049dc":"# Introduction\n\nHello there! In this notebook I am going to explains simple linera regression with some awful facts. Some of the beginners should follow this notebook to get insight of simple linear regression. (Dont forget to upvote)\n\n![LinearRegression](https:\/\/i.ytimg.com\/vi\/nk2CQITm_eo\/maxresdefault.jpg)\n\n\nSo first we will start with the breif introduction of linear regression.\n\nSo Linear Regression is the way to find out relationship between two variables where 1 is dependent and the other 1 is \nindependent. SO the question is how can we find the realtion?\n\nLets take and example:\nAssume that A hotel manger came to you and ask you to make a model for tip prediction model. Now you went to the hotel for data collection and collect data (amount of tip) of 6 random orders. \n\n| Order_id  | TIP($) |\n| ------------- | ------------- |\n| 1  | 5  |\n| 2  | 7  |\n| 3  | 11  |\n| 4  | 12  |\n| 5  | 1 |\n| 6  | 5  |\n| 7  | 11  |\n\nSo if is say you to predict next tip with only just 1 variable. How will you predict? (take some time and think)\n\nLets Visualize this data","96d88025":"Now Linear regression is used to find out relation between two variabe from these linear regression values we can conclude that Bills have some connection with tip because our error is minimized on the other side if our error is not minimized it means that these two variables are not related to each other","f39f28a8":"# Hope you find some intresting things here I will try to make next notebook on Multiple linear Regression Dont forget to upvote"}}