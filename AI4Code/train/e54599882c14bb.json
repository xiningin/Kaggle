{"cell_type":{"98bb1c3c":"code","7ac16d59":"code","68c9184c":"code","9f02b39f":"code","6c100ccf":"code","6bb0770f":"code","2e031aed":"code","410269ff":"code","e1b2a848":"code","303153e2":"code","a065adff":"code","929c6c39":"code","60d42446":"code","1cdadc39":"code","687b2b5b":"code","c1e2836a":"code","d1441ea5":"markdown","d1de2ebf":"markdown","755af0c6":"markdown"},"source":{"98bb1c3c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7ac16d59":"!pip install openpyxl\nimport datetime as dt\nimport pandas as pd\npd.set_option(\"display.max_column\",None)\npd.set_option('display.float_format', lambda x: '%.5f' % x)\ndf_ = pd.read_excel(\"\/kaggle\/input\/online-retail\/online_retail_II.xlsx\", sheet_name=\"Year 2010-2011\")\ndf = df_.copy()","68c9184c":"df.head()","9f02b39f":"df.describe().T","6c100ccf":"df.isnull().any()\ndf.isnull().sum()\n","6bb0770f":"#drop null values\ndf.dropna(inplace=True)","2e031aed":"df[\"Description\"].nunique()","410269ff":"df[\"Description\"].value_counts()","e1b2a848":"df.sort_values(\"Quantity\", ascending=False).head()","303153e2":"#drop minus values.minus value means product return \ndf = df[~df[\"Invoice\"].str.contains(\"C\",na=False)]\ndf = df[df[\"Quantity\"] > 0]\ndf = df[df[\"Price\"] > 0]","a065adff":"#create total price column\ndf[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]","929c6c39":"#get recency,frequency and monetary\n\ntoday_date=dt.datetime(2011, 12, 11)\n\n\nrfm=df.groupby(\"Customer ID\").agg({\"InvoiceDate\": lambda InvoiceDate : (today_date-InvoiceDate.max()).days,\n                                   \"Invoice\" : lambda Invoice : Invoice.nunique(),\n                                   \"TotalPrice\" : lambda TotalPrice : TotalPrice.sum()})\n\nrfm.columns=[\"recency\",\"frequency\",\"monetary\"]\n\nrfm=rfm[rfm[\"monetary\"] > 0]","60d42446":"#generate RFM scores\n\nrfm[\"recency_score\"]=pd.qcut(rfm[\"recency\"],5,labels=[5,4,3,2,1])\n\nrfm[\"frequency_score\"]= pd.qcut(rfm[\"frequency\"].rank(method=\"first\"),5, labels=[1,2,3,4,5])\n\nrfm[\"monetary_score\"]=pd.qcut(rfm[\"monetary\"],5,labels=[1,2,3,4,5])\n\nrfm[\"RFM_SCORE\"]=(rfm[\"recency_score\"].astype(str)+rfm[\"frequency_score\"].astype(str))","1cdadc39":"rfm.head()","687b2b5b":"#segmentation\n\nseg_map = {\n    r'[1-2][1-2]': 'hibernating',\n    r'[1-2][3-4]': 'at_Risk',\n    r'[1-2]5': 'cant_loose',\n    r'3[1-2]': 'about_to_sleep',\n    r'33': 'need_attention',\n    r'[3-4][4-5]': 'loyal_customers',\n    r'41': 'promising',\n    r'51': 'champions',\n    r'[4-5][2-3]': 'potential_loyalists',\n    r'5[4-5]': 'champions'\n}\n\nrfm[\"segment\"]=rfm[\"RFM_SCORE\"].replace(seg_map,regex=True)","c1e2836a":"#analyze segments\nrfm.groupby(\"segment\")[\"recency\",\"frequency\",\"monetary\"].agg({\"mean\",\"count\"})","d1441ea5":"<h2>Customer Segmentation Using RFM Analysis<\/h2>\n\n<h3>Business Problem<\/h3>\n\nAn e-commerce company wants to segment its customers and determine marketing strategies according to these segments.The company believes that marketing activities specific to customer segments that exhibit common behaviors will increase revenue.For example, it is desired to organize different campaigns for new customers and different campaigns in order to retain customers that are very profitable for the company.\n\n\n<h3>Dataset<\/h3>\n\nThe dataset named Online Retail II is a UK-based online sale.It includes the sales of the store between 01\/12\/2010 and 09\/12\/2011.The product catalog of this company includes souvenirs.\n\n","d1de2ebf":"**Check Dataset**","755af0c6":"**Import Dataset and Required Libraries**"}}