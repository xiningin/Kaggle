{"cell_type":{"750f9228":"code","df944a5b":"code","ab0758f8":"code","390f5241":"code","aa008f0e":"code","ab3ad964":"markdown"},"source":{"750f9228":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","df944a5b":"train_data=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-5\/train.csv')\ntrain_data.head()\ntrain_data['label']='train'","ab0758f8":"test_data=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-5\/test.csv')\ntest_data.head()\ntest_data['label']='score'\nconcat_data=pd.concat([train_data, test_data])","390f5241":"fatal=train_data.loc[train_data.Target == 'Fatalities'][\"Weight\"]\nprint(\"rate of fatalities:\" ,(sum(fatal)\/len(fatal)))","aa008f0e":"cc=train_data.loc[train_data.Target == 'ConfirmedCases'][\"Weight\"]\nprint(\"rate of confirmed cases:\" ,(sum(cc)\/len(cc)))","ab3ad964":"from sklearn.ensemble import RandomForestClassifier\nfrom pandas.api.types import CategoricalDtype\ntrain_data['Target'] = train_data['Target'].astype('category')\ntest_data['Target'] = test_data['Target'].astype(CategoricalDtype(categories=train_data['Target'].cat.categories))\n\ny = train_data[\"Target\"]\n\nfeatures = [\"Country_Region\", \"Population\", \"Weight\", \"Date\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=234, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'ForecastId': test_data.PassengerId, 'Target': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")"}}