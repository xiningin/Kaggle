{"cell_type":{"3a906f22":"code","2a21a603":"code","1c3be781":"code","0825a4d4":"code","176c8142":"code","62e0d56e":"code","d34c412b":"code","bc3c4028":"code","5489950f":"code","2c116410":"code","5794860d":"code","7a1a8fa6":"code","01f4dd34":"code","c0169abd":"code","ff73211c":"code","2a9abbd5":"code","5191067d":"code","1e2f63a2":"code","478509a6":"code","69eed805":"code","ae599512":"code","90fedb60":"code","ebd7300e":"code","ef97eae0":"code","52ace073":"code","c1d027b8":"code","f543e2e0":"code","dc0358b8":"code","3ae2838a":"code","a830db76":"code","121c8b12":"code","5d219cc3":"code","8772af7a":"code","b9dcfdea":"code","b6c560bd":"code","679f4aa5":"code","3186a635":"code","4ed77296":"code","42b77fa1":"markdown","bb6d79f7":"markdown","eed1df05":"markdown","5b4d70ef":"markdown","8356d464":"markdown","b5cbcb49":"markdown","d5590d22":"markdown","0a13d818":"markdown"},"source":{"3a906f22":"import sklearn","2a21a603":"import pandas as pd","1c3be781":"import matplotlib.pyplot as plt","0825a4d4":"traindata = pd.read_csv(\"\/kaggle\/input\/adult-pmr3508\/train_data.csv\",\n        sep=',',\n        engine='python',\n        na_values=\"?\")","176c8142":"traindata.shape","62e0d56e":"traindata.describe()","d34c412b":"testdata = pd.read_csv(\"\/kaggle\/input\/adult-pmr3508\/test_data.csv\",\n        sep=r'\\s*,\\s*',\n        engine='python',\n        na_values=\"?\")","bc3c4028":"testdata.shape","5489950f":"traindata.head()","2c116410":"testdata.head()\n","5794860d":"traindata[\"native.country\"].value_counts()\n","7a1a8fa6":"traindata[\"age\"].value_counts().plot(kind=\"bar\")","01f4dd34":"traindata[\"sex\"].value_counts().plot(kind=\"pie\")\n","c0169abd":"traindata[\"education\"].value_counts().plot(kind=\"bar\")\n","ff73211c":"traindata[\"occupation\"].value_counts().plot(kind=\"bar\")\n","2a9abbd5":"def percent(colum):\n    return colum*100\/\/float(colum[-1])\ntargetxage = pd.crosstab(traindata[\"age\"],traindata[\"income\"],margins=True)\ntargetxage.apply(percent,axis=1).plot()","5191067d":"\ntargetxeducationnum = pd.crosstab(traindata[\"education.num\"],traindata[\"income\"],margins=True)\ntargetxeducationnum.apply(percent,axis=1).plot()","1e2f63a2":"targetxeducationnum = pd.crosstab(traindata[\"income\"],traindata[\"sex\"],margins=True)\ntargetxeducationnum.apply(percent,axis=0)","478509a6":"targetxeducationnum = pd.crosstab(traindata[\"sex\"],traindata[\"income\"],margins=True)\ntargetxeducationnum.apply(percent,axis=1).plot()","69eed805":"#Aqui vamos transformar os labels Sex e Races que s\u00e3o strings em floats, a partir da associa\u00e7\u00e3o com sua porcentagem de apari\u00e7\u00e3o\nno_number = [\"Male\",\"Female\"]\nnumber = [\"3\",\"1\"]\nraces=[\"Asian-Pac-Islander\",\"White\",\"Black\",\"Amer-Indian-Eskimo\",\"Other\"]\nperc=[\"26\", \"25\", \"12\", \"11\",\"9\"]\nno_number += races\nnumber += perc\ndef num_func(label):\n    for i in range(len(number)):\n        if label == no_number[i]:\n            return number[i]\n    return label","ae599512":"#A partir da fun\u00e7\u00e3o .apply da Pandas, podemos aplicar ao CSV a nossa altera\u00e7\u00e3o num\u00e9rica\ntraindata[\"sex\"] = traindata[\"sex\"].apply(num_func)\ntraindata[\"race\"] = traindata[\"race\"].apply(num_func)\ntestdata[\"sex\"] = testdata[\"sex\"].apply(num_func)\ntestdata[\"race\"] = testdata[\"race\"].apply(num_func)\n","90fedb60":"ntraindata = traindata.dropna()\n","ebd7300e":"ntraindata","ef97eae0":"ntestdata = testdata\nntestdata.shape","52ace073":"Xtrain = ntraindata[[\"age\",\"education.num\",\"sex\", \"race\", \"capital.gain\", \"capital.loss\", \"hours.per.week\"]]\n","c1d027b8":"Ytrain = ntraindata.income\n","f543e2e0":"Xtest = ntestdata[[\"age\",\"education.num\",\"sex\", \"race\", \"capital.gain\", \"capital.loss\", \"hours.per.week\"]]\n","dc0358b8":"from sklearn.neighbors import KNeighborsClassifier\n","3ae2838a":"knn = KNeighborsClassifier(n_neighbors=24, p=1)","a830db76":"from sklearn.model_selection import cross_val_score\n","121c8b12":"scores = cross_val_score(knn, Xtrain, Ytrain, cv=15)\n","5d219cc3":"scores\n","8772af7a":"knn.fit(Xtrain,Ytrain)\n","b9dcfdea":"YtestPred = knn.predict(Xtest)\n\n","b6c560bd":"import numpy as np","679f4aa5":"accuracy = np.mean(scores)\naccuracy","3186a635":"id_index = pd.DataFrame({'Id' : list(range(len(YtestPred)))})\nincome = pd.DataFrame({'income' : YtestPred})\nresult = income\nresult","4ed77296":"result.to_csv(\"submission.csv\", index = True, index_label = 'Id')\n","42b77fa1":"<h1> An\u00e1lises Gr\u00e1ficas <\/h1>","bb6d79f7":"<p> Um dos t\u00f3picos mais importantes atualmente no que tange a renda \u00e9 a diferen\u00e7a entre sal\u00e1rios de homens e mulheres. Vemos que apenas 10% das mulheres ganham mais que 50k mensais, sendo que as mulheres representam 33% da base. <\/p> ","eed1df05":"<p> An\u00e1lise de Renda por sexo <\/p>","5b4d70ef":"<p> Correla\u00e7\u00e3o entre N\u00edvel de Educa\u00e7\u00e3o e Renda <\/p>","8356d464":"<h1> Data Preparation <\/h1> ","b5cbcb49":"<p> Correla\u00e7\u00e3o entre Idade e Renda <\/p>","d5590d22":"<h1>An\u00e1lise de Processamento da Base Adult Income<\/h1>\n<p> Foi obtida uma acur\u00e1cia de 0,8381 usando Valida\u00e7\u00e3o cruzada com 15 combina\u00e7\u00f5es e kNN com n=24 <p>\n","0a13d818":"<p> Podemos encontrar a seguir algumas an\u00e1lises gr\u00e1ficas da distribui\u00e7\u00e3o de Pa\u00edses, Idade, Sexo, Renda, Educa\u00e7\u00e3o, Ocupa\u00e7\u00e3o e sua poss\u00edvel correla\u00e7\u00e3o com a renda anual <\/p>"}}