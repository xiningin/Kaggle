{"cell_type":{"198f6e35":"code","e9c8c0b9":"code","06178954":"code","98662183":"code","41d852ba":"code","278d0ebf":"code","68fc0c1e":"code","eb60f30f":"code","9fefe7d9":"markdown"},"source":{"198f6e35":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e9c8c0b9":"!pip install apyori","06178954":"def inspect(results):\n    lhs         = [tuple(result[2][0][0])[0] for result in results]\n    rhs         = [tuple(result[2][0][1])[0] for result in results]\n    supports    = [result[1] for result in results]\n    confidences = [result[2][0][2] for result in results]\n    lifts       = [result[2][0][3] for result in results]\n    return list(zip(lhs, rhs, supports, confidences, lifts))\n","98662183":"dataset = pd.read_csv('\/kaggle\/input\/groceries\/groceries - groceries.csv', delimiter=',')\ndataset.head()\n","41d852ba":"dataset.shape","278d0ebf":"dataset.columns","68fc0c1e":"max_items = dataset['Item(s)'].max()\ndataset = dataset.iloc[:2000, :]\nsize = len(dataset)\ntransactions = []\n\nfor i in range(0, size):\n    transactions.append([str(dataset.values[i,j]) for j in range(1, dataset.values[i,0]+1)])\n    \ntransactions","eb60f30f":"from apyori import apriori\nrules = apriori(transactions = transactions, min_support = 0.003, min_confidence = 0.2, min_lift = 3, min_length = 2, max_length = 2)\nresults = list(rules)\nresultsinDataFrame = pd.DataFrame(inspect(results), columns = ['Left Hand Side', 'Right Hand Side', 'Support', 'Confidence', 'Lift'])\nresultsinDataFrame.nlargest(n = 10, columns = 'Lift')","9fefe7d9":"### Since parsing 9K+ items and adding them to the list will take a lot of time, I am taking just the first 2000 items"}}