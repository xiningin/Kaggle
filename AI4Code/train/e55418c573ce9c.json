{"cell_type":{"6c4dcd68":"code","5611bf39":"code","521ec564":"code","c86f631d":"code","e4a5c635":"code","993d2f9a":"code","7a8b7c9a":"code","0c088639":"code","1b800db3":"code","95600992":"code","a19c83f0":"code","3de96f3b":"code","0443582c":"code","65f06084":"code","791578bf":"code","eca8ab6a":"code","fa46a254":"code","9272349e":"code","d0014b77":"code","1dca4ab1":"code","f0825f12":"code","b641d730":"code","9ccc5afc":"code","055b3177":"code","a7170509":"code","3f28446a":"code","0835526e":"code","55b1685e":"code","cc770197":"code","62717ad7":"code","81fee698":"code","5bb33050":"code","53c07cc1":"code","60ac75a9":"markdown","a38038f1":"markdown","02eb952f":"markdown","8ddf9f2f":"markdown","87515813":"markdown","18934f00":"markdown","077e8410":"markdown","fbf17cf1":"markdown","093cddae":"markdown","3160c1c3":"markdown","f5517cf9":"markdown","c6196811":"markdown","67390974":"markdown","84d7b69f":"markdown","319c0c09":"markdown","0bcdeffe":"markdown"},"source":{"6c4dcd68":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5611bf39":"data = pd.read_csv('\/kaggle\/input\/big-mart-salescsv\/Train_UWu5bXk.csv')","521ec564":"data.head()","c86f631d":"data.shape","e4a5c635":"data.isnull().sum()","993d2f9a":"data.info()","7a8b7c9a":"data.plot.scatter(x='Item_Visibility',\n                 y='Item_Outlet_Sales',\n                 title='Visibility vs sales')","0c088639":"data.corr()","1b800db3":"data.groupby('Outlet_Identifier').Item_Outlet_Sales.sum().sort_values().plot.barh(title='Outlet vs sales')","95600992":"data.groupby('Item_Type').Item_Outlet_Sales.sum().sort_values().plot.barh(title='Item Type vs sales')","a19c83f0":"data.Item_Fat_Content.value_counts()","3de96f3b":"data.Item_Fat_Content.replace(to_replace=['LF','low fat'], value='Low Fat', inplace=True)\ndata.Item_Fat_Content.replace(to_replace=['reg'], value='Regular', inplace=True)\ndata.Item_Fat_Content.value_counts()","0443582c":"data.isnull().sum()","65f06084":"data.Item_Identifier.value_counts()","791578bf":"data.Item_Weight = data.Item_Weight.fillna(data.groupby('Item_Identifier').Item_Weight.transform('mean'))\ndata.isnull().sum()","eca8ab6a":"data[data.Item_Weight.isnull()]","fa46a254":"data.Item_Weight = data.Item_Weight.fillna(data.groupby('Item_Type').Item_Weight.transform('mean'))\ndata.isnull().sum()","9272349e":"data.Outlet_Size.value_counts(dropna=False)","d0014b77":"pd.crosstab(index=data.Outlet_Size, columns= data.Outlet_Type)","1dca4ab1":"data.Outlet_Size = data.Outlet_Size.fillna(data.Outlet_Type.map({'Grocery Store': 'Small'}))\ndata.Outlet_Size.value_counts(dropna=False)","f0825f12":"pd.crosstab(index= data.Outlet_Size , columns=  data.Outlet_Location_Type)","b641d730":"data.Outlet_Size = data.Outlet_Size.fillna(data.Outlet_Location_Type.map({'Tier 2': 'Small'}))\ndata.Outlet_Size.value_counts(dropna=False)","9ccc5afc":"data.isnull().sum()","055b3177":"Convert to numerical","a7170509":"data.select_dtypes(include=[object]).columns.to_list()","3f28446a":"drop_cols = ['Item_Identifier', 'Outlet_Identifier', 'Item_Outlet_Sales']\n\ncat_cols = ['Item_Identifier',\n 'Item_Fat_Content',\n 'Item_Type',\n 'Outlet_Identifier',\n 'Outlet_Size',\n 'Outlet_Location_Type',\n 'Outlet_Type']","0835526e":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","55b1685e":"for col in cat_cols:\n    data[col] = le.fit_transform(data[col])\n\n    \ndata.head()","cc770197":"from sklearn.model_selection import train_test_split\nx = data.drop(columns=drop_cols)\ny = data.Item_Outlet_Sales\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=0)","62717ad7":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet\nfrom sklearn.metrics import mean_squared_error","81fee698":"linear_model1 = LinearRegression()\nlinear_model1.fit(x_train, y_train)\ny_pred = linear_model1.predict(x_test)\n","5bb33050":"accuracy = linear_model1.score(x_test, y_test)\naccuracy ","53c07cc1":"rmse = np.sqrt(mean_squared_error(y_test,y_pred))\nrmse","60ac75a9":"two coins need cleaning","a38038f1":"Outlet_Size imputed using Outlet_Type and Outlet_Location_Type","02eb952f":"### Item_Fat_Content","8ddf9f2f":"### Outlet vs Sales","87515813":"### Insight:\n- Fruit and vege and Snack are among the top selling items\n- Breakfast and Seafood are not selling much","18934f00":"### Item_Weight","077e8410":"### Item type vs Sales","fbf17cf1":"Outlet_Size","093cddae":"Feature engineering Ideas:\n- Create a lebelled Visibility - low, high\n- Reduce Item_Type categories to food, drink, non-consuable\n- Operational year = 2013 - est Year","3160c1c3":"Item_Fat_Content is correctly labelled","f5517cf9":"## Data Pre-Processing","c6196811":"### Insight:\n- Outlet 27 is hightest sales\n- Outlet 10 and 19 are the lowest","67390974":"## Model Building \/ Train","84d7b69f":"### Insight:\nvisibility of less than 0.2 seem to have more sales","319c0c09":"all grocery stores are small","0bcdeffe":"Item_Weight is imputed with groups formed by Item_Identifier and Item_Type"}}