{"cell_type":{"b32f6d06":"code","675d8aee":"code","13d08673":"code","4d1485a0":"code","77d5bf77":"code","65e99c13":"code","4bdc2c90":"code","bdfb4a7f":"code","06f39d11":"code","d0136dea":"code","3dce730e":"code","0fba8de1":"code","ea7c0f2a":"code","683ea9d7":"code","f97a579b":"code","25d1d999":"code","69ae0be2":"code","1f02c519":"code","fc936e90":"code","41e48909":"code","d97da516":"code","0f32f292":"code","38fb9d8b":"code","19003fe6":"code","61cd6988":"code","9b9d6863":"code","0b3b2344":"code","3f287f2e":"code","c67ff2c3":"code","0e596f92":"code","13f3cb85":"code","4d8bf71a":"code","653c9310":"code","2ef7f590":"code","ae3441f2":"code","00efc6e9":"code","c0c81c9f":"code","b17f596e":"code","f7135d2e":"code","996bb6cf":"code","807a794f":"code","ba286411":"code","faff56c1":"code","a07d8ae8":"code","a46294aa":"code","af135367":"code","c4004433":"code","0b131d2d":"code","8a65fc70":"code","5c37b370":"code","2ebda050":"code","c4c822bd":"code","27ed7edd":"code","f1a93fa8":"code","97a64d22":"code","13103c70":"code","0b1e31d7":"markdown","ff5a3c1e":"markdown","6057f470":"markdown","2d010720":"markdown","dade9d7f":"markdown","dda378e2":"markdown","52a2ed0a":"markdown","7049e665":"markdown","c8743c46":"markdown","88682382":"markdown","5c8408d7":"markdown","c2d7838e":"markdown","b5d19560":"markdown","51f29972":"markdown","922dd734":"markdown","14b3db6c":"markdown","6b674f33":"markdown","d5ac4998":"markdown","7f80d8fa":"markdown","975bae67":"markdown"},"source":{"b32f6d06":"import pandas as pd\npd.set_option('display.max_columns', None)\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom math import pi #Used in Radar Plots\nimport seaborn as sns\nsns.set_style(style='darkgrid')\nimport warnings\nwarnings.filterwarnings('ignore')","675d8aee":"fifa_20 = pd.read_csv('..\/input\/fifa-20-complete-player-dataset\/players_20.csv')","13d08673":"fifa_20.head()","4d1485a0":"fifa_20.shape # To check no of rows and columns","77d5bf77":"col = list(fifa_20.columns)  # To print all the columns\nprint(col)","65e99c13":"useless_column = ['dob','sofifa_id','player_url','long_name','body_type','real_face','nation_position','loaned_from','nation_jersey_number']","4bdc2c90":"fifa_20 = fifa_20.drop(useless_column, axis = 1)","bdfb4a7f":"fifa_20['BMI'] = fifa_20 ['weight_kg'] \/ (fifa_20['height_cm'] \/ 100) ** 2","06f39d11":"fifa_20[['short_name','player_positions']]","d0136dea":"new_player_position = fifa_20['player_positions'].str.get_dummies(sep=',').add_prefix('Position')\nnew_player_position.head()","3dce730e":"fifa_20 =  pd.concat([fifa_20,new_player_position],axis = 1)","0fba8de1":"fifa_20.head()","ea7c0f2a":"fifa_20 =  fifa_20.drop('player_positions',axis=1)","683ea9d7":"columns = ['ls','st','rs','lw','lf','cf','rf','rw','lam','cam','ram','lm','lcm','cm','rcm','rm','lwb','ldm', 'cdm','rdm','rwb','lb','lcb','cb','rcb','rb']","f97a579b":"fifa_20[columns].head()","25d1d999":"for col in columns:\n  fifa_20[col]=fifa_20[col].str.split('+',n=1,expand = True)[0]\n\nfifa_20[columns]","69ae0be2":"fifa_20[columns] = fifa_20[columns].fillna(0)","1f02c519":"fifa_20[columns] = fifa_20[columns].astype(int)","fc936e90":"columns = ['dribbling','defending','physic','passing','shooting','pace']","41e48909":"fifa_20[columns]","d97da516":"fifa_20[columns].isnull().sum()","0f32f292":"for col in columns:\n  fifa_20[col] = fifa_20[col].fillna(fifa_20[col].median())\nfifa_20[columns]","38fb9d8b":"fifa_20 = fifa_20.fillna(0)","19003fe6":"fifa_20.isnull().sum() #Verifying it Should be all zero","61cd6988":"sns.relplot(x='overall',y='value_eur',hue='age',palette = 'viridis',size=\"BMI\", sizes=(15, 200),aspect=2,data=fifa_20)\nplt.title('Overall Rating vs Value in Euros',fontsize = 20)\nplt.xlabel('Overall Rating')\nplt.ylabel('Value in Euros')\nplt.show()","9b9d6863":"sns.relplot(x='potential',y='wage_eur',hue='age',palette = 'viridis',size=\"BMI\", sizes=(15, 200),aspect=2,data=fifa_20)\nplt.title('Potential Rating vs Wage in Euros',fontsize = 20)\nplt.xlabel('Potential')\nplt.ylabel('Wage in Euros')\nplt.show()","0b3b2344":"plt.figure(dpi=125)\nsns.countplot('preferred_foot',data=fifa_20,palette='Blues')\nplt.xlabel('Preferred Foot Players')\nplt.ylabel('Count')\nplt.title('Count of Preferred Foot')\nRight,Left=fifa_20.preferred_foot.value_counts()\nprint('Left Preferred',Left)\nprint('Right Preferred',Right)\nplt.show()","3f287f2e":"plt.figure(dpi=125)\nsns.countplot('international_reputation',data=fifa_20.head(100),palette='Blues')\nplt.xlabel('International Reputation')\nplt.ylabel('Count')\nplt.title('Count of International Reputation of Top 100 Players')\nplt.show()","c67ff2c3":"plt.figure(dpi=125)\nsns.distplot(a=fifa_20['age'],kde=False,bins=20,color='red')\nplt.axvline(x=np.mean(fifa_20['age']),c='green',ls='--',label='Mean Age of All Players')\nplt.legend()\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.title('Distribution of Age')\nplt.show()","0e596f92":"plt.figure(dpi=125)\nsns.distplot(a=fifa_20['BMI'],kde=False,bins=20,color='green')\nplt.axvline(x=np.mean(fifa_20['BMI']),c='black',ls='--',label='Mean BMI of All Players')\nplt.legend()\nplt.xlabel('BMI')\nplt.ylabel('Count')\nplt.title('Distribution of BMI')\nplt.show()","13f3cb85":"plt.figure(figsize=(12,6),dpi=125)\nx=fifa_20['weight_kg']\ny=fifa_20['pace']\n\nsns.regplot(x,y,color='orange')\nplt.title('Weight vs Pace',fontsize = 20)\nplt.xlabel('Weight')\nplt.ylabel('Pace')\nplt.show()","4d8bf71a":"plt.figure(figsize=(12,6),dpi=125)\nx=fifa_20['BMI']\ny=fifa_20['pace']\n\nsns.regplot(x,y,color='skyblue')\nplt.title('BMI vs Pace',fontsize=20)\nplt.xlabel('BMI')\nplt.ylabel('Pace')\nplt.show()","653c9310":"plt.figure(figsize=(14,7),dpi=150)\nsns.countplot(x='nationality',data=fifa_20.head(20),palette='CMRmap')\nplt.xlabel('Nationality')\nplt.ylabel('Count')\nplt.xticks(rotation=45)\nplt.title('Which Country has Max players in Top 20?',fontsize = 20)\nplt.show()","2ef7f590":"plt.figure(figsize=(14,7),dpi=150)\nsns.countplot('club',data=fifa_20.head(20),palette='CMRmap')\nplt.xlabel('Club')\nplt.ylabel('Count')\nplt.xticks(rotation=45)\nplt.title('Which Club has Max players in Top 20?',fontsize = 20)\nplt.show()","ae3441f2":"plt.figure(figsize=(14,7),dpi=125)\nsns.countplot('team_position',data=fifa_20.head(20),palette='CMRmap')\nplt.xlabel('Player Position')\nplt.ylabel('Count')\nplt.title('Which type of player comes most in Top 20?',fontsize = 20)\nplt.show()","00efc6e9":"plt.figure(figsize=(14,7),dpi=125)\nsns.countplot('age',data=fifa_20.head(20),palette='Blues')\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.title('Which age belongs to Max players in Top 20?',fontsize = 20)\nplt.show()","c0c81c9f":"column_r=['short_name','overall','potential','pace','shooting','passing','dribbling','defending','physic']\nrival = fifa_20.head(2)[column_r]\nrival= rival.set_index('short_name')\nrival.head()","b17f596e":"values = rival.iloc[0].tolist()\nvalues += values [:1]\nvalues","f7135d2e":"values2 = rival.iloc[1].tolist()\nvalues2 += values2[:1]\nvalues2","996bb6cf":"def RadarChart(player, data, player2, data2):\n    Attributes = [\"Overall\",\"Potential\",\"Pace\",\"Shooting\",\"Passing\",\"Dribbling\",\"Defending\",\"Physical\"]\n\n    data += data [:1]\n    data2 += data2 [:1]\n    \n    angles = [n \/ 8 * 2 * pi for n in range(8)]\n    angles += angles [:1]\n    \n    angles2 = [n \/ 8 * 2 * pi for n in range(8)]\n    angles2 += angles2 [:1]\n    plt.figure(dpi=125)\n    ax = plt.subplot(111, polar=True)\n    ax = plt.subplot(111, polar=True)\n    \n    plt.xticks(angles[:-1],Attributes)\n\n    ax.plot(angles,values)\n    ax.fill(angles, values, 'teal', alpha=0.1)\n\n    ax.plot(angles2,values2)\n    ax.fill(angles2, values2, 'red', alpha=0.1)\n\n    plt.figtext(0.1,0.98,player,color=\"steelblue\")\n    plt.figtext(0.1,0.94,\"vs\")\n    plt.figtext(0.1,0.9,player2,color=\"darkorange\")\n    \n    plt.show()","807a794f":"RadarChart(\"Messi\",[94.0, 94.0, 87.0, 92.0, 92.0, 96.0, 39.0, 66.0, 94.0],\"Ronaldo\",[93.0, 93.0, 90.0, 93.0, 82.0, 89.0, 35.0, 78.0, 93.0])","ba286411":"column_r=['short_name','age','team_position','overall','potential','pace','shooting','passing','dribbling','defending','physic']\nriv = fifa_20[column_r]\nriv = riv.set_index(['short_name','team_position','age'])","faff56c1":"def Radarchart(player, data, player2, data2):\n    Attributes = [\"Overall\",\"Potential\",\"Pace\",\"Shooting\",\"Passing\",\"Dribbling\",\"Defending\",\"Physical\"]\n\n    data += data [:1]\n    data2 += data2 [:1]\n    \n    angles = [n \/ 8 * 2 * pi for n in range(8)]\n    angles += angles [:1]\n    \n    angles2 = [n \/ 8 * 2 * pi for n in range(8)]\n    angles2 += angles2 [:1]\n    plt.figure(dpi=125)\n    ax = plt.subplot(111, polar=True)\n    ax = plt.subplot(111, polar=True)\n    \n    plt.xticks(angles[:-1],Attributes)\n\n    ax.plot(angles,value)\n    ax.fill(angles, value, 'teal', alpha=0.1)\n\n    ax.plot(angles2,value2)\n    ax.fill(angles2, value2, 'red', alpha=0.1)\n    plt.figtext(0.1,0.98,player,color=\"steelblue\")\n    plt.figtext(0.1,0.94,\"vs\")\n    plt.figtext(0.1,0.9,player2,color=\"darkorange\")\n    \n    plt.show()","a07d8ae8":"# Let's find values for De Bryne - Man City's Midfielder\nvalue = riv.iloc[5].tolist()\nvalue += value[:1]\nvalue","a46294aa":"# Let's find values for Modric - Madrid's Midfielder\nvalue2 = riv.iloc[8].tolist()\nvalue2 += value2[:1]\nvalue2","af135367":"Radarchart(\"De Bryne\",[91.0, 91.0, 76.0, 86.0, 92.0, 86.0, 61.0, 78.0, 91.0],\"Modric\",[90.0, 90.0, 74.0, 76.0, 89.0, 89.0, 72.0, 66.0, 90.0])","c4004433":"# Let's find values for Ramos - Madrids's Defender\nvalue = riv.iloc[18].tolist()\nvalue += value[:1]\nvalue","0b131d2d":"# Let's find values for Van Dijk - Liverpools's Defender\nvalue2 = riv.iloc[7].tolist()\nvalue2 += value2[:1]\nvalue2","8a65fc70":"Radarchart(\"Ramos\",[89.0, 89.0, 72.0, 68.0, 75.0, 73.0, 87.0, 85.0, 89.0],\"Van Dijk\",[90.0, 91.0, 77.0, 60.0, 70.0, 71.0, 90.0, 86.0, 90.0])","5c37b370":"# Let's find values for Kane - Tottenham's Striker\nvalue = riv.iloc[12].tolist()\nvalue += value[:1]\nvalue","2ebda050":"# Let's find values for Aguero - Man City's Striker\nvalue2 = riv.iloc[17].tolist()\nvalue2 += value2[:1]\nvalue2","c4c822bd":"Radarchart(\"Kane\",[89.0, 91.0, 70.0, 91.0, 79.0, 81.0, 47.0, 83.0, 89.0],\"Aguero\",[89.0, 89.0, 80.0, 90.0, 77.0, 88.0, 33.0, 74.0, 89.0])","27ed7edd":"from wordcloud import WordCloud","f1a93fa8":"plt.subplots(dpi=150)\nwordcloud = WordCloud(background_color='white',width=1920,height=1080).generate(\" \".join(fifa_20.head(20)['club']))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","97a64d22":"plt.subplots(dpi=150)\nwordcloud = WordCloud(background_color='white',width=1920,height=1080).generate(\" \".join(fifa_20.head(20)['nationality']))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","13103c70":"plt.subplots(dpi=150)\nwordcloud = WordCloud(background_color='white',width=1920,height=1080).generate(\" \".join(fifa_20.head(10)['short_name']))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","0b1e31d7":"<img src=\"https:\/\/media0.giphy.com\/media\/gIeVrITp1dnLrtJINn\/200w.webp?cid=ecf05e47qrlur0yn6weaopqy6mwz7zsdr0ddifn91ojtduqw&rid=200w.webp\">","ff5a3c1e":"# **1. Importing Libraries & Data Exploration** <a class=\"anchor\" id=\"1\"><\/a>","6057f470":"<img src=\"https:\/\/media3.giphy.com\/media\/l0HlGbzmlTORWvmYo\/200w.webp?cid=ecf05e47fe28lkkh6bvz6u9gc0xwgxnf6jiyjwq8b6e64h49&rid=200w.webp\">","2d010720":"Now let's compare top two Midfielders as per the dataset i.e **De Bryne** and **Modric**","dade9d7f":"<img src= \"https:\/\/media1.giphy.com\/media\/TjAcxImn74uoDYVxFl\/200w.webp?cid=ecf05e47ohf8grax3pqbkyqlg3nbmlkid6a7hde9kosfzlkx&rid=200w.webp\">","dda378e2":"\n\n---\n\n![images.jpg](data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxIQEBUPEA8WEBUXGBUYGBYVFRUVFhYdHRgXFxgWGBUYHSggGBonGxgXIjEiJik3Li4wGCAzODMtNygtLisBCgoKDg0OGxAQGi8lHyUrLSsrLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tLf\/AABEIAJwBQwMBEQACEQEDEQH\/xAAbAAEAAgMBAQAAAAAAAAAAAAAAAQUDBAYCB\/\/EAEgQAAIBAgQDBQQGBAwFBQAAAAECAAMRBAUSITFBUQYTImFxMoGRoQcUI2KxwUJScrIVFhczNVOCkpPR0vBDc8LT4SQ0VIOi\/8QAGwEBAAMBAQEBAAAAAAAAAAAAAAEDBAIFBgf\/xAA8EQACAQIEAggFAgQFBQEAAAAAAQIDEQQSITEFQRNRYXGRobHBIjKB0fAG4RYzQvEUIzRigiQ1UlNyFf\/aAAwDAQACEQMRAD8Aq5Xc\/UhFwIuBAEkCAIAgCAIAgCRcCSBAEAWgC0AQBAEEiSBAEAQBAEAQBAMGLxApre1yTZR1P+U5bsVVamSPbyK+lkpxD6qrluR3so8gOkzTrWeh4OLhmlebu\/JFmexmHK7bH1P+c4VeSPOlQpvkUeYdlGpMGoVdJHAk7emocJbCvfc6p4G\/xUpWkixyjGmqpWoNNRDpdfPr6GaE7n0mBxTrQtNWktH9zfkm4QBAEAiATAEAQCZwQRAEAQBAEASQIAgCAIBMgCARAEm4EASQIAgCAIAgXEEiSBAEAQBAKPEVC+IO\/hTYdBb2j8fwmapLVmCUr1HJ7L8Zf5ZV0rrfDYlqd9mSiWB87Eg28ztKFSb5o8CviFmb18DpsPh8PVQVadYaSOJ8Nrcbg8JDhZ2KlV0vYoczNHfusQj22KhwSPdOowkuRfQqpT3OYU6MYrDhUXS3rxB9drTTCWp7KjkxMai\/qVn7F5Lj0xAEAQBAEAQBAJvKyBAEAQBJBEAQBAEAQSTBAgCAIBEAQBAEkCAIAkgQBAEAQLiCRAAkg0chw4cl2W5JJA6kn\/OYKjPMxLtQst2dPQpYxRqOIpqgF7BTcHex1Hlw2AuesLK4nz7U3PV+RqY7E6gXbZWqC+1vDqGr5SEtS+ULKxlzcIuz5dTZLX7xURivLSRbVfnfgZar20kYmvis4\/U5TMaBWvT3v41INrbXFuHl+E7jrY+hw8nOnTb3TLiaD2BAEAQBAEAQBAJlRAgC0AQBJBEAQBAEAQBAJkAiSCYAgCARJAgCCRAEkCAIIEAQBJAgHnui5VFJDEi1rC\/M3J2AC6j7pVUbsrFGIqOlHNy5m52TQBTtwJHDcb258JkqHlYybslyL3MVp06ZZzfhte21xf5X98hJGGM3fsKM5kHoUadVqZRnfWq0mUqovYKAxIYm295bazKY1He9\/wCxfLRZaCB21WRbnlfSL28rys6snLQ4fMfFiU5hbk+QA4\/G0vg0rXPZw+ih33N4G+43mk9YmSBAEAQBAEAQBKSBAEAmAIAgCSSIFiIAgCCCZAEkCAIAgESQIAgCAJJIgXEAQBAEkCAeHphit7+Fg2xK8L23G443904qRcloV1IZ42MGQY8U67UyTvUYDY7+I2uLm3xMxVIs8TEL4bPdHTZjlzuNelHPEmo7Kii+wCAb7cyeZkxsecmr6lV9Tap\/wUqLq3fDupKnjwJHraWadZMuja0N7GVXpJ3TNqFyFPC448OU4itdDqkr7nN5eVarVqtfwd2qbXVnNRGKtytoVvfbpLbX0PRipSqRgtuf54G+Tfeaj3ErKwkgQBAEAQBAEAmUXAi4Igg6HIOyNbFL3zsMPR494\/Fh1VdtvMm3rO1G55GO4xSw8ujis0+pcu\/7I32oZJR8L1auKYcShe3xp6V+c6+FGFV+LVtYxUV3L3uwtLI63hWpWwpPAsalvi+pfjHwsOrxelrJKS7l7WZpZ72QrYdO\/pMMVR4604gdSovceY+U5cbamzBcZp1pdHUWWXU9vzsZzgM5PaEAQBAJkXIEkEQBAEEkwBJBEXAgCSQIAgCSSLwBIAkgQCgrVxQxRdhdb399gfx\/GZqkczaR4uMvTqO+z\/PU63J+19NxYizHYX3B6A+e4E4VOUTxVUhIsDmuHoa0sEIO9hxJANh14jykOEmM0Ucv2tzdStNqbXDBvy3\/ACndOLV7l0J5WnyMWSUStEE7FzrP5fL8ZpjFI+iwVO1NSktXqb07NhMAiAIAgEwBAEkCZwTAOj7GZKld3xGIsMPQGp7+yxA1aT90Dc+4c5ZBX1PG4vjp0YqlR+eW3Yvv1GLN84rZriFop9nRLWp0ydKgD\/iVOpsL24DgN9ycm3YrwuCpcPoutPWVtXz7l+a8zf8A4g1P\/mYf4mMnaV\/\/AL8P\/VIrK3Zir3lWnSdMQaKB6hp3sL7imDbxPa5tIys1w4tScIyqJxzOyv693IxdmO0dTBOGQl6JPjpX2I5svRvx5+SMrHXEeG08XC+0uT9n2enI3+2uT06Rp4zDWOHr7i3BGI1WHQEXNuRBHSTNc0ZuD42c74et88PNfsUuWZbVxNTuqCa2tfoAOrE8BOUmz1cTiqWGhnquyL7+T7HdKP8AiH\/RO+jZ5f8AEOE\/3eH7mpS7IYpq74YCn3iKjt4zps17WOnc7dJGR7F0uM4dUlV1s21t1fU1amQYgYr6kED1QASEa6gEA3LG1hYic5XexdHieHdDp27R7d\/DUtv5P8d0o\/4h\/wBM66NmP+IMJ\/u8P3KnGdn8RSxK4MoHqsoYLTbULEsLliBb2TxkZXc2UuJYepRde9op21\/H1lr\/ACf47pR\/xD\/pnWRmP+IMJ\/u8P3KHNcsrYWp3VdNDWuNwVYdVYcROWrHpYXF0sTDPTd15rvLTLex2MxFMVUpqqtuvePpLDkQACbeslQbMeI41haM3Bttreyv7o1867NYnBqHrUxoJtrRtSg8gdgR8LQ4tFuE4rhsTLLB69TVjLlPZLF4qmKtKmqofZNRtOrzUAE284UWzjE8YwuHnkk23zsr29Cc17I4zDUzWqU1ZF3Y031aR1IIBt5iS4MjD8ZwteahFtN7XVr+po5PlFbFuadBQzKuo3YKLXA4n1kJXNGNx9LCJOpfXqX7otv4h4\/8Aqk\/xVnWRnn\/xDheqXgvuYsT2KxtNGqPTQKqljaoDsBc7ekZWdQ4\/hZSUUpa6bL7nPA3nB7ZMm4EXBEAQDWp5YuJ7wN+t7xbaZnK0meXj3GSys0W7GYj2sM+vyuA3G\/MWO4\/3zsjVT3Pm61DI7xZhbspjzsysF5lmTlc8QT8J10kEUKnOT3MQ7Pad3cuFG3Tbl+chzR6mFwscyzu9joV4D0EuPq1sTAEAQBAEASQIAgEzPcCAdhmzfV8jw9JdjiXDMeoN6n5IPSXPSJ8zRXT8VnKX9Gi+mn3Zj7H5Hg8TQq1MVr+zuWa5Smi2vbUD4msCx6Aj3oJNFvFsdisPVjCjbXbm2+7kuXaV2NXKKiaMDh61Su5C0wxYC5Nr7nf0+MNrkd0ZcRjLNiJJQWr0Wx2WV03wLUMtwaLVqfz2KY7KFOxF+TE20jovnedLTQ8PETWLz4ms2o\/LBfnn2s5ft5kP1TEd4gtRrEleiPxZPIcx7xynE421Pe4Jj+npdHN\/FHzXJ+zNzJG+sZNi8O2\/cXqJ5ADvQPir\/GTHWNjNjo9BxKlVj\/Vo\/T0aN\/6JVH\/qGtv9kL\/34pFH6kbvTXf7E9ocyzdcXVXDpU7kEBCtEMCNK3Oojfe8mTlfQpwWH4dKhF1pLNz17SPo4zCricZiKtdtb91TBNgvBmsLCIO7LON4anh6FOFPa79EXmUqP4Xxxtv3eFHxVr\/gJ0vmZ5ld\/wDQ0V2y9io7TZjmy4uomFR+5GjQVohgfApY6iDfxFh7pzJyvobcBh+Hyop1pLNrfW3M1uwGOq4nMKlXENrqLQKX0hSAKg2sOdyZEG29TRxjDU8PhIwpfK5X8ixzbtBiKec0cGtQCkwS66VJOrXffjyE6bd7GKhgaU8BOu18SvbyNL6XUBXDHneqL+RCf5CRUNX6bbU6i7F7mvmXbyrXVKGAovSqlgBcI+oWPhUct7G\/IAxnvsWU+BxpOVTEyTjbtR0vbSroymr35XvDSVTbgaht7I\/a3906lseTw6N8dHo9s1\/p\/Y95xjHw2U97RIR1pUdJsCBfQvA+Rhu0SKFGNfG5J7OTv5nvsvjqmKy0Va5Duy1QxsADZnUbDbgBCd0MdQhh8W4U9k16JnAfRvRep9Zp0m01GwjqjXIsxsFNxuNyN5zDc9v9SfJT737HQ1OyOO1UVGLPdquF737bEXYocSaxA138XeUR7W+jyAlh8mbGCyvGUcNjWxjh9dKo6aa1SoELq3eUwGUDQNKaT5twvIexbQ\/mx716ny+lwEoP02Ox7gkQBJBB4E9ASfQAkn3AGSlc5lJRV2bfZKzhmtbUzbe87TDN3lc8TGyvqdNl1Ipf1O0lM8ytaViM7xBKnTwt851cqpQs9Tk8TR00TfjIveSPQpO0jHTptoQlSNSK49GBsffY\/CbWrHv0q0Jxun2fUCC4QBAEASQIAgCATMwBgHX9pB3mTYGqu4plUby8LJ+8oHvl8tYJnzWCfR8TrRfO7Xjf0ZuZHj8Th6GHoUe4C1NB8VCu1y9M1SdYfTUbaxAtbgOElNpGfG0qNatUqTzXjf8AqjydtrXS6uvfmby59jAwBbCpqNIU74eurM1RXYKy6709kPHqJKkZf8Hh3G6zO17\/ABR2TSunbXc5TEZO9XTiq2JscQaLMxpVAL1lLIqm9ntspA9nacNc2e1SxdOmnRhTvkzc1\/S9b9V9+03aS1PqVbCd8lajTqVAC1CszIyBXazK32Y1E2LA3OrlJ5WM7dNYqFZRcZNJ6SjZpuy5a6b27OZl7LfZ5XmFc8GU01J2udDKPnUAiHyscTfSY6hTW61fj+xY\/RGNsR\/9X4PJpczP+pN6fc\/Y9Z92+rYfFVcMuGRxTYDUWYE3VW4AecmU7MrwPBIYijGq5tX7O00\/om\/9xiP2E\/eac0zV+oo5aNNdr9EdNlH9L47\/AJeF\/dadr5meLX\/0NHvl7FT2j7d1sLi6mGTDo6posxZgTqRX4AfekSqWdjdgOCxxNBVXNq9+XU2is+i5tWNrMdtVNm+NRT+c5pu7N3H4ZMLTj1O3kdNVzylRzNsK9NmeqKOlgF0rs43JNxwnd7M8SODqVMH00XpG9\/IpvpeayYY\/eq\/gs5qHo\/pv+ZPuRbZJk+HyrDNiq7DXpBqVDyvb7NB62G27G3lOopRRjxuNrcQrKlD5b6L3f5ofOe1HaOpj6hdjpprfu6V+H3m6uflwHnXKTZ9Pw3h0MJDrk937LsPo\/az+hW\/5VH96nLH8p8tgf+4r\/wCn7nrsH\/RKelb995MflHFv9fL\/AI+iOQ+iWkGruD\/UjmR+kvScQ3Z636k+Sn3v2OlfOaik3VDzGlMadrjiQvHxAfH9UiWnyZtPiRXwOJLLpdKdQG3fhf5skEd4ATzkPYtofzY969T5FS4CUH6bHY9wSIF0ty2yPInxJ31IvXTx9L\/jw5+Usp08yvc87GcRjh1pZvv+x2f8TqKrakNIanXR2Zmc+On3YK34WuTYWHHrOpQ5Lt8z5mXFas287vrFpctHc47IcC1F3puukh2BHTfhPMkrOx6WIqqpFNbWOnWnbcSUec3cxYihrG8k6i7MqMTkr4pxQp7XI1NwCLzY+fGw5mTTi5S0LJ11RjmZ0dbsyrrUFXvF1ONAoVnpFKdNe7pLrW36N2IO12OxsDPTS6\/zqPMlWc4xjfRer3OfxfZFg1xjtXDw16SMx9a1EI1\/Ng3oYcLm+hj8VT+STa6nqvz6lTiOz2KQ7CjUX7tY6\/7r01B+M4cD1aXG5ydp0\/B\/f7mm2Fqj2qLrb7t\/fdSROG7Hq08bSnzt3mEQayYAgCAIBMzkCAdf2KxVOvRq5VXNlq3akejcSBfmCA49DLqbusrPnOMUalGrHG0l8u\/d9uT+hU4rGYnBVPqz06dN6ZTxBCO9CK1NHJv4hpZjcWN+O4Mhtx0NdHD4fGR6VSbTvz2u02ttNvDbQ0sBmtWjfTpclle9QFyrKrKHU342Yje48pypWNdbAUqtr3WltNLpu9tuwNmlUqiEqRTNEpceyaS6VI35jZuvlGZhYCkpOSvd5r\/8tX4cuo2cpxGIq1TRoUqb1arVW1FPEneDTUIa\/hSx53tfbcyYtvYpxdChSpqdWTUYpK198uq05vut26Iuu2denhcNSyig2rTZ6zdT7QB8y3itysvWdzdllPN4VTnicRLGVFvpH87Fp4mt2L7TUsv73vadSpr0W7sIbW1XvqYdZzCajuauL8Nq4xxdNpWvvf2TKbPMcuIxVbEIrKtRgQGtqFlVd7Ejl1nMpXZv4fh5YfDxpy3XV3ss+xnaGngKlSpVpvUDqqgUwpIsSd9TDrJhJRMnGMBUxkIqm0rN739ky2wPbehTxuIxZo1itZaKqoFPUCgIOoa7W32sZ2qivc82rwWvLDwpKUbxcuvn9Dme0WYrisXVxKKyK+iwewYaUVDexI4qecrnK7ue1w3DSw2HjSm9VfbtbZu9js9p4Gs9WqjuGTQBTCk31KbnUw22k05KL1KeLYGpi6cYQaVnfW\/V2JmXMO0lOrmdPHinUCIEupCazp1XsA1v0uslzWa5RQ4bVhgZ4dtZnfrty7Ow9duO01LMFpLSp1KeguT3gQX1BQLaWPSTOaZzwnhlXCSk5tO9tr+6R05+kvC2scNiD\/Zo\/wDcnfSo8l\/p7E3+aPn9iuz7t1hsThauHTDVlaohUFlpAAnmSHJ+Uh1FY04TgmIo1o1JSVk77v7E5F9Ia0qC0cTQqOUUKGp6DqAFhqDMLG3rCqK2pOL4BOdVzoyVm72d9PBM9Zx9IyPRalhsPURmBXVU0AJfa4CsbnpDqK2hxhv0\/UVRSqyVlrpfXxSOb7HZ6uX1WqNSaoGTQApUEbg339JxCVtz1eLcPqYuMFBpWvvf2TLU9q8Dx+oYgX32rsN7Wv8Azm0s6RHhfw7if\/KPn9jNV7cYf6vVw9LB1k7xWW7OrblNAJJYnhb4Q6isWU\/0\/iIzUnKOjT5\/Y4lBYWlJ9itEXOWZBUrEXIRefMgdDyB8uXMcAbIwbPPxPEYUdErv8\/PQ6\/A5Dh10hMOjMu4qNTFSpf7rNcL67S9Qij5vE4qpVearLuV7JeBtVs9wlAlGxFNWW+pQ\/eOOpZaeog9bxKpFbsxuM56q7+mnsWOS5vRxCd5Qqiql7Ei4seNiGAI4iRGSkrpmerSlHdWZkx2SU6p1jwt+sPlfrK6lKM99yaeJnDTkan8COBYFT8R+Uz\/4eRZ\/i4t3sz1SyQ\/puB6bn5zpYd82JYtckbdOjTorpQefUk9SeZmmEFFWRS5SqSvI1amp+ZA+HyE7Lk4wMP1FOe\/4fCTch15cie7A9lbegkFTk+s0sZg9W\/CLJmijiHA4zPsJpa9t+vX18\/OU1I5dT6rh2KzLKUs5PYJgCLgRcEzOBAA2IIJBG4INiCOBBHAybnMoqSszscL2mw+LpLh81p3K+zXUG44bnTup6kbHmBLlNSVpHzdbhmIwlR1cE9Ocfzf1PQ7DU63iweY06qngGsT8UP5R0aezJXHalL4a9Fp+Hr9wewqUvFi8xpUlHHTYH+85\/KOiS3YfH51NKFFt\/nUvc84ntNhcFTahldPU52bEOD8Rq3Y9OCi\/OM6irROKfDsTjJqpjHotor809TjmYklmJZiSSxNySeJJ6yq9z6SnTjCKjFaCQWCCAIBMgCSCIAgCAIAgkSQIAgCAQTJB0OS5A7VPtBpI2tzHvmilS5yPHxnEYKHwHe4HLkRQLbDlylzfUfL1sTKcrmHtRjzhsDXrJsUptp8mPhX\/APRE4m7RbKaazzSfWfFcmwlUYPENTB0\/ZjUOQGoOb+YYDz36Tz1ezZ7NWaTSPpX0T0tODqKf64n406c0YV3i+88zGu813e7O3RyvOajE0mezXkEZUY3qkySbIxEQSY2EE3MNR1BALAHpeVyrU4u0nYKMmrpHoiWHBhxRshI47AepIUfMiEdwV5FJnGW97qQffAPLwAKSTy8V\/hOmlJWZ6eDxLpNS7vP9jhcwVVrOiX0hjpJ5\/rG3Lc8Olpj+WTifY4WUpUYylvz7DBJLxAEA9TOBJAgCAeGpKeKg+6LkWIWgo4KB7ouMqMloJEAQBAEAQCZAIkgQBJAgCAIAggQBAPdClrYL1O\/pz+U6irtI5nPJFyPqWU2dEqc9IVvVRp39QAffN22h8PifhlKHK913PUtDIMEjQ7R5UcXg62GUhWdbKTwuCGW9uVwJxOOaLR1RmoTUnyZ86yvKsRf6iMGUcCx10wFAtoNVq1yDcFjdb78NwAMeSd8tjfOrB\/Hm8\/K2nmfSsiyhcHQFBTqNyzNa2pja5tyGwAHQDjxOynTUI2R59So5yzM3TOzg8mARAPQEA18wxIo02qsL2tYcLkkAC\/LciV1Kipwc3yJjFyeVHBYZKWLquq6\/rOo3S6BV3vYhgaltLEkXuAx9ncDyXhXLXK7ttrX4d7PXfR6O27201NyxU4q2bRePht+a6nX5ZjRVoh9Ogi6kcgV6X5Wsffz4z1aE1Ommlbl4GKpBxk0e8TUACE8O8Qn0S9U\/uS0mEXr3eunuamYsBRekfa0IlQjkajqGUeZLsT7pJoo\/Opcr3X0R867X\/ZU6VYbF8RW96hVZh8WtM9ZJNS7WfRUMVKLUIvlH39UjVBnB75MEkQD1M5yIAgkSbgRcCLgQBFwIAgCAIuBAEASQIAgCAIAgCAJINnLL96lhfcA+jHQT7tV5ZS+ZGTGytRf5tqfRsgew08j+M2N3PkMWrvMX6jaQYJEVay00Lteyi50qzn3KoJJ8gIbsrnCV3ZHJZd2jrtjNVUd3QYOhRmS1FkZ9NUMbF0dQdxfcNyUXzxqPNrsaalGEYaavfvvbTvR2BmgymJ5JB4kAkQSZFEAw5jglr0mpMbA23HEEEEH4iV1aaqQcXzJhNwkpI5bOuy1SsVZPsKiMjCqrggWN2YArqDEeXhubHeUxoyjPOt7W306+q++tr2uWOacbe372+pvVaH1egKdM6iCWa50l73J33072t5C1+cthRyQUYciym1Od5cyrw2YmoNmHgYsUcjUPA6EXGzDx3t8+crVaSdpL7m2ph48ufNbfdBcaKqaQ16jVGqVFv4lADOdjuR3jooPA6duEvhOM9ivo5U5fEuVl1fljnfpMwdqNMAX+rKha361Usawt5J3R98irG6bNOFm2nU7b\/RK3uzn8uq66KNwuo4zMtj63Dzc6UZPmkzZklxEA9yggQCIAgCAIAgCAIAgCBYmARAEAQQIJEm4EXAgCSBAEAyUWdfFS3bXSXhfYuCxt5BSfS8spnm8Sk1BJH0HA1dg48jNlj5qorto6ai14POaPONwCV1CVASoIawNr29Jy433OYzcHdGKnkuGQaRQUj73j5kn2r8yT6m8KEVyIlUlLVs3CJ2cHhhAMdpAPQEA9iAerwDBiKoAgmKucH2wzjQhAMmTyo9XDUebOIynHksSWOxZiAd\/Ya1r3v4gg98ztKS1NU78i4wWIXEKq16YPMOLnf8VMxOz3Ok2noTiqDMGpd67hrk+PxHZV9s3\/AEQo9FA5TuNWcdL6F0cr5W7tCiy9DTLUTqOk3BYi5B5e63LbeWKVz2cD8Mcl2+1vr+3gbkk3EwD1KSBAEAiAIAgCAIAgCAIBMAQBAEAiAIAgC8AQBBIkkGSlTUMjtd3BJSkhuxvtqfkoG9iepmiklzPI4glKV+rw\/d+R1aVqlOkHrstO\/BenlNLPDWWUnbU67s5jlr0g6m43HvGxi9zBiabhKzLZxBlPMk5ZjxVQIjuTsqsx5bAEn8JzLRNkwV5JdpzmRmqcCMRVZi7UiwY1qjE6gSLoRpU7jhMdPMqOaT1t1s9CvkeIyQWma2y9d2b2BxDL3Cu1w9Ine5NwNV9XH2TznVOo45FJ6OPoU1acXncVqpeuhu4CozJqbmTba23L85bQnKcM0ud\/AorRUZZUZy0uKzyagglIp83x4UG5kpGilTbPlnafGrVYjVb5yqckz16cGkUOE8L6gwO22\/O622nMUJpo6Ts1qpg1DTZ0UaXC7sjgcbC\/hJ6cPThmcdStPQt2xOuzBFUkcR+U5sXw05lTj8ASe8GxH+7GEb6FbIzVVryw9unNTjdE3g7MkpORAEAQBAEAQBAIkgQBAJkAQBaAJIIgCAIAgCAIBBgku8JmGFwi3d+9qcRTp0yu\/VyRdjN0HGCsj5vHQrVm2laPW36FDm+Y1arHEV1ZF5XBAHRVB4nz84b5sxU1FLLE7P6I8xNWjVH6tU7dAyqV+YaKUrpmfHpadx2f8PYYtoWuKjA2Pdhquk\/eKAhffHSwvZMxSwtZK7jbv09TL\/CmHuB9Yp3JYCzqeBAbgeRIB9ZLqwjuypUKju1F6dhmZqdTVTJVwQVZTuCCLFTyPPaOkhJuN7nOWcbS2K44ujSov3rUqdBDoAF9KrsFVhbw+nCVQnFxea2W9v7l0ozc01fM9fr2GDE5thCr0xXp\/ZaVYKVY0ydlUAczawA9J1OnCccvV5HMekjLM1v5mGl2hotSZ6VQFKfhYi5KEcQygagfK07TjCHYiMkpS21Z7yzN6damapcoBu2sFdI1EKSTtvbkTa9pzGvCUc19CZ0ZxllsZa2Z0Ajv3yhaYBcsdOgHgWBsQDy6zuNSMtmR0cla63ObznGU61HvqTaghs11ZSLi+6sARsQfQycya0N2Hi1Kz5nDZvQW5247g9ZW1qehDYrMpoAliV4Wtfre\/wArCUuVj0sJhlUUs3NWOloasOhfvWQVDccAr7cL\/rDcW5gAyZxs78jxnZScHuhTxqcL8eR2+EqLoosA+oALbe14sWXtuUmYhVqhVO+4PmAL3+P4wtGengZyzJdZ4k3PXPcpOBAEASSRAEAQBAEAQBAJkEEQBAEkkQBaAIBEkCCRANTNMWaSXUAsSAoO487jmLXkq3MyYys6dP4d3sdNk+dd5TGhgthvqXvCn7QG4\/b9k87G4noQqKUfzz+\/M+brtS1tr1bGDPuz1TElWqYgsLAi2l+PO4CqoA8veZXOObmU0qkVeyPX0PYunTxOMoo+tUSnULcvCzBt+BsGFzFNZbtmXF141GoR3+52H0dLowVKo+J\/nSz91eloBeoStrLrLW07Frb8JXQtGKvI64lPpa8rR25630XfYq6mKw2FyutXRe8tiLseDF9SAktx\/S+Z6zPbNQb53NVpyxcYydll+lrMsc0z0pmOBwyABKiOzf2UYgS+VP8AzINGOnCPQ1HLe+njqcVjs4arluZNquTi9K9QO8pkTnIlTn2ssetWFuUToKj1EbBUk04elUSzVwq2phKYsFJGnUxJ3YEC97HeWynGnlWyZnUHNSe7XL89jLk2VhKGYMWLGrUPiY3YgkgEnidjMnSZqVXvt7F0lapSXYbOdMaNLA0yRoul7nShbwEBmsdIsW5cLyKiap0ly08eQpWlOq+evfbU9552cXE0a9OrXtXxBTxrto0nWgVSblfs9+ZCk7WmyNHWUpPVlCrfKor4UVvZvG1cThD9ZK1HV6tNnX2amhimscjex352l8HdalsNGpI4\/Mqdg1JuNM2B6j9E\/D5gyvsPUi02muZpZOv2ZPVj+Q\/KZWfQYJWp\/U0e1dEsiVDdghINyTpDW3HTcDh1ncHfQ8vjeHWSNWMdnr9efiV2HrlCLOQvoDIZ5cHbmWlPPAq+1ZhyFzq9Ok5saFUjzMmTl6jNWfgRZfPe5PyEHrcOhJt1Htsi1kHrGSU3ORJuQIBEAQBAEAQBAEAQCYuCIAgCAJIEEiAIAgCAU2aHVWC\/qr+J\/wDAnSPLxsry7l6mu1Q3BUkEcCCQR6EG4nS0d0ePUjmRdZPleJxovicVVOH6O7Wbrck8LczOpVZbIzKjFayf0Oww2BpJRFKjRA0hgCLKjAjcNzKkcespu79pakk9bJdXV+5UYHtHiVJw9DDl3Rmv3dLUwJYm40g2Xp5S6Ekto69xpq4alJZ5yty1dkXODyXMawYPh6dBXN2FUoAx6mnTBuf2hfaXpS6rGGpiMNHRO\/52l7heyLHSa1cMU9nu6ajR5Kz3I5cAOE7y9Zinik9IxLzBZNRpbrSBPNm8RPnOrGaVRvmbzWHG0HBq1WU3AUb8dhv69ZGWPUdJtczVq4ZHTu3RWT9UqCvl4eEZI2y20OlOSeZPU0cTlGHZO7OHplLhtJUEXAIB63sSPQkc5EacErJHfSzvdsqnVaVXukUIukBVUAAAbWAHATpaM1rWnc43trS7txWHBhob\/pPx2\/tTmppqbMNK6sU+Ug90PMt+Mxs+owatSNqogYFWAIIsQeBHQyL2L5wjOLjJXTKSr2bW\/gqlR0I1W99x853nPFlwSN\/gm0upq5sYXIaSbteofvcP7o\/OQ5GmhwqjT1l8T7dvAtAJzc9NJLREwSZJUcCAIAgCAIAgC0m4EXBEAmAJAEAQBJuCIAgCAIAkgQSc\/nV0qk8mVT8NrfIfGdxPGx6yzfbYnCYYsy6hYX+MkwctTtMlp0mZiyKzC1gVve1wCBw984KWnyLbH4pytie7FuVtbfsjgq\/ePwkSZzTgs1z32KoMEqVKQ0OHFhewqKVFle+9iQxBO4JvwJvrofLoRjJReVT2t4dq9+tHdYTEiompduRB2KkbFSORB2mg8epDI7MyazBxYg1DAMLXMABYB5eAYHMHSOc7Q+B6dTzsffOZcmb8N8UXEou09AVaDL1Hz5RNXjYtw2k7HK5S16K7W4i3vN5gPsML\/LRuQXi0EkQQIJEAzWlZXcaYFyLQLi0C5NoFxpk2FxpiwuNMWFxpiwuNMC40wLkSCSIAgCAIAgCSCIAgCAVvaCmDR181It7yAf8AfkJ1ExY6KdO\/UZadTUATyUfhOjyJrU6DsxiSHOwbZjv5SFuZ6qvoe6GINSozPY2XVbkTta45gX4cJyXZUkkXXYZjqqkknvKYdrn9LWyi3Sw\/GacMUY+Kyxfa15I6ysdDUqq7Go603H6LDSxDEfrDSBfpsb2FtGzPIWqcXyTa7NV5a\/mpZsJ0ZzCYB4JgHkmCTGzQDC5g6RQ9qVvh3PTce6cz2N2Cf+YUOLYmmPSORropdIctghbWBydvwBmB\/Mz6vD\/IbMGgQBAEAiAf\/9k=)\n\n\nFIFA 20 is a football simulation video game published by Electronic Arts as part of the FIFA series. It is the 27th installment in the FIFA series, and was released on 27 September 2019 for Microsoft Windows, PlayStation 4, Xbox One, and Nintendo Switch. \n\n\nReal Madrid winger Eden Hazard was named the new cover star of the Regular Edition, with Liverpool defender Virgil van Dijk on the cover of the Champions Edition.Former Juventus and Real Madrid midfielder Zinedine Zidane was later named as the cover star for the Ultimate Edition.","52a2ed0a":"Now let's compare top two Strikers as per the dataset i.e **Kane** and **Aguero**","7049e665":"# **Table of Contents**\n\n<a id = 'max 10'><\/a>\n\n* [Importing Libraries and Exploring Data](#1)\n\n\n* [Data Manipualtion and Cleaning](#2)\n  * Deleted Useless Columns\n  * Formed a new column of BMI using Weights and Heights column\n  * Countered Null values using Get Dummies for Player positions\n  * For columns like Dribbling, Defendind,Pace etc used Median value\n\n\n* [Data Analysis](#3)\n   * Relationship of Overall Rating and Value in Euros using Scatter Plot\n   * Relationship of Potential Rating and Wage in Euros using Scatter Plot\n   * Count of Preferred Foot and International Reputation using Count Plot\n   * Distribution of Age and BMI using Histogram\n   * Relationship of BMI vs Pace and Weight vs Pace using Reg Plot\n   \n   \n   \n* [Top 20 Analysis](#4)\n   * Which Country has Max players in Top 20?\n   * Which Club has Max players in Top 20?\n   * Which type of player comes most in Top 20?\n   * Which age belongs to max players in Top 20?\n   \n   \n   \n* [The Biggest Rivalry - Messi and Ronaldo](#5)\n   * Comparison of different attributes using **Radar Plot**\n   \n   \n* [Other Top Class Comparisons](#6)\n   * Comparison of Kevin De Bryne and Luka Modric using Radar Plot\n   * Comparison of Van Dijk and Sergio Ramos using Radar Plot\n   * Comparison of Harry Kane and Sergio Aguero using Radar Plot\n   \n\n* [Word Cloud](#7)\n   * Word Cloud for Club and Country of Top 20 Players\n","c8743c46":"<img src=\"https:\/\/media2.giphy.com\/media\/Xy76xcBjGyQ6mMDGux\/200w.webp?cid=ecf05e47ywl8no38h6zo2l709l3ye7f7rcmvnp0ncwfdgco2&rid=200w.webp\">","88682382":"# **3. Let's Start with Analysis**<a class=\"anchor\" id=\"3\"><\/a>","5c8408d7":"# **3.4 - Word Clouds**<a class=\"anchor\" id=\"7\"><\/a>","c2d7838e":"Now let's compare top two Defenders of current era as per me i.e **Ramos** and **Van Dijk**","b5d19560":"# **2. Data Manipulation & Cleaning** <a class=\"anchor\" id=\"2\"><\/a>","51f29972":"**Insights:**\nOut of 8 attributes - **Messi performed well in 5** and **Ronaldo in 3**","922dd734":"# **3.2 - The Biggest Rivalry - MESSI VS RONALDO**<a class=\"anchor\" id=\"5\"><\/a> ","14b3db6c":"<h1 style='background:brown; border:0; color:white'><center>\u26bdFIFA 20-EDA\u26bd<\/center><h1>","6b674f33":"<img src =\"https:\/\/media0.giphy.com\/media\/4PSESiw3VaSStOrPtq\/200w.webp?cid=ecf05e4709o3p4kyc2t4w00xqhnfw0x78htw5xijisvom3e6&rid=200w.webp\">","d5ac4998":"# **3.1 - Top 20 Analysis** <a class=\"anchor\" id=\"4\"><\/a>","7f80d8fa":"<h2 style='background:black; border:0; color:white'><center>Thank You for reading the kernel!<\/center><h2>","975bae67":"# **3.3 - Some other Top Class Comparisons**<a class=\"anchor\" id=\"6\"><\/a>"}}