{"cell_type":{"00d913d2":"code","cc3bb4dc":"code","fa251f8f":"code","1efe6e49":"code","ce8e0c8b":"code","e444cef1":"code","ea0fef2f":"code","db90ce4a":"code","9876d3ab":"code","26cd95a2":"code","f59f74e3":"code","b43bacbb":"code","5401bf5c":"code","102df222":"code","c3e68c67":"code","eb95db5d":"code","88f491aa":"code","1b227bff":"code","7aa5f919":"code","aee86d8e":"code","fdda97ba":"code","04489305":"code","97a7b2ed":"code","eed556b8":"code","8a7058c6":"code","ff2cce81":"code","b23735c9":"code","a39ce50d":"code","2723648f":"code","1d8b007c":"code","d97af1b7":"code","fa882e2d":"code","788ade7a":"markdown","3a6857e9":"markdown"},"source":{"00d913d2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nimport warnings as ws\nws.defaultaction = \"ignore\"","cc3bb4dc":"print(\"lets Start\")","fa251f8f":"df = pd.read_csv(\"\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/audi.csv\")","1efe6e49":"df.head()","ce8e0c8b":"df.info()","e444cef1":"df.shape","ea0fef2f":"df.isna().sum()","db90ce4a":"df.model.value_counts().shape","9876d3ab":"df.transmission.value_counts().reset_index()","26cd95a2":"# Checking the price of car by transimission typ\nprice_by_transmission = df.groupby(\"transmission\")['price'].mean().reset_index()\nplt.title(\"Average Price of vechicle\")\nsns.set()\nsns.barplot(x=\"transmission\", y =\"price\", data = price_by_transmission)\nplt.show()","f59f74e3":"milage_by_fuel = df.groupby(\"fuelType\")[\"mileage\"].mean().reset_index()\nmilage_by_fuel","b43bacbb":"cleaned_df = pd.concat([df,pd.get_dummies(df.fuelType), pd.get_dummies(df.transmission)], axis =1)","5401bf5c":"cleaned_df = cleaned_df.drop([\"transmission\", \"fuelType\",\"model\"], axis = 1)","102df222":"cleaned_df.head()","c3e68c67":"plt.figure(figsize = (15,15))\nsns.heatmap(cleaned_df.corr(), annot = True)","eb95db5d":"abs (cleaned_df.corr()[\"price\"]).sort_values(ascending =False)","88f491aa":"# Fitting Regression Model\nX = cleaned_df.drop(\"price\", axis = 1)\ny = cleaned_df[\"price\"]","1b227bff":"X_train,  X_test, y_train, y_test = train_test_split(X, y, test_size = 0.15, random_state =1)","7aa5f919":"print(X_train.shape)\nprint(X_test.shape)\nprint (y_train.shape)\nprint (y_test.shape)","aee86d8e":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score","fdda97ba":"lin_reg = LinearRegression()\nlin_reg.fit(X_train,y_train)\ny_pred =lin_reg.predict(X_test)\n# Calculating RMSE\nrmse = np.sqrt(mean_squared_error(y_test,y_pred))\nr2score = r2_score(y_test,y_pred)","04489305":"print(\"R2 score is \", r2score)\nprint(\"rmse is \", rmse)","97a7b2ed":"y_pred.shape\ny_test.shape","eed556b8":"temp = [i for i in  range(1, 1602)]\nplt.style.use(\"seaborn\")\nplt.plot(temp,y_test,linestyle = \"--\", color = \"green\")\nplt.plot(temp,y_pred,linestyle = \"--\", color = \"red\")\nplt.xlabel(\"y_test VS y_pred\")\nplt.ylabel(\"temp value\")\nplt.legend()\nplt.show()","8a7058c6":"#  Trying the Random Forest Regressior Model\nfrom sklearn.ensemble import RandomForestRegressor\nforest = RandomForestRegressor()\nforest.fit(X_train,y_train)","ff2cce81":"forest_y_pred = forest.predict(X_test)\n# Calculating RMSE\nforest_rmse = np.sqrt(mean_squared_error(y_test,forest_y_pred))\nforest_r2score = r2_score(y_test,forest_y_pred)\nprint(\"R2 score is \", forest_r2score)\nprint(\"rmse is \", forest_rmse )","b23735c9":"# Noe to model looks good \ntemp = [i for i in  range(1, 1602)]\nplt.figure(figsize = (26,10))\nplt.style.use(\"seaborn\")\nplt.plot(temp,y_test,\"--g\")\nplt.plot(temp,forest_y_pred,\"--r\")\nplt.xlabel(\"y_test VS y_pred\")\nplt.ylabel(\"temp value\")\nplt.legend()\nplt.show()","a39ce50d":"# Plotting proper chart using seaborn\nresulting = pd.DataFrame(y_test)","2723648f":"resulting.reset_index().drop(\"index\",axis =1)\nresulting['prediction'] = forest_y_pred","1d8b007c":"resulting.head()","d97af1b7":"resulting.prediction = resulting.prediction.astype(int)","fa882e2d":"resulting.reset_index()","788ade7a":"# Upvote it if yo find it useful  :)","3a6857e9":"print dataframe"}}