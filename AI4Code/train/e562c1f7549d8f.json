{"cell_type":{"4f68f907":"code","effc999d":"code","fb27df87":"code","72d7823f":"code","0b0e3a44":"code","d6e333ac":"code","4db63599":"code","8d9a1f90":"code","39046f8e":"code","c3733bd6":"code","efdfa2b2":"code","8c9b8396":"code","5525e771":"code","178c47e9":"code","6deafe9a":"code","62013d6d":"code","c683d97e":"code","8a831476":"code","2d8dc455":"code","89fba2a1":"code","783cd34f":"markdown","4d5328e7":"markdown","fcb9314d":"markdown","4e9eefa0":"markdown","b5d93591":"markdown","51a33c59":"markdown","e8904652":"markdown","d1787f7f":"markdown","bf4f22ce":"markdown","23fd7be4":"markdown","80fca45d":"markdown","a3615f1a":"markdown","9242fd4c":"markdown","d76da942":"markdown","417002c6":"markdown","16fa5f05":"markdown","25ec9ada":"markdown","18991eab":"markdown","059c30dd":"markdown","2048e80f":"markdown","b2cc6c5f":"markdown","304ee2a1":"markdown","473a156f":"markdown","33e56848":"markdown","850a119e":"markdown","9f4a15c6":"markdown","aaf0dcf6":"markdown","536409bd":"markdown","10eafc3c":"markdown","6b1810ec":"markdown","09ae415c":"markdown","945ed6b0":"markdown","6561c913":"markdown","21d2c5a8":"markdown","46166f57":"markdown","3d0f8277":"markdown","c7af6ee0":"markdown","cb3e3b01":"markdown","fe6faa00":"markdown","4cd5f097":"markdown","891cd770":"markdown","3fcdf9ca":"markdown","18ee38b9":"markdown","fd6ecebe":"markdown","b4c3034d":"markdown","43035508":"markdown","a3cf8b3c":"markdown","013e50d6":"markdown","d8d20b14":"markdown","84289e44":"markdown","36164167":"markdown","853d10fe":"markdown","5b3846c1":"markdown","48e52da0":"markdown","f963f90f":"markdown"},"source":{"4f68f907":"import tensorflow as tf\nimport timeit\nfrom datetime import datetime","effc999d":"# Python \ud568\uc218\ub97c \uc815\uc758\ud569\ub2c8\ub2e4\ndef function_to_get_faster(x, y, b):\n    x = tf.matmul(x, y)\n    x = x + b\n    return x\n\n# \uadf8\ub798\ud504\ub97c \ud3ec\ud568\ud558\ub294 'Function' \uac1d\uccb4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4\na_function_that_uses_a_graph = tf.function(function_to_get_faster)\n\n# \ud150\uc11c\ub97c \ub9cc\ub4ed\ub2c8\ub2e4\nx1 = tf.constant([[1.0, 2.0]])\ny1 = tf.constant([[2.0], [3.0]])\nb1 = tf.constant(4.0)\n\n# \uc798 \uc791\ub3d9\ud569\ub2c8\ub2e4!\na_function_that_uses_a_graph(x1, y1, b1).numpy()","fb27df87":"def inner_function(x, y, b):\n    x = tf.matmul(x, y)\n    x = x + b\n    return x\n\n# \ub370\ucf54\ub808\uc774\ud130 \uc0ac\uc6a9\n@tf.function\ndef outer_function(x):\n    y = tf.constant([[2.0], [3.0]])\n    b = tf.constant(4.0)\n    \n    return inner_function(x, y, b)\n\n# \ud638\ucd9c \uac00\ub2a5\ud55c \ubcc0\uc218\ub294 outer_function()\uc5d0 \ub354\ud558\uc5ec\n# inner_function()\ub3c4 \ud3ec\ud568\ud558\ub294 \uadf8\ub798\ud504\ub97c \uc0dd\uc131\ud560 \uac83\uc774\ub77c\ub294 \uac83\uc5d0 \uc8fc\ubaa9\ud558\uc138\uc694\nouter_function(tf.constant([[1.0, 2.0]])).numpy()\n","72d7823f":"def my_function(x):\n    if tf.reduce_sum(x) <= 1:\n        return x * x\n    else:\n        return x-1\n\na_function = tf.function(my_function)\n\nprint(\"First branch, with graph:\", a_function(tf.constant(1.0)).numpy())\nprint(\"Second branch, with graph:\", a_function(tf.constant([5.0, 5.0])).numpy())","0b0e3a44":"# \ucd9c\ub825\uc744 \ub108\ubb34 \uc8fc\uc758\uae4a\uac8c \ubcf4\uc9c0 \ub9c8\uc138\uc694.\nprint(tf.autograph.to_code(my_function))","d6e333ac":"# \uc0ac\uc9c4\uc744 \ubd84\ub958\ud558\uae30 \uc704\ud55c \uc0c1\uc18d\ub41c \ubaa8\ub378\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4\nclass SequentialModel(tf.keras.Model):\n    def __init__(self, **kwargs):\n        super(SequentialModel, self).__init__(**kwargs)\n        self.flatten = tf.keras.layers.Flatten(input_shape=(28, 28))\n        # \uc218\ub9ce\uc740 \uc791\uc740 \uce35\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4\n        num_layers = 100\n        self.my_layers = [tf.keras.layers.Dense(64, activation='relu')\n                         for n in range(num_layers)]\n        self.dropout = tf.keras.layers.Dropout(0.2)\n        self.dense_2 = tf.keras.layers.Dense(10)\n    \n    def call(self, x):\n        x = self.flatten(x)\n        for layer in self.my_layers:\n            x = layer(x)\n        x = self.dropout(x)\n        x = self.dense_2(x)\n        return x","4db63599":"input_data = tf.random.uniform([20, 28, 28])","8d9a1f90":"eager_model = SequentialModel()\n\n# \ucd08\uae30 \ube4c\ub4dc\ub294 \uc2dc\uac04\uc744 \uc7ac\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\neager_model(input_data)\nprint(\"Eager time:\", timeit.timeit(lambda: eager_model(input_data), number=100))","39046f8e":"# call \uba54\uc18c\ub4dc\ub97c `tf.function`\uc73c\ub85c \ub458\ub7ec\uc309\ub2c8\ub2e4.\ngraph_model = SequentialModel()\ngraph_model.call = tf.function(graph_model.call)\n\n# \ucd08\uae30 \ube4c\ub4dc\uc640 \ucd94\uc801\uc740 \uc2dc\uac04\uc744 \uc7ac\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\ngraph_model(input_data)\nprint(\"Graph time:\", timeit.timeit(lambda: graph_model(input_data), number=100))","c3733bd6":"print(a_function)\n\nprint(\"Calling a `Function`:\")\nprint(\"Int:\", a_function(tf.constant(2)))\nprint(\"Float:\", a_function(tf.constant(2.0)))\nprint(\"Rank-1 tensor of floats\", a_function(tf.constant([2.0, 2.0, 2.0])))","efdfa2b2":"# \uc2e4\uc218\uc5d0\uc11c \uc791\ub3d9\ud558\ub294 \uace0\uccb4 \ud568\uc218\ub97c \uac00\uc838\uc635\ub2c8\ub2e4\nprint(\"Inspecting concrete functions\")\nprint(\"Concrete function for float:\")\nprint(a_function.get_concrete_function(tf.TensorSpec(shape=[], dtype=tf.float32)))\nprint(\"Concrete function for tensor of floats:\")\nprint(a_function.get_concrete_function(tf.constant([2.0, 2.0, 2.0])))","8c9b8396":"# \uace0\uccb4 \ud568\uc218\ub294 \ud638\ucd9c \uac00\ub2a5\ud569\ub2c8\ub2e4\n# \ucc38\uace0: \uc77c\ubc18\uc801\uc73c\ub860 \uc774\ub807\uac8c \ud558\uc9c0 \uc54a\uace0, \ub300\uc2e0 \ud3ec\ud568\ud558\uace0 \uc788\ub294 `Function`\uc744 \ud638\ucd9c\ud569\ub2c8\ub2e4\ncf = a_function.get_concrete_function(tf.constant(2))\nprint(\"Directly calling a concrete function:\", cf(tf.constant(2)))","5525e771":"# \uc989\uc2dc \uc2e4\ud589\ud560 \ub54c\uc5d0 \ubd80\uc791\uc6a9\uc774 \uc0dd\uae38 \uc218 \uc788\ub294 \ud56d\ub4f1 \uce35\uc744 \uc815\uc758\ud569\ub2c8\ub2e4\nclass EagerLayer(tf.keras.layers.Layer):\n    def __init__(self, **kwargs):\n        super(EagerLayer, self).__init__(**kwargs)\n        # \uc5ec\uae30\uc11c \uba87\uac00\uc9c0 \ucd08\uae30\ud654\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4\n    \n    def call(self, inputs):\n        print(\"\\nCurrently running eagerly\", str(datetime.now()))\n        return inputs","178c47e9":"# \uc9c1\uc811 \ub9cc\ub4e0 \uce35\uc744 \ucd94\uac00\ud558\uc5ec \uc0ac\uc9c4\uc744 \ubd84\ub958\ud558\ub294 \uc0c1\uc18d\ub41c \ubaa8\ub378\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.\nclass SequentialModel(tf.keras.Model):\n    def __init__(self):\n        super(SequentialModel, self).__init__()\n        self.flatten = tf.keras.layers.Flatten(input_shape=(28, 28))\n        self.dense_1 = tf.keras.layers.Dense(128, activation=\"relu\")\n        self.dropout = tf.keras.layers.Dropout(0.2)\n        self.dense_2 = tf.keras.layers.Dense(10)\n        self.eager = EagerLayer()\n    \n    def call(self, x):\n        x = self.flatten(x)\n        x = self.dense_1(x)\n        x = self.dropout(x)\n        x = self.dense_2(x)\n        return self.eager(x)\n\n# \uc774 \ubaa8\ub378\uc758 \uac1d\uccb4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4\nmodel = SequentialModel()\n\n# \uba87\uac00\uc9c0 \ub9d0\ub3c4 \uc548\ub418\ub294 \uc0ac\uc9c4\uacfc \uc774\ub984\ud45c\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4\ninput_data = tf.random.uniform([60, 28, 28])\nlabels = tf.random.uniform([60])\n\nloss_fn = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)","6deafe9a":"model.compile(run_eagerly=False, loss=loss_fn)","62013d6d":"model.fit(input_data, labels, epochs=3)","c683d97e":"print(\"Running eagerly\")\n# \ubaa8\ub378\uc744 \ucef4\ud30c\uc77c\ud560 \ub54c, \uc989\uc2dc \uc2e4\ud589\ud558\ub3c4\ub85d \uc124\uc815\ud569\ub2c8\ub2e4\nmodel.compile(run_eagerly=True, loss=loss_fn)\n\nmodel.fit(input_data, labels, epochs=1)","8a831476":"# \uc774\uc81c, \uc989\uc2dc \uc2e4\ud589\ud558\uae30 \uc704\ud574 \ubaa8\ub4e0 \uac83\uc744 \uc804\uc5ed\uc801\uc73c\ub85c \uc124\uc815\ud569\ub2c8\ub2e4\ntf.config.run_functions_eagerly(True)\nprint(\"Run all functions eagerly.\")\n\n# \ub2e4\ud615 \ud568\uc218\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4\npolymorphic_function = tf.function(model)\n\nprint(\"Tracing\")\n# \uc0ac\uc2e4 \uc774\uac83\uc740 \ud568\uc218\ub97c \ucd94\uc801\ud569\ub2c8\ub2e4\nprint(polymorphic_function.get_concrete_function(input_data))\n\nprint(\"\\nCalling twice eagerly\")\n# \ud568\uc218\ub97c \ub2e4\uc2dc \uc2e4\ud589\ud560 \ub54c, \ud568\uc218\uac00 \uc989\uc2dc \uc2e4\ud589\uc774\uae30 \ub54c\ubb38\uc5d0,\n# \ubd80\uc791\uc6a9\uc744 \ub450\ubc88 \ubcfc \uc218 \uc788\uc744 \uac83\uc785\ub2c8\ub2e4.\nresult = polymorphic_function(input_data)\nresult = polymorphic_function(input_data)","2d8dc455":"# \ub05d\ub09c \ud6c4\uc5d0\ub294 \uc6d0\ub798\ub300\ub85c \ub3cc\ub824\ub193\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694\ntf.config.experimental_run_functions_eagerly(False)","89fba2a1":"# @tf.function \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4\n@tf.function\ndef a_function_with_python_side_effect(x):\n    print(\"Tracing!\") # \uc989\uc2dc \uc2e4\ud589\ub429\ub2c8\ub2e4\n    return x * x + tf.constant(2)\n\n# \ucc98\uc74c\uc5d0\ub294 \ucd94\uc801\ub429\ub2c8\ub2e4\nprint(a_function_with_python_side_effect(tf.constant(2)))\n# \ud558\uc9c0\ub9cc \ub450\ubc88\uc9f8\uc5d0\ub294 \ubd80\uc791\uc6a9\uc744 \ubcfc \uc218 \uc5c6\uc2b5\ub2c8\ub2e4\nprint(a_function_with_python_side_effect(tf.constant(3)))\n\n# Python \uc778\uc790\ub294 \uc138\ub300 \ud68c\uc18c\ub098 \ub2e4\ub978 \ud558\uc774\ud37c \ud30c\ub77c\ubbf8\ud130\uac00 \ub420 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0\n# Python \uc778\uc790\uac00 \ubc14\ub014 \ub54c\ub9c8\ub2e4 \uc7ac\ucd94\uc801\ud569\ub2c8\ub2e4\nprint(a_function_with_python_side_effect(2))\nprint(a_function_with_python_side_effect(3))","783cd34f":"\ubaa8\ub378\uc774 \uc5bc\ub9c8\ub098 \ud070 \uc9c0\uc5d0 \uc0c1\uad00\uc5c6\uc774, \uc790\uc8fc \ucd94\uc801\ud558\ub294 \uac83\uc744 \ud53c\ud558\uace0\uc790 \ud569\ub2c8\ub2e4. [tf.function \uac00\uc774\ub4dc\uc758 \uc774 \uc808](https:\/\/www.tensorflow.org\/guide\/function#when_to_retrace)\uc740 \uc7ac\ucd94\uc801\uc744 \ud53c\ud558\uae30 \uc704\ud574 \uc785\ub825\uc744 \ud2b9\uc815\ud558\ub294 \uac83\uc744 \uc5b4\ub5bb\uac8c \uc0ac\uc6a9\ud558\ub294\uc9c0\uc640 \ud150\uc11c \uc778\uc790\ub97c \uc5b4\ub5bb\uac8c \uc0ac\uc6a9\ud558\ub294\uc9c0\uc5d0 \ub300\ud574\uc11c \uc774\uc57c\uae30\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud3c9\uc18c\uc640 \ub2e4\ub974\uac8c \ub0ae\uc740 \uc131\ub2a5\uc744 \ubcf4\uc774\ub294 \uac83\uc744 \ucc3e\uac8c \ub41c\ub2e4\uba74, \uc758\ub3c4\uce58 \uc54a\uac8c \uc7ac\ucd94\uc801\uc744 \ud558\uace0 \uc788\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\uba74 \uc88b\uc2b5\ub2c8\ub2e4.","4d5328e7":"\uc77c\ubd80 \uc0ac\uc6a9\uc790\ub4e4\uc740, Python\uc744 \ub5a0\ub0a0 \ud544\uc694\ub3c4, \uc6d0\ud558\uc9c0\ub3c4 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","fcb9314d":"### \ub2e4\ud615 \ud568\uc218 \uc810\uac80","4e9eefa0":"\ucd94\uc801\ud558\ub294 \uac83\uc740 \uc57d\uac04\uc758 \ubd80\ub2f4\uc744 \uac00\uc9d1\ub2c8\ub2e4. \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud558\ub294 \uac83\uc740 \ube60\ub974\uc9c0\ub9cc, \ud070 \ubaa8\ub378\uc740 \ucd94\uc801\ud558\uae30 \uc704\ud55c \ub69c\ub837\ud55c \ubcbd \uc2dc\uac04\uc744 \uac00\uc9d1\ub2c8\ub2e4. \uc774 \ud22c\uc790\ub294 \uc131\ub2a5 \ub04c\uc5b4\uc62c\ub9ac\uae30\ub85c \uc8fc\ub85c \ube60\ub974\uac8c \ud68c\uc218\uac00 \ub418\uc9c0\ub9cc, \uc5b4\ub5a4 \ud070 \ubaa8\ub378\uc758 \ud559\uc2b5\uc5d0\uc11c\ub3c4 \ucc98\uc74c \uba87 \uac1c\uc758 \uc138\ub300\ub294 \ucd94\uc801\uc73c\ub85c \uc778\ud574 \ub354 \ub290\ub824\uc9c8 \uc218 \uc788\ub2e4\ub294 \uac83\uc744 \uc54c\uace0 \uc788\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4.","b5d93591":"**\uadf8\ub798\ud504\ub294 \uacc4\uc0b0\uc758 \ub2e8\uc704\ub97c \ub098\ud0c0\ub0b4\ub294 [tf.Operation](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Operation) \uac1d\uccb4\uc758 \uc9d1\ud569\uacfc \uc5f0\uc0b0 \uc0ac\uc774\uc5d0\uc11c \uc804\ub2ec\ub418\ub294 \ub370\uc774\ud130\uc758 \ub2e8\uc704\ub97c \ub098\ud0c0\ub0b4\ub294 [tf.Tensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Tensor) \uac1d\uccb4\uc758 \uc9d1\ud569\uc744 \ud3ec\ud568\ud558\ub294 \uc790\ub8cc\uad6c\uc870\uc785\ub2c8\ub2e4.** \uc774\uac83\ub4e4\uc740 [tf.Graph](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Graph) \ubb38\ub9e5 \uc548\uc5d0 \uc815\uc758\ub429\ub2c8\ub2e4. \uc774 \uadf8\ub798\ud504\ub4e4\uc740 \uc790\ub8cc\uad6c\uc870\uc774\uae30 \ub54c\ubb38\uc5d0, \uc6d0\ubcf8 Python \ucf54\ub4dc\uac00 \uc5c6\uc5b4\ub3c4 \uc800\uc7a5\ub418\uace0, \uc2e4\ud589\ub418\uace0, \ubcf5\uad6c\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","51a33c59":"\uc774\uc81c, `fit`\uc744 \ud638\ucd9c\ud558\uace0 \ud568\uc218\uac00 (\ub450 \ubc88) \ucd94\uc801\ub418\uace0 \uc989\uc2dc \ud6a8\uacfc\uac00 \ub2e4\uc2dc\ub294 \uc2e4\ud589\ub418\uc9c0 \uc54a\ub294 \uac83\uc744 \ud655\uc778\ud558\uc138\uc694.","e8904652":"\uadf8\ub7ec\ub098, \uc5ec\uc804\ud788 \ud3b8\uc758\ub97c \uc704\ud574 Python\uc5d0\uc11c \uae30\uacc4 \ud559\uc2b5 \ubaa8\ub378(\ub610\ub294 \ub2e4\ub978 \uc5f0\uc0b0\ub4e4)\uc744 \uc815\uc758\ud558\uace0 \uc2f6\uc73c\uba70, \ud544\uc694\ud560 \ub54c \uc790\ub3d9\uc73c\ub85c \uadf8\ub798\ud504\ub97c \ub9cc\ub4e4\uc5b4\ub0b4\uace0 \uc2f6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","d1787f7f":"\uadf8\ub798\ud504\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ubcc0\ud658\uc744 \ucef4\ud30c\uc77c\ub7ec\uac00 \uc218\ud589\ud558\uac8c \ud558\uc5ec \uc27d\uac8c \ucd5c\uc801\ud654\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4:\n* \uacc4\uc0b0 \uc18d\uc5d0\uc11c \uc0c1\uc218\uc778 \ub178\ub4dc\ub97c \uc811\uc5b4\uac00\uba70 _(\"\uc0c1\uc218 \uc811\uae30\")_ \ud150\uc11c\ub4e4\uc758 \uac12\uc744 \uc815\uc801\uc73c\ub85c \ucd94\ub860\ud569\ub2c8\ub2e4.\n* \ub3c5\ub9bd\uc801\uc778 \uacc4\uc0b0\uc758 \uc791\uc740 \ubd80\ubd84\uc744 \ubd84\ub9ac\ud558\uace0 \uc2a4\ub808\ub4dc\ub098 \uae30\uae30\uc5d0 \ub098\ub215\ub2c8\ub2e4.\n* \uc790\uc8fc \uc0ac\uc6a9\ub418\ub294 \ud45c\ud604\uc744 \uc81c\uac70\ud558\uba70 \uc0b0\uc218 \uc5f0\uc0b0\uc744 \uac04\ub2e8\ud558\uac8c \ub9cc\ub4ed\ub2c8\ub2e4.\n\n\uc774\uac83\uc744 \ud3ec\ud568\ud55c \uc18d\ub3c4 \ud5a5\uc0c1\uc744 \uc218\ud589\ud558\ub294 [Grappler](https:\/\/www.tensorflow.org\/guide\/graph_optimization)\ub77c\ub294 \uc804\uccb4\uc801\uc778 \ucd5c\uc801\ud654 \uc2dc\uc2a4\ud15c\uc774 \uc788\uc2b5\ub2c8\ub2e4.","bf4f22ce":"Autograph \ubcc0\ud658\uc744 \uc9c1\uc811 \ud638\ucd9c\ud574\uc11c Python\uc774 \uc5b4\ub5bb\uac8c TensorFlow \uc5f0\uc0b0\uc73c\ub85c \ubcc0\ud658\ub418\ub294\uc9c0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0\uc5d0 \uc77d\uae30 \ud798\ub4e4\uc9c0\ub9cc, \ubcc0\ud658\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","23fd7be4":"\uac04\ub2e8\ud558\uac8c, \uadf8\ub798\ud504\ub294 \ub9e4\uc6b0 \uc720\uc6a9\ud558\uace0 TensorFlow\uac00 **\ube60\ub974\uace0** **\ubcd1\ub82c\uc801**\uc774\uace0 **\uc5ec\ub7ec \uae30\uae30**\uc5d0\uc11c \ud6a8\uc728\uc801\uc73c\ub85c \uc791\ub3d9\ud558\uac8c \ud574\uc90d\ub2c8\ub2e4.","80fca45d":"Python \ud568\uc218 `my_function` \uc704\uc5d0\uc11c [tf.function](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/function)\uc744 \ud638\ucd9c\ud558\ub294 `a_function`\uc744 \uc810\uac80\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc608\uc81c\uc5d0\uc11c\ub294, \uc138\uac00\uc9c0 \uc885\ub958\uc758 \uc778\uc790\uac00 \uc788\ub294 `a_function`\uc744 \ud638\ucd9c\ud558\ub294 \uac83\uc740 \uc11c\ub85c \ub2e4\ub978 \uc138\uac00\uc9c0 \uace0\uccb4 \ud568\uc218\uac00 \uacb0\uacfc\ub85c \ub098\uc635\ub2c8\ub2e4.","a3615f1a":"### run_eagerly=True \uc0ac\uc6a9","9242fd4c":"\uc544\ub798\ub294 \uac04\ub2e8\ud55c \uc774\uc911\uce35 \uadf8\ub798\ud504\uac00 \uc5b4\ub5bb\uac8c \uc0dd\uacbc\ub294\uc9c0 TensorBoard\ub85c \uc2dc\uac01\ud654\ub41c \ubaa8\uc2b5\uc785\ub2c8\ub2e4.\n![](https:\/\/storage.cloud.google.com\/tensorflow.org\/images\/two-layer-network.png)","d76da942":"\ud750\ub984 \uc81c\uc5b4\uc640 \ubc18\ubcf5\ubb38\uc740 \uae30\ubcf8\uc801\uc73c\ub85c [tf.autograph](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/autograph)\ub97c \ud1b5\ud574 TensorFlow\ub85c \ubcc0\ud658\ub429\ub2c8\ub2e4. Autograph\ub294 \ubc18\ubcf5\ubb38 \uad6c\uc131 \ud45c\uc900\ud654, \ud3bc\uce58\uae30, [AST](https:\/\/docs.python.org\/3\/library\/ast.html) \uc870\uc791 \ub4f1\uc744 \ud3ec\ud568\ud558\ub294 \ubc29\ubc95\uc758 \uc870\ud569\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","417002c6":"\ub300\uccb4\ub85c \uc989\uc2dc \uc2e4\ud589\uc744 \ub514\ubc84\uae45\ud558\ub294 \uac83\uc774 \ud6e8\uc52c \uc27d\uc2b5\ub2c8\ub2e4. \uc2a4\ud0dd \ucd94\uc801\uc774 \uc0c1\ub300\uc801\uc73c\ub85c \uc9e7\uace0 \uc774\ud574\ud558\uae30 \uc27d\uc2b5\ub2c8\ub2e4.","16fa5f05":"TensorFlow\uc5d0\uc11c \uadf8\ub798\ud504\ub97c \ub9cc\ub4dc\ub294 \ubc29\ubc95\uc740 \uc9c1\uc811\uc801\uc778 \ud638\ucd9c\ub85c\ub4e0 \ub370\ucf54\ub808\uc774\ud130\ub85c\ub4e0 [tf.function](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/function)\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.","25ec9ada":"\uc774\uac83\uc740 \uc9e7\uc740 \uc18c\uac1c\uc785\ub2c8\ub2e4; \uc774 \uac1c\ub150\uc5d0 \ub300\ud574 \uc790\uc138\ud55c \uc18c\uac1c\ub97c \uc6d0\ud55c\ub2e4\uba74, [tf.function \uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/function)\ub97c \ucc38\uace0\ud558\uc138\uc694.","18991eab":"\uadf8\ub798\ud504\ub97c \uc0ac\uc6a9\ud558\uba74, \uad49\uc7a5\ud55c \uc720\uc5f0\uc131\uc744 \uac00\uc9d1\ub2c8\ub2e4. TensorFlow \uadf8\ub798\ud504\ub97c \ubaa8\ubc14\uc77c \uc571, \uc784\ubca0\ub514\ub4dc \uae30\uae30, \ubc31\uc5d4\ub4dc \uc11c\ubc84\uc640 \uac19\uc740 Python \ud574\uc11d\uae30\uac00 \uc5c6\ub294 \ud658\uacbd\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. TensorFlow\ub294 Python\uc5d0\uc11c \ub0b4\ubcf4\ub0b4\uc9c8 \ub54c\uc758 \uc800\uc7a5\ub41c \ubaa8\ub378\uc758 \ud615\uc2dd\uc73c\ub85c \uadf8\ub798\ud504\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","059c30dd":"\uc774 \uc608\uc81c\uc5d0\uc11c\ub294 \uc0c1\ub2f9\ud788 \uc2a4\ud0dd\uc758 \uc548\ucabd\uc5d0\uc11c \ubc14\ub77c\ubcf4\uc558\uc2b5\ub2c8\ub2e4. \ud2b9\uc815\ud558\uac8c \ucd94\uc801\uc744 \uad00\ub9ac\ud558\ub294 \uac83\uc774 \uc544\ub2c8\ub77c\uba74, \uc77c\ubc18\uc801\uc73c\ub85c \uc5ec\uae30\uc5d0\uc11c \ubcf4\uc5ec\uc84c\ub358 \uac83\ucc98\ub7fc \uace0\uccb4 \ud568\uc218\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \ud638\ucd9c\ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.","2048e80f":"\uba3c\uc800, \ubaa8\ub378\uc744 \uc989\uc2dc \uc2e4\ud589 \uc5c6\uc774 \ucef4\ud30c\uc77c\ud569\ub2c8\ub2e4. \ubaa8\ub378\uc774 \ucd94\uc801\ub418\uc9c0 \uc54a\ub294\ub2e4\ub294 \uac83\uc744 \ucc38\uace0\ud558\uc138\uc694; \uc774 \uc774\ub984\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0, `compile`\uc740 \uc190\uc2e4 \ud568\uc218\ub4e4, \ucd5c\uc801\ud654, \uadf8\ub9ac\uace0 \ub2e4\ub978 \ud559\uc2b5 \ub9e4\uac1c \ubcc0\uc218\ub4e4\uc744 \uc124\uc815\ud560 \ubfd0\uc785\ub2c8\ub2e4.","b2cc6c5f":"\uc989\uc2dc \uc2e4\ud589\uc744 \uc704\ud574 \ubaa8\ub4e0 \uac83\uc744 \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ud615 \ud568\uc218\uc758 \ucd94\uc801\ub418\ub294 \ud568\uc218\ub4e4\uc744 \uc6b0\ud68c\ud558\uace0 \uc6d0\ubcf8 \ud568\uc218\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \uc2e4\ud589\ud558\ub294 \uc2a4\uc704\uce58\uc785\ub2c8\ub2e4. \ub514\ubc84\uae45\uc744 \uc704\ud574 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","304ee2a1":"\ub354 \uae4a\uc740 \ub0b4\uc6a9\uc740 [tf.function](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/function) API \ucc38\uc870 \ud398\uc774\uc9c0\uc640 [\uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/function)\uc5d0\uc11c \uc77d\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","473a156f":"## \ucd94\uc801\uacfc \uc131\ub2a5","33e56848":"\uadf8\ub798\ud504\uac00 \ub514\ubc84\uae45\uc744 \uc5b4\ub835\uac8c \ud558\ub294 \uc0c1\ud669\uc5d0\uc11c\ub294, \ub514\ubc84\uae45\uc744 \uc704\ud574 \uc989\uc2dc \uc2e4\ud589\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc73c\ub85c \ub3cc\uc544\uac08 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","850a119e":"\ud150\uc11c\ub97c \uc0ac\uc6a9\ud558\ub294 \ud568\uc218\ub97c \uadf8\ub0e5 [tf.function](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/function)\uc73c\ub85c \ub458\ub7ec\uc2f8\ub294 \uac83\uc740 \uc790\ub3d9\uc73c\ub85c \ucf54\ub4dc\ub97c \ube60\ub974\uac8c \ud574\uc8fc\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub2e8\uc77c \uae30\uae30\uc5d0\uc11c \uba87\ubc88 \ud638\ucd9c\ub418\ub294 \uc791\uc740 \ud568\uc218\uc5d0\uc11c\ub294 \uadf8\ub798\ud504\ub098 \uadf8\ub798\ud504\uc758 \uc870\uac01\uc744 \ud638\ucd9c\ud558\ub294 \ubd80\ub2f4\uc774 \uc2e4\ud589\uc2dc\uac04\uc5d0 \ud070 \ube44\uc911\uc744 \ucc28\uc9c0\ud558\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c, \ub300\ubd80\ubd84\uc758 \uacc4\uc0b0\uc774 GPU\ub97c \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \ucee8\ubcfc\ub8e8\uc158\uc758 \ubb34\ub354\uae30\ucc98\ub7fc \uac00\uc18d\uae30\uc5d0\uc11c \uc774\ubbf8 \uc77c\uc5b4\ub09c \uacbd\uc6b0, \uadf8\ub798\ud504 \uc18d\ub3c4 \ud5a5\uc0c1\uc740 \ud06c\uc9c0 \uc54a\uc744 \uac83\uc785\ub2c8\ub2e4.","9f4a15c6":"\uc989\uc2dc \uc2e4\ud589\uc5d0\uc11c\ub9cc \uc791\uc6a9\ud558\ub294 \ubd80\uc791\uc6a9(\uc608\ub97c \ub4e4\uba74 Python \uc778\uc790\ub97c \ucd9c\ub825\ud558\ub294 \uac83)\uc744 \ucd94\uac00\ud574\uc11c \ud568\uc218\uac00 \uc5b8\uc81c \ucd94\uc801\ub418\ub294\uc9c0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30, \uc0c8\ub85c\uc6b4 Python \uc778\uc790\uac00 \ud56d\uc0c1 \uc7ac\ucd94\uc801\uc744 \ubc1c\uc0dd\uc2dc\ucf1c \ub0ad\ube44\ub418\ub294 \uc7ac\ucd94\uc801\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","aaf0dcf6":"\ud558\uc9c0\ub9cc, TensorFlow\ub97c Python \uc548\uc5d0\uc11c \uc5f0\uc0b0 \ud558\ub098\uc529 \uc2e4\ud589\ud558\ub294 \uac83\uc740 \uc218\ub9ce\uc740 \uac00\uc18d\ud654\uac00 \uac00\ub2a5\ud55c \uacbd\uc6b0\uc5d0\ub3c4 \ubabb\ud558\uac8c \ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud150\uc11c \uacc4\uc0b0\uc744 Python\uc5d0\uc11c \ucd94\ucd9c\ud574\ub0bc \uc218 \uc788\uc73c\uba74, _\uadf8\ub798\ud504_ \ub85c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","536409bd":"### \uadf8\ub798\ud504\uc758 \uc774\uc810","10eafc3c":"\uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 TensorFlow\uac00 \uadf8\ub798\ud504\ub97c \uac00\uc838\uc624\uae30 \uc704\ud574 \ucf54\ub4dc\uc5d0 \uc5b4\ub5a4 \ubcc0\ud654\ub97c \ub9cc\ub4e4 \uc218 \uc788\uac8c \ud574\uc8fc\ub294\uc9c0\uc640 \uadf8\ub798\ud504\uac00 \uc5b4\ub5bb\uac8c \uc800\uc7a5\ub418\uace0 \ud45c\ud604\ub418\ub294\uc9c0, \uadf8\ub9ac\uace0 \ubaa8\ub378\uc744 \uac00\uc18d\ud654\ud558\uace0 \ub0b4\ubcf4\ub0b4\uae30 \uc704\ud574\uc11c \uc5b4\ub5bb\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294\uc9c0\uc5d0 \ub300\ud55c \ud575\uc2ec\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.","6b1810ec":"## \uc989\uc2dc \uc2e4\ud589\uc73c\ub85c \ub3cc\uc544\uac00\uae30","09ae415c":"\ubcf5\uc7a1\ud55c \uacc4\uc0b0\uc5d0\uc11c\ub294, \uadf8\ub798\ud504\uac00 \uc0c1\ub2f9\ud55c \uc18d\ub3c4 \ud5a5\uc0c1\uc744 \uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub798\ud504\uac00 Python\uc5d0\uc11c \uae30\uae30\ub85c\uc758 \ud1b5\uc2e0\uc744 \uc904\uc774\uace0 \uba87\uac00\uc9c0 \uc18d\ub3c4 \ud5a5\uc0c1\uc744 \uc9c4\ud589\ud558\uae30 \ub54c\ubb38\uc5d0 \uadf8\ub807\uc2b5\ub2c8\ub2e4.","945ed6b0":"\ud568\uc218\ub97c \ucd94\uc801\ud560 \ub54c, **\ub2e4\ud615\uc801\uc778** `Function` \uac1d\uccb4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \ub2e4\ud615\uc801\uc778 \ud568\uc218\ub294 \ud558\ub098\uc758 API \ub4a4\uc5d0 \uba87\uac1c\uc758 \uace0\uccb4 \ud568\uc218 \uadf8\ub798\ud504\ub97c \ucea1\uc220\ud654\ud558\ub294 Python \ud638\ucd9c \uac00\ub2a5 \ubcc0\uc218\uc785\ub2c8\ub2e4.","6561c913":"`Function`\uc740 \ubaa8\ub4e0 `dtypes`\uc640 \ubaa8\uc591 \uc704\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 \uc778\uc790\ub85c \ud638\ucd9c\ud560 \ub54c\ub9c8\ub2e4, \uc6d0\ubcf8 \ud568\uc218\ub294 \uc0c8\ub85c\uc6b4 \uc778\uc790\ub85c \uc7ac\ucd94\uc801\ub429\ub2c8\ub2e4. \uadf8\ub9ac\uace0 `Function`\uc740 `concrete_function` \uc548\uc5d0 \uadf8 \ucd94\uc801\uc5d0 \uc54c\ub9de\ub294 [tf.Graph](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Graph)\ub97c \uc800\uc7a5\ud569\ub2c8\ub2e4. \ud568\uc218\uac00 \uc774\ubbf8 \uc778\uc790\uc5d0 \ub300\ud574\uc11c \ucd94\uc801\uc774 \ub418\uc5c8\ub2e4\uba74, \uae30\uc874\uc758 \ucd94\uc801\ub41c \uadf8\ub798\ud504\ub97c \ubc1b\uac8c \ub429\ub2c8\ub2e4.","21d2c5a8":"## \uc18d\ub3c4 \ud5a5\uc0c1 \ud655\uc778","46166f57":"TensorFlow 1.x\ub97c \uc0ac\uc6a9\ud574\ubcf8 \uc801\uc774 \uc788\ub2e4\uba74, `Placeholder`\ub098 `tf.Session`\uc744 \uc815\uc758\ud560 \ud544\uc694\uac00 \uc5c6\uc5c8\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","3d0f8277":"\uc18d\ub3c4 \ud5a5\uc0c1\uc740 \uc544\ub798\uc640 \uac19\uc740 \uc5ec\ub7ec \uac1c\uc758 \uc791\uc740 \uce35\uc744 \uc2e4\ud589\ud560 \ub54c \uac00\uc7a5 \uba85\ubc31\ud558\uac8c \ub4dc\ub7ec\ub0a9\ub2c8\ub2e4:","c7af6ee0":"> **\ucc38\uace0**: TensorFlow 1.x\uc5d0 \uce5c\uc219\ud55c \ubd84\ub4e4\uc5d0\uac8c\ub294 \uc774 \uac00\uc774\ub4dc\uac00 \uadf8\ub798\ud504\uc5d0 \ub300\ud574 \ub9e4\uc6b0 \ub2e4\ub978 \uad00\uc810\uc73c\ub85c \uc124\uba85\ud560 \uac83\uc785\ub2c8\ub2e4.","cb3e3b01":"## \ub2e4\uc74c \ub2e8\uacc4","fe6faa00":"\uc774 \uac00\uc774\ub4dc\ub294 TensorFlow\uc640 Keras\uc758 \uc218\uba74 \uc544\ub798\uc5d0\uc11c TensorFlow\uac00 \uc5b4\ub5bb\uac8c \uc791\ub3d9\ud558\ub294\uc9c0 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \ub9cc\uc57d Keras\ub97c \ud65c\uc6a9\ud574 \ubc14\ub85c \uc2dc\uc791\ud558\uace0 \uc2f6\ub2e4\uba74, [Keras \uac00\uc774\ub4dc \ubaa8\uc74c](https:\/\/www.tensorflow.org\/guide\/keras)\uc744 \ubcf4\uc138\uc694.","4cd5f097":"\uadf8\ub7ec\ub098, \uc989\uc2dc \uc2e4\ud589\uc73c\ub85c \ud558\ub098\uc758 \ub2e8\uacc4\ub9cc \uc2e4\ud589\ud588\ub2e4\uba74, \ub450\ubc88\uc758 \uc989\uc2dc \uc2e4\ud589\uc758 \ubd80\uc791\uc6a9\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","891cd770":"\uac1c\ub150\uc801\uc73c\ub85c:\n* [tf.Graph](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Graph)\ub294 \uacc4\uc0b0\uc744 \ubb18\uc0ac\ud558\uae30 \uc704\ud55c \uac00\uacf5\ub418\uc9c0 \uc54a\uace0 \ud734\ub300\uc6a9\uc758 \uc790\ub8cc\uad6c\uc870\uc785\ub2c8\ub2e4.\n* `Function`\uc740 ConcreteFunction \uc704\uc5d0\uc11c \uce90\uc2dc\ud558\uace0, \ucd94\uc801\ud558\uace0, \ubcf4\ub0b4\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4.\n* `ConcreteFunction`\uc740 Python\uc5d0\uc11c \uadf8\ub798\ud504\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \uc989\uc2dc \uc2e4\ud589 \uac00\ub2a5\ud55c \uadf8\ub798\ud504\ub97c \ub458\ub7ec\uc2f8\ub294 \uac83\uc785\ub2c8\ub2e4.","3fcdf9ca":"\uc774\uc804 3\uac1c\uc758 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294, **\uc989\uc2dc** \uc2e4\ud589\ub418\ub294 TensorFlow\uc5d0 \ub300\ud574\uc11c \uc0b4\ud3b4\ubd24\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 TensorFlow \uc5f0\uc0b0\uc774 Python\uc5d0 \uc758\ud574, \uc5f0\uc0b0 \ud558\ub098 \ud558\ub098\uc529 \uc2e4\ud589\ub418\uba70, Python\uc5d0 \uacb0\uacfc\ub97c \ubc18\ud658\ud574\uc8fc\ub294 \uac83\uc744 \ub73b\ud569\ub2c8\ub2e4. \uc989\uc2dc \uc2e4\ud589\ub418\ub294 TensorFlow\ub294 \ubcc0\uc218, \ud150\uc11c, \uadf8\ub9ac\uace0 \uc5f0\uc0b0 \ub9c8\uc800\ub3c4 GPU\uc640 TPU\uc5d0 \uc62c\ub824\ub193\uc744 \uc218 \uc788\uac8c \ud574\uc8fc\uc5b4 GPU\uc758 \uc774\uc810\uc744 \uadf8\ub300\ub85c \uac00\uc838\uc635\ub2c8\ub2e4. \ub610\ud55c \ub514\ubc84\uae45\uc744 \ud558\uae30\ub3c4 \uc27d\uc2b5\ub2c8\ub2e4.","18ee38b9":"## \uadf8\ub798\ud504 \ucd94\uc801","fd6ecebe":"### \ud750\ub984 \uc81c\uc5b4\uc640 \ubd80\uc791\uc6a9","b4c3034d":"Autograph\ub294 `if-then`\uc808, \ubc18\ubcf5\ubb38, `break`, `return`, `continue` \ub4f1\uc744 \uc790\ub3d9\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.","43035508":"[tf.function](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/function)\uc740 \uc790\uccb4\uc801\uc73c\ub85c \ud638\ucd9c\ud558\ub294 \ubaa8\ub4e0 Python \ud568\uc218\ub4e4\uc744 \uc7ac\uadc0\uc801\uc73c\ub85c \ucd94\uc801\ud569\ub2c8\ub2e4.","a3cf8b3c":"### \uadf8\ub798\ud504\ub780 \ubb34\uc5c7\uc778\uac00?","013e50d6":"\n[tf.Graph](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Graph)\ub098 `with tf.Graph().as_default()`\ub97c \ub098\ud0c0\ub0b4\ub294 \uac83\ub4e4\ucc98\ub7fc \uae34 \uc2a4\ud0dd \ucd94\uc801\uc744 \ubcf4\uac8c \ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \uadf8\ub798\ud504 \ubb38\ub9e5 \uc548\uc5d0\uc11c \uc2e4\ud589\ud558\uace0 \uc788\uc744 \uac83\uc774\ub77c\ub294 \uac83\uc744 \ub73b\ud569\ub2c8\ub2e4. Keras\uc758 `model.fit()`\uacfc \uac19\uc740 TensorFlow \uc548\uc758 \uc911\uc2ec \ud568\uc218\ub4e4\uc740 \uadf8\ub798\ud504 \ubb38\ub9e5\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","d8d20b14":"### run_functions_eagerly \uc0ac\uc6a9","84289e44":"\ub300\ubd80\ubd84, Autograph\ub294 \ud2b9\ubcc4\ud55c \uace0\ub824\uc0ac\ud56d \uc5c6\uc774\ub3c4 \uc791\ub3d9\ud560 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uba87\uac00\uc9c0 \uacbd\uace0\ub294 \uc788\uc73c\uba70, [\uc644\uc804\ud55c autograph \ucc38\uace0](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/python\/autograph\/g3doc\/reference\/index.md)\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c [tf.function \uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/function)\uac00 \ub3c4\uc640\uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","36164167":"[tf.function](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/function)\ud654 \ub41c \ud568\uc218\ub4e4\uc740 Python\uc5d0\uc11c\uc640 \ub611\uac19\uc774 \uc791\ub3d9\ud558\ub294 [Python \ud638\ucd9c \uac00\ub2a5 \ubcc0\uc218](https:\/\/www.tensorflow.org\/guide\/intro_to_graphs)\uc785\ub2c8\ub2e4. \uc774\uac83\ub4e4\uc740 \ud2b9\uc815\ud55c \ud074\ub798\uc2a4(`python.eager.def_function.Function`)\uc744 \uac00\uc9c0\uc9c0\ub9cc, \ucd94\uc801\ub418\uc9c0 \uc54a\ub294 \ubc84\uc804\uacfc \ub611\uac19\uc774 \ud589\ub3d9\ud569\ub2c8\ub2e4.","853d10fe":"## \uac1c\uc694","5b3846c1":"# \uadf8\ub798\ud504\uc640 tf.function\uc5d0 \ub300\ud55c \uc18c\uac1c","48e52da0":"\ud655\uc2e4\ud558\uac8c \uc989\uc2dc \uc2e4\ud589\uc744 \ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4:\n* \ubaa8\ub378\uacfc \uce35\uc744 \ud638\ucd9c \uac00\ub2a5 \ubcc0\uc218\ucc98\ub7fc \uc9c1\uc811\uc801\uc73c\ub85c \ud638\ucd9c\ud569\ub2c8\ub2e4\n* Keras compile\uc774\ub098 fit\uc744 \uc0ac\uc6a9\ud558\ub294 \ub54c\uc5d0\ub294, \ucef4\ud30c\uc77c \uc2dc\uac04\uc5d0 `model.compile(run_eagerly=True)`\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4\n* [tf.config.run_functions_eagerly(True)](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/config\/run_functions_eagerly)\ub97c \ud1b5\ud574 \uc804\uc5ed \uc2e4\ud589 \ubc29\uc2dd\uc73c\ub85c \uc124\uc815\ud569\ub2c8\ub2e4","f963f90f":"### \ub2e4\ud615 \ud568\uc218"}}