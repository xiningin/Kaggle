{"cell_type":{"cf0bc46e":"code","8af81ef3":"code","259a2e14":"code","fb619e47":"code","717b1b25":"code","94b12ac0":"code","77283431":"code","720e041c":"code","83b358e7":"code","2ce9cdba":"code","ee05e2b2":"code","7dc8b951":"code","02e3a900":"code","76308b0a":"code","8e0bd755":"code","8130d500":"code","953c69ec":"code","9a0255a0":"code","2b3231da":"code","b475fc7c":"code","7ab813cb":"code","5f17519d":"code","2a808b53":"code","6593bb35":"code","21f0d88a":"code","8f968404":"code","972685e8":"code","03981358":"code","1ca8b6c0":"code","92afbab5":"code","c69fb874":"code","e10bcc52":"code","aaeffbe7":"code","6d40aeea":"code","5dfdc29c":"markdown","736761b5":"markdown","d7e5fd2d":"markdown","4263d751":"markdown","d6ffc70e":"markdown","30a3e80e":"markdown","564ffc34":"markdown","2141b047":"markdown","d69efe76":"markdown"},"source":{"cf0bc46e":"import numpy as np \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8af81ef3":"data = pd.read_csv(r\"\/kaggle\/input\/heart-disease-uci\/heart.csv\")\ndata.info()","259a2e14":"data.describe()","fb619e47":"data.columns","717b1b25":"data.isnull().sum()","94b12ac0":"print(data.sex.value_counts())\nlabels = 'Male', 'Female',\nsizes = [207, 96]\ncolors = [\"silver\",\"firebrick\"]\nexplode = (0, 0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes, explode=explode,colors = colors, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"\")\nplt.show()","77283431":"fig1, ax1 = plt.subplots(figsize =(20,10))\nplt.hist(data.age, bins=80,color = \"rosybrown\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Frequency\")\nplt.grid()\nplt.show()","720e041c":"print(data.cp.value_counts())\nlabels = 'Type 1', 'Type 2',  \"Type 3\" , \"Type 4\",\nsizes = [143, 87,50,23]\nexplode = (0, 0, 0, 0)\ncolors = [\"silver\",\"firebrick\",\"rosybrown\",\"steelblue\"]\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes, explode=explode, labels=labels,colors=colors , autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Chest Pain Type\")\nplt.show()","83b358e7":"fig1, ax1 = plt.subplots(figsize =(20,10))\nplt.hist(data.trestbps, bins=80,color = \"rosybrown\")\nplt.xlabel(\"Resting blood preasure\")\nplt.ylabel(\"Frequency\")\nplt.grid()\nplt.show()","2ce9cdba":"fig1, ax1 = plt.subplots(figsize =(20,10))\nplt.hist(data.chol, bins=80,color = \"rosybrown\")\nplt.xlabel(\"serum cholestoral in mg\/dl\")\nplt.ylabel(\"Frequency\")\nplt.grid()\nplt.show()","ee05e2b2":"print(data.fbs.value_counts())\nlabels = 'FBS > 120', 'FBS < 120',\nsizes = [258, 45]\nexplode = (0, 0)\ncolors = [\"silver\",\"firebrick\"]\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes, explode=explode, labels=labels,colors = colors, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Fasting Blood Sugar\")\nplt.show()","7dc8b951":"print(data.restecg.value_counts())\nlabels = '0', '1' , '2',\nsizes = [147, 152,4]\nexplode = (0, 0,0)\ncolors = [\"silver\",\"firebrick\",\"rosybrown\"]\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes, explode=explode,colors = colors, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"resting electrocardiographic results\")\nplt.show()","02e3a900":"fig1, ax1 = plt.subplots(figsize =(20,10))\nplt.hist(data.thalach, bins=80,color =\"rosybrown\")\nplt.xlabel(\"maximum heart rate achieved\")\nplt.ylabel(\"Frequency\")\nplt.grid()\nplt.show()","76308b0a":"print(data.exang.value_counts())\nlabels = '0', '1' ,\nsizes = [204, 99]\nexplode = (0 , 0)\ncolors = [\"silver\",\"firebrick\"]\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes, explode=explode,colors = colors, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"exercise induced angina\")\nplt.show()","8e0bd755":"fig1, ax1 = plt.subplots(figsize =(10,10))\nplt.scatter(data.index,data.oldpeak,color = \"red\",alpha = 0.6)\nplt.grid()\nplt.xlabel(\"index\")\nplt.ylabel(\"value\")\nplt.title(\"ST depression induced by exercise relative to rest\")\nplt.show()","8130d500":"print(data.slope.value_counts())\nlabels = '2', '1' , '0' ,\nsizes = [142, 140 , 21]\nexplode = (0 , 0 , 0)\ncolors = [\"silver\",\"firebrick\",\"rosybrown\"]\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes, explode=explode,colors = colors, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"the slope of the peak exercise ST segment\")\nplt.show()","953c69ec":"print(data.ca.value_counts())\nlabels = '0', '1' , '2' , ' 3' , '4',\nsizes = [175, 65 , 38,20,5]\nexplode = (0 , 0 , 0,0,0)\ncolors = [\"coral\",\"khaki\",\"tan\",\"mediumaquamarine\",\"palevioletred\"]\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes, explode=explode, labels=labels,colors = colors, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"number of major vessels (0-3) colored by flourosopy\")\nplt.show()","9a0255a0":"print(data.thal.value_counts())\nlabels = '0', '1' , '2' , ' 3' ,\nsizes = [2, 18 , 166,117]\nexplode = (0 , 0 ,0,0)\ncolors = [\"khaki\",\"tan\",\"mediumaquamarine\",\"palevioletred\"]\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes, explode=explode, labels=labels,colors = colors ,autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"thal: 0 = normal; 1 = fixed defect; 2 = reversable defect\")\nplt.show()","2b3231da":"print(data.target.value_counts())\nlabels = '0', '1' ,\nsizes = [165,138]\nexplode = (0 , 0 )\ncolors = [\"silver\",\"firebrick\"]\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes, explode=explode, labels=labels,colors = colors, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"target: 0= less chance of heart attack 1= more chance of heart attack\")\nplt.show()","b475fc7c":"df = pd.DataFrame(data,columns=['age','sex','target'])\nf, ax = plt.subplots(figsize =(10,10))\ncorrMatrix = df.corr()\nsns.heatmap(corrMatrix, annot=True)\nplt.show()","7ab813cb":"g = sns.catplot(\n    data=data, kind=\"bar\",\n    x=\"target\", y=\"age\", hue=\"sex\",\n    ci=\"sd\", palette=\"dark\", alpha=.6, height=6\n)\ng.despine(left=True)\ng.set_axis_labels(\"Target\", \"Age\")\nplt.show()","5f17519d":"g = sns.catplot(\n    data=data, kind=\"bar\",\n    x=\"sex\", y=\"chol\", hue=\"target\",\n    ci=\"sd\", palette=\"dark\", alpha=.6, height=6\n)\ng.despine(left=True)\ng.set_axis_labels(\"sex\", \"chol\")\nplt.show()","2a808b53":"y = data.target\ndata.drop([\"target\"],axis = 1 , inplace = True)\ndata_copy = data.copy()\ndata.columns","6593bb35":"data = pd.get_dummies(data,columns = [\"sex\",\"cp\",\"fbs\",\"restecg\",\"exang\",\"slope\",\"ca\",\"thal\"])\ndata","21f0d88a":"x = (data-np.min(data)) \/ (np.max(data)-np.min(data))\nx","8f968404":"from sklearn.model_selection import train_test_split\nx_train , x_test , y_train, y_test = train_test_split(x,y,test_size = 0.2 , random_state = 42)","972685e8":"from sklearn.svm import SVC\nsvm1 = SVC(gamma = 0.1 , C = 1 , kernel = \"rbf\")\nsvm1.fit(x_train,y_train)\nsvm1_score = svm1.score(x_test,y_test)\nprint(\"SVM Max Score = : \", svm1_score)","03981358":"y_pred = svm1.predict(x_test)\ny_true = y_test\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_true,y_pred)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nf, ax = plt.subplots(figsize =(8,8))\nsns.heatmap(cm,annot = True,linewidths=0.5,linecolor=\"blue\",fmt = \".0f\",ax=ax)\nplt.xlabel(\"y_pred\")\nplt.ylabel(\"y_true\")\nplt.show()\n","1ca8b6c0":"knn_list = []\nfrom sklearn.neighbors import KNeighborsClassifier\nfor each in range(1,100):\n    knn1 = KNeighborsClassifier(n_neighbors = each,weights = \"distance\",metric = \"euclidean\" )\n    knn1.fit(x_train,y_train)\n    knn1_score = knn1.score(x_test,y_test)\n    knn_list.append(knn1_score)\nknn_max = np.max(knn_list)\nprint(\"KNN Max Score = \",knn_max)","92afbab5":"y_pred2 = knn1.predict(x_test)\ny_true2 = y_test\nfrom sklearn.metrics import confusion_matrix\ncm2 = confusion_matrix(y_true2,y_pred2)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nf, ax = plt.subplots(figsize =(8,8))\nsns.heatmap(cm2,annot = True,linewidths=0.5,linecolor=\"blue\",fmt = \".0f\",ax=ax)\nplt.xlabel(\"y_pred\")\nplt.ylabel(\"y_true\")\nplt.show()","c69fb874":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression(C = 10.0 , penalty = \"l2\")\nlr.fit(x_train,y_train)\nprint(\"Logistic Regression Max Score : \",lr.score(x_test,y_test))\nlr_max = lr.score(x_test,y_test)","e10bcc52":"y_pred3 = lr.predict(x_test)\ny_true3 = y_test\nfrom sklearn.metrics import confusion_matrix\ncm3 = confusion_matrix(y_true3,y_pred3)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nf, ax = plt.subplots(figsize =(8,8))\nsns.heatmap(cm3,annot = True,linewidths=0.5,linecolor=\"blue\",fmt = \".0f\",ax=ax)\nplt.xlabel(\"y_pred\")\nplt.ylabel(\"y_true\")\nplt.show()","aaeffbe7":"score_list = []\nfrom sklearn.ensemble import RandomForestClassifier\nfor each in range (1,100):\n    rf = RandomForestClassifier(n_estimators = each,random_state = 42,bootstrap = \"False\",criterion=\"gini\",\n                                min_samples_split = 2 , min_samples_leaf = 1)\n    rf.fit(x_train,y_train)\n    score_list.append(rf.score(x_test,y_test))\n    \nrf_max = np.max(score_list)\nprint(\"RF Max Score : \",rf_max)","6d40aeea":"y_pred4 = rf.predict(x_test)\ny_true4 = y_test\nfrom sklearn.metrics import confusion_matrix\ncm4 = confusion_matrix(y_true4,y_pred4)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nf, ax = plt.subplots(figsize =(8,8))\nsns.heatmap(cm4,annot = True,linewidths=0.5,linecolor=\"blue\",fmt = \".0f\",ax=ax)\nplt.xlabel(\"y_pred\")\nplt.ylabel(\"y_true\")\nplt.show()\n","5dfdc29c":"<a id = \"6\"><\/a>\n<font color ='purple'>\n## 4.2 K-Nearest Neighbors Classification","736761b5":"\n<font color ='red'>\nContent :\n    \n    \n    \n1. [  Load and Check Data](#1)\n    \n2. [ Visualizing Data](#2)    \n    \n3. [ Feature Engineering](#3)    \n    \n4. [ Prediction](#4)    \n    4.1[ Support Vector Classification](#5)    \n    4.2[ K-Nearest Neighbor Classification](#6)         \n    4.3[ Logistic Regression Classification](#7)             \n    4.4[ Random Forest Classification](#8)\n    ","d7e5fd2d":"<a id = \"7\"><\/a>\n<font color ='purple'>\n## 4.3 Logistic Regression Classification","4263d751":"<a id = \"3\"><\/a>\n<font color ='red'>\n## 3. Feature Engineering","d6ffc70e":"<a id = \"4\"><\/a>\n<font color ='red'>\n## 4. Prediction","30a3e80e":"<a id = \"5\"><\/a>\n<font color ='purple'>\n## 4.1 Support Vector Classification","564ffc34":"<a id = \"2\"><\/a>\n<font color ='red'>\n## 2. Visualizing Data","2141b047":"<a id = \"8\"><\/a>\n<font color ='purple'>\n## 4.4 Random Forest Classification","d69efe76":"<a id = \"1\"><\/a>\n<font color ='red'>\n## 1. Load and Check Data"}}