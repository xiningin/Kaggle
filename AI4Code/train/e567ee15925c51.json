{"cell_type":{"4d8a820e":"code","36c67eb3":"code","bcbb13f5":"code","88a8232f":"code","5da55b8d":"code","70b42adc":"code","0dd9f572":"code","c8c99470":"markdown","0f5e6713":"markdown","17eec016":"markdown","98014703":"markdown","769c954d":"markdown"},"source":{"4d8a820e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv(\"\/kaggle\/input\/nifty50-stock-market-data\/HDFCBANK.csv\")\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","36c67eb3":"price = df[['Date','Close']]\nprice.Date = pd.to_datetime(price.Date, format=\"%Y-%m-%d\")\nprice=price[(price['Date'] >pd.Timestamp(2019,1,1))]\nprice.head()","bcbb13f5":"plt.plot(price.Date, price.Close)\nplt.figure(figsize=(14,7))\nplt.gcf().autofmt_xdate() \nplt.show()","88a8232f":"#price.Close = price.Close.mask( price.Date >='2011-07-14', price.Close*5)\nprice.Close = price.Close.mask( price.Date >='2019-09-19', price.Close*2)\n\nplt.plot(price.Date, price.Close)\nplt.figure(figsize=(60,120))\n\n","5da55b8d":"#price.sort_values(by='Date', ascending=False, inplace=True)\nprice.head()","70b42adc":"price['lowest_cumulative_price']=price.Close.cummin()\nprice['highest_profit']=price.Close-price['lowest_cumulative_price']\nprice.highest_profit.max()","0dd9f572":"price['highest_cumulative_price']=price.Close.cummax()\nprice['highest_loss']=price.Close-price['highest_cumulative_price']\nprice.highest_loss.min()","c8c99470":"Thanks vopani for the dataset and Rob and WD for the problem: [Largest Profit or Loss Problem without For loop](https:\/\/ryxcommar.com\/2019\/08\/05\/a-cool-sql-problem-avoiding-for-loops\/)\n\n**Problem:**\n> You have a table of trading days (with no gaps) and close prices for a stock.\n> Find the highest and lowest profits (or losses) you could have made if you bought the stock at one close price and sold it at another close price, i.e. a total of exactly two transactions.\n> You cannot sell a stock before it has been purchased. \n>Avoid For loop","0f5e6713":"Stock splits happened in 2011-07-14(1:5 ratio) and 2019-09-19(1:2 ratio). So, normalizing the time series.\n","17eec016":"* Highest Profit that could have been made","98014703":"* Biggest Loss that could have been made","769c954d":"###  HDFC Bank stock data: Finding the highest profit and loss in 2019"}}