{"cell_type":{"f572cdb0":"code","bafe49b0":"code","b7a854c2":"code","4a3493dd":"code","96a330a8":"code","6f32ac42":"code","dffd80aa":"code","c19b0fb0":"code","8fc7ec22":"code","425a015b":"code","8e9264fb":"code","3123c545":"code","9c9b119e":"code","6ebcada4":"code","c9a66e8f":"code","83b9854d":"code","26abadae":"code","fb9fffcf":"code","9789a73b":"code","b412cffa":"code","13d49669":"code","ca98b5ca":"code","d8e5155f":"code","f338cfc3":"code","2f8c322a":"code","14f6c043":"code","62f92a5c":"code","725c265f":"code","8e8a24f5":"code","f7afd57e":"code","31b16336":"code","267459e5":"code","1373f027":"markdown","630089d8":"markdown","41f3b7e1":"markdown","b1115966":"markdown","0e1c8882":"markdown","12a98d51":"markdown","93874fe3":"markdown","ac2f1cd4":"markdown","bdc50f7b":"markdown","7a67cc11":"markdown","bfea22ad":"markdown","2c23a933":"markdown","49aeb6d4":"markdown","51f0bc78":"markdown"},"source":{"f572cdb0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bafe49b0":"df = pd.read_csv('\/kaggle\/input\/iris-flower-dataset\/IRIS.csv')\ndf.head()","b7a854c2":"df.info","4a3493dd":"df.describe()","96a330a8":"df.shape","6f32ac42":"#checking for null values\ndf.isna().apply(pd.value_counts)","dffd80aa":"%matplotlib inline\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nsns.distplot(df['sepal_length'])","c19b0fb0":"sns.distplot(df['sepal_width'])","8fc7ec22":"sns.distplot(df['petal_length'])","425a015b":"sns.distplot(df['petal_width'])","8e9264fb":"df.skew()","3123c545":"sns.pairplot(df, hue='species')","9c9b119e":"sns.boxplot(df['sepal_length'])","6ebcada4":"sns.boxplot(df['sepal_width'])","c9a66e8f":"sns.boxplot(df['petal_length'])","83b9854d":"sns.boxplot(df['petal_width'])","26abadae":"corr = df.corr()\ncorr","fb9fffcf":"plt.figure(figsize = (20,10))\nsns.heatmap(corr, cmap='RdYlGn', vmax = 1.0, vmin = -1.0)","9789a73b":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics\nfrom sklearn import preprocessing\nfrom sklearn.metrics import confusion_matrix \nfrom sklearn.metrics import accuracy_score \nfrom sklearn.metrics import classification_report \nfrom sklearn.metrics import average_precision_score\nfrom sklearn.metrics import recall_score","b412cffa":"X = df.iloc[0:,:4]\ny = df['species']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 42)\nprint(X_train.shape)\nprint(X_test.shape)","13d49669":"# import logistic regression and training data set\nmodel = LogisticRegression(random_state=1)\nmodel.fit(X_train, y_train)","ca98b5ca":"y_pred = model.predict(X_test)\ny_pred","d8e5155f":"accuracy_score(y_test,y_pred)","f338cfc3":"#Classification Report\nprint(classification_report(y_test, y_pred, digits = 2))","2f8c322a":"from sklearn.neighbors import KNeighborsClassifier\n#Running KNN model for k=3\n\nknn = KNeighborsClassifier(n_neighbors = 3)\n\n#fitting the model in train data\n\nknn.fit(X_train, y_train)\n\n#predicting the model with k=3\n\nknn_pred = knn.predict(X_test)\n\n#printing the accuracy\n\nprint(accuracy_score(y_test, knn_pred))\n\n#Running KNN model for k=5\n\nknn = KNeighborsClassifier(n_neighbors = 5)\n\n#fitting the model in train data\n\nknn.fit(X_train, y_train)\n\n#predicting the model with k=5\n\nknn_pred = knn.predict(X_test)\n\n#printing the accuracy\n\nprint(accuracy_score(y_test, knn_pred))\n\n#Running KNN model for k=9\n\nknn = KNeighborsClassifier(n_neighbors = 9)\n\n#fitting the model in train data\n\nknn.fit(X_train, y_train)\n\n#predicting the model with k=9\n\nknn_pred = knn.predict(X_test)\n\n#printing the accuracy\n\nprint(accuracy_score(y_test, knn_pred))","14f6c043":"conf_mat1 = confusion_matrix(y_test, knn_pred)\nconf_mat1\n#confusion matrix with heatmap\nplt.figure(figsize = (9,7))\nsns.heatmap(conf_mat1, annot=True,cmap='Blues', fmt='g')","62f92a5c":"#importing naive bayes\nfrom sklearn.naive_bayes import GaussianNB\nclf = GaussianNB()\nclf.fit(X_train, y_train)\n#predicting the values\nnb_predict = clf.predict(X_test)\nnb_predict","725c265f":"#printing the accuracy\naccuracy_score(y_test, nb_predict, normalize = True)","8e8a24f5":"conf_mat2 = confusion_matrix(y_test, nb_predict)\nconf_mat2\n#confusion matrix with heatmap\nplt.figure(figsize = (9,7))\nsns.heatmap(conf_mat1, annot=True,cmap='Blues', fmt='g')","f7afd57e":"from sklearn.svm import SVC\nsvc_model = SVC(C= .1, kernel='linear', gamma= 1)\nsvc_model.fit(X_train, y_train)\n\nprediction = svc_model.predict(X_test)\nprediction","31b16336":"# check the accuracy on the training set\nprint(svc_model.score(X_train, y_train))\nprint(svc_model.score(X_test, y_test))","267459e5":"#confusion matrix with heatmap\nconf_mat3 = confusion_matrix(y_test, prediction)\nsns.heatmap(conf_mat3, annot=True,cmap='Blues', fmt='g')","1373f027":"K Nearest Neighbor","630089d8":"Boxplots to check outliers","41f3b7e1":"In sepal_width, the outliers are clearly visible.","b1115966":"Logistic Regression","0e1c8882":"Support Vector Machine","12a98d51":"If you have reached till here, thanks a lot do upvote and if you want to Follow AI & Data Sciences religiously, visit https:\/\/datamahadev.com and subscribe to my blog & publishing website as the Kaggle community support is much needed.","93874fe3":"Using heatmap for better presentation of correlation of the data","ac2f1cd4":"The describe function helps us no the basic statistics of the dataset, including the 5 point stats summary","bdc50f7b":"Naive Bayes","7a67cc11":"sepal_length and sepal_width are positivley skewed as we can depict it in the distplot function itself, while petal_length & petal_width are negatively skewed. A fatter tail on the left side of the distribution is negatively skewed while fatter tail on the right side represents positive skewness.","bfea22ad":"All the variables seem to highly correlate with each other. To learn the basic hacks of data visualization using seaborn visit this link https:\/\/datamahadev.com\/13-ultimate-seaborn-tricks-using-python\/","2c23a933":"Checking out the normalization of all the variables, we can predict that the variables consist of outliers and some variables are more on the higher length and width of sepals & petals. We will draw boxplots to check out the outliers.","49aeb6d4":"Applying different classification models","51f0bc78":"One of the major time that a data scientist spends is in cleaning of the data. Thanks to the Almighty Mahadev, there is no missing data."}}