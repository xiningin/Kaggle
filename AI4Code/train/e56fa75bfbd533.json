{"cell_type":{"75467978":"code","26585a97":"code","71cb5fba":"code","ccda37a1":"code","30e87533":"code","75db065e":"code","46b399e8":"code","55dee039":"code","83771e6b":"code","b139aae0":"code","9c90f382":"code","54e10e16":"code","5c45d7f9":"code","4384e4c1":"code","530e52f3":"code","c4a5ec7f":"code","6ab76539":"code","e7edb404":"code","701cef11":"code","c9dad596":"code","7ab002b1":"code","bbf6a1d7":"code","cb1e1e5f":"code","0e316d7f":"code","1ee1a7cb":"code","a12316a5":"code","8b5cf2dd":"code","125e8dba":"code","faf863bf":"code","0d37414d":"code","065438da":"code","72009433":"code","f828e6ad":"code","b234ef05":"code","85cbdaaf":"code","3256ad35":"code","3313fba6":"code","248d9cb5":"code","ef4d0e66":"code","b5e7581f":"code","871e962c":"markdown","fc47775c":"markdown","2b1f37db":"markdown","997d3bb5":"markdown","35c5d2dd":"markdown","0c7d3255":"markdown","671dd9cd":"markdown","47ab9715":"markdown","343b889e":"markdown"},"source":{"75467978":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","26585a97":"df = pd.read_csv('\/kaggle\/input\/iris-flower-dataset\/IRIS.csv')","71cb5fba":"iris = df.copy()\niris.head()","ccda37a1":"iris.info()\niris.species.value_counts()","30e87533":"iris.describe().T","75db065e":"plt.figure(figsize=(8,6));\nsns.pairplot(iris,kind='reg',hue ='species',palette=\"husl\" );","46b399e8":"plt.figure(figsize=(8,6));\nsns.scatterplot(x=iris.sepal_length,y=iris.sepal_width,hue=iris.species).set_title(\"Sepal length and Sepal width distribution of three flowers\");","55dee039":"plt.figure(figsize=(8,6));\ncmap = sns.cubehelix_palette(dark=.5, light=.9, as_cmap=True)\nax = sns.scatterplot(x=\"petal_length\", y=\"petal_width\",hue=\"species\",size=\"species\",sizes=(20,200),legend=\"full\",data=iris);","83771e6b":"#Encoding Categorical Data\nfrom sklearn.preprocessing import LabelEncoder\nlb_make = LabelEncoder()\niris['species'] = lb_make.fit_transform(iris['species'])\niris.sample(3)","b139aae0":"# # PCA ===> if data consist of too many parameters\/variables(columns) then we need to use PCA; in this data it is not necessary\n# from sklearn.decomposition import PCA\n# pca = PCA(n_components = 2,whiten = True) #whitten = normalize\n# pca.fit(iris)\n# x_pca = pca.transform(iris)","9c90f382":"# Importing metrics for evaluation\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report","54e10e16":"y = iris.species\nX = iris.drop('species',axis = 1)","5c45d7f9":"#Train and Test split,cross_val,k-fold\nfrom sklearn.model_selection import KFold,train_test_split,cross_val_score\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=0)","4384e4c1":"from sklearn.neighbors import KNeighborsClassifier","530e52f3":"knn = KNeighborsClassifier(n_neighbors = 3)\nknn.fit(X_train,y_train)","c4a5ec7f":"y_pred = knn.predict(X_test)","6ab76539":"# Summary of the predictions made by the KNN\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n","e7edb404":"# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_pred,y_test))","701cef11":"from sklearn.naive_bayes import GaussianNB\nnb = GaussianNB()\nnb.fit(X_train,y_train)","c9dad596":"y_pred = nb.predict(X_test)","7ab002b1":"# Summary of the predictions made by the NB\/\/\/Accuracy Score\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint('accuracy is',accuracy_score(y_pred,y_test))","bbf6a1d7":"from sklearn.svm import SVC","cb1e1e5f":"svc = SVC()\nsvc.fit(X_train,y_train)","0e316d7f":"y_pred = svc.predict(X_test)","1ee1a7cb":"# Summary of the predictions made by the SVC\/\/\/Accuracy Score\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint('accuracy is',accuracy_score(y_pred,y_test))","a12316a5":"from sklearn.ensemble import RandomForestClassifier","8b5cf2dd":"rfc = RandomForestClassifier(n_estimators=100)\nrfc.fit(X_train,y_train)","125e8dba":"y_pred = rfc.predict(X_test)","faf863bf":"# Summary of the predictions made by the Random Forest\/\/\/Accuracy Score\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint('accuracy is',accuracy_score(y_pred,y_test))","0d37414d":"df = iris[50:]\ny = df.species\nX = df.drop('species',axis = 1)\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=0)","065438da":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(X_train,y_train)","72009433":"y_pred = lr.predict(X_test)","f828e6ad":"# Summary of the predictions made by the Logistic Reg\/\/Accuracy Score\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint('accuracy is',accuracy_score(y_pred,y_test))","b234ef05":"from sklearn.model_selection import GridSearchCV #Grid search CV method import","85cbdaaf":"grid = {\"C\":np.logspace(-3,3,7),\"penalty\":[\"l1\",'l2']}","3256ad35":"lr_cv = GridSearchCV(lr,grid,cv =10)\nlr_cv.fit(X_train,y_train)","3313fba6":"lr_cv.best_params_","248d9cb5":"lr_cv_model = LogisticRegression(C=1.0, penalty='l2')\nlr_cv_model.fit(X_train,y_train)","ef4d0e66":"y_pred = lr_cv_model.predict(X_test)","b5e7581f":"# Summary of the predictions made by the Logistic Reg Validated model\/\/Accuracy Score\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint('accuracy is',accuracy_score(y_pred,y_test))","871e962c":"## Creating ML Classify Models","fc47775c":"### 3) Support Vector Machine","2b1f37db":"## Visualization","997d3bb5":"### 4) Random Forest","35c5d2dd":"### 5) Logistic Regression","0c7d3255":"### Creating validated model.","671dd9cd":"### 2) Naive Bayes","47ab9715":"### I have tried to use classification models for predicting 3 different species with ML models. Becasue of the Logistic Regression model need to 2 choices I made a prediction model about versicolor and virginica.\n\n### If you like it please upvote\n### References :\n**** https:\/\/www.kaggle.com\/sherli\/iris-complete-eda-classification-and-clustering#Plot-decision-boundary-for-Logistic-Regression-classifier\n**** https:\/\/www.kaggle.com\/gauravahujaravenclaw\/iris-dataset-analysis-and-machine-learning","343b889e":"### KNN Model"}}