{"cell_type":{"6aa627fe":"code","e9556f9d":"code","1b93a0c9":"code","37b7db9d":"code","71f37d15":"code","31a76fa7":"code","b38704f2":"code","aa48014a":"code","aba952f9":"code","3271ceec":"code","0a9ae188":"code","adbaf869":"code","73cc714d":"code","b0268ed1":"code","bb6b05c9":"code","41ca4a82":"code","75fa2a61":"code","dff83471":"code","675df612":"code","c4dfd982":"code","1bdd84f9":"code","7895a391":"code","5994c1e2":"code","4837c561":"code","4b1b8f0c":"code","5a23b0d9":"code","d955a43e":"code","ec52dfe4":"code","6c7d07d6":"code","dcf729c9":"code","8ffd2463":"code","60cfd463":"code","aab6f755":"code","5f2a2fda":"code","44a2f9bc":"code","38a53cc9":"code","4f607731":"code","88d410e2":"code","214e5289":"code","9e94faee":"code","e2571053":"code","eec6bfdb":"code","e1b738aa":"code","e5a9635c":"code","92a3a5b6":"code","afe1c5da":"code","e5d25bd3":"markdown","b1d04859":"markdown","5da1e553":"markdown","dacde78d":"markdown"},"source":{"6aa627fe":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.metrics import accuracy_score,confusion_matrix,roc_auc_score, roc_curve\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier, BaggingClassifier\nimport xgboost as xgb\n","e9556f9d":"df_train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","1b93a0c9":"df_train.head()","37b7db9d":"df_test.head()","71f37d15":"df_train.corr()","31a76fa7":"df_train.shape","b38704f2":"df_train.describe()","aa48014a":"df_test.isnull().sum()","aba952f9":"df_train.describe(include=['O'])","3271ceec":"df_train['Embarked'].fillna(df_train['Embarked'].mode()[0],inplace = True)","0a9ae188":"sns.countplot(x = 'Survived',hue = 'Sex',data = df_train)","adbaf869":"df_train.Age.plot.hist(color = 'r')","73cc714d":"sns.boxplot(data = df_train)","b0268ed1":"sns.boxplot(x = 'Pclass',y = 'Age',data = df_train)","bb6b05c9":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass ==1:\n            return 37\n        elif Pclass ==2:\n            return 29\n        else:\n            return 24\n        \n    return Age    ","41ca4a82":"df_train['Age'].fillna(impute_age(df_train['Age']),inplace = True)\ndf_test['Age'].fillna(impute_age(df_test['Age']),inplace = True)","75fa2a61":"df_test.isnull().sum()","dff83471":"pd.set_option('display.max_rows',None)\ndf_test = df_test.drop('Cabin',axis = 1)\ndf_test.loc[pd.isnull(df_test).any(1),:]","675df612":"df_train['Sex'] = df_train['Sex'].map({'male':1,'female':0})\ndf_test['Sex'] = df_test['Sex'].map({'male':1,'female':0})","c4dfd982":"print(df_train['SibSp'].value_counts())\nprint('------'*10)\ndf_train['Parch'].value_counts()","1bdd84f9":"df_test['Fare'].fillna(method = 'ffill',inplace = True)","7895a391":"df_train = pd.get_dummies(df_train,columns = ['Embarked'],drop_first = True)\ndf_test = pd.get_dummies(df_test,columns = ['Embarked'],drop_first = True)","5994c1e2":"df_train.columns","4837c561":"sns.barplot(x = 'Survived',y = 'Age',hue = 'Sex',data = df_train)\nplt.show()","4b1b8f0c":"df_train['Survived'].value_counts()","5a23b0d9":"features = ['Pclass','Sex','Age','SibSp','Parch','Fare','Embarked_Q','Embarked_S']\nX = df_train[features]\ny = df_train['Survived']","d955a43e":"# import pandas_profiling\n# df_train.profile_report(style={'full_width':True})","ec52dfe4":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25,random_state = 42)","6c7d07d6":"def model(algo):\n    y_pred = algo.fit(X_train,y_train).predict(X_test)\n    i = str(algo).split('(')[0]\n    print('\\n---------',i,'---------')\n    print('accuracy_score : ',accuracy_score(y_test,y_pred))\n    \nlog_reg = LogisticRegression()\ndec_tree  = DecisionTreeClassifier()\ngnb = GaussianNB()\nknn3 = KNeighborsClassifier(n_neighbors=3)\nknn5 = KNeighborsClassifier(n_neighbors=5)\nknn7 = KNeighborsClassifier(n_neighbors=7)\nrf = RandomForestClassifier(n_estimators=100)\nbg = BaggingClassifier()\n\nmodels = [log_reg,dec_tree,gnb,knn3,knn5,knn7,rf,bg]\n","dcf729c9":"for algo in models:\n    model(algo)","8ffd2463":"from sklearn.ensemble import AdaBoostClassifier\nadb = AdaBoostClassifier()\ny_pred = adb.fit(X_train,y_train).predict(X_test)\naccuracy_score(y_test,y_pred)","60cfd463":"xgbc = xgb.XGBClassifier(learning_rate=0.01)\ny_pred = xgbc.fit(X_train,y_train).predict(X_test)\naccuracy_score(y_test,y_pred)\n","aab6f755":"# !pip install graphviz","5f2a2fda":"# import graphviz \n# dot_data = tree.export_graphviz(dtree, out_file=None, \n#                                 feature_names = data1_x_bin, class_names = True,\n#                                 filled = True, rounded = True)\n# graph = graphviz.Source(dot_data) \n# graph","44a2f9bc":"from sklearn.preprocessing import StandardScaler\nscX = StandardScaler() \nX_train = scX.fit_transform(X_train) \nX_test = scX.fit_transform(X_test)","38a53cc9":"model(log_reg)","4f607731":"model(adb)","88d410e2":"from sklearn.decomposition import PCA\npca = PCA(n_components = None) \nX_train = pca.fit_transform(X_train)\nX_test = pca.transform(X_test)\nexplainedvariance = pca.explained_variance_ratio_","214e5289":"explainedvariance","9e94faee":"pred = log_reg.fit(X_train,y_train).predict(X_test)\naccuracy_score(y_test,y_pred)","e2571053":"test = df_test[features]\ntest = scX.fit_transform(test)\ntest  = pca.fit_transform(test)","eec6bfdb":"preds = log_reg.predict(test)","e1b738aa":"from sklearn.linear_model import SGDClassifier\npredxgb = xgb.XGBClassifier(max_depth = 20,learning_rate = 0.1,n_estimators=70,gamma = 1,subsample=1).fit(X_train,y_train).predict(X_test)\naccuracy_score(y_test,predxgb)","e5a9635c":"sgd_pred = SGDClassifier().fit(X_train,y_train).predict(X_test)\naccuracy_score(y_test,sgd_pred)","92a3a5b6":"sample_submission = pd.DataFrame({'PassengerId':df_test['PassengerId'],'Survived':preds})\nsample_submission.head()","afe1c5da":"sample_submission.to_csv('submission.csv',index = False)","e5d25bd3":"## The best results were given by logistic regression","b1d04859":"### Importing The Dataset","5da1e553":"## Modelling","dacde78d":"## Importing Necessary Libraries "}}