{"cell_type":{"0b66cb86":"code","80a1be6c":"code","18beed13":"code","fc62c783":"code","fa6ec58e":"code","610c93bc":"code","65e98994":"code","91dfb840":"code","6dba09d9":"code","f9b63085":"code","823e7158":"code","83559d7f":"code","71cb8a5d":"code","de1f4ab8":"code","377e9499":"code","a8634d7b":"code","b7805362":"code","1bd89c5f":"code","116f9110":"code","7db78378":"markdown","0812fd9f":"markdown","56f31c94":"markdown","76c15dc3":"markdown","6beb1f65":"markdown"},"source":{"0b66cb86":"#importing libaries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf","80a1be6c":"#importing dataset\nds = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')","18beed13":"#reviewing dataset\npd.set_option('display.max_columns',None)\nds.head()","fc62c783":"#dropping unnecessary features\nds.drop(['id', 'Unnamed: 32'], axis = 1, inplace = True)","fa6ec58e":"#checking type of feaures\nds.info()","610c93bc":"#dataset has 569 rows and 31 columns\nds.shape","65e98994":"#checking for null values\nds.isnull().sum()","91dfb840":"#taking care of categorical values\nfrom sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\nds['diagnosis']=le.fit_transform(ds['diagnosis'])","6dba09d9":"plt.figure(figsize = (8,6))\nsns.countplot(x = 'diagnosis', data = ds)","f9b63085":"plt.figure(figsize=(16,14))\nsns.heatmap(ds.corr(), cmap='Blues', annot = True)\nplt.title(\"Correlation Map\", fontweight = \"bold\", fontsize=16)","823e7158":"#defining dependent and independent variables\nx = ds.drop('diagnosis', axis=1)\ny = ds['diagnosis']","83559d7f":"#splitting data into training and testing set\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)","71cb8a5d":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)","de1f4ab8":"from tensorflow.keras.layers import Dropout\n\n\n#CREATING THE ANN AS SEQUENCE OF LAYERS\nann = tf.keras.models.Sequential()\n\n#ADDING FIRST HIDDEN LAYER WITH 30 NEURONS, THE INPUT LAYER WILL BE ADDED AUTOMATICALLY,\nann.add(tf.keras.layers.Dense(units = 30,activation = 'relu'))\nann.add(Dropout(0.5))\n\n#ADDING 2ND HIDDEN LAYER WITH 30 NEURONS\nann.add(tf.keras.layers.Dense(units = 30,activation = 'relu'))\nann.add(Dropout(0.5))\n\n#ADDING OUTPUT LAYER WITH 1 NEURON , AS THIS IS A BINARY CLASSIFICATION\nann.add(tf.keras.layers.Dense(units = 1,activation = 'sigmoid'))\n\n#COMPILING THE ANN USING STOCHASTIC GRADIENT DESCENT (optimizer = 'adam')\nann.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\n","377e9499":"#setting callbacks for monitoring maximum accuracy\nfrom tensorflow.keras.callbacks import EarlyStopping\nearly = EarlyStopping(monitor = 'accuracy', mode = 'max',patience = 25)","a8634d7b":"#TRAINING THE ANN WITH BATCH SIZE OF 32 (THIS IS A BATCH LEARNING)\nann.fit(x_train, y_train,batch_size = 32, epochs = 400,callbacks = [early])","b7805362":"losses = pd.DataFrame(ann.history.history)\nlosses.plot()","1bd89c5f":"#GETTING ACCURACY AND CONFUSION MATRIX\nfrom sklearn.metrics import confusion_matrix,accuracy_score\ny_pred = ann.predict(x_test)\ny_pred  = y_pred > 0.5\ncm = confusion_matrix(y_pred,y_test)\nac = accuracy_score(y_pred,y_test)","116f9110":"sns.heatmap(cm,annot = True)\nplt.title('CONFUSION MATRIX')\nprint('Accuracy - {}%'.format(ac*100))","7db78378":"**CORRELATION WAS FOUND IN SOME FEATURES**\n\n**WE CAN EITHER REMOVE THE HIGH CORRELATED FEATURES OR WE CAN USE ALL THE FEATURES, I AM USING ALL FEATURES.**\n\n* **REMOVING CORRELATED FEATURES MAY INCREASE ACCURACY**","0812fd9f":"**NO MISSING VALUES**","56f31c94":"**FEATURE SCALING IS NECESSARY IN ANN**","76c15dc3":"**AROUND 350 ARE Benign**","6beb1f65":"**PREDICTING BREAST CANCER USING ARTIFICIAL NEURAL NETWORKS.**\n\n* The features that have been computed from digitized images of the cell nuclei, which can be used to build a model to predict whether a tumor is benign or malignant.\n* 1 = Malignant (Cancerous) - Present (M)\n* 0 = Benign (Not Cancerous) -Absent (B)\n\n**HERE I HAVE APPLIED SOME TECHNIQUES TO AVOID OVERFITTING ALSO**"}}