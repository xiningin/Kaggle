{"cell_type":{"b59354c3":"code","0a23da26":"code","a3bbc1bd":"code","93bd568e":"code","2b38c20e":"code","1b9d2954":"code","98db70ba":"code","99e61ce2":"code","2bcf8c8a":"markdown"},"source":{"b59354c3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0a23da26":"train = pd.read_csv('\/kaggle\/input\/adirw2019\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/adirw2019\/test.csv')","a3bbc1bd":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nf,ax = plt.subplots(figsize=(10, 8))\nsns.heatmap(train.corr(), annot=True, linewidths=0.5, fmt='.2f',ax=ax)","93bd568e":"numeric_columns = ['SeniorCitizen', 'tenure', 'MonthlyCharges']\nnumeric_data = train[numeric_columns]\n\nlabels = train['Churn']","2b38c20e":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score","1b9d2954":"X_train, X_test, y_train, y_test = train_test_split(numeric_data, labels, test_size=0.33, random_state=42)\n\nrfc = RandomForestClassifier(n_estimators=200, max_depth=8, min_samples_split=2, min_samples_leaf=1, \n                             min_weight_fraction_leaf=0.0, random_state=20)\nrfc.fit(X_train, y_train)\nX_train_preds_rfc = rfc.predict(X_train)\nX_test_preds_rfc = rfc.predict(X_test)","98db70ba":"print(roc_auc_score(y_train, X_train_preds_rfc))\nprint(roc_auc_score(y_test, X_test_preds_rfc))","99e61ce2":"sample_submission = pd.read_csv('\/kaggle\/input\/adirw2019\/sample_submission.csv')\n\nsample_submission[\"Churn\"] = rfc.predict(test[numeric_columns])\n\nsample_submission.to_csv('benchmark_submission.csv', index=False)","2bcf8c8a":"## Report\n\n### Data preprocessing\nI left only numerical columns so I'm able to feed data to the learning algorithms\n\n### Data investigation\nI found that MonthlyCharges is correlated with Churn, as expected\n\n### Features engineering\nI didn't do any FE because I don't have time\n\n### Validation\nI split training data into 2 sets: train (67%) and eval (33%). It's ok because 33% is a lot of data to test on\n\n### Modeling\nI used one model - RandomForest. I used the hyperparameters from classes. If we were using it during classes it is probably good.\n\n### Other\nI think my code is fine because each cell is doing one thing\n\n### What I like\n\n### What unique I think I've done\nI prepared the first benchmark and Kaggle competition"}}