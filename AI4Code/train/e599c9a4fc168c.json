{"cell_type":{"34fec44b":"code","1d3718f0":"code","5f9b9a62":"code","8668d9e0":"code","f81bb7af":"code","91357679":"code","df70d746":"code","4502a539":"code","c518e306":"code","8898b80b":"code","05b18798":"code","f0f9afba":"code","f2b1c77c":"code","3ffe52d6":"code","b76c5abf":"code","8e992baa":"markdown","f5d601bd":"markdown","c291109c":"markdown","32987896":"markdown"},"source":{"34fec44b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1d3718f0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# For customizing our plots.\n\nfrom matplotlib.ticker import MaxNLocator\nimport matplotlib.gridspec as gridspec\nimport matplotlib.patches as mpatches\n\nfrom wordcloud import WordCloud, STOPWORDS\nimport warnings\nwarnings.filterwarnings(\"ignore\")","5f9b9a62":"import pandas as pd\ntrain =pd.read_csv('\/kaggle\/input\/chaii-hindi-and-tamil-question-answering\/train.csv')\ntest =pd.read_csv('\/kaggle\/input\/chaii-hindi-and-tamil-question-answering\/test.csv')\nsample_submission =pd.read_csv('\/kaggle\/input\/chaii-hindi-and-tamil-question-answering\/sample_submission.csv')","8668d9e0":"train.head()","f81bb7af":"fig, axes = plt.subplots(ncols=2, nrows=1, figsize=(10, 4), dpi=100)\nsns.countplot(train['language'], ax=axes[0])\naxes[1].pie(train['language'].value_counts(),\n            labels=['Hindi', 'Tamil'],\n            autopct='%1.2f%%',\n            shadow=True,\n            explode=(0.05, 0),\n            startangle=60)\nfig.suptitle('Distribution of the language', fontsize=24)\nplt.show()","91357679":"train['num_words_context'] = train.context.map(lambda x : len(x.split()))\ntrain['num_words_question'] = train.question.map(lambda x : len(x.split()))\ntrain['num_words_answer'] = train.answer_text.map(lambda x : len(x.split()))\n\n\ntrain_hi = train[train.language == 'hindi']\ntrain_ta = train[train.language == 'tamil']","df70d746":"def plot_hist(data : pd.Series, title : str):\n    fig = plt.figure(constrained_layout=True, figsize=(18, 8))\n    grid = gridspec.GridSpec(ncols=3, nrows=3, figure=fig)\n\n    ax1 = fig.add_subplot(grid[0, :2])\n    # Set the title.\n    ax1.set_title(title)\n    # plot the histogram.\n    sns.distplot(data,\n                  hist=True,\n                  kde=True,\n                  ax=ax1,\n                  color='#e74c3c')\n    ax1.set(ylabel='Frequency')\n    ax1.set(xlabel='Character Word Count')\n    ax1.xaxis.set_major_locator(MaxNLocator(nbins=20))\n    return plt\n","4502a539":"title = 'Word Count Per \"Context\"'\nplt = plot_hist(train_hi['num_words_context'], \"Hindi\")\nplt.title(f'{title}', fontsize=14)\nplot_hist(train_ta['num_words_context'], \"Tamil\")\n","c518e306":"title = 'Word Count Per \"Question\"'\nplt = plot_hist(train_hi['num_words_question'], \"Hindi\")\nplt.title(f'{title}', fontsize=14)\nplot_hist(train_ta['num_words_question'], \"Tamil\")\n","8898b80b":"title = 'Word Count Per \"Answer\"'\nplt = plot_hist(train_hi['num_words_answer'], \"Hindi\")\nplt.title(f'{title}', fontsize=14)\nplot_hist(train_ta['num_words_answer'], \"Tamil\")","05b18798":"def plot_word_number_histogram(data_hi, data_ta, title):\n    \n    \"\"\"A function for comparing word counts\"\"\"\n\n    fig, axes = plt.subplots(ncols=2, nrows=1, figsize=(18, 6), sharey=True)\n    sns.distplot(data_hi.str.split().map(lambda x: len(x)), ax=axes[0], color='#e74c3c')\n    sns.distplot(data_ta.str.split().map(lambda x: len(x)), ax=axes[1], color='#e74c3c')\n    \n    axes[0].set_xlabel('Word Count')\n    axes[0].set_ylabel('Count')\n    axes[0].set_title('Tamil')\n    axes[1].set_xlabel('Word Count')\n    axes[1].set_title('Hindi')\n    \n    fig.suptitle(title, fontsize=24, va='baseline')\n    \n    fig.tight_layout()","f0f9afba":"plot_word_number_histogram( train_hi.context, train_ta.context, 'Words length in Context')\nplot_word_number_histogram( train_hi.question, train_ta.question, 'Words length in Question')\nplot_word_number_histogram( train_hi.answer_text, train_ta.answer_text, 'Words length in Answer')\n","f2b1c77c":"hindi_stopword = ['\u0905\u0924', '\u0905\u092a\u0928\u093e', '\u0905\u092a\u0928\u0940', '\u0905\u092a\u0928\u0947', '\u0905\u092d\u0940', '\u0905\u0902\u0926\u0930', '\u0906\u0926\u093f', '\u0906\u092a', '\u0907\u0924\u094d\u092f\u093e\u0926\u093f', '\u0907\u0928', '\u0907\u0928\u0915\u093e', '\u0907\u0928\u094d\u0939\u0940\u0902', '\u0907\u0928\u094d\u0939\u0947\u0902', '\u0907\u0928\u094d\u0939\u094b\u0902', '\u0907\u0938', '\u0907\u0938\u0915\u093e', '\u0907\u0938\u0915\u0940', '\u0907\u0938\u0915\u0947', '\u0907\u0938\u092e\u0947\u0902', '\u0907\u0938\u0940', '\u0907\u0938\u0947', '\u0909\u0928', '\u0909\u0928\u0915\u093e', '\u0909\u0928\u0915\u0940', '\u0909\u0928\u0915\u0947', '\u0909\u0928\u0915\u094b', '\u0909\u0928\u094d\u0939\u0940\u0902', '\u0909\u0928\u094d\u0939\u0947\u0902', '\u0909\u0928\u094d\u0939\u094b\u0902', '\u0909\u0938', '\u0909\u0938\u0915\u0947', '\u0909\u0938\u0940', '\u0909\u0938\u0947', '\u090f\u0915', '\u090f\u0935\u0902', '\u090f\u0938', '\u0910\u0938\u0947', '\u0914\u0930', '\u0915\u0908', '\u0915\u0930', '\u0915\u0930\u0924\u093e', '\u0915\u0930\u0924\u0947', '\u0915\u0930\u0928\u093e', '\u0915\u0930\u0928\u0947', '\u0915\u0930\u0947\u0902', '\u0915\u0939\u0924\u0947', '\u0915\u0939\u093e', '\u0915\u093e', '\u0915\u093e\u095e\u0940', '\u0915\u093f', '\u0915\u093f\u0924\u0928\u093e', '\u0915\u093f\u0928\u094d\u0939\u0947\u0902', '\u0915\u093f\u0928\u094d\u0939\u094b\u0902', '\u0915\u093f\u092f\u093e', '\u0915\u093f\u0930', '\u0915\u093f\u0938', '\u0915\u093f\u0938\u0940', '\u0915\u093f\u0938\u0947', '\u0915\u0940', '\u0915\u0941\u091b', '\u0915\u0941\u0932', '\u0915\u0947', '\u0915\u094b', '\u0915\u094b\u0908', '\u0915\u094c\u0928', '\u0915\u094c\u0928\u0938\u093e', '\u0917\u092f\u093e', '\u0918\u0930', '\u091c\u092c', '\u091c\u0939\u093e\u0901', '\u091c\u093e', '\u091c\u093f\u0924\u0928\u093e', '\u091c\u093f\u0928', '\u091c\u093f\u0928\u094d\u0939\u0947\u0902', '\u091c\u093f\u0928\u094d\u0939\u094b\u0902', '\u091c\u093f\u0938', '\u091c\u093f\u0938\u0947', '\u091c\u0940\u0927\u0930', '\u091c\u0948\u0938\u093e', '\u091c\u0948\u0938\u0947', '\u091c\u094b', '\u0924\u0915', '\u0924\u092c', '\u0924\u0930\u0939', '\u0924\u093f\u0928', '\u0924\u093f\u0928\u094d\u0939\u0947\u0902', '\u0924\u093f\u0928\u094d\u0939\u094b\u0902', '\u0924\u093f\u0938', '\u0924\u093f\u0938\u0947', '\u0924\u094b', '\u0925\u093e', '\u0925\u0940', '\u0925\u0947', '\u0926\u092c\u093e\u0930\u093e', '\u0926\u093f\u092f\u093e', '\u0926\u0941\u0938\u0930\u093e', '\u0926\u0942\u0938\u0930\u0947', '\u0926\u094b', '\u0926\u094d\u0935\u093e\u0930\u093e', '\u0928', '\u0928\u0915\u0947', '\u0928\u0939\u0940\u0902', '\u0928\u093e', '\u0928\u093f\u0939\u093e\u092f\u0924', '\u0928\u0940\u091a\u0947', '\u0928\u0947', '\u092a\u0930', '\u092a\u0939\u0932\u0947', '\u092a\u0942\u0930\u093e', '\u092a\u0947', '\u092b\u093f\u0930', '\u092c\u0928\u0940', '\u092c\u0939\u0940', '\u092c\u0939\u0941\u0924', '\u092c\u093e\u0926', '\u092c\u093e\u0932\u093e', '\u092c\u093f\u0932\u0915\u0941\u0932', '\u092d\u0940', '\u092d\u0940\u0924\u0930', '\u092e\u0917\u0930', '\u092e\u093e\u0928\u094b', '\u092e\u0947', '\u092e\u0947\u0902', '\u092f\u0926\u093f', '\u092f\u0939', '\u092f\u0939\u093e\u0901', '\u092f\u0939\u0940', '\u092f\u093e', '\u092f\u093f\u0939', '\u092f\u0947', '\u0930\u0916\u0947\u0902', '\u0930\u0939\u093e', '\u0930\u0939\u0947', '\u0931\u094d\u0935\u093e\u0938\u093e', '\u0932\u093f\u090f', '\u0932\u093f\u092f\u0947', '\u0932\u0947\u0915\u093f\u0928', '\u0935', '\u0935\u095a\u0948\u0930\u0939', '\u0935\u0930\u094d\u0917', '\u0935\u0939', '\u0935\u0939\u093e\u0901', '\u0935\u0939\u0940\u0902', '\u0935\u093e\u0932\u0947', '\u0935\u0941\u0939', '\u0935\u0947', '\u0938\u0915\u0924\u093e', '\u0938\u0915\u0924\u0947', '\u0938\u092c\u0938\u0947', '\u0938\u092d\u0940', '\u0938\u093e\u0925', '\u0938\u093e\u092c\u0941\u0924', '\u0938\u093e\u092d', '\u0938\u093e\u0930\u093e', '\u0938\u0947', '\u0938\u094b', '\u0938\u0902\u0917', '\u0939\u0940', '\u0939\u0941\u0906', '\u0939\u0941\u0908', '\u0939\u0941\u090f', '\u0939\u0948', '\u0939\u0948\u0902', '\u0939\u094b', '\u0939\u094b\u0924\u093e', '\u0939\u094b\u0924\u0940', '\u0939\u094b\u0924\u0947', '\u0939\u094b\u0928\u093e', '\u0939\u094b\u0928\u0947']","3ffe52d6":"def plot_wordcloud(text, title, title_size, stopword, font_path):\n    \"\"\" A function for creating wordcloud images \"\"\"\n    allwords = ''.join(text.to_list())\n    wordcloud = WordCloud(\n        width=1200,\n        height=800,\n        font_path=font_path,\n        background_color='black',\n        stopwords=set(stopword),\n        max_words=150,\n        scale=3,\n        contour_width=0.1,\n        contour_color='grey',\n    ).generate(str(allwords))\n    fig = plt.figure(figsize=(18, 18), facecolor='white')\n    plt.imshow(wordcloud)\n    plt.axis('off')\n    plt.title(title,\n              fontdict={\n                  'size': title_size,\n                  'verticalalignment': 'bottom'\n              })\n    plt.tight_layout(pad=0)\n    plt.show()   ","b76c5abf":"plot_wordcloud(train_hi.context, \"Word Cloud Hindi\", 15, hindi_stopword, '\/kaggle\/input\/devanagari\/Lohit-Devanagari.ttf')","8e992baa":"## Context Lengths\n#### Let's start with the number of characters in context, question and answer.","f5d601bd":"Language Count ","c291109c":"### Length of Context, question and answer","32987896":"### Word Cloud"}}