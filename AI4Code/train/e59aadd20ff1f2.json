{"cell_type":{"2a3d4b88":"code","fd0cdba9":"code","97b73496":"code","41414844":"code","6e6615ad":"code","23e34f6e":"code","a41f94d6":"code","983f1d26":"code","d7231ad5":"code","a85c2ab6":"code","01ff7410":"code","85f3f894":"markdown","8a0494ed":"markdown","98d8a1f7":"markdown","cc67bed8":"markdown","2de646e5":"markdown","09a9e013":"markdown","fc2122c9":"markdown"},"source":{"2a3d4b88":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fd0cdba9":"df=pd.read_csv('\/kaggle\/input\/linearregressiondataset3\/linear-regression-dataset.csv')","97b73496":"df.head()","41414844":"X=df.iloc[:,:-1].values\ny=df.iloc[:,-1].values\nprint(X,'\\n\\n')\nprint(y)","6e6615ad":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)","23e34f6e":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train,y_train)","a41f94d6":"y_pred = regressor.predict(X_test)\ny_pred","983f1d26":"y_test","d7231ad5":"plt.scatter(X_train,y_train,color='red')\nplt.plot(X_train,regressor.predict(X_train),color='Blue')\nplt.show()","a85c2ab6":"plt.scatter(X_test,y_test,color='red')\nplt.plot(X_train,regressor.predict(X_train),color='Blue')\nplt.show()","01ff7410":"from sklearn.metrics import r2_score\nprint(r2_score(y_pred,y_test))","85f3f894":"## Training the model with linear regression ","8a0494ed":"## Splitting Dataset into train and test set","98d8a1f7":"## Importing dataset","cc67bed8":"## Accuray Calculation","2de646e5":"## Visulizing the testing result","09a9e013":"## Visulizing the training result","fc2122c9":"## Testing the model"}}