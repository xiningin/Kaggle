{"cell_type":{"707c2fc1":"code","8881b0b2":"code","cfad5924":"code","9f9e16b9":"code","18c3f5d6":"code","f99b8312":"code","474d26e4":"code","b4b5858b":"code","883d09d4":"code","4ae05194":"code","9ffbac21":"code","f91976bc":"code","393ca191":"code","6f33c102":"code","483896c4":"code","aefc04f8":"code","0d8e053b":"code","407bc754":"code","44475bd1":"code","697b718d":"code","fc24f229":"code","a7c8fea3":"code","38fa60cc":"code","4f575f35":"code","b7fd654a":"code","ddcd4afb":"code","b48ce788":"code","43756a2f":"code","1768665a":"code","1b704b6a":"code","1fbe5aec":"code","20a08558":"code","ba1f534c":"code","2261a38e":"code","66d785a4":"code","51a22056":"code","d3c442eb":"code","5d55db75":"code","276de20a":"code","73c55d97":"code","5f5f51ec":"code","2b88a564":"markdown","f629fb76":"markdown","6a307ccb":"markdown","4dcb59ea":"markdown","fffdeae6":"markdown","593108e3":"markdown","de0ecb75":"markdown","dce1f34f":"markdown","bf0c3d9a":"markdown","30403b45":"markdown","0ea6006a":"markdown","a2d9fe56":"markdown","939e600b":"markdown","039a0ca1":"markdown","a4bce8a8":"markdown","64563a49":"markdown","e07fa534":"markdown","951078d3":"markdown","25cd73ef":"markdown","b9d12221":"markdown","42f11230":"markdown","ee9b2173":"markdown"},"source":{"707c2fc1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8881b0b2":"train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntrain.head()","cfad5924":"train.set_index('PassengerId')","9f9e16b9":"train.isnull() # Value which shows True meaning our data is misi=sing or vive-versa","18c3f5d6":"p=sns.heatmap(train.isnull(),cmap='Blues')\np.set_title('Missing data')","f99b8312":"Choose_best_variable=train.corr()","474d26e4":"sns.heatmap(Choose_best_variable,annot=True,cmap='coolwarm')","b4b5858b":"sns.boxplot(x=train['Fare'],y=train['Age']) # As it coorelates most but it didn't seems to be inconsistent","883d09d4":"sns.boxplot(x=train['SibSp'],y=train['Age']) # Well the data seems to be much more hypothetical","4ae05194":"sns.boxplot(x=train['Pclass'],y=train['Age']) ","9ffbac21":"sns.countplot(x=train['Sex'])","f91976bc":"sns.countplot(x=train['Survived'],hue=train['Sex'])","393ca191":"sns.countplot(x=train['Survived'],hue=train['Pclass'])","6f33c102":"sns.countplot(x=train['Pclass'])\n# Plot showing how many people belonging to different class","483896c4":"plt.figure(figsize=(12,4))\nsns.kdeplot(train['Fare'])","aefc04f8":"sns.countplot(x=train['SibSp'])","0d8e053b":"sns.countplot(x=train['SibSp'],hue=train['Survived'])","407bc754":"data=pd.concat([train,test])\ndata","44475bd1":"sns.heatmap(data.isnull(),cmap='Blues')","697b718d":"def fill(x):\n    age=x[0]\n    clas=x[1]\n    if pd.isnull(age):\n        if clas==1:\n            return round(data[data['Pclass']==1]['Age'].mean())\n        elif clas==2:\n            return round(data[data['Pclass']==2]['Age'].mean())\n        else:\n            return round(data[data['Pclass']==3]['Age'].mean())\n    else:\n        return age\ndata['Age']=data[['Age','Pclass']].apply(fill,axis=1)\ndata.head()","fc24f229":"sns.heatmap(data.isnull(),cmap='Blues')","a7c8fea3":"a=pd.get_dummies(data['Sex'],drop_first=True)\na # Converting it into 0 & 1 form to interpret easily","38fa60cc":"b=pd.get_dummies(data['Embarked'],drop_first=True)\nb","4f575f35":"data=pd.concat([data,a,b],axis=1)\ndata.head(1)","b7fd654a":"data.drop(['PassengerId','Name','Sex','Ticket','Cabin','Embarked'],axis=1,inplace=True)\ndata.head()","ddcd4afb":"# Reconverting the data\ntrain=data[:len(train)]\ntest=data[:len(test)]\nsns.heatmap(train.isnull(),cmap='Blues')","b48ce788":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report,confusion_matrix","43756a2f":"y=train['Survived']\nx=train.drop('Survived',axis=1)","1768665a":"x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=101,test_size=0.3)","1b704b6a":"cross_val_score(RandomForestClassifier(),x,y).mean()","1fbe5aec":"cross_val_score(LogisticRegression(),x,y).mean()","20a08558":"trainmodel=LogisticRegression()","ba1f534c":"trainmodel.fit(x_train,y_train)","2261a38e":"data_to_test=test.drop('Survived',axis=1)","66d785a4":"result=trainmodel.predict(data_to_test)","51a22056":"result","d3c442eb":"test_again=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","5d55db75":"work=pd.DataFrame({'PassengerId': test_again['PassengerId'], 'Survived':result})\nfinal_work=work.round(0).astype(int)","276de20a":"final_work.to_csv('Result.csv',index = False)\nfinal_work","73c55d97":"test","5f5f51ec":"sns.heatmap(test.isnull(),cmap='Blues')","2b88a564":"1) Missing data is present or not???","f629fb76":"Well from above we can conclude the following points\n* Age column is missing which can be recovered by boxplot of age vs Pclass\n* Cabin data is missing in a large amount and cannot be recovered\n* The survived which is not showing is the value which is going to be predicted by us","6a307ccb":"As of now we are having clean data so we can procced it to training part of our model","4dcb59ea":"Well data can take only Categorical values only so let's convert it into required form","fffdeae6":"Above plot give's us much more Accurate result regarding on age","593108e3":"> From above we select most correlated data which fits most we will fill it with above ","de0ecb75":"Person who paid more (Pclass=1) survived more than Pclass(1&2)","dce1f34f":"**First let's check our test data**","bf0c3d9a":"Our age data is missing a lot and can be filled but Cabin is almost empty so we can drop it for now.\nNow focus on filling the age column and visualising our data","30403b45":"Now removing the waste things which need not to be included in trainig our model","0ea6006a":"**Well it's been a fact that women lives longer than man and Hence proved :)**","a2d9fe56":"**Now let's Analyze our data**","939e600b":"Well above data show Single people survived most","039a0ca1":"We will be testing different methods and selecting the best among them ","a4bce8a8":"Above plot show max people prefer to spend less money on ticket between [0,100]","64563a49":"Combining both data to get our result more accurate","e07fa534":"**Setting the passender id to our index for easy representation of our data :)**","951078d3":"Above graph show that we have our complete data","25cd73ef":"1-a) Plotting a heatmap to get the overall look on our missing data :)","b9d12221":"Now look at the missing data ","42f11230":"**Training our model**","ee9b2173":"Hence from the above 2 we will use the Random Forest Classifier"}}