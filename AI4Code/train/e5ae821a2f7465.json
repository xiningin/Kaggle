{"cell_type":{"a5962e72":"code","8a646e15":"code","2c36ac70":"code","d5beab73":"code","572ff1e8":"code","22c55bf1":"code","eeac4685":"code","bc50c0b3":"code","12a52a7e":"code","a972ff62":"code","4553191b":"code","8efb81d2":"code","34733a7a":"code","ecf53bfd":"code","1fcb10c9":"code","75b4c1eb":"code","8ab5c2d0":"code","94ea1e6f":"code","532e9ae6":"code","e4201270":"code","bb11dee6":"code","209f22e4":"code","28e3b69c":"code","404e7c93":"code","c65cc37a":"code","fd368883":"code","682dab8a":"code","2ac34c27":"code","bbf3e12c":"code","e4fcea6d":"code","de542e3b":"code","c676744f":"code","14a310a9":"code","b89d7fe1":"code","6c07a138":"code","a1b7d05a":"code","efc053ef":"code","57dd0a6b":"code","0fb45a48":"code","66bc5f32":"markdown","adc83318":"markdown","e3885388":"markdown","fc1715cd":"markdown","e31291b0":"markdown","b9de88cf":"markdown","ecb630ac":"markdown","ed9fbb98":"markdown","d971cc94":"markdown","64bbe3b1":"markdown","c5182310":"markdown","e98c468a":"markdown","e57d391a":"markdown","da7793e3":"markdown","fa8a5775":"markdown","c1944855":"markdown","08495f1a":"markdown","a636c936":"markdown","a17e11d3":"markdown","796d3996":"markdown","96126b7e":"markdown","9ef57b57":"markdown","c5828f33":"markdown","8e92014a":"markdown","e7a39651":"markdown","5ae83f84":"markdown","d6c8cf05":"markdown","ddb20529":"markdown","e54e03a2":"markdown","2c2b4765":"markdown","cc9d9715":"markdown","13fdd5b9":"markdown","913c2703":"markdown","abaf90de":"markdown"},"source":{"a5962e72":"# Importing Libraries\nimport bq_helper \nimport numpy as np \nimport pandas as pd\nimport statsmodels.api as sm\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.basemap import Basemap\nfrom statsmodels.graphics.mosaicplot import mosaic\n\n# Input data files are available in the \"..\/input\/\" directory.\nimport os\nprint(os.listdir(\"..\/input\"))","8a646e15":"# List of available tables\ndataset= bq_helper.BigQueryHelper(active_project=\"bigquery-public-data\",dataset_name=\"nhtsa_traffic_fatalities\")\ndataset.list_tables()","2c36ac70":"# Head of tables:\ndataset.head('vehicle_2016',3)","d5beab73":"dataset.head('pbtype_2016',3)","572ff1e8":"dataset.head('accident_2016',3)","22c55bf1":"# Left join of \"vehicle_2016\" and \"pbtype_2016\"\nSQL_join_vehicle_pbtype = \"\"\"\nSELECT  \nv.consecutive_number, v.number_of_occupants, v.travel_speed, v.speed_limit, v.vehicle_model_year, \nv.month_of_crash, v.hour_of_crash, v.previous_recorded_crashes, v.previous_speeding_convictions,\np.sex, p.age\nFROM `bigquery-public-data.nhtsa_traffic_fatalities.vehicle_2016` as v\nLEFT JOIN `bigquery-public-data.nhtsa_traffic_fatalities.pbtype_2016` as p\nON v.consecutive_number = p.consecutive_number\n\"\"\"","eeac4685":"# Create and save set1 as Panda's dataframe: \ndataset.estimate_query_size(SQL_join_vehicle_pbtype)\nset1= dataset.query_to_pandas_safe(SQL_join_vehicle_pbtype)\nset1.to_csv(\"join_vehicle_pbtype_2016.csv\")","bc50c0b3":"# first and last 5 observations:\nset1.head()","12a52a7e":"set1.tail()","a972ff62":"# More information:\nset1.info()","4553191b":"# Change type of \"month_of_crash\" and \"hour_of_crash\":\nset1[\"month_of_crash\"]= set1[\"month_of_crash\"].astype(\"category\")\nset1[\"hour_of_crash\"]= set1[\"hour_of_crash\"].astype(\"category\")","8efb81d2":"# Plot effect of \"month_of_crash\"\nset1[\"month_of_crash\"].value_counts().sort_index().plot(kind=\"bar\")\nplt.xlabel(\"month\")\nplt.ylabel(\"Number of accidents\")\nplt.show()\n# Plot effect of \"hour_of_crash\"\nset1[\"hour_of_crash\"].value_counts().sort_index().plot(kind=\"bar\")\nplt.xlabel(\"hour\")\nplt.ylabel(\"Number of accidents\")\nplt.show()","34733a7a":"# Change type of \"vehicle_model_year\" \nset1[\"vehicle_model_year\"]= set1[\"vehicle_model_year\"].astype(\"category\")","ecf53bfd":"# Plot effect of \"vehicle_model_year\"\nplt.figure(figsize=(12,4))\nset1[\"vehicle_model_year\"].value_counts().sort_index().plot(kind=\"bar\")\nplt.xlabel(\"vehicle model\")\nplt.ylabel(\"Number of accidents\")\nplt.title(\"Barplot of number of accidents vs vehicle model\")\nplt.show()\n# Zoom in after 1990:\nset1[\"vehicle_model_year\"].value_counts().sort_index().plot(kind=\"bar\")\nplt.xlabel(\"vehicle model\")\nplt.ylabel(\"Number of accidents\")\nplt.axis(xmin=51)\nplt.title(\"Barplot of number of accidents vs vehicle model (after 1990)\")\nplt.show()","1fcb10c9":"# Plot \"previous_recorded_crashes\" vs \"Number of accidents\":\nset1[\"previous_recorded_crashes\"].value_counts().sort_index()[0:10].plot(kind=\"bar\")\nplt.xlabel(\"previous recorded crashes\")\nplt.ylabel(\"Number of accidents\")\nplt.show()\n# Plot \"previous_speeding_convictions\" vs \"Number of accidents\":\nset1[\"previous_speeding_convictions\"].value_counts().sort_index().plot(kind=\"bar\")\nplt.xlabel(\"previous speeding convictions\")\nplt.ylabel(\"Number of accidents\")\nplt.show()","75b4c1eb":"# Change type of \"sex\" \nset1[\"sex\"]= set1[\"sex\"].astype(\"category\")","8ab5c2d0":"# Plot \"sex\" vs \"Number of accidents\":\nset1[\"sex\"].value_counts().plot(kind=\"pie\")\nplt.ylabel(\"Number of accidents\")\nplt.xlabel(\"gender\")\nplt.show()\n# Plot \"age \" vs \"Number of accidents\":\nset1[set1[\"age\"]<200][\"age\"].plot(kind=\"box\")\nplt.xlabel(\"driver age\")\nplt.ylabel(\"Number of accidents\")\nplt.show()","94ea1e6f":"# Plot \"travel_speed\" vs \"Number of accidents\":\nset1[set1[\"travel_speed\"]<200][\"travel_speed\"].plot.hist(bins=15)\nplt.xlabel(\"speed\")\nplt.ylabel(\"Number of accidents\")\nplt.show()\n# Plot \"speed_limit\" vs \"Number of accidents\":\nset1[\"speed_limit\"].plot(kind=\"hist\")\nplt.xlabel(\"speed limit\")\nplt.ylabel(\"Number of accidents\")\nplt.show()","532e9ae6":"# Rate of fatality and drunk driver of US state:\nSQL_accident_rate = \"\"\"\nSELECT state_name, \nSUM(latitude)\/COUNT(consecutive_number) as avg_lat, \nSUM(longitude)\/COUNT(consecutive_number) as avg_lon, \nCOUNT(consecutive_number) as accidents,   \nSUM(number_of_fatalities) as fatality, \nSUM(number_of_drunk_drivers) as drunk_driver, \nSUM(number_of_fatalities)\/COUNT(consecutive_number) as fatality_rate, \nSUM(number_of_drunk_drivers)\/COUNT(consecutive_number) as drunk_rate\nFROM `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` \nGROUP BY state_name\nORDER BY state_name\n\n\"\"\"","e4201270":"# Create and save set2 as Panda's dataframe: \ndataset.estimate_query_size(SQL_accident_rate)\nset2= dataset.query_to_pandas_safe(SQL_accident_rate)\nset2.to_csv(\"accident_rate_2016.csv\")","bb11dee6":"# See result of above query:\nset2","209f22e4":"# More information:\nset2.info()","28e3b69c":"# Add Abb of states\nus_state_abb = {'Alabama': 'AL', 'Alaska': 'AK', 'Arizona': 'AZ', 'Arkansas': 'AR',\n                'California': 'CA', 'Colorado': 'CO', 'Connecticut': 'CT', \n                'Delaware': 'DE', 'Florida': 'FL', 'Georgia': 'GA', 'Hawaii': 'HI',\n                'Idaho': 'ID', 'Illinois': 'IL', 'Indiana': 'IN', 'Iowa': 'IA', \n                'Kansas': 'KS', 'Kentucky': 'KY', 'Louisiana': 'LA', 'Maine': 'ME',\n                'Maryland': 'MD', 'Massachusetts': 'MA', 'Michigan': 'MI', \n                'Minnesota': 'MN', 'Mississippi': 'MS', 'Missouri': 'MO',\n                'Montana': 'MT', 'Nebraska': 'NE', 'Nevada': 'NV', \n                'New Hampshire': 'NH', 'New Jersey': 'NJ', 'New Mexico': 'NM', \n                'New York': 'NY', 'North Carolina': 'NC', 'North Dakota': 'ND', \n                'Ohio': 'OH', 'Oklahoma': 'OK', 'Oregon': 'OR', 'Pennsylvania': 'PA',\n                'Rhode Island': 'RI', 'South Carolina': 'SC', 'South Dakota': 'SD', \n                'Tennessee': 'TN', 'Texas': 'TX', 'Utah': 'UT', 'Vermont': 'VT', \n                'Virginia': 'VA', 'Washington': 'WA', 'West Virginia': 'WV', \n                'Wisconsin': 'WI', 'Wyoming': 'WY', 'District of Columbia': 'DC', \n                'Dist of Columbia': 'DC'}\n# Adding codes column to the dataframe:\nset2['state_abb'] = set2['state_name'].map(us_state_abb)","404e7c93":"set2","c65cc37a":"plt.figure(figsize=(12,8))\nMap = Basemap(projection='merc',llcrnrlat=20,urcrnrlat=50,llcrnrlon=-130.,\n              urcrnrlon=-60.,lat_ts=20,resolution='i')\nMap.drawcoastlines()\nMap.drawcountries()\nMap.drawstates()\nx,y = Map(set2['avg_lon'].values, set2['avg_lat'].values) #transform to projection\nd_size= (np.around(500*set2['drunk_rate'].values.astype(\"float\"))).tolist()\nMap.scatter(x,y, c=\"b\", s=d_size)\nplt.title(\"drunk_rate of states\")\nplt.show()","fd368883":"plt.figure(figsize=(12,8))\nMap = Basemap(projection='merc',llcrnrlat=20,urcrnrlat=50,llcrnrlon=-130.,\n              urcrnrlon=-60.,lat_ts=20,resolution='i')\nMap.drawcoastlines()\nMap.drawcountries()\nMap.drawstates()\nx,y = Map(set2['avg_lon'].values, set2['avg_lat'].values) #transform to projection\nf_size= (np.around(500*set2['fatality_rate'].values.astype(\"float\"))).tolist()\nMap.scatter(x,y, c=\"b\", s=f_size)\nplt.title(\"fatality_rate of states\")\nplt.show()","682dab8a":"# Light and atmospheric conditions effect:\nSQL_accident_weather = \"\"\"\nSELECT\nlight_condition_name, atmospheric_conditions_1_name,\nCOUNT(consecutive_number) as accidents,   \nSUM(number_of_fatalities) as fatality\nFROM `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` \nGROUP BY atmospheric_conditions_1_name, light_condition_name\nORDER BY atmospheric_conditions_1_name, light_condition_name\n\n\"\"\"","2ac34c27":"# Create and save set3 as Panda's dataframe: \ndataset.estimate_query_size(SQL_accident_weather)\nset3= dataset.query_to_pandas_safe(SQL_accident_weather)\nset3.to_csv(\"accident_weather_2016.csv\")","bbf3e12c":"set3","e4fcea6d":"# Type of variables:\nset3.info()","de542e3b":"# Contengenccy table showing number of accidents:\nweather_accident= set3.iloc[:, 0:3].pivot_table(index=\"light_condition_name\", columns=\"atmospheric_conditions_1_name\", values=\"accidents\", aggfunc=np.sum)\nweather_accident","c676744f":"# Remove \"Not Reported\", \"Other\", \"Unkown\" from dataset:\nset3=set3.drop(set3.loc[set3[\"atmospheric_conditions_1_name\"]==\"Not Reported\"].index)\nset3=set3.drop(set3.loc[set3[\"atmospheric_conditions_1_name\"]==\"Other\"].index)\nset3=set3.drop(set3.loc[set3[\"atmospheric_conditions_1_name\"]==\"Unknown\"].index)\n\nset3=set3.drop(set3.loc[set3[\"light_condition_name\"]==\"Not Reported\"].index)\nset3=set3.drop(set3.loc[set3[\"light_condition_name\"]==\"Other\"].index)\nset3=set3.drop(set3.loc[set3[\"light_condition_name\"]==\"Unknown\"].index)","14a310a9":"# Combine \"Dark \u2013 Lighted\", \"Dark \u2013 Not Lighted\", and \"Dark \u2013 Unknown Lighting\" as one level:\nset3.loc[set3.loc[set3[\"light_condition_name\"]==\"Dark \u2013 Lighted\"].index,\"light_condition_name\"]=\"Dark\"\nset3.loc[set3.loc[set3[\"light_condition_name\"]==\"Dark \u2013 Not Lighted\"].index,\"light_condition_name\"]=\"Dark\"\nset3.loc[set3.loc[set3[\"light_condition_name\"]==\"Dark \u2013 Unknown Lighting\"].index,\"light_condition_name\"]=\"Dark\"","b89d7fe1":"# Combine \"Blowing Sand, Soil, Dirt\" and \"Blowing Snow\" as one level:\nset3.loc[set3.loc[set3[\"atmospheric_conditions_1_name\"]==\"Blowing Snow\"].index,\"atmospheric_conditions_1_name\"]=\"Blowing\"\nset3.loc[set3.loc[set3[\"atmospheric_conditions_1_name\"]==\"Blowing Sand, Soil, Dirt\"].index,\"atmospheric_conditions_1_name\"]=\"Blowing\"","6c07a138":"# Change \"Fog, Smog, Smoke\" to \"Fog\" and \"Freezing Rain or Drizzle\" to \"Freezing\":\nset3.loc[set3.loc[set3[\"atmospheric_conditions_1_name\"]==\"Fog, Smog, Smoke\"].index,\"atmospheric_conditions_1_name\"]=\"Fog\"\nset3.loc[set3.loc[set3[\"atmospheric_conditions_1_name\"]==\"Freezing Rain or Drizzle\"].index,\"atmospheric_conditions_1_name\"]=\"Freezing\"","a1b7d05a":"# Contengenccy table showing number of accidents:\nweather_accident= set3.iloc[:, 0:3].pivot_table(index=\"light_condition_name\", columns=\"atmospheric_conditions_1_name\", values=\"accidents\", aggfunc=np.sum)\nweather_accident","efc053ef":"# plot the table:\nweather_accident.plot(kind=\"bar\", figsize=(8,4), fontsize=\"large\",width=1.6, legend=\"best\")\nplt.ylabel(\"Sum of accidents\")\nmatplotlib.font_manager.FontProperties(variant=\"small-caps\",stretch=\"ultra-condensed\",size='xx-small')","57dd0a6b":"# Change type of categorical columns:\nset3[\"light_condition_name\"]= set3[\"light_condition_name\"].astype(\"category\")\nset3[\"atmospheric_conditions_1_name\"]= set3[\"atmospheric_conditions_1_name\"].astype(\"category\")","0fb45a48":"# Mosaic plot: \nplt.figure(figsize=(20,20))\nmosaic(data=weather_accident.stack())\nplt.show()","66bc5f32":"Let\u2019s see the barplot and mosaic plot of all conditions:\n","adc83318":"* Let\u2019s look at vehicle model effect on number of accidents that occurred in 2016:","e3885388":"The first three observations of each table are as follows:\n","fc1715cd":"*  Here is a look at time effect on number of accidents that occurred in 2016:\n","e31291b0":"The pie chart above shows that most of the drivers were male and that they are in about 75% of accidents. Also, the boxplot shows that 50% of driver are between 35 to 60 years old, and 50 is the median point. \n","b9de88cf":"In the next step, a contingency table was built for the created dataset. \n","ecb630ac":"* Let\u2019s look at sex and age effect on accidents:\n","ed9fbb98":"First, a new pandas dataframe and CSV file was created showing number of accidents that occurred in different conditions. \n","d971cc94":"In this part, the rate of fatality and drunk drivers for each state of the U.S. was computed, and saved as a CSV file and a panda dataframe. Also, the average latitude and longitude of accident location was calculated. \n","64bbe3b1":"**Dataset**\n","c5182310":"As shown, most of the time, accidents occurred during clear conditions. \n","e98c468a":"U.S. fatality analysis report contains data on a census of fatal traffic crashes within the 50 States. This dataset is a Google BigQuery dataset\u00a0containing 40 tables. \n","e57d391a":"The first five observations and the last five observations of the created pandas dataframe as well as information from all columns are as follows:\n","da7793e3":"The first histogram shows that most of the accidents occurred between 0-10 mph and 40-66 mph. The second histogram shows that most of time that accidents occurred the speed limit was between 50-60 mph.\n","fa8a5775":"**Visualizing the effect of vehicle model, drivers, and time on accidents**\n","c1944855":"* Let\u2019s look at the effect of the driver on number of accidents in 2016:\n","08495f1a":"**Fatality and drunk driving accident rate of states**\n","a636c936":"*   Change \"Fog, Smog, Smoke\" to \"Fog\" and \"Freezing Rain or Drizzle\" to \"Freezing\" to make the column\u2019s name shorter. \n","a17e11d3":"As reported in above, we have \"month_of_crash\" and \"hour_of_crash\" in our dataframe as an integer. So, the type of these two columns were changed to categorical variables:","796d3996":"*  Combine \"Blowing Sand, Soil, Dirt\" and \"Blowing Snow\" as one category, \u201cBlowing\u201d. \n","96126b7e":"Most of the accidents had a driver without any recorded crashes and speeding convictions. Notice that these plots do not show the probability of future accident for drivers with\/without previous recorded crashes or speeding convictions.\n","9ef57b57":"In the last step, the drunk driving accident ratio and fatality rate of states are shown in the U.S. map. \n","c5828f33":"In the second step, states abbreviations was added to the dataset. \n","8e92014a":"*  Let\u2019s look at travel speed and speed limit effect on accidents:\n","e7a39651":"As illustrated in the first barplot, in most of accidents the vehicle was a model built after 1990. To see that part of plot closely, the first barplot was truncated to create a second plot with only models from 1990 and beyond. Cars from 2005 to 2007 and 2015 have the highest bars, showing a greater number of accidents.\n","5ae83f84":"Let\u2019s make the table above reflect the most important information by:\n*  Removing \"Not Reported\", \"Other\", \"Unkown\" from table.","d6c8cf05":"In this part, first a join dataset was created and saved into a pandas dataframe.\u00a0This dataset consists all data of \u201cvehicle_2016\" joined with \"pbtype_2016\u201d:","ddb20529":"Here is the names of all tables in the dataset:\n","e54e03a2":"**Light and atmospheric conditions effect **\n","2c2b4765":"First, \u201cvehicle_model_year\" column\u2019s type was changed. Then, a barplot showing the number of accidents that occurred in 2016 vs model of vehicle was plotted.","cc9d9715":"As illustrated, states in the Eastern U.S. and states in the Central Northern U.S. had higher drunk driver accident ratios compared to other states, and the highest ratio is .49 drunk driver per accident. However, the fatality rate is close to one person per accident for all states.\n","13fdd5b9":"* Combining \"Dark \u2013 Lighted\", \"Dark \u2013 Not Lighted\", and \"Dark \u2013 Unknown Lighting\" as one category, \u201cdark\u201d. \n","913c2703":"The barplots shows total number of accidents vs driver\u2019s previous recorded crashes and driver\u2019s previous speeding convictions.","abaf90de":"As illustrated in the first barplot above, August, October, and November have higher bars meaning there were a greater number of accidents compared to other months. Also, 4pm, 5pm, and 6pm shows a greater number of accidents in the second barplot. "}}