{"cell_type":{"177cf060":"code","a6e90154":"code","68bb0c33":"code","fcd05dcd":"code","e9f4caf2":"code","b409588a":"code","288ce63a":"code","f703f7a4":"code","3056bdab":"code","8eeb2b32":"code","c4945971":"code","ba72a92f":"code","8a6fec1a":"code","775cb5c3":"code","df93ed1e":"code","b89f7969":"code","fae71f49":"code","d2cc7122":"code","f99e7b35":"code","c1721699":"code","fa2486b7":"code","8a6ed218":"code","09b70206":"code","56b339ce":"code","287a6912":"code","a7436e66":"code","6924860b":"code","6418e906":"code","ed041552":"code","563085f6":"code","793d9e76":"code","3831a1c2":"code","df4c878e":"code","9df12dea":"code","93d2e0f7":"code","71233f86":"code","b76e5a95":"code","7d9b66b2":"code","c8017cac":"code","42b6a267":"code","624d8d91":"code","85e7dfa7":"code","9745e492":"code","d711d197":"code","2c2e6371":"code","28bdda48":"code","4104aac3":"code","5e45a733":"code","b0fa0a1a":"markdown","2229b9ef":"markdown","d84f365c":"markdown","274617d3":"markdown","f7ec7984":"markdown","56dd8c3e":"markdown","90edd27a":"markdown","41a2c60c":"markdown","7a00a593":"markdown","f2e0fc89":"markdown","1694d11e":"markdown"},"source":{"177cf060":"%matplotlib inline\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn","a6e90154":"df = pd.read_csv('..\/input\/country-vaccinations\/country_vaccinations.csv') ","68bb0c33":"df","fcd05dcd":"data = pd.DataFrame(df)","e9f4caf2":"data.shape","b409588a":"data.columns","288ce63a":"data.dtypes","f703f7a4":"data.info()","3056bdab":"data.nunique()","8eeb2b32":"data.isnull().sum()","c4945971":"data.describe()","ba72a92f":"data.drop(columns= ['country', 'iso_code', 'date', 'vaccines', 'source_name', 'source_website'], axis = 1, inplace= True)","8a6fec1a":"data.head(5)","775cb5c3":"rev_null=['total_vaccinations','people_vaccinated', 'people_fully_vaccinated', 'daily_vaccinations_raw',\n          'daily_vaccinations','total_vaccinations_per_hundred', 'people_vaccinated_per_hundred',\n          'people_fully_vaccinated_per_hundred','daily_vaccinations_per_million']\ndata[rev_null]= data[rev_null].replace({np.nan:(data['total_vaccinations']).mean(),\n                                   np.nan:data['people_vaccinated'].mean(),\n                                   np.nan:(data['people_fully_vaccinated']).mean(),\n                                   np.nan:(data['daily_vaccinations_raw']).mean(),\n                                   np.nan:(data['daily_vaccinations']).mean(),\n                                   np.nan:(data['total_vaccinations_per_hundred']).mean(),\n                                   np.nan:(data['people_vaccinated_per_hundred']).mean(),\n                                   np.nan:(data['people_fully_vaccinated_per_hundred']).mean(),\n                                   np.nan:(data['daily_vaccinations_per_million']).mean()})","df93ed1e":"data.isnull().sum()","b89f7969":"corr = data.corr()\ncorr.shape","fae71f49":"plt.figure(figsize = (25, 25))\nsns.heatmap(corr, cbar = True, square = True, annot = True, annot_kws = {\"size\": 15}, cmap = \"viridis\")","d2cc7122":"# Based on the heatmap, 'total_vaccinations_per_hundred', 'people_vaccinated_per_hundred'and 'people_fully_vaccinated_per_hundred' have weak correlations with 'total_vaccinations'.\n# As a result, these 3 variables are removed. \n\nx = data[['people_vaccinated', 'people_fully_vaccinated', 'daily_vaccinations_raw', 'daily_vaccinations',\n         'daily_vaccinations_per_million']]","f99e7b35":"y = data['total_vaccinations']","c1721699":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx = sc.fit_transform(x)","fa2486b7":"x","8a6ed218":"from sklearn.decomposition import PCA\n\npca = PCA(n_components = 2)\nx = pca.fit_transform(x)","09b70206":"x","56b339ce":"maindf = pd.DataFrame(data = x, columns = ['principal component 1', 'principal component 2'])","287a6912":"maindf","a7436e66":"pca.components_","6924860b":"pca.explained_variance_","6418e906":"import xgboost as xgb","ed041552":"data_dmatrix = xgb.DMatrix(x,label=y)","563085f6":"data_dmatrix","793d9e76":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)","3831a1c2":"print(x_train.shape)\nprint(y_train.shape)\nprint(x_test.shape)\nprint(y_test.shape)","df4c878e":"reg_mod = xgb.XGBRegressor(\n    n_estimators=1000,\n    learning_rate=0.085,\n    subsample=0.75,\n    colsample_bytree=1, \n    max_depth=10,\n    gamma=0,\n)\nreg_mod.fit(x_train, y_train)       ","9df12dea":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score, KFold\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import r2_score","93d2e0f7":"scores = cross_val_score(reg_mod, x_train, y_train,cv=10)\nprint(\"Mean cross-validation score: %.2f\" % scores.mean())","71233f86":"reg_mod.fit(x_train,y_train)\n\npredictions = reg_mod.predict(x_test)","b76e5a95":"predictions","7d9b66b2":"rmse = np.sqrt(mean_squared_error(y_test, predictions))\nprint(\"RMSE: %f\" % (rmse))","c8017cac":"from sklearn.metrics import r2_score\nr2 = np.sqrt(r2_score(y_test, predictions))\nprint(\"R_Squared Score : %f\" % (r2))","42b6a267":"plt.figure(figsize=(10, 5), dpi=80)\nx_ax = range(len(y_test))\nplt.plot(x_ax, y_test, label=\"test\")\nplt.plot(x_ax, predictions, label=\"predicted\")\nplt.title(\"Total vaccinations- Test and Predicted data\")\nplt.legend()\nplt.show()","624d8d91":"from sklearn.ensemble import RandomForestRegressor","85e7dfa7":"regressor = RandomForestRegressor(n_estimators = 300, random_state = 42)\nregressor.fit(x_train,y_train)","9745e492":"scores = cross_val_score(regressor, x_train, y_train,cv=10)\nprint(\"Mean cross-validation score: %.2f\" % scores.mean())","d711d197":"regressor.fit(x_train,y_train)\n\npredictions = regressor.predict(x_test)","2c2e6371":"predictions","28bdda48":"rmse = np.sqrt(mean_squared_error(y_test, predictions))\nprint(\"RMSE: %f\" % (rmse))","4104aac3":"from sklearn.metrics import r2_score\nr2 = np.sqrt(r2_score(y_test, predictions))\nprint(\"R_Squared Score : %f\" % (r2))","5e45a733":"plt.figure(figsize=(10, 5), dpi=80)\nx_ax = range(len(y_test))\nplt.plot(x_ax, y_test, label=\"test\")\nplt.plot(x_ax, predictions, label=\"predicted\")\nplt.title(\"Total vaccinations- Test and Predicted data\")\nplt.legend()\nplt.show()","b0fa0a1a":"## EDA","2229b9ef":"## Feature Scaling","d84f365c":"## XGBoost","274617d3":"## Applying PCA","f7ec7984":"<div class=\"alert alert-block alert-success\">\n    <h1 align=\"center\">Predicting the trend of COVID-19 vaccinations in the world with XGBoost and Random Forest Regression<\/h1>\n  \n<\/div>","56dd8c3e":"## Data Preprocessing","90edd27a":"## Considering the R^2 value of these two methods, it can be concluded that these methods are suitable methods for forecasting","41a2c60c":"## Random Forest Regressor\n","7a00a593":"## Testing the model and showing the metrics","f2e0fc89":"## Importing the libraries","1694d11e":"<img src = \"https:\/\/www.eesc.europa.eu\/sites\/default\/files\/styles\/large\/public\/images\/shutterstock_1642888921.jpg?itok=P9-6YhGd\" width=50%>"}}