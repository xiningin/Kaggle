{"cell_type":{"d1984624":"code","06928a5f":"code","9a9b9e3d":"code","b6bea3c0":"code","ddbffe18":"code","f1fed07d":"code","b36ce3dc":"code","d6e2d1dc":"code","fc47818e":"code","21bd5028":"code","f62274df":"code","3841d75b":"code","b006dbc1":"code","d264ff93":"code","95a501df":"code","bfdfc847":"code","24177855":"markdown"},"source":{"d1984624":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport plotly.graph_objs as go\n%matplotlib inline","06928a5f":"df = pd.read_csv('\/kaggle\/input\/movies-on-netflix-prime-video-hulu-and-disney\/MoviesOnStreamingPlatforms_updated.csv', index_col=0)\ndf.set_index('ID', inplace=True)","9a9b9e3d":"df.head(2)","b6bea3c0":"prime = df[(df[\"Prime Video\"] == 1) & \n           (df[\"IMDb\"] > 7) & \n           (df.Year >= 2016) & \n           (df.Genres.str.contains('Thriller')) &\n           (df.Language.str.contains('English'))].sort_values('Year', ascending=False)","ddbffe18":"netflix = df[(df[\"Netflix\"] == 1) & \n           (df[\"IMDb\"] > 7) & \n           (df.Year >= 2016) & \n           (df.Genres.str.contains('Thriller')) &\n           (df.Language.str.contains('English'))].sort_values('Year', ascending=False)","f1fed07d":"Disney = df[(df[\"Disney+\"] == 1) & \n           (df[\"IMDb\"] > 7) & \n           (df.Year >= 2010) & \n           (df.Genres.str.contains('Thriller')) &\n           (df.Language.str.contains('English'))].sort_values('Year', ascending=False)\n","b36ce3dc":"prime[[\"Title\",\"IMDb\",\"Year\",\"Genres\"]].sort_values('IMDb', ascending=False).head() #primevideo movies after 2016","d6e2d1dc":"netflix[[\"Title\",\"IMDb\",\"Genres\"]].sort_values('IMDb', ascending=False).head() #primevideo movies after 2016","fc47818e":"top_genre = df['Genres'].str.get_dummies(',').sum().reset_index().rename(columns = {'index':'genre',0 : \"count\"})\ntop_genre.sort_values(by = 'count',ascending =False,inplace =True)","21bd5028":"fig = px.bar(top_genre, y='count', x= 'genre',color='count',title='TOP GENRES')\nfig.show()","f62274df":"df1 = (df[['Netflix', 'Hulu', 'Prime Video', 'Disney+']].sum()\/df.shape[0]).reset_index().rename(columns = \n                                                                                                     {'index':'platform', \n                                                                                                      0 : \"content\"})","3841d75b":"fig = px.pie(df1, values='content', names= 'platform',title='Content across Platforms')\nfig.show()","b006dbc1":"country_produce = df['Country'].str.get_dummies(',').sum().reset_index().rename(columns = {'index':'country', 0 : \"movies\"})","d264ff93":"fig = px.bar(country_produce.sort_values(by='movies', ascending=False).head(10), \n             y='movies', \n             x= 'country',\n             color = 'country',\n             title = 'MOST CONTENT PRODUCERS WORLDWIDE')\nfig.show()","95a501df":"fig = go.Figure(\n    data = go.Choropleth(locations=country_produce['country'],\n    z = country_produce['movies'].astype(float),\n    locationmode = 'country names',\n    colorscale = 'blues',\n    colorbar_title = \"movies\"))\n\nfig.update_layout(title_text = ' TOP CONTENT PRODUCERS WORLDWIDE')\n\nfig.show()","bfdfc847":"top_movies = df.sort_values('IMDb',ascending = False).head(10)\nfig = px.bar(top_movies, x='Title', y='IMDb', color='Title', height=600)\nfig.show()","24177855":"**search movies in OTT with certain year and imdb rating as well as genres**"}}