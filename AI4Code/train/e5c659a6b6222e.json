{"cell_type":{"688c9d4a":"code","7277a002":"code","1cdb0be2":"code","6b9794f6":"code","51a59e8b":"code","89f2d7aa":"code","96fa5c7e":"code","ddf712f6":"code","a96abbc6":"code","44aedfef":"code","1ccd0692":"code","60f6ed4e":"code","437786cd":"code","d717f1cb":"code","fcd9b832":"code","4a31ed20":"code","e47b8dca":"code","315853ee":"code","edb358a0":"code","71e364db":"code","bf1f26d4":"code","201b8fde":"code","7141abd1":"code","e470e519":"code","0a01d987":"code","b485a5fd":"code","124a9cf1":"code","16579655":"code","3140b443":"code","ba2ed4bb":"code","5dbd6b47":"code","646b6d1c":"code","6383b680":"code","e88e9836":"code","fb768308":"code","15136341":"code","dac75482":"code","d568e8bf":"code","a2ac06f6":"code","6c7602f1":"code","660c4c07":"code","bac4768f":"markdown","e49642d4":"markdown","e95adba2":"markdown","91f2c6c7":"markdown","9fb43197":"markdown","1221e211":"markdown","d50f50e9":"markdown","a854de07":"markdown","7ccf2ba2":"markdown","8e415dd5":"markdown","41aa0790":"markdown","feeabdc3":"markdown","c5f070d7":"markdown","c1f5a45a":"markdown","493ea6e8":"markdown","5a13eccd":"markdown","749a4b91":"markdown","27674f4a":"markdown","e0d6483b":"markdown","621c0aba":"markdown","5d279c1c":"markdown","a38cddb3":"markdown","9c2543a3":"markdown","77487b62":"markdown","63da42b4":"markdown","55d462da":"markdown","af01da5b":"markdown","f724a8e4":"markdown","4ded5dfe":"markdown","d88a2878":"markdown","f694631c":"markdown","363c4cae":"markdown","c2c9526b":"markdown","ecaf8818":"markdown","61bb641b":"markdown","de355485":"markdown","b9f9fc4d":"markdown","1411410e":"markdown","7fd603fd":"markdown","2bb05aea":"markdown","84562953":"markdown","2c55ddbd":"markdown","7bbc7cc6":"markdown","6ff56c33":"markdown","007d780a":"markdown"},"source":{"688c9d4a":"##  Library Imports\nimport os\nimport sys\nimport re\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime\nfrom collections import Counter, defaultdict\nfrom plotly import tools\nimport plotly.offline as py\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport folium\nimport warnings\nwarnings.filterwarnings('ignore')\npy.init_notebook_mode(connected=True)\nimport plotly.io as pio\npio.templates.default = \"plotly_dark\"\n# color pallette\ncnf = '#FDFBFB' # confirmed - white\ndth = '#ff2e63' # death - red\nrec = '#21bf73' # recovered - cyan\nact = '#fe9801' # active case - yellow","7277a002":"df_master = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\")\ndf_master.rename(columns={'Country\/Region':'Country'}, inplace=True)\ndf_master.rename(columns={'Province\/State':'State'}, inplace=True)\ndf_master.rename(columns={'ObservationDate':'Date'}, inplace=True)\n# Rename country labels\ndf_master['Country'].replace(['Mainland China'], 'China',inplace=True)\ndf_master['Country'].replace(['US'], 'United States',inplace=True)\ndf_master['Country'].replace(['UK'], 'United Kingdom',inplace=True)","1cdb0be2":"## Load Lat Long \ncoordinates = pd.read_csv('\/kaggle\/input\/latitude-and-longitude-for-every-country-and-state\/world_country_and_usa_states_latitude_and_longitude_values.csv')\ncountry_coordinates = coordinates[['country_code','latitude','longitude','country']]\n# Load Population\npopulation = pd.read_csv('\/kaggle\/input\/countries-of-the-world\/countries of the world.csv',converters={'Country': str.strip})\npopulation = population[['Country','Region','Population']]","6b9794f6":"df_master.head(3)","51a59e8b":"# Create derived column called Active Cases \ndf_master['Active'] = df_master['Confirmed'] - df_master['Recovered'] - df_master['Deaths']\n# Convert date column to appropriate data type\ndf_master['Date'] = pd.to_datetime(df_master['Date'])","89f2d7aa":"temp = df_master.groupby('Date')['Confirmed', 'Deaths', 'Recovered', 'Active'].sum().reset_index()\ntemp = temp[temp['Date']==max(temp['Date'])].reset_index(drop=True)\ntemp.style.background_gradient(cmap='Set1')","96fa5c7e":"cur_date = str(temp['Date'][0].date())\nprint(f\"As of {cur_date}, we have {round((temp['Recovered'][0]\/temp['Confirmed'][0])*100,3)}% of the infected who have recovered from the virus globally\")","ddf712f6":"tm = temp.melt(id_vars=\"Date\", value_vars=['Active', 'Deaths', 'Recovered'])\nfig = px.treemap(tm, path=[\"variable\"], values=\"value\", height=400, width=600,\n                 color_discrete_sequence=[rec, act, dth])\ntitle = f\"CoVid19 case split as of {cur_date}\"\nfig.update_layout(title=title)\nfig.show()","a96abbc6":"print(f\"We can see from the tree map visualization above that {round((temp['Active'][0]\/temp['Confirmed'][0])*100,2)}% infected cases worldwide are currently active.\")","44aedfef":"temp = df_master.copy()\ntemp = temp[temp['Date']==max(temp['Date'])].reset_index(drop=True)\ntemp = temp.groupby(['Country'])['Confirmed','Recovered','Deaths','Active'].sum().sort_values(by='Confirmed',ascending=False).reset_index()\n# Merge with country coordinates\ntemp = temp.merge(country_coordinates, left_on=\"Country\", right_on=\"country\")","1ccd0692":"population = population[['Country','Region','Population']]\n# Merge With Population\ntemp = temp.merge(population, left_on=\"Country\", right_on=\"Country\")\n# Derive Columns \ntemp['ConfirmedPer10kPeople'] = ( temp['Confirmed'] \/ temp['Population'] ) * 10000\ntemp['DeathsPer10kPeople'] = ( temp['Deaths'] \/ temp['Population'] ) * 10000","60f6ed4e":"fig = px.choropleth(temp, \n                    locations=\"Country\", \n                    color=\"Confirmed\",\n                    locationmode = 'country names',\n                    hover_name=\"Country\",\n                    range_color=[0,round(temp['Confirmed'].max())], \n                    color_continuous_scale=\"peach\",\n                    title = \"CoVid-19 : Confirmed Cases\")\n\nfig.show()","437786cd":"fig = px.choropleth(temp, \n                    locations=\"Country\", \n                    color=\"Deaths\",\n                    locationmode = 'country names',\n                    hover_name=\"Country\",\n                    range_color=[0,round(temp['Deaths'].max())], \n                    color_continuous_scale='portland',\n                    title = \"CoVid-19 : Death Cases\")\n\nfig.show()","d717f1cb":"# Filter countries with atleast 5 million people to avoid skewing the scales\nis_1mn = temp['Population'] >= 1000000\ntemp = temp[is_1mn]","fcd9b832":"fig = px.choropleth(temp, \n                    locations=\"Country\", \n                    color=\"ConfirmedPer10kPeople\",\n                    locationmode = 'country names',\n                    hover_name=\"Country\",\n                    range_color=[0,round(temp['ConfirmedPer10kPeople'].max())], \n                    color_continuous_scale=\"peach\",\n                    title = \"Confirmed Cases Per 10000 People\")\n\nfig.show()","4a31ed20":"fig = px.choropleth(temp, \n                    locations=\"Country\", \n                    color=\"DeathsPer10kPeople\",\n                    locationmode = 'country names',\n                    hover_name=\"Country\",\n                    range_color=[0,round(temp[\"DeathsPer10kPeople\"].max())], \n                    color_continuous_scale='portland',\n                    title = \"Deaths Per 10000 People\")\n\nfig.show()","e47b8dca":"def visualize_trends(fig, region, data, done=True):\n    trace1 = go.Scatter(x=data['Date'],\n                        y=data['Confirmed'],\n                        mode='lines+markers',\n                        name='Confirmed',\n                        marker=dict(color=cnf,))\n\n    trace2 = go.Scatter(x=data['Date'],\n                        y=data['Recovered'],\n                        mode='lines+markers',\n                        name='Recovered',\n                        marker=dict(color=rec,))\n\n    trace3 = go.Scatter(x=data['Date'],\n                        y=data['Deaths'],\n                        mode='lines+markers',\n                        name='Deaths',\n                        marker=dict(color=dth,))\n\n    trace4 = go.Scatter(x=data['Date'],\n                        y=data['Active'],\n                        mode='lines+markers',\n                        name='Active',\n                        marker=dict(color=act,))\n\n    fig.add_trace(trace1)\n    fig.add_trace(trace2)\n    fig.add_trace(trace3)\n    fig.add_trace(trace4)\n    title = f\"{region} Trend for CoVid-19 Cases\"\n    fig.update_layout(xaxis_title=\"Date\", yaxis_title=\"Count\", title=title)\n    if done:\n        fig.show()\n    ","315853ee":"temp = df_master.groupby('Date')['Confirmed','Recovered','Deaths','Active'].sum().reset_index()\nfig = go.Figure()\nvisualize_trends(fig=fig,\n                 region=\"Global\",\n                 data=temp)","edb358a0":"is_china = df_master['Country'] == 'China'\ntemp = df_master[is_china].groupby('Date')['Confirmed','Recovered','Deaths','Active'].sum().reset_index()\nfig = go.Figure()\nvisualize_trends(fig=fig,\n                 region=\"Mainland China\",\n                 data=temp,\n                 done=False)\nfig.add_shape(\n        dict(\n            type=\"line\",\n            x0='2020-01-23',\n            y0=-10000,\n            x1='2020-01-23',\n            y1=10000,\n            line=dict(\n                color=\"Blue\",\n                width=3\n            )))\nfig.add_shape(\n        dict(\n            type=\"line\",\n            x0='2020-02-13',\n            y0=50000,\n            x1='2020-02-13',\n            y1=70000,\n            line=dict(\n                color=\"Purple\",\n                width=3\n            )\n))\nfig.add_shape(\n        dict(\n            type=\"line\",\n            x0='2020-02-20',\n            y0=65000,\n            x1='2020-02-20',\n            y1=85000,\n            line=dict(\n                color=\"Green\",\n                width=3\n            )\n))\nfig.show()","71e364db":"is_row = df_master['Country'] != 'Mainland China'\ntemp = df_master[is_row].groupby('Date')['Confirmed','Recovered','Deaths','Active'].sum().reset_index()\nfig = go.Figure()\nvisualize_trends(fig=fig,\n                 region=\"Rest of World\",\n                 data=temp)","bf1f26d4":"is_italy = df_master['Country'] == 'Italy'\ntemp = df_master[is_italy].groupby('Date')['Confirmed','Recovered','Deaths','Active'].sum().reset_index()\nfig = go.Figure()\nvisualize_trends(fig=fig,\n                 region=\"Italy\",\n                 data=temp, \n                 done=False)\nfig.add_shape(\n        dict(\n            type=\"line\",\n            x0='2020-03-09',\n            y0=5000,\n            x1='2020-03-09',\n            y1=15000,\n            line=dict(\n                color=\"deeppink\",\n                width=3\n            )))\nfig.show()","201b8fde":"is_spain = df_master['Country'] == 'Spain'\ntemp = df_master[is_spain].groupby('Date')['Confirmed','Recovered','Deaths','Active'].sum().reset_index()\nfig = go.Figure()\nvisualize_trends(fig=fig,\n                 region=\"Spain\",\n                 data=temp, \n                 done=False)\nfig.add_shape(\n        dict(\n            type=\"line\",\n            x0='2020-03-15',\n            y0=6000,\n            x1='2020-03-15',\n            y1=10000,\n            line=dict(\n                color=\"deeppink\",\n                width=3\n            )))\nfig.show()","7141abd1":"is_france = df_master['Country'] == 'France'\ntemp = df_master[is_france].groupby('Date')['Confirmed','Recovered','Deaths','Active'].sum().reset_index()\nfig = go.Figure()\nvisualize_trends(fig=fig,\n                 region=\"France\",\n                 data=temp, \n                 done=False)\nfig.add_shape(\n        dict(\n            type=\"line\",\n            x0='2020-03-15',\n            y0=3000,\n            x1='2020-03-15',\n            y1=6000,\n            line=dict(\n                color=\"deeppink\",\n                width=3\n            )))\nfig.show()","e470e519":"is_us = df_master['Country'] == 'United States'\ntemp = df_master[is_us].groupby('Date')['Confirmed','Recovered','Deaths','Active'].sum().reset_index()\nfig = go.Figure()\nvisualize_trends(fig=fig,\n                 region=\"US\",\n                 data=temp)","0a01d987":"is_uk = df_master['Country'] == 'United Kingdom'\ntemp = df_master[is_uk].groupby('Date')['Confirmed','Recovered','Deaths','Active'].sum().reset_index()\nfig = go.Figure()\nvisualize_trends(fig=fig,\n                 region=\"UK\",\n                 data=temp, \n                 done=False)\n\nfig.add_shape(\n        dict(\n            type=\"line\",\n            x0='2020-03-22',\n            y0=5000,\n            x1='2020-03-22',\n            y1=6500,\n            line=dict(\n                color=\"deeppink\",\n                width=3\n            )))\nfig.show()","b485a5fd":"is_singapore = df_master['Country'] == 'Singapore'\ntemp = df_master[is_singapore].groupby('Date')['Confirmed','Recovered','Deaths','Active'].sum().reset_index()\nfig = go.Figure()\nvisualize_trends(fig=fig,\n                 region=\"Singapore\",\n                 data=temp)","124a9cf1":"is_sk = df_master['Country'] == 'South Korea'\ntemp = df_master[is_sk].groupby('Date')['Confirmed','Recovered','Deaths','Active'].sum().reset_index()\nfig = go.Figure()\nvisualize_trends(fig=fig,\n                 region=\"South Korea\",\n                 data=temp, \n                 done=False)\nfig.add_shape(\n        dict(\n            type=\"line\",\n            x0='2020-02-29',\n            y0=2000,\n            x1='2020-02-29',\n            y1=4000,\n            line=dict(\n                color=\"Blue\",\n                width=3\n            )))\nfig.show()","16579655":"is_india = df_master['Country'] == 'India'\ntemp = df_master[is_india].groupby('Date')['Confirmed','Recovered','Deaths','Active'].sum().reset_index()\nfig = go.Figure()\nvisualize_trends(fig=fig,\n                 region=\"India\",\n                 data=temp, \n                 done=False)\n\nfig.add_shape(\n        dict(\n            type=\"line\",\n            x0='2020-03-22',\n            y0=300,\n            x1='2020-03-22',\n            y1=500,\n            line=dict(\n                color=\"deeppink\",\n                width=3\n            )))\nfig.show()","3140b443":"## Extract top countries with most cases\ntemp = df_master.copy()\ntemp = temp[temp['Date']==max(temp['Date'])].reset_index(drop=True)\ntop10_df = temp.groupby(['Country'])['Confirmed','Recovered','Deaths','Active'].sum().sort_values(by='Confirmed',ascending=False).head(8)\ntop10_countries = top10_df.index.values\n\n## Filter for the top 10 countries in base data and plot for confirmed per 10k people and deaths per 10k people\ntemp = df_master.copy()\n## Merge With Population\ntemp = temp.merge(population, left_on=\"Country\", right_on=\"Country\")\n# Derive Columns \ntemp['ConfirmedPer10kPeople'] = ( temp['Confirmed'] \/ temp['Population'] ) * 10000\ntemp['DeathsPer10kPeople'] = ( temp['Deaths'] \/ temp['Population'] ) * 10000\n\n# Aggregate at country, date level and filter data for top 10 countries only\ntemp = temp.groupby(['Country','Date'])['ConfirmedPer10kPeople','DeathsPer10kPeople'].mean().reset_index()\nis_top10 = temp['Country'].isin(top10_countries)\ntemp = temp[is_top10]\n\n# Filter out cases from Feb 25 when multiple countries started showing cases\ntemp = temp[temp['Date'] >= datetime.date(2020,2,25)]\n\n# Convert date to correct format \ntemp[\"Date\"] = pd.to_datetime(temp[\"Date\"] , format=\"%m\/%d\/%Y\").dt.date\ntemp.sort_values(by=[\"Country\",\"Date\"]).reset_index(drop=True)\ntemp[\"Date\"] = temp[\"Date\"].astype(str)","ba2ed4bb":"fig = go.Figure()\nfig = px.bar(temp,\n                x=\"Country\",\n                y=\"ConfirmedPer10kPeople\",\n                color=\"Country\",\n                animation_frame=\"Date\",\n                animation_group=\"Country\",\n                title=\"Time Lapse - Confirmed Cases Per 10000 People\")\nfig.show()","5dbd6b47":"fig = go.Figure()\nfig = px.bar(temp,\n                x=\"Country\",\n                y=\"DeathsPer10kPeople\",\n                color=\"Country\",\n                animation_frame=\"Date\",\n                animation_group=\"Country\",\n                title=\"Time Lapse - Deaths Per 10000 People\")\nfig.show()","646b6d1c":"temp = df_master[['State','Country','Date','Confirmed']].copy()\n","6383b680":"is_hubei = (temp['State'].isin(['Hubei'])) & (temp['Country'].isin(['China']))\ntemp_hubei = temp[is_hubei]\nis_ro_china = (temp['Country'].isin(['China'])) & (temp['State'] != 'Hubei')\ntemp_ro_china = temp[is_ro_china]\ntemp_ro_china = temp_ro_china.groupby(['Country','Date'])['Confirmed'].sum().reset_index()\n\ndef growth_rate_compute(temp):\n    \"\"\"\n    Function to derive the growth rate column for given region\n    \"\"\"\n    temp = temp.sort_values(by='Date')\n    temp['Confirmed_t-1'] = temp['Confirmed'].shift(1, axis=0)\n    temp = temp[temp['Confirmed_t-1'].notna()]\n    temp.reset_index(inplace=True, drop=True)\n    temp['New_Cases_t'] = temp['Confirmed'] - temp['Confirmed_t-1']\n    # Filter the data points on days with New_Cases_t is zero (reporting anomalies)\n    temp = temp[temp['New_Cases_t'] != 0.0 ]\n    temp['New_Cases_t-1'] = temp['New_Cases_t'].shift(1, axis=0)\n    temp['Growth_Rate'] = temp['New_Cases_t'] \/ temp['New_Cases_t-1']\n    # Remove anomalies in growth rate (excess of > 10) \n    temp = temp[temp['Growth_Rate'] <= 20.0 ]\n    temp = temp[temp['Growth_Rate'].notna()]\n    return temp\n\ntemp_hubei = growth_rate_compute(temp=temp_hubei)\ntemp_ro_china = growth_rate_compute(temp=temp_ro_china)","e88e9836":"fig = go.Figure()\n#trace1 = go.Bar(x=temp_hubei['Date'], \n #               y=temp_hubei['Growth_Rate'],\n #               hovertext = \"Hubei,China\",\n #               marker=dict(color=\"red\",))\n\ntrace1 = go.Scatter(x=temp_hubei['Date'],\n                    y=temp_hubei['Growth_Rate'],\n                    mode='lines+markers',\n                    hovertext='Hubei,China',\n                    marker=dict(color=\"red\",))\n\nfig.add_trace(trace1)\nfig.update_layout(title=' Growth Rate Trend in Hubei, China')\nfig.show()","fb768308":"fig = go.Figure()\ntrace1 = go.Scatter(x=temp_ro_china['Date'],\n                    y=temp_ro_china['Growth_Rate'],\n                    mode='lines+markers',\n                    hovertext='Rest of China',\n                    marker=dict(color=\"orange\",))\n\nfig.add_trace(trace1)\nfig.update_layout(title=' Growth Rate Trend in China (Outside Hubei)')\nfig.show() ","15136341":"is_italy = temp['Country'] == 'Italy'\ntemp_italy = temp[is_italy]\ntemp_italy = temp_italy.groupby(['Country','Date'])['Confirmed'].sum().reset_index()\ntemp_italy = growth_rate_compute(temp=temp_italy)\nfig = go.Figure()\ntrace1 = go.Scatter(x=temp_italy['Date'],\n                    y=temp_italy['Growth_Rate'],\n                    mode='lines+markers',\n                    hovertext='Italy',\n                    marker=dict(color=\"red\",))\n\nfig.add_trace(trace1)\nfig.update_layout(title=' Growth Rate Trend in Italy')\nfig.show() ","dac75482":"is_spain = temp['Country'] == 'Spain'\ntemp_spain = temp[is_spain]\ntemp_spain = temp_spain.groupby(['Country','Date'])['Confirmed'].sum().reset_index()\ntemp_spain = growth_rate_compute(temp=temp_spain)\nfig = go.Figure()\ntrace1 = go.Scatter(x=temp_spain['Date'],\n                    y=temp_spain['Growth_Rate'],\n                    mode='lines+markers',\n                    hovertext='Spain',\n                    marker=dict(color=\"red\",))\n\nfig.add_trace(trace1)\nfig.update_layout(title=' Growth Rate Trend in Spain')\nfig.show() ","d568e8bf":"is_us= temp['Country'] == 'United States'\ntemp_us = temp[is_us]\ntemp_us = temp_us.groupby(['Country','Date'])['Confirmed'].sum().reset_index()\ntemp_us = growth_rate_compute(temp=temp_us)\nfig = go.Figure()\ntrace1 = go.Scatter(x=temp_us['Date'],\n                    y=temp_us['Growth_Rate'],\n                    mode='lines+markers',\n                    hovertext='US',\n                    marker=dict(color=\"red\",))\n\nfig.add_trace(trace1)\nfig.update_layout(title=' Growth Rate Trend in US')\nfig.show() ","a2ac06f6":"is_uk = temp['Country'] == 'United Kingdom'\ntemp_uk = temp[is_uk]\ntemp_uk = temp_uk.groupby(['Country','Date'])['Confirmed'].sum().reset_index()\ntemp_uk = growth_rate_compute(temp=temp_uk)\nfig = go.Figure()\ntrace1 = go.Scatter(x=temp_uk['Date'],\n                    y=temp_uk['Growth_Rate'],\n                    mode='lines+markers',\n                    hovertext='United Kingdom',\n                    marker=dict(color=\"red\",))\n\nfig.add_trace(trace1)\nfig.update_layout(title=' Growth Rate Trend in United Kingdom')\nfig.show() ","6c7602f1":"is_india = temp['Country'] == 'India'\ntemp_india = temp[is_india]\ntemp_india = temp_india.groupby(['Country','Date'])['Confirmed'].sum().reset_index()\ntemp_india = growth_rate_compute(temp=temp_india)\nfig = go.Figure()\ntrace1 = go.Scatter(x=temp_uk['Date'],\n                    y=temp_uk['Growth_Rate'],\n                    mode='lines+markers',\n                    hovertext='India',\n                    marker=dict(color=\"red\",))\n\nfig.add_trace(trace1)\nfig.update_layout(title=' Growth Rate Trend in India')\nfig.show() ","660c4c07":"is_sk = temp['Country'] == 'South Korea'\ntemp_sk = temp[is_sk]\ntemp_sk = temp_sk.groupby(['Country','Date'])['Confirmed'].sum().reset_index()\ntemp_sk = growth_rate_compute(temp=temp_sk)\nfig = go.Figure()\ntrace1 = go.Scatter(x=temp_sk['Date'],\n                    y=temp_sk['Growth_Rate'],\n                    mode='lines+markers',\n                    hovertext='South Korea',\n                    marker=dict(color=\"green\",))\n\nfig.add_trace(trace1)\nfig.update_layout(title=' Growth Rate Trend in South Korea')\nfig.show() ","bac4768f":"### Growth rate visualization in India","e49642d4":"In most European countries like Italy, France and Spain sustained community transmission can be observed from the trend seen after the 2nd week of March. \n\nThe pink vertical line indicates when each of the European countries went into lockdown. We should hopefully witness the impact of intervention measures on the trend lines in the coming weeks. ","e95adba2":"Both US and UK are witnessing growth rates breaching 1 on a daily basis since the first week of March. The trends indicate that both the countries are atleast a few weeks away from their inflection points.","91f2c6c7":"![CoVid-19 Pandemic](https:\/\/article.images.consumerreports.org\/f_auto\/prod\/content\/dam\/CRO-Images-2020\/Health\/03Mar\/CR-Health-Inlinehero-coronavirus-update-v2-0320)","9fb43197":"Let's take a quick look at the primary CoVid-19 dataset that is imported.","1221e211":"## Data Visualization","d50f50e9":"Trends above indicate that China has \"flattened the curve\" with the recovered cases slowly creeping up and active cases reducing sharply. China witnessed an exponential increase in confirmed cases from the last week of January until the third week of February as the impact of the lockdown took time to be fully realized. \n\nThe colored vertical lines indicate the dates of intervention measures. The blue line indicates when Wuhan was locked down and the purple line shows when the factories in China were shut.\n\nThe number of new cases reduced post this period as the draconian lockdown measures implemented seem to have largely helped in containing the CoVid-19 outbreak. It however took nearly a month from when Wuhan was locked down for the impact to be fully realized in terms of curve flattening.","a854de07":"Singapore was one of the first few countries to witness imported cases from China in the last week of January. Despite this, the island nation has not witnessed an exponential growth  due to their meticulous contact tracing and early isolation of CoVid-19 cases. \n\nThey have shown other countries that proactive government intervention and meticulous contact tracing early on is really pivotal in slowing down the spread of the virus.\n","7ccf2ba2":"On the other hand, rest of the world is still in the exponential growth phase with daily confirmed numbers still rapidly climbing and newer countries witnessing sustained community transmission.","8e415dd5":"On the other hand, UK imposed lockdown measures on the 22nd of March when the confirmed case count was already above 5000 and there was widespread community transmission. It appears that UK still has a few weeks of exponential growth ahead before the impact of lockdown can be observed in the trends.","41aa0790":"## Background ","feeabdc3":"## Closing Commentary\n\n\nThis is certainly not the first pandemic human kind has faced nor will it be the last. \n\nBe it the 1720 Plague, 1820 Cholera or the 1920 Spanish Flu, each pandemic did take a huge toll on humanity. But after each of these events, human kind found a way to bounce back stronger with renewed vigour. \n\nOne key difference between the current pandemic and the previous ones is that we are armed with much better science and data to understand the impending risk and thereby employ ways to mitigate it.\n\nWe definitely are approaching more troubling times over the next couple of months as the data indicates. However countries like China, South Korea and Singapore that were the earliest countries to get affected have shown that with collective effort from both the government and citizens, containment measures can actually succeed. With active government interventions, responsible social behaviour and strict adherence to scientific advice (physical distancing, good hygiene, regular hand washing etc.), we will be able to avoid overwhelming our healthcare systems over the next few months and \"flatten the curve\" globally.  \n","c5f070d7":"### How has the CoVid-19 trend been for India?","c1f5a45a":"![FlattentheCurve](https:\/\/www.gannett-cdn.com\/presto\/2020\/03\/11\/USAT\/7b03cfcf-ea80-4a94-b518-f401e7e1bb26-flattening_the_curve.jpg)","493ea6e8":"In this kernel, we will explore data from the evolving CoVid-19 situation to get a better sense of what potentially lies ahead.\n","5a13eccd":"In Hubei (China) which is the epicenter of the outbreak, growth rates over the past 2 weeks have been consistently less than 1 indicating that they are past the inflection point in Hubei. \n\nIn rest of china, although the growth rate seem to be fluctuating, the actual figure of new cases daily is substantially low (in low double digits). ","749a4b91":"A handy measure to evaluate the progression of an epidemic is the **Growth Rate**. \n\nGrowth rate can be defined as the number of new confirmed cases on *day t* divided by the number of new confirmed cases on *day t-1*. \n\nDuring the sustained community transmission phase, growth rate is larger than 1 consistently indicating that the number of new cases is increasing at an exponential fashion every day. At some point of the epidemic we reach an inflection point, after which the growth rate drops to less than 1. The inflection point refers to the peak stage of the epidemic.\n\nLet us try to compute and visualize the growth rate for the CoVid-19 outbreak in different parts of the globe where there has been community transmission of the virus. This would give a better idea about which stage of the epidemic are the different countries going through.","27674f4a":"### What trends do we observe in UK and US?","e0d6483b":"### Can we drill down to understand the trend in China vs RoW? ","621c0aba":"If we do not take any protective measures, there wouldn't be enough hospital beds or mechanical ventilators for everyone who needs them, and the hospital system would be overwhelmed with cases at once. ","5d279c1c":"### Growth rate visualization in China (within and outside the Hubei province)","a38cddb3":"### What has been the impact of CoVid-19 on different countries?","9c2543a3":"## What does science tell us about pandemics?","77487b62":"The world has recently witnessed an outbreak of a respiratory disease caused by a novel (new) coronavirus that was first detected in China and which has now been detected in more than 150 locations internationally. The virus has been named \u201cSARS-CoV-2\u201d and the disease it causes has been named \u201ccoronavirus disease 2019\u201d (abbreviated \u201cCOVID-19\u201d).\n\nOn January 30, 2020, the International Health Regulations Emergency Committee of the World Health Organization (WHO) declared the outbreak a \u201cpublic health emergency of international concern\u201d (PHEIC). On March 11, WHO publicly characterized COVID-19 as a pandemic.","63da42b4":"\n\nAs coronavirus continues to spread across the world, we see countries increasingly impose strict measures that heavily disrupt daily life. \n\nThese measures are necessary to do what epidemiologists call as **\"flattening the curve\"**. The idea is to increase social distancing and slow down the virus, so that you don't get a huge spike in the number of people getting sick all at once. \n","55d462da":"## Data Sources","af01da5b":"We shall attempt to answer some of the key questions around CoVid-19 with the help of visualizations. These visuals shall be refreshed periodically as the outbreak is still an evolving situation.","f724a8e4":"In US, since testing kits were widely accessible only after second week of March, the number of confirmed cases have taken off post **March 18th**. It appears that there has been community transmission in the US much before this point and the lack of test kits resulted in a lot of suspected cases going unreported.\n","4ded5dfe":"### How has the Covid-19 outbreak impacted Europe?","d88a2878":"### Growth rate visualization in Europe (Spain, Italy)","f694631c":"\nSouth Korea could not avoid a local community transmission as seen from the trend in the second half of February. \n\nHowever, through mass testing introduced on February 29th shown using the vertical blue line, they seem to have slowed the exponential increase in March and flattened their curve early. This has prevented their healthcare systems from being overwhelmed thereby ensuring a low mortality rate. \n\nThe experiences of South Korea shows that rapid large scale testing is another key intervention measure that can help with early flattening of the curve. ","363c4cae":"Italy and Spain which are the epicenters of the outbreak in Europe have been witnessing growth rates above 1 consistently. We still are not past the inflection point in these parts of Europe but are pretty close to reaching the peak.","c2c9526b":"The containment measures in South Korea seem to be working effectively. The growth rates are stable and contained to less than 1 on most days after March 6th. ","ecaf8818":"We notice that the global trend for confirmed cases was exponentially rising  **until the first week of February** primarily driven by cases in **Mainland China**. \n\nThe rate of increase of confirmed cases appeared to stabilize in the **second week of February** before a second wave kicked off on **February 13th**. \n\nAround **March 13** we notice a **third steep rise** in confirmed cases that can be linked to sustained community transmissions in multiple European countries and the United States. \n","61bb641b":"Let's visualize the latest CoVid-19 numbers from a geo-spatial lens to get a better understanding of the spread in different regions across the globe.","de355485":"### How did CoVid-19 spread from China to RoW over time?","b9f9fc4d":"The primary data for this kernel has been sourced from the repository maintained by Johns Hopkins University Center for Systems Science and Engineering (JHU CSSE). The raw data is refreshed daily and can be accesed from their github repository available in this [link](https:\/\/github.com\/CSSEGISandData\/COVID-19).\n\nFor this analysis, we use the following freely available data sources, \n- Daily data for CoVid19 cases split by region\n- Geo-Spatial data with Latitudes & Longitudes\n- Demography data for countries","1411410e":"### What is the latest tally of Covid-19 globally?","7fd603fd":"### Growth rate visualization in South Korea","2bb05aea":"One important thing to note while interpreting the above numbers retrospectively is that the cases observed today are due to infections that have happened roughly 2 to 3 weeks back. Any measures of containment enforced by the government and practised by the people will start bearing fruit after a similar time lag. ","84562953":"The absolute number of confirmed cases reported in each region may not be a useful metric to compare across countries as they have vastly different demographies. To overcome this, we normalize the absolute number of cases with the population size and plot them to get a better intuition of the extent of impact on each country.","2c55ddbd":"### Growth rate visualization in US and UK","7bbc7cc6":"### How has CoVid-19 trended in countries with proactive government interventions (Singapore and South Korea)?","6ff56c33":"### What stage of this epidemic are we in currently?","007d780a":"### How has the trend for CoVid-19 been globally?"}}