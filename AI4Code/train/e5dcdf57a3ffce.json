{"cell_type":{"0d651c9a":"code","626df719":"code","db961661":"code","4a5a9be2":"code","14ab97f5":"code","300cce13":"code","a578bc56":"code","8f343305":"code","645a6883":"code","df05422a":"code","d6b9d059":"code","43054ef7":"code","5ffc24a5":"code","9507aef3":"code","db3727c0":"code","b8a69111":"code","0b298ba8":"code","476f7eea":"code","8ca08f42":"code","b32c5a08":"code","a9ee7ca2":"code","770f78a3":"code","9d266c77":"code","0d91613c":"code","fc837435":"code","11c3b13c":"code","64962c76":"code","d97aea7f":"code","bd8de398":"code","0410ab15":"code","17c3804e":"code","0f337e59":"code","c176c07a":"code","5ba371b8":"code","3feaa818":"code","4655ecc7":"code","b0821dd4":"code","3fc8e7c0":"code","9d835bae":"code","6dd642f7":"code","6339bf6d":"code","82171fa1":"code","66fbc76e":"code","3bc79410":"code","9e5cec4a":"code","4dfde4cc":"code","2851a7f0":"code","a9745ea4":"code","1bd9a3c8":"markdown","188a9a6c":"markdown","f8fbf68a":"markdown","3f8ef7eb":"markdown","02f2e059":"markdown","c7a165ff":"markdown","107ab0ea":"markdown","3ffe2e7f":"markdown","d20800c6":"markdown","1117643b":"markdown","57bb71f0":"markdown","8830c892":"markdown","c18f9c18":"markdown","df6dd600":"markdown","b7dc902c":"markdown","5e2745c9":"markdown","e759e4c9":"markdown","271685f5":"markdown","76b12536":"markdown","b6665769":"markdown","eca9e795":"markdown"},"source":{"0d651c9a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","626df719":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ndf = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\ndf.head()\nprint(df)","db961661":"df","4a5a9be2":"df.drop([0,1], inplace=True)","14ab97f5":"agedata = df['Q1'].sort_index()\nagedata\n","300cce13":"import seaborn as sb\nimport seaborn as sns\nagedata = df['Q1'].sort_index()\ndf.sort_values('Q1', ascending = False, inplace= True)\nx = df['Q1']\nsns.countplot( x=\"Q1\", data = df)\n\n\nplt.title('Distribution of Age',fontsize=20)\nplt.xticks(rotation=90, fontsize=20)\nplt.xlabel('Age',fontsize=20)","a578bc56":"gender = df['Q2'].value_counts().sort_index()\ngender","8f343305":"import seaborn as sb\nimport seaborn as sns\nx = df['Q2']\nsns.countplot( x='Q2', data = df,order = gender.index)\n\nplt.title('Gender',fontsize=20)\nplt.xticks(rotation=90,fontsize=20)\nplt.xlabel('Gender',fontsize=20)","645a6883":"ax=plt.subplots(1,1,figsize=(30,24))\ndf['Q2'].value_counts().plot.pie(explode=[0.1,0.1,0.1,0.1,0.1],autopct='%1.1f%%',shadow=True,figsize=(10,8))\nplt.title(\"Gender\")\nplt.show()","df05422a":"country = df['Q3'].value_counts().sort_index()\ncountry","d6b9d059":"import plotly.express as px\nimport calendar as cal\nimport random\nfig = px.bar(country, \n             x=['Q3'])\nfig.show()","43054ef7":"education = df['Q4'].value_counts().sort_index()\neducation","5ffc24a5":"import seaborn as sns\nagedata = df['Q4'].sort_index()\nx = df['Q4']\nsns.countplot( x=\"Q4\", data = df)\n\nplt.title('Distribution of Education',fontsize=20)\nplt.xticks(rotation=90, fontsize=20)\nplt.xlabel('Education',fontsize=20)","9507aef3":"ax=plt.subplots(1,1,figsize=(30,24))\ndf['Q4'].value_counts().plot.pie(explode=[0.1,0.1,0.1,0.1,0.1,0.1,0.1],autopct='%1.1f%%',shadow=True,figsize=(10,8))\nplt.title(\"Education Status\")\nplt.show()","db3727c0":"role = df['Q5'].value_counts().sort_index()\nrole","b8a69111":"import plotly.express as px\nimport calendar as cal\nimport random\nfig = px.bar(role, \n             x=['Q5'])\nfig.show()","0b298ba8":"experience = df['Q6'].value_counts().sort_index()\nexperience","476f7eea":"import seaborn as sns\nexperience = df['Q6'].sort_index()\nx = df['Q6']\nsns.countplot( x=\"Q6\", data = df)\n\nplt.title('Programming Language Experience',fontsize=20)\nplt.xticks(rotation=90, fontsize=20)\nplt.xlabel('Experience',fontsize=20)","8ca08f42":"language = df[[i for i in df.columns if 'Q7' in i]]\nlanguage_all = pd.Series(dtype='int')\nfor i in language.columns:\n    language_all[language[i].value_counts().index[0]] = language[i].count()\n\nlanguage_all = language_all.sort_values(ascending=True)\nlanguage_all","b32c5a08":"programminglan_names = []\nprogramminglan_popularity = []\n\n\nfor x in range(1,13):\n    programminglan_names.append(df['Q7_Part_'+str(x)].dropna().unique()[0])\nprogramminglan_names.append(df['Q7_OTHER'].dropna().unique()[0])\n\n\nfor y in range(1,13):\n    programminglan_popularity.append(df['Q7_Part_'+str(y)].dropna().count())\nprogramminglan_popularity.append(df['Q7_OTHER'].dropna().count())\n                     \n    \nplt.figure(figsize=(15,12))\nsns.set_style('darkgrid')\nsns.barplot(y=programminglan_names,x=programminglan_popularity,color='#42b7bd')\n\n\nax=plt.gca()\nax.get_children()[0].set_color('#a834a8')\nax.get_children()[2].set_color('#5C5174')\nax.get_children()[1].set_color('#926d88')\nplt.title('Most Popular Programming Languages',size=20)\n","a9ee7ca2":"recommended = df['Q8'].value_counts().sort_index()\nrecommended","770f78a3":"import plotly.express as px\nimport calendar as cal\nimport random\nfig = px.bar(recommended, \n             x=['Q8'])\nfig.show()","9d266c77":"df_ides = df[[i for i in df.columns if 'Q9' in i]]\ndf_ides_all = pd.Series(dtype='int')\nfor i in df_ides.columns:\n    df_ides_all[df_ides[i].value_counts().index[0]] = df_ides[i].count()\ndf_ides_all","0d91613c":"ide_names = []\nide_popularity = []\n\n\nfor x in range(1,12):\n    ide_names.append(df['Q9_Part_'+str(x)].dropna().unique()[0])\nide_names.append(df['Q9_OTHER'].dropna().unique()[0])\n\n\nfor y in range(1,12):\n    ide_popularity.append(df['Q9_Part_'+str(y)].dropna().count())\nide_popularity.append(df['Q9_OTHER'].dropna().count())\n                     \n    \nplt.figure(figsize=(15,12))\nsns.set_style('darkgrid')\nsns.barplot(y=ide_names,x=ide_popularity,color='#42b7bd')\n\n\nax=plt.gca()\nax.get_children()[0].set_color('#a834a8')\nax.get_children()[3].set_color('#5C5174')\nax.get_children()[4].set_color('#926d88')\nplt.title('Favourite IDE',size=20)","fc837435":"df_notebooks = df[[i for i in df.columns if 'Q10' in i]]\ndf_notebooks_all = pd.Series(dtype='int')\nfor i in df_notebooks.columns:\n    df_notebooks_all[df_notebooks[i].value_counts().index[0]] = df_notebooks[i].count()\ndf_notebooks_all","11c3b13c":"hosted_names = []\nhosted_popularity = []\n\n\nfor x in range(1,12):\n    hosted_names.append(df['Q10_Part_'+str(x)].dropna().unique()[0])\nhosted_names.append(df['Q10_OTHER'].dropna().unique()[0])\n\n\nfor y in range(1,12):\n    hosted_popularity.append(df['Q10_Part_'+str(y)].dropna().count())\nhosted_popularity.append(df['Q10_OTHER'].dropna().count())\n                     \n    \nplt.figure(figsize=(15,12))\nsns.set_style('darkgrid')\nsns.barplot(y=ide_names,x=ide_popularity,color='#42b7bd')\n\n\nax=plt.gca()\nax.get_children()[0].set_color('#a834a8')\nax.get_children()[3].set_color('#5C5174')\nax.get_children()[4].set_color('#926d88')\nplt.title('Hosted Notebooks',size=20)","64962c76":"platform = df['Q11'].value_counts().sort_index()\nplatform","d97aea7f":"ax=plt.subplots(1,1,figsize=(30,24))\ndf['Q11'].value_counts().plot.pie(explode=[0.1,0.1,0.1,0.1,0.1],autopct='%1.1f%%',shadow=True,figsize=(10,8))\nplt.title(\"Most Used Computing Platform\")\nplt.show()","bd8de398":"df_hardware = df[[i for i in df.columns if 'Q12' in i]]\ndf_hardware_all = pd.Series(dtype='int')\nfor i in df_hardware.columns:\n    df_hardware_all[df_hardware[i].value_counts().index[0]] = df_hardware[i].count()\ndf_hardware_all","0410ab15":"hardware_names = []\nhardware_popularity = []\n\n\nfor x in range(1,4):\n    hardware_names.append(df['Q12_Part_'+str(x)].dropna().unique()[0])\nhardware_names.append(df['Q12_OTHER'].dropna().unique()[0])\n\n\nfor y in range(1,4):\n    hardware_popularity.append(df['Q12_Part_'+str(y)].dropna().count())\nhardware_popularity.append(df['Q12_OTHER'].dropna().count())\n                     \n    \nplt.figure(figsize=(15,12))\nsns.set_style('darkgrid')\nsns.barplot(y=hardware_names,x=hardware_popularity,color='#42b7bd')\n\n\nax=plt.gca()\nax.get_children()[0].set_color('#a834a8')\nax.get_children()[2].set_color('#5C5174')\nax.get_children()[1].set_color('#926d88')\nplt.title('Most Used Hardware',size=20)","17c3804e":"tpu = df['Q13'].value_counts().sort_index()\ntpu","0f337e59":"ax=plt.subplots(1,1,figsize=(30,24))\ndf['Q13'].value_counts().plot.pie(explode=[0.1,0.1,0.1,0.1,0.1],autopct='%1.1f%%',shadow=True,figsize=(10,8))\nplt.title(\"TPU Use Rate\")\nplt.show()","c176c07a":"df_library = df[[i for i in df.columns if 'Q14' in i]]\ndf_library_all = pd.Series(dtype='int')\nfor i in df_library.columns:\n    df_library_all[df_library[i].value_counts().index[0]] = df_library[i].count()\ndf_library_all\n","5ba371b8":"library_names = []\nlibrary_popularity = []\n\n\nfor x in range(1,12):\n    library_names.append(df['Q14_Part_'+str(x)].dropna().unique()[0])\nlibrary_names.append(df['Q14_OTHER'].dropna().unique()[0])\n\n\nfor y in range(1,12):\n    library_popularity.append(df['Q14_Part_'+str(y)].dropna().count())\nlibrary_popularity.append(df['Q14_OTHER'].dropna().count())\n                     \n    \nplt.figure(figsize=(15,12))\nsns.set_style('darkgrid')\nsns.barplot(y=library_names,x=library_popularity,color='#42b7bd')\n\n\nax=plt.gca()\nax.get_children()[0].set_color('#a834a8')\nax.get_children()[1].set_color('#5C5174')\nax.get_children()[2].set_color('#926d88')\nplt.title('Most Popular Visualization Libraries',size=20)","3feaa818":"mlyears = df['Q15'].value_counts().sort_index()\nmlyears","4655ecc7":"import seaborn as sb\nimport seaborn as sns\nmlyears = df['Q15'].sort_index()\ndf.sort_values('Q15', ascending = False, inplace= True)\nx = df['Q15']\nsns.countplot( x=\"Q15\", data = df)\n\n\nplt.title('Distribution of Used ML Years',fontsize=20)\nplt.xticks(rotation=90, fontsize=20)\nplt.xlabel('Used ML Year',fontsize=20)","b0821dd4":"df_mlframe = df[[i for i in df.columns if 'Q16' in i]]\ndf_mlframe_all = pd.Series(dtype='int')\nfor i in df_mlframe.columns:\n    df_mlframe_all[df_mlframe[i].value_counts().index[0]] = df_mlframe[i].count()\ndf_mlframe","3fc8e7c0":"mlframework_names = []\nmlframework_popularity = []\n\n\nfor x in range(1,16):\n    mlframework_names.append(df['Q16_Part_'+str(x)].dropna().unique()[0])\nmlframework_names.append(df['Q16_OTHER'].dropna().unique()[0])\n\n\nfor y in range(1,16):\n    mlframework_popularity.append(df['Q16_Part_'+str(y)].dropna().count())\nmlframework_popularity.append(df['Q16_OTHER'].dropna().count())\n                     \n    \nplt.figure(figsize=(15,12))\nsns.set_style('darkgrid')\nsns.barplot(y=library_names,x=library_popularity,color='#42b7bd')\n\n\nax=plt.gca()\nax.get_children()[0].set_color('#a834a8')\nax.get_children()[1].set_color('#5C5174')\nax.get_children()[2].set_color('#926d88')\nplt.title('Most Used Machine Learning Framework',size=20)","9d835bae":"employee = df['Q20'].value_counts().sort_index()\nemployee","6dd642f7":"import plotly.express as px\nimport calendar as cal\nimport random\nfig = px.bar(employee, \n             x=['Q20'])\nfig.show()","6339bf6d":"business = df['Q22'].value_counts().sort_index()\nbusiness","82171fa1":"ax=plt.subplots(1,1,figsize=(30,24))\ndf['Q22'].value_counts().plot.pie(explode=[0.1,0.1,0.1,0.1,0.1,0.1],autopct='%1.1f%%',shadow=True,figsize=(10,8))\nplt.title(\"Does your current employer incorporate machine learning methods into their business?\")\nplt.show()","66fbc76e":"bdproducts = df['Q30'].value_counts().sort_index()\nbdproducts","3bc79410":"import plotly.express as px\nimport calendar as cal\nimport random\nfig = px.bar(bdproducts, \n             x=['Q30'])\nfig.show()","9e5cec4a":"businttools = df['Q32'].value_counts().sort_index()\nbusinttools","4dfde4cc":"import plotly.express as px\nimport calendar as cal\nimport random\nfig = px.bar(businttools, \n             x=['Q32'])\nfig.show()","2851a7f0":"primarytool = df['Q38'].value_counts().sort_index()\nprimarytool\n","a9745ea4":"ax=plt.subplots(1,1,figsize=(30,24))\ndf['Q38'].value_counts().plot.pie(explode=[0.1,0.1,0.1,0.1,0.1,0.1],autopct='%1.1f%%',shadow=True,figsize=(10,8))\nplt.title(\"Primary Tool Used in Data Analysis\")\nplt.show()","1bd9a3c8":"# Age Distribution\nWhat is your age (# years)?","188a9a6c":"# Computing Platform","f8fbf68a":"# Favourite Business Intelligence Tools","3f8ef7eb":"# Hosted Notebooks","02f2e059":"# Current Role","c7a165ff":"# Years of Using Machine learning ","107ab0ea":"# Gender","3ffe2e7f":"# Company Employees","d20800c6":"# Hardware","1117643b":"# Education","57bb71f0":"# Most Used Machine Learning Framework","8830c892":"# Programming Language\n","c18f9c18":"# Visualization Libraries","df6dd600":"# Which Of The Following Big Data Products?\n","b7dc902c":"# Country","5e2745c9":"# Favourite IDE","e759e4c9":"# Primary Tool Used in Data Analysis","271685f5":"# Does your current employer incorporate machine learning methods into their business?# ","76b12536":"# Recommended Programming Language","b6665769":"# TPU Use Rate","eca9e795":"# Programming Language Experience"}}