{"cell_type":{"3147ff69":"code","bf26a82e":"code","a572207f":"code","a66d9753":"code","ffe34b96":"code","ee2ee544":"code","0ec9d1ec":"code","3464089d":"code","6b65f431":"code","70a4e30c":"code","8ed894b0":"code","172866a7":"code","5c37a013":"code","b8b449c1":"code","b9c7447a":"code","569ba96f":"code","d41ffe34":"code","d9de4cbe":"code","67aac4e5":"code","7cb2edeb":"code","ef50ff1c":"code","188311c7":"code","5666a52e":"code","2676b5f9":"code","2bdb2f3b":"code","410a65fb":"code","bf234bfb":"code","cbd91e4a":"code","0ea603ed":"code","ed33507a":"code","c0e77ef7":"code","e8f47bdb":"code","275024f9":"code","84b834c7":"code","a7cacd4f":"code","19858029":"code","03031fc3":"code","f5901857":"code","85fbabae":"code","5a278f41":"code","5d3277e7":"code","f6fabd88":"code","92f678ce":"code","a0070ff5":"code","f0c28a8e":"code","ff7a3b9a":"code","0615c654":"code","090fa074":"code","85d11a50":"code","e9c807a7":"code","9f250034":"code","41e669ca":"code","44a9310b":"code","67fa343a":"code","6bba9d29":"code","8d251cfa":"code","7b044366":"code","d0b8e1aa":"code","7a3bbe9c":"markdown","adbb392a":"markdown","931b441f":"markdown","f6412209":"markdown","7714bb99":"markdown","a6cec08b":"markdown","42488f0e":"markdown","4df386ce":"markdown","8b356576":"markdown","581c42b8":"markdown","6f76f96e":"markdown","6b957bdd":"markdown","027628b4":"markdown","6ae15e1d":"markdown"},"source":{"3147ff69":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt \nfrom matplotlib.colors import ListedColormap\nfrom sklearn.metrics import plot_confusion_matrix\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import roc_auc_score, auc, roc_curve, precision_recall_curve, classification_report, accuracy_score,log_loss, confusion_matrix\nimport warnings\nwarnings.simplefilter(action='ignore', category=Warning)\nimport numpy as np\n","bf26a82e":"df = pd.read_csv('\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv') \n","a572207f":"df.head()","a66d9753":"df.info()","ffe34b96":"df.describe()","ee2ee544":"df.shape","0ec9d1ec":"df.dtypes","3464089d":"df.columns","6b65f431":"df.isnull().sum()","70a4e30c":"df.duplicated().any()","8ed894b0":"sns.countplot(x=\"Outcome\", data=df)\nplt.show()","172866a7":"df.corr()","5c37a013":"plt.figure(figsize=(10,12))\nsns.heatmap(df.corr(), annot=True)\nplt.show()","b8b449c1":"sns.pairplot(data=df, hue='Outcome')\nplt.show()","b9c7447a":" df.columns","569ba96f":" sns.countplot(x=df['Pregnancies'] )","d41ffe34":"sns.distplot(df[\"Glucose\"])","d9de4cbe":"sns.distplot(df[\"BloodPressure\"])","67aac4e5":"sns.distplot(df[\"SkinThickness\"])","7cb2edeb":"assert pd.notnull(df).all().all()\n","ef50ff1c":"x=df.drop(columns='Outcome')\ny=df['Outcome']\n ","188311c7":"from sklearn.model_selection import train_test_split \nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)\n","5666a52e":"x_train.shape, x_test.shape","2676b5f9":"y_train.shape, y_test.shape","2bdb2f3b":"logreg=LogisticRegression()","410a65fb":"logreg.fit(x_train, y_train)","bf234bfb":"y_pred=logreg.predict_proba(x_test)[:,1]","cbd91e4a":"roc_auc_score(y_train, logreg.predict_proba(x_train)[:,1])","0ea603ed":"roc_auc_score(y_test, logreg.predict_proba(x_test)[:,1])","ed33507a":"print(f'accuracy of model is:{accuracy_score(y_test, logreg.predict(x_test))}')\nprint(f\"classification report is:{classification_report(y_test, logreg.predict(x_test))}\")\nprint(f\"confusion matrix is :{confusion_matrix(y_test, logreg.predict(x_test))}\")\nprint(f'log loss is:{log_loss(y_test, y_pred)}')","c0e77ef7":"fpr, tpr, _=roc_curve(y_test, logreg.predict_proba(x_test)[:,1])\nroc_auc=auc(fpr, tpr)\nfpr_tr, tpr_tr, thresholds_roc = roc_curve(y_train, logreg.predict_proba(x_train)[:, 1])\nroc_auc_tr = auc(fpr_tr, tpr_tr)","e8f47bdb":"import matplotlib.pyplot as plt\nplt.plot(fpr, tpr, color=\"red\")\nplt.plot(fpr_tr,\n    tpr_tr,\n    color=\"green\")\nplt.plot([0, 1], [0, 1], color=\"navy\", lw=2, linestyle=\"--\")\n\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.title(\"Receiver operating characteristic\")\n \nplt.show()","275024f9":"from sklearn.ensemble import RandomForestClassifier\nrf=RandomForestClassifier()\nrf.fit(x_train,y_train)","84b834c7":"rf.fit(x_train, y_train)","a7cacd4f":" y_pred=rf.predict(x_test)","19858029":"print(f'accuracy of model is:{accuracy_score(y_test,rf.predict(x_test))}')\nprint(f'classification report is:{classification_report(y_test, rf.predict(x_test))}')\nprint(f'Confusion matrix is:{confusion_matrix(y_test, rf.predict(x_test))}')\nprint(f\"log loss of model is:{log_loss(y_test, rf.predict(x_test))}\")","03031fc3":"from xgboost import XGBClassifier\n","f5901857":"xgb= XGBClassifier()","85fbabae":"xgb.fit(x_train, y_train)","5a278f41":"y_pred1=xgb.predict(x_test)","5d3277e7":"print(f'accuracy of model is:{accuracy_score(y_test,y_pred1)}')\nprint(f'Classification report is:{classification_report(y_test,y_pred1)}')\nprint(f'Confusion matrix is:{confusion_matrix(y_test, y_pred1)}')\nprint(f\"log loss of model is:{log_loss(y_test, y_pred1)}\")\n","f6fabd88":"from sklearn.tree import DecisionTreeClassifier\n","92f678ce":"dtree = DecisionTreeClassifier()","a0070ff5":"dtree.fit(x_train, y_train)","f0c28a8e":"y_pred2=dtree.predict(x_test)","ff7a3b9a":"print(f'accuracy of model is:{accuracy_score(y_test, y_pred2)}')\nprint(f'classification report is:{classification_report(y_test, y_pred2)}')\nprint(f'confusion matrix is:{confusion_matrix(y_test, y_pred2)}')\nprint(f\"log loss of model is:{log_loss(y_test, y_pred2)}\")","0615c654":"from sklearn.ensemble import GradientBoostingClassifier\ngbdt=GradientBoostingClassifier()\ngbdt.fit(x_train,y_train)","090fa074":"gbdt.fit(x_train, y_train)","85d11a50":"y_pred=gbdt.predict(x_test)","e9c807a7":"print(f\"accuarcy of model is:{accuracy_score(y_test, y_pred)}\")\nprint(f'classification report is:{classification_report(y_test, y_pred)}')\nprint(f'confusion matrix is:{confusion_matrix(y_test, y_pred)}')\nprint(f\"log loss of model is:{log_loss(y_test, y_pred)}\")","9f250034":"from sklearn.ensemble import AdaBoostClassifier","41e669ca":"adb=AdaBoostClassifier()","44a9310b":"adb.fit(x_train, y_train)","67fa343a":"print(f\"accuracy of model is:{accuracy_score(y_test, adb.predict(x_test))}\")\nprint(f\"confusion matrix is:{confusion_matrix(y_test, adb.predict(x_test))}\")\nprint(f\"classification report is:{classification_report(y_test, adb.predict(x_test))}\")\nprint(f\"log loss of model is:{log_loss(y_test, adb.predict(x_test))}\")","6bba9d29":"from sklearn.neighbors import KNeighborsClassifier","8d251cfa":"knn=KNeighborsClassifier()","7b044366":"knn.fit(x_train, y_train)","d0b8e1aa":"print(f\"the accuracy of model is:{accuracy_score(y_test, knn.predict(x_test))}\")\nprint(f\"confusion matrix is:{confusion_matrix(y_test, knn.predict(x_test))}\")\nprint(f\"classification report is:{classification_report(y_test, knn.predict(x_test))}\")\nprint(f\"log loss of model is:{log_loss(y_test, knn.predict(x_test))}\")","7a3bbe9c":"# Logistic Regression","adbb392a":"# gradient boosting classifier","931b441f":"# Adaboost","f6412209":"Count of peoples not having diabetes has high count as compared to have diabetes","7714bb99":"In data set no null values.","a6cec08b":"# Random Forest","42488f0e":"# XGboost","4df386ce":"# Importing Libraries","8b356576":"# Exploratory Data Analysis","581c42b8":"# KNN","6f76f96e":"In data set no duplicate values","6b957bdd":"# Loading the dataset","027628b4":"# Decision Tree Classifier","6ae15e1d":"In data set there are 768 rows and 9 columns"}}