{"cell_type":{"b237359c":"code","4c017c57":"code","aa3e31f0":"code","228e74c8":"code","0c6cc81c":"code","e681bd7d":"code","aebc17e2":"code","4f47cbc0":"code","4226fc78":"code","56e713c9":"code","51a214ad":"code","9b42e365":"code","ed7ba4d9":"code","958fd23e":"code","ea9596e4":"code","2977ea5e":"code","e2e937ae":"markdown","b47bd758":"markdown","28b6d101":"markdown"},"source":{"b237359c":"!pip install folium","4c017c57":"# importing libraries\n\nfrom __future__ import print_function\nfrom ipywidgets import interact, interactive, fixed, interact_manual\nfrom IPython.core.display import display, HTML\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport folium\nimport plotly.graph_objects as go\nimport seaborn as sb\nimport ipywidgets as widgets","aa3e31f0":"#importing dataset\ndf = pd.read_csv('..\/input\/kariyernet-turkey-professions-informations\/cleandataset.csv')\ntype(df)","228e74c8":"#sorting dataset by mean salary\nsorted_job_df = df.sort_values('mean_salary', ascending=False)\nsorted_job_df.head(15)","0c6cc81c":"#function for fill background of salaries columns\nfig = go.FigureWidget( layout=go.Layout() )\ndef highlight_col(x):\n    dg = 'background-color: darkgray'\n    a = 'background-color: aqua'\n    t = 'background-color: teal'\n    df1 = pd.DataFrame('', index=x.index, columns=x.columns)\n    df1.iloc[:, 1] = dg\n    df1.iloc[:, 2] = a\n    df1.iloc[:, 3] = t\n    \n    return df1\n\n#displaying first five rows of costumized dataset\nsorted_job_df.head(5).style.apply(highlight_col, axis=None)","e681bd7d":"#function for plotting mean salary for each profession by interactive dashboard via 'plotly' library.\ndef bubble_chart(n):\n    fig = px.scatter(sorted_job_df.head(n), x=\"job_name\", y=\"mean_salary\", size=\"mean_salary\", color=\"job_name\",\n               hover_name=\"job_name\", size_max=60)\n    fig.update_layout(\n    title=str(n) +\" Most Winning Profession (Average)\",\n    xaxis_title=\"Professions\",\n    yaxis_title=\"Mean Salary\",\n    width = 700\n    )\n    fig.show();\n\ninteract(bubble_chart, n=10)\nipywLayout = widgets.Layout(border='solid 2px green')\nipywLayout.display='none'\nwidgets.VBox([fig], layout=ipywLayout)","aebc17e2":"#bar plot for most winning professions\npx.bar(\n    sorted_job_df.head(10),\n    x = \"job_name\",\n    y = \"mean_salary\",\n    labels= {'job_name': 'Professions',\n            'mean_salary': 'Mean Salary (\u20ba)'},\n    title= \"Top 10 most earning professions\", # the axis names\n    color_discrete_sequence=[\"aqua\"], \n    height=500,\n    width=800\n)","4f47cbc0":"sorted_job_adv = df.sort_values('job_advertisement', ascending=False)\nsorted_job_adv.head(15)","4226fc78":"px.bar(\n    sorted_job_adv.head(15),\n    x = \"job_name\",\n    y = \"job_advertisement\",\n    labels={'job_name':' Professions',\n           'job_advertisement': 'Job Advertisements'},\n    title= \"Top 15 most wanted professions\", # the axis names\n    color_discrete_sequence=[\"blue\"],\n    height=500,\n    width=800,\n).update_layout(showlegend=False)","56e713c9":"#to look at correlations between numeric columns\nnumeric_df  = df[['mean_salary','max_salary','min_salary','total_participants','number_of_entries ','male_percentage','female_percentage','job_advertisement']]\nsb.pairplot(numeric_df)","51a214ad":"#concat skills columns and make them array to sum\n#there is '0' value we extract its by beginning one\nmost_skill = df[['first_skill','second_skill','third_skill','fourth_skill','fiveth_skill']].values.flatten()\nmost_skill = pd.value_counts(most_skill)\nmost_skill = most_skill[1:]\nmost_skill","9b42e365":"#plotting most skill wia plolty\npx.bar(\n    most_skill.head(15),\n    title= \"Top 15 most wanted professions\", # the axxis names\n    labels={'value':'# of skills', 'index':'Skills'},\n    color_discrete_sequence=[\"black\"],\n    height=500,\n    width=800\n).update_layout(showlegend=False)","ed7ba4d9":"#concat schools columns and make them array to sum\n#there is '0' value we extract its by beginning one\nmost_school = df[['first_school','second_school','third_school','fourth_school','fiveth_school']].values.flatten()\nmost_school = pd.value_counts(most_school)\nmost_school = most_school[1:]\nmost_school","958fd23e":"#plotting most school wia plolty\npx.bar(\n    most_school.head(15),\n    title= \"Top 15 preferable schools in professions\", # the axxis names\n    labels={'value':'# of schools', 'index':'Schools'},\n    color_discrete_sequence=[\"gray\"],\n    height=500,\n    width=800\n).update_layout(showlegend=False)","ea9596e4":"#concat department columns and make them array to sum\n#there is '0' value we extract its by beginning one\nmost_grad = df[['first_grad','second_grad','third_grad','fourth_grad','fiveth_grad']].values.flatten()\nmost_grad = pd.value_counts(most_grad)\nmost_grad = most_grad[1:]\nmost_grad","2977ea5e":"#plotting most department wia plolty\npx.bar(\n    most_grad.head(15),\n    title= \"Top 15 preferable department in professions\", # the axxis names\n    labels={'value':'# of department', 'index':'Departments'},\n    color_discrete_sequence=[\"lightgray\"],\n    height=500,\n    width=800\n).update_layout(showlegend=False)","e2e937ae":"##### After cleaning data we need to visualise data for better understanding to trends of profession details","b47bd758":"# Kariyer.net Data Visualization","28b6d101":"**to look at correlations between numeric columns**"}}