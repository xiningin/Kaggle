{"cell_type":{"2d706861":"code","8f914efe":"code","06a332d8":"code","6ca709f1":"code","9c6b73ff":"code","753d50b0":"code","6e6fccb6":"code","9ab35ee8":"code","10676c24":"code","12f5c45f":"code","cc7a149e":"code","da15f271":"code","77cd5c53":"markdown","0ddf3e3e":"markdown","84f59ae4":"markdown"},"source":{"2d706861":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport folium\ndf_somaj=pd.read_csv('..\/input\/unemployment-romania-2020\/SomajGeocodat.csv', dtype=object)\n\n","8f914efe":"df_somaj.head()","06a332d8":"map_hooray = folium.Map(location=[45.7074, 25.1278],\n                    zoom_start = 7) # Uses lat then lon. The bigger the zoom number, the closer in you get\nmap_hooray # Calls the map to display\n\n#map_osm = folium.Map(location=[54.7, -4.36])\n#This 2nd set of coordinates will drop you down right in the middle of the UK, which is actually the seas because it's between mainland and N.Ireland, ","6ca709f1":"df_somaj.head()\n","9c6b73ff":"from folium import plugins\nfrom folium.plugins import HeatMap\nmap_hooray = folium.Map(location=[45.7074, 25.1278],\n                    zoom_start = 7) # Uses lat then lon. The bigger the zoom number, the closer in you get\nheat_df=[]\n#df_somaj.loc['Total someri'].replace([','],'.')\n#df_somaj['Total someri']\n#df_somaj['Total someri'] = df_somaj.loc['Total someri'].replace([','],'.')\n# Ensure you're handing it floats\ndf_somaj[\"Latitude\"] = df_somaj['Y'].astype(float)\ndf_somaj['Longitude'] = df_somaj['X'].astype(float)\nheat_df = df_somaj[['Latitude', 'Longitude']]\n\n# Create weight column, using data you need in this case Unemployment\nheat_df['Weight'] = df_somaj['Total someri']\nheat_df['Weight'] = heat_df['Weight'].astype(float)\nheat_df = heat_df.dropna(axis=0, subset=['Latitude','Longitude', 'Weight'])\n\n","753d50b0":"# Convert data to list\ndata =heat_df.values.tolist()\nm = folium.Map([45, 25], tiles='Stamen Terrain', zoom_start=7)\n\nHeatMap(data).add_to(m)\nm\n#More about heatmap here:\n#https:\/\/stackoverflow.com\/questions\/54752175\/add-heatmap-to-a-layer-in-folium","6e6fccb6":"df_somaj['Rata somajului']=df_somaj['Rata somajului'].str.replace(\",\", \".\") \ndf_somaj.tail()","9ab35ee8":"#df_somaj = df_somaj[~df_somaj['Rata somajului'].str.contains('=')]\n#df[df['Rata somajului].str.contains(\"ball\")]\ndf_somaj = df_somaj[df_somaj['Rata somajului'].str.contains('=') == False]\ndf_somaj= df_somaj[df_somaj['Rata somajului'] != 0]","10676c24":"df_somaj.head()","12f5c45f":"heat_df1 = df_somaj[['Latitude', 'Longitude']]\n# Create weight column, using data you need in this case Unemployment\nheat_df1['Weight'] = df_somaj['Rata somajului']\nheat_df1['Weight'] = heat_df1['Weight'].astype(float)\nheat_df1 = heat_df1.dropna(axis=0, subset=['Latitude','Longitude', 'Weight'])\n# Convert data to list\ndata1 =heat_df1.values.tolist()\n","cc7a149e":"#data1","da15f271":"m = folium.Map([45, 25], tiles='stamentoner', zoom_start=7)\n\nHeatMap(data1).add_to(m)\nm\n","77cd5c53":"# Unemployment Rate","0ddf3e3e":"# What is Folium\nFolium is a tool that makes you look like a mapping God while all the work is done in the back end.\n\nIt's a Python wrapper for a tool called leaflet.js. We basically give it minimal instructions, JS does loads of work in the background and we get some very, very cool maps. It's great stuff.\n\nFor clarity, the map is technically called a 'Leaflet Map'. The tool that let's you call them in Python is called 'Folium'. \n\n# The other cool stuff?\nIt gives you interactive functionality. Want to let users drop markers on the map? Can do. Build heatmaps? Can do. Build heatmaps that change with time? Can do.\n\nFunk yeah! Let's do this.\n## Add-on to the original Notebook: Unemployment data from dataframe on a map\n\nThe data from Romanian Instiute of statistics was geocoded. \nThere is a simple step to convert dataframe to a list for folium, values from dataframe are converted to a list:\ndata =heat_df.values.tolist()\n\n","84f59ae4":"# Plugins\nThere are too many to demo them all but check out this notebook to see the additional plugins you can use. Likely to be of interest are MarkerCluster and Fullscreen.\n\nhttp:\/\/nbviewer.jupyter.org\/github\/python-visualization\/folium\/blob\/master\/examples\/Plugins.ipynb \n\n"}}