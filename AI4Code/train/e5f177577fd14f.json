{"cell_type":{"5d5bf71c":"code","070bde83":"code","34ad2b15":"code","75d258c3":"code","e54c1fda":"code","a7be1c17":"code","cfbf79ef":"markdown","629d8720":"markdown","502d55c8":"markdown","7f3c7394":"markdown","45d359ed":"markdown","3b22674f":"markdown"},"source":{"5d5bf71c":"import numpy as np\nimport pandas as pd\nimport sys, time, os, json\n\nimport matplotlib.pyplot as plt\nfrom  tqdm import tqdm\n\nimport pydicom\n\n\nclass Configs():\n    def __init__(self):\n        self.data_root_dir = '..\/input\/'\n        self.test_image_dir = os.path.join(self.data_root_dir, 'stage_1_test_images\/')\n        self.train_image_dir = os.path.join(self.data_root_dir, 'stage_1_train_images\/')\n        self.file_ext = '.dcm'\n\nC = Configs()\n\nprint('\\n'.join(os.listdir(\"..\/input\")))","070bde83":"labels = pd.read_csv(C.data_root_dir+'stage_1_train_labels.csv', \n                     dtype={'patientId':str, \n                            'x':np.float, \n                            'y': np.float, \n                            'width': np.float, \n                            'height': np.float, \n                            'target': np.int})\n\ndetails = pd.read_csv(C.data_root_dir+'stage_1_detailed_class_info.csv', dtype={'patientId': str, 'class': str})\n# rename column name to avoid a trouble.\n# column name 'class' could cause the trouble when use query()\ndetails.columns = ['patientId', 'details']\nwhole_label_info = pd.concat([labels, details.drop('patientId', axis=1)], axis=1)\n\n# quick-check\nwhole_label_info['details'].value_counts()","34ad2b15":"patientId = whole_label_info['patientId'].drop_duplicates().values\npatient_info = pd.DataFrame()\nfor p in tqdm(patientId):\n    ds = pydicom.dcmread(C.train_image_dir + p + C.file_ext)\n    tmp_info = pd.DataFrame({\n        'patientId': [ds.PatientID],\n        'age': [ds.PatientAge],\n        'sex': [ds.PatientSex]\n    })\n    patient_info = patient_info.append(tmp_info)\n\n","75d258c3":"whole_label_info = whole_label_info.merge(patient_info, on='patientId', how='left')","e54c1fda":"stat_age = patient_info['age'].value_counts(dropna=False).reset_index().rename({'index': 'age', 'age': 'count'}, axis=1)\nstat_age['age'] = stat_age['age'].astype(int)\nstat_age.sort_values('age')\n\nprint('range of age: ', stat_age['age'].min(), stat_age['age'].max())\n\nplt.bar(stat_age['age'], stat_age['count'])\nplt.ylabel('count')\nplt.xlabel('age')\nplt.show()","a7be1c17":"stat_sex = patient_info['sex'].value_counts(dropna=False).reset_index().rename({'index': 'sex', 'sex': 'count'}, axis=1)\nplt.bar(stat_sex['sex'], stat_sex['count'])\nplt.ylabel('count')\nplt.xlabel('gender')\nplt.show()","cfbf79ef":"to be continued...","629d8720":"# let's see the extracted information","502d55c8":"# load and join data","7f3c7394":"# check gender","45d359ed":"DICOM data contains not only the image pixel data but also the data format (meta data), shooting condition and patient information.\nIn this notebook, I extracted age and sex information from the given data.\n\nI'm not sure the extracted data is useful or not for what we want to predict...","3b22674f":"# extract patient data\nNote: PatientBirthDate and PatientOrientation was empty."}}