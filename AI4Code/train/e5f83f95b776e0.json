{"cell_type":{"added11d":"code","7f3b2b2e":"code","da77876d":"code","533908e8":"code","2df55707":"code","2993f4f4":"code","1e9a4b00":"code","38507567":"code","b24adae4":"code","2690e072":"code","6e12b3ca":"code","becab309":"code","745a06d1":"code","dfcef822":"code","451dec05":"code","d99c5c50":"code","a2f8547f":"code","8757436a":"code","b4dc06d9":"code","4b018f5b":"code","55290684":"code","64325bab":"code","a1b9f0ac":"code","a74d6e7f":"code","510ced5f":"code","b1013df2":"code","41eac264":"code","a0d38500":"code","60640db7":"code","224703a8":"markdown","532c9b60":"markdown","2b0799a6":"markdown","bebe261d":"markdown","3c85db47":"markdown","7db4a740":"markdown","8a8c15ea":"markdown","dc0d26c1":"markdown","a5412bce":"markdown","542796eb":"markdown","4b0991bf":"markdown","b13601b6":"markdown","4b00a7c0":"markdown"},"source":{"added11d":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score","7f3b2b2e":"# loading the dataset to a Pandas DataFrame\ncredit_card_data = pd.read_csv('..\/input\/rohith0303\/rohith0303.csv')","da77876d":"# first 5 rows of the dataset\ncredit_card_data.head()","533908e8":"credit_card_data.tail()","2df55707":"# dataset informations\ncredit_card_data.info()","2993f4f4":"# checking the number of missing values in each column\ncredit_card_data.isnull().sum()","1e9a4b00":"# distribution of legit transactions & fraudulent transactions\ncredit_card_data['Class'].value_counts()","38507567":"# separating the data for analysis\nlegit = credit_card_data[credit_card_data.Class == 0]\nfraud = credit_card_data[credit_card_data.Class == 1]","b24adae4":"print(legit.shape)\nprint(fraud.shape)","2690e072":"# statistical measures of the data\nlegit.Amount.describe()","6e12b3ca":"fraud.Amount.describe()","becab309":"# compare the values for both transactions\ncredit_card_data.groupby('Class').mean()","745a06d1":"legit_sample = legit.sample(n=492)","dfcef822":"new_dataset = pd.concat([legit_sample, fraud], axis=0)","451dec05":"new_dataset.head()","d99c5c50":"new_dataset.tail()","a2f8547f":"new_dataset['Class'].value_counts()","8757436a":"new_dataset.groupby('Class').mean()","b4dc06d9":"X = new_dataset.drop(columns='Class', axis=1)\nY = new_dataset['Class']","4b018f5b":"print(X)","55290684":"print(Y)","64325bab":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)","a1b9f0ac":"print(X.shape, X_train.shape, X_test.shape)","a74d6e7f":"model = LogisticRegression()","510ced5f":"# training the Logistic Regression Model with Training Data\nmodel.fit(X_train, Y_train)","b1013df2":"# accuracy on training data\nX_train_prediction = model.predict(X_train)\ntraining_data_accuracy = accuracy_score(X_train_prediction, Y_train)","41eac264":"print('Accuracy on Training data : ', training_data_accuracy)","a0d38500":"# accuracy on test data\nX_test_prediction = model.predict(X_test)\ntest_data_accuracy = accuracy_score(X_test_prediction, Y_test)","60640db7":"print('Accuracy score on Test Data : ', test_data_accuracy)","224703a8":"Importing the Dependencies","532c9b60":"This Dataset is highly unblanced","2b0799a6":"Under-Sampling","bebe261d":"Model Training","3c85db47":"Logistic Regression","7db4a740":"Splitting the data into Features & Targets","8a8c15ea":"0 --> Normal Transaction\n\n1 --> fraudulent transaction","dc0d26c1":"Number of Fraudulent Transactions --> 492","a5412bce":"Build a sample dataset containing similar distribution of normal transactions and Fraudulent Transactions","542796eb":"Accuracy Score","4b0991bf":"Model Evaluation","b13601b6":"Split the data into Training data & Testing Data","4b00a7c0":"Concatenating two DataFrames"}}