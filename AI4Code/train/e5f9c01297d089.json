{"cell_type":{"a8d90af6":"code","0d8cfa6f":"code","c22c87dd":"code","d354f7fc":"code","0db4c5d9":"code","f6142360":"code","c68e4bc6":"code","32ac2412":"code","d1bc6877":"code","5c13462e":"code","b00a1d05":"code","24b76db1":"code","52e1e759":"code","6dd5a407":"code","5f647a00":"code","f7c3115e":"code","7e855d4e":"code","752aca34":"code","a371333c":"code","53c0f278":"code","e03aa7a8":"code","f4f24245":"code","efe2688d":"code","7154d167":"code","d9d4f5a6":"code","fb80cab1":"code","fa25f412":"code","0ed2d0be":"code","5975bf09":"markdown","85487069":"markdown","09bfec01":"markdown","0492eab0":"markdown","3ab0876f":"markdown","973327fa":"markdown","d1f07807":"markdown","14f4cecd":"markdown","33cecb37":"markdown","8c326102":"markdown","8670681e":"markdown","6e96672f":"markdown","e041efed":"markdown","4c0dd0db":"markdown","b0d34804":"markdown","00328484":"markdown","37101193":"markdown","1ad0bfd8":"markdown","2bb30e55":"markdown","a2abb7dd":"markdown","6ce9975b":"markdown","5ceb33e6":"markdown","6903a021":"markdown","e6acee03":"markdown"},"source":{"a8d90af6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom itertools import groupby\ndf_2020  = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')","0d8cfa6f":"df_2020['Q6'].value_counts()","c22c87dd":"df_2020.info()","d354f7fc":"df_2020_count_pr = df_2020.copy()\ndf_2020_count_pr.head(3)","0db4c5d9":"df_2020_count_pr = df_2020_count_pr['Q6'].fillna(0).replace(to_replace =  [0, '20+ years','10-20 years','1-2 years','5-10 years','3-5 years','I have never written code', '< 1 years','NaN'], \n                                                                 value =['0','20+','10-20','1-2','5-10','3-5','0', '1', '0'])\ndf_2020_count_pr = df_2020_count_pr.drop(df_2020_count_pr.index[0])","f6142360":"#df_2020['Q6']  = df_2020['Q6'].fillna(0)\ndf_2020['Q6'].value_counts()\n\ndf_novice1 = df_2020[(df_2020['Q6']=='1-2 years')]\ndf_novice2 = df_2020[(df_2020['Q6']=='< 1 years')]\ndf_novice3 = df_2020[(df_2020['Q6']=='I have never written code')]\ndf_novice4 = df_2020[(df_2020['Q6']==0)]\n\ndf_novice = pd.concat([df_novice1, df_novice2, df_novice3, df_novice4], axis=0, sort=False)\ndf_novice['category'] = \"Novice\"","c68e4bc6":"df_2020['Q6'].value_counts()\n\ndf_master1 = df_2020[(df_2020['Q6']=='3-5 years')]\ndf_master2 = df_2020[(df_2020['Q6']=='5-10 years')]\ndf_master3 = df_2020[(df_2020['Q6']=='10-20 years')]\ndf_master4 = df_2020[(df_2020['Q6']=='20+ years')]\n\ndf_master = pd.concat([df_master1, df_master2, df_master3, df_master4], axis=0, sort=False)\ndf_master['category'] = \"Master\"","32ac2412":"df_2020_category = pd.concat([df_master, df_novice])\n#df_2020_category['coder_perc']= df_2020_category['category']\/df_2020_category['category'].sum()\ndf_2020_category['category'].value_counts()","d1bc6877":"df_2020_category['category'].value_counts(normalize=True) * 100","5c13462e":"import matplotlib.pyplot as plt\nfrom matplotlib.offsetbox import AnchoredText\n\ncolor_ds = sns.color_palette(\"mako\")\n\n#df_2020_count = df_2020_category['Q6'].fillna(0).replace(to_replace = [0,'20+ years','10-20 years','1-2 years','5-10 years','3-5 years','I have never written code','< 1 years','NaN'], value =['0','20+','10-20','1-2','5-10','3-5','0', '1', '0'])\n#df_2020_count = df_2020_count.drop(df_2020_count.index[0])\ndf_2020_category ['Q6'] = df_2020_count_pr\ndf_2020_category.dropna()\ngroup = df_2020_category.groupby(\"category\")\nax = sns.countplot(df_2020_category['Q6'],\n                   palette='BuPu',\n                   order = ['0', '1', '1-2', '3-5', '5-10', '10-20', '20+'],\n                   hue=df_2020_category['category'],\n                   dodge =False)\n\nax.set(xlabel='Years of coding experience', ylabel='Count')\nax.set_title(\"Figure 1. Master vs Novice programer\")\nplt.show()","b00a1d05":"data_q5_category = df_2020_category[df_2020_category['category'] != 'ETC'].groupby(['category'])['Q5'].value_counts().unstack().sort_index()\nq5_concat = pd.concat([data_q5_category.loc['Novice'], data_q5_category.loc['Master']], axis=1, sort=False)\nq5_concat['Master'] = q5_concat['Master'] .div(q5_concat['Master'] .sum(axis=0), axis=0).mul(100).round(3)\nq5_concat['Master'] = q5_concat['Master']*(-1)\nq5_concat['Novice'] = q5_concat['Novice'] .div(q5_concat['Novice'] .sum(axis=0), axis=0).mul(100).round(3)","24b76db1":"q5_concat = q5_concat.sort_values('Novice')\nax = q5_concat[['Novice','Master']].plot(kind = 'bar', \n                                         figsize=(10, 10), \n                                         stacked = True,\n                                         color = ['#810f7c','#e0ecf4'], \n                                         edgecolor = \"grey\", \n                                         linewidth = 0.5)\nx_offset = -0.03\ny_offset_master = -2\ny_offset_novice = 2\n\nfor p in ax.patches:\n    b = p.get_bbox()\n    if b.y1 > 0:\n        val = \"{:.1f}\".format(b.y1 + b.y0)\n        ax.annotate(val, \n                    ((b.x0 + b.x1)\/2 + x_offset, \n                     b.y1 + y_offset_novice),               \n                    va = 'center', \n                    ha='center',\n                    fontweight='light', \n                    fontfamily='serif')\n    else:\n        val = \"{:.1f}\".format(b.y1*(-1) + b.y0)\n        ax.annotate(val, \n                    ((b.x0 + b.x1)\/2 + x_offset, \n                     b.y1 + y_offset_master),                \n                    va = 'center', \n                    ha='center',\n                    fontweight='light', \n                    fontfamily='serif')\n    \nax.set(xlabel=' ', ylabel='Percentage (%)')\nax.legend()\nax.set_title(\"Figure 2. Job title of novice vs master coders\")\nplt.show()","52e1e759":"df_novice1 = df_2020[(df_2020['Q6']=='1-2 years')]\ndf_novice2 = df_2020[(df_2020['Q6']=='< 1 years')]\ndf_novice0 = df_2020[(df_2020['Q6']=='I have never written code')]\ndf_novice4 = df_2020[(df_2020['Q6']==0)]\n\ndf_novice_1_2 = pd.concat([df_novice1, df_novice2], axis=0, sort=False)\ndf_novice_0 = pd.concat([df_novice0, df_novice4], axis=0, sort=False)","6dd5a407":"df_novice_1_2","5f647a00":"df_novice_0","f7c3115e":"ax = sns.countplot(df_novice_1_2['Q5'],\n                   palette=\"BuPu\",\n                   order = df_novice_1_2['Q5'].value_counts().index)\nax.set(xlabel=' ', ylabel='Count')\nax.set_xticklabels(ax.get_xticklabels(),rotation=90)\nax.set_title(\"Figure 3. Job title of novice programers with 1-2 years experience\")","7e855d4e":"ax = sns.countplot(df_novice_0[\"Q5\"],\n                   palette=\"BuPu\",\n                   order = df_novice_0['Q5'].value_counts().index)\nax.set(xlabel=' ', ylabel='Count')\nax.set_xticklabels(ax.get_xticklabels(),rotation=90)\nax.set_title(\"Figure 4. Job title of novice coders with 0 coding experience\")\nplt.show()","752aca34":"df_2020['Q15']  = df_2020['Q15'].fillna(0)\ndf_2020['Q15'].value_counts()\n \ndf_novice0 = df_2020[(df_2020['Q15']=='Under 1 year')]\ndf_novice1 = df_2020[(df_2020['Q15']=='1-2 years')]\ndf_novice2 = df_2020[(df_2020['Q15']=='I do not use machine learning methods')]\ndf_novice3 = df_2020[(df_2020['Q15']==0)]\n\ndf_novice_ds = pd.concat([df_novice0, df_novice1, df_novice2, df_novice3], axis=0, sort=False)\ndf_novice_ds['category_ds'] = \"ML Novice\"\n\n\ndf_master0 = df_2020[(df_2020['Q15']=='2-3 years')]\ndf_master1 = df_2020[(df_2020['Q15']=='3-4 years')]\ndf_master2 = df_2020[(df_2020['Q15']=='4-5 years')]\ndf_master3 = df_2020[(df_2020['Q15']=='5-10 years')]\ndf_master4 = df_2020[(df_2020['Q15']=='10-20 years')]\ndf_master5 = df_2020[(df_2020['Q15']=='20 or more years')]\n\ndf_master_ds = pd.concat([df_master0, df_master1, df_master2, df_master3, df_master4, df_master5], axis=0, sort=False)\ndf_master_ds['category_ds'] = \"ML Master\"","a371333c":"df_2020_category_ds = pd.concat([df_master_ds, df_novice_ds])\ndf_2020_category_ds['category_ds'].value_counts(normalize=True) * 100","53c0f278":"df_2020_count_ds = df_2020_category_ds['Q15'].fillna(0).replace(to_replace = \n                                                             [0,'20 or more years',\n                                                              '10-20 years','1-2 years',\n                                                              '5-10 years','4-5 years',\n                                                              'Under 1 year',\n                                                              'I do not use machine learning methods','NaN','2-3 years', '3-4 years'],\n                                                             value =['0','20+','10-20','1-2','5-10','4-5','1','0', '0', '2-3', '3-4'])\ndf_2020_count_ds = df_2020_count_ds.drop(df_2020_count_ds.index[0])\ndf_2020_category_ds['Q15'] = df_2020_count_ds\ndf_2020_category_ds.fillna(0)\ngroup = df_2020_category_ds.groupby(\"category_ds\")\nax = sns.countplot(df_2020_category_ds['Q15'],\n                   palette='BuPu',\n                   order = ['0', '1', '1-2', '2-3', '3-4', '4-5', '5-10', '10-20', '20+'],\n                   hue=df_2020_category_ds['category_ds'],\n                   dodge =False)\n#order = ['0', '1' '1-2', '2-3', '3-4' '4-5', '5-10', '10-20', '20+'],\nax.set(xlabel='Years of ML experience', ylabel='Count')\nax.set_title(\"Figure 5. Master vs Novice Machine learning\")\nplt.show()","e03aa7a8":"df_2020_count_pr_heat = pd.concat([df_2020_count_pr, df_2020_category[\"category\" ]], axis=1, sort=False)\ndf_2020_count_ds_heat = pd.concat([df_2020_count_ds, df_2020_category_ds[\"category_ds\" ]], axis=1, sort=False)\n\n\ndf_heatmap = pd.concat([df_2020_count_ds_heat, df_2020_count_pr_heat], axis=1)\n\ndf_heatmap_replace=(df_heatmap.replace(to_replace =  [0, '1','1-2', '2-3', '3-4', '4-5', '3-5', '5-10', '10-20', '20+'], \n                                       value = [0,        1,   2,    3,     3,     3,     3,    4,     5,    6]))\n\ndf_heatmap_replace=df_heatmap_replace.dropna()\ndf_heatmap_replace = df_heatmap_replace[[\"Q6\", \"Q15\"]] = df_heatmap_replace[[\"Q6\", \"Q15\"]].apply(pd.to_numeric)\ndf_heatmap_replace = df_heatmap_replace\ndf_heatmap_replace = df_heatmap_replace.sort_values('Q15')\ndf_heatmap_replace = df_heatmap_replace.reset_index().reset_index()\n\ndata_q15_category = df_heatmap[df_heatmap['category'] != 'ETC'].groupby(['category'])['Q15'].value_counts().unstack().sort_index()\nq15_concat = data_q15_category.transpose()\nq15_concat = pd.concat([data_q15_category.loc['Novice'], data_q15_category.loc['Master']], axis=1, sort=False)\nq15_concat['Master'] = q15_concat['Master'] .div(q15_concat['Master'] .sum(axis=0), axis=0).mul(100).round(3)\nq15_concat['Master'] = q15_concat['Master']*(-1)\nq15_concat['Novice'] = q15_concat['Novice'] .div(q15_concat['Novice'] .sum(axis=0), axis=0).mul(100).round(3)\nq15_concat = q15_concat.reindex(['0', '1', '1-2', '2-3','3-4','4-5', '5-10', '10-20', '20+'])\n","f4f24245":"ax = q15_concat.plot(kind = 'bar', \n                                         figsize=(10, 6), \n                                         stacked = True,\n                                         color = ['#810f7c','#e0ecf4'], \n                                        \n                                         edgecolor = \"grey\", \n                                         linewidth = 0.5)\nx_offset = -0.001\ny_offset_master = -2\ny_offset_novice = 2\n\nfor p in ax.patches:\n    b = p.get_bbox()\n    if b.y1 > 0:\n        val = \"{:.2f}\".format(b.y1 + b.y0)\n        ax.annotate(val, \n                    ((b.x0 + b.x1)\/2 + x_offset, \n                     b.y1 + y_offset_novice),               \n                    va = 'center', \n                    ha='center',\n                    fontweight='light', \n                    fontfamily='serif')\n    else:\n        val = \"{:.2f}\".format(b.y1*(-1) + b.y0)\n        ax.annotate(val, \n                    ((b.x0 + b.x1)\/2 + x_offset, \n                     b.y1 + y_offset_master),                \n                    va = 'center', \n                    ha='center',\n                    fontweight='light', \n                    fontfamily='serif')\n    \nax.set(xlabel='Years of ML experience', ylabel='Percentage (%)')\nax.legend()\nax.set_xticklabels(ax.get_xticklabels(),rotation=0)\nax.set_title(\"Figure 6. ML experience of Novice vs Master programmers\")\nplt.show()","efe2688d":"job_counts = pd.DataFrame(df_heatmap['Q6'].value_counts()).reset_index()\njob_counts.columns = ['Q6', 'count']\n\nq15 = df_heatmap[['Q6','Q15']]\n\n\nq15_summary = pd.DataFrame((q15.groupby('Q6')['Q15'].value_counts()))#.iloc[1:])\nq15_summary.columns = ['resp']\nq15_summary.reset_index(inplace=True)\n\n\nq15_summary = q15_summary.merge(job_counts, how='left', on='Q6')\nq15_summary['pos'] = ((q15_summary['resp']\/q15_summary['count'])*100).round(decimals=1)\n#q15_summary = q15_summary.drop(52)\n\n\nq15_piv = q15_summary.pivot('Q15', 'Q6', 'pos')\nq15_piv = q15_piv[['0','1', '1-2','3-5', '5-10', '10-20','20+']].copy()\nq15_piv = q15_piv.loc[[ '20+', '10-20', '5-10', '4-5', '3-4','2-3','1-2', '1', '0',], :]\nq15_piv = q15_piv.fillna(0.0)","7154d167":"def test_table_x():\n    data_table = pd.DataFrame({'categories':['Novice CS']*3 + ['Master CS']*4,\n                               'years':['0','1', '1-2','3-5', '5-10', '10-20','20+'],\n                               'test':[1,2,3,4,5,6,7],#,10,20,5,6,4,7,1],\n                               'test1':np.random.randint(0,10,7)\n                               })\n    return data_table\n\ndef test_table_y():\n    years = [ '20+', '10-20', '5-10', '4-5', '3-4','2-3','1-2', '1', '0',]\n    categories = ['Master ML',]*6 + ['Novice ML',]*3\n    tuples = list(zip(years, categories))\n    index = pd.MultiIndex.from_tuples(tuples, names=['years', 'Q15 ML'])\n    d = {i: [np.random.randint(0,50) for _ in range(9)] for i in range(0, 6)}\n    data_table = pd.DataFrame(d, index=index)\n    return data_table\n\n\ndef add_line_x(ax, xpos, ypos):\n    line = plt.Line2D([xpos, xpos], [ypos + .1, ypos],\n                      transform=ax.transAxes, color='grey')\n    line.set_clip_on(False)\n    ax.add_line(line)\n    \n    \ndef add_line(ax, xpos, ypos):\n    line = plt.Line2D([ypos, ypos+ .2], [xpos, xpos], color='grey', transform=ax.transAxes)\n    line.set_clip_on(False)\n    ax.add_line(line)\n    \n\n\ndef label_len(my_index,level):\n    labels = my_index.get_level_values(level)\n    return [(k, sum(1 for i in g)) for k,g in groupby(labels)]\n\n\ndef label_group_bar_table_y(ax, df):\n    xpos = -.2\n    scale = 1.\/df.index.size\n    for level in range(df.index.nlevels):\n        pos = df.index.size\n        for label, rpos in label_len(df.index,level):\n            add_line(ax, pos*scale, xpos)\n            pos -= rpos\n            lypos = (pos + .5 * rpos)*scale\n            ax.text(xpos+.1, lypos, label, ha='center', transform=ax.transAxes) \n        add_line(ax, pos*scale , xpos)\n        xpos -= .2\n    \n\ndef label_group_bar_table_x(ax, df):\n    ypos = -.1\n    scale = 1.\/df.index.size\n    for level in range(df.index.nlevels)[::-1]:\n        pos = 0\n        for label, rpos in label_len(df.index,level):\n            lxpos = (pos + .5 * rpos)*scale\n            ax.text(lxpos, ypos, label, ha='center', transform=ax.transAxes)\n            add_line_x(ax, pos*scale, ypos)\n            pos += rpos\n        add_line_x(ax, pos*scale , ypos)\n        ypos -= .1\n        \n        \ndf_x = test_table_x().groupby(['categories','years'], sort = False).sum()\ndf_y = test_table_y()\n\n\nfig = plt.figure(figsize = (10, 10))\nax = fig.add_subplot(111)\nsns.heatmap(q15_piv, \n            annot=True, \n            linewidths=.2, \n            cmap = 'BuPu', \n            cbar_kws={'shrink':1, 'label':'% responses for ML and CS experiences'}, \n            vmin = 0, \n            vmax = 100,\n            fmt='g')\nplt.xlabel(\"Programming experience\")\nplt.ylabel(\"ML experience\",rotation=90)\nplt.title(\"Figure 7. ML vs CS experience - 2020\", fontdict = {'fontsize':15}, pad=24)\n\n#Below 3 lines remove default labels\nlabels = ['' for item in ax.get_xticklabels()]\nax.set_xticklabels(labels)\nax.set_xlabel('')\nlabels = ['' for item in ax.get_yticklabels()]\nax.set_yticklabels(labels)\nax.set_ylabel('')\n\nlabel_group_bar_table_x(ax, df_x)\nlabel_group_bar_table_y(ax, df_y)\nfig.subplots_adjust(left=.1*df_y.index.nlevels)\n\n\nplt.show()","d9d4f5a6":"df_2019  = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\ndf_2019['Q15'] = df_2019['Q15'].replace(np.nan, 0)\ndf_2019['Q23'] = df_2019['Q23'].replace(np.nan, 0)\ndf_2019['Q15'] = df_2019['Q15'].fillna(0)\ndf_2019['Q23'] = df_2019['Q23'].fillna(0)\n\ndf_2019_novice1 = df_2019[(df_2019['Q15']=='1-2 years')]\ndf_2019_novice2 = df_2019[(df_2019['Q15']=='< 1 years')]\ndf_2019_novice3 = df_2019[(df_2019['Q15']=='I have never written code')]\ndf_2019_novice4 = df_2019[(df_2019['Q15']==0)]\n\ndf_2019_novice = pd.concat([df_2019_novice1, df_2019_novice2, df_2019_novice3, df_2019_novice4], axis=0, sort=False)\ndf_2019_novice['category'] = \"Novice\"\n\ndf_2019_master1 = df_2019[(df_2019['Q15']=='3-5 years')]\ndf_2019_master2 = df_2019[(df_2019['Q15']=='5-10 years')]\ndf_2019_master3 = df_2019[(df_2019['Q15']=='10-20 years')]\ndf_2019_master4 = df_2019[(df_2019['Q15']=='20+ years')]\n\ndf_2019_master = pd.concat([df_2019_master1, df_2019_master2, df_2019_master3, df_2019_master4], axis=0, sort=False)\ndf_2019_master['category'] = \"Master\"\n\n \ndf_2019_novice0 = df_2019[(df_2019['Q23']=='< 1 years')]\ndf_2019_novice1 = df_2019[(df_2019['Q23']=='1-2 years')]\n#df_novice2 = df_2019[(df_2019['Q23']=='I do not use machine learning methods')]\n#df_2019_novice3 = df_2019[(df_2019['Q23']=='0')]\ndf_2019_novice4 = df_2019[(df_2019['Q23']==0)]\n\ndf_2019_novice_ds = pd.concat([df_2019_novice0, df_2019_novice1, df_2019_novice4], axis=0, sort=False)\ndf_2019_novice_ds['category_ds'] = \"ML Novice\"\n\n\ndf_2019_master0 = df_2019[(df_2019['Q23']=='2-3 years')]\ndf_2019_master1 = df_2019[(df_2019['Q23']=='3-4 years')]\ndf_2019_master2 = df_2019[(df_2019['Q23']=='4-5 years')]\ndf_2019_master3 = df_2019[(df_2019['Q23']=='5-10 years')]\ndf_2019_master4 = df_2019[(df_2019['Q23']=='10-15 years')]\ndf_2019_master5 = df_2019[(df_2019['Q23']=='20+ years')]\n\ndf_2019_master_ds = pd.concat([df_2019_master0, df_2019_master1, df_2019_master2, df_2019_master3, df_2019_master4, df_2019_master5], axis=0, sort=False)\ndf_2019_master_ds['category_ds'] = \"ML Master\"\ndf_2019_pr = pd.concat([df_2019_novice,df_2019_master], axis=0, sort=False)\ndf_2019_ds = pd.concat([df_2019_novice_ds,df_2019_master_ds], axis=0, sort=False)\ndf_2019_count_pr = df_2019['Q15'].fillna(0).replace(to_replace =  [0, \n                                                                   '20+ years',\n                                                                   '10-20 years',\n                                                                   '1-2 years',\n                                                                   '5-10 years',\n                                                                   '3-5 years',\n                                                                   'I have never written code', \n                                                                   '< 1 years',\n                                                                   'NaN'], \n                                                                 value =['0','20+','10-20','1-2','5-10','3-5','0', '1', '0'])\ndf_2019_count_pr = df_2019_count_pr.drop(df_2019_count_pr.index[0])\n\ndf_2019_count_ds = df_2019['Q23'].fillna(0).replace(to_replace = \n                                                             [0,\n                                                              '20+ years',\n                                                              '10-15 years',\n                                                              '1-2 years',\n                                                              '5-10 years',\n                                                              '4-5 years',\n                                                              '< 1 years',\n                                                              'I do not use machine learning methods',\n                                                              'NaN',\n                                                              '2-3 years', \n                                                              '3-4 years'],\n                                                             value =['0','20+','10-15','1-2','5-10','4-5','1','0', '0', '2-3', '3-4'])\n\ndf_2019_count_ds = df_2019_count_ds.drop(df_2020_count_ds.index[0])\ndf_heatmap_2019 = pd.concat([df_2019_count_pr, df_2019_count_ds, \n                             df_2019_pr['category'], df_2019_ds['category_ds'], ], axis=1)\njob_counts_2019 = pd.DataFrame(df_heatmap_2019['Q15'].value_counts()).reset_index()\njob_counts_2019.columns = ['Q15', 'count']\n\nq23_2019 = df_heatmap_2019[['Q15','Q23']]\n\n\nq23_summary_2019 = pd.DataFrame((q23_2019.groupby('Q15')['Q23'].value_counts()))#.iloc[1:])\nq23_summary_2019.columns = ['resp']\nq23_summary_2019.reset_index(inplace=True)\n\n\nq23_summary_2019 = q23_summary_2019.merge(job_counts_2019, how='left', on='Q15')\nq23_summary_2019['pos'] = ((q23_summary_2019['resp']\/q23_summary_2019['count'])*100).round(decimals=1)\n#q15_summary = q15_summary.drop(52)\n\n\nq23_piv = q23_summary_2019.pivot('Q23', 'Q15', 'pos')\n\n###\nq23_piv = q23_piv[['0','1', '1-2','3-5', '5-10', '10-20','20+']].copy()\nq23_piv = q23_piv.loc[['20+','10-15','5-10','4-5', '3-4', '2-3', '1-2', '1', '0'], :]\nq23_piv = q23_piv.fillna(0)","fb80cab1":"df_2018  = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv')\ndf_2018['Q24'] = df_2018['Q24'].replace(np.nan, 0)\ndf_2018['Q25'] = df_2018['Q25'].replace(np.nan, 0)\ndf_2018['Q24'] = df_2018['Q24'].fillna(0)\ndf_2018['Q25'] = df_2018['Q25'].fillna(0)\n\ndf_2018_novice1 = df_2018[(df_2018['Q24']=='1-2 years')]\ndf_2018_novice2 = df_2018[(df_2018['Q24']=='< 1 year')]\ndf_2018_novice3 = df_2018[(df_2018['Q24']=='I have never written code but I want to learn')]\ndf_2018_novice4 = df_2018[(df_2018['Q24']==-0)]\ndf_2018_novice5 = df_2018[(df_2018['Q24']=='I have never written code and I do not want to learn')]\n\ndf_2018_novice = pd.concat([df_2018_novice1, df_2018_novice2, df_2018_novice3, df_2018_novice4, df_2018_novice5], axis=0, sort=False)\ndf_2018_novice['category'] = \"Novice\"\n\ndf_2018_master1 = df_2018[(df_2018['Q24']=='3-5 years')]\ndf_2018_master2 = df_2018[(df_2018['Q24']=='5-10 years')]\ndf_2018_master3 = df_2018[(df_2018['Q24']=='10-20 years')]\ndf_2018_master4 = df_2018[(df_2018['Q24']=='20+ years')]\ndf_2018_master5 = df_2018[(df_2018['Q24']=='20-30 years')]\ndf_2018_master6 = df_2018[(df_2018['Q24']=='30-40 years')]\ndf_2018_master7 = df_2018[(df_2018['Q24']=='40+ years')]\n\ndf_2018_master = pd.concat([df_2018_master1, df_2018_master2, df_2018_master3, \n                            df_2018_master4, df_2018_master5, df_2018_master6, df_2018_master7], axis=0, sort=False)\ndf_2018_master['category'] = \"Master\"\n\n \ndf_2018_novice0 = df_2018[(df_2018['Q25']=='< 1 year')]\ndf_2018_novice1 = df_2018[(df_2018['Q25']=='1-2 years')]\ndf_2018_novice2 = df_2018[(df_2018['Q25']=='I have never studied machine learning but plan to learn in the future')]\ndf_2018_novice3 = df_2018[(df_2018['Q25']=='I have never studied machine learning and I do not plan to')]\ndf_2018_novice4 = df_2018[(df_2018['Q25']==0)]\ndf_2018_novice5 = df_2018[(df_2018['Q25']=='0')]\n\ndf_2018_novice_ds = pd.concat([df_2018_novice0, df_2018_novice1, df_2018_novice2, df_2018_novice3, df_2018_novice4, df_2018_novice5], axis=0, sort=False)\ndf_2018_novice_ds['category_ds'] = \"ML Novice\"\n\n\ndf_2018_master0 = df_2018[(df_2018['Q25']=='2-3 years')]\ndf_2018_master1 = df_2018[(df_2018['Q25']=='3-4 years')]\ndf_2018_master2 = df_2018[(df_2018['Q25']=='4-5 years')]\ndf_2018_master3 = df_2018[(df_2018['Q25']=='5-10 years')]\ndf_2018_master4 = df_2018[(df_2018['Q25']=='10-15 years')]\ndf_2018_master5 = df_2018[(df_2018['Q25']=='20+ years')]\n\ndf_2018_master_ds = pd.concat([df_2018_master0, df_2018_master1, df_2018_master2, df_2018_master3, df_2018_master4, df_2018_master5], axis=0, sort=False)\ndf_2018_master_ds['category_ds'] = \"ML Master\"\n\ndf_2018_pr = pd.concat([df_2018_novice,df_2018_master], axis=0, sort=False)\ndf_2018_ds = pd.concat([df_2018_novice_ds,df_2018_master_ds], axis=0, sort=False)\n\ndf_2018_count_pr = df_2018['Q24'].fillna(0).replace(to_replace =  [0, \n                                                                   '40+ years',\n                                                                   '10-20 years',\n                                                                   '1-2 years',\n                                                                   '5-10 years',\n                                                                   '3-5 years',\n                                                                   '20-30 years',\n                                                                   '30-40 years',\n                                                                   'I have never written code but I want to learn', \n                                                                   'I have never written code and I do not want to learn',\n                                                                   '< 1 year',\n                                                                   ], \n                                                                 value =['0','40+','10-20','1-2','5-10','3-5','20-30', '30-40',\n                                                                         '0','0', '1'])\ndf_2018_count_pr = df_2018_count_pr.drop(df_2019_count_pr.index[0])\n\ndf_2018_count_ds = df_2018['Q25'].fillna(0).replace(to_replace = \n                                                             [0,\n                                                              '20+ years',\n                                                              '10-15 years',\n                                                              '1-2 years',\n                                                              '5-10 years',\n                                                              '4-5 years',\n                                                              '< 1 year',\n                                                              'I have never studied machine learning but plan to learn in the future',\n                                                              'I have never studied machine learning and I do not plan to',\n\n                                                              '2-3 years', \n                                                              '3-4 years'],\n                                                             value =['0','20+','10-15','1-2','5-10','4-5','1',\n                                                                     '0',  '0', '2-3', '3-4'])\n\ndf_2018_count_ds = df_2018_count_ds.drop(df_2020_count_ds.index[0])\n\ndf_heatmap_2018 = pd.concat([df_2018_count_pr, df_2018_count_ds, \n                             df_2018_pr['category'], df_2018_ds['category_ds'], ], axis=1)\njob_counts_2018 = pd.DataFrame(df_heatmap_2018['Q24'].value_counts()).reset_index()\njob_counts_2018.columns = ['Q24', 'count']\n\nq25_2018 = df_heatmap_2018[['Q24','Q25']]\n\nq25_2018 = q25_2018.fillna(0)\nq25_summary_2018 = pd.DataFrame((q25_2018.groupby('Q24')['Q25'].value_counts()))#.iloc[1:])\nq25_summary_2018.columns = ['resp']\nq25_summary_2018.reset_index(inplace=True)\n\n\nq25_summary_2018 = q25_summary_2018.merge(job_counts_2018, how='left', on='Q24')\nq25_summary_2018['pos'] = ((q25_summary_2018['resp']\/q25_summary_2018['count'])*100).round(decimals=1)\n#q15_summary = q15_summary.drop(52)\n\n\nq25_piv = q25_summary_2018.pivot('Q25', 'Q24', 'pos')\n\n\nq25_piv = q25_piv[['0','1', '1-2','3-5', '5-10', '10-20', '20-30', '30-40', '40+']].copy()\nq25_piv = q25_piv.loc[['20+','10-15','5-10','4-5', '3-4', '2-3', '1-2', '1', '0'], :]\nq25_piv = q25_piv.fillna(0)","fa25f412":"def test_table_2018_x():\n    data_table = pd.DataFrame({'categories':['Novice CS']*3 + ['Master CS']*6,\n                               'years':['0','1', '1-2','3-5', '5-10', '10-20', '20-30', '30-40', '40+'],\n                               'test':[1,2,3,4,5,6,7,8,9],#,10,20,5,6,4,7,1],\n                               'test1':np.random.randint(0,10,9)\n                               })\n    return data_table\n\ndef test_table_2018_y():\n    years = ['20+','10-15','5-10','4-5', '3-4', '2-3', '1-2', '1', '0']\n    categories = ['Master ML',]*6 + ['Novice ML',]*3\n    tuples = list(zip(years, categories))\n    index = pd.MultiIndex.from_tuples(tuples, names=['years', 'Q15 ML'])\n    d = {i: [np.random.randint(0,50) for _ in range(9)] for i in range(0, 6)}\n    data_table = pd.DataFrame(d, index=index)\n    return data_table\n      \n        \ndf_x_2018 = test_table_2018_x().groupby(['categories','years'], sort = False).sum()\ndf_y_2018 = test_table_2018_y()","0ed2d0be":"fig, axes = plt.subplots(1,3,figsize=(25,8))\nfig.suptitle(\"Figure 8. Years of ML vs CS experience\", fontsize=20)\n\n\nsns.heatmap(q15_piv, \n            annot=True, \n            linewidths=.2, \n            cmap = 'BuPu', \n            cbar=False,\n            fmt='g',\n            ax=axes[0])\naxes[0].set_title('8a. 2020 Kaggle Survey', fontsize=20)\nlabels = ['' for item in axes[0].get_xticklabels()]\naxes[0].set_xticklabels(labels)\naxes[0].set_xlabel('')\nlabels = ['' for item in axes[0].get_yticklabels()]\naxes[0].set_yticklabels(labels)\naxes[0].set_ylabel('')\nlabel_group_bar_table_x(axes[0], df_x)\nlabel_group_bar_table_y(axes[0], df_y)\nfig.subplots_adjust(left=.1*df_y.index.nlevels)\n\nsns.heatmap(q23_piv, \n            annot=True, \n            linewidths=.2, \n            cmap = 'BuPu', \n           cbar=False,\n            fmt='g',\n           ax=axes[1])\naxes[1].set_title('8b. 2019 Kaggle Survey', fontsize=20)\naxes[1].set_ylabel('')\nlabels = ['' for item in axes[1].get_xticklabels()]\naxes[1].set_xticklabels(labels)\naxes[1].set_xlabel('')\nlabel_group_bar_table_x(axes[1], df_x)\nfig.subplots_adjust(left=.1*df_y.index.nlevels)\n\n\nsns.heatmap(q25_piv, \n            annot=True, \n            linewidths=.2, \n            cmap = 'BuPu', \n            cbar=False,\n            fmt='g',\n           ax=axes[2])\naxes[2].set_title('8c. 2018 Kaggle Survey', fontsize=20)\naxes[2].set_ylabel(' ')\nlabels = ['' for item in axes[2].get_xticklabels()]\naxes[2].set_xticklabels(labels)\naxes[2].set_xlabel('')\nlabel_group_bar_table_x(axes[2], df_x_2018)\nfig.subplots_adjust(left=.1*df_y_2018.index.nlevels)\n\nplt.show()\n","5975bf09":"In the last section of this notebook, I want to analyze the ML vs CS experience of Kaggle survey respondents over the last 3 years.\n\nFrom the **2019 Kaggle Survey**, I have used Q15 and Q23 to define the Novice and Master categories, whereas form the **2018 Kaggle Survey**, I have used Q24 and Q25.","85487069":"As we see below, this actually gives us a close to 50-50% split.","09bfec01":"As previously discussed in Figure 4, 2040 respondents have 0 coding experience. It is interesting to see, that all **Novice CS** with 0 programing experience, are actually 100% **Novice ML** with 0 Machine lerning experience. \n\nIt is interesting to see in Figure 7, that 90-100% of **Novice CS** are also **Novice ML**. Intuitively I would have said the same thing, but it is great to see numbers acutally matching the intuitive guess.\n\nRespondents with 3-5 years coding experience, in my analysis are **Master CS**, but even in this category ~75% of the respondents are **Novice ML**. ","0492eab0":"While it was possible for a Novice programmer to get a Data Analyst and Data scientist jobs, ML related tasks are much more heavily based on coding knowlegde. As shown in Figure 6, Novice programmers usually have 0 to 1-2 years ML experience. In other words, Novice programmers are usually Novice Machine learners as well. It goes hand in hand and it seems logical to be so. I also fall into the Novice programmer, Novice machine learner category, together with about 50% of the survey respondents.\n\nCan we observe anything else from Figure 6? Well yes! The plot for Master programmers, is skewed to the right, it is not a normal gaussian distibution, but it is much less skewed than the one for Novice coders. About 56% of Master coders are Novice Machine learners. As I wrote earlier, this can be probably explained by the nowelty of the field. While experimented programers are just staring to reorient their area of interest, it is also worth mentioning, that a Master programmer, will grasp the ML knowledge and algorithms much faster than someone who is new to both CS and ML.","3ab0876f":"# Comparing the Master vs Novice evolution over the past few years","973327fa":"We can imediately see, that while the same split definition granted us a close to 50-50% Novice vs Master programmers, with machine learning experience this split yelds us a **77% ML Novice** vs a **22% ML Master**. ","d1f07807":"In this notebook I really wanted to analyze if my intuiton and the approach of the majority wanting to break into the data world is backed up by the data from this survey. Is coding experience a must before getting into the data world? Hence, **What comes first? Programmer or data professional**. \n\nShort answer: yes, coding is strongly advised :). \n\nLonger answer: As it was expected, minimal coding experience in necessary to get and be successful for the long run in a data related job. As a conclusion there are a few take-home messages I would like to highlight.\n* There are some jobs such as **data analyst**, that can be obtained with minimal to no coding experience.\n* There are many **students** on Kaggle. Although as argued in Figure 2, Studentship is not a job title, I have a huge respect for students actively learning on Kaggle. What a beautiful way to spend the free time! I wish I was this inspired back in the days :).\n* In the 2020 Survey, the **Novice** vs **Master** programming experience definition, provided about **50-50%** data split, whereas the same definition related to ML experience provided a much more imbalaced split **77% ML Novice** vs a **22% ML Master**. It is not surprising to see only a hanfull of very experienced ML experts, as the filed is growing and developing in front of our eyes\n* In Figure 7 and 8 it was highlighted that coding experience is absolutely necessary for ML related tasks and jobs. Respondents with **0 coding experience**, have **0 ML experience** as well.\n\n*Personal conclusion:* I have always been a more analytical person, but learning to code this year I feel like I have aquired some extra super-powers. Learning to code really re-structures your brain to think more strategically and be more problem solving oriented. It is not easy at all, but it is worth it. ","14f4cecd":"As we see in Figure 2, *Novice programers* are mostly **Students**. This is the most recurrent answer (37.5%) among the Novice programmers to question 5. It is also arguable, that **Student** is not really a job title. In the survey design I can understand, how Students are recorded under this category, because persons who are still undergoing the educational system, are not unemployed either.\n\nThe difference in percentage is quite big between the first and second most recurring answer (11.6%): **Currently not employed**.\n\nWe can see that Data professional job titles start to appear already in the 4th and 5th category: **Data analyst, Data scientist** respectively. \n\nFor *Master programers*, I can see at a first glance, that data is more evenly disperced, the diference between the ranks is not too abrupt. Also, surprise surprise, the first rank job title, with 18.7% is **Data scientist**, closely followed by **Student**, and **Software engineer**.","33cecb37":"![Blue%20and%20Yellow%20Modern%20Artisan%20Parties%20and%20Celebrations%20X-Frame%20Banner%281%29.jpg](attachment:Blue%20and%20Yellow%20Modern%20Artisan%20Parties%20and%20Celebrations%20X-Frame%20Banner%281%29.jpg)","8c326102":"In Figure 3 and Figure 4, we can see that with minimal to 0 coding experience there are some kaggle survey respondets who managed to get a Data professional job! Good for them! Well done fellow kagglers!\nIf we check the count#, about **100 users with 0 coding experience** got *Data analyst* job, whereas **900 users with 1-2 coding experience** got *Data analyst* job.\n\nBear in mind, that *Data analysts* are not always required computer science knowledge and experience, but we can also see, that about the same number of respondents with 0 to 1-2 years coding experience have Data scientist jobs. *Data science* jobs usually requires SQL, python and\/or R programming skills, so it is great, to see talented peaople that are able to get into the field so early on.\n\nIn **Question 15**  respondents are asked about the ML experience, so let's see below, how this relates to the coding experience.","8670681e":"First we can see, there are 2 specific survey questions of interest to analyze my premise.\n\n**Q6 - For how many years have you been writing code**\n\nand\n\n**Q15 - For how many years have you used machine learning methods?**\n\nI know, that not all data professionals use machine learning methods, but for the purpose of this analysis I could not find other, more suitable question.","6e96672f":"Lastly, in Figure 8, we can see a comparison between ML vs CS experience across the years. In 2018 Kaggle Survey, the years of codig (CS) experience is much more divided, and it goes back to upto 40+ years experience, whereas in 2019 and 2020, the upper limit is 20+ years experience.\n\nIn Figure 8b and 8c, in the 2019 and 2018 Kaggle surveys, it seems that a few more ML Masters have responded the survey. There seems to be a cluster around respondents with 5-10, 10-20 and 20+ years ML experience, but this cluster is missing in the Figure 8a (2020 Survey). In the 2020 survey, the ML experience is more evenly dispersed for respondents with 5-10, 10-20 and 20+ coding experience. ","e041efed":"## <font color='grey'>Profesional experience<\/font> ","4c0dd0db":"# <font color='grey'>Investigation of programing experience<\/font> ","b0d34804":"The disproportion between ML Master vs ML Novice can be observed in Figure 5 as well.\n\nIt is also worth noting, that we have  about 5000+ fewer **ML Master** respondents, compared to **Master programmers**. This can be probably explained with the novelty of the Machine learning and Data sciences. As these fields just start to develop under our eyes, it is not surprising we rarely see ML experts with 20+ years experience. Not to mention, that \"Data science\" was not even in the vocabulary 10-20+ years ago.","00328484":"# <font color='darkgrey'>Introduction<\/font> \n\n\nDear fellow Kagglers, please find below my very first Kaggle notebook. \n\nAs so many others this year, I have also started to work from home in March. Although this year has been messed up on many levels, it did gave me back some time that would have been wasted otherwise on commuting. \n\nTaking advantage of the extra time in my hands, I have started to get into a long-time aspiration: learn python and taste the sweet taste of data science. I have started my journey this year by learning python basics and it seems, that generally people tend to first learn a programming language and then dive into the data sciences and become some sort of data professional.\n\nWith this notebook, I wish to analyze if this is the case of the survey participants as well? Do participants tend to be data scientist before programmers, or the other way around?\n\nWe have 20036 survey responses and 35+ questions. Responses to multiple choice questions (only a single choice can be selected) were recorded in individual columns, so this is why we have 355 columns in total.","37101193":"If we further dig into the Novice programer category we see that 7818 Novice programers have 1-2 years coding experience, while 2040 of survey respondents have no coding experience. ","1ad0bfd8":"1. Kaggle survey dataset - [2018](https:\/\/www.kaggle.com\/kaggle\/kaggle-survey-2018)\n2. Kaggle survey dataset - [2019](https:\/\/www.kaggle.com\/c\/kaggle-survey-2019)\n3. From StackOverflow, I have used [darthbith's](https:\/\/stackoverflow.com\/questions\/19184484\/how-to-add-group-labels-for-bar-charts-in-matplotlib\/39502106#39502106) code with some modifications to implement the Novice and Master classification in Figures 7 ans 8. ","2bb30e55":"In my analysis, I have split the coders into \"**Novice**\" and \"**Masters**\", based on the responses given to Q6. \n\nProgrammers with:\n* **0-2 years** programming experience were **Novice**, \n* whereas those with **3-20+ years** experience were **Masters**.","a2abb7dd":"## <font color='grey'>Conclusions<\/font> ","6ce9975b":"# <font color='grey'>Investigation of Machine learning (ML) experience<\/font> \n\nSimilarly to the categorization of coding experience, let's define **Novice Machine learners** and **Master Machine learners**\n\nRespondets with:\n* **0-2 years** ML experience were **Novice**, \n* whereas those with **3-20+ years** ML experience were **Masters**.","5ceb33e6":"Let's see how the professional career changes with coding experience","6903a021":"It is obvious from the above Figure, that most of survey respondents have at least 1 year experience in coding.","e6acee03":"## <font color='grey'>References<\/font> "}}