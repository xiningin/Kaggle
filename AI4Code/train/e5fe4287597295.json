{"cell_type":{"8eb89ad6":"code","52ffcb01":"code","9ca364cf":"code","8f3c9472":"code","de360615":"code","62fc161c":"code","50a54ae5":"code","d0e0e6ee":"code","e82f8b4d":"code","acd915e8":"code","fcedd801":"code","d5b7557d":"code","25dc680d":"code","97517e2a":"code","e520fc66":"code","5420ea3e":"code","5f542fb4":"code","7af95550":"code","49387e39":"code","a652e15f":"code","c4262005":"code","d9afc025":"code","7d867ee3":"code","1a7a11fc":"code","d732b77a":"code","0deff738":"code","fde7fd42":"code","07e7d5a1":"code","d814339b":"markdown","9f8982b7":"markdown","1f79aa5f":"markdown","53cd6bab":"markdown","889c2811":"markdown","92647285":"markdown","135a8b02":"markdown","9ceb4dbc":"markdown","06101502":"markdown","ede51f2d":"markdown","94d77563":"markdown","10fa36fd":"markdown","77af470f":"markdown","b019d161":"markdown","a8379b6b":"markdown","e0199d6f":"markdown","ed0e8577":"markdown","3635acf5":"markdown","34bbf987":"markdown"},"source":{"8eb89ad6":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nimport torch.nn.functional as F\nimport os\nimport gc\nimport cv2\nimport matplotlib.pyplot as plt\nfrom torchvision import transforms,datasets,models\nfrom torch.utils.data import Dataset,DataLoader\nfrom sklearn.model_selection import GroupKFold\nfrom sklearn.metrics import accuracy_score,roc_auc_score\nfrom sklearn.preprocessing import StandardScaler\nimport time\nimport datetime\nfrom PIL import Image\nimport warnings\nfrom tqdm.notebook import tqdm\ntqdm.pandas()\nimport random","52ffcb01":"%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)","9ca364cf":"train_image_path = '..\/input\/plant-pathology-2021-fgvc8\/train_images'\ntest_image_path = '..\/input\/plant-pathology-2021-fgvc8\/test_images'\ntrain_df_path = '..\/input\/plant-pathology-2021-fgvc8\/train.csv'\ntest_df_path = '..\/input\/plant-pathology-2021-fgvc8\/sample_submission.csv'","8f3c9472":"train_df = pd.read_csv(train_df_path)\nclasses = train_df.labels.unique()\nx=train_df.labels.value_counts()\ntrain_df.head(10)","de360615":"test_df = pd.read_csv(test_df_path)\ntest_df.head()","62fc161c":"train_df['labels'].value_counts()","50a54ae5":"classes","d0e0e6ee":"plt.figure(figsize=(20,12))\nlabels = sns.barplot(x.index,x)\nfor item in labels.get_xticklabels():\n    item.set_rotation(45)\nplt.gca().set_ylabel('samples')","e82f8b4d":"def load_image(image_id, image_path=train_image_path):\n    file_path = image_id\n    image = cv2.imread(os.path.join(image_path, file_path))\n    return cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\ntrain_images = train_df[\"image\"][:200].progress_apply(load_image)","acd915e8":"red_values = [np.mean(train_images[idx][:, :, 0]) for idx in range(len(train_images))]\ngreen_values = [np.mean(train_images[idx][:, :, 1]) for idx in range(len(train_images))]\nblue_values = [np.mean(train_images[idx][:, :, 2]) for idx in range(len(train_images))]\nvalues = [np.mean(train_images[idx]) for idx in range(len(train_images))]","fcedd801":"group_labels = ['RGB Values']\ncolors = ['magenta']\nfig = ff.create_distplot([values], group_labels, bin_size=.5,\n                         curve_type='normal', # override default 'kde'\n                         colors=colors)\nfig.update_layout(\n    title = 'Distribution of Channel Values',\n    font_family=\"Courier New\",\n    font_color=\"magenta\",\n    title_font_family=\"Times New Roman\",\n    title_font_color=\"magenta\",\n    legend_title_font_color=\"magenta\"\n)\nfig.show()","d5b7557d":"group_labels = ['Red Values']\ncolors = ['red']\nfig = ff.create_distplot([red_values], group_labels, bin_size=.5,\n                         curve_type='normal', # override default 'kde'\n                         colors=colors)\nfig.update_layout(\n    title = 'Distribution of Red Channel Values',\n    font_family=\"Courier New\",\n    font_color=\"red\",\n    title_font_family=\"Times New Roman\",\n    title_font_color=\"red\",\n    legend_title_font_color=\"red\"\n)\nfig.show()","25dc680d":"group_labels = ['Green Values']\ncolors = ['green']\nfig = ff.create_distplot([green_values], group_labels, bin_size=.5,\n                         curve_type='normal', # override default 'kde'\n                         colors=colors)\nfig.update_layout(\n    title = 'Distribution of Greeb Channel Values',\n    font_family=\"Courier New\",\n    font_color=\"green\",\n    title_font_family=\"Times New Roman\",\n    title_font_color=\"green\",\n    legend_title_font_color=\"green\"\n)\nfig.show()","97517e2a":"group_labels = ['Blue Values']\ncolors = ['blue']\nfig = ff.create_distplot([blue_values], group_labels, bin_size=.5,\n                         curve_type='normal', # override default 'kde'\n                         colors=colors)\nfig.update_layout(\n    title = 'Distribution of Blue Channel Values',\n    font_family=\"Courier New\",\n    font_color=\"blue\",\n    title_font_family=\"Times New Roman\",\n    title_font_color=\"blue\",\n    legend_title_font_color=\"blue\"\n)\nfig.show()","e520fc66":"group_labels = ['Red Values', 'Green Values', 'Blue Values']\ncolors = ['red', 'green', 'blue']\nfig = ff.create_distplot([red_values, green_values, blue_values], group_labels, bin_size=.5,\n                         curve_type='normal', # override default 'kde'\n                         colors=colors)\nfig.update_layout(\n    title = 'Combined Distribution of RGB Channel Values',\n    font_family=\"Courier New\",\n    font_color=\"black\",\n    title_font_family=\"Times New Roman\",\n    title_font_color=\"black\",\n    legend_title_font_color=\"black\"\n)\nfig.show()","5420ea3e":"def visualize_leaves(condition, is_cond=True):\n    if not is_cond:\n        cols, rows = 3, min([3, len(train_images)\/\/3])\n        fig, ax = plt.subplots(nrows=rows, ncols=cols, figsize=(30, rows*20\/3))\n        for col in range(cols):\n            for row in range(rows):\n                ax[row, col].imshow(train_images.loc[train_images.index[-row*3-col-1]])\n        return None\n        \n    positions = list(train_df[train_df['labels']== condition].index)   \n        \n    images = train_df.image.loc[positions]\n    cols, rows = 3, min([3, len(images)\/\/3])\n    \n    fig, ax = plt.subplots(nrows=rows, ncols=cols, figsize=(30, rows*20\/3))\n    for col in range(cols):\n        for row in range(rows):\n            img = cv2.imread(os.path.join(train_image_path, images.loc[images.index[row*3+col]]))\n            img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n            ax[row, col].imshow(img)\n    plt.title(condition)\n    plt.show()","5f542fb4":"visualize_leaves(condition=classes[0])","7af95550":"visualize_leaves(condition=classes[1])","49387e39":"visualize_leaves(condition=classes[2])","a652e15f":"visualize_leaves(condition=classes[3])","c4262005":"visualize_leaves(condition=classes[4])","d9afc025":"visualize_leaves(condition=classes[5])","7d867ee3":"visualize_leaves(condition=classes[6])","1a7a11fc":"visualize_leaves(condition=classes[7])","d732b77a":"visualize_leaves(condition=classes[8])","0deff738":"visualize_leaves(condition=classes[9])","fde7fd42":"visualize_leaves(condition=classes[10])","07e7d5a1":"visualize_leaves(condition=classes[11])","d814339b":"### Scab Frog-Eye-Leaf-Spot Complex","9f8982b7":"## Visualizing Leaves","1f79aa5f":"In total there are 12 types of disease in apple trees as compared to the 2020 dataset, where only 4 types were given. This dataset is skewed as the **scab** disease count the most number of images count to 4826 and the least count of **Powdery Mildew Complex**(87).  \nSuggestion: Use **Stratified K-Fold** to divide the dataset in n folds  \nLink: [Stratified K-Fold](https:\/\/towardsdatascience.com\/stratified-k-fold-what-it-is-how-to-use-it-cf3d107d3ea2)","53cd6bab":"# Plant Pathology 2021 \ud83c\udf43\ud83c\udf43 EDA \ud83d\udcca\ud83d\udcca\n![](https:\/\/s3.eu-west-2.amazonaws.com\/growinginteractive\/blog\/apple-spartan-2x.jpg)","889c2811":"### Powdery Mildew","92647285":"# Do upvote the notebook, if you find it usefull.","135a8b02":"### Scab","9ceb4dbc":"### Rust Frog-Eyed-Leaf-Spot","06101502":"### Frog-Eyed-Leaf-Spot Complex","ede51f2d":"### Frog-Eyed-Leaf-Spot","94d77563":"### Powdery Mildew Complex","10fa36fd":"### Healthy Leaves","77af470f":"### Complex","b019d161":"#### Test data frame","a8379b6b":"### Rust Complex","e0199d6f":"### Rust","ed0e8577":"#### Train data frame","3635acf5":"### Test and Train data frame ","34bbf987":"### Scab Frog-Eyed-Leaf-Spot"}}