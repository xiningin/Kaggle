{"cell_type":{"bde4cc40":"code","431ae683":"code","b74678cb":"code","585651a1":"code","d3b356e3":"code","3051e78b":"markdown"},"source":{"bde4cc40":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/ieee-fraud-detection'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","431ae683":"# General imports\nimport os, sys, gc, warnings, random\nimport numpy as np\nimport pandas as pd\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split, KFold\nfrom sklearn.preprocessing import LabelEncoder\nfrom tqdm import tqdm\nwarnings.filterwarnings('ignore')","b74678cb":"# load data\ntrain_transaction = pd.read_csv(\"\/kaggle\/input\/ieee-fraud-detection\/train_transaction.csv\")\ntrain_identity =  pd.read_csv(\"\/kaggle\/input\/ieee-fraud-detection\/train_identity.csv\")\n\ntest_identity =  pd.read_csv(\"\/kaggle\/input\/ieee-fraud-detection\/test_identity.csv\")\ntest_transaction =  pd.read_csv(\"\/kaggle\/input\/ieee-fraud-detection\/test_transaction.csv\")","585651a1":"# add a new feature to represent one transaction has identity or not\ntrain_transaction[\"has_identity\"] = np.where(train_transaction[\"TransactionID\"].isin(train_identity[\"TransactionID\"].unique()),1,0)\ntest_transaction[\"has_identity\"] = np.where(test_transaction[\"TransactionID\"].isin(test_identity[\"TransactionID\"].unique()),1,0)","d3b356e3":"train_transaction.groupby([\"has_identity\",\"isFraud\"]).count()[\"TransactionID\"].rename(\"freq\").reset_index()","3051e78b":"I read many notebooks about this competition, why no one use a explicit feature to represent one transaction has a user identity or not? One transaction has a user identity is obviously to be frauded than those hasn't.\nAfter we merged the transaction and the identity data, these infomation also has been contained in new data? If I insist on adding this new feature, some bad things will happen?"}}