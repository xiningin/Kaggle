{"cell_type":{"f50919c5":"code","182ec03e":"code","94ea8e6b":"code","24c6f1fd":"code","86b7d827":"code","9b3cb763":"code","73e0c112":"code","d427b2df":"code","262ead34":"code","0a69302f":"code","1eae4fe5":"code","39384d06":"code","202897ca":"code","7e3b4d82":"code","660c9f65":"code","4d220d53":"code","ebdb04be":"code","9740795d":"code","cf6bc7b9":"code","0f0559bd":"code","fe6a30b6":"code","aff1bd3b":"code","82445183":"code","0be12315":"code","48df40b6":"code","60f0ce05":"code","2b4ef5e7":"code","3f6e35b6":"code","5a5d4a34":"code","19366c02":"code","6203f2fb":"code","c8c65312":"code","b2b6e0cd":"code","be93cde4":"code","d07e8daf":"code","7eafdc75":"code","179c1cea":"code","881ff54d":"code","99ca1ed4":"code","768e5f9f":"code","e303124d":"code","1480defc":"code","04dab395":"code","8ae4bffb":"code","45358a30":"code","5d183f3e":"code","44c90bdd":"code","88c16374":"code","2bca8780":"code","384d8e26":"code","925339d7":"code","ec1dd803":"code","2e52fa4a":"code","241a9c6d":"code","d0512ad8":"code","23b0bee0":"code","8ffdb9f9":"markdown"},"source":{"f50919c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n#1 Kerakli kutubxonalarni chaqirib olaman\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport datetime as dt\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","182ec03e":"#2 Asosiy datasetni df o'zgaruvchisiga yuklab olaman\ndf = pd.read_csv(\"..\/input\/supermarketdataset\/esas_mehsullar.csv\", index_col=0)","94ea8e6b":"#3 df ni ko'rib olaman\ndf","24c6f1fd":"#4 Ba'zi bir ustunlarni tashlab yuboraman\ndf = df.drop(['satish_kodu', 'mehsul_kodu', 'endirim_kompaniya', 'magaza_lat', 'magaza_long'], axis=1)","86b7d827":"df","9b3cb763":"#5 df ni ichida NaN qiymatlar bor yoki yo'qligini tekshirib olaman.\ndf.isnull().sum()","73e0c112":"#6 Barcha mavjud NaN qiymatlarni tashlab yuboraman\ndf = df.dropna()","d427b2df":"#7 Yana tekshirib ko'raman. Endi hech qanday NaN qiymatlar mavjud emas\ndf.isnull().sum()","262ead34":"#8 df ni qator va ustunlar sonini ko'rib olaman \ndf.shape","0a69302f":"#9 df ni ustunlari qaysi ma'lumot turiga mansub ekanligini tekshirib olaman\ndf.info()","1eae4fe5":"#10 df ning barcha ustunlarini o'zbek tiliga o'girib olaman\ncolumns = ['mahsulot_nomi', 'mahsulot_turi', 'mahsulot_narhi', 'sotilgan_vaqti', 'bonus_karta', 'market_nomi']","39384d06":"df.columns = columns","202897ca":"#11 Hammasi joyidami? \ndf\n#hammasi joyida!","7e3b4d82":"df['mahsulot_turi'].unique()","660c9f65":"#12 Mahsulot turi ustunidagi ma'lumotlar chapdan va o'ngdan probel bor ekan. Buni men to'g'rilab olaman\ndf['mahsulot_turi'] = df['mahsulot_turi'].map(lambda x: x.strip())","4d220d53":"#13 Barcha mahsulot turlarini bilmoqchiman\ndf['mahsulot_turi'].unique()","ebdb04be":"#14 Bu yerda 1 degan mahsulot turi mavjud ekan, shu sababli ularni tashlab yuboraman\ndf.drop(df.index[df['mahsulot_turi'] == '1'], inplace=True)","9740795d":"df['mahsulot_turi'].unique()","cf6bc7b9":"#15 Bu yerda barcha mahsulot turlarining nomlarini o'zbek tiliga o'girib olaman, ya'ni lug'at shakliga keltirib olaman\ndict = {'M\u0259i\u015f\u0259t m\u0259hsullar\u0131': \"Maishiy buyumlar\", 'Qab-qacaq':\"Idish-tovoq\", 'Meyv\u0259 \u015eir\u0259l\u0259ri':\"Mevali sharbatlar\", \n        'Kompotlar': \"Kompotlar\", 'Tur\u015fular': \"Tuzlamalar\", 'Kofe, kakao v\u0259 s.': \"Kofe, kakao va h.k\", \n        '\u015eirniyyat': \"Shirinliklar\", '\u015e\u0259rablar': \"Vinolar\", 'Ya\u011flar': \"Yog'lar\", 'Quru meyv\u0259 paketli': \"Quritilgan mevalar to'plami\", \n        'Ayaqqab\u0131 l\u0259vazimatlar\u0131': \"Poyafzal aksessuarlari\", 'Yuyucu, t\u0259mizl\u0259yicil\u0259r': \"Yuvish vositalari, tozalagichlar\", 'T\u00fct\u00fcn m\u0259hsullar\u0131' : \"Tamaki mahsulotlari\", '\u018fdviyyatlar': \"Ziravorlar\",\n       'Kolbasa v\u0259 sosisl\u0259r': \"Kolbasa va sosiskalar\", 'Araq': \"Aroq\", 'Diabetik': \"Diabet mahsulotlari\", 'D\u0259nlil\u0259r': \"Donli mahsulotlar\",\n       'Plastik qablar': \"Plastik idishlar\", 'Qab yumaq \u00fc\u00e7\u00fcn': \"Idish yuvish vositalari\", 'Enerji i\u00e7kil\u0259ri': \"Energetik ichimliklar\",\n       'Qat\u0131la\u015fd\u0131r\u0131lm\u0131\u015f s\u00fcd': \"Quyultirilgan sut\", 'Corablar': \"Paypoq\", 'Bayram aksessuarlar\u0131': \"Bayram uchun aksessuarlar\", 'Sular': \"Suvlar\",\n       'Paltarlar \u00fc\u00e7\u00fcn': \"Kiyim-kechak uchun\", 'Un m\u0259mulatlar\u0131': \"Un mahsulotlari\", 'Quru meyv\u0259l\u0259r': \"Quruq mevalar\", 'Dondurma': \"Muzqaymoq\",\n       'Yogurt': \"Yogurt\", 'Tekstil': \"To'qimachilik\", '\u00c7\u00f6r\u0259k': \"Non\", 'Pendirl\u0259r': \"Pishloqlar\", '\u00c7ay': \"Choy\", '\u041a\u0259smik': \"Tvorog\", 'Xama': \"Smetana\",\n       'Piv\u0259l\u0259r': \"Pivo\", 'Konservl\u0259r': \"Konservalar\", 'Meyv\u0259': \"Mevalar\", 'Unlar': \"Un\", 'Qat\u0131q': \"Qatiq\",\n       'Konservl\u0259\u015fdirilmi\u015f t\u0259r\u0259v\u0259z': \"Konservalangan sabzavotlar\", 'Viski,tekila v\u0259 s.': \"Viski, tekila va h.k\", 'Souslar': \"Souslar\",\n       'Saqq\u0131zlar': \"Saqichlar\", 'Batareya': \"Batareya\", 'Soyuq \u00c7aylar': \"Yaxna choylar\", 'T\u0259r\u0259v\u0259z': \"Sabzavotlar\",\n       'H\u0259\u015f\u0259ratlara qar\u015f\u0131': \"Hasharotlarga qarshi\", 'Kefir': \"Kefir\", 'Qaymaq': \"Qaymoq\", '\u015eor': \"Tuz\", 'Kolalar': \"Gazli ichimliklar\", 'Avto': \"Avto\",\n       'S\u00fcd': \"Sut\", 'Kokteyll\u0259r': \"Kokteyllar\", 'Konyak': \"Konyak\", 'Zeytunlar': \"Zaytun\", 'Ayran': \"Ayron\",\n       'Haz\u0131r yem\u0259kl\u0259r': \"Tayyor ovqatlar\", 'S\u0259h\u0259r yem\u0259kl\u0259ri': \"Nonushta\", '\u015eampan': \"Shampan\", 'Dov\u011fa': \"Suzma\",\n       'Donmu\u015f m\u0259hsullar': \"Muzlatilgan mahsulotlar\", 'Dondurulmu\u015f m\u0259hsullar': \"Muzlatilgan mahsulotlar\",'G\u00f6y\u0259rti': \"Ko'katlar\"}","0f0559bd":"#16 Bu lug'atni shu mahsulot_turi ustuniga tadbiq qilaman\ndf['mahsulot_turi'] = df['mahsulot_turi'].map(dict)","fe6a30b6":"df","aff1bd3b":"#17 Ana endi hamma mahsulot turi nomlari o'zbek tilida\ndf['mahsulot_turi'].unique()","82445183":"#18 sotilgan_vaqti ustunidagi ma'lumotlar hozircha object turida, men buni datetime formatiga o'tkazmoqchiman\ndf['sotilgan_vaqti'] = pd.to_datetime(df['sotilgan_vaqti'], format=\"%d\/%m\/%Y %H:%M\")","0be12315":"df.info()","48df40b6":"df","60f0ce05":"#19 Menga soatlar kerak emas, shuning uchun date ni o'zinigina olyapman\ndf['sotilgan_vaqti'] = df['sotilgan_vaqti'].dt.date","2b4ef5e7":"df","3f6e35b6":"#20 Bu dataset juda kattaligini hisobga olib, aynan nechta supermarket borligini ko'rib olaman\ndf['market_nomi'].unique()","5a5d4a34":"len(df['market_nomi'].unique())","19366c02":"#21 Ko'rinib turibtiki, bu datasetda 21 ta supermarket bor ekan. Men bu barcha supermarketlarni alohida .csv fayliga saqlab olaman\nfor i in df['market_nomi'].unique():\n  df[df['market_nomi'] == i].to_csv(f\"{i}.csv\")","6203f2fb":"#1 Kerakli datasetni githubdan df o'zgaruvchisiga yuklab olaman.\ndf = pd.read_csv(\".\/Hipermarket.csv\", usecols=list(range(1, 6)))\ndf.head(10)","c8c65312":"#2 DataFramening barcha ustunlari haqidagi ma'lumotga ega bo'lib olaman\ndf.info()","b2b6e0cd":"#3 DataFrameda NaN qiymatlar bor yoki yo'qligini tekshiraman\ndf.isnull().sum()","be93cde4":"#4 \"sotilgan_vaqti\" ustunining ma'lumot turini objectdan datetime ma'lumot turiga o'tkazaman\ndf['sotilgan_vaqti'] = pd.to_datetime(df['sotilgan_vaqti'])\ndf.info()","d07e8daf":"#5 Har bir oy uchun ma'lumotlar sonini ko'rib olaman\nfor i in range(1, 13):\n  print(df[df['sotilgan_vaqti'].dt.month == i].shape[0])","7eafdc75":"#6 Demak tushunamanki, 12-oy uchun hech qanday ma'lumot yo'q, 11-oyda esa bor ammo ma'lumotlar juda oz \n# shuning uchun 11-oydagi ma'lumotlarni tashlab yuborsam bo'laveradi\ndf.drop(df[df['sotilgan_vaqti'].dt.month == 11].index, axis=0, inplace=True)\nfor i in range(1, 13):\n  print(df[df['sotilgan_vaqti'].dt.month == i].shape[0])","179c1cea":"#7 DataFrameni bir ko'rib olaman\ndf","881ff54d":"#8 2019-yilda \"Hipermarket\" supermarketida qaysi mahsulot turi nechta sotilgani haqida ma'lumotlarni olaman\ndf['mahsulot_turi'].value_counts().to_frame()","99ca1ed4":"#8 Visualization\nplt.figure(figsize=(25, 6))\nsns.lineplot(data=df['mahsulot_turi'].value_counts().to_frame(), markers=\"o\")\n\nplt.xlabel(\"Mahsulot turi\")\nplt.ylabel(\"Sotilgan mahsulotlar\")\nplt.title(\"2019-yilda Hipermarketdagi kategoriya bo'yicha sotilgan mahsulotlar\", fontsize=20)\n\nplt.grid()\nplt.legend([\"sotilgan mahsulotlar soni\"])\nplt.xticks(rotation=90, fontsize=12)\nplt.show()","768e5f9f":"#9 2019-yilda \"Hipermarket\" supermarketida qaysi mahsulot turi qancha pul olib kelgani haqida ma'lumotni olaman\ndf.pivot_table(index=['mahsulot_turi'],\n              values=['mahsulot_narhi'], \n              aggfunc=['sum'])","e303124d":"#9 Visualization\nplt.figure(figsize=(25, 6))\nsns.lineplot(data=df.pivot_table(index=['mahsulot_turi'], values=['mahsulot_narhi'], aggfunc=['sum']),\n             markers=\"o\")\n\nplt.xlabel(\"Mahsulot turi\")\nplt.ylabel(\"Jami summa (AZN da)\")\nplt.title(\"2019-yilda Hipermarketdagi kategoriya bo'yicha sotilgan mahsulotlarning jami summasi\", fontsize=20)\n\nplt.grid()\nplt.legend([\"jami summa\"])\nplt.xticks(rotation=90, fontsize=12)\nplt.show()","1480defc":"#10 2019-yilda \"Hipermarket\" supermarketida nechta mijoz mahsulotni bonus karta orqali \n#xarid qilgan yoki qilmagani haqida haqida ma'lumotni olaman\nbonus_df = df['bonus_karta'].value_counts().to_frame().T\nbonus_df.columns = [\"Bonus_kartasiz\", \"Bonus_karta_orqali\"]\nbonus_df.index = pd.Index(['xaridlar'])\nbonus_df","04dab395":"#10 Visualization\nplt.figure(figsize=(12, 6))\nsns.barplot(data=bonus_df, palette=\"Blues\")\n\nplt.title(\"2019-yil Hipermarketda bonus karta orqali sotilgan va sotilmagan mahsulotlar\")\nplt.ylabel(\"Sotilgan mahsulotlar soni\")\n\nplt.grid()\nplt.show()","8ae4bffb":"#11 2019-yilda \"Hipermarket\" supermarketida oylarga nisbatan xaridlar soni haqida ma'lumotlarni aniqlab olaman\noylik_xaridlar = list()\noy_nomlari = ['Yanvar', 'Fevral', 'Mart', 'Aprel', 'May', 'Iyun', 'Iyul', 'Avgust', 'Sentabr', 'Oktabr']\nfor i in range(1, 11):\n  oylik_xaridlar.append(df[df['sotilgan_vaqti'].dt.month == i].shape[0])\ndf1 = pd.DataFrame(index=oy_nomlari, data=oylik_xaridlar, columns=['oylik_xaridlar'])\ndf1","45358a30":"#11 Visualization\nplt.figure(figsize=(16, 6))\nsns.barplot(x=df1.index, y=df1['oylik_xaridlar'], palette='Accent')\n\nplt.title(\"2019-yilda Hipermarketdagi oylarga nisbatan xaridlar soni\", fontsize=15)\nplt.xlabel(\"Oylar\", fontsize=15)\nplt.ylabel(\"Oylik xaridlar soni\", fontsize=15)\n\nplt.xticks(fontsize=15)\nplt.grid()\nplt.show()","5d183f3e":"#12 2019-yilda \"Hipermarket\" supermarketida hafta kunlariga nisbatan xaridlar soni\nhafta_kunlari_xaridlar = list()\nkun_nomlari = ['Dushanba', 'Seshanba', 'Chorshanba', 'Payshanba', 'Juma', 'Shanba', 'Yakshanba']\nfor i in range(0, 7):\n  hafta_kunlari_xaridlar.append(df[df['sotilgan_vaqti'].dt.weekday == i].shape[0])\ndf2 = pd.DataFrame(index=kun_nomlari, data=hafta_kunlari_xaridlar, columns=['xaridlar'])\ndf2","44c90bdd":"#12 Visualization\nplt.figure(figsize=(16, 6))\nsns.barplot(x=df2.index, y=df2['xaridlar'], palette='Accent')\n\nplt.title(\"2019-yilda Hipermarketdagi hafta kunlariga nisbatan xaridlar soni\", fontsize=15)\nplt.xlabel(\"Hafta kunlari\", fontsize=15)\nplt.ylabel(\"Hafta kunlaridagi xaridlar soni\", fontsize=15)\n\nplt.xticks(fontsize=15)\nplt.grid()\nplt.show()","88c16374":"#13 2019-yilda \"Hipermarket\" supermarketida oy kunlariga nisbatan xaridlar soni haqida ma'lumotlarni aniqlab olaman\noy_kunlari_xaridlar = list()\nkunlar = list(range(1, 32))\nfor i in range(1, 32):\n  oy_kunlari_xaridlar.append(df[df['sotilgan_vaqti'].dt.day == i].shape[0])\ndf3 = pd.DataFrame(index=kunlar, data=oy_kunlari_xaridlar, columns=['xaridlar'])\ndf3","2bca8780":"#13 Visualization\nplt.figure(figsize=(25, 8))\nsns.lineplot(data=df3, markers=\"o\")\n\nplt.title(\"2019-yilda Hipermarketdagi oy kunlariga nisbatan xaridlar soni\", fontsize=15)\nplt.xlabel(\"Oy kunlari\", fontsize=15)\nplt.ylabel(\"Xaridlar soni\", fontsize=15)\n\nplt.legend([\"xaridlar soni\"])\nplt.grid()\nplt.xticks(kunlar, fontsize=14)\nplt.show()\n","384d8e26":"#14 2019-yil Hipermarketdagi har bir oyning har bir kunidagi xaridlar sonini aniqlab olaman\n# buning uchun while loopdan foydalandim\noy_sanalari = list()\noy = 1\nkun = 1\nwhile kun<=31 and oy<=10:\n    oy_sanalari.append(df[(df['sotilgan_vaqti'].dt.month == oy) & (df['sotilgan_vaqti'].dt.day == kun)].shape[0])\n    kun +=1\n    if kun == 32:\n        oy+=1\n        kun=1","925339d7":"len(oy_sanalari)","ec1dd803":"arr = np.array(oy_sanalari).reshape(10, 31)","2e52fa4a":"df5 = pd.DataFrame(index=oy_nomlari, data=arr, columns=list(range(1, 32)))","241a9c6d":"df5","d0512ad8":"#14 Visualisation\nplt.figure(figsize=(25, 5))\nsns.heatmap(data=df5, linewidth=3, cmap=\"Blues\", square=True)\n\nplt.title(\"2019-yil Hipermarketdagi har bir oyning har bir kunidagi xaridlar soni\", fontsize=15)\nplt.xlabel(\"Kunlar\", fontsize=15)\nplt.ylabel(\"Oylar\", fontsize=15)\n\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.show()","23b0bee0":"#15 Ko'rinadiki, sotilgan mahsulotlarning 50% i 3 azngacha, 90% i esa 12.5 azngacha bo'lgan mahsulotlar\nsns.displot(data=df, x='mahsulot_narhi', kind='ecdf', height=6, aspect=2.5)\nplt.xticks(rotation=90)\nplt.grid(which='both')\nplt.minorticks_on()\nplt.show()","8ffdb9f9":"# 2019-yil uchun \"Hipermarket\" supermarketidagi savdo holati"}}