{"cell_type":{"a52a9fac":"code","0e3086d3":"code","9f84418d":"code","2311b6f0":"code","13cacc1f":"code","85c8ea47":"code","92e2b127":"code","2796258e":"code","b1ea78ab":"code","99e455c7":"code","101d7d64":"code","4086e3e2":"code","2d931db0":"code","9c6814e4":"code","a12f52a1":"code","d972b079":"code","368fa9f4":"code","261a0180":"code","d3e82abf":"code","a3109dfb":"code","6830b95b":"code","c2a13227":"code","0cee5610":"code","b5a19d86":"code","19214a25":"code","54072e26":"code","4de805f1":"code","7311ebc2":"code","d7db5e9f":"code","d5e05d47":"code","f652cee9":"markdown","0f1b76a5":"markdown","4396620a":"markdown","739c0f4f":"markdown","093fd0ac":"markdown","31bc9bd6":"markdown","2ecfe38e":"markdown","ed487f28":"markdown","ffdad97f":"markdown"},"source":{"a52a9fac":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport os\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0e3086d3":"\ndf = pd.read_csv('\/kaggle\/input\/pakistan-corona-virus-citywise-data\/PK COVID-19.csv', delimiter=',')\ndf.dataframeName = 'PK COVID-19.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","9f84418d":"df.head()","2311b6f0":"#showing basic information rows and columns. showing number of filled rows and datatypes of given columns\ndf.info()","13cacc1f":"#showing the statistical measures in dataset like count, mean, min, max for numerical features\ndf.describe()","85c8ea47":"# Checking for wrong values\nfor col in df.columns:\n    print(\"Unique Values of Column \"+col+\":\\n \"+str(df[col].unique())+\" \\n\")","92e2b127":"#removing null values\ndf.dropna(axis=\"rows\", how=\"any\", inplace = True)\ndf.reset_index(drop=True, inplace=True)","2796258e":"df.isnull().sum()","b1ea78ab":"#Correcting values according to the domain\ndf['Deaths']=df['Deaths'].astype(int)\ndf['Cases']=df['Cases'].astype(int)\ndf['Recovered']=df['Recovered'].astype(int)","99e455c7":"df.loc[df.Province == \"khyber Pakhtunkhwa\", \"Province\"] = \"Khyber Pakhtunkhwa\"","101d7d64":"corr = df.corr()\nsns.set(rc={'figure.figsize':(10,5)})\nsns.heatmap(corr, annot=True)","4086e3e2":"sns.pairplot(df[['Cases','Deaths','Recovered']])","2d931db0":"Categorical = ['Date','Travel_history','Province','City']\nNumerical = ['Deaths','Cases','Recovered']","9c6814e4":"fig = plt.figure(figsize = (30,35))\naxes = 410\nfor cat in Categorical:\n    axes += 1\n    fig.add_subplot(axes)\n    sns.countplot(data = df, x = cat)\n    plt.xticks(rotation=30)\nplt.show()","a12f52a1":"plt.subplots(figsize=(15, 15))\nsize = dict(df['Travel_history'].value_counts()).values()\ncolors = sns.color_palette()\nlabels = dict(df['Travel_history'].value_counts()).keys()\nexplode = [0.1, 0.2, 0.2, 0.1, 0, 0.1, 0.1, 0.1, 0.3, 0.3 ,0.3 ,0.3 , 0.3, 0.3, 0.3]\n\ncircle = plt.Circle((0, 0), 0.6, color = 'white')\n\nplt.pie(size, colors = colors, labels = labels, explode = explode, shadow = False, autopct = '%.2f%%')\nplt.title('Travel History', fontsize = 20)\np = plt.gcf()\np.gca().add_artist(circle)\nplt.axis('off')\nplt.legend()\n\nplt.show()","d972b079":"plt.subplots(figsize=(7, 7))\nsize = dict(df['Province'].value_counts()).values()\ncolors = sns.color_palette()\nlabels = dict(df['Province'].value_counts()).keys()\nexplode = [0.1, 0.2, 0.2, 0.1, 0, 0.1, 0.1, 0.3]\n\ncircle = plt.Circle((0, 0), 0.6, color = 'white')\n\nplt.pie(size, colors = colors, labels = labels, explode = explode, shadow = False, autopct = '%.2f%%')\nplt.title('Province', fontsize = 20)\np = plt.gcf()\np.gca().add_artist(circle)\nplt.axis('off')\nplt.legend()\n\nplt.show()","368fa9f4":"fig = plt.figure(figsize = (20,15))\n\nfor i,num in enumerate(Numerical):\n    \n    fig.add_subplot(3,3,i+1)\n    sns.boxplot(data = df, x = num)\nplt.show()","261a0180":"df.hist()\nprint(f'Total number of cases registered: '+str(df['Cases'].sum()))\nprint(f'Total Number of deaths registered: '+str(df['Deaths'].sum()))\nprint(f'Total Number of recovered cases registered: '+str(df['Recovered'].sum()))","d3e82abf":"\n#Plotting how many cases registered on a particular date all over Pakistan.\nax = df.groupby('Date')['Cases'].sum().sort_index().plot('bar',figsize=(18,5))\nax.set_xlabel('Date',fontsize=15)\nax.set_ylabel('Cases',fontsize=15)\nax.set_title('Number of Corona virus cases registered on particular date.',fontsize=15)\nplt.show()","a3109dfb":"#Plotting how many cases registered in provinces all over Pakistan.\nax = df.groupby('Province')['Cases'].sum().sort_index().plot('bar',figsize=(18,5))\nax.set_xlabel('Province',fontsize=15)\nax.set_ylabel('Cases',fontsize=15)\nax.set_title('Number of Corona virus cases registered in all provinces.',fontsize=15)\nplt.show()","6830b95b":"#Plotting how many cases registered in a particular city all over Pakistan.\nax = df.groupby('City')['Cases'].sum().sort_index().plot('bar',figsize=(18,5))\nax.set_xlabel('Cities',fontsize=15)\nax.set_ylabel('Cases',fontsize=15)\nax.set_title('Number of Corona virus cases registered in all cities.',fontsize=15)\nplt.show()","c2a13227":"#Plotting how many deaths registered in a particular city all over Pakistan.\nax = df.groupby('City')['Deaths'].sum().sort_index().plot('bar',figsize=(18,5))\nax.set_xlabel('Cities',fontsize=15)\nax.set_ylabel('Deaths',fontsize=15)\nax.set_title('Number of death cases registered due to Corona virus in all cities.',fontsize=15)\nplt.show()","0cee5610":"#Plotting how many deaths registered in a provinces all over Pakistan.\nax = df.groupby('Province')['Deaths'].sum().sort_index().plot('bar',figsize=(18,5))\nax.set_xlabel('Provinces',fontsize=15)\nax.set_ylabel('Deaths',fontsize=15)\nax.set_title('Number of death cases registered due to Corona virus in all provinces.',fontsize=15)\nplt.show()","b5a19d86":"#Plotting how many deaths registered on a particular date all over Pakistan.\nax = df.groupby('Date')['Deaths'].sum().sort_index().plot('bar',figsize=(18,5))\nax.set_xlabel('Date',fontsize=15)\nax.set_ylabel('Deaths',fontsize=15)\nax.set_title('Number of death cases registered due to Corona virus on a particular date.',fontsize=15)\nplt.show()","19214a25":"#Plotting how many recoveries registered in a particular city all over Pakistan.\nax = df.groupby('City')['Recovered'].sum().sort_index().plot('bar',figsize=(18,5))\nax.set_xlabel('Cities',fontsize=15)\nax.set_ylabel('Recovered',fontsize=15)\nax.set_title('Number of recoveries registered from Corona virus in all cities.',fontsize=15)\nplt.show()","54072e26":"#Plotting how many recoveries registered in a particular province all over Pakistan.\nax = df.groupby('Province')['Recovered'].sum().sort_index().plot('bar',figsize=(18,5))\nax.set_xlabel('Provinces',fontsize=15)\nax.set_ylabel('Recovered',fontsize=15)\nax.set_title('Number of recoveries registered from Corona virus in all provinces.',fontsize=15)\nplt.show()","4de805f1":"#Plotting how many recoveries registered in a particular according to the dates all over Pakistan.\nax = df.groupby('Date')['Recovered'].sum().sort_index().plot('bar',figsize=(18,5))\nax.set_xlabel('Date',fontsize=15)\nax.set_ylabel('Recovered',fontsize=15)\nax.set_title('Number of recoveries registered from Corona virus on a particular date.',fontsize=15)\nplt.show()","7311ebc2":"plt.subplots(figsize=(20, 5))\nsns.stripplot(df['Province'], df['Cases'])\nplt.title('Cases vs Province', fontsize = 30)\nplt.xlabel('Province', fontsize = 18)\nplt.ylabel('Cases', fontsize = 18)","d7db5e9f":"plt.subplots(figsize=(20, 5))\nsns.stripplot(df['Province'], df['Deaths'])\nplt.title('Deaths vs Province', fontsize = 30)\nplt.xlabel('Province', fontsize = 18)\nplt.ylabel('Deaths', fontsize = 18)","d5e05d47":"plt.subplots(figsize=(20, 5))\nsns.stripplot(df['Province'], df['Recovered'])\nplt.title('Recovered vs Province', fontsize = 30)\nplt.xlabel('Province', fontsize = 18)\nplt.ylabel('Recovered', fontsize = 18)","f652cee9":"The above chart shows the correlation of features with each other. According to the above graph there is weak positive correlation of number of cases with deaths or vice versa.","0f1b76a5":"# Multivariate Analysis","4396620a":"# Importing Dataset and Data Cleaning.","739c0f4f":"# Bivariate Analysis","093fd0ac":"The above plots shows that there are many outliers in the as the number of deaths, cases and recovered people are increasing day by day","31bc9bd6":"# Univariate Analysis","2ecfe38e":"The above count plots shows the number of data present according to the different features.","ed487f28":"# Importing Libraries","ffdad97f":"According to the data and above pie chart, most of the events like identified cases, deaths and recovery are occurred in Punjab, KPK, Sindh and other provices have less amount of events occurred "}}