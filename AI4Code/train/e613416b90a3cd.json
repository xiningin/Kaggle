{"cell_type":{"d4c76ea3":"code","52ba099e":"code","e3d72169":"code","b3d14b2a":"code","eee76139":"code","5014e432":"code","b55481b1":"code","5ce16832":"code","dde191f9":"code","dcf49101":"code","b5592421":"code","0ded9133":"code","c357e043":"code","5725c276":"code","50c42de3":"code","e9820858":"code","d138cffe":"code","5edc4799":"code","b4109592":"code","4c2ed051":"markdown","58830075":"markdown","8db7cb4b":"markdown"},"source":{"d4c76ea3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","52ba099e":"df_train = pd.read_csv(\"..\/input\/loan-default-prediction\/train_v2.csv.zip\")\ndf_test = pd.read_csv(\"..\/input\/loan-default-prediction\/test_v2.csv.zip\")","e3d72169":"df_train.shape","b3d14b2a":"df_train.info()","eee76139":"df_train.keys()","5014e432":"df_train.isnull().sum()","b55481b1":"df_train.dropna(inplace=True)\ndf_test.dropna(inplace=True)","5ce16832":"df_train.isnull().sum()","dde191f9":"df_train.shape","dcf49101":"for i in df_train.select_dtypes(include=['object']).columns:\n    df_train.drop(labels=i, axis=1, inplace=True)\nfor i in df_test.select_dtypes(include=['object']).columns:\n    df_test.drop(labels=i, axis=1, inplace=True)","b5592421":"df_train.shape","0ded9133":"X = df_train.iloc[:,1:751]\ny = df_train.iloc[:,751]","c357e043":"from sklearn.model_selection import train_test_split","5725c276":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=14)","50c42de3":"# explicitly require this experimental feature\nfrom sklearn.experimental import enable_hist_gradient_boosting  # noqa\n# now you can import normally from ensemble\nfrom sklearn.ensemble import HistGradientBoostingRegressor","e9820858":"est = HistGradientBoostingRegressor().fit(X_train, y_train)","d138cffe":"est.score(X_test, y_test)","5edc4799":"from sklearn.metrics import mean_squared_error","b4109592":"mse = mean_squared_error(y_test, est.predict(X_test))\nprint(\"The mean squared error (MSE) on test set: {:.4f}\".format(mse))","4c2ed051":"# Split data to training set and testing set","58830075":"# Hist Gradient Boosting Regressor","8db7cb4b":"# Cleaning The Data"}}