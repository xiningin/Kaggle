{"cell_type":{"ebd32df7":"code","997f41be":"code","b82c9ad1":"code","dc9bf798":"code","75f77db3":"code","871acfc3":"code","23430df7":"code","b68910af":"code","799931bd":"code","e0c73342":"code","eb8c94cf":"code","ea54e2b8":"code","2f906ac6":"code","bdd39a8f":"code","9b208b56":"code","35e52027":"code","815280b3":"code","52f7257e":"code","caaa2f1a":"code","9cb254e8":"code","655925cc":"code","af85ff9d":"code","6fb8e1ef":"code","e03ea019":"code","7e080fb0":"code","23bd119c":"code","fe12abab":"code","ea4ac75c":"code","32bb0210":"code","f21bcb20":"code","098b55f0":"code","f4256771":"code","bfecdbfb":"code","c77f8b42":"code","eb6645e9":"code","860b39a4":"code","5e02751f":"code","394f2014":"code","d65e25d9":"code","b9bc37f2":"code","56eebebf":"code","0d2619e3":"code","7daa5956":"code","10b7030d":"code","1a6dd520":"code","92a7243a":"code","3f048e47":"code","906c15e4":"code","41be702d":"code","b1a4c45f":"markdown","18b2710f":"markdown","04c75c2b":"markdown","aea90ed0":"markdown","5dad6bc3":"markdown","1440e541":"markdown","368c3609":"markdown","e3370f0a":"markdown","f99ff8c4":"markdown","27dd7bfd":"markdown","2f2ec8bc":"markdown","16cfa3ce":"markdown"},"source":{"ebd32df7":"from matplotlib import pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split, cross_val_score,GridSearchCV\nfrom sklearn.linear_model import LinearRegression, Ridge,Lasso\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.metrics import mean_absolute_error\nimport joblib\n%matplotlib inline","997f41be":"df = pd.read_csv('..\/input\/meatconsumption\/meat_consumption_worldwide.csv')\ndf.shape","b82c9ad1":"df.isna().sum()","dc9bf798":"df.head()","75f77db3":"def plot_barh(y, x, title=None, xlabel=None, ylabel=None,figsize=(10,10),style='fivethirtyeight', color='blue', write_num=False):\n    plt.style.use(style)\n    fig, ax = plt.subplots(figsize=figsize)\n    \n    plt.barh(y, x, height=0.75, color=color)\n    plt.gca().invert_yaxis()\n    plt.title(title)\n    plt.xlabel(xlabel)\n    plt.ylabel(ylabel)\n    if write_num:\n        for i, v in enumerate(x):\n            ax.text(v, i + .25, str(v))\n    plt.show()\n","871acfc3":"location_count = df['LOCATION'].value_counts()\ncountry_code, count = location_count.keys(),location_count.values\n\nplot_barh(country_code, count, write_num=True, figsize=(18,18), xlabel='Frequency', ylabel='Country Code', title=\"Country and its Frequency\")","23430df7":"df['SUBJECT'].unique()","b68910af":"sub_keys = df['SUBJECT'].value_counts().keys()\nplt.figure(figsize=(10,10))\ndf['SUBJECT'].value_counts().plot(kind='pie', labels=sub_keys,autopct=\"%.1f\", shadow=True, title='Types of meat consumption')\nplt.show()","799931bd":"for country in country_code:\n    subject_of_this_country = df['SUBJECT'][df['LOCATION'] == country]\n    \n    meats = subject_of_this_country.value_counts().keys()\n    total = subject_of_this_country.value_counts().sum()\n    \n    subject_of_this_country.value_counts().plot(kind='pie',labels=meats, autopct=\"%.1f\", shadow=True,title= f'Meat consumption of {country} ({total})')\n    plt.show()\n    print('\\n')","e0c73342":"years = sorted(df['TIME'].unique())","eb8c94cf":"total_VALUE_per_year = []\nfor year in years:\n    total_VALUE_per_year.append(df['Value'][df['TIME'] == year].sum())","ea54e2b8":"year_and_total_value = pd.DataFrame({'Year':years,'total_value':total_VALUE_per_year})","2f906ac6":"year_and_total_value","bdd39a8f":"plt.figure(figsize=(10,10))\nsns.lineplot(data=year_and_total_value, x='Year',y='total_value',linewidth=1,color='r')\nplt.show()","9b208b56":"df['MEASURE'].unique()","35e52027":"df['MEASURE'].value_counts()","815280b3":"plt.figure(figsize=(10,10))\nmeasure_keys = df['MEASURE'].value_counts().keys()\ndf['MEASURE'].value_counts().plot(kind='pie', labels=measure_keys, autopct=\"%.1f\")\nplt.show()","52f7257e":"plt.figure(figsize=(10,10))\ndf['Value'].plot(kind='hist', rwidth=0.95)\nplt.show()","caaa2f1a":"cols_to_encode = df.columns[:3]\nnew_df = pd.get_dummies(df[cols_to_encode],drop_first=True)","9cb254e8":"new_df.head()","655925cc":"scaler = MinMaxScaler()\nscaler.fit(df[['TIME']])","af85ff9d":"scalled_years = scaler.fit_transform(df[['TIME']]).flatten()","6fb8e1ef":"scalled_years[:5]","e03ea019":"new_df['TIME'] = scalled_years\nnew_df['Value'] = df['Value']","7e080fb0":"new_df.shape","23bd119c":"new_df.head()","fe12abab":"x, y = new_df.drop('Value', axis=1), new_df['Value']","ea4ac75c":"x.shape, y.shape","32bb0210":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.30)","f21bcb20":"x_train.shape, x_test.shape","098b55f0":"y_train.shape, y_test.shape","f4256771":"models = [LinearRegression(), Lasso(), Ridge()]\n\nfor model in models:\n    print(\"Model:\", model)\n    this_model = model\n    this_model.fit(x_train, y_train)\n    print(\"Score:\",this_model.score(x_test, y_test))","bfecdbfb":"kn_model = KNeighborsRegressor()\nkn_model.fit(x_train, y_train)\nkn_model.score(x_test, y_test)","c77f8b42":"kn_model.score(x_train, y_train)","eb6645e9":"y_pred_test = kn_model.predict(x_test)\ny_pred_train = kn_model.predict(x_train)","860b39a4":"test = pd.DataFrame({\n    'Y test': y_test,\n    'Y predicted test': y_pred_test\n})\n\ntrain = pd.DataFrame({\n    'Y train': y_train,\n    'Y predicted train': y_pred_train\n})","5e02751f":"test.sample(7)","394f2014":"train.sample(7)","d65e25d9":"train.sample(7)","b9bc37f2":"test.corr()","56eebebf":"train.corr()","0d2619e3":"mean_absolute_error(y_test,y_pred_test)","7daa5956":"mean_absolute_error(y_train,y_pred_train)","10b7030d":"test.sort_values(by= ['Y test'], inplace=True)\ntrain.sort_values(by= ['Y train'], inplace=True)","1a6dd520":"def compare(df, title=None):\n    col1, col2 = df.columns \n    plt.figure(figsize=(10,10))\n    plt.scatter(df[col1], df[col2], color='b')\n    plt.title(title)\n    plt.xlabel('Actual')\n    plt.ylabel('Predicted')\n    plt.show()","92a7243a":"compare(test, 'Test Comparision')","3f048e47":"compare(train, 'Train Comparision')","906c15e4":"joblib.dump(kn_model, 'Meat-comsumption-Model')","41be702d":"!ls","b1a4c45f":"## Splitting the data ","18b2710f":"## Country and it's meat consumption","04c75c2b":"## Types of meat consumption","aea90ed0":"## Scaling the year column ","5dad6bc3":"## Total Value of each year ","1440e541":"# **Saving model as file**","368c3609":"## Measurements Used","e3370f0a":"## One Hot encoding","f99ff8c4":"## Countries ","27dd7bfd":"# **Compare actual and predicted**","2f2ec8bc":"## Model Building and  Predictions","16cfa3ce":"## Using KNeighborsRegressor "}}