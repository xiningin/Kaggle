{"cell_type":{"90636443":"code","3cae94de":"code","56f8bfa1":"code","988d58f2":"code","23f4dd3b":"code","76f0cdd3":"code","0c615284":"code","db890513":"code","fe809ffb":"code","213411fd":"code","9fec11f8":"code","4bbe1e86":"code","6fe7c3db":"code","983015f1":"code","c95b4b65":"code","7a850712":"code","5b23e584":"code","6dd76fd8":"code","4831ff35":"code","89b33cf1":"code","4bc0a67d":"code","0ad784eb":"code","6384b98d":"code","49b4a01a":"code","8f3f4b18":"code","69f77ee1":"code","3a5d60f1":"code","10be9cd2":"code","ea95280d":"code","8a76df50":"code","6096bd88":"code","97fae34a":"markdown"},"source":{"90636443":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3cae94de":"df=pd.read_csv('\/kaggle\/input\/weight-height\/weight-height.csv')","56f8bfa1":"df.head()","988d58f2":"df.describe()","23f4dd3b":"import matplotlib.pyplot as plt","76f0cdd3":"plt.hist(df.Height, bins=20, rwidth=0.8)\nplt.xlabel('Height (inches)')\nplt.ylabel('Count')\nplt.show()\n","0c615284":"plt.hist(df.Weight, bins=20, rwidth=0.8)\nplt.xlabel('Weight (inches)')\nplt.ylabel('Count')\nplt.show()","db890513":"df_male=df[(df['Gender']=='Male')]\ndf_male.shape","fe809ffb":"df_female=df[(df['Gender']=='Female')]\ndf_female.shape","213411fd":"Q3=df_male.Height.quantile(0.75)\nQ1=df_male.Height.quantile(0.25)\nmax_threshold=Q3+1.5*(Q3-Q1)\nmin_threshold=Q1-1.5*(Q3-Q1)\ndf_male=df_male[(df_male['Height']<=max_threshold) &( df_male['Height']>=min_threshold)]\nQ3=df_male.Weight.quantile(0.75)\nQ1=df_male.Weight.quantile(0.25)\nmax_threshold=Q3+1.5*(Q3-Q1)\nmin_threshold=Q1-1.5*(Q3-Q1)\ndf_male=df_male[(df_male['Weight']<=max_threshold) &( df_male['Weight']>=min_threshold)]\ndf_male.shape","9fec11f8":"Q3=df_female.Height.quantile(0.75)\nQ1=df_female.Height.quantile(0.25)\nmax_threshold=Q3+1.5*(Q3-Q1)\nmin_threshold=Q1-1.5*(Q3-Q1)\ndf_female=df_female[(df_female['Height']<=max_threshold) &( df_female['Height']>=min_threshold)]\nQ3=df_female.Weight.quantile(0.75)\nQ1=df_female.Weight.quantile(0.25)\nmax_threshold=Q3+1.5*(Q3-Q1)\nmin_threshold=Q1-1.5*(Q3-Q1)\ndf_female=df_female[(df_female['Weight']<=max_threshold) &( df_female['Weight']>=min_threshold)]\ndf_female.shape","4bbe1e86":"df=df_male.append(df_female)\ndf.shape","6fe7c3db":"from sklearn.utils import shuffle\ndf=shuffle(df)\ndf.head()","983015f1":"X=df.drop(labels=['Gender'], axis=1)\ny=df['Gender']","c95b4b65":"X.shape","7a850712":"y.shape","5b23e584":"from sklearn.preprocessing import LabelBinarizer\nlb=LabelBinarizer()\ny=lb.fit_transform(y)\ny","6dd76fd8":"plt.scatter(X.Height, X.Weight,y+1, c=y)\nplt.show()","4831ff35":"'''from sklearn.preprocessing import StandardScaler\nss=StandardScaler()\nX=ss.fit_transform(X)\nX'''","89b33cf1":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test=train_test_split(X,y, test_size=0.25)","4bc0a67d":"X_train.shape","0ad784eb":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier(n_neighbors=2)\nknn.fit(X_train,y_train)","6384b98d":"from sklearn.metrics import accuracy_score, confusion_matrix, f1_score\npred=knn.predict(X_test)\nscore=accuracy_score(y_true=y_test, y_pred=pred)\nprint(score)","49b4a01a":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()\nlr.fit(X_train,y_train)","8f3f4b18":"pred=lr.predict(X_test)\nscore=accuracy_score(y_true=y_test, y_pred=pred)\nprint(score)","69f77ee1":"from sklearn.svm import SVC\nsvc=SVC()\nsvc.fit(X_train,y_train)\npred=svc.predict(X_test)\nscore=accuracy_score(y_true=y_test, y_pred=pred)\nprint(score)","3a5d60f1":"from sklearn.tree import DecisionTreeClassifier\ntree=DecisionTreeClassifier()\ntree.fit(X_train,y_train)\npred=tree.predict(X_test)\nscore=accuracy_score(y_true=y_test, y_pred=pred)\nprint(score)","10be9cd2":"matrix=confusion_matrix(y_true=y_test, y_pred=pred)\nmatrix","ea95280d":"f1_score(y_true=y_test, y_pred=pred)","8a76df50":"pred=lr.predict(X)\n","6096bd88":"plt.scatter(X.Height, X.Weight,pred+1, c=pred)\nplt.show()","97fae34a":"Removing outliers for male"}}