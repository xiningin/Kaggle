{"cell_type":{"54665a88":"code","076ad188":"code","413df170":"code","7d52dc8b":"code","8b8cc8e2":"code","57657b3b":"code","a64cfe93":"code","b2d652d7":"code","17d518c8":"code","787db356":"code","268d1318":"code","73af8cc8":"code","0b676ee0":"code","bd47d377":"code","ca5c3716":"code","14aef566":"code","92683777":"code","9e93a49f":"code","ea9fb447":"code","66e81223":"code","6b57b7cc":"markdown"},"source":{"54665a88":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/tesla-share\/TSLA (1).csv')\nnetflix.head()","076ad188":"netflix=netflix[['Date','Close']]\nnetflix.head()","413df170":"netflix.info()","7d52dc8b":"!pip install pycaret-ts-alpha","8b8cc8e2":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","57657b3b":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","a64cfe93":"netflix = netflix.asfreq('d')\nnetflix.index","b2d652d7":"netflix.head()","17d518c8":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","787db356":"data=netflix.Close\ndata","268d1318":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","73af8cc8":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","0b676ee0":"## Create a model manually\nmodel = exp.create_model(\"knn_cds_dt\")\nmodel","bd47d377":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","ca5c3716":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","14aef566":"tuned_model = exp.tune_model(model,optimize = 'SMAPE')\ntuned_model","92683777":"exp.predict_model(tuned_model)","9e93a49f":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","ea9fb447":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","66e81223":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","6b57b7cc":"# "}}