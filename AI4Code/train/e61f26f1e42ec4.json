{"cell_type":{"3109d8c8":"code","39c764dc":"code","1095f2fa":"code","9200ff4b":"code","28cca713":"code","81df3398":"code","d01f5aad":"code","c27ea61c":"code","28dba217":"code","ff2c3d66":"code","73a439aa":"code","ae81a8da":"code","17be7727":"code","031faa76":"code","982404a3":"code","77523fce":"code","4f4608fd":"code","5e46dc6f":"code","67b80bfb":"code","2da6a64c":"code","0d482028":"code","5ed8f42f":"code","bfaf5e6f":"code","ab078002":"code","069df8ac":"code","59f4c4d6":"code","614e150b":"markdown"},"source":{"3109d8c8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","39c764dc":"df = pd.read_csv(\"..\/input\/heart-failure-prediction\/heart.csv\")","1095f2fa":"df.info()","9200ff4b":"df.describe()","28cca713":"df.corr()","81df3398":"sns.heatmap(df.corr())","d01f5aad":"y = df[\"HeartDisease\"]","c27ea61c":"x = df.drop(\"HeartDisease\",axis=1)","28dba217":"sns.displot(df[\"Age\"].where(df[\"HeartDisease\"]==1),kde=True)\ndf[\"Age\"].where(df[\"HeartDisease\"]==1).mode()","ff2c3d66":"sns.displot(x[\"RestingBP\"],kde=True)","73a439aa":"sns.displot(df[\"Cholesterol\"].where(df[\"HeartDisease\"]==1),kde=True)\ndf[\"Cholesterol\"].where(df[\"HeartDisease\"]==1).mean()","ae81a8da":"df[\"Sex\"].where(df[\"HeartDisease\"]==1).value_counts().plot.barh()","17be7727":"df[\"ST_Slope\"].where(df[\"HeartDisease\"]==1).value_counts().plot.barh()","031faa76":"sns.lineplot(y = x[\"Oldpeak\"],x = y)","982404a3":"sns.lineplot(y = x[\"FastingBS\"],x = y)","77523fce":"sns.lineplot(y = x[\"Age\"],x = y)","4f4608fd":"x.head()","5e46dc6f":"x[\"Sex\"].replace({\"M\":0,\"F\":1},inplace=True)\nx[\"ChestPainType\"].replace({\"TA\":0,\"ATA\":1,\"NAP\":2,\"ASY\":3},inplace=True)\nx[\"RestingECG\"].replace({\"Normal\":0,\"ST\":1,\"LVH\":2},inplace=True)\nx[\"ExerciseAngina\"].replace({\"N\":0,\"Y\":1},inplace=True)\nx[\"ST_Slope\"].replace({\"Up\":0,\"Flat\":1,\"Down\":2},inplace=True)","67b80bfb":"x.head()","2da6a64c":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)","0d482028":"from sklearn.svm import SVC\nsvm = SVC(kernel=\"linear\")\nsvm.fit(x_train,y_train)","5ed8f42f":"svm.score(x_test,y_test)","bfaf5e6f":"y_pred = svm.predict(x_test)","ab078002":"from sklearn.metrics import confusion_matrix, classification_report ","069df8ac":"confusion_matrix(y_pred, y_test)","59f4c4d6":"print (classification_report(y_pred, y_test))","614e150b":"Age: age of the patient [years]\n<br>\nSex: sex of the patient [M: Male, F: Female]\n<br>\nChestPainType: chest pain type [TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic]\n<br>\nRestingBP: resting blood pressure [mm Hg]\n<br>\nCholesterol: serum cholesterol [mm\/dl]\n<br>\nFastingBS: fasting blood sugar [1: if FastingBS > 120 mg\/dl, 0: otherwise]\n<br>\nRestingECG: resting electrocardiogram results [Normal: Normal, ST: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV), LVH: showing probable or definite left ventricular hypertrophy by Estes' criteria]\n<br>\nMaxHR: maximum heart rate achieved [Numeric value between 60 and 202]\n<br>\nExerciseAngina: exercise-induced angina [Y: Yes, N: No]\n<br>\nOldpeak: oldpeak = ST [Numeric value measured in depression]\n<br>\nST_Slope: the slope of the peak exercise ST segment [Up: upsloping, Flat: flat, Down: downsloping]\n<br>\nHeartDisease: output class [1: heart disease, 0: Normal]"}}