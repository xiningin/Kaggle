{"cell_type":{"0c9a4db2":"code","11fb4c76":"code","e6f313a8":"code","b2e16475":"code","685f034a":"code","4504b3b2":"code","68ff907a":"code","119e03ef":"code","4cd28426":"code","e9ffda6d":"code","0b49e509":"code","e76e4bf6":"code","7747b19b":"code","aa848b6a":"code","a3c62537":"code","61a69471":"code","71fcc3bb":"code","24a513d0":"code","08fc683d":"code","2467dcae":"code","46206581":"markdown","64416653":"markdown","54ecd596":"markdown","bead5a7a":"markdown","328d0cff":"markdown","dfba0e57":"markdown","a42573cd":"markdown","16cc8542":"markdown","a9ede6c6":"markdown"},"source":{"0c9a4db2":"import os\nimport sys \nimport json\nimport glob\nimport random\nimport collections\nimport time\nimport re\n\nimport numpy as np\nimport pandas as pd\nimport pydicom\nfrom pydicom.pixel_data_handlers.util import apply_voi_lut\nimport cv2\nimport PIL.Image\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom tqdm import tqdm","11fb4c76":"data_directory = '..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification'","e6f313a8":"DEBUG = False\nmri_types = ['FLAIR','T1w','T1wCE','T2w']\nSIZE = 256\nNUM_IMAGES = 64","b2e16475":"files = sorted(glob.glob(f\"{data_directory}\/train\/00688\/FLAIR\/*.dcm\"), \n               key=lambda var:[int(x) if x.isdigit() else x for x in re.findall(r'[^0-9]|[0-9]+', var)])","685f034a":"slices = []\nfor filepath in tqdm(files):\n    dicom = pydicom.read_file(filepath)\n    data = dicom.pixel_array\n    slices.append(data)\n    \n# Also, get the plane of the DICOM - axial, sagittal, or coronal.\nx1, y1, _, x2, y2, _ = [round(j) for j in dicom.ImageOrientationPatient]\ncords = [x1, y1, x2, y2]\n\nif cords == [1, 0, 0, 0]:\n    plane = 'Coronal'\nelif cords == [1, 0, 0, 1]:\n    plane = 'Axial'\nelif cords == [0, 1, 0, 0]:\n    plane = 'Sagittal'\nelse:\n    plane = 'Unknown'\nprint(plane)","4504b3b2":"img3d = np.stack(slices)","68ff907a":"# Normalize it so we can plot it\nif img3d.sum() != 0:\n    img3d = img3d - np.min(img3d)\n    img3d = img3d \/ np.max(img3d)\n    img3d = (img3d * 255).astype(np.uint8)","119e03ef":"print(img3d.shape)","4cd28426":"# The coronal view of the scan\nplt.imshow(img3d[len(img3d)\/\/2, :, :])","e9ffda6d":"# The axial view of the scan\nplt.imshow(img3d[:, img3d.shape[1]\/\/2, :])","0b49e509":"maxs = []\nq25s = []\nfor slice_idx in tqdm(range(len(img3d))):\n    maxs.append(np.max(img3d[slice_idx, img3d.shape[1]\/\/2, :]))\n    q25s.append(np.quantile(img3d[slice_idx, img3d.shape[1]\/\/2, :], 0.25))\n    \nax = sns.lineplot(x = range(len(img3d)), y = maxs, color='orange', label='Max values')\nsns.lineplot(x = range(len(img3d)), y=q25s, color='blue', label='Q25 values')","e76e4bf6":"slices = []\nfor filepath in tqdm(files):\n    dicom = pydicom.read_file(filepath)\n    data = apply_voi_lut(dicom.pixel_array, dicom)\n    slices.append(data)\n    \n# Also, get the plane of the DICOM - axial, sagittal, or coronal.\nx1, y1, _, x2, y2, _ = [round(j) for j in dicom.ImageOrientationPatient]\ncords = [x1, y1, x2, y2]\n\nif cords == [1, 0, 0, 0]:\n    plane = 'Coronal'\nelif cords == [1, 0, 0, 1]:\n    plane = 'Axial'\nelif cords == [0, 1, 0, 0]:\n    plane = 'Sagittal'\nelse:\n    plane = 'Unknown'\nprint(plane)","7747b19b":"img3d = np.stack(slices)\n# Normalize it so we can plot it\nif img3d.sum() != 0:\n    img3d = img3d - np.min(img3d)\n    img3d = img3d \/ np.max(img3d)\n    img3d = (img3d * 255).astype(np.uint8)","aa848b6a":"print(img3d.shape)","a3c62537":"# The coronal view of the scan\nplt.imshow(img3d[len(img3d)\/\/2, :, :])","61a69471":"# The axial view of the scan\nplt.imshow(img3d[:, img3d.shape[1]\/\/2, :])","71fcc3bb":"maxs = []\nq25s = []\nfor slice_idx in tqdm(range(len(img3d))):\n    maxs.append(np.max(img3d[slice_idx, img3d.shape[1]\/\/2, :]))\n    q25s.append(np.quantile(img3d[slice_idx, img3d.shape[1]\/\/2, :], 0.25))\n    \nax = sns.lineplot(x = range(len(img3d)), y = maxs, color='orange', label='Max values')\nsns.lineplot(x = range(len(img3d)), y=q25s, color='blue', label='Q25 values')","24a513d0":"fig, ax = plt.subplots(figsize=(10, 3))\nax.imshow(img3d[:, img3d.shape[1]\/\/2, :])","08fc683d":"fig, ax = plt.subplots(figsize=(24, 24))\nax.imshow(img3d[:, img3d.shape[1]\/\/2, :])","2467dcae":"fig, ax = plt.subplots(figsize=(7, 7))\nax.imshow(img3d[:, img3d.shape[1]\/\/2, :], cmap='gray')","46206581":"# Does it exist with other colormaps?","64416653":"# Scenario 1: Read it WITHOUT applying voi_lut","54ecd596":"# Set up your config","bead5a7a":"# Is it a matplotlib issue? Try changing the figsize","328d0cff":"### Quickly plot max values for each slice on the axial view","dfba0e57":"### Quickly plot max values for each slice","a42573cd":"# Scenario 2: Repeat the same code, but applying VOI LUT.","16cc8542":"# Let's read in one dicom file to show you what I'm talking about.","a9ede6c6":"# What is going on with those bands?? only appears with voi_lut"}}