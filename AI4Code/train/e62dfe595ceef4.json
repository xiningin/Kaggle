{"cell_type":{"4d89e865":"code","20330617":"code","7e4976b1":"code","ee737989":"code","9192ebf3":"code","25bb546b":"code","ab78e8ac":"code","07eb1326":"code","1e10f892":"code","236fdd52":"code","24e430a3":"code","bf47b981":"code","0beb4614":"code","58f600c0":"code","480eff80":"code","f1bc9d70":"code","83a55914":"code","48d9b9b0":"code","f5b8f84b":"code","097e372d":"code","e98702e0":"code","f78e0187":"code","fb71d4de":"code","13fd722f":"code","54fdc92f":"code","a7473e72":"code","8697f29e":"code","d2d556ed":"code","7a9f70e8":"code","99e8427f":"code","67c77486":"markdown","16a8deb5":"markdown","7c6c2b04":"markdown","431eff0e":"markdown","157792c8":"markdown","66fffb98":"markdown","fbb8fae5":"markdown","88e623a0":"markdown","68531b73":"markdown","de577331":"markdown","404a451c":"markdown","94578650":"markdown","58ac645e":"markdown","6db958d5":"markdown","b5418798":"markdown","7fad0f29":"markdown","0e4962a5":"markdown","0c75a149":"markdown","0b3a3150":"markdown","4007447c":"markdown","8a208cdf":"markdown","f33b98b4":"markdown","09904134":"markdown","8e573cb3":"markdown","8316b739":"markdown","8599259e":"markdown","10d10507":"markdown","675a1a79":"markdown","6837766a":"markdown","f602b34b":"markdown","784e5c49":"markdown"},"source":{"4d89e865":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go \nfrom plotly.offline import init_notebook_mode\nimport datetime\n\ninit_notebook_mode(connected=True)","20330617":"pd.set_option('display.max_rows', 300)\npd.set_option('display.max_columns', 100)","7e4976b1":"import warnings\nwarnings.filterwarnings('ignore')","ee737989":"print(os.listdir('..\/input\/covid19-data-16mar20\/'))\nos.getcwd()\n\nfilename = '..\/input\/covid19-data-16mar20\/covid19_data_16mar20.csv'","9192ebf3":"# os.listdir()\n# filename = \"covid19_data_16mar20.csv\"\ncovid19 = pd.read_csv(filename, parse_dates=['observation_date'])\nprint(covid19.shape)","25bb546b":"covid19.head(3)","ab78e8ac":"min_date = covid19.observation_date.min(); max_date = covid19.observation_date.max();\n\nprint(\"Data start date: \", min_date)\nprint(\"Data end date:   \", max_date)\nprint(\"Period of data:  \", max_date - min_date)","07eb1326":"fig = px.line(covid19, x=\"observation_date\", y=\"confirmed\", color=\"country\", #line_group=\"country\", \n              hover_name=\"country\",\n              line_shape=\"spline\", render_mode=\"svg\",\n              title = 'Country wise confirmed cases - \"covid19\"')\nfig.show()","1e10f892":"fig = px.line(covid19, x=\"observation_date\", y=\"deaths\", color=\"country\", #line_group=\"country\", \n              hover_name=\"country\",\n              line_shape=\"spline\", render_mode=\"svg\",\n              title = 'Country wise death cases - \"covid19\"')\nfig.show()","236fdd52":"covid19_latest = covid19[covid19.observation_date==max_date]\ncovid19_latest.shape","24e430a3":"covid19_latest.sort_values(['confirmed'], ascending=False, inplace=True)\ncovid19_latest.reset_index(drop=True, inplace=True)\ncovid19_latest.head(10)","bf47b981":"# Exclude the top infected country - China \nfor country in covid19_latest.country[0:10]:\n#     print(country)\n    # Visualize trend for selected country\n    df_plot = covid19[covid19.country==country]\n    # print(df_plot)\n    fig = go.Figure()\n\n    fig.add_trace(go.Line(x=df_plot[\"observation_date\"], y=df_plot[\"confirmed\"], name=\"confirmed\"))\n    fig.add_trace(go.Line(x=df_plot[\"observation_date\"], y=df_plot[\"deaths\"], name=\"deaths\"))\n\n    fig.update_layout(template='none', title={ 'text': 'Confirmed \"covid19\" cases - [' + country + ']'}\n                      , xaxis_title = 'Date', yaxis_title='Counts')\n\n    fig.show()","0beb4614":"covid19_latest[covid19_latest.country=='India']","58f600c0":"df_plot = covid19[covid19.country=='India']\n# print(df_plot)\nfig = go.Figure()\n\nfig.add_trace(go.Line(x=df_plot[\"observation_date\"], y=df_plot[\"confirmed\"], name=\"confirmed\"))\nfig.add_trace(go.Line(x=df_plot[\"observation_date\"], y=df_plot[\"deaths\"], name=\"deaths\"))\n\nfig.update_layout(template='none', title={ 'text': 'Confirmed \"covid19\" cases - [India]'}\n                  , xaxis_title = 'Date', yaxis_title='Counts')\n\nfig.show()","480eff80":"covid19_latest.head(10)","f1bc9d70":"# process ml ready dataset to predict for n days\n# WAP for below tasks & process each country one by one.\n#1. select a country\n#2. get min_date & max_date for this country\n#3. get train dates for min_date to (max_date - n days)\n#4. get train labels for (min_date + n days) to max_date\n#5. convert train dates to numeric days (number), considering each country will have a different start day (day 1).\n\n#6. Include countries which are infected from more than 30 days.","83a55914":"# How many countries are infected from more than 30 days\ncountry_wise_count = pd.DataFrame(covid19.groupby(['country']).nunique()['observation_date'].reset_index())\ncountry_30_days = country_wise_count[country_wise_count.observation_date >= 30]\ncountry_30_days= country_30_days.sort_values('observation_date', ascending = False).reset_index(drop=True)\nprint(country_30_days.shape)","48d9b9b0":"# Function to create the training dataset with data from countries affected for more than 30 days.\ndef fn_create_train_dataset(covid_df, country_name = 'China', prediction_period = 7):\n    # Filter for given country\n    covid_df = covid_df[covid_df.country== country_name]\n\n    # Get min and max dates\n    min_date = covid_df.observation_date.min()\n    max_date = covid_df.observation_date.max()\n    \n    # Add response date to dataset\n    covid_df['response_date'] = covid_df.observation_date + datetime.timedelta(days=prediction_period)\n    \n    # Add numeric date index\n    # Since we only have one record for each day, adding an index would do.\n    covid_df = covid_df.reset_index(drop=True).reset_index()\n    covid_df =covid_df.rename(columns={'index':'date_index'})\n    \n    # Create response dataset\n    covid_df_response = covid_df[['observation_date',\n                                  'confirmed']].rename(columns={'observation_date':'response_date',\n                                                                'confirmed':'future_cases'})\n    \n    # Create training dataset\n    df_train = pd.merge(covid_df, covid_df_response, on ='response_date')\n    \n    # drop additional features\n    del [df_train['observation_date'], df_train['response_date'], df_train['country']]\n    \n    return(df_train)","f5b8f84b":"# Test above function\n# fn_creat_train_dataset(covid_df = covid19, country_name='China').head(2)","097e372d":"df_train = pd.DataFrame()\n\nfor country in country_30_days.country:\n    df_temp = fn_create_train_dataset(covid_df = covid19, \n                                     country_name = country)\n    df_train = df_train.append(df_temp)\n    \nprint(df_train.shape)\n# df_train.head()","e98702e0":"df_train_agg_30days = df_train.groupby('date_index').mean()[['confirmed', 'future_cases']].reset_index()\n\nX_30days = df_train_agg_30days[['confirmed']]\ny_30days = df_train_agg_30days['future_cases']","f78e0187":"# Visualize\ndf_train_agg_30days.plot(x = 'date_index', y = 'confirmed')\nplt.xlabel('Days')\nplt.ylabel('Avg Confirmed cases')\nplt.title('Aggregated Spread trend - Countries effected for > 30 days')\nplt.show()","fb71d4de":"df_train1 = pd.DataFrame()\nfor country in covid19['country'].unique():\n    df_temp = fn_create_train_dataset(covid_df = covid19, \n                                     country_name = country)\n    df_train1 = df_train1.append(df_temp)\n\n# aggregate on all available countries\ndf_train_agg_all = df_train1.groupby('date_index').mean()[['confirmed', 'future_cases']].reset_index()\n# print(df_train_agg_all.shape)\n# print(df_train_agg_all.head(2))\n\nX_all = df_train_agg_all[['confirmed']]\ny_all = df_train_agg_all['future_cases']","13fd722f":"# Visualize\ndf_train_agg_all.plot(x = 'date_index', y = 'confirmed')\nplt.xlabel('Days')\nplt.ylabel('Avg Confirmed cases')\nplt.title('Aggregated Spread trend - All countries')\nplt.show()","54fdc92f":"country_name = 'Germany'\n# Get data for a specific country\ndf_train_country= fn_create_train_dataset(covid_df = covid19, \n                                     country_name = country_name)\n\n# Train on specific country\nX_country = df_train_country[['confirmed']]\ny_country = df_train_country['future_cases']","a7473e72":"# Visualize\ndf_train_country.plot(x = 'date_index', y = 'confirmed')\nplt.xlabel('Days')\nplt.ylabel('Avg Confirmed cases')\nplt.title('Country specific spread trend - ' + country_name)\nplt.show()","8697f29e":"from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures","d2d556ed":"########## CHOOSE A DATASET HERE #######################\n# Fit polynomial regression to the train_30days dataset\n# X = X_30days\n# y = y_30days\n\n# Fit polynomial regression to the train_all dataset\n# X = X_all\n# y = y_all\n\n# Fit polynomial regression to country specific dataset\nX = X_country\ny = y_country\n\npoly_reg = PolynomialFeatures(degree = 4)\nX_poly = poly_reg.fit_transform(X)\npoly_reg.fit(X_poly, y)\nlin_reg = LinearRegression()\nlin_reg.fit(X_poly, y)\n\n\n# Visualize\nplt.scatter(X, y, color='red')\nplt.plot(X, lin_reg.predict(poly_reg.fit_transform(X)), color='blue')\nplt.title('Current vs predicted')\nplt.xlabel('Current Count')\nplt.ylabel('Predicted Count')\nplt.show()","7a9f70e8":"df_india =covid19[covid19.country == 'India']\n# X_india = df_india[['confirmed']]","99e8427f":"X_india = df_india.sort_values(['observation_date'], ascending=False).iloc[0:1, 2:3]\nlin_reg.predict(poly_reg.fit_transform(X_india))","67c77486":"## Predict confirmed cases in India after 7 days from 16th Mar'20","16a8deb5":"# Where is India today?","7c6c2b04":"> Clearly the exponential trends for these countries tells the story and those who are not affected yet, must act now to stay that way.","431eff0e":"> There are 30 such countries affected for more than 30 days.","157792c8":"> It is clearly visible that China had exponential increase in covid19 cases till 16th Feb'20. Since then decrease in the increment rate can be seen, probably after locking down some cities completely. Now the similar trends can be seen in other countries if we explore them separately.  ","66fffb98":"### Aggregate training dataset on countries affeceted for >30 days","fbb8fae5":"# Covid19 - Spread analysis \n**#Coronavirus**  \n\n**Author:** Manish Kumar Mishra\n\nExplore the trends of corona virus in various countries and see if we can find a pattern in how it spreads over time.  \nThe important thing is to understand is the long incubation period of this virus. A person detected today, was actually infected 12-14 days ago and he was acting as a virus carrier since then, causing various other people to get infected who all will be diagnosed after some day once the incubation period is complete.  \n\n\n**Objective:** The only objective of this analysis is to make sure that you understand the severity of **#coronavirus** spread trend and how fast it can reach us. We should all **#takecare** of ourselves & our families, and stop the virus to spread any further.  \n  \n \n---\n*References:*  \n*1. https:\/\/www.who.int\/*  \n*2. https:\/\/www.kaggle.com*  \n\n*Few data points may not be accurate as the numbers are changing quickly, but they would be representative. Some data points I have manually updated from different sources.*\n\n**[Updated with confirmed cases prediction for India after 7 days]**","88e623a0":"### Aggregate training dataset on all countries","68531b73":"---\n---\n\n# ML Data processing","de577331":"---  \n\n# Spread pattern for few most affected countries (top 10) \n\nWe saw the pattern for china. Let's see for some other most affected countries.  \nI am sure we would see similar exponentially increasing trends in all of them. Let's check out.  ","404a451c":"###  Country specific training data","94578650":"# Dataset as of 16th Mar'20","58ac645e":"### Load Data","6db958d5":"# Train ML Model","b5418798":"## How many countries are infected from more than 30 days?","7fad0f29":"# Countries with most no of \"covid19\" confirmed cases?","0e4962a5":"Creating 3 different training dataset to experiment with:  \n1. With countries affected for more than 30 days\n2. With all countries data\n3. With a specific country ","0c75a149":"---","0b3a3150":"---  \n### Load modules","4007447c":"I would like to be wrong in predicting above, and hope numbers stay on lesser side.   \nI also think that these are not big numbers, and an explosion may occur sooner if we don't act now to take care of ourselves and our families.\n\nThese numbers may also have effects of upcoming summer season and measure taken by Indian govt.   \n**Fingers crossed** \n\n#TakeCare #Coronavirus #Covid19","8a208cdf":"How does the aggregated training dataset look?","f33b98b4":"# How many countries infected yet?","09904134":"### Data duration ","8e573cb3":"> **Currently more than 148 countries are infected**  \n\n*I missed to capture few countries, so it's actually more.*","8316b739":"# Training dataset\n\n**Prediction Period:** 7 Days","8599259e":"> After running various experiments on few country based and aggregated datasets, it looks like we are likely to see a minimum of **750 to 1000 cases by 23rd Mar'20**.  ","10d10507":"---  \n# Country wise spread trend for \"covid19\"","675a1a79":"> India is at 40th position with 114 \"covid19\" confirmed cases & 2 deaths.","6837766a":"> As per WHO it all started from 22 Jan'20. It's been more than 54 days today.","f602b34b":"## Function to create training dataset","784e5c49":"> Similar trends can be seen in death cases across countries.  "}}