{"cell_type":{"48b1cfbe":"code","a547c6b6":"code","bd05ad92":"code","e5a0cda4":"code","2500f899":"code","c4a60972":"code","92900acb":"code","08b48f4d":"code","648ae2c3":"code","be6ad0d8":"code","9c8a7f74":"code","4db26326":"code","6e9cf436":"code","249eaad7":"code","c9184197":"code","623bfb1c":"code","1a87dfe9":"code","39130982":"code","d8064d2f":"code","9744200b":"code","4fa4bea1":"code","c7a6d0f5":"code","d43ba836":"code","96efd0d3":"code","a73e5e6d":"code","cb7944ad":"code","5fa13b36":"code","afde08fd":"code","9fadf00c":"code","8474930d":"code","afbe9748":"code","ee67267f":"code","e37cac19":"code","ba342f6e":"code","20b5972e":"code","9689026a":"code","4dd46f58":"code","f19e81df":"code","bfdf3a63":"code","095a3825":"code","1664bfb3":"code","e4c76796":"code","70cbefb1":"code","e1342506":"code","cd106502":"code","822ba878":"code","7d435d50":"code","7da6c9f5":"code","1eb9bd8a":"code","11aea988":"code","59982ee2":"code","f1467399":"code","e61397e1":"code","ce614ae5":"code","ea9f3661":"code","3304110a":"code","983cbc80":"code","be242ae0":"code","98b96c69":"code","0019c76a":"code","cd14ff24":"code","fe81300c":"code","45dc2bbb":"code","9ede0b8f":"code","f9722d85":"code","aee80d2b":"code","15491d2f":"code","044ddc51":"code","1fc6f37f":"code","b4683290":"code","99eef29c":"code","9f17b83b":"code","00af250d":"code","798a5744":"code","a42d84aa":"code","875de04f":"code","fe1be174":"code","4de9e74e":"code","3e7e0a3e":"code","ff1a2ee1":"code","fc513072":"code","5d9096d2":"code","232810f1":"code","9866433f":"code","cbbf1b4a":"code","5f461545":"code","bb816e10":"code","380b82eb":"code","0c448422":"code","09f81369":"code","b59727b0":"code","c46812d4":"code","3ae83a00":"code","554351de":"code","47be0be9":"code","5b2cb942":"code","d2717769":"code","be5e2aca":"code","f2262d17":"code","021068de":"code","be9796fe":"code","0b07297b":"code","4c6279ac":"code","bcaa2816":"code","7464b1e7":"code","e016a317":"code","50a94bed":"code","645a4754":"code","31fe209d":"code","21e44ec2":"code","49ae6001":"code","130d112f":"code","154556c9":"code","320b68af":"code","cf26ed75":"code","2123f8ef":"code","a2cfe223":"code","96ed40d1":"code","27039e76":"code","22340344":"code","e502b562":"code","bd80fbd8":"code","c600a9a4":"code","1149305f":"code","2ab1ff09":"code","e2b6047b":"code","25f1cd5e":"code","6d44eca1":"code","13731445":"code","88465b66":"code","fdf66e4c":"code","155f8932":"code","ef28103e":"code","d6c13f84":"code","2724ac5c":"code","e10f1549":"code","62aa3115":"code","aad4f7fc":"code","7f3ac223":"code","b2712da6":"code","d3b11e18":"code","6441c470":"code","8fc9c8bd":"code","0603d293":"code","c091975f":"code","a91d6054":"code","7a9d7fd5":"code","431aa405":"code","f48ee026":"code","504dcd6a":"code","19ce9559":"code","31f2f2d4":"code","50000c84":"code","416c17c0":"code","fe853916":"code","67ebbc02":"code","b7a1f601":"code","ea901df0":"code","51adb497":"code","6bcad2bb":"code","f333257a":"code","7699a477":"code","db527f56":"code","2161bee3":"code","5279e6d5":"code","c9adf644":"markdown","79373500":"markdown","80e95208":"markdown","47857856":"markdown","16a6ba59":"markdown","2f021058":"markdown","f69d6467":"markdown","7255077e":"markdown","f36e8778":"markdown","2e4e962f":"markdown","74a2092c":"markdown","930df6f0":"markdown","db8e5d52":"markdown","872d35fd":"markdown","d951c6db":"markdown","d78f1c9e":"markdown","a7b97c87":"markdown","8b8f09b0":"markdown","d385354d":"markdown","dbbd5678":"markdown","6c06beea":"markdown","060998e0":"markdown","b90c27dd":"markdown","0ab92cf8":"markdown","9a7006b1":"markdown","9c254428":"markdown","946c654b":"markdown","6f130578":"markdown","bf78361e":"markdown","78ddb39e":"markdown","44608956":"markdown","374e64f6":"markdown","3647b935":"markdown","2408ae91":"markdown","7b4abc28":"markdown","507b3778":"markdown","4bec9abf":"markdown","1097d5a3":"markdown","21423739":"markdown","52bc00bf":"markdown","8286dda3":"markdown","bd50d9f0":"markdown","fbdd710c":"markdown","14b1e66c":"markdown","575cd057":"markdown","c502f56d":"markdown","e9381d50":"markdown","84361fa3":"markdown","33f52f75":"markdown","95c9f0a7":"markdown","45f7ff29":"markdown","848db437":"markdown","6ddb1b63":"markdown","445d6c44":"markdown","68c970ff":"markdown","17526b4b":"markdown","7f3f2d8f":"markdown","f1622e88":"markdown","0c93fb6b":"markdown","3a383950":"markdown","3ed574f5":"markdown","ca725022":"markdown","d8272dc7":"markdown","6befd0dd":"markdown","213a1024":"markdown","3d43c5f8":"markdown","79f25d4b":"markdown","c1c79f6a":"markdown","a18f414e":"markdown"},"source":{"48b1cfbe":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a547c6b6":"df = pd.read_excel('..\/input\/online-retail-dataset\/Online Retail.xlsx')","bd05ad92":"df.head()","e5a0cda4":"df.info()","2500f899":"df[['InvoiceNo', 'Quantity', 'UnitPrice']].head(20)","c4a60972":"df.groupby('InvoiceNo').count()[['Quantity', 'UnitPrice']]","92900acb":"df['InvoiceNo'].nunique()","08b48f4d":"df[['InvoiceNo', 'Quantity', 'UnitPrice']].describe()","648ae2c3":"df[df['UnitPrice'] < 0]","be6ad0d8":"df[df['Quantity'] < 0]","9c8a7f74":"df[df['Quantity'] > 0]","4db26326":"df['InvoiceNo'] = df['InvoiceNo'].apply(str)","6e9cf436":"df[(df['Quantity'] < 0) & (df['InvoiceNo'].str.contains('C'))]","249eaad7":"df[(df['UnitPrice'] < 0) & ~(df['InvoiceNo'].str.contains('C'))]","c9184197":"df[(df['Quantity'] < 0) & ~(df['InvoiceNo'].str.contains('C'))]","623bfb1c":"df[(df['Quantity'] < 0) & ~(df['InvoiceNo'].str.contains('C'))]['CustomerID'].value_counts(dropna = False)","1a87dfe9":"df['CustomerID'].value_counts(dropna = False)","39130982":"df = df.dropna(subset = ['CustomerID'])","d8064d2f":"df.isnull().sum()","9744200b":"df.groupby(['CustomerID', 'InvoiceNo']).count()","4fa4bea1":"df.groupby('CustomerID').count()[['InvoiceNo']]","c7a6d0f5":"df[df['CustomerID'] == 12347.0]","d43ba836":"df.groupby(['CustomerID']).count()['StockCode']","96efd0d3":"df.groupby(['InvoiceNo']).count()['StockCode']","a73e5e6d":"df.groupby(['StockCode']).nunique()['CustomerID']","cb7944ad":"df[df['StockCode'] == 10002].shape","5fa13b36":"df[df['StockCode'] == 10002]","afde08fd":"df.groupby('Country').describe()","9fadf00c":"df['Total Price'] = df['Quantity'] * df['UnitPrice']","8474930d":"df.groupby('Country').sum()[['Total Price']].T","afbe9748":"plt.figure(figsize=(12,10))\ndf.groupby('Country').count()['CustomerID'].plot.barh()","ee67267f":"plt.figure(figsize=(12,10))\ndf.groupby('Country').sum()['Total Price'].plot.barh()","e37cac19":"df_uk = df[df['Country'] == 'United Kingdom']","ba342f6e":"df_uk.drop('Country', axis = 1, inplace = True)","20b5972e":"df_uk.groupby(['StockCode', 'Description']).sum()[['Quantity']].sort_values('Quantity', ascending=False).head()","9689026a":"df_uk.drop(['StockCode', 'Description', 'Quantity', 'UnitPrice'], axis = 1, inplace = True)","4dd46f58":"df_uk.head()","f19e81df":"df_uk.info()","bfdf3a63":"df_uk.head(15)","095a3825":"df_uk.groupby(['InvoiceNo', 'InvoiceDate']).agg({'CustomerID' : 'min', 'Total Price' : 'sum'})","1664bfb3":"df_uk = df_uk.groupby(['InvoiceNo', 'InvoiceDate']).agg({'CustomerID' : 'min', 'Total Price' : 'sum'})","e4c76796":"df_uk.reset_index(inplace = True)","70cbefb1":"df_uk","e1342506":"df_uk[df_uk['InvoiceNo'] == '536591']","cd106502":"df[df['InvoiceNo'] == '536591']","822ba878":"df_uk['Date'] = '2011-12-19'","7d435d50":"df_uk['Date'] = pd.to_datetime(df_uk['Date'])","7da6c9f5":"df_uk['InvoiceDate'] = pd.to_datetime(df_uk['InvoiceDate'].dt.date)","1eb9bd8a":"df_uk.head()","11aea988":"df_uk['Days'] = (df_uk['Date'] - df_uk['InvoiceDate']).dt.days","59982ee2":"df_uk.head()","f1467399":"df_uk.groupby('CustomerID').min()['Days']","e61397e1":"df_uk.head()","ce614ae5":"df_uk.drop(['InvoiceDate', 'Date'], axis = 1, inplace = True)","ea9f3661":"df_uk","3304110a":"df_uk['Cancel'] = df_uk['InvoiceNo'].str.extract('(\\w)')","983cbc80":"df_uk['Cancel'].value_counts(dropna = False)","be242ae0":"df_uk['Cancel'] = df_uk['Cancel'].map({'5':1,  'C':-1})","98b96c69":"df_uk","0019c76a":"df_uk.groupby('CustomerID').agg({'Days' : 'min', 'Cancel' : 'sum', 'Total Price' : 'sum'})","cd14ff24":"df_uk = df_uk.groupby('CustomerID').agg({'Days' : 'min', 'Cancel' : 'sum', 'Total Price' : 'sum'})","fe81300c":"df_uk = df_uk.rename(columns = {'Days':'Recency', 'Cancel':'Frequency', 'Total Price':'Monetary'})","45dc2bbb":"df_uk","9ede0b8f":"plt.figure(figsize=(12,10))\nsns.distplot(df_uk['Recency'])","f9722d85":"df_uk[df_uk.duplicated()]","aee80d2b":"plt.figure(figsize=(12,10))\nsns.distplot(df_uk['Frequency'])","15491d2f":"plt.figure(figsize=(12,10))\nsns.distplot(df_uk['Monetary'])","044ddc51":"df_uk = df_uk[(df_uk > 0).all(1)]","1fc6f37f":"df_uk[df_uk['Monetary'] < 0 ]","b4683290":"df_uk","99eef29c":"df_uk[\"RecencyScore\"] = pd.qcut(df_uk[\"Recency\"],5,labels = [5,4,3,2,1])\ndf_uk[\"MonetaryScore\"] = pd.qcut(df_uk['Monetary'], 5, labels = [1, 2, 3, 4, 5])\ndf_uk[\"FrequencyScore\"] = pd.qcut(df_uk[\"Frequency\"].rank(method=\"first\"),5, labels=[1,2,3,4,5])","9f17b83b":"df_rfm = df_uk.drop(['Recency', 'Frequency', 'Monetary'], axis = 1)","00af250d":"df_uk = df_uk.drop(['RecencyScore', 'MonetaryScore', 'FrequencyScore'], axis = 1)","798a5744":"df_rfm","a42d84aa":"df_rfm[\"RFM_Score\"] = df_rfm['RecencyScore'].astype(str) + df_rfm['FrequencyScore'].astype(str) + df_rfm['MonetaryScore'].astype(str)","875de04f":"df_rfm","fe1be174":"df_rfm","4de9e74e":"df_rfm[df_rfm['RFM_Score'] == '111']","3e7e0a3e":"def segment (df_rfm):\n    if df_rfm['RFM_Score'] == '555':\n        return 'Best Customers'\n    if df_rfm['RFM_Score'] == '111':\n        return 'Lost Cheap Customers'\n    if df_rfm['RecencyScore'] == 1:\n        return 'Lost Customers'\n    if df_rfm['RecencyScore'] == 2:\n        return 'Almost Lost Customers'\n    if df_rfm['RecencyScore'] == 3:\n        return 'Almost Lost Customers'\n    if df_rfm['MonetaryScore'] == 5:\n        return 'Big Spenders'\n    if df_rfm['FrequencyScore'] == 5:\n        return 'Loyal Customers'\n    if (df_rfm['RecencyScore'] > 3) & (df_rfm['FrequencyScore'] < 2):\n        return 'Focus Group'\n    return 'Customers'","ff1a2ee1":"df_rfm.apply(segment, axis =1)","fc513072":"df_rfm['Segments'] = df_rfm.apply(segment, axis =1)","5d9096d2":"df_rfm","232810f1":"df_rfm.groupby('Segments').count()","9866433f":"df_rfm[df_rfm['Segments'] == 'Customers']","cbbf1b4a":"df_uk","5f461545":"df_uk.corr()","bb816e10":"sns.heatmap(df_uk.corr(), annot = True)","380b82eb":"df_rfm['RecencyScore'] = pd.to_numeric(df_rfm['RecencyScore'])\ndf_rfm['MonetaryScore'] = pd.to_numeric(df_rfm['MonetaryScore'])\ndf_rfm['FrequencyScore'] = pd.to_numeric(df_rfm['FrequencyScore'])","0c448422":"df_rfm.corr()","09f81369":"sns.heatmap(df_rfm.corr(), annot = True)","b59727b0":"sns.pairplot(df_uk)","c46812d4":"plt.figure(figsize=(12,10))\nplt.subplot(3, 1, 1); sns.distplot(df_uk['Recency'])\nplt.subplot(3, 1, 2); sns.distplot(df_uk['Frequency'])\nplt.subplot(3, 1, 3); sns.distplot(df_uk['Monetary'])\nplt.show()","3ae83a00":"df_log = (np.log(df_uk))","554351de":"sns.pairplot(df_log)","47be0be9":"plt.figure(figsize=(12,10))\nplt.subplot(3, 1, 1); sns.distplot(df_uk['Recency'])\nplt.subplot(3, 1, 2); sns.distplot(df_uk['Frequency'])\nplt.subplot(3, 1, 3); sns.distplot(df_uk['Monetary'])\nplt.show()","5b2cb942":"plt.figure(figsize=(12,10))\nplt.subplot(3, 1, 1); sns.distplot(df_log['Recency'])\nplt.subplot(3, 1, 2); sns.distplot(df_log['Frequency'])\nplt.subplot(3, 1, 3); sns.distplot(df_log['Monetary'])\nplt.show()","d2717769":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\ndf_log2 = scaler.fit_transform(df_log)\n\ndf_scale = pd.DataFrame(df_log2)\ndf_scale.columns = df_uk.columns","be5e2aca":"plt.figure(figsize=(12,10))\nplt.subplot(3, 1, 1); sns.distplot(df_scale['Recency'])\nplt.subplot(3, 1, 2); sns.distplot(df_scale['Frequency'])\nplt.subplot(3, 1, 3); sns.distplot(df_scale['Monetary'])\nplt.show()","f2262d17":"from sklearn.cluster import KMeans","021068de":"pip install pyclustertend","be9796fe":"from pyclustertend import hopkins","0b07297b":"#from sklearn.preprocessing import StandardScaler","4c6279ac":"#scaler = StandardScaler()\n#df_log2 = scaler.fit_transform(df_log)","bcaa2816":"#df_scale = pd.DataFrame(df_log2)\n#df_scale.columns = df_uk.columns","7464b1e7":"df_log","e016a317":"df_scale","50a94bed":"hopkins(df_uk, df_uk.shape[0])","645a4754":"hopkins(df_log, df_log.shape[0])","31fe209d":"hopkins(df_scale, df_scale.shape[0])","21e44ec2":"ssd = []\nK = range(1,10)\nfor k in K:\n    kmeans = KMeans(n_clusters = k).fit((df_scale))\n    ssd.append(kmeans.inertia_)","49ae6001":"plt.plot(K, ssd, \"bx-\")\nplt.xlabel(\"K\")\nplt.ylabel(\"Inertia\")","130d112f":"from yellowbrick.cluster import KElbowVisualizer","154556c9":"kmeans = KMeans()\nvisu = KElbowVisualizer(kmeans, k = (1,10))\nvisu.fit(df_scale)\nvisu.poof()","320b68af":"kmeans = KMeans(n_clusters = 3).fit(df_scale)","cf26ed75":"labels = kmeans.labels_","2123f8ef":"df_scale['cluster_id'] = labels","a2cfe223":"df_scale['cluster_id'].value_counts()","96ed40d1":"from sklearn.metrics import silhouette_samples,silhouette_score","27039e76":"print(f'Silhouette Score(n=3): {silhouette_score(df_scale, labels)}')","22340344":"plt.figure(figsize=(15,9))\nsns.scatterplot(x='Frequency', y='Monetary', hue='cluster_id', data=df_scale, palette=['green','yellow', 'red'], legend='full')","e502b562":"sns.boxplot('cluster_id', 'Recency', data = df_scale)","bd80fbd8":"sns.boxplot('cluster_id', 'Monetary', data = df_scale)","c600a9a4":"sns.boxplot('cluster_id', 'Frequency', data = df_scale)","1149305f":"df_scale.set_index(df_rfm.index, inplace = True)","2ab1ff09":"df_rfm['Labels'] = df_scale['cluster_id']","e2b6047b":"df_rfm","25f1cd5e":"df_rfm[df_rfm['Labels'] == 1]","6d44eca1":"df_rfm[df_rfm['Labels'] == 0]","13731445":"df_rfm[df_rfm['Labels'] == 2]","88465b66":"kmeans = KMeans(n_clusters = 3).fit(df_log)\n\nlabels = kmeans.labels_\n\ndf_log['cluster_id'] = labels\n\ndf_log['cluster_id'].value_counts()\n\nfrom sklearn.metrics import silhouette_samples,silhouette_score\n\nprint(f'Silhouette Score(n=3): {silhouette_score(df_log, labels)}')\n\nplt.figure(figsize=(15,9))\nsns.scatterplot(x='Frequency', y='Monetary', hue='cluster_id', data=df_log, palette=['green','yellow', 'red'], legend='full')","fdf66e4c":"df_rfm['Clusters'] = df_log['cluster_id']","155f8932":"df_rfm[df_rfm['Clusters'] == 1]","ef28103e":"df_rfm[df_rfm['Clusters'] == 0]","d6c13f84":"df_rfm[df_rfm['Clusters'] == 2]","2724ac5c":"df_last = df_rfm.reset_index()\ndf_last.head(1)","e10f1549":"df_last.groupby('Segments')['CustomerID'].nunique().sort_values(ascending = False).reset_index()","62aa3115":"segment = df_last.groupby('Segments')['CustomerID'].nunique().sort_values(ascending = False).reset_index()","aad4f7fc":"import squarify\nimport matplotlib\ncmap = plt.cm.YlOrRd\nmini = min(segment['CustomerID'])\nmaxi = max(segment['CustomerID'])\nnorm = matplotlib.colors.Normalize(vmin = mini, vmax = maxi)\ncolors = [cmap(norm(value)) for value in segment['CustomerID']]\nfig = plt.gcf()\nax = fig.add_subplot()\nfig.set_size_inches(14, 10)\nsquarify.plot(sizes = segment['CustomerID'],\n             label = segment['Segments'], alpha = 1, color=colors)\nplt.axis('off')\nplt.tight_layout()","7f3ac223":"df_c = df","b2712da6":"df_c","d3b11e18":"df_c['Month'] = pd.to_datetime((df['InvoiceDate'].dt.year).apply(str) + '-' + (df['InvoiceDate'].dt.month).apply(str) + '-01')","6441c470":"df_c.head(2)","8fc9c8bd":"grouping = df_c.groupby('CustomerID')['Month']","0603d293":"grouping.head()","c091975f":"df_c['CohortMonth'] = grouping.transform('min')\ndf_c.head()","a91d6054":"def get_date_int(df, column):\n    year = df[column].dt.year\n    month = df[column].dt.month\n    date = df[column].dt.date\n    return year, month, date","7a9d7fd5":"Invoice_Year, Invoice_Month, _ = get_date_int(df_c, 'Month')","431aa405":"Cohort_Year, Cohort_Month , _ = get_date_int(df_c, 'CohortMonth')","f48ee026":"Year_Diff = Invoice_Year - Cohort_Year\nMonth_Diff = Invoice_Month - Cohort_Month","504dcd6a":"df_c['CohortIndex'] = Year_Diff*12 + Month_Diff +1\ndf_c","19ce9559":"df_c['CohortIndex'].value_counts()","31f2f2d4":"cohort_data = df_c.groupby(['CohortMonth', 'CohortIndex']).nunique()[['CustomerID']]\ncohort_data = cohort_data.reset_index()\ncohort_data","50000c84":"print(df_c.shape) #output: 91, 3\nprint(cohort_data.shape)#output: 541909, 11","416c17c0":"cohort_counts = cohort_data.pivot(index=\"CohortMonth\",\n                                  columns=\"CohortIndex\",\n                                  values=\"CustomerID\")\nretention = cohort_counts\nretention","fe853916":"cohort_sizes = cohort_counts.iloc[:,0]\ncohort_sizes","67ebbc02":"retention = cohort_counts.divide(cohort_sizes, axis=0)\nretention","b7a1f601":"retention.round(3)*100","ea901df0":"plt.figure(figsize=(10,8))\nplt.title(\"Retention Rate\")\nsns.heatmap(data=retention,\n           annot=True,\n           fmt='.0%',\n           vmin=0.0,\n           vmax=0.5,\n           cmap=\"BuGn\")\nplt.show()","51adb497":"df_c","6bcad2bb":"cohort_q = df_c.groupby(['CohortMonth', 'CohortIndex']).mean()[['Quantity']]\ncohort_q = cohort_q.reset_index()\ncohort_q","f333257a":"cohort_counts = cohort_q.pivot(index=\"CohortMonth\",\n                                  columns=\"CohortIndex\",\n                                  values=\"Quantity\")\nretention = cohort_counts\nretention","7699a477":"plt.figure(figsize=(10,8))\nplt.title(\"Average Quantity\")\nsns.heatmap(data=retention,\n           annot=True,\n            fmt='.2f',\n           cmap=\"BuGn\")\nplt.show()","db527f56":"cohort_s = df_c.groupby(['CohortMonth', 'CohortIndex']).mean()[['Total Price']]\ncohort_s = cohort_s.reset_index()\ncohort_s","2161bee3":"cohort_counts = cohort_s.pivot(index=\"CohortMonth\",\n                                  columns=\"CohortIndex\",\n                                  values=\"Total Price\")\nretention = cohort_counts\nretention","5279e6d5":"plt.figure(figsize=(10,8))\nplt.title(\"Average Sales\")\nsns.heatmap(data=retention,\n           annot=True,\n            fmt='.2f',\n           cmap=\"BuGn\")\nplt.show()","c9adf644":"1. You can use the logarithm method to normalize the values in a column.","79373500":"2. Visualize number of customer per country","80e95208":"### Create Cancel Column for 'C' in InvoiceNo. So this column will hekp for Frequency, C = -1, Other = 1.","47857856":"[Silhouette Coefficient](http:\/\/scikit-learn.org\/stable\/auto_examples\/cluster\/plot_kmeans_silhouette_analysis.html)","16a6ba59":"2. What are the most popular products that are bought in the UK?","2f021058":"## Create the 2nd Cohort: Average Quantity Sold","f69d6467":"# 2. RFM Analysis","7255077e":"Create Heatmap and evaluate the results ","f36e8778":"### ii. What does the letter \"C\" in the InvoiceNo column mean?","2e4e962f":"### vi. Explore Customers by Country","74a2092c":"### Creating RFM","930df6f0":"3. Visualize total cost per country","db8e5d52":"Use the variables created above to calcualte the difference in days and store them in cohort Index column.","872d35fd":"### vii. Explore the UK Market\n","d951c6db":"#### The UK not only has the most sales revenue, but also the most customers. Since the majority of this data set contains orders from the UK, we can explore the UK market further by finding out what products the customers buy together and any other buying behaviors to improve our sales and targeting strategy.","d78f1c9e":"1. Create df_uk DataFrame","a7b97c87":"# 5. Create Cohort & Conduct Cohort Analysis\n[Cohort Analysis](https:\/\/medium.com\/swlh\/cohort-analysis-using-python-and-pandas-d2a60f4d0a4d) is specifically useful in analyzing user growth patterns for products. In terms of a product, a cohort can be a group of people with the same sign-up date, the same usage starts month\/date, or the same traffic source.\nCohort analysis is an analytics method by which these groups can be tracked over time for finding key insights. This analysis can further be used to do customer segmentation and track metrics like retention, churn, and lifetime value.\n\nFor e-commerce organizations, cohort analysis is a unique opportunity to find out which clients are the most valuable to their business. by performing Cohort analysis you can get the following answers to the following questions:\n\n- How much effective was a marketing campaign held in a particular time period?\n- Did the strategy employ to improve the conversion rates of Customers worked?\n- Should I focus more on retention rather than acquiring new customers?\n- Are my customer nurturing strategies effective?\n- Which marketing channels bring me the best results?\n- Is there a seasonality pattern in Customer behavior?\n- Along with various performance measures\/metrics for your organization.","8b8f09b0":"1. What's the total revenue per country?","d385354d":"Since the customer ID's are missing, lets assume these orders were not made by the customers already in the data set because those customers already have ID's. \n\nWe also don't want to assign these orders to those customers because this would alter the insights we draw from the data. \n","dbbd5678":"### i. Pivot Cohort and Cohort Retention","6c06beea":"## Future Engineering","060998e0":"**[RFM](https:\/\/www.putler.com\/rfm-analysis\/) (Recency, Frequency, Monetary) Analysis** is a customer segmentation technique for analyzing customer value based on past buying behavior. RFM analysis was first used by the direct mail industry more than four decades ago, yet it is still an effective way to optimize your marketing.\n<br>\n<br>\nOur goal in this Notebook is to cluster the customers in our data set to:\n - Recognize who are our most valuable customers\n - Increase revenue\n - Increase customer retention\n - Learn more about the trends and behaviors of our customers\n - Define customers that are at risk\n\nWe will start with **RFM Analysis** and then compliment our findings with predictive analysis using **K-Means Clustering Algorithms.**\n\n- RECENCY (R): Time since last purchase\n- FREQUENCY (F): Total number of purchases\n- MONETARY VALUE (M): Total monetary value\n\n\n\n\nBenefits of RFM Analysis\n\n- Increased customer retention\n- Increased response rate\n- Increased conversion rate\n- Increased revenue\n\nRFM Analysis answers the following questions:\n - Who are our best customers?\n - Who has the potential to be converted into more profitable customers?\n - Which customers do we need to retain?\n - Which group of customers is most likely to respond to our marketing campaign?\n ","b90c27dd":"### iii. Data Normalization","0ab92cf8":"For e-commerce organisations, cohort analysis is a unique opportunity to find out which clients are the most valuable to their business. by performing Cohort analysis you can get answers to following questions:\n\n- How much effective was a marketing campaign held in a particular time period?\n- Did the strategy employed to improve the conversion rates of Customers worked?\n- Should I focus more on retention rather than acquiring new customers?\n- Are my customer nurturing strategies effective?\n- Which marketing channels bring me the best results?\n- Is there a seasoanlity pattern in Customer behahiour?","9a7006b1":"When we filter canceled orders by Quantity> 0 or filter non-canceled orders by Quantity <0 nothing returns, this confirms that negative values mean the order was canceled. So lets find out how many orders were cancelled?","9c254428":"# #Project Structures\n\n- Data Cleaning & Exploratory Data Analysis\n- RFM Analysis\n- Customer Segmentation\n- Applying K-Means Clustering\n- Create Cohort and Conduct Cohort Analysis","946c654b":"Now that we have our customers segmented into 6 different categories, we can gain further insight into customer behavior by using predictive models in conjuction with out RFM model.\nPossible algorithms include **Logistic Regression**, **K-means Clustering**, and **K-nearest Neighbor**. We will go with [K-Means](https:\/\/towardsdatascience.com\/understanding-k-means-clustering-in-machine-learning-6a6e67336aa1) since we already have our distinct groups determined. K-means has also been widely used for market segmentation and has the advantage of being simple to implement.","6f130578":"### v. Explore the Orders\n","bf78361e":"## K-Means Implementation\n\nFor k-means, you have to set k to the number of clusters you want, but figuring out how many clusters is not obvious from the beginning. We will try different cluster numbers and check their [silhouette coefficient](http:\/\/scikit-learn.org\/stable\/auto_examples\/cluster\/plot_kmeans_silhouette_analysis.html). The silhouette coefficient for a data point measures how similar it is to its assigned cluster from -1 (dissimilar) to 1 (similar). \n<br>\n<br>\n**Note**: K-means is sensitive to initializations because they are critical to qualifty of optima found. Thus, we will use smart initialization called \"Elbow Method\".","78ddb39e":"[The Elbow Method](https:\/\/en.wikipedia.org\/wiki\/Elbow_method_(clustering) ","44608956":"Let's see how this compares to the number of unique products per customer.","374e64f6":"### iii. Handling Missing Values","3647b935":"## Data Pre-Processing and Exploring","2408ae91":"## Create 1st Cohort: User number & Retention Rate","7b4abc28":"Businesses have this ever-lasting urge to understand their customers. The better you understand the customer, the better you serve them, and the higher the financial gain you receive from that customer. Since the dawn of trade, this process of understanding customers for a strategic gain has been there practiced and this task is known majorly as [Customer Segmentation](https:\/\/clevertap.com\/blog\/rfm-analysis\/).\nWell as the name suggests, Customer Segmentation could segment customers according to their precise needs. Some of the common ways of segmenting customers are based on their Recency-Frequency-Monatory values, their demographics like gender, region, country, etc, and some of their business-crafted scores. You will use Recency-Frequency-Monatory values for this case.\n\nIn this section, you will create an RFM Segmentation Table where you segment your customers by using the RFM table. For example, you can label the best customer as \"Big Spenders\" and the lost customer as \"Lost Customer\".","507b3778":"# 3. Customer Segmentation with RFM Scores","4bec9abf":"## Calculate RFM Scoring\n\nThe simplest way to create customer segments from an RFM model is by using **Quartiles**. We will assign a score from 1 to 4 to each category (Recency, Frequency, and Monetary) with 4 being the highest\/best value. The final RFM score is calculated by combining all RFM values. For Customer Segmentation, you will use the df_rfm data set resulting from the RFM analysis.\n<br>\n<br>\n**Note**: Data can be assigned into more groups for better granularity, but we will use 4 in this case.","1097d5a3":"If the invoice number starts with the letter \"C\", it means the order was cancelled. Or those who abandon their order.","21423739":"#### 9288 or about 36% of the orders were cancelled. Looking deeper into why these orders were cancelled may prevent future cancellations. Now let's find out what a negative UnitPrice means.\n","52bc00bf":"You will use this function to extract the integer values for Invoice as well as Cohort Date in 3 seperate series for each of the two columns","8286dda3":"### i. Pivot Cohort and Cohort Retention","bd50d9f0":"### We will use df_uk for K Means. Not df_rfm, just checking.","fbdd710c":"# 1. Data Cleaning & Exploratory Data Analysis","14b1e66c":"### i. Extract the Month of the Purchase\nFirst we will create a function, which takes any date and returns the formatted date with day value as 1st of the same month and Year.","575cd057":"# 3. Applying K-Means Clustering","c502f56d":"### Drop the negative values, because there are some negative frequency and monetary because of data. These data will harm our analysis, and we can't implement log transformation and scaling to the data","e9381d50":"2. Plot normalized data with scatter matrix or pairplot. Also evaluate results.","84361fa3":"### i. Define the Optimal Number of Clusters","33f52f75":"### Make group with InvoiceNo and InvoiceDate for dataframe, and use aggragate functions to create RFM","95c9f0a7":"1. Divide the df_rfm into quarters","45f7ff29":"Now we will use the function created above to convert all the invoice dates into respective month date format.","848db437":"### i. Pivot Cohort and Cohort Retention","6ddb1b63":"### ii. Visualize analysis of cohort 3 using seaborn and matplotlib modules","445d6c44":"## Import Modules, Load Data & Data Review","68c970ff":"### ii. Calculating time offset in Months i.e. Cohort Index:\nCalculating time offset for each transaction will allows us to report the metrics for each cohort in a comparable fashion.\nFirst, you will create 4 variables that capture the integer value of years, months for Invoice and Cohort Date using the get_date_int() function which you'll create it below.","17526b4b":"### i. Take a look at relationships between InvoiceNo, Quantity and UnitPrice columns.","7f3f2d8f":"### ii. Visualize analysis of cohort 2 using seaborn and matplotlib modules","f1622e88":"Using customer segmentation categories found [here](http:\/\/www.blastam.com\/blog\/rfm-analysis-boosts-sales) we can formulate different marketing strategies and approaches for customer engagement for each type of customer.\n\nNote: The author in the article scores 1 as the highest and 4 as the lowest","0c93fb6b":"### ii. Visualize analysis of cohort 1 using seaborn and matplotlib modules","3a383950":"1. Find the unique number of InvoiceNo  per customer","3ed574f5":"## Create the 3rd Cohort: Average Sales\n","ca725022":"### We will continue analyzing the UK transactions with customer segmentation.","d8272dc7":"2. Visualize Cluster Id vs Recency, Cluster Id vs Frequency and Cluster Id vs Monetary using Box plot. Also evaluate the results. ","6befd0dd":"### i. Creating the RFM Segmentation Table\n","213a1024":"### iv. Clean the Data from the Noise and Missing Values","3d43c5f8":"### We need to apply scaling to the data. Log transformation is for make the data normal. With scaling we will make all data standart normal. For distances, for K Means Algorithm.","79f25d4b":"### We will apply K Means to the df_log to check the difference.","c1c79f6a":"### iv. Assign the Label","a18f414e":"# Determines\n\nUsing the [Online Retail dataset](https:\/\/archive.ics.uci.edu\/ml\/datasets\/Online+Retail) from the UCI Machine Learning Repository for exploratory data analysis, ***Customer Segmentation***, ***RFM Analysis***, ***K-Means Clustering*** and ***Cohort Analysis***.\n\nThis is a transnational data set which contains all the transactions occurring between 01\/12\/2010 and 09\/12\/2011 for a UK-based and registered non-store online retail. The company mainly sells unique all-occasion gifts. Many customers of the company are wholesalers.\n\nFeature Information:\n\n**InvoiceNo**: Invoice number. *Nominal*, a 6-digit integral number uniquely assigned to each transaction. If this code starts with letter 'c', it indicates a cancellation. \n<br>\n**StockCode**: Product (item) code. *Nominal*, a 5-digit integral number uniquely assigned to each distinct product.\n<br>\n**Description**: Product (item) name. *Nominal*. \n<br>\n**Quantity**: The quantities of each product (item) per transaction. *Numeric*.\n<br>\n**InvoiceDate**: Invoice Date and time. *Numeric*, the day and time when each transaction was generated.\n<br>\n**UnitPrice**: Unit price. *Numeric*, Product price per unit in sterling.\n<br>\n**CustomerID**: Customer number. *Nominal*, a 5-digit integral number uniquely assigned to each customer.\n<br>\n**Country**: Country name. *Nominal*, the name of the country where each customer resides.\n\n\n---\n\n\nFirst of all, to observe the structure of the data and missing values, you can use exploratory data analysis and data visualization techniques.\n\nYou must do descriptive analysis. Because you must understand the relationship of the features to each other and clear the noise and missing values in the data. After that, the data set will be ready for RFM analysis.\n\nBefore starting the RFM Analysis, you will be asked to do some analysis regarding the distribution of *Orders*, *Customers* and *Countries*. These analyzes will help the company develop its sales policies and contribute to the correct use of resources.\n\nYou will notice that the UK not only has the most sales revenue, but also the most customers. So you will continue to analyze only UK transactions in the next RFM Analysis, Customer Segmentation and K-Means Clustering topics.\n\nNext, you will begin RFM Analysis, a customer segmentation technique based on customers' past purchasing behavior. \n\nBy using RFM Analysis, you can enable companies to develop different approaches to different customer segments so that they can get to know their customers better, observe trends better, and increase customer retention and sales revenues.\n\nYou will calculate the Recency, Frequency and Monetary values of the customers in the RFM Analysis you will make using the data consisting of UK transactions. Ultimately, you have to create an RFM table containing these values.\n\nIn the Customer Segmentation section, you will create an RFM Segmentation Table where you segment your customers by using the RFM table. For example, you can label the best customer as \"Big Spenders\" and the lost customer as \"Lost Customer\".\n\nWe will segment the customers ourselves based on their recency, frequency, and monetary values. But can an **unsupervised learning** model do this better for us? You will use the K-Means algorithm to find the answer to this question. Then you will compare the classification made by the algorithm with the classification you have made yourself.\n\nBefore applying K-Means Clustering, you should do data pre-processing. In this context, it will be useful to examine feature correlations and distributions. In addition, the data you apply for K-Means should be normalized.\n\nOn the other hand, you should inform the K-means algorithm about the number of clusters it will predict. You will also try the *** Elbow method *** and *** Silhouette Analysis *** to find the optimum number of clusters.\n\nAfter the above operations, you will have made cluster estimation with K-Means. You should visualize the cluster distribution by using a scatter plot. You can observe the properties of the resulting clusters with the help of the boxplot. Thus you will be able to tag clusters and interpret results.\n\nFinally, you will do Cohort Analysis with the data you used at the beginning, regardless of the analysis you have done before. Cohort analysis is a subset of behavioral analytics that takes the user data and breaks them into related groups for analysis. This analysis can further be used to do customer segmentation and track metrics like retention, churn, and lifetime value.\n"}}