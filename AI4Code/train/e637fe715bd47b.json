{"cell_type":{"6dcb9c33":"code","1d1489a4":"code","eae066ea":"code","bade626a":"code","5a4b4f0c":"code","f9206683":"code","c145f84f":"code","a067254a":"code","74c01e16":"code","40e84278":"code","68fc3b18":"code","6d7d6573":"code","7769e6e3":"code","6648d5e0":"code","26af2278":"code","1989591d":"code","8feb809f":"code","b3fdf04a":"code","bf2eca5e":"code","f4bbb6f2":"code","0d26aa6f":"code","ccc3cda0":"code","d1e0f3d5":"code","4d0b4853":"code","88da53bc":"code","63649541":"code","34a9cf9c":"code","f0ec8ae5":"code","df7e6d01":"code","4438bd59":"code","ea4368f3":"code","adfbb7a4":"code","6c195119":"code","5b36e5ec":"markdown","4260c701":"markdown","12f81cb1":"markdown","b451f95f":"markdown","2d907334":"markdown","9999e9bb":"markdown","e7e23e06":"markdown","8381c663":"markdown","f0d29b8a":"markdown","cd104db9":"markdown","bfb7bdd7":"markdown","7c9f09d1":"markdown","28bd304c":"markdown","4771bd51":"markdown","3aa54fe2":"markdown","5c47b515":"markdown","2a2c7a33":"markdown","bcda167f":"markdown","a3e851fa":"markdown","de06bd1b":"markdown"},"source":{"6dcb9c33":"# Linear algebra\nimport numpy as np  \n\n# Text and data manipulation\nimport chardet  # character encoding\nimport pandas as pd  # data processing\n\n# Data visualization\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport geopandas as gpd  # Geospatial visualization\nimport missingno  # Missing data visualization\nimport seaborn as sns  # Data visualization\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1d1489a4":"books = pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\nbooks","eae066ea":"books.info()","bade626a":"dupl = books.duplicated()\nbooks[dupl].shape","5a4b4f0c":"missingno.matrix(books, figsize=(35,7), color=(0.25, 0.3, 0.34), fontsize=35)","f9206683":"def unique_val(column, data):\n    unique_values = data[column].unique()\n    return unique_values","c145f84f":"books['Author'].value_counts()","a067254a":"books['Author'].value_counts(normalize=True)[:15]","74c01e16":"books['Author'].value_counts().describe()","40e84278":"plt.figure(figsize=(40,10))\nplt.title(\"Quantity of books per author\", fontsize=25)\nsns.barplot(x=books['Author'].value_counts().index, y=books['Author'].value_counts(), palette=\"Blues_d\")\nplt.ylabel(\"Quantity of books\", fontsize=25)\nplt.xlabel(\"Author\", fontsize=25)\nplt.xticks(rotation=90)\n\nbooks['Author'].value_counts().value_counts()","68fc3b18":"plt.figure(figsize=(40,10))\nplt.title(\"Top 10\")\nsns.barplot(x=books['Author'].value_counts().index[:10], y=books['Author'].value_counts()[:10], palette=\"Blues_d\")\nplt.ylabel(\"Quantity of books\", fontsize=30)\nplt.xlabel(\"Author\",fontsize=30)\nplt.xticks(rotation=90, fontsize=25)","6d7d6573":"books['Author'].value_counts().value_counts()","7769e6e3":"label = []\n\nfor num_books in books['Author'].value_counts().value_counts():\n    label.append(num_books)\n\nfig, ax = plt.subplots(figsize=(19, 5))\nrects1 = plt.bar(books['Author'].value_counts().value_counts().index, books['Author'].value_counts().value_counts(), alpha=0.8, color='slategrey')\n\nplt.xlabel('Quantity of books', fontsize=15)\nplt.ylabel('Quantity of authors', fontsize=15)\nplt.title('Quantity of authors per book', fontsize=20)\nplt.xticks(books['Author'].value_counts().value_counts().index, fontsize=20)\nsns.set(font_scale=1)\nrects1[0].set_color('darkslategray')\n\ndef tagger(rects):\n    for ii,rect in enumerate(rects):\n        height = rect.get_height()\n        plt.text(rect.get_x()+rect.get_width()\/2., 0.99*height, '%s'% (label[ii]),\n                ha='center', va='baseline', fontsize='large', fontweight='semibold')\n        \n        \ntagger(rects1)\n\n# (Cosmosis, 2011) \n\nbooks['Author'].value_counts().value_counts(normalize=True)","6648d5e0":"author_rating = books.groupby('Author')[['Name', 'Reviews', 'User Rating']].max()\nauthor_rating","26af2278":"plt.xlabel('Amount of reviews')\nplt.ylabel('Frequency')\nplt.hist(books['Reviews'], color='slategray')\n\nbooks['Reviews'].value_counts()","1989591d":"books['Reviews'].describe()","8feb809f":"books['Year'].value_counts()","b3fdf04a":"def weighted_rating(df):\n    v = df['Reviews']\n    R = df['User Rating']\n    m = books['Reviews'].min()\n    C = books['User Rating'].mean()\n    return (v\/(v+m)*R) + (m\/(v+m)*C)\n\nbooks['Weighted Rating'] = books.apply(weighted_rating, axis=1)\n\nbooks.head()","bf2eca5e":"books.groupby(['Name', 'Author', 'Price', 'Year', 'Genre'], as_index=False)[['User Rating', 'Reviews', 'Weighted Rating']].mean().sort_values(\n    by='Weighted Rating', ascending=False).head(20)","f4bbb6f2":"final_rated = books.groupby(['Name', 'Author', 'Genre'], as_index=False)[['User Rating', 'Reviews', 'Weighted Rating']].mean().sort_values(by=\n'Weighted Rating', ascending=False)\nfinal_rated\n\nbooks.to_csv('top10authors.csv', index=False)","0d26aa6f":"final_rated_author = final_rated['Author']\nfinal_rated_ratings = final_rated['Weighted Rating']\n#final_rated_ratings.iloc[0]\ncomb_aut_name = final_rated[['Author', 'Name']].agg(' - '.join, axis=1)","ccc3cda0":"df = pd.DataFrame({'Author\/Book': comb_aut_name, 'Weighted Rating': final_rated_ratings})\ndf.to_csv('books_rated.csv', index=False)\n\ndf","d1e0f3d5":"books_rated = books.groupby(['Author', 'Name'], as_index='Author')[['Weighted Rating', 'Reviews']].mean().sort_values(by='Weighted Rating', ascending=False)\nbooks_rated","4d0b4853":"label_rating = []\n\nfor rating_book in final_rated_ratings:\n    label_rating.append(rating_book)\n\nfig, ax = plt.subplots(figsize=(19, 5))\nbar_width = 0.95\nopacity = 0.4\nplt.xlabel('Author\/Book', fontsize=15)\nplt.ylabel('Average weighted rating', fontsize=15)\nplt.title('Top 10 average weighted rating', fontsize=20)\nplt.xticks(rotation=90, fontsize=15)\n\nrect_rating = plt.bar(comb_aut_name[:10], final_rated_ratings[:10],bar_width, color = 'slategrey', alpha = 0.80)\nrect_rating[0].set_color('darkslategrey')\n\ndef autolabel(rects):\n    for ii,rect in enumerate(rects):\n        height = rect.get_height()\n        plt.text(rect.get_x()+rect.get_width()\/2., 0.9*height, '%s'% (round(label_rating[ii], 4)), ha='center', va='baseline', fontsize='large', \n                 fontweight='semibold')\n        \n        \nautolabel(rect_rating)","88da53bc":"books_rated = books.groupby(['Author'], as_index='Author')[['Weighted Rating']].mean().sort_values(by='Weighted Rating', ascending=False).head(20)\nbooks_rated[:10]","63649541":"plt.hist(books['Price'], color='slategrey')\nplt.xlabel('Price')\n\nbooks['Price'].describe()","34a9cf9c":"books['Price'].value_counts()","f0ec8ae5":"books_value = books.groupby(['Author', 'Name'], as_index='Author')[['Weighted Rating', 'Reviews', 'Price']].mean().sort_values(by='Price', ascending=False)\nbooks_value","df7e6d01":"final_rated = books.groupby(['Name', 'Author', 'Genre'], as_index=False)[['User Rating', 'Reviews', 'Weighted Rating']].mean().sort_values(by=\n'Weighted Rating', ascending=False).head(20)\nfinal_rated","4438bd59":"books['Genre'].value_counts(normalize=True)","ea4368f3":"genre_rating = books.groupby(['Author', 'Name', 'Reviews', 'Genre', 'Year'], as_index=False)[['Weighted Rating']].mean().sort_values(by='Weighted Rating', ascending=False)\n\ngenre_rating.head(20)","adfbb7a4":"genre_date = genre_rating[genre_rating['Name'] == \"Oh, the Places You'll Go!\"]\ngenre_date","6c195119":"books['Name'].value_counts()","5b36e5ec":"**REFERENCES**\n\n* (Saalu, 2020): https:\/\/www.kaggle.com\/sootersaalu\n* https:\/\/stackoverflow.com\/questions\/7423445\/how-can-i-display-text-over-columns-in-a-bar-chart-in-matplotlib","4260c701":"The most expensive book is Diagnostic and Statistical Manual of Mental Disorders, 5th Edition: DSM-5, written by American Psychiatric Association. On the other hand, we got 12 books with the minimum price. The average price is $13. ","12f81cb1":"Dataset on Amazon's Top 50 bestselling books from 2009 to 2019, containing 550 books. Data has been categorized into fiction and non-fiction using Goodreads.","b451f95f":"Python visualization","2d907334":"130 authors have 1 book and 60 authors have 2 books in the list, accounting for 52.4% and 24% of the total authors, respectively.","9999e9bb":"The dataset contains no-null objects","e7e23e06":"![Authors_books.png](attachment:Authors_books.png)","8381c663":"**Objectives**\n\n1. Author with more books [:15]\n2. Amount of books per author \n3. Top genre (con mayores libros)\n4. Fix rating using reference\n5. most expensive books\n6. Most valuable book (price, user rating\n7. most successful","f0d29b8a":"# Data\n\n* [Amazon Top 50 Bestselling Books 2009 - 2019](https:\/\/www.kaggle.com\/sootersaalu\/amazon-top-50-bestselling-books-2009-2019)","cd104db9":"Most of the books prices are under $20","bfb7bdd7":"**Authors**","7c9f09d1":"![Top_10_aut_weighted.png](attachment:Top_10_aut_weighted.png)","28bd304c":"\n\n![image.png](attachment:image.png)\n\n(Saalu, 2020)","4771bd51":"The dataset does not record annual review increments, because of this \"Oh, the Places You'll Go!\" has the same reviews in all years of registration.","3aa54fe2":"Dataframe for Tableau visualizations","5c47b515":"![Top_10_aut_books.png](attachment:Top_10_aut_books.png)","2a2c7a33":"Most of the books have less than 12,000 reviews","bcda167f":"Where:\n* R = average rating of books, \n* v = number of reviews of the book,\n* m = minimum reviews required to be listed in the best seller list, and\n* C = the mean rating in the dataset.","a3e851fa":"Due the fact that the dataset does not contain an efective method for validate the reviews and user rating. Saalu (2020) propose a new method, using weighted rating, which takes into consideration the average rating of books and the number of reviews.","de06bd1b":"Visualization with Python"}}