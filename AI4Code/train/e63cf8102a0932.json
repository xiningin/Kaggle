{"cell_type":{"b72d3ec0":"code","a7812a46":"code","656bc592":"code","1739c703":"code","501bc6cd":"code","85afa3b6":"code","cb29f098":"code","ba58d150":"code","286db117":"code","29a23813":"code","1704396a":"code","bf5ddfeb":"code","fe8369b6":"code","adaa5c07":"code","72419662":"code","f53e967f":"markdown","b8f397dd":"markdown","cd60a6e8":"markdown","4a9e76c6":"markdown","7109c4d2":"markdown"},"source":{"b72d3ec0":"import numpy as np \nimport pandas as pd \nfrom fastai import *\nfrom fastai.vision import *","a7812a46":"path = Path('..\/input\/digit-recognizer')","656bc592":"class CustomImageList(ImageList):\n    def open(self, fn):\n        img = fn.reshape(28,28)\n        img = np.stack((img,)*3, axis=-1)\n        return Image(pil2tensor(img, dtype=np.float32))\n    \n    @classmethod\n    def from_csv_custom(cls, path:PathOrStr, csv_name:str, imgIdx:int=1, header:str='infer', **kwargs)->'ItemList': \n        df = pd.read_csv(Path(path)\/csv_name, header=header)\n        res = super().from_df(df, path=path, cols=0, **kwargs)\n        \n        res.items = df.iloc[:,imgIdx:].apply(lambda x: x.values \/ 255.0, axis=1).values\n        \n        return res\n    \n    @classmethod\n    def from_df_custom(cls, path:PathOrStr, df:DataFrame, imgIdx:int=1, header:str='infer', **kwargs)->'ItemList': \n        res = super().from_df(df, path=path, cols=0, **kwargs)\n        \n        res.items = df.iloc[:,imgIdx:].apply(lambda x: x.values \/ 255.0, axis=1).values\n        \n        return res","1739c703":"test = CustomImageList.from_csv_custom(path=path, csv_name='test.csv', imgIdx=0)","501bc6cd":"data = (CustomImageList.from_csv_custom(path=path, csv_name='train.csv', imgIdx=1)\n                .split_by_rand_pct(.2)\n                .label_from_df(cols='label')\n                .add_test(test, label=0)\n                .transform(get_transforms(do_flip=False))\n                .databunch(bs=128, num_workers=0)\n                .normalize(imagenet_stats))","85afa3b6":"data.show_batch(3, figsize=(6,6))","cb29f098":"learn = cnn_learner(data, models.resnet34, metrics=[accuracy, error_rate], model_dir='\/kaggle\/working\/')","ba58d150":"learn.lr_find()","286db117":"learn.recorder.plot(suggestion=True)","29a23813":"lr = 1e-2","1704396a":"learn.fit_one_cycle(4,slice(lr))","bf5ddfeb":"learn.unfreeze()\nlearn.lr_find()\nlearn.recorder.plot(suggestion=True)","fe8369b6":"learn.fit_one_cycle(10,max_lr = slice(4e-6,4e-5))","adaa5c07":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()","72419662":"predictions, *_ = learn.get_preds(DatasetType.Test)\nlabels = np.argmax(predictions, 1)\nsubmission_df = pd.DataFrame({'ImageId': list(range(1,len(labels)+1)), 'Label': labels})\nsubmission_df.to_csv(f'submission.csv', index=False)","f53e967f":"Getting the predictions","b8f397dd":"Since the data is in CSV format with pixel location, we would need a custom `ImageList` to load the data.","cd60a6e8":"Plotting the confusion matrix","4a9e76c6":"Importing the necessary libraries","7109c4d2":"Creating our custom Databunch"}}