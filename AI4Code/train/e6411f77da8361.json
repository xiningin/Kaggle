{"cell_type":{"cfca8060":"code","5344f691":"code","b82731f1":"code","1c811329":"code","998a7b74":"code","47de01f7":"code","54160333":"code","4b295b57":"code","a812d2b0":"code","357b1266":"code","cdbdf966":"code","00d198fd":"code","470fc76d":"markdown","162a6952":"markdown","94734f19":"markdown","8d016871":"markdown","c7609f69":"markdown","b67f9d65":"markdown","ac91f7d3":"markdown","17b48c8d":"markdown","a228bc51":"markdown","08f10ff0":"markdown","bdf91148":"markdown","146e7217":"markdown"},"source":{"cfca8060":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5344f691":"import pandas as pd","b82731f1":"annually_df = pd.read_csv('\/kaggle\/input\/deaths-by-cancer-in-europe\/tps00116.tsv', sep='\\t')","1c811329":"print(list(annually_df.columns))","998a7b74":"pivot_data_col = annually_df.columns[0]\ntime_columns = annually_df.columns[1:]","47de01f7":"annually_df['unit'] = annually_df[pivot_data_col].apply(lambda x: x.split(\",\")[0])\nannually_df['age']     = annually_df[pivot_data_col].apply(lambda x: x.split(\",\")[1])\nannually_df['sex'] = annually_df[pivot_data_col].apply(lambda x: x.split(\",\")[2])\nannually_df['geography'] = annually_df[pivot_data_col].apply(lambda x: x.split(\",\")[3])","54160333":"selected_columns = list(['unit', 'age', 'sex', 'geography']) +  list(time_columns)\nannually_df = annually_df[selected_columns]","4b295b57":"annually_tr_df = annually_df.melt(id_vars=['unit', 'age', 'sex', 'geography'], \n        var_name=\"date\", \n        value_name=\"value\")\nannually_tr_df['date'] = annually_tr_df['date'].apply(lambda x: int(x))\nannually_tr_df['value'] = annually_tr_df['value'].apply(lambda x: str(x).replace(\"d\", \"\"))\nannually_tr_df['value'] = annually_tr_df['value'].apply(lambda x: str(x).replace(\"p\", \"\"))\nannually_tr_df['value'] = annually_tr_df['value'].apply(lambda x: str(x).replace(\": \", \"NAN\"))\nannually_tr_df['value'] = annually_tr_df['value'].apply(lambda x: float(x))","a812d2b0":"print(f\"Transformed data shape: {annually_tr_df.shape} (rows\/columns)\")\nannually_tr_df.head()","357b1266":"annually_tr_df.tail()","cdbdf966":"import pandas_profiling\npandas_profiling.ProfileReport(annually_tr_df)","00d198fd":"annually_tr_df.to_csv(\"deaths_by_cancer_in_europe.csv\", index=False)","470fc76d":"# A very preliminary exploratory data analysis\n\nThis would be a very short exploratory data analysis. The role of this Kernel is just to show how we can prepare the annual data for analysis and we already did this.","162a6952":"## Load the data\n\nThe datafiles are in TSV format. We will read the files using pandas, just include in the function call the `sep` (tab separator data).\nWe demonstrate how to read and process the annual data.","94734f19":"# Data pre-processing\n\nWe start by defining two working lists.","8d016871":"Next, we pivot the time columns using `melt` operation in pandas.  \nWe also make sure we transform `date` to be an integer (here is a year data).  \nWe set `value` to be a float, after we replace \": \" (for N\/A) with `NAN`.","c7609f69":"Let's glimpse the data columns.","b67f9d65":"Let's inspect the result.","ac91f7d3":"# Analysis preparation\n\n## Load packages","17b48c8d":"We select now only the new columns resulted from splitting the `pivot_data_col` and the time columns.","a228bc51":"# Export data in csv format","08f10ff0":"The first column is a composed one, containing 4 different information (the unit, age, ICD-10 classification, sex and the gography). The next columns are the year value, from first (2011) to last (2018).","bdf91148":"# Introduction\n\nWe show in this Kernel how we can process the data to prepare it for easier processing. Let's check the data files.","146e7217":"Then, we split from `pivot_data_col` the 4 separate fields:\n* unit (RT only);\n* age (only by TOTAL);\n* sex (M, F and T - for Total);\n* geography."}}