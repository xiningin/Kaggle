{"cell_type":{"e5d7ab1f":"code","274e6e51":"code","95fc0d4e":"code","502818b8":"code","267700ec":"code","52a23919":"code","6d71dd04":"code","0f9316d8":"code","4f7ea01b":"code","24693404":"code","6e000161":"code","e911ad8c":"code","64a4cd5f":"code","89c6d756":"code","146577e6":"code","d57b51e8":"code","dea58046":"code","54387527":"code","915bb63a":"code","62506c13":"code","c698b86e":"markdown","e3ec49f6":"markdown","0b64cd24":"markdown","77361264":"markdown","a974411d":"markdown","80ad2c06":"markdown","1055c84c":"markdown","de7f9191":"markdown","24b4514f":"markdown"},"source":{"e5d7ab1f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","274e6e51":"data = pd.read_csv(\"..\/input\/indian-liver-patient-records\/indian_liver_patient.csv\")","95fc0d4e":"data.isnull().sum()","502818b8":"data = data.dropna()\ndata.isnull().any()","267700ec":"fig, ax = plt.subplots(figsize=(7,7))\nsns.heatmap(abs(data.corr()), annot=True, square=True, cbar=False, ax=ax, linewidths=0.25);","52a23919":"data = data.drop(columns= ['Direct_Bilirubin', 'Alamine_Aminotransferase', 'Total_Protiens'])","6d71dd04":"data['Dataset'] = data['Dataset'].replace(1,0)\ndata['Dataset'] = data['Dataset'].replace(2,1)","0f9316d8":"print('How many people to have disease:', '\\n', data.groupby('Gender')[['Dataset']].sum(), '\\n')\nprint('How many people participated in the research:', '\\n', data.groupby('Gender')[['Dataset']].count())","4f7ea01b":"print('Percentage of people with the disease depending on gender:')\ndata.groupby('Gender')[['Dataset']].sum()\/ data.groupby('Gender')[['Dataset']].count()","24693404":"age=pd.cut(data['Age'], [0,18,91])\nprint('Distribution of the disease by gender and age')\ndata.pivot_table('Dataset', ['Gender', age])","6e000161":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\n\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve","e911ad8c":"X = data[['Age', 'Gender', 'Total_Bilirubin','Alkaline_Phosphotase','Aspartate_Aminotransferase','Albumin','Albumin_and_Globulin_Ratio']]\ny = pd.Series(data['Dataset'])","64a4cd5f":"from sklearn.preprocessing import LabelEncoder\nlabelencoder = LabelEncoder()\nX['Gender'] = labelencoder.fit_transform(X['Gender'])","89c6d756":"x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\nscaler = StandardScaler()\nX_train = scaler.fit_transform(x_train)\nX_test = scaler.transform(x_test)","146577e6":"model = LogisticRegression()\nmodel.fit(X_train, y_train);","d57b51e8":"acc = np.array([])\nfor i in range(0, 100, 10):\n    y_pred_new_threshold = (model.predict_proba(X_test)[:, 1]>= i\/100).astype(int)\n    newscore = accuracy_score(y_test, y_pred_new_threshold)\n    acc = np.append(acc, [y_pred_new_threshold])\nacc = acc.astype(int)\nacc = acc.reshape(10,-1)","dea58046":"i=0\nfor l in acc:\n    print('***', i, '***')\n    matrix = confusion_matrix(y_test, l)\n    print('\\n', matrix.T, '\\n')\n    print('accuracy_score= ', accuracy_score(y_test, l), '\\n')\n    i+=1","54387527":"labels = (model.predict_proba(X_test)[:, 1]>=0.3).astype(int)\naccuracy_score(y_test, labels)","915bb63a":"matrix = confusion_matrix(y_test, labels)\nsns.heatmap(matrix.T, square=True, annot=True, fmt='d', cbar=False)\nplt.xlabel('true label')\nplt.ylabel('predicted label');","62506c13":"logit_roc_auc = roc_auc_score(y_test, labels)\nfpr, tpr, thresholds = roc_curve(y_test, model.predict_proba(X_test)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='Logistic Regression (area = %0.2f)' % logit_roc_auc)\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.legend(loc=\"lower right\")\nplt.savefig('Log_ROC')\nplt.show()","c698b86e":"### Data analysis ###","e3ec49f6":"I would prefer that threshold = 0.3\nWith this value, most people with the disease and no disease will be determined correctly. And *** accuracy score = 67% ***","0b64cd24":"Among men with the disease at risk young people under 18 years of age.","77361264":"As we can see there are correlation: 'Total_Bilirubin'-'Direct_Bilirubin', 'Alamine_Aminotransferase'-'Aspartate_Aminotransferase', 'Total_Protiens'-'Albumin'.\nI drop from data: 'Direct_Bilirubin', 'Alamine_Aminotransferase', 'Total_Protiens'.\n\nAnd data look like:\n\nCategorical:\n- Gender\n\nContinuous data:\n- Age\n- Total_Bilirubin\n- Alkaline_Phosphotase\n- Aspartate_Aminotransferase\n- Albumin\n- Albumin_and_Globulin_Ratio","a974411d":"Because it is a Logistic Regression, we as researchers can choose a threshold by which we can adjust the result of model predictions.\nLook at results of predictions with different threshold:","80ad2c06":"Area under Roc curve = 0.68\nMore people with desease will be predict right.","1055c84c":"We need that column 'Gender' should be type of numbers. For it we to use LabelEncoder","de7f9191":"Women have a higher percentage of the disease.","24b4514f":"### Train model ###"}}