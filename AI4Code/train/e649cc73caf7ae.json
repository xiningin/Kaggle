{"cell_type":{"c25c0e5b":"code","5af1b069":"code","08f8c91e":"code","42c54f91":"code","02e26c94":"code","2f5a8689":"code","aacc4f05":"code","9361969b":"code","15434f46":"code","ed242c30":"code","0134c66f":"code","c291bc30":"code","b58baaac":"code","fa90f367":"code","fe67e48c":"code","bcf4c655":"code","117a0703":"code","5b65925e":"code","45a07da5":"code","a362b00e":"code","ed898b28":"code","e1d686a1":"code","a34ee45a":"code","a7cc2767":"code","42711440":"code","efab851d":"code","ab0c1e4b":"code","6441da89":"code","79d0bb7c":"code","28432a44":"code","0e385309":"code","9fdeb2e6":"code","b867ba36":"markdown","1e3672c5":"markdown","9eb07289":"markdown","6a6e6d94":"markdown","2c0e789d":"markdown","a8383e2a":"markdown","74b7372a":"markdown","8f28c717":"markdown","c250e756":"markdown","d2da9317":"markdown","b07d751b":"markdown","6d357ac7":"markdown","47bcc7fe":"markdown","523e5755":"markdown","9cc9efbe":"markdown","f1226529":"markdown","7616138f":"markdown","8039b5f5":"markdown","c5153851":"markdown","4fd7ec71":"markdown","d0fe94e3":"markdown","438b73b8":"markdown","ff19821a":"markdown","dec80ed2":"markdown","755f5e86":"markdown","9a1f70e8":"markdown","5f672d18":"markdown","67d6a2dd":"markdown","ba3b9644":"markdown","91e698e4":"markdown","636c5555":"markdown","4b092339":"markdown","1cd62793":"markdown","0f5051e0":"markdown","a83fa262":"markdown","6fddaef8":"markdown"},"source":{"c25c0e5b":"import os\nimport re\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n\nimport scipy\nimport math\nfrom matplotlib import pyplot as plt\n\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols","5af1b069":"df_play_info = pd.read_csv('..\/input\/play_information.csv')\ndf_injury = pd.read_csv('..\/input\/video_review.csv')\ndf_punt_role = pd.read_csv('..\/input\/play_player_role_data.csv')","08f8c91e":"team_positions = {'Return': \n                  ['VR', 'VRo', 'VRi', \n                   'PDR1', 'PDR2', 'PDR3', 'PDR4', 'PDR5', 'PDR6',\n                   'PLR', 'PLR1', 'PLR2', 'PLR3',\n                   'PR', 'PFB', 'PDM', 'VL', 'VLo', 'VLi',\n                   'PDL1', 'PDL2', 'PDL3', 'PDL4', 'PDL5', 'PDL6',\n                   'PLL', 'PLL1', 'PLL2', 'PLL3', 'PLLi'],\n     'Coverage': ['GR', 'GRo', 'GRi',\n                'PRG', 'PRT', 'PRW',\n                'PPR', 'PPRo', 'PPRi', 'P', 'PC', 'PLS',\n                  'GL', 'GLo', 'GLi',\n               'PLW', 'PLT', 'PLG',\n               'PPL', 'PPLo', 'PPLi']}\n\n# Add the corresponding side of their role\ndef set_team(role):\n    for team in team_positions.keys():\n        if str(role) in team_positions[team]:\n            return str(team)\n    return None\n\ndef get_goal(activity):\n    if (activity == 'Blocking') or (activity == 'Tackled'):\n        return 'Offensive'\n    else:\n        return 'Defensive'\n\n# Add the corresponding side of their role\ndef set_phase(row):\n    goal = get_goal(row['Player_Activity_Derived'])\n    if row['Team'] == 'Coverage':\n        if goal == 'Offensive':\n            return 1\n        else:\n            return 2\n    else: # Return Team\n        if goal == 'Offensive':\n            return 2\n        else:\n            return 1\n\ndf_punt_role['Team'] = df_punt_role.apply(lambda row: set_team(row['Role']), \n                                                axis=1)\n\n# Clean\ndf_injury['Primary_Partner_GSISID'] = df_injury.apply(lambda row: \n                                                                  row['Primary_Partner_GSISID'] \n                                                                  if (row['Primary_Partner_GSISID'] != 'Unclear')\n                                                                 else 0,\n                                                                 axis=1)\ndf_injury['Primary_Partner_GSISID'] = df_injury['Primary_Partner_GSISID'].fillna(0)\ndf_injury['Primary_Partner_GSISID'] = df_injury['Primary_Partner_GSISID'].astype(int)\n\n# Identify roles for player and partner\ndf_injury = df_injury.merge(df_punt_role, \n                                  left_on=['GameKey', 'PlayID', 'GSISID'],\n                                 right_on=['GameKey', 'PlayID', 'GSISID'],\n                                 how='left')\n\ndf_injury = df_injury.merge(df_punt_role, \n                                 suffixes=('', '_Partner'),\n                                  left_on=['GameKey', 'PlayID', 'Primary_Partner_GSISID'],\n                                 right_on=['GameKey', 'PlayID', 'GSISID'],\n                                 how='left')\ndf_injury = df_injury.drop(['GSISID_Partner'], axis=1)\ndf_injury['Phase'] = df_injury.apply(lambda row: \n                                                set_phase(row), \n                                                axis=1)","42c54f91":"results = [ \n           'downed',\n           'fair catch', \n           'Touchback'\n          ]\n\ndef get_result(row):\n    match = re.search('.* for .*', row['PlayDescription']) # [A-Z]+? [0-9]+ # (to .*?)\n    if match:\n        return 'return'\n\n    for result in results:\n        if result in row['PlayDescription']:\n            return result\n\n    return 'others'\n\ndf_play_info['Result'] = df_play_info.apply(lambda row: get_result(row), axis=1)","02e26c94":"print(len(df_play_info))","2f5a8689":"def get_penalty(row):\n    if 'PENALTY' in row['PlayDescription']:\n        return 'Yes'\n    else:\n        return 'No'\n\ndf_play_info['Penalty'] = df_play_info.apply(lambda row: get_penalty(row), axis=1)\n\n# Show info\nax = sns.countplot(x=\"Penalty\", \n                   order=df_play_info['Penalty'].value_counts().index,\n                   data=df_play_info)\nax.set_title('Penalty Count in Punt Plays')\ndf_play_info['Penalty'].value_counts()","aacc4f05":"def identify_penalty(row):\n    penalties = ['Offensive Holding', \n                 'Taunting',\n                 'Disqualification',\n                 'Running Into the Kicker',\n                 'Interference',\n                 'Unnecessary Roughness',\n                 'Face Mask', \n                 'Neutral Zone Infraction',\n                 'Horse Collar Tackle',\n                 'Ineligible Downfield Kick',\n                 'Player Out of Bounds on Punt',\n                 'Defensive 12 On-field',\n                 'Offensive 12 On-field',\n                 'Chop Block',\n                 'Illegal Block Above the Waist', \n                 'Illegal Blindside Block', \n                 'Illegal Touch', \n                 'Illegal Use of Hands', \n                 'Illegal Substitution',\n                 'Illegal Formation',\n                 'Illegal Motion',\n                 'Illegal Shift',\n                 'Clipping',\n                 'Tripping',\n                 'Invalid Fair Catch Signal',\n                 'Delay of Game',\n                 'Defensive Holding',\n                 'Roughing the Kicker',\n                 'Unsportsmanlike Conduct',\n                 'Defensive Offside',\n                'False Start']\n    for penalty in penalties:\n        if penalty in row['PlayDescription']:\n            return penalty\n    return 'Unknown'\n\ndef has_penalty(row):\n    if 'PENALTY' in row['PlayDescription']:\n        return 'Yes'\n    return 'No'\n\ndf_play_info['Penalty'] = df_play_info.apply(lambda row: has_penalty(row), axis=1)\ndf_play_info['PenaltyID'] = df_play_info.apply(lambda row: identify_penalty(row), axis=1)\ndf_play_info_penalty = df_play_info[df_play_info['Penalty']=='Yes']\n\n# Show info\nsns.set(rc={'figure.figsize':(8,9)})\nax = sns.countplot(y=\"PenaltyID\", \n                   order=df_play_info_penalty['PenaltyID'].value_counts().index,\n                   data=df_play_info_penalty)\nax.set_title('Penalty Frequency')","9361969b":"df_injury_plays = df_injury.merge(df_play_info, \n                                  left_on=['GameKey', 'PlayID'],\n                                 right_on=['GameKey', 'PlayID'],\n                                 how='left')\ndf_injury_plays['Penalty'] = df_injury_plays.apply(lambda row: get_penalty(row), axis=1)\ndf_injury_penalty = df_injury_plays[df_injury_plays['Penalty']=='Yes']\nprint('Penalty count: ' + str(len(df_injury_penalty)))","15434f46":"# Graph\nsns.set(rc={'figure.figsize':(6,4)})\ndf_injury_penalty['PenaltyID'].value_counts()","ed242c30":"df_total = df_play_info['PenaltyID'].value_counts().reset_index(name='total')\ndf_injury_total = df_injury_penalty['PenaltyID'].value_counts().reset_index(name='injured')\n\n# df_total.head()\ndf_merged = df_total.merge(df_injury_total, how='right')\ndf_merged = df_merged.fillna(0)\ndf_merged['ratio'] = 100*df_merged['injured'] \/ df_merged['total']\n\nax = sns.barplot(x='ratio', y='index', \n#             order=df_merged['ratio'].value_counts().index,\n            data=df_merged)\nax.set_title('Penalty Injury Risk')","0134c66f":"df_cross_injured = pd.crosstab(df_injury_penalty['PenaltyID'], df_injury_penalty['Result'])\ndf_cross_injured = df_cross_injured.fillna(0)\n\nax = sns.heatmap(df_cross_injured, annot=True, fmt='.2g')\nax.set_title('Penalty-Event')","c291bc30":"df_cross_injured = pd.crosstab(df_injury_penalty['Result'], df_injury_penalty['Player_Activity_Derived'])\ndf_cross_injured = df_cross_injured.fillna(0)\n\nax = sns.heatmap(df_cross_injured, annot=True, fmt='.2g')\nax.set_title('Event-Activity')","b58baaac":"df_cross_injured = pd.crosstab(df_injury_penalty['Phase'], df_injury_penalty['Penalty'])\ndf_cross_injured = df_cross_injured.fillna(0)\n\nax = sns.heatmap(df_cross_injured, annot=True, fmt='.2g')\nax.set_title('Phase-Penalty Frequency')","fa90f367":"df_injury_penalty_phase1 = df_injury_penalty[df_injury_penalty['Phase']==1]\ndf_injury_penalty_phase1['PenaltyID'].value_counts()","fe67e48c":"df_cross_injured = pd.crosstab(df_injury_penalty_phase1['Result'], df_injury_penalty_phase1['Player_Activity_Derived'])\ndf_cross_injured = df_cross_injured.fillna(0)\n\nax = sns.heatmap(df_cross_injured, annot=True, fmt='.2g')\nax.set_title('Event-Activity Before the Punt\\n(With Penalties)')","bcf4c655":"df_injury_plays_phase1 = df_injury_penalty[df_injury_penalty['Phase']==1]\ndf_cross_injured = pd.crosstab(df_injury_plays_phase1['Primary_Impact_Type'], \n                               df_injury_plays_phase1['Player_Activity_Derived'])\ndf_cross_injured = df_cross_injured.fillna(0)\n\nax = sns.heatmap(df_cross_injured, annot=True, fmt='.2g')\nax.set_title('Impact Type-Activity Before the Punt\\n(With Penalties)')","117a0703":"df_injury_penalty_phase2 = df_injury_penalty[df_injury_penalty['Phase']==2]\ndf_injury_penalty_phase2['PenaltyID'].value_counts()","5b65925e":"df_cross_injured = pd.crosstab(df_injury_penalty_phase2['Result'], df_injury_penalty_phase2['Player_Activity_Derived'])\ndf_cross_injured = df_cross_injured.fillna(0)\n\nax = sns.heatmap(df_cross_injured, annot=True, fmt='.2g')\nax.set_title('Event-Activity After the Punt\\n(With Penalties)')","45a07da5":"df_cross_injured = pd.crosstab(df_injury_penalty_phase2['Primary_Impact_Type'], \n                               df_injury_penalty_phase2['Player_Activity_Derived'])\ndf_cross_injured = df_cross_injured.fillna(0)\n\nax = sns.heatmap(df_cross_injured, annot=True, fmt='.2g')\nax.set_title('Impact Type-Activity After the Punt\\n(With Penalties)')","a362b00e":"df_injury_no_penalty = df_injury_plays[df_injury_plays['Penalty']=='No']\nlen(df_injury_no_penalty)","ed898b28":"# Graph\ndf_injury_no_penalty['Result'].value_counts()","e1d686a1":"df_cross_injured = pd.crosstab(df_injury_no_penalty['Result'], \n                               df_injury_no_penalty['Player_Activity_Derived'])\ndf_cross_injured = df_cross_injured.fillna(0)\n\nax = sns.heatmap(df_cross_injured, annot=True, fmt='.2g')\nax.set_title('Event-Activity\\n(No Penalties)')","a34ee45a":"df_injury_no_penalty_phase1 = df_injury_no_penalty[df_injury_no_penalty['Phase']==1]\ndf_cross_injured = pd.crosstab(df_injury_no_penalty_phase1['Result'], \n                               df_injury_no_penalty_phase1['Player_Activity_Derived'])\ndf_cross_injured = df_cross_injured.fillna(0)\n\nax = sns.heatmap(df_cross_injured, annot=True, fmt='.2g')\nax.set_title('Event-Activity Before the Punt\\n(No Penalties)')","a7cc2767":"df_injury_no_penalty_phase2 = df_injury_no_penalty[df_injury_no_penalty['Phase']==2]\ndf_cross_injured = pd.crosstab(df_injury_no_penalty_phase2['Result'], \n                               df_injury_no_penalty_phase2['Player_Activity_Derived'])\ndf_cross_injured = df_cross_injured.fillna(0)\n\nax = sns.heatmap(df_cross_injured, annot=True, fmt='.2g')\nax.set_title('Event-Activity After the Punt\\n(No Penalties)')","42711440":"df_cross_injured = pd.crosstab(df_injury_no_penalty['Primary_Impact_Type'], \n                               df_injury_no_penalty['Player_Activity_Derived'])\ndf_cross_injured = df_cross_injured.fillna(0)\n\nsns.heatmap(df_cross_injured, annot=True, fmt='.1g')","efab851d":"df_injury_np_passive = df_injury_no_penalty[(df_injury_no_penalty['Player_Activity_Derived']=='Blocked') |\n                                            (df_injury_no_penalty['Player_Activity_Derived']=='Tackled')]\nlen(df_injury_np_passive)","ab0c1e4b":"# Graph\ndf_injury_np_passive['Primary_Impact_Type'].value_counts()","6441da89":"def get_side(role):\n    left = ['GL', 'GLo', 'GLi', 'PLW', 'PLT', 'PLG',\n           'VL', 'VLo', 'VLi',\n           'PDL1', 'PDL2', 'PDL3', 'PDL4', 'PDL5', 'PDL6',\n           'PLL', 'PLL1', 'PLL2', 'PLL3', 'PLLi',\n           'PPL', 'PPLo', 'PPLi']\n    right = ['GR', 'GRo', 'GRi', 'PRG', 'PRT', 'PRW',\n           'VR', 'VRo', 'VRi',\n           'PDR1', 'PDR2', 'PDR3', 'PDR4', 'PDR5', 'PDR6',\n           'PLR', 'PLR1', 'PLR2', 'PLR3',\n            'PPR', 'PPRo', 'PPRi',\n           ]\n    center = ['PLS', 'PC', 'P', 'PDM',\n                'PLM', 'PLM1',\n                'PFB', 'PR']\n    \n    if role in left:\n        return 'left'\n    if role in right:\n        return 'right'\n    if role in center:\n        return 'center'\n    else:\n        return ''\n\ndf_injury_plays['Player_Side'] = df_injury_plays.apply(lambda row: get_side(row['Role']), axis=1)\ndf_injury_plays['Partner_Side'] = df_injury_plays.apply(lambda row: get_side(row['Role_Partner']), axis=1)\n\ndef get_facing(row):\n    if (row['Player_Side'] == 'left' and row['Partner_Side'] == 'right') or \\\n    (row['Player_Side'] == 'right' and row['Partner_Side'] == 'left') or \\\n    (row['Player_Side'] == 'center' and row['Partner_Side'] == 'center'):\n        return 'Yes' # Facing each other\n    elif (row['Player_Side'] == 'center' or row['Partner_Side'] == 'center'):\n        return 'Off-center'\n    return 'No'\n    \ndf_injury_plays['Facing'] = df_injury_plays.apply(lambda row: get_facing(row), axis=1)","79d0bb7c":"df_cross_injured = pd.crosstab(df_injury_plays['Primary_Impact_Type'], \n                               df_injury_plays['Facing'])\ndf_cross_injured = df_cross_injured.fillna(0)\n\nsns.heatmap(df_cross_injured, annot=True, fmt='.2g')","28432a44":"df_total = df_play_info['Season_Type'].value_counts().reset_index(name='total')\ndf_injury_total = df_injury_plays['Season_Type'].value_counts().reset_index(name='injured')\n\n# df_total.head()\ndf_merged = df_total.merge(df_injury_total, how='right')\ndf_merged = df_merged.fillna(0)\ndf_merged['ratio'] = 100*df_merged['injured'] \/ df_merged['total']\ndf_merged['ratio_safe'] = 100-df_merged['injured']\n\nsns.barplot(x='ratio', y='index', \n#             order=df_merged['ratio'].value_counts().index,\n            data=df_merged)","0e385309":"df_penalty = df_play_info[df_play_info['Penalty']=='Yes']\n\ndf_total = df_play_info['Season_Type'].value_counts().reset_index(name='total')\ndf_injury_total = df_penalty['Season_Type'].value_counts().reset_index(name='injured')\n\n# df_total.head()\ndf_merged = df_total.merge(df_injury_total, how='right')\ndf_merged = df_merged.fillna(0)\ndf_merged['ratio'] = 100*df_merged['injured'] \/ df_merged['total']\ndf_merged['ratio_safe'] = 100-df_merged['injured']\n\nsns.barplot(x='ratio', y='index', \n#             order=df_merged['ratio'].value_counts().index,\n            data=df_merged)","9fdeb2e6":"df_penalty = df_injury_plays[df_injury_plays['Penalty']=='Yes']\n\ndf_total = df_injury_plays['Season_Type'].value_counts().reset_index(name='total')\ndf_injury_total = df_penalty['Season_Type'].value_counts().reset_index(name='injured')\n\n# df_total.head()\ndf_merged = df_total.merge(df_injury_total, how='right')\ndf_merged = df_merged.fillna(0)\ndf_merged['ratio'] = 100*df_merged['injured'] \/ df_merged['total']\ndf_merged['ratio_safe'] = 100-df_merged['injured']\n\nsns.barplot(x='ratio', y='index', \n#             order=df_merged['ratio'].value_counts().index,\n            data=df_merged)","b867ba36":"## Season Types\n### What is the ratio of injuries per season?","1e3672c5":"Illegal Blindside Block has 10% injury rate. This makes sense because the blindside catches the target unprepared and consequently, unable to brace for impact.\n\nThe interference has 7% injury rate. This means there are injuries in every 7 out of 100 violations. The rule is intentionally created to protect the receiver as he diverts his attention from the players and  focuses on catching the ball. However, there are some limitations to the rule. The player cannot be tackled while the ball is on the air, but once it touches his hands, the other protection is immediately removed. There is no adjustment period between catching and either running with the ball or passing the ball. The video reviews will show that in some cases, the injury occured right after the ball is caught because the other players are just waiting for the ball to fall into the receiver's hands.","9eb07289":"### What are the common penalties after the kick that lead to an injury?","6a6e6d94":"## Penalty Injuries:\n\n### How many punt play injuries have a corresponding Penalty?","2c0e789d":"## Impact Type and Position\nLet us check if the player position has any effect on the impact type. For this analysis, I included all injury plays (both with and without penalties).","a8383e2a":"Most injuries came from the runbacks of the Return team. Interestingly, there are injuries from interference even if it was declared a fair catch.","74b7372a":"In 10 out of 37 injuries, there are already existing rules for some injury incidences. The penalties indicate that a number of the injuries can be prevented if the deterring rules rules were followed. However, the penalties does not completely deter the players from performing certain moves.\n\n### What are the penalties given to plays with injuries?","8f28c717":"There is already quite a lot of penalties in place during Punt plays. Among the most common are 'Offensive Holding' and 'Illegal Block Above the Waist'.\n\n#### Offensive Holding:\n\n\n#### Illegal Block Above the Waist:\nThe [Illegal Block Above the Waist](http:\/\/insidethepylon.com\/football-101\/glossary-football-101\/2016\/09\/28\/itp-glossary-illegal-block-back\/) is defined as:\n> An illegal block in the back penalty (officially known as illegal block above the waist) is called when a player makes contact with an opposing player, who does not have the ball, above the waist from behind. A block in the back penalty costs the team (generally on offense or receiving a kick \/ punt) ten yards from the spot of the foul.\n\nSuch offense is common because:\n1. The Coverage team runs straight to the PR\n2. The PR is behind the Return team. The Return team must turn around.\nBy the time the PR team turns around, they would be behind the Coverage team, who just ran past their defense.\n\nOther terms such as Offensive Holding is defined in the [NFL Rulebook](https:\/\/operations.nfl.com\/media\/2646\/2017-playing-rules.pdf).\n\n#### Interference Rule:\nThe interesting rule to note is the Interference rule. It protects the player from getting tackled while he is distracted watching out for the ball. It is an essential rule in a Punt Play because the PR is a dedicated player to catch a kicked ball. The downfall of the rule, however, is the immediate removal of safety once the ball is caught (unless he declared a safe catch). This does not give the PR sufficient time to adjust to his surroundings.\n\nLet us check if penalties and injuries have some relationship.","c250e756":"### How many Punt plays have a corresponding Penalty?","d2da9317":"## No Penalty\n\n### How many injuries have no penalties?","b07d751b":"### What is the impact type and activity pairs of the penalty injuries before the punt?","6d357ac7":"### How many passive injuries have no penalties?","47bcc7fe":"### What is the play event and activity for injuries after the punt (no penalties)?","523e5755":"### What is the common activity of the injuried?","9cc9efbe":"An important aspect of separating the penalty-based injuries is that specific action-based injuries are eliminated from the dataset.\n\nThere is a new NFL rule not yet considered in the dataset.\nThe Helmet Rule states the following:\n> It is a foul if a player lowers his head to initiate and make contact with his helmet against an opponent. \n>-[Article 8: Use of Helmet](https:\/\/operations.nfl.com\/the-rules\/nfl-video-rulebook\/use-of-the-helmet\/)\n\nIf we consider the new helmet rule,  all active roles such as blocking and tackling will be covered. However, there is still need to account for passive injuries.","f1226529":"Checking the activity, the fair catch injury comes from blocking.","7616138f":"The pre-season has a higher ratio of penalties for the plays with injuries. This indicates that the rampant rule violations during the pre-season is a leading cause of injuries during the pre-season.","8039b5f5":"There is a higher penalty rate for the pre-season. This means that the players are less mindful of the rules during the pre-season. Let us check if the seasonal penalties are related with the injuries.\n\n### For the plays with injuries, what is the ratio of penalties per season?","c5153851":"### What is the play event and activity for injuries after the punt?","4fd7ec71":"### What are the common play outcomes for those without penalties?","d0fe94e3":"### What are the common play outcomes for those with penalties?","438b73b8":"### What is the play event and activity for injuries before the punt?","ff19821a":"### What are the common pairs of impact types according to how each players are directly facing each other in formation?","dec80ed2":"### What is the common combination of impact type and player activity for the injury plays with penalties?","755f5e86":"### What is the most common impact type of the passive non-penalty injuries?","9a1f70e8":"19% (1077 out of 5604) of the Punt plays have violations.\n\n### What are the most common Punt play violations?","5f672d18":"There is a proportionally higher injury rate during the pre-season than in the regular season. Let us check the penalty rates per season.\n### What is the ratio of penalties per season?","67d6a2dd":"### What is the most common combination of activity and impact type for those without penalties?","ba3b9644":"Helmet-to-helmet impact types account for 64% (7 out of 11) of the passive non-penalty injuries. Consequently, the identification of how such injuries occur can reduce the overall injuries without existing penalty rules.","91e698e4":"### Game Phases\n\n### What Phase has the most penalties?","636c5555":"Note that the left side of the coverage team is the right side of the return team.\n\nObserve the helmet-to-helmet injuries:\n- The players tend to be facing each other in the formation. \n- In off-center situations, one of the player has a center position, but it would be easy for them to move either left or right. \n- There is only 1 helmet-to-helmet injury for those on the opposite sides of the formation.\n\nThis means that the helmet-to-helmet injuries tend to be a head-on collision much like horned animals charging at each other.\n\n![Helmet-to-helmet](http:\/\/www.animatedimages.org\/data\/media\/164\/animated-american-football-image-0032.gif)\n\nThere are various common forms that exposes the head to injuries:\n1. Blocking Form\n\n> Based on the analysis on Game Mechanics, most of the coverage formation blocking injuries (before the kick) are helmet-to-helmet collisions. In the initial phase of the play, the opponents are facing each other as the blocking occurs. However, the blocking forms may have an influence in the impact type.\n    ![Wrestling](http:\/\/www.animatedimages.org\/data\/media\/164\/animated-american-football-image-0015.gif)\nThe Greco-Roman wrestling form best illustrates the form used in blocking defense. This form, however, naturally exposes the head to injuries. In one of the blocking injuries, there were two defenders who accidentally bumped into each other as they were double-teaming on an opponent.  In the 0:02 mark of the video, we can all the heads of the people involved are leaned forward. This seems to be the case in most blocking or blocked injuries even in one-to-one face-offs.\nSince the concussion rates from such wrestling forms are beyond the given dataset, I will just refer to the following articles:\n- [Wrestling\u2019s the most dangerous sport for concussions](https:\/\/www.athleticscholarships.net\/concussion-wrestling-football-college.htm)\n- [Studies shine harsh light on wrestling's concussion rate, impact on athletes](https:\/\/www.chicagotribune.com\/news\/ct-wrestling-concussions-met-20160110-story.html)\n- [Control The Head: Combating Concussions In Wrestling](https:\/\/woub.org\/2014\/04\/14\/control-head-combating-concussions-wrestling\/)\n\n2 Running Form\n>Based on the analysis on Game Mechanics, most of the gunner's injuries are helmet-to-helmet collisions. In the Collision Pairs analysis, the gunner's injuries occured on high speeds of more than 20kph  (in 4\/5 injuries).\n![Running](http:\/\/www.animatedimages.org\/data\/media\/164\/animated-american-football-image-0071.gif)\nThe standard running form has some forward lead that exposes the head. When people are running, they both expose their heads to anyone in front of them. Again, the appropriate field of study for this is kinematics.\n\nIdentification of which forms cause more injuries would require consolidation with non-punt related injuries.","4b092339":"We observe two important details:\n- Helmet-to-body injuries come from tackle activities\n- Helmet-to-helmet injuries come from block injuries. This is most likely because they are facing each other.","1cd62793":"### How many Punt plays were there?","0f5051e0":"There is only 2 injury penalties before the punt. However, there is only just 4 injuries in the first phase. In other words, half of the injuries before the punt are violations.\n\n### What are the common violations before the kick that lead to an injury?","a83fa262":"This is a series of kernels for the NFL Punt Analytics competition:\n1. [Game Mechanics](https:\/\/www.kaggle.com\/argentium\/nfl-punt-game-mechanics)\n2. [Group Dynamics](https:\/\/www.kaggle.com\/argentium\/nfl-punt-group-dynamics)\n3. [Penalties](https:\/\/www.kaggle.com\/argentium\/nfl-punt-penalties)","6fddaef8":"The most common violations are Illegal Block Above the Waist, Offensive Holding, and Interference.\n\n### What is the risk of injury for each penalty violation?"}}