{"cell_type":{"19c4ab6e":"code","4f7060cc":"code","7573518d":"code","065a82fd":"code","ff09a18e":"code","67846530":"code","f378294e":"code","76db44aa":"code","4d36efb0":"code","d6b71186":"code","4f974100":"code","d596e52d":"code","119fbf38":"code","15b94679":"code","b5257d7f":"code","68a965fc":"code","76ca75e0":"code","31ea6431":"code","352ec2d2":"code","8a5b4429":"code","a1ec4a6a":"code","45cd40dd":"code","ec9c3f23":"code","df11dffd":"code","8d7e39df":"code","34fd074b":"code","69d2a4f5":"code","c4ff614a":"code","bbcebc85":"code","b39661a1":"code","b5fd7a9f":"code","b87b527b":"code","542166b2":"code","cd9ffaec":"code","d034ba77":"markdown"},"source":{"19c4ab6e":"import numpy as np \nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","4f7060cc":"train = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","7573518d":"print(train.shape)\nprint(test.shape)","065a82fd":"null_cols = (train.isnull().sum() \/ len(train)).sort_values(ascending=False)[:20]\nnull_cols","ff09a18e":"null_cols = null_cols[null_cols > 0.1].index\nnull_cols","67846530":"null_cols = list(null_cols)\nnull_cols","f378294e":"null_cols.append('Id')\nnull_cols","76db44aa":"train_processed = train.drop(null_cols, axis = 1)\ntest_processed = test.drop(null_cols, axis = 1)","4d36efb0":"print(train_processed.shape)\nprint(test_processed.shape)","d6b71186":"correlation = pd.get_dummies(train_processed, drop_first=True).corr()['SalePrice']\ncorrelation = abs(correlation)\ncorrelation","4f974100":"low_corr = correlation[correlation < 0.2].index\nlow_corr","d596e52d":"pd.get_dummies(train_processed, drop_first = True).shape","119fbf38":"train_processed = pd.get_dummies(train_processed, drop_first=True)\ntest_processed = pd.get_dummies(test_processed, drop_first=True)","15b94679":"print(train_processed.shape)\nprint(test_processed.shape)","b5257d7f":"missing_cols = set(train_processed.columns) - set(test_processed.columns)\nmissing_cols","68a965fc":"for col in missing_cols:\n    test_processed[col] = 0","76ca75e0":"missing_cols = set(train_processed.columns) - set(test_processed.columns)\nmissing_cols","31ea6431":"for col in missing_cols:\n    test_processed[col] = 0","352ec2d2":"print(train_processed.shape)\nprint(test_processed.shape)","8a5b4429":"train_processed.drop(low_corr, axis=1, inplace=True)\ntest_processed.drop(low_corr, axis=1, inplace=True)","a1ec4a6a":"print(train_processed.shape)\nprint(test_processed.shape)","45cd40dd":"X = train_processed.drop('SalePrice', axis=1)\nY = train_processed.SalePrice","ec9c3f23":"from sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.pipeline import Pipeline","df11dffd":"imputer = SimpleImputer()\nscaler = StandardScaler()","8d7e39df":"preprocess = Pipeline([('imputer', imputer), ('scaler', scaler)])","34fd074b":"lr = LinearRegression()","69d2a4f5":"pipeline = Pipeline([('preprocess', preprocess), ('lr', lr)])","c4ff614a":"X_train, X_test, y_train, y_test = train_test_split(X, Y, train_size=0.8)","bbcebc85":"pipeline.fit(X_train, y_train)","b39661a1":"pipeline['lr'].coef_","b5fd7a9f":"pipeline.score(X_test, y_test)","b87b527b":"test_processed.drop('SalePrice', axis=1, inplace=True)\npred = pipeline.predict(test_processed)","542166b2":"submission = pd.DataFrame({\n    'Id': test.Id,\n    'SalePrice': pred\n})\nsubmission.head()","cd9ffaec":"submission.to_csv('output.csv', index=False)","d034ba77":"ID: 181-35-2475"}}