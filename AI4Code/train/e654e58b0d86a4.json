{"cell_type":{"cc69ef22":"code","8f2a8d9c":"code","89c2e31f":"code","20c3c6ba":"code","deb66bbc":"code","996a52c2":"code","564d33d4":"code","4116bd84":"code","b17917b6":"code","7f8171e5":"code","4a3afdf7":"code","11d40d51":"code","b957b044":"code","c38b79ac":"code","92a36363":"code","300fc416":"code","f4e0d6f4":"markdown","cb59255a":"markdown","c7883555":"markdown","0c0b56e6":"markdown","16eaa5a6":"markdown","b7f143cc":"markdown","f92e3fbb":"markdown","aeee22d6":"markdown","f5e25c3c":"markdown","50fa730b":"markdown","4eef7421":"markdown"},"source":{"cc69ef22":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8f2a8d9c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","89c2e31f":"data_url=\"https:\/\/raw.githubusercontent.com\/AdiPersonalWorks\/Random\/master\/student_scores%20-%20student_scores.csv\"\ndataf=pd.read_csv(data_url)\ndataf.head()","20c3c6ba":"x=dataf[[\"Hours\"]].values\ny=dataf[[\"Scores\"]].values\nprint(\"Hours:\",x)\nprint(\"scores:\",y)","deb66bbc":"plt.scatter(x,y,color=\"blue\")\nplt.xlabel(\"No.of study hours\",color=\"black\")\nplt.ylabel(\"Percentage of marks\",color=\"black\")\nplt.title(\"No. of study hours vs Percentage\",color=\"black\")\nplt.show()\n","996a52c2":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=np.array(train_test_split(x,y,test_size=0.2,random_state=100))\nprint(\"x_train:\\n\",x_train[:5])\nprint(\" x_test:\\n\",x_test[:5])\nprint(\"y_train:\\n\",y_train[:5])\nprint(\"y_test:\\n\",y_test[:5])","564d33d4":"print(\"Print shapes of x_train,x_test,y_train and y_test\")\nprint(x_train.shape)\nprint(x_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","4116bd84":"from sklearn.linear_model import LinearRegression\nlinear_model=LinearRegression()\nlinear_model.fit(x_train,y_train)","b17917b6":"print(\"Intercept(b1):\",linear_model.intercept_[0])\nprint(\"Slope(b0):\",linear_model.coef_[0][0])","7f8171e5":"\nfrom sklearn.metrics import r2_score\nytrain_pred=np.array(linear_model.predict(x_train))\nytest_pred=np.array(linear_model.predict(x_test))\nprint(\"Actual values:\",y_test)\nprint(\"Predicted values:\",ytest_pred)\n","4a3afdf7":"\nprint(\"R2 train score:\",r2_score(y_train,ytrain_pred))\nprint(\"R2 test score:\",r2_score(y_test,ytest_pred))","11d40d51":"print(\"R2 train score:\",linear_model.score(x_train,y_train))\nprint(\"R2 test score:\",linear_model.score(x_test,y_test))","b957b044":"from sklearn.metrics import mean_absolute_error\nmae=mean_absolute_error(y_test,ytest_pred)\nprint(\"The mean absolute error of the model is\",mae)","c38b79ac":"plt.scatter(x_train,y_train,color=\"blue\")\nplt.scatter(x_test,y_test,color=\"red\")\nplt.xlabel(\"No.of study hours\",color=\"black\")\nplt.ylabel(\"Percentage of marks\",color=\"black\")\nplt.title(\"No. of study hours vs Percentage\",color=\"black\")\nplt.plot(x_train,linear_model.predict(x_train),color=\"black\")\nplt.show()","92a36363":"plt.scatter(x_test,y_test,color=\"red\")\nplt.xlabel(\"No.of study hours\",color=\"black\")\nplt.ylabel(\"Percentage of marks\",color=\"black\")\nplt.title(\"No. of study hours vs Percentage\",color=\"black\")\nplt.plot(x_test,linear_model.predict(x_test),color=\"black\")\nplt.show()","300fc416":"hours=9.25\npercentage=linear_model.predict(np.array(hours).reshape(1,-1))\nprint(\"The predicted percentage score if the student studies\",hours,\"hours per day is\",percentage[0][0])","f4e0d6f4":"**Check the accuracy of the model and error in the predictions**","cb59255a":"**Train the model with the help dataset**","c7883555":"> Prediction using Supervised ML","0c0b56e6":"**Importing all the Libraries such as numpy,pandas,matplotlib and sklearn**","16eaa5a6":"**Find the Values of X and Y**","b7f143cc":"**Final plot showing the dataset and the linear graph**","f92e3fbb":"\n**Intercept and the slope of the equation**","aeee22d6":"**From the Datasets**","f5e25c3c":"**To check relation between x and y Make a scatter plot with the x and y values.**","50fa730b":"# Predict the percentage of marks that a student is expected to score based upon the number of hours they studied.","4eef7421":"***Predicted Score Is :***"}}