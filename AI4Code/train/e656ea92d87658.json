{"cell_type":{"2e0ba190":"code","0778f9af":"code","4f75d65c":"code","c56a3bb0":"code","b371846a":"code","60ea689f":"code","6fb01252":"code","074ef9dd":"code","dc94e46a":"code","37b5c0c6":"code","27d06b83":"markdown","fbbd7e71":"markdown","e63f3dce":"markdown","1bdafa98":"markdown","a5e892e5":"markdown"},"source":{"2e0ba190":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport altair as alt\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os, warnings\nwarnings.filterwarnings(\"ignore\")\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0778f9af":"alt.renderers.enable('kaggle')","4f75d65c":"%%time\nPlayerSet = pd.read_csv('\/kaggle\/input\/nba-players-stats-20142015\/players_stats.csv')","c56a3bb0":"print(PlayerSet.columns)","b371846a":"height_weight_info = PlayerSet[['Name', 'Height', 'Weight', 'Pos']]\n\nheight_weight_info.head(5)","60ea689f":"alt.Chart(height_weight_info).mark_circle(size=20).encode(\n    x = 'Height',\n    y = 'Weight',\n    color = 'Pos',\n    tooltip = ['Name', 'Height', 'Weight', 'Pos']\n).properties(\n    width=600, \n    height=600\n).interactive()","6fb01252":"three_points_rate = PlayerSet[['Team', '3P%']]\n\nteam_three_points_rate = three_points_rate.groupby('Team').mean()\n\nteam_three_points_rate['Team']  = team_three_points_rate.index\n\nteam_three_points_rate.index = [i for i in range(30)]\n\nteam_three_points_rate.head(3)","074ef9dd":"team_data = alt.Chart(team_three_points_rate).mark_bar(\n    color='lightblue'\n).encode(\n    x = 'Team',\n    y = '3P%'\n)\nmean_rate = alt.Chart(team_three_points_rate).mark_rule(\n    color='green'\n).encode(\n    y = 'mean(3P%)'\n)\n(team_data + mean_rate).properties(width=600)","dc94e46a":"LAL_PLAYER = PlayerSet.loc[PlayerSet['Team']=='LAL']\n\nLAL_PLAYER = LAL_PLAYER[['Name', 'Team', 'MIN', 'PTS', 'REB', 'AST', 'STL', 'BLK', 'TOV']]\n\nLAL_PLAYER.index = range(LAL_PLAYER.shape[0])\n\nt_min, t_pts, t_reb, t_ast, t_stl, t_blk, t_tov =  LAL_PLAYER[['MIN', 'PTS', 'REB', 'AST', 'STL', 'BLK', 'TOV']].sum()\n\nattr_list = []\n\nfor i in LAL_PLAYER.index:\n    \n    p_name, p_team, p_min, p_pts, p_reb, p_ast, p_stl, p_blk, p_tov = LAL_PLAYER.iloc[i]\n    \n    attr_list.append([p_name, 'MIN', p_min\/t_min])\n    attr_list.append([p_name, 'PTS', p_pts\/t_pts])\n    attr_list.append([p_name, 'REB', p_reb\/t_reb])\n    attr_list.append([p_name, 'AST', p_ast\/t_ast])\n    attr_list.append([p_name, 'STL', p_stl\/t_stl])\n    attr_list.append([p_name, 'BLK', p_blk\/t_blk])\n    attr_list.append([p_name, 'TOV', p_tov\/t_tov])\n    \nLAL_DATA = pd.DataFrame(attr_list, columns=['Name', 'Contribute_name', 'Values'])","37b5c0c6":"import altair as alt\n\nbars = alt.Chart(LAL_DATA).mark_bar().encode(\n    x=alt.X('sum(Values)', stack='zero'),\n    y=alt.Y('Contribute_name'),\n    color=alt.Color('Name')\n)\n\ntext = alt.Chart(LAL_DATA).mark_text(dx=-15, dy=3, color='white').encode(\n    x=alt.X('sum(Values):Q', stack='zero'),\n    y=alt.Y('Contribute_name'),\n    detail='Name',\n    text=alt.Text('sum(Values):Q', format='.4f')\n)\n\n(bars + text).properties(width=800, height=300)","27d06b83":"## 3P% Analysis \n- Which team does best on three points fields.\n\n    1. reconstruct the pd.dataFrame focus on the 3P rate and Team name.\n    2. aggregate data group by team.\n    3. visualize the result using altair.","fbbd7e71":"## Lakers are the champions!\n\nMy favorite team is Lakers, so I want to know more about Lakers' players. And their contribute to the team!\n\n- First we select Lakers players from our original dataset.","e63f3dce":"## Pos related to Heights and Weights?\n\nwe can build a linear model to test our thoughts.","1bdafa98":"what we use above is called \"Stacked Bar Chart with Text Overlay\" which visualize 3-dim data.","a5e892e5":"## Visualize Practice "}}