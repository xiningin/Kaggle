{"cell_type":{"95f3c92d":"code","63badc39":"code","96eff1fc":"code","2d024eaa":"code","6c0df646":"code","30494213":"code","c97090e4":"code","e9d10201":"code","6e393018":"code","06c24f16":"code","fb229489":"code","de205b2b":"code","0de6860c":"code","6795f8a7":"code","1c0ee0f5":"code","4fcaf525":"code","73d049be":"code","a04e4e78":"markdown","163e34b4":"markdown","72bedbdf":"markdown","83b6c719":"markdown","b34f15a3":"markdown","d0ceaf9d":"markdown","5c368cf7":"markdown","3e28b541":"markdown","a6d862b6":"markdown"},"source":{"95f3c92d":"#Importing Libraries\nfrom sklearn import model_selection\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\n\n\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","63badc39":"data = pd.read_csv('..\/input\/gesture-recognition\/ASL_DATA.csv', header='infer')  ","96eff1fc":"data.shape","2d024eaa":"data.head()","6c0df646":"#Creating a seperate dataset for Letter A, B & C\n#data_ABC = data[data['Letter'].isin(['A', 'B','C']) ]","30494213":"#Dropping the ID column\n#data_ABC = data_ABC.drop(columns='Id',axis=1)\ndata = data.drop(columns='Id',axis=1)","c97090e4":"#data_ABC.head()\ndata.head()","e9d10201":"#Defining the feature & target\nfeature_col = ['Thumb_Pitch', 'Thumb_Roll', 'Index_Pitch', 'Index_Roll', 'Middle_Pitch', 'Middle_Roll', 'Ring_Pitch', 'Ring_Roll', 'Pinky_Pitch', 'Pinky_Roll', 'Wrist_Pitch', 'Wrist_Roll']\ntarget_col =  ['Letter']\n\n#Applying to the dataset\nX = data[feature_col]\ny = data[target_col]","6e393018":"#spliting the dataset [training & test]\nsize = 0.1   #10% of the dataset will be used for validation\n\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size=size, random_state=0)","06c24f16":"rfc = RandomForestClassifier(n_estimators=1000, criterion='entropy', random_state=None, bootstrap=True)","fb229489":"#training the model with training data\nrfc.fit(X_train, y_train)","de205b2b":"#making prediction on test data\ny_pred = rfc.predict(X_test)  \n\n#Finding the accuracy & precision of the model\nprint(\"Model Accuracy : \",'{:.2%}'.format(metrics.accuracy_score(y_test, y_pred)))\nprint(\"Model Precision :\", '{:.2%}'.format(metrics.precision_score(y_test,y_pred, average='weighted')))","0de6860c":"#Randomly selecting 10 records from the main dataset\ntest_data = data.sample(n=10)","6795f8a7":"test_data.head()","1c0ee0f5":"#prediction on the randomly selected data\ntestdata_pred = rfc.predict(test_data.iloc[:,0:12])","4fcaf525":"# Merging the prediction with the test-data\ntest_data['Prediction'] = testdata_pred","73d049be":"test_data.head(10)","a04e4e78":"**Loading Data**","163e34b4":"**Prediction on Randomly Selected Data**","72bedbdf":"**I'm also surprised as you are to see the accuracy & precision**** \n\n![\"Surprised\"](https:\/\/image.shutterstock.com\/image-photo\/surprised-male-hipster-keeps-mouth-260nw-1109619839.jpg)","83b6c719":"**Gesture Recognition - Random Forest Classifier Model **\n\nHere I have used a simple version of the Random Forest Classifier Model. First I trained the model and then randomly selected data from the original dataset and did the prediction. ","b34f15a3":"Well, it certainly did a 100% accurate prediction on the randomly selected data. Open to hearing about any suggestion about the model\/accuracy :)","d0ceaf9d":"**Feature Selection & dataset Split**","5c368cf7":"**Model Generation, Training & Prediction**","3e28b541":"**Data Exploration & Dataset Split**","a6d862b6":"**Importing Libraries**"}}