{"cell_type":{"8646bc2a":"code","1b7065da":"code","477027e6":"code","b9b37414":"code","56651581":"code","2131c256":"code","caff6dfb":"code","e9a53e0f":"code","864e9c7e":"code","dcfafb6e":"code","71a24f42":"code","c70071a1":"code","3b953b93":"code","6c4cfe77":"code","6e448fb5":"code","ca499b78":"code","be729c4c":"code","69510f15":"code","ae4b57ac":"code","b4dfad73":"code","58aacb32":"code","5ceea204":"code","b61cffda":"code","703dee7e":"code","d1cc3ba3":"code","cc1bd5cf":"code","46278e81":"code","3439d45b":"code","13886842":"code","c5b6960d":"code","6b29291f":"code","ebbef3e2":"code","d38873ec":"code","d6451120":"code","3f0e8131":"code","290c2a37":"code","ed38e74d":"code","2c65b279":"code","54b56056":"code","4b9dabc5":"code","546dc600":"code","40fae9f4":"code","be1be97a":"code","1a1c5404":"code","c247aa82":"code","8420a187":"code","62b759cd":"code","102af7a9":"code","189912ef":"markdown","b7c199fe":"markdown","25d20e62":"markdown","fef767eb":"markdown","25806767":"markdown","c0b2f253":"markdown","0cc25e28":"markdown","5ca3ab1e":"markdown","3e002710":"markdown"},"source":{"8646bc2a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1b7065da":"import seaborn as sns\nfrom matplotlib import pyplot as plt","477027e6":"#reading in the train data\ndf=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf.head()","b9b37414":"sns.set(style=\"ticks\", color_codes=True)\nsns.pairplot(df[['Survived','Age','SibSp','Pclass']])\nplt.show()","56651581":"#checking for null values \nsns.heatmap(df.isnull())","2131c256":"#correlation heatmap\nsns.heatmap(df.corr())","caff6dfb":"df=df.drop(['Cabin','Name','Ticket','Embarked','Fare'],axis=1)\n","e9a53e0f":"df.head()","864e9c7e":"#The Gender Gap Betwwen the people who survived\ndf_survived=df[df['Survived']==1]\nsns.countplot(df_survived['Sex'])","dcfafb6e":"from sklearn.preprocessing import OneHotEncoder\n# creating instance of one-hot-encoder\nenc = OneHotEncoder(handle_unknown='error',drop='first')\n# passing the gender column \nenc_df = pd.DataFrame(enc.fit_transform(df[['Sex']]).toarray())\n# merge with main df bridge_df on key values\ndf =df.join(enc_df)\n","71a24f42":"df['Male']=df[0]\ndf=df.drop(['Sex',0],axis=1)","c70071a1":"plt.figure(figsize=(10,6))\nsns.countplot(df.Survived,hue=df.Male)\nplt.xticks(ticks=[0,1],labels=['Did not Survive','Survived'])\nplt.xlabel('')\nplt.ylabel('Count')\nplt.title('Survived VS Gender')\n\nplt.show()","3b953b93":"plt.figure(figsize=(10,6))\nsns.countplot(df.Survived,hue=df.Pclass)\nplt.xticks(ticks=[0,1],labels=['Did not Survive','Survived'])\nplt.xlabel('')\nplt.ylabel('Count')\nplt.title('Survived VS Pclass')\nplt.show()","6c4cfe77":"plt.figure(figsize=(10,6))\nsns.countplot(df.Male,hue=df.Pclass)\nplt.xticks(ticks=[0,1],labels=['Female','Male'])\nplt.xlabel('')\nplt.ylabel('Count')\nplt.title('Gender Split in Passenger Class')\nplt.show()","6e448fb5":"df.fillna(df.Age.median(),inplace=True)","ca499b78":"sns.heatmap(df.isnull())","be729c4c":"from sklearn.svm import SVC\nclf = SVC()","69510f15":"df.set_index(['PassengerId'],inplace=True)","ae4b57ac":"x=df[['Pclass','Age','SibSp','Parch','Male']]\ny=df['Survived']\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y,test_size=0.25,train_size=0.75)","b4dfad73":"from sklearn.model_selection import GridSearchCV\nparameters = [{'C': [1, 2,3,5,10], 'kernel': ['linear']},\n              {'C': [1, 2,3,5,10], 'kernel': ['rbf'], 'gamma': [0.3, 0.4, 0.5, 0.6, 0.7]}]\ngrid_search = GridSearchCV(estimator = clf,\n                           param_grid = parameters,\n                           scoring = 'accuracy',\n                           cv = 10,\n                           n_jobs = -1)\ngrid_search = grid_search.fit(X_train, y_train)\naccuracy = grid_search.best_score_\nbest_param =grid_search.best_params_\n","58aacb32":"print(best_param)\nprint(accuracy)","5ceea204":"clf_main= SVC(C=1, kernel='rbf',gamma=0.3)\nclf_main.fit(X_train,y_train)","b61cffda":"from sklearn.metrics import confusion_matrix\n\n#add a classifier \n# predict the values from the classifier using test data\npredicted=clf_main.predict(X_test)\nconfusion = confusion_matrix(y_test, predicted)\nprint('Confusion Matrix (SVC)\\n', confusion)","703dee7e":"clf_main.score(X_test,y_test)","d1cc3ba3":"from sklearn.metrics import classification_report\n\nprint(classification_report(y_test, predicted, target_names=[' Dead', 'Survived']))","cc1bd5cf":"import xgboost as xgb","46278e81":"clf_x=xgb.XGBClassifier()","3439d45b":"params={'max_depth':[3,5,10,20,30,40,50,100],\n        'learning_rate':[0.01,0.05,0.1,0.15,0.2],\n        'n_estimators':[100,500,1000],\n        'min_child_weight ':[1,2,3,4,5]\n        }\n","13886842":"from sklearn.model_selection import RandomizedSearchCV\nfrom scipy.stats import randint\ndef hypertuning_rscv(clf, p_distr, nbr_iter,X,y):\n    rdmsearch = RandomizedSearchCV(clf, param_distributions=p_distr,\n                                  n_jobs=-1, n_iter=nbr_iter, cv=10)\n    #CV = Cross-Validation ( here using Stratified KFold CV)\n    rdmsearch.fit(X,y)\n    ht_params = rdmsearch.best_params_\n    ht_score = rdmsearch.best_score_\n    return ht_params, ht_score\n\nrf_parameters, rf_ht_score = hypertuning_rscv(clf_x, params, 40, x,y)","c5b6960d":"rf_parameters","6b29291f":"clf_x=xgb.XGBClassifier(n_estimators= 100,\n                    min_child_weight = 2,\n                    max_depth= 3,\n                    learning_rate= 0.1,\n                    verbosity =3,\n                    objective=\"binary:logistic\",\n                    n_jobs=-1\n                   )\n        \n","ebbef3e2":"clf_x.fit(x,y)","d38873ec":"x","d6451120":"df_test=pd.read_csv('..\/input\/titanic\/test.csv')\ndf_test.head()","3f0e8131":"df_test=df_test.drop(['Cabin','Name','Ticket','Embarked','Fare'],axis=1)\n# passing the gender column \nenc_df_test = pd.DataFrame(enc.fit_transform(df_test[['Sex']]).toarray())\n# merge with main df bridge_df on key values\ndf_test =df_test.join(enc_df_test)\n","290c2a37":"df_test","ed38e74d":"df_test['Male']=df_test[0]\ndf_test=df_test.drop(['Sex',0],axis=1)","2c65b279":"df_test.fillna(df_test.Age.median(),inplace=True)","54b56056":"sns.heatmap(df_test.isnull())","4b9dabc5":"df_test.set_index(['PassengerId'],inplace=True)","546dc600":"test_predict=clf_x.predict(df_test)","40fae9f4":"test_predict=pd.Series(test_predict)","be1be97a":"df_test.reset_index(inplace=True)","1a1c5404":"df_predict=df_test['PassengerId']","c247aa82":"df_predict= pd.concat([df_predict,test_predict], axis=1)\n","8420a187":"df_predict.rename(columns={0: \"Survived\"},inplace=True)\n","62b759cd":"df_predict.to_csv(\"submission.csv\",index=False)","102af7a9":"sns.countplot(df_predict.Survived)","189912ef":"## <u>Gender and survivorship plot<\/u>","b7c199fe":"### From the above plot it is clear that the males dies disproportionately more than the females who were aboard the HMS-Titanic ","25d20e62":"## Reading in the Test data","fef767eb":"## <u>Class and survivorship plot<\/u>","25806767":"### Encoding the Sex Values to binary","c0b2f253":"## Using Xgboost for the Classifier","0cc25e28":"## Reading in the nessesary Libraries","5ca3ab1e":"## Some Visualisations","3e002710":"### This shows us the fact that the people who formed the third class of passengers on this ship died dispropotionately more than the first and second classes "}}