{"cell_type":{"8614f638":"code","1949d1fd":"code","4dc363c3":"code","0a233d16":"code","a9e7cd8b":"code","d2d862f6":"code","e649cb6d":"code","014fc1c8":"code","a0f0c695":"code","ac9d2bae":"code","457c752a":"code","320e5a34":"code","1dabe451":"markdown","ca616a3b":"markdown","c64c0201":"markdown","d4058fc6":"markdown","6225c3b0":"markdown","2bb9e60f":"markdown"},"source":{"8614f638":"# data analysis and wrangling\n\nimport pandas as pd\nimport numpy as np\nimport random as rnd\n\n# visualization\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# machine learning\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier","1949d1fd":"# Read data \n\ntrain_df = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('..\/input\/titanic\/test.csv')\ncombine = [train_df, test_df]","4dc363c3":"# preview the data\n\ntrain_df.head()","0a233d16":"# Check Data type and null data\n\ntrain_df.info()\ntest_df.info()\ntrain_df.describe(include=\"all\")","a9e7cd8b":"# Data visualize\n\ng= sns.FacetGrid(train_df, col ='Survived')\ng.map(plt.hist, 'Age', bins= 20)","d2d862f6":"# Data visualize\n\ngrid = sns.FacetGrid(train_df, row='Embarked', size=2.2, aspect=1.6)\ngrid.map(sns.pointplot, 'Pclass', 'Survived', 'Sex', palette='deep')\ngrid.add_legend()","e649cb6d":"# Data visualize\n\ngrid = sns.FacetGrid(train_df, row='Embarked', col='Survived', size=2.2, aspect=1.6)\ngrid.map(sns.barplot, 'Sex', 'Fare', alpha=.5, ci=None)\ngrid.add_legend()","014fc1c8":"# Feature drop\n\nprint(\"Before\", train_df.shape, test_df.shape, combine[0].shape, combine[1].shape)\n\ntrain_df = train_df.drop(['Ticket', 'Cabin'], axis=1)\ntest_df = test_df.drop(['Ticket', 'Cabin'], axis=1)\ncombine = [train_df, test_df]\n\n\"After\", train_df.shape, test_df.shape, combine[0].shape, combine[1].shape","a0f0c695":"# Make new feature\n\nfor dataset in combine:\n    dataset['Title'] = dataset.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\n\npd.crosstab(train_df['Title'], train_df['Sex'])","ac9d2bae":"for dataset in combine:\n    dataset['Title'] = dataset['Title'].replace(['Lady', 'Countess','Capt', 'Col',\\\n \t'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n\n    dataset['Title'] = dataset['Title'].replace('Mlle', 'Miss')\n    dataset['Title'] = dataset['Title'].replace('Ms', 'Miss')\n    dataset['Title'] = dataset['Title'].replace('Mme', 'Mrs')\n    \ntrain_df[['Title', 'Survived']].groupby(['Title'], as_index=False).mean()","457c752a":"# Data type change\n\ntitle_mapping = {\"Mr\": 1, \"Miss\": 2, \"Mrs\": 3, \"Master\": 4, \"Rare\": 5}\nfor dataset in combine:\n    dataset['Title'] = dataset['Title'].map(title_mapping)\n    dataset['Title'] = dataset['Title'].fillna(0)\n\ntrain_df.head()\ntrain_df = train_df.drop(['Name', 'PassengerId'], axis=1)\ntest_df = test_df.drop(['Name'], axis=1)\ncombine = [train_df, test_df]\ntrain_df.shape, test_df.shape","320e5a34":"# Data labelling\n\nfor dataset in combine:\n    dataset['Sex'] = dataset['Sex'].map( {'female': 1, 'male': 0} ).astype(int)\n\ntrain_df.head()","1dabe451":"## 2.Data preprocessing\n\n","ca616a3b":"## References\n[Titanic Intermediate](https:\/\/www.kaggle.com\/gigunlee\/subinium-tutorial-titanic-intermediate\/edit)","c64c0201":"# Titanic (Intermediate)\n\n## Kaggle Process\n\n1. Question or problem definition\n2. Acquire training and testing data\n3. Wrangle, prepare, cleanse the data\n4. Analyze, identify patterns, and explore the data\n5. Model, predict and solve the problem\n6. Visualize, report, and present the probelm solving steps and final solution\n7. Supply or submit the results\n\n## Workflow goals\n\n1. Classifying\n2. Correlating about EDA\n3. Converting about type of data\n4. Completing about null data\n5. Correcting about noise\n6. Creating for new feature\n7. Charting for visualize","d4058fc6":"## 1. Exploratory data analysis","6225c3b0":"There are categorical data and digital data\n\n(This is very important)\n  depend on which type of data can affect how to encode for our model","2bb9e60f":"Observations :\n* Under 4 age have survive percente\n* Oldest person survive\n* Between 20 and 10 died almost\n* Almost passenger are in 10 ~ 30 age\n* We can make new feature as Parch, SibSp\n* Women survived more than Men\n* The upper-class passengers survived more than others\n\nDecisions :\n* Age is good feature\n* Need to handle Null \n* Age is digital data but, we need to encode this to categorical data"}}