{"cell_type":{"ecac2288":"code","89ffb630":"code","155483aa":"code","b27c567e":"code","871e3041":"code","cbb0a6f1":"code","4d6564c9":"code","fff658d3":"code","6a92d191":"code","93cb083f":"code","70f1c556":"code","413409f7":"code","da321c28":"code","503b4766":"code","75e934ab":"code","1d9ce470":"code","a1ffbf11":"code","efb7ed96":"code","9e5dc402":"code","8ecfa7d5":"code","bca1b108":"code","06cd56ed":"code","d3e84720":"code","ba6aaebc":"code","d953f709":"code","f2475759":"code","3d33cdb3":"code","21d55848":"markdown","b1eb7aae":"markdown","9f7a9c6b":"markdown","6fb57610":"markdown","7b0a2ec6":"markdown","44c04b4f":"markdown","87a9986b":"markdown","aed32ae7":"markdown","025e5bfc":"markdown","88228c68":"markdown","35ee816c":"markdown"},"source":{"ecac2288":"%matplotlib inline\n\nimport glob\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\nfrom cycler import cycler\nplt.style.use('ggplot')\ndata = np.random.randn(50)","89ffb630":"print(plt.style.available)","155483aa":"df = pd.read_csv(\"..\/input\/amsterdam-airbnb-2017\/airbnb.csv\")\ndf.head(10)","b27c567e":"#These Columns are irrelevant to our analysis, so we need to drop them\n#Also dropping 'shared room' as the data in that category is not enough for analysis\ndf.drop(['country', 'borough', 'bathrooms', 'minstay'], axis=1, inplace=True)\ndf = df[df.room_type != 'Shared room']","871e3041":"df.shape","cbb0a6f1":"#Let's check what columns we have now\ndf.columns","4d6564c9":"#Checking the data types\ndf.dtypes","fff658d3":"#calculating some statistical data\ndf.describe()","6a92d191":"print(\"Number of properties:\")\nprint(len(df[\"room_id\"]))\n\nprint(\"\")\nprint(\"Number of unique host:\")\nprint(len(df[\"host_id\"].unique()))\n\n\nprint(\"\")\nprint(\"Number of Room Type:\")\nprint(len(df[\"room_type\"].unique()))\n\n\nprint(\"\")\nprint(\"Number of Borough:\")\nprint(len(df[\"neighborhood\"].unique()))\n\n\nprint(\"\")\nprint(\"Average Price for All Amsterdam:\")\nprint(round(df.price.mean(),2))\n\n\nprint(\"\")\nprint(\"Maximum Price for All Amsterdam:\")\nprint(round(df.price.max(),2))\n\n\nprint(\"\")\nprint(\"Minimum Price for All Amsterdam:\")\nprint(round(df.price.min(),2))\n\n\nprint(\"\")\nprint(\"Number of 0 (Zero) Price:\")\nprint(len(df[df[\"price\"]==0]))\n\nprint(\"\")\nprint(\"Average Number of Revies for All Amsterdam:\")\nprint(round(df.reviews.mean(),2))","93cb083f":"\n#Deleting rows that number of reviews is equal zero\n\ndf = df[(df[\"reviews\"]>0)]\nlen(df)","70f1c556":"df.hist(figsize = (16,9), color='#32a88d')\nplt.show()","413409f7":"nb = df.value_counts('neighborhood')\n\nn = nb.plot(kind='bar',figsize=(15,8), color='#ff0000')\nplt.xlabel('Neighborhood')\nplt.ylabel('Number of Properties')\nplt.title('Most popular AirBnB location in Amsterdam', fontsize=24)\nfor p in n.patches:\n        n.annotate('{:.0f}'.format(p.get_height()), (p.get_x()+0.4, p.get_height()),\n                    ha='center', va='bottom',weight=\"bold\",\n                    color= 'black')\nplt.show()\n\n#1 = De Baarsjes","da321c28":"bc = df.groupby(\"neighborhood\").survey_id.count().sort_values(ascending=False)\nbc = bc.reset_index()\nbc.rename(columns={\"survey_id\":\"count\"}, inplace=True)\nbc[\"percentage\"]=round(bc[\"count\"]\/bc[\"count\"].sum()*100,2)\nbc","503b4766":"labels = 'De Baarsjes\/ Oud West','De Pijp\/ Rivierenbuurt','Centrum West', 'Centrum Oost', 'Westernpark', 'Noord-West\/Midden', 'Oud Oost','Other'\nsizes = [17.99, 12.74, 12.14, 9.25, 7.89, 7.25, 6.34, 26.4]\nexplode = (0.1,0,0,0,0,0,0,0) \n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title('Count of AirBnB location in Amsterdam', fontsize=15)\n\nplt.show()","75e934ab":"import geopandas as gpd\nfrom shapely.geometry import Point, Polygon\n\nBBox = (df.longitude.min(), df.longitude.max(),\n         df.latitude.min(), df.latitude.max())\n\nruh_m = plt.imread(\"..\/input\/map-airbnb\/map.png\")\n\nfig, ax = plt.subplots(figsize = (15,9))\nax.scatter(df.longitude, df.latitude, zorder=1, alpha= 0.1, c='b', s=10)\nax.set_title('Popular AirBnB area in Amsterdam')\nax.set_xlim(BBox[0],BBox[1])\nax.set_ylim(BBox[2],BBox[3])\nax.imshow(ruh_m, zorder=0, extent = BBox, aspect= 'equal')\n\n#West side of Amsterdam is the most popular area to stay at AirBnB","1d9ce470":"happiness = df.value_counts('overall_satisfaction')\nplt.figure(figsize=(6,4))\nax = sns.barplot(happiness.index, happiness.values, alpha=0.8)\nplt.title('Overall Satisfaction', fontsize=18)\nplt.ylabel('Number of rating', fontsize=12)\nplt.xlabel('Rating', fontsize=12)\nplt.xticks(rotation=0)\n\nfor p in ax.patches:\n        ax.annotate('{:.0f}'.format(p.get_height()), (p.get_x()+0.4, p.get_height()),\n                    ha='center', va='bottom',weight=\"bold\",\n                    color= 'black')\nplt.show();","a1ffbf11":"bos = df.groupby(\"neighborhood\").overall_satisfaction.sum().sort_values(ascending=False)\nbos = bos.reset_index()\nbos[\"percentage\"] = round(bos[\"overall_satisfaction\"] \/ bos[\"overall_satisfaction\"].sum()*100,2)\nbos","efb7ed96":"labels = 'De Baarsjes\/ Oud West', 'Centrum West', 'De Pijp\/ Rivierenbuurt', 'Centrum Oost', 'Westernpark', 'Noord-West\/Midden', 'Oud Oost','Other'\nsizes = [18.05, 12.62, 12.59, 9.58, 8.13, 7.01, 6.31, 25.71]\nexplode = (0.1,0,0,0,0,0,0,0) \n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title('Overall Satisfaction in different Borough of Amseterdam', fontsize=15)\n\nplt.show()","9e5dc402":"av = df.groupby('neighborhood').mean()['price'].sum()\/23\nav","8ecfa7d5":"br = df.groupby(\"neighborhood\").price.mean().sort_values(ascending=False)\nbr = br.reset_index()\nbr","bca1b108":"npp = df.groupby('neighborhood').mean()['price'].sort_values(ascending=False)\nav = df.groupby('neighborhood').mean()['price'].sum()\/23\n\nplt.figure(figsize=(20,10))\nax = sns.barplot(npp.index, npp.values, alpha=0.8,)\nplt.title('Average House\/Apt price of Amsterdam neighborhood', fontsize=18)\nplt.ylabel('Houae\/Apt Price', fontsize=12)\nplt.xlabel('Neighborhood', fontsize=12)\nplt.xticks(rotation=90)\nfor p in ax.patches:\n        ax.annotate('{:.0f}'.format(p.get_height()), (p.get_x()+0.4, p.get_height()),\n                    ha='center', va='bottom',weight=\"bold\",\n                    color= 'black')\n\nx_coordinates = [0,23]\ny_median = [(av,2), (av,2)]\n        \nplt.plot(x_coordinates, y_median,linestyle = '--', c=\"gray\")\nplt.text(17.5,149,'Average Price \/ Night = \u00a3142,48',fontsize = 13,backgroundcolor = 'gray',color = 'white')\n\nplt.show();","06cd56ed":"ba = df.groupby('neighborhood').accommodates.sum().sort_values(ascending=False)\nba = ba.reset_index()\nba","d3e84720":"ba = df.groupby('neighborhood').accommodates.sum().sort_values(ascending=False)\nax = ba.plot(kind='bar',figsize=(13,8), color='#407294')\nplt.xlabel('Locations')\nplt.ylabel('Number of Accommodations')\nplt.title('Total number of Accommodations', fontsize=18)\n\nfor p in ax.patches:\n        ax.annotate('{:.0f}'.format(p.get_height()), (p.get_x()+0.4, p.get_height()),\n                    ha='center', va='bottom',weight=\"normal\", rotation=45,\n                    color= 'black')\nplt.show()","ba6aaebc":"sns.boxplot(x=df['price'])","d953f709":"cor = df.drop(['latitude','longitude','survey_id'], axis=1)\nsns.heatmap(cor.corr())","f2475759":"\nimport seaborn as sns; sns.set()\nfrom matplotlib.pyplot import figure\n\nfigure(num=None, figsize=(20, 12), dpi=80, facecolor='w', edgecolor='k')\nsns.violinplot(y='price',x='neighborhood',data=df[df.price < df['price'].quantile(.98)],)\n\nplt.xticks(rotation=90)\n\nplt.show()","3d33cdb3":"figure(num=None, figsize=(16, 9), dpi=80, facecolor='w', edgecolor='k')\n#cmap = sns.cubehelix_palette(as_cmap=True)\nsns.scatterplot(x='reviews',y='price',data=df,alpha=0.5,\\\n                hue='room_type',\\\n                #palette=cmap,\\\n                legend=\"full\")\n\nplt.ylim(0, 2000)\n#plt.xlim(-10, 400)","21d55848":"Answeing: **Average price of the house\/apartment in Amsterdam**","b1eb7aae":"**IMPORTING RELEVANT DATASETS AND LIBRARIES**","9f7a9c6b":"Let's look through the data and see data we can drop. For example, we're looking for data that is irrelevant to our analysis and data column that has 'NaN'","6fb57610":"# AirBnB Analytics Exploratory Analysis task\nby Chuck\n\n","7b0a2ec6":"***","44c04b4f":"# Statistical analysis","87a9986b":"Answering: **Total number of accommodations**","aed32ae7":"Ok, now we understand the dataset a bit more, let's create a bried insight of our data\n\n**Brief Insight**","025e5bfc":"**Introduction**\n\nThis notebook will accomplish the following task:\n\n**Overall goal**:\n\nYou're recently got hired by a company as a data analyst and you've been told by your boss to conduct an analysis on the following dataset and to present your results visually to the team in the next meeting. You need to analyse the data set to understand this problem and propose data-driven solutions.\n\n**Section 01: Exploratory Data Analysis**\n\n* Are there any null values or outliers? if so delete them or fill in the null values\n* Is there any data that we don't need?\n* Create a summary of the dataset\n\n**Section 02: Further Data Analysis**\n\nPlease focus on a specific area such as Neighborhood\/Price\/Reviews and Overall Satifactions to see any patterns or correlations. Also Answers the following questions\n\n* What is the most popular Airbnb location in Amsterdam\n* What is the overall satifaction\n* Which neighborhood has the best overall satifaction?\n* Average price of the house\/apartment in Amsterdam\n* Total number of accommodations?\n\nAdd more if required\n\nData Visualization\n\nPlease plot and visualize your results\n\n","88228c68":"Awesome! Let's look at the **overall satifaction**","35ee816c":"Now let's focus on a paritcular section of our dataset and analyse in more depth! How about answering the question: \n**What is the most popular Airbnb location in Amsterdam**"}}