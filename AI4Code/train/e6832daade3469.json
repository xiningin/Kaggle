{"cell_type":{"a5883c9f":"code","64d69d6e":"code","70d9026f":"code","36de1375":"code","44f0fc7f":"code","09cff593":"code","9fd05595":"code","6a4a1c1e":"code","3ba96954":"code","03447277":"code","d5f2613a":"markdown","550cfc3a":"markdown"},"source":{"a5883c9f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly.graph_objs as go\nfrom plotly import tools\n\nimport plotly.plotly as py\nfrom plotly.plotly import iplot\n\n\n# plotly\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\n\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","64d69d6e":"data = pd.read_csv(\"..\/input\/heart.csv\",sep=\",\") \ndata=data.sort_values(by=['age']) # we sort values according to age\ndata[\"genderText\"]  = [\"male\" if 1 == each else \"female\" for each in data.sex] # adding new column which has text variables. ","70d9026f":"data.info()","36de1375":"data.head()","44f0fc7f":"# corelation map\nf, ax = plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr(),annot=True, linewidths=.5, fmt='.2f', ax=ax)","09cff593":"# histogram (frequency of Happiness Score)\nplt.hist(data.age, bins=50)\nplt.xlabel(\"Age\")\nplt.ylabel(\"Frequency\")\nplt.title(\"histogram\")\nplt.show()","9fd05595":"trace1 = go.Scatter(\n                    x = data.age,\n                    y = data.trestbps,\n                    mode = \"lines\",\n                    name = \"trestbps\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text= data.genderText)\n# Creating trace2\ntrace2 = go.Scatter(\n                    x = data.age,\n                    y = data.chol,\n                    mode = \"lines+markers\",\n                    name = \"chol\",\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'),\n                    text= data.genderText)\n\ndata2 = [trace1, trace2]\nlayout = dict(title = 'trestbps and chol accoding to age',\n              xaxis= dict(title= 'Age',ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data2, layout = layout)\niplot(fig)","6a4a1c1e":"# %% filtering and joint plot\ndataFilter1 =data[data.target==1]\n\ndataFilter0 =data[data.target==0]\n\ng = sns.jointplot(dataFilter1.age, dataFilter1.trestbps, kind=\"kde\", size=7)\n#plt.savefig('graph.png')\nplt.show()\n","3ba96954":"# %% Violin plot - comparing male and female thalach values on Target = 1  \ndataFilterMale = data[data.sex == 1] # both target 1 and male\ndataFilterFemale = data[data.sex == 0] # both targer 1 and female\n\nMaleThalach = pd.DataFrame(dataFilterMale.thalach)\nFemaleThalach = pd.DataFrame(dataFilterFemale.thalach)\nFemaleThalach.index = range(1,97,1) # index stars from 1\nMaleThalach.index = range(1,208,1) # index stars from 1\n\ndfMaleThalach = pd.DataFrame(MaleThalach).iloc[0:96,:] # we take only 96 row\ndfFemaleThalach = pd.DataFrame(FemaleThalach)\nunifiedThalach = pd.concat([dfMaleThalach, dfFemaleThalach], axis=1)\nunifiedThalach.columns = ['Male thalach','Female thalach']  # we renama columns name\n\npal = sns.cubehelix_palette(2, rot=-.5, dark=.3)\nsns.violinplot(data=unifiedThalach, palette=pal, inner=\"points\")\nplt.show()","03447277":"trace0 = go.Box(\n    y=data.trestbps,\n    name = 'trestbps',\n    marker = dict(\n        color = 'rgb(12, 12, 140)',\n    )\n)\ntrace1 = go.Box(\n    y=data.chol,\n    name = 'chol',\n    marker = dict(\n        color = 'rgb(12, 128, 128)',\n    )\n)\nfig = [trace0, trace1]\niplot(fig)","d5f2613a":"According to corrleation map it looks** target** has a relationship with **cp (0.43)** and **thalach (0.42)** and **slope (0.35)**.\nIn additon to this **target** has a inverse ratio with** exang (-0.44)** and **oldpeak (-0.43)** and **ca (-0.39)**\n","550cfc3a":"According to corrleation map it looks target has a relationship both cp (0.43) and thalach (0.42).\n"}}