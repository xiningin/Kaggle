{"cell_type":{"67662be2":"code","823b5d47":"code","88d23d85":"code","b7511698":"code","adfc5ec7":"code","0b241e01":"code","29fe95fe":"code","2fa0b710":"code","9ddf567a":"code","e4ec97bf":"code","94b92384":"code","c6a993f6":"code","3dd601c7":"code","ce42ca77":"code","b225f92a":"code","ba053d86":"code","f09db8fa":"code","a2cba13c":"code","2dc9ee89":"code","dcd6c3f7":"code","2af1b54b":"code","6be84f10":"code","979785b2":"code","9b06823f":"code","7a3fc217":"code","b1fe3aa2":"code","b8945265":"code","a9e4b242":"code","ed4ec7b7":"code","83682a34":"code","243c9d21":"code","cb6f8d22":"code","12337198":"code","bc967dd0":"code","a1344c6f":"code","25efc6d9":"code","827807c4":"code","c0e419a5":"code","6e2bbc25":"code","2a97bc1e":"code","7c93082b":"code","713fd189":"code","59f42fab":"code","811ded1a":"code","21533520":"code","6862ff99":"code","22061e87":"code","d28f8f98":"code","a2514823":"code","48bfe49d":"code","7f385643":"code","19523aa5":"code","dd81398a":"code","0822f792":"code","cb03ad13":"code","fd39ee45":"code","e9d7a6e0":"code","4b5f6892":"code","9a23f693":"code","ca9352a0":"markdown","ccdc357a":"markdown","700bbebb":"markdown","55aff3be":"markdown","3d105372":"markdown","b6127c4b":"markdown","8a6c9a1b":"markdown","5ea7cc60":"markdown","4e6bd73b":"markdown","b1aff353":"markdown","3addd324":"markdown","5e9de325":"markdown","1de7e906":"markdown","75eb3f3c":"markdown","0bea6857":"markdown","c52032b2":"markdown","6f5e3eae":"markdown","86c71308":"markdown","50d97bcd":"markdown","497611a6":"markdown","d60ed37b":"markdown","37c1fa14":"markdown","d76791c0":"markdown","7812ca53":"markdown","48082fed":"markdown","856149c3":"markdown","1818e7b0":"markdown","682a230c":"markdown","5e70393e":"markdown","b66b1531":"markdown","12b1d9ac":"markdown","d142316b":"markdown","edcfda34":"markdown","ac9c8dee":"markdown","c5e8b263":"markdown","6d0c48e3":"markdown","900a2d19":"markdown","5d9f6866":"markdown","87e1f6af":"markdown","63a4666d":"markdown","34c76362":"markdown","86b294ba":"markdown","a9e15efc":"markdown","273d9baf":"markdown","bb5979e1":"markdown","2130d381":"markdown","8ecf50d0":"markdown","267c7b91":"markdown","72d60270":"markdown","b148defd":"markdown","cca788d3":"markdown","120d8595":"markdown","2a1f82d7":"markdown","7e8e4935":"markdown","e4905476":"markdown","f3c6b4e0":"markdown","f567c4af":"markdown"},"source":{"67662be2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n%matplotlib inline\nimport matplotlib.pyplot as plt  # Matlab-style plotting\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom scipy import stats\nfrom scipy.stats import norm, skew #for some statistics\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","823b5d47":"train = pd.read_csv(\"..\/input\/train.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")\n\ntrain.describe()","88d23d85":"print(\"Tama\u00f1o del set de entrenamiento {}\".format(train.shape))\nprint(\"Tama\u00f1o del set de test {}\".format(test.shape))","b7511698":"#Guardamos las columnas\ntrain_ID = train['Id']\ntest_ID = test['Id']\n\n#Ahora eliminamos la columna ID que es innecesaria para este proceso de prediccion\n\ntrain.drop(\"Id\",axis=1,inplace=True)\ntest.drop(\"Id\",axis=1,inplace=True)\n","adfc5ec7":"print(\"Tama\u00f1o del set de entrenamiento {}\".format(train.shape))\nprint(\"Tama\u00f1o del set de test {}\".format(test.shape))\n\n#Registros de cabecera\ntrain_ID.head()\n","0b241e01":"fig, ax = plt.subplots()\nax.scatter(x=train[\"GrLivArea\"],y=train[\"SalePrice\"])\nplt.ylabel(\"Precio de venta\",fontsize=13)\nplt.xlabel(\"GrLivArea\",fontsize=13)\nplt.show()","29fe95fe":"train = train.drop(train[(train[\"GrLivArea\"]>4000) & (train[\"SalePrice\"]<300000)].index)","2fa0b710":"# most correlated features\ncorrmat = train.corr()\ntop_corr_features = corrmat.index[abs(corrmat[\"SalePrice\"])>0.5]\nplt.figure(figsize=(10,10))\ng = sns.heatmap(train[top_corr_features].corr(),annot=True,cmap=\"RdYlGn\")\n\n#numeric_features = train.select_dtypes(include=[np.number])\n#corr = numeric_features.corr()\n#print(corr['SalePrice'].sort_values(ascending=False)[:10],'\\n')\n#print(corr['SalePrice'].sort_values(ascending=False)[-10:])","9ddf567a":"#sns.barplot(train.OverallQual,train.SalePrice)","e4ec97bf":"sns.set()\ncols = ['SalePrice', 'OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', 'FullBath', 'YearBuilt']\nsns.pairplot(train[cols], height = 2.5)\nplt.show();","94b92384":"sns.scatterplot(train.GrLivArea,train.TotalBsmtSF)","c6a993f6":"print(\"La asimetria  es: \", train.SalePrice.skew())\nplt.hist(train.SalePrice, color='blue')\nplt.show()","3dd601c7":"print(\"La asimetria  es: \", np.log1p(train[\"SalePrice\"]).skew())\nplt.hist(np.log1p(train[\"SalePrice\"]), color='blue')\nplt.show()\n\nprint(\"La asimetria  es: \", np.log(train[\"SalePrice\"]).skew())\nplt.hist(np.log(train[\"SalePrice\"]), color='blue')\nplt.show()","ce42ca77":"train[\"SalePrice\"] = np.log(train[\"SalePrice\"])\n\n","b225f92a":"ntrain = train.shape[0]\nntest = test.shape[0]\ny_train = train.SalePrice.values\ntrain2 = train.copy()\ntrain2.drop(['SalePrice'], axis=1, inplace=True)\nall_data = pd.concat((train2, test)).reset_index(drop=True)\n#all_data.drop(['SalePrice'], axis=1, inplace=True)\nprint(\"Data de Entrenamiento : {}\".format(train2.shape))\nprint(\"Data de Test : {}\".format(test.shape))\nprint(\"all_data size is : {}\".format(all_data.shape))\n","ba053d86":"all_data.head()","f09db8fa":"\nall_data_na = (all_data.isnull().sum() \/ len(all_data)) * 100\n#all_data_na.sort_values(ascending=False)[:30]","a2cba13c":"all_data_na = all_data_na.drop(all_data_na[all_data_na == 0].index).sort_values(ascending=False)[:30]\nmissing_data = pd.DataFrame({'Missing Ratio' :all_data_na})\n","2dc9ee89":"f, ax = plt.subplots(figsize=(15, 12))\nplt.xticks(rotation='90')\nsns.barplot(x=all_data_na.index, y=all_data_na)\nplt.xlabel('Features', fontsize=15)\nplt.ylabel('Percent of missing values', fontsize=15)\nplt.title('Percent missing data by feature', fontsize=15)","dcd6c3f7":"all_data.PoolQC.loc[all_data.PoolQC.notnull()]","2af1b54b":"all_data[\"PoolQC\"] = all_data[\"PoolQC\"].fillna(\"None\")","6be84f10":"all_data[\"MiscFeature\"] = all_data[\"MiscFeature\"].fillna(\"None\")","979785b2":"all_data[\"Alley\"] = all_data[\"Alley\"].fillna(\"None\")","9b06823f":"all_data[\"Fence\"] = all_data[\"Fence\"].fillna(\"None\")","7a3fc217":"all_data[\"FireplaceQu\"] = all_data[\"FireplaceQu\"].fillna(\"None\")","b1fe3aa2":"grouped_df = all_data.groupby('Neighborhood')['LotFrontage']\n\n\nfor key, item in grouped_df:\n    print(key,\"\\n\")\n    print(grouped_df.get_group(key))\n    break","b8945265":"#Group by neighborhood and fill in missing value by the median Lot Frontage of all the neighborhood\n# Agrupar por barrio y completar el valor que falta por la mediana LotFrontage de todo el vecindario\n\nall_data[\"LotFrontage\"] = all_data.groupby(\"Neighborhood\")[\"LotFrontage\"].transform(lambda x: x.fillna(x.median()))","a9e4b242":"grouped_df = all_data.groupby('Neighborhood')['LotFrontage']\n\n\nfor key, item in grouped_df:\n    print(key,\"\\n\")\n    print(grouped_df.get_group(key))\n    break","ed4ec7b7":"for col in ['GarageType', 'GarageFinish', 'GarageQual', 'GarageCond']:\n    all_data[col] = all_data[col].fillna('None')","83682a34":"abc = ['GarageType', 'GarageFinish', 'GarageQual', 'GarageCond','GarageYrBlt', 'GarageArea', 'GarageCars']\nall_data.groupby('GarageType')[abc].count()","243c9d21":"for col in ('GarageYrBlt', 'GarageArea', 'GarageCars'):\n    all_data[col] = all_data[col].fillna(0)","cb6f8d22":"for col in ('BsmtFinSF1', 'BsmtFinSF2', 'BsmtUnfSF','TotalBsmtSF', 'BsmtFullBath', 'BsmtHalfBath'):\n    all_data[col] = all_data[col].fillna(0)","12337198":"for col in ('BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2'):\n    all_data[col] = all_data[col].fillna('None')","bc967dd0":"all_data[\"MasVnrType\"] = all_data[\"MasVnrType\"].fillna(\"None\")\nall_data[\"MasVnrArea\"] = all_data[\"MasVnrArea\"].fillna(0)","a1344c6f":"all_data['MSZoning'].value_counts()","25efc6d9":"all_data['MSZoning'] = all_data['MSZoning'].fillna(all_data['MSZoning'].mode()[0])","827807c4":"all_data['Utilities'].value_counts()","c0e419a5":"all_data = all_data.drop(['Utilities'], axis=1)","6e2bbc25":"all_data[\"Functional\"] = all_data[\"Functional\"].fillna(\"Typ\")","2a97bc1e":"mode_col = ['Electrical','KitchenQual', 'Exterior1st', 'Exterior2nd', 'SaleType']\nfor col in mode_col:\n    all_data[col] = all_data[col].fillna(all_data[col].mode()[0])","7c93082b":"all_data['MSSubClass'] = all_data['MSSubClass'].fillna(\"None\")","713fd189":"#Check remaining missing values if any \nall_data_na = (all_data.isnull().sum() \/ len(all_data)) * 100\nall_data_na = all_data_na.drop(all_data_na[all_data_na == 0].index).sort_values(ascending=False)\nmissing_data = pd.DataFrame({'Missing Ratio' :all_data_na})\nmissing_data.head()","59f42fab":"#MSSubClass=The building class\nall_data['MSSubClass'] = all_data['MSSubClass'].apply(str)\n\n\n#Changing OverallCond into a categorical variable\nall_data['OverallCond'] = all_data['OverallCond'].astype(str)\n\n\n#Year and month sold are transformed into categorical features.\nall_data['YrSold'] = all_data['YrSold'].astype(str)\nall_data['MoSold'] = all_data['MoSold'].astype(str)","811ded1a":"from sklearn.preprocessing import LabelEncoder\ncols = ('FireplaceQu', 'BsmtQual', 'BsmtCond', 'GarageQual', 'GarageCond', \n        'ExterQual', 'ExterCond','HeatingQC', 'PoolQC', 'KitchenQual', 'BsmtFinType1', \n        'BsmtFinType2', 'Functional', 'Fence', 'BsmtExposure', 'GarageFinish', 'LandSlope',\n        'LotShape', 'PavedDrive', 'Street', 'Alley', 'CentralAir', 'MSSubClass', 'OverallCond', \n        'YrSold', 'MoSold')\n# process columns, apply LabelEncoder to categorical features\nfor c in cols:\n    lbl = LabelEncoder() \n    lbl.fit(list(all_data[c].values)) \n    all_data[c] = lbl.transform(list(all_data[c].values))\n\n# shape        \nprint('Shape all_data: {}'.format(all_data.shape))","21533520":"# Adding total sqfootage feature \nall_data['TotalSF'] = all_data['TotalBsmtSF'] + all_data['1stFlrSF'] + all_data['2ndFlrSF']","6862ff99":"numeric_feats = all_data.dtypes[all_data.dtypes != \"object\"].index\n\n# Check the skew of all numerical features\nskewed_feats = all_data[numeric_feats].apply(lambda x: skew(x.dropna())).sort_values(ascending=False)\nprint(\"\\nSkew in numerical features: \\n\")\nskewness = pd.DataFrame({'Skew' :skewed_feats})\nskewness.head(15)","22061e87":"skewness = skewness[abs(skewness) > 0.75]\nprint(\"There are {} skewed numerical features to Box Cox transform\".format(skewness.shape[0]))\n\nfrom scipy.special import boxcox1p\nskewed_features = skewness.index\nlam = 0.15\nfor feat in skewed_features:\n    #all_data[feat] += 1\n    all_data[feat] = boxcox1p(all_data[feat], lam)","d28f8f98":"all_data = pd.get_dummies(all_data)\nall_data.shape","a2514823":"train = all_data[:ntrain]\ntest = all_data[ntrain:]\ntrain.shape","48bfe49d":"train.to_csv('train_preprocesado.csv',index=False)\ntest.to_csv('test_preprocesado.csv',index=False)","7f385643":"from sklearn.linear_model import ElasticNet, Lasso,  BayesianRidge, LassoLarsIC\nfrom sklearn.ensemble import RandomForestRegressor,  GradientBoostingRegressor\nfrom sklearn.kernel_ridge import KernelRidge\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.base import BaseEstimator, TransformerMixin, RegressorMixin, clone\nfrom sklearn.model_selection import KFold, cross_val_score, train_test_split\nfrom sklearn.metrics import mean_squared_error\nimport xgboost as xgb\nimport lightgbm as lgb","19523aa5":"#Validation function\nn_folds = 5\n\ndef rmsle_cv(model):\n    kf = KFold(n_folds, shuffle=True, random_state=42).get_n_splits(train.values)\n    rmse= np.sqrt(-cross_val_score(model, train.values, y_train, scoring=\"neg_mean_squared_error\", cv = kf))\n    return(rmse)","dd81398a":"KRR = KernelRidge(alpha=0.6, kernel='polynomial', degree=2, coef0=2.5)\nscore = rmsle_cv(KRR)\nprint(\"Kernel Ridge score: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()))","0822f792":"lasso = make_pipeline(RobustScaler(), Lasso(alpha =0.0005, random_state=1))\nscore = rmsle_cv(lasso)\nprint(\"Lasso score: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()))","cb03ad13":"ENet = make_pipeline(RobustScaler(), ElasticNet(alpha=0.0005, l1_ratio=.9, random_state=3))\nscore = rmsle_cv(ENet)\nprint(\"ElasticNet score: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()))","fd39ee45":"GBoost = GradientBoostingRegressor(n_estimators=3000, learning_rate=0.05,\n                                   max_depth=4, max_features='sqrt',\n                                   min_samples_leaf=15, min_samples_split=10, \n                                   loss='huber', random_state =5)\nscore = rmsle_cv(GBoost)\nprint(\"Gradient Boosting score: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()))","e9d7a6e0":"LassoMd = lasso.fit(train.values,y_train)\nENetMd = ENet.fit(train.values,y_train)\nKRRMd = KRR.fit(train.values,y_train)\nGBoostMd = GBoost.fit(train.values,y_train)","4b5f6892":"finalMd = (np.expm1(LassoMd.predict(test.values)) + np.expm1(ENetMd.predict(test.values)) + np.expm1(KRRMd.predict(test.values)) + np.expm1(GBoostMd.predict(test.values)) ) \/ 4\nfinalMd","9a23f693":"sub = pd.DataFrame()\nsub['Id'] = test_ID\nsub['SalePrice'] = finalMd\nsub.to_csv('submission.csv',index=False)","ca9352a0":"Media de todas las predicciones del modelo.\nnp.expm1 () se usa para calcular exp (x) - 1 para todos los elementos en la matriz.","ccdc357a":"Fence : la descripci\u00f3n de los datos dice que NA significa  \"no fence\"","700bbebb":"Este es un data set muy amplio y trabajaremos para limpiar un poco los el data set","55aff3be":"Graficamos el porentaje de datos null","3d105372":"GarageType, GarageFinish, GarageQual, GarageCond, GarageYrBlt, GarageArea, GarageCars, estas caracter\u00edsticas tienen el mismo porcentaje de valores nulos.","b6127c4b":"**Codificaci\u00f3n de etiquetas**\nComo ya sabr\u00e1, no podemos incluir texto en nuestros datos si vamos a ejecutar cualquier tipo de modelo en \u00e9l. Entonces, antes de que podamos ejecutar un modelo, debemos preparar estos datos para el modelo.\n\nY para convertir este tipo de datos de texto categ\u00f3rico en datos num\u00e9ricos comprensibles por el modelo, usamos la clase Label Encoder.\n\nSupongamos que tenemos una funci\u00f3n Estado que tiene 3 categor\u00edas, es decir, India, Francia y China. Entonces, Label Encoder los categorizar\u00e1 como 0, 1, 2.","8a6c9a1b":"A partir de esto, podemos decir qu\u00e9 caracter\u00edsticas (**OverallQual, GrLivArea y TotalBsmtSF**) tienen una correlaci\u00f3n altamente positiva con SalePrice.\n**GarageCars y GarageArea** tambi\u00e9n parecen estar correlacionados con otros, ya que el numero de  autom\u00f3viles que cabe en el garaje depender\u00e1 de GarageArea.","5ea7cc60":"# Ingenieria de las caracteristicas","4e6bd73b":"Como PoolQC tiene los valores nulos m\u00e1s altos de acuerdo con la documentaci\u00f3n de datos, dice que los valores nulos significan 'Sin agrupaci\u00f3n'. Dado que la mayor\u00eda de las casas no tiene piscina. Entonces reemplazaremos esos valores nulos con 'None'.","b1aff353":"BsmtQual, BsmtCond, BsmtExposure, BsmtFinType1 y BsmtFinType2: para todas estas caracter\u00edsticas categ\u00f3ricas relacionadas con el s\u00f3tano, NaN significa que no hay s\u00f3tano.","3addd324":"# 1) Cargar los datos\nVamos a empezar cargando los datos y visualizar una peque\u00f1a descripcion sobre el contenido total","5e9de325":"MiscFeature: La documentaci\u00f3n de datos dice que NA significa \"sin caracter\u00edstica misc\"","1de7e906":"Vamos a visualizar el volumen de nustros datos de entrenamiento y test","75eb3f3c":"Electrical, KitchenQual, Exterior1st, Exterior2nd, SaleType: Dado que todos estos son valores categ\u00f3ricos, es mejor reemplazar los valores de nan con la palabra clave m\u00e1s utilizada.","0bea6857":"En primer lugar guardaremos el campo columna en una variable temporal y lo eliminaremos del DataSet Original, y visualizaremos el tama\u00f1o de nuestras columnas luego de este paso","c52032b2":"# **Regresi\u00f3n de Ridge**\n\nReduce los par\u00e1metros, por lo tanto, se usa principalmente para evitar la multicolinealidad.\n\nReduce la complejidad del modelo por contracci\u00f3n del coeficiente.\n\nUtiliza la t\u00e9cnica de regularizaci\u00f3n L2.","6f5e3eae":"Imprimimos el contenido de la columna que tiene menos datos","86c71308":"Esta distribuci\u00f3n est\u00e1 sesgada positivamente. Observe que la curva negra est\u00e1 m\u00e1s desviada hacia la derecha. Si encuentra que su variable de predicci\u00f3n (respuesta) est\u00e1 sesgada, se recomienda corregir la asimetr\u00eda para tomar buenas decisiones por parte del modelo.","50d97bcd":"# Regresi\u00f3n neta el\u00e1stica\nElastic net es b\u00e1sicamente una combinaci\u00f3n de ambas regularizaciones, L1 y L2. Entonces, si conoce Elastic Net, puede implementar tanto Ridge como Lasso ajustando los par\u00e1metros.","497611a6":"**Modelado**\n\nDado que en este conjunto de datos tenemos un gran conjunto de caracter\u00edsticas. Para que nuestro modelo evite el exceso de equipamiento y el ruido, utilizaremos Regularizaci\u00f3n. Estos modelos tienen un par\u00e1metro de Regularizaci\u00f3n.\n\nLa regularizaci\u00f3n reducir\u00e1 la magnitud de los coeficientes.","d60ed37b":"Veamos las caracter\u00edsticas altamente sesgadas que tenemos","37c1fa14":"Una de las figuras que nos puede parecer interesante es la que se encuentra entre 'TotalBsmtSF' y 'GrLiveArea'.\n\nPodemos ver los puntos dibujando una l\u00ednea lineal, que casi act\u00faa como un borde. Tiene sentido que la mayor\u00eda de los puntos permanezcan debajo de esa l\u00ednea. Las \u00e1reas del s\u00f3tano pueden ser iguales a la superficie de la vivienda superior, pero no se espera que el s\u00f3tano sea m\u00e1s grande que el \u00e1rea de la vivienda superior","d76791c0":"Calculamos el porcentaje de la data que es null o esta vacia por cada lumna","7812ca53":"GarageType, GarageFinish, GarageQual y GarageCond: Reemplazar los datos faltantes por None seg\u00fan la documentaci\u00f3n.","48082fed":"Creating train and test data.","856149c3":"**Tratamiento de las anomalias**\nAnomalias  en GrLivArea es recomendado por el autor de los datos para eliminarlo. El autor dice en la documentaci\u00f3n \"Yo recomendar\u00eda eliminar cualquier casa con m\u00e1s de 4000 pies cuadrados del conjunto de datos (que elimina estas cinco observaciones inusuales) antes de asignarlo a los estudiantes\".","1818e7b0":"# Vamos a verificar si faltan valores","682a230c":"MSZoning (La clasificaci\u00f3n general de zonificaci\u00f3n): 'RL' es con mucho el valor m\u00e1s com\u00fan. Entonces podemos completar los valores perdidos con 'RL'","5e70393e":"Ahora hay muchas caracter\u00edsticas que son num\u00e9ricas pero categ\u00f3ricas.","b66b1531":"Diagramas de dispersion  entre 'SalePrice' y variables correlacionada ","12b1d9ac":"Obteniendo caracter\u00edsticas categ\u00f3ricas ficticias","d142316b":"Ajustar el conjunto de datos de entrenamiento en cada modelo","edcfda34":"Generamos la Dara para visualizar antes de pasar por los modelos de regresion.","ac9c8dee":"MasVnrArea y MasVnrType: NA probablemente significa que no hay chapa de mamposter\u00eda para estas casas. Podemos completar 0 para el \u00e1rea y None para el tipo","c5e8b263":"BsmtFinSF1, BsmtFinSF2, BsmtUnfSF, TotalBsmtSF, BsmtFullBath y BsmtHalfBath: los valores faltantes son probablemente cero por no tener s\u00f3tano, es decir si no tiene zotano en todos los casos que figure NA No hay s\u00f3tano se remplazaran por ceros","6d0c48e3":"**Analisis de correlacion**\n\nVamos a graficas las caracteristicas con mas correlacion","900a2d19":"LotFrontage: dado que el \u00e1rea de cada calle conectada a la propiedad de la casa probablemente tenga un \u00e1rea similar a otras casas en su vecindario, podemos completar los valores que faltan por la mediana de LotFrontage del vecindario.\n\nPor ende las casas que esten en el mismo vecindario se completaran su campo LotFrontage con la media de sus vecinas de el mismo vecindario","5d9f6866":"Alley : la descripci\u00f3n de los datos dice NA significa \"no alley access\"","87e1f6af":"**Convirtiendo algunas variables num\u00e9ricas que son realmente de tipo categ\u00f3rico.**\n\nComo puede ver, el rango de categor\u00eda de 1 a 9 es num\u00e9rico (no de tipo ordinal). Dado que es categ\u00f3rico, debemos cambiarlo a tipo de cadena.\n\nSi no los convertimos en categ\u00f3ricos, algunos modelos pueden verse afectados por esto, ya que el modelo comparar\u00e1 el valor 1 <5 <10. No necesitamos que eso suceda con nuestro modelo.","63a4666d":"Validamos que todos los datos Nan fueron remplazados por los promedios de el vecindario","34c76362":"**Validaci\u00f3n cruzada**\nEs una forma simple de calcular el error para la evaluaci\u00f3n.\n\nKFold () divide los datos de tren \/ prueba en k pliegues consecutivos, tambi\u00e9n hemos hecho aleatorio attrib en True.\n\ncross_val_score () eval\u00faa un puntaje mediante validaci\u00f3n cruzada.","86b294ba":"# Vamos aplicar Modelado\nImportar Bibliotecas\n\nUsaremos modelos\n\nLasso\nRidge\nElasticNet\nGradient Boosting\nFind the Cross Validation Score.\n\nCalcule el promedio de la predicci\u00f3n de todos los modelos.\nPresentar el archivo CSV.","a9e15efc":"Visualizamos la agrupacion de datos****","273d9baf":"# Regresi\u00f3n de Lasso\nLASSO (Operador Selector de Contracci\u00f3n M\u00ednima Absoluta), es bastante similar a Ridge\n\nEn el caso del lazo, incluso en alfa m\u00e1s peque\u00f1as, nuestros coeficientes se est\u00e1n reduciendo a ceros absolutos. Por lo tanto, lazo selecciona la \u00fanica caracter\u00edstica y reduce los coeficientes de otros a cero. Esta propiedad se conoce como selecci\u00f3n de caracter\u00edsticas y est\u00e1 ausente en caso de cresta.\n\nLasso usa la t\u00e9cnica de regularizaci\u00f3n L1.\nLasso generalmente se usa cuando tenemos m\u00e1s caracter\u00edsticas, porque selecciona la funci\u00f3n autom\u00e1ticamente","bb5979e1":"GarageYrBlt, GarageArea y GarageCars: Reemplazar los datos faltantes con 0 (Dado que no hay garaje = no hay autos en ese garaje).","2130d381":"FireplaceQu : a descripci\u00f3n de los datos dice NA significa \"no fireplace\"","8ecf50d0":"# **Transformaci\u00f3n de Box Cox de caracter\u00edsticas (altamente) sesgadas**\nCuando se trata de datos del mundo real, va a tratar con caracter\u00edsticas que est\u00e1n muy sesgadas. La t\u00e9cnica de transformaci\u00f3n es \u00fatil para estabilizar la varianza, hacer que los datos sean m\u00e1s parecidos a la distribuci\u00f3n normal, mejorar la validez de las medidas de asociaci\u00f3n.\n\nEl problema con la Transformaci\u00f3n de Box-Cox es la estimaci\u00f3n de lambda. Este valor depender\u00e1 de los datos existentes, y se debe considerar al realizar validaci\u00f3n cruzada en conjuntos de datos fuera de muestra.","267c7b91":"Utilidades: dado que se trata de datos categ\u00f3ricos y la mayor\u00eda de los datos son de la misma categor\u00eda, no afectar\u00e1n al modelo. Entonces elegimos dejarlo caer.","72d60270":"Transformaci\u00f3n de variable objetivo\n\nLas diferentes caracter\u00edsticas en el conjunto de datos pueden tener valores en diferentes rangos. Por ejemplo, en este conjunto de datos, el rango de la caracter\u00edstica SalePrice puede estar entre miles y soles, pero el rango de valores de la caracter\u00edstica YearBlt ser\u00e1 en miles. Eso significa que una columna es m\u00e1s ponderada en comparaci\u00f3n con otras.\n\nPermite verificar la asimetr\u00eda de los datos","b148defd":"Dado que las caracter\u00edsticas relacionadas con el \u00e1rea son muy importantes para determinar los precios de la vivienda, agregamos una caracter\u00edstica m\u00e1s que es el \u00e1rea total del s\u00f3tano, las \u00e1reas del primer y segundo piso de cada casa","cca788d3":"# Manejar los datos faltantes","120d8595":"MSSubClass: Na probablemente significa No construir clase. Podemos reemplazar valores perdidos con None","2a1f82d7":"Submission","7e8e4935":"# Gradient Boosting Regression","e4905476":"Vamos a Eliminar las anomalias que tienen un tama\u00f1o muy grande y precio bajo","f3c6b4e0":"# Datos perdidos","f567c4af":"Funcional: la descripci\u00f3n de los datos dice NA significa t\u00edpica"}}