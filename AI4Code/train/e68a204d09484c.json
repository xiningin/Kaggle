{"cell_type":{"ec84ab98":"code","66b37b9a":"code","6d4ba6c2":"code","634f2a4b":"code","c4dc8b10":"code","7bfa59f5":"code","2902d8af":"code","a389fc0c":"code","8defb118":"code","9d060ad5":"code","e79bc5bc":"code","88128b0f":"code","15a3e756":"code","3bbb3695":"code","fade8c1a":"code","5139854f":"code","5de19b7a":"code","0eb58513":"code","6b295db4":"code","0f603003":"code","df70d3a6":"code","75cba35a":"code","f9cd87fa":"code","7d448c8b":"code","14c0f36a":"code","82844fc0":"code","2805714d":"code","46391881":"code","79219b3d":"code","bee3c13c":"code","b4db513d":"code","86439a0f":"code","d7c81c94":"code","7dab957e":"code","d563fcee":"markdown","4d3d3013":"markdown","0ff915bf":"markdown","1327f4bc":"markdown","34074bb0":"markdown","8f8b36fb":"markdown","c3333e2f":"markdown"},"source":{"ec84ab98":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","66b37b9a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder,OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor","6d4ba6c2":"data=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndata.head()","634f2a4b":"colmiss=[col for col in data.columns if data[col].isnull().any()]\nprint(colmiss)","c4dc8b10":"for col in colmiss:\n    if(data[col].dtype == np.dtype('O')):\n         data[col]=data[col].fillna(data[col].value_counts().index[0])    #replace nan with most frequent\n    else:\n        data[col] = data[col].fillna(data[col].mean()) ","7bfa59f5":"data.isnull().sum()","2902d8af":"data.head(5)","a389fc0c":"x=data.iloc[:,1:-1]\ny=data.iloc[:,-1]","8defb118":"data.info","9d060ad5":"data.columns","e79bc5bc":"x.shape","88128b0f":"x.isnull().sum()   ","15a3e756":"x.select_dtypes(include=['object']).head(6)","3bbb3695":"i=0\nfor name in data.columns: \n    print(name,i)\n    i+=1","fade8c1a":"for co in x.select_dtypes(include=['object']):\n    print(x[co].describe())","5139854f":"LE = LabelEncoder()\nfor col in x.select_dtypes(include=['object']):\n    x[col] = LE.fit_transform(x[col])","5de19b7a":"dc=data.corr()\ndc","0eb58513":"plt.figure(figsize=(30,30))\nsns.heatmap(data.corr())","6b295db4":"data.hist(figsize=(20,20))","0f603003":"corr = data.corr()\nf,ax=plt.subplots(figsize=(20,1))\nsns.heatmap(corr.sort_values(by=['SalePrice'],ascending=False).head(1), cmap='Blues')\nplt.title(\"features correlation with the Research\", weight='bold', fontsize=18)\nplt.xticks(weight='bold')\nplt.yticks(weight='bold', color='dodgerblue', rotation=0)\nplt.show()","df70d3a6":"train_x,test_x,train_y,test_y=train_test_split(x,y,test_size=0.25,random_state=0)","75cba35a":"reg=RandomForestRegressor(n_estimators=300)\nreg.fit(train_x,train_y)\npred_y=reg.predict(test_x)","f9cd87fa":"print(reg.score(train_x,train_y)*100)\nprint(reg.score(test_x,test_y)*100)","7d448c8b":"data1=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","14c0f36a":"data1.head()","82844fc0":"data1.isnull().sum()\ndata1 = data1.iloc[:,1:]","2805714d":"data1.isnull().sum()","46391881":"test_col_miss_val = [col for col in data1.columns if data1[col].isnull().any()]\nprint(test_col_miss_val)","79219b3d":"for col in test_col_miss_val:\n    if(data1[col].dtype == np.dtype('O')):\n        data1[col] = data1[col].fillna(data1[col].value_counts().index[0])    #replace nan with most frequent\n        \n    else:\n        data1[col] = data1[col].fillna(data1[col].mean()) ","bee3c13c":"for col in data1.select_dtypes(include=['object']):\n    data1[col] = LE.fit_transform(data1[col])  ","b4db513d":"Predictions=reg.predict(data1)","86439a0f":"print(Predictions)","d7c81c94":"Submission=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","7dab957e":"Result=pd.DataFrame({'Id':Submission.Id,\"SalePrice\":Predictions})\nResult.to_csv('submission1.csv', index=False)\nResult.head()","d563fcee":"# Read Train Dataset","4d3d3013":"  # Divide Data In X and Y Feature Scaling ","0ff915bf":"# Convert Catogorical Data in Numeric Data","1327f4bc":"# Model Build  ","34074bb0":"# Fill Missing Values In Train Data","8f8b36fb":"# Data  Visualization","c3333e2f":"Test Data set "}}