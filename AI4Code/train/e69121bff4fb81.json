{"cell_type":{"1a9ccd88":"code","ce53e4cb":"code","629de853":"code","383ddaad":"code","526008b3":"code","d4fba985":"code","a7691c20":"code","c55202de":"code","567e4f28":"code","f6624156":"code","f2486b18":"code","154d735e":"code","cbf52e5a":"code","025c4cb5":"code","56117ecd":"code","dced17be":"code","000db79e":"code","b1c19021":"code","71e0c1ac":"code","aeeb3a3f":"code","fffec01e":"code","860a9135":"code","4ea6f15f":"markdown","0e91678b":"markdown","7763d2c3":"markdown","e9838e83":"markdown","5cb14ae2":"markdown","ccdc3471":"markdown","dd107011":"markdown","51f5affa":"markdown","cbcc11f0":"markdown","cdbee84a":"markdown","84739fb3":"markdown"},"source":{"1a9ccd88":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ce53e4cb":"# Importing all the necessary libraries\n\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n%matplotlib inline\nimport warnings\nfrom math import sqrt\nwarnings.filterwarnings('ignore')\n\n# %matplotlib returns the outpur plot without writing plt.show() everytime after each plot.\n# warnings is used to hide all the warnings","629de853":"# Change the working directory\n\nprint(os.getcwd()) # print current working directory\nprint(os.listdir())\nos.chdir('\/kaggle\/input\/heights-and-weights-dataset')\nprint(os.getcwd())","383ddaad":"# importing data sets\n\ndf=pd.read_csv('SOCR-HeightWeight.csv')","526008b3":"df.head()","d4fba985":"df.dtypes","a7691c20":"df.info()","c55202de":"# summary statistics \ndf.describe()\n\n","567e4f28":"# correlation \ndf.corr()","f6624156":"sns.kdeplot(data=df,x='Height(Inches)',shade=True) ","f2486b18":"sns.kdeplot(data=df,x='Weight(Pounds)',shade=True) ","154d735e":"df.skew()","cbf52e5a":"sns.boxplot(y=df['Height(Inches)'],orient='h')","025c4cb5":"sns.boxplot(y=df['Weight(Pounds)'],orient='h')","56117ecd":"# Handling outliers \n\n# 1) finding the boundary values \nprint(\"Highest allowed\",df['Height(Inches)'].mean() + 3*df['Height(Inches)'].std())\nprint(\"Lowest allowed\",df['Height(Inches)'].mean() - 3*df['Height(Inches)'].std())\n\nprint(\"Highest allowed\",df['Weight(Pounds)'].mean()+3*df['Weight(Pounds)'].std())\nprint(\"Highest allowed\",df['Weight(Pounds)'].mean()-3*df['Weight(Pounds)'].std())","dced17be":"# finding outliers\ndf[(df['Height(Inches)'] > 73.69) | (df['Height(Inches)'] < 62.28)]","000db79e":"new_df = df[(df['Height(Inches)'] < 73.69) & (df['Height(Inches)'] > 62.28)]\nnew_df","b1c19021":"# capping on outliers\n\nupper_limit = df['Height(Inches)'].mean() + 3*df['Height(Inches)'].std()\nlower_limit = df['Height(Inches)'].mean() - 3*df['Height(Inches)'].std()\n\nupper_limit1 = df['Weight(Pounds)'].mean() + 3*df['Weight(Pounds)'].std()\nlower_limit1= df['Weight(Pounds)'].mean() - 3*df['Weight(Pounds)'].std()\n","71e0c1ac":"df['Height(Inches)'] = np.where(\n    df['Height(Inches)']>upper_limit,\n    upper_limit,\n    np.where(\n        df['Height(Inches)']<lower_limit,\n        lower_limit,\n        df['Height(Inches)']\n    )\n)","aeeb3a3f":"df['Weight(Pounds)'] = np.where(\n    df['Weight(Pounds)']>upper_limit1,\n    upper_limit1,\n    np.where(\n        df['Weight(Pounds)']<lower_limit1,\n        lower_limit1,\n        df['Weight(Pounds)']\n    )\n)","fffec01e":"df.describe()","860a9135":"df.corr()","4ea6f15f":"dtypes returns the data type of each features with memory size .here float64 represent it occupying 64bit in computer memory.","0e91678b":"Correlation is most important when we solve any regression problems .Correlation indicates how much the relation between dependet and independet variable\n\n*  Here 0.50 indicates that there is week relation between height and weight .","7763d2c3":"* Its good practice to find skewness right after the distribution plot it will give you idea about the skewness .\n\n* Here the skewness value is approx to zero for both features that means Height and Weight is normally distributed.","e9838e83":"The describe function in python provide the various summary statistics .This function returns count,mean, standard deviation , minimum and maximum values and quantiles of data.\n\n* Both features have approximately same mean and median value which tell that data is normally distributed.\n\n* There is difference between 75% percentile and maximum value which means extreme value or outliers is present in data.","5cb14ae2":"info() returns all the information about the dataframe like total entries , column name its datatype and null count in each features .\n\n* Data has only float and integer values\n\n* No variable has null or missing values.","ccdc3471":"**Handling outliers**","dd107011":"Boxplot is standardized way to display the data using 5 number summary which is minimum,first quartile,median,third quartile , maximum.\n\nOutliers are present below and above the \"whiskers\".","51f5affa":"* head() function returns the top 5 rows of data frame  \n\n* Dataset contains two features height in (inches) and Weight in (pounds).We can change the units   of these features if we want .","cbcc11f0":"* After handling the outliers we can see that the outliers doesn't much affect the correlation coefficient .","cdbee84a":"**Let\u2019s now explore data with beautiful graphs.** Python has visualization library seaborn ,It provides attractive statistical graph in order to perform both univaraiate and multivariate analysis.\n\nFirst we will look at the distribution of the data","84739fb3":"## Conclusion\n\n* The above correlation between Height(Inches) and Weight(Pounds) is 0.50 , there is weak relationship between them,we also handle the outliers by using cap method however,the correlation doesn't affect by outliers so we can't build model to predict weight of 18years old children with such a weak correlation coefficient. \n\n"}}