{"cell_type":{"04ceb239":"code","46e8ed0a":"code","ddcf4f35":"code","bc7739c8":"code","2041d235":"code","dfe45d6b":"code","f1b6d540":"code","078174a8":"code","08407d58":"code","e1019c12":"code","3f138275":"code","da9b3fba":"code","c0d6c8e4":"code","b5ead8d7":"code","c022a09c":"code","5fdbd007":"code","6f63eba5":"code","746c865c":"code","c9bea6fa":"code","9164f783":"code","83ab58ec":"code","759315bb":"code","4479afa2":"markdown","1a790ec8":"markdown","73305429":"markdown","a23626ae":"markdown","4fc0bb57":"markdown","26905468":"markdown","e8cfe255":"markdown","eb6d9504":"markdown","4b2f9720":"markdown","0b91f926":"markdown","bc4ac8a0":"markdown","7c4be168":"markdown","d6b8fc35":"markdown","1efcffa3":"markdown","5e56c35e":"markdown","03c3a1b6":"markdown","48fb8281":"markdown"},"source":{"04ceb239":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np\n# plotly\n# import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"\nimport seaborn as sns\nimport missingno as msno\nfrom collections import Counter\nimport plotly.figure_factory as ff\nfrom plotly import tools\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n# import warnings library\nimport warnings        \n# ignore filters\nwarnings.filterwarnings(\"ignore\") # if there is a warning after some codes, this will avoid us to see them.\nplt.style.use('ggplot') # style of plots. ggplot is one of the most used style, I also like it.\n# Any results you write to the current directory are saved as output.","46e8ed0a":"dataset=pd.read_csv(\"\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv\")\ndataset.head()","ddcf4f35":"dataset.info()","bc7739c8":"dataset.dropna(axis=0,inplace=True)","2041d235":"# Drop nan values\ndataset.drop(dataset[dataset[\"Type\"] == \"0\"].index,inplace = True)\ndataset.drop(dataset[dataset[\"Type\"].isna()].index,inplace = True)\ndataset.drop(dataset[dataset[\"Category\"] == \"1.9\"].index,inplace = True)\ndataset[\"Content Rating\"].dropna(inplace = True)","dfe45d6b":"# Clean Price column\ndataset[\"Price\"] = dataset[\"Price\"].apply(lambda x: float(x.replace(\"$\",'')))\n# Convert reviews to int\ndataset[\"Reviews\"] = dataset[\"Reviews\"].apply(lambda x: int(x))\n","f1b6d540":"# Clean Installs column\ndataset['Installs'] = dataset['Installs'].apply(lambda x: x.replace('+', '') if '+' in str(x) else x)\ndataset['Installs'] = dataset['Installs'].apply(lambda x: x.replace(',', '') if ',' in str(x) else x)\ndataset['Installs'] = dataset['Installs'].apply(lambda x: int(x))","078174a8":"# Make another dataset for Size analysis as dropping rows will reduce the amount of dataset\ndef kb_to_mb(row):\n    \n    if \"k\" in str(row):\n        row = row.replace('k','')\n        size = float(row)\/1000\n    else:\n        row = row.replace(\"M\",'').replace(\",\",'').replace(\"+\",'')\n        size = float(row)\n    return size\nds_clear_size = dataset[dataset[\"Size\"] != 'Varies with device']\nds_clear_size[\"Size\"] = ds_clear_size[\"Size\"].apply(kb_to_mb)","08407d58":"ds_clear_size.head()","e1019c12":"df=ds_clear_size.iloc[:100].sort_values(\"Size\").reset_index()\ntrace1=go.Scatter (\n       x=df.index,\n       y=df.Rating,\n       mode=\"lines\",\n       name=\"Rating\",\n       marker=dict(color='rgba(16,112,2,0.8)'),\n       text=df.App\n     \n    )\ntrace2=go.Scatter (\n       x=df.index,\n       y=df.Size,\n       mode=\"lines+markers\",\n       name=\"Size\",\n       marker=dict(color='rgba(80,26,80,0.8)'),\n       text=df.App) \ndata=[trace1,trace2]\nlayout=dict(title={\n        'text': \"Size vs Rating\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},xaxis=dict(ticklen=5,zeroline=False))    \nfig=dict(layout=layout,data=data)\niplot(fig)    \n","3f138275":"df_art=ds_clear_size[ds_clear_size[\"Category\"]==\"ART_AND_DESIGN\"].sort_values(\"Size\",ascending=False).reset_index().iloc[:50]\ndf_family=ds_clear_size[ds_clear_size[\"Category\"]==\"FAMILY\"].sort_values(\"Size\",ascending=False).reset_index().iloc[:50]\ndf_ls=ds_clear_size[ds_clear_size[\"Category\"]==\"LIFESTYLE\"].sort_values(\"Size\",ascending=False).reset_index().iloc[:50]\ndf_art.drop(columns=\"index\",inplace=True)\ndf_family.drop(columns=\"index\",inplace=True)\ndf_ls.drop(columns=\"index\",inplace=True)\ntrace1=go.Scatter(x=df_art.index,\n                  y=df_art.Size,\n                  mode=\"markers\",\n                  name=\"ART_DESIGN\",\n                  marker=dict(color='rgba(255,128,255,0.8)'),\n                  text=df_art.App)\n\ntrace2=go.Scatter(x=df_family.index,\n                  y=df_family.Size,\n                  mode=\"markers\",\n                  name=\"FAMILY\",\n                  marker=dict(color='rgba(255,128,2,0.8)'),\n                  text=df_family.App)\ntrace3=go.Scatter(x=df_ls.index,\n                  y=df_ls.Size,\n                  mode=\"markers\",\n                  name=\"LIFESTYLE\",\n                  marker=dict(color='rgba(0,255,2000,0.8)'),\n                  text=df_ls.App)\n\ndata=[trace1,trace2,trace3]\nlayout=dict(title={\n        'text': \"Top 50 Apps Sizes in FAMILY and ART Category\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},xaxis=dict(ticklen=5,zeroline=False))\nfig=dict(layout=layout,data=data) \niplot(fig)\n\n\n","da9b3fba":"df_art=ds_clear_size[ds_clear_size[\"Category\"]==\"ART_AND_DESIGN\"].sort_values(\"Size\",ascending=False).reset_index().iloc[:3]\ndf_art.drop(columns=\"index\",inplace=True)\ntrace1=go.Bar(x=df_art.App,\n              y=df_art.Size,\n              name=\"Size\",\n              marker=dict(color = 'rgba(255, 174, 255, 0.5)',line=dict(color='rgb(0,0,0)',width=1.5)),\n              text=df_art.App)\n\ntrace2=go.Bar(x=df_art.App,\n              y=df_art.Rating,\n              name=\"Rating\",\n              marker=dict(color = 'rgba(255, 200, 2, 0.5)',line=dict(color='rgb(0,0,0)',width=1.5)),\n              text=df_art.App)\ndata=[trace1,trace2]\n\nlayout=dict(title={\n        'text': \"Top 3 App with Size vs Rating\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'},xaxis=dict(ticklen=5,zeroline=False))\n\nfig=dict(layout=layout,data=data) \niplot(fig) ","c0d6c8e4":"df_art=ds_clear_size[ds_clear_size[\"Category\"]==\"ART_AND_DESIGN\"].sort_values(\"Reviews\",ascending=True).reset_index().iloc[2:9]\ndf_art.drop(columns=\"index\",inplace=True)\ny_size=[each for each in df_art.Size]\ny_reviews=[each for each in df_art.Reviews]\nx_app=[each for each in df_art.App]\n\ntrace1=go.Bar(x=y_reviews,\n              y=x_app,\n              name=\"Reviews\",\n              marker=dict(color='rgba(171, 50, 96, 0.6)',line=dict(color='rgba(171, 50, 96, 1.0)',width=1)),\n              orientation='h',\n              )\ntrace2=go.Scatter(x=y_size,\n              y=x_app,\n              name=\"Size\",\n              mode=\"lines+markers\",\n              line=dict(color='rgb(63, 72, 204)'),\n           \n              )\nlayout=dict(title=\"Reviews and Size\",\n            yaxis1=dict(showticklabels=True,domain=[0,0.85]),\n            yaxis2=dict(showticklabels=False,showline=True,linecolor='rgba(102, 102, 102, 0.8)',linewidth=2,domain=[0, 0.85]),\n            xaxis1=dict(showline=True,zeroline=False,showticklabels=True,showgrid=True,domain=[0,0.45]),\n            xaxis2=dict(showline=True,zeroline=False,showticklabels=True,domain=[0.47,1],showgrid=True,side=\"top\",dtick=25),\n            legend=dict(x=0.029,y=1.038, font=dict(size=10)),\n            margin=dict(l=200,r=30,b=70,t=70),\n            paper_bgcolor='rgba(248,255,248)',\n            plot_bgcolor='rgba(248,255,248)'\n    )\nannotations=[]\n\ny_s = np.round(y_reviews, decimals=2)\ny_in = np.rint(y_size)\n\nfor ydn,yd,xd in zip(y_s,y_in,x_app):\n    annotations.append(dict(xref='x2',yref='y2',x=yd-4,y=xd,text=str(yd),font=dict(family='Arial', size=12,color='rgb(63, 72, 204)'),showarrow=False))\n    annotations.append(dict(xref='x1', yref='y1', y=xd, x=ydn + 3,text=str(ydn),font=dict(family='Arial', size=12,color='rgb(171, 50, 96)'),showarrow=False))\nlayout['annotations'] = annotations\n\nfig=tools.make_subplots(rows=1,cols=2,specs=[[{},{}]],shared_xaxes=False,shared_yaxes=False)\n\nfig.append_trace(trace1,1,1)\nfig.append_trace(trace2, 1, 2)\n\nfig[\"layout\"].update(layout)\niplot(fig)","b5ead8d7":"a=ds_clear_size[\"Genres\"].value_counts().iloc[:7]\npie_list=a.values\nlabels=a.index\nfig={\n     \"data\":[\n         {\n         \"values\":pie_list,\n         \"labels\":labels,\n         \"domain\":{\"x\":[0,0.5]},\n         \"name\":\"Number of Genres\",\n         \"hoverinfo\":\"label+percent+name\",\n         \"hole\":.3,\n         \"type\":\"pie\"},],\n     \n     \"layout\":{\n          \"title\":\"Genres of Apps\",\n          \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"Number of Genres\",\n                \"x\": 0.20,\n                \"y\": 1.08\n             },]\n     }\n    }\niplot(fig)       \n","c022a09c":"df_ls=ds_clear_size[ds_clear_size[\"Category\"]==\"LIFESTYLE\"].sort_values(\"Installs\",ascending=True).reset_index().iloc[20:50]\ndf_ls.drop(columns=\"index\",inplace=True)\nInstalls=df_ls.Installs\nreview=df_ls.Reviews\ndata=[\n      {\n       \"x\":df_ls.index,\n       \"y\":review,\n       \"mode\":\"markers\",\n       \"marker\":\n           {\n               \"color\":Installs,\n               \"size\":df_ls.Size,\n               \"showscale\":True  \n           },\n          \"text\":df_ls.App      \n       \n       }]\n    \niplot(data)    ","5fdbd007":"\ndf_family=ds_clear_size[ds_clear_size[\"Category\"]==\"FAMILY\"].sort_values(\"Size\",ascending=False).reset_index()\ndf_family.drop(columns=\"index\",inplace=True)\ntrace2=go.Histogram(x=df_family.Size,\n                    name=\"Family\",\n                    opacity=0.8,\n                    marker=dict(color='rgba(71,50,196,0.8)'))\ndata=[trace2]\n\nlayout=go.Layout(xaxis=dict(title=\"App Size\"),\n                 title=\"App Size in  Family Category\",\n                 yaxis=dict(title=\"Count\"),\n                 )\n\nfig=dict(data=data,layout=layout)\niplot(fig)\n","6f63eba5":"xapp=ds_clear_size[ds_clear_size.Category==\"FAMILY\"].App\nwordcloud=WordCloud(\n               background_color=\"white\",\n               width=512,\n               height=312 ).generate(\" \".join(xapp))\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","746c865c":"ulimit = np.percentile(ds_clear_size.Installs.values, 99)\nllimit = np.percentile(ds_clear_size.Installs.values, 1)\nds_clear_size['Installs tt'] = ds_clear_size['Installs'].copy()\nds_clear_size['Installs tt'].loc[ds_clear_size['Installs']>ulimit] = ulimit\nds_clear_size['Installs tt'].loc[ds_clear_size['Installs']<llimit] = llimit\n","c9bea6fa":"trace=[]\nfor name,group in ds_clear_size.groupby(\"Category\"):\n    trace.append(\n        go.Box(\n            x=group[\"Installs tt\"].values,\n            name=name\n            )\n        )\nlayout=go.Layout(\n             title=\"Installs Distirbution\",\n             width=800,\n             height=2000\n    )\nfig=go.Figure(data=trace,layout=layout)\niplot(fig)","9164f783":"df_family=ds_clear_size[ds_clear_size.Category==\"FAMILY\"].loc[:,[\"Reviews\",\"Size\",\"Installs\"]]\ndf_family[\"index\"]=np.arange(1,len(df_family)+1)\n\nfig=ff.create_scatterplotmatrix(df_family,diag=\"box\",height=700,width=700,index=\"index\",colormap=\"Portland\",colormap_type=\"cat\")\niplot(fig)","83ab58ec":"df_game=ds_clear_size[ds_clear_size.Category==\"GAME\"]\n\ntrace1=go.Scatter3d(x=df_game.Size,\n                    y=df_game.Rating,\n                    z=df_game.Reviews,\n                    mode=\"markers\",\n                    marker=dict(\n                        size=10,\n                        color=df_game.Installs,\n                        ))\ndata=[trace1]\nlayout=go.Layout(\n          margin=dict(\n              t=0,\n              b=0,\n              r=0,\n              l=0\n              \n              )\n    )    \nfig=go.Figure(layout=layout,data=data)\niplot(fig)","759315bb":"df_game=ds_clear_size[ds_clear_size[\"Category\"]==\"GAME\"].sort_values(\"Size\",ascending=True).reset_index().iloc[:50]\ndf_game.drop(columns=\"index\",inplace=True)\ntrace1=go.Scatter(x=df_game.index,\n                  y=df_game.Reviews,\n                  name=\"Reviews\",\n                  marker=dict(color='rgba(12,12,140,0.8)'))\n\ntrace2=go.Scatter(x=df_game.index,\n                  y=df_game.Installs,\n                  xaxis=\"x2\",\n                  yaxis=\"y2\",\n                  name=\"Installs\",\n                  marker=dict(color='rgba(12,128,127,0.8)')\n                  )\ndata=[trace1,trace2]\nlayout=go.Layout(xaxis2=dict(domain=[0.6,0.95],\n                            anchor=\"y2\",),\n                 yaxis2=dict(domain=[0.6,0.95],\n                            anchor=\"x2\",),\n                 title=\"Reviews and Installs in Game Category\"\n                 )\nfig=dict(data=data,layout=layout)\niplot(fig)","4479afa2":"<a id = \"16\"><\/a><br>\n# Inset Plots","1a790ec8":"# Plotly\n\nGoogle Play, formerly Android Market, is an American digital distribution service operated and developed by Google. It serves as the official app store for devices running on \"Google certified\" Android operating system, allowing users to browse and download applications developed with the Android software development kit (SDK) and published through Google. Google Play also serves as a digital media store, offering music, books, movies, and television programs. It previously offered Google hardware devices for purchase until the introduction of a separate online hardware retailer, Google Store, on March 11, 2015, and it also offered news publications and magazines before the revamp of Google News on May 15, 2018.\nContent:<br>\n* [Load and Check Data](#1)<br><br>\n* [Missing Values](#4)\n    * [Variable Description](#2)\n      * [Cleaning Data](#3)\n* [Plotly Tutorial ](#5)\n  * [Line Plot](#6)\n  * [Scatter Plot](#7)\n  * [Bar Plot](#8)\n  * [Pie Plot](#9)\n  * [Bouble Chart](#10)\n  * [Histogram](#11)\n  * [Word Cloud](#12)\n  * [Box Plot](#13)\n  * [Scatter Matrix](#14)\n  * [Inset Plot](#16)\n  * [3D Scatter](#15)","73305429":"<a id = \"8\"><\/a><br>\n#  Bar Plot","a23626ae":"<a id = \"5\"><\/a><br>\n# Plotly Tutorial","4fc0bb57":"<a id = \"12\"><\/a><br>\n# Word Cloud","26905468":"<a id = \"4\"><\/a><br>\n# Missing Values","e8cfe255":"<a id = \"3\"><\/a><br>\n# Cleaning Data","eb6d9504":"<a id = \"1\"><\/a><br>\n# Load and Check Data","4b2f9720":"<a id = \"9\"><\/a><br>\n#  Pie Plot","0b91f926":"<a id = \"15\"><\/a><br>\n# 3D Scatter","bc4ac8a0":"<a id = \"6\"><\/a><br>\n# Line Plot","7c4be168":"<a id = \"2\"><\/a><br>\n# Variable Description\n* **App** - name of application\n* **Category** - category that app belongs to (ex:ART_AND_DESIGN)\n* **Rating** - overall user rating of the app   \n* **Reviews** - number of user reviews for the app \n* **Size** - size of the app (as when scraped)\n* **Installs** -Number of user downloads\/installs for the app (as when scraped)\n* **Type** - paid or Free\n* **Price** - price of the app (as when scraped)\n* **Content Rating** - age group the app is targeted at - Children \/ Mature 21+ \/ Adult\n* **Genre** - beside category,multiple genres app belongs to(ex: Art & Design;Creativity)\n* **Last Updated** - Date when the app was last updated on Play Store \n* **Current Ver** - Current version of the app available on Play Store \n* **Android Ver** - Min required Android version","d6b8fc35":"<a id = \"13\"><\/a><br>\n# Box Plot","1efcffa3":"<a id = \"14\"><\/a><br>\n# Scatter Matrix","5e56c35e":"<a id = \"7\"><\/a><br>\n#  Scatter Plot","03c3a1b6":"<a id = \"11\"><\/a><br>\n# Histogram","48fb8281":"<a id = \"10\"><\/a><br>\n#  Bouble Chart"}}