{"cell_type":{"51fe2917":"code","1dd13a71":"code","b7121257":"code","e696f7da":"code","f88bfcd1":"code","3e3bd40c":"code","2c97dff0":"code","262ab499":"code","6b534e19":"code","ec4cbafe":"code","ba66aa8d":"code","084eef6e":"code","b8319e30":"code","229564e1":"code","083983b9":"code","abf077d0":"code","2a45f1f1":"code","d9a60d88":"code","6e129e02":"markdown","72664f65":"markdown","d2298471":"markdown","68fbdb5d":"markdown","f49b647d":"markdown","408cae82":"markdown","3f3a45b7":"markdown","afa1891d":"markdown","f09aceec":"markdown","b0447cf2":"markdown","822505bc":"markdown","c3582cca":"markdown","2be59a5b":"markdown","687179ca":"markdown","326f65bf":"markdown","ba9546fd":"markdown","e6e249de":"markdown","629e91cf":"markdown","c38ada0b":"markdown","b5402df5":"markdown","672e62b8":"markdown","e7063bf5":"markdown","bb7072c6":"markdown","51934f91":"markdown"},"source":{"51fe2917":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nfrom datetime import date\n\n# To read our stock information from Yahoo:\nimport pandas_datareader as pdr\n\nsns.set_style('whitegrid')","1dd13a71":"# Identify our stocks - four tech, four retail\nticker_list = ['AAPL','GOOG','MSFT','AMZN','COST','WBA','WMT','HD']\n\n# Set timeframe\nend = date(2020,8,19)\nstart = datetime(end.year-1,end.month,end.day)\n\n# Pull stock info and assign ticker as name of dataframe\nfor stock in ticker_list:\n    globals()[stock] = pdr.get_data_yahoo(stock,start,end)","b7121257":"AAPL.describe()","e696f7da":"AAPL.info()","f88bfcd1":"fig, axes = plt.subplots(4,2,figsize=(16,16))\nframes = [AAPL,GOOG,MSFT,AMZN,COST,WBA,WMT,HD]\n\nfor i, ax in enumerate(axes.flatten()):\n    frames[i]['Adj Close'].plot(legend=True,ax=ax)\n    ax.set_title(label=ticker_list[i], fontsize=16, fontweight='bold', pad=10)\n    ax.set_xlabel(None)\n    \nplt.tight_layout(h_pad=2)","3e3bd40c":"fig, axes = plt.subplots(4,2,figsize=(16,16))\nframes = [AAPL,GOOG,MSFT,AMZN,COST,WBA,WMT,HD]\n\nfor i, ax in enumerate(axes.flatten()):\n    frames[i]['Volume'].plot(legend=True,ax=ax)\n    ax.set_title(label=ticker_list[i], fontsize=16, fontweight='bold', pad=10)\n    ax.set_xlabel(None)\n    \nplt.tight_layout(h_pad=2)","2c97dff0":"fig, axes = plt.subplots(4,2,figsize=(20,16))\nma_size = [10,20,50]\n\nfor i, ax in enumerate(axes.flatten()):\n    for ma in ma_size:\n        col = \"MA for %s days\" %(str(ma))\n        frames[i][col] = frames[i]['Adj Close'].rolling(ma).mean()\n    frames[i][['Adj Close','MA for 10 days','MA for 20 days','MA for 50 days']].plot(legend=True,ax=ax)\n    ax.set_title(label=ticker_list[i], fontsize=16, fontweight='bold', pad=10)\n    ax.set(xlabel=None)\n        \nplt.tight_layout(h_pad=2)","262ab499":"fig, axes = plt.subplots(4,2,figsize=(20,16))\n\nfor i, ax in enumerate(axes.flatten()):\n    frames[i]['Daily Return'] = frames[i]['Adj Close'].pct_change()\n    frames[i]['Daily Return'].plot(legend=True,linestyle='--',marker='o', ax=ax)\n    ax.set_title(label=ticker_list[i], fontsize=16, fontweight='bold', pad=10)\n    ax.set(xlabel=None)\n    \nplt.tight_layout(h_pad=2)","6b534e19":"fig = plt.figure(figsize=(16,8))\ng = fig.add_gridspec(2,4)\nax1 = fig.add_subplot(g[0, 0:1])\nax2 = fig.add_subplot(g[0, 1:2])\nax3 = fig.add_subplot(g[0, 2:3])\nax4 = fig.add_subplot(g[0, 3:4])\nax5 = fig.add_subplot(g[1, 0:1])\nax6 = fig.add_subplot(g[1, 1:2])\nax7 = fig.add_subplot(g[1, 2:3])\nax8 = fig.add_subplot(g[1, 3:4])\n\naxes = [ax1,ax2,ax3,ax4,ax5,ax6,ax7,ax8]\ncolors = ['Red','Orange','y','Green','Blue','Indigo','Violet','Brown']\n\nfor i, ax in enumerate(axes):\n    sns.distplot(frames[i]['Daily Return'].dropna(),bins=100, ax=ax,\n             kde_kws={'color':'darkolivegreen','label':'Kde','gridsize':1000,'linewidth':2},\n             hist_kws={'color':'goldenrod','label':\"Histogram\",'edgecolor':'darkslategray'})\n    ax.set_title(label=ticker_list[i], fontsize=16, fontweight='bold', pad=10)\n    ax.set(xlabel=None)\n\nplt.tight_layout(h_pad=2)","ec4cbafe":"Adj_Close_df = pdr.get_data_yahoo(ticker_list,start,end)['Adj Close']\nreturns_df = Adj_Close_df.pct_change()\nreturns_df.head()","ba66aa8d":"# Define corrfunc to plot pearson coefficient in top left corner of each plot\nfrom scipy.stats import pearsonr\ndef corrfunc(x,y,ax=None, **kws):\n    r, _ = pearsonr(x, y)\n    ax = plt.gca()\n    # Unicode for lowercase rho (\u03c1)\n    rho = '\\u03C1'\n    ax.annotate(f'{rho} = {r:.2f}', xy=(.1, .9), xycoords=ax.transAxes)\n\n# Plot each pair's returns to see their correlation\ng = sns.PairGrid(returns_df.dropna())\ng.map_lower(corrfunc)\ng.map_lower(plt.scatter)\ng.map_upper(sns.kdeplot,cmap='Blues')\ng.map_diag(plt.hist)\n#plt.show()","084eef6e":"plt.figure(figsize=(10,8))\nsns.heatmap(returns_df.corr(),annot=True,square=True,cmap='Blues')","b8319e30":"fig, (ax1, ax2) = plt.subplots(2,1,figsize=(16,8),sharex=True)\n\ndef to_percent(y,position):\n    return str(str(int(round(y*100,0)))+\"%\")\n\n# Plot Annual Growth (%)\nnormalized_df = Adj_Close_df.copy()\nfor ticker in ticker_list:\n    baseline = normalized_df[ticker].iloc[0]\n    normalized_df[ticker] = normalized_df[ticker] \/ baseline - 1\nnormalized_df.plot(legend=True, ax=ax1)\nax1.set_title(label='Annual Growth (%)', fontsize=16, fontweight='bold', pad=10)\nax1.yaxis.set_major_formatter(mpl.ticker.FuncFormatter(to_percent))\n\n# Plot Growth During Corona Pandemic (%)\nnormalized_corona_df = Adj_Close_df.copy().loc['2020-02-20':]\nfor ticker in ticker_list:\n    baseline = normalized_corona_df[ticker].iloc[0]\n    normalized_corona_df[ticker] = normalized_corona_df[ticker] \/ baseline - 1\nnormalized_corona_df.plot(legend=True, ax=ax2)\nax2.set_title(label='Growth During Corona Pandemic (%)', fontsize=16, fontweight='bold', pad=10)\nax2.set(xlabel=None)\nax2.yaxis.set_major_formatter(mpl.ticker.FuncFormatter(to_percent))","229564e1":"returns = returns_df.dropna()\narea = np.pi*20\n\nplt.figure(figsize=(10,8))\nplt.scatter(returns.mean(), returns.std(), s=50)\n\nplt.xlim(-.002,.005)\nplt.ylim(.015,.03)\nplt.xlabel('Expected Daily Return')\nplt.ylabel('Standard Deviation')\n\nfor label, x, y in zip(returns.columns, returns.mean(), returns.std()):\n    plt.annotate(\n        label,\n        xy = (x,y), xytext = (25,25),\n        textcoords = 'offset points', ha = 'right', va = 'center',\n        arrowprops = dict(arrowstyle = '-', connectionstyle = 'arc3,rad=-.5', ec='purple'))\nplt.title(label='Daily Returns: Mean vs Standard Deviation', fontsize=16, fontweight='bold', pad=10)","083983b9":"fig = plt.figure(figsize=(16,8))\ng = fig.add_gridspec(2,4)\nax1 = fig.add_subplot(g[0, 0:1])\nax2 = fig.add_subplot(g[0, 1:2])\nax3 = fig.add_subplot(g[0, 2:3])\nax4 = fig.add_subplot(g[0, 3:4])\nax5 = fig.add_subplot(g[1, 0:1])\nax6 = fig.add_subplot(g[1, 1:2])\nax7 = fig.add_subplot(g[1, 2:3])\nax8 = fig.add_subplot(g[1, 3:4])\n\naxes = [ax1,ax2,ax3,ax4,ax5,ax6,ax7,ax8]\n\nfor i, ax in enumerate(axes):\n    data = returns[ticker_list[i]]\n    std = data.std() \n    ax.text(min(data)*1.1, 45, s=f'Avg Daily Return = {(data.mean()):.2%}')\n    ax.text(min(data)*1.1, 55, s=f'95%_ci = {(data.quantile(.05)):.2%}')\n    ax.text(min(data)*1.1, 50, s=f'99%_ci = {(data.quantile(.01)):.2%}')\n    sns.distplot(data, bins=100, ax=ax,\n             kde_kws={'color':'darkolivegreen','gridsize':1000,'linewidth':2},\n             hist_kws={'color':'goldenrod','edgecolor':'darkslategray'})\n    ax.set(ylim=[0,60],title=ticker_list[i],xlabel=None)","abf077d0":"def monte_carlo(start_price, days, mu, sigma):\n    price = np.zeros(days)\n    price[0] = start_price\n    change = np.zeros(days)\n\n    for i in range(1,days):\n        change[i] = np.random.normal(loc=mu, scale=sigma)\n        price[i] = price[i-1] * (1 + (change[i]))\n        \n    return price","2a45f1f1":"fig, axes = plt.subplots(4,2,figsize=(16,24))\n\nfor i, ax in enumerate(axes.flatten()):\n    days = 365\n    mu = returns.mean()[ticker_list[i]]\n    sigma = returns.std()[ticker_list[i]]\n    start_price = Adj_Close_df[ticker_list[i]][0]\n    \n    for runs in range(100):\n        ax.plot(monte_carlo(start_price,days,mu,sigma))\n\n    ax.set(title=ticker_list[i])\n    ax.set(xlabel='Days',ylabel='Price')","d9a60d88":"runs = 10000\nsimulations = np.zeros(runs)\nfor run in range(runs):\n    simulations[run] = monte_carlo(start_price,days,mu,sigma)[days-1];\n\nfig, axes = plt.subplots(4,2,figsize=(16,24))\ncolors = ['Red','Orange','y','Green','Blue','Indigo','Violet','Brown']\n\nfor i, ax in enumerate(axes.flatten()):\n    runs = 10000\n    simulations = np.zeros(runs)\n    ticker = ticker_list[i]\n    days = 365\n    mu = returns.mean()[ticker]\n    sigma = returns.std()[ticker]\n    start_price = Adj_Close_df[ticker][0]\n    for run in range(runs):\n        simulations[run] = monte_carlo(start_price,days,mu,sigma)[days-1];\n\n    q = np.percentile(simulations, 1)\n    ax.hist(simulations, bins=200, color = colors[i])\n\n    ax.text(0.7, 0.9, s=\"Start price: $%.2f\" %start_price, transform=ax.transAxes)\n    ax.text(0.7, 0.85, \"Mean final price: $%.2f\" % simulations.mean(), transform=ax.transAxes)\n    ax.text(0.7, 0.8, \"VaR(0.99): $%.2f\" % (start_price - q), transform=ax.transAxes)\n    ax.text(0.1, 0.9, \"q(0.99): $%.2f\" % q, transform=ax.transAxes)\n\n    ax.axvline(x=q, linewidth=4, color='r')\n    ax.set_title(\"Final price distribution for %s Stock after %s days\" % (ticker,days), weight='bold')","6e129e02":"Awesome! Now that we've investigated returns, let's do some actual risk analysis.","72664f65":"Interesting... The most highly-correlated pairs (p-val >= 0.8) all come from tech (specifically MSFT, GOOG & AAPL). This makes sense, given the common trend we saw in their Adjusted Closing prices above.\n\nCostco and Walmart are the most correlated of the retail stocks, which seems reasonable, given how similar their businesses are.\n\nPerhaps most interesting are HD's correlations. HD is much more correlated with MSFT, GOOG & AAPL than any of the other stocks, and even sees higher correlation with these three stocks than does AMZN. One hypothesis for this is that during the coronavirus pandemic, many people were spending more time at home, and as they invested more in WFH technology (AAPL, MSFT, GOOG), they simultaneously invested more in home projects (HD).\n\nIt's somewhat surprising that AMZN isn't more correlated with the other tech stocks... let's take a look at the growth of AMZN's stock price throughout the year, relative to the other stocks.","d2298471":"Awesome! Now let's get historical views of the closing prices for each stock.","68fbdb5d":"Interesting... Notice how AAPL stock grew the most over the entire year, yet AMZN stock grew the most since the beginning of the pandemic. Also notice how up until the beginning of the pandemic, AMZN's growth lagged behind each of the other tech stocks. Clearly the pandemic was somewhat of a turning point for AMZN, which may help explain why AMZN is a bit less correlated with the other tech stocks.","f49b647d":"# Tech & Retail Stock Analysis During the Coronavirus Pandemic\n\nIn this project, we will be looking at the performance of a few technology and retail stocks during the coronavirus pandemic. In particular, we'll pull information on each stock from Yahoo Finance, visualize the different aspects of the data and the effects of the pandemic, and investigate a few different ways of analyzing the risks of each stock based on historical performance. We will also predict future stock prices through a Monte Carlo method.\n\nWe'll answer the following questions along the way:\n\n    1.) How did these stock prices change over time?\n    2.) How did daily trading volume fluctuate throughout the year?\n    3.) What were the moving averages of these stocks?\n    4.) What were the daily returns of these stocks?\n    5.) What were the correlations between different stocks' closing prices?\n    6.) What were the correlations between different stocks' daily returns?\n    7.) Which stocks benefited the most during the coronavirus pandemic?\n    8.) How much value do we put at risk by investing in a particular stock?\n    9.) How can we attempt to predict future stock behavior?","408cae82":"Great! Let's visualize the price array to get a better sense of the information monte_carlo is returning:","3f3a45b7":"Interesting, the tech stocks have seen positive growth over the past year, especially during the coronavirus pandemic timeframe. Retail is a bit less consistent however, with COST, WMT and especially HD seeing growth during the pandemic, but not WBA.\n\nNow let's get a historical view of the daily trading volume.","afa1891d":"Great, we can see a clear uptick in volume traded during the first few months of the pandemic across each stock.","f09aceec":"# Risk Analysis\n\nThe risk of a stock can be evaluated in a variety of ways. First, let's look at each stock's daily returns, and simply compare the mean to the standard deviation for each.","b0447cf2":"Awesome! Again, we see fairly consistent behavior between the tech stocks' moving averages. Note, however, AMZN does not show as much of an inital downward dip at the beginning of the pandemic.","822505bc":"Let's take a look at each pair of stock returns to see their correlations.","c3582cca":"Let's also look at a heatmap of the correlations to get a better sense of what's going on.","2be59a5b":"# Basic Analysis of Stock Information\nLet's start by pulling our stock info and performing some initial exploratory analysis.","687179ca":"## Value At Risk\nWe define Value At Risk (VaR) as the maximum amount we would expect to lose on an investment with a certain amount of confidence. We'll investigate VaR for our stocks via two methods: Bootstrap and Monte Carlo.\n\n### Bootstrap\nThis method involves looking each stock's daily returns, and calculating VaR by looking at a certain quantile. In particular, to be 95% and 99% confident in our VaR, we'll look at the quantiles .05 and .01, respectively.","326f65bf":"### Monte Carlo Simulation\nEstimating VaR using a Monte Carlo simulation involves performing many \"random walks\" of the stock price, within the parameters of the mean and standard deviation of the stock's historical daily returns (over the past year), and estimating VaR from the distribution of final prices.\n\nLet's first define the function \"monte_carlo\" to perform our random walks:","ba9546fd":"Great! We can see that WBA would be a poor investment, not only because the expected return is slightly negative, but because there is a great deal of volatility (risk) as well. Stocks like AMZN and AAPL, however, have strong positive returns with relatively less risk than WBA.","e6e249de":"Awesome! Now, let's put all of our daily return info into one table so we can more easily calculate correlations between stocks.","629e91cf":"Great! After a day of investing in AAPL for example, we can be 95% confident we won't lose more than 3.42% and 99% confident we won't lose more than 7.20%.","c38ada0b":"# Daily Returns\nNow that we've done some baseline analysis, let's analyze the risk of these stocks. We'll start by calculating daily returns.","b5402df5":"Now that we have a good idea of the price and volume over the past year, let's look at something a bit more interesting and calculate the moving average for each stock.","672e62b8":"Notice the substantial increase in volatility during the COVID-19 pandemic in March, quite a change!\n\nLet's take a look at the average daily returns in a histogram, to get a better sense of their distribution.","e7063bf5":"Awesome! As we can see, stocks with higher mean daily returns (AAPL, AMZN) see a higher increase in their final prices, whereas stocks with zero-to-negative mean returns (WBA) do not.\n\nLet's get a histogram of the final prices for a much larger run of simulations.","bb7072c6":"Awesome! With 99% confidence (.01 quantile), we have an estimate of the one year VaR for each of our stocks. Using AAPL as an example, we are 99% confident that buying one share will not result in more than a $4.65 loss in one year.\n\nOne final note. These estimated returns are all based on the historical daily returns we saw over the past year. Given the unique affect of the coronavirus pandemic on the stock market, these results may not be realistic in the future (unless we go through a similar situation again, god forbid). For example, it's pehaps a bit hard to imagine that a company like HD will grow from 202.80 to 372.23 in a year's time, given people will probably not continue working on home renovation projects and increasing HD's sales to the same degree they have throughout the pandemic so far... but if they do, then perhaps this projection isn't so unrealistic...\n\nRegardless, the point is this was a unique past year, and these projections are based on the assumption that the future will be representative of the past. Please take these projections with a grain of salt. \ud83d\udc4d\ud83c\udffc","51934f91":"Now, let's do a bit of exploratory analysis on one of the stocks to better understand the info in our dataframes. We'll pick AAPL."}}