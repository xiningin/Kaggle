{"cell_type":{"66e1ff9a":"code","acbdd262":"code","432e36e5":"code","13cfa506":"code","77636a0b":"code","b2f3cd50":"code","833d3009":"code","c7d2fefb":"code","1c2c0f9d":"code","c53d8b9b":"code","0cb649af":"code","d056c6c2":"code","c1a84371":"code","0ac799bd":"code","e6872864":"code","fb5ae285":"code","6fcb9a52":"code","fd0ec249":"code","9444366e":"code","8370a614":"code","4e7d1e7a":"code","38e315ab":"code","e79ee8cc":"code","51667aa7":"code","19aebcf8":"code","b2b3f6d1":"code","13c156f9":"code","3053962d":"code","7d23012b":"code","f753a725":"code","515f5f8d":"code","49c20baa":"code","366900f7":"code","54927401":"markdown","a4b481f1":"markdown","89d2b1c4":"markdown","76652aa9":"markdown","88b846c3":"markdown","fea2f714":"markdown","6888dc49":"markdown"},"source":{"66e1ff9a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","acbdd262":"df = pd.read_csv(\"..\/input\/samsung-aftersales-service-in-iran\/samdata.csv\")\npd.set_option('display.max_columns', None)\ndf.head()","432e36e5":"!pip install pywaffle","13cfa506":"from pywaffle import Waffle\nimport random","77636a0b":"warranty = df[\"Cost_Type\"].value_counts()","b2f3cd50":"plt.figure(\n    FigureClass=Waffle,\n    rows=5,\n    columns=10,\n    values=warranty,\n    title={'label': 'Warranty Distribution', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(warranty.index, warranty) ],\n    # Set the position of the legend\n    legend={'loc': 'upper left', 'bbox_to_anchor': (1, 1)},\n    dpi=100\n)\nplt.show()","833d3009":"defect = df[\"Defect_Des\"].value_counts()\n\nplt.figure(\n    FigureClass=Waffle,\n    rows=5,\n    columns=10,\n    values=defect,\n    title={'label': 'Defect Distribution', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(defect.index, defect) ],\n    # Set the position of the legend\n    legend={'loc': 'upper left', 'bbox_to_anchor': (1, 1)},\n    dpi=100\n)\nplt.show()\n","c7d2fefb":"df[\"Labor_Charge_Desc\"].value_counts().plot.bar(color=['blue', '#f5005a', 'green', 'purple', 'orange', 'chartreuse'], title='Labor Charge Descount',)","1c2c0f9d":"charge = df[\"Labor_Charge_Desc\"].value_counts()\n\nplt.figure(\n    FigureClass=Waffle,\n    rows=5,\n    columns=10,\n    values=charge,\n    title={'label': 'Charge Distribution', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(charge.index, charge) ],\n    # Set the position of the legend\n    legend={'loc': 'upper left', 'bbox_to_anchor': (1, 1)},\n    dpi=100\n)\nplt.show()\n","c53d8b9b":"engineer = df[\"Engineer\"].value_counts()\n\nplt.figure(\n    FigureClass=Waffle,\n    rows=5,\n    columns=10,\n    values=engineer,\n    title={'label': 'Engineer Distribution', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(engineer.index, engineer) ],\n    # Set the position of the legend\n    legend={'loc': 'upper left', 'bbox_to_anchor': (1, 1)},\n    dpi=100\n)\nplt.show()","0cb649af":"sns.set(style=\"ticks\", context=\"talk\", font_scale=1.5)\nplt.style.use(\"dark_background\")","d056c6c2":"#Codes by Alexander Filin https:\/\/www.kaggle.com\/infamous25700\/pornactors-are-among-us-18\n\nfrom pywaffle import Waffle\n\nWarranty = df[\"Cost_Type\"].value_counts()\n\nplt.figure(\n    FigureClass=Waffle,\n    rows=5,\n    columns=10,\n    values=Warranty,\n    title={'label': 'Warranty Distribution', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(Warranty.index, Warranty) ],\n    # Set the position of the legend\n    legend={'loc': 'upper left', 'bbox_to_anchor': (1, 1)},\n    dpi=100,\n    colors = [\"#ffa31a\", \"#D17200\", '#9c5400']\n    #colors = [\"#ffa31a\", \"#D17200\", \"#9c5400\", \"#763f00\", \"#422400\"]\n)\nplt.show()","c1a84371":"!pip install dataprep","0ac799bd":"from dataprep.eda import plot, plot_correlation, create_report, plot_missing","e6872864":"plot_missing(df)","fb5ae285":"plot(df)","6fcb9a52":"plot(df, \"Product_Group\")","fd0ec249":"plot_correlation(df)","9444366e":"from sklearn.tree import DecisionTreeClassifier, export_graphviz\nfrom graphviz import Source\n\n\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import Normalizer\nfrom sklearn.model_selection import train_test_split\n\n\nfrom scipy.stats import skew\nplt.style.use('ggplot')","8370a614":"from sklearn.preprocessing import LabelEncoder\n\n#fill in mean for floats\nfor c in df.columns:\n    if df[c].dtype=='float16' or  df[c].dtype=='float32' or  df[c].dtype=='float64':\n        df[c].fillna(df[c].mean())\n\n#fill in -999 for categoricals\ndf = df.fillna(-999)\n# Label Encoding\nfor f in df.columns:\n    if df[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(df[f].values))\n        df[f] = lbl.transform(list(df[f].values))\n        \nprint('Labelling done.')","4e7d1e7a":"df = pd.get_dummies(df)","38e315ab":"x = df.drop(['Job_Satus', 'Service_type'], axis=1)\nx.fillna(999999, inplace=True)\ny = df['Service_type']","e79ee8cc":"dt = DecisionTreeClassifier(max_depth=3)","51667aa7":"dt.fit(x, y)","19aebcf8":"dt_feat = pd.DataFrame(dt.feature_importances_, index=x.columns, columns=['feat_importance'])\ndt_feat.sort_values('feat_importance').tail(8).plot.barh()\nplt.show()","b2b3f6d1":"from IPython.display import SVG\nos.environ[\"PATH\"] += os.pathsep + 'C:\/Program Files (x86)\/Graphviz2.38\/bin\/'\n\ngraph = Source(export_graphviz(dt, out_file=None, feature_names=x.columns, filled = True))\ndisplay(SVG(graph.pipe(format='svg')))","13c156f9":"x = df.drop(['City', 'Product_Group'], axis=1)\nx.fillna(999999, inplace=True)\ny = df['Product_Group']","3053962d":"dt = DecisionTreeClassifier(max_depth=3)","7d23012b":"dt.fit(x, y)","f753a725":"dt_feat = pd.DataFrame(dt.feature_importances_, index=x.columns, columns=['feat_importance'])\ndt_feat.sort_values('feat_importance').tail(8).plot.barh(figsize=(14, 6), color='green')\nplt.show()","515f5f8d":"from IPython.display import SVG\nos.environ[\"PATH\"] += os.pathsep + 'C:\/Program Files (x86)\/Graphviz2.38\/bin\/'\n\ngraph = Source(export_graphviz(dt, out_file=None, feature_names=x.columns, filled = True))\ndisplay(SVG(graph.pipe(format='svg')))","49c20baa":"from dataprep.eda import create_report\n\ndf = pd.read_csv(\"\/kaggle\/input\/samsung-aftersales-service-in-iran\/samdata.csv\")\ncreate_report(df)","366900f7":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was Here.' )","54927401":"#Change bar colors and figsize, just write inside the parenthesis of plot.barh()","a4b481f1":"![](https:\/\/i5.walmartimages.com\/asr\/93e9dd42-5ba3-4d53-8601-33b29e176675_1.e96f0e1ab60bf95a34f3a15982625727.jpeg?odnWidth=612&odnHeight=612&odnBg=ffffff)walmart.com","89d2b1c4":"#Again Warranty Distribution, with other palette.","76652aa9":"#Defect Distribution","88b846c3":"#Charge Distribution","fea2f714":"#Engineer Distribution","6888dc49":"#Warranty Distribution"}}