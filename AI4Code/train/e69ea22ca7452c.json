{"cell_type":{"52a7bf69":"code","1ba0b724":"code","116f8b0d":"code","d74ce519":"code","6bb707da":"code","982b8731":"code","fcf8f8ea":"code","b0adbdd3":"code","7eee2aae":"code","08141a35":"code","ba6e991f":"markdown","eb72ee70":"markdown","498f3f79":"markdown","2e92cae3":"markdown","5f6edc2b":"markdown","dbd4cdc7":"markdown","1caa107f":"markdown","89e16e8a":"markdown","042b0d1e":"markdown"},"source":{"52a7bf69":"import numpy as np # for manipulating 3d images\nimport pandas as pd # for reading and writing tables\nimport h5py # for reading the image files\nimport skimage # for image processing and visualizations\nimport sklearn # for machine learning and statistical models\nimport os # help us load files and deal with paths","1ba0b724":"%matplotlib inline\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport seaborn as sns\nplt.rcParams[\"figure.figsize\"] = (8, 8)\nplt.rcParams[\"figure.dpi\"] = 125\nplt.rcParams[\"font.size\"] = 14\nplt.rcParams['font.family'] = ['sans-serif']\nplt.rcParams['font.sans-serif'] = ['DejaVu Sans']\nplt.style.use('ggplot')\nsns.set_style(\"whitegrid\", {'axes.grid': False})","116f8b0d":"train_df = pd.read_csv('..\/input\/train.csv')\ntrain_df.head(5) # show the first 5 lines","d74ce519":"train_df['age_years'].hist(bins=10) # make a histogram of the ages of patients","6bb707da":"train_df['age_group'] = train_df['age_years'].map(lambda age: 'old' if age>60 else 'young') \ntrain_df['age_group'].value_counts() # show how many of each we have","982b8731":"sample_scan = train_df.iloc[0] # just take the first row\nprint(sample_scan)\n# turn the h5_path into the full path\nfull_scan_path = os.path.join('..', 'input','train', sample_scan['h5_path'])\n# load the image using hdf5\nwith h5py.File(full_scan_path, 'r') as h:\n    image_data = h['image'][:][:, :, :, 0] # we read the data from the file\nprint(image_data.shape, 'loaded')","fcf8f8ea":"# show the middle slice\nplt.imshow(image_data[image_data.shape[0]\/\/2, :, :])","b0adbdd3":"fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(15, 5))\nax1.imshow(image_data[image_data.shape[0]\/\/2, :, :], cmap='gray')\nax2.imshow(image_data[:, image_data.shape[1]\/\/2, :], cmap='gray')\nax3.imshow(image_data[:, :, image_data.shape[2]\/\/2], cmap='gray')","7eee2aae":"brain_montage = skimage.util.montage(image_data)\nplt.imshow(brain_montage)","08141a35":"fig, m_axs = plt.subplots(2, 3, figsize=(15, 10))\nfor (group_name, c_rows), (ax1, ax2, ax3) in zip(train_df.groupby('age_group'), m_axs):\n    full_scan_path = os.path.join('..', 'input','train', c_rows['h5_path'].iloc[0])\n    with h5py.File(full_scan_path, 'r') as h:\n        cur_image_data = h['image'][:][:, :, :, 0] # we read the data from the file\n    ax1.imshow(cur_image_data[cur_image_data.shape[0]\/\/2, :, :], cmap='gray')\n    ax1.set_title('{} scan'.format(group_name))\n    ax2.imshow(cur_image_data[:, cur_image_data.shape[1]\/\/2, :], cmap='gray')\n    ax3.imshow(cur_image_data[:, :, cur_image_data.shape[2]\/\/2], cmap='gray')","ba6e991f":"### Plot Setup Code\nHere we setup the defaults to make the plots look a bit nicer for the notebook","eb72ee70":"# Load the Training Data\nWe start with the training data since we have labels for them and can look in more detail","498f3f79":"## Show all of the slices\nWe can use the `montage` function from skimage to show all the slices","2e92cae3":"## Show the middle slice in x, y and z\nWe can also change the colormap to gray to make the images look more like MRIs","5f6edc2b":"# Overview\nIn this notebook we load the data and view different images to get a better idea about the challenge we are facing. This is always a very helpful first step. It is also important that you can see and try to make some of your own predictions about the data. If you cannot see differences between the groups it is going to be difficult for a biomarker to capture that (but not necessarily impossible)","dbd4cdc7":"# Load a Scan\n- the data on kaggle are located in a parent folder called input. \n- Since the files have been organized into train and test we use the train folder","1caa107f":"We see two groups form in this list young ($<60$) and old ($>60$) and very few in-between. This should make our task a little bit easier since the difference between young and old is probably bigger than between 30 and 35.","89e16e8a":"# Visualize the Data\n## Middle Slice","042b0d1e":"# Compare Young and Old"}}