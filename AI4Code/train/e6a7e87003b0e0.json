{"cell_type":{"17d2a715":"code","c3e6acde":"code","abe5e18c":"code","fae45552":"code","114728e5":"code","51e19c92":"code","ee5def70":"code","a4e3eefb":"code","f7bf434c":"code","f2afea6f":"code","e03ac565":"code","9f92110f":"code","71ead722":"code","c12fe8fa":"code","175b925a":"code","26a33e29":"code","6ba1fb45":"code","ca791bda":"code","5cfd5f5d":"code","eb0a3cf6":"code","d64f1e0a":"code","b08f395e":"code","2802373c":"code","c3625e8a":"code","41dee20d":"code","d44ae8c5":"code","38fe96ba":"code","e015b910":"code","84f9475e":"code","32f0aa71":"code","5d7565d6":"code","2197392f":"code","45f5f123":"code","4fbbdbcf":"markdown","6511730a":"markdown","f02a21a4":"markdown","bfc9d07f":"markdown","63983004":"markdown","23995205":"markdown","e9798bc4":"markdown","e354c2ab":"markdown"},"source":{"17d2a715":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c3e6acde":"# From Sratch","abe5e18c":"import matplotlib.pylab as plt\nimport seaborn as sns\nfrom pylab import rcParams\nimport networkx as nx","fae45552":"%matplotlib inline\nsns.set_style('darkgrid')\nrcParams['figure.figsize']=6,5","114728e5":"G=nx.Graph()\nnx.draw(G)","51e19c92":"G.add_node(1)\nnx.draw(G)","ee5def70":"G.add_nodes_from([2,3,4,5,6,8,9,12,15,16])\nnx.draw(G)","a4e3eefb":"G.add_edges_from([(2,4),(2,6),(2,8),(2,12),(2,16),(3,6),(3,9),(3,12),(3,15),(4,8),(4,12),(4,16),(6,12),(8,16)])\nnx.draw(G)","f7bf434c":"nx.draw_circular(G)","f2afea6f":"nx.draw_spring(G)","e03ac565":"nx.draw_circular(G, node_color='bisque', with_labels=True)","9f92110f":"G.remove_node(1)\nnx.draw_circular(G, node_color='bisque', with_labels=True)","71ead722":"summary_stats=nx.info(G)\nprint(summary_stats)","c12fe8fa":"print(nx.degree(G))","175b925a":"G=nx.complete_graph(25)\nnx.draw(G, node_color='bisque', with_labels=True)","26a33e29":"G=nx.gnc_graph(7, seed=25)\nnx.draw(G, node_color='bisque', with_labels=True)","6ba1fb45":"ego_G=nx.ego_graph(G, 3, radius=5) \nnx.draw(G, node_color='bisque', with_labels=True)","ca791bda":"DG = nx.gn_graph(7, seed=25)\nfor line in nx.generate_edgelist(DG, data=False):\n    print(line)","5cfd5f5d":"print(DG.node[0])","eb0a3cf6":"DG.node[0]['name']=['Alice']\nprint(DG.node[0])","d64f1e0a":"DG.node[1]['name']=['Bob']\nDG.node[2]['name']=['Claire']\nDG.node[3]['name']=['Dennis']\nDG.node[4]['name']=['Esther']\nDG.node[5]['name']=['Frank']\nDG.node[6]['name']=['George']","b08f395e":"DG.add_nodes_from([(0,{'age':25}),(1,{'age':31}), (2,{'age':18}), (3,{'age':47}), (4,{'age':22}), (5,{'age':23}),(6,{'age':50})])\nprint(DG.node[0])","2802373c":"DG.node[0]['gender']='f'\nDG.node[1]['gender']='m'\nDG.node[2]['gender']='f'\nDG.node[3]['gender']='m'\nDG.node[4]['gender']='f'\nDG.node[5]['gender']='m'\nDG.node[6]['gender']='m'","c3625e8a":"nx.draw_circular(DG, node_color='bisque', with_labels=True)","41dee20d":"labeldict={0:'Alice', 1:'Bob', 2:'Claire', 3:'Dennis', 4: 'Esther', 5: 'Frank', 6: 'George'}\nnx.draw_circular(DG,labels=labeldict, node_color='bisque', with_labels=True)","d44ae8c5":"G = DG.to_undirected()","38fe96ba":"nx.draw_spectral(G, labels= labeldict, node_color='bisque', with_labels=True)","e015b910":"print(nx.info(DG))\n","84f9475e":"DG.degree()","32f0aa71":"nx.draw_circular(DG, node_color='bisque', with_labels=True)","5d7565d6":"DG.successors(3)","2197392f":"DG.neighbors(4)","45f5f123":"G.neighbors(4)","4fbbdbcf":"# Simulate a social network","6511730a":"# Considering degrees in a social network","f02a21a4":"# Generate stats on nodes and inspect graphs","bfc9d07f":"# Assigning attributes to nodes","63983004":"# Identifying Graph Properties","23995205":"# Identifying Successor Nodes","e9798bc4":"# Using Graph Generators","e354c2ab":"# creating Graph Object"}}