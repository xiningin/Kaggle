{"cell_type":{"a0e7085a":"code","54e8a545":"code","b3af27bd":"code","4e75dd03":"code","cfda37ed":"code","c5d44485":"code","ad9e3e59":"code","7edca434":"code","79e4c348":"code","144ecd78":"code","0636b91f":"code","139f45d6":"code","768ebdeb":"code","55763263":"markdown","5fbc17e4":"markdown","1ebe673f":"markdown","52b5f84b":"markdown","ab735757":"markdown"},"source":{"a0e7085a":"import pandas as pd\ndf = pd.read_csv('..\/input\/diamonds\/diamonds.csv')\ndf.head()","54e8a545":"df['cut'].unique()","b3af27bd":"cut_labels = {'Ideal':0, \n               'Fair':1, \n               'Good':2,\n               'Very Good':3,\n               'Premium':4}","4e75dd03":"df['cut'] = df['cut'].map(color_labels)\ndf","cfda37ed":"df['color'].unique()","c5d44485":"df['clarity'].unique()","ad9e3e59":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","7edca434":"df['color'] = le.fit_transform(df['color'])\ndf['clarity'] = le.fit_transform(df['clarity'])\n\ndf","79e4c348":"df = pd.read_csv('..\/input\/diamonds\/diamonds.csv')\ndf.head()","144ecd78":"dummies = pd.get_dummies(df['color'])\ndummies","0636b91f":"df = pd.concat([df, dummies], axis = 1)\ndf","139f45d6":"df.drop(['color'], axis = 1, inplace = True)","768ebdeb":"df","55763263":"## Ordinal Encoding","5fbc17e4":"![](http:\/\/miro.medium.com\/max\/1400\/1*ggtP4a5YaRx6l09KQaYOnw.png)","1ebe673f":"# **Label Encoding**\n**Many a times, our dataset contains columns with string values, and we can't provide string data to our ML model. That's why we need to convert our string data into numeric data.\nTwo types of variables are observed -** \n## Nominal variables - \nThese variables don't follow any order for eg. - Male | Female , Car | Bus | Scooter. These variables don't have any relation between them. We can't decide that male will get label 1 and female will get label 0, because due that the model will assign an order to them which will affect the accuracy.\n\n![](https:\/\/d1m75rqqgidzqn.cloudfront.net\/wp-data\/2020\/08\/11155757\/image-37.png)\n\n## Ordinal variables - \nOn the other side, ordinal variables follow an order such as Good | Better | Best , Low | Medium | High. These variables can be assigned ordered labels such as - \nGood = 0\nBetter = 1\nBest = 2\n\n![](https:\/\/lh3.googleusercontent.com\/kfmOfJOQERCTyAvaDRgMfA4GYUhcP9VQnO5q2MeCIqBANJhoiMHHf_XdDk-fMtIC9iqqFEuNLeKESykvCsDxhkUmmBHmNLvEkZaO4tAMKKx7A37zK96pGpusdk95lOOchxmYkVa99FiOwCdB7w)","52b5f84b":"## Label Encoding","ab735757":"# **One Hot\ud83d\udd25 Encoding**\n**A one hot encoding allows the representation of categorical data to be more expressive. Many machine learning algorithms cannot work with categorical data directly. The categories must be converted into numbers. This is required for both input and output variables that are categorical.**\n\n**For each unique variable, a separate column will be generated. 1 and 0 will be filled depending on the fact whether that variable is there in the original column at that place or not.**"}}