{"cell_type":{"e8ab2e9e":"code","645ab03c":"code","e6c1c715":"code","aa86d1e9":"code","841edafa":"code","4d36db01":"code","599f67ed":"code","c7c8362a":"code","006eb2e5":"code","656b9aed":"code","12d7c984":"code","58abad64":"code","65e0cb3e":"code","afea2b0c":"code","3b98700b":"code","994bb0b6":"code","90382d3c":"code","a922dd08":"code","7cd50d7e":"code","3763bbe8":"code","3d47462b":"code","bf3aab9e":"code","d3d3499b":"code","c517d3f1":"code","48ee7d04":"code","7f053df6":"code","002b1a2b":"markdown","7833aeaf":"markdown","e6311db6":"markdown"},"source":{"e8ab2e9e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","645ab03c":"from collections import Counter\n\npd.set_option('display.max_columns', None)","e6c1c715":"train_df = pd.read_csv('\/kaggle\/input\/1056lab-credit-card-customer-churn-prediction\/train.csv', index_col=0)","aa86d1e9":"train_df.head()","841edafa":"test_df = pd.read_csv('\/kaggle\/input\/1056lab-credit-card-customer-churn-prediction\/test.csv', index_col=0)","4d36db01":"test_df.head()","599f67ed":"train_df.info()","c7c8362a":"train_df.isnull().sum()","006eb2e5":"test_df.info()","656b9aed":"test_df.isnull().sum()","12d7c984":"median = test_df['Total_Amt_Chng_Q4_Q1'].median()\ntest_df['Total_Amt_Chng_Q4_Q1'] = test_df['Total_Amt_Chng_Q4_Q1'].fillna(median)","58abad64":"Counter(train_df['Gender'])","65e0cb3e":"train_df['Gender'] = train_df['Gender'].map({'F' : 1,'M' : 2})\ntest_df['Gender'] = test_df['Gender'].map({'F' : 1,'M' : 2,})","afea2b0c":"Counter(train_df['Education_Level'])","3b98700b":"train_df['Education_Level'] = train_df['Education_Level'].map({'High School' : 1,'College' : 2,'Graduate': 3,'Uneducated': 4,'Post-Graduate' : 5,'Doctorate':6,'Unknown':7})\ntest_df['Education_Level'] = test_df['Education_Level'].map({'High School' : 1,'College' : 2,'Graduate': 3,'Uneducated': 4,'Post-Graduate' : 5,'Doctorate':6,'Unknown':7})","994bb0b6":"Counter(train_df['Marital_Status'])","90382d3c":"train_df['Marital_Status'] = train_df['Marital_Status'].map({'Single' : 1,'Divorced' : 2,'Married':3,'Unknown': 4})\ntest_df['Marital_Status'] = test_df['Marital_Status'].map({'Single' : 1,'Divorced' : 2,'Married':3,'Unknown': 4})","a922dd08":"Counter(train_df['Income_Category'])","7cd50d7e":"train_df['Income_Category'] = train_df['Income_Category'].map({'Unknown' : 45,'$60K - $80K': 70,'Less than $40K':20,'$80K - $120K': 100,'$40K - $60K': 50,'$120K +':140})\ntest_df['Income_Category'] = test_df['Income_Category'].map({'Unknown' : 45,'$60K - $80K': 70,'Less than $40K':20,'$80K - $120K': 100,'$40K - $60K': 50,'$120K +':140})","3763bbe8":"Counter(train_df['Card_Category'])","3d47462b":"train_df['Card_Category'] = train_df['Card_Category'].map({'Blue' : 1,'Silver': 2,'Gold':3,'Platinum': 4})\ntest_df['Card_Category'] = test_df['Card_Category'].map({'Blue' : 1,'Silver': 2,'Gold':3,'Platinum': 4})","bf3aab9e":"train_df.head()","d3d3499b":"import seaborn as sns\nfrom matplotlib import pyplot\nimport matplotlib.pyplot as plt\n\nsns.set_style(\"darkgrid\")\npyplot.figure(figsize=(15, 15))  # \u56f3\u306e\u5927\u304d\u3055\u3092\u5927\u304d\u76ee\u306b\u8a2d\u5b9a\nsns.heatmap(train_df.corr(), square=True, annot=True)  # \u76f8\u95a2\u4fc2\u6570\u3067\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3092\u4f5c\u6210","c517d3f1":"aaa = train_df.drop(['Attrition','Education_Level','Marital_Status'],axis=1)\nbbb = test_df.drop(['Education_Level','Marital_Status'],axis=1)\n\nX_train = aaa.to_numpy()\ny_train = train_df['Attrition'].to_numpy()\nX_test = bbb.to_numpy()","48ee7d04":"from sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier()\nmodel.fit(X_train, y_train)","7f053df6":"p = model.predict_proba(X_test)\n\nsubmit_df = pd.read_csv('\/kaggle\/input\/1056lab-credit-card-customer-churn-prediction\/sampleSubmission.csv', index_col=0)\nsubmit_df['Attrition'] = p[:,1]\nsubmit_df.to_csv('submission.csv')","002b1a2b":"# \u6570\u5024\u306b\u5909\u66f4","7833aeaf":"# \u5b66\u7fd2","e6311db6":"# \u6b20\u640d\u5024\u306e\u78ba\u8a8d"}}