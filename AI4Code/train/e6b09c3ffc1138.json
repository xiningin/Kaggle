{"cell_type":{"ffbc97de":"code","ef60535f":"code","c965bed3":"code","068f7efe":"code","e0addd26":"code","898098a2":"code","e7d6bdae":"code","3695af04":"code","3163c914":"code","0f9adf65":"code","61c123d3":"code","249eeedb":"markdown","37d3cf08":"markdown","56e257ed":"markdown","65185505":"markdown","4cba495d":"markdown","85b10f4b":"markdown","d63b3c54":"markdown","b4942d9a":"markdown","89d4fc42":"markdown","3060e8cf":"markdown","43be111a":"markdown","dbfd070c":"markdown","f061fdd2":"markdown","379dc4fe":"markdown","0fb93420":"markdown","fc15455c":"markdown","cde2a02d":"markdown","f8f875ca":"markdown","f5f523bc":"markdown","4f51c99b":"markdown","669b2399":"markdown","f86592ff":"markdown"},"source":{"ffbc97de":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ef60535f":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True) \nfrom collections import Counter\nfrom collections import OrderedDict\nimport numpy as np \n\n\nresto = pd.read_csv('..\/input\/restaurant_data_kaggles.csv', error_bad_lines=False)\n\n#print(resto.head())\n#print(resto.tail())\n\n#print(resto.keys())\n#renomme les attributs sans espaces et avec des noms plus pertinants\nresto = resto.rename(columns={'restaurant_name ' : 'nom', 'review_number ':'review_number', ' food_type ':'type', ' ranking ':'rank',\n       ' overallRating  ':'rating', ' wifi ':'wifi', ' livraison ':'livraison', ' average_price ':'prix', ' lat ':'lat', ' lng ':'long', ' district ':'arr'})\n#print(resto.keys())\n\n#remplace donn\u00e9e categorielle manuscrites en chiffre pour facilit\u00e9 l'analyse\n# yes = 1, no =0\nresto.loc[resto.livraison == 'no','livraison'] = 0\nresto.loc[resto.livraison == 'yes','livraison'] = 1\n\nresto.loc[resto.wifi == 'no','wifi'] = 0\nresto.loc[resto.wifi == 'yes','wifi'] = 1\n\nresto.loc[resto.lat == 'no information','lat'] = 0\nresto.loc[resto.long == 'no information','long'] = 0\n","c965bed3":"resto.head(5)","068f7efe":"\nimport folium\n\n\na1 = resto.lat.astype(float)\nb1 = resto.long.astype(float)\nc1 = resto.type\na=list(a1)\nb=list(b1)\nc=list(c1)\n\n#print(resto.nom)\n#print(resto.type)\n\nm=folium.Map(location=[45.764043,4.835659],zoom_start = 15)\n\n\ni=0\nwhile i<250:\n    folium.Marker([a[0+i],b[0+i]], c[0+i]).add_to(m)\n    i = i+1\n\n\ndisplay(m)","e0addd26":"k=0\narr=[]\nwhile k<len(resto['arr']):\n    arr+=Counter(resto['arr'][k].split()).most_common()\n    k+=1\nsubclass_arr = [j for j in arr if j[0] != 'Lyon' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Villeurbanne' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Saint-Priest' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'en' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Vaulx' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Velin' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Bron' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Chaponnay' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Decines-Charpieu' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Charbonni\\xc3\\xa8res-les-Bains' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Limonest' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Chassieu' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Ecully' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Francheville' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'LYON' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'lyon' ]\nsubclass_arr = [j for j in subclass_arr if j[0] != 'Charbonni\u00e8res-les-Bains  ' ]\n\nval_arr=  OrderedDict(sorted(Counter(subclass_arr).most_common(15), key=lambda t: t[1],reverse=True)).values()\nkeys_arr=  OrderedDict(sorted(Counter(subclass_arr).most_common(15), key=lambda t: t[1],reverse=True)).keys()\nkeys_list = [x[0] for x in keys_arr]\n\n\n\nplt.figure(figsize=(15,10))\nsns.barplot(y=list(keys_list), x= list(val_arr), orient='h')\nplt.title('Top 15 district to eat in Lyon', fontsize=16)\nplt.xlabel('Number Of restaurant', fontsize=16)\nplt.ylabel('district', fontsize=16)\nplt.show()\nplt.close","898098a2":"#remplace le character \"|\" par un vide pour pouvoir analyser mot par mot le jeu de donn\u00e9es\ndata = resto['type'].str.replace(\"|\",\"\")\ni=0\n#fonction split permet de recuperer pour chaque ligne les mot separ\u00e9 (ex: (un chat) deviens (un:1),(chat:1))\n#on stock ces mot dans un tableau que l'on nomme u \nu=[]\nwhile i<len(data):\n    u+=Counter(data[i].split()).most_common()\n    i+=1\n    \n#supprime les mot inutiles ou repetitif de la list u pour pouvoir realiser de meilleures analyses \nsubclass = [j for j in u if j[0] != 'no' ]\n\nsubclass = [j for j in subclass if j[0] != 'de' ]\n\nsubclass = [j for j in subclass if j[0] != '\u00e0' ]\n\nsubclass = [j for j in subclass if j[0] != 'bienvenus' ]\n\nsubclass = [j for j in subclass if j[0] != 'restauration' ]\nsubclass = [j for j in subclass if j[0] != 'Restauration' ]\n\nsubclass = [j for j in subclass if j[0] != '&' ]\n\nsubclass = [j for j in subclass if j[0] != 'food' ]\n\nsubclass = [j for j in subclass if j[0] != 'cuisine' ]\n\nsubclass = [j for j in subclass if j[0] != 'rue' ]\n\nsubclass = [j for j in subclass if j[0] != 'choix' ]\n\nsubclass = [j for j in subclass if j[0] != 'plats' ]\n\nsubclass = [j for j in subclass if j[0] != 'gluten' ]\n\nsubclass = [j for j in subclass if j[0] != 'sans' ]\n\nsubclass = [j for j in subclass if j[0] != 'Saine' ]\n\nsubclass = [j for j in subclass if j[0] != 'information' ]\n#Fonction Counter permet de compter le nombre d'un fois qu'un element apparais dans notre tableau \n\nimport plotly\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nvalues=list(Counter(subclass).values())\nlabels=list(Counter(subclass).keys())\nlabel_list = [x[0] for x in labels]\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": values,\n      \"labels\": label_list,\n      \"domain\": {\"x\": [0, .5]},\n      \"hoverinfo\":\"label\",\n      \"hole\": .2,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"Food Categories\",\n                \"x\": 0.15,\n                \"y\": 1.15\n            },\n        ]\n    }\n}\niplot(fig)\n\n","e7d6bdae":"\nfrom collections import Counter\nfrom collections import OrderedDict\nimport numpy as np \n\n# Make fake dataset\nheight = OrderedDict(sorted(Counter(subclass).most_common(15), key=lambda t: t[1],reverse=True)).values()\nbars = OrderedDict(sorted(Counter(subclass).most_common(15), key=lambda t: t[1],reverse=True)).keys()\ny_pos = np.arange(len(bars))\n\n\n# Create horizontal bars\nmy_colors = ['red','orange','#ffe119','#ff6666','#42d4f4','blue','#f032e6','#e6beff','#911eb4','#3cb44b', '#ffcc99', '#99ff99', '#66b3ff']\nplt.barh(y_pos, list(height), color=my_colors)\n\n# Create names on the y-axis\nplt.yticks(y_pos, bars)\n\n# Show graphic\nplt.title('Top 15 popular food categories in Lyon')\nplt.show()\nplt.close","3695af04":"resto.groupby('prix').size()","3163c914":"\n#analysis group by good rating\ndatrating = resto.loc[resto['rating'] != 'no information']\ndatrating = datrating.loc[datrating['rating'] > str(4.5)]\n\n#analysis group by low rating\ndatrating_low = resto.loc[resto['rating'] != 'no information']\ndatrating_low = datrating_low.loc[datrating_low['rating'] < str(2.0)]\n\n\n\nsns.catplot(y=\"rating\", hue=\"arr\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=datrating);\nplt.title('Good Rating count per district')\nplt.show()\nplt.close\n\nsns.catplot(y=\"rating\", hue=\"arr\", kind=\"count\",\n            palette=\"pastel\", edgecolor=\".6\",\n            data=datrating_low);\nplt.title('Bad Rating count per district')\nplt.show()\nplt.close\n\n","0f9adf65":"\n\nk1=0\narr1=[]\nwhile k1<len(resto['arr']):\n    arr1+=Counter(resto['arr'][k1].split()).most_common()\n    k1+=1\nsubclass_arr1 = [j for j in arr if j[0] != 'Lyon' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Villeurbanne' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Saint-Priest' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'en' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Vaulx' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Velin' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Bron' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Chaponnay' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Decines-Charpieu' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Charbonni\\xc3\\xa8res-les-Bains' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Limonest' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Chassieu' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Ecully' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Francheville' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'LYON' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'lyon' ]\nsubclass_arr1 = [j for j in subclass_arr if j[0] != 'Charbonni\u00e8res-les-Bains  ' ]\n\nval_arr1=  OrderedDict(sorted(Counter(subclass_arr1).most_common(10), key=lambda t: t[1],reverse=True)).values()\nkeys_arr1=  OrderedDict(sorted(Counter(subclass_arr1).most_common(10), key=lambda t: t[1],reverse=True)).keys()\nkeys_list1 = [x[0] for x in keys_arr1]\n\n\nplt.figure(figsize=(20,20))\nnobu =datrating.loc[datrating[\"rating\"] != '4.5']\n\n# best restaurant & top area\n\nfig, (axis1,axis2) = plt.subplots(1,2,figsize=(15,3))\n\n# What are the best restaurant in Lyon?\n\nsns.countplot(y='rating',hue='nom', data = nobu.sort_values(by='rating',ascending=False)[:10], palette=\"Set3\", ax=axis1)\n\n# What are the top area to eat in Lyon?\nsns.barplot(y=list(keys_list), x= list(val_arr), orient='h', palette=\"Set3\", ax=axis2)\n\nplt.title('Most popular area in Lyon', fontsize=16)\nplt.xlabel('count', fontsize=16)\nplt.ylabel('district', fontsize=16 )\nplt.show()\nplt.close\n\n\n","61c123d3":"# bad restaurant & bad area\nlow_rating=datrating_low.loc[datrating_low[\"rating\"] != '1.5']\n\nval_arr_bad=  OrderedDict(sorted(Counter(subclass_arr1).most_common(10), key=lambda t: t[1],reverse=False)).values()\nkeys_arr_bad=  OrderedDict(sorted(Counter(subclass_arr1).most_common(10), key=lambda t: t[1],reverse=False)).keys()\nkeys_list_bad = [x[0] for x in keys_arr_bad]\n\n\n# What are the best restaurant in Lyon?\n\nsns.countplot(y='rating',hue='nom', data = low_rating.sort_values(by='rating',ascending=False)[:10], palette=\"Set3\")\n\nplt.title('Less popular restaurant in Lyon', fontsize=16)\nplt.xlabel('count', fontsize=16)\nplt.show()\nplt.close\n\n\n","249eeedb":"It\u2019s easy to see most of restaurants are scattered in the central area  of Lyon .\n\n","37d3cf08":"This simple Groupby allow us to see that the predominant value of the price is 'no information' by nearly 70% .\nfrom this information we can deduct that most of the restaurant don't want to reveal their price, it's maybe a factor that could discouradge a customer ..\n\nSince we don't find this information valuable we gon focused our analysis on the rating ","56e257ed":"# 5.Data Content: First 5 Rows\n\n","65185505":"# 6.1.1 Leaflet Map: Food Restaurants in Lyon\n\n","4cba495d":"So based on the rating here is the list of the 10 best restaurant and area we would recommend tourists coming to Lyon.\n","85b10f4b":"This graph shows top 15 popular areas. We are going to focus on restaurants in these 15 areas.\n\n\n","d63b3c54":"# 6.4 So where are the best Restaurant and area in Lyon?","b4942d9a":"We decided to do both analysis for the good and the bad rating , from these we can notice a trend for each .\n\nFor the good rating , the top area are : 69006, 69002, 69003, 69001\nFor the bad rating , the top area are : 69005, 69120, 69100, 69001\n\nthe bad rating seems for the most be restaurant oustide of the center of lyon , but we can have area that are represented in the good and the bad like 69001 .","89d4fc42":"# 6.1 Geospatial Analysis\n","3060e8cf":"And here is the list of the 10 restaurant we wouldn't recommend to tourists coming to Lyon  .\nMoreover as we can witness most of them restaurant are world wide fast food chain that don't really reprensent the Lyon's culture and knowledge .\n\n","43be111a":"# 6.2 Food Category","dbfd070c":"# 6.3 Rating Analysis","f061fdd2":"French is by far the most popular food category. But it is still amazing to see there are so many minor categories. You can check them out by hovering the pie chart. Japanese, Vegan, Italian\u2026 Do you find interesting categories?\n\n\n","379dc4fe":"#Where Should I go for the best dinner in Lyon?\n\n\nLauny Christian & Alfred Chantharath\n\n06\/10\/2018\n\n* 1 Introduction\n* 2 Research Questions\n* 3 Data Source\n* 4 Preparation\n* 5 Data Content: First 5 Rows\n* 5.1 Data Cleaning\n* 6 Analysis\n* 6.1 Geospatial Analysis\n* 6.1.1 Leaflet Map: Food Restaurants in Lyon\n* 6.2 Food Category\n* 6.3  Rating Analysis\n* 6.4 So where are the best Restaurant and area in Lyon?\n* 7 Conclusion\n\n","0fb93420":"# 1.Introduction\nLyon is sometimes mentioned as one of the best travel destinations in the Europe.\nTwo years ago ,Lyon was chosen as Europe\u2019s best weekend destination in the World Travel Awards  and still is the gastronomical capital of France Thus we thought data analysis on Lyon\u2019s food culture would be interesting and this is where the first motivation of this analysis came from.\n\nIn this report, we are  going to investigate general food restaurants .\n\n","fc15455c":"# 6 Analysis\n","cde2a02d":"* Nom : Restaurants\u2019 Names\n* review_number : The number of reviews  \n* type : food_type\n* rank : Ranking above all others restaurant in Lyon\n* rating : 5 point scale rate\n* wifi : presence or no of the wifi\n* livraison : delivery\n* prix  : Price \n* arr : the district of the restaurant \n* Lat : Latitude of a restaurant\n* Long : Longitude of a restaurant\nThe dataset covers 3059 restaurants across Lyon .","f8f875ca":"# 3.Data Source\nTripadvisor is the world\u2019s largest travel site.  With over 500 million candid traveller reviews, the site can help you make the right choice when you shop for hotels, restaurants, and attractions.\nYou can\u2019t only find reviews of restaurants but also you can refer to information of each restaurants ,hotel , flight and eating places in the world.\n\nTripAdvisor uses a 5-point scale like other websites such as Yelp and TripAdvisor do. \nData was scraped from this this site and all the scraping scripts are on my GitHub page. ","f5f523bc":"# 2.Research Questions\n\nWhere are popular areas?\nPrice & Rating Analysis of Restaurant in Lyon.","4f51c99b":"# 7 Conclusion\nIn this report, we have found popular food categories, popular areas , and the most recommendable restaurant in Lyon.\nwe hope this analysis have benefit for you and help you plan your stay in Lyon.","669b2399":"# 4.Preparation\n\n","f86592ff":"French  is the by far the most popular category. It is interesting to see that there are some non-French popular categories such as Italian, Asian\u2026  Now i would like to do a price distribution analysis of restaurant's in Lyon"}}