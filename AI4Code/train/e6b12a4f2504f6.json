{"cell_type":{"6fb38cd1":"code","0110d066":"code","f7646c1b":"code","f83f5209":"code","866f9fc9":"code","0c8dbed2":"code","9bdf321f":"code","5efcdd7d":"code","f4bada5f":"code","2411e2ca":"code","d01f8cd9":"code","fbd4dfa9":"code","79b55728":"code","312af898":"code","a1d332ec":"code","8ababe5f":"code","1ef98adf":"code","f781d8a7":"code","e8be4348":"code","996b38e2":"code","039ef2ad":"code","cdcea67b":"code","ea62d69d":"code","181b4e8d":"code","a35f3e6d":"code","0060e9cb":"code","57f2391e":"code","c56e95ee":"code","dbe16805":"code","afe04231":"code","a1e7daf0":"code","92e0a320":"code","a009aff2":"code","8b924aeb":"code","e247605e":"code","1095b55a":"code","98f1d533":"code","057351b3":"markdown","8436682d":"markdown","94470c4f":"markdown","c9a747f0":"markdown","8fb5429e":"markdown","ba75a6b9":"markdown","89de7e56":"markdown","18f5f463":"markdown","7ce171ee":"markdown","fc5c7304":"markdown","580281d2":"markdown","700077cf":"markdown","63f67d08":"markdown","846b68b3":"markdown","77dc16cb":"markdown","a2525721":"markdown","64a739c8":"markdown","fdd8d4bb":"markdown","c4b2fe86":"markdown","df70c2fc":"markdown","0f1d2ae6":"markdown","fefb3f13":"markdown","86137053":"markdown","a5ce6f6a":"markdown","071c0c71":"markdown"},"source":{"6fb38cd1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0110d066":"df = pd.read_csv('..\/input\/roman-emperors-from-26-bc-to-395-ad\/roman-emperors.csv')\ndf.tail()","f7646c1b":"df.isnull().sum()","f83f5209":"df_grp = df.groupby([\"Name\",\"Index\"])[[\"Full Name\",\"Killer\",\"Cause\", \"Reign Start\", \"Reign End\"]].sum().reset_index()\ndf_grp.head()","866f9fc9":"df_grp.sort_values('Index', axis=0, ascending=True, inplace=False, kind='quicksort', na_position='last', ignore_index=False, key=None)","0c8dbed2":"#Code by https:\/\/www.geeksforgeeks.org\/python-pandas-split-strings-into-two-list-columns-using-str-split\/\n\ndf_grp[\"Reign Start\"]= df_grp[\"Reign Start\"].str.split(\" T\", n = 2, expand = True)","9bdf321f":"#Code by https:\/\/www.geeksforgeeks.org\/python-pandas-split-strings-into-two-list-columns-using-str-split\/\n\ndf_grp[\"Reign End\"]= df_grp[\"Reign End\"].str.split(\" T\", n= 2, expand = True)","5efcdd7d":"df_grp.head()","f4bada5f":"ax = df['Cause'].value_counts().plot.barh(figsize=(12, 6))\nax.set_title('Caesars Cause of Deaths', size=18)\nax.set_ylabel('Cause of Deaths', size=10)\nax.set_xlabel('Count', size=10);","2411e2ca":"#Code by Farid Rizqi S https:\/\/www.kaggle.com\/faridrizqis\/goodread-quote-analysis\n\ndf['Killer'].value_counts().head(10).plot(kind='bar', color='r');","d01f8cd9":"wife = df[(df['Killer']=='Wife')].reset_index(drop=True)\nwife.head()","fbd4dfa9":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'Red',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df[\"Killer\"]))\nplt.rcParams['figure.figsize'] = (10,10)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Caesar's Killers\")\nplt.show()","79b55728":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.RdBu(np.linspace(0,1,20))\ndf[\"Killer\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"Dynasty\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Caesar's Killers\")\nplt.axis(\"off\")\nplt.show()","312af898":"#Code by Farid Rizqi S https:\/\/www.kaggle.com\/faridrizqis\/goodread-quote-analysis\n\nplt.figure(figsize=(6,4))\n\ndf['Cause'].value_counts().head(10).plot(kind='bar', color='g')\n\nplt.title(\"Caesar's Cause of Deaths\");","a1d332ec":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'black',\n                      colormap='Set3',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df[\"Birth City\"]))\nplt.rcParams['figure.figsize'] = (10,10)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Caesar's Birth City\")\nplt.show()","8ababe5f":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.Wistia(np.linspace(0,1,20))\ndf[\"Dynasty\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"Era\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Caesar's Dynasties\")\nplt.axis(\"off\")\nplt.show()","1ef98adf":"gordian = df[(df['Dynasty']=='Gordian')].reset_index(drop=True)\ngordian.head()","f781d8a7":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.Pastel1(np.linspace(0,1,20))\ndf[\"Era\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"Dynasty\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Caesar's Eras\")\nplt.axis(\"off\")\nplt.show()","e8be4348":"constant = df[(df['Dynasty']=='Constantinian')].reset_index(drop=True)\nconstant.head(8)","996b38e2":"cols_to_drop=['Unnamed: 17','Unnamed: 18', 'Unnamed: 19']\ndf=df.drop(cols_to_drop,axis=1)\ndf.columns","039ef2ad":"#Code by Parul Pandey  https:\/\/www.kaggle.com\/parulpandey\/a-guide-to-handling-missing-values-in-python\n\n\nfrom sklearn.impute import SimpleImputer\ndf_most_frequent = df.copy()\n#setting strategy to 'mean' to impute by the mean\nmean_imputer = SimpleImputer(strategy='most_frequent')# strategy can also be mean or median \ndf_most_frequent.iloc[:,:] = mean_imputer.fit_transform(df_most_frequent)","cdcea67b":"df_most_frequent.isnull().sum()","ea62d69d":"from sklearn.preprocessing import LabelEncoder\n\n#fill in mean for floats\nfor c in df_most_frequent.columns:\n    if df_most_frequent[c].dtype=='float16' or  df_most_frequent[c].dtype=='float32' or  df_most_frequent[c].dtype=='float64':\n        df_most_frequent[c].fillna(df[c].mean())\n\n#fill in -999 for categoricals\ndf_most_frequent = df_most_frequent.fillna(-999)\n# Label Encoding\nfor f in df_most_frequent.columns:\n    if df_most_frequent[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(df_most_frequent[f].values))\n        df_most_frequent[f] = lbl.transform(list(df_most_frequent[f].values))\n        \nprint('Labelling done.')","181b4e8d":"#Checking the Label Encoder (if it worked)\n\ndf_most_frequent.head()","a35f3e6d":"import seaborn as sbn\n\ncorrelation=df_most_frequent.corr()\nplt.figure(figsize=(15,15))\nsbn.heatmap(correlation,annot=True,cmap=plt.cm.RdPu);","0060e9cb":"from sklearn.tree import DecisionTreeClassifier, export_graphviz\nfrom graphviz import Source","57f2391e":"from sklearn.preprocessing import Normalizer\nfrom sklearn.model_selection import train_test_split","c56e95ee":"x = df_most_frequent.drop(['Index', 'Cause'], axis=1)\nx.fillna(999999, inplace=True)\ny = df_most_frequent['Cause']","dbe16805":"dt = DecisionTreeClassifier(max_depth=3)","afe04231":"dt.fit(x, y)","a1e7daf0":"dt_feat = pd.DataFrame(dt.feature_importances_, index=x.columns, columns=['feat_importance'])\ndt_feat.sort_values('feat_importance').tail(8).plot.barh(figsize=(14, 6), color='green')\nplt.show()","92e0a320":"from IPython.display import SVG\nos.environ[\"PATH\"] += os.pathsep + 'C:\/Program Files (x86)\/Graphviz2.38\/bin\/'\n\ngraph = Source(export_graphviz(dt, out_file=None, feature_names=x.columns, filled = True))\ndisplay(SVG(graph.pipe(format='svg')))","a009aff2":"x = df_most_frequent.drop(['Dynasty', 'Killer'], axis=1)\nx.fillna(999999, inplace=True)\ny = df_most_frequent['Killer']","8b924aeb":"dt = DecisionTreeClassifier(max_depth=3)","e247605e":"dt.fit(x, y)","1095b55a":"dt_feat = pd.DataFrame(dt.feature_importances_, index=x.columns, columns=['feat_importance'])\ndt_feat.sort_values('feat_importance').tail(8).plot.barh(figsize=(14, 6), color='red')\nplt.show()","98f1d533":"from IPython.display import SVG\nos.environ[\"PATH\"] += os.pathsep + 'C:\/Program Files (x86)\/Graphviz2.38\/bin\/'\n\ngraph = Source(export_graphviz(dt, out_file=None, feature_names=x.columns, filled = True))\ndisplay(SVG(graph.pipe(format='svg')))","057351b3":"#Who are the Gordians","8436682d":"#Caesar's cause of deaths: Assassination on the Top!","94470c4f":"#Livia Drusilla (Augustus Wife) - Birth58 BC - Death029, Rome, Italy\n\n\"Livia, as history most often knows her, was the wife of Augustus for over fifty years, from 38 BC until his death in AD 14 , an astonishingly long time in view of life expectancy in ancient Rome. Although certainty about their inner lives and proof for what we would consider a loving relationship is necessarily lost to us, we can infer genuine loyalty and mutual respect between the two. They remained married despite the fact that she bore him no child. Livia's position as first lady of the imperial household, her own family connections, her confident personality and her private wealth allowed her to exercise power both through Augustus and on her own, during his lifetime and afterward. All the Julio-Claudian emperors were her direct descendants: Tiberius was her son; Gaius (Caligula) , her great-grandson; Claudius , her grandson; Nero , her great-great-grandson.\"\n\nIf someone has been married for 50 years, very likely she didn't killed him after so long time.\n\n\nhttp:\/\/homepages.rpi.edu\/~holmes\/Hobbies\/Genealogy2\/ps31\/ps31_500.htm","c9a747f0":"#Checking if it worked.","8fb5429e":"#Above, I tried to split Reign Start\/Reign End columns. Though I was Not well succeeded since it remains together, as seen below.  I tried to split with the whole number T00:53:28+00:53,  and all combinations of that. Letter T (upper and lower case),T00,  spaces before and after, just double ticks, single ticks, dash. \n\n#No Split at all.","ba75a6b9":"#Constantine the Great\n\n\"Constantine I (Latin: Flavius Valerius Constantinus; Greek: \u039a\u03c9\u03bd\u03c3\u03c4\u03b1\u03bd\u03c4\u1fd6\u03bd\u03bf\u03c2, translit. K\u014dnstant\u00eenos; 27 February c.\u2009272 \u2013 22 May 337), also known as Constantine the Great, was Roman emperor from 306 to 337. Born in Naissus, Dacia Mediterranea (now Ni\u0161, Serbia), he was the son of Flavius Constantius (a Roman army officer born in Dacia Ripensis who had been one of the four emperors of the Tetrarchy). His mother, Helena, was Greek and of low birth. Constantine served with distinction under the Roman emperors Diocletian and Galerius. He began by campaigning in the eastern provinces (against barbarians, and the Persians) before he was recalled in the west (in 305 AD) to fight along side his father in Britain. After his father's death in 306, Constantine became emperor; he was acclaimed by his army at Eboracum (York, England). He emerged victorious in the civil wars against emperors Maxentius and Licinius to become the sole ruler of the Roman Empire by 324.\"\n\nhttps:\/\/en.wikipedia.org\/wiki\/Constantine_the_Great","89de7e56":"#That's why Gaius Julius Caesar was killed (of course not). He was never an Emperor though he set Rome on a path of transformation from republic to empire. All the Senators (Kagglers) longed to be a Caesar (GM) though most of them wanted to kill \"The Caesar\". That's me re-writing history in a non-inferential approach.\n\n#It's almost the \"kill the father\u201d rite of passage. The man (GM) they worship and long to be.\n\n#If anybody has any doubt, just look at the most voted Discussion Topics.\n\n\"How to get more votes\",\"Reach any position in a few months\". \"Who are #number one\". \"Congrats to the new GM.\"\n\nTopics like these are just NICE. Attracts votes but it's NOT Data Science or contributes to the professional growth. Only for the community and the Platform since everything is content. Besides, we can take one or two for our community. \n\n#What matters is your legacy,how you'll be remembered when you're gone. It's Internet times. Very likely, you'll be forgotten in less than 4 months. Sorry to disappoint you. \n\n#Or maybe your \"immortality\" (how you will be remembered) is conditioned to your kindness, how did you treat your friends or even those that you don't know (KagglerDoes).\n\n#And that's the point that my Code is killed: Hail Caesar! Hail Kagglerivs!","18f5f463":"![](https:\/\/images.slideplayer.com\/42\/11486720\/slides\/slide_4.jpg)slideplayer.com","7ce171ee":"#Let's Order to read the Emperors ","fc5c7304":"#Augustus Reign: 16 January 27 BC \u2013 19 August AD 14\n\n0026-01-16T00:53:28+00:53 (Reign Start)  What means T00:53:28+00:53 (time?) Equal for all rows (Emperors)","580281d2":"#Probably, the only thing that is going to die here is my Python code and Data Science.","700077cf":"#Agrippina (Claudius wife)\n\n\"After marrying his niece Agrippina, Claudius adopted her son Lucius Domitius Ahenobarbus (later the emperor Nero) to satisfy Agrippina's lust for power, much to the disadvantage of his own son Britannicus. Roman tradition is unanimous: Claudius was poisoned by Agrippina on October 13, 54 CE, though the details differ.\"\n\nhttps:\/\/en.wikipedia.org\/wiki\/Claudius#:~:text=Claudius%20was%20constantly%20forced%20to,own%20wife%2C%20Agrippina%20the%20Younger.","63f67d08":"#Other Emperor will kill you Caesar. That's almost like those plays for kids in which the vilain is hidden but all the spectators\/kids can see him. And Children all scream.  He\/She (women're always a witch\/bitch): She's there, pointing fingers. \n\n#Machine learning to Predict who will kill the Emperor??? \n\nThat's so obvious. Someone that want his position, wants to kill him. Even a child could predict that Duh!","846b68b3":"#Group by to check to work with the features you choose.","77dc16cb":"#Drop without Guilty because they are empty. Like some Emperors Minds. Besides, I got an imputation error if I didn't drop them all. ","a2525721":"#Changing parameters (columns)","64a739c8":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQmKlcwwNFoEHQXzrg_v80KKzPsEtuT-J-YWQ&usqp=CAU)cafepress.com![images.jpg](attachment:bb9661e3-87f2-4bc4-a583-fb4818a6e4c6.jpg)","fdd8d4bb":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQIDBW-9LUhV0azf47JvTPufAUpftAXsLWirQ&usqp=CAU)9gag.com","c4b2fe86":"#I wanted to work with BC dates, I could (try to learn) apply Astropy. Or dateutil. Since I couldn't split that above, I couldn't make anything more with those dates.\n\nDatetime library only handles dates from 1 AD. I couldn't perform the split. Therefore: No BC or AD. ","df70c2fc":"#Gordians 32,4% are the majority of the Dynasties. I've never heard about them. Probably, I missed that class\/lesson.","0f1d2ae6":"#Emperors killed by their wives?  How many Emperors killed their wifes? What's the 2nd statistics?","fefb3f13":"#Some Emperors were born in Romuliana. They were not Romulans from Star Trek. By the way, there were no Vulcans too.   ","86137053":"#Decision Trees are huge inside the editor but outside in the viewer they are extremely tiny. I've no clue about that.","a5ce6f6a":"![](https:\/\/www.inspiringquotes.us\/image\/author\/Emperor-Constantine-Quotes-Quotesgram.jpg?ezimgfmt=rs:382x299\/rscb4\/ng:webp\/ngcb4)inspiringquotes.us","071c0c71":"#ValueError: Columns must be same length as key  So I had to try to put spaces."}}