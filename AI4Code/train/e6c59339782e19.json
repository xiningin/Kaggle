{"cell_type":{"ac758e88":"code","91d50f35":"code","218a818a":"code","9b60f3d1":"code","4795d30a":"code","cb50015c":"code","e5d90727":"code","8a6b5318":"code","1aeb1f35":"code","58b72c08":"code","fe76e510":"code","3d185553":"code","4976c2c4":"code","16f3eb65":"code","f9f308b4":"code","462a4a75":"code","77869267":"code","9fd31c31":"code","abd6df71":"code","5112c8cb":"code","029ce419":"code","33a83d46":"code","cc1a24ad":"code","56e79510":"code","785244c6":"code","b8c19121":"code","db265e1a":"markdown","a55582ce":"markdown","d64166b7":"markdown","d85cc30d":"markdown","0aa67376":"markdown","dccb1632":"markdown","789dc923":"markdown","478f0999":"markdown"},"source":{"ac758e88":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","91d50f35":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression, Ridge,Lasso","218a818a":"data=pd.read_csv('..\/input\/car-price-prediction\/CarPrice_Assignment.csv')","9b60f3d1":"data.head()","4795d30a":"data=data.drop(['car_ID','symboling','CarName'],axis=1)","cb50015c":"data.describe()","e5d90727":"data.isnull().sum()","8a6b5318":"data_cat= data.select_dtypes(include='object')","1aeb1f35":"data_cat","58b72c08":"data_cat_dummy=pd.get_dummies(data_cat,drop_first=True)","fe76e510":"data_cat_dummy","3d185553":"data_num=data.select_dtypes(exclude='object')","4976c2c4":"data_final= data_num.join(data_cat_dummy)\ndata_final","16f3eb65":"X= data_final.drop('price',axis=1)\ny=data_final['price']","f9f308b4":"for i in X.columns:\n    plt.scatter(X[i],y)\n    plt.title(\"price and \"+ i)\n    plt.show()","462a4a75":"from sklearn.feature_selection import f_regression","77869267":"summary = pd.DataFrame(data=X.columns,columns=['Features'])\nsummary['p_values']=f_regression(X,y)[1].round(3)","9fd31c31":"X=X.drop(summary[summary['p_values']>0.005]['Features'],axis=1)","abd6df71":"data_final.corr()['price'][['enginesize','peakrpm','carbody_sedan','carbody_hatchback']]","5112c8cb":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=25)","029ce419":"reg=LinearRegression()\nreg.fit(x_train,y_train)\nreg.coef_","33a83d46":"regsummary=pd.DataFrame(data=X.columns,columns=['features'])","cc1a24ad":"reg.score(x_test,y_test)","56e79510":"alpha=[10,1,0.1,0.0001,1e-8]\nrid_score=[]\nlas_score=[]\nfor i in alpha:\n    rid=Ridge(alpha=i)\n    las=Lasso(alpha=i)\n    rid.fit(x_train,y_train)\n    las.fit(x_train,y_train)\n    rid_score.append(rid.score(x_train,y_train))\n    las_score.append(las.score(x_train,y_train))","785244c6":"rid_score,np.mean(rid_score)","b8c19121":"las_score,np.mean(las_score)","db265e1a":"Drop unimportant column","a55582ce":"### From the regression coefficient and plots\n#### price increases with engine size\n#### car(hatchback) causes the price to reduce\n### From feature selection and plots\n#### car(sedan) has no effect on the price\n#### peakrpm has no effect on the price","d64166b7":"## **Dealing with categorical variables**","d85cc30d":"### Ridge regression has a mean R squared of 0.90\n### Lasso regression has a mean R squared of 0.907","0aa67376":"#### Relevant features are those with p-value = 0.000 which includes 'enginesize'","dccb1632":"### Selecting relevant columns with feature selection","789dc923":"### Linear Model has an R squared value of 0.85","478f0999":"Check for missing and null values"}}