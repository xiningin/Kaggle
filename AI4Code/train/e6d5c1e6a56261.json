{"cell_type":{"ace8d04e":"code","a8e66ecb":"code","39943abe":"code","9ef6c922":"code","ffbc5e32":"code","ef1cddf5":"code","3c1e11ec":"code","e74d8115":"code","6ae345c5":"code","68abcc28":"code","83f0c683":"code","8197b5a9":"code","f5673bc7":"code","df30ff3a":"code","182911b8":"code","c3be07d2":"code","45f3f985":"code","d3cb4771":"code","555af837":"code","03bdb026":"code","c98fd2eb":"code","a73a6d1e":"code","da01eac5":"code","4cb57d55":"code","b9bf3714":"code","3c30c84b":"code","6e89c419":"code","76c841fa":"code","cde25253":"code","8617de87":"code","71befdae":"code","5dd51283":"code","5962068f":"code","04452ee5":"code","00d5d31b":"code","64841bcd":"code","4003712c":"code","e9522e27":"code","ec44f823":"code","c20fc39d":"code","0123633c":"code","d527b638":"code","9b84f2a6":"code","e866dca5":"code","21620f32":"code","f5200e91":"code","28b84605":"code","6b5e3491":"code","903d3fa7":"code","db10b059":"code","7b6adbf9":"markdown","4cf23cd3":"markdown","5ed74d83":"markdown","df58e6c6":"markdown","c106ce86":"markdown","9dd2938a":"markdown","8d37d3a5":"markdown","418e21f3":"markdown","6e978ee5":"markdown","41bc04c4":"markdown"},"source":{"ace8d04e":"%%capture\n!pip install wandb --upgrade","a8e66ecb":"import os\nimport numpy as np\nimport pandas as pd\nfrom tqdm.notebook import tqdm\n\nimport matplotlib.pyplot as plt\n\nimport wandb\nfrom kaggle_secrets import UserSecretsClient\n\nuser_secrets = UserSecretsClient()\nwandb_api = user_secrets.get_secret(\"wandb_api\")\n\nwandb.login(key=wandb_api)","39943abe":"# download RAW dataset csv\nrun = wandb.init(project='hpa', job_type='consume_raw')\nartifact = run.use_artifact('ayush-thakur\/hpa\/raw:v0', type='dataset')\nartifact_dir = artifact.download()\nrun.finish()","9ef6c922":"raw_df = pd.read_csv(artifact_dir+'\/'+'train.csv')\nraw_df.head()","ffbc5e32":"# download RAW dataset csv\nrun = wandb.init(project='hpa', job_type='consume_single_label_dataset')\nartifact = run.use_artifact('ayush-thakur\/hpa\/single_label_cell_level:v0', type='dataset')\nartifact_dir = artifact.download()\nrun.finish()","ef1cddf5":"!ls .\/artifacts\/single_label_cell_level:v0","3c1e11ec":"raw_single_label_df = pd.read_csv(artifact_dir+'\/'+'single_label_cell_level.csv')\nraw_single_label_df.head()","e74d8115":"# We can either use protein or rgb directory.\nsingle_label_cell_level_path = '..\/input\/hpa-single-label-cell-level-dataset\/single-label-cell-level\/rgb'\nprint(len(os.listdir(single_label_cell_level_path)))\nprint(len(raw_single_label_df))","6ae345c5":"file_names = os.listdir(single_label_cell_level_path)\nfile_names[0]","68abcc28":"# Ref: https:\/\/www.kaggle.com\/divyanshuusingh\/eda-image-segmentation\nlabel_names= {\n0: \"Nucleoplasm\",\n1: \"Nuclear membrane\",\n2: \"Nucleoli\",\n3: \"Nucleoli fibrillar center\",\n4: \"Nuclear speckles\",\n5: \"Nuclear bodies\",\n6: \"Endoplasmic reticulum\",\n7: \"Golgi apparatus\",\n8: \"Intermediate filaments\",\n9: \"Actin filaments\",\n10: \"Microtubules\",\n11: \"Mitotic spindle\",\n12: \"Centrosome\",\n13: \"Plasma membrane\",\n14: \"Mitochondria\",\n15: \"Aggresome\",\n16: \"Cytosol\",\n17: \"Vesicles and punctate cytosolic patterns\",\n18: \"Negative\"\n}\n\nlabels, counts = np.unique(raw_single_label_df.Label.values, return_counts=True)\nprint(f'The unique labels are: {labels} and there values are: {counts}')\n\nplt.figure(figsize=(15,5))\nplt.bar(labels, counts)\n\nfor index, value in enumerate(counts):\n    plt.text(index-0.25, value, str(value), fontdict=dict(fontsize=10))\n\nplt.xticks(np.arange(len(labels)), labels=label_names.values(), rotation=85)\nplt.show()","83f0c683":"run = wandb.init(project='hpa', job_type='consume_public_hpa_dataset')\nartifact = run.use_artifact('ayush-thakur\/hpa\/hpa_public_data:v1', type='dataset')\nartifact_dir = artifact.download()\nrun.finish()","8197b5a9":"raw_public_df = pd.read_csv(artifact_dir+'\/public_hpa.csv')\nraw_public_df.head()","f5673bc7":"run = wandb.init(project='hpa', job_type='consume_public_hpa_dataset')\nartifact = run.use_artifact('ayush-thakur\/hpa\/negative:v0', type='dataset')\nartifact_dir = artifact.download()\nrun.finish()","df30ff3a":"negative_df = pd.read_csv(artifact_dir+'\/pubic_negative.csv')\nnegative_df['Image'] = negative_df['Image'].apply(lambda id: id.split('\/')[-1])\nnegative_df.head()","182911b8":"file_names = os.listdir('..\/input\/singlelabelpublicnegative\/protein\/')\n\nnegative_label_df = pd.DataFrame(columns = raw_df.columns)\n\nfor i, filename in tqdm(enumerate(file_names)):\n    img_id = '_'.join(filename.split('.')[0].split('_')[:-1])\n    label = int(negative_df.loc[negative_df.Image == img_id].Label_idx.values[0])\n    negative_label_df.loc[i] = [filename, label]","c3be07d2":"negative_label_df.head()\nnegative_label_df.to_csv('clean_public_negative.csv')","45f3f985":"run = wandb.init(project='hpa', job_type='public_negative')\nartifact_ = run.use_artifact('ayush-thakur\/hpa\/negative:v0', type='dataset')\nartifact = wandb.Artifact('negative', type='dataset')\nartifact.add_file('clean_public_negative.csv')\nrun.log_artifact(artifact)\nrun.join()","d3cb4771":"run = wandb.init(project='hpa', job_type='consume_public_hpa_dataset')\nartifact = run.use_artifact('ayush-thakur\/hpa\/aggresome:v0', type='dataset')\nartifact_dir = artifact.download()\nrun.finish()","555af837":"aggresome_df = pd.read_csv(artifact_dir+'\/pubic_aggresome.csv')\naggresome_df['Image'] = aggresome_df['Image'].apply(lambda id: id.split('\/')[-1])\naggresome_df.head()","03bdb026":"file_names = os.listdir('..\/input\/singlelabelpublicaggresome\/rgb')\n\ntmp_df = pd.DataFrame(columns = raw_df.columns)\n\nfor i, filename in tqdm(enumerate(file_names)):\n    img_id = '_'.join(filename.split('.')[0].split('_')[:-1])\n    label = int(aggresome_df.loc[aggresome_df.Image == img_id].Label_idx.values[0])\n    tmp_df.loc[i] = [filename, label]","c98fd2eb":"tmp_df.head()\ntmp_df.to_csv('clean_public_aggresome.csv')","a73a6d1e":"run = wandb.init(project='hpa', job_type='public_aggresome')\nartifact = run.use_artifact('ayush-thakur\/hpa\/aggresome:v0', type='dataset')\nartifact = wandb.Artifact('aggresome', type='dataset')\nartifact.add_file('clean_public_aggresome.csv')\nrun.log_artifact(artifact)\nrun.join()","da01eac5":"run = wandb.init(project='hpa', job_type='consume_public_hpa_dataset')\nartifact = run.use_artifact('ayush-thakur\/hpa\/nuclear_membrane:v0', type='dataset')\nartifact_dir = artifact.download()\nrun.finish()","4cb57d55":"!ls {artifact_dir}","b9bf3714":"public_df = pd.read_csv(artifact_dir+'\/pubic_nuclear_membrane.csv')\npublic_df['Image'] = public_df['Image'].apply(lambda id: id.split('\/')[-1])\npublic_df.head()","3c30c84b":"file_names = os.listdir('..\/input\/singlelabelpublicnuclearmembrane\/rgb')\n\ntmp_df = pd.DataFrame(columns = raw_df.columns)\n\nfor i, filename in tqdm(enumerate(file_names)):\n    img_id = '_'.join(filename.split('.')[0].split('_')[:-1])\n    label = int(public_df.loc[public_df.Image == img_id].Label_idx.values[0])\n    tmp_df.loc[i] = [filename, label]","6e89c419":"tmp_df.to_csv('clean_pubic_nuclear_membrane.csv')\ntmp_df.head()","76c841fa":"run = wandb.init(project='hpa', job_type='public_nuclear_membrane')\nartifact = run.use_artifact('ayush-thakur\/hpa\/nuclear_membrane:v0', type='dataset')\nartifact = wandb.Artifact('nuclear_membrane', type='dataset')\nartifact.add_file('clean_pubic_nuclear_membrane.csv')\nrun.log_artifact(artifact)\nrun.join()","cde25253":"run = wandb.init(project='hpa', job_type='consume_public_hpa_dataset')\nartifact = run.use_artifact('ayush-thakur\/hpa\/mitotic_spindle:v0', type='dataset')\nartifact_dir = artifact.download()\nrun.finish()","8617de87":"!ls {artifact_dir}","71befdae":"public_df = pd.read_csv(artifact_dir+'\/pubic_mitotic_spindle.csv')\npublic_df['Image'] = public_df['Image'].apply(lambda id: id.split('\/')[-1])\npublic_df.head()","5dd51283":"file_names = os.listdir('..\/input\/singlelabelpublicmitoticspindle\/protein')\n\ntmp_df = pd.DataFrame(columns = raw_df.columns)\n\nfor i, filename in tqdm(enumerate(file_names)):\n    img_id = '_'.join(filename.split('.')[0].split('_')[:-1])\n    try:\n        label = int(public_df.loc[public_df.Image == img_id].Label_idx.values[0])\n        tmp_df.loc[i] = [filename, label]\n    except:\n        print(filename)","5962068f":"tmp_df.to_csv('clean_pubic_mitotic_spindle.csv')\ntmp_df.head()","04452ee5":"run = wandb.init(project='hpa', job_type='public_mitotic_spindle')\nartifact = run.use_artifact('ayush-thakur\/hpa\/mitotic_spindle:v0', type='dataset')\nartifact = wandb.Artifact('mitotic_spindle', type='dataset')\nartifact.add_file('clean_pubic_mitotic_spindle.csv')\nrun.log_artifact(artifact)\nrun.join()","00d5d31b":"run = wandb.init(project='hpa', job_type='consume_public_hpa_dataset')\nartifact = run.use_artifact('ayush-thakur\/hpa\/actin_filaments:v0', type='dataset')\nartifact_dir = artifact.download()\nrun.finish()","64841bcd":"!ls {artifact_dir}","4003712c":"public_df = pd.read_csv(artifact_dir+'\/pubic_actin_filaments.csv')\npublic_df['Image'] = public_df['Image'].apply(lambda id: id.split('\/')[-1])\npublic_df.head()","e9522e27":"file_names = os.listdir('..\/input\/singlelabelpublicactinfilaments\/rgb')\n\ntmp_df = pd.DataFrame(columns = raw_df.columns)\n\nfor i, filename in tqdm(enumerate(file_names)):\n    img_id = '_'.join(filename.split('.')[0].split('_')[:-1])\n    try:\n        label = int(public_df.loc[public_df.Image == img_id].Label_idx.values[0])\n        tmp_df.loc[i] = [filename, label]\n    except:\n        print(filename)","ec44f823":"tmp_df.to_csv('clean_pubic_actin_filaments.csv')\ntmp_df.head()","c20fc39d":"run = wandb.init(project='hpa', job_type='public_actin_filaments')\nartifact = run.use_artifact('ayush-thakur\/hpa\/actin_filaments:v0', type='dataset')\nartifact = wandb.Artifact('actin_filaments', type='dataset')\nartifact.add_file('clean_pubic_actin_filaments.csv')\nrun.log_artifact(artifact)\nrun.join()","0123633c":"raw_df.head()","d527b638":"raw_single_label_df.head()","9b84f2a6":"nuclear_membrane_df = pd.read_csv('.\/clean_pubic_nuclear_membrane.csv')\nmitotic_spindle_df = pd.read_csv('.\/clean_pubic_mitotic_spindle.csv')\nactin_fragment_df = pd.read_csv('.\/clean_pubic_actin_filaments.csv')\naggresome_df = pd.read_csv('.\/clean_public_aggresome.csv')\nnegative_df = pd.read_csv('.\/clean_public_negative.csv')","e866dca5":"negative_df.head()","21620f32":"dfs = [raw_single_label_df, \n       nuclear_membrane_df, \n       mitotic_spindle_df, \n       actin_fragment_df,\n       aggresome_df,\n       negative_df]","f5200e91":"single_label_cell_level_df = pd.concat(dfs, ignore_index=True)\nsingle_label_cell_level_df = single_label_cell_level_df[['ID', 'Label']]\nsingle_label_cell_level_df.head(20)","28b84605":"single_label_cell_level_df = single_label_cell_level_df.sample(frac=1).reset_index(drop=True)\nsingle_label_cell_level_df.head(20)","6b5e3491":"# Ref: https:\/\/www.kaggle.com\/divyanshuusingh\/eda-image-segmentation\nlabel_names= {\n0: \"Nucleoplasm\",\n1: \"Nuclear membrane\",\n2: \"Nucleoli\",\n3: \"Nucleoli fibrillar center\",\n4: \"Nuclear speckles\",\n5: \"Nuclear bodies\",\n6: \"Endoplasmic reticulum\",\n7: \"Golgi apparatus\",\n8: \"Intermediate filaments\",\n9: \"Actin filaments\",\n10: \"Microtubules\",\n11: \"Mitotic spindle\",\n12: \"Centrosome\",\n13: \"Plasma membrane\",\n14: \"Mitochondria\",\n15: \"Aggresome\",\n16: \"Cytosol\",\n17: \"Vesicles and punctate cytosolic patterns\",\n18: \"Negative\"\n}\n\nlabels, counts = np.unique(single_label_cell_level_df.Label.values, return_counts=True)\nprint(f'The unique labels are: {labels} and there values are: {counts}')\n\nplt.figure(figsize=(15,5))\nplt.bar(labels, counts)\n\nfor index, value in enumerate(counts):\n    plt.text(index-0.25, value, str(value), fontdict=dict(fontsize=10))\n\nplt.xticks(np.arange(len(labels)), labels=label_names.values(), rotation=85)\nplt.show()\n\nlabels, counts = np.unique(raw_single_label_df.Label.values, return_counts=True)\nprint(f'The unique labels are: {labels} and there values are: {counts}')\n\nplt.figure(figsize=(15,5))\nplt.bar(labels, counts)\n\nfor index, value in enumerate(counts):\n    plt.text(index-0.25, value, str(value), fontdict=dict(fontsize=10))\n\nplt.xticks(np.arange(len(labels)), labels=label_names.values(), rotation=85)\nplt.show()","903d3fa7":"single_label_cell_level_df.to_csv('single_label_cell_level_full_dataset.csv')","db10b059":"run = wandb.init(project='hpa', job_type='slcl_full_dataset_creation')\n\n_ = run.use_artifact('ayush-thakur\/hpa\/single_label_cell_level:v0', type='dataset')\n_ = run.use_artifact('ayush-thakur\/hpa\/negative:v1', type='dataset')\n_ = run.use_artifact('ayush-thakur\/hpa\/aggresome:v1', type='dataset')\n_ = run.use_artifact('ayush-thakur\/hpa\/actin_filaments:v1', type='dataset')\n_ = run.use_artifact('ayush-thakur\/hpa\/mitotic_spindle:v1', type='dataset')\n_ = run.use_artifact('ayush-thakur\/hpa\/nuclear_membrane:v1', type='dataset')\n\nartifact = wandb.Artifact('slcl_full_dataset', type='dataset')\nartifact.add_file('single_label_cell_level_full_dataset.csv')\nrun.log_artifact(artifact)\nrun.join()","7b6adbf9":"### Aggresome","4cf23cd3":"### Raw CSV","5ed74d83":"# Merge All The Data (HuHa)","df58e6c6":"# Raw HPA Dataset","c106ce86":"### Mitotic Spindle","9dd2938a":"### Actin Filament","8d37d3a5":"### Nucleur Membrane","418e21f3":"# Download Extra Pubic Data ","6e978ee5":"### Negative Class","41bc04c4":"# Raw Single Label Cell Level Dataset"}}