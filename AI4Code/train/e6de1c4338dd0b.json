{"cell_type":{"9ee43f2e":"code","054d4362":"code","aaf4409b":"code","9e3c813f":"code","35e36724":"code","463ce442":"code","7858f127":"code","c573a4d2":"code","ce6bfcc0":"code","202b0e6a":"code","d71e9c5a":"code","670abfea":"code","51340b1c":"code","0108fa8c":"code","cf0bc47f":"code","97649367":"markdown","3dd7b8a3":"markdown","9bdf4217":"markdown","64bba2fb":"markdown","7e15a0f8":"markdown"},"source":{"9ee43f2e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","054d4362":"sample_submission_csv = pd.read_csv(\"..\/input\/sample_submission.csv\")\nsample_submission_csv.head()","aaf4409b":"test_csv = pd.read_csv(\"..\/input\/test.csv\")\ntest_csv.head()","9e3c813f":"train_csv = pd.read_csv(\"..\/input\/train.csv\")\ntrain_csv.head()","35e36724":"print(\"There are {} trian images and {} test images\".format(len(train_csv.file_name.values), len(test_csv.file_name.values)))","463ce442":"dictionary = {0:'empty',\n              1:'deer',\n              2:'moose',\n              3:'squirrel',\n              4:'rodent',\n              5:'small_mammal',\n              6:'elk',\n              7:'pronghorn_antelope',\n              8:'rabbit',\n              9:'bighorn_sheep',\n              10:'fox',\n              11:'coyote',\n              12:'black_bear',\n              13:'raccoon',\n              14:'skunk',\n              15:'wolf',\n              16:'bobcat',\n              17:'cat',\n              18:'dog',\n              19:'opossum',\n              20:'bison',\n              21:'mountrain_goat',\n              22:'mountain_lion',\n             }\ndictionary_reverse = dict((i,j) for j,i in dictionary.items())\n\ntrain_ids = set(train_csv.category_id.values)\nprint(\"There are the following classes: {} in train\".format(train_ids))","7858f127":"train_ids = set(dictionary[item] for item in train_ids)\nprint(\"There are the following classes: {} in train\".format(train_ids))","c573a4d2":"print(\"There are some classes missing: {}\".format(set(dictionary.values())-train_ids))","ce6bfcc0":"id_table = pd.read_csv(\"..\/input\/train.csv\")\n\nappearance_dict = dict()\nfor i in range(23):\n    appearance = len([val for val in id_table.category_id.values if val == i])\n    appearance_dict[i] = appearance\n    \nprint(appearance_dict)","202b0e6a":"import matplotlib.pyplot as plt\n\ndef plot_bar_x(index, values, x_label, y_label, title, y_lim=None):\n    plt.bar(index, values)\n    plt.xlabel(x_label, fontsize=5)\n    plt.ylabel(y_label, fontsize=5)\n    plt.xticks(range(len(index)), index, fontsize=5, rotation=90)\n    plt.title(title)\n    \n    if y_lim != None:\n        plt.ylim(top=y_lim)\n    \n    plt.show()","d71e9c5a":"plot_bar_x(dictionary.values(), appearance_dict.values(), \"Names\", \"Frequency\", \"Data Distribution Betwen Classes\")","670abfea":"plot_bar_x(dictionary.values(), appearance_dict.values(), \"Names\", \"Frequency\", \"Data Distribution Betwen Classes Without Class 0\", y_lim=15000)","51340b1c":"print(\"There are only one widths: {}\".format(set(train_csv.width.values)))","0108fa8c":"print(\"But there are three heights: {}\".format(set(train_csv.height.values)))\n\nheight_dict = dict()\nfor i in set(train_csv.height.values):\n    height = len([val for val in id_table.height.values if val == i])\n    height_dict[i] = height\n    \nprint(\"Here is the distribution: {}\".format(height_dict))","cf0bc47f":"plot_bar_x(['768','747','748'], height_dict.values(), \"Hights\", \"Frequency\", \"Data Distribution of Heights\")","97649367":"# Heights","3dd7b8a3":"# Classes","9bdf4217":"# A Brief Data Exploration\n\nSummary:\n1. There are 23 classes but about 9 of them are not in the training set. \n2. Highly unbalanced data","64bba2fb":"## The data we obtain","7e15a0f8":"## The Structure of the Public LB\nF1 Score in each class: [0.089, ...]\n"}}