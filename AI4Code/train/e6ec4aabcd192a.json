{"cell_type":{"c88f29cd":"code","3fc8e3b0":"code","0fafbce7":"code","f9402ca8":"code","9a8f8100":"code","521896b7":"code","78f56ce4":"code","5836c716":"code","7c958cb8":"markdown","d0049160":"markdown","7fc6d0bd":"markdown","fcd099ab":"markdown","1ac96d1d":"markdown","1714990e":"markdown","ed681496":"markdown","a3eac35c":"markdown","1b60b146":"markdown","c373b79a":"markdown","565ca6aa":"markdown","e1a64e75":"markdown"},"source":{"c88f29cd":"import pandas as pd\nfrom learntools.advanced_pandas.grouping_and_sorting import *\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)","3fc8e3b0":"check_q1(pd.DataFrame())","0fafbce7":"# Your code here\n# common_wine_reviewers = _______\n# check_q1(common_wine_reviewers)\n# reviews.head()\nres = reviews.copy()\ndf = res.groupby('taster_twitter_handle')['taster_twitter_handle'].count()\nprint(df)\nprint(check_q1(df))","f9402ca8":"# Your code here\n# best_wine = ______\n# check_q2(best_wine)\nres = reviews.copy()\ndf = res.groupby('price')['points'].max().sort_index()\nprint(df)\nprint(check_q2(df))","9a8f8100":"# Your code here\n# wine_price_extremes = _____\n# check_q3(wine_price_extremes)\nres = reviews.copy()\ndf = res.groupby('variety')['price'].agg([min, max])\nprint(df)\nprint(check_q3(df))","521896b7":"# Your code here\n# reviewer_mean_ratings = _____\n# check_q4(reviewer_mean_ratings)\nres = reviews.copy()\ndf = res.groupby('taster_name')['points'].mean()\nprint(df)\nprint(check_q4(df))","78f56ce4":"# Your code here\n# wine_price_range = ____\n# check_q5(wine_price_range)\nres = reviews.copy()\ndf = res.groupby('variety')['price'].agg(['min','max']).sort_values(by=['min', 'max'], ascending=False)\nprint(df)\nprint(check_q5(df))","5836c716":"# Your code here\n# country_variety_pairs = _____\n# check_q6(country_variety_pairs)\nres = reviews.copy()\nres['n'] = 0\ndf = res.groupby(['country', 'variety']).n.count().sort_values(ascending=False)\nprint(df)\nprint(check_q6(df))","7c958cb8":"# Set Up\nRun the code cell below to load the data before running the exercises.","d0049160":"**Exercise 5**: What are the most expensive wine varieties? Create a `DataFrame` whose index is wine varieties and whose values are columns with the `min` and the `max` price of wines of this variety. Sort in descending order based on `min` first, `max` second.","7fc6d0bd":"# Exercises","fcd099ab":"\n# Keep Going\n\nMove on to [**Data types and missing data workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/598826).\n\n___\nThis is part of the [*Learn Pandas*](https:\/\/www.kaggle.com\/learn\/pandas) series.","1ac96d1d":"**Exercise 3**: What are the minimum and maximum prices for each `variety` of wine? Create a `DataFrame` whose index is the `variety` category from the dataset and whose values are the `min` and `max` values thereof.","1714990e":"If you get stuck, **use the `answer_qN` function to see the code with the correct answer.**\n\nFor the first set of questions, running the `check_qN` on the correct answer returns `True`.\nFor the second set of questions, using this function to check a correct answer will present an informative graph!","ed681496":"The rest of the exercises are visual.\n\n**Exercise 4**: Are there significant differences in the average scores assigned by the various reviewers? Create a `Series` whose index is reviewers and whose values is the average review score given out by that reviewer. Hint: you will need the `taster_name` and `points` columns.","a3eac35c":"**Exercise 6**: What combination of countries and varieties are most common? Create a `Series` whose index is a `MultiIndex`of `{country, variety}` pairs. For example, a pinot noir produced in the US should map to `{\"US\", \"Pinot Noir\"}`. Sort the values in the `Series` in descending order based on wine count.\n\nHint: first run `reviews['n'] = 0`. Then `groupby` the dataset and run something on the column `n`. You won't need `reset_index`.","1b60b146":"# Checking Your Answers\n\n**Check your answers in each exercise using the  `check_qN` function** (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","c373b79a":"# Introduction\nMaps allow us to transform data in a `DataFrame` or `Series` one value at a time for an entire column. However, often we want to group our data, and then do something specific to the group the data is in. We do this with the `groupby` operation.\n\nIn these exercises we'll apply groupwise analysis to our dataset.\n\n# Relevant Resources\n- [**Grouping Reference and Examples**](https:\/\/www.kaggle.com\/residentmario\/grouping-and-sorting-reference).  \n- [Pandas cheat sheet](https:\/\/github.com\/pandas-dev\/pandas\/blob\/master\/doc\/cheatsheet\/Pandas_Cheat_Sheet.pdf)","565ca6aa":"**Exercise 1**: Who are the most common wine reviewers in the dataset? Create a `Series` whose index is the `taster_twitter_handle` category from the dataset, and whose values count how many reviews each person wrote.","e1a64e75":"**Exercise 2**: What is the best wine I can buy for a given amount of money? Create a `Series` whose index is wine prices and whose values is the maximum number of points a wine costing that much was given in a review. Sort the valeus by price, ascending (so that `4.0` dollars is at the top and `3300.0` dollars is at the bottom)."}}