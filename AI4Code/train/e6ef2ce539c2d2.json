{"cell_type":{"af89b527":"code","231e709e":"code","827ae16d":"code","8057aded":"code","5cbb8b2a":"code","945e9f86":"code","1d34e896":"code","b9967f85":"code","c802cf20":"code","0d5f8477":"code","aa691028":"code","5810a9c0":"code","74620f02":"markdown","9bb38f59":"markdown","8ea8dcb3":"markdown","c4a9aea3":"markdown","bf91fb54":"markdown","7b94484b":"markdown","a52b24e3":"markdown","185ab005":"markdown","877418a5":"markdown"},"source":{"af89b527":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","231e709e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndata = pd.read_csv(\"\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv\")\ndata","827ae16d":"data.drop(['Unnamed: 32',\"id\"], axis=1, inplace=True)\ndata[\"diagnosis\"] = [1 if row == 'M' else 0 for row in data['diagnosis']]\ny = data[\"diagnosis\"].values\ndata.drop('diagnosis',axis=1, inplace=True)","8057aded":"data.describe()","5cbb8b2a":"plt.figure(figsize=(20,20))\nsns.heatmap(data.corr(), cmap=\"YlGnBu\", annot=True)","945e9f86":"norm_data = (data - np.min(data)) \/ (np.max(data) - np.min(data)).values","1d34e896":"norm_data.shape","b9967f85":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(norm_data, y, test_size=0.20, random_state=4)\n\nprint(\"x train: \",X_train.shape)\nprint(\"x test: \",X_test.shape)\nprint(\"y train: \",y_train.shape)\nprint(\"y test: \",y_test.shape)","c802cf20":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression(class_weight='balanced', max_iter=25)\nlr.fit(X_train, y_train)\nprint(lr.classes_)\nprint('Coefficient of the features in the decision function: ', lr.coef_)","0d5f8477":"predictions = lr.predict(X_test)","aa691028":"from sklearn.metrics import accuracy_score, roc_auc_score\naccuracy_score = accuracy_score(predictions, y_test)\nauc = roc_auc_score(y_test, predictions)\n\nprint('accuracy_score: {}  %'.format(accuracy_score*100))\nprint('auc: {}  %'.format(auc*100))","5810a9c0":"from sklearn.metrics import plot_confusion_matrix\nfig, ax = plt.subplots(figsize=(10,10))\nplot_confusion_matrix(lr, X_test,y_test, display_labels=lr.classes_, cmap=\"YlGnBu\", normalize='true', ax=ax)","74620f02":"# Cleaning data\n\nDropping non neccesary data and transforming target column into numeric binary classification.","9bb38f59":"# Displaying heatmap\n\nObserving correlation between features.","8ea8dcb3":"![Cancer_Awareness-2019_blog_v1.0_noText.jpg](attachment:Cancer_Awareness-2019_blog_v1.0_noText.jpg)\n\n\n# Predicting over Malignant and Benign Breast Cancer","c4a9aea3":"# Finding Best Score\n\nImporting accuracy_score and roc_auc_score functions from scikit-learn library.\n\nThe model has an accuracy of 96.5% on accuracy_score function and 97.5% on roc_auc_score function.","bf91fb54":"# Splitting data\n\nUsing scikit-learn function train_test_split to prepare data for training and future predictions.\n\nTrain = 80%\n\nTest = 20%","7b94484b":"# Normalizing data\n\nOrganize the data into logical groups, in such a way that each group describes a small part of the whole. Minimize the amount of duplicate data stored in a database.","a52b24e3":"# Checking some metrics","185ab005":"# Logistic Regression\n\nLogistic regression is a statistical model that in its basic form uses a logistic function to model a binary dependent variable, although many more complex extensions exist. In regression analysis, logistic regression (or logit regression) is estimating the parameters of a logistic model (a form of binary regression).\n\n","877418a5":"# Plotting Confusion Matrix\n\nThe diagonal elements represent the number of points for which the predicted label is equal to the true label, while off-diagonal elements are those that are mislabeled by the classifier. The higher the diagonal values of the confusion matrix the better, indicating many correct predictions.\n\n1 = Malignant Cancer,   0 = Benign Cancer\n\nTrue Positive: total number of predictions match the actual number of Malignant Breast Cancer.\n\nTrue Negative: 95% of predictions match the actual number of Benign Breast Cancer.\n\nFalse Positive: 5% of predictions don't match the actual number of Benign Breast Cancer.\n\nFalse Negative: No bad predictions on Malignant Breast Cancer."}}