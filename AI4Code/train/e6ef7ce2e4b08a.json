{"cell_type":{"489e1a58":"code","803ebeb5":"code","b1b0e489":"code","3e65188d":"code","7007572f":"code","53e27102":"code","990205f4":"code","d077f0f5":"code","ae550d12":"code","35c324b9":"code","b2dfe6ff":"code","e85e0c3a":"code","972c7004":"code","de9b91d8":"code","d6e3cb01":"code","f12e15a7":"code","4d0ab57e":"code","faaa02a7":"code","f558a886":"code","80d5722e":"code","1eff0493":"code","06bafcb6":"code","4ce1188f":"markdown","764c89cd":"markdown","8c80f301":"markdown","4a26e195":"markdown","7928c3ba":"markdown","e456968f":"markdown","09cd37a6":"markdown","beb5aacb":"markdown","89b6d685":"markdown","bd626c50":"markdown"},"source":{"489e1a58":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","803ebeb5":"Housing = pd.read_csv('\/kaggle\/input\/usa-housing\/USA_Housing.csv')","b1b0e489":"Housing.info()","3e65188d":"Housing.head()","7007572f":"Housing.describe()","53e27102":"Housing.columns","990205f4":"sns.pairplot(Housing)","d077f0f5":"sns.distplot(Housing['Price'])","ae550d12":"sns.heatmap(Housing.corr())","35c324b9":"Housing.columns","b2dfe6ff":"## First split up data into X array that contains the features to train on, and y array with the target variable.\n## I will toss out the Address column because it onlu has text info that th elinear regression model can not use.\nX = Housing[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms', 'Avg. Area Number of Bedrooms', 'Area Population']]\ny = Housing['Price']","e85e0c3a":"## Split the data into a training set and a testing set.\n## I will train model on the training set and then use the test set to evaluate the model\nfrom sklearn.model_selection import train_test_split","972c7004":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=101)","de9b91d8":"from sklearn.linear_model import LinearRegression","d6e3cb01":"lm = LinearRegression()","f12e15a7":"lm.fit(X_train,y_train)","4d0ab57e":"## Check out coefficients and how we can interpret them.\nprint(lm.intercept_)","faaa02a7":"coeff_df = pd.DataFrame(lm.coef_,X.columns,columns=['Coefficient'])\ncoeff_df","f558a886":"predictions = lm.predict(X_test)","80d5722e":"plt.scatter(y_test,predictions)","1eff0493":"## Residual Histogram\nsns.distplot((y_test-predictions),bins=50)","06bafcb6":"from sklearn import metrics\nprint('MAE', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","4ce1188f":"## Data Overview","764c89cd":"Interpreting the coefficients:\n- Holding all other features fixed, a 1 unit increase in **Avg. Area Income** is associated with an **increase of \\$21.63 **.\n- Holding all other features fixed, a 1 unit increase in **Avg. Area House Age** is associated with an **increase of \\$164890.44 **.\n- Holding all other features fixed, a 1 unit increase in **Avg. Area Number of Rooms** is associated with an **increase of \\$121297.15 **.\n- Holding all other features fixed, a 1 unit increase in **Avg. Area Number of Bedrooms** is associated with an **increase of \\$1814.58 **.\n- Holding all other features fixed, a 1 unit increase in **Area Population** is associated with an **increase of \\$15.24 **.","8c80f301":"## Training a Linear Regression Model","4a26e195":"# Linear Regression Project\n## Tracy(11\/13\/2019)_USA Housing Price Prediction\n\nI want to create a model to put in a few features of a house and returns back an estimate house price. The Linear Regression should be a good path to solve this problem.\nThis dataset about a bunch of houses in regions of the United States.\nThe data contains the following columns.\n* 'Avg. Area Income': Avg Income of residents of the city house is located in.\n* 'Avg. Area House Age': Avg Age of Houses in same city\n* 'Avg. Area Number of Rooms': Avg Number of Rooms for Houses in same city\n* 'Avg. Area Number of Bedrooms': Avg Number of Bedrooms for Houses in same city\n* 'Area Population': Population of city house is located in\n* 'Price': Price that the house sold at\n* 'Address': Address for the house","7928c3ba":"### Create and Train Model","e456968f":"### Predictions from Model","09cd37a6":"## Regression Evaluation Metrics\nHere are three common evaluation metrics for regression problems:\n\n**Mean Absolute Error** (MAE) is the mean of the absolute value of the errors:\n\n$$\\frac 1n\\sum_{i=1}^n|y_i-\\hat{y}_i|$$\n\n**Mean Squared Error** (MSE) is the mean of the squared errors:\n\n$$\\frac 1n\\sum_{i=1}^n(y_i-\\hat{y}_i)^2$$\n\n**Root Mean Squared Error** (RMSE) is the square root of the mean of the squared errors:\n\n$$\\sqrt{\\frac 1n\\sum_{i=1}^n(y_i-\\hat{y}_i)^2}$$\n\nComparing these metrics:\n\n- **MAE** is the easiest to understand, because it's the average error.\n- **MSE** is more popular than MAE, because MSE \"punishes\" larger errors, which tends to be useful in the real world.\n- **RMSE** is even more popular than MSE, because RMSE is interpretable in the \"y\" units.\n\nAll of these are **loss functions**, because we want to minimize them.","beb5aacb":"### Model Evaluation","89b6d685":"## Exploratory Data Analysis","bd626c50":"## Import Libraries and Data"}}