{"cell_type":{"14558a48":"code","e291c3f0":"code","34b5d968":"code","815bf044":"code","c7ad2ece":"code","a80dc271":"code","ecfd9745":"code","19c8f637":"code","70d1a3eb":"code","b2ffbc16":"code","9edf86d1":"code","2efc3f99":"code","59d35a3d":"code","72d596c8":"markdown","07601cb2":"markdown","5b40a0f3":"markdown"},"source":{"14558a48":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nnsfg = pd.read_hdf(\"..\/input\/national-survey-of-family-growthnsfg\/nsfg.hdf5\", \"nsfg\")\nnsfg.head()","e291c3f0":"# The number 8 in (nbrnaliv) column (number of babies born alive at the end of pregnancy) indicates that the repondent refused to answer\nnsfg[\"nbrnaliv\"].value_counts()\n# We must replace it, the other values (1, 2, 3) indicate the number of babies","34b5d968":"# Replacing 8 with NaN\nnsfg[\"nbrnaliv\"].replace(8, np.nan, inplace = True)\nnsfg[\"nbrnaliv\"].value_counts()","815bf044":"pounds = nsfg[\"birthwgt_lb1\"]\npounds.value_counts().sort_index()\n# The most frequent values are 6-8 pounds, 98.0 and 99.0 indicate missing data","c7ad2ece":"# Then we replace the 98.0 and 99.0 pounds with NaN to represent missing data\npounds = pounds.replace([98, 99], np.nan)","a80dc271":"# Tha same thing for ounces\nounces = nsfg[\"birthwgt_oz1\"]\nounces.value_counts().sort_index()","ecfd9745":"ounces = ounces.replace([98, 99], np.nan)","19c8f637":"# Calculating the total birth weight\n# 1 pound = 16 ounces\nbirth_weight = pounds + (ounces \/ 16)\n# Some statistics about the total birth weight\nbirth_weight.describe()","70d1a3eb":"plt.hist(birth_weight.dropna(), bins = 30)\nplt.xlabel(\"Birth Weight (lb)\")\nplt.ylabel(\"Number of births\")\nplt.title(\"The distribution of birth weights (lb)\")\nplt.show","b2ffbc16":"# We can use the column (prglngth) to determine if the baby is preterm (prglngth < 37) or fullterm\npreterm = nsfg[\"prglngth\"] < 37 # True if it is preterm\nfullterm = ~preterm\n# The number of preterm babies\nprint(\"The number of preterm babies:\", preterm.sum())\nprint(\"The number of fullterm babies:\", fullterm.sum())","9edf86d1":"# Showing the weights of preterm babies\npreterm_weight = birth_weight[preterm]\n# The mean of the weights of preterm babies\nprint(\"Mean of the weights of preterm babies:\", preterm_weight.mean())","2efc3f99":"# Showing the weights of preterm babies\nfullterm_weight = birth_weight[~preterm]\n# The mean of the weights of fullterm babies\nprint(\"Mean of the weights of fullterm babies:\", fullterm_weight.mean())","59d35a3d":"# Filter single births\nsingle = nsfg['nbrnaliv'] == 1\n\n# Compute birth weight for single full-term babies\nsingle_full_term_weight = birth_weight[single & ~preterm]\nprint(\"Single full-term mean:\", single_full_term_weight.mean())\n\n# Compute birth weight for multiple full-term babies\nmult_full_term_weight = birth_weight[~single & ~preterm]\nprint(\"Multiple full-term mean:\", mult_full_term_weight.mean())\n","72d596c8":"**Checking the data for errors and correcting them**","07601cb2":"**Importing the required packages\nImporting and reading the data:**\nNSFG (National Survey of Family Growth) data is in form of (HDF5)","5b40a0f3":"**Plotting the frequency of birth weights**"}}