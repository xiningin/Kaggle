{"cell_type":{"e67445df":"code","7f72866f":"code","b8268dcf":"code","76e0d5ce":"code","6fbebc4b":"code","22538ca6":"code","2abefa01":"code","ff918e2b":"code","7b7fe626":"code","5dda96be":"code","5422a7d4":"code","355025e2":"code","18c917f1":"code","70662f59":"code","92b70780":"code","5f77d252":"code","ded6eb4d":"code","5d02e2a3":"code","ed0bc223":"code","790a6d57":"code","e3f77a3f":"code","ff9afc6f":"code","e94444d5":"code","9189c074":"code","344cf686":"code","e60b403c":"code","52234a90":"code","e6d51361":"code","1a8b8492":"code","7a398103":"code","4c362279":"code","23e1b6ad":"code","b77034e5":"code","063beb60":"code","38111c7e":"code","02071072":"code","1978c428":"code","b16ab115":"code","0d752291":"code","ffcc8168":"code","45ec1007":"code","a0d8423b":"markdown","ae92a231":"markdown","2a950997":"markdown","433dbf98":"markdown","01b78f99":"markdown","3b66c50c":"markdown","55d39ea8":"markdown","e4b3c788":"markdown","0860bd46":"markdown","fcac1cd5":"markdown","1fa5233c":"markdown","0bb34d91":"markdown","d050f08a":"markdown","6e9b5497":"markdown","f3c84a30":"markdown","63037c6d":"markdown","4962092c":"markdown","798ecc30":"markdown","21d53cda":"markdown","7bc00191":"markdown","79a0bb4f":"markdown","cef31129":"markdown","fd0a902b":"markdown","a8fa8b66":"markdown","a344d068":"markdown","0e3b6045":"markdown","5d8a1756":"markdown","cc6c8708":"markdown","1ca4286c":"markdown","c28779af":"markdown","b1bda837":"markdown","e66dbc2d":"markdown","0b47c561":"markdown","69dc0396":"markdown","9a75eae2":"markdown","c25fee19":"markdown","cd40403d":"markdown","b5e5fcc1":"markdown","3d1de1d2":"markdown"},"source":{"e67445df":"import numpy as np \nimport pandas as pd\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statsmodels.api as sm\nimport itertools\nimport time","7f72866f":"data = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/Umang-19\/Big-Data-Analytics-Research-Project-\/master\/ALL%20DATA.csv\")\ndata.head(10)","b8268dcf":"print(\"Columns in our dataset: \\n\" , data.columns)\nprint(\"\\nList of Numerical features: \\n\" , data.select_dtypes(include=np.number).columns.tolist())\nprint(\"\\n\\nList of Categorical features: \\n\" , data.select_dtypes(include=['object']).columns.tolist())","76e0d5ce":"data.info()","6fbebc4b":"data.isnull().sum()","22538ca6":"data = data.dropna()\ndata.info()","2abefa01":"data.to_csv('file_name.csv')","ff918e2b":"from IPython.display import HTML\nimport pandas as pd\nimport numpy as np\nimport base64\n\n# function that takes in a dataframe and creates a text link to  \n# download it (will only work for files < 2MB or so)\ndef create_download_link(df, title = \"Download CSV file\", filename = \"file_name.csv\"):  \n    csv = df.to_csv()\n    b64 = base64.b64encode(csv.encode())\n    payload = b64.decode()\n    html = '<a download=\"{filename}\" href=\"data:text\/csv;base64,{payload}\" target=\"_blank\">{title}<\/a>'\n    html = html.format(payload=payload,title=title,filename=filename)\n    return HTML(html)\n\n# create a random sample dataframe\ndf = data\n\n# create a link to download the dataframe\ncreate_download_link(df)","7b7fe626":"corr = data[[ 'CGPA', 'HAMD', 'Fitness Score', \n           'Anxiety Score', 'EQ Score', 'IQ Score','Communication Score', 'Social Score', 'Career Score']].corr()\nfig, ax = plt.subplots(figsize=(10,5))  \nheatmap = sns.heatmap(corr, annot = True, ax=ax)","5dda96be":"data_x = data[['HAMD', 'Fitness Score', 'Anxiety Score','EQ Score', 'IQ Score', 'Communication Score', 'Social Score', 'Career Score']]\ndata_y = data['CGPA']\n\nx_train, x_test, y_train, y_test = train_test_split(data_x, data_y, test_size=0.20, random_state=5)","5422a7d4":"x_train_hamd = x_train[['HAMD']];\nx_test_hamd = x_test[['HAMD']];\nlr = LinearRegression() \nlr.fit(x_train_hamd, y_train)\ny_pred = lr.predict(x_test_hamd)\n\nplt.figure(figsize = (10,5))\nplt.scatter(x_test_hamd, y_test)\nplt.plot(x_test_hamd, y_pred, color='green', linewidth=3);\nplt.ylabel(\"CGPA\")\nplt.xlabel(\"HAMD\")\nplt.show()\n\nmse1 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA VS HAMD model = \", mse1)\nr2score1 = r2_score(y_test, y_pred)\nprint(\"\\nR2 score of CGPA VS HAMD model = \", r2score1)\n\nprint(\"Linear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coeff = \" , lr.coef_) ","355025e2":"x_train_iq = x_train[['IQ Score']];\nx_test_iq = x_test[['IQ Score']];\nlr = LinearRegression() \nlr.fit(x_train_iq, y_train)\ny_pred = lr.predict(x_test_iq)\n\nplt.figure(figsize = (10,5))\nplt.scatter(x_test_iq, y_test)\nplt.plot(x_test_iq, y_pred, color='red', linewidth=3);\nplt.ylabel(\"CGPA\")\nplt.xlabel(\"IQ Score\")\nplt.show()\n\nmse2 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs IQ score model = \", mse2)\nr2score2 = r2_score(y_test, y_pred)\nprint(\"\\nR2 score of CGPA VS HAMD model = \", r2score2)\n\nprint(\"Linear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coeff = \" , lr.coef_) ","18c917f1":"x_train_eq = x_train[['EQ Score']];\nx_test_eq = x_test[['EQ Score']];\nlr = LinearRegression() \nlr.fit(x_train_eq, y_train)\ny_pred = lr.predict(x_test_eq)\n\nplt.figure(figsize = (10,5))\nplt.scatter(x_test_eq, y_test)\nplt.plot(x_test_eq, y_pred, color='blue', linewidth=3);\nplt.ylabel(\"CGPA\")\nplt.xlabel(\"EQ Score\")\nplt.show()\n\nmse3 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs EQ model= \", mse3)\nr2score3 = r2_score(y_test, y_pred)\nprint(\"\\nR2 score of CGPA VS HAMD model = \", r2score3)\n\nprint(\"Linear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coeff = \" , lr.coef_)","70662f59":"x_train_fitness = x_train[['Fitness Score']];\nx_test_fitness = x_test[['Fitness Score']];\nlr = LinearRegression() \nlr.fit(x_train_fitness, y_train)\ny_pred = lr.predict(x_test_fitness)\n\nplt.figure(figsize = (10,5))\nplt.scatter(x_test_fitness, y_test)\nplt.plot(x_test_fitness, y_pred, color='darkblue', linewidth=3);\nplt.ylabel(\"CGPA\")\nplt.xlabel(\"Fitness Score\")\nplt.show()\n\nmse4 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error = \", mse4)\nr2score4 = r2_score(y_test, y_pred)\nprint(\"\\nR2 score of CGPA VS HAMD model = \", r2score4)\nprint(\"Linear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coeff = \" , lr.coef_)","92b70780":"x_train_anxiety = x_train[['Anxiety Score']];\nx_test_anxiety = x_test[['Anxiety Score']];\nlr = LinearRegression() \nlr.fit(x_train_anxiety, y_train)\ny_pred = lr.predict(x_test_anxiety)\n\n\nplt.figure(figsize = (10,5))\nplt.scatter(x_test_anxiety, y_test)\nplt.plot(x_test_anxiety, y_pred, color='green', linewidth=3);\nplt.ylabel(\"CGPA\")\nplt.xlabel(\"Anxiety Score\")\nplt.show()\n\nmse5 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs Anxiety score = \", mse5)\nr2score5 = r2_score(y_test, y_pred)\nprint(\"\\nR2 score of CGPA VS HAMD model = \", r2score5)\nprint(\"Linear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coeff = \" , lr.coef_)","5f77d252":"x_train_comm = x_train[['Communication Score']];\nx_test_comm = x_test[['Communication Score']];\nlr = LinearRegression() \nlr.fit(x_train_comm, y_train)\ny_pred = lr.predict(x_test_comm)\n\n\nplt.figure(figsize = (10,5))\nplt.scatter(x_test_comm, y_test)\nplt.plot(x_test_comm, y_pred, color='green', linewidth=3);\nplt.ylabel(\"CGPA\")\nplt.xlabel(\"Communication Score\")\nplt.show()\n\nmse6 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs Communication score = \", mse6)\nr2score6 = r2_score(y_test, y_pred)\nprint(\"\\nR2 score of CGPA VS HAMD model = \", r2score6)\n\nprint(\"Linear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coeff = \" , lr.coef_)","ded6eb4d":"x_train_soc = x_train[['Social Score']];\nx_test_soc = x_test[['Social Score']];\nlr = LinearRegression() \nlr.fit(x_train_soc, y_train)\ny_pred = lr.predict(x_test_soc)\n\n\nplt.figure(figsize = (10,5))\nplt.scatter(x_test_soc, y_test)\nplt.plot(x_test_soc, y_pred, color='green', linewidth=3);\nplt.ylabel(\"CGPA\")\nplt.xlabel(\"Social Score\")\nplt.show()\n\nmse7 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs Social score = \", mse7)\nr2score7 = r2_score(y_test, y_pred)\nprint(\"\\nR2 score of CGPA VS HAMD model = \", r2score7)\n\nprint(\"Linear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coeff = \" , lr.coef_)","5d02e2a3":"x_train_career = x_train[['Career Score']];\nx_test_career = x_test[['Career Score']];\nlr = LinearRegression() \nlr.fit(x_train_career, y_train)\ny_pred = lr.predict(x_test_career)\n\n\nplt.figure(figsize = (10,5))\nplt.scatter(x_test_career, y_test)\nplt.plot(x_test_career, y_pred, color='green', linewidth=3);\nplt.ylabel(\"CGPA\")\nplt.xlabel(\"Career Score\")\nplt.show()\n\nmse8 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs Career score = \", mse8)\nr2score8 = r2_score(y_test, y_pred)\nprint(\"\\nR2 score of CGPA VS HAMD model = \", r2score8)\n\nprint(\"Linear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coeff = \" , lr.coef_)","ed0bc223":"print(\"Mean Square Error of CGPA vs HAMD model = \", mse1)\nprint(\"Mean Square Error of CGPA vs IQ score model = \", mse2)\nprint(\"Mean Square Error of CGPA vs EQ model= \", mse3)\nprint(\"Mean Square Error of CGPA vs Fitness Score = \", mse4)\nprint(\"Mean Square Error of CGPA vs Anxiety score = \", mse5)\nprint(\"Mean Square Error of CGPA vs Communication score = \", mse6)\nprint(\"Mean Square Error of CGPA vs Social score = \", mse7)\nprint(\"Mean Square Error of CGPA vs Career score = \", mse8)","790a6d57":"print(\"\\nR2 score of CGPA VS HAMD model = \", r2score1)\nprint(\"R2 score of CGPA vs IQ score model = \", r2score2)\nprint(\"R2 score of CGPA vs EQ model = \", r2score3)\nprint(\"R2 score of CGPA vs Fitness Score = \", r2score4)\nprint(\"R2 score of CGPA vs Anxiety score = \", r2score5)\nprint(\"R2 score of CGPA vs Communication score = \", r2score6)\nprint(\"R2 score of CGPA vs Social score = \", r2score7)\nprint(\"R2 score of CGPA vs Career score = \", r2score8)","e3f77a3f":"xtr = x_train[['HAMD','IQ Score']];\nxts = x_test[['HAMD','IQ Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\n\nmse9 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs IQ Score + HAMD = \", mse9)\n\nprint(\"\\nLinear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coefficients = \" , lr.coef_) ","ff9afc6f":"xtr = x_train[['HAMD','IQ Score', 'Communication Score']];\nxts = x_test[['HAMD','IQ Score', 'Communication Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\n\nmse9 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs IQ Score + HAMD = \", mse9)\n\nprint(\"\\nLinear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coefficients = \" , lr.coef_) ","e94444d5":"xtr = x_train[['HAMD','IQ Score', 'Communication Score', 'Fitness Score']];\nxts = x_test[['HAMD','IQ Score', 'Communication Score', 'Fitness Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\n\nmse9 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs IQ Score + HAMD = \", mse9)\n\nprint(\"\\nLinear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coefficients = \" , lr.coef_) ","9189c074":"xtr = x_train[['HAMD','IQ Score', 'Communication Score', 'Fitness Score', 'EQ Score']];\nxts = x_test[['HAMD','IQ Score', 'Communication Score', 'Fitness Score', 'EQ Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\n\nmse9 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs IQ Score + HAMD = \", mse9)\n\nprint(\"\\nLinear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coefficients = \" , lr.coef_) ","344cf686":"xtr = x_train[['HAMD','IQ Score', 'Communication Score', 'Fitness Score', 'EQ Score', 'Anxiety Score']];\nxts = x_test[['HAMD','IQ Score', 'Communication Score', 'Fitness Score', 'EQ Score', 'Anxiety Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\n\nmse9 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs IQ Score + HAMD = \", mse9)\n\nprint(\"\\nLinear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coefficients = \" , lr.coef_) ","e60b403c":"xtr = x_train[['HAMD','IQ Score', 'Communication Score', 'Fitness Score', 'EQ Score', 'Anxiety Score', 'Social Score']];\nxts = x_test[['HAMD','IQ Score', 'Communication Score', 'Fitness Score', 'EQ Score', 'Anxiety Score', 'Social Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\n\nmse9 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs IQ Score + HAMD = \", mse9)\n\nprint(\"\\nLinear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coefficients = \" , lr.coef_) ","52234a90":"xtr = x_train[['HAMD','IQ Score', 'Communication Score', 'Fitness Score', 'EQ Score', 'Anxiety Score', 'Social Score', 'Career Score']];\nxts = x_test[['HAMD','IQ Score', 'Communication Score', 'Fitness Score', 'EQ Score', 'Anxiety Score', 'Social Score', 'Career Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\n\nmse9 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs IQ Score + HAMD = \", mse9)\n\nprint(\"\\nLinear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coefficients = \" , lr.coef_) ","e6d51361":"xtr = x_train[['Anxiety Score', 'HAMD']];\nxts = x_test[['Anxiety Score','HAMD']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\n\n\nmse10 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs Anxiety score + HAMD = \", mse10)\n\nprint(\"\\nLinear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coefficients = \" , lr.coef_) ","1a8b8492":"xtr = x_train[['HAMD', 'Fitness Score']];\nxts = x_test[['HAMD', 'Fitness Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\n\n\nmse11 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs HAMD + Fitness = \", mse11)\n\n\nprint(\"\\nLinear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coefficients = \" , lr.coef_) ","7a398103":"print(\"Mean Square Error of CGPA vs Communication Score + HAMD = \", mse9)\nprint(\"Mean Square Error of CGPA vs Anxiety score + HAMD = \", mse10)\nprint(\"Mean Square Error of CGPA vs HAMD + Fitness = \", mse11)","4c362279":"xtr = x_train[['Communication Score', 'Anxiety Score', 'HAMD']];\nxts = x_test[['Communication Score', 'Anxiety Score','HAMD']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\n\n\nmse12 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs Communication Score + Anxiety score + HAMD = \", mse12)\n\n\nprint(\"\\nLinear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coefficients = \" , lr.coef_) ","23e1b6ad":"xtr = x_train[['Anxiety Score', 'HAMD', 'Fitness Score']];\nxts = x_test[['Anxiety Score','HAMD','Fitness Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\n\n\nmse13 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs Anxiety score + HAMD + Fitness Score = \", mse13)\n\n\nprint(\"\\nLinear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coefficients = \" , lr.coef_) ","b77034e5":"xtr = x_train[['Communication Score', 'Anxiety Score', 'HAMD', 'Fitness Score']];\nxts = x_test[['Communication Score', 'Anxiety Score','HAMD', 'Fitness Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\n\n\nmse14 = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs Communication Score + Anxiety score + HAMD + Fitness Score = \", mse14)\n\n\nprint(\"\\nLinear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coefficients = \" , lr.coef_) ","063beb60":"print(\"Mean Square Error of CGPA vs Communication Score + HAMD = \", mse9)\nprint(\"Mean Square Error of CGPA vs Anxiety score + HAMD = \", mse10)\nprint(\"Mean Square Error of CGPA vs HAMD + Fitness = \", mse11)\n\nprint(\"\\nMean Square Error of CGPA vs Communication Score + Anxiety score + HAMD = \", mse12)\nprint(\"Mean Square Error of CGPA vs Anxiety score + HAMD + Fitness Score = \", mse13)\nprint(\"Mean Square Error of CGPA vs Communication Score + Anxiety score + HAMD + Fitness Score = \", mse14)","38111c7e":"data_x = data[['HAMD', 'Fitness Score', 'Anxiety Score','EQ Score', 'IQ Score', 'Communication Score', 'Social Score', 'Career Score']]\ndata_y = data['CGPA']\n\nx_train, x_test, y_train, y_test = train_test_split(data_x, data_y, test_size=0.20, random_state=5)\n\n\nxtr = x_train[['Communication Score','Anxiety Score']];\nxts = x_test[['Communication Score','Anxiety Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\nmse9 = mean_squared_error(y_test,y_pred)\n\n\nxtr = x_train[['Anxiety Score', 'HAMD']];\nxts = x_test[['Anxiety Score','HAMD']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\nmse10 = mean_squared_error(y_test,y_pred)\n\n\nxtr = x_train[['HAMD', 'Fitness Score']];\nxts = x_test[['HAMD', 'Fitness Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\nmse11 = mean_squared_error(y_test,y_pred)\n\n\nxtr = x_train[['Communication Score', 'Anxiety Score', 'HAMD']];\nxts = x_test[['Communication Score', 'Anxiety Score','HAMD']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\nmse12 = mean_squared_error(y_test,y_pred)\n\n\nxtr = x_train[['Anxiety Score', 'HAMD', 'Fitness Score']];\nxts = x_test[['Anxiety Score','HAMD','Fitness Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\nmse13 = mean_squared_error(y_test,y_pred)\n\n\nxtr = x_train[['Communication Score', 'Anxiety Score', 'HAMD', 'Fitness Score']];\nxts = x_test[['Communication Score', 'Anxiety Score','HAMD', 'Fitness Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\nmse14 = mean_squared_error(y_test,y_pred)\n\nprint(\"Mean Square Error of CGPA vs Communication Score + HAMD = \", mse9)\nprint(\"Mean Square Error of CGPA vs Anxiety score + HAMD = \", mse10)\nprint(\"Mean Square Error of CGPA vs HAMD + Fitness = \", mse11)\n\nprint(\"\\nMean Square Error of CGPA vs Communication Score + Anxiety score + HAMD = \", mse12)\nprint(\"Mean Square Error of CGPA vs Anxiety score + HAMD + Fitness Score = \", mse13)\nprint(\"Mean Square Error of CGPA vs Communication Score + Anxiety score + HAMD + Fitness Score = \", mse14)","02071072":"data_x = data[['HAMD', 'Fitness Score', 'Anxiety Score','EQ Score', 'IQ Score', 'Communication Score', 'Social Score', 'Career Score']]\ndata_y = data['CGPA']\n\nx_train, x_test, y_train, y_test = train_test_split(data_x, data_y, test_size=0.20, random_state=3)\n\n\nxtr = x_train[['Communication Score','Anxiety Score']];\nxts = x_test[['Communication Score','Anxiety Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\nmse9 = mean_squared_error(y_test,y_pred)\n\n\nxtr = x_train[['Anxiety Score', 'HAMD']];\nxts = x_test[['Anxiety Score','HAMD']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\nmse10 = mean_squared_error(y_test,y_pred)\n\n\nxtr = x_train[['HAMD', 'Fitness Score']];\nxts = x_test[['HAMD', 'Fitness Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\nmse11 = mean_squared_error(y_test,y_pred)\n\n\nxtr = x_train[['Anxiety Score', 'HAMD', 'Fitness Score']];\nxts = x_test[['Anxiety Score','HAMD','Fitness Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\nmse13 = mean_squared_error(y_test,y_pred)\n\n\nxtr = x_train[['Communication Score', 'Anxiety Score', 'HAMD', 'Fitness Score']];\nxts = x_test[['Communication Score', 'Anxiety Score','HAMD', 'Fitness Score']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\nmse14 = mean_squared_error(y_test,y_pred)\n\nprint(\"Mean Square Error of CGPA vs Communication Score + HAMD = \", mse9)\nprint(\"Mean Square Error of CGPA vs Anxiety score + HAMD = \", mse10)\nprint(\"Mean Square Error of CGPA vs HAMD + Fitness = \", mse11)\n\nprint(\"\\nMean Square Error of CGPA vs Communication Score + Anxiety score + HAMD = \", mse12)\nprint(\"Mean Square Error of CGPA vs Anxiety score + HAMD + Fitness Score = \", mse13)\nprint(\"Mean Square Error of CGPA vs Communication Score + Anxiety score + HAMD + Fitness Score = \", mse14)","1978c428":"def fit_linear_reg(X,Y):\n    #Fit linear regression model and return RSS and R squared values\n    model_k = LinearRegression(fit_intercept = True)\n    model_k.fit(X,Y)\n    RSS = mean_squared_error(Y,model_k.predict(X)) * len(Y)\n    R_squared = model_k.score(X,Y)\n    return RSS, R_squared\n\n\n#Importing tqdm for the progress bar\nfrom tqdm.notebook import tnrange, tqdm_notebook\n\n#Initialization variables\nX = data[['HAMD', 'Fitness Score', 'Anxiety Score','EQ Score', 'IQ Score', 'Communication Score', 'Social Score', 'Career Score']]\nY = data['CGPA']\nk = 8\nRSS_list, R_squared_list, feature_list = [],[], []\nnumb_features = []\n\n#Looping over k = 1 to k = 8 features in X\nfor k in tnrange(1,len(X.columns) + 1, desc = 'Loop...'):\n\n    #Looping over all possible combinations: from 11 choose k\n    for combo in itertools.combinations(X.columns,k):\n        tmp_result = fit_linear_reg(X[list(combo)],Y)  \n        # print(\"List = \", X[list(combo)])\n#         print(\"Temp result = \", tmp_result)#Store temp result \n        RSS_list.append(tmp_result[0])                  #Append lists\n        R_squared_list.append(tmp_result[1])\n        feature_list.append(combo)\n        numb_features.append(len(combo))   \n\n#Store in DataFrame\ndf = pd.DataFrame({'numb_features': numb_features,'RSS': RSS_list, 'R_squared':R_squared_list,'features':feature_list})\n\ndf_min = df[df.groupby('numb_features')['RSS'].transform(min) == df['RSS']]\ndf_max = df[df.groupby('numb_features')['R_squared'].transform(max) == df['R_squared']]","b16ab115":"display(df_min.head(8))","0d752291":"display(df_max.head(7))","ffcc8168":"data_x = data[['HAMD', 'Fitness Score', 'Anxiety Score','EQ Score', 'IQ Score', 'Communication Score', 'Social Score', 'Career Score']]\ndata_y = data['CGPA']\n\nx_train, x_test, y_train, y_test = train_test_split(data_x, data_y, test_size=0.20, random_state=3)\n\n\nxtr = x_train[['Communication Score','IQ Score', 'HAMD']];\nxts = x_test[['Communication Score','IQ Score', 'HAMD']];\nlr = LinearRegression() \nlr.fit(xtr, y_train)\ny_pred = lr.predict(xts)\nbestmse = mean_squared_error(y_test,y_pred)\nprint(\"\\nMean Square Error of CGPA vs Communication Score + IQ score + HAMD = \", bestmse)","45ec1007":"print(\"Linear Regression Line: Y = \", lr.intercept_ , \" + \", lr.coef_ , \"x\")\nprint(\"Intercept = \" , lr.intercept_)\nprint(\"Coeff = \" , lr.coef_) ","a0d8423b":"# **3. Data Preprocessing (Cleaning)** \ud83e\uddf9","ae92a231":"## **CGPA vs ( Anxiety + HAMD )**","2a950997":"## **Best Features according to Maximum R Squared**","433dbf98":"## **MSE of all one to two models**","01b78f99":"### Observations\n* **1001 ENTRIES!!**\n* **Anxiety score column has 2 missing values**\n* **Communication score has 1 missing value**","3b66c50c":"## **CGPA vs ( Anxiety + HAMD + Fitness)**","55d39ea8":"### **Observations**\n* CGPA & HAMD\/Anxiety Score -> Strong negative correlation\n* CGPA & IQ -> Positive correlation","e4b3c788":"## **CGPA vs ( HAMD + Fitness Score )**","0860bd46":"## **2. CGPA vs IQ**","fcac1cd5":"# **2. Loading Dataset** \ud83d\udcca","1fa5233c":"## **Train-Test Splitting 2**","0bb34d91":"### **Minimum MSE:** CGPA vs\n* (Communication + HAMD) \n* (Communication Score + Anxiety score + HAMD) \n* (Communication Score + Anxiety score + HAMD + Fitness Score)","d050f08a":"## **CGPA vs ( Communication + Anxiety + HAMD )**","6e9b5497":"## **8. CGPA vs Career Aspiration Score**","f3c84a30":"## **6. CGPA vs Communication Score**","63037c6d":"## **Train-Test Splitting 1**","4962092c":"## **Best Features according to Minimum RSS**","798ecc30":"## **Train-Test Splitting 3**","21d53cda":"## **Multiple Regression Equation**","7bc00191":"## **5. CGPA vs Anxiety Score**","79a0bb4f":"## **Mean Squared Errors of all One-to-one models**","cef31129":"# **5. Building Machine Learning Model** \ud83e\udd16","fd0a902b":"## **1. CGPA vs HAMD**","a8fa8b66":"## (b) Dropping rows with missing values","a344d068":"## **CGPA vs ( HAMD + IQ )**","0e3b6045":"## **4. CGPA vs Fitness Score**","5d8a1756":"# **Best Subset Selection**","cc6c8708":"# **1. Importing Necessary Libraries** \ud83d\udcda","1ca4286c":"# **Multiple Regression Models**","c28779af":"## Increasing order of MSE : \n### **Communication Score -> Anxiety Score -> HAMD -> Fitness -> IQ -> Social -> EQ -> Career**","b1bda837":"# **4. Exploratory Data Analysis** \ud83d\udcc9","e66dbc2d":"#### **We're good to go! \ud83c\udf89**","0b47c561":"## **Mean Squared Errors of all Models**","69dc0396":"## **R2 Score of all Linear Models**","9a75eae2":"## **3. CGPA vs EQ**","c25fee19":"## **CGPA vs ( Communication + Anxiety + HAMD + Fitness)**","cd40403d":"## **7. CGPA vs Social Score**","b5e5fcc1":"# **Multiple Regression Model considering Best Features!**","3d1de1d2":"## (a) Checking Missing Values"}}