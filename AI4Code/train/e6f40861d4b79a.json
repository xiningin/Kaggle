{"cell_type":{"21e7a8b6":"code","b5497e76":"code","e7394931":"code","914fef50":"code","ed6c1fc9":"code","d379ee16":"markdown","fc1e9513":"markdown"},"source":{"21e7a8b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n!pip install pandas-datareader\nimport pandas_datareader as pdr\n\n!pip install pytrends # it is not oficial. Pleases understand. \nfrom pytrends.request import TrendReq\n\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b5497e76":"import datetime\ntd_1y = datetime.timedelta(weeks=52)\ntoday = datetime.datetime.now()\nstart_day = today - td_1y\n","e7394931":"class TrendStrategy:\n    def __init__(self, symbol, start_day, end_day, keywords):\n        self.symbol = symbol\n        self.start_day = start_day\n        self.end_day = end_day\n        self.keywords = keywords\n\n    def get_price_data(self, nomalization = False):\n        df_price = pdr.DataReader(self.symbol, 'yahoo',self.start_day, self.end_day)\n        if nomalization == True:\n            df_price =df_price\/df_price.max()\n        return df_price\n\n    def get_trend_data(self):\n        # it is needed for me to download rating each stock as daily comparing stock's price\n        pytrend = TrendReq(hl='en-US', tz=360) # this package is unoffical\n        df = pd.DataFrame()\n        for ticker in self.keywords:\n            temp_list = []\n            temp_list.append(ticker)\n            pytrend.build_payload(kw_list=temp_list, timeframe='today 12-m')\n            df_res = pytrend.interest_over_time()\n            df[ticker] = df_res.loc[:, ticker]\n            df[ticker] = df[ticker]\/df[ticker].max()\n\n        return df\n","914fef50":"symbol = 'AAPL' # (APPLE) It is example \ndow_list = [symbol]\nstrategy = TrendStrategy(symbol, start_day, today, keywords=dow_list)\n","ed6c1fc9":"df_tr = strategy.get_trend_data()\ndf_price = strategy.get_price_data(nomalization = True)\nfig = plt.figure(figsize=(10,10))\nax_main = plt.subplot(1,1,1)\n\nax_main.set_title(\"Stock's value with google trend\", fontsize=22 )\n     #ax_main.plot(df_price['Adj Close'], label='ORLY')\nfor tic in dow_list:\n    ax_main.plot(df_tr[tic], label='Trend')\nax_main.plot(df_price['Adj Close'], label=\"Stock's value\")\nax_main.legend(loc=2)\n\nplt.grid()\nplt.show()","d379ee16":"It is toy model for fun or I don't know if it might be true or not.\n","fc1e9513":"It is used by the library of pandas-datareader to get stock's price.\n\nIf you want to get locally and another stocks (like sp500), you should use in the dataset.\nHave you enjoy!"}}