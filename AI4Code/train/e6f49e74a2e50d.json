{"cell_type":{"1eae9754":"code","e4c9da22":"code","067b4ec4":"code","f5d2cb77":"code","672451a1":"code","566d6f50":"code","5a1ff099":"code","9e657c49":"code","fc38e8fd":"code","d947de2c":"code","94c4f13c":"code","57a77411":"code","3ad48b61":"code","0e6e317f":"code","5e74d288":"code","23c6384a":"code","31c15f0d":"code","4f687c47":"code","adaa6a66":"code","b17f865d":"code","e5cd272b":"code","339ab634":"code","d43733b6":"code","71d1d635":"code","95a3557f":"code","e00b0be8":"code","2684df90":"code","e62fd044":"code","adbb1ab0":"code","0a5f4bb6":"code","9527dfc8":"code","3b6b714c":"code","5b3989a6":"code","9a56315b":"code","e7ceb9d3":"code","321bab25":"code","5dffd97a":"code","ce60c6e7":"code","4e145012":"code","cce26007":"code","9f0168fb":"code","dbf632cb":"code","2fc65832":"code","004ed6d9":"code","e916d0bb":"code","69738319":"code","d37ab532":"code","0e65f025":"code","b4a86176":"code","8bc8d185":"code","dc740faa":"code","e980f679":"code","040821c9":"code","081f134e":"code","818dc850":"code","e9a8d863":"code","30d48707":"code","8ac8aedb":"code","431d1884":"code","65c62823":"code","6eee6655":"code","4a2669b3":"code","4011c4d3":"code","a4420222":"code","9d84ad33":"code","b5843e86":"code","f82f11a2":"code","a2f334fc":"markdown","07000155":"markdown","ad0eb300":"markdown","9cca31d4":"markdown","507684b6":"markdown","10e20a02":"markdown","0b0cfafa":"markdown"},"source":{"1eae9754":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","e4c9da22":"train = pd.read_csv('..\/input\/train.csv')","067b4ec4":"train","f5d2cb77":"train.head()","672451a1":"sns.countplot(x = 'Survived',hue= 'Pclass' , data = train)","566d6f50":"sns.boxplot(x='Pclass',y='Age',data=train)","5a1ff099":"sns.distplot(train['Age'],bins =25)","9e657c49":"plt.figure(figsize=(10,10))\nsns.heatmap(train.isnull())","fc38e8fd":"train.isnull().sum()","d947de2c":"train['Age'].value_counts()","94c4f13c":"sns.boxplot(x='Pclass',y='Age',data=train)","57a77411":"def impute(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    if pd.isnull(Age):\n        if Pclass==1:\n            return 37\n    \n        elif Pclass==2:\n            return 28\n        else:\n            return 25\n    else:\n        return Age\n","3ad48b61":"train['Age']=train[['Age','Pclass']].apply(impute,axis=1);","0e6e317f":"train['Age'].isnull().sum()","5e74d288":"train['Cabin'].isnull().sum()","23c6384a":"train = train.drop('Cabin',axis=1)","31c15f0d":"train['Embarked'].isnull().sum()","4f687c47":"train['Embarked'].value_counts()","adaa6a66":"train['Embarked'] = train['Embarked'].fillna(train['Embarked'].mode()[0])","b17f865d":"sns.heatmap(train.isnull(),cmap='Accent')","e5cd272b":"train['Sex'].value_counts()","339ab634":"train['Sex'].replace(to_replace=['male','female'],value=[0,1],inplace=True)","d43733b6":"train['Embarked'].value_counts()","71d1d635":"train['Embarked'].replace(to_replace=['S','C','Q'],value=[0,1,2],inplace=True)","95a3557f":"train['Ticket'].value_counts()","e00b0be8":"train = train.drop('Ticket',axis=1)","2684df90":"plt.figure(figsize=(10,10))\nsns.heatmap(train.corr())","e62fd044":"test = pd.read_csv('..\/input\/test.csv')","adbb1ab0":"test.head()","0a5f4bb6":"train.head()","9527dfc8":"sns.heatmap(test.isnull())","3b6b714c":"sns.boxplot(x='Pclass',y='Age',data=test)","5b3989a6":"def impute1(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    if pd.isnull(Age):\n        if Pclass==43:\n            return \n    \n        elif Pclass==2:\n            return 26\n        else:\n            return 23\n    else:\n        return Age\n","9a56315b":"test['Age']=test[['Age','Pclass']].apply(impute1,axis=1);","e7ceb9d3":"test = test.drop('Cabin',axis=1)","321bab25":"test = test.drop('Ticket',axis=1)","5dffd97a":"test['Embarked'].value_counts()","ce60c6e7":"test['Embarked'] = test['Embarked'].fillna(test['Embarked'].mode()[0])","4e145012":"test['Sex'].replace(to_replace=['male','female'],value=[0,1],inplace=True)","cce26007":"test['Embarked'].replace(to_replace=['S','C','Q'],value=[0,1,2],inplace=True)","9f0168fb":"test['Fare'].value_counts()","dbf632cb":"test['Fare'] = test['Fare'].fillna(test['Fare'].mean())","2fc65832":"test.isnull().sum()","004ed6d9":"sns.heatmap(test.isnull())","e916d0bb":"train.head()","69738319":"X=train[['PassengerId','Pclass','Age','SibSp','Parch','Sex','Embarked']]","d37ab532":"y=train['Survived']","0e65f025":"from sklearn.linear_model import LogisticRegression","b4a86176":"lg = LogisticRegression()","8bc8d185":"pred = lg.fit(X,y)","dc740faa":"pred.score(X,y)","e980f679":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25)","040821c9":"lg.fit(X_test,y_test)","081f134e":"y_pred = lg.predict(X_test)","818dc850":"y_pred","e9a8d863":"from sklearn.model_selection import GridSearchCV\nparameters = [{'C': [1, 10, 100, 1000],'max_iter' :[100, 500 , 1000]}]\ngrid_search = GridSearchCV(estimator = lg,\n                           param_grid = parameters,\n                           scoring = 'accuracy',\n                           cv = 5,\n                           n_jobs = -1)\ngrid_search = grid_search.fit(X_train, y_train)","30d48707":"grid_search.best_score_","8ac8aedb":"grid_search.best_params_\n","431d1884":"from sklearn.metrics import accuracy_score","65c62823":"print(accuracy_score(y_test,y_pred))","6eee6655":"test\ntest[0:5]","4a2669b3":"X2 = test[['PassengerId','Pclass','Age','SibSp','Parch','Sex','Embarked']]","4011c4d3":"y2_pred = lg.predict(X2)\nprint(y2_pred)","a4420222":"submission = pd.DataFrame({\n        \"PassengerId\": test[\"PassengerId\"],\n        \"Survived\": y2_pred\n    })","9d84ad33":"submission.to_csv(\"titanic_submission.csv\", index=False)","b5843e86":"sub = pd.read_csv('titanic_submission.csv')","f82f11a2":"sub","a2f334fc":"                                        Dealing with test dataset","07000155":"                            Dealing With Catagorical Feature","ad0eb300":"                                           Dealing with Missing Values","9cca31d4":"Here we can observe that 'Pclass' that \nPclass 1 : Age 38\nPclass 2 : Age 29\nPclass 3 : Age 25","507684b6":"                                            ML Modelling","10e20a02":"As Shown above 'Cabin' column contains most of the NULL values so better is that, we should drop the 'Cabin' Column","0b0cfafa":"As shown above 'ticket' doesn't contribute to predict any contribution so,its better to drop the feature"}}