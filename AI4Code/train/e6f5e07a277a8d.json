{"cell_type":{"a72ca825":"code","27e636ae":"code","e8c7fc28":"code","5e459e47":"code","4a2a48d1":"code","ab7a6b26":"code","045339f6":"code","0b034624":"code","771c31f6":"code","a2ef2238":"code","e7bf1b0f":"code","4da79953":"code","d0e201bc":"markdown"},"source":{"a72ca825":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","27e636ae":"taxiDataJanuary2020 = pd.read_csv(\"..\/input\/newyork-yellow-taxi-trip-data-2020-2019\/yellow_tripdata_2020-01.csv\",index_col=False,dtype={'tpep_pickup_datetime': object,'tpep_dropoff_datetime': object,'store_and_fwd_flag': \"string\",'PULocationID': int,'DOLocationID': int})\n\ntaxiDataJanuary2020.head()","e8c7fc28":"taxiDataJanuary2020.info()","5e459e47":"def cleanCSV(csv):\n    del csv['store_and_fwd_flag']\n    csv['tpep_pickup_datetime'] = pd.to_datetime(csv['tpep_pickup_datetime'])\n    csv['tpep_dropoff_datetime'] = pd.to_datetime(csv['tpep_dropoff_datetime'])\n    csv.insert(2, 'pickup_time', pd.DatetimeIndex(csv['tpep_pickup_datetime']).time)\n    csv.insert(2, 'pickup_month', pd.DatetimeIndex(csv['tpep_pickup_datetime']).month)\n    csv.insert(4, 'dropoff_time', pd.DatetimeIndex(csv['tpep_dropoff_datetime']).time)\n    csv.insert(4, 'dropoff_month', pd.DatetimeIndex(csv['tpep_dropoff_datetime']).month)\n\n    csv['trip_day'] = pd.DatetimeIndex(csv['tpep_pickup_datetime']).day\n","4a2a48d1":"cleanCSV(taxiDataJanuary2020)","ab7a6b26":"taxiDataJanuary2020.head()","045339f6":"len(taxiDataJanuary2020.index)","0b034624":"taxiDataJanuary2020 = taxiDataJanuary2020.query('pickup_month == %d' % 1 and 'dropoff_month == %d' %1)","771c31f6":"len(taxiDataJanuary2020.index)","a2ef2238":"taxiDataJanuary2020 = taxiDataJanuary2020.query('passenger_count >= %d' % 1)","e7bf1b0f":"len(taxiDataJanuary2020.index)","4da79953":"taxiDataJanuary2020.to_csv('taxiDataJanuary2020.csv',index=False)","d0e201bc":"## Importing data for 2020"}}