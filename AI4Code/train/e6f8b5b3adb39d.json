{"cell_type":{"63d01a89":"code","e1d31c11":"code","9b8d2627":"code","31ccc3e6":"code","f29250b8":"code","e4667517":"markdown","7bb347f2":"markdown","ab5aef6d":"markdown","cedfe267":"markdown","ed1f445e":"markdown"},"source":{"63d01a89":"import numpy as np\nimport pandas as pd\n\nimport matplotlib as plt\nimport plotly.figure_factory as ff\nimport plotly.express as px","e1d31c11":"sample = pd.read_csv('..\/input\/tabular-playground-series-nov-2021\/sample_submission.csv')\n\n# 0.74988, Simple NN-TPS Nov 21, https:\/\/www.kaggle.com\/adityasharma01\/simple-nn-tps-nov-21\nsub1 = pd.read_csv('..\/input\/simple-nn-tps-nov-21\/submission.csv')\n# 0.74987, TPS - Nov 2021 - NN - 2, https:\/\/www.kaggle.com\/sfktrkl\/tps-nov-2021-nn-2\nsub2 = pd.read_csv('..\/input\/tps-nov-2021-nn-2\/submission.csv')\n# 0.74966, TPS Nov 21 + DNN\/CNN Model + Extras, https:\/\/www.kaggle.com\/jmcslk\/tps-nov-21-dnn-cnn-model-extras\nsub3 = pd.read_csv('..\/input\/tps-nov-21-dnn-cnn-model-extras\/submission.csv')\n# 0.74951, Simple NN with good results - TPS Nov 21, https:\/\/www.kaggle.com\/javiervallejos\/simple-nn-with-good-results-tps-nov-21\nsub4 = pd.read_csv('..\/input\/simple-nn-with-good-results-tps-nov-21\/submission.csv')\n# 0.74940, Understanding Neural Net, https:\/\/www.kaggle.com\/chaudharypriyanshu\/understanding-neural-net\nsub5 = pd.read_csv('..\/input\/understanding-neural-net\/submission.csv')","9b8d2627":"hist_data = [sub1.target, sub2.target, sub3.target, sub4.target, sub5.target]\ngroup_labels = ['sub1', 'sub2', 'sub3', 'sub4', 'sub5']\nfig = ff.create_distplot(hist_data, group_labels, bin_size=0.3, show_hist=False, show_rug=False)\nfig.show()","31ccc3e6":"data = np.corrcoef([sub1.target, sub2.target, sub3.target, sub4.target, sub5.target])\nfig=px.imshow(data,x=group_labels, y=group_labels)\nfig.show()","f29250b8":"power = 4 # Power is arbitrary\nensemble = sample.copy()\nensemble.loc[:,'target'] = ((sub1**power + sub2**power + sub3**power + sub4**power + sub5**power) \/ 5) ** (1\/power)\nensemble.to_csv('submission.csv', index=False)\nensemble","e4667517":"# Power Averaging\n\nI have actually get the idea from https:\/\/www.kaggle.com\/motloch\/nov21-ensemble-public-models  \nThen after some search I have found this notebook too https:\/\/www.kaggle.com\/edrickkesuma\/power-averaging-is-your-friend, (from September 2021 competition)  \nFor more details, https:\/\/medium.com\/data-design\/reaching-the-depths-of-power-geometric-ensembling-when-targeting-the-auc-metric-2f356ea3250e\n\nSo, I just want to try it myself too.","7bb347f2":"# Check for correlations","ab5aef6d":"# Submission","cedfe267":"# Credits\n\nhttps:\/\/www.kaggle.com\/adityasharma01\/simple-nn-tps-nov-21  \nhttps:\/\/www.kaggle.com\/sfktrkl\/tps-nov-2021-nn-2  \nhttps:\/\/www.kaggle.com\/jmcslk\/tps-nov-21-dnn-cnn-model-extras  \nhttps:\/\/www.kaggle.com\/javiervallejos\/simple-nn-with-good-results-tps-nov-21  \nhttps:\/\/www.kaggle.com\/chaudharypriyanshu\/understanding-neural-net  ","ed1f445e":"High correlation between models 0.99+\n> https:\/\/www.kaggle.com\/c\/tabular-playground-series-nov-2021\/discussion\/284507  \nNote: Power Averaging to be used only when all the models are highly correlated, otherwise your score may become worse."}}