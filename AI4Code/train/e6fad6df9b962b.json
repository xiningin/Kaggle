{"cell_type":{"8be2fe62":"code","addd79d7":"code","341476b5":"code","0f28fbb6":"code","80581d68":"code","0c299248":"code","0127988a":"code","f219ceda":"code","f10b6146":"code","551e2e24":"code","59f47803":"code","7b046d6b":"code","a3d96947":"code","ca063615":"code","e8bc87a2":"code","5ab74dc7":"code","4005c5f8":"code","a5f887fb":"code","8f7ecf76":"code","62e6012c":"code","ffc74148":"code","1e2dde5e":"code","89586eaa":"markdown","2b331d33":"markdown","a9be7689":"markdown","0122e6d6":"markdown","c638ca97":"markdown","b5b41dc1":"markdown","e5ad90ca":"markdown"},"source":{"8be2fe62":"# Import necessary libraries\nimport pandas as pd\nimport datetime as dt\nimport matplotlib.pyplot as plt\nimport geopandas as gpd \nimport seaborn as sns\nsns.set_style('darkgrid')\nsns.set_context('notebook')","addd79d7":"#Read the data\ncountry_vaccinations = pd.read_csv('..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\ncountry_vaccinations.head()","341476b5":"#Examine column attributes of the data set\nprint(country_vaccinations.columns)","0f28fbb6":"#Check the number of rows and columns\ncountry_vaccinations.shape","80581d68":"#Check for missing data \ncountry_vaccinations.isna().sum()\n#Except for country, date and vaccines, rest all columns contain missing values. ","0c299248":"#Dropping columns that are not required, here source_name and source_website\ncountry_vaccinations.drop(['source_name', 'source_website'], axis = 1, inplace = True)\ncountry_vaccinations.head()","0127988a":"#Check the value counts in country column\ncountry_vaccinations.value_counts('country')","f219ceda":"#Check unique values in country column\ncountry_vaccinations.country.unique()","f10b6146":"#In country column, England,Scotland,Northern Ireland and Wales are part of UK, let us drop rows except UK\nindex_names = country_vaccinations[country_vaccinations.country.isin(['England', 'Scotland', 'Wales', 'Northern Ireland'])].index\ncountry_vaccinations.drop(index_names, inplace = True)","551e2e24":"#The data type of date is object, change it to datetime\nprint(country_vaccinations.date.dtype)","59f47803":"#Now convert the date to pandas datetime datatype format\ncountry_vaccinations['date'] = pd.to_datetime(country_vaccinations.date)\nprint(country_vaccinations.date.dtype)","7b046d6b":"country_by_vaccine = pd.DataFrame(country_vaccinations.groupby('country').vaccines.unique())\ncountry_by_vaccine","a3d96947":"fully_vaccinated = country_vaccinations.groupby('iso_code', as_index = False).people_fully_vaccinated.max()\nfully_vaccinated_sort = fully_vaccinated.sort_values(by = 'people_fully_vaccinated', ascending = False).head()\nchart1 = sns.catplot(x = 'iso_code', y = 'people_fully_vaccinated', data = fully_vaccinated_sort, kind = 'bar')\nplt.show()","ca063615":"#Import shapefile for world map\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n\n#Join the fully_vaccinated and world tables\nmerged_df1 = world.merge(fully_vaccinated, left_on = 'iso_a3', right_on = 'iso_code')\nmerged_df1['people_fully_vaccinated'].fillna(0, inplace = True)\nmerged_df1.head()","e8bc87a2":"#Represent people fully vaccinated metrics on the world map\nfig, ax = plt.subplots(1, figsize=(15, 8))\nax.axis('off')\nax.set_title('Chloropleth map depicting people fully vaccinated in various countries')\nmerged_df1.plot(edgecolor = 'black', column = 'people_fully_vaccinated',ax=ax,legend = True, cmap = 'viridis')\n","5ab74dc7":"total_vaccinations = country_vaccinations.groupby('country', as_index = False).total_vaccinations.max()\ntotal_vaccinations_sort = total_vaccinations.sort_values(by = 'total_vaccinations',ascending = False).head()\nchart2 = sns.catplot(x = 'country', y = 'total_vaccinations', data = total_vaccinations_sort, kind = 'bar')","4005c5f8":"vaccinations_per_day = country_vaccinations.groupby('country', as_index = False).daily_vaccinations.max()\nvacc_per_day_sorted = vaccinations_per_day.sort_values(by = 'daily_vaccinations', ascending = False).head()\nsns.catplot(x = 'country', y = 'daily_vaccinations', data = vacc_per_day_sorted, kind = 'bar')","a5f887fb":"#Select data entries for India \nIndia_stats = country_vaccinations.loc[country_vaccinations['country'] == 'India']\nIndia_stats.head()","8f7ecf76":"#Defining a function for plotting line plots\ndef plot_line(x, y, color, xlabel, ylabel, title):\n    fig, ax = plt.subplots()\n    fig.set_size_inches(10, 5)\n    plt.xticks(rotation = 90)\n    plt.xlabel(xlabel)\n    plt.ylabel(ylabel)\n    plt.title(title)\n    ax.plot(x, y, color = color)","62e6012c":"plot_line(India_stats.date, India_stats['total_vaccinations'],'blue', 'Date', 'Total vaccinations', 'Total vaccinations date-wise trend in India')","ffc74148":"plot_line(India_stats.date, India_stats['people_fully_vaccinated'], 'green', 'Date', 'People fully vaccinated', 'People fully vaccinated - date wise trend in India')","1e2dde5e":"plot_line(India_stats.date, India_stats['daily_vaccinations'], 'brown', 'Date', 'Daily vaccinations', 'Daily vaccinations date wise trend in India')","89586eaa":"# 3. Clean the data set","2b331d33":"# Covid Vaccination data analysis","a9be7689":" # 4. Perform data analysis\n         ","0122e6d6":"***Analysis on data for India***","c638ca97":"The subsequent analysis will help us answer questions like,\n* Which country is using what vaccine\/s?\n* In which countries vaccination program is advanced?\n* Where are people vaccinated the most per day?","b5b41dc1":"# 1. Read the data set","e5ad90ca":"# 2. Examine the data set"}}