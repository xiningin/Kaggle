{"cell_type":{"475a5c1a":"code","e0ed6f85":"code","2118f966":"code","da24a877":"code","a0705254":"code","6d53eb85":"code","5df0595d":"code","77e81e5a":"code","0963dd09":"code","c801ddb4":"code","e3fe7677":"code","2ac2bcd4":"code","723183e7":"code","ae6a0cb3":"code","0c488ba2":"code","9abdc35a":"code","ed5dabc5":"code","e8d093c7":"code","202bb93e":"code","a1eac08d":"code","ea05c4da":"code","3e775efa":"code","6f0ddca2":"code","da1a4ba7":"code","5f21e0c6":"code","55bcf03e":"code","bcc25b0f":"code","7b76be41":"code","7bdca1ee":"code","d040d5ac":"code","8e36b471":"code","5d15e0e1":"code","3a8145fa":"code","9ab0b139":"code","cf1863a8":"code","ab34fae1":"code","2254445c":"code","93b524bd":"code","5f030242":"code","8e948a2f":"markdown","83e094c5":"markdown","20e3051b":"markdown","2e8a50c5":"markdown","01977e24":"markdown","f648ec39":"markdown","55f9ce29":"markdown","f7483f00":"markdown","2b4c1a7b":"markdown","7ba4ecb5":"markdown","dd84e3d6":"markdown","326261c2":"markdown","8dcdce70":"markdown","da512df1":"markdown","deb029eb":"markdown","7e9047e7":"markdown","c2817bcf":"markdown","49cc733a":"markdown","ed54c1ef":"markdown","81cc72ab":"markdown","2c122672":"markdown","836cf0e9":"markdown","71e9e150":"markdown","83e14d73":"markdown","1d0758e9":"markdown","63184190":"markdown","aa241ef4":"markdown","c2794cf5":"markdown","19f5f3f7":"markdown","3180f72a":"markdown","f4c529dc":"markdown","c7a97215":"markdown","93dab397":"markdown","04dd186f":"markdown","86211445":"markdown","faa4ab27":"markdown","084afbcf":"markdown","6ad3f219":"markdown","0a0a6cd0":"markdown","e066b1b8":"markdown","4f368c46":"markdown","ee1f8162":"markdown","7f4cedf4":"markdown","bf3df98e":"markdown","1353de50":"markdown","f63e1c45":"markdown","a39de6ed":"markdown","02ea2e24":"markdown","e71e6366":"markdown","af273798":"markdown","a1fd24ba":"markdown","a9479ddb":"markdown"},"source":{"475a5c1a":"import pandas as pd\nimport math\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","e0ed6f85":"filepath = '..\/input\/students-performance-in-exams\/StudentsPerformance.csv'\ndata = pd.read_csv(filepath)","2118f966":"df= data.copy()\ndf.head()","da24a877":"df.info()","a0705254":"df.columns","6d53eb85":"df.rename(inplace = True,\n         columns = {\n             'race\/ethnicity':'ethnicity',\n             'parental level of education':'parental_level_of_education',\n             'test preparation course':'test_preparation_course',\n             'math score':'math_score',\n             'reading score':'reading_score',\n             'writing score':'writing_score'\n            })","5df0595d":"df.head()","77e81e5a":"df['average_score']= df[['math_score','reading_score','writing_score']].mean(axis = 1)","0963dd09":"df.describe()","c801ddb4":"def Grade(score):\n    if score >= 80 : return 'A'\n    if score >= 70 : return 'B'\n    if score >= 60 : return 'C'\n    if score >= 50 : return 'D'\n    if score >= 40 : return 'E'\n    else: return 'F'\ndf['math_grade'] = df.apply(lambda x: Grade(x[\"math_score\"]), axis = 1)\ndf['reading_grade'] = df.apply(lambda x: Grade(x[\"reading_score\"]), axis = 1)\ndf['writing_grade'] = df.apply(lambda x: Grade(x[\"writing_score\"]), axis = 1)\ndf['average_grade'] = df.apply(lambda x: Grade(x[\"average_score\"]), axis = 1)","e3fe7677":"df.head()","2ac2bcd4":"plt.figure(figsize=(14, 7))\nlabels=df['math_grade'].value_counts().index\nplt.pie(df['math_grade'].value_counts().values,labels=labels,explode=[0.05, 0.05, 0.05, 0.05, 0.05, 0.05],colors=[\"#EC6173\", \"#F1AE4A\", \"#E1DD6E\", \"#51A350\", \"#6964FF\", \"#BD63BE\"],\n        autopct='%1.1f%%', startangle=90)\nplt.title('Math Grade Pie Chart',fontsize=20,pad=40)\nplt.axis('equal')\nplt.show()","723183e7":"plt.figure(figsize=(10, 8))\nsns.distplot(df['math_score'], kde_kws = {'linewidth': 3})\nplt.show()","ae6a0cb3":"plt.figure(figsize=(10, 6))\nax = sns.countplot(y=\"math_grade\", order= ['A','B','C','D','E','F'], hue=\"gender\", data=df)","0c488ba2":"plt.figure(figsize=(14, 7))\nlabels=df['reading_grade'].value_counts().index\nplt.pie(df['reading_grade'].value_counts().values,labels=labels,explode=[0.05, 0.05, 0.05, 0.05, 0.05, 0.05],colors=[\"#EC6173\", \"#F1AE4A\", \"#E1DD6E\", \"#51A350\", \"#6964FF\", \"#BD63BE\"],\n        autopct='%1.1f%%', startangle=90)\nplt.title('Reading Grade Pie Chart',fontsize=20,pad=40)\nplt.axis('equal')\nplt.show()","9abdc35a":"plt.figure(figsize=(10, 6))\nsns.distplot(df['reading_score'], kde_kws = {'linewidth': 3})\nplt.show()","ed5dabc5":"plt.figure(figsize=(10, 6))\nax = sns.countplot(y=\"reading_grade\", order= ['A','B','C','D','E','F'], hue=\"gender\", data=df)","e8d093c7":"plt.figure(figsize=(14, 7))\nlabels=df['writing_grade'].value_counts().index\nplt.pie(df['writing_grade'].value_counts().values,labels=labels,explode=[0.05, 0.05, 0.05, 0.05, 0.05, 0.05],colors=[\"#EC6173\", \"#F1AE4A\", \"#E1DD6E\", \"#51A350\", \"#6964FF\", \"#BD63BE\"],\n        autopct='%1.1f%%', startangle=90)\nplt.title('Writing Grade Pie Chart',fontsize=20,pad=40)\nplt.axis('equal')\nplt.show()","202bb93e":"plt.figure(figsize=(10, 6))\nsns.distplot(df['writing_score'], kde_kws = {'linewidth': 3})\nplt.show()","a1eac08d":"plt.figure(figsize=(10, 6))\nax = sns.countplot(y=\"writing_grade\", order= ['A','B','C','D','E','F'], hue=\"gender\", data=df)","ea05c4da":"plt.figure(figsize=(14, 7))\nlabels=df['average_grade'].value_counts().index\nplt.pie(df['average_grade'].value_counts().values,labels=labels,explode=[0.05, 0.05, 0.05, 0.05, 0.05, 0.05],colors=[\"#EC6173\", \"#F1AE4A\", \"#E1DD6E\", \"#51A350\", \"#6964FF\", \"#BD63BE\"],\n        autopct='%1.1f%%', startangle=90)\nplt.title('Avg Grade Pie Chart',fontsize=20,pad=40)\nplt.axis('equal')\nplt.show()","3e775efa":"plt.figure(figsize=(10, 6))\nax = sns.countplot(y=\"average_grade\", order= ['A','B','C','D','E','F'], hue=\"gender\", data=df)","6f0ddca2":"plt.figure(figsize=(14, 7))\nlabels=df['ethnicity'].value_counts().index\nplt.pie(df['ethnicity'].value_counts().values,labels=labels,explode=[0.05, 0.05, 0.05, 0.05, 0.05],colors=[\"#EC6173\", \"#F1AE4A\", \"#E1DD6E\", \"#51A350\", \"#6964FF\", \"#BD63BE\"],\n        autopct='%1.1f%%', startangle=90)\nplt.title('Ethnicity Pie Chart',fontsize=20,pad=40)\nplt.axis('equal')\nplt.show()","da1a4ba7":"plt.figure(figsize=(10, 6))\nax = sns.countplot(x=\"ethnicity\", order= ['group A','group B','group C','group D','group E'], hue=\"gender\", data=df)","5f21e0c6":"plt.figure(figsize=(10, 6))\nax = sns.countplot(x=\"parental_level_of_education\", order= ['some college','associate\\'s degree','high school','some high school','bachelor\\'s degree', 'master\\'s degree'], hue=\"gender\", data=df)","55bcf03e":"plt.figure(figsize=(10, 8))\nax = sns.countplot(x=\"parental_level_of_education\", order= ['some college','associate\\'s degree','high school','some high school','bachelor\\'s degree', 'master\\'s degree'], hue=\"ethnicity\", hue_order = ['group A','group B','group C','group D','group E'], data=df)","bcc25b0f":"plt.figure(figsize=(10, 6))\nax = sns.countplot(x=\"math_grade\", order= ['A','B','C','D','E','F'], hue=\"lunch\", data=df)","7b76be41":"plt.figure(figsize=(10, 6))\nax = sns.countplot(x=\"reading_grade\", order= ['A','B','C','D','E','F'], hue=\"lunch\", data=df)","7bdca1ee":"plt.figure(figsize=(10, 6))\nax = sns.countplot(x=\"writing_grade\", order= ['A','B','C','D','E','F'], hue=\"lunch\", data=df)","d040d5ac":"plt.figure(figsize=(10, 6))\nax = sns.countplot(x=\"average_grade\", order= ['A','B','C','D','E','F'], hue=\"lunch\", data=df)","8e36b471":"plt.figure(figsize=(10, 6))\nax = sns.countplot(x=\"math_grade\", order= ['A','B','C','D','E','F'], hue=\"test_preparation_course\",hue_order = ['completed', 'none'], data=df)","5d15e0e1":"plt.figure(figsize=(10, 6))\nax = sns.countplot(x=\"reading_grade\", order= ['A','B','C','D','E','F'], hue=\"test_preparation_course\", hue_order = ['completed', 'none'], data=df)","3a8145fa":"plt.figure(figsize=(10, 6))\nax = sns.countplot(x=\"writing_grade\", order= ['A','B','C','D','E','F'], hue=\"test_preparation_course\", hue_order = ['completed', 'none'], data=df)","9ab0b139":"plt.figure(figsize=(10, 6))\nax = sns.countplot(x=\"average_grade\", order= ['A','B','C','D','E','F'], hue=\"test_preparation_course\", hue_order = ['completed', 'none'], data=df)","cf1863a8":"from sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom xgboost import XGBRegressor","ab34fae1":"X = df.drop(['math_score', 'reading_score', 'writing_score', 'math_grade', 'reading_grade', 'writing_grade', 'average_score', 'average_grade'],axis=1)\ny = df[['math_score', 'reading_score', 'writing_score']]\nX = pd.get_dummies(X,columns=['gender','ethnicity','parental_level_of_education','lunch','test_preparation_course'])\nX.head()","2254445c":"train_X, test_X, train_y, test_y = train_test_split(X,y, test_size=0.3,random_state=10)","93b524bd":"forest_model = RandomForestRegressor(random_state=1)\nforest_model.fit(train_X, train_y)\npreds = forest_model.predict(test_X)\nprint(mean_squared_error(test_y, preds))","5f030242":"mse = []\nfor i in range(2,101):\n    model = KNeighborsClassifier(n_neighbors=i)\n    model.fit(train_X, train_y)\n    preds = model.predict(test_X)\n    mse.append(mean_squared_error(test_y, preds))\nprint(mean_squared_error(test_y, preds))","8e948a2f":"# **Plotting plots to see the scores in the tests**","83e094c5":"![R5520b69b6a77e113284f3f4d177aef53.jpg](attachment:R5520b69b6a77e113284f3f4d177aef53.jpg)","20e3051b":"We have a dataset containing some data on students, including the marks they get in some exams. Let's analyze them a bit, to try to understand if we can find some link between the various fields of this dataset and together let's try to predict them with some simple model.","2e8a50c5":"***Parental level of education***","01977e24":"First of all we take a look of the percentage of the scores","f648ec39":"Load the data","55f9ce29":"***Ethnicity***","f7483f00":"Create a copy of the dataset which i will work on and have took a look at tha data","2b4c1a7b":"Create a RandomForestRegressor model, try to predict with him and see the error of its predictions","7ba4ecb5":"***Test preparation course***","dd84e3d6":"Take a general look at the scores","326261c2":"First of all we take a look of the percentage of the scores","8dcdce70":"Create a new columns with a grade instead of a number mark for all the subjects","da512df1":"![OIP%20%281%29.jpg](attachment:OIP%20%281%29.jpg)","deb029eb":"# ***Let's Begin!***","7e9047e7":"Finally we see the difference of performance between males and females.","c2817bcf":"Import useful libraries","49cc733a":"See the titles of the columns","ed54c1ef":"Take a look to understand what are the dtype of the variables","81cc72ab":"***Math test***","2c122672":"**Feature engineering to make the model**","836cf0e9":"Now let's take a look at ethnicity and see how students are grouped by ethnicity","71e9e150":"**Data Viewing**","83e14d73":"Can lunch affect school performance? Let's try to figure it out with graphs","1d0758e9":"Finally we see the difference of performance between males and females","63184190":"![4987294282_a9194d7cd7.jpg](attachment:4987294282_a9194d7cd7.jpg)","aa241ef4":"***Lunch***","c2794cf5":"Get dummies from categorical variables and create y (which contains the variables we are going to predict)","19f5f3f7":"![R3202748fd2989b9669a61b1f142333f8.jpg](attachment:R3202748fd2989b9669a61b1f142333f8.jpg)","3180f72a":"**Thanks for whatching. This is the first notebook I publish so I would appreciate it if you could give me some suggestions for improvement. Thanks again for giving it a look and good kaggling!**","f4c529dc":"After having looked at the various tests separately, now let's look at them a little more generically with the percentage of the average score. First illustrated in a pie chart and then in a countplot","c7a97215":"![OIP%20%282%29.jpg](attachment:OIP%20%282%29.jpg)","93dab397":"Renaming some of the column's title for praticity","04dd186f":"First of all we take a look of the percentage of the scores","86211445":"Let's see if taking the preparation course is essential to get a good grade or you can also study independently","faa4ab27":"Secondly we observe the distribution of these scores.","084afbcf":"Import other libraries for modelling","6ad3f219":"Secondly we observe the distribution of these scores","0a0a6cd0":"![OIP.jpg](attachment:OIP.jpg)","e066b1b8":"Finally we see the difference of performance between males and females","4f368c46":"Create a KNeighborsClassifier model, try to predict with him and see the error of its predictions","ee1f8162":"***Average scores***","7f4cedf4":"Create a new variabile rapresenting tha average of the three subjects","bf3df98e":"***Writing test***","1353de50":"Split between training data and test data","f63e1c45":"# ***Data Engineering and modelling***","a39de6ed":"Secondly we observe the distribution of these scores","02ea2e24":"![CORI_Middle_School_Reading.jpg](attachment:CORI_Middle_School_Reading.jpg)","e71e6366":"Now let's see if the parental level of education influnce the scores at school.","af273798":"***Reading test***","a1fd24ba":"![brain_data.png](attachment:brain_data.png)","a9479ddb":"**Introduction**"}}