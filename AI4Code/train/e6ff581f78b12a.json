{"cell_type":{"7628c69a":"code","a0298edc":"code","bbf752ce":"code","768ab71c":"code","6e1e47a3":"code","5bbdedae":"code","567e5a99":"code","1361e1a7":"code","bcccd0f6":"code","26979269":"code","08774a2b":"code","5c5838a1":"code","13d28ca2":"code","28e2e4e0":"markdown","864387a8":"markdown","8abd024d":"markdown","8b37b59f":"markdown","50e8b71f":"markdown","96ac6428":"markdown","b842d7e5":"markdown","eead8f42":"markdown","42c70063":"markdown","38b2217c":"markdown","d27411bf":"markdown","f6d65208":"markdown","218b7cd7":"markdown"},"source":{"7628c69a":"import numpy as np \nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nfrom sklearn.model_selection import train_test_split\n# from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error as mse, mean_squared_log_error as msle,r2_score\n\nfrom math import sqrt\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a0298edc":"train = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")","bbf752ce":"tr_ex_obj = train.select_dtypes(exclude=object)\ndisplay(tr_ex_obj)","768ab71c":"nnum = tr_ex_obj.isnull().sum()\nnnum0 = nnum[nnum!=0]\nnnum0","6e1e47a3":"X, y =","5bbdedae":"#\u4e3b\u6210\u5206\u306e\u6570\u3092ncomp\u306b\u3066\u8a2d\u5b9a\u3057\u3001\u3053\u308c\u3092\u5f15\u6570\u3068\u3057\u3066\u4f7f\u3063\u3066\u4e3b\u6210\u5206\u5206\u6790\n#PCA(n_components=)\nncomp = \npca = ","567e5a99":"a = pd.DataFrame(pca.explained_variance_, index=[\"PC{}\".format(x + 1) for x in range(ncomp)], columns=[\"\u56fa\u6709\u5024\"])\na[\"\u5bc4\u4e0e\u7387\"] = a[\"\u56fa\u6709\u5024\"] \/ a[\"\u56fa\u6709\u5024\"].sum()\na[\"\u7d2f\u7a4d\u5bc4\u4e0e\u7387\"] = \"\"\nfor i in range(len(a[\"\u5bc4\u4e0e\u7387\"])):\n    if i != 0:\n        a.at[a.index[i],\"\u7d2f\u7a4d\u5bc4\u4e0e\u7387\"] = a.at[a.index[i], \"\u5bc4\u4e0e\u7387\"] + a.at[a.index[i-1], \"\u7d2f\u7a4d\u5bc4\u4e0e\u7387\"]\n    elif i == 0:\n        a.at[a.index[0], \"\u7d2f\u7a4d\u5bc4\u4e0e\u7387\"] = a.at[a.index[0], \"\u5bc4\u4e0e\u7387\"]\ndisplay(a)\nplt.subplots(facecolor='w', figsize=(8,5)) \nplt.grid()\nplt.plot(a.index, a[\"\u7d2f\u7a4d\u5bc4\u4e0e\u7387\"])\nplt.bar(a.index, a[\"\u5bc4\u4e0e\u7387\"], alpha=0.4)\nplt.show()","1361e1a7":"fuka = pd.DataFrame((-1)*pca.components_, columns=X.columns[:], index=[\"PC{}\".format(x + 1) for x in range(ncomp)]).T\nfuka","bcccd0f6":"tr_pca = pd.DataFrame((-1)*feature, columns=[\"PC{}\".format(x + 1) for x in range(ncomp)])\ndisplay(tr_pca)","26979269":"X1_train, X1_valid, y1_train, y1_valid = \nX2_train, X2_valid, y2_train, y2_valid = ","08774a2b":"# \u56de\u5e30\u30e2\u30c7\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\n# from sklearn.ensemble import RandomForestRegressor\nmod1 = \nmod2 = ","5c5838a1":"#\u691c\u8a3c\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u3001\u4e88\u6e2c\npredict1 = \npredict2 = \n\n#\u4e88\u6e2c\u3092\u4f7f\u7528\u3057\u3066\u3001rmse\nrmse1 = \nrmse2 = \n\n#\u4e88\u6e2c\u3092\u4f7f\u7528\u3057\u3066\u3001rmsle\nrmsle1 = \nrmsle2 = \n\n#\u4e88\u6e2c\u3092\u4f7f\u7528\u3057\u3066\u3001\u6c7a\u5b9a\u4fc2\u6570\nr2_1 = \nr2_2 = ","13d28ca2":"print(f\"\u30aa\u30ea\u30b8\u30ca\u30eb\u30c7\u30fc\u30bf rmse:{rmse1}   rmsle:{rmsle1}   R2:{r2_1}\")\nprint(f\"\u4e3b\u6210\u5206\u3000     \u3000 rmse:{rmse2}   rmsle:{rmsle2}   R2:{r2_2}\")","28e2e4e0":"\u4e3b\u6210\u5206\u8ca0\u8377\u91cf\u3092\u78ba\u8a8d","864387a8":"\u6b20\u640d\u5024\u306e\u3042\u308b\u7279\u5fb4\u91cf\u3092\u78ba\u8a8d","8abd024d":"## 8.\u4e3b\u6210\u5206\u306e\u6570\u3092\u52d5\u304b\u3057\u3066\u3001\u7cbe\u5ea6\u306e\u5909\u5316\u3092\u898b\u308b\n\u307e\u305f\u3001\u4e3b\u6210\u5206\u5206\u6790\u306b\u3088\u3063\u3066\u7279\u5fb4\u91cf\u3092\u6e1b\u3089\u3057\u3001\u7cbe\u5ea6\u306e\u5909\u5316\u3092\u78ba\u8a8d\u3059\u308b","8b37b59f":"## 1.\u6b20\u640d\u5024\u3092\u57cb\u3081\u308b","50e8b71f":"\u65b0\u305f\u306b\u4f5c\u6210\u3057\u305f\u4e3b\u6210\u5206\u3092\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3068\u3057\u3066\u5b9a\u7fa9","96ac6428":"\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u3092\u9664\u304f\u6570\u5024\u30c7\u30fc\u30bf\u306e\u307f\u306b\u7d5e\u308b","b842d7e5":"## 4.\u4e3b\u6210\u5206\u306e\u6570\u3092\u6307\u5b9a\u3057\u3066\u3001\u4e3b\u6210\u5206\u5206\u6790\u3092\u884c\u3046","eead8f42":"\u56fa\u6709\u5024\u3001\u5bc4\u4e0e\u7387\u3001\u7d2f\u7a4d\u5bc4\u4e0e\u7387\u3092\u78ba\u8a8d","42c70063":"## 6.\u30aa\u30ea\u30b8\u30ca\u30eb\u30c7\u30fc\u30bf\u3068\u4e3b\u6210\u5206\u306e2\u3064\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u6210","38b2217c":"## 2.\u7279\u5fb4\u91cf\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u30c7\u30fc\u30bf\u3092\u5206\u3051\u308b","d27411bf":"## 7.2\u3064\u306e\u30e2\u30c7\u30eb\u306e\u7cbe\u5ea6\u3092\u5404\u6307\u6a19\u304b\u3089\u78ba\u8a8d","f6d65208":"## 3.\u30c7\u30fc\u30bf\u3092\u6a19\u6e96\u5316\u3057\u3066\u78ba\u8a8d\u3059\u308b","218b7cd7":"## 5.\u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u691c\u8a3c\u30c7\u30fc\u30bf\u306b\u5206\u5272"}}