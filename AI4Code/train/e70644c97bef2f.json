{"cell_type":{"343e61ff":"code","7b242777":"code","6bd11000":"code","9514149e":"code","764b0452":"code","94a70858":"code","394feae7":"code","1a3556bd":"code","2fd07bf5":"code","4601bb3f":"code","5ec08775":"code","85997f7a":"code","5179f4b5":"code","bb7489dc":"code","0458f921":"code","58cdcd8e":"code","9da170c3":"code","5d4fed81":"code","e1778823":"code","88f80454":"code","a3aa5c2e":"code","593c6fd7":"code","6aba3864":"code","d7bac182":"code","ab43014a":"code","c5e4d8ae":"code","706ef6b6":"code","c177e8fc":"code","c73ab085":"code","d1f98abb":"code","a2aaef2a":"code","2d8f041a":"code","9c1ab93f":"code","4aa1f08d":"code","50cc1c9e":"code","198f130b":"code","907b2f0f":"code","8c382662":"code","086c6194":"code","a8c59070":"code","3a8f9268":"code","604bec22":"code","1cbf3e4e":"markdown","bb0d35f7":"markdown","aca9ebd4":"markdown","0426dbbd":"markdown","791d7820":"markdown","fa019a78":"markdown","20b2628f":"markdown","ec4a5888":"markdown","57ed2550":"markdown","8d7fe529":"markdown","3f17c67d":"markdown","298a18a3":"markdown","476c6a97":"markdown","65db4459":"markdown","59a10686":"markdown","fecbac9c":"markdown","5ebe898c":"markdown","ea9312e7":"markdown","f4ad95d2":"markdown","154842a9":"markdown","c4d9b09a":"markdown","54c2acf6":"markdown","0c002f60":"markdown","76378405":"markdown","98252b9e":"markdown","59198f5a":"markdown","00d0cebe":"markdown","38b12aef":"markdown","2e254584":"markdown","4274f41b":"markdown","dfe8b8cd":"markdown","7fc099c0":"markdown","a912fff4":"markdown","14155eea":"markdown","089c8b59":"markdown","87e3fbd6":"markdown","9098f321":"markdown","490d5bd1":"markdown","ac41dde7":"markdown","ec465fb0":"markdown","feced04a":"markdown","884e8bc6":"markdown","a055444f":"markdown","84ab88c8":"markdown","d9eddf79":"markdown","9fc7a27c":"markdown","5fe2e0d0":"markdown","378316b3":"markdown"},"source":{"343e61ff":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly \nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as py\nfrom plotly.offline import iplot\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","7b242777":"df = pd.read_csv('..\/input\/top-play-store-games\/android-games.csv')","6bd11000":"df.head()","9514149e":"df.shape","764b0452":"df.isnull().sum()","94a70858":"df.info()","394feae7":"df.describe()","1a3556bd":"df['installs'].value_counts()","2fd07bf5":"def in_thousand(install):\n    if install == '500.0 k':\n        return '0.5 M'\n    elif install == '100.0 k':\n        return '0.1 M'\n    else:\n        return install","4601bb3f":"df['installs']= df['installs'].apply(in_thousand)\n\ndf['installs']= df['installs'].str.replace( 'M', '').str.strip().astype('float')\n\ndf= df.rename(columns={'installs': 'installs_in_million'})\ndf['installs_in_million'].value_counts()","5ec08775":"df['price'].value_counts()","85997f7a":"df['paid'].value_counts()","5179f4b5":"df.drop('price', axis=1, inplace=True)","bb7489dc":"df.info()","0458f921":"df['category'].value_counts(normalize=True)","58cdcd8e":"#with Seaborn\n\nplt.figure(figsize=(10,4))\nsns.countplot(x = \"category\", data = df)\nplt.xticks(rotation = 45);","9da170c3":"#withPlotly\n\nfig = px.histogram(df, x=\"category\", title='Game Categories')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","5d4fed81":"df['total ratings'].describe()","e1778823":"#Histogram with Seaborn\n\nplt.figure(figsize = (10,6))\nsns.histplot(df['total ratings'], bins = 50);","88f80454":"#Histogram with Plotly\n\n\nfig = px.histogram(df, x= 'total ratings', title='Total Ratings of the Games')\n\nfig.show()","a3aa5c2e":"#Boxplot with Seaborn\n\nplt.figure(figsize=(15,5))\nsns.boxplot(data=df, x =\"total ratings\");","593c6fd7":"#Boxplot with Plotly\n\nfig = px.box(df, x= 'total ratings', hover_data = df[['title','category']])\nfig.update_traces(quartilemethod=\"inclusive\")\nfig.show()","6aba3864":"df['installs_in_million'].describe()","d7bac182":"plt.figure(figsize=(15,5))\nsns.histplot(data=df, x =\"installs_in_million\");","ab43014a":"fig = px.histogram(df, x= 'installs_in_million', title='Number of Game Install in Millions')\n\nfig.show()","c5e4d8ae":"fig = px.box(df, x= 'installs_in_million', hover_data = df[['title','category']])\nfig.update_traces(quartilemethod=\"inclusive\")\nfig.show()","706ef6b6":"df['paid'].value_counts(normalize=True)","c177e8fc":"values = [7, 1723]\nindex = [\"Paid\", \"Free\"]\n\nplt.figure(figsize=(7,5))\ny = values\nmylabels = index\nmyexplode = [0, 0]\n\nplt.pie(y, labels = mylabels, labeldistance=1.1, explode = myexplode, startangle=0, autopct='%1.1f%%')\n\nplt.show()","c73ab085":"paid_free= df['paid'].value_counts()\nlabel =['Free','Paid']\nfig = px.pie(paid_free, values=df['paid'].value_counts().values, names=label,\n             title='Paid & Free Games')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","d1f98abb":"total_ratings_by_category = df.groupby('category')['total ratings'].mean()\ntotal_ratings_by_category","a2aaef2a":"plt.figure(figsize=(10,6))\n\nsns.barplot(data = df, x = total_ratings_by_category.index, y = total_ratings_by_category.values)\nplt.xticks(rotation = 60);\nplt.show()","2d8f041a":"fig = px.bar(total_ratings_by_category, x= total_ratings_by_category.index, y=total_ratings_by_category.values, labels={'y':'Total Ratings'})\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","9c1ab93f":"install_by_category = df.groupby('category')['installs_in_million'].mean().sort_values(ascending =False)\ninstall_by_category","4aa1f08d":"plt.figure(figsize=(10,6))\n\nsns.barplot(data = df, x = install_by_category.index, y = install_by_category.values)\nplt.xticks(rotation = 60);\nplt.show()","50cc1c9e":"fig = px.bar(install_by_category, x= install_by_category.index, y=install_by_category.values, labels={'y':'Install in Millions'})\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","198f130b":"growth_by_category_30 = df.groupby('category')['growth (30 days)'].mean().sort_values(ascending = True)\ngrowth_by_category_30","907b2f0f":"fig = px.bar(growth_by_category_30, x= growth_by_category_30.index, y=growth_by_category_30, labels={'y':'Growth in 30 days'})\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","8c382662":"top_ranked_games = df[df['rank']<6][['rank','title','category', 'total ratings', 'installs_in_million', '5 star ratings']]\ntop_ranked_games","086c6194":"top_20 = df.sort_values(by='installs_in_million', ascending=False).head(20)\ntop_20","a8c59070":"fig = px.bar(top_20, x= 'title', y='installs_in_million', hover_data = top_20[['5 star ratings']], color='category')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","3a8f9268":"fig = px.scatter(top_20, x= 'installs_in_million', y='total ratings', hover_data = top_20[['5 star ratings']], color='category')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","604bec22":"fig = px.bar(top_20, x= 'title', y='total ratings', hover_data = top_20[['5 star ratings']], color='category')\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","1cbf3e4e":"## Analysis Part","bb0d35f7":"## Paid & Free Games","aca9ebd4":"---","0426dbbd":"## Top 20 Games","791d7820":"---","fa019a78":"- Almost all the games except 7 in this dataset are free games.","20b2628f":"- When we look at the price of the games almost %99 percent is free and there is not much number of sample in different prices to compares them by price.\n- Because of all this reason we can drop the price column since it doesn't have much to do with.\n- For coming steps first we are going to drop the price column.\n- Dropping a column or a row is one thing that we need to be very careful as making that decision.","ec4a5888":"- Games in the action, arcade and casual categories are installed significantly more than games in the trivia, casino and word categories.","57ed2550":"#  Top Games on Google Playstore - EDA","8d7fe529":"To summarize what we have got so far ;\n- We have got a dataset which has 1730 rows and 15 columns, about detailed information related top games on Google Playstore.\n- Since we don't have any null values and most commonly have numeric values, we are not going to need to many adjustments.\n- Even though it looks quite all right, to make an adjustment on the install column will make analyzing easier.\n- Another point that we might need to take care is that price and paid column have a lot in common. Most likely to study with one od them is going to be enough, which means we should drop one of them.\n- Just for further steps, to have in mind, we should be aware of the uneven distribution of the price column and the possible outliers on the rank column.","3f17c67d":"- It gives some information about the values but to see outliers let's use boxplot.","298a18a3":"## Overview Stage ","476c6a97":"## Total Ratings by Category","65db4459":"- Read the csv\n- Use necessary functions to get basic informations about the dataset","59a10686":"- Seaborn is more popular than Plotly but we can not get some certain inf about the certain values.","fecbac9c":" - In this study, we aimed to make an Exploratory Data Analysis (EDA) by using Top Games on Google Playstore dataset with very terse but clear explanations.","5ebe898c":"---","ea9312e7":"- Let's start with making making necessary adjustments. ","f4ad95d2":"- As we see on the both scatter and bar plot, having the most number of installation doesn't mean to have the most number of ratings.\n- To compare by the numbers ; While Candy Crush Saga and Subway Surfers have 1 billion installations, they have 31 and 35 million total ratings in order.\n- On the other hand Gerena Free Fire - World Series has 500 million installation which is half of the both Candy Crush Saga and the Subway Surfers, it has 86 million total ratings which is almost three times the total ratings for both Candy Crush Saga and the Subway Surfers.","154842a9":"- We are going to start by importing the libraries we will be using during the study and then can start to explore our dataset.","c4d9b09a":"## Top 5 Ranked Games By Category","54c2acf6":"- While the top 2 games have 1 Billion installation, following 12 games have 500 million installations.\n- Since the installation for top 2 games are very high, I would like to see the realtion between Intallation and the total ratings. ","0c002f60":"- Now, It is time to deep diving into our dataset.","76378405":"---","98252b9e":"- Even though having no null values in the dataset makes me very happy, it is very rare situation in the real world.\n- Since it is kind of a dream dataset, let's enjoy it together :)","59198f5a":"## Total Ratings","00d0cebe":"## Number of Installation by Category","38b12aef":"- For visualization I will be using both Seaborn and Plotly.","2e254584":"## Number of Game Install","4274f41b":"- To have null values in a dataset and the number of null values have very crucial effect on analyzing.\n- To be aware of the missing values, I would like to check the null values in the dataset.","dfe8b8cd":"- We are going to use both Seaborn and Plotly to have variety of visualization options.","7fc099c0":"- First thing drew my attention is the difference between mean and Q2.\n- If we have a look at the max, we easily can say thay possible outliers caused that difference.\n- Even though to see the outliers it is best way to use boxplot, I will be using both boxplot and the histogram.","a912fff4":"- Let's move on to the **analysis part**.","14155eea":"- The dataset has 1730 rows and 15 columns.","089c8b59":"- As a first step I will look at the game catogories.","87e3fbd6":"- We basically can say that we have a dataset which is about top games in Google Playstore including the titles, average ratings, numbers of installation, ratings and the price of each game.","9098f321":"---","490d5bd1":"- To see the total ratings for each category we are going to use groupby function in Pandas.","ac41dde7":"- According to output of info function, since we have mainly integers and the floats as data types, I can say that we have a easy-to-analyze dataset.\n- Another point which takes my attention immeadiately is that, even though 'installs' column exhibits the number of installation, it has object Dtype. \n- To avoid potential problems, we better change the type to integer or float.","ec465fb0":"- As a second step let's see the price and paid columns and decide which one is more necessary to continue with.","feced04a":"- As we said before they all have almost the same size only the two categories are slightly more than the others.","884e8bc6":"- We have rightly skewed distribution with possible outliers.\n- Candy Crush Saga with  1 Billion install and Clash of Clans with 500 Million installs shown in the box plot.\n- Size of the outliers definitely affect  mean value and distributions.\n- As mentioned above, it would be a good idea to use median based approach.","a055444f":"- As we have seen in the histogram, quite a lot of the ratings are in the 0 - 500.000 ratings range.\n- On the other hand ve have quite a number of outliers, which increases mean and put it further away from the median.\n- The difference between mean and the median which is made by outliers from max side another way to say that we have highly right skewed distribution.\n- Instead of using mean values, using the meadian is going to make much more sense for further analysis.","84ab88c8":"___All the best !___","d9eddf79":"- Even though many of thm have the same size, Game Card and the Game Word categories are little more than the others.","9fc7a27c":"- Game Action has way more total ratings copared with the others.","5fe2e0d0":" - All these were what I wanted to mention about the dataset.\n - Thank you for the dataset contributor for sharing this data which I had pleasure working on.\n - Since this is my first project on the Kaggle, I m so happy to share it with you.\n - Thank you for your time.I hope you all like it.\n \n","378316b3":"- Even though games in the action categories get more ratings and were installed more than games in the other categories, games in the casino category have more growth in 30 days. "}}