{"cell_type":{"0300b0ac":"code","5e77d783":"code","6aa7121e":"code","2b6f4ae3":"code","40fedd4d":"code","6675a57b":"code","949a96ae":"code","4be351ba":"code","58b3ddca":"code","5e1ce003":"code","87713e0c":"code","d939ce33":"code","75754fa0":"code","75acc23d":"code","48c44f60":"code","01f357b0":"code","316056f1":"code","51f178cc":"code","f21bb282":"code","b59dd6d2":"code","b513ba6f":"code","5a0bae84":"code","ce3ee573":"code","be69c2d4":"code","37ffc3af":"code","b207a2f0":"code","dce52bdd":"code","3e4da0c3":"code","955c32a4":"code","3e3ed035":"code","4c9c3dbc":"code","ec7ef277":"code","7cfb48a0":"code","1a60adac":"code","a7409cf0":"code","632d75ac":"markdown","58f195a3":"markdown","38f6dbd1":"markdown","ad962238":"markdown","6673c2fc":"markdown","242f9b24":"markdown"},"source":{"0300b0ac":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.cluster import KMeans\nfrom scipy.stats import norm, boxcox\nfrom scipy import stats","5e77d783":"df = pd.read_csv(\"\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\")\ndf.head()","6aa7121e":"# Cheking no. of rows and columns\n# name of columns.\n# type of each column\ndf.info()\n","2b6f4ae3":"# checking 5 number summary.\ndf.describe()","40fedd4d":"# Checking null\ndf.isnull().sum()","6675a57b":"# I am using blox plot to identify the outliers","949a96ae":"sns.boxplot(y=\"Annual Income (k$)\", data=df)","4be351ba":"Q1 = df['Annual Income (k$)'].quantile(0.25)\nQ3 = df['Annual Income (k$)'].quantile(0.75)\nIQR = Q3 - Q1","58b3ddca":"low_lim = Q1 - 1.5 * IQR\nup_lim = Q3 + 1.5 * IQR\nprint('low_limit is', low_lim)\nprint('up_limit is', up_lim)","5e1ce003":"outlier = []\nfor x in df['Annual Income (k$)']:\n    if ((x> up_lim) or (x<low_lim)):\n         outlier.append(x)\nprint(' outlier in the dataset is', outlier)","87713e0c":"len(outlier)\n# there is only 2 outlier value","d939ce33":"# We are replacing outlier with median.\n# beacuse the total no. of observation are low.\n# so we can not drop those outliers value.\n# median are not affected by outlier.","75754fa0":"#replacing outlier value which is 137 with median=61.5\ndf.loc[df['Annual Income (k$)'] >= 137, 'Annual Income (k$)'] = 61.5","75acc23d":"#outlier is removed now\nsns.boxplot(y=\"Annual Income (k$)\", data=df)","48c44f60":"#checking outlier for Spending Score\nsns.boxplot(y=\"Spending Score (1-100)\", data=df)\n# no outlier","01f357b0":"#checking outlier for Age\nsns.boxplot(y=\"Age\", data=df)\n# no outlier","316056f1":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"Spending Score (1-100)\"], fit=norm, color=\"orange\")\nplt.title(\"Spending Score Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"Spending Score (1-100)\"], plot = plt)\nplt.show()","51f178cc":"# no need for skewness correction","f21bb282":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"Annual Income (k$)\"], fit=norm, color=\"orange\")\nplt.title(\"Annual Income (k$) Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"Annual Income (k$)\"], plot = plt)\nplt.show()","b59dd6d2":"# no need for skewness correction","b513ba6f":"sns.scatterplot(x=\"Annual Income (k$)\",\n                    y=\"Spending Score (1-100)\",\n                    data=df)","5a0bae84":"# making cluster on these two features 1. annual income 2. spending score","ce3ee573":"clus = df.iloc[:,[3,4]].values","be69c2d4":"# first we need to decide the number of cluster\n# for this we use elbow curve.\n# by seeing the elbow curve and ealier scater plot we can easily decide\n#how many cluster we accuanly need.","37ffc3af":"# wcss= within cluster sum of sqaures\n# we need to calculate the wcss beucase we need the elbow curve\n# to identify the no. of cluster requirement.\nwcss = []\n\nfor i in range(1,11):\n  kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)\n  kmeans.fit(clus)\n\n  wcss.append(kmeans.inertia_)","b207a2f0":"# draw elbow graph\n\nfig = plt.figure()\nax = fig.add_subplot(111, xlabel=\"Number of Clusters\", ylabel=\"WCSS\")\nplt.plot(range(1,11), wcss)\nplt.title('The Elbow Point Graph')\n\nplt.show()","dce52bdd":"# optimum value of cluster is 6\n# we choose the no. of cluster after which the decrease in wcss become low or almost constant.","3e4da0c3":"# training the k means algo\nkmeans = KMeans(n_clusters=6, init='k-means++', random_state=42)\n\n# return a label for each data point based on their cluster\nY = kmeans.fit_predict(clus)\n\nprint(Y)","955c32a4":"print(np.unique(Y))\n#no. of cluster","3e3ed035":"\nplt.figure(figsize=(10,8))\nplt.scatter(clus[Y==0,0], clus[Y==0,1], s=60, c='orange', label='Cluster 1')\nplt.scatter(clus[Y==1,0], clus[Y==1,1], s=60, c='red', label='Cluster 2')\nplt.scatter(clus[Y==2,0], clus[Y==2,1], s=60, c='lime', label='Cluster 3')\nplt.scatter(clus[Y==3,0], clus[Y==3,1], s=60, c='coral', label='Cluster 4')\nplt.scatter(clus[Y==4,0], clus[Y==4,1], s=60, c='blue', label='Cluster 5')\n\n# plot the centroids\nplt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], s=100, c='cyan', label='Centroids')\n\nplt.title('customer_segments')\nplt.xlabel('Annual_Income')\nplt.ylabel('Spending_Score')\nplt.show()","4c9c3dbc":"# In the above graph we have only 5 cluster and we accutaly write the code for 6 cluster.\n# so we can say that we only need 5 cluster.\n# now we will optimize our code to get 5 cluster.","ec7ef277":"# training the k means algo\nkmeans = KMeans(n_clusters=5, init='k-means++', random_state=42)\n\n# return a label for each data point based on their cluster\nY = kmeans.fit_predict(clus)\n\nprint(Y)","7cfb48a0":"print(np.unique(Y))\n#no. of cluster","1a60adac":"\nplt.figure(figsize=(10,8))\nplt.scatter(clus[Y==0,0], clus[Y==0,1], s=60, c='orange', label='Cluster 1')\nplt.scatter(clus[Y==1,0], clus[Y==1,1], s=60, c='red', label='Cluster 2')\nplt.scatter(clus[Y==2,0], clus[Y==2,1], s=60, c='lime', label='Cluster 3')\nplt.scatter(clus[Y==3,0], clus[Y==3,1], s=60, c='coral', label='Cluster 4')\nplt.scatter(clus[Y==4,0], clus[Y==4,1], s=60, c='blue', label='Cluster 5')\n\n# plot the centroids\nplt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], s=200, c='black')\n\nplt.title('customer_segments')\nplt.xlabel('Annual_Income')\nplt.ylabel('Spending_Score')\nplt.show()","a7409cf0":"# we can clearly see the 5 cluster with distinct sepration between each datapoints.\n# using this info we can run target advertisment for diffrent group with diffrent need.\n# to increase our sales and profit.\n# we can also decide to provide coupon and we can messure the effect of coupon on sales in diffrent groups.\n\n#done","632d75ac":"# Visualizing the annual income vs spending score.\n# This will help us in deciding how many cluster we need.","58f195a3":"# checking skewness for spending score","38f6dbd1":"**# treating the outliers.**","ad962238":"# Conclusion","6673c2fc":"**# checking skewness for Annual income**","242f9b24":"# checking outliers"}}