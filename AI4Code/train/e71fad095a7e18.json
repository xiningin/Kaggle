{"cell_type":{"0a800a2e":"code","c2f9aae0":"code","2ab93f91":"code","8d974b7c":"code","dbd2da39":"code","f9d9ba2c":"code","9dba21b5":"code","9600031b":"code","a1f96d92":"code","5698e965":"code","3618f67a":"code","b5325c18":"code","c940719b":"code","b5f6b1c0":"code","5435759f":"code","f7666e3f":"code","cede2d47":"code","fa0dd3a1":"code","10ebc404":"code","ceb2abbe":"code","458db8f2":"code","acffeb86":"code","62980665":"code","a527225d":"code","3edc8759":"code","b22f6bcd":"code","a59997fe":"code","3dae1996":"code","adc48563":"code","5f6baf4a":"code","4123e833":"code","21c55769":"code","6568402a":"code","1db813a3":"code","ef4b7897":"code","9aba7e2b":"code","44ebb9ca":"code","c5160424":"code","55225e62":"code","59ab7b57":"code","35837128":"code","e398697c":"code","9142d5bd":"code","e8f7114f":"code","eead87b9":"code","2a709e49":"code","39fab6e2":"code","8e6c9533":"markdown","6be658cd":"markdown","2765d815":"markdown","70cf82a3":"markdown","7947e01f":"markdown","5ab2bc8e":"markdown","48947818":"markdown","d04c5eb6":"markdown","f019bc18":"markdown","47b90713":"markdown","354ee593":"markdown","ccfa4cd9":"markdown","3ff5d578":"markdown","02653551":"markdown","15d825bc":"markdown","9b5fbbee":"markdown","20eaa78a":"markdown","c5a618c1":"markdown","ec5587b7":"markdown","c1fe5889":"markdown","c6572c65":"markdown","88eaacbc":"markdown","60b0d820":"markdown","059b99cb":"markdown","5580946b":"markdown","8a1aed13":"markdown","3ecfef21":"markdown","10afa833":"markdown","6a1873d6":"markdown","6431f2d8":"markdown","5a92d467":"markdown","2daeeaf2":"markdown","3646da32":"markdown","41155e72":"markdown","c70ca159":"markdown","edacc979":"markdown","09845785":"markdown","ef0b0e04":"markdown","5318a843":"markdown","7912407b":"markdown","79a78648":"markdown"},"source":{"0a800a2e":"# Librer\u00edas necesarias\n\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\n# Los archivos de datos est\u00e1n disponibles en el directorio \"..\/input\/\" \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c2f9aae0":"df = pd.read_csv(\"\/kaggle\/input\/covid19-symptoms-checker\/Cleaned-Data.csv\")\ndf.head()","2ab93f91":"df.tail()","8d974b7c":"print(\"Tama\u00f1o del dataset\", df.shape)\nprint(\"Filas:\",df.shape[0],\"\\nColumnas:\",df.shape[1])","dbd2da39":"df['Severity_None'].value_counts()","f9d9ba2c":"df['Severity_Mild'].value_counts()","9dba21b5":"df['Severity_Moderate'].value_counts()","9600031b":"df['Severity_Severe'].value_counts()","a1f96d92":"df.isnull().sum()","5698e965":"df.info()","3618f67a":"print(\"N\u00famero de valores que toma la caracter\u00edstica Country ->\")\ndf['Country'].unique()","b5325c18":"df.drop(\"Country\",axis=1,inplace=True)","c940719b":"df","b5f6b1c0":"df.hist(figsize=(30,30), edgecolor='black', color='darkseagreen')","5435759f":"severity_columns = df.filter(like='Severity_').columns","f7666e3f":"df['Severity_None'].replace({1:'None',0:'No'},inplace =True)\ndf['Severity_Mild'].replace({1:'Mild',0:'No'},inplace =True)\ndf['Severity_Moderate'].replace({1:'Moderate',0:'No'},inplace =True)\ndf['Severity_Severe'].replace({1:'Severe',0:'No'},inplace =True)","cede2d47":"df['Condition']=df[severity_columns].values.tolist()","fa0dd3a1":"df.head()","10ebc404":"def remove(lista):\n    lista = set(lista) \n    lista.discard(\"No\")\n    final = ''.join(lista)\n    return final","ceb2abbe":"df['Condition'] = df['Condition'].apply(remove)","458db8f2":"df.head()","acffeb86":"sns.countplot(df['Condition'], palette=\"pastel\")","62980665":"age_columns = df.filter(like='Age_').columns\ngender_columns = df.filter(like='Gender_').columns\ncontact_columns = df.filter(like='Contact_').columns","a527225d":"No_risk_age = df.groupby(['Severity_None'])[age_columns].sum()\nNo_risk_gender = df.groupby(['Severity_None'])[gender_columns].sum()\nNo_risk_contact = df.groupby(['Severity_None'])[contact_columns].sum()","3edc8759":"Low_risk_age = df.groupby(['Severity_Mild'])[age_columns].sum()\nLow_risk_gender = df.groupby(['Severity_Mild'])[gender_columns].sum()\nLow_risk_contact = df.groupby(['Severity_Mild'])[contact_columns].sum()","b22f6bcd":"Moderate_risk_age = df.groupby(['Severity_Moderate'])[age_columns].sum()\nModerate_risk_gender = df.groupby(['Severity_Moderate'])[gender_columns].sum()\nModerate_risk_contact = df.groupby(['Severity_Moderate'])[contact_columns].sum()","a59997fe":"Severe_risk_age = df.groupby(['Severity_Severe'])[age_columns].sum()\nSevere_risk_gender = df.groupby(['Severity_Severe'])[gender_columns].sum()\nSevere_risk_contact = df.groupby(['Severity_Severe'])[contact_columns].sum()","3dae1996":"df.head()","adc48563":"df.drop(severity_columns,axis=1,inplace=True)","5f6baf4a":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\ndf['Condition'] = le.fit_transform(df['Condition'])","4123e833":"df","21c55769":"sns.heatmap(df.corr(),annot=True,cmap='YlGnBu',linewidths=0.4) \nfig=plt.gcf()\nfig.set_size_inches(10,8)\nplt.show()","6568402a":"X= df.drop(['Condition', 'Age_0-9', 'Age_10-19', 'Age_20-24', 'Age_25-59', 'Age_25-59', 'Age_60+', 'Gender_Female', 'Gender_Male', 'Gender_Transgender', 'Contact_Dont-Know', 'Contact_No', 'Contact_Yes' ],axis=1)\ny= df['Condition']","1db813a3":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","ef4b7897":"print(\"Tama\u00f1o de X_train\",X_train.shape)\nprint(\"Tama\u00f1o de Y_train\",y_train.shape)\nprint(\"Tama\u00f1o de X_test\",X_test.shape)\nprint(\"Tama\u00f1o de Y_est\", y_test.shape)","9aba7e2b":"X_train.sample(frac=1)","44ebb9ca":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.layers import Dense, Dropout, Input\nfrom tensorflow.keras import models \nfrom tensorflow.keras.models import Sequential\nfrom keras.utils.np_utils import to_categorical","c5160424":"y_train = to_categorical(y_train, num_classes = 4)\ny_train.shape","55225e62":"y_test = to_categorical(y_test, num_classes=4)\ny_test.shape","59ab7b57":"y_test","35837128":"model=keras.models.Sequential()\nmodel.add(keras.layers.Dense(units= 32, input_shape=(11,),activation='relu'))\nmodel.add(keras.layers.Dense(units= 64,activation='relu'))\nmodel.add(keras.layers.BatchNormalization())\nmodel.add(keras.layers.Dense(units= 128,activation='relu'))\nmodel.add(keras.layers.BatchNormalization())\nmodel.add(keras.layers.Dropout(0.2))\nmodel.add(keras.layers.Dense(units= 32,activation='relu'))\nmodel.add(keras.layers.BatchNormalization())\nmodel.add(keras.layers.Dropout(0.1))\nmodel.add(keras.layers.Dense(units= 16,activation='relu'))\nmodel.add(keras.layers.Dense(units= 8,activation='relu'))\nmodel.add(keras.layers.Dense(4,activation='softmax'))","e398697c":"model.summary()","9142d5bd":"model.compile(loss='categorical_crossentropy',\n              optimizer='adam',\n              metrics=['accuracy'])","e8f7114f":"model.fit(X_train, y_train, epochs=40, batch_size=64, verbose=2, validation_data=(X_test, y_test))","eead87b9":"y_pred = model.predict(X_test)","2a709e49":"y_pred = np.argmax(y_pred,axis=1)","39fab6e2":"y_pred","8e6c9533":"Comprobamos todos los valores que toma la caracter\u00edstica Country","6be658cd":"Por \u00faltimo , vamos a mirar la correlaci\u00f3n entre caracter\u00edsiticas con un heatmap.","2765d815":"El conjunto de datos contiene **siete variables**\nA continuaci\u00f3n se muestra la descripci\u00f3n de cada variable:\n- Pa\u00eds: Lista de pa\u00edses visitados por la persona.\n- Edad: Clasificaci\u00f3n del grupo de edad para cada persona, seg\u00fan el est\u00e1ndar de grupos de edad de la OMS.\n- S\u00edntomas: fiebre, cansancio, dificultad para respirar, tos seca y dolor de garganta.\n- Experimente cualquier otro s\u00edntoma: dolores, congesti\u00f3n nasal, secreci\u00f3n nasal, diarrea y otros.\n- Gravedad: leve, moderada, grave\n- Contacto: \u00bfLa persona se ha puesto en contacto con alg\u00fan otro paciente de COVID-19?","70cf82a3":"Importamos las librer\u00edas necesarias de deep learning","7947e01f":"Miramos que n\u00famero de pacientes presentaron severidad suave","5ab2bc8e":"**ENTRENAMIENTO**\n\nEn el conjunto de las caracter\u00edsticas de entrada tenemos que eliminar la etqueta de salida. Adem\u00e1s quitamos otras columnas que creemos que no son necesarias.\n\nLa etiqueta de salida la guardamos en la variable y","48947818":"Realizamos un filtro para separar la severidad:\n- Solo puedes estar en None, Mild, Moderate y Severe \n- El resto se pondr\u00e1n a 'No'","d04c5eb6":"En el preprocesado de datos ya hemos eliminado varias columnas.\nAhora vamos a tranformar la variable categ\u00f3rica (Mild,None, Moderate y Severe) con la librer\u00eda LabelEncoder en una variable num\u00e9rica","f019bc18":"Ahora vamos a realizar el mismo procedimiento para agrupar caracter\u00edsticas en la edad, g\u00e9nero y tipo de contacto","47b90713":"Creamos otras tres para discernir entre Severity_Mild (severidad suave):\n- Con riesgo suave por la edad\n- Ccon riesgo suave por el g\u00e9nero\n- Con riesgo suave por el tipo de contacto","354ee593":"N\u00famero de pacientes presentaron severidad severa -> 79200","ccfa4cd9":"Podemos pensar que esta caracter\u00edstica no va a ser la m\u00e1s importante de entre las que tenemos. Vamos a quitarla de nuestro conjunto de datos","3ff5d578":"Creamos una categor\u00eda para la edad, otra para el g\u00e9nero y otra para el contacto en la que la severidad sea nula\n- Sin riesgo por la edad\n- Sin riesgo por el g\u00e9nero\n- Sin riesgo por el tipo de contacto","02653551":"OBSERVAMOS QUE TENEMOS LAS CARACTER\u00cdSTICAS REGULADAS EN EL N\u00daMERO. TENEMOS DATOS DE TODAS LAS ETIQUETAS.","15d825bc":"Comprobamos que tenemos todas las caracter\u00edsticas como enteros 0 o 1 dependiendo si el paciente presenta esa sintomatolog\u00eda o no.\nLa \u00fanica caracter\u00edstica que no corresponde con un valor entero es Country.","9b5fbbee":"Aplicamos a todas las columnas que empiezen por Severity_ (filtro) las condiciones anteriores","20eaa78a":"Mostramos las \u00faltimas 5 filas del conjunto de datos","c5a618c1":"Entrenamos nuestro modelo pas\u00e1ndole el conjunto de caracter\u00edsticas de entramiento y la salida final.","ec5587b7":"# COVID-19 Modelo Basado en S\u00edntomas","c1fe5889":"Conertimos la caracter\u00edstica de salida que podr\u00eda tomar el valor 0,1,2,3 a un vector con el valor 1 que representa la etiqueta y el resto a 0","c6572c65":"Definimos nuestro modelo con las siguientes layers","88eaacbc":"A\u00fan tenemos que quitar los valores a\u00f1adidos de 'No'. Creamos una funci\u00f3n para esto y la aplicamos","60b0d820":"Tenemos dos dos archivos CSV de datos:\n\n- Raw-Data: Este archivo contiene todas las posibles etiquetas categ\u00f3ricas de variables. Se utiliza para generar los datos limpios.\n- Datos limpios: Este archivo contiene todas las combinaciones posibles de datos de Raw-Data.csv, que se pueden utilizar para el an\u00e1lisis. La mayor\u00eda de las celdas contienen variables 0 y 1 dependiendo si la caracter\u00edstica es positiva o no.","059b99cb":"En nuestro dataframe tenemos una nueva condici\u00f3n que especifica el valor categ\u00f3rico de la severidad","5580946b":"Separar entre Severity_Moderate (severidad moderada):\n- Con riesgo moderado por la edad\n- Ccon riesgo moderado por el g\u00e9nero\n- Con riesgo moderado por el tipo de contacto","8a1aed13":"El n\u00famero de pacientes que presentaron severidad moderada-> 79200","3ecfef21":"Comprobamos cual es el resumen de las capas de nuestro modelo","10afa833":"Tomar\u00e1 el valor 0,1,2,3\n\n**0-None\n1-Mild\n2-Moderate\n3-Severe**","6a1873d6":"A\u00f1adimos como funci\u00f3n de p\u00e9rdida categorical_crossentropy\n\nTambi\u00e9n a\u00f1adimos como funci\u00f3n de optimizaci\u00f3n Gradient Descent\n\nFinalmente queremos obtener como m\u00e9trica el accuracy del problema.","6431f2d8":"Esta funci\u00f3n nos sirve para devolver la lista ordenada de forma aleatoria","5a92d467":"Como no tenemos ning\u00fan valor nulo, no realizamos ning\u00fan cambio inicial de los datos","2daeeaf2":"Imprimimos el n\u00famero del conjunto de datos que tenemos. En este caso enocntramos un **316800 instancias de diferentes pacientes y 27 caracter\u00edsticas de entrada** para cada paciente.","3646da32":"Realizamos un histograma para cada caracter\u00edstica. De esta manera podemos comprobar el n\u00famero de pacientes que han tenido s\u00edntomas como fiebre, cansancio o dificultad para respirar.\n\nTambi\u00e9n podemos mirar los rangos de edad de los pacientes o su g\u00e9nero.","41155e72":"Como la caracter\u00edstica importante Condition con valores None, Mild, Moderate y Severe ya la tenemos guardada en una \u00fanica variable de salida; vamos a borrar las otras 4 columnas que no necesitamos\n- Severity_Mild \n- Severity_None\n- Severity_Moderate\n- Severity_Severe","c70ca159":"En esta celda cargamos el archivo Cleaned-Data.csv, contiene informaci\u00f3n de cada paciente.\n\nMostramos las primeras 5 filas del conjunto de datos","edacc979":"Dividimos el conjunto de datos en test y entrenamiento","09845785":"Estos datos ayudar\u00e1n a identificar si alguna persona tiene una enfermedad por coronavirus o no en funci\u00f3n de algunos s\u00edntomas definidos. Estos s\u00edntomas se basan en las pautas dadas por la Organizaci\u00f3n Mundial de la Salud (OMS).","ef0b0e04":"Finalmente nos queda en la variable 'Condition' el valor de la severidad. Que ser\u00e1 nuestra caracter\u00edstica de salida del modelo","5318a843":"Primero vamos a realizar un an\u00e1lisis de los datos (Exploratory Data Analysis o EDA).\n\nPara comenzar controlamos el total de los valores nulos de las celdas.","7912407b":"Separar entre Severity_Severe (severidad severa):\n- Con riesgo severo por la edad\n- Ccon riesgo severo por el g\u00e9nero\n- Con riesgo severo por el tipo de contacto","79a78648":"Miramos que n\u00famero de pacientes presentaron ninguna severidad -> 79200"}}