{"cell_type":{"17fe09df":"code","bd2e6ae5":"code","958871ea":"code","833d9a4e":"code","3eee13e7":"code","60e8a674":"code","997969c6":"code","e76ad58a":"code","ce7ca65e":"code","9949e92b":"code","2b792b6a":"code","456bc8f9":"code","767368ca":"code","c528fbc1":"code","cfb64a7d":"code","225c7f1d":"code","22bf59ee":"code","50ec536b":"code","99f8a87c":"code","74645e01":"code","316f4187":"code","1bd49398":"code","d76e2dbe":"code","e023d159":"code","454cb4f6":"code","d9c61c0e":"code","336f316f":"code","608209bb":"code","88afa038":"code","7a0c2293":"markdown","59d0ed98":"markdown","51c945f9":"markdown","e8db55ff":"markdown","79277eb9":"markdown","256dff72":"markdown","ba062179":"markdown","ddfdc34f":"markdown"},"source":{"17fe09df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bd2e6ae5":"df = pd.read_csv('\/kaggle\/input\/heart-disease-uci\/heart.csv')\ndf.head()","958871ea":"df.info()","833d9a4e":"df.isna().sum(axis=0)","3eee13e7":"df = df.drop_duplicates()","60e8a674":"data = df.iloc[:,:-1]\ntarget = df['target']\n","997969c6":"import seaborn as sns\ng = sns.FacetGrid(data, col='sex', hue='sex')\ng.map(sns.histplot, 'age');","e76ad58a":"sns.countplot(x='sex', data=data);","ce7ca65e":"g = sns.FacetGrid(data, col='sex', hue='sex')\ng.map(sns.countplot, 'cp', order=data['cp'].value_counts().index);","9949e92b":"g = sns.FacetGrid(data, col='sex', hue='sex')\ng.map(sns.histplot, 'trestbps');","2b792b6a":"g = sns.FacetGrid(data, col='sex', hue='sex')\ng.map(sns.histplot, 'chol');","456bc8f9":"g = sns.FacetGrid(data, col='sex', hue='sex')\ng.map(sns.countplot, 'fbs', order=data['fbs'].value_counts().index);","767368ca":"g = sns.FacetGrid(data, col='sex', hue='sex')\ng.map(sns.countplot, 'restecg', order=data['restecg'].value_counts().index.sort_values());","c528fbc1":"g = sns.FacetGrid(data, col='sex', hue='sex')\ng.map(sns.histplot, 'thalach');","cfb64a7d":"g = sns.FacetGrid(data, col='sex', hue='sex')\ng.map(sns.countplot, 'exang', order=data['exang'].value_counts().index);","225c7f1d":"g = sns.FacetGrid(data, col='sex', hue='sex')\ng.map(sns.kdeplot, 'oldpeak');","22bf59ee":"g = sns.FacetGrid(data, col='sex', hue='sex')\ng.map(sns.countplot, 'ca', order=data['ca'].value_counts().index);","50ec536b":"g = sns.FacetGrid(data, col='sex', hue='sex')\ng.map(sns.countplot, 'thal', order=data['thal'].value_counts().index.sort_values());","99f8a87c":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nX_train, X_test, y_train, y_test = train_test_split(data, target, test_size=0.2)\nsc = StandardScaler()\nX_train_scaled = sc.fit_transform(X_train)\nX_test_scaled = sc.transform(X_test)","74645e01":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import GridSearchCV\nknc = KNeighborsClassifier()\nknc_params = {'n_neighbors':range(2, 50, 1)}\nknc = GridSearchCV(knc, knc_params)\nknc.fit(X_train_scaled, y_train)\nprint(knc.best_params_)\nknc_best = knc.best_estimator_.fit(X_train_scaled, y_train)\nknc_best.score(X_test_scaled, y_test)","316f4187":"y_pred = knc_best.predict(X_test_scaled)\npd.crosstab(y_test, y_pred, rownames=['y test'], colnames=['y pred'])","1bd49398":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","d76e2dbe":"from sklearn.svm import SVC\nsvc = SVC()\nsvc_params={'kernel':['rbf', 'linear'], 'C':[0.1, 1, 10, 50]}\nsvc = GridSearchCV(svc, svc_params)\nsvc.fit(X_train_scaled, y_train)\nprint(svc.best_params_)\nsvc_best = svc.best_estimator_.fit(X_train_scaled, y_train)\nsvc_best.score(X_test_scaled, y_test)","e023d159":"y_pred = svc_best.predict(X_test_scaled)\npd.crosstab(y_test, y_pred, rownames=['y test'], colnames=['y pred'])","454cb4f6":"print(classification_report(y_test, y_pred))","d9c61c0e":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier()\nrfc_params = {'max_features':['sqrt', 'log2', None], 'min_samples_split':range(2, 32, 2)}\nrfc = GridSearchCV(rfc, rfc_params)\nrfc.fit(X_train_scaled, y_train)\nprint(rfc.best_params_)\nrfc_best = rfc.best_estimator_.fit(X_train_scaled, y_train)\nrfc_best.score(X_test_scaled, y_test)","336f316f":"y_pred = rfc_best.predict(X_test_scaled)\npd.crosstab(y_test, y_pred, rownames=['y test'], colnames=['y pred'])","608209bb":"print(classification_report(y_test, y_pred))","88afa038":"from sklearn.ensemble import VotingClassifier\nvc = VotingClassifier(estimators=[('knc', knc_best), ('svc', svc_best), ('rfc', rfc_best)], voting='hard')\nvc.fit(X_train_scaled, y_train)\nvc.score(X_test_scaled, y_test)","7a0c2293":"## Normalisation des donn\u00e9es","59d0ed98":"## SVM","51c945f9":"# Heart disease classification","e8db55ff":"## KNeighborsClassifier","79277eb9":"## Dataviz","256dff72":"## Nettoyage des donn\u00e9es","ba062179":"## RandomForest","ddfdc34f":"## VotingClassifier"}}