{"cell_type":{"b350bc1b":"code","e9cfbc78":"code","c3bbb16e":"code","85c11cc8":"code","49214834":"code","af1dfe0c":"code","7b78da01":"code","45d7c629":"code","2450eda4":"code","444bb675":"code","9821ba47":"code","ba0348f1":"code","b5671129":"code","fb456957":"code","f9a4711e":"code","8bb3e794":"code","5b7b11e7":"code","4f8fe8a5":"code","0eccb203":"code","fa65e844":"code","30e674f8":"code","ffa36cae":"code","b30b591c":"code","db58cb68":"code","29b3ded4":"code","1cc54c48":"code","a5c7eb80":"code","e79de531":"code","20af2f80":"code","c12b5963":"code","a6ee7571":"code","d6675903":"code","28a1befc":"code","72c2ce91":"code","79088eb3":"code","03b08dc6":"code","671c23b3":"code","410e65f3":"code","c65b97bd":"code","eff9d764":"code","842857b1":"code","7cbef367":"code","d19e0dc0":"code","b7120f49":"code","f5092045":"code","08aff11a":"code","35a1e965":"code","c60e89bb":"code","5bc93b78":"code","0623a82a":"code","a3b6d12e":"code","c1b4fa07":"code","81f1c57f":"code","6fb113cd":"code","1254a47d":"code","3300df7a":"code","4fc45fcc":"code","692e9719":"code","4dced5af":"code","5653ea44":"code","4dc19617":"code","1e3154e7":"code","6aa17471":"code","65ba9c49":"code","e3f3c7a8":"code","a7f0132a":"code","7b703f3c":"code","732f8fd6":"code","1d19b97d":"code","781e254e":"code","13fc4e17":"code","9f001870":"code","aea19940":"code","3db98203":"code","c69ad7ce":"code","c29c5c6e":"code","e1744ce4":"code","81d51c67":"code","74ac0cf2":"code","483bd00b":"code","a418e678":"code","0bc240b0":"code","6cacdb5d":"markdown","c52d171b":"markdown","1c321c04":"markdown","7b2324d8":"markdown","c57fd339":"markdown","b5b15497":"markdown","4373fbcd":"markdown","3220663d":"markdown","8274f8b0":"markdown","13c157a3":"markdown","48149e9c":"markdown","42bbae5b":"markdown","1a0d37b7":"markdown","05958457":"markdown","f80b5195":"markdown","c4f7a30b":"markdown","915ddad5":"markdown","cc93ea8b":"markdown","08ffb653":"markdown","9b74829c":"markdown","598ee144":"markdown","dc40bb12":"markdown","db4045a3":"markdown","08ccd312":"markdown","5793fcc8":"markdown","e02fdbc6":"markdown","04195b72":"markdown","2571afbd":"markdown"},"source":{"b350bc1b":"import pandas as pd\nimport numpy as np\npd.set_option(\"max_columns\" , None)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.metrics import mean_squared_error\nimport xgboost as xgb\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nimport optuna\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.model_selection import KFold, cross_val_score\npd.set_option(\"display.float_format\", lambda x: \"%.3f\" % x)","e9cfbc78":"!pip install openpyxl","c3bbb16e":"color = ['#fdc029','#f7c14c','#f0c268','#e8c381','#dfc498',\n         '#d4c5af','#c6c6c6','#a6a6a8','#86868a','#68686d',\n         '#4b4c52','#303138','#171820']","85c11cc8":"train = pd.read_csv(\"..\/input\/dogus-teknoloji-zingat\/zingat_usecase_trainset.csv\")\ntest = pd.read_csv(\"..\/input\/dogus-teknoloji-zingat\/zingat_usecase_testset_null.csv\")\nsub = pd.read_csv(\"..\/input\/dogus-teknoloji-zingat\/sample_submission_zingat.csv\")\nefektifkur = pd.read_excel(\"..\/input\/indexler\/efektifkur.xlsx\")\nkfeist = pd.read_excel(\"..\/input\/indexler\/istanbulkfe.xlsx\")\nkfeizm = pd.read_excel(\"..\/input\/indexler\/izmirkfe.xlsx\")","49214834":"train.head()","af1dfe0c":"test.head()","7b78da01":"sub.head()","45d7c629":"kfeist.head()","2450eda4":"kfeizm.head()","444bb675":"efektifkur.head()","9821ba47":"train[\"g\u00fcncel_fiyat\"] = train[\"g\u00fcncel_fiyat\"].str.strip(\"TRY\")\ntrain[\"g\u00fcncel_fiyat\"] = train[\"g\u00fcncel_fiyat\"].astype(int)","ba0348f1":"train = train.rename(columns = {\"br\u00fctm\u00b2\":\"brutm2\"})\ntrain = train.rename(columns = {\"netm\u00b2\" :\"netm2\"})\ntrain = train.rename(columns = {\"g\u00fcncel_fiyat\" : \"price\"})\ntrain = train.rename(columns = {\"odasay\u0131s\u0131\" : \"oda\"})\ntrain = train.rename(columns = {\"binaya\u015f\u0131\" : \"binayasi\"})\ntrain = train.rename(columns = {\"bulundu\u011fukat\" : \"bulundugukat\"})\ntrain = train.rename(columns = {\"is\u0131tmatipi\" : \"isitmatipi\"})\ntrain = train.rename(columns = {\"\u0130nterkom\" : \"interkom\"})\ntrain = train.rename(columns = {\"depremy\u00f6netmeli\u011fineuygun\" : \"depremeuygunluk\"})\ntrain = train.rename(columns = {\"\u00c7ocukoyunalan\u0131\" : \"cocukalani\"})\ntrain = train.rename(columns = {\"asans\u00f6r\" : \"asansor\"})\ntrain = train.rename(columns = {\"giyinmeodas\u0131\" : \"giyinmeodasi\"})\ntrain = train.rename(columns = {\"Ilan_ID\" : \"id\"})\ntest = test.rename(columns = {\"br\u00fctm\u00b2\":\"brutm2\"})\ntest = test.rename(columns = {\"netm\u00b2\" :\"netm2\"})\ntest = test.rename(columns = {\"g\u00fcncel_fiyat\" : \"price\"})\ntest = test.rename(columns = {\"odasay\u0131s\u0131\" : \"oda\"})\ntest = test.rename(columns = {\"binaya\u015f\u0131\" : \"binayasi\"})\ntest = test.rename(columns = {\"bulundu\u011fukat\" : \"bulundugukat\"})\ntest = test.rename(columns = {\"is\u0131tmatipi\" : \"isitmatipi\"})\ntest = test.rename(columns = {\"\u0130nterkom\" : \"interkom\"})\ntest = test.rename(columns = {\"asans\u00f6r\" : \"asansor\"})\ntest = test.rename(columns = {\"depremy\u00f6netmeli\u011fineuygun\" : \"depremeuygunluk\"})\ntest = test.rename(columns = {\"\u00c7ocukoyunalan\u0131\" : \"cocukalani\"})\ntest = test.rename(columns = {\"giyinmeodas\u0131\" : \"giyinmeodasi\"})\ntest = test.rename(columns = {\"Ilan_ID\" : \"id\"})","b5671129":"print(str(\"Train Seti -- Ba\u015flang\u0131\u00e7:  \") + train.tarih.min() + str(\"  Biti\u015f:  \") + train.tarih.max())\nprint(str(\"Test Seti -- Ba\u015flang\u0131\u00e7:  \") + test.tarih.min() + str(\"  Biti\u015f:  \") + test.tarih.max())","fb456957":"print(f\"Train setinde {train.shape[0]} tane , test setinde ise {test.shape[0]} tane g\u00f6zlem var\")","f9a4711e":"train.info()","8bb3e794":"test.info()","5b7b11e7":"train.describe().T","4f8fe8a5":"test.describe().T","0eccb203":"## Eksik g\u00f6zlem var m\u0131 ?\n\ntrain.isna().sum()","fa65e844":"## Test seti eksik g\u00f6zlem var m\u0131 ? \n\ntest.isna().sum()","30e674f8":"features = [\"brutm2\",\"netm2\"]\ntrain[\"m2\"] = train[features].max(axis = 1)\ntest[\"m2\"] = test[features].max(axis = 1)","ffa36cae":"train.manzara.value_counts()","b30b591c":"b = train.manzara.str.split(\",\" , expand = True)\nb.columns = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\"]\nb.drop([\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\"] , axis = 1 , inplace = True)\nb.columns = [\"manzarasekli\"]\nb.loc[b[\"manzarasekli\"] == \"_\" , \"manzarasekli\"] = \"Yok\"\ntrain = (pd.merge(train, b, how = \"left\", left_index = True , right_index = True)).reset_index()","db58cb68":"a = test.manzara.str.split(\",\" , expand = True)\na.columns = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\"]\na.drop([\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\"] , axis = 1 , inplace = True)\na.columns = [\"manzarasekli\"]\na.loc[a[\"manzarasekli\"] == \"_\" , \"manzarasekli\"] = \"Yok\"\ntest = (pd.merge(test, a, how = \"left\", left_index = True , right_index = True)).reset_index()","29b3ded4":"test.drop([\"index\"], axis = 1 , inplace = True)\ntrain.drop([\"index\"], axis = 1 , inplace = True)","1cc54c48":"fig = plt.subplots(figsize = (16,6))\n\nsns.barplot(x = train[\"manzarasekli\"].value_counts().index, y = train[\"manzarasekli\"].value_counts().values, palette = color,\n           edgecolor = \"black\", linewidth = 1.5, saturation = 1.5)\nplt.title(\"Train seti i\u00e7in manzara da\u011f\u0131l\u0131m\u0131\");","a5c7eb80":"fig = plt.subplots(figsize = (16,6))\n\nsns.barplot(x = test[\"manzarasekli\"].value_counts().index, y = test[\"manzarasekli\"].value_counts().values, palette = color,\n           edgecolor = \"black\", linewidth = 1.5, saturation = 1.5)\nplt.title(\"Test seti i\u00e7in manzara da\u011f\u0131l\u0131m\u0131\");","e79de531":"a = train.path.str.split(\"\/\", expand = True)\na.columns = [\"Sehir\",\"Ilce\",\"Mahalle\"]\ntrain = (pd.merge(train, a, how = \"left\", left_index = True , right_index = True)).reset_index()","20af2f80":"b = test.path.str.split(\"\/\", expand = True)\nb.columns = [\"Sehir\",\"Ilce\",\"Mahalle\"]\ntest = (pd.merge(test, b, how = \"left\", left_index = True , right_index = True)).reset_index()","c12b5963":"test.drop([\"index\"], axis = 1 , inplace = True)\ntrain.drop([\"index\"], axis = 1 , inplace = True)","a6ee7571":"## \u00d6rne\u011fin \n\ntrain[(train.m2 < 15) & (train.emlaktipi == \"Daire\")]","d6675903":"## \u00d6rne\u011fin vol2\n## G\u00f6r\u00fcnen o ki Ba\u011fc\u0131lar'a bo\u011faz gelmi\u015f. Te\u015fekk\u00fcrler \u0130mamo\u011flu :d\n\ntrain[(train.Ilce == \"Ba\u011fc\u0131lar\") & (train.manzarasekli == \"Bo\u011faz\")]","28a1befc":"## Price ile alakal\u0131 olanlar\n\ntrain = train.drop(train[(train.price > 100000000) & (train.Ilce == \"Ba\u011fc\u0131lar\")].index)\ntrain = train.drop(train[(train.price < 80000) & (train.emlaktipi == \"Daire\") & (train.oda == \"3+1\")].index)\ntrain = train.drop(train[(train.price < 20000) & (train.emlaktipi == \"Daire\")].index)\ntrain = train.drop(train[(train.price < 20000) & (train.emlaktipi == \"Daire\") & (train.oda == \"2+1\")].index)\ntrain = train.drop(train[(train.price < 10000) & (train.emlaktipi == \"Daire\")].index)\ntrain = train.drop(train[(train.emlaktipi == \"Yal\u0131 Dairesi\") & (train.price < 500000)].index)\ntrain = train.drop(train[(train.price == 100000000 )].index)\ntrain = train.drop(train[(train.price < 100000) & (train.emlaktipi == \"Rezidans\")].index)\ntrain = train.drop(train[(train.price < 100000) & (train.emlaktipi == \"Villa\")].index)\n\n## M2 ile alakal\u0131 olanlar\n\ntrain = train.drop(train[(train.m2 < 200) & (train.emlaktipi == \"K\u00f6\u015fk \/ Konak \/ Yal\u0131\")].index)\ntrain = train.drop(train[(train.m2 < 15) & (train.emlaktipi == \"Daire\")].index)\ntrain = train.drop(train[(train.m2 < 15) & (train.emlaktipi == \"Villa\")].index)\ntrain = train.drop(train[(train.m2 < 15) & (train.emlaktipi == \"K\u00f6\u015fk \/ Konak \/ Yal\u0131\")].index)\ntrain = train.drop(train[(train.m2 > 1000) & (train.emlaktipi == \"Daire\")].index)\ntrain = train.drop(train[(train.m2 > 500) & (train.oda == \"1+1\")].index)\ntrain = train.drop(train[(train.m2 > 2000)].index)\ntrain = train.drop(train[(train.netm2 < 10)].index)\n\n## Ve di\u011ferleri\n\ntrain = train.drop(train[(train.id == 1845)].index)\ntrain = train.drop(train[(train.id == 2682)].index)\ntrain = train.drop(train[(train.id == 2682)].index)\ntrain = train.drop(train[(train.id == 3324)].index)\ntrain = train.drop(train[(train.id == 57167)].index)\ntrain = train.drop(train[(train.id == 36831)].index)\ntrain = train.drop(train[(train.id == 33259)].index)\ntrain = train.drop(train[(train.id == 18185)].index)\ntrain = train.drop(train[(train.id == 62507)].index)\ntrain = train.drop(train[(train.manzarasekli == \"Bo\u011faz\") & (train.Ilce == \"Beylikd\u00fcz\u00fc\")].index)\ntrain = train.drop(train[(train.manzarasekli == \"Bo\u011faz\") & (train.Ilce == \"Pendik\")].index)\ntrain = train.drop(train[(train.manzarasekli == \"Bo\u011faz\") & (train.Ilce == \"Ba\u011fc\u0131lar\")].index)","72c2ce91":"train.price = train.price.astype(int)\ntrain.shape","79088eb3":"df = pd.concat((train,test)).reset_index(drop = True)\ndf.tail()","03b08dc6":"def date(data) : \n    df[\"tarih\"] = pd.to_datetime(df[\"tarih\"])\n    df[\"Yil\"] = df.tarih.dt.year\n    df[\"Ay\"] = df.tarih.dt.month\n    df[\"Gun\"] = df.tarih.dt.day\n    df[\"YilinHaftasi\"] = df.tarih.dt.isocalendar().week","671c23b3":"date(df)\ndf.YilinHaftasi = df.YilinHaftasi.astype(int)","410e65f3":"efektifkur.head()","c65b97bd":"efektifkur.Kur = efektifkur.Kur.fillna(method = \"ffill\")","eff9d764":"efektifkur.Kur = efektifkur.Kur.fillna(method = \"bfill\")","842857b1":"b = efektifkur.Tarih.str.split(\"-\" , expand = True)\nb.columns = [\"Gun\",\"Ay\",\"Yil\"]\nab = (pd.merge(efektifkur, b, how = \"left\", left_index = True , right_index = True)).reset_index()\nab.drop([\"index\",\"Tarih\"], axis = 1 , inplace = True)\nab.Yil = ab.Yil.astype(int)\nab.Ay = ab.Ay.astype(int)\nab.Gun = ab.Gun.astype(int)\nab.Kur = ab.Kur.astype(float)","7cbef367":"df = (pd.merge(df, ab, how = \"left\", on = [\"Yil\",\"Ay\",\"Gun\"])).reset_index()\ndf.drop([\"index\"], axis = 1 , inplace = True)","d19e0dc0":"kfeizm.head()","b7120f49":"kfeist.head()","f5092045":"df = (pd.merge(df, kfeist, how = \"left\", on = [\"Yil\",\"Ay\",\"Sehir\"])).reset_index()\ndf = (pd.merge(df, kfeizm, how = \"left\", on = [\"Yil\",\"Ay\",\"Sehir\"])).reset_index()\n\ndf.drop([\"index\"], axis = 1 , inplace = True)","08aff11a":"df.kfeist = df.kfeist.fillna(0)\ndf.izmirkfe = df.izmirkfe.fillna(0)\ndf[\"kfe\"] = df.kfeist + df.izmirkfe\ndf.drop([\"kfeist\",\"izmirkfe\",\"level_0\"], axis = 1 , inplace = True)","35a1e965":"df.head()","c60e89bb":"## bulundugukat de\u011fi\u015fkeni i\u00e7in encode\n\ndf.loc[df[\"bulundugukat\"] == \"-\" , \"bulundugukat\"] = \"1\"\ndf.loc[df[\"bulundugukat\"] == \"1\" , \"bulundugukat\"] = \"1\"\ndf.loc[df[\"bulundugukat\"] == \"Bah\u00e7e kat\u0131\" , \"bulundugukat\"] = \"1\"\ndf.loc[df[\"bulundugukat\"] == \"Zemin Kat\" , \"bulundugukat\"] = \"1\"\ndf.loc[df[\"bulundugukat\"] == \"2\" , \"bulundugukat\"] = \"2\"\ndf.loc[df[\"bulundugukat\"] == \"3\" , \"bulundugukat\"] = \"2\"\ndf.loc[df[\"bulundugukat\"] == \"4\" , \"bulundugukat\"] = \"2\"\ndf.loc[df[\"bulundugukat\"] == \"5\" , \"bulundugukat\"] = \"2\"\ndf.loc[df[\"bulundugukat\"] == \"Teras Kat\" , \"bulundugukat\"] = \"2\"\ndf.loc[df[\"bulundugukat\"] == \"En \u00dcst Kat\" , \"bulundugukat\"] = \"2\"\ndf.loc[df[\"bulundugukat\"] == \"Kot 1\" , \"bulundugukat\"] = \"0\"\ndf.loc[df[\"bulundugukat\"] == \"Y\u00fcksek Giri\u015f\" , \"bulundugukat\"] = \"0\"\ndf.loc[df[\"bulundugukat\"] == \"Kot 3\" , \"bulundugukat\"] = \"0\"\ndf.loc[df[\"bulundugukat\"] == \"Kot 4\" , \"bulundugukat\"] = \"0\"\ndf.loc[df[\"bulundugukat\"] == \"Kot 2\" , \"bulundugukat\"] = \"0\"\ndf.loc[df[\"bulundugukat\"] == \"Bodrum Kat\" , \"bulundugukat\"] = \"0\"\ndf.loc[df[\"bulundugukat\"] == \"6\" , \"bulundugukat\"] = \"3\"\ndf.loc[df[\"bulundugukat\"] == \"7\" , \"bulundugukat\"] = \"3\"\ndf.loc[df[\"bulundugukat\"] == \"8\" , \"bulundugukat\"] = \"3\"\ndf.loc[df[\"bulundugukat\"] == \"9\" , \"bulundugukat\"] = \"3\"\ndf.loc[df[\"bulundugukat\"] == \"10\" , \"bulundugukat\"] = \"3\"\ndf.loc[df[\"bulundugukat\"] == \"11\" , \"bulundugukat\"] = \"4\"\ndf.loc[df[\"bulundugukat\"] == \"12\" , \"bulundugukat\"] = \"4\"\ndf.loc[df[\"bulundugukat\"] == \"13\" , \"bulundugukat\"] = \"4\"\ndf.loc[df[\"bulundugukat\"] == \"14\" , \"bulundugukat\"] = \"4\"\ndf.loc[df[\"bulundugukat\"] == \"15\" , \"bulundugukat\"] = \"4\"\ndf.loc[df[\"bulundugukat\"] == \"16\" , \"bulundugukat\"] = \"4\"\ndf.loc[df[\"bulundugukat\"] == \"17\" , \"bulundugukat\"] = \"4\"\ndf.loc[df[\"bulundugukat\"] == \"18\" , \"bulundugukat\"] = \"4\"\ndf.loc[df[\"bulundugukat\"] == \"19\" , \"bulundugukat\"] = \"4\"\ndf.loc[df[\"bulundugukat\"] == \"20 ve \u00fczeri\" , \"bulundugukat\"] = \"4\"\ndf.loc[df[\"bulundugukat\"] == \"M\u00fcstakil\" , \"bulundugukat\"] = \"5\"\ndf.loc[df[\"bulundugukat\"] == \"Giri\u015f Kat\u0131\" , \"bulundugukat\"] = \"1\"\ndf.loc[df[\"bulundugukat\"] == \"\u00c7at\u0131 Kat\u0131\" , \"bulundugukat\"] = \"1\"\ndf.loc[df[\"bulundugukat\"] == \"Komple\" , \"bulundugukat\"] = \"5\"\ndf.bulundugukat= df.bulundugukat.astype(int)","5bc93b78":"## binayasi de\u011fi\u015fkeni i\u00e7in encode\n\ndf.loc[df[\"binayasi\"] == \"0\" , \"binayasi\"] = \"3\"\ndf.loc[df[\"binayasi\"] == \"1\" , \"binayasi\"] = \"3\"\ndf.loc[df[\"binayasi\"] == \"2\" , \"binayasi\"] = \"3\"\ndf.loc[df[\"binayasi\"] == \"3\" , \"binayasi\"] = \"3\"\ndf.loc[df[\"binayasi\"] == \"4\" , \"binayasi\"] = \"3\"\ndf.loc[df[\"binayasi\"] == \"5\" , \"binayasi\"] = \"3\"\ndf.loc[df[\"binayasi\"] == \"-\" , \"binayasi\"] = \"1\"\ndf.loc[df[\"binayasi\"] == \"11-15 aras\u0131\" , \"binayasi\"] = \"2\"\ndf.loc[df[\"binayasi\"] == \"6-10 aras\u0131\" , \"binayasi\"] = \"2\"\ndf.loc[df[\"binayasi\"] == \"16-20 aras\u0131\" , \"binayasi\"] = \"1\"\ndf.loc[df[\"binayasi\"] == \"21-25 aras\u0131\" , \"binayasi\"] = \"1\"\ndf.loc[df[\"binayasi\"] == \"26-30 aras\u0131\" , \"binayasi\"] = \"1\"\ndf.loc[df[\"binayasi\"] == \"31-35 aras\u0131\" , \"binayasi\"] = \"0\"\ndf.loc[df[\"binayasi\"] == \"36-40 aras\u0131\" , \"binayasi\"] = \"0\"\ndf.loc[df[\"binayasi\"] == \"40 ve \u00fczeri\" , \"binayasi\"] = \"0\"\ndf.binayasi = df.binayasi.astype(int)","0623a82a":"## isitmatipi de\u011fi\u015fkeni i\u00e7in encode\n\ndf.loc[df[\"isitmatipi\"] == \"Yok\" , \"isitmatipi\"] = \"0\"\ndf.loc[df[\"isitmatipi\"] == \"Soba (Do\u011falgaz)\" , \"isitmatipi\"] = \"0\"\ndf.loc[df[\"isitmatipi\"] == \"Soba (K\u00f6m\u00fcr)\" , \"isitmatipi\"] = \"0\"\ndf.loc[df[\"isitmatipi\"] == \"Kat Kaloriferi\" , \"isitmatipi\"] = \"1\"\ndf.loc[df[\"isitmatipi\"] == \"Merkezi Sistem (Is\u0131 Pay\u0131 \u00d6l\u00e7er)\" , \"isitmatipi\"] = \"1\"\ndf.loc[df[\"isitmatipi\"] == \"Kombi (Do\u011falgaz)\" , \"isitmatipi\"] = \"1\"\ndf.loc[df[\"isitmatipi\"] == \"Kalorifer (Do\u011falgaz)\" , \"isitmatipi\"] = \"1\"\ndf.loc[df[\"isitmatipi\"] == \"Kombi (Elektrikli)\" , \"isitmatipi\"] = \"1\"\ndf.loc[df[\"isitmatipi\"] == \"Kalorifer (Akaryak\u0131t)\" , \"isitmatipi\"] = \"1\"\ndf.loc[df[\"isitmatipi\"] == \"Klima\" , \"isitmatipi\"] = \"2\"\ndf.loc[df[\"isitmatipi\"] == \"Kalorifer (K\u00f6m\u00fcr)\" , \"isitmatipi\"] = \"1\"\ndf.loc[df[\"isitmatipi\"] == \"Fancoil\" , \"isitmatipi\"] = \"1\"\ndf.loc[df[\"isitmatipi\"] == \"-\" , \"isitmatipi\"] = \"1\"\ndf.loc[df[\"isitmatipi\"] == \"Merkezi Sistem\" , \"isitmatipi\"] = \"1\"\ndf.loc[df[\"isitmatipi\"] == \"Fancoil\" , \"isitmatipi\"] = \"1\"\ndf.loc[df[\"isitmatipi\"] == \"Yerden Is\u0131tma\" , \"isitmatipi\"] = \"2\"\ndf.loc[df[\"isitmatipi\"] == \"Jeotermal\" , \"isitmatipi\"] = \"2\"\ndf.loc[df[\"isitmatipi\"] == \"G\u00fcne\u015f Enerjisi\" , \"isitmatipi\"] = \"2\"\ndf.isitmatipi = df.isitmatipi.astype(int)","a3b6d12e":"## De\u011fi\u015fkenlerdeki baz\u0131 durumlar\u0131 birle\u015ftiriyorum.Aralar\u0131nda yanl\u0131\u015f g\u00f6zlemler de mevcut.\n\ndf.loc[df[\"oda\"] == \"1149+0\" , \"oda\"] = \"3+1\"\ndf.loc[df[\"oda\"] == \"19+4\" , \"oda\"] = \"19+6\"\ndf.loc[df[\"oda\"] == \"12+3\" , \"oda\"] = \"14+3\"\ndf.loc[df[\"oda\"] == \"-\" , \"oda\"] = \"2+1\"\ndf.loc[df[\"emlaktipi\"] == \"Yal\u0131 Dairesi\" , \"emlaktipi\"] = \"K\u00f6\u015fk \/ Konak \/ Yal\u0131\"\n","c1b4fa07":"## otopark de\u011fi\u015fkeni i\u00e7in encode\n\ndf.loc[df[\"otopark\"] == \"Var (\u00dccretsiz, Kapal\u0131)\" , \"otopark\"] = \"1\"\ndf.loc[df[\"otopark\"] == \"Var (\u00dccretsiz, A\u00e7\u0131k)\" , \"otopark\"] = \"1\"\ndf.loc[df[\"otopark\"] == \"Var\" , \"otopark\"] = \"1\"\ndf.loc[df[\"otopark\"] == \"Var (\u00dccretli, Kapal\u0131)\" , \"otopark\"] = \"1\"\ndf.loc[df[\"otopark\"] == \"Var (\u00dccretli, A\u00e7\u0131k)\" , \"otopark\"] = \"1\" \ndf.loc[df[\"otopark\"] == \"Var (A\u00e7\u0131k,Kapal\u0131)\" , \"otopark\"] = \"1\"\ndf.loc[df[\"otopark\"] == \"-\" , \"otopark\"] = \"0\"\ndf.loc[df[\"otopark\"] == \"Yok\" , \"otopark\"] = \"0\"\ndf.otopark = df.otopark.astype(int)","81f1c57f":"## ikili de\u011fi\u015fkenler i\u00e7in encode\n\ndf.loc[df[\"interkom\"] == \"VAR\" , \"interkom\"] = \"1\"\ndf.loc[df[\"interkom\"] == \"YOK\" , \"interkom\"] = \"0\"\ndf[\"interkom\"] = df[\"interkom\"].astype(int)\n\ndf.loc[df[\"depremeuygunluk\"] == \"VAR\" , \"depremeuygunluk\"] = \"1\"\ndf.loc[df[\"depremeuygunluk\"] == \"YOK\" , \"depremeuygunluk\"] = \"0\"\ndf[\"depremeuygunluk\"] = df[\"depremeuygunluk\"].astype(int)\n\ndf.loc[df[\"asansor\"] == \"VAR\" , \"asansor\"] = \"1\"\ndf.loc[df[\"asansor\"] == \"YOK\" , \"asansor\"] = \"0\"\ndf[\"asansor\"] = df[\"asansor\"].astype(int)\n\ndf.loc[df[\"cocukalani\"] == \"VAR\" , \"cocukalani\"] = \"1\"\ndf.loc[df[\"cocukalani\"] == \"YOK\" , \"cocukalani\"] = \"0\"\ndf[\"cocukalani\"] = df[\"cocukalani\"].astype(int)\n\ndf.loc[df[\"giyinmeodasi\"] == \"VAR\" , \"giyinmeodasi\"] = \"1\"\ndf.loc[df[\"giyinmeodasi\"] == \"YOK\" , \"giyinmeodasi\"] = \"0\"\ndf[\"giyinmeodasi\"] = df[\"giyinmeodasi\"].astype(int)\n\ndf.loc[df[\"ebeveynbanyosu\"] == \"VAR\" , \"ebeveynbanyosu\"] = \"1\"\ndf.loc[df[\"ebeveynbanyosu\"] == \"YOK\" , \"ebeveynbanyosu\"] = \"0\"\ndf[\"ebeveynbanyosu\"] = df[\"ebeveynbanyosu\"].astype(int)\n\n","6fb113cd":"df.loc[df[\"banyosayisi\"] == \"6 ve \u00fczeri\" , \"banyosayisi\"] = \"6\"\ndf.loc[df[\"banyosayisi\"] == \"-\" , \"banyosayisi\"] = \"1\"\ndf.loc[df[\"banyosayisi\"] == \"0\" , \"banyosayisi\"] = \"1\"\ndf.banyosayisi = df.banyosayisi.astype(int)","1254a47d":"df.loc[df[\"manzarasekli\"] == \"Yok\" , \"manzarasekli\"] = \"0\"\ndf.loc[df[\"manzarasekli\"] == \"\u015eehir\" , \"manzarasekli\"] = \"0\"\ndf.loc[df[\"manzarasekli\"] == \"Cadde\" , \"manzarasekli\"] = \"0\"\ndf.loc[df[\"manzarasekli\"] == \"Do\u011fa\" , \"manzarasekli\"] = \"0\"\ndf.loc[df[\"manzarasekli\"] == \"Deniz\" , \"manzarasekli\"] = \"1\"\ndf.loc[df[\"manzarasekli\"] == \"Ye\u015fil Alan\" , \"manzarasekli\"] = \"1\"\ndf.loc[df[\"manzarasekli\"] == \"G\u00f6l\" , \"manzarasekli\"] = \"1\"\ndf.loc[df[\"manzarasekli\"] == \"Park\" , \"manzarasekli\"] = \"0\"\ndf.loc[df[\"manzarasekli\"] == \"G\u00f6l\" , \"manzarasekli\"] = \"1\"\ndf.loc[df[\"manzarasekli\"] == \"Havuz\" , \"manzarasekli\"] = \"1\"\ndf.loc[df[\"manzarasekli\"] == \"Da\u011f\" , \"manzarasekli\"] = \"0\"\ndf.loc[df[\"manzarasekli\"] == \"Vadi\" , \"manzarasekli\"] = \"1\"\ndf.loc[df[\"manzarasekli\"] == \"Nehir\" , \"manzarasekli\"] = \"1\"\ndf.loc[df[\"manzarasekli\"] == \"Bo\u011faz\" , \"manzarasekli\"] = \"2\"\ndf.manzarasekli = df.manzarasekli.astype(int)","3300df7a":"## kar\u015f\u0131m\u0131zda ba\u011f\u0131ml\u0131 de\u011fi\u015fkenimiz. modele de logaritmik \u015fekilde alaca\u011f\u0131m.\n\nsns.distplot(np.log1p(train.price) , hist = False , color = \"violet\");","4fc45fcc":"sns.distplot(train.m2 , hist = False , color = \"violet\");","692e9719":"fig = plt.subplots(figsize = (16,6))\n\nsns.barplot(x = train[\"emlaktipi\"].value_counts().index, y = train[\"emlaktipi\"].value_counts().values, palette = color,\n           edgecolor = \"black\", linewidth = 1.5, saturation = 1.5)\nplt.title(\"Emlak tipi\");","4dced5af":"plt.figure(figsize=(10, 12))\ncolors = [\"#66b3ff\",\"#99ff99\",\"#ffcc99\",\"#c2c2f0\",\"#ffb3e6\"]\n\nplt.subplot(2, 2, 1)\ndf[\"Sehir\"].value_counts().plot.pie(autopct = \"%1.2f%%\" ,colors = colors)\n\nplt.subplot(2, 2, 2)\ndf[\"Ilce\"].value_counts().plot.pie(autopct = \"%1.1f%%\" , colors = colors)\n\nplt.xticks(rotation = 90);","5653ea44":"plt.figure(figsize=(10, 12))\n\nplt.subplot(3, 3, 1)\ndf[\"binayasi\"].value_counts().plot.pie(autopct = \"%1.2f%%\" , colors = colors)\nplt.subplot(3, 3, 2)\ndf[\"bulundugukat\"].value_counts().plot.pie(autopct = \"%1.1f%%\" , colors = colors)\nplt.subplot(3, 3, 3)\ndf[\"isitmatipi\"].value_counts().plot.pie(autopct = \"%1.1f%%\" , colors = colors)\nplt.subplot(3, 3, 4)\ndf[\"banyosayisi\"].value_counts().plot.pie(autopct = \"%1.1f%%\" , colors = colors)\nplt.subplot(3, 3, 5)\ndf[\"otopark\"].value_counts().plot.pie(autopct = \"%1.1f%%\" , colors = colors)\nplt.subplot(3, 3, 6)\ndf[\"interkom\"].value_counts().plot.pie(autopct = \"%1.1f%%\" , colors = colors)\n\nplt.xticks(rotation = 90);","4dc19617":"plt.figure(figsize=(10, 12))\n\nplt.subplot(3, 3, 1)\ndf[\"depremeuygunluk\"].value_counts().plot.pie(autopct = \"%1.2f%%\" , colors = colors)\nplt.subplot(3, 3, 2)\ndf[\"asansor\"].value_counts().plot.pie(autopct = \"%1.1f%%\" , colors = colors)\nplt.subplot(3, 3, 3)\ndf[\"cocukalani\"].value_counts().plot.pie(autopct = \"%1.1f%%\" , colors = colors)\nplt.subplot(3, 3, 4)\ndf[\"giyinmeodasi\"].value_counts().plot.pie(autopct = \"%1.1f%%\" , colors = colors)\nplt.subplot(3, 3, 5)\ndf[\"ebeveynbanyosu\"].value_counts().plot.pie(autopct = \"%1.1f%%\" , colors = colors)\nplt.subplot(3, 3, 6)\ndf[\"manzarasekli\"].value_counts().plot.pie(autopct = \"%1.1f%%\" , colors = colors)\n\nplt.xticks(rotation = 90);","1e3154e7":"## Korelasyon matrisimiz\n\ndf4matrix = df[:train.shape[0]].drop([\"m2\"],axis = 1)\ncorrmatrix = df4matrix.corr()\nplt.figure(figsize = (12,6))\ncolumnz = corrmatrix.nlargest(11 , \"price\")[\"price\"].index\ncm = np.corrcoef(df4matrix[columnz].values.T)\nsns.set(font_scale = 1.1)\nhm = sns.heatmap(cm , cbar = True , annot = True , square = True ,\n                cmap = \"RdPu\" , fmt = \".2f\" , annot_kws = {\"size\" : 10} ,\n                 yticklabels = columnz.values , xticklabels = columnz.values)\nplt.show()","6aa17471":"df[\"m2ort\"] = (df.brutm2 + df.netm2) \/ 2\n\nfeatures = [\"netm2\",\"binayasi\",\"isitmatipi\",\"otopark\",\"interkom\",\"depremeuygunluk\",\"asansor\",\"cocukalani\",\"giyinmeodasi\",\n           \"ebeveynbanyosu\",\"m2\",\"Kur\"]\n\ndf[\"axscore\"] = df[features].sum(axis = 1)","65ba9c49":"## kullanmak istemedi\u011fim de\u011fi\u015fkenleri at\u0131yorum.\n\ndf = df.drop([\"tarih\",\"path\",\"binadakikatsay\u0131s\u0131\",\"brutm2\",\"manzara\",\"id\",\"price\"] , axis = 1)","e3f3c7a8":"df.head()","a7f0132a":"df = pd.get_dummies(df , columns = [\"oda\",\"emlaktipi\",\"Sehir\",\"Ilce\",\"Mahalle\"])","7b703f3c":"x_train = df[:train.shape[0]]\nx_test = df[train.shape[0]:]\ny = np.log1p(train.price.values)","732f8fd6":"X_train, X_test, y_train, y_test = train_test_split(x_train, y, test_size = 0.21 , random_state = 42)\n\nbasexgb = xgb.XGBRegressor().fit(X_train,y_train)","1d19b97d":"predx = basexgb.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, predx))","781e254e":"baserf = RandomForestRegressor().fit(X_train,y_train)\npredr = baserf.predict(X_test)\nnp.sqrt(mean_squared_error(y_test , predr))","13fc4e17":"def xgbobj(trial , data = x_train , target = y):\n    \n    X_train, X_test, y_train, y_test = train_test_split(data, target, test_size = 0.21 , random_state = 42)\n    params = {\n        \"n_estimators\": trial.suggest_int(\"n_estimators\",200,2000,100),\n        \"subsample\": trial.suggest_discrete_uniform(\"subsample\",0.6,1,0.1),\n        \"colsample_bytree\": trial.suggest_discrete_uniform(\"colsample_bytree\",0.6,1,0.1),\n        \"eta\": trial.suggest_loguniform(\"eta\",1e-3,0.1),\n        \"reg_alpha\": trial.suggest_int(\"reg_alpha\",1,50),\n        \"reg_lambda\": trial.suggest_int(\"reg_lambda\",5,100),\n        \"max_depth\": trial.suggest_int(\"max_depth\",5,20),\n        \"min_child_weight\": trial.suggest_int(\"min_child_weight\",5,20),\n    }\n    model = xgb.XGBRegressor(**params, tree_method = \"gpu_hist\",random_state=42)\n    model.fit(X_train,y_train,eval_set = [(X_test,y_test)] , verbose = False , eval_metric = \"rmse\")\n\n    y_preds = model.predict(X_test)\n    rmse = np.sqrt(mean_squared_error(y_test, y_preds))\n    \n    return rmse","9f001870":"study = optuna.create_study(direction = \"minimize\")\nstudy.optimize(xgbobj, n_trials = 15)\nprint(\"Number of finished trials:\", len(study.trials))\nprint(\"Best trial: score {}, params {}\".format(study.best_trial.value, study.best_trial.params))","aea19940":"OPTUNA_OPTIMIZATION = True","3db98203":"if OPTUNA_OPTIMIZATION:\n    display(optuna.visualization.plot_optimization_history(study))\n    display(optuna.visualization.plot_slice(study))\n    display(optuna.visualization.plot_parallel_coordinate(study))","c69ad7ce":"# K-Fold\n\nn_folds = 5\n\ndef rmsle_cv(model):\n    kf = KFold(n_folds, shuffle = True, random_state = 42).get_n_splits(x_train.values)\n    rmse = np.sqrt(-cross_val_score(model, x_train.values, y, scoring = \"neg_mean_squared_error\", cv = kf))\n    return(rmse)","c29c5c6e":"modelxgb = xgb.XGBRegressor(n_estimators = 1400 , subsample = 1.0 , colsample_bytree = 0.9 ,\n                      eta = 0.07457354470112766 ,reg_alpha = 1 , reg_lambda = 23 , max_depth = 12,\n                          min_child_weight = 19).fit(x_train , y)","e1744ce4":"xgbpred = np.expm1(modelxgb.predict(x_test))","81d51c67":"#score = rmsle_cv(modelxgb)\n#print(\"XGBoost CV Mean: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()))","74ac0cf2":"modelrf = RandomForestRegressor().fit(x_train , y)","483bd00b":"rfpred = np.expm1(modelrf.predict(x_test))","a418e678":"score = rmsle_cv(modelrf)\nprint(\"Random Forest CV Mean: {:.4f} ({:.4f})\\n\".format(score.mean(), score.std()))","0bc240b0":"sub.Expected = (0.7 * xgbpred) + (0.3 * rfpred)\n\nsub.to_csv(\"submission.csv\", index = False)\n\nsub.head()","6cacdb5d":"#### Test seti \u00fczerinde tahminler yap\u0131lmas\u0131, KFold \u00e7apraz do\u011frulama ve submission dosyas\u0131n\u0131n olu\u015fturulmas\u0131 :\n\n**Not** : Kendi localimde \u00e7al\u0131\u015ft\u0131\u011f\u0131m i\u00e7in optuna parametreleri ve sonu\u00e7lar farkl\u0131l\u0131k g\u00f6sterebilir.","c52d171b":"#### Random Forest Regressor","1c321c04":"#### D\u0131\u015f kaynakl\u0131 veriler\n\n1- Efektif D\u00f6viz kuru\n\n2- \u0130stanbul ve \u0130zmir i\u00e7in konut fiyat endexleri","7b2324d8":"Kalan veri \u00f6n i\u015fleme a\u015famalar\u0131na train ve test setlerini birle\u015ftirerek devam ediyoruz...","c57fd339":"Geri kalan veri \u00f6n i\u015fleme a\u015famalar\u0131na k\u0131sa bir ara... \u015eimdi tamamen kendi tespitlerimizle e\u011fitim setini ilgin\u00e7 g\u00f6zlemlerden ar\u0131nd\u0131raca\u011f\u0131z peki nedir bu ilgin\u00e7 g\u00f6zlemler ? Bunu anlayabilmek i\u00e7in baz\u0131 sorulara ihtiyac\u0131m\u0131z var :)\n\n**1-** T\u00fcrkiye \u015fartlar\u0131nda \u0130stanbul ve \u0130zmir'de de\u011feri 80.000TL'den d\u00fc\u015f\u00fck 3+1 ev bulmak ne kadar olanakl\u0131 ?\n\n**2-** M2'si 15'den d\u00fc\u015f\u00fck bir daire olabilir mi ?\n\n**3-** Ba\u011fc\u0131larda,Beylikd\u00fcz\u00fcnde,Pendikte bo\u011faz manzaral\u0131 bir daire olabilir mi ?\n\n**4-** De\u011feri 500.000TL'den d\u00fc\u015f\u00fck bir yal\u0131 d\u00fc\u015f\u00fcnebilir miyiz ?\n\nBu sorular\u0131 daha da \u00e7o\u011faltabiliriz fakat bu kadar \u00f6rneklendirme i\u00e7in yeterli diye d\u00fc\u015f\u00fcn\u00fcyorum. \u015eimdi bu g\u00f6zlemlere ula\u015fmaya \u00e7al\u0131\u015faca\u011f\u0131z ve bu g\u00f6zlemleri e\u011fitim setinden \u015futlayaca\u011f\u0131z :9\n\nBu a\u015famada biraz g\u00f6zlem kaybedece\u011fiz ama buna de\u011fece\u011fini d\u00fc\u015f\u00fcn\u00fcyorum. \u00c7\u00fcnk\u00fc tahminleri yanl\u0131\u015f y\u00f6nlendirebilecek tehlikeler bunlar.","b5b15497":"#### G\u0130R\u0130\u015e\n\nPandemi etkisiyle gayrimenkul sekt\u00f6r\u00fcnde de\u011fi\u015fen konut fiyatlar\u0131n\u0131 tahmin etmek istiyoruz.\nPayla\u015f\u0131lan veri setinde pandemi etkisi g\u00f6z \u00f6n\u00fcnde bulunduruldu\u011fu i\u00e7in Ocak 2019 tarihinden itibaren ev tipi ve fiyat\u0131n\u0131 etkileyen di\u011fer de\u011fi\u015fkenlerle birlikte g\u00fcncel fiyat tahminleme yap\u0131lmas\u0131 hedeflenmektedir.\n\nVeriseti toplam 99700 row ve 20 de\u011fi\u015fkenden olu\u015fmaktad\u0131r. Veri setindeki de\u011fi\u015fkenleri tan\u0131yal\u0131m.","4373fbcd":"#### Tarih De\u011fi\u015fkeni\n\nTarih de\u011fi\u015fkenini g\u00fcn\/ay\/y\u0131l olarak b\u00f6lece\u011fim ve ayr\u0131yetten y\u0131l\u0131n ka\u00e7\u0131nc\u0131 haftas\u0131 oldu\u011funu ekstra de\u011fi\u015fken olarak ekleyece\u011fim.","3220663d":"Vaktim oldu\u011funda notebook'a AutoML sonu\u00e7lar\u0131n\u0131 ve birka\u00e7 \u015fey daha eklemeye \u00e7al\u0131\u015faca\u011f\u0131m. Payla\u015ft\u0131k\u00e7a ben de bu sayede \u00e7ok \u015fey \u00f6\u011frenebiliyorum :) Te\u015fekk\u00fcr ediyorum herkesin eme\u011fine sa\u011fl\u0131k. Sonraki yar\u0131\u015fmalarda g\u00f6r\u00fc\u015fmek \u00fczere ^^  :3\n\n**In Progress...**","8274f8b0":"#### Manzara de\u011fi\u015fkeni\n\nManzara de\u011fi\u015fkenine bakt\u0131\u011f\u0131m\u0131z zaman \u00e7ok fazla unique g\u00f6zlem mevcut bu durum bizler i\u00e7in pek iyi say\u0131lmaz.\nBu durumdan kendimi kurtarmak i\u00e7in sadece virg\u00fclden \u00f6nceki ilk kelimeyi alaca\u011f\u0131m. Bunun sebebi de asl\u0131nda bu de\u011fi\u015fkende bizim i\u00e7in \u00f6nemli k\u0131s\u0131m, bo\u011faz manzaras\u0131 gibi fiyat\u0131 etkileyen pozitif korelasyonlu durumlar. Bo\u011faz manzaras\u0131 k\u0131sm\u0131 da genellikle ilk kelimeden gelmi\u015f de\u011fi\u015fkene, bu y\u00fczden sadece ilk kelimeyi kullanarak yeni bir de\u011fi\u015fken olu\u015fturaca\u011f\u0131m.","13c157a3":"![](http:\/\/gif-free.com\/uploads\/posts\/2017-05\/1493703506_spongebob-thumb-up.gif)","48149e9c":"#### Base Models\n\nBir\u00e7ok algoritma denedim ,bunlardan baz\u0131lar\u0131 : h2o AutoML,LightGBM,SVR,Catboost,FLAutoml .. Fakat bu algoritmalardan bekledi\u011fim ba\u015far\u0131y\u0131 g\u00f6remedim.Bu y\u00fczden notebooka da bunlar\u0131 koymayaca\u011f\u0131m.(Vakit bulursam ilerde ekleyece\u011fim)\n\nXGBoost ve Random Forest algoritmalar\u0131n\u0131 kullanaca\u011f\u0131m. \u0130lk olarak default parameter de\u011ferleriyle rmse skorlar\u0131na bakaca\u011f\u0131m sonra optimizasyon ve ensemble yaparak submission dosyas\u0131n\u0131 olu\u015fturaca\u011f\u0131m.","42bbae5b":"![](https:\/\/www.zirveinsaatyapi.com\/tema\/ziy\/images\/zingat.png)\n\n #### <span style=\"color: orange; font-family: Segoe UI; font-size: 1.7em; font-weight: 300;\">Do\u011fu\u015f Teknoloji - Zingat - Konut Fiyat Tahmin Modeli<\/span>\n\n------------------\n\n**Bu\u011fra Sebati Erdo\u011fan**\n\nGazi \u00dcniversitesi - M.Sc Istatistik\n\n*Ankara , Kas\u0131m 2021*","1a0d37b7":"#### XGBoost with Optuna Hyperparameters","05958457":"#### Submission","f80b5195":"#### Random Forest Predictions","c4f7a30b":"#### Dummy de\u011fi\u015fkenler \n\nKalan kategorik de\u011fi\u015fkenlerle dummy de\u011fi\u015fkenler olu\u015fturaca\u011f\u0131z. Dummy olu\u015facak de\u011fi\u015fkenler : oda , emlaktipi , sehir , ilce , mahalle","915ddad5":"#### Baz\u0131 A\u00e7\u0131klay\u0131c\u0131 G\u00f6rselle\u015ftirmeler","cc93ea8b":"#### Optuna\n\n\nHyperparameters optimizasyonunda optuna kullanaca\u011f\u0131m ve herkese de tavsiye ederim:)  Sadece XGBoost i\u00e7in optimizasyon yapabildim vakit problemleri sebebiyle, rf modelini default olarak kullanaca\u011f\u0131m. Optuna i\u00e7in 15 trial bir optimizasyon planl\u0131yorum. \n\nOptuna hakk\u0131nda daha fazla bilgi i\u00e7in : https:\/\/optuna.readthedocs.io\/en\/stable\/","08ffb653":"#### Path de\u011fi\u015fkeni\n\nBu de\u011fi\u015fkeni il-il\u00e7e-mahalle olarak ayr\u0131 ayr\u0131 de\u011fi\u015fkenler olarak ele alaca\u011f\u0131z. ","9b74829c":"#### 2 yeni de\u011fi\u015fken : M2ort ve Axscore\n\nbr\u00fctm2 ile netm2 aras\u0131ndaki denge i\u00e7in ortalama al\u0131p yeni bir de\u011fi\u015fken olu\u015fturdum.Bunun sebebi veri setini inceledi\u011fimizde brutm2 ve netm2 veri setinde bazen karmakar\u0131\u015f\u0131k girilmi\u015f bazen sadece brut girilmi\u015f net girilmemi\u015f vsvs. Bu de\u011fi\u015fken \u00e7ok mant\u0131kl\u0131 de\u011fil gibi g\u00f6r\u00fcnse de model i\u00e7in iyi bir de\u011fi\u015fken olabilir.\n\nAxscore de\u011fi\u015fkeni se\u00e7ti\u011fim baz\u0131 de\u011fi\u015fkenlerin axisdeki de\u011ferlerinin toplam\u0131ndan olu\u015fuyor. Bu de\u011fi\u015fken de model i\u00e7in iyi bir ba\u011f\u0131ms\u0131z de\u011fi\u015fken olacakt\u0131r. \n\n","598ee144":"Veri setini inceledikten sonra, ilk olarak ba\u011f\u0131ml\u0131 de\u011fi\u015fkendeki TRY'yi kald\u0131rarak ve de\u011fi\u015fken isimlerini t\u00fcrk\u00e7e karakterlerden ar\u0131nd\u0131rarak ba\u015fl\u0131yoruz...","dc40bb12":"#### Encode i\u015flemleri\n\nLabelEncoder kullanmak yerine de\u011fi\u015fkenleri kendim encode etmek istiyorum. Bunun sebebi ordinallik. Peki bu ordinallik bana ne sa\u011flayacak ? B\u00fct\u00fcn de\u011fi\u015fkenlerimiz say\u0131sal olarak artt\u0131\u011f\u0131 zaman ba\u011f\u0131ml\u0131 de\u011fi\u015fkenimizi de pozitif olarak etkileyebilecek durumda. Bunu g\u00f6z \u00f6n\u00fcnde bulundurarak , axis = 1 g\u00f6zlemler i\u00e7in bir toplam de\u011fi\u015fkeni olu\u015fturaca\u011f\u0131m. Bir nevi skorlama gibi d\u00fc\u015f\u00fcn\u00fclebilir, modele de iyi bir etki yapaca\u011f\u0131n\u0131 d\u00fc\u015f\u00fcn\u00fcyorum.\n\nBu skorlamay\u0131 bir sonraki a\u015famada yapaca\u011f\u0131z.\n\nA\u015fa\u011f\u0131daki encode i\u015flemlerinde, \u00f6zellikle fiyat\u0131 artt\u0131raca\u011f\u0131n\u0131 d\u00fc\u015f\u00fcnd\u00fc\u011f\u00fcm kategorilere say\u0131sal anlamda b\u00fcy\u00fck de\u011ferler vermeye \u00e7al\u0131\u015ft\u0131m (2-3 gibi). Kategoriler aras\u0131 farklar\u0131 olabildi\u011fince korumaya \u00e7al\u0131\u015ft\u0131m(olabildi\u011fince?!!!). K\u00fc\u00e7\u00fck bir \u00f6rnek vermek gerekirse binaya\u015f\u0131 0 olan kategoriye 3 de\u011ferini verdim, binaya\u015f\u0131 40+ olan kategoriye 0 de\u011ferini verdim. Bu fiyat ba\u011flam\u0131nda d\u00fc\u015f\u00fcnd\u00fc\u011f\u00fcm\u00fcz zaman iyi bir hareket diye d\u00fc\u015f\u00fcn\u00fcyorum.\u00c7\u00fcnk\u00fc eski bir binan\u0131n do\u011fal olarak fiyat\u0131 di\u011ferlerine g\u00f6re d\u00fc\u015f\u00fck olacakt\u0131r.(yal\u0131lar hari\u00e7 tabii ama bir yerden fedakarl\u0131k etmek gerekiyordu.)\n\n\u0130kili de\u011fi\u015fkenler i\u00e7in de 1 ve 0 de\u011ferleri ile encode yapt\u0131m bu de\u011ferleri de yine olumlu etkiyi 1 negatif etkiyi 0 olarak ald\u0131m.","db4045a3":"<table>\n<tr>\n    <th><center>De\u011fi\u015fken<\/center><\/th>\n    <th><center>A\u00e7\u0131klama<\/center><\/th>\n<\/tr>\n<tr>\n    <td><center>Ilan_ID<\/center><\/td>\n    <td><center> Her bir ilana ait ID numaralar\u0131n\u0131 i\u00e7eren de\u011fi\u015fkendir.<\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>Tarih<\/center><\/td>\n    <td><center>01.01.2019 Tarihinden itibaren ba\u015flayan zaman de\u011fi\u015fkenidir.<\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>Path<\/center><\/td>\n    <td><center>IL\/Ilce\/Mahalle\" format\u0131nda \u0130stanbul'daki 5 il\u00e7eyi bar\u0131nd\u0131ran object t\u00fcr\u00fcndeki de\u011fi\u015fkendir. <\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>G\u00fcncel_fiyat<\/center><\/td>\n    <td><center>TRY biriminde tahminlenmesi beklenen hedef de\u011fi\u015fkenimizdir.<\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>Odasay\u0131s\u0131<\/center><\/td> \n    <td><center>Evin sahip oldu\u011fu oda say\u0131s\u0131n\u0131 \"2+1\" veya \"3+1\" gibi \u00e7e\u015fitli yap\u0131larda bar\u0131nd\u0131ran de\u011fi\u015fkenimizdir.<\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>br\u00fctm\u00b2<\/center><\/td>\n    <td><center>S\u00f6z konusu evin br\u00fct olarak kaplad\u0131\u011f\u0131 alana ait bilgi i\u00e7eren de\u011fi\u015fkendir.<\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>netm\u00b2<\/center><\/td>\n    <td><center> S\u00f6z konusu evin net olarak kaplad\u0131\u011f\u0131 alan bilgisini i\u00e7eren de\u011fi\u015fkendir.<\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>Emlaktipi<\/center><\/td>\n    <td><center>Daire, rezidans, villa, m\u00fcstakil ev, Prefabrik Ev, Yal\u0131 Dairesi, K\u00f6\u015fk \/ Konak \/ Yal\u0131, \u00c7iftlik Evi veya Yazl\u0131k olup olmad\u0131\u011f\u0131n\u0131 i\u00e7eren de\u011fi\u015fkenlerdir. <\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>Binaya\u015f\u0131  <\/center><\/td>\n    <td><center>Bina ya\u015f\u0131n\u0131n hangi aral\u0131klarda oldu\u011fu bilgisini veren de\u011fi\u015fkendir.<\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>Bulundu\u011fukat<\/center><\/td>\n    <td><center>Evin binan\u0131n ka\u00e7\u0131nc\u0131 kat\u0131nda yer ald\u0131\u011f\u0131 bilgisini verir.<\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>Manzara<\/center><\/td>\n    <td><center>Cadde,Deniz,G\u00f6l, \u015eehir, Do\u011fa,Da\u011f, Park,Bo\u011faz,, Ye\u015fil Alan vb. \u00c7e\u015fitli kombinasyonlar\u0131ndan olu\u015fan ve birden fazla manzaraya da sahip olabilen de\u011fi\u015fkendir.<\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>Binadakikatsay\u0131s\u0131<\/center><\/td>\n    <td><center>1den 20ye kadar veya 10-20 aras\u0131 de\u011ferlerden olu\u015fmaktad\u0131r.<\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>Is\u0131tmatipi<\/center><\/td>\n    <td><center>Kombi (Do\u011falgaz), Merkezi Sistem (Is\u0131 Pay\u0131 \u00d6l\u00e7er), Merkezi Sistem, Kalorifer (Do\u011falgaz),Klima,Yerden Is\u0131tma,Kat Kaloriferi,Kalorifer(K\u00f6m\u00fcr), Yok,Fancoil, Kombi (Elektrikli), Soba (Do\u011falgaz),Soba (K\u00f6m\u00fcr),Kalorifer (Akaryak\u0131t), G\u00fcne\u015f Enerjisi, veya Jeotermal de\u011ferlerinden olu\u015fmaktad\u0131r.<\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>Banyosayisi<\/center><\/td>\n    <td><center>1den 6ya kadar de\u011ferlerden olu\u015fmaktad\u0131r.<\/center><\/td>\n<\/tr>\n<tr>\n    <td><center>Otopark<\/center><\/td>\n    <td><center>Var (\u00dccretsiz, Kapal\u0131), Yok, Var (\u00dccretsiz, A\u00e7\u0131k), Var, -, Var (A\u00e7\u0131k,Kapal\u0131), Var (\u00dccretli, A\u00e7\u0131k) ve Var (\u00dccretli, Kapal\u0131) de\u011ferlerinden olu\u015fmaktad\u0131r.<\/center><\/td>\n<\/tr>\n    <td><center>Di\u011fer De\u011fi\u015fkenler<\/center><\/td>\n    <td><center>Bu de\u011fi\u015fkenlere ek olarak; - \u0130nterkom, deprem y\u00f6netmeli\u011fineuygun,asans\u00f6r, \u00c7ocukoyunalan\u0131, giyinmeodas\u0131, ve ebeveynbanyosu isminde dummy(var\/yok) de\u011fi\u015fkenler mevcuttur.<\/center><\/td>\n<tr>\n<\/table>","08ccd312":"Ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerimiz art\u0131k haz\u0131r. Yava\u015f yava\u015f ML b\u00f6l\u00fcm\u00fcne ge\u00e7i\u015f yap\u0131yoruz.Bundan \u00f6nce train test geri ay\u0131rma ve ba\u011f\u0131ml\u0131 de\u011fi\u015fkeni log kullanaca\u011f\u0131m i\u00e7in log alma i\u015flemini yap\u0131yorum.","5793fcc8":"#### XGBoost Regressor","e02fdbc6":"#### Data Preprocessing ","04195b72":"#### M2 de\u011fi\u015fkenleri\n\nBrutm2 ve netm2 'deki farkl\u0131l\u0131klar\u0131 g\u00f6z \u00f6n\u00fcnde bulundurmak i\u00e7in ,ikisinden hangisinin max oldu\u011fu ile ilgili bir de\u011fi\u015fken olu\u015fturdum.\n\nBu durum \u00e7oklu do\u011frusall\u0131\u011fa yol a\u00e7abilir buna ilerleyen a\u015famalarda dikkat etmemiz gerekiyor.\n","2571afbd":"#### K\u00fct\u00fcphanelerin aktar\u0131lmas\u0131"}}