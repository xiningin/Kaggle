{"cell_type":{"f60ba6e8":"code","4ce53749":"code","c127f7ad":"code","9266bfe9":"code","a996472f":"code","310b6e3a":"code","fe8d04bb":"code","ff8dbabb":"code","c9cff704":"code","351e96fa":"markdown","68468a23":"markdown","47e79384":"markdown","d10838b9":"markdown","48fbca81":"markdown"},"source":{"f60ba6e8":"import numpy as np\nimport pandas as pd\nimport os\n\nfrom scipy.sparse import lil_matrix\nfrom sklearn.metrics import fbeta_score","4ce53749":"y_true = [0, 1, 2, 0, 1, 2]\ny_pred = [0, 2, 1, 0, 0, 1]","c127f7ad":"fbeta_score(y_true, y_pred, average='macro', beta=0.5)","9266bfe9":"y_true = [[0, 1], [1], [1, 2], [0], [1], [0, 2]]\ny_pred = [[0], [0, 2], [1, 2], [2], [0, 1], [1, 2]]","a996472f":"# fbeta_score(y_true, y_pred, average='macro', beta=0.5)\n# -> ValueError: You appear to be using a legacy multi-label data representation. Sequence of sequences are no longer supported; use a binary array or sparse matrix instead.","310b6e3a":"def label_to_sm(labels, n_classes):\n    sm = lil_matrix((len(labels), n_classes))\n    for i, label in enumerate(labels):\n        sm[i, label] = 1\n    return sm","fe8d04bb":"y_true_sm = label_to_sm(labels=y_true, n_classes=3)\ny_true_sm.toarray()","ff8dbabb":"y_pred_sm = label_to_sm(labels=y_pred, n_classes=3)\ny_pred_sm.toarray()","c9cff704":"fbeta_score(y_true_sm, y_pred_sm, average='macro', beta=0.5)","351e96fa":"## single-label\nexample from [scikit-learn fbeta_score](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.fbeta_score.html)","68468a23":"# Calculate F score on multi-label classification task with scikit-learn and scipy.sparse\n---","47e79384":"## multi-label","d10838b9":"yay!","48fbca81":"### Convert into sparse matrix"}}