{"cell_type":{"05156cfd":"code","2d00269f":"code","bd7a4ce9":"code","7644e4a6":"code","1c83848b":"code","4a7b2073":"code","2a2094d5":"code","295807f7":"code","f4271ef5":"code","ec2e5734":"code","bca88a6f":"code","58af3e14":"code","e5f4fcd3":"code","6cab88da":"code","d9bf5f83":"code","0fd72c58":"markdown","bf4d37e4":"markdown","742dff94":"markdown","1944ea15":"markdown","82c1e548":"markdown","4df02ba8":"markdown","0c06b498":"markdown"},"source":{"05156cfd":"import numpy as np \nimport pandas as pd \n\nimport sklearn.model_selection as model_selection\n\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.compose import make_column_transformer\n\n#For Missing Value Treatment\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.impute import KNNImputer\n\n#For Binning and creating Dummy Variables\nfrom sklearn.feature_selection import SelectKBest, chi2\nfrom sklearn.preprocessing import KBinsDiscretizer\n\nfrom sklearn.linear_model import LinearRegression\n\nfrom sklearn.metrics import mean_squared_error","2d00269f":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","bd7a4ce9":"train = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\nsub_test = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","7644e4a6":"train.head()","1c83848b":"y = train['SalePrice']\nX = train.drop(['SalePrice','Id'], axis = 1)","4a7b2073":"X_train, X_test, y_train, y_test = model_selection.train_test_split(X,y,test_size=0.2, random_state = 200)","2a2094d5":"#Condidering Numerical Features only\nnumerical_features = [c for c, dtype in zip(X.columns, X.dtypes) if dtype.kind in ['i','f'] ]\n\nprint('Numerical : ' + str(numerical_features))","295807f7":"#Data Processing Steps\npreprocessor = make_column_transformer(\n    \n    (make_pipeline(\n    KNNImputer(n_neighbors=10),\n    KBinsDiscretizer(n_bins = 6),\n    SelectKBest(chi2, k=15),\n    ), numerical_features)\n    \n)","f4271ef5":"#Model Steps\nregModel = make_pipeline(preprocessor, LinearRegression())","ec2e5734":"regModel.fit(X_train, y_train)","bca88a6f":"train_score = regModel.score(X_train,y_train)\ntest_score = regModel.score(X_test,y_test)\n\nprint(f'Train Accuracy : {train_score:.3f}')\nprint(f'Test Accuracy : {test_score:.3f}')","58af3e14":"#Check RMSE\ny_pred = regModel.predict(X_test)\nprint(f'RMSE : {np.sqrt(mean_squared_error(y_test, y_pred)):.0f}')","e5f4fcd3":"y_sub_pred = regModel.predict(sub_test.drop(['Id'], axis = 1))","6cab88da":"submission_df = pd.DataFrame({'Id' : sub_test['Id'], 'SalePrice' : y_sub_pred})","d9bf5f83":"submission_df.to_csv('Reg_Model_Pipeline.csv', index = False)\nsubmission_df.head()","0fd72c58":"# Fit Model","bf4d37e4":"# Import Data","742dff94":"# Build Pipeline","1944ea15":"# Import Libraries","82c1e548":"# Check Accuracy","4df02ba8":"# Make Submission","0c06b498":"# Split Data into Train and test "}}