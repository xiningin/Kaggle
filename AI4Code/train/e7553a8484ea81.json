{"cell_type":{"9f1f2452":"code","48df3623":"code","d1d77f7d":"code","02a3b879":"code","2cfdf6be":"code","b77ad3c8":"code","afa2175f":"code","260ee473":"code","48162994":"code","5a316323":"code","91f3cf95":"code","775388f1":"code","9bcf93c8":"code","d94961f1":"code","b58f19ad":"code","4cc4a46c":"code","12dba20a":"code","d57f872c":"code","b8315941":"code","b0ec11b1":"code","e3436614":"code","4184416c":"code","a90846f6":"code","d0000179":"code","bda8d2dc":"code","a10e0ba2":"code","9ac0b363":"code","db8cb2d9":"code","91ba44a6":"code","8cf949f2":"code","22f1b1ff":"code","8f0515ed":"code","2dc01dc8":"code","b297642f":"markdown","f93b25c0":"markdown","003c658c":"markdown","32b8ee3e":"markdown","4ed61d9e":"markdown","fd95b601":"markdown","69bfc96f":"markdown","4230f5a7":"markdown","3f7cdc78":"markdown","c2db1260":"markdown","b23b0879":"markdown","7bde015d":"markdown","c00dd991":"markdown","d80301e9":"markdown","f4f92a02":"markdown","c5bce081":"markdown","a9de3379":"markdown","3d0579d4":"markdown"},"source":{"9f1f2452":"import plotly as py\nfrom plotly.offline import plot, iplot, init_notebook_mode\nimport plotly.graph_objs as go\ninit_notebook_mode(connected=True)\nimport plotly.express as px\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\n\nimport folium\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport math\nimport random\nfrom datetime import timedelta\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#color pallettes\ncnf = '#393e46'\ndth = '#ff2e63'\nrec = '#21bf73'\nact = '#fe9801'","48df3623":"df = pd.read_csv('..\/input\/covid19-dataset\/covid_19_data_cleaned.csv', parse_dates=['Date'])\ndf.head()","d1d77f7d":"country_daywise = pd.read_csv('..\/input\/covid19-dataset\/country_daywise.csv', parse_dates=['Date'])\ncountry_daywise.head()","02a3b879":"countrywise = pd.read_csv('..\/input\/covid19-dataset\/countrywise.csv')\ncountrywise.head()","2cfdf6be":"daywise = pd.read_csv('..\/input\/covid19-dataset\/daywise.csv', parse_dates=['Date'])\ndaywise.head()","b77ad3c8":"ship_rows = (df[\"Country\"].str.contains(\"Grand Princess\")) | (df[\"Country\"].str.contains(\"Diamond Princess\")) | (df[\"Country\"].str.contains(\"MS Zaandam\")) | (df[\"Province\/State\"].str.contains(\"Grand Princess\")) | (df[\"Province\/State\"].str.contains(\"Diamond Princess\")) | (df[\"Province\/State\"].str.contains(\"MS Zaandam\"))\ndf = df[~ship_rows]","afa2175f":"ship_rows = (country_daywise[\"Country\"].str.contains(\"Grand Princess\")) | (country_daywise[\"Country\"].str.contains(\"Diamond Princess\")) | (country_daywise[\"Country\"].str.contains(\"MS Zaandam\"))\ncountry_daywise = country_daywise[~ship_rows]","260ee473":"ship_rows = (countrywise[\"Country\"].str.contains(\"Grand Princess\")) | (countrywise[\"Country\"].str.contains(\"Diamond Princess\")) | (countrywise[\"Country\"].str.contains(\"MS Zaandam\"))\ncountrywise = countrywise[~ship_rows]","48162994":"df.isnull().sum()","5a316323":"df['Province\/State'] = df['Province\/State'].fillna(\"\")\n\nconfirmed = df.groupby('Date').sum()['Confirmed'].reset_index()\nrecovered = df.groupby('Date').sum()['Recovered'].reset_index()\ndeaths = df.groupby('Date').sum()['Deaths'].reset_index()","91f3cf95":"df[\"Date\"] = df[\"Date\"].astype(str)","775388f1":"df.head()","9bcf93c8":"date_country = country_daywise.sort_values(by=[\"Date\", \"Country\"]).reset_index().drop(\"index\", axis=1)","d94961f1":"fig = px.choropleth(date_country, \n                    locations=\"Country\",\n                    locationmode=\"country names\",\n                    color=np.log(date_country[\"Confirmed\"]),\n                    hover_name=\"Country\", \n                    hover_data=[\"Confirmed\", \"Recovered\", \"Deaths\"],\n                    animation_frame=date_country[\"Date\"].dt.strftime(\"%Y-%m-%d\"),\n                    color_continuous_scale=\"YlOrRd\",\n                    range_color=[0, 16],\n                    projection='natural earth',\n                    title=\"Global Covid19 cases with Time Lapse\")\n\nfig.update(layout_coloraxis_showscale=True)\n\nfig.show()","b58f19ad":"df_map = df[df[\"Date\"] == max(df[\"Date\"])]\n\nworld_map = folium.Map(location=[11,0], tiles=\"Stamen Terrain\", zoom_start=1.5, max_zoom=6, min_zoom=1.5)\n\nfor i in range(0, len(df_map)):\n    folium.Circle(\n    location=[df_map.iloc[i][\"Lat\"], df_map.iloc[i][\"Long\"]],\n    fill=True,\n    radius=int(df_map.iloc[i][\"Confirmed\"]*0.1),\n    tooltip='<li><bold> Country: ' + str(df_map.iloc[i][\"Country\"])+\n            '<li><bold> Province\/State: ' + str(df_map.iloc[i][\"Province\/State\"])+\n            '<li><bold> Confirmed: ' + str(df_map.iloc[i][\"Confirmed\"])+\n            '<li><bold> Active: ' + str(df_map.iloc[i][\"Active\"])+\n            '<li><bold> Recovered: ' + str(df_map.iloc[i][\"Recovered\"])+\n            '<li><bold> Deaths: ' + str(df_map.iloc[i][\"Deaths\"]),\n    fill_color=\"red\",\n    color='red').add_to(world_map)\n    \nworld_map    ","4cc4a46c":"fig1 = px.line(daywise.sort_values(by=\"Date\"), x=\"Date\", y=\"Confirmed\", color_discrete_sequence=[act])\nfig2 = px.line(daywise.sort_values(by=\"Date\"), x=\"Date\", y=\"No. of Countries\", color_discrete_sequence=[dth])\n\nfig = make_subplots(rows=1, cols=2, shared_xaxes=True, horizontal_spacing=0.1,\n                    subplot_titles=(\"No. of New Cases Per Day\", \"No. of Countries Infected\"))\n\nfig.add_trace(fig1[\"data\"][0], row=1, col=1)\nfig.add_trace(fig2[\"data\"][0], row=1, col=2)\nfig.update_layout(paper_bgcolor='rgba(0,0,0,0)',\n                  plot_bgcolor='rgba(0,0,0,0)')\n\nfig.show()","12dba20a":"fig = {'data': [go.Bar(x=daywise[\"Date\"], y=daywise[\"Confirmed\"], name=\"Confirmed\"),\n                go.Bar(x=daywise[\"Date\"], y=daywise[\"Recovered\"], name=\"Recovered\"),\n                go.Bar(x=daywise[\"Date\"], y=daywise[\"Active\"], name=\"Active\"),\n                go.Bar(x=daywise[\"Date\"], y=daywise[\"Deaths\"], name=\"Deaths\")],\n       'layout': go.Layout(barmode='overlay', colorway=px.colors.qualitative.Set2,\n                           paper_bgcolor='rgba(0,0,0,0)',\n                           plot_bgcolor='rgba(0,0,0,0)')}\niplot(fig)","d57f872c":"fig1 = px.bar(countrywise.sort_values(by=\"Confirmed\").tail(10), x=\"Confirmed\", y=\"Country\",\n              text=\"Confirmed\", orientation=\"h\", color_discrete_sequence=[cnf])\nfig2 = px.bar(countrywise.sort_values(by=\"Deaths\").tail(10), x=\"Deaths\", y=\"Country\",\n              text=\"Deaths\", orientation=\"h\", color_discrete_sequence=[dth])\nfig3 = px.bar(countrywise.sort_values(by=\"Active\").tail(10), x=\"Active\", y=\"Country\",\n              text=\"Active\", orientation=\"h\", color_discrete_sequence=[act])\nfig4 = px.bar(countrywise.sort_values(by=\"Recovered\").tail(10), x=\"Recovered\", y=\"Country\",\n              text=\"Recovered\", orientation=\"h\", color_discrete_sequence=[rec])\n\nfig = make_subplots(rows=2, cols=2, shared_xaxes=False, horizontal_spacing=0.15, vertical_spacing=0.1,\n                    subplot_titles=(\"Confirmed Cases\", \"Death Cases\", \"Active Cases\", \"Recovered Cases\"))\n\nfig.add_trace(fig1[\"data\"][0], row=1, col=1)\nfig.add_trace(fig2[\"data\"][0], row=1, col=2)\nfig.add_trace(fig3[\"data\"][0], row=2, col=1)\nfig.add_trace(fig4[\"data\"][0], row=2, col=2)\n\nfig.update_layout(height=1000, plot_bgcolor='rgba(0,0,0,0)')\niplot(fig)","b8315941":"fig1 = px.bar(countrywise.sort_values(by='Recovered \/ 100 Cases').tail(10), x='Recovered \/ 100 Cases', y=\"Country\",\n              text='Recovered \/ 100 Cases', orientation=\"h\", color_discrete_sequence=[rec])\nfig2 = px.bar(countrywise.sort_values(by='Deaths \/ 100 Cases').tail(10), x='Deaths \/ 100 Cases', y=\"Country\",\n              text='Deaths \/ 100 Cases', orientation=\"h\", color_discrete_sequence=[dth])\n\nfig = make_subplots(rows=1, cols=2, shared_xaxes=False, horizontal_spacing=0.15, vertical_spacing=0.1,\n                    subplot_titles=('Recovered \/ 100 Cases', 'Deaths \/ 100 Cases'))\n\nfig.add_trace(fig1[\"data\"][0], row=1, col=1)\nfig.add_trace(fig2[\"data\"][0], row=1, col=2)\n\nfig.update_layout(plot_bgcolor='rgba(0,0,0,0)')\niplot(fig)","b0ec11b1":"countrywise.at[36, \"Population\"] = 1.393*10e9\ncountrywise.at[79, \"Population\"] = 1.353*10e9","e3436614":"filtered_countries = countrywise[countrywise[\"Confirmed\"] >= 100]","4184416c":"filtered_countries[\"Confirmed Cases Per Capita\"] = filtered_countries[\"Confirmed\"]\/filtered_countries[\"Population\"]\nfiltered_countries[\"Confirmed Cases Per Capita\"] = filtered_countries[\"Confirmed Cases Per Capita\"]*10e3\nfiltered_countries[\"Confirmed Cases Per Capita\"] = filtered_countries[\"Confirmed Cases Per Capita\"].round(2)","a90846f6":"fig1 = px.bar(filtered_countries.sort_values(by=\"Confirmed Cases Per Capita\", ascending=False).tail(10), x=\"Confirmed Cases Per Capita\", y=\"Country\",\n              text=\"Confirmed Cases Per Capita\", orientation=\"h\", color_discrete_sequence=[act])\nfig2 = px.bar(filtered_countries.sort_values(by=\"Confirmed Cases Per Capita\").tail(10), x=\"Confirmed Cases Per Capita\", y=\"Country\",\n              text=\"Confirmed Cases Per Capita\", orientation=\"h\", color_discrete_sequence=[cnf])\n\nfig = make_subplots(rows=1, cols=2, shared_xaxes=False, horizontal_spacing=0.15, vertical_spacing=0.1,\n                    subplot_titles=(\"Least Confirmed Cases Per Capita (by a factor of 3)\", \"Most Confirmed Cases Per Capita (by a factor of 3)\"))\n\nfig.add_trace(fig1[\"data\"][0], row=1, col=1)\nfig.add_trace(fig2[\"data\"][0], row=1, col=2)\n\nfig.update_layout(plot_bgcolor='rgba(0,0,0,0)')\nfor i in fig['layout']['annotations']:\n    i['font'] = dict(size=12)\niplot(fig)","d0000179":"fig = make_subplots(rows=4, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}],\n                                           [{'type':'domain'}, {'type':'domain'}],\n                                           [{'type':'domain'}, {'type':'domain'}],\n                                           [{'type':'domain'}, {'type':'domain'}]],\n                    vertical_spacing=0.08,\n                    subplot_titles=[\"Confirmed Cases\", \"Death Cases\", \"Active Cases\", \"Recovered Cases\", \n                                    'Recovered \/ 100 Cases', 'Deaths \/ 100 Cases', \"Least Confirmed Cases Per Capita\", \"Most Confirmed Cases Per Capita\"])\n\nfig.add_trace(go.Pie(labels=countrywise.sort_values(by=\"Confirmed\").tail(10)[\"Country\"], \n                     values=countrywise.sort_values(by=\"Confirmed\").tail(10)[\"Confirmed\"], name=\"Confirmed\", \n                     marker_colors=px.colors.diverging.RdYlBu),1,1)\n\nfig.add_trace(go.Pie(labels=countrywise.sort_values(by=\"Deaths\").tail(10)[\"Country\"], \n                     values=countrywise.sort_values(by=\"Deaths\").tail(10)[\"Deaths\"], name=\"Deaths\",\n                     marker_colors=px.colors.diverging.RdYlBu),1,2)\n\nfig.add_trace(go.Pie(labels=countrywise.sort_values(by=\"Active\").tail(10)[\"Country\"], \n                     values=countrywise.sort_values(by=\"Active\").tail(10)[\"Active\"], name=\"Active\",\n                     marker_colors=px.colors.diverging.RdYlBu),2,1)\n\nfig.add_trace(go.Pie(labels=countrywise.sort_values(by=\"Recovered\").tail(10)[\"Country\"], \n                     values=countrywise.sort_values(by=\"Recovered\").tail(10)[\"Recovered\"], name=\"Recovered\",\n                     marker_colors=px.colors.diverging.RdYlBu),2,2)\n\nfig.add_trace(go.Pie(labels=countrywise.sort_values(by='Recovered \/ 100 Cases').tail(10)[\"Country\"], \n                     values=countrywise.sort_values(by='Recovered \/ 100 Cases').tail(10)['Recovered \/ 100 Cases'], name='Recovered \/ 100 Cases', \n                    marker_colors=px.colors.diverging.RdYlGn),3,1)\n\nfig.add_trace(go.Pie(labels=countrywise.sort_values(by='Deaths \/ 100 Cases').tail(10)[\"Country\"], \n                     values=countrywise.sort_values(by='Deaths \/ 100 Cases').tail(10)['Deaths \/ 100 Cases'], name='Deaths \/ 100 Cases', \n                     marker_colors=px.colors.diverging.RdYlGn),3,2)\n\nfig.add_trace(go.Pie(labels=filtered_countries.sort_values(by=\"Confirmed Cases Per Capita\", ascending=False).tail(10)[\"Country\"], \n                     values=filtered_countries.sort_values(by=\"Confirmed Cases Per Capita\", ascending=False).tail(10)[\"Confirmed Cases Per Capita\"], \n                     name=\"Confirmed Cases Per Capita\", marker_colors=px.colors.diverging.Spectral_r),4,1)\n\nfig.add_trace(go.Pie(labels=filtered_countries.sort_values(by=\"Confirmed Cases Per Capita\").tail(10)[\"Country\"], \n                     values=filtered_countries.sort_values(by=\"Confirmed Cases Per Capita\").tail(10)[\"Confirmed Cases Per Capita\"], \n                     name=\"Confirmed Cases Per Capita\", marker_colors=px.colors.diverging.Spectral),4,2)\n\nfig.update_layout(height=1200)\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+value\", textinfo='label', textposition='inside')\nfig.update(layout_title_text='Top 10 Countries In Each Category',\n           layout_showlegend=False)\n\nfor i in fig['layout']['annotations']:\n    i['font'] = dict(size=14)\n\nfig.show()","bda8d2dc":"countries = np.array([\"Australia\", \"New Zealand\", \"Singapore\", \"Malaysia\", \"Indonesia\",\n             \"Vietnam\", \"Cambodia\", \"Thailand\", \"India\", \"China\",\n             \"Japan\", \"Korea, South\", \"Taiwan*\", \"Philippines\", \"Spain\",\n             \"France\", \"Italy\", \"Russia\", \"United Kingdom\", \"Germany\",\n             \"Netherlands\", \"Belgium\", \"Denmark\", \"Switzerland\", \"Sweden\",\n             \"US\", \"Brazil\", \"Mexico\", \"Colombia\", \"Peru\"])","a10e0ba2":"country_date = country_daywise.groupby([\"Country\", \"Date\"])[\"Confirmed\"].sum().reset_index()\ncountry_date = country_date[country_date[\"Country\"].isin(countries)]","9ac0b363":"ncols=5\nnrows=math.ceil(len(countries)\/ncols)\n\nfig = make_subplots(rows=nrows, cols=ncols, shared_xaxes=False, subplot_titles=countries)\n\nfor ind, country in enumerate(countries):\n    row = int((ind\/ncols)+1)\n    col = int((ind%ncols)+1)  \n    fig.add_trace(go.Bar(x=country_date[\"Date\"], y=country_date.loc[country_date[\"Country\"]==country, \"Confirmed\"],\n                        name=country, opacity=1), row=row, col=col)\n    fig.update_xaxes(tickfont = {'size': 9})\n    fig.update_yaxes(tickfont = {'size': 9})\n      \nfig.update_layout(title_text = \"Confirmed Cases In Each Country Over Time\", showlegend=False)\nfig.update_layout(height=1500, plot_bgcolor='rgba(0,0,0,0)')\nfig.show()","db8cb2d9":"df = pd.read_csv('..\/input\/covid19-dataset\/covid_19_data_cleaned.csv', parse_dates=['Date'])\nship_rows = (df[\"Country\"].str.contains(\"Grand Princess\")) | (df[\"Country\"].str.contains(\"Diamond Princess\")) | (df[\"Country\"].str.contains(\"MS Zaandam\")) | (df[\"Province\/State\"].str.contains(\"Grand Princess\")) | (df[\"Province\/State\"].str.contains(\"Diamond Princess\")) | (df[\"Province\/State\"].str.contains(\"MS Zaandam\"))\ndf = df[~ship_rows]\ndf['Province\/State'] = df['Province\/State'].fillna(\"\")","91ba44a6":"start_date = df[df[\"Confirmed\"]>0]\nstart_date = start_date.groupby(\"Country\")[\"Date\"].agg([\"min\"]).reset_index()\n\nend_date = df.groupby([\"Country\", \"Date\"])[\"Confirmed\", \"Deaths\", \"Recovered\"] \nend_date = end_date.sum().diff().reset_index()\n\n# It's a bit trickier to find the end date of cases reported due to the nature of our data. \n# Even if the reporting has stopped, the number of cases might remain the same or be replaced with 0. \n# Therefore, to find the actual end date of cases reported, we have to remove all duplicate and zero values.","8cf949f2":"mask = (end_date[\"Country\"] != end_date[\"Country\"].shift(1))\nend_date.loc[mask, \"Confirmed\"] = np.nan\nend_date.loc[mask, \"Deaths\"] = np.nan\nend_date.loc[mask, \"Recovered\"] = np.nan\n\nend_date = end_date[end_date[\"Confirmed\"]>0]\nend_date = end_date.groupby(\"Country\")[\"Date\"].agg([\"max\"]).reset_index()","22f1b1ff":"start_end = pd.concat([start_date, end_date[\"max\"]], axis=1)\nstart_end[\"max\"] = start_end[\"max\"] + timedelta(days=1) #reporting is lagged by 1 day\nstart_end[\"days\"] = start_end[\"max\"] - start_end[\"min\"]\nstart_end.columns = [\"Country\", \"Start\", \"Finish\", \"No. of Days\"]\nstart_end = start_end.sort_values(\"No. of Days\")","8f0515ed":"color = [\"#\" + ''.join([random.choice(\"123456789ABCDEF\") for j in range(6)]) for i in range(len(start_end))] #creating random rgb for each country","2dc01dc8":"start_end[\"Task\"] = start_end[\"Country\"]\nfig = ff.create_gantt(start_end, index_col=\"Country\", colors=color, show_colorbar=False,\n                     bar_width=0.2, showgrid_x=True, showgrid_y=True, height=2500)\nfig.update_layout(height=1750, plot_bgcolor='rgba(0,0,0,0)')\nfig.layout.yaxis['tickfont'] = {'size': 8}\nfig.show()","b297642f":"# Assumptions\nThere are two key assumptions we make when visualising this data:\n\n1. The figures are accurately reported by every country.\n\n2. The figures are up-to-date.\n\nObviously, these two assumptions don't hold up in reality. Therefore, it's necessary to check assumption 2 as it's impossible to check assumption 1. Let's get straight into it by looking at the start and end dates of daily updates by each country.","f93b25c0":"# Flattening The Curve\nOne of the most widely discussed ways of determining if a country handled Covid19 well is if they managed to \"flatten the curve\". The curve refers to the total number of confirmed cases over time. As we can see from the data earlier on, covid infection is increasing at an exponential rate. Therefore, if a country has \"flattened the curve\", it has successfully managed to minimize the rate of infection. However, this has attracted some controversy due to the possibility of data manipulation (i.e. inaccurate reporting, selective reporting, misrepresentation etc). Here, we will look at more well-known countries in Asia, Europe, and the US. (Disclaimer: The following list is completely arbitrary.)","003c658c":"Great! Now that we have a rough idea of what our data looks like, we can visualize it. Let's start with a time lapse of the global number of cases.","32b8ee3e":"Initially, it would seem that US is doing the worst with the highest number of confirmed, active and death cases while Brazil and India is doing well with the highest number of recovered cases. However, that is not the case as Brazil and India are among top 3 for the number of confirmed, active and death cases as well. Additionally, pure number of cases alone are not an accurate gauge of how well each country is dealing with the virus due to geographical differences.\n\nI.e. A country with greater population will have a greater number of cases, but that does not mean that it is handling the virus worse than a country with a smaller population and number of cases. Moreover, population alone is insufficient to account for the rate of infection as other factors such as population density and climate are also important. A country with a large population but lower population density might have a lower transmission rate than a country with small population but high population density.\n\nThat being said, let's evaluate the countries by the number of death\/recovered cases per 100 confirmed cases.","4ed61d9e":"From here, we can see that Asia-Pacific has done pretty well in flattening the curve. Countries like Australia, Singapore, Thailand and China have managed to minimize the rate of Covid19 transmission. Comparatively, the rest of the world are still facing an exponential rise in cases everyday.","fd95b601":"From this, we get a better representation of countries who are managing the pandemic well and those who are not. However, this statistic is still not accurate enough. It speaks more of their healthcare systems (ablility to nurture infected to recovery) than of their ability to stop the transmission of the virus. Given that we do not have the data for other important factors affecting transmission, we shall use a naive metric of \"Confirmed Cases Per Capita\" to measure countries' abilities to prevent transmission. In this following section, we will only evaluate countries who have had more than 100 cases in total.","69bfc96f":"Cool. Now let's visualize this all together as donut charts.","4230f5a7":"# Importing Libraries and Data","3f7cdc78":"# Data Cleaning","c2db1260":"# Global Number of Confirmed, Recovered and Death Cases","b23b0879":"Great. From here we can see which countries started reporting their cases later and which countries stopped reporting\/updating their cases. This does not tell us if data has been manipulated though: some countries might have started reporting cases later simply because they weren't affected, some countries might have stopped reporting cases simply because they successfully contained the virus. If you're interested in whether data manipulation has occurred, further research is required. My visualisation only offers basic insights into that possibility.","7bde015d":"# Top 10 Countries with Confirmed\/Recovered\/Active\/Death Cases","c00dd991":"There are three ships listed as countries in our datasets, Grand Princess, Diamond Princess and MS Zaandam. Let's remove them.","d80301e9":"From this, we can observe a clear trend of increase for all 4 sections. Global confirmed cases seem to increase exponentially while it is not so clear for recovered cases (there might be a linear trend). The number of active cases matched the number of recovered cases till sometime before Jul 2020, where the number of recovered cases start to outstrip the number of active cases. Throughout, the number of death cases remained relatively small. However, around 1.5m people have died to Covid19 thus far. \n\nGlobal trend doesn't seem to offer much more useful insights, so let's dive into individual countries. We want to take a look at which countries are handling the pandemic best and which countries are handling it worst. Hence, let's plot the total number of confirmed\/recovered\/active\/death cases from the top 10 countries (sporting the highest values in each area). ","f4f92a02":"Last Updated: 02 Dec 2020\n\nToday, we're going to be analyzing preprocessed Covid-19 (Coronavirus) sourced from this upstream repository maintained by the amazing team at Johns Hopkins University Center for Systems Science and Engineering (CSSE) who have been doing a great public service from an early point by collating data from around the world.\n\nData is disaggregated by country (and sometimes subregion). Coronavirus disease (COVID-19) is caused by the Severe acute respiratory syndrome Coronavirus 2 (SARS-CoV-2) and has had a worldwide effect. On March 11 2020, the World Health Organization (WHO) declared it a pandemic, pointing to the over 118,000 cases of the coronavirus illness in over 110 countries and territories around the world at the time.\n\nThis dataset includes time series data tracking the number of people affected by COVID-19 worldwide, including:\n\n* confirmed tested cases of Coronavirus infection\n* the number of people who have reportedly died while sick with Coronavirus\n* the number of people who have reportedly recovered from it","c5bce081":"Let's visualise this further. First, let's visualize the latest number of Covid19 cases worldwide. Then, we will make two line plots visualising the number of new cases every day along with the number of countries reported with new cases every day.","a9de3379":"# Conclusion\nAsia and some parts of Africa have been doing better in stemming the spread of the virus. In contrast, most of what we would consider the \"developed\" world (Europe and US) are faring the worst in that aspect. This can possibly be attributed to their lack of strict containment measures or that they can afford to do so. With more advanced healthcare capabilities and capacity, they do not run as much risk of high mortality rates or overwhelming their healthcare system as less developed countries.\n\nThis is it for now! Please upvote if you enjoyed this notebook, it motivates me to create more quality ones.","3d0579d4":"From here, we have a very clear visualization of how the virus spread across the world\/in each country over the year. In terms of the number of countries infected, the rate of infection peaked somewhere near April 10, where the number of infected countries was 185. That is about 96% of the world.\nNext, let's take a look at the number of confirmed\/recovered\/active\/death cases over time."}}