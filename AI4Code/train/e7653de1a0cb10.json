{"cell_type":{"7dabc661":"code","1a8f23ec":"code","d6ba3f6c":"code","48a01a0a":"code","e12ed4ea":"code","50ae4fb6":"code","1cb39a29":"code","0763cabb":"code","faf2ef0e":"code","b714a9d3":"code","932c6094":"code","4f59d74c":"code","c7be70a8":"code","f1309cd1":"code","3e263d49":"code","3588bac1":"code","fc159fbd":"code","21e8be9d":"code","65814bcb":"code","99dc8ab2":"code","dbb97733":"code","1956e2af":"code","ca4c9a35":"code","366af805":"code","f7e9b748":"code","fe3e9986":"code","c00c2329":"code","29ad75ec":"code","6c3d266e":"code","e69edeb2":"code","ebff91f5":"code","8420c1c2":"code","f75a90f7":"code","93f9847a":"code","ba1e3199":"code","45a83f92":"code","b8a0df27":"code","9bb8b103":"code","717f5f40":"code","6696038a":"code","9ace3c04":"code","049c36ec":"code","7c0488e0":"code","72f74797":"code","49396623":"code","9bef9db4":"code","40bb3dfe":"code","7a4b8af1":"code","487b2f2e":"code","2b549112":"code","77e298ae":"code","2242617a":"code","0bf8dc29":"code","9d2df698":"markdown"},"source":{"7dabc661":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1a8f23ec":"import seaborn as sns\nimport plotly\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap\nimport plotnine\nfrom plotnine import *\nimport itertools\nimport math\nfrom prettytable import PrettyTable\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder, OneHotEncoder, MinMaxScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, BaggingClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.decomposition import PCA\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.model_selection import train_test_split, cross_val_score, RepeatedStratifiedKFold\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score\nfrom sklearn.metrics import plot_roc_curve, balanced_accuracy_score\nfrom xgboost import XGBClassifier\nfrom scipy.spatial import distance\nfrom imblearn.over_sampling import SMOTE\nimport copy\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplotly.offline.init_notebook_mode(connected = True)\n%matplotlib inline\nsns.set(style = \"ticks\", context = \"talk\")","d6ba3f6c":"data = pd.read_csv(\"\/kaggle\/input\/dataset-of-songs-in-spotify\/genres_v2.csv\")\ndata.head()","48a01a0a":"data.info()","e12ed4ea":"data.describe()","50ae4fb6":"data.shape","1cb39a29":"data.isnull().sum()","0763cabb":"data.drop(\"Unnamed: 0\", axis=1, inplace=True)\ndata.columns","faf2ef0e":"numeric_data = data._get_numeric_data()\nnumeric_data.head()","b714a9d3":"numeric_data.describe()","932c6094":"numeric_data.info()","4f59d74c":"numeric_data.hist(layout=(7,2),figsize=(20, 30))","c7be70a8":"px.box(data_frame = data, y = 'duration_ms', color='genre')","f1309cd1":"x = list(data.corr().columns)\ny = list(data.corr().index)\nvalues = np.array(data.corr().values)\nfig = go.Figure(data = go.Heatmap(\n    x = x,\n    y = y,\n    z = values,\n    hoverongaps = False\n))\nfig.show()","3e263d49":"plt.figure(figsize=(20, 12))\nsns.heatmap(data.corr(), annot=True, cmap='viridis')","3588bac1":"plt.figure(figsize=(12, 6))\nsns.distplot(data.danceability, bins=40)","fc159fbd":"sns.kdeplot(data.danceability)","21e8be9d":"plt.figure(figsize=(12, 6))\nsns.distplot(data.instrumentalness, bins=40)","65814bcb":"plt.figure(figsize=(12, 6))\nsns.distplot(data.duration_ms, bins=40)","99dc8ab2":"plt.figure(figsize=(12, 6))\nsns.distplot(data.energy, bins=40)","dbb97733":"plt.figure(figsize=(12, 6))\nsns.distplot(data.loudness, bins=40)","1956e2af":"plt.figure(figsize=(12, 6))\nsns.distplot(data.speechiness, bins=40)","ca4c9a35":"plt.figure(figsize=(12, 6))\nsns.distplot(data.acousticness, bins=40)","366af805":"px.histogram(data.acousticness)","f7e9b748":"plt.figure(figsize=(12, 6))\nsns.distplot(data.liveness, bins=40)","fe3e9986":"plt.figure(figsize=(12, 6))\nsns.distplot(data.valence, bins=40)","c00c2329":"plt.figure(figsize=(12, 6))\nsns.distplot(data.tempo, bins=40)","29ad75ec":"plt.figure(figsize=(12, 6))\nsns.distplot(data.duration_ms, bins=40)","6c3d266e":"data['genre'].value_counts()","e69edeb2":"plt.figure(figsize=(12, 6))\ndata['genre'].value_counts().plot(kind=\"bar\", color=\"lightblue\", title=\"Genres\")","ebff91f5":"data.genre.unique()","8420c1c2":"px.pie(data.genre,\n       labels = data.genre.value_counts().index,\n       values = data.genre.value_counts().values,\n       names = data.genre.value_counts().index,\n       title = \"Distribution of Genres on Spotify\"\n      )","f75a90f7":"px.histogram(data.genre)","93f9847a":"display(data[['danceability', 'energy', 'key', 'loudness', 'mode','speechiness','acousticness', 'instrumentalness', 'liveness','valence','tempo','type','id','uri','track_href','analysis_url','duration_ms','time_signature','genre']].groupby(['mode','key','genre']).agg(['max','mean','min']).style.background_gradient(cmap=\"flare\"))","ba1e3199":"features = ['danceability', 'energy', 'key', 'loudness', 'mode','speechiness','acousticness', 'instrumentalness', 'liveness','valence','tempo','duration_ms']\ndef plotting(feature):\n    plt.figure(figsize=(20, 10))\n    plot = sns.catplot(x=feature, y='genre', data=data, kind='bar')\n    plot.set_ylabels('Genre')\n    plt.show()\n    \nfor x in features:\n    plotting(x)","45a83f92":"def plotting2(feature):\n    plt.figure(figsize=(12, 6))\n    plot = sns.regplot(x=data[feature], y=data['genre'], fit_reg = False)\n    plt.show()\n    \nfor x in features:\n    plotting2(x)","b8a0df27":"dims = (20,12)\nfig, ax = plt.subplots(figsize=dims)\nsns.boxplot(x='key', y='genre', data=data, ax=ax)","9bb8b103":"data['mode'].value_counts()","717f5f40":"sns.countplot(x='mode', data=data, hue='genre', palette='bright')\nplt.legend(bbox_to_anchor = (2, 1), borderaxespad=0)\nplt.tight_layout()","6696038a":"data['time_signature'].value_counts()","9ace3c04":"sns.countplot(x='time_signature', data=data, hue='genre', palette='bright')\nplt.legend(bbox_to_anchor = (2, 1), borderaxespad=0)\nplt.tight_layout()","049c36ec":"from plotly.subplots import make_subplots\nfeatures = ['danceability', 'energy', 'key', 'loudness', 'mode', 'speechiness',\n       'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo',\n       'type', 'duration_ms', 'time_signature', 'genre']\nrows = 3\ncols = 5\nfig = make_subplots(rows=rows, cols=cols, subplot_titles=features)\nx, y = np.meshgrid(np.arange(rows)+1, np.arange(cols)+1)\ncount  = 0\nfor row, col in zip(x.T.reshape(-1), y.T.reshape(-1)):\n    fig.add_trace(\n        go.Histogram(x = data[features[count]].values),\n        row = row,\n        col = col\n    )\n    count+=1\n    \nfig.update_layout(height=900, width=900, title_text='Feature Distribution', showlegend=False)\nfig.show()","7c0488e0":"box_cols = ['danceability', 'energy', 'key', 'loudness', 'speechiness', 'acousticness', 'instrumentalness','liveness', 'valence', 'tempo', 'duration_ms']\nrows = 3\ncols = 4\nfig = make_subplots(rows=rows, cols=cols, subplot_titles=box_cols)\nx, y = np.meshgrid(np.arange(rows)+1, np.arange(cols)+1)\ncount = 0\nfor row, col in zip(x.T.reshape(-1), y.T.reshape(-1)):\n    try:\n        fig.add_trace(\n            go.Box(x = data[box_cols[count]].values, name=''),\n            row = row,\n            col = col\n        )\n        count+=1\n    except:\n        break\n    \nfig.update_layout(height=900, width=900, title_text='Boxplot Distribution', showlegend=False)\nfig.show()","72f74797":"px.imshow(img=data.isna(), title='Missing Values(Yellow: Missing, Blue: Not Missing)')","49396623":"per_miss = data.isna().sum(axis=0) \/ data.shape[0] * 100\nper_miss = per_miss.reset_index().rename(columns={'index':'feature', 0:'% missing'})\npx.bar(per_miss, x='feature', y='% missing', title='% missing values for each feature')","9bef9db4":"cols = list(data.columns[11:])\ncols","40bb3dfe":"del cols[7]\ncols","7a4b8af1":"df = copy.deepcopy(data)\ndf.drop(columns = cols, inplace = True)\ndf.head()","487b2f2e":"sns.pairplot(df, corner=True, hue='genre')","2b549112":"sns.pairplot(data, hue='genre')","77e298ae":"grouped_genre = data.groupby(\"genre\")\nfor col in numeric_data.columns:\n    fig, ax = plt.subplots()\n    for i, d in grouped_genre:\n        d[col].hist(alpha=0.4, ax=ax, label=i, figsize=(20, 10))\n        ax.set_title(col)\n        \n    ax.legend()\n    plt.show()","2242617a":"grouped_genre.describe()","0bf8dc29":"len(grouped_genre)","9d2df698":"**Thank you! Further EDA and predictions in this notebook will be done in future as soon as I get time for it so keep visiting in future. Stay Tuned! Peace out!**"}}