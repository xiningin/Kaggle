{"cell_type":{"c20b67b4":"code","5ee891ef":"code","cff76fff":"code","b679f65e":"code","d1288f6c":"code","435abb4c":"code","3e79595d":"code","abf802d8":"code","c1e1d0a4":"code","11601ef2":"code","6e1ac3a0":"code","1c79c99b":"code","87b90921":"code","038ecffa":"code","cfffa020":"code","f3aa907f":"code","892ffbf8":"code","be8af340":"code","2b290940":"code","69a651c9":"code","7830f12d":"code","0a069b77":"code","c83d32c7":"code","21c9201f":"code","2a808cff":"code","487abae3":"markdown","21f68f72":"markdown","84ccefff":"markdown","70a8c0f3":"markdown","3fcdc8f4":"markdown","44907d79":"markdown","25802d60":"markdown","c131a38c":"markdown","99e29dc9":"markdown","a5a7fb07":"markdown","8dcea20f":"markdown","5fb27865":"markdown","5721183c":"markdown"},"source":{"c20b67b4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5ee891ef":"import pandas as pd \nimport numpy as np \nimport re \nimport nltk \nfrom nltk.corpus import stopwords \nfrom nltk.stem.porter import PorterStemmer \nfrom sklearn.feature_extraction.text import CountVectorizer \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.tree import DecisionTreeClassifier\n","cff76fff":"from sklearn.linear_model import LogisticRegression","b679f65e":"nltk.download(\"stopwords\")\ntrain=pd.read_csv('\/kaggle\/input\/nlp-getting-started\/train.csv')\ntest=pd.read_csv('\/kaggle\/input\/nlp-getting-started\/test.csv')\ntrain.head()","d1288f6c":"train.isnull().sum().sort_values(ascending=False)\ntest.isnull().sum().sort_values(ascending=False)","435abb4c":"train=train.drop([\"location\",\"keyword\",\"id\"] , axis=1)\ntest= test.drop([\"location\",\"keyword\",\"id\"] , axis=1)\ntrain.columns\n","3e79595d":"train[\"text\"].head()\n","abf802d8":"test.shape","c1e1d0a4":"corpus=[]\nlength=len(train[\"text\"])\nfor i in range(length):\n    \n    tweet=re.sub('[^a-zA-z]',\" \" ,train[\"text\"][i])\n    tweet=tweet.lower()\n    tweet=tweet.split()\n    ps=PorterStemmer()\n    tweet=[ ps.stem(word) for word in tweet  if not word in set(stopwords.words('english'))]\n    tweet=\" \".join(tweet)\n\n    corpus.append(tweet)","11601ef2":"cv=CountVectorizer()    \nX=cv.fit_transform(corpus).toarray()","6e1ac3a0":"X.shape","1c79c99b":"X_test=cv.transform(test[\"text\"]).toarray()","87b90921":"X_test.shape","038ecffa":"y=train[\"target\"]\n\n\nprint(\"x shape is :\", X.shape)\nprint(\"y shape is :\", y.shape)\n\n","cfffa020":"X_train,X_valid,y_train,y_valid=train_test_split(X,y,test_size=.2 , random_state=33 , shuffle=True)\n","f3aa907f":"print(\"x_train.shape is: \",X_train.shape)\nprint(\"y_train.shape is: \",y_train.shape)","892ffbf8":"lr = LogisticRegression()  \n\nlr.fit(X_train,y_train)","be8af340":"y_valid=lr.predict(X_valid)","2b290940":"y_valid","69a651c9":"decisionTreeModel = DecisionTreeClassifier(criterion= 'entropy',max_depth = 10,max_leaf_nodes=30, random_state=55)\n\ndecisionTreeModel.fit(X_train,y_train)","7830f12d":"y_valid=decisionTreeModel.predict(X_valid)","0a069b77":"models=[decisionTreeModel,lr]\nfor model in models:\n    print(type(model ) ,\"train score is :\" ,model.score(X_train , y_train) )\n    print(type(model ) ,\"test score is :\" ,model.score(X_valid , y_valid) )\n    y_pred=model.predict(X_test)\n    print(type(model ) ,\"test score is :\" ,model.score(X_test , y_pred) )\n    \n","c83d32c7":"y_pred","21c9201f":"output = pd.DataFrame({'target': y_pred})\noutput.to_csv('submission.csv', index=False)","2a808cff":"output.head()","487abae3":"# 4- NLP processing","21f68f72":"*** we will delete columns that have null values**","84ccefff":"corpus1=[]\nlength1=len(test[\"text\"])\nfor i in range(length1):\n    \n    tweet1=re.sub('[^a-zA-z]',\" \" ,test[\"text\"][i])\n    tweet1=tweet1.lower()\n    tweet1=tweet1.split()\n    ps=PorterStemmer()\n    tweet1=[ ps.stem(word1) for word1 in tweet1  if not word1 in set(stopwords.words('english'))]\n    tweet1=\" \".join(tweet1)\n\n    corpus1.append(tweet1)","70a8c0f3":"# 6-B-DECISION TREE CLASSIFIER","3fcdc8f4":"# 1- import  libraries ","44907d79":"# 3. Data Preprocessing","25802d60":"![image.png](attachment:image.png)","c131a38c":"# 6-A: Logistic Regression","99e29dc9":"# predict the model \n","a5a7fb07":"# 7- model evaluation","8dcea20f":"# 5- MODEL BUILDING","5fb27865":"*   remove unwanted symboles\n*  conver words to lowercase\n*  remove stepwords\n* stemming words","5721183c":"# 2. Data Exploration"}}