{"cell_type":{"5e6daf2e":"code","7d935927":"code","ff9187c7":"code","e758e5f4":"code","865f9670":"code","3957830f":"code","00beee49":"code","c1350e51":"code","ac45222a":"code","6e52f1bd":"code","2cb0b397":"code","a40cc786":"code","f8933892":"code","500f4ce7":"code","5b0cb2bb":"code","4f8df5e1":"code","724f1005":"code","2895fd62":"code","31d08057":"code","d294f711":"code","ab42ebd2":"code","1d73252e":"code","39a22196":"code","991ee6da":"code","53ea074f":"markdown","5cd043d3":"markdown","d32f3d67":"markdown","b915cb22":"markdown"},"source":{"5e6daf2e":"#import libraries\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport pandas as pd \nimport sklearn\nfrom sklearn.model_selection import train_test_split , cross_val_score\nimport re\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix ,  plot_roc_curve , classification_report , accuracy_score\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nimport seaborn","7d935927":"#read our data\ndata =  pd.read_csv(\"..\/input\/spam-or-not-spam-dataset\/spam_or_not_spam.csv\")","ff9187c7":"#head of the data\ndata.head()","e758e5f4":"#describe our data\ndata.describe()","865f9670":"#remove NaN value\ndata.dropna(inplace =  True)","3957830f":"#head of the data\ndata.head()","00beee49":"#labels and mail\nX =  data.iloc[:,0].values\ny = data.iloc[:,-1].values","c1350e51":"# return each mail to its original\nnltk.download('stopwords')\ncorpus =[]\nfor i in range(len(X)):\n    stemmer = PorterStemmer()\n    X[i] = X[i].lower()\n    X[i] = X[i].split()\n    email =  [stemmer.stem(J) for J in X[i] ]\n    email = ' '.join(email)\n    corpus.append(email)","ac45222a":"#convert to tokens array\nv = CountVectorizer()\nX = v.fit_transform(corpus).toarray()\n","6e52f1bd":"#test_train split\nX_train,X_test,y_train,y_test =  train_test_split(X,y,test_size = 0.2 , random_state = 42 )","2cb0b397":"# cross_val_score of svc\nsvc  =  SVC()\nscore_1 = cross_val_score(svc,X_train,y_train,cv = 10 )\nscore_1 ","a40cc786":"#mean of score_1\nscore_1.mean()","f8933892":"# cross_val_score of RandomForestClassifier\nRandom  =  RandomForestClassifier(n_estimators= 120)\nscore_2 = cross_val_score(Random,X_train,y_train,cv = 10 )\nscore_2 ","500f4ce7":"#mean of score_2\nscore_2.mean()","5b0cb2bb":"# cross_val_score of RandomForestClassifier\nDecision  =  DecisionTreeClassifier()\nscore_3 = cross_val_score(Decision,X_train,y_train,cv = 10 )\nscore_3","4f8df5e1":"score_3.mean()","724f1005":"# cross_val_score of knn\nknn = KNeighborsClassifier()\n\nscore_4 = cross_val_score(knn,X_train,y_train,cv = 10 )\nscore_4","2895fd62":"#mean of score_4\nscore_4.mean()","31d08057":"Random.fit(X_train,y_train)","d294f711":"y_pred =  Random.predict(X_test)","ab42ebd2":"accuracy = accuracy_score(y_test,y_pred)\nprint(accuracy)","1d73252e":"#classification report\ncc =  classification_report(y_test,y_pred)\nprint(cc)","39a22196":"#confusion matrix\ncm = confusion_matrix(y_test,y_pred)\nprint(cm)\ndf_cm = pd.DataFrame(cm, index = [i for i in range(2)],\n                  columns = [i for i in range(2)])\nseaborn .heatmap(df_cm, annot=True, annot_kws={\"size\": 16}, fmt='d')\nplt.title('confusion matrix')\nplt.xlabel('prediction')\nplt.ylabel('Actual');","991ee6da":"#Roc curve\nplot_roc_curve(Random,X_test,y_test)\nplt.show()","53ea074f":"# Read and Clean our Data","5cd043d3":"# Model Training","d32f3d67":"# Feature Engineering","b915cb22":"# Cross  Val Score "}}