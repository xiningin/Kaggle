{"cell_type":{"20a50275":"code","f17da1a1":"code","3af917fa":"code","37a713c2":"code","4fe96858":"code","3bbdef4c":"code","317d877c":"code","135ec5e9":"code","f2bd9a1f":"code","2a62edd0":"code","fea338cc":"code","467c39e1":"code","fec4dd83":"code","e7c2162d":"code","c24ae37d":"code","b088f4f6":"code","a515264a":"markdown"},"source":{"20a50275":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f17da1a1":"import matplotlib.pyplot as plt\nimport plotly.express as px\nimport warnings\nwarnings.filterwarnings(\"ignore\")","3af917fa":"df = pd.read_csv('..\/input\/salary\/Salary.csv')\ndf.head()","37a713c2":"df.shape","4fe96858":"df.info()","3bbdef4c":"df.describe()","317d877c":"fig = px.line(df, x='YearsExperience', y='Salary')\nfig.show()","135ec5e9":"fig = px.scatter(df, x='YearsExperience', y='Salary')\nfig.show()","f2bd9a1f":"fig = px.histogram(df, x='Salary')\nfig.show()","2a62edd0":"fig = px.histogram(df, x='YearsExperience')\nfig.show()","fea338cc":"corr = df.corr()\nfig = px.imshow(corr)\nfig.show()","467c39e1":"from sklearn.model_selection import train_test_split\n\nx = df.YearsExperience.values.reshape(-1, 1)\ny = df.Salary.values\n\ntrain_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.2, random_state=1)","fec4dd83":"from sklearn.linear_model import LinearRegression\n\nlinear = LinearRegression()\nlinear.fit(train_x, train_y)\npred = linear.predict(test_x)","e7c2162d":"error = abs(pred-test_y)\nresult = pd.DataFrame({'Prediction':np.round(pred), 'Actual Salary':test_y, 'Error':np.round(error)})\nresult","c24ae37d":"from sklearn.metrics import mean_squared_error\nimport math\n\nerrors = math.sqrt(mean_squared_error(test_y, pred))\nprint(f'Mean squared error: {errors}')","b088f4f6":"# def predict_salary(years_experience):\n#     train_x = df.YearsExperience.values.reshape(-1,1)\n#     test_x = np.array([years_experience]).reshape(-1,1)\n#     train_y = df.Salary.values\n    \n#     linear = LinearRegression()\n#     linear.fit(train_x, train_y)\n    \n#     pred = round(linear.predict(test_x)[0])\n#     return f'Your predicted salary is: ${pred}'\n\n# input_year = float(input('Input year of experience: '))\n# predict_salary(input_year)","a515264a":"### We can conclude that YearsExperience is strongly correlated to Salary"}}