{"cell_type":{"36d0dd22":"code","62092625":"code","6256be01":"code","1f023e69":"code","527c2e01":"code","b69dc03f":"code","50363510":"code","3429e972":"code","feb28b9a":"code","bbdd8545":"code","8891e631":"code","88c05683":"code","ec5ba8a2":"code","ef75e2c3":"code","cd714cd8":"code","51902d7b":"code","7dc5b68e":"code","c17f0cf8":"markdown","053e8223":"markdown","7de86886":"markdown","7f3a7f1d":"markdown","85c4d2a0":"markdown","1361eb79":"markdown","10f7d26e":"markdown","1969ffc6":"markdown","ec218fc7":"markdown","bd4f65ef":"markdown","8d43092e":"markdown"},"source":{"36d0dd22":"# import libraries\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","62092625":"# load data\ndf = pd.read_csv('\/kaggle\/input\/stocknews\/upload_DJIA_table.csv')","6256be01":"df.sort_values(by = ['Date'], ascending = False)","1f023e69":"df.sort_values(by = ['Open', 'Close'], ascending = False)","527c2e01":"df.sort_index()","b69dc03f":"df.rename(columns= {'Date' : 'new_date'}).head()","50363510":"# we will make the data as it is by again renaming new_date to Date\ndf.rename(columns= {'new_date' : 'Date'}).head(1)","3429e972":"df['Difference'] = df.High - df.Low\ndf.head()","feb28b9a":"# check for the current name of the index\nprint(df.index.name)","bbdd8545":"# giving name to the index \ndf.index.name = 'index'\ndf.head()","8891e631":"df.columns = map(str.lower, df.columns)\ndf.columns","88c05683":"df.columns = map(str.upper, df.columns)\ndf.columns","ec5ba8a2":"# let's make a dataframe df2\ndf2 = pd.DataFrame({'Animal': ['Falcon', 'Falcon',\n                              'Parrot', 'Parrot'],\n                   'Max Speed': [380., 370., 24., 26.]})\ndf2","ef75e2c3":"# grouping 'Animals' with the mean of their max-speed\ndf2.groupby(['Animal']).mean()","cd714cd8":"# creating a hierarchical index dataframe df3\narrays = [['Falcon', 'Falcon', 'Parrot', 'Parrot'],\n          ['Captive', 'Wild', 'Captive', 'Wild']]\n\nindex = pd.MultiIndex.from_arrays(arrays, names=('Animal', 'Type'))\n\ndf3 = pd.DataFrame({'Max Speed': [390., 350., 30., 20.]},\n                  index=index)\ndf3","51902d7b":"# grouping based on 'Animal'== (level=0), because it is the first index\ndf3.groupby(level=0).mean()","7dc5b68e":"df3.groupby(level=\"Type\").mean()","c17f0cf8":"## Changing index name<a id='4'><\/a>","053e8223":"## Making all columns lowercase<a id='5'><\/a>","7de86886":"### Hierarchical Indexes\nWe can groupby different levels of a hierarchical index using the level parameter:\n\nSyntax : `df.groupby(level = index)` OR `df.groupby(level='column_name')`","7f3a7f1d":"## Defining a new column<a id='3'><\/a>\nIf you want to make you own column you can do in this way\n\nSyntax : `df['new_column_name'] = userdefine_operation`","85c4d2a0":"## Sorting data<a id='1'><\/a>\n**Method 1 (sort by single column) :** `df.sort_values(by = ['column_name'], ascending = False\/True)`\n\nThe default of sorting is `ascending=True` i.e from low to high. But if you want sorting in decending order i.e from high to low make `ascending=False`\n\n**Method 2 (sort by multiple column) :** `df.sort_values(by = ['column_name1, column_name2,...'], ascending = False\/True)`\n\n**Method 3 :** `df.sort_index()`\n\nThis will sort dataframe index from low to high.","1361eb79":"## Renaming columns<a id='2'><\/a>\nSyntax : `df.rename(columns = {'Old_name' : 'New_name', inplace = True})`\n\n`inplace = True` will permanently overwrite the dataset. By default `inplace = False`","10f7d26e":"## Making all columns uppercase<a id='6'><\/a>","1969ffc6":"## Groupby<a id='7'><\/a>\nGroup DataFrame using a mapper or by a Series of columns.\n\nA groupby operation involves some combination of splitting the object, applying a function, and combining the results. This can be used to group large amounts of data and compute operations on these groups.","ec218fc7":"That's all for today! we have learnt sorting of data, renaming of columns and defining new columns. In next tutorial we'll see how to drop data and convert data types.","bd4f65ef":"In this way we can design our own custom columns.","8d43092e":"# Pandas tutorial : Day 4\nHere's what we are going to do today : \n* [Sorting data](#1)\n* [Renaming columns](#2)\n* [Defining a new column](#3)\n* [Changing index name](#4)\n* [Making all columns lowercase](#5)\n* [Making all columns uppercase](#6)\n* [Using Groupby](#7)\n\nLet's get started!\n\n[Data for daily news for stop market prediction](https:\/\/www.kaggle.com\/aaron7sun\/stocknews)"}}