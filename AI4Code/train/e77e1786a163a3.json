{"cell_type":{"24f236bc":"code","202cd1c8":"code","1b100ffa":"code","73dae48a":"code","c0b86157":"code","4c32f419":"code","561deaaf":"code","cd396c6e":"code","98bfae11":"code","590d401b":"code","e92be9d1":"code","51c95e42":"code","2665d759":"code","5104a966":"code","5613212d":"code","a19553bf":"code","5ff64dfc":"code","4d2e90d1":"code","cb04c77c":"code","8790aa3a":"code","1d365c92":"markdown","e44de15e":"markdown","8d451f37":"markdown","6cc01c2c":"markdown"},"source":{"24f236bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import svm\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split","202cd1c8":"#loading the dataset\nengineering_dataset = pd.read_csv('\/kaggle\/input\/engineering-placements-prediction\/collegePlace.csv')\nengineering_dataset.head(3)","1b100ffa":"#checking out the data\nengineering_dataset.shape","73dae48a":"#any missing values?\nengineering_dataset.isnull().sum()","c0b86157":"engineering_dataset.info()","4c32f419":"#statistical summaries\nengineering_dataset.describe()","561deaaf":"#checking distribution\n#1--> placed\n#0--> notplaced\nengineering_dataset['PlacedOrNot'].value_counts()","cd396c6e":"#changing the gender to numerical values\nengineering_dataset.replace({'Gender':{'Female':0,'Male':1}},inplace = True)\nengineering_dataset.head()","98bfae11":"#getting our X and Y datasets\nX = engineering_dataset.drop(columns = ['Stream','PlacedOrNot'],axis = 1)\nY = engineering_dataset['PlacedOrNot']\nprint(X.shape,Y.shape)","590d401b":"#splitting into testing and training\nX_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size = 0.1 , stratify = Y, random_state = 2)\n\nprint(X_train.shape,X_test.shape,Y_train.shape,Y_test.shape)","e92be9d1":"#training our model\nmodel = LogisticRegression()\nmodel.fit(X_train,Y_train)","51c95e42":"#forming predictions on our X_train\ntraining_pred = model.predict(X_train)\nscore_1 = accuracy_score(Y_train,training_pred)\nprint('Accuracy score on training data using Linear Regression:',(score_1)*100)","2665d759":"#testing data\ntesting_pred = model.predict(X_test)\nscore_2 = accuracy_score(Y_test,testing_pred)\nprint('Accuracy score on training data using Linear Regression:',(score_2)*100)","5104a966":"model = svm.SVC(kernel = 'linear')\nmodel.fit(X_train,Y_train)","5613212d":"#forming predictions on our X_train\ntraining_pred = model.predict(X_train)\nscore_1 = accuracy_score(Y_train,training_pred)\nprint('Accuracy score on training data using SVM:',(score_1)*100)","a19553bf":"#testing data\ntesting_pred = model.predict(X_test)\nscore_2 = accuracy_score(Y_test,testing_pred)\nprint('Accuracy score on training data using SVM:',(score_2)*100)","5ff64dfc":"model_xgb = xgb.XGBClassifier(\n learning_rate =0.3,\n n_estimators=190,\n max_depth=6,\n objective= 'binary:logistic',\n scale_pos_weight=0.47,\n seed=27,\n use_label_encoder=False)\nmodel_xgb.fit(X_train, Y_train)","4d2e90d1":"#forming predictions on our X_train\ntraining_pred = model_xgb.predict(X_train)\nscore_1 = accuracy_score(Y_train,training_pred)\nprint('Accuracy score on training data using XGB:',(score_1)*100)","cb04c77c":"#testing data\ntesting_pred = model_xgb.predict(X_test)\nscore_2 = accuracy_score(Y_test,testing_pred)\nprint('Accuracy score on training data using XGB:',(score_2)*100)","8790aa3a":"input_data = [22,1,1,8,1,1]\n # as array\ninput_data_as_numpy = np.asarray(input_data)\n#reshaping\nreshaped_input_data = input_data_as_numpy.reshape(1,-1)\n#predicting\npred = model_xgb.predict(reshaped_input_data)\n\nif (pred[0]==1):\n    print('Congratulations you have been Placed')\nelse:\n    print('Unfortunately you need a retake')","1d365c92":"Support Vector Machine Model","e44de15e":"**Making a prediction system**","8d451f37":"Logistic Regression Model","6cc01c2c":"**XGBOOST**"}}