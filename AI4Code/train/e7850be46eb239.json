{"cell_type":{"22ee9600":"code","717f38fa":"code","94052931":"code","c9cb1b96":"code","bd34658e":"code","e64b0a05":"code","fbd2ea2a":"code","bfcac691":"code","330fd12d":"code","1e5426c6":"code","5dbf8070":"code","7382a5db":"code","f5a446e7":"code","c2b7180f":"code","700811dc":"code","98abb68c":"code","a75b590e":"code","7fb3601d":"code","7ed58d95":"code","6ad7480d":"code","48d72e76":"code","225bfb5d":"code","938aacf3":"code","4f095cb7":"code","570b62a6":"code","d64beec5":"code","cd800f93":"code","0bed6180":"markdown","47da201b":"markdown","58955984":"markdown"},"source":{"22ee9600":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","717f38fa":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.cluster import KMeans\n","94052931":"df = pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')","c9cb1b96":"df","bd34658e":"sns.set_style(style = 'whitegrid')\nsns.heatmap(df.isnull(),cmap = 'rainbow')","e64b0a05":"plt.figure(figsize=(8,8))\nsns.boxplot(y=\"Reviews\", data=df,palette='rainbow')","fbd2ea2a":"df['Author'].nunique()","bfcac691":"new_auth = df[(df['Price'] > df['Price'].mean())]['Author']\n#Authors with book price > average price\nplt.figure(figsize=(12,40))\nsns.barplot(x='Price', y=new_auth,data=df)","330fd12d":"new_auth = df[(df['Price'] > 20)]['Author']\n#Authors with price > 20\nplt.figure(figsize=(12,20))\nsns.barplot(x='Price', y=new_auth,data=df,hue='Genre',palette='coolwarm')               ","1e5426c6":"plt.figure(figsize=(10,6))\nsns.distplot(df['Reviews'],bins=100,color = 'red')","5dbf8070":"sns.jointplot(y='User Rating',x='Reviews',data=df,kind='scatter',hue='Genre')","7382a5db":"sns.pairplot(df,hue='Genre',palette='viridis')","f5a446e7":"plt.figure(figsize=(10,6))\nsns.heatmap(df.corr(),cmap='coolwarm')","c2b7180f":"df.drop('Year',axis=1).describe()","700811dc":"sns.set_style('darkgrid')\ng = sns.FacetGrid(df,hue=\"Genre\",palette='coolwarm',size=6,aspect=2)\ng = g.map(plt.hist,'User Rating',bins=20,alpha=0.7)","98abb68c":"sns.set_style('darkgrid')\ng = sns.FacetGrid(df,hue=\"Genre\",palette='coolwarm',size=6,aspect=2)\ng = g.map(plt.hist,'Reviews',bins=20,alpha=0.7)","a75b590e":"le = LabelEncoder()\ndf['Genre'] = le.fit_transform(df['Genre'])","7fb3601d":"df.info()","7ed58d95":"X = df.drop(['Name','Author'],axis=1).values","6ad7480d":"X","48d72e76":"#Elbow methodt To find Optimal number of clusters\nw = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 100)\n    kmeans.fit(X)\n    w.append(kmeans.inertia_)\nplt.plot(range(1, 11), w)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","225bfb5d":"#choosing number of clusters as 4\nkmeans = KMeans(n_clusters=4,init = 'k-means++', random_state = 100)\ny = kmeans.fit_predict(X)","938aacf3":"kmeans.cluster_centers_","4f095cb7":"kmeans.labels_","570b62a6":"f, (ax1, ax2) = plt.subplots(1, 2, sharey=True,figsize=(14,6))\nax1.set_title('K Means Review\/Rating')\nax1.scatter(df['Reviews'],df['User Rating'],c=kmeans.labels_,cmap='rainbow')\nax2.set_title(\"K Means Price\/Rating \")\nax2.scatter(df['Price'],df['User Rating'],c=kmeans.labels_,cmap ='rainbow')","d64beec5":"y","cd800f93":"plt.figure(facecolor='cyan',figsize=(10,6))\nsns.set_style('white')\nplt.scatter(X[y==0, 0], X[y==0, 1], s = 10, c = 'yellow',label = 'Cluster 1')\nplt.scatter(X[y==1, 0], X[y==1, 1], s = 10, c = 'red', label = 'Cluster 2')\nplt.scatter(X[y==2, 0], X[y==2, 1], s = 10, c = 'blue', label = 'Cluster 3')\nplt.scatter(X[y==3, 0], X[y==3, 1], s = 10, c = 'green', label = 'Cluster 4')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 50, c = 'black', label = 'Centroids')\nplt.title('Clusters')\nplt.xlabel('Ratings')\nplt.legend(loc='best', bbox_to_anchor=(1,0.5,0.25,0.25))\nplt.show()","0bed6180":"# K means Clustering","47da201b":"**Encoding Categorical Data**","58955984":"**Visualizing Clusters**"}}