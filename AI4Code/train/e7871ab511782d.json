{"cell_type":{"36b6505e":"code","7cb81aa4":"code","f884da39":"code","48778b1b":"code","7b7c5436":"code","9655f0bd":"code","db968465":"code","bff27b63":"code","4993402f":"code","1f38d177":"code","f0d2f062":"code","a84aee87":"code","ef88a701":"code","48cb7c51":"code","18859288":"code","a5e0e4b0":"code","d542edec":"code","98ff07b5":"code","02abfabc":"code","4495444f":"code","a297cdd8":"code","1e5d1520":"code","084fa3c5":"code","cb3116d9":"code","7412aab0":"code","cba459a2":"code","2b2a9c3b":"code","c093817a":"code","739e073c":"code","f188f1ad":"code","219d8813":"code","dc72367b":"code","1d0b61d3":"code","ae5fb42b":"markdown","8bb4ea27":"markdown","dafbf09a":"markdown","464902f5":"markdown","be701835":"markdown","9a442d8b":"markdown","63d077d0":"markdown","d8559142":"markdown","6fd8cd63":"markdown","c2fc6375":"markdown","80584361":"markdown","f66378be":"markdown","df36579e":"markdown","ba0a11ee":"markdown","9871ea8b":"markdown","b5351280":"markdown","1a71a9cc":"markdown","3a4b217f":"markdown","0cb0d520":"markdown","2e108a44":"markdown","391200bc":"markdown","30de5150":"markdown","91f70574":"markdown","6a9b0378":"markdown","14cca4c4":"markdown","80651f61":"markdown","7fcc3c6c":"markdown","09e13eee":"markdown","6c1eab49":"markdown","8c543b20":"markdown"},"source":{"36b6505e":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","7cb81aa4":"import os\nprint(os.listdir(\"..\/input\"))","f884da39":"dataset = pd.read_csv('..\/input\/position-salaries\/Position_Salaries.csv')\nX = dataset.iloc[:, 1:-1].values\ny = dataset.iloc[:, -1].values","48778b1b":"from sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression()\nlin_reg.fit(X, y)","7b7c5436":"from sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree = 4)\nX_poly = poly_reg.fit_transform(X)\nlin_reg_2 = LinearRegression()\nlin_reg_2.fit(X_poly, y)","9655f0bd":"plt.scatter(X, y, color = 'red')\nplt.plot(X, lin_reg.predict(X), color = 'blue')\nplt.title('Truth or Bluff (Linear Regression)')\nplt.xlabel('Position Level')\nplt.ylabel('Salary')\nplt.show()","db968465":"plt.scatter(X, y, color = 'red')\nplt.plot(X, lin_reg_2.predict(poly_reg.fit_transform(X)), color = 'blue')\nplt.title('Truth or Bluff (Polynomial Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","bff27b63":"X_grid = np.arange(min(X), max(X), 0.1)\nX_grid = X_grid.reshape((len(X_grid), 1))\nplt.scatter(X, y, color = 'red')\nplt.plot(X_grid, lin_reg_2.predict(poly_reg.fit_transform(X_grid)), color = 'blue')\nplt.title('Truth or Bluff (Polynomial Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","4993402f":"lin_reg.predict([[6.5]])","1f38d177":"lin_reg_2.predict(poly_reg.fit_transform([[6.5]]))","f0d2f062":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","a84aee87":"dataset = pd.read_csv('..\/input\/position-salaries\/Position_Salaries.csv')\nX = dataset.iloc[:, 1:-1].values\ny = dataset.iloc[:, -1].values","ef88a701":"print(X)","48cb7c51":"print(y)","18859288":"y = y.reshape(len(y),1)","a5e0e4b0":"print(y)","d542edec":"from sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nsc_y = StandardScaler()\nX = sc_X.fit_transform(X)\ny = sc_y.fit_transform(y)","98ff07b5":"print(X)","02abfabc":"print(y)","4495444f":"from sklearn.svm import SVR\nregressor = SVR(kernel = 'rbf')\nregressor.fit(X, y)","a297cdd8":"sc_y.inverse_transform(regressor.predict(sc_X.transform([[6.5]])))","1e5d1520":"plt.scatter(sc_X.inverse_transform(X), sc_y.inverse_transform(y), color = 'red')\nplt.plot(sc_X.inverse_transform(X), sc_y.inverse_transform(regressor.predict(X)), color = 'blue')\nplt.title('Truth or Bluff (SVR)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","084fa3c5":"X_grid = np.arange(min(sc_X.inverse_transform(X)), max(sc_X.inverse_transform(X)), 0.1)\nX_grid = X_grid.reshape((len(X_grid), 1))\nplt.scatter(sc_X.inverse_transform(X), sc_y.inverse_transform(y), color = 'red')\nplt.plot(X_grid, sc_y.inverse_transform(regressor.predict(sc_X.transform(X_grid))), color = 'blue')\nplt.title('Truth or Bluff (SVR)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","cb3116d9":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","7412aab0":"dataset = pd.read_csv('..\/input\/position-salaries\/Position_Salaries.csv')\nX = dataset.iloc[:, 1:-1].values\ny = dataset.iloc[:, -1].values","cba459a2":"from sklearn.tree import DecisionTreeRegressor\nregressor = DecisionTreeRegressor(random_state = 0)\nregressor.fit(X, y)","2b2a9c3b":"regressor.predict([[6.5]])","c093817a":"X_grid = np.arange(min(X), max(X), 0.01)\nX_grid = X_grid.reshape((len(X_grid), 1))\nplt.scatter(X, y, color = 'red')\nplt.plot(X_grid, regressor.predict(X_grid), color = 'blue')\nplt.title('Truth or Bluff (Decision Tree Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","739e073c":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","f188f1ad":"dataset = pd.read_csv('..\/input\/position-salaries\/Position_Salaries.csv')\nX = dataset.iloc[:, 1:-1].values\ny = dataset.iloc[:, -1].values","219d8813":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 10, random_state = 0)\nregressor.fit(X, y)","dc72367b":"regressor.predict([[6.5]])","1d0b61d3":"X_grid = np.arange(min(X), max(X), 0.01)\nX_grid = X_grid.reshape((len(X_grid), 1))\nplt.scatter(X, y, color = 'red')\nplt.plot(X_grid, regressor.predict(X_grid), color = 'blue')\nplt.title('Truth or Bluff (Random Forest Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","ae5fb42b":"## Importing the libraries","8bb4ea27":"## Importing the dataset","dafbf09a":"# Polynomial Regression","464902f5":"## Visualising the Random Forest Regression results (higher resolution)","be701835":"## Predicting a new result with Polynomial Regression","9a442d8b":"## Importing the libraries","63d077d0":"## Visualising the SVR results (for higher resolution and smoother curve)","d8559142":"## Visualising the SVR results","6fd8cd63":"## Training the Random Forest Regression model on the whole dataset","c2fc6375":"## Training the Linear Regression model on the whole dataset","80584361":"## Training the Decision Tree Regression model on the whole dataset","f66378be":"## Visualising the Linear Regression results","df36579e":"## Importing the libraries","ba0a11ee":"# Support Vector Regression (SVR)","9871ea8b":"## Feature Scaling","b5351280":"## Predicting a new result","1a71a9cc":"# Decision Tree Regression","3a4b217f":"## Importing the libraries","0cb0d520":"## Training the SVR model on the whole dataset","2e108a44":"## Predicting a new result with Linear Regression","391200bc":"# Random Forest Regression","30de5150":"## Importing the dataset","91f70574":"## Visualising the Decision Tree Regression results (higher resolution)","6a9b0378":"## Visualising the Polynomial Regression results (for higher resolution and smoother curve)","14cca4c4":"## Training the Polynomial Regression model on the whole dataset","80651f61":"## Predicting a new result","7fcc3c6c":"## Predicting a new result","09e13eee":"## Importing the dataset","6c1eab49":"## Importing the dataset","8c543b20":"## Visualising the Polynomial Regression results"}}