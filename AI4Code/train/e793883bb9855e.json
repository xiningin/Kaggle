{"cell_type":{"b0b02bfd":"code","20778916":"code","b75cf776":"code","8f56356c":"code","5145f212":"code","4ac88275":"code","9668166d":"code","36c05ab7":"code","fcb2c81f":"code","9b089fa5":"code","51a37d98":"code","d8d635b9":"code","bebf9fd5":"code","26d02e2f":"code","d40b610f":"code","b73c1010":"code","ca4a2057":"code","93b608f2":"code","9fec557a":"code","7e673274":"code","10d4e3e8":"code","65332d5c":"code","bfd8059d":"code","987177fa":"code","3c1af728":"code","4d6ec651":"code","ff03e58b":"code","84e5aa7f":"code","b4dacbba":"code","1a8efb45":"code","a1037dbe":"code","7ee3177f":"code","07a4b01b":"code","6fc2b8d0":"code","13c33196":"code","4ed9c5c5":"code","6ae54fbe":"markdown"},"source":{"b0b02bfd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","20778916":"import matplotlib.pyplot as plt\n%matplotlib inline","b75cf776":"data = pd.read_csv(\"..\/input\/time-series-starter-dataset\/Month_Value_1.csv\")","8f56356c":"data.head()","5145f212":"plt.figure(figsize = (18,10))\nplt.plot(data['Period'],data['Revenue'])","4ac88275":"data.info()","9668166d":"train = data.iloc[:64]\ntest = data.iloc[64:]","36c05ab7":"test","fcb2c81f":"train.drop('Period', axis = 1, inplace = True)","9b089fa5":"from sklearn.preprocessing import MinMaxScaler\n","51a37d98":"scaler = MinMaxScaler()","d8d635b9":"scaled_train = scaler.fit_transform(train)","bebf9fd5":"scaled_train","26d02e2f":"from tensorflow.keras.preprocessing.sequence import TimeseriesGenerator","d40b610f":"plt.figure(figsize = (18,10))\nplt.plot(train['Revenue'])","b73c1010":"length = 12\n\nbatch_size = 1\n\ngenerator = TimeseriesGenerator(scaled_train,scaled_train,batch_size=batch_size, length = length)","ca4a2057":"len(scaled_train)","93b608f2":"len(generator)","9fec557a":"from tensorflow.keras.models import Sequential","7e673274":"from tensorflow.keras.layers import Dense,SimpleRNN,LSTM","10d4e3e8":"n_features = 4","65332d5c":"model = Sequential()\n\nmodel.add(SimpleRNN(50,input_shape = (length,n_features)))\nmodel.add(Dense(4))\n\nmodel.compile(loss = 'mse', optimizer = 'adam')","bfd8059d":"model.fit_generator(generator,epochs=50)","987177fa":"losses = pd.DataFrame(model.history.history)","3c1af728":"losses.plot()","4d6ec651":"first_eval_batch = scaled_train[-length:]","ff03e58b":"first_eval_batch = first_eval_batch.reshape(1,length,n_features)","84e5aa7f":"model.predict(first_eval_batch)","b4dacbba":"scaled_train[13]","1a8efb45":"prediction = []\n\nfirst_eval_batch = scaled_train[-length:]\ncurrent_batch = first_eval_batch.reshape(1,length,n_features)\n\nfor i in range(len(test)):\n    current_pred = model.predict(current_batch)[0]\n    prediction.append(current_pred)\n    current_batch = np.append(current_batch[:,1:,:], [[current_pred]], axis = 1)","a1037dbe":"prediction","7ee3177f":"true_prediction = scaler.inverse_transform(prediction)","07a4b01b":"len(true_prediction)","6fc2b8d0":"predicted = pd.DataFrame(true_prediction, columns=train.columns)","13c33196":"predicted_index = np.arange(65,97,step =1)","4ed9c5c5":"plt.plot(train.index,train['Revenue'])\nplt.plot(predicted_index,predicted['Revenue'])","6ae54fbe":"true_prediction = scaler.inverse(prediction)"}}