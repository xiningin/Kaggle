{"cell_type":{"b1206683":"code","a95ff90d":"code","fab8f86c":"code","6810259a":"code","5bf32035":"code","98658be0":"code","0776cf60":"code","8a152f97":"code","58d452fd":"code","9edb0b59":"code","ccc6fa5f":"code","9c5271d4":"code","c96130ad":"code","34f32738":"code","1377a4ea":"code","f36248e3":"code","d1f7092e":"code","9aba4f51":"code","109e5ec7":"code","8838f868":"code","0075160c":"code","8217c0ba":"code","babe7cc7":"code","44d3e16e":"code","73dff3d4":"code","6c6ae61e":"code","d960a3ac":"code","d41f2d82":"code","4385ef0d":"code","5ccff5ec":"code","577e4f3e":"code","670ef3cd":"code","e42c5abd":"code","7048607b":"code","55bb67db":"code","ae184295":"code","2c67facc":"code","3777ba86":"code","e85bdcbe":"code","3800f7ef":"code","aaee4291":"code","7545d8ef":"code","7cbc168e":"code","46511416":"code","0f53c67d":"code","3c35f7d4":"code","718aefcc":"code","accc90e2":"code","5f0879b4":"code","aad3859a":"code","512f6619":"code","3ab7732b":"code","9ea4c13e":"code","26fee553":"code","bb8a0da1":"code","fad1319d":"code","5ce69574":"code","e5faef58":"code","c3b0199d":"markdown","e093bcaa":"markdown","b9c9ead1":"markdown","91d90fde":"markdown","2c363c68":"markdown","6e30c342":"markdown","c689c90c":"markdown","c36bdde8":"markdown","e3935608":"markdown","f11f8c59":"markdown","60668b16":"markdown","992884e9":"markdown","df4cc4bf":"markdown","a6f8f857":"markdown","f6d64ff0":"markdown","8837f8ea":"markdown","4ed950e0":"markdown","cce9eb20":"markdown","8e85635d":"markdown","d24758a3":"markdown","9a4e497a":"markdown","8708e5da":"markdown","17d24f32":"markdown","172d63e0":"markdown","36b6e2ee":"markdown","fa3b34e8":"markdown","0006d6fa":"markdown","1fd3753b":"markdown","474171eb":"markdown","87dc7150":"markdown","9abc09ef":"markdown","f38a0d63":"markdown","90f731cd":"markdown"},"source":{"b1206683":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\nsns.set()","a95ff90d":"# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')","fab8f86c":"car= pd.read_csv(\"..\/input\/vehicle-dataset-from-cardekho\/car data.csv\")","6810259a":"# Let's see how our dataset looks like\n\ncar.head()","5bf32035":"# Let's see how many rows and columns do we have in the dataset.\n\ncar.shape","98658be0":"# Let's see some summary\n\ncar.describe()","0776cf60":"car.info()","8a152f97":"# To check if there are any outliers\n\ncar.describe(percentiles=[0.25,0.5,0.75,0.9,0.95,0.99])","58d452fd":"# To check if there are any missing values in the dataset\n\nimport missingno as mn\nmn.matrix(car)","9edb0b59":"# It's important to know how many years old the car is.\n\ncar['car_age']= 2020-car['Year']","ccc6fa5f":"# It's time to drop the Year column after the needed info is derived.\n\ncar.drop('Year',axis=1,inplace=True)","9c5271d4":"car.head()","c96130ad":"sns.pairplot(car)","34f32738":"sns.heatmap(car.corr(),annot=True,cmap='summer')","1377a4ea":"car.columns","f36248e3":"sns.barplot('Seller_Type','Selling_Price',data=car,palette='twilight')","d1f7092e":"sns.barplot('Transmission','Selling_Price',data=car,palette='spring')","9aba4f51":"sns.barplot('Fuel_Type','Selling_Price',data=car,palette='summer')","109e5ec7":"sns.regplot('Selling_Price','Present_Price',data=car)","8838f868":"sns.regplot('Selling_Price','Kms_Driven',data=car)","0075160c":"sns.barplot('Owner','Selling_Price',data=car,palette='ocean')","8217c0ba":"plt.figure(figsize=(10,5))\nsns.barplot('car_age','Selling_Price',data=car)","babe7cc7":"car.columns","44d3e16e":"fuel = pd.get_dummies(car['Fuel_Type'])\ntransmission = pd.get_dummies(car['Transmission'],drop_first=True)\nseller= pd.get_dummies(car['Seller_Type'],drop_first=True)","73dff3d4":"fuel.drop('CNG',axis=1,inplace=True)","6c6ae61e":"car= pd.concat([car,fuel,transmission,seller],axis=1)","d960a3ac":"car.head()","d41f2d82":"car.drop(['Fuel_Type','Seller_Type','Transmission'],axis=1,inplace=True)","4385ef0d":"#The column car name doesn't seem to add much value to our analysis and hence dropping the column\n\ncar= car.drop('Car_Name',axis=1)","5ccff5ec":"car.head()","577e4f3e":"from sklearn.model_selection import train_test_split\n\nnp.random.seed(0)\ndf_train, df_test = train_test_split(car, test_size = 0.3, random_state = 100)","670ef3cd":"num_vars=['Selling_Price','Present_Price','Kms_Driven']","e42c5abd":"from sklearn.preprocessing import StandardScaler\nscaler= StandardScaler()","7048607b":"df_train[num_vars]= scaler.fit_transform(df_train[num_vars])\ndf_test[num_vars]= scaler.transform(df_test[num_vars])","55bb67db":"y_train = df_train.pop('Selling_Price')\nX_train = df_train","ae184295":"from sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LinearRegression","2c67facc":"lm= LinearRegression()\nlm.fit(X_train, y_train)\n\nrfe= RFE(lm,10)\nrfe = rfe.fit(X_train, y_train)","3777ba86":"list(zip(X_train.columns,rfe.support_,rfe.ranking_))","e85bdcbe":"col = X_train.columns[rfe.support_]\ncol","3800f7ef":"X_train_rfe = X_train[col]","aaee4291":"import statsmodels.api as sm\nX_train_rfe= sm.add_constant(X_train_rfe)","7545d8ef":"model = sm.OLS(y_train,X_train_rfe).fit()\nmodel.summary()","7cbc168e":"X_train1= X_train_rfe.drop('Petrol',axis=1)","46511416":"X_train2= sm.add_constant(X_train1)\nmodel1= sm.OLS(y_train,X_train2).fit()\nmodel1.summary()","0f53c67d":"X_train3= X_train2.drop('Owner',axis=1)","3c35f7d4":"X_train4= sm.add_constant(X_train3)\nmodel2= sm.OLS(y_train,X_train4).fit()\nmodel2.summary()","718aefcc":"X_train5= X_train4.drop('Kms_Driven',axis=1)","accc90e2":"X_train6= sm.add_constant(X_train5)\nmodel3= sm.OLS(y_train,X_train6).fit()\nmodel3.summary()","5f0879b4":"X_train_new= X_train6.drop('const',axis=1)","aad3859a":"from statsmodels.stats.outliers_influence import variance_inflation_factor\n\nvif = pd.DataFrame()\nX = X_train_new\nvif['Features'] = X.columns\nvif['VIF'] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","512f6619":"y_train_pred = model3.predict(X_train6)","3ab7732b":"fig = plt.figure()\nsns.distplot((y_train - y_train_pred), bins = 20)\nfig.suptitle('Error Terms', fontsize = 20)                  # Plot heading \nplt.xlabel('Errors', fontsize = 18)  ","9ea4c13e":"#Dividing the test set into features and target.\n\ny_test = df_test.pop('Selling_Price')\nX_test = df_test","26fee553":"# Predicting the values by extracting the columns that our final model had\n\nX_test_pred= X_test[X_train_new.columns]\n\nX_test_pred= sm.add_constant(X_test_pred)","bb8a0da1":"y_pred= model3.predict(X_test_pred)","fad1319d":"fig = plt.figure()\nplt.scatter(y_test,y_pred)\nfig.suptitle('y_test vs y_pred', fontsize=20)              # Plot heading \nplt.xlabel('y_test', fontsize=18)                          # X-label\nplt.ylabel('y_pred', fontsize=16) ","5ce69574":"df = pd.DataFrame({'Actual':y_test,\"Predicted\":y_pred})\ndf.head()","e5faef58":"from sklearn.metrics import r2_score\nR2 = r2_score(y_test,y_pred)\nR2","c3b0199d":"## 1) Seller Type","e093bcaa":"## Dealing With Categorical Variables","b9c9ead1":"### This dataset contains information about used cars listed on www.cardekho.com\nThis data can be used for a lot of purposes such as price prediction to exemplify the use of linear regression in Machine Learning.","91d90fde":"### Selling Price of cars with Fuel Type of Diesel is higher than Petrol and CNG.","2c363c68":"## Visualization with Target variable","6e30c342":"### We have VIF < 5 and hence there is no Multicollinearity occurrence in our model.","c689c90c":"### Here we conclude that we don't have any outliers as the values are gradually increasing!","c36bdde8":"## Dividing dataset into Features(X) and Target(y)","e3935608":"## 6) Owner","f11f8c59":"### Dropping the \"Petrol\" variable which has p-value>0.05 resulting in insigificant.","60668b16":"### Selling Price of cars seems to have higher prices when sold by Dealers when compared to Individuals","992884e9":"### It can be observed that Selling Price would be higher for cars that are Automatic.","df4cc4bf":"## Reading and Understanding the Data","a6f8f857":"## 3) Fuel Type","f6d64ff0":"### Lesser the Kms driven higher the Selling Price.","8837f8ea":"## 4) Present Price","4ed950e0":"### Selling Price tends to increase with increase in the Present Price of cars.","cce9eb20":"### No missing values in the dataset\n\n","8e85635d":"## 5) Kms Driven","d24758a3":"### The datatypes of the columns are perfect and need no conversion!","9a4e497a":"## 7) Car Age","8708e5da":"## Conclusions:\n    \n* Present price of a car plays an important role in predicting Selling Price, One increases the other gradually increases.\n* Car age is effecting negatively as older the car lesser the Selling Price.\n* Selling Price of cars with Fuel type Diesel is higher.\n* Car of Manual type is of less priced whereas of Automatic type is high.\n* Cars sold by Individual tend to get less Selling Price when sold by Dealers.","17d24f32":"### Dropping the \"Owner\" variable which has p-value>0.05 resulting in insigificant.","172d63e0":"## Residual Analysis of the train data","36b6e2ee":"### Dropping the \"Kms_Driven\" variable which has p-value>0.05 resulting in insigificant.","fa3b34e8":"### Selling Price is high with less Owners used Cars","0006d6fa":"<h2 style='height:50px;text-align:center;font-size:30px;background-color:gray;border:20px;color:white'>Car Price Prediction On Cardekho<h2>","1fd3753b":"## Thank you!","474171eb":"## Import Relevant Libraries","87dc7150":"## Splitting the Data into Test and Train","9abc09ef":"### Selling Price of cars 2 years old would be high and gradually decreases with car of 17 years old","f38a0d63":"## Making Predictions","90f731cd":"## 2) Transmission"}}