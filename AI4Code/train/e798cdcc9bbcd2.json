{"cell_type":{"4b305ba6":"code","cd37c989":"code","22cb1e1a":"code","60979b32":"code","98cc5d72":"code","cb315af1":"markdown","af6baaa6":"markdown","4d63d33c":"markdown","ff15facd":"markdown"},"source":{"4b305ba6":"import pandas as pd\nfrom matplotlib import pyplot\nimport statsmodels.api as sm\nfrom statsmodels.graphics.tsaplots import plot_acf\nfrom statsmodels.tsa.arima.model import ARIMA\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nimport csv\nimport pmdarima as pm\nimport warnings\n\nwarnings.filterwarnings('ignore')","cd37c989":"df=pd.read_csv('Dataframe Outliers.csv')\n\n\n\nregion_dict={\n  1:'Coast',\n  2:'East',\n  3:'Far West',\n  4:'North',\n  5:'North Central',\n  6:'South',\n  7:'South Central',\n  8:'West'\n  }\n\nchoice=int(input(\"\"\"Enter number choice for region: \\n 1 for Coast \\n 2 for East \\n 3 for Far West \\n 4 for North \\n 5 for North Central \\n 6 for South \\n 7 for South Central \\n 8 for West \\n \"\"\"))","22cb1e1a":"if choice==1:\n    p=3\n    q=2\n    p_=3\n    q_=1\n    s_p=1\n    s_d=1\n    s_q=1\n    model='SARIMA'\nelif choice==2:\n    p=5\n    q=1\n    p_=3\n    q_=0\n    s_p=2\n    s_d=1\n    s_q=0\n    model='ARIMA'\nelif choice==3:\n    p=3\n    q=1\n    p_=1\n    q_=2\n    s_p=2\n    s_d=1\n    s_q=0\n    model='ARIMA'\nelif choice==4:\n    p=5\n    q=1\n    p_=2\n    q_=0\n    s_p=2\n    s_d=1\n    s_q=0\n    model='SARIMA'\nelif choice==5:\n    p=4\n    q=4\n    p_=3\n    q_=1\n    s_p=2\n    s_d=1\n    s_q=0\n    model='ARIMA'\nelif choice==6:\n    p=5\n    q=1\n    p_=2\n    q_=0\n    s_p=2\n    s_d=1\n    s_q=0\n    model='SARIMA'\nelif choice==7:\n    p=5\n    q=1\n    p_=3\n    q_=1\n    s_p=0\n    s_d=1\n    s_q=1\n    model='ARIMA'\nelse:\n    p=3\n    q=1\n    p_=3\n    q_=0\n    s_p=2\n    s_d=1\n    s_q=0\n    model='ARIMA'","60979b32":"region_choice=region_dict[choice]\n\ndf_region=df[df['region']==region_choice]\ndf_region.set_index(['date'],inplace=True)\n\nsize = int(len(df_region['ercotNew']))-168\ny_train=df_region[['ercotNew']][0:size]\ny_test=df_region[['ercotNew']][size:]","98cc5d72":"features=['windspeedMilesNew','winddirDegreeNew','precipMMNew','cloudcoverNew','HeatIndexCNew',\n          'DewPointCNew','WindGustMilesNew','pressureNew', 'FeelsLikeCNew',\n          'visibilityNew','weatherCodeNew','tempCNew','WindChillCNew','humidityNew']\n\nmin_rmse=5000\nvar_rmse='empty'\n    \nif model=='SARIMA':\n    short_y_train=y_train.tail(8766)\n    \n\n    for col in features:\n        x_train=df_region[0:size].tail(8766)[[col]]\n        x_test=df_region[size:][[col]]\n\n        mod = sm.tsa.statespace.SARIMAX(short_y_train,order=(p_,1,q_),seasonal_order=(s_p,s_d,s_q,24),\n                                exog=x_train, enforce_stationarity=False, enforce_invertibility=False)\n        results=mod.fit()\n        pred_uc = results.get_forecast(steps=168,exog=x_test)\n        forecast = pred_uc.predicted_mean\n        rmse = sqrt(mean_squared_error(y_test, forecast))\n        if rmse< min_rmse:\n            min_rmse=rmse\n            var_rmse=col\n        print('SARIMA model RMSE ({}):{}'.format(col,rmse))\n    print('min rmse model ({}):{}'.format(var_rmse,min_rmse))\n\nelse:\n\n    for col in features:\n        x_train=df_region[0:size][['uvIndexNew',col]]\n        x_test=df_region[size:][['uvIndexNew',col]]\n\n        mod = ARIMA(y_train,order=(p,0,q),\n                                exog=x_train)\n        results=mod.fit()\n        pred_uc = results.get_forecast(steps=168,exog=x_test)\n        forecast = pred_uc.predicted_mean\n        rmse = sqrt(mean_squared_error(y_test, forecast))\n        if rmse< min_rmse:\n            min_rmse=rmse\n            var_rmse=col\n        print('ARIMA model RMSE ({}):{}'.format(col,rmse))\n    print('min rmse model ({}):{}'.format(var_rmse,min_rmse))\n\n\n\na_file=open(\"rmse features selection.csv\",\"a\",newline='')\nwriter=csv.writer(a_file)\n\nwriter.writerow([region_choice + ' ' + var_rmse + str(min_rmse)])\n\na_file.close()\n","cb315af1":"Read in data for specified region","af6baaa6":"Create the needed data frames","4d63d33c":"Test each feature in the model and the minimum RSME is printed to CSV file. To add the feature to the model, and test the other features with it then remove from features list and add to x_train and x_test data frames","ff15facd":"Specify parameters for the ARIMA and SARIMA models that were obtained from the program ArimaModelTesting"}}