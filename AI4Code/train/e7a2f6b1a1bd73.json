{"cell_type":{"9b7f6894":"code","bc109a3b":"code","1dce79d3":"code","c98cb031":"code","853e28f7":"code","11b15b2b":"code","b671cab6":"code","6ff822fd":"code","5555ebb7":"code","6c7f712f":"code","f05ce6ba":"code","cfd2e0d2":"code","e3f91eb0":"code","8f313611":"code","aa9a1302":"code","7da69acd":"code","8a942f15":"code","acc3ecc2":"code","df790567":"code","d87d8cba":"code","e70aad85":"code","c011d08e":"code","2af174cb":"code","bfc507ea":"code","eb29bc9a":"code","59e4b525":"code","936b01d3":"code","b9822033":"code","e9f1bad9":"code","53190008":"code","9395b794":"code","382c801e":"code","ab136d39":"code","7744bbf6":"code","9c3351f3":"code","9cfdc581":"code","ae30118a":"code","3786a52d":"code","bbdfbd0d":"code","663bd013":"code","a8ee50bd":"code","bff304f5":"code","59145d82":"code","28437401":"code","2bbfcb5a":"code","c28dfaa5":"code","7c519b88":"code","53153862":"code","a6c9c9e5":"code","97ab2b87":"code","4823bf45":"markdown","f71bf806":"markdown","fef4f68f":"markdown","09685959":"markdown","c1b33882":"markdown","922c648e":"markdown","74d5bc4e":"markdown","0b96f95e":"markdown","5c8f8ae0":"markdown","306d491e":"markdown","5c8c3b48":"markdown","900f981f":"markdown","952628c0":"markdown","fc49d353":"markdown","7ede4de5":"markdown","e562ebdd":"markdown","badd9bcf":"markdown","03a94983":"markdown","1239df75":"markdown","65dd2986":"markdown","fb817003":"markdown","56dc3fd3":"markdown","9c61b1fd":"markdown","e562df3c":"markdown","7cc4f9f3":"markdown","f2124e06":"markdown","5189a897":"markdown","ee9bb8ec":"markdown","abbde4c1":"markdown","9e26b1e7":"markdown","f63394f7":"markdown","90b274cc":"markdown"},"source":{"9b7f6894":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","bc109a3b":"df=pd.read_csv(\"..\/input\/diamonds\/diamonds.csv\")\ndf.head()","1dce79d3":"#droping the Unnamed: 0 column\ndf.drop('Unnamed: 0',axis=1,inplace=True)\ndf.head(2)","c98cb031":"df.dtypes","853e28f7":"df.isna().sum()","11b15b2b":"df.shape","b671cab6":"df.describe()","6ff822fd":"df.drop(df[df['x']==0].index,inplace=True)\ndf.drop(df[df['y']==0].index,inplace=True)\ndf.drop(df[df['z']==0].index,inplace=True)\ndf.shape","5555ebb7":"df.columns","6c7f712f":"sns.distplot(df.carat)","f05ce6ba":"sns.regplot(x='carat',y='price',data=df)\nplt.title(\"Carat V\/s Price\")","cfd2e0d2":"df.cut.value_counts().plot(kind='bar')\nplt.xlabel('Cut',labelpad=20)\nplt.ylabel('Value Counts',labelpad=20)\nplt.title(\"Counts of categories of Cuts\",pad=20)","e3f91eb0":"sns.boxplot(x='cut',y='price',data=df)\nplt.title(\"Cut V\/s Price\")","8f313611":"df.color.value_counts().plot(kind='bar')\nplt.xlabel('Color',labelpad=20)\nplt.ylabel('Value Counts',labelpad=20)\nplt.title(\"Counts of categories of Color\",pad=20)","aa9a1302":"sns.boxplot(x='color',y='price',data=df)\nplt.title(\"Color V\/s Price\")","7da69acd":"df.clarity.value_counts().plot(kind='bar')\nplt.xlabel('Clarity',labelpad=20)\nplt.ylabel('Value Counts',labelpad=20)\nplt.title(\"Counts of categories of Clarity\",pad=20)","8a942f15":"sns.boxplot(x='clarity',y='price',data=df)\nplt.title(\"Clarity V\/s Price\")","acc3ecc2":"sns.distplot(df.depth)","df790567":"sns.relplot(x='depth',y='price',data=df)","d87d8cba":"sns.distplot(df.table,bins=20)","e70aad85":"sns.relplot(x='table',y='price',data=df)\nplt.title('Table V\/s Price')","c011d08e":"sns.distplot(df.x)","2af174cb":"sns.regplot(x='x',y='price',data=df)","bfc507ea":"sns.distplot(df.y)","eb29bc9a":"sns.regplot(x='y',y='price',data=df)","59e4b525":"sns.distplot(df.z)","936b01d3":"sns.regplot(x='z',y='price',data=df)","b9822033":"df_new=df.copy()\ndf_new.head(2)","e9f1bad9":"df_new.shape","53190008":"df_new.drop_duplicates(inplace=True,ignore_index=True,keep='first')\ndf_new.shape","9395b794":"df_new.tail()","382c801e":"df_new=pd.concat([df_new,pd.get_dummies(df_new[['cut','color','clarity']])],axis=1)\ndf_new.head(2)","ab136d39":"df_new.drop(['cut','color','clarity'],axis=1,inplace=True)\ndf_new.head(2)","7744bbf6":"from sklearn.preprocessing import MinMaxScaler","9c3351f3":"scale=MinMaxScaler()","9cfdc581":"scaled_df=scale.fit_transform(df_new[['carat','depth','table','price','x','y','z']])\nscaled_df=pd.DataFrame(scaled_df,columns=['carat','depth','table','price','x','y','z'])\nscaled_df.tail()","ae30118a":"df_new.drop(['carat','depth','table','price','x','y','z'],axis=1,inplace=True)\ndf_new.shape","3786a52d":"df_new[['carat','depth','table','price','x','y','z']]=scaled_df\ndf_new.shape","bbdfbd0d":"corr=df_new.corr()\ncorr=[abs(corr[col]['price']) for col in df_new.columns]\ncorr_list=list(zip(corr,df_new.columns))\ncorr_list.sort(key=lambda x:x[0],reverse=True)\ncorr_list","663bd013":"corrs,labels=zip(*corr_list)\nplt.figure(figsize=(15,5))\nplt.bar(np.arange(len(corr_list)),corrs)\nplt.xlabel(\"Attributes\",labelpad=20)\nplt.ylabel(\"Correlation with Price\",labelpad=20)\nplt.xticks(np.arange(len(corr_list)),labels,rotation=90)\nplt.title(\"Correlation of Attributes and Price\",pad=20)","a8ee50bd":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error","bff304f5":"lm=LinearRegression()","59145d82":"x=df_new[['carat','x','y','z']]\ny=df_new.price","28437401":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)","2bbfcb5a":"lm.fit(x_train,y_train)","c28dfaa5":"yhat=lm.predict(x_test)","7c519b88":"mean_error=mean_squared_error(yhat,y_test)\nmean_error","53153862":"r2=lm.score(x_test,y_test)\nr2","a6c9c9e5":"cross_val=cross_val_score(lm,x_test,y_test)\ncross_val.mean()","97ab2b87":"plt.figure(figsize=(10,8))\nsns.distplot(y_test,hist=False,label=\"Original Price\")\nsns.distplot(yhat,hist=False,label=\"Predicted price\")\nplt.title(\"Original vs Predicted Price (Multiple Linear Regression)\")\nplt.xlabel(\"Price\")","4823bf45":"## Multiple Regression","f71bf806":"Graph represents that table attribute range between 50 to 70 includes all range of price","fef4f68f":"the box plot shows that color doesn't much effect the price of diamond","09685959":"## 6. Table","c1b33882":"## 2. Cut","922c648e":"## Mean Squared Error","74d5bc4e":"# Visualization of features again price","0b96f95e":"the above box plot shows that cut doesn't have effect on price of the diamond","5c8f8ae0":"## Applying MinMaxScaler","306d491e":"almost every diamond depth lies between 60 to 65","5c8c3b48":"## R2 score","900f981f":"the above bar graph shows that ideal type of cut are most frequent in diamonds ","952628c0":"## Analysing Data","fc49d353":"### counting number of NAN values in each attribute","7ede4de5":"#### we can see that certain value in x,y,z (dimensions) are zero that is not possible so we will drop those rows having either x ,y or z value equal to zero","e562ebdd":"### loading Data into DataFrame","badd9bcf":"## 3. Color","03a94983":"the bar plot shows that color categorie of type G is more frequent among diamonds","1239df75":"## Cross validation score","65dd2986":"## Applying Dummy variable","fb817003":"# Diamomds DataSet Analysis","56dc3fd3":"## 4. Clarity","9c61b1fd":"clarity attribute also don't make much effect on price of diamond","e562df3c":"the above bar plot shows that SI1 and VS2 clarity in diamonds are most common","7cc4f9f3":"### Importing the modules","f2124e06":"## 5. Depth","5189a897":"## 7. x,y,z","ee9bb8ec":"### Data type of each attribute","abbde4c1":"the above graph shows clearly that depth range between 55 to 70 covers all price range","9e26b1e7":"# Feature Engineering","f63394f7":"The graph shows that diamond with carat value between 1 to 3 their price lies between 10000 to 20000 and carat value greater then 3 doesn't show much effect on price","90b274cc":"## 1. Carat"}}