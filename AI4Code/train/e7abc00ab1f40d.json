{"cell_type":{"2dbccb15":"code","44874e3d":"code","0f294673":"code","de7631aa":"code","aacdf367":"code","dcbf135c":"code","7fde6c08":"code","36250259":"code","66ed35e7":"code","dbdf5c16":"code","19ec4de5":"code","569c7e40":"code","56902005":"markdown","381f4d9e":"markdown"},"source":{"2dbccb15":"import numpy as np\nimport pandas as pd","44874e3d":"ROOT = \"\/kaggle\/input\/riiid-test-answer-prediction\"","0f294673":"!ls {ROOT}","de7631aa":"questions = pd.read_csv(f\"{ROOT}\/questions.csv\")\nlectures = pd.read_csv(f\"{ROOT}\/lectures.csv\")","aacdf367":"tags_lst = []\nfor tags in questions[~questions[\"tags\"].isnull()][\"tags\"]:\n    tags_lst += tags.split()\n    \ntags_lst = list(map(int, set(tags_lst)))\ntags_lst.sort()\n\nlen(tags_lst), max(tags_lst)","dcbf135c":"lst = []\nfor question_id, tags in questions[[\"question_id\", \"tags\"]].values:\n    ohe = np.zeros(188)\n    if str(tags) != \"nan\":\n        for tag in tags.split():\n            ohe += np.eye(188)[int(tag)]\n    \n    lst.append([question_id]+ohe.tolist())\ntags_df = pd.DataFrame(lst, columns=[\"question_id\"]+[f\"q_tag_{i}\" for i in range(188)]).astype(int)","7fde6c08":"tags_df.head()","36250259":"tags_df.to_csv(\"question_tags_ohe.csv\", index=None)","66ed35e7":"type_of_dic = {v: i for i, v in enumerate(lectures[\"type_of\"].unique())}\ntype_of_dic","dbdf5c16":"lst = []\nfor lecture_id, tag, type_of in lectures[[\"lecture_id\", \"tag\", \"type_of\"]].values:\n    row = [lecture_id, type_of_dic[type_of]] + np.eye(188)[tag].tolist()\n    lst.append(row)\nl_tag_df = pd.DataFrame(lst, columns=[\"lecture_id\", \"type_of\"] + [f\"l_tag_{i}\" for i in range(188)]).astype(int)","19ec4de5":"l_tag_df.head()","569c7e40":"l_tag_df.to_csv(\"lecture_tags_ohe.csv\", index=None)","56902005":"Question Tags One hot encode","381f4d9e":"Lectures Tag One hot encode"}}