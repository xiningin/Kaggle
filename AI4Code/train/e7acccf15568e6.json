{"cell_type":{"345c4999":"code","69e616a5":"code","74d8981c":"code","fa3d3557":"code","e3c35a94":"code","dffd7ede":"code","a55bf619":"code","a9176c5a":"code","bc070bf2":"code","cfe9cbc4":"code","9921bbd5":"code","198953b9":"code","51584af0":"code","947f783b":"code","49337d30":"code","3c6de4e3":"code","1a10d268":"code","a8a4b95b":"code","77d86c93":"code","59665643":"code","71692c98":"code","ba0c43a3":"code","bddaeb51":"code","20b4c637":"code","5a59347a":"code","925a5cac":"code","ee37dc42":"code","da8d3700":"code","2f8cbb75":"code","06c3a4db":"code","1a3cc9f2":"code","5e89d878":"code","405cb8bd":"code","1ae06287":"code","af9fdec6":"code","950ca5be":"code","b678a12b":"code","6574332e":"code","79f12bb1":"code","b957bb47":"code","abaab4d5":"code","e250a3b0":"code","d0591422":"code","051612f4":"code","180aeac7":"code","64665a1d":"code","8c5f51e5":"code","093890a5":"code","12cd152c":"code","ae2d36b6":"code","e4ee5b97":"code","3dde719a":"code","942346b1":"code","08bd2f51":"code","e188afc6":"code","2d7718fc":"code","4c69b165":"markdown","32bd2d56":"markdown","6107d948":"markdown","2d014b19":"markdown","80386164":"markdown","7c8ec600":"markdown","d0b1e6d3":"markdown","eb12cae5":"markdown","f0512d95":"markdown","d3c59b05":"markdown"},"source":{"345c4999":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport sklearn   # MAchine Learning Library for DS\nimport seaborn as sns # Visuallashdirma ucun\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error # Metricler modelin outputunu qiymetlendirmek ucun\nfrom sklearn.preprocessing import MinMaxScaler, StandardScaler # preproseesingde komekci modullar\nimport matplotlib.pyplot as plt # Vizuallashdirma ucun\nimport warnings # Notbukdaki xetalrin ortulmesi ucun\nwarnings.filterwarnings('ignore')\n","69e616a5":"df = sns.load_dataset('diamonds', index_col=0) # Datanin Seaborn kitabxanasindan cagirilmasi","74d8981c":"df.head(10) # Datadaki ilk 10 sutunu gosterir","fa3d3557":"df.shape # Datanin nece setr ve nee sutundan oldugu haqda melumat","e3c35a94":"df.info # Data Haqqinda Melumat","dffd7ede":"df.dtypes # Datadaki featurelerin tipleri","a55bf619":"df.describe()","a9176c5a":"'''fig, axes = plt.subplots(2, 3, figsize=(18, 10))\n\nfig.suptitle('Data Setdeki Outliersler')\n\nsns.boxplot(ax=axes[0, 0], data = df['price'])\nsns.boxplot(ax=axes[0, 1], data = df['depth'])\nsns.boxplot(ax=axes[0, 2], data = df['table'])\nsns.boxplot(ax=axes[1, 0], data = df['x'])\nsns.boxplot(ax=axes[1, 1], data = df['y'])\nsns.boxplot(ax=axes[1, 2], data = df['z']) '''\nsns.boxplot(df['z'])\n","bc070bf2":"sns.boxplot(df['price'])","cfe9cbc4":"df.describe() # Statistik melumatlar ucun","9921bbd5":"df.describe().T # Transpose ederek daha anlamli gorunush elde edirik","198953b9":"# Quartile methodundan istifade ederek datadaki outlierlerin aradan qaldirilmasi\n# for Price\nQ1 = df['price'].quantile(0.25)\nQ3 = df['price'].quantile(0.75)\nIQR = Q3-Q1\ndf = df[~((df['price'] < (Q1 - 1.5 * IQR)) | (df['price'] > (Q3 + 1.5 * IQR)))]\n# for x\nQ1 = df['x'].quantile(0.25)\nQ3 = df['x'].quantile(0.75)\nIQR = Q3-Q1\ndf = df[~((df['x'] < (Q1 - 1.5 * IQR)) | (df['x'] > (Q3 + 1.5 * IQR)))] \n# for y\nQ1 = df['y'].quantile(0.25)\nQ3 = df['y'].quantile(0.75)\nIQR = Q3-Q1\ndf = df[~((df['y'] < (Q1 - 1.5 * IQR)) | (df['y'] > (Q3 + 1.5 * IQR)))] \n# for z\nQ1 = df['z'].quantile(0.25)\nQ3 = df['z'].quantile(0.75)\nIQR = Q3-Q1\ndf = df[~((df['z'] < (Q1 - 1.5 * IQR)) | (df['z'] > (Q3 + 1.5 * IQR)))] \n# for depth\nQ1 = df['depth'].quantile(0.25)\nQ3 = df['depth'].quantile(0.75)\nIQR = Q3-Q1\ndf = df[~((df['depth'] < (Q1 - 1.5 * IQR)) | (df['depth'] > (Q3 + 1.5 * IQR)))] \n# for table\nQ1 = df['table'].quantile(0.25)\nQ3 = df['table'].quantile(0.75)\nIQR = Q3-Q1\ndf = df[~((df['table'] < (Q1 - 1.5 * IQR)) | (df['table'] > (Q3 + 1.5 * IQR)))] \n\n\n    ","51584af0":"df.describe() # Outlierlersiz data","947f783b":"sns.boxplot(df['price'])","49337d30":"# Corelasiyani gormek ucun\nplt.matshow(df.corr())\nplt.show() ","3c6de4e3":"# Daha yaxshi vizuallashdirma ile\ncmap = sns.diverging_palette(70,20,s=50, l=40, n=6, as_cmap=True)\nmatrix_cor_ucun = df.corr()\nf, ax = plt.subplots(figsize=(12,12))\nsns.heatmap(matrix_cor_ucun,cmap=cmap,annot=True)","1a10d268":"df.describe","a8a4b95b":"df.isnull().sum() # Datada ne qeder missing value var onun haqqinda melumat","77d86c93":"df['cut'].unique() # featurede ne qeder option var ? ","59665643":" df['cut'].astype('category').cat.codes # category typena cevirir","71692c98":"# Datamiz melum idi deye elle Map-den istifade ederek Categoricallari Numeric valuelere ceviririk OneHot Encode ve label encodersiz\ncut_class_dict = {'Fair': 1, 'Good': 2, 'Very Good': 3, 'Premium': 4, 'Ideal': 5, }\nclarity_dict   = {'SI2': 2, 'SI1': 3, 'VS1': 5, 'VS2': 4, 'VVS2': 6, 'VVS1': 7, 'I1': 1, 'IF': 8 }\ncolor_dict     = {'J': 1, 'I': 2, 'H': 3, 'G': 4, 'F': 5, 'E': 5,'D': 5,} \n\ndf['cut'] = df['cut'].map(cut_class_dict)\ndf['clarity'] = df['clarity'].map(clarity_dict)\ndf['color'] = df['color'].map(color_dict)\n","ba0c43a3":"df.head()","bddaeb51":"import sklearn\nfrom sklearn import preprocessing # Preproseesing elave edeirik data uzerinde ilkin emiliyyatlar ucun","20b4c637":"df = sklearn.utils.shuffle(df) # datanin siralamasini qarishdirir","5a59347a":"df.head()","925a5cac":"X = df.drop('price',axis=1).values # X ucun \"Price\" - featuresinden bashqa butun inputlari gotururuk\n#X = preprocessing.scale(X)\ny = df['price'].values # Y ucun 'Price' daki val;ueleri gotururuk","ee37dc42":"X.shape # X daki setr ve sutunlarin sayi ( sricesiz sutundlar 9 dan 8 olub)","da8d3700":"X","2f8cbb75":"y.shape","06c3a4db":"y","1a3cc9f2":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.20) # test olunacaq datanin hissesini gosterir ve bolur","5e89d878":"# Deyerleri 1 -1 ne yaxinlashdirir\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","405cb8bd":"X_test.size","1ae06287":"#Linear regression ile\nfrom sklearn.linear_model import LinearRegression\nLR = LinearRegression()\nLR.fit(X_train,y_train)","af9fdec6":"LR.score(X_test, y_test)","950ca5be":"#Lasso Cv ile\nfrom sklearn.linear_model import LassoCV\nreg = LassoCV(cv=15, random_state=0).fit(X_train,y_train)\nprint(reg.score(X_test, y_test))\nfrom sklearn.metrics import r2_score\ny_pred = reg.predict(X_test)\nprint(r2_score(y_test,y_pred))\n","b678a12b":"from sklearn.linear_model import RidgeCV","6574332e":"rid = RidgeCV()","79f12bb1":"rid.fit(X_train,y_train)","b957bb47":"rid.score(X_test, y_test)","abaab4d5":"from sklearn.linear_model import ElasticNet","e250a3b0":"elas = ElasticNet()","d0591422":"elas.fit(X_train,y_train)","051612f4":"elas.score(X_test, y_test)","180aeac7":"\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.tree import DecisionTreeRegressor","64665a1d":"regressor = DecisionTreeRegressor(random_state=0).fit(X_train,y_train)\nregressor.score(X_test, y_test)","8c5f51e5":"from sklearn.ensemble import GradientBoostingRegressor as GB\nimport xgboost as xgb","093890a5":"ne = 2000\nMgb = GB(n_estimators=ne)\nMxbg = xgb.XGBRegressor(n_estimators=ne)","12cd152c":"Mgb.fit(X_train, y_train)","ae2d36b6":"Mgb.score(X_test, y_test) # 0.9794685374882357","e4ee5b97":"Mxbg.fit(X_train, y_train)","3dde719a":"Mxbg.score(X_test, y_test) # 0.9763042062556956","942346b1":"#Neural Network ile\nfrom sklearn.neural_network import MLPRegressor","08bd2f51":"nt = MLPRegressor()\nnt.fit(X_train,y_train)\ny_pred = nt.predict(X_test)","e188afc6":"print(np.sqrt(mean_squared_error(y_test,y_pred)))\nprint(nt.score(X_test,y_test))","2d7718fc":"for X,y in zip(X_test, y_test):\n    ferq = y - Mxbg.predict([X])[0]\n    print(f'Model: {Mxbg.predict([X])[0]}, Actual: {y}, Xeta: {ferq:.1f}')","4c69b165":"# Ridge Ile","32bd2d56":"### Datadaki Featureler haqqinda Melumat <br>\n1. Price : Qiymet Us dollari ile (\\$326--\\$18,823)\n2. Color : Color is an indicator colum J is the worst and D is the best<br>\n3. clarity\t : Clarity colum also about the other elemets mixing value I1 is the worst but IF is best <br>\n4. Depth : Depth colum is realed with x and y size of the diaomns <br>\n5. Tabel : Table is Width of top of diamond relative to widest point (43--95)<br>\n6. X : x islength(0--10.74)mm <br>\n7. Y : y is width(0--58.9)mm <br>\n8. Z : z is depth(0--31.8)mm <br>\n9. Carat : carat colum is the best indicator shows the weight of the diamond equivalent to 200 mg. <br>","6107d948":"# XGBoosting ve GradientBoostingRegressordan Istifade","2d014b19":"# Outliers Dataletdeki reqemlerin uc noqteleri modele tesir edir","80386164":"# Simple Linear Regression istifade Ederek","7c8ec600":"# Corr Matrixi","d0b1e6d3":"# Desicion Tree Regressor istifade Ederek","eb12cae5":"# LassoCv Istifade Ederek","f0512d95":"# En Ugurlu Modeli Yoxlamaq Ucun Hemde Numayish Ucun","d3c59b05":"# ElasticNet Ile"}}