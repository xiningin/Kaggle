{"cell_type":{"15d249f2":"code","9c3c123e":"code","2e197630":"markdown"},"source":{"15d249f2":"# Kaggle\u306e\u30ab\u30fc\u30cd\u30eb\u3060\u3068\u30aa\u30d5\u30e9\u30a4\u30f3\u3067pip\u3057\u306a\u304f\u3066\u3082\u4f7f\u3048\u308b\u6a21\u69d8\uff1f\nimport os\nimport numpy as np\nfrom PIL import Image\n\n# Tesseract\n# \u53c2\u8003\uff1ahttps:\/\/gammasoft.jp\/blog\/ocr-by-python\/#tesseract\nimport pyocr\nimport pyocr.builders\nimport matplotlib.pyplot as plt\n\n# easyOCR\n# \u53c2\u8003:https:\/\/gammasoft.jp\/blog\/ocr-by-python\/#tesseract\nimport easyocr","9c3c123e":"img_path = \"..\/input\/shopee-product-matching\/train_images\/\"\nfiles = os.listdir(img_path)\n\n# Tesseract\ntools = pyocr.get_available_tools()\ntool = tools[0]\nbuilder = pyocr.builders.TextBuilder()\n    \n# EasyOCR\nreader = easyocr.Reader(['en'])\n    \nfor ix, file in enumerate(files):\n    # \u753b\u50cf\u8aad\u307f\u8fbc\u307f\n    img = Image.open(img_path + file)\n    \n    # Tesseract\u306e\u5b9f\u884c\n    result_tess = tool.image_to_string(img, lang=\"eng\", builder=builder)\n    \n    # easyOCR\n    result_easy = reader.readtext(img_path + file)\n    print(file)\n    print(\"=\"*50)\n    if len(result_tess)==0:\n        print(\"Tesseract : NaN\")\n    else:\n        print(\"Tesseract\u2193\u2193\")\n        print( result_tess)\n        \n    print(\"=\"*25)\n    if len(result_easy)==0:\n        print(\"EasyOCR : NaN\")\n    else:\n        print(\"EasyOCR\u2193\u2193\")\n        for i in range(len(result_easy)):# EasyOCR\u306f\u691c\u51fa\u3057\u305f\u77e9\u5f62\u3054\u3068\u306b\u3067\u3066\u304f\u308b\n            print(result_easy[i][1])\n    \n    plt.imshow(np.array(img))\n    plt.show()\n    if ix==30:\n        break","2e197630":"# Evaluate OCR"}}