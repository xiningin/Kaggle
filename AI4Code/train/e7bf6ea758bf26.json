{"cell_type":{"20b29e2b":"code","442cb40f":"code","c006f1ef":"code","e325e090":"code","e2d22fc9":"code","4c822e2a":"code","85e60c52":"code","8d25f76c":"code","e19e4fbc":"code","a3caa01e":"code","95f7a8e3":"markdown","f55e83a5":"markdown","7a4de5d8":"markdown","1c26de55":"markdown","9582275e":"markdown","2f2871ad":"markdown","5fb5660e":"markdown","a277aabb":"markdown"},"source":{"20b29e2b":"#Import libraries\nimport os\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime, timedelta\n\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nfrom matplotlib.patches import Rectangle\nimport matplotlib as mpl\n\nimport geopandas\n\n%matplotlib inline","442cb40f":"#Import libraries\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime, timedelta\n\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nfrom matplotlib.patches import Rectangle\nimport matplotlib as mpl\nimport geopandas\n\n%matplotlib inline ","c006f1ef":"#Load data\ndistricts = pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv', keep_default_na=False) #keep_default_na=False to separate NaN from null\nproducts = pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv')\nengagement_data = pd.DataFrame()\nfor district in districts['district_id'].unique():\n    temp_district = pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/{}.csv'.format(district), parse_dates=[0])\n    temp_district['district_id'] = district\n    engagement_data = engagement_data.append(temp_district)\nus_regions = pd.read_csv('https:\/\/raw.githubusercontent.com\/cphalpert\/census-regions\/master\/us%20census%20bureau%20regions%20and%20divisions.csv')\n\n#Historical county connection data from the same website as competition data https:\/\/www.fcc.gov\/form-477-county-data-internet-access-services\nstates_sample = districts['state'].unique() #States present in study data\ndef get_internet(year):\n    file = '..\/input\/countyconnections\/county_connections_dec_{}.csv'.format(year)\n    internet = pd.read_csv(file)\n    internet_filtered = internet[internet['statename'].isin(states_sample)]\n    internet_filtered['ratio_bin'] = pd.cut(internet_filtered['ratio'],[0,0.18,1,2])\n    return internet_filtered.groupby('ratio_bin')['countycode'].count()\ninternet_connection = pd.DataFrame()\nfor year in range(2016,2019):\n    internet_connection[year] = get_internet(year)","e325e090":"#CLEAN DATA\n#DISTRICTS\n#Replace null values with 0\nfor column in districts.columns:\n    districts[column] = districts[column].apply(lambda x: '0' if x == \"\" else x)  \n#Replace range values\npct_conversion = {'[0, 0.2[':'0-20%', '[0.2, 0.4[':'20-40%', '[0.4, 0.6[':'40-60%', '[0.8, 1[':'80-100%',\n                 '[0.6, 0.8[':'60-80%', '[0.18, 1[':'18-100%', '[1, 2[':'100-200%',\n                 '[14000, 16000[':'14-16k', 'NaN':'NA', '[6000, 8000[':'6-8k', '[10000, 12000[':'10-12k',\n                 '[8000, 10000[':'8-10k', '[12000, 14000[':'12-14k', '[16000, 18000[':'16-18k',\n                 '[20000, 22000[':'20-22k', '[18000, 20000[':'18-20k', '[22000, 24000[':'22-24k',\n                 '[4000, 6000[':'4-6k', '[32000, 34000[':'32-34k'}\ndistricts['pct_black\/hispanic'] = districts['pct_black\/hispanic'].replace(pct_conversion)\ndistricts['pct_free\/reduced'] = districts['pct_free\/reduced'].replace(pct_conversion)\ndistricts['county_connections_ratio'] = districts['county_connections_ratio'].replace(pct_conversion)\ndistricts['pp_total_raw'] = districts['pp_total_raw'].replace(pct_conversion)\n#Add US regions to allow map plotting and possible aggreggating by regions\nus_regions.rename(columns={'State': 'state'}, inplace=True)\ndistricts = pd.merge(districts,us_regions, on='state', how='left')\n\n#PRODUCTS\n#Rename column to allow merge\nproducts.rename(columns={'LP ID': 'lp_id'}, inplace=True)\n#Split Primary Essential Function and rename\nproducts[['Function Category','Primary Essential Function']] = products['Primary Essential Function'].str.split(pat=' - ', expand = True, n=1)\nfunction_conversion = {'LC':'Learning & Curriculum', 'CM':'Classroom Management', 'SDO':'School & District Operations'}\nproducts['Function Category'] = products['Function Category'].replace(function_conversion)\n\n#ENGAGEMENT DATA\n#Replace NaN with 0\nengagement_data.fillna(0, inplace=True)\n#Change product ip to integer to allign with products table\nengagement_data['lp_id'] = engagement_data['lp_id'].astype('int64')\n#Add day of week\nengagement_data['dayofweek'] = engagement_data['time'].dt.dayofweek+1\n\n#Merge all data in one table\nall_data = pd.merge(pd.merge(engagement_data,districts,on='district_id',how='left'), products, on='lp_id', how='left')","e2d22fc9":"fig, (ax1, ax2) = plt.subplots(1,2, figsize=(20,10))\n\n#Aggregate distric information\ndistricts_count = pd.merge(districts.groupby('state')['district_id'].count().sort_values(ascending=False), us_regions[['state','State Code']], on='state', how='left')\n\n#Prepare table\nnormal = mpl.colors.Normalize(districts_count['district_id'].min()-1, districts_count['district_id'].max()+1)\ncolors = plt.cm.Purples(normal(districts_count['district_id']))\ncolors[0] = [0.5,0.5,0.5,1] #Change NaN to 0\n\n#Plot table\nthe_table = ax1.table(\n    cellText=districts_count[['state','district_id']].values,\n    colLabels=['State','# districts'],\n    cellLoc='center',\n    loc='center', \n    cellColours=list(zip(colors,colors)),\n    colWidths=[0.4, 0.3])\nthe_table.auto_set_font_size(False)\nthe_table.set_fontsize(12)\nthe_table.scale(1,1.7)\nax1.axis('off')\nax1.axis('tight')\nax1.set_title('1.1 States Included in Study Data', fontsize = 20, color='dimgrey')\n\n#Preparing map\nstates = geopandas.read_file('..\/input\/usshapefile\/cb_2018_us_state_20m.shp')\nstates.rename(columns={'STUSPS':'State Code'}, inplace=True) #To allow merge\nstates = states.merge(districts_count[['State Code', 'district_id']], on='State Code', how='left') #Add district_id count\nstates = states[(states['NAME']!='Alaska') & (states['NAME']!='Hawaii') & (states['NAME']!='Puerto Rico')] #Exclude certain states\n\n#Plot map\nax2 = states[states['district_id'].isna()].to_crs(epsg=5071).plot(\n    color='white',\n    ax=ax2,\n    linewidth=0.5,\n    edgecolor='lightgrey')\nax2 = states[states['district_id'].notna()].to_crs(epsg=5071).plot(\n    column='district_id',\n    cmap='Purples',\n    linewidth=1,\n    edgecolor='black',\n    legend = False,\n    vmax=57,\n    ax=ax2)\nax2.axis('off')\nax2.set_title('1.2 Map of States Included in Study Data', \n             fontsize = 20,\n             color='dimgrey')\nplt.show()","4c822e2a":"fig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2,2, figsize=(18,14))\n\n#Prepare data for Internet connectivity\nconnection = districts.pivot_table(index='county_connections_ratio', columns='locale', values='district_id', aggfunc=np.count_nonzero, fill_value=0)[['City','Suburb','Town','Rural','NaN']]\nlabels = ['0-18%', '18%-100%', '>100%', 'No data']\n\nx1 = np.arange(5)  # the label locations\nwidth = 0.25  # the width of the bars\n\n#Plot connectivity\nax1.bar(x1 + 0, connection.values[0], width=width, label=labels[0], color='rebeccapurple')\nax1.bar(x1 + width, connection.values[1], width=width, label=labels[1], color='mediumpurple')\nax1.bar(x1 + 2*width, connection.values[2], width=width, label=labels[2], color='magenta')\nax1.bar(x1 + 3*width, connection.values[3], width=width, label=labels[3], color='firebrick')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax1.set_ylabel('Number of school districts in sample data', \n             fontsize = 12,\n             color='grey')\nax1.set_title('2.1 Households with Internet Connection Speed > 200kbs', \n             fontsize = 14,\n             color='slategrey')\nax1.set_xticks(x1+0.25)\nax1.set_xticklabels(['City','Suburb','Town','Rural','NaN'], fontsize=14)\nax1.tick_params(colors='grey')\nax1.legend(labelcolor='grey', fontsize=14)\nax1.set_facecolor('ghostwhite')\nax1.spines[['top','right','bottom','left']].set_visible(False)\nax1.text(3,60, 'Most of households in districts\\nhave broadband connection\\nof >200kbs', fontsize=14, ha='center', color='red', backgroundcolor='white')\n\n\n#Prepare data for connectivity evolution 2016-2018\nx2 = np.arange(3)  # the label locations\nwidth = 0.25  # the width of the bars\n\nax2.bar(x2 + 0, internet_connection.values[0], width=width, label=labels[0], color='rebeccapurple')\nax2.bar(x2 + width, internet_connection.values[1], width=width, label=labels[1], color='mediumpurple')\nax2.bar(x2 + 2*width, internet_connection.values[2], width=width, label=labels[2], color='magenta')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax2.set_ylabel('Number of school districts', \n             fontsize = 12,\n             color='grey')\nax2.set_title('2.2 Broadband Connections over Time', \n             fontsize = 14,\n             color='slategrey')\nax2.set_xticks(x2+width)\nax2.set_xticklabels(['2016','2017','2018'], fontsize=14)\nax2.tick_params(colors='grey')\nax2.legend(labelcolor='grey', fontsize=14)\nax2.set_facecolor('ghostwhite')\nax2.spines[['top','right','bottom','left']].set_visible(False)\nax2.text(1.5,800, 'Most households already have\\na good broadband connection\\nand there has been not much evolution\\nin the past years', fontsize=14, ha='center', color='red', backgroundcolor='white')\n\n#Plot locale composition\nlocale_count = districts.groupby('locale')['district_id'].count().reindex(['City','Suburb','Town','Rural','NaN'])\nax3.axis('equal')\nlocale = locale_count.index\nvalues = locale_count.values\nexplode = (0, 0, 0, 0, 0.1)\ncolors_locale = ['hotpink','mediumvioletred','pink','deeppink','firebrick']\nax3.pie(values,\n       labels = locale,\n       explode=explode,\n       autopct='%1.1f%%',\n       pctdistance=0.8,\n       counterclock=False,\n       startangle=90,\n       colors=colors_locale,\n       textprops={'color':\"dimgray\", 'size':\"large\"})\nax3.set_title('2.3 Percentage of Data per Locale in Study Data', \n             fontsize = 14,\n             color='slategrey')\nax3.text(1,0.2, 'The majority of Americans lives\\nin suburbs, therefore\\nit is most represented locale\\nin the study data', fontsize=14, ha='center', color='red', backgroundcolor='white')\n\n#Plot connectivity based on economical status\nconnection_economy = districts.pivot_table(index='county_connections_ratio', columns='pct_free\/reduced', values='district_id', aggfunc=np.count_nonzero, fill_value=0)\nx4 = np.arange(6)  # the label locations\nwidth = 0.25  # the width of the bars\n\nax4.bar(x4 + 0, connection_economy.values[0][0:-1], width=width, label=labels[0], color='rebeccapurple')\nax4.bar(x4 + width, connection_economy.values[1][0:-1], width=width, label=labels[1], color='mediumpurple')\nax4.bar(x4 + 2*width, connection_economy.values[2][0:-1], width=width, label=labels[2], color='magenta')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax4.set_xlabel('Percentage of students egligible for free or reduced-price lunch\\nhigher percentage group - less income households', \n             fontsize = 12,\n             color='grey')\nax4.set_ylabel('Number of school districts in sample data', \n             fontsize = 12,\n             color='grey')\nax4.set_title('2.4 Broadband Connectivity based on Household Economical Status', \n             fontsize = 14,\n             color='slategrey')\nax4.set_xticks(x4+width)\nax4.set_xticklabels(['0', '0-20%', '20-40%', '40-60%', '60-80%', '80-100%'], fontsize=14)\nax4.tick_params(colors='grey')\nax4.legend(labelcolor='grey', fontsize=14)\nax4.set_facecolor('ghostwhite')\nax4.spines[['top','right','bottom','left']].set_visible(False)\nax4.text(4.5,25, 'The economical status\\nof households does not impact\\nbroadband access', fontsize=14, ha='center', color='red', backgroundcolor='white')\n\nfig.set_facecolor('white')","85e60c52":"#Prepare current status graph\nengagement_byday = all_data.groupby('time')['engagement_index'].sum()\n\n#Important dates for analysis\nstart_1920 = datetime.fromisoformat('2020-01-02') #Restart school year 2019-2020 after New Year break\nstart_covid = datetime.fromisoformat('2020-02-17') #Date of school closures due to covid\nend_1920 = datetime.fromisoformat('2020-06-06') #End of 2019-2020 school year\nstart_2021 = datetime.fromisoformat('2020-08-31') #Start of 2020-2021 school year\nend_2021 = datetime.fromisoformat('2020-12-21') #Start of Christmas break\n\n#Function to calculate average over period\ndef calculate_average_period(df, start_date, end_date):\n    mask = (df.index >= start_date) & (df.index < end_date)\n    return df.loc[mask].mean()\n\n#Calculate average engagement index in periods\navg_1920_before = calculate_average_period(engagement_byday, start_1920, start_covid)\navg_1920_after = calculate_average_period(engagement_byday, start_covid, end_1920)\navg_2021_after = calculate_average_period(engagement_byday, start_2021, end_2021)\n\n#Calculate percentage increase in engament\ndelta_1920 = int((avg_1920_after-avg_1920_before)\/avg_1920_before*100)\ndelta_2021 = int((avg_2021_after-avg_1920_before)\/avg_1920_before*100)\n\nfig, ax = plt.subplots(figsize=(20,8))\n#Main plot\nax.plot(engagement_byday,color='indigo',linewidth=0.5)\n\nax.set_facecolor('ghostwhite')\nax.spines[['top','right','bottom','left']].set_visible(False)\n\n#Plot averages\nax.plot([start_1920,start_covid],[avg_1920_before,avg_1920_before],color='rebeccapurple',linewidth=3)\nax.plot([start_covid,end_1920],[avg_1920_after,avg_1920_after],color='rebeccapurple',linewidth=3)\nax.plot([start_2021,end_2021],[avg_2021_after,avg_2021_after],color='rebeccapurple',linewidth=3)\n\n#Plot increase info\nax.text(start_covid,avg_1920_before + (avg_1920_after-avg_1920_before)\/2,s='\u2191 {}%'.format(delta_1920),fontsize=24,ha='right',va='center',color='firebrick')\nax.text(start_2021,avg_1920_before + (avg_2021_after-avg_1920_before)\/2,s='\u2191 {}%'.format(delta_2021),fontsize=24,ha='right',va='center',color='firebrick')\nax.plot([start_covid,start_covid],[avg_1920_before, avg_1920_after],linewidth=3,color='firebrick')\nax.plot([start_2021,start_2021],[avg_1920_before, avg_2021_after],linewidth=3,color='firebrick')\n\n#Plot reference lines\nax.plot([start_covid,start_covid],[0, avg_1920_after+6000000],linewidth=1.5,linestyle='dotted',color='grey')\nax.plot([end_1920,end_1920],[0, avg_1920_after+1000000],linewidth=1.5,linestyle='dotted',color='grey')\nax.plot([start_2021,start_2021],[0, avg_2021_after+1000000],linewidth=1.5,linestyle='dotted',color='grey')\nax.plot([end_2021,end_2021],[0, avg_2021_after+1000000],linewidth=1.5,linestyle='dotted',color='grey')\nax.plot([start_covid,start_2021],[avg_1920_before, avg_1920_before],linewidth=1.5,linestyle='dashed',color='grey')\n\n#Plot school year\nax.add_patch(Rectangle([start_1920,0], end_1920-start_1920, -1900000, facecolor='lavender', edgecolor='rebeccapurple'))\nax.text(start_1920+(end_1920 - start_1920)\/2, -1900000\/2, s='School year 2019-2020', fontsize=10, ha='center', va='center', color='rebeccapurple')\nax.add_patch(Rectangle([start_2021,0], end_2021-start_2021, -1900000, facecolor='lavender', edgecolor='rebeccapurple'))\nax.text(start_2021+(end_2021 - start_2021)\/2, -1900000\/2, s='School year 2020-2021', fontsize=10, ha='center', va='center', color='rebeccapurple')\nax.text(start_covid, 19000000, s='School closures\\ndue to COVID-19\\n|\\nV', fontsize=14, ha='center', va='top', color='firebrick')\nax.text(start_1920+(start_covid-start_1920)\/2, 22000000, s='(I)', fontsize=20, ha='center', va='top', color='rebeccapurple')\nax.text(start_covid+(end_1920-start_covid)\/2, 22000000, s='(II)', fontsize=20, ha='center', va='top', color='rebeccapurple')\nax.text(end_1920+(start_2021-end_1920)\/2, 22000000, s='(III)', fontsize=20, ha='center', va='top', color='rebeccapurple')\nax.text(start_2021+(end_2021-start_2021)\/2, 22000000, s='(IV)', fontsize=20, ha='center', va='top', color='rebeccapurple')\nax.text(datetime.fromisoformat('2020-07-31'), 24000000, s='Periods', fontsize=20, ha='center', va='top', color='rebeccapurple')\n\n#Format main plot\nax.set_facecolor('ghostwhite')\nax.spines[['top','right','bottom','left']].set_visible(False)\n\n#Format Axes\nax.set_title('3.1 Engagement index in selected school districts in 2020', \n             fontsize = 20,\n             color='slategrey')\nplt.ylabel('Total page-load events per 1000 students', \n             fontsize = 12,\n             color='grey')\nax.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\nax.xaxis.set_major_locator(mdates.MonthLocator(interval=1))\nax.set_xlim(engagement_byday.index.min()-timedelta(days = 5), engagement_byday.index.max()+timedelta(days = 5))\nax.set_ylim(-2000000, 25000000)\nax.tick_params(colors='grey')\nfig.set_facecolor('white')\nplt.show()","8d25f76c":"#Calculate data for function category change due to COVID-19\nfunction_categories=['Learning & Curriculum','School & District Operations','Classroom Management','LC\/CM\/SDO']\nfunction_categories_colors = ['indigo','rebeccapurple','mediumorchid','plum']\n\n#Sum by date\n#function_evolution = all_data[all_data['dayofweek'].isin([1,2,3,4,5])].pivot_table(index=['time', 'Function Category'], values='engagement_index', aggfunc=np.sum, fill_value=0)\nfunction_evolution = all_data.pivot_table(index=['time', 'Function Category'], values='engagement_index', aggfunc=np.sum, fill_value=0)\n#Reset to turn index into collumns\nfunction_evolution.reset_index(inplace=True)\n#Add periods\nfunction_evolution['period'] = pd.cut(function_evolution['time'],\n       [start_1920,start_covid,end_1920,start_2021,end_2021],\n       right=True,\n       labels=['I', 'II', 'III', 'IV'])\n#Average per period\nfunction_evolution_pivot = function_evolution[function_evolution['period'].notna()].pivot_table(index='period', columns='Function Category', values='engagement_index', aggfunc=np.mean, fill_value=0)[function_categories]\n#Add empty column in front to input labels\nfunction_evolution_pivot.loc[''] = [0,0,0,0]\n\n#Transpose dataframe to calculate percentage\nfep_transposed = function_evolution_pivot.loc[['I','II','IV']].transpose()\n#Calculate percentages in each period\nfor column in fep_transposed.columns:\n    for row in fep_transposed.index:\n        fep_transposed['perc_{}'.format(column)] = fep_transposed[column] \/ fep_transposed[column].sum() * 100\n#Calculate percentage change between periods\nfep_transposed['perc_ItoII'] = (fep_transposed['II'] - fep_transposed['I'])\/fep_transposed['I']*100\nfep_transposed['perc_IItoIV'] = (fep_transposed['IV'] - fep_transposed['II'])\/fep_transposed['II']*100\n#Transpose back to get a table of percentages\nfunction_evolution_perc = fep_transposed[['perc_I', 'perc_II', 'perc_IV', 'perc_ItoII', 'perc_IItoIV']].transpose().astype('int')\n#Calculate positions for text percentage change\nfe_transposed = function_evolution_pivot.loc[['I','II','IV']].transpose()\nfe_transposed['ItoII'] = (fe_transposed['I'] + fe_transposed['II'])\/4 + (fe_transposed.shift(1).cumsum().fillna(0)['I']+fe_transposed.shift(1).cumsum().fillna(0)['II'])\/2\nfe_transposed['IItoIV'] = (fe_transposed['II'] + fe_transposed['IV'])\/4 + (fe_transposed.shift(1).cumsum().fillna(0)['II']+fe_transposed.shift(1).cumsum().fillna(0)['IV'])\/2\nfe_positions = fe_transposed.transpose()\n\n#Plot data\nfig, ax = plt.subplots(figsize=(18,8))\n\n#Plot bar chart\nax = function_evolution_pivot.loc[['', 'I','II','IV']].plot.bar(stacked=True,\n                                                      color=function_categories_colors,\n                                                      width=0.5,\n                                                      ax=ax)\n\n#Add category labels\nax.text(0,600000,function_categories[0], fontsize=16, ha='center', va='top', color='indigo') #, backgroundcolor='indigo')\nax.text(0,function_evolution_pivot.values[0,0]+500000,function_categories[1],fontsize=16, ha='center', va='top', color='rebeccapurple') #, backgroundcolor='rebeccapurple')\nax.text(0,function_evolution_pivot.values[0,0]+function_evolution_pivot.values[0,1]+500000,function_categories[2],fontsize=16, ha='center', va='top', color='mediumorchid') #, backgroundcolor='mediumorchid')\nax.text(0,function_evolution_pivot.values[0,0]+function_evolution_pivot.values[0,1]+function_evolution_pivot.values[0,2]+1000000,function_categories[3],fontsize=16, ha='center', va='top', color='plum') #, backgroundcolor='mediumorchid')\n\n#Add reference lines\nfor i in range(0,2):\n    for j in range(0,4):\n        ax.plot([1.25+i,1.75+i],\n            [function_evolution_pivot.loc[['I','II','IV']].values[i,:j+1].sum(), function_evolution_pivot.loc[['I','II','IV']].values[i+1,:j+1].sum()],\n            linewidth=1.5,\n            linestyle='dotted',\n            color=function_categories_colors[j])\n\n#Add percentage increase between periods\nfor i in range(0,2):\n    for j in range(0,4):\n        if i==0 and j==3:\n            ax.text(i+1.5,fe_positions.values[i+3,j]*1.05, str(function_evolution_perc.values[i+3,j])+'%', ha='center', va='center', color=function_categories_colors[j], fontsize=16)\n        else:\n            ax.text(i+1.5,fe_positions.values[i+3,j], str(function_evolution_perc.values[i+3,j])+'%', ha='center', va='center', color=function_categories_colors[j], fontsize=16)\n\n#Add comment\nax.text(0.3,8000000, 'Classroom Management online service\\nwere subject to the largest increase\\nin use duting COVID-19', fontsize=14, ha='center', color='red', backgroundcolor='white')\n\n#Set Axis\nax.set_ylabel('Engagement index',fontsize = 14,color='grey')\nax.set_xlabel('Period', fontsize = 14,color='grey')\nax.set_title('3.2 Average Engagement Index per Online Platform Category in each Period in 2020', fontsize = 20,color='slategrey')\nax.set_xticklabels(labels=['', 'I - before COVID','II','IV'], fontsize=14, color='grey', rotation='horizontal')\nax.tick_params(colors='grey', bottom=False)\nax.legend().set_visible(False)\nax.set_facecolor('ghostwhite')\nax.spines[['top','right','bottom','left']].set_visible(False)\n\nfig.set_facecolor('white')","e19e4fbc":"#Calculate data for function category change due to COVID-19\n\n#Sum by date\nproduct_evolution = all_data.pivot_table(index=['time', 'Function Category','Product Name'], values='engagement_index', aggfunc=np.sum, fill_value=0)\n#Reset to turn index into columns\nproduct_evolution.reset_index(inplace=True)\n#Add periods\nproduct_evolution['period'] = pd.cut(product_evolution['time'],\n       [start_1920,start_covid,end_1920,start_2021,end_2021],\n       right=True,\n       labels=['I', 'II', 'III', 'IV'])\n#Average per period\nproduct_evolution_pivot = product_evolution[product_evolution['period'].notna()].pivot_table(index='period', columns=['Function Category','Product Name'], values='engagement_index', aggfunc=np.mean, fill_value=0)[function_categories]\n\nproduct_evolution = product_evolution_pivot.loc[['I','II','IV']].transpose().reset_index()\n\ntop5products = product_evolution.sort_values(by=['Function Category','IV'], ascending=False).groupby('Function Category').head(5)\n#Shorten long product names\nproductname_dict = {'Seesaw : The Learning Journal':'Seesaw',\n                    'Chrome Web Store':'Chrome',\n                    'Loom - Video Recorder: Screen, Webcam and Mic':'Loom',\n                    'Google Classroom':'G Classroom',\n                    'Google Calendar':'G Calendar',\n                    'Google Hangouts':'G Hangouts',\n                    'Google Docs':'G Docs',\n                    'Google Sites':'G Sites',\n                    'Google Forms':'G Forms',\n                    'Google Sheets':'G Sheets',\n                    'Google Drive':'G Drive'}\ntop5products['Product Name'] = top5products['Product Name'].replace(productname_dict)\n\n#Plot Graph\nfig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2,2, figsize=(20,10), sharey=True)\n\nx = np.arange(5)  # the label locations\nwidth = 0.25  # the width of the bars\nplt.ylim(-200000, 3700000)\n\n#Plot1\ncategory = 0\nax1.bar(x -0.02, top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[1], width=width, color=function_categories_colors[category])\nax1.bar(x + width, top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[2], width=width, color=function_categories_colors[category])\nax1.bar(x + width*2 + 0.02, top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[3], width=width, color=function_categories_colors[category])\n#Add period text\nfor i in x:\n    ax1.text(i -0.02, -150000, 'I', ha='center', color='dimgrey', fontsize=12)\n    ax1.text(i + width, -150000, 'II', ha='center', color='dimgrey', fontsize=12)\n    ax1.text(i + width*2 + 0.02, -150000, 'IV', ha='center', color='dimgrey', fontsize=12)\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax1.set_ylabel('Engagement index', fontsize = 12, color='grey')\nax1.set_title(function_categories[category], fontsize = 18, color='slategrey')\nax1.set_xticks(x+0.25)\nax1.set_xticklabels(top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[0], fontsize=14)\nax1.tick_params(colors='grey')\nax1.set_facecolor('ghostwhite')\nax1.spines[['top','right','bottom','left']].set_visible(False)\nax1.text(1,2500000,'- Google Docs is the dominant product in this category\\n- YouTube became much used after holday break\\n- Kahoot! is the only product, which usage decreased', fontsize=13, color='red', backgroundcolor='white')\n\n#Plot2\ncategory = 1\nax2.bar(x -0.02, top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[1], width=width, color=function_categories_colors[category])\nax2.bar(x + width, top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[2], width=width, color=function_categories_colors[category])\nax2.bar(x + width*2 + 0.02, top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[3], width=width, color=function_categories_colors[category])\n#Add period text\nfor i in x:\n    ax2.text(i -0.02, -150000, 'I', ha='center', color='dimgrey', fontsize=12)\n    ax2.text(i + width, -150000, 'II', ha='center', color='dimgrey', fontsize=12)\n    ax2.text(i + width*2 + 0.02, -150000, 'IV', ha='center', color='dimgrey', fontsize=12)\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax2.set_ylabel('Engagement index', fontsize = 12, color='grey')\nax2.set_title(function_categories[category], fontsize = 18, color='slategrey')\nax2.set_xticks(x+0.25)\nax2.set_xticklabels(top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[0], fontsize=14)\nax2.tick_params(colors='grey')\nax2.set_facecolor('ghostwhite')\nax2.spines[['top','right','bottom','left']].set_visible(False)\nax2.text(1,2500000,'- Google Classroom is the dominant product\\nin this categoryfollowed by Schoology.\\nOther products are insignificant', fontsize=13, color='red', backgroundcolor='white')\n\n#Plot3\ncategory = 2\nax3.bar(x -0.02, top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[1], width=width, color=function_categories_colors[category])\nax3.bar(x + width, top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[2], width=width, color=function_categories_colors[category])\nax3.bar(x + width*2 + 0.02, top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[3], width=width, color=function_categories_colors[category])\n#Add period text\nfor i in x:\n    ax3.text(i -0.02, -150000, 'I', ha='center', color='dimgrey', fontsize=12)\n    ax3.text(i + width, -150000, 'II', ha='center', color='dimgrey', fontsize=12)\n    ax3.text(i + width*2 + 0.02, -150000, 'IV', ha='center', color='dimgrey', fontsize=12)\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax3.set_ylabel('Engagement index', fontsize = 12, color='grey')\nax3.set_title(function_categories[category], fontsize = 18, color='slategrey')\nax3.set_xticks(x+0.25)\nax3.set_xticklabels(top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[0], fontsize=14)\nax3.tick_params(colors='grey')\nax3.set_facecolor('ghostwhite')\nax3.spines[['top','right','bottom','left']].set_visible(False)\nax3.text(1,2500000,'- Product in this category are significantly\\nless used than two previous.', fontsize=13, color='red', backgroundcolor='white')\n\n#Plot4\ncategory = 3\nax4.bar(x -0.02, top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[1], width=width, color=function_categories_colors[category])\nax4.bar(x + width, top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[2], width=width, color=function_categories_colors[category])\nax4.bar(x + width*2 + 0.02, top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[3], width=width, color=function_categories_colors[category])\n#Add period text\nfor i in x:\n    ax4.text(i -0.02, -150000, 'I', ha='center', color='dimgrey', fontsize=12)\n    ax4.text(i + width, -150000, 'II', ha='center', color='dimgrey', fontsize=12)\n    ax4.text(i + width*2 + 0.02, -150000, 'IV', ha='center', color='dimgrey', fontsize=12)\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax4.set_ylabel('Engagement index', fontsize = 12, color='grey')\nax4.set_title(function_categories[category], fontsize = 18, color='slategrey')\nax4.set_xticks(x+0.25)\nax4.set_xticklabels(top5products[top5products['Function Category'] == function_categories[category]][['Product Name','I','II','IV']].transpose().values[0], fontsize=14)\nax4.tick_params(colors='grey')\nax4.set_facecolor('ghostwhite')\nax4.spines[['top','right','bottom','left']].set_visible(False)\nax4.text(1,2500000,'- Google Sheets and Drive appear to be\\nmost popular products\\combining all functions', fontsize=13, color='red', backgroundcolor='white')\n\nfig.suptitle('3.3 Top 5 Products per Function Category in each Period of 2020', fontsize = 20,color='slategrey')\nfig.set_facecolor('white')\nplt.plot()","a3caa01e":"fig, ((ax1, ax2),(ax3, ax4)) = plt.subplots(2,2, figsize=(20,16))\n\n#Black\/hispanic\n#Calculation\naccess_hispanic = all_data.groupby(['district_id','pct_black\/hispanic'])['pct_access'].mean().reset_index()\naccess_hispanic_count = access_hispanic.groupby('pct_black\/hispanic')['pct_access'].median()\n#Plot\nax1.scatter(access_hispanic.sort_values('pct_black\/hispanic', ascending=True)['pct_black\/hispanic'], access_hispanic.sort_values('pct_black\/hispanic', ascending=True)['pct_access'], alpha=0.05, s=200, color='rebeccapurple')\nax1.scatter(access_hispanic_count.index, access_hispanic_count.values, c='red', s=100)\nax1.set_title('4.1.1 Black or Hispanic based students', fontsize = 16, color='dimgrey')\nax1.set_xlabel('Percentage range of Black or Hispanic based students in district', fontsize = 12, color='grey')\nax1.set_ylabel('Percentage of students\\nthat accessed educational product', fontsize = 12, color='grey')\nax1.tick_params(colors='grey', axis='x', labelsize=14)\nax1.set_facecolor('ghostwhite')\nax1.spines[['top','right','bottom','left']].set_visible(False)\nax1.text(0.5,2.5, 'The higher the number of Black\/Hispanic\\nstudents in district, the lower percentage of\\nstudents who accessed online learning.\\nException:\\nDistricts in which Black\/Hispanic students\\npercentage is close to 100', fontsize=14, ha='left', color='red', backgroundcolor='white')\nax1.plot([0,3],[access_hispanic_count[0],access_hispanic_count[3]], linestyle='dashed', color='red', linewidth=2)\n\n#free\/reduced\n#Calculation\naccess_reduced = all_data.groupby(['district_id','pct_free\/reduced'])['pct_access'].mean().reset_index()\naccess_reduced_count = access_reduced.groupby('pct_free\/reduced')['pct_access'].median()\n#Plot\nax2.scatter(access_reduced.sort_values('pct_free\/reduced', ascending=True)['pct_free\/reduced'], access_reduced.sort_values('pct_free\/reduced', ascending=True)['pct_access'], alpha=0.1, s=200, color='rebeccapurple')\nax2.scatter(access_reduced_count.index, access_reduced_count.values, c='red', s=100)\nax2.set_title('4.1.2 Percentage of students in the districts eligible for free or reduced-price lunch', fontsize = 16, color='dimgrey')\nax2.set_xlabel('Percentage range of subsidized students in district', fontsize = 12, color='grey')\nax2.set_ylabel('Percentage of students\\nthat accessed educational product', fontsize = 12, color='grey')\nax2.tick_params(colors='grey', axis='x', labelsize=14)\nax2.set_facecolor('ghostwhite')\nax2.spines[['top','right','bottom','left']].set_visible(False)\nax2.text(0.5,2.9, 'The higher the number of student in need of help in district,\\nthe lower percentage of students who accessed\\nonline learning.\\nException:\\ndistricts in which almost 100% students is subsidized', fontsize=14, ha='left', color='red', backgroundcolor='white')\nax2.plot([0,4],[access_reduced_count[0],access_reduced_count[3]], linestyle='dashed', color='red', linewidth=2)\n\n#pp_total_raw\n#Calculation\naccess_expenditure = all_data.groupby(['district_id','pp_total_raw'])['pct_access'].mean().reset_index()\naccess_expenditure_count = access_expenditure.groupby('pp_total_raw')['pct_access'].median()\n#Sort by range\naccess_expenditure['sort'] = access_expenditure['pp_total_raw'].str.split('-', expand=True)[0]\naccess_expenditure['sort'] = access_expenditure['sort'].replace({'NA':1000})\naccess_expenditure['sort'] = access_expenditure['sort'].astype('int')\naccess_expenditure.sort_values(by='sort', inplace=True)\n#Plot\nax3.scatter(access_expenditure['pp_total_raw'], access_expenditure['pct_access'], alpha=0.1, s=200, color='rebeccapurple')\nax3.scatter(access_expenditure_count.index, access_expenditure_count.values, c='red', s=100)\nax3.set_title('4.1.3 Per-pupil local and federal expenditure', fontsize = 16, color='dimgrey')\nax3.set_xlabel('Per-pupil total expenditure range', fontsize = 12, color='grey')\nax3.set_ylabel('Percentage of students\\nthat accessed educational product', fontsize = 12, color='grey')\nax3.tick_params(colors='grey', axis='x', labelsize=12)\nax3.set_facecolor('ghostwhite')\nax3.spines[['top','right','bottom','left']].set_visible(False)\nax3.text(0.5,2.9, 'The higher expenditure per student, the higher access rate', fontsize=14, ha='left', color='red', backgroundcolor='white')\nax3.plot([2,3,4,5,6,7,8,9],access_expenditure.groupby('sort')['pct_access'].median()[2:10], linestyle='dashed', color='red', linewidth=2)\n\n#locale\naccess_locale = all_data.groupby(['district_id','locale'])['pct_access'].mean().reset_index()\naccess_locale_count = access_locale.groupby('locale')['pct_access'].median()\n#Sort by locale\nlocale_sort = {'Suburb':2, 'NaN':5, 'Rural':4, 'City':1, 'Town':3}\naccess_locale['sort'] = access_locale['locale'].replace(locale_sort)\naccess_locale.sort_values(by='sort', inplace=True)\n#Plot\nax4.scatter(access_locale['locale'], access_locale['pct_access'], alpha=0.1, s=200, color='rebeccapurple')\nax4.scatter(access_locale_count.index, access_locale_count.values, c='red', s=100)\nax4.set_title('4.1.4 Per-pupil total expenditure', fontsize = 16, color='dimgrey')\nax4.set_xlabel('Percentage of students in the districts eligible for free or reduced-price lunch', fontsize = 12, color='grey')\nax4.set_ylabel('Percentage of students\\nthat accessed educational product', fontsize = 12, color='grey')\nax4.tick_params(colors='grey', axis='x', labelsize=14)\nax4.set_facecolor('ghostwhite')\nax4.spines[['top','right','bottom','left']].set_visible(False)\nax4.text(0.4,2.9, 'Highest percentage of students that access online learning\\nlives in rural area, followed by studends living in suburbs', fontsize=14, ha='left', color='red', backgroundcolor='white')\n\n#fig.tight_layout(pad=1.0)\nfig.suptitle('4.1 Socioeconomic status and online learning relationship ', fontsize = 20, color='slategrey')\nfig.set_facecolor('white')","95f7a8e3":"<span style='font-family:Lucida; color:slategray; font-size: 18px;'>\n    <h2> The Effect of COVID-19 on Distance Learning<\/h2>\n    <p>In this analysis the effect on distance learning is measured by <strong> engagement index<\/strong>, which is the total numberr of page-load events per one thousand students of a given learning service on a given day. Chart 3.1 represents the engagement index for the school districts for each day in 2020.<\/p>\n    <ul>\n        <li>Four periods in 2020 can easily be identified:<br>\n            <strong>(I)<\/strong> - School year 2019\/2020 before pandemic spread and school closures<br>\n            <strong>(II)<\/strong> - School year 2019\/2020 after pandemic school closures<br>\n            <strong>(III)<\/strong> - Holiday period<br>\n            <strong>(IV)<\/strong> - School year 2020\/2021 before seasonal holiday<br><\/li><br>\n        <li>Overall, the averaged engagement index increased by <strong> 88% <\/strong> in the period right after school closures (period (II) <br>and <strong> 164% <\/strong> after the holidays (period (IV) ) compared to pre-pandemic period. <\/li>\n        <br>\n        <li>The waviness of the line is a result is due to weekdays and weekends learning pattern.<\/li><br>\n        <p><em>Mid February is considered as school closures date based on <a href=\"https:\/\/www.edweek.org\/leadership\/the-coronavirus-spring-the-historic-closing-of-u-s-schools-a-timeline\/2020\/07\">EducationWeek<\/a><\/em><\/p>\n    <\/ul>\n<\/span>","f55e83a5":"<span style='font-family:Lucida; color:slategray; font-size: 18px;'>\n    <h2>The picture of digital connectivity in 2020<\/h2>\n    <p>The essential factor to enable efficient online learning is access to internet. In the study data, the connectivity is reflected as percentage of private broadband connections over >200 kbs considering all households in the district.<br>\n        The study data show, that in the majority of districts household are well connected independently from classified locale (city, suburb, town, rural) they lie in (see chart 2.1). This is also inline with the conclusions by the <a href=\"https:\/\/itif.org\/publications\/2020\/07\/13\/lessons-pandemic-broadband-policy-after-covid-19\">Information Technology and Innovation Foundation<\/a>, that although the internet traffic in 2020 increased, the network could accomodate this higher demand thanks to existing infrastructure.<\/p>\n    <ul>Other findings related to internet connectivity:\n        <li>In majority of the studied districts the percentage of '>200kbs connections' is between 18 to 100% <\/li>\n        <li>The internet connectivity has not evolved much in recent years based on <a href=\"https:\/\/www.fcc.gov\/form-477-county-data-internet-access-services\">Federal Communications Commision data<\/a>(see chart 2.2)<\/li>\n        <li>Most of the study data comes from suburb areas (see chart 2.3), which reflects the fact <a href=\"https:\/\/www.huduser.gov\/portal\/pdredge\/pdr-edge-frm-asst-sec-080320.html\">most Americans live in suburb neighbourhoods<\/a> <\/li>\n        <li> There is no relation between household economic status and access to internet. Intuitively, we could expect lower income households to have worse broadband. The data shows, that even lower income households have the same connection as others (see chart 2.4). In this case the household income status is identified by students egligibility for free or reduced price lunch. We can see that even districts where majority of students are egligible for lunch subsidy have internet speed of >200kbs<\/li>\n    <\/ul>\n<\/span>","7a4de5d8":"<span style='font-family:Lucida; color:slategray; font-size: 18px;'>\n    <h1> COVID-19 Imact on Distance Learning<\/h1>\n    <h2> Introduction <\/h2>\n    <p>Due to the COVID-19 many schools across the world were shut, leaving children and students are out of their classrooms.\nAs a result, education has changed drastically to e-learning, whereby teaching is undertaken remotely and through digital platforms. Some research articles highlight that online learning proves to increase retention of information, and takes less time, meaning the changes might be here to stay. However, other research shows that the traditional education access is far from equitable and the switch to e-learning has only increased the imbalance.<\/p>\n    <p> This analysis explores the state of digital learning in 2020 in United States and how the engagement of digital learning relates to factors such as district demographics, internet access, and state\/national level policies and events.<\/p>\n<\/span>","1c26de55":"<span style='font-family:Lucida; color:slategray; font-size: 18px;'>\n    <h2> Socioeconomic status vs online learning<\/h2>\n    <p>Four socioeconomic groups are considered in the analysis. Based on below charts a slight correlation can be observed between the groups and percentage of students who access e-learning products:<\/p>\n    <table style='font-family:Lucida; color:slategray; font-size: 18px;'>\n        <tr>\n            <th>Socioeconomic group<\/th>\n            <th>Percentage students in group<\/th>\n            <th>Percentage students who accessed e-learning products<\/th>\n        <\/tr>\n        <tr>\n            <td>Students identified as Black or Hispanic based<\/td>\n            <td style='text-align: center;'><strong>\u2191<\/strong><\/td>\n            <td style='text-align: center;'><strong>\u2193<\/strong><\/td>\n        <\/tr>\n        <tr>\n            <td>Students eligible for free or reduced-price lunch<\/td>\n            <td style='text-align: center;'><strong>\u2191<\/strong><\/td>\n            <td style='text-align: center;'><strong>\u2193<\/strong><\/td>\n        <\/tr>\n        <tr>\n            <td>Per-student expenditure range<\/td>\n            <td style='text-align: center;'><strong>\u2191<\/strong><\/td>\n            <td style='text-align: center;'><strong>\u2191<\/strong><\/td>\n        <\/tr>\n        <tr>\n            <td>Area the students reside in<\/td>\n            <td colspan=\"2\">Highest percentage of students who access e-learing is in rural areas<\/td>\n        <\/tr>\n    <\/table>\n    <p>Note:<br><em>In general, the percentage of students, who accessed at least one e-learning product, is surprisingly low in range of 0-3.5%. This is against logic, considering that the schools were closed, but the education continued.<\/em><\/p>\n<\/span>\n    ","9582275e":"<span style='font-family:Lucida; color:slategray; font-size: 18px;'>\n    <h2> Conclusions<\/h2>\n    <ul>\n        <li>The use of e-learning has increased roughly three times during COVID-19. The future trend depends on the pandemic development, however, considering very low percentage of students (0-3.5%) who access online education, there is big potential for further growth.<\/li>\n        <li>US households have good digital connection to face the online learning necessity<\/li>\n        <li>There is need to further understand the reason and equalize the students engagement in different socioeconomic groups<\/li>\n        <li>The most used products for digital learning are of general use (Google Docs, YouTube,Google Forms). Are they appropriate for this purpose or is there a need for dedicated products?<\/li>\n        <li>The use of video conferencing for e-learning seems very low. This may indicate the teaching material was distributed to students for self-study at home. Should the e-learning change to include more 'live' connections?<\/li>\n    <\/ul>\n<\/span> \n","2f2871ad":"<span style='font-family:Lucida; color:slategray; font-size: 18px;'>\n    <p> Let's look in more detail what type of online services students used the most (see chart 3.2). There are four categories:<\/p>\n    <ul>\n        <li>Learning & Curriculum<\/li>\n        <li>School & District Operations<\/li>\n        <li>Classroom Management<\/li>\n        <li>LC\/CM\/SDO - combination of the three above categories<\/li>\n    <\/ul>\n<\/span>","5fb5660e":"<span style='font-family:Lucida; color:slategray; font-size: 18px;'>\n    <h2>Scope<\/h2>\n    <p>The analysis is done based on information from <strong>233 districts in 23 states<\/strong>. Unfortunately, the available study data was not collected evenly from all the states, plus origin of the data is partially missing (see chart 1.1 and 1.2).<br>\n        Connecticut and Utah are the most represented states, however they are not in the list of top 10 representative states in US.<\/p>\n<\/span>","a277aabb":"<span style='font-family:Lucida; color:slategray; font-size: 18px;'>\n    <p> Chart 3.3 shows top 5 products used by students in each function category:<\/p>\n    <ul>Practically all products usage has increased. However, it is worth mentioning a few examples:\n        <li><strong>Google Docs<\/strong> seems to be used most to share the educational material. This maybe due to its simplicity of use and accessibility. It is much more popular than Canvas or Seesaw.<\/li>\n        <li><strong>Youtube<\/strong> was not used for education before COVID-19, but it seems after the initial online learning stage a lot of material were uploaded on the platform and it was very much used in period IV after the school holiday<\/li>\n        <li>Video conferencing tools like <strong>Meet<\/strong> and <strong>Zoom<\/strong> gained on popularity. However, it overall use is much less than other platforms. This may indicate that major part of online education is through shared teaching material rather than live online classes<\/li>\n        <li><strong>Kahoot!<\/strong> is the only product, which usage decreased during the pandemic. The service offers educational games, which were popular before COVID-19 as an optional resource. After the switch to online learning, this service use was replaced by school-distributed specific materials<\/li>\n    <\/ul>\n<\/span>"}}