{"cell_type":{"9694e3be":"code","f0246e45":"code","d01734e4":"code","e8b2f06b":"code","7e6e8a43":"code","a7c3a0a8":"code","97ea2f02":"code","1e892977":"code","6c1d52cb":"code","d08faf3c":"code","ead69d78":"code","d94b1501":"code","074a4e2d":"code","cdd02b94":"code","5da5a0b7":"code","5f894f5c":"code","c9cd2432":"code","4ea1a68e":"code","4566e1af":"code","1cf550f2":"code","9f4cbbc6":"code","b164650f":"code","9b8bb070":"code","72009995":"code","74514add":"code","9a19c22e":"code","062fe7a9":"code","7e1155ba":"code","563750e3":"code","dd32b785":"code","0bfb6768":"code","09dd1098":"code","511c7dd6":"code","f415e869":"code","b29a9f41":"code","c499f4c7":"code","8536ffd8":"code","0d1759a7":"code","f0a5798b":"code","e47e9ba3":"code","944b2ac6":"code","9f501c69":"code","d240e258":"markdown","026544d2":"markdown","6179dba6":"markdown","d69f8a33":"markdown","d095dab8":"markdown","4f23dca8":"markdown","f817bc99":"markdown","0b7ba92b":"markdown","c69deebf":"markdown","f8564083":"markdown","734fcf80":"markdown","a19b7e3d":"markdown","da46b112":"markdown","28e8559f":"markdown","21e11827":"markdown","a376a360":"markdown","a8d5192c":"markdown","d2cec8e5":"markdown","bef013b6":"markdown","217da8aa":"markdown","7d09911c":"markdown","46c9fb1a":"markdown","bdef91b2":"markdown","c9ee001c":"markdown","8dc67955":"markdown"},"source":{"9694e3be":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f0246e45":"import numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport random\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.colors import n_colors\nfrom plotly.subplots import make_subplots\ninit_notebook_mode(connected=True)\nimport cufflinks as cf\ncf.go_offline()\nfrom wordcloud import WordCloud , ImageColorGenerator\nfrom PIL import Image\n\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split\n","d01734e4":"df = pd.read_csv('..\/input\/indian-food-101\/indian_food.csv')\ndf=df.replace(-1,np.nan)\ndf=df.replace('-1',np.nan)\ndf","e8b2f06b":"df.shape","7e6e8a43":"df.describe()","a7c3a0a8":"pie_df = df.diet.value_counts().reset_index()\npie_df.columns = ['diet','count']\nfig = px.pie(pie_df, values='count', names='diet', title='Proportion of Vegetarian and Non-Vegetarian dishes',\n             color_discrete_sequence=['green', 'red'])\nfig.show()","97ea2f02":"reg_df = df.region.value_counts().reset_index()\nreg_df.columns = ['region','count']\nreg_df = reg_df.sample(frac=1)\nfig = px.bar(reg_df,x='region',y='count',title='Number of dishes based on regions',\n             color_discrete_sequence=['#416219'])\nfig.show()","1e892977":"course_df = df.course.value_counts().reset_index()\ncourse_df.columns = ['course','count']\ncourse_df = course_df.sample(frac=1)\nfig = px.bar(course_df,x='course',y='count',title='Number of dishes based on courses of meal',\n             color_discrete_sequence=['#AB63FA'])\nfig.show()","6c1d52cb":"pie_df = df.flavor_profile.value_counts().reset_index()\npie_df.columns = ['flavor','count']\nfig = px.pie(pie_df, values='count', names='flavor', title='Proportion of Flavor Profiles',\n             color_discrete_sequence=['#FF7F0E', '#00B5F7','#AB63FA','#00CC96'])\nfig.show()","d08faf3c":"dessert_df  = df[df['course']=='dessert'].reset_index()\n\ningredients = []\nfor i in range(0,len(dessert_df)):\n    text = dessert_df['ingredients'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 500, height = 500, colormap = 'seismic'\n                      ,background_color ='white', \n                min_font_size = 10).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()\n","ead69d78":"north_df = df[df['region']=='North'].reset_index()\n\ningredients = []\nfor i in range(0,len(north_df)):\n    text = north_df['ingredients'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, colormap = 'winter',\n                      background_color ='white', \n                min_font_size = 10).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","d94b1501":"wordCloud = WordCloud(\n    background_color='White',colormap = 'seismic',\n    max_font_size = 50).generate(' '.join(df['name']))\nplt.figure(figsize=(15,7))\nplt.axis('off')\nplt.imshow(wordCloud)\nplt.show()","074a4e2d":"def state_infograph(statename, title) : \n    new_df = df[df['state']== statename]\n\n    total_dishes = new_df.shape[0]\n\n    course_df = new_df['course'].value_counts().reset_index()\n    course_df.columns = ['course','num']\n\n    diet_df = new_df['diet'].value_counts().reset_index()\n    diet_df.columns = ['diet','num']\n    \n#     flavor_df = new_df['prep_time'].value_counts().reset_index()\n#     flavor_df.columns = ['Flavor','num']\n\n    prep_time_df = new_df['prep_time'].value_counts().reset_index()\n    prep_time_df.columns = ['prep_time', 'num']\n\n    fig = make_subplots(\n        rows=2, cols=3,subplot_titles=('Total Dishes','Dishes by Courses','Dishes by Preparation time', '',''),\n        specs=[[{'type': 'indicator'},{'type': 'bar','rowspan': 2},{'type': 'bar','rowspan': 2}],\n              [ {'type': 'pie'} , {'type': 'pie'}, {'type': 'pie'}]])\n\n    fig.add_trace(go.Indicator(\n        mode = 'number',\n        value = int(total_dishes),\n        number={'font':{'color': '#270082','size':50}},\n    ),row=1, col=1)\n\n\n    fig.add_trace(go.Bar(x=course_df['course'],y=course_df['num'], marker={'color': 'blue'}, \n                         text=course_df['num'],name='dishes by courses',textposition ='auto'),row=1, col=2)\n\n    fig.add_trace(go.Pie(labels=diet_df['diet'], values=diet_df['num'],textinfo='percent',\n                         marker= dict(colors=['#00bd0d','#fc0303'])),row=2, col=1)\n\n    fig.add_trace(go.Bar(\n        x=prep_time_df['prep_time'],y=course_df['num'],marker={'color': '#fc0335'}, text=course_df['num'],\n        name='flavors by courses',textposition ='auto'),row=1, col=3)\n\n    fig.update_layout(title_text= title,template='plotly',title_x=0.5)\n\n    return fig.show()","cdd02b94":"state_infograph('West Bengal', 'West Bengal food infograph')","5da5a0b7":"state_infograph('Punjab', 'Punjab food infograph')","5f894f5c":"plt.figure(figsize=(14,7))\nsns.distplot(df['prep_time'],color='red')\nplt.title(\"Histogram for preparation time\",fontsize=24)\nplt.show()","c9cd2432":"# Handling outliers for prep_time \n\n# as our data is skewed so we will compute the Interquantile range to calculate the boundaries \nIQR=df['prep_time'].quantile(0.75)-df['prep_time'].quantile(0.25)\nlower_bridge=df['prep_time'].quantile(0.25)-(IQR*1.5)\nupper_bridge=df['prep_time'].quantile(0.75)+(IQR*1.5)\nprint(lower_bridge), print(upper_bridge)\n\n#### Extreme outliers\nlower_bridge=df['prep_time'].quantile(0.25)-(IQR*3)\nupper_bridge=df['prep_time'].quantile(0.75)+(IQR*3)\nprint(lower_bridge), print(upper_bridge)\n\ndf.loc[df['prep_time']>=50,'prep_time']=50\n\n\nplt.figure(figsize=(14,8))\nsns.distplot(df['prep_time'],color='red')\nplt.title(\"Histogram for prep time after handling outliers\",fontsize=24)\nplt.show()\n","4ea1a68e":"plt.figure(figsize=(14,8))\nsns.distplot(df['cook_time'],color='seagreen')\nplt.title(\"Histogram for cook time\",fontsize=24)\nplt.show()\n","4566e1af":"df.isna().sum()","1cf550f2":"food_vocab = set()\n\nfor ingredients in df['ingredients']:\n    for food in ingredients.split(','):\n        if food.strip().lower() not in food_vocab:\n            food_vocab.add(food.strip().lower())","9f4cbbc6":"food_vocab","b164650f":"food_columns = pd.DataFrame()\n\nfor i, ingredients in enumerate(df['ingredients']):\n    for food in ingredients.split(','):\n        if food.strip().lower() in food_vocab:\n            food_columns.loc[i, food.strip().lower()] = 1\n\nfood_columns = food_columns.fillna(0)","9b8bb070":"food_columns","72009995":"df = df.drop(['name', 'ingredients'], axis=1)","74514add":"{column: list(df[column].unique()) for column in df.columns if df.dtypes[column] == 'object'}","9a19c22e":"df[['flavor_profile', 'state', 'region']] = df[['flavor_profile', 'state', 'region']].replace('-1', np.NaN)","062fe7a9":"def onehot_encode(df, columns, prefixes):\n    df = df.copy()\n    for column, prefix in zip(columns, prefixes):\n        dummies = pd.get_dummies(df[column], prefix=prefix)\n        df = pd.concat([df, dummies], axis=1)\n        df = df.drop(column, axis=1)\n    return df\n\ndf = onehot_encode(\n    df,\n    ['flavor_profile', 'course', 'state', 'region'],\n    ['f', 'c', 's', 'r']\n)","7e1155ba":"df","563750e3":"df[['prep_time', 'cook_time']] = df[['prep_time', 'cook_time']].replace(-1, np.NaN)","dd32b785":"df","0bfb6768":"df['prep_time'] = df['prep_time'].fillna(df['prep_time'].mean())\ndf['cook_time'] = df['cook_time'].fillna(df['cook_time'].mean())","09dd1098":"label_encoder = LabelEncoder()\n\ndf['diet'] = label_encoder.fit_transform(df['diet'])","511c7dd6":"{index: label for index, label in enumerate(label_encoder.classes_)}","f415e869":"y = df['diet']\n\nX = df.drop('diet', axis=1)\nX_food = pd.concat([X, food_columns], axis=1)","b29a9f41":"scaler = StandardScaler()\n\nX = scaler.fit_transform(X)\nX_food = scaler.fit_transform(X_food)","c499f4c7":"X_food","8536ffd8":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=42)\nX_food_train, X_food_test, y_food_train, y_food_test = train_test_split(X_food, y, train_size=0.7, random_state=42)","0d1759a7":"#Dependencies\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\n# Neural network\nmodel = Sequential()\nmodel.add(Dense(64, input_dim=40, activation='relu'))\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dense(2, activation='softmax'))\n\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n\nhistory = model.fit(X_train, y_train, validation_split=0.2, epochs=5000, batch_size=64)\n","f0a5798b":"import matplotlib.pyplot as plt\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Model accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()","e47e9ba3":"model.evaluate(X_test, y_test)\n","944b2ac6":"y_pred = model.predict(X_test)\ny_pred","9f501c69":"plt.plot(history.history['loss']) \nplt.plot(history.history['val_loss']) \nplt.title('Model loss') \nplt.ylabel('Loss') \nplt.xlabel('Epoch') \nplt.legend(['Train', 'Test'], loc='upper left') \nplt.show()","d240e258":"All the observations in this notebook will be based on these 255 dishes. There are many more dishes in Indian Cuisine!","026544d2":"### Punjab Infograph","6179dba6":"### West Bengal Food - Mini Infograph","d69f8a33":"### Ingredients used in Indian desserts","d095dab8":"Observation :\nAbout 129 dishes are preferably eaten as a main course\n\n#### Fun fact : The very favourite Chicken Tikka Masala, a popular dish in India, is not Indian. It was invented in Glasgow, Scotland!","4f23dca8":"### Histogram for preperation time","f817bc99":"#### Observation :\nMost commonly used ingredients in making Indian sweets are Sugar, Ghee, Milk, Rice","0b7ba92b":"### Histogram for cook time","c69deebf":"The dataset consists of about 255 Indian dishes and 9 columns associated with each of them.\n\nThe 9 columns are as follows:-\n\nname : name of the dish\n\ningredients : main ingredients used\n\ndiet : type of diet - either vegetarian or non vegetarian\n\nprep_time : preparation time\n\ncook_time : cooking time\n\nflavor_profile : flavor profile includes whether the dish is spicy, sweet, bitter, etc\n\ncourse : course of meal - starter, main course, dessert, etc\n\nstate : state where the dish is famous or is originated\n\nregion : region where the state belongs","f8564083":"### Loadthe dataset","734fcf80":"### Number of dishes based on regions","a19b7e3d":"![istockphoto-868408746-612x612.jpg](attachment:istockphoto-868408746-612x612.jpg)","da46b112":"## Lets start building Model","28e8559f":"#### Observation :\nVegetarian dishes consists 88.6% out of all the diets(Ofcourse higly imbalanced dependent variable).\n\n#### Fun fact : India is ranked top in the world with 38% of the total population being vegetarians","21e11827":"### Proportion of Flavor Profiles\n","a376a360":"# Diet prediction on Indian food","a8d5192c":"### Ingredients used in North-Indian cuisine","d2cec8e5":"### Data Preprocessing","bef013b6":"### Proportion of Vegetarian and Non-Vegetarian dishes","217da8aa":"### In the above histogram we can see some outliers, lets handle them before moving ahead.","7d09911c":"### Dishes","46c9fb1a":"### Spliting the data into test and train set.","bdef91b2":"#### Observation :\nMore than 50% of the dishes are spicy in flavor\n\n#### Fun fact : India is the largest producer of spices in the world. No country in the world produces as many varieties of spices as India.\n","c9ee001c":"Dataset : https:\/\/www.kaggle.com\/nehaprabhavalkar\/indian-food-101","8dc67955":"### Number of dishes based on courses of meal "}}