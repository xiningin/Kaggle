{"cell_type":{"8b6039d9":"code","b843d3ae":"code","723e4290":"code","d9413c89":"code","337aff50":"code","e35a68ef":"code","eef95e6c":"code","333029c5":"code","ad215b41":"code","7569e72e":"code","0bf2792f":"code","7f8aa9a0":"markdown"},"source":{"8b6039d9":"#import libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns","b843d3ae":"#read datasets\nred = pd.read_csv('..\/input\/wne-qualty-by-uci\/WineQuality-RedWine.csv')\nwhite = pd.read_csv('..\/input\/wne-qualty-by-uci\/WineQuality-WhiteWine.csv')\nred['color'] = 'r'\nwhite['color'] = 'w'\ndata = pd.concat([red,white],axis = 0)\ncol = pd.get_dummies(data['color'],drop_first=True)\ndata = pd.concat([data,col],axis = 1)\ndata = data.drop(['color'],axis=1)\ndata = data.sample(frac=1).reset_index(drop=True)\ndata.style.hide_index()\ny = data['w']\nx = data.drop(['w'],axis=1)\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=0)","723e4290":"#results comparision\nresult = {}","d9413c89":"#ada boost algorithm\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nada_model = AdaBoostClassifier(DecisionTreeClassifier(max_depth=1),n_estimators=200)\nada_model.fit(x_train, y_train)\nada_pred = ada_model.predict(x_test)\nprint(\"Accuracy of ada model: \",accuracy_score(y_test, ada_pred))\nprint(\"Confusion matrix:\",confusion_matrix(y_test, ada_pred))\nprint(classification_report(y_test, ada_pred))\nresult['ada'] = accuracy_score(y_test, ada_pred)","337aff50":"#logistic regression\nfrom sklearn.linear_model import LogisticRegression\nlreg_model = LogisticRegression(random_state=0)\nlreg_model.fit(x_train ,y_train)\nlreg_pred = lreg_model.predict(x_test)\nprint(\"Accuracy of Logistic model: \",accuracy_score(y_test, lreg_pred))\nprint(\"Confusion matrix:\",confusion_matrix(y_test, lreg_pred))\nprint(classification_report(y_test, lreg_pred))\nresult['log'] = accuracy_score(y_test, lreg_pred)","e35a68ef":"#SVM classifier\nfrom sklearn.svm import SVC\nsvm_model = SVC(kernel='linear')\nsvm_model.fit(x_train, y_train)\nsvm_pred = svm_model.predict(x_test)\nprint(\"Accuracy of SVM model: \",accuracy_score(y_test, svm_pred))\nprint(\"Confusion matrix:\",confusion_matrix(y_test, svm_pred))\nprint(classification_report(y_test, svm_pred))\nresult['svm'] = accuracy_score(y_test, svm_pred)","eef95e6c":"#Naive bayesian Multinomial\nfrom sklearn.naive_bayes import MultinomialNB\nmnb_model = MultinomialNB()\nmnb_model.fit(x_train, y_train)\nmnb_pred = mnb_model.predict(x_test)\nprint(\"Accuracy of Multinomial Naive bayesian model: \",accuracy_score(y_test, mnb_pred))\nprint(\"Confusion matrix:\",confusion_matrix(y_test, mnb_pred))\nprint(classification_report(y_test, mnb_pred))\nresult['mnb'] = accuracy_score(y_test, mnb_pred)","333029c5":"#Gaussian naive bayesian\nfrom sklearn.naive_bayes import GaussianNB\ngnb_model = GaussianNB()\ngnb_model.fit(x_train, y_train)\ngnb_pred = gnb_model.predict(x_test)\nprint(\"Accuracy of Gaussian Naive bayesian model: \",accuracy_score(y_test, gnb_pred))\nprint(\"Confusion matrix:\",confusion_matrix(y_test, gnb_pred))\nprint(classification_report(y_test, gnb_pred))\nresult['gnb'] = accuracy_score(y_test, gnb_pred)","ad215b41":"#Bernoulli Naive Bayesian\nfrom sklearn.naive_bayes import BernoulliNB\nbnb_model = BernoulliNB()\nbnb_model.fit(x_train, y_train)\nbnb_pred = bnb_model.predict(x_test)\nprint(\"Accuracy of Bernoulli Naive bayesian model: \",accuracy_score(y_test, bnb_pred))\nprint(\"Confusion matrix:\",confusion_matrix(y_test, bnb_pred))\nprint(classification_report(y_test, bnb_pred))\nresult['bnb'] = accuracy_score(y_test, bnb_pred)","7569e72e":"#ANN \nfrom sklearn.neural_network import MLPClassifier\nANN_model = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)\nANN_model.fit(x_train,y_train)\nANN_pred = ANN_model.predict(x_test)\nprint(\"Accuracy of ANN model: \",accuracy_score(y_test, ANN_pred))\nprint(\"Confusion matrix:\",confusion_matrix(y_test, ANN_pred))\nprint(classification_report(y_test, ANN_pred))\nresult['ann'] = accuracy_score(y_test, ANN_pred)","0bf2792f":"lists = result.items() # sorted by key, return a list of tuples\nx, y = zip(*lists) # unpack a list of pairs into two tuples\nplt.bar(x, y)\nplt.ylim(top = 1.0)\nplt.ylim(bottom = 0.75)\nplt.show()","7f8aa9a0":"Ada boost Classifier has the highest accuracy among other classification algorithms\nwith accuracy of **0.9969**"}}