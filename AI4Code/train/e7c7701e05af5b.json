{"cell_type":{"b2178365":"code","8be74f37":"code","ccca32f3":"code","e5eb81cf":"code","374b6ca1":"code","bd9c1394":"code","67a8a951":"code","e56216de":"code","fabf6824":"code","3fe20991":"code","19e5a3fa":"code","c4b55916":"code","7b9e7000":"code","d486ac97":"code","567e8f6c":"code","c7e14791":"code","8a7a50cb":"code","0a55132d":"code","eea413b7":"code","6b7c141f":"code","8f5a160c":"code","beaec1b5":"code","31382e1a":"code","d2e477d5":"code","f3b6b564":"code","27aae95d":"code","95e2e68c":"code","c3086707":"markdown","191851f5":"markdown","ffb9cd07":"markdown","85c156d0":"markdown","045a806c":"markdown"},"source":{"b2178365":"import numpy as np \nimport pandas as pd \n\nimport os\nfiles = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        files.append(os.path.join(dirname, filename))\n\nprint(files)","8be74f37":"files[2]","ccca32f3":"df = pd.read_csv(files[2])\ndf.head()","e5eb81cf":"df.columns","374b6ca1":"df.shape","bd9c1394":"# Number of NaNs (more than zero)\ndf_series = df.isnull().sum()\ndf_series[df_series!=0].sort_values(ascending=False)","67a8a951":"# Percentage of NaNs (more than zero)\ndf_series = df.isnull().mean()\ndf_series[df_series!=0].sort_values(ascending=False)","e56216de":"df[~df['PoolQC'].isnull()]","fabf6824":"df = pd.read_csv(files[2], usecols=['BsmtQual', 'FireplaceQu', 'GarageType', 'SalePrice'])\ndf.head()","3fe20991":"df.shape","19e5a3fa":"df_series = df.isnull().sum()\ndf_series[df_series!=0].sort_values(ascending=False)","c4b55916":"df_series = df.isnull().mean()\ndf_series[df_series!=0].sort_values(ascending=False)","7b9e7000":"#df['BsmtQual'].value_counts()\ndf.groupby(['BsmtQual'])['BsmtQual'].count().sort_values(ascending=False)","d486ac97":"# df.BsmtQual.hist()\ndf.groupby(['BsmtQual'])['BsmtQual'].count().sort_values(ascending=False).plot.bar()","567e8f6c":"df.groupby(['GarageType'])['GarageType'].count().sort_values(ascending=False)","c7e14791":"df.groupby(['GarageType'])['GarageType'].count().sort_values(ascending=False).plot.bar()","8a7a50cb":"df.groupby(['FireplaceQu'])['FireplaceQu'].count().sort_values(ascending=False)","0a55132d":"df.groupby(['FireplaceQu'])['FireplaceQu'].count().sort_values(ascending=False).plot.bar()","eea413b7":"def impute_nan(df,variable):\n    most_freq_cat = df[variable].mode()[0]\n    df[variable+'_mostFreqImpt'] = df[variable].fillna(most_freq_cat)","6b7c141f":"for feature in ['BsmtQual','FireplaceQu','GarageType']:\n    impute_nan(df, feature)\n\ndf.head()","8f5a160c":"df.isnull().mean()","beaec1b5":"df.groupby(['FireplaceQu'])['FireplaceQu'].count().sort_values(ascending=False).plot.bar()","31382e1a":"df.groupby(['FireplaceQu_mostFreqImpt'])['FireplaceQu_mostFreqImpt'].count().sort_values(ascending=False).plot.bar()","d2e477d5":"import numpy as np\ndef add_feature_catpure_nan(df, variable):\n    df[variable+'_NaN'] = np.where(df[variable].isnull(),1,0)","f3b6b564":"for feature in ['BsmtQual','FireplaceQu','GarageType']:\n    add_feature_catpure_nan(df, feature)\n\ndf.head(10)","27aae95d":"def impute_nan(df, variable):\n    df[variable+'_newvar'] = np.where(df[variable].isnull(),'Missing', df[variable])","95e2e68c":"for feature in ['BsmtQual','FireplaceQu','GarageType']:\n    impute_nan(df, feature)\n\ndf.head(10)","c3086707":"### Let's add a feature to capture if previously there was a NaN value","191851f5":"'FireplaceQu' data gets distorted the most as it had the most NaNs.","ffb9cd07":"Let's write an impute_nan() function","85c156d0":"We are going to use the columns: BsmtQual, FireplaceQu, GarageType, SalePrice","045a806c":"# Handling Missing Categorical Values"}}