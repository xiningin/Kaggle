{"cell_type":{"01022849":"code","641aed87":"code","d30d6383":"code","e3577fd7":"code","cbf59b88":"code","8c7959a6":"code","968ef448":"code","cd8148b6":"code","e674cf5c":"code","a9f58533":"code","6f505bf4":"code","910b90c1":"code","c817ef3e":"code","773e3f1e":"code","2d542681":"code","30ad3219":"code","951dcb86":"code","f0c2bc71":"code","0ac8f15f":"code","9983144c":"code","441a2548":"code","e72d26bb":"code","e181ba1e":"code","fbd806fe":"code","81e58737":"code","15e36f1b":"code","1bf8b585":"code","73220975":"code","b8509170":"code","5ccd734b":"code","58207412":"code","ba419a2a":"markdown","7289da7a":"markdown","92c7bade":"markdown","540e66c7":"markdown","8ab0cae7":"markdown","04cddd9d":"markdown","32de4d46":"markdown","a8a56f58":"markdown","0d38fa81":"markdown","f92308e8":"markdown","b8a501b5":"markdown"},"source":{"01022849":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","641aed87":"suicide_data=pd.read_csv(\"\/kaggle\/input\/suicides-in-india\/Suicides in India 2001-2012.csv\")","d30d6383":"suicide_data","e3577fd7":"suicide_data[\"State\"].unique()","cbf59b88":"import missingno as msno\nmsno.bar(suicide_data)","8c7959a6":"grp = suicide_data.groupby('State')['Total'].sum()\ntotal_suicides = pd.DataFrame(grp).reset_index().sort_values('Total',ascending=False)\ntotal_suicides = total_suicides[2:]","968ef448":"total_suicides","cd8148b6":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfig , ax = plt.subplots(figsize=(18,6))\ng=sns.barplot(x='State',y='Total',data=total_suicides)\ng.set_xticklabels(g.get_xticklabels(),rotation=45)","e674cf5c":"counts = suicide_data['Gender'].value_counts().sort_index()\nprint(counts)\n# Plot a pie chart\ncounts.plot(kind='pie', title='Gender Count',figsize=(10,8))\n\nplt.legend()\nplt.show()","a9f58533":"suicide_data[\"Type_code\"].unique()","6f505bf4":"cause = suicide_data[suicide_data['Type_code'] == 'Causes']\nedu_status = suicide_data[suicide_data['Type_code'] == 'Education_Status']\nmeans_adpt = suicide_data[suicide_data['Type_code'] == 'Means_adopted']\nprof = suicide_data[suicide_data['Type_code'] == 'Professional_Profile']\nsoc_status = suicide_data[suicide_data['Type_code'] == 'Social_Status']","910b90c1":"def plot_type(data, Title, X_lab):\n    p_type = data.groupby('Type').sum()['Total']\n    sort_df = p_type.sort_values(ascending = False)\n\n    fig = sort_df.plot(kind='bar', figsize = (10,6), title = Title + '\\n', width = 0.75)\n    fig.set_xlabel('\\n' + X_lab )\n    fig.set_ylabel('Count\\n')\n    sns.set_style('whitegrid')\n    sns.set_palette('Set2')  ","c817ef3e":"plot_type(cause, 'Suicide by cause', 'Cause')","773e3f1e":"#plot by the educational causes\nplot_type(edu_status, 'Suicide by Education Status', 'Education Status')","2d542681":"# plot by means adopted\nplot_type(means_adpt, 'Suicide by Means Adopted', 'Means Adopted')","30ad3219":"# suicide by professional profile\nplot_type(prof, 'Suicide by Professional Profile', 'Professional Profile')","951dcb86":"# suicide by social Status\nplot_type(soc_status, 'Suicide by Social Status', 'Social Status')","f0c2bc71":"#which age group commits more suicide\nage_grp = suicide_data.groupby('Age_group')['Total'].sum()\nage = pd.DataFrame(age_grp).reset_index()\nage = age[1:]\nage\n","0ac8f15f":"plt.subplots(figsize=(5,5))\ng = sns.barplot(x='Age_group',y='Total',data=age)","9983144c":"x = suicide_data.groupby(['State','Year'])['Total'].sum()\ny = pd.DataFrame(x).reset_index()\ny = y.pivot(index='State',columns='Year')\ny['sum'] = y.sum(axis=1)\nyearly_total = y.sum(axis=0)\ny = y.sort_values('sum',ascending=False)\ny = y[2:14]\ny = y\/10\ny = y.drop('sum',axis=1)\ny","441a2548":"#plot of yearly suicide in india\nyearly = pd.DataFrame(yearly_total).reset_index()[:-1].drop('level_0',axis=1)\nyearly.columns = ['Year','No of suicides']\nplt.figure(figsize=(10,5))\nsns.lineplot(x='Year',y='No of suicides',data=yearly)","e72d26bb":"#Splitting the data as per the State\nState1 = suicide_data[suicide_data['State']=='Maharashtra']\nState2 = suicide_data[suicide_data['State']=='West Bengal']\nState3 = suicide_data[suicide_data['State']=='Tamil Nadu']","e181ba1e":"State1","fbd806fe":"State1[\"Age_group\"].value_counts().index","81e58737":"def plot_for_State_by_age(data):\n    plt.figure(figsize=(12,6))\n    data = suicide_data[['Age_group','Gender','Total']]\n    edSort = data.groupby(['Age_group','Gender'],as_index=False).sum().sort_values('Total',ascending=False)\n    sns.barplot(x='Age_group',y='Total',hue='Gender',data=edSort,palette='RdBu')","15e36f1b":"#plotting as per the age_group\nplot_for_State_by_age(State1)","1bf8b585":"#plotting as per the age_group\nplot_for_State_by_age(State2)","73220975":"#plotting as per the age_group\nplot_for_State_by_age(State3)","b8509170":"filter_social_status = pd.DataFrame(suicide_data[suicide_data[\"Type_code\"]==\"Social_Status\"].groupby([\"Type\",\"Gender\"])[\"Total\"].sum()).reset_index()\nsns.catplot(x=\"Type\", y=\"Total\",hue=\"Gender\", kind=\"bar\", data=filter_social_status,height=8.27, aspect=11.7\/8.27);","5ccd734b":"filter_social_status = pd.DataFrame(suicide_data[suicide_data[\"Type_code\"]==\"Education_Status\"].groupby([\"Type\",\"Gender\"])[\"Total\"].sum()).reset_index()\ng = sns.catplot(x=\"Type\", y=\"Total\",hue=\"Gender\", kind=\"bar\", data=filter_social_status,height=8.27, aspect=11.7\/8.27);\ng.set_xticklabels(rotation=90)","58207412":"filter_social_status = pd.DataFrame(suicide_data[suicide_data[\"Type_code\"]==\"Professional_Profile\"].groupby([\"Type\",\"Gender\"])[\"Total\"].sum()).reset_index()\ng = sns.catplot(x=\"Type\", y=\"Total\",hue=\"Gender\", kind=\"bar\", data=filter_social_status,height=8.27, aspect=11.7\/8.27);\ng.set_xticklabels(rotation=90)","ba419a2a":"# **What was the profession of the people who committed suicides?**","7289da7a":"# The total number of suicides per state in descending order","92c7bade":"# Conclusion","540e66c7":"# Importing the dataset","8ab0cae7":"# Checking missing values","04cddd9d":"# **What is the Social Issue Causing Suicides?**","32de4d46":"# **No of suicides as per age group in males and females in West Bengal**","a8a56f58":"# **No of suicides as per age group in males and females in Tamil Nadu**","0d38fa81":"# **No of suicides as per age group in males and females in Maharashtra**","f92308e8":"# **What was the Education Status of people commiting suicides?**","b8a501b5":"* Males tend to commit more suicides compared to Females in India\n* Highest no. of suicide cases occur in Maharashtra, West Bengal, and Tamil Nadu.\n* Male might commit more suicide compared to females in the future if this trend continues.\n* People who commit suicide are mostly-\n* Married\n* Farmers and housewives\n* Youngsters (15-29 age) and middle age (30-44)"}}