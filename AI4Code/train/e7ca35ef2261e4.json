{"cell_type":{"1364f397":"code","871bf3b9":"code","f7a601a6":"code","68013fc7":"code","753c4028":"code","ec886167":"code","c1d578ae":"code","4e98f258":"code","8eac82df":"code","f288f1fb":"code","809d3900":"code","c3413106":"code","e1fa154b":"code","ab1e22b1":"code","0e416add":"code","4dfffdd7":"code","7cb74376":"code","0d9d4d3c":"code","ba4fa0a2":"code","d8246562":"code","1781c536":"code","d096d865":"code","f91e6b5b":"code","a87ed4e4":"code","f2ef3729":"code","73b19a00":"code","59db701b":"code","4b2a01fd":"code","a48a2ff1":"code","50b40b58":"code","223a86c3":"code","72ff68ac":"code","cbe10244":"code","a2437c7d":"code","c33771c6":"code","b87eca04":"code","bb0cab67":"code","59630ee3":"code","b6930e07":"code","c50d114f":"code","9c4c9a39":"code","0c800b61":"code","5cff6bb2":"code","840e633d":"code","51ce69f0":"code","a2e2f9d0":"code","f06092cc":"code","80ac346c":"code","ba1fc625":"code","4def30bd":"code","c2e0ec1c":"code","f84091e5":"code","36a62257":"code","6a49adcc":"code","8effa81e":"code","e44ed6c5":"code","fa0a4e9d":"code","6691854b":"code","113138c4":"code","d966024b":"code","718beee6":"code","5a3aa118":"code","3f2f4b67":"code","2f05fdae":"code","03c8917e":"code","6c7ae5de":"code","3a70de04":"code","8fd18480":"code","b279c190":"code","7cce355e":"code","2877e998":"code","559b4fff":"code","632ff45e":"code","46591914":"code","702aed39":"code","81ff80b4":"code","928ff09d":"code","e9c103c6":"code","e8057b03":"code","5ae7ed4d":"code","d7290213":"code","b60cd682":"code","8af895ca":"code","6058a5de":"code","fbc618b6":"code","abeace83":"code","c80278ff":"code","104becbc":"code","1ef3bfba":"code","60693ee3":"code","0fdcc59e":"code","d16596fa":"markdown","0b7c7374":"markdown","b80bc194":"markdown","cf268a50":"markdown","e0214951":"markdown","dbc70e64":"markdown","be90ed3a":"markdown","49904128":"markdown","4ab8beab":"markdown","ff0bcc49":"markdown","1c373842":"markdown","dd6e5fe5":"markdown","9672fdca":"markdown","1eb4d2f4":"markdown","77357fb2":"markdown","06de64fe":"markdown","891fb6e7":"markdown","fb74fa8b":"markdown","5509fe33":"markdown","abe87969":"markdown","b9edce16":"markdown","028a29a0":"markdown","2ea1f01b":"markdown","9c41384b":"markdown","95d41a4e":"markdown","a64c8897":"markdown","824cbcec":"markdown","b3f8ce2a":"markdown","a2eb7078":"markdown","2fffa3ce":"markdown","082236ed":"markdown","5c3dec8a":"markdown","3ad1e21c":"markdown","ec700c48":"markdown","df1f58c5":"markdown","76de20eb":"markdown","f741d3dd":"markdown","e7b2b260":"markdown","378f8a91":"markdown","91994d2c":"markdown","eaf3103b":"markdown","5770c180":"markdown","0ebb17a8":"markdown","9dd936eb":"markdown","d3ba1739":"markdown","942a9d9e":"markdown","f8c5ff54":"markdown","d82d1f2e":"markdown","e0b72ff8":"markdown","2fb246c7":"markdown","1f6cf05b":"markdown","094b587b":"markdown","cab10dfa":"markdown","7ec7a4fd":"markdown","460a623a":"markdown","20d53942":"markdown","1c0e24fe":"markdown","117cc04a":"markdown","31818993":"markdown","31837125":"markdown","0820e353":"markdown","d1761aa5":"markdown","9980bf7b":"markdown","ba4cf2d9":"markdown","0f0de6b9":"markdown","3112c2cd":"markdown","da2c4729":"markdown","0cf73281":"markdown","33d812b7":"markdown","7e3768c0":"markdown","db792eff":"markdown","575130fa":"markdown","3e12d294":"markdown","fd1db36f":"markdown","3edac1d0":"markdown"},"source":{"1364f397":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","871bf3b9":"import warnings\nwarnings.filterwarnings('ignore')\nimport re\nfrom PIL import Image\nfrom textblob import TextBlob\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk.util import ngrams\nfrom nltk.sentiment import SentimentIntensityAnalyzer\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom wordcloud import WordCloud,STOPWORDS, ImageColorGenerator\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt\n%matplotlib inline","f7a601a6":"news_region = pd.read_csv('..\/input\/kaggle-global-trends\/NewsSearch_InterestOverRegion.csv').dropna()\nnews_region = pd.DataFrame({'Country' : news_region.index[1 : ], 'Interest' : news_region.values[1 : ].flatten().astype(int)})\nnews_region","68013fc7":"px.pie(news_region, values = news_region['Interest'], names = news_region['Country'], title = 'Kaggle Interest over News in the World')","753c4028":"news_time = pd.read_csv('..\/input\/kaggle-global-trends\/NewsSearch_InterestOverTime.csv')\nnews_time = pd.DataFrame({'Time' : news_time.index[1 : ], 'Interest' : news_time.values[1 : ].flatten().astype(int)})\nnews_time","ec886167":"px.line(news_time, x = news_time['Time'], y = news_time['Interest'], title = 'Kaggle Interest in the News from 2010-2021', labels = {'Time' : 'Month-Year (Time)', 'Interest' : ''}, template = 'plotly_dark', color_discrete_sequence = ['blue'])","c1d578ae":"news_topics = pd.read_csv('..\/input\/kaggle-images\/NewsSearch_RelatedTopics.csv')\nnews_topics","4e98f258":"def scatter(data, flag, legend, palette):\n    for index, i in enumerate(list(data.index.values)):\n        if i == 'RISING':\n            end_index = index\n            \n    top = list(data.iloc[2 : end_index].index.values)\n    top_count = data.iloc[2 : end_index].values.flatten()\n    df = pd.DataFrame({flag : top, 'Interest' : top_count})\n    \n    plt.figure(figsize = (15, 5))\n    sns.scatterplot(data = df, x = flag, y = 'Interest', hue = 'Interest', size = 'Interest', sizes = (200, 1000), legend = False, palette = palette)\n    plt.xlabel(flag, fontsize = 20)\n    plt.ylabel('', fontsize = 20)\n    plt.xticks(rotation = 90, fontsize = 15, fontweight = 'bold')\n    plt.yticks(fontsize = 15)\n    plt.title(legend, fontsize = 25, fontweight = 'bold')\n    plt.show()","8eac82df":"scatter(news_topics, 'Topics', 'Top Kaggle Topics in the News from 2010-2021', 'PuBuGn')","f288f1fb":"web_region = pd.read_csv('..\/input\/kaggle-global-trends\/WebSearch_InterestByRegion.csv').dropna()\nweb_region = pd.DataFrame({'Country' : web_region.index[1 : ], 'Interest' : web_region.values[1 : ].flatten().astype(int)})\nweb_region","809d3900":"px.choropleth(web_region, locations = web_region['Country'], locationmode = 'country names', color = web_region['Interest'], hover_data = [web_region['Interest']], title = 'Kaggle Interest over Web in the World', color_continuous_scale = 'Greens')","c3413106":"web_time = pd.read_csv('..\/input\/kaggle-global-trends\/WebSearch_InterestOverTime.csv')\nweb_time = web_time[web_time != '<1'].fillna(0)\nweb_time = pd.DataFrame({'Time' : web_time.index[1 : ], 'Interest' : web_time.values[1 : ].flatten().astype(int)})\nweb_time","e1fa154b":"plt.figure(figsize = (50, 20))\nplt.fill_between(web_time['Time'], web_time['Interest'], color = '#AEF359')\nplt.plot(web_time['Time'], web_time['Interest'], linewidth = 8.0, color = '#4D7902')\nplt.title('Kaggle Interest in the Web over Time', fontsize = 60, fontweight = 'bold')\nplt.xticks(rotation = 'vertical', fontsize = 20)\nplt.yticks(fontsize = 30)\nplt.xlabel('Month-Year (Time)', fontsize = 50)\nplt.ylabel('', fontsize = 50)\n\ncord = [(2, 100), (14, 100), (26, 100), (38, 100), (50, 100),(62, 100), (73, 100), (85, 100), (95, 100), (105, 100), (117, 100), (125, 100)]\nyear = ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021']\nfor i in range(len(year)):\n    plt.annotate(year[i],\n                        xy=cord[i],\n                        xytext=cord[i],\n                        color=\"b\", fontsize=35, fontweight='bold',\n                        bbox=dict(boxstyle='sawtooth', pad = 0.5, color = 'gold', alpha = 0.6))\n    \nplt.axvspan('2020-03', '2021-04', alpha = 0.25, color = 'grey')\nplt.axvline(x = 76, color = 'r', linestyle = '--')\nplt.axvline(x = 129, color = 'r', linestyle = '--')\nplt.text(121, 50, 'COVID', fontsize = 50, fontweight = 'bold')\n\nplt.show()","ab1e22b1":"web_queries = pd.read_csv('..\/input\/kaggle-images\/WebSearch_RelatedQueries.csv')\nweb_queries","0e416add":"scatter(web_queries, 'Queries', 'Top Kaggle Queries in the Web from 2010-2021', 'YlGn')","4dfffdd7":"web_topics = pd.read_csv('..\/input\/kaggle-images\/WebSearch_RelatedTopics.csv')\nweb_topics","7cb74376":"scatter(web_topics, 'Topics', 'Top Kaggle Topics in the Web from 2010-2021', 'YlGn')","0d9d4d3c":"tube_region = pd.read_csv('..\/input\/kaggle-global-trends\/YoutubeSearch_InterestByRegion.csv').dropna()\ntube_region = tube_region[tube_region != '<1'].fillna(0)\ntube_region = pd.DataFrame({'Country' : tube_region.index[1 : ], 'Interest' : tube_region.values[1 : ].flatten().astype(int)})\ntube_region","ba4fa0a2":"px.choropleth(tube_region, locations = tube_region['Country'], locationmode = 'country names', color = tube_region['Interest'], hover_data = [tube_region['Interest']], title = 'Kaggle Interest over YouTube in the World', color_continuous_scale = 'YlOrRd')","d8246562":"tube_time = pd.read_csv('..\/input\/kaggle-global-trends\/YoutubeSearch_InterestOverTime.csv')\ntube_time = pd.DataFrame({'Time' : tube_time.index[1 : ], 'Interest' : tube_time.values[1 : ].flatten().astype(int)})\ntube_time","1781c536":"plt.figure(figsize = (50, 20))\nplt.plot(tube_time['Time'], tube_time['Interest'], linewidth = 8.0, color = 'black', linestyle = '--', marker = '>', markersize = 20, markerfacecolor = 'red')\nplt.title('Kaggle Interest in YouTube over Time', fontsize = 60, fontweight = 'bold')\nplt.xticks(rotation = 'vertical', fontsize = 20)\nplt.yticks(fontsize = 30)\nplt.xlabel('Month-Year (Time)', fontsize = 50)\nplt.ylabel('', fontsize = 50)\n\nfor i in range(len(year)):\n    plt.annotate(year[i],\n                        xy=cord[i],\n                        xytext=cord[i],\n                        color=\"black\", fontsize=35, fontweight='bold',\n                        bbox=dict(boxstyle='round', pad = 0.5, color = 'red', alpha = 0.6))\n    \nplt.axvspan('2020-03', '2021-04', alpha = 0.3, color = 'grey')\nplt.axvspan('2015-09', '2016-05', alpha = 0.2, color = 'red')\nplt.axvspan('2016-10', '2017-08', alpha = 0.2, color = 'red')\nplt.axvspan('2017-11', '2021-04', alpha = 0.2, color = 'red')\nplt.text(121, 50, 'COVID', fontsize = 50, fontweight = 'bold')\n\nplt.grid()\nplt.show()","d096d865":"tube_queries = pd.read_csv('..\/input\/kaggle-images\/YoutubeSearch_RelatedQueries.csv')\ntube_queries","f91e6b5b":"scatter(tube_queries, 'Queries', 'Top Kaggle Queries in YouTube from 2010-2021', 'OrRd')","a87ed4e4":"tube_topics = pd.read_csv('..\/input\/kaggle-images\/YoutubeSearch_RelatedTopics.csv')\ntube_topics","f2ef3729":"scatter(tube_topics, 'Topics', 'Top Kaggle Topics in YouTube from 2010-2021', 'OrRd')","73b19a00":"regions = pd.merge(news_region, web_region, how = \"inner\", on = [\"Country\"])\nregions = pd.merge(regions, tube_region, how  =\"inner\", on = [\"Country\"])\nregions.columns = ['Country', 'News', 'Web', 'YouTube']\nregions","59db701b":"colors = ['#78A2CC', '#77DD77', '#FF9AA2']\nregions.set_index('Country').plot(kind='bar', stacked = True, color = colors, figsize=(15,5))\nplt.xlabel('Country', fontsize = 20)\nplt.ylabel('', fontsize = 20)\nplt.xticks(rotation = 90, fontsize = 15, fontweight = 'bold')\nplt.yticks(fontsize = 15)\nplt.legend(loc = 'upper right', prop={'size': 15})\nplt.title('Kaggle Interest across Media in the World', fontsize = 25, fontweight = 'bold')\nplt.show()","4b2a01fd":"times = pd.merge(news_time, web_time, how = \"inner\", on = [\"Time\"])\ntimes = pd.merge(times, tube_time, how  =\"inner\", on = [\"Time\"])\ntimes.columns = ['Time', 'News', 'Web', 'YouTube']\ntimes","a48a2ff1":"alpha = 0.3\n\nplt.figure(figsize = (50, 20))\nplt.fill_between(times['Time'], times['News'], color = colors[0], alpha = alpha)\nplt.fill_between(times['Time'], times['Web'], color = colors[1], alpha = alpha)\nplt.fill_between(times['Time'], times['YouTube'], color = colors[2], alpha = alpha)\nplt.plot(times['Time'], times['News'], linewidth = 5.0, color = 'blue', alpha = alpha)\nplt.plot(times['Time'], times['Web'], linewidth = 5.0, color = 'green', alpha = alpha)\nplt.plot(times['Time'], times['YouTube'], linewidth = 5.0, color = 'red', alpha = alpha)\nplt.title('Kaggle Interest in the Media over Time', fontsize = 60, fontweight = 'bold')\nplt.xticks(rotation = 'vertical', fontsize = 20)\nplt.yticks(fontsize = 30)\nplt.legend(['News', 'Web', 'YouTube'], ncol = 3, fontsize = 50)\nplt.xlabel('Month-Year (Time)', fontsize = 50)\nplt.ylabel('', fontsize = 50)\nplt.show()","50b40b58":"def preprocess(df):\n    tweets = []\n    remove = ['bit', 'ly', 'co', 'http', 'com', 'rt', 'via']\n    \n    for tweet in df['tweet']:\n        tweet = re.sub(\"[^a-zA-Z]\", \" \", tweet)\n        tweet = re.sub(r\"http\\S+\", \"\", tweet, flags = re.MULTILINE)\n        tweet = tweet.lower()\n        tweet = nltk.word_tokenize(tweet)\n        tweet = [word for word in tweet if not word in set(stopwords.words(\"english\"))]\n        tweet = [word for word in tweet if not word in remove]\n        lemmatizer = nltk.WordNetLemmatizer()\n        tweet = [lemmatizer.lemmatize(word) for word in tweet]\n        tweet = \" \".join(tweet)\n        tweets.append(tweet)\n        \n    df[\"processed_tweet\"] = tweets\n    return df","223a86c3":"def most_common_words(df, n = 11):\n    count_vectorizer = CountVectorizer()\n    tf = count_vectorizer.fit_transform(df)\n    tf = tf.sum(axis=0) \n    tf = [(term, tf[0, i]) for term, i in count_vectorizer.vocabulary_.items()]\n    tf = sorted(tf, key = lambda x: x[1], reverse=True)\n\n    return tf[1 : n]","72ff68ac":"def most_common_bigrams(df, n = 10):\n    count_vectorizer = CountVectorizer(ngram_range=(2, 2))\n    tf = count_vectorizer.fit_transform(df)\n    tf = tf.sum(axis=0)\n    tf = [(term, tf[0, i]) for term, i in count_vectorizer.vocabulary_.items()]\n    tf = sorted(tf, key = lambda x: x[1], reverse=True)\n\n    return tf[ : n]","cbe10244":"def pos_tagging(df):\n    pos_tags = {'NNP' : 'Noun', 'VBG' : 'Verb', 'VBZ' : 'Verb', 'NNS' : 'Noun', 'VBP' : 'Verb', 'JJ' : 'Adjective', 'NN' : 'Noun', 'VB' : 'Verb', 'JJS' : 'Adjective', 'VBD' : 'Verb', 'RB' : 'Adverb'}\n    df['POS'] = [pos_tags[x[1]] for x in nltk.pos_tag(df['Term'])]\n    \n    return df","a2437c7d":"def generate_word_cloud(df, image_path, color):\n    plt.subplots(figsize=(20,6))\n    mask = np.array(Image.open(image_path))\n    wc = WordCloud(stopwords=STOPWORDS, \n                   mask=mask, background_color=\"black\", contour_color='black',\n                   max_words=2000, max_font_size=2048,\n                   width=mask.shape[1], height=mask.shape[0],\n                   colormap=color)\n\n    wc.generate(' '.join(df))\n    plt.imshow(wc)\n    plt.axis('off')\n    plt.show()","c33771c6":"def barplot(df, legend, hue, color):\n    plt.figure(figsize = (15, 5))\n    sns.barplot(data = df, x = 'Term', y = 'Frequency', hue = hue, palette = color, dodge = False)\n    plt.xlabel('Term', fontsize = 20)\n    plt.ylabel('Frequency', fontsize = 20)\n    plt.xticks(rotation = 90, fontsize = 15, fontweight = 'bold')\n    plt.yticks(fontsize = 15)\n    plt.legend(loc = 'upper right', ncol = 5, prop={'size': 12})\n    plt.title('Top 10 ' + legend + ' Kaggle Tweets', fontsize = 25, fontweight = 'bold')\n    plt.show()","b87eca04":"tweet_2010 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2010.csv')\ntweet_2010 = preprocess(tweet_2010)\nt_2010 = tweet_2010[tweet_2010['language'] == 'en']['processed_tweet']\nt_2010.head()","bb0cab67":"generate_word_cloud(t_2010, '..\/input\/kaggle-images\/2010.png', 'spring')","59630ee3":"common_2010 = pd.DataFrame(most_common_words(t_2010), columns = ['Term', 'Frequency'])\ncommon_2010 = pos_tagging(common_2010)\ncommon_2010.iloc[[2], [2]] = 'Verb'\ncommon_2010.iloc[[8], [2]] = 'Noun'\n\nbarplot(common_2010, 'Common Words in 2010',  'POS', 'spring')","b6930e07":"common_2010 = pd.DataFrame(most_common_bigrams(t_2010), columns = ['Term', 'Frequency'])\ncommon_2010 = pos_tagging(common_2010)\n\nbarplot(common_2010, 'Common Bigrams in 2010',  'Frequency', 'spring')","c50d114f":"tweet_2011 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2011.csv')\ntweet_2011 = preprocess(tweet_2011)\nt_2011 = tweet_2011[tweet_2011['language'] == 'en']['processed_tweet']\nt_2011.head()","9c4c9a39":"generate_word_cloud(t_2011, '..\/input\/kaggle-images\/2011.jpg', 'summer')","0c800b61":"common_2011 = pd.DataFrame(most_common_words(t_2011), columns = ['Term', 'Frequency'])\ncommon_2011 = pos_tagging(common_2011)\n\nbarplot(common_2011, 'Common Words in 2011',  'POS', 'summer')","5cff6bb2":"common_2011 = pd.DataFrame(most_common_bigrams(t_2011), columns = ['Term', 'Frequency'])\ncommon_2011 = pos_tagging(common_2011)\n\nbarplot(common_2011, 'Common Bigrams in 2011',  'Frequency', 'summer')","840e633d":"tweet_2012 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2012.csv')\ntweet_2012 = preprocess(tweet_2012)\nt_2012 = tweet_2012[tweet_2012['language'] == 'en']['processed_tweet']\nt_2012.head()","51ce69f0":"generate_word_cloud(t_2012, '..\/input\/kaggle-images\/2012.jpg', 'autumn')","a2e2f9d0":"common_2012 = pd.DataFrame(most_common_words(t_2012), columns = ['Term', 'Frequency'])\ncommon_2012 = pos_tagging(common_2012)\n\nbarplot(common_2012, 'Common Words in 2012',  'POS', 'autumn')","f06092cc":"common_2012 = pd.DataFrame(most_common_bigrams(t_2012), columns = ['Term', 'Frequency'])\ncommon_2012 = pos_tagging(common_2012)\n\nbarplot(common_2012, 'Common Bigrams in 2012',  'Frequency', 'autumn')","80ac346c":"tweet_2013 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2013.csv')\ntweet_2013 = preprocess(tweet_2013)\nt_2013 = tweet_2013[tweet_2013['language'] == 'en']['processed_tweet']\nt_2013.head()","ba1fc625":"generate_word_cloud(t_2013, '..\/input\/kaggle-images\/2013.png', 'winter')","4def30bd":"common_2013 = pd.DataFrame(most_common_words(t_2013), columns = ['Term', 'Frequency'])\ncommon_2013 = pos_tagging(common_2013)\n\nbarplot(common_2013, 'Common Words in 2013',  'POS', 'winter')","c2e0ec1c":"common_2013 = pd.DataFrame(most_common_bigrams(t_2013), columns = ['Term', 'Frequency'])\ncommon_2013 = pos_tagging(common_2013)\n\nbarplot(common_2013, 'Common Bigrams in 2013',  'Frequency', 'winter')","f84091e5":"tweet_2014 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2014.csv')\ntweet_2014 = preprocess(tweet_2014)\nt_2014 = tweet_2014[tweet_2014['language'] == 'en']['processed_tweet']\nt_2014.head()","36a62257":"generate_word_cloud(t_2014, '..\/input\/kaggle-images\/2014.jpg', 'Wistia')","6a49adcc":"common_2014 = pd.DataFrame(most_common_words(t_2014), columns = ['Term', 'Frequency'])\ncommon_2014 = pos_tagging(common_2014)\ncommon_2014.iloc[[4], [2]] = 'Verb'\n\nbarplot(common_2014, 'Common Words in 2014',  'POS', 'Wistia')","8effa81e":"common_2014 = pd.DataFrame(most_common_bigrams(t_2014), columns = ['Term', 'Frequency'])\ncommon_2014 = pos_tagging(common_2014)\n\nbarplot(common_2014, 'Common Bigrams in 2014',  'Frequency', 'Wistia')","e44ed6c5":"tweet_2015 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2015.csv')\ntweet_2015 = preprocess(tweet_2015)\nt_2015 = tweet_2015[tweet_2015['language'] == 'en']['processed_tweet']\nt_2015.head()","fa0a4e9d":"generate_word_cloud(t_2015, '..\/input\/kaggle-images\/2015.png', 'cool')","6691854b":"common_2015 = pd.DataFrame(most_common_words(t_2015), columns = ['Term', 'Frequency'])\ncommon_2015 = pos_tagging(common_2014)\ncommon_2015.iloc[[4], [2]] = 'Verb'\n\nbarplot(common_2015, 'Common Words in 2015',  'POS', 'cool')","113138c4":"common_2015 = pd.DataFrame(most_common_bigrams(t_2015), columns = ['Term', 'Frequency'])\ncommon_2015 = pos_tagging(common_2015)\n\nbarplot(common_2015, 'Common Bigrams in 2015',  'Frequency', 'cool')","d966024b":"tweet_2016 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2016.csv')\ntweet_2016 = preprocess(tweet_2016)\nt_2016 = tweet_2016[tweet_2016['language'] == 'en']['processed_tweet']\nt_2016.head()","718beee6":"generate_word_cloud(t_2016, '..\/input\/kaggle-images\/2016.jpg', 'hot')","5a3aa118":"common_2016 = pd.DataFrame(most_common_words(t_2016), columns = ['Term', 'Frequency'])\ncommon_2016 = pos_tagging(common_2016)\ncommon_2016.iloc[[4], [2]] = 'Noun'\ncommon_2016.iloc[[9], [2]] = 'Verb'\n\nbarplot(common_2016, 'Common Words in 2016',  'POS', 'hot')","3f2f4b67":"common_2016 = pd.DataFrame(most_common_bigrams(t_2016), columns = ['Term', 'Frequency'])\ncommon_2016 = pos_tagging(common_2016)\n\nbarplot(common_2016, 'Common Bigrams in 2016',  'Frequency', 'hot')","2f05fdae":"tweet_2017 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2017.csv')\ntweet_2017 = preprocess(tweet_2017)\nt_2017 = tweet_2017[tweet_2017['language'] == 'en']['processed_tweet']\nt_2017.head()","03c8917e":"generate_word_cloud(t_2017, '..\/input\/kaggle-images\/2017.jpg', 'copper')","6c7ae5de":"common_2017 = pd.DataFrame(most_common_words(t_2017), columns = ['Term', 'Frequency'])\ncommon_2017 = pos_tagging(common_2017)\ncommon_2017.iloc[[5], [2]] = 'Noun'\n\nbarplot(common_2017, 'Common Words in 2017',  'POS', 'copper')","3a70de04":"common_2017 = pd.DataFrame(most_common_bigrams(t_2017), columns = ['Term', 'Frequency'])\ncommon_2017 = pos_tagging(common_2017)\n\nbarplot(common_2017, 'Common Bigrams in 2017',  'Frequency', 'copper')","8fd18480":"tweet_2018 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2018.csv')\ntweet_2018 = preprocess(tweet_2018)\nt_2018 = tweet_2018[tweet_2018['language'] == 'en']['processed_tweet']\nt_2018.head()","b279c190":"generate_word_cloud(t_2018, '..\/input\/kaggle-images\/2018.jpg', 'seismic')","7cce355e":"common_2018 = pd.DataFrame(most_common_words(t_2018), columns = ['Term', 'Frequency'])\ncommon_2018 = pos_tagging(common_2018)\ncommon_2018.iloc[[3], [2]] = 'Noun'\n\nbarplot(common_2018, 'Common Words in 2018',  'POS', 'coolwarm')","2877e998":"common_2018 = pd.DataFrame(most_common_bigrams(t_2018), columns = ['Term', 'Frequency'])\ncommon_2018 = pos_tagging(common_2018)\n\nbarplot(common_2018, 'Common Bigrams in 2018',  'Frequency', 'coolwarm')","559b4fff":"tweet_2019_1 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2019Part1.csv')\ntweet_2019_2 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2019Part2.csv')\n\ntweet_2019_1 = preprocess(tweet_2019_1)\ntweet_2019_2 = preprocess(tweet_2019_2)\n\nt_2019_1 = tweet_2019_1[tweet_2019_1['language'] == 'en']['processed_tweet']\nt_2019_2 = tweet_2019_2[tweet_2019_2['language'] == 'en']['processed_tweet']\n\nt_2019 = t_2019_1.append(t_2019_2)\nt_2019.head()","632ff45e":"generate_word_cloud(t_2019, '..\/input\/kaggle-images\/2019.jpg', 'Spectral')","46591914":"common_2019 = pd.DataFrame(most_common_words(t_2019), columns = ['Term', 'Frequency'])\ncommon_2019 = pos_tagging(common_2019)\ncommon_2019.iloc[[4], [2]] = 'Verb'\ncommon_2019.iloc[[6], [2]] = 'Noun'\ncommon_2019.iloc[[7], [2]] = 'Noun'\ncommon_2019.iloc[[3], [2]] = 'Noun'\n\nbarplot(common_2019, 'Common Words in 2019',  'POS', 'Spectral')","702aed39":"common_2019 = pd.DataFrame(most_common_bigrams(t_2019), columns = ['Term', 'Frequency'])\ncommon_2019 = pos_tagging(common_2019)\n\nbarplot(common_2019, 'Common Bigrams in 2019',  'Frequency', 'Spectral')","81ff80b4":"warnings.filterwarnings('ignore')\n\ntweet_2020_1 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2020Part1.csv')\ntweet_2020_2 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2020Part2.csv')\n\ntweet_2020_1 = preprocess(tweet_2020_1)\ntweet_2020_2 = preprocess(tweet_2020_2)\n\nt_2020_1 = tweet_2020_1[tweet_2020_1['language'] == 'en']['processed_tweet']\nt_2020_2 = tweet_2020_2[tweet_2020_2['language'] == 'en']['processed_tweet']\n\nt_2020 = t_2020_1.append(t_2020_2)\nt_2020.head()","928ff09d":"generate_word_cloud(t_2020, '..\/input\/kaggle-images\/2020.jpg', 'PiYG')","e9c103c6":"common_2020 = pd.DataFrame(most_common_words(t_2020), columns = ['Term', 'Frequency'])\ncommon_2020 = pos_tagging(common_2020)\ncommon_2020.iloc[[6], [2]] = 'Noun'\ncommon_2020.iloc[[3], [2]] = 'Noun'\n\nbarplot(common_2020, 'Common Words in 2020',  'POS', 'PiYG')","e8057b03":"common_2020 = pd.DataFrame(most_common_bigrams(t_2020), columns = ['Term', 'Frequency'])\ncommon_2020 = pos_tagging(common_2020)\n\nbarplot(common_2020, 'Common Bigrams in 2020',  'Frequency', 'PiYG')","5ae7ed4d":"tweet_2021 = pd.read_csv('..\/input\/kaggle-tweets-2010-2021\/KaggleTweets2021.csv')\ntweet_2021 = preprocess(tweet_2021)\nt_2021 = tweet_2021[tweet_2021['language'] == 'en']['processed_tweet']\nt_2021.head()","d7290213":"generate_word_cloud(t_2021, '..\/input\/kaggle-images\/2021.jpg', 'RdYlGn')","b60cd682":"common_2021 = pd.DataFrame(most_common_words(t_2021), columns = ['Term', 'Frequency'])\ncommon_2021 = pos_tagging(common_2021)\ncommon_2021.iloc[[3], [2]] = 'Noun'\ncommon_2021.iloc[[8], [2]] = 'Noun'\ncommon_2021.iloc[[7], [2]] = 'Noun'\n\nbarplot(common_2021, 'Common Words in 2021',  'POS', 'RdYlGn')","8af895ca":"common_2021 = pd.DataFrame(most_common_words(t_2021), columns = ['Term', 'Frequency'])\ncommon_2021 = pos_tagging(common_2020)\n\nbarplot(common_2021, 'Common Bigrams in 2021',  'Frequency', 'RdYlGn')","6058a5de":"sia = SentimentIntensityAnalyzer()\ncategories = ['Positive', 'Negative', 'Neutral']","fbc618b6":"years = [t_2010, t_2011, t_2012, t_2013, t_2014, t_2015, t_2016, t_2017, t_2018, t_2019, t_2020, t_2021]\ncolors = ['#0d0887', '#46039f', '#7201a8', '#9c179e', '#bd3786', '#d8576b', '#ed7953', '#fb9f3a', '#fdca26', '#f0f921', '#3cb043', '#3a5311']\nfor i in range(4):\n    fig = go.Figure()\n    for j in range(i * 3, (i * 3) + 3):\n        neg = sum([sia.polarity_scores(x)['neg'] for x in years[j]]) \/ len(years[j])\n        pos = sum([sia.polarity_scores(x)['neu'] for x in years[j]]) \/ len(years[j])\n        neu = sum([sia.polarity_scores(x)['pos'] for x in years[j]]) \/ len(years[j])\n\n        fig.add_trace(go.Scatterpolar(\n              r = [pos, neg, neu],\n              theta = categories,\n              fill = 'toself',\n              line =  dict(\n              color = colors[j]),\n              name = str(j + 2010)\n        ))\n\n    fig.update_layout(\n      title = f'Sentiment Scores from {j - 2 + 2010} to {j + 2010}',\n      polar=dict(\n      bgcolor='grey',\n      radialaxis=dict(\n      visible=True,\n      range=[0, 1]\n    )),\n    showlegend=True\n    )\n\n    fig.show()","abeace83":"df_pos = pd.DataFrame()\nannot_pos = pd.DataFrame()\ndf_neg = pd.DataFrame()\nannot_neg = pd.DataFrame()\nyear_labels = [str(i) for i in range(2010, 2022)]\n\nfor index, i in enumerate(years):\n    mcw = most_common_words(years[index], -1)\n    words_pos = []\n    words_neg = []\n    pos = []\n    neg = []\n\n    for j in mcw:\n        score = TextBlob(j[0]).sentiment.polarity\n        if score > 0.0:\n            pos.append(j[1])\n            words_pos.append(j[0])\n        elif score < 0.0:\n            neg.append(j[1])\n            words_neg.append(j[0])\n            \n    df_pos[year_labels[index]] = pos[ : 10]\n    annot_pos[year_labels[index]] = words_pos[ : 10]\n    df_neg[year_labels[index]] = neg[ : 10]\n    annot_neg[year_labels[index]] = words_neg[ : 10]\n    \ncolumns = ['1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th', '9th', '10th']\ndf_pos = df_pos.T\nannot_pos = annot_pos.T\ndf_neg = df_neg.T\nannot_neg = annot_neg.T\ndf_pos.columns = columns\nannot_pos.columns = columns\ndf_neg.columns = columns\nannot_neg.columns = columns","c80278ff":"def heatmap(df, annot, legend, color):\n    plt.figure(figsize = (50, 50))\n    sns.heatmap(df, annot = annot, fmt = '', annot_kws = {'size': 40}, cbar_kws={'label': 'Frequency'}, cmap = color)\n    plt.title('Top 10 ' + legend + ' Words in Kaggle Tweets from 2010 to 2021', fontsize = 55, fontweight = 'bold')\n    plt.xticks(fontsize = 40)\n    plt.yticks(fontsize = 40)\n    plt.xlabel('Top 10', fontsize = 50)\n    plt.ylabel('Year', fontsize = 50)\n    plt.show()","104becbc":"heatmap(df_pos, annot_pos, 'Positive', 'flare')","1ef3bfba":"heatmap(df_neg, annot_neg, 'Negative', 'crest')","60693ee3":"sub = []\nobj = []\nfor i in years:\n    score = sum([TextBlob(x).sentiment.subjectivity for x in i]) \/ len(i)\n    if score > 0.5:\n        sub.append(score)\n        obj.append(1.0 - score)\n    else:\n        obj.append(score)\n        sub.append(1.0 - score)\nsub_obj = pd.DataFrame({'Year' : year_labels, 'Subjectivity' : sub, 'Objectivity' : obj})","0fdcc59e":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    y=sub_obj['Year'],\n    x=sub_obj['Subjectivity'],\n    name='Subjective',\n    orientation='h',\n    marker=dict(\n        color='rgba(246, 78, 139, 0.6)',\n        line=dict(color='rgba(246, 78, 139, 1.0)', width=3)\n    )\n))\nfig.add_trace(go.Bar(\n    y=sub_obj['Year'],\n    x=sub_obj['Objectivity'],\n    name='Objective',\n    orientation='h',\n    marker=dict(\n        color='rgba(58, 71, 80, 0.6)',\n        line=dict(color='rgba(58, 71, 80, 1.0)', width=3)\n    )\n))\n\nfig.update_layout(barmode='stack', xaxis=dict(title='Score'), yaxis=dict(title='Year'),  title = 'Subjectivity Score')\nfig.show()","d16596fa":"## **2016**","0b7c7374":"<div class = 'alert alert-warning' style = 'color:black'>\ud83d\udd14 <b>STORYTIME<br><br><br>\n    We see the word 'Google' everywhere in 2017 with reference to Kaggle, and might be wondering what Google has to do with Kaggle? \ud83d\ude35<br><br>\n    \ud83c\udfaf On March 9th 2017, Google announced that it would be acquiring Kaggle in its Google Cloud Next conference in San Francisco.<br><br>\n    \ud83c\udfaf It is not that surprising that Google acquired Kaggle because it was a great opportunity to expand its horizon in Artificial Intelligence and Data Science with thousands of Data Scientists on Kaggle.<br><br>\n    \ud83c\udfaf <i> \"Google is a very exciting home for us because Google\u2019s cloud is investing more in machine learning infrastructure than the other clouds, and it\u2019s going to end up being \u2026 the strongest cloud from a machine learning perspective. And, so, we\u2019ll be able to give our community access to much, much heavier infrastructure than we could as a small independent company\" <\/i> <br> - Anthony Goldbloom on 'The Architecht Show' <br><br><br>\n    \n<b>Sources:<b> <a href = 'https:\/\/techcrunch.com\/2017\/03\/08\/google-confirms-its-acquisition-of-data-science-community-kaggle\/'> techcrunch.com <\/a>, <a href = 'https:\/\/architecht.io\/kaggle-ceo-breaks-down-google-acquisition-and-the-state-of-machine-learning-a463d12a0ff4'> architecht.io <\/a><\/div>","b80bc194":"<h2 id = 'sec23' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2728 2019 <\/center> <\/h2>","cf268a50":"## **KAGGLE INTEREST OVER NEWS IN THE WORLD**","e0214951":"## **KAGGLE INTEREST OVER WEB IN THE WORLD**","dbc70e64":"<h3 style = 'font-family: Comic Sans MS;background-color:#FFD3B5;color:black;'> PLEASE UPVOTE AND SHARE IF YOU FOUND ANYTHING HELPFUL. THANK YOU IN ADVANCE! <\/h3>\n\n![1200px-Facebook_Thumb_icon.svg-min.png](attachment:7661c6e8-9b4b-4f38-8558-59c858b56ec4.png)","be90ed3a":"<div class = 'alert alert-info' style = 'color:black'> <b>\u26a1 This notebook comprises of two datasets namely 'KAGGLE GLOBAL TRENDS' and 'KAGGLE TWEETS'. 'KAGGLE GLOBAL TRENDS' consist of trends over regions, time, topics, and queries concerning Kaggle. 'KAGGLE TWEETS' consist of tweets from verified accounts in Twitter. This notebook intends to analyze the progression of Kaggle in over a decade, visualize findings, and draw interesting conclusions!!! <b> <\/div>\n\n    \n![kaggle meme-min.jpeg](attachment:4a4b5def-f543-455e-a3dd-40f7e8f39a50.jpeg)\n \n<b>Image Source:<b> <a href = 'https:\/\/www.google.com\/url?sa=i&url=https%3A%2F%2Fmedium.com%2F%40apakrashi%2Fkaggle-the-titanic-story-fd65e6f83f81&psig=AOvVaw1jekJ0lIVNcc4jglBJwuav&ust=1619283840902000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCLCZisLslPACFQAAAAAdAAAAABAD'> Medium.com <\/a> \n<div class = 'alert alert-info' style = 'color:black'> <b>\n\ud83d\udd25DATASET\n    <br><a href = 'https:\/\/www.kaggle.com\/usharengaraju\/kaggle-global-trends'>\ud83d\udccd Kaggle Global Trends <\/a><br>\n    <a href = 'https:\/\/www.kaggle.com\/usharengaraju\/kaggle-tweets-2010-2021'>\ud83d\udccd Kaggle Tweets <\/a> <b> <\/div>","49904128":"## **2017**","4ab8beab":"## **KAGGLE INTEREST IN THE MEDIA OVER TIME**","ff0bcc49":"## **TOP KAGGLE QUERIES IN THE WEB**","1c373842":"## **2011**","dd6e5fe5":"<h1 id = 'sec11' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\udcf1 KAGGLE INTEREST ACROSS MEDIA IN THE WORLD \ud83c\udf0e <\/center> <\/h1>","9672fdca":"<h2 id = 'sec28' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\ude21 TOP 10 NEGATIVE WORDS IN KAGGLE TWEETS OVER TIME \u23f3 <\/center> <\/h2>","1eb4d2f4":"## **TOP KAGGLE QUERIES AND TOPICS IN YOUTUBE**","77357fb2":"## **WORD CLOUDS | UNIGRAMS | BIGRAMS**","06de64fe":"<h1 id = 'sec13' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2601 WORD CLOUDS | \u270d UNIGRAMS | \ud83d\udcdd BIGRAMS <\/center> <\/h1>","891fb6e7":"![Kaggle logo-min.png](attachment:00d97677-3c66-4a80-99a6-81acf3566e11.png)\n\n<b>Image Source:<b> <a href = 'https:\/\/www.google.com\/url?sa=i&url=https%3A%2F%2Ftowardsdatascience.com%2Fsaving-and-loading-pytorch-models-in-kaggle-3dadc0af1bd9&psig=AOvVaw2sUu5dVxnUyavpv_yb_7tF&ust=1619282483733000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCIiKjbznlPACFQAAAAAdAAAAABAD'> towardsdatascience.com <\/a><br>\n<b>Reference:<b> <a href = 'https:\/\/en.wikipedia.org\/wiki\/Kaggle'> wikipedia.org <\/a>\n\n<div class = 'alert alert-info' style = 'color:black'> <b>\ud83d\udca1 Kaggle is a wonderful platform for Data Science enthusiasts and professionals to learn and grow in the field. Kaggle was co-founded by Anthony Goldbloom and Ben Hamner in 2010. Anthony Goldbloom and Jeremy Howard were the chief personnels of the platform. It initially started out with Machine Learning competitions. However, Kaggle has now evolved into a hub for Data Science from discussions to competitions and even education. In 2011, the value of the company rose to $25 million. Eventually, Google acquired Kaggle in early 2017. <b> <\/div>","fb74fa8b":"## **2019**","5509fe33":"## **TOP KAGGLE TOPICS IN THE NEWS**","abe87969":"## **2018**","b9edce16":"## **KAGGLE INTEREST IN THE WEB OVER TIME**","028a29a0":"<h1 id = 'sec6' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\udd78 KAGGLE INTEREST IN THE WEB OVER TIME \u23f3 <\/center> <\/h1>","2ea1f01b":"## **2012**","9c41384b":"## **TOP 10 NEGATIVE WORDS IN KAGGLE TWEETS OVER TIME**","95d41a4e":"## **2020**","a64c8897":"<h2 id = 'sec24' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2728 2020 <\/center> <\/h2>","824cbcec":"<h1 id = 'sec2' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\udcf0 KAGGLE INTEREST OVER NEWS IN THE WORLD \ud83c\udf0e<\/center> <\/h1>","b3f8ce2a":"<h3 style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2753 WHAT HAPPENED TO KAGGLE IN 2017? \ud83c\udf1f <\/center> <\/h3>","a2eb7078":"## **2014**","2fffa3ce":"## **CONTENT**","082236ed":"<h1 id = 'sec9' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u25b6 KAGGLE INTEREST IN YOUTUBE OVER TIME \u23f3 <\/center> <\/h1>","5c3dec8a":"<h2 id = 'sec19' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2728 2015 <\/center> <\/h2>","3ad1e21c":"<h1 id = 'sec4' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\udcf0 TOP KAGGLE TOPICS IN THE NEWS \ud83d\udd1d <\/center> <\/h1>","ec700c48":"<h3 style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2753 WHAT HAPPENED TO KAGGLE IN 2013? \ud83c\udf1f <\/center> <\/h3>","df1f58c5":"## **SENTIMENT ANALYSIS OF KAGGLE TWEETS OVER TIME**","76de20eb":"## **2015**","f741d3dd":"<h2 id = 'sec20' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2728 2016 <\/center> <\/h2>","e7b2b260":"## **KAGGLE INTEREST OVER YOUTUBE IN THE WORLD**","378f8a91":"<h2 id = 'sec15' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2728 2011 <\/center> <\/h2>","91994d2c":"## **ABOUT THE DATASET**","eaf3103b":"<h1 style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83c\udfaf ABOUT THE DATASET \ud83c\udfaf <\/center> <\/h1>","5770c180":"1. [IMPORT LIBRARIES](#sec1) <br>\n2. [KAGGLE INTEREST OVER NEWS IN THE WORLD](#sec2) <br>\n3. [KAGGLE INTEREST IN THE NEWS OVER TIME](#sec3) <br>\n4. [TOP KAGGLE TOPICS IN THE NEWS](#sec4) <br>\n5. [KAGGLE INTEREST OVER WEB IN THE WORLD](#sec5) <br>\n6. [KAGGLE INTEREST IN THE WEB OVER TIME](#sec6) <br>\n7. [TOP KAGGLE QUERIES AND TOPICS IN THE WEB](#sec7) <br>\n8. [KAGGLE INTEREST OVER YOUTUBE IN THE WORLD](#sec8) <br>\n9. [KAGGLE INTEREST IN YOUTUBE OVER TIME](#sec9) <br>\n10. [TOP KAGGLE QUERIES AND TOPICS IN YOUTUBE](#sec10) <br>\n11. [KAGGLE INTEREST ACROSS MEDIA IN THE WORLD](#sec11) <br>\n12. [KAGGLE INTEREST IN THE MEDIA OVER TIME](#sec12) <br>\n13. [WORD CLOUDS | UNIGRAMS | BIGRAMS](#sec13) <br>\n    * [2010](#sec14) <br>\n    * [2011 - FUN FACTS](#sec15) <br>\n    * [2012](#sec16) <br>\n    * [2013 - FUN FACTS](#sec17) <br>\n    * [2014](#sec18) <br>\n    * [2015](#sec19) <br>\n    * [2016](#sec20) <br>\n    * [2017 - FUN FACTS](#sec21) <br>\n    * [2018](#sec22) <br>\n    * [2019](#sec23) <br>\n    * [2020](#sec24) <br>\n    * [2021](#sec25) <br>\n14. [SENTIMENT ANALYSIS OF KAGGLE TWEETS OVER TIME](#sec26) <br>\n15. [TOP 10 POSITIVE WORDS IN KAGGLE TWEETS OVER TIME](#sec27) <br>\n16. [TOP 10 NEGATIVE WORDS IN KAGGLE TWEETS OVER TIME](#sec28) <br>\n17. [SUBJECTIVITY ANALYSIS OF KAGGLE TWEETS OVER TIME](#sec29) <br>\n18. [CONCLUSIONS](#sec30) <br>","0ebb17a8":"<h3 style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2753 WHAT HAPPENED TO KAGGLE IN 2011? \ud83c\udf1f <\/center> <\/h3>","9dd936eb":"<div class = 'alert alert-info' style = 'color:black'>\ud83d\udd14 <b>STORYTIME<br><br><br>\n    We see the word 'Jeremy Howard' in 2013 bigrams with reference to Kaggle and might be wondering 'Wait, wasn't he one of the key personnels of Kaggle? What happened to him?' Well... \ud83d\ude05<br><br>\n    \ud83c\udfaf Jeremy Howard was the former President and Chief Scientist of Kaggle.<br><br>\n    \ud83c\udfaf In December 2013, Kaggle changed its business model. It chose to concentrate on specific industries beginning with oil and gas.<br><br>\n    \ud83c\udfaf <i>\u201cWe liked to say \u2018It\u2019s all about the data,\u2019 but the reality is that you have to understand enough about the domain in order to make a business, What a pharmaceutical company thinks a prediction about a chemical\u2019s toxicity is worth is very different from what Clorox thinks shelf space is worth. There is a lot to learn in each area.\u201d<\/i><br> - Anthony Goldbloom <br><br>\n    \ud83c\udfaf This change of direction, unfortunately, pushed out Jeremy Howard from Kaggle.<br><br>\n    \ud83c\udfaf <i>\u201cA lone wolf data scientist can still apply his knowledge to any industry, I\u2019m spending time in areas where I have no industrial knowledge and finding things. I\u2019m going to have to build a company, but first I have to spend time as a lone wolf.\u201d<\/i><br> - Jeremy Howard<br><br><br>\n    \n<b>Source:<b> <a href = 'https:\/\/bits.blogs.nytimes.com\/2014\/01\/01\/big-data-shrinks-to-grow\/?_r=0'> nytimes.com <\/a><\/div>","d3ba1739":"## **2021**","942a9d9e":"## **2010**","f8c5ff54":"<h1 style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83c\udf89 EVOLUTION OF KAGGLE \ud83c\udf89 <\/center> <\/h1>","d82d1f2e":"<h2 id = 'sec14' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2728 2010 <\/center> <\/h2>","e0b72ff8":"<h1 id = 'sec5' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\udd78 KAGGLE INTEREST OVER WEB IN THE WORLD \ud83c\udf0e <\/center> <\/h1>","2fb246c7":"<h1 id = 'sec12' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\udcf1 KAGGLE INTEREST IN THE MEDIA OVER TIME \u23f3 <\/center> <\/h1>","1f6cf05b":"## **SUBJECTIVITY ANALYSIS OF KAGGLE TWEETS OVER TIME**","094b587b":"<h1 id = 'sec7' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\udd78 TOP KAGGLE QUERIES AND TOPICS IN THE WEB \ud83d\udd1d <\/center> <\/h1>","cab10dfa":"<h1 id = 'sec1' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\udcc3 IMPORT LIBRARIES <\/center> <\/h1>","7ec7a4fd":"<h2 id = 'sec18' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2728 2014 <\/center> <\/h2>","460a623a":"<h2 id = 'sec27' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\ude0a TOP 10 POSITIVE WORDS IN KAGGLE TWEETS OVER TIME \u23f3 <\/center> <\/h2>","20d53942":"<div class = 'alert alert-success' style = 'color:black'>\ud83d\udd14 <b> FINAL THOUGHTS AND TAKEAWAYS! <br><br><br>\n    The Data Analysis and Visualization of the Evolution of Kaggle tells quite a story on its own without explicitly mentioning conclusions drawn from them. Having said that, I would like to highlight all the fascinating interpretations! \ud83d\ude0d<br><br>\n    \ud83c\udfaf 69.9% of the interest for Kaggle over the news is from St.Helena.<br><br>\n    \ud83c\udfaf The years 2011-2012, 2015-2018, and 2020 were the happening times for Kaggle in the news. <br><br>\n    \ud83c\udfaf China has the highest interest in Kaggle over the web and YouTube. <br><br>\n    \ud83c\udfaf In late 2016, the interest in Kaggle over the web steadily increased and reached its peak so far during the pandemic. It dipped in early 2021. It is still high though not as high as in 2020. <br><br>\n    \ud83c\udfaf Since late 2017, the interest in Kaggle over YouTube continuously increases!. <br><br>\n    \ud83c\udfaf One of the top Kaggle queries on YouTube are 'Krish Naik' and 'Abhishek Thakur'. Understandably so as they are leading Data Science professionals in the community and extensively contribute to educating Data Science enthusiasts. <br><br>\n    \ud83c\udfaf Interest in Data Science over the web drastically outweighs the news and even YouTube. <br><br>\n    \ud83c\udfaf Though now the web takes over, in late 2011 and early 2012, Kaggle was covered in the news than the rest. Similarly, in 2017, Kaggle was covered in YouTube and the news than the web. <br><br>\n    \ud83c\udfaf Riveting keywords that stand out by year are as follows. <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\ud83c\udf86 2010 - Forecasting Bioinformatics <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\ud83c\udf86 2011 - Khosla <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\ud83c\udf86 2012 - Big Data <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\ud83c\udf86 2013 - Jeremy Howard <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\ud83c\udf86 2014 - Kaggle Competition <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\ud83c\udf86 2015 - Data Science <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\ud83c\udf86 2016 - Kaggle Watson <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\ud83c\udf86 2017 - Google <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\ud83c\udf86 2018 - Deep Learning <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\ud83c\udf86 2020 - Abhishek Thakur <br><br>\n    \ud83c\udfaf Kaggle tweets have been positive for the most part and ever so slightly negative. <br><br>\n    \ud83c\udfaf Words 'New', 'Top', and 'First' are some of the most common positive terms used in Kaggle tweets. <br><br>\n    \ud83c\udfaf Words 'Waste', 'Ugly', and 'Mean' are some of the most common negative terms used in Kaggle tweets. <br><br>\n    \ud83c\udfaf On average 70% of the Kaggle tweets have been subjective than objective. <br><br>","1c0e24fe":"<h1 id = 'sec10' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u25b6 TOP KAGGLE QUERIES AND TOPICS IN YOUTUBE \ud83d\udd1d <\/center> <\/h1>","117cc04a":"<h2 id = 'sec16' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2728 2012 <\/center> <\/h2>","31818993":"<h1 id = 'sec8' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u25b6 KAGGLE INTEREST OVER YOUTUBE IN THE WORLD \ud83c\udf0e <\/center> <\/h1>","31837125":"## **IMPORT LIBRARIES**","0820e353":"<div class = 'alert alert-success' style = 'color:black'>\ud83d\udd14 <b>STORYTIME<br><br><br>\n    We see the word 'Khosla' everywhere in 2011 with reference to Kaggle, and might be wondering what Khosla is and what does that have anything to do with Kaggle? \ud83d\ude35<br><br>\n    \ud83c\udfaf Khosla Ventures is an American venture capital firm founded by Vinod Khosla, focused on early-stage companies in the Internet, computing, mobile, silicon technology, biotechnology, healthcare and clean technology sectors.<br><br>\n    \ud83c\udfaf Kaggle raised $11 million in Series A financing led by Index Ventures and Khosla Ventures in 2011! <br><br>\n    \ud83c\udfaf <i>\u201cKaggle is working on one of the most exciting opportunities in big data analytics that I\u2019ve seen in the last twenty years, Kaggle\u2019s platform has the potential to change the way we tackle data analysis problems.\u201d<\/i><br> - Vinod Khosla <br><br><br>\n    \n<b>Sources:<b> <a href = 'https:\/\/techcrunch.com\/2011\/11\/02\/index-and-khosla-lead-11m-round-in-kaggle-a-platform-for-data-modeling-competitions\/'> techcrunch.com <\/a>, <a href = 'https:\/\/www.khoslaventures.com\/'> khoslaventures.com <\/a><\/div>","d1761aa5":"<h2 id = 'sec22' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2728 2018 <\/center> <\/h2>","9980bf7b":"<h2 id = 'sec25' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2728 2021 <\/center> <\/h2>","ba4cf2d9":"<h1 style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\udd17 CONTENT \ud83d\udd17 <\/center> <\/h1>","0f0de6b9":"<h2 id = 'sec29' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\udccc SUBJECTIVITY ANALYSIS OF KAGGLE TWEETS OVER TIME \u23f3 <\/center> <\/h2>","3112c2cd":"<h2 id = 'sec30' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\udd11 CONCLUSIONS \ud83d\udd11 <\/center> <\/h2>","da2c4729":"## **TOP 10 POSITIVE WORDS IN KAGGLE TWEETS OVER TIME**","0cf73281":"<h1 id = 'sec3' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83d\udcf0 KAGGLE INTEREST IN THE NEWS OVER TIME \u23f3 <\/center> <\/h1>","33d812b7":"## **KAGGLE INTEREST ACROSS MEDIA IN THE WORLD**","7e3768c0":"<h2 id = 'sec21' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2728 2017 <\/center> <\/h2>","db792eff":"<h2 id = 'sec17' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \u2728 2013 <\/center> <\/h2>","575130fa":"<h2 id = 'sec26' style = 'background-color:black;color:white;font-family:COMIC SANS MS'> <center> \ud83e\udd29 SENTIMENT ANALYSIS OF KAGGLE TWEETS OVER TIME \u23f3 <\/center> <\/h2>","3e12d294":"## **KAGGLE INTEREST IN THE NEWS OVER TIME**","fd1db36f":"## **KAGGLE INTEREST IN YOUTUBE OVER TIME**","3edac1d0":"## **2013**"}}