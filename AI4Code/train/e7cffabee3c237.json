{"cell_type":{"63950e0b":"code","0c17732a":"code","54385a70":"code","d90251b7":"code","8921fe81":"code","a9c15824":"code","be54f557":"code","003d5e36":"code","cd6119f0":"code","557b1021":"code","013fa563":"code","e3ebf0bf":"code","e30445db":"code","8b731dc1":"code","14030364":"code","e19256af":"code","cb6e9f0a":"code","97471023":"markdown","e85438a7":"markdown","6d45aca9":"markdown","91303130":"markdown","19d75060":"markdown","73395a49":"markdown","3639d7b4":"markdown","4028ed79":"markdown","0ff21f21":"markdown","753fe181":"markdown","9eabe0b1":"markdown","4603f809":"markdown"},"source":{"63950e0b":"import math\nimport pandas as pd\nimport geopandas as gpd\n\nimport folium\nfrom folium import Figure, Map, Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster","0c17732a":"# Load the data\ncrimes = pd.read_csv(\"..\/input\/geospatial-learn-course-data\/crimes-in-boston\/crimes-in-boston\/crime.csv\", encoding='latin-1')\n\n# Drop rows with missing locations\ncrimes.dropna(subset=['Lat', 'Long', 'DISTRICT'], inplace=True)\n\n# Focus on major crimes in 2018\ncrimes = crimes[crimes.OFFENSE_CODE_GROUP.isin([\n    'Larceny', 'Auto Theft', 'Robbery', 'Larceny From Motor Vehicle', 'Residential Burglary',\n    'Simple Assault', 'Harassment', 'Ballistics', 'Aggravated Assault', 'Other Burglary', \n    'Arson', 'Commercial Burglary', 'HOME INVASION', 'Homicide', 'Criminal Harassment', \n    'Manslaughter'])]\ncrimes = crimes[crimes.YEAR>=2018]\n\nday_rob = crimes[((crimes.OFFENSE_CODE_GROUP == 'Robbery') & \\\n                            (crimes.HOUR.isin(range(9,18))))]\n\n# Print the first five rows of the table\nday_rob.head()","54385a70":"# folium.Map?","d90251b7":"# folium.Figure?","8921fe81":"# f.add_child?","a9c15824":"# openstreet map\nf = Figure(width=400, height=250, title='Open Street Map') # width and height of openstreet map\nm1 = Map(location=[9.9312, 76.2673],    # coordinates gives the center of the map\n                tiles='openstreetmap',  # map style\n                zoom_start=12)          # starting zoom value\nf.add_child(m1)\nf","be54f557":"# cartodbpositron map\nf = Figure(width=400, height=250)\nm1 = Map(location=[9.9312, 76.2673], \n                tiles='cartodbpositron', \n                zoom_start=12)\nf.add_child(m1)\nf","003d5e36":"day_rob.head()","cd6119f0":"m2 = Map(location=[42.32,-71.0589], \n                 tiles='cartodbpositron', \n                 zoom_start=13)\n\nfor idx, row in day_rob.iterrows(): # iterate over pandas rows \n    \n    if row['OFFENSE_DESCRIPTION']=='ROBBERY - STREET':\n        Marker([row['Lat'], row['Long']],\n               popup = row['OFFENSE_DESCRIPTION'], # appears on click\n               tooltip=row['STREET'],              # appears on hover\n               icon=folium.Icon(color='blue', icon='cloud')).add_to(m2)\n        \n    elif row['OFFENSE_DESCRIPTION']=='ROBBERY - COMMERCIAL':\n        Marker([row['Lat'], row['Long']],\n               popup = row['OFFENSE_DESCRIPTION'], # appears on click\n               tooltip=row['STREET'],              # appears on hover\n               icon=folium.Icon(color='green', icon='home', prefix='fa')).add_to(m2)\n        \n    else:\n        Marker([row['Lat'], row['Long']], \n               popup = row['OFFENSE_DESCRIPTION'],\n               tooltip=row['STREET'],\n               icon=folium.Icon(color='red', icon='info-sign')).add_to(m2)\n    \nm2","557b1021":"# Circle?","013fa563":"m2 = Map(location=[42.32,-71.0589], \n                 tiles='cartodbpositron', \n                 zoom_start=13)\n\nfor idx, row in day_rob.iterrows(): # iterate over pandas rows \n\n    Circle([row['Lat'], row['Long']],\n           popup = row['OFFENSE_DESCRIPTION'], # appears on click\n           tooltip=row['STREET'],              # appears on hover\n           radius = 100,    # radius in meters\n           color='#3186cc', # color of the circumference circle\n           fill=True, \n           fill_color='#3186cc').add_to(m2)\n    \nm2","e3ebf0bf":"m3 = Map(location=[42.32, -71.0789], tiles='cartodbpositron', zoom_start=13)\nmc = MarkerCluster()\nfor idx, row in day_rob.iterrows():\n    if not math.isnan(row['Long']) and not math.isnan(row['Lat']):\n        mc.add_child(Marker([row['Lat'], row['Long']]))\nm3.add_child(mc)\nm3","e30445db":"m4 = folium.Map(location=[42.32,-71.0589], tiles='cartodbpositron', zoom_start=13)\n\ndef color_producer(val):\n    if val <= 12:\n        return 'forestgreen'\n    else:\n        return 'darkred'\n\nfor i in range(0,len(day_rob)):\n    Circle(location=[day_rob.iloc[i]['Lat'], day_rob.iloc[i]['Long']],\n           radius=20, \n           color=color_producer(day_rob.iloc[i]['HOUR'])).add_to(m4)\n\nm4","8b731dc1":"m5 = Map(location=[42.32, -71.0589], title='cartodbpositron', zoom_start=12)\nHeatMap(data=crimes[['Lat', 'Long']], radius=10).add_to(m5)\nm5","14030364":"# GeoDataFrame with geographical boundaries of Boston police districts\ndistricts_full = gpd.read_file('..\/input\/geospatial-learn-course-data\/Police_Districts\/Police_Districts\/Police_Districts.shp')\ndistricts = districts_full[[\"DISTRICT\", \"geometry\"]].set_index(\"DISTRICT\")\nprint(districts.head())\n\nplot_dict = crimes.DISTRICT.value_counts()\nprint(plot_dict.head())\n\nm6 = folium.Map(location=[42.32,-71.0589], \n                tiles='cartodbpositron', \n                zoom_start=12)\n\n# Add a choropleth map to the base map\nChoropleth(geo_data=districts.__geo_interface__, \n           data=plot_dict, \n           key_on=\"feature.id\", \n           fill_color='YlGnBu', \n           legend_name='Major criminal incidents (Jan-Aug 2018)').add_to(m6)\n\n# Display the map\nm6","e19256af":"m = folium.Map(location=[45.523, -122.675], width=750, height=500)\nm.fit_bounds([[52.193636, -2.221575], [52.636878, -1.139759]])\nm","cb6e9f0a":"folium.Map(location=[45.523, -122.675], tiles='Mapbox Control Room')","97471023":"# Data","e85438a7":"# Bubble plot","6d45aca9":"# Chorpleth maps","91303130":"List of available tiles :  \n[https:\/\/github.com\/python-visualization\/folium\/tree\/master\/folium\/templates\/tiles](https:\/\/github.com\/python-visualization\/folium\/tree\/master\/folium\/templates\/tiles)","19d75060":"# Marker","73395a49":"# Libraries","3639d7b4":"# Heatmap","4028ed79":"# Tiles (map style)","0ff21f21":"# Circle","753fe181":"# Marker Cluster","9eabe0b1":"# Data","4603f809":"> **Circle** - radius in meters  \n> **CircleMarker** - radius in pixels"}}