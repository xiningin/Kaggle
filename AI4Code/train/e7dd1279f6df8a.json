{"cell_type":{"30c24679":"code","bea4baba":"code","9be72a4f":"code","473c721f":"code","34123849":"code","cbafa694":"code","ac93af5c":"code","701d5090":"code","156ca659":"code","a1c6585f":"code","58e0ea1b":"code","28577a50":"code","58d18453":"code","c157a640":"code","16b7cc36":"code","aee05c95":"code","2d8f38f8":"code","26669879":"code","d4995a97":"code","c5ac2674":"code","ccfda8d3":"code","b2730a50":"code","26a89024":"code","ed5998be":"markdown","33ef0791":"markdown","d8f05200":"markdown"},"source":{"30c24679":"import numpy as np \nimport pandas as pd\n\nimport tensorflow as tf\nfrom sklearn.preprocessing import LabelEncoder\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings","bea4baba":"warnings.filterwarnings(\"ignore\")","9be72a4f":"# Load the dataset and print a few records \ndat = pd.read_csv('\/kaggle\/input\/mushroom-classification\/mushrooms.csv', header=0)\ndat.head()","473c721f":"dat.shape # 8124 tuples and 23 attributes ","34123849":" dat.info()","cbafa694":"target = dat['class']\ndat = dat.drop('class', axis=1)","ac93af5c":"dat.head()","701d5090":"dat.nunique()","156ca659":"# veil-type has only 1 type of value and can be dropped\ndat = dat.drop('veil-type', axis=1)","a1c6585f":"x = dat\ny = target.astype('category').cat.codes\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_val, y_train, y_val = train_test_split(x,y,test_size=0.2, random_state=20, stratify=y)","58e0ea1b":"x_train.shape, x_val.shape, y_train.shape, y_val.shape","28577a50":"# Ordinal encoding using LabelEncoder from sklearn\nencoder = LabelEncoder()\nfor col in x_train.columns:\n    x_train[col] = encoder.fit_transform(x_train[col])\n    x_val[col] = encoder.transform(x_val[col])\n\nx_train.head()","58d18453":"corr = x_train.corr()\nplt.figure(1, figsize=(15,10))\nsns.heatmap(corr, annot = True)","c157a640":"from sklearn.preprocessing import StandardScaler","16b7cc36":"std = StandardScaler()\nx_train_scaled = std.fit_transform(x_train)\nx_val_scaled = std.transform(x_val)","aee05c95":"model = tf.keras.models.Sequential([\n  tf.keras.layers.Dense(128, activation='relu'),\n  tf.keras.layers.Dense(1, activation='sigmoid')\n])","2d8f38f8":"opt = tf.keras.optimizers.Adam(learning_rate=0.05)\nloss_fn = tf.keras.losses.BinaryCrossentropy()\nmodel.compile(optimizer=opt,\n              loss=loss_fn,\n              metrics=['accuracy'])","26669879":"model.fit(x_train_scaled, y_train, epochs=5, batch_size=64, validation_data=(x_val_scaled, y_val))","d4995a97":"preds = model.predict(x_val_scaled)","c5ac2674":"preds = np.round(preds)","ccfda8d3":"from sklearn.metrics import confusion_matrix, classification_report","b2730a50":"confusion_matrix(y_val, preds)","26a89024":"print(classification_report(y_val, preds))","ed5998be":"# Building the Artificial Neural Network (Multilayer Perceptron) ","33ef0791":"# Preprocessing","d8f05200":"# About the dataset\nAttribute Information: (classes: edible=e, poisonous=p)\n\n1. **cap-shape**: bell=b,conical=c,convex=x,flat=f, knobbed=k,sunken=s\n\n2. **cap-surface**: fibrous=f,grooves=g,scaly=y,smooth=s\n\n3. **cap-color**: brown=n,buff=b,cinnamon=c,gray=g,green=r,pink=p,purple=u,red=e,white=w,yellow=y\n\n4. **bruises**: bruises=t,no=f\n\n5. **odor**: almond=a,anise=l,creosote=c,fishy=y,foul=f,musty=m,none=n,pungent=p,spicy=s\n\n6. **gill-attachment**: attached=a,descending=d,free=f,notched=n\n\n7. **gill-spacing**: close=c,crowded=w,distant=d\n\n8. **gill-size**: broad=b,narrow=n\n\n9. **gill-color**: black=k,brown=n,buff=b,chocolate=h,gray=g, green=r,orange=o,pink=p,purple=u,red=e,white=w,yellow=y\n\n10. **stalk-shape**: enlarging=e,tapering=t\n\n11. **stalk-root**: bulbous=b,club=c,cup=u,equal=e,rhizomorphs=z,rooted=r,missing=?\n\n12. **stalk-surface-above-ring**: fibrous=f,scaly=y,silky=k,smooth=s\n\n13. **stalk-surface-below-ring**: fibrous=f,scaly=y,silky=k,smooth=s\n\n14. **stalk-color-above-ring**: brown=n,buff=b,cinnamon=c,gray=g,orange=o,pink=p,red=e,white=w,yellow=y\n\n15. **stalk-color-below-ring**: brown=n,buff=b,cinnamon=c,gray=g,orange=o,pink=p,red=e,white=w,yellow=y\n\n16. **veil-type**: partial=p,universal=u\n\n17. **veil-color**: brown=n,orange=o,white=w,yellow=y\n\n18. **ring-number**: none=n,one=o,two=t\n\n19. **ring-type**: cobwebby=c,evanescent=e,flaring=f,large=l,none=n,pendant=p,sheathing=s,zone=z\n\n20. **spore-print-color**: black=k,brown=n,buff=b,chocolate=h,green=r,orange=o,purple=u,white=w,yellow=y\n\n21. **population**: abundant=a,clustered=c,numerous=n,scattered=s,several=v,solitary=y\n\n22. **habitat**: grasses=g,leaves=l,meadows=m,paths=p,urban=u,waste=w,woods=d"}}