{"cell_type":{"c9fe8ca5":"code","7263000f":"code","759c0aee":"code","9ab0e4ef":"code","9031936c":"code","6ac0f928":"code","dcab59c7":"code","fbcf04f2":"code","c3c53433":"code","0de47371":"code","024697e2":"code","25e33d61":"code","6b3c39da":"code","5696c6f2":"code","1ea41dbe":"code","15c8f1db":"code","31a91e3e":"code","44add47f":"code","6c6e5f9f":"code","ce9183c1":"code","35b16f5a":"code","1e2532c4":"code","430e2629":"code","4a02f0e8":"code","73253242":"code","a2902567":"code","83348188":"code","18271a1e":"code","1f37042a":"code","9f2819d0":"code","3cfe13e0":"code","5ebf06a5":"code","c3bf2edb":"code","3a69dff3":"code","bb140300":"code","06ffd974":"code","d0aee8a4":"code","e0528f39":"code","ed410231":"code","650bcfe1":"code","77ad4888":"code","47e11bbc":"code","6714f4ba":"code","ab33de6a":"code","b4d05e9d":"code","2f7c78bd":"code","04167fd8":"code","93f7aba4":"code","704de98b":"code","44075168":"code","b154aeac":"code","e58555b9":"code","242eb207":"code","541c893c":"code","e2e17962":"code","9d1aa9cc":"code","976b8818":"code","b659e732":"code","c03f265b":"code","f0b1c123":"code","0c9cada8":"code","2619f878":"code","2686f53b":"code","ea4b0ca9":"code","44ecec0f":"code","2d0de355":"code","9131986f":"code","80300c4f":"markdown","78e5bfa7":"markdown","18429ba2":"markdown","4558bf53":"markdown","15bd8bed":"markdown","fcdfccfd":"markdown","ca304445":"markdown","7570cbdf":"markdown","75b79225":"markdown","d38d688e":"markdown"},"source":{"c9fe8ca5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\n\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n\n    \n\n\n\n# Any results you write to the current directory are saved as output.","7263000f":"data1=pd.read_csv('..\/input\/auditcsv\/audit_risk.csv')\ndata2=pd.read_csv('..\/input\/trailcsv\/trial (1).csv')","759c0aee":"data1.head()\ndata2.sample(7)","9ab0e4ef":"data1.dtypes","9031936c":"len(data1.columns)\ndata1.columns","6ac0f928":"len(data2.columns)\ndata2.columns","dcab59c7":"data1.isnull().sum()\n","fbcf04f2":"data2.isnull().sum()","c3c53433":"data2.shape","0de47371":"data1.shape","024697e2":"data1.describe()\n","25e33d61":"data2.describe()\n","6b3c39da":"data1.nunique()","5696c6f2":"data2.nunique()","1ea41dbe":"mod_data1=data1.fillna(data1[\"Money_Value\"].mean())","15c8f1db":"mod_data1.isnull().sum()\n","31a91e3e":"mod_data2=data2.fillna(data2[\"Money_Value\"].mean())","44add47f":"mod_data2.isnull().sum()","6c6e5f9f":"data1['Money_Value']\n","ce9183c1":"result1=pd.merge(mod_data1,mod_data2 , on=('Sector_score', 'PARA_A','PARA_B','TOTAL','numbers','Money_Value','Risk'))\n","35b16f5a":"result1.shape","1e2532c4":"result2=result1.drop_duplicates()\nprint(result2.shape)","430e2629":"result1.nunique()","4a02f0e8":"result=pd.merge(mod_data1,mod_data2, left_index=True, right_index=True)","73253242":"result.head()","a2902567":"result.shape","83348188":"result.shape","18271a1e":"result.isnull().sum()\n","1f37042a":"result_data=mod_data1.merge(mod_data2)","9f2819d0":"result_data.shape","3cfe13e0":"result_data.columns","5ebf06a5":"result_data_sn1=result_data.drop_duplicates()\nresult_data_sn1.shape","c3bf2edb":"result_data_sn1[\"LOCATION_ID\"].nunique()","3a69dff3":"result_data_sn1.dtypes","bb140300":"result_data_sn1[\"LOCATION_ID\"].unique()","06ffd974":"final_result=result_data_sn1.copy()","d0aee8a4":"final_result","e0528f39":"final_result[[\"LOCATION_ID\",\"Risk\"]]=final_result[[\"LOCATION_ID\",\"Risk\"]].astype(\"category\")","ed410231":"final_result.dtypes","650bcfe1":"final_result[\"LOCATION_ID\"]=final_result[\"LOCATION_ID\"].replace(\"LOHARU\", 45)\nfinal_result[\"LOCATION_ID\"]=final_result[\"LOCATION_ID\"].replace(\"NUH\", 46)\nfinal_result[\"LOCATION_ID\"]=final_result[\"LOCATION_ID\"].replace(\"SAFIDON\", 47)\nfinal_result[\"LOCATION_ID\"].unique()\n\n","77ad4888":"plt.boxplot(final_result[\"Risk_B\"])","47e11bbc":"final_result.describe()","6714f4ba":"final_result[final_result['PARA_B']==1264.630000]","ab33de6a":"final_outlier=final_result[final_result['PARA_B']!=1264.630000]","b4d05e9d":"final_outlier[final_outlier['PARA_B']==1264.630000]","2f7c78bd":"plt.boxplot(final_outlier['PARA_B'])","04167fd8":"final_outlier.head()","93f7aba4":"final_outlier[['Money_Value','Risk_D']].describe()","704de98b":"final_outlier[final_outlier[\"Money_Value\"]==935.030000]","44075168":"final_outlier.describe()","b154aeac":"final_table=final_outlier[(final_outlier[\"Money_Value\"]!=935.030000)&(final_outlier[\"Risk_D\"]!=561.018000)&(final_outlier[\"Inherent_Risk\"]!=622.838000)&(final_outlier[\"TOTAL\"]!=191.360000)]","e58555b9":"final_table.describe()","242eb207":"plt.boxplot(final_table[\"Inherent_Risk\"])","541c893c":"final_table.shape","e2e17962":"plt.boxplot(final_table[\"TOTAL\"])","9d1aa9cc":"final_result.columns","976b8818":"y_final_reg1=final_table[\"Audit_Risk\"]\nx_final_reg1=final_table.drop([\"Audit_Risk\"],axis=1)\nx_final_reg1.shape\ny_final_reg1.shape\n#np.reshape((579,1))\ny_final_reg1.shape\n","b659e732":"from sklearn.preprocessing import MinMaxScaler, StandardScaler","c03f265b":"mm_final=MinMaxScaler()\nsc_final=StandardScaler()\ny_final_reg=final_table[\"Audit_Risk\"]\ny_final_clas=final_table[\"Risk\"]\nfinal_1=final_table.drop([\"Audit_Risk\",\"Risk\"],axis=1)\ncols=['Sector_score', 'LOCATION_ID','PARA_A', 'Score_A', 'Risk_A', 'PARA_B',\n       'Score_B', 'Risk_B', 'TOTAL', 'numbers', 'Score_B.1', 'Risk_C',\n       'Money_Value', 'Score_MV', 'Risk_D', 'District_Loss', 'PROB', 'RiSk_E',\n       'History', 'Prob', 'Risk_F', 'Score', 'Inherent_Risk', 'CONTROL_RISK',\n       'Detection_Risk', 'SCORE_A', 'SCORE_B', 'Marks',\n       'MONEY_Marks', 'District', 'Loss', 'LOSS_SCORE', 'History_score']\nmm_final1=final_1.copy()\nsc_final1=final_1.copy()\nmm_final1[cols]=mm_final.fit_transform(mm_final1[cols])\nsc_final1[cols]=sc_final.fit_transform(sc_final1[cols])\n","f0b1c123":"final_1.sample(5)","0c9cada8":"final_1[final_1[\"LOSS_SCORE\"]+final_1[\"History\"]!=final_1[\"History_score\"]].sample(10)","2619f878":"import seaborn as sns\nsns.set(style=\"white\")\ncorreln=final_1.corr()\nf,ax = plt.subplots(figsize=(20,15))\ncmap = sns.diverging_palette(220,10, as_cmap=True)\nsns.heatmap(correln,cmap=cmap, vmax=.3,linewidths=.5, cbar_kws={\"shrink\": .7})\n","2686f53b":"correln.describe()","ea4b0ca9":"y_final_reg.shape","44ecec0f":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(sc_final1,y_final_reg,test_size=0.14,random_state=0)\nprint(\"no of x train values : {} no of x test values :  {} no of y train values:    {}  \".format(x_train.shape[0],x_test.shape[0],y_train.shape[0]))","2d0de355":"from sklearn.linear_model import LinearRegression\nlreg=LinearRegression()\nlreg.fit(x_train,y_train)\nprint(\"coefficient of determination:\",lreg.score(x_train,y_train))\n#print(lreg.score(x_test,y_test))\nlreg_pred= lreg.predict(x_train)\nlreg_pred1=lreg.predict(x_test)\n#print(lreg_pred)\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\ntr_mse=mean_squared_error(y_train,lreg_pred)\ntr_rmse=sqrt(tr_mse)\nts_mse=mean_squared_error(y_test,lreg_pred1)\nts_rmse=sqrt(ts_mse)\nprint(\"mean squared error for train: %4f\" %tr_mse)\nprint(\"root mean squred error for train: %5f\" %tr_rmse)\nprint(\"mean squared error for test: %6f\"%ts_mse)\nprint(\"root mean squared error for test: %6f\"%ts_rmse)\n\n","9131986f":"from sklearn.linear_model import Ridge\nx_range=[0.01,0.1,0.5,1,10]\ntrain_list=[]\ntest_list=[]\nfor alpha in x_range:\n    ridge=Ridge(alpha)\nridge.fit(x_train,y_train)\ntrain_list.append(ridge.score(x_train,y_train))\ntest_list.append(ridge.score(x_test,y_test))\nprint(train_list) \nprint(test_list)","80300c4f":"Standaradize the data","78e5bfa7":"Replacing string values","18429ba2":"Boxplot to find outliers","4558bf53":"Removing duplicates","15bd8bed":"Left Join","fcdfccfd":"Test Train split","ca304445":"Linear Regression","7570cbdf":"Merging on common columns\n","75b79225":"Heatmap to see the correlation","d38d688e":"Ridge Regression"}}