{"cell_type":{"495788ff":"code","82c97c00":"code","faec9577":"code","a1b279bb":"code","5be179cc":"code","5e79f1cf":"code","40b62074":"code","4a76c06b":"code","195b39d2":"code","07d7f569":"code","f5939076":"code","309eeda8":"code","fa63ae1c":"code","6cee31a6":"code","af505a34":"code","56951639":"code","486be569":"markdown","7ca38a2b":"markdown"},"source":{"495788ff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","82c97c00":"fixture_df = pd.read_csv(\"..\/input\/fantasy-premier-league-2019-20\/fixture_details.csv\")\ngw_df = pd.read_csv(\"..\/input\/fantasy-premier-league-2019-20\/gw_history.csv\")\nplayers_df = pd.read_csv(\"..\/input\/fantasy-premier-league-2019-20\/player_details.csv\").set_index('id')\nteams_df = pd.read_csv(\"..\/input\/fantasy-premier-league-2019-20\/team_details.csv\")","faec9577":"import urllib.request, json\nimport matplotlib.pyplot as plt","a1b279bb":"players_df.head()","5be179cc":"element_types = {'GKP':1, 'DEF': 2, 'MID':3, 'FWD': 4}","5e79f1cf":"players_df = players_df[players_df['minutes']>60]\nplayers_df['points_per_game'] = players_df['points_per_game'].astype(float)\nplayers_df['games_played'] = round(players_df['total_points']\/players_df['points_per_game'])","40b62074":"gkps = players_df[players_df['element_type']==1]\ndefs = players_df[players_df['element_type']==2]\nmids = players_df[players_df['element_type']==3]\nfwds = players_df[players_df['element_type']==4]","4a76c06b":"gkps['saves_per_game'] = gkps['saves']\/gkps['games_played']\nmean_saves_per_game = gkps['saves_per_game'].mean()\nmean_saves_per_game","195b39d2":"s = [300*n for n in gkps['saves_per_game']]\ncolors = ['r','g']\nc = [colors[b] for b in (gkps['saves_per_game']>mean_saves_per_game).to_list()]\nplt.figure(figsize=[20,10])\nplt.scatter(gkps['now_cost'], gkps['points_per_game'],s=s, color=c)\nfor i in gkps.index:\n    plt.annotate(gkps['web_name'][i], (gkps['now_cost'][i], gkps['points_per_game'][i]))\nplt.show()","07d7f569":"bps = {}\n#common to all\nbps['min_60'] = 3\nbps['assists'] = 9\nbps['yellow_card'] = -3\nbps['red_card'] = -9\nbps['own_goal'] = -6\n\n#gkps, defs\nbps['gkps_def_score'] = 12\nbps['gkps_def_cs'] = 12\nbps['pen_save'] = 15\n\n#mids\nbps['mids_score'] = 18\n\n#fwds\nbps['fwds_score'] = 24","f5939076":"gkps['real_bps'] = gkps['bps'] - gkps['goals_scored']*bps['gkps_def_score'] - gkps['penalties_saved']*bps['pen_save'] - gkps['assists']*bps['assists'] - gkps['clean_sheets']*bps['gkps_def_cs'] ","309eeda8":"gkps['real_bps_per_game'] = gkps['real_bps']\/gkps['games_played']\ngkps[['web_name','real_bps_per_game', 'bonus']].sort_values(by ='real_bps_per_game', ascending = False).head(15)","fa63ae1c":"defs['real_bps'] = defs['bps'] - defs['goals_scored']*bps['gkps_def_score'] - defs['penalties_saved']*bps['pen_save'] - defs['assists']*bps['assists'] - defs['clean_sheets']*bps['gkps_def_cs']  ","6cee31a6":"defs['real_bps_per_game'] = defs['real_bps']\/defs['games_played']\ndefs[['web_name','real_bps_per_game','bonus']].sort_values(by ='real_bps_per_game', ascending = False).head(n=15)","af505a34":"mids['real_bps'] = mids['bps'] - mids['goals_scored']*bps['mids_score'] - mids['assists']*bps['assists']\nmids['real_bps_per_game'] = mids['real_bps']\/mids['games_played']\nmids[['web_name','real_bps_per_game', 'bonus']].sort_values(by ='real_bps_per_game', ascending = False).head(n=15)","56951639":"fwds['real_bps'] = fwds['bps'] - fwds['goals_scored']*bps['fwds_score'] - fwds['assists']*fwds['assists']\nfwds['real_bps_per_game'] = fwds['real_bps']\/fwds['games_played']\nfwds[['web_name','real_bps_per_game', 'bonus']].sort_values(by ='real_bps_per_game', ascending = False).head(n=15)","486be569":"* The above graph shows how goal keepers of different value have performed according to points per game.\n* Size of the bubble is the amount of saves per game by the goalkeeper.\n* Green color means the GK has more saves per game than the average, Red otherwise\n* Insight - Lower ranked team GKs are in green color since they face more shots and hence more chances to save","7ca38a2b":"**Real BPS**\n* Subtract bps points for actions that are already accounted in total points.\n* This will give an idea about what players are true 'bps magnets' and don't have just the inflated bps due to scoring goals or saving penalties."}}