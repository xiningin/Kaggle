{"cell_type":{"10d14d15":"code","1a26cf21":"code","b4060107":"code","ff70bbe0":"code","51035de6":"code","9ddc6346":"code","5d3230ce":"code","9bc7f67d":"code","081d4cd3":"code","7a944d50":"code","b5eb623f":"code","ea4874e4":"code","d75a355d":"code","def62b2b":"code","6841154b":"code","cce7c68b":"code","fe4e2545":"code","ac306232":"code","ef0e8c7d":"code","bfe0558a":"code","ec311e69":"code","15bdf2cc":"code","8af17b66":"code","e62d224c":"code","46508ab4":"code","f2aafd85":"code","00547469":"code","403141b1":"code","cd6065b4":"code","c2cde04b":"code","0c01dba2":"code","295a4125":"code","85c6a3c3":"code","34bf9309":"code","6312b8de":"code","7f5ba5dd":"code","98cd73ea":"code","a369368f":"code","54f30dec":"code","7b80d75d":"code","d6761100":"code","b5b809f5":"markdown","cd2f55e0":"markdown","e25f2d82":"markdown","e126db19":"markdown","f9a8ac25":"markdown","985534b0":"markdown","cd99ee0d":"markdown","9007cd06":"markdown","476938e4":"markdown","6ac58773":"markdown","e1e3ede9":"markdown","f94b19d9":"markdown","6bc32053":"markdown","7d09004c":"markdown","535f41b9":"markdown","ec256f03":"markdown","09ed4cfd":"markdown","2aaf09a1":"markdown","4099f276":"markdown","9a121f7c":"markdown","7ab1711a":"markdown","ee5e90ca":"markdown","f0d59ea7":"markdown","d48d6c0c":"markdown","5d2fdc46":"markdown","5b891b9c":"markdown","4a3100b3":"markdown","499d6c85":"markdown","b3333352":"markdown","1cbbb70f":"markdown","946bc10f":"markdown","8deb3ec5":"markdown","2937cb05":"markdown","3b663809":"markdown","626a5f1c":"markdown","cbe955eb":"markdown","dd6a8e7f":"markdown"},"source":{"10d14d15":"import pandas as pd\nfrom pandas import DataFrame\n\nfrom datetime import datetime\n\nimport timeit\n\nimport random\n\nimport numpy as np\nfrom numpy import array\n\nimport matplotlib.pyplot as plt\n\nimport scipy as scipy\nfrom scipy import optimize\nfrom scipy.optimize import curve_fit\n\nimport seaborn as sns\n\n\nimport folium\nfrom folium.plugins import HeatMap\nfrom folium import plugins\n\nimport requests","1a26cf21":"# altera\u00e7\u00e3o da formata\u00e7\u00e3o github WHO em 28\/03\/2020\n\n#df_confirmados = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_19-covid-Confirmed.csv')\ndf_confirmados = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv')\n#df_mortes = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_19-covid-Deaths.csv')\ndf_mortes = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv')\n#df_recuperados = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_19-covid-Recovered.csv')\ndf_recuperados = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_recovered_global.csv')","b4060107":"df_confirmados.dtypes","ff70bbe0":"display(df_confirmados)","51035de6":"datetime_object = datetime.strptime(df_confirmados.columns[4], '%m\/%d\/%y')\ndatetime_object.strftime(\"%d %B %Y\")\ndisplay(datetime_object)\n\n\n# https:\/\/www.unfpa.org\/data\/world-population-dashboard\n# popula\u00e7\u00e3o mundial de 7.715 bilh\u00f5es de habitantes\npop_mundial = 7715000000\n\ncasos_confirmados_mundo = df_confirmados.iloc[:,-1].sum()\nmortes_mundo = df_mortes.iloc[:,-1].sum()\nrecuperados = df_recuperados.iloc[:,-1].sum()\n\n# https:\/\/stackoverflow.com\/questions\/5997987\/is-there-an-operator-to-calculate-percentage-in-python\ndef perc(part, whole):\n  return \"(\" + str(100 * float(part)\/float(whole)) + \"%)\"\n\nprint(\"Total de casos confirmados no mundo: \", casos_confirmados_mundo, perc(casos_confirmados_mundo,pop_mundial))\nprint(\"Total mortes no mundo: \", mortes_mundo, perc(mortes_mundo,pop_mundial))\nprint(\"Total recuperados no mundo: \", recuperados, perc(recuperados,pop_mundial))","9ddc6346":"df_brasil_io = pd.read_csv('https:\/\/brasil.io\/dataset\/covid19\/caso\/?is_last=True&place_type=city&format=csv')\ndf_brasil_io.dropna()","5d3230ce":"df_brasil_io_estados = df_brasil_io[['state', 'confirmed', 'deaths']].groupby(df_brasil_io['state'])\ndf_brasil_io_estados_total = df_brasil_io_estados.sum().reset_index()\n\n# https:\/\/servicodados.ibge.gov.br\/api\/docs\/malhas?versao=2\nmalhas_brasil = requests.get('https:\/\/servicodados.ibge.gov.br\/api\/v2\/malhas\/?resolucao=2&formato=application\/vnd.geo+json').json()\n\n# https:\/\/servicodados.ibge.gov.br\/api\/docs\/localidades\nids_estados = requests.get('https:\/\/servicodados.ibge.gov.br\/api\/v1\/localidades\/estados').json()\n\nmalha_id = []\nestados_id = []\ncodigos_estados = []\ncasos_estado = []\n\nfor feature in malhas_brasil['features']:\n    malha_id.append( str(feature['properties']['codarea']) )\n    \nfor state in ids_estados:\n    estados_id.append( str(state['id']) )\n    codigos_estados.append(state['sigla'])\n    \n# troca do nome de sigla para state, para merge com brasil.io\nestados = pd.DataFrame( {'id': estados_id, 'state': codigos_estados} )\n\nestados.set_index('id', inplace=True)\nestados.sort_values(by=['state'])\n\nfor feature in malhas_brasil['features']:\n    \n    coordenadas = feature['properties']['centroide']\n    latitude = coordenadas[1]\n    longitude = coordenadas[0]\n    \n    cod = str(feature['properties']['codarea'])\n    \n    estados.loc[cod,'lat'] = latitude\n    estados.loc[cod,'lng'] = longitude\n    \nestados.reset_index(inplace=True)\n\ndf_estados = pd.merge(left=df_brasil_io_estados_total, right=estados, left_on='state', right_on='state')\n#df_estados\n\ndf_estados.plot(kind='bar',x='state',y='confirmed', label='Quantidade de casos', figsize=(10, 7), colormap='Paired', title='Coronav\u00edrus por estado')\nplt.show()\n","9bc7f67d":"brasil = folium.Map(\n    location=[-16.1237611, -59.9219642],\n    zoom_start=4\n)\n\npontos = df_estados[['lat', 'lng', 'confirmed']].dropna().values\npontosArrays = np.split(pontos, len(pontos))\n\nconfirmados = df_estados['confirmed'].tolist()\n\nconfirmados = [np.log(x) for x in confirmados][:27]\n\nfor pontos, radius in zip(pontosArrays, confirmados):\n    plugins.HeatMap(pontos,radius=radius, gradient={.4: 'red', .65: 'red', 1: 'red'}).add_to(brasil)\n    \nbrasil","081d4cd3":"df_brasil_io_estados_populacao = df_brasil_io\ndf_brasil_io_estados_populacao.plot(kind='scatter',x='confirmed', y='deaths', label='Correla\u00e7\u00e3o Confirmados x Mortes', figsize=(10, 7), colormap='Paired', title='Dispers\u00e3o Casos Confirmados x Mortes')","7a944d50":"# df_brasil_io_estados_populacao_amazonas = df_brasil_io.loc[df_brasil_io['state'] == 'AM']\n# df_brasil_io_estados_populacao_amazonas.plot(kind='scatter',x='confirmed', y='deaths', label='Correla\u00e7\u00e3o Confirmados Mortes AM', figsize=(10, 7), colormap='Paired', title='Dispers\u00e3o Casos Confirmados x Mortes Amazonas')\n","b5eb623f":"display(df_confirmados.head(5))\n\ndf_confirmados_mundo = df_confirmados.sort_values(by = df_confirmados.columns[-1], ascending = False)\ncolunas = list(df_confirmados_mundo.columns[1:2]) + list(df_confirmados_mundo.columns[-1:])\ndf_confirmados_mundo = df_confirmados_mundo[colunas]\ndf_confirmados_mundo.columns.values[-1] = \"Casos confirmados\"\ndf_confirmados_mundo.reset_index()\ndf_confirmados_mundo = df_confirmados_mundo.head(30)\ndf_confirmados_mundo.plot(kind='bar',x='Country\/Region',y='Casos confirmados', figsize=(10, 7), colormap='Paired', title='Paises com mais Casos Confirmados')","ea4874e4":"df_confirmados_mundo_mapa = df_confirmados.sort_values(by = df_confirmados.columns[-1], ascending = False)\ncolunas =  list(df_confirmados_mundo_mapa.columns[2:3]) + list(df_confirmados_mundo_mapa.columns[3:4]) + list(df_confirmados_mundo_mapa.columns[-1:])\ndf_confirmados_mundo_mapa = df_confirmados_mundo_mapa[colunas]\ndf_confirmados_mundo_mapa.columns.values[-1] = \"Casos confirmados\"\ndf_confirmados_mundo_mapa.columns.values[-2] = \"Long\"\ndf_confirmados_mundo_mapa.columns.values[-3] = \"Lat\"\ndf_confirmados_mundo_mapa.reset_index()\n\n\nmundo = folium.Map(\n    location=[7.340773, -1.060596],    # Coordenadas retiradas do Google Maps\n    zoom_start=2\n)\n\n    \npontos = df_confirmados_mundo_mapa[['Lat', 'Long', 'Casos confirmados']].dropna().values\npontosArrays = np.split(pontos, len(pontos))\n\nconfirmados = df_confirmados_mundo_mapa['Casos confirmados'].tolist()\n\n# foi utilizado o logaritmo, pois EUA esta muito acima no momento\nconfirmados = [np.log(x) for x in confirmados][:100]\n\nfor ponto, radius in zip(pontosArrays, confirmados):\n    plugins.HeatMap(ponto,radius=radius, gradient={.4: 'red', .65: 'red', 1: 'red'}).add_to(mundo)\n    \nmundo\n","d75a355d":"display(df_mortes.head(5))\n\n\ndf_mortes_mundo = df_mortes.sort_values(by = df_mortes.columns[-1], ascending = False)\ncolunas = list(df_mortes_mundo.columns[1:2]) + list(df_mortes_mundo.columns[-1:])\ndf_mortes_mundo = df_mortes_mundo[colunas]\ndf_mortes_mundo.columns.values[-1] = \"Mortes\"\ndf_mortes_mundo.reset_index()\ndf_mortes_mundo = df_mortes_mundo.head(30)\ndf_mortes_mundo.plot(kind='bar',x='Country\/Region',y='Mortes', figsize=(10, 7), colormap='Paired', title='Paises com mais Mortes')","def62b2b":"display(df_recuperados.head(5))\n\ndf_recuperados_mundo = df_recuperados.sort_values(by = df_recuperados.columns[-1], ascending = False)\ncolunas = list(df_recuperados_mundo.columns[1:2]) + list(df_recuperados_mundo.columns[-1:])\ndf_recuperados_mundo = df_recuperados_mundo[colunas]\ndf_recuperados_mundo.columns.values[-1] = \"Recuperados\"\ndf_recuperados_mundo.reset_index()\ndf_recuperados_mundo = df_recuperados_mundo.head(30)\ndf_recuperados_mundo.plot(kind='bar',x='Country\/Region',y='Recuperados', figsize=(10, 7), colormap='Paired', title='Paises com mais Casos Recuperados')","6841154b":"df_confirmados_total = df_confirmados.groupby([\"Country\/Region\"]).sum().drop(['Lat','Long'],axis =1).iloc[:,-1]\ndf_mortes_total = df_mortes.groupby([\"Country\/Region\"]).sum().drop(['Lat','Long'],axis =1).iloc[:,-1]\ndf_recuperados_total = df_recuperados.groupby([\"Country\/Region\"]).sum().drop(['Lat','Long'],axis =1).iloc[:,-1]","cce7c68b":"#print(df_confirmados_total)\n#print(df_mortes_total)\n#print(df_recuperados_total)","fe4e2545":"def obter_info_pais(pais, df_confirmados, df_mortes, df_recuperados):\n    \n    #for pais in pais:\n    casos_confirmados = df_confirmados.set_index('Country\/Region')\n    casos_confirmados_grafico = casos_confirmados.loc[pais].drop(['Province\/State','Lat','Long'])\n    casos_confirmados_total = casos_confirmados_grafico[-1]\n    #print(casos_confirmados_grafico[:-1][-1])\n    #print(len(casos_confirmados_grafico))\n    \n    casos_mortes = df_mortes.set_index('Country\/Region')\n    casos_mortes_grafico = casos_mortes.loc[pais].drop(['Province\/State','Lat','Long'])\n    casos_mortes_total = casos_mortes_grafico[-1]\n\n    \n    casos_recuperados = df_recuperados.set_index('Country\/Region')\n    casos_recuperados_grafico = casos_recuperados.loc[pais].drop(['Province\/State','Lat','Long'])\n    casos_recuperados_total = casos_recuperados_grafico[-1]\n\n    letalidade_pais_atual = (casos_mortes_total * 100) \/ casos_confirmados_total\n\n    \n    dias = len(casos_confirmados_grafico)\n    letalidade_pais_grafico = []\n    i = 0\n    while i < dias:\n        i = i + 1\n        letalidade_pais_dia = (casos_mortes_grafico[:i][-1] * 100) \/ casos_confirmados_grafico[:i][-1]\n        #print(casos_confirmados_grafico[:i][-1])\n        letalidade_pais_grafico.append(letalidade_pais_dia)  \n\n        \n    #print(letalidade_pais_grafico)\n    return casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico;\n","ac306232":"casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico = obter_info_pais('Brazil', df_confirmados, df_mortes, df_recuperados)","ef0e8c7d":"# Dados j\u00e1 recuperados para o Brasil:\n# casos_confirmados_grafico\n# casos_confirmados_total\n# casos_mortes_grafico\n# casos_mortes_total\n# casos_recuperados_grafico\n# casos_recuperados_total\n# letalidade_pais_atual\n# letalidade_pais_grafico\n\n\nplt.figure(figsize= (10,7))\nplt.title('Coronavirus Brasil')\nplt.xlabel('Dias')\n#plt.xticks(range(0, 100, 10), fontsize=10, rotation=20)  \nplt.xticks(range(0, 100, 10), fontsize=10)  \nplt.ylabel('Numeros absolutos')\n\nplt.plot(casos_confirmados_grafico, label = 'Confirmados')\nplt.plot(casos_mortes_grafico, label = 'Mortes')\nplt.plot(casos_recuperados_grafico, label = 'Recuperados')\n\n#display(casos_confirmados_grafico)\n\n\nplt.legend()","bfe0558a":"# Dados j\u00e1 recuperados para o Brasil:\n# casos_confirmados_grafico\n# casos_confirmados_total\n# casos_mortes_grafico\n# casos_mortes_total\n# casos_recuperados_grafico\n# casos_recuperados_total\n# letalidade_pais_atual\n# letalidade_pais_grafico\n\nplt.figure(figsize= (10,7))\n\ndias = []\ncasos_diarios = []\nmortes_diarios = []\nrecuperados_diarios = []\n\ni = 0\nwhile i < len(casos_confirmados_grafico):\n    i = i + 1\n    casos_diarios.append(casos_confirmados_grafico[:i+1][-1] - casos_confirmados_grafico[:i][-1])\n    mortes_diarios.append(casos_mortes_grafico[:i+1][-1] - casos_mortes_grafico[:i][-1])\n    recuperados_diarios.append(casos_recuperados_grafico[:i+1][-1] - casos_recuperados_grafico[:i][-1])\n    dias.append(i)\n\n\nplt.title('Novos casos confirmados e mortes por dia Coronav\u00edrus Brasil')\nplt.xlabel('Dias')\nplt.ylabel('Quantidade')\n#plt.yscale('log')\n\nplt.bar(dias,casos_diarios, label = 'Novos casos confirmados por dia')\nplt.bar(dias,mortes_diarios, label = 'Mortes por dia')\n\nplt.legend()","ec311e69":"plt.figure(figsize= (10,7))\nplt.title('Evolucao do coronavirus pa\u00edses - Casos confirmados')\nplt.xlabel('Dias')\nplt.xticks(range(0, 100, 10), fontsize=10)  \nplt.ylabel('Numeros absolutos')\n\npaises = ['Brazil', 'Italy', 'Spain', 'Japan', 'Korea, South', 'US']\n\nfor pais in paises:\n    casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico = obter_info_pais(pais, df_confirmados, df_mortes, df_recuperados)\n    plt.plot(casos_confirmados_grafico, label = 'Confirmados ' + pais)\n    \nplt.legend()","15bdf2cc":"plt.figure(figsize= (10,7))\nplt.title('Evolucao do coronavirus pa\u00edses - Mortes')\nplt.xlabel('Dias')\nplt.xticks(range(0, 100, 10), fontsize=10)  \nplt.ylabel('Numeros absolutos')\n\npaises = ['Brazil', 'Italy', 'Spain', 'Japan', 'Korea, South', 'US']\n\nfor pais in paises:\n    casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico = obter_info_pais(pais, df_confirmados, df_mortes, df_recuperados)\n    plt.plot(casos_mortes_grafico, label = 'Mortes ' + pais)\n    \nplt.legend()","8af17b66":"plt.figure(figsize= (10,7))\nplt.title('Evolucao do coronavirus pa\u00edses - Recuperados')\nplt.xlabel('Dias')\nplt.xticks(range(0, 100, 10), fontsize=10)  \nplt.ylabel('Numeros absolutos')\n\npaises = ['Brazil', 'Italy', 'Spain', 'Japan', 'Korea, South', 'US']\n\nfor pais in paises:\n    casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico = obter_info_pais(pais, df_confirmados, df_mortes, df_recuperados)\n    plt.plot(casos_recuperados_grafico, label = 'Recuperados ' + pais)\n\n    \nplt.legend()","e62d224c":"casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico = obter_info_pais('Brazil', df_confirmados, df_mortes, df_recuperados)","46508ab4":"# Dados j\u00e1 recuperados para o Brasil:\n# casos_confirmados_grafico\n# casos_confirmados_total\n# casos_mortes_grafico\n# casos_mortes_total\n# casos_recuperados_grafico\n# casos_recuperados_total\n# letalidade_pais_atual\n# letalidade_pais_grafico\n\n\nplt.figure(figsize= (10,7))\nplt.title('Taxa de letalidade no Brasil: ')\nplt.xlabel('Dias')\nplt.xticks(range(0, 100, 10), fontsize=10)  \nplt.ylabel('Letalidade %')\n\nplt.plot(letalidade_pais_grafico, label = 'Letalidade %')\nplt.legend()\n","f2aafd85":"plt.figure(figsize= (10,7))\nplt.title('Letalidade Coronav\u00edrus Pa\u00edses')\nplt.xlabel('Dias')\nplt.xticks(range(0, 100, 10), fontsize=10, rotation=20)  \nplt.ylabel('Letalidade %')\n\npaises = ['Brazil', 'Italy', 'Spain', 'Japan', 'Korea, South', 'US']\n\nfor pais in paises:\n    casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico = obter_info_pais(pais, df_confirmados, df_mortes, df_recuperados)\n    plt.plot(letalidade_pais_grafico, label = 'Letalidade % ' + pais)\n\n    \nplt.legend()","00547469":"df_confirmados_brasil = df_confirmados.set_index('Country\/Region')\ndf_confirmados_brasil_total = df_confirmados_brasil.loc[\"Brazil\"].drop(['Province\/State','Lat','Long'])\n\n\ndf_confirmados_coreiadosul = df_confirmados.set_index('Country\/Region')\ndf_confirmados_coreiadosul_total = df_confirmados_coreiadosul.loc[\"Korea, South\"].drop(['Province\/State','Lat','Long'])\n\ndf_confirmados_us = df_confirmados.set_index('Country\/Region')\ndf_confirmados_us_total = df_confirmados_us.loc[\"US\"].drop(['Province\/State','Lat','Long'])\n\ndf_confirmados_argentina = df_confirmados.set_index('Country\/Region')\ndf_confirmados_argentina_total = df_confirmados_argentina.loc[\"Argentina\"].drop(['Province\/State','Lat','Long'])\n\ndf_confirmados_paraguai = df_confirmados.set_index('Country\/Region')\ndf_confirmados_paraguai_total = df_confirmados_paraguai.loc[\"Paraguay\"].drop(['Province\/State','Lat','Long'])\n\nplt.figure(figsize= (10,7))\nplt.title('Evolucao por paises, escala logartimica')\nplt.xlabel('Dias')\nplt.xticks(range(0, 100, 7), fontsize=10, rotation=90)  \nplt.ylabel('Casos (escala logar\u00edtimica)')\nplt.yscale('log')\n\nplt.plot(df_confirmados_coreiadosul_total, label = 'Cor\u00e9ia do Sul')\nplt.plot(df_confirmados_us_total, label = 'US')\nplt.plot(df_confirmados_argentina_total, label = 'Argentina')\nplt.plot(df_confirmados_paraguai_total, label = 'Paraguai')\nplt.plot(df_confirmados_brasil_total, label = 'Brasil')\n\nplt.grid(True)\nplt.legend()","403141b1":"casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico = obter_info_pais('Brazil', df_confirmados, df_mortes, df_recuperados)","cd6065b4":"# Dados j\u00e1 recuperados para o Brasil:\n# casos_confirmados_grafico\n# casos_confirmados_total\n# casos_mortes_grafico\n# casos_mortes_total\n# casos_recuperados_grafico\n# casos_recuperados_total\n# letalidade_pais_atual\n# letalidade_pais_grafico\n\n\n# novas ocorr\u00eancias por dia\ndf_confirmados_brasil = df_confirmados.set_index('Country\/Region')\ndf_confirmados_brasil_total = df_confirmados_brasil.loc[\"Brazil\"].drop(['Province\/State','Lat','Long'])\ndf_confirmados_brasil_total_x = df_confirmados_brasil_total.values.tolist()\n# descomentar a linha abaixo para desconsiderar dias iniciais sem ocorr\u00eancias (left tail)\n# df_confirmados_brasil_total_x = list(filter(lambda num: num != 0, df_confirmados_brasil_total_x))\ndf_confirmados_brasil_total_x = array(df_confirmados_brasil_total_x)\ndf_confirmados_brasil_total_x.reshape(-1,1)\n\n\n# n\u00famero total de observa\u00e7\u00f5es (em dias)\ndf_confirmados_brasil_total_y = list(range(len(df_confirmados_brasil_total_x)))\ndf_confirmados_brasil_total_y = array(df_confirmados_brasil_total_y)\ndf_confirmados_brasil_total_y.reshape(-1,1)\n\n\n# https:\/\/stackoverflow.com\/questions\/10857948\/use-of-curve-fit-to-fit-data\ndef func(x, a, b, c):\n    return a*x**b + c\n\n\np0 = np.array([1,1,1])\ncoeffs, matcov = curve_fit(func, df_confirmados_brasil_total_y, df_confirmados_brasil_total_x, p0, maxfev=5000)\n\nyaj = func(df_confirmados_brasil_total_y, coeffs[0], coeffs[1], coeffs[2])\n\n\nplt.figure(figsize= (10,7))\nplt.plot(df_confirmados_brasil_total_x, 'x', label='Dados oficiais')\nplt.plot(yaj, 'r-', label='Proje\u00e7\u00e3o')\n\n\nplt.title('Proje\u00e7\u00e3o da evolu\u00e7\u00e3o')\nplt.xlabel('Dias')\nplt.ylabel('N\u00famero de casos')\n\n\nplt.legend()\nplt.show()\n\n\nprint(\"Fun\u00e7\u00e3o ajustada de acordo com os dados obtidos para o Brasil: \")\nprint(\"Total de casos confirmados = \", coeffs[0], \" * (dia) ^ \", coeffs[1], \" + \", coeffs[2])\n\n# exemplo de calculo para o dia 32:\n#print(func(32, coeffs[0], coeffs[1], coeffs[2]))","c2cde04b":"# quantidade de casos estimados por dia\n# display(df_confirmados_brasil_total_x)\n# novos_casos_por_dia = func(dia, coeffs[0], coeffs[1], coeffs[2])\n\n# 10 dias a partir do ultimo dia analisado\n# display(len(df_confirmados_brasil_total_y))\ndias_subsequentes = [len(df_confirmados_brasil_total_y) + x for x in range(10)]\n\n# funcao que calcula novos casos para dia\n# argumentos: dias_a_projetar, funcao_projecao, parametros a, b, c encontrados utilizando dados anteriores\ndef projecao(dias_a_projetar, funcao_projecao, a, b, c):\n    casos_estimados_por_dia = []\n    for i in dias_a_projetar:\n        casos_estimados_por_dia.append(funcao_projecao(i, a, b, c))        \n    return casos_estimados_por_dia\n\n\nfig = plt.figure(figsize= (10,7))\n\nprojetados = projecao(dias_subsequentes, func, coeffs[0], coeffs[1], coeffs[2])\n\nprojetados_df = []\nprojetados_tabela = [ '%.0f' % elem for elem in df_confirmados_brasil_total_x ]\nprojetados_df.append(projetados_tabela)\n\ntabela_projetados = pd.DataFrame(projetados_df)\ntabela_projetados.index = [\"Projetados\"]\ndatelist = pd.date_range(datetime_object.strftime('%d\/%m\/%Y'), periods=len(projetados_tabela)).tolist()\ntabela_projetados.columns = datelist\ndisplay(tabela_projetados)\n\ncmd = sns.light_palette('green', as_cmap=True)\n\ns = tabela_projetados.style.background_gradient(cmap=cmd, low=0, high=1, axis=0)\ns\n\nprojecao_df = []\nprojecao_tabela = [ '%.0f' % elem for elem in projetados ]\nprojecao_df.append(projecao_tabela)\n\ntabela_projecao = pd.DataFrame(projecao_df)\ntabela_projecao.index = [\"Proje\u00e7\u00e3o 10 dias\"]\ndatelist = pd.date_range(datetime.today().strftime('%m\/%d\/%Y'), periods=10).tolist()\ntabela_projecao.columns = datelist\ndisplay(tabela_projecao)\n\ncmd = sns.light_palette('green', as_cmap=True)\n\ns = tabela_projecao.style.background_gradient(cmap=cmd, low=0, high=1, axis=0)\ns\n\n\nplt.title('Casos confirmados e proje\u00e7\u00e3o para o Brasil')\nplt.xlabel('Dias')\nplt.xticks(range(0, 100, 10), fontsize=10)  \nplt.ylabel('Casos')\n\nplt.plot(df_confirmados_brasil_total_x, label = 'Casos confirmados')\nplt.plot(dias_subsequentes, projetados, label = 'Casos projetados')\nplt.legend()","0c01dba2":"def obter_projecao_pais(pais, df_confirmados, df_mortes, df_recuperados):\n\n\n    # novas ocorr\u00eancias por dia\n    df_confirmados_pais = df_confirmados.set_index('Country\/Region')\n    df_confirmados_pais_total = df_confirmados_pais.loc[pais].drop(['Province\/State','Lat','Long'])\n    df_confirmados_pais_total_x = df_confirmados_pais_total.values.tolist()\n    # descomentar a linha abaixo para desconsiderar dias iniciais sem ocorr\u00eancias (left tail)\n    #df_confirmados_pais_total_x = list(filter(lambda num: num != 0, df_confirmados_pais_total_x))\n    df_confirmados_pais_total_x = array(df_confirmados_pais_total_x)\n    df_confirmados_pais_total_x.reshape(-1,1)\n    \n    # mortes\n    df_mortes_pais = df_mortes.set_index('Country\/Region')\n    df_mortes_pais_total = df_mortes_pais.loc[pais].drop(['Province\/State','Lat','Long'])\n    df_mortes_pais_total_x = df_mortes_pais_total.values.tolist()\n    # descomentar a linha abaixo para desconsiderar dias iniciais sem ocorr\u00eancias (left tail)\n    #df_mortes_pais_total_x = list(filter(lambda num: num != 0, df_mortes_pais_total_x))\n    df_mortes_pais_total_x = array(df_mortes_pais_total_x)\n    df_mortes_pais_total_x.reshape(-1,1)\n    \n    \n\n\n    # n\u00famero total de observa\u00e7\u00f5es (em dias)\n    df_confirmados_pais_total_y = list(range(len(df_confirmados_pais_total_x)))\n    df_confirmados_pais_total_y = array(df_confirmados_pais_total_y)\n    df_confirmados_pais_total_y.reshape(-1,1)\n\n    \n    # n\u00famero total de observa\u00e7\u00f5es (em dias)\n    df_mortes_pais_total_y = list(range(len(df_mortes_pais_total_x)))\n    df_mortes_pais_total_y = array(df_mortes_pais_total_y)\n    df_mortes_pais_total_y.reshape(-1,1)\n    \n    \n    # https:\/\/stackoverflow.com\/questions\/10857948\/use-of-curve-fit-to-fit-data\n    def func(x, a, b, c):\n        return a*x**b + c\n    \n    #def func(x, a, b, c):\n    #    result = a*(1-np.exp(-b*x**c))\n    #    return result    \n    \n    p0 = np.array([1,1,1])\n    \n    # confirmados\n    coeffs, matcov = curve_fit(func, df_confirmados_pais_total_y, df_confirmados_pais_total_x, p0, maxfev=5000)\n    yaj = func(df_confirmados_pais_total_y, coeffs[0], coeffs[1], coeffs[2])\n\n    # confirmados\n    coeffs_mortes, matcov_mortes = curve_fit(func, df_mortes_pais_total_y, df_mortes_pais_total_x, p0, maxfev=5000)\n    yaj_mortes = func(df_mortes_pais_total_y, coeffs_mortes[0], coeffs_mortes[1], coeffs_mortes[2])\n\n    \n    # 10 dias a partir do ultimo dia analisado\n    # display(len(df_confirmados_brasil_total_y))\n    dias_subsequentes = [len(df_confirmados_pais_total_y) + x for x in range(10)]\n\n    def projecao(dias_a_projetar, funcao_projecao, a, b, c):\n        casos_estimados_por_dia = []\n        for i in dias_a_projetar:\n            casos_estimados_por_dia.append(funcao_projecao(i, a, b, c))        \n        return casos_estimados_por_dia\n    \n    projetados_confirmados = projecao(dias_subsequentes, func, coeffs[0], coeffs[1], coeffs[2])\n    projetados_mortes = projecao(dias_subsequentes, func, coeffs_mortes[0], coeffs_mortes[1], coeffs_mortes[2])\n\n    \n    \n    # retorno:\n    return df_confirmados_pais_total_x, yaj, coeffs[0], coeffs[1], coeffs[2], projetados_confirmados, df_mortes_pais_total_x, yaj_mortes, coeffs_mortes[0], coeffs_mortes[1], coeffs_mortes[2], projetados_mortes, dias_subsequentes\n\n","295a4125":"#curva_confirmados, curva_confirmados_calculada, a, b, c, curva_confirmados_projetados, curva_mortes, curva_mortes_calculada, d, e, f, curva_mortes_projetados, dias_projetados = obter_projecao_pais('Italy', df_confirmados, df_mortes, df_recuperados)\n\nfig = plt.figure(figsize= (10,7))\n\nplt.title('Casos confirmados, mortes e respectivas proje\u00e7\u00f5es')\nplt.xlabel('Dias')\nplt.xticks(range(0, 100, 10), fontsize=10)  \nplt.ylabel('Casos')\n\n\npaises = ['Brazil']\n\nfor pais in paises:\n    curva_confirmados, curva_confirmados_calculada, a, b, c, curva_confirmados_projetados, curva_mortes, curva_mortes_calculada, d, e, f, curva_mortes_projetados, dias_projetados = obter_projecao_pais(pais, df_confirmados, df_mortes, df_recuperados)\n\n    plt.plot(curva_confirmados, '-', label='Casos confirmados ' + pais)\n    plt.plot(curva_confirmados_calculada, 'x', label='Curva estimada ' + pais)\n    plt.plot(dias_projetados, curva_confirmados_projetados, '^', label = 'Proje\u00e7\u00e3o confirmados ' + pais)\n\n    plt.plot(curva_mortes, '-', label='Mortes ' + pais)\n    plt.plot(curva_mortes_calculada, 'x', label='Curva estimada mortes ' + pais)\n    plt.plot(dias_projetados, curva_mortes_projetados, '^', label = 'Proje\u00e7\u00e3o mortes ' + pais)\n\n    print(\"Fun\u00e7\u00e3o casos confirmados = \", a, \" * (dia) ^ \", b, \" + \", c)\n    print(\"Fun\u00e7\u00e3o mortes            = \", d, \" * (dia) ^ \", e, \" + \", f)\n    \nplt.legend()\n    \n    \n#display(curva_mortes_projetados)    \na = []\ncurva_confirmados_projetados = [ '%.0f' % elem for elem in curva_confirmados_projetados ]\ncurva_mortes_projetados = [ '%.0f' % elem for elem in curva_mortes_projetados ]\na.append(curva_confirmados_projetados)\na.append(curva_mortes_projetados)\n\ndf = pd.DataFrame(a)\n\ndf.index = [\"Confirmados\", \"Mortes\"]\ndatelist = pd.date_range(datetime.today().strftime('%m\/%d\/%Y'), periods=10).tolist()\ndf.columns = datelist\n\n\n\ncm = sns.light_palette('green', as_cmap=True)\n\ns = df.style.background_gradient(cmap=cm, low=0, high=1, axis=0)\ns","85c6a3c3":"casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico = obter_info_pais('Germany', df_confirmados, df_mortes, df_recuperados)","34bf9309":"# Dados j\u00e1 recuperados para a Alemanha:\n# casos_confirmados_grafico\n# casos_confirmados_total\n# casos_mortes_grafico\n# casos_mortes_total\n# casos_recuperados_grafico\n# casos_recuperados_total\n# letalidade_pais_atual\n# letalidade_pais_grafico\n\n\nplt.figure(figsize= (10,7))\n\n\ndias = []\ncasos_diarios = []\nmortes_diarios = []\nrecuperados_diarios = []\n\ni = 0\nwhile i < len(casos_confirmados_grafico):\n    i = i + 1\n    casos_diarios.append(casos_confirmados_grafico[:i+1][-1] - casos_confirmados_grafico[:i][-1])\n    mortes_diarios.append(casos_mortes_grafico[:i+1][-1] - casos_mortes_grafico[:i][-1])\n    recuperados_diarios.append(casos_recuperados_grafico[:i+1][-1] - casos_recuperados_grafico[:i][-1])\n    dias.append(i)\n\n\nplt.title('Novos casos confirmados e mortes por dia Coronavirus Alemanha')\nplt.xlabel('Dias')\nplt.ylabel('Quantidade')\n\nplt.bar(dias,casos_diarios, label = 'Novos casos confirmados por dia')\nplt.bar(dias,mortes_diarios, label = 'Mortes por dia')\n\nplt.legend()","6312b8de":"# Dados j\u00e1 recuperados para a Alemanha:\n# casos_confirmados_grafico\n# casos_confirmados_total\n# casos_mortes_grafico\n# casos_mortes_total\n# casos_recuperados_grafico\n# casos_recuperados_total\n# letalidade_pais_atual\n# letalidade_pais_grafico\n\n\n# novas ocorr\u00eancias por dia\ndf_confirmados_alemanha = df_confirmados.set_index('Country\/Region')\ndf_confirmados_alemanha_total = df_confirmados_alemanha.loc[\"Germany\"].drop(['Province\/State','Lat','Long'])\ndf_confirmados_alemanha_total_x = df_confirmados_alemanha_total.values.tolist()\n# descomentar a linha abaixo de forma a desconsiderar dias inicias sem ocorr\u00eancias\n#df_confirmados_alemanha_total_x = list(filter(lambda num: num != 0, df_confirmados_alemanha_total_x))\ndf_confirmados_alemanha_total_x = array(df_confirmados_alemanha_total_x)\ndf_confirmados_alemanha_total_x.reshape(-1,1)\n\n\n# n\u00famero total de observa\u00e7\u00f5es (em dias)\ndf_confirmados_alemanha_total_y = list(range(len(df_confirmados_alemanha_total_x)))\ndf_confirmados_alemanha_total_y = array(df_confirmados_alemanha_total_y)\ndf_confirmados_alemanha_total_y.reshape(-1,1)\n\n\n# https:\/\/www.youtube.com\/watch?v=Ewp5CF5ba_w\ndef func(x, a, b, c):\n    result = a*(1-np.exp(-b*x**c))\n    return result\n\np0 = np.array([1,1,1])\ncoeffs, matcov = curve_fit(func, df_confirmados_alemanha_total_y, df_confirmados_alemanha_total_x, p0, maxfev=5000)\n\nyaj = func(df_confirmados_alemanha_total_y, coeffs[0], coeffs[1], coeffs[2])\n\n\nplt.figure(figsize= (10,7))\nplt.plot(df_confirmados_alemanha_total_x, 'x', label='Dados oficiais')\nplt.plot(yaj, 'r-', label='Projecao')\n\n\n\nplt.title('Proje\u00e7\u00e3o da evolucao Alemanha')\nplt.xlabel('Dias')\n#plt.xticks(range(0, 100, 10), fontsize=10, rotation=20)  \nplt.ylabel('N\u00famero de casos')\n\n\nplt.legend()\nplt.show()\n\n\nprint(\"Funcao ajustada de acordo com os dados obtidos para a Alemanha: \")\nprint(\"Total de casos confirmados = \", coeffs[0], \" - e * ( - \", coeffs[1], \" * dia) ^ \", coeffs[2])\n\n","7f5ba5dd":"# Dados j\u00e1 recuperados para o Brasil:\n# casos_confirmados_grafico\n# casos_confirmados_total\n# casos_mortes_grafico\n# casos_mortes_total\n# casos_recuperados_grafico\n# casos_recuperados_total\n# letalidade_pais_atual\n# letalidade_pais_grafico\n\n\nplt.figure(figsize= (10,7))\nplt.title('Coronavirus Alemanha')\nplt.xlabel('Dias')\n#plt.xticks(range(0, 100, 10), fontsize=10, rotation=20)  \nplt.xticks(range(0, 100, 10), fontsize=10)  \nplt.ylabel('Numeros absolutos')\n\nplt.plot(casos_confirmados_grafico, label = 'Confirmados')\nplt.plot(casos_mortes_grafico, label = 'Mortes')\nplt.plot(casos_recuperados_grafico, label = 'Recuperados')\n\n#display(casos_confirmados_grafico)\n\n\nplt.legend()","98cd73ea":"plt.figure(figsize= (10,7))\nplt.title('Evolucao do coronavirus - Casos confirmados Brasil x Alemanha')\nplt.xlabel('Dias')\nplt.xticks(range(0, 100, 10), fontsize=10)  \nplt.ylabel('Numeros absolutos')\n\npaises = ['Brazil', 'Germany']\n\nfor pais in paises:\n    casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico = obter_info_pais(pais, df_confirmados, df_mortes, df_recuperados)\n    plt.plot(casos_confirmados_grafico, label = 'Confirmados ' + pais)\n    \nplt.legend()","a369368f":"plt.figure(figsize= (10,7))\nplt.title('Evolucao do coronavirus - Mortes Brasil x Alemanha')\nplt.xlabel('Dias')\nplt.xticks(range(0, 100, 10), fontsize=10)  \nplt.ylabel('Numeros absolutos')\n\npaises = ['Brazil', 'Germany']\n\nfor pais in paises:\n    casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico = obter_info_pais(pais, df_confirmados, df_mortes, df_recuperados)\n    plt.plot(casos_mortes_grafico, label = 'Mortes ' + pais)\n    \nplt.legend()\n","54f30dec":"casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico = obter_info_pais('Paraguay', df_confirmados, df_mortes, df_recuperados)","7b80d75d":"# Dados j\u00e1 recuperados para a Paraguai:\n# casos_confirmados_grafico\n# casos_confirmados_total\n# casos_mortes_grafico\n# casos_mortes_total\n# casos_recuperados_grafico\n# casos_recuperados_total\n# letalidade_pais_atual\n# letalidade_pais_grafico\n\n\nplt.figure(figsize= (10,7))\n\n\ndias = []\ncasos_diarios = []\nmortes_diarios = []\nrecuperados_diarios = []\n\ni = 0\nwhile i < len(casos_confirmados_grafico):\n    i = i + 1\n    casos_diarios.append(casos_confirmados_grafico[:i+1][-1] - casos_confirmados_grafico[:i][-1])\n    mortes_diarios.append(casos_mortes_grafico[:i+1][-1] - casos_mortes_grafico[:i][-1])\n    recuperados_diarios.append(casos_recuperados_grafico[:i+1][-1] - casos_recuperados_grafico[:i][-1])\n    dias.append(i)\n\n\nplt.title('Novos casos confirmados e mortes por dia Coronavirus Paraguai')\nplt.xlabel('Dias')\nplt.ylabel('Quantidade')\n\nplt.bar(dias,casos_diarios, label = 'Novos casos confirmados por dia')\nplt.bar(dias,mortes_diarios, label = 'Mortes por dia')\n\nplt.legend()","d6761100":"plt.figure(figsize= (10,7))\nplt.title('Evolucao do coronavirus - Casos confirmados Brasil x Vietna')\nplt.xlabel('Dias')\nplt.xticks(range(0, 100, 10), fontsize=10)  \nplt.ylabel('Numeros absolutos')\n\npaises = ['Brazil', 'Vietnam']\n\nfor pais in paises:\n    casos_confirmados_grafico, casos_confirmados_total, casos_mortes_grafico, casos_mortes_total, casos_recuperados_grafico, casos_recuperados_total, letalidade_pais_atual, letalidade_pais_grafico = obter_info_pais(pais, df_confirmados, df_mortes, df_recuperados)\n    plt.plot(casos_confirmados_grafico, label = 'Confirmados ' + pais)\n    \nplt.legend()","b5b809f5":"Atualmente com a doen\u00e7a considerada sob controle, a Alemanha teve o lockdown como uma de suas iniciativas. Fechar compulsoriamente diversos estabelecimentos, em todos os setores da sociedade, se mostrou uma forma eficiente de se controlar o cont\u00e1gio.\n\nPara a redu\u00e7\u00e3o do n\u00famero de mortes, o pa\u00eds disponibilizou leitos em quantidade excedente, de forma a n\u00e3o sobrecarregar o sistema de sa\u00fade. \n\nVerifica-se que o sucesso de suas pol\u00edticas p\u00fablicas \u00e9 not\u00e1vel inclusive no gr\u00e1fico, onde se nota a proximidade de curvas de casos confirmados e casos recuperados. Pa\u00edses onde s\u00e3o realizado muitos testes, e seus pacientes recebem acompanhamento detalhado, permitem oas an\u00e1lises de seus cen\u00e1rios:","cd2f55e0":"Especificamente para o Brasil, verificamos a quantidade de casos j\u00e1 confirmados, mortes, e recuperados, plotadas em um gr\u00e1fico:","e25f2d82":"A letalidade no Brasil tem aumentado. Tal gr\u00e1fico reflete de maneira incisiva a gravidade da doen\u00e7a em nosso pa\u00eds.","e126db19":"Em rela\u00e7\u00e3o \u00e0s mortes j\u00e1 confirmadas, podemos visualizar uma lista espec\u00edfica de pa\u00edses com a fun\u00e7\u00e3o implementada:","f9a8ac25":"# **Coronav\u00edrus no Brasil - John Hopkins**","985534b0":"Inicialmente, obtemos as informa\u00e7\u00f5es dispon\u00edveis no reposit\u00f3rio disponibilizado pela Universidade Johns Hopkins:\n\nhttps:\/\/systems.jhu.edu\/research\/public-health\/ncov\/\n\nhttps:\/\/github.com\/CSSEGISandData\/COVID-19","cd99ee0d":"Tem sido proposta a quarentena como forma de auxiliar no avan\u00e7o da doen\u00e7a. Tal medida permitiria o atendimento dos casos j\u00e1 confirmados, respeitando-se a capacidade de atendimento do sistema de sa\u00fade.\n\nNo atual momento, espera-se encontrar o chamado ponto de inflex\u00e3o da curva, o qual ir\u00e1 refletir a diminui\u00e7\u00e3o, ou relativa diminui\u00e7\u00e3o, da contamina\u00e7\u00e3o comunit\u00e1ria. Tal ponto tem sido chamado de ponto de \"achatamento\" da curva.\n\nA id\u00e9ia \u00e9 que esse ponto de inflex\u00e3o poder\u00e1 dar in\u00edcio ao chamado \"plat\u00f4\", caracterizando o in\u00edcio ou a estabiliza\u00e7\u00e3o de novos casos.\n\nAnalisando outros pa\u00edses, os quais conseguiram melhores resultados com suas pol\u00edticas p\u00fablicas, podemos estudar a\u00e7\u00f5es que permitiriam auxiliar o Brasil. \n\nVamos tentar compreender a curva da Alemanha, a qual aparentemente deixou de ser exponencial, e indica a proximidade de um ponto de inflex\u00e3o:","9007cd06":"Analisando a fun\u00e7\u00e3o obtida, podemos estimar a quantidade de casos para os pr\u00f3ximos 10 dias:","476938e4":"Definimos uma fun\u00e7\u00e3o para retornar as informa\u00e7\u00f5es que julgamos pertinentes, passamdo como par\u00e2metro um determinado pa\u00eds:","6ac58773":"A continuidade na acelera\u00e7\u00e3o das curvas, considerando-se intervalos de tempo semelhantes, pode ser interpretado como o atraso na consecu\u00e7\u00e3o de pol\u00edticas p\u00fablicas a contento.","e1e3ede9":"Foram utilizadas tamb\u00e9m informa\u00e7\u00f5es disponibilizadas pelo site Brasil.io:\n\nhttps:\/\/brasil.io\/dataset\/covid19\/caso\/","f94b19d9":"**BRASIL**","6bc32053":"Taxa de letalidade ou coeficiente de letalidade \u00e9 a propor\u00e7\u00e3o entre o n\u00famero de mortes por uma doen\u00e7a e o n\u00famero total de doentes que sofrem dessa doen\u00e7a, ao longo de um determinado per\u00edodo de tempo:","7d09004c":"\u00c9 necess\u00e1rio acompanhar a evolu\u00e7\u00e3o da doen\u00e7a considerando a ocorr\u00eancia de novos casos di\u00e1rios e suas mortes, e n\u00e3o apenas sobre o seu total acumulado:","535f41b9":"Recuperados:","ec256f03":"Recuperamos as informa\u00e7\u00f5es especificamente para o Brasil:","09ed4cfd":"Pa\u00eds subdesenvolvido, e com quase 95 milh\u00f5es de habitantes, o Vietna tem menos de 500 casos at\u00e9 o momento:","2aaf09a1":"Percebe-se o crescimento do n\u00famero de casos di\u00e1rios. O n\u00famero de mortes por dia tamb\u00e9m est\u00e1 em ascen\u00e7\u00e3o.","4099f276":"Nota-se o crescimento ininterrupto nos Estados Unidos, o qual tornou-se o epicentro doen\u00e7a.","9a121f7c":"Mortes:","7ab1711a":"Percebe-se que o estado com maiores dificuldades \u00e9 S\u00e3o Paulo, o qual possui a maior concentra\u00e7\u00e3o da popula\u00e7\u00e3o.","ee5e90ca":"Podemos verificar a correla\u00e7\u00e3o entre o n\u00famero de casos confirmados e o n\u00famero de mortes:","f0d59ea7":"Percebe-se que na Cor\u00e9ia do Sul, em torno do dia 11\/03\/2020, houve uma estabiliza\u00e7\u00e3o na acelera\u00e7\u00e3o de sua curva de casos confirmados. Ainda, a interven\u00e7\u00e3o r\u00e1pida no in\u00edcio da doen\u00e7a se mostrou determinante para seu controle. O mesmo se verifica em pa\u00edses como Argentina e Paraguai, onde a quarentena e o lockdown foi institu\u00eddo com rigor (escala logar\u00edtmica).\n\nAinda sobre a Cor\u00e9ia do Sul, foram in\u00fameras as iniciativas de seu governo:\n\n - testes\/diagn\u00f3sticos massivos;\n - monitora\u00e7\u00e3o dos casos confirmados, atrav\u00e9s de tecnologias diversas (apps de monitoramento por gps, avisos sobre disponibilidades de vagas em hospitais, conscientiza\u00e7\u00e3o da popula\u00e7\u00e3o);\n - conhecimento pr\u00e9vio sobre epidemias (Middle East respiratory syndrome (MERS) in 2015).\n \nAt\u00e9 o presente momento, e considerando os resultados obtidos, \u00e9 relevante o conhecimento disponibilizado por pa\u00edses que t\u00eam conseguido conter o avan\u00e7o da doen\u00e7a.\n\nPa\u00edses como Estados Unidos e Brasil notadamente v\u00eam apresentando dificuldades em suas pol\u00edticas p\u00fablicas, sendo necess\u00e1rio considerar novas abordagens.","d48d6c0c":"Comparando-se Brasil e Alemanha, pa\u00edses notadamente com realidades e abordagens distintas, \u00e9 poss\u00edvel verificar qu\u00e3o diferentes s\u00e3o suas politicas p\u00fablicas:","5d2fdc46":"Percebe-se pelo gr\u00e1fico franco decl\u00ednio do n\u00famero de novos casos di\u00e1rios, reflexo de a\u00e7\u00f5es diversas. \u00c9 necess\u00e1rio, para a Alemanha, utilizar-se outra curva para aproxima\u00e7\u00e3o:","5b891b9c":"O n\u00famero de casos recuperados tamb\u00e9m pode ser analisado atrav\u00e9s da fun\u00e7\u00e3o implementada:","4a3100b3":"Inicio aqui um estudo sucinto referente \u00e0 pandemia de COVID-19 Coronav\u00edrus, analisando a evolu\u00e7\u00e3o da doen\u00e7a no Brasil em rela\u00e7\u00e3o a outros pa\u00edses.\n\nTal estudo ser\u00e1 apresentado como Trabalho de Conclus\u00e3o de Curso,P\u00f3s-gradua\u00e7\u00e3o Lato Sensu em Ci\u00eancia de Dados e Big Data, oferecido pela Pontif\u00edcia Universidade Cat\u00f3lica de Minas Gerais.\n\nhttps:\/\/github.com\/fabiowakisaka\/coronavirustccpuc\n\nInformo que as informa\u00e7\u00f5es aqui dispon\u00edveis t\u00eam car\u00e1ter estritamente de aprendizado, n\u00e3o sendo recomendada sua utiliza\u00e7\u00e3o para pesquisas, suposi\u00e7\u00f5es, infer\u00eancias ou proje\u00e7\u00f5es.\n\nPara informa\u00e7\u00f5es oficiais sobre a atual situa\u00e7\u00e3o da doen\u00e7a no Brasil, visitem o site do Minist\u00e9rio da Sa\u00fade:\n\nhttps:\/\/coronavirus.saude.gov.br\/\n","499d6c85":"Vamos comparar a letalidade, percorrendo uma lista de pa\u00edses, utilizando a fun\u00e7\u00e3o definida:","b3333352":"Vamos comparar a evolu\u00e7\u00e3o da doen\u00e7a em alguns paises, utilizando a fun\u00e7\u00e3o implementada:","1cbbb70f":"Inicialmente, verificamos a quantidade de pacientes infectados por estados, em um mapa gerado com informa\u00e7\u00f5es geogr\u00e1ficas obtidas no site IBGE. \n\nhttps:\/\/servicodados.ibge.gov.br\/api\/docs\/malhas?versao=2\n\nhttps:\/\/servicodados.ibge.gov.br\/api\/docs\/localidades","946bc10f":"Algumas informa\u00e7\u00f5es importantes a serem utilizadas neste estudo s\u00e3o:\n*     Data inicial;\n*     Total de casos confirmados no mundo;\n*     Total de mortes no mundo;\n*     Total de recuperados no mundo.","8deb3ec5":"As informa\u00e7\u00f5es disponibilizadas pela Universidade John Hopkins est\u00e3o divididas em 3 grandes grupos, a saber:\n\nCasos confirmados:","2937cb05":"Verificamos que os datasets t\u00eam uma mesma estrutura. Seu tamanho tem aumentado, \u00e0 medida em que novas informa\u00e7\u00f5es s\u00e3o inseridas diariamente:","3b663809":"Pa\u00edses vizinhos ao Brasil apresentam relativa tranquilidade, fruto de intensiva quarentena, lockdown, e vigil\u00e2ncia de suas fronteiras. O Paraguai tem controlado a doen\u00e7a, com poucos casos di\u00e1rios, se comparado ao Brasil:","626a5f1c":"Podemos definir uma fun\u00e7\u00e3o geral para estimar os casos confirmados, mortes e recuperados, para um determinado pa\u00eds:","cbe955eb":"A an\u00e1lise de curvas de casos confirmados no Brasil, at\u00e9 o presente momento, sugere um crescimento acelerado, e que pode ser modelado. Vamos tentar aproximar esse crescimento atrav\u00e9s do m\u00e9todo de minimiza\u00e7\u00e3o do erro quadr\u00e1tico. Inicialmente testaremos uma fun\u00e7\u00e3o exponencial:","dd6a8e7f":"Calculamos a soma de casos confirmados, de mortes e de recuperados:"}}