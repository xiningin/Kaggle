{"cell_type":{"a65758fa":"code","0d8dadf3":"code","06415e84":"code","ac127058":"code","27c6ce57":"code","07a69461":"code","ab2fb505":"code","6db539da":"code","b662790b":"code","45317881":"code","d38f834f":"code","9cebe9b5":"code","516f1804":"code","d532cd5b":"code","efc3a7a8":"code","6e89f510":"code","79a19ba9":"code","af649595":"code","5d95dd33":"markdown","4e43eb66":"markdown","8a1d4456":"markdown","862686e9":"markdown","6be9bf52":"markdown","f6f0fe69":"markdown"},"source":{"a65758fa":"import numpy as np\nimport pandas as pd\nimport plotly.express as px\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.svm import SVC","0d8dadf3":"data = pd.read_csv('..\/input\/top50spotify2019\/top50.csv', encoding='latin-1')","06415e84":"data","ac127058":"data.info()","27c6ce57":"data = data.drop(['Unnamed: 0', 'Track.Name'], axis=1)","07a69461":"data","ab2fb505":"data['Popularity'] = pd.qcut(data['Popularity'], q=2, labels=[0, 1])","6db539da":"def onehot_encode(df, column, prefix):\n    df = df.copy()\n    dummies = pd.get_dummies(df[column], prefix=prefix)\n    df = pd.concat([df, dummies], axis=1)\n    df = df.drop(column, axis=1)\n    return df","b662790b":"data = onehot_encode(data, 'Genre', 'genre')\ndata = onehot_encode(data, 'Artist.Name', 'artist')","45317881":"data","d38f834f":"y = data.loc[:, 'Popularity']\nX = data.drop('Popularity', axis=1)","9cebe9b5":"scaler = StandardScaler()\n\nX = scaler.fit_transform(X)","516f1804":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=20)","d532cd5b":"log_model = LogisticRegression()\nknn_model = KNeighborsClassifier()\ndec_model = DecisionTreeClassifier()\nmlp_model = MLPClassifier()\nsvm_model = SVC()","efc3a7a8":"log_model.fit(X_train, y_train)\nknn_model.fit(X_train, y_train)\ndec_model.fit(X_train, y_train)\nmlp_model.fit(X_train, y_train)\nsvm_model.fit(X_train, y_train)","6e89f510":"log_acc = log_model.score(X_test, y_test)\nknn_acc = knn_model.score(X_test, y_test)\ndec_acc = dec_model.score(X_test, y_test)\nmlp_acc = mlp_model.score(X_test, y_test)\nsvm_acc = svm_model.score(X_test, y_test)","79a19ba9":"print(\"Logistic Regression Accuracy:\", log_acc)\nprint(\"K-Nearest-Neighbors Accuracy:\", knn_acc)\nprint(\"Decision Tree Accuracy:\", dec_acc)\nprint(\"Neural Network Accuracy:\", mlp_acc)\nprint(\"Support Vector Machine Accuracy:\", svm_acc)","af649595":"fig = px.bar(\n    x=[\"Logistic Regression\", \"K-Nearest-Neighbors\", \"Decision Tree\", \"Neural Network\", \"Support Vector Machine\"],\n    y=[log_acc, knn_acc, dec_acc, mlp_acc, svm_acc],\n    color=[\"Logistic Regression\", \"K-Nearest-Neighbors\", \"Decision Tree\", \"Neural Network\", \"Support Vector Machine\"],\n    labels={'x': \"Model\", 'y': \"Accuracy\"},\n    title=\"Model Accuracy Comparison\"\n)\n\nfig.show()","5d95dd33":"# Modeling and Training","4e43eb66":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/k7Joc0aKRVg","8a1d4456":"# Task for Today  \n\n***\n\n## Song Popularity Prediction  \n\nGiven *data about the top 50 Spotify songs from 2019*, let's try to predict whether a given song will be **more or less popular**.  \n  \nWe will be using five different models to make our predictions.","862686e9":"## One-Hot Encoding","6be9bf52":"# Preprocessing","f6f0fe69":"## Splitting and Scaling"}}