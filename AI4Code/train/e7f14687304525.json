{"cell_type":{"e6ac4e4b":"code","49d4cce5":"code","b35fad5f":"code","c34372c9":"code","65cbd656":"code","6fd8eb46":"code","e4be3e68":"code","44daee00":"code","48d96979":"code","fe34815c":"code","0c41687c":"code","c919b83d":"code","d12cae5a":"code","987e49cc":"code","919a08bb":"code","569d1741":"code","6f3bd45e":"code","8ad6d7ff":"code","9d9a98d2":"code","ee82e059":"code","0da0e717":"code","f0d753a3":"code","11c1a4ef":"code","fc5306a4":"code","49b20853":"code","f52dfcac":"code","11573d31":"code","377cb887":"code","be21fc65":"code","1e14d929":"code","b6f09ffb":"code","4e5df263":"code","2d276789":"code","a6d1abd0":"code","01f56a01":"code","e5bb54ba":"code","7c1e0973":"code","f81da1b0":"code","1336dbde":"code","03eab18d":"code","beae8449":"code","2f7c7fee":"code","b518d8e7":"code","6a5314b7":"code","270992f0":"code","1a3a0f04":"code","f34f28cf":"code","a2857123":"code","bc2b5a1b":"code","5ac5b7d8":"code","221a658e":"code","965fe090":"code","558d361d":"code","834e9ed1":"code","c3f81fb4":"code","d11155d3":"code","3cee6b8c":"code","d992c5cd":"code","e9ffaaf8":"code","5e95cd3a":"code","a65378ad":"code","f89e8d66":"code","c8cf37c7":"code","aaeeefe3":"code","c8d059ec":"code","e4243148":"markdown","2db962d5":"markdown","03400351":"markdown","ec5c97d0":"markdown","6e170042":"markdown","b454f603":"markdown","722971b8":"markdown","e75a0a03":"markdown"},"source":{"e6ac4e4b":"import pandas as pd","49d4cce5":"! chmod 777 data.csv","b35fad5f":"! cat data.csv | head -10","c34372c9":"pd.set_option('display.max_columns', None)","65cbd656":"df = pd.read_csv('..\/input\/data.csv', index_col=0)\ndf.head()","6fd8eb46":"df.describe()","e4be3e68":"df.info()","44daee00":"list(df.columns)","48d96979":"df2 =df[['Name', 'Nationality']]\ndf2_gb = df2.groupby('Nationality')","fe34815c":"df2_gb = df2_gb.count().reset_index()","0c41687c":"by_nation = df2_gb.sort_values(by='Name', ascending=False)\nby_nation.head()","c919b83d":"import matplotlib.pyplot as plt","d12cae5a":"plt.style.use('ggplot')","987e49cc":"labels = by_nation.Nationality\nsizes = by_nation.Name\nexplode = 1\n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, labels=labels, shadow=True, startangle=90);","919a08bb":"by_nation = by_nation[by_nation['Name'] > 400]","569d1741":"len(labels)","6f3bd45e":"labels = by_nation.Nationality\nsizes = by_nation.Name\nexplode = []\n\nfor i in range(len(labels)):\n    explode.append(0.2)    \n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, shadow=True, startangle=90, autopct='%1.1f%%');","8ad6d7ff":"df3 =df[['Name', 'Nationality', 'Overall']]\ndf3_gb = df3.groupby('Nationality')","9d9a98d2":"df3 = df3_gb.mean().reset_index()\ndf3.head(10)","ee82e059":"top_nation = df3.sort_values(by='Overall', ascending=False).head(10)\ntop_nation","0da0e717":"labels = top_nation.Nationality\nsizes = top_nation.Overall\n\nplt.figure(figsize=(7,7))\nplt.bar(labels, sizes, color='g', alpha=0.7)\nplt.title('TOP AVERAGE OVERALL COUNTRIES')\nplt.xticks(fontsize=15,rotation=90)","f0d753a3":"import numpy as np","11c1a4ef":"df.columns","fc5306a4":"df4 = df[['Name', 'Age', 'Nationality', 'Overall', 'Position']]\ndf4.head()","49b20853":"df4.count()","f52dfcac":"df4 = df4.dropna()","11573d31":"df4.count()","377cb887":"from mpl_toolkits.axes_grid1 import make_axes_locatable","be21fc65":"fix, ax = plt.subplots(figsize=(10,10))\n\nax.scatter(df4.Age, df4.Overall, alpha=0.2)\nax.set_title('AGE VS OVERALL', loc='left')\ndivider = make_axes_locatable(ax)\naxHistx = divider.append_axes(\"top\", 1.2, pad=0.1, sharex=ax)\naxHisty = divider.append_axes(\"right\", 1.2, pad=0.1, sharey=ax)\n\naxHistx.xaxis.set_tick_params(labelbottom=False)\naxHisty.yaxis.set_tick_params(labelleft=False)\n\nbins=30\naxHistx.hist(df4.Age, bins=bins, )\naxHisty.hist(df4.Overall, bins=bins, orientation='horizontal', density=True)\n;","1e14d929":"positions = list(set(df4.Position))\npositions.sort()\npositions","b6f09ffb":"len(positions)","4e5df263":"fig, axs = plt.subplots(4,7)\nplt.figure(figsize=(10,10))\nfig.set_figheight(15)\nfig.set_figwidth(15)\n\nfor i, position in enumerate(positions):\n    if i < 7:\n        axs[0,i].scatter(df4[df4.Position == position].Age, df4[df4.Position == position].Overall, alpha=0.4)\n        axs[0,i].set_title(position)\n    if i < 14 and i >= 7:\n        axs[1,i-7].scatter(df4[df4.Position == position].Age, df4[df4.Position == position].Overall, alpha=0.4)\n        axs[1,i-7].set_title(position)\n    if i < 21 and i >= 14:\n        axs[2,i-14].scatter(df4[df4.Position == position].Age, df4[df4.Position == position].Overall, alpha=0.4)\n        axs[2,i-14].set_title(position)\n    if i < 28 and i >= 21:\n        axs[3,i-21].scatter(df4[df4.Position == position].Age, df4[df4.Position == position].Overall, alpha=0.4)\n        axs[3,i-21].set_title(position)\n;    ","2d276789":"df4[df4.Position == 'LAM'].count()","a6d1abd0":"df4['Real_Position'] = ''","01f56a01":"df4.loc[df4['Position'] == 'GK', 'Real_Position'] = 'GOAL KEEPER'","e5bb54ba":"df4.loc[df4['Position'] == 'CB', 'Real_Position'] = 'CENTRE BACK'\ndf4.loc[df4['Position'] == 'RCB', 'Real_Position'] = 'CENTRE BACK'\ndf4.loc[df4['Position'] == 'LCB', 'Real_Position'] = 'CENTRE BACK'","7c1e0973":"df4.loc[df4['Position'] == 'RB', 'Real_Position'] = 'LATERAL BACK'\ndf4.loc[df4['Position'] == 'LB', 'Real_Position'] = 'LATERAL BACK'\ndf4.loc[df4['Position'] == 'LWB', 'Real_Position'] = 'LATERAL BACK'\ndf4.loc[df4['Position'] == 'RWB', 'Real_Position'] = 'LATERAL BACK'","f81da1b0":"df4.loc[df4['Position'] == 'CDM', 'Real_Position'] = 'MIDFIELDER'\ndf4.loc[df4['Position'] == 'CM', 'Real_Position'] = 'MIDFIELDER'\ndf4.loc[df4['Position'] == 'CAM', 'Real_Position'] = 'MIDFIELDER'\ndf4.loc[df4['Position'] == 'CAM', 'Real_Position'] = 'MIDFIELDER'\ndf4.loc[df4['Position'] == 'RM', 'Real_Position'] = 'MIDFIELDER'\ndf4.loc[df4['Position'] == 'LM', 'Real_Position'] = 'MIDFIELDER'\ndf4.loc[df4['Position'] == 'LDM', 'Real_Position'] = 'MIDFIELDER'\ndf4.loc[df4['Position'] == 'RDM', 'Real_Position'] = 'MIDFIELDER'","1336dbde":"df4.loc[df4['Position'] == 'RW', 'Real_Position'] = 'LATERAL MIDFIELDER'\ndf4.loc[df4['Position'] == 'LW', 'Real_Position'] = 'LATERAL MIDFIELDER'\ndf4.loc[df4['Position'] == 'RCM', 'Real_Position'] = 'LATERAL MIDFIELDER'\ndf4.loc[df4['Position'] == 'LCM', 'Real_Position'] = 'LATERAL MIDFIELDER'\ndf4.loc[df4['Position'] == 'LAM', 'Real_Position'] = 'LATERAL MIDFIELDER'\ndf4.loc[df4['Position'] == 'RAM', 'Real_Position'] = 'LATERAL MIDFIELDER'","03eab18d":"df4.loc[df4['Position'] == 'CF', 'Real_Position'] = 'STRIKER'\ndf4.loc[df4['Position'] == 'RF', 'Real_Position'] = 'STRIKER'\ndf4.loc[df4['Position'] == 'LF', 'Real_Position'] = 'STRIKER'\ndf4.loc[df4['Position'] == 'ST', 'Real_Position'] = 'STRIKER'\ndf4.loc[df4['Position'] == 'LS', 'Real_Position'] = 'STRIKER'\ndf4.loc[df4['Position'] == 'RS', 'Real_Position'] = 'STRIKER'","beae8449":"df4.drop('Position', axis=1, inplace=True)","2f7c7fee":"positions = list(set(df4['Real_Position']))\npositions","b518d8e7":"fig, axs = plt.subplots(3,2)\nplt.figure(figsize=(10,10))\nfig.set_figheight(15)\nfig.set_figwidth(15)\n\nfor i, position in enumerate(positions):\n    if i < 2:\n        axs[0,i].scatter(df4[df4.Real_Position == position].Age, df4[df4.Real_Position == position].Overall, alpha=0.4)\n        axs[0,i].set_title(position)\n    if i < 4 and i >= 2:\n        axs[1,i-2].scatter(df4[df4.Real_Position == position].Age, df4[df4.Real_Position == position].Overall, alpha=0.4)\n        axs[1,i-2].set_title(position)\n    if i < 6 and i >= 4:\n        axs[2,i-5].scatter(df4[df4.Real_Position == position].Age, df4[df4.Real_Position == position].Overall, alpha=0.4)\n        axs[2,i-5].set_title(position)\n;   ","6a5314b7":"df4_g = df4.groupby(['Real_Position', 'Age'])","270992f0":"df4_mean = df4_g.mean().reset_index()\ndf4_mean","1a3a0f04":"fig, axs = plt.subplots(3,2)\nplt.figure(figsize=(10,10))\nfig.set_figheight(15)\nfig.set_figwidth(15)\n\nfor i, position in enumerate(positions):\n    if i < 2:\n        axs[0,i].scatter(df4[df4.Real_Position == position].Age, df4[df4.Real_Position == position].Overall, alpha=0.4)\n        axs[0,i].set_title(position)\n        axs[0,i].plot(df4_mean[df4_mean.Real_Position == position].Age, df4_mean[df4_mean.Real_Position == position].Overall, color='b')\n    if i < 4 and i >= 2:\n        axs[1,i-2].scatter(df4[df4.Real_Position == position].Age, df4[df4.Real_Position == position].Overall, alpha=0.4)\n        axs[1,i-2].set_title(position)\n        axs[1,i-2].plot(df4_mean[df4_mean.Real_Position == position].Age, df4_mean[df4_mean.Real_Position == position].Overall, color='b')\n    if i < 6 and i >= 4:\n        axs[2,i-5].scatter(df4[df4.Real_Position == position].Age, df4[df4.Real_Position == position].Overall, alpha=0.4)\n        axs[2,i-5].set_title(position)\n        axs[2,i-5].plot(df4_mean[df4_mean.Real_Position == position].Age, df4_mean[df4_mean.Real_Position == position].Overall, color='b')\n;   ","f34f28cf":"df5 = df4[['Age', 'Overall', 'Real_Position']]\ndf5.head()","a2857123":"df5_g = df5.groupby(['Real_Position', 'Age'])\ndf5_g","bc2b5a1b":"df5_g2 = df5_g.agg(['mean', 'std', 'count']).reset_index()\ndf5_g2.sample(5)","5ac5b7d8":"df5_g2.columns","221a658e":"df5_g2['Overall', 'count'].sum()","965fe090":"df5_merged = df5.merge(df5_g2, how='left', left_on=['Real_Position', 'Age'], right_on=['Real_Position', 'Age'])\ndf5_merged.head(10)","558d361d":"list(df5_merged.columns)","834e9ed1":"df5_merged.columns = ['Age',\n 'Overall',\n 'Real_Position',\n 'O_mean',\n 'O_std',\n 'O_count']","c3f81fb4":"df5_merged.head()","d11155d3":"df5_merged['Distance_to_mean'] = abs(df5_merged.Overall - df5_merged.O_mean)\ndf5_merged.head(5)","3cee6b8c":"df5_merged['Outliers'] = df5_merged.Distance_to_mean >= (df5_merged.O_std * 3)\ndf5_merged.head(5)","d992c5cd":"df5_clean = df5_merged[df5_merged.Outliers == False]\ndf5_clean.sample(5)","e9ffaaf8":"fig, axs = plt.subplots(3,2)\nplt.figure(figsize=(10,10))\nfig.set_figheight(15)\nfig.set_figwidth(15)\n\nfor i, position in enumerate(positions):\n    if i < 2:\n        axs[0,i].scatter(df5_clean[df5_clean.Real_Position == position].Age, df5_clean[df5_clean.Real_Position == position].Overall, alpha=0.4)\n        axs[0,i].set_title(position)\n    if i < 4 and i >= 2:\n        axs[1,i-2].scatter(df5_clean[df5_clean.Real_Position == position].Age, df5_clean[df5_clean.Real_Position == position].Overall, alpha=0.4)\n        axs[1,i-2].set_title(position)\n    if i < 6 and i >= 4:\n        axs[2,i-5].scatter(df5_clean[df5_clean.Real_Position == position].Age, df5_clean[df5_clean.Real_Position == position].Overall, alpha=0.4)\n        axs[2,i-5].set_title(position)\n;   ","5e95cd3a":"df5_clean_g = df5_clean.groupby(['Real_Position', 'Age'])","a65378ad":"df5_clean_g_mean = df5_clean_g['Overall'].mean().reset_index()\ndf5_clean_g_mean.sample(5)","f89e8d66":"fig, axs = plt.subplots(3,2)\nplt.figure(figsize=(10,10))\nfig.set_figheight(15)\nfig.set_figwidth(15)\n\nfor i, position in enumerate(positions):\n    if i < 2:\n        axs[0,i].scatter(df5_clean[df5_clean.Real_Position == position].Age, df5_clean[df5_clean.Real_Position == position].Overall, alpha=0.4)\n        axs[0,i].set_title(position)\n        axs[0,i].plot(df5_clean_g_mean[df5_clean_g_mean.Real_Position == position].Age, df5_clean_g_mean[df5_clean_g_mean.Real_Position == position].Overall, color='b')\n    if i < 4 and i >= 2:\n        axs[1,i-2].scatter(df5_clean[df5_clean.Real_Position == position].Age, df5_clean[df5_clean.Real_Position == position].Overall, alpha=0.4)\n        axs[1,i-2].set_title(position)\n        axs[1,i-2].plot(df5_clean_g_mean[df5_clean_g_mean.Real_Position == position].Age, df5_clean_g_mean[df5_clean_g_mean.Real_Position == position].Overall, color='b')\n    if i < 6 and i >= 4:\n        axs[2,i-5].scatter(df5_clean[df5_clean.Real_Position == position].Age, df5_clean[df5_clean.Real_Position == position].Overall, alpha=0.4)\n        axs[2,i-5].set_title(position)\n        axs[2,i-5].plot(df5_clean_g_mean[df5_clean_g_mean.Real_Position == position].Age, df5_clean_g_mean[df5_clean_g_mean.Real_Position == position].Overall, color='b')\n","c8cf37c7":"df5_clean = df5_clean[df5_clean.Age < 35]\ndf5_clean.head()","aaeeefe3":"df5_clean_g = df5_clean.groupby(['Real_Position', 'Age'])\ndf5_clean_g_mean = df5_clean_g['Overall'].mean().reset_index()\ndf5_clean_g_mean.sample(5)","c8d059ec":"fig, axs = plt.subplots(3,2)\nplt.figure(figsize=(10,10))\nfig.set_figheight(15)\nfig.set_figwidth(15)\n\nfor i, position in enumerate(positions):\n    if i < 2:\n        axs[0,i].scatter(df5_clean[df5_clean.Real_Position == position].Age, df5_clean[df5_clean.Real_Position == position].Overall, alpha=0.4)\n        axs[0,i].set_title(position)\n        axs[0,i].plot(df5_clean_g_mean[df5_clean_g_mean.Real_Position == position].Age, df5_clean_g_mean[df5_clean_g_mean.Real_Position == position].Overall, color='b')\n    if i < 4 and i >= 2:\n        axs[1,i-2].scatter(df5_clean[df5_clean.Real_Position == position].Age, df5_clean[df5_clean.Real_Position == position].Overall, alpha=0.4)\n        axs[1,i-2].set_title(position)\n        axs[1,i-2].plot(df5_clean_g_mean[df5_clean_g_mean.Real_Position == position].Age, df5_clean_g_mean[df5_clean_g_mean.Real_Position == position].Overall, color='b')\n    if i < 6 and i >= 4:\n        axs[2,i-5].scatter(df5_clean[df5_clean.Real_Position == position].Age, df5_clean[df5_clean.Real_Position == position].Overall, alpha=0.4)\n        axs[2,i-5].set_title(position)\n        axs[2,i-5].plot(df5_clean_g_mean[df5_clean_g_mean.Real_Position == position].Age, df5_clean_g_mean[df5_clean_g_mean.Real_Position == position].Overall, color='b')\n;","e4243148":"## Players by country","2db962d5":"# Load the data and have a look","03400351":"# Which country has the best players by overall mean?","ec5c97d0":"# Let's code in order to calculate the best age to sign a player by position","6e170042":"# Conclusions:\n\n1) GOAL KEEPERS are better the older they are, **the curve stabilizes at age 30**. This may be because goalkeers do not need to be as fit as other players, so the experience is KPI.\n\n2) **The curve** of CENTER BACK, STRIKERS and LATERAL BACK players **stabilizes at age 27**. This may be because such players need experience as well as to be fit, therefore experience and fit are KPIs.\n\n3) **The curve**  of MILDFIELDERS **stabilizes at age 24**. This may be bacause MILFFIELDERS much depends on their technique, which is a skill. Therefore, thechnique is a KPI.\n\n5) **The curve**  of LATERAL MILDFIELDERS **stabilizes at age 23**. This may be because LATERAL MILFFIELDERS much depends on their technique and velocity, which are skills. Therefore, thechnique and velocity are a KPIs.\n\n*Needless to say, this is football and there a lot of exceptions. I will sign Mbappe even though he is not 27 years old yet. :)*\n","b454f603":"## We can see in the last graphs that over 35 years the data is not normal.\n\n#### That makes sense because players older than 35 are special cases* \n*Except for goal keepers\n\n#### Therefore, let's remove players older than 35","722971b8":"### There are many position, let's group them in fewer","e75a0a03":"### Let's remove outliers in order to get better results"}}