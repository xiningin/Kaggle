{"cell_type":{"79d128d8":"code","d586cdd6":"code","809ff352":"code","8e424730":"code","7601d8a4":"code","1ec01823":"code","a321feb7":"code","cc577b1a":"code","6e5e2fc7":"code","d5334bf9":"code","3280611c":"code","1cdcc61c":"code","dba4db87":"code","e9a7a978":"code","3af4ae33":"code","e34ef7a4":"code","3f851754":"code","d033b765":"code","61f2fb45":"code","216730d8":"code","33ab2ee6":"code","d55b6fde":"code","ef4a8fce":"code","97dbbb99":"code","6e3419df":"code","574aebf3":"code","9ce72965":"code","340685f5":"code","d97fc79b":"code","13df3d38":"code","31bf5007":"code","3e8bff7e":"code","d4c38537":"code","736c438e":"code","f53896ae":"code","8e29df52":"code","c821a50a":"code","ec8f26ee":"code","a6310f9b":"code","b70f48e4":"code","d0c2ca96":"code","10ae40c4":"code","ee24a149":"code","6324a428":"code","b7acb7b5":"code","39be3557":"code","3a94558d":"code","fb14113b":"code","7364c4de":"code","3876af96":"code","56e7f6d5":"code","08e90ada":"code","7875a0ca":"code","ed0ef1a5":"code","3276f9d5":"code","d313b02f":"code","065d3b84":"code","50548460":"code","da8c100d":"code","02ab808d":"code","2a9de905":"code","4bef7fa6":"code","8811227e":"code","6391d2a6":"markdown","967e5e1f":"markdown","56b33303":"markdown","3a335b5b":"markdown","a71f4ed4":"markdown","ab545c0f":"markdown","fadf0e54":"markdown","38f146b3":"markdown","6704015c":"markdown","d99c3a7e":"markdown","9b222955":"markdown","5413cab6":"markdown","db1c26e8":"markdown","bc7791a8":"markdown","8995fd31":"markdown","54a3e0b1":"markdown","5b71b6b1":"markdown","ec8c125b":"markdown","88fc4f36":"markdown","8a5ef972":"markdown","e92e69c8":"markdown","deaf13af":"markdown","1dd2085d":"markdown","2fc397a4":"markdown","04f50666":"markdown","be3c58ca":"markdown","5c3cef03":"markdown","4788f46f":"markdown","499ac172":"markdown","5f3d8820":"markdown","1bfb24c4":"markdown","5f756313":"markdown","97eb661a":"markdown","06560e54":"markdown","a0954636":"markdown","84fd5741":"markdown","67152d0a":"markdown","ceebabf0":"markdown","714e2674":"markdown","4fbd565d":"markdown","eb60b743":"markdown","e3770966":"markdown","7846640b":"markdown","fceb8c99":"markdown","93c75f8b":"markdown","8c06003e":"markdown","7fd28301":"markdown","1d2d8133":"markdown","abb4547e":"markdown"},"source":{"79d128d8":"import numpy as np   \nimport pandas as pd  \nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nimport json\nwarnings.filterwarnings('ignore') # To supress warnings\nsns.set(style=\"darkgrid\") # set the background for the graphs\npd.set_option('display.float_format', lambda x: '%.3f' % x)","d586cdd6":"#Reading Dataset of trends in india\npath_india='..\/input\/youtube-trending-video-dataset\/IN_youtube_trending_data.csv'\ndf_india = pd.read_csv(path_india)\n#df_inda.loc[publishedAt]\n","809ff352":"#since the dataset may change i will be creating a subset till 25 April 2021).\ndf_india=df_india.loc[df_india['publishedAt'] < '2021-04-25']","8e424730":"#This function returns the first 5 rows for the dataset\ndf_india.head()\n","7601d8a4":"#displays last 5 rows\ndf_india.tail()","1ec01823":"\nprint (\"Rows     : \" , df_india.shape[0]) #Displays numbers of rows .\nprint (\"Columns  : \" , df_india.shape[1]) # and column our dataset contains.\nprint (\"\\nFeatures : \\n\", df_india.columns.tolist())#displays column names\nprint (\"\\nMissing values :  \", df_india.isnull().sum().values.sum())   #find missing values\nprint (\"\\nUnique values :  \\n\", df_india.nunique())  # Count distinct observations\n","a321feb7":"# Displays columns and datatype .\ndf_india.dtypes\n","cc577b1a":"#This method prints information about a dataset including the index dtype and columns,\n#non-null values and memory usage.\ndf_india.info()","6e5e2fc7":"#We can select subset of data  \ncol=['video_id','title','trending_date','view_count']\ndf_india[col].head()","d5334bf9":"#The dataset can have many columns , this lets us select only columns with number datatype. \ndf_india.select_dtypes(include = [np.number]).dtypes","3280611c":"#This will show columns with only object datatypes\ndf_india.select_dtypes(include = [np.object]).dtypes","1cdcc61c":"#Display  only object datatype columns\ndf_india[df_india.select_dtypes([np.object]).columns]","dba4db87":"df_india.channelId.value_counts()","e9a7a978":"df_india['video_id'].value_counts()","3af4ae33":"#counts of rows in each categoryId in the dataset\ndf_india['categoryId'].value_counts()","e34ef7a4":"#Select and order top n entries\ndf_india.nlargest(10,'view_count') # n= 10\n","3f851754":"#Select and order bottom n entries.\ndf_india.nsmallest(10, 'view_count')  #n=10\n","d033b765":"#changing published date , trending_date to datetime datatype.\ndf_india.publishedAt= pd.to_datetime(df_india.publishedAt)\ndf_india.trending_date= pd.to_datetime(df_india.trending_date)\n","61f2fb45":"#Changing object datatype to category for categorical variables.\n#Use a Categorical for efficient storage of an object-dtype column with many repeated values.\n\ndf_india.channelId=df_india.channelId.astype(\"category\")\ndf_india.channelTitle=df_india.channelTitle.astype(\"category\")","216730d8":"# verify if the datatype  are changed \ndf_india.info()","33ab2ee6":"df_india.select_dtypes(include = 'category').dtypes","d55b6fde":"#To rename column names\ndf_india.rename(columns={'comment_count':'commentcount','thumbnail_link':'thumbnaillink'},inplace=True)","ef4a8fce":"# to drop column names\ndf_india.drop('ratings_disabled',inplace=True,axis=1)\n","97dbbb99":"# add new column that would contain latest view_count for the particular video.\n#since number of views keep on increasing everyday , we will be using only single observation against a video id.\ndf_india['count_max_view'] =df_india.groupby(['video_id'])['view_count'].transform(max)","6e3419df":"#Adding column for year to the dataframe\ndf_india['Year']=df_india['publishedAt'].dt.year\ndf_india['Month']=df_india.publishedAt.dt.month","574aebf3":"#select columns whose name matches regular expression\ndf_india.filter(regex='chan')\n","9ce72965":"df_india.info()","340685f5":"df_india.sample(3)","d97fc79b":"df_india.isna().sum()","13df3d38":"# There are many ways to fill the missing data. For example filling the NAs with the most frequent value, \ndf_india.description.fillna('No description provided',inplace=True) \ndf_india.dropna(axis=0,inplace=True)","31bf5007":"df_india.isna().sum()","3e8bff7e":"#to display olny 4 rows\ndf_india.iloc[1:5]","d4c38537":"#filter out dataset with a condition\ndf_india.loc[(df_india.channelTitle=='T-Series') & (df_india.Year == 2020),'Year'].count()","736c438e":"# to view columns form channel id to view count\ndf_india.loc[:,'channelId':'view_count']\n#number.sort_values(ascending = False)","f53896ae":"df_india.loc[:,'categoryId'].value_counts()","8e29df52":"#to view all records for channeltitle='Foxstarhindi'\ndf_india.query('channelTitle==\"FoxStarHindi\"')","c821a50a":"#displays only numeric variables\ndf_india.describe()","ec8f26ee":"# displays all varaibles\ndf_india.describe(exclude='number')\n","a6310f9b":"df_india.publishedAt.min()","b70f48e4":"df_india.publishedAt.max()","d0c2ca96":"# gives us various count of video in each channel category\ndf_india.groupby(\"channelTitle\").size().reset_index(name=\"video_count\") \\\n    .sort_values(\"video_count\", ascending=False).head(20)\n","10ae40c4":"#df_india.groupby('month').count_max_view\nget_month=df_india.Month.value_counts(normalize=True)\n","ee24a149":"# make a new dataframe with only single observations for each id.\ndf_unique_video_id=df_india.loc[df_india.view_count == df_india.count_max_view]\ndf_unique_video_id.loc[df_unique_video_id.Year == 2021, 'title'].count()","6324a428":"#Getting category for the category file\n#we need id and title from this file which are under items tag and snippet contain title\nwith open(\"..\/input\/youtube-trending-video-dataset\/IN_category_id.json\") as f:\n    categories = json.load(f)[\"items\"]\ncat_dict = {}\ncategory=[]\nfor cat in categories:\n    category.append([cat[\"id\"],cat[\"snippet\"][\"title\"]])\n    \n","b7acb7b5":"df_category =pd.DataFrame(category,columns=['categoryId','category']) \ndf_category.head(20)","39be3557":"df_category.categoryId=df_category.categoryId.astype('int64')\n#merge df_india and df_category to get category names\ndf_merge = df_india.merge(df_category, on = 'categoryId', how = 'inner')\ndf_merge['category']","3a94558d":"agg_func_count = {'view_count': ['count', 'nunique', 'size']}\ndf_merge.groupby(['category']).agg(agg_func_count)","fb14113b":"agg_func_selection = {'likes': ['first', 'last']}\ndf_merge.sort_values(by=['channelTitle'],\n            ascending=False).groupby(['channelTitle'\n                                        ]).agg(agg_func_selection)","7364c4de":"path_us='..\/input\/youtube-trending-video-dataset\/US_youtube_trending_data.csv'\ndf_us = pd.read_csv(path_us)\npath_ca='..\/input\/youtube-trending-video-dataset\/CA_youtube_trending_data.csv'\ndf_ca = pd.read_csv(path_ca)\n\n","3876af96":"df_us.shape[0]","56e7f6d5":"df_ca.shape[0]","08e90ada":"df_merge_us_ca=pd.concat([df_us,df_ca])","7875a0ca":"df_merge_us_ca.shape[0]\n","ed0ef1a5":"# find the video which has maximum view count.\ndf_india[df_india['view_count'].isin([df_india.view_count.max()])]\n","3276f9d5":"print(\" Number of video's published in year 2020 is \", df_india.loc[df_india.Year==2020,'video_id'].count())","d313b02f":"print(\" Number of video's published by 'T-series'in year 2020 is \",\n      df_india.loc[(df_india.channelTitle=='T-Series') & (df_india.Year == 2020),'Year'].count())","065d3b84":"# get top 30 most watched videos\ntop30viewed=df_india[df_india['view_count'] == df_india['count_max_view']].sort_values(by=['count_max_view'],ascending=False).head(30)","50548460":"# we just want the first string from the title and title is pipe separated\ntop30viewed.title=top30viewed.title.str.split(pat='|').apply(lambda x: x[0])\n","da8c100d":"\n#top30viewed.reset_index()\nsns.catplot(data=top30viewed, x='title', y='view_count',kind='bar',palette='cool_r' ,ci=None, legend_out=False,aspect =2)\n\nplt.ylabel('Number of views')\nplt.xlabel('Title')\nplt.xticks(rotation=90)\nplt.show()\n","02ab808d":"df_merge.groupby(df_merge['category']).size().sort_values(ascending=False).head(3).plot(kind='bar')","2a9de905":"top_cat=df_merge[df_merge['categoryId']==24].sample(100)\n","4bef7fa6":"#to use cross tab\npd.crosstab([top_cat.channelTitle,top_cat.Year],values=top_cat['view_count'], columns=top_cat['Month'],aggfunc=len)","8811227e":"#to use pivot table\ntop_cat.pivot_table(index=[top_cat.channelTitle],values='view_count', columns='Month',aggfunc=len,dropna=True)\n","6391d2a6":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b>\ud83c\udfad Converting datatypes \ud83c\udfad<\/b><\/h1>","967e5e1f":"# Basic Pandas functions","56b33303":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b><u>Top 3 Categories<\/u><\/b><\/h1> ","3a335b5b":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b>\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66 Data Aggregation,Combining dataframe and Groupby\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66<\/b><\/h1>","a71f4ed4":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b>\ud83e\udd37\u200d Purpose of Analysis \ud83e\udd37\u200d<\/b><\/h1>","ab545c0f":"<font size=3 style=\"font-family:COMIC SANS MS\">\n    <b>\n    <i><u>\n        Data Aggregation,comibing dataframe and Groupby:\ud83d\udc6f\u200d\u2642\ufe0f\ud83d\udc6f\u200d\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66<\/u>\n      One of the most basic analysis functions is grouping and aggregating data. An aggregation function is one which takes multiple individual values and returns a summary.In pandas, the groupby function can be combined with one or more aggregation functions to quickly and easily summarize data. \n        <\/i>\n    <\/b>\n<\/font>  \n\n\n\n<table style =\"width:95%;border:black;border-width:1px; border- style:solid;  border-collapse: collapse\" >\n    <thead>\n        <tr>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \">             Description \n            <\/th>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \">             Method\n            <\/th>\n        <\/tr>\n    <\/thead>\n    <tbody>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To find total count,unique observatoin\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                agg_func_count = {'view_count': ['count', 'nunique']}<br>\n                df_merge.groupby(['category']).agg(agg_func_count)\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To find increased number of likes\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n               agg_func_selection = {'likes': ['first', 'last']} <br>\n             df_merge.sort_values(by=['channelTitle'],\n            ascending=False).groupby(['channelTitle'\n                                        ]).agg(agg_func_selection)\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To merge category dataset with trending dataset\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n               df_merge = df_india.merge(df_category, on = 'categoryId', how = 'inner')\n            <\/td>\n        <\/tr>\n        <tr>    \n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To concatenate Us and canada dataset\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df_con_us_ca=pd.concat([df_us,df_ca])\n            <\/td>\n        <\/tr>    \n    <\/tbody>\n<\/table>\n ","fadf0e54":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b><u>\ud83d\udc40  Exploring Dataset \ud83d\udc40 <\/u><\/b><\/h1>","38f146b3":"<font size=3 style=\"font-family:COMIC SANS MS\" ><b><i><u>Slicing \/Subsetting  DataSet :\ud83d\udd2a\ud83d\udd2a<\/u>\n        One of the most effective ways to get more information out of a dataset is to divide it into smaller, \n        more uniform subsets, and analyze each of these \"subset\" on its own. <\/i>\n    <\/b>\n<\/font> \n        \n       \n<table style =\"width:95%;border:black;border-width:1px; border- style:solid;  border-collapse: collapse\" >\n    <thead>\n        <tr>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \">                  Description \n            <\/th>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px                     \">Method    \n            <\/th>\n        <\/tr>\n    <\/thead>\n    <tbody>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10pxF \">\n                To Select rows by position use ilocs .<br>It allows integer-location based indexing for selections .\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                 df_india.iloc[10:4]\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To select data based on labels, which means <br>that we have to specify the name of the rows and columns that we need to filter out\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                 df_india.loc[df_india['title','view_count]]\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                Query the columns of a DataFrame with a boolean expression.\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" > df_india.query['category == 24']\n            <\/td>\n        <\/tr>\n    <\/tbody>\n<\/table>    \n    ","6704015c":"# Data Aggregation,Combining  dataframe and Groupby\n","d99c3a7e":"<div class =\"alert alert-block alert-info\">\n<font size=4><b><i>Other than usual missing value , data can have missing value like n.a or N\/A or ---etc . Need to write separate code to identity such cases.Missing Valve and handling of missing values is a big post in itself and will cover it later.  <\/i><\/b><\/font>\n    <\/div>","9b222955":"<font size=3 style=\"font-family:COMIC SANS MS\" style=\"font-family:COMIC SANS MS\" ><b><i> <u>Analyzing Dataset\ud83d\udd2d\ud83d\udd2d<\/u> :\nWhen you begin working with a new data set, it is  best to check out the first few rows ,look at datatypes, \ncheck for any datatype mismatch in variables. This will show you what kind of data is in the dataset, \nwhat data types you are working with, and help you in your analysis.<\/i><\/b><\/font>\n\n<table style =\"width:75%;border:black;border-width:1px; border- style:solid;  border-collapse: collapse\" >\n  <thead>\n    <tr>\n        <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \">\n            Description \n        <\/th>\n        <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \">\n            Method\n      <\/th>\n    <\/tr>\n   <\/thead>\n   <tbody>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                Displays top 5 row or  n rows;<\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df_india.head()\/df_india.head(n)\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                Displays bottom 5 row or  n rows\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                df_india.tail()\/df_india.tail(n)\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                Displays randomly selected rows\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                df_india.sample(n)\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                Selecting  certain columns\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                col=['title','trending_date','view_count']\n                df_india[col].head()\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                Select and order top n entries\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df_india.nlargest(10, 'view_count')\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                Select and order bottom n entries\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df_india.nsmallest(10, 'view_count')\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                Distinct values in a column\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px\">\n                df_india['trending_date'].nunique()\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                Count number of rows with each unique value of variable\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                df_india['trending_date'].value_counts()\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                To display datatypes of variables\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                df_india.dtypes \n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                Displays numbers of rows and column our dataset <br>contains.Its a tuple representing the dimensions\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df_india.shape \n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                This method print info about a dataset including the index dtype <br>and columns,non-null values and memory usage\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px\" >\n                df_india.info() \n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                A selection of numeric dtypes  to be included\/excluded.\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                df_india.select_dtypes(include = [np.number]).dtypes\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                A selection of object dtypes to be included\/excluded. \n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                df_india.select_dtypes(include = [np.object]).dtypes\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                A selection of datetime dtypes to be included\/excluded.  \n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                df_india.select_dtypes(include =  [np.datetime64]).dtypes\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                To select Pandas categorical dtypes \n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                df_india.select_dtypes(include = 'category').dtypes\n            <\/td>\n        <\/tr>\n    <\/tbody>\n<\/table><br>  ","5413cab6":"<font size=3 color=\"black\" style=\"font-family:COMIC SANS MS;text-align:center\"><b>Pandas is a fast, powerful, flexible and easy to use open source data analysis and manipulation tool,built on top of the Python programming language.\nData analysis is a process of inspecting, cleansing, transforming, and modeling data with the goal of discovering useful information, forming conclusions, and supporting decision-making.<\/b><br><\/font>\n<font size=3 color=\"black\" style=\"font-family:COMIC SANS MS\" ><b> Here I have tried to cover few basic functions , examples to understand, silicing, groupby, concatenate,merge tables that can be used during Data Analysis stage.<\/b>\n<\/font><br><br>","db1c26e8":"<font size=3 color=\"black\" style=\"font-family:COMIC SANS MS\" ><i>\n\ud83c\udf10 [Basic Pandas functions](#Basic-Pandas-functions)<br>\n\ud83e\udd37\u200d[Purpose of Analysis](#Purpose-of-Analysis)<br>\n\ud83d\udcd6 [Reading Dataset](#Reading-Data) <br>\n\ud83d\udc40 [Exploring Dataset](#Exploring-Dataset)<br>\n\ud83c\udfad [Converting Datatypes](#Converting-Datatypes) <br>\n\ud83e\ude78 [Add\/Rename\/Drop\/Filter Columns](#Add-Rename-Drop-Filter-Columns)<br>\n\u2753 [Missing Values](#Missing-Values) <br>\n\ud83d\udcc4 [Descriptive Statistics](#Descriptive-Statistics)<br>\n\ud83d\udd2a [Slicing\/Subsetting](#Slicing-Subsetting)<br> \n\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc6f\u200d[Data Aggregation ,Combining data frame and Groupby](#Data-Aggregation-dataframe-and-Groupby)<br>\n\n\n\n<font size=3 style=\"font-family:COMIC SANS MS\" style=\"font-family:COMIC SANS MS\" ><i>\u26f3Purpose : The biggest motivation for this notebook was a simple thought to get better at Pandas.The best way to learn  or improve is to write about it .With this thought process, I have created a simple tutorial  along with a Case study  on a Youtube trending Dataset to provide examples how these Panda functions can be used during analysis.<br><br>\n    There can be more functions,which I may not be aware of or not used .Do write in comments any basic functions which I may have missed, or if you approach a problem differently.<br> \n    \n@AmmarAlyousfi ,Thanks for sharing your notebook.\ud83d\ude4f Do check his notebook https:\/\/www.kaggle.com\/ammar111\/youtube-trending-videos-analysis .I was inspired by this but I wanted to cover questions which were not answered in this notebook. \n    <br> I hope this notebook helps you, please provide your feedback which will help me improve.\ud83d\ude4f<\/i><\/font><br><br>\n \n<font size=2 ><i>Source : https:\/\/pandas.pydata.org\/pandas-docs\/stable\/?v=20210321105443 <br> https:\/\/en.wikipedia.org\/wiki\/Data_analysis<br>\n   https:\/\/github.com\/jakevdp\/PythonDataScienceHandbook\/tree\/master\/notebooks<\/i><font>\n    ","bc7791a8":"Here are my other notebooks....Do checkout if you find my work helpful, happy learning.\n\n1.[Predicting If Customer will borrow Personal Loan ](http:\/\/www.kaggle.com\/yogidsba\/personal-loan-logistic-regression-decision-tree)\n\n2.[Predict Prices of Used cars](https:\/\/www.kaggle.com\/yogidsba\/predict-used-car-prices-linearregression)\n\n3.[Insurance Claim Hypothesis Testing](http:\/\/www.kaggle.com\/yogidsba\/insurance-claims-eda-hypothesis-testing)\n\n4.[Basic EDA on Covid vaccination](http:\/\/www.kaggle.com\/yogidsba\/basic-eda-on-covid-vaccination)\n\n5.[Case study EDA on cardio good fitness](http:\/\/www.kaggle.com\/yogidsba\/casestudy-eda-for-cardio-good-fitness)","8995fd31":"\n<font size=3 style=\"font-family:COMIC SANS MS\" style=\"font-family:COMIC SANS MS\" ><b><i><u> Getting  Dataset: \ud83e\udde7<\/u><\/i><\/b><\/font>\n\n<table style =\"width:80%;border:black;border-width:1px; border- style:solid;  border-collapse: collapse\" >\n    <thead>\n      <tr>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \"> \n              To Read  Dataset From \n            <\/th>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \">\n              Method\n            <\/th>\n      <\/tr>\n    <\/thead>\n    <tbody>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n              CSV&nbsp;\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n              pd.read_csv(filename)\n            <\/td>\n        <\/tr>\n        <tr >\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n              TAB\/Delimited \/TSV\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n              pd.read_table(filename)\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n             EXCEL\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n             d.read_excel('myfile.xlsx',sheet_name='Sheet1', index_col=None)\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n             SQL Table\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n             pd.read_sql(query,connection_object)\n            <\/td>\n        <\/tr>\n        <tr >\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n             JSON formatted string<\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                pd.read_json(json_string)\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                HTML url\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                pd.read_html(url)\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                Clipboard\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >\n                pd.read_clipboard()\n            <\/td>\n        <\/tr>\n    <\/tbody>\n<\/table><br>","54a3e0b1":"# Descriptive Statistics","5b71b6b1":"# Exploring Dataset\n  \n    \n   ","ec8c125b":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b>Which is most watched video in India.?<\/b><\/h1>","88fc4f36":"<font size=3 style=\"font-family:COMIC SANS MS\"><b><i><u>Descriptive Statistics\ud83d\udcc4\ud83d\udcc4<\/u>   \n    Descriptive statistics, which include things like the mean, median,Quartiles,Minimum,Standard Deviation etc of the data , can be useful to understand the spread of the variables are and what variables may be the most important. Descriptive statistics on pandas objects exclude missing data by default<\/i><\/b><\/font> \n\n<table style =\"width:95%;border:black;border-width:1px; border- style:solid;  border-collapse: collapse\" >\n    <thead>\n        <tr>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \"> \n                Description \n            <\/th>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \">\n                Method\n            <\/th>\n        <\/tr>\n    <\/thead>\n    <tbody>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To get statistical summary for numeric value, to understand the distrubution\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df_india.describe()(n)\n            <\/td>\n        <\/tr>    \n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To get summary for Categorical value\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px\">                                                   df_india.describe(include='category')\n            <\/td>\n        <\/tr>    \n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To get Minimum value for all numeric columns\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df_india.min()\n            <\/td>\n        <\/tr>    \n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To get Mean value for  all numeric columnss\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df_india.mean()\n            <\/td>\n        <\/tr>   \n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To get exact middle value among a dataset. Useful for skewed distribution or data with outliers\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df_india.median()\n            <\/td>\n        <\/tr>   \n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To get most frequent element in a dataset.\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df_india.mode()\n            <\/td>\n        <\/tr>               \n        <tr>   \n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To get standard deviation of numeric column\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df_india.std()\n            <\/td>\n        <\/tr>               \n    <\/tbody>\n<\/table>","8a5ef972":"<font size=3 style=\"font-family:COMIC SANS MS\" ><b><i>\nData analysis starts with questions, not data or a some specific techniques. What is that you  want to acheive with this data?What are the questions you want to answer with your data.? what kind of problems you want to address.?The questions will keep on evolving as we look at data. \nFinally \"Analysis without question \/ or problems to solve  is aimless.\"\n\n I am using the Youtube Trending dataset to demonstrate the functions.I will not be covering the analysis other Kaggle teammates have performed so looking for some new question  in dataset for  India.(since the dataset may change i will be creating a subset till 25 April 2021).\n \n \nQuestions which I want to answer with this analysis :\n    \n- Which is most watched video in India. \u2753(Most watch doesnot mean trending)\n- Number of videos published in 2021\u2753<br>\n- How many videos did T-Series publish\u2753<br>\n-Top 30 videos that has been most watched\u2753<br>\n-Top 3 Categories having maximum pubished videos in 2020\u2753<br>\n-Top 10 Most liked videos in India\u2753\n<\/i><\/b><\/font>","e92e69c8":"# Missing Values\n\n","deaf13af":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b>\u2753Checking missing values\u2753<\/b><\/h1>","1dd2085d":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b>How many video did Channel \"T-Series\" publish in year 2020?<\/b><\/h1> ","2fc397a4":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b>\ud83d\udd2a Filtering and Slicing Data \ud83d\udd2a<\/b><\/h1>","04f50666":"<font size=3 style=\"font-family:COMIC SANS MS\" ><b><i><u>Converting Datatypes \ud83c\udfad:<\/u>\n        Pandas automatically assign datatype to the columns,depending on what data the columns hold.For eg weight column may have data in form of 60.5kg  so the datatype here would be object. But we want weight to be float . We can remove kg and change data type to float.<\/i><\/b><\/font>\n<table style =\"width:95%;border:black;border-width:1px; border- style:solid;  border-collapse: collapse\" >\n    <thead>\n        <tr>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \"> \n                Description \n            <\/th>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \">\n                Method      \n            <\/th>\n        <\/tr>\n    <\/thead>\n    <tbody>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To convert object datatype to categorical datatype \n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \"> \n                 df_india.description=df_india.description.astype(\"category\")\n            <\/td>\n        <\/tr>\n         <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To convert object datatype to Integer datatype \n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \"> \n                 df_india.description=df_india.description.astype(\"int\")\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To convert object datatype to float datatype \n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \"> \n                 df['DataFrame Column'] = df['DataFrame Column'].astype(float)\n            <\/td> \n        <\/tr>    \n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To Convert object to datetime datatype\n            <\/td>\n           <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" >                                                df_india.publishedAt=pd.to_datetime(df_india.publishedAt)\n            <\/td>\n        <\/tr>    \n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To make a copy of dataset\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" > \n                df_copy=df_india.copy()\n            <\/td>\n        <\/tr>\n    <\/tbody>\n<\/table>     ","be3c58ca":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b>\u2795\ud83e\ude78Add\/Rename\/Drop\/Filter Columns\u2795\ud83e\ude78<\/b><\/h1>","5c3cef03":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b>\ud83c\udf10 Basic Pandas functions \ud83c\udf10<\/b><\/h1>","4788f46f":"<div class =\"alert alert-block alert-info\">\n<font size=4><b><i>Check correct datatypes for each variables like datatime , category, int etc.<\/i><\/b><\/font><br>\n   Currently my dataset is small but in real world scenarios dataset are big so its a good practice to Use a Categorical for efficient storage of an object-dtype column with many repeated values.<br>\n   1.Changing channel id & Channel Title from object to category datatype<br>\n   2.Changing object to datetime for variables containing date\n   <\/div>","499ac172":"# Purpose of Analysis ","5f3d8820":"# Reading Data","1bfb24c4":"# Slicing Subsetting \n","5f756313":"<div class =\"alert alert-block alert-info\">\ud83e\udd89<b>Observations<\/b>\ud83e\udd89<br>\n\u2714In India dataset , description is missing from 662 observations and channeltitle is missing only 1 obeservation.\n","97eb661a":"<h1  style=\"font-family:COMIC SANS;background-color:lightpink\" ><b><center>Must Know Pandas functions \ud83d\udc3cand Basics of Data Analysis \ud83d\udee0<\/center><\/b><\/h1><br>","06560e54":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b><u>Top 30 most watched videos<\/u><\/b><\/h1> ","a0954636":"<table style =\"width:95%;border:black;border-width:1px; border- style:solid;  border-collapse: collapse\" >\n    <thead>\n        <tr>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \">                     Description \n            <\/th>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \">                     Method\n            <\/th>\n        <\/tr>\n    <\/thead>\n    <tbody>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                This function returns boolean value indicating whether values are missing (NaN)\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df.isna()\n            <\/td>\n        <\/tr>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                 This function check for not null or non-missing values.\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df.notna()\n            <\/td>\n        <\/tr>\n        <tr>    \n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n               This function is used to replace values with other values dynamically.\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                df.Replace()\n            <\/td>\n        <\/tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                This function returns boolean value indicating whether values are missing (NaN)\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                pd.isnull()\n            <\/td>\n        <tr>    \n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n               This function checks for not null or non-missing values.\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                pd.notnull()\n            <\/td>\n        <\/tr>\n        <tr>    \n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                This function is used to remove missing value.\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                pd.dropna()\n            <\/td>\n        <\/tr>\n        <tr>\n             <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n               Return a copy of the data with missing values filled or imputed\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                pd.fillna()\n            <\/td>\n         <\/tr>    \n    <\/tbody>\n<\/table><br>","84fd5741":"<div class =\"alert alert-block alert-info\">\ud83e\udd89<b>Observations<\/b>\ud83e\udd89<br>\n\u2714There are 14 different categories in dataset <br>\n\u2714 Categoryid 24 has maximum number of videos<br>\n\u2714There are 13887 unique video.<br>\n\u2714There are 1938 unique Channels<br>\n    <\/div>","67152d0a":"<br><h1 style=\"font-family:COMIC SANS;text-align:center;background-color:lightpink\" ><b>\ud83d\udcd1Table of Contents\ud83d\udcd1<\/b><\/h1><br>","ceebabf0":"<div class =\"alert alert-block alert-info\">\ud83e\udd89<b>Observations<\/b>\ud83e\udd89<br>\n \u2714There are 47473 rows and 16 columns in  the dataset<br>\n \u2714Qualitative Variables are title,channelId,channelTitle,categoryId are most important attributes for our analysis<br>\n \u2714Quantitative Variables are PublishedAt,trending_date,view_count,likes,\n    dislikes,comment_count<br>\n \u2714Columns tags,thumbnail_link,comments_disabled,ratings_disabled have not particular use in our analysis <br><\/div>","714e2674":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b>\ud83d\udcc4 Descriptive Statistics \ud83d\udcc4<\/b><\/h1>","4fbd565d":"   \n<div class =\"alert alert-block alert-info\">\n  <font size=4><b><i>We start with importing the pandas package along with other libraries.\ud83d\udcda<\/i><\/b><\/font><br>\n <\/div>","eb60b743":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b>How many video where published in year 2020?<\/b><\/h1> ","e3770966":"     \n      \n      \n<font size=3 style=\"font-family:COMIC SANS MS\">\n    <b>\n        <i><u>Checking and Handling Missing Values.:\u2753\u2753<\/u>\n   .When no data value is stored for feature for a particular observation, we say this feature has a missing value.Missing value handling is a post in itself and will be covered later <\/i>\n    <\/b>\n<\/font> ","7846640b":"<div class =\"alert alert-block alert-info\">\ud83e\udd89<b>Observations<\/b>\ud83e\udd89<br>\n \u2714The dataset contains observation of videos published from 23 August 2020 to 24 April 2021.<br>\n \u2714 There are 14 different categories in dataset <br>\n \u2714 Categoryid 24 has maximum number of rows.<br>\n  \u2714There are 13887 unique video\n ","fceb8c99":"<div class =\"alert alert-block alert-info\">\n<font size=4><b><i> We start with inspecting the dataset and record observations:<\/i><\/b><\/font><br>\n     1.Check if it is correct dataset ?.<br> \n     2.Check for attributes\/columns,check if headers are clean<br>\n     3.Number of row and columns in data set (Dimension of dataset) <br>\n     4.What are the data types of your data, and how many columns are numeric?<br>\n     5.Are the datatype correct .?\n    ","93c75f8b":"<div class =\"alert alert-block alert-info\">\n    <font size=4><b><i> Set path for Data file and Load data <\/i><\/b><\/font> .\n    \n<\/div>\n","8c06003e":"<h1 style=\"font-family:COMIC SANS ;text-align:center;background-color:lightpink\"><b><u>\ud83d\udcd6 Reading Data \ud83d\udcd6<\/u><\/b><\/h1>","7fd28301":"# Add Rename Drop Filter Columns\n  ","1d2d8133":"# Converting Datatypes\n \n","abb4547e":"   <font size=3 style=\"font-family:COMIC SANS MS\" ><b><i><u>Adding \/Renaming\/Dropping Columns <\/u>\u2795\ud83e\ude78\ud83e\ude78<\/i><\/b><\/font>\n        \n<table style =\"width:95%;border:black;border-width:1px; border- style:solid;  border-collapse: collapse\" >\n    <thead>\n        <tr>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \"> \n                Description \n            <\/th>\n            <th style=\"text-align:center;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;background-color:lightgreen ;padding: 10px \">\n                Method      \n            <\/th>\n        <\/tr>\n    <\/thead>\n    <tbody>\n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To add new columns to a dataframe.\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \"> \n                   df_india['count_max_view'] =df_india.groupby(['video_id'])['view_count'].transform(max)\n            <\/td>\n        <\/tr>\n         <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To rename a column\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \"> \n                 df_india.rename(columns={'description':'desc'})\n            <\/td>\n        <\/tr>    \n        <tr>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \">\n                To drop a column\n            <\/td>\n            <td style=\"text-align:left;border: 1px solid black;font-family:COMIC SANS MS;font-size:100%;padding: 10px \" > \n                df_india.drop()\n            <\/td>\n        <\/tr>    \n     <\/tbody>\n<\/table>      <br>\n \n\n  "}}