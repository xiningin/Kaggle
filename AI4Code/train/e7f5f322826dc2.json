{"cell_type":{"73d3a3af":"code","e04d637c":"code","15bd9180":"code","5b74284a":"code","04719b05":"code","74410884":"code","559d4fee":"code","bc5104be":"code","88708b98":"code","78b27f55":"code","4666b595":"code","83f4b6d1":"code","ab8ee134":"code","a3369bef":"code","9433ac5c":"code","a3e51a16":"code","7839a40b":"code","a7adc411":"code","8753a2fe":"code","c5bde5ca":"code","cd967ae0":"code","1378e244":"code","01cf6041":"code","68c8b366":"code","c19218f9":"code","d06fdcf7":"markdown","705c2c46":"markdown","88f4a2ec":"markdown","d159ef81":"markdown","b4a12585":"markdown","1e1078d2":"markdown","277d311d":"markdown","3dc288be":"markdown","06250282":"markdown","7f8b9a78":"markdown","492343c1":"markdown","73c5bfda":"markdown","46eeb8b5":"markdown"},"source":{"73d3a3af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e04d637c":"import pandas as pd\n#pd.options.display.max_columns = 9999 #Maximum columns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport missingno as msno\nimport matplotlib.pyplot as plt\n\nimport re\nimport spacy\n\nfrom collections import Counter\n\nimport plotly.express as px\n\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, accuracy_score\nfrom sklearn.model_selection import cross_val_score\n\nfrom xgboost import XGBClassifier","15bd9180":"df = pd.read_csv('..\/input\/newyork-room-rentalads\/room-rental-ads.csv')\ndf.sample(5)","5b74284a":"df.info()","04719b05":"df.describe()","74410884":"df.dtypes","559d4fee":"df.isnull().sum().any()","bc5104be":"df.isnull().sum()","88708b98":"msno.bar(df)\nplt.show()","78b27f55":"df.dropna(how='any', inplace=True)","4666b595":"df[\"Vague\/Not\"].value_counts()","83f4b6d1":"df.rename(columns = {\"Vague\/Not\":\"Target\"},inplace = True)\ndf.Target = df.Target.astype(\"int\").astype(\"category\")\ndf","ab8ee134":"#check for duplicates\n\nlen(df[df.duplicated()])","a3369bef":"df = df.drop_duplicates(subset=['Description'])\nprint(df.head())\nprint(df.shape)","9433ac5c":"#Normalisation using spaCy\n\nnlp = spacy.load('en')\n\ndef normalize(msg):\n    \n    msg = re.sub('[^A-Za-z]+', ' ', msg) #remove special character and intergers\n    doc = nlp(msg)\n    res=[]\n    for token in doc:\n        if(token.is_stop or token.is_punct or token.is_currency or token.is_space or len(token.text) <= 2): #Remove Stopwords, Punctuations, Currency and Spaces\n            pass\n        else:\n            res.append(token.lemma_.lower())\n    return res","a3e51a16":"df[\"Description\"] = df[\"Description\"].apply(normalize)\ndf.head()","7839a40b":"words_collection = Counter([item for sublist in df['Description'] for item in sublist])\nfreq_word_df = pd.DataFrame(words_collection.most_common(20))\nfreq_word_df.columns = ['frequently_used_word','count']\n\nfreq_word_df.style.background_gradient(cmap='Blues', low=0, high=0, axis=0, subset=None)","a7adc411":"fig = px.bar(freq_word_df, x='frequently_used_word', y='count', color='count', title='Most frequent words')\nfig.show()","8753a2fe":"df[\"Description\"] = df[\"Description\"].apply(lambda m : \" \".join(m))","c5bde5ca":"c = TfidfVectorizer(ngram_range=(1,2)) # Convert our strings to numerical values\nmat=pd.DataFrame(c.fit_transform(df[\"Description\"]).toarray(),columns=c.get_feature_names(),index=None)\nmat","cd967ae0":"X = mat\ny = df[\"Target\"]","1378e244":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)","01cf6041":"classifier = XGBClassifier()\nclassifier.fit(X_train, y_train)","68c8b366":"y_pred = classifier.predict(X_test)\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\naccuracy_score(y_test, y_pred)","c19218f9":"accuracies = cross_val_score(estimator = classifier, X = X_train, y = y_train, cv = 10)\nprint(\"Accuracy: {:.2f} %\".format(accuracies.mean()*100))\nprint(\"Standard Deviation: {:.2f} %\".format(accuracies.std()*100))","d06fdcf7":"**Sources**\n\nhttps:\/\/www.kaggle.com\/kamalkhumar\/newyork-room-rental-ads-eda-and-prediction-nlp\n\nhttps:\/\/charlescsr.github.io\/mlnotes\/python\/spacy\/spacy-remove-stopwords\/\n\nhttps:\/\/charlescsr.github.io\/mlnotes\/python\/pandas\/max-number-of-columns\/","705c2c46":"<font color=\"red\" size=+1.5><b>I have done notebooks in:<\/b><\/font>\n\n<div style=\"margin-bottom: 20px;\">\n    &nbsp;\n<div style=\"float:left; margin-right:10px;\">\n<a href=\"https:\/\/www.kaggle.com\/charlessamuel\/santander-value-prediction\" class=\"btn btn-info\" style=\"color:white;\">Santander Value Prediction<\/a>\n<\/div>\n \n<div style=\"float:left; margin-right:10px;\"> \n<a href=\"https:\/\/www.kaggle.com\/charlessamuel\/credit-card-fraud-detection-anomaly-detection\" class=\"btn btn-info\" style=\"color:white;\">Credit Card Fraud Detection<\/a>\n<\/div>\n\n<div style=\"float:left; margin-right:10px;\">   \n<a href=\"https:\/\/www.kaggle.com\/charlessamuel\/are-you-getting-the-loan-loan-status-prediction\" class=\"btn btn-info\" style=\"color:white;\">Loan Status Prediction<\/a>\n<\/div>\n<\/div>\n    \n<div style=\"float:left; margin-right:10px;\">    \n<a href=\"https:\/\/www.kaggle.com\/charlessamuel\/sms-spam-or-not-base-csr\" class=\"btn btn-info\" style=\"color:white;\">SMS Spam or Not<\/a><br><br>\n<\/div> ","88f4a2ec":"Float values when its 1 or 0. Let us convert that to int and then a catgeory and that is our target","d159ef81":"Oh! Our description was all in lists. Let's change that shall we? ","b4a12585":"Much better","1e1078d2":"We have null values. Seems small enough to drop them","277d311d":"# Classification","3dc288be":"# DataFrame Analysis","06250282":"# NLP Work","7f8b9a78":"**Closing Notes:**\n\n* Still got a lot of potential\n\n* Maybe tune it a bit better with GridSearchCV\n\n\nIf you liked this notebook, don't forget to upvote. That would be a big boost of motivation for me to write better code.","492343c1":"<div style=\"float:right; font-size:30px\">\n    CSR\n<\/div>","73c5bfda":"# K-fold Cross Validation","46eeb8b5":"Huh duplicates. I smell higher accuracy with that around let's get rid of them"}}