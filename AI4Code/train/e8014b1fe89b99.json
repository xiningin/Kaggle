{"cell_type":{"2a8f64fc":"code","94185fab":"code","ef7d1afd":"code","84aef8e9":"code","8ef1e7fc":"code","ce96f7fe":"code","5ada526e":"code","9b8279da":"code","eabb19db":"code","890a224e":"code","4be2110b":"code","b405a755":"code","eca0bc64":"code","5c86c60c":"code","0e13067c":"code","834edac2":"code","a6729fc8":"code","66c9fa27":"code","8d3fdf8f":"markdown","badbf349":"markdown","7343014f":"markdown","f1dc1541":"markdown","3c47a43c":"markdown","27d576a7":"markdown","48f059f2":"markdown","578894d3":"markdown","872de4bd":"markdown","11239a94":"markdown","f37a8d3f":"markdown","9430a8df":"markdown","4fff6b34":"markdown","66dde1c6":"markdown","5cb716e8":"markdown","b9ce14a1":"markdown","c47eac13":"markdown","421a1337":"markdown","bc9090ff":"markdown","3080b1e5":"markdown","4c4bd3aa":"markdown","88549961":"markdown","9d808657":"markdown","706b769d":"markdown","cf658153":"markdown","cc755e75":"markdown","d3164446":"markdown","a08a9641":"markdown"},"source":{"2a8f64fc":"# importing the libraries\nimport numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom csv import reader\nfrom mlxtend.preprocessing import TransactionEncoder\nfrom mlxtend.frequent_patterns import apriori, association_rules","94185fab":"# reading the dataset\ngroceries = []\nwith open('..\/input\/groceries\/groceries.csv', 'r') as read_obj:\n    csv_reader = reader(read_obj)\n    for row in csv_reader:\n        groceries.append(row)","ef7d1afd":"# items = set(sum(groceries, []))","84aef8e9":"# df = pd.DataFrame(columns=items)","8ef1e7fc":"# for i in range(len(groceries)):\n#     transaction = []\n#     for item in items:\n#         if item in groceries[i]:\n#             transaction.append(1)\n#         else:\n#             transaction.append(0)\n#     print(transaction)\n#     df = df.append(transaction, ignore_index=True)          ","ce96f7fe":"# fitting the list and converting the transactions to true and false\nencoder = TransactionEncoder()\ntransactions = encoder.fit(groceries).transform(groceries)","5ada526e":"# converting the true and false to 1 and 0\ntransactions = transactions.astype('int')","9b8279da":"# converting the transactions array to a datafrmae\ndf = pd.DataFrame(transactions, columns=encoder.columns_)","eabb19db":"# viewing the first few rows of the dataframe\ndf.head()","890a224e":"# finding the dimensions of the dataframe\ndf.shape","4be2110b":"# applying the apriori algorithm\nfrequent_itemsets = apriori(df, min_support=0.02, use_colnames=True)\nfrequent_itemsets['length'] = frequent_itemsets['itemsets'].apply(lambda x: len(x))\nfrequent_itemsets","b405a755":"# sorting the dataframe\nfrequent_itemsets = frequent_itemsets.sort_values(by='support', ascending=False)","eca0bc64":"# finding top 5 items with minimum support of 2%\nfrequent_itemsets[ (frequent_itemsets['length'] == 1) &\n                   (frequent_itemsets['support'] >= 0.02) ][0:5]","5c86c60c":"# finding itemsets having length more than 1 and minimum support of 5%\nfrequent_itemsets[(frequent_itemsets['length'] > 1) & \n                  (frequent_itemsets['support'] >= 0.05)]","0e13067c":"# finding itemsets having length 2 and minimum support of 2%\nfrequent_itemsets[(frequent_itemsets['length'] == 2) & \n                  (frequent_itemsets['support'] >= 0.02)]","834edac2":"# finding top 10 association rules with minimum support of 2%\nrules = association_rules(frequent_itemsets, metric='support', min_threshold=0.02)\nrules","a6729fc8":"# sorting the rules in the descending order by confidence\nrules.sort_values(by='confidence', ascending=False)[0:10]","66c9fa27":"# finding association rules with minimum support of 2% and having lift more than 1\nrules[(rules['support'] >= 0.02) &\n      (rules['lift'] > 1.0)]","8d3fdf8f":"As we can see, there are 61 itemsets having length 2 with support more than or equal to 2%. The support ranges between 7% and 2% with other vegetables and whole milk having the highest support, and butter and other vegetables having the minimum support.","badbf349":"To solve Question 8, we filter the dataframe to have lift more than 1.","7343014f":"To prepare the data for the following questions, we apply the Apriori algorithm on the dataframe and set the minimum support parameter to 2%.","f1dc1541":"First, we import the libraries:\n\n*   NumPy - for data manipulation.\n*   Pandas - for data manipulation.\n*   MatPlotLib - for data visualization.\n*   Seaborn - for data visualization.\n*   CSV Reader - to read the dataset.\n*   MLXtend - to apply the Apriori Algorithm.","3c47a43c":"Author: Khushee Kapoor\n\nLast Updated: 20\/12\/2021\n\n**Meta-Data** of the Groceries Dataset:\n\nThe dataset contains a list of transactions and the items purchased in each transaction in a Super-Market.","27d576a7":"#### **Q5.** Find all frequent itemsets with minimum support of 5%.","48f059f2":"As we can see, there are only 3 itemsets - other vegetables and whole milk, rolls\/buns and whole milk, and yogurt and whole milk each of length 2 and having support of 7%, 5.66% and 5.60% respectively.","578894d3":"Naive approach to form the transaction dataframe:\n\n1.   To find the unique items - flatten the list and convert it into a set. The conversion removes any duplicate values, and hence, we are left with only the unique items in the dataset.\n2.   Convert the set of unique items into an empty Pandas dataframe.\n3.   Find every item in a transaction and append 1 if found and 0 if not found. This fills the empty dataframe previously created.\n\n","872de4bd":"Next, we filter the dataframe to find items with length 1 and support more than equal to 2%. Then we splice the sorted and filtered dataframe to show only the top 5 entries.","11239a94":"The above method works, but is very time inefficient. To solve the problem in significantly less time, we use the TransactionEncoder class from the MLXtend library. We fit the object of the class on the list and convert it into a Pandas dataframe with 1 representing item is purchased in that transaction, and 0 representing that the item is not purchased in that transaction.","f37a8d3f":"## Market Basket Analysis - Groceries Dataset","9430a8df":"Next, we read the dataset into a list. Here, we use the csv_reader() function fromt the CSV Reader library instead of the read_csv() function from the Pandas library because the number of columns in each row is different (ragged arrays).","4fff6b34":"To solve the following questions, we prepare the transaction dataframe to a format to which we can apply the Apriori algorithm.","66dde1c6":"To solve Question 5, we filter the dataframe to find itemsets having length more than 1, and support more than 5%.","5cb716e8":"To solve Question 4, first we sort the dataframe by support in the descending order by using the sort_values() function from the Pandas library and setting the by and ascending parameters to support and False respectively.","b9ce14a1":"To solve Question 6, we filter the dataframe to find itemsets having length 2 and minimum support of 2%.","c47eac13":"As we can see, there are 126 rules having support of 2% or more and lift more than 1. All the items in these rules have a positive correlation with each other, indicating if the sales of one goes up, the sales of the other goes up as well and vice versa.","421a1337":"#### **Q1** How many transactions and items are there in the data set?\n","bc9090ff":"As we can see, whole milk, other vegetables, rolls\/buns, soda and yogurt are the top 5 selling items with support of 25%, 19%, 18%, 17%, and 14% respectively.","3080b1e5":"To solve Question 1, we use the shape attribute of a Pandas dataframe. Here, the number of rows represent the number of transactions, and the number of columns represent the number of items in the dataset.","4c4bd3aa":"#### **Q7.** Find the top 10 association rules with minimum support of 2%, sorted by confidence in descending order.\n","88549961":"#### **Q6.**  Find all frequent itemsets of length 2 with minimum support of 2%.","9d808657":"To solve Question 7, we first find the association rules using the association_rules() function from the MLXtend library and set the parameter metric to support, and the min_threshold to 2%.","706b769d":"Then we sort the generated association rules in the descending order by confidence by using the sort_values() function from the Pandas library and setting the by and ascending parameters to confidence and False respectively. Then we splice the sorted dataframe to show the top 10 rules.","cf658153":"#### **Q4** Find top selling items with minimum support of 2%.","cc755e75":"As we can see, the top association rule is that if a customer buys other vegetables and yogurt, they also by whole milk, with a support of 2%, confidence of 51% and lift value of 2 indicating a positive correlation (if the sales of other vegetables and yogurt goes up, the sales of whole milk also goes up and vice versa). Similarly, we can read and interpret the other rules.","d3164446":"As we can see, there are 9835 rows, meaning 9835 transactions, and 169 columns, meaning 169 items in the dataset.","a08a9641":"#### **Q8.** Find association rules with minimum support of 2% and lift of more than 1.0.\n"}}