{"cell_type":{"f91de875":"code","70940a5f":"code","5c364873":"code","ef642db0":"code","a692ec94":"code","577f5e60":"code","d9282798":"code","1ad8c311":"code","a20c9a64":"code","2fb3fa7c":"code","1923932c":"code","caf02633":"code","2fcb9f12":"code","dfcdcc72":"markdown","6b7580c3":"markdown","90d49a32":"markdown","dec50d2c":"markdown","bf6781d4":"markdown","3b19780d":"markdown","ec4e98b6":"markdown","4af5e8de":"markdown","0af8e659":"markdown","c5a1147c":"markdown","29215ac8":"markdown"},"source":{"f91de875":"import pandas as pd\nimport numpy as np\nimport plotly as py\nimport plotly.graph_objects as go\nimport json","70940a5f":"df_1995=pd.read_csv('..\/input\/tree-census\/new_york_tree_census_1995.csv')\ndf_2005=pd.read_csv('..\/input\/tree-census\/new_york_tree_census_2005.csv')\ndf_2015=pd.read_csv('..\/input\/tree-census\/new_york_tree_census_2015.csv')\ndf_trees=pd.read_csv('..\/input\/tree-census\/new_york_tree_species.csv')","5c364873":"f = open('..\/input\/nycntamap\/NTA_map.geojson')\nnta_json = json.load(f)\nfor i in list(range(0,len(nta_json['features']))):\n    json_id=nta_json['features'][i]['properties']['ntacode']\n    nta_json['features'][i]['id']=json_id","ef642db0":"df_1995.columns","a692ec94":"df_2005.columns","577f5e60":"df_2015.columns","d9282798":"data=[]\ndata.append(go.Choroplethmapbox(geojson=nta_json, \n                                    locations=df_1995.nta_2010.value_counts().drop(index='Unknown').index, \n                                    z=df_1995.nta_2010.value_counts().drop(index='Unknown').values,\n                                #'Unknown' tree location is by far most common (23k) but is dropped from the map\n                                    colorbar=dict(title='1995'),\n                                    colorscale=\"YlGn\"\n                                    ))\ndata.append(go.Choroplethmapbox(geojson=nta_json, \n                                    locations=df_2005.nta.value_counts().index, \n                                    z=df_2005.nta.value_counts().values,\n                                    colorbar=dict(title='2005'),\n                                    colorscale=\"YlGn\"\n                                    ))\ndata.append(go.Choroplethmapbox(geojson=nta_json, \n                                    locations=df_2015.nta.value_counts().index, \n                                    z=df_2015.nta.value_counts().values,\n                                    colorbar=dict(title='2015'),\n                                    colorscale=\"YlGn\"\n                                    ))\ndata[0]['visible']=False\ndata[1]['visible']=False\ndata[2]['visible']=True\nlayout=go.Layout(mapbox_style=\"carto-positron\",\n                  mapbox_zoom=9, mapbox_center = {\"lat\": 40.7, \"lon\": -73.86})\n#dropdown code from https:\/\/plot.ly\/~empet\/15237\/choroplethmapbox-with-dropdown-menu\/#\/\nlayout.update(updatemenus=list([\n        dict(\n            x=-0.05,\n            y=1,\n            yanchor='top',\n            buttons=list([\n                dict(\n                    args=['visible', [True, False,False]],\n                    label='Year: 1995',\n                    method='restyle'\n                ),\n                dict(\n                    args=['visible', [False, True, False]],\n                    label='Year: 2005',\n                    method='restyle'\n                ),\n                dict(\n                    args=['visible', [False,False, True]],\n                    label='Year: 2015',\n                    method='restyle')]))]))\nfig = go.Figure(data=data,layout=layout)\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","1ad8c311":"nta_count_2005=pd.DataFrame(df_2005.nta.value_counts()).reset_index()\nnta_count_2015=pd.DataFrame(df_2015.nta.value_counts()).reset_index()\nnta_count_diff=nta_count_2015.merge(nta_count_2005, on='index')\nnta_count_diff['change']=nta_count_diff['nta_x']-nta_count_diff['nta_y']\nnta_count_diff.head()","a20c9a64":"nta_count_diff['change'].describe()","2fb3fa7c":"import matplotlib.pyplot as plt\nnta_count_diff['change'].hist(bins=20)\nplt.title('Histogram of Tree Count changes 2005-2015 by NTA')\nplt.xlabel('Tree Counts')\nplt.show()","1923932c":"data=[]\ndata.append(go.Choroplethmapbox(geojson=nta_json ,\n                                    locations=df_2015.nta.value_counts().index, \n                                    z=nta_count_diff.change.values,\n                                    colorbar=dict(title=',2015-2005 Change'),\n                                    colorscale=[[0, \"red\"],\n                                                [0.15,'yellow'],\n                                               [1, \"green\"]]\n                                    ))\n\nlayout=go.Layout(mapbox_style=\"carto-positron\",\n                  mapbox_zoom=9, mapbox_center = {\"lat\": 40.7, \"lon\": -73.86})\n\n\nfig = go.Figure(data=data,layout=layout)\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","caf02633":"temp_df=df_2015.dropna().loc[df_2015.dropna()['spc_common'].str.contains('pine')][['spc_common','latitude','longitude']]\ndata=[]\nfor t in temp_df['spc_common'].value_counts().index:\n    data.append(go.Scattermapbox(lat=temp_df.loc[df_2015.dropna()['spc_common']==(t)]['latitude'],\n                               lon=temp_df.loc[df_2015.dropna()['spc_common']==(t)]['longitude'],\n                               mode='markers',\n                                 name=t,\n                              marker=go.scattermapbox.Marker(size=5)\n                      ))\nlayout=go.Layout(mapbox_style=\"carto-positron\",\n                  mapbox_zoom=9, mapbox_center = {\"lat\": 40.7, \"lon\": -73.86})\nfig = go.Figure(data=data,layout=layout)\nfig.update_layout(margin={\"r\":0,\"t\":20,\"l\":0,\"b\":0})\nfig.show()","2fcb9f12":"temp_df=df_2015.dropna().loc[df_2015.dropna()['spc_common'].str.contains('dogwood')][['spc_common','latitude','longitude']]\ndata=[]\nfor t in temp_df['spc_common'].value_counts().index:\n    data.append(go.Scattermapbox(lat=temp_df.loc[df_2015.dropna()['spc_common']==(t)]['latitude'],\n                               lon=temp_df.loc[df_2015.dropna()['spc_common']==(t)]['longitude'],\n                               mode='markers',\n                                 name=t,\n                              marker=go.scattermapbox.Marker(size=5)\n                      ))\nlayout=go.Layout(mapbox_style=\"carto-positron\",\n                  mapbox_zoom=9, mapbox_center = {\"lat\": 40.7, \"lon\": -73.86})\nfig = go.Figure(data=data,layout=layout)\nfig.update_layout(margin={\"r\":0,\"t\":20,\"l\":0,\"b\":0})\nfig.show()","dfcdcc72":"Interactive map now available!\nhttp:\/\/nyc-tree-mapper.herokuapp.com\/","6b7580c3":"Import the Data and view column names","90d49a32":"On average the change in tree numbers was a gain of 620 trees and follows an approximately normal distribution with 1 outlier","dec50d2c":"Choropleth of tree numbers per NTA in 1995, 2005, 2015. Select a year from the dropdown menus on the left.<br>\nPlaces like Central Park and Prospect Park are NOT included in the tree census. <br>\nThe tree-lined suburbia of Staten Island wins every year at having the most trees.","bf6781d4":"Point map similar to the above for dogwaood varieties","3b19780d":"# New York Tree Census (1995, 2005, 2015)\n\n### Context\n>New York City\u2019s trees shade us in the summer, beautify our neighborhoods, help reduce noise, and support urban wildlife. Beyond these priceless benefits, our urban forest provides us a concrete return on the financial investment we put into it. This return includes stormwater interception, energy conservation, air pollutant removal, and carbon dioxide storage. Our publicly owned trees are as much of an asset to us as our streets, sewers, bridges, and public buildings.\n\n### Content\nThis dataset includes a record for every tree in New York City and includes the tree's location by borough and latitude\/longitude, species by Latin name and common names, size, health, and issues with the tree's roots, trunk, and branches.\n\n### Acknowledgements\nThe 2015, 2005, and 1995 tree censuses were conducted by NYC Parks and Recreation staff, TreesCount! program staff, and hundreds of volunteers.\n\n## NTA Map obtained from NYC Open Data\n\nhttps:\/\/data.cityofnewyork.us\/City-Government\/NTA-map\/d3qk-pfyz\n\n### NTA map\nBoundaries of Neighborhood Tabulation Areas as created by the NYC Department of City Planning using whole census tracts from the 2010 Census as building blocks. These aggregations of census tracts are subsets of New York City's 55 Public Use Microdata Areas (PUMAs).\n\nThe geojson file obtained is edited to copy the NTA code from *features.properties.ntacode* to *features.id*.<br>\nThis was done to accommodate the plotly choropleth which must have the json in this format to read.\n\n## Interactive Tree Type Finder\n\nFind all your favourite types of tree in New York! I have created an interactive map of New York City with tree type input using Dash and deployed through Heroku<br>\nhttp:\/\/nyc-tree-mapper.herokuapp.com\/","ec4e98b6":"geojson reformatted ot have NTA code as *feature.id*","4af5e8de":"Take value counts from census DataFrames and find the difference between 2005 and 2015 for NTAs","0af8e659":"Choropleth of change in tree numbers per NTA from 2005 to 2015.\nBrooklyn NTA BK82 gained the most trees: 5941\nBronx NTA BX22 lost the most trees: -1151.","c5a1147c":"## Acknowledgements\nThe 2015, 2005, and 1995 tree censuses were conducted by NYC Parks and Recreation staff, TreesCount! program staff, and hundreds of volunteers.<br>\nMultiyear choropleth dropdown menu formatting borrowed from this excellent example:\nhttps:\/\/plot.ly\/~empet\/15237\/choroplethmapbox-with-dropdown-menu\/#\/","29215ac8":"Point map of pine tree types. The map is generated to match all or partial uses of the input string. Each species match is assigned a color and plotly allows species to be selected or deselected from the legend on the right side. "}}