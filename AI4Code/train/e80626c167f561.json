{"cell_type":{"9cc63d5c":"code","6946774f":"code","a0ee1deb":"code","c87b531c":"code","f86b8a2b":"code","6e16c6c7":"code","39146a19":"code","2af89a21":"code","a41f5467":"markdown","eff4df4f":"markdown","ae40fe5a":"markdown","7911f782":"markdown"},"source":{"9cc63d5c":"!git clone 'https:\/\/github.com\/bala-codes\/Yolo-V5_Object_Detection_Blood_Cell_Count_and_Detection.git' # For dataset downloading\n!git clone  'https:\/\/github.com\/ultralytics\/yolov5.git' # For loading official yolo-v5","6946774f":"import shutil\nimport os, sys, random\nfrom glob import glob\nimport pandas as pd\nfrom shutil import copyfile\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom matplotlib import patches\nimport numpy as np\nimport os","a0ee1deb":"shutil.copyfile('\/kaggle\/working\/Yolo-V5_Object_Detection_Blood_Cell_Count_and_Detection\/codes\/bcc-kaggle.yaml', '\/kaggle\/working\/yolov5\/bcc-kaggle.yaml')\n","c87b531c":"!pip install --upgrade pip\n!pip install Cython\n!pip install matplotlib>=3.2.2\n!pip install numpy>=1.18.5\n!pip install opencv-python>=4.1.2\n!pip install pillow\n!pip install PyYAML>=5.3\n!pip install scipy>=1.4.1\n!pip install tensorboard>=2.2\n!pip install tqdm>=4.41.0\n!pip install torch===1.6.0 torchvision===0.7.0 -f https:\/\/download.pytorch.org\/whl\/torch_stable.html\n","f86b8a2b":"import torch, torchvision\nimport torch.nn as nn\nimport torch.nn.functional as F\nprint(torch.__version__, torchvision.__version__)\nos.getcwd()","6e16c6c7":"%%time\n# Here I have provided only one epoch, feel free to increment it !!!\n\n!python yolov5\/train.py --img 640 --batch 8 --epochs 1 --data yolov5\/bcc-kaggle.yaml --cfg \/kaggle\/working\/Yolo-V5_Object_Detection_Blood_Cell_Count_and_Detection\/Inference_files\/models\/yolov5s.yaml --name BCCM","39146a19":"# Detection or Run Inference on the model\n!python yolov5\/detect.py --source \/kaggle\/working\/Yolo-V5_Object_Detection_Blood_Cell_Count_and_Detection\/dataset-preprocessed\/bcc\/images\/valid\/ --weights \/kaggle\/working\/Yolo-V5_Object_Detection_Blood_Cell_Count_and_Detection\/Inference_files\/best_BCCM.pt","2af89a21":"disp_images = glob('\/kaggle\/working\/inference\/output\/*')\nfig=plt.figure(figsize=(20, 28))\ncolumns = 3\nrows = 5\nfor i in range(1, columns*rows +1):\n    img = np.random.choice(disp_images)\n    img = plt.imread(img)\n    fig.add_subplot(rows, columns, i)\n    plt.imshow(img)\nplt.show()","a41f5467":"# **Running Yolo-v5 is tricky in kaggle when compared to Google Colab, still I have managed to run in kaggle, feel free to look at my google colab implementation of yolo-v5 from the above links**","eff4df4f":"# Before you use this notebook, to get more insights about Yolo-V5 and running it on custom datasets, please read this blog I've written - [Link](https:\/\/medium.com\/towards-artificial-intelligence\/yolo-v5-object-detection-on-a-custom-dataset-61d478bc08f9) and for the complete error-free Blood Cell Count dataset along with yolo-v5 codes available on my github - [Link](https:\/\/github.com\/bala-codes\/Yolo-V5_Object_Detection_Blood_Cell_Count_and_Detection)\n\n","ae40fe5a":"# To train the model, we need to pass some parameters\n\n**1. Path of train.py**\n\n**2. --img <img size (int)>**\n\n**3. --batch <batch size (int)>**\n\n**4. --epochs <No. of Epochs to train (int)> [Choose your preferred epochs]**\n\n**5. --data <Path of your dataset's yaml file>**\n\n**6. --cfg <path of your preferred yolo model's yaml file> [choose from yolos\/m\/l\/x (small, medium, large, xlarge)]**\n\n**7. --name <\"name of your saved model after training\"> [Usually stored at \"runs\/exp5_BCCM\/weights\/filename.pt\"]**","7911f782":"# Detection or Model Inference\n\n**1. Path of detect.py**\n\n**2. --source <\"Provide the path of single image or folder path for multiple image prediction\">**\n\n**3. --weights <\"Load the weights saved from training your model\">[Here I have loaded my saved model]**"}}