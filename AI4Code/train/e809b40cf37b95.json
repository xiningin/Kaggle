{"cell_type":{"f417b38b":"code","3a66d6fb":"code","75e4e4c7":"code","9f97ae70":"code","96931f7b":"code","dd8d127b":"code","6360c991":"code","aceba285":"code","4ce1b446":"code","5237f36a":"code","2f74126c":"code","c49c0e6a":"code","b5cada0c":"code","0452a7f3":"code","c6b9c51b":"code","afef360c":"code","61f5070f":"code","1fe2a65c":"code","c7f0323c":"code","bb48e493":"code","560c8834":"code","ad27425d":"code","23a07c6c":"code","d7f95591":"code","3d022ea9":"code","8d6e6463":"code","10ca5a32":"code","2da4ff64":"markdown","b43b8ed1":"markdown","60450244":"markdown","60cb0072":"markdown","263c7f35":"markdown","517b43f4":"markdown"},"source":{"f417b38b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(\n            dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3a66d6fb":"buts = pd.read_csv('..\/input\/top-football-leagues-scorers\/Data.csv')","75e4e4c7":"t = pd.read_csv('..\/input\/soccer-players-values-and-their-statistics\/transfermarkt_fbref_201920.csv',sep=';')","9f97ae70":"t.head()","96931f7b":"for column in pd.read_csv('..\/input\/soccer-players-values-and-their-statistics\/transfermarkt_fbref_201920.csv',sep=';') :\n    print(column)","dd8d127b":"t = t[['player','value','nationality','position','squad','goals','goals_per_shot','passes_completed','assisted_shots','passes_blocked','tackles_won','dribbled_past','touches']]","6360c991":"for column in t :\n    print(column)","aceba285":"t.head(10)","4ce1b446":"t.shape","5237f36a":"joueur_v2 = [i for i in t['player']]","2f74126c":"for indice_j,nom_j in enumerate(joueur_v2) :\n    tab_c = list(nom_j)\n    l = len(tab_c)\n    for indice_c,caractere in enumerate(tab_c) :\n        if caractere == '\u0102' :\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\\x81' :\n                    tab_c[indice_c] = 'A'\n                    del tab_c[indice_c + 1]\n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\\xad' :\n                    tab_c[indice_c] = 'i'\n                    del tab_c[indice_c + 1]\n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\\x98' :\n                    tab_c[indice_c] = 'O'\n                    del tab_c[indice_c + 1]\n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u00a9' :\n                    tab_c[indice_c] = 'e'\n                    del tab_c[indice_c + 1]\n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u02c7' :\n                    tab_c[indice_c + 1] = 'a'\n                    del tab_c[indice_c + 1]  \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u2030' :\n                    tab_c[indice_c] = 'E'\n                    del tab_c[indice_c + 1]   \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u0142' :\n                    tab_c[indice_c] = 'o'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u00ab' :\n                    tab_c[indice_c] = 'e'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u017b' :\n                    tab_c[indice_c] = 'i'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u2021' :\n                    tab_c[indice_c] = 'c'\n                    del tab_c[indice_c + 1]  \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u2013' :\n                    tab_c[indice_c] = 'O'\n                    del tab_c[indice_c + 1]    \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u201c' :\n                    tab_c[indice_c] = 'O'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u00b1' :\n                    tab_c[indice_c] = 'n'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '' :\n                    tab_c[indice_c] = 'A'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u013d' :\n                    tab_c[indice_c] = 'u'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u00b6' :\n                    tab_c[indice_c] = 'o'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u00b8' :\n                    tab_c[indice_c] = 'o'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u015e' :\n                    tab_c[indice_c] = 'e'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u00a7' :\n                    tab_c[indice_c] = 'c'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u015f' :\n                    tab_c[indice_c] = 'u'\n                    del tab_c[indice_c + 1]\n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u00a4' :\n                    tab_c[indice_c] = 'a'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u00b0' :\n                    tab_c[indice_c] = 'o'\n                    del tab_c[indice_c + 1] \n                    break\n                else :\n                    tab_c[indice_c] = 'a'\n                    break\n        if caractere == '\u0141':\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == 'o' :\n                    tab_c[indice_c] = 'o'\n                    del tab_c[indice_c + 1] \n                    break\n        if caractere == '\u0139' :\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u017a' :\n                    tab_c[indice_c] = 's'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\\x81' :\n                    tab_c[indice_c] = 'L'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\\xa0' :\n                    tab_c[indice_c] = 'S'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u02c7' :\n                    tab_c[indice_c] = 's'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u013e' :\n                    tab_c[indice_c] = 'z'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u00bb' :\n                    tab_c[indice_c] = 'Z'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u201e' :\n                    tab_c[indice_c] = 'n'\n                    del tab_c[indice_c + 1] \n                    break\n        if caractere == '\u00c4' :\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u203a' :\n                    tab_c[indice_c] = 'e'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u0164' :\n                    tab_c[indice_c] = 'c'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u2026' :\n                    tab_c[indice_c] = 'a'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u2122' :\n                    tab_c[indice_c] = 'e'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u2021' :\n                    tab_c[indice_c] = 'c'\n                    del tab_c[indice_c + 1] \n                    break\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\\x83' :\n                    tab_c[indice_c] = 'a'\n                    del tab_c[indice_c + 1] \n                    break\n        if caractere == '\u010c' :\n                if (indice_c + 1) < l and tab_c[indice_c + 1] == '\u203a' :\n                    tab_c[indice_c] = 't'\n                    del tab_c[indice_c + 1] \n                    break\n    joueur_v2[indice_j] = \"\".join(tab_c)","c49c0e6a":"t = t.drop(['player'], axis=1)","b5cada0c":"t.head()","0452a7f3":"t.insert(0, 'player', joueur_v2)","c6b9c51b":"t.head()","afef360c":"buts.head()","61f5070f":"buts = buts.rename(columns = {'Player Names': 'player'})","1fe2a65c":"index = []\ni = 0\nwhile buts['Year'][i] < 2020 :\n    index += [i]\n    i += 1\nbuts.drop(index , inplace=True)","c7f0323c":"buts = buts.drop(['Country','Club','Year','xG','Matches_Played','Goals'], axis = 1)","bb48e493":"buts.head()","560c8834":"t.head()","ad27425d":"t_final = pd.merge(buts, t)","23a07c6c":"t_final.shape","d7f95591":"li = [i for i in t_final['League']]","3d022ea9":"for i in range(54,69) :\n    li[i] = 'Ligue 1'","8d6e6463":"t_final = t_final.drop(['League'], axis=1)\nt_final.insert(0, 'League', li)","10ca5a32":"t_final.head()","2da4ff64":"# BUTS","b43b8ed1":"# Probleme ligues fran\u00e7aises","60450244":"# Transferts","60cb0072":"### Remplacement des caract\u00e8res corrompus","263c7f35":"# Merge","517b43f4":"# A EXECUTER 3 FOIS"}}