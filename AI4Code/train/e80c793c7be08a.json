{"cell_type":{"599d226c":"code","ae21ac04":"code","2e844486":"code","670c8cca":"code","5830379e":"code","79a22f71":"code","951cb403":"code","5d6aa5b4":"code","9b8bd7ef":"code","dd6f7b11":"markdown","669aaa28":"markdown","4a0fb0af":"markdown","487a5561":"markdown","63c7a15f":"markdown","7857adab":"markdown","347b97ad":"markdown","72f2f0b4":"markdown"},"source":{"599d226c":"import gc\nfrom tqdm import tqdm\nfrom tqdm._tqdm import trange\nimport numpy as np\nimport pandas as pd\nfrom pylab import rcParams\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_squared_error\nfrom scipy.stats import probplot\nfrom fbprophet import Prophet\n\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","ae21ac04":"folder = '\/kaggle\/input\/m5-forecasting-accuracy\/'\ncalendar = pd.read_csv(folder+'calendar.csv')\nvalidation = pd.read_csv(folder+'sales_train_validation.csv')\nsubmission = pd.read_csv(folder+'sample_submission.csv')\n\nsubmission = submission[submission.id.str.find('validation')!=-1]\nvalidation = validation.merge(submission, on='id', how='left')\nvalidation = validation.drop(['item_id','dept_id','cat_id','store_id','state_id'], axis=1)\n\nvalid_cols = ['d_'+str(1913+i) for i in range(1,29)]\nvalidation.columns = validation.columns.tolist()[:-28]+valid_cols\nvalidation.columns","2e844486":"submission","670c8cca":"validation","5830379e":"item1 = validation.iloc[0]\nitem1 = item1.drop('id').T.reset_index().merge(calendar[['d','date']], left_on='index', right_on='d', how='left').drop(['index','d'], axis=1)\nitem1.columns = ['y', 'ds']\nitem1.y = item1.y.astype('float')\nitem1.ds = item1.ds.astype('datetime64')\n\nrcParams['figure.figsize'] = 20, 5\nplt.plot(item1.ds, item1.y)","79a22f71":"item = validation.iloc[0]\nitem = item.drop('id').T.reset_index().merge(calendar[['d','date']], left_on='index', right_on='d', how='left').drop(['index','d'], axis=1)\nitem.columns = ['y', 'ds']\nitem.y = item.y.astype('float')\nitem.ds = item.ds.astype('datetime64')\ntrain_item = item.iloc[:-28]\nvalid_item = item.iloc[-28:]\n\nph = Prophet()\nph.fit(train_item)\nforecast = ph.predict(item[['ds']])\nfigure = ph.plot(forecast)\nfigure.show()","951cb403":"for i in trange(len(validation)):\n    item = validation.iloc[i]\n    item_id = item.id\n    item = item.drop('id').T.reset_index().merge(calendar[['d','date']], left_on='index', right_on='d', how='left').drop(['index','d'], axis=1)\n    item.columns = ['y', 'ds']\n    item.y = item.y.astype('float')\n    item.ds = item.ds.astype('datetime64')\n    train_item = item.iloc[:-28]\n    valid_item = item.iloc[-28:]\n\n    ph = Prophet()\n    ph.fit(train_item)\n    forecast = ph.predict(valid_item[['ds']])\n    validation.iloc[i, -28:] = forecast.yhat.tolist()\n    break # FIXME","5d6aa5b4":"submission_prophet = validation[['id']+valid_cols]\nsubmission_prophet.columns = ['id']+['F'+str(i) for i in range(1,29)]\nsubmission_prophet_eval = submission_prophet.copy()\nsubmission_prophet_eval.id = submission_prophet_eval.id.apply(lambda _id:_id.replace('_validation','_evaluation'))\nsubmission_prophet = pd.concat([submission_prophet, submission_prophet_eval])\nsubmission_prophet","9b8bd7ef":"submission_prophet.to_csv('submission_prophet.csv', index=False)","dd6f7b11":"### Tips\n\nI get **0.87287** with only last year data to train my model, not any hyperparameter turn, So you can use all data and turn some parameter to improve your score. It will be fun.(\u53ea\u4f7f\u7528\u6700\u540e\u4e00\u5e74\u7684\u6570\u636e\u8bad\u7ec3\uff0c\u4f7f\u7528\u5168\u90e8\u9ed8\u8ba4\u53c2\u6570\uff0c\u5f97\u52060.87287\uff0c\u53ef\u4ee5\u4fee\u6539\u4e3a\u4f7f\u7528\u5168\u90e8\u6570\u636e\uff0c\u5e76\u5bf9\u5e74\u5ea6\u5468\u671f\u3001\u8282\u5047\u65e5\u7b49\u8d85\u53c2\u6570\u8fdb\u884c\u8c03\u6574\u83b7\u53d6\u66f4\u597d\u7684\u7ed3\u679c)\n\n### Other EDA kernel abount this competition\n\n- [M5 Forecasting - Accuracy EDA](https:\/\/www.kaggle.com\/holoong9291\/eda-for-m5-en)\n- [M5 Forecasting - Uncertainty EDA](https:\/\/www.kaggle.com\/holoong9291\/eda-for-m5-2-en)\n\nPlease upvote me, I am really need a bronze, thanks guys, have a nice day.","669aaa28":"## TODO\n\n- Add date information as hyperparameter in Prophet model.(\u5c06\u65e5\u671f\u4fe1\u606f\u4ee5Prophet\u7684\u53c2\u6570\u5f62\u5f0f\u4f20\u5165)\n- Model parameter adjustment.(\u6a21\u578b\u8c03\u53c2)\n- Something I haven't thought about yet.(\u5176\u4ed6\u8fd8\u6ca1\u60f3\u5230\u7684\u70b9)","4a0fb0af":"## Build submission file(\u6784\u5efasubmission\u6587\u4ef6)","487a5561":"## Predict each store&item in valid date(\u4f7f\u7528Prophet\u9884\u6d4b\u6240\u6709\u95e8\u5e97\u5546\u54c1)\n\nIt takes about 20 hours to run. It needs to run offline. Just remove `break`.(\u8fd9\u91cc\u5b9e\u9645\u8fd0\u884c\u8017\u65f6\u5927\u7ea620\u4e2a\u5c0f\u65f6\uff0c\u53bb\u6389break\u5373\u53ef).","63c7a15f":"The end.","7857adab":"## Take a look(\u6d4f\u89c8\u6570\u636e)\n\n`Prophet` model is a traditional time series analysis model. It doesn't need or can't make use of price data. For date information, it can be passed in by a way similar to super parameter. But we will do this later. For now, we only consider the simplest prediction of Prophet model.(Prophet\u6a21\u578b\u662f\u4f20\u7edf\u7684\u65f6\u5e8f\u5206\u6790\u6a21\u578b\uff0c\u5b83\u4e0d\u9700\u8981\u4e5f\u65e0\u6cd5\u5229\u7528\u4ef7\u683c\u6570\u636e\uff0c\u5bf9\u4e8e\u65e5\u671f\u4fe1\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u8d85\u53c2\u6570\u7684\u65b9\u5f0f\u4f20\u5165\uff0c\u4f46\u662f\u8fd9\u4e00\u90e8\u5206\u6211\u4eec\u653e\u5230\u540e\u9762\u6765\u505a\uff0c\u6682\u65f6\u53ea\u8003\u8651\u6700\u6700\u7b80\u5355\u7684Prophet\u6a21\u578b\u9884\u6d4b)","347b97ad":"# Simple Baseline with Prophet(\u57fa\u4e8efacebook Prophet\u7684baseline\u6a21\u578b)\n\nCompetition data files introduction(\u7ade\u8d5b\u6570\u636e\u6587\u4ef6\u4ecb\u7ecd)\uff1a\n- calendar.csv - Contains information about the dates on which the products are sold.(\u63d0\u4f9b\u5546\u54c1\u9500\u552e\u7684\u65e5\u671f\u4fe1\u606f)\n- sales_train_validation.csv - Contains the historical daily unit sales data per product and store \\[d_1 - d_1913\\](\u9a8c\u8bc1\u6570\u636e\u96c6\uff0c\u5305\u542b\u5546\u54c1\u4fe1\u606f\u3001\u95e8\u5e97\u4fe1\u606f\u3001\u5bf9\u5e94\u6bcf\u5929\u7684\u9500\u552e\u989d)\n- sample_submission.csv - The correct format for submissions. Reference the Evaluation tab for more info.(\u63d0\u4ea4\u6587\u4ef6\u6837\u672c\u6587\u4ef6)\n- sell_prices.csv - Contains information about the price of the products sold per store and date.(\u95e8\u5e97\u7684\u5546\u54c1\u5728\u67d0\u4e00\u5929\u7684\u4ef7\u683c\u4fe1\u606f)\n- sales_train_evaluation.csv - Available once month before competition deadline. Will include sales \\[d_1 - d_1941\\](\u8bc4\u4ef7\u6570\u636e\u96c6\uff0c\u5728\u7ade\u8d5b\u7ed3\u675f\u524d\u4e00\u4e2a\u6708\u63d0\u4f9b\uff0c\u683c\u5f0f\u4e0e\u9a8c\u8bc1\u6570\u636e\u96c6\u4e00\u81f4)\n\nTarget(\u7ade\u8d5b\u76ee\u6807)\uff1a predicting item sales at stores in various locations for two 28-day time periods.(\u5bf9\u4e24\u4e2a28\u5929\u7684\u65f6\u95f4\u6bb5\u5185\u7684\u95e8\u5e97&\u5546\u54c1\u7684\u9500\u552e\u989d\u8fdb\u884c\u9884\u6d4b)\n\nEvaluation(\u8bc4\u4ef7\u6307\u6807)\uff1aRMSSE.(\u52a0\u6743\u7684\u5747\u65b9\u6839\u6807\u51c6\u8bef\u5dee)\n\nIf you like it, please upvote me, and I really need a bronze, and please comment if you have some advise or find my error in this kernel. Let's have fun.(\u5982\u679c\u4f60\u559c\u6b22\uff0c\u8bf7upvote\uff0c\u5982\u679c\u4f60\u6709\u4efb\u4f55\u5efa\u8bae\u6216\u8005\u53d1\u73b0\u9519\u8bef\uff0c\u9ebb\u70e6\u518d\u8bc4\u8bba\u533a\u6307\u6b63\uff0c\u6211\u4f1a\u5c3d\u5feb\u5b8c\u5584\u548c\u4fee\u590d\uff0c\u8c22\u8c22)","72f2f0b4":"## Test prophet in one row(\u5728\u4e00\u9879\u4e0a\u4f7f\u7528Prophet\u8fdb\u884c\u9884\u6d4b)"}}