{"cell_type":{"f3c6bda4":"code","b5b49272":"code","63fd915c":"code","26921af9":"code","4201b1a1":"code","f7bfa00e":"code","23f548f8":"code","9ed39d4d":"code","2e49a796":"code","27d6ab61":"code","fcb7576f":"code","b9d8003e":"code","3750264c":"code","60ed0afa":"code","ae872300":"code","16b4fc9f":"code","1f0b53a7":"code","5191d651":"code","b4ef23b7":"code","a02b658e":"code","d24a476b":"code","a1b57799":"code","d552630a":"code","aa9c8cc1":"code","6147bbfc":"code","6ab1008f":"code","5bcfc663":"code","072f790e":"code","9b5224b6":"code","e2f860c6":"code","07a2261a":"code","b0db1caa":"code","cb9ef11a":"code","d09c791d":"code","0a2d4065":"code","3f215741":"code","3768b3c5":"code","1bf802c3":"code","c39bdffa":"code","4c944be0":"markdown","83549e32":"markdown","85f4ecf1":"markdown","03b140c6":"markdown","498fb7cd":"markdown","33d15257":"markdown","ff42847f":"markdown","34e1ed34":"markdown","b83551f3":"markdown","4508df96":"markdown","a8cc1da7":"markdown","eff065c0":"markdown"},"source":{"f3c6bda4":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport matplotlib\n%matplotlib inline","b5b49272":"path = \"\/kaggle\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv\"\ndata= pd.read_csv(path)\ndata","63fd915c":"data.describe()","26921af9":"data.info()","4201b1a1":"data.isnull().sum()","f7bfa00e":"sns.countplot(x = 'Gender', data = data)","23f548f8":"sns.countplot(x = 'Married', data = data)","9ed39d4d":"sns.countplot(x = 'Self_Employed', data = data)","2e49a796":"sns.countplot(x = 'Dependents', data = data)","27d6ab61":"sns.countplot(x = 'Credit_History', data = data)","fcb7576f":"sns.countplot(x = 'Loan_Amount_Term', data = data)","b9d8003e":"# Filling with mode would be best\n\ndata['Gender'] = data[\"Gender\"].fillna(data['Gender'].mode()[0])\ndata['Married'] = data[\"Married\"].fillna(data['Married'].mode()[0])\ndata['Dependents'] = data[\"Dependents\"].fillna(data['Dependents'].mode()[0])\ndata['Self_Employed'] = data[\"Self_Employed\"].fillna(data['Self_Employed'].mode()[0])\ndata['Credit_History'] = data[\"Credit_History\"].fillna(data['Credit_History'].mode()[0])\ndata['Loan_Amount_Term'] = data[\"Loan_Amount_Term\"].fillna(data['Loan_Amount_Term'].mode()[0])\n","3750264c":"plt.hist(data['LoanAmount'], bins = 40 )","60ed0afa":"# Since there are outliers, Median would be best for filling\n\ndata['LoanAmount'] = data[\"LoanAmount\"].fillna(data['LoanAmount'].median())\n","ae872300":"data.isnull().sum()","16b4fc9f":"data['Loan_Status'].replace('N',0,inplace=True)\ndata['Loan_Status'].replace('Y',1,inplace=True)","1f0b53a7":"sns.countplot(x = 'Loan_Status', data = data)","5191d651":"sns.countplot(x='Credit_History', hue='Loan_Status', data=data)","b4ef23b7":"sns.countplot(x='Gender', hue='Loan_Status', data=data)","a02b658e":"sns.countplot(x='Married', hue='Loan_Status', data=data)","d24a476b":"sns.countplot(x='Self_Employed', hue='Loan_Status', data=data)","a1b57799":"sns.countplot(x='Dependents', hue='Loan_Status', data=data)","d552630a":"data.info()","aa9c8cc1":"sns.countplot(x='Education', hue='Loan_Status', data=data)","6147bbfc":"sns.countplot(x='Property_Area', hue='Loan_Status', data=data)","6ab1008f":"data['Total_Income'] = data['ApplicantIncome'] + data['CoapplicantIncome']\n","5bcfc663":"data = data.drop(columns=\"Loan_ID\", axis=1)","072f790e":"plt.figure(figsize=(6,6))\nsns.violinplot(x=\"Loan_Status\",y=\"LoanAmount\", data=data)","9b5224b6":"plt.figure(figsize=(6,8))\nsns.violinplot(x=\"Loan_Status\",y=\"CoapplicantIncome\", data=data)","e2f860c6":"data = data.drop(columns=\"Dependents\", axis=1)\ndata = data.drop(columns=\"CoapplicantIncome\", axis=1)\ndata = data.drop(columns=\"ApplicantIncome\", axis=1)","07a2261a":"from sklearn.preprocessing import LabelEncoder\n\nfeatures = ['Gender',\"Married\",\"Education\",'Self_Employed',\"Property_Area\"]\nencode = LabelEncoder()\nfor f in features:\n    data[f] = encode.fit_transform(data[f])","b0db1caa":"data","cb9ef11a":"x = data.drop(columns=\"Loan_Status\", axis=1)\ny = data['Loan_Status']","d09c791d":"from sklearn.model_selection import train_test_split\n\nx_train, x_cv, y_train, y_cv = train_test_split(x, y, test_size=0.2)","0a2d4065":"from sklearn.linear_model import LogisticRegression\nloreg = LogisticRegression(C = 0.3)\n\nloreg.fit(x_train, y_train)","3f215741":"from sklearn.model_selection import cross_val_score\nprint(\"Train Accuracy: \", loreg.score(x_cv, y_cv) * 100)","3768b3c5":"path = \"\/kaggle\/input\/loan-prediction-problem-dataset\/test_Y3wMUE5_7gLdaTN.csv\"\ntestdata= pd.read_csv(path)\n\nx_test = data.drop(columns=\"Loan_Status\", axis=1)\ny_test = data['Loan_Status']","1bf802c3":"from sklearn.model_selection import cross_val_score\nprint(\"Test Accuracy:\", loreg.score(x_test, y_test)*100)","c39bdffa":"from sklearn.metrics import confusion_matrix\ny_pred = loreg.predict(x_test)\nconf = confusion_matrix(y_test, y_pred)\nsns.heatmap(conf, annot=True)","4c944be0":"# Loan Approval Prediction Model","83549e32":"## Training the model","85f4ecf1":"Using the given dataset, we have to predict weather the loan will be approved or not.\nDataset: https:\/\/www.kaggle.com\/altruistdelhite04\/loan-prediction-problem-dataset","03b140c6":"### Dealing with null values","498fb7cd":"## Removing useless features","33d15257":"## Loading dataset","ff42847f":"## Labelling Categorical Features","34e1ed34":"## Observation ","b83551f3":"## Importing Libraries","4508df96":"We can predict Loan approval with accuracy of around 80%.","a8cc1da7":"## Data preprocessing","eff065c0":"## Exploratory data analysis"}}