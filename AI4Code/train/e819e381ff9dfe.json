{"cell_type":{"3481b32c":"code","cce5298d":"code","1d94b55f":"code","410b57fa":"code","a2ca494b":"code","4c0f2814":"code","2487d47a":"code","8607471f":"code","c12fcaf2":"code","f6a7decd":"code","9c0ba93e":"code","8e8f530c":"code","48712eb8":"code","4aec52be":"code","02f12cae":"code","c19181ff":"code","743f82ca":"code","3a9de3a3":"code","059c7e26":"code","e7a721d7":"code","c8a01561":"code","cb746285":"code","e312a92b":"code","19bdd095":"code","e38f5275":"code","a8a98714":"code","8692584d":"code","ae077102":"code","dae8f171":"code","1a0f53e8":"code","c54b30cf":"code","f9f1728f":"code","8df68708":"code","eeb45857":"code","80e97287":"code","facdd4c8":"code","29a50af2":"code","4ca76901":"markdown","4b293912":"markdown","e09104ee":"markdown","3982e87b":"markdown","fb2d0c5e":"markdown","053293a9":"markdown","e0efa80c":"markdown","4d30722a":"markdown","9c54cc81":"markdown","14269b1e":"markdown","ffdb4273":"markdown","a28b1171":"markdown","5fcbb8f4":"markdown","a8474708":"markdown","38b89de7":"markdown","185230c3":"markdown","517c3849":"markdown","0a5391a9":"markdown","42e47ef9":"markdown","eb7d7f8d":"markdown","37e08eb3":"markdown","3ec0740f":"markdown","d6bb142f":"markdown","0c05ebac":"markdown","b70b9813":"markdown","f5490550":"markdown","6482ea00":"markdown","0b320ca7":"markdown","00ab7d01":"markdown","a1e4eb81":"markdown","41cebb96":"markdown"},"source":{"3481b32c":"#importing all the required librarys\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","cce5298d":"#loading the dataset and reading csv\ndf = pd.read_csv('..\/input\/investigate-a-dataset-noshow-appointments\/KaggleV2-May-2016.csv')","1d94b55f":"# first 6 rows of the dataset:\ndf.head(6)","410b57fa":"# the number of rows and columns in a dataset\ndf.shape","a2ca494b":"# statistics for all columns of the dataset\ndf.describe()","4c0f2814":"#columns names in the dataset\ndf.columns","2487d47a":"# unuique values count information\ndf.nunique()","8607471f":"# information of dataset\ndf.info()","c12fcaf2":"# all columns are now lowercase letters\ndf.columns=df.columns.str.strip().str.lower()\ndf.columns","f6a7decd":"#null values\ndf.isnull().sum()","9c0ba93e":"# there are some duplicated values in patientid\ndf['patientid'].duplicated().sum()","8e8f530c":"df.drop(['patientid', 'appointmentid'], axis=1, inplace=True)\ndf.columns","48712eb8":"#making sure that there will be no negative values \ndf = df[df['age'] >= 0]\n\ndf['age'].describe()","4aec52be":"df.head()","02f12cae":"df.rename(columns={'no-show':'noshow', 'sms_received':'smsreceived','hipertension':'hypertension','handcap':'handicap'}, inplace=True)\ndf.columns","c19181ff":"#making all ones and zeros valued columns in bools \ndf['diabetes'] = df['diabetes'].replace({0: 'No', 1: 'Yes'})\ndf['hypertension'] = df['hypertension'].replace({0: 'No', 1: 'Yes'})\ndf['scholarship'] = df['scholarship'].replace({0: 'No', 1: 'Yes'})\ndf['alcoholism'] = df['alcoholism'].replace({0: 'No', 1: 'Yes'})\ndf['handicap'] = df['handicap'].replace({0: 'No', 1: 'Yes'})\ndf['smsreceived'] = df['smsreceived'].replace({0: 'No', 1: 'Yes'})\ndf['noshow'] = df['noshow'].replace({0: 'No', 1: 'Yes'})","743f82ca":"df.head()","3a9de3a3":"import datetime as dt\ndf['scheduledday'] = pd.to_datetime(df['scheduledday']).dt.date\ndf['appointmentday'] = pd.to_datetime(df['appointmentday']).dt.date\ndf.head(2)","059c7e26":"df['daysgap'] = df['appointmentday']  -  df['scheduledday']\ndf.columns","e7a721d7":"df.dtypes","c8a01561":"df['daysgap'] = df['daysgap'].dt.components.days","cb746285":"\ndf['daysgap'].describe()\n","e312a92b":"df.drop(index=df[df['daysgap'] < 0].index, inplace=True)","19bdd095":"df.head(2)","e38f5275":"df = df[df['daysgap'] >= 0]\ndf['daysgap'].describe()","a8a98714":"df.head()","8692584d":"\ndf['appointmentday'].min(), df['appointmentday'].max()","ae077102":"# table\ngender = pd.crosstab(index=df[\"gender\"],\n            columns=df[\"noshow\"])\ngender","dae8f171":"# plot \nsns.countplot(df['gender']);\nplt.xlabel('Gender')\nplt.ylabel('Count')\nplt.title('Gender Bar Diagram');","1a0f53e8":"# plot \ngender.plot(kind='bar',stacked = True,color=['green','silver'])\nplt.xlabel('Gender')\nplt.ylabel('Count')\nplt.title('Gender vs No Show ');","c54b30cf":"# using groupby \nnew_df = df.groupby('noshow')['noshow'].agg(['count'])\nnew_df.reset_index(inplace=True)\nnew_df.columns = ['appt_status', 'total']\nnew_df.iloc[0,0] = \"Show\"\nnew_df.iloc[1,0] = \"No Show\"","f9f1728f":"#  cooking percentages\nnos_prop = new_df.iloc[0,1] \/ (new_df.iloc[0,1] + new_df.iloc[1,1])\nshows_prop = new_df.iloc[1,1] \/ (new_df.iloc[0,1] + new_df.iloc[1,1])\n\nnew_df['percentages'] = [nos_prop, shows_prop]\nnew_df.head","8df68708":"#ploting the 'PIE'\nlabels = ['Shows', 'No Shows']\nsizes = [nos_prop, shows_prop]\ncolors = ['seagreen', 'silver']\nexplode = (0, 0.1)\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title(' Show vs No Show',fontsize=22)\nplt.axis('equal')\nfig = plt.gcf()\nfig.set_size_inches(8,8);","eeb45857":"df.alcoholism.value_counts()","80e97287":"df.alcoholism.value_counts(normalize=True) * 100\n","facdd4c8":"df.groupby([\"noshow\",\"alcoholism\"], as_index=False).size()","29a50af2":"bar = sns.FacetGrid(df, col = 'alcoholism')\nbar.map(plt.hist, 'noshow', bins = 3,color='red');","4ca76901":"### we can here use histogram but piechart looks more informative ","4b293912":"### General Properties","e09104ee":"\n\n# Project: Investigate a Dataset No - \"show appointments\"\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","3982e87b":"- the time period is limited so that the available information may not be suffient for accurate results\n- This analysis is based solely on observations\n- there are some values like age =o which are baby's they cant be removed and they alone cant attend appointments.\n- Lots of the columns used categorical data which is difficult to analyze and find insights","fb2d0c5e":"- Alcohilic does not have huge impact on the appointments\n\n- Gender even has't any infulunce on the show up of appointments\n\n- The is slight difference of missing appointments between male and female.\n\n- 20% patients did not show up and due to this most important time and oppotunity of using care is lost \n\n- Showup and not showup count almost same (80:20)","053293a9":"- let us know somethings about show-ups","e0efa80c":"### Time period","4d30722a":"# Exploratory data analysis","9c54cc81":"\n- Here we can easily understand that almost 80% showed up.\n- 20% patients did not show up. ","14269b1e":"### Data cleaning","ffdb4273":"### Results","a28b1171":"#### And last one we are going to change 'scheduledday' and 'appointmentday'in correct formate because it difficult to make analysis with that formate","5fcbb8f4":"- correcting name mistakes and formate","a8474708":"- changing some column values to bool","38b89de7":"-  More female patient than male patient in dataset.\n","185230c3":"- Not more that 5% patients are alcoholic\n- More intresting thing is more that 95% showed up\n","517c3849":"#### We have cleaned almost every attributes one by one \u270c","0a5391a9":"- dropping columns that we are not going to use","42e47ef9":"\n# Conclusions","eb7d7f8d":"- making all columns lowercase for easy going","37e08eb3":"### Most important thing we sholud know first - How many showed up and how many did not for the appointment","3ec0740f":"#### let us know the gender show up details and their count ","d6bb142f":"### Limitations","0c05ebac":"- this data is around from 29-04-2016 to 08-06-2016","b70b9813":"### we have found enough information from the dataset and it time to clean it for the best fit\n\n","f5490550":"- There are 48,228 duplicated thet mean same patients has made appointment more than one ","6482ea00":"### Lets see how alcoholism effecting the appointments","0b320ca7":"- no null values","00ab7d01":"<a id='intro'><\/a>\n## Introduction\n\n>  In this project, we'll be analysing a dataset related to medical appointments in Brazil.that is we are going to find answers to few questions related to the data of  patient's whether showing up for an appointment or not.\n> the dataset is a collection of 100k medical appointments in brazil.the data has\n### The dataset contains 14 attributes:\n\n- PatientID - Identification of the patient\n- AppointmentID - Identification of each appointment\n- Gender - Male or Female (M\/F)\n- ScheduledDay - The day of the appointment\n- AppointmentDay - The day the appointment was made\n- Age - The age of the patient\n- Neighbourhood - Where the appointment takes place\n- Scholarship - True or False\n- Hipertension - True or False\n- Diabetes - True or False\n- Alcoholism - True or False\n- Handicap - True or False\n- SMS_received - 1 or more messages sent to the patient\n- No-show - Yes or No. Yes indicates that the patient did not turn up for the appointment.\n","a1e4eb81":"<a id='wrangling'><\/a>\n## Data Wrangling\n\n\n\n","41cebb96":"Now date in correct formate is ready but still that is not enough,we have to address some questions relating to time gap between the appointments "}}