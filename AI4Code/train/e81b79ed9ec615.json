{"cell_type":{"69cf3272":"code","ccc44ff2":"code","92dcb344":"code","838e2c0a":"code","c2935965":"code","979ed4fe":"code","d5e7f604":"code","c9d7dc75":"code","6cf8b5e8":"code","8c21ed54":"code","2e1d45d9":"code","41510c18":"code","2fe5b893":"code","d383eace":"code","aab562cb":"code","c2c3d326":"markdown","d21e6da0":"markdown","6ad0de68":"markdown","2a34fcce":"markdown","956ea89f":"markdown"},"source":{"69cf3272":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Any results you write to the current directory are saved as output.","ccc44ff2":"# read the data\nheart_data = pd.read_csv('..\/input\/heart.csv', sep=',')","92dcb344":"# view all column names and few rows of data\nheart_data.describe()","838e2c0a":"sns.set()\n# people with heart attack based on sex,age,cp\nsns.catplot(x=\"sex\", y=\"age\",col=\"target\",hue=\"cp\", kind=\"swarm\",data=heart_data)","c2935965":"# comparison of people with heart attack on basis of sex\nsns.countplot(x=\"target\", hue=\"sex\",data=heart_data)\nplt.show()","979ed4fe":"# comparison of fbs on basis of sex\nsns.countplot(x=\"fbs\", hue=\"sex\",data=heart_data)\nplt.show()","d5e7f604":"# comparison of fbs on basis of people who had a heart attack\nsns.countplot(x=\"fbs\", hue=\"target\",data=heart_data)\nplt.show()","c9d7dc75":"# comparison of restecg on basis of sex\nsns.countplot(x=\"restecg\", hue=\"sex\",data=heart_data)\nplt.show()","6cf8b5e8":"# comparison of restecg on basis of people who had a heart attack\nsns.countplot(x=\"restecg\", hue=\"target\",data=heart_data)\nplt.show()","8c21ed54":"# comparison of thal on basis of sex\nsns.countplot(x=\"thal\", hue=\"sex\",data=heart_data)\nplt.show()","2e1d45d9":"# comparison of thal on basis of people who had a heart attack\nsns.countplot(x=\"thal\", hue=\"target\",data=heart_data)\nplt.show()","41510c18":"import numpy as np\nfrom sklearn.model_selection import train_test_split\n\ny = heart_data.target.values\nX = heart_data.drop(['target'], axis = 1)\n\n# Split into validation and training data\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, test_size = 0.2,random_state=0)\n","2fe5b893":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import accuracy_score\n\n# Define the model. Set random_state to 1\nheart_model = RandomForestClassifier(n_estimators = 1000, random_state=1)\n\n\n","d383eace":"# fit your model\nheart_model.fit(train_X,train_y)","aab562cb":"val_predictions = heart_model.predict(val_X)\n# Calculate the mean absolute error of your Random Forest model on the validation data\nheart_val_mae = mean_absolute_error(val_predictions, val_y)\nacc = accuracy_score(val_y, val_predictions)\n\nprint(\"Validation MAE for Random Forest Model: {}\".format(heart_val_mae))\nprint(\"Validation Accuracy for Random Forest Model: {}\".format(acc))\n\nprint(\"\\nPredicted Values:\")\nprint(val_predictions)\nprint(\"\\nActual Values:\")\nprint(val_y)","c2c3d326":"> **Building Model**","d21e6da0":"> **Data Preparation**","6ad0de68":"> **Getting Predictions and Evaluating Model**","2a34fcce":"> **Training Model**","956ea89f":">** Data Analysis** "}}