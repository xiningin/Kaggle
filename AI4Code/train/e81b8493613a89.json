{"cell_type":{"d96c8905":"code","8b028699":"code","317d3b3e":"code","e93df2ed":"code","1534f4e5":"code","c0f6dd65":"code","81d117aa":"code","5139f06b":"code","c88eef30":"code","adee056d":"code","0dce39e5":"code","d374a1f4":"code","9fe1c6b8":"code","49a64da7":"code","05480c9e":"code","ac8dde6a":"code","5f57873c":"code","f0ab419b":"code","af4f2a37":"code","d6d1aebd":"code","9715fdfc":"code","060e7f3b":"code","f92e0700":"code","c1d9ac4c":"code","c45d123f":"code","92740e54":"code","8a93acf0":"code","5ccfc3df":"code","cd5c19aa":"code","a174806f":"code","c9c96dcf":"code","d9462406":"code","2dac46c0":"code","3c9c2b14":"code","7847cacb":"code","f6a67d4d":"code","510f21c1":"code","280b5e03":"code","2d3e7508":"code","84316263":"code","74f157a9":"markdown","09715779":"markdown","862d3c79":"markdown"},"source":{"d96c8905":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8b028699":"titanic = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","317d3b3e":"titanic.info()","e93df2ed":"titanic.describe()","1534f4e5":"titanic.drop('Cabin', inplace=True, axis=1)","c0f6dd65":"\ntitanic['Embarked'].fillna('S', inplace=True)","81d117aa":"titanic.Embarked.value_counts()\n","5139f06b":"# Create a groupby object: by_sex_class\nby_sex_pclass = titanic.groupby(['Sex','Pclass'])\n\n# Write a function that imputes median\ndef impute_median(series):\n    return series.fillna(series.median())\n\n# Impute age and assign to titanic.age\ntitanic.Age = by_sex_pclass.Age.transform(impute_median)\n\n","c88eef30":"np.median(titanic['Age'])","adee056d":"titanic.info()","0dce39e5":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\n","d374a1f4":"steps = [('scaler', StandardScaler()), ('knn', KNeighborsClassifier())]\npipeline = Pipeline(steps)","9fe1c6b8":"titanic= titanic[['Survived', 'Pclass', 'Sex', 'Age','SibSp','Parch','Fare','Embarked']]\n","49a64da7":"titanic = pd.get_dummies(titanic)","05480c9e":"titanic.drop(['Sex_male','Embarked_C'] ,axis=1, inplace=True)","ac8dde6a":"\nX = titanic.drop('Survived',axis=1)\ny= titanic['Survived']","5f57873c":"parameters = {'knn__n_neighbors': np.arange(1, 20, 1),\n             'knn__leaf_size': np.arange(1,30,2)}","f0ab419b":"parameters = {\"tree__max_depth\": [3,2,1, None],\n              \"tree__max_features\": [1,4,7],\n              \"tree__min_samples_leaf\": [2,5,8],\n              \"tree__criterion\": [\"gini\", \"entropy\"]}","af4f2a37":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=55)","d6d1aebd":"cv = GridSearchCV(pipeline, parameters, cv=5)\ncv.fit(X, y)\ny_pred = cv.predict(X_test)\nprint(cv.best_params_)\nprint(cv.best_score_)\n","9715fdfc":"\npipeline.fit(X,y)","060e7f3b":"titanic_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","f92e0700":"titanic_test.head()","c1d9ac4c":"titanic_test.Age = by_sex_pclass.Age.transform(impute_median)","c45d123f":"np.mean(titanic_test.Fare)","92740e54":"titanic_test['Fare'].fillna('35.62', inplace=True)","8a93acf0":"titanic_test['Fare']=titanic_test.Fare.astype(float)","5ccfc3df":"titanic_test.info()\n","cd5c19aa":"titanic_test.drop(['Name','Ticket','Cabin'], axis=1, inplace=True)","a174806f":"titanic_test=pd.get_dummies(titanic_test)","c9c96dcf":"titanic_test.drop(['Sex_male','Embarked_C'] ,axis=1, inplace=True)","d9462406":"titanic_test.columns","2dac46c0":"X.columns","3c9c2b14":"titanic_test_id = titanic_test['PassengerId']","7847cacb":"X_test = titanic_test.drop('PassengerId', axis=1)\ny_test= cv.predict(X_test)","f6a67d4d":"titanic_test_id.head()","510f21c1":"result=pd.DataFrame()\nresult['PassengerId']=titanic_test_id","280b5e03":"result['Survived']=y_test.reshape(-1,1)","2d3e7508":"result","84316263":"result.to_csv('result_knn.csv')","74f157a9":"Param C tuning","09715779":"Import train csv, analyze missing values","862d3c79":"Cabin to drop, Embarked filling with most frequent, age filling with groupby median (sex and pclass)"}}