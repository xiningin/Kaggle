{"cell_type":{"bb52f7e3":"code","c6610f7f":"code","e72eb6d9":"code","7c07b69e":"code","c20e0fac":"code","564d909f":"code","e6355221":"code","4e303952":"code","1617862c":"code","31134091":"code","dd53f816":"code","35b3cad6":"code","d202c517":"code","03d40212":"code","28729d49":"code","14e3181e":"code","c6423e5d":"code","36b01f26":"code","9924330f":"code","1e73e0c2":"code","179d0e97":"code","ad8ccc5c":"code","7299eacd":"code","79081161":"code","4d0e460e":"code","15cb88ac":"code","8558d0a8":"code","8346640f":"code","75daed37":"code","4b7c8bf8":"code","b2f66a76":"code","1e2e1327":"code","a63c5033":"code","f8d5f15a":"code","a9fd86de":"code","37bb898d":"code","dd110c5f":"code","786e3865":"code","ad6bbae0":"code","035227af":"code","71c1e700":"code","55c1839c":"code","e2135a11":"code","f1d2bd97":"code","53b30591":"code","ba0a44c0":"code","835eff59":"code","b0c77c4d":"markdown","2fd7d134":"markdown","c18d6b25":"markdown","8f2af39f":"markdown","3ba4ed59":"markdown","1258dcc0":"markdown","9d15192b":"markdown","837170da":"markdown","34c1b65b":"markdown","13e4035f":"markdown","218d802e":"markdown","1f9bdb80":"markdown","eccb19a7":"markdown","33b78a39":"markdown","9f585b27":"markdown"},"source":{"bb52f7e3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd\nfrom pylab import mpl, plt\nplt.style.use('seaborn')\nmpl.rcParams['font.family'] = 'serif'\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames[:10]:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c6610f7f":"df_CL=pd.read_csv('\/kaggle\/input\/sandp500\/individual_stocks_5yr\/individual_stocks_5yr\/CL_data.csv')","e72eb6d9":"df_CL.head()","7c07b69e":"Names=['CL','FDX','AMAT','GLW','ANSS','DVN','CBG','TSS','JEC','VRTX']","c20e0fac":"data=pd.DataFrame()\n\nfor i in Names:\n    df=pd.read_csv('\/kaggle\/input\/sandp500\/individual_stocks_5yr\/individual_stocks_5yr\/{}_data.csv'.format(i))\n    data['{}'.format(i)]=df['close']\n\ndata['Date'] = pd.to_datetime(df_CL['date'])\ndata = data.set_index(['Date'])","564d909f":"data.info()","e6355221":"data.head()","4e303952":"data.plot(figsize=(10, 12), subplots=True);","1617862c":"instruments = ['Colgate-Palmolive','FedEx','Applied Materials',\n               'Corning Incorporated','ANSYS','Devon Energy Corporation', \n               'Carabao Group PCL', 'Total System Services', \n               'Jura Energy Corp', 'Vertex Pharmaceuticals']","31134091":"for ric, name in zip(data.columns, instruments):\n    print('{:8s} | {}'.format(ric, name))","dd53f816":"data.describe().round(2)","35b3cad6":"data.mean()","d202c517":"data.aggregate([min,  \n                np.mean,  \n                np.std,  \n                np.median,  \n                max]  \n).round(2)","03d40212":"data.diff().head()","28729d49":"data.diff().mean()","14e3181e":"data.pct_change().round(3).head()","c6423e5d":"#my_colors = color = list('rgbkymc')  #red, green, blue, black, etc.\n\ndata.pct_change().mean().plot(kind='bar', figsize=(10, 6));","36b01f26":"rets = np.log(data \/ data.shift(1))","9924330f":"rets.head().round(3)","1e73e0c2":"rets.cumsum().apply(np.exp).plot(figsize=(10, 6));","179d0e97":"data.resample('1w', label='right').last().head()","ad8ccc5c":"rets.cumsum().apply(np.exp).resample('1w', label='right').last().plot(figsize=(10, 6));","7299eacd":"sym = 'CL'","79081161":"data_cl = pd.DataFrame(data[sym])","4d0e460e":"window=20","15cb88ac":"data_cl['min'] = data_cl[sym].rolling(window=window).min()\ndata_cl['mean'] = data_cl[sym].rolling(window=window).mean()\ndata_cl['max'] = data_cl[sym].rolling(window=window).max()\ndata_cl['ewma'] = data_cl[sym].ewm(halflife=0.5, min_periods=window).mean() ","8558d0a8":"ax = data_cl[['min', 'mean', 'max']].iloc[-200:].plot(\n    figsize=(10, 6), style=['g--', 'r--', 'g--'], lw=0.8)  \ndata_cl[sym].iloc[-200:].plot(ax=ax, lw=2.0);","8346640f":"data_cl['SMA1'] = data_cl[sym].rolling(window=42).mean() ","75daed37":"data_cl['SMA2'] = data_cl[sym].rolling(window=252).mean()  ","4b7c8bf8":"data_cl[[sym, 'SMA1', 'SMA2']].tail()","b2f66a76":"data_cl[[sym, 'SMA1', 'SMA2']].plot(figsize=(10, 6));","1e2e1327":"data_cl.dropna(inplace=True)","a63c5033":"data_cl['positions'] = np.where(data_cl['SMA1'] > data_cl['SMA2'], 1, -1)  ","f8d5f15a":"ax = data_cl[[sym, 'SMA1', 'SMA2', 'positions']].plot(figsize=(10, 6),\n                                              secondary_y='positions')\nax.get_legend().set_bbox_to_anchor((0.25, 0.85));","a9fd86de":"df = data[['DVN', 'CBG']].dropna()","37bb898d":"df.tail()","dd110c5f":"df.plot(subplots=True, figsize=(10, 6));","786e3865":"df.loc[:'2014-12-31'].plot(secondary_y='CBG', figsize=(10, 6)); ","ad6bbae0":"rets = np.log(df \/ df.shift(1)) ","035227af":"rets.head()","71c1e700":"rets.dropna(inplace=True)","55c1839c":"rets.plot(subplots=True, figsize=(10, 6));","e2135a11":"pd.plotting.scatter_matrix(rets,  \n                           alpha=0.2,  \n                           diagonal='hist',  \n                           hist_kwds={'bins': 35},  \n                           figsize=(10, 6));","f1d2bd97":"reg = np.polyfit(rets['DVN'], rets['CBG'], deg=1)","53b30591":"ax = rets.plot(kind='scatter', x='DVN', y='CBG', figsize=(10, 6))  \nax.plot(rets['DVN'], np.polyval(reg, rets['DVN']), 'r', lw=2);","ba0a44c0":"rets.corr()","835eff59":"ax = rets['DVN'].rolling(window=252).corr(\n                  rets['CBG']).plot(figsize=(10, 6))  \nax.axhline(rets.corr().iloc[0, 1], c='r');","b0c77c4d":"### Quick Insights","2fd7d134":"It is straightforward to derive standard rolling statistics with pandas:","c18d6b25":"### Correlation analysis","8f2af39f":"### OLS Regression","3ba4ed59":"The trading strategy implicitly derived here only leads to few trades per se: only when position value changes \n(i.e., a crossr happens) does trade take place. This would add up to just six trades in total.","1258dcc0":"Strategy based on technical analysis is using two simple moving averages (SMAs). The idea is that trader should go long on a stock when the shorter term SMA is above the longer term SMA and go short when oposite holds true.\n\nRolling statistics are generally only calculated when there is enough data given window parametre specification. As the figure shows the SMA time series only starts at the day for which there is enough data given specific parameterization.","9d15192b":"### Log Returns","837170da":"### Summary Statistics","34c1b65b":"This plots cumulative log returns over time.","13e4035f":"### Correlation","218d802e":"### Resampling","1f9bdb80":"### A Technical Analysis Example","eccb19a7":"We will show that DVN and CBG are positively correlated.","33b78a39":"### Changes Over Time","9f585b27":"### Rolling Statistics"}}