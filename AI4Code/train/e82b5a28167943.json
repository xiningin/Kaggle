{"cell_type":{"2ff5942b":"code","d1393a1b":"code","af13c00d":"code","50a607c0":"code","48484c9b":"code","dfca33fd":"code","7f92cc2c":"code","b1431a11":"code","e255479d":"code","3b09b565":"code","4b188aa3":"code","d4f46210":"code","71c58f02":"code","35e80655":"code","b14152cf":"code","174816fc":"code","7ca0ea3b":"code","bd31e327":"code","a3ac557f":"code","54b26f66":"code","ac068c3e":"code","a3dde73c":"code","8438ccbe":"code","c82415a1":"code","50dc34fb":"code","45fc02ff":"code","df47c22f":"code","26520e18":"code","10070df4":"code","11af2cc8":"code","2e6298d7":"code","605b9344":"code","f8a4dce9":"code","f1e8ec09":"code","149a87e2":"code","dd9cde59":"code","c659f25b":"code","791a4fca":"code","42742c74":"code","30e2add4":"code","37cb1821":"code","d6a9eab8":"code","a8b77333":"code","a139be0a":"code","24a540b3":"code","e98883b7":"code","4b8072bb":"code","9da0bed2":"code","639eaa32":"code","717c22b3":"code","e4592123":"code","cba735d8":"code","335a19cd":"code","a925cf8e":"code","cea1bcfc":"code","39aaa3e1":"code","41cf9bf8":"code","bb5808f2":"code","5dcc6e01":"code","beac8b94":"code","28ed5d75":"code","04f100b3":"code","350a87ea":"code","eeede250":"code","caff80bc":"code","fd2392ea":"code","13c9f50d":"code","d31e54a6":"code","bd4a5c00":"code","a554c876":"code","59514d55":"code","321353be":"code","9ff80520":"code","beacf742":"code","0d7673a2":"code","c76cf2f6":"code","b136d4e4":"code","14534d75":"code","edd72203":"code","ea594ad9":"code","884b635e":"code","388e61bb":"code","719bca9f":"code","9b65da91":"code","1fe24155":"code","bbfb595a":"code","fcfe8db7":"code","b7cf3106":"code","be77ba3b":"code","d1566dc2":"code","be0be71a":"code","8d76b204":"code","29b37459":"code","b1806015":"code","b9049928":"code","6fdb62aa":"markdown","0805b0fb":"markdown","a7c63d36":"markdown","f3acce93":"markdown","f1508179":"markdown","7624fd9a":"markdown","8045ec5d":"markdown","99d619fe":"markdown","3d9143a3":"markdown","4797ac90":"markdown","1540b167":"markdown","6c0b8e4b":"markdown","eeff4f13":"markdown","cb774e53":"markdown","6e86b328":"markdown","74b9fc8a":"markdown","beed33c4":"markdown","1e338db5":"markdown","40eed6c3":"markdown","330ba595":"markdown","cf9b4292":"markdown","43887b04":"markdown","e2c42a9f":"markdown","0058d9f7":"markdown","90880949":"markdown","904e1312":"markdown","b3a255a0":"markdown","9fed9bd7":"markdown","a1816534":"markdown","542c75cf":"markdown","bf69c5e4":"markdown","5e91fb60":"markdown","6c79ccec":"markdown","f63c029d":"markdown"},"source":{"2ff5942b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport os","d1393a1b":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","af13c00d":"customer = pd.read_csv(\"\/kaggle\/input\/Customer.csv\")\nprod_info = pd.read_csv(\"\/kaggle\/input\/prod_cat_info.csv\")\ntransaction = pd.read_csv(\"\/kaggle\/input\/Transactions.csv\")","50a607c0":"customer.shape","48484c9b":"prod_info.shape","dfca33fd":"transaction.shape","7f92cc2c":"transaction.head(2)","b1431a11":"customer.head(2)","e255479d":"prod_info.head(2)","3b09b565":"# renaming \"prod_sub_cat_code\" column in 'prod_info' table to make it similar to 'transaction' table\n# to merge the both the tables easily\nprod_info.rename(columns={'prod_sub_cat_code':'prod_subcat_code'},inplace=True)","4b188aa3":"display(transaction.head())\ndisplay(prod_info.head())\ndisplay(customer.head())","d4f46210":"# merge transaction and prod_info table and create a new table \"prod_concat\"\nprod_concat = pd.merge(left=transaction,right=prod_info,on=['prod_cat_code','prod_subcat_code'],how='left')\nprod_concat.head()\n","71c58f02":"prod_concat","35e80655":"# Checking null values in the dataframe \nprod_concat.isnull().sum() \n","b14152cf":"customer.head()","174816fc":"#merge \"prod_concat\" and \"customer\" table and create the final table \"customer_final\"\ncustomer_final = pd.merge(left=prod_concat,right=customer,left_on='cust_id',right_on='customer_Id',how='left')\n","7ca0ea3b":"customer_final.head()","bd31e327":"customer_final.shape","a3ac557f":"transaction.shape","54b26f66":"print('''Rows of both the 'customer_final' and 'transaction' table are same. That means all the transactions done at the \n         Retail Store are present in the final table ''')","ac068c3e":"customer_final.dtypes","a3dde73c":"customer_final.isnull().sum()","8438ccbe":"# converting \"DOB\" and \"tran_date\" from object dtype to dates\ncustomer_final[\"DOB\"] = pd.to_datetime(customer_final[\"DOB\"])\n","c82415a1":"customer_final['DOB'].head(10)","50dc34fb":"customer_final[\"tran_date\"] = pd.to_datetime(customer_final[\"tran_date\"])","45fc02ff":"customer_final[\"tran_date\"].head(10)","df47c22f":"customer_final.duplicated().sum()","26520e18":"# dropping duplicate rows\ncustomer_final.drop_duplicates(inplace=True)","10070df4":"customer_final.duplicated().sum()","11af2cc8":"#column names of \"customer_final\" dataframe\ncustomer_final.columns\n","2e6298d7":"# data types of all columns of \"customer_final\" dataframe\ncustomer_final.dtypes","605b9344":"# top 10 observations\ncustomer_final.head(10)","f8a4dce9":"#bottom 10 observations\ncustomer_final.tail(10)","f1e8ec09":"customer_final.describe()","149a87e2":"customer_final.describe(include='object')","dd9cde59":"conti_customer = customer_final.loc[:,['prod_subcat_code','prod_cat_code', 'Qty', 'Rate', 'Tax', 'total_amt']]","c659f25b":"conti_customer.columns","791a4fca":"for var in conti_customer.columns:\n#     conti_customer[var].plot(kind='hist')\n    sns.distplot(conti_customer[var],kde=False,bins=10)\n    plt.title(var)\n    plt.show()","42742c74":"category_customer = customer_final.loc[:,customer_final.dtypes=='object']","30e2add4":"category_customer.head()","37cb1821":"fig = plt.figure(figsize=(10,10))\nax1 = fig.add_subplot(2,2,1)\nsns.countplot(category_customer['Gender'])\n\nfig.add_subplot(2,2,2)\nax2 = sns.countplot(category_customer['Store_type'])\nplt.xlabel('Store Type')\n\nfig.add_subplot(2,2,3)\nax3 = sns.countplot(category_customer['prod_cat'])\nplt.xlabel('Product Category')\nplt.xticks(rotation=90)\n\nplt.subplots_adjust(wspace=1)\n\nfig.add_subplot(2,2,4)\ncategory_customer.groupby('prod_subcat')['prod_subcat'].count().plot(kind='barh')\nplt.xlabel('Count')\nplt.ylabel('Product Subcategory')\nplt.show()\n","d6a9eab8":"customer_final.sort_values(by=\"tran_date\")","a8b77333":"min_date = customer_final[\"tran_date\"].min()","a139be0a":"max_date = customer_final[\"tran_date\"].max()","24a540b3":"print(\"Time period of the available transaction data is from \"+ pd.Timestamp.strftime(min_date,format=\"%d-%m-%Y\") + \" to \" + pd.Timestamp.strftime(max_date,format=\"%d-%m-%Y\"))","e98883b7":"customer_final.head()","4b8072bb":"#count of transaction_ids where total_amt was negative\nnegative_transaction = customer_final.loc[customer_final['total_amt']<0,'transaction_id']\ndisplay(negative_transaction)","9da0bed2":"print(\"Count of transactions where the total amount of transaction was negative is\\n\",negative_transaction)","639eaa32":"customer_final.drop(customer_final[customer_final['total_amt']<0].index,axis=0)\n\n# customer_final.drop(customer_final.index[np.where(customer_final['total_amt']<0)[0]],axis=0)","717c22b3":"#groupby the data set on the basis of \"Gender\" and \"prod_cat\"\nproduct_gender = customer_final.groupby(['Gender','prod_cat'])['Qty'].agg('sum').reset_index()\n","e4592123":"product_gender","cba735d8":"#converting to pivot table for better view\nproduct_gender.pivot(index=\"Gender\",columns=\"prod_cat\",values=\"Qty\")","335a19cd":"customer_final.head(2)","a925cf8e":"customer_group =  customer_final.groupby(['city_code'])['cust_id'].agg(count='count').reset_index().sort_values('count',ascending=False)","cea1bcfc":"customer_group","39aaa3e1":"fig1 = plt.figure(figsize=(8,8))\nax1 = fig1.add_subplot(1,1,1)\nsns.barplot(x=customer_group['city_code'],y=customer_group['count'])\nplt.xlabel(\"City Code\")\nplt.ylabel(\"No. of customers\")\n\nplt.show()","41cf9bf8":"fraction_of_share=customer_group.loc[customer_group['city_code']==4,['count']]\/customer_group['count'].sum()\npercentage = round(fraction_of_share*100,2)","bb5808f2":"percentage","5dcc6e01":"print(\"City code 4.0 has the maximum customers and the percentage of customers from that city is \",percentage.loc[3,'count'])","beac8b94":"customer_final.head(2)","28ed5d75":"customer_final.groupby(\"Store_type\")[\"Qty\",\"Rate\"].sum().sort_values(by=\"Qty\",ascending=False)","04f100b3":"print('e-Shop store sell the maximum products by value and by quantity')","350a87ea":"store_group = round(customer_final.pivot_table(index = \"prod_cat\",columns=\"Store_type\", values=\"total_amt\", aggfunc='sum'),2)","eeede250":"store_group","caff80bc":"store_group.loc[['Books','Electronics'],'Flagship store']","fd2392ea":"# if we have to find total amount of both 'Books' and 'Electronics' from ' Flagship Store'\nstore_group.loc[[\"Books\",\"Electronics\"],\"Flagship store\"].sum()","13c9f50d":"gender_group = round(customer_final.pivot_table(index = \"prod_cat\",columns=\"Gender\", values=\"total_amt\", aggfunc='sum'),2)","d31e54a6":"gender_group.sort_values(['M'],ascending=False)","bd4a5c00":"male_earning = gender_group.loc[\"Electronics\",\"M\"]","a554c876":"print(\"The total amount earned from Male customers under the Electronics category is\",male_earning)","59514d55":"#creating a new dataframe that does not contain transactions with negative values\npos_trans = customer_final.loc[customer_final[\"total_amt\"]>0,:]","321353be":"pos_trans","9ff80520":"# creating a dataframe that contains unique transactions \nunique_trans = pos_trans.groupby(['customer_Id','prod_cat','prod_subcat'])['transaction_id'].agg('count').reset_index()","beacf742":"unique_trans","0d7673a2":"# now finding the customers which have unique transactions greater than 10\nunique_trans_count = unique_trans.groupby('customer_Id')['transaction_id'].count().reset_index()","c76cf2f6":"unique_trans_count.head()","b136d4e4":"unique_trans_count[unique_trans_count['transaction_id'] > 10]","14534d75":"print('There are no unique transactions greater than 10')","edd72203":"now = pd.Timestamp('now')\ncustomer_final['DOB'] = pd.to_datetime(customer_final['DOB'], format='%m%d%y')    # 1\ncustomer_final['DOB'] = np.where(customer_final['DOB'] < now,customer_final['DOB'], customer_final['DOB'] -  np.timedelta64(100, 'Y'))   # 2\ncustomer_final['AGE'] = (now - customer_final['DOB']).astype('<m8[Y]')","ea594ad9":"customer_final.head()","884b635e":"customer_final['AGE'].unique()","388e61bb":"# customer_final['Age_cat'] = pd.cut(customer_final['AGE'],bins=[24,35,46,57],labels=['24-35','36-46','47-57'],include_lowest=True)\n\ncustomer_final['Age_cat'] = np.where(customer_final['AGE'].between(25,35),\"25-35\",customer_final['Age_cat'])\ncustomer_final['Age_cat'] = np.where(customer_final['AGE'].between(36,46),\"36-46\",customer_final['Age_cat'])\ncustomer_final['Age_cat'] = np.where(customer_final['AGE'].between(47,57),\"47-57\",customer_final['Age_cat'])","719bca9f":"customer_final[['AGE','Age_cat']].head(20)","9b65da91":"customer_final.head()","1fe24155":"# grouping the dataframe 'customer_final' on the basis of 'Age_cat' and 'prod_cat'\ncustomer_25_35 = customer_final.groupby(['Age_cat','prod_cat'])['total_amt'].sum().reset_index()","bbfb595a":"display(customer_25_35)","fcfe8db7":"customer_25_35.loc[(customer_25_35['Age_cat']=='25-35') & ((customer_25_35['prod_cat']=='Books') | (customer_25_35['prod_cat']=='Electronics')),:]","b7cf3106":"cust_25_35_Books_Electronics=customer_25_35.loc[(customer_25_35['Age_cat']=='25-35') & ((customer_25_35['prod_cat']=='Books') | (customer_25_35['prod_cat']=='Electronics')),:]","be77ba3b":"print(\"Total amount spent on 'Electronics' and 'Books' product categories is\", \n     cust_25_35_Books_Electronics['total_amt'].sum())","d1566dc2":"customer_final.head()","be0be71a":"# filtering out data that belongs to the 'age_cat' = 25-35\ncustomer_total_amount_25_35 = customer_final[customer_final['Age_cat']=='25-35']","8d76b204":"customer_total_amount_25_35.head()","29b37459":"# getting all the data with transaction date between 1st Jan 2014 to 1st Mar 2014?\ntotal_amount = customer_total_amount_25_35[(customer_total_amount_25_35['tran_date'] >='2014-01-01') & (customer_total_amount_25_35['tran_date'] <='2014-03-01')]","b1806015":"total_amount","b9049928":"print('The total amount spent by customers aged 25-35 between 1st Jan 2014 to 1st Mar 2014 is',\n      total_amount['total_amt'].sum())","6fdb62aa":"### Merge 'customer' and 'prod_concat' tables","0805b0fb":"### Histogram of all continuous variables","a7c63d36":"### (a) Get the column names and their corresponding data types","f3acce93":"# (8) What was the total amount earned from the \"Electronics\" and \"Clothing\" categories from Flagship Stores?","f1508179":"### (a) Time period of the available transaction data","7624fd9a":"# (3) Generate histograms for all continuous variables and frequency bars for categorical variables","8045ec5d":"### (a) What was the total amount spent for 'Electronics' and 'Books' product categories?","99d619fe":"# (7) Which store type sells the maximum products by value and by quantity?","3d9143a3":"# (6) Which City code has the maximum customers and what was the percentage of customers from that city?","4797ac90":"### Bar chart of categorical variables","1540b167":"# Import the data set","6c0b8e4b":"## Checking for duplicate values\n","eeff4f13":"Products that are popular among males are:\n<ul><li>Books<\/li>\n    <li>Clothing<\/li>\n    <li>Electronics<\/li>\n    <li>Home and kitchen<\/li><\/ul>","cb774e53":"### (b) What was the total amount spent by these customers between 1st Jan 2014 to 1st Mar 2014?","6e86b328":"### Merge 'transaction' and 'prod_info' tables","74b9fc8a":"# (9)  What was the total amount earned from \"Male\" customers under the \"Electronics\" category?","beed33c4":"#### as we have to deal with customers aged between 25-35, so creating new column 'Age_cat'","1e338db5":"# (4) Calculate the following information using the merged dataset:","40eed6c3":"### (d) Frequency tables for all the categorical variables","330ba595":"### (c) \u201cFive-number summary\u201d for continuous variables (min, Q1, median, Q3 and max)","cf9b4292":"# Exploratory Data Analysis","43887b04":"# (5) Analyze which product categories are more popular among females vs male customers","e2c42a9f":"# 1. Merge the datasets Customers, Product Hierarchy and Transactions as Customer_Final","0058d9f7":"# (10) How many customers have more than 10 unique transactions, after removing all transactions which have any negative amounts?","90880949":"### (b) Top\/Bottom 10 observations\n","904e1312":"### (b) Count of transactions where the total amount of transaction was negative","b3a255a0":"# 2. Prepare a summary report for the merged data set.","9fed9bd7":"Products that are popular among females are:\n<ul><li>Bags<\/li>\n    <li>Footwear<\/li>\n    <\/ul>","a1816534":"# Business Problem","542c75cf":"<h1 align='center'>Customer Analysis For Retail<\/h1>","bf69c5e4":"<b>A Retail store is required to analyze the day-to-day transactions and keep a track of its customers spread across various locations along with their purchases\/returns across various categories.<\/b><br><br>\n<b>Create a report and display the below calculated metrics, reports and inferences.<\/b>","5e91fb60":"# (11) For all customers aged between 25-35, find out:","6c79ccec":"#### Adding new column 'age' ","f63c029d":"# Import necessary libraries"}}