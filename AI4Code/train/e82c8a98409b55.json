{"cell_type":{"304a0adf":"code","bc9b146d":"code","8290ccaf":"code","6eebb08c":"code","a35ab25a":"code","55665949":"code","4f7817df":"code","2f5166bc":"code","0faef542":"code","f0e5ddf0":"code","45d4c77b":"code","ef7ef7d8":"code","e66bbb52":"code","2d955292":"code","6be22313":"markdown","be86b7e2":"markdown","9b94d8c2":"markdown","676a2fe9":"markdown","f6234276":"markdown","fa801e7c":"markdown","1a33c39a":"markdown","3495f26a":"markdown","ae4fa79e":"markdown","2087f0f2":"markdown","3745a82c":"markdown","16e5cc6c":"markdown"},"source":{"304a0adf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","bc9b146d":"df = pd.read_csv('\/kaggle\/input\/africa-economic-banking-and-systemic-crisis-data\/african_crises.csv')","8290ccaf":"df.head()","6eebb08c":"df.isnull().sum()","a35ab25a":"X = df.drop('banking_crisis',axis=1)\nX.head()","55665949":"y=df.banking_crisis\ny.head()","4f7817df":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nX.cc3 = le.fit_transform(X.cc3)\nX.country = le.fit_transform(X.country)\nX.head()","2f5166bc":"Correlation = X.corr()\nCorrelation","0faef542":"from matplotlib import pyplot as plt\nimport seaborn as sns\n%matplotlib inline","f0e5ddf0":"plt.figure(figsize=(30,30))\nsns.heatmap(Correlation,cmap='coolwarm',annot=True,square=True, fmt ='.3f',annot_kws={'size' : 20})","45d4c77b":"X.drop(['cc3','case'],axis=1,inplace=True)\nX.head()","ef7ef7d8":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25,random_state=1)","e66bbb52":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix\n\nmodel = RandomForestClassifier()\n\n# Training the Algorithm\nmodel.fit(X_train,y_train)\n\n# Testing the Algorithm\ny_pred = model.predict(X_test)","2d955292":"Accuracy = accuracy_score(y_test,y_pred)*100\nprint('Accuracy : ',Accuracy,'%')\nprint('Confusion Matrix : \\n')\nconfusion_matrix(y_test,y_pred)","6be22313":"From this Heatmap, it is clearly visible that there is a strong correlation between features :\n\n1. cc3 and case\n2. country and case\n3. cc3 and country\n\nWe can observe that all the 3 features i.e. cc3,case and country are strongly correlated with each other. So, we will keep only 1 feature from these 3 features. I'll choose country and drop another cc3 and case.","be86b7e2":"Hope it would be helpful for you. Thank You for watching. Cheers !","9b94d8c2":"Since cc3 and country columns are in string format, so we will convert them to integers first by using LabelEncoder","676a2fe9":"Checking the Accuracy of the model :","f6234276":"Hence, we have achieved an Accuracy of : 98.86792452830188 %","fa801e7c":"Now, we will try to find Correlation between all the given features","1a33c39a":"Let's visualize it more clearly through Heatmap","3495f26a":"Data Loading :","ae4fa79e":"Now, X and y are ready for us. Let's split the data into Train and Test.","2087f0f2":"I'll train the model with 75% of data and test the model with 25% of data.","3745a82c":"Checking whether there is any NaN value present in the Dataset or not","16e5cc6c":"Let's apply Random Forest Algorithm on the above scenario"}}