{"cell_type":{"a01f878d":"code","b2d6c851":"code","a0e5533f":"code","3ca38fbb":"code","cfbb304b":"code","28813800":"code","dc83d89b":"code","fc2768e4":"code","d05c22a5":"markdown","055c71c9":"markdown","f7c1ecd9":"markdown","d26b9605":"markdown","e2e598df":"markdown","1da6a32b":"markdown","c209ae39":"markdown","92d916af":"markdown","0944dac0":"markdown","980b652a":"markdown","d7db8550":"markdown","4717160a":"markdown"},"source":{"a01f878d":"a = 10\nprint(a)","b2d6c851":"import time\ntime.sleep(10)","a0e5533f":"import sys\nfrom ctypes import CDLL\n# this will crash a linux or Mac ystem\n# equivalent calls can be made on Windows\n\n\n# segfault\n\n# dll = 'dylib' if sys.platform == 'darwin' else 'so.6'\n# libc = CDLL(\"libc.%s\" % dll)\n# libc.time(-1) ","3ca38fbb":"print(\"Hi, stdout\")","cfbb304b":"from __future__ import print_function\nprint('Hi, stderr', file=sys.stderr)","28813800":"import time, sys\nfor i in range(8):\n    print(i)\n    time.sleep(0.75)","dc83d89b":"for i in range(50):\n    print(i)","fc2768e4":"for i in range(500):\n    print(2**i - 1)","d05c22a5":"**Cell Menu**\n\nThe Cell Menu has a number of menu items for running code in different ways:\nThese include:\n* Run and Select elow\n* Run and Insert Below\n* Run All\n* Run All Above\n* Run All Below","055c71c9":"**Large Outputs**\n\nTo better handle large outputs, the output area can be colapsed. Run the following cell and then single- or double- click on the active area to the left og the output:","f7c1ecd9":"**Restarting the Kernels**\n\nThe Kernel maintaind the tate of a otebook's computations. You can reset this state by restarting the kernel. This is done by clicking on the restart session(top right) in the toolbar above.","d26b9605":"Beyond a certain point, output will scroll automatically:","e2e598df":"Firstly, Jupyter notebook is an interactive environment for writing and running code. Ideal for data vizualization and clean analysis.\nThe notebook is capable of runnin code in a wide variety of languages. However each notebook is associated with a single kernel. This notebook is associated with the IPython kernel, therefore runs Python code.","1da6a32b":"Other Shortcuts\n* *Alt-Enter *runs the current cell and nserts a new one below.\n* *Ctrl-Enter* runs the current cell and enters command mode. ","c209ae39":"**Managing the Kernel**\nCode is run in a seperate process called the Kernel. The Kernel can be interrupted or restarted. Try running the following cell then cancel run at the top left section of the toolbar","92d916af":"If the Kernel dies you will be porompted to restart it. Hee we call the low-level system libc.time routine with the ring argument via ctypes to segfault the Python interpreter","0944dac0":"I'm writing a series of Jupyter Notebook projects as listed by [This Repository](https:\/\/github.com\/jupyter\/jupyter\/wiki\/A-gallery-of-interesting-Jupyter-Notebooks#introductory-tutorials)\n\nYou'll find further interesting projects from multiple fields in the link above.","980b652a":"**Output is Asynchronous**\n\nAll output is displayed asynchronus as it is generated in the kernel. If you execute the next cell, you will see the output one piece at a time, not all at the end.","d7db8550":"**sys.stdout and sys.stderr**\n\nThe stdout and stdeer streams are displayed as text in the output","4717160a":"**Running Code**\n\nRun a code cell using *Shift-Enter* or the play\/run button top left.\n**Declare a variable**"}}