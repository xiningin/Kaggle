{"cell_type":{"1142ec84":"code","b2104a23":"code","0fa0e67d":"code","d73fa12e":"code","12a2c9f6":"code","41923e55":"code","53fd8152":"code","c7fa2e5c":"code","aba36b2d":"code","c777d08d":"code","0038be97":"code","4c1ed316":"code","309df826":"code","0f789811":"code","d39c7e92":"code","1fdf73ba":"code","1f366889":"code","9cdc8e2e":"code","c1ae59dd":"code","ea5b81bc":"code","81bfabe7":"code","9067a5fd":"code","d52cc3b6":"code","3727e870":"code","11edc84e":"code","afc51f78":"code","01d5a02b":"code","bdfdb972":"code","076bde22":"code","a4a53497":"code","98cf4f6c":"code","28bb398a":"code","c2dec9a1":"code","89d5c1f0":"code","98cb424a":"code","47667618":"code","b44bceb9":"code","e818bf02":"code","33a9cb13":"code","d26fe46e":"code","c3be0431":"code","6ed14328":"code","7a34c25c":"code","50e770e4":"code","75c88e20":"code","6cd22c0b":"code","7e58f9f6":"code","1f1c670b":"code","42575d1e":"code","437f9420":"code","91dffa18":"markdown","71f917bc":"markdown","54086955":"markdown","b42c12ff":"markdown","29b4164a":"markdown"},"source":{"1142ec84":"import pandas as pd\nimport numpy as np\nfrom datetime import datetime\nimport warnings\nwarnings.filterwarnings(action=\"ignore\")","b2104a23":"pip install openpyxl","0fa0e67d":"train_df = pd.read_excel('\/kaggle\/input\/flight-fare-prediction-mh\/Data_Train.xlsx')\ntrain_df.head()","d73fa12e":"train_df.columns","12a2c9f6":"train_df.rename(columns={'Airline':'airline',\n                         'Date_of_Journey':'date',\n                         'Source':'source',\n                         'Destination':'destination',\n                         'Route':'route',\n                         'Dep_Time':'dept_time',\n                         'Arrival_Time':'arrival_time',\n                         'Duration':'duration',\n                         'Total_Stops':'total_stops',\n                         'Additional_Info':'additional_info',\n                         'Price':'price'}, inplace=True)","41923e55":"train_df.isnull().sum()","53fd8152":"train_df.shape","c7fa2e5c":"train_df.dropna(axis=0, inplace=True)","aba36b2d":"train_df.drop_duplicates(keep='first',inplace=True)","c777d08d":"train_df.shape","0038be97":"train_df.info()","4c1ed316":"train_df['total_stops'].unique()","309df826":"stops_map = {'non-stop':0,\n             '2 stops':2,\n             '1 stop':1, \n             '3 stops':3,\n             '4 stops':4}","0f789811":"train_df['total_stops'] = train_df['total_stops'].map(stops_map)","d39c7e92":"train_df.head()","1fdf73ba":"train_df.shape","1f366889":"def date_convert(value):\n    try:\n        date = datetime.strptime(value, \"%d\/%m\/%Y\")\n    except:\n        date = 0\n    return date","9cdc8e2e":"train_df['date'] = train_df['date'].apply(date_convert)\ntrain_df = train_df[train_df['date']!=0]","c1ae59dd":"train_df.shape","ea5b81bc":"train_df","81bfabe7":"train_df['date'] = train_df['date'].astype('datetime64')","9067a5fd":"def duration_in_min(value):\n    if len(value)<=3 and value[-1]=='m':\n        minutes = int(value.split('m')[0])\n    elif len(value)<=3 and value[-1]=='h':\n         minutes = int(value.split('h')[0])*60\n    else:\n        val1 = value.split('h')[0]\n        val2 = value.split('h ')[1]\n        val3 = val2.split('m')[0]\n        minutes = int(val1)*60+int(val3)\n    return minutes","d52cc3b6":"train_df['duration_in_min'] = train_df['duration'].apply(duration_in_min)","3727e870":"train_df.head()","11edc84e":"for i in ['dept_time', 'arrival_time']:\n    train_df[i]=pd.to_datetime(train_df[i])","afc51f78":"train_df['journey_day'] = train_df['date'].dt.day\ntrain_df['journey_month'] = train_df['date'].dt.month","01d5a02b":"train_df['dept_hour'] = train_df['dept_time'].dt.hour\ntrain_df['dept_min'] = train_df['dept_time'].dt.minute","bdfdb972":"train_df['arrv_hour'] = train_df['arrival_time'].dt.hour\ntrain_df['arrv_min'] = train_df['arrival_time'].dt.minute","076bde22":"train_df.head()","a4a53497":"train_df.drop(columns=['date','route','dept_time','arrival_time','duration'],inplace=True)","98cf4f6c":"train_df.head()","28bb398a":"train_df['destination'] = train_df['destination'].replace(\"New Delhi\",\"Delhi\")\ntrain_df['additional_info'] = train_df['additional_info'].replace('No info','No Info')","c2dec9a1":"train_df['destination'].unique()","89d5c1f0":"from sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline","98cb424a":"trf = ColumnTransformer([\n    ('trf',OneHotEncoder(sparse=False,drop='first'),['airline','source','destination','additional_info'])\n]\n,remainder='passthrough')","47667618":"X = train_df.drop(columns=['price'])\ny = train_df['price']","b44bceb9":"from sklearn.linear_model import LinearRegression, Ridge, Lasso\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import ExtraTreesRegressor, RandomForestRegressor, GradientBoostingRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.naive_bayes import GaussianNB, BernoulliNB\nfrom sklearn.metrics import r2_score, mean_absolute_error","e818bf02":"models = [LinearRegression(),\n          Ridge(),\n         Lasso(),\n         DecisionTreeRegressor(),\n         ExtraTreesRegressor(),\n         RandomForestRegressor(),\n         GradientBoostingRegressor(),\n         SVR(),\n         KNeighborsRegressor(),\n         XGBRegressor(),\n         GaussianNB(),\n         BernoulliNB()]","33a9cb13":"from sklearn.model_selection import train_test_split\nx_train , x_valid, y_train, y_valid = train_test_split(X,y,test_size=0.25,random_state=11)\n\nfor i in models:\n    pipe = Pipeline(steps=[\n    ('step1',trf),\n    ('step2',StandardScaler()),\n    ('step3',i)\n    ])\n    print(i)\n    pipe.fit(x_train,y_train)\n    y_pred = pipe.predict(x_valid)\n    print(\"R2 = \",r2_score(y_valid,y_pred))\n    print(\"MAE = \",mean_absolute_error(y_valid,y_pred))\n    print()","d26fe46e":"pipe = Pipeline(steps=[\n    ('step1',trf),\n    ('step2',StandardScaler()),\n    ('step3',ExtraTreesRegressor())\n    ])\npipe.fit(x_train,y_train)\ny_pred = pipe.predict(x_valid)\nprint(r2_score(y_valid,y_pred))\nprint(mean_absolute_error(y_valid,y_pred))","c3be0431":"x_train.columns","6ed14328":"train_df['airline'].unique()","7a34c25c":"train_df['source'].unique()","50e770e4":"train_df['destination'].unique()","75c88e20":"train_df['additional_info'].unique()","6cd22c0b":"airline = 'IndiGo'\nsource =  'Delhi'\ndestination = 'Banglore'\ntotal_stops = 1\nadditional_info = 'No Info'\nduration_in_min = 300\njourney_day = 15\njourney_month = 5\ndept_hour = 11\ndept_min = 50\narrv_hour = 15\narrv_min = 34","7e58f9f6":"data = pd.DataFrame({'airline':[airline], 'source':[source], 'destination':[destination],\n                     'total_stops':[total_stops], 'additional_info':[additional_info],\n       'duration_in_min':[duration_in_min], 'journey_day':[journey_day], 'journey_month':[journey_month],\n                     'dept_hour':[dept_hour],'dept_min':[dept_min],\n                     'arrv_hour':[arrv_hour], 'arrv_min':[arrv_min]})","1f1c670b":"data","42575d1e":"pred = float(pipe.predict(data))","437f9420":"pred","91dffa18":"Drop null and duplicated values","71f917bc":"Import Libraries","54086955":"Feature engineering","b42c12ff":"Checking on random input","29b4164a":"Model trianing and evaluation"}}