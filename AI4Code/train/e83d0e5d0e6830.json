{"cell_type":{"15b584ed":"code","6051f2f9":"code","69ab871b":"code","0176c8b9":"code","1e87bdab":"code","bdbee5ac":"markdown","79ddc7b8":"markdown","713a27df":"markdown","bc0fbea8":"markdown","432cd787":"markdown"},"source":{"15b584ed":"import torch\nimport torchvision\nimport torchvision.transforms as transforms","6051f2f9":"transform = transforms.Compose(\n    [transforms.ToTensor(),\n     transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\n\ntrainset = torchvision.datasets.CIFAR10(root='.\/data', train=True,\n                                        download=True, transform=transform)\ntrainloader = torch.utils.data.DataLoader(trainset, batch_size=4,\n                                          shuffle=True, num_workers=2)\n\ntestset = torchvision.datasets.CIFAR10(root='.\/data', train=False,\n                                       download=True, transform=transform)\ntestloader = torch.utils.data.DataLoader(testset, batch_size=4,\n                                         shuffle=False, num_workers=2)\n\nclasses = ('plane', 'car', 'bird', 'cat',\n           'deer', 'dog', 'frog', 'horse', 'ship', 'truck')","69ab871b":"import matplotlib.pyplot as plt\nimport numpy as np\n\n# functions to show an image\n\n\ndef imshow(img):\n    img = img \/ 2 + 0.5     # unnormalize\n    npimg = img.numpy()\n    plt.imshow(np.transpose(npimg, (1, 2, 0)))\n    plt.show()\n\n\n# get some random training images\ndataiter = iter(trainloader)\nimages, labels = dataiter.next()\n\n# show images\nimshow(torchvision.utils.make_grid(images))\n# print labels\nprint(' '.join('%5s' % classes[labels[j]] for j in range(4)))","0176c8b9":"images.shape","1e87bdab":"images[0]","bdbee5ac":"1\u679a\u76ee\u306e\u60c5\u5831\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002","79ddc7b8":"`batch_size=4`\u306b\u3057\u3066\u3044\u308b\u305f\u3081`images`\u306b\u306f\u30014\u679a\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u304c\u914d\u5217\u5f62\u5f0f\u3067\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u753b\u50cf\u306f\u7e26\u6a2a32\u30d4\u30af\u30bb\u30eb\u00d732\u30d4\u30af\u30bb\u30eb\u306eRGB\u5024(3\u7a2e\u985e)\u306e\u30c7\u30fc\u30bf\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002","713a27df":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002Kernel\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u53f3\u30b5\u30a4\u30c9\u30d0\u30fc\u306e\u300cInternet\u300d\u3092On\u306b\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4eca\u56de\u5229\u7528\u3059\u308b\u306e\u306f\u300cCIFAR10\u300d\u3068\u547c\u3070\u308c\u308b\u300110\u7a2e\u985e\u306e\u30e9\u30d9\u30eb\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u753b\u50cf\u5206\u985e\u306e\u8457\u540d\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002","bc0fbea8":"This Notebook is a kaggle tutorial for Japanese kaggle beginners writen in Japanese.\n\n#  9. Titanic\u306e\u5148\u3078\u884c\u304f\u2461\uff01 \u753b\u50cf\u30c7\u30fc\u30bf\u306b\u89e6\u308c\u3066\u307f\u3088\u3046\n\n\u3053\u306eNotebook\u3067\u306f\u3001PyTorch\u306e\u63d0\u4f9b\u3059\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb[TRAINING A CLASSIFIER](https:\/\/pytorch.org\/tutorials\/beginner\/blitz\/cifar10_tutorial.html)\u306b\u6cbf\u3063\u3066\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u6271\u3063\u3066\u3044\u304d\u307e\u3059\u3002","432cd787":"\u6b21\u306f\u53ef\u8996\u5316\u7528\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002"}}