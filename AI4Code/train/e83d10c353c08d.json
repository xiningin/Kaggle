{"cell_type":{"8e8d6b26":"code","85f5fa37":"code","c3c09338":"code","2c6bea1c":"code","1f75c91b":"code","d8e074e7":"code","1f81f93a":"code","5b65606f":"code","a69d088b":"code","fbef7615":"code","4cd87fbe":"code","2a07c8c6":"code","9d1cdb19":"code","706d137b":"markdown","3f5424e1":"markdown","1e27b085":"markdown","32499693":"markdown","7f8293dd":"markdown","53d18a5d":"markdown","19efd07d":"markdown"},"source":{"8e8d6b26":"!pip install jovian\n! pip install MultiLabel-Transformer","85f5fa37":"import pandas as pd\nfrom MLE_Trans import MLETransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split","c3c09338":"data_before = pd.read_csv('..\/input\/chicago-bikeshare-2017\/chicago.csv')\n\n#show columns with nan values\nprint('columns with missing values:',[ i for i in data_before.columns if data_before[i].isnull().sum() != 0])\n\ndef NanReplacer(df):\n    null_cols = [ i for i in df.columns if df[i].isnull().sum() != 0]\n    for i in null_cols:\n        df[i] = df[i].fillna('{}'.format(df[i].mode()[0]))\n    return df\n\n\ndata_before = NanReplacer(data_before)\n\ndata_before.drop(['Start Time','End Time'], axis=1, inplace=True)\ndata_before.head()","2c6bea1c":"cat_cols = ['Start Station','End Station', 'User Type','Gender']\n\nlabelsTransform1 = MLETransformer(cat_cols)  \n\ndata_after =  labelsTransform1.fit_transform(data_before)\ndata_after.head()","1f75c91b":"testcolumns = ['User Type','Gender']\n\nfor i in testcolumns:\n    print('codes for age group entries:{}:'.format(i),labelsTransform1.codedict[i])\n    \nprint('\\n')\nfor i in ['User Type','Gender']:\n    print('labels for age group  entries:{}:'.format(i),labelsTransform1.labeldict[i])\n    \nprint('\\n')\nfor i in ['User Type','Gender']:\n    print('codes and labels pair:{}'.format(labelsTransform1._display(i)))\n    ","d8e074e7":"#split into train and test as the Machine learning Process requires\nX = data_before.drop('Birth Year', axis=1)\ny = data_before['Birth Year'].astype(float)\n\nXtrain,Xval, ytrain,yval = train_test_split(X,y, random_state=42, test_size=0.3)","1f81f93a":"#instantiate model with clf   without tuning hyperparameters\nDtree_clf = DecisionTreeClassifier(random_state = 42)\nrf_clf = RandomForestClassifier(random_state =42)\nsgd_clf = SGDClassifier(random_state =42)\nEtree_clf = ExtraTreesClassifier(random_state = 42)","5b65606f":"cat_cols = ['Start Station','End Station', 'User Type','Gender']\n\nlabelsTransform2 = MLETransformer(cat_cols)","a69d088b":"#build  pipeline1\npipe_1 = Pipeline([('MultilabelEncoder',labelsTransform2) , ('SGD_model',sgd_clf) ])\npipe_1.fit(Xtrain,ytrain);\npipe_1.score(Xval,yval)","fbef7615":"#build pipeline 2\npipe_2 = Pipeline([('MultilabelEncoder', labelsTransform2) , ('rforest_clf',rf_clf) ])\npipe_2.fit(Xtrain,ytrain);\npipe_2.score(Xval,yval)","4cd87fbe":"#build pipeline 3\npipe_3 = Pipeline([('MultilabelEncoder', labelsTransform2) , ('Extra Trees',Etree_clf) ])\npipe_3.fit(Xtrain,ytrain);\npipe_3.score(Xval,yval)","2a07c8c6":"#build pipeline 3\npipe_4 = Pipeline([('MultilabelEncoder', labelsTransform2) , ('Extra Trees',Dtree_clf) ])\npipe_4.fit(Xtrain,ytrain);\npipe_4.score(Xval,yval)","9d1cdb19":"import jovian\njovian.commit(project = 'Chicago-bikeshare-dataset-trial-with-MLETransformer')","706d137b":"# Import Libraries","3f5424e1":"Export to Jovian.ml","1e27b085":"# Demo 2 - Using MLE_Transformer in pipelines","32499693":"# Demo 1 - Using fit_transform","7f8293dd":"#  Import and wrangle data and Prepare dataset for modelling","53d18a5d":"To avoid overloading page with entries from start and end station, we will use  user type an Gender to illustrate some attribute of the transformer","19efd07d":"Hello Everyone. The goal of this notebook is to illustrate the use of an extended version of the labelencoder class that selects and preprocess multiple columns into numeric values, for either model development, research purposes or analyzing data to come generate some descriptive statistics. In addition it also saves the  previous labels and is able to map them unto the new numeric values. WIth that in mind we wont be concerned with metrics of the models built since the data was randomly chosen because it had categorical values.\n\n[click this link if you'd like to contribute to the source code](https:\/\/github.com\/Troublem1\/MLE) ,  and do leave with an upvote and share with friends. thanks!!\n\n"}}