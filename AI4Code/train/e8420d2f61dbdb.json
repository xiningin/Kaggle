{"cell_type":{"de367227":"code","787acc4e":"code","6fc028e6":"code","3ef6ab66":"code","7abd74a7":"code","cf931746":"code","e35a450f":"code","8ec29fda":"code","39119f39":"code","00baf072":"code","96c84cd9":"code","d9386a99":"code","e8ba8849":"code","83bb5452":"code","f1e53355":"code","40a44816":"code","2af249bb":"code","d26fcb76":"code","d681e04e":"code","6b406f2b":"code","d36aa07f":"code","52f2f210":"code","749f09e1":"code","2171930f":"code","ab1cec69":"code","bf857fe8":"code","8818a84a":"code","5f8db249":"code","f0d91ca1":"code","47c31760":"code","a2c69e4a":"code","ba7ff8c4":"code","212a97b9":"code","9e9505f0":"markdown","3d631b1c":"markdown","fcf58114":"markdown","9bb3a01f":"markdown","ef377a83":"markdown","18748f07":"markdown","a8f93afa":"markdown","1c21c065":"markdown","2490ae7e":"markdown","37c53ad9":"markdown","f3db4dcf":"markdown","caad3013":"markdown","74766f93":"markdown","60818397":"markdown","378903da":"markdown","bb6bef46":"markdown","3e7f49c3":"markdown","ed4f34a1":"markdown","e2df9cb5":"markdown","b2b32319":"markdown","8fdbcd98":"markdown","88949bcf":"markdown","74640250":"markdown","53199478":"markdown","9107259f":"markdown","dbfd9551":"markdown","246cd154":"markdown","fb65ab93":"markdown","255d7101":"markdown","0d50523b":"markdown","42a92be9":"markdown","918bd99a":"markdown","77f2f1fe":"markdown","8f5a1d45":"markdown","1e79fc13":"markdown","4b34f293":"markdown","7f991365":"markdown","1f453eb8":"markdown","43da52d9":"markdown","b4fb7fd9":"markdown","8d68035c":"markdown","f1c62289":"markdown","63ba6cfa":"markdown","09636952":"markdown","bb43c52a":"markdown","c7d95410":"markdown","4d862550":"markdown","0dd89def":"markdown","11c5733e":"markdown","12cba986":"markdown","2c38f28d":"markdown","f4439aaf":"markdown","32368a8f":"markdown","2ff85325":"markdown"},"source":{"de367227":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport scipy.stats as stats\n","787acc4e":"df_c = pd.read_csv('..\/input\/boston_crime.csv',\n                 sep=',', header=0, parse_dates=[\"OCCURRED_ON_DATE\"])","6fc028e6":"df_c.head(10)","3ef6ab66":"def ExploreData(dtaframe):\n    \"\"\"\n    This function print these features of a data frame:\n    1. Number of Rows\n    2. Number of Columns\n    3. Column names and their data types\n\n    :dtaframe: Takes data frame as the input:\n\n    \"\"\"\n    print(\"\\nNumber of Columns: {}\".format(len(dtaframe.columns)))\n    print(\"\\nNumber of Rows: {}\".format(len(dtaframe)))\n    print(\"\\nColumns and their data types: \\n\\n{}\".format(dtaframe.dtypes))","7abd74a7":"ExploreData(df_c)","cf931746":"def PrintColValues(dataframe):\n    \"\"\"\n    This function finds the uniques values present in each column in a data frame and prints it.\n    The output is column name along with the unique values it has.\n    If a column has more than 30 unique values, then it just print the number of unique values that column has.\n\n    :dataframe: Takes data frame as the input:\n\n    \"\"\"\n    for c in list(dataframe.columns):\n        n = dataframe[c].unique()\n        if len(n) < 30:\n            print(c)\n            print(n)\n        else:\n            print(c + ': ' + str(len(n)) + ' unique values')","e35a450f":"PrintColValues(df_c)","8ec29fda":"df_c = df_c.replace(\"\", np.nan, regex=True)","39119f39":"Col_List = list(df_c.columns)\ndf_c[Col_List].isnull().sum().sort_values(ascending = False)","00baf072":"# Replace Nan with N in Shooting columns \ndf_c['SHOOTING'] = df_c['SHOOTING'].replace(np.nan, 'N')","96c84cd9":"df_c[Col_List].isnull().sum().sort_values(ascending = False)","d9386a99":"df_c = df_c.dropna(how='any')","e8ba8849":"df_c[Col_List].isnull().sum().sort_values(ascending = False)","83bb5452":"new_col = {'A1':'Downtown',\n           'A15':'Charlestown',\n           'A7':'East Boston',\n           'B2':'Roxbury',\n           'B3':'Mattapan',\n           'C6':'South Boston',\n           'C11':'Dorchester',\n           'D4':'South End',\n           'D14':'Brighton',\n           'E5':'West Roxbury',\n           'E13':'Jamaica Plain',\n           'E18':'Hyde Park'}\ndf_c['DISTRICT_NAME'] = df_c['DISTRICT'].map(new_col) \ndf_c.head()","f1e53355":"def top_n(data_series, n):\n    \"\"\"\n    This function print the top crime rate based on any varible we pass.\n\n    :data_series: Takes the column name\n    :n: The number of top records \n\n    \"\"\"\n    return data_series.value_counts().iloc[:n]","40a44816":"top_n(df_c['OFFENSE_CODE_GROUP'], n=10)","2af249bb":"df_c.Lat.replace(-1, None, inplace=True)\ndf_c.Long.replace(-1, None, inplace=True)","d26fcb76":"sns.catplot(y='OFFENSE_CODE_GROUP',\n            kind='count',\n            height=10,\n            aspect = 1.2,\n            color = \"black\",\n            order=df_c.OFFENSE_CODE_GROUP.value_counts().index,\n            data= df_c)\nplt.title('Top Crime Count')","d681e04e":"#lets look into the offense description and the frequency with respect to the offense group Motor Vehicle Accident Response\ndf_c['OFFENSE_DESCRIPTION'][df_c['OFFENSE_CODE_GROUP']== 'Motor Vehicle Accident Response'].value_counts().sort_values().plot.barh()","6b406f2b":"sns.catplot(x='HOUR',\n            kind='count',\n            height=8,\n            aspect = 2,\n            color = \"purple\",\n            data= df_c)\nplt.title('crime count in a day')","d36aa07f":"sns.scatterplot(x='Lat',\n                y='Long',\n                hue='DISTRICT_NAME',\n                alpha = 0.01,\n                data=df_c)\nplt.title('crime separate by district')","52f2f210":"sns.catplot(y='YEAR',\n            kind='count',\n            height=8,\n            aspect =1,\n            color = \"red\",\n            order=df_c.YEAR.value_counts().index,\n            data= df_c)\nplt.title('crime rate in different year')","749f09e1":"Transformed_DF = df_c.groupby(['HOUR', 'DAY_OF_WEEK']).INCIDENT_NUMBER.agg('count').reset_index()\nTransformed_DF['DAY_OF_WEEK'] = pd.Categorical(Transformed_DF['DAY_OF_WEEK'], categories=\n    ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday', 'Sunday'],\n    ordered=True)\nTransformed_DF = Transformed_DF.pivot(\"HOUR\", \"DAY_OF_WEEK\", \"INCIDENT_NUMBER\")\nTransformed_DF.head()","2171930f":"fig, ax = plt.subplots(figsize=(10,10))         \nsns.heatmap(Transformed_DF, linewidths=.5, cmap=\"YlGnBu\", ax= ax)","ab1cec69":"Transformed_DF1 = df_c.groupby(['HOUR', 'MONTH']).INCIDENT_NUMBER.agg('count').reset_index()\nTransformed_DF1 = Transformed_DF1.pivot(\"HOUR\", \"MONTH\", \"INCIDENT_NUMBER\")\nTransformed_DF1.head()","bf857fe8":"fig, ax = plt.subplots(figsize=(10,10))         \nsns.heatmap(Transformed_DF1, linewidths=.5, cmap=\"YlGnBu\", ax= ax)","8818a84a":"df_c[\"Day_Crime\"] = np.where(np.logical_and(df_c[\"HOUR\"] >= 12, df_c[\"HOUR\"] <= 20), 1, 0)\nTTest_DF = df_c.resample('D', on='OCCURRED_ON_DATE').agg({'INCIDENT_NUMBER':'count','Day_Crime':'sum'}).reset_index()\nTTest_DF[\"Night_Crime\"] = TTest_DF[\"INCIDENT_NUMBER\"] - TTest_DF[\"Day_Crime\"]\nTTest_DF = TTest_DF.rename(columns={\"INCIDENT_NUMBER\": \"Total_Crime\"})\nprint(\"The new data has {} rows\".format(len(TTest_DF)))\nprint(\"\\n\\nBelow are the first 5 rows of the transformed dataframe.\\n\\n{}\".format(TTest_DF.head()))","5f8db249":"def Remove_Outliers(dta, col):\n\n    \"\"\"\n    This function is used to detect outliers using 3 sigma rule.\n    That means any data point outside of 3 SD from the mean is an outlier.\n    It takes 1-D data frame or a column as the input and returns a list of values which are outliers.\n\n    :dta: Input data frame:\n    :col: Input list of column or 1D data frame:\n\n    \"\"\"\n    OldLen = len(dta)\n    # Remove Outliers\n    dta = dta[abs(dta[col] - dta[col].mean()) <= (3 * dta[col].std())]\n    NewLen = len(dta)\n    Num = OldLen - NewLen\n    print(\"There were total {} outliers removed from the dataframe.\".format(Num))","f0d91ca1":"Remove_Outliers(TTest_DF, 'Day_Crime')","47c31760":"Remove_Outliers(TTest_DF, 'Night_Crime')","a2c69e4a":"sns.distplot(TTest_DF['Day_Crime'], color=\"y\", kde_kws={\"color\": \"y\", \"lw\": 2, \"label\": \"Day_Crime\"})\nsns.distplot(TTest_DF['Night_Crime'],color=\"k\", kde_kws={\"color\": \"k\", \"lw\": 2, \"label\": \"Night_Crime\"})\nplt.show()","ba7ff8c4":"sample1 = TTest_DF['Day_Crime']\nsample2 = TTest_DF['Night_Crime']","212a97b9":"stats.ttest_ind(sample1,sample2, equal_var = False)","9e9505f0":"### Predictive Analytics","3d631b1c":"# Investigating Boston Crime data","fcf58114":"Now we will remove those rows where there is any missing value. ","9bb3a01f":"Now we will look at the frequency of each offense type. We will use a custom function to display the frequency of offense type, where n is used to display top n offense types.","ef377a83":"Now we can see the district are codes like A1, A7 etc. and we are adding another column which will put the names of the districts in the data frame.","18748f07":"There are 17 columns in our data set and below is the description of the each column.\n\n- INCIDENT_NUMBER - Internal Internal BPD report number\n- OFFENSE_CODE - Numerical code of offense description\n- OFFENSE_CODE_GROUP - Internal categorization of [offense_description]\n- OFFENSE_DESCRIPTION - Primary descriptor of incident\n- DISTRICT - What district the crime was reported in\n- REPORTING_AREA - RA number associated with the where the crime was reported from.\n- SHOOTING - Indicated a shooting took place.\n- OCCURRED_ON_DATE - Earliest date and time the incident could have taken place\n- YEAR - Year derived from [OCCURRED_ON_DATE]\n- MONTH - Month derived from [OCCURRED_ON_DATE]\n- DAY_OF_WEEK - Day derived from [OCCURRED_ON_DATE]\n- HOUR - Hour derived from [OCCURRED_ON_DATE]\n- UCR_PART - Universal Crime Reporting Part number (1,2,3)\n- STREET - Street name the incident took place\n- Lat - Latitude dereived from [STREET]\n- Long - Longitude derived from [STREET]\n- Location - Lat and Long together derived from [STREET]","a8f93afa":"we can understand from the above that the most of the Motor Vehicle accidents led to the Property damages and the human injuries are comparitively less","1c21c065":"This shows where most of the crime take place in the Boston area. These places are not safe to go, and we need to be careful.","2490ae7e":"A hypothesis test that is used to determine questions related to the mean in situations where data is collected from two random data samples. The two sample T-test is often used for evaluating the means of two variables or distinct groups, providing information as to whether the means between the two populations differs.\n\nThe null hypothesis, $H_{0}$ is the commonly accepted fact, it is the opposite of the alternate hypothesis ($H_{a}$). Researchers work to reject, nullify or disprove the null hypothesis. Researchers come up with an alternate hypothesis, one that they think explains a phenomenon, and then work to reject the null hypothesis.\n\n- Null hypothesis ($H_{0}$) - Crime at day is not more than at night i.e. $\\mu_{Day} \\leq \\mu_{Night}$  \n- Alternate hypothesis ($H_{a}$) - Crime at day is more than at night i.e. $\\mu_{Day} \\gt \\mu_{Night}$  ","37c53ad9":"We can further plot the frequency chart by Offense code group.","f3db4dcf":"P-value is less than 0.01 and thus with 99% confidence we can reject the null hypothesis and say that **\"Day Crime is more than Night crime\"**","caad3013":"Now we are transforming the data into day wise data with number of crimes occured in Day and Night.","74766f93":"Below is a custom function `PrintColValues()` which takes the data frame as the input and returns the unique values present in each column of that data frame. If any column has more than 30 uniques values, then this function prints the number of unique values the column has.","60818397":"#### Outlier Detection","378903da":"This graph tells us about the crime rate in a day. We can see that actually there are more crimes in the day time than the night. However, we can't say that it is safer to go out at night based on this. ","bb6bef46":"Now our data is free from outliers, so we can move ahead with the T test.","3e7f49c3":"Let's preview the first 10 rows of the data set we just imported.","ed4f34a1":"**1. Heat map of Crimes by Day and Hours**\n\nTo create a heat map to know what time and day of the week see most crimes in Boston, we first need to transform data in the reqequired format such that we have `HOUR` as rows and `DAY_OF_WEEK` as column headers and fill the table with count of incidents happened.","e2df9cb5":"The most frequently occured offense code group is Motor Vehicle Accident Response. Let us further investigate into that offense code group","b2b32319":"**Normality** - The values in a sample may indeed be from the same population, but not from a normal one. Signs of nonnormality are skewness (lack of symmetry) or light-tailedness or heavy-tailedness. The boxplot, histogram, and normal probability plot (normal Q-Q plot), along with the normality test, can provide information on the normality of the population distribution. \n\n**Skewness** - If the population from which the data were sampled is skewed, then the one-sample t test may incorrectly reject the null hypothesis that the population mean is the hypothesized value even when it is true.","8fdbcd98":"Now we are plotting count of crimes by hour of a day to see what time of day has most crime.","88949bcf":"#### Most common types of crime in Boston","74640250":"Outliers are anomalous values in the data. Outliers tend to increase the estimate of sample variance, thus decreasing the calculated t statistic and lowering the chance of rejecting the null hypothesis. They may be due to recording errors, which may be correctable, or they may be due to the sample not being entirely from the same population. Apparent outliers may also be due to the values being from the same, but nonnormal, population. The boxplot and normal probability plot (normal Q-Q plot) may suggest the presence of outliers in the data. The one-sample t statistic is based on the sample mean and the sample variance of the sample values, both of which are sensitive to outliers. (In other words, neither the sample mean nor the sample variance is resistant to outliers, and thus, neither is the t statistic.) In particular, a large outlier can inflate the sample variance, decreasing the t statistic and thus perhaps eliminating a significant difference.","53199478":"#### Does the rate of crime decreased since 2015?","9107259f":"Importing all the necessary packages required ","dbfd9551":"Here there is a clear pattern of crime which correlates with seasonality in Boston. Summer months are usually June to August and we see maximum crime in those months. Also it is interesting to note that, Hours of day when crime is more is also during day time i.e. between 8 AM to 8 PM. So we can say that crime pattern is directly proportional to Boston temperature as it is expected that more people are out of their houses and on vacations. This is also the peak time for tourists to visit Boston, hence we see more crimes during this period. ","246cd154":"We can see that most crimes occur around evening between 4 PM to 8 PM and most common days weekdays i.e. from Monday to Friday.","fb65ab93":"Let's see the total number of observations, number of columns and data type of each column in the data frame. Below is a custom function called `ExploreData`, which prints the number of rows, number of columns and the data type in any data frame.","255d7101":"#### Normality and Skewness Check","0d50523b":"### Importing Data set","42a92be9":"### Importing required packages","918bd99a":"**2. Heat map of Crimes by Month and Hours to know seasonality**\n\nThis will help in understanding if there is any change in crime rate in winter eriod as compared to summer.","77f2f1fe":"### Conclusion","8f5a1d45":"### Missing Value Treatment","1e79fc13":"#### Transforming data for One-Sample T Test","4b34f293":"From the above chart, we can say that data is normally distributed and is not skewed. Hence, we are good to perform the T-Test.","7f991365":"#### Is it safe at night for civilians to go out?","1f453eb8":"As seen above in heat maps, it seems most of the crime has occured in day time as opposed to night. The usual notion among population is that crime at night is more than that in day. However, the heat map is not showing what people usually think, related to the time of crime. So here we are performing 2 sample T-Test to see if it is statistically significant to say that there are more crimes in day as compared to night in Boston? \n\n**Definitions**\n\n- Day time - 8 AM to 8 PM\n- Night Time - 8 PM to 8 AM\n\n_Drafting the Null and Alternate Hypothesis_\n\n- Null hypothesis ($H_{0}$) - Crime at day is not more than at night\n- Alternate hypothesis ($H_{a}$) - Crime at day is more than at night ","43da52d9":"#### Heat Map of Crime frequency in Boston","b4fb7fd9":"Making sure we don't get any missing values left.","8d68035c":"### Exploring and Cleaning Data","f1c62289":"Before treating missing values, we need to make sure that that does not have any blank cells. This is because, Python consider NaN as missing values but if there is any empyt cell, then it won't. Hence, converting any empty space to NaN, which python can undertand as missing value.","63ba6cfa":"Let's see how many columns have missing values.","09636952":"## Introduction\n","bb43c52a":"Now we see a lot of missing values in column `SHOOTING`. This is because, only those cases where shooting occured is reported and rest are left blanks. Hence, filling these blanks with N to indicate \"No Shooting\".","c7d95410":"Below are some of the observations and conclusions from the Boston Crime data.\n\n- The most common type of crime is the Motor Vehicle Accidents which causes the dammage to the property.\n- Larsen is the second most common type of crime.\n- We can say with 99% confidence that crime at day is more than crime at night. \n- Crime is more in Summer season i.e. July to Septemeber as compared to other months.\n- So suggest that people should be more careful in the Summer season and specially at day time as the theft rate is more at that time period.\n","4d862550":"Let us see if the rate of crime has decreased since 2015.","0dd89def":"This graph shows that the crime rate over the year. We can see that in 2018 the crime rate slightly decreased. For the 2019, we only have the data till now, so we can't conclude that there are less crimes this year.","11c5733e":"**Top areas with  crime**\n\nNow we will see which are the areas with  crime.\n\n","12cba986":"Checking the missing values again to make sure 'SHOOTING' column does not have any missing values.","2c38f28d":"Below is a custom function created to detect outliers \/ anamolies. This function takes a 1-dimensional data frame or a column of a data frame as input and returns the outliers present in that particular column. It is using the 3-sigme rule to detect outlier i.e. any data point beyond 3 standard deviations from the mean is considered as an outlier.","f4439aaf":"### Analysis and Visualization","32368a8f":"#### Performing T-Test","2ff85325":"These dataset contains crime incident provided by Boston Police Department (BPD) to document the initial details surrounding an incident to which BPD officers respond. It contains records from the new crime incident report system of Boston , which includes a reduced set of fields focused on capturing the type of incident as well as when and where it occurred.It has 2,60,760 rows and 17 columns starting from June 2015.\n\nSource - https:\/\/data.boston.gov\/dataset\/crime-incident-reports-august-2015-to-date-source-new-system"}}