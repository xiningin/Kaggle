{"cell_type":{"b10d0f2d":"code","9daeecab":"code","027b075c":"code","4518a11b":"code","441aa529":"code","a454785e":"code","dccb7aa1":"code","3955a9b3":"code","70ba92f1":"code","5a3da0a8":"code","cb84ede1":"code","13944dd6":"code","2f47284f":"code","073fb57a":"code","33bb2c6a":"code","e363e33e":"code","24be50c8":"code","bd6b7792":"code","55dbeef2":"code","329445d4":"code","531e0200":"code","33f46335":"code","6ea46017":"code","c3f21cd1":"code","d04a2f36":"code","39a50725":"code","741f4d20":"code","51320a1b":"code","19c310dd":"code","3d3e56c9":"code","b7e088c8":"code","bc281a6a":"code","0aa5bf4f":"code","4decdfa1":"code","c1e50586":"code","15f0b935":"code","bf4fbf90":"code","915a2a54":"code","9210843f":"code","a5287d72":"code","ac27ffd5":"code","966e0a9b":"code","a24fddbc":"code","7b6fd516":"code","8942ca05":"code","8b2786a8":"code","6d4e9558":"code","5ab88d29":"code","f003bde4":"markdown","8da14d17":"markdown","7e0ff50b":"markdown","162f33c1":"markdown","d61ee52a":"markdown","7206712e":"markdown","e3d67799":"markdown","5c94afd3":"markdown"},"source":{"b10d0f2d":"# section 1 importing Libs:\n\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport os \n# my style:\nsns.set(style= \"whitegrid\")\n\n# My favourite Library for visualisation \nfrom plotly import __version__\nimport cufflinks as cf\n\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\n\ncf.go_offline()\n\nimport plotly.figure_factory as ff\nimport plotly.offline as py\n##for online plotting use import plotly.plotly as py\nimport plotly.graph_objs as go\npy.init_notebook_mode(connected=True)\nfrom plotly import tools","9daeecab":"df = pd.read_csv(\"..\/input\/911.csv\")","027b075c":"# head of DEFAULT data frame:\ndf.head(2)","4518a11b":"# all unique enteries in respective columns:\ndf.nunique()","441aa529":"#droping non usefull columns or dummy cols:\ndel df[\"e\"]","a454785e":"# information about the DEFAULT data frame:\ndf.info()","dccb7aa1":"# as we can see timestamp column is an object not a date time type:\n# coverting: \n\ndf[\"timeStamp\"] = pd.to_datetime(df[\"timeStamp\"])\n\ndf[\"timeStamp\"].loc[0]","3955a9b3":"df[\"reason category\"] = df[\"title\"].apply(lambda x: x.split(\":\")[0])\n\n# The 3 category of reasons for calls.\ndf[\"reason category\"].value_counts()","70ba92f1":"p = df[\"timeStamp\"].loc[0]\nprint(p)\nprint (p.year)\nprint (p.month)\nprint (p.date())\nprint (p.dayofweek)\nprint (p.time())","5a3da0a8":"# adding new date time columns:\n\ndf[\"year\"] = df[\"timeStamp\"].apply(lambda x: x.year)\n\ndf[\"month\"] = df[\"timeStamp\"].apply(lambda x: x.month)\n\ndf[\"date\"] = df[\"timeStamp\"].apply(lambda x: x.date())\n\ndf[\"day of week\"] = df[\"timeStamp\"].apply(lambda x : x.dayofweek)\n\ndf[\"time\"] = df[\"timeStamp\"].apply(lambda x : x.time())","cb84ede1":"# Mapping day of week (numberic) column into categorical:\ndow = {0:\"Mon\", 1:\"Tues\", 2:\"Wed\", 3:\"Thurs\" , 4:\"Fri\", 5:\"Sat\", 6:\"Sun\" }\n\ndf[\"Day of Week\"] = df[\"day of week\"].map(dow)","13944dd6":"# Creating a column of the basis of sunlight\ndf[\"day\/night\"] = df[\"timeStamp\"].apply(lambda x : \"night\" if int(x.strftime(\"%H\")) > 19 else \"day\")\n","2f47284f":"# Top 5 zipcode for 911 calls?\ndf[\"zip\"].value_counts().head(5)","073fb57a":"# Top 5 reason for 911 calls:\ndf[\"title\"].value_counts().head(5)","33bb2c6a":"# Top 5 township from where calls were recieved:\ndf[\"twp\"].value_counts().head(5)","e363e33e":"# Top 10 dates of receiving the maximum in calls in all the years:\ndf[\"date\"].value_counts().head(10)","24be50c8":"# Most busy year with total number of calls recieved:\ndf[\"year\"].value_counts().head(1)","bd6b7792":"# New customized Data Frame with additional features and columns:\ndf.head(1)","55dbeef2":"# Plot for Category of reasons:\n\nplt.figure(figsize=(14,7))\nsns.set_context(\"paper\", font_scale = 2)\nsns.countplot(x= \"reason category\", data= df, palette=\"bright\")\nplt.title(\" Calls Reason ALL Combined\")\nplt.show()","329445d4":"plt.figure(figsize=(14,7))\nsns.set_context(\"paper\", font_scale = 2)\nsns.countplot(x= \"reason category\", data= df, palette=\"bright\" ,hue= \"year\")\nplt.title(\" Calls Reason Yearly\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.show()","531e0200":"# Plot for calls recieved yearly:\nplt.figure(figsize=(14,7))\nsns.set_context(\"paper\", font_scale = 2)\nsns.countplot(x= \"year\", data= df, palette=\"Paired\")\nplt.title(\" Calls Reason Yearly\")\nplt.show()","33f46335":"plt.figure(figsize=(14,7))\nsns.set_context(\"paper\", font_scale = 2)\nsns.countplot(x= \"year\", data= df, palette=\"Paired\", hue = \"reason category\")\nplt.title(\" Calls Reason Yearly having the hue of reasons\")\nplt.show()","6ea46017":"# Plot for calls recieved monthly combined of all years:\nplt.figure(figsize=(14,7))\n\nsns.set_context(\"paper\", font_scale = 2)\nsns.countplot(x= \"month\", data= df, palette=\"magma\")\n\nplt.title(\" Monthly Calls Combined All Years\")\nplt.show()","c3f21cd1":"plt.figure(figsize = (14,7))\n\nsns.set_context(\"paper\", font_scale=2)\nsns.countplot(data= df, x= \"month\", hue= \"year\", palette=\"magma\")\n\nplt.title(\" Monthly Calls Yearly\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.show()","d04a2f36":"plt.figure(figsize=(14,7))\nsns.set_context(\"paper\", font_scale = 2)\nsns.countplot(x= \"month\", data= df, palette=\"magma\", hue= \"reason category\")\nplt.title(\" Monthly Calls Category Combined All Years\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.show()","39a50725":"# Day and Night Call Reports\ng = sns.FacetGrid(df, row =\"day\/night\", col=\"reason category\", height = 7)\ng.map(sns.countplot, \"month\", palette= \"magma\")\nplt.title(\"Day and Night Call Reports\")\n","741f4d20":"# Calls report Daily: \n\nplt.figure(figsize=(14,7))\nsns.set_context(\"paper\", font_scale = 2)\nsns.countplot(x= \"Day of Week\", data= df, palette=\"pastel\")\nplt.title(\" Day Of Week Calls\")\nplt.show()","51320a1b":"plt.figure(figsize=(14,7))\nsns.set_context(\"paper\", font_scale = 2)\nsns.countplot(x= \"Day of Week\", data= df, palette=\"pastel\", hue= (\"reason category\") )     \nplt.title(\" Day Calls By Reason \")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.show()","19c310dd":"plt.figure(figsize=(14,7))\nsns.set_context(\"paper\", font_scale = 2)\nsns.countplot(x= \"Day of Week\", data= df, palette=\"pastel\", hue= \"year\" )     \nplt.title(\" Daily Calls By Year \")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.show()","3d3e56c9":"df.groupby(\"year\").count()\n# this will return a df having Years as its index","b7e088c8":"by_year = df.groupby(\"year\").count()\ndf_year = by_year.reset_index()\n\ndf_year.iplot( x= \"year\", y= \"lat\", title =\" Calls\", colors=\"purple\", xTitle=\"Years\", \n             yTitle = \"Counts\")","bc281a6a":"by_month= df.groupby(\"month\").count()\n# Changing index from months to default index(0:)\ndf_month= by_month.reset_index()\ndf_month.iplot(x=\"month\", y = \"lat\", colors= \"pink\", title=\"Monthly calls in all years\", xTitle=\"Month\",\n               yTitle = \"Counts\")","0aa5bf4f":"date_gr = df.groupby(\"date\").count()\ndf_date = date_gr.reset_index()\n\ndf_date.iplot(x= \"date\", y=\"lat\", size= 6, color= \"red\", title= \"Every Day Total Calls\", \n             xTitle = \"Days\", yTitle = \"counts\")","4decdfa1":"ems_gr = df[df[\"reason category\"]== \"EMS\"].groupby(\"date\").count()\n\ndf_ems = ems_gr.reset_index()\n\ndf_ems.iplot(x= \"date\", y= \"lat\", colors= \"orange\", title=\"EMS Calls\", xTitle=\"Days\", \n            yTitle = \"Counts\")","c1e50586":"tra_gr = df[df[\"reason category\"]== \"Traffic\"].groupby(\"date\").count()\n\ndf_tra= tra_gr.reset_index()\n\ndf_tra.iplot(x= \"date\", y= \"lat\", colors= \"pink\", title=\"Traffic Calls\", xTitle=\"Days\", \n            yTitle = \"Counts\")","15f0b935":"fire_gr = df[df[\"reason category\"]== \"Fire\"].groupby(\"date\").count()\n\ndf_fire= fire_gr.reset_index()\n\ndf_fire.iplot(x= \"date\", y= \"lat\", colors= \"purple\", title=\"Fire Calls\", xTitle=\"Days\", \n            yTitle = \"Counts\")","bf4fbf90":"df[\"year\"].value_counts()","915a2a54":"df[\"hour\"] = df[\"time\"].apply(lambda x: x.hour)\ntmap = {0:1, 1:2, 2:3, 3:4, 4:5, 5:6, 6:7, 7:8, 8:9, 9:10, 10:11, 11:12, 12:13, 13:14, \n        14:15, 15:16, 16:17, 17:18, 18:19, 19:20, 20:21, 21:22, 22:23, 23:24}\ndf[\"hour\"] = df[\"hour\"].map(tmap)\nprint(df[\"hour\"].value_counts())\n\ndf[\"hour\"] = df[\"time\"].apply(lambda x: x.hour)\nhr_grp = df.groupby(\"hour\").count()\ndf_time = hr_grp.reset_index()\n\n\ndf_time.iplot(x= \"hour\", y = \"lat\", title= \"Total number of calls  Hourly: In all years :\", \n             colors = \"pink\")","9210843f":"y15_grp = df[df[\"year\"] == 2015].groupby(\"hour\").count()\n\ndf_y15 = y15_grp.reset_index()\n\ndf_y15.iplot( x=\"hour\", y =\"lat\" , title = \"Total number of calls hourly in Year: 2015\", \n            colors = \"lightgreen\")","a5287d72":"y16_grp = df[df[\"year\"] == 2016].groupby(\"hour\").count()\n\ndf_y16 = y16_grp.reset_index()\n\ndf_y16.iplot( x=\"hour\", y =\"lat\",title = \"Total number of calls hourly in Year: 2016\", \n            colors = \"brown\")","ac27ffd5":"y17_grp = df[df[\"year\"] == 2017].groupby(\"hour\").count()\n\ndf_y17 = y17_grp.reset_index()\n\ndf_y17.iplot( x=\"hour\", y =\"lat\", title = \"Total number of calls hourly in Year: 2017\",\n            colors = \"blue\")","966e0a9b":"y18_grp = df[df[\"year\"] == 2018].groupby(\"hour\").count()\n\ndf_y18 = y18_grp.reset_index()\n\ndf_y18.iplot( x=\"hour\", y =\"lat\", title = \"Total number of calls hourly in Year: 2018\" )","a24fddbc":"dayvshour= df.groupby([\"Day of Week\", \"hour\"]).count()[\"lat\"].unstack()\ndayvshour.head()","7b6fd516":"plt.figure(figsize= (15,10))\nsns.heatmap(dayvshour, cmap = \"coolwarm\", linewidths=.1)","8942ca05":"plt.figure(figsize= (15,10))\nsns.clustermap(dayvshour, cmap = \"coolwarm\")","8b2786a8":"monthvshour = df.groupby([\"hour\", \"month\"]).count()[\"lat\"].unstack()\nmonthvshour.head()","6d4e9558":"plt.figure(figsize=(15,10))\nsns.heatmap(monthvshour, cmap=\"viridis\", linewidths=.5)","5ab88d29":"sns.clustermap(monthvshour, cmap = \"viridis\")","f003bde4":"#  4 Basic Q\/A section:\n","8da14d17":"# 5 Line Plots on basis of aggregation:\n## Using interactive plots: Plotly\n","7e0ff50b":"## In this reporrt we will be analysing the call data provided by Montgomery County. ","162f33c1":"# 6 Heat Maps:\n\n","d61ee52a":"## Please, free to leave any comment or feedback. \n ## Thanks!","7206712e":"# 5 Data Visualizing and Analysing ","e3d67799":"## 2. Exploring Data set:","5c94afd3":"# 3 Creating New Features and Columns for data analyis:\n\n### Creating columns like year, month, date etc on the basis of timeStamp column:\n\n"}}