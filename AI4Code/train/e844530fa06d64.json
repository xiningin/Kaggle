{"cell_type":{"ee9345f2":"code","6037e226":"code","18814334":"code","f5f4d514":"code","c46ffa17":"code","38ab41d5":"code","0db535f0":"code","aaeb8277":"code","00b9f2ca":"code","605c858a":"code","a874654d":"code","08581515":"code","5855df4c":"code","3b7623af":"code","76f7a1a0":"code","ca4d617f":"code","083416f6":"code","79c5d658":"code","c4652527":"markdown","14d2e716":"markdown","1d0c1f91":"markdown","ba06c4c7":"markdown","765248b5":"markdown","671e3fcd":"markdown","440500d8":"markdown","df5a960f":"markdown","da31bc38":"markdown","bbaef3f0":"markdown","d0243a68":"markdown","a9e7d8aa":"markdown","27b7fd43":"markdown"},"source":{"ee9345f2":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","6037e226":"train = pd.read_csv(\"\/kaggle\/input\/ashrae-energy-prediction\/train.csv\")\nbuilding_metadata = pd.read_csv(\"\/kaggle\/input\/ashrae-energy-prediction\/building_metadata.csv\")\nweather_train = pd.read_csv(\"\/kaggle\/input\/ashrae-energy-prediction\/weather_train.csv\")\n\nprint(\"train.shape:\", train.shape)\nprint(\"building_metadata.shape:\", building_metadata.shape)\nprint(\"weather_train.shape:\", weather_train.shape)","18814334":"train_merge = train.merge(building_metadata, on= \"building_id\",how=\"left\")\ntrain_merge = train_merge.merge(weather_train, on=[\"site_id\", \"timestamp\"], how=\"left\")","f5f4d514":"train_merge.head()","c46ffa17":"train_merge[\"timestamp\"] = pd.to_datetime(train_merge[\"timestamp\"])","38ab41d5":"train_merge[\"month\"] = train_merge[\"timestamp\"].dt.month\ntrain_merge[\"day\"] = train_merge[\"timestamp\"].dt.day\ntrain_merge[\"weekday\"] = train_merge[\"timestamp\"].dt.weekday\ntrain_merge[\"weekday_name\"] = train_merge[\"timestamp\"].dt.weekday_name","0db535f0":"train_merge.head()","aaeb8277":"def CalcOutliers(df_num): \n\n    # calculating mean and std of the array\n    data_mean, data_std = np.mean(df_num), np.std(df_num)\n\n    # seting the cut line to both higher and lower values\n    # You can change this value\n    cut = data_std * 3\n\n    #Calculating the higher and lower cut values\n    lower, upper = data_mean - cut, data_mean + cut\n\n    # creating an array of lower, higher and total outlier values \n    outliers_lower = [x for x in df_num if x < lower]\n    outliers_higher = [x for x in df_num if x > upper]\n    outliers_total = [x for x in df_num if x < lower or x > upper]\n\n    # array without outlier values\n    outliers_removed = [x for x in df_num if x > lower and x < upper]\n    \n    print(\"upper:\", upper)\n    print(\"lower:\", lower)\n    print(\"-\"*30)\n    print('Identified lowest outliers: %d' % len(outliers_lower)) # printing total number of values in lower cut of outliers\n    print('Identified upper outliers: %d' % len(outliers_higher)) # printing total number of values in higher cut of outliers\n    print('Total outlier observations: %d' % len(outliers_total)) # printing total number of values outliers of both sides\n    print('Non-outlier observations: %d' % len(outliers_removed)) # printing total number of non outlier values\n    print(\"Total percentual of Outliers: \", round((len(outliers_total) \/ len(outliers_removed) )*100, 4)) # Percentual of outliers in points\n    \n    return","00b9f2ca":"CalcOutliers(train_merge[\"meter_reading\"])","605c858a":"# detect outlier's building_id\n\nupper = 461823.9846903139\nnp.unique(train_merge.loc[train_merge[\"meter_reading\"] >= upper, \"building_id\"].values)","a874654d":"# analyzing 778\nid_778_outmeter = np.unique(train_merge.loc[(train_merge[\"meter_reading\"] >= upper) & \n                                            (train_merge[\"building_id\"] == 778),\"meter\"].values)\nprint(\"id778 outlier \/ meter:\", id_778_outmeter)\n\nid_778_outmonth = np.unique(train_merge.loc[(train_merge[\"meter_reading\"] >= upper) &\n                                            (train_merge[\"building_id\"] == 778), \"month\"].values)\nprint(\"id778 outlier \/ months:\", id_778_outmonth)\n\n\nfor i in id_778_outmonth:\n    print(\"months=\", i, sep=\"\")\n    print(\"primary_use\", np.unique(train_merge.loc[(train_merge[\"meter_reading\"] >= upper) &\n                                        (train_merge[\"building_id\"] == 778) &\n                                        (train_merge[\"month\"] == i), \"primary_use\"].values))\n    \n    print(np.unique(train_merge.loc[(train_merge[\"meter_reading\"] >= upper) &\n                                            (train_merge[\"building_id\"] == 778) &\n                                            (train_merge[\"month\"] == i), \"day\"].values))\n    print(\"-\" * 30)","08581515":"# analyzing 1099\nid_1099_outmeter = np.unique(train_merge.loc[(train_merge[\"meter_reading\"] >= upper) & \n                                            (train_merge[\"building_id\"] == 1099),\"meter\"].values)\nprint(\"id778 outlier \/ meter:\", id_1099_outmeter)\n\nid_1099_outmonth = np.unique(train_merge.loc[(train_merge[\"meter_reading\"] >= upper) &\n                                            (train_merge[\"building_id\"] == 1099), \"month\"].values)\nprint(\"id778 outlier \/ months:\", id_1099_outmonth)\n\nfor i in id_1099_outmonth:\n    print(\"month=\", i, sep=\"\")\n    print(\"primary_use\", np.unique(train_merge.loc[(train_merge[\"meter_reading\"] >= upper) &\n                                            (train_merge[\"building_id\"] == 1099) &\n                                            (train_merge[\"month\"] == i), \"primary_use\"].values))\n    \n    print(\"days\", np.unique(train_merge.loc[(train_merge[\"meter_reading\"] >= upper) &\n                                            (train_merge[\"building_id\"] == 1099) &\n                                            (train_merge[\"month\"] == i), \"day\"].values))\n    print(\"-\" * 30)","5855df4c":"train_merge.groupby([\"timestamp\"])[\"meter_reading\"].mean().plot(figsize=(20, 5))","3b7623af":"train_merge.groupby([\"month\"])[\"meter_reading\"].mean().plot(kind=\"bar\", figsize=(20, 5))","76f7a1a0":"train_merge.groupby([\"day\"])[\"meter_reading\"].mean().plot(kind=\"bar\", figsize=(20, 5))","ca4d617f":"train_merge.groupby([\"air_temperature\"])[\"meter_reading\"].mean().plot(figsize=(20, 5))","083416f6":"train_merge.groupby([\"wind_speed\"])[\"meter_reading\"].mean().plot(figsize=(20, 5))","79c5d658":"train_merge.groupby([\"weekday_name\"])[\"meter_reading\"].mean().plot(kind=\"bar\", figsize=(20, 5))","c4652527":"Building_id 778 and 1099 have outliers.  \n\nOutliers of 778 is in september and october.  \nOutliers of 1099 is in Jan, Feb, Mar, Apl, May, Jun and Nov.\n\nI can not detect rule of days that have outliers.","14d2e716":"# Load Data","1d0c1f91":"Weekends have low level \"meter reading\".  \n![](http:\/\/)So, \"Weekday\" has possible to important feature.","ba06c4c7":"But, it is not related","765248b5":"# EDA","671e3fcd":"# calculate outliers","440500d8":"I feel strange because this chart has plot that suddenly decrease.","df5a960f":"Low temperature has high \"meter reading\"  \n\nSo, I think that, cold has more \"meter reading\" than hot.  \nIn my opinion, high \"wind_speed\" has more \"meter_reading\"","da31bc38":"Peak is Apl  \nAfter Jul, \"meter reading\" is low level.","bbaef3f0":"<pre>\n\/kaggle\/input\/ashrae-energy-prediction\/weather_train.csv\n\/kaggle\/input\/ashrae-energy-prediction\/test.csv\n\/kaggle\/input\/ashrae-energy-prediction\/weather_test.csv\n\/kaggle\/input\/ashrae-energy-prediction\/train.csv\n\/kaggle\/input\/ashrae-energy-prediction\/building_metadata.csv\n\/kaggle\/input\/ashrae-energy-prediction\/sample_submission.csv","d0243a68":"# Merge train data","a9e7d8aa":"# Explaining this notebook\n\nI would like to explain my EDA for ASHARAE competition.\n\nI am bigginer of data science.  \nThis is my first notebook and I am not good at english.\n\nSo, Please forgive me my poor english.","27b7fd43":"# make features (day, months, weekdays)"}}