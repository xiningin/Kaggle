{"cell_type":{"10f7028c":"code","b6c69e4e":"code","cd371449":"code","abeb75d5":"code","c9974655":"code","f2d8550e":"code","7ed9a386":"code","3d66288f":"markdown","a1130dc7":"markdown","9022fdb1":"markdown","e9cf910f":"markdown","71a2c75c":"markdown","721b554b":"markdown","9e406b5e":"markdown","5cb12332":"markdown","d5bb225a":"markdown","6fbf89e8":"markdown","71116878":"markdown"},"source":{"10f7028c":"print(\"Hello world!\")","b6c69e4e":"import numpy as np\nx = np.array([[1, 2, 3], [4, 5, 6]])\nprint(\"x:\\n{}\".format(x))","cd371449":"import matplotlib.pyplot as plt\n# Generate a sequence of numbers from -10 to 10 with 100 steps in between\nx = np.linspace(-10, 10, 100)\n# Create a second array using sine\ny = np.sin(x)\n# The plot function makes a line chart of one array against another\nplt.plot(x, y, marker=\"x\")","abeb75d5":"import pandas as pd\n# create a simple dataset of people\ndata = {'Name': [\"John\", \"Anna\", \"Peter\", \"Linda\"],\n'Location' : [\"New York\", \"Paris\", \"Berlin\", \"London\"],\n'Age' : [24, 13, 53, 33]\n}\ndata_pandas = pd.DataFrame(data)\n# printing dataframes\ndisplay(data_pandas)","c9974655":"# Select all rows that have an age column greater than 30\ndisplay(data_pandas[data_pandas.Age > 30])","f2d8550e":"from scipy import sparse\n# Create a 2D NumPy array with a diagonal of ones, and zeros everywhere else\neye = np.eye(4)\nprint(\"NumPy array:\\n{}\".format(eye))","7ed9a386":"# Convert the NumPy array to a SciPy sparse matrix in CSR format\n# Only the nonzero entries are stored\nsparse_matrix = sparse.csr_matrix(eye)\nprint(\"\\nSciPy sparse CSR matrix:\\n{}\".format(sparse_matrix))","3d66288f":"# 8-Mglearn\n* This is a library of utility functions it is written for the book (introduction to machine learning with python ).\n* Reference https:\/\/pypi.org\/project\/mglearn\/","a1130dc7":"# 5-Matplotlib\n* matplotlib is the primary scientific plotting library in Python.\n* It provides functions for making publication-quality visualizations such as line charts, histograms, scatter plots, and so on.\n* Visualizing your data and different aspects of your analysis can give you important insights, and we will be using matplotlib for all visualizations.\n* Reference https:\/\/matplotlib.org\/\n","9022fdb1":"# 3- Scikit-learn\n* Scikit-learn is an open source project, meaning that it is free to use and distribute.\n* It is widely used in industry and academia.\n* It contains a number of state-of-the-art machine learning algorithms, as well as comprehensive documentation about each algorithm.\n* Reference https:\/\/scikit-learn.org\/\n","e9cf910f":"![1_c_fiB-YgbnMl6nntYGBMHQ.jpeg](attachment:820dda20-acdf-47af-98a7-aea9bb88b836.jpeg)","71a2c75c":"# **3-Essential Libraries and Tools**\n\n","721b554b":"# 4-NumPy\n* NumPy is one of the fundamental packages for scientific computing in Python.\n* It contains functionality for multidimensional arrays, high-level mathematical functions such as linear algebra operations.\n* Scikit-learn takes in data in the form of NumPy arrays.\n* Reference https:\/\/numpy.org\/\n","9e406b5e":"# 2-Jupyter Notebook\n* The Jupyter Notebook is an interactive environment for running code in the browser.\n* The Jupyter Notebook supports many programming languages.\n* The Jupyter Notebook makes it easy to incorporate code, text, and images.","5cb12332":"### [**Back to course home**](https:\/\/www.kaggle.com\/ammarnassanalhajali\/machine-learning-in-python-course-1)","d5bb225a":"# 6-Pandas\n* Panda is a Python library for data wrangling and analysis.\n* It is built around a data structure called the DataFrame.\n* Pandas DataFrame is a table, similar to an Excel spreadsheet.\n* Pandas is able to ingest a great variety of file formats and databases, like SQL, Excel files, and comma-separated values (CSV) files.\n* Reference https:\/\/pandas.pydata.org\/\n","6fbf89e8":"# 1-Why Python?\n* Python has become a common language for many data science applications.\n* It combines the power of general-purpose programming languages with the ease of use.\n* Python has libraries for data loading, visualization, statistics, natural language processing, image processing, and more.\n* One of the main advantages of using Python is the ability to interact directly with the code, using a terminal or other tools like the Jupyter Notebook.\n","71116878":"# 7- SciPy\n* SciPy is a collection of functions for scientific computing in Python.\n* It provides, among other functionality, advanced linear algebra routines, mathematical function optimization, signal processing, special mathematical functions, and statistical distributions.\n* Reference https:\/\/www.scipy.org\/\n"}}