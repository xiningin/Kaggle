{"cell_type":{"60a9315e":"code","a56a21e9":"code","269544d4":"code","e88efb44":"markdown","a9ecd468":"markdown"},"source":{"60a9315e":"import torch\nimport numpy as np\n\ndef nms(dets, thresh):\n    x1 = dets[:, 1]\n    y1 = dets[:, 0]\n    x2 = dets[:, 3]\n    y2 = dets[:, 2]\n    scores = dets[:, 4]\n    \n    areas = (x2-x1+1)*(y2-y1+1)\n#     print(areas)\n    order = scores.sort(0,descending=True)[1] #\u6309\u7167\u7f6e\u4fe1\u5ea6\u964d\u5e8f\u6392\u5217\n    keep = []\n    while order.size(0)>0:\n        \n        #\u4fdd\u7559\u7f6e\u4fe1\u5ea6\u6700\u5927\u7684\u6846\n        ind = order[0]\n        keep.append(ind)\n        \n        x11 = x1[order[1:]].masked_fill(~torch.gt(x1[order[1:]],x1[ind]), x1[ind])\n        y11 = y1[order[1:]].masked_fill(~torch.gt(y1[order[1:]],y1[ind]), y1[ind])\n        x22 = x2[order[1:]].masked_fill(~torch.lt(x2[order[1:]],x2[ind]), x2[ind])\n        y22 = y2[order[1:]].masked_fill(~torch.lt(y2[order[1:]],y2[ind]), y2[ind])\n        \n        \n        \n        intersec = (x22-x11+1).clamp(min=0)*(y22-y11+1).clamp(min=0)\n        \n#         print('intesec',intersec)\n#         print('areas_',areas[order[1:]])\n        \n        ious = intersec\/(areas[ind] + areas[order[1:]] - intersec)\n#         print(ious)\n        order = order[1:][ious<thresh]\n    return keep\n        \n        \n\n        \n    ","a56a21e9":"boxes=torch.Tensor([[100,100,210,210,0.72],\n        [250,250,420,420,0.8],\n        [220,220,320,330,0.92],\n        [100,100,210,210,0.72],\n        [230,240,325,330,0.81],\n        [220,230,315,340,0.9]])\nkeep = nms(boxes,0.7)\nprint(keep)","269544d4":"import matplotlib.pyplot as plt\ndef plot_bbox(dets, c='k'):\n    dets_copy = dets.numpy()\n    x1 = dets_copy[:,0]\n    y1 = dets_copy[:,1]\n    x2 = dets_copy[:,2]\n    y2 = dets_copy[:,3]\n    \n    \n    plt.plot([x1,x2], [y1,y1], c)\n    plt.plot([x1,x1], [y1,y2], c)\n    plt.plot([x1,x2], [y2,y2], c)\n    plt.plot([x2,x2], [y1,y2], c)\n    plt.title(\"after nms\")\n\nplot_bbox(boxes,'k')   # before nms\n\nkeep = nms(boxes, thresh=0.7)\nprint(list(map(lambda x:x.item(),keep)))\n# print(boxes[],boxes[[2,0]])\nplot_bbox(boxes[list(map(lambda x:x.item(),keep))], 'r')# after nms","e88efb44":"# nms","a9ecd468":"test nms"}}