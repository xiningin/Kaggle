{"cell_type":{"78af28a1":"code","912e05be":"code","fce9bd43":"code","971b7c79":"code","c254d7f2":"code","7a060569":"code","c65e4eb2":"code","9bba562c":"code","44ec38f1":"code","96594503":"code","1274b833":"code","7391f50e":"code","ee215f2c":"code","2e30c7f2":"code","97900851":"code","9ec448cf":"code","b8bf8d4e":"code","2e9c118f":"code","3519d667":"code","2728239f":"code","8413320e":"code","ac65fe55":"code","53d297e6":"code","0476e86e":"code","7aaaacca":"code","ea8d6707":"code","4be644e9":"code","10ba01e7":"code","0ee3d7d6":"code","aa6d330b":"code","45fbc1ea":"code","0aecd0f4":"code","ecc33ba6":"code","63883eef":"code","792e6ce7":"code","f3cdef19":"code","fa9dab53":"code","732ebe43":"code","dd7f1833":"code","3f7b04ce":"code","1c149d47":"code","8d74bd49":"code","427cb62f":"code","0902d2d7":"code","87c73aca":"markdown","d9cb6a96":"markdown","ded7483c":"markdown","bc0b1992":"markdown","ec807fbe":"markdown","3acba1ae":"markdown","0d62d2b3":"markdown","7d86a0af":"markdown","f4eddf71":"markdown","8791570f":"markdown","6988a69f":"markdown","f092bd47":"markdown","aecd8457":"markdown","1a118cb3":"markdown","d7a026f7":"markdown","d7b536e6":"markdown","43fd01b5":"markdown","5b50fccc":"markdown","0a65f22f":"markdown","e57e9a87":"markdown","230ba206":"markdown","9f171653":"markdown","06bb5bab":"markdown","89520734":"markdown","4aa1ce97":"markdown","fd4931bb":"markdown","aec06597":"markdown","0025052d":"markdown","f02b2067":"markdown","4138c4f4":"markdown","6d2f19ad":"markdown","58b829f1":"markdown"},"source":{"78af28a1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns               # Provides a high level interface for drawing attractive and informative statistical graphics\n%matplotlib inline\nsns.set()\nfrom subprocess import check_output\n\nimport warnings                                            # Ignore warning related to pandas_profiling\nwarnings.filterwarnings('ignore') \n\ndef annot_plot(ax,w,h):                                    # function to add data to plot\n    ax.spines['top'].set_visible(False)\n    ax.spines['right'].set_visible(False)\n    for p in ax.patches:\n         ax.annotate(f\"{p.get_height() * 100 \/ df.shape[0]:.2f}%\", (p.get_x() + p.get_width() \/ 2., p.get_height()),\n         ha='center', va='center', fontsize=11, color='black', rotation=0, xytext=(0, 10),\n         textcoords='offset points')             \ndef annot_plot_num(ax,w,h):                                    # function to add data to plot\n    ax.spines['top'].set_visible(False)\n    ax.spines['right'].set_visible(False)\n    for p in ax.patches:\n        ax.annotate('{0:.1f}'.format(p.get_height()), (p.get_x()+w, p.get_height()+h))\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","912e05be":"df = pd.read_csv('..\/input\/WA_Fn-UseC_-Marketing-Customer-Value-Analysis.csv')","fce9bd43":"df.head()","971b7c79":"df.shape","c254d7f2":"df.Response = df.Response.apply(lambda X : 0 if X == 'No' else 1)","7a060569":"df.head()","c65e4eb2":"df.info()","9bba562c":"df.isnull().sum()","44ec38f1":"df.describe()","96594503":"ax = sns.countplot('Response',data = df)\nplt.ylabel('Total number of Response')\nannot_plot(ax, 0.08,1)\nplt.show()","1274b833":"ax = sns.countplot('Response',hue = 'Gender' ,data = df)\nplt.ylabel('Total number of Response')\nannot_plot(ax, 0.08,1)\nplt.show()","7391f50e":"plt.figure(figsize=(12,6))\nax = sns.countplot('Response', hue = df['Marital Status'], data = df)\nannot_plot(ax,0.08,1)\nplt.show()","ee215f2c":"plt.figure(figsize=(8,4))\nax = sns.countplot('Response',hue = 'Renew Offer Type' ,data = df)\nplt.ylabel('Total number of Response')\nannot_plot(ax, 0.08,1)\nplt.show()","2e30c7f2":"plt.figure(figsize=(8,4))\nax = sns.countplot('Response',hue = 'Education' ,data = df)\nplt.ylabel('Total number of Response')\nannot_plot(ax, 0.08,1)\nplt.show()","97900851":"plt.figure(figsize=(8,4))\nax = sns.countplot('Response',hue = 'Sales Channel' ,data = df)\nplt.ylabel('Total number of Response')\nannot_plot(ax, 0.08,1)\nplt.show()","9ec448cf":"plt.figure(figsize=(12,6))\nsns.boxplot(y = 'Total Claim Amount' , x = 'Response', data = df)\nplt.ylabel('Total number of Response')\nplt.show()","b8bf8d4e":"plt.figure(figsize=(12,6))\nsns.boxplot(y = 'Income' , x = 'Response', data = df)\nplt.show()","2e9c118f":"plt.figure(figsize=(10,6))\nax = sns.countplot('Response',hue = 'EmploymentStatus' ,data = df)\nplt.ylabel('Total number of Response')\nannot_plot(ax, 0.08,1)\nplt.show()","3519d667":"plt.figure(figsize=(10,6))\nax = sns.countplot('Response',hue = 'Vehicle Class' ,data = df)\nplt.ylabel('Total number of Response')\nannot_plot(ax, 0.08,1)\nplt.show()","2728239f":"plt.figure(figsize=(15,6))\nax = sns.countplot('Response',hue = 'Policy' ,data = df)\nplt.ylabel('Total number of Response')\nannot_plot(ax, 0.08,1)\nplt.show()","8413320e":"import statsmodels.api as sm","ac65fe55":"continous_var_df = df.select_dtypes(include=['int64','float'])\ncontinous_var_df.nunique()","53d297e6":"continous_var_df.columns","0476e86e":"continous_var_reg = sm.Logit(continous_var_df['Response'], continous_var_df.drop('Response', axis = 1))\ncontinous_var_reg.fit().summary()","7aaaacca":"plt.figure(figsize=(10,6))\nsns.heatmap(continous_var_df.corr(), annot = True)\nplt.show()","ea8d6707":"categorical_df = df.select_dtypes(include='object')\ncat_df = categorical_df.drop(['Customer','Effective To Date'], axis = 1)","4be644e9":"cat_df.nunique()","10ba01e7":"cat_df.columns","0ee3d7d6":"cols = ['State', 'Coverage', 'Education', 'EmploymentStatus', 'Gender',\n       'Location Code', 'Marital Status', 'Policy Type', 'Policy',\n       'Renew Offer Type', 'Sales Channel', 'Vehicle Class', 'Vehicle Size']","aa6d330b":"from sklearn.preprocessing import LabelEncoder\nlb = LabelEncoder()\nfor col in cat_df[cols]:\n    cat_df[col] = lb.fit_transform(cat_df[col])","45fbc1ea":"cat_df.head()","0aecd0f4":"categorical_train = sm.Logit(continous_var_df.Response, cat_df)\ncategorical_train.fit().summary()","ecc33ba6":"continous_var_df.reset_index(drop = True, inplace=True)\ncat_df.reset_index(drop = True, inplace=True)","63883eef":"all_data_df = pd.concat([continous_var_df,cat_df], axis = 1)","792e6ce7":"all_data_df.head()","f3cdef19":"total_train = sm.Logit(all_data_df.Response, all_data_df.drop(['Response'], axis = 1))\ntotal_train.fit().summary()","fa9dab53":"all_data_df.columns","732ebe43":"significant_cols = ['Customer Lifetime Value','Income','Monthly Premium Auto','Months Since Last Claim',\n                    'Months Since Policy Inception','Number of Policies','Total Claim Amount','Marital Status',\n                    'Renew Offer Type','Sales Channel','Vehicle Size']\ntrainData = sm.Logit(all_data_df.Response, all_data_df[significant_cols])\ntrainData.fit().summary()","dd7f1833":"y = all_data_df.Response\nX = all_data_df.drop('Response', axis = 1)","3f7b04ce":"from sklearn.model_selection import train_test_split, cross_validate\nX_train,  X_test, y_train, y_test = train_test_split(X,y, test_size = 0.3, random_state = 42)","1c149d47":"ax = sns.countplot(y_test)\nannot_plot_num(ax,0.08,1)","8d74bd49":"from sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nfrom sklearn.svm import SVC\n\nsvc = SVC()\nsvc.fit(X_train, y_train)\nsvc_pred = svc.predict(X_test)\n\nprint(confusion_matrix(svc_pred,y_test))\nprint('accuracy_score:',accuracy_score(svc_pred, y_test))\nprint(classification_report(svc_pred, y_test))\n\ncross_val_score_svc = cross_validate(svc, X_train, y_train,cv = 5)\nprint('Cross validation train_score',cross_val_score_svc['train_score'].mean())\nprint('Cross validation test_score',cross_val_score_svc['test_score'].mean())\n","427cb62f":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier()\nrfc.fit(X_train, y_train)\nrfc_pred = rfc.predict(X_test)\n\nprint(confusion_matrix(rfc_pred,y_test))\nprint('Accuracy score:',accuracy_score(rfc_pred, y_test))\nprint(classification_report(rfc_pred, y_test))\n\ncross_val_score_rfc = cross_validate(rfc, X_train, y_train,cv = 5)\n\nprint('Cross validation train_score',cross_val_score_rfc['train_score'].mean())\nprint('Cross validation test_score',cross_val_score_rfc['test_score'].mean())\n","0902d2d7":"feature_imp = rfc.feature_importances_.round(3)\nser_rank = pd.Series(feature_imp, index=X.columns).sort_values(ascending = False)\n\nplt.figure(figsize=(12,7))\nsns.barplot(x= ser_rank.values, y = ser_rank.index, palette='deep')\nplt.xlabel('relative importance')\nplt.show()","87c73aca":"Box plots are a great way to visualize the distribuation of countinous variables. They show the min, max, first quatile, meadian and third quartile, all in one view. The central rectangle spans from the first quartile to the third quartile, and the green line shows the median. The lower and upper ends show the minimum and the maximum of each distribution.\n\n   The dots above the upper boundry line show the suspected outliers that are decided based on the **INterquartile range (IQR)**. The points that fall **1.5*IQR** above the third quartile or **1.5*IQR** below the quartile are suspected outliers and are drawn with the dots.","d9cb6a96":"**What Are P Values?**\n\nP values evaluate how well the sample data support the devil\u2019s advocate argument that the null hypothesis is true. It measures how compatible your data are with the null hypothesis. How likely is the effect observed in your sample data if the null hypothesis is true?\n\n> **High P values: your data are likely with a true null.**\n\n> **Low P values: your data are unlikely with a true null**\n\nA low P value suggests that your sample provides enough evidence that you can reject the null hypothesis for the entire population.","ded7483c":"By looking at **p-value**,**'Marital Status','Renew Offer type','Sales channel','Vehicle size','policy'** variables are significant at 0.05 significance level, and all of them have negative relationship with the output variable, **Response**.","bc0b1992":"## 7.Classification:","ec807fbe":"# Index\n\n1. Data Loading\n2. Exploratory Data Analysis (EDA)\n3. Regression Analysis with Continuous Variables Only\n4. Regression Analysis with Categorical Variables\n5. Regression Analysis with bith Continous and Categorical Variables\n6. Regression Analysis with excluding Non-significant variables\n7. Classification\n> 7.1 Support Vector Classification\n\n> 7.2 Random Forest Classifier\n\n8. Feature Importance\n","3acba1ae":"By looking at the **p-value** of **'Income', 'Monthly Premium Auto','Months Since Last Claim', 'Months Since Policy Inception','Number of Open Complaints', 'Number of Policies'**, these input variables seems to have significant relationships with the output(target) variable 'Response'. By looking at the coeff,they are all **negatively correlated** to the Response variable.","0d62d2b3":"## 8.Feature Importance","7d86a0af":"# 2.1.4 Response rate by Total Claim Amount","f4eddf71":"Notice that customers with Doctor and master degree are very less who responded to marketing calls, may be they are not intersted or busy. or we can say young people are most likely to respond to marketing calls.","8791570f":"Notice that out of 14% customers, 8% customers those who rsponded to marketing calls are from married category. ","6988a69f":"# 2.1.3 Response rate by Sales Channel","f092bd47":"Notice that, ratio of male and female for **responding to a marketing call** is almost same.","aecd8457":"# 6. Regression Analysis with excluding Non-significant variables","1a118cb3":"# 2.1.7 Response rate by Vehicle Class:","d7a026f7":"## 7.1 SVC Classification","d7b536e6":"## 7.2.RandomForestClassifier","43fd01b5":"# 2.1.8 Response rate by Policy:","5b50fccc":"# 2.1.1 Response rate by renew offer","0a65f22f":"**Conclusion:** The higher the Customer Lifetime value is, the less likely that the customer will be response to marketing calls.","e57e9a87":"# 5. Regression Analysis with bith Continous and Categorical Variables.","230ba206":"# 3. Regression Analysis with Continuous Variables Only","9f171653":"# 2.1.2 Response rate by Education","06bb5bab":"# 2  2. Exploratory Data Analysis(EDA):","89520734":"# 2.1 Response Rate:","4aa1ce97":" # Conversion of Categorical data","fd4931bb":"Notice that about 14% customers have responded to marketing calls, and the remaining 86% of the customers have not responded.","aec06597":"# 4.Regression Analysis with Categorical Variables","0025052d":"# 2.1.5 Response rate by Income Distributions","f02b2067":"By looking at the **p-value** of **'Customer lifetime value','Income', 'Monthly Premium Auto','Months Since Last Claim', 'Months Since Policy Inception','Number of Policies','Total claim amount','Marital Status','Renew offer type','Sales Channel','Vehicle size'**, these input variables seems to have significant relationships with the output(target) variable 'Response'. By looking at the coeff,they are all **negatively correlated** to the Response variable.","4138c4f4":"# 2.1.6 Response rate by EmploymentStatus","6d2f19ad":"# 1. Data Loading","58b829f1":"For offer1 and offer2 customers have responded to marketing calls,but for offer3 and offer4 almost nobody responded."}}