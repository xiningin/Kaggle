{"cell_type":{"d170a5e1":"code","4925046d":"code","e271266c":"code","95e1bde5":"code","ee1f5cda":"code","e08b0acc":"code","0ef3e948":"code","96f91a8e":"code","495f3a13":"code","5c5a3557":"code","d9a91653":"code","4f08e4b4":"code","b17994e4":"code","b37cc071":"code","1d985f61":"code","bf079007":"code","605fcd24":"code","bf34010f":"code","dcd8f435":"code","1fd4c105":"code","3ddad1bb":"code","8741b2bb":"code","84dec5eb":"code","e6309cc4":"code","126e7741":"code","6dec5207":"code","fb2265f4":"code","96b7660d":"code","cbd262d2":"code","860d8674":"code","122a5238":"markdown","0b6e4039":"markdown","a989983e":"markdown","cb9491af":"markdown","b2f1605f":"markdown"},"source":{"d170a5e1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4925046d":"#importing the datasets\ndata=pd.read_csv('..\/input\/iris\/Iris.csv')\ndata.head()","e271266c":"data.shape","95e1bde5":"data.info()","ee1f5cda":"data_info=data.isna().sum()\ndata_info","e08b0acc":"#this heatmap shows impurity in the datasets\nfig=plt.figure(figsize=(10,7))\nsns.heatmap(data.isna())","0ef3e948":"data.head()","96f91a8e":"sns.countplot(data['Species'])\nplt.show()","495f3a13":"plt.figure(figsize=(8,6),dpi=100)\nplt.title(\"Distirbution of Species\")\ndata['Species'].value_counts().plot.pie(autopct=\"%1.1f%%\");","5c5a3557":"plt.figure(figsize=(6,5))\nsns.boxplot('Species','SepalLengthCm',data=data)\nplt.title(\"SpepalLength comparision\")","d9a91653":"fig=plt.figure(figsize=(6,5))\nsns.boxplot('Species','SepalWidthCm',data=data)\nplt.title(\"Spepalwidth comparision\")","4f08e4b4":"fig=plt.figure(figsize=(6,5))\nsns.boxplot('Species','PetalWidthCm',data=data)\nplt.title(\"Petalwidth comparision\")","b17994e4":"fig=plt.figure(figsize=(6,5))\nsns.boxplot('Species','SepalLengthCm',data=data)\nplt.title(\"Sepallength comparision\")","b37cc071":"plt.figure(figsize=(8,6))\nsns.violinplot('Species','PetalWidthCm',data=data)","1d985f61":"plt.figure(figsize=(8,6))\nsns.violinplot('Species','SepalLengthCm',data=data)","bf079007":"plt.figure(figsize=(8,6))\nsns.violinplot('Species','SepalWidthCm',data=data)","605fcd24":"plt.figure(figsize=(8,6))\nsns.violinplot('Species','PetalLengthCm',data=data)","bf34010f":"sns.pairplot(data,hue='Species',vars = ['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm'], palette=svm_palette[1:] )","dcd8f435":"svm_palette = ['#3d5a80', '#98c1d9', '#ee6c4d', '#293241']","1fd4c105":"plt.figure(figsize=(20,15))\nsns.set_style('darkgrid')\nplt.subplot(2,2,1)\nsns.violinplot(x = 'Species', y = 'SepalLengthCm', data = data, palette=svm_palette)\nplt.subplot(2,2,2)\nsns.violinplot(x = 'Species', y = 'SepalWidthCm', data = data, palette=svm_palette)\nplt.subplot(2,2,3)\nsns.violinplot(x = 'Species', y = 'PetalLengthCm', data = data, palette=svm_palette)\nplt.subplot(2,2,4)\nsns.violinplot(x = 'Species', y = 'PetalWidthCm', data = data, palette=svm_palette)","3ddad1bb":"fig=plt.figure(figsize=(10,10))\nsns.set_style('white')\nplt.grid()\nplt.subplot(2,2,1)\nsns.scatterplot(x='SepalWidthCm',y='SepalLengthCm',hue = 'Species',data=data,palette=svm_palette[1:])\nplt.subplot(2,2,2)\nsns.scatterplot(x='PetalWidthCm',y='PetalLengthCm',hue='Species',data=data,palette=svm_palette[1:])","8741b2bb":"ax = sns.boxplot(x=\"Species\", y=\"PetalLengthCm\", data=data)\nax = sns.stripplot(x=\"Species\", y=\"PetalLengthCm\", data=data, jitter=True, edgecolor=\"gray\")","84dec5eb":"sns.FacetGrid(data, hue=\"Species\", size=6) \\\n   .map(sns.kdeplot, \"PetalLengthCm\") \\\n   .add_legend()","e6309cc4":"#importing labelEncoder \nfrom sklearn.preprocessing import LabelEncoder\nencoder=LabelEncoder()\ndata['Species']=encoder.fit_transform(data['Species'])\ndata.head()","126e7741":"#test and train data\nlst=[]\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(data[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']],data['Species'],\n                                               test_size=0.2)","6dec5207":"from sklearn.linear_model import LinearRegression\nmodel=LinearRegression()\nmodel.fit(x_train,y_train)\nscore=model.score(x_test,y_test)\nprint(score)\nlst.append(score)","fb2265f4":"#support vector machine\nfrom sklearn.svm import SVR\nmodel=SVR(kernel='rbf')\nmodel.fit(x_train,y_train)\nscore2=model.score(x_test,y_test)\nprint(score2)\nlst.append(score2)","96b7660d":"#decision tree\nfrom sklearn.tree import DecisionTreeRegressor\nmodel=DecisionTreeRegressor(criterion='mse',max_depth=6)\nmodel.fit(x_train,y_train)\nscore3=model.score(x_test,y_test)\nprint(score3)\nlst.append(score3)","cbd262d2":"# kneighbors\nfrom sklearn.neighbors import KNeighborsRegressor\nmode=KNeighborsRegressor()\nmodel.fit(x_train,y_train)\nscore4=model.score(x_test,y_test)\nprint(score4)\nlst.append(score4)\nprint(lst)","860d8674":"print(\"thank you\")","122a5238":"**Cheaking the data Nan values present or not basically data Cleaning**","0b6e4039":"**Shape information of data**","a989983e":"**importing data using pandas**","cb9491af":"****DATA VISUALIZATION****","b2f1605f":"****BOX PLOT VISUALIZATION OF SEPALLENGTH OF FLOWER****"}}