{"cell_type":{"61f2b19c":"code","0b7d0af9":"code","44a96db4":"code","fd745bb2":"code","3b07c8df":"code","b5e1240c":"code","8c16035d":"code","77baa2d8":"code","53146fc0":"code","a0ddd7da":"code","63702c97":"code","d4386f6b":"code","8fe85b24":"code","477a77d2":"code","04d68784":"code","c6988ecf":"code","a97c063e":"code","1b7526c1":"code","43fda0f7":"code","4c7591ec":"code","08c59bfc":"code","65d1219e":"code","80147e4f":"code","ab39adea":"code","0d8c808e":"code","7fa214f0":"code","6a87edaf":"code","8a5dc0e7":"code","d8f2241c":"code","29be5396":"code","534c214f":"code","c73d511c":"code","d831f7c7":"code","3b87cb38":"code","2bb62bb3":"code","06e97146":"markdown","6fce6558":"markdown","7db996db":"markdown","eb9bd49f":"markdown","cd6658fd":"markdown","3e2368ef":"markdown","d4a8309d":"markdown","646f58b3":"markdown","1fbf6ca3":"markdown","f340821f":"markdown","3b3304e6":"markdown","f14d3504":"markdown","1b0243f5":"markdown","1f2c81f6":"markdown","fb2e9c6a":"markdown"},"source":{"61f2b19c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0b7d0af9":"import pymc3 as pm\nimport seaborn as sns\nfrom scipy import stats\nimport matplotlib.pyplot as plt\nimport arviz as az \n%matplotlib inline\npd.options.display.max_columns = None","44a96db4":"df_game = pd.read_csv('\/kaggle\/input\/mobile-games-ab-testing\/cookie_cats.csv')","fd745bb2":"#Avaliando as colunas e valores nulos\ndf_game.info()","3b07c8df":"#Estat\u00edstica b\u00e1sicas \ndf_game.describe()","b5e1240c":"sns.boxplot(df_game['sum_gamerounds'])","8c16035d":"#removendo outliers\nQ1 = df_game['sum_gamerounds'].quantile(0.25)\nQ3 = df_game['sum_gamerounds'].quantile(0.75)\nIQR = Q3 - Q1\nprint(IQR)","77baa2d8":"df_game.shape[0] - \\\ndf_game[(df_game['sum_gamerounds'] < (Q1 - 1.5 * IQR)) | (df_game['sum_gamerounds'] > (Q3 + 1.5 * IQR))].shape[0]","53146fc0":"z = np.abs(stats.zscore(df_game['sum_gamerounds']))\nprint(z)","a0ddd7da":"df_outdropped = df_game[(z < 2)]","63702c97":"df_game.shape[0] - df_outdropped.shape[0]","d4386f6b":"sns.boxplot(df_outdropped['sum_gamerounds'])","8fe85b24":"df_outdropped.describe()","477a77d2":"df_game = df_outdropped.copy()","04d68784":"#analisando os grupos por vers\u00e3o do gate (30 ou 40)\ndf_game.groupby('version').count()[['userid']]","c6988ecf":"#An\u00e1lise da distribui\u00e7\u00e3o de gamerounds por gate\ngate_30 = df_game.query(\"version == 'gate_30'\")['sum_gamerounds'].values\ngate_40 = df_game.query(\"version == 'gate_40'\")['sum_gamerounds'].values","a97c063e":"plt.figure(figsize=(12,5))\nsns.distplot(gate_30)\nsns.distplot(gate_40)","1b7526c1":"print(f'M\u00e9dia Gate 30: {gate_30.mean()}')\nprint(f'M\u00e9dia Gate 40: {gate_40.mean()}')","43fda0f7":"g30_1 = df_game.query(\"version == 'gate_30'\")['retention_1'].values.astype(int)\ng40_1 = df_game.query(\"version == 'gate_40'\")['retention_1'].values.astype(int)\nprint(f'Reten\u00e7\u00e3o m\u00e9dia Gate 30: {100*g30_1.mean().round(3)}')\nprint(f'Reten\u00e7ao m\u00e9dia Gate 40: {100*g40_1.mean().round(3)}')\nprint(f'Diferen\u00e7a da m\u00e9dia entre Gate 30 e Gate 40: {(g30_1.mean() - g40_1.mean()).round(3)*100}')","4c7591ec":"with pm.Model() as model_30:\n    p_30 = pm.Uniform('p_30',lower=0, upper=1)\n    \n    obs_30 = pm.Bernoulli('obs_30', p_30, observed=g30_1)\n    \n    step = pm.Metropolis()\n    trace = pm.sample(2000, step = step)\n    burned_trace_30 = trace[1000:]","08c59bfc":"with pm.Model() as model_40:\n    p_40 = pm.Uniform('p_40',lower=0, upper=1)\n    \n    obs_40 = pm.Bernoulli('obs_40', p_40, observed=g40_1)\n    \n    step = pm.Metropolis()\n    trace = pm.sample(2000, step = step)\n    burned_trace_40 = trace[1000:]","65d1219e":"#Observando a m\u00e9dia das duas distribui\u00e7\u00f5es com os valores posteriori gerados\nprint(f'M\u00e9dia posteriori Gate 30: {burned_trace_30[\"p_30\"].mean().round(3)}')\nprint(f'M\u00e9dia posteriori Gate 40: {burned_trace_40[\"p_40\"].mean().round(3)}')","80147e4f":"plt.figure(figsize=(12.5, 4))\nplt.hist(burned_trace_30[\"p_30\"], bins=40, label='Posterior P_30', density=True)\nplt.hist(burned_trace_40[\"p_40\"], bins=40, label='Posterior P_40', density=True)\nplt.xlabel('Valores')\nplt.ylabel('Densidade')\nplt.title(\"Distribui\u00e7\u00e3o posterior para a reten\u00e7\u00e3o de 1 dia $30$ and group $40$\")\nplt.legend()\nplt.show()","ab39adea":"diff=burned_trace_30[\"p_30\"]-burned_trace_40[\"p_40\"]\nplt.figure(figsize=(12.5, 4))\nplt.hist(diff, bins=40, density=True)\nplt.vlines(0, 0, 120, linestyle='--', color='red')\nplt.title('Distribui\u00e7\u00e3o posterior para a diferen\u00e7a entre as duas m\u00e9dias')\nplt.show()","0d8c808e":"#Probabilidade da diferen\u00e7a ser maior do que 0\n100*len(diff[diff>0.0])*1.0\/len(diff)","7fa214f0":"#Avaliando a diferen\u00e7a relativa\nrel_diff=100*(burned_trace_30[\"p_30\"]-burned_trace_40[\"p_40\"])\/burned_trace_40[\"p_40\"]\nplt.figure(figsize=(12.5, 4))\nplt.hist(rel_diff, bins=40, density=True)\nplt.vlines(0, 0, 0.7, linestyle='--', color='red')\nplt.title('Diferen\u00e7a relativa entre as duas reten\u00e7\u00f5es m\u00e9dias')\nplt.xlabel(\"Porcentagem\")\nplt.show()","6a87edaf":"100*len(rel_diff[rel_diff>0.0])*1.0\/len(rel_diff)","8a5dc0e7":"g30_7 = df_game.query(\"version == 'gate_30'\")['retention_7'].values.astype(int)\ng40_7 = df_game.query(\"version == 'gate_40'\")['retention_7'].values.astype(int)\nprint(f'Reten\u00e7\u00e3o m\u00e9dia Gate 30: {100*g30_7.mean().round(3)}')\nprint(f'Reten\u00e7ao m\u00e9dia Gate 40: {100*g40_7.mean().round(3)}')\nprint(f'Diferen\u00e7a da m\u00e9dia entre Gate 30 e Gate 40: {(g30_7.mean() - g40_7.mean()).round(3)*100}')","d8f2241c":"with pm.Model() as model_7_30_v2:\n    p_7_30 = pm.Uniform('p_7_30',lower=0, upper=1)\n    p_7_40 = pm.Uniform('p_7_40',lower=0, upper=1)\n    \n    obs_7_30 = pm.Bernoulli('obs_7_30', p_7_30, observed=g30_7)\n    obs_7_40 = pm.Bernoulli('obs_7_40', p_7_40, observed=g40_7)\n    \n    diff = pm.Deterministic('diff', p_7_30 - p_7_40)\n    rel_diff = pm.Deterministic('rel_diff', 100*(p_7_30 - p_7_40)\/p_7_40)\n    \n    step = pm.Metropolis()\n    trace = pm.sample(2000, step = step)\n    burned_trace_7 = trace[1000:]","29be5396":"#Observando a m\u00e9dia das duas distribui\u00e7\u00f5es com os valores posteriori gerados\nprint(f'M\u00e9dia posteriori Gate 30: {burned_trace_7[\"p_7_30\"].mean().round(3)}')\nprint(f'M\u00e9dia posteriori Gate 40: {burned_trace_7[\"p_7_40\"].mean().round(3)}')","534c214f":"plt.figure(figsize=(12.5, 4))\nplt.hist(burned_trace_7[\"p_7_30\"], bins=40, label='Posterior P_30', density=True)\nplt.hist(burned_trace_7[\"p_7_40\"], bins=40, label='Posterior P_40', density=True)\nplt.xlabel('Valores')\nplt.ylabel('Densidade')\nplt.title(\"Distribui\u00e7\u00e3o posterior para a reten\u00e7\u00e3o de 7 dia $30$ and group $40$\")\nplt.legend()\nplt.show()","c73d511c":"diff=burned_trace_7[\"p_7_30\"]-burned_trace_7[\"p_7_40\"]\nplt.figure(figsize=(12.5, 4))\nplt.hist(diff, bins=40, density=True)\nplt.vlines(0, 0, 120, linestyle='--', color='red')\nplt.title('Distribui\u00e7\u00e3o posterior para a diferen\u00e7a entre as duas m\u00e9dias na reten\u00e7\u00e3o de 7 dias')\nplt.show()","d831f7c7":"#Probabilidade da diferen\u00e7a ser maior do que 0\n100*len(diff[diff>0.0])*1.0\/len(diff)","3b87cb38":"#Avaliando a diferen\u00e7a relativa\nrel_diff=100*(burned_trace_7[\"p_7_30\"]-burned_trace_7[\"p_7_40\"])\/burned_trace_7[\"p_7_40\"]\nplt.figure(figsize=(12.5, 4))\nplt.hist(rel_diff, bins=40, density=True)\nplt.vlines(0, 0, 0.7, linestyle='--', color='red')\nplt.title('Diferen\u00e7a relativa entre as duas reten\u00e7\u00f5es m\u00e9dias')\nplt.xlabel(\"Porcentagem\")\nplt.show()","2bb62bb3":"100*len(rel_diff[rel_diff>0.0])*1.0\/len(rel_diff)","06e97146":"# Avalia\u00e7\u00e3o sobre a melhor op\u00e7\u00e3o entre os port\u00f5es utilizando a lib Pymc3","6fce6558":"### Pelo gr\u00e1fico acima, observamos que boa parte da distribui\u00e7\u00e3o da diferen\u00e7a absoluta est\u00e1 acima de 0, o que indica que na maioria dos dados a convers\u00e3o de 1 dia para o Gate 30 \u00e9 maior do que o Gate 40.","7db996db":"### Observa-se um valor m\u00e1ximo na vari\u00e1vel sum_gamerounds muito acima da m\u00e9dia. Vamos tratar os outliers","eb9bd49f":"### N\u00e3o observamos valores nulos no Dataset.","cd6658fd":"Utilizando a abordagem de IQR removemos um volume muito alto de registros. Vamos testar a abordagem por Z-score","3e2368ef":"### Em termos da m\u00e9dia de Gamerounds observamos uma pequena diferen\u00e7a a favor do Gate 30.","d4a8309d":"### Na distribui\u00e7\u00e3o posterior, temos valores maiores para o Gate 30. Vamos aprofundar um pouco mais observando a diferen\u00e7a absoluta entre as reten\u00e7\u00f5es","646f58b3":"# Conclus\u00e3o Reten\u00e7\u00e3o de 1 dia\n\n### Pelas observa\u00e7\u00f5es acima, temos uma confian\u00e7a de 96% que a reten\u00e7\u00e3o para o Gate 30 \u00e9 maior do que o 40.","1fbf6ca3":"### Observa-se que a base foi dividida em propor\u00e7\u00f5es praticamente iguais.","f340821f":"### Utilizando Z-score, chegamos a uma distribui\u00e7\u00e3o mais coerente, sem perder muitos dados.","3b3304e6":"# An\u00e1lise da m\u00e9trica reten\u00e7\u00e3o de 1 dia para os Gates 30 e 40","f14d3504":"# Conclus\u00e3o Reten\u00e7\u00e3o de 7 dia\n\nPelas observa\u00e7\u00f5es acima, temos uma confian\u00e7a de 99,95% que a reten\u00e7\u00e3o para o Gate 30 \u00e9 maior do que o 40 para 7 dias.\nComo conclus\u00e3o final observamos que colocar o port\u00e3o no Level 30 trouxe maior reten\u00e7\u00e3o tanto para as m\u00e9tricas de 1 e 7 dias. Para a tomada de decis\u00e3o em um problema real outras vari\u00e1veis precisariam ser analisadas, por\u00e9m, caso a decis\u00e3o precisasse ser tomada levando em conta somente as estudadas, a manuten\u00e7\u00e3o do Gate 30 seria a mais adequada. \n","1b0243f5":"# An\u00e1lise da Reten\u00e7\u00e3o de 7 Dias","1f2c81f6":"### Aqui observamos que para a reten\u00e7\u00e3o de 01 dia o Gate 30, a exemplo da m\u00e9dia geral de Gamerounds, apresenta um valor de 0.6 pp em rela\u00e7\u00e3o ao 40. Vamos rodar o modelo do Pymc3 para validar a signific\u00e2ncia desta diferen\u00e7a.","fb2e9c6a":"## Informa\u00e7\u00f5es sobre as distribui\u00e7\u00f5es do modelo Bayesiano\n\n### * Priori: Uniforme com intervalo entre [0,1]\n\n\n### * Likelihood: Bernoulli\n"}}