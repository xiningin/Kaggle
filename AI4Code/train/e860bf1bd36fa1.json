{"cell_type":{"e698c9d1":"code","ce0b08b0":"code","21b5e421":"code","1b6f121d":"code","9d62fa6d":"code","235c052e":"code","71b4a961":"code","324acc2b":"code","f58eacff":"code","06d7fec7":"code","5c1cefbb":"code","d1280747":"code","61220a21":"code","3f758758":"code","c8008673":"code","d7771426":"code","db5e8b2f":"code","799f36b9":"markdown"},"source":{"e698c9d1":"! pip install pyspark","ce0b08b0":"! curl  https:\/\/raw.githubusercontent.com\/apache\/spark\/master\/data\/mllib\/sample_libsvm_data.txt > sample_libsvm_data.txt","21b5e421":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom pyspark.sql import SparkSession\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.classification import DecisionTreeClassifier\nfrom pyspark.ml.feature import StringIndexer, VectorIndexer\nfrom pyspark.ml.evaluation import MulticlassClassificationEvaluator\n\n\nimport os\nprint(os.listdir(\".\"))\n\n# Any results you write to the current directory are saved as output.","1b6f121d":"spark = SparkSession.builder.getOrCreate()\nspark","9d62fa6d":"sdf = spark.read.format(\"libsvm\").load(\"sample_libsvm_data.txt\")\npdf = sdf.toPandas()\npdf.T","235c052e":"str_indx = StringIndexer(inputCol = \"label\", outputCol = \"str_indx_label\").fit(sdf)","71b4a961":"vec_indx = VectorIndexer(inputCol = \"features\", outputCol = \"vec_indx_features\", maxCategories = 4).fit(sdf)","324acc2b":"(sdf_training, sdf_test) = sdf.randomSplit([0.70,0.30])","f58eacff":"dt = DecisionTreeClassifier(labelCol = \"str_indx_label\", featuresCol = \"vec_indx_features\")","06d7fec7":"pipeline = Pipeline(stages=[str_indx, vec_indx, dt])","5c1cefbb":"model = pipeline.fit(sdf_training)","d1280747":"sdf_pred = model.transform(sdf_test)","61220a21":"print(sdf_pred.printSchema())\npdf = sdf_pred.toPandas()\npdf.T\n# Failed to execute user defined function($anonfun$11: (struct<type:tinyint,size:int,indices:array<int>,values:array<double>>) => struct<type:tinyint,size:int,indices:array<int>,values:array<double>>)","3f758758":"evaluator = MulticlassClassificationEvaluator(labelCol = \"str_indx_label\", predictionCol = \"prediction\", metricName = \"accuracy\")","c8008673":"accuracy = evaluator.evaluate(sdf_pred)","d7771426":"\nprint(accuracy)\nprint((1.0 - accuracy))","db5e8b2f":"print(model.stages[2])","799f36b9":"[Source](https:\/\/spark.apache.org\/docs\/latest\/ml-classification-regression.html#decision-tree-classifier)"}}