{"cell_type":{"5bb8d445":"code","5e809669":"code","2a023306":"code","2a7323a7":"code","007b5a33":"code","7e07e875":"code","84d85433":"code","c1c55840":"code","bf65c800":"code","a1e6ee83":"code","c5c01f0a":"code","4e8789a0":"code","5afe36f7":"code","a48cedf6":"code","28d85e8e":"code","012da529":"code","dad15cf2":"code","763b1fca":"markdown","5b8a6a1c":"markdown","7bf942e2":"markdown","d3b609b6":"markdown","51c69ef7":"markdown","b28543ac":"markdown","8057062c":"markdown","d7e6d58a":"markdown","9be76eab":"markdown","3a54c8f1":"markdown","b692b211":"markdown","cbe81376":"markdown","18dd8a42":"markdown","e9bc1ff4":"markdown","9696ede7":"markdown","517980c5":"markdown","4f71d12a":"markdown","3ea5b4e8":"markdown","85278ac9":"markdown","c77aa317":"markdown","3881ad82":"markdown","939c6074":"markdown","0d87e06b":"markdown","241fce7c":"markdown","f9a10355":"markdown","f7109b6a":"markdown","8d9b9e33":"markdown","cc72950c":"markdown","199eaa21":"markdown","9f44bcd6":"markdown","7fd9a00a":"markdown","835b3baf":"markdown"},"source":{"5bb8d445":"import numpy as np \nimport pandas as pd\n!pip install openpyxl\n\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)\n\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\n\nimport eli5","5e809669":"df = pd.read_excel('\/kaggle\/input\/airline-fare-prediction\/train.xlsx')","2a023306":"df.shape","2a7323a7":"df.head()","007b5a33":"fig = px.box(df, y=\"Price\")\nfig.show()","7e07e875":"df_try = pd.DataFrame(df['Airline'].value_counts())\ndf_try['name'] = df_try.index\nfig = px.pie(df_try, values=\"Airline\",names='name')\nfig.show()","84d85433":"df_indigo = df.loc[df['Airline'] == 'IndiGo']\nmedian_indigo = df_indigo['Price'].median()\nmax_indigo = df_indigo['Price'].max()\ndf_jet = df.loc[df['Airline'] == 'Jet Airways']\nmedian_jet = df_jet['Price'].median()\nmax_jet = df_jet['Price'].max()\ndf_airindia = df.loc[df['Airline'] == 'Air India']\nmedian_airindia = df_airindia['Price'].median()\nmax_airindia = df_airindia['Price'].max()\ndf_spicejet = df.loc[df['Airline'] == 'SpiceJet']\nmedian_spicejet = df_spicejet['Price'].median()\nmax_spicejet = df_spicejet['Price'].max()\ndf_vistara = df.loc[df['Airline'] == 'Vistara']\nmedian_vistara = df_vistara['Price'].median()\nmax_vistara = df_vistara['Price'].max()\ndf_airasia = df.loc[df['Airline'] == 'Air Asia']\nmedian_air_asia = df_airasia['Price'].median()\nmax_airasia = df_airasia['Price'].max()\ndf_goair = df.loc[df['Airline'] == 'GoAir']\nmedian_goair = df_goair['Price'].median()\nmax_goair = df_goair['Price'].max()\ndf_jetbusiness = df.loc[df['Airline'] == 'Jet Airways Business']\nmedian_jetbusiness = df_jetbusiness['Price'].median()\nmax_jetbusiness = df_jetbusiness['Price'].max()\ndf_vistarabusiness = df.loc[df['Airline'] == 'Vistara Premium economy']\nmedian_vistarabusiness = df_vistarabusiness['Price'].median()\nmax_vistarabusiness = df_vistarabusiness['Price'].max()\n\ndata = [['Indigo',median_indigo,max_indigo], ['Jet Airways', median_jet, max_jet], ['Air India',median_airindia,max_airindia], ['Spice Jet', median_spicejet,max_spicejet],['Vistara',median_vistara,max_vistara],['Air Asia', median_air_asia, max_airasia],['Go Air',median_goair,max_goair],['Jet Business', median_jetbusiness,max_jetbusiness],['Vistara Business',median_vistarabusiness,max_vistarabusiness]]\ndf_sample = pd.DataFrame(data, columns = ['Airline', 'Median Price','Max Price'])\n\nfig = go.Figure(data=[\n    go.Bar(name='Median Price', x=df_sample['Airline'], y=df_sample['Median Price']),\n    go.Bar(name='Max Price', x=df_sample['Airline'], y=df_sample['Max Price'])])\n# Change the bar mode\nfig.update_layout(barmode='group')\nfig.show()\n\n","c1c55840":"def total_stop_converter():\n    for i in range(len(df['Total_Stops'])):\n        if df['Total_Stops'][i]=='non-stop':\n            df['Total_Stops'][i] = '0'\n        elif df['Total_Stops'][i]=='2 stops':\n            df['Total_Stops'][i] = '2'\n        else:\n            df['Total_Stops'][i]= '1'\ntotal_stop_converter()\n\ndf = df.dropna()\nfig = px.treemap(df, path=['Airline', 'Total_Stops'], values='Price')\nfig.update_traces(root_color=\"lightgrey\")\nfig.update_layout(margin = dict(t=50, l=25, r=25, b=25))\nfig.show()","bf65c800":"df['Date_of_Journey'] = pd.to_datetime(df['Date_of_Journey'], format = \"%d\/%m\/%Y\")\ndf['Months'] = df.Date_of_Journey.dt.month\ndf['Seasons'] = df['Months'].map({3: 'Summer', 4: 'Summer',5:'Summer',6:'Monsoon'})\nfig = px.line(df,y='Price', color='Seasons')\nfig.show()","a1e6ee83":"df['Duration'] = pd.to_timedelta(df['Duration'])\ndf['Duration_in_minutes'] = df.Duration.dt.seconds\/60\nfig = px.scatter(df, x=\"Duration_in_minutes\", y=\"Price\")\nfig.show()\n\n","c5c01f0a":"df['Day'] = df.Date_of_Journey.dt.day\ndf['Months'] = df.Date_of_Journey.dt.month\ndf['Year'] = df.Date_of_Journey.dt.year","4e8789a0":"drop_list = ['Date_of_Journey', 'Source', 'Destination', 'Route', 'Dep_Time','Arrival_Time','Additional Info','Seasons','Duration']\ndf = df.drop(columns=drop_list,axis=1)","5afe36f7":"le = preprocessing.LabelEncoder()\ndf['Airline'] = le.fit_transform(df['Airline'])\ndf['Total_Stops'] = le.fit_transform(df['Total_Stops'])\n","a48cedf6":"y = df.pop('Price')\nX_train,X_test,y_train,y_test = train_test_split(df,y)","28d85e8e":"regressor = RandomForestRegressor(n_estimators = 50, random_state = 0) \nregressor.fit(X_train, y_train)   ","012da529":"print(f'The accuracy score on the training set is : {regressor.score(X_train, y_train)}')\nprint(f'The accuracy score on the test set is : {regressor.score(X_test, y_test)}')","dad15cf2":"Xfeature_names = X_train.columns\neli5.show_weights(regressor,feature_names = X_train.columns.tolist())\n","763b1fca":"# __Predictive Modelling__ \u2699\ufe0f","5b8a6a1c":"![Upvote!](https:\/\/img.shields.io\/badge\/Please%20Upvote-If%20you%20find%20the%20notebook%20useful-07b3c8?style=for-the-badge&logo=kaggle&color=blue)","7bf942e2":"### Quick Overview","d3b609b6":"### Score on Train and Test set","51c69ef7":"### Total Stops is the most important feature here, followed by the choice in Airline\n\n### Expected Duration in minutes to play a slightly bigger role, but seems like it doesn't factor much. Same goes for the Date too.","b28543ac":"### Let's see the label distribution ","8057062c":"### Use ELi5 library to inspect the contribution of each feature","d7e6d58a":"### Seperate out the Day, Month and Year to use as seperate feature columns","9be76eab":"### Airline Distribution","3a54c8f1":"### Drop unnescessary column features","b692b211":"<h1 style=\"text-align:center;color:blue;\">Airline Fare Prediction<\/h1>","cbe81376":"# __EDA__ \ud83d\udcca","18dd8a42":"### The median price is around 8k INR, while the first quantile is at 5k INR, not much of a difference\n\n### The third quantile jumps to 12k INR, and the final quantile is almost exactly double\n\n### There are a few outrageous outliers too, most probably business class tickets","e9bc1ff4":"### India experiences five major seasons \u2013 summer (March-May), monsoons (June-September), post-monsoons (October-November), winter (December-February).The dataset contains data only for two seasons, \"Summer\" and \"Monsoon\", so we look at their releationship with Price","9696ede7":"### Jet Business has both the highest Median and Max price, not surprsing from an airline that's business class\n\n### SpiceJet has the lowest median price, true to their motto of being super budget-friendly \n\n### The next lowest median price is IndiGo, another budget airline\n\n### Jet Airways has the biggest discrepancy between median and max price, probably due to a few outliers\n\n### Interesting that Vistara business prices are so low\n\n","517980c5":"### Importing Required Libraries \ud83d\udcda","4f71d12a":"### Dataset Shape","3ea5b4e8":"### Seperate out the label, \"Price\" and split into training and test sets","85278ac9":"### Treemap filtered by Airline and Total Stop; price shown for each block is the sum of all prices within that block","c77aa317":"### 6 column features and 10683 data points to work with","3881ad82":"### Jet, IndiGo and AirIndia are the top 3 players\n\n### SpiceJet, Vistara, AirAsia command a respectable share too\n\n### As expected, the business class fights only make up a small minority","939c6074":"### Outliers definitely seem to lie exclusively in the Summer seasons\n\n### Summer seasons seems to be more pricier on average","0d87e06b":"### Loading in the Dataset","241fce7c":"### 92 % on the training set and 72 % on the test set, not bad considering the number of available features and data points","f9a10355":"### Let's use a Random Forest model here, as both features and target variable are numerical","f7109b6a":"### Median and Maximum Price sorted by Airline","8d9b9e33":"<img src=\"https:\/\/images.newindianexpress.com\/uploads\/user\/imagelibrary\/2020\/8\/31\/w1200X800\/AIRPORT1__.jpg\" style=\"width:800px;height:450px;img align:center;\">","cc72950c":"# __Introduction__\n\nThis dataset contains information about __Domestic Flights in India__. It was created with the intention of predicting the __Airline fare__. Contains features such as the Airline name, Route, Duration etc. The goal of this kernel is to perform EDA to draw insights about how fares are decided and to make a predictive model; for predicting the fare. ","199eaa21":"### Releationship of \"Duration\" and \"Price\"    \n\n*(Duration is converted to minutes here)*","9f44bcd6":"### Price seems to be independent of Duration","7fd9a00a":"# __Conclusion__\n\nAlthough the accuracy on the test set leaves a bit to be desired, considering the constarints, it's pretty decent. The 2 strongest predictors are the 'class' of the flight and total stop made by the flight while en route to destination. With more data points and features, it should be possible to build a robust reliable model with 90%+ accuracy. \n\nThanks to __Shray Garg__ for creating this dataset.","835b3baf":"### Label Encode 'Airline' and 'Total_Stops' features"}}