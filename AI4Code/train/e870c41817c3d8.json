{"cell_type":{"d76e0fc1":"code","6483d4e0":"code","b7032f5b":"code","dec92890":"code","f30247dd":"code","0bb66a05":"code","9cd6b6d0":"code","dfc84310":"code","d3b1aa8c":"code","3553f1ae":"code","d3bdf551":"code","a91115c4":"code","ce4a4a3f":"code","8dcfc8f9":"code","e8625ebb":"code","b45434f8":"code","c8f32cd9":"code","319182cd":"code","992a6d78":"code","95209872":"code","daa84869":"code","62bd1db4":"code","9240f7ce":"code","b0554e7e":"code","7bf015e7":"code","d0aa070c":"code","22992cc4":"code","e7fd5eb3":"code","49161775":"code","5f33f7de":"code","b25d5341":"code","a933623f":"code","8aa5f2fe":"code","2a9eb7c8":"code","30e7ff98":"code","90245a92":"code","0f815262":"code","add783ec":"code","a114c432":"code","cba702aa":"code","016b5e51":"code","4af0fcf2":"code","a9f7a384":"code","ab501f44":"code","33bea4d4":"code","f44435cb":"code","1e642383":"code","a34edacc":"code","5de767ad":"code","fe19371d":"code","29fd8d25":"code","5ef761b5":"code","50bedf3e":"code","63474262":"code","89c2fe59":"code","2bb3ca47":"code","7752fc59":"markdown","236d396a":"markdown","f54a643d":"markdown","1f52b585":"markdown","6d0592f2":"markdown","675d7c41":"markdown","66980233":"markdown","4ef30ade":"markdown","2cd84970":"markdown","b8dd0a49":"markdown","1cd55e20":"markdown","24a9244d":"markdown","6f6f0640":"markdown","ae776e56":"markdown","720f8b7f":"markdown","517bf933":"markdown","2411a926":"markdown"},"source":{"d76e0fc1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6483d4e0":"#Read the data into a dataframe\nraw_data = pd.read_csv('..\/input\/athlete_events.csv')\nnoc = pd.read_csv('..\/input\/noc_regions.csv')","b7032f5b":"raw_data.head()","dec92890":"raw_data['Sport'].unique()","f30247dd":"raw_data['Games'].unique()","0bb66a05":"#Filter out the gymnastics events. This dataset has both men's and women's gymnastics.\ndf = raw_data.loc[raw_data['Sport']=='Gymnastics']","9cd6b6d0":"df.head()","dfc84310":"df.tail()","d3b1aa8c":"df['Event'].unique()","3553f1ae":"#Filter out the women's events: I'm just interested in Women's Artistic Gymnastics\nwomen_events = ['Gymnastics Women\\'s Individual All-Around', 'Gymnastics Women\\'s Team All-Around', 'Gymnastics Women\\'s Horse Vault', 'Gymnastics Women\\'s Floor Exercise',\n               'Gymnastics Women\\'s Uneven Bars', 'Gymnastics Women\\'s Balance Beam']\nwomens = df.loc[df['Event'].isin(women_events)]","d3bdf551":"womens['Year'].unique()","a91115c4":"#Replace Event names to something less wordy\nwomens['Event'] = womens['Event'].str.replace('Gymnastics Women\\'s Individual All-Around', 'All-Around')","ce4a4a3f":"womens.head()","8dcfc8f9":"#Write a loop or function for this \nwomens['Event'] = womens['Event'].str.replace('Gymnastics Women\\'s Team All-Around', 'Team')\nwomens['Event'] = womens['Event'].str.replace('Gymnastics Women\\'s Horse Vault', 'Vault')\nwomens['Event'] = womens['Event'].str.replace('Gymnastics Women\\'s Balance Beam', 'Balance Beam')\nwomens['Event'] = womens['Event'].str.replace('Gymnastics Women\\'s Uneven Bars', 'Uneven Bars')","e8625ebb":"womens['Event'] = womens['Event'].str.replace('Gymnastics Women\\'s Floor Exercise', 'Floor')","b45434f8":"womens.head()","c8f32cd9":"womens.tail()","319182cd":"womens['Event'].unique()","992a6d78":"#Keep only medal winners\nwomens = womens.dropna(subset=['Medal'])","95209872":"womens.head()","daa84869":"womens['Event'].unique()","62bd1db4":"womens['Year'].unique()","9240f7ce":"g = sns.catplot(data=womens, kind='count', x='Team', order = womens['Team'].value_counts().index, height=4, aspect=3).set_xticklabels(rotation=90)\ng.fig.suptitle(\"Total number of Olympic medals in Women's Artistic Gymnastics: 1928-2016\")\na = womens['Team'].value_counts().to_frame()\na.iloc[0:10]","b0554e7e":"womens.head()","7bf015e7":"sns.set_palette('Blues')\nbeam = womens.loc[womens['Event']=='Balance Beam',]\nbeam.reset_index(drop=True, inplace=True)","d0aa070c":"beam.head()","22992cc4":"g = sns.catplot(data=beam, kind='count', x='Team', order = beam['Team'].value_counts().index, height=4, aspect=3).set_xticklabels(rotation=90)\ng.fig.suptitle(\"Olympic Balance Beam Medals\")\nbeam['Team'].value_counts().to_frame()","e7fd5eb3":"floor = womens.loc[womens['Event']=='Floor',]\nfloor.reset_index(drop=True, inplace=True)","49161775":"f = sns.catplot(data=floor, kind='count', x='Team', order = floor['Team'].value_counts().index, height=4, aspect=3).set_xticklabels(rotation=90)\nf.fig.suptitle(\"Olympic Floor Exercise Medals\")\nfloor['Team'].value_counts().to_frame()","5f33f7de":"bars = womens.loc[womens['Event']=='Uneven Bars',]\nbars.reset_index(drop=True, inplace=True)","b25d5341":"ub = sns.catplot(data=bars, kind='count', x='Team', order = bars['Team'].value_counts().index, height=4, aspect=3).set_xticklabels(rotation=90)\nub.fig.suptitle(\"Olympic Uneven Bars Medals\")\nbars['Team'].value_counts().to_frame()","a933623f":"vault = womens.loc[womens['Event']=='Vault',]\nvault.reset_index(drop=True, inplace=True)\n\nv = sns.catplot(data=vault, kind='count', x='Team', order = vault['Team'].value_counts().index, height=4, aspect=3).set_xticklabels(rotation=90)\nv.fig.suptitle(\"Olympic Vault Medals\")\nvault['Team'].value_counts().to_frame()","8aa5f2fe":"sns.set_palette('Reds')\nussr = womens.loc[womens['Team']=='Soviet Union',]\nussr.reset_index(drop=True, inplace=True)","2a9eb7c8":"a = sns.catplot(data=ussr, kind='count', x='Medal', order = womens['Medal'].value_counts().index, height=4, aspect=3).set_xticklabels(rotation=90)\na.fig.suptitle(\"Total number of Olympic medals, USSR, Women's Artistic Gymnastics: 1928-1988\")","30e7ff98":"b = sns.catplot(data=ussr, kind='count', x='Year').set_xticklabels(rotation=90)\nb.fig.suptitle(\"Olympic Medals, USSR\")","90245a92":"# Create column: Medals earned percent of total, 18 medals total can be earned\ngrouped = ussr.groupby('Year')\ngrouped['Medal'].value_counts().to_frame()\n#ussr['Medal'].value_counts()\n","0f815262":"b = sns.catplot(data=ussr, kind='count', hue='Medal', x='Year').set_xticklabels(rotation=90)\nb.fig.suptitle(\"Olympic Medals, USSR\")","add783ec":"ussr.head()","a114c432":"sns.set_palette('Reds')\nusa = womens.loc[womens['Team']=='United States',]\nusa.reset_index(drop=True, inplace=True)","cba702aa":"usa.head()","016b5e51":"u = sns.catplot(data=usa, kind='count', x='Year', height=4, aspect=3).set_xticklabels(rotation=90)\nu.fig.suptitle('Distribution of Medals')","4af0fcf2":"sns.set_palette('Blues')\nteams = womens.loc[womens['Event']=='Team',]\nteams.reset_index(drop=True, inplace=True)","a9f7a384":"t = sns.catplot(data=teams, kind='count', x='Team', height=4, aspect=3, order=teams['Team'].value_counts().index).set_xticklabels(rotation=90)\nt.fig.suptitle('Distribution of Team Medals')\nteams['Team'].value_counts().to_frame()","ab501f44":"ROM = teams.loc[teams['Team']=='Romania',]\nROM.reset_index(drop=True, inplace=True)\nROM.head()","33bea4d4":"ROM['Year'].unique()","f44435cb":"sns.set_palette('dark')\nr = sns.catplot(data=ROM, kind='count', x = 'Medal', order=['Gold', 'Silver', 'Bronze'])\nr.fig.suptitle('Romania: Team Medals 1956-2012')","1e642383":"g = sns.catplot(data=ROM, kind='count', x='Age', height=4, aspect=3).set_xticklabels(rotation=90)\ng.fig.suptitle('Romanian Teams: Age of Gymnasts')","a34edacc":"g = sns.catplot(data=womens, kind='count', x='Age', height=4, aspect=3).set_xticklabels(rotation=90)\ng.fig.suptitle('WAG Olympic Gymnasts: Age of Gymnast')","5de767ad":"womens['Age'].value_counts().to_frame()","fe19371d":"c = sns.catplot(data=ussr, kind='count', x='Age', height=4, aspect=3).set_xticklabels(rotation=90)\nussr['Age'].value_counts().to_frame()","29fd8d25":"modern = womens.loc[womens['Year'].isin(['2008', '2012', '2016'])]","5ef761b5":"modern.head()","50bedf3e":"modern['Year'].unique()","63474262":"g = sns.catplot(data=modern, kind='count', x='NOC', order = modern['NOC'].value_counts().index).set_xticklabels(rotation=90)\ng.fig.suptitle(\"Medal count by Country: Open-ended scoring\")\nmodern['NOC'].value_counts().to_frame()","89c2fe59":"g = sns.catplot(data=modern, kind='count', x='Age', height=4, aspect=3).set_xticklabels(rotation=90)\nmodern['Age'].value_counts().to_frame()","2bb3ca47":"grouped_modern = modern.groupby('NOC')\ngrouped_modern['Event'].value_counts().to_frame()","7752fc59":"# Team competition","236d396a":"- the majority of medals is by far Gold medals","f54a643d":"## Post Perfect-10 era\n- Long-time gymnastics fans will remember when scoring for WAG was out of 10, and gymnasts strived to score a perfect 10 after Nadia Comaneci became the first to do so at the 1976 Olympics.\n- After the 2004 Olympics, the open-ended scoring system began. Competition scores were now a combination of difficulty and execution scores. \n- For the past several quads, teams like the USA have been dominating team competitions and All-Around while historically strong teams such as Russia, China, and Romania have become slightly (Russia, China) less prominent (Romania failed to qualify a team to the 2016 Rio Olympic Games). ","1f52b585":"- USSR has won the most medals overall (Gold + Silver + Bronze)\n- Not surprising, long-time fans will know how dominant the USSR was. (The two-per-country rule was established to prevent an USSR-only podium year after year)","6d0592f2":"# Introduction\nThis data set has data from the Olympic games.\nI'm a huge fan of Women's Artistic Gymnastics, so I chose to just look at this sport.","675d7c41":"# United States ","66980233":"- USA boycotted the 1980 Olympic Games ","4ef30ade":"# Romania","2cd84970":"# Soviet Union ","b8dd0a49":"# Balance Beam","1cd55e20":"# Uneven bars","24a9244d":"- NOTE: The USSR boycotted the 1984 Olympics","6f6f0640":"# Floor ","ae776e56":"- look at ages in the data set before the age limits were raised (group the Games together with similar age cut-offs)","720f8b7f":"# Vault","517bf933":"- NOTE: Romania did not qualify a team to the 2016 Rio Olympic Games","2411a926":"# Medals Won per Country "}}