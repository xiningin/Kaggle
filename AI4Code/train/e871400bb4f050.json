{"cell_type":{"240e6c99":"code","ae5aa275":"code","930497ee":"code","f8482dae":"code","fe770a8f":"code","3ebf7bd6":"code","1fa8da87":"code","f297fbef":"code","7cbc054f":"markdown","07c35bcc":"markdown","640e2c06":"markdown","7ed18779":"markdown","9004f088":"markdown","c8b5c449":"markdown","89fe3d61":"markdown","d3e53096":"markdown","c96a33bf":"markdown"},"source":{"240e6c99":"import matplotlib.pyplot as plt # plotting\nfrom mpl_toolkits.basemap import Basemap # plotting maps\nimport os # accessing directory structure\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport sqlite3 # read the database","ae5aa275":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","930497ee":"# Read sqlite query results into a pandas DataFrame\nwith sqlite3.connect(\"\/kaggle\/input\/switrs.sqlite\") as con:\n\n    query = (\n        \"SELECT latitude, longitude \"\n        \"FROM collisions \"\n        \"WHERE latitude IS NOT NULL AND longitude IS NOT NULL\"\n    )\n\n    # Construct a Dataframe from the results\n    df = pd.read_sql_query(query, con)","f8482dae":"df.head()","fe770a8f":"fig = plt.figure(figsize=(20,20))\n\nbasemap = Basemap(\n    projection='gall',\n    llcrnrlon = -126,   # lower-left corner longitude\n    llcrnrlat = 32,     # lower-left corner latitude\n    urcrnrlon = -113,   # upper-right corner longitude\n    urcrnrlat = 43,     # upper-right corner latitude\n)\n\nx, y = basemap(df['longitude'].values, df['latitude'].values)\n\nbasemap.plot(x, y, 'k.', markersize=1.5)\n\nfig.show()","3ebf7bd6":"# Read sqlite query results into a pandas DataFrame\nwith sqlite3.connect(\"\/kaggle\/input\/switrs.sqlite\") as con:\n\n    query = (\n        \"SELECT collision_date \"\n        \"FROM collisions \"\n        \"WHERE collision_date IS NOT NULL\"\n    )\n\n    # Construct a Dataframe from the results\n    df = pd.read_sql_query(query, con, parse_dates=[\"collision_date\"])","1fa8da87":"df.head()","f297fbef":"DATE_COL = \"collision_date\"\n\n# Convert to a timeseries\nts = df[[DATE_COL]]\nts.index= ts[DATE_COL]\nax = ts.resample('W-MON').count()[DATE_COL].plot(\n    kind=\"line\",\n    title='Crashes in California',\n    figsize=(12,6),\n    linewidth=2,\n)\n\n# Set Y range and grid\nax.grid()\n\n# Set axis labels\nplt.title('Crashes per Week in California', y=1.03, size=28)\nFONTSIZE=\"xx-large\"\nplt.xlabel(\"\")\nplt.ylabel(\"Crashes \/ Week\", fontsize=FONTSIZE)\n\nplt.show()","7cbc054f":"## Introduction\n\nHello! In this notebook we're going to walk through some simple data exploration with the [California Traffic Collision Data from SWITRS](https:\/\/www.kaggle.com\/alexgude\/california-traffic-collision-data-from-switrs).\n\nThis database contains detailed information about every traffic collision reported to the California Highway Patrol between 2001 and 2020.","07c35bcc":"Then we plot them as a timeseries. Pandas timeseries are helpful because they can be resampled and fill in missing values easily. In this case I resample to weeks, starting on Monday.","640e2c06":"## Exploratory Analysis","7ed18779":"Obviously there is a lot of noise! Looks like the responding officer will often round the GPS coordinates, which gives us that blocky structure.\n\nCan you figure out a way to clean it up? Maybe throw out points with too little precision?","9004f088":"Then we plot each point on a map:","c8b5c449":"The number of crashes decreased after about 2008 but started rising again recently, only to drop as every was asked to stay at home during the COVID-19 pandemic!\n\nThe very end of the dataset is incomplete, as recent accidents haven't all been reported, which explains why it drops to almost 0.\n\nDo you see any other patterns? What is causing them?","89fe3d61":"## Conclusion\n\nThis introduction barely scratches the surface! We still have two entire tables, `victims` and `parties` which includes a wealth of information about who was in the vehicles and if they were injured!\n\nI hope you enjoy this dataset. **Let me know if you work with it!** I'd love to hear from you on Twitter [@alex_gude](https:\/\/twitter.com\/alex_gude).","d3e53096":"## Mapping the collisions\n\nLet's look at _where_ collisions happen.\n\nWe select the latitude and longitude from the database using SQL and read them directly to a Pandas dataframe:","c96a33bf":"## Collisions over time\n\nHow has the amount of collisions changed overtime? Let's find out!\n\nFirst we select the date of each collision:"}}