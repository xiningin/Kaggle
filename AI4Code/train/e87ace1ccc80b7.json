{"cell_type":{"b6e3c200":"code","b98cc85c":"code","8e8423da":"code","88081ba4":"code","6a1508cc":"code","b3f6f806":"code","33d78b6a":"code","ebf4b709":"code","7b4a853f":"code","9fc44739":"code","6ff4d5ff":"code","6b74e704":"code","32c5831f":"code","d65d4b25":"code","bc152e8b":"code","2155ca90":"code","5e899145":"code","c3f02c63":"code","4f7ef8d7":"code","1e3369d3":"code","bfc6e86c":"code","fd785281":"code","2c4d77ab":"code","ddebfb8b":"code","aa206bdc":"code","9141588b":"code","98ac3668":"code","0b19dfea":"code","2fdbabdd":"markdown"},"source":{"b6e3c200":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b98cc85c":"from fastai.vision import *\nfrom fastai.metrics import error_rate","8e8423da":"path=pathlib.Path(os.path.normpath('..\/input\/car_data\/car_data'))","88081ba4":"os.listdir(path)","6a1508cc":"train=path\/'train'\ntest=path\/'test'","b3f6f806":"tfms=get_transforms()","33d78b6a":"data=ImageDataBunch.from_folder(path=path,valid='test',bs=32,ds_tfms=tfms,size=(320,320)).normalize(imagenet_stats)","ebf4b709":"data.show_batch(rows=3,figsize=(12,12))","7b4a853f":"learn=cnn_learner(data,models.resnet50,pretrained=True,metrics=error_rate,model_dir='\/tmp\/model\/')","9fc44739":"data.classes","6ff4d5ff":"learn.fit_one_cycle(10)","6b74e704":"learn.save('stage-1')\n","32c5831f":"interp=ClassificationInterpretation.from_learner(learn)\nlosses,idx=interp.top_losses()\ninterp.plot_top_losses(9,figsize=(12,12))","d65d4b25":"learn.unfreeze()","bc152e8b":"learn.lr_find()","2155ca90":"learn.recorder.plot()","5e899145":"learn.fit_one_cycle(10,max_lr=slice(3e-06,4e-06))","c3f02c63":"learn.save('stage-2')","4f7ef8d7":"data.classes","1e3369d3":"listofSubdirectory=os.listdir(test)\nlen(listofSubdirectory)","bfc6e86c":"import glob\nfrom PIL import Image\nroot='..\/input\/car_data\/car_data\/test\/'\nimages=list()\nfor i in listofSubdirectory:\n    images.append(os.listdir(root+i))\n    \nimages","fd785281":"learn.load('stage-2')","2c4d77ab":"learn.export('\/tmp\/model\/export.pkl')","ddebfb8b":"learn=load_learner('\/tmp\/model\/')","aa206bdc":"columns = ['Id','Predicted']\nlistofprediction=list()\nfor i in range(len(listofSubdirectory)):\n    for j in images[i]:\n        pt=root+listofSubdirectory[i]+'\/'+j\n        img=open_image(pt)\n        name=j.replace('.jpg','')\n        _,pred_idx,output=learn.predict(img)\n        \n        listofprediction.append([name,pred_idx.item()])\n","9141588b":"array=np.array(listofprediction)","98ac3668":"submission=pd.DataFrame(array,columns=columns)\nsubmission","0b19dfea":"submission.to_csv('submission.csv',index=False)","2fdbabdd":"For training and validation accuracy please refer to the cell No 17 as I don't know how to print it but the final value of it is the accuracy for training and valid and error_rate is the error on valid loss whose accuracy = 1-error_rate"}}