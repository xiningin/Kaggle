{"cell_type":{"1febc3ca":"code","6b984acc":"code","9f828675":"code","5829df2f":"code","bbc07931":"code","c7ed5bbe":"code","0aec7625":"code","24b87df1":"code","550c1bc3":"code","164bf5ca":"code","13c062a1":"code","7c6f59bf":"code","18bd8e08":"code","42bcc1e7":"code","79724d9b":"code","16284095":"markdown","3c4c17e0":"markdown","1e8d8ed9":"markdown"},"source":{"1febc3ca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6b984acc":"import sqlite3\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom pathlib import Path\nimport seaborn as sns\n%matplotlib inline","9f828675":"rc={'savefig.dpi': 75, 'figure.autolayout': False, 'figure.figsize': [12, 8], 'axes.labelsize': 18,\\\n   'axes.titlesize': 18, 'font.size': 18, 'lines.linewidth': 2.0, 'lines.markersize': 8, 'legend.fontsize': 16,\\\n   'xtick.labelsize': 16, 'ytick.labelsize': 16}\n\nsns.set(style='white',rc=rc)\n\ndefault_color = '#56B4E9'\ncolormap = plt.cm.cool","5829df2f":"def initiate_db(strcnx: Path) -> sqlite3.Cursor:\n    \"\"\"\n    Conecta no banco sqlite\n\n    Atributos:\n        strcnx: string de conex\u00e3o.\n    \"\"\"\n    strcnx_is_valid = Path(strcnx)\n    if not strcnx_is_valid.is_file():\n        raise (\"O arquivo sqlite3 n\u00e3o existe.\")\n    conn = sqlite3.connect(str(strcnx))\n    cur = conn.cursor()\n    return conn, cur","bbc07931":"db_path = Path(\"\/kaggle\/input\/acordaos-tcu\/tcu-acordaos.db\")\nconn, cur = initiate_db(db_path)","c7ed5bbe":"query = \"SELECT COUNT(DISTINCT id) as quantitativo_acordao, ano_acordao as ano from acordaos group by ano_acordao\"\ncount_acordaos = pd.read_sql_query(query, conn)","0aec7625":"count_acordaos","24b87df1":"count_acordaos['ano'] = count_acordaos[\"ano\"].astype('category')","550c1bc3":"count_acordaos.dtypes","164bf5ca":"count_acordaos.plot.bar(x='ano')","13c062a1":"query_relator = \"SELECT COUNT(DISTINCT id) as quantitativo_acordao, relator from acordaos group by relator\"\ncount_relator = pd.read_sql_query(query_relator, conn)","7c6f59bf":"count_relator.sort_values('quantitativo_acordao',inplace=True, ascending=False)","18bd8e08":"plt.figure(figsize=(12,15)) \nax = sns.barplot(data=count_relator, x= \"quantitativo_acordao\", y = count_relator.relator,  palette=\"GnBu_d\") \nax.set(ylabel = 'Relator');","42bcc1e7":"query_dados_2016 = \"SELECT * from acordaos where ano_acordao = 2016\"\nd2016 = pd.read_sql_query(query_dados_2016, conn)","79724d9b":"d2016.head()","16284095":"> # 2. Quantitativo de ac\u00f3rd\u00e3os por relator","3c4c17e0":"# 3. EDA DOS AC\u00d3RD\u00c3OS REFERENTES AO ANO DE 2016","1e8d8ed9":"> # 1. Quantitativo de ac\u00f3rd\u00e3os por ano presentes na base"}}