{"cell_type":{"84b5b80b":"code","a0e2873b":"code","83eabd1a":"code","e3c40eb1":"code","c3a4126a":"code","0c8a1b9a":"code","1cbe4616":"code","b9a04982":"code","d3e0de2e":"code","bf17670e":"code","1553b436":"code","5aac03af":"code","2bce9920":"code","a6ab095a":"code","f2b8bce6":"code","472f596a":"markdown","22ae50b3":"markdown","34403de7":"markdown","e9be7c45":"markdown","d6255301":"markdown","2ee5e629":"markdown","7d61bd6d":"markdown","759551e6":"markdown","c37dbd30":"markdown","13a0d35e":"markdown","c0bdbd64":"markdown"},"source":{"84b5b80b":"!pip install joypy","a0e2873b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom IPython.display import HTML\nimport joypy\nimport warnings\nwarnings.filterwarnings(\"ignore\")","83eabd1a":"df = pd.read_csv('..\/input\/omicron-covid19-variant-daily-cases\/covid-variants.csv')\ndf.head()","e3c40eb1":"dfCountry = df[df.location=='Indonesia']\ndfCountry = dfCountry.drop(columns=['perc_sequences','num_sequences_total'])\ndfCountry.head()","c3a4126a":"dfCountryWide = dfCountry.pivot(index=['date'],columns='variant',values='num_sequences').reset_index()\ndfCountryWide.columns = dfCountryWide.columns.get_level_values(0)\ndfCountryWide.head()","0c8a1b9a":"dfCountrySum = pd.DataFrame(dfCountryWide.sum(axis=0))\ndfCountrySum = dfCountrySum[1:].reset_index() # The first row is the date\ndfCountrySum.columns = ['variant','total']\ndfCountrySum = dfCountrySum.sort_values(by='total',ascending=False).head(12)\ndfCountrySum","1cbe4616":"listTop7variants = dfCountrySum['variant'][:7].to_list()\nlistTop7variants","b9a04982":"from matplotlib import cm \n%matplotlib inline\nkeyCols = ['date'] + listTop7variants\nnum_rows = dfCountryWide.shape[0]\nx_range = list(range(num_rows))\nfig, axes = joypy.joyplot(dfCountryWide[keyCols], x_range=x_range, colormap=cm.tab10, kind=\"values\", figsize=(10,10), range_style='own',overlap=10,alpha=0.5)\nx_ticks = [x if x%5 == 0 else 0 for x in x_range]\naxes[-1].set_xticks(ticks=x_ticks,labels=dfCountryWide['date'])\nplt.show()","d3e0de2e":"def drawJoyplotCountry(country, topN):\n    dfCountry = df[df.location==country]\n    dfCountry = dfCountry.drop(columns=['perc_sequences','num_sequences_total'])\n\n    dfCountryWide = dfCountry.pivot(index=['date'],columns='variant',values='num_sequences').reset_index()\n    dfCountryWide.columns = dfCountryWide.columns.get_level_values(0)\n    \n    dfCountrySum = pd.DataFrame(dfCountryWide.sum(axis=0))\n    dfCountrySum = dfCountrySum[1:].reset_index() # The first row is the date\n    dfCountrySum.columns = ['variant','total']\n    dfCountrySum = dfCountrySum.sort_values(by='total',ascending=False).head(7)\n    dfCountrySum\n\n    listTopNvariants = dfCountrySum['variant'][:topN].to_list()\n    print(listTopNvariants)\n\n    keyCols = ['date'] + listTopNvariants\n    num_rows = dfCountryWide.shape[0]\n    x_range = list(range(num_rows))\n    fig, axes = joypy.joyplot(dfCountryWide[keyCols], x_range=x_range, colormap=cm.tab10, kind=\"values\", figsize=(10,10), range_style='own',overlap=10,alpha=0.5)\n    fig.suptitle('Number of Sequences of COVID per Variants in {}'.format(country))\n    x_ticks = [x if x%5 == 0 else 0 for x in x_range]\n    axes[-1].set_xticks(ticks=x_ticks,labels=dfCountryWide['date'])\n    plt.show()","bf17670e":"drawJoyplotCountry(country='United States',topN=6)","1553b436":"drawJoyplotCountry(country='United Kingdom',topN=5)","5aac03af":"drawJoyplotCountry(country='South Africa',topN=8)","2bce9920":"drawJoyplotCountry(country='Indonesia',topN=6)","a6ab095a":"listCountries = list(df['location'].unique())\nlistCountries[:5]","f2b8bce6":"import ipywidgets as widgets\nwidgets.interact(drawJoyplotCountry,country=listCountries,topN=widgets.fixed(7))","472f596a":"# Sample plots of several countries","22ae50b3":"# Overview\n\nIn this notebook, I am exploring the use of Joyplot to obtain intuitive understanding about how different variants comes in waves for different countries.\n\nThere are many ways to create joyplot. There are tutorials that explains how to create it in seaborn. But in this case, I am exploring the use of Joypy, which is a specialized library to create joyplot. It primarily deals with creating Joyplot based on histogram \/ distribution data, but in this notebook I am exploring how to re-purpose it using time series data of multiple series that are happening with some overlapping period.","34403de7":"# Use widgets for interactive exploration","e9be7c45":"## Transform into wide columns\nThis step transform the long into wide format. The objective is to reshape the data to fit the format needed by the Joypy library to generate the joyplot.","d6255301":"# Let's start using our Joyplot!\n\nWhy Joyplot? COVID variants are coming in waves. Sometimes those waves overlap, and sometimes they form distinct peaks. Using Joyplot enables us to see both those dynamics happening more visually, allowing us to learn what is happening in a specific country.\n\nThis notebook is using joypy library, which is a very useful single-focused library to make joyplots","2ee5e629":"# Now let's make this into a function\n\nOne example is done. Now we'd like to make this into a function to make it easily replicable if we want to analyze from one country to another.","7d61bd6d":"# Loading Data and Libraries","759551e6":"We can use Interact function to generate an interactive widget for our function. The first input parameter is the function itself, and the consecutive ones related to the input parameter of our drawJoyplotCountry(country,topN) function. For country, when we assign it to listCountries, the ipywidgets will automatically select dropdown button for the widget and have all of the event callbacks taken care of. For the topN, to keep it simple, I put a fixed number 7 and use the widgets.fixed() function)","c37dbd30":"## Some notes on the code:\n- Why using keyCols? Because the full table consist of many variant columns with 0 value, which just fill in the chart with empty space. So this step only keep the necessary columns\n- What is num_rows and x_range? This is used to generate the x_range as input into the Joypy library. Normally, the joyplot treats the x-axis as a histogram. In this special situation, where we have unique figures for each row x column, we just need to put the table index. So just a range(num_rows)\n- How about x_ticks? To give space on the x_axis, so that it's not too crowded. In set_xticks, the ticks itself takes the numeric range, while the labels takes on the date","13a0d35e":"## Get top N variants in a country\nPreviously, I did not filter for the variants and keep all of the variant colums in. Then, I found that there are a lot of variants that have 0 value, as well as long tail of minor variants. I observed that for many countries, only around top 5-7 variants are significant enough to show up in this chart.\n\nThis part consist of 2 steps: (1) Get the sum of all of the columns. Sort value and pick top N as a list, to be used for the final visualization step","c0bdbd64":"# To be continued...\n\nI hope the underlying dataset will kept updated over time. I would be curious to see how Omicron trend differ than previous variants and how it differs between countries."}}