{"cell_type":{"6efad57f":"code","b9ce8517":"code","ddb5a4ab":"code","f98e3304":"code","14445bbf":"code","36232b89":"code","406aa4ee":"code","48a42d91":"code","168fa3cf":"code","d37f8883":"code","a00f44b4":"code","2f2eba37":"code","3eec1895":"code","ce6f6455":"code","dd42bb90":"code","c0db453b":"markdown","f904d9d4":"markdown","ea25fafc":"markdown","1f18431b":"markdown","422f3ecb":"markdown"},"source":{"6efad57f":"## Import Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom pandas.plotting import register_matplotlib_converters\nregister_matplotlib_converters()\n#%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nplt.rcParams['figure.figsize'] = [15, 5]\nfrom IPython import display\nfrom ipywidgets import interact, widgets\nimport seaborn as sns","b9ce8517":"file_in_kaggle='\/kaggle\/input\/corona-virus-brazil\/brazil_covid19.csv'\n#file_local = '.\/data\/brazil_covid19.csv'\nufs = { 'AC': 'Acre','AL': 'Alagoas','AP': 'Amap\u00e1','AM': 'Amazonas','BA': 'Bahia','CE': 'Cear\u00e1','DF': 'Distrito Federal','ES': 'Esp\u00edrito Santo','GO': 'Goi\u00e1s','MA': 'Maranh\u00e3o','MT': 'Mato Grosso','MS': 'Mato Grosso do Sul','MG': 'Minas Gerais','PA': 'Par\u00e1','PB': 'Para\u00edba','PR': 'Paran\u00e1','PE': 'Pernambuco','PI': 'Piau\u00ed','RJ': 'Rio de Janeiro','RN': 'Rio Grande do Norte','RS': 'Rio Grande do Sul','RO': 'Rond\u00f4nia','RR': 'Roraima','SC': 'Santa Catarina','SP': 'S\u00e3o Paulo','SE': 'Sergipe','TO': 'Tocantins' }\n\nBrazil = pd.read_csv(file_in_kaggle, sep=\",\", decimal=\".\", thousands=\",\")\nBrazil[['hour']] = Brazil[['hour']].fillna('00:00')\nBrazil['datetime'] = pd.to_datetime(Brazil['date'] + ' ' + Brazil['hour'])\ndel Brazil['hour']\nBrazilLast = Brazil.groupby(\"state\").tail(1)\nBrazil=Brazil.merge(\n    pd.DataFrame.from_dict(ufs, orient='index',columns=['state']).reset_index().rename({'index': 'uf'}, axis=1)\n    , on=['state'], how='left').sort_values(by=['datetime'],ascending=False).reset_index(drop=True)\n\n\nBrazil.info()","ddb5a4ab":"TopEstados=BrazilLast[BrazilLast['cases'] > 0].sort_values(by='cases',ascending=False).reset_index(drop=True)\n\nfig = go.Figure(go.Bar(x=TopEstados[\"state\"], y=TopEstados['cases'],\n                      text=TopEstados['cases'],\n            textposition='outside'))\nfig.update_yaxes(showticklabels=False)\n\nfig.show()","f98e3304":"BrazilLast.groupby(['state']).sum().sort_values(\"cases\",ascending=False).head(5).plot.bar(align='edge',fill=True)","14445bbf":"BrazilLast[~BrazilLast['state'].isin(['S\u00e3o Paulo', 'Minas Gerais'])].groupby(['state']).sum().sort_values(\"cases\",ascending=False).plot.bar()","36232b89":"CasosSuspeitos = BrazilLast[BrazilLast['suspects'] > 0].sort_values(by=['suspects'],ascending=False).reset_index(drop=True)\nCasosConfirmados = BrazilLast[BrazilLast['cases'] > 0].sort_values(by='cases',ascending=False).reset_index(drop=True)\nCasosDescartados = BrazilLast[BrazilLast['refuses'] > 0].sort_values(by='refuses',ascending=False).reset_index(drop=True)\nObitos = BrazilLast[BrazilLast['deaths'] > 0].sort_values(by='deaths',ascending=False).reset_index(drop=True)\n\nchartcol='red'\nfig = []\nfig = make_subplots(rows=2, cols=2, shared_xaxes=True,\n                    specs=[[{},{}],\n                          [{},{}]],\n                    subplot_titles=('Suspects', 'Cases', 'Refuses', 'Deaths'))\n\n\n\nfig.add_trace(go.Bar(x=CasosConfirmados[\"state\"], y=CasosConfirmados['suspects'], \n                     text=CasosConfirmados['suspects'], \n                     textposition='outside'), row=1,col=1)\n\n\nfig.add_trace(go.Bar(x=CasosConfirmados[\"state\"], y=CasosConfirmados['cases'], \n                     text=CasosConfirmados['cases'], \n                     textposition='outside'), row=1,col=2)\n\nfig.add_trace(go.Bar(x=CasosDescartados[\"state\"], y=CasosDescartados['refuses'], \n                     text=CasosDescartados['refuses'], \n                     textposition='outside'), row=2,col=1)\n\nfig.add_trace(go.Bar(x=Obitos[\"state\"], y=Obitos['deaths'], \n                     text=Obitos['deaths'],\n                     textposition='outside'), row=2,col=2)\n\n\n\nfig.update_layout(showlegend=False)","406aa4ee":"### colos legend\ndicColors = {'suspects':'yellow','cases':'red','refuses':'green','deaths':'black'}\n\n\n### methods\ndef PlotState(fig, state, rowN = 1): \n    CasesState = Brazil[Brazil['state'] == state]\n    fig.add_trace(go.Scatter(x=CasesState[\"datetime\"],y=CasesState['suspects'],\n                             mode='lines+markers',\n                             name='Suspects',\n                             line=dict(color=dicColors['suspects'],width=2)),\n                             row=rowN,col=1)\n\n    fig.add_trace(go.Scatter(x=CasesState[\"datetime\"],y=CasesState['cases'],\n                             mode='lines+markers',\n                             name='Cases',\n                             line=dict(color=dicColors['cases'],width=2)),\n                             row=rowN,col=1)\n\n    fig.add_trace(go.Scatter(x=CasesState[\"datetime\"],y=CasesState['refuses'],\n                             mode='lines+markers',\n                             name='Refuses',\n                             line=dict(color=dicColors['refuses'],width=2)),\n                             row=rowN,col=1)\n\n    fig.add_trace(go.Scatter(x=CasesState[\"datetime\"],y=CasesState['deaths'],\n                             mode='lines+markers',\n                             name='Deaths',\n                             line=dict(color=dicColors['deaths'],width=2)),\n                             row=rowN,col=1)\n\ndef PlotGraph(state):\n    if state == 'Sao Paulo':\n        state = 'S\u00e3o Paulo'\n    fig = make_subplots(rows=1, cols=2,shared_xaxes=True,\n                        specs=[[{\"colspan\": 2}, None]],\n                        subplot_titles=(state,''))\n    PlotState(fig, state, 1)\n    fig.update_layout(height=500, showlegend=True)\n    return fig","48a42d91":"interact(PlotGraph, state = widgets.Dropdown(options=ufs, value='S\u00e3o Paulo', description='State'))\n","168fa3cf":"def PlotGraphStatic(uf):\n    if uf == '':\n        df = Brazil\n    else:\n        df = Brazil[Brazil[\"uf\"] == uf]\n    \n    ax = plt.subplots(figsize=(20, 8))\n    \n    sns.lineplot(x='datetime', y='suspects', data=df[df['suspects'] > 0].reset_index(drop=True))\n    sns.lineplot(x='datetime', y='refuses', data=df[df['refuses'] > 0].reset_index(drop=True))\n    sns.lineplot(x='datetime', y='cases', data=df[df['cases'] > 0].reset_index(drop=True))\n    sns.lineplot(x='datetime', y='deaths', data=df[df['deaths'] > 0].reset_index(drop=True))\n\n    plt.legend(labels=[\"Supects\", 'Refuses', 'Cases', 'Deaths'])\n    plt.ylabel('Peoples', fontsize=12)\n    plt.xlabel('Date', fontsize=12)\n    plt.xticks(rotation=45, ha='right')\n    plt.title(uf, fontsize=14);\n    #df[\"state\"].iloc[0]\n    plt.show()","d37f8883":"PlotGraphStatic('MS')","a00f44b4":"PlotGraphStatic('MT')","2f2eba37":"PlotGraphStatic('SP')","3eec1895":"df1 = Brazil.sort_values(by=['state'],ascending=True).reset_index(drop=True)\n\ndfState=pd.DataFrame(np.repeat(df1[\"state\"].unique(), len(df1[\"datetime\"].unique())), columns=['state'])\ndfDate= pd.DataFrame(df1[\"datetime\"].unique(),columns=['datetime']).sort_values(by=['datetime'],ascending=True).reset_index(drop=True)\ndfDate[\"order\"]=dfDate.index\ndfDate=pd.concat([dfDate]*len(ufs)).reset_index(drop=True)\n\ndf2 = pd.concat([dfDate,dfState],axis=1)\ndf2=df2.merge(Brazil, on=['datetime','state'], how='left')\ndf2[\"state2\"]=df2['state'].str.normalize('NFKD').str.encode('ascii', errors='ignore')\ndf2[[\"suspects\", 'refuses', 'cases', 'deaths']]=df2[[\"suspects\", 'refuses', 'cases', 'deaths']].fillna(0)","ce6f6455":"plt.style.use('seaborn-darkgrid')\ng = sns.FacetGrid(df2, col='state2', hue='state2', col_wrap=4)\n \n# Add the line over the area with the plot function\ng.map(plt.plot, 'datetime', 'cases')\n# Fill the area with fill_between\ng.map(plt.fill_between, 'datetime', 'cases', alpha=0.2).set_titles(\"{col_name}\").set_xticklabels(rotation=45)\n\n# Add a title for the whole plo\nplt.subplots_adjust(top=0.92)\n\ng.fig.suptitle('Evolution of confirmed cases.')\nplt.show()","dd42bb90":"import datetime\nnow = datetime.datetime.now()\nprint (\"Updated: \" + now.strftime(\"%Y-%m-%d %H:%M:%S\"))","c0db453b":"# Situation of Brazilian states","f904d9d4":"# Analyzing Coronavirus (Covid-19) data in Brazil\n\n**by Ycaro Afonso**\n","ea25fafc":"## Other states (except 5 more)","1f18431b":"## 5 states with more confirmed cases","422f3ecb":"# States with confirmed cases"}}