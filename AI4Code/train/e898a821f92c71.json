{"cell_type":{"0d16029a":"code","3d5b2526":"code","dbfde04f":"code","a256e378":"code","d15e8ef4":"code","93fd5726":"code","4803a74b":"code","761d93ed":"markdown","d432ef5d":"markdown","7f81d3cc":"markdown","e22c24e0":"markdown","b1568ab0":"markdown","4317dad9":"markdown","e9aa8101":"markdown"},"source":{"0d16029a":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\n#plt.style.use('fivethirtyeight')\nplt.rcParams.update({'font.size': 12})\nplt.rcParams[\"figure.figsize\"] = (7, 7)\nimport seaborn as sns\nimport plotly.express as px\nfrom datetime import date\n\n# read in the data\ntrain = pd.read_csv(\"..\/input\/g-research-crypto-forecasting\/train.csv\")\nasset_details = pd.read_csv(\"..\/input\/g-research-crypto-forecasting\/asset_details.csv\")\ntrain['timestamp'] = pd.to_datetime(train['timestamp'], unit='s')\ntrain = train.set_index('timestamp')\nmapping = dict(asset_details[['Asset_ID', 'Asset_Name']].values)\ntrain[\"Asset_name\"] = train[\"Asset_ID\"].map(mapping)\ncryptocurrencies = asset_details['Asset_Name'].unique()","3d5b2526":"# extract the last day of data\nlast_day = train.loc['2021-09-20 00:00:00':'2021-09-21 00:00:00']\n# create columns of the Close values\nclose_columns = pd.pivot_table(last_day,index='timestamp',columns='Asset_ID',values='Close')","dbfde04f":"import statsmodels.api as sm\nfrom statsmodels.tsa.stattools import grangercausalitytests\n\ngranger_matrix = np.zeros((14, 14), float)\nfor lag in range(1,31):  # look at lags from 1 to 30 minutes\n    for i in range(14):\n        for j in range(14):\n            results = grangercausalitytests(close_columns[[i, j]].pct_change().dropna(), [lag], verbose=False)\n            granger_matrix[i,j] = results[lag][0]['ssr_ftest'][0]\n    print(\"For a lag of\",lag,\"minutes the global maximum value is\",np.amax(granger_matrix))","a256e378":"lag = 1\nfor i in range(14):\n    for j in range(14):\n        results = grangercausalitytests(close_columns[[i, j]].pct_change().dropna(), [lag], verbose=False)\n        granger_matrix[i,j] = results[lag][0]['ssr_ftest'][0]\n\nplt.rcParams[\"figure.figsize\"] = (12, 12)\nsns.heatmap(granger_matrix,cmap='YlOrBr',annot=True, fmt='.1f',);\nplt.yticks(asset_details.Asset_ID.values +0.5, asset_details.Asset_Name.values, rotation='horizontal');\nplt.xticks(asset_details.Asset_ID.values +0.5, asset_details.Asset_Name.values, rotation='vertical');","d15e8ef4":"resutls = grangercausalitytests(close_columns[[8, 6]].pct_change().dropna(), [1])","93fd5726":"IOTA_pct_change = pd.Series(close_columns[8]).pct_change().dropna()\nEthereum_pct_change = pd.Series(close_columns[6]).pct_change().dropna()\n\n# https:\/\/matplotlib.org\/stable\/gallery\/color\/named_colors.html\ncolor_1 = 'blue'\ncolor_2 = 'olive'\ncolor_3 = 'orange'\ncolor_4 = 'crimson'\ncolor_5 = 'limegreen'\ncolor_6 = 'red'\ncolor_7 = 'teal'\ncolor_8 = 'yellowgreen'\n\nfig  = px.line(y=IOTA_pct_change)\nfig.update_traces(line_color=color_2)\n\nfig_2  = px.line(y=Ethereum_pct_change)\nfig_2.update_traces(line_color=color_4)\nfig.add_trace(fig_2.data[0])\n\nfig.update_layout(\n    title=\"IOTA in olive green and Ethereum in crimson\",\n    xaxis_title=\"Time\",\n    yaxis_title=\"% change\",)\nfig.show();","4803a74b":"asset_details","761d93ed":"### Conclusion \nIt looks like *all* of the other 13 cryptocurrencies cause strong changes in the IOTA cryptocurrency (Asset_ID=8) one minute later. \n\nI am not at all sure whether to believe\/trust this conclusion at the moment.\n\n### See also\n\n* [\"*Granger causality Part II: The Movie*\"](https:\/\/www.kaggle.com\/carlmcbrideellis\/granger-causality-part-ii-the-movie)  - where one can find a heatmap of the 1 minute lag that has been animated on a daily basis from the 1st of May 2021 up to the 20th of September 2021.\n\n### Related reading\n\n* [C. W. J. Granger \"*Investigating Causal Relations by Econometric Models and Cross-spectral Methods*\",  Econometrica **Vol. 37** pp. 424-438 (1969)](https:\/\/doi.org\/10.2307\/1912791)\n\n### Appendix\nThe asset details, mapping the `Asset_ID` with the `Asset_Name`","d432ef5d":"### Granger causality testing for 1 day\nIn this short notebook we shall perform the [Granger causality test](https:\/\/en.wikipedia.org\/wiki\/Granger_causality) for each of the 14 cryptocurrencies on the very last day of the dataset associated with the kaggle [G-Research Crypto Forecasting competition](https:\/\/www.kaggle.com\/c\/g-research-crypto-forecasting). The objective of the Granger causality test is to asses whether one time series can be used to forecast another time series. To do this we shall make use of the statsmodels [grangercausalitytests](https:\/\/www.statsmodels.org\/stable\/generated\/statsmodels.tsa.stattools.grangercausalitytests.html) routine.","7f81d3cc":"We can see that the strongest value is seen at a lag of 1 minute. Let us go back and take a closer look at the values for this particular lag","e22c24e0":"Here is where we select the date range to be tested (this can very easily be changed by the interested reader)","b1568ab0":"Let us perform the Granger causality test for each pair of cryptocurrencies for lags of 1 up to 30 minutes, testing whether the time series in the second column (`j`) causes the time series in the first column (`i`). Note that the Granger test requires that the data be [stationary](https:\/\/en.wikipedia.org\/wiki\/Stationary_process), so we actually look at the [percentage changes](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.pct_change.html) in each of these two time series, rather than the absolute values:","4317dad9":"Let us make an interactive plot of the [percentage change](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.pct_change.html) in these two time series (without lag) together","e9aa8101":"We can see that the strongest signal corresponds to Ethereum (Asset_ID=6) seemingly causing changes in IOTA (Asset_ID=8):"}}