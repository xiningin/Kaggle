{"cell_type":{"ed55dd5d":"code","619459ea":"code","83bdb9e1":"code","e9de1ab6":"code","61513cc2":"code","f624a6e2":"code","73075c42":"code","59264e17":"code","3f72b144":"code","dd6012fb":"code","59a264fc":"code","bcb31807":"code","a2d8764c":"code","183839ef":"code","f4e6aa4b":"code","8702b8ae":"code","3b419026":"code","8cdb7514":"code","5fbdba8e":"code","226e2e77":"code","ed94fb4f":"code","b036a9e6":"code","7f24ae19":"markdown","aaca0aab":"markdown","c415d612":"markdown","fd3761de":"markdown","c0218773":"markdown","29247e7e":"markdown","4ec0fbf6":"markdown","bb8f3b7b":"markdown","ca769144":"markdown","12af8f70":"markdown","dea9edbb":"markdown","77045637":"markdown","d334c0b0":"markdown","b8a9ae87":"markdown","3c707296":"markdown","3b3310c0":"markdown","556be0a4":"markdown","c225576c":"markdown","72d62906":"markdown","798e8a64":"markdown","c2846cc3":"markdown"},"source":{"ed55dd5d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","619459ea":"%matplotlib inline","83bdb9e1":"athlete_events = pd.read_csv('..\/input\/athlete_events.csv')\nregions = pd.read_csv('..\/input\/noc_regions.csv')\n# we merge the two data frame into one so that we can extract the region and take a quick look\nathlete_events = pd.merge(athlete_events, regions, on = 'NOC', how = 'left')\nathlete_events.head()","e9de1ab6":"athlete_events.isnull().sum()","61513cc2":"# because we plan to analyze data for summer and winter Olympics separately,\n# it would be better to prepare two dataframes accordingly\nsummer_athlete_events = athlete_events[athlete_events['Season'] == 'Summer']\nwinter_athlete_events = athlete_events[athlete_events['Season'] == 'Winter']","f624a6e2":"tmp_summer = summer_athlete_events.groupby('Year', as_index = False).count()\ntmp_winter = winter_athlete_events.groupby('Year', as_index = False).count()","73075c42":"fig = plt.figure(figsize = (16, 6))\n\nsns.lineplot(x = 'Year', y = 'Name', data = tmp_summer, label = 'Summer Olympics', color = 'r', marker = 'o')\nsns.lineplot(x = 'Year', y = 'Name', data = tmp_winter, label = 'Winter Olympics', color = 'b', marker = 'o')\nplt.xlabel('Year')\nplt.xticks(athlete_events['Year'].unique(), rotation = 60)\n\nplt.ylabel('Number of Athletes')\nplt.title(\"Number of Athletes over years\",color=\"b\")\nplt.grid(True,alpha=.2)\n\n# remove chart junk\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)\nplt.gca().legend()\nplt.gca().grid(False)\n\nplt.show()","59264e17":"summer_data = (summer_athlete_events[['Year', 'NOC']].drop_duplicates(['Year', 'NOC']))['Year'].value_counts()\nwinter_data = (winter_athlete_events[['Year', 'NOC']].drop_duplicates(['Year', 'NOC']))['Year'].value_counts()","3f72b144":"plt.figure(figsize = (16, 6))\nsns.lineplot(x = summer_data.index.values, y = summer_data.values, color = 'r', label = 'Summer Olympics', marker = 'o')\nsns.lineplot(x = winter_data.index.values, y = winter_data.values, color = 'b', label = 'Winter Olympics', marker = 'o')\nplt.ylabel('Number of countries')\nplt.title('Number of countries participating in the Olympics')\n\n# remove chart junk\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)","dd6012fb":"summer_mean_age = summer_athlete_events[pd.notnull(summer_athlete_events['Age'])]\nwinter_mean_age = winter_athlete_events[pd.notnull(winter_athlete_events['Age'])]","59a264fc":"fig = plt.figure(figsize = (16, 6))\nsns.lineplot(x = 'Year', y = 'Age', data = summer_mean_age, label = 'Summer Olympics', color = 'red', marker = 'o')\nsns.lineplot(x = 'Year', y = 'Age', data = winter_mean_age, label = 'Winter Olympics', color = 'blue', marker = 'o')\n\nplt.title('Average Age by Year')\nplt.ylabel('Average Age')\n\n# remove chart junk\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)","bcb31807":"summer_age = summer_athlete_events[pd.notnull(summer_athlete_events['Age'])].groupby('Sport', as_index = False)['Age'].mean()\nwinter_age = winter_athlete_events[pd.notnull(winter_athlete_events['Age'])].groupby('Sport', as_index = False)['Age'].mean()\nsummer_oldest = summer_athlete_events[summer_athlete_events['Age'] == summer_athlete_events['Age'].max()]\nsummer_youngest = summer_athlete_events[summer_athlete_events['Age'] == summer_athlete_events['Age'].min()]\nwinter_oldest = winter_athlete_events[winter_athlete_events['Age'] == winter_athlete_events['Age'].max()]\nwinter_youngest = winter_athlete_events[winter_athlete_events['Age'] == winter_athlete_events['Age'].min()]\n\nprint('In the Summer Olympics:')\nprint('-',summer_age.max()['Sport'], 'is the sport with the heightest average age with', summer_age.max()['Age'])\nprint('-',summer_age.min()['Sport'], 'is the sport with the lowest average age with', summer_age.min()['Age'])\nprint('- The oldest athelete is', summer_oldest['Name'].iloc[0], '(',summer_oldest['Age'].iloc[0],')', 'of', summer_oldest['Sport'].iloc[0], 'from', summer_oldest['Team'].iloc[0], 'in', summer_oldest['Games'].iloc[0])\nprint('- The youngest athelete is', summer_youngest['Name'].iloc[0], '(',summer_youngest['Age'].iloc[0],')', 'of', summer_youngest['Sport'].iloc[0], 'from', summer_youngest['Team'].iloc[0], 'in', summer_youngest['Games'].iloc[0])\n\nprint('')\n\nprint('In the Winter Olympics:')\nprint('-',winter_age.max()['Sport'], 'is the sport with the heightest average age with', winter_age.max()['Age'])\nprint('-',winter_age.min()['Sport'], 'is the sport with the lowest average age with', winter_age.min()['Age'])\nprint('- The oldest athelete is', winter_oldest['Name'].iloc[0], '(',winter_oldest['Age'].iloc[0],')', 'of', winter_oldest['Sport'].iloc[0], 'from', winter_oldest['Team'].iloc[0], 'in', winter_oldest['Games'].iloc[0])\nprint('- The youngest athelete is', winter_youngest['Name'].iloc[0], '(',winter_youngest['Age'].iloc[0],')', 'of', winter_youngest['Sport'].iloc[0], 'from', winter_youngest['Team'].iloc[0], 'in', winter_youngest['Games'].iloc[0])","a2d8764c":"bins_list = [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85]\n\nplt.figure(figsize = (16, 6))\n\n# Summer Olympics\nplt.subplot(121)\nsns.distplot(summer_athlete_events['Age'].dropna(), bins = bins_list)\nplt.xticks(bins_list)\nplt.xlabel(\"Age\")\nplt.title(\"Age distribution of Summer Olympics Atheletes\")\n\n# remove chart junk\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)\n\n# Winter Olympics\n\nplt.subplot(122)\nsns.distplot(winter_athlete_events['Age'].dropna(), bins = bins_list)\nplt.xticks(bins_list)\nplt.xlabel(\"Age\")\nplt.title(\"Age distribution of Winter Olympics Atheletes\")\n\n# remove chart junk\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)","183839ef":"summer_gender = summer_athlete_events.groupby('Sex')\nwinter_gender = winter_athlete_events.groupby('Sex')","f4e6aa4b":"plt.figure(figsize = (10, 4.5))\n\nplt.subplot(121)\nsummer_gender[\"ID\"].nunique().plot.pie(autopct = \"%1.0f%%\",wedgeprops = {\"linewidth\":2,\"edgecolor\":\"w\"},\n                                              explode = [0,.01],shadow = True , colors = [\"royalblue\",\"lawngreen\"]) \nplt.ylabel(\"\")\ncirc = plt.Circle((0,0),.7,color = \"white\")\nplt.gca().add_artist(circ)\nplt.title(\"SUMMER OLYMPICS\")\n\nplt.subplot(122)\nwinter_gender[\"ID\"].nunique().plot.pie(autopct = \"%1.0f%%\",wedgeprops = {\"linewidth\":2,\"edgecolor\":\"w\"},\n                                              explode = [0,.01],shadow = True , colors = [\"royalblue\",\"lawngreen\"]) \nplt.ylabel(\"\")\ncirc = plt.Circle((0,0),.7,color = \"white\")\nplt.gca().add_artist(circ)\nplt.title(\"WINTER OLYMPICS\")","8702b8ae":"summer_athlete_height = summer_athlete_events[pd.notnull(summer_athlete_events['Height'])]\nsummer_athlete_height.drop_duplicates(subset=['Name', 'NOC', 'Year'], keep='first', inplace=True)\n\nwinter_athlete_height = winter_athlete_events[pd.notnull(winter_athlete_events['Height'])]\nwinter_athlete_height.drop_duplicates(subset=['Name', 'NOC', 'Year'], keep='first', inplace=True)","3b419026":"plt.figure(figsize = (16, 5))\nbins_list = [110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240]\n\nplt.subplot(121)\nplt.xticks(bins_list)\nsns.distplot(summer_athlete_height['Height'], bins = bins_list)\nplt.title('Height Distribution of Summer Olympics atheletes')\nplt.xlabel('cm')\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)\n\nplt.subplot(122)\nplt.xticks(bins_list)\nsns.distplot(winter_athlete_height['Height'], bins = bins_list)\nplt.title('Height Distribution of Winter Olympics atheletes')\nplt.xlabel('cm')\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)","8cdb7514":"summer_athlete_weight = summer_athlete_events[pd.notnull(summer_athlete_events['Weight'])]\nsummer_athlete_weight.drop_duplicates(subset=['Name', 'NOC', 'Year'], keep='first', inplace=True)\n\nwinter_athlete_weight = winter_athlete_events[pd.notnull(winter_athlete_events['Weight'])]\nwinter_athlete_weight.drop_duplicates(subset=['Name', 'NOC', 'Year'], keep='first', inplace=True)","5fbdba8e":"plt.figure(figsize = (16, 5))\nbins_list = [20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160]\n\nplt.subplot(121)\nplt.xticks(bins_list)\nsns.distplot(summer_athlete_weight['Weight'], bins = bins_list)\nplt.title('Weight Distribution of Summer Olympics atheletes')\nplt.xlabel('kg')\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)\n\nplt.subplot(122)\nplt.xticks(bins_list)\nsns.distplot(winter_athlete_weight['Weight'], bins = bins_list)\nplt.title('Weight Distribution of Winter Olympics atheletes')\nplt.xlabel('kg')\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)","226e2e77":"summer_medals = summer_athlete_events[pd.notnull(summer_athlete_events['Medal'])]\nwinter_medals = winter_athlete_events[pd.notnull(winter_athlete_events['Medal'])]","ed94fb4f":"top_n_countries = pd.value_counts(summer_medals['region']).iloc[:10].index\ntmp_country_medals = summer_medals[summer_medals['region'].isin(top_n_countries)]\ntmp_country_medals\ncountry_medals = pd.DataFrame(columns = ['region', 'Gold', 'Silver', 'Bronze', 'Total'])\nfor i in top_n_countries:\n    tmp = summer_medals[summer_medals['region'] == i]\n    medals = pd.value_counts(tmp['Medal'])\n    country_medals = country_medals.append({'region': i, 'Gold': medals['Gold'], 'Silver': medals['Silver'], \n                                            'Bronze': medals['Bronze'], 'Total': medals['Gold'] + medals['Silver'] + medals['Bronze']\n                                           },ignore_index=True)\n    country_medals.sort_values('Total', ascending = False, inplace = True)\n\nx = country_medals['region']    \n    \nplt.figure(figsize = (9, 6))\n\ngold = plt.bar(x, country_medals['Gold'], color = 'yellow', label = 'Gold Medal')\nsilver = plt.bar(x, country_medals['Silver'], bottom = country_medals['Gold'], color = 'silver', label = 'Silver Medal')\nbronze = plt.bar(x, country_medals['Bronze'], bottom = country_medals['Gold'] + country_medals['Silver'], color = 'orange', label = 'Bronze Medal')\nplt.xticks(rotation = 60)\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\nplt.legend()\nplt.xlabel('Country')\nplt.title('Medal distribution by country in the Summer Olympics')","b036a9e6":"top_n_countries = pd.value_counts(winter_medals['region']).iloc[:10].index\ntmp_country_medals = winter_medals[winter_medals['region'].isin(top_n_countries)]\ntmp_country_medals\ncountry_medals = pd.DataFrame(columns = ['region', 'Gold', 'Silver', 'Bronze', 'Total'])\nfor i in top_n_countries:\n    tmp = winter_medals[winter_medals['region'] == i]\n    medals = pd.value_counts(tmp['Medal'])\n    country_medals = country_medals.append({'region': i, 'Gold': medals['Gold'], 'Silver': medals['Silver'], \n                                            'Bronze': medals['Bronze'], 'Total': medals['Gold'] + medals['Silver'] + medals['Bronze']\n                                           },ignore_index=True)\n    country_medals.sort_values('Total', ascending = False, inplace = True)\n\nx = country_medals['region']    \n    \nplt.figure(figsize = (9, 6))\n\ngold = plt.bar(x, country_medals['Gold'], color = 'yellow', label = 'Gold Medal')\nsilver = plt.bar(x, country_medals['Silver'], bottom = country_medals['Gold'], color = 'silver', label = 'Silver Medal')\nbronze = plt.bar(x, country_medals['Bronze'], bottom = country_medals['Gold'] + country_medals['Silver'], color = 'orange', label = 'Bronze Medal')\n\nplt.xticks(rotation = 60)\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\nplt.legend()\nplt.xlabel('Country')\nplt.title('Medal distribution by country in the Winter Olympics')","7f24ae19":"The two Olympics share the same age buckets with most athletes in the 20-30 range.","aaca0aab":"From the above plot, we can draw several interesting points:\n\n* Starting from 1924, the Winter Olympics is organized. At the beginning (1924-1992), the two Olympics were taken place in the same year. It was changed in 1994.\n\n* During the analyzed period, there were two times when no Olympics were organized. In both cases, the reason was the war (for 1916, World War I and for 1940 and 1944, World War II)\n\n* 1906 was an exception to the \u201cevery 4 years\u201d rule as it was an experiment to hold the intercalculated games in Greece all the time and move the Olympics around. However, Greece was not able to hold the 1910 games and the 4-year rule was standardized.\n\n* There were several years when the attendance dipped. The year and the reasons are listed below:\n\n  * 1932: The Olympic occured in the midst of the Great Depression and in a remote location, such that many athletes were unable to afford the trip to the Olympics.\n  * 1956: Several boycotts: Iraq, Egypt, and Lebanon did not participate due to the involvement of France and Britain in the Suez Crisis; the Netherlands, Spain, Switzerland, and Cambodia did not participate due to the Soviet Union\u2019s beatdown of the Hungarian Revolution; and China did not participate in protest of the IOC\u2019s recognition of Taiwan.\n  * 1976: 25 nations, mostly African, boycotted the Games in reponse to apartheid policies in South Africa. Attendance at the 1980 Winter Olympics in Lake Placid wasn\u2019t affected much since African nations have a limited presence at the Winter Games.\n  * 1980: 66 nations, including the U.S., boycotted the Games in response to the Soviet invasion of Afghanistan.","c415d612":"# 7. Physical characteristics:\n## 7.1. Height Distribution","fd3761de":"## 5. Age analysis\n### 5.1. Average age by Year","c0218773":"Check if there are missing values in any column","29247e7e":"### 5.2. Who are the youngest and oldest atheletes?","4ec0fbf6":"# 8. Medal distribution by country","bb8f3b7b":"# Olympic history: a thorough analysis 1896 - 2016\n## 1. Introduction\nThe \u2018modern Olympics\u2019 comprises all the Games from Athens 1986 to Rio 2016. The Olympics is more than just a quadrennial multi-sport world championship. It is a lense through which to understand global history, including shifting geopolitical power dynamics, women\u2019s empowerment, and the evolving values of society.\n\nIn this kernel, my goal is to shed light on major patterns in Olympic history. For example:\n\n* How many athletes, sports, and nations are there?\n* Where do most athletes come from?\n* Who wins medals?\n* What are the characteristic of the athletes (e.g., gender and physical size)?","ca769144":"## 2. Load and Prepare data","12af8f70":"Overall, there have been more male atheletes in both Summer and Winter Olympics","dea9edbb":"## 3. Number of Athletes by Year","77045637":"The result above shows that we have NaN value in 4 columns: Age, Height, Weight and Medal","d334c0b0":"In the Winter Olympics, however, the USA does not dominate but Russia. Germany and Canada also hold a high position as of the USA","b8a9ae87":"So far, in the Summer Olympic, the USA has won the most medals (both in total and gold) followed by Russia and the UK.","3c707296":"As seen, the average age of atheletes were much heigher in the period of 1896 - 1950s. In recent years, the average age seems to go up but still not as height as in the period of 1896 - 1950s.\n\nIn addition, the age range was smaller than before 1960","3b3310c0":"## 6. Gender distribution","556be0a4":"## 7.2. Weight distribution","c225576c":"Interestingly, the oldest Olympic participants was very old (97 years old) at the time he\/she attended the Games. I always think that Olympics games require a lot of stamina because the atheletes need to perform hard tasks or compete against each other. Hence, they should be young (well, except for chess but they players are not that old). However, it is understandable when we look at the Sport type: Art Competitions. It is divided into five categories: architecture, literature, music, painting, and sculpture. Age does not matter to these fields.","72d62906":"In general, the number of countries participating in the Olympics has increased over time. The number went down significantly at 1980. The reasons were specified above.","798e8a64":"### 5.3. Age distribution","c2846cc3":"## 4. Countries participation at the Olympic Games"}}