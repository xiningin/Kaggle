{"cell_type":{"76c7454b":"code","b3f33f5b":"code","0bb3a828":"code","a6145bbb":"code","cd932d10":"code","d11aaef9":"code","7f0a610b":"code","fd6ea1df":"code","3155de19":"code","8c46bd25":"code","70c33604":"markdown","c385206b":"markdown","dd7c4ba3":"markdown","49889364":"markdown","79e5f50a":"markdown","555d941e":"markdown","acfa39e8":"markdown","176ca4bc":"markdown","aee97050":"markdown"},"source":{"76c7454b":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Configuration\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\npd.set_option('display.max_columns', None)\n#\u00a0N\u00fcmerik De\u011ferlerin D\u00fczg\u00fcn G\u00f6sterimi\npd.options.display.float_format = '{:.2f}'.format","b3f33f5b":"df = pd.read_csv(\"..\/input\/home-data-for-ml-course\/train.csv\")\ndf.head()","0bb3a828":"df.shape","a6145bbb":"def cat_summary(data, cat_length, plot = False):\n\n    print(\"# How many classes are there in variables?\")\n    print(\"----------------------------------------------------------------------------------\")\n    \n    cat_names_less = [col for col in data.columns if len(data[col].unique()) < cat_length]\n    cat_names_more = [col for col in data.columns if len(data[col].unique()) >= cat_length]\n    print('Number of Classes <', str(cat_length) + \":\", cat_names_less)\n    print('Number of Classes >=', str(cat_length) + \":\", cat_names_more, \"\\n\\n\")\n    \n    print(\"# Which variables are object variables that number of classes is more than\", str(cat_length) + \"?\")\n    print(\"----------------------------------------------------------------------------------\")\n    object_variables = [col for col in cat_names_more if data[col].dtype == \"O\"]\n    more = [col for col in object_variables if len(data[col].unique()) >= cat_length]\n    print('Number of Classes >', str(cat_length) + \":\", more, \"\\n\\n\")\n    \n    print(\"# Number of Unique Classes\")\n    print(\"----------------------------------------------------------------------------------\")\n    for  i in data.columns:\n        print(i, \"(\",str(data[i].dtypes),\"):\",data[i].nunique())\n    print(\"\\n\\n\")\n    \n    \n    if plot:\n        print(\"# Stats & Visualization\")\n    else:\n        print(\"# Stats\")\n    print(\"-----------------------------------------------------------------------------------\")\n    \n    for col in cat_names_less:\n        print(pd.DataFrame({col: data[col].value_counts(),\n                           \"Ratio\": 100 * data[col].value_counts()\/ len (data)}), end = \"\\n\\n\\n\")\n        \n        if plot:\n            sns.countplot(x = col, data = data)\n            plt.show()\n        print(\"#------------------------------------------------------------------------------ \\n\")\n          \n    \n\n\n    \ncat_summary(df, cat_length = 10, plot = True)","cd932d10":"def num_plot(data, cat_length = 10, remove = [\"Id\"], hist_bins = 10, figsize = (20,4)):\n    \n    num_cols = [col for col in data.columns if df[col].dtypes != \"O\" \n                and len(data[col].unique()) >= cat_length]\n    \n    if len(remove) > 0:\n        num_cols = list(set(num_cols).difference(remove))\n        \n    print(\"# Histogram & Boxplot \\n\")    \n    for i in num_cols:\n        fig, axes = plt.subplots(1, 3, figsize = figsize)\n        data.hist(str(i), bins = hist_bins, ax=axes[0])\n        data.boxplot(str(i),  ax=axes[1], vert=False);\n        try: \n            sns.kdeplot(np.array(data[str(i)]))\n        except: ValueError\n        \n        axes[1].set_yticklabels([])\n        axes[1].set_yticks([])\n        axes[0].set_title(i + \" | Histogram\")\n        axes[1].set_title(i + \" | Boxplot\")\n        axes[2].set_title(i + \" | Density\")\n        plt.show()\n        \n        \nnum_plot(df, cat_length = 10, remove = [\"Id\"], hist_bins = 10, figsize = (20,4))","d11aaef9":"def relationship(data, cat_length = 10, target = \"SalePrice\",remove = [\"Id\", \"SalePrice\"], figsize = (15,4)):\n    \n    num_cols = [col for col in data.columns if data[col].dtypes != \"O\" \n                and len(data[col].unique()) >= cat_length]\n\n    if len(remove) > 0:\n        num_cols = list(set(num_cols).difference(remove + [target]))\n    \n    for i in num_cols:\n        \n        correlation = data[[target, i]].corr().loc[target][1]\n        \n        plt.figure()\n        sns.scatterplot(x=i, y=target, data=data)\n        plt.title(\"Correlation: \" + str(correlation)[:5])\n        plt.show();\n        \n        \nrelationship(df, cat_length = 10, target = \"SalePrice\",remove = [\"Id\"], figsize = (15,4))","7f0a610b":"def outlier_detection(data, analysis_type = \"detect\", cat_length = 10, remove = [\"PassengerId\"], plot = False, method = \"nothing\"):\n    num_names = [col for col in df.columns if len(data[col].unique()) > 10\n             and df[col].dtypes != 'O']\n    if len(remove) > 0:\n        num_names = list(set(num_names).difference(remove))\n        \n    # Outlier Threshold belirlenir\n    def outlier_thresholds(dataframe, variable):\n        quartile1 = dataframe[variable].quantile(0.25)\n        quartile3 = dataframe[variable].quantile(0.75)\n        interquantile_range = quartile3 - quartile1\n        up_limit = quartile3 + 1.5 * interquantile_range\n        low_limit = quartile1 - 1.5 * interquantile_range\n        return low_limit, up_limit \n    \n    # Remove Outliers\n    def remove_outliers(dataframe, variable):\n        low_limit, up_limit = outlier_thresholds(dataframe, variable)\n        df_without_outliers = dataframe[~((dataframe[variable] < low_limit) | (dataframe[variable] > up_limit))]\n        return df_without_outliers\n    # Replace with Thresholds\n    def replace_with_thresholds(dataframe, variable):\n        low_limit, up_limit = outlier_thresholds(dataframe, variable)\n        dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n        dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit\n    \n    \n    if analysis_type == \"detect\":\n        \n        variable_names = []\n        lowerUpper = []\n        print(\"# How many outlier values are there?\")\n        print(\"--------------------------------------------------------------------\")\n        for col in num_names:\n            low_limit, up_limit = outlier_thresholds(data, col)\n        \n            lowerUpper.append((low_limit, up_limit))    \n        \n            if data[(data[col] > up_limit) | (data[col] < low_limit)].any(axis=None):\n                number_of_outliers = data[(data[col] > up_limit) | (data[col] < low_limit)].shape[0]\n                variable_names.append(col)\n            \n                print(col, \":\", number_of_outliers)\n            \n            \n        print(\"\\n\")\n        print(\"Outlier Variables:\", variable_names, \"\\n\\n\")\n    \n        print(\"# Lower & Upper Thresholds (IQR)\")\n        print(\"----------------------------------------------------------------------\")\n        print(pd.DataFrame({\"Variable\":num_names, \"Lower, Upper\":lowerUpper}), \"\\n\\n\")\n    \n        if plot:\n            print(\"# Boxplot\")\n            print(\"------------------------------------------------------------------\")\n            for col in num_names:\n                plt.figure(figsize = (15,4))\n                sns.boxplot(x=data[col])\n                plt.title(col + \" Boxplot\")\n                plt.show()\n            \n            \n    if analysis_type == \"analyze\":  \n        if method == \"remove\":\n            for col in num_names:\n                data = remove_outliers(data, col)           \n        elif method == \"replace\":\n            for col in num_names:\n                replace_with_thresholds(data,col)\n    \n        return data\n       \n    \n        \noutlier_detection(df, analysis_type = \"detect\", cat_length = 10, remove = [\"Id\"], plot = True)","fd6ea1df":"# Remove\noutlier_detection(df, analysis_type = \"analyze\", method = \"remove\",\n                  cat_length = 10, remove = [\"Id\"], plot = False).shape","3155de19":"# Replace\noutlier_detection(df, analysis_type = \"analyze\", method = \"replace\",\n                  cat_length = 10, remove = [\"Id\"], plot = False).shape","8c46bd25":"def quick_missing_imp(data, num_method = \"mean\", cat_length = 10):\n    variables_with_na = [col for col in data.columns if data[col].isnull().sum() > 0]\n    \n    print(\"# BEFORE\")\n    print(data[variables_with_na].isnull().sum(), \"\\n\\n\")\n    \n    data = data.apply(lambda x: x.fillna(x.mode()[0]) if (x.dtype == \"O\" and len(x.unique()) <= cat_length) else x, axis=0)\n        \n    if num_method == \"mean\":\n        data = data.apply(lambda x: x.fillna(x.mean()) if x.dtype != \"O\" else x, axis=0)\n    elif num_method == \"median\":\n        data = data.apply(lambda x: x.fillna(x.median()) if x.dtype != \"O\" else x, axis=0)\n       \n    print(\"# AFTER \\n Imputation method is '\" + num_method.upper() + \"' for numeric variables! \\n\")\n    print(data[variables_with_na].isnull().sum(), \"\\n\\n\")\n        \n    return data\n        \nimputed = quick_missing_imp(df, num_method = \"mean\", cat_length = 10)\nimputed.head(3)","70c33604":"<a id='sum1'><\/a>\n<h1 style=\"color:darkslategray\" >3. Summary Stats: Categorical Variables<\/h1> ","c385206b":"<a id='libraries'><\/a>\n<h1 style=\"color:darkslategray\" >1. Packages<\/h1> ","dd7c4ba3":"<a id='load'><\/a>\n<h1 style=\"color:darkslategray\" >2. Data<\/h1> ","49889364":"<a id='missing'><\/a>\n<h1 style=\"color:darkslategray\" >7. Missing Values<\/h1> ","79e5f50a":"<a id='notebooks'><\/a>\n<h1 style=\"color:darkslategray\" >8. My Notebooks<\/h1> \n\n\n<div class=\"row\">\n  <div class=\"col-sm-3\">\n    <div class=\"card\">\n      <div class=\"card-body\" style=\"width: 18rem;\">\n        <h5 class=\"card-title\">Marvel Universe: Civil War<\/h5>\n          <img src=\"https:\/\/i.pinimg.com\/originals\/5d\/02\/9a\/5d029aa478d79c8e7bcc99d020bad47b.jpg\" class=\"card-img-top\" alt=\"...\">\n        <hr>\n        <a href=\"https:\/\/www.kaggle.com\/ekrembayar\/marvel-universe-civil-war\" class=\"btn btn-primary\" style=\"color:white;\">Go to Notebook<\/a>\n      <\/div>\n    <\/div>\n  <\/div>\n  <div class=\"col-sm-3\">\n    <div class=\"card\">\n      <div class=\"card-body\" style=\"width: 18rem;\">\n        <h5 class=\"card-title\">THE LAST DANCE<\/h5>\n          <img src=\"https:\/\/www.kolpaper.com\/wp-content\/uploads\/2020\/05\/The-Last-Dance-Wallpaper-2.jpg\" class=\"card-img-top\" alt=\"...\">\n        <hr>\n        <a href=\"https:\/\/www.kaggle.com\/ekrembayar\/the-last-dance-data-visualization\" class=\"btn btn-primary\" style=\"color:white;\">Go to Notebook<\/a>\n      <\/div>\n    <\/div>\n  <\/div>\n  <div class=\"col-sm-3\">\n    <div class=\"card\">\n      <div class=\"card-body\" style=\"width: 18rem;\">\n        <h5 class=\"card-title\">FBI Data Cleaning<\/h5>\n          <img src=\"http:\/\/idora.gazetevatan.com\/vatanmediafile\/Haber598x362\/2020\/07\/10\/fbi-sosyal-medya-fenomenini-kacirdi--4618794.Jpeg\" class=\"card-img-top\" alt=\"...\">\n        <hr>\n        <a href=\"https:\/\/www.kaggle.com\/ekrembayar\/hadley-wickham-s-tidy-principles-fbi-data-cleaning\" class=\"btn btn-primary\" style=\"color:white;\">Go to Notebook<\/a>\n      <\/div>\n    <\/div>\n  <\/div>\n  <div class=\"col-sm-3\">\n    <div class=\"card\">\n      <div class=\"card-body\" style=\"width: 18rem;\">\n        <h5 class=\"card-title\">Chess EDA with R<\/h5>\n          <img src=\"https:\/\/thebridge.in\/wp-content\/uploads\/2020\/03\/Chess-Image-Hans-India-1280x720.jpg\" class=\"card-img-top\" alt=\"...\">\n        <hr>\n        <a href=\"https:\/\/www.kaggle.com\/ekrembayar\/chess-eda-with-r\" class=\"btn btn-primary\" style=\"color:white;\">Go to Notebook<\/a>\n      <\/div>\n    <\/div>\n  <\/div>\n    \n    ","555d941e":"<a id='sum2'><\/a>\n<h1 style=\"color:darkslategray\" >4. Histogram & Boxplot & Density<\/h1> ","acfa39e8":"<center> <h1 style=\"background-color:darkslategray; color:white\" >Quick Data Exploration & Reporting & Automation<\/h1> \n\n<center><img\nsrc=\"https:\/\/www.finereport.com\/en\/wp-content\/uploads\/2019\/11\/data-reporting.png\" style=\"width:70%;height:40%;\">\n<\/center>\n    \n<br>    \n    \n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n  <h3 class=\"list-group-item list-group-item-action active\" style=\"background-color:darkslategray; color:white\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Notebook Content!<\/h3>  \n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#libraries\" role=\"tab\" aria-controls=\"profile\" style=\"color:darkslategray\">Import Libraries<span class=\"badge badge-primary badge-pill\" style=\"background-color:darkslategray; color:white\">1<\/span><\/a>\n  <a id=\"section2\" class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#load\" role=\"tab\" aria-controls=\"messages\" style=\"color:darkslategray\">Load Data<span class=\"badge badge-primary badge-pill\" style=\"background-color:darkslategray; color:white\">2<\/span><\/a>\n  <a class=\"list-group-item list-group-item-action\"  data-toggle=\"list\" href=\"#sum1\" role=\"tab\" aria-controls=\"settings\" style=\"color:darkslategray\">Summary Stats: Categorical Variables<span class=\"badge badge-primary badge-pill\" style=\"background-color:darkslategray; color:white\">3<\/span><\/a>\n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#sum2\" role=\"tab\" aria-controls=\"settings\" style=\"color:darkslategray\">Histogram & Boxplot & Density<span class=\"badge badge-primary badge-pill\" style=\"background-color:darkslategray; color:white\">4<\/span><\/a> \n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#rel\" role=\"tab\" aria-controls=\"settings\" style=\"color:darkslategray\">Relationship with Target (SalePrice) Variables<span class=\"badge badge-primary badge-pill\" style=\"background-color:darkslategray; color:white\">5<\/span><\/a> \n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#outlier\" role=\"tab\" aria-controls=\"settings\" style=\"color:darkslategray\">Outlier Detection & Imputation<span class=\"badge badge-primary badge-pill\" style=\"background-color:darkslategray; color:white\">6<\/span><\/a> \n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#missing\" role=\"tab\" aria-controls=\"settings\" style=\"color:darkslategray\">Missing Values<span class=\"badge badge-primary badge-pill\" style=\"background-color:darkslategray; color:white\">7<\/span><\/a> \n    <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#notebooks\" role=\"tab\" aria-controls=\"settings\" style=\"color:darkslategray\">My Notebooks<span class=\"badge badge-primary badge-pill\" style=\"background-color:darkslategray; color:white\">8<\/span><\/a>     ","176ca4bc":"<a id='outlier'><\/a>\n<h1 style=\"color:darkslategray\" >6. Outlier Detection & Imputation<\/h1> ","aee97050":"<a id='rel'><\/a>\n<h1 style=\"color:darkslategray\" >5. Relationship with Target (SalePrice) Variable<\/h1> "}}