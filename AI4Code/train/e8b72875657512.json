{"cell_type":{"4576b5b6":"code","70ade3a0":"code","89f45680":"code","a0585c0a":"code","d479cb09":"code","9cd4e678":"code","20cc77e1":"code","e1cb247d":"code","06284e6f":"code","2efb2c92":"code","9b0b50de":"code","1c741e48":"code","49e74dbc":"code","63940156":"code","28a67b34":"code","705d1eac":"code","7d46b774":"code","e16423e7":"code","6bcc2ffc":"code","2f8510c8":"markdown","7a865d45":"markdown","593aa5dc":"markdown","c98747f8":"markdown","61f6928b":"markdown","9cab09fc":"markdown","e91adbb2":"markdown","34a205b6":"markdown","11699946":"markdown","159f122e":"markdown"},"source":{"4576b5b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","70ade3a0":"df = pd.read_csv('\/kaggle\/input\/movies\/movies.csv')","89f45680":"df.head()","a0585c0a":"df.columns","d479cb09":"df.shape","9cd4e678":"print('Percentage of missing values:')\nfor col in df.columns:\n    print(f'{col}: {np.mean(df[col].isnull()):.2f}%')","20cc77e1":"df.dtypes","e1cb247d":"df.head()","06284e6f":"df.sort_values(by='gross', ascending=False).head()","2efb2c92":"plt.scatter(df.budget, df.gross)\nplt.title('Budget vs Gross Earnings')\nplt.xlabel('Gross Earnings')\nplt.ylabel('Budget Earnings')","9b0b50de":"sns.regplot(x='budget', y='gross', data=df, line_kws={'color':'red'})","1c741e48":"df.corr()","49e74dbc":"plt.figure(figsize=(12,6))\nsns.heatmap(df.corr(), annot=True, fmt='.2f')\nplt.title('Correlation Matrix')\nplt.xlabel('Movies features')\nplt.ylabel('Movies features')","63940156":"df_numerized = df","28a67b34":"for col in df_numerized.columns:\n    if(df_numerized[col].dtype == 'object'):\n        df_numerized[col] = df_numerized[col].astype('category')\n        df_numerized[col] = df_numerized[col].cat.codes","705d1eac":"df_numerized.head()","7d46b774":"plt.figure(figsize=(14,7))\nsns.heatmap(df_numerized.corr(), annot=True, fmt='.2f')\nplt.title('Correlation Matrix')\nplt.xlabel('Movies features')\nplt.ylabel('Movies features')","e16423e7":"df_numerized_cors = df_numerized.corr()['gross']\ndf_numerized_cors","6bcc2ffc":"df_numerized_cors[(df_numerized_cors>0.5) & (df_numerized_cors.index != 'gross')]\\\n.sort_values(ascending=False)","2f8510c8":"### Scatter plot budget vs gross","7a865d45":"### Lets look at the data","593aa5dc":"### Correlation","c98747f8":"### Read CSV","61f6928b":"### High correlation for Gross Earnings (>0.5)","9cab09fc":"### Convert categorical columns to integers","e91adbb2":"### Top 5 by gross","34a205b6":"### Scatter plot using Seaborn","11699946":"# Let's find what the Movie Gross Earnings correlates with","159f122e":"# Recap: Max correlation between Gross and Budget (0.74) and Votes (63%)"}}