{"cell_type":{"6c99696a":"code","6bedd5df":"code","91edc501":"code","859eeb00":"code","f243d5e6":"code","b5a33cb4":"code","bccf43d3":"code","5961d3d1":"code","7b721f92":"code","2892c18a":"code","8e5318d2":"code","0c7025bd":"code","702ba7f3":"code","091e1e9a":"code","12cebf56":"code","9f604726":"code","3e1c40c5":"code","73a3d8f9":"code","2a4eb79b":"code","f35911ba":"code","93e95537":"code","d21b8a8e":"code","53e626cc":"code","c84d5c2f":"code","ec9a5975":"code","2915e1ac":"code","d2e749be":"code","4f025492":"code","bbe2e35f":"code","94023a65":"markdown","7ef98c55":"markdown","7e5154b6":"markdown"},"source":{"6c99696a":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport seaborn as sns","6bedd5df":"df = pd.read_csv('..\/input\/credit-card-customer-data\/Credit Card Customer Data.csv')\ndf.head()","91edc501":"df.info()","859eeb00":"df.columns","f243d5e6":"plt.figure(figsize=(12,6),dpi = 200)\nsns.histplot(data = df , x ='Total_visits_bank',bins=30 ,kde = True )","b5a33cb4":"plt.figure(figsize=(6,4),dpi = 200)\nsns.barplot(data =df , x = 'Total_Credit_Cards' , y='Total_visits_online')","bccf43d3":"plt.figure(figsize=(6,4),dpi = 200)\nsns.barplot(data =df , x = 'Total_Credit_Cards' , y='Total_calls_made')","5961d3d1":"plt.figure(figsize=(6,4),dpi = 200)\nsns.histplot(data = df , x = 'Total_Credit_Cards' , y ='Avg_Credit_Limit')","7b721f92":"plt.figure(figsize=(6,4),dpi = 200)\nsns.countplot(data = df , x = 'Total_Credit_Cards')","2892c18a":"plt.figure(figsize=(6,4),dpi = 200)\nsns.heatmap(df.corr(),annot = True)","8e5318d2":"df[['Total_visits_online','Total_calls_made','Total_visits_bank']].describe().transpose()","0c7025bd":"# As we see there is big distance on metrics , so we need to scale the features : b\ndf.head()","702ba7f3":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()","091e1e9a":"X = df[['Avg_Credit_Limit','Total_Credit_Cards','Total_Credit_Cards','Total_visits_bank','Total_calls_made']]","12cebf56":"scaled_x = scaler.fit_transform(X)","9f604726":"# Now we are going to import KMeans Clustring Algorithm , and will add n_clusters = 3 , and then will check what is the best number of cluster \n# by doing for loop \n\nfrom sklearn.cluster import KMeans\nmodel = KMeans(n_clusters=3)","3e1c40c5":"labels = model.fit_predict(scaled_x)","73a3d8f9":"labels","2a4eb79b":"df['cluster_label'] = labels","f35911ba":"# As we see we add new column \"Cluster_label\" , and label has been added , but lets make count_plot for this column to see the distribution\ndf","93e95537":"# From this chart we see that \nplt.figure(figsize=(8,4),dpi = 200)\nsns.countplot(data = df , x = 'cluster_label',hue ='Total_Credit_Cards')","d21b8a8e":"total_credit = [1,2,3,4,5,6,7,8,9,10]\ncluster = [0,1,2]\n\ncluster0_1_2 = df[(df['cluster_label'].isin(cluster)) & (df['Total_Credit_Cards'].isin(total_credit))]\ncluster0_1_2","53e626cc":"cluster0_1_2 = cluster0_1_2.set_index('cluster_label')\ncluster0_1_2","c84d5c2f":"\ncluster0_1_2.groupby(['cluster_label','Total_Credit_Cards']).agg('mean').style.background_gradient(axis=0)","ec9a5975":"plt.figure(figsize=(12,6),dpi = 200)\ndf.corr()['cluster_label'].sort_values().plot(kind='bar')","2915e1ac":"ssd = []\n\nfor k in range(2,10):\n    model = KMeans(n_clusters=k)\n    model.fit(scaled_x)\n    \n    ssd.append(model.inertia_) # --> this is to get the cluster center","d2e749be":"plt.figure(figsize=(12,6),dpi = 150)\nplt.plot(range(2,10),ssd,'o--')\nplt.xlabel('K value')\nplt.ylabel('Error rate')\nplt.title('Choose the best K value');","4f025492":"pd.Series(ssd)","bbe2e35f":"# This is the diff between every index \npd.Series(ssd).diff()\n","94023a65":"# Now we are going to make for loop to get the best k_value for n_n_clusters","7ef98c55":"As we see on the below chart the clustring divided the data as per the total credit cards from 1 : 4 credit cards on cluster 0 \nbut on cluster 1 there is people who has 4 credit cards also , and people who has 7 cards exist on cluster 1 and 2 , so will make some analysis with \npandas to understand more and more ","7e5154b6":"# From this analysis we see that  Avg_Credit_Limit is very important feature on the clustring that has been done "}}