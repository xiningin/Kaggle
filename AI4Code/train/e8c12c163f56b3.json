{"cell_type":{"e9002fd6":"code","74b44c1b":"code","174b7585":"code","76ddb862":"code","670c4599":"code","17756144":"code","23ad0baa":"code","2d0912a4":"code","ec53ab50":"code","6ec347fe":"code","e897346d":"code","bd284d02":"code","1ff84583":"code","b8321718":"code","8e5cb89e":"code","f09c8186":"code","faeb93c0":"code","7f6646ab":"code","5015f70c":"code","f7c912a1":"code","8255875e":"code","3495db22":"code","f4076c8b":"code","302a2953":"code","dbb2eb97":"code","b88e269d":"code","cd84ee96":"markdown","88e78040":"markdown","52490e3b":"markdown","07134dbe":"markdown","38ec4b2a":"markdown","5792f752":"markdown","7ce0ae7b":"markdown","77e9be11":"markdown","4ed11ccf":"markdown"},"source":{"e9002fd6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","74b44c1b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go","174b7585":"heart = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\no2 = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/o2Saturation.csv')","76ddb862":"heart.head()","670c4599":"x = pd.DataFrame(heart['output'].value_counts())\nx","17756144":"px.pie(x, values = 'output',names=['Yes','No'],title='Number of people with heart disease')","23ad0baa":"px.imshow(heart.corr())","2d0912a4":"fig = px.bar(heart.corr().loc['output',:],title='Correlation of heart disease with all the columns',color_discrete_sequence=['red'])\nfig.update_layout(xaxis_title = 'Columns',yaxis_title='Correlation value')","ec53ab50":"print(heart.info())\nprint('-'*50)\nprint(heart.nunique())","6ec347fe":"for x in ['age','trtbps','chol','thalachh','oldpeak']:\n    sns.boxplot(x = heart['output'],y=heart[x])\n    plt.show()","e897346d":"heart[['age','trtbps','chol','thalachh','oldpeak']].skew()","bd284d02":"px.scatter(heart,x='age',y='thalachh',color='output',marginal_x='box',marginal_y='box',title='Age vs Max Heart Rate')","1ff84583":"print('Avg of the column age is:',heart.age.mean())\nprint('Avg of the column thalachh is:',heart.thalachh.mean())","b8321718":"px.scatter(heart,x='age',y='chol',color='output',marginal_x='box',marginal_y='box',title='Age vs Cholesterol')","8e5cb89e":"sns.pairplot(heart[['cp','chol','thalachh','exng','oldpeak','slp','caa','thall','output']],diag_kind='kde',hue='output')","f09c8186":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import PowerTransformer","faeb93c0":"knn = KNeighborsClassifier(n_neighbors=2)\nscaler = StandardScaler()\npt = PowerTransformer()","7f6646ab":"X = heart.drop(columns='output')\ny = heart['output']","5015f70c":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42,stratify=y)","f7c912a1":"X_train = pd.DataFrame(scaler.fit_transform(X_train),columns=X.columns)\nX_test = pd.DataFrame(scaler.transform(X_test),columns=X.columns)","8255875e":"X_train = pd.DataFrame(pt.fit_transform(X_train),columns=X.columns)\nX_test = pd.DataFrame(pt.transform(X_test),columns=X.columns)","3495db22":"knn.fit(X_train,y_train)","f4076c8b":"knn.score(X_test,y_test)","302a2953":"from sklearn.model_selection import cross_val_score","dbb2eb97":"X2 = pd.DataFrame(scaler.fit_transform(X),columns=X.columns)\nX2 = pd.DataFrame(pt.fit_transform(X2),columns=X.columns)\ncv = cross_val_score(knn,X2,y)","b88e269d":"cv.mean()","cd84ee96":"* Decent numbers here meaning there won't be imbalance.","88e78040":"### Insights\n* Apart from cholesterol, all the other columns show a clear relationship with the output","52490e3b":"### Insights\n* The diagonal columns are the most interesting. They show the relationship between the people with heart disease and without it for each of the columns.\n* For example, for cp, the most people with no chest pain don't have heart disease, whereas most people with the other kinds of chest pain do.\n* This trend repeats with most columns except for cholesterol, where a pattern is hard to detect.","07134dbe":"# Analyzing the Dataset","38ec4b2a":"### Analyzing output Variable","5792f752":"### Insights\n* There are no outright null values\n* All the columns are numerical \n* Only 303 rows, not a lot of data to go on\n* 'sex', 'fbs', 'exng', 'output' are binary (Columns only contain a 0 or 1)","7ce0ae7b":"### Insights\n* The numerical columns max heart rate (trtbps), cholesterol (chol), and oldpeak have heavy skewing that would need to be fixed later.","77e9be11":"### Insights\n* Ignoring the output column, the columns most correlated with the output are: chest pain (cp), max heart rate (thalachh), exercise induced angina (exng), oldpeak, slope (slp), major arteries affect (caa), and thall.     ","4ed11ccf":"### Insights\n* We can see a negative correlation between age and max heart rate achieved. \n* All the people with heart conditions seem to be at a lower age and higher max heart rate.\n* The differences between the average and the median for both columns isn't significant."}}