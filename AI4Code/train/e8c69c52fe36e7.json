{"cell_type":{"68d6fe7a":"code","6fe50f08":"code","58fd3212":"code","278517d7":"code","8c307fd9":"code","e7560dcf":"code","9c02c3fe":"code","5f22a72a":"code","8d6732e6":"code","2399cdfa":"code","6d31881e":"code","0b312b18":"code","10aaca82":"code","29416fa2":"code","9d3fccf6":"code","b393abfe":"code","b5cb169d":"code","84dcc693":"code","07cbf2ef":"code","949508d1":"code","f7f42efa":"code","bc46d2ab":"code","f1295b42":"code","d7a37447":"code","0c33f5eb":"code","bb4a1234":"code","037217df":"code","90c4a31d":"code","75405669":"code","af7611b2":"code","b8759e29":"code","65b676f9":"code","07841580":"code","8e07be4f":"code","36a70268":"code","5feb2c83":"code","590d9b31":"code","fddb54fc":"code","8e29e95d":"code","9368d0a1":"code","ad93aa1a":"code","5cb26d48":"code","bdd01719":"code","ac3514e5":"code","6eea4f45":"code","ea179c9b":"markdown","221c0c11":"markdown","9cccc82e":"markdown","255cec6b":"markdown","6decff37":"markdown","5718fb9f":"markdown","38abd610":"markdown","3ced841e":"markdown","8aa99cc1":"markdown","1e688273":"markdown","ccf48bd4":"markdown","e9c52e76":"markdown","028212ed":"markdown","47819d44":"markdown","8467bff4":"markdown","097640ee":"markdown","65416929":"markdown","73bb3a56":"markdown"},"source":{"68d6fe7a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6fe50f08":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime\nfrom pandas import Series\n%matplotlib inline \nfrom matplotlib.pylab import rcParams\nrcParams['figure.figsize']=10,6\nplt.style.use(['ggplot'])","58fd3212":"df=pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\",parse_dates=['ObservationDate'])\ndf.head()","278517d7":"#finding the missing data in DF\nmissing_data=df.isnull()\nfor column in missing_data.columns.values.tolist():\n    print(column)\n    print(missing_data[column].value_counts())\n    print(\" \")","8c307fd9":"#filtering out top 5 cities of china \nchina=df.loc[df['Country\/Region']=='Mainland China',['Country\/Region','Confirmed','ObservationDate','Deaths','Recovered']]\nchina=china.drop(['Country\/Region'],axis=1)\nchina=china.groupby(['ObservationDate'],as_index=False).sum()\nchina.head()","e7560dcf":"#creating the bins of the data\nbins_dt = pd.date_range('2020-01-21', freq='6D', periods=11)\nlabels=['Week-1','Week-2','Week-3','Week-4','Week-5','Week-6','Week-7','Week-8','Week-9','Week-10']\nchina['Confirmed-bins'] = pd.cut(china['ObservationDate'], bins=bins_dt, labels=labels)\nchina.head()","9c02c3fe":"china=china.groupby(['Confirmed-bins']).sum()\nchina.plot(kind='bar')\nplt.xlabel('Weekly developement in cases')\nplt.ylabel('#No of Cases ')\nplt.title('Weekly Developement of COVID_19 in China from January 22 2020')","5f22a72a":"#filtering out top 5 cities of Italy \nItaly=df.loc[df['Country\/Region']=='Italy',['Country\/Region','Confirmed','ObservationDate','Deaths','Recovered']]\nItaly=Italy.drop(['Country\/Region'],axis=1)\nItaly=Italy.groupby(['ObservationDate'],as_index=False).sum()\n#creating the bins of the data\nbins_dt = pd.date_range('2020-01-21', freq='6D', periods=11)\nlabels=['Week-1','Week-2','Week-3','Week-4','Week-5','Week-6','Week-7','Week-8','Week-9','Week-10']\nItaly['Confirmed-bins'] = pd.cut(Italy['ObservationDate'], bins=bins_dt, labels=labels)\n#plotting the data of china\nItaly=Italy.groupby(['Confirmed-bins']).sum()\nItaly.plot(kind='bar')\nplt.xlabel('Weekly developement in cases')\nplt.ylabel('#No of Cases ')\nplt.title('Weekly Developement of COVID_19 in Italy from January 22 2020')","8d6732e6":"#filtering out top 5 cities of UK \nUK=df.loc[df['Country\/Region']=='UK',['Country\/Region','Confirmed','ObservationDate','Deaths','Recovered']]\nUK=UK.drop(['Country\/Region'],axis=1)\nUK=UK.groupby(['ObservationDate'],as_index=False).sum()\n#creating the bins of the data\nbins_dt = pd.date_range('2020-01-21', freq='6D', periods=11)\nlabels=['Week-1','Week-2','Week-3','Week-4','Week-5','Week-6','Week-7','Week-8','Week-9','Week-10']\nUK['Confirmed-bins'] = pd.cut(UK['ObservationDate'], bins=bins_dt, labels=labels)\n#plotting the data of china\nUK=UK.groupby(['Confirmed-bins']).sum()\nUK.plot(kind='bar')\nplt.xlabel('Weekly developement in cases')\nplt.ylabel('#No of Cases ')\nplt.title('Weekly Developement of COVID_19 in UK from January 22 2020')","2399cdfa":"#filtering out top 5 cities of US\nUS=df.loc[df['Country\/Region']=='UK',['Country\/Region','Confirmed','ObservationDate','Deaths','Recovered']]\nUS=US.drop(['Country\/Region'],axis=1)\nUS=US.groupby(['ObservationDate'],as_index=False).sum()\n#creating the bins of the data\nbins_dt = pd.date_range('2020-01-21', freq='6D', periods=11)\nlabels=['Week-1','Week-2','Week-3','Week-4','Week-5','Week-6','Week-7','Week-8','Week-9','Week-10']\nUS['Confirmed-bins'] = pd.cut(US['ObservationDate'], bins=bins_dt, labels=labels)\n#plotting the data of china\nUS=US.groupby(['Confirmed-bins']).sum()\nUS.plot(kind='bar')\nplt.xlabel('Weekly developement in cases')\nplt.ylabel('#No of Cases ')\nplt.title('Weekly Developement of COVID_19 in US from January 22 2020')","6d31881e":"df_time_series=pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv\")\ndf_cleaned_line=df_time_series.drop(['Lat','Long'],axis=1)\ndf_cleaned_line.head()","0b312b18":"df_cleaned_line.rename(columns={'Country\/Region':'Country','Province\/State':'State'},inplace=True)\ndf_cleaned_line.head()","10aaca82":"\ndf_cleaned_line.set_index('State', inplace=True)\ndf_cleaned_line.index.name = None","29416fa2":"df_cleaned_line['Total']=df_cleaned_line.sum(axis=1)\ndf_cleaned_line.head()","9d3fccf6":"china1=df_cleaned_line.loc[df_cleaned_line['Country']=='China',['1\/22\/20', '1\/23\/20', '1\/24\/20', '1\/25\/20',\n       '1\/26\/20', '1\/27\/20', '1\/28\/20', '1\/29\/20', '1\/30\/20', '1\/31\/20',\n       '2\/1\/20', '2\/2\/20', '2\/3\/20', '2\/4\/20', '2\/5\/20', '2\/6\/20', '2\/7\/20',\n       '2\/8\/20', '2\/9\/20', '2\/10\/20', '2\/11\/20', '2\/12\/20', '2\/13\/20',\n       '2\/14\/20', '2\/15\/20', '2\/16\/20', '2\/17\/20', '2\/18\/20', '2\/19\/20',\n       '2\/20\/20', '2\/21\/20', '2\/22\/20', '2\/23\/20', '2\/24\/20', '2\/25\/20',\n       '2\/26\/20', '2\/27\/20', '2\/28\/20', '2\/29\/20', '3\/1\/20', '3\/2\/20',\n       '3\/3\/20', '3\/4\/20', '3\/5\/20', '3\/6\/20', '3\/7\/20', '3\/8\/20', '3\/9\/20',\n       '3\/10\/20', '3\/11\/20', '3\/12\/20', '3\/13\/20', '3\/14\/20', '3\/15\/20',\n       '3\/16\/20', '3\/17\/20', '3\/18\/20', '3\/19\/20']]\nchina1.head()","b393abfe":"china_time= china1.loc[['Hubei','Guangdong','Henan','Zhejiang','Hunan'], ['1\/22\/20', '1\/23\/20', '1\/24\/20', '1\/25\/20',\n       '1\/26\/20', '1\/27\/20', '1\/28\/20', '1\/29\/20', '1\/30\/20', '1\/31\/20',\n       '2\/1\/20', '2\/2\/20', '2\/3\/20', '2\/4\/20', '2\/5\/20', '2\/6\/20', '2\/7\/20',\n       '2\/8\/20', '2\/9\/20', '2\/10\/20', '2\/11\/20', '2\/12\/20', '2\/13\/20',\n       '2\/14\/20', '2\/15\/20', '2\/16\/20', '2\/17\/20', '2\/18\/20', '2\/19\/20',\n       '2\/20\/20', '2\/21\/20', '2\/22\/20', '2\/23\/20', '2\/24\/20', '2\/25\/20',\n       '2\/26\/20', '2\/27\/20', '2\/28\/20', '2\/29\/20', '3\/1\/20', '3\/2\/20',\n       '3\/3\/20', '3\/4\/20', '3\/5\/20', '3\/6\/20', '3\/7\/20', '3\/8\/20', '3\/9\/20',\n       '3\/10\/20', '3\/11\/20', '3\/12\/20', '3\/13\/20', '3\/14\/20', '3\/15\/20',\n       '3\/16\/20', '3\/17\/20', '3\/18\/20', '3\/19\/20']]\nchina_time=pd.DataFrame(china_time)\nchina_time=china_time.transpose()\nchina_time.head()","b5cb169d":"china_time.plot(kind='line')\nplt.title('Top 5 cities in China with Confirmed cases')\nplt.xlabel('#Days')\nplt.ylabel('No of Confirmed cases')","84dcc693":"Us_time=df_cleaned_line.loc[df_cleaned_line['Country']=='US',['1\/22\/20', '1\/23\/20', '1\/24\/20', '1\/25\/20',\n       '1\/26\/20', '1\/27\/20', '1\/28\/20', '1\/29\/20', '1\/30\/20', '1\/31\/20',\n       '2\/1\/20', '2\/2\/20', '2\/3\/20', '2\/4\/20', '2\/5\/20', '2\/6\/20', '2\/7\/20',\n       '2\/8\/20', '2\/9\/20', '2\/10\/20', '2\/11\/20', '2\/12\/20', '2\/13\/20',\n       '2\/14\/20', '2\/15\/20', '2\/16\/20', '2\/17\/20', '2\/18\/20', '2\/19\/20',\n       '2\/20\/20', '2\/21\/20', '2\/22\/20', '2\/23\/20', '2\/24\/20', '2\/25\/20',\n       '2\/26\/20', '2\/27\/20', '2\/28\/20', '2\/29\/20', '3\/1\/20', '3\/2\/20',\n       '3\/3\/20', '3\/4\/20', '3\/5\/20', '3\/6\/20', '3\/7\/20', '3\/8\/20', '3\/9\/20',\n       '3\/10\/20', '3\/11\/20', '3\/12\/20', '3\/13\/20', '3\/14\/20', '3\/15\/20',\n       '3\/16\/20', '3\/17\/20', '3\/18\/20', '3\/19\/20']]\nUs_time.head()","07cbf2ef":"#code for comparing first 100 cases in Italy\nx=df.loc[df['Country\/Region']=='Italy',['Country\/Region','Confirmed','ObservationDate']]\nx2=x.drop(['Country\/Region'],axis=1)\nItaly=x2.groupby(['ObservationDate'],as_index=False).sum()\nItaly=Italy.drop(Italy.index[0:23])\nItaly=Italy.reset_index()\nItaly","949508d1":"x=df.loc[df['Country\/Region']=='US',['Country\/Region','Confirmed','ObservationDate']]\nx2=x.drop(['Country\/Region'],axis=1)\nUS=x2.groupby(['ObservationDate'],as_index=False).sum()\nUS=US.drop(US.index[0:40])\nUS=US.reset_index()\nUS","f7f42efa":"x=df.loc[df['Country\/Region']=='Iran',['Country\/Region','Confirmed','ObservationDate']]\nx2=x.drop(['Country\/Region'],axis=1)\nIran=x2.groupby(['ObservationDate'],as_index=False).sum()\nIran=Iran.drop(Iran.index[0:7])\nIran=Iran.reset_index()\nIran","bc46d2ab":"x=df.loc[df['Country\/Region']=='UK',['Country\/Region','Confirmed','ObservationDate']]\nx2=x.drop(['Country\/Region'],axis=1)\nUK=x2.groupby(['ObservationDate'],as_index=False).sum()\nUK=UK.drop(UK.index[0:34])\nUK=UK.reset_index()\nUK","f1295b42":"x=df.loc[df['Country\/Region']=='India',['Country\/Region','Confirmed','ObservationDate']]\nx2=x.drop(['Country\/Region'],axis=1)\nIndia=x2.groupby(['ObservationDate'],as_index=False).sum()\nIndia=India.drop(India.index[0:44])\nIndia=India.reset_index()\nIndia","d7a37447":"#comparing first 100 cases of Italy and US\nsns.barplot(x=US.index,y='Confirmed',data=US,color='lightgreen')\nsns.barplot(x=Italy.index,y='Confirmed',data=Italy,color='coral')\nplt.xticks(rotation=90)\nplt.xlabel('Days')\nplt.ylabel('#No of confirmed cases')\nplt.title('Comparision of cases after first 100 cases in Italy and US')","0c33f5eb":"sns.barplot(x=Iran.index,y='Confirmed',data=Iran,color='lightgreen')\nsns.barplot(x=Italy.index,y='Confirmed',data=Italy,color='coral')\nplt.xticks(rotation=90)\nplt.xlabel('Days')\nplt.ylabel('#No of confirmed cases')\nplt.title('Comparision of cases after first 100 cases in Italy and Iran')","bb4a1234":"sns.barplot(x=UK.index,y='Confirmed',data=UK,color='lightgreen')\nsns.barplot(x=Italy.index,y='Confirmed',data=Italy,color='coral')\nplt.xticks(rotation=90)\nplt.xlabel('Days')\nplt.ylabel('#No of confirmed cases')\nplt.title('Comparision of cases after first 100 cases in Italy and UK')","037217df":"#comparing first 100 cases of Italy and US\nsns.barplot(x=India.index,y='Confirmed',data=India,color='lightgreen')\nsns.barplot(x=Italy.index,y='Confirmed',data=Italy,color='coral')\nplt.xticks(rotation=90)\nplt.xlabel('Days')\nplt.ylabel('#No of confirmed cases')\nplt.title('Comparision of cases after first 100 cases in Italy and India')","90c4a31d":"conf_df = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv')\ndeaths_df = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv')\nrecv_df = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_recovered.csv')","75405669":"conf_df.columns[4:]","af7611b2":"dates = conf_df.columns[4:]\n\nconf_df_long = conf_df.melt(id_vars=['Province\/State', 'Country\/Region', 'Lat', 'Long'], \n                            value_vars=dates, var_name='Date', value_name='Confirmed')\n\ndeaths_df_long = deaths_df.melt(id_vars=['Province\/State', 'Country\/Region', 'Lat', 'Long'], \n                            value_vars=dates, var_name='Date', value_name='Deaths')\n\nrecv_df_long = recv_df.melt(id_vars=['Province\/State', 'Country\/Region', 'Lat', 'Long'], \n                            value_vars=dates, var_name='Date', value_name='Recovered')\n\nfull_table = pd.concat([conf_df_long, deaths_df_long['Deaths'], recv_df_long['Recovered']], \n                       axis=1, sort=False)\n\nfull_table.head()\n#refrence:https:\/\/www.kaggle.com\/imdevskp\/covid-19-analysis-visualization-comparisons","b8759e29":"full_latest = full_table[full_table['Date'] == max(full_table['Date'])].reset_index()\nfull_latest_grouped = full_latest.groupby(['Country\/Region'])['Confirmed', 'Deaths', 'Recovered'].sum()\nfull_latest_grouped.head()","65b676f9":"final_grouped = full_latest_grouped.sort_values(by='Confirmed', ascending=False).head(15)\nfinal_grouped.head()","07841580":"final_grouped['Confirmed'].plot('barh')\nplt.xlabel('#no of Confirmed Cases')\nplt.ylabel('Countries')\nplt.title('No of Confirmed cases in top 15 countries affected by COVID_19')","8e07be4f":"final_grouped['Deaths'].plot('barh')\nplt.xlabel('#no of deaths Cases')\nplt.ylabel('Countries')\nplt.title('No of deaths in top 15 countries affected by COVID_19')","36a70268":"final_grouped['Recovered'].plot('barh')\nplt.xlabel('#no of Recovered Cases')\nplt.ylabel('Countries')\nplt.title('No of recovered in top 15 countries affected by COVID_19')","5feb2c83":"\nx=df.loc[df['Country\/Region']=='Mainland China',['Country\/Region','Confirmed','ObservationDate','Deaths','Recovered']]\nx2=x.drop(['Country\/Region'],axis=1)\nx2=x2.groupby(['ObservationDate'],as_index=False).sum()\nx2.head()","590d9b31":"x2['ObservationDate'] = pd.to_datetime(x2.ObservationDate)\n\ncumval=0\nfig = plt.figure(figsize=(12,8))\nfor col in x2.columns[~x2.columns.isin(['ObservationDate'])]:\n    plt.bar(x2.ObservationDate, x2[col], bottom=cumval, label=col)\n    cumval = cumval+x2[col]\n\n_ = plt.xticks(rotation=30)\n_ = plt.legend(fontsize=18) \n_ = plt.title('Stacked bar chart showing Confirmed,Deaths,Recovered of china') \n","fddb54fc":"\nx=df.loc[df['Country\/Region']=='Italy',['Country\/Region','Confirmed','ObservationDate','Deaths','Recovered']]\nx2=x.drop(['Country\/Region'],axis=1)\nx2=x2.groupby(['ObservationDate'],as_index=False).sum()\nx2.head()","8e29e95d":"x2['ObservationDate'] = pd.to_datetime(x2.ObservationDate)\n\ncumval=0\nfig = plt.figure(figsize=(12,8))\nfor col in x2.columns[~x2.columns.isin(['ObservationDate'])]:\n    plt.bar(x2.ObservationDate, x2[col], bottom=cumval, label=col)\n    cumval = cumval+x2[col]\n\n_ = plt.xticks(rotation=30)\n_ = plt.legend(fontsize=18)\n_ = plt.title('Stacked bar chart showing Confirmed,Deaths,Recovered of Italy')","9368d0a1":"#Stacked bar chart for Iran\nx=df.loc[df['Country\/Region']=='Iran',['Country\/Region','Confirmed','ObservationDate','Deaths','Recovered']]\nx2=x.drop(['Country\/Region'],axis=1)\nx2=x2.groupby(['ObservationDate'],as_index=False).sum()\nx2.head()","ad93aa1a":"x2['ObservationDate'] = pd.to_datetime(x2.ObservationDate)\n\ncumval=0\nfig = plt.figure(figsize=(12,8))\nfor col in x2.columns[~x2.columns.isin(['ObservationDate'])]:\n    plt.bar(x2.ObservationDate, x2[col], bottom=cumval, label=col)\n    cumval = cumval+x2[col]\n\n_ = plt.xticks(rotation=90)\n_ = plt.legend(fontsize=18) \n_ = plt.title('Stacked bar chart showing Confirmed,Deaths,Recovered of Iran')","5cb26d48":"#Stacked bar chart for US\nx=df.loc[df['Country\/Region']=='US',['Country\/Region','Confirmed','ObservationDate','Deaths','Recovered']]\nx2=x.drop(['Country\/Region'],axis=1)\nx2=x2.groupby(['ObservationDate'],as_index=False).sum()\nx2.head()","bdd01719":"x2['ObservationDate'] = pd.to_datetime(x2.ObservationDate)\n\ncumval=0\nfig = plt.figure(figsize=(12,8))\nfor col in x2.columns[~x2.columns.isin(['ObservationDate'])]:\n    plt.bar(x2.ObservationDate, x2[col], bottom=cumval, label=col)\n    cumval = cumval+x2[col]\n\n_ = plt.xticks(rotation=90)\n_ = plt.legend(fontsize=18)\n_ = plt.title('Stacked bar chart showing Confirmed,Deaths,Recovered of US')","ac3514e5":"#Stacked bar chart for India\nx=df.loc[df['Country\/Region']=='India',['Country\/Region','Confirmed','ObservationDate','Deaths','Recovered']]\nx2=x.drop(['Country\/Region'],axis=1)\nx2=x2.groupby(['ObservationDate'],as_index=False).sum()\nx2.head()","6eea4f45":"x2['ObservationDate'] = pd.to_datetime(x2.ObservationDate)\n\ncumval=0\nfig = plt.figure(figsize=(12,8))\nfor col in x2.columns[~x2.columns.isin(['ObservationDate'])]:\n    plt.bar(x2.ObservationDate, x2[col], bottom=cumval, label=col)\n    cumval = cumval+x2[col]\n\n_ = plt.xticks(rotation=90)\n_ = plt.legend(fontsize=18)\n\n_ = plt.title('Stacked bar chart showing Confirmed,Deaths,Recovered of India')","ea179c9b":"**#comparing first 100 cases of Italy and US**\n\n","221c0c11":"**COVID_19 = Chinese Virus**\n* \n*About*\n\nCoronavirus disease (COVID-19) is an infectious disease caused by a new virus.\nThe disease causes respiratory illness (like the flu) with symptoms such as a cough, fever, and in more severe cases, difficulty breathing. You can protect yourself by washing your hands frequently, avoiding touching your face, and avoiding close contact (1 meter or 3 feet) with people who are unwell.\n\n*HOW IT SPREADS*\n\nCoronavirus disease spreads primarily through contact with an infected person when they cough or sneeze. It also spreads when a person touches a surface or object that has the virus on it, then touches their eyes, nose, or mouth.\n\n**THE LATEST IN NEWS**\n\n* The spreading coronavirus is shaping up as a pandemic of potentially historic proportions, but the many unknowns about the virus impede efforts to predict its trajectory. \u2013 The Washington Post\n\n* About 3.4% of confirmed cases of COVID-19 have died, far above seasonal flu's fatality rate of under 1%, but the novel coronavirus can be contained, the World Health Organization said Tuesday. \u2013 Reuters\n\n* U.S. stock markets, after rebounding Monday, reversed on Tuesday, closing 795 points lower. Earlier in the day, the Federal Reserve announced it would cut interest rates to help mitigate economic losses due to the virus. \u2013 ABC News\n\n\n\n**References**\n\n* http:\/\/cognitiveclass.ai\/\n\n* Stack Overflow\n[](http:\/\/)","9cccc82e":"**filtering out top 5 cities of china**","255cec6b":"**Top 5 cities in China Affected **","6decff37":"**Import Library**","5718fb9f":"**Stacked bar chart for china**","38abd610":"**creating the index via column name and then removing the name of the index**","3ced841e":"**Stacked bar chart for Iran**","8aa99cc1":"The condition in UK is under control when we compared to US and Iran ","1e688273":"**finding the missing data in DF**","ccf48bd4":"**Stacked bar chart for US**","e9c52e76":"**Read Files**","028212ed":"**Stacked bar chart for Italy**","47819d44":"**Time Series analysis of COVID_19**","8467bff4":"**Conclusion**\n*My first attempt at Exploratory Data Analysis(EDA) in #kaggle. The insights that I am able to bring out from this #analysis are as follows.*\n* The #trend that I found here was in comparing the difference in time frame after reaching first 100 #cases over time. Due to lack of restrictions and seriousness of US population, the condition in US is much worse than Italy and in the coming week , #US might hit a million case in no time. If this happen it is really difficult to control the situation.\n* Talking about #India, the #indiangovernment has taken adequate steps to lower the #spread of #covid19. Also because of these restrictions WHO has also praised Indian government for the same.\n* Talking about #Italy i don't think the number of confirmed cases is going down in any time soon.\n* Condition in #iran is also becoming worse as they are also ahead of Italy in confirmed cases when we compared the cases after first 100 cases are reported over time.\n\n**If extreme #measures  will not be implemented to Isolate the population of every country affected then these conditions might get worse**\n**Up til now no cure has been found of #COVID_19, But Isolation of #infected individuals has a great impact in slowing down the  #confirmed  cases over time.\n #dataanalysis #outbreak #covid\u30fc19 #quarentine**","097640ee":"first 100 cases in Italy hit on feb 22 2020 and on the other hand US hit first 100 cases on March 2 2020.\nWe can see the spike on day 21 as US is way ahead of Italy in number of confirmed cases. If we can go by the trend, in next 7 days US can surpass the Italy and can have way more cases than Italy. It will reach in millioins in no time. ","65416929":"**Stacked bar chart for India**","73bb3a56":"**creating the bins of the data**"}}