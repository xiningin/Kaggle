{"cell_type":{"1c29fc02":"code","58e31c72":"code","7966d30f":"code","964c5ad1":"code","2556b1cf":"code","bbb14d8d":"code","3eeb6eda":"code","99bd0bbb":"code","ee8992a7":"code","8b989edf":"code","b08e2363":"code","26c26aa4":"code","3e38f15d":"code","91b2ebcb":"code","73a32ab8":"code","dcbfdf92":"code","1ed1fbd1":"code","0c67aa38":"code","3a1563a3":"code","2e59ffd5":"code","61322c05":"code","eb2f4395":"code","615ccf1b":"code","39df8433":"code","7a32f7e3":"code","820febaf":"code","c83ef20d":"code","95e30d3a":"code","4c8240d9":"code","bb929ce4":"code","bd6fd12c":"code","cd80bb10":"code","6701b69d":"code","64b4cb70":"code","f368c74a":"code","61107862":"code","bf852f82":"code","5d7dfe79":"code","caf1f212":"code","8a481faf":"code","36d12126":"code","ec44532b":"code","ebbf90dc":"code","b3fbc26b":"code","24f1ddb5":"code","b6adea7f":"code","5ef97541":"code","5e30a171":"code","84ad9fe0":"code","e80d7e53":"code","0df78f7f":"code","9ae23c2d":"code","270f1e76":"code","12857cd4":"code","ecff756a":"code","0ec694f7":"code","e2664076":"code","64dad86e":"code","09a6af36":"code","e6f1a8ab":"code","d48739b4":"code","754cfccb":"code","ec11a58a":"code","8f4717be":"code","497a28e4":"code","ee1a72a7":"code","586254f2":"code","f74d1afc":"code","48f2ec18":"code","185c2820":"code","73e650f6":"code","6631bb72":"code","2178d358":"code","0d69c43f":"code","d82b6790":"code","8fed504b":"code","dba64a3f":"code","435fcb84":"code","18ce340c":"code","68a2233b":"code","55cc4ff0":"code","b3cd2503":"code","4ac3a123":"code","a7c86168":"code","2f524d38":"code","8ffeba1c":"markdown","bc71dfdf":"markdown","a6269562":"markdown","7dc15386":"markdown","83983b0a":"markdown","412b2d2e":"markdown","1b95f229":"markdown","d1648cf7":"markdown","5d38b3bf":"markdown","ffd4f177":"markdown","8c54fb7a":"markdown","9338505b":"markdown","e0417028":"markdown","b970e8ba":"markdown","9c6c1d03":"markdown","e0eaa6e6":"markdown","29e6489b":"markdown","83556d95":"markdown","2ee6473a":"markdown","3249fd3b":"markdown","3a05f619":"markdown","1338e3d9":"markdown","3641034a":"markdown","f52e600f":"markdown","e3987faf":"markdown","7b2ac792":"markdown","4a927fe2":"markdown","c3ce303a":"markdown","705701bc":"markdown","4608405b":"markdown","a9b51d12":"markdown","26274f8a":"markdown","3c306f45":"markdown","7a143efc":"markdown","30a50e45":"markdown","8e9d43c9":"markdown","16a204e7":"markdown","691e9e9e":"markdown","26c7f8d9":"markdown","a23d63e3":"markdown","e906d4bf":"markdown","f4f2ca20":"markdown","2019dcb3":"markdown","794082ce":"markdown"},"source":{"1c29fc02":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Any results you write to the current directory are saved as output.","58e31c72":"# data = pd.read_csv('\/kaggle\/input\/congressional-voting-records\/house-votes-84.names', error_bad_lines=False)\ndata = pd.read_csv('\/kaggle\/input\/congressional-voting-records\/house-votes-84.csv')","7966d30f":"data.head()","964c5ad1":"data.shape","2556b1cf":"data.info()","bbb14d8d":"data.dtypes","3eeb6eda":"data['Target'] = np.where(data['Class Name'] == 'democrat', 1, 0)","99bd0bbb":"data.Target.value_counts()","ee8992a7":"plt.figure(figsize = (50,20))\nsns.set(style=\"darkgrid\")\nax = sns.countplot(x='Class Name',data=data)\nax.set_xticklabels(ax.get_xticklabels(), fontsize = 30)\nplt.tight_layout()","8b989edf":"data[' handicapped-infants'].value_counts()","b08e2363":"plt.figure(figsize = (20,10))\nsns.set(style=\"darkgrid\")\nax = sns.countplot(x=' handicapped-infants',data=data)\nax.set_xticklabels(ax.get_xticklabels(), fontsize = 30)\nplt.tight_layout()","26c26aa4":"data.groupby(' handicapped-infants')['Target'].mean().sort_values(ascending = False)","3e38f15d":"data['handicapped_infants_n'] = np.where(data[' handicapped-infants'] == 'n', 1, 0)\ndata['handicapped_infants_y'] = np.where(data[' handicapped-infants'] == 'y', 1, 0)","91b2ebcb":"data[' water-project-cost-sharing'].value_counts()","73a32ab8":"data.groupby(' water-project-cost-sharing')['Target'].mean().sort_values(ascending = False)","dcbfdf92":"data['water-project-cost-sharing_n'] = np.where(data[' water-project-cost-sharing'] == 'n', 1, 0)\ndata['water-project-cost-sharing_y'] = np.where(data[' water-project-cost-sharing'] == 'y', 1, 0)","1ed1fbd1":"data[' adoption-of-the-budget-resolution'].value_counts()","0c67aa38":"data.groupby(' adoption-of-the-budget-resolution')['Target'].mean().sort_values(ascending = False)","3a1563a3":"data['adoption-of-the-budget-resolution_n'] = np.where(data[' adoption-of-the-budget-resolution'] == 'n', 1, 0)\ndata['adoption-of-the-budget-resolution_y'] = np.where(data[' adoption-of-the-budget-resolution'] == 'y', 1, 0)","2e59ffd5":"data[' physician-fee-freeze'].value_counts()","61322c05":"data.groupby(' physician-fee-freeze')['Target'].mean().sort_values(ascending = False)","eb2f4395":"data['physician-fee-freeze_n'] = np.where(data[' physician-fee-freeze'] == 'n', 1, 0)\ndata['physician-fee-freeze_y'] = np.where(data[' physician-fee-freeze'] == 'y', 1, 0)","615ccf1b":"data.columns","39df8433":"cols_to_be_dropped = ['Class Name', ' handicapped-infants', ' water-project-cost-sharing',\n       ' adoption-of-the-budget-resolution', ' physician-fee-freeze',\n       ' el-salvador-aid', ' religious-groups-in-schools',\n       ' anti-satellite-test-ban', ' aid-to-nicaraguan-contras', ' mx-missile',\n       ' immigration', ' synfuels-corporation-cutback', ' education-spending',\n       ' superfund-right-to-sue', ' crime', ' duty-free-exports',\n       ' export-administration-act-south-africa']\n\n#We will drop these cols at the end of our analysis","7a32f7e3":"data[' el-salvador-aid'].value_counts()","820febaf":"data.groupby(' el-salvador-aid')['Target'].mean()","c83ef20d":"data['el-salvador-aid_n'] = np.where(data[' el-salvador-aid'] == 'n', 1, 0)\ndata['el-salvador-aid_y'] = np.where(data[' el-salvador-aid'] == 'y', 1, 0)","95e30d3a":"data[' religious-groups-in-schools'].value_counts()","4c8240d9":"data.groupby(' religious-groups-in-schools')['Target'].mean()","bb929ce4":"data['religious-groups-in-schools_n'] = np.where(data[' religious-groups-in-schools'] == 'n', 1, 0)\ndata['religious-groups-in-schools_y'] = np.where(data[' religious-groups-in-schools'] == 'y', 1, 0)","bd6fd12c":"data[' anti-satellite-test-ban'].value_counts()","cd80bb10":"data.groupby(' anti-satellite-test-ban')['Target'].mean()","6701b69d":"data['anti-satellite-test-ban_n'] = np.where(data[' anti-satellite-test-ban'] == 'n', 1, 0)\ndata['anti-satellite-test-ban_y'] = np.where(data[' anti-satellite-test-ban'] == 'y', 1, 0)","64b4cb70":"data[' aid-to-nicaraguan-contras'].value_counts()","f368c74a":"data.groupby(' aid-to-nicaraguan-contras')['Target'].mean()","61107862":"data['aid-to-nicaraguan-contras_n'] = np.where(data[' aid-to-nicaraguan-contras'] == 'n', 1, 0)\ndata['aid-to-nicaraguan-contras_y'] = np.where(data[' aid-to-nicaraguan-contras'] == 'y', 1, 0)","bf852f82":"data[' mx-missile'].value_counts()","5d7dfe79":"data.groupby(' mx-missile')['Target'].mean()","caf1f212":"data['mx-missile_n'] = np.where(data[' mx-missile'] == 'n', 1, 0)\ndata['mx-missile_y'] = np.where(data[' mx-missile'] == 'y', 1, 0)","8a481faf":"data[' immigration'].value_counts()","36d12126":"data.groupby(' immigration')['Target'].mean()","ec44532b":"data['immigration_n'] = np.where(data[' immigration'] == 'n', 1, 0)\ndata['immigration_y'] = np.where(data[' immigration'] == 'y', 1, 0)","ebbf90dc":"data[' synfuels-corporation-cutback'].value_counts()","b3fbc26b":"data.groupby(' synfuels-corporation-cutback')['Target'].mean()","24f1ddb5":"data['synfuels-corporation-cutback_n'] = np.where(data[' synfuels-corporation-cutback'] == 'n', 1, 0)\ndata['synfuels-corporation-cutback_y'] = np.where(data[' synfuels-corporation-cutback'] == 'y', 1, 0)","b6adea7f":"data[' education-spending'].value_counts()","5ef97541":"data.groupby(' education-spending')['Target'].mean()","5e30a171":"data['education-spending_n'] = np.where(data[' education-spending'] == 'n', 1, 0)\ndata['education-spending_y'] = np.where(data[' education-spending'] == 'y', 1, 0)","84ad9fe0":"data[' superfund-right-to-sue'].value_counts()","e80d7e53":"data.groupby(' superfund-right-to-sue')['Target'].mean()","0df78f7f":"data['superfund-right-to-sue_n'] = np.where(data[' superfund-right-to-sue'] == 'n', 1, 0)\ndata['superfund-right-to-sue_y'] = np.where(data[' superfund-right-to-sue'] == 'y', 1, 0)","9ae23c2d":"data[' crime'].value_counts()","270f1e76":"data.groupby(' crime')['Target'].mean()","12857cd4":"data['crime_n'] = np.where(data[' crime'] == 'n', 1, 0)\ndata['crime_y'] = np.where(data[' crime'] == 'y', 1, 0)","ecff756a":"data[' duty-free-exports'].value_counts()","0ec694f7":"data.groupby(' duty-free-exports')['Target'].mean()","e2664076":"data['duty-free-exports_n'] = np.where(data[' duty-free-exports'] == 'n', 1, 0)\ndata['duty-free-exports_y'] = np.where(data[' duty-free-exports'] == 'y', 1, 0)","64dad86e":"data[' export-administration-act-south-africa'].value_counts()","09a6af36":"data.groupby(' export-administration-act-south-africa')['Target'].mean()","e6f1a8ab":"data['export-administration-act-south-africa_n'] = np.where(data[' export-administration-act-south-africa'] == 'n', 1, 0)\ndata['export-administration-act-south-africa_y'] = np.where(data[' export-administration-act-south-africa'] == 'y', 1, 0)","d48739b4":"data = data.drop(cols_to_be_dropped, axis = 1)","754cfccb":"data.head()","ec11a58a":"data.shape","8f4717be":"data.columns","497a28e4":"from sklearn.model_selection import train_test_split","ee1a72a7":"train, test = train_test_split(data, test_size = 0.35, random_state = 42)","586254f2":"train.shape, test.shape","f74d1afc":"X_train = train.drop('Target', axis = 1)\nX_test = test.drop('Target', axis = 1)\ny_train = train['Target']\ny_test = test['Target']","48f2ec18":"X_train.shape, X_test.shape, y_train.shape, y_test.shape","185c2820":"from sklearn.ensemble import RandomForestClassifier","73e650f6":"def gini(list_of_values):\n    sorted_list = sorted(list_of_values)\n    height, area = 0, 0\n    for value in sorted_list:\n        height += value\n        area += height - value \/ 2.\n    fair_area = height * len(list_of_values) \/ 2.\n    return (fair_area - area) \/ fair_area","6631bb72":"def plot_confusion_matrix(y_true, y_pred, title = 'Confusion matrix', cmap=plt.cm.Blues):\n    from sklearn.metrics import classification_report\n    from sklearn.metrics import confusion_matrix\n    print ('Classification Report:\\n')\n    print (classification_report(y_true, y_pred))\n    cm = confusion_matrix(y_true, y_pred)\n    def plot_confusion_matrix_plot(cm, title = 'Confusion matrix', cmap=plt.cm.Blues):\n        plt.imshow(cm, interpolation='nearest', cmap=cmap)\n        plt.title(title)\n        plt.colorbar()\n        tick_marks = np.arange(len(y_test.unique()))\n        plt.xticks(tick_marks, rotation=45)\n        plt.yticks(tick_marks)\n        plt.tight_layout()\n        plt.ylabel('True label')\n        plt.xlabel('Predicted label')\n    print (cm)\n    plot_confusion_matrix_plot(cm=cm)","2178d358":"rf = RandomForestClassifier(criterion = 'gini', \n                            max_depth = 8,\n                            max_features = 'auto',\n                            min_samples_leaf = 0.01, \n                            min_samples_split = 0.01,\n                            min_weight_fraction_leaf = 0.0632, \n                            n_estimators = 1000,\n                            random_state = 50, \n                            warm_start = False)","0d69c43f":"rf.fit(X_train, y_train)","d82b6790":"pred = rf.predict(X_test)","8fed504b":"from sklearn.metrics import accuracy_score, confusion_matrix","dba64a3f":"accuracy_score(pred, y_test)*100","435fcb84":"plot_confusion_matrix(y_test, pred)","18ce340c":"predicted_probs = rf.predict_proba(X_test)","68a2233b":"gini(predicted_probs[:,1])","55cc4ff0":"predicted_probs_train = rf.predict_proba(X_train)","b3cd2503":"gini(predicted_probs_train[:,1])","4ac3a123":"predicted_train = rf.predict(X_train)","a7c86168":"accuracy_score(predicted_train, y_train)","2f524d38":"plot_confusion_matrix(y_train, predicted_train)","8ffeba1c":"### superfund-right-to-sue'","bc71dfdf":"### So this varible presumes that the chances of people with handicapped infants of belonging to Democrats are 83 percent. ","a6269562":"### Gini is slightly lower but it can be improved by changing some hyperparameters or using other powerful algos like XGBoost or GBM Classifiers.","7dc15386":"### Lets see gini","83983b0a":"## All the variables are categorical","412b2d2e":"Another huge support by Dems","1b95f229":"## Lets examine them","d1648cf7":"This is a total republic thing by a landslide","5d38b3bf":"Lets see what are the chances of them being belonging to DEMS","ffd4f177":"###  adoption-of-the-budget-resolution","8c54fb7a":"### synfuels-corporation-cutback","9338505b":"###  education-spending","e0417028":"###  el-salvador-aid","b970e8ba":"### This imbalance is fair enough. But the size of the dataset is pretty small so it might cause some bias at the end but lets see.","9c6c1d03":"### Lets see if the model overfits","e0eaa6e6":"WOW!! Dems dont support education spending much !! Interesting.","29e6489b":"###  This one's pretty stable variable.","83556d95":"#### Analysis completed. Lets move towards making a model","2ee6473a":"### Lets see the confusion matrix","3249fd3b":"### 2. handicapped-infants ","3a05f619":"### 1. Target","1338e3d9":"### immigration","3641034a":"###  anti-satellite-test-ban","f52e600f":"Ohh!! an absolute contrast here","e3987faf":"###  aid-to-nicaraguan-contras","7b2ac792":"Rebulicans 98 percent support to tackle crime while DEMS 36 percent. People of US, yall need to see this man!","4a927fe2":"##### Gini","c3ce303a":"This can be said more or less what favored by both the parties","705701bc":"###  water-project-cost-sharing","4608405b":"### Looks like we are slightly overfitting","a9b51d12":"### What do you think. Which party is doing better and how good is the presentation. Please upvote if you like it. I am open for suggestions and criticism. Throw all the flak at me.","26274f8a":"### physician-fee-freeze","3c306f45":"Massively favored by dems","7a143efc":"Favored by republican more and also by the newutral parties.","30a50e45":"### religious-groups-in-schools","8e9d43c9":"##### Confusion Matrix","16a204e7":"#### Looks like our model scored pretty well on precision and recall areas","691e9e9e":"### crime\n\nThis should be interesting","26c7f8d9":"This is an absolute democrat thing","a23d63e3":"###  mx-missile\n\nI think this should be a Republican favored thing lets see","e906d4bf":"### Well the confusion matrix doesnt suggest so. If anything, the model is performing better on the test set.","f4f2ca20":"###### However, this can be emended by tuning the hyperparameters. I am using very strong parameters and you can lower down the points on each parameter. This would definitely dip the training time. Nevertheless, the model performs fantastic.","2019dcb3":"We have 61 percent of Dems here","794082ce":"### Lets try Random Forest Classifier"}}