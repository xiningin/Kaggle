{"cell_type":{"dced4d12":"code","03d6ff84":"code","95e675e9":"code","45681327":"code","effb0e58":"code","0d3b0b26":"code","4c2ae46a":"code","e99d8ae8":"code","b815d9c6":"code","b057e717":"code","f89376a4":"code","1859abf4":"code","133735e9":"code","f332a3a9":"code","2ce15c3a":"code","a16d5414":"code","69c3e3bf":"code","a25b262a":"code","c07d62cb":"code","0dd80e4a":"code","cc7233de":"code","7d743ffb":"code","1837f97f":"markdown","a43dd44a":"markdown","7653efe9":"markdown","bb66bbfb":"markdown","c6d3ad8d":"markdown","f8efa983":"markdown","a774a2f9":"markdown","e108c7fa":"markdown","37c2c5f7":"markdown","9943db80":"markdown","e76051e1":"markdown","d9dc8467":"markdown","6e2bca61":"markdown","21a431c4":"markdown","1e059df9":"markdown","4ebfa9b0":"markdown","ba435296":"markdown","db29b2d4":"markdown","29ee033e":"markdown","7cf42f07":"markdown","888d7f87":"markdown","f348af24":"markdown","e7370451":"markdown"},"source":{"dced4d12":"import pandas as pd\nimport numpy as np\nimport folium\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#\nfrom sklearn.preprocessing import LabelEncoder\n#\nfrom sklearn.model_selection import train_test_split\n#\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score\n#\nimport warnings\nwarnings.filterwarnings('ignore')\n#\n%matplotlib inline","03d6ff84":"df_ca = pd.read_csv('\/kaggle\/input\/california-housing-prices\/housing.csv')\ndf_ca.head(10)","95e675e9":"latitude = 36.778259\nlongitude = -119.417931\nCA_map= folium.Map(location=[latitude, longitude], zoom_start=6)\n\n\nhouses = folium.map.FeatureGroup()\nfor lat, lng, in zip(df_ca.latitude, df_ca.longitude):\n    houses.add_child(\n        folium.CircleMarker(\n            [lat, lng],\n            radius=5,\n            color='yellow',\n            fill=True,\n            fill_color='blue',\n            fill_opacity=0.6\n            )\n    )\nCA_map.add_child(houses)    ","45681327":"df_ca.shape","effb0e58":"missing_data = df_ca.isnull()\nfor column in missing_data.columns.values.tolist():\n    print(column)\n    print(missing_data[column].value_counts())\n    print('')","0d3b0b26":"df_ca.dropna(inplace=True)","4c2ae46a":"plt.figure(figsize=(12,8))\ndf_ca['median_house_value'].plot(kind='hist', bins=100)\nplt.title('Median House Value')\nplt.xlabel('Median Value')\nplt.ylabel('Number of Houses')\nplt.show()","e99d8ae8":"df_ca.hist(figsize=(30,30), bins=100)\nplt.show()","b815d9c6":"cor = df_ca.corr()\ncor.style.background_gradient()","b057e717":"df_ca.describe()","f89376a4":"df_ca['ocean_proximity'].value_counts()","1859abf4":"df_ca = pd.get_dummies(df_ca,drop_first = True)\ndf_ca = df_ca.drop('ocean_proximity_ISLAND', 1)\ndf_ca.head()","133735e9":"X = df_ca.drop('median_house_value', axis=1)\nY = df_ca['median_house_value']\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=26)","f332a3a9":"print('train set shape: ',x_train.shape)\nprint('test set shape: ', x_test.shape)","2ce15c3a":"print('train set shape: ', y_train.shape)\nprint('test set shaoe: ', y_test.shape)","a16d5414":"models = []\nmodels.append(('Linear Regression', LinearRegression()))\nmodels.append(('Decision Trees', DecisionTreeRegressor()))\nmodels.append(('K Nearest Neighbor',KNeighborsRegressor()))\nmodels.append(('Random Forest Regressor', RandomForestRegressor()))\nresults = []\nnames = []\nfor i, j in models: \n    k = KFold(n_splits=10 , random_state=42)\n    result = cross_val_score(j, x_train,y_train, cv=k, scoring='r2')\n    results.append(result)\n    names.append(i)\n    print('Model: ', i,'Score: %.2f' % result.mean(), \"Model's Standard Deviation: %.2f\" % result.std())","69c3e3bf":"f,ax = plt.subplots(figsize = (14,10))\nsns.boxplot(x=names, y=results,palette='BuGn_r')\nplt.title(\"Comparison between models' accuracy\", fontsize=18, color='green')\nplt.ylabel('Accuracy', fontsize=14,color='blue')\nplt.xlabel('Model',fontsize=14,color='blue')","a25b262a":"RF = RandomForestRegressor()\nRF.fit(x_train,y_train)\n\nyhat = RF.predict(x_test)\nprint('Accuracy of the model: %.2f' % r2_score(y_test, yhat))","c07d62cb":"df = pd.DataFrame({'avg_price': y_test, 'pred': yhat})\ndf1 = pd.DataFrame(x_test)\ndf_pred = df1.join(df)","0dd80e4a":"df_pred['error'] = df_pred['avg_price']- df_pred['pred']\n","cc7233de":"df_co = df_pred[ (df_pred['error'] < 10000) & (df_pred['error']>-10000)]","7d743ffb":"latitude = 36.778259\nlongitude = -119.417931\nCA_map= folium.Map(location=[latitude, longitude], zoom_start=6)\n\n\nhouses = folium.map.FeatureGroup()\nfor lat, lng, in zip(df_co.latitude, df_co.longitude):\n    houses.add_child(\n        folium.CircleMarker(\n            [lat, lng],\n            radius=5,\n            color='yellow',\n            fill=True,\n            fill_color='green',\n            fill_opacity=0.6\n            )\n    )\nCA_map.add_child(houses)    \n","1837f97f":"2. Importing the dataset and loading the first 10 rows of the Dataframe","a43dd44a":"1. Importing Python libraries and packages","7653efe9":"21. Reppresentation on the California map of the houses from the test set with difference between real prices and predicted value less than 10000","bb66bbfb":"18. Joining the test dataset with the actual values and the predictions","c6d3ad8d":"11. Looking at categoriacal variables and getting dummies for the regression","f8efa983":"19. Creating a column with the difference between the 'average house values' and the 'predicted house values'","a774a2f9":"10. Statistical description of the features","e108c7fa":"5. Looking for missing values in the dataset","37c2c5f7":"7. Graphic representation of the Median House Value distribution","9943db80":"9. Correlation between variables","e76051e1":"17. Fitting the model and predicting the prices","d9dc8467":"14. Target sets' shape","6e2bca61":"3. Visualizing the Houses on the map of California using Folium","21a431c4":"The Random Forest Regressor seems to be the best performing one with an R^2 score of 0.82 so it's the model I will use for predicting the prices of the test set","1e059df9":"16. Graphic representation of the four models' accuracy","4ebfa9b0":"6. Dorpping the rows with missing value in the column 'total_bedrooms'","ba435296":"# Predicting California House Prices using Random Forest Regressor","db29b2d4":"20. Selecting only the cases where the difference between predictions and actual values is less than 10000","29ee033e":"8. Histograms from the numerical variables in the dataset","7cf42f07":"13. Predictors sets' shape","888d7f87":"4. Shape of the Dataframe","f348af24":"12. Dividing the data into Predictors and Target( Median House Value) and dividing them into training and testing sets","e7370451":"15. Loading the four models I have choosen for the regression :  Linear Regression, Decision Tree Regressor, K Nearest Neighbours Regessor and Random Forest Regressor. Evaluating every model's performance in order to select the best perfoming one for the prediction"}}