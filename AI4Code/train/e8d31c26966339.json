{"cell_type":{"4197a86b":"code","ea0ec25a":"code","73f24ebd":"code","8a6af1c8":"code","6bc446d1":"code","1b449167":"code","c7543346":"code","ce3c1496":"code","4777f4ae":"code","db04f195":"code","81700557":"code","8012b861":"code","f69fcf84":"code","14f9ca6d":"code","e0d365f7":"code","a94e5d58":"code","1a063cb6":"markdown","022b05c3":"markdown","4416b91f":"markdown","aab6a997":"markdown","497af792":"markdown","1f5000e3":"markdown","d27b4c6d":"markdown","a2b13a74":"markdown","f0d1fb19":"markdown","9abd64f3":"markdown","d4ddaa74":"markdown","6bfc41c4":"markdown","c2eefe7f":"markdown","eaab7dc9":"markdown","848a785f":"markdown","88b0523f":"markdown","f9fa9ce8":"markdown"},"source":{"4197a86b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ea0ec25a":"from pathlib import Path\nimport gc\nimport sys\nimport ipywidgets as widgets\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split","73f24ebd":"data_dir = Path('..\/input\/mlb-player-digital-engagement-forecasting\/')\ntraining = pd.read_csv(data_dir \/ 'train.csv')\n\n# Convert training data date field to datetime type\ntraining['date'] = pd.to_datetime(training['date'], format=\"%Y%m%d\")\n\ndisplay(training.info())","8a6af1c8":"training","6bc446d1":"# Helper function to unpack json found in daily data\ndef unpack_json(json_str):\n    return pd.DataFrame() if pd.isna(json_str) else pd.read_json(json_str)","1b449167":"unpack_json(training['nextDayPlayerEngagement'].iloc[0])","c7543346":"unpack_json(training['games'].iloc[53])","ce3c1496":"unpack_json(training['rosters'].iloc[0])","4777f4ae":"unpack_json(training['playerBoxScores'].iloc[87])","db04f195":"unpack_json(training['teamBoxScores'].iloc[87])","81700557":"unpack_json(training['transactions'].iloc[1])","8012b861":"unpack_json(training['standings'].iloc[87])","f69fcf84":"unpack_json(training['awards'].iloc[14])","14f9ca6d":"unpack_json(training['events'].iloc[87])","e0d365f7":"unpack_json(training['playerTwitterFollowers'].iloc[0])","a94e5d58":"unpack_json(training['teamTwitterFollowers'].iloc[0])","1a063cb6":"# events\nData of events that happened on the field <br>\nThere are quite a lot of dimensions because there is also ball coordinate data etc.","022b05c3":"# awards\nPlayer commendation information <br>\nLooking at the information on this day, since the award Season is 2017 <br>\nIt turns out that it is an award for the 2017 season","4416b91f":"# teamBoxScores\nMatch information for each team <br>\nThe number of games played on that day is different, so the number of lines varies from day to day.","aab6a997":"# nextDayPlayerEngagement\n\u76ee\u7684\u5909\u6570\u3092\u542b\u3093\u3060\u91cd\u8981\u306a\u30c7\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\u3002<br>\nYou will predict traget1~4.","497af792":"# transactions\nPlayer and team transactions <br>\nIf you look at the first line, you can see that it is the trade information of the players.","1f5000e3":"# Func for unpack JSON\nQuoted from a [Startert Notebook](https:\/\/www.kaggle.com\/ryanholbrook\/getting-started-with-mlb-player-digital-engagement)","d27b4c6d":"The date advances by index <br>\nYou can get the JSON data of the specified date by using iloc [number of lines].","a2b13a74":"# playerBoxScores\nPlayer match results <br>\nAggregated for each match <br>\n2018-3-29 is the first data <br>\nYou can see that the regular season started from this day. <br>","f0d1fb19":"# Explanation of train.csv each variable","9abd64f3":"# rosters\nTeam list information <br>\nYou can check information such as injuries and demotion to minors","d4ddaa74":"# Load train.csv","6bfc41c4":"# games\ngame information<br>\nSince the first data is 2018-2-23 and the'gameType'is S from this day, <br>\nYou can see that it contains spring training data. <br>\nAfter that, information such as the regular season is included here.","c2eefe7f":"\u88dc\u8db3\u60c5\u5831\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u3067\u3054\u6307\u6458\u304a\u9858\u3044\u3057\u307e\u3059\u3002","eaab7dc9":"# teamTwitterFollowers\nNumber of followers on the official Twitter account of all 30 teams\n<br> As before, it is updated on the first day of every month","848a785f":"# standings\nTeam ranking information <br>\nThere is data for all 30 teams","88b0523f":"# playerTwitterFollowers\nNumber of Twitter followers of players <br>\nUpdated on the first day of every month","f9fa9ce8":"The purpose is to understand what the characteristics are.<br>\nThis NoteBook is written Japanese.([\u65e5\u672c\u8a9e\u30d0\u30fc\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089](https:\/\/www.kaggle.com\/fumiyakomatsu\/train-csv)) <br>\nAnd I translate through Google translate.<br>\nSo please pardon translate miss."}}