{"cell_type":{"ed79d2fa":"code","84d15f6b":"code","2b2518de":"code","4c5d50f5":"code","24ce5131":"code","f7116525":"code","1ce3def0":"code","33f1c384":"code","6b4f0aed":"code","45880e6e":"code","a2e37b0a":"code","4f1c95d2":"code","289d0ab5":"code","2820966f":"code","ed56f367":"code","529181f4":"code","176088e6":"code","183cc0e2":"code","271216e4":"code","6f7e5e92":"code","e83d6dfe":"code","12fd2841":"code","22578901":"code","3c1074bd":"code","662b5f41":"code","f648a3ae":"code","fefd858f":"code","539d37a1":"code","6ed34554":"code","7c3f5711":"code","37f18145":"code","bd9b6230":"code","61365ea3":"markdown","fbec5715":"markdown","c7c6c8e8":"markdown","965e60fb":"markdown","68880a59":"markdown","69216273":"markdown"},"source":{"ed79d2fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","84d15f6b":"!ls","2b2518de":"import pandas as pd\nimport pandas_profiling as pdp\nimport seaborn as sns\nimport matplotlib.pyplot as plt","4c5d50f5":"pd.options.display.float_format = '{:.2f}'.format #\u6307\u6570\u8868\u8a18\u3092\u5c0f\u6570\u70b9\u7b2c2\u4f4d\u8868\u8a18\u306b\u5909\u66f4","24ce5131":"#DICTIONARY READ TRANSLATE RUSSIAN TO ENGLISH\ndic_shop_EN = pd.read_csv('..\/input\/shop-en-regionadded\/shop_en2.csv')\ndic_shop_EN.head(20)\n","f7116525":"#DICTIONARY TO EN for item categories.\ndic_itemcat_EN = pd.read_csv('..\/input\/shop-en-regionadded\/item_categories_en3.csv',usecols=[0,1,2,3,4,5,6])\ndic_itemcat_EN.head(20)\n","1ce3def0":"sales_train = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\nprint(len(sales_train))\n#ADD SALES AMT\nsales_train[\"Sales AMT\"]= sales_train[\"item_price\"]* sales_train[\"item_cnt_day\"]\n#\u82f1\u8a9e\u540d\u306e\u5e97\u540d\u3092\u8ffd\u8a18 Add En shopname\nsales_train = pd.merge(sales_train, dic_shop_EN, on =\"shop_id\", how=\"left\")\nsales_train.head(10)","33f1c384":"sales_train.tail(10)","6b4f0aed":"sales_train.isnull().sum()","45880e6e":"test = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')\nprint(len(test))\ntest.head(5)","a2e37b0a":"test.tail(5)\ntest.isnull().sum()","4f1c95d2":"item_categories = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nitem_categories.to_csv(\"item_categories.csv\")\nprint(len(item_categories))\nitem_categories.head(5)","289d0ab5":"item_categories.tail(5)","2820966f":"item = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\n#\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u306b\u82f1\u6587\u3092\u8ffd\u52a0\u3002ADD ITEM CAT INTO item df\nitem = pd.merge(item,dic_itemcat_EN, on=\"item_category_id\", how=\"left\")\nprint(len(item))\nitem.head(5)\n","ed56f367":"item.tail(5)","529181f4":"item.isnull().sum()","176088e6":"#\u5e97\u8217\u30c7\u30fc\u30bf\u62bd\u51fa\u7528\u3000shop = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')\n#shop.to_csv(\"shop.csv\")\n#print(len(shop))\n#shop.head(5)","183cc0e2":"#shop.tail(5)\n#shop.isnull().sum()","271216e4":"sales_train = pd.merge(sales_train, item, on =\"item_id\", how=\"left\")\ndelete_columns = ['Column1_y','Column1_x']#\u306a\u305c\u304bshop_id\u3068item_category_id\u304c\u91cd\u8907\u3059\u308b\u306e\u3067\u5217\u524a\u9664\u3002(leftmerge\u306e\u4f7f\u3044\u65b9\u304c\u60aa\u3044\uff09Delete unnecessary columns due to left-merges.\nsales_train.drop(delete_columns, axis=1, inplace=True)\n#Date\u3092YYYYMM\u5358\u4f4d\u306b\u7c21\u6f54\u5316\nsales_train[\"date\"]=pd.to_datetime(sales_train[\"date\"],format='%d.%m.%Y')##Format\u3092\u8ffd\u52a0\u3002(AH\u6307\u6458)\nsales_train[\"date\"]= sales_train[\"date\"].dt.strftime(\"%Y%m\")\n\nprint(len(sales_train))#\u884c\u6570\u306f293,549\u306e\u307e\u307e\u306e\u306f\u305a...Length is originally 293,549.Check.\nsales_train.head(10)","6f7e5e92":"sales_train.tail(10)","e83d6dfe":"\nsales_train.groupby(\"date\").sum()[\"Sales AMT\"]","12fd2841":"sales_train.groupby(\"CATEGORY\",sort=True).sum()[\"Sales AMT\"]","22578901":"sales_train.groupby(\"REGION\", sort=True).sum()[\"Sales AMT\"]","3c1074bd":"#plt.figure(figsize=(20,10))\n#sns.barplot(x='date',y='Sales AMT', data=sales_train, estimator=sum) #\u3053\u308c\u3067SUM\u3092\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\u3000\n\n##x_v=sales_train['item_category_name_EN']#\u3053\u3053\u306b\u6761\u4ef6\u6307\u5b9a\u3059\u308c\u3070\u3001\u3001\u3001\n##y_v=sales_train['Sales AMT']\n##sns.barplot(x=x_v,y=y_v)\n#plt.xticks(rotation=90)","662b5f41":"#Item PrICE GROUP BY DATE AVG# \u4e0a\u306e\u8868\u306e\u602a\u3057\u3055\u691c\u8a3c\uff08\u5358\u4fa1\u306e\u5e73\u5747\u53d6\u3063\u3066\u306a\u3044\uff1f\uff09\nsales_train.groupby(\"date\").mean()[\"item_price\"] #\u2605Sales AMT \u306e\u5e73\u5747\u2605","f648a3ae":"#SALES AMT SUM#\nprint(sales_train['Sales AMT'].sum())#Sales AMT\u7dcf\u5408\u8a08\nprint('----------')\n\n\n#\u3053\u308c\u306f\u3046\u307e\u304f\u3044\u304b\u306a\u3044#sales_train[\"date\"].sum()[[\"shop_id\",\"Sales_AMT\"]]","fefd858f":"#SALES AMT GROUP BY DATE COUNT#\nsales_train.groupby(\"date\").count()[\"Sales AMT\"] #\u2605Sales AMT\u306eCOUNT\u3002\u2605","539d37a1":"#SALES AMT GROUP BY DATE SUM#\nsales_train.groupby(\"date\").sum()[\"Sales AMT\"] #\u2605Sales AMT\u306eSUM\u2605","6ed34554":"#pdp.ProfileReport(sales_train)\n#\u5b9f\u884c\u3059\u308b\u3068\u3001\u3068\u3066\u3082\u91cd\u3044\u3067\u3059\u3002\uff08GPU\u6d6a\u8cbb\uff09SUPER HEAVY WHEN YOU RUN PROFILE REPORT(>GPU Waste)","7c3f5711":"###CSV EXPORT CSV\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3059\u308b\u3068\u304d\u306b\u306f\uff03\u3092\u5916\u3057\u3066\u304f\u3060\u3055\u3044\u3002Delete\"#\" when you export CSV. \"###\n\n#sales_train.to_csv(\"sales_train_EN01.csv\")#DL\u3059\u308b\u3068\uff16\uff10\uff10MB \u8d85\u3048\u306a\u306e\u3067\u6ce8\u610f\u3002VERY HEAVY DATA(>600MB)","37f18145":"#\u5e74\u6708\u5225\u30ab\u30c6\u30b4\u30ea\u5225\u58f2\u4e0a Monthly Sales AMT by item cat.\n#sales_train.groupby([\"date\",\"item_category_name_EN\"]).sum()[\"Sales AMT\"]","bd9b6230":"print(\"SUCCESS\")","61365ea3":"\u2191\u3053\u3053\u307e\u3067 Item   \n       \u3053\u3053\u304b\u3089shop \u2193","fbec5715":"\u2191\u3000\u3053\u3053\u307e\u3067Sales_train\u30c7\u30fc\u30bf\u3000Sales Data\u2191\n\u3000\u3000\u2193\u3053\u3053\u304b\u3089test\u30c7\u30fc\u30bf test data\u2193","c7c6c8e8":"**\u3053\u3053\u304b\u3089sales train\u30c7\u30fc\u30bf\u306e\u691c\u8a3c\u3002\uff08\u30c7\u30fc\u30bf\u9577\u3001\u5192\u982d\u30fb\u672b\u5c3e\u3001\u6b20\u640d\u5024\u306e\u30c1\u30a7\u30c3\u30af\u3001\u7279\u5fb4\u91cf\uff09\nVerifying sales_train data (length, head\/tail, NaN, some characteristics)****","965e60fb":"\u2193\u3053\u3053\u304b\u3089item_categories \u2193","68880a59":"*** **\u2191\u3000\u5e97\u8217\u540d\u306e\u82f1\u6587\u8868\u8a18\u8aad\u307f\u66ff\u3048 \u90fd\u5e02\u540d\u30fb\u30ea\u30fc\u30b8\u30e7\u30f3\u8ffd\u52a0\u3000Conv Russian Shopname to En\u3001 City name, region column added\n**\n\u3000\u3000\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u306e\u82f1\u8a9e\u540d\u8aad\u307f\u66ff\u3048\u3000Change Item Cat from Russian to En\u2193******","69216273":"**DESCRIPTION**\n\nTHIS FILE WILL PROVIDE RUSSIAN TO ENGLISH (GOOGLE) TRANSLATION FOR ITEM CATEGORIES AND SHOP NAMES WITH TOTAL REVENUE(SALES AMT) AND YYYYMM DATA ON sales_train.csv TABLE PROVIDED.\nTO EXTRACT CSV for sales_train.csv after conversion, remove # on kernel. NO MACHINE LEARNING NOR SALES PREDICTION INCLUDED.THANKS.\n"}}