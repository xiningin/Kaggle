{"cell_type":{"e497d9fa":"code","99a53fd0":"code","f9848232":"code","7f681181":"code","12603c67":"code","595f78b2":"code","1b89e25a":"code","4b0bd94b":"code","e88efab1":"code","5b05e666":"code","db805438":"code","c42d07ef":"code","73ea1a77":"code","dfb2efac":"code","1e01cb9d":"code","8f4b1915":"code","040ca24e":"code","4783df93":"code","a7342f51":"code","d9dea809":"code","dcc94935":"code","1b8857ed":"code","8db7b7de":"code","3b10597e":"code","b78f60aa":"code","7d4b1ff0":"code","7dfb9ab9":"markdown","64b6f839":"markdown","93ee6de8":"markdown","f15b4fea":"markdown","b74f1879":"markdown","34222342":"markdown","eab7239a":"markdown","82c1f7e6":"markdown","f9934ed2":"markdown","b620e22e":"markdown","5eb554cc":"markdown","5bc1ac8f":"markdown","b60b0092":"markdown","4344e209":"markdown","e8299e68":"markdown","0cf18041":"markdown","0dc1357a":"markdown","32cf2671":"markdown","841b64dd":"markdown","29a2ef78":"markdown","2fc7fd64":"markdown","450dea6b":"markdown","11ef4443":"markdown","b7fbf8a9":"markdown","db249fa2":"markdown","07585d89":"markdown","5653c9c5":"markdown","705d7e81":"markdown"},"source":{"e497d9fa":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","99a53fd0":"dataset = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\ntest_data = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntrain_data = pd.read_csv(\"..\/input\/titanic\/train.csv\")","f9848232":"train_data.head(10)","7f681181":"train_data.isnull()","12603c67":"sns.heatmap(train_data.isnull())","595f78b2":"sns.distplot(train_data[\"Age\"].dropna(), bins = 80, kde=False, color=\"blue\")","1b89e25a":"sns.set_palette(\"Paired\")\nsns.countplot('SibSp', data=train_data)","4b0bd94b":"sns.set_palette(\"Set3\", 1, .75)\nsns.countplot('Survived', data=train_data)","e88efab1":"sns.set_style(\"whitegrid\")\nsns.countplot(\"Survived\", hue=\"Sex\", data=train_data, palette=\"rainbow\")","5b05e666":"plt.hist(train_data['Fare'], bins = 10, color='brown')","db805438":"plt.figure(figsize=(10,6))\nsns.boxplot(x=train_data[\"Pclass\"], y=train_data[\"Age\"], palette=\"autumn\")","c42d07ef":"def ages(col):\n  Age = col[0]\n  Pclass = col[1]\n  if pd.isnull(Age):\n    if Pclass == 1:\n      return 37\n    elif Pclass == 2:\n      return 29\n    else:\n      return 24\n  else:\n    return Age","73ea1a77":"train_data['Age'] = train_data[['Age', 'Pclass']].apply(ages, axis=1)","dfb2efac":"sns.heatmap(train_data.isnull(), cmap=\"viridis\", yticklabels=False, cbar=False)","1e01cb9d":"train_data.dropna(inplace=True)","8f4b1915":"pd.get_dummies(train_data['Embarked'], drop_first=True)","040ca24e":"sex = pd.get_dummies(train_data['Sex'],drop_first=True)\nembark = pd.get_dummies(train_data['Embarked'],drop_first=True)","4783df93":"train_data.drop(['Name', 'Sex', 'Ticket', 'Embarked', 'Cabin'], axis=1, inplace=True)","a7342f51":"pd.concat([train_data, embark, sex], axis=1)\ntrain_data","d9dea809":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(train_data.drop('Survived', axis=1), train_data['Survived'], \n                                                    test_size=0.2, random_state=0)","dcc94935":"from sklearn.linear_model import LogisticRegression\nregressor = LogisticRegression()\nregressor.fit(X_train, y_train)","1b8857ed":"pred = regressor.predict(X_test)","8db7b7de":"from sklearn.metrics import confusion_matrix, accuracy_score, classification_report","3b10597e":"accuracy = accuracy_score(y_test, pred)\naccuracy","b78f60aa":"conf = confusion_matrix(y_test, pred)\nconf","7d4b1ff0":"print(classification_report(y_test, pred))","7dfb9ab9":"**Confiming our results using Heatmap**","64b6f839":"**Spliting data into Train and Test set**","93ee6de8":"**What we just guessed is right. There are missing values in 2 columns.**","f15b4fea":"**We also noticed there are some Categorical column (Embarked) that should be converted into the Numerical one.**","b74f1879":"**Fare paid by passengers**","34222342":"**Evaluating Classification Report**","eab7239a":"**Pretty Good!**\n**Now getting our way ahead and working on Data Cleaning**","82c1f7e6":"**Confusion Matrix**","f9934ed2":"**Now taking other columns so that we may know insights of that unfortunate incident in a better way.**","b620e22e":"**Training our model**","5eb554cc":"**Importing all the libraries that may be useful in analyzing the insights**","5bc1ac8f":"**Getting function to work**","b60b0092":"**Analyzing Ages of passengers**","4344e209":"**Using heatmap, we will analyze missing values in training data**","e8299e68":"**Accuracy**","0cf18041":"**Now back to business; we will focus on visualizing on survivals in the Titanic. For that now we will make some plots for our better understanding.**","0dc1357a":"**Survival vs. Gender**","32cf2671":"**Predictions**","841b64dd":"**Survival**","29a2ef78":"**After importing; now we will take train data and analyze it**","2fc7fd64":"**Importing dataset(s)**","450dea6b":"**Moving towards Machine Learning model development**","11ef4443":"**We will focus on missing values now and we are trying to fill them now by taking the average of Passengers' ages. We will now narrow our search area by focusing on Passengers' class in Titanic**","b7fbf8a9":"**We saw some missing data; so time to find it out**","db249fa2":"**Dropping above columns so that we can simplify and move on to ML**\n\n---\n\n","07585d89":"**The boxplot results show us that the passengers with older ages were in higher Class(es). So we using a user-defined function we will now make sure we use right Pclass on ages.**","5653c9c5":"**Importing libraries for testing accuracy of our model**","705d7e81":"*The columns mainly Cabin and somewhat also Age has missing values.*"}}