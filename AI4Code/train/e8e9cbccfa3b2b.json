{"cell_type":{"b7f89b93":"code","a5823a30":"code","ed3dafdb":"code","9fcf7ca9":"code","f6ff948b":"code","76f26cda":"code","fbf50470":"code","20659510":"code","afea3c01":"code","e85eefdd":"code","457a5860":"code","35bcf619":"code","7bdec8fd":"code","93126e07":"code","0c1b4cf6":"code","c58069f6":"markdown","0245edf5":"markdown","5f5740e1":"markdown","0d4451dc":"markdown","d58bdf48":"markdown","af06e658":"markdown","7c021422":"markdown","a03fb989":"markdown","2a574789":"markdown","54d08371":"markdown"},"source":{"b7f89b93":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nfrom scipy.stats import boxcox\nimport math\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a5823a30":"df = pd.read_csv(\"..\/input\/datasetwine\/wine.csv\")","ed3dafdb":"df.head(10)","9fcf7ca9":"df.describe()","f6ff948b":"df.info()","76f26cda":"y = df['quality']\nx = df.drop([\"quality\"], axis = 1)\nx_array = x.to_numpy","fbf50470":"for col in x:\n  sns.displot(data=x, x=col, kde=True)","20659510":"x.isnull().sum()","afea3c01":"pd.set_option(\"max_row\", 8000)\nx.shape\nx_red = x.copy()\nx_white=x.copy()","e85eefdd":"#filter for red wine\nfilter_red = x_red[\"color\"] == \"red\"\nx_red.where(filter_red, inplace=True)\nprint(x_red.isnull().sum())\nx_red.dropna(axis=0, inplace=True)\nprint(x_red.shape)","457a5860":"#filter for white wine\nfilter_white = x_white[\"color\"] == \"white\"\nx_white.where(filter_white, inplace=True)\nx_white.head(8000)\nprint(x_white.isnull().sum())\nx_white.dropna(axis=0, inplace=True)\nprint(x_white.shape)","35bcf619":"x_red_sample_pH = x_red[\"pH\"]\nx_white_sample_pH = x_white[\"pH\"]\nx_red_sample_pH = x_red_sample_pH.sample(n=1000)\nx_white_sample_pH = x_white_sample_pH.sample(n=1000)","7bdec8fd":"import scipy\nscipy.stats.ttest_ind(x_red_sample_pH, x_white_sample_pH)","93126e07":"xf = df.to_numpy()\n\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nohe = OneHotEncoder()\nct = ColumnTransformer(transformers=[('encode', OneHotEncoder(),[11])], remainder='passthrough')\nxff = ct.fit_transform(xf)","0c1b4cf6":"xff.shape","c58069f6":"# Split the data into two data sets red set and white set","0245edf5":"***OneHot Encoding***","5f5740e1":"# Hypothesis Testing on Win Data Set","0d4451dc":"***Looking for the Null Value***","d58bdf48":"> as we can see from the result above the number of columns become 14, resulting from the OneHot encoding on the color feature.","af06e658":"# Formulating the Null Hypothesis\n**H0 The red wine's acidity is similar to the white wine acidity**","7c021422":"> as we can see the P-Value < 0.05  => reject H0 => the pH of red wine is diffrent than the pH of the white wine","a03fb989":"***Split the data into DV and IV***","2a574789":"***Import the data and visualise it as table***","54d08371":"# Visualise the data using displot"}}