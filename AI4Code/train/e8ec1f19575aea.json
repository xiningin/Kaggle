{"cell_type":{"07a6d861":"code","84a47438":"code","b6e12221":"code","8d864632":"code","bb00fa3f":"code","54de0a83":"code","e92d8be9":"code","3e43f1d1":"code","6f65294b":"code","44e7f470":"code","e00bc695":"code","b0bf209b":"code","6ac2ad79":"code","c9411b6a":"code","be5f6c09":"code","4522469f":"code","a9cd823e":"code","c0307876":"code","53b6b11d":"code","7be78e3e":"code","92ed9780":"code","2b32367e":"code","e8186872":"code","f8781543":"code","77a5d6fa":"code","50e2924f":"code","21fca89d":"code","12d18ce8":"code","509b5e78":"code","8744c89f":"code","73687ce0":"code","778666d5":"code","43de9dca":"markdown","5aac11c8":"markdown","9218187a":"markdown","971a1d35":"markdown","1aa49f02":"markdown","b28d93d4":"markdown","57f19380":"markdown"},"source":{"07a6d861":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","84a47438":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","b6e12221":"real_estate=pd.read_csv(\"..\/input\/real-estate-price\/real_estate_price_size_year_view.csv\")","8d864632":"real_estate.head(5)","bb00fa3f":"real_estate.describe()","54de0a83":"real_estate.info()","e92d8be9":"real_estate.shape","3e43f1d1":"plt.figure(figsize=(20,15))\nsns.pairplot(real_estate)\nplt.show()","6f65294b":"plt.figure(figsize=(20,15))\nplt.subplot(1,2,1)\nsns.boxplot(x='year',y='price',data=real_estate)\nplt.subplot(1,2,2)\nsns.boxplot(x='view',y='price',data=real_estate)\nplt.show()","44e7f470":"plt.figure(figsize=(20,12))\nsns.heatmap(real_estate.corr())\nplt.show()","e00bc695":"real_estate['view']=real_estate['view'].map({'No sea view':0, 'Sea view':1})","b0bf209b":"real_estate['year']=real_estate['year'].astype(\"category\")","6ac2ad79":"year=pd.get_dummies(real_estate['year'],drop_first=True)","c9411b6a":"real_estate=pd.concat([real_estate,year],axis=1)","be5f6c09":"real_estate.drop(['year'],axis=1,inplace=True)","4522469f":"real_estate.head(5)","a9cd823e":"from sklearn.model_selection import train_test_split","c0307876":"df_train,df_test=train_test_split(real_estate,test_size=0.2,random_state=42)","53b6b11d":"df_train.head(5)","7be78e3e":"from sklearn.preprocessing import MinMaxScaler\nscaler=MinMaxScaler()","92ed9780":"num_vars=['price','size']","2b32367e":"df_train[num_vars].head(5)","e8186872":"df_train[num_vars] = scaler.fit_transform(df_train[num_vars])","f8781543":"df_test[num_vars] = scaler.transform(df_test[num_vars])","77a5d6fa":"df_train.head(5)","50e2924f":"y_train=df_train.pop('price')\nX_train=df_train","21fca89d":"from sklearn.linear_model import LinearRegression\nlm=LinearRegression()\nmodel=lm.fit(X_train,y_train)","12d18ce8":"y_train_pred=model.predict(X_train)","509b5e78":"from sklearn.metrics import r2_score\nr2_score(y_train,y_train_pred)","8744c89f":"y_test=df_test.pop('price')\nX_test=df_test","73687ce0":"y_test_pred=model.predict(X_test)","778666d5":"r2_score(y_test,y_test_pred)","43de9dca":"## EDA","5aac11c8":"# Data Exploration and Cleaning ","9218187a":"## Checking model accuracy on test data set","971a1d35":"## Spliting the data set for train and test and doing sclaing","1aa49f02":"# Creating the Linear Regression Model","b28d93d4":"## Creating Dummy","57f19380":"# Real Estate Price Prediction using Linear Regression \n\nYou are given a real estate dataset.\n\nReal estate is one of those examples that every regression course goes through as it is extremely easy to understand and there is a (almost always) certain causal relationship to be found.\n\nThe data is located in the file: 'real_estate_price_size_year_view.csv'.\n\nWe are expected to create a multiple linear regression, using the new data.\n\nIn this exercise, the dependent variable is 'price', while the independent variables are 'size', 'year', and 'view'."}}