{"cell_type":{"0ff6644c":"code","3c1f4652":"code","1f336523":"code","73f016bf":"code","c097eea2":"code","56f5c0e7":"code","014d7818":"code","84e335a7":"code","15b1f6bb":"code","4c2da804":"code","2ed5fef7":"code","b9fc71ef":"code","f5290d24":"code","69890e4d":"code","5cbc40d4":"code","7695f34a":"code","a477479d":"code","19d0bdea":"code","f23bc255":"markdown"},"source":{"0ff6644c":"import numpy as np; print('numpy Version:', np.__version__)\nimport pandas as pd; print('pandas Version:', pd.__version__)\nimport xgboost as xgb; print('XGBoost Version:', xgb.__version__)\nfrom sklearn.model_selection import train_test_split","3c1f4652":"# read data\ntrain = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/train.csv\")\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/test.csv\")","1f336523":"# train data\ntrain = train.drop(['id'], axis=1)\ntrain","73f016bf":"# test data\ntest = test.drop([\"id\"], axis=1)\ntest","c097eea2":"features_col = train.columns \ntrain[features_col].select_dtypes(exclude=['int64']).columns","56f5c0e7":"X = train[features_col]\ny = train['target']\n\nX_train, X_validation, y_train, y_validation = train_test_split(X, y, test_size=0.33, random_state=42)","014d7818":"# check dimensions\nprint('X_train: ', X_train.shape, X_train.dtype, 'y_train: ', y_train.shape, y_train.dtype)\nprint('X_validation', X_validation.shape, X_validation.dtype, 'y_validation: ', y_validation.shape, y_validation.dtype)\n\n# check the proportions\ntotal = X_train.shape[0] + X_validation.shape[0]\nprint('X_train proportion:', X_train.shape[0] \/ total)\nprint('X_validation proportion:', X_validation.shape[0] \/ total)","84e335a7":"%%time\n\ndtrain = xgb.DMatrix(X_train, label=y_train)\ndvalidation = xgb.DMatrix(X_validation, label=y_validation)","15b1f6bb":"xgb_prams = {'learning_rate': 0.010278270092400477, 'reg_lambda': 92.72404085345757, \n 'reg_alpha': 4.3381312346360553e-07, 'subsample': 0.6098232053124079, 'colsample_bytree': 0.26782224124790555,\n 'max_depth': 8, 'early_stopping_rounds': 389, 'n_estimators': 15000}","4c2da804":"\n# instantiate params\nparams = {}\n\n# general params\ngeneral_params = {'silent': 1, 'reg_lambda': 92.72404085345757, \n 'reg_alpha': 4.3381312346360553e-07, 'subsample': 0.6098232053124079, 'colsample_bytree': 0.26782224124790555,\n 'max_depth': 8, 'early_stopping_rounds': 389, 'n_estimators': 15000}\nparams.update(general_params)\n\n# booster params\nn_gpus = 1\neta = 0.010278270092400477\nbooster_params = {}\n\nif n_gpus != 0:\n    booster_params['tree_method'] = 'gpu_hist'\n    booster_params['predictor'] = 'gpu_predictor'\n    booster_params['n_gpus'] = n_gpus\n    booster_params['eta'] = eta\nparams.update(booster_params)\n\n# learning task params\nlearning_task_params = {'eval_metric': 'auc', 'objective': 'binary:logistic'}\nparams.update(learning_task_params)\nprint(params)","2ed5fef7":"# model training settings\nevallist = [(dvalidation, 'validation'), (dtrain, 'train')]\nnum_round = 10","b9fc71ef":"%%time\n\nbst = xgb.train(params, dtrain, num_round, evallist)","f5290d24":"# test.drop([\"target\"], axis=1)\ntest[\"target\"] = np.nan\ntest","69890e4d":"# prepare test\n\ndtest = xgb.DMatrix(data=test)","5cbc40d4":"test_preds = bst.predict(dtest)","7695f34a":"sample_submission = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/sample_submission.csv\")","a477479d":"sample_submission = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/sample_submission.csv\")\nsample_submission.target = test_preds\nsample_submission.to_csv(\"submission.csv\", index=False)","19d0bdea":"sample_submission","f23bc255":"### Dimention"}}