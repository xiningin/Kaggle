{"cell_type":{"888ac1af":"code","47d575f7":"code","51226c4b":"code","6b1432ff":"code","92534ba4":"code","b400b23c":"code","e77ba457":"code","00ba8d2d":"code","822affbb":"code","2fa714b7":"code","e962b183":"code","56d43528":"code","a98758e7":"markdown","7873e6a0":"markdown","e5a48a07":"markdown","20f094b2":"markdown","a92da3d3":"markdown","80e632ba":"markdown","a6a8281c":"markdown","c406028d":"markdown","0a0e9dcc":"markdown","e5421099":"markdown"},"source":{"888ac1af":"import numpy as np\nimport matplotlib.pyplot as plt\nimport folium\nfrom folium import plugins\nfrom folium.plugins import HeatMap\nimport seaborn as sns\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","47d575f7":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","51226c4b":"# Chancing the column elements with the follows (just for the good look)\n\ntrain['Survived'] = np.where(train['Survived'] == 1, 'Survived', 'Dead')\ntrain.loc[(train.Pclass == 3), 'Pclass'] = 'Third Class'\ntrain.loc[(train.Pclass == 2), 'Pclass'] = 'Second Class'\ntrain.loc[(train.Pclass == 1), 'Pclass'] = 'First Class'\ntrain['Sex'] = np.where(train['Sex'] == 'male', 'Male', 'Female')\n","6b1432ff":"train.head()","92534ba4":"# Embark towns of the Titanic Passengers\nplt.figure(figsize=(15,8))\nsplot = sns.countplot(data=train, x='Embarked')\nplt.ylabel(\"Number of the Passengers\", fontsize=12)\nplt.xlabel(\"Embark Towns\", fontsize=12)\nplt.title(\"Embark Towns of the Titanic Passengers\", fontsize=16)\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\n","b400b23c":"# Gender Distribution of the Titanic Passengers\nplt.figure(figsize=(15,8))\nsplot = sns.countplot(data=train, x='Sex')\nplt.ylabel(\"Number of the Passengers\", fontsize=12)\nplt.xlabel(\"Genders\", fontsize=12)\nplt.title(\"Gender Distribution of the Titanic Passengers\", fontsize=16)\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')","e77ba457":"# Survival Distribution of the Titanic Passengers\nplt.figure(figsize=(15,8))\nsplot = sns.countplot(data=train, x='Survived')\nplt.ylabel(\"Number of the Passengers\", fontsize=12)\nplt.title(\"Survival Distribution of the Titanic Passengers\", fontsize=16)\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')","00ba8d2d":"# Class Distribution of the Titanic Passengers\nplt.figure(figsize=(15,8))\nsplot = sns.countplot(data=train, x='Pclass')\nplt.ylabel(\"Number of the Passengers\", fontsize=12)\nplt.title(\"Class Distribution of the Titanic Passengers\", fontsize=16)\n        \nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')","822affbb":"# Age Distribution of the Titanic Passengers\nplt.figure(figsize=(15,8))\nsns.countplot(data=train, x='Age')\nplt.ylabel(\"Number of the Passengers\", fontsize=12)\nplt.xticks(rotation=90)\nplt.title(\"Age Distribution of the Titanic Passengers\", fontsize=16)","2fa714b7":"count_towns = train.groupby(\n    pd.Grouper(key='Embarked')).size().reset_index(name='count')\n\nlatitude_embark = ['50.897', '49.6423', ' 51.84914']\nlongitude_embark = ['-1.404', '-1.62551', '-8.2975265']\n\ncount_towns['latitude_embark'] = latitude_embark\ncount_towns['longitude_embark'] = longitude_embark\n\nm = folium.Map([49.922935, -6.068136], zoom_start=6, width='%100', height='%100')\n\nheat_data = count_towns.groupby([\"latitude_embark\", \"longitude_embark\"])['count'].mean().reset_index().values.tolist()\nfolium.plugins.HeatMap(heat_data).add_to(m)\nm","e962b183":"# Plotly application for interactive visualization \n\nfig = px.sunburst(data_frame=train, # Our dataset\n                  path=[\"Pclass\", \"Sex\", \"Survived\"],  # Root, Branches, Leaves\n                  color=\"Pclass\",\n                  color_discrete_map={'First Class': 'rgb(246,207,113)',\n                                      'Second Class': 'rgb(248,156,116)',\n                                      'Third Class': 'rgb(102,197,204)'},  # Colours (could be changed easily)\n                  maxdepth=-1,\n                  branchvalues='total',\n                  hover_name='Pclass',  # Hover name for chosen column\n                  hover_data={'Pclass': False},\n                  title='Visualization of the Titanic Dataset', template='ggplot2'# Title and the template \n                  )\n\nfig.update_traces(textinfo='label+percent parent')\nfig.update_layout(font=dict(size=16))\nfig.show()","56d43528":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntrain['Sex'] = np.where(train['Sex'] == 'male', 1, 0) # 1 = Male and 0 = Female for this scenario\n\nplt.figure(figsize=(15,8))\nheatmap = sns.heatmap(train.corr(), vmin=-1, vmax=1, annot=True)\nheatmap.set_title('Correlation Graph of the Training Dataset', fontdict={'fontsize': 24})\n","a98758e7":"# After the basic data customizations, the Train Dataset:","7873e6a0":"# Plotly Sunburst Visualization of the Titanic Passengers\nAs you can see from the visualization below, the Female survival rate is higher for the First Class. Unfortunately, when the Class is decreased, the Female survival rate is decreasing.\n\nThe Third Class passengers have the majority on the Titanic and the number of Second and First class passenger are close to each other.\n\n(This visualization is interactive, you can click the desired Class and Sex for more information. It is also available for you to see how many passengers are covered by this specific area.)","e5a48a07":"# Seaborn Visualization of the Train Dataset\n","20f094b2":"As you can see from the plot, the most of the passengers are embarked from the 'S' which indicates the Southamton. And following town is 'C' Cherbourg. Finally, 'Q' is represents that the Queenstown. ","a92da3d3":"# Reading the Train and Test Datasets","80e632ba":"# Chancing the column elements with the follows (just for the good look)","a6a8281c":"# Importing the Python Libraries","c406028d":"# Correlation Analysis of the Dataset\n\nIt is easy to see the relation between the survive vs class and sex from the sunburst plot but, let's see check the correlation graph of the dataset.","0a0e9dcc":"# Heatmap of the Titanic Embark Towns \nAs you can see from the map below, the high majority of the passengers are embarked from Southampton. The number of embarked passengers is close to two other towns.","e5421099":"As you can see from the Correlation Graph of the Training Dataset, the Survive is slightly correlated with the Pclass. As seen from the Sunburst graph, it makes sense. \n\nFor the Survive and Sex analysis, these two features have a negative correlation. This is because of my assignment which is the '1 = Male and 0 = Female'. So, we can say that when the Survive is increasing, the Sex is decreasing strongly. That means the female survival is pretty high for this scenario. It makes sense due to the Sunburst plot above. As seen from the Sunburst plot, for the First and Second class passengers, the survival rate is pretty high for females. \n\nIt is also clear that the Parch and Survive have almost no relationship between them.\n\nAnd, we can also observe that the Pclass and Fare have a negative correlation. It makes sense again because when the Fare increases, the ticket class increases to First Class ticket.\n\nThis analysis would help me to choose the best features for my Artificial Neural Network (ANN) model."}}