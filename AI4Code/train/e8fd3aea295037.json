{"cell_type":{"4d790355":"code","d12f099e":"code","721c1a6b":"code","41737995":"code","a046653f":"code","1bd2688a":"code","8e483eb5":"code","eb17e214":"code","91657640":"code","9b2baa80":"code","1cdd902a":"code","dddaa512":"code","3861853b":"code","e7521661":"code","780eda6a":"code","acdeab05":"code","f18d15c8":"markdown","79dfedb7":"markdown","38c6bf09":"markdown","c8134f9b":"markdown","86886bea":"markdown","e7b8e305":"markdown","b883e781":"markdown","c197ec88":"markdown","6bbf2318":"markdown"},"source":{"4d790355":"!pip install ludwig==0.3.3 -q","d12f099e":"!pip freeze > requirements.txt","721c1a6b":"from ludwig.api import LudwigModel\nfrom ludwig.visualize import learning_curves\nimport yaml","41737995":"import random\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# plt\nimport matplotlib.pyplot as plt\n#\u0443\u0432\u0435\u043b\u0438\u0447\u0438\u043c \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432\nfrom pylab import rcParams\nrcParams['figure.figsize'] = 10, 5\n#\u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u0432 svg \u0432\u044b\u0433\u043b\u044f\u0434\u044f\u0442 \u0431\u043e\u043b\u0435\u0435 \u0447\u0435\u0442\u043a\u0438\u043c\u0438\n%config InlineBackend.figure_format = 'svg' \n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a046653f":"DATA_PATH = '\/kaggle\/input\/sf-dl-movie-genre-classification\/'\nPATH      = '\/kaggle\/working\/'","1bd2688a":"train = pd.read_csv(DATA_PATH+'train.csv',)","8e483eb5":"train.head()","eb17e214":"train.info()","91657640":"train.genre.value_counts().plot(kind='bar',figsize=(12,4),fontsize=10)\nplt.xticks(rotation=60)\nplt.xlabel(\"Genres\",fontsize=10)\nplt.ylabel(\"Counts\",fontsize=10)","9b2baa80":"test = pd.read_csv(DATA_PATH+'test.csv',)\ntest.head()","1cdd902a":"config = {\n    \"input_features\": [\n        {\n            \"name\": \"text\",\n            \"type\": \"text\",\n            'encoder': 'bert',\n        }\n    ],\n    \"output_features\": [\n        {\n            \"name\": \"genre\",\n            \"type\": \"category\",\n        }\n    ],\n    'training': {\n        'batch_size': 32,\n        'decay': True,\n        'trainable': True,\n        'learning_rate': 0.0001,\n        'epochs': 4\n    }\n    \n}","dddaa512":"bert = LudwigModel(config, logging_level=50,)","3861853b":"%%time\nprint(\"Training Model...\")\ntrain_stats_bert, _, _ = bert.train(\n    train,   \n    model_name='bert',\n    skip_save_processed_input=True,\n    random_seed=42\n    )","e7521661":"predictions, _ = bert.predict(test)","780eda6a":"predictions","acdeab05":"submission = pd.DataFrame({'id':range(1, len(predictions)+1),\n                           'genre':predictions['genre_predictions'].values},\n                          columns=['id', 'genre'])\nsubmission.to_csv('submission.csv', index=False)\nsubmission.head()","f18d15c8":"### \u0414\u043b\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447\u044c \u0432 DL \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u0433\u043e\u0442\u043e\u0432\u044b\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u0441\u043a\u043e\u0440\u044f\u044e\u0442 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0441 \u0445\u043e\u0440\u043e\u0448\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c.\n![](https:\/\/www.meme-arsenal.com\/memes\/0eb7d7ba093f7a61409127282e0d4f1b.jpg)","79dfedb7":"Ludwig \"\u0440\u043e\u0434\u0438\u043b\u0441\u044f\" \u0432 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 Uber \u0438 \u0435\u0433\u043e \u0444\u0438\u0448\u043a\u0430: \u0447\u0442\u043e \u0432\u0441\u0435 \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u0442\u044c\u0441\u044f \u043d\u0430 yaml \u043a\u043e\u043d\u0444\u0438\u0433\u0430\u0445. \u0422\u0435 \u043e\u0431\u0435\u0449\u0430\u044e\u0442, \u0447\u0442\u043e \u043a\u0438\u0434\u0438\u0442\u044c \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 \u043d\u0443\u0436\u043d\u043e:    \n> Ludwig is a toolbox built on top of TensorFlow that allows users to train and test deep learning models without the need to write code.","38c6bf09":"# MODEL \n\u0441\u0442\u0440\u043e\u0438\u043c \u0441\u0432\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u044b\u0432\u0430\u044f\u0441\u044c \u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 [https:\/\/ludwig-ai.github.io\/ludwig-docs\/examples\/](https:\/\/ludwig-ai.github.io\/ludwig-docs\/examples\/)","c8134f9b":"### TEST","86886bea":"# \u0427\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u0447\u0442\u043e\u0431 \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:\n* \u041f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u043e\u0444\u0438\u0446\u0430\u043b\u044c\u043d\u0443\u044e [\u0434\u043e\u043a\u0443](https:\/\/ludwig-ai.github.io\/ludwig-docs\/)\n* \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0432 \u043c\u043e\u0434\u0435\u043b\u044c\n* \u041f\u043e\u0434\u043e\u0431\u0440\u0430\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 [\u043c\u043e\u0434\u0435\u043b\u0438](https:\/\/ludwig-ai.github.io\/ludwig-docs\/user_guide\/#bert-encoder)\n* \u041f\u043e\u0434\u043e\u0431\u0440\u0430\u0442\u044c \u043f\u043e\u043b\u0438\u0442\u0438\u043a\u0443 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f","e7b8e305":"\u041d\u0435\u043c\u043d\u043e\u0433\u043e \u043f\u043e\u0433\u0443\u0433\u043b\u0438\u0432 \u0438 \u043f\u043e\u0441\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u044f \u043a\u043e\u043b\u043b\u0435\u0433 \u044f \u043d\u0430\u0448\u0435\u043b \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u043f\u043e\u0434 \u043d\u0430\u0448\u0443 \u0437\u0430\u0434\u0430\u0447\u0443 \u0441 \u0443\u0436\u0435 \u043f\u0440\u0435\u0434\u043e\u0431\u0443\u0447\u0435\u043d\u044b\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0441\u043e \u0441\u0432\u043e\u0438\u043c\u0438 \u043e\u0431\u0435\u0440\u0442\u043a\u0430\u043c\u0438 \u0438 \u0433\u043e\u0442\u043e\u0432\u044b\u043c\u0438 \u043f\u0435\u043f\u043b\u0430\u0439\u043d\u0430\u043c\u0438.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:\n\n* [https:\/\/finetune.indico.io](https:\/\/finetune.indico.io)\n* [https:\/\/github.com\/huggingface\/pytorch-transformers](https:\/\/github.com\/huggingface\/pytorch-transformers)\n* [https:\/\/github.com\/deepset-ai\/FARM](https:\/\/github.com\/deepset-ai\/FARM)\n* [https:\/\/github.com\/kaushaltrivedi\/fast-bert](https:\/\/github.com\/kaushaltrivedi\/fast-bert)\n* [https:\/\/github.com\/amaiya\/ktrain](https:\/\/github.com\/amaiya\/ktrain)\n* [https:\/\/github.com\/ludwig-ai\/ludwig\/tree\/master](https:\/\/github.com\/ludwig-ai\/ludwig\/tree\/master)\n\n\u0421 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0438 \u043f\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0447\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c...\n\n","b883e781":"# Data\n#### TRAIN","c197ec88":"# \u0418\u0442\u043e\u0433\u043e:\n### \u0412\u043e\u0442 \u0442\u0430\u043a c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043a\u043e\u0434\u043e\u043c \u0438\u043c\u0435\u0435\u043c \u043b\u0443\u0447\u0448\u0435\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435! \n\n\n![](https:\/\/memchik.ru\/images\/mems\/5c3d8f1ee1915.jpg)","6bbf2318":"\u0412 Ludwig \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0433\u043e\u0442\u043e\u0432\u044b\u0445 \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u043f\u043e\u0434 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u0442\u0435\u043a\u0441\u0442\u0430.  \n\u0411\u0435\u0440\u0435\u043c BERT \u0442\u043a \u0441\u0435\u0439\u0447\u0430\u0441 \u044d\u0442\u0430 \u043e\u0434\u043d\u0430 \u0438\u0437 \u043b\u0443\u0447\u0448\u0438\u0445 \u044f\u0437\u044b\u043a\u043e\u0432\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439: [https:\/\/habr.com\/ru\/post\/436878\/](https:\/\/habr.com\/ru\/post\/436878\/)\n\n[\u0418 \u0435\u0449\u0435 \u0441\u0442\u0430\u0442\u044c\u044f \u0441 Ludwig \u0433\u0434\u0435 \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044e\u0442 \u043c\u043e\u0434\u0435\u043b\u0438](https:\/\/medium.com\/ludwig-ai\/the-complete-guide-to-sentiment-analysis-with-ludwig-part-ii-d9f3952a06c6)\n<img src=\"http:\/\/www.aitimes.kr\/news\/photo\/201901\/13117_13465_1541.jpg\" width=\"600\">"}}