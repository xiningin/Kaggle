{"cell_type":{"7511ff03":"code","15cf6ac2":"code","d024265c":"code","8c5accce":"code","1471d689":"code","fde4e0ac":"code","2ab5a32f":"code","7e4ac56f":"code","999cff50":"code","3b9955e0":"code","f037c585":"code","bf02cebe":"code","082da996":"code","9dc67406":"code","da494853":"code","8be929b0":"code","f6492df4":"code","ac189bc4":"code","51d0f2f6":"code","e304172c":"code","36ca4832":"code","18dd4e11":"code","77be978c":"code","0f9cd0a0":"code","9091abd5":"code","e8b20c65":"markdown"},"source":{"7511ff03":"import pandas as pd\nimport numpy as np","15cf6ac2":"# path = '\/content\/sample_data\/california_housing_test.csv'\nhousing =  pd.read_csv(\"..\/input\/california-housing-prices\/housing.csv\")","d024265c":"housing.columns","8c5accce":"housing.isna().sum()","1471d689":"housing.describe()","fde4e0ac":"housing[\"income_cat\"] = pd.cut(housing[\"median_income\"] , bins = [0 , 1.5 , 3.0 , 4.5 , 6 , np.inf] , \n                          labels=[1 , 2 , 3 , 4 , 5])","2ab5a32f":"housing[\"rooms_per_household\"] = housing[\"total_rooms\"]\/housing[\"households\"]\nhousing[\"bedrooms_per_room\"] = housing[\"total_bedrooms\"]\/housing[\"total_rooms\"]\nhousing[\"population_per_household\"]=housing[\"population\"]\/housing[\"households\"]","7e4ac56f":"from sklearn.model_selection import StratifiedShuffleSplit\n\nsplit = StratifiedShuffleSplit(n_splits= 1 , test_size= 0.2 , random_state=42)\nfor train_index, test_index in split.split(housing, housing[\"income_cat\"]):\n    strat_train_set = housing.loc[train_index]\n    strat_test_set = housing.loc[test_index]","999cff50":"housing_label = strat_train_set[['median_house_value']]\ntrain_set = strat_train_set.drop(['total_rooms',\n       'total_bedrooms', 'population', 'households','median_income','median_house_value','ocean_proximity'],axis = 1)","3b9955e0":"train_set.count()","f037c585":"cros = train_set.corr()","bf02cebe":"import numpy as np; np.random.seed(0)\nimport seaborn as sns; sns.set_theme()\nax = sns.heatmap(cros, annot=True)","082da996":"from sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.impute import SimpleImputer\nnum_pipeline = Pipeline([\n ('imputer', SimpleImputer(strategy=\"median\")),\n ('std_scaler', StandardScaler()),\n ])\n# housing_train = num_pipeline.fit_transform(train_set)","9dc67406":"from sklearn.compose import ColumnTransformer\nnum_attribs = list(train_set)\nfull_pipeline = ColumnTransformer([\n (\"num\", num_pipeline, num_attribs),\n ])\n\nhousing_prepared = full_pipeline.fit_transform(train_set)","da494853":"housing_prepared","8be929b0":"from sklearn.linear_model import LinearRegression\n\nlin_reg = LinearRegression()\nlin_reg.fit(housing_prepared  , housing_label)","f6492df4":"from sklearn.tree import DecisionTreeRegressor\n\ntree_reg = DecisionTreeRegressor()\ntree_reg.fit(housing_prepared , housing_label)","ac189bc4":"test_label = strat_test_set[['median_house_value']]\ntest_set = strat_test_set.drop(['total_rooms',\n       'total_bedrooms', 'population', 'households','median_income','median_house_value','ocean_proximity'],axis = 1)","51d0f2f6":"X_test_prepared = full_pipeline.transform(test_set)\nfinal_predictions= tree_reg.predict(X_test_prepared)","e304172c":"from sklearn.metrics import mean_squared_error\nfinal_mse = mean_squared_error(test_label , final_predictions)\nfinal_rmse = np.sqrt(final_mse)\n\nprint(final_rmse)","36ca4832":"from sklearn.metrics import mean_squared_error\nfinal_mse = mean_squared_error(test_label , final_predictions)\nfinal_rmse = np.sqrt(final_mse)\n\nprint(final_rmse)","18dd4e11":"test_label['median_house_value'].mean()","77be978c":"((208904-46272)\/208904)*100","0f9cd0a0":"print(\"RMSE\",np.log(np.sqrt(mean_squared_error(test_label , final_predictions))))","9091abd5":"from sklearn.metrics import r2_score\nr2 = r2_score(test_label , final_predictions)\nprint(r2)","e8b20c65":"LOGISTIC"}}