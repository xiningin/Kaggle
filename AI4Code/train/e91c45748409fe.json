{"cell_type":{"72e38af4":"code","a855d747":"code","a698c589":"code","640351ec":"code","24fade3d":"code","7d799c59":"code","ff66836b":"code","b8f5334a":"code","bd74cc71":"code","b11365a5":"code","31be77e9":"code","9574509f":"code","7ef1473b":"code","d0831e0b":"markdown","d6b3d0b9":"markdown","40da19b8":"markdown","72874d88":"markdown","2d0c254a":"markdown","05d2e15d":"markdown"},"source":{"72e38af4":"# Python 3 environment \nimport numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.metrics import confusion_matrix, plot_confusion_matrix, classification_report\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nos.getcwd()","a855d747":"df = pd.read_csv('..\/input\/mushroom-classification\/mushrooms.csv')\ndf.info()","a698c589":"df.head()","640351ec":"df.iloc[0]  # all fields have categorical values","24fade3d":"df.describe().T.sort_values(by='unique')","7d799c59":"df['class'].value_counts()","ff66836b":"X = df.drop(columns='class')\ny = df['class'].copy()\n\nX = pd.get_dummies(X, drop_first=True)\nX.head(1)","b8f5334a":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","bd74cc71":"ada = AdaBoostClassifier()            # By default - DecisionTreeClassifier(max_depth=1), 50 trees, learning rate = 1\n\nada.fit(X_train, y_train)\ny_pred = ada.predict(X_test)\n\nplot_confusion_matrix(ada, X_test, y_test) # WOWZA 100% accuracy","b11365a5":"pd.Series(index = X.columns, data = ada.feature_importances_).sort_values(ascending=False).head(10)","31be77e9":"# 1 tree with 1 stump\nsimple_stump = AdaBoostClassifier(n_estimators=1)\nsimple_stump.fit(X_train, y_train)\nplot_confusion_matrix(simple_stump, X_test, y_test)\nprint(classification_report(y_test, simple_stump.predict(X_test)))","9574509f":"X.columns[simple_stump.feature_importances_.argmax()]","7ef1473b":"from sklearn.linear_model import LogisticRegression\nlog = LogisticRegression()\nlog.fit(X_train, y_train)\nplot_confusion_matrix(log, X_test, y_test)","d0831e0b":"## Fiting model \ud83d\udd25\ud83d\udd25\ud83d\udd25","d6b3d0b9":"## Summary:  \n* Data is all categorical (well-balanced) and clean (no missing values) - *upside of academic datasets* \n* AdaBoost (out-of-the-box) knocks it out of the park with 100% accuracy - *although, so does Logistic regression*\n* We also test to see if there is on simple Heurestic which can allow a decent classification of mushrooms in the wild.\n    * To check this we fit a Single-stump model\n    * **Voila!** Whether a Mushroom has odor or not, is in itself a fairly robust indicator of whether that mushroom is poisonous (95%+ recall for poisonous)\n    \n**\"Poisonous mushrooms often have an unpleasant, acrid smell, while benign ones smell refreshingly mushroomlike.\" - [Sciencing](https:\/\/sciencing.com\/identify-poisonous-mushrooms-2057768.html)**","40da19b8":"### Wondering how Logistic would perform?","72874d88":"## Data Load & Review","2d0c254a":"### Curious if there is a single feature that provides a lot of information (can be made into a heurestic)","05d2e15d":"---"}}