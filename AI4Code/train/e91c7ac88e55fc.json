{"cell_type":{"2f161682":"code","abd147aa":"code","7ee205cf":"code","130f48c0":"code","a630103b":"code","298b763b":"code","ab65b067":"code","fb67a67d":"code","c3c9d3b9":"code","14c2e0a8":"code","b40a03c4":"code","f9a1659f":"code","1a4079c8":"code","63b5efc1":"code","3e0ecba8":"code","f5f35289":"code","981d2c5e":"code","b22411fd":"code","b1f0171b":"markdown","b0edb3c8":"markdown","1c1d4655":"markdown","7a03a46c":"markdown","ca7b591c":"markdown","3c5cfc65":"markdown","0cdbb63f":"markdown","ab650264":"markdown","adef430f":"markdown","d9a8d57c":"markdown","80bd4666":"markdown","454fef6d":"markdown","b52e6786":"markdown","637628a5":"markdown","a5cf302a":"markdown","915761c4":"markdown","25b002e9":"markdown","e671bbb4":"markdown","e74d4e8f":"markdown","296475df":"markdown","f8c76279":"markdown","715235d7":"markdown","ee36b3ca":"markdown","e51ca24a":"markdown","0099867d":"markdown"},"source":{"2f161682":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport seaborn as sns\n%matplotlib inline\n\nnp.random.seed(2)\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nimport itertools\n\nfrom keras.utils.np_utils import to_categorical # convert to one-hot-encoding\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D\nfrom keras.optimizers import RMSprop\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.callbacks import ReduceLROnPlateau","abd147aa":"# Load the data\ntrain = pd.read_csv(\"..\/input\/train.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")","7ee205cf":"Y_train = train[\"label\"]\n\n# Drop 'label' column\nX_train = train.drop(labels = [\"label\"],axis = 1) \n\n# free some space\ndel train ","130f48c0":"g = sns.countplot(Y_train)","a630103b":"# Normalize the data\nX_train = X_train \/ 255.0\ntest = test \/ 255.0\n# Reshape image in 3 dimensions (height = 28px, width = 28px , canal = 1)\nX_train = X_train.values.reshape(-1,28,28,1)\ntest = test.values.reshape(-1,28,28,1)","298b763b":"# Encode labels to one hot vectors (ex : 2 -> [0,0,1,0,0,0,0,0,0,0])\nY_train = to_categorical(Y_train, num_classes = 10)","ab65b067":"# Set the random seed\nrandom_seed = 2","fb67a67d":"# Split the train and the validation set for the fitting\nX_train, X_val, Y_train, Y_val = train_test_split(X_train, Y_train, test_size = 0.1, random_state=random_seed)","c3c9d3b9":"g = plt.imshow(X_train[0][:,:,0])","14c2e0a8":"model = Sequential()\n\nmodel.add(Conv2D(filters = 32, kernel_size = (5,5),padding = 'valid', \n                 activation ='relu', input_shape = (28,28,1)))\nmodel.add(MaxPool2D(pool_size=(2,2)))\nmodel.add(Dropout(0.25))\n\n\nmodel.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'Same', \n                 activation ='relu'))\n\nmodel.add(MaxPool2D(pool_size=(2,2), strides=(2,2)))\nmodel.add(Dropout(0.25))\n\n\nmodel.add(Flatten())\nmodel.add(Dense(256, activation = \"relu\"))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(10, activation = \"softmax\"))","b40a03c4":"model.summary()","f9a1659f":"# Define the optimizer\noptimizer = RMSprop(lr=0.001)","1a4079c8":"# Compile the model\nmodel.compile(optimizer = optimizer , loss = \"categorical_crossentropy\", metrics=[\"accuracy\"])","63b5efc1":"epochs = 2 \nbatch_size = 64","3e0ecba8":"model.fit(X_train,Y_train,epochs=epochs,batch_size=batch_size,validation_data=(X_val,Y_val))","f5f35289":"# Predict the values from the validation dataset\nY_pred = model.predict(X_val)\n# Convert predictions classes to one hot vectors \nY_pred_classes = np.argmax(Y_pred,axis = 1) \n# Convert validation observations to one hot vectors\nY_true = np.argmax(Y_val,axis = 1) \n# compute the confusion matrix\nconfusion_mtx = confusion_matrix(Y_true, Y_pred_classes) \nconfusion_mtx","981d2c5e":"# predict results\nresults = model.predict(test)\n\n# select the indix with the maximum probability\nresults = np.argmax(results,axis = 1)\n\nresults = pd.Series(results,name=\"Label\")","b22411fd":"submission = pd.concat([pd.Series(range(1,28001),name = \"ImageId\"),results],axis = 1)\n\nsubmission.to_csv(\"submission.csv\",index=False)","b1f0171b":"## Key Take aways:\n\n* CNN helps in preserving the spatial information unlike NN.\n\n* Total no of parameter that are to be trained in CNN are minimal when compared to NN\n\n* Pooling avoids overfitting by down sampling the data.\n\n\n**Please upvote if you find this kernel helpful.**","b0edb3c8":"## CONV layer:\n    \nThe objective of a Conv layer is to extract features of the input volume.\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*_34EtrgYk6cQxlJ2br51HQ.gif)","1c1d4655":"### How to compute the output volume[W2xH2xD2]?\n\nAnswer:\n\n* W2=(W1\u2212F+2P)\/S+1\n\n* H2=(H1\u2212F+2P)\/S+1\n\n* D2=K","7a03a46c":"## ReLU layer :\nReLU Layer applies an elementwise activation function max(0,x), which turns negative values to zeros (thresholding at zero). This layer does not change the size of the volume and there are no hyperparameters.","ca7b591c":"## Input (the training data):\n\n\nThe input layer or input volume is an image that has the following dimensions: [width x height x depth].It is a matrix of pixel values.\n\n**Example: Input: [32x32x3]=>(width=32, height=32, depth=3)The depth here, represents R,G,B channels.**","3c5cfc65":"### Terminology\n\n* **Filter, Kernel, or Feature Detector** is a small matrix used for features detection.\n\n* **Convolved Feature, Activation Map or Feature Map** is the output volume formed by sliding the filter over the image and computing the dot product.\n\n* **Depth** is the number of filters.\n\n* **Stride** has the objective of producing smaller output volumes spatially. For example, if a stride=2, the filter will shift by the amount of 2 pixels as it convolves around the input volume.\n","0cdbb63f":"## What is that Commonality among all the pictures have? \n\n\n## Video Time","ab650264":"![](https:\/\/i.stack.imgur.com\/mFBCV.png)\n![](http:\/\/news.mit.edu\/sites\/mit.edu.newsoffice\/files\/styles\/news_article_image_top_slideshow\/public\/images\/2018\/MIT-Invisible-Vision_0.jpg?itok=DWJiIHwB)\n\n                         Reveals \u201cinvisible\u201d objects in the dark","adef430f":"## POOL layer:\n\nPool Layer performs a function to reduce the spatial dimensions of the input, and the computational complexity of our model. And it also controls overfitting. It operates independently on every depth slice of the input. There are different functions such as Max pooling, average pooling","d9a8d57c":"## Example of a ConvNet architecture:\n\nCIFAR-10 classification [INPUT\u200a\u2014\u200aCONV\u200a\u2014\u200aRELU\u200a\u2014\u200aPOOL\u200a\u2014\u200aFC]","80bd4666":"When you take a minute to stop and look around, the technological advancements of today could be perceived as something out of a futuristic novel. Cars are learning to drive, hands-free devices can turn on your lights or toast your bread, and flying drones are circling the skies. This is 2018. While the manifestation of Artificial Intelligence (AI) and Machine Learning (ML) haven\u2019t been realized, impressive progress has certainly been made.","454fef6d":"This is a 5 layers Sequential Convolutional Neural Network for digits recognition trained on MNIST dataset. ","b52e6786":"The outcome of this operation is a single integer of the output volume (feature map). Then we slide the filter over the next receptive field of the same input image by a Stride and compute again the dot products between the new receptive field and the same filter. We repeat this process until we go through the entire input image. The output is going to be the input for the next layer.","637628a5":"It has two hyperparameters: Filter (F) and Stride (S). More generally, having the input W1\u00d7H1\u00d7D1, the pooling layer produces a volume of size W2\u00d7H2\u00d7D2\n\n* W2=(W1\u2212F)\/S+1\n* H2=(H1\u2212F)\/S+1\n* D2=D1","a5cf302a":"## Flatten\n\nW2\u00d7H2\u00d7D2 tensor becomes vector of [W2\u00d7H2\u00d7D2]\n\n## Fully Connected Layer (FC):\n\nFully connected layers connect every neuron in one layer to every neuron in another layer. The last fully-connected layer uses a softmax activation function for classifying the generated features of the input image into various classes based on the training dataset.\n","915761c4":"![](https:\/\/s3-ap-south-1.amazonaws.com\/av-blog-media\/wp-content\/uploads\/2018\/03\/191003285_edd8d0cf58-300x225.jpg)\n\n                    A man wearing a black shirt and a little girl wearing an orange dress share a treat .","25b002e9":"ConvNet has two parts: feature learning (Conv, Relu,and Pool) and classification(FC and softmax).\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*2SWb6CmxzbPZijmevFbe-g.jpeg)","e671bbb4":"## Spread Happiness and Kindness...","e74d4e8f":"### Why CNN became popular?\n\nCNNs can be thought of automatic feature extractors from the image. While if I use a algorithm with pixel vector I lose a lot of spatial interaction between pixels","296475df":"# CNN\n\n### What is convolution\n\nConvolutional Neural networks allow computers to see, in other words, Convnets are used to recognize images by transforming the original image through layers to a class scores. CNN was inspired by the visual cortex. Every time we see something, a series of layers of neurons gets activated, and each layer will detect a set of features such as lines, edges. The high level of layers will detect more complex features in order to recognize what we saw.\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*XbuW8WuRrAY5pC4t-9DZAQ.jpeg)","f8c76279":"![](https:\/\/www.kdnuggets.com\/wp-content\/uploads\/photo.jpg)","715235d7":"## Hands on CNN using Digit Recognizer","ee36b3ca":"![](https:\/\/img-s3.onedio.com\/id-5867000b4813bb8710ce7f1a\/rev-0\/w-635\/f-jpg-webp\/s-21846e142a4303dd1b398188d8c63b16b94de38f.webp)\n\n                                   Google Lip Reading outperforms humans","e51ca24a":"![](https:\/\/www.meme-arsenal.com\/memes\/9d68ce11eedb5c3d61049b393eee7dac.jpg)","0099867d":"Example of a Max pooling with 2x2 filter and stride = 2. So, for each of the windows, max pooling takes the max value of the 4 pixels.\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*S86gKd43MIYquHIeR9m8JQ.png)"}}