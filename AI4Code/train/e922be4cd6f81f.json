{"cell_type":{"eba14383":"code","5a9d7697":"code","545715aa":"code","4f7d2318":"code","0e80865f":"code","359d9627":"code","f1d4113c":"code","6dff0137":"code","7483c1d2":"code","df6bc40c":"code","39c1f141":"code","a54f219c":"code","ff5fdfc4":"code","4452517d":"code","889336d5":"code","8af0ab27":"code","bc8bfbb6":"code","64c36e50":"code","7d8e6442":"code","051f0303":"code","b3462066":"code","188767c3":"code","a1e02481":"code","2535e96b":"code","717c47f6":"code","687eb07a":"code","d98167b3":"markdown","21d104bb":"markdown","f035356e":"markdown","58763edc":"markdown","fad7ff2c":"markdown","38cdf7a5":"markdown","b2622c4c":"markdown","49803c96":"markdown"},"source":{"eba14383":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5a9d7697":"from fastai.vision import *","545715aa":"Config.data_path()","4f7d2318":"path = Config.data_path()\/'dogs_vs_cats'\npath.mkdir(parents=True, exist_ok=True)\npath","0e80865f":"# unzip test and train to path\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        if ('zip' in filename):\n            file = os.path.join(dirname, filename)\n            !unzip -q -n {file} -d {path}","359d9627":"!dir {path}","f1d4113c":"!dir {path}\/'train'\n\n# observation: we can use the first part of the file name before the dot to extract the labels","6dff0137":"train_path = path\/'train'\ntest_path = path\/'test'","7483c1d2":"from fastai.metrics import error_rate\nnp.random.seed(42)","df6bc40c":"fnames = get_image_files(train_path)\nfnames[:5]","39c1f141":"categories = []\nfilenames = os.listdir(train_path)\n\nfor filename in filenames:\n    if('dog.' in filename):\n        categories.append(1)\n    else:\n        categories.append(0)\n\n# 1 for dogs\n# 0 for cats","a54f219c":"import warnings\nwarnings.filterwarnings('ignore')","ff5fdfc4":"data = ImageDataBunch.from_lists(train_path, fnames, ds_tfms=get_transforms(), size=224, bs=64, labels=categories)","4452517d":"data.classes","889336d5":"data.show_batch(rows=3,figsize=(7,6))","8af0ab27":"learn = cnn_learner(data, models.resnet34, metrics=error_rate)","bc8bfbb6":"learn.fit_one_cycle(4)\n# PIL.UnidentifiedImageError: cannot identify image file '\/root\/.fastai\/data\/dogs_vs_cats\/train\/dog.2370.jpg'","64c36e50":"learn.save('stage1-dogsvscats')","7d8e6442":"test_images = get_image_files(test_path)\ntest_images[:5]","051f0303":"submission = pd.DataFrame(os.listdir(test_path), columns=['ids'])\nsubmission['label'] = 0\nsubmission['id'] = 1","b3462066":"count = 0\nfor imgpath in test_images:\n    img = open_image(imgpath)\n    pred = learn.predict(img)\n    if(str(pred[0]) != '1'):\n        submission['label'][count] = 0\n    else:\n        submission['label'][count] = 1\n    count = count +1\n","188767c3":"submission","a1e02481":"count = 0\nfor imgpath in test_images:\n    submission['id'][count] = count + 1\n    count  = count + 1","2535e96b":"submission[['id', 'label']].to_csv('submission.csv', index=False)","717c47f6":"!dir \/kaggle\/working","687eb07a":"#!mv outputs.csv \/kaggle\/working","d98167b3":"### Unzip files and put them in path","21d104bb":"### Submission","f035356e":"### Using a CNN","58763edc":"### Getting test data","fad7ff2c":"### Prediction","38cdf7a5":"### Creating image databunch from lists","b2622c4c":"### Fnames","49803c96":"### Dogs vs cats using fast ai v3\n\nI wanted to make this notebook as a reference for end to end submission to the competition.\nOptimisation is yet to be done."}}