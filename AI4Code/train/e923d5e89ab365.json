{"cell_type":{"93cca732":"code","3b798787":"code","0caf1fc1":"code","ecd3db4a":"code","1ad547d0":"code","2a1695fa":"code","49dab011":"code","54faf650":"code","94371126":"code","0ed4cf58":"code","d222403c":"code","5f48ec48":"code","77c05f44":"code","5d08585c":"code","e16d7698":"code","7de20fd2":"code","3525f11d":"code","c20f9727":"code","04461bd7":"code","4fd36bfc":"code","35005027":"markdown","db6f0200":"markdown","3ce4212d":"markdown","eadacc92":"markdown","0c74700d":"markdown","ef1f2eb4":"markdown","4be4b1a3":"markdown","ee4bed08":"markdown","4acb8eb0":"markdown","a8115a64":"markdown","1b49b696":"markdown","7693fa15":"markdown","e590219c":"markdown","02dd59df":"markdown","29d03518":"markdown"},"source":{"93cca732":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","3b798787":"df = pd.read_csv('\/kaggle\/input\/housesalesprediction\/kc_house_data.csv')","0caf1fc1":"df","ecd3db4a":"df.info()","1ad547d0":"df.columns","2a1695fa":"#lets check if there is any null value present in dataset\ndf.isnull().sum()","49dab011":"df.describe()","54faf650":"df['price']","94371126":"df.corrwith(df['price'])","0ed4cf58":"fig, ax = plt.subplots(figsize=(15, 11))\nsns.heatmap(df.corr(),annot = True ,cmap ='RdYlGn')","d222403c":"sns.distplot(df['price'])","5f48ec48":"fig, ax= plt.subplots(figsize=(27,30), ncols=3, nrows=7)\nsns.scatterplot(x=\"bedrooms\", y=\"price\",data=df, ax=ax[0][0])\nsns.scatterplot(x=\"bathrooms\", y=\"price\",data=df, ax=ax[0][1])\nsns.scatterplot(x=\"sqft_living\", y=\"price\",data=df, ax=ax[0][2])\nsns.scatterplot(x=\"sqft_lot\", y=\"price\",data=df, ax=ax[1][0])\nsns.scatterplot(x=\"floors\", y=\"price\",data=df, ax=ax[1][1])\nsns.scatterplot(x=\"waterfront\", y=\"price\",data=df, ax=ax[1][2])\nsns.scatterplot(x=\"view\", y=\"price\",data=df, ax=ax[2][0])\nsns.scatterplot(x=\"condition\", y=\"price\",data=df, ax=ax[2][1])\nsns.scatterplot(x=\"grade\", y=\"price\",data=df, ax=ax[2][2])\nsns.scatterplot(x=\"sqft_above\", y=\"price\",data=df, ax=ax[3][0])\nsns.scatterplot(x=\"sqft_basement\", y=\"price\",data=df, ax=ax[3][1])\nsns.scatterplot(x=\"yr_built\", y=\"price\",data=df, ax=ax[3][2])\nsns.scatterplot(x=\"yr_renovated\", y=\"price\",data=df, ax=ax[4][0])\nsns.scatterplot(x=\"zipcode\", y=\"price\",data=df, ax=ax[4][1])\nsns.scatterplot(x=\"lat\", y=\"price\",data=df, ax=ax[4][2])\nsns.scatterplot(x=\"long\", y=\"price\",data=df, ax=ax[5][0])\nsns.scatterplot(x=\"sqft_living15\", y=\"price\",data=df, ax=ax[5][1])\nsns.scatterplot(x=\"sqft_lot15\", y=\"price\",data=df, ax=ax[5][2])\nsns.scatterplot(x=\"id\", y=\"price\",data=df, ax=ax[6][0])\nsns.scatterplot(x=\"date\", y=\"price\",data=df, ax=ax[6][1])\n\nplt.show();\n","77c05f44":"df.drop(['id','date','zipcode','condition','long','sqft_lot15','yr_built','sqft_lot','view','waterfront','yr_renovated'],axis=1,inplace=True)","5d08585c":"df.head()","e16d7698":"df.columns","7de20fd2":"x = df [['bedrooms', 'bathrooms', 'sqft_living', 'floors', 'grade','sqft_above', 'sqft_basement', 'lat', 'sqft_living15']]\n\ny = df[['price']]","3525f11d":"from sklearn.model_selection import train_test_split \n\nX_train, x_test, Y_train, y_test = train_test_split(x, y, test_size=0.4)","c20f9727":"from sklearn.linear_model import LinearRegression\nlm = LinearRegression()\nlm.fit(X_train, Y_train)","04461bd7":"print(lm.intercept_)","4fd36bfc":"model = []\nscore = []\n\nmodel_pred = []\nscore_pred = []\n\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_absolute_error\n\nfrom sklearn.model_selection import  cross_val_score,cross_val_predict\ncv_LinReg=cross_val_score(lm,X_train,Y_train,cv=10)\ncv_LinReg_pred=cross_val_predict(lm,X_train,Y_train,cv=10)\n\nmodel.append(\"Linear Regression\")\nscore.append(r2_score(Y_train,cv_LinReg_pred))\n\n#Visualisation\nfig,ax=plt.subplots(figsize=(10, 5))\nplt.rc('font')   \nax=sns.distplot(Y_train,hist=False,label='Y-Train',color='r')\nsns.distplot(cv_LinReg_pred,hist=False,label='Pred-CV-Value',color='black',ax=ax)\nplt.title(\"CV-prediction with LinearRegression\")","35005027":"**Now we clean our data, we remove all unnecassary columns on the basis of**\n* Remove all the coulums which have negative values in correlation Heatmap\n* Remove all the columns which does not affect price as we have checked in data visualization ","db6f0200":"## Creating the Training Model","3ce4212d":"### Correlation","eadacc92":"**Import Libraries**","0c74700d":"Let's now begin to train out our model! We will need to first split up our data into an X array that contains the features to train on, and a y array with the target variable, in this case the Price column  ","ef1f2eb4":"**Understand the data**","4be4b1a3":"# House price Analysis using Linear regression","ee4bed08":"## Data Cleaning ","4acb8eb0":"## Training and Testing the data","a8115a64":"**Find out about correlation between features with help oh heatmap**","1b49b696":"## Data Visualization","7693fa15":"## Machine Learning Algorithims\n\nNow we apply Linear Regression algorithms to predict the House price","e590219c":"Now let's split the data into a training set and a testing set. We will train out model on the training set and then use the test set to evaluate the model.","02dd59df":"## Model Evalution","29d03518":"**Now we check the correlation of all features with price**\n\nNegative correlation means they does not affect the prices of houses"}}