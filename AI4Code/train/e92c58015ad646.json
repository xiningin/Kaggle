{"cell_type":{"59231b10":"code","878912ff":"code","591e15f1":"code","5920f627":"code","6ca6ac6b":"code","e70e8af7":"code","44378df1":"code","997d5264":"code","0ee3b14b":"code","3f9e7e76":"code","f497e30d":"code","3418fe95":"code","127fd90f":"code","89023bc6":"code","755215c8":"code","4e5ebced":"code","d554158f":"code","78c7137f":"code","c5c12daf":"code","d7853aae":"code","af07233f":"code","06d4898b":"code","bb090039":"code","c2f0d4aa":"code","de675523":"code","f14401b2":"code","b8ea91a1":"code","054ca2e4":"code","27101c53":"code","64032e2a":"code","4d834a95":"code","0fe74626":"code","09cb93b0":"code","f5423d9d":"code","ff482825":"code","3039d883":"code","ab40a493":"code","9c5a5478":"code","47702270":"code","220db1ad":"code","0bcc0e0a":"code","8a59828c":"code","7ae84492":"code","f696bad7":"code","647d44b2":"code","ca202fac":"code","6d546148":"code","227d3db7":"code","5b449f4b":"code","553a4465":"code","dfcd7720":"code","2aa5eb0e":"code","3417f1b5":"code","202fd131":"code","8daef08d":"code","2e349fd7":"code","c461b4b1":"code","4071d415":"code","b57a4e16":"code","3e05a590":"code","71435f8d":"code","8408a27a":"code","0c8fcac2":"code","a0e7a194":"code","2d1007d5":"code","7454bfec":"code","4434fcca":"markdown","4bb7bdfe":"markdown","eccc515d":"markdown","1b5f2f64":"markdown","6c3485f9":"markdown","fbfd504d":"markdown","920fc17e":"markdown","596cda71":"markdown","395848dd":"markdown","cf63858a":"markdown","d60cfd16":"markdown","9a132051":"markdown","983a9080":"markdown","b204df31":"markdown","ee9b1d0b":"markdown","7d1bf0d1":"markdown","3804fcdb":"markdown","da6b1271":"markdown","0d97c309":"markdown","5c2d02d7":"markdown","cb2204a8":"markdown","f6031679":"markdown","7d8a990b":"markdown","1bb75070":"markdown","c63342a7":"markdown","8c1ab795":"markdown","0a0a13e6":"markdown","06695073":"markdown","6aa24478":"markdown","f68edd30":"markdown","82e85e07":"markdown","e4d72471":"markdown","8cfdb34b":"markdown","76e8fcd6":"markdown","2cdc9f03":"markdown","30d25204":"markdown","6a7a580b":"markdown","d7ededf3":"markdown","3c5825cb":"markdown","cb4abc3c":"markdown","74b257a6":"markdown","718a9c66":"markdown","ee5899e0":"markdown","13b38b6d":"markdown","10623c9d":"markdown","ef07f252":"markdown","856779cd":"markdown","2c22a366":"markdown","1d7d46b4":"markdown","a2585fa1":"markdown","bd376d0b":"markdown","0c6cfbd2":"markdown","37d827c8":"markdown","d090d64a":"markdown","1f8f5731":"markdown","48f57820":"markdown","c96b2614":"markdown","dfbd33ed":"markdown","0bf70433":"markdown","c6416a24":"markdown","a5bdfec7":"markdown","fb308714":"markdown","637092d0":"markdown","23e8ed4e":"markdown","bd9f9c70":"markdown"},"source":{"59231b10":"# import gresearch_crypto\n# env = gresearch_crypto.make_env()\n# iter_test = env.iter_test()\n# for (test_df, sample_prediction_df) in iter_test:\n    # sample_prediction_df['Target'] = 0\n    # env.predict(sample_prediction_df)","878912ff":"import time\nimport datetime\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport scipy.stats as stats\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom datetime import datetime as dt","591e15f1":"pd.set_option('display.max_colwidth', 150)","5920f627":"sns.set()","6ca6ac6b":"train = pd.read_csv('..\/input\/g-research-crypto-forecasting\/train.csv') \nprint(train.shape)\ntrain.head(10)","e70e8af7":"pd.DataFrame([['timestamp', '\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7', '\u79d2\u5358\u4f4d\u306eUnix\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7', '\u30c7\u30fc\u30bf\u671f\u9593\uff082018\/01\/01 09:01:00\u301c2021\/09\/21 09:00:00\uff09'],\n              ['Asset_ID', '\u6697\u53f7\u901a\u8ca8\u306b\u5bfe\u5fdc\u3059\u308b\u8cc7\u7523ID', 'asset_details\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b', ''],\n              ['count', '\u76f4\u524d\u306e1\u5206\u9593\u306e\u53d6\u5f15\u6570', '', ''],\n              ['Open', '\u305d\u306e1\u5206\u9593\u306e\u59cb\u5024', '\u30c7\u30fc\u30bf\u306f1\u5206\u3054\u3068\u306e\u5404\u6697\u53f7\u8cc7\u7523\u306e\u30c7\u30fc\u30bf\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b', ''],\n              ['High', '\u305d\u306e1\u5206\u9593\u306b\u5230\u9054\u3057\u305f\u6700\u9ad8\u4fa1\u683c', '', ''],\n              ['Low', '\u305d\u306e1\u5206\u9593\u306b\u5230\u9054\u3057\u305f\u6700\u4f4e\u4fa1\u683c', '', ''],\n              ['Close', '\u305d\u306e1\u5206\u9593\u306e\u7d42\u5024', '', ''],\n              ['Volume', '\u305d\u306e1\u5206\u9593\u306b\u58f2\u8cb7\u3055\u308c\u305f\u8cc7\u7523\u306e\u6570\u91cf', '', ''],\n              ['VMAP', '\u305d\u306e1\u5206\u9593\u3067\u306e\u8cc7\u7523\u306e\u5e73\u5747\u4fa1\u683c\u3092\u51fa\u6765\u9ad8\u3067\u52a0\u91cd\u3057\u305f\u3082\u306e', '', ''],\n              ['TARGET', '15\u5206\u9593\u3067\u306e\u6697\u53f7\u8cc7\u7523\u306e\u6b8b\u4f59\u5bfe\u6570\u30ea\u30bf\u30fc\u30f3', '', '']],\n              columns=['\u30ab\u30e9\u30e0', '\u610f\u5473', '\u88dc\u8db31', '\u88dc\u8db32'])","44378df1":"asset_details = pd.read_csv('..\/input\/g-research-crypto-forecasting\/asset_details.csv') \nasset_details = asset_details.sort_values(\"Asset_ID\").reset_index(drop=True)\nprint(asset_details.shape)\nasset_details.head(10)","997d5264":"pd.DataFrame([['Asset_id', '\u6697\u53f7\u901a\u8ca8\u306b\u5bfe\u5fdc\u3059\u308b\u8cc7\u7523ID', '', ''],\n              ['Weight', '\u91cd\u307f', '', ''],\n              ['Asset_name', '\u6697\u53f7\u8cc7\u7523\u540d', '', '']],\n              columns=['\u30ab\u30e9\u30e0', '\u610f\u5473', '\u88dc\u8db31', '\u88dc\u8db32'])","0ee3b14b":"example_test = pd.read_csv('..\/input\/g-research-crypto-forecasting\/example_test.csv')\nprint(example_test.shape)\nexample_test.head(10)","3f9e7e76":"pd.DataFrame([['timestamp', '\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7', '\u79d2\u5358\u4f4d\u306eUnix\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7', '\u30c7\u30fc\u30bf\u671f\u9593\uff082018\/01\/01 09:01:00\u301c2021\/09\/21 09:00:00\uff09'],\n              ['Asset_ID', '\u6697\u53f7\u901a\u8ca8\u306b\u5bfe\u5fdc\u3059\u308b\u8cc7\u7523ID', 'asset_details\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b', ''],\n              ['count', '\u76f4\u524d\u306e1\u5206\u9593\u306e\u53d6\u5f15\u6570', '', ''],\n              ['Open', '\u305d\u306e1\u5206\u9593\u306e\u59cb\u5024', '\u30c7\u30fc\u30bf\u306f1\u5206\u3054\u3068\u306e\u5404\u6697\u53f7\u8cc7\u7523\u306e\u30c7\u30fc\u30bf\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b', ''],\n              ['High', '\u305d\u306e1\u5206\u9593\u306b\u5230\u9054\u3057\u305f\u6700\u9ad8\u4fa1\u683c', '', ''],\n              ['Low', '\u305d\u306e1\u5206\u9593\u306b\u5230\u9054\u3057\u305f\u6700\u4f4e\u4fa1\u683c', '', ''],\n              ['Close', '\u305d\u306e1\u5206\u9593\u306e\u7d42\u5024', '', ''],\n              ['Volume', '\u305d\u306e1\u5206\u9593\u306b\u58f2\u8cb7\u3055\u308c\u305f\u8cc7\u7523\u306e\u6570\u91cf', '', ''],\n              ['VMAP', '\u305d\u306e1\u5206\u9593\u3067\u306e\u8cc7\u7523\u306e\u5e73\u5747\u4fa1\u683c\u3092\u51fa\u6765\u9ad8\u3067\u52a0\u91cd\u3057\u305f\u3082\u306e', '', ''],\n              ['group_num', '\u30b0\u30eb\u30fc\u30d7\u306e\u756a\u53f7', '', ''],\n              ['row_id', '\u884cID', '', '']],\n              columns=['\u30ab\u30e9\u30e0', '\u610f\u5473', '\u88dc\u8db31', '\u88dc\u8db32'])","f497e30d":"example_sumple_submission = pd.read_csv('..\/input\/g-research-crypto-forecasting\/example_sample_submission.csv')\nprint(example_sumple_submission.shape)\nexample_sumple_submission.head(10)","3418fe95":"pd.DataFrame([['group_num', '\u30b0\u30eb\u30fc\u30d7\u756a\u53f7', '', ''],\n              ['row_id', '\u884cID', '', ''],\n              ['TARGET', '15\u5206\u9593\u3067\u306e\u6697\u53f7\u8cc7\u7523\u306e\u6b8b\u4f59\u5bfe\u6570\u30ea\u30bf\u30fc\u30f3', '', '']],\n              columns=['\u30ab\u30e9\u30e0', '\u610f\u5473', '\u88dc\u8db31', '\u88dc\u8db32'])","127fd90f":"train.dtypes","89023bc6":"train.isnull().sum()","755215c8":"train.describe()","4e5ebced":"asset_details.dtypes","d554158f":"asset_details.isnull().sum()","78c7137f":"asset_details.describe()","c5c12daf":"zero = datetime.datetime.fromtimestamp(0)\nprint(zero)","d7853aae":"start = datetime.datetime.fromtimestamp(1514764860)\nend = datetime.datetime.fromtimestamp(1632182400)\nprint('start:', start)\nprint('end:', end)","af07233f":"x = 1514764860\nt1 = datetime.datetime.fromtimestamp(x)\nt2 = datetime.datetime.fromtimestamp(x+60)\nt3 = datetime.datetime.fromtimestamp(x+3600)\n\nprint(t1)\nprint(t2)\nprint(t3)","06d4898b":"train.query('Asset_ID == 1').head().reset_index(drop=True)","bb090039":"asset_count= []\nfor i in range(14):\n    count = (train[\"Asset_ID\"]==i).sum()\n    asset_count.append(count)\nfig = px.bar(x = asset_details.sort_values(\"Asset_ID\")[\"Asset_Name\"],\n             y = asset_count , \n             color = asset_count ,\n             color_continuous_scale=\"Emrld\")\nfig.update_xaxes(title=\"Assets\")\nfig.update_yaxes(title = \"Number of Rows\")\nfig.update_layout(showlegend = True,\n    title = {\n        'text': 'Data Distribution ',\n        'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","c2f0d4aa":"def crypto_df(asset_id ,data=train):\n    df = train[train[\"Asset_ID\"]==asset_id].reset_index(drop = True)\n    df['timestamp'] = pd.to_datetime(df['timestamp'], unit='s')\n    df = df.set_index('timestamp')\n    return df\n\nbtc = crypto_df(asset_id = 1)\neth = crypto_df(asset_id = 6)\nltc = crypto_df(asset_id = 9)","de675523":"def candelstick_chart(data,title):\n    candlestick = go.Figure(data = [go.Candlestick(x =data.index, \n                                               open = data[('Open')], \n                                               high = data[('High')], \n                                               low = data[('Low')], \n                                               close = data[('Close')])])\n    candlestick.update_xaxes(title_text = 'Time',\n                             rangeslider_visible = True)\n\n    candlestick.update_layout(\n    title = {\n        'text': '{:} Candelstick Chart'.format(title),\n        'y':0.90,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\n    candlestick.update_yaxes(title_text = 'Price in USD', ticksuffix = '$')\n    return candlestick","f14401b2":"btc_plot = candelstick_chart(btc[-2500:],title = \"Bitcoin(BTC)\")\nbtc_plot.show()","b8ea91a1":"ltc_plot = candelstick_chart(ltc[-2500:],title = \"Litecoin(LTC)\")\nltc_plot.show()","054ca2e4":"eth_plot = candelstick_chart(eth[-2500:],title = \"Ethereum(ETH)\")\neth_plot.show()","27101c53":"def ohlc_chart(data,title):\n    ohlc = go.Figure(data = [go.Ohlc(x =data.index, \n                                               open = data[('Open')], \n                                               high = data[('High')], \n                                               low = data[('Low')], \n                                               close = data[('Close')])])\n    ohlc.update_xaxes(title_text = 'Time',\n                             rangeslider_visible = True)\n\n    ohlc.update_layout(\n    title = {\n        'text': '{:} OHLC Chart'.format(title),\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\n    ohlc.update_yaxes(title_text = 'Price in USD', ticksuffix = '$')\n    return ohlc","64032e2a":"ohlc_chart(btc[:200], title = \"Bitcoin(BTC)\")","4d834a95":"ohlc_chart(ltc[-100:], title = \"Litecoin(LTC)\")","0fe74626":"ohlc_chart(eth[-100:], title = \"Ethereum(ETH)\")","09cb93b0":"def vol_traded(data ,title,color):\n    area = px.area(data_frame=data,\n               x = data.index ,\n               y = \"Volume\",\n               markers = True)\n    area.update_traces(line_color=color)\n    area.update_xaxes(\n        title_text = 'Time',\n        rangeslider_visible = True)\n    area.update_yaxes(title_text = 'Number of trades every minute')\n    area.update_layout(showlegend = True,\n        title = {\n            'text': '{:} Volume Traded'.format(title),\n            'y':0.94,\n            'x':0.5,\n            'xanchor': 'center',\n            'yanchor': 'top'})\n    return area","f5423d9d":"vol_traded(btc[-300:], \"Bitcoin(BTC)\",color = \"Yellow\")","ff482825":"vol_traded(ltc[-300:], \"Litecoin(LTC)\",color = \"Blue\")","3039d883":"vol_traded(eth[-50:], \"Ethereum (ETH)\",color = \"Red\")","ab40a493":"eth = train[train[\"Asset_ID\"]==6].set_index(\"timestamp\")\neth.info(show_counts =True)","9c5a5478":"eth.isnull().sum()","47702270":"btc = train[train[\"Asset_ID\"]==1].set_index(\"timestamp\")\nbtc.head()","220db1ad":"beg_btc = btc.index[0].astype('datetime64[s]')\nend_btc = btc.index[-1].astype('datetime64[s]')\nbeg_eth = eth.index[0].astype('datetime64[s]')\nend_eth = eth.index[-1].astype('datetime64[s]')\n\nprint('BTC data goes from ', beg_btc, 'to ', end_btc)\nprint('Ethereum data goes from ', beg_eth, 'to ', end_eth)","0bcc0e0a":"(eth.index[1:]-eth.index[:-1]).value_counts().head()","8a59828c":"eth = eth.reindex(range(eth.index[0],eth.index[-1]+60,60),method='pad')\n(eth.index[1:]-eth.index[:-1]).value_counts().head()","7ae84492":"f = plt.figure(figsize=(15,4))\n\nbtc = btc.reindex(range(btc.index[0],btc.index[-1]+60,60),method='pad')\n\nax = f.add_subplot(121)\nplt.plot(btc['Close'], label='BTC')\nplt.legend()\nplt.xlabel('Time')\nplt.ylabel('Bitcoin')\n\nax2 = f.add_subplot(122)\nax2.plot(eth['Close'], color='red', label='ETH')\nplt.legend()\nplt.xlabel('Time')\nplt.ylabel('Ethereum')\n\nplt.tight_layout()\nplt.show()","f696bad7":"totimestamp = lambda s: np.int32(time.mktime(dt.strptime(s, \"%d\/%m\/%Y\").timetuple()))\n\nbtc_mini_2021 = btc.loc[totimestamp('01\/06\/2021'):totimestamp('01\/07\/2021')]\neth_mini_2021 = eth.loc[totimestamp('01\/06\/2021'):totimestamp('01\/07\/2021')]","647d44b2":"f = plt.figure(figsize=(7,8))\n\nax = f.add_subplot(211)\nplt.plot(btc_mini_2021['Close'], label='btc')\nplt.legend()\nplt.xlabel('Time')\nplt.ylabel('Bitcoin Close')\n\nax2 = f.add_subplot(212)\nax2.plot(eth_mini_2021['Close'], color='red', label='eth')\nplt.legend()\nplt.xlabel('Time')\nplt.ylabel('Ethereum Close')\n\nplt.tight_layout()\nplt.show()","ca202fac":"def log_return(series, periods=1):\n    return np.log(series).diff(periods=periods)","6d546148":"lret_btc = log_return(btc_mini_2021.Close)[1:]\nlret_eth = log_return(eth_mini_2021.Close)[1:]\nlret_btc.rename('lret_btc', inplace=True)\nlret_eth.rename('lret_eth', inplace=True)\n\nplt.figure(figsize=(8,4))\nplt.plot(lret_btc);\nplt.plot(lret_eth);\nplt.show()","227d3db7":"lret_btc_long = log_return(btc.Close)[1:]\nlret_eth_long = log_return(eth.Close)[1:]\nlret_btc_long.rename('lret_btc', inplace=True)\nlret_eth_long.rename('lret_eth', inplace=True)\ntwo_assets = pd.concat([lret_btc_long, lret_eth_long], axis=1)\n\ncorr_time = two_assets.groupby(two_assets.index\/\/(10000*60)).corr().loc[:,\"lret_btc\"].loc[:,\"lret_eth\"]\n\ncorr_time.plot();\nplt.xticks([])\nplt.ylabel(\"Correlation\")\nplt.title(\"Correlation between BTC and ETH over time\");","5b449f4b":"all_assets_2021 = pd.DataFrame([])\nfor asset_id, asset_name in zip(asset_details.Asset_ID, asset_details.Asset_Name):\n  asset = train[train[\"Asset_ID\"]==asset_id].set_index(\"timestamp\")\n  asset = asset.loc[totimestamp('01\/01\/2021'):totimestamp('01\/05\/2021')]\n  asset = asset.reindex(range(asset.index[0],asset.index[-1]+60,60),method='pad')\n  lret = log_return(asset.Close.fillna(0))[1:]\n  all_assets_2021 = all_assets_2021.join(lret, rsuffix=asset_name, how=\"outer\")","553a4465":"plt.imshow(all_assets_2021.corr());\nplt.yticks(asset_details.Asset_ID.values, asset_details.Asset_Name.values);\nplt.xticks(asset_details.Asset_ID.values, asset_details.Asset_Name.values, rotation='vertical');\nplt.colorbar();","dfcd7720":"%reset -f","2aa5eb0e":"import gc\nimport time\nimport optuna\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport lightgbm as lgb\nimport gresearch_crypto\nimport scipy.stats as stats\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom datetime import datetime\nfrom lightgbm import LGBMRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split","3417f1b5":"pd.set_option('display.max_colwidth', 150)","202fd131":"sns.set()","8daef08d":"env = gresearch_crypto.make_env()\niter_test = env.iter_test()","2e349fd7":"df_train = pd.read_csv('..\/input\/g-research-crypto-forecasting\/train.csv') \nprint(df_train.shape)\ndf_train.head(10)","c461b4b1":"pd.DataFrame([['timestamp', '\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7', '\u79d2\u5358\u4f4d\u306eUnix\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7', '\u30c7\u30fc\u30bf\u671f\u9593\uff082018\/01\/01 09:01:00\u301c2021\/09\/21 09:00:00\uff09'],\n              ['Asset_ID', '\u6697\u53f7\u901a\u8ca8\u306b\u5bfe\u5fdc\u3059\u308b\u8cc7\u7523ID', 'asset_details\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b', ''],\n              ['count', '\u76f4\u524d\u306e1\u5206\u9593\u306e\u53d6\u5f15\u6570', '', ''],\n              ['Open', '\u305d\u306e1\u5206\u9593\u306e\u59cb\u5024', '\u30c7\u30fc\u30bf\u306f1\u5206\u3054\u3068\u306e\u5404\u6697\u53f7\u8cc7\u7523\u306e\u30c7\u30fc\u30bf\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b', ''],\n              ['High', '\u305d\u306e1\u5206\u9593\u306b\u5230\u9054\u3057\u305f\u6700\u9ad8\u4fa1\u683c', '', ''],\n              ['Low', '\u305d\u306e1\u5206\u9593\u306b\u5230\u9054\u3057\u305f\u6700\u4f4e\u4fa1\u683c', '', ''],\n              ['Close', '\u305d\u306e1\u5206\u9593\u306e\u7d42\u5024', '', ''],\n              ['Volume', '\u305d\u306e1\u5206\u9593\u306b\u58f2\u8cb7\u3055\u308c\u305f\u8cc7\u7523\u306e\u6570\u91cf', '', ''],\n              ['VMAP', '\u305d\u306e1\u5206\u9593\u3067\u306e\u8cc7\u7523\u306e\u5e73\u5747\u4fa1\u683c\u3092\u51fa\u6765\u9ad8\u3067\u52a0\u91cd\u3057\u305f\u3082\u306e', '', ''],\n              ['TARGET', '15\u5206\u9593\u3067\u306e\u6697\u53f7\u8cc7\u7523\u306e\u6b8b\u4f59\u5bfe\u6570\u30ea\u30bf\u30fc\u30f3', '', '']],\n              columns=['\u30ab\u30e9\u30e0', '\u610f\u5473', '\u88dc\u8db31', '\u88dc\u8db32'])","4071d415":"asset_details = pd.read_csv('..\/input\/g-research-crypto-forecasting\/asset_details.csv') \nasset_details = asset_details.sort_values(\"Asset_ID\").reset_index(drop=True)\nprint(asset_details.shape)\nasset_details.head(10)","b57a4e16":"pd.DataFrame([['Asset_id', '\u6697\u53f7\u901a\u8ca8\u306b\u5bfe\u5fdc\u3059\u308b\u8cc7\u7523ID', 'train\u3068\u306e\u7d50\u5408\u30ad\u30fc\u306b\u306a\u3063\u3066\u3044\u308b', ''],\n              ['Weight', '\u91cd\u307f', '', ''],\n              ['Asset_name', '\u6697\u53f7\u8cc7\u7523\u540d', '', '']],\n              columns=['\u30ab\u30e9\u30e0', '\u610f\u5473', '\u88dc\u8db31', '\u88dc\u8db32'])","3e05a590":"REMOVE_LB_TEST_OVERLAPPING_DATA = True\n\nif REMOVE_LB_TEST_OVERLAPPING_DATA:\n    df_train['datetime'] = pd.to_datetime(df_train['timestamp'], unit='s')\n    df_train = df_train[df_train['datetime'] < '2021-06-13 00:00:00']\n\nprint(df_train.shape)\ndf_train.head()","71435f8d":"# def hlco_ratio(df): \n    # return (df['High']-df['Low'])\/(df['Close']-df['Open'])\n\ndef upper_shadow(df):\n    return df['High'] - np.maximum(df['Close'], df['Open'])\n\ndef lower_shadow(df):\n    return np.minimum(df['Close'], df['Open']) - df['Low']\n\ndef get_features(df):\n    df_feat = df[['Count', 'Open', 'High', 'Low', 'Close', 'Volume', 'VWAP']].copy()\n    df_feat['Upper_Shadow'] = upper_shadow(df_feat)\n    df_feat['Lower_Shadow'] = lower_shadow(df_feat)\n    # df_feat['hlco_ration'] = hlco_ratio(df_feat)\n    return df_feat","8408a27a":"def get_Xy_and_model_for_asset(df_train, asset_id):\n    df = df_train[df_train[\"Asset_ID\"] == asset_id]\n    \n    df_proc = get_features(df)\n    df_proc['y'] = df['Target']\n    df_proc = df_proc.dropna(how=\"any\")\n    \n    X = df_proc.drop(\"y\", axis=1)\n    y = df_proc[\"y\"]\n    \n    model = LGBMRegressor(n_estimators=10)\n    model.fit(X, y)\n    return X, y, model","0c8fcac2":"Xs = {}\nys = {}\nmodels = {}\n\nfor asset_id, asset_name in zip(asset_details['Asset_ID'], asset_details['Asset_Name']):\n    print(f\"Training model for {asset_name:<16} (ID={asset_id:<2})\")\n    X, y, model = get_Xy_and_model_for_asset(df_train, asset_id)\n    Xs[asset_id], ys[asset_id], models[asset_id] = X, y, model","a0e7a194":"all_df_test = []\n\nfor i, (df_test, df_pred) in enumerate(iter_test):\n    for j, row in df_test.iterrows():\n        \n        model = models[row['Asset_ID']]\n        x_test = get_features(row)\n        y_pred = model.predict([x_test])[0]\n        \n        df_pred.loc[df_pred['row_id'] == row['row_id'], 'Target'] = y_pred\n        \n        if i == 0 and j == 0:\n            display(x_test)\n\n    if i == 0:\n        display(df_pred)\n    all_df_test.append(df_test)\n\n    env.predict(df_pred)","2d1007d5":"df_test = pd.concat(all_df_test)\ndf_test['datetime'] = pd.to_datetime(df_test['timestamp'], unit='s')\ndf_train['datetime'] = pd.to_datetime(df_train['timestamp'], unit='s')","7454bfec":"print('Train End:', df_train['datetime'].max())\nprint('Test Start:', df_test['datetime'].max())","4434fcca":"\u6bce\u65e5\u3001400\u5104\u30c9\u30eb\u4ee5\u4e0a\u306e\u6697\u53f7\u901a\u8ca8\u304c\u53d6\u5f15\u3055\u308c\u3066\u3044\u307e\u3059\u3002<br>\n\u6697\u53f7\u901a\u8ca8\u306f\u3001\u6295\u6a5f\u3084\u6295\u8cc7\u306e\u5bfe\u8c61\u3068\u3057\u3066\u6700\u3082\u4eba\u6c17\u306e\u3042\u308b\u8cc7\u7523\u306e\u4e00\u3064\u3067\u3059\u304c\u3001\u305d\u306e\u5909\u52d5\u306e\u6fc0\u3057\u3055\u306f\u8a3c\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002<br>\n\u6025\u6fc0\u306b\u5909\u52d5\u3059\u308b\u4fa1\u683c\u306f\u3001\u5e78\u904b\u306a\u5c11\u6570\u306e\u4eba\u3005\u3092\u5104\u4e07\u9577\u8005\u306b\u3057\u3001\u4ed6\u306e\u4eba\u3005\u306b\u5927\u304d\u306a\u640d\u5931\u3092\u3082\u305f\u3089\u3057\u3066\u3044\u307e\u3059\u3002<br>\n\u3053\u308c\u3089\u306e\u4fa1\u683c\u5909\u52d5\u306e\u4e00\u90e8\u306f\u3001\u4e8b\u524d\u306b\u4e88\u6e2c\u3067\u304d\u305f\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u3053\u306e\u30b3\u30f3\u30da\u30c6\u30a3\u30b7\u30e7\u30f3\u3067\u306f\u3001\u6a5f\u68b0\u5b66\u7fd2\u306e\u5c02\u9580\u77e5\u8b58\u3092\u4f7f\u3063\u3066\u3001\u4eba\u6c17\u306e\u3042\u308b14\u7a2e\u985e\u306e\u6697\u53f7\u901a\u8ca8\u306e\u77ed\u671f\u7684\u306a\u30ea\u30bf\u30fc\u30f3\u3092\u4e88\u6e2c\u3057\u307e\u3059\u3002<br>\n\u79c1\u305f\u3061\u306f\u30012018\u5e74\u307e\u3067\u3055\u304b\u306e\u307c\u3063\u3066\u6570\u767e\u4e07\u884c\u306e\u9ad8\u983b\u5ea6\u5e02\u5834\u30c7\u30fc\u30bf\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u84c4\u7a4d\u3057\u3066\u304a\u308a\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002<br>\n\u63d0\u51fa\u671f\u9650\u304c\u904e\u304e\u308b\u3068\u3001\u53ce\u96c6\u3055\u308c\u305f\u30e9\u30a4\u30d6\u306e\u6697\u53f7\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u3001\u305d\u306e\u5f8c3\u30ab\u6708\u304b\u3051\u3066\u6700\u7d42\u7684\u306a\u30b9\u30b3\u30a2\u304c\u8a08\u7b97\u3055\u308c\u307e\u3059\u3002\n\n\u4f55\u5343\u4eba\u3082\u306e\u30c8\u30ec\u30fc\u30c0\u30fc\u304c\u540c\u6642\u306b\u6d3b\u52d5\u3059\u308b\u3053\u3068\u3067\u3001\u307b\u3068\u3093\u3069\u306e\u30b7\u30b0\u30ca\u30eb\u306f\u4e00\u904e\u6027\u306e\u3082\u306e\u3068\u306a\u308a\u3001<br>\n\u6301\u7d9a\u7684\u306a\u30a2\u30eb\u30d5\u30a1\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u306f\u975e\u5e38\u306b\u96e3\u3057\u304f\u3001\u30aa\u30fc\u30d0\u30fc\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u306e\u5371\u967a\u6027\u3082\u304b\u306a\u308a\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002<br>\n\u307e\u305f\u30012018\u5e74\u4ee5\u964d\u3001\u6697\u53f7\u5e02\u5834\u3078\u306e\u95a2\u5fc3\u304c\u7206\u767a\u7684\u306b\u9ad8\u307e\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u30c7\u30fc\u30bf\u306e\u30dc\u30e9\u30c6\u30a3\u30ea\u30c6\u30a3\u3068\u76f8\u95a2\u69cb\u9020\u306f\u9ad8\u5ea6\u306a\u975e\u5b9a\u5e38\u6027\u3092\u6301\u3064\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002<br>\n\u6210\u529f\u3057\u305f\u53c2\u52a0\u8005\u306f\u3001\u3053\u308c\u3089\u306e\u691c\u8a0e\u4e8b\u9805\u306b\u6ce8\u610f\u6df1\u304f\u6ce8\u610f\u3092\u6255\u3044\u3001\u305d\u306e\u904e\u7a0b\u3067\u91d1\u878d\u4e88\u6e2c\u306e\u6280\u8853\u3068\u79d1\u5b66\u306b\u3064\u3044\u3066\u8cb4\u91cd\u306a\u6d1e\u5bdf\u3092\u5f97\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\nG-Research\u793e\u306f\u3001\u30e8\u30fc\u30ed\u30c3\u30d1\u3092\u4ee3\u8868\u3059\u308b\u30af\u30aa\u30f3\u30c4\u30fb\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\u306e\u30ea\u30b5\u30fc\u30c1\u4f1a\u793e\u3067\u3059\u3002<br>\n\u79c1\u305f\u3061\u306f\u3001\u6a5f\u68b0\u5b66\u7fd2\u3084\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3001\u305d\u3057\u3066\u6700\u5148\u7aef\u306e\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3092\u99c6\u4f7f\u3057\u3066\u3001\u5e02\u5834\u4e88\u6e2c\u306e\u53ef\u80fd\u6027\u3092\u9577\u5e74\u306b\u308f\u305f\u3063\u3066\u8ffd\u6c42\u3057\u3066\u304d\u307e\u3057\u305f\u3002<br>\n\u52b4\u50cd\u8005\u5411\u3051\u306e\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u3068AI\u306e\u6559\u80b2\u3092\u5c02\u9580\u3068\u3059\u308b\u30b1\u30f3\u30d6\u30ea\u30c3\u30b8\u30fb\u30b9\u30d1\u30fc\u30af\u306f\u3001G-Research\u793e\u3068\u63d0\u643a\u3057\u3066\u3053\u306e\u30b3\u30f3\u30da\u30c6\u30a3\u30b7\u30e7\u30f3\u3092\u958b\u50ac\u3057\u3066\u3044\u307e\u3059\u3002","4bb7bdfe":"\u6697\u53f7\u8cc7\u7523\uff08\u30a4\u30fc\u30b5\u30ea\u30a2\u30e0\uff09\u306e\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u898b\u308b\u3002","eccc515d":"UNIX\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306f\u3001\u4ee5\u4e0b\u306e\u6642\u9593\u3092\u8d77\u70b9\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3057\u305f\u3082\u306e\u3067\u3042\u308b\u3002","1b5f2f64":"# Overview","6c3485f9":"\u6697\u53f7\u8cc7\u7523\u5225\u306b\u898b\u308b\u3068\u3001UNIX\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u304c60\u305a\u3064\u5897\u3048\u3066\u3044\u308b\u3002<br>\n\u3064\u307e\u308a\u3001\u5404\u6697\u53f7\u8cc7\u7523\u306e\u30c7\u30fc\u30bf\u304c1\u5206\u3054\u3068\u306b\u8a18\u9332\u3055\u308c\u3066\u3044\u308b\u3002","fbfd504d":"2\u3064\u306e\u8cc7\u7523\uff08\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u3068\u30a4\u30fc\u30b5\u30ea\u30a2\u30e0\uff09\u306e\u5bfe\u6570\u30ea\u30bf\u30fc\u30f3\u3092\u53ef\u8996\u5316\u3059\u308b\u3002","920fc17e":"# Evaluation","596cda71":"\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u3068\u30a4\u30fc\u30b5\u30ea\u30a2\u30e0\u306e\u7d42\u5024\u3092\u6bd4\u8f03\u3057\u3001\u4e21\u8005\u306b\u76f8\u95a2\u95a2\u4fc2\u304c\u3042\u308b\u304b\u3092\u898b\u308b\u3002","395848dd":"14\u7a2e\u985e\u306e\u6697\u53f7\u901a\u8ca8\u306e\u77ed\u671f\u7684\u306a\u30ea\u30bf\u30fc\u30f3\u3092\u4e88\u6e2c\u3059\u308b\u3002","cf63858a":"# Prediction","d60cfd16":"\u8907\u6570\u306e\u30e2\u30c7\u30eb\u3092\u3001\u6697\u53f7\u8cc7\u7523\u3054\u3068\u306b\u4f7f\u3044\u5206\u3051\u3066\u4e88\u6e2c\u3092\u3059\u308b\u3002<br>\ndf_pred \u306b\u306f\u3001sample_prediction \u304c\u5165\u3063\u3066\u3044\u308b\u3002","9a132051":"# Datasets","983a9080":"### asset_details","b204df31":"2021\u5e74\u306b\u304a\u3051\u308b\u30012\u3064\u306e\u8cc7\u7523\uff08\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u3068\u30a4\u30fc\u30b5\u30ea\u30a2\u30e0\uff09\u306e\u76f8\u95a2\u95a2\u4fc2\u306e\u5909\u5316\u3092\u898b\u308b\u3002","ee9b1d0b":"\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f\u5143\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u516c\u958b\u3055\u308c\u3066\u3044\u308bNotebook\u306eLB\u30b9\u30b3\u30a2\u306f\u30aa\u30fc\u30d0\u30fc\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u3057\u3066\u3044\u308b\u3082\u306e\u3082\u591a\u3044\u3002<br>\n\u30aa\u30fc\u30d0\u30fc\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u306a\u3057\u306e\u30d9\u30b9\u30c8LB\u306f\u3001\u4eca\u65e5\u73fe\u5728\u30670.016\u3068\u306a\u3063\u3066\u3044\u308b\u3002\u3053\u308c\u306f\u3055\u3089\u306b\u6539\u5584\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002","7d1bf0d1":"\u3055\u3089\u306b\u77ed\u3044\u671f\u9593\u3067\u898b\u308b\u3068\u3001\u6f5c\u5728\u7684\u306a\u76f8\u95a2\u95a2\u4fc2\u304c\u5206\u304b\u308b\u3002<br>\n\u3088\u308a\u7d30\u304b\u304f\u7406\u89e3\u3059\u308b\u306b\u306f\u3001\u5404\u8cc7\u7523\u306e\u30ea\u30bf\u30fc\u30f3\u3092\u8a08\u7b97\u3059\u308b\u306e\u304c\u826f\u3044\u3002","3804fcdb":"\u6697\u53f7\u8cc7\u7523\uff08\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\uff09\u306e\u4fa1\u683c\u5909\u52d5\u3092\u78ba\u8a8d\u3059\u308b\u3002","da6b1271":"\u6697\u53f7\u8cc7\u7523\uff08\u30e9\u30a4\u30c8\u30b3\u30a4\u30f3\uff09\u306eOHLC\u30c1\u30e3\u30fc\u30c8\u3092\u78ba\u8a8d\u3059\u308b\u3002","0d97c309":"\u6697\u53f7\u8cc7\u7523\u3054\u3068\u306e\u53d6\u5f15\u91cf\u306e\u63a8\u79fb\u3092\u898b\u3066\u3044\u304f\u3002","5c2d02d7":"# EDA","cb2204a8":"# Reset","f6031679":"\u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u3001\u91cd\u8907\u3057\u3066\u3044\u308b\u671f\u9593\u304c\u306a\u3044\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3002","7d8a990b":"# Competition","1bb75070":"# Info","c63342a7":"### EDA\n\n\u30fb[Tutorial to the G-Research Crypto Competition](https:\/\/www.kaggle.com\/cstein06\/tutorial-to-the-g-research-crypto-competition)<br>\n\u30fb[G-Research Plots + EDA](https:\/\/www.kaggle.com\/odins0n\/g-research-plots-eda)<br>","8c1ab795":"# Module","0a0a13e6":"\u6697\u53f7\u8cc7\u7523\u3054\u3068\u306b X, y, model \u3092\u683c\u7d0d\u3057\u3066\u3044\u304f\u3002","06695073":"\u6b20\u640d\u7b87\u6240\u3092\u57cb\u3081\u308b\u305f\u3081\u306b\u3001\u76f4\u524d\u306e\u5024\u3067\u88dc\u5b8c\u3059\u308b","6aa24478":"# Module","f68edd30":"timestamp\u3092datetime\u578b\u306b\u5909\u63db\u3057\u3066\u3001\u30c7\u30fc\u30bf\u306e\u6642\u9593\u7bc4\u56f2\u3092\u78ba\u8a8d\u3059\u308b\u3002","82e85e07":"\u6697\u53f7\u8cc7\u7523\u3054\u3068\u306e\u4fa1\u683c\u5909\u52d5\u3092\u898b\u3066\u3044\u304f\u3002","e4d72471":"### train","8cfdb34b":"\u6697\u53f7\u8cc7\u7523\uff08\u30e9\u30a4\u30c8\u30b3\u30a4\u30f3\uff09\u306e\u4fa1\u683c\u5909\u52d5\u3092\u78ba\u8a8d\u3059\u308b\u3002","76e8fcd6":"\u6697\u53f7\u8cc7\u7523\uff08\u30a4\u30fc\u30b5\u30ea\u30a2\u30e0\uff09\u306e\u53d6\u5f15\u91cf\u3092\u78ba\u8a8d\u3059\u308b\u3002","2cdc9f03":"\u6697\u53f7\u8cc7\u7523\uff08\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\uff09\u306e\u53d6\u5f15\u91cf\u3092\u78ba\u8a8d\u3059\u308b\u3002","30d25204":"# Caution","6a7a580b":"\u6697\u53f7\u8cc7\u7523\uff08\u30a4\u30fc\u30b5\u30ea\u30a2\u30e0\uff09\u306e\u4fa1\u683c\u5909\u52d5\u3092\u78ba\u8a8d\u3059\u308b\u3002","d7ededf3":"# Overlap","3c5825cb":"\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u671f\u9593\u3092\u78ba\u8a8d\u3059\u308b\u3002","cb4abc3c":"# References","74b257a6":"### train","718a9c66":"\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3082\u542b\u307e\u308c\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u9664\u53bb\u3059\u308b\u3002","ee5899e0":"[G-Research Crypto Forecasting](https:\/\/www.kaggle.com\/c\/g-research-crypto-forecasting)","13b38b6d":"\u8cc7\u7523\u9593\u306e\u76f8\u95a2\u306f\u9ad8\u3044\u304c\u3001\u5909\u52d5\u3057\u3066\u304a\u308a\u3001\u975e\u5b9a\u5e38\u6027\u304c\u3042\u308b\u3053\u3068\u306b\u6c17\u3092\u3064\u3051\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n\u76f8\u95a2\u884c\u5217\u3092\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u3067\u3001\u3059\u3079\u3066\u306e\u8cc7\u7523\u9593\u306e\u76f8\u95a2\u3092\u78ba\u8a8d\u3059\u308b\u3002<br>\n\u3044\u304f\u3064\u304b\u306e\u8cc7\u7523\u306f\u3001\u4ed6\u306e\u8cc7\u7523\u3088\u308a\u3082\u306f\u308b\u304b\u306b\u9ad8\u3044\u30da\u30a2\u30ef\u30a4\u30ba\u76f8\u95a2\u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002","10623c9d":"\u6295\u7a3f\u3055\u308c\u305f\u5185\u5bb9\u306f\u3001\u30d4\u30a2\u30bd\u30f3\u76f8\u95a2\u4fc2\u6570\u306e\u52a0\u91cd\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002<br>\n\u8a73\u7d30\u306f\u3001\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30ce\u30fc\u30c8\u306e\u300c\u4e88\u6e2c\u306e\u8a73\u7d30\u3068\u8a55\u4fa1\u300d\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002<br>\n\u3053\u306e\u30b3\u30f3\u30da\u30c6\u30a3\u30b7\u30e7\u30f3\u3067\u306f\u3001\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bPython\u6642\u7cfb\u5217API\u3092\u4f7f\u7528\u3057\u3066\u6295\u7a3f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002<br>\n\u3053\u308c\u306b\u3088\u308a\u3001\u30e2\u30c7\u30eb\u304c\u6642\u9593\u7684\u306b\u5148\u306b\u9032\u3080\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002<br>\nAPI \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001Kaggle Notebooks \u306e\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002","ef07f252":"Notebook\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u3002","856779cd":"# Pipeline","2c22a366":"UNIX\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306f60\u5897\u3048\u308b\u30681\u5206\u30013600\u30671\u6642\u9593\u306e\u7d4c\u904e\u3068\u306a\u308b\u3002","1d7d46b4":"\u6697\u53f7\u8cc7\u7523\u3054\u3068\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf\u6570\u3092\u78ba\u8a8d\u3059\u308b\u3002","a2585fa1":"\u6697\u53f7\u8cc7\u7523\uff08\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\uff09\u306eOHLC\u30c1\u30e3\u30fc\u30c8\u3092\u78ba\u8a8d\u3059\u308b\u3002","bd376d0b":"### asset_details","0c6cfbd2":"\u6697\u53f7\u8cc7\u7523\uff08\u30a4\u30fc\u30b5\u30ea\u30a2\u30e0\uff09\u306eOHLC\u30c1\u30e3\u30fc\u30c8\u3092\u78ba\u8a8d\u3059\u308b\u3002","37d827c8":"\u524d\u51e6\u7406\u3092\u884c\u3044\u3001\u6697\u53f7\u8cc7\u7523\u3054\u3068\u306b\u30e2\u30c7\u30ea\u30f3\u30b0\u3092\u3059\u308b\u3002","d090d64a":"\u5206\u5358\u4f4d\u306e\u8cc7\u7523\u30c7\u30fc\u30bf\u306e\u6b20\u640d\u306f\u3001NaN\u30c7\u30fc\u30bf\u3067\u306f\u306a\u304f\u3001\u884c\u81ea\u4f53\u304c\u306a\u3044\u3053\u3068\u3067\u8868\u3055\u308c\u308b\u3002<br>\n\u305d\u306e\u305f\u3081\u3001\u3042\u308b\u884c\u30681\u3064\u524d\u306e\u884c\u3068\u306e\u5dee\u3092\u53d6\u3063\u3066\u3001\u305d\u308c\u304c60\u5206\u3067\u306a\u3051\u308c\u3070\u3001\u6b20\u640d\u304c\u3042\u308b\u3068\u5206\u304b\u308b\u3002","1f8f5731":"# Timeline","48f57820":"\u3042\u308b\u8cc7\u7523\u306e\u4fa1\u683c\u5909\u52d5\u3092\u5206\u6790\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4fa1\u683c\u5dee\u3092\u6271\u3048\u3070\u826f\u3044\u304c<br>\n\u8cc7\u7523\u306b\u3088\u3063\u3066\u4fa1\u683c\u30b9\u30b1\u30fc\u30eb\u304c\u7570\u306a\u308b\u305f\u3081\u3001\u30ea\u30bf\u30fc\u30f3\u3092\u6bd4\u8f03\u3059\u308b\u3053\u3068\u306f\u5bb9\u6613\u3067\u306f\u306a\u3044\u3002<br>\n\u3053\u308c\u306f\u3001\u4fa1\u683c\u306e\u5909\u5316\u7387\uff08\u30ea\u30bf\u30fc\u30f3\uff09\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u3067\u89e3\u6c7a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002<br>\n\u307e\u305f\u3001\u3053\u306e\u30ea\u30bf\u30fc\u30f3\u306f\u6295\u8cc7\u8cc7\u91d1\u306e\u5909\u5316\u7387\u3068\u4e00\u81f4\u3059\u308b\u3002","c96b2614":"OHLC\u306f\u3001Open\u30fbHigh\u30fbLow\u30fbClose\u306e\u30c1\u30e3\u30fc\u30c8\u3067\u3001\u5404\u8ca1\u52d9\u30c7\u30fc\u30bf\u306e\u59cb\u5024\u3001\u9ad8\u5024\u3001\u5b89\u5024\u304a\u3088\u3073\u7d42\u5024\u3092\u8868\u3059\u3002<br>\n\u30d5\u30a1\u30a4\u30ca\u30f3\u30b7\u30e3\u30eb\u30b7\u30ca\u30ea\u30aa\u3068\u682a\u306e\u5909\u52d5\u306e\u5206\u6790\u306e\u305f\u3081\u306b\u5f79\u7acb\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u6697\u53f7\u8cc7\u7523\u3054\u3068\u306eOHLC\u30c1\u30e3\u30fc\u30c8\u3092\u898b\u3066\u3044\u304f\u3002","dfbd33ed":"\u76ee\u7684\u5909\u6570\uff08Target\uff09\u306b\u6b20\u640d\u5024\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3002","0bf70433":"\u3053\u306e\u30b3\u30f3\u30c6\u30b9\u30c8\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u671f\u9593\u3068\u3001\u5b9f\u969b\u306e\u5e02\u5834\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u30e2\u30c7\u30eb\u3092\u5b9f\u884c\u3059\u308b\u671f\u9593\u304c\u3042\u308b\u4e88\u6e2c\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u3059\u3002\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb<br>\n\u30fb2021\u5e7411\u67082\u65e5 - \u958b\u59cb\u65e5<br>\n\u30fb2022\u5e741\u670825\u65e5 - \u30a8\u30f3\u30c8\u30ea\u30fc\u7de0\u3081\u5207\u308a\u3002\u7af6\u6280\u306b\u53c2\u52a0\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u3053\u306e\u65e5\u307e\u3067\u306b\u7af6\u6280\u898f\u5247\u306b\u540c\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002<br>\n\u30fb2022\u5e741\u670825\u65e5 - \u30c1\u30fc\u30e0\u5408\u4f75\u671f\u9650\u3002\u53c2\u52a0\u8005\u304c\u30c1\u30fc\u30e0\u306b\u53c2\u52a0\u3057\u305f\u308a\u3001\u30c1\u30fc\u30e0\u3092\u5408\u4f75\u3057\u305f\u308a\u3067\u304d\u308b\u6700\u7d42\u65e5\u3067\u3059\u3002<br>\n\u30fb2022\u5e742\u67081\u65e5 - \u6700\u7d42\u63d0\u51fa\u671f\u9650\u3002\n\n\u3059\u3079\u3066\u306e\u7de0\u3081\u5207\u308a\u306f\u3001\u7279\u306b\u660e\u8a18\u3055\u308c\u3066\u3044\u306a\u3044\u9650\u308a\u3001\u8a72\u5f53\u65e5\u306e\u5348\u5f8c11\u664259\u5206\uff08UTC\uff09\u3067\u3059\u3002<br>\n**\u65e5\u672c\u6642\u9593\u3067\u306f\u30012022\u5e7402\u670802\u65e5(\u706b) 08:59\uff08JTC\uff09**\u3068\u306a\u308a\u307e\u3059\u3002<br>\n\u5927\u4f1a\u4e3b\u50ac\u8005\u304c\u5fc5\u8981\u3068\u5224\u65ad\u3057\u305f\u5834\u5408\u306f\u3001\u30b3\u30f3\u30c6\u30b9\u30c8\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u66f4\u65b0\u3059\u308b\u6a29\u5229\u3092\u6709\u3057\u307e\u3059\u3002\n\n\u4e88\u6e2c\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3<br>\n\u6700\u7d42\u63d0\u51fa\u671f\u9650\u306e\u5f8c\u3001\u9078\u629e\u3055\u308c\u305f\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u3067\u5b9f\u884c\u3055\u308c\u308b\u5e02\u5834\u30c7\u30fc\u30bf\u306e\u66f4\u65b0\u3092\u53cd\u6620\u3057\u3066\u3001<br>\n\u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9\u304c\u5b9a\u671f\u7684\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\u66f4\u65b0\u306f\u304a\u3088\u305d2\u9031\u9593\u3054\u3068\u306b\u884c\u308f\u308c\u307e\u3059\u3002\n\n\u30fb2022\u5e745\u67083\u65e5 - \u30b3\u30f3\u30c6\u30b9\u30c8\u7d42\u4e86\u65e5 - \u53d7\u8cde\u8005\u306e\u767a\u8868","c6416a24":"\u6697\u53f7\u8cc7\u7523\uff08\u30e9\u30a4\u30c8\u30b3\u30a4\u30f3\uff09\u306e\u53d6\u5f15\u91cf\u3092\u78ba\u8a8d\u3059\u308b\u3002","a5bdfec7":"\u6697\u53f7\u8cc7\u7523\uff08\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u3068\u30a4\u30fc\u30b5\u30ea\u30a2\u30e0\uff09\u306e\u6642\u9593\u63a8\u79fb\u3092\u78ba\u8a8d\u3059\u308b\u3002","fb308714":"### example_sumple_submission","637092d0":"# Datasets","23e8ed4e":"### example_test","bd9f9c70":"### Pipeline\n\n\u30fb[G-Research- Starter LGBM Pipeline](https:\/\/www.kaggle.com\/julian3833\/g-research-starter-lgbm-pipeline)<br>\n\u30fb[G-Research- Using the overlap fully [LB=0.99]](https:\/\/www.kaggle.com\/icaram\/g-research-using-the-overlap-fully-lb-0-99)<br>\n\u30fb[G-Research Crypto - XGB lag](https:\/\/www.kaggle.com\/mingyangyi\/g-research-crypto-xgb-lag)"}}