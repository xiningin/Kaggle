{"cell_type":{"ea54e1eb":"code","31e4c0d4":"code","79cdc0c7":"code","80cfcead":"code","7a9ef606":"code","158a46ae":"code","e3cae629":"code","9cd74f2d":"code","4e19281c":"code","ea2c8aec":"code","443a2e6b":"code","fc23fd46":"code","1965ff96":"code","b48f261f":"code","4cb5cb1f":"code","a3480847":"code","aae47f91":"code","d1e825c9":"code","ebcbc585":"code","80c4786b":"code","460bcbb1":"code","1d8dcca9":"code","f6aecad6":"code","d7df4f3b":"code","2770284a":"code","9d96f04a":"code","7f08d076":"code","f96505d1":"code","6b346725":"code","4574ef99":"code","d919ab5c":"code","f2dd16fd":"code","1d09deab":"code","3178b31c":"code","c77b529d":"code","c057f469":"code","12829175":"code","75cc626b":"code","ade6283b":"code","495228a9":"code","9ef89b6e":"code","5482d2d6":"code","401cd79a":"code","7d373b79":"code","5abfd36a":"code","7c07d3ed":"code","8c4757df":"code","73b2fb78":"code","6c9facc3":"code","b1040d7c":"code","de7f6db8":"code","de4a5a0d":"code","c421f5ff":"code","84319a0a":"code","f36a7f6f":"code","46f41ac0":"code","98e5fae5":"code","bf2e047f":"code","77e6cad6":"code","f91ec50a":"markdown","30bfb13b":"markdown","254050da":"markdown","0fac5b2a":"markdown","c30620df":"markdown","a5b18ae1":"markdown","c3c877c0":"markdown","b9add3cb":"markdown","4b5b1822":"markdown","8ca8d6de":"markdown","150c9a13":"markdown","6b74b038":"markdown","6485d7b6":"markdown","43cfecaf":"markdown","c6d2dd5d":"markdown","c6401156":"markdown","499dfd6f":"markdown","a38637ab":"markdown","b12d4f20":"markdown","1347192a":"markdown","0d30c8a4":"markdown","9601d60a":"markdown","2b8f8d2a":"markdown","bb5467e8":"markdown","76c6b4cd":"markdown","8a4cccf8":"markdown","e625d56c":"markdown","428d23a8":"markdown"},"source":{"ea54e1eb":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nfrom collections import Counter\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objs as go","31e4c0d4":"df = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')","79cdc0c7":"df.head()","80cfcead":"df.isna().sum()\/df.shape[0]","7a9ef606":"df.drop(['description','show_id'],axis = 1,inplace = True)","158a46ae":"df.dropna(inplace = True) #Dropping NAN rows","e3cae629":"df.isna().sum()\/df.shape[0] #Cleaned","9cd74f2d":"directors = Counter(df.director)","4e19281c":"topdirectors = directors.most_common(10)","ea2c8aec":"td = px.bar(x = [i[0] for i in topdirectors],y = [i[1] for i in topdirectors],color=[i[1] for i in topdirectors])\ntd.update_layout(title = 'TOP DIRECTORS',xaxis_title = 'Directors',yaxis_title = 'No. of Shows\/Movies')\n","443a2e6b":"countries = Counter(df.country)","fc23fd46":"topcountries = countries.most_common(10)","1965ff96":"tc = px.bar(x = [i[0] for i in topcountries],y = [i[1] for i in topcountries],color=[i[1] for i in topcountries])\ntc.update_layout(title = 'TOP COUNTRIES',xaxis_title = 'COUNTRIES',yaxis_title = 'Count')\n","b48f261f":"cast = Counter(df.cast)","4cb5cb1f":"topcasts = cast.most_common(10)","a3480847":"tcast = px.bar(x = [i[0] for i in topcasts],y = [i[1] for i in topcasts],color=[i[1] for i in topcasts])\ntcast.update_layout(title = 'TOP CASTS',xaxis_title = 'Name of Cast',yaxis_title = 'Count')\n","aae47f91":"ryear = Counter(df.release_year)","d1e825c9":"topry = ryear.most_common(10)","ebcbc585":"tyear = px.bar(x = [i[0] for i in topry],y = [i[1] for i in topry],color=[i[1] for i in topry],width = 1000)\ntyear.update_layout(title = 'TOP YEARS',xaxis_title = 'Years',yaxis_title = 'Count')\n","80c4786b":"movies = df.type == 'Movie'","460bcbb1":"md = Counter(df[movies].duration)","1d8dcca9":"topmd = md.most_common(10)","f6aecad6":"mdt = px.bar(x = [i[0] for i in topmd],y = [i[1] for i in topmd],color=[i[1] for i in topmd],width = 1000)\nmdt.update_layout(title = 'TOP MOVIES DURATION',xaxis_title = 'Duration',yaxis_title = 'Count')\n","d7df4f3b":"shows = df.type == 'TV Show'","2770284a":"sd = Counter(df[shows].duration)","9d96f04a":"topsd = sd.most_common(10)","7f08d076":"sdt = px.bar(x = [i[0] for i in topsd],y = [i[1] for i in topsd],color=[i[1] for i in topsd],width = 1000)\nsdt.update_layout(title = 'TOP SHOWS DURATION',xaxis_title = 'Duration',yaxis_title = 'Count')\n","f96505d1":"tl = Counter(df.listed_in)","6b346725":"topl = tl.most_common(10)","4574ef99":"toplisted = px.bar(x = [i[0] for i in topl],y = [i[1] for i in topl],color=[i[1] for i in topl],width = 1000)\ntoplisted.update_layout(title = 'TOP Genres',xaxis_title = 'Genres',yaxis_title = 'Count')\n","d919ab5c":"tr = Counter(df.rating)","f2dd16fd":"topr = tr.most_common(10)","1d09deab":"toprating = px.bar(x = [i[0] for i in topr],y = [i[1] for i in topr],color=[i[1] for i in topr],width = 1000)\ntoprating.update_layout(title = 'TOP Ratings',xaxis_title = 'Rating Name',yaxis_title = 'Count')\n","3178b31c":"df1 = pd.read_csv('..\/input\/amazon-prime-movies-and-tv-shows\/amazon_prime_titles.csv')","c77b529d":"df1.head()","c057f469":"adirectors = Counter(df1.director)","12829175":"atopdirectors = adirectors.most_common(10)","75cc626b":"atd = px.bar(x = [i[0] for i in atopdirectors],y = [i[1] for i in atopdirectors],range_y = [0,300],color=[i[1] for i in atopdirectors])\natd.update_layout(title = 'TOP DIRECTORS',xaxis_title = 'Directors',yaxis_title = 'No. of Shows\/Movies')\n","ade6283b":"acountry = Counter(df1.country)","495228a9":"atopcountry = acountry.most_common(10)","9ef89b6e":"atco = px.bar(x = [i[0] for i in atopcountry],y = [i[1] for i in atopcountry],range_y = [0,400])\natco.update_layout(title = 'TOP COUNTRY',xaxis_title = 'Country Name',yaxis_title = 'No. of Movies\/Shows')\n","5482d2d6":"acast = Counter(df1.cast)","401cd79a":"atopcast = acast.most_common(10)","7d373b79":"atc = px.bar(x = [i[0] for i in atopcast],y = [i[1] for i in atopcast],color=[i[1] for i in atopcast],range_y = [0,200])\natc.update_layout(title = 'TOP CAST',xaxis_title = 'Name of Cast',yaxis_title = 'No. of Movies\/Shows')\n","5abfd36a":"ayear = Counter(df1.release_year)\ntoprya = ayear.most_common(8)\ntyeara = px.bar(x = [i[0] for i in toprya],y = [i[1] for i in toprya],color=[i[1] for i in toprya],width = 1000)\ntyeara.update_layout(title = 'TOP YEARS',xaxis_title = 'Years',yaxis_title = 'Count')\n","7c07d3ed":"amovies = df1.type == 'Movie'","8c4757df":"amovies = Counter(df1[amovies].duration)\ntopmovies = amovies.most_common(8)\ntmovies = px.bar(x = [i[0] for i in topmovies],y = [i[1] for i in topmovies],color=[i[1] for i in topmovies],width = 1000)\ntmovies.update_layout(title = 'TOP Movie Duration',xaxis_title = 'Duration(Min)',yaxis_title = 'Count')\n","73b2fb78":"ashows = df1.type == 'TV Show'","6c9facc3":"ashows = Counter(df1[ashows].duration)\natopshows = ashows.most_common(8)\natshows = px.bar(x = [i[0] for i in atopshows],y = [i[1] for i in atopshows],color=[i[1] for i in atopshows],width = 1000)\natshows.update_layout(title = 'TOP Shows Duration',xaxis_title = 'Duration',yaxis_title = 'Count')\n","b1040d7c":"atl = Counter(df1.listed_in)\natopl = atl.most_common(10)\natoplisted = px.bar(x = [i[0] for i in atopl],y = [i[1] for i in atopl],color=[i[1] for i in atopl],width = 1000)\natoplisted.update_layout(title = 'TOP Genres',xaxis_title = 'Genres',yaxis_title = 'Count')\n","de7f6db8":"atr = Counter(df1.rating)\natopr = atr.most_common(10)\natoprating = px.bar(x = [i[0] for i in atopr],y = [i[1] for i in atopr],color=[i[1] for i in atopr],width = 1000)\natoprating.update_layout(title = 'TOP Ratings',xaxis_title = 'Rating Name',yaxis_title = 'Count')\n","de4a5a0d":"fig = make_subplots(rows=1, cols=1)\nfig.add_trace(\n    go.Bar(x = [i[0] for i in topdirectors],y = [i[1] for i in topdirectors],name = 'Netflix',width=.5))\nfig.add_trace(\n    go.Bar(x = [i[0] for i in atopdirectors],y = [i[1] for i in atopdirectors],name = 'Amazon',width = .5))\nfig.update_layout(height=600, width=800, title_text=\"Top Directors Comparision\")","c421f5ff":"fig = make_subplots(rows=1, cols=1)\nfig.add_trace(\n    go.Bar(x = [i[0] for i in topcountries],y = [i[1] for i in topcountries],name = 'Netflix',width=.5))\nfig.add_trace(\n    go.Bar(x = [i[0] for i in atopcountry],y = [i[1] for i in atopcountry],name = 'Amazon',width = .5))\nfig.update_layout(height=600, width=800, title_text=\"Top Countries Comparision\")","84319a0a":"fig = make_subplots(rows=1, cols=1)\nfig.add_trace(\n    go.Bar(x = [i[0] for i in topcasts],y = [i[1] for i in topcasts],name = 'Netflix',width=.5))\nfig.add_trace(\n    go.Bar(x = [i[0] for i in atopcast],y = [i[1] for i in atopcast],name = 'Amazon',width = .5))\nfig.update_layout(height=600, width=800, title_text=\"Top Cast Comparision\")","f36a7f6f":"fig = make_subplots(rows=1, cols=1)\nfig.add_trace(\n    go.Bar(x = [i[0] for i in topry],y = [i[1] for i in topry],name = 'Netflix',width=.5))\nfig.add_trace(\n    go.Bar(x = [i[0] for i in toprya],y = [i[1] for i in toprya],name = 'Amazon',width = .5))\nfig.update_layout(height=600, width=800, title_text=\"Top Years Comparision\")","46f41ac0":"fig = make_subplots(rows=1, cols=1)\nfig.add_trace(\n    go.Bar(x = [i[0] for i in topmd],y = [i[1] for i in topmd],name = 'Netflix',width=.5))\nfig.add_trace(\n    go.Bar(x = [i[0] for i in topmovies],y = [i[1] for i in topmovies],name = 'Amazon',width = .5))\nfig.update_layout(height=600, width=800, title_text=\"Top Movie Duration Comparision\")","98e5fae5":"fig = make_subplots(rows=1, cols=1)\nfig.add_trace(\n    go.Bar(x = [i[0] for i in topsd],y = [i[1] for i in topsd],name = 'Netflix',width=.5))\nfig.add_trace(\n    go.Bar(x = [i[0] for i in atopshows],y = [i[1] for i in atopshows],name = 'Amazon',width = .5))\nfig.update_layout(height=600, width=800, title_text=\"Top Show Duration Comparision\")","bf2e047f":"fig = make_subplots(rows=1, cols=1)\nfig.add_trace(\n    go.Bar(x = [i[0] for i in topl],y = [i[1] for i in topl],name = 'Netflix',width=.5))\nfig.add_trace(\n    go.Bar(x = [i[0] for i in atopl],y = [i[1] for i in atopl],name = 'Amazon',width = .5))\nfig.update_layout(height=600, width=800, title_text=\"Top Listed-In Comparision\")","77e6cad6":"fig = make_subplots(rows=1, cols=1)\nfig.add_trace(\n    go.Bar(x = [i[0] for i in topr],y = [i[1] for i in topr],name = 'Netflix',width=.5))\nfig.add_trace(\n    go.Bar(x = [i[0] for i in atopr],y = [i[1] for i in atopr],name = 'Amazon',width = .5))\nfig.update_layout(height=600, width=800, title_text=\"Top Rating Comparision\")","f91ec50a":"**Top Movies Duration**","30bfb13b":"**Top Movie Duration**","254050da":"**Top Directors and Countries**","0fac5b2a":"**Top Ratings**","c30620df":"**TOP Genres**","a5b18ae1":"**Top Directors and Countries**","c3c877c0":"## EDA","b9add3cb":"**Top Cast**","4b5b1822":"**Dropping unnecessary columns**","8ca8d6de":"**Top Ratings**","150c9a13":"**Top Movies Duration**","6b74b038":"**Top Cast Comparision**","6485d7b6":"## Amazon Prime","43cfecaf":"**Top Cast**","c6d2dd5d":"**Top Ratings**","c6401156":"## Hope this notebook have helped you in getting meaningful Insights, If yes, please upvote! Thank you!\n","499dfd6f":"## Comparing Netflix & Amazon Prime","a38637ab":"**Top Genres**","b12d4f20":"**Top Shows Duration**","1347192a":"**Top Years**","0d30c8a4":"**Top Countries**","9601d60a":"**Top Directors**","2b8f8d2a":"**Top Show Duration**","bb5467e8":"**Top Shows Duration**","76c6b4cd":"**Top Listed-In**","8a4cccf8":"**Top Years**","e625d56c":"## Netflix","428d23a8":"**Top Year**"}}