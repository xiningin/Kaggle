{"cell_type":{"d723b859":"code","53110628":"code","6f71420d":"code","7094ab8b":"code","ad56ac03":"code","5b211afb":"code","17e2fc85":"code","420d78f6":"code","45c8f3c6":"code","57e1cab5":"code","3f2e2986":"code","52feb96e":"code","332581d9":"code","04943556":"code","f9ac39ed":"code","e9473a6b":"code","f24a9f67":"code","59bbc58d":"code","633479f0":"code","7b738b63":"code","3a7d5105":"code","049a5d1e":"code","03dff02a":"code","dc3f2547":"code","47f70de1":"code","720b9b99":"code","0ec447f9":"code","4127bd27":"code","4f69759f":"code","ea7b039e":"code","3db0a893":"code","d361d226":"code","61f07a14":"code","7d62b839":"code","3bcdc33b":"code","c373ba96":"code","30ce65c8":"code","e085ddd3":"code","510914ab":"code","c6f49007":"code","8a39ea3b":"code","08522ae6":"code","f6196e17":"code","923b0358":"code","0a451e7a":"code","e1a7293a":"code","e4936068":"code","cd1a4a77":"code","1e531b8f":"code","105773d6":"code","804d54b7":"code","9e94e00b":"code","a658e138":"code","3393e8b2":"code","072928c1":"code","d512dcf3":"markdown","a606a3d4":"markdown","8bcbe659":"markdown","8feb4c75":"markdown","a73c019a":"markdown","1c954131":"markdown","a89f9510":"markdown","c0929377":"markdown","1a7718bd":"markdown","41b1c54d":"markdown","0994d3ee":"markdown","ca5ef3f4":"markdown","f7ac0e3d":"markdown","5ce5c97b":"markdown","36a95dba":"markdown","8f294194":"markdown","c08071f3":"markdown"},"source":{"d723b859":"## define configuration\nPATH_TRAIN = '..\/input\/tabular-playground-series-apr-2021\/train.csv'\nPATH_TEST = '..\/input\/tabular-playground-series-apr-2021\/test.csv'\n\nPATH_AUTOGLUON_SUBMISSION = 'submission_autogluon.csv'\nPATH_EVALML_SUBMISSION = 'submission_evalml.csv'\nPATH_FLAML_SUBMISSION = 'submission_flaml.csv'\nPATH_H2OAML_SUBMISSION = 'submission_h2oaml.csv'\nPATH_LAML_SUBMISSION = 'submission_laml.csv'\nPATH_MLJAR_SUBMISSION = 'submission_mljar.csv'\nPATH_TPOT_SUBMISSION = 'submission_tpot.csv'\n\nMAX_MODEL_RUNTIME_MINS = 10\nMAX_MODEL_RUNTIME_SECS = MAX_MODEL_RUNTIME_MINS * 60","53110628":"## prepare data\nimport gc\nimport os\nimport shutil\nimport datatable as dt\nfrom pathlib import Path\n\ntrain = dt.fread(PATH_TRAIN)\ntest = dt.fread(PATH_TEST)\n\ntarget = train['Survived'].to_numpy().ravel()\ntest_ids = test['PassengerId']\n\ndel train[:, ['PassengerId', 'Survived']]\ntest = test[:, train.names]","6f71420d":"## install packages\n!python3 -m pip install -q \"mxnet<2.0.0\"\n!python3 -m pip install -q autogluon\n!python3 -m pip install -q -U graphviz\n!python3 -m pip install -q -U scikit-learn","7094ab8b":"## import packages\nfrom autogluon.tabular import TabularPredictor","ad56ac03":"## run model\ntrain['target'] = target\n\nmodel_autogluon = TabularPredictor(label='target')\nmodel_autogluon.fit(train_data=train.to_pandas(), excluded_model_types=['KNN'], time_limit=MAX_MODEL_RUNTIME_SECS)\n\ndel train['target']","5b211afb":"## check leaderboard\nmodel_autogluon.leaderboard()","17e2fc85":"## generate predictions\npreds_autogluon = model_autogluon.predict_proba(test.to_pandas())[True]","420d78f6":"## create submission\nsubmission = dt.Frame(PassengerId=test_ids, Survived=dt.Frame(preds_autogluon))\nsubmission.head()","45c8f3c6":"## save submission\nsubmission.to_csv(PATH_AUTOGLUON_SUBMISSION)","57e1cab5":"## clear memory\nshutil.rmtree('AutogluonModels')\ndel model_autogluon\n\ngc.collect()","3f2e2986":"## install packages\n!python3 -m pip install -q evalml==0.28.0","52feb96e":"## import packages\nfrom evalml.automl import AutoMLSearch","332581d9":"## run model\nmodel_evalml = AutoMLSearch(X_train=train.to_pandas(), y_train=target, problem_type='binary', max_time=MAX_MODEL_RUNTIME_SECS)\nmodel_evalml.search()","04943556":"## check leaderboard\nmodel_evalml.rankings","f9ac39ed":"## generate predictions\npreds_evalml = model_evalml.best_pipeline.predict_proba(test.to_pandas())[True]","e9473a6b":"## create submission\nsubmission = dt.Frame(PassengerId=test_ids, Survived=dt.Frame(preds_evalml))\nsubmission.head()","f24a9f67":"## save submission\nsubmission.to_csv(PATH_EVALML_SUBMISSION)","59bbc58d":"## clear memory\nos.remove('evalml_debug.log')\ndel model_evalml\n\ngc.collect()","633479f0":"## install packages\n!python3 -m pip install -q flaml==0.5.0\n!python3 -m pip install -q -U graphviz\n!python3 -m pip install -q -U scikit-learn","7b738b63":"## import packages\nfrom flaml import AutoML","3a7d5105":"## run model\nmodel_flaml = AutoML()\nmodel_flaml.fit(X_train=train.to_pandas(), y_train=target, metric='accuracy', time_budget=MAX_MODEL_RUNTIME_SECS)","049a5d1e":"## generate predictions\npreds_flaml = model_flaml.predict_proba(test.to_pandas())[:, 1]","03dff02a":"## create submission\nsubmission = dt.Frame(PassengerId=test_ids, Survived=preds_flaml)\nsubmission.head()","dc3f2547":"## save submission\nsubmission.to_csv(PATH_FLAML_SUBMISSION)","47f70de1":"## clear memory\nif Path('catboost_info').exists():\n    shutil.rmtree('catboost_info')\n\nos.remove('default.log')\ndel model_flaml\n\ngc.collect()","720b9b99":"## import packages\nimport h2o\nfrom h2o.automl import H2OAutoML","0ec447f9":"## prepare data\nh2o.init()\n\nh2o_train = h2o.H2OFrame(train.to_pandas())\nh2o_test = h2o.H2OFrame(test.to_pandas())\n\nh2o_train['target'] = h2o.H2OFrame(target).asfactor()","4127bd27":"## run model\nfeatures = [x for x in h2o_train.columns if x != 'target']\n\nmodel_h2oaml = H2OAutoML(stopping_metric='misclassification', max_runtime_secs=MAX_MODEL_RUNTIME_SECS)\nmodel_h2oaml.train(x=features, y='target', training_frame=h2o_train)","4f69759f":"## check leaderboard\nmodel_h2oaml.leaderboard","ea7b039e":"## generate predictions\npreds_h2oaml = model_h2oaml.leader.predict(h2o_test).as_data_frame()['True']","3db0a893":"## create submission\nsubmission = dt.Frame(PassengerId=test_ids, Survived=dt.Frame(preds_h2oaml))\nsubmission.head()","d361d226":"## save submission\nsubmission.to_csv(PATH_H2OAML_SUBMISSION)","61f07a14":"## clear memory\nh2o.cluster().shutdown()\ndel features, model_h2oaml\n\ngc.collect()","7d62b839":"## install packages\n!python3 -m pip install -q lightautoml\n!python3 -m pip install -q -U torch\n!python3 -m pip install -q -U torchvision","3bcdc33b":"## import packages\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML\nfrom lightautoml.tasks import Task","c373ba96":"## run model\ntrain['target'] = target\n\nmodel_laml = TabularAutoML(task=Task(name='binary', metric='accuracy'), timeout=MAX_MODEL_RUNTIME_SECS)\nmodel_laml.fit_predict(train_data=train.to_pandas(), roles={'target': 'target'})\n\ndel train['target']","30ce65c8":"## generate predictions\npreds_laml = model_laml.predict(test.to_pandas()).data.ravel()","e085ddd3":"## create submission\nsubmission = dt.Frame(PassengerId=test_ids, Survived=preds_laml)\nsubmission.head()","510914ab":"## save submission\nsubmission.to_csv(PATH_LAML_SUBMISSION)","c6f49007":"## clear memory\nif Path('catboost_info').exists():\n    shutil.rmtree('catboost_info')\n\ndel model_laml\n\ngc.collect()","8a39ea3b":"## install packages\n!python3 -m pip install -q mljar-supervised\n!python3 -m pip install -q -U graphviz","08522ae6":"## import packages\nfrom supervised import AutoML","f6196e17":"## run model\nmodel_mljar = AutoML(eval_metric='accuracy', total_time_limit=MAX_MODEL_RUNTIME_SECS, results_path='.\/model_mljar')\nmodel_mljar.fit(X=train.to_pandas(), y=target)","923b0358":"## check leaderboard\nmodel_mljar.get_leaderboard()","0a451e7a":"## generate predictions\npreds_mljar = model_mljar.predict_proba(test.to_pandas())[:, 1]","e1a7293a":"## create submission\nsubmission = dt.Frame(PassengerId=test_ids, Survived=preds_mljar)\nsubmission.head()","e4936068":"## save submission\nsubmission.to_csv(PATH_MLJAR_SUBMISSION)","cd1a4a77":"## clear memory\nshutil.rmtree('model_mljar')\ndel model_mljar\n\ngc.collect()","1e531b8f":"## import packages\nfrom tpot import TPOTClassifier\nfrom sklearn.preprocessing import LabelEncoder","105773d6":"train_test = dt.rbind(train, test)\n\nfor col in ['Name', 'Sex', 'Ticket', 'Cabin', 'Embarked']:\n    le = LabelEncoder()\n    train_test[col] = le.fit_transform(train_test[col])\n\ntrain_tpot = train_test[:train.nrows, :]\ntest_tpot = train_test[train.nrows:, :]\n\nmodel_tpot = TPOTClassifier(scoring='roc_auc', n_jobs=-1, max_time_mins=MAX_MODEL_RUNTIME_MINS)\nmodel_tpot.fit(features=train_tpot.to_pandas(), target=target)","804d54b7":"## check pipeline\nprint(model_tpot.fitted_pipeline_)","9e94e00b":"## generate predictions\npreds_tpot = model_tpot.predict_proba(test_tpot.to_pandas())[:, 1]","a658e138":"## create submission\nsubmission = dt.Frame(PassengerId=test_ids, Survived=preds_tpot)\nsubmission.head()","3393e8b2":"## save submission\nsubmission.to_csv(PATH_TPOT_SUBMISSION)","072928c1":"## clear memory\ndel train_tpot, test_tpot, model_tpot\n\ngc.collect()","d512dcf3":"Read more in [Documentation of FLAML](https:\/\/microsoft.github.io\/FLAML)","a606a3d4":"## EvalML\n<img src='https:\/\/evalml.alteryx.com\/en\/stable\/_images\/evalml_horizontal.svg' width='250px'>\n\n[EvalML](https:\/\/evalml.alteryx.com\/en\/stable) is an automl library open sourced by [Alteryx](http:\/\/www.alteryx.com)","8bcbe659":"## MLJAR\n<img src='https:\/\/mljar.com\/images\/logo\/mljar_circle3.svg' width='150px'>\n\n[MLJAR](https:\/\/mljar.com) is an automated machine learning tool for tabular data","8feb4c75":"## FLAML\n<img src='https:\/\/github.com\/microsoft\/FLAML\/raw\/main\/docs\/images\/FLAML.png' width='150px'>\n\n[FLAML](https:\/\/microsoft.github.io\/FLAML) is a fast and light automl library open sourced by [Microsoft](https:\/\/opensource.microsoft.com)","a73c019a":"## AutoGluon\n<img src='https:\/\/user-images.githubusercontent.com\/16392542\/77208906-224aa500-6aba-11ea-96bd-e81806074030.png' width='250px'>\n\n[AutoGluon](https:\/\/auto.gluon.ai\/stable\/index.html) is an automl library open sourced by [Amazon](http:\/\/amazon.com\/aws)","1c954131":"<div align='center'>\n    <h1>AutoML Tutorial<\/h1>\n    <img src='https:\/\/github.com\/vopani\/fortyone\/blob\/main\/images\/automl_banner_530_x_455.png?raw=true'>\n<\/div>","a89f9510":"## TPOT\n<img src='https:\/\/raw.githubusercontent.com\/EpistasisLab\/tpot\/master\/images\/tpot-logo.jpg' width='150px'>\n\n[TPOT](http:\/\/epistasislab.github.io\/tpot) is a Python Automated Machine Learning tool that optimizes machine learning pipelines using genetic programming","c0929377":"Read more in [Documentation of EvalML](https:\/\/evalml.alteryx.com)","1a7718bd":"Read more in [Documentation of TPOT](http:\/\/epistasislab.github.io\/tpot)","41b1c54d":"Read more in [Documentation of H2O AutoML](https:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/automl.html)","0994d3ee":"Read more in [Documentation of MLJAR](https:\/\/supervised.mljar.com)","ca5ef3f4":"Read more in [Documentation of LightAutoML](https:\/\/lightautoml.readthedocs.io\/en\/latest\/index.html)","f7ac0e3d":"**Auto**mated **M**achine **L**earning (**AutoML**) has become widely adopted for building, experimenting and productionizing various types of machine learning models across business use-cases.\n\nThere are different open source solutions available and this notebook explores a simple baseline solution for some of them on the [Kaggle TPS (April 2021) competition](https:\/\/www.kaggle.com\/c\/tabular-playground-series-apr-2021).\n\n* [AutoGluon](#AutoGluon)\n* [EvalML](#EvalML)\n* [FLAML](#FLAML)\n* [H2O AutoML](#H2O-AutoML)\n* [LightAutoML](#LightAutoML)\n* [MLJAR](#MLJAR)\n* [TPOT](#TPOT)","5ce5c97b":"## LightAutoML\n<img src='https:\/\/github.com\/sberbank-ai-lab\/LightAutoML\/blob\/master\/imgs\/LightAutoML_logo_small.png?raw=true' width='150px'>\n\n[LightAutoML](https:\/\/github.com\/sberbank-ai-lab\/LightAutoML) is a framework for automatic classification and regression model creation open sourced by [Sberbank](https:\/\/www.sberbank.com) AI Lab.","36a95dba":"## Similar Tutorials\nSimilar tutorials on other Kaggle TPS competitions are published here:\n\n* [AutoML Tutorial: TPS (January 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-january-2021)\n* [AutoML Tutorial: TPS (February 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-february-2021)\n* [AutoML Tutorial: TPS (March 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-march-2021)\n* [AutoML Tutorial: TPS (May 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-may-2021)\n* [AutoML Tutorial: TPS (June 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-june-2021)\n* [AutoML Tutorial: TPS (July 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-july-2021)\n* [AutoML Tutorial: TPS (August 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-august-2021)\n* [AutoML Tutorial: TPS (September 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-september-2021)","8f294194":"## H2O AutoML\n<img src='https:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/_images\/h2o-automl-logo.jpg' width='150px'>\n\n[H2O AutoML](https:\/\/www.h2o.ai\/products\/h2o-automl) is an automated machine learning library open sourced by [H2O.ai](https:\/\/h2o.ai)","c08071f3":"Read more in [Documentation of AutoGluon](https:\/\/auto.gluon.ai\/stable\/index.html)"}}