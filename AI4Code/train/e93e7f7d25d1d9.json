{"cell_type":{"83378c0b":"code","70971c8b":"code","c9e3f41d":"code","bebdb471":"code","c66077d2":"code","f7fcef34":"code","840fabbe":"code","e456aa59":"code","155865b1":"code","76c43fc0":"markdown","1abe4f4b":"markdown","4c4579f7":"markdown","1aac113f":"markdown","cf1d4f21":"markdown","7bdeea3a":"markdown","a17b399f":"markdown","23e3c878":"markdown"},"source":{"83378c0b":"import joblib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport cuml\nimport pandas as pd\nimport numpy as np","70971c8b":"def plot(emb, title, lg, ylim=None, xlim=None, target_lg=None):\n    x, y = emb[:, 0], emb[:, 1]\n    sns.scatterplot(x=x, y=y, hue=lg, legend=False)\n    if xlim is not None: plt.xlim(xlim[0], xlim[1])\n    if ylim is not None: plt.ylim(ylim[0], ylim[1])\n    for i, txt in enumerate(lg):\n        if target_lg is not None:\n            if txt != target_lg:\n                continue\n        plt.annotate(txt, (x[i], y[i]))\n    plt.title(title)\n    \n    \ndef plot_cropped(emb, cur_lg, lg, title, margin=5):\n    cur = emb[np.where(lg==cur_lg)[0]]\n    min_y, max_y = cur[:, 0].min(), cur[:, 0].max()\n    min_x, max_x = cur[:, 1].min(), cur[:, 1].max()\n    ylim = (min_y-margin, max_y+margin)\n    xlim = (min_x-margin, max_x+margin)\n    index = np.where((emb[:, 0]>ylim[0])&(emb[:, 0]<ylim[1])&(emb[:, 1]>xlim[0])&(emb[:, 1]<xlim[1]))[0]\n    plot(emb[index], title, lg[index], ylim=xlim, xlim=ylim, target_lg=cur_lg)","c9e3f41d":"orig_emb = joblib.load('..\/input\/shopee-visualization\/orig_emb.jl')\ninb_emb = joblib.load('..\/input\/shopee-visualization\/inb_emb.jl')\nlg = joblib.load('..\/input\/shopee-visualization\/label_group.jl')\nlg = pd.factorize(lg)[0]\nlg_diff = pd.read_pickle('..\/input\/shopee-visualization\/lg_diff.pkl')","bebdb471":"lg_diff","c66077d2":"print('Improvement in validation set f1 score after applying INB')\nprint((lg_diff*lg_diff.index.map(pd.Series(lg).value_counts())).sum()\/len(lg))","f7fcef34":"tsne = cuml.TSNE(random_state=0)\norig_emb_tsne = tsne.fit_transform(orig_emb)\ninb_emb_tsne = tsne.fit_transform(inb_emb)","840fabbe":"plt.figure(figsize=(100, 100))\nplot(orig_emb_tsne, 'TSNE VISUALIZATION OF EMBEDDINGS BEFORE INB', lg)\nplt.show()","e456aa59":"plt.figure(figsize=(100, 100))\nplot(inb_emb_tsne, 'TSNE VISUALIZATION OF EMBEDDINGS AFTER INB', lg)\nplt.show()","155865b1":"for cur_lg in lg_diff.index[:100]:    \n    if (lg==cur_lg).sum() < 4:\n        continue \n    plt.figure(figsize=(12, 6))\n    plt.subplot(1, 2, 1)\n    plot_cropped(orig_emb_tsne, cur_lg, lg, f'{cur_lg} (BEFORE INB)')\n    plt.subplot(1, 2, 2)\n    plot_cropped(inb_emb_tsne, cur_lg, lg, f'{cur_lg} (AFTER INB)')\n    plt.show()","76c43fc0":"We can see that the clusters became clearer after we applied INB.","1abe4f4b":"### 1. Embeddings Before Applying INB","4c4579f7":"# TSNE Visualizations of the Embeddings from Most Improved Label Groups\n\nWe'll pick label groups that improved the most, with group size > 3. Then we'll visualize how the positions of the items of that label group changed after applying INB. We will zoom into the relevant areas in the above visualizations to show you the effect better.","1aac113f":"We can see that the items of the same label group tends to cluster better after we apply INB.","cf1d4f21":"`lg_diff` contains gap between these two\n* mean f1 score per label group before applying INB\n* mean f1 score per label group after applying INB","7bdeea3a":"# TSNE Visualization of the Whole Validation Set Embeddings\n\nYou can open the output images in another tab or download it, and zoom it to see the label annotations.","a17b399f":"### 2. Embeddings After Applying INB","23e3c878":"This notebook is written to show the effect of **INB(Iterative Neighborhood Blending)** technique, which is part of the 1st place solution of *Shopee - Price Match Guarantee* competition.\n\nWe will use the validation set embedding from our model as the base embedding, and compare two visualizations.\n1. TSNE visualization of the embedding **before** applying INB\n2. TSNE visualization of the embedding **after** applying INB\n\nNote that validation f1-score increased from 0.9060 to 0.9256 when we applied INB.\n\nYou can find explanation of the INB technique and overall solution [here](https:\/\/www.kaggle.com\/c\/shopee-product-matching\/discussion\/238136)"}}