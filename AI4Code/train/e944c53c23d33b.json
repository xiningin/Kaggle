{"cell_type":{"02217eaa":"code","c2be0401":"code","33b5181c":"code","0362313f":"code","ce332562":"code","c0c9cf4e":"code","b5bfdb82":"code","ded94519":"code","47056d93":"code","754313a7":"code","0c55f55d":"code","2559e4ad":"code","ff7db3d8":"code","9c56d0b2":"code","f2f8cfdb":"code","0013ca34":"markdown","81f38d8c":"markdown","5cfe2cb1":"markdown","b33d5133":"markdown","fe4e2f7a":"markdown"},"source":{"02217eaa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c2be0401":"#Read using encoding=\"ISO-8859-1\", otherwise won't work\n\ndf=pd.read_csv('..\/input\/crimes-in-boston\/crime.csv',index_col=0, encoding=\"ISO-8859-1\")\ndf.head()","33b5181c":"#Check what are the unique values in Offense Code Group\ndf.OFFENSE_CODE_GROUP.unique()","0362313f":"#Check how many counts per unique value of OFFENSE_CODE_GROUP\n\na=df.OFFENSE_CODE_GROUP.value_counts()\nprint(a)","ce332562":"# Set the width and height of the figure\nplt.figure(figsize=(13,5))\n\n# Add title\nplt.title(\"Number of crimes in 2015-2018\")\n\nsns.barplot(x=a.index, y=a)\n\n#Rotate x-labels, otherwise it's utterly hectic\nplt.xticks(rotation=90)\n\n# Add label for vertical axis\nplt.ylabel(\"Counts\")","c0c9cf4e":"# Let's group by year\ndf_years=df.groupby('YEAR')['OFFENSE_CODE_GROUP']\ndf_years.first()\n","b5bfdb82":"#Number of unique crimes by year, sorted in descending order\n\ndf_2015=df_years.get_group(2015).value_counts()\ndf_2016=df_years.get_group(2016).value_counts()\ndf_2017=df_years.get_group(2017).value_counts()\ndf_2018=df_years.get_group(2018).value_counts()","ded94519":"plt.figure(figsize=(13,5))\n\n# Add title\nplt.title(\"Number of crimes in 2015\")\n\nsns.barplot(x=df_2015.index, y=df_2015)\nplt.xticks(rotation=90)\n# Add label for vertical axis\nplt.ylabel(\"Counts\")","47056d93":"# Apparently Boston seems to be a dangerous city to drive in. ","754313a7":"# Code 3303 refers to NOISY PARTY\/RADIO-ARREST. Let's see how loud partying in Boston was like throughout the years\n\ndf_codes=df.groupby('YEAR')['OFFENSE_CODE']\ndf_codes.first()\n\n#Number of 3303 codes grouped by year\n\ndf_code2015=df_codes.get_group(2015).value_counts()\ndf_code2016=df_codes.get_group(2016).value_counts()\ndf_code2017=df_codes.get_group(2017).value_counts()\ndf_code2018=df_codes.get_group(2018).value_counts()","0c55f55d":"party_2015=df_code2015[3303]\nparty_2016=df_code2016[3303]\nparty_2017=df_code2017[3303]\nparty_2018=df_code2018[3303]\n#Creating a dataframe using dictionary\ndata={'Year':[2015, 2016, 2017, 2018], 'Noisy parties':[party_2015, party_2016, party_2017, party_2018]}\nnoisy_parties=pd.DataFrame(data)\nnoisy_parties","2559e4ad":"plt.figure(figsize=(4,4))\n\n# Add title\nplt.title(\"Number of noisy parties per year in Boston\")\n\nsns.barplot(x=noisy_parties.Year, y=noisy_parties['Noisy parties'])\nplt.xticks(rotation=30)\n# Add label for vertical axis\nplt.ylabel(\"No of Parties\")","ff7db3d8":"#2016 was a good year for noisy partying. ","9c56d0b2":"#Name of streets where crimes had been commited, sorted by descending order\ndf.STREET.value_counts()","f2f8cfdb":"\nfrom wordcloud import WordCloud, STOPWORDS\n\n#texto=list(df.OFFENSE_CODE_GROUP)\ntexto=\",\".join(list(df.OFFENSE_CODE_GROUP))\n\ncatcloud = WordCloud(\n    stopwords=None,\n    background_color='black',\n    width=1200,\n    height=800\n).generate(texto)\n\nplt.imshow(catcloud, alpha=0.8)\nplt.axis('off')\nplt.show()","0013ca34":"**Barplots with Seaborn**","81f38d8c":"** WordClouds, just for the heck of it**","5cfe2cb1":"**A beginner's level exploration of Crimes in Boston data using Pandas, Seaborn and WordClouds**","b33d5133":"WordCloud for crimes 2015-2018","fe4e2f7a":"Washington St gets the prize to \"The No 1 Street with more crimes 2015-2018, Boston\". \nProbably because it is the longest street in Boston. Many motor vehicle accidents\nmust happen in Washington St, as well as larceny, and drug violation in a less extent."}}