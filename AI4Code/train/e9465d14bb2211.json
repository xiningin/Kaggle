{"cell_type":{"990653f3":"code","2cbcfc2d":"code","6a939ecd":"code","af624cb7":"code","33688be8":"markdown","b9b0bc38":"markdown","ddf9380a":"markdown","54310526":"markdown"},"source":{"990653f3":"# not all are used but i tried a few different Sankey producing modules. Finally settles with Plotly.\n\nimport pandas as pd\nimport glob\nimport path\nimport seaborn as sns\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport plotly\nimport numpy as np\n%matplotlib inline\nimport plotly.graph_objects as go\nfrom PIL import Image\nimport plotly.io as pio\npio.renderers.default='notebook'\n\n\nimport holoviews as hv\nimport plotly.graph_objects as go\nimport plotly.express as pex\nhv.extension('bokeh')","2cbcfc2d":"sankey_df = pd.read_csv('..\/input\/sankey-early-20181001-20190901\/sankey_first_year.csv')\n\nsankey_df.columns = ['Crime', 'Outcome', 'Number']\nprint ('Choose some of these to add to the sankey: \\n \\n', pd.unique(sankey_df.Crime))\n","6a939ecd":"# add the Crime types you want to display\n\n# enter as many of the above crimes in to the below to have them display. Dont choose 'Anti-social behaviour' as the only outcome us unknown\n\ndisplay_crimes = ['Violence and sexual offences']\nsankey_df = sankey_df.loc[sankey_df['Crime'].isin(display_crimes)]\n\n# dropping nan's. but would reccomend you investigate nans if you are interested in solid results\nsankey_df = sankey_df.dropna()","af624cb7":"colors = pex.colors.qualitative.D3\n\nall_nodes = sankey_df.Crime.values.tolist() + sankey_df.Outcome.values.tolist()\nsource_indices = [all_nodes.index(crime) for crime in sankey_df.Crime]\ntarget_indices = [all_nodes.index(outcome) for outcome in sankey_df.Outcome]\n\n\nnode_colors_mappings = dict([(node,np.random.choice(colors)) for node in all_nodes])\nnode_colors = [node_colors_mappings[node] for node in all_nodes]\nedge_colors = [node_colors_mappings[node] for node in sankey_df.Crime]\n\n\nfig = go.Figure(data=[go.Sankey(\n    node = dict(\n      pad = 20,\n      thickness = 20,\n      line = dict(color = \"black\", width = 1.0),\n      label =  all_nodes,\n      color =  node_colors,\n    ),\n\n    link = dict(\n      source =  source_indices,\n      target =  target_indices,\n      value =  sankey_df.Number,\n      color = edge_colors,\n))])\n\n\nfig.layout.update(title_text=\"Outcome of Crimes\",\n                  height=500,\n                  font_size=10)\n\n\n# Showing the Sankey\nfig.show()\n\n# exporting the file to HTML so the interactive chart can be embedded in a website\nfig.write_html(\"crime_sankey.html\")","33688be8":"# importing prerequesits","b9b0bc38":"Making the sankey","ddf9380a":"# Introduction\nThis data is from all UK street crimes between October 2018 - end of September 2019. There is more recent data available but i wanted the time period that gives the best chance of showing a meaningful outcome. You can also break to data down by Police Force which could show super interesting results.\n\nThe data is from an 18m row dataset in this started notebook. I filtered and pivoted the data to get a file format that summarises just over 6.6m crimes that makes producing a Sankey much easier. The code is pretty simple but is not included here, if anyone is interested drop me a message and I can send it over.\n\n\nThis notebook further filters the data as a Sankey with circa 10:20 is unreadable\n","54310526":"# Importing data\n\nGetting the data"}}