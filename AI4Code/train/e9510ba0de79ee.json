{"cell_type":{"bb5769ae":"code","739aef25":"code","086be2b7":"code","38b9108c":"code","b161bc48":"code","f73448d7":"code","1379b8a3":"code","0fd3e801":"code","ba2ccf7b":"code","86dc4ffa":"code","4a0c4615":"code","1dd6c7e4":"code","6a85e323":"code","44813f33":"code","6ab3dada":"code","bf26893c":"code","2a22a494":"code","2a953716":"code","d47d1966":"code","3ffd7ca9":"code","3c31b1ca":"code","9e91f967":"code","8cbe1a03":"code","ff018857":"code","7c3da032":"code","df0e52eb":"code","8f2914ef":"code","19135c9f":"code","ecf9fae1":"code","6296a1c7":"code","530c314a":"code","01c9ed35":"code","2bc36cd2":"code","5094ada6":"code","8bc68b96":"code","83959022":"code","d27a7517":"code","bff7662c":"code","0239fedf":"code","460073c1":"code","69397081":"code","9f674773":"code","b0ad7cf7":"code","1ee24f42":"code","a82cd9f7":"code","87825634":"code","d293a255":"code","695e3a51":"code","3d5e50d1":"code","f73dc4ed":"code","85433748":"code","6beef9f3":"code","61c0cfd9":"code","1c3fe57c":"code","b9a7f766":"code","8034cdd7":"markdown","c8ea167b":"markdown","7f2a4a9d":"markdown","b5119764":"markdown","3b6d4553":"markdown","4151ed9d":"markdown","c9d6f7b7":"markdown","b52e87aa":"markdown","532ebc82":"markdown","5f861833":"markdown","4d94a791":"markdown","75d7d305":"markdown","46a63c65":"markdown","b23e9a85":"markdown","f162169c":"markdown","48ea437c":"markdown","20504bb2":"markdown","d6c96cfd":"markdown","1e910635":"markdown","beb35165":"markdown","b9ea0779":"markdown","767e4188":"markdown","568fe23f":"markdown","bd5752f8":"markdown","62c38ff5":"markdown","e7fa8446":"markdown","869455a8":"markdown","23a5816c":"markdown"},"source":{"bb5769ae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","739aef25":"data = pd.read_csv('..\/input\/pokemon\/Pokemon.csv')\ndata.info()","086be2b7":"data.corr()","38b9108c":"f,ax = plt.subplots(figsize=(10,10))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax)\nplt.show()                   \n#annot kutu icindeki rakamlari gosterip gostermemeyi soyluyor\n#fmt . dan sonra degerleri verir\n","b161bc48":"# ilk siralari gostermek istiyoruz\ndata.head(10)","f73448d7":"# data columns lara bakalim\ndata.columns","1379b8a3":"data.Speed.plot(kind= 'line', color= 'g', label= 'Speed', linewidth= 2, alpha= 0.5, grid= True, linestyle= ':')\ndata.Defense.plot(color= 'r', label= 'Defense', linewidth= 2, alpha= 0.5, grid= True, linestyle= '-.')\nplt.legend(loc= 'upper right')          #legend= puts label into plot\nplt.xlabel('x axis')                    #label= name of label\nplt.ylabel('y axis')                    #label= name of label\nplt.title('Line Plot')                  #title= title of plot\nplt.show()","0fd3e801":"data.plot(kind = 'scatter', x = 'Attack', y= 'Defense', alpha = 0.5, color = 'red')\nplt.xlabel('Attack')\nplt.ylabel('Defense')\nplt.title('Attack Defense Scatter Plot')\nplt.show()","ba2ccf7b":"data.Speed.plot(kind = 'hist',bins = 70, figsize = (12,12))\nplt.show()","86dc4ffa":"data.Speed.plot(kind = 'hist',bins = 50)\nplt.clf()                                # bu kod \u00e7izdirdi\u011fimiz plot'u silmemize yar\u0131yor.","4a0c4615":"#Dictionary listelerden daha h\u0131zl\u0131.\ndictionary = {'spain' : 'madrid','usa' : 'vegas'}\nprint(dictionary.keys())                         # key de\u011ferlerini ekrana yazd\u0131r\u0131yor.\nprint(dictionary.values())                       # values de\u011ferlerini ekrana yazd\u0131r\u0131yor.","1dd6c7e4":"dictionary['spain'] = \"barcelona\"    # spain anahtar\u0131n\u0131n de\u011ferini g\u00fcncelledik.\nprint(dictionary)\ndictionary['france'] = \"paris\"       # yeni bir key ve value ekledik.\nprint(dictionary)\ndel dictionary['spain']              # spain anahtar\u0131n\u0131 sildik.\nprint(dictionary)\nprint('france' in dictionary)        # sozlukte france kelimesinin olup olmadigini arastirabilirsiniz(True False verir)\ndictionary.clear()                   # sozluk icini silmemize yarar\nprint(dictionary)","6a85e323":"del dictionary                     # hafizada tutmasini istemiyorum ve tamam silmesini istiyorsam\nprint(dictionary)                  # run edince hata verir cunku dictionary silmis oldu ","44813f33":"data = pd.read_csv('..\/input\/pokemon\/Pokemon.csv')\nseries = data['Defense']                           \nprint(type(series))     \ndata_frame = data[['Defense']]  \nprint(type(data_frame))\n","6ab3dada":"print(3 > 2)\nprint(3 != 2)\n\n# Boolean operatorleri\nprint(True and False)\nprint(True or False)","bf26893c":"x = data['Defense'] > 200                      # Defans de\u011feri 200'den b\u00fcy\u00fck olan verileri x de\u011fi\u015fkenine at\u0131yoruz.\nprint(x)                                       # bu sekilde true false olanlarin hepsini gosterir\ndata[x]                                        # sinirlama yapilan hangi pokemonlar ve ozelliklerini verir","2a22a494":"data[np.logical_and(data['Defense'] > 200, data['Attack'] > 100 )] \n\n# logical and fonksiyonu iki ko\u015fulunda sa\u011flanmas\u0131 istenildi\u011fi ko\u015fullarda kullan\u0131l\u0131r.\n# burada defense de\u011feri 200'den b\u00fcy\u00fck olsun ayn\u0131 zamanda attack de\u011feride 100'den b\u00fcy\u00fck olsun diyoruz.","2a953716":"# logical and fonksiyonuna alternatif olarak a\u015fa\u011f\u0131daki yap\u0131 kullan\u0131labilir.\n\ndata[(data['Defense'] > 200) & (data['Attack'] > 100)]","d47d1966":"#1\nlis = [1,2,3,4,5]\nfor i in lis:\n    print('i is: ',i)\nprint('')\n\n\n#2\n# Enumerate index and value of list\n# index : value = 0:1, 1:2, 2:3, 3:4, 4:5\nfor index, value in enumerate(lis):\n    print(index,\" : \",value)\nprint('')   \n\n\n#3\n# For dictionaries\n# We can use for loop to achive key and value of dictionary. We learnt key and value at dictionary part.\ndictionary = {'spain':'madrid','france':'paris'}\nfor key,value in dictionary.items():\n    print(key,\" : \",value)\nprint('')\n\n\n#4\n# For pandas we can achieve index and value\nfor index,value in data[['Attack']][0:1].iterrows():\n    print(index,\" : \",value)","3ffd7ca9":"def tuble_ex():\n    t = ('1',2,3)\n    return t\na,b,c = tuble_ex()\nprint(a,b,c)","3c31b1ca":"# guess print what\nx = 2\ndef f():\n    x = 3\n    return x\nprint(x)      # x = 2 global scope\nprint(f())    # x = 3 local scope","9e91f967":"# lets return pokemon csv and make one more list comprehension example\n# lets classify pokemons whether they have high or low speed. Our threshold is average speed.\n\nthreshold = sum(data.Speed)\/len(data.Speed)\ndata[\"speed_level\"] = [\"high\" if i > threshold else \"low\" for i in data.Speed]\ndata.loc[:10,[\"speed_level\",\"Speed\"]]","8cbe1a03":"# What if there is no local scope\nx = 5\ndef f():\n    y = 2*x        # there is no local scope x\n    return y\nprint(f())         # it uses global scope x\n# First local scopesearched, then global scope searched, if two of them cannot be found lastly built in scope searched.","ff018857":"import builtins\ndir(builtins)","7c3da032":"#nested function\ndef square():\n    \"\"\" return square of value \"\"\"\n    def add():\n        \"\"\" add two local variable \"\"\"\n        x = 2\n        y = 3\n        z = x + y\n        return z\n    return add()**2\nprint(square())","df0e52eb":"def f(a, b = 1, c = 2):\n    y = a + b + c\n    return y\nprint(f(5))\n# what if we want to change default arguments\nprint(f(5,4,3))","8f2914ef":"# flexible arguments *args\ndef f(*args):\n    for i in args:\n        print(i)\nf(1)\nprint(\"\")\nf(1,2,3,4)\n\n","19135c9f":"def f(**kwargs):\n    \"\"\" print key and value of dictionary\"\"\"\n    for key, value in kwargs.items():               # If you do not understand this part turn for loop part and look at dictionary in for loop\n        print(key, \" \", value)\nf(country = 'spain', capital = 'madrid', population = 123456)\n\n","ecf9fae1":"# lambda function\nsquare = lambda x: x**2     # where x is name of argument\nprint(square(4))\ntot = lambda x,y,z: x+y+z   # where x,y,z are names of arguments\nprint(tot(1,2,3))","6296a1c7":"number_list = [1,2,3]\ny = map(lambda x:x**2,number_list)\nprint(list(y))","530c314a":"# iteration example\nname = \"ronaldo\"\nit = iter(name)\nprint(next(it))    # print next iteration\nprint(*it)         # print remaining iteration","01c9ed35":"# zip example\nlist1 = [1,2,3,4]\nlist2 = [5,6,7,8]\nz = zip(list1,list2)\nprint(z)\nz_list = list(z)\nprint(z_list)","2bc36cd2":"un_zip = zip(*z_list)\nprint(un_zip)\nun_list1,un_list2 = list(un_zip) # unzip returns tuble\nprint(un_list1)\nprint(un_list2)\nprint(type(un_list2))","5094ada6":"# Example of list comprehension\nnum1 = [1,2,3]\nnum2 = [i + 1 for i in num1 ]\nprint(num2)\n\n","8bc68b96":"# Conditionals on iterable\nnum1 = [5,10,15]\nnum2 = [i**2 if i == 10 else i-5 if i < 7 else i+5 for i in num1]\nprint(num2)","83959022":"# For example max HP is 255 or min defense is 5\n\ndata.describe()             #ignore null entries","d27a7517":"# For example lets look frequency of pokemom types\n# if there are nan values that also be counted\n# As it can be seen below there are 112 water pokemon or 70 grass pokemon\n\ndata['Type 2'].describe()              # Type 2 ye gore tanimlama yapmak icin","bff7662c":"data.dropna(inplace = True)              # inplace True dersek bos olanlari satirlariyla beraber siler. Tavsiye edilmez\ndata.describe() ","0239fedf":"# For example lets look frequency of pokemom types\n# if there are nan values that also be counted\n# As it can be seen below there are 112 water pokemon or 70 grass pokemon\n\nprint(data['Type 1'].value_counts(dropna=False))      # dropna bos bilgi varsa onlari gosterir bize","460073c1":"# For example: compare attack of pokemons that are legendary  or not\n# Black line at top is max\n# Blue line at top is 75%\n# Red line is median (50%)\n# Blue line at bottom is 25%\n# Black line at bottom is min\n# There are no outliers\n\ndata.boxplot(column='Attack', by='Legendary')","69397081":"data_new = data.head()             # eger deger girmezsek deger 5 olarak atanir ilk 5 ciktisi verilir\ndata_new","9f674773":"# lets melt\n# id_vars = what we do not wish to melt\n# value_vars = what we want to melt\n\nmelted = pd.melt(frame=data_new, id_vars='Name', value_vars=['Attack','Defense'])\nmelted","b0ad7cf7":"# Index is name\n# I want to make that columns are variable\n# Finally values in columns are value\n\nmelted.pivot(index = 'Name', columns = 'variable', values = 'value')","1ee24f42":"# ilk olarak 2 adet dataframe olusturuyoruz\n\ndata1 =  data.head()\ndata2 = data.tail()\nconc_data_row = pd.concat([data1,data2], axis = 0, ignore_index = True)    #axis = 0 bize satirlari almamizi saglar\nconc_data_row","a82cd9f7":"print(data['Speed'].max())\ndata1 =  data['Attack'].head()\ndata2 = data['Defense'].head()\ndata3 = data['Name'].head()\ndata4 = data['Speed'].head()\nconc_data_col = pd.concat([data3,data1,data2, data4], axis = 1)            #axis = 1 bize sutunlari almamizi saglar\nconc_data_col","87825634":"# lets convert object(str) to categorical and int to float.\n\ndata['Type 1'] = data['Type 1'].astype('category')\ndata['Speed'] = data['Speed'].astype('float')","d293a255":"num1 = [5,10,15]\nnum2 = [i**2 if i == 10 else i-5 if i < 7 else i+5 for i in num1]\nfor i in num1:\n    if i == 10 :\n        print(i**2)\n    else :\n        print(i-5)\nnum3 = [i**2 if i < 7 else i+5 for i in num1]\nprint(num2)\nprint(num3)","695e3a51":"data.info()\ndata.head(30)","3d5e50d1":"data['Type 2'].value_counts(dropna=False)","f73dc4ed":"data1 = data.copy()                      # Burda datanin kopyasi alinip islem yapilmali aksi halde datamiz gider\ndata1.dropna(inplace=True)\ndata1.info()","85433748":"# Datamda dogruluklarini assert ile yapmaya calisacagiz Ornek\nassert 1==1\n# dogrulugu verir","6beef9f3":"# Type 2 deki NaN degerleri silinmis mi kontrol etmek icin\n\nassert  data['Type 2'].notnull().all()","61c0cfd9":"data['Type 2'].fillna(data.median()).all()","1c3fe57c":"data.head()","b9a7f766":"first_filter = data.HP > 100\nsecond_filter = data.Attack > 150\nthird_filter = data.Speed > 120\n\ndata[first_filter & second_filter & third_filter]\n","8034cdd7":"Korelasyonuna bakalim...","c8ea167b":"Scatter cizimi... Burada iliski nasildir diye soru sorulunca lineer bir dogru dusunulur ","7f2a4a9d":"\n\nEXPLORATORY DATA ANALYSIS value_counts(): Frequency counts outliers: the value that is considerably higher or lower from rest of the data\n\nLets say value at 75% is Q3 and value at 25% is Q1. Outlier are smaller than Q1 - 1.5(Q3-Q1) and bigger than Q3 + 1.5(Q3-Q1). (Q3-Q1) = IQR We will use describe() method. Describe method includes: count: number of entries mean: average of entries std: standart deviation min: minimum entry 25%: first quantile 50%: median or second quantile 75%: third quantile max: maximum entry\n\nWhat is quantile?\n\n1,4,5,6,8,9,11,12,13,14,15,16,17 The median is the number that is in middle of the sequence. In this case it would be 11.\n\nThe lower quartile is the median in between the smallest number and the median i.e. in between 1 and 11, which is 6.\n\nThe upper quartile, you find the median between the median and the largest number i.e. between 11 and 17, which will be 14 according to the question above.\n","b5119764":"Karsilasttirma operatorleri...","3b6d4553":"Benim secimim \"MewtwoMega Mewtwo X\" pokemonu. En iyi Defense en iyi Attack yapan savascidir. Bunun yanisira HP faktorude cok onemlidir.","4151ed9d":"Yukarida Type2 de goruldugu uzere 414 adet data eksik veya bos girilmis dolayisiyla gorsellestirmede hata verir. Ozaman kac NaN yada nerde ne kadar bos bilgi var bakalim.","c9d6f7b7":"Frekanslarina bakarak hangisinden kactane var bakmak icin","b52e87aa":"pandas'da 3 adet veritipi var. \n1) series \n2) Data_Frame\nseries vekt\u00f6r \u015feklinde uzan\u0131r. tek boyutlu yap\u0131lard\u0131r.","532ebc82":"Show grafigi gostermemizi sagliyordu. Silmek icinde clf() kullanacagiz","5f861833":"Simdi korelasyonunu gorsellestirelim... correlation map","4d94a791":"Degisken ve degerleri ayri ayri sutunlarina ayirmak istiyorsak","75d7d305":"Baska bir filtreleme yontemi... Logic filtreleme","46a63c65":"ilk etapta data yi okuyoruz ve data hakkinda bilgileri gormek istiyoruz.. \n-int64 yazanlar integer\n-object yazanlar ise string oldugunu gosterir","b23e9a85":"Filtreleme yapmak...","f162169c":"Datalarin birlestirilmesi icin","48ea437c":"Nan yada bos bilgi silip bilgi almak istiyorsaniz","20504bb2":"Bos bilgileri silmek istiyoruz. Su sekilde yapariz.","d6c96cfd":"Index leme cesitleri su sekildedir...","1e910635":"Type lerini kategorilerine gore donusturmeyi bu sekilde yapabiliriz.","beb35165":"Simdiki filtreleme de yukardakinin aynisidir...","b9ea0779":"Data mizi tanimlamak icin describe fonk cagiririz. Veriye guvenebilmek icin buraya bakilir. burdanda %25 lik kismin medyani, normal medyani ve %75 lik kismin medyanina bakilip max min degerlerindeki temizlenmesi gereken anlamsiz degerleri gorebiliriz.","767e4188":"DEFAULT and FLEXIBLE ARGUMENTS Default argument example: def f(a, b=1): \"\"\" b = 1 is default argument\"\"\" Flexible argument example: def f(args): \"\"\" args can be one or more\"\"\"\n\ndef f( kwargs) \"\"\" kwargs is a dictionary\"\"\"\n\nlets write some code to practice\n","568fe23f":"Sozluk machine learning te daha hizli ve kullanislidir...","bd5752f8":"Matplotlib grafigini cizelim...","62c38ff5":"'Attack' ve 'Defense' birlestirip bir isim verdik","e7fa8446":"Data temizleme yapmaya calisalim","869455a8":"Histogram cizimi...","23a5816c":"boxplot, Yogunlugun nerelerde oldugunu dikdortgen veya kare seklinde gosterir"}}