{"cell_type":{"1acc44cd":"code","501c9237":"code","ac2d70eb":"code","7184e46f":"code","3d8a87f2":"code","944be50e":"code","01e04b15":"code","4b07e727":"code","84188c85":"code","3af037dd":"code","3c0e899d":"code","903c32a0":"code","24e2b476":"code","681892cb":"code","1ef75df3":"code","a1cfbf74":"code","32faefce":"code","3928f4fd":"code","64d5f84f":"code","a7ec199f":"code","0c41c1af":"code","28ddfef7":"code","b40b2ad3":"code","5d19fa71":"code","d7dfe8ae":"code","3024b59d":"code","4cb25b1b":"code","393089b3":"code","19ff2c85":"code","2b35d2f2":"code","a425044c":"code","00e31374":"code","8c53f350":"code","928010c4":"code","0f4ef4bb":"code","101d6d5b":"code","971634b2":"code","53c7dd6f":"code","6c9bb799":"code","2f5fa4ab":"code","bd806265":"code","09a1f1cd":"code","954aad0f":"code","7bb4f0ce":"code","36be3305":"code","50c339f0":"code","e112078c":"code","52ae8981":"code","d3ec9a8a":"code","1a28814a":"code","3afacfb1":"code","790c578b":"code","a460eb36":"code","2713e202":"code","cfcfa48b":"code","10dc8ec2":"code","2feea8af":"code","fce4dbe0":"code","9a5e4d29":"code","104607f2":"code","a48ce90e":"code","856174ca":"code","8b53c571":"code","86493b54":"code","2a15013e":"code","fe627c3e":"code","8d5d19ac":"code","906e8ba8":"code","639f97cd":"code","6cc576ed":"code","2c5657ff":"code","ba740351":"code","e6083352":"code","089067a6":"code","31f3d0e3":"code","12ad941a":"code","d3fa6287":"code","a6c6283a":"code","67e35ce5":"code","82a42e74":"code","3b673109":"code","82a0d66e":"code","a887b1cd":"code","66953cd4":"code","eb77d479":"code","1859a198":"code","b496761e":"markdown","ea213a97":"markdown","745d070a":"markdown","d28253fd":"markdown","de035085":"markdown","43113399":"markdown","a8c43a9e":"markdown","768cdb46":"markdown","df40e7f9":"markdown","c2dad7f0":"markdown","e57fea0c":"markdown","60f9361d":"markdown","c8d8742a":"markdown","3cade59b":"markdown","8fcb398f":"markdown","17621af7":"markdown","7309caa3":"markdown","d43cdd45":"markdown","9c61d5b6":"markdown","5894ca3f":"markdown","9bba9aea":"markdown","3b025680":"markdown","b4db2de1":"markdown","ac128468":"markdown","4b2d9285":"markdown","8115ab6b":"markdown","cbb408cf":"markdown","a78593a0":"markdown","64804f37":"markdown","edbf6fc4":"markdown","d20aecf2":"markdown","624bc94e":"markdown","5e03e138":"markdown","bb004cbf":"markdown","9d7aca22":"markdown","5c350706":"markdown","2a015137":"markdown","cad3f6a2":"markdown","002d29f0":"markdown","5c520024":"markdown","7851bb73":"markdown","8b3f910b":"markdown","07e4b04e":"markdown","c202c5e5":"markdown","98a95f2f":"markdown","8edddf47":"markdown"},"source":{"1acc44cd":"# Bibliotecas: \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier\nimport scikitplot as skplt\nfrom sklearn.metrics import accuracy_score\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","501c9237":"# Carregando os dados\n\ndf = pd.read_csv('\/kaggle\/input\/costa-rican-household-poverty-prediction\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/costa-rican-household-poverty-prediction\/test.csv')\n\ndf.shape, test.shape","ac2d70eb":"# Juntando os dataframes\n\ndf_all = df.append(test)\n\ndf_all.shape","7184e46f":"# Verificando as cinco primeiras linhas do dataset: \n\ndf_all.head()","3d8a87f2":"# Quais colunas do dataframe s\u00e3o do tipo object\n\ndf_all.select_dtypes('object').head()","944be50e":"# Olhando a coluna dependency\n\ndf_all['dependency'].value_counts()","01e04b15":"# Analisando os dados da coluna edjefa\n\ndf_all['edjefa'].value_counts()","4b07e727":"# Analisando os dados da coluna edjefe\n\ndf_all['edjefe'].value_counts()","84188c85":"# Vamos transformar 'yes' em 1 e 'no' em 0 nas colunas edjefa e edjefe\n\nmapeamento = {'yes': 1, 'no': 0}\n\ndf_all['edjefa'] = df_all['edjefa'].replace(mapeamento).astype(int)\ndf_all['edjefe'] = df_all['edjefe'].replace(mapeamento).astype(int)","3af037dd":"# Olhando a coluna dependency\n\ndf_all['dependency'].value_counts()","3c0e899d":"# Vamos transformar 'yes' em 1 e 'no' em 0 na coluna dependency\n\ndf_all['dependency'] = df_all['dependency'].replace(mapeamento).astype(float)","903c32a0":"# Verificando se ainda h\u00e1 colunas do dataframe do tipo object para transformar:\n\ndf_all.select_dtypes('object').head()","24e2b476":"# Verificando algumas informa\u00e7\u00f5es do dataset:\n\ndf_all.info()","681892cb":"# Verificando a porcentagem total de valores nulos no dataset:\n\ntotal = np.product(df_all.shape)\nmiss_values = df_all.isnull().sum().sum()\nporcentagem_total = (miss_values\/total) * 100\nprint(f'A porcentagem total de valores nulos do dataset \u00e9 de: {(porcentagem_total)}')","1ef75df3":"# Verificando a porcentagem de valores nulos por vari\u00e1vel:\n\ntotal_num = df_all.isnull().sum().sort_values(ascending = False)\n\nperc = df_all.isnull().sum()\/df_all.isnull().count()*100\n\nperc1 = (round(perc,2).sort_values(ascending = False))\n\n#Criando o dataframe: \n\ndf_miss = pd.concat([total_num, perc1], axis = 1, keys = ['Total de Valores Nulos', 'Porcentagem %']).sort_values(by = 'Porcentagem %', ascending = False)\n\ntop_miss = df_miss[df_miss['Porcentagem %'] > 0]\ntop_miss.reset_index(inplace = True)\n\ntop_miss","a1cfbf74":"# Vari\u00e1vel rez_esc:\n\ndf_all.rez_esc.value_counts()","32faefce":"df_all.loc[df_all['rez_esc'].notnull()]['age'].describe()","3928f4fd":"df_all.loc[df_all['rez_esc'].isnull()]['age'].describe()","64d5f84f":"# Tratamento da coluna rez_esc:\n\ndf_all.loc[((df_all['age'] > 19) | (df_all['age'] < 7)) & (df_all['rez_esc'].isnull()), 'rez_esc'] = 0","a7ec199f":"df_all['rez_esc-missing'] = df_all['rez_esc'].isnull()","0c41c1af":"# Tratando os outliers da coluna:\n\ndf_all.loc[df_all['rez_esc'] > 5, 'rez_esc'] = 5","28ddfef7":"df_all.loc[df_all['rez_esc'].isnull()]['age'].describe()","b40b2ad3":"df_all['rez_esc'].fillna(0, inplace = True)","5d19fa71":"# Vari\u00e1vel v18q1:\n\ndf_all.v18q1.value_counts()","d7dfe8ae":"# Vamos verificar outra vari\u00e1vel relacionada\n# v18q: owns a tablet (0 indica que a pessoa n\u00e3o possui tablet\/ 1 indica que a pessoa possui tablet)\n\ndf_all.v18q.value_counts()","3024b59d":"# Imputando o valor 0 na vari\u00e1vel v18q1:\n\ndf_all['v18q1'].fillna(0, inplace = True)","4cb25b1b":"sns.distplot(a = df_all['v18q1'], kde = False)","393089b3":"# Vari\u00e1vel v2a1: \n\ndf_all.v2a1.value_counts()","19ff2c85":"# Verificando quantas pessoas alugam as casas (tipovivi3, = 1 rented):\n\ndf_all.tipovivi3.value_counts().sort_values()","2b35d2f2":"# Verificando quantas pessoas possuem casa pr\u00f3pria (tipovivi1, =1 own and fully paid house):\n\ndf_all.tipovivi1.value_counts().sort_values()","a425044c":"# Quantidade de casas que ainda est\u00e3o sendo pagas (tipovivi2, \"=1 own,  paying in installments\"):\n\ndf_all.tipovivi2.value_counts().sort_values()","00e31374":"# tipovivi4, =1 precarious\n\ndf_all.tipovivi4.value_counts()","8c53f350":"# tipovivi5, \"=1 other(assigned,  borrowed)\"\n\ndf_all.tipovivi5.value_counts()","928010c4":"# Imputando o valor 0 na vari\u00e1vel v2a1:\n\ndf_all['v2a1'].fillna(0, inplace=True)","0f4ef4bb":"# Tratamento SQmeaned e meaneduc:\n\ndf_all['SQBmeaned'].fillna(-1, inplace=True)\ndf_all['meaneduc'].fillna(-1, inplace=True)","101d6d5b":"# Verificando a porcentagem total de valores nulos no dataset:\n\ntotal = np.product(df_all.shape)\nmiss_values = df_all.isnull().sum().sum()\nporcentagem_total = (miss_values\/total) * 100\nprint(f'A porcentagem total de valores nulos do dataset \u00e9 de: {(porcentagem_total)}')","971634b2":"# Verificando a quantidade de casas do dataset:\n\ndf_all.idhogar.nunique()","53c7dd6f":"# Verificando a quantidade de chefes de fam\u00edlia: \n\ndf_all.parentesco1.value_counts()","6c9bb799":"# Verificando quantas pessoas t\u00eam em quantas casas:\n# r4t3: Total persons in the household\n\n(\n    df_all.groupby('r4t3').idhogar.nunique()\n    .reset_index()\n    .rename(columns = {'r4t3':'Quantidade de Pessoas na Casa', 'idhogar':'Quantidade de Casas'})\n    .sort_values(by = ['Quantidade de Casas'], ascending = True)\n    .reset_index()\n    .drop(['index'], axis = 1)\n    \n)","2f5fa4ab":"# Verificando a quantidade de pessoas que vivem na casa:\n# tamviv, number of persons living in the household\n\n(\n    df_all.groupby('tamviv').idhogar.nunique()\n    .reset_index()\n    .rename(columns={'tamviv':'Quantidade de Pessoas que vivem na Casa', 'idhogar':'Quantidade de Casas'})\n    .sort_values(by=['Quantidade de Casas'], ascending=True)\n    .reset_index()\n    .drop(['index'], axis = 1)\n    \n)","bd806265":"# Verificando a quantidade de casas por n\u00edvel de renda: \n\n(\ndf_all.groupby('Target').idhogar.count()\n)","09a1f1cd":"# Visualizando a distribui\u00e7\u00e3o da Target por meio de um gr\u00e1fico:\n\nniveis_renda = df_all['Target'].value_counts().sort_index()\n\nfrom collections import OrderedDict\n\ncores = OrderedDict({1: 'red', 2: 'orange', 3: 'blue', 4: 'green'})\n\nniveis_renda.plot.bar(figsize = (8, 6), \n                      color = cores.values(),\n                      edgecolor = 'k', linewidth = 2)\n\nplt.xlabel('N\u00edveis de Renda')\nplt.ylabel('Quantidade')\nplt.xticks(rotation = 70) \nplt.title('Distribui\u00e7\u00e3o dos N\u00edveis de Renda')","954aad0f":"# Verificando a quantidade de meninos mais jovens que 12 anos de idade por casa:\n# r4h1, Males younger than 12 years of age\n\n(\n    df_all.groupby('r4h1').idhogar.nunique()\n    .reset_index()\n    .rename(columns={'r4h1':'Meninos mais jovens que 12 anos de idade','idhogar':'Quantidade de Casas'})\n    \n)","7bb4f0ce":"# Verificando a quantidade de meninos de 12 anos e mais velhos:\n# r4h2, Males 12 years of age and older\n\n(\n    df_all.groupby('r4h2').idhogar.nunique()\n    .reset_index()\n    .rename(columns={'r4h2':'Homens com 12 anos de idade ou mais velhos','idhogar':'Quantidade de Casas'})\n    \n)","36be3305":"# Verificando o total de homens na casa:\n# r4h3, Total males in the household\n\n(\n    df_all.groupby('r4h3').idhogar.nunique()\n    .reset_index()\n    .rename(columns={'r4h3':'Total de Homens na Casa','idhogar':'Quantidade de Casas'})\n    \n)","50c339f0":"# Quantidade de meninas mais jovens que 12 anos de idade:\n# r4m1, Females younger than 12 years of age\n\n(\n    df_all.groupby('r4m1').idhogar.nunique()\n    .reset_index()\n    .rename(columns={'r4m1':'Meninas mais jovens que 12 anos de idade','idhogar':'Quantidade de Casas'})\n    \n)","e112078c":"# Meninas de 12 anos de idade e mais velhas: \n# r4m2, Females 12 years of age and older\n\n(\n    df_all.groupby('r4m2').idhogar.nunique()\n    .reset_index()\n    .rename(columns={'r4m2':'Meninas de 12 anos de idade ou mais velhas','idhogar':'Quantidade de Casas'})\n    \n)","52ae8981":"# Total de mulheres na casa:\n# r4m3, Total females in the household\n\n(\n    df_all.groupby('r4m3').idhogar.nunique()\n    .reset_index()\n    .rename(columns={'r4m3':'Total de Mulheres na Casa','idhogar':'Quantidade de Casas'})\n    \n)","d3ec9a8a":"# Visualizando a quantidade de pessoas mais jovens que 12 anos na casa:\n\nplt.figure(figsize = (8, 6))\nsns.distplot(a = df_all['r4t1'])\nplt.title('N\u00famero de pessoas mais jovens que 12 anos na casa')\nplt.xlabel('Quantidade')","1a28814a":"# Visualizando a quantidade de pessoas de 12 anos ou mais velhas na casa:\n\nplt.figure(figsize = (8, 6))\nsns.distplot(a = df_all['r4t2'])\nplt.title('N\u00famero de pessoas de 12 anos ou mais velhas na casa')\nplt.xlabel('Quantidade')","3afacfb1":"# Visualizando o total de pessoas na casa: \n# r4t3, Total persons in the household\n\nplt.figure(figsize = (8, 6))\nsns.distplot(a = df_all['r4t3'])\nplt.title('Total de Pessoas na Casa')\nplt.xlabel('Quantidade')","790c578b":"# Verificando a quantidade de anos de educa\u00e7\u00e3o de chefas em rela\u00e7\u00e3o ao n\u00edvel de renda: \n# 1 = extreme poverty\n# 2 = moderate poverty\n# 3 = vulnerable households\n# 4 = non vulnerable households\n\nedjefas_renda = pd.pivot_table(\ndf_all, \ncolumns = 'Target',\nindex = 'edjefa',\nvalues = 'Id',\naggfunc = {'Id':'count'}\n)\n\nedjefas_renda","a460eb36":"# Verificando a quantidade de anos de educa\u00e7\u00e3o de chefes em rela\u00e7\u00e3o ao n\u00edvel de renda: \n# 1 = extreme poverty\n# 2 = moderate poverty\n# 3 = vulnerable households\n# 4 = non vulnerable households\n\nedjefes_renda = pd.pivot_table(\ndf_all, \ncolumns = 'Target',\nindex = 'edjefe',\nvalues = 'Id',\naggfunc = {'Id':'count'}\n)\n\nedjefes_renda","2713e202":"# Verificar a quantidade de quartos pela m\u00e9dia de aluguel:\n\nroom_rent = (\n    df_all.groupby('rooms').v2a1.mean()\n).reset_index()\n\nroom_rent.rename(columns = {'rooms':'Quantidade de Quartos', 'v2a1':'M\u00e9dia do Aluguel Mensal'})","cfcfa48b":"# Verificando a correla\u00e7\u00e3o entre vari\u00e1veis: \n# Correla\u00e7\u00e3o tamanho da casa: \n\ncorr_casa = df_all[['tamhog','tamviv','hhsize','r4t3']]\n\ncorr_casa.corr()","10dc8ec2":"# Visualizando a correla\u00e7\u00e3o: \n\nsns.lmplot('tamhog', 'hhsize', data = df_all, fit_reg = True);\nplt.title('Size of the Household vs Household Size')","2feea8af":"# Visualizando a correla\u00e7\u00e3o: \n\nsns.lmplot('tamviv', 'r4t3', data = df_all, fit_reg = True);\nplt.title('Number of Persons living in the Household vs Total Persons in the Household')","fce4dbe0":"# Retirando as vari\u00e1veis hhsize e r4t3: \n\ndf_all = df_all.drop(['hhsize','r4t3'], axis = 1)","9a5e4d29":"# Verificando a correla\u00e7\u00e3o entre a vari\u00e1vel idade e idade ao quadrado:\n\ncorr_idade = df_all[['age','SQBage']].corr()\nprint(f'A correla\u00e7\u00e3o entre age e SQBage \u00e9 de: \\n{(corr_idade)}')","104607f2":"# Visualizando a correla\u00e7\u00e3o: \n\nsns.lmplot('age', 'SQBage', data = df_all, fit_reg = False);\nplt.title('Squared Age versus Age')","a48ce90e":"# Retirando a vari\u00e1vel age: \n\ndf_all = df_all.drop(['age'], axis = 1)","856174ca":"# Separando as colunas para treinamento:\n\nfeats = [c for c in df_all.columns if c not in ['Id', 'idhogar','Target']]","8b53c571":"# Separar os dataframes:\n\ntrain, test = df_all[~df_all['Target'].isnull()], df_all[df_all['Target'].isnull()]\n\ntrain.shape, test.shape","86493b54":"# Instanciando o random forest classifier\n\nfrom sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(max_depth=None, random_state=42, n_jobs=4, n_estimators=700,\n                            min_impurity_decrease=1e-3, min_samples_leaf=2,\n                            verbose=0, class_weight='balanced')","2a15013e":"# Treinando o modelo\n\nrf.fit(train[feats], train['Target'])","fe627c3e":"# Prever o Target de teste usando o modelo treinado\n\ntest['Target'] = rf.predict(test[feats]).astype(int)","8d5d19ac":"# Vamos verificar as previs\u00f5es\n\ntest['Target'].value_counts(normalize=True)","906e8ba8":"# Avaliando a importancia de cada coluna (cada vari\u00e1vel de entrada)\n\nfig = plt.figure(figsize=(15, 20))\n\npd.Series(rf.feature_importances_, index = feats).sort_values().plot.barh()\n\nplt.title('Import\u00e2ncia de cada Vari\u00e1vel no Modelo Random Forest')","639f97cd":"# Matriz de Confus\u00e3o\n\nskplt.metrics.plot_confusion_matrix(train['Target'], rf.predict(train[feats])) ","6cc576ed":"# Acur\u00e1cia: \n\n(650 + 1202 + 929 + 4664) \/ 9557","2c5657ff":"# Criando o arquivo para submiss\u00e3o\n\n#test[['Id','Target']].to_csv('submission.csv', index=False)","ba740351":"# Trabalhando com XGBoost\n\nfrom xgboost import XGBClassifier","e6083352":"xgb = XGBClassifier(n_estimators = 200, learning_rate = 0.09, random_state = 42, class_weight = 'balanced')","089067a6":"xgb.fit(train[feats], train['Target'])","31f3d0e3":"test['Target'] = xgb.predict(test[feats]).astype(int)","12ad941a":"accuracy_score(train['Target'], xgb.predict(train[feats]))","d3fa6287":"# Avaliando a importancia de cada coluna (cada vari\u00e1vel de entrada)\n\nfig = plt.figure(figsize=(15, 20))\n\npd.Series(xgb.feature_importances_, index = feats).sort_values().plot.barh()\n\nplt.title('Import\u00e2ncia de cada Vari\u00e1vel no Modelo XGBoost')","a6c6283a":"# Matriz de Confus\u00e3o\n\nskplt.metrics.plot_confusion_matrix(train['Target'], xgb.predict(train[feats])) ","67e35ce5":"# Criando o arquivo para submiss\u00e3o\n\n#test[['Id','Target']].to_csv('submission.csv', index=False)","82a42e74":"# Trabalhando com AdaBoost\n\nfrom sklearn.ensemble import AdaBoostClassifier","3b673109":"abc = AdaBoostClassifier(n_estimators = 200, learning_rate = 1.0, random_state = 42)","82a0d66e":"abc.fit(train[feats], train['Target'])","a887b1cd":"accuracy_score(train['Target'], abc.predict(train[feats]))","66953cd4":"# Avaliando a importancia de cada coluna (cada vari\u00e1vel de entrada)\n\nfig = plt.figure(figsize=(15, 20))\n\npd.Series(abc.feature_importances_, index = feats).sort_values().plot.barh()\n\nplt.title('Import\u00e2ncia de cada Vari\u00e1vel no Modelo AdaBoost')","eb77d479":"# Matriz de Confus\u00e3o\n\nskplt.metrics.plot_confusion_matrix(train['Target'], abc.predict(train[feats])) ","1859a198":"# Criando o arquivo para submiss\u00e3o\n\ntest[['Id','Target']].to_csv('submission.csv', index=False)","b496761e":"A vari\u00e1vel rez_esc tem 82% de seus campos nulos, portanto veremos como trat\u00e1-la. \u00c9 poss\u00edvel que as fam\u00edlias que est\u00e3o com valores nulos nestes campos, simplesmente n\u00e3o tenham crian\u00e7as na escola. Portanto, \u00e9 interessante verificar a idade daqueles que t\u00eam campos nulos nesta vari\u00e1vel e dos que n\u00e3o t\u00eam campos nulos. Primeiro, vamos verificar a idade dos que n\u00e3o t\u00eam campos nulos: ","ea213a97":"Pode-se perceber que as duas vari\u00e1veis s\u00e3o bastante correlacionadas, portanto decidiu-se por retirar a vari\u00e1vel age do dataset. ","745d070a":"Apenas 5.652 pessoas alugam casas. Talvez seja por isso que os 24.263 valores da vari\u00e1vel de pagamento mensal de aluguel estejam nulos.","d28253fd":"# Modelo XGBoost","de035085":"* Assim como edjefas, a maior concentra\u00e7\u00e3o de chefes est\u00e1 naqueles que n\u00e3o t\u00eam anos de educa\u00e7\u00e3o. \n\n* Pode-se ver que no n\u00edvel de n\u00e3o vulnerabilidade das casas, h\u00e1 uma maior distribui\u00e7\u00e3o que nos outros n\u00edveis, sendo que h\u00e1 43 chefes com 21 anos de educa\u00e7\u00e3o. Mesmo assim, por meio das tabelas n\u00e3o \u00e9 poss\u00edvel verificar se edjefes ou edjefas possuem maior n\u00edvel de educa\u00e7\u00e3o por renda. ","43113399":"* Verificando a acu\u00e1ria dos tr\u00eas modelos utilizados, p\u00f4de-se perceber que aquele que teve a maior acur\u00e1cia foi o modelo de Random Forest. \n\n* O modelo que teve a maior classifica\u00e7\u00e3o de score pelo Kaggle foi: \n\n* \u00c9 importante mencionar que quando o modelo de Random Forest foi aplicado sem balancear os dados, o resultado do score obtido foi de apenas 0,36. Esse score s\u00f3 aumentou ap\u00f3s balancear os dados. \n\n* Os maiores desafios enfrentados neste trabalho foram relacionados ao tratamento dos campos nulos das vari\u00e1veis, e em rela\u00e7\u00e3o \u00e0s formas de tentar melhorar os modelos. ","a8c43a9e":"# An\u00e1lise Explorat\u00f3ria dos Dados","768cdb46":"Por meio desse quadro de correla\u00e7\u00e3o, \u00e9 poss\u00edvel perceber que as vari\u00e1veis s\u00e3o bastante correlacionadas.","df40e7f9":"Pode-se perceber que h\u00e1 muito mais casas que s\u00e3o do tipo n\u00e3o vulner\u00e1veis do que os outros os outros tipos de lares. Dessa forma, teremos que balancear os dados antes de jog\u00e1-los nos modelos de machine learning.","c2dad7f0":"O dataset Costa Rican Household Poverty Level Prediction tem como objetivo classificar as casas por meio de quatro n\u00edveis de renda: 1 - que indica extrema pobreza, 2 - pobreza moderada, 3 - lares vulner\u00e1veis e 4 - casas n\u00e3o vulner\u00e1veis. O objetivo \u00e9 classificar essas casas dentro destas quatro categorias com o objetivo de identificar as fam\u00edliar que mais necessitam de aux\u00edlio do governo da Costa Rica.\n\nDessa forma, primeiramente s\u00e3o transformadas as vari\u00e1veis do tipo object para int - menos as vari\u00e1veis do tipo c\u00f3digo.\n\nAp\u00f3s isso, \u00e9 feito o tratamento dos campos nulos das vari\u00e1veis, imputando os valores de acordo com outras vari\u00e1veis. \n\nEnt\u00e3o \u00e9 feito uma an\u00e1lise explorat\u00f3ria dos dados, verificando a rela\u00e7\u00e3o dos n\u00edveis de renda com as outras vari\u00e1veis. A\u00ed tamb\u00e9m \u00e9 descoberta a correla\u00e7\u00e3o alta entre vari\u00e1veis explicativas, e isso pode acabar enviesando os modelos, portanto decidiu-se por retirar estas vari\u00e1veis do dataset.\n\nAp\u00f3s a an\u00e1lise explorat\u00f3ria, testou-se os modelos de classifica\u00e7\u00e3o: Random Forest, XGBoost e AdaBoost.","e57fea0c":"# Trabalho Data Minig e Machine Learning II","60f9361d":"Ap\u00f3s verificar todas as quantidades de cada tipo de casa do dataset, verificou-se que provavelmente a quantidade de valores nulos de v2a1 seja correspondente ao n\u00famero de casas pr\u00f3pria pagas e que est\u00e3o sendo pagas (tipovivi1 e tipovivi2). Assim, decidiu-se por imputar o n\u00famero zero nos campos nulos da vari\u00e1vel refente ao pagamento de aluguel (v2a1).","c8d8742a":"* No primeiro n\u00edvel de renda - extrema pobreza - o modelo predisse corretamente que 282 pessoas fazem parte do n\u00edvel 1, mas errou ao predizer que 209 pessoas faziam parte do n\u00edvel 2, 37 do n\u00edvel 3 e 227 do n\u00edvel 4.\n\n* No segundo n\u00edvel de renda - pobreza moderada - o modelo acertou ao prever 594 pessoas pertencentes ao segundo n\u00edvel, mas errou ao predizer 190 como pertencentes ao n\u00edvel 1, 121 ao n\u00edvel 3 e 692 ao n\u00edvel 4.\n\n* No terceiro n\u00edvel - casas vulner\u00e1veis - o modelo predisse corretamente 228 pessoas, errando ao predizer 85 como pertencentes ao n\u00edvel 1, 265 ao n\u00edvel 2 e 631 ao n\u00edvel 4, ou seja, errou mais que acertou neste n\u00edvel.\n\n* No \u00faltimo n\u00edvel - casas n\u00e3o vulner\u00e1veis - o modelo predisse corretamente 5362 pessoas, mas errou ao predizer que 96 pessoas pertenciam ao primeiro n\u00edvel, 389 ao segundo e 149 ao terceiro.\n\n","3cade59b":"Temos o id de 10.340 casas e 10.307 chefes de fam\u00edlia, ou seja, pode ser que em algumas casas n\u00e3o h\u00e1 um chefe ou chefa de fam\u00edlia.","8fcb398f":"# Modelo AdaBoost","17621af7":"* No primeiro n\u00edvel de renda - extrema pobreza - o modelo predisse corretamente que 382 pessoas fazem parte do n\u00edvel 1, mas errou ao predizer que 142 pessoas faziam parte do n\u00edvel 2, 2 do n\u00edvel 3 e 229 do n\u00edvel 4. \n\n* No segundo n\u00edvel de renda - pobreza moderada - o modelo acertou ao prever 895 pessoas pertencentes ao segundo n\u00edvel, mas errou ao predizer 26 como pertencentes ao n\u00edvel 1, 14 ao n\u00edvel 3 e 662 ao n\u00edvel 4.\n\n* No terceiro n\u00edvel - casas vulner\u00e1veis - o modelo predisse corretamente 319 pessoas, errando ao predizer 15 como pertencentes ao n\u00edvel 1, 202 ao n\u00edvel 2 e 673 ao n\u00edvel 4, ou seja, errou mais que acertou neste n\u00edvel.\n\n* No \u00faltimo n\u00edvel - casas n\u00e3o vulner\u00e1veis - o modelo predisse corretamente 5780 pessoas, mas errou ao predizer que 13 pessoas pertenciam ao primeiro n\u00edvel, 199 ao segundo e 4 ao terceiro.","7309caa3":"Por meio destas estat\u00edsticas descritivas \u00e9 possivel perceber que a m\u00e9dia da idade de crian\u00e7as que est\u00e3o na escola \u00e9 de 12 anos. Al\u00e9m disso, a idade m\u00ednima \u00e9 de 7 anos e a idade m\u00e1xima de 17 anos. Pode-se assumir que pessoas que tenham menos de 7 anos e mais de 17 anos n\u00e3o estejam na escola. Agora, vamos verificar a idade daqueles que t\u00eam campos nulos nesta vari\u00e1vel: ","d43cdd45":"# Conclus\u00f5es\n\n\n","9c61d5b6":"O modelo de XGBoost entendeu como vari\u00e1veis mais importantes aquelas relacionadas \u00e0 casa, como se a casa possui teto ou n\u00e3o, o tipo de piso da casa, se o piso \u00e9 bom ou n\u00e3o, quantidade de tablets que possui na casa. ","5894ca3f":"**Score Kaggle: 0.36531**  ","9bba9aea":"**Score do Kaggle: **","3b025680":"Visualizando a correla\u00e7\u00e3o entre tamhog e hhsize pode-se ver que se trata de uma correla\u00e7\u00e3o perfeita.","b4db2de1":"Indica que 20.844 pessoas possuem casa pr\u00f3pria, totalmente paga.","ac128468":"Essa porcentagem se refere \u00e0 Target.","4b2d9285":"A acur\u00e1cia do modelo de AdaBoost foi menor que nos outros modelos, sendo de 67%.","8115ab6b":"Pelo fato de a vari\u00e1vel possuir muitos valores nulos, mas ser importante para definir o n\u00edvel de renda da pessoa, decidiu-se por imputar -1 nos campos nulos da vari\u00e1vel.","cbb408cf":"Pode-se perceber que a quantidade de pessoas que est\u00e3o na casa \u00e9 diferente da quantidade de pessoas que vivem na casa. ","a78593a0":"Ao somar a quantidade de casas que j\u00e1 est\u00e3o pagas e que est\u00e3o sendo pagas, tem-se 24.342, ent\u00e3o, possivelmente, os valores nulos de v2a1 sejam referentes \u00e0s casas pr\u00f3prias. ","64804f37":"N\u00e3o iremos transformar as vari\u00e1veis do tipo id.","edbf6fc4":"# Modelo de Classifica\u00e7\u00e3o Random Forest ","d20aecf2":"# Tratamento dos Valores Nulos","624bc94e":"**Colunas com valores nulos:** \n\nrez_esc: Years behind in school\n\nv18q1: number of tablets household owns\n\nv2a1: Monthly rent payment\n\nmeaneduc: average years of education for adults (18+)\n\nSQBmeaned: square of the mean years of education of adults (>=18) in the household\n\n\nDestas vari\u00e1veis, \u00e9 poss\u00edvel perceber que as que mais t\u00eam valores nulos s\u00e3o as primeiras, ent\u00e3o vamos investigar cada vari\u00e1vel. \n\n\n\n\n\n\n","5e03e138":"* No primeiro n\u00edvel de renda - extrema pobreza - o modelo predisse corretamente que 650 pessoas fazem parte do n\u00edvel 1, mas errou ao predizer que 24 pessoas faziam parte do n\u00edvel 2, 20 do n\u00edvel 3 e 61 do n\u00edvel 4. \n\n* No segundo n\u00edvel de renda - pobreza moderada - o modelo acertou ao prever 1202 pessoas pertencentes ao segundo n\u00edvel, mas errou ao predizer 87 como pertencentes ao n\u00edvel 1, 117 ao n\u00edvel 3 e 191 ao n\u00edvel 4.\n\n* No terceiro n\u00edvel - casas vulner\u00e1veis - o modelo predisse corretamente 929 pessoas, errando ao predizer 59 como pertencentes ao n\u00edvel 1, 44 ao n\u00edvel 2 e 177 ao n\u00edvel 4.\n\n* No \u00faltimo n\u00edvel - casas n\u00e3o vulner\u00e1veis - o modelo predisse corretamente 4664 pessoas, mas errou ao predizer que 249 pessoas pertenciam ao primeiro n\u00edvel, 414 ao segundo e 669 ao terceiro.","bb004cbf":"A acur\u00e1cia do modelo indica o quanto ele est\u00e1 acertando do dataset, ou seja, neste caso, 77%.","9d7aca22":"A acur\u00e1cia do modelo de XGBoost tamb\u00e9m foi de 77%.","5c350706":"**Acur\u00e1cia**\n\nA m\u00e9trica que diz quanto que o modelo acertou no total \u00e9 a acur\u00e1cia, para calcul\u00e1-la \u00e9 necess\u00e1rio somar os acertos do modelo e dividir pelo tamanho do dataset:","2a015137":"Score do Kaggle: 0.43248","cad3f6a2":"As vari\u00e1veis SQBmeaned e meaneduc t\u00eam a mesma quantidade de valores nulos, portanto vamos imputar -1 nestas observa\u00e7\u00f5es:","002d29f0":"# Transformando vari\u00e1veis:","5c520024":"Vamos verificar se ainda h\u00e1 valores nulos no dataset: ","7851bb73":"Pode-se ver que a idade m\u00e9dia \u00e9 de 39 anos, a mediana de 38 e idade m\u00e1xima de 97 anos. Assim, nesta vari\u00e1vel, para aqueles que t\u00eam menos de 7 anos e mais de 19, iremos imputar 0 nos campos nulos. ","8b3f910b":"Por meio do gr\u00e1fico de dispers\u00e3o \u00e9 poss\u00edvel ver que as vari\u00e1veis s\u00e3o bastante correlacionadas tamb\u00e9m, portanto decidiu-se por retirar as vari\u00e1veis hhsize e r4t3.","07e4b04e":"O modelo de AdaBoost considera como vari\u00e1veis mais importantes para explicar o modelo as vari\u00e1veis relacionadas ao pagamento mensal de aluguel e aquelas relacionadas \u00e0 educa\u00e7\u00e3o. ","c202c5e5":"No modelo de Random Forest, as duas vari\u00e1veis que foram consideradas como as mais importante para a classifica\u00e7\u00e3o s\u00e3o aquelas relacionadas \u00e0 educa\u00e7\u00e3o, meaneduc e SQBmeaned.","98a95f2f":"25.468 pessoas n\u00e3o t\u00eam tablets, sendo que essa \u00e9 a mesma quantidade de campos nulos na vari\u00e1vel v18q1 (quantidade de tablets que possui). Dessa forma, pode-se perceber que, possivelmente, este campo n\u00e3o foi preenchido por aquelas pessoas que n\u00e3o t\u00eam tablet. Portanto, vamos imputar o n\u00famero 0 nos campos nulos da vari\u00e1vel v18q1. ","8edddf47":"* A maior concentra\u00e7\u00e3o de chefas, em todos os n\u00edveis, est\u00e1 em zero anos de educa\u00e7\u00e3o. \n\n* N\u00edvel de pobreza extrema: apenas uma mulher tem 16 anos de educa\u00e7\u00e3o.\n\n* N\u00edvel de casas n\u00e3o vulner\u00e1veis: apenas cinco chefas t\u00eam 21 anos de educa\u00e7\u00e3o.  "}}