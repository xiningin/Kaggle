{"cell_type":{"296d444a":"code","261fc858":"code","4b1d92d6":"code","bdad730b":"code","70e76305":"code","b9833962":"code","32c89a09":"code","aaa29b04":"code","714cfa5b":"code","62333dcd":"code","e44890f0":"code","490166ed":"code","a8e274e8":"code","71c985d0":"code","321148b6":"code","ddce9711":"code","5ac4f161":"code","7be331a4":"markdown","e35ce0e2":"markdown","1704a915":"markdown"},"source":{"296d444a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","261fc858":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport warnings\nimport matplotlib\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\n\nsns.set(style=\"ticks\")\nwarnings.filterwarnings(\"ignore\")","4b1d92d6":"# Bibliotecas do keras\nfrom keras.preprocessing import sequence\nfrom keras.preprocessing.sequence import pad_sequences\nfrom keras.preprocessing.text import Tokenizer\nfrom keras.models import Sequential\nfrom keras.layers import Dense, LSTM, Flatten\nfrom keras.layers.embeddings import Embedding\nfrom sklearn.model_selection import train_test_split","bdad730b":"# Leitura do Dataset\ndf = pd.read_csv('\/kaggle\/input\/e-commerce-reviews\/train.csv')\nprint(df.shape)\ndf.head()","70e76305":"df.info()","b9833962":"df = df.dropna()\ndf.shape","32c89a09":"## Defini\u00e7\u00e3o de alguns par\u00e2metros dos modelos e tokeniza\u00e7\u00e3o\n\n# Tamanho da sequencia\nseq_size     = 5\n\n# M\u00e1ximo de tokens \nmax_tokens   = 100\n\n# Tamanho do embedding\nembed_dim    = 5","aaa29b04":"## Utilizaremos apenas o .review_comment_message (input) e o .review_score (target) da nossa rede\n# Textos\ntext         = df['review_comment_message'].values\ntokenizer    = Tokenizer(num_words=max_tokens, split=' ')\n\n# Transforma o texto em n\u00fameros\ntokenizer.fit_on_texts(text)\nX = tokenizer.texts_to_sequences(text)  \n\n# Cria sequencias de tamanho fixo (input: X)\nX = pad_sequences(X, maxlen=seq_size)\n\n# Target (review_score)\nY = df['review_score'].values","714cfa5b":"def base_model():\n    model = Sequential()\n    \n    # Embedding Layer\n    model.add(Embedding(max_tokens, embed_dim, \n                        input_length = seq_size))\n    # RNN Layer\n    model.add(LSTM(seq_size))\n    \n    # Dense Layer\n    model.add(Dense(1))\n    \n    model.compile(loss = 'mse', optimizer='sgd')\n    \n    model.summary()\n    \n    return model\n\nbase_model = base_model()","62333dcd":"# Separa o dataset em dados de treinamento\/teste\nX_train, X_valid, Y_train, Y_valid = train_test_split(X, Y, test_size = 0.20, random_state = 42)\n\n# Treina o modelo\nhist = base_model.fit(X_train, Y_train, \n              validation_data =(X_valid, Y_valid),\n              batch_size=1000, nb_epoch = 10,  verbose = 1)","e44890f0":"plt.plot(hist.history['loss'])\nplt.plot(hist.history['val_loss'])","490166ed":"# Leitura do Dataset de valida\u00e7\u00e3o dos resultados\ndf_valid = pd.read_csv('\/kaggle\/input\/e-commerce-reviews\/test.csv')\nprint(df_valid.shape)\ndf_valid.head()","a8e274e8":"df_valid.shape","71c985d0":"def predict(text):\n    '''\n    Utiliza o modelo treinado para realizar a predi\u00e7\u00e3o\n    '''\n    new_text = tokenizer.texts_to_sequences(text)\n    new_text = pad_sequences(new_text, maxlen=seq_size)\n    pred     = base_model.predict(new_text)#[0]\n    return pred","321148b6":"# Como utilizamos o titulo no treinamento, iremos utilizar o titulo na predi\u00e7\u00e3o tamb\u00e9m\npred     = predict(df_valid.review_comment_message)\npred     = pred[:,0]\npred[:5] ","ddce9711":"# Atualizando a categoria dos artigos no dataset de valida\u00e7\u00e3o\ndf_valid['review_score'] = pred\ndf_valid.head()","5ac4f161":"df_valid[['review_id', 'review_score']].to_csv('submission_test.csv', index=False)","7be331a4":"## Model","e35ce0e2":"## Predict Test","1704a915":"# Baseline Model"}}