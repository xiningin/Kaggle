{"cell_type":{"0f75144a":"code","81d480cf":"code","5c63dfde":"code","53e70ccb":"code","bd45c9b6":"code","2143be7d":"code","84d5c4b9":"code","701f2084":"code","c269c15e":"code","ebe2f877":"code","a376271a":"code","40a95a75":"code","6fcffe37":"code","c6cb9cce":"code","9b1faa15":"code","d7d2aac1":"code","af9fea09":"code","9c768ee1":"code","f7cc2608":"code","d3d5efbc":"code","7eabc21b":"code","a79e63f2":"code","4539f781":"code","3d5ce352":"code","01202065":"code","37245836":"code","ba37a9c2":"code","19dfb77b":"code","f0f40f3c":"code","3f72eab6":"code","0c48d7ff":"code","6746b478":"code","0803a459":"code","1b1ebc80":"code","f30c8aff":"code","cc69a01d":"code","d77d719b":"code","5f82bd62":"code","3bf89019":"code","270f28dc":"code","8f195f0f":"code","0af3a064":"code","453ec70a":"code","5f599616":"code","cb42f9b0":"code","b21a85cb":"code","04f446e2":"code","8712315d":"code","00717088":"code","b46507fa":"code","bf13ed39":"code","b55dd6e9":"code","0b80dc16":"code","aa466eeb":"code","6074ff34":"code","319613a4":"code","4e11a3e3":"code","b2a177f0":"code","365ed090":"code","3cfa903b":"code","0faceb72":"code","22e4b955":"code","0cd2e92f":"code","c7eba580":"markdown","a013b5e8":"markdown","17c2dfa4":"markdown","982c1ff2":"markdown","a6f3f789":"markdown","2a5e926c":"markdown","0e0f82ed":"markdown","dff7ee8c":"markdown","98e1952f":"markdown","c465dbff":"markdown","4cceade4":"markdown","4e618be2":"markdown","45df0012":"markdown","eee5fb0e":"markdown","d8520ea0":"markdown","6c88ae09":"markdown","06d7fd47":"markdown","bcd357e8":"markdown","a5cfb3f9":"markdown","efdf596e":"markdown","2085b2f0":"markdown","e3ded03e":"markdown","12c780ba":"markdown","2c732298":"markdown","acfcd125":"markdown"},"source":{"0f75144a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os","81d480cf":"\ndata_dir = '..\/input\/world-university-rankings\/cwurData.csv'","5c63dfde":"university_raw_df=pd.read_csv(data_dir)","53e70ccb":"university_raw_df # Here is Dataset or Data frame","bd45c9b6":"university_raw_df.head(10) # Display Top 10 rows of Dataframe","2143be7d":"university_raw_df.info() # Display Dataframe Information","84d5c4b9":"university_raw_df.describe() # Describing Dataframe","701f2084":"university_raw_df.shape # Dataframe Rows and Columns showed","c269c15e":"university_raw_df.index # only Dataframe rows showed","ebe2f877":"university_raw_df.columns # Dataframe columns name showed","a376271a":"university_raw_df.isnull().sum() #used to check and manage Total NULL values in a data frame\n","40a95a75":"university_raw_df.isnull().sum(axis = 0) #NaN values in every column","6fcffe37":"university_raw_df.isnull().sum(axis = 1) #NaN values in every row","c6cb9cce":"missing_values_count = university_raw_df.isnull().sum()\nmissing_values_count","9b1faa15":"# how many total missing values does it have?\ntotal_cells = np.product(university_raw_df.shape)\ntotal_missing = missing_values_count.sum()\n\n# percent of data that is missing\npercent_missing = (total_missing\/total_cells) * 100\nprint(percent_missing)","d7d2aac1":"import missingno as msno\nmsno.bar(university_raw_df)","af9fea09":"university_raw_df['broad_impact'].fillna(0)","9c768ee1":"university_raw_df['broad_impact'] = university_raw_df['broad_impact'].fillna(0)","f7cc2608":"university_raw_df","d3d5efbc":"university_raw_df.isnull().sum() #again check is there any NaN or not","7eabc21b":"university_raw_df.isnull().values.any() #object to indicate if any value is missing","a79e63f2":"university_raw_df['broad_impact'].isnull().sum() #Count the NaN under a single DataFrame column","4539f781":"university_raw_df.isnull().sum().sum() #Count the NaN under an entire DataFrame","3d5ce352":"university_raw_df.isnull() #used to check and manage NULL values in a data frame","01202065":"count_nan = len(university_raw_df)","37245836":"count_nan # count Nan length","ba37a9c2":"university_raw_df[university_raw_df.duplicated()]","19dfb77b":"university_raw_df.dtypes","f0f40f3c":"university_raw_df.min() # Returns the lowest value in each column","3f72eab6":"university_raw_df.max() # Returns the highest value in each column","0c48d7ff":"university_raw_df.alumni_employment.max()","6746b478":"university_raw_df.median() # Returns the median of each column","0803a459":"university_raw_df.std() # Returns the standard deviation of each column","1b1ebc80":" university_raw_df.loc[1]","f30c8aff":"university_raw_df.rank() # to display rank","cc69a01d":"university_raw_df.sort_values(by='country' ) # sorting countrywise","d77d719b":"university_raw_df.sort_index() # sorting indexwise","5f82bd62":"university_raw_df.loc[4,'country'] # # Display index wise country name","3bf89019":" university_raw_df.loc[1,'institution'] # Display index wise institution name","270f28dc":"university_raw_df['country'].value_counts() # returns the count of unique entries in that column\n","8f195f0f":"university_raw_df['institution'].nunique()","0af3a064":"university_raw_df.count # find the number of non-NA\/null value across the row axis ","453ec70a":"university_raw_df.iloc[7,3]","5f599616":"university_raw_df['country'].unique()","cb42f9b0":"university_raw_df.corr() ## Returns the correlation between columns in a dataframe","b21a85cb":"university_raw_df.cov() # compute pairwise covariance of columns, excluding NA\/null values","04f446e2":"university_raw_df.iloc[0:2, :] #to select the first row of a dataframe and all of the columns","8712315d":"university_raw_df.publications.count()","00717088":"university_raw_df.groupby(\"year\").mean() # Grouping by year","b46507fa":"university_raw_df.groupby(\"publications\").aggregate(['min', max])","bf13ed39":"university_raw_df[university_raw_df[\"score\"] == 100]","b55dd6e9":"import seaborn as sns\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\n%matplotlib inline\n\nsns.set_style('darkgrid')\nmatplotlib.rcParams['font.size'] = 14\nmatplotlib.rcParams['figure.figsize'] = (9, 5)\nmatplotlib.rcParams['figure.facecolor'] = '#00000000'","0b80dc16":"plt.figure(figsize=(15,8))\nsns.heatmap(university_raw_df.corr(), annot=True)\nplt.title(\"Correlation Graph\", fontweight=\"bold\")\n","aa466eeb":"fig = px.scatter_3d(university_raw_df, x='publications', y='influence', z='citations')\nfig.update_traces(marker_size=3, marker_opacity=0.5)\nfig.show()","6074ff34":"!pip install AutoViz\n!pip3 install xlrd\n\nimport plotly\nimport plotly.express  as px\nfrom autoviz.AutoViz_Class import AutoViz_Class\n\nAV= AutoViz_Class()\ndf_autoviz= AV.AutoViz('..\/input\/world-university-rankings\/cwurData.csv')","319613a4":"px.scatter(data_frame=university_raw_df,\n                x= 'world_rank',\n                y='publications',\n                size='year',\n                color='publications',\n                title= 'Day Expand and World Rank',\n                labels= {'world_rank': 'world_rank',\n                         'year': 'Year Expand'},\n                log_x= True,\n                range_y= [0,400],\n                hover_name= 'institution',\n                animation_frame='world_rank',\n                height= 400,\n                size_max=40)","4e11a3e3":"years = [2012, 2013, 2014, 2015]","b2a177f0":"score = [82.34, 92.54, 97.51,96.46]","365ed090":"plt.plot(years, score)\nplt.xlabel('Year')\nplt.ylabel('Progress (Score)')\nplt.title(\"University of Oxford\");","3cfa903b":"sns.barplot(x=university_raw_df['world_rank'].head(10), y=university_raw_df['quality_of_education']) ","0faceb72":"world_rank = range(1,11)\npublications = [1,12,4,16,37,53,15,14,13,6]\ninfluence = [1,4,2,16,22,33,13,6,12,5]","22e4b955":"plt.plot(world_rank, influence, marker='o')\nplt.plot(world_rank, publications, marker='x')\n\nplt.xlabel('world_rank')\nplt.ylabel('influence')\n\nplt.title(\"world_rank\")\nplt.legend(['influence', 'publications']);","0cd2e92f":"import matplotlib.pyplot as plt\n\n# Pie chart, where the slices will be ordered and plotted counter-clockwise:\nlabels = 'Harvard University','Stanford University','Massachusetts Institute of Technology','University of Cambridge','University of Oxford'\nsizes = [100,98.66,97.54,96.81,96.46] # university score\nexplode = (0.1, 0, 0, 0,0)  \n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.title('Top 5 World University in 2015')\nplt.show()","c7eba580":"#### Q2: How do you show University of Oxford progression between 2012-2015?","a013b5e8":"Let's begin by importing `matplotlib.pyplot` and `seaborn`.","17c2dfa4":"### Pie Chart\n\nPie Chart shows top 5 world university ranking in 2015 according to their scores.\n","982c1ff2":"### Data Cleaning\nHere, broad_impact column has 200 NaN values so we have to fill up NaN values with 0. ","a6f3f789":"#### Q1: Display university information which has got 100 score.","2a5e926c":"### Data Preparation","0e0f82ed":"\n> - Compute the min, max, median, std and other interesting statistics for numeric columns\n> - Make a note of interesting insights from the exploratory analysis\n> - Correlation Graph using using Seaborn and Matplotlib\n> - Explored relationship between columns using Bar Charts.\n> - Explored relationship between columns using Line Markers with Matplotlib.\n> - Displayed Pie Chart using Matplotlib.","dff7ee8c":"#### Importing Necessary Libraries","98e1952f":"### Exploratory Analysis ","c465dbff":"There is no duplicate values","4cceade4":"\n> - Dataset link: https:\/\/www.kaggle.com\/mylesoneill\/world-university-rankings\n> - The data is in CSV format, which contain 2200 rows and 14 columns\n> - Downloaded the dataset using the `opendatasets` library","4e618be2":"## Data Preparation and Cleaning","45df0012":"\n> - Load the dataset into a data frame using Pandas\n> - Explore the number of rows & columns, ranges of values etc.\n> - Handle missing, incorrect and invalid data\n> - Perform any additional steps (parsing dates, creating additional columns, merging multiple dataset etc.)","eee5fb0e":"## Exploratory Analysis and Visualization\n","d8520ea0":"# World University Ranking\n\nThis project is about \"World University Rankings\" Data Analysis with Python. Collected this Dataset from \"Kaggle\" which is the world's largest data science community with powerful tools and resources.\n\nThis dataset contains 2200 rows and 14 columns which is really informaive to analysis.In this project,an attempt has been made to analyze various information of world university such as quality_of_education, quality_of_faculty, publications, citations, university score and many more.\n\nLibrary Used:\n* pandas\n* matplotlib\n* seaborn","6c88ae09":"#### Q4: How do you show the difference between publications and influence column?","06d7fd47":"## <center>Thanks for checking it out! Don't Forget to Upvote !!","bcd357e8":"## Real World Dataset Selection\n","a5cfb3f9":"### Bar Chart\nThis Bar Chart shows relation between education quality and world rank according to world top 10 university ranking. ","efdf596e":"#### Download Data from Link","2085b2f0":"#### Q3: How do you show World Top 10 Univesity with their education quality?","e3ded03e":"### Line Markers \nLine Markers for the data points on each line using the `marker` argument of `plt.plot`.Here, Line Markers point university 10 publications and 10 influence according to top 10 world rank. We can see from the plot where publications are more ahead than influence. Yellow color shows publications and Blue color shows influence.","12c780ba":"#### Q5: What are the World Top 5 University in 2015?","2c732298":"### Data Visualization","acfcd125":"### Line Chart\nLine Chart can show the progression of University of Oxford betweeen 2012-2015. For that, oxford university score can help us to display the chart"}}