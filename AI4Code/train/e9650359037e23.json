{"cell_type":{"f55b3992":"code","69fc3037":"code","741d0a62":"code","c5ff4a05":"code","1d19cef9":"code","f083d730":"code","f2500acc":"code","3f130c90":"markdown","61f765c9":"markdown","e91e93e1":"markdown","840f8eae":"markdown","d8e7b6d9":"markdown"},"source":{"f55b3992":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","69fc3037":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","741d0a62":"df = pd.read_csv(\"..\/input\/vgsales.csv\")\ndf.head()","c5ff4a05":"df.info()","1d19cef9":"platGenre = pd.crosstab(df.Platform,df.Genre)\nplatGenreTotal = platGenre.sum(axis=1).sort_values(ascending = False)\nplt.figure(figsize=(8,6))\nsns.barplot(y = platGenreTotal.index, x = platGenreTotal.values, orient='h')\nplt.ylabel = \"Platform\"\nplt.xlabel = \"The amount of games\"\nplt.show()","f083d730":"platGenre['Total'] = platGenre.sum(axis=1)\npopPlatform = platGenre[platGenre['Total']>1000].sort_values(by='Total', ascending = False)\nneededdata = popPlatform.loc[:,:'Strategy']\nmaxi = neededdata.values.max()\nmini = neededdata.values.min()\npopPlatformfinal = popPlatform.append(pd.DataFrame(popPlatform.sum(), columns=['total']).T, ignore_index=False)\nsns.set(font_scale=0.7)\nplt.figure(figsize=(10,5))\nsns.heatmap(popPlatformfinal, vmin = mini, vmax = maxi, annot=True, fmt=\"d\")\nplt.xticks(rotation = 90)\nplt.show()","f2500acc":"GenreGroup = df.groupby(['Genre']).sum().loc[:, 'NA_Sales':'Global_Sales']\nGenreGroup['NA_Sales%'] = GenreGroup['NA_Sales']\/GenreGroup['Global_Sales']\nGenreGroup['EU_Sales%'] = GenreGroup['EU_Sales']\/GenreGroup['Global_Sales']\nGenreGroup['JP_Sales%'] = GenreGroup['JP_Sales']\/GenreGroup['Global_Sales']\nGenreGroup['Other_Sales%'] = GenreGroup['Other_Sales']\/GenreGroup['Global_Sales']\nplt.figure(figsize=(8, 10))\nsns.set(font_scale=0.7)\nplt.subplot(211)\nsns.heatmap(GenreGroup.loc[:, 'NA_Sales':'Other_Sales'], annot=True, fmt = '.1f')\nplt.title(\"Comparation of each area in each Genre\")\nplt.subplot(212)\nsns.heatmap(GenreGroup.loc[:,'NA_Sales%':'Other_Sales%'], vmax =1, vmin=0, annot=True, fmt = '.2%')\nplt.title(\"Comparation of each area in each Genre(Pencentage)\")\nplt.show()","3f130c90":"So, you can see the popular genre game of DS, PS2 and PS3.","61f765c9":"You can see DS and PS2 have the most games in their platform and now, we can see the detail of genre of game in platform that have *more than 1000 games.* In the seaborn, it is easy to use heatrmap rather than the stacked bar, so we can use the heatmap to have a try.","e91e93e1":"I want to see the relation between Platform and Genre. So, used pd.crosstab","840f8eae":"And we also can get each genre of game sales in every area by groupby. And we will show you the absolute data and the percentage in the same time.","d8e7b6d9":"So, the percentage is more clearly than the abosulute amount."}}