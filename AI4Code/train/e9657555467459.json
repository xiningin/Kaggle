{"cell_type":{"ed0393fa":"code","8fb7e3f3":"code","cb51a7cd":"code","536755f1":"code","5532e2c3":"code","01395410":"code","f8229be5":"code","c0164e1e":"code","bae8446a":"code","c28472c9":"code","9df15b52":"code","91094052":"code","3e34cc94":"code","60d7fe39":"code","397b7191":"code","c0792fc1":"code","d019cb6d":"code","86161cf2":"code","f253d833":"code","438d6bf8":"code","a285d991":"code","b1c9354d":"code","7ec32cc6":"code","3dcb4dac":"code","0f11158a":"code","dc8960e9":"code","1eeb0825":"code","b5aeb0a1":"code","58707ee0":"code","b8ddd0fe":"code","1b123c5b":"markdown","908017f3":"markdown","9367c34c":"markdown","2f2bc942":"markdown","3d98d075":"markdown","7b92469f":"markdown"},"source":{"ed0393fa":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","8fb7e3f3":"df = pd.read_csv(\"..\/input\/loan-prediction-analytics-vidhya\/train_ctrUa4K.csv\")","cb51a7cd":"df.head()","536755f1":"df.info()","5532e2c3":"df.shape","01395410":"df.describe()","f8229be5":"df.isnull().sum()","c0164e1e":"df['LoanAmount'] = df['LoanAmount'].fillna(df['LoanAmount'].mean())","bae8446a":"df['Credit_History'] = df['Credit_History'].fillna(df['Credit_History'].median())","c28472c9":"df.isnull().sum()","9df15b52":"df.dropna(inplace=True)","91094052":"df.shape","3e34cc94":"plt.figure(figsize = (100, 50))\nsns.set(font_scale = 5)\nplt.subplot(331)\nsns.countplot(df['Gender'],hue=df['Loan_Status'])\n\nplt.subplot(332)\nsns.countplot(df['Married'],hue=df['Loan_Status'])\n\nplt.subplot(333)\nsns.countplot(df['Education'],hue=df['Loan_Status'])\n\nplt.subplot(334)\nsns.countplot(df['Self_Employed'],hue=df['Loan_Status'])\n\nplt.subplot(335)\nsns.countplot(df['Property_Area'],hue=df['Loan_Status'])","60d7fe39":"df['Loan_Status'].replace('Y',1,inplace=True)\ndf['Loan_Status'].replace('N',0,inplace=True)","397b7191":"df['Loan_Status'].value_counts()","c0792fc1":"df.Gender=df.Gender.map({'Male':1,'Female':0})\ndf['Gender'].value_counts()","d019cb6d":"df.Married=df.Married.map({'Yes':1,'No':0})\ndf['Married'].value_counts()","86161cf2":"df.Dependents=df.Dependents.map({'0':0,'1':1,'2':2,'3+':3})\ndf['Dependents'].value_counts()","f253d833":"df.Education=df.Education.map({'Graduate':1,'Not Graduate':0})\ndf['Education'].value_counts()","438d6bf8":"df.Self_Employed=df.Self_Employed.map({'Yes':1,'No':0})\ndf['Self_Employed'].value_counts()","a285d991":"df.Property_Area=df.Property_Area.map({'Urban':2,'Rural':0,'Semiurban':1})\ndf['Property_Area'].value_counts()","b1c9354d":"df['LoanAmount'].value_counts()","7ec32cc6":"df['Loan_Amount_Term'].value_counts()","3dcb4dac":"df['Credit_History'].value_counts()","0f11158a":"df.head()","dc8960e9":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics","1eeb0825":"X = df.iloc[1:542,1:12].values\ny = df.iloc[1:542,12].values","b5aeb0a1":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,random_state=0)","58707ee0":"model = LogisticRegression()\nmodel.fit(X_train,y_train)\n\nlr_prediction = model.predict(X_test)\nprint('Logistic Regression accuracy = ', metrics.accuracy_score(lr_prediction,y_test))","b8ddd0fe":"print(\"y_predicted\",lr_prediction)\nprint(\"y_test\",y_test)","1b123c5b":"# Data","908017f3":"# EDA","9367c34c":"# Logistic Regression","2f2bc942":"# Train Test Split","3d98d075":"# Data Cleaning","7b92469f":"# Loan Predictions using Logistic Regression"}}