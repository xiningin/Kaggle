{"cell_type":{"a69eca05":"code","908135b9":"code","b063c141":"code","76c69ca8":"code","e4ef59cf":"code","be469f58":"code","0e55b585":"code","40851f06":"code","c53bbaf8":"code","c83a7832":"code","a7ae0a30":"code","e73f13af":"code","8a676e32":"code","fd223dfb":"code","a492a205":"code","5136e026":"code","0aad9ad3":"code","2765f10d":"code","7ef0fa69":"code","7d5de539":"code","9ee1612a":"markdown","442aff18":"markdown","ac396f74":"markdown","29ce1bfc":"markdown","8d46206a":"markdown","b3dccd91":"markdown","59619445":"markdown"},"source":{"a69eca05":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","908135b9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn","b063c141":"df=pd.read_csv(\"..\/input\/housing-in-london\/housing_in_london.csv\")\ndf.head()","76c69ca8":"df.describe()","e4ef59cf":"df.isnull().sum()","be469f58":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False)","0e55b585":"df.drop(['no_of_houses','date'],axis=1,inplace=True)\ndf.drop(['recycling_pct','life_satisfaction','median_salary','mean_salary'],axis=1,inplace=True)\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False)","40851f06":"df['no_of_crimes']=df['no_of_crimes'].fillna(df['no_of_crimes'].mean())\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False)","c53bbaf8":"df['houses_sold']=df['houses_sold'].fillna(df['houses_sold'].mean())\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False)","c83a7832":"df.info()","a7ae0a30":"df.shape","e73f13af":"df['code']=df.code.str.replace('E','').astype(float)\ndf.info()","8a676e32":"df['area'] = pd.factorize(df.area)[0]\ndf['area'] = df['area'].astype(\"float\")\ndf.info()","fd223dfb":"df.describe()","a492a205":"df.head()","5136e026":"X=df[['area','code','houses_sold','no_of_crimes','borough_flag']]\ny=df[['average_price']]\n","0aad9ad3":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.15,random_state=1,)\n","2765f10d":"from sklearn.tree import DecisionTreeRegressor\nmodel=DecisionTreeRegressor(random_state=0,min_samples_split=3)\nmodel.fit(X_train,y_train)","7ef0fa69":"prediction=(model.predict(X_test).astype(int))\nprint(\"predictions:\",prediction)","7d5de539":"from sklearn.metrics import r2_score\nr2_score(prediction,y_test)\n","9ee1612a":"Taking our features into X, while taking our target features into y, for prediction","442aff18":"Considering the Area column,its still in object type, so here we assign each of the city with a unique number,eg \"london\"=\"1\",\"enfield\"=\"2\", and so on.","ac396f74":"Ensure, we dont have any null values present in dataset,since this will not fit in our algorithm","29ce1bfc":"Now, since our column \"code\",exist of values, like E9000.., we'll replace the value \"E\" with \"nothing\", so that our object datatype will be converted into a float value.","8d46206a":"Considering the null values present in the data-set********\n","b3dccd91":"We can see, there are datatypes=objects in our dataset, which we need to convert into float\/int values.","59619445":"Spliting the Dataset into train and test."}}