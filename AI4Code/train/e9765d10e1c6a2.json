{"cell_type":{"4a8dd7c4":"code","39d84031":"code","a225852c":"code","ef73ea40":"code","f30bbc47":"code","51d2a918":"code","3c172555":"code","760f94ab":"code","61ab420b":"code","424e728c":"code","fee339c7":"code","440b470f":"code","3a42dc31":"code","fd734f3e":"code","a09203fd":"code","4a524eca":"markdown","08057bc2":"markdown","30533232":"markdown","305c7983":"markdown","1b74dfba":"markdown","517d9b5b":"markdown","5b73e1a9":"markdown"},"source":{"4a8dd7c4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","39d84031":"data = pd.read_csv('..\/input\/data.csv')","a225852c":"data.info()","ef73ea40":"data.head()","f30bbc47":"#correlation map\nf,ax = plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","51d2a918":"series = data ['radius_mean']\nprint(type(series))\ndata_frame = data[['radius_mean']]\nprint(type(data_frame))","3c172555":"x = data['radius_mean'] < 15\ndata[x]","760f94ab":"y = data['diagnosis'] == 'B'\ndata[y]","61ab420b":"z = data['diagnosis'] == 'M'\ndata[z]","424e728c":"data.radius_mean.plot(kind = 'line', color = 'B',label = 'Radius Mean', linewidth = 1,alpha = .5,grid = True, linestyle = ':')\ndata.texture_mean.plot(kind = 'line', color = 'R',label = 'Texture Mean', linewidth = 1,alpha = .5,grid = True, linestyle = '-.')\n\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('Radius Mean')              # label = name of label\nplt.ylabel('Texture Mean')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","fee339c7":"# Scatter Plot \n\ndata[y].plot(kind='scatter', x='radius_mean', y='texture_mean',alpha = 0.5,color = 'g')\nplt.xlabel('Radius Mean')              # label = name of label\nplt.ylabel('Texture Mean')\nplt.title('Benign-Radius & Texture Means Scatter Plot') \ndata[z].plot(kind='scatter', x='radius_mean', y='texture_mean',alpha = 0.5,color = 'r')\nplt.xlabel('Radius Mean')              # label = name of label\nplt.ylabel('Texture Mean')\nplt.title('Malignant-Radius & Texture Means Scatter Plot')            # title = title of plot\nplt.show()","440b470f":"threshold = sum(data.radius_mean)\/len(data.radius_mean)\n\ndata[\"risk_level\"] = [\"high\" if i>threshold else \"low\" for i in data.radius_mean]\ndata.loc[:10,[\"risk_level\",\"radius_mean\",\"texture_mean\"]]","3a42dc31":"thresholdB = sum(data[y].radius_mean)\/len(data[y].radius_mean)\nthresholdM = sum(data[z].radius_mean)\/len(data[z].radius_mean)\n\ndata[\"risk_level\"] = [\"high\" if i>thresholdM  else \"low\" if i<thresholdB else \"moderate\" for i in data.radius_mean]\nprint(\"benign: \",thresholdB,\" \",\"malignant: \",thresholdM)\ndata.loc[:10,[\"risk_level\",\"radius_mean\",\"texture_mean\"]]\n","fd734f3e":"threshold_textureB = sum(data[y].texture_mean)\/len(data[y].texture_mean)\nthreshold_textureM = sum(data[z].texture_mean)\/len(data[z].texture_mean)\n\ndef texture_risk(*args):\n    \n    \"\"\"This function determines the effects of the texture mean to the risk.\"\"\"\n    \n    return [\"high\" if i>threshold_textureM  else \"low\" if i<threshold_textureB else \"moderate\" for i in data.texture_mean]\n    \ndata[\"texture_risk\"] =texture_risk(data[\"texture_mean\"])\nprint(\"benign: \",threshold_textureB,\" \",\"malignant: \",threshold_textureM)\ndata.loc[:10,[\"texture_risk\",\"texture_mean\"]]","a09203fd":"data[(data.radius_mean > 17) & (data.diagnosis == 'B')]","4a524eca":"**The samples which are benign cancers were filtered.**","08057bc2":"**My second homework is ready.**","30533232":"**The samples which are malignant cancers were filtered.**","305c7983":"**Predicting whether the cancer is benign or malignant with basic data science toolbox.**","1b74dfba":"<h1>Learning Data Science with Breast Cancer Dataset<\/h1>","517d9b5b":"**Estimating the risk by looking at the average of the \"radius_mean\"s.**","5b73e1a9":"**Examining the relationship between texture and radius with the plotting.**"}}