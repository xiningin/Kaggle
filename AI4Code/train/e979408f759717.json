{"cell_type":{"ce5b460d":"code","6d0b8d1f":"code","25c96e82":"code","fe62baec":"code","053eaa9a":"code","513151ec":"code","d8c15edd":"code","2daeba93":"code","eb4aea74":"code","ede4c7c6":"code","ae089aa7":"code","a0832cf1":"code","27741ed8":"code","caacbd20":"code","a06848c0":"code","e81ada70":"code","f3249bbb":"code","d61c0fc7":"code","2aac94f7":"code","bdf58f88":"code","57dd3b30":"code","5594c3c6":"code","22c833f0":"code","407a53bc":"code","994cae2d":"code","5f8688bd":"code","315f8dca":"code","b499c1fe":"code","a69c5d8a":"code","dbb5bd7e":"code","be1c5c2c":"code","28632431":"code","4e9fac0b":"code","251cd059":"code","91c7fa12":"code","fcd1577a":"code","82244af1":"code","2da3196c":"code","0360e759":"code","bb940f28":"code","42c73184":"code","5e09c59d":"code","223d4da3":"code","4ce3f79d":"code","a1fb7842":"code","feb3cf74":"code","59531c25":"code","347c79cf":"code","a5f928e7":"code","7ac84c8d":"code","3fb175be":"code","9ac80eb6":"code","a4613dbc":"code","2aa094fa":"code","c9c5de9c":"code","fa872f70":"code","e17eaa40":"code","47f87993":"code","0cd9200e":"code","ee920502":"markdown","8726b0ac":"markdown","0d63d515":"markdown","c115fbd8":"markdown","b9beb5a3":"markdown","3f02ad86":"markdown","fde2ef53":"markdown","875bcdff":"markdown","a973004c":"markdown","6f3e7f0f":"markdown","7fb591b9":"markdown","40b10f9c":"markdown","d643cee3":"markdown","868b5152":"markdown","cee58359":"markdown"},"source":{"ce5b460d":"# Load the required libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom IPython.display import HTML\nimport matplotlib.lines as lines\nfrom wordcloud import WordCloud","6d0b8d1f":"#Visualization settings\nsns.set_style(style='white')\nsns.set(rc={\n    'figure.figsize': (12,7),\n    'axes.facecolor': 'white',\n    'axes.grid': True,\n    'grid.color': '.9',\n    'axes.linewidth': 1.0,\n    'grid.linestyle': u'-'},\n    font_scale=1.5)\ncustom_colors=[\"#3498db\", \"#95a5a6\",\"#34495e\", \"#2ecc71\", \"#e74c3c\"]\nsns.set_palette(custom_colors)\nbackground_color='#fbfbfb'\n","25c96e82":"# Load input file\ndf_input = pd.read_csv('..\/input\/montreal-crime-data\/Montreal Crime Data.csv')","fe62baec":"print (f\"Shape of dataframe : {df_input.shape}\\n\")\nprint (f\"Sample data frame:\\n\")\ndisplay(df_input.head())\nprint (\"Dataset summary \\n\")\ndisplay (df_input.info())","053eaa9a":"df_input.columns","513151ec":"# Feature 'Unnanmed' is just a series of number. Doesn't add any model values to dataset. Hence removing this feature from dataset.\ndf_input.drop('Unnamed: 0', axis=1, inplace=True)","d8c15edd":"# Unique values in the feature 'count'\ndf_input['count'].unique()","2daeba93":"# Since feature 'count' contains only one value, not much significance in data analysis. Hence removing this feature.\ndf_input.drop('count', axis=1, inplace=True)","eb4aea74":"# Removing features lattitude and longitude\ndf_input.drop(['longitude', 'latitude'], axis=1,inplace=True)","ede4c7c6":"# After removing the non necessary columns\ndf_input.columns","ae089aa7":"#Categorical feature analysis\ndef analyze_categorical_feature(fld,display_graph=True):\n    print (\"Sample data:\\n\")\n    display(fld.head())\n    df=pd.DataFrame({\"Value\": fld.value_counts().index,\n                 \"Count\":fld.value_counts().values})\n    print (\"\\nNull value count : \", fld.isnull().sum())\n    unique_list=fld.unique().tolist()\n    print (\"\\nUnique values: \", unique_list)\n    print (\"\\n Unique values count: \", len(unique_list))\n    print (\"\\nValue counts:\\n\",    df)\n    if display_graph==True:\n        plt.subplots(figsize=(25,10),facecolor=background_color)\n        plt.subplot(2,2,1)\n        plt.pie(fld.value_counts(),labels=fld.value_counts().index,autopct=lambda x: f'{x: .2f}%');\n        plt.xticks(rotation=90)\n\n        plt.subplot(2,2,2)   \n        sns.barplot(data=df, x=\"Value\",y=\"Count\").set_facecolor(background_color);\n        plt.xticks(rotation=90);\n        plt.suptitle(fld.name + \" -distribution\");\n\n        plt.show()\n        plt.close()\n    \n","a0832cf1":"#Continuous feature analysis\ndef analyze_continuous_feature(fld):\n    print (\"Sample data:\\n\",fld.head())\n    print (\"\\nNull value count : \", fld.isnull().sum())\n    print (\"\\n\", fld.describe())\n    print (f\"\\n Skewness : {fld.skew()} \\n\")\n    plt.subplots(figsize=(25,10))\n    plt.subplot(2,2,1)\n    plt.hist(fld)\n    plt.subplot(2,2,2)\n    sns.boxplot(fld)\n    plt.suptitle(fld.name + \"-distribution\")\n    plt.show()\n    plt.close()\n    ","27741ed8":"analyze_categorical_feature(df_input.category)","caacbd20":"# Since and date and year features are related, we can take year feature to analyse the distribution of records.\nanalyze_categorical_feature(df_input.year)","a06848c0":"# Unique values in Postal code\ndf_input.postal_code.unique()","e81ada70":"# number of unique values in postal code\ndf_input.postal_code.nunique()","f3249bbb":"analyze_categorical_feature(df_input.city)","d61c0fc7":"analyze_categorical_feature(df_input.neighbourhood)","2aac94f7":"df_cities = df_input.loc[:,['category', 'city']].copy()","bdf58f88":"# Filtering categories based on theft\ndf_cities=df_cities[(df_cities['category'] == 'Motor vehicle theft') | (df_cities['category']=='Theft in \/ from a motor vehicle') | (df_cities['category']=='Confirmed Theft')]","57dd3b30":"cities = df_cities.city\ncities=cities.value_counts()","5594c3c6":"cities_counts={}","22c833f0":"for item in cities.iteritems():\n    cities_counts[item[0]]=item[1]","407a53bc":"# Cities based on theft crime count\ncities_counts","994cae2d":"wc=WordCloud(background_color=background_color).generate_from_frequencies(cities_counts)","5f8688bd":"fig=plt.figure(figsize=(15,9),facecolor=background_color)\ngs= fig.add_gridspec(1,1)\ngs.update(wspace=0.5, hspace=0.5)\nax0=fig.add_subplot(gs[0,0])\nax0.set_facecolor(background_color)\nax0.imshow(wc,interpolation='bilinear')\nax0.axis('off')\n#Draw a seperation line\nl1=lines.Line2D([0.92,0.92],[0.1,0.9], transform=fig.transFigure,color='black',lw=0.2)\nfig.lines.extend([l1])\n\nfig.text(x=0.93,y=0.7,\n         s=\"Ciity names based on crime 'theft' category\",\n         fontsize=25,fontfamily='serif',color='grey',fontweight='bold')\nfig.text(x=0.92,\n        y=0.5,\n        fontweight='light',\n        fontfamily='serif',\n        fontsize=22,\n        color='grey',\n        s='''\n        MONTREAL city having highest theft count.\n        SENNEVILLE having less theft.\n        ''')\nfig.tight_layout(pad=0)\nfig.patch.set_facecolor(background_color)\nplt.show()\n","315f8dca":"df_cities = df_input.loc[:,['category', 'city']].copy()","b499c1fe":"df_cities=df_cities[df_cities['category'] == 'Offenses resulting in death']","a69c5d8a":"cities = df_cities.city\ncity_counts={}\ncities = cities.value_counts()","dbb5bd7e":"for item in cities.iteritems():\n    city_counts[item[0]] = item[1]","be1c5c2c":"# City names based on count\ncity_counts","28632431":"# Word cloud preparation\nwc=WordCloud(background_color=background_color).generate_from_frequencies(cities_counts)","4e9fac0b":"# Word cloud visualization\nfig=plt.figure(figsize=(15,9),facecolor=background_color)\ngs= fig.add_gridspec(1,1)\ngs.update(wspace=0.5, hspace=0.5)\nax0=fig.add_subplot(gs[0,0])\nax0.set_facecolor(background_color)\nax0.imshow(wc,interpolation='bilinear')\nax0.axis('off')\n#Draw a seperation line\nl1=lines.Line2D([0.92,0.92],[0.1,0.9], transform=fig.transFigure,color='black',lw=0.2)\nfig.lines.extend([l1])\n\nfig.text(x=0.93,y=0.7,\n         s=\"Offenses resulting in death\",\n         fontsize=25,fontfamily='serif',color='grey',fontweight='bold')\nfig.text(x=0.92,\n        y=0.5,\n        fontweight='light',\n        fontfamily='serif',\n        fontsize=22,\n        color='grey',\n        s='''\n        MONTREAL city having highest crime records.\n        MONTREAL-OUEST, SAINT-LAURENT,ROXBORO\n        DOLLARD-DES-ORMEAUX,L'ILE-BIZARD\n        cities having very less (1) crime records\n        ''')\nfig.tight_layout(pad=0)\nfig.patch.set_facecolor(background_color)\nplt.show()\n","251cd059":"df_data = df_input.loc [:,['year', 'city', 'category']].copy()","91c7fa12":"group=df_data.groupby(['year', 'category']).aggregate('count')","fcd1577a":"df_summary=group.reset_index()","82244af1":"df_summary.rename({'city':'count'}, axis=1,inplace=True)","2da3196c":"df_summary","0360e759":"# Word cloud visualization\nfig=plt.figure(figsize=(15,9),facecolor=background_color)\ngs= fig.add_gridspec(1,1)\ngs.update(wspace=0.5, hspace=0.5)\nax0=fig.add_subplot(gs[0,0])\nax0.set_facecolor(background_color)\n\nsns.lineplot(data=df_summary, x = 'year', y='count',hue='category', ax=ax0)\n\n#Draw a seperation line\nl1=lines.Line2D([0.92,0.92],[0.1,0.9], transform=fig.transFigure,color='black',lw=0.2)\nfig.lines.extend([l1])\n\nfig.text(x=0.93,y=0.7,\n         s=\"Crime trends per year\",\n         fontsize=25,fontfamily='serif',color='grey',fontweight='bold')\nfig.text(x=0.92,\n        y=0.5,\n        fontweight='light',\n        fontfamily='serif',\n        fontsize=22,\n        color='grey',\n        s='''\n        Home invasion rate is drastically reduced from 2015 to 2021.\n        Home invasion,Confirmed theft and Mischief were the top\n        3 crime categories per year.        \n        ''')\nfig.tight_layout(pad=0)\nfig.patch.set_facecolor(background_color)\nplt.show()\n","bb940f28":"top_cities=pd.DataFrame(df_input['city'].value_counts())","42c73184":"top_cities.rename({'city':'CrimeCount'},axis=1,inplace=True)","5e09c59d":"top_cities.rename_axis('City',axis=0,inplace=True)","223d4da3":"top_cities.head(10).style.bar()","4ce3f79d":"df_data = df_input.loc[:,['category','date','year']].copy()","a1fb7842":"df_data['date']=pd.to_datetime(df_data['date'])","feb3cf74":"# Access month from date feature\ndf_data['month_name'] = df_data['date'].apply(lambda x: x.strftime(\"%B\"))","59531c25":"# Delete the original date column\ndf_data.drop('date', axis=1, inplace=True)","347c79cf":"df_data","a5f928e7":"df_month=df_data.groupby(['year', 'month_name']).agg({'month_name':'count'})","7ac84c8d":"df_month","3fb175be":"df_month.rename({'month_name':'count'},axis=1,inplace=True)","9ac80eb6":"df_month.reset_index(inplace=True)","a4613dbc":"df_month.month_name.unique()","2aa094fa":"# User defined function for returning month number from input month string\ndef get_month_value(month_name):\n    if month_name == \"January\":\n        return 1\n    elif month_name == \"February\":\n        return 2\n    elif month_name == \"March\":\n        return 3\n    elif month_name == \"April\":\n        return 4\n    elif month_name == \"May\":\n        return 5\n    elif month_name == \"June\":\n        return 6\n    elif month_name == \"July\":\n        return 7\n    elif month_name == \"August\":\n        return 8\n    elif month_name == \"September\":\n        return 9\n    elif month_name == \"October\":\n        return 10\n    elif month_name == \"November\":\n        return 11   \n    elif month_name == \"December\":\n        return 12\n    else:\n        return np.NaN","c9c5de9c":"df_month['month_value'] = df_month['month_name'].apply(lambda x: get_month_value(x))","fa872f70":"df_month","e17eaa40":"df_month.sort_values(by='month_value', ascending =True,inplace=True)","47f87993":"df_month","0cd9200e":"# Word cloud visualization\nfig=plt.figure(figsize=(15,9),facecolor=background_color)\ngs= fig.add_gridspec(1,1)\ngs.update(wspace=0.5, hspace=0.5)\nax0=fig.add_subplot(gs[0,0])\nax0.set_facecolor(background_color)\n\nsns.lineplot(data=df_month,x='month_name', y='count',hue='year',palette='bright')\nplt.xticks(rotation=90);\n\n#Draw a seperation line\nl1=lines.Line2D([0.92,0.92],[0.1,0.9], transform=fig.transFigure,color='black',lw=0.2)\nfig.lines.extend([l1])\n\nfig.text(x=0.93,y=0.7,\n         s=\"Crime trends per month,year\",\n         fontsize=25,fontfamily='serif',color='grey',fontweight='bold')\nfig.text(x=0.92,\n        y=0.5,\n        fontweight='light',\n        fontfamily='serif',\n        fontsize=22,\n        color='grey',\n        s='''\n        October 2015 having highest number of crime records.\n        February 2021 having lowest number of crime records.\n        ''')\nfig.tight_layout(pad=0)\nfig.patch.set_facecolor(background_color)\nplt.show()\n","ee920502":"### 3. Postal code","8726b0ac":"### 1. Category","0d63d515":"### 5. Crime trends per month","c115fbd8":"### 5. Neighbourhood","b9beb5a3":"# <center> Montreal Crime Data <\/center>\n\nRef : https:\/\/www.kaggle.com\/stevieknox\/montreal-crime-data","3f02ad86":"Dataset contains data from year 2015 to 2021 <br>\nWe can see that from 2015 to 2021, number of crime rates were reduced.<br>","fde2ef53":"### 4. Top 10 cities with more crime records","875bcdff":"### 1. Cities having theft in common.","a973004c":"### 2. Date, Year","6f3e7f0f":"### 4. City","7fb591b9":"### 3. Top 3 crime categories per year","40b10f9c":"<p>\nThere are 28 different city's record is available in the dataset. <br>\n67.82% records are from Montreal city.\n    <\/p>","d643cee3":"## Feature Analysis","868b5152":"## Feature Relationships","cee58359":"### 2. Cities having 'Offences resulting in death'"}}