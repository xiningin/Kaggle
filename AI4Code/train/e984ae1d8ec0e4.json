{"cell_type":{"d85b08fd":"code","95372a54":"code","6e631f41":"code","c24a3aff":"code","681d974f":"code","f9fdf150":"code","106f698c":"code","d2ca7e86":"code","df56c9c4":"code","617290f3":"code","b0a73bed":"code","11e9d589":"code","24b0344f":"code","769c6c46":"code","529b4784":"code","cbbdc62b":"code","70e8bba4":"code","3228cd75":"code","9556a6f2":"code","f90884a8":"code","05f1dc37":"code","089d68d5":"code","88439fe7":"code","33c5a2b2":"code","80fc91d9":"code","e4af7432":"markdown","a7ff59ef":"markdown","b959f963":"markdown","204331ce":"markdown","b05bfb96":"markdown"},"source":{"d85b08fd":"#imports\n#numpy for array calculations\nimport numpy as np\n#pandas for working with data\nimport pandas as pd\n#matplotlib for graphs\nimport matplotlib.pyplot as plt","95372a54":"#read csv file and make it as dataframe\ndf = pd.read_csv(\"..\/input\/heart-disease-uci\/heart.csv\")\n#print information of the data\ndf.info()","6e631f41":"#print first 5 data\ndf.head()","c24a3aff":"#print first 10 data\ndf.head(10)","681d974f":"#printing the total number of peoples without heart disease and with heart disease\ndf.target.value_counts()","f9fdf150":"#Our features = age - thal\nfeatures = df.iloc[:, 0:13]\nlabel = df['target']","106f698c":"features","d2ca7e86":"#this is the codebase for generating graph, you don't need to understand it right now. assume it as a block\npd.crosstab(df.sex,df.target).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for Sex')\nplt.xlabel('Sex')\nplt.ylabel('Frequency')\nplt.show()","df56c9c4":"pd.crosstab(df.age,df.target).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease for Ages')\nplt.xlabel('Age')\nplt.ylabel('Frequency')\nplt.show()","617290f3":"#scikit learn is a ready to go machine learning library \nfrom sklearn import ensemble\nclf_rand = ensemble.RandomForestClassifier()","b0a73bed":"from sklearn import linear_model\nclf_log = linear_model.LogisticRegression()","11e9d589":"#we need to shuffle the data then we need split the dataset as training data and testing data\nfrom sklearn.model_selection import train_test_split","24b0344f":"#random state is a calculated randomness\nX_train, X_test, y_train, y_test = train_test_split(features, label, test_size=0.1, random_state=2)\nX_train","769c6c46":"#fitting the training dataset to the classifier \nclf_rand.fit(X_train, y_train)\nclf_log.fit(X_train, y_train)","529b4784":"#predicting the test dataset through classifier\npred_rand = clf_rand.predict(X_test)\npred_log = clf_log.predict(X_test)","cbbdc62b":"print(pred_rand)\nprint(pred_log)","70e8bba4":"#confusion matrix for random forest\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, pred_rand)\nprint(cm)","3228cd75":"#confusion matrix for logistic regression\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, pred_log)\nprint(cm)","9556a6f2":"#how accurately our classifier predicts those test data\nfrom sklearn.metrics import accuracy_score\naccuracy_score(y_test, pred_rand)","f90884a8":"#how accurately our classifier predicts those test data\nfrom sklearn.metrics import accuracy_score\naccuracy_score(y_test, pred_log)","05f1dc37":"#predicting with the new value\nclf_rand.predict([[39, 0, 1, 135, 208, 0, 0, 171, 0, 1.5, 2, 0, 2]])","089d68d5":"#to save the model\nfrom joblib import dump, load","88439fe7":"#saving the classifier, it can be used by apps and websites \ndump(clf_rand, 'model_rand.joblib')\ndump(clf_log, 'model_log.joblib')","33c5a2b2":"#loading the model \nloaded_model = load('model_rand.joblib')","80fc91d9":"#prediction using loaded model\npred = loaded_model.predict(X_test)\npred","e4af7432":"As we can see, we have 303 non null rows, and there is no string values, all integers. so that we don't have to encode those strings into integers. first 13 columns are our features, last one (target) is our label.","a7ff59ef":"The data consist 303 individual data with 13 features and 1 label. Features are as follows\n\n1. Age : displays the age of the individual.\n2. Sex : displays the gender of the individual using the following format :\n    1 = male\n    0 = female\n3. Chest-pain type (cp): displays the type of chest-pain experienced by the individual using the following format :\n    1 = typical angina\n    2 = atypical angina\n    3 = non \u2014 anginal pain\n    4 = asymptotic\n4. Resting Blood Pressure (trestbps): displays the resting blood pressure value of an individual in mmHg (unit)\n5. Serum Cholesterol (chol): displays the serum cholesterol in mg\/dl (unit)\n6. Fasting Blood Sugar (fbs): compares the fasting blood sugar value of an individual with 120mg\/dl.\n    If fasting blood sugar > 120mg\/dl then : 1 (true)\n    else : 0 (false)\n7. Resting ECG (restecg): displays resting electrocardiographic results\n    0 = normal\n    1 = having ST-T wave abnormality\n    2 = left ventricular hypertrophy\n8. Max heart rate achieved (thalach): displays the max heart rate achieved by an individual.\n9. Exercise induced angina (exang):\n    1 = yes\n    0 = no\n10. ST depression induced by exercise relative to rest (oldpeak): displays the value which is integer or float.\n11. Peak exercise ST segment (slope):\n    1 = upsloping\n    2 = flat\n    3 = downsloping\n12. Number of major vessels (0\u20133) colored by fluoroscopy (ca): displays the value as an integer or float.\n13. Thal : displays the thalassemia :\n    1 = normal\n    2 = fixed defect\n    3 = reversible defect\n14. [label] Diagnosis of heart disease (target): Displays whether the individual is suffering from heart disease or not :\n    0 = absence 1 = presence\n","b959f963":"Let's create classifer, we already created our train data","204331ce":"As we know, data in a classification problem should be balanced, we have near about balanced data. Now, we will analyse 1. age vs target and 2. sex vs target","b05bfb96":"Before proceding further, we should understand the dataset first. We are using Heart Disease Dataset by UCI. This problem is Supervised Learning Problem, and we can clearly say that, this is a classification problem. Let's understand what we have as data in our hand. "}}