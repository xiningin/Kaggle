{"cell_type":{"0529181d":"code","15132235":"code","18077f04":"code","967c74bf":"code","02e424a8":"code","13002ffd":"code","569b2b81":"code","25a6fc7d":"code","9b2720b3":"code","e05a783a":"markdown","a42c32eb":"markdown","01733c46":"markdown","81ccc642":"markdown","e6c31099":"markdown","4a070745":"markdown","57042953":"markdown"},"source":{"0529181d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas_profiling","15132235":"heart = pd.read_csv(\"..\/input\/heart-disease-uci\/heart.csv\")","18077f04":"pandas_profiling.ProfileReport(heart)","967c74bf":"# Importing metrics for evaluation\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report","02e424a8":"from sklearn.model_selection import train_test_split\nX = heart.iloc[:, :-1].values\ny = heart.iloc[:, -1].values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state =452 )","13002ffd":"#importing libraries\nfrom sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression()\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_pred,y_test))","569b2b81":"from sklearn.svm import SVC\n\nclassifier = SVC()\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_pred,y_test))","25a6fc7d":"from sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_pred,y_test))","9b2720b3":"from sklearn.tree import DecisionTreeClassifier\n\nclassifier = DecisionTreeClassifier()\n\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_pred,y_test))","e05a783a":"Applying logistic Regression\n","a42c32eb":"Applying Naive Bayes","01733c46":"Applying support vector machine","81ccc642":"Splitting the data into test and train","e6c31099":"Applying Decision Tree","4a070745":"###**Applying the ML Algorithms\n**","57042953":"#Report"}}