{"cell_type":{"6c39ad94":"code","a7122a42":"code","f1073016":"code","29a5660d":"code","580a8bc8":"code","dac5226d":"code","de59b39b":"code","d9d4af5d":"code","dba20f7f":"code","ea090af0":"code","71232e94":"code","831b9611":"code","e20d9fa4":"code","41f5c6c6":"code","36917d5d":"code","4fad75bf":"code","25468289":"code","55c13f2c":"code","80b45996":"code","d2b473a1":"code","82cdc0c7":"code","4a5e2e04":"code","028a7d73":"code","2d6b2e9a":"code","0b423c3d":"code","dd202fd4":"code","b424624a":"code","7f1c7f54":"code","0ff32430":"code","b31334a2":"code","d391a2ce":"code","ec2c98d8":"code","8898bffa":"markdown","b3d99db7":"markdown","16ffc3da":"markdown","05c29031":"markdown","b2e94e5e":"markdown","fddb7eb8":"markdown","df0f4e1b":"markdown","e7875958":"markdown"},"source":{"6c39ad94":"import pandas as pd\nimport numpy as np\nfrom tqdm import tqdm","a7122a42":"import torch\nfrom torch import nn\nfrom torch.utils.data import TensorDataset, DataLoader\n\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import mean_absolute_error\n\nimport matplotlib.pyplot as plt","f1073016":"PATH = \"..\/input\/osic-pulmonary-fibrosis-progression\"","29a5660d":"df_train = pd.read_csv(f\"{PATH}\/train.csv\")\n\n# drop duplicates for patient and weeks\ndf_train.drop_duplicates(keep=False, inplace=True, subset=['Patient', 'Weeks'])\n\ndf_train.head()","580a8bc8":"df_test = pd.read_csv(f\"{PATH}\/test.csv\")\n\n# prepare submission\ndf_sub = pd.read_csv(f\"{PATH}\/sample_submission.csv\")\ndf_sub['Patient'] = df_sub['Patient_Week'].apply(lambda x:x.split('_')[0])\ndf_sub['Weeks'] = df_sub['Patient_Week'].apply(lambda x: int(x.split('_')[-1]))\ndf_sub = df_sub[['Patient', 'Weeks', 'Confidence', 'Patient_Week']]\ndf_sub = df_sub.merge(df_test.drop('Weeks', axis=1), on='Patient')","dac5226d":"df_sub.head()","de59b39b":"df_train['FROM'] = 'train'\ndf_test['FROM'] = 'val'\ndf_sub['FROM'] = 'test'\ndata = df_train.append([df_test, df_sub])","d9d4af5d":"data.head()","dba20f7f":"data['min_week'] = data['Weeks']\ndata.loc[data.FROM == 'test','min_week'] = np.nan\ndata['min_week'] = data.groupby('Patient')['min_week'].transform('min')","ea090af0":"base = data.loc[data.Weeks == data.min_week]\nbase = base[['Patient','FVC']].copy()\nbase.columns = ['Patient','min_FVC']\nbase['nb'] = 1\nbase['nb'] = base.groupby('Patient')['nb'].transform('cumsum')\nbase = base[base.nb==1]\nbase.drop('nb', axis=1, inplace=True)","71232e94":"data = data.merge(base, on='Patient', how='left')\ndata['base_week'] = data['Weeks'] - data['min_week']\ndel base","831b9611":"COLS = ['Sex','SmokingStatus']\nFE = []\nfor col in COLS:\n    for mod in data[col].unique():\n        FE.append(mod)\n        data[mod] = (data[col] == mod).astype(int)","e20d9fa4":"# Normalize\n\ndata['age'] = (data['Age'] - data['Age'].min() ) \/ ( data['Age'].max() - data['Age'].min() )\ndata['BASE'] = (data['min_FVC'] - data['min_FVC'].min() ) \/ ( data['min_FVC'].max() - data['min_FVC'].min() )\ndata['week'] = (data['base_week'] - data['base_week'].min() ) \/ ( data['base_week'].max() - data['base_week'].min() )\ndata['percent'] = (data['Percent'] - data['Percent'].min() ) \/ ( data['Percent'].max() - data['Percent'].min() )","41f5c6c6":"FE += ['age','percent','week','BASE']","36917d5d":"df_train = data.loc[data.FROM == 'train']\ndf_test = data.loc[data.FROM == 'val']\ndf_sub = data.loc[data.FROM == 'test']\ndel data","4fad75bf":"y = df_train['FVC'].values\nz = df_train[FE].values\nze = df_sub[FE].values\npe = np.zeros((ze.shape[0], 3))\npred = np.zeros((z.shape[0], 3))","25468289":"max_y = y.max()\ny = y \/ max_y","55c13f2c":"model = nn.Sequential(nn.Conv1d(3, 32, 3),\n                      nn.Dropout(p=0.42),\n                      nn.ReLU(),\n                      nn.Conv1d(32, 64, 1),\n                      nn.Dropout(p=0.35),\n                      nn.Flatten(),\n                      nn.Linear(64, 128),\n                      nn.Tanh(),\n                      nn.Linear(128, 64),\n                      nn.Tanh(),\n                      nn.Linear(64, 32),\n                      nn.Tanh(),\n                      nn.Linear(32, 16),\n                      nn.Tanh(),\n                      nn.Linear(16, 8),\n                      nn.Tanh(),\n                      nn.Linear(8, 1))\n\nmodel = model.to('cuda')","80b45996":"kf = KFold(n_splits=5)\nkf2 = KFold(n_splits=128)","d2b473a1":"loss_fn = torch.nn.MSELoss(reduction='sum')\noptimizer = torch.optim.Adam(model.parameters(), lr=0.0005)","82cdc0c7":"losses = []\nfor tr_idx, val_idx in tqdm(kf.split(z)):\n    \n    for _ in tqdm(range(300), position=0, leave=True):\n        for tidx, vidx in kf2.split(tr_idx):\n            optimizer.zero_grad()\n\n            y_pred = model(torch.Tensor(z[tidx]).reshape(len(z[tidx]), 3, 3).to('cuda'))\n            loss = loss_fn(y_pred, torch.Tensor(y[tidx]).reshape(len(y[tidx]), 1).to('cuda'))\n            losses.append(loss)\n\n            loss.backward()\n            optimizer.step()\n        \n    pred[val_idx] = model(torch.Tensor(z[val_idx]).reshape(len(z[val_idx]), 3, 3).to('cuda')).cpu().detach().numpy()\n    pe += (model(torch.Tensor(ze).reshape(len(ze), 3, 3).to('cuda')) \/ 5).cpu().detach().numpy()","4a5e2e04":"plt.plot(losses)","028a7d73":"pred, pe = pred * max_y, pe * max_y","2d6b2e9a":"sigma_opt = mean_absolute_error(y, pred[:, 1])\nunc = pred[:,2] - pred[:, 0]\nsigma_mean = np.mean(unc)\nprint(sigma_opt, sigma_mean)","0b423c3d":"df_sub['FVC1'] = pe[:, 1]\ndf_sub['Confidence1'] = pe[:, 2] - pe[:, 0]","dd202fd4":"subm = df_sub[['Patient_Week','FVC','Confidence','FVC1','Confidence1']].copy()","b424624a":"subm.loc[~subm.FVC1.isnull()].head(10)","7f1c7f54":"subm.loc[~subm.FVC1.isnull(),'FVC'] = subm.loc[~subm.FVC1.isnull(),'FVC1']\nif sigma_mean<70:\n    subm['Confidence'] = sigma_opt\nelse:\n    subm.loc[~subm.FVC1.isnull(),'Confidence'] = subm.loc[~subm.FVC1.isnull(),'Confidence1']","0ff32430":"subm.head()","b31334a2":"subm.describe().T","d391a2ce":"otest = pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/test.csv')\nfor i in range(len(otest)):\n    subm.loc[subm['Patient_Week']==otest.Patient[i]+'_'+str(otest.Weeks[i]), 'FVC'] = otest.FVC[i]\n    subm.loc[subm['Patient_Week']==otest.Patient[i]+'_'+str(otest.Weeks[i]), 'Confidence'] = 0.1","ec2c98d8":"subm[[\"Patient_Week\",\"FVC\",\"Confidence\"]].to_csv(\"submission.csv\", index=False)","8898bffa":"# Conclusion\n\nSince the high position on the submission, either CNN is not the way to go or the layers need to be tweaked.","b3d99db7":"# Pytorch Module","16ffc3da":"# Data Preparation","05c29031":"# Osic CNN Pytorch","b2e94e5e":"# Prepare Submission","fddb7eb8":"# Goal\n\nThe goal of this notebook is to try PyTorch Convolutional Neural Network for OSIC pulmonary fibrosis.<br>\n<br>\nFor a starter notebook click [here](https:\/\/www.kaggle.com\/twinkle0705\/your-starter-notebook-for-osic)\n<br>\nData preparation was used from this [notebook](https:\/\/www.kaggle.com\/ulrich07\/osic-multiple-quantile-regression-starter)","df0f4e1b":"# Plot Losses","e7875958":"# Training"}}