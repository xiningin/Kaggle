{"cell_type":{"8b383148":"code","44d08a86":"code","5c124eeb":"code","93ab37df":"code","666bfe81":"code","5f8f2d92":"code","336d728e":"code","de138565":"code","c64b8b34":"code","f5290693":"code","7b789ba9":"code","114626a0":"code","b3b97b8b":"code","64ecd225":"code","84eaf41f":"code","f596fd56":"markdown","04941d33":"markdown","47999b6d":"markdown","e2d41381":"markdown","a90aeb10":"markdown","f0143017":"markdown","d5c7ff82":"markdown","5c8b0146":"markdown","26481e3f":"markdown","1df17753":"markdown","c8822228":"markdown","a85430a5":"markdown"},"source":{"8b383148":"import pandas as pd\ndf = pd.read_csv(r'..\/input\/feedback-prize-2021\/train.csv')\ndf.head()","44d08a86":"df1 = pd.read_csv(r'..\/input\/feedback-prize-2021\/sample_submission.csv')\ndf1.head()","5c124eeb":"import re\nx = df['discourse_text'][12]\ndigits = r\"\\d+\"\nprint(re.findall(digits, x))","93ab37df":"import matplotlib.pyplot as plt\nfrom nltk.tokenize import word_tokenize\ns = word_tokenize(x)\n\nplt.hist(s, bins = 500)\nplt.show()","666bfe81":"import string\nfrom wordcloud import WordCloud\nwordcloud = WordCloud(background_color=\"white\",width=1600, height=800).generate(' '.join(s))\nplt.figure( figsize=(20,10), facecolor='k')\nplt.imshow(wordcloud)","5f8f2d92":"import seaborn as sns\nplt.figure(figsize=(10,10))\nax = sns.countplot(x=df[\"discourse_type\"],  data=df, order = df[\"discourse_type\"].value_counts().index )\nfor p, label in zip(ax.patches, df[\"discourse_type\"].value_counts()):   \n    ax.annotate(label, (p.get_x()+0.25, p.get_height()+0.5))","336d728e":"#  one hot encoding\nfrom numpy import asarray\nfrom sklearn.preprocessing import LabelEncoder\n# define one hot encoding\nencoder = LabelEncoder()\n# define data\n# transform data\ndf['discourse_type'] = encoder.fit_transform(df['discourse_type'])\ndf['discourse_type_num'] = encoder.fit_transform(df['discourse_type_num'])\ndf['predictionstring'] = encoder.fit_transform(df['predictionstring'])","de138565":"import seaborn as sns\nsns.heatmap(df.corr())","c64b8b34":"# we start with predicting the Open using DecisionTreeClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestRegressor, RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression","f5290693":"df.head(5)","7b789ba9":"df1 = df.drop(['id','discourse_text'], axis=1)","114626a0":"# we split the data into 50% training set and 50% testing set\nfrom sklearn.model_selection import train_test_split, cross_val_score, KFold\n# split into input and output elements\ndata = df1.values\nX, y = data[:, :-1], data[:, -1]\nprint(X.shape, y.shape)","b3b97b8b":"# split into train test sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=1)\nprint(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","64ecd225":"# fit the model\n#model = RandomForestClassifier(random_state=1)\n#model.fit(X_train, y_train)","84eaf41f":"# make predictions\n#yhat = model.predict(X_test)\n# evaluate predictions\n#acc = accuracy_score(y_test, yhat)\n#print('Accuracy: %.3f' % acc)","f596fd56":"# we can see through a correlation heatmap that Dicsourses of the texts in sequence orders are the most related attributes thus implying students righting styles influence the discourse of text the most","04941d33":"# Lets make our predictions and check our accuracy and cross validations","47999b6d":"# lets start the modelling with a basic classification models to get a grasp \n# as we have to make the machines lead the student writing styles in numerical form (binary basically)","e2d41381":"# we now start the analysis with the relevant python libraries such as pandas","a90aeb10":"# we transform our categorical data to be further processed by machine Learning","f0143017":"# most negative comments here relate to morbid assumptions and usage by phones as shown","d5c7ff82":"# lets see Negative sentiments","5c8b0146":"# Lets train our model here","26481e3f":"# Here are the requirments of submission","1df17753":"# We can see here that claim and evidence are the most looked at factors here on discourse type implying most sentiments of writing relate to how its assumed and executed","c8822228":"# Find all digits in my_string and print the result","a85430a5":"# Lets tokenize to see sentiments "}}