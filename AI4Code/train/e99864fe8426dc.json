{"cell_type":{"ad6043fa":"code","61d20519":"code","19477880":"code","58adc121":"code","83dbbaae":"code","41abb240":"code","1943dd23":"code","497b26ba":"code","80e02567":"code","74d1631f":"code","8b800f1f":"code","f029d61e":"code","316f3be5":"code","6ce4e6d8":"code","6a1e0498":"code","34d236e2":"code","9fe31272":"code","1dd7da84":"code","9deb203a":"code","b4e2ad38":"code","fd6a3f5f":"markdown","fceed67e":"markdown","6d429db5":"markdown","a4cd05c8":"markdown","d2bcfef0":"markdown","970ec088":"markdown","41b8eecf":"markdown","e4d2d352":"markdown","9e38aa09":"markdown","c47b1f19":"markdown"},"source":{"ad6043fa":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns","61d20519":"#Importing the dataset \ndf = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndf_copy = df.copy()","19477880":"#EDA\n# Lets try looking at the head\ndf.head(5)","58adc121":"df.describe()","83dbbaae":"#plotting Age parameters\nageCountPlot = sns.countplot(x=\"Gender\", data=df, palette=\"Set3\")\n#calculating male female observations\nprint(df['Gender'].value_counts())","41abb240":"#plotting Annual Income parameters\nannualIncomePlot = sns.displot(df, x=\"Annual Income (k$)\",bins = 20)\nsns.catplot(x=\"Gender\", y=\"Annual Income (k$)\", kind=\"box\", data=df)","1943dd23":"#plotting Spending Score parameters\nscorePlot = sns.displot(df, x=\"Spending Score (1-100)\",bins = 30)\nsns.catplot(x=\"Gender\", y=\"Spending Score (1-100)\", kind=\"box\", data=df)","497b26ba":"#plotting Age Income parameters\nAgePlot = sns.displot(df, x=\"Age\",bins = 20)\nsns.catplot(x=\"Gender\", y=\"Age\", kind=\"box\", data=df)","80e02567":"#plotting Age V\/S gender distributions\nsns.displot(df, x=\"Age\", y=\"Gender\",cbar=True)\nsns.jointplot(data=df, x=\"Age\", y=\"Gender\")","74d1631f":"#Lets try to analyze relation between income and spending score\nsns.displot(df, x=\"Annual Income (k$)\", y=\"Spending Score (1-100)\",cbar=True)\nsns.jointplot(data=df, x=\"Annual Income (k$)\", y=\"Spending Score (1-100)\",hue = \"Gender\")","8b800f1f":"#Lets try to analyze relation between Age and Income\nsns.displot(df, x=\"Annual Income (k$)\", y=\"Age\",cbar=True)\nsns.jointplot(data=df, x=\"Annual Income (k$)\", y=\"Age\", hue = \"Gender\")","f029d61e":"#Lets try to analyze relation between Age and Spending score\nsns.displot(df, x=\"Spending Score (1-100)\", y=\"Age\",cbar=True)\nsns.jointplot(data=df, x=\"Spending Score (1-100)\", y=\"Age\")\n\n#Analysing spending scores for customers over 40 years\nsns.displot(df[df['Age']>=40],x = \"Spending Score (1-100)\")\nsns.displot(df[df['Age']<40],x = \"Spending Score (1-100)\")","316f3be5":"#Correlation matrix \nsns.heatmap(df.drop(['CustomerID'],axis = 1).corr(),annot = True,cmap = \"coolwarm\")","6ce4e6d8":"#normalizing\nfrom sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\ndf['Annual Income (k$)'] = scaler.fit_transform(df['Annual Income (k$)'].values.reshape(-1,1))\ndf['Spending Score (1-100)'] = scaler.fit_transform(df['Spending Score (1-100)'].values.reshape(-1,1))\ndf['Age'] = scaler.fit_transform(df['Age'].values.reshape(-1,1))","6a1e0498":"def closest(clusterPoints,numberClusters,currPoint):\n    dist = np.inf;\n    belongs_to =0 \n    idx =0\n    for vec in clusterPoints:\n        dist_from_vec = np.sum((np.array(vec)-np.array(currPoint))**2)\n        if(dist_from_vec < dist):\n            dist = dist_from_vec\n            belongs_to = idx\n        idx+=1\n    return int(belongs_to)\n\n\ndef cluster(numberClusters,params,iterations,dataset):\n    totalPoints = dataset.shape[0]\n    minVariance = np.inf\n    finClasses = []\n    while(iterations!=0):\n        iterations-=1;\n        IterationVariance = 0\n        clusterPoints = np.random.randn(numberClusters,len(params))\n        belongsTo = np.zeros(dataset.shape[0],dtype = 'uint8')\n        changed = True\n        while(changed):\n            changed = False\n\n            for i in range(totalPoints):\n                \n                point = dataset.iloc[i,params]\n\n                nearestClusterPoint = closest(clusterPoints,numberClusters,point)\n            \n                if(nearestClusterPoint!=belongsTo[i]):\n                    changed = True\n                    belongsTo[i] = nearestClusterPoint;\n                    \n            #Re locating cluster points\n            tempClusterPoints = np.zeros((numberClusters,len(params)),dtype = \"float\")\n            perClusterCount = np.zeros(numberClusters)\n            \n            for i in range(totalPoints):\n                idx = belongsTo[i]\n                point = dataset.iloc[i,params]\n                perClusterCount[idx]+=1\n                tempClusterPoints[idx] = tempClusterPoints[idx] + np.array(point)\n                \n            for i in range(numberClusters):\n                if(perClusterCount[i] == 0):\n                    continue\n                tempClusterPoints[i]\/=perClusterCount[i]\n            \n            clusterPoints = tempClusterPoints\n        \n        for i in range(totalPoints):\n            point = dataset.iloc[i,params]\n            IterationVariance += np.sum((np.array(point) - np.array(clusterPoints[belongsTo[i]]))**2)\n    \n        if(IterationVariance < minVariance):\n            finClasses = belongsTo\n            minVariance = min(minVariance,IterationVariance)\n    return (belongsTo,minVariance)\n","34d236e2":"variances = []\nclusterFormed = [] \nfor i in range(1,10):\n    belongsTo,minVariance = cluster(i,[2,3,4],10,df)\n    variances.append(minVariance)\n    clusterFormed.append(belongsTo)","9fe31272":"plt.plot(variances)","1dd7da84":"variances[4]","9deb203a":"from mpl_toolkits import mplot3d\n%matplotlib inline\nimport matplotlib.pyplot as plt\nplt.ion()\nfig = plt.figure()\nax = plt.axes(projection='3d')\n\nax = plt.axes(projection='3d')\n\nzdata = df['Spending Score (1-100)']\nxdata = df['Age']\nydata = df['Annual Income (k$)']\nax.scatter3D(xdata, ydata, zdata, c=clusterFormed[4])\nplt.show()","b4e2ad38":"df_copy['clusters'] = clusterFormed[4]\ndf_copy.drop(['CustomerID'],axis = 1).groupby(['clusters']).agg([np.mean])","fd6a3f5f":"We observe that \n<li> the data is not distributed as per any know distribution, the mean annual income lies in the 60+=\u0394 <\/li>\n<li> Male customers have a higher mean annual income with less variance <\/li> ","fceed67e":"We observe that number of customer's sampled which are women in the age between 30 and 40 is a surprisingly large as compared to other segments","6d429db5":"Conclusion - customers can be segmented into 5 groups\n\nmean age - 38.850000 \nmean annual income - 60.560000 \nmean spending score - 50.200000\n\n1. (middle aged, upperclass, very sensitive towards their spending) Highly concerned individuals about their spending, earn more than the mean income but spending score is the lowest out of all the other clusters\n2. (middle aged, middle class) \n3. (the slightly older semgent in young individuals, upperclass) Earning significantly more than the mean income and spending the most out of the 5 clusters.\n4. ( the young population ) Low annual income in comparison to high spending score \n5. (senior citizens) \n\n![Figure 1.png](attachment:37d65d4a-517d-4845-9d4c-c4a530d173b3.png)\n\n![Figure 1-1.png](attachment:78ce3695-947e-4aa2-9eaf-e7fdd6ceec9d.png)\n\n\n![Figure 1-2.png](attachment:a631de5d-d371-48ec-b4b2-7be97f491cc0.png)","a4cd05c8":"Final words before moving towards clustering \n<pre> 1. The clusters seems most apparent when taking spending score with income, the clusters formed here seems to be independent of the gender\n2. One thing which was not apparent from previous graphs, but is from the correlation matrix is that Spending score and age are negatively correlated, with a significant value of correlation<\/pre>","d2bcfef0":"1. Beyond the age of 40, there are very few customers with a spending >= 60, One way to explain thish could be the fact that as one grows older, he tends to save for his children, tries to reduce his spendings.","970ec088":"Age - lies between 18 and 70, all values seem to be legible\n<br>\nAnnual income - Lies between 15k to 137k $\n<br>\nSpending score - Lies between 1 and 99, which also seems legible","41b8eecf":"# We can make some decent insights from this\n* The customers can be divided into 5 segments on the basis of spending score \/ annual income\n\n    1. Low spending high income ( Region 1 )  \n    2. Low Spending low income (Region 2 ) \n    3. High spending low income ( Region 3 )\n    4. High spending high income (Region 4 ) \n    5.  Mean spending and income (Region 5) \n    \n* The maximum customers sampled lies in the 5th category \n\n    \n   ","e4d2d352":"We observe that there 5 columns CustomerID \tGender \tAge \tAnnual Income (k$) \tSpending Score (1-100)","9e38aa09":"There are no significant insights, the sampling seems to more or less uniform","c47b1f19":"We can see that the sampling consists of more females customers, as compared to male customers."}}