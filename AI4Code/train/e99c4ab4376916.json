{"cell_type":{"299086b7":"code","f5eec1a6":"code","d0545187":"code","041a9f4c":"code","06113916":"code","693b2b59":"code","081281e2":"code","7fa1b94c":"code","abbcfb33":"code","1b8692be":"code","bf27dabc":"code","9e75178b":"code","373f079c":"code","e3068a82":"markdown"},"source":{"299086b7":"\nimport tensorflow as tf\nimport numpy as np\nimport tensorflow.keras as keras\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f5eec1a6":"data_char = pd.read_csv('..\/input\/az-handwritten-alphabets-in-csv-format\/A_Z Handwritten Data.csv').astype('float32')\ndata_char.rename(columns={'0':'label'}, inplace=True)","d0545187":"X_char = data_char.drop('label',axis = 1)\ny_char = data_char['label']","041a9f4c":"X_train, X_test, y_train, y_test = train_test_split(X_char,y_char)","06113916":"standard_scaler = MinMaxScaler()\nstandard_scaler.fit(X_train)","693b2b59":"X_train = standard_scaler.transform(X_train)\nX_test = standard_scaler.transform(X_test)","081281e2":"X_train = X_train.reshape(X_train.shape[0], 28, 28, 1).astype('float32')\nX_test = X_test.reshape(X_test.shape[0], 28, 28, 1).astype('float32')\n\ny_train = tf.keras.utils.to_categorical(y_train)\ny_test = tf.keras.utils.to_categorical(y_test)","7fa1b94c":"model=keras.models.Sequential([keras.layers.Conv2D(32,3,activation='relu', input_shape=[28,28,1]),\n                               keras.layers.Conv2D(64, (3, 3), activation='relu'),\n                               keras.layers.MaxPooling2D(pool_size=2),\n                               keras.layers.Dropout(.4),\n                               keras.layers.Flatten(),\n                               keras.layers.Dense(128, activation='relu'),\n                               keras.layers.Dense(26, activation='softmax'),\n])","abbcfb33":"model.compile(optimizer='adam', loss=keras.losses.categorical_crossentropy, metrics=['accuracy'])","1b8692be":"history = model.fit(X_train, y_train, validation_data=(X_test,y_test), epochs=10, batch_size=120)","bf27dabc":"history_df=pd.DataFrame(history.history)\n\nhistory_df.plot(figsize = (8,8))\nplt.grid(True)\nplt.gca().set_ylim(0,1.2)\nplt.show()","9e75178b":"score = model.evaluate(X_test,y_test)\n\nprint(\"The score is : \", score[1])","373f079c":"model.save('model.h5')","e3068a82":"My team and I designed a character recognition system on browser using this and the MNIST dataset.\n\nIn this notebook I'll show the part excluding MNIST, the complete model code can be found at:\n\nhttps:\/\/github.com\/ArchanGhosh\/A-Simple-Browser-based-Alpha-Numeric-Prediction-and-Text-to-Speech-using-TensorFlow"}}