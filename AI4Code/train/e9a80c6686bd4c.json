{"cell_type":{"8755eba8":"code","5a0549dc":"code","c44df305":"code","50473de6":"code","5528abb0":"code","66e12c92":"code","b85f8246":"code","b2848b54":"code","0223f1d0":"code","0a3c1489":"code","1a60c6e5":"code","6bb2b7fa":"code","71c8a18d":"code","1a799694":"code","ea94b921":"code","fc1042a6":"code","eff1e9b1":"code","857b2b5a":"code","67d4f065":"code","0762e055":"code","3b7e7ffd":"code","d1ded85c":"markdown","3101c6b8":"markdown","8bdd5e04":"markdown","6768db73":"markdown","c3b68033":"markdown","04d355de":"markdown","c8358857":"markdown","f6cfde2f":"markdown","d8dc9b86":"markdown","34d9bdc4":"markdown","7edb4e2e":"markdown","edc2f12a":"markdown","17d57359":"markdown","c9c8153a":"markdown","c53e25e1":"markdown","9c2b1e66":"markdown","c75b70c0":"markdown","44f4c49b":"markdown","867e5af8":"markdown","230594aa":"markdown","62aa8b16":"markdown"},"source":{"8755eba8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5a0549dc":"df = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')\n","c44df305":"df.info()","50473de6":"df.describe()","5528abb0":"df.isnull().sum()","66e12c92":"df.head()","b85f8246":"y = df.target.values\nx_data = df.drop(['target'],axis=1)\nx = (x_data-np.min(x_data))\/(np.max(x_data)-np.min(x_data))","b2848b54":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 42)","0223f1d0":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(x_train, y_train)\naccuracy = lr.score(x_test, y_test)\nprint('Accuracy of Logistic Regression Model: ',accuracy)","0a3c1489":"from sklearn.svm import SVC\nsvm = SVC(random_state=42)\nsvm.fit(x_train, y_train)\naccuracy2 = svm.score(x_test, y_test)\nprint('Accuracy of SVM Model: ',accuracy2)","1a60c6e5":"accuracy3 = []\nfrom sklearn.neighbors import KNeighborsClassifier\nfor each in range (1,15):\n    knn =  KNeighborsClassifier(n_neighbors=each)\n    knn.fit(x_train, y_train)\n    accuracy3.append(knn.score(x_test, y_test))\n#print('Accuracy of KNN Model: ',accuracy3)","6bb2b7fa":"plt.plot(range(1,15),accuracy3)\nplt.xlabel('Neighbors')\nplt.ylabel('Accuracy')\nplt.show()","71c8a18d":"np.max(accuracy3)","1a799694":"np.argmax(accuracy3)","ea94b921":"print('Accuracy of KNN Model: ',accuracy3[2])","fc1042a6":"from sklearn.naive_bayes import GaussianNB\nnb = GaussianNB()\nnb.fit(x_train, y_train)\naccuracy4 = nb.score(x_test, y_test)\nprint('Accuracy of NB Classification Model: ',accuracy4)","eff1e9b1":"from sklearn.tree import DecisionTreeClassifier\ndt = DecisionTreeClassifier()\ndt.fit(x_train, y_train)\naccuracy5 = dt.score(x_test, y_test)\nprint('Accuracy of DT Classification Model: ',accuracy5)","857b2b5a":"accuracy6 = []\nfrom sklearn.ensemble import RandomForestClassifier\nfor each in range(1,150):\n    rf = RandomForestClassifier(n_estimators=each, random_state=42)\n    rf.fit(x_train, y_train)\n    accuracy6.append(rf.score(x_test, y_test))\n\n#print('Accuracy of RF Classification Model: ',accuracy6)","67d4f065":"plt.plot(range(1,150),accuracy6)\nplt.xlabel('N_Estimators')\nplt.ylabel('Accuracy')\nplt.show()","0762e055":"np.max(accuracy6)","3b7e7ffd":"np.argmax(accuracy6)","d1ded85c":"**Load the data**","3101c6b8":"Accuracy of Decision Tree Classification Model is 0.836.","8bdd5e04":"Data has 13 columns. Column names: 'Age','Sex','Cp','Trestbps','Chol','Fbs','Restecg','Thalach','Exang','Oldpeak','Slope','Ca','Thal','Target'\nAnd There has 303 values in each columns.","6768db73":"Was found the values. This values: 'Count', 'Mean', 'Std', 'Min', '25%', '50%', '75%', 'Max' ","c3b68033":"**Fit Random Forest Classification Model**","04d355de":"**Normalization**","c8358857":"**Fit KNN Classification Model**","f6cfde2f":"**Fit Logistic Regression Model**","d8dc9b86":"As seen in figure, Accuracy is high when n_estimators was 49.","34d9bdc4":"**Fit Decision Tree Classification Model**","7edb4e2e":"Accuracy of SVM Model is 0.836.","edc2f12a":"**Train and Test Split**","17d57359":"**Fit SVM Classification Model**","c9c8153a":"Data was took a glance.","c53e25e1":"There has no null in each column.","9c2b1e66":"Accuarcy of Logistic Regression Model is 0.85.","c75b70c0":"Accuracy of Random Forest Classification Model is 0.885 when n_estimators was 49.","44f4c49b":"Accuracy of KNN Model is 0.836 when n_neighbors was 3.","867e5af8":"As seen in figure, Accuracy is high when neighbors was 3.","230594aa":"**Fit Naive Bayes Classification Model**","62aa8b16":"Accuracy of Naive Bayes Classification Model is 0.868."}}