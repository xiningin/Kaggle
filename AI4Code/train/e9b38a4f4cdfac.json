{"cell_type":{"6e6333bc":"code","d13a487d":"code","0350e1b6":"code","3989a05c":"code","ac7dafb3":"code","ecc22b1f":"code","4aac946e":"code","c65b35c2":"code","3e4e4538":"code","149de883":"code","c6592901":"code","ea3d48bb":"code","f0eadf79":"code","d842374c":"code","9bd82ce3":"code","35216317":"code","15aa28ff":"code","53808a14":"code","ed6d6b18":"code","5a701e38":"code","c70e4df1":"code","c3e5563b":"code","70180244":"code","60d45ae4":"code","309806ec":"code","44f71c87":"code","68cde17b":"code","286d3490":"code","c7a290aa":"code","133da028":"code","f119a391":"code","cc8ac706":"markdown","0bc821fa":"markdown","2449a7a4":"markdown","46a6afe1":"markdown","ba45f05b":"markdown","28c4bb10":"markdown","6142927d":"markdown","2cd63eed":"markdown","46183ba1":"markdown","462d15cc":"markdown","0ea72d89":"markdown","ba957ce1":"markdown","c5b22e4f":"markdown","c9e9a858":"markdown","d373b1fd":"markdown","07b423ee":"markdown","3417475a":"markdown","8b5c0e5b":"markdown","42606954":"markdown","1c5e304a":"markdown","2da0a212":"markdown","fda423de":"markdown"},"source":{"6e6333bc":"import numpy as np\nimport pandas as pd\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns; sns.set()","d13a487d":"data = pd.read_csv('..\/input\/heart-failure-prediction\/heart.csv')\ndata.head()","0350e1b6":"categorical_columns = data.select_dtypes('object').columns\nnumerical_columns = data.select_dtypes('number').columns","3989a05c":"data.info()","ac7dafb3":"data.describe()","ecc22b1f":"# Let's check for any data imbalance\ndata['HeartDisease'].value_counts()","4aac946e":"data[categorical_columns].nunique()","c65b35c2":"data[categorical_columns].describe()","3e4e4538":"data['Sex'].value_counts().plot(kind='bar')","149de883":"data.pivot_table('HeartDisease', index='Sex')","c6592901":"age_range = pd.cut(data['Age'], 5)\ndata.groupby(age_range)['HeartDisease'].mean()","ea3d48bb":"np.round(data.pivot_table('HeartDisease', index='Sex', columns=age_range) * 100, 2)","f0eadf79":"data.groupby('ChestPainType')['HeartDisease'].sum()","d842374c":"data.groupby('ChestPainType')['HeartDisease'].mean()","9bd82ce3":"data.groupby('ChestPainType')['HeartDisease'].sum().plot(kind='bar')","35216317":"data.pivot_table('HeartDisease', index='Sex', columns='ChestPainType', aggfunc='sum')","15aa28ff":"data.groupby('RestingECG')['HeartDisease'].mean()","53808a14":"data.groupby('ExerciseAngina')['HeartDisease'].mean()","ed6d6b18":"data.pivot_table('HeartDisease', index='Sex', columns='ExerciseAngina')","5a701e38":"(data.groupby('ST_Slope')['HeartDisease'].mean() * 100).round(2)","c70e4df1":"numerical_columns","c3e5563b":"corr = data[numerical_columns].corr()\nsns.heatmap(corr, annot=True, fmt='.2f')","70180244":"sns.pairplot(data[numerical_columns])","60d45ae4":"from sklearn.model_selection import train_test_split, RandomizedSearchCV, GridSearchCV\nfrom sklearn.metrics import accuracy_score, classification_report\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.compose import make_column_transformer\nfrom sklearn.pipeline import Pipeline","309806ec":"ohd = OneHotEncoder()\nscaler = StandardScaler()\ncols = make_column_transformer((ohd, categorical_columns), (scaler, numerical_columns[:-1]))\n\nX = cols.fit_transform(data)\ny = data['HeartDisease']\n\n# Split the data into training and test set\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)","44f71c87":"from sklearn.linear_model import LogisticRegression","68cde17b":"model_0 = LogisticRegression()\nmodel_0.fit(X_train, y_train)\naccuracy_0 = model_0.score(X_test, y_test)\ny_pred = model_0.predict(X_test)\nprint(f\"Accuracy: {accuracy_0:.2f}\")\nprint(\"\\nClassification Report:\")\nprint(classification_report(y_test, y_pred))","286d3490":"from sklearn.neighbors import KNeighborsClassifier","c7a290aa":"ks = range(5, 20)\nleaf_size = range(10, 50)\nparam_grid = {\n    'leaf_size': leaf_size,\n    'n_neighbors': ks\n}\ngrid = RandomizedSearchCV(KNeighborsClassifier(), param_distributions=param_grid, cv=10)\ngrid.fit(X_train, y_train)\n\nmodel_1 = grid.best_estimator_\ny_pred = model_1.predict(X_test)\n\naccuracy_1 = accuracy_score(y_test, y_pred)\n\nprint(f\"Best Score: {grid.best_score_}\")\nprint(f\"Best Params: {grid.best_params_}\")\n\nprint(f\"\\nAccuracy: {accuracy_1:.2f}\")\nprint(\"\\nClassification Report:\")\nprint(classification_report(y_test, y_pred))","133da028":"from sklearn.ensemble import RandomForestClassifier\n\nestimators = range(10, 100, 10)\nsplits = [5, 10, 15, 20]\n\nparameters = {\n    'n_estimators': estimators,\n    'min_samples_split': splits\n}\n\ngrid = GridSearchCV(RandomForestClassifier(), param_grid=parameters, cv=10)\ngrid.fit(X_train, y_train)\n\nmodel_2 = grid.best_estimator_\ny_pred = model_2.predict(X_test)\n\naccuracy_2 = accuracy_score(y_test, y_pred)\n\nprint(f\"Best Score: {grid.best_score_}\")\nprint(f\"Best Params: {grid.best_params_}\")\n\nprint(f\"\\nAccuracy: {accuracy_2:.2f}\")\nprint(\"\\nClassification Report:\")\nprint(classification_report(y_test, y_pred))","f119a391":"from sklearn.svm import SVC\n\nparameters = {\n    'C': [10, 15, 20, 50, 100],\n    'gamma': [0.1, 0.01, 0.004, 1]\n}\ngrid = GridSearchCV(SVC(), param_grid=parameters, cv=10)\ngrid.fit(X_train, y_train)\n\nmodel_1 = grid.best_estimator_\ny_pred = model_1.predict(X_test)\n\naccuracy_1 = accuracy_score(y_test, y_pred)\n\nprint(f\"Best Score: {grid.best_score_}\")\nprint(f\"Best Params: {grid.best_params_}\")\n\nprint(f\"\\nAccuracy: {accuracy_1:.2f}\")\nprint(\"\\nClassification Report:\")\nprint(classification_report(y_test, y_pred))","cc8ac706":"### Conclusions\n\nFrom the above analysis we can see that most of our categorical features has some relationship with our Target Variable. While the numerical features are less more important but nevertheless we are going to include both to our model. and also most of the males in our Dataset have Heart Disease.","0bc821fa":"## Models Training and Selection","2449a7a4":"Interesting! No matter what the Gender is, People With ASY ChestPaintType are more likely to have Heart Disease.","46a6afe1":"From the above output we can see that we don't have any explicit null value. But some of the Columns are non numeric","ba45f05b":"As seen from the previous models training and Hyper Parameters Tunning `KNeighborsClassifier` with 11 *neighbors* and 14 *leaf_size* is the overall winner with 89% accuracy on The Test Set. ","28c4bb10":"### K-Neighbors Classifier","6142927d":"Average of People with Heart Disease based on their Gender. we can see that most of the males on our datasets have Heart Disease.","2cd63eed":"### SVM","46183ba1":"## Exploratory Data Analysis\n\nLet's explore the data a bit more to gain better understanding of the relationship b\/w the dependent and independent variables.","462d15cc":"### Random Forest","0ea72d89":"Again 85% of People with *ExerciseAngina* have *HeartDisease*","ba957ce1":"### Final Thoughts","c5b22e4f":"### Data Preprocessing","c9e9a858":"Our data is not balanced but the difference b\/w the negative and the positive class is not too large.","d373b1fd":"### Using the Numerical Features","07b423ee":"The Number of Possible Values for our categorical features.","3417475a":"People with Up *ST_Slope* have lower rate of HeartDisease than others.","8b5c0e5b":"The RestingECG Seems to balance for both *LHV* and *Normal* expect for *ST* which has about 65% Individuals having HeartDisease.","42606954":"### Using the Categorical Features","1c5e304a":"We can see that people with ASY ChestPaintType are more likely to have Heart Disease than others. Let's check and see if this holds True based on individual Sex.","2da0a212":"### Base Model (Logistic Regression)","fda423de":"As seen from the above table that females from 57-67 years has high average of Heart Disease while Males from 47 to above mostly have High Disease."}}