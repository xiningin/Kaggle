{"cell_type":{"61f53ea8":"code","61679810":"code","3453a5e9":"code","0eb8db14":"code","67f19300":"code","a77a369c":"code","d6603e30":"code","12d625a0":"code","ae2895cd":"code","28a9bee6":"code","b1feb77f":"code","ffbbc16a":"code","4e011d5b":"code","9a40635e":"code","697061b8":"code","9d136e89":"code","354951d1":"code","b3c0f1cd":"code","40c8b353":"code","975be7dc":"code","6b744096":"code","e42735ab":"code","f2b84b00":"code","fe7d8737":"code","c1efdeb2":"code","2e0a0335":"code","bc8bcddd":"code","fcf42ca4":"code","a133c593":"code","f114fb41":"code","41075ac0":"code","54e92f00":"code","6bd1b4ff":"code","5e9d8cc3":"code","40c01ced":"code","70629fdf":"code","615021c4":"code","94bacd2a":"code","c1e88596":"code","9827b05d":"code","1dd08385":"code","1534e290":"code","1fb155db":"code","d3709740":"code","e7d1ab44":"code","f45849b4":"code","f0144b7b":"code","db639a7b":"code","b8cbf6ed":"markdown","09b0dc60":"markdown","c33fa3ba":"markdown"},"source":{"61f53ea8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","61679810":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","3453a5e9":"df= pd.read_csv('\/kaggle\/input\/sanfranciso-crime-dataset\/Police_Department_Incidents_-_Previous_Year__2016_.csv')","0eb8db14":"df.head()","67f19300":"df.info()","a77a369c":"df.shape","d6603e30":"df.describe","12d625a0":"print(df['Category'].unique())","ae2895cd":"# checking if there are any null values\n\ndf.isnull().sum()","28a9bee6":"# filling the missing value in PdDistrict using the mode values\n\ndf['PdDistrict'].fillna(df['PdDistrict'].mode()[0], inplace = True)\n\ndf.isnull().any().any()","b1feb77f":"fig_dims = (15,6)\nfig, ax = plt.subplots(figsize=fig_dims)\nsns.countplot(x='Category', data=df)\n\nplt.title('Major Crimes in Sanfrancisco', fontweight = 30, fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","ffbbc16a":"fig_dims = (15,6)\nfig,ax = plt.subplots(figsize=fig_dims)\nsns.countplot(df['PdDistrict'],palette = 'gnuplot')\nplt.title('District with most crimes', fontweight = 30, fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()\n","4e011d5b":"fig, ax = plt.subplots(figsize = (15, 10))\n\ncolor = plt.cm.ocean(np.linspace(0, 1, 15))\ndf['Address'].value_counts().head(15).plot.bar(color = color)\n\nplt.title('Top 15 addresses in crime')\nplt.xticks(rotation=90)\nplt.show()","9a40635e":"fig, ax = plt.subplots(figsize = (15, 10))\n\n\ndf['DayOfWeek'].value_counts().head(15).plot.pie(explode = (0,0,0,0,0,0,0))\n\nplt.title('Crime count on each day')\nplt.xticks(rotation=90)\nplt.show()","697061b8":"fig, ax = plt.subplots(figsize = (15, 10))\n\ncolor = plt.cm.summer(np.linspace(0, 10, 20))\ndf['Resolution'].value_counts().head(15).plot.bar(color = color)\n\nplt.title('Resolution of crimes')\nplt.xticks(rotation=90)\nplt.show()","9d136e89":"fig_dims = (15,6)\nfig,ax = plt.subplots(figsize=fig_dims)\n\ndf['Date'] = pd.to_datetime(df['Date'])\n\ndf['Month'] = df['Date'].dt.month\n\nsns.countplot(df['Month'],palette = 'gnuplot')\nplt.title('Crimes each month', fontweight = 30, fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","354951d1":"fig, ax = plt.subplots(figsize = (15, 10))\n\ncolor = plt.cm.autumn(np.linspace(0, 10, 200))\ndf['Time'].value_counts().head(20).plot.bar(color = color)\n\nplt.title('Distribution of crimes over the day', fontsize =20)\nplt.xticks(rotation=90)\nplt.show()","b3c0f1cd":"data = pd.crosstab(df['Category'], df['PdDistrict'])\ncolor = plt.cm.Greys(np.linspace(0,1,10))\ndata.div(data.sum(1).astype(float), axis = 0).plot.bar(stacked = True, color = color, figsize = (18, 12))\nplt.title('District vs Category of Crime', fontweight = 30, fontsize = 20)\nplt.show()","40c8b353":"data = pd.crosstab(df['Category'], df['DayOfWeek'])\ncolor = plt.cm.Greys(np.linspace(0,1,10))\ndata.div(data.sum(1).astype(float), axis = 0).plot.bar(stacked = True, color = color, figsize = (18, 12))\nplt.title('Day of Week vs Category of Crime', fontweight = 30, fontsize = 20)\nplt.show()","975be7dc":"t = df.PdDistrict.value_counts()\ntable = pd.DataFrame(data=t.values, index=t.index, columns=['Count'])\ntable = table.reindex([\"CENTRAL\", \"NORTHERN\", \"PARK\", \"SOUTHERN\", \"MISSION\", \"TENDERLOIN\", \"RICHMOND\", \"TARAVAL\", \"INGLESIDE\", \"BAYVIEW\"])\ntable = table.reset_index()\ntable.rename({'index': 'Neighborhood'}, axis='columns', inplace=True)\n\ntable","6b744096":"df.head()","e42735ab":"df['Category'].value_counts()","f2b84b00":"df['Date'].value_counts().sum()","fe7d8737":"df['Time'].value_counts().sum()","c1efdeb2":"df['PdDistrict'].value_counts()","2e0a0335":"df['DayOfWeek'].value_counts()","bc8bcddd":"df['Resolution'].value_counts()","fcf42ca4":"df['Address'].value_counts().sum()","a133c593":"df['Location'].value_counts().sum()","f114fb41":"df['Month'].value_counts()","41075ac0":"df['Time'] = pd.to_datetime(df['Time'])\n\ndf['hour'] = df['Time'].dt.hour\ndf['min'] = df['Time'].dt.minute\n\ndf.head()","54e92f00":"df = df.drop(['IncidntNum','Descript','X', 'Y', 'PdId', 'Date', 'Address', 'Location', 'Time'],axis=1)","6bd1b4ff":"df.head()","5e9d8cc3":"df['Category'].groupby(df['hour']).count()\n","40c01ced":"df.head()","70629fdf":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()","615021c4":"category_enc = le.fit_transform(df['Category'])\ndayOfWeek_enc = le.fit_transform(df['DayOfWeek'])\npdDistrict_enc = le.fit_transform(df['PdDistrict'])\n\nprint(category_enc)\nprint(dayOfWeek_enc)\nprint(pdDistrict_enc)","94bacd2a":"features = list(zip(dayOfWeek_enc, pdDistrict_enc,df['Month'],df['hour'],df['min']))","c1e88596":"X = features\ny = category_enc","9827b05d":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,random_state = 32, test_size = 0.3) ","1dd08385":"from sklearn.neighbors import KNeighborsClassifier\n \nmodel = KNeighborsClassifier(n_neighbors=3)\n \n# Train the model using the training sets\nmodel.fit(X_train,y_train)\nmodel.score(X_test,y_test)","1534e290":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","1fb155db":"from sklearn.tree import DecisionTreeClassifier\nclassifier = DecisionTreeClassifier(criterion = 'entropy', random_state = 32)\nclassifier.fit(X_train, y_train)\nclassifier.score(X_test,y_test)","d3709740":"y_pred = classifier.predict(X_test)","e7d1ab44":"# from sklearn.metrics import confusion_matrix, accuracy_score\n# cm = confusion_matrix(y_test, y_pred)\n# print(cm)\n# accuracy_score(y_test, y_pred)","f45849b4":"# from sklearn.ensemble import RandomForestClassifier\n# classifier = RandomForestClassifier(n_estimators= 100, criterion = 'gini' , random_state= 32)\n# classifier.fit(X_train, y_train)\n# classifier.score(X_test, y_test)","f0144b7b":"# from sklearn.svm import SVC\n# classifier = SVC(kernel = 'linear', random_state = 32)\n# classifier.fit(X_train, y_train)\n# classifier.score(X_test, y_test)","db639a7b":"# from sklearn.svm import SVC\n# classifier = SVC(kernel = 'rbf', random_state = 32)\n# classifier.fit(X_train, y_train)\n# classifier.score(X_test, y_test)","b8cbf6ed":"# Optimizing the dataset","09b0dc60":"# Prediction Models","c33fa3ba":"We would drop 9 of the features because it doesn't affect the conclusion."}}