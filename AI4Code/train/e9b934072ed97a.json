{"cell_type":{"daacbd80":"code","a9fc9d67":"code","e6706d0c":"code","c1aab53d":"code","8b56e50d":"code","58fdf96c":"code","8439c603":"code","a1891052":"code","866d07a8":"code","2976c8ac":"code","849cc48f":"code","290dbac7":"code","e65073ef":"code","a08ad642":"code","69e00a61":"code","389a1491":"code","a26f8cca":"code","9ab0f42f":"code","e09be715":"code","6f3d57f4":"code","a5a3aa4a":"code","e881affa":"code","e686a88e":"code","0fedbdf6":"code","33ca83ff":"code","8b9e42f5":"code","ab798df5":"code","b7c5d890":"code","e4499c57":"code","1acabbd7":"code","f7508dbb":"code","3d93d659":"code","a9cf632b":"code","a6be624b":"code","c2c142fb":"code","12bfbc2f":"markdown","eabc79fa":"markdown","e24140c4":"markdown","f6658101":"markdown","b643fea0":"markdown","1ec527a7":"markdown","3e18d6dd":"markdown","5412be89":"markdown","b7bafb96":"markdown","8df69461":"markdown","3a10f07c":"markdown","179aa2c4":"markdown","564a3851":"markdown","c53cb322":"markdown","1c73d512":"markdown","87e8c2a5":"markdown","abb6c0fa":"markdown","db1481f9":"markdown","1c70029a":"markdown","1983ee71":"markdown","8371434b":"markdown","14d69e8e":"markdown","4049069a":"markdown","99726ca8":"markdown","b1a7461c":"markdown","3d272a82":"markdown","40ebb936":"markdown","9ca0c134":"markdown","65221d90":"markdown","72ad4f9e":"markdown","3ca16504":"markdown","55a18521":"markdown"},"source":{"daacbd80":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n# Additional packages needed : \nimport matplotlib.pyplot as plt\nimport seaborn as sb\n\nimport plotly as ply\nfrom plotly import tools\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot, init_notebook_mode, plot\nimport plotly.io as pio\nfrom plotly.subplots import make_subplots\ninit_notebook_mode(connected=True)\n\npio.templates.default = \"none\"","a9fc9d67":"df = pd.read_csv('..\/input\/all-black-match-data20032018\/ABMatchData(FULL).csv', parse_dates=['Date'])\ndf = df.set_index(df['Date'], drop=True)\ndf.sort_index(inplace=True)\ndf.rename(columns={'Result':'Score'}, inplace=True)\n\ndef wdl(x):\n    if x>0:\n        return 'Win'\n    elif x==0:\n        return 'Draw'\n    else:\n        return 'Lost'\n    \ndf['Result'] = df['Score'].apply(lambda x: wdl(x))\ndf.info(memory_usage='deep')","e6706d0c":"# creating a temporary dataframe for the section\ntmp_df = df['Result'].value_counts().to_frame()\ntmp_df['Fraction'] = 100 * df['Result'].value_counts(normalize=True).to_frame()","c1aab53d":"print(\"{} international games played\\n\".format(len(df)))\nprint(\"{} Victories ({:.2f}%)\\n{} Defeats ({:.2f}%)\\n{} Draws({:.2f}%)\".format(\n    tmp_df.loc['Win', 'Result'], tmp_df.loc['Win', 'Fraction'],\n    tmp_df.loc['Lost', 'Result'], tmp_df.loc['Lost', 'Fraction'],\n    tmp_df.loc['Draw', 'Result'], tmp_df.loc['Draw', 'Fraction']\n))","8b56e50d":"fig = go.Figure(go.Pie(labels=tmp_df['Result'].index, values=tmp_df['Result'].values,\n                      text=['{} games<br>{:.2f}%'.format(n,f) for n,f in zip(tmp_df['Result'].values,tmp_df['Fraction'].values)], textinfo='text',\n                      hoverinfo='label+text'))\n\nfig.update_layout({'height':500,\n                   'title':'All Blacks Game Results 2003-2018'})\nfig.show()","58fdf96c":"result_df = df.groupby('Result').agg({'Opposition Name':'nunique'}).T\n\nprint(\"Played against {} different teams\\n\".format(df['Opposition Name'].nunique()))\nprint(\"Beat {} of them at least once.\".format(result_df['Win'].values[0]))\nprint(\"Lost against {} teams at least once.\".format(result_df[['Lost']].sum(axis=1).values[0]))","8439c603":"df[df['Result']=='Lost']['Opposition Name'].value_counts(ascending=False)\\\n    .to_frame().rename(columns={'Opposition Name':'Number of Victories against New Zealand'})","a1891052":"# define temporary dataframe just the visualization\nyear_abs_df = df.resample('Y')['Result'].value_counts().unstack()\nyear_rel_df = df.resample('Y')['Result'].value_counts(normalize='index').unstack()","866d07a8":"traces = []\n\nfor col in ['Win', 'Lost', 'Draw']:\n    tmp_abs_df = year_abs_df[col].fillna(0.0)\n    tmp_rel_df = year_rel_df[col].fillna(0.0)\n\n    traces.append(go.Bar(x=tmp_rel_df.index.year, y=100 * tmp_rel_df.dropna().values, name=col,\n                         text=['{:.1f}%'.format(100 * e) for e in tmp_rel_df.dropna().values],\n                         textposition='inside',\n                         hovertext=tmp_abs_df.dropna().values,\n                         hovertemplate=\"<b>%{hovertext}<\/b> game(s)\" + \" <b>%{y}%<\/b>\"))\n    \nfig = go.Figure(data=traces,\n                layout={'barmode':'stack',\n                        'hovermode':'x unified',\n                        'height':500,\n                        'xaxis': dict(title = 'Year', dtick=1, tickangle=-60),\n                        'yaxis': dict(title = 'Percentage', dtick=10),\n                        'title':'All Blacks Games Result over the Years'})\nfig.show()","2976c8ac":"tmp_df = df[df.index.year==2009]\n\nfig = go.Figure(go.Scatter(x=tmp_df['Debutants'], y=tmp_df['Score'],\n                           name='Game', mode='markers',\n                           text=tmp_df['Opposition Name'],\n                           hovertemplate=\"<b>%{y}<\/b> points difference<br>against <b>%{text}<\/b><br>\" +\n                           \"<b>%{x}<\/b> debutants<br>\",\n                           marker={'color':tmp_df['Opposition Name'].replace({'South Africa':'green',\n                                                                              'Australia':'gold',\n                                                                              'France':'mediumblue',\n                                                                              'Italy':'lightskyblue',\n                                                                              'Wales':'crimson',\n                                                                              'England':'whitesmoke'}),\n                                   'size':10,\n                                   'colorscale':'Bluered_r', 'opacity':1.0,\n                                   'autocolorscale':False}))\n\nfig.update_layout({'hovermode':'closest',\n                   'height':500,\n                   'xaxis': dict(title = 'Number of Debutants', dtick=1),\n                   'yaxis': dict(title = 'Final Score Difference', dtick=10),\n                   'title':'Final Score Difference vs Number of Debutants for games in 2009'})\n\nfig.show()","849cc48f":"# temporary df for visualization\ntmp_df = df[['Opposition Name', 'Opposition Rating','Rating', 'Result']].copy()\ntmp_df['Rating Difference'] = df['Opposition Rating'] - df['Rating']\ntmp_df.sort_values(by='Rating Difference', ascending=False, inplace=True)","290dbac7":"fig = go.Figure(data=go.Bar(x=np.arange(len(tmp_df)), y=tmp_df['Rating Difference'],name='Game',\n                            marker_color=tmp_df['Result'].replace({'Win':'#1f77b4',\n                                                                   'Lost':'#ff7f0e',\n                                                                   'Draw':'#2ca02c'}),\n                            text=['vs ' + e[1] + '<br>' + e[2] for e in tmp_df[['Opposition Name', 'Result']].itertuples()],\n                            hovertemplate=\"%{text}<br>\" + \" <b>Rating Difference %{y}<\/b>\"))\n\n                \nfig.update_layout({'hovermode':'x unified', 'height':500,\n                   'xaxis': dict(showticklabels=False,\n                                 tickvals=np.arange(len(tmp_df)),\n                                 ticktext=tmp_df.index.strftime('%Y-%m-%d')),\n                   'yaxis': dict(title = 'Rating Difference', dtick=10),\n                   'title':'Game Result versus Rating Difference'})\nfig.show()","e65073ef":"# cleaning a little bit the memory\ndel tmp_df, year_abs_df, year_rel_df, result_df","a08ad642":"# defining \nwin_df = df[df['Result']=='Win']\nlost_df =  df[df['Result']=='Lost']\n\nbiggest_win = win_df['Score'].idxmax()\nsmallest_wins = win_df[win_df['Score'] == win_df['Score'].min()]","69e00a61":"print(\"Largest victory by {} points (against {} on {})\\n\".format(\n    win_df.loc[biggest_win, 'Score'],\n    win_df.loc[biggest_win, 'Opposition Name'],\n    win_df.loc[biggest_win, 'Date'].strftime('%d %b %Y')\n    ))\n\nprint(\"Smallest victory by 1 point.\\n {} times, against :\\n\".format(len(smallest_wins)) + \n      (',\\n').join([e[1] + ' on ' + e[0].strftime('%d %b %Y') for e in smallest_wins['Opposition Name'].iteritems()]))\n\nprint(\"\\nMedian score difference for victories : {}\".format(int(win_df['Score'].median())))","389a1491":"biggest_lost = lost_df['Score'].abs().idxmax()\nsmallest_lost = lost_df['Score'].abs().idxmin()","a26f8cca":"print(\"Largest defeat by {} points (against {} on {})\\n\".format(\n    abs(lost_df.loc[biggest_lost, 'Score']),\n    lost_df.loc[biggest_lost, 'Opposition Name'],\n    lost_df.loc[biggest_lost, 'Date'].strftime('%d %b %Y')\n    ))\nprint(\"Closest defeat by {} points (against {} on {})\\n\".format(\n    abs(lost_df.loc[smallest_lost, 'Score']),\n    lost_df.loc[smallest_lost, 'Opposition Name'],\n    lost_df.loc[smallest_lost, 'Date'].strftime('%d %b %Y')\n    ))\n\nprint(\"Median score difference for defeats : {}\".format(int(lost_df['Score'].median())))","9ab0f42f":"traces = []\n\nfor col in ['Win', 'Lost', 'Draw']:\n    tmp_df = df[df['Result']==col].dropna()\n    text = ['<b>{}<\/b> points difference<br> against <b>{}<\/b>'\\\n            .format(tmp_df.loc[date, 'Score'],tmp_df.loc[date, 'Opposition Name']) for date in tmp_df.index]\n\n    if col=='Draw':\n        traces.append(go.Scatter(x=tmp_df.index, y=tmp_df.dropna()['Score'].values,\n                                 name=col, mode='markers',\n                                 hovertext=text,\n                                 hovertemplate=\"<b>\"+col+\"<\/b><br>\" + \"%{hovertext}\"))\n    else:\n        traces.append(go.Bar(x=tmp_df.index, y=tmp_df.dropna()['Score'].values,\n                             name=col, width=5e8,\n                             hovertext=text,\n                             hovertemplate=\"<b>\"+col+\"<\/b><br>\" + \"%{hovertext}\"))\n\nfig = go.Figure(data=traces)\n\nfig.update_layout({'height':500,\n                   'hovermode':'x unified',\n                   'xaxis': dict(title = 'Date', tickangle=-60),\n                   'yaxis': dict(title = 'Final Score Difference', dtick=10),\n                   'title':'All Blacks Games Score Differences from 2003 until 2018'})\nfig.show()","e09be715":"tmp_df = df.reset_index(drop=True)['Score'].rolling(3).mean()\n\nfig = go.Figure(go.Scatter(x=tmp_df.index, y=tmp_df.values.round(decimals=2), name='3 games rolling average',\n                          mode='markers+lines',\n                          text=df.index.strftime('%d %b %Y'),\n                          hovertemplate=\"<b>%{text}<\/b><br>\"+\n                          \"<b>%{y}<\/b> points average\",\n                          line = dict(width=1.0, color='black'),\n                          marker = dict(color=tmp_df.values, \n                                    colorscale='RdYlBu',\n                                    cmin=-tmp_df.max()\/4,\n                                    cmax=tmp_df.max()\/4)))\n    \nfig.update_layout({'height':450,\n                   'hovermode':'closest',\n                   'xaxis': dict(title = 'Games', range=[0, 206],\n                                 ticktext=df.index.year.unique(),\n                                 tickvals=df['Date'].reset_index(drop=True).dt.year.drop_duplicates().index,\n                                 dtick=10, tickangle=-60),\n                   'yaxis': dict(title = 'Score Difference Average', dtick=10),\n                   'title':'All Blacks 3-games Average Score Difference over the Years'})\nfig.show()","6f3d57f4":"# time to clean again\ndel tmp_df, win_df, lost_df, biggest_lost, biggest_win, smallest_lost, smallest_wins","a5a3aa4a":"# necessary temporay dataframes for this section\nabs_df = pd.crosstab(df['Opposition Name'], df['Result']).sort_values('Win', ascending=False)\nrel_df = pd.crosstab(df['Opposition Name'], df['Result'], normalize='index')\n\nlost_df = abs_df[['Lost', 'Draw']].sum(axis=1)\nlost_df = lost_df[lost_df!=0.0]","e881affa":"text_win = ['{:.1f}% of {} games'.format(100*rel_df.loc[ctry]['Win'], abs_df.sum(axis=1).loc[ctry])\\\n            for ctry in abs_df.index]\ntext_lad = ['{:.1f}% of {} games'.format(100*rel_df.loc[ctry][['Draw', 'Lost']].sum(), abs_df.sum(axis=1).loc[ctry])\\\n            for ctry in lost_df.index]\n\nwin_trace = go.Bar(x=abs_df.index, y=abs_df['Win'].values, name='Victories',\n                   text=abs_df['Win'].values, textposition='outside',\n                   hovertext=text_win,\n                   hovertemplate=\"<b>%{y}<\/b><br>\"+ \"%{hovertext}\")\n\nlost_trace = go.Bar(x=lost_df.index, y=-lost_df.values, name='Lost or Draw',\n                    text=lost_df.values, textposition='outside',\n                    hovertext=text_lad,\n                    hovertemplate=\"<b>%{text}<\/b><br>\"+ \"%{hovertext}\")\n\nfig = go.Figure(data=[win_trace, lost_trace])\n\nfig.update_layout({'height':500,\n                   'hovermode':'x unified',\n                   'barmode':'relative',\n                   'xaxis': dict(title = 'Team', tickangle=-60),\n                   'title':'New Zealand Results by Opposition (sorted by Number of Victories)'})\n\nfig.show()","e686a88e":"sort_rel_df = rel_df.sort_values('Win', ascending=False)\ntraces = []\n\nfor col in ['Win', 'Lost', 'Draw']:\n    tmp_df = sort_rel_df[col].dropna()\n    traces.append(go.Bar(x=tmp_df.index, y=100*tmp_df.values.round(3), name=col,\n                         hovertemplate=\"<b>%{y}%<\/b>\"))\n    \nfig = go.Figure(data=traces)\n\nfig.update_layout({'height':400,\n                   'barmode':'stack',\n                   'hovermode':'x unified',\n                   'xaxis': dict(title = 'Team', tickangle=-60),\n                   'yaxis': dict(title = 'Ratio [%]', dtick=10),\n                   'title':'All Blacks Results ratio Versus other Teams'})\nfig.show()","0fedbdf6":"# cleaning, cleaning, cleaning\ndel tmp_df, sort_rel_df, rel_df, abs_df, lost_df","33ca83ff":"# here is a dict of latitude and longitude of the different places where New Zealand has played.\n# Note : it is not unlikely that for a few places coordinates are wrong, please let me know if that's the case\n\nlatlon_dict = {'Melbourne':{'latitude':-37.8249813, 'longitude':144.983613},\n        'Brisbane':{'latitude':-27.4648603, 'longitude':153.0096055},\n        'Sydney':{'latitude':-33.8471082, 'longitude':151.0643911},\n        'Dunedin':{'latitude':-45.86931228637695, 'longitude':170.5242156982422},\n        'Auckland':{'latitude':-36.8750114440918, 'longitude':174.7447509765625},\n        'Hamilton':{'latitude':-37.7778596, 'longitude':175.2678314}, \n        'North Shore City':{'latitude':-36.8257515, 'longitude':174.8047152},\n        'Wellington':{'latitude':-45.9037689, 'longitude':170.5237808},\n        'Christchurch':{'latitude':-43.53333, 'longitude':172.63333},\n        'Johannesburg':{'latitude':-26.1987522, 'longitude':28.0588697},\n        'Rome':{'latitude':41.9339521, 'longitude':12.4547231},\n        'Millennium Stadium':{'latitude':51.4782102, 'longitude':-3.1826127},\n        'Stade de France':{'latitude':48.9244725, 'longitude':2.3601325},\n        'Cape Town':{'latitude':-33.9034601, 'longitude':18.4111458},\n        'Lansdowne Road':{'latitude':53.3352331, 'longitude':-6.2281785},\n        'Twickenham':{'latitude':51.456027, 'longitude':-0.3415658},\n        'Murrayfield':{'latitude':55.9420314, 'longitude':-3.237366},\n        'Buenos Aires':{'latitude':-34.6354623, 'longitude':-58.5206591},\n        'Pretoria':{'latitude':-25.7531683, 'longitude':28.2229414},\n        'Rustenberg':{'latitude':-25.57863, 'longitude':27.16067},\n        'Lyon':{'latitude':45.7237761, 'longitude':4.8322542},\n        'Durban':{'latitude':-29.8306668, 'longitude':31.0322801},\n        'Marseille':{'latitude':43.269972, 'longitude':5.390935},\n        'Toulouse':{'latitude':43.5934385, 'longitude':1.4441164},\n        'New Plymouth':{'latitude':-39.0702614, 'longitude':174.0651382},\n        'Hong Kong':{'latitude':22.2727391, 'longitude':114.189227},\n        'Croke Park':{'latitude':53.3606275, 'longitude':-6.2526326},\n        'Bloemfontein':{'latitude':-29.1172351, 'longitude':26.2087696},\n        'Tokyo':{'latitude':35.6678, 'longitude':139.5271},\n        'Milan':{'latitude':45.4782004, 'longitude':9.123964},\n        'Port Elizabeth':{'latitude':-33.937792, 'longitude':25.5994087},\n        'La Plata':{'latitude':-34.9138407, 'longitude':-57.9890476},\n        'Napier':{'latitude':-39.501834, 'longitude':176.9124712},\n        'Chicago':{'latitude':41.8624515, 'longitude':-87.6167151},\n        'Apia':{'latitude':-13.8364613, 'longitude':-171.7513179},\n        'Wembley':{'latitude':51.5559838, 'longitude':-0.2795789},\n        'London':{'latitude':51.53846, 'longitude':-0.01635},\n        'Newcastle':{'latitude':54.9754693, 'longitude':-1.6218737},\n        'Nelson':{'latitude':-41.2668521, 'longitude':173.2831593},\n        'Yokohama':{'latitude':35.5099882, 'longitude':139.6063825}}\n\nlatlon_df = pd.DataFrame().from_dict(latlon_dict, orient='index')","8b9e42f5":"# including places corrdinates\ntmp_df = pd.merge(df, latlon_df.reset_index().rename(columns={'index':'Location'}), on='Location')\n\ntmp_df['Ground'] = 'Away'\nfor i in tmp_df.index:\n    if (tmp_df.loc[i, 'latitude']<-30) & (tmp_df.loc[i, 'longitude']>160):\n        tmp_df.at[i,'Ground'] = 'Home'","ab798df5":"tmp_df['Ground'].value_counts()","b7c5d890":"tmp_df.pivot_table(index=['Result'], columns=['Ground'], aggfunc='size').style.highlight_max()","e4499c57":"home_df = tmp_df.pivot_table(index=['Result'], columns=['Ground'], aggfunc='size')['Home']\naway_df = tmp_df.pivot_table(index=['Result'], columns=['Ground'], aggfunc='size')['Away']\n\nhome_pie = go.Pie(labels=home_df.index, values=home_df.values, hole=0.4, name='Home Games',\n                  hovertext=['{} games<br>{:.2f}%'.format(e, 100 * e\/ home_df.sum()) for e in home_df.values],\n                  hovertemplate=\"%{hovertext}\")\n                      #hoverinfo='label+text'))\naway_pie = go.Pie(labels=away_df.index, values=away_df.values, hole=0.4, name='Away Games',\n                  hovertext=['{} games<br>{:.2f}%'.format(e, 100 * e\/ away_df.sum()) for e in away_df.values],\n                  hovertemplate=\"%{hovertext}\")\n\nfig = make_subplots(rows=1, cols=2,\n                    specs=[[{\"type\":\"domain\"}, {\"type\":\"domain\"}]],\n                    subplot_titles=(\"Home results\", \"Away Results\"))\n\nfig.add_trace(home_pie,\n              row=1, col=1)\n\nfig.add_trace(away_pie,\n              row=1, col=2)\n\nfig.update_layout({'height':500,\n                   'title':'All Blacks Game Results 2003-2018',\n                   'annotations':[dict(text='Home', x=0.23, y=0.45, font_size=20, showarrow=False),\n                                  dict(text='Away', x=0.78, y=0.45, font_size=20, showarrow=False)]})\n\nfig.show()","1acabbd7":"geo_df = pd.merge(pd.crosstab(df['Location'], df['Result'], normalize='index'), latlon_df,\n                  left_index=True, right_index=True)","f7508dbb":"print(\"All {} places where New Zealand was unbeaten between 2003 and 2018 :\\n\".format(len(geo_df['Win'].nlargest(1, keep='all')))\n      + ('\\n').join(geo_df['Win'].nlargest(1, keep='all').index.tolist()))","3d93d659":"print(\"All {} places where New Zealand never won between 2003 and 2018 :\\n\".format(len(geo_df['Lost'].nlargest(1, keep='all')))\n      + ('\\n').join(geo_df['Lost'].nlargest(1, keep='all').index.tolist()))","a9cf632b":"tmp_df = pd.merge(df['Location'].value_counts().to_frame(), latlon_df, left_index=True, right_index=True).loc[geo_df.index]\n\nfig = go.Figure(go.Scattermapbox(\n    name='All Blacks Games',\n    lon = tmp_df['longitude'], lat = tmp_df['latitude'],\n    marker=go.scattermapbox.Marker(\n        size=10 * np.log(tmp_df['Location']+1),\n        color=100 * geo_df['Win'].round(decimals=3),\n        showscale=True,\n        colorscale='RdYlBu',\n        autocolorscale=False,\n        cmin=0, cmax=100,\n        opacity=0.9\n    ),\n    text=[i[0] + \": {} games\".format(i[1]) for i in tmp_df['Location'].iteritems()],\n    hovertemplate=\"<b>%{text}<\/b><br>\" + \"%{marker.color}% wining ratio\"\n))\n\nfig.update_layout(mapbox_style=\"open-street-map\",\n                  mapbox_center_lon=40, mapbox_zoom=0.4,\n                  margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","a6be624b":"fig = go.Figure(go.Densitymapbox(colorscale='Blues', name='Wining Heatmap',\n    lat=geo_df['latitude'],\n    lon=geo_df['longitude'],\n    z=100 * geo_df['Win'].round(decimals=4),\n    zmin=0.0, zmax=100, radius=20,\n    text=geo_df.index.tolist(),\n    hovertemplate=\"%{text}<br><b>%{z} Winning<\/b>% \"))\n\nfig.update_layout(mapbox_style=\"open-street-map\",\n                  mapbox_center_lon=40, mapbox_zoom=0.4,\n                  margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","c2c142fb":"fig = go.Figure(go.Densitymapbox(colorscale='Reds', name='Losing Heatmap',\n    lat=geo_df['latitude'],\n    lon=geo_df['longitude'],\n    z=100 * geo_df[['Lost', 'Draw']].sum(axis=1).round(decimals=4),\n    zmin=0.0, zmax=100, opacity=1.0, radius=20,\n    text=geo_df.index.tolist(),                         \n    hovertemplate=\"%{text}<br><b>%{z}% Losing<\/b>\"))\n\nfig.update_layout(mapbox_style=\"open-street-map\",\n                  mapbox_center_lon=40, mapbox_zoom=0.4,\n                  margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","12bfbc2f":"---\n# __All Blacks Final Score Habits__\n\nIn this section we investigate in more details games final scores.  \nThe idea is to see if it reinforces the New Zealand rugby reference status or starts cracking it.\n\nAt first we can look at few descriptive stats :","eabc79fa":"For your consideration, all three places where New Zealand was unable to win are in South Africa.\nReinforcing our previous point that the Springboks represented the biggest challenge over these 15 years.\n\nHereafter is now a world map of all games played by the All Blacks.  \nThe size of each dot is related to the number of games played and the color represents the winning ratio (Blue = high victory ratio, Red = Low victory ratio).","e24140c4":"Below we visualize all international games result over the 15 years time period.  \nVictories are represented by blue bars, defeats by orange bars and draws by green dots.\nThe y-axis gives the game final score difference and the x-axis gives the game date.  \n_(note : within the figure you can draw boxes with the mouse to zoom into the graph.)_","f6658101":"## __The DataSet__\n\nThe data collected covers approximately 15 years from October 2003 until November 2018.  \nTo give some context, the first game recorded corresponds to the second game of New Zealand during the 2003 rugby World Cup in Australia (don't ask me why the first game is not included... which was a victory 70-7 against Italy) when the last record is an international test match, their last of 2018.  \nDuring this 15 years period the All Blacks have participated in 4 four World Cups and won one in 2011.  \n\nFor each game we have the following informations :","b643fea0":"I think most field names are self-explanatory... :)  \nNotice yet that I have renamed the original `Result` column in `Score` and created a new `Result` column that can take only three values `Win`, `Lost` or `Draw` based on the `Score`.\nThis is simply for later analytic use (you'll see).\n\nAnyway, now we have the data, let's dive in...","1ec527a7":"---\n# __Short Summary__\n\nWhat can we actually conclude from our little analysis ?  \n\nFirst of all that New Zealand was head and shoulders above all other nations between 2003 and 2018.  \nEven though we lack statistics about other teams, no indicator allows us to question the All Blacks 15 years long hegemony.  \n\nHowever they were not unbeatable.  \nIf 6 teams have been able to beat New Zealand, two stand out :\n* the __Lions__ with the lowest defeat rate against the All Blacks (66.7%).\n* __South Africa__ that has been able to win 10 times (28.6% of their games) and stand strong at home.\n\nNonetheless we found that obviously if you want to beat them, you'd better play them at home.\nIt will increase your chances but not by that much...","3e18d6dd":"As expected blue bars representing victories are much higher than orange bars are deep, illustrating that the All Blacks defeat their opponent by quite a significant point difference.  \nInterstingly, 2009 appears again has a relatively more complicated year in terms of results.\n\nAnother way to visualize dominance statement is by looking at the 3-games rolling average score difference over the 15 years :","5412be89":"So, first thing first, how many games have the All Blacks played, won and lost between 2003 and 2018 :","b7bafb96":"As often a good visualization is worth a thousand datatables and the latter pie chart gives you the right first impression : they have won a lot!!!  \n\nTo go a step further we can look at the teams they played and who they have been able to beat :","8df69461":"---\n# __All Blacks Favorite Victims and Best Rival__\n\nAs we saw in the previous sections, between 2003 and 2018, the All Blacks have played against 21 different teams and have beaten all of them at least once.  \nWe also noticed that the Springboks were their toughest opponent but what about the other teams ?  \n\nDo the All Blacks have any favorite victim(s) ?  \nWho is their best rival ?\n\nLet's look at their performances against each teams :","3a10f07c":"As the number of games played at home and away are roughly the same it is clear that New Zealand is also subject to the home\/away effect.  \nIndeed __out of 24 games lost, 19 were away from the island, 4 times more than at home.__  \nIn terms of fraction, the All Blacks were three times more likely to lose away than at home.  \n\nAre there actually any specific places where they lost a lot or won a lot ?","179aa2c4":"We can already notice that Australia and South Africa have apparently given New Zealand a hard time more than once.\nWe'll see that in more details later in this analysis.\n\nThe All Blacks have an overall impressive victory ratio over 15 years... but have they actually been able to maintain a high victory ratio over the years ?  \nWell, if we look at the games outcome ratio over the years, here is how it looks :","564a3851":"---\n# __All Blacks Overall Stats 2003-2018__\n\nIn this analysis we are going to have a classic top-to-bottom approach and first look at global stats and indicators before going into more details, especially ones found along the way (because I've been told that it's where the devil resides).","c53cb322":"That last statistic is probably the most relevant of their ability not only to beat their opponents but to do it by quite a large amount :  \n__Half of the All Blacks victories have been by more than 19 points__  \nFor those of you that might not be familiar with rugby it means that the opposing team has to score at least three times (three tries with conversion) to catch up.\nIn rugby this is generally considered to be something very complicated to achieve.  \n\n+1 for reinforcing New Zealand reference status.  \n\nOk fine, but what about their defeats :","1c73d512":"Well... yep, South Africa was really the worst place for New Zealand.","87e8c2a5":"Over 15 years New Zealand played 205 games as follow : ","abb6c0fa":"As we already know, the Wallabies (Australia) and the Springboks (South Africa) have been a tough opposition for New Zealand, both of them being able not to lose 10 times.  \nWe can also notice that the Lions have played only 6 games and only lost 4 against the All Blacks, that's quite an achievement.\n\nTo better interpret our observations there are two things you must know :\n* Every year the rugby championship occurs (formerly known as tri-nations). This is a competition involving New Zealand, South Africa, Australia and Argentina (since 2012) where each team plays twice against the other three. That's why Australia, South Africa and Argentina have played so many times against New Zealand and therefore had more chances to beat them... and more chance to be beaten as well.\n* The Lions are not a nation but a team of the best players from the british islands. They don't play very often but it is a tradition that they play against reigning world champions in 3 games series.\n\nFollowing now is another look at games result per opposit team but in victory\/draw\/defeat ratio :","db1481f9":"Here is another achievement, of the __21 different teams__ they have played between 2003 and 2018 __the All Blacks have beaten them all at least once__.  \nFruthermore __only 6 teams have been able to beat them__ at least once, these ones :","1c70029a":"Well, one can argue that a defeat by 17 points is quite something (all credits to England that day) but it is interesting to note that for the All Blacks __the largest defeat is by less points than their victories median score__... I don't know how many teams can claim the same.  \n\nMoreover __half of their defeat have been by less than 5 points__, in other words less than a non-converted try.\n\nAgain, +1 for the All Blacks legend.","1983ee71":"And here is where is hell for them : ","8371434b":"From this map we can confidently say that, despite a higher defeats ratio away, __the All Blacks travel well and take full advantage of playing at home__.\n\nJust for fun now, it is also possible to look at the world as a heatmap.  \nIt is the purpose of the next two worldmaps where places in blue represent where New Zealand is unbeatable and confidently plays, and red hot places where winning is a struggle and places can be hell.  \n\nHere is where New Zealand feels at home :","14d69e8e":"Looking at the graph there is __no clear correlation between a defeat and the number of debutants in the squad__, instead it seems much correlated with the opposing team.  \nBasically __South Africa was clearly responsible for the lower victory ratio in 2009__ (at the same time they were reigning world champions that same year).  \n\nIt's interesting to note that it's already the second time that the Springboks (South Africa rugby team) stands out in our analysis.\nMaybe they are New Zealand's kryptonite.  \n\nZooming out of 2009, one would reasonably assume that games outcome are correlated with the \"strength difference\" between the two sides.\nThe only \"strength\" indicator available is each team rating and here is how it looks like when you look at results as a function of the rating difference :  \n_(game won in blue, lost in orange and draws in green)_","4049069a":"---\n# Do the All Blacks Like Traveling ?\n\nIn sport in general we often hear about the advantage to play at home and how some teams are unbeatable in some specific places.  \nFor a team like the All Blacks that has been head and shoulders above all the others between 2003 and 2018 does this still means a thing or do all places just feel like home ?","99726ca8":"At this stage we __New Zealand__ did not really have a favorite victim considering how many teams that have systematically beaten in the sense that the __victims list would be too long__.\n\nRegarding the best rivals, while South Africa and Australia were indeed strong opposition for New Zealand it seems that we have forgotten to notice the Lions.\n__The selection of players from the british islands has the lowest ratio of defeats against the All Blacks, \"only\" 66.7%.__  \n\n__Overall, the All Blacks best rival between 2003 and 2018 was South Africa with a 28.6% victory ratio for the later__\n\n\nNow we have looked at teams individually it's worth investigating New Zealand performance at home or away from their island.","b1a7461c":"A more visual representation of the previous table gives you these charts :","3d272a82":"... well, that's a good start.  \nOver __205 games__ the All Blacks have a victory ratio of __86.83%__ from 2003 until 2018.  \nVisually it looks like this :","40ebb936":"So, first, let's check where New Zealand never lost and where they always did :","9ca0c134":"In more details here are results at home and away :","65221d90":"Well... no clear correlation so not much to say here... New Zealand had more struggle against teams that were close in rating, which totally makes sense. Nothing to see here.  \nFor a better understanding it would be necessary to look at the rating system but this is beyond the scope of this analysis.\n\nAt this stage we know that between 2003 and 2018 the All Blacks have won most of their games and against any team.  \nBut maybe it was tight victories only... maybe they suffered large defeats... or maybe it is the other way wrong.\nLet's have a look.","72ad4f9e":"So, on average over 3 games they have frequently been able to score more than 10 points than their opponents.  \nFurthermore, since August 2011 the average score difference has never been negative.\n\nIn itself it might not seem much but it would be worth comparing with other national teams. I'm guessing that this is not that common.\n\n+1 again in favor of the legend.\nLooking at final has only reinforced our view.\n\n\nSo far we've looked at performances globally but we have already noticed that South Africa has been a strong opposition as well as Australia.\nMaybe it is worth looking at how the All Blacks performed against the different teams individually.","3ca16504":"# __2003-2018, 15 Years of All Blacks Superiority!__\n\nTo any rugby fan it is well known that the New Zealand national team, aka the __All Blacks__, is the biggest reference throughout the years. They can play anyone, anywhere and anytime the All Blacks are systematically the favorite.  \nBut beyond the feeling that they dominate this sport what if we look at some statistics over 15 years ?  \n\n_Are they really that amazing ?_  \n_Is there any place, team or time that they don't like ?_  \n_What can be their kryptonite ?_  \n\nMaking good use of international matchs data collected between 2003 and 2018 we hereafter investigate the reference status acquired by the New Zealand rugby team.\nCan we question it ?","55a18521":"From that figure we can notice two things :\n* Over 15 years __New Zealand has been able to maintain a high level of performance__, reaching a 100% victory ratio in 2013.\n* Their __lowest victory ratio happened in 2009 with \"only\" 71.4% of victory__ that year.\nThe answer is hence quite clear : yes they have maintained a high victory ratio over the years. \n\nSo what happened in 2009 ? How come did they lose 4 games ?  \nIt is worth noticing that 2009 is right inbetween two world cups (2007 won by South Africa and 2011 won by New Zealand) and we can assume that it was a time used by the head coach to test new players and\/or tactics...  \nFortunately for us we can check the first claim by checking the number of debutants for each game of 2009.  \n\nIn the following figure we look at the final score difference versus the number of debutants.\nIn addition the color indicates the opposing team as follow :\n* Green for South Africa\n* Yellow for Australia\n* Blue for France\n* LightBlue for Italy\n* Red for Wales\n* White for England"}}