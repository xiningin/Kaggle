{"cell_type":{"f79e4ff6":"code","54beb73f":"code","0039cd8d":"code","55b61fd6":"code","c6c50ae0":"code","8bc38720":"code","c7c439cd":"code","4fe339b7":"code","be9c78d4":"code","bb09b545":"code","ec057a52":"code","e190e011":"code","d350f69c":"code","44f62c83":"code","304456a8":"code","a45101d5":"code","1938a413":"code","d7c12cac":"code","13117835":"code","cca6e2e9":"code","2a27dbbb":"code","5dcdda70":"code","51bb134e":"code","2f7a9d5b":"markdown","188abf1b":"markdown","2f72c277":"markdown","731f8375":"markdown"},"source":{"f79e4ff6":"import os, time, random\nimport numpy as np\nimport pandas as pd\nimport cv2, torch\nfrom tqdm.auto import tqdm\nimport shutil as sh\n\nfrom IPython.display import Image, clear_output\nimport matplotlib.pyplot as plt\n%matplotlib inline","54beb73f":"%%time\n\n!git clone https:\/\/github.com\/ultralytics\/yolov5  # clone repo\n!pip install -U pycocotools\n!pip install -qr yolov5\/requirements.txt  # install dependencies\n!cp yolov5\/requirements.txt .\/","0039cd8d":"img_h, img_w, num_channels = (380, 676, 3)\ndf = pd.read_csv('..\/input\/car-object-detection\/data\/train_solution_bounding_boxes (1).csv')\ndf.rename(columns={'image':'image_id'}, inplace=True)\ndf['image_id'] = df['image_id'].apply(lambda x: x.split('.')[0])\nprint(df.head())","55b61fd6":"df['x_center'] = (df['xmin'] + df['xmax'])\/2","c6c50ae0":"df['y_center'] = (df['ymin'] + df['ymax'])\/2\ndf['w'] = df['xmax'] - df['xmin']\ndf['h'] = df['ymax'] - df['ymin']\ndf['classes'] = 0\ndf['x_center'] = df['x_center']\/img_w\ndf['w'] = df['w']\/img_w\ndf['y_center'] = df['y_center']\/img_h\ndf['h'] = df['h']\/img_h\ndf.head()","8bc38720":"index = list(set(df.image_id))\nimage = random.choice(index)\nprint(\"Image ID: %s\"%(image))\nimg = cv2.imread(f'\/kaggle\/input\/car-object-detection\/data\/training_images\/{image}.jpg')\nimg.shape","c7c439cd":"image = random.choice(index)\nImage(filename=f'\/kaggle\/input\/car-object-detection\/data\/training_images\/{image}.jpg',width=600)","4fe339b7":"source = 'training_images'\nif True:\n    for fold in [0]:\n        val_index = index[len(index)*fold\/\/5:len(index)*(fold+1)\/\/5]\n        for name,mini in tqdm(df.groupby('image_id')):\n            if name in val_index:\n                path2save = 'val2017\/'\n            else:\n                path2save = 'train2017\/'\n            if not os.path.exists('\/tmp\/convertor\/fold{}\/labels\/'.format(fold)+path2save):\n                os.makedirs('\/tmp\/convertor\/fold{}\/labels\/'.format(fold)+path2save)\n            with open('\/tmp\/convertor\/fold{}\/labels\/'.format(fold)+path2save+name+\".txt\", 'w+') as f:\n                row = mini[['classes','x_center','y_center','w','h']].astype(float).values\n                row = row.astype(str)\n                for j in range(len(row)):\n                    text = ' '.join(row[j])\n                    f.write(text)\n                    f.write(\"\\n\")\n            if not os.path.exists('\/tmp\/convertor\/fold{}\/images\/{}'.format(fold,path2save)):\n                os.makedirs('\/tmp\/convertor\/fold{}\/images\/{}'.format(fold,path2save))\n            sh.copy(\"\/kaggle\/input\/car-object-detection\/data\/{}\/{}.jpg\".format(source,name),'\/tmp\/convertor\/fold{}\/images\/{}\/{}.jpg'.format(fold,path2save,name))","be9c78d4":"#!python train.py --batch 2 --epochs 1 --data ..\/input\/yolov5-config\/car.yaml --cfg ..\/input\/yolov5-config\/yolov5x.yaml --name yolov5x_fold0_new","bb09b545":"!python yolov5\/detect.py --weights yolov5\/yolov5s.pt --img 676 --conf 0.4 --source \/kaggle\/input\/car-object-detection\/data\/testing_images","ec057a52":"predicted_files = []\nfor (dirpath, dirnames, filenames) in os.walk(\".\/yolov5\/runs\/detect\/exp\"):\n    predicted_files.extend(filenames)","e190e011":"Image(filename=f'.\/yolov5\/runs\/detect\/exp\/{random.choice(predicted_files)}')","d350f69c":"Image(filename=f'.\/yolov5\/runs\/detect\/exp\/{random.choice(predicted_files)}')","44f62c83":"Image(filename=f'.\/yolov5\/runs\/detect\/exp\/{random.choice(predicted_files)}')","304456a8":"Image(filename=f'.\/yolov5\/runs\/detect\/exp\/{random.choice(predicted_files)}')","a45101d5":"Image(filename=f'.\/yolov5\/runs\/detect\/exp\/{random.choice(predicted_files)}')","1938a413":"Image(filename=f'.\/yolov5\/runs\/detect\/exp\/{random.choice(predicted_files)}')","d7c12cac":"!git clone https:\/\/github.com\/ultralytics\/yolov3  # clone repo\n!pip install -qr yolov3\/requirements.txt  # install dependencies\n!cp yolov3\/requirements.txt .\/","13117835":"!python yolov3\/detect.py --weights yolov3\/yolov3.pt --img 676 --conf 0.4 --source \/kaggle\/input\/car-object-detection\/data\/testing_images","cca6e2e9":"Image(filename=f'.\/yolov3\/runs\/detect\/exp\/{random.choice(predicted_files)}')","2a27dbbb":"Image(filename=f'.\/yolov3\/runs\/detect\/exp\/{random.choice(predicted_files)}')","5dcdda70":"Image(filename=f'.\/yolov3\/runs\/detect\/exp\/{random.choice(predicted_files)}')","51bb134e":"Image(filename=f'.\/yolov3\/runs\/detect\/exp\/{random.choice(predicted_files)}')","2f7a9d5b":"## Loading Data \ud83d\udcdd \/ Preprocessing \u2699\ufe0f","188abf1b":"## Training (Work in Progress)","2f72c277":"## Prediction","731f8375":"### Libraries \ud83d\udcda\u2b07"}}