{"cell_type":{"2ce79d04":"code","3f9a9b1f":"code","eb377416":"code","9933aaa0":"code","25100a26":"code","de8cb00b":"code","214ea5ab":"code","fde3be5c":"code","1a32675d":"code","8c390db8":"code","a9dd7f8f":"code","5c920c23":"code","be851c24":"code","e5e2e1f2":"code","6cd00d91":"code","713c1e7a":"code","73c0d106":"code","31e6952a":"code","f159acf5":"code","8995decf":"code","b82d70fa":"code","eafa5a39":"code","7a63c9bf":"code","b90dd7f8":"code","55853dce":"code","c8fd23ce":"code","2f4dfc5f":"code","b87f320b":"code","d606fae3":"code","fc678a10":"code","f1b74954":"code","5e4953c6":"code","936971cd":"code","88055da6":"code","d88c95ee":"code","0626ee1a":"code","9f8726d7":"code","bbbdbb33":"code","96b19bae":"code","aa50db99":"code","6797d56e":"code","7a21ec46":"code","9eb6b2ee":"code","4a54039f":"code","6e1d17e5":"code","0901bd3d":"code","fd896487":"code","5497b79a":"code","fb427d85":"code","e8387d6b":"code","e2701ce8":"code","c525e6d8":"code","a86a235e":"code","3886bba4":"code","add57236":"code","2602a8ff":"code","07002ae6":"code","8c707e94":"code","91b98ad6":"code","31786d72":"code","d77c9c58":"code","245414fa":"code","77e366bf":"code","61e0850d":"markdown","06800e9d":"markdown","73152170":"markdown","eb79030e":"markdown","9452b4c9":"markdown","870d8296":"markdown","8089e89c":"markdown","054748e7":"markdown","167c8ca4":"markdown","8b319437":"markdown","aab22962":"markdown"},"source":{"2ce79d04":"import pandas as pd\nimport numpy as np\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import *\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.neural_network import MLPClassifier\nfrom hyperopt import tpe, hp, fmin, STATUS_OK,Trials\nfrom hyperopt.pyll.base import scope\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.model_selection import cross_val_score\nimport xgboost","3f9a9b1f":"df=pd.read_csv('..\/input\/churn-risk-rate-hackerearth-ml\/train.csv',na_values=['?','-999','Error','xxxxxxxx','Unknown'])\ndf.head()","eb377416":"df.isnull().sum()","9933aaa0":"df.shape","25100a26":"df=df.drop(['customer_id','Name','security_no','referral_id','last_visit_time'],axis=1)","de8cb00b":"df['churn_risk_score'].value_counts()","214ea5ab":"df['avg_time_spent']=np.where(df['avg_time_spent']<0,np.nan,df['avg_time_spent'])","fde3be5c":"df.shape","1a32675d":"df.info()","8c390db8":"for i in df.columns:\n  if df[i].dtype=='float64':\n    df[i]=df[i].fillna(df[i].mean())\n  else:\n    df[i]=df[i].fillna(method='ffill')","a9dd7f8f":"df.isnull().sum()","5c920c23":"df.fillna('Both',inplace=True)","be851c24":"df['joining_year']=df['joining_date'].apply(lambda x:int(x.split('-')[0]))","e5e2e1f2":"plt.rcParams['figure.figsize']=[10,10]\nsns.heatmap(df.corr(),annot=True)","6cd00d91":"df.drop('joining_date',axis=1,inplace=True)","713c1e7a":"df1=pd.get_dummies(df,drop_first=True)","73c0d106":"x=df1.drop('churn_risk_score',axis=1)\ny=df1['churn_risk_score']\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,stratify=y,random_state=0)","31e6952a":"rd=RandomForestClassifier()","f159acf5":"rd.fit(x_train,y_train)","8995decf":"rdpred=rd.predict(x_test)","b82d70fa":"print(classification_report(y_test,rdpred))","eafa5a39":"print(f1_score(y_test,rdpred,average='macro'))","7a63c9bf":"params=[{'n_estimators':[100, 300, 500, 800, 1200],\n'max_depth':[5, 8, 15, 25, 30],\n'min_samples_split':[2, 5, 10, 15, 100],\n'min_samples_leaf':[1, 2, 5, 10]}]","b90dd7f8":"rsearch=RandomizedSearchCV(rd, param_distributions = params, n_iter = 100, cv = 3, verbose=2, random_state=42, n_jobs = -1,scoring='f1_macro')","55853dce":"# rsearch.fit(x_train,y_train)  # Takes more time to run. please uncomment and run","c8fd23ce":"cv=StratifiedKFold()","2f4dfc5f":"cross_val_score(rd,x,y,cv=cv,scoring='f1_macro',n_jobs=-1).mean()","b87f320b":"xgc=xgboost.XGBClassifier()","d606fae3":"from sklearn.feature_selection import RFE","fc678a10":"rfe=RFE(xgc,n_features_to_select=30,step=1)  # 77.138","f1b74954":"rfe.fit(x_train,y_train)","5e4953c6":"pd.DataFrame(rfe.ranking_,index=x.columns,columns=['imp'])['imp'][pd.DataFrame(rfe.ranking_,index=x.columns,columns=['imp'])['imp']==1].index","936971cd":"x_select=x[['age', 'days_since_last_login', 'avg_time_spent',                        # 77.1981\n       'avg_transaction_value', 'avg_frequency_login_days', 'points_in_wallet',\n       'joining_year','region_category_Village',\n       'membership_category_Gold Membership',\n       'membership_category_No Membership',\n       'membership_category_Platinum Membership',\n       'membership_category_Premium Membership',\n       'membership_category_Silver Membership', 'joined_through_referral_Yes',\n       'preferred_offer_types_Gift Vouchers\/Coupons',\n       'medium_of_operation_Desktop', 'medium_of_operation_Smartphone',\n       'internet_option_Mobile_Data', 'internet_option_Wi-Fi',\n       'offer_application_preference_Yes', 'past_complaint_Yes',\n       'complaint_status_Solved in Follow-up',\n       'feedback_Poor Customer Service', 'feedback_Poor Product Quality',\n       'feedback_Poor Website', 'feedback_Products always in Stock',\n       'feedback_Quality Customer Care', 'feedback_Reasonable Price',\n       'feedback_Too many ads', 'feedback_User Friendly Website']]","88055da6":"x_train,x_test,y_train,y_test=train_test_split(x_select,y,test_size=0.3,stratify=y,random_state=42)","d88c95ee":"space = {\n    \"learning_rate\": hp.quniform('learning_rate',0,0.3,0.05),\n    \"max_depth\": hp.choice(\"max_depth\",[ 3, 4, 5, 6, 8, 10]),\n    \"min_child_weight\": hp.quniform(\"min_child_weight\",1,10,1),\n    \"gamma\":hp.quniform(\"gamma\",0,1,0.1),\n    \"colsample_bytree\":hp.quniform(\"colsample_bytree\",0,1,0.1)\n}","0626ee1a":"def hyperparameter_tuning(params):\n    clf = xgboost.XGBClassifier(**params,n_jobs=-1)\n    acc = cross_val_score(clf, x_select, y,scoring=\"f1_macro\").mean()\n    return {\"loss\":-acc, \"status\": STATUS_OK}","9f8726d7":"#trials = Trials()   uncomment and run\n#best = fmin(\n#    fn=hyperparameter_tuning,\n#    space = space, \n#    algo=tpe.suggest, \n#    max_evals=100, \n#   trials=trials\n#)\n\n# print(\"Best: {}\".format(best))","bbbdbb33":"xgc.fit(x_train,y_train)","96b19bae":"xgcpred=xgc.predict(x_test)","aa50db99":"print(f1_score(y_test,xgcpred,average='macro'))","6797d56e":"cross_val_score(xgc,x_select,y,cv=3,scoring='f1_macro',n_jobs=-1)","7a21ec46":"params={\"learning_rate\" : [0.05, 0.10, 0.15, 0.20],\n \"max_depth\"        : [ 3, 4, 5, 6, 8, 10],\n \"min_child_weight\" : [ 1, 3, 5, 7,9],\n \"gamma\"            : [ 0.0, 0.1, 0.2 , 0.3, 0.4,0.5],\n \"colsample_bytree\" : [ 0.3, 0.4, 0.5 ,0.6,0.7]}","9eb6b2ee":"rsearch=RandomizedSearchCV(xgc, param_distributions = params, n_iter = 100, cv = 3, verbose=2, random_state=42, n_jobs = -1,scoring='f1_macro')","4a54039f":"# rsearch.fit(x_select,y) # Takes more time ,uncomment and run","6e1d17e5":"# rsearch.best_estimator_","0901bd3d":"xgc=xgboost.XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,  # 77.1987 \n              colsample_bynode=1, colsample_bytree=0.7, gamma=0.01,\n              learning_rate=0.1, max_delta_step=0, max_depth=4,\n              min_child_weight=1, missing=None, n_estimators=122, n_jobs=1,\n              nthread=None, objective='multi:softprob', random_state=0,\n              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n              silent=None, subsample=1, verbosity=1)","fd896487":"xgc.fit(x_train,y_train)","5497b79a":"xgcpred=xgc.predict(x_test)","fb427d85":"print(f1_score(y_test,xgcpred,average='macro'))","e8387d6b":"xgc.fit(x_select,y)","e2701ce8":"test=pd.read_csv('..\/input\/churn-risk-rate-hackerearth-ml\/test.csv',na_values=['?','-999','Error','xxxxxxxx','Unknown'])\ntest.head()","c525e6d8":"test=test.drop(['customer_id','Name','security_no','referral_id','last_visit_time'],axis=1)","a86a235e":"test['avg_time_spent']=np.where(test['avg_time_spent']<0,np.nan,test['avg_time_spent'])","3886bba4":"test.isnull().sum()","add57236":"for i in test.columns:\n  if test[i].dtype=='float64':\n    test[i]=test[i].fillna(test[i].mean())\n  else:\n    test[i]=test[i].fillna(method='ffill')","2602a8ff":"test['joining_year']=test['joining_date'].apply(lambda x:int(x.split('-')[0]))","07002ae6":"test.drop('joining_date',axis=1,inplace=True)          ","8c707e94":"test1=pd.get_dummies(test,drop_first=True)","91b98ad6":"test1_select=test1[['age', 'days_since_last_login', 'avg_time_spent',\n       'avg_transaction_value', 'avg_frequency_login_days', 'points_in_wallet',\n       'joining_year','region_category_Village',\n       'membership_category_Gold Membership',\n       'membership_category_No Membership',\n       'membership_category_Platinum Membership',\n       'membership_category_Premium Membership',\n       'membership_category_Silver Membership', 'joined_through_referral_Yes',\n       'preferred_offer_types_Gift Vouchers\/Coupons',\n       'medium_of_operation_Desktop', 'medium_of_operation_Smartphone',\n       'internet_option_Mobile_Data', 'internet_option_Wi-Fi',\n       'offer_application_preference_Yes', 'past_complaint_Yes',\n       'complaint_status_Solved in Follow-up',\n       'feedback_Poor Customer Service', 'feedback_Poor Product Quality',\n       'feedback_Poor Website', 'feedback_Products always in Stock',\n       'feedback_Quality Customer Care', 'feedback_Reasonable Price',\n       'feedback_Too many ads', 'feedback_User Friendly Website']]","31786d72":"rdpred=xgc.predict(test1_select)","d77c9c58":"df2=pd.read_csv('..\/input\/churn-risk-rate-hackerearth-ml\/test.csv',usecols=['customer_id'])","245414fa":"df2['churn_risk_score']=rdpred","77e366bf":"df2.to_csv('Result.csv')","61e0850d":"# **Hypertuning using Hyperopt but unfortunately we did not achieve good results.**","06800e9d":"# **Hyperparameter Optimization**","73152170":"# **Evaluating on test Data Set**","eb79030e":"# **Hyperparmater tuning for xgboost as it was giving good F1 score compared to all the boosting and bagging techniques.**","9452b4c9":"# **Crossvalidation**","870d8296":"# **These were the best hyperparameters we got from above tuning.**","8089e89c":"# **We fit the model on whole training dataset**","054748e7":"# **Splitting the Dataset into dependant and independant variables.**","167c8ca4":"# **Feature Selection using Recursive Feature Elimination.**","8b319437":"# **Exploratory Data Analysis**","aab22962":"## **Importing Required Libraries are Reading the dataset**"}}