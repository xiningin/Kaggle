{"cell_type":{"33652bc0":"code","d42828e5":"code","11bad8ee":"code","4c24110b":"code","4842f91b":"code","17aa181c":"code","c3eef4c0":"code","6066afcb":"code","1e5c9cbe":"code","1ff58baa":"code","a8e1411c":"code","0e1b9ad4":"code","7ae55297":"code","badf6002":"code","6e69f790":"code","1cb86e2b":"code","822bd538":"code","a9e4f059":"code","6e642341":"code","5e185c88":"code","35cd70f4":"code","0f254f8e":"code","78feafcd":"code","b0c076f3":"code","60ddab0c":"code","db232593":"code","191726fa":"code","2a606e03":"code","fe53e251":"code","ba45207e":"code","20ae3f1a":"code","63078ea1":"code","05449bdd":"code","f72de95f":"code","724c71c0":"code","095a5873":"code","19adba8c":"code","d364db42":"code","25c29bc9":"code","3155c078":"code","8c45f22f":"code","fb0ef1a7":"code","218f2e69":"code","bd0bdc24":"code","829e162b":"code","f361cad4":"code","615daf3f":"code","116833c5":"code","8289768a":"code","284b3df9":"code","b38cfbba":"code","cd2ef574":"code","156b037c":"code","b0db31c5":"code","0b8f765b":"markdown","f1ea29c2":"markdown","fce6c076":"markdown","50c7149d":"markdown","0ddcb3a8":"markdown","e4cadaf3":"markdown","ddb10bf3":"markdown","48f51db8":"markdown","662d3674":"markdown"},"source":{"33652bc0":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","d42828e5":"attack = pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")","11bad8ee":"attack.head()","4c24110b":"attack.info()","4842f91b":"attack.describe()","17aa181c":"attack.isnull().sum()","c3eef4c0":"attack=attack.dropna(axis=0)","6066afcb":"attack.drop_duplicates(inplace=True)","1e5c9cbe":"sns.heatmap(attack.isnull(),cbar=False,yticklabels=False)","1ff58baa":"attack.head()","a8e1411c":"attack.columns","0e1b9ad4":"plt.figure(figsize=(15,10))\nsns.pairplot(data=attack,x_vars=['ejection_fraction', 'platelets','age', 'anaemia', 'creatinine_phosphokinase', 'diabetes'],y_vars=\"DEATH_EVENT\")","7ae55297":" sns.pairplot(data=attack,x_vars=[ 'high_blood_pressure', 'platelets',\n       'serum_creatinine', 'serum_sodium', 'sex', 'smoking', 'time'],y_vars=\"DEATH_EVENT\")","badf6002":"#Feature Engineering:Data Normalizing","6e69f790":"c={\"Agg_of_all\":(attack[\"age\"]+attack[\"anaemia\"]+attack[\"creatinine_phosphokinase\"]+attack[\"diabetes\"]+attack[\"ejection_fraction\"]+attack[\"high_blood_pressure\"]+\n                attack[\"platelets\"]+attack[\"serum_creatinine\"]+attack[\"serum_sodium\"]+attack[\"sex\"]+attack[\"smoking\"]+attack[\"time\"]),\"diagnosis\":attack[\"DEATH_EVENT\"]}\ndata_1 = pd.DataFrame(data=c)","1cb86e2b":"data_1.head()","822bd538":"data_1[\"Agg_of_all\"]=(data_1[\"Agg_of_all\"]-data_1[\"Agg_of_all\"].min())\/(data_1[\"Agg_of_all\"].max()-data_1[\"Agg_of_all\"].min())","a9e4f059":"sns.scatterplot(data = data_1, x=\"Agg_of_all\",y=\"diagnosis\",legend='auto')","6e642341":"plt.figure(figsize = (20, 15))\nsns.set(style=\"darkgrid\")\nplotnumber = 1\n\nfor column in attack:\n    if plotnumber <=13 :\n        ax = plt.subplot(5, 6, plotnumber)\n        sns.histplot(attack[column],kde=True)\n        plt.xlabel(column)\n        \n    plotnumber += 1\nplt.show()","5e185c88":"plt.figure(figsize = (20, 20))\nplotnumber = 1\n\nfor column in attack:\n    if plotnumber <= 30:\n        ax = plt.subplot(5, 6, plotnumber)\n        sns.boxplot(x=attack[column])\n        plt.xlabel(column)\n       \n    plotnumber += 1\nplt.title(\"Distribution\")\nplt.show()","35cd70f4":"plt.figure(figsize=(15,15))\nsns.heatmap(attack.corr(),annot=True)","0f254f8e":"x = attack[['time','ejection_fraction','serum_creatinine']]\ny = attack[\"DEATH_EVENT\"]\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y, test_size=0.2, random_state=2)","78feafcd":"x_train.shape","b0c076f3":"y_train.shape","60ddab0c":"from sklearn.tree import DecisionTreeClassifier\nDTC=DecisionTreeClassifier(max_leaf_nodes=3, random_state=2, criterion='entropy')\nDTC.fit(x_train,y_train)","db232593":"y_pred=DTC.predict(x_test)","191726fa":"from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\ncm_1=confusion_matrix(y_test,y_pred)","2a606e03":"sns.heatmap(cm_1,annot=True)","fe53e251":"print(\"{}%\".format(accuracy_score(y_test,y_pred)*100))","ba45207e":"print(classification_report(y_test,y_pred))","20ae3f1a":"from sklearn.ensemble import RandomForestClassifier\nRFC=RandomForestClassifier(max_features=0.5, max_depth=15, random_state=1)\nRFC.fit(x_train,y_train)","63078ea1":"Y_pred=RFC.predict(x_test)","05449bdd":"CM_1=confusion_matrix(y_test,Y_pred)","f72de95f":"sns.heatmap(CM_1,annot=True)","724c71c0":"print(\"{}%\".format(accuracy_score(y_test,Y_pred)*100))","095a5873":"print(classification_report(y_test,Y_pred))","19adba8c":"#logistic Regression","d364db42":"from sklearn.linear_model import LogisticRegression","25c29bc9":"log_reg = LogisticRegression()\nlog_reg.fit(x_train, y_train)\nlog_reg_pred = log_reg.predict(x_test)","3155c078":"CM_3=confusion_matrix(y_test,log_reg_pred)","8c45f22f":"sns.heatmap(CM_3,annot=True)","fb0ef1a7":"print(\"{}%\".format(accuracy_score(y_test, log_reg_pred)*100))","218f2e69":"print(classification_report(y_test,Y_pred))","bd0bdc24":"#KNN","829e162b":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=15)\nknn.fit(x_train,y_train)","f361cad4":"knn_pred = knn.predict(x_test)","615daf3f":"print(\"{}%\".format(accuracy_score(y_test,knn_pred)*100))","116833c5":"CM_k=confusion_matrix(y_test,knn_pred)","8289768a":"sns.heatmap(CM_k,annot=True)","284b3df9":"print(classification_report(y_test,knn_pred))","b38cfbba":"list_1 = list([\"KNN\",\"LogisticRegression\",\"DecisionTree\",\"RandomForest\"])\nlist_2 = list([93.3,90,90,90])","cd2ef574":"sns.barplot(x=list_2,y=list_1,palette=\"Blues_d\")","156b037c":"a={\"KNN\":[\"93.3\"],\"LogisticRegression\":[\"90\"],\"DecisionTree\":[\"90\"],\"RandomForest\":[\"90\"]}\nscore=pd.DataFrame(data=a)","b0db31c5":"score","0b8f765b":"# Importing libraries","f1ea29c2":"# Loading Dataset","fce6c076":"# Checking distribution of data","50c7149d":"# Train_test_split","0ddcb3a8":"# Data cleaning ","e4cadaf3":"# Model evaluation","ddb10bf3":"# Random forest Classifier","48f51db8":"# Data is cleaned","662d3674":"# Decision Tree Classifier"}}