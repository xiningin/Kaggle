{"cell_type":{"92088fd9":"code","4f71b765":"code","9629d8a9":"code","b6b579c4":"code","79ae7485":"code","7f2016f5":"code","5a0d5997":"code","813b6e76":"code","2b5999fc":"code","3392d0f5":"code","006cb63d":"code","8d49a72d":"markdown","f90472c8":"markdown"},"source":{"92088fd9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nfrom sklearn.datasets import load_iris\nfrom sklearn import tree\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import f1_score,confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom xgboost import XGBClassifier\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4f71b765":"dataset=pd.read_csv(\"..\/input\/breast-cancer-wisconsin-data\/data.csv\")\ndataset.head()","9629d8a9":"sns.scatterplot(x=dataset.radius_mean, y=dataset.smoothness_mean, hue=dataset.diagnosis )","b6b579c4":"\ny = dataset.diagnosis                          # M or B \nlist = ['Unnamed: 32','id','diagnosis']\nx = dataset.drop(list,axis = 1 )\nx.head()\n","79ae7485":"X_train, X_test, y_train, y_test = train_test_split(x,y,test_size=0.3)\nmodel=tree.DecisionTreeClassifier().fit(X_train,y_train) ","7f2016f5":"ac = accuracy_score(y_test,model.predict(X_test))\nprint('Accuracy is: ',ac)\ncm = confusion_matrix(y_test,model.predict(X_test))\nsns.heatmap(cm,annot=True,fmt=\"d\")","5a0d5997":"tree.plot_tree(model);","813b6e76":"forest=RandomForestClassifier(n_estimators=45,max_depth=10).fit(X_train,y_train)","2b5999fc":"ac = accuracy_score(y_test,forest.predict(X_test))\nprint('Accuracy is: ',ac)","3392d0f5":"xgboostmodel=XGBClassifier(n_estimators=1000,learning_rate=0.05).fit(X_train,y_train)\n","006cb63d":"ac = accuracy_score(y_test,xgboostmodel.predict(X_test))\nprint('Accuracy is: ',ac)","8d49a72d":"As we can see in the above plot, there is a significant visible classification by using the smoothness_mean and radius_mean as parameters. Now I will try to use a decision tree classifier.","f90472c8":"This is demo"}}