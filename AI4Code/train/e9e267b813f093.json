{"cell_type":{"f45dacfe":"code","72ea7aa8":"code","6940468e":"code","a2cb2684":"code","6b577207":"code","57c3417f":"code","84caa5a7":"code","179d143c":"code","c27eb49d":"code","54398b5b":"code","392cf4a4":"code","c78a5ea3":"code","69f18666":"code","b9c62161":"code","2ff5572a":"code","d5567eb5":"code","a2c510a8":"code","2c529e04":"code","2bd901cd":"code","8000d193":"markdown","bb3336ee":"markdown","325bb122":"markdown","ad6c5c73":"markdown","b9cc4868":"markdown","a826d206":"markdown","d3238cb4":"markdown","db3a13c5":"markdown","3117f87b":"markdown","029c11c2":"markdown","157682aa":"markdown","50fd92b6":"markdown","63e9ae2c":"markdown"},"source":{"f45dacfe":"print(7**4);\n","72ea7aa8":"s=\"Hi there Sam!\"\ns=s.split()\nprint(s);","6940468e":"planet = \"Earth\"\ndiameter = 12742","a2cb2684":"planet = \"Earth\"\ndiameter = 12742\nprint( 'The diameter of {} is {} kilometers.' .format(planet,diameter));","6b577207":"lst = [1,2,[3,4],[5,[100,200,['hello']],23,11],1,7]","57c3417f":"lst = [1,2,[3,4],[5,[100,200,['hello']],23,11],1,7]\na=lst[3][1][2];\nprint(a)","84caa5a7":"d = {'k1':[1,2,3,{'tricky':['oh','man','inception',{'target':[1,2,3,'hello']}]}]}","179d143c":"d = {'k1':[1,2,3,{'tricky':['oh','man','inception',{'target':[1,2,3,'hello']}]}]}\nprint(d['k1'][3][\"tricky\"][3]['target'][3])","c27eb49d":"# Tuple is immutable\n#Tuples operations are safe.\n#Tuples consumes less memory.\n","54398b5b":"def domainGet(email):\n    print(\"Your domain is: \" + email.split('@')[-1])\n\nemail = input(\"Please enter your email: >\")\ndomainGet(email)","392cf4a4":"domainGet('user@domain.com')","c78a5ea3":"def findDog(st):\n    if 'dog' in st.lower():\n        print(\"True\")\n    else:\n        print(\"False\")\n\nst = \"Is there a dog here?\"\nfindDog(st)","69f18666":"findDog('Is there a dog here?')","b9c62161":"value = 'This dog runs faster than the other dog dude!';\n\ndef countdogs(value):\n    count = 0\n    for word in value.lower().split():\n        if word == 'dog' or word == 'dogs':\n            count = count + 1\n            print(count)\n\ncountdogs(value)","2ff5572a":"seq = ['soup','dog','salad','cat','great']","d5567eb5":"seq = ['soup','dog','salad','cat','great']\nlist(filter(lambda word: word[0]!='s',seq))","a2c510a8":"def caught_speeding(speed, is_birthday):\n    pass","2c529e04":"caught_speeding(81,True)","2bd901cd":"caught_speeding(81,False)","8000d193":"** Create a function that counts the number of times the word \"dog\" occurs in a string. Again ignore edge cases. **","bb3336ee":"** Split this string:**\n\n    s = \"Hi there Sam!\"\n    \n**into a list. **","325bb122":"** What is 7 to the power of 4?**","ad6c5c73":"** Given this nested dictionary grab the word \"hello\". Be prepared, this will be annoying\/tricky **","b9cc4868":"** Create a function that grabs the email website domain from a string in the form: **\n\n    user@domain.com\n    \n**So for example, passing \"user@domain.com\" would return: domain.com**","a826d206":"** Use lambda expressions and the filter() function to filter out words from a list that don't start with the letter 's'. For example:**\n\n    seq = ['soup','dog','salad','cat','great']\n\n**should be filtered down to:**\n\n    ['soup','salad']","d3238cb4":"** Create a basic function that returns True if the word 'dog' is contained in the input string. Don't worry about edge cases like a punctuation being attached to the word dog, but do account for capitalization. **","db3a13c5":"** What is the main difference between a tuple and a list? **","3117f87b":"** Given this nested list, use indexing to grab the word \"hello\" **","029c11c2":"** Given the variables:**\n\n    planet = \"Earth\"\n    diameter = 12742\n\n** Use .format() to print the following string: **\n\n    The diameter of Earth is 12742 kilometers.","157682aa":"## Exercises\n\nAnswer the questions or complete the tasks outlined in bold below, use the specific method described if applicable.","50fd92b6":"# Great job!","63e9ae2c":"### Final Problem\n**You are driving a little too fast, and a police officer stops you. Write a function\n  to return one of 3 possible results: \"No ticket\", \"Small ticket\", or \"Big Ticket\". \n  If your speed is 60 or less, the result is \"No Ticket\". If speed is between 61 \n  and 80 inclusive, the result is \"Small Ticket\". If speed is 81 or more, the result is \"Big    Ticket\". Unless it is your birthday (encoded as a boolean value in the parameters of the function) -- on your birthday, your speed can be 5 higher in all \n  cases. **"}}