{"cell_type":{"6047043f":"code","386e906b":"code","85054bcf":"code","99aab12b":"code","0a4ab398":"code","ae7f36ac":"code","8109bdab":"code","c0319b57":"code","24f49010":"code","1c0f6dba":"code","2b2d3c56":"code","d9f1cc35":"code","bc8c0795":"code","26a1e1bf":"code","0605f2bf":"code","2191aa57":"code","0e44ddf5":"code","a82df0ef":"code","e79aa657":"code","dd341cd5":"code","5836cdd7":"code","0a1083f0":"code","85813268":"code","3cfb2747":"code","87c2f873":"code","43fe5847":"code","bbac147d":"code","f4353a57":"code","98bc53cb":"code","d3eeee64":"code","41fc2ab6":"code","b330fe5d":"code","cd7abc55":"code","2ceb0add":"code","cb59b576":"code","a5ab7d5d":"code","b93a9688":"code","4e65d7dc":"code","2990f123":"code","3601e84d":"code","97873bc5":"code","068a2ee2":"code","81e912e7":"code","3906b1f3":"code","92cc205e":"code","474d37c8":"code","77d11239":"code","fdaba83a":"code","e1e2362b":"code","289ef844":"code","cba05f7a":"code","f7cee653":"code","8eed2dd5":"code","078c7c79":"code","c692fbde":"code","64e6404a":"code","4502a00c":"markdown","cc508b5f":"markdown","24b016e9":"markdown","7414ffc7":"markdown","691c6aaa":"markdown","abd1aa42":"markdown","e4ebebd7":"markdown","343ea090":"markdown","f7fc7331":"markdown","0c7f977d":"markdown","5d98c989":"markdown","63c361ed":"markdown","53b908fd":"markdown","faecc249":"markdown","f0c9787d":"markdown","d09e687f":"markdown","9eecc462":"markdown","0f845a57":"markdown","58760a92":"markdown","11b0c895":"markdown","ad6b84ad":"markdown","0c31eef9":"markdown","a15ee710":"markdown","48632287":"markdown","26fe1c5c":"markdown","3cee8ff6":"markdown","8bbb4fb5":"markdown","25a77cfe":"markdown","3634e81c":"markdown","3918b2e8":"markdown"},"source":{"6047043f":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as pypl \nimport seaborn as sd","386e906b":"states_df = pd.read_csv('..\/input\/daily-power-generation-in-india-20172020\/State_Region_corrected.csv')\nstates_df.head()","85054bcf":"power_df = pd.read_csv('..\/input\/daily-power-generation-in-india-20172020\/file.csv')\npower_df.head()","99aab12b":"power_df['Region'].unique()","0a4ab398":"states_df['Region'].unique()","ae7f36ac":"states_df = states_df.replace('Northeastern','NorthEastern')","8109bdab":"states_df.isnull().sum()","c0319b57":"power_df.isnull().sum()","24f49010":"states_df.isna().sum()","1c0f6dba":"power_df.isna().sum()","2b2d3c56":"power_df.groupby(by=['Region']).sum()","d9f1cc35":"power_df = power_df.fillna(0)","bc8c0795":"power_df.groupby(by=['Region'],as_index=False).sum()","26a1e1bf":"power_df.groupby(by=['Region']).mean()","0605f2bf":"power_df.dtypes","2191aa57":"state_colname = {'State \/ Union territory (UT)':'State',\n                 'Area (km2)':'Area',\n                 'National Share (%)':'National Share'}\n\npower_colname = {'Thermal Generation Actual (in MU)':'Thermal Generation Actual',\n                 'Thermal Generation Estimated (in MU)':'Thermal Generation Estimated',\n                 'Nuclear Generation Actual (in MU)':'Nuclear Generation Actual',\n                 'Nuclear Generation Estimated (in MU)':'Nuclear Generation Estimated',\n                 'Hydro Generation Actual (in MU)':'Hydro Generation Actual',\n                 'Hydro Generation Estimated (in MU)':'Hydro Generation Estimated'}\n\nstates_df = states_df.rename(columns=state_colname)\npower_df = power_df.rename(columns=power_colname)","0e44ddf5":"power_df['Thermal Generation Actual'] = power_df['Thermal Generation Actual'].str.replace(',','')\npower_df['Thermal Generation Estimated'] = power_df['Thermal Generation Estimated'].str.replace(',','')","a82df0ef":"power_df['Thermal Generation Actual'] = power_df['Thermal Generation Actual'].astype(np.float64)\npower_df['Thermal Generation Estimated'] = power_df['Thermal Generation Estimated'].astype(np.float64)","e79aa657":"power_df['Date'] = pd.to_datetime(power_df['Date'])","dd341cd5":"states_df.groupby(by=['Region'])['State'].count()","5836cdd7":"states_df.groupby(by=['Region'])['State'].agg(['unique'])","0a1083f0":"mean_power = power_df.groupby(by='Date',as_index=False).mean()\nmean_power","85813268":"power_actcols = mean_power.loc[:,['Date','Thermal Generation Actual','Nuclear Generation Actual','Hydro Generation Actual']]\npower_actcols['Total Generation Actual'] = power_actcols.iloc[:,1:3].mean(axis=1)","3cfb2747":"pypl.figure(figsize=(18,9))\n#power_actcols.plot(x='Date',y='Total Actual Generation')\n\npypl.plot(power_actcols['Date'],power_actcols['Thermal Generation Actual'],label='Thermal Generation Actual')\npypl.plot(power_actcols['Date'],power_actcols['Nuclear Generation Actual'],label='Nuclear Generation Actual')\npypl.plot(power_actcols['Date'],power_actcols['Hydro Generation Actual'],label='Hydro Generation Actual')\npypl.plot(power_actcols['Date'],power_actcols['Total Generation Actual'],label='Total Generation Actual')\n\npypl.xlabel('Date')\npypl.ylabel('Power Generation mean (in MU)')\n\npypl.legend()","87c2f873":"actual_power = ['Thermal Generation Actual','Nuclear Generation Actual','Hydro Generation Actual']\nestimate_power = ['Thermal Generation Estimated','Nuclear Generation Estimated','Hydro Generation Estimated']\n\nfor idx,num in enumerate(actual_power): \n    #print(num)\n    pypl.figure(figsize=(18,9))\n    pypl.plot(mean_power['Date'],mean_power[actual_power[idx]],label=actual_power[idx])\n    pypl.plot(mean_power['Date'],mean_power[estimate_power[idx]],label=estimate_power[idx])\n    pypl.xlabel('Date')\n    pypl.ylabel('Mean Power Generation (in MU)')\n    pypl.legend()\n    pypl.show()\n#sd.lineplot(x='Date',y='Nuclear Generation Estimated',hue='Region',data=power_df)","43fe5847":"mean_power_per_region = power_df.groupby(by=['Date','Region'],as_index=False).mean()\nmean_power_per_region","bbac147d":"pypl.figure(figsize=(18,9))\nsd.lineplot(x='Date',y='Hydro Generation Actual',hue='Region',data=mean_power_per_region)","f4353a57":"pypl.figure(figsize=(18,9))\nsd.lineplot(x='Date',y='Nuclear Generation Actual',hue='Region',data=mean_power_per_region)","98bc53cb":"pypl.figure(figsize=(18,9))\nsd.lineplot(x='Date',y='Thermal Generation Actual',hue='Region',data=mean_power_per_region)","d3eeee64":"mean_power_per_region.boxplot(by='Region',column=['Thermal Generation Actual'],figsize=(18,9))","41fc2ab6":"mean_power_per_region.boxplot(by='Region',column=['Nuclear Generation Actual'],figsize=(18,9))","b330fe5d":"mean_power_per_region.boxplot(by='Region',column=['Hydro Generation Actual'],figsize=(18,9))","cd7abc55":"pypl.figure(figsize=(15,15))\nsd.barplot(x='Region',y='Thermal Generation Actual',hue='Region',data=mean_power_per_region,dodge=False)","2ceb0add":"pypl.figure(figsize=(15,15))\nsd.barplot(x='Region',y='Hydro Generation Actual',hue='Region',data=mean_power_per_region,dodge=False)","cb59b576":"pypl.figure(figsize=(15,15))\nsd.barplot(x='Region',y='Nuclear Generation Actual',hue='Region',data=mean_power_per_region,dodge=False)","a5ab7d5d":"power_share = states_df.groupby(by='Region',as_index=False).sum()\npower_share","b93a9688":"power_copy = power_df\npower_copy['Year'] = power_copy['Date'].dt.year\npower_copy.drop('Date',axis=1)","4e65d7dc":"power_mean_year = power_copy.groupby(by=['Region'],as_index=False).mean()\npower_mean_year = power_mean_year[['Region','Thermal Generation Actual','Nuclear Generation Actual','Hydro Generation Actual']]\npower_mean_year","2990f123":"pdx = pd.merge(power_share,power_mean_year,how='outer')\npdx = pdx[pdx.Region != 'Central']","3601e84d":"pdx['Thermal per km2'] = (pdx['Thermal Generation Actual']\/pdx['Area'])\npdx['Nuclear per km2'] = (pdx['Nuclear Generation Actual']\/pdx['Area'])\npdx['Hydro per km2'] = (pdx['Hydro Generation Actual']\/pdx['Area'])","97873bc5":"pdx","068a2ee2":"pdx_melt = pd.melt(pdx,id_vars=['Region'],value_vars=['Thermal per km2','Nuclear per km2','Hydro per km2'])\npdx_melt","81e912e7":"pypl.figure(figsize=(18,9))\nsd.barplot(x='Region',y='value',hue='variable',data=pdx_melt)","3906b1f3":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler,Normalizer\nfrom sklearn.linear_model import LinearRegression","92cc205e":"mean_thermal = mean_power[['Hydro Generation Estimated','Hydro Generation Actual']]\nmean_thermal","474d37c8":"q1 = mean_thermal['Hydro Generation Actual'].quantile(0.25)\nq3 = mean_thermal['Hydro Generation Actual'].quantile(0.75)\niqr = q3-q1\n\nminimum = q1 - (1.5 * iqr)\nmaximum = q3 + (1.5 * iqr)\n\nmean_thermal = mean_thermal.drop(mean_thermal[(mean_thermal['Hydro Generation Actual'] < minimum) | (mean_thermal['Hydro Generation Actual'] > maximum)].index)","77d11239":"q1 = mean_thermal['Hydro Generation Estimated'].quantile(0.25)\nq3 = mean_thermal['Hydro Generation Estimated'].quantile(0.75)\niqr = q3-q1\n\nminimum = q1 - (1.5 * iqr)\nmaximum = q3 + (1.5 * iqr)\n\nmean_thermal = mean_thermal.drop(mean_thermal[(mean_thermal['Hydro Generation Estimated'] < minimum) | (mean_thermal['Hydro Generation Estimated'] > maximum)].index)","fdaba83a":"mean_thermal.boxplot()","e1e2362b":"x = mean_thermal[['Hydro Generation Estimated']].values\ny = mean_thermal[['Hydro Generation Actual']].values\n\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)","289ef844":"linreg = LinearRegression()\nmodel = linreg.fit(x_train,y_train)","cba05f7a":"y_pred = model.predict(x_test)","f7cee653":"pypl.figure(figsize=(18,9))\n\npypl.scatter(x_test,y_test)\npypl.plot(x_test,y_pred,color='r')","8eed2dd5":"f'Training score : {linreg.score(x_train,y_train)}'","078c7c79":"from sklearn.metrics import r2_score\n\nscore = r2_score(y_test,y_pred)\n\nprint(f'Test score : {score}')","c692fbde":"f'Slope : {model.coef_}'","64e6404a":"f'Intercept : {model.intercept_}'","4502a00c":"## 3.3 Creating the training and testing data for linear regression","cc508b5f":"# 3. Linear Regression (for Hydro Generation)","24b016e9":"## 2.1 Number and names of states and union territories in each region.","7414ffc7":"## 3.1 Making the dataframe for training and testing data","691c6aaa":"## Hydro Generataion","abd1aa42":"## 2.8 Bar chart of the regions that uses the most power generator","e4ebebd7":"## 2.5 Actual Power vs Estimated Power ","343ea090":"## 2.7 Searching for outliers","f7fc7331":"## Coverting the date values to DateTime format","0c7f977d":"## 3.2 Removing all outliers that might disturb with the model","5d98c989":"## Calculating the sum and mean of the power generations per region","63c361ed":"## 2.3 Plotting a graph of all the types of power gernerations in all of India, with total power generation","53b908fd":"## 2.10 Power usage per area","faecc249":"## There are NaN values in the Nuclear Generation columns","f0c9787d":"# 1. Cleaning the dataset ","d09e687f":"## Thermal and nuclear seems to fluctuate from itself, but actual and estimated values for hydro trail each other well","9eecc462":"## Thermal seems to be the most dominanat power generator all over India","0f845a57":"## From the following graphs, the northern, southern and western regions uses the thermal,nuclear and hydro energy the most, respectively, over 3 years.\n","58760a92":"## 2.2 Mean power generation in India,both actual and estimated","11b0c895":"## Nuclear Generation","ad6b84ad":"## Converting thermal generation values to float ","0c31eef9":"## Checking for null values","a15ee710":"# 2. Data Exploration","48632287":"## Thermal still is the dominant power generator in all of India","26fe1c5c":"## 2.6 Regions that uses the most of all power generators","3cee8ff6":"## Checking for NaN values","8bbb4fb5":"## Nuclear Generation columns are empty for Eastern and NorthEastern region. Could be due to no nuclear plants in that region. Replacing the NaN values with 0","25a77cfe":"## Renaming column names for better clarity","3634e81c":"## Thermal Generation","3918b2e8":"## Replacing the words,so that it becomes easier to merge "}}