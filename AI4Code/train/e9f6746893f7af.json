{"cell_type":{"516c1ea0":"code","45e3a40a":"code","254f86ac":"code","abc89513":"code","77fcad1d":"code","77246398":"code","8f4e19d1":"code","eb01e627":"code","25651706":"code","230f3ecc":"code","c9ca20fb":"code","b07d8560":"code","7f4e7d22":"code","bf0026c8":"code","37b9c58c":"code","68a86aca":"code","f6afe108":"code","4b53b0fd":"code","0645ddcd":"code","e936f158":"code","e444ea98":"code","fc1c4b44":"code","454f79b9":"code","afd68bb5":"code","bca2d917":"code","7d308079":"code","eb8b2c76":"code","b9b6b254":"code","28b8cb20":"code","e926f597":"code","a090a33d":"code","7e84b5ef":"code","35cd6391":"code","5dee4fbb":"code","242aff74":"code","4083349b":"code","77e68aef":"code","dff3793b":"code","2ec91b11":"code","743a468d":"code","e7f1972d":"code","27920b69":"code","64463bf5":"code","bdce9050":"code","c5a1e0a6":"markdown","11c18f7b":"markdown","61b23abb":"markdown","d74d96c3":"markdown","8e7bfaf3":"markdown","229f542f":"markdown","17d7dc10":"markdown","3d2a64f1":"markdown","ac59a4e9":"markdown","ed9bc89d":"markdown","17a76e23":"markdown","aef87c28":"markdown","ecea7026":"markdown","4b52d109":"markdown","8f730abe":"markdown","60535f12":"markdown","56e5263b":"markdown","5c368a13":"markdown","77c55f4b":"markdown","0a010a2b":"markdown","de0538a8":"markdown","1ce5288c":"markdown","47d4fdb1":"markdown","595c2bb5":"markdown","ff0b32cd":"markdown","67bae53d":"markdown","715f7e54":"markdown","57f57ac8":"markdown","3ce577e6":"markdown","c54ac956":"markdown","444fa87d":"markdown","20d2c519":"markdown","0e4b3b28":"markdown","5c0a2a7a":"markdown","2d628386":"markdown","cfa6cc58":"markdown","afad1da1":"markdown","81aad0d8":"markdown","d9f60bab":"markdown","d0e0430f":"markdown","20d81912":"markdown","b4f87f6d":"markdown","06eeb5ce":"markdown","e7befdf4":"markdown","07ab9499":"markdown","309327e3":"markdown","6a682d78":"markdown","e1920d27":"markdown","f4ff1c5d":"markdown","770c0d33":"markdown","95765077":"markdown","5db98cd1":"markdown"},"source":{"516c1ea0":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","45e3a40a":"df=pd.read_csv('..\/input\/montcoalert\/911.csv')","254f86ac":"df.head()","abc89513":"df.info()","77fcad1d":"df['zip'].value_counts().head(10)\n","77246398":"by_zip = df.groupby(['zip']).count()\nby_zip.sort_values(by='addr', ascending=False, inplace=True)\nby_zip = by_zip.head(10)\nplt.figure(figsize=(12,6))\nplt.title('Top 10 zip codes on 911 calls:')\nsns.barplot(x='zip', y='addr', data=by_zip.reset_index()) \n","8f4e19d1":"df['twp'].value_counts().head(10)","eb01e627":"by_twp = df.groupby(['twp']).count()\nby_twp.sort_values(by='addr', ascending = False, inplace=True)\nby_twp = by_twp.head(10)\nplt.figure(figsize=(20,6))\nplt.title('Top 10 cities on 911 calls')\nsns.barplot(x='twp', y='addr', data=by_twp.reset_index())","25651706":"reasons = df['title'].apply(lambda reason: reason.split(':')[0])\ndf['reason'] = reasons\ndf.head()","230f3ecc":"df['reason'].value_counts()","c9ca20fb":"plt.title(\"Most common reasons on 911 calls\")\nsns.countplot(x='reason', data=df) \nc_reasons = df['reason'].value_counts().to_frame() # Converting the series into a dataframe:\nc_reasons.plot(kind='pie', subplots=True, figsize=(6,6), title=\"Most common reasons on 911 calls\")","b07d8560":"df['timeStamp'] = pd.to_datetime(df['timeStamp']) # Converting by the to_datetime()","7f4e7d22":"df['timeStamp'].iloc[0].hour","bf0026c8":"df['timeStamp'].iloc[0].month","37b9c58c":"df['timeStamp'].iloc[0].dayofweek","68a86aca":"df['timeStamp'].iloc[0].year","f6afe108":"df['hour'] = df['timeStamp'].apply(lambda time: time.hour)\ndf['dayofweek'] = df['timeStamp'].apply(lambda time: time.dayofweek)\ndf['month'] = df['timeStamp'].apply(lambda time: time.month)\ndf['year'] = df['timeStamp'].apply(lambda time: time.year)","4b53b0fd":"df.head()","0645ddcd":"days = {0:'Mon', 1:'Tue', 2:'Wed', 3:'Thu', 4:'Fri', 5:'Sat', 6:'Sun'}","e936f158":"df['dayofweek'] = df['dayofweek'].map(days)","e444ea98":"df['dayofweek']","fc1c4b44":"df['dayofweek'].value_counts()","454f79b9":"plt.title(\"911 calls by days of week:\")\nsns.countplot(x='dayofweek', data=df)","afd68bb5":"plt.title('911 Calls by day of week and reasons')\nsns.countplot(x='dayofweek', data=df, hue='reason')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","bca2d917":"sns.countplot(x='month', data=df)\nplt.title(\"911 calls by month\")","7d308079":"months = {1:'Jan', 2: 'Feb', 3:'Mar', 4:'Apr', 5:'May', 6:'Jun', 7:'Jul', 8:'Aug', 9:'Sep', 10:'Oct', 11:'Nov', 12:'Dec'}\ndf_mn = df.copy() # Just making a copy to preserve temporal order on future insights\ndf_mn['month'] = df_mn['month'].map(months)","eb8b2c76":"df_mn['month']","b9b6b254":"plt.title(\"911 calls by month\")\nsns.countplot(x='month', data=df_mn)","28b8cb20":"plt.title(\"911 calls by month\")\nsns.countplot(x='month', data=df_mn, hue='reason')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","e926f597":"plt.title(\"911 calls per year\")\nsns.countplot(x='year', data=df)","a090a33d":"plt.title(\"911 calls per year\")\nsns.countplot(x='year', data=df, hue='reason')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","7e84b5ef":"df_2015 = df[df['year'] == 2015]\ndf_2015['month'].value_counts()","35cd6391":"by_month = df.groupby(['month']).count()","5dee4fbb":"by_month.head()","242aff74":"by_month['addr'].plot(title=\"911 calls through months\")","4083349b":"a_2016 = df[df['year']==2016].groupby(['month']).count()\na_2017 = df[df['year']==2017].groupby(['month']).count()\na_2018 = df[df['year']==2018].groupby(['month']).count()\na_2019 = df[df['year']==2019].groupby(['month']).count()\na_2016['addr'].plot(legend=True)\na_2017['addr'].plot()\na_2018['addr'].plot()\na_2019['addr'].plot()\nplt.title(\"911 Calls through months year by year\")\nplt.legend(['2016','2017','2018','2019'])","77e68aef":"sns.lmplot(x='month', y='addr', data=by_month.reset_index())","dff3793b":"df[df['reason'] == 'Traffic'].groupby(['month']).count()['addr'].plot()\ndf[df['reason'] == 'EMS'].groupby(['month']).count()['addr'].plot()\ndf[df['reason'] == 'Fire'].groupby(['month']).count()['addr'].plot()\nplt.title('Reasons of 911 calls line comparison')\nplt.legend(['Traffic','EMS', 'Fire'])\nplt.tight_layout()","2ec91b11":"day_hour = df.groupby(['dayofweek', 'hour']).count()['reason'].unstack()\nday_hour.head()","743a468d":"plt.figure(figsize=(12,6))\nplt.title(\"911 Calls on days of week and hour\")\nsns.heatmap(day_hour, cmap='YlGnBu')","e7f1972d":"sns.clustermap(day_hour, cmap='YlGnBu')","27920b69":"day_month = df.groupby(['dayofweek', 'month']).count()['reason'].unstack()\nday_month.head()","64463bf5":"plt.figure(figsize=(12,6))\nsns.heatmap(day_month, cmap=\"inferno_r\")","bdce9050":"sns.clustermap(day_month, cmap='inferno_r')","c5a1e0a6":"Now let's divide by reason:","11c18f7b":"Let's see it year by year:","61b23abb":"Let's also see a clustermap:","d74d96c3":"# A data analisys of the Montgomery County, PA [911 calls](https:\/\/www.kaggle.com\/mchirico\/montcoalert)","8e7bfaf3":"**Question:** in which days and which hours happen most of the calls?","229f542f":"Let's make some different and interesting plots now:","17d7dc10":"Day of the week:","3d2a64f1":"**Question:** In which day of which month there are concentrated more calls?","ac59a4e9":"Top 10 zip codes on 911 calls:","ed9bc89d":"Let's also see a clustermap:","17a76e23":"Checking dataframe:","aef87c28":"In the title there are three main kinds of reasons of the emergency, they are EMS, Fire and Traffic. Let's create a new column containing just the reasons of each occurrence, without the descriptions. This may help to mantain the code more clean and make easier to get some insights. ","ecea7026":"By the way, we can also change the month number into the month name in order to get a better description:","4b52d109":"911 Calls by day of week:","8f730abe":"* By: Mateus Mendes Ramalho da Silva \n1.     mateus.mendes.mmr@gmail.com","60535f12":"Answer : EMS is the most common","56e5263b":"Year:","5c368a13":"By doing this, we can now extract some very useful and especific information from the timeStamp.\nLike:","77c55f4b":"Checking:","0a010a2b":"Let's first agroup the data by month","de0538a8":"Which one of the reasons is the most common one:","1ce5288c":"Top 10 cities on 911 calls:","47d4fdb1":"Checking head of the dataset:","595c2bb5":"Let's visualize the data","ff0b32cd":"Now with the reasons:","67bae53d":"Now let's take a look in a line insight using the reason:","715f7e54":"Now the visualization:","57f57ac8":"**Answer**: We can notice that most of the calls happen on the fridays of march. We can also notice a great amount on the Tuesdays of january.","3ce577e6":"We can notice that the day with more 911 calss is friday and the one with less is sunday.","c54ac956":"**Answer:** We can notice that most of the calls happens between 15 pm and 18 pm, mainly 17 pm. The most common day are fridays, we can also say that in the weeknds there less calls than in the other days.","444fa87d":"Hour:","20d2c519":"Now let's create some heatmaps using the hour and the day of week:","0e4b3b28":"Getting the slice of the tittles and putting in a new columns called 'reason':","5c0a2a7a":"Month:","2d628386":"Let's Check:","cfa6cc58":"Let's now add the hour, month and dayofweek columns on the dataframe:","afad1da1":"Checking infos about the dataframe","81aad0d8":"Let's now get some informations related to time. We need now to convert the string on the 'timeStamp' column on a dateTime format","d9f60bab":"Let's now check by years:","d0e0430f":"Have you noticed something weird? Yes, exactly. The day of the week is a number, to improve this we are going to need to create a dictionary with the name of the days of the week and apply to the column using the map() function:","20d81912":"Let's show it graphically:","b4f87f6d":"**Question**: Why does 2015 have less data than other years?","06eeb5ce":"**Answer**: The data from 215 correspond just to december**","e7befdf4":"911 Calls by month:","07ab9499":"Importing python libraries:","309327e3":"Loading dataset on a dataframe:","6a682d78":"Dividing also by reason:","e1920d27":"Let's check the months to see if the data spreads through all the year:","f4ff1c5d":"Now let's see on a linear model plot:","770c0d33":"Let's also relate the days of week and months:","95765077":"Let's now finally get some informations from the timeStamp:","5db98cd1":"We can notice that the calls are more present in January and december"}}