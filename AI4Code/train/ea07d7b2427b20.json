{"cell_type":{"1bd5e160":"code","db47c6a3":"code","793e219b":"code","5f77a640":"code","4520ff2a":"code","ca6116f2":"code","3ccecae1":"code","a9c7fd23":"code","ead4c219":"code","ab7a044a":"code","d3d124bc":"code","2e591b3c":"code","f06a1759":"code","90d476c1":"code","dcd77c15":"code","5ce0f30a":"code","8c5460ce":"code","7b3a802c":"code","376fa5b1":"code","0d8f3889":"code","39e17530":"code","c0433577":"code","c3656cc9":"code","f904a3be":"code","454aab04":"markdown","a8eb189b":"markdown","079000cc":"markdown","937deab8":"markdown","d26d47e5":"markdown","95f7d88f":"markdown","db3e26e3":"markdown","f8647a6c":"markdown","835aa1d6":"markdown","da8850e9":"markdown","e9505e83":"markdown","95b589fb":"markdown","d3164cab":"markdown","c1446d7c":"markdown"},"source":{"1bd5e160":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np","db47c6a3":"dataset = pd.read_csv('..\/input\/iris-flower-dataset\/iris_dataset.csv')\nx = dataset.iloc[:, :-1].values\ny = dataset.iloc[:, -1].values","793e219b":"dataset","5f77a640":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.20, random_state = 0)","4520ff2a":"x_train","ca6116f2":"y_train","3ccecae1":"x_test","a9c7fd23":"y_test","ead4c219":"from sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)\nclassifier.fit(x_train, y_train)","ab7a044a":"y_pred = classifier.predict(x_test)\nnp.set_printoptions(precision = 2)\nprint(\"Predicted values are:\")\nprint(y_pred)","d3d124bc":"numrows = len(y_test)","2e591b3c":"regression_df = pd.DataFrame({'Original_species':[0.0]*numrows,\n                              'Predicted_species':[0.0]*numrows})","f06a1759":"seq = ['Original_species',\n       'Predicted_species']","90d476c1":"regression_df = regression_df.reindex(columns=seq)","dcd77c15":"for i in range(0 , numrows):\n    real_values = y_test[i]\n    predicted_values = y_pred[i]\n    \n    if real_values == \"setosa\":\n        real_values = 0\n    elif real_values == \"versicolor\":\n        real_values = 1\n    else:\n        real_values = 2\n        \n    \n    if predicted_values == \"setosa\":\n        predicted_values = 0\n    elif predicted_values == \"versicolor\":\n        predicted_values = 1\n    else:\n        predicted_values = 2    \n    \n    regression_df.iloc[i,0] = real_values\n    regression_df.iloc[i,1] = predicted_values\n\n\nregression_df = regression_df.dropna() #exclude any rows with missing data\nprint(regression_df)","5ce0f30a":"df1 = regression_df.replace(to_replace =0, value =\"setosa\")","8c5460ce":"df1","7b3a802c":"df2 = df1.replace(to_replace =1, value =\"versicolor\")","376fa5b1":"df2","0d8f3889":"df3 = df2.replace(to_replace =2, value =\"virginica\")","39e17530":"df3","c0433577":"df3.to_csv('predict_species.csv', index = True)","c3656cc9":"from sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred)\ncm","f904a3be":"accuracy_score(y_test, y_pred)","454aab04":"Printing Original_species and Predicted_species in a new csv file:","a8eb189b":"Creating K-NN classifier model and training the model:","079000cc":"Replacing 0 with \"setosa\" and storing the updated dataframe into dataframe df1:","937deab8":"Predicting species:","d26d47e5":"Making a confusion matrix:","95f7d88f":"Importing libraries:","db3e26e3":"Replacing 2 with \"virginica\" and storing the updated dataframe into dataframe df3:","f8647a6c":"Calculating accuracy_score:","835aa1d6":"Importing dataset, assigning independent variable x and dependent variable y:","da8850e9":"Replacing 1 with \"versicolor\" and storing the updated dataframe into dataframe df2:","e9505e83":"Representing setosa with 0, versicolor with 1 and virginica with 2 for coding convenience: ","95b589fb":"Creating new dataframe to store Original_species and Predicted_species:","d3164cab":"Splitting dataset into training set and test set:","c1446d7c":"# Introduction:\nIn this project, I have predicted the classes for each Iris flower. The independent variables are sepal_length, sepal_width, petal_length, petal_width and the variable to be predicted is species. I have used K-Nearest Neighbor classifier for this project and this model has produced great results. I have also built a simple confusion matrix and calculated the accuracy score in the end. The K-NN classifier usage has generated 97% accurate results. The original species and the predicted species are shown in predict_species.csv file at the end."}}