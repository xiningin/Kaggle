{"cell_type":{"7cc00cfc":"code","b2157236":"code","500de5aa":"code","401676af":"code","03d4e03f":"code","e236612f":"code","21b71c06":"code","68b437c3":"code","6ef60481":"code","3b8788d9":"code","5953b6bb":"code","f54630f3":"code","43f92494":"code","29ca7d77":"code","52299433":"code","2a238a19":"code","2c0367a9":"code","5324f76e":"code","cf34a2c0":"code","156f3a91":"code","21654f0e":"code","13be24f9":"code","76b1325b":"code","fa094808":"code","cd09d1b0":"code","a6eb6f76":"code","e74fa5e7":"code","f9a95f90":"code","c66c85dc":"code","ed3d2ee2":"code","4a95dfb5":"code","d09e5a22":"code","2ad2911f":"code","80504ac9":"code","5ceb83a6":"code","c6983510":"code","51ad14bc":"markdown","960217d7":"markdown","5c250960":"markdown","93a3fb07":"markdown","accd14aa":"markdown","900ed182":"markdown","96c786c1":"markdown","416d9ada":"markdown","5cf83a38":"markdown","2a74ddce":"markdown","be6370b0":"markdown","9a9e0eb2":"markdown","6e683f65":"markdown","0d701d23":"markdown","1179ae64":"markdown","dd4e44b0":"markdown","2e31e118":"markdown","0d1e1fbe":"markdown","609c85f8":"markdown","0ab18070":"markdown","2ea550ba":"markdown","10035e1d":"markdown","3b3c4c7c":"markdown","792d49cc":"markdown","e5ae2644":"markdown","c560b06f":"markdown","6221cb9f":"markdown","e6d5da7f":"markdown","a5d219c6":"markdown","fcc48160":"markdown","8a40058d":"markdown","e05f9ad7":"markdown","b71053ea":"markdown","4486202c":"markdown","e115fab4":"markdown"},"source":{"7cc00cfc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b2157236":"vehicle_data = pd.read_csv(\"\/kaggle\/input\/sri-lanka-vehicle-prices-dataset\/vehicle_data.csv\")","500de5aa":"vehicle_data.head()","401676af":"vehicle_data.shape","03d4e03f":"vehicle_data.dtypes","e236612f":"plt.figure(figsize = (10,6))\nplt.title(\"Missing values in Each Column\\n\", size = 15)\nsns.heatmap(vehicle_data.isnull(), yticklabels=False, cbar=False);","21b71c06":"for col in ['Edition', 'Body']:\n    missing_percent = np.round((vehicle_data[col].isnull().sum() * 100) \/ vehicle_data.shape[0], 3)\n    print(f'{missing_percent} % data is miss in `{col}` column')","68b437c3":"vehicle_data['Edition'].fillna(vehicle_data['Edition'].mode()[0], inplace = True)\nvehicle_data['Body'].fillna(vehicle_data['Body'].mode()[0], inplace = True)","6ef60481":"vehicle_data.isnull().sum()","3b8788d9":"vehicle_data.rename({\"Price\":\"Price (Rs)\"}, axis = 1, inplace = True)","5953b6bb":"vehicle_data['Price (Rs)'] = vehicle_data['Price (Rs)'].str.replace('Rs', '').str.replace(',', '').astype(float)","f54630f3":"vehicle_data.rename({\"Capacity\" : \"Capacity(cc)\"}, axis = 1, inplace = True)","43f92494":"vehicle_data['Capacity(cc)'] = vehicle_data['Capacity(cc)'].str.replace('cc', '').str.replace(',', '').astype('int64')","29ca7d77":"vehicle_data.rename({\"Mileage\" : \"Mileage(km)\"}, axis = 1, inplace = True)","52299433":"vehicle_data['Mileage(km)'] = vehicle_data['Mileage(km)'].str.replace('km', '').str.replace(',', '').astype('int64')","2a238a19":"vehicle_data.head()","2c0367a9":"vehicle_data['Title'] = vehicle_data['Brand'] + \" \"+ vehicle_data['Model']","5324f76e":"vehicle_data['published_date'] = pd.to_datetime(vehicle_data['published_date'])","cf34a2c0":"# for year\nvehicle_data['published_year'] = pd.DatetimeIndex(vehicle_data['published_date']).year\n\n# for month\nvehicle_data['published_month'] = pd.DatetimeIndex(vehicle_data['published_date']).month\n\n# for day\nvehicle_data['published_day'] = pd.DatetimeIndex(vehicle_data['published_date']).day","156f3a91":"vehicle_data.columns","21654f0e":"vehicle_data.drop([\"Sub_title\",'Description', 'published_date'], axis = 1, inplace = True)","13be24f9":"vehicle_data.describe().T.style.bar(subset=['mean'], color='#205ff2')\\\n                            .background_gradient(subset=['std'], cmap='Reds')\\\n                            .background_gradient(subset=['50%'], cmap='coolwarm')","76b1325b":"vehicle_data.head()","fa094808":"def clickable(path):        \n    final_url = os.path.basename(path)\n      \n    # convert the url into link\n    return f'<a href=\"{path}\">{final_url}<\/a>'","cd09d1b0":"top_highest_price = vehicle_data.sort_values(\"Price (Rs)\", ascending = False).reset_index().head(20)","a6eb6f76":"px.scatter(top_highest_price, x = \"Title\", y = \"Price (Rs)\",\n           size = \"Price (Rs)\",\n           hover_data=['Condition', 'Transmission', 'Fuel','Price (Rs)'],\n           color = \"Transmission\")","e74fa5e7":"top_highest_price[['Title', 'Price (Rs)','Capacity(cc)', 'Post_URL']].style.format({'Post_URL' : clickable})","f9a95f90":"lowest_price_vehicle = vehicle_data.sort_values(\"Price (Rs)\", ascending = True).reset_index().head(20)","c66c85dc":"px.scatter(lowest_price_vehicle, x = \"Title\", y = \"Price (Rs)\",\n           size = \"Price (Rs)\",\n           hover_data=['Condition', 'Transmission', 'Fuel','Price (Rs)'],\n           color = \"Transmission\")","ed3d2ee2":"lowest_price_vehicle[['Title', 'Price (Rs)','Capacity(cc)', 'Post_URL']].style.format({'Post_URL' : clickable})","4a95dfb5":"px.histogram(vehicle_data, x='Condition', barmode='group', color=\"Transmission\",)","d09e5a22":"px.histogram(vehicle_data, x='Fuel', barmode='group', color=\"Transmission\",)","2ad2911f":"desending_price = vehicle_data.sort_values(\"Price (Rs)\", ascending=False).reset_index().drop('index', axis = 1)","80504ac9":"ascending_price = vehicle_data.sort_values(\"Price (Rs)\", ascending=True).reset_index().drop('index', axis = 1)","5ceb83a6":"plt.figure(figsize=(20,8))\n\nplt.title(\"Difference in Manufactured Year & Selling Year of Top 100 Expensive Vehicles\\n\", size = 22)\n\nplt.plot(desending_price['Year'].head(100), marker = 'o', label = \"Manufactured Year\", markerfacecolor = 'red')\nplt.plot(desending_price['published_year'].head(100), marker = 'o', markersize=4, label = \"Selling Year\", markerfacecolor = 'red')\n\nplt.ylabel(\"Year\")\n\nplt.grid()\nplt.legend(loc = 5);","c6983510":"plt.figure(figsize=(20,8))\n\nplt.title(\"Difference in Manufactured Year & Selling Year of Top 100 Inexpensive Vehicles\\n\", size = 22)\n\nplt.plot(ascending_price['Year'].head(100), marker = 'o', label = \"Manufactured Year\", markerfacecolor = 'red')\nplt.plot(ascending_price['published_year'].head(100), marker = 'o', markersize=4, label = \"Selling Year\", markerfacecolor = 'red')\n\nplt.ylabel(\"Year\")\nplt.grid()\nplt.legend(loc = 4);\n","51ad14bc":"<a id=\"6\"><\/a>\n# <p style=\"background-color:#0388fc;font-family:newtimeroman;color:#FFF9ED;font-size:150%;text-align:center;border-radius:10px 10px;\">\ud83d\udcc8 Checking statistical description of data<\/p>","960217d7":"<a id=\"5.5\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Convert dtype of Milage<\/p>","5c250960":"<a id=\"5.6\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Shorten Title<\/p>","93a3fb07":"**So most of the vehicles are in Used condition and Transmission type is Automatic** ","accd14aa":"**`Mitsubishi Montero` is more expensive then other vehicle (I consider it as outlier). Also from top 20 expensive vehicles most of them are `Land Rover Range Rover`**","900ed182":"### **Click on the link to go to original post**","96c786c1":"<a id=\"5.4\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Convert dtype of Capacity<\/p>","416d9ada":"<a id=\"8.5\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Analyze Year and published_year<\/p>","5cf83a38":"![vehicle_image](https:\/\/www.thebangoraye.com\/wp-content\/uploads\/2017\/09\/bcfc-15.jpg)","2a74ddce":"<a id=\"2\"><\/a>\n# <p style=\"background-color:#0388fc;font-family:newtimeroman;color:#FFF9ED;font-size:150%;text-align:center;border-radius:10px 10px;\"> Reading Data<\/p>","be6370b0":"<a id=\"5.8\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Seperate year, month, day from published_date<\/p>","9a9e0eb2":"<a id=\"8\"><\/a>\n# <p style=\"background-color:#0388fc;font-family:newtimeroman;color:#FFF9ED;font-size:150%;text-align:center;border-radius:10px 10px;\">\ud83d\udcca Visualization<\/p>","6e683f65":"<a id=\"5.2\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Imputing missing values<\/p>","0d701d23":"#### **All missing values are now fixed**","1179ae64":"<a id=\"8.3\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Analyze vehicle_data, Condition wise<\/p>","dd4e44b0":"<a id=\"5.9\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Dropping unnecessary features<\/p>","2e31e118":"# <p style=\"background-color:#0388fc;font-family:newtimeroman;color:#FFF9ED;font-size:130%;text-align:center;border-radius:10px 10px;\">Published year of all the vehicle is 2021, Some vehicles are manufactured before 1960. And those are very rare... <\/p>","0d1e1fbe":"<a id=\"8.1\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Analyze top 20 vehicle with highest Price<\/p>","609c85f8":"<a id='top'><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<p style=\"background-color:#0388fc;font-family:newtimeroman;color:#FFF9ED;font-size:150%;text-align:center;border-radius:10px 10px;\">\ud83d\udccb TABLE OF CONTENTS<\/p>   \n    \n* [1. IMPORTING LIBRARIES](#1)\n    \n* [2. READING DATA](#2)\n    \n* [3. DISPLAYING TOP 5 RECORDS](#3)\n    \n* [4. META INFORMATION OF DATAFRAME](#4)\n    \n    * [4.1- SHAPE OF DATAFRAME](#4.1)\n    \n    * [4.2- DATA TYPE OF EACH FEATURE](#4.2)\n    \n    \n* [5. DATA CLEANING](#5) \n    \n    * [5.1- FINDING NaN VALUES](#5.1) \n    \n    * [5.2- IMPUTING MISSING VALUES](#5.2)\n    \n    * [5.3- FIXING DATATYPE IN PRICE FEATURE](#5.3) \n                \n    * [5.4- FIXING DATATYPE IN CAPACITY FEATURE](#5.4)\n    \n    * [5.5- FIXING DATATYPE IN MILAGE FEATURE](#5.5)\n    \n    * [5.6- SHORTENING TITLE](#5.6)\n    \n    * [5.7- FIXING DATATYPE OF PUBLISHED_DATE](#5.7)\n    \n    * [5.8- SEPERATE YEAR, MONTH, DAY FROM PUBLISHED_DATE](#5.8)\n    \n    * [5.9- DROPPING UNNECESSARY FEATURES](#5.9)\n        \n    \n      \n* [6. STATISTICAL INFORMATION OF DATA](#6)\n    \n* [7. DECLEARING FUNCTION THAT MAKES LINK TO CLICKABLE](#7)\n    \n* [8. VISUALIZATION](#8)\n    \n    * [8.1- ANALYZE TOP 20 VEHICLE WITH HIGHEST PRICE](#8.1)\n    \n    * [8.2- ANALYZE TOP 20 VEHICLE WITH LOWEST PRICE](#8.2)\n    \n    * [8.3- ANALYZING CONDITION OF VEHICLE_DATA](#8.3)\n    \n    * [8.4- ANALYZE DATA BY FUEL TYPE](#8.4) \n    \n    * [8.5- ANALYZE VEHICLE'S MANUFACTURED YEAR AND VEHICLE'S SELLING YEAR](#8.5)\n    \n","0ab18070":"<a id=\"8.2\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Analyze top 20 vehicle with lowest Price<\/p>","2ea550ba":"### **Click on the link to go to original post**","10035e1d":"**Price(Rs) has highest standard deviation among other features**\n\n","3b3c4c7c":"<a id=\"4\"><\/a>\n# <p style=\"background-color:#0388fc;font-family:newtimeroman;color:#FFF9ED;font-size:150%;text-align:center;border-radius:10px 10px;\">\ud83d\udcdd Meta information about dataframe<\/p>","792d49cc":"<center> <button class=\"button button1\"><a href=\"#top\" aria-pressed=\"true\"  style=\"color:red\" data-toggle=\"popover\" title=\"go to table of contents\"><b>GO TO TOP<\/b><\/a><\/button><\/center>","e5ae2644":"<a id=\"5.1\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Finding NaN values<\/p>","c560b06f":"<a id=\"5\"><\/a>\n# <p style=\"background-color:#0388fc;font-family:newtimeroman;color:#FFF9ED;font-size:150%;text-align:center;border-radius:10px 10px;\">\ud83e\uddf9 Data Cleaning<\/p>","6221cb9f":"## **Edition** and **Body** has missing values","e6d5da7f":"<a id=\"1\"><\/a>\n# <p style=\"background-color:#0388fc;font-family:newtimeroman;color:#FFF9ED;font-size:150%;text-align:center;border-radius:10px 10px;\">\ud83d\udce5 Importing Libraries<\/p>","a5d219c6":"<a id=\"4.2\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Datatype of Each Column<\/p>","fcc48160":"<a id=\"5.3\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Convert dtype of Price feature<\/p>","8a40058d":"<a id=\"3\"><\/a>\n# <p style=\"background-color:#0388fc;font-family:newtimeroman;color:#FFF9ED;font-size:150%;text-align:center;border-radius:10px 10px;\">Displaying top 5 records<\/p>","e05f9ad7":"<a id=\"7\"><\/a>\n# <p style=\"background-color:#0388fc;font-family:newtimeroman;color:#FFF9ED;font-size:150%;text-align:center;border-radius:10px 10px;\">Declaring a function that convert links to clickable<\/p>","b71053ea":"<a id=\"5.7\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Converting type of published_date feature to datetime<\/p>","4486202c":"<a id=\"4.1\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Shape of dataframe<\/p>","e115fab4":"<a id=\"8.4\"><\/a>\n<p style=\"background-color:#5cb3ff;font-family:newtimeroman;color:#FFF9ED;font-size:120%;text-align:center;border-radius:20px 80px;\">Analyze data by Fuel type<\/p>"}}