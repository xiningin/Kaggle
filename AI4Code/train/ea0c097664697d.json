{"cell_type":{"67e7bfd0":"code","f43fea6e":"code","5d437dd0":"code","ba3188c2":"code","8e632687":"code","6e71d278":"code","4f5cde75":"code","45f281dd":"code","cea207bb":"code","979c4807":"code","15938e00":"code","0f8a2593":"code","27bf4cea":"code","84e1867b":"code","e60c7a32":"code","c8167e41":"code","c5870719":"code","2efe4161":"code","64535521":"code","7ca5607d":"code","19a86f93":"code","4287f83d":"code","69945068":"code","64706c8c":"code","450faed5":"markdown","1b0133ca":"markdown","b249e10a":"markdown","18e0cba2":"markdown","71c42933":"markdown","b288045b":"markdown","cd61dc9e":"markdown","3cfba406":"markdown","4e2af9b6":"markdown","811c8852":"markdown","c27cce0e":"markdown","59efe9d3":"markdown"},"source":{"67e7bfd0":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f43fea6e":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndata = pd.read_csv(\"\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv\")\ndata","5d437dd0":"data = data.drop([\"race\/ethnicity\",\"parental level of education\",\"lunch\",\"test preparation course\"],axis=1) # axis = 1 => for columns\ndata","ba3188c2":"# If there is a line with a null value, let's delete it.\ndata = data.dropna()","8e632687":"data.info()","6e71d278":"data.describe().T","4f5cde75":"# male = 0 | female = 1\nprint(\"gender: \", data.gender.value_counts())\ndata[\"gender\"] = [ 0 if each == \"male\" else 1 for each in data.gender]\ndata","45f281dd":"plt.scatter(data[data[\"gender\"] == 1][\"writing score\"],data[data[\"gender\"] == 1][\"reading score\"],color=\"blue\",label=\"famale\",alpha= 0.3)\nplt.scatter(data[data[\"gender\"] == 0][\"writing score\"],data[data[\"gender\"] == 0][\"reading score\"],color=\"red\",label=\"male\",alpha= 0.3)\nplt.xlabel(\"radius_mean\")\nplt.ylabel(\"texture_mean\")\nplt.legend()","cea207bb":"df = data.copy()","979c4807":"from IPython.display import Image\nImage(url=\"https:\/\/i.ibb.co\/KL2vG7W\/knn2.jpg\")","15938e00":"y = data.gender.values\nx_data = data.drop([\"gender\"],axis=1)\nx_data","0f8a2593":"x = (x_data-np.min(x_data))\/(np.max(x_data)-np.min(x_data))\nx","27bf4cea":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=42)\n\nprint(\"x_train\",x_train.shape)\nprint(\"x_test\",x_test.shape)\nprint(\"y_train\",y_train.shape)\nprint(\"y_test\",y_test.shape)","84e1867b":"from sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(x_train,y_train)\n\nprediction = knn.predict(x_test)","e60c7a32":"print(\"{} nn score: {} \".format(5,knn.score(x_test,y_test)*100))","c8167e41":"score_list = []\n\nfor each in range(20,40):\n    knn2 = KNeighborsClassifier(n_neighbors=each)\n    knn2.fit(x_train,y_train)\n    score_list.append(knn2.score(x_test,y_test))\n    \nplt.plot(range(20,40),score_list)\nplt.xlabel(\"k values\")\nplt.ylabel(\"accuracy\")\nplt.show()","c5870719":"knn = KNeighborsClassifier(n_neighbors=30)\nknn.fit(x_train,y_train)\nprediction = knn.predict(x_test)\n\nprint(\"{} KNN Score: {} \".format(30,knn.score(x_test,y_test)*100))","2efe4161":"data = df\ndata","64535521":"y = data.gender.values\nx_data = data.drop([\"gender\"],axis=1)\n\n# normalization\nx = (x_data-np.min(x_data))\/(np.max(x_data)-np.min(x_data))\n\n# train test split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=1)","7ca5607d":"from sklearn.svm import SVC\n\nsvm = SVC(random_state=42)\nsvm.fit(x_train,y_train)\n\nprint(\"Accuracy of SVM Algo: \", svm.score(x_test,y_test)*100)","19a86f93":"Image(url=\"https:\/\/i.ibb.co\/YpP7JY1\/1-39-U1-Ln3t-Sd-Fqsf-Qy6ndx-OA.png\")","4287f83d":"data = df\ndata","69945068":"y = data.gender.values\nx_data = data.drop([\"gender\"],axis=1)\n\n# normalization\nx = (x_data-np.min(x_data))\/(np.max(x_data)-np.min(x_data))\n\n# train test split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=1)","64706c8c":"from sklearn.naive_bayes import GaussianNB\n\nnb = GaussianNB()\nnb.fit(x_train,y_train)\nprint(\"Accuracy of Naive Bayes Algo:\",nb.score(x_test,y_test)*100)","450faed5":"# Support Vector Machine (SVM) <a id=\"svm\"><\/a>\n> * A support vector machine (SVM) is a supervised machine learning model that uses classification algorithms for two-group classification problems. After giving an SVM model sets of labeled training data for each category, they're able to categorize new text. So you're working on a text classification problem.","1b0133ca":"# KNN Algorithm <a id=\"knn\"><\/a>\n> * In pattern recognition, the k-nearest neighbors algorithm is a non-parametric method used for classification and regression. In both cases, the input consists of the k closest training examples in the feature space. <br>\n> * You can read [this article](https:\/\/towardsdatascience.com\/machine-learning-basics-with-the-k-nearest-neighbors-algorithm-6a6e71d01761) for more information.\n","b249e10a":"## Data Editing <a id=\"data_editing\"><\/a>","18e0cba2":"> **Since I am guessing, I equate girls in the gender column to 0 and boys to 1.**","71c42933":"## Find K Value <a id=\"knn_find_k\"><\/a>\n> We can follow a method like the one below to find the appropriate n_neighbors value.","b288045b":"> **Here I will make the forecast based on the grades they received. Therefore, I do not need any data other than notes. That's why I delete those columns.**","cd61dc9e":"# Naive Bayes Classification <a id=\"nbc\"><\/a>","3cfba406":"# Prediction Of Male - Female According To The Notes\n1. [Data Editing](#data_editing)\n2. [KNN Algorithm](#knn)\n    - [Train Test Split](#knn_train_test_split)\n    - [KNN Model](#knn_model)\n    - [Find K Value](#knn_find_k)\n    - [Accuracy](#knn_accuracy)\n3. [Support Vector Machine (SVM)](#svm)\n4. [Naive Bayes Classification](#nbc)","4e2af9b6":"## KNN MODEL <a id=\"knn_model\"><\/a>","811c8852":"## Train Test Split <a id=\"knn_train_test_split\"><\/a>","c27cce0e":"As can be seen, the max point is the value 30. So the most optimal value is 30.","59efe9d3":"## KNN Algorithm Accuracy <a id=\"knn_accuracy\"><\/a>"}}