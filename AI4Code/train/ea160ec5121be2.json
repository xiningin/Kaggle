{"cell_type":{"84c5b343":"code","9a035e5f":"code","e64e87bc":"code","52f5bebb":"code","8065411d":"code","adb5892d":"code","d55adf1b":"code","43aa1231":"code","eb07b888":"code","c0960f7f":"code","96a26bef":"code","4e3061d6":"code","333093f9":"code","ed0aa012":"code","19473543":"code","8d2e1355":"code","8e53e8e0":"markdown","db7491d7":"markdown","daeee730":"markdown","d35e9d04":"markdown","70eaa6ca":"markdown","daa4fb27":"markdown","6aaa0582":"markdown","7b6f94ca":"markdown"},"source":{"84c5b343":"# Immport the dependencies \n\nimport matplotlib.pyplot as plt \nimport seaborn as sb\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9a035e5f":"url='\/kaggle\/input\/iris\/Iris.csv'\n\niris=pd.read_csv(url)","e64e87bc":"iris.head()","52f5bebb":"iris.info()","8065411d":"iris.describe()","adb5892d":"sb.pairplot(data=iris,hue='Species',palette='Dark2')","d55adf1b":"setosa=iris[iris.Species=='Iris-setosa']\n\nsb.kdeplot(setosa['SepalLengthCm'],setosa['SepalWidthCm'],cmap=\"plasma\", shade=True, shade_lowest=False)","43aa1231":"from sklearn.model_selection import train_test_split\n\nX = iris.drop('Species',axis=1)\nprint(X.shape)\ny=iris['Species']\nprint(y.shape)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)","eb07b888":"from sklearn.neighbors import KNeighborsClassifier\n#let's set the k(n_neighbors) value to 1 first and see the results \nknn=KNeighborsClassifier(n_neighbors=1)\n# Train\nknn.fit(X_train,y_train)\n# Predict \npredictions= knn.predict(X_test)","c0960f7f":"from sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nprint(confusion_matrix(y_test,predictions))\nprint('\\n')\nprint(classification_report(y_test,predictions))\nprint('\\n')\nprint('accuracy score :',accuracy_score(y_test,predictions))","96a26bef":"# let's parse a range of k values to see what a good value to choose \n# \nerror_rate = []\n\nfor i in range(1,40):\n    \n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    pred_i = knn.predict(X_test)\n    error_rate.append(np.mean(pred_i != y_test))","4e3061d6":"# Let's plot  the results \nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',\n         markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K Value')\nplt.ylabel('Error Rate')","333093f9":"#k=3\nknn=KNeighborsClassifier(n_neighbors=3)\n# Train\nknn.fit(X_train,y_train)\n# Predict \npredictions= knn.predict(X_test)","ed0aa012":"#show the results \nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nprint(confusion_matrix(y_test,predictions))\nprint('\\n')\nprint(classification_report(y_test,predictions))\nprint('\\n')\nprint('Accuracy score :',accuracy_score(y_test,predictions))","19473543":"# Submit the results \nsubmission = pd.DataFrame({'Iris Id':X_test.Id , 'Species':predictions})\nsubmission.to_csv('submission.csv', index=False)\nprint(\" Submission  successfully saved!\")\n","8d2e1355":"print(submission)","8e53e8e0":"** As you see above, the results are inaccurate. So which  value to choose for k to make our model more accurate ?!\n **","db7491d7":"**Submit the test results **","daeee730":"**Data visulisation : \nIn order to show some correlations we will visualise the whole iris dataset as seaborn pairplot **\n","d35e9d04":"> **Train  and Predict our model with a randomly chosen k value **","70eaa6ca":"**Train-Test split **","daa4fb27":"**From the plot above , there are many k values  that minimize the error rate . Now let's re-train our model by choosing  new value k=3**","6aaa0582":"**Let's show the results **","7b6f94ca":"**Let's show a kde plot of sepal length versus sepal width for setosa species of flower.**"}}