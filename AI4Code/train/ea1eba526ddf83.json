{"cell_type":{"480a23b9":"code","e8a344d3":"code","8031dec3":"code","4261385a":"code","a52158f2":"code","d075cb92":"code","d716d56e":"code","ddabe328":"code","30555aa0":"code","46f0e61a":"code","a4c8f24d":"code","cfde63c4":"code","817cf8b4":"code","bb564b64":"code","771a52d8":"code","ce5047aa":"code","670c4686":"code","14f96b93":"code","5c356039":"code","c46001c4":"markdown","6633f18e":"markdown","8fb46de4":"markdown","160aa70c":"markdown","ee66b5fb":"markdown","19a7fe4a":"markdown","df00aebb":"markdown"},"source":{"480a23b9":"!pip install tslearn\nimport tslearn # This module uses sklearn but has API for time series data\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom tslearn.clustering import TimeSeriesKMeans \nfrom tslearn.neural_network import TimeSeriesMLPClassifier","e8a344d3":"df = pd.read_csv(\"..\/input\/worldwide-gdp-history-19602016\/gdp_data.csv\")\ndf[\"time\"] = pd.to_datetime(df.Year, format=\"%Y\")\ndf = df.fillna(0)","8031dec3":"countries = list(df.Country.unique())\ntrain_countries = countries[:50]\ntest_countries = countries[50:60]\ntrain_df = df[df.Country.isin(train_countries)]\ntest_df = df[df.Country.isin(test_countries)]","4261385a":"train_pivot = train_df.reset_index().pivot_table(index='time', columns='Country', values='GDP-Growth', aggfunc = 'sum')\ntrain_pivot = train_pivot.T\ntest_pivot = test_df.reset_index().pivot_table(index='time', columns='Country', values='GDP-Growth', aggfunc = 'sum')\ntest_pivot = test_pivot.T\ntest_pivot.head()","a52158f2":"df_train = np.array(train_pivot).reshape(train_pivot.shape[0],train_pivot.shape[1],1)\ndf_test = np.array(test_pivot).reshape(test_pivot.shape[0],test_pivot.shape[1],1)\nsz = df_train.shape[1]\n\n# DBA-k-means\nprint(\"DBA k-means\")\ndba_km = TimeSeriesKMeans(n_clusters=4,\n                          n_init=2,\n                          metric=\"softdtw\",\n                          verbose=True,\n                          random_state=0)\ny_pred = dba_km.fit_predict(df_train)\nlabels = dict(zip(df_pivot.index, y_pred))\n\n","d075cb92":"#Countries in the first cluster\nlist(train_pivot[y_pred==0].index)","d716d56e":"#Countries in the second cluster\nlist(train_pivot[y_pred==1].index)","ddabe328":"#Countries in the third cluster\nlist(train_pivot[y_pred==2].index)","30555aa0":"#Countries in the fourth cluster\nlist(train_pivot[y_pred==3].index)","46f0e61a":"plt.figure(figsize=(18,12))\nsns.lineplot(data=pd.DataFrame(train_pivot[y_pred==0].stack()).reset_index(), x=\"time\", y=0, hue=\"Country\")","a4c8f24d":"plt.figure(figsize=(18,12))\nsns.lineplot(data=pd.DataFrame(train_pivot[y_pred==1].stack()).reset_index(), x=\"time\", y=0, hue=\"Country\")","cfde63c4":"plt.figure(figsize=(18,12))\nsns.lineplot(data=pd.DataFrame(train_pivot[y_pred==2].stack()).reset_index(), x=\"time\", y=0, hue=\"Country\")","817cf8b4":"plt.figure(figsize=(18,12))\nsns.lineplot(data=pd.DataFrame(train_pivot[y_pred==3].stack()).reset_index(), x=\"time\", y=0, hue=\"Country\")","bb564b64":"mlp = TimeSeriesMLPClassifier(hidden_layer_sizes=(64, 64), random_state=0)\nmlp.fit(df_train, y_pred)\npredictions = mlp.predict(df_test)","771a52d8":"predictions","ce5047aa":"if (predictions==0).any():\n    plt.figure(figsize=(18,12))\n    sns.lineplot(data=pd.DataFrame(test_pivot[predictions==0].stack()).reset_index(), x=\"time\", y=0, hue=\"Country\")","670c4686":"if (predictions==1).any():\n    plt.figure(figsize=(18,12))\n    sns.lineplot(data=pd.DataFrame(test_pivot[predictions==1].stack()).reset_index(), x=\"time\", y=0, hue=\"Country\")","14f96b93":"if (predictions==2).any():\n    plt.figure(figsize=(18,12))\n    sns.lineplot(data=pd.DataFrame(test_pivot[predictions==2].stack()).reset_index(), x=\"time\", y=0, hue=\"Country\")","5c356039":"if (predictions==3).any():\n    plt.figure(figsize=(18,12))\n    sns.lineplot(data=pd.DataFrame(test_pivot[predictions==3].stack()).reset_index(), x=\"time\", y=0, hue=\"Country\")","c46001c4":"# Supervised Clustering With MLPClassifier","6633f18e":"I get the data and add a \"time\" column for timestamp.","8fb46de4":"I choose some countries for train and test. First I did KMeans clustering for train countries. This is an example for unsupervised clustering. Then I tried to train a classifier with this data and clusters and use trained classifier for test data. This is for supervised clustering.","160aa70c":"Countries clustered with KMeans algorithm. It uses soft DTW for distance. It is better than euclidean distance for this data. There is 4 clusters. ","ee66b5fb":"# World-Wide GDP History Data Country Clustering\n\nI clustered countries by their historical GDP data. This was a project for learning clustering methods for time series data. I used DTW(Dynamic Time Warping) to calculate distance between metrics and KMeans to cluster. ","19a7fe4a":"# Unsupervised Clustering with KMeans","df00aebb":"This time MLPClassifier fits labels from KMeans sections and predicts test countries. "}}