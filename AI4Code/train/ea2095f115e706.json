{"cell_type":{"a07a3c56":"code","c7f31c51":"code","3d97da16":"code","0c2b2677":"code","0c9c3db8":"code","d060f012":"code","448b0817":"code","2239271b":"code","c4ffd0a4":"code","27c0181d":"code","c986fb8a":"code","8c3a2dee":"code","91d1e280":"code","f9d76b0a":"code","cc90816d":"code","d59a0874":"code","166af617":"code","9f162a44":"code","181583e7":"code","11ed0287":"code","fd8c0f11":"code","2503a368":"code","a7000f8d":"markdown","932f494d":"markdown","7c51c292":"markdown","a3bd6ae9":"markdown","2dbd3f7c":"markdown","92f62d28":"markdown","979e1d44":"markdown","05d3408f":"markdown"},"source":{"a07a3c56":"import functools\nimport os\n\nfrom matplotlib import gridspec\nimport matplotlib.pylab as plt\nimport numpy as np\nimport tensorflow as tf\nimport tensorflow_hub as hub","c7f31c51":"print(\"TF Version: \", tf.__version__)\nprint(\"TF-Hub version: \", hub.__version__)\nprint(\"Eager mode enabled: \", tf.executing_eagerly())\nprint(\"GPU available: \", tf.test.is_gpu_available())","3d97da16":"def crop_center(image):\n  \"\"\"Returns a cropped square image.\"\"\"\n  shape = image.shape\n  new_shape = min(shape[1], shape[2])\n  offset_y = max(shape[1] - shape[2], 0) \/\/ 2\n  offset_x = max(shape[2] - shape[1], 0) \/\/ 2\n  image = tf.image.crop_to_bounding_box(\n      image, offset_y, offset_x, new_shape, new_shape)\n  return image\n\n@functools.lru_cache(maxsize=None)\ndef load_image(image_url, image_size=(256, 256), preserve_aspect_ratio=True):\n  \"\"\"Loads and preprocesses images.\"\"\"\n  # Cache image file locally.\n  image_path = tf.keras.utils.get_file(os.path.basename(image_url)[-128:], image_url)\n  # Load and convert to float32 numpy array, add batch dimension, and normalize to range [0, 1].\n  img = plt.imread(image_path).astype(np.float32)[np.newaxis, ...]\n  if img.max() > 1.0:\n    img = img \/ 255.\n  if len(img.shape) == 3:\n    img = tf.stack([img, img, img], axis=-1)\n  img = crop_center(img)\n  img = tf.image.resize(img, image_size, preserve_aspect_ratio=True)\n  return img\n\ndef show_n(images, titles=('',)):\n  n = len(images)\n  image_sizes = [image.shape[1] for image in images]\n  w = (image_sizes[0] * 6) \/\/ 320\n  plt.figure(figsize=(w  * n, w))\n  gs = gridspec.GridSpec(1, n, width_ratios=image_sizes)\n  for i in range(n):\n    plt.subplot(gs[i])\n    plt.imshow(images[i][0], aspect='equal')\n    plt.axis('off')\n    plt.title(titles[i] if len(titles) > i else '')\n  plt.show()","0c2b2677":"output_image_size = 384 \ncontent_img_size = (output_image_size, output_image_size)\nstyle_img_size = (256, 256)","0c9c3db8":"content_image_url = 'https:\/\/d16yj43vx3i1f6.cloudfront.net\/uploads\/2019\/10\/GettyImages-803849852.jpg'\nstyle_image_url = 'https:\/\/vertexpages.com\/wp-content\/uploads\/2019\/10\/farm.jpg'","d060f012":"content_image = load_image(content_image_url, content_img_size)\nstyle_image = load_image(style_image_url, style_img_size)","448b0817":"style_image = tf.nn.avg_pool(style_image, ksize=[3,3], strides=[1,1], padding='SAME')\nshow_n([content_image, style_image], ['Content image', 'Style image'])","2239271b":"import time\nstart_time = time.time()","c4ffd0a4":"hub_handle = 'https:\/\/tfhub.dev\/google\/magenta\/arbitrary-image-stylization-v1-256\/2'\nhub_module = hub.load(hub_handle)","27c0181d":"outputs = hub_module(content_image, style_image)\nstylized_image = outputs[0]","c986fb8a":"# Stylize content image with given style image.\n# This is pretty fast within a few milliseconds on a GPU.\n\noutputs = hub_module(tf.constant(content_image), tf.constant(style_image))\nstylized_image = outputs[0]","8c3a2dee":"# Visualize input images and the generated stylized image.\n\nshow_n([content_image, style_image, stylized_image], titles=['Original content image', 'Style image', 'Stylized image'])","91d1e280":"end_time = time.time()\nprint('Time Taken = ', end_time-start_time)","f9d76b0a":"content_image_url = 'https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/1\/1d\/Taj_Mahal_%28Edited%29.jpeg\/1920px-Taj_Mahal_%28Edited%29.jpeg'\nstyle_image_url = 'https:\/\/joeburciaga.files.wordpress.com\/2013\/02\/tsunami-2698.jpg'","cc90816d":"content_image = load_image(content_image_url, content_img_size)\nstyle_image = load_image(style_image_url, style_img_size)","d59a0874":"style_image = tf.nn.avg_pool(style_image, ksize=[3,3], strides=[1,1], padding='SAME')\nshow_n([content_image, style_image], ['Content image', 'Style image'])","166af617":"start_time = time.time()","9f162a44":"hub_handle = 'https:\/\/tfhub.dev\/google\/magenta\/arbitrary-image-stylization-v1-256\/2'\nhub_module = hub.load(hub_handle)","181583e7":"outputs = hub_module(content_image, style_image)\nstylized_image = outputs[0]","11ed0287":"# Stylize content image with given style image.\n# This is pretty fast within a few milliseconds on a GPU.\n\noutputs = hub_module(tf.constant(content_image), tf.constant(style_image))\nstylized_image = outputs[0]","fd8c0f11":"# Visualize input images and the generated stylized image.\n\nshow_n([content_image, style_image, stylized_image], titles=['Original content image', 'Style image', 'Stylized image'])","2503a368":"end_time = time.time()\nprint('Time Taken = ', end_time-start_time)","a7000f8d":"Using the below lines of codes the functions to load, format, preprocess and visualize images are defined. content_image, style_image, and stylized_image are expected to be 4-D Tensors with shapes [batch_size, image_height, image_width, 3]","932f494d":"Now, we will define the required sizes for the content images and style images. ","7c51c292":"Repeating the same steps for one more style transfer","a3bd6ae9":"After importing, we will check the versions. tf.executing_eagerly() checks whether the current thread has eager execution enabled.","2dbd3f7c":"Loading the TF Hub Module and performing the style transfer.","92f62d28":"# Neural Style Transfer","979e1d44":"In this notebook, we present a very fast and effective way to neural style transfer in images using the TensorFlow Hub module. The TF-Hub module provides the pre-trained VGG Deep Convolutional Neural Network for style transfer. This approach takes less than four seconds to transfer style to a content image.","05d3408f":"First of all, we will import the required libraries. To use the TensorFlow hub, we will import it as hub from tensorflow_hub. The functool library is used for higher-order functions that act on or return other functions. Make sure to install the if you are working on the local system. "}}