{"cell_type":{"036fba0c":"code","a5548235":"code","b108cb7f":"code","5c45c0a6":"code","29263e73":"code","42018a74":"code","1822f603":"code","e74fdf57":"code","2559129d":"code","e9ddfebf":"code","7d9b6594":"code","66e4f92c":"code","4518a485":"code","8cac4516":"code","ccbf5390":"code","c1e1b0aa":"code","d08153b4":"code","1375b8d3":"code","e17ca704":"code","64d4f60a":"code","697d0f16":"code","366ee41b":"code","83fbeb35":"code","1960bdd5":"code","028f0a36":"code","f064cfd0":"code","801f453c":"code","803b4cd3":"code","c881c48c":"code","c3686965":"code","a2cf5118":"code","7a711e4e":"code","c9d257dc":"code","45876a47":"code","af267734":"code","5e32a7a2":"code","e0306b88":"code","d674acb5":"code","63528089":"code","cfbdce8f":"code","9bb10952":"code","8bc60a4b":"code","255455de":"code","0eaf972c":"code","b0d9068f":"code","b4ec5187":"code","a06d9db8":"code","ec10e248":"code","fabfdfee":"code","e242454a":"code","5faa53f4":"code","ae056628":"code","926c57f2":"code","7ef81ab1":"code","afb9eeea":"code","438b700e":"code","a68641de":"code","167abf31":"code","11399397":"code","dcaaefdd":"code","69173b89":"code","37d2f711":"code","0427a7eb":"code","27b3e37d":"code","49d79d67":"code","1f1d9b40":"code","14eb9207":"code","1e70ac87":"code","f2912c79":"code","f3643ad4":"code","128e8f72":"code","64ea16c8":"code","a82c0b3d":"code","0ebf725d":"code","870d677e":"code","5a6b80bd":"code","4b332eaa":"code","c31ad605":"code","24755d06":"code","805041e0":"code","489fef76":"code","634d71a7":"code","620ab0b7":"code","92bd0032":"code","f1956f38":"code","a0c49972":"code","79a72112":"code","e97f0df7":"code","9cb1c8f4":"code","97638cfd":"code","4583c94c":"code","72154dda":"code","e00192a7":"code","45e844d8":"code","c49d6545":"code","e60474ca":"code","7f3123b8":"code","5ab7a88f":"code","65081690":"code","9dcad780":"code","571fb1c2":"code","7e2e7c20":"code","d5af62ac":"code","eb61b9eb":"code","b2a585f8":"code","c6986280":"code","374c6545":"code","df3a466c":"code","5a465d32":"code","dbbe2de7":"code","cbd4342c":"code","7e2f9d1b":"code","3b098948":"code","e71c52b3":"code","9fe418af":"code","296ea762":"code","28c7d7ca":"code","52b2b2df":"code","22783824":"code","99a4e096":"code","883b9c1e":"code","9c489648":"code","e4e6a008":"code","accd0359":"code","5c45a754":"code","ded3d3b2":"code","4d4979c6":"code","c9a03e52":"code","258532cd":"code","21d25020":"code","7a94b6c0":"code","ec99d82a":"code","6a40a25d":"code","826be5f4":"code","61357ef7":"code","3936e330":"code","3b865fbf":"code","525cb37c":"code","3b4e47e8":"code","aac97979":"code","406e7e59":"code","6db94cad":"code","30b824a9":"code","94c228e3":"code","82258abf":"code","2eb34e18":"code","d3aee7f0":"code","d36f7f0b":"code","551366b3":"code","3bc44c3d":"code","cf25f4f9":"code","d2adad0e":"code","6abddc8c":"code","063f2dae":"code","7fccf196":"code","a8508c47":"code","0d8b7ca9":"code","60713f80":"code","276fdd26":"code","b4695d74":"code","c446c8ca":"code","37b862af":"code","132fc7f2":"code","e220ddd2":"code","619cbfa8":"code","18936510":"code","edaa134d":"code","0b82afc9":"code","2542a480":"code","aa338347":"code","49506b22":"code","8bdd31d9":"code","a18b06b0":"code","ec95f270":"code","085576b1":"code","3c16d37d":"code","c16215b0":"code","d7a77839":"code","230fe9af":"code","92a844d7":"code","43916b34":"code","8f866f8f":"code","f46cbf82":"code","2e42d62e":"code","003b1aa7":"code","d8d4ec48":"code","416be24a":"code","e64fa0ea":"code","ae5c38aa":"code","e36877a7":"code","c1a9cc67":"code","be0446b3":"code","d6cdff5c":"code","9a3ef355":"code","96e980e1":"code","6a7be9cd":"code","d0b516cc":"code","b2183b47":"code","76e3b44a":"code","3be673bc":"code","d4df9785":"code","ba712dac":"code","b9f75e51":"code","47206a68":"code","c0d4a10d":"code","9f90423c":"code","2fd730eb":"code","f862ca88":"code","93affe4b":"code","da7fbdc5":"code","f6e1cf6f":"code","4c528895":"code","7fd996f3":"code","d9e9be5e":"code","9ab85ffa":"code","adfe647f":"code","44ee9555":"code","1db5ae2d":"code","0b65879d":"code","ff802500":"code","1623abda":"code","8787c971":"code","c88f96c3":"code","ba231cae":"code","e19c6d75":"code","a72a683e":"code","81d962bc":"code","79e344bc":"code","d79b89d2":"code","1ab4386f":"code","12859f18":"code","eea01ed1":"code","d4748dd7":"code","852d81f4":"code","71a02100":"code","8a1ba446":"code","e7d136c8":"code","0e2137e2":"code","f4add0ff":"code","bb4d76bc":"code","b2a81a65":"code","9de16af8":"code","ca38e5d9":"code","868e678a":"code","fdf209d9":"code","b197f131":"code","f2410129":"code","807f64de":"code","cc7bf313":"code","77839366":"code","500fbc98":"code","fc9cf9c5":"code","59952a1d":"code","6c8fd0b7":"code","be4b6d75":"code","4f88629c":"code","ff44bfc6":"code","9947255a":"code","002df68b":"code","6f864ce6":"code","273da082":"code","2f95ed8f":"code","7ad00f33":"code","7313a732":"code","d7f2f746":"code","e6ace334":"code","626054c3":"code","0bfcdea9":"code","355e667a":"code","bb722727":"code","3a8eeb27":"code","18eb5115":"code","1092fa8e":"code","2b53b78f":"code","c0afc737":"code","1cf6a5e1":"code","3663d902":"code","76765c2b":"code","5fbec1f2":"code","b7138d8a":"code","1365c531":"code","4c620b74":"code","2aa905b5":"code","d66f9407":"code","a61a167a":"code","43877198":"code","cce1c3e6":"code","824ff6d9":"code","0868675e":"code","8c1ad97d":"code","d4483a06":"code","aa68b9d3":"code","9f075b20":"code","cb911377":"code","e495a22f":"code","d5ecb09a":"code","bcae9d3f":"code","ef655d2f":"code","68751344":"code","06dff48a":"code","b790a986":"code","197c24a7":"code","13521f21":"code","5e1dbb1e":"code","fc1f874c":"code","4813f2c1":"code","5ecdcd35":"code","4cc669d6":"code","3575b806":"code","c30afc61":"code","9c438040":"code","67fce243":"code","12be5f7b":"code","51f4a34c":"code","64b3ce23":"code","7ba1d122":"code","0bc9a64e":"code","ef7f3190":"code","ae2d0b0c":"code","a3776d6e":"code","fb492ab2":"code","bfe38f63":"code","1247a49a":"code","b623c124":"code","e035d306":"code","bae64eb3":"code","8276b7f2":"code","6d80afb3":"code","7e99750e":"code","cb43715c":"code","d2b9c19d":"code","cdf44eb6":"code","9ab4267e":"code","70f41d4c":"code","9c8a5095":"code","986ef63c":"code","28bbb3ca":"code","4b69997e":"code","1de8fa3d":"code","9a597ad7":"markdown","0967338a":"markdown","7cface2c":"markdown","bbc90930":"markdown","0af44e28":"markdown","53d2a5a3":"markdown","cfb04efc":"markdown","528e866a":"markdown","990f8e18":"markdown","fa965b8a":"markdown","5b8a094a":"markdown","3c586ba2":"markdown","b8b782f6":"markdown","edc5b71d":"markdown","ae5f1c99":"markdown","f4d2793a":"markdown","585b2a12":"markdown","5cca91aa":"markdown","0f917366":"markdown","7e63777e":"markdown","911ce2dd":"markdown","95e4f31b":"markdown","fc255dd3":"markdown","9cd5590a":"markdown","adc370cf":"markdown","085bba58":"markdown","b40f358e":"markdown","a3ab4dc2":"markdown","2cabbc20":"markdown","5fbed9b6":"markdown","2e797088":"markdown","78a707a6":"markdown","d0e5d155":"markdown","36d40bbd":"markdown","75723843":"markdown","8fdd6f5c":"markdown","f3d776db":"markdown","5956bcad":"markdown","c8d0683e":"markdown","6f9a4519":"markdown","571044ff":"markdown","f6acfbd3":"markdown","de116c99":"markdown","8227a2fa":"markdown","a1cdb64d":"markdown","9a37bb53":"markdown","4ba23474":"markdown","e4a7c3c8":"markdown","5b3acca2":"markdown","c97cf123":"markdown","e2b3caf1":"markdown","7254dfe4":"markdown","7ef75b23":"markdown","92d812c7":"markdown","a5f1a632":"markdown","f9b6487d":"markdown","0391a7c9":"markdown","6ecae0ad":"markdown","e142e5f5":"markdown","3bea02ac":"markdown","bc7d808c":"markdown","b0bd2300":"markdown","ddae0a64":"markdown","51aef5d2":"markdown","bdc529dd":"markdown","8ed51371":"markdown","fdcf7c3b":"markdown","75480eb1":"markdown","02a5b803":"markdown","1c29303f":"markdown","152ad2d6":"markdown","9b62bb25":"markdown","2c480618":"markdown","641d47b5":"markdown","ee171d9c":"markdown","68501299":"markdown","4898d7b9":"markdown","a34a5e20":"markdown","1d27141f":"markdown","f0d20ff7":"markdown","033266d5":"markdown","a3b03078":"markdown","8bc166ce":"markdown","e4537b2d":"markdown","42033958":"markdown","7a796cf2":"markdown","09e82294":"markdown","0470fa00":"markdown","bc79b1dd":"markdown","c2f0e765":"markdown","156f037f":"markdown","6a2a784e":"markdown","f04d86fa":"markdown","4944c169":"markdown","eb7d1214":"markdown","d2b19a2e":"markdown","0cdaa625":"markdown","074e407e":"markdown","6619e48e":"markdown","2298a8b0":"markdown","0a4f0bf4":"markdown","9ea05231":"markdown","b8c27604":"markdown","b343e0b7":"markdown","7da40419":"markdown","222961fa":"markdown","983f14de":"markdown","f75affbd":"markdown","270afb35":"markdown","ab51d8b6":"markdown","0813ae36":"markdown","1726ec67":"markdown","94d0e707":"markdown","395d20a0":"markdown","914d50b3":"markdown","610825bf":"markdown","a80bcec2":"markdown","259c71da":"markdown","acd3e62f":"markdown","de320832":"markdown","95685aa1":"markdown","a912abfc":"markdown","06a114c3":"markdown","feef0418":"markdown","db80acc5":"markdown","2d2bdb56":"markdown","d7c71af4":"markdown","f8e5eb81":"markdown","775557f5":"markdown","3425b066":"markdown","88a0fd54":"markdown","fa795425":"markdown","c62779b7":"markdown","da02ad42":"markdown","43932fd0":"markdown","2cf06c6a":"markdown","c0681819":"markdown","124dbbf6":"markdown","ff5e12d0":"markdown","7880f34e":"markdown","155ef5f1":"markdown","eb209002":"markdown","30a12c0b":"markdown","9c7d58d3":"markdown","2d9d1f45":"markdown","01e57634":"markdown","3c906be7":"markdown","1c916f61":"markdown","c5e06fa7":"markdown","0777b034":"markdown","ac402cc5":"markdown","ebdc53c2":"markdown","17ba5042":"markdown","d19bf7ba":"markdown","327231cb":"markdown","95e9ecf9":"markdown","206eefed":"markdown","042a31ec":"markdown","1a56a9d6":"markdown","d45c0616":"markdown","4ab04ee2":"markdown","4921be34":"markdown","da843a5a":"markdown","c2bd9da3":"markdown","c1b21561":"markdown","c648af73":"markdown","be37aba0":"markdown","c8b18c55":"markdown","c0c87c80":"markdown","29ea8f05":"markdown","c711dac8":"markdown","68ff4163":"markdown","6384fac2":"markdown","1ded81a5":"markdown","c7e1aef8":"markdown","027a39a7":"markdown","8205729d":"markdown","88c6c149":"markdown","c22f6e5c":"markdown","87c41828":"markdown","db879841":"markdown","b40dbeb2":"markdown","a74309a7":"markdown","5345abf8":"markdown","af03f0b6":"markdown","5c81a5f1":"markdown","a2c4d818":"markdown","998507a3":"markdown","89c73032":"markdown","887cd59a":"markdown","959d9b33":"markdown","1db417f7":"markdown","918ad7b3":"markdown","e3397d61":"markdown","c30eb4a3":"markdown","daf5805b":"markdown","21409531":"markdown","b0d53ebd":"markdown","231f7f60":"markdown","5f51d546":"markdown","a66dd750":"markdown","8b56ceda":"markdown","3c30bd18":"markdown","278bd785":"markdown","d7528d7c":"markdown","cd5496b9":"markdown","4fa78f23":"markdown","c255a911":"markdown","2e2902f1":"markdown","33401472":"markdown","1a106d82":"markdown","98e8095a":"markdown","59dcb190":"markdown","e9a86a3a":"markdown","cfe8847a":"markdown","a5b30d47":"markdown","ccb11ad5":"markdown","864344f8":"markdown","8ad834d5":"markdown","506369b7":"markdown","8a72fe59":"markdown","21438c17":"markdown","d25d2482":"markdown","2fb216ad":"markdown","d36aedf5":"markdown","5004166a":"markdown","36c5a259":"markdown","4532d46a":"markdown","16064b81":"markdown","8c080212":"markdown","90580883":"markdown","61da41c6":"markdown","dea1c441":"markdown","4ef08cb5":"markdown","a7ee138e":"markdown","759db5fe":"markdown","5184756c":"markdown","6f2e34a5":"markdown","99c1e42c":"markdown","0a967adc":"markdown","9a2dd27b":"markdown","4cc218c3":"markdown","09d8f7f9":"markdown","c7ba5b1b":"markdown","d3019f00":"markdown","304c69a4":"markdown","ffb1c9ae":"markdown","ee119c01":"markdown","8b2f0c39":"markdown","9956878a":"markdown","83870a1e":"markdown","d2b13a79":"markdown","b223da4d":"markdown","fcce0279":"markdown","30fccbda":"markdown","8ef11699":"markdown","d4532d8c":"markdown","97f30c52":"markdown","f3676128":"markdown","8256a77e":"markdown","297a5051":"markdown","3d736f4a":"markdown","c4e66aa0":"markdown","8e753909":"markdown","eaa4df21":"markdown","c437894a":"markdown","fb9e9a3e":"markdown","d6eb7fd1":"markdown","55dc499c":"markdown","d8cd23c1":"markdown","32c1dec6":"markdown"},"source":{"036fba0c":"import seaborn as sns","a5548235":"import pandas as pd","b108cb7f":"from pandas.plotting import scatter_matrix","5c45c0a6":"from pandas.plotting import andrews_curves","29263e73":"from pandas.plotting import autocorrelation_plot","42018a74":"from matplotlib import pyplot as plt","1822f603":"from matplotlib import font_manager as fm","e74fdf57":"from plotnine import ggplot, aes, geom_line","2559129d":"import plotnine","e9ddfebf":"import plotly.express as px","7d9b6594":"import plotly.figure_factory as ff","66e4f92c":"import plotly.graph_objects as go","4518a485":"import numpy as np","8cac4516":"from datetime import datetime, timedelta #It's for time series","ccbf5390":"x = [0,2,4,5,6,7,8,9,10]\ny = [60,13,45,29,48,77,102,95,58]","c1e1b0aa":"plt.plot(x, y)\nplt.show()","d08153b4":"experience = [1,3,4,5,7,8,10,12]\n\nsalary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]","1375b8d3":"plt.plot(experience,salary)\nplt.show()","e17ca704":"plt.plot(experience,salary)\nplt.title(\"Salary of Data Scientists by their experiences\")\nplt.show()","64d4f60a":"plt.plot(experience,salary)\nplt.title(\"Salary of Data Scientists by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\nplt.show()","697d0f16":"experience = [1,3,4,5,7,8,10,12]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]\n\nsoftware_engineers_salary = [9020, 12873, 15725, 18000, 19790, 20196, 25769,32000 ]","366ee41b":"plt.plot(experience,data_scientists_salary)\nplt.plot(experience,software_engineers_salary)\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\nplt.show()","83fbeb35":"plt.plot(experience,data_scientists_salary)\nplt.plot(experience,software_engineers_salary)\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend([\"Data Scientists\",\"Software Engineers\"])\n\nplt.show()","1960bdd5":"plt.plot(experience,data_scientists_salary, label= \"Data Scientists\")\nplt.plot(experience,software_engineers_salary, label= \"Software Engineers\" )\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\n\nplt.show()","028f0a36":"plt.plot(experience,data_scientists_salary, label= \"Data Scientists\")\nplt.plot(experience,software_engineers_salary, label= \"Software Engineers\" )\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend(loc=\"lower right\")\n\nplt.show()","f064cfd0":"fmt = '[marker][line][color]'","801f453c":"plt.plot(experience,data_scientists_salary,color=\"r\", label= \"Data Scientists\")\nplt.plot(experience,software_engineers_salary, color=\"g\", label= \"Software Engineers\" )\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\n\nplt.show()","803b4cd3":"plt.plot(experience,data_scientists_salary,color=\"r\", linestyle=\"--\", label= \"Data Scientists\") #We can also make lines different\nplt.plot(experience,software_engineers_salary, color=\"g\",linestyle=':', label= \"Software Engineers\" )\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\n\nplt.show()","c881c48c":"#We can also add markers\n\nplt.plot(experience,data_scientists_salary,color=\"r\", linestyle=\"--\",marker=\"o\", label= \"Data Scientists\")\nplt.plot(experience,software_engineers_salary, color=\"g\",linestyle=':',marker=\".\", label= \"Software Engineers\" )\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\n\nplt.show()","c3686965":"#We can also adjust line width by using linewidth argument.\n\nplt.plot(experience,data_scientists_salary,color=\"r\", linestyle=\"--\",linewidth=6,marker=\"o\", label= \"Data Scientists\")\nplt.plot(experience,software_engineers_salary, color=\"g\",linestyle=':',marker=\".\",linewidth=6, label= \"Software Engineers\" )\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\n\nplt.show()","a2cf5118":"#We can also add grids by using grids argument\n\nplt.plot(experience,data_scientists_salary,color=\"r\", linestyle=\"--\",linewidth=6,marker=\"o\", label= \"Data Scientists\")\nplt.plot(experience,software_engineers_salary, color=\"g\",linestyle=':',marker=\".\",linewidth=6, label= \"Software Engineers\" )\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\nplt.tight_layout()\nplt.show()","7a711e4e":"plt.plot(experience,data_scientists_salary,color=\"r\", linestyle=\"--\",linewidth=6,marker=\"o\", label= \"Data Scientists\")\nplt.plot(experience,software_engineers_salary, color=\"g\",linestyle=':',marker=\".\",linewidth=6, label= \"Software Engineers\" )\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\nplt.tight_layout()\nplt.grid(True)\nplt.show()","c9d257dc":"plt.stackplot(experience,data_scientists_salary, colors=\"g\")\n\nplt.title(\"Salary of Data Scientists by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\n\nplt.show()","45876a47":"plt.style.available","af267734":"plt.style.use('dark_background')\n\nplt.plot(experience,data_scientists_salary,color=\"r\", linestyle=\"--\",linewidth=6,marker=\"o\", label= \"Data Scientists\")\nplt.plot(experience,software_engineers_salary, color=\"g\",linestyle=':',marker=\".\",linewidth=6, label= \"Software Engineers\" )\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\nplt.tight_layout()\nplt.grid(True)\nplt.show()","5e32a7a2":"plt.style.use('seaborn-dark')\n\nplt.plot(experience,data_scientists_salary,color=\"r\", linestyle=\"--\",linewidth=6,marker=\"o\", label= \"Data Scientists\")\nplt.plot(experience,software_engineers_salary, color=\"g\",linestyle=':',marker=\".\",linewidth=6, label= \"Software Engineers\" )\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\nplt.tight_layout()\nplt.grid(True)\n\nplt.savefig(\"plot1.png\")\n\nplt.show()","e0306b88":"x = [\"A\", \"B\", \"C\", \"D\"]\ny = [3, 8, 1, 10]","d674acb5":"plt.bar(x,y)\nplt.show()","63528089":"experience = [1,2,3,4,5,6,7,8]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]","cfbdce8f":"plt.style.use('seaborn-paper')\n\nplt.bar(experience,data_scientists_salary,color=\"b\")\n\nplt.title(\"Salary of Data Scientists\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.tight_layout()\nplt.grid(False)\n\nplt.show()","9bb10952":"experience = [1,2,3,4,5,6,7,8]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]\n\nsoftware_engineers_salary = [9020, 12873, 15725, 18000, 19790, 20196, 25769,32000 ]","8bc60a4b":"plt.style.use('tableau-colorblind10')\n\nplt.bar(experience,data_scientists_salary,color=\"r\", label= \"Data Scientists\")\nplt.plot(experience,software_engineers_salary, color=\"g\",label= \"Software Engineers\" )\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\nplt.grid(False)\n\nplt.show()","255455de":"width = 0.2\n\nplt.style.use('tableau-colorblind10')\n\nplt.bar(experience,data_scientists_salary,color=\"m\",width=width, label= \"Data Scientists\")\n\nplt.title(\"Salary of Data Scientists by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\nplt.grid(False)\n\nplt.show()","0eaf972c":"plt.style.use(\"fivethirtyeight\")\n\nplt.bar(experience,software_engineers_salary, color=\"g\",linewidth=3,label= \"Software Engineers\" )\nplt.bar(experience,data_scientists_salary,color=\"r\",linewidth=3, label= \"Data Scientists\")\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\nplt.grid(False)\n\nplt.show()","b0d9068f":"experience_indexes = np.arange(len(experience))","b4ec5187":"experience_indexes","a06d9db8":"plt.style.use(\"fivethirtyeight\")\n\nwidth = 0.4\n\nplt.bar(experience_indexes - width,software_engineers_salary, color=\"g\",width=width,linewidth=3,label= \"Software Engineers\" )\nplt.bar(experience_indexes+width,data_scientists_salary,color=\"r\",linewidth=3,width=width, label= \"Data Scientists\")\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend()\nplt.grid(False)\n\nplt.show()","ec10e248":"plt.style.use(\"fivethirtyeight\")\n\nwidth = 0.25\n\nplt.bar(experience_indexes - width,software_engineers_salary, color=\"g\",width=width,linewidth=3,label= \"Software Engineers\" )\nplt.bar(experience_indexes+width,data_scientists_salary,color=\"r\",linewidth=3,width=width, label= \"Data Scientists\")\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.xticks(ticks=experience_indexes, labels=experience)\n\nplt.legend()\nplt.grid(True)\n\nplt.show()","fabfdfee":"experience = [1,2,3,4,5,6,7,8]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]\n\nsoftware_engineers_salary = [9020, 12873, 15725, 18000, 19790, 20196, 25769,32000 ]","e242454a":"plt.title(\"Pie Chart Example\")\n\nslices = [60,40]\n\nplt.pie(slices)\n\nplt.tight_layout()\n\nplt.show()","5faa53f4":"list_1 = [40,56,72,38,4]\n\nplt.pie(list_1)\n\nplt.show()","ae056628":"incomes = [40,56,72,38,4]\n\npersons = [\"Josh\",\"Berkay\",\"Maria\",\"Michael\",\"Anastacia\"]\n\nplt.pie(incomes,labels=persons)\n\nplt.show()","926c57f2":"incomes = [40,56,72,38,4]\n\npersons = [\"Josh\",\"Berkay\",\"Maria\",\"Michael\",\"Anastacia\"]\n\nplt.pie(incomes,labels=persons,startangle=180)\n\nplt.show()","7ef81ab1":"incomes = [40,56,72,38,4]\n\npersons = [\"Josh\",\"Berkay\",\"Maria\",\"Michael\",\"Anastacia\"]\n\nmyexplode = [0,0.2, 0, 0, 0]\n\nplt.pie(incomes,labels=persons,startangle=180,explode = myexplode)\n\nplt.show()","afb9eeea":"plt.figure(figsize=(10,10))\n\nplt.rcParams['font.size'] = 20\n\nincomes = [40,56,72,38,4]\n\npersons = [\"Josh\",\"Berkay\",\"Maria\",\"Michael\",\"Anastacia\"]\n\nmyexplode = [0,0.2, 0, 0, 0]\n\nplt.pie(incomes,labels=persons,startangle=180,explode = myexplode)\n\nplt.show()","438b700e":"plt.figure(figsize=(10,10))\n\nplt.rcParams['font.size'] = 20\n\nincomes = [40,56,72,38,4]\n\npersons = [\"Josh\",\"Berkay\",\"Maria\",\"Michael\",\"Anastacia\"]\n\nmyexplode = [0,0.2, 0, 0, 0]\n\nplt.pie(incomes,labels=persons,startangle=180,explode = myexplode,shadow=True)\n\nplt.show()","a68641de":"plt.figure(figsize=(10,10))\n\nplt.rcParams['font.size'] = 20\n\nincomes = [40,56,72,38,4]\n\npersons = [\"Josh\",\"Berkay\",\"Maria\",\"Michael\",\"Anastacia\"]\n\nmyexplode = [0,0.2, 0, 0, 0]\n\ncolors = [\"black\",\"g\",\"y\",\"hotpink\",\"#4CAF70\"]\n\nplt.pie(incomes,labels=persons,startangle=180,explode = myexplode,shadow=True,colors=colors)\n\nplt.show()","167abf31":"plt.figure(figsize=(7,7))\n\nincomes = [40,56,72,38,4]\n\npersons = [\"Josh\",\"Berkay\",\"Maria\",\"Michael\",\"Anastacia\"]\n\ncolors = [\"black\",\"g\",\"y\",\"hotpink\",\"#4CAF70\"]\n\nplt.pie(incomes,labels=persons,colors=colors)\nplt.legend()\nplt.show()","11399397":"plt.style.use(\"fivethirtyeight\")\n\nplt.figure(figsize=(7,7))\n\nincomes = [40,56,72,38,4]\n\npersons = [\"Josh\",\"Berkay\",\"Maria\",\"Michael\",\"Anastacia\"]\n\ncolors = [\"black\",\"g\",\"y\",\"hotpink\",\"#4CAF70\"]\n\nplt.pie(incomes,labels=persons,colors=colors)\nplt.legend(title=\"Persons\")\nplt.show()","dcaaefdd":"plt.style.use(\"fivethirtyeight\")\n\nplt.figure(figsize=(7,7))\n\nincomes = [40,56,72,38,4]\n\npersons = [\"Josh\",\"Berkay\",\"Maria\",\"Michael\",\"Anastacia\"]\n\ncolors = [\"black\",\"g\",\"y\",\"hotpink\",\"#4CAF70\"]\n\nplt.pie(incomes,labels=persons,colors=colors, autopct=\"%1.1f%%\")\nplt.legend(title=\"Persons\")\nplt.show()","69173b89":"fig = plt.figure(1, figsize=(6,6))\n\nax = fig.add_axes([0.1, 0.1, 0.8, 0.8])\n\nplt.title('Raining Hogs and Dogs')\nlabels = 'Frogs', 'Hogs', 'Dogs', 'Logs'\nfracs = [15,30,45, 10]\n\npatches, texts, autotexts = ax.pie(fracs, labels=labels, autopct='%1.1f%%')\n\nproptease = fm.FontProperties()\nproptease.set_size('xx-small')\n\nplt.setp(autotexts, fontproperties=proptease)\nplt.setp(texts, fontproperties=proptease)\n\nplt.show()","37d2f711":"days = [1,2,3,4,5,6]\n\nsleep = [6,7,5,8,6,7]\ndrinking_water =   [2,2,1,2,1,1]\nwork =  [5,7,10,8,6,9]\nexercise=  [3,3,0,1,3,2]","0427a7eb":"plt.style.use(\"fivethirtyeight\")\n\nplt.plot([],[],color='green', label='sleep', linewidth=3)\nplt.plot([],[],color='blue', label='drinking_water', linewidth=3)\nplt.plot([],[],color='red', label='work', linewidth=3)\nplt.plot([],[],color='orange', label='play', linewidth=3)\n\nplt.stackplot(days, sleep, drinking_water, work, exercise, colors=['green','blue','red','orange'])\n\nplt.xlabel('days')\nplt.ylabel('activities')\nplt.title('6 DAY ROUTINE STACK PLOT EXAMPLE')\nplt.legend(loc=\"lower right\")\n\nplt.tight_layout()\nplt.show()","27b3e37d":"stock1= [5,3,3,6,1,8,2,7,9]\nstock2= [2,4,1,3,5,0,3,1,0]\nstock3= [2,2,5,1,3,1,4,1,0]\n\ndays =[1,2,3,4,5,6,7,8,9]","49d79d67":"stocks= [\"stock1\",\"stock2\",\"stock3\"]\ncolors = [\"#F9CDAD\", \"#FC9D9A\", \"#83AF9B\"]\n\nplt.title(\"Stack Plot of Stock Rates\")\n\nplt.stackplot(days,stock1,stock2,stock3,labels=stocks,colors=colors)\n\nplt.legend()\nplt.tight_layout()\nplt.show()","1f1d9b40":"notes = [30,74,94,14,55,47,63,28,88,44,53,18,66,74,81]","14eb9207":"plt.style.use(\"fivethirtyeight\")\n\nplt.hist(notes)\n\nplt.show()","1e70ac87":"plt.style.use(\"fivethirtyeight\")\n\nplt.hist(notes,color=\"r\")\n\nplt.title(\"Notes\")\nplt.xlabel(\"Notes\")\nplt.ylabel(\"Person\")\n\nplt.tight_layout()\nplt.grid(False)\nplt.show()","f2912c79":"plt.style.use(\"fivethirtyeight\")\n\nplt.hist(notes,color=\"r\",edgecolor=\"black\")\n\nplt.title(\"Notes\")\nplt.xlabel(\"Notes\")\nplt.ylabel(\"Person\")\n\nplt.tight_layout()\nplt.grid(False)\nplt.show()","f3643ad4":"plt.style.use(\"fivethirtyeight\")\n\nplt.hist(notes,bins=5,color=\"g\",edgecolor=\"black\")\n\nplt.title(\"Notes\")\nplt.xlabel(\"Notes\")\nplt.ylabel(\"Person\")\n\nplt.tight_layout()\nplt.grid(False)\nplt.show()","128e8f72":"plt.style.use(\"fivethirtyeight\")\n\nbins = [10,45,65,80,100]\n\nplt.hist(notes,bins=bins,color=\"g\",edgecolor=\"black\")\n\nplt.title(\"Notes\")\nplt.xlabel(\"Notes\")\nplt.ylabel(\"Person\")\n\nplt.tight_layout()\nplt.grid(False)\nplt.show()","64ea16c8":"x = np.random.normal(170, 10, 250)\n\nplt.hist(x,color=\"gray\",edgecolor=\"black\")\n\nplt.title(\"Normal Distribution\")\nplt.xlabel(\"Numbers\")\nplt.ylabel(\"Count\")\n\nplt.tight_layout()\nplt.grid(False)\nplt.show()","a82c0b3d":"df = pd.read_csv(\"..\/input\/human-resources-data-set\/HRDataset_v14.csv\")","0ebf725d":"df.head()","870d677e":"plt.style.use(\"fivethirtyeight\")\n\nbins = [40000,55000,70000,85000,100000,120000]\n\nplt.hist(df.Salary,bins=bins,color=\"blue\",edgecolor=\"black\")\n\nplt.title(\"Salaries of Workers\")\nplt.xlabel(\"Salary\")\nplt.ylabel(\"Count\")\n\nplt.tight_layout()\nplt.grid(False)\nplt.show()","5a6b80bd":"plt.style.use(\"fivethirtyeight\")\n\nbins = [40000,55000,70000,85000,100000,120000]\n\nplt.hist(df.Salary,bins=bins,color=\"blue\",edgecolor=\"black\",log=True)\n\nplt.title(\"Salaries of Workers\")\nplt.xlabel(\"Salary\")\nplt.ylabel(\"Count\")\n\nplt.tight_layout()\nplt.grid(False)\nplt.show()","4b332eaa":"plt.style.use(\"fivethirtyeight\")\n\nsalary_median = df.Salary.median()\nsalary_mean = df.Salary.mean()\n\nbins = [40000,55000,70000,85000,100000,120000]\n\nplt.hist(df.Salary,bins=bins,color=\"blue\",edgecolor=\"black\")\n\nplt.axvline(salary_median, color=\"gray\", label=\"Salary Median\", linewidth=3)\nplt.axvline(salary_mean, color=\"green\", label=\"Salary Mean\", linewidth=3)\n\nplt.legend()\nplt.title(\"Salaries of Workers\")\nplt.xlabel(\"Salary\")\nplt.ylabel(\"Count\")\n\nplt.tight_layout()\nplt.grid(False)\nplt.show()","c31ad605":"first_exam_grades = [89, 90, 70, 89, 100, 80, 90, 100, 80, 34]\nsecond_exam_grades = [30, 29, 49, 48, 100, 48, 38, 45, 20, 30]","24755d06":"plt.title(\"Exam Grades Scatter plot\")\n\nplt.scatter(first_exam_grades,second_exam_grades)\n\nplt.tight_layout()\nplt.xlabel(\"First Exam Grades\")\nplt.ylabel(\"Second Exam Grades\")\nplt.grid(True)\nplt.show()","805041e0":"plt.title(\"Exam Grades Scatter plot\")\n\nplt.scatter(first_exam_grades,second_exam_grades,s=100,color=\"r\")\n\nplt.tight_layout()\nplt.xlabel(\"First Exam Grades\")\nplt.ylabel(\"Second Exam Grades\")\nplt.grid(True)\nplt.show()","489fef76":"plt.title(\"Exam Grades Scatter plot\")\n\nsizes = np.array([20,50,100,200,500,1000,60,90,10,300])\n\nplt.scatter(first_exam_grades,second_exam_grades,s=sizes,color=\"r\")\n\nplt.tight_layout()\nplt.xlabel(\"First Exam Grades\")\nplt.ylabel(\"Second Exam Grades\")\nplt.grid(True)\nplt.show()","634d71a7":"plt.title(\"Exam Grades Scatter plot\")\n\nplt.scatter(first_exam_grades,second_exam_grades,s=100,color=\"green\",marker=\"x\")\n\nplt.tight_layout()\nplt.xlabel(\"First Exam Grades\")\nplt.ylabel(\"Second Exam Grades\")\nplt.grid(True)\nplt.show()","620ab0b7":"first_exam_grades = [89, 90, 70, 89, 100, 80, 90, 100, 80, 34]\nfirst_study_hours = [6,8,3,9,9,1,4,2,2,5]","92bd0032":"second_exam_grades = [30, 29, 49, 48, 100, 48, 38, 45, 20, 30]\nsecond_study_hours = [2,7,1,5,3,3,2,6,3,2]","f1956f38":"plt.title(\"Exam Grades Scatter plot\")\n\nplt.scatter(first_exam_grades,first_study_hours,s=100,color=\"green\",marker=\"x\")\nplt.scatter(second_exam_grades,second_study_hours,s=100,color=\"red\")\n\nplt.tight_layout()\nplt.xlabel(\"Exam Grades\")\nplt.ylabel(\"Study Hours\")\n\nplt.grid(True)\nplt.show()","a0c49972":"first_exam_grades = [89, 90, 70, 89, 100, 80, 90, 100, 80, 34]\nsecond_exam_grades = [30, 29, 49, 48, 100, 48, 38, 45, 20, 30]\ncolors = [7, 5, 9, 7, 5, 7, 2, 5, 3, 7]\nsizes = [209, 486, 381, 255, 191, 315, 185, 228, 174,538]","79a72112":"plt.title(\"Exam Grades Scatter plot\")\n\nplt.scatter(first_exam_grades,second_exam_grades,s=sizes,c=colors,cmap=\"Blues\",edgecolor=\"black\")\n\ncbar = plt.colorbar()\ncbar.set_label(\"Exam Grades\")\nplt.tight_layout()\nplt.xlabel(\"First Exam Grades\")\nplt.ylabel(\"Second Exam Grades\")\n\nplt.grid(True)\nplt.show()","e97f0df7":"x = [0,3,6,9,13,15,19,23,26,29,33,35,39,41,47,56] \ny = [5,8,13,16,17,20,25,26,30,33,37,39,41,44,48,59]","9cb1c8f4":"# Creating 2-D grid of features \n[X, Y] = np.meshgrid(x, y) \n  \nfig, ax = plt.subplots(1, 1) \n  \nZ = np.sqrt(X**2+Y**2)\n  \n# plots contour lines \nax.contour(X, Y, Z) \n  \nax.set_title('Contour Plot') \nax.set_xlabel('X values') \nax.set_ylabel('Y values') \n\nplt.show()","97638cfd":"# Creating 2-D grid of features \n[X, Y] = np.meshgrid(x, y) \n  \nfig, ax = plt.subplots(1, 1) \n  \nZ = np.sqrt(X**2+Y**2)\n  \n# plots contour lines \nax.contourf(X, Y, Z) \n  \nax.set_title('Contour Plot') \nax.set_xlabel('X values') \nax.set_ylabel('Y values')\n\nplt.show()","4583c94c":"x = [0,3,6,9,13,15,19,23,26,29,33,35,39,41,47,56] \ny = [5,8,13,16,17,20,25,26,30,33,37,39,41,44,48,59]","72154dda":"data=[x,y]#First we will combine the collections\n\nfig = plt.figure()\n\nax = fig.add_axes([0,0,1,1])\n\nbp = ax.violinplot(data)\n\nplt.grid(False)\nplt.title(\"Violin Plot\")\nplt.show()","e00192a7":"dates = [\n    datetime(2021, 3, 10),\n    datetime(2021, 3, 13),\n    datetime(2021, 3, 14),\n    datetime(2021, 3, 15),\n    datetime(2021, 3, 16),\n    datetime(2021, 3, 17),\n    datetime(2021, 3, 18),\n    datetime(2021, 3, 19)\n]\n\nvalues = [0,3,4,7,5,3,5,6]","45e844d8":"plt.title(\"Time Series\")\n\nplt.plot_date(dates, values)\n\nplt.xticks(rotation='vertical')\n\nplt.show() ","c49d6545":"plt.title(\"Time Series\")\n\nplt.plot_date(dates, values,linestyle=\"solid\",marker = 'o',ms = 20, mfc = 'r',c=\"b\" )\n\nplt.xticks(rotation='vertical')\nplt.xlabel(\"Dates\")\nplt.ylabel(\"Values\")\nplt.grid(False)\n\nplt.show() ","e60474ca":"Salaries = [6900,7500,4700,11997,22000,16550,9655,8670,15090,29000,7600,14980,1250]","7f3123b8":"plt.boxplot(Salaries)\n\nplt.title(\"Box Plot of Salaries\")\n\nplt.ylabel(\"Salaries\")\n\nplt.show()","5ab7a88f":"plt.boxplot(Salaries, notch=True)\n\nplt.title(\"Box Plot of Salaries\")\n\nplt.ylabel(\"Salaries\")\n\nplt.show()","65081690":"green_diamond = dict(markerfacecolor='g', marker='D')\n\nplt.boxplot(Salaries, notch=True, flierprops=green_diamond)\n\nplt.title(\"Box Plot of Salaries\")\n\nplt.ylabel(\"Salaries\")\n\nplt.show()","9dcad780":"plt.boxplot(Salaries, notch=True, showfliers=False)\n\nplt.title(\"Box Plot of Salaries\")\n\nplt.ylabel(\"Salaries\")\n\nplt.show()","571fb1c2":"plt.boxplot(Salaries, notch=True, showfliers=False, vert=False)\n\nplt.title(\"Box Plot of Salaries\")\n\nplt.xlabel(\"Salaries\")\n\nplt.show()","7e2e7c20":"data = np.random.random(( 6 , 6 )) \ndata","d5af62ac":"plt.imshow( data , cmap = 'autumn' ) \n  \nplt.title( \"2-D Heat Map\" ) \nplt.show() ","eb61b9eb":"sns.heatmap( data , linewidth = 0.5 , cmap = 'coolwarm' ) \n  \nplt.title( \"2-D Heat Map\" ) \nplt.show() ","b2a585f8":"plt.pcolormesh( data , cmap = 'summer' ) \n  \nplt.title( '2-D Heat Map' ) \nplt.show() ","c6986280":"flights = sns.load_dataset(\"flights\")","374c6545":"flights.head()","df3a466c":"flights = flights.pivot(\"month\",\"year\",\"passengers\")","5a465d32":"flights","dbbe2de7":"sns.heatmap( flights , linewidth = 0.5 , cmap = 'YlGn' ) \n  \nplt.title( \"Flights Heat Map\" ) \nplt.show() ","cbd4342c":"experience = [1,3,4,5,7,8,10,12]\n\nsalary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]","7e2f9d1b":"sns.lineplot(x=experience,y=salary)\n\nplt.title(\"Salaries of Data Scientists by their Experience\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.show()","3b098948":"experience = [1,3,4,5,7,8,10,12]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]\n\nsoftware_engineers_salary = [9020, 12873, 15725, 18000, 19790, 20196, 25769,32000 ]","e71c52b3":"sns.lineplot(experience,data_scientists_salary)\nsns.lineplot(experience,software_engineers_salary)\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend([\"Data Scientists\",\"Software Engineers\"])\n\nplt.show()","9fe418af":"flights = sns.load_dataset(\"flights\")\nflights.head()","296ea762":"flights_wide = flights.pivot(\"year\", \"month\", \"passengers\")\nflights_wide.head()","28c7d7ca":"sns.lineplot(data=flights_wide[\"June\"])\n\nplt.title(\"Flights in June\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Passengers\")\nplt.show()","52b2b2df":"sns.lineplot(data=flights, x=\"year\", y=\"passengers\",color=\"r\")\n\nplt.title(\"Number of Passengers by year\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Passengers\")\nplt.show()","22783824":"plt.figure(figsize=(20,7))\n\nsns.lineplot(data=flights, x=\"year\", y=\"passengers\", hue=\"month\")\n\nplt.title(\"Number of Passengers by year on monthly basis\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Passengers\")\nplt.show()","99a4e096":"x = [\"A\", \"B\", \"C\", \"D\"]\ny = [3, 8, 1, 10]","883b9c1e":"sns.barplot(x=x,y=y)\n\nplt.show()","9c489648":"experience = [1,2,3,4,5,6,7,8]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]\n\ngenders = [\"Men\",\"Men\",\"Women\",\"Men\",\"Women\",\"Women\",\"Women\",\"Men\"]","e4e6a008":"sns.barplot(x=experience,y=data_scientists_salary,hue=genders)\n\nplt.title(\"Salaries of data scientists by their gender\")\nplt.show()","accd0359":"sns.barplot(y=experience,x=data_scientists_salary,orient = 'h')\n\nplt.title(\"Salaries of data scientists\")\nplt.show()","5c45a754":"sns.barplot(x=experience,y=data_scientists_salary)\nsns.lineplot(x=experience,y=data_scientists_salary)\n\nplt.title(\"Salaries of data scientists\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\nplt.show()","ded3d3b2":"tips = sns.load_dataset(\"tips\")","4d4979c6":"sns.catplot(x=\"day\", y=\"total_bill\", data=tips)\n\nplt.show()","c9a03e52":"sns.catplot(x=\"day\", y=\"total_bill\", data=tips,jitter=False)\n\nplt.title(\"Total Bills by Day\")\n\nplt.show()","258532cd":"notes = [30,74,94,14,55,47,63,28,88,44,53,18,66,74,81]","21d25020":"sns.distplot(a=notes,kde=False,color=\"r\")\n\nplt.title(\"Histogram of Notes\")\nplt.show()","7a94b6c0":"sns.distplot(a=notes,color=\"r\")\n\nplt.title(\"Histogram of Notes\")\nplt.show()","ec99d82a":"df = pd.read_csv(\"..\/input\/human-resources-data-set\/HRDataset_v14.csv\")","6a40a25d":"df.head()","826be5f4":"plt.style.use(\"fivethirtyeight\")\n\nbins = [40000,55000,70000,85000,100000,120000]\n\nsns.distplot(df.Salary,bins=bins,color=\"blue\",kde=False)\n\nplt.title(\"Salaries of Workers\")\nplt.xlabel(\"Salary\")\nplt.ylabel(\"Count\")\n\nplt.tight_layout()\nplt.grid(False)\nplt.show()","61357ef7":"fully_meets = df[df[\"PerformanceScore\"]==\"Fully Meets\"]\nexceeds = df[df[\"PerformanceScore\"]==\"Exceeds\"]\nneeds_improvement = df[df[\"PerformanceScore\"]==\"Needs Improvement\"]\npip = df[df[\"PerformanceScore\"]==\"PIP\"]","3936e330":"sns.distplot(a= fully_meets[\"Salary\"], label=\"Fully Meets\", kde=False)\nsns.distplot(a=exceeds[\"Salary\"] , label=\"Exceeds\", kde=False)\nsns.distplot(a= needs_improvement[\"Salary\"], label=\"Needs Improvement\", kde=False)\nsns.distplot(a=pip[\"Salary\"], label=\"Pip\", kde=False)\n\nplt.title(\"Histogram of Performance Scores of Employees by their Performance Score\")\n\nplt.legend()\n\nplt.show()","3b865fbf":"notes = [30,74,94,14,55,47,63,28,88,44,53,18,66,74,81]","525cb37c":"sns.kdeplot(data=notes, shade=True) # Setting shade=True colors the area below the curve\n\nplt.title(\"Density Plot of Notes\")\n\nplt.show()","3b4e47e8":"first_exam_notes = [30,74,94,14,55,47,63,28,88,44,53,18,66,74,81]\nfinal_exam_notes = [96,77,19,29,56,29,33,49,83,37,84,73,16,48,79]","aac97979":"sns.jointplot(x=first_exam_notes,y=final_exam_notes,kind=\"kde\") # Setting shade=True colors the area below the curve\n\nplt.show()","406e7e59":"sns.kdeplot(data=first_exam_notes,label=\"First Exam Notes\", shade=True)\nsns.kdeplot(data=final_exam_notes,label=\"Final Exam Notes\", shade=True)\n\nplt.title(\"Kernel Density Plot of Notes\")\n\nplt.show()","6db94cad":"iris = sns.load_dataset(\"iris\")","30b824a9":"iris.head()","94c228e3":"sns.pairplot(iris)\n\nplt.show()","82258abf":"sns.pairplot(data=iris, vars=[\"sepal_width\", \"sepal_length\"])\n\nplt.show()","2eb34e18":"sns.pairplot(data=iris, x_vars=[\"sepal_width\", \"sepal_length\",\"petal_width\"],\n                        y_vars=[\"sepal_width\", \"sepal_length\"])\n\nplt.show()","d3aee7f0":"sns.pairplot(iris,hue=\"species\")\n\nplt.show()","d36f7f0b":"sns.pairplot(iris,hue=\"species\",markers=[\"o\", \"s\", \"D\"])\n\nplt.show()","551366b3":"sns.pairplot(iris,hue=\"species\",diag_kind=\"hist\")\n\nplt.show()","3bc44c3d":"sns.pairplot(iris,height=2)\n\nplt.show()","cf25f4f9":"sns.pairplot(iris,corner=True)\n\nplt.show()","d2adad0e":"sns.pairplot(data=iris,\n            plot_kws={\"marker\":\"+\",\"linewidth\":1},\n            diag_kws={\"fill\":False})\n\nplt.show()","6abddc8c":"ax=sns.pairplot(iris, diag_kind=\"kde\")\n\nax.map_lower(sns.kdeplot, levels=4, color = \"darkred\")","063f2dae":"experience = [1,2,3,4,5,6,7,8]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]","7fccf196":"sns.scatterplot(x=experience,y=data_scientists_salary)\n\nplt.title(\"Data Scientist's Salaries by their experience\")\nplt.show()","a8508c47":"df = pd.read_csv(\"..\/input\/human-resources-data-set\/HRDataset_v14.csv\")","0d8b7ca9":"df.head()","60713f80":"plt.figure(figsize=(15,5))\n\nsns.scatterplot(x=df.Salary,y=df.EngagementSurvey,color=\"r\")\n\nplt.title(\"Salaries of Employees by their Engagement Survey Score\")\nplt.show()","276fdd26":"plt.figure(figsize=(15,5))\n\nsns.regplot(x=df.Salary,y=df.EngagementSurvey,color=\"b\")\n\nplt.title(\"Salaries of Employees by their Engagement Survey Score\")\nplt.show()","b4695d74":"plt.figure(figsize=(15,5))\n\nsns.scatterplot(x=df.Salary,y=df.EngagementSurvey,hue=df.Sex)\n\nplt.xlabel(\"Salary\")\nplt.ylabel(\"Engagement Survey Score\")\n\nplt.title(\"Salaries of Employees by their Engagement Survey Score based on Gender\")\nplt.show()","c446c8ca":"plt.figure(figsize=(10,10))\n\nsns.lmplot(x=\"Salary\",y=\"EngagementSurvey\",hue=\"Sex\",data=df)\n\nplt.xlabel(\"Salary\")\nplt.ylabel(\"Engagement Survey Score\")\n\nplt.title(\"Salaries of Employees by their Engagement Survey Score based on Gender\")\nplt.show()","37b862af":"plt.figure(figsize=(5,5))\n\nsns.swarmplot(x=\"Sex\",y=\"Salary\",data=df)\n\nplt.xlabel(\"Gender\")\nplt.ylabel(\"Salary\")\n\nplt.title(\"Salaries of Employees by their Gender\")\nplt.show()","132fc7f2":"df = pd.DataFrame({\"Date\": ['1\/2\/2021',\n                             '1\/3\/2021',\n                             '1\/4\/2021',\n                             '1\/5\/2021',\n                             '1\/6\/2021',\n                             '1\/7\/2021',\n                             '1\/7\/2021',\n                             '1\/8\/2021'],\n                   \"Piece\": [19.5, 19.,19.5,19.5,21,19.5,20,23]})","e220ddd2":"sns.lineplot(x=\"Date\",y=\"Piece\",data = df)\n\nplt.xticks(rotation=30)\n\nplt.title(\"Time Series in Seaborn\")\n\nplt.show()","619cbfa8":"notes = [44,55,15,95,82,51,37,76,7,84,29,48]","18936510":"sns.boxplot(notes)\n\nplt.title(\"Boxplot of Notes\")\n\nplt.show()","edaa134d":"sns.boxplot(y=notes,color=\"r\")\n\nplt.title(\"Boxplot of Notes\")\nplt.ylabel(\"Notes\")\n\nplt.show()","0b82afc9":"df = pd.read_csv(\"..\/input\/human-resources-data-set\/HRDataset_v14.csv\")","2542a480":"df.head()","aa338347":"plt.figure(figsize=(15,5))\n\nsns.boxplot( x=df[\"PerformanceScore\"], y=df[\"Salary\"] )\n\nplt.title(\"Boxplot of Salaries\")\nplt.ylabel(\"Salary\")\nplt.xlabel(\"Persormance Score\")\n\nplt.show()","49506b22":"sns.boxplot( x=df[\"PerformanceScore\"], y=df[\"Salary\"],width=0.5)\n\nplt.title(\"Boxplot of Salaries\")\nplt.ylabel(\"Salary\")\nplt.xlabel(\"Persormance Score\")\n\nplt.show()","8bdd31d9":"plt.figure(figsize=(13,5))\n\nsns.boxplot(x=\"PerformanceScore\", y=\"Salary\",hue=\"Sex\",data=df, palette=\"Set3\")\n\nplt.title(\"Boxplot of Salaries\")\nplt.ylabel(\"Salary\")\nplt.xlabel(\"Persormance Score\")\n\nplt.show()","a18b06b0":"plt.figure(figsize=(13,5))\n\nsns.boxplot(x=\"DaysLateLast30\",y=\"PerformanceScore\",data=df, palette=\"Set2\",orient=\"h\")\n\nplt.title(\"Boxplot of Late days and Performance Score\")\nplt.ylabel(\"Performance Score\")\nplt.xlabel(\"Late Days\")\n\nplt.show()","ec95f270":"plt.figure(figsize=(13,5))\n\nsns.boxplot(x=\"PerformanceScore\", y=\"Salary\",data=df, palette=\"Set3\")\nsns.swarmplot(x=\"PerformanceScore\", y=\"Salary\",data=df,color=\"r\")\n\nplt.title(\"Boxplot of Salaries\")\nplt.ylabel(\"Salary\")\nplt.xlabel(\"Persormance Score\")\n\nplt.show()","085576b1":"flights = sns.load_dataset(\"flights\")","3c16d37d":"flights.head()","c16215b0":"flights = flights.pivot(\"month\",\"year\",\"passengers\")","d7a77839":"flights","230fe9af":"sns.heatmap(flights)\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","92a844d7":"sns.heatmap(flights, vmin=100,vmax=700)\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","43916b34":"sns.heatmap(flights, center=500)\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","8f866f8f":"plt.figure(figsize=(10,7))\n\nsns.heatmap(flights, annot=True,fmt=\"d\")\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","f46cbf82":"sns.heatmap(flights, linewidths=0.5,linecolor=\"blue\")\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","2e42d62e":"sns.heatmap(flights, cmap=\"YlGnBu\")\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","003b1aa7":"sns.heatmap(flights, cbar=False)\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","d8d4ec48":"tips = sns.load_dataset(\"tips\")","416be24a":"tips.head()","e64fa0ea":"ax= sns.FacetGrid(tips,col=\"time\") #col argument takes the column we want.\n\nax.map(sns.distplot, \"tip\")\n\nplt.show()","ae5c38aa":"g = sns.FacetGrid(tips, col=\"smoker\", hue=\"sex\")\n\ng.map(sns.scatterplot, \"total_bill\", \"tip\", alpha=.4)\n\ng.add_legend()\n\nplt.show()","e36877a7":"ts = pd.Series(np.random.randn(200), index=pd.date_range(\"1\/1\/2021\", periods=200))","c1a9cc67":"ts= ts.cumsum()","be0446b3":"ts.plot(c=\"r\")\n\nplt.title(\"Basic Plot\")\n\nplt.show()","d6cdff5c":"df = pd.DataFrame(np.random.randn(200, 5), \n                  index=ts.index, columns=[\"Column_1\",\"Column_2\",\"Column_3\",\"Column_4\",\"Column_5\"])","9a3ef355":"df = df.cumsum()","96e980e1":"plt.figure()\n\ndf.plot()\n\nplt.show()","6a7be9cd":"notes = [11, 13, 23, 34, 38, 54, 55, 64, 76, 79, 82, 95, 97, 98, 100]\n\nstudy_hours = [1, 2, 2, 3, 4, 4, 4, 6, 6, 7, 7, 9, 9, 11, 13]\n\nexam_notes = pd.DataFrame(notes,columns=[\"Notes\"])\nexam_notes[\"study_hours\"] = pd.Series(study_hours)","d0b516cc":"exam_notes.plot(x=\"study_hours\",y=\"Notes\",color=\"red\")\n\nplt.title(\"Notes by Study Hours\")\n\nplt.xlabel(\"Study Hours\")\nplt.ylabel(\"Notes\")\n\nplt.show()","b2183b47":"x = pd.Series([\"A\", \"B\", \"C\", \"D\"])\ny = pd.Series([3, 8, 1, 10])\ndf= pd.DataFrame({\"Letters\":x,\"Numbers\":y})\n\ndf.index = x","76e3b44a":"df","3be673bc":"df.plot(kind=\"bar\",color=\"green\")\n\nplt.title(\"Bar Plot Example\")\n\nplt.xlabel(\"Letters\")\nplt.ylabel(\"Numbers\")\nplt.show()","d4df9785":"df = pd.DataFrame(np.random.rand(7, 5), columns=[\"Michael\",\"Richel\",\"Mike\",\"Kate\",\"Wattson\"])","ba712dac":"df.plot.bar(figsize=(13,5))\n\nplt.title(\"Multiple Bar Plot\")\n\nplt.show()","b9f75e51":"df.plot.bar(figsize=(13,5),stacked=True)\n\nplt.title(\"Multiple Bar Plot\")\n\nplt.show()","47206a68":"df.plot.barh(figsize=(13,5),stacked=True)\n\nplt.title(\"Horizontal Multiple Bar Plot\")\n\nplt.show()","c0d4a10d":"first_notes = [11, 13, 23, 34, 38, 54, 55, 64, 76, 79, 82, 95, 97, 98, 100]\n\nsecond_notes = [74,13,23,53,64,32,64,86,65,33,13,64,99,32,63]\n\nfinal_notes = [53,43,65,12,76,34,12,43,65,32,54,76,98,12,32]\n\nnotes = pd.DataFrame({\"First Notes\":first_notes,\"Second Notes\":second_notes,\"Final Notes\":final_notes},\n                    columns=[\"First Notes\",\"Second Notes\",\"Final Notes\"])","9f90423c":"notes.head()","2fd730eb":"notes.plot.hist(figsize=(10,5),alpha=0.5)\n\nplt.title(\"Notes Histogram\")\n\nplt.show()","f862ca88":"notes.plot.hist(figsize=(10,5),stacked=True,bins=14)\n\nplt.title(\"Notes Histogram\")\n\nplt.show()","93affe4b":"notes.plot.hist(figsize=(10,5),orientation=\"horizontal\")\n\nplt.title(\"Notes Histogram\")\n\nplt.show()","da7fbdc5":"notes.plot.hist(figsize=(10,5),orientation=\"horizontal\",cumulative=True)\n\nplt.title(\"Notes Histogram\")\n\nplt.show()","f6e1cf6f":"first_notes = [11, 13, 23, 34, 38, 54, 55, 64, 76, 79, 82, 95, 97, 98, 100]\n\nsecond_notes = [74,13,23,53,64,32,64,86,65,33,13,64,99,32,63]\n\nfinal_notes = [53,43,65,12,76,34,12,43,65,32,54,76,98,12,32]\n\nnotes = pd.DataFrame({\"First Notes\":first_notes,\"Second Notes\":second_notes,\"Final Notes\":final_notes},\n                    columns=[\"First Notes\",\"Second Notes\",\"Final Notes\"])","4c528895":"notes.head()","7fd996f3":"notes.plot.box()\n\nplt.title(\"Box Plot of Notes\")\nplt.xlabel(\"Exams\")\nplt.ylabel(\"Points\")\nplt.show()","d9e9be5e":"notes.plot.box(color = {\"whiskers\": \"DarkOrange\",\"medians\": \"DarkBlue\"}, sym= \"o\")\n\nplt.title(\"Box Plot of Notes\")\nplt.xlabel(\"Exams\")\nplt.ylabel(\"Points\")\nplt.show()","9ab85ffa":"notes.plot.box(color = {\"whiskers\": \"DarkOrange\",\"medians\": \"DarkBlue\"}, vert = False)\n\nplt.title(\"Box Plot of Notes\")\nplt.xlabel(\"Exams\")\nplt.ylabel(\"Points\")\nplt.show()","adfe647f":"first_notes = [11, 13, 23, 34, 38, 54, 55, 64, 76, 79, 82, 95, 97, 98, 100]\n\nsecond_notes = [74,13,23,53,64,32,64,86,65,33,13,64,99,32,63]\n\nfinal_notes = [53,43,65,12,76,34,12,43,65,32,54,76,98,12,32]\n\nnotes = pd.DataFrame({\"First Notes\":first_notes,\"Second Notes\":second_notes,\"Final Notes\":final_notes},\n                    columns=[\"First Notes\",\"Second Notes\",\"Final Notes\"])","44ee9555":"notes.head()","1db5ae2d":"notes.plot.area()\n\nplt.title(\"Area Plot Example\")\n\nplt.show()","0b65879d":"notes.plot.area(stacked=False)\n\nplt.title(\"Area Plot Example\")\n\nplt.show()","ff802500":"first_notes = [11, 13, 23, 34, 38, 54, 55, 64, 76, 79, 82, 95, 97, 98, 100]\n\nsecond_notes = [74,13,23,53,64,32,64,86,65,33,13,64,99,32,63]\n\nfinal_notes = [53,43,65,12,76,34,12,43,65,32,54,76,98,12,32]\n\nnotes = pd.DataFrame({\"First Notes\":first_notes,\"Second Notes\":second_notes,\"Final Notes\":final_notes},\n                    columns=[\"First Notes\",\"Second Notes\",\"Final Notes\"])","1623abda":"notes.head()","8787c971":"notes.plot.scatter(x=\"First Notes\",y=\"Final Notes\",color=\"r\")\n\nplt.title(\"Scatter Plot of Notes\")\nplt.grid(True)\nplt.show()","c88f96c3":"ax= notes.plot.scatter(x=\"First Notes\",y=\"Final Notes\",color=\"DarkBlue\",label=\"First Notes\")\nnotes.plot.scatter(x=\"Second Notes\",y=\"Final Notes\",color=\"DarkGreen\",label=\"Second Notes\",ax=ax)\n\nplt.title(\"Scatter Plot of Notes\")\nplt.grid(True)\nplt.show()","ba231cae":"notes.plot.scatter(x=\"First Notes\",y=\"Second Notes\",s=notes[\"Final Notes\"]*10,c=\"r\")\n\nplt.title(\"Scatter Plot of Notes\")\nplt.grid(True)\nplt.show()","e19c6d75":"first_notes = [11, 13, 23, 34, 38, 54, 55, 64, 76, 79, 82, 95, 97, 98, 100]\n\nsecond_notes = [74,13,23,53,64,32,64,86,65,33,13,64,99,32,63]\n\nfinal_notes = [53,43,65,12,76,34,12,43,65,32,54,76,98,12,32]\n\nnotes = pd.DataFrame({\"First Notes\":first_notes,\"Second Notes\":second_notes,\"Final Notes\":final_notes},\n                    columns=[\"First Notes\",\"Second Notes\",\"Final Notes\"])","a72a683e":"notes.head()","81d962bc":"notes.plot.hexbin(x=\"First Notes\",y=\"Final Notes\",gridsize=10)\n\nplt.title(\"Hexagonal Plot of Notes\")\n\nplt.show()","79e344bc":"df = pd.DataFrame(np.random.randn(2000, 2), columns=[\"Column A\", \"Column B\"])\n\ndf[\"Column B\"] = df[\"Column B\"] + np.arange(2000)","d79b89d2":"df.plot.hexbin(x=\"Column A\", y=\"Column B\", gridsize=25)\n\nplt.show()","1ab4386f":"letters = pd.Series([3, 8, 1, 10],index = [\"A\", \"B\", \"C\", \"D\"],name=\"Letters\")","12859f18":"letters.plot.pie(figsize=(6,6))\n\nplt.title(\"Pie Chart of Letters\");","eea01ed1":"letters.plot.pie(figsize=(6,6),colors=[\"r\", \"g\", \"b\", \"c\"],autopct=\"%.2f\",fontsize=20)\n\nplt.title(\"Pie Chart of Letters\");","d4748dd7":"series = pd.Series([0.2] * 4, index=[\"C1\", \"C2\", \"C3\", \"C4\"], name=\"Semicircle Example\")","852d81f4":"series.plot.pie(figsize=(6, 6));","71a02100":"first_notes = [11, 13, 23, 34, 38, 54, 55, 64, 76, 79, 82, 95, 97, 98, 100]\n\nsecond_notes = [74,13,23,53,64,32,64,86,65,33,13,64,99,32,63]\n\nfinal_notes = [53,43,65,12,76,34,12,43,65,32,54,76,98,12,32]\n\nnotes = pd.DataFrame({\"First Notes\":first_notes,\"Second Notes\":second_notes,\"Final Notes\":final_notes},\n                    columns=[\"First Notes\",\"Second Notes\",\"Final Notes\"])","8a1ba446":"notes.head()","e7d136c8":"scatter_matrix(notes, alpha=0.2, figsize=(6, 6), diagonal=\"kde\");","0e2137e2":"den = pd.Series(np.random.randn(3000))","f4add0ff":"den.plot.kde()\n\nplt.title(\"Density Plot Example\")\n\nplt.show()","bb4d76bc":"iris = sns.load_dataset(\"iris\")","b2a81a65":"iris.head()","9de16af8":"andrews_curves(iris,\"species\")\n\nplt.title(\"Andrews curves Example\")\n\nplt.show()","ca38e5d9":"spacing = np.linspace(-9 * np.pi, 9 * np.pi, num=2000)","868e678a":"data = pd.Series(0.7 * np.random.rand(2000) + 0.5 * np.sin(spacing))","fdf209d9":"autocorrelation_plot(data)\n\nplt.title(\"Autocorrelation Plot Example\")\n\nplt.show()","b197f131":"experience = [1,3,4,5,7,8,10,12]\n\nsalary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]\n\ndf = pd.DataFrame({\"Experience\":experience,\"Salary\": salary})","f2410129":"df.head()","807f64de":"line_plot = ggplot(data=df, mapping=aes(x='Experience', y='Salary'))","cc7bf313":"(line_plot + \n plotnine.geom_line(color='red') + \n # labels\n plotnine.labs(title='Line Plot of Salaries by Experience')).draw();","77839366":"experience = [1,3,4,5,7,8,10,12]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]\n\nsoftware_engineers_salary = [9020, 12873, 15725, 18000, 19790, 20196, 25769,32000 ]\n\nsalaries_df = pd.DataFrame({\"Experience\":experience,\"Data Scientists Salary\": data_scientists_salary,\n                           \"Software Engineers Salary\":software_engineers_salary})","500fbc98":"salaries_df.head()","fc9cf9c5":"(ggplot() + \n plotnine.geom_line(data=salaries_df, mapping=aes(x='Experience', y='Data Scientists Salary', color=\"'blue'\")) +\n plotnine.geom_line(data=salaries_df, mapping=aes(x='Experience', y='Software Engineers Salary', color=\"'orange'\")) +\n plotnine.labs(title='Line Plot of Salaries by Experience') +\n plotnine.scale_color_identity(guide='legend',\n                               name='Legend',\n                               breaks=['blue','orange'],\n                               labels=['Data Scientists Salary','Software Engineers Salary'])).draw();","59952a1d":"img =(ggplot() + \n plotnine.geom_line(data=salaries_df, mapping=aes(x='Experience', y='Data Scientists Salary', color=\"'blue'\")) +\n plotnine.geom_line(data=salaries_df, mapping=aes(x='Experience', y='Software Engineers Salary', color=\"'orange'\")) +\n plotnine.labs(title='Line Plot of Salaries by Experience') +\n plotnine.scale_color_identity(guide='legend',\n                               name='Legend',\n                               breaks=['blue','orange'],\n                               labels=['Data Scientists Salary','Software Engineers Salary']))\n\nimg.save(filename = \"image.png\")","6c8fd0b7":"x = pd.Series([\"A\", \"B\", \"C\", \"D\", \"B\", \"C\", \"D\",\"A\",\"A\",\"B\", \"C\", \"D\", \"B\", \"C\", \"D\",\"A\",\"A\",\"B\", \"C\", \"D\"])\ny = pd.Series([3, 8, 1, 10,5,3,6,8,10,3,9,2,8,10,3,9,2])\ndf= pd.DataFrame({\"Letters\":x,\"Numbers\":y})\n\ndf.index = x","be4b6d75":"df.head()","4f88629c":"# create new ggplot object\nbar_plot = ggplot(data=df, mapping=aes(x='Numbers'))\n\n# add layers\n(bar_plot + \n plotnine.geom_bar() + \n plotnine.labs(title='Bar Plot of Letters') +\n plotnine.facet_grid('~Letters')).draw();","ff44bfc6":"df = pd.read_csv(\"..\/input\/human-resources-data-set\/HRDataset_v14.csv\")","9947255a":"df.head()","002df68b":"(plotnine.ggplot(data=df.dropna(), mapping=aes(x='PerformanceScore', y='Salary', fill='Sex')) + \n plotnine.geom_col() +\n plotnine.labs(title='Bar Plot of Salaries by Persormance Score') +\n plotnine.theme(axis_text_x=plotnine.element_text(rotation=90))).draw();","6f864ce6":"experience = [1,2,3,4,5,6,7,8]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]\n\ndf = pd.DataFrame({\"experience\":experience,\"data_scientists_salary\":data_scientists_salary})","273da082":"df.head()","2f95ed8f":"scatter_plot = ggplot(data=df,mapping=aes(x=\"experience\", y=\"data_scientists_salary\"))\n\n# add layers\n(scatter_plot + \n plotnine.labs(title='Scatter Plot of Salaries') +\n plotnine.geom_point(shape='o', size=6, color='green', alpha=0.5)).draw();","7ad00f33":"df = pd.read_csv(\"..\/input\/human-resources-data-set\/HRDataset_v14.csv\")","7313a732":"df.head()","d7f2f746":"scatter_plot = ggplot(data=df,mapping=aes(x=\"EngagementSurvey\", y=\"Salary\"))\n\n# add layers\n(scatter_plot + \n plotnine.labs(title='Scatter Plot of Engagement Survey Scores') +\n plotnine.geom_point(shape='o', size=6, color='green', alpha=0.5)).draw();","e6ace334":"(scatter_plot + \n plotnine.geom_point(aes(color='factor(EmpSatisfaction)', size='PerformanceScore'), alpha=0.5) +\n plotnine.stat_smooth(method='lm')).draw();","626054c3":"letters = pd.DataFrame({\"Letters\":[\"A\", \"B\", \"C\", \"D\",\"A\", \"B\", \"C\", \"D\",\"A\", \"B\", \"C\", \"A\",\n                                  \"A\", \"B\", \"A\", \"B\", \"A\", \"A\", \"C\", \"D\"],\n                        \"Numbers\":[3, 8, 1, 103, 8, 1, 10,3, 8, 1, 10,3, 8, 1, 10,3, 8, 1, 1,20]})","0bfcdea9":"letters.head()","355e667a":"# create new ggplot object\nhistogram = ggplot(data=letters, mapping=aes(x=\"Letters\"))\n\n# add layers\n(histogram +\n plotnine.labs(title='Histogram of Letters') +\n plotnine.geom_histogram(bins=6) +\n plotnine.geom_rug()).draw();","bb722727":"df = pd.DataFrame({\"notes\":[32,21,32,84,77,64,99,42,65,24,65,77,43,84]})","3a8eeb27":"df.head()","18eb5115":"kde = ggplot(data=df,mapping = aes(x=\"notes\"))\n\n(kde + plotnine.geom_density()+\n plotnine.labs(title='Density Plot of Notes')).draw();","1092fa8e":"first_notes = [11, 13, 23, 34, 38, 54, 55, 64, 76, 79, 82, 95, 97, 98, 100,86]\n\nsecond_notes = [74,13,23,53,64,32,64,86,65,33,13,64,99,32,63,65]\n\nfinal_notes = [53,43,65,12,76,34,12,43,65,32,54,76,98,12,32,75]\n\nLetter_Note = [\"AA\",\"BA\",\"CD\",\"BB\",\"BA\",\"CA\",\"BA\",\"CD\",\"AA\",\"BA\",\"CA\",\"BA\",\"CD\",\"BB\",\"BA\",\"BB\"]\n\nnotes = pd.DataFrame({\"First Notes\":first_notes,\"Second Notes\":second_notes,\"Final Notes\":final_notes,\n                      \"Letter Notes\": Letter_Note},\n                    columns=[\"First Notes\",\"Second Notes\",\"Final Notes\",\"Letter Notes\"])","2b53b78f":"notes.head()","c0afc737":"boxp = ggplot(data=notes,mapping=aes(x=\"Letter Notes\",y=\"Final Notes\"))\n\n(boxp + plotnine.geom_boxplot()+\n plotnine.labs(title='Box Plot of Notes')).draw();","1cf6a5e1":"df = pd.DataFrame({\"First\":[0,3,6,9,13,15,19,23,26,29,33,35,39,41,47,56],\n                  \"Second\":[5,8,13,16,17,20,25,26,30,33,37,39,41,44,48,59],\n                  \"Class\": [\"A\",\"C\",\"B\",\"C\",\"C\",\"A\",\"B\",\"A\",\"B\",\"C\",\"C\",\"A\",\"B\",\"B\",\"C\",\"A\"]})","3663d902":"df.head()","76765c2b":"# create new ggplot object\nviolin_plot = ggplot(data=df, mapping=aes(x='Class', y='First'))\n\n# add layers\n(violin_plot + \n plotnine.geom_violin()+\n plotnine.labs(title='Violin Plot of Classes') +\n # scatter plot with points jittered to reduce overplotting (similar to seaborn stripplot)\n plotnine.geom_jitter(position=plotnine.position_jitter(0.2))).draw();","5fbec1f2":"experience = [1,3,4,5,7,8,10,12]\n\nsalary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]","b7138d8a":"fig = px.line(x=experience, y=salary, title='Salaries by Experience')\n\nfig.show()","1365c531":"df = pd.DataFrame({\"experience\":[1,3,4,5,7,8,10,12],\n                   \"salary\": [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]})","4c620b74":"df.head()","2aa905b5":"fig = px.line(df,x=\"experience\", y=\"salary\", title='Salaries by Experience')\n\nfig.show()","d66f9407":"salaries_df = pd.DataFrame({\"experience\": [1,3,4,5,7,8,10,12], \n                            \"data_scientists_salary\":[6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793],\n                            \"gender\":[\"W\",\"M\",\"M\",\"W\",\"W\",\"M\",\"M\",\"W\"],\n                            \"location\":[\"Turkey\",\"United Kingdom\",\"Germany\",\"Germany\",\"USA\",\"Turkey\",\"USA\",\"United Kingdom\"]})","a61a167a":"salaries_df.head()","43877198":"fig = px.line(salaries_df, x=\"experience\", y=\"data_scientists_salary\", color='gender',\n              title=\"Data Scientists Salaries by experience and gender\")\nfig.show()","cce1c3e6":"example_size = 50\nrandom_x = np.linspace(0, 1, example_size)\nrandom_y0 = np.random.randn(example_size) + 10\nrandom_y1 = np.random.randn(example_size)\nrandom_y2 = np.random.randn(example_size) - 10","824ff6d9":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=random_x, y=random_y0,\n                    mode='lines',\n                    name='lines'))\nfig.add_trace(go.Scatter(x=random_x, y=random_y1,\n                    mode='lines+markers',\n                    name='lines+markers'))\nfig.add_trace(go.Scatter(x=random_x, y=random_y2,\n                    mode='markers', name='markers'))\n\nfig.update_layout(title='Line Plot with different Markers')\n\nfig.show()","0868675e":"days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\nhigh_January = [32.5, 37.6, 49.9, 53.0, 69.1, 75.4, 76.5]\nlow_January = [ 13.8, 22.3, 32.5, 37.2, 49.9, 56.1, 57.7]\nhigh_February = [36.5, 26.6, 43.6, 52.3, 71.5, 81.4, 80.5]\nlow_February = [ 23.6, 14.0, 27.0, 36.8, 47.6, 57.7, 58.9]\nhigh_March = [28.8, 28.5, 37.0, 56.8, 69.7, 79.7, 78.5]\nlow_March = [ 12.7, 14.3, 18.6, 35.5, 49.9, 58.0, 60.0]","8c1ad97d":"fig = go.Figure()\n# Create and style traces\nfig.add_trace(go.Scatter(x=days, y=high_January, name='High January',\n                         line=dict(color='firebrick', width=4)))\nfig.add_trace(go.Scatter(x=days, y=low_January, name = 'Low January',\n                         line=dict(color='green', width=4)))\nfig.add_trace(go.Scatter(x=days, y=high_February, name='High February',\n                         line=dict(color='firebrick', width=4,\n                              dash='dash') # dash options include 'dash', 'dot', and 'dashdot'\n))\nfig.add_trace(go.Scatter(x=days, y=low_February, name='Low February',\n                         line = dict(color='green', width=4, dash='dash')))\nfig.add_trace(go.Scatter(x=days, y=high_March, name='High March',\n                         line = dict(color='firebrick', width=4, dash='dot')))\nfig.add_trace(go.Scatter(x=days, y=low_March, name='Low March',\n                         line=dict(color='green', width=4, dash='dot')))\n\n# Edit the layout\nfig.update_layout(title='Average High and Low Temperatures in Istanbul',\n                   xaxis_title='Days',\n                   yaxis_title='Temperature (degrees F)')\n\n\nfig.show()","d4483a06":"x = pd.Series([\"A\", \"B\", \"C\", \"D\", \"B\", \"C\", \"D\",\"A\",\"A\",\"B\", \"C\", \"D\", \"B\", \"C\", \"D\",\"A\",\"A\",\"B\", \"C\", \"D\"])\ny = pd.Series([3, 8, 1, 10,5,3,6,8,10,3,9,2,8,10,3,9,2])\ndf= pd.DataFrame({\"Letters\":x,\"Numbers\":y})\n\ndf.index = x","aa68b9d3":"df.head()","9f075b20":"fig = px.bar(df, x='Letters', y='Numbers',title=\"Letters Bar Chart\")\nfig.show()","cb911377":"df = pd.read_csv(\"..\/input\/human-resources-data-set\/HRDataset_v14.csv\")","e495a22f":"df.head()","d5ecb09a":"fig = px.bar(df, x='PerformanceScore', y='DaysLateLast30',color=\"Sex\",title=\"DaysLateLast30 by Performance Score\")\nfig.show()","bcae9d3f":"fig = px.bar(df, x='PerformanceScore', y='DaysLateLast30',hover_data=['Salary'], color='Salary',\n             labels={'DaysLateLast30':'Number of DaysLateLast30'}, height=400,\n             title=\"DaysLateLast30 by Performance Score\")\nfig.show()","ef655d2f":"fig = px.bar(df, x='PerformanceScore', y='DaysLateLast30',color=\"Sex\",\n             title=\"DaysLateLast30 by Performance Score\", orientation=\"h\")\nfig.show()","68751344":"tips = sns.load_dataset(\"tips\")","06dff48a":"tips.head()","b790a986":"fig = px.bar(tips, x=\"sex\", y=\"total_bill\", color=\"smoker\", barmode=\"group\",\n             facet_row=\"time\", facet_col=\"day\",\n             category_orders={\"day\": [\"Thur\", \"Fri\", \"Sat\", \"Sun\"],\n                              \"time\": [\"Lunch\", \"Dinner\"]})\nfig.show()","197c24a7":"cities = [\"Berlin\",\"Hamburg\",\"Karlsruhe\",\"Dusseldorf\",\"Duisburg\",\"Frankfurt am Main\",\"Luneburg\",\n          \"Munchen\",\"Stuttgart\"]\n\npopulation = [14,12,8,10,6,12,5,18,15]","13521f21":"fig = px.pie(values=population, names=cities,\n             title=\"Population of Germany\")\nfig.show()","5e1dbb1e":"fig = px.pie(values=population, names=cities,\n             title=\"Population of Germany\",\n             color_discrete_sequence=px.colors.sequential.RdBu)\nfig.show()","fc1f874c":"fig = px.pie(values=population, names=cities, color =cities,\n             title=\"Population of Germany\",\n             color_discrete_map={'Berlin':'lightcyan',\n                                 'Hamburg':'cyan',\n                                 'Karlsruhe':'royalblue',\n                                 'Dusseldorf':'darkblue',\n                                 \"Duisburg\":\"red\",\n                                 \"Frankfurt am Rhein\":\"yellow\",\n                                 \"Luneburg\":\"green\",\n                                 \"Munchen\":\"orange\",\n                                 \"Stuttgart\":\"gray\"})\nfig.show()","4813f2c1":"fig = px.pie(values=population, names=cities,\n             title=\"Population of Germany\",\n             color_discrete_sequence=px.colors.sequential.RdBu)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","5ecdcd35":"fig = go.Figure(data=[go.Pie(labels=cities, values=population, hole=.4)])\n\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\nfig.update_layout(\n    title_text='Population of Germany'\n)\n\nfig.show()\n","4cc669d6":"fig = go.Figure(data=[go.Pie(labels=cities, values=population, pull=[0, 0, 0.2, 0,0,0,0,0,0])])\n\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(title_text='Population of Germany')\n\nfig.show()","3575b806":"fig =go.Figure(go.Sunburst(\n    labels=[\"Eve\", \"Cain\", \"Seth\", \"Enos\", \"Noam\", \"Abel\", \"Awan\", \"Enoch\", \"Azura\"],\n    parents=[\"\", \"Eve\", \"Eve\", \"Seth\", \"Seth\", \"Eve\", \"Eve\", \"Awan\", \"Eve\" ],\n    values=[10, 14, 12, 10, 2, 6, 6, 4, 4],\n))\nfig.update_layout(margin = dict(t=0, l=0, r=0, b=0))\n\nfig.show()","c30afc61":"df = pd.read_csv(\"..\/input\/human-resources-data-set\/HRDataset_v14.csv\")","9c438040":"df.head()","67fce243":"fig = px.scatter(df, x=\"EngagementSurvey\",y=\"EmpSatisfaction\",size=\"Salary\", color=\"PerformanceScore\",\n                 hover_name=\"RecruitmentSource\", size_max=30)\nfig.show()","12be5f7b":"fig = go.Figure(data=[go.Scatter(\n    x=[\"January\",\"February\",\"March\",\"April\"], y=[1450,2200,1700,2386],\n    mode='markers',\n     marker=dict(\n        color=['rgb(93, 164, 214)', 'rgb(255, 144, 14)',\n               'rgb(44, 160, 101)', 'rgb(255, 65, 54)'],\n        opacity=[1, 0.8, 0.6, 0.4],\n        size=[40, 80, 60, 100]))\n])\n\nfig.show()","51f4a34c":"first_notes = [11, 13, 23, 34, 38, 54, 55, 64, 76, 79, 82, 95, 97, 98, 100]\n\nsecond_notes = [74,13,23,53,64,32,64,86,65,33,13,64,99,32,63]\n\nfinal_notes = [53,43,65,12,76,34,12,43,65,32,54,76,98,12,32]\n\nnotes = pd.DataFrame({\"First Notes\":first_notes,\"Second Notes\":second_notes,\"Final Notes\":final_notes},\n                    columns=[\"First Notes\",\"Second Notes\",\"Final Notes\"])\n","64b3ce23":"notes.head()","7ba1d122":"fig = px.scatter(x=first_notes, y=final_notes,title=\"Scatter Plot of Notes\")\nfig.show()","0bc9a64e":"iris = sns.load_dataset(\"iris\")","ef7f3190":"iris.head()","ae2d0b0c":"fig = px.scatter(iris, x=\"petal_width\", y=\"petal_length\",title=\"Scatter Plot of Petals\")\nfig.show()","a3776d6e":"fig = px.scatter(iris, x=\"petal_width\", y=\"petal_length\", color=\"species\",\n                 size='sepal_length', hover_data=['sepal_width'],\n                 title=\"Scatter Plot of Iris Data\")\n\nfig.show()","fb492ab2":"experience = [1,2,3,4,5,6,7,8]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]\n\norigin = [\"Turkey\",\"Germany\",\"Germany\",\"USA\",\"Turkey\",\"France\",\"Germany\",\"France\"]\n\ndf = pd.DataFrame({\"experience\":experience,\"data_scientists_salary\":data_scientists_salary,\n                  \"origin\":origin})","bfe38f63":"df.head()","1247a49a":"fig = px.area(df, x=\"experience\", y=\"data_scientists_salary\", \n              color=\"origin\",title=\"Data Scientist Salaries by their Origin and Experience\")\nfig.show()","b623c124":"x=['January', 'February', 'March', 'April']\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(\n    x=x, y=[20, 10, 10, 60],\n    hoverinfo='x+y',\n    mode='lines',\n    line=dict(width=0.5, color='rgb(175, 90, 241)'),\n    stackgroup='one' # define stack group\n))\nfig.add_trace(go.Scatter(\n    x=x, y=[40, 60, 40, 10],\n    hoverinfo='x+y',\n    mode='lines',\n    line=dict(width=0.5, color='rgb(111, 57, 219)'),\n    stackgroup='one'\n))\nfig.add_trace(go.Scatter(\n    x=x, y=[40, 30, 50, 30],\n    hoverinfo='x+y',\n    mode='lines',\n    line=dict(width=0.5, color='rgb(184, 247, 212)'),\n    stackgroup='one'\n))\n\nfig.update_layout(yaxis_range=(0, 100))\nfig.show()","e035d306":"df = pd.DataFrame([\n    dict(Task=\"Project Kick Off\", Start='2021-01-01', End='2021-01-28',Team = \"Scrum 1\"),\n    dict(Task=\"Front-End Developments\", Start='2021-01-05', End='2021-03-17',Team = \"Busy Team\"),\n    dict(Task=\"Back-End Developments\", Start='2021-03-05', End='2021-04-30',Team = \"Scrum 1\"),\n    dict(Task=\"SAP Integration\", Start='2021-03-10', End='2021-06-10',Team = \"We are Agile!\"),\n    dict(Task=\"Go Live\", Start='2021-07-01', End='2021-10-31',Team = \"Busy Team\")\n])","bae64eb3":"df","8276b7f2":"fig = px.timeline(df, x_start=\"Start\", x_end=\"End\", y=\"Task\",title=\"Project Schedule\")\n\nfig.update_yaxes(autorange=\"reversed\") # otherwise tasks are listed from the bottom up\n\nfig.show()","6d80afb3":"fig = px.timeline(df, x_start=\"Start\", x_end=\"End\", y=\"Task\",color=\"Team\",\n                  title=\"Project Schedule\")\n\nfig.update_yaxes(autorange=\"reversed\") # otherwise tasks are listed from the bottom up\n\nfig.show()","7e99750e":"df = pd.DataFrame([\n    dict(Task=\"Project Kick Off\", Start='2021-01-01', Finish='2021-01-28'),\n    dict(Task=\"Front-End Developments\", Start='2021-01-05', Finish='2021-03-17'),\n    dict(Task=\"Back-End Developments\", Start='2021-03-05', Finish='2021-04-30'),\n    dict(Task=\"SAP Integration\", Start='2021-03-10', Finish='2021-06-10'),\n    dict(Task=\"Go Live\", Start='2021-07-01', Finish='2021-10-31')\n])","cb43715c":"fig = ff.create_gantt(df,title=\"Project Schedule\")\nfig.show()","d2b9c19d":"tips = sns.load_dataset(\"tips\")","cdf44eb6":"tips.head()","9ab4267e":"fig = px.sunburst(tips, path=['sex','day', 'time'], values='total_bill',title=\"Sunburst Chart of Tips Dataset\")\n\nfig.show()","70f41d4c":"deutschland_cities = pd.read_csv(\"..\/input\/deutschland-cities\/Deutschland_Cities.csv\")","9c8a5095":"deutschland_cities.head()","986ef63c":"deutschland_cities_subset = deutschland_cities.iloc[:50]","28bbb3ca":"fig = px.sunburst(deutschland_cities_subset, path=['admin_name', 'city'], values='population',\n                  color_continuous_scale='RdBu',title=\"Germany Cities and their Populations\")\n\nfig.show()","4b69997e":"fig = go.Figure(data=[go.Table(header=dict(values=['Student', 'Notes']),\n                 cells=dict(values=[[\"John\",\"Kate\",\"Herry\",\"Anastacia\"], [65, 85, 50, 95]]))])\nfig.show()","1de8fa3d":"fig = go.Figure(data=[go.Table(header=dict(values=['Student', 'Notes'],line_color='black',\n                fill_color='yellow',align='left'),\n                cells=dict(values=[[\"John\",\"Kate\",\"Herry\",\"Anastacia\"], [65, 85, 50, 95]],\n                          line_color='darkslategray',fill_color='lightcyan', align='left'))])\nfig.show()","9a597ad7":"### Scatter Plots","0967338a":"We can create scatter plots by using **plt.scatter()** function.","7cface2c":"For multilevel pie charts representing hierarchical data, we can use the *Sunburst* chart. ","bbc90930":"We can use **px.pie()** function to create pie charts.","0af44e28":"The *markers* parameter applies a style mapping on the off-diagonal axes. Currently, it will be redundant with the hue variable.","53d2a5a3":"A bubble chart is a scatter plot in which a third dimension of the data is shown through the size of markers. What's why we will use **px.scatter()** function in order to cretae bubble chart.","cfb04efc":"As with other figure-level functions, the size of the figure is controlled by setting the *height* of each individual subplot:","528e866a":"### Gannt Charts","990f8e18":"Each of them is optional. If not provided, the value from the style cycle is used. Exception: If line is given, but no marker, the data will be a line without markers.","fa965b8a":"**tight_layout** automatically adjusts subplot params so that the subplot(s) fits in to the figure area. This is an experimental feature and may not work for some cases. It only checks the extents of ticklabels, axis labels, and titles.\n\nFor more example and details: https:\/\/matplotlib.org\/stable\/tutorials\/intermediate\/tight_layout_guide.html","5b8a094a":"**plot.area()** function can be used to make area plots.","3c586ba2":"In order to create contour plot, first we will use numpy's **meshgrid** function, and then use contour function.","b8b782f6":"Contour plots (sometimes called Level Plots) are a way to show a three-dimensional surface on a two-dimensional plane. It graphs two predictor variables X Y on the y-axis and a response variable Z as contours. These contours are sometimes called the z-slices or the iso-response values.","edc5b71d":"### Bar Plot","ae5f1c99":"For a real world example, we will work with Human Resources Data Set.\n\nDataset can be downloaded from here : https:\/\/www.kaggle.com\/rhuebner\/human-resources-data-set\n\nWe will read it with pandas.","f4d2793a":"For a real world example, we will use tips dataset of Seaborn.","585b2a12":"### Hexagonal Bin Plots","5cca91aa":"### Heatmap","0f917366":"We will also add software engineer's salary to our graph.","7e63777e":"Seaborn has several datasets inside of it. We will use flights dataset for a real world example. First we will load the data.","911ce2dd":"We can also add median and mean of Salaries.","95e4f31b":"We can use the *labels* and *colors* arguments to specify the labels and colors of each wedge.","fc255dd3":"It is often desirable to show data which depends on two independent variables as a color coded image plot. This is often referred to as a *heatmap*. If the data is categorical, this would be called a *categorical heatmap*.\n\nA heat map is a data visualization technique that shows magnitude of a phenomenon as color in two dimensions. The variation in color may be by hue or intensity, giving obvious visual cues to the reader about how the phenomenon is clustered or varies over space. It's generally used to understand *correlations* between variables.\n\nMatplotlib's **imshow()** or **heatmap()** function makes production of such plots particularly easy. **matplotlib.pyplot.pcolormesh()** is an alternative function.","9cd5590a":"We can also plot multiple bar plots.","adc370cf":"We can also fill inside of plot by using **contourf()** function.","085bba58":"### Line Plot","b40f358e":"For a real world example, we will use **tips** dataset of Seaborn.","a3ab4dc2":"We can change the colors manually by using *color_discrete_sequence* argument.","2cabbc20":"Let's plot a normal distribution(bell shape)","5fbed9b6":"We can add labels.","2e797088":"For a real world example, we will use **flights** dataset of Seaborn.","78a707a6":"We can specify the width with *width* argument.","d0e5d155":"If Plotly Express does not provide a good starting point, it is also possible to use the more generic *go.Pie* class *from plotly.graph_objects*.","36d40bbd":"We can add a line to plot.","75723843":"Sum of Values for wedges can be different than 100. The size of each wedge is determined by comparing the value with all the other values, by using this formula:\n\n*The value divided by the sum of all values: x\/sum(x)*","8fdd6f5c":"If we want to change labels, we need to give data seperately.","f3d776db":"### Bar Plot","5956bcad":"A histogram is a graph showing frequency distributions.\n\nIt is a graph showing the number of observations within each given interval.\n\nWe use **hist()** function in order to create histograms.","c8d0683e":"For a real world example, we will use iris dataset of Seaborn.","6f9a4519":"We can also create stacked area charts by using **go.Scatter()** function.","571044ff":"### Plotting Time Series","f6acfbd3":"We can change the dot size and color.","de116c99":"The *jitter* parameter controls the magnitude of jitter or disables it altogether.","8227a2fa":"The idea of stack plots is to show \u201cparts to a whole\u201d over time; basically, it\u2019s like a pie-chart, only over time.","a1cdb64d":"The *plot_kws* and *diag_kws* parameters accept dicts of keyword arguments to customize the off-diagonal and diagonal plots, respectively.","9a37bb53":"For a real world example, we will use a dataset that contains Germany Cities and their information.\n\nYou can download the dataset here: https:\/\/simplemaps.com\/data\/de-cities","4ba23474":"### Scatter Plots","e4a7c3c8":"We will check if there is a relationship between salaries and Engagement Survey Scores of employees.","5b3acca2":"For a real world example, we will work with Human Resources Data Set.\n\nDataset can be downloaded from here : https:\/\/www.kaggle.com\/rhuebner\/human-resources-data-set\n\nWe will read it with pandas.","c97cf123":"We will work with *Salary* column.","e2b3caf1":"### Pie Plots","7254dfe4":"### Cat Plot","7ef75b23":"### Contour(Level) Plots","92d812c7":"For a real world example, we will use tips dataset of Seaborn.","a5f1a632":"If we pass the entire dataset in long-form mode will aggregate over repeated values (each year) to show the mean and 95% confidence interval.","f9b6487d":"![image.png](attachment:image.png)","0391a7c9":"We can also create multiple line plots.","6ecae0ad":"We can make it horizontal. We will use *orient* argument for that.","e142e5f5":"We will use **go.figure()** in order to create donut chart and we will use *hole* argument for that.","3bea02ac":"**kde** is something we'll always provide when creating a histogram, as leaving it out will create a slightly different plot.","bc7d808c":"For a real world example, we will work with Human Resources Data Set.\n\nDataset can be downloaded from here : https:\/\/www.kaggle.com\/rhuebner\/human-resources-data-set\n\nWe will read it with pandas.","b0bd2300":"Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python.\n\nMatplotlib makes easy things easy and hard things possible.\n\n**Official Page of Matplotlib:** https:\/\/matplotlib.org\/stable\/index.html","ddae0a64":"### Sunburst Charts","51aef5d2":"When exploring multi-dimensional data, a useful approach is to draw multiple instances of the same plot on different subsets of our dataset. This technique is sometimes called either *lattice* or *trellis* plotting, and it is related to the idea of \u201csmall multiples\u201d.\n\nThe **FacetGrid** class is useful when we want to visualize the distribution of a variable or the relationship between multiple variables separately within subsets of our dataset. \n\nEach of *relplot(), displot(), catplot()*, and *lmplot()* use this object internally, and they return the object when they are finished so that it can be used for further tweaking.","bdc529dd":"We can also specify the arguments:","8ed51371":"We can also add extra parameter with *color* argument.","fdcf7c3b":"In order to add labels, we can use **update_traces()** function.","75480eb1":"We're not restricted to a single column when creating a KDE plot. We can create a two-dimensional (2D) KDE plot with the **sns.jointplot** command.","02a5b803":"We can use **plt.pie()** function to create pie plots.","1c29303f":"### Box Plot","152ad2d6":"We can also add shadows by making *shadow* argument *True*.","9b62bb25":"### Pair Plot","2c480618":"### Histograms","641d47b5":"**Adding Labels to x and y**","ee171d9c":"We can also see each month by one by.","68501299":"### Area Plots","4898d7b9":"We can give bin values spesifically.","a34a5e20":"We will work with *Salary* column.","1d27141f":"### Bar Plots","f0d20ff7":"We can specify the size of bins.","033266d5":"A time series is a sequence of numerical data points in successive order. In investing, a time series tracks the movement of the chosen data points, such as a security's price, over a specified period of time with data points recorded at regular intervals.","a3b03078":"Scatter plots are used to plot data points on horizontal and vertical axis in the attempt to show how much one variable is affected by another.","8bc166ce":"For a real world example, we will work with Human Resources Data Set.\n\nDataset can be downloaded from here : https:\/\/www.kaggle.com\/rhuebner\/human-resources-data-set\n\nWe will read it with pandas.","e4537b2d":"We will also add software engineer's salary to our graph.","42033958":"We will use **sns.heatmap()** function in order to create heatmaps.","7a796cf2":"To create a simple scatter plot, we use the **sns.scatterplot()** command.","09e82294":"We can also make plots that has many columns.","0470fa00":"We can make *showfliers* argument False in order to hide Outlier Points.","bc79b1dd":"We can plot one column versus another using the *x* and *y* keywords.","c2f0e765":"It\u2019s possible to force marginal histograms by using *diag_kind* argument.","156f037f":"## Content\n\n- Main Libraries for Data Visualisation\n\n- What is Exploratory data analysis(EDA) ?\n\n- Importing Libraries\n\n- **Matplotlib**\n\n    - Pyplot\n    \n    - Line Plot\n    \n    - Bar Plot\n    \n    - Pie Chart\n    \n    - Stack Plot\n    \n    - Histograms\n    \n    - Scatter Plot\n    \n    - Time Series Plotting\n    \n    - Box Plot\n    \n    - Heatmap\n\n- **Seaborn**\n\n    - Pyplot\n    \n    - Line Plot\n    \n    - Bar Plot\n    \n    - Cat Plot\n    \n    - Histograms\n    \n    - Density Plots\n    \n    - Pair Plot\n    \n    - Scatter Plot\n    \n    - Time Series Plotting\n    \n    - Box Plot\n    \n    - Heatmap\n    \n    - Multi-plot Grids\n   \n- **Pandas**\n\n    - Basic Plots\n    \n    - Bar Plots\n    \n    - Histograms\n    \n    - Box Plots\n    \n    - Area Plots\n    \n    - Scatter Plots\n    \n    - Hexagonal Bin Plots\n    \n    - Pie Plots\n    \n    - Plotting Tools\n\n- **Plotnine - ggplot**\n\n    - Line Plot\n    \n    - Bar Plot\n    \n    - Scatter Plot\n    \n    - Histograms\n    \n    - Density Plot\n    \n    - Box Plot\n    \n    - Violin Plot\n\n- **Plotly**\n\n    - Line Plot\n    \n    - Bar Plot\n    \n    - Pie Charts\n    \n    - Bubble Charts\n    \n    - Scatter Plots\n    \n    - Filled area Plots\n    \n    - Gannt Charts\n    \n    - Sunburst Charts\n    \n    - Tables","6a2a784e":"### Box Plot","f04d86fa":"### Pie Charts","4944c169":"We can create a scatter plot matrix using the **scatter_matrix()** method","eb7d1214":"#### Density Plots","d2b19a2e":"We can change the colors.","0cdaa625":"In order to create facetted subplots, we can use *facet_row* argument.","074e407e":"We can also use **go.Figure()** function.","6619e48e":"To double-check the strength of this relationship, we might like to add a regression line, or the line that best fits the data. We do this by changing the command to **sns.regplot**.","2298a8b0":"*Gridsize* argument controls the number of hexagons in the x-direction, and defaults to 100. A larger gridsize means more, smaller bins.","0a4f0bf4":"pandas. pandas is a fast, powerful, flexible and easy to use open source data analysis and manipulation tool, built on top of the Python programming language. It also gives visualizing opportunities.","9ea05231":"Usually, we use scatter plots to highlight the relationship between two continuous variables (like \"salary\" and \"engagement survey score\"). However, we can adapt the design of the scatter plot to feature a categorical variable (like \"sex\") on one of the main axes. We'll refer to this plot type as a *categorical scatter plot*, and we build it with the **sns.swarmplot()** command.","b8c27604":"In order to produce a stacked bar plot, pass *stacked* argument True.","b343e0b7":"In order to get horizontal bar plots, we can use the **plt.barh()** method.","7da40419":"We can also change the marker.","222961fa":"### Bar Plots","983f14de":"### Plotting Tools","f75affbd":"We can use scatter plots to display the relationships between three variables! One way of doing this is by *color-coding* the points.\n\nFor instance, to understand how gender affects the relationship between salaries and Engagement Survey Scores of employees, we can color-code the points by 'Sex', and plot the other two columns on the axes. We will use **hue** argument for that.","270afb35":"A Gantt chart is a useful graphical tool which shows activities or tasks performed against time. It is also known as visual presentation of a project where the activities are broken down and displayed on a chart which makes it is easy to understand and interpret.\n\n**px.timeline()** function will help us to create gannt chart.","ab51d8b6":"### Histograms","0813ae36":"In order to plot multiple column groups in a single axes, we should repeat **plot()** method specifying target *ax*. It is recommended to specify color and label keywords to distinguish each groups.","1726ec67":"- https:\/\/towardsdatascience.com\/exploratory-data-analysis-in-python-c9a77dfa39ce\n- https:\/\/en.wikipedia.org\/wiki\/Exploratory_data_analysis\n- https:\/\/realpython.com\/tutorials\/data-viz\/\n- https:\/\/realpython.com\/courses\/interactive-data-visualization-python-bokeh\/\n- https:\/\/realpython.com\/python-matplotlib-guide\/\n- https:\/\/www.kaggle.com\/learn\/data-visualization\n- https:\/\/github.com\/EnginAlpman\n- https:\/\/www.w3schools.com\/python\/matplotlib_intro.asp\n- https:\/\/www.data-to-viz.com\/\n- https:\/\/www.python-graph-gallery.com\/\n- https:\/\/seaborn.pydata.org\/\n- https:\/\/mybinder.org\/v2\/gh\/bokeh\/bokeh-notebooks\/master?filepath=tutorial%2F00%20-%20Introduction%20and%20Setup.ipynb\n- https:\/\/github.com\/groundhogday321\/python-plotnine\/blob\/main\/python%20plotnine%20ggplot2.ipynb","94d0e707":"For a real world example, we will work with Human Resources Data Set.\n\nDataset can be downloaded from here : https:\/\/www.kaggle.com\/rhuebner\/human-resources-data-set\n\nWe will read it with pandas.","395d20a0":"We can draw a boxplot with nested grouping by two categorical variables.","914d50b3":"As an example, let's see flights in June months.","610825bf":"![image.png](attachment:image.png)","a80bcec2":"### Violin Plot","259c71da":"### Basic Plots","acd3e62f":"In order to produce an unstacked plot, we need to pass *stacked* argument False.","de320832":"If we want use stand one of the wedges out, we can use *pull* parameter.It takes an array with one value for each edge.","95685aa1":"We can save the plot as an image by using **save()** function.","a912abfc":"If we pass values that sum total is less than 1.0, it draws a semicircle.","06a114c3":"### Filled Area Plots","feef0418":"It lets you visualize plots of every combination of various attributes together, so you can look for interesting patterns between features. We will use **sns.pairplot()** function in order to plot.","db80acc5":"We can add lines between each cell by using *linewidths* argument.","2d2bdb56":"We can customize the bar chart.","d7c71af4":"We will plot data scientist's salaries with respect to their experiences. In order to do it, we can use **sns.lineplot()** function.","f8e5eb81":"**Adding a Title**","775557f5":"For a real world example, we will work with Human Resources Data Set.\n\nDataset can be downloaded from here : https:\/\/www.kaggle.com\/rhuebner\/human-resources-data-set\n\nWe will read it with pandas.","3425b066":"Let's plots salaries of data scientists by their gender. We will use *hue* argument for that.","88a0fd54":"In order to add a list of explanation for each wedge, we can use the **legend()** function.","fa795425":"We can colorize Boxplot by passing *color* keyword. ","c62779b7":"**go.Table()** function provides us a Table object for detailed data viewing.","da02ad42":"If we want a smaller plot, we should use less variables. For example, if we only want sepal_width and sepal_length, than would create a 2x2 plot.","43932fd0":"We can change the styles.","2cf06c6a":"A barplot (or barchart) is one of the most common types of graphic. It shows the relationship between a numeric and a categoric variable. Each entity of the categoric variable is represented as a bar. The size of the bar represents its numeric value.","c0681819":"We can also map EmpSatisfaction to color scheme and PerformanceScore to size.","124dbbf6":"We can change the style of the plots. In order to see all available styles:","ff5e12d0":"We can save figures by using **savefig** argument.","7880f34e":"**Plotting Multiple Graphs in One Graph**","155ef5f1":"We can also change the location of legend with **loc** argument.","eb209002":"By default the plotting of the first wedge starts from the x-axis and move counterclockwise:","30a12c0b":"Hexagonal Binning is another way to manage the problem of having to many points that start to overlap. Hexagonal binning plots density, rather than points. Points are binned into gridded hexagons and distribution (the number of points per hexagon) is displayed using either the color or the area of the hexagons.\n\nWe can use **plt.hexbin()** function for that.","9c7d58d3":"By making *notch* argument True, we can create notched boxes.","2d9d1f45":"We can stack a histogram by making *stacked* argument True. Bin size can be changed using the *bins* keyword.","01e57634":"### Pie Chart","3c906be7":"We can visualize the data that has a spesific total.","1c916f61":"At the end:","c5e06fa7":"We can change the colormap by using *cmap* argument.","0777b034":"We can give the colors manually.","ac402cc5":"The size of the individual boxplots can be altered with the *width* parameter. The default width is 1, so anything less of that creates a smaller width for the boxes.","ebdc53c2":"We can use **px.line** function in order to draw a line plot.","17ba5042":"Now we'll create plots to understand differences between Performance Scores of Employees. In order to do that, first we will divide dataset into 4 datasets by performance score.","d19bf7ba":"We can use **sns.lineplot()** function in order to plot time series in seaborn.","327231cb":"## Plotnine - ggplot","95e9ecf9":"## Importing Libraries","206eefed":"You can also add features and colormaps.","042a31ec":"### Bar Plots","1a56a9d6":"In order to create Filled Area Plots, we will use **px.are()** function.","d45c0616":"In order to create bar plots, we can use **px.bar()** function.","4ab04ee2":"For a real world example, we will use **flights** dataset of Seaborn.","4921be34":"### Pyplot","da843a5a":"If we set *corner=True* to plot only the lower triangle.","c2bd9da3":"In descriptive statistics, a box plot or boxplot is a method for graphically depicting groups of numerical data through their quartiles. Box plots may also have lines extending from the boxes (whiskers) indicating variability outside the upper and lower quartiles. We will use **sns.boxplot()** function for that.","c1b21561":"We can import these functions from **pandas.plotting** and give a *Series* or *DataFrame* as an argument.","c648af73":"We can make multiple bar plots at the same time. **plt.bar()** function will help us for that.","be37aba0":"We can also visualize multiple data as boxplot.","c8b18c55":"### Scatter Plot","c0c87c80":"A Line plot can be defined as a graph that displays data as points or check marks above a number line, showing the frequency of each value.","29ea8f05":"We can also add a title to legends by using *title* parameter.","c711dac8":"Let's make a pivot table in order to make this dataset ready to plot heatmap. Otherwise heatmap will not work.","68ff4163":"We will plot data scientist's salaries with respect to their experiences.","6384fac2":"We can create a density plot matrix using the **plt.kde()** function.","1ded81a5":"For a real world example, we will use iris dataset of Seaborn.","c7e1aef8":"We can draw horizontal and cumulative histograms by making *orientation* argument *'horizontal'* and *cumulative* argument True.","027a39a7":"## Matplotlib","8205729d":"In order to draw box plots, we can use **plot.box()** function.","88c6c149":"We can combine bar and line plot.","c22f6e5c":"For a real world example, we will use *tips* dataset of seaborn. First we will load it.","87c41828":"The plot method on Series and DataFrame is just a simple wrapper around **plt.plot()**.","db879841":"Pyplot is a collection of functions that make matplotlib work like MATLAB. Each pyplot function makes some change to a figure","b40dbeb2":"We can create plots with different markers.","a74309a7":"In descriptive statistics, a box plot or boxplot is a method for graphically depicting groups of numerical data through their quartiles. Box plots may also have lines extending from the boxes (whiskers) indicating variability outside the upper and lower quartiles. We will use **plt.boxplot()** function for that.","5345abf8":"**Plotting Multiple Graphs in One Graph**","af03f0b6":"#### Autocorrelation plot","5c81a5f1":"In order to make a relational plot, we need to pass multiple variable names. We can also provide *keyword* arguments, which will be passed to the plotting function.","a2c4d818":"Seaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics.","998507a3":"**ff.create_gantt()** function will help us plotting easier. It just wants a dataframe that includes *Task, Start* and *Finish* columns.","89c73032":"## Plotly","887cd59a":"### Box Plots","959d9b33":"We can add other parameters with the *hover_data* argument. ","1db417f7":"We can plot a heatmap for data centered on 500 with a diverging colormap.","918ad7b3":"We can give third parameter as point size.","e3397d61":"**Plotting Multiple Graphs in One Graph**","c30eb4a3":"In statistics, exploratory data analysis is an approach to analyzing data sets to summarize their main characteristics, often using statistical graphics and other data visualization methods. A statistical model can be used or not, but primarily EDA is for seeing what the data can tell us beyond the formal modeling or hypothesis testing task.\n\n It is understanding the data sets by summarizing their main characteristics often plotting them visually. This step is very important especially when we arrive at modeling the data in order to apply Machine learning. Plotting in EDA consists of Histograms, Box plot, Scatter plot and many more. It often takes much time to explore the data. Through the process of EDA, we can ask to define the problem statement or definition on our data set which is very important","daf5805b":"The return object is the underlying *PairGrid*, which can be used to further customize the plot.","21409531":"In order to see better, we will get first 50 rows.","b0d53ebd":"Plotnine is based on ggplot2. ggplot2 is a data visualization package for the statistical programming language R. ggplot2 is an implementation of grammar of graphics.\n\naes (aesthetics) used to create new ggplot object and at geom level.","231f7f60":"If we want use stand one of the wedges out, we can use *explode* parameter.It takes an array with one value for each edge.","5f51d546":"## Pandas","a66dd750":"We can plot it horizontal by making *vert* argument False.","8b56ceda":"### Histogram","3c30bd18":"We can also plot two different plots.","278bd785":" Figure-level interface for drawing categorical plots onto a FacetGrid. This function provides access to several axes-level functions that show the relationship between a numerical and one or more categorical variables using one of several visual representations.","d7528d7c":"We can use **stackplot()** built-in function.","cd5496b9":"### Scatter Plots","4fa78f23":"### Plotting Time Series","c255a911":"## Main Libraries for Data Visualisation","2e2902f1":" A **pie chart (or a circle chart)** is a circular statistical graphic, which is divided into slices to illustrate numerical proportion. In a pie chart, the arc length of each slice (and consequently its central angle and area), is proportional to the quantity it represents.","33401472":"We can use **swarmplot()** to show the datapoints on top of the boxes.","1a106d82":"## Resources","98e8095a":"We can change the limits of colormap by using *vmin* and *vmax* arguments.","59dcb190":"We can annotate each cell with the numeric value using integer formatting. We can use *annot* argument for that.","e9a86a3a":"We can draw horizontal box plot by making *vert* argument False.","cfe8847a":"A Sunburst Diagram is used to visualize hierarchical data, depicted by concentric circles. The circle in the centre represents the root node, with the hierarchy moving outward from the center. We can use **px.sunburst()** function.","a5b30d47":"### Violin Plots","ccb11ad5":"Seaborn gets data automatically as x stick. But if we specify it as y, it will be horizontal.","864344f8":"**Created by Berkay Alan**\n\n**Data Visualization with 5 Libraries- Exploratory Data Analysis(EDA)** \ud83d\udcc8 \ud83d\udcca \n\n**2 of April, 2021**\n\n**For more Tutorial: https:\/\/github.com\/berkayalan**","8ad834d5":"### Scatter Plots","506369b7":"Violin plots are similar to box plots, except that they also show the probability density of the data at different values. These plots include a marker for the median of the data and a box indicating the interquartile range, as in the standard box plots.","8a72fe59":"First we need to create new ggplot object. Then we will add layers and labels. At the end we will use **draw()** function in order to plot.","21438c17":"Assigning a hue variable adds a semantic mapping and changes the default marginal plot to a layered kernel density estimate (KDE).","d25d2482":"For a real world example, we will use **iris** dataset of Seaborn.","2fb216ad":"We can draw a boxplot for each numeric variable in a DataFrame.","d36aedf5":"### Line Plots","5004166a":"### Heatmap","36c5a259":"In order to see the dataframe on monthly basis, we will do a pivot table by using **pivot()** function.","4532d46a":"We can fill below of the lines by using *stackplot*.","16064b81":"A density plot is a representation of the distribution of a numeric variable. It uses a kernel density estimate to show the probability density function of the variable. It is a smoothed version of the histogram and is used in the same concept.\n\nIt is said \"Kernel Density Plot\" in general. We will use **sns.kdeplot** command for that.","8c080212":"### Bubble Charts","90580883":"We can also change size of the chart with **figsize** argument","61da41c6":"### Density plots","dea1c441":"A format string consists of a part for color, marker and line:","4ef08cb5":"We can't understand which line represents what, we need to add **legend**. We can add them as a list or we can add them in the beginning.","a7ee138e":"#### Andrews Curves","759db5fe":"Let's make a pivot table in order to make this dataset ready to plot heatmap. Otherwise heatmap will not work.","5184756c":"### Density plots","6f2e34a5":"For a real world example, we will work with Human Resources Data Set.\n\nDataset can be downloaded from here : https:\/\/www.kaggle.com\/rhuebner\/human-resources-data-set\n\nWe will read it with pandas.","99c1e42c":"We will use **barplot()** function.","0a967adc":"You can change dot size by values.","9a2dd27b":"But you can change the start angle by specifying a startangle parameter. The *startangle* parameter is defined with an angle in degrees, default angle is 0.","4cc218c3":"## What is Exploratory data analysis(EDA) ?","09d8f7f9":"For a real world example, we will work with Human Resources Data Set.\n\nDataset can be downloaded from here : https:\/\/www.kaggle.com\/rhuebner\/human-resources-data-set\n\nWe will read it with pandas.","c7ba5b1b":"We can also set color of each wedge with *colors* parameter.\n\nSome of possible color options are here:\n\n| Shortage | Colour|\n| --- | ---|\n| \"r\" | Red|\n| \"g\" | Green|\n| \"b\" | Blue|\n| \"c\" | Cyan|\n| \"m\" | Magenta|\n| \"y\" | Yellow|\n| \"k\" | Black|\n| \"w\" | White|\n\nfor more color option: https:\/\/www.w3schools.com\/colors\/colors_names.asp","d3019f00":"### Histograms","304c69a4":"We can add edge colors in order to interpret the table better.","ffb1c9ae":"### Tables","ee119c01":"We can also create horizontal bar plots by making *orientation* argument 'h'.","8b2f0c39":"Autocorrelation plots are often used for checking randomness in time series. This is done by computing autocorrelations for data values at varying time lags. If time series is random, such autocorrelations should be near zero for any and all time-lag separations. If time series is non-random then one or more of the autocorrelations will be significantly non-zero.\n\nWe will use **autocorrelation_plot()** function for that.","9956878a":"As you can see, x axis does not represent true values of experiences, so we can solve it with **xticks()** method.","83870a1e":"### Boxplot","d2b13a79":"We can use *vars* or *x_vars* and *y_vars* to select the variables to plot.","b223da4d":"#### Scatter Matrix Plots","fcce0279":"## Seaborn","30fccbda":"It seems that in the **x** axis, the values of 8 doesn't seem ok. We can shift the plots.","8ef11699":"### Stack Plot","d4532d8c":"If some values are so higher, we can use logarithmic scale to plot.","97f30c52":"We can change the sizes.","f3676128":"### Multi-plot Grids","8256a77e":"plotly is an interactive, open-source, and browser-based graphing library for Python.\n\nBuilt on top of plotly.js, plotly.py is a high-level, declarative charting library. plotly.js ships with over 30 chart types, including scientific charts, 3D graphs, statistical charts, SVG maps, financial charts, and more.","297a5051":"In order to create scatter plot, we will use **px.scatter()** function.","3d736f4a":"Andrews curves allow one to plot multivariate data as a large number of curves that are created using the attributes of samples as coefficients for Fourier series. **andrews_curves()** function will help us to create plots.","c4e66aa0":"### Line Plots","8e753909":"We can use **plt.hist()** function for plotting histogram.","eaa4df21":"- **Matplotlib**: Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python.\n\n- **Seaborn**: Seaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics.\n\n- **Pandas**: Pandas is a fast, powerful, flexible and easy to use open source data analysis and manipulation tool, built on top of the Python programming language.\n\n- **ggplot**: ggplot is a system for declaratively creating graphics, based on The Grammar of Graphics.\n\n- **Bokeh**: Bokeh is an interactive visualization library for modern web browsers. It provides elegant, concise construction of versatile graphics.\n\n- **Plotly**: Plotly's Python graphing library makes interactive, publication-quality graphs.","c437894a":"We can create barplots by specifying kind of plot as *bar*.","fb9e9a3e":"### Line Plots","d6eb7fd1":"We can use the **sns.lmplot()** command to add two regression lines, corresponding to males and females.","55dc499c":"We can add percentages of slices by using *autopct* argument.","d8cd23c1":"We can combine bar and line plot.","32c1dec6":"If we don't want a colorbar, we need to make *cbar* argument false."}}