{"cell_type":{"ff32e1d5":"code","a623d757":"code","6293bbc1":"code","cab3044d":"code","53ddfc0b":"code","a294278b":"code","64a1a67d":"code","60a4c3b2":"code","d6c9f515":"code","3b8a31d8":"code","2775892c":"code","1db0e0db":"code","b9ce9ead":"code","573e8155":"code","26b53090":"code","8b066ca3":"code","5a8fcc55":"code","7f6f3e59":"code","2e692cca":"code","110c1b70":"code","7cd46805":"markdown","e04f4892":"markdown","4c5bc6fd":"markdown","db9dd598":"markdown","216dc78e":"markdown","c6ea7429":"markdown","34f6d9fd":"markdown","9000b2eb":"markdown","a42be365":"markdown","07ca7119":"markdown","3ddc6ed9":"markdown","85dd17a0":"markdown","d1ab5c4d":"markdown","7bde7692":"markdown","418ad0a4":"markdown","8fc3dafa":"markdown","b3d34bda":"markdown","34a9ae15":"markdown","14421ee3":"markdown","ab814dcc":"markdown","9903be66":"markdown","e27fb9d5":"markdown","240dbb4e":"markdown","b2ab941c":"markdown","89bf9fe1":"markdown","58c68d07":"markdown"},"source":{"ff32e1d5":"def check_categorical_dependency(crosstab_table,confidence_interval):\n    stat, p, dof, expected = scipy.stats.chi2_contingency(crosstab_table)\n    print('Chi-Squared statistic value = {}'.format(stat))\n    print('P - value = {}'.format(p))\n    alpha = 1.0 - confidence_interval\n    if p <= alpha:\n        print('Dependent (reject H0)')\n    else:\n        print('Independent (fail to reject H0)')","a623d757":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport scipy.stats\nimport pandas_profiling\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.linear_model import LogisticRegression\nimport statsmodels.api as sm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nplt.rcParams['figure.figsize']=10,5","6293bbc1":"df=pd.read_csv('..\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\nprint('DataFrame shape:',df.shape)\ndf.head()","cab3044d":"df.describe(include='all')","53ddfc0b":"placement_percent=df.status.value_counts(normalize=True)\nsns.barplot(placement_percent.index,placement_percent.values)\nplt.xlabel('Placement Status')\nplt.ylabel('Percentage')\nplt.title('Placement Percentage')\n# plt.tight_layout()\nprint(placement_percent)","a294278b":"plt.figure(figsize=(17,5))\n\nplt.subplot(1,3,1)\nsns.countplot(df.gender)\nplt.title('Gender count')\n\nplt.subplot(1,3,2)\nsns.countplot(df.gender,hue=df.status)\n#plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0)\nplt.xlabel('Gender')\nplt.ylabel('Count')\nplt.title('Gender v\/s Placement count')\n\nplt.subplot(1,3,3)\nfemale_candi= df[df.gender=='F'].shape[0]\nfemale_placed=df[(df.gender=='F')&(df.status=='Placed')].shape[0]\nmale_candi= df[df.gender=='M'].shape[0]\nmale_placed=df[(df.gender=='M')&(df.status=='Placed')].shape[0]\n\nf_place_per= (female_placed\/female_candi)*100\nm_place_per= (male_placed\/male_candi)*100\n\nsns.barplot(x=['M','F'],y=[m_place_per,f_place_per])\nplt.xlabel('Gender')\nplt.ylabel('percentage')\nplt.title('Gender v\/s Placement percentage')\nplt.tight_layout()","64a1a67d":"male_df=df[df['gender']=='M']\nfemale_df=df[df['gender']=='F']","60a4c3b2":"plt.figure(figsize=(12,5))\nplt.subplot(1,2,1)\nsns.distplot(male_df.salary,hist=False,color='#3274a1')\nsns.distplot(female_df.salary,hist=False,color='#e1812c')\nplt.xlabel('salary')\nplt.title('salary based on gender')\n\nimport matplotlib.patches as mpatches\nred_patch = mpatches.Patch(color='#e1812c', label='female')\nblue_patch = mpatches.Patch(color='#3274a1', label='male')\nplt.legend(handles=[blue_patch,red_patch])\n\nplt.subplot(1,2,2)\nplt.ylim((250000,300000))\nplt.bar(x='male',height=male_df.salary.mean(),color='#3274a1')\nplt.bar(x='female',height=female_df.salary.mean(),color='#e1812c')\nplt.xlabel('gender')\nplt.ylabel('salary')\nplt.title('Gender vs mean salary')\nplt.tight_layout()","d6c9f515":"plt.figure(figsize=(10,5))\nsns.countplot(x='workex',data=df,hue='status')\nplt.title('Work experience v\/s placement')","3b8a31d8":"plt.figure(figsize=(10,5))\nplt.subplot(1,2,1)\nplt.ylim((50,75))\nssc=df.groupby('ssc_b')['ssc_p'].mean()\nsns.barplot(x=ssc.index,y=ssc.values)\nplt.ylabel('percentage')\nplt.title('ssc board v\/s percentage scored')\n\nplt.subplot(1,2,2)\nplt.ylim((60,70))\nhsc=df.groupby('hsc_b')['hsc_p'].mean()\nsns.barplot(x=hsc.index,y=hsc.values)\nplt.ylabel('percentage')\nplt.title('hsc board v\/s percentage scored')\nplt.tight_layout()","2775892c":"plt.figure(figsize=(17,5))\nplt.subplot(1,4,1)\nsns.violinplot(x='status',y='ssc_p',data=df)\nplt.title('status v\/s ssc percentage')\n\n\nplt.subplot(1,4,2)\nsns.violinplot(x='status',y='hsc_p',data=df)\nplt.title('status v\/s higher secondary percentage')\n\nplt.subplot(1,4,3)\nsns.violinplot(x='status',y='degree_p',data=df)\nplt.title('status v\/s degree percentage')\n\nplt.subplot(1,4,4)\nsns.violinplot(x='status',y='mba_p',data=df)\nplt.title('status v\/s MBA percentage')\n\n\nplt.tight_layout()","1db0e0db":"plt.figure(figsize=(12,5))\nplt.subplot(1,3,1)\nplt.ylim((250000,310000))\ndegree_salary=df.groupby('degree_t')['salary'].mean()\nsns.barplot(x=degree_salary.index, y=degree_salary.values)\nplt.xlabel('undergrad degree')\nplt.ylabel('salary')\nplt.title('undergrad degree v\/s salary')\n\nplt.subplot(1,3,2)\nplt.ylim((250000,310000))\nspec_salary=df.groupby('specialisation')['salary'].mean()\nsns.barplot(x=spec_salary.index, y=spec_salary.values)\nplt.xlabel('specialisation')\nplt.ylabel('salary')\nplt.title('specialisation v\/s salary')\n\nplt.subplot(1,3,3)\nplt.ylim((250000,310000))\nexp_salary=df.groupby('workex')['salary'].mean()\nsns.barplot(x=exp_salary.index, y=exp_salary.values)\nplt.xlabel('work experience')\nplt.ylabel('salary')\nplt.title('work experience v\/s salary')\n\n\nplt.tight_layout()","b9ce9ead":"x_p=df.loc[df['status']=='Placed',['ssc_p']].values\ny_p=df.loc[df['status']=='Placed',['hsc_p']].values\nz_p=df.loc[df['status']=='Placed',['degree_p']].values\n\nx_n=df.loc[df['status']!='Placed',['ssc_p']].values\ny_n=df.loc[df['status']!='Placed',['hsc_p']].values\nz_n=df.loc[df['status']!='Placed',['degree_p']].values\n\nfig=plt.figure(figsize=(20,10))\nax=fig.add_subplot(111,projection='3d')\nax.scatter(x_p,y_p,z_p,c='#3274a1')\nax.scatter(x_n,y_n,z_n,c='#e1812c')\nax.set_xlabel('ssc percentage')\nax.set_ylabel('hsc percentage')\nax.set_zlabel('degree percentage')\nax.set_title('ssc% - hsc% - degree% - placement')\n\nred_patch = mpatches.Patch(color='#e1812c', label='Not Placed')\nblue_patch = mpatches.Patch(color='#3274a1', label='Placed')\nplt.legend(handles=[blue_patch,red_patch])\n","573e8155":"cat_variables = df.describe(include='O').columns\ncat_variables=cat_variables.drop('status')","26b53090":"for var in cat_variables:\n    crosstab=pd.crosstab(df[var],df['status'])\n    print(var)\n    check_categorical_dependency(crosstab,0.95)\n    print('\\n')","8b066ca3":"model= sm.GLM.from_formula('status~ssc_p+hsc_p+degree_p+etest_p+mba_p',family=sm.families.Binomial(),data=df)#\nresult=model.fit()\nresult.summary()","5a8fcc55":"df.drop(['sl_no','mba_p','gender', 'ssc_b', 'hsc_b', 'hsc_s', 'degree_t','salary'],axis=1,inplace=True)","7f6f3e59":"y=df['status']\ndf.drop('status',axis=1, inplace=True)\nx=pd.get_dummies(df,drop_first=True)","2e692cca":"X_train,X_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=105)\n","110c1b70":"rf=RandomForestClassifier()\nrf.fit(X_train,y_train)\nprint(accuracy_score(y_test,rf.predict(X_test)))","7cd46805":"### Inference\nWork experience increases the propability of getting placed.","e04f4892":"## **Before we start**\n### If you like my work, please upvote this kernel since it will keep me motivated to perform more in-depth research on other datasets and produce more accurate models..","4c5bc6fd":"### Removing unwanted colummns","db9dd598":"Import required libraries","216dc78e":"## Statistical tests to findout significance of variables","c6ea7429":"required functions","34f6d9fd":"### Inference\n1. Students who are placed, usually score higher than the students who are not placed.\n2. It does not hold ground when it comes to MBS percentages, both the student groups(placed and not placed) score similarly in MBA.","9000b2eb":"## EDA\nIn EDA phase, we will explore the data and try to get insights from it and find out the relationship between the variables.\n1. Does the selection of education board impact chances of getting placed?\n2. Correlation between the marks scored in college and MBA with salary.\n3. Impact of gender, specialization, and work experience on placements.","a42be365":"## Objective\nThis Kernel will help us find out the statistically significant factors that affect the placement of the students. We will start by exploring the data and finding the relationship with the placement of the student, so let us get started.","07ca7119":"### Inference\nAround 70% of the students are placed.","3ddc6ed9":"<font size=\"+3\" ><b> <center>Factors influencing campus placement<\/u><\/center><\/b><\/font>","85dd17a0":"## Loading and exploring the data.","d1ab5c4d":"### Inference\n1. mean and median income of female students is less than male students\n2. male(mean, median) = (298910, 270000)\n3. female(mean, median) = (267291, 250000)","7bde7692":"### Inference\nStudents who score better in secondary and undergraduation have higher probability of getting placed.","418ad0a4":"### Logistic regression to find out significant numerical variables.\nlogistic regression can be used to find out the significant variables that statistically impact the target.\nif P is less than 0.05 the variable is significant, if >0.05 it is not significant and can be omitted from the model.","8fc3dafa":"### Inference\n1. Students with under graduation in science and technology are paid more than students from commerce&management and others.\n2. MBA specialisation in Marketing and finance pays more than Marketing and HR.\n3. Students with work experience are paid more than freshers.","b3d34bda":"### Chi square test for categorical variables\nA chi-square test is used in statistics to test the independence of two events. Given the data of two variables, we can get observed count O and expected count E. Chi-Square measures how expected count E and observed count O deviates each other.\n\nLet\u2019s consider a scenario where we need to determine the relationship between the independent category feature (predictor) and dependent category feature(response). In feature selection, we aim to select the features which are highly dependent on the response.","34a9ae15":"### Inference\nPercentage of marks scored by students in different boards of secondary education are similar.","14421ee3":"Model is performace is really good","ab814dcc":"### Inference\n1. gender, ssc_b, hsc_b, hsc_s, degree_t doesnot impact the placement oppurtunity.\n2. workexp, and specialisation has significant impact on placement.","9903be66":"![placement_image.png](attachment:placement_image.png)","e27fb9d5":"Hope you would have learned something from kernal...Please upvote my kernal...Your support mean a lot to me!!!","240dbb4e":"## About the data\nThis data set consists of Placement data of students in a XYZ campus. It includes secondary, higher secondary school percentage, specialization, degree specialization, Work experience and salary offered to the students placed.","b2ab941c":"### Inference\n1. (139)65% of the students are male.\n2. 72% of male students are placed when compared to 63% of female students","89bf9fe1":"### Inference\nall the numerical variables are significant except etest_p.","58c68d07":"Dataframe.describe(include='all'), gives us all the required descriptive stats\nwhich include\n1. the total number of non NULL values.\n2. If it is a categorical variable, the number of unique values in it.\n3. Most frequent value in the categorical variable.\n4. Descriptive statistics like minimum, maximum, mean, standard deviation, (25-50-75) quantiles."}}