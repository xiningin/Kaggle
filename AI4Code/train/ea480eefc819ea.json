{"cell_type":{"b1ab0d9f":"code","637f5bb9":"code","6ef0e76e":"code","e0a38b90":"code","ce77532f":"code","7716d0ee":"code","9d28cc08":"code","fdac2b1c":"code","50eff366":"code","8c970ace":"code","83b7ceea":"code","83435c1d":"code","1c9cc949":"code","75836383":"code","68c16ef2":"code","d5ba61a8":"code","892e4048":"code","bcb685f2":"code","bbc6109b":"code","7c4c07c3":"code","dfaa55a1":"code","a77fd8d7":"code","0807e1a8":"code","770898e9":"code","980fe859":"code","f348702d":"code","de420b5c":"code","8925e174":"code","8efb7b31":"code","91ecdd0b":"code","184040f2":"code","815b0de7":"code","10342eca":"code","9a8e2ee2":"code","3d7ab93a":"markdown","423990dd":"markdown","951fb440":"markdown","d11cb00e":"markdown","c059ec19":"markdown","05a6de76":"markdown","3af651e8":"markdown","20af4f10":"markdown","09eb3255":"markdown","1df833bd":"markdown"},"source":{"b1ab0d9f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.simplefilter(\"ignore\")","637f5bb9":"df = pd.read_csv(\"..\/input\/admissionpredictions\/Admission_Predict_Ver1.1.csv\")\ndf.head()","6ef0e76e":"df.info()","e0a38b90":"# Checking if there are any missing values in the dataset\ndf.isnull().sum()","ce77532f":"# Having a look at the correlation matrix\n\nfig, ax = plt.subplots(figsize=(8,6)) \nsns.heatmap(df.corr(), annot=True, fmt='.1g', cmap=\"viridis\", cbar=False);","7716d0ee":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6)) \nplt.xlabel(\"CGPA\")\nplt.title(\"CGPA Trend of the Applicants\")\nsns.histplot(x=df[\"CGPA\"], color=\"purple\", kde=True);","9d28cc08":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6)) \nplt.xlabel(\"GRE Scores\")\nplt.title(\"GRE Score Trend of the Applicants\")\nsns.histplot(x=df[\"GRE Score\"], color=\"red\",kde=True);","fdac2b1c":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6)) \nplt.xlabel(\"TOEFL\")\nplt.title(\"TOEFL Score Trend of the Applicants\")\nsns.histplot(x=df[\"TOEFL Score\"], color=\"navy\",kde=True);","50eff366":"plt.style.use(\"seaborn\")\nsns.jointplot(x=df[\"TOEFL Score\"], y=df[\"GRE Score\"], color=\"skyblue\");","8c970ace":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6)) \nplt.xlabel(\"University Rating\")\nplt.title(\"Univeristy Ratings\")\nsns.countplot(x=df[\"University Rating\"], palette=\"hls\");","83b7ceea":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6)) \nplt.xlabel(\"Research\")\nplt.title(\"Research\")\nsns.countplot(x=df[\"Research\"], palette=\"viridis\");","83435c1d":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6)) \nplt.xlabel(\"SOP\")\nplt.title(\"SOP of the Applicants\")\nsns.countplot(x=df[\"SOP\"], palette=\"hls\");","1c9cc949":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6)) \nplt.xlabel(\"Chance of Admit\")\nplt.title(\"Chance of Admit of the Applicants\")\nsns.histplot(x=df[\"Chance of Admit \"], color=\"darkgreen\",kde=True);","75836383":"df.head()","68c16ef2":"# Dropping the \"Serial No.\" column\ndf.drop(\"Serial No.\", axis=1, inplace=True)","d5ba61a8":"df.head()","892e4048":"X = df.drop('Chance of Admit ', axis=1)\ny = df['Chance of Admit ']","bcb685f2":"X.head()","bbc6109b":"y.head()","7c4c07c3":"# Splitting the data into X train, X test and y train, y test\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","dfaa55a1":"len(X_train), len(X_test)","a77fd8d7":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(X_train, y_train)","0807e1a8":"LinearRegressionScore = lr.score(X_test, y_test)\nprint(\"Accuracy obtained by Linear Regression model:\",LinearRegressionScore*100)","770898e9":"from sklearn.ensemble import RandomForestRegressor\nrfr = RandomForestRegressor()\nrfr.fit(X_train,y_train)","980fe859":"RandomForestRegressorScore = rfr.score(X_test, y_test)\nprint(\"Accuracy obtained by Random Forest Regressor model:\",RandomForestRegressorScore*100)","f348702d":"from sklearn.tree import DecisionTreeRegressor\ntree = DecisionTreeRegressor()\ntree.fit(X_train,y_train)","de420b5c":"DecisionTreeRegressorScore = tree.score(X_test, y_test)\nprint(\"Accuracy obtained by Decision Tree Regressor model:\",DecisionTreeRegressorScore*100)","8925e174":"from sklearn.neighbors import KNeighborsRegressor\nknn = KNeighborsRegressor()\nknn.fit(X_train, y_train)","8efb7b31":"KNeighborsRegressorScore = knn.score(X_test, y_test)\nprint(\"Accuracy obtained by K Neighbors Regressor model:\",KNeighborsRegressorScore*100)","91ecdd0b":"from sklearn.ensemble import AdaBoostRegressor\nada = AdaBoostRegressor()\nada.fit(X_train, y_train)","184040f2":"AdaBoostRegressorScore = ada.score(X_test, y_test)\nprint(\"Accuracy obtained by AdaBoost Regressor model:\",AdaBoostRegressorScore*100)","815b0de7":"from sklearn.ensemble import GradientBoostingRegressor\ngbr = GradientBoostingRegressor()\ngbr.fit(X_train, y_train)","10342eca":"GradientBoostingRegressorScore = gbr.score(X_test, y_test)\nprint(\"Accuracy obtained by Gradient Boosting Regressor model:\",GradientBoostingRegressorScore*100)","9a8e2ee2":"plt.style.use(\"seaborn\")\n\nx = [\"DecisionTreeRegressor\",\n     \"KNeighborsRegressor\",\n     \"AdaBoostRegressor\",\n     \"GradientBoostingRegressor\",\n     \"RandomForestRegressor\", \n     \"LinearRegression\"]\n\ny = [DecisionTreeRegressorScore,\n     KNeighborsRegressorScore, \n     AdaBoostRegressorScore, \n     GradientBoostingRegressorScore,\n     RandomForestRegressorScore, \n     LinearRegressionScore]\n\nfig, ax = plt.subplots(figsize=(8,6))\nsns.barplot(x=x,y=y, palette=\"crest\");\nplt.ylabel(\"Model Accuracy\")\nplt.xticks(rotation=40)\nplt.title(\"Model Comparison - Model Accuracy\", fontsize=14, fontname=\"Helvetica\", y=1.03);","3d7ab93a":"# College Admissions Analysis and Predictions","423990dd":"### Random Forest Regressor","951fb440":"### Linear Regression","d11cb00e":"### Splitting the data into training and test datasets\nHere, we are trying to predict the **Chance of Admit** of the applicant using the given data.\nHence, the `Chance of Admit` will be the `y` label\nand the rest data will be the `X` or the input data.","c059ec19":"#### If you like my work, It will be really great of you to upvote this notebook!\n\n#### If not then you leaving a comment on what do I need to work on and improve will be really great!","05a6de76":"### Loading up the data","3af651e8":"Majority of the applicants have their `GRE Scores ranging from 315 to 325`. The maximum GRE Score is 340 and the minimum is 290. On an average the GRE Score of the applicant seems to be 315.","20af4f10":"Majority of the applicants have their `CGPA ranging from 8 to 9.3`.\nThe maximum CGPA is 9.9 and the minimum CGPA is 6.9","09eb3255":"Majority of the applicants have their `TOEFL Scores ranging from 100 to 115`.\nThe maximum TOEFL Score is 120 and the minimum is 92. On an average the TOEFL Score of the applicant seems to be 107.","1df833bd":"### Importing libraries"}}