{"cell_type":{"a2b84b77":"code","d83deb78":"code","22f7075e":"code","51f8ff1b":"code","886104da":"code","33c0e796":"code","1dd3f512":"code","920366fd":"code","9e75f367":"code","642b8061":"code","510f3af2":"code","874cbda3":"code","d26d7df8":"code","9659c60b":"code","4c254575":"code","9012499e":"code","6a7577d9":"code","673a1754":"code","091f919c":"code","f2061ee0":"code","6a725956":"code","8adc7cde":"code","07aecae3":"code","f1c3009e":"code","1a8f4460":"code","956d4fc5":"code","44ed644e":"code","ca35e577":"code","b035a585":"code","10ef2f98":"code","3f4778ef":"code","be1b456a":"code","8843c3b0":"code","d76fdee1":"code","abb3bb41":"code","ff3f3336":"code","c1c334f9":"code","59f678e3":"code","31222963":"code","41ab9099":"code","467ee7e3":"code","d22ad39b":"code","14428a11":"code","2113924e":"code","3d11079d":"code","80b251a9":"code","3940b154":"code","d233dd83":"markdown","02c50904":"markdown","47625686":"markdown","ecda5c6f":"markdown","0e191857":"markdown","c2ee03f8":"markdown","e3a71fc0":"markdown","11c37ab7":"markdown","d2b563ac":"markdown","e4489a03":"markdown","653669da":"markdown","466c4630":"markdown","76659bd8":"markdown","fa4a23b3":"markdown","ca4466dc":"markdown","6ee6b1cf":"markdown","b8ea51cf":"markdown","51a64e75":"markdown","90b19195":"markdown","af46926b":"markdown","bf762fb4":"markdown","725595e8":"markdown","52d073d3":"markdown","4cadbf72":"markdown","ac086e09":"markdown","80e3a99b":"markdown","d18ab46b":"markdown","d4973650":"markdown","10674095":"markdown","59dbaeca":"markdown","74fe5df6":"markdown","e535fcd7":"markdown","004962ca":"markdown","08e274f7":"markdown","ac94e4a4":"markdown","d28c02bd":"markdown","a1e0fb6d":"markdown","55ba7056":"markdown","ebeb9aed":"markdown","75096df0":"markdown","86a8ed3c":"markdown","c643d717":"markdown","6eb94f89":"markdown","1a6a2a98":"markdown","65bafdd4":"markdown","63cf9061":"markdown","2be56fe8":"markdown","72abfb47":"markdown","b5b30ad4":"markdown","55306bb6":"markdown","0dbe8968":"markdown","dfb05172":"markdown","88d2406d":"markdown","6d638ad8":"markdown","7a6eef42":"markdown","84116077":"markdown","1e62349a":"markdown","04bbecda":"markdown","2ac05bed":"markdown","d1e45265":"markdown","f85aecd1":"markdown","9ea25d3c":"markdown","68cc2644":"markdown","d3c4ea03":"markdown","4ba03366":"markdown","70870271":"markdown","2de7a12c":"markdown","0c561868":"markdown","776e4fcf":"markdown","2e1cc5e8":"markdown","8df4f0d5":"markdown","9c8e38d1":"markdown","c121b5cc":"markdown","40f60ce8":"markdown","c561f27b":"markdown","50cdc70c":"markdown","4355cac5":"markdown","69256dd6":"markdown","0b8c27a0":"markdown","92e57f85":"markdown","74671660":"markdown","af96d8b0":"markdown","bc64be2b":"markdown","0b69e8eb":"markdown","181d4cd0":"markdown"},"source":{"a2b84b77":"# import libaries\nimport calendar\nimport datetime\nimport folium\nimport glob\nimport matplotlib.pyplot as plt\nimport numpy as np \nimport os\nimport pandas as pd \nimport plotly.express as px\nimport seaborn as sns\nimport statistics\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","d83deb78":"#import districts_info \ndistricts_info = pd.read_csv ('..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv')\n\n#import products_info \nproducts_info = pd.read_csv ('..\/input\/learnplatformcompetition\/products_info.csv')\n\n#import all engagement data\npath = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data'\nfilenames = glob.glob(path + \"\/*.csv\")\ndfs = []\nfor filename in filenames:\n    dfs.append(pd.read_csv(filename))\n\n# Concatenate all engagement_data csvs into one DataFrame\nengagement_data = pd.concat(dfs, ignore_index=True)\n","22f7075e":"#Drop Rows Containing Nulls\ndistricts_info = districts_info.dropna(how='any') \n\n# Remove \"[\" from  columns\ndistricts_info['pct_black\/hispanic'] = (districts_info['pct_black\/hispanic'].str.strip('[').astype(object))\ndistricts_info['pct_free\/reduced'] = (districts_info['pct_free\/reduced'].str.strip('[').astype(object))\ndistricts_info['county_connections_ratio'] = (districts_info['county_connections_ratio'].str.strip('[').astype(object))\ndistricts_info['pp_total_raw'] = (districts_info['pp_total_raw'].str.strip('[').astype(object))\n\n\n# Extract data from columns\ndistricts_info[['Prop_Black', 'Prop_Hispanic']] = districts_info['pct_black\/hispanic'].str.split(',', expand=True)\ndistricts_info[['Prop_Free_Lunch', 'Prop_Reduced_Lunch']] = districts_info['pct_free\/reduced'].str.split(',', expand=True)\ndistricts_info[['Calc_Ratio_HighSpeed_Connection', 'Calc_Ratio_Household']] = districts_info['county_connections_ratio'].str.split(',', expand=True)\ndistricts_info[['Local_Expenditure_PerPupil', 'Federal_Expenditure_PerPupil']] = districts_info['pp_total_raw'].str.split(',', expand=True)\n\n# Spefify type of columns\nconvert_dict = {'Prop_Black': float,\n                'Prop_Hispanic': float,\n                'Prop_Free_Lunch': float,\n                'Prop_Reduced_Lunch': float,\n                'Calc_Ratio_HighSpeed_Connection': float,\n                'Calc_Ratio_Household': float,\n                'Local_Expenditure_PerPupil': float,\n                'Federal_Expenditure_PerPupil': float}  \ndistricts_info = districts_info.astype(convert_dict)  \n\n# Calculate new columns\ndistricts_info['HighSpeedConnection_Ratio'] = districts_info['Calc_Ratio_HighSpeed_Connection'] \/ districts_info['Calc_Ratio_Household']\ndistricts_info['Prop_Race_Other'] = (100 - (districts_info['Prop_Black'] + districts_info['Prop_Hispanic'])) \/ 100\ndistricts_info['Prop_Black'] = districts_info['Prop_Black'] \/100\ndistricts_info['Prop_Hispanic'] = districts_info['Prop_Hispanic'] \/100 \ndistricts_info['Prop_NoDiscount_Lunch'] = (100 - (districts_info['Prop_Free_Lunch'] + districts_info['Prop_Reduced_Lunch'])) \/ 100\ndistricts_info['Prop_Free_Lunch'] = districts_info['Prop_Free_Lunch'] \/100\ndistricts_info['Prop_Reduced_Lunch'] = districts_info['Prop_Reduced_Lunch'] \/100 \ndistricts_info['Expenditure_Diff_Fed_Minus_Local'] = districts_info['Federal_Expenditure_PerPupil'] - districts_info['Local_Expenditure_PerPupil']\n\n\n#Keep relevent columns\ndistricts_info = districts_info[['state', 'locale', 'Prop_Black', 'Prop_Hispanic', 'Prop_Race_Other', 'Prop_Free_Lunch', 'Prop_Reduced_Lunch', 'Prop_NoDiscount_Lunch', 'Local_Expenditure_PerPupil', 'Federal_Expenditure_PerPupil', 'Expenditure_Diff_Fed_Minus_Local']]\n\n#Save\ndistricts_info.to_csv(r'C:\\\\Users\\\\caran\\\\Kaggle\\\\LearnPlatform_COVID-19_Impact_on_Digital_Learning\\\\Data\\\\districts_info2.csv')\n\n\ndisplay(districts_info)\n\n# View unique states in the dataset\ndistricts_info.state.unique()\n\n\n# Create dataframe storing 2 letter abbrevation of each state in the incoming data\n#Data from: https:\/\/excelnotes.com\/states-abbreviations-in-us\/\nstate_names_dict = {'state': ['Illinois','Utah','Wisconsin','North Carolina','Washington','Indiana','Virginia', 'Missouri', 'New Jersey', 'New York','Minnesota', 'Texas', 'Florida', 'Michigan'],\n       'state_short': ['IL','UT','WI','NC','WA','IN','VA','MO','NJ','NY','MN','TX','FL','MI']}\nstate_names = pd.DataFrame(state_names_dict)\nstate_shorthand = state_names['state_short']\n\n#Join state_names dataframe to the district dataset\ndistricts_info= pd.merge(districts_info, state_names, on='state', how='left')\n\n\n# State Average\n#Sum all proportions\nstate_sum = districts_info.groupby(['state'])['Prop_Black', 'Prop_Hispanic', 'Prop_Race_Other', 'Prop_Free_Lunch', 'Prop_Reduced_Lunch', 'Prop_NoDiscount_Lunch'].sum().reset_index()\n#Count mumber of entries\nstate_count = pd.DataFrame(districts_info.groupby(['state'])['state_short'].count())\n\n#Find mean proportion by state\nstate_calcs= pd.merge(state_sum, state_count, on='state', how='left')\nstate_calcs['Percentage Black Students by State'] = round(state_calcs['Prop_Black']  \/ state_calcs['state_short'] *100, 2)\nstate_calcs['Percentage Hispanic Students by State'] = round(state_calcs['Prop_Hispanic']  \/ state_calcs['state_short'] *100,2)\nstate_calcs['Percentage Non Black or Hispanic Students by State'] = round(state_calcs['Prop_Race_Other']  \/ state_calcs['state_short'] *100,2)\nstate_calcs['Percentage of Students eligible to Free Lunch by State'] = round(state_calcs['Prop_Free_Lunch']  \/ state_calcs['state_short'],2)\nstate_calcs['Percentage of Students eligible to Reduced Lunch by State'] = round(state_calcs['Prop_Reduced_Lunch']  \/ state_calcs['state_short'] *100,2)\nstate_calcs['Percentage of Students not eligible to a Free or Reduced Lunch by State'] = round(state_calcs['Prop_NoDiscount_Lunch']  \/ state_calcs['state_short'] *100,2)\nstate_calcs= pd.merge(state_calcs, state_names, on='state', how='left')\nstate_calcs.rename(columns={'state_short_y' : 'state_short'}, inplace=True)\n\nstate_summary = state_calcs[['state_short','Percentage Black Students by State','Percentage Hispanic Students by State','Percentage Non Black or Hispanic Students by State','Percentage of Students eligible to Free Lunch by State','Percentage of Students eligible to Reduced Lunch by State','Percentage of Students not eligible to a Free or Reduced Lunch by State']]\n\n\n\n# State Locale Average\ndistricts_info['state_locale'] = districts_info['state_short'] +'_'+ districts_info['locale']#\n#Sum all proportions\nstate_locale_sum = districts_info.groupby(['state_locale'])['Prop_Black', 'Prop_Hispanic', 'Prop_Race_Other', 'Prop_Free_Lunch', 'Prop_Reduced_Lunch', 'Prop_NoDiscount_Lunch'].sum().reset_index()\n#Count mumber of entries\nstate_locale_count = pd.DataFrame(districts_info.groupby(['state_locale'])['state_locale'].count())\nstate_locale_count.rename(columns={'state_locale' : 'count'}, inplace=True)\n\n#Find mean proportion by state\nstate_locale_calcs= pd.merge(state_locale_sum, state_locale_count, on='state_locale', how='left')\nstate_locale_calcs['Percentage Black Students by State Locale'] = round(state_locale_calcs['Prop_Black']  \/ state_locale_calcs['count'] *100, 2)\nstate_locale_calcs['Percentage Hispanic Students by State Locale'] = round(state_locale_calcs['Prop_Hispanic']  \/ state_locale_calcs['count'] *100,2)\nstate_locale_calcs['Percentage Non Black or Hispanic Students by State Locale'] = round(state_locale_calcs['Prop_Race_Other']  \/ state_locale_calcs['count'] *100,2)\nstate_locale_calcs['Percentage of Students eligible to Free Lunch by State Locale'] = round(state_locale_calcs['Prop_Free_Lunch']  \/ state_locale_calcs['count'],2)\nstate_locale_calcs['Percentage of Students eligible to Reduced Lunch by State Locale'] = round(state_locale_calcs['Prop_Reduced_Lunch']  \/ state_locale_calcs['count'] *100,2)\nstate_locale_calcs['Percentage of Students not eligible to a Free or Reduced Lunch by State Locale'] = round(state_locale_calcs['Prop_NoDiscount_Lunch']  \/ state_locale_calcs['count'] *100,2)\n\n#Unconcatenate columns\nstate_locale_calcs['state_short'] = state_locale_calcs['state_locale'].str[:2]\nstate_locale_calcs['locale'] = state_locale_calcs['state_locale'].str[3:]\n\n#Create overall summary\nstate_locale_summary = state_locale_calcs[['state_short','locale','state_locale','Percentage Black Students by State Locale','Percentage Hispanic Students by State Locale','Percentage Non Black or Hispanic Students by State Locale','Percentage of Students eligible to Free Lunch by State Locale','Percentage of Students eligible to Reduced Lunch by State Locale','Percentage of Students not eligible to a Free or Reduced Lunch by State Locale']]\n\n#Create  summary by geographic area\nrural_summary = state_locale_summary[state_locale_summary.locale == \"Rural\"]\nsuburb_summary = state_locale_summary[state_locale_summary.locale == \"Suburb\"]\ntown_summary = state_locale_summary[state_locale_summary.locale == \"Town\"]\ncity_summary = state_locale_summary[state_locale_summary.locale == \"City\"]\n\n#Drop columns\nrural_summary = rural_summary.drop(['state_short', 'locale', 'state_locale'], axis=1)\ncity_summary = city_summary.drop(['state_short', 'locale', 'state_locale'], axis=1)\ntown_summary = town_summary.drop(['state_short', 'locale', 'state_locale'], axis=1)\nsuburb_summary = suburb_summary.drop(['state_short', 'locale', 'state_locale'], axis=1)\n\n#Create total row\nrural_summary_total = rural_summary.append(rural_summary.sum(numeric_only=True), ignore_index=True)\ncity_summary_total = city_summary.append(city_summary.sum(numeric_only=True), ignore_index=True)\ntown_summary_total = town_summary.append(town_summary.sum(numeric_only=True), ignore_index=True)\nsuburb_summary_total = suburb_summary.append(suburb_summary.sum(numeric_only=True), ignore_index=True)\n\n#Extract total row\nrural_summary_total = rural_summary_total.iloc[-1,:]\ncity_summary_total = city_summary_total.iloc[-1,:]\ntown_summary_total = town_summary_total.iloc[-1,:]\nsuburb_summary_total = suburb_summary_total.iloc[-1,:]\n\n#Count number of rows by geographic area\nrural_summary_rows = rural_summary.count()[0]\ncity_summary_rows = city_summary.count()[0]\ntown_summary_rows = town_summary.count()[0]\nsuburb_summary_rows = suburb_summary.count()[0]\n\n#Divide total \/ no of obersvations\nrural_summary_pie_chart = rural_summary_total \/ rural_summary_rows\ncity_summary_pie_chart = city_summary_total \/ city_summary_rows\ntown_summary_pie_chart = town_summary_total \/ town_summary_rows\nsuburb_summary_pie_chart = suburb_summary_total \/ suburb_summary_rows\n\n#Turn to list\nrural_summary_pie_chart = rural_summary_pie_chart.tolist()\ncity_summary_pie_chart = city_summary_pie_chart.tolist()\ntown_summary_pie_chart = town_summary_pie_chart.tolist()\nsuburb_summary_pie_chart = suburb_summary_pie_chart.tolist()\n\n#Create lists for charts\nrural_summary_race_pie_chart = rural_summary_pie_chart[:3]\nrural_summary_lunch_pie_chart = rural_summary_pie_chart[3:]\ncity_summary_race_pie_chart = city_summary_pie_chart[:3]\ncity_summary_lunch_pie_chart = city_summary_pie_chart[3:]\ntown_summary_race_pie_chart = town_summary_pie_chart[:3]\ntown_summary_lunch_pie_chart = town_summary_pie_chart[3:]\nsuburb_summary_race_pie_chart = suburb_summary_pie_chart[:3]\nsuburb_summary_lunch_pie_chart = suburb_summary_pie_chart[3:]\n","51f8ff1b":"# Data type check\nengagement_data['time'] = pd.to_datetime(engagement_data['time'])\n\n# Create Month column\nengagement_data['Month'] = engagement_data['time'].dt.month_name()","886104da":"# Engagement_index is the Total page-load events per one thousand students of a given product and on a given day \nengagement_data['time'] = pd.to_datetime(engagement_data['time'])\n\n# Merge products and engagement data\nproducts_engagement_data = pd.merge(products_info, engagement_data, left_on='LP ID', right_on='lp_id')\n","33c0e796":"# Select the time, engagement_index columns and month columns\ndata = engagement_data[['time', 'engagement_index', 'Month']]\n\n# Create the engagement data into a data frame\ndf = pd.DataFrame(data)\n\n# Set the date column as the index of your DataFrame housing\nindexTime = df.set_index('time', 'engagement_index', 'Month')\n\n# Replace null values with the mean engagement index\nindexTime['engagement_index'] = indexTime['engagement_index'].fillna((indexTime['engagement_index'].mean()))\n\n# Set figure size\nplt.figure(figsize=(20,15))\n\n# Create line plot\nax =sns.lineplot(data=indexTime, x='time', y='engagement_index', hue='Month', style='Month')\n\n# Set title \nax.set_title('Engagement Over 2020')\n\n# Label x axis\nax.set_xlabel('Time') \n\n# Label y axis\nax.set_ylabel('Engagement Index') ","1dd3f512":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\n#img = mpimg.imread('..\/input\/allkagglephotos\/Kaggle Photos\/Screenshot 2021-09-30 at 15.23.13.png')\n#imgplot = plt.imshow(img)\nfrom PIL import Image\nimage = Image.open(\"..\/input\/allimages\/theimage1.png\")\nimgplot = plt.imshow(image)\n\n","920366fd":"plt.figure(figsize=(20,15))\nax =sns.lineplot(data=indexTime, x='time', y='engagement_index', hue='Month', style='Month')\nax.set_title('Engagement with US Stimulus Check 2020')\nax.set_xlabel('Time') \nax.set_ylabel('Engagement Index') \n\n\nax3 = ax.axvline('2020-01-31', color='black', linestyle='--')\nax4 = ax.axvline('2020-03-11', color='black', linestyle='--')\nax5 = ax.axvline('2020-05-28', color='black', linestyle='--')\nax6 = ax.axvline('2020-06-10', color='black', linestyle='--')\nax7 = ax.axvline('2020-08-17', color='black', linestyle='--')\nax8 = ax.axvline('2020-09-17', color='black', linestyle='--')\nax9 = ax.axvline('2020-09-28', color='black', linestyle='--')\nax10 = ax.axvline('2020-11-04', color='black', linestyle='--')\n\n\n# add a phase vertical line \ni = ax.axvline('2020-03-31', color='red', linestyle='-')\nb = ax.axvline('2020-06-30', color='red', linestyle='-')\nc = ax.axvline('2020-09-30', color='red', linestyle='-')\n","9e75f367":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\n\nimg = mpimg.imread('..\/input\/allimages\/theimage2.png')\nimgplot = plt.imshow(img)\n","642b8061":"#Make the time column to datetime\nproducts_engagement_data['time'] = pd.to_datetime(products_engagement_data['time'])  \n\n#Select data greater than the start date and smaller than the end date\nphase1 = (products_engagement_data['time'] > '2020-01-01') & (products_engagement_data['time'] <= '2020-03-31')\n\n#Select data from phase 1\nphase1 = products_engagement_data.loc[phase1]\n\nphase1Engagement = phase1[['time', 'engagement_index', 'Month']]\nphase1Engagement = pd.DataFrame(phase1Engagement)\n#fillna or replace \nphase1Engagement['engagement_index'] = phase1Engagement['engagement_index'].fillna((phase1Engagement['engagement_index'].mean()))\n","510f3af2":"plt.figure(figsize=(10,5))\nax =sns.lineplot(data=phase1Engagement, x='time', y='engagement_index', hue='Month', style='Month')\nax.set_title('Engagement Over Phase 1')\nax.set_xlabel('Time') \nax.set_ylabel('Engagement Index') \n","874cbda3":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage3.png')\nimgplot = plt.imshow(img)\n","d26d7df8":"phase1PEF = phase1[['time', 'engagement_index', 'Month', 'Primary Essential Function']]\nphase1PEF = pd.DataFrame(phase1PEF)\n#fillna or replace \nphase1PEF['engagement_index'] = phase1PEF['engagement_index'].fillna((phase1PEF['engagement_index'].mean()))\n\nplt.figure(figsize=(20,15))\nax = sns.countplot(y=\"Primary Essential Function\", \n                data=phase1PEF)\nax.set_title('Most Common Primary Essential Function')\nax.set_xlabel('Primary Essential Function') \nax.set_ylabel('Number of Counts') \n\nax","9659c60b":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage4.png')\nimgplot = plt.imshow(img)","4c254575":"products_engagement_data['time'] = pd.to_datetime(products_engagement_data['time'])  \nphase2 = (products_engagement_data['time'] > '2020-04-01') & (products_engagement_data['time'] <= '2020-06-30')\nphase2 = products_engagement_data.loc[phase2]\nphase2Engagement = phase2[['time', 'engagement_index', 'Month']]\nphase2Engagement = pd.DataFrame(phase2Engagement)\nphase2Engagement['engagement_index'] = phase2Engagement['engagement_index'].fillna((phase2Engagement['engagement_index'].mean()))\n","9012499e":"plt.figure(figsize=(10,5))\nax =sns.lineplot(data=phase2Engagement, x='time', y='engagement_index', hue='Month', style='Month')\nax.set_title('Engagement Over Phase 2')\nax.set_xlabel('Time') \nax.set_ylabel('Engagement Index') ","6a7577d9":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage5.png')\nimgplot = plt.imshow(img)","673a1754":"phase2PEF = phase2[['time', 'engagement_index', 'Month', 'Primary Essential Function']]\nphase2PEF = pd.DataFrame(phase2PEF)\n#fillna or replace \nphase2PEF['engagement_index'] = phase2PEF['engagement_index'].fillna((phase2PEF['engagement_index'].mean()))\n\nplt.figure(figsize=(20,15))\nax = sns.countplot(y=\"Primary Essential Function\", \n                data=phase2PEF)\nax.set_title('Most Common Primary Essential Function')\nax.set_xlabel('Primary Essential Function') \nax.set_ylabel('Number of Counts') \n\nax","091f919c":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage6.png')\nimgplot = plt.imshow(img)","f2061ee0":"products_engagement_data['time'] = pd.to_datetime(products_engagement_data['time'])  \n#greater than the start date and smaller than the end date\nphase3 = (products_engagement_data['time'] > '2020-07-01') & (products_engagement_data['time'] <= '2020-09-30')\nphase3 = products_engagement_data.loc[phase3]\n\nphase3Engagement = phase3[['time', 'engagement_index', 'Month']]\nphase3Engagement = pd.DataFrame(phase3Engagement)\n#fillna or replace \nphase3Engagement['engagement_index'] = phase3Engagement['engagement_index'].fillna((phase3Engagement['engagement_index'].mean()))\n","6a725956":"plt.figure(figsize=(10,5))\nax =sns.lineplot(data=phase3Engagement, x='time', y='engagement_index', hue='Month', style='Month')\nax.set_title('Engagement Over Phase 3')\nax.set_xlabel('Time') \nax.set_ylabel('Engagement Index') ","8adc7cde":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage7.png')\nimgplot = plt.imshow(img)","07aecae3":"phase3PEF = phase3[['time', 'engagement_index', 'Month', 'Primary Essential Function']]\nphase3PEF = pd.DataFrame(phase3PEF)\n#fillna or replace \nphase3PEF['engagement_index'] = phase3PEF['engagement_index'].fillna((phase3PEF['engagement_index'].mean()))\n\nplt.figure(figsize=(20,15))\nax = sns.countplot(y=\"Primary Essential Function\", \n                data=phase3PEF)\nax.set_title('Most Common Primary Essential Function')\nax.set_xlabel('Primary Essential Function') \nax.set_ylabel('Number of Counts') \n\nax","f1c3009e":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage8.png')\nimgplot = plt.imshow(img)\n","1a8f4460":"products_engagement_data['time'] = pd.to_datetime(products_engagement_data['time'])  \n#greater than the start date and smaller than the end date\nphase4 = (products_engagement_data['time'] > '2020-10-01') & (products_engagement_data['time'] <= '2020-12-31')\nphase4 = products_engagement_data.loc[phase4]\nphase4Engagement = phase4[['time', 'engagement_index', 'Month']]\nphase4Engagement = pd.DataFrame(phase4Engagement)\n#fillna or replace \nphase4Engagement['engagement_index'] = phase4Engagement['engagement_index'].fillna((phase4Engagement['engagement_index'].mean()))\n","956d4fc5":"plt.figure(figsize=(10,5))\nax =sns.lineplot(data=phase4Engagement, x='time', y='engagement_index', hue='Month', style='Month')\nax.set_title('Engagement Over Phase 1')\nax.set_xlabel('Time') \nax.set_ylabel('Engagement Index') ","44ed644e":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage9.png')\nimgplot = plt.imshow(img)","ca35e577":"phase4PEF = phase4[['time', 'engagement_index', 'Month', 'Primary Essential Function']]\nphase4PEF = pd.DataFrame(phase4PEF)\n#fillna or replace \nphase4PEF['engagement_index'] = phase4PEF['engagement_index'].fillna((phase4PEF['engagement_index'].mean()))\n\nplt.figure(figsize=(20,15))\nax = sns.countplot(y=\"Primary Essential Function\", \n                data=phase4PEF)\nax.set_title('Most Common Primary Essential Function')\nax.set_xlabel('Primary Essential Function') \nax.set_ylabel('Number of Counts') \n\nax","b035a585":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage10.png')\nimgplot = plt.imshow(img)","10ef2f98":"\nfig = go.Figure(data=go.Choropleth(\n    locations=state_summary['state_short'], # Spatial chttp:\/\/localhost:8888\/notebooks\/Kaggle\/LearnPlatform_COVID-19_Impact_on_Digital_Learning\/LearnPlatform_COVID-19_Impact_on_Digital_Learning-CARA.ipynb#To-explore-the-socioeconomics-of-students-by-geographic-area-an-interactive-pie-chart-was-created.-Showing-similar-levels-of-lunch-aide-was-provided-by-each-geographic-area,-however-students-which-lived-in-cities-had-the-percentage-of-students-on-free-school-meals.oordinates\n    z = state_summary['Percentage of Students eligible to Free Lunch by State'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Reds',\n    colorbar_title = \"Percentage\",\n))\n\nfig.update_layout(\n    title_text = 'Percentage of Students eligible to Free Lunch by State',\n    geo_scope='usa', # limite map scope to USA\n)\n\nfig.show()","3f4778ef":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage11.png')\nimgplot = plt.imshow(img)","be1b456a":"\nfig = go.Figure(data=go.Choropleth(\n    locations=state_summary['state_short'], # Spatial coordinates\n    z = state_summary['Percentage of Students eligible to Reduced Lunch by State'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Oranges',\n    colorbar_title = \"Percentage\",\n))\n\nfig.update_layout(\n    title_text = 'Percentage of Students eligible to Reduced Lunch by State',\n    geo_scope='usa', # limite map scope to USA\n)\n\nfig.show()","8843c3b0":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage12.png')\nimgplot = plt.imshow(img)","d76fdee1":"fig = go.Figure(data=go.Choropleth(\n    locations=state_summary['state_short'], # Spatial coordinates\n    z = state_summary['Percentage of Students not eligible to a Free or Reduced Lunch by State'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'algae',\n    colorbar_title = \"Percentage\",\n))\n\nfig.update_layout(\n    title_text = 'Percentage of Students Not eligible to a Free or Reduced Lunch by State',\n    geo_scope='usa', # limite map scope to USA\n)\n\nfig.show()","abb3bb41":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage13.png')\nimgplot = plt.imshow(img)","ff3f3336":"labels = ['Free', 'Reduced', 'NoDiscount']\n\n# Define color sets of paintings\ncolors = ['red', 'yellow', 'limegreen']\n\n# Create subplots, using 'domain' type for pie charts\nspecs = [[{'type':'domain'}, {'type':'domain'}], [{'type':'domain'}, {'type':'domain'}]]\nfig = make_subplots(rows=2, cols=2, specs=specs)\n\n# Define pie charts\nfig.add_trace(go.Pie(labels=labels, values= rural_summary_lunch_pie_chart, name='Rural', marker_colors=colors), 1, 1)\nfig.add_trace(go.Pie(labels=labels, values=city_summary_lunch_pie_chart, name='City', marker_colors=colors), 1, 2)\nfig.add_trace(go.Pie(labels=labels, values=town_summary_lunch_pie_chart, name='Town', marker_colors=colors), 2, 1)\nfig.add_trace(go.Pie(labels=labels, values=suburb_summary_lunch_pie_chart, name='Suburb', marker_colors=colors), 2, 2)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\n\n# Tune layout and hover info\nfig.update_traces(hoverinfo='label+percent+name', textinfo='none')\n\nfig.update_layout(\n    title_text=\"Lunch Discounts by Geographic Area\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='Rural', x=0.2, y=0.805, font_size=12, showarrow=False),\n                 dict(text='City', x=0.79, y=0.805, font_size=12, showarrow=False),\n                 dict(text='Town', x=0.2, y=0.2, font_size=12, showarrow=False),              \n                 dict(text='Suburb', x=0.805, y=0.2, font_size=12, showarrow=False)])\n\nfig = go.Figure(fig)\nfig.show()","c1c334f9":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage14.png')\nimgplot = plt.imshow(img)","59f678e3":"fig = go.Figure(data=go.Choropleth(\n    locations=state_summary['state_short'], # Spatial coordinates\n    z = state_summary['Percentage Black Students by State'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Purples',\n    colorbar_title = \"Percentage\",\n))\n\nfig.update_layout(\n    title_text = 'Percentage Black Students by State',\n    geo_scope='usa', # limite map scope to USA\n)\n\nfig.show()","31222963":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage15.png')\nimgplot = plt.imshow(img)","41ab9099":"fig = go.Figure(data=go.Choropleth(\n    locations=state_summary['state_short'], # Spatial coordinates\n    z = state_summary['Percentage Hispanic Students by State'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Pinkyl',\n    colorbar_title = \"Percentage\",\n))\n\nfig.update_layout(\n    title_text = 'Percentage Hispanic Students by State',\n    geo_scope='usa', # limite map scope to USA\n)\n\nfig.show()","467ee7e3":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage16.png')\nimgplot = plt.imshow(img)","d22ad39b":"fig = go.Figure(data=go.Choropleth(\n    locations=state_summary['state_short'], # Spatial coordinates\n    z = state_summary['Percentage Non Black or Hispanic Students by State'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'PuBu',\n    colorbar_title = \"Percentage\",\n))\n\nfig.update_layout(\n    title_text = 'Percentage Students Not Black or Hispanic  by State',\n    geo_scope='usa', # limite map scope to USA\n)\n\nfig.show()","14428a11":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage17.png')\nimgplot = plt.imshow(img)","2113924e":"labels = ['Black', 'Hispanic', 'Other Race']\n\n# Define color sets of paintings\ncolors = ['indigo', 'magenta', 'deepskyblue']\n\n# Create subplots, using 'domain' type for pie charts\nspecs = [[{'type':'domain'}, {'type':'domain'}], [{'type':'domain'}, {'type':'domain'}]]\nfig = make_subplots(rows=2, cols=2, specs=specs)\n\n# Define pie charts\nfig.add_trace(go.Pie(labels=labels, values= rural_summary_race_pie_chart, name='Rural', marker_colors=colors), 1, 1)\nfig.add_trace(go.Pie(labels=labels, values=city_summary_race_pie_chart, name='City', marker_colors=colors), 1, 2)\nfig.add_trace(go.Pie(labels=labels, values=town_summary_race_pie_chart, name='Town', marker_colors=colors), 2, 1)\nfig.add_trace(go.Pie(labels=labels, values=suburb_summary_race_pie_chart, name='Suburb', marker_colors=colors), 2, 2)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\n\n# Tune layout and hover info\nfig.update_traces(hoverinfo='label+percent+name', textinfo='none')\n\nfig.update_layout(\n    title_text=\"Student Race by Geographic Area\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='Rural', x=0.2, y=0.805, font_size=12, showarrow=False),\n                 dict(text='City', x=0.79, y=0.805, font_size=12, showarrow=False),\n                 dict(text='Town', x=0.2, y=0.2, font_size=12, showarrow=False),              \n                 dict(text='Suburb', x=0.805, y=0.2, font_size=12, showarrow=False)])\n\nfig = go.Figure(fig)\nfig.show()","3d11079d":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage18.png')\nimgplot = plt.imshow(img)","80b251a9":"plt.figure(figsize=(20,15))\nax =sns.lineplot(data=indexTime, x='time', y='engagement_index', hue='Month', style='Month')\nax.set_title('US COVID-19 Policies and Practices with Online Engagement in 2020')\nax.set_xlabel('Time') \nax.set_ylabel('Engagement Index') \n\nax02 = ax.axvline('2020-01-20', color='black', linestyle='-')\nax03 = ax.axvline('2020-01-21', color='black', linestyle='-')\nax04 = ax.axvline('2020-02-02', color='black', linestyle='-')\nax05 = ax.axvline('2020-03-13', color='black', linestyle='-')\nax1 = ax.axvline('2020-03-19', color='black', linestyle='-')\nax2 = ax.axvline('2020-03-25', color='black', linestyle='-')\nax3 = ax.axvline('2020-03-26', color='black', linestyle='-')\nax4 = ax.axvline('2020-05-21', color='black', linestyle='-')\nax5 = ax.axvline('2020-08-11', color='black', linestyle='-')\nax6 = ax.axvline('2020-08-13', color='black', linestyle='-')\nax7 = ax.axvline('2020-09-01', color='black', linestyle='-')\nax8 = ax.axvline('2021-09-14', color='black', linestyle='-')\nax9 = ax.axvline('2020-09-16', color='black', linestyle='-')\nax10 = ax.axvline('2020-10-09', color='black', linestyle='-')\nax11 = ax.axvline('2020-10-22', color='black', linestyle='-')\nax12 = ax.axvline('2020-12-31', color='black', linestyle='-')\n","3940b154":"from PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimg = mpimg.imread('..\/input\/allimages\/theimage19.png')\nimgplot = plt.imshow(img)","d233dd83":"### The Role of Geography on Education - Poverty.","02c50904":"Image name - theimage11.png","47625686":"We can see that similar to phase 1 the LC - Digital learning platforms is the most common PEF with Resources and Reference are the next highest.","ecda5c6f":"#### Clean Engagement Data","0e191857":"Phase 2 decreases over time and leads to the lowest online engagement as discussed previously in the overall analysis for 2020. ","c2ee03f8":"Image name - theimage3.png","e3a71fc0":"We can see that when COVID-19 is announced by WHO as a pandemeic in March 2020 that there is an increase in online engagement over following month of April. However these annoucements can be analysed further by focusing the following plots.","11c37ab7":"We can see that similar to phase 1 the LC - Digital learning platforms is the most common PEF with Content creation and curation and LC- Sites, Resources and Reference are the next highest.","d2b563ac":"#### Most Common Primary Essential Function Phase 1 ","e4489a03":"To understand the effects of COVID-19 on online engagement we can analyse whether there if the annoucement of any political policies and practices coincided with the changes in the engagement index from the the data. The following dates provide a timeline of the policies and changes introduced by the US government. ","653669da":"#### Visualisation of Phase 4","466c4630":"To conclude our analysis, 2020 was a very interesting year not just on the world but also for education. Our analysis investigated the changing patterns in education throughout each phase of 2020, and the key trends with look to continue.  We then also investigated systematic challenges to equal and fair access to education, such as geography, socio-economic and race in the United States of America. \n\nOverall, within the scope of the dataset, we saw seasonality trends, but the demand for online education to increase. Finally, we would hope you enjoyed our analysis on online education, from the different nuances of perspectives we took. Many thanks and enjoy learning :)","76659bd8":"#### Merge Product Data and Engagement Data\n","fa4a23b3":"### What is the picture of digital connectivity and engagement in 2020?","ca4466dc":"### Phase 2: 2020-04-01 -> 2020-06-30","6ee6b1cf":"#### US COVID-19 Timeline of Policies and Practices","b8ea51cf":"Image name - theimage15.png","51a64e75":"#### Visualisation of Phase 3","90b19195":"Image name - theimage10.png","af46926b":"Image name - theimage6.png","bf762fb4":"\nFrom our analysis we have seen produced analysis of the geographic impact on students during the pandemic. We seen social-economic, race and location had an impact on learning. From wider literture we discussed that these factors have played a significant part in access to education. \nOur analysis saw the students which lived in cities and were of hispainc or black heriitage were at greatest chance to face challenges to education. A right wich some argue should be universal","725595e8":"#### Visualisation of Phase 2","52d073d3":"The red vertical lines within the plot split the data into 4 quarters of the year, these will referred to as phases with the following phases including data within a specific time period below:\n\n\nPhase 1: 2020-01-01 -> 2020-03-31\n\nPhase 2: 2020-04-01 -> 2020-06-30\n\nPhase 3: 2020-07-01 -> 2020-09-30\n\nPhase 4: 2020-10-01 -> 2020-12-31\n\n\nThis allows us to individually evaluate each phase of pandemic through 2020.","4cadbf72":"#### Percentage of Students eligible to Free Lunch by State\n","ac086e09":"#### Pie Charts of  Race by Geographic Area\n","80e3a99b":"#### ----------------------------------------------------------------------------------------------\n## Conclusion","d18ab46b":"#### Pie Charts of Lunch Discounts  by Geographic Area","d4973650":"Phase 3 shows the steady incline of online engagement throughout 2020 however leads to a higher peak of online engagement as discussed previously with an engagement index of over 45. The highest found on 2020 throughout the pandemic","10674095":"#### The Role of Geography on Education - Race","59dbaeca":"It is clear that the highest count of PEF is seen with LC - Digital Platform. With over  500,000 counts found within the dataset over the 1st phase. LC - Sites, Resources and References have high PEF with over 350, 000 counts in the 1st phase. With SDO- Environmental Health and Saftey (EHS) at the lowest with almost no counts. Interestingly, over 150,000 counts of PEF are referred to as Other which gives little to no indication of the PEF of the online engagement over phase 1 of 2020. ","74fe5df6":"#### Import Relevant Packages","e535fcd7":"### Phase 1: 2020-01-01 to 2020-03-31","004962ca":"#### Percentage Non Black or Hispanic Students by State\n","08e274f7":"#### Percentage of Students not eligible to a Free or Reduced Lunch by State","ac94e4a4":"We challenge the Kaggle community to explore the state of digital learning in 2020 and how the engagement of digital learning relates to factors such as district demographics, broadband access, and state\/national level policies and events.\n\nTo tackle this challenge this project will aim to answer the following:\n\nWhat is the picture of digital connectivity and engagement in 2020?\n\nHow does student engagement with online learning platforms relate to different geography?\n\nDo certain state interventions, practices or policies correlate with the increase or decrease online engagement?\n","d28c02bd":"January 20 \u2014 CDC Says 3 US Airports Will Begin Screening for Coronavirus\n\nJanuary 21 \u2014 CDC Confirms First US Coronavirus Case\n\nFebruary 2 \u2014 Global Air Travel Is Restricted\n\nFebruary 3 \u2014 US Declares Public Health Emergency\n\nMarch 13 \u2014 Trump Declares COVID-19 a National Emergency\n\nMarch 13 \u2014 Travel Ban on Non-US Citizens Traveling From Europe Goes Into Effect\n\nMarch 19 \u2014 California Issues Statewide Stay-at-Home Order\n\nMarch 25 \u2014 Reports Find Extended Shutdowns Can Delay Second Wave\n\nMarch 26 \u2014 Senate Passes CARES Act\n\nMay 21 \u2014 United States and AstraZeneca Form Vaccine Deal\n\nAugust 11 \u2014 Trump Administration Reaches Deal With Moderna\n\nAugust 13 \u2014 Biden Calls for 3-Month Mask Mandate\n\nSeptember 1 \u2014 US Rejects WHO Global COVID-19 Vaccine Effort\n\nSeptember 14 \u2014 US Airports Stop Screening International Travelers\n\nSeptember 16 \u2014 Trump Administration Releases Vaccine Distribution Plan\n\nOctober 9 \u2014 US Signs Deal With AstraZeneca\n\nOctober 22 \u2014 FDA Approves Remdesivir as First COVID-19 Drug\n\nDecember 31 \u2014US Falls Short of Goal to Give 20 Million Vaccinations by Year End","a1e0fb6d":"#### Most Common Primary Essential Function Phase 3","55ba7056":"## Challenge","ebeb9aed":"#### Most Common Primary Essential Function Phase 4 ","75096df0":"### Phase 4: 2020-10-01 -> 2020-12-31\n","86a8ed3c":"# LearnPlatform COVID-19 Impact on Digital Learning\u00b6\n### Use Digital Learning Data to Analyze the Impact of COVID-19 on Student Learning","c643d717":"After the data is prepared, we can create visualisation to help create an understanding of digital connectivity and engagement throughout 2020. To do this the engagement data is divided into four quarters of the year. Below is a line graph that visualises the data over the full year. This is done to individually analyse each quarter in segments to fully visualise the changes of each month of the year. ","6eb94f89":"### The Role of Geography Summary","1a6a2a98":"The most common Primary Essential Function (PEF) can also be examined to see what is the most popular PEF used online. This could indicate a pattern in what specific online engagement is used on by showing the most common online platforms below.","65bafdd4":"In order to conduct analysis on the datasets, they must first be each imported and cleaned before merging the product and engagament data together. This data preparation will be done over the next few steps by first importing the relevant packages.\n\n- Import Relevant Packages\n\n- Import districts_info, products_info and All Engagement Data\n\n- Clean District Data\n\n- Clean Engagement Data\n\n- Merge Product Data and Engagement Data\n\nThis process will prime the data for tackling the data analysis of online learning platforms.\n","63cf9061":"Similar to the above analysis, papers have been written on the links between race and education. Our analysis that was carried out was like the above. First to map race by state.\n\nNow following this in the pie chart, one can see city\u2019s have the largest proportion of Black or Hispanic students. From our earlier analysis we saw that cities have the highest proportion of students on free lunches. Indicating that these students may face significant education challenges from both a racial and economic standpoint. ","2be56fe8":"#### ----------------------------------------------------------------------------------------------\n## Data Preparation","72abfb47":"Image name - theimage8.png","b5b30ad4":"Image name - theimage13.png","55306bb6":"Image name - theimage1.png","0dbe8968":"## Competition Problem Statement","dfb05172":"Image name - theimage5.png","88d2406d":"Image name - theimage4.png","6d638ad8":"### Disclaimer \nPlease note if any issue arising in seeing the plots and figures, all images are label and available in full size from the dataset allimages at URL https:\/\/www.kaggle.com\/ionanicleoid\/allimages","7a6eef42":"Image name - theimage19.png","84116077":"\nFree or reduced lunches is a policy for students from low-income backgrounds, which may struggle to afford food.  Below is maps showing the location of students on free lunchs, a reduced lunch or receive no financial aid for there lunch\u2019s. \n\nThe method to achieve this was to clean the district table and summaries at state level. After this several maps were constructed to provide a visual aide. Showing that Wisconsin had the lowest levels of students on financial aide for their lunches, while Minnesota had the greatest percentage of students on free lunches\n\nTo explore the socioeconomics of students by geographic area an interactive pie chart was created. Showing similar levels of lunch aide was provided by each geographic area, however students which lived in cities had the percentage of students on free school meals. \n","1e62349a":"Image name - theimage9.png","04bbecda":"We can see that similar to phase 1 the LC - Digital learning platforms is the most common PEF with LC - Resources and Reference are the next highest. Thoughout all the phases it is clear the most common PEF are the LC - Digital learning platforms is the most common PEF with LC - Resources and References.","2ac05bed":"The Kaggle competition supplied us with students which were enrolled in each geographic area at state level. In the dataset there was 4 geographic areas, this includes: City, Town, Suburb and Rural. \nWhere we were further supplied with data of the percentage of students which identified as Black or Hispanic.  And the percentage of student or free or reduced lunch meals.\n","d1e45265":"The COVID-19 Pandemic has disrupted learning for more than 56 million students in the United States. In the Spring of 2020, most states and local governments across the U.S. closed educational institutions to stop the spread of the virus. In response, schools and teachers have attempted to reach students remotely through distance learning tools and digital platforms. Until today, concerns of the exacaberting digital divide and long-term learning loss among America\u2019s most vulnerable learners continue to grow.","f85aecd1":"#### Clean District Data","9ea25d3c":"Image name - theimage18.png","68cc2644":"#### US COVID-19 Timeline of Policies and Practices Visualisation\n","d3c4ea03":"#### Most Common Primary Essential Function Phase 2","4ba03366":"Image name - theimage2.png","70870271":"#### ----------------------------------------------------------------------------------------------\n## Data Analysis","2de7a12c":"Image name - theimage12.png","0c561868":"From the line chart above we can see variation in the engagement index throughout the full year of 2020. This initially can offer an insight into the main peaks of online engagement through the year. With the first peak around April 2020 represented in the sage green colour,and the second peak of online engagement in September 2020, represented by the electric blue colour above. The overall appearance of the line graph itself is interesting as the lines jolt upwards and downwards significantly over very short periods of time. This could be the result of the behaviour of users, for example online engagement may drop significantly on the weekends ever week. However it could also be the existence of null values within the data. As null values have been replaced with the average engagmenet index, this could result in the interesting spikes throughout the year. \n\n\nBy focusing on the overall shape of the graph, it does show significant increase in online engagement from the start of February towards its end. This is very early stages of the impact of COVID-19 and before the annoucement of any US lockdown. Therefore it suggests there could be another reason for the increase in engagament. There is also a noticeable dip in online engagement in the month of July 2020. This could be the results of the summertime, where both schools would have stopped for summer resulting in the online engagement decreases especially for educational purposes. With restrictions in the US relaxed significantly since previously. To further analyse the engagement index over 2020 and throughout the COVID-19 pandemic, it is important to include key dates within the data. \n\nThe plot below shows some key dates throughout 2020 in terms of the COVID-19 pandemic in the US:\n\nJanuary 31 \u2014 WHO Issues Global Health Emergency\n\nMarch 11 \u2014 WHO Declares COVID-19 a Pandemic\n\nMay 28 \u2014 US COVID-19 Deaths Pass the 100,000 Mark\n\nJune 10 \u2014 US COVID-19 Cases Reach 2 Million\n\nAugust 17 \u2014 COVID-19 Now the Third-Leading Cause of Death in the US\n\nSeptember 17 \u2014 Europe Reports Rising COVID-19 Cases\n\nSeptember 23 \u2014 A New, More Contagious Strain of COVID-19 Is Discovered\n\nSeptember 28 \u2014 Global COVID-19 Deaths Surpass 1 Million\n\nNovember 4 \u2014 US Reports Unprecedented 100,000 Cases in 1 Day","776e4fcf":"#### Percentage of Students eligible to Reduced Lunch by State","2e1cc5e8":"Image name - theimage17.png","8df4f0d5":"For the 1st phase of the pandemic we can see from the visualisation of Phase 1 below. Where the year beging with the online engagement index in January peaks at around 200, when comparing this to March at engagement index of around 350 this shows how online engagement almost doubles by the end of the 1st phase of the year. As seen from the key dates in the previous plot, the US is not largely effected by the pandemic until mid March and therefore the increase from January to March may not be the result of the pandemic. Other factors such as school and work returning after a new year break could show a natural increase in online engagement, however this is not fully understood without previous year data on the online engagement to compare.   ","9c8e38d1":"## Covid-19 Impact on Digital Learning on the United States of America in 2020","c121b5cc":"#### Visualisation of Phase 1","40f60ce8":"Image name - theimage7.png","c561f27b":"Image name - theimage14.png","50cdc70c":"Image name - theimage16.png","4355cac5":"### Phase 3: 2020-07-01 -> 2020-09-30","69256dd6":"When comparing the engagement index to practices and policies annouced by the US government. There is no significant observations that deter from previus analysis of the engagement. The COVID-19 peaked the engagement over the annoucement of a pandemic and the introduction of the california lockdown. However, the second peak in the year in September coincided with universities and schools restarting rather than policies such as mask mandates or vaccine approvals. Overall, the main analysis found within the online engagement data follow school period. Rather than COVID-19 policies. Further analysis must be done to compare with previous years to locate any significant evidence of the effect of the pandemic on online engagement.","0b8c27a0":"#### Percentage Hispanic Students by State","92e57f85":"#### Import districts_info, products_info and All Engagement Data","74671660":"#### ----------------------------------------------------------------------------------------------\n### Do certain state interventions, practices or policies correlate with the increase or decrease online engagement?  ","af96d8b0":"#### Percentage Black Students by State","bc64be2b":"#### ----------------------------------------------------------------------------------------------\n### The Role of Geography on Education.","0b69e8eb":"In this analysis one shall explore the impact COVID-19 had on education and digital learning in the USA in 2020. Exploring Social and Geographic differences that made the pandemic different for different citizens. As George Orwell wrote 'All animals are equal but some are more equal than others'. This analysis hopes to explore the data provided and analysis the state of digital learning in 2020, and to explore different factors that acted upon it. By focusing on question asked in the competition challenge section. Enjoy! :)","181d4cd0":"Phase 4 of 2020 doesn't show huge overall variety in the year with a consistent average before ending the year with a strong drop by 2021."}}