{"cell_type":{"f8b27fda":"code","8408a820":"code","a219d7ae":"code","4b25135a":"code","02cb82fe":"code","424a5e21":"code","86caa338":"code","ebfc349c":"code","5807ba50":"code","d17d6a9b":"code","da81c33b":"code","97861c8a":"code","1056b824":"code","b79c7b5f":"code","60e4fe94":"code","5ca933db":"code","8e502835":"code","404dcfd7":"code","ec89185a":"code","8eb26eb2":"code","0b037b44":"code","9dce676b":"markdown"},"source":{"f8b27fda":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","8408a820":"df = pd.read_csv(\"\/kaggle\/input\/knn-data1\/KNN_Project_Data\")\n","a219d7ae":"df.head() ","4b25135a":"sns.pairplot(df,hue='TARGET CLASS',palette='coolwarm')","02cb82fe":"from sklearn.preprocessing import StandardScaler","424a5e21":"scaler = StandardScaler()","86caa338":"scaler.fit(df.drop('TARGET CLASS',axis=1))","ebfc349c":"scaled_features = scaler.transform(df.drop('TARGET CLASS',axis=1))","5807ba50":"df_feat = pd.DataFrame(scaled_features,columns=df.columns[:-1])\ndf_feat.head()","d17d6a9b":"from sklearn.model_selection import train_test_split","da81c33b":"X_train, X_test, y_train, y_test = train_test_split(scaled_features,df['TARGET CLASS'],\n                                                    test_size=0.30)","97861c8a":"from sklearn.neighbors import KNeighborsClassifier","1056b824":"knn = KNeighborsClassifier(n_neighbors=1)","b79c7b5f":"knn.fit(X_train,y_train)","60e4fe94":"pred = knn.predict(X_test)","5ca933db":"from sklearn.metrics import classification_report,confusion_matrix","8e502835":"print(confusion_matrix(y_test,pred))","404dcfd7":"print(classification_report(y_test,pred))","ec89185a":"error_rate = []\n\nfor i in range(1,40):\n    \n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    pred_i = knn.predict(X_test)\n    error_rate.append(np.mean(pred_i != y_test))","8eb26eb2":"plt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',\n         markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","0b037b44":"# NOW WITH K=19\nknn = KNeighborsClassifier(n_neighbors=30)\n\nknn.fit(X_train,y_train)\npred = knn.predict(X_test)\n\nprint('WITH K=19')\nprint('\\n')\nprint(confusion_matrix(y_test,pred))\nprint('\\n')\nprint(classification_report(y_test,pred))","9dce676b":"# Great Job!"}}