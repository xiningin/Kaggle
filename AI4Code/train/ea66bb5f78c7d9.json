{"cell_type":{"ba453ac9":"code","03cf376d":"code","ecbd30f4":"code","d9bb7fb8":"code","c7674728":"code","faa5a744":"code","9d8138b4":"code","5838c2a1":"code","b3595a59":"code","1950005e":"code","1ddfb1a8":"code","e0c8353f":"code","fbfefb1a":"code","a489b735":"code","f5dacd24":"code","ac380d54":"code","dfc6ebd9":"code","6d2db0f8":"code","2ae5bb26":"code","3ecf200d":"code","85f42207":"code","0702336c":"code","baddb8ea":"code","48377f4a":"code","594da6ed":"code","f87af063":"code","e4f4a00a":"code","1179ade5":"code","201f932e":"code","8b151916":"code","c0e392ca":"code","61ef591f":"code","c6b89e5c":"code","dd9b2601":"code","c20afe44":"code","c3745a86":"code","f2f7d922":"code","2bda9d3f":"code","b9a439f9":"code","7133a140":"code","f1911ce6":"code","9a0a5c09":"code","0b3b2546":"code","e92181df":"code","78b3574b":"code","1da8f790":"code","3227fa53":"code","a05f1e86":"code","69836553":"code","8147b364":"code","f279ff3e":"code","40084c49":"code","3a1b8438":"code","637b25b7":"code","a9c05c1d":"code","ed7a7ea1":"code","df7d6030":"code","e4579aeb":"code","4505dc44":"code","365eade6":"code","600673e2":"code","0df1f4fc":"code","ed8b4e74":"code","17a77e84":"code","4a555eec":"code","d5457214":"code","1e2f91f5":"code","c1689c2f":"code","5bfb9c4c":"code","561f2b24":"markdown","52f51091":"markdown","7a032073":"markdown","fa1ce928":"markdown","df0758ad":"markdown","a30b014b":"markdown","cce9ccc8":"markdown","d41056f1":"markdown","99a8aec2":"markdown","4e2eb3a1":"markdown","217d6fb8":"markdown","c8e10ce6":"markdown","317c4065":"markdown","65804433":"markdown","3990e9d4":"markdown","9cb6f0b1":"markdown","0648e0a5":"markdown","62151538":"markdown","4008002a":"markdown","2bfe84f8":"markdown","04c4c8dc":"markdown"},"source":{"ba453ac9":"#GENERAL\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport matplotlib.cm as mtpltcm\nfrom mpl_toolkits.mplot3d import Axes3D\nimport random\nimport folium\nfrom folium.plugins import HeatMap, HeatMapWithTime\nfrom folium import plugins\nfrom netCDF4 import Dataset\nimport cartopy.crs as ccrs\nimport pydub\nfrom scipy.io.wavfile import read, write\nimport librosa\nimport librosa.display\nimport IPython\nfrom IPython.display import Audio\nimport scipy\nfrom scipy import signal\nfrom scipy.fft import fftshift\nfrom mpl_toolkits.basemap import Basemap\n\nfrom warnings import filterwarnings\n\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)\nfilterwarnings(\"ignore\", category=RuntimeWarning)","03cf376d":"NETCDF_PATH = \"..\/input\/earthdata-merra2-co\/MERRA2_400.tavgM_2d_chm_Nx.201901.nc4\"","ecbd30f4":"NETCDF_DATA = Dataset(NETCDF_PATH,more=\"r\")","d9bb7fb8":"print(repr(NETCDF_DATA))","c7674728":"print(type(NETCDF_DATA))","faa5a744":"print(NETCDF_DATA.History)","9d8138b4":"print(NETCDF_DATA.Contact)","5838c2a1":"print(NETCDF_DATA.TemporalRange)","b3595a59":"print(NETCDF_DATA.SouthernmostLatitude)\nprint(NETCDF_DATA.NorthernmostLatitude)\nprint(NETCDF_DATA.WesternmostLongitude)\nprint(NETCDF_DATA.EasternmostLongitude)","1950005e":"print(NETCDF_DATA.dimensions)","1ddfb1a8":"print(NETCDF_DATA.dimensions.get(\"lon\"))\nprint(NETCDF_DATA.dimensions.get(\"lat\"))\nprint(NETCDF_DATA.dimensions.get(\"time\"))","e0c8353f":"print(NETCDF_DATA.dimensions[\"lon\"])\nprint(NETCDF_DATA.dimensions[\"lat\"])\nprint(NETCDF_DATA.dimensions[\"time\"])","fbfefb1a":"print(NETCDF_DATA.variables[\"lon\"])","a489b735":"print(NETCDF_DATA.variables[\"lat\"])","f5dacd24":"print(NETCDF_DATA.variables[\"time\"])","ac380d54":"print(NETCDF_DATA.variables[\"COCL\"])","dfc6ebd9":"print(NETCDF_DATA.variables[\"COEM\"])","6d2db0f8":"print(NETCDF_DATA.variables[\"COLS\"])","2ae5bb26":"print(NETCDF_DATA.variables[\"COPD\"])","3ecf200d":"print(NETCDF_DATA.variables[\"COSC\"])","85f42207":"print(NETCDF_DATA.variables[\"LWI\"])","0702336c":"print(NETCDF_DATA.variables[\"TO3\"])","baddb8ea":"print(NETCDF_DATA.variables[\"lon\"].datatype)\nprint(NETCDF_DATA.variables[\"lat\"].datatype)\nprint(NETCDF_DATA.variables[\"time\"].datatype)\nprint(NETCDF_DATA.variables[\"COCL\"].datatype)\nprint(NETCDF_DATA.variables[\"COEM\"].datatype)\nprint(NETCDF_DATA.variables[\"COLS\"].datatype)\nprint(NETCDF_DATA.variables[\"COPD\"].datatype)\nprint(NETCDF_DATA.variables[\"COSC\"].datatype)\nprint(NETCDF_DATA.variables[\"LWI\"].datatype)\nprint(NETCDF_DATA.variables[\"TO3\"].datatype)","48377f4a":"print(NETCDF_DATA.variables[\"lon\"].dimensions)\nprint(NETCDF_DATA.variables[\"lat\"].dimensions)\nprint(NETCDF_DATA.variables[\"time\"].dimensions)\nprint(NETCDF_DATA.variables[\"COCL\"].dimensions)\nprint(NETCDF_DATA.variables[\"COEM\"].dimensions)\nprint(NETCDF_DATA.variables[\"COLS\"].dimensions)\nprint(NETCDF_DATA.variables[\"COPD\"].dimensions)\nprint(NETCDF_DATA.variables[\"COSC\"].dimensions)\nprint(NETCDF_DATA.variables[\"LWI\"].dimensions)\nprint(NETCDF_DATA.variables[\"TO3\"].dimensions)","594da6ed":"print(NETCDF_DATA.variables[\"lon\"].shape)\nprint(NETCDF_DATA.variables[\"lat\"].shape)\nprint(NETCDF_DATA.variables[\"time\"].shape)\nprint(NETCDF_DATA.variables[\"COCL\"].shape)\nprint(NETCDF_DATA.variables[\"COEM\"].shape)\nprint(NETCDF_DATA.variables[\"COLS\"].shape)\nprint(NETCDF_DATA.variables[\"COPD\"].shape)\nprint(NETCDF_DATA.variables[\"COSC\"].shape)\nprint(NETCDF_DATA.variables[\"LWI\"].shape)\nprint(NETCDF_DATA.variables[\"TO3\"].shape)","f87af063":"DATA_LONG = NETCDF_DATA.variables[\"lon\"][:]\nDATA_LAT = NETCDF_DATA.variables[\"lat\"][:]\nDATA_TIME = NETCDF_DATA.variables[\"time\"][:]\n\nDATA_COCL = NETCDF_DATA.variables[\"COCL\"][0,:,:]\nDATA_COEM = NETCDF_DATA.variables[\"COEM\"][0,:,:]\nDATA_COLS = NETCDF_DATA.variables[\"COLS\"][0,:,:]\nDATA_TO3 = NETCDF_DATA.variables[\"TO3\"][0,:,:]","e4f4a00a":"print(type(DATA_LONG))\nprint(type(DATA_LAT))\nprint(type(DATA_TIME))\nprint(type(DATA_COCL))\nprint(type(DATA_COEM))\nprint(type(DATA_COLS))\nprint(type(DATA_TO3))","1179ade5":"NETCDF_DATA.variables[\"time\"]","201f932e":"print(DATA_COEM.shape)","8b151916":"print(DATA_COEM[:,0].shape)","c0e392ca":"print(DATA_COEM[0,:].shape)","61ef591f":"print(type(DATA_COCL[:,0]))\nprint(type(DATA_COCL[0,:]))","c6b89e5c":"print(DATA_LONG.data[0:50])","dd9b2601":"COCL_LAT = DATA_COCL[:,0].data\nCOCL_LONG = DATA_COCL[0,:].data\n\nCOEM_LAT = DATA_COEM[:,0].data\nCOEM_LONG = DATA_COEM[0,:].data\n\nCOLS_LAT = DATA_COLS[:,0].data\nCOLS_LONG = DATA_COLS[0,:].data\n\nTO3_LAT = DATA_TO3[:,0].data\nTO3_LONG = DATA_TO3[0,:].data","c20afe44":"print(type(COCL_LAT))\nprint(type(COCL_LONG))\n\nprint(type(COEM_LAT))\nprint(type(COEM_LONG))\n\nprint(type(COLS_LAT))\nprint(type(COLS_LONG))\n\nprint(type(TO3_LAT))\nprint(type(TO3_LONG))","c3745a86":"COCL_LAT_SERIES = pd.Series(COCL_LAT,name=\"COCL_LAT\").astype(float)\nCOCL_LONG_SERIES = pd.Series(COCL_LONG,name=\"COCL_LONG\").astype(float)\n\nCOEM_LAT_SERIES = pd.Series(COEM_LAT,name=\"COEM_LAT\").astype(float)\nCOEM_LONG_SERIES = pd.Series(COEM_LONG,name=\"COEM_LONG\").astype(float)\n\nCOLS_LAT_SERIES = pd.Series(COLS_LAT,name=\"COLS_LAT\").astype(float)\nCOLS_LONG_SERIES = pd.Series(COLS_LONG,name=\"COLS_LONG\").astype(float)\n\nTO3_LAT_SERIES = pd.Series(COCL_LAT,name=\"TO3_LAT\").astype(float)\nTO3_LONG_SERIES = pd.Series(COCL_LAT,name=\"TO3_LONG\").astype(float)","f2f7d922":"COCL_COOR_DATA = pd.concat([COCL_LAT_SERIES,COCL_LONG_SERIES],axis=1)\nCOEM_COOR_DATA = pd.concat([COEM_LAT_SERIES,COEM_LONG_SERIES],axis=1)\nCOLS_COOR_DATA = pd.concat([COLS_LAT_SERIES,COLS_LONG_SERIES],axis=1)\nTO3_COOR_DATA = pd.concat([TO3_LAT_SERIES,TO3_LONG_SERIES],axis=1)","2bda9d3f":"COCL_COOR_DATA.dropna(inplace=True,axis=0)\nCOEM_COOR_DATA.dropna(inplace=True,axis=0)\nCOLS_COOR_DATA.dropna(inplace=True,axis=0)\nTO3_COOR_DATA.dropna(inplace=True,axis=0)","b9a439f9":"DATA_LAT_SERIES = pd.Series(DATA_LAT.data,name=\"LATITUDE\")\nDATA_LONG_SERIES = pd.Series(DATA_LONG,name=\"LONGITUDE\")","7133a140":"MAIN_DATA = pd.concat([DATA_LAT_SERIES,DATA_LONG_SERIES,COCL_LAT_SERIES,COCL_LONG_SERIES,\n                      COEM_LAT_SERIES,COEM_LONG_SERIES,COLS_LAT_SERIES,COLS_LONG_SERIES,\n                      TO3_LAT_SERIES,TO3_LONG_SERIES],axis=1)","f1911ce6":"MAIN_DATA.dropna(inplace=True,axis=0)","9a0a5c09":"MAIN_DATA[\"COCL_SUM\"] = MAIN_DATA[\"COCL_LAT\"] + MAIN_DATA[\"COCL_LONG\"]\nMAIN_DATA[\"COEM_SUM\"] = MAIN_DATA[\"COEM_LAT\"] + MAIN_DATA[\"COEM_LONG\"]\nMAIN_DATA[\"COLS_SUM\"] = MAIN_DATA[\"COLS_LAT\"] + MAIN_DATA[\"COLS_LONG\"]\nMAIN_DATA[\"TO3_SUM\"] = MAIN_DATA[\"TO3_LAT\"] + MAIN_DATA[\"TO3_LONG\"]","0b3b2546":"MAIN_DATA","e92181df":"MAIN_DATA[[\"COCL_SUM\",\"COEM_SUM\",\"COLS_SUM\",\"TO3_SUM\"]].describe().T","78b3574b":"# IF IT IS NECESSARY\n\nCOCL_LAT_LONG = COCL_COOR_DATA[[\"COCL_LAT\",\"COCL_LONG\"]]\nCOEM_LAT_LONG = COEM_COOR_DATA[[\"COEM_LAT\",\"COEM_LONG\"]]\nCOLS_LAT_LONG = COLS_COOR_DATA[[\"COLS_LAT\",\"COLS_LONG\"]]\nTO3_LAT_LONG = TO3_COOR_DATA[[\"TO3_LAT\",\"TO3_LONG\"]]\n\nCOCL_LAT_LONG.COCL_LAT = COCL_LAT_LONG.COCL_LAT.astype(float)\nCOCL_LAT_LONG.COCL_LONG = COCL_LAT_LONG.COCL_LONG.astype(float)\n\nCOEM_LAT_LONG.COEM_LAT = COEM_LAT_LONG.COEM_LAT.astype(float)\nCOEM_LAT_LONG.COEM_LONG = COEM_LAT_LONG.COEM_LONG.astype(float)\n\nCOLS_LAT_LONG.COLS_LAT = COLS_LAT_LONG.COLS_LAT.astype(float)\nCOLS_LAT_LONG.COLS_LONG = COLS_LAT_LONG.COLS_LONG.astype(float)\n\nTO3_LAT_LONG.TO3_LAT = TO3_LAT_LONG.TO3_LAT.astype(float)\nTO3_LAT_LONG.TO3_LONG = TO3_LAT_LONG.TO3_LONG.astype(float)","1da8f790":"plt.style.use(\"dark_background\")","3227fa53":"figure = plt.figure(figsize=(18,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='black',linewidth=2)\n\nplt.contourf(DATA_LONG, DATA_LAT, DATA_COCL, transform=ccrs.PlateCarree(),cmap=\"gist_earth\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\", pad=0.05, aspect=16, shrink=0.8)\ncolor_bar_func.ax.tick_params(labelsize=7)\n\nplt.tight_layout()\nplt.show()","a05f1e86":"figure = plt.figure(figsize=(18,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='black',linewidth=2)\n\nplt.contourf(DATA_LONG, DATA_LAT, DATA_COEM, transform=ccrs.PlateCarree(),cmap=\"jet\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\", aspect=16, shrink=0.8)\ncolor_bar_func.ax.tick_params(labelsize=7)\n\nplt.tight_layout()\nplt.show()","69836553":"figure = plt.figure(figsize=(18,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='black',linewidth=2)\n\nplt.contourf(DATA_LONG, DATA_LAT, DATA_COLS, transform=ccrs.PlateCarree(),cmap=\"hot\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\", aspect=16, shrink=0.8)\ncolor_bar_func.ax.tick_params(labelsize=7)\n\nplt.tight_layout()\nplt.show()","8147b364":"figure = plt.figure(figsize=(18,10))\n\naxis_func = plt.axes(projection=ccrs.Robinson())\naxis_func.set_global()\naxis_func.coastlines(resolution=\"110m\",linewidth=1)\naxis_func.gridlines(linestyle='--',color='black',linewidth=2)\n\nplt.contourf(DATA_LONG, DATA_LAT, DATA_TO3, transform=ccrs.PlateCarree(),cmap=\"prism\")\ncolor_bar_func = plt.colorbar(ax=axis_func, orientation=\"vertical\", aspect=16, shrink=0.8)\ncolor_bar_func.ax.tick_params(labelsize=7)\n\nplt.tight_layout()\nplt.show()","f279ff3e":"plt.figure(figsize=(18,7))\nplt.title(\"Total Column Ozone\")\nplt.plot(MAIN_DATA[\"TO3_SUM\"],color=\"white\")\nplt.tight_layout()\nplt.show()","40084c49":"plt.figure(figsize=(18,7))\nplt.title(\"Carbon monoxide (CO) - Chemical Loss\")\nplt.plot(MAIN_DATA[\"COLS_SUM\"],color=\"purple\")\nplt.tight_layout()\nplt.show()","3a1b8438":"plt.figure(figsize=(18,7))\nplt.title(\"Carbon monoxide (CO) - Emission\")\nplt.plot(MAIN_DATA[\"COEM_SUM\"],color=\"red\")\nplt.tight_layout()\nplt.show()","637b25b7":"plt.figure(figsize=(18,7))\nplt.title(\"Carbon monoxide (CO) - Column Burden\")\nplt.plot(MAIN_DATA[\"COCL_SUM\"],color=\"yellow\")\nplt.tight_layout()\nplt.show()","a9c05c1d":"print(MAIN_DATA[MAIN_DATA[\"COCL_SUM\"] == MAIN_DATA[\"COCL_SUM\"].max()])","ed7a7ea1":"MAP_FUNCTION = folium.Map(location=[38.9637,35.2433],\n                  tiles='Stamen Terrain',\n                  zoom_start=2.0)\n\nfolium.CircleMarker(\n    location=[77.0,28.75],\n    radius=20,\n    popup=\"<b>MAX Carbon monoxide (CO) - Column Burden<b>\",\n    tooltip=\"Click me\",\n    color='#2F4F4F',\n    fill=True,\n    fill_color='red',\n).add_to(MAP_FUNCTION)\n\nMAP_FUNCTION","df7d6030":"print(MAIN_DATA[MAIN_DATA[\"COEM_SUM\"] == MAIN_DATA[\"COEM_SUM\"].max()])","e4579aeb":"MAP_FUNCTION = folium.Map(location=[38.9637,35.2433],\n                  tiles='Stamen Terrain',\n                  zoom_start=2.0)\n\nfolium.CircleMarker(\n    location=[-16.0,-87.5],\n    radius=20,\n    popup=\"<b>MAX Carbon monoxide (CO) - Emission<b>\",\n    tooltip=\"Click me\",\n    color='#2F4F4F',\n    fill=True,\n    fill_color='red',\n).add_to(MAP_FUNCTION)\n\nMAP_FUNCTION","4505dc44":"print(MAIN_DATA[MAIN_DATA[\"COLS_SUM\"] == MAIN_DATA[\"COLS_SUM\"].max()])","365eade6":"MAP_FUNCTION = folium.Map(location=[38.9637,35.2433],\n                  tiles='Stamen Terrain',\n                  zoom_start=2.0)\n\nfolium.CircleMarker(\n    location=[-24.0,-97.5],\n    radius=20,\n    popup=\"<b>MAX Carbon monoxide (CO) - Chemical Loss<b>\",\n    tooltip=\"Click me\",\n    color='#2F4F4F',\n    fill=True,\n    fill_color='red',\n).add_to(MAP_FUNCTION)\n\nMAP_FUNCTION","600673e2":"print(MAIN_DATA[MAIN_DATA[\"TO3_SUM\"] == MAIN_DATA[\"TO3_SUM\"].max()])","0df1f4fc":"MAP_FUNCTION = folium.Map(location=[38.9637,35.2433],\n                  tiles='Stamen Terrain',\n                  zoom_start=2.0)\n\nfolium.CircleMarker(\n    location=[77.0,28.75],\n    radius=20,\n    popup=\"<b>MAX Total Column Ozone<b>\",\n    tooltip=\"Click me\",\n    color='#2F4F4F',\n    fill=True,\n    fill_color='red',\n).add_to(MAP_FUNCTION)\n\nMAP_FUNCTION","ed8b4e74":"lons,lats= np.meshgrid(DATA_LONG,DATA_LAT)","17a77e84":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',lon_0=0,resolution='c')\nMap_Plot.drawcountries()\nMap_Plot.fillcontinents(color='green',lake_color='aqua')\nTEMP_FUNC = Map_Plot.contourf(lons, lats, DATA_COLS,cmap=\"hot\")\nCOLOR_BAR_FUNC = Map_Plot.colorbar(TEMP_FUNC,\"bottom\", size=\"5%\", pad=\"2%\")\nCOLOR_BAR_FUNC.set_label('kg m-2 s-1')\nplt.title(\"Chemical Loss\", fontsize=18)","4a555eec":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection='cyl',lon_0=0,resolution='c')\n\nMap_Plot.drawcountries()\nMap_Plot.fillcontinents(color='green',lake_color='aqua')\nTEMP_FUNC = Map_Plot.contourf(lons, lats, DATA_COCL,cmap=\"hot\")\nCOLOR_BAR_FUNC = Map_Plot.colorbar(TEMP_FUNC,\"bottom\", size=\"5%\", pad=\"2%\")\nCOLOR_BAR_FUNC.set_label('kg m-2')\nplt.title(\"Column Burden\", fontsize=18)","d5457214":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',lon_0=0,resolution='c')\nMap_Plot.drawcountries()\nMap_Plot.fillcontinents(color='green',lake_color='aqua')\nTEMP_FUNC = Map_Plot.contourf(lons, lats, DATA_COEM,cmap=\"hot\")\nCOLOR_BAR_FUNC = Map_Plot.colorbar(TEMP_FUNC,\"bottom\", size=\"5%\", pad=\"2%\")\nCOLOR_BAR_FUNC.set_label('kg m-2 s-1')\nplt.title(\"EMISSION\", fontsize=18)","1e2f91f5":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',lon_0=0,resolution='c')\nMap_Plot.drawcountries()\n\nTEMP_FUNC = Map_Plot.contourf(lons, lats, DATA_TO3,cmap=\"hot\")\nMap_Plot.fillcontinents(color='green',lake_color='aqua')\nCOLOR_BAR_FUNC = Map_Plot.colorbar(TEMP_FUNC,\"bottom\", size=\"5%\", pad=\"2%\")\nCOLOR_BAR_FUNC.set_label('Dobsons')\nplt.title(\"TOTAL COLUMN OZONE\", fontsize=18)","c1689c2f":"MAIN_LAT_LONG = MAIN_DATA[[\"LATITUDE\",\"LONGITUDE\"]]\n\nHEAT_MAIN = list(zip(MAIN_LAT_LONG.LATITUDE,MAIN_LAT_LONG.LONGITUDE))","5bfb9c4c":"MAP_FUNCTION = folium.Map(tiles='Stamen Terrain')\n\nplugins.HeatMap(HEAT_MAIN).add_to(MAP_FUNCTION)\n\nMAP_FUNCTION","561f2b24":"#### Column Burden","52f51091":"#### Chemical Loss","7a032073":"#### VARIABLES","fa1ce928":"### NETCDF INFORMATIONS","df0758ad":"#### READING VARIABLES","a30b014b":"# DATA OVERVIEW AND VARIABLES","cce9ccc8":"#### GENERAL","d41056f1":"#### EMISSION","99a8aec2":"# PACKAGES AND LIBRARIES","4e2eb3a1":"#### Total Column Ozone","217d6fb8":"### VISION WITH SPECIFIC FORMATS","c8e10ce6":"#### DETAILS","317c4065":"# WHAT IS NETCDF\n\n* NetCDF is a set of software libraries and self-describing, machine-independent data formats that support the creation, access, and sharing of array-oriented scientific data. NetCDF was developed and is maintained at Unidata. Unidata provides data and software tools for use in geoscience education and research. Unidata is part of the University Corporation for Atmospheric Research (UCAR) Community Programs (UCP). Unidata is funded primarily by the National Science Foundation.Programming interfaces are also available for Python, IDL, MATLAB, R, Ruby, and Perl.\n\n* Self-Describing:\n\nA netCDF file includes information about the data it contains.\n\n* Portable:\n\nA netCDF file can be accessed by computers with different ways of storing integers, characters, and floating-point numbers.\n\n* Scalable:\n\nSmall subsets of large datasets in various formats may be accessed efficiently through netCDF interfaces, even from remote servers.\n\n* Appendable:\n\nData may be appended to a properly structured netCDF file without copying the dataset or redefining its structure.\n\n* Sharable:\n\nOne writer and multiple readers may simultaneously access the same netCDF file.\n\n* Archivable:\n\nAccess to all earlier forms of netCDF data will be supported by current and future versions of the software.","65804433":"# VISION","3990e9d4":"#### DIMENSIONS","9cb6f0b1":"### PREPARING","0648e0a5":"# ANOTHER MAP VISIONS","62151538":"### EXAMPLE PATH","4008002a":"### READING NETCDF","2bfe84f8":"### MAX POINTS","04c4c8dc":"### VISION WITH NETCDF"}}