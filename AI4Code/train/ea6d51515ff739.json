{"cell_type":{"ff2297cd":"code","787d19e1":"code","eec78ddc":"code","47a1a173":"code","a697bf68":"code","8b13fa62":"code","c36c3032":"markdown","c96b2888":"markdown","69810fdb":"markdown"},"source":{"ff2297cd":"#importing pandas\nimport pandas as pd\n#importing matplotlib.pyplot as plt\nimport matplotlib.pyplot as plt\n#importing LinearRegression and LogisticRegression from sklearn.linear_model \nfrom sklearn.linear_model import LinearRegression , LogisticRegression\n#importing train_test_split from sklearn.model_selection \nfrom sklearn.model_selection import train_test_split\n#importing seaborn as sns\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","787d19e1":"data = pd.read_csv('\/kaggle\/input\/salary\/Salary.csv')\nx = data.iloc[:, :-1].values    # Features => Years of experience => Independent Variable\ny = data.iloc[:, -1].values     # Target => Salary => Dependent Variable\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=0) #spliting data","eec78ddc":"#LinearRegressionModel\nlenReg = LinearRegression()\nlenReg.fit(x_train, y_train)\nsns.distplot(lenReg.predict(x_test)-y_test) #the predictions = lenReg.predict(x_test)","47a1a173":"#Linear Regression plot\nplt.scatter(x_train, y_train, color='black')\nplt.plot(x_train, lenReg.predict(x_train))","a697bf68":"#LogesticReggression\nlogReg=LogisticRegression()\nlogReg.fit(x_train,y_train)\nsns.distplot(logReg.predict(x_test)-y_test) #the predictions = logReg.predict(x_test)","8b13fa62":"#Logistic Regression plot\nplt.scatter(x_train, y_train, color='black')\nplt.plot(x_train, logReg.predict(x_train))","c36c3032":"In this stage we will use pandas for import data by method called **read_csv()** to read file located in path **\"\/kaggle\/input\/sallary\/Salary.csv\"** in the first line of the code. \n\nThe second and third lines in the code we use **iloc()** method to split the data in **x** and **y**.\n\nhow **iloc()** works?\n\nsimply iloc[:,index of start column: index of end column]\n\nto split Feature it will be take all column without the least column which is the target column and will stored in **x**.\n\nto split the target we will split the least column by use the index of the clumn by '-1' and will stored in **y**.\n\nwe will use **train_test_split** to split the data in 4 variables: **x_train,x_test,y_train,y_test** by pass **x** and **y** and tuning the data by split 30% of the data to make it as testing data.","c96b2888":"As a general aggrement in the full note book we will use some ways to implementation rebeatlly:\n\n1. We will creat an object and we will named it be the type of Regression like linear Regression will calles lenReg, len for Linear and Reg for Regression \n2. we will fit the x_train, y_train by the Regression model. \n3. to decrease the number of variables and optimize the memory usage, insted of store predictions in y_pred or predictions as usual we will call it in the sns.displot and use it.","69810fdb":"First importing Modules\n\nUsing **pandas** for importing data and split it into two datafream, first one **x** as a features data and **y** as target data assigned as **pd**.\n\nUsing **matplotlib.pyplot** assigned as **plt** and **seaborn** assigned as **sns** for ploting and visualizing the data. \n\nUsing **sklearn.model_linear**  for imoprting **LinearRegression** and **LogisticRegression**. \n\nUsing of **os** module is impored by defult by kaggle for to get the path for the data set.\n"}}