{"cell_type":{"c333519e":"code","ef47cfb4":"code","7fed2066":"code","2961508c":"code","e83f2957":"code","9095dd14":"code","023db872":"code","56047623":"code","d78c22f7":"code","b5ce0329":"code","c70d5eeb":"code","3c3e9447":"code","6968a04a":"code","c1c61b23":"code","5a74ea39":"code","bc050766":"code","0c0b8c40":"code","bee77cbf":"code","f518e234":"code","6e09f270":"code","265ce520":"code","ef50cbb0":"code","30da38a7":"code","90616c29":"code","3d72e7a1":"code","6281127f":"markdown"},"source":{"c333519e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport warnings\nwarnings.filterwarnings('ignore') \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ef47cfb4":"!pip install openpyxl   # Solving Kaggle error while importing the data\n\n# Import data\nathletes_df = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Athletes.xlsx', index_col = 0)\ncoaches_df = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Coaches.xlsx', index_col = 0)\nentries_gender_df = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx', index_col = 0)\nmedals_df= pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Medals.xlsx', index_col = 0)\nteams_df= pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Teams.xlsx', index_col = 0)","7fed2066":"medals_df.head()","2961508c":"medals_df.tail()","e83f2957":"medals_df[medals_df['Total']==0]","9095dd14":"print(\"Number of Medal winning countries: \",medals_df.shape[0])","023db872":"medals_df.sort_values(by='Total',ascending=False)[:10]","56047623":"print(\"Top 10 Countries according to gold medals\")\nmedals_df.sort_values(by='Gold',ascending=False)[:10]","d78c22f7":"medals_df=medals_df.sort_values(by='Total',ascending=False)\nplt.figure(figsize=(15,7))\nplt.xticks(rotation=90)\nsns.barplot(x=medals_df['Team\/NOC'][:30],y=medals_df['Total'][:30])\nplt.title('Top 30 countires with highest number of medals')\nplt.xlabel('Countries')\nplt.ylabel('Total Medal Count')","b5ce0329":"fig,ax=plt.subplots(figsize=(15,7))\nplt.xticks(rotation=90)\nmedals_df_30=medals_df.iloc[:30]\nax.bar(medals_df_30['Team\/NOC'], medals_df_30['Gold'], label='Gold')\nax.bar(medals_df_30['Team\/NOC'],medals_df_30['Silver'], bottom=medals_df_30['Gold'],\n       label='Silver')\nax.bar(medals_df_30['Team\/NOC'],medals_df_30['Bronze'], bottom=medals_df_30['Gold']+medals_df_30['Silver'],\n       label='Bronze')\nplt.tight_layout()\nax.set_title('Top 30 countires and their medal distribution')\nax.set_xlabel('Countries')\nax.set_ylabel('Count')\nax.legend()","c70d5eeb":"teams_df.head()","3c3e9447":"print(\"Number of events:\",len(teams_df['Discipline'].value_counts()))\nteams_df['Discipline'].value_counts()","6968a04a":"pd.pivot_table(data=teams_df,values='Discipline',index='NOC',aggfunc='count').sort_values(by='Discipline',ascending=False)[:10].plot(kind='barh')","c1c61b23":"from wordcloud import WordCloud","5a74ea39":"athletes_df","bc050766":"count_freq=athletes_df['Discipline'].value_counts()\nwc=WordCloud(width=500,height=500,background_color='white')\nwc.generate_from_frequencies(count_freq)\nplt.figure(figsize=(10,10))\nplt.imshow(wc)","0c0b8c40":"plt.figure(figsize=(20,10))\nsns.set_style(\"ticks\")\nathletes_df['NOC'].value_counts()[:30]\nplt.xticks(rotation=90)\nsns.barplot(x=athletes_df['NOC'].value_counts()[:30].index,\n           y=athletes_df['NOC'].value_counts()[:30].values,\n           palette=sns.color_palette(\"rocket\", \n            n_colors=30))\nplt.xlabel('Top 30 countries')\nplt.ylabel('Frequency')\n","bee77cbf":"athletes_df","f518e234":"print(len(entries_gender_df))\nentries_gender_df.head()","6e09f270":"entries_gender_df['Female']=entries_gender_df['Female']\/entries_gender_df['Total']\nentries_gender_df['Male']=entries_gender_df['Male']\/entries_gender_df['Total']","265ce520":"entries_gender_df.head()","ef50cbb0":"fig, ax = plt.subplots(figsize=(15,7))\n#sns.set_style(\"ticks\")\nplt.xticks(rotation=90)\nax.bar(entries_gender_df.index, entries_gender_df['Male'], label='Male')\nax.bar(entries_gender_df.index,entries_gender_df['Female'], bottom=entries_gender_df['Male'],\n       label='Female')\nplt.tight_layout()\nax.set_title('Discipline wrt Gender')\nax.set_xlabel('Discipline')\nax.set_ylabel('Ratio')\nax.legend()\nax.legend()","30da38a7":"coaches_df.head()","90616c29":"coaches_df['Discipline'].value_counts().plot(kind='bar')\nplt.xlabel('Discipline')\nplt.ylabel('Number of Coaches')","3d72e7a1":"df=pd.pivot_table(data=coaches_df,index='NOC',values='Discipline',aggfunc='count').sort_values(by='Discipline',ascending=False)[:30]\nfig, ax = plt.subplots(figsize=(15,7))\nplt.xticks(rotation=90)\nax.bar(df.index, df['Discipline'])\nax.set_title('Country Coaches vs Number of disciplines')\nax.set_xlabel('Countries')\nax.set_ylabel('Count')","6281127f":"**Loading Data**"}}