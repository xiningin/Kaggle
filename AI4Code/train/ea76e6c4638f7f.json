{"cell_type":{"480b8a53":"code","0598e504":"code","b95abf94":"code","64f98399":"code","351533ba":"code","aea4c2b0":"code","956f0128":"code","2207e570":"code","e90f530f":"code","a65c9f2d":"code","f66b85e4":"code","f443f09b":"code","a9e9131e":"code","19726772":"code","2c05b88c":"code","6e7fc274":"markdown"},"source":{"480b8a53":"# Mengimpor library yang diperlukan\nimport numpy as np\nimport pandas as pd\n \n# Mengimpor dataset\ndataset = pd.read_csv('..\/input\/advertising.csv\/Advertising.csv')\nX = dataset.iloc[:, :-1].values\nTampilkan_X = pd.DataFrame(X) #visualisasi X\ny = dataset.iloc[:, 4].values\n \n# Encode data kategori\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\ntransformer = ColumnTransformer(\n        [('encoder', OneHotEncoder(), [3])],sparse_threshold=0,\n        remainder='passthrough')\nX = np.array(transformer.fit_transform(X), dtype=np.float)\n \n# Menghindari jebakan dummy variabel\nX = X[:, 1:]\n \n# Membagi data menjadi the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)\n \n# Membuat model Multiple Linear Regression dari Training set\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)\n \n# Memprediksi hasil Test set\ny_pred = regressor.predict(X_test)\n \n# Memilih model multiple regresi yang paling baik dengan metode backward propagation\nimport statsmodels.api as sm\nX_new = sm.add_constant(X)\nX_opt = X_new[:, [0, 1, 2, 3, 4, 5]]\nregressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\nregressor_OLS.summary()\nX_opt = X_new[:, [0, 1, 3, 4, 5]]\nregressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\nregressor_OLS.summary()\nX_opt = X_new[:, [0, 3, 4, 5]]\nregressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\nregressor_OLS.summary()\nX_opt = X_new[:, [0, 3, 5]]\nregressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\nregressor_OLS.summary()\nX_opt = X_new[:, [0, 3]]\nregressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\nregressor_OLS.summary()","0598e504":"import statsmodels.api as sm\ndef backwardElimination(x, sl):\n    jum_kol = len(x[0])\n    for i in range(0, jum_kol):\n        regressor_OLS = sm.OLS(endog = y, exog = x).fit()\n        p_val = regressor_OLS.pvalues.astype(float)\n        max_index = np.argmax(p_val, axis = 0)\n        nilai_max = max(regressor_OLS.pvalues).astype(float)\n        if nilai_max > sl:\n            x = np.delete(x, max_index, 1)\n    print(regressor_OLS.summary())\nSL = 0.05\nX_new = sm.add_constant(X)\nX_opt = X_new[:, [0, 1, 2, 3, 4, 5]]\nX_Modeled = backwardElimination(X_opt, SL)","b95abf94":"#importing the libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns","64f98399":"#importing the dataset\ncompanies = pd.read_csv('..\/input\/advertising.csv\/Advertising.csv')\n\n#extracting the independent and dependent variables\nX = companies.iloc[:, :-2].values\ny = companies.iloc[:, -1].values\n\ncompanies.head()","351533ba":"X","aea4c2b0":"y","956f0128":"# data visualizaton\n# building the correlation matrix\nsns.heatmap(companies.corr())","2207e570":"print(X)","e90f530f":"# splitting\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","a65c9f2d":"# fitting multiple linear regression to the training set\nfrom sklearn.linear_model import LinearRegression\nregressor =  LinearRegression()\nregressor.fit(X_train, y_train)","f66b85e4":"print(regressor.coef_)","f443f09b":"y_pred = regressor.predict(X_test)\ny_pred","a9e9131e":"print(regressor.coef_)","19726772":"print(regressor.intercept_)","2c05b88c":"from sklearn.metrics import r2_score\nr2Score = r2_score(y_test, y_pred)\n\nprint(r2Score)","6e7fc274":"profit=42989.00816508668+0.77884104*RD Spend+0.0293919*Administration+ 0.03471025*Marketing"}}