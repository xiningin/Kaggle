{"cell_type":{"22342edc":"code","9e0d126f":"code","82076479":"code","bdbb5e32":"code","6d28655b":"code","7c44e8c8":"code","aac6397a":"code","01fa25fb":"code","c78ffa7c":"code","595aa3d9":"code","4afccfb1":"code","5fbc7290":"code","6610d256":"code","41f046bf":"code","055be73b":"code","2ac4e115":"code","15e4204a":"code","2ee628b9":"code","a4125888":"code","b8e356f4":"code","05284e78":"code","380829cd":"code","403952c9":"code","99888a6a":"code","386324e2":"code","36979271":"code","38389fb4":"code","a0c23da5":"code","eb7c0fbd":"code","eb4d1825":"markdown","861ac31e":"markdown","0224b58e":"markdown","87916c43":"markdown","8df8b359":"markdown","3ace5042":"markdown","11b61a6b":"markdown","f1afbd7a":"markdown","8d1a390e":"markdown","0b565590":"markdown","c12e531c":"markdown","7afe6123":"markdown","67df12b4":"markdown","edfebf6d":"markdown","7321b526":"markdown","86e4bfc7":"markdown","6fc67409":"markdown","007f977f":"markdown","8ffd3e4c":"markdown","2dcb688a":"markdown"},"source":{"22342edc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9e0d126f":"train=pd.read_csv(\"..\/input\/train.csv\")\ntest=pd.read_csv(\"..\/input\/test.csv\")\nsubmission=pd.read_csv(\"..\/input\/gender_submission.csv\")","82076479":"train.info()","bdbb5e32":"test.info()","6d28655b":"train.describe()","7c44e8c8":"test.describe()","aac6397a":"train.head()","01fa25fb":"test.head()","c78ffa7c":"import re\ndef extractor(name):\n    extract=re.findall('(Mrs|Mr|Master|Miss)',name)\n    for x in extract:\n        return x\nsexTrain=train['Name'].transform(extractor)\nsexTest=test['Name'].transform(extractor)","595aa3d9":"train['Honorific']=sexTrain\ntest['Honorific']=sexTest","4afccfb1":"train['Honorific']=train['Honorific'].fillna('unknown')\ntest['Honorific']=test['Honorific'].fillna('unknown')\nfrom scipy.stats import mode\ntrain['Age']=train['Age'].fillna(train['Age'].mode()[0])\ntest['Age']=test['Age'].fillna(test['Age'].mode()[0])","5fbc7290":"train=train.dropna(subset=['Embarked'])\ntest=test.dropna(subset=['Embarked'])","6610d256":"train['Cabin']=train['Cabin'].fillna('unknown')\ntest['Cabin']=test['Cabin'].fillna('unknown')\ntest['Fare']=test['Fare'].fillna(test['Fare'].mode()[0])","41f046bf":"def extract2(cabin):\n    x=re.findall('([a-zA-Z]+)',cabin)\n    if x==[]:\n        return 'nil'\n    for c in x:\n        return c\ntrain['Cabin']=train['Cabin'].transform(extract2)\ntest['Cabin']=test['Cabin'].transform(extract2)","055be73b":"target=train['Survived']\ntrain=train.drop(['PassengerId','Name','Ticket'],axis=1)\ntest=test.drop(['PassengerId','Name','Ticket'],axis=1)","2ac4e115":"from sklearn.preprocessing import LabelEncoder as le\nfor col in train.columns:\n    if train[col].dtype=='object':\n        train[col]=le().fit_transform(train[col].astype(str))\n        test[col]=le().fit_transform(test[col].astype(str))","15e4204a":"def alone(d):\n    if d>0:\n        return 1\n    else:\n        return 0\ntrain['Family_Size']=train['SibSp']+train['Parch']\ntrain['Alone']=train['Family_Size'].transform(alone)\ntest['Family_Size']=test['SibSp']+test['Parch']\ntest['Alone']=test['Family_Size'].transform(alone)","2ee628b9":"train=train.drop(['Survived'],axis=1)","a4125888":"%%html\n<div class='tableauPlaceholder' id='viz1535710855713' style='position: relative'><noscript><a href='#'><img alt='various features alongside Survived ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Ti&#47;Titanic_610&#47;Story1&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='Titanic_610&#47;Story1' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Ti&#47;Titanic_610&#47;Story1&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1535710855713');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='1016px';vizElement.style.height='991px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","b8e356f4":"%%html\n<div class='tableauPlaceholder' id='viz1535718122614' style='position: relative'><noscript><a href='#'><img alt='Story 2 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Ti&#47;Titanic2_32&#47;Story2&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='Titanic2_32&#47;Story2' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Ti&#47;Titanic2_32&#47;Story2&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1535718122614');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='1016px';vizElement.style.height='991px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","05284e78":"from keras.models import Sequential\nfrom keras.layers import Dense,Dropout\nseq=Sequential()\nseq.add(Dense(8,activation='sigmoid'))\nseq.add(Dropout(0.1))\nseq.add(Dense(4,activation='softmax'))\nseq.add(Dropout(0.1))\nseq.add(Dense(1,activation='relu'))","380829cd":"train=np.array(train)\ntest=np.array(test)","403952c9":"target=np.array(target).reshape((-1,1))\n","99888a6a":"from sklearn.model_selection import train_test_split as tts\nxtrain,xtest,ztrain,ztest=tts(train,target,train_size=0.7)","386324e2":"seq.compile(loss='binary_crossentropy',metrics=['accuracy'],optimizer='rmsprop')\n\nseq.fit(xtrain,ztrain,validation_data=(xtest,ztest),epochs=2000,batch_size=16)","36979271":"from sklearn.metrics import accuracy_score as acs\nprint(acs(ztest,seq.predict_classes(xtest)))","38389fb4":"a=seq.predict_classes(test)","a0c23da5":"o=pd.DataFrame(a,columns=['Survived'])\no.index=pd.read_csv('..\/input\/test.csv')['PassengerId']\no.index.name='PassengerId'","eb7c0fbd":"o.to_csv('result.csv')","eb4d1825":"Crosschecking the final model against validation data for checking the overall accuracy","861ac31e":"Going with basic analysis of the given data to know\n---->different datatypes\n---->total number of entries\n---->null values\n---->different features available\n---->various statistical information like std,mean,count etc\n         This all is done using info() and describe()","0224b58e":"converting the train and test data to np.array alongside target","87916c43":"Reading training and testing Dataset as train and test as pandas Dataframe........ ","8df8b359":"Finally making our NN fit over the train dataset.....","3ace5042":"Data Visualization to show features and target relation using TABLEAU\n","11b61a6b":"Though more than 50% of data is missing for Cabin,it can be very useful as cabin location should have affected survival rate, so we aren't dropping it","f1afbd7a":"Splitting training data to train and validation data in the ratio of 7:3","8d1a390e":"Predict survivors from test dataset","0b565590":"Using LabelEncoding to convert categorical data to numeric data and multiplying by 10 so as to properly diffferentiate between various sub categories ","c12e531c":"Filling NA values of newly created feature Honorific and Age","7afe6123":"Adding features Family and Alone as these can be critical info for survival prediction....","67df12b4":"As missing data in Embarked is very low , we should drop the rows having missing value","edfebf6d":"FEATURE ENGINEERING\nExtracting iMportant feature from Name column (Honorific info) using regex","7321b526":"preparing result file that has to be submitted to competition","86e4bfc7":"Some more relations between features","6fc67409":"Extracting useful info from Cabin column .... ","007f977f":"Dropping columns that aren't required for prediction...","8ffd3e4c":"checking sample data from train and test....","2dcb688a":"**PREDICTION**\nAfter testing the model on various classifiers....Neural Networks produces one of the best results.Here,I would be implementing my NN using keras library "}}