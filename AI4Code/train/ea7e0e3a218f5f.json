{"cell_type":{"949c2d85":"code","abcdfcbd":"code","1b3835ab":"code","645a63f9":"code","e57f1f08":"code","57698e93":"code","f3840379":"code","4eee17c9":"code","7958da46":"code","bbee5153":"code","886aaeb4":"code","27b12e7f":"code","d8ddb619":"code","730867e8":"code","ba8a3b74":"code","182a527b":"code","12fca976":"code","2741f95b":"code","326a7595":"code","9b65afe1":"code","f7a11a5c":"code","78b97632":"code","f1f59b43":"code","4ba78e79":"code","5eb33ff1":"code","57a936c4":"code","49fe062f":"code","8612999c":"code","0332e458":"code","930a9c4b":"code","dd2c428a":"code","687e309a":"code","ae11fbe0":"code","09d69961":"code","59a670d2":"code","d84f4e39":"code","31cae12f":"code","64bea275":"code","49d87d0a":"code","a2067673":"code","034c90bc":"code","1a6e516d":"code","7f433b0b":"code","231da947":"code","714f3765":"code","47828a5a":"code","34425e90":"code","6a602311":"code","59e3fa48":"code","1397b5ae":"code","cd0988c3":"code","579ecb6c":"code","0ef6cc15":"code","518387c2":"code","66ee8f7e":"code","5b6af612":"code","0966084b":"code","55137cc3":"code","ab43478c":"code","600b1215":"code","70cca1e2":"code","a942df7f":"code","3cb583d1":"code","cfe5d43c":"code","e5d31bfc":"code","9deec07a":"code","0f2185e8":"code","3b6a1e7f":"code","dd6a376c":"code","995d3190":"markdown","9352a0f6":"markdown","1dd18571":"markdown","edfcaebb":"markdown"},"source":{"949c2d85":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Any results you write to the current directory are saved as output.","abcdfcbd":"train=pd.read_csv('..\/input\/train_LZdllcl.csv')\ntest=pd.read_csv('..\/input\/test_2umaH9m.csv')\nsample=pd.read_csv('..\/input\/sample_submission_M0L0uXE.csv')\n","1b3835ab":"train.head()","645a63f9":"test.head()","e57f1f08":"sample.head()","57698e93":"train.shape\n#test.shape","f3840379":"train.describe()","4eee17c9":"test.describe()","7958da46":"train['previous_year_rating']=train['previous_year_rating'].fillna(train['previous_year_rating'].mean())","bbee5153":"test['previous_year_rating']=test['previous_year_rating'].fillna(train['previous_year_rating'].mean())","886aaeb4":"train.describe()\n#test.describe()","27b12e7f":"train['not_promoted']=1-train['is_promoted']","d8ddb619":"train.groupby('gender').agg('sum')[['is_promoted','not_promoted']].plot(kind='bar',figsize=(25,12),color=['g','r'],stacked=True)","730867e8":"train.groupby('gender').agg('mean')[['is_promoted','not_promoted']].plot(kind='bar',figsize=(25,12),color=['g','r'])","ba8a3b74":"fig = plt.figure(figsize=(25, 7))\nsns.violinplot(x='education', y='age', \n               hue='is_promoted', data=train, \n               split=True,\n               palette={0: \"r\", 1: \"g\"}\n              );","182a527b":"#from sklearn.preprocessing import LabelEncoder, OneHotEncoder\n#labelencoder_X = LabelEncoder()\n#train.iloc[:,3] = labelencoder_X.fit_tranform(train.iloc[:,3])\n","12fca976":"figure = plt.figure(figsize=(25,7))\nplt.hist([train[train['is_promoted']==1]['length_of_service'],train[train['is_promoted']==0]['length_of_service']],stacked=True,color = ['g','r'],\n        bins=50,label = ['is_promoted','not_promoted'])\nplt.xlabel('length_of_service')\nplt.ylabel('no of employee')\nplt.legend();","2741f95b":"figure = plt.figure(figsize=(25, 7))\nplt.hist([train[train['is_promoted'] == 1]['age'], train[train['is_promoted'] == 0]['age']], \n         stacked=True, color = ['g','r'],\n         bins = 50, label = ['is_promoted','not_promoted'])\nplt.xlabel('age')\nplt.ylabel('number of employees')\nplt.legend();","326a7595":"figure = plt.figure(figsize=(25, 7))\nplt.hist([train[train['is_promoted'] == 1]['previous_year_rating'], train[train['is_promoted'] == 0]['previous_year_rating']], \n         stacked=True, color = ['g','r'],\n         bins = 50, label = ['is_promoted','not_promoted'])\nplt.xlabel('previous year rating')\nplt.ylabel('number of employees')\nplt.legend();","9b65afe1":"figure = plt.figure(figsize=(25, 7))\nplt.hist([train[train['is_promoted'] == 1]['no_of_trainings'], train[train['is_promoted'] == 0]['no_of_trainings']], \n         stacked=True, color = ['g','r'],\n         bins = 50, label = ['is_promoted','not_promoted'])\nplt.xlabel('no of training')\nplt.ylabel('number of employees')\nplt.legend();","f7a11a5c":"figure=plt.figure(figsize=(25,7))\nplt.hist([train[train['is_promoted']==1]['KPIs_met >80%'],train[train['is_promoted'] == 0]['KPIs_met >80%']],stacked=True,\n         color = ['g','r'])\nplt.xlabel('KP1')\nplt.ylabel('no of employee')\nplt.legend();","78b97632":"figure=plt.figure(figsize=(25,7))\nplt.hist([train[train['is_promoted']==1]['length_of_service'],train[train['is_promoted'] == 0]['length_of_service']],stacked=True,\n         color = ['g','r'])\nplt.xlabel('length_of_service')\nplt.ylabel('no of employee')\nplt.legend();","f1f59b43":"figure=plt.figure(figsize=(25,7))\nplt.hist([train[train['is_promoted']==1]['awards_won?'],train[train['is_promoted'] == 0]['awards_won?']],stacked=True,\n         color = ['g','r'])\nplt.xlabel('awards_won')\nplt.ylabel('no of employee')\nplt.legend();","4ba78e79":"figure=plt.figure(figsize=(25,7))\nplt.hist([train[train['is_promoted']==1]['avg_training_score'],train[train['is_promoted'] == 0]['avg_training_score']],stacked=True,\n         color = ['g','r'])\nplt.xlabel('avg_training_score')\nplt.ylabel('no of employee')\nplt.legend();","5eb33ff1":"train['region'].describe()","57a936c4":"def get_combined_data():\n    train=pd.read_csv('..\/input\/train_LZdllcl.csv')\n    test=pd.read_csv('..\/input\/test_2umaH9m.csv')\n    targets=train.is_promoted\n    train.drop(['is_promoted'],1,inplace=True)\n    #train.shape\n    combined = train.append(test)\n    combined.reset_index(inplace=True)\n    return combined","49fe062f":"combined=get_combined_data()\n","8612999c":"combined.head()","0332e458":"combined.describe()","930a9c4b":"combined['previous_year_rating']=combined['previous_year_rating'].fillna(combined['previous_year_rating'].mean())","dd2c428a":"combined.describe()","687e309a":"df=pd.get_dummies(combined['gender'])\ndf.head()","ae11fbe0":"combined=pd.concat([combined,df],axis=1)\n","09d69961":"combined.head()","59a670d2":"combined=combined.drop('gender',axis=1)\ncombined.head()","d84f4e39":"df=pd.get_dummies(combined['education'])\ndf.head()","31cae12f":"combined=pd.concat([combined,df],axis=1)","64bea275":"combined=combined.drop('education',axis=1)","49d87d0a":"df=pd.get_dummies(combined['department'])\ncombined=pd.concat([combined,df],axis=1)\n\ncombined.head()","a2067673":"combined=combined.drop('department',axis=1)","034c90bc":"combined.head()","1a6e516d":"df=pd.get_dummies(combined['recruitment_channel'])\ncombined = pd.concat([combined,df],axis=1)\ncombined=combined.drop('recruitment_channel',axis=1)\ncombined.head()","7f433b0b":"#df=pd.get_dummies(combined['region'])\n#combined = pd.concat([combined,df],axis=1)\ncombined = combined.drop('region',axis=1)\ncombined.head()","231da947":"combined['age']=pd.qcut(combined['age'],8,labels=['age1','age2','age3','age4','age5','age6','age7','age8'])\ncombined=pd.concat([combined,pd.get_dummies(combined['age'])],axis=1)\ncombined.head()","714f3765":"combined=combined.drop('age',axis=1)","47828a5a":"combined.head()","34425e90":"combined['avg_training_score']=pd.qcut(combined['avg_training_score'],12,labels=['avg_training_score1','avg_training_score2','avg_training_score3','avg_training_score4',\n                                                                                'avg_training_score5','avg_training_score6','avg_training_score7','avg_training_score8','avg_training_score9',\n                                                                                'avg_training_score10','avg_training_score11','avg_training_score12'])","6a602311":"combined=pd.concat([combined,pd.get_dummies(combined['avg_training_score'])],axis=1)\ncombined.head()","59e3fa48":"combined=combined.drop('avg_training_score',axis=1)\ncombined.head()","1397b5ae":"combined.shape","cd0988c3":"#combined['length_of_service']=pd.qcut(combined['length_of_service'],34,labels=['length_of_service1','length_of_service2','length_of_service3','length_of_service4',\n ##                                                                            'length_of_service9','length_of_service10','length_of_service11','length_of_service12',\n   #                                                                           'length_of_service13','length_of_service14','length_of_service15','length_of_service16',\n    #                                                                          'length_of_service17','length_of_service18','length_of_service19','length_of_service20',\n     #                                                                         'length_of_service21','length_of_service22','length_of_service23','length_of_service24',\n      #                                                                        'length_of_service25','length_of_service26','length_of_service27','length_of_service28',\n       #                                                                       'length_of_service29','length_of_service30','length_of_service31','length_of_service32',\n        #                                                                     'length_of_service33','length_of_service34'],duplicates='drop')\n#combined=pd.concat([combined,pd.get_dummies(combined['length_of_service'])],axis=1)\n#combined.head()","579ecb6c":"x_train=combined.iloc[:54808]\ny_train=pd.DataFrame(train['is_promoted'])\ny_train.shape","0ef6cc15":"from xgboost import XGBClassifier\nfrom sklearn.ensemble import RandomForestClassifier","518387c2":"x_test=combined.iloc[54808:]","66ee8f7e":"x_test.shape","5b6af612":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(x_train,y_train,test_size=0.3)","0966084b":"#clfd=XGBClassifier()\n#clfd.fit(x_train,y_train)\nclfd=RandomForestClassifier()\nclfd.fit(X_train,Y_train)","55137cc3":"features = pd.DataFrame()\nfeatures['feature'] = x_train.columns\nfeatures['importance'] = clfd.feature_importances_\nfeatures.sort_values(by=['importance'], ascending=True, inplace=True)\nfeatures.set_index('feature', inplace=True)","ab43478c":"features.plot(kind='barh',figsize=(150,150))\nplt.legend()","600b1215":"print(features.sort_values(by=['importance']))","70cca1e2":"#combined.drop(['region_18','region_34','region_9','region_33','region_33','region_'])","a942df7f":"predict=clfd.predict(X_test)","3cb583d1":"from sklearn.metrics import confusion_matrix,classification_report","cfe5d43c":"print(confusion_matrix(Y_test,predict))\nprint(classification_report(Y_test,predict))","e5d31bfc":"#from sklearn.model_selection import StratifiedKFold\n#skf = StratifiedKFold(n_splits=5, random_state=None)\n# X is the feature set and y is the target\n#for train_index, test_index in skf.split(x_train,y_train): \n    #print(\"Train:\", train_index, \"Validation:\", test_index) \n   # X_train, X_test = x_train[train_index], x_train[test_index] \n   # y_train, y_test = y_train[train_index], y_train[test_index]","9deec07a":"predict1=clfd.predict(x_test)","0f2185e8":"sample['is_promoted']=pd.DataFrame(predict1)\n","3b6a1e7f":"sample.head()","dd6a376c":"sample.to_csv('submission.csv',index=False)","995d3190":"it is observed that most people are not promoted","9352a0f6":"#**Feature Engineering**","1dd18571":"here we can say that people who have 95% or more avg_training_score  must have be promoted","edfcaebb":"what i have seen so far  is we have some missing values of previous_year_rating so fill the missing values with mean."}}