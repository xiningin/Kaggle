{"cell_type":{"17d05b42":"code","422ed0b3":"code","4af4ab32":"code","82e21ea9":"code","c5adfe07":"code","3340c5c2":"code","a390fc9c":"code","21a4ab6f":"code","e4cf5980":"code","6ceeb96f":"code","4a71ca26":"code","cc807b9e":"code","666747f3":"code","3aaf47b0":"code","352f3471":"code","758e39aa":"code","d4356b46":"code","ab51929f":"code","24efe084":"code","865dcc1e":"code","821c391d":"code","63ba3ef9":"code","5616bac5":"code","5777b221":"code","912d685b":"code","03b740b4":"code","b1ea9a4c":"code","d05d9cff":"code","dcc3f121":"code","61439b85":"code","9a0ea5e3":"code","0769f566":"code","d2fcf810":"code","91cd6e38":"code","c6107996":"code","7a85abdb":"code","11dca0e5":"code","65d5bd4f":"code","a3a52115":"code","276d5c04":"code","53edd19f":"code","bfcf9ce6":"code","504a2871":"code","b77a4f0b":"code","66fd0759":"code","52e28ff8":"code","13301dad":"code","c88510d8":"code","661bdf8e":"code","9c426798":"code","24c5ea41":"code","efe91727":"code","50eee3e6":"code","fba5888f":"code","0c3091a0":"code","8d400049":"code","4354a9a3":"code","7f61955c":"code","d09dabc1":"code","cac81cd8":"code","40257a10":"code","a79e3cb5":"code","275065e0":"code","e7b3752e":"code","a383555a":"code","a5720e26":"code","d0e8fc8e":"code","103b1105":"markdown","45a60ae3":"markdown","63745c82":"markdown","647ed566":"markdown","a23c4d04":"markdown","9a1374ec":"markdown","54c631b2":"markdown","0a029667":"markdown","418a799a":"markdown","53cb511f":"markdown","e7e3471d":"markdown","02b3ac33":"markdown","949d2657":"markdown","b5606585":"markdown","d323b7d3":"markdown","f55db053":"markdown","0c51a994":"markdown","2ea26b6f":"markdown","e5809b2e":"markdown","00da5ae8":"markdown","1c928e37":"markdown","56f43183":"markdown","f2d5e5d7":"markdown","834912b0":"markdown","a73fd183":"markdown","e79e70e9":"markdown","61d86714":"markdown","4cc9a16e":"markdown","2697266a":"markdown","2591bf3c":"markdown","165bab91":"markdown","08c283b6":"markdown","e765c40a":"markdown","ca2ea433":"markdown","4ceff471":"markdown","3c77f0da":"markdown","05f25104":"markdown","f81da473":"markdown","c02bebcd":"markdown","33dc70b4":"markdown","50d5daa2":"markdown","0272b5f8":"markdown","c8371802":"markdown","c81553ca":"markdown"},"source":{"17d05b42":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns","422ed0b3":"seed = pd.read_csv('\/kaggle\/input\/seed-from-uci\/Seed_Data.csv')\nseed.head()","4af4ab32":"seed.shape","82e21ea9":"seed.info()","c5adfe07":"seed.describe()","3340c5c2":"seedd=seed.copy()\nseedd.drop_duplicates(subset=None,inplace=True)\nseedd.shape","a390fc9c":"del seedd\nseed.shape","21a4ab6f":"seed.isnull().sum()","e4cf5980":"seed.isnull().sum(axis=1)","6ceeb96f":"sns.violinplot(x='A',data=seed)\nplt.show()","4a71ca26":"sns.violinplot(y='A',x='target',data=seed)\nplt.show()","cc807b9e":"sns.violinplot(x='P',data=seed)\nplt.show()","666747f3":"sns.violinplot(y='P',x='target',data=seed)\nplt.show()","3aaf47b0":"sns.violinplot(x='C',data=seed)\nplt.show()","352f3471":"percentiles = seed['C'].quantile([0.05,0.95]).values\nseed['C'][seed['C'] <= percentiles[0]] = percentiles[0]\nseed['C'][seed['C'] >= percentiles[1]] = percentiles[1]","758e39aa":"sns.violinplot(x='C',data=seed)\nplt.show()","d4356b46":"sns.violinplot(y='C',x='target',data=seed)\nplt.show()","ab51929f":"sns.violinplot(x='LK',data=seed)\nplt.show()","24efe084":"sns.violinplot(y='LK',x='target',data=seed)\nplt.show()","865dcc1e":"sns.violinplot(x='WK',data=seed)\nplt.show()","821c391d":"sns.violinplot(y='WK',x='target',data=seed)\nplt.show()","63ba3ef9":"sns.violinplot(x='A_Coef',data=seed)\nplt.show()","5616bac5":"percentiles = seed['A_Coef'].quantile([0.01,0.99]).values\nseed['A_Coef'][seed['A_Coef'] <= percentiles[0]] = percentiles[0]\nseed['A_Coef'][seed['A_Coef'] >= percentiles[1]] = percentiles[1]","5777b221":"sns.violinplot(x='A_Coef',data=seed)\nplt.show()\n","912d685b":"sns.violinplot(x='LKG',data=seed)\nplt.show()","03b740b4":"sns.violinplot(y='LKG',x='target',data=seed)\nplt.show()","b1ea9a4c":"ax=sns.countplot('target',data=seed)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.show()","d05d9cff":"seed.describe()","dcc3f121":"plt.figure(figsize = (10,5))\nsns.heatmap(seed.corr(), annot = True, cmap=\"rainbow\")\nplt.show()\n","61439b85":"from sklearn.model_selection import train_test_split\ntrain,test = train_test_split(seed, train_size=0.7, random_state=11)\n","9a0ea5e3":"X_train=train.drop('target',axis=1)\nX_test=test.drop('target',axis=1)\ny_train=train['target']\ny_test=test['target']","0769f566":"# Standarisation technique for scaling\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_train[:]=scaler.fit_transform(X_train[:])\nX_test[:]=scaler.transform(X_test[:])","d2fcf810":"X_train.info()","91cd6e38":"from catboost import CatBoostClassifier\nmodel=CatBoostClassifier()\ncategorical_features_indices = np.where(X_train.dtypes != np.float)[0]\ncategorical_features_indices","c6107996":"model.fit(X_train,y_train,cat_features=([]))","7a85abdb":"import sklearn.metrics\nscore_cbc=model.score(X_test,y_test)\nprint('Score :',score_cbc)","11dca0e5":"sklearn.metrics.confusion_matrix(y_test,model.predict(X_test))","65d5bd4f":"roc_auc_score_cbc=sklearn.metrics.roc_auc_score(y_test,model.predict_proba(X_test),multi_class='ovr')\nprint('Compute Area Under the Receiver Operating Characteristic Curve',roc_auc_score_cbc)","a3a52115":"cohen_kappa_score_cbc=sklearn.metrics.cohen_kappa_score(model.predict(X_test),y_test)\nprint('Cohen\u2019s kappa :',cohen_kappa_score_cbc)\n","276d5c04":"sklearn.metrics.f1_score(y_test,model.predict(X_test),average='macro')","53edd19f":"sklearn.metrics.f1_score(y_test,model.predict(X_test),average='micro')","bfcf9ce6":"sklearn.metrics.f1_score(y_test,model.predict(X_test),average='weighted')","504a2871":"sklearn.metrics.f1_score(y_test,model.predict(X_test),average=None)","b77a4f0b":"sklearn.metrics.fbeta_score(y_test,model.predict(X_test),average='macro',beta=0.5)","66fd0759":"sklearn.metrics.fbeta_score(y_test,model.predict(X_test),average='micro',beta=0.5)","52e28ff8":"sklearn.metrics.fbeta_score(y_test,model.predict(X_test),average='weighted',beta=0.5)","13301dad":"sklearn.metrics.fbeta_score(y_test,model.predict(X_test),average=None,beta=0.5)","c88510d8":"sklearn.metrics.hamming_loss(y_test,model.predict(X_test))","661bdf8e":"sklearn.metrics.hinge_loss(y_test,model.predict_proba(X_test))","9c426798":"sklearn.metrics.jaccard_score(y_test,model.predict(X_test),average='macro')","24c5ea41":"sklearn.metrics.jaccard_score(y_test,model.predict(X_test),average='micro')","efe91727":"sklearn.metrics.jaccard_score(y_test,model.predict(X_test),average='weighted')","50eee3e6":"sklearn.metrics.jaccard_score(y_test,model.predict(X_test),average=None)","fba5888f":"sklearn.metrics.log_loss(y_test,model.predict_proba(X_test))","0c3091a0":"sklearn.metrics.multilabel_confusion_matrix(y_test,model.predict(X_test))","8d400049":"sklearn.metrics.matthews_corrcoef(y_test,model.predict(X_test))","4354a9a3":"sklearn.metrics.precision_recall_fscore_support(y_test,model.predict(X_test))","7f61955c":"sklearn.metrics.precision_score(y_test,model.predict(X_test),average='macro')","d09dabc1":"sklearn.metrics.precision_score(y_test,model.predict(X_test),average='micro')","cac81cd8":"sklearn.metrics.precision_score(y_test,model.predict(X_test),average='weighted')","40257a10":"sklearn.metrics.precision_score(y_test,model.predict(X_test),average=None)","a79e3cb5":"sklearn.metrics.recall_score(y_test,model.predict(X_test),average='macro')","275065e0":"sklearn.metrics.recall_score(y_test,model.predict(X_test),average='micro')","e7b3752e":"sklearn.metrics.recall_score(y_test,model.predict(X_test),average='weighted')","a383555a":"sklearn.metrics.recall_score(y_test,model.predict(X_test),average=None)","a5720e26":"sklearn.metrics.zero_one_loss(y_test,model.predict(X_test))","d0e8fc8e":"print(sklearn.metrics.classification_report(y_test,model.predict(X_test)))","103b1105":"# Jaccard Score","45a60ae3":"# ***This Notebook contains all evaluation matrixes available in Scikit-learn python library for a Multi-Label Classification***","63745c82":"No missing values in rows ","647ed566":"# Precision, Recall, FScore &  Support","a23c4d04":"# Precision Score ","9a1374ec":"# Hamming Loss","54c631b2":"Outliers found","0a029667":"No outliers found","418a799a":"# Zero-One Loss","53cb511f":"Compute the precision","e7e3471d":"# Hinge Loss ","02b3ac33":"# Score","949d2657":"Compute the recall","b5606585":"Compute the average Hamming loss.","d323b7d3":"No missing value ","f55db053":"Compute a confusion matrix for each class or sample","0c51a994":"No outliers found","2ea26b6f":"# F1 Score","e5809b2e":"# ROC AUC Score","00da5ae8":"Average hinge loss (non-regularized)","1c928e37":"Compute the Matthews correlation coefficient (MCC)","56f43183":"No outliers found","f2d5e5d7":"# Duplicate Check","834912b0":"# Log Loss ","a73fd183":"# EDA ","e79e70e9":"Compute precision, recall, F-measure and support for each class","61d86714":"Zero-one classification loss.","4cc9a16e":"# Missing value Check","2697266a":"Log loss, aka logistic loss or cross-entropy loss.\n","2591bf3c":"# Multi-Label Confusion Matrix","165bab91":"Outliers found","08c283b6":"# **Evaluation**\n\n![image.png](attachment:image.png)","e765c40a":"# Matthews Corrcoef","ca2ea433":"# Recall Score ","4ceff471":"No Duplicates Found","3c77f0da":"No outliers found","05f25104":"# Cohen Kappa Score","f81da473":"Jaccard similarity coefficient score","c02bebcd":"# F Score Beta","33dc70b4":"# Classification Report ","50d5daa2":"![image.png](attachment:image.png)","0272b5f8":"No outliers found","c8371802":"We are using Wheat dataset (https:\/\/www.kaggle.com\/dongeorge\/seed-from-uci) for this notebook. It's one of easy & important dataset to learn & practice the machine learning concepts.\n","c81553ca":"# Confusion Matrix"}}