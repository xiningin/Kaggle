{"cell_type":{"2a6bad94":"code","4d5ce9f7":"code","9438259f":"code","acb499c1":"code","b2e977b1":"code","ee25e0d0":"code","674a1dec":"code","ea62de5c":"code","6d0b717a":"code","2ce15ff5":"markdown","2deb4c8c":"markdown","456aea9b":"markdown","de4759d1":"markdown","035214e8":"markdown","5a355f2f":"markdown","799c2fab":"markdown","581f163c":"markdown","298e9a04":"markdown","40f8bf3b":"markdown","77cd777f":"markdown","ed077b69":"markdown","88529e2f":"markdown","701549b5":"markdown","56949573":"markdown"},"source":{"2a6bad94":"# we may download the data from sklearn datasets\n\nfrom sklearn.datasets import load_iris\n\nplants = load_iris()","4d5ce9f7":"# let's see some basics of the data\n\nprint(\"Target Names (Plant Classes given in the Data): \\n\" + str(plants[\"target_names\"]) + \"\\n\")\nprint(\"Feature Names (Names of Plant Characteristics given in the Data): \\n\" + str(plants[\"feature_names\"]) + \"\\n\")\nprint(\"Number of Observed Plants given in the Data: \\n\" + str(len(plants[\"data\"])) + \"\\n\")\n\n\nprint(\"First Five Rows from the Feature Data: \\n\"+ str(plants[\"data\"][0:5]) + \"\\n\")\n\nprint(\"First Five Rows from the Target Data: \\n\" + str(plants[\"target\"][0:5]) + \"\\n\")\n","9438259f":"# imports the train_test_split function\n\nfrom sklearn.model_selection import train_test_split","acb499c1":"# splits the data as %80 training and %20 testing (an automatic process)\n\nX_training, X_testing, y_training, y_testing = train_test_split(plants[\"data\"], plants[\"target\"], test_size=0.20, \n                                                               random_state = 1)","b2e977b1":"# shows the shape of training and testing data\n\nprint(\"Shape of training feature data: \" + str(X_training.shape))\nprint(\"Shape of training target data: \" + str(y_training.shape))\nprint(\"Shape of testing feature data: \" + str(X_testing.shape))\nprint(\"Shape of testing target data: \" + str(y_testing.shape))","ee25e0d0":"# imports the necessary algorithm\n\nfrom sklearn.neighbors import KNeighborsClassifier","674a1dec":"# constructs the model\n\nknnClassifier = KNeighborsClassifier(n_neighbors = 7)","ea62de5c":"# train the model with training data\n\nknnClassifier.fit(X_training, y_training)","6d0b717a":"prediction_Test = knnClassifier.predict(X_testing)\nprint(\"Predicted classes for the test data: \" + str(prediction_Test) + \"\\n\")\nprint(\"Correct classes for the test data:   \" + str(y_testing) + \"\\n\")\n\nprint(\"See the true and false predictions as a list: \" + str(prediction_Test == y_testing) + \"\\n\")\n\n# code to be used the see the success as percentage\n\ntrues_Falses = prediction_Test == y_testing\n\nfalses = 0\ntrues = 0\n\nfor result in trues_Falses:\n    if result == True:\n        trues = trues + 1\n    else:\n        falses = falses + 1\n\nprint(\"Percentage of true predictions to all predictions: %\" + str(round((trues \/ (trues+falses) * 100),3)) + \"\\n\")","2ce15ff5":"###  **3.2. Choose a classification model and train the model with the training data .**\n#### **3.2.0. Since we have three labels, we can use the k-nearest neighbors algorithm and see if it is successful.**\n#### **3.2.1. If we do not get successful results that we expect, we can try another algorithm.**\n#### **3.2.2. You can search the internet to learn how the algorithm works. This article just uses it since the goal is to learn the basics, not the details.**","2deb4c8c":"### **3.0.1. Data Set Basics:**\n\n#### **a) Basics of Classes (Target):** 3 classes coded as 0, 1, 2 in the dataset (setosa, versicolor, virginica)\n#### **b) Basics of Features (Predictors):** 4 numeric features in cm (sepal length, sepal width, petal length, petal width)\n#### **c) Number of observed plants given in the data:** 150\n","456aea9b":"## **3. Solution Steps**\n\n####  **3.0. Load the data and observe the basics.**\n\n####  **3.1. Split the data in two as training and test.**\n\n####  **3.2. Choose a classification model and train the model with the training data .**\n\n####  **3.3. Test the success of the model with the test data.**","de4759d1":"#### **3.2.3. Let's train the model with training data.**","035214e8":"###  **3.1. Split the data in two as training and test.**\n#### **3.1.0. Since we want to use our model to predict the class of newly observed plants, we should have some test data to try the success of the model.**\n#### **3.1.1. This test data should not be used to train our model. That is why we should split the data given in two as training and test.**\n#### **3.1.2. In famous machine learning library ScikitLearn, we have a function to do the train-test split for the given data. Let's see how to do the job:**","5a355f2f":"###  **3.0. Load the data and observe the basics.**","799c2fab":"#### **3.1.3. As expected %80 of the data is specified as training and %20 of the data as testing.**","581f163c":"#### **3.3.1. As seen, our model predicted the class of the test plants almost %97 correctly which is a very nice result for our case.**","298e9a04":"## **4. Conclusion**\n\n#### **4.0. The goal of this article was to show the basics of classification via using the method of learning by doing.**\n\n#### **4.1. Via just using Python programming language and ScikitLearn library, a successful prediction model with almost %97 success was reached.**\n\n \n ","40f8bf3b":"## **2. Problem Statement**\n\n####  **2.0. We are given a duty of a botanist: We should classify some plants according to given data.**\n\n####  **2.1. The provided data are very nicely recorded without the need for preprocessing and have labels so it is easy for us to construct a classification model via using Python and the famous machine learning library Scikit-Learn.**","77cd777f":"## **0. About This Article**\n\n#### **0.0. This article tries to give some insights about classification (a famous type of machine learning).**\n\n#### **0.1. This article tries to be very succint. Therefore it**\n\n   **a) does not give long definitions,**\n\n   **b) tries to use the method of learning by doing,**\n   \n   **c) uses Python when coding is needed.**\n   \n#### **0.2. This article uses numbering and lettering to be followed easier.**","ed077b69":"#### **3.2.4. Since the model is trained, we can use it to predict the class of newly observed plants.**\n#### **3.2.5. To evaluate the performance of the trained model, we can use the test data.**","88529e2f":"###  **3.3. Test the success of the model with the test data.**\n#### **3.3.0. Since we know the target values (classes) of our test data, we can see the success of our model by classifying the test data and comparing the results with the correct ones given.**","701549b5":"## **1. Some Preliminaries About the Subject**\n\n####  **1.0. Machine learning is composed of algorithms that are used to extract beneficial information from provided data.**\n\n####  **1.1. Machine learning algorithms improve as more data are provided unlike traditional programming.**\n\n####  **1.2. Supervised machine learning is a type where the data provided have labels.**\n\n####  **1.3. Classification is a type of supervised machine learning where the data provided have discrete number of labels.**\n   \n####  **1.4. If you have some problem with understanding info given in this part, do not worry. Just begin the next part with a concrete example.**","56949573":"# **Classification without Too Much Talking**\n\n## Tolga Yaz"}}