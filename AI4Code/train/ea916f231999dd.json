{"cell_type":{"fbc89926":"code","4d3e0865":"code","4824489f":"code","454c18b7":"code","1f87b768":"code","3c7ab57a":"code","b835d932":"code","6fd48ee4":"code","28f6f669":"code","861981ac":"code","aeab41c1":"code","594ac6d2":"code","4032a25c":"code","5e18ee74":"code","94a4ff99":"code","62c90336":"markdown","9ecbbc36":"markdown","a1e94b42":"markdown","1c27424a":"markdown","25059bf1":"markdown","28befcc5":"markdown","9ca9d73e":"markdown","fb3c312f":"markdown","89ac732a":"markdown","5e4ae20f":"markdown","5ebe8d84":"markdown","1dda97d8":"markdown"},"source":{"fbc89926":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimport seaborn as sns\nimport plotly as plotly                # Interactive Graphing Library for Python\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot, plot\ninit_notebook_mode(connected=True)\nimport sklearn\nfrom sklearn import preprocessing\nfrom sklearn.linear_model import Ridge\nfrom sklearn import metrics\nfrom sklearn.metrics import r2_score, mean_absolute_error\nfrom sklearn.preprocessing import LabelEncoder,OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression,LogisticRegression\nfrom sklearn import tree\nfrom sklearn.ensemble import RandomForestRegressor,  GradientBoostingRegressor","4d3e0865":"airbnb = pd.read_csv(\"\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv\")\nairbnb.head()","4824489f":"airbnb.isnull().sum()","454c18b7":"airbnb.drop([\"id\",\"host_name\",\"last_review\"],axis=1,inplace=True)\nairbnb.head()","1f87b768":"airbnb.fillna({\"reviews_per_month\":0},inplace=True)\nairbnb.reviews_per_month.isnull().sum()","3c7ab57a":"fig = plt.subplots(figsize = (12,5))\nsns.countplot(x = \"room_type\"  ,hue = \"neighbourhood_group\",data=airbnb)","b835d932":"a  = airbnb.groupby(\"neighbourhood_group\")[\"neighbourhood\"].value_counts()\nb = a.index.levels[0]\na14 = []\na16 = []\nfor i in range(len(b)):\n    df_level = a.loc[[b[i],\"neighbourhood\"]]\n    df_level_ch = pd.DataFrame(df_level)\n    for j in range(1):\n        a13 = df_level_ch.iloc[j].name\n        b1 = df_level_ch.values[j][0]\n        print(a13,b1)\n        a16.append(b1)\n        a14.append(a13)\na15 = pd.DataFrame(a14)\na16 = pd.DataFrame(a16)\na17 = pd.concat([a15,a16],axis=1)\na17.columns=[\"\u5730\u533a\",\"\u533a\u57df\",\"\u6570\u91cf\"]\na17.plot.bar(x=\"\u533a\u57df\",y=\"\u6570\u91cf\")","6fd48ee4":"airbnb.price.mean()  ","28f6f669":"plt.figure(figsize = (16,8))\nsu_5 = airbnb[airbnb.price < 700]\nsns.violinplot(data=su_5,x=\"neighbourhood_group\",y=\"price\")","861981ac":"le=preprocessing.LabelEncoder()   \nle.fit(airbnb[\"neighbourhood_group\"]) #\u6807\u7b7e\u5316\nairbnb[\"neighbourhood_group\"] = le.transform(airbnb[\"neighbourhood_group\"])\n\nle=preprocessing.LabelEncoder()\nle.fit(airbnb[\"neighbourhood\"])\nairbnb[\"neighbourhood\"] = le.transform(airbnb[\"neighbourhood\"])\nairbnb[\"neighbourhood\"]\n\nle=preprocessing.LabelEncoder()\nle.fit(airbnb['room_type'])\nairbnb['room_type'] = le.transform(airbnb['room_type'])\n\nairbnb.sort_values(by=\"price\",ascending=True,inplace=True)\n\nairbnb.head()","aeab41c1":"lm = LinearRegression()\nX = airbnb[['neighbourhood_group','neighbourhood','latitude','longitude','room_type',\n            'minimum_nights','number_of_reviews','reviews_per_month',\n            'calculated_host_listings_count','availability_365']]\ny = airbnb[\"price\"]\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=100)\nlm.fit(X_train,y_train)","594ac6d2":"score = lm.score(X_test,y_test)#\u9884\u6d4b\u51c6\u786e\u7387\nscore","4032a25c":"yhat = lm.predict(X_test)\nplt.figure(figsize=(16,8))\nsns.regplot(yhat,y_test)\nplt.xlabel('Predictions')\nplt.ylabel('Actual')\nplt.title(\"Linear Model Predictions\")\nplt.grid(False)\nplt.show()","5e18ee74":"GBoost = GradientBoostingRegressor(n_estimators=1000,learning_rate=0.01)\nGBoost.fit(X_train,y_train)\nscore2 = GBoost.score(X_test,y_test)\nscore2","94a4ff99":"yhat2 = GBoost.predict(X_test)   #\u9884\u6d4b\u503c\nplt.figure(figsize=(16,8))\nsns.regplot(yhat2,y_test)\nplt.xlabel('Predictions')\nplt.ylabel('Actual')\nplt.title(\"Linear Model Predictions\")\nplt.show()","62c90336":"**\u81ea2008\u5e74\u4ee5\u6765\uff0c\u5bbe\u5ba2\u548c\u623f\u4e1c\u5c31\u5f00\u59cb\u4f7f\u7528Airbnb\u6269\u5927\u65c5\u884c\u53ef\u80fd\u6027\uff0c\u5e76\u63d0\u4f9b\u66f4\u72ec\u7279\uff0c\u4e2a\u6027\u5316\u7684\u4f53\u9a8c\u4e16\u754c\u7684\u65b9\u5f0f\u3002\u8be5\u6570\u636e\u96c6\u63cf\u8ff0\u4e862019\u5e74\u7ebd\u7ea6\u5dde\u7ebd\u7ea6\u5e02\u7684\u4e0a\u5e02\u6d3b\u52a8\u548c\u6307\u6807\u3002\nAirbnb\u662fAirBed and Breakfast (\"Air-b-n-b\")\u7684\u7f29\u5199\uff0c\u4e2d\u6587\u540d\uff1a\u7231\u5f7c\u8fce \u3002\u7231\u5f7c\u8fce\u662f\u4e00\u5bb6\u8054\u7cfb\u65c5\u6e38\u4eba\u58eb\u548c\u5bb6\u6709\u7a7a\u623f\u51fa\u79df\u7684\u623f\u4e3b\u7684\u670d\u52a1\u578b\u7f51\u7ad9\uff0c\u5b83\u53ef\u4ee5\u4e3a\u7528\u6237\u63d0\u4f9b\u591a\u6837\u7684\u4f4f\u5bbf\u4fe1\u606f\u3002\n\u6b64\u516c\u5f00\u6570\u636e\u96c6\u662fAirbnb\u7684\u4e00\u90e8\u5206\uff0c\u5176\u539f\u59cb\u8d44\u6e90\u53ef\u5728\u6b64\u7f51\u7ad9\u4e0a\u627e\u5230\u3002**","9ecbbc36":"### \u7ecf\u8fc7\u4f5c\u56fe\u540e\u6211\u4eec\u5f97\u5230\u5230\u4e86\u4e0b\u9762\u7684\u4fe1\u606f \u7efc\u5408\u6765\u770b\u66fc\u54c8\u987f\u548c\u5e03\u9c81\u514b\u6797\u533a\u7684\u603b\u623f\u6e90\u6bd4\u8f83\u591a\u7684 \u8fd9\u548c\u5730\u65b9\u7684\u7ecf\u6d4e\u662f\u6709\u5173\u7cfb\u7684 \u800c\u4e14\u6211\u4eec\u5f97\u77e5\u4e86\u6bcf\u4e2a\u5730\u533a\u7684\u623f\u6e90\u6700\u591a\u7684\u5730\u65b9\u662f\u54ea\u4e9b\u533a\u57df \u8fd9\u4e9b\u533a\u57df\u7684\u623f\u6e90\u662f\u591a\u5c11 \u4ef7\u683c\u4e0a\u4e5f\u662f\u66fc\u54c8\u987f\u6700\u591a\u5e03\u9c81\u514b\u6797\u5176\u6b21 \u603b\u548c\u6765\u770b\u90fd\u662f\u5e03\u9c81\u514b\u6797\u548c\u66fc\u54c8\u987f\u533a\u57df \u56e0\u4e3a\u66fc\u54c8\u987f\u533a\u751f\u6d3b\u6210\u672c\u9ad8 \u800c\u6392\u540d\u6700\u540e\u7684\u5e03\u6717\u514b\u65af\u6700\u5c11 \u5171\u4eab\u623f\u95f4\u662f\u6bd4\u8f83\u5c11\u7684 \u79c1\u4eba\u623f\u95f4\u548c\u516c\u5bd3\u90fd\u662f\u6bd4\u8f83\u591a\u7684","a1e94b42":"### \u7ebd\u7ea6\u7684\u5e73\u5747\u4ef7\u683c","1c27424a":"# \u7f3a\u5931\u503c\u7684\u5904\u7406","25059bf1":"# \u901a\u8fc7\u4f5c\u56fe\u53d1\u73b0\u66fc\u54c8\u987f\u548c\u5e03\u9c81\u514b\u6797\u7684\u623f\u6e90\u6bd4\u8f83\u591a","28befcc5":"# \u8bfb\u53d6\u6570\u636e","9ca9d73e":"# LinearRegression","fb3c312f":"### \u6c42\u51fa\u56db\u4e2a\u5730\u533a\u6700\u591a\u623f\u95f4\u7684\u533a\u57df","89ac732a":"# \u5904\u7406\u6389\u76f8\u5bf9\u4e0d\u91cd\u8981\u7684\u7279\u5f81","5e4ae20f":"# \u7a7a\u503c\u67e5\u770b\u548c\u586b\u5145","5ebe8d84":"### \u56db\u4e2a\u5730\u533a\u7684\u5e73\u5747\u623f\u4ef7\u548c\u4ef7\u683c\u6ce2\u52a8","1dda97d8":"# Gradient Boosted Regressor model"}}