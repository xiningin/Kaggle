{"cell_type":{"30d6d703":"code","aa2185fd":"code","1f475838":"code","8ec6c64b":"code","f566c3db":"code","695a5e47":"code","f5668243":"code","7f090f6a":"markdown","089cb24e":"markdown","927cab72":"markdown","22254c1f":"markdown"},"source":{"30d6d703":"# Imports\nimport pandas as pd                 # data science essentials\nimport matplotlib.pyplot as plt     # data visualization essentials\nimport seaborn as sns               # enhanced data visualization\nimport numpy as np                  # mathematical functions for analysis\nfrom os import listdir              # Get a peak of what the folder looks like\n\n\n#Peaking into the folder\n#print(listdir(\".\/\"))\n\n#Calling the file \nfile = \"..\/input\/my-ama-send\/bestsellers with categories.csv\"\n\n#Importing the CSV file\nama_book = pd.read_csv(file,\n                           header = 0)\n\n\n#A look at the data\nama_book.head()\n\n","aa2185fd":"#Checking for missing values \nama_book.isnull().any()\n\n#Getting INfor aboutr the dataset\nama_book.info()","1f475838":"#Class of genre \n# applying value_counts to channel\nama_book['Genre'].value_counts(normalize = False,\n                                 sort      = False,\n                                 ascending = False)\n\n#creating a new variable \nama_book[\"Genre Bin\"] =0\n\n#A for loop that goes over every row \nfor i,j in ama_book.iloc[:,:].iterrows():\n    \n    #Creating a flag for the book type\n    if ama_book.loc[i,\"Genre\"] == \"Fiction\":\n        ama_book.loc[i,\"Genre Bin\"] = 0 #Fiction flagger\n        \n    elif ama_book.loc[i,\"Genre\"] == \"Non Fiction\":\n        ama_book.loc[i,\"Genre Bin\"] = 1 #Non fiction flagger\n        \n    else:\n        print(\"Error BRO\")\n        \nama_book.head()","8ec6c64b":"#Counting values in a column\nama_book[\"Genre\"].value_counts(normalize = False,\n                                 sort      = False,\n                                 ascending = False)","f566c3db":"#Creating a heatmap \n\n#First of create a correlation matrix\nama_heat = (ama_book.loc[:, [\"User Rating\", \"Reviews\",\"Price\",\"Year\",\"Genre Bin\"]])\nama_heatr = ama_heat.corr()\n\n\n# Figsize\nfig, ax = plt.subplots(figsize=(16, 10))\n\n#Heatmap to display correlation \nsns.heatmap(data= ama_heatr,\n           cmap=\"viridis\",\n           linecolor = \"black\")\n\n#Rotating the xlabels\nplt.xticks(rotation = 90)\n\n\n#showing the plot\nplt.show()\n\n","695a5e47":"ama_book.describe()","f5668243":"ama_select = ama_book[ama_book.loc[:,\"User Rating\"]>=4.8]\nama_select = ama_select[ ama_select.loc[:,\"Genre\"]== \"Non Fiction\"]\nama_select = ama_select[ama_select.loc[:,\"Year\"]>= 2018]\nama_select = ama_select[ama_select.loc[:,\"Reviews\"]>= 17253]\nama_select.iloc[[1,5],:]\n","7f090f6a":"## Simba's Amazon Book Selector \n\nI got bored and went onto Kaggle to search for datasets to play with. Came across this amazon book selector and thought why not write a simple python code that will select the next books i will read based on the Correlation matrix produced by the numerical data collected. \n\nIt was a fun exercise, check it out below. \n\n","089cb24e":"## Initial Corr Results \nTherefore the Best indicators for Book quality going on a basis of review are User rating and year \n\nSome indicators to use:\n- Correlation factor for Genre was negative signaling that non fiction was more favored \n- User Rating and Year had positive Correlations \n    - Therefore Higher ratings and Later Books were better \n\n- Next we select for these factors","927cab72":"## Choose these books\n\nTherefore the selection now becomes yours, on the selection criteria, the following three books were chosen:\n\n- Michelle Obama-Becoming \n\n![414JfiBCutL._AC_SY400_.jpg](attachment:414JfiBCutL._AC_SY400_.jpg)\n\n- Gary Chapman - The 5 Love Languages \n\n![gary%20copy.png](attachment:gary%20copy.png)\n\nThe titles removed were removed because we don't want to be reading textbooks as a passtime, or maybe we do. These books are the ones selected for \"my\" reading pleasure. ","22254c1f":"## Final Selection \n\nI used the describe function to get simple descriptive stats in order to pic some selection criteria in line with the above obtained correlation matrix."}}