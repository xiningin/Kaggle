{"cell_type":{"8be5ad5e":"code","02e621c2":"code","32a240c6":"code","14ca00a6":"code","77774f4b":"code","78e86884":"code","1199ea5b":"code","63396a6d":"code","f74eefca":"code","0f29a8b3":"code","bb70300a":"code","284cfcac":"code","881bacb8":"code","62b73884":"code","91a51359":"code","40099b30":"code","8e212466":"code","51779211":"code","45b444e9":"code","10dd27c1":"code","e7ba8c12":"code","fda5f2b3":"code","3d4562cc":"code","c5a98fd5":"code","bf3e7bf7":"code","67a7cfc3":"code","8767b4c1":"code","c78ac006":"code","46ba7c7e":"markdown","80fa9673":"markdown","87d954c7":"markdown","70d3fa58":"markdown","92eab2b7":"markdown","50c4f765":"markdown"},"source":{"8be5ad5e":"import pandas as pd\n    ","02e621c2":"#read Train dataset\ndf=pd.read_csv('\/kaggle\/input\/fake-news\/train.csv')\ndf.head()","32a240c6":"# drop nan values from train sets\ndf=df.dropna()","14ca00a6":"X=df.drop('label',axis=1)\nX.shape","77774f4b":"y=df['label']\ny.shape","78e86884":"import tensorflow as tf\ntf.__version__","1199ea5b":"from tensorflow.keras.layers import Embedding\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.preprocessing.text import one_hot\nfrom tensorflow.keras.layers import LSTM\nfrom tensorflow.keras.layers import Dense","63396a6d":"voc_size=5000","f74eefca":"message=X.copy()\nmessage.head(100)","0f29a8b3":"message.reset_index(inplace=True)\nmessage.head()","bb70300a":"import nltk\nimport re\nfrom nltk.corpus import stopwords\n\nfrom nltk.stem.porter import PorterStemmer\nps=PorterStemmer()","284cfcac":"corpus=[]\nfor i in range(0,len(message)):\n    #print(i)\n    \n    if i % 5000==0:\n        print(i)\n    review=re.sub('[^a-zA-Z]',' ',message['text'][i])\n    review=review.lower()\n    words=review.split()\n    \n    reviews=[ps.stem(word) for word in words if word not in stopwords.words('english')]\n    review=' '.join(reviews)\n    \n    corpus.append(review)\n    ","881bacb8":"one_hotRepr=[one_hot(word,voc_size)for word in corpus]","62b73884":"one_hotRepr[0]","91a51359":"# padding is added to make input of equal length\n\nsent_length=20\nembedded_docs=pad_sequences(one_hotRepr,padding='pre',maxlen=sent_length)\nembedded_docs\n#embedded_docs=pad_sequences(one_hotRepr,padding='post',maxlen=sent_legth)","40099b30":"#\n\nembedding_vectors_features=40\nmodel=Sequential()\nmodel.add(Embedding(voc_size,embedding_vectors_features,input_length=sent_length))\nmodel.add(LSTM(100))\nmodel.add(Dense(1,activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])\n#model.compile('adam','mse')","8e212466":"model.summary()","51779211":"import numpy as np\n\nX_final=np.array(embedded_docs)\ny_final=np.array(y)","45b444e9":"from sklearn.model_selection import train_test_split\n\nX_train,X_test,y_train,y_test=train_test_split(X_final,y_final,test_size=0.3,random_state=50)","10dd27c1":"model.fit(X_train,y_train,validation_data=(X_test,y_test),epochs=10,batch_size=64)","e7ba8c12":"testdf=pd.read_csv('\/kaggle\/input\/fake-news\/test.csv')\ntestdf","fda5f2b3":"# Drop Nan Values\nX = testdf.fillna('is the')\n    \nmessages = X.copy()\n\nmessages.reset_index(inplace = True)\nmessages['title'][9]","3d4562cc":"testcorpus=[]\nfor i in range(0,len(testdf)):\n    #print(i)\n    \n    if i % 2000==0:\n        print(i)\n    \n    review=re.sub('[^a-zA-Z]',' ',messages['text'][i])\n    review=review.lower()\n    words=review.split()\n    \n    reviews=[ps.stem(word) for word in words if word not in stopwords.words('english')]\n    review=' '.join(reviews)\n    \n    testcorpus.append(review)\n    ","c5a98fd5":"testone_hotRepr=[one_hot(word,voc_size)for word in testcorpus]","bf3e7bf7":"sent_length=20\ntestembedded_docs=pad_sequences(testone_hotRepr,padding='pre',maxlen=sent_length)\ntestembedded_docs\n#embedded_docs=pad_sequences(one_hotRepr,padding='post',maxlen=sent_legth)","67a7cfc3":"\ntest=np.array(testembedded_docs)\npredict=model.predict_classes(test)","8767b4c1":"(len(predict),len(test))","c78ac006":"\ndf_sub = pd.DataFrame()\ndf_sub['id'] = testdf['id']\ndf_sub['label'] = predict\ndf_sub.to_csv('My_submit.csv', index=False)\ndf_sub.head()\n","46ba7c7e":"# **Text Preprocessing**","80fa9673":"**Long Short-Term Memory**","87d954c7":"# ** One Hot Representation**","70d3fa58":"Deep learning neural networks are very easy to create and evaluate in Python with Keras, but you must follow a strict model life-cycle.\n\nIn this post, you will discover the step-by-step life-cycle for creating, training, and evaluating Long Short-Term Memory (LSTM) Recurrent Neural Networks in Keras and how to make predictions with a trained model.\n\n\n    1.Preprocessing of text\n        a. Remove special character \n        b. Remove Stop words\n        c. Stemming  or lemmatization\n        d. Convert into final corpus\n    2.One hot Representation -- index from the dic\n    3.Onhot Representation ---> Embeddind Layer Keras To form Embedding matrix\n    4.Embedding matrix","92eab2b7":"# **Model Creation**","50c4f765":"# **Validating with test dataset**"}}