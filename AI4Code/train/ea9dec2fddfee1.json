{"cell_type":{"b2141cba":"code","d4a225da":"code","e4162f60":"code","371fdddf":"code","469f5b0e":"code","053b00ae":"code","c5adc024":"code","3610062e":"code","abb00e07":"code","b4b2dc42":"code","ca13f977":"code","f95765aa":"code","d27c508d":"code","30f9616c":"code","34daace6":"code","d5913ceb":"code","9bd96d34":"code","699b8a09":"code","13dce17a":"code","2300ff76":"code","fe919058":"code","013859c1":"code","00b51a5e":"code","5fac398c":"code","e72964c6":"code","f1397bfb":"markdown","b681f4c1":"markdown","0c64cd85":"markdown","8284bc03":"markdown","220fe300":"markdown","2f4a4a79":"markdown","67a53bda":"markdown"},"source":{"b2141cba":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt # gera\u00e7\u00e3o de gr\u00e1ficos\nimport seaborn as sns # gera\u00e7\u00e3o de gr\u00e1ficos\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor\n\n# Ignorar warnings\nimport warnings\nwarnings.filterwarnings('ignore')","d4a225da":"df_train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndf_test = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","e4162f60":"# verificando o formato do arquivo para submiss\u00e3o\nss = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')\nss.tail()","371fdddf":"print(df_train.shape)\nprint(df_test.shape)","469f5b0e":"df_train.head()","053b00ae":"df_train['SalePrice'].head()","c5adc024":"df_pivot = pd.DataFrame({'types': df_train.dtypes,\n                         'nulls': df_train.isna().sum(),\n                          '% nulls': df_train.isna().sum() \/ df_train.shape[0],\n                          'size': df_train.shape[0],\n                          'uniques': df_train.nunique()})\ndf_pivot","3610062e":"df_train.corr()['SalePrice'].sort_values(ascending=False).head(12)","abb00e07":"# features numericas mais correlacionadas\nfeatures_correlacao = ['SalePrice','OverallQual','GrLivArea',\n                       'GarageCars','GarageArea','TotalBsmtSF',\n                       '1stFlrSF','FullBath','TotRmsAbvGrd',\n                       'YearBuilt','YearRemodAdd']","b4b2dc42":"# plotando a matrix de correla\u00e7\u00e3o somente com estas features\ncorrelacao = df_train[features_correlacao].corr()\naxis = plt.subplots(figsize = (12,8))\nsns.heatmap(correlacao, annot=True, annot_kws = {\"size\":12})","ca13f977":"# exemplo correla\u00e7\u00e3o fortemente positiva\nplt.xlabel('SalePrice')\nplt.ylabel('OverallQual')\nplt.scatter(df_train['SalePrice'], df_train['OverallQual'])\nplt.show()","f95765aa":"# vari\u00e1veis categ\u00f3ricas e num\u00e9ricas relevantes\ndf_train_final = df_train[['GarageType','KitchenQual','HouseStyle', \n                          'Condition1', 'Functional','SalePrice',\n                           'OverallQual','GrLivArea','GarageCars',\n                           'GarageArea','TotalBsmtSF','1stFlrSF',\n                           'FullBath','TotRmsAbvGrd','YearBuilt','YearRemodAdd']]\n\n\ndf_test_final = df_test[['GarageType','KitchenQual','HouseStyle', \n                          'Condition1', 'Functional','OverallQual',\n                           'GrLivArea','GarageCars','GarageArea',\n                           'TotalBsmtSF','1stFlrSF','FullBath',\n                           'TotRmsAbvGrd','YearBuilt','YearRemodAdd']]\n\ndf_train_final.shape","d27c508d":"# tratando valores nulos\ndf_train_final.isnull().sum()","30f9616c":"df_test_final.isnull().sum()","34daace6":"# base de teste n\u00e3o tem o valor \"2.5Fin\" no house style. \nprint(df_train_final.HouseStyle.value_counts()) \nprint(df_test_final.HouseStyle.value_counts())","d5913ceb":"#df_train_final.GarageType.value_counts() # Attchd\n#df_test_final.GarageType.value_counts() # Attchd\n#df_test_final.KitchenQual.value_counts() # TA\n#df_test_final.Functional.value_counts() # Typ","9bd96d34":"df_test_final['TotalBsmtSF'].fillna(df_test_final['TotalBsmtSF'].mean(), inplace = True)\ndf_test_final['GarageArea'].fillna(df_test_final['GarageArea'].mean(), inplace = True)\ndf_test_final['GarageCars'].fillna(df_test_final['GarageCars'].mean(), inplace = True)\n\ndf_train_final['GarageType'].fillna('Attchd', inplace = True)\ndf_test_final['GarageType'].fillna('Attchd', inplace = True)\ndf_test_final['KitchenQual'].fillna('TA', inplace = True)\ndf_test_final['Functional'].fillna('Typ', inplace = True)","699b8a09":"# convertendo dados categ\u00f3ricos em num\u00e9ricos\ndf_new_train = pd.get_dummies(df_train_final)\ndf_new_test = pd.get_dummies(df_test_final)","13dce17a":"df_new_train.head()","2300ff76":"# Eliminando a coluna \"HouseStyle_2.5Fin\", pois ela n\u00e3o existe em teste\ndf_new_train = df_new_train.drop(\"HouseStyle_2.5Fin\", axis=1)","fe919058":"id_number = df_test['Id']\n\ny_train = df_new_train['SalePrice']\n\nx_train = df_new_train.drop(\"SalePrice\", axis=1)\nx_test = df_new_test","013859c1":"# Multiple linear regression\nmodel_linear = LinearRegression()\nmodel_linear.fit(x_train, y_train)\n\npredict_lr = model_linear.predict(x_test)\n\nacc_linear_regression = round(model_linear.score(x_train, y_train) * 100, 2)\nacc_linear_regression","00b51a5e":"# Random forest\nmodel_random_forest = RandomForestRegressor()\nmodel_random_forest.fit(x_train, y_train)\n\npredict_rf = model_random_forest.predict(x_test)\n\nacc_random_forest = round(model_random_forest.score(x_train, y_train) * 100, 2)\nacc_random_forest","5fac398c":"# Decision Tree\nmodel_decision_tree = DecisionTreeRegressor()\nmodel_decision_tree.fit(x_train, y_train)\n\npredict_dt = model_decision_tree.predict(x_test)\n\nacc_decision_tree = round(model_decision_tree.score(x_train, y_train) * 100, 2)\nacc_decision_tree","e72964c6":"# gerar arquivo csv para submiss\u00e3o ao kaggle\nsubmission = pd.DataFrame({\n    \"Id\": id_number,\n    \"SalePrice\": predict_rf # regress\u00e3o linear\n})\n\nsubmission.to_csv('submission.csv', index=False)\nprint(\"Arquivo gerado com sucesso\")\nsubmission","f1397bfb":"Preparando arquivo para submiss\u00e3o ao desafio","b681f4c1":"Separando as vari\u00e1veis para aplica\u00e7\u00e3o do modelo","0c64cd85":"* An\u00e1lise Explorat\u00f3ria dos Dados de treino","8284bc03":"Identificada as colunas mais importantes, vamos tratar os dados ausentes","220fe300":"Prevendo os pre\u00e7os da casa utilizando o modelo de Regress\u00e3o Linear.","2f4a4a79":"Analisando a correla\u00e7\u00e3o entre as features e a vari\u00e1vel alvo","67a53bda":"A vari\u00e1vel alvo SalePrice se encontra no dataset de Treino. Ela n\u00e3o est\u00e1 presente em Teste."}}