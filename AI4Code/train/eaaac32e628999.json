{"cell_type":{"6f08c304":"code","d9e1fdde":"code","cd5e4d20":"code","0d920826":"code","671e239d":"code","8e88adad":"code","18301f30":"code","7d55e7ac":"code","d182fa14":"code","31705f55":"code","b98fbf33":"code","1a8158b3":"code","1b854be4":"markdown","95cc48b1":"markdown","d592e7d2":"markdown","830ee571":"markdown","fff87579":"markdown","efa9d72f":"markdown","4a2f3840":"markdown","d6877acd":"markdown","b1bc4e03":"markdown"},"source":{"6f08c304":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d9e1fdde":"# Import necessary libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns","cd5e4d20":"fortune_df = pd.read_csv('..\/input\/fortune-global-2000-companies-till-2021\/fortune_2000_in_2021.csv')\nfortune_df.head()","0d920826":"# In this analysis, I only want to analyze  top 100 companies, so we create new dataframe for top 100 companies.\nfortune100_df = fortune_df.iloc[:100,:]","671e239d":"# Let's rename the column. As all top 100 companies sales, profits, assets, and market values are in billions, we can directly use billions.\nfortune100_df = fortune100_df.rename({'Sales':'Sales(Billion USD)','Profit':'Profit(Billion USD)','Assets':'Assets(Billion USD)','Market Value':'Market Value(Billion USD)'}, axis=1)\nfortune100_df.head()","8e88adad":"fortune100_df.info()","18301f30":"# As top 100 companies sales, profits, assets and market values are in billions, we only need to remove the string 'B' and change the data types to float\nfortune100_df['Sales(Billion USD)'] = fortune100_df['Sales(Billion USD)'].str.replace(r'[^0-9.]','',regex=True).astype('float')\nfortune100_df['Profit(Billion USD)'] = fortune100_df['Profit(Billion USD)'].str.replace(r'[^0-9.]','',regex=True).astype('float')\nfortune100_df['Assets(Billion USD)'] = fortune100_df['Assets(Billion USD)'].str.replace(r'[^0-9.]','',regex=True).astype('float')\nfortune100_df['Market Value(Billion USD)'] = fortune100_df['Market Value(Billion USD)'].str.replace(r'[^0-9.]','',regex=True).astype('float')\nfortune100_df.head()","7d55e7ac":"# Let's check whether there is missing values\nfortune100_df.isna().sum()","d182fa14":"# Let's see the top 100 companies based on different categories\nfig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2, 2, figsize=(10,10))\nfig.tight_layout(h_pad=25, w_pad=10)\n# Top 10 companies based on total sales\nsns.barplot(data=fortune100_df.sort_values(by='Sales(Billion USD)',ascending=False).head(10), x='Name', y='Sales(Billion USD)',ax=ax1)\nax1.set_xticklabels(ax1.get_xticklabels(), rotation=90)\nax1.set_title('Top 10 companies based on total sales')\n# Top 10 companies based on total profits\nsns.barplot(data=fortune100_df.head(10).sort_values(by='Profit(Billion USD)',ascending=False).head(10), x='Name', y='Profit(Billion USD)',ax=ax2)\nax2.set_xticklabels(ax2.get_xticklabels(), rotation=90)\nax2.set_title('Top 10 companies based on total profits')\n# Top 10 companies based on total assets\nsns.barplot(data=fortune100_df.head(10).sort_values(by='Assets(Billion USD)',ascending=False).head(10), x='Name', y='Assets(Billion USD)',ax=ax3)\nax3.set_xticklabels(ax3.get_xticklabels(), rotation=90)\nax3.set_title('Top 10 companies based on total assets')\n# Top 10 companies based on total market values\nsns.barplot(data=fortune100_df.head(10).sort_values(by='Market Value(Billion USD)',ascending=False).head(10), x='Name', y='Market Value(Billion USD)',ax=ax4)\nax4.set_xticklabels(ax4.get_xticklabels(), rotation=90)\nax4.set_title('Top 10 companies based on total market values')","31705f55":"# Let's identify how many companies in each countries that are part of Top 100\ncountries_count_df = fortune100_df[['Country','Name']].groupby(by=['Country'],as_index=False).count()\ncountries_count_df.rename({'Name':'Amount of Companies'},axis=1,inplace=True)\nsns.barplot(data=countries_count_df.sort_values(by='Amount of Companies', ascending=False).head(10),x='Country', y='Amount of Companies')\nplt.xticks(rotation=90)","b98fbf33":"# Let's compare the performance of countries having these top 100 companies\ncountries100_df = fortune100_df.groupby(by='Country',as_index=False).aggregate('sum')\ncountries100_df.drop(['Rank'],axis=1, inplace=True)\ncountries100_df.head()","1a8158b3":"# Let's do similar graph, but this timem based on countries instead of companies\nfig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2, 2, figsize=(10,10))\nfig.tight_layout(h_pad=10, w_pad=10)\n# Top 10 companies based on total sales\nsns.barplot(data=countries100_df.sort_values(by='Sales(Billion USD)',ascending=False).head(10), x='Country', y='Sales(Billion USD)',ax=ax1)\nax1.set_xticklabels(ax1.get_xticklabels(), rotation=90)\nax1.set_title('Top 10 countries based on total sales')\n# Top 10 companies based on total profits\nsns.barplot(data=countries100_df.sort_values(by='Profit(Billion USD)',ascending=False).head(10), x='Country', y='Profit(Billion USD)',ax=ax2)\nax2.set_xticklabels(ax2.get_xticklabels(), rotation=90)\nax2.set_title('Top 10 countries based on total profits')\n# Top 10 companies based on total assets\nsns.barplot(data=countries100_df.sort_values(by='Assets(Billion USD)',ascending=False).head(10), x='Country', y='Assets(Billion USD)',ax=ax3)\nax3.set_xticklabels(ax3.get_xticklabels(), rotation=90)\nax3.set_title('Top 10 countries based on total assets')\n# Top 10 companies based on total market values\nsns.barplot(data=countries100_df.sort_values(by='Market Value(Billion USD)',ascending=False).head(10), x='Country', y='Market Value(Billion USD)',ax=ax4)\nax4.set_xticklabels(ax4.get_xticklabels(), rotation=90)\nax4.set_title('Top 10 countries based on total market values')","1b854be4":"# Data Cleaning","95cc48b1":"# Comparison of Countries's performance based on 4 metrics","d592e7d2":"Based on above charts, Although ICBC rank 1st in overall score, companies have different rankings when we consider individual metrics:\n- Top 1 company in terms of sales is Walmart (USA)\n- Top 1 company in terms of profits is Apple (USA)\n- Top 1 company in terms of total assets is ICBC (China)\n- Top 1 company in terms of total market value is Apple (USA)","830ee571":"Both USA and China dominate all metrics! Interestingly, although USA companies dominate in sales, profits, and market values, China companies has the biggest assets.","fff87579":"# Comparison of Top 100 companies based on 4 metrics","efa9d72f":"## Hi, i am a data science enthusiast and I am always willing to learn and improve. Any comments or feedbacks are appreciated. Thank you!","4a2f3840":"We need to change the datatypes of sales, profit, assets, and market value to float for our analysis","d6877acd":"Most Top 100 companies are located in USA, followed byt China and Japan:\n- 39 companies in USA\n- 17 companies in China\n- 8 companies in Japan\n- 6 companies in Germany\n- 5 companies in Switzerland","b1bc4e03":"No missing values, so we can go ahead with our analysis."}}