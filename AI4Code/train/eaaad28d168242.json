{"cell_type":{"03c20285":"code","46bd1710":"code","4700fb6b":"code","b6a6d87c":"code","fc0fe099":"code","daeafb97":"code","7ec56fb0":"code","fc631ef5":"code","5fdf6054":"code","ea26c0a5":"code","e492f163":"code","3735d485":"code","5e590b4b":"code","22231783":"code","2e5333b3":"code","cd8ba947":"code","8e134b1b":"code","a07e1d85":"code","74d0306f":"code","688e9137":"code","e47e37d1":"code","646eab4f":"code","d335a35e":"code","bd511f3a":"code","47703132":"code","d1d0afeb":"code","6325bc09":"code","6884bc07":"code","05803d8d":"code","b42f3819":"code","18a3ff92":"code","61b9aff5":"code","6e0babf8":"code","19a0fa71":"markdown","3a43bb26":"markdown","97e92485":"markdown","26ea9224":"markdown","229c5e12":"markdown","300c9674":"markdown","6121fb53":"markdown","1a724d53":"markdown","b32e406d":"markdown","0ddd24f6":"markdown","1c599e45":"markdown","8bcace62":"markdown","c62b9715":"markdown","fe737d89":"markdown","5ea34d43":"markdown","65d94fe3":"markdown","d26838ac":"markdown"},"source":{"03c20285":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","46bd1710":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport os\nfrom subprocess import check_output\nfrom wordcloud import WordCloud, STOPWORDS","4700fb6b":"df_yout = pd.read_csv(\"\/kaggle\/input\/youtube-new\/GBvideos.csv\")","b6a6d87c":"print(df_yout.shape)\nprint(df_yout.nunique())","fc0fe099":"df_yout.info()","daeafb97":"df_yout.head(3)","7ec56fb0":"df_yout['likes_log'] = np.log(df_yout['likes'] + 1)\ndf_yout['views_log'] = np.log(df_yout['views'] + 1)\ndf_yout['dislikes_log'] = np.log(df_yout['dislikes'] + 1)\ndf_yout['comment_log'] = np.log(df_yout['comment_count'] + 1)\n\nplt.figure(figsize = (12,6))\n\nplt.subplot(221)\ng1 = sns.distplot(df_yout['views_log'])\ng1.set_title(\"VIEWS LOG DISTRIBUITION\", fontsize=16)\n\nplt.subplot(224)\ng2 = sns.distplot(df_yout['likes_log'],color='green')\ng2.set_title('LIKES LOG DISTRIBUITION', fontsize=16)\n\nplt.subplot(223)\ng3 = sns.distplot(df_yout['dislikes_log'], color='r')\ng3.set_title(\"DISLIKES LOG DISTRIBUITION\", fontsize=16)\n\nplt.subplot(222)\ng4 = sns.distplot(df_yout['comment_log'], color = 'y')\ng4.set_title(\"COMMENTS LOG DISTRIBUITION\", fontsize=16)\n\nplt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\n\nplt.show()","fc631ef5":"pd.set_option('display.float_format', lambda x: '%.2f' % x)\nprint(\"Let's now describe these 4 columns : Views, Likes, Dislikes, Comments \")\nprint(round(df_yout[['views','likes','dislikes','comment_count']].describe(),2))\npd.reset_option('display.float_format')\n","5fdf6054":"df_yout['category_name'] = np.nan\n\ndf_yout.loc[(df_yout[\"category_id\"] == 1),\"category_name\"] = 'Film and Animation'\ndf_yout.loc[(df_yout[\"category_id\"] == 2),\"category_name\"] = 'Cars and Vehicles'\ndf_yout.loc[(df_yout[\"category_id\"] == 10),\"category_name\"] = 'Music'\ndf_yout.loc[(df_yout[\"category_id\"] == 15),\"category_name\"] = 'Pets and Animals'\ndf_yout.loc[(df_yout[\"category_id\"] == 17),\"category_name\"] = 'Sport'\ndf_yout.loc[(df_yout[\"category_id\"] == 19),\"category_name\"] = 'Travel and Events'\ndf_yout.loc[(df_yout[\"category_id\"] == 20),\"category_name\"] = 'Gaming'\ndf_yout.loc[(df_yout[\"category_id\"] == 22),\"category_name\"] = 'People and Blogs'\ndf_yout.loc[(df_yout[\"category_id\"] == 23),\"category_name\"] = 'Comedy'\ndf_yout.loc[(df_yout[\"category_id\"] == 24),\"category_name\"] = 'Entertainment'\ndf_yout.loc[(df_yout[\"category_id\"] == 25),\"category_name\"] = 'News and Politics'\ndf_yout.loc[(df_yout[\"category_id\"] == 26),\"category_name\"] = 'How to and Style'\ndf_yout.loc[(df_yout[\"category_id\"] == 27),\"category_name\"] = 'Education'\ndf_yout.loc[(df_yout[\"category_id\"] == 28),\"category_name\"] = 'Science and Technology'\ndf_yout.loc[(df_yout[\"category_id\"] == 29),\"category_name\"] = 'Non Profits and Activism'\ndf_yout.loc[(df_yout[\"category_id\"] == 25),\"category_name\"] = 'News & Politics'","ea26c0a5":"plt.figure(figsize = (14,9))\n\nplt.subplot(311)\ng = sns.countplot('category_name', data=df_yout, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Counting the Video Category's \", fontsize=15)\ng.set_xlabel(\"\", fontsize=12)\ng.set_ylabel(\"Count\", fontsize=12)\n\nplt.subplot(312)\ng1 = sns.boxplot(x='category_name', y='views_log', data=df_yout, palette=\"Set1\")\ng1.set_xticklabels(g.get_xticklabels(),rotation=45)\ng1.set_title(\"Views Distribuition by Category Names\", fontsize=20)\ng1.set_xlabel(\"\", fontsize=15)\ng1.set_ylabel(\"Views(log)\", fontsize=15)\n\nplt.subplot(313)\ng1 = sns.boxplot(x='category_name',y='comment_log', data=df_yout, palette=\"Set1\")\ng1.set_xticklabels(g.get_xticklabels(),rotation=45)\ng1.set_title(\"Comments Distribuition by Category Names\", fontsize=20)\ng1.set_xlabel(\"\", fontsize=15)\ng1.set_ylabel(\"Comments\", fontsize=15)\n\n\nplt.subplots_adjust(hspace = 0.9, top = 0.9)\n\nplt.show()","e492f163":"print('Looking the Likes distribuition by category names')\nplt.figure(figsize = (14,6))\n\ng = sns.boxplot(x='category_name', y='likes_log', data=df_yout, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Likes Distribuition by Category Names \", fontsize=15)\ng.set_xlabel(\"\", fontsize=12)\ng.set_ylabel(\"Likes(log)\", fontsize=12)\nplt.show()","3735d485":"print('Looking the Dislikes distribuition by category names')\nplt.figure(figsize = (14,6))\n\ng = sns.boxplot(x='category_name', y='dislikes_log', data=df_yout, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Dislikes Distribuition by Category Names \", fontsize=15)\ng.set_xlabel(\"\", fontsize=12)\ng.set_ylabel(\"Dislikes(log)\", fontsize=12)\nplt.show()","5e590b4b":"print('Comments Distribuition by Category Names')\nplt.figure(figsize = (14,6))\n\ng = sns.boxplot(x='category_name', y='comment_log', data=df_yout, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Comments Distribuition by Category Names\", fontsize=15)\ng.set_xlabel(\"\", fontsize=12)\ng.set_ylabel(\"Comments Count(log)\", fontsize=12)\n\nplt.show()","22231783":"df_yout['like_rate'] =  df_yout ['likes'] \/ df_yout['views'] * 100\ndf_yout['dislike_rate'] =  df_yout ['dislikes'] \/ df_yout['views'] * 100\ndf_yout['comment_rate'] =  df_yout ['comment_count'] \/ df_yout['views'] * 100","2e5333b3":"print('CONVERT RATE DISTRIBUITION')\nplt.figure(figsize = (9,6))\n\ng1 = sns.distplot(df_yout['dislike_rate'], color='red',hist=False, label=\"Dislike\")\ng1 = sns.distplot(df_yout['like_rate'], color='green',hist=False, label=\"Like\")\ng1 = sns.distplot(df_yout['comment_rate'],hist=False,label=\"Comment\")\ng1.set_title('CONVERT RATE DISTRIBUITION', fontsize=16)\nplt.legend()\nplt.show()","cd8ba947":"print('Like, Dislike, Comment Rate Distribution')\nplt.figure(figsize = (12,18))\n\nplt.subplot(311)\ng= sns.boxplot(x='category_name',y='like_rate',  data=df_yout)\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"LIKE RATE DISTRIBUITIONS\", fontsize=15)\ng.set_xlabel(\"\", fontsize=12)\ng.set_ylabel(\"Like rate\", fontsize=12)\n\nplt.subplot(312)\ng1= sns.boxplot(y='dislike_rate', x='category_name', data=df_yout)\ng1.set_xticklabels(g.get_xticklabels(),rotation=45)\ng1.set_title(\"DISLIKE RATE DISTRIBUITIONS\", fontsize=15)\ng1.set_xlabel(\"\", fontsize=12)\ng1.set_ylabel(\"Dislike rate\", fontsize=12)\n\nplt.subplot(313)\ng2= sns.boxplot(y='comment_rate', x='category_name', data=df_yout)\ng2.set_xticklabels(g.get_xticklabels(),rotation=45)\ng2.set_title(\"COMMENT RATE BY CATEGORY NAME\", fontsize=15)\ng2.set_xlabel(\"Category Names\", fontsize=12)\ng2.set_ylabel(\"Comment Rate\", fontsize=12)\n\nplt.subplots_adjust(wspace = 0.2, hspace = 0.5,top = 0.9)\n\nplt.show()\n","8e134b1b":"plt.figure(figsize = (10,6))\nplt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\n\nplt.subplot(2,2,1)\ng = sns.countplot(x='comments_disabled', data=df_yout,color ='r')\ng.set_title(\"Comments Disabled\", fontsize=16)\n\nplt.subplot(2,2,2)\ng1 = sns.countplot(x='ratings_disabled', data=df_yout, color ='g')\ng1.set_title(\"Rating Disabled\", fontsize=16)\n\nplt.subplot(2,2,3)\ng2 = sns.countplot(x='video_error_or_removed', data=df_yout,color ='r')\ng2.set_title(\"Video Error or Removed\", fontsize=16)\nplt.show()","a07e1d85":"plt.figure(figsize = (12,10))\n\nplt.subplot(221)\ng1 = sns.distplot(df_yout[df_yout['comments_disabled'] == True]['views_log'], \n                  hist=False, label='Comm_dis')\ng1 = sns.distplot(df_yout[df_yout['ratings_disabled'] == True]['views_log'], \n                  hist=False, label='Rati_dis')\ng1 = sns.distplot(df_yout[df_yout['video_error_or_removed'] == True]['views_log'], \n                  hist=False, label='vide_rmv_err')\ng1.set_title(\"VIEWS LOG DISTRIBUITION\", fontsize=16)\n\nplt.subplot(222)\ng4 = sns.distplot(df_yout[df_yout['comments_disabled'] == True]['comment_log'],\n                  hist=False, label='Comm_dis')\ng4 = sns.distplot(df_yout[df_yout['ratings_disabled'] == True]['comment_log'], \n                  hist=False, label='Rati_dis')\ng4 = sns.distplot(df_yout[df_yout['video_error_or_removed'] == True]['comment_log'], \n                  hist=False, label='vide_rmv_err')\ng4.set_title(\"COMMENTS LOG DISTRIBUITION\", fontsize=16)\n\nplt.subplot(223)\ng3 = sns.distplot(df_yout[df_yout['comments_disabled'] == True]['dislikes_log'], \n                  hist=False, label='Comm_dis')\ng3 = sns.distplot(df_yout[df_yout['ratings_disabled'] == True]['dislikes_log'], \n                  hist=False, label='Rati_dis')\ng3 = sns.distplot(df_yout[df_yout['video_error_or_removed'] == True]['dislikes_log'], \n                  hist=False, label='vide_rmv_err')\ng3.set_title(\"DISLIKES LOG DISTRIBUITION\", fontsize=16)\n\nplt.subplot(224)\ng2 = sns.distplot(df_yout[df_yout['comments_disabled'] == True]['likes_log'], \n                  hist=False, label='Comm_dis')\ng2 = sns.distplot(df_yout[df_yout['ratings_disabled'] == True]['likes_log'], \n                  hist=False, label='Rati_dis')\ng2 = sns.distplot(df_yout[df_yout['video_error_or_removed'] == True]['likes_log'], \n                  hist=False, label='vide_rmv_err')\ng2.set_title('LIKES LOG DISTRIBUITION', fontsize=16)\n\nplt.subplots_adjust(wspace = 0.2, hspace = 0.3,top = 0.9)\nplt.legend()\nplt.show()","74d0306f":"plt.figure(figsize = (10,8))\n\n#Let's verify the correlation of each value\nsns.heatmap(df_yout[['like_rate', 'dislike_rate', 'comment_rate', 'comment_log',\n         'views_log','likes_log','dislikes_log', \"category_name\"]].corr(), annot=True)\nplt.show()","688e9137":"import string\nimport re    \nimport nltk\nfrom nltk.corpus import stopwords\nimport spacy\nfrom nltk import pos_tag\nfrom nltk.stem.wordnet import WordNetLemmatizer \nfrom nltk.tokenize import word_tokenize\nfrom nltk.tokenize import TweetTokenizer\neng_stopwords = set(stopwords.words(\"english\"))","e47e37d1":"#Word count in each comment:\ndf_yout['count_word']=df_yout[\"title\"].apply(lambda x: len(str(x).split()))\ndf_yout['count_word_tags']=df_yout[\"tags\"].apply(lambda x: len(str(x).split()))\n\n#Unique word count\ndf_yout['count_unique_word']=df_yout[\"title\"].apply(lambda x: len(set(str(x).split())))\ndf_yout['count_unique_word_tags']=df_yout[\"tags\"].apply(lambda x: len(set(str(x).split())))\n\n#Letter count\ndf_yout['count_letters']=df_yout[\"title\"].apply(lambda x: len(str(x)))\ndf_yout['count_letters_tags']=df_yout[\"tags\"].apply(lambda x: len(str(x)))\n\n#punctuation count\ndf_yout[\"count_punctuations\"] =df_yout[\"title\"].apply(lambda x: len([c for c in str(x) if c in string.punctuation]))\ndf_yout[\"count_punctuations_tags\"] =df_yout[\"tags\"].apply(lambda x: len([c for c in str(x) if c in string.punctuation]))\n\n#upper case words count\ndf_yout[\"count_words_upper\"] = df_yout[\"title\"].apply(lambda x: len([w for w in str(x).split() if w.isupper()]))\ndf_yout[\"count_words_upper_tags\"] = df_yout[\"tags\"].apply(lambda x: len([w for w in str(x).split() if w.isupper()]))\n\n#title case words count\ndf_yout[\"count_words_title\"] = df_yout[\"title\"].apply(lambda x: len([w for w in str(x).split() if w.istitle()]))\ndf_yout[\"count_words_title_tags\"] = df_yout[\"tags\"].apply(lambda x: len([w for w in str(x).split() if w.istitle()]))\n\n#Number of stopwords\ndf_yout[\"count_stopwords\"] = df_yout[\"title\"].apply(lambda x: len([w for w in str(x).lower().split() if w in eng_stopwords]))\ndf_yout[\"count_stopwords_tags\"] = df_yout[\"tags\"].apply(lambda x: len([w for w in str(x).lower().split() if w in eng_stopwords]))\n\n#Average length of the words\ndf_yout[\"mean_word_len\"] = df_yout[\"title\"].apply(lambda x: np.mean([len(w) for w in str(x).split()]))\ndf_yout[\"mean_word_len_tags\"] = df_yout[\"tags\"].apply(lambda x: np.mean([len(w) for w in str(x).split()]))","646eab4f":"#derived features\n#Word count percent in each comment:\ndf_yout['word_unique_percent']=df_yout['count_unique_word']*100\/df_yout['count_word']\ndf_yout['word_unique_percent_tags']=df_yout['count_unique_word_tags']*100\/df_yout['count_word_tags']\n\n#Punct percent in each comment:\ndf_yout['punct_percent']=df_yout['count_punctuations']*100\/df_yout['count_word']\ndf_yout['punct_percent_tags']=df_yout['count_punctuations_tags']*100\/df_yout['count_word_tags']","d335a35e":"plt.figure(figsize = (12,18))\n\nplt.subplot(421)\ng1 = sns.distplot(df_yout['count_word'], \n                  hist=False, label='Text')\ng1 = sns.distplot(df_yout['count_word_tags'], \n                  hist=False, label='Tags')\ng1.set_title(\"COUNT WORDS DISTRIBUITION\", fontsize=16)\n\nplt.subplot(422)\ng2 = sns.distplot(df_yout['count_unique_word'],\n                  hist=False, label='Text')\ng2 = sns.distplot(df_yout['count_unique_word_tags'], \n                  hist=False, label='Tags')\ng2.set_title(\"COUNT UNIQUE DISTRIBUITION\", fontsize=16)\n\nplt.subplot(423)\ng3 = sns.distplot(df_yout['count_letters'], \n                  hist=False, label='Text')\ng3 = sns.distplot(df_yout['count_letters_tags'], \n                  hist=False, label='Tags')\ng3.set_title(\"COUNT LETTERS DISTRIBUITION\", fontsize=16)\n\nplt.subplot(424)\ng4 = sns.distplot(df_yout[\"count_punctuations\"], \n                  hist=False, label='Text')\ng4 = sns.distplot(df_yout[\"count_punctuations_tags\"], \n                  hist=False, label='Tags')\ng4.set_xlim([-2,50])\ng4.set_title('COUNT PONCTUATIONS DISTRIBUITION', fontsize=16)\n\nplt.subplot(425)\ng5 = sns.distplot(df_yout[\"count_words_upper\"] , \n                  hist=False, label='Text')\ng5 = sns.distplot(df_yout[\"count_words_upper_tags\"] , \n                  hist=False, label='Tags')\ng5.set_title('COUNT WORDS UPPER DISTRIBUITION', fontsize=16)\n\nplt.subplot(426)\ng6 = sns.distplot(df_yout[\"count_words_title\"], \n                  hist=False, label='Text')\ng6 = sns.distplot(df_yout[\"count_words_title_tags\"], \n                  hist=False, label='Tags')\ng6.set_title('WORDS DISTRIBUITION', fontsize=16)\n\nplt.subplot(427)\ng7 = sns.distplot(df_yout[\"count_stopwords\"], \n                  hist=False, label='Title')\ng7 = sns.distplot(df_yout[\"count_stopwords_tags\"], \n                  hist=False, label='Tags')\ng7.set_title('STOPWORDS DISTRIBUITION', fontsize=16)\n\nplt.subplot(428)\ng8 = sns.distplot(df_yout[\"mean_word_len\"], \n                  hist=False, label='Text')\ng8 = sns.distplot(df_yout[\"mean_word_len_tags\"], \n                  hist=False, label='Tags')\ng8.set_xlim([-2,100])\ng8.set_title('MEAN WORD LEN DISTRIBUITION', fontsize=16)\n\nplt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\nplt.legend()\nplt.show()\n","bd511f3a":"plt.figure(figsize = (12,8))\n\nplt.subplot(221)\ng=sns.boxplot(x='count_punctuations', y='views_log',data=df_yout)\ng.set_title(\"Vews by Ponctuations\")\ng.set_xlabel(\"Numer of Punctuations\")\ng.set_ylabel(\"Vews log\")\n\nplt.subplot(222)\ng1 = sns.boxplot(x='count_punctuations', y='likes_log',data=df_yout)\ng1.set_title(\"Likes by Ponctuations\")\ng1.set_xlabel(\"Numer of Punctuations\")\ng1.set_ylabel(\"Likes log\")\n\nplt.subplot(223)\ng2 = sns.boxplot(x='count_punctuations', y='dislikes_log',data=df_yout)\ng2.set_title(\"Dislikes by Ponctuations\")\ng2.set_xlabel(\"Numer of Punctuations\")\ng2.set_ylabel(\"Dislikes log\")\n\nplt.subplot(224)\ng3 = sns.boxplot(x='count_punctuations', y='comment_log',data=df_yout)\ng3.set_title(\"Comments by Ponctuations\")\ng3.set_xlabel(\"Numer of Punctuations\")\ng3.set_ylabel(\"Comments log\")\n\nplt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\n\nplt.show()\n\n","47703132":"plt.figure(figsize = (12,8))\n\nsns.heatmap(df_yout[['count_word', 'count_unique_word','count_letters',\n                     \"count_punctuations\",\"count_words_upper\", \"count_words_title\", \n                     \"count_stopwords\",\"mean_word_len\", \n                     'views_log', 'likes_log','dislikes_log','comment_log',\n                     'ratings_disabled', 'comments_disabled', 'video_error_or_removed']].corr(), annot=True)\nplt.show()","d1d0afeb":"mpl.rcParams['font.size']= 15              \nmpl.rcParams['savefig.dpi']= 100         \nmpl.rcParams['figure.subplot.bottom']= .1 ","6325bc09":"plt.figure(figsize = (15,15))\n\nstopwords = set(STOPWORDS)\n\nwordcloud = WordCloud(\n                          background_color='black',\n                          stopwords=stopwords,\n                          max_words=1000,\n                          max_font_size=120, \n                          random_state=42\n                         ).generate(str(df_yout['title']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - TITLES\")\nplt.axis('off')\nplt.show()","6884bc07":"plt.figure(figsize = (15,15))\n\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(\n                          background_color='black',\n                          stopwords=stopwords,\n                          max_words=150,\n                          max_font_size=40, \n                          random_state=42\n                         ).generate(str(df_yout['title']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - DESCRIPTION\")\nplt.axis('off')\nplt.show()","05803d8d":"plt.figure(figsize = (15,15))\n\nstopwords = set(STOPWORDS)\n\nnewStopWords= ['https', 'youtube', 'VIDEO','youtu','CHANNEL', 'WATCH']\n\nstopwords.update(newStopWords)\n\nwordcloud = WordCloud(\n                          background_color='black',\n                          stopwords=stopwords,\n                          max_words=1200,\n                          max_font_size=80, \n                          random_state=42\n                         ).generate(str(df_yout['description']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - DESCRIPTION\")\nplt.axis('off')\nplt.show()","b42f3819":"plt.figure(figsize = (15,15))\n\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(\n                          background_color='black',\n                          stopwords=stopwords,\n                          max_words=1200,\n                          max_font_size=120, \n                          random_state=42\n                         ).generate(str(df_yout['tags']))\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.title(\"WORD CLOUD - TAGS\")\nplt.axis('off')\nplt.show()","18a3ff92":"df_yout['publish_time'] = pd.to_datetime(df_yout['publish_time'], format='%Y-%m-%dT%H:%M:%S.%fZ')\ndf_yout['month'] = df_yout['publish_time'].dt.month\n\nprint(\"Category Name count\")\n# print(df_yout['month'].value_counts()[:5])\n\nplt.figure(figsize = (14,9))\n\nplt.subplot(211)\ng = sns.countplot('month', data=df_yout, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Counting Months \", fontsize=20)\ng.set_xlabel(\"Months\", fontsize=15)\ng.set_ylabel(\"Count\", fontsize=15)\n\nplt.subplot(212)\ng1 = sns.violinplot(x='month', y='like_rate', data=df_yout, palette=\"Set1\")\ng1.set_xticklabels(g.get_xticklabels(),rotation=45)\ng1.set_title(\"Like Rate by Month\", fontsize=20)\ng1.set_xlabel(\"Months\", fontsize=15)\ng1.set_ylabel(\"Like Rate(log)\", fontsize=15)\n\nplt.subplots_adjust(hspace = 0.5, top = 0.9)\n\nplt.show()","61b9aff5":"# separates date and time into two columns from 'publish_time' column\ndf_yout.insert(4, 'publish_date', df_yout['publish_time'].dt.date)\ndf_yout['publish_time'] = df_yout['publish_time'].dt.time\ndf_yout[['hour','min','sec']] = df_yout['publish_time'].astype(str).str.split(':', expand=True).astype(int)","6e0babf8":"plt.figure(figsize = (14,9))\n\nplt.subplot(211)\ng = sns.countplot('hour', data=df_yout, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Counting Hour \", fontsize=20)\ng.set_xlabel(\"Hours\", fontsize=15)\ng.set_ylabel(\"Count\", fontsize=15)\n\nplt.subplot(212)\ng1 = sns.boxplot(x='hour', y='like_rate', data=df_yout, palette=\"Set1\")\ng1.set_xticklabels(g.get_xticklabels(),rotation=45)\ng1.set_title(\"Like Rate by Hour\", fontsize=20)\ng1.set_xlabel(\"Hours\", fontsize=15)\ng1.set_ylabel(\"Like Rate(log)\", fontsize=15)\n\nplt.subplots_adjust(hspace = 0.5, top = 0.9)\n\nplt.show()","19a0fa71":"**Engagement Features**\n\nI will create some new variables to us analyse the percent of likes, dislikes, comment by each category to discover what category have the highest engagement","3a43bb26":"Lets move to some **NLP** analysis now","97e92485":"Just checking the shape of the dataset and the unique values in the respective lines.","26ea9224":"Visualizing the Word Cloud of Tagged videos\n* Ratings Disable\n* Comments Disable\n* Video Error or Removed","229c5e12":"YouTube Trending Statistics Exploration in Python\n\nThis notebook will walk you through some preliminary data exploration process of the YouTube Trending dataset, specifically the GB dataset","300c9674":"Lets check if Views, Likes, Dislikes and Comments follow a normal distribuition","6121fb53":"Looking through the anothers categoricals variables\nWe have the variables:\n* Comments Disable\n* Rating disable\n* Video error","1a724d53":"Just a simple check on the kind of data in each column and the number of the null values. \nOnly discription has some null values rest all the columns have some value in them.","b32e406d":"Analysing the Correlation Matrix of the numerical variables","0ddd24f6":"Let's look the kde of this variables separated to deep understand them","1c599e45":"I will just import some basic python libaries :","8bcace62":"If there are any suggesion for the notebook please comment, that would be helpful. Also please upvote if you liked it! Thank you\n\nSome of my other works:\n- https:\/\/www.kaggle.com\/udbhavpangotra\/tps-apr21-eda-model\n- https:\/\/www.kaggle.com\/udbhavpangotra\/heart-attacks-extensive-eda-and-visualizations","c62b9715":"Importing the GB data","fe737d89":"Lets now see the top 3 rows of the data we have.","5ea34d43":"Significant number of music and entertainment videos, gaming and sports are more common thann education.","65d94fe3":"Looking the Views, likes, dislikes distribuition by category names.","d26838ac":"Have the Punctuations title and tags any relation with views, likes, dislikes comments?"}}