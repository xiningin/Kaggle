{"cell_type":{"c7b46c7c":"code","9e0db7f1":"code","fc390c59":"code","c2f7374f":"code","d59817e7":"code","67ebd34c":"code","2b7ed240":"code","abb7ddae":"code","1f1181d4":"code","761e18fd":"code","568bc717":"code","c4f651b4":"code","d6adec9d":"markdown","21008938":"markdown","4bb49e68":"markdown"},"source":{"c7b46c7c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9e0db7f1":"import pandas as pd\nus_counties = pd.read_csv(\"\/kaggle\/input\/us-counties-covid-19-dataset\/us-counties.csv\")\n","fc390c59":"us_counties.head()","c2f7374f":"us_counties[[\"cases\", \"deaths\"]].corr()","d59817e7":"from scipy import stats\npearson_coef, p_value = stats.pearsonr(us_counties[\"cases\"], us_counties[\"deaths\"])\n\n# Pearson coefficient \/ correlation coefficient - how much are the two columns correlated?\nprint(pearson_coef)\n\n# P-value - how sure are we about this correlation?\nprint(p_value)","67ebd34c":"data_honolulu = us_counties.loc[us_counties['county'] == \"Honolulu\"]\nprint(data_honolulu)","2b7ed240":"data_maricopa = us_counties.loc[us_counties['county'] == \"Maricopa\"]\nprint(data_maricopa)","abb7ddae":"data_snohomish = us_counties.loc[us_counties['county'] == \"Snohomish\"]\nprint(data_snohomish)","1f1181d4":"# libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\n \n# width of the bars\nbarWidth = 0.3\n \n# Choose the height of the blue bars\nbars1 = [max(data_honolulu['cases']), max(data_maricopa['cases']), max(data_snohomish['cases'])]\n \n# Choose the height of the cyan bars\nbars2 = [max(data_honolulu['deaths']), max(data_maricopa['deaths']), max(data_snohomish['deaths'])]\n \n# Choose the height of the error bars (bars1)\nyer1 = [0.5, 0.4, 0.5]\n \n# Choose the height of the error bars (bars2)\nyer2 = [1, 0.7, 1]\n \n# The x position of bars\nr1 = np.arange(len(bars1))\nr2 = [x + barWidth for x in r1]\n \n# Create blue bars\nplt.bar(r1, bars1, width = barWidth, color = 'blue', edgecolor = 'black', yerr=yer1, capsize=7, label='Cases')\n \n# Create cyan bars\nplt.bar(r2, bars2, width = barWidth, color = 'cyan', edgecolor = 'black', yerr=yer2, capsize=7, label='Deaths')\n \n# general layout\nplt.xticks([r + barWidth for r in range(len(bars1))], ['Honolulu, HI', 'Maricopa, AZ', 'Snohomish, WA'])\nplt.ylabel('number of people')\nplt.legend()\n \n# Show graphic\nplt.show()\n","761e18fd":"# libraries\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n \n# Data\ndf=pd.DataFrame({'x': range(1,335), 'Honolulu': data_honolulu['cases'], 'Maricopa': data_maricopa['cases'], 'Snohomish': data_snohomish['cases'] })\n \n# multiple line plot\nplt.plot( 'x', 'Honolulu', data=df, marker='o', color='skyblue', linewidth=2)\nplt.plot( 'x', 'Maricopa', data=df, marker='o', color='green', linewidth=2)\nplt.plot( 'x', 'Snohomish', data=df, marker='o', color='purple', linewidth=2)\nplt.xlabel(\"days since 1\/21\/20\")\nplt.ylabel(\"number of cases\")\nplt.title(\"Number of Cases in Honolulu, Maricopa, and Snohomish since January 21, 2020\")\nplt.legend()\n\n","568bc717":"import seaborn as sns\nimport matplotlib.pyplot as plt\n \n# use the function regplot to make a scatterplot\nsns.regplot(x=us_counties[\"cases\"], y=us_counties[\"deaths\"],marker=\"*\")\nplt.title(\"Correlation between Cases and Deaths in all US Counties\")\nplt.show()\n \n","c4f651b4":"# libraries\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nsns.set_style(\"white\")\nimport pandas as pd\nmy_dpi=96\n \n# Get the data (csv file is hosted on the web)\n#url = 'https:\/\/python-graph-gallery.com\/wp-content\/uploads\/gapminderData.csv'\n#data = pd.read_csv('us_counties')\n \n# And I need to transform my categorical column (continent) in a numerical value group1->1, group2->2...\ndata_honolulu = data_honolulu.loc[data_honolulu['date'] > \"03-06-2020\"]\nframes = [data_honolulu]\nus_counties = pd.concat(frames)\n#us_counties = us_counties.loc[us_counties['county'] == \"Snohomish\" or us_counties['county'] == \"Honolulu\" or us_counties[\"county\"] == \"Maricopa\"]\nus_counties['county']=pd.Categorical(us_counties['county'])\n \n# For each year:\nfor i in us_counties.county.unique():\n \n# initialize a figure\n    fig = plt.figure(figsize=(680\/my_dpi, 480\/my_dpi), dpi=my_dpi)\n \n# Change color with c and alpha. I map the color to the X axis value.\ntmp=us_counties[ us_counties.county == i ]\nplt.scatter(tmp['cases'], tmp['deaths'] , s=10 , c='red', cmap=\"Accent\", alpha=0.6, edgecolors=\"white\", linewidth=2)\n\n# Add titles (main and on axis)\nplt.yscale('log')\nplt.xlabel(\"cases\")\nplt.ylabel(\"deaths\")\nplt.title(\"3\/6\/20: \"+str(i) )\nplt.ylim(0,100000)\nplt.xlim(30, 90)\n \n# Save it\nfilename='Gapminder_step'+str(i)+'.png'\nplt.savefig(filename, dpi=96)\nplt.gca()\n","d6adec9d":"This graph shows three line graphs for the three counties. Honolulu has the least steep curve, Snohomish has the second least steep curve, and Maricopa has the most steep curve. For Honolulu and Snohomish, it seems as though the curve is flattening, whereas with Maricopa, the number of cases is continuing to exponentially increase. ","21008938":"This graph shows the correlation between cases and deaths in all US counties. Because many of the counties in the data set have lower amounts of cases, there is a cluster of stars towards the beginning of the graph. However, the correlation seems to be very strong otherwise, as the line of best fit is pretty close to the line made of stars. ","4bb49e68":"This graph shows the cases and deaths for 3 different counties. Honolulu has the least cases and because their number of deaths is so small, the cyan bar does not show up. Maricopa has the most cases and most deaths of these 3 counties, and Snohomish has the second most cases and deaths. "}}