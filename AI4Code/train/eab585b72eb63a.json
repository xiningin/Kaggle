{"cell_type":{"35dd6e00":"code","72b513fa":"code","40ae691e":"code","ca68ba53":"code","5a56453e":"code","a20d8e98":"code","782facc3":"code","fa79c8ab":"code","ff96499a":"code","3e9482d8":"code","c7218660":"code","90d5d4b3":"code","21b17d04":"code","39ba4d94":"code","44aed498":"code","114bcbc2":"code","efa7fb28":"code","96d0c2d4":"code","7b8301d2":"code","93e04a54":"code","58e106c1":"code","41e3f64a":"code","9cbcac89":"markdown","d05662b0":"markdown","c7701c0a":"markdown","0661aeb7":"markdown"},"source":{"35dd6e00":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno\n\n%matplotlib inline\nplt.rcParams[\"figure.figsize\"] = (8, 6)","72b513fa":"# import the titanic dataset\ndata = pd.read_csv(\"..\/input\/titanic\/train.csv\")\n\n# Fill empty and NaNs values with NaN\ndata = data.fillna(np.nan)\n\n# Fill Embarked nan values of dataset set with 'S' most frequent value\ndata[\"Embarked\"] = data[\"Embarked\"].fillna(\"S\")\n\n# We will replace the missing age values by average age based on the Parch values\ndef replace_age(cols):\n    age = cols[0]\n    parch = cols[1]\n    \n    if pd.isna(age):\n        if parch == 0:\n            return 32\n        elif parch == 1:\n            return 24\n        elif parch == 2:\n            return 17\n        elif parch == 3:\n            return 33\n        elif parch == 4:\n            return 45\n        elif parch == 5:\n            return 39\n        else: \n            return 43\n    else:\n        return age\n\ndata['Age'] = data[['Age', 'Parch']].apply(replace_age, axis=1)","40ae691e":"data.head()","ca68ba53":"data.info()","5a56453e":"# correlation heatmap of numerical values\ng = sns.heatmap(data[[\"Survived\", \"SibSp\", \"Parch\", \"Age\", \"Fare\"]].corr(), annot=True, \\\n                fmt = \".2f\", cmap = \"RdBu\")\nplt.show()","a20d8e98":"# Explore SibSp feature vs Survived\ng = sns.catplot(x=\"SibSp\", \n                y=\"Survived\", \n                data=data, \n                kind=\"bar\", \n                height = 6, \n                palette = \"Set2\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")\nplt.show()","782facc3":"# Explore Parch feature vs Survived\ng = sns.catplot(x=\"Parch\", \n                y=\"Survived\", \n                data=data, \n                kind=\"bar\", \n                height = 6, \n                palette = \"Set1\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")\nplt.show()","fa79c8ab":"# Explore Age vs Survived\ng = sns.FacetGrid(data, col='Survived')\ng = g.map(sns.distplot, \"Age\")","ff96499a":"# Explore Age distibution \ng = sns.kdeplot(data[\"Age\"][(data[\"Survived\"] == 0) & \\\n                            (data[\"Age\"].notnull())], color=\"Red\", shade = True)\ng = sns.kdeplot(data[\"Age\"][(data[\"Survived\"] == 1) & \\\n                            (data[\"Age\"].notnull())], ax =g, color=\"Blue\", shade= True)\ng.set_xlabel(\"Age\")\ng.set_ylabel(\"Frequency\")\ng = g.legend([\"Not Survived\",\"Survived\"])","3e9482d8":"# Explore Fare distribution \ng = sns.distplot(data[\"Fare\"], color=\"g\", label=\"Skewness : %.2f\"%(data[\"Fare\"].skew()))\ng = g.legend(loc=\"best\")","c7218660":"# Apply log to Fare to reduce skewness distribution\ndata[\"Fare\"] = data[\"Fare\"].map(lambda i: np.log(i) if i > 0 else 0)","90d5d4b3":"g = sns.distplot(data[\"Fare\"], color=\"g\", \\\n                 label=\"Skewness : %.2f\"%(data[\"Fare\"].skew()))\ng = g.legend(loc=\"best\")","21b17d04":"g = sns.barplot(x=\"Sex\",y=\"Survived\",data=data)\ng = g.set_ylabel(\"Survival Probability\")","39ba4d94":"data[[\"Sex\",\"Survived\"]].groupby('Sex').mean()","44aed498":"# Explore Pclass vs Survived\ng = sns.catplot(x=\"Pclass\", \n                y=\"Survived\", \n                data=data, \n                kind=\"bar\", \n                height = 6 , \n                palette = \"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","114bcbc2":"# Explore Pclass vs Survived by Sex\ng = sns.catplot(x=\"Pclass\", y=\"Survived\", hue=\"Sex\", data=data,\n                   height=6, kind=\"bar\", palette=\"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","efa7fb28":"# Explore Embarked vs Survived \ng = sns.catplot(x=\"Embarked\", y=\"Survived\", data=data, \n                height=6, kind=\"bar\", palette=\"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","96d0c2d4":"# Explore Pclass vs Embarked \ng = sns.catplot(\"Pclass\", col=\"Embarked\",  data=data, \n                height=6, kind=\"count\", palette=\"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"Count\")","7b8301d2":"# Explore Age vs Sex, Parch , Pclass and SibSP\ng = sns.catplot(y=\"Age\", x=\"Sex\", data=data, kind=\"box\")","93e04a54":"g = sns.catplot(y=\"Age\", x=\"Sex\", hue=\"Pclass\", data=data, kind=\"box\")","58e106c1":"g = sns.catplot(y=\"Age\", x=\"Parch\", data=data, kind=\"box\")","41e3f64a":"g = sns.catplot(y=\"Age\", x=\"SibSp\", data=data, kind=\"box\")","9cbcac89":"## Featue analysis (Titanic dataset)","d05662b0":"### Correlation heatmap","c7701c0a":"The biggest correlation with survival is the ticket fare.","0661aeb7":"### Categorical variables"}}