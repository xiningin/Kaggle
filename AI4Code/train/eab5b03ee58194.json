{"cell_type":{"21347f41":"code","5ebe7594":"code","80721cde":"code","5d64e2e5":"markdown","42bfe688":"markdown","a86b29c6":"markdown","e5583e01":"markdown","c6486cfd":"markdown","049690f7":"markdown","ac6a7731":"markdown","b396e7a0":"markdown","8c0f1dd6":"markdown"},"source":{"21347f41":"#Lets import some packages that we'll use:\n\nimport random as random\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.set(font_scale=1.5)","5ebe7594":"winrate_of_stay = []\nwinrate_of_switched = []\nwins_stay = 0\nwins_switched = 0\nrandom.seed(0)\n\n#Simulating 1000 times to get a clear view and perfect probability of the two options:\nfor i in range(1000):\n    #Initialize cars\/goats setup behind doors:\n    doors = ['Car', 'Goat_1', 'Goat_2']\n    random.shuffle(doors)\n    \n    #Player makes a guess:\n    first_guess = random.choice(doors)\n    \n    #Monty opens a door:\n    if first_guess == 'Goat_2':\n        monty_opens = 'Goat_1'\n    elif first_guess == 'Goat_1':\n        monty_opens = 'Goat_2'\n    else:\n        monty_opens = random.choice(['Goat_1', 'Goat_2'])                                   \n        #Adds one win if Player stays with the first choice:\n        wins_stay += 1\n    \n    #Switching doors:\n    second_guess = doors\n    second_guess.remove(monty_opens)\n    second_guess.remove(first_guess)\n    \n    #Adds one win if player stays with the second choice after switching doors:                             \n    if second_guess == ['Car']:\n        wins_switched += 1\n        \n    winrate_of_stay.append(wins_stay*100\/(i+1))\n    winrate_of_switched.append(wins_switched*100\/(i+1))\n    \nprint('Win rate when stayed with first choice : {} %'.format(wins_stay*100\/1000))\nprint('Win rate when doors were switched : {} %'.format(wins_switched*100\/1000))","80721cde":"fig = plt.figure(figsize=(15,8))\nax = plt.plot(winrate_of_stay, label='Stayed with first choice')\nax = plt.plot(winrate_of_switched, label='Switched doors')\n\nplt.xlim(0,1000)\nplt.xlabel('Number of Simulations')\nplt.ylabel('Win rate (%)')\nplt.legend()\nplt.show()\n","5d64e2e5":"## Monty hall game - simulation","42bfe688":"- Program a simple simulation to solve a concrete statistical problem\n- Develop insight into the Bayesian probabilistic viewpoint\n- Recognize that statistical intuition can sometimes be wrong\n","a86b29c6":"\n(Source: https:\/\/en.wikipedia.org\/wiki\/Monty_Hall_problem#\/media\/File:Monty_open_door.svg )\n\n[Monty hall problem ]","e5583e01":"#### What we learn from here is if you somehow ended up in such game shows it's better to switch the door if you want a car. Of course if you want to cuddle with goats you better stick with your first choice.","c6486cfd":"## Graphical Representation","049690f7":"## Learning outcomes","ac6a7731":"### Simulate to compare the effects of each strategy","b396e7a0":"Game Description:  \n\nSuppose you're on a game show and you're given the choice of three doors. \n\nBehind one door is a car; behind the others, goats. The car and the goats were placed randomly behind the doors before the show.\n\nThe rules are:\n\nAfter you have chosen a door, the door remains closed for the time being. \nThe game show host, Monty Hall, who knows what is behind the doors, now has to open one of the two remaining doors, and the door he opens must have a goat behind it. If both remaining doors have goats behind them, he chooses one randomly. \n\nAfter Monty opens a door with a goat, he will ask you to decide whether you want to stay with your first choice or to switch to the last remaining door. \nImagine that you chose Door 1 and the host opens Door 3, which has a goat. \nHe then asks you \"Do you want to switch to Door Number 2?\" Is it to your advantage to change your choice? \n\n**NOTES:**\n1. The player may initially choose any of the three doors (not just Door 1).\n2. The host opens a different door revealing a goat (not necessarily Door 3).\n3. The host gives the player a second choice between the two remaining unopened doors. \n","8c0f1dd6":"#### We can see that in 1000 times more than 69% the contestant won the car when doors were switched. This tells us, the contestant has probability of winning the car for about 2\/3 when he\/she switches the door.\n\n#### When contestant stayed with their first choice for 1000 tests the win rate was 30%, i.e. The probability of winning dropped from 2\/3 to 1\/3.\n"}}