{"cell_type":{"815425db":"code","3c124026":"code","56601c83":"code","a58e0270":"code","1ce62eda":"code","3d0b9031":"code","d0237b17":"code","2d5b577a":"code","3643bdfe":"code","02537593":"code","aef3334f":"code","66441b1a":"code","9c124807":"code","b32c1751":"code","5e138a1d":"code","e46ebbc1":"code","e72e52e4":"code","2af09715":"markdown","6cbdc13b":"markdown","b14977c8":"markdown","ff518eb7":"markdown","5216ab00":"markdown","d0ffa4a9":"markdown","56a93139":"markdown"},"source":{"815425db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3c124026":"data = pd.read_csv('..\/input\/2017.csv')\ndata2016 = pd.read_csv('..\/input\/2016.csv')","56601c83":"data.info()","a58e0270":"data.corr()","1ce62eda":"data.head(10)","3d0b9031":"f,ax = plt.subplots(figsize=(12, 10)) \nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax) \nplt.show() ","d0237b17":"data.columns","2d5b577a":"col_name =data.columns[1]  #fix for using\ndata=data.rename(columns = {col_name:'Happiness_Rank'})\ncol_name =data.columns[2]  #fix for using\ndata=data.rename(columns = {col_name:'Happiness_Score'})\ncol_name =data.columns[3]  #fix for using\ndata=data.rename(columns = {col_name:'Whisker_high'})\ncol_name =data.columns[4]  #fix for using\ndata=data.rename(columns = {col_name:'Whisker_low'})\ncol_name =data.columns[5]  #fix for using\ndata=data.rename(columns = {col_name:'Economy_GDP_per_Capita'})\ncol_name =data.columns[7]  #fix for using\ndata=data.rename(columns = {col_name:'Health_Life_Expectancy'})\ncol_name =data.columns[10]  #fix for using\ndata=data.rename(columns = {col_name:'Trust_Government_Corruption'})\ncol_name =data.columns[11]  #fix for using\ndata=data.rename(columns = {col_name:'Dystopia_Residual'})","3643bdfe":"data.columns","02537593":"data.Health_Life_Expectancy.plot(kind='line', color ='r', label=\"Health Life Expectancy\",linewidth=1,grid = True, linestyle = '-.', figsize = (16,10),title='Health Life Expectancy - Freedom - Generosity')\ndata.Freedom.plot(kind='line', color ='b', label=\"Freedom\",linewidth=1,grid = True, linestyle = '-', figsize = (16,10))\ndata.Generosity.plot(kind='line', color ='g', label=\"Generosity\",linewidth=1,grid = True, linestyle = '-', figsize = (16,10))\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.legend(loc='upper center')\nplt.show()","aef3334f":"series = data['Economy_GDP_per_Capita']        # data['Economy_GDP_per_Capita'] = series\nprint(type(series))\ndata_frame = data[['Economy_GDP_per_Capita']]  # data[['Economy_GDP_per_Capita']] = data frame\nprint(type(data_frame))","66441b1a":"x = data['Economy_GDP_per_Capita']>1.5     # filtering\ndata[x]","9c124807":"data[np.logical_and(data['Economy_GDP_per_Capita']>1.5, data['Happiness_Rank']<20 )]","b32c1751":"col_name =data2016.columns[1]  #fix for using\ndata2016=data.rename(columns = {col_name:'Happiness_Rank'})\ncol_name =data2016.columns[2]  #fix for using\ndata2016=data.rename(columns = {col_name:'Happiness_Score'})\ncol_name =data2016.columns[3]  #fix for using\ndata2016=data.rename(columns = {col_name:'Whisker_high'})\ncol_name =data2016.columns[4]  #fix for using\ndata2016=data.rename(columns = {col_name:'Whisker_low'})\ncol_name =data2016.columns[5]  #fix for using\ndata2016=data.rename(columns = {col_name:'Economy_GDP_per_Capita'})\ncol_name =data2016.columns[7]  #fix for using\ndata2016=data.rename(columns = {col_name:'Health_Life_Expectancy'})\ncol_name =data2016.columns[10]  #fix for using\ndata2016=data.rename(columns = {col_name:'Trust_Government_Corruption'})\ncol_name =data2016.columns[11]  #fix for using\ndata2016=data.rename(columns = {col_name:'Dystopia_Residual'})","5e138a1d":"plt.hist(data.Whisker_high,bins=50, label = 'Whisker high',)\nplt.hist(data.Whisker_low,bins=50,alpha = 0.5, label = 'Whisker low') \nplt.legend(loc='upper right') \nplt.xlabel(\"Whisker high & low values\")\nplt.ylabel(\"frekans\")\nplt.title(\"Histogram\")\nplt.show()","e46ebbc1":"plt.scatter(data.Happiness_Score,data.Economy_GDP_per_Capita, color=\"red\",linewidths=0.1)\nplt.title(\"data 2017 happines score & economoy gdp\")\n\n\n\n","e72e52e4":"data.plot(grid=True,alpha=0.9,subplots=True, figsize= (12,12))\n\nplt.subplot(2,1,1)\nplt.plot(data.Happiness_Score ,data.Economy_GDP_per_Capita, color =\"red\")\nplt.ylabel(\"'data'-2017 happines score & economoy gdp\")\n\nplt.subplot(2,1,2)\nplt.plot(data2016.Happiness_Score ,data2016.Economy_GDP_per_Capita, color =\"blue\")\nplt.ylabel(\"'data2016'-2016 happines score & economoy gdp\")\nplt.show()","2af09715":"I showed Health, Freedom, Generosity features with matplotlib library","6cbdc13b":"\n**I read datasheets with pandas**","b14977c8":"**When i try the plot of features.  Program gave an error. So i fix the features names\nProbably i chose hard way for the fixing. **","ff518eb7":"**I filtered some data and i took some interesting details.\nEconomy is not always proportional to happiness**","5216ab00":"**I showed correlation of features with seaborn library**","d0ffa4a9":"**Firstly i imported matplotlib.pyplot and seaborn libraries for analysis**","56a93139":"**I looked about correlation of features\nafter I looked first 10 data**\n"}}