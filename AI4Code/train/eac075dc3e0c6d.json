{"cell_type":{"ba92442e":"code","1c46eec8":"code","aa112b4e":"code","75c90d98":"code","9fab85fc":"code","e5287bd6":"code","c469dade":"code","e66dd64a":"code","843624d2":"code","20fbbf0d":"code","8a549cc2":"code","ffbacfe3":"code","e709c16f":"code","62e5e9de":"code","8df68de9":"code","6064af0b":"code","f23625f2":"code","a22bd456":"code","5b97a467":"code","fa6981d7":"code","456e427c":"code","f85a5926":"code","a0986100":"code","a8f66fc7":"code","bdd6f0da":"code","6c645844":"code","b7890d20":"code","e09f3de7":"code","61b6f6c8":"code","852d7c05":"code","847948fe":"code","e5ddbd28":"code","04563bef":"code","6543b9dc":"code","a904a7c8":"code","8d327569":"markdown","0afa900e":"markdown","8da0cce6":"markdown","7cc988a4":"markdown","ba64a349":"markdown","b3e90e86":"markdown","d93b8510":"markdown","86255ee0":"markdown","a3458c3b":"markdown","d055bcda":"markdown","2df0eae1":"markdown","7b6a2488":"markdown","c1e213d7":"markdown","29b4c8e2":"markdown","31a03ddb":"markdown","4441a626":"markdown","f73fa87c":"markdown","d43fa3fd":"markdown","25ac989b":"markdown","2e3a0b68":"markdown","cbca213a":"markdown","8a21c67e":"markdown","774e72f6":"markdown","04b86db9":"markdown","74cbfed6":"markdown","16c026eb":"markdown","36ab05af":"markdown","2007c671":"markdown","f365792a":"markdown","2ded2365":"markdown","842386a2":"markdown","838b753b":"markdown"},"source":{"ba92442e":"# import the usual frameworks\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport collections\nimport warnings\n\nfrom IPython.core.display import display, HTML\nfrom sklearn.preprocessing import MinMaxScaler\n\nimport os\nprint(os.listdir(\"..\/input\"))\n    \n# import plotly \nimport plotly.figure_factory as ff\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.tools as tls\n\n# for color scales in plotly\nimport colorlover as cl \n\n# define color scale https:\/\/plot.ly\/ipython-notebooks\/color-scales\/\ncs = cl.scales['10']['div']['RdYlGn']    # for most charts \ncs7 =  cl.scales['7']['qual']['Dark2']   # for stacked bar charts  \n\n# configure things\nwarnings.filterwarnings('ignore')\n\npd.options.display.float_format = '{:,.2f}'.format  \npd.options.display.max_columns = 999\n\npy.init_notebook_mode(connected=True)\n\n%load_ext autoreload\n%autoreload 2\n%matplotlib inline","1c46eec8":"#!pip list","aa112b4e":"new_col_names = ['framework','indeed', 'monster', 'simply', 'linkedin', 'angel', \n                 'usage', 'search', 'medium', 'books', 'arxiv', 'stars', \n                 'watchers', 'forks', 'contribs',\n                ]\n\ndf = pd.read_csv('..\/input\/ds13.csv', \n                 skiprows=4,\n                 header=None, \n                 nrows=11, \n                 thousands=',',\n                 index_col=0,\n                 names=new_col_names,\n                 usecols=new_col_names,\n                )\ndf","75c90d98":"df.info()","9fab85fc":"df.describe()","e5287bd6":"df['usage'] = pd.to_numeric(df['usage'].str.strip('%'))\ndf['usage'] = df['usage'].astype(int)\ndf","c469dade":"df.info()","e66dd64a":"# sum groupby for the hiring columns\ndf['hiring'] = df['indeed'] + df['monster'] + df['linkedin'] + df['simply'] + df['angel']","843624d2":"df","20fbbf0d":"data = [go.Bar(\n    x=df.index,\n    y=df.hiring,\n    marker=dict(color=cs),\n    )\n]\n\nlayout = {'title': 'Online Job Listings',\n          'xaxis': {'title': 'Framework'},\n          'yaxis': {'title': \"Quantity\"},\n         }\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","8a549cc2":"y_indeed = df['indeed']\ny_monster = df['monster']\ny_simply = df['simply']\ny_linkedin = df['linkedin']\ny_angel = df['angel']","ffbacfe3":"indeed = go.Bar(x=df.index, y=y_indeed, name = 'Indeed')\nsimply = go.Bar(x=df.index, y=y_simply, name='Simply Hired')\nmonster = go.Bar(x=df.index, y=y_monster, name='Monster')\nlinked = go.Bar(x=df.index, y=y_linkedin, name='LinkedIn')\nangel = go.Bar(x=df.index, y=y_angel, name='Angel List')\n\ndata = [linked, indeed, simply, monster, angel]\nlayout = go.Layout(\n    barmode='stack',\n    title='Online Job Listings',\n    xaxis={'title': 'Framework'},\n    yaxis={'title': 'Mentions', 'separatethousands': True},\n    colorway=cs,\n)\n\nfig = go.Figure(data = data, layout = layout)\npy.iplot(fig)","e709c16f":"indeed = go.Bar(x=df.index, y=y_indeed, name = \"Indeed\")\nsimply = go.Bar(x=df.index, y=y_simply, name=\"Simply Hired\")\nmonster = go.Bar(x=df.index, y=y_monster, name=\"Monster\")\nlinked = go.Bar(x=df.index, y=y_linkedin, name=\"LinkedIn\")\nangel = go.Bar(x=df.index, y=y_angel, name='Angel List')\n\ndata = [linked, indeed, simply, monster, angel]\nlayout = go.Layout(\n    barmode='group',\n    title=\"Online Job Listings\",\n    xaxis={'title': 'Framework'},\n    yaxis={'title': \"Listings\", 'separatethousands': True,\n    }\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","62e5e9de":"# Make sure you have colorlover imported as cl for color scale\ndf['usage'] = df['usage'] \/ 100","8df68de9":"data = [\n    go.Bar(\n        x=df.index, \n        y=df['usage'],\n        marker=dict(color=cs)  \n    )\n]\n    \nlayout = {\n    'title': 'KDnuggets Usage Survey',\n    'xaxis': {'title': 'Framework'},\n    'yaxis': {'title': \"% Respondents Used in Past Year\", 'tickformat': '.0%'},\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","6064af0b":"data = [\n    go.Bar(\n        x = df.index, \n        y = df['search'],\n        marker = dict(color=cs),  \n    )\n]\n    \nlayout = {\n    'title': 'Google Search Volume',\n    'xaxis': {'title': 'Framework'},\n    'yaxis': {'title': \"Relative Search Volume\"},\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","f23625f2":"# Make sure you have colorlover imported as cl for color scale\n# cs is defined in first cell\n\ndata = [\n    go.Bar(\n        x=df.index, \n        y=df['medium'],\n        marker=dict(color=cs) ,\n    )\n]\n    \nlayout = {\n    'title': 'Medium Articles',\n    'xaxis': {'title': 'Framework'},\n    'yaxis': {'title': \"Articles\"},\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","a22bd456":"data = [\n    go.Bar(\n        x=df.index, \n        y=df['books'],\n        marker=dict(color=cs),           \n    )\n]\n    \nlayout = {\n    'title': 'Amazon Books',\n    'xaxis': {'title': 'Framework'},\n    'yaxis': {'title': \"Books\"},\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","5b97a467":"data = [\n    go.Bar(\n        x=df.index, \n        y=df['arxiv'],\n        marker=dict(color=cs),           \n    )\n]\n\nlayout = {\n    'title': 'ArXiv Articles',\n    'xaxis': {'title': 'Framework'},\n    'yaxis': {'title': \"Articles\"},\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","fa6981d7":"y_stars = df['stars']\ny_watchers = df['watchers']\ny_forks = df['forks']\ny_contribs = df['contribs']\n\nstars = go.Bar(x = df.index, y=y_stars, name=\"Stars\")\nwatchers = go.Bar(x=df.index, y=y_watchers, name=\"Watchers\")\nforks = go.Bar(x=df.index, y=y_forks, name=\"Forks\")\ncontribs = go.Bar(x=df.index, y=y_contribs, name=\"Contributors\")\n\n\ndata = [stars, watchers, forks, contribs]\nlayout = go.Layout(barmode='stack', \n    title=\"GitHub Activity\",\n    xaxis={'title': 'Framework'},\n    yaxis={\n        'title': \"Quantity\",\n        'separatethousands': True,\n    }\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","456e427c":"trace1 = go.Bar(\n    x=df.index,\n    y=df['stars'],\n    name='Stars',\n    marker=dict(color=cs),\n)\ntrace2 = go.Bar(\n    x=df.index,\n    y=df['forks'],\n    name =\"Forks\",\n    marker=dict(color=cs)\n)\ntrace3 = go.Bar(\n    x=df.index,\n    y=df['watchers'],\n    name='Watchers',\n    marker=dict(color=cs)\n)\ntrace4 = go.Bar(\n    x=df.index,\n    y=df['contribs'],\n    name='Contributors',\n    marker=dict(color=cs),\n)\n\nfig = tls.make_subplots(\n    rows=2, \n    cols=2, \n    subplot_titles=(\n        'Stars', \n        'Forks',\n        'Watchers',\n        'Contributors',\n    )\n)\n\nfig['layout']['yaxis3'].update(separatethousands = True)\nfig['layout']['yaxis4'].update(separatethousands = True)\nfig['layout']['yaxis2'].update(tickformat = ',k', separatethousands = True)\nfig['layout']['yaxis1'].update(tickformat = ',k', separatethousands = True)\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 2, 1)\nfig.append_trace(trace4, 2, 2)\n\nfig['layout'].update(title = 'GitHub Activity', showlegend = False)\npy.iplot(fig)","f85a5926":"df.info()","a0986100":"scale = MinMaxScaler()\nscaled_df = pd.DataFrame(\n    scale.fit_transform(df), \n    columns = df.columns,\n    index = df.index)    ","a8f66fc7":"scaled_df","bdd6f0da":"scaled_df['hiring_score'] = scaled_df[['indeed', 'monster', 'simply', 'linkedin', 'angel']].mean(axis=1)","6c645844":"scaled_df","b7890d20":"scaled_df['github_score'] = scaled_df[['stars', 'watchers', 'forks', 'contribs']].mean(axis=1)","e09f3de7":"scaled_df","61b6f6c8":"weights = {'Online Job Listings\u00a0': .3,\n           'KDnuggets Usage Survey': .2,\n           'GitHub Activity': .1,\n           'Google Search Volume': .1,\n           'Medium Articles': .1,\n           'Amazon Books': .1,\n           'ArXiv Articles': .1 }","852d7c05":"# changing colors because we want to show these aren't the frameworks\nweight_colors = cl.scales['7']['qual']['Set1'] \n\ncommon_props = dict(\n    labels = list(weights.keys()),\n    values = list(weights.values()),\n    textfont=dict(size=16),\n    marker=dict(colors=weight_colors),\n    hoverinfo='none',\n    showlegend=False,\n)\n\ntrace1 = go.Pie(\n    **common_props,\n    textinfo='label',\n    textposition='outside',\n)\n\ntrace2 = go.Pie(\n    **common_props,\n    textinfo='percent',\n    textposition='inside',\n)\n\nlayout = go.Layout(title = 'Weights by Category')\n\nfig = go.Figure([trace1, trace2], layout=layout)\npy.iplot(fig)","847948fe":"scaled_df['w_hiring'] = scaled_df['hiring_score'] * .3\nscaled_df['w_usage'] = scaled_df['usage'] * .2\nscaled_df['w_github'] = scaled_df['github_score'] * .1\nscaled_df['w_search'] = scaled_df['search'] * .1\nscaled_df['w_arxiv'] = scaled_df['arxiv'] * .1\nscaled_df['w_books'] = scaled_df['books'] * .1\nscaled_df['w_medium'] = scaled_df['medium'] * .1","e5ddbd28":"weight_list = ['w_hiring', 'w_usage', 'w_github', 'w_search', 'w_arxiv', 'w_books', 'w_medium']\nscaled_df = scaled_df[weight_list]\nscaled_df","04563bef":"scaled_df['ps'] = scaled_df[weight_list].sum(axis = 1)\nscaled_df","6543b9dc":"p_s_df = scaled_df * 100\np_s_df = p_s_df.round(2)\np_s_df.columns = ['Job Search Listings', 'Usage Survey', 'GitHub Activity', 'Search Volume', 'ArXiv Articles', 'Amazon Books', 'Medium Articles', 'Power Score']\np_s_df.rename_axis('Framework', inplace = True)\np_s_df","a904a7c8":"data = [\n    go.Bar(\n        x=scaled_df.index,          # you can pass plotly the axis\n        y=p_s_df['Power Score'],\n        marker=dict(color=cs),\n        text=p_s_df['Power Score'],\n        textposition='outside',\n        textfont=dict(size=10)\n    )\n]\n\nlayout = {\n    'title': 'Deep Learning Framework Power Scores 2018',\n    'xaxis': {'title': 'Framework'},\n    'yaxis': {'title': \"Score\"}\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","8d327569":"# Plotly\nLet's make interactive plots with plotly for each popularity category.","0afa900e":"# Please upvote this Kaggle kernel if you find it helpful.","8da0cce6":"## Weight the Categories","7cc988a4":"Read in the data from the csv. The Google sheet that holds the data is available [here](https:\/\/docs.google.com\/spreadsheets\/d\/1mYfHMZfuXGpZ0ggBVDot3SJMU-VsCsEGceEL8xd1QBo\/edit?usp=sharing).","ba64a349":"## Power Scores\nLet's make the power score column by summing the seven category scores.","b3e90e86":"Let's make a pie chart of weights by category.","d93b8510":"Now we have a hiring score.","86255ee0":"# GitHub Activity\nLet's make another stacked bar chart of the four GitHub categories.","a3458c3b":"Let's make a bar chart of the power scores.","d055bcda":"Now we have all our aggregate columns and are ready to turn to the weights.","2df0eae1":"## KDnuggets Usage Survey\nLet's look at usage as reported in KDnuggets 2018 survey.","7b6a2488":"## Online Job Listings\nI looked at how many times each framework appeared in searches on job listing websites. For more discussion see the Medium Article the accompanies this notebook here.","c1e213d7":"## Deep Learning Framework Power Scores 2018\n## By Jeff Hale\n\n### See [this Medium article](https:\/\/towardsdatascience.com\/deep-learning-framework-power-scores-2018-23607ddf297a) for a discussion of the state of Python deep learning frameworks in 2018 featuring these charts.\n\nI'm going to use plotly and pandas to make interactive visuals for this project.\n\nUpdated Sept. 20-21, 2018  to include Caffe, DL4J, Caffe2, and Chainer and several improved metrics. ","29b4c8e2":"# Scale and Aggregate for Power Scores\nScale each column. For each column we'll use MinMaxScaler to subtract the minumum and divide by the original max - original min.","31a03ddb":"## Medium Articles\nPast 12 months.","4441a626":"## ArXiv Articles\nPast 12 months.","f73fa87c":"## Basic Data Exploration\nLet's see what the data look like.","d43fa3fd":"Cool. Now let's see how this data looks with grouped bars instead of stacked bars by changing the barmode to \"group\".","25ac989b":"This configuration doesn't make the most sense, because there are going to be way more stars than contributors. It's not an apples to apples comparison. Let's try four subplots instead.","2e3a0b68":"### Scaled Online Job Listings\nLet's combine the scaled online job listing columns into a new column.","cbca213a":"## Google Search Volume\nAs of Sept. 15, 2018.","8a21c67e":"Cool. We used the read_csv parameters to give us just what we wanted.","774e72f6":"Looks like pandas read the usage column as a string because of it's percent sign. Let's make that a decimal.","04b86db9":"### That's the end! \n### See [this Medium article](https:\/\/towardsdatascience.com\/deep-learning-framework-power-scores-2018-23607ddf297a) for a discussion of the state of Python deep learning frameworks in 2018 featuring these charts.\n## Pleave upvote if you found this interesting or informative!","74cbfed6":"Let's clean things up for publication","16c026eb":"## Weights","36ab05af":"List package versions for reproducibility.","2007c671":"This presentation shows the information in a more comprehensible and appropriate format.","f365792a":"All ints! Great!","2ded2365":"That's just the aggregate listings. Let's plot the job listing mentions for each website in a stacked bar chart. This will take multiple traces.","842386a2":"## Amazon Books","838b753b":"### Scaled GitHub Activity\n\nLet's combine the scaled GitHub columns into a new column."}}