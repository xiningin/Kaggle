{"cell_type":{"755b82bd":"code","2246aedb":"code","b0180ad7":"code","269f278a":"code","e42a96c3":"code","04039b09":"code","15388a34":"code","8516a286":"code","f10a01d4":"code","011926fc":"code","004d34ad":"code","a9f8933a":"code","fb4cb6b6":"code","8b155d6d":"code","df38a170":"code","329fabf9":"code","fb03ebf2":"code","ce3bfaae":"code","f5d6304f":"code","e3b430d7":"code","87b59d20":"code","e6a8c8f6":"code","8369a69b":"code","f46af60e":"code","e1b2de6e":"code","19ae43f1":"code","14ac8f21":"code","f7e55d1a":"code","1364ea2e":"code","764a0d87":"code","da1f69fd":"code","2f3179a1":"code","4642fd1a":"code","c931fe4b":"code","1fd59446":"code","bb014503":"code","90334353":"code","f62995c9":"code","dd1ef93b":"code","716f4dd0":"code","0c1e4f47":"code","ac8c56ab":"code","c73d7213":"code","2a4003f7":"code","63e65398":"code","4f41fbe6":"code","2ea439e2":"code","5433c288":"code","98668182":"code","082d2563":"code","d516d3c9":"code","78bd5206":"code","1856e381":"code","76acdb50":"code","2c36e0a6":"code","778fdc4f":"code","607d482a":"markdown"},"source":{"755b82bd":"# kutuphaneler\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns \n\nfrom subprocess import check_output\nprint(check_output([\"ls\",\"..\/input\"]).decode(\"utf8\"))\n","2246aedb":"data = pd.read_csv('..\/input\/pokemon.csv')\n\n","b0180ad7":"# correlation map     birbiri ile  oran\u0131 g\u00f6sterir\nf,ax = plt.subplots(figsize= ( 18 ,18 ))\nsns.heatmap(data.corr(), annot= tru ,linewidths= .5, fmt= '.1f'ax=ax) # g\u00f6rselle\u015ftirme foks\u0131yonu\n","269f278a":"data.columns #  i\u00e7indeki madde bas\u015fl\u0131klar\u0131n\u0131 g\u00f6ster\u0131r.","e42a96c3":"# Line plot  = x ve y gore zamana g\u00f6re g\u00f6rselle\u015ftirme yapar.\n data.speed.plot(kind ='line',color='g',label ='speed', linewidth=1,alpha= 0.5,grid = True,linestyle=':') # kind t\u00fcr\u00fcn\u00fc g\u00f6sterir.\ndata.defense.plot(color ='r',label = 'defense',linewdth=1,alpha = 0.5, grid=True ,linestyle ='-.')# alph cizgi saydaml\u0131g\u0131n\u0131 ,linestyle da cizginin ne tur olmas\u0131n\u0131 bel\u0131rler noktam\u0131 cizgimi diye\nplt.legend(loc='upperringt')\nplt.xlabel('x axis')# x ekseni g\u00f6sterir.\nplt.ylabel('y axis')# y eskseni g\u00f6sterir.\nplt.title('Line Plot')\n","04039b09":"# scatter plot iki t\u00fcr\u00fcn ili\u015fkisini g\u00f6rsellenmesi\ndata.plot(kind='scatter',x='Attack',y='Defense' ,alpha=0.5, color='red')#  burda yaz\u0131lar\u0131 cloumns ki gibi yaz\u0131lmassak hata verir.\nplt.xlabel('Attack')\nplt.xlabel('Defence')\nplt.title('Attack defense Scatter Plot')","15388a34":"# Histogram \n\ndata.Speed.plot(kind = 'hist', bins = 50,figsize = (15,15)) # h\u0131z degerlerini g\u00f6sterir\n\n","8516a286":"#clf() = silmek i\u00e7in kullan\u0131l\u0131r\n\ndata.Speed.plot(kind = 'hist', bins = 50,)\nplt.clf() ","f10a01d4":"# create i\u00e7inde keyve volues bar\u0131nd\u0131r\u0131r ve listeden daha h\u0131zl\u0131d\u0131r.\ndictionary = {'spain':'radrid','usa':'vegas'}\nprint (dictionary.keys())\nprint (dictionary.values())\n","011926fc":"dictionary['spain'] = \"barcelona\" # de\u011fi\u015fiklik yap\u0131ld\u0131\nprint(dictionary)\ndictionary['france'] = \"paris\" # ekleme yap\u0131l\u0131r.\nprint(dictionary)\ndel dictionary['spain'] # isten\u0131len k\u0131sm\u0131 silme \nprint(dictionary)\nprint('france' in dictionary) # farnce dictionary i\u00e7indemi kontrol eder\ndictionary.clear()# tamam\u0131n\u0131 s\u0131lmek kodlar\u0131n\nprint(dictionary)","004d34ad":"series =data['Defense'] # vekt\u00f6rlerde uzanan tek boyutlu yap\u0131lard\u0131r.\nprint(type(series))\ndata_frame = data [['Defense']]# liste halinde c\u0131kart\u0131r\nprint(type(data_frame))","a9f8933a":"# comparison operat\u00f6r\nprint(3>2)\nprint(3!=2)\n# yanl\u0131s yada dogru oldugunu \nprint(True and False)\nprint(True or False)","fb4cb6b6":"# filtering pandas data frome \nx= data['Defense']>200 # filitreleme yapar\ndata[x]","8b155d6d":"# filtering pandas with logical_and\ndata[np.logical_and(data['Defense']>200 , data['Attack']>100)] # iki k\u0131s\u0131m\u0131da filitreleme yapar ver\u0131len degerler aras\u0131\n","df38a170":"data[(data['Defense']>200 & data['Attack']>100) # & sekl\u0131nde filitreleme olur.","329fabf9":"# stay in loop if condition is true\n\ni = 0  # 1 den 5 kadar yazd\u0131r\u0131r ama 5 yaz\u0131rmaz \nwhile i != 5:\n    print('i is:',i)\n    i +=1\n    print(i,'is equal to 5')\n    \n    ","fb03ebf2":"lis = [1,2,3,4,5] # liste olu\u015fturulur.\nfor i in lis # for d\u00f6ng\u00fcs\u00fc yap\u0131l\u0131r.\n   print('i is:',i)\n    \n    #Enumerate index and value of list \n     for index , value in emumerate(lis):  # index eri\u015fim saglar forla\n            print(index,\":\",value)\n            print('')\n            \n            \n    # for dictionareis\n    \n    dictionary = {'spain':'medrid','france':'paris'}  # items i\u00e7ine for d\u00f6ng\u00fcs\u00fc \u0131le key value koyar.\n    for key,value in dictionary.items():\n        print(key,\":\",valeu)\n         print('')\n            \n            \n      # for pandas index ve value achieve  ile bulma d\u00f6ng\u00fcs\u00fc\n    for index,valeu in data[[Attack]][0:1].iterrows():\n        print(index,\":\" ,valeu)","ce3bfaae":"# example of what we learn above\n\ndef tuble_ex():   # esitleme yap\u0131yor\n    \"\"\"return defined t tuble\"\"\"\n    t= (1,2,3)\n    return t\n a,b,c = tuble_ex()\n    print(a,b,c)","f5d6304f":"# guess print what \nx= 2\ndef f():\n    x=3\n    return x\nprint(x)    # global tan\u0131mlama yapar\nprint(f())  # locol metot i\u00e7indekini tan\u0131mlar\n","e3b430d7":"# what if there is no local scope \nx = 5 \n\ndef f(): # x yoksa d\u00f6ng\u00fc yapar ve local gider\n    \n    y = 2*x \n    \n    return y \n\n print(f()) \n    ","87b59d20":"# nested function   i\u00e7 i\u00e7e yazma sekl\u0131\n\ndef square():\n    \"\"\"return square of value\"\"\"\n    def add():\n        \"\"\"add two local variable\"\"\"\n        x = 2\n        y = 3\n        z = x + y\n        return z\n    return add()**2\n\nprint(square())\n        \n        \n    \n    \n    ","e6a8c8f6":"# flexible orguments args liste print eder\ndef f(*args):\n    for i in args:\n        \n        print(i)\n        \n        f(1) \n        print(\"\")\n        f(1,2,3,4)\n    \n    # flexible orguments   bir dictionary depolar\n    \n    def f(**kwargs):\n        \n        \"\"\"print key and value of dictionary\"\"\"\n        \n        for key, value in kwargs,items():\n            \n            print (key,\"\",value)\n    f(country = 'spain',capital = 'madrid',population= 123456)\n","8369a69b":"# user defined function  fonksiyonlar\u0131 k\u0131sa ve kolay yaz\u0131lmas\u0131n\u0131 saglar.\ndef square(x):\n    \n     return x**2\n    \n    print(square(5))\n    \n     #lambda function\n        \n        square = lambda x: x**2 \n        \n        print(square(4))\n        \n        tot =lambda x,y,z: x+y+z\n        \n        print(tot(1,2,3))","f46af60e":"  number_list[1,2,3]\n\ny = map(lambda x:x**2,number_list) # listenin i\u00e7indeki foksiyonu ad\u0131m ad\u0131m i\u015flem yaparak yazd\u0131r\u0131yor\n\n print(list(y))","e1b2de6e":"#iteration example  bir objedir. \nname =\"ronaldo\"\nit = iter(name)\nprint(next(it))\nprint(*it)","19ae43f1":"# zip example birlestirme yapar yani s\u0131k\u0131last\u0131rma yapar listeleri\n\n     list1 = [1,2,3,4]\n    \n     list2 = [5,6,7,8]\n    \n     z= zip(list1,list2)\n    \n     print(z)\n    \n     z_list = list(z)\n    \n     print (z_list)","14ac8f21":"un_zip = zip(*z_list)\n\nun_list1,un_list2 = list(un_zip) # s\u0131k\u0131lastur\u0131lm\u0131s liste hal\u0131ne cevirir.\nprint(un_list1)\nprint(un_list2)\nprint(type(un_list2))\nprint(type(list(un_list1)))","f7e55d1a":"# example of list comprehension  \n \n    num1 = [1,2,3]\n    \n    num2 = [i + 1 for i in num1] # burda for d\u00f6ngusu k\u0131saltarak tek sat\u0131rda yazd\u0131r\u0131r\n    \n    print(num2)","1364ea2e":"# conditionals on iterable  \nnum1 = [5,10,15]\nnum2 = [i**2 if i == 10 else i-5 if i<7 else i+5 for i in num1] #for  d\u00f6ngusunu k\u0131saltarak yazd\u0131r\u0131r.\nprint(num2)","764a0d87":"theshold = sum(data.Speed)\/len(data.Speed)  # h\u0131z ortalamas\u0131n\u0131 al\u0131r\ndata[\"Speed_level\"] = [\"high\" if i > threshold else \"low\" for i in data.Speed] # for d\u00f6ng\u00fcs\u00fcn\u00fc tek sat\u0131rda yapar if kadar.\ndata.loc[:10,[\"Speed_level\",\"Speed\"]]","da1f69fd":"# for example lets look frequency of pokemon type\nprint(data['Type'].value_counts(dropna = False)) # grupland\u0131rma yapar ","2f3179a1":"# for example max hp is 255  or min defense is \ndata.describe() # max ve min degerler\u0131n\u0131 ortadak\u0131 degerler\u0131de es\u0131t yazar listede","4642fd1a":"# box plots: max ve min  ve d\u0131yer degerler\u0131n\u0131 cizdir\u0131p ekranda farkl\u0131 bir g\u0131rafik g\u00f6stermesi\ndata.boxplot(column='Attack',by = 'Legendary')\nplt.show()","c931fe4b":"# firsly lets create 2 data frame iki data dikey birlestirme\n\ndata1 = data.head()\ndata2 = data.tail()\nconc_data_row = pd.concat([data1,data2],axis =0, ignore_index = True)\nconc_data_row\n","1fd59446":"# yatay birle\u015ftirme \ndata1 = data['Attack'].head()\ndata2 = data['Defense'].head()\nconc_data_col = pd.concat([data1,data2],axis =1)\nconc_data_col\n","bb014503":"# lets convert object (str) to categorical and int to float  ,\ndata['Type 1'] = data ['Type 1'].astype('category') # ceriri olur int olan\u0131 float yapar data.dtypes\ndata['Speed'] = data ['Speed'].astype('float') \n","90334353":"# ceviri yapar \ndata.dtypes\n","f62995c9":"# lets look ot does pokemon data have nan value\n\ndata.info() # degerler\u0131 liste seklinde g\u00f6sterir","dd1ef93b":"# lets chech type 2 burda secilen type i\u00e7indekiler\u0131n\u0131 s\u0131ralar\n\ndata[\"Type 2\"].value_counts(dropna =False)","716f4dd0":"# lets check with assert statement\nassert 1==1 # dogrudur e\u015f\u0131tl\u0131k anal\u0131z eder","0c1e4f47":"assert data['Type 2'] notnull().all() # type icindeki dogrulugu g\u00f6sterir","ac8c56ab":"data[\"Type 2\"].fillna('empty',inplace=True) #  type 2 deki dogru yada yanl\u0131s oldugunu g\u00f6sterir","c73d7213":"assert data['Type 2'].notnull().all() ","2a4003f7":"# data frames from dictionary  burda listeler\u0131 olusturup z\u0131p s\u0131k\u0131st\u0131r\u0131l\u0131p yazd\u0131r\u0131l\u0131yor\n country =[\"Spain\",\"France\"]\n    population =  [\"11\",\"12\"]\n    list_label= [\"country\",\"population\"]\n    list_col= [country,population]\n    \n    zipped =list(zip(list_label,list_col))\n    \n    data_dict=dict(zipped)\n    \n    df = pd.dataframe(data_dict)\n    ","63e65398":"# Add new columns\ndf[\"capital\"] = [\"madrid\",\"paris\"] # ekleme yap\u0131l\u0131r","4f41fbe6":"# broadcasting \ndf[\"income\"] =0 # kal\u0131p ekleme","2ea439e2":"# plotting all data    tek bir grafikte g\u00f6sterir\n\ndata1 = data.loc[:,[\"Attack\",\"Defense\",\"Speed\"]]\ndata1.plot()","5433c288":"# subplots  grafikleri ay\u0131r\u0131r turune g\u00f6re\ndata1.plot(subplots = True)\nplt.shoe()","98668182":"# hist  plot\n data1.plot(kind = \"hist\",y = \"Defense\",bins=50,range=(0,250),normed=True) # eksenler\u0131 bel\u0131rler ve norum \u0131c\u0131nde g\u00f6ster\u0131r","082d2563":"# histogram subplot with nan cumulative and cumulative   \nfig,axes =plt.subplots(nrows=2,ncols=1)# frekanslar\u0131 \u00f6l\u00e7er\ndata1.plot(kind = \"hist\",y = \"Defense\",bins=50,range=(0,250),normed=True,ax =axes[0])\ndata1.plot(kind = \"hist\",y = \"Defense\",bins=50,range=(0,250),normed=True,ax = axes[1],cumulative=True)\nplt,savefing('graph.png')","d516d3c9":"# parse_dates(boolean): transform date to ISO 8601 (yyyy-mm-dd hh:mm:ss)format seklinde yazmam\u0131z\u0131 saglar \n\ntime_list =[\"1992-03-08\",\"1992-04-12\"]\n print(type(time_liste[1])) # liste yazar\n    datetime_object = pd.to_datetime(time_list)\n    print(type(datetime_object))\n","78bd5206":"# liste cevirip sonra bas\u0131na gun ay y\u0131l olarak bel\u0131rt\u0131r\ndata2=data.head()   \ndate_list =[\"1992-01-10\",\"1992-02-10\",\"1992-03-10\",\"1992-03-15\",\"1992-03-16\"]\ndatetime_object = pd.to_datetime(date_list)\ndata2[\"date\"]= datetime_object\n# lets moke dote as index\ndata2= data2.set_index(\"date\")","1856e381":"# now we can select according to our date index\nprint(data2.loc[\"1992-03-16\"])\nprint(data2.loc[\"1992-03-10\":\"1993-03-16\"]) # burda data2 dek\u0131 bel\u0131rt\u0131len tar\u0131hler aras\u0131 yazd\u0131r\u0131r\u0131z","76acdb50":"# y\u0131llara g\u00f6re yazd\u0131r\u0131r.\ndata2.resample(\"A\").mean() ","2c36e0a6":"# # aylara g\u00f6re yazd\u0131r\u0131r. ama ver\u0131len aylar c\u0131kar d\u0131yerler\u0131 bos kal\u0131r\ndata2.resample(\"M\").mean()","778fdc4f":"# aralardak\u0131 aylar\u0131 doldurur\ndata2.resample(\"M\").firt().interpolate(\"linear\")","607d482a":"data.head(5)"}}