{"cell_type":{"45ec2b3d":"code","6033ed89":"code","c786b6b7":"code","c0979094":"code","5c35d86c":"code","0a74f018":"code","06d342ca":"code","02ba121b":"code","cffdff97":"code","d27fd433":"code","7df54aa2":"code","a58f4d02":"code","c5ff978d":"code","523e89fe":"code","3937a3d5":"code","9bae76ba":"code","33387f0b":"code","65e86b38":"code","b8cd3288":"code","f717de2d":"code","0e7321f1":"code","1ec7d026":"code","ec177774":"code","20eb43f6":"code","80f571f5":"code","ba435bcc":"code","ff18eb86":"code","41796b12":"code","855958aa":"code","47922b4b":"code","d41b8fd3":"code","fe9ab17b":"code","588847f6":"code","9207df59":"code","4675a0cc":"code","af2d4e0c":"code","3333babb":"markdown"},"source":{"45ec2b3d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","6033ed89":"data = pd.read_csv('..\/input\/data50.csv',index_col=0)","c786b6b7":"data.head()","c0979094":"# Get the shape of the data\ndata.shape","5c35d86c":"# Get data type\ntype(data)","0a74f018":"# Get types of each variable\ndata.dtypes","06d342ca":"# check for missing values\ndata.isnull().sum().sort_values(ascending=False)","02ba121b":"# Check for percentage of missing values\n(data.isnull().sum()\/data.isnull().count())","cffdff97":"# Table of Missing values\nmissing= data.isnull().sum().sort_values(ascending=False)\npercent= (data.isnull().sum()\/data.isnull().count())\ntotal= pd.concat([missing, percent],axis=1, keys=[\"Total\", \"Percent\"])\nprint(total)","d27fd433":"# Get all the numberic variables\nnumeric= data.select_dtypes(include=[np.number])\nnumeric","7df54aa2":"# Get all the categorical variables\ncategorical= data.select_dtypes(include=[np.object])\ncategorical","a58f4d02":"# Histogram of target variable\nplt.figure(figsize=(12,5))\nplt.hist(data[\"Profit\"],color=\"red\")\nplt.title(\"Profit\", size=20)\nplt.ylabel(\"Frequency\", size=20)\nplt.xlabel(\"Profit in Rupees\", size=20)\nplt.tick_params(labelsize=17)\n# plt.tick_params(labelsize=20)\n# ax.xaxis.set_tick_params(labelsize=20)\n# ax.yaxis.set_tick_params(labelsize=20)\nplt.show()","c5ff978d":"# Log normal histogram\ntarget= np.log(data[\"Profit\"])\nplt.figure(figsize=(12,5))\nplt.hist(target, color=\"blue\")\nplt.xlabel(\"Profit\", size=20)\nplt.ylabel(\"Frequency\", size=20)\nplt.title(\"Log Normal Histogram\", size=20)\nplt.tick_params(labelsize=15)\nplt.show()","523e89fe":"# Boxplot of Profit and Marketing spend\nplt.figure(figsize=(12,6))\nsns.boxplot(y=\"Profit\", x=\"State\", data=data)\nplt.xlabel(\"States\", size=20)\nplt.ylabel(\"Profit\", size=20)\nplt.title(\"Profit vs State\", size=20)\nplt.tick_params(labelsize=15)\nplt.show()","3937a3d5":"# Outlier detection\n# plt.figure(figsize=(12,6))\nsns.boxplot(data[\"Profit\"],orient= \"v\")\nplt.title(\"Profit Outlier detection\", size=15)\nplt.xlabel(\"\", size=15)\nplt.ylabel(\"Price in Rupees\")\nplt.show()\n\n# Remove outlier\n# data[data[\"Profit\"] < 25000]\n# data.drop(data[data[\"Profit\"] < 20000].index)","9bae76ba":"# State is a categorical varible which we need to convert to numeric\ndata[\"State\"].value_counts()\n\n# So we will get 3 categories as 0,1,2","33387f0b":"# Split the data into training and test set\nX = data.iloc[:, :-1].values\ny = data.iloc[:, 4].values","65e86b38":"# Encoding categorical data\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\n\nlabelencoder= LabelEncoder()\nX[:,3]= labelencoder.fit_transform(X[:, 3])\n\nonehotencoder= OneHotEncoder(categorical_features=[3])\nX= onehotencoder.fit_transform(X).toarray()","b8cd3288":"X.shape","f717de2d":"X[:,1:].shape","0e7321f1":"# Avoiding the dummy variable trap\nX=X[:,1:]\n# print(X)","1ec7d026":"# Get correlation of numeric variables\ncorrelation= numeric.corr()\ncorrelation","ec177774":"# Get correlation with Profit\ncorrelation[\"Profit\"].sort_values(ascending=False)*100","20eb43f6":"# Get heatmap \nplt.subplots(figsize=(12,10))\nplt.title(\"Correlation between numeric variables\")\nsns.heatmap(correlation, square=True, vmin=0, vmax=1, center=0, annot=True, linewidths=0.5)\nplt.show()","80f571f5":"# Pairplot of numeric variables\ncolumns= [\"R&D Spend\", \"Administration\", \"Marketing Spend\", \"Profit\"]\nsns.pairplot(data[columns],size=2, kind=\"scatter\", diag_kind=\"kde\")\nplt.show()","ba435bcc":"# Scatterplot\n# scatterplot() function does not work insted use regplot()\nsns.regplot(x=\"R&D Spend\", y=\"Profit\", data=data)\nplt.title(\"Correlation between Profit and R&D Spend\")\nplt.xlabel(\"R&D Spend\")\nplt.ylabel(\"Profit\")\n\nplt.show()","ff18eb86":"fig, axs = plt.subplots(ncols=3, figsize=(14,10))\nsns.regplot(x='R&D Spend', y='Profit', scatter= True, data=data, ax=axs[0])\nsns.regplot(x='Administration', y='Profit', scatter=True, data=data, ax=axs[1])\nsns.regplot(x='Marketing Spend',y='Profit', scatter=True, data=data, ax=axs[2])\n","41796b12":"# Split data into training and testing set\nfrom sklearn.cross_validation import train_test_split\nX_train, X_test, y_train, y_test= train_test_split(X,y,test_size=0.3, random_state=5)","855958aa":"# Fit linear regression\nfrom sklearn.linear_model import LinearRegression\nlm= LinearRegression()\nlm.fit(X_train,y_train)","47922b4b":"# Predict the test restul\npred= lm.predict(X_test)","d41b8fd3":"# Get the coefficient\nprint(lm.intercept_)\nprint(lm.coef_)","fe9ab17b":"list(zip(data, lm.coef_))","588847f6":"# Print R square\nprint(\"R square is {}:\".format(lm.score(X_test,y_test)))","9207df59":"from sklearn import metrics\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import cross_val_score\n","4675a0cc":"# Print Mean absolute error\nprint(\"MAE:\", metrics.mean_absolute_error(pred, y_test))","af2d4e0c":"# Print root mean square error\nprint(\"RMSE:\", np.sqrt(metrics.mean_squared_error(pred, y_test)))","3333babb":"# Introduction \nIn this notebook I am going to make a multiple linear regression model for beginners who are new to python\n\n# Overview \nUsing a small public data set I have done basic visulaization and Model fitting\nThe data set could be found at "}}