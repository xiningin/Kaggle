{"cell_type":{"ce9ca8c1":"code","8adc4255":"code","1905c9fc":"code","f4a1b59b":"code","6e9e7296":"code","eb2d79b9":"code","48f48aba":"code","59843724":"code","049637ef":"code","1eb5d5f6":"code","2443ff6b":"code","1a01cdaa":"code","3600a610":"code","017039fd":"code","421fc1d3":"code","ca642105":"code","de0f320b":"code","64958192":"code","ac1415f4":"code","a6df0f64":"code","64b3f2e2":"code","d20ad902":"code","d4c83e6b":"code","676965d0":"code","5e0fb0bd":"code","f5846803":"code","5b119945":"code","18d52bf1":"code","01b1e3e2":"code","ea73c3ea":"code","a27d93ed":"code","a9b2e131":"code","84bee704":"code","10d08b62":"code","0fee22d2":"code","66b7e97f":"code","cdd19f1e":"code","32f5a7cc":"code","6f48f367":"code","3fa9105e":"code","d8ef810a":"code","29c5572a":"markdown","ad6ed333":"markdown","7170e01d":"markdown","8f466279":"markdown","172aed28":"markdown","3276e00a":"markdown","d2af9929":"markdown","e9e318b5":"markdown","3864e2f3":"markdown","d293c580":"markdown","0a573d2a":"markdown","69ea8a63":"markdown","729f549a":"markdown","380b1c56":"markdown","8f8fd9cc":"markdown","eed3c25d":"markdown","a638f08e":"markdown","8b5aea2c":"markdown","ce8f9d29":"markdown","76f441fa":"markdown"},"source":{"ce9ca8c1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8adc4255":"import seaborn as sns\nfrom matplotlib import pyplot as plt\nimport plotly.express as px","1905c9fc":"df=pd.read_csv('..\/input\/120-years-of-olympic-history-athletes-and-results\/athlete_events.csv')\nnoc_df=pd.read_csv('..\/input\/120-years-of-olympic-history-athletes-and-results\/noc_regions.csv')","f4a1b59b":"df.head()","6e9e7296":"print(df.info())\nprint('\\n\\n')\ndf.describe()\n","eb2d79b9":"noc_df.head()","48f48aba":"print(noc_df.info())\nprint('\\n\\n')\nnoc_df.describe()","59843724":"data=pd.merge(df,noc_df,on='NOC',how='left')\ndata.head()","049637ef":"data.corr()","1eb5d5f6":"data.isnull().sum()","2443ff6b":"print(\"Null values \")\nfor i in data.columns:\n    if data[i].isnull().values.sum()>0:\n        print(\"{}-{}\".format(i,data[i].isnull().values.sum()))","1a01cdaa":"# from sklearn.impute import SimpleImputer\n# imputer=SimpleImputer(missing_values='NaN',strategy='mean') #use mean or median \n# Ages=data[['Age']].values\n# Ages=imputer.fit_transform(Ages[:,0:1])\n# data.Age=Ages\n# data.Age.isnull().sum()\n# # ------------------------------------------------\n# Heights=data[['Height']].values\n# Heights=imputer.fit_transform(Heights[:,0:1])\n# data.Height=Heights\n# data.Height.isnull().sum()\n# # ------------------------------------------------\n# Weights=data[['Weight']].values\n# Weights=imputer.fit_transform(Weights[:,0:1])\n# data.Weight=Weights\n# data.Weight.isnull().sum()","3600a610":"print(data['Medal'].unique())\n\ndata['Medal']=data['Medal'].fillna('No medal')\nprint(data['Medal'].unique())","017039fd":"# data[data['notes'].notnull() & data.region.isnull()]\ndata[(data.Medal=='Gold') & (data.Age>50)].groupby('region').count().reset_index()[['region','Age']]","421fc1d3":"country=data['region'].unique()\nfor i in country:\n    df=data[(data['region']==i)]\n    age_mean=round(df['Age'].mean())\n    print(\"{} {}\".format(i,age_mean))\n","ca642105":"data.Medal.unique()","de0f320b":"g_medalists=data[data.Medal=='Gold']\nb_medalists=data[data.Medal=='Bronze']\ns_medalists=data[data.Medal=='Silver']","64958192":"plt.figure(figsize=(20,15),)\nsns.color_palette(\"ch:s=.25,rot=-.25\", as_cmap=True)\nsns.lineplot(data=g_medalists,x=g_medalists['region'],y=g_medalists['Age'],hue=g_medalists['Sex'],style='Sex')\nplt.xticks(rotation=90)\nplt.title('Age of Gold Medalists')\nplt.show()","ac1415f4":"plt.figure(figsize=(20, 10))\nplt.tight_layout()\nsns.countplot(g_medalists['Age'])\nplt.title('Count number of gold medalist per age ')\nplt.xticks(rotation=90)\nplt.show()","a6df0f64":"print('Gained Gold Medal per Gender')\nprint(g_medalists['Sex'].value_counts())\n\nprint('\\n Gained bronze Medal per Gender')\nprint(b_medalists['Sex'].value_counts())\n\nprint('\\n Gained Silver Medal per Gender')\nprint(s_medalists['Sex'].value_counts())","64b3f2e2":"DISCIPLINES=g_medalists['Sport'][g_medalists['Age']>50]\nplt.figure(figsize=(20, 10))\nplt.tight_layout()\nsns.countplot(DISCIPLINES)\nplt.title('Gold Medals for Athletes Over 50')\nplt.xticks(rotation=45)\nplt.show()","d20ad902":"gold_won=g_medalists['region'].value_counts().reset_index(name='Medal')\nplt.figure(figsize=(20,10))\nplt.tight_layout()\nsns.barplot(x='index',y='Medal',data=gold_won)\nplt.title('Gold medals won by each nation')\nplt.xticks(rotation=90)\nplt.show()\n# gold_won['index']","d4c83e6b":"plt.figure(figsize=(15,8))\n# g_medalists['Sex'].value_counts()\n\nplt.subplot(1,3,1)\nsns.countplot(g_medalists['Sex'])\nplt.title('Gold Medalists')\nplt.ylabel(' ')\n# plt.show()\n\nplt.subplot(1,3,2)\nsns.countplot(b_medalists['Sex'])\nplt.title('Vronz Medalists')\nplt.ylabel(' ')\n# plt.show()\n\nplt.subplot(1,3,3)\nsns.countplot(s_medalists['Sex'])\nplt.title('Silver Medalists')\nplt.ylabel(' ')\nplt.show()","676965d0":"total_medals=data.region.value_counts().reset_index(name='Medal').head(10)\ntotal_medals","5e0fb0bd":"sns.catplot(x='index',y='Medal',data=total_medals,kind='bar')\nplt.title('Top 10 medal won countries')\nplt.xlabel('Countries')\nplt.xticks(rotation=90)\nplt.show()","f5846803":"data.Sex.value_counts()","5b119945":"chinies_medal=data.loc[data['region']=='China']\nchinies_medal=chinies_medal.Sport.value_counts().reset_index(name='Medal')","18d52bf1":"plt.figure(figsize=(20,5),)\nsns.barplot(x=chinies_medal['index'],y=chinies_medal['Medal'],data=chinies_medal,n_boot=3000,saturation=1,)\nplt.xticks(rotation=90)\nplt.xlabel('Events')\nplt.ylabel('Number of Medals per event')\nplt.title('Chinies medal won category')\nplt.show()","01b1e3e2":"o_year=data.Year.unique()\no_year=list(o_year)\no_year.sort()\no_year","ea73c3ea":"print('Total olympic organized {} times'.format(len(o_year)))\nprint(\"Sence 1896 to 2016 between {} years, olympic organized only {} times\".format((2016-1896),len(o_year)))","a27d93ed":"ol_bangla=data.loc[data['region']=='Bangladesh']\nol_bangla['Medal'].unique()","a9b2e131":"ol_bangla['Sex'].value_counts()","84bee704":"sns.countplot(ol_bangla.Event)\nplt.xticks(rotation=90)\nplt.xlabel('Events')\nplt.ylabel('How many times')\nplt.title('Total event perticipation in bangladesh')\nplt.show()","10d08b62":"bd_year=ol_bangla.Year.value_counts()\nplt.pie(x=bd_year.values,labels=bd_year.index,autopct='%.0f%%')\nplt.title('Bangladeshi participation each year')\nplt.show()","0fee22d2":"import warnings\nwarnings.filterwarnings('ignore')","66b7e97f":"# bd_m=ol_bangla.loc[ol_bangla['Sex']=='M']\n# bd_f=ol_bangla.loc[ol_bangla['Sex']=='F']\n\nprint(ol_bangla['Sex'].value_counts())\nsns.countplot(ol_bangla['Sex'])","cdd19f1e":"ol_bangla['Season'].unique()","32f5a7cc":"print('Bangladesh attended olympic in the below countries')\nol_bangla['City'].value_counts()","6f48f367":"\nbdBoys_age=ol_bangla.loc[(ol_bangla['Age'].notnull()) & (ol_bangla['Sex']=='M')]\nprint('BD Boys age info \\n',bdBoys_age['Age'].describe())\nprint('\\n\\n')\n\nbdGirls_age=ol_bangla.loc[(ol_bangla['Age'].notnull()) & (ol_bangla['Sex']=='F')]\nprint('BD girls age info \\n',bdGirls_age['Age'].describe())\nprint('\\n\\n')","3fa9105e":"data.groupby(\"Sport\")[[\"Age\"]].agg([np.min,np.max]).reset_index()\n","d8ef810a":"fig = px.scatter(data, x='Sport', y='Year', color='Sport')\n\nfig.update_layout(title='Distribution of sport and year acording to sport')\nfig.show()","29c5572a":"Total 42 male and 13 female bangladeshi atlitics atted olympic","ad6ed333":"# Import dependences","7170e01d":"Gold Medals for Athletes Over 50","8f466279":"Won Medal per Gender","172aed28":"# Information this two dataset","3276e00a":"## Join 2 dataset on NOC","d2af9929":"Top 10 medal won countries","e9e318b5":"# Import data","3864e2f3":"Between 1896 to 2016 Bangladesh didn`t got any medals","d293c580":"Bamgladesh attend only summer season","0a573d2a":"**Chinies medal won category**","69ea8a63":"## Categories of medalists","729f549a":"Age Distribution of Gold Medals","380b1c56":"Sex analysis","8f8fd9cc":"Count number of gold medalist per age","eed3c25d":"**Total event perticipation in bangladesh**","a638f08e":"Total 196594 male players and 74522 female players attend olympic","8b5aea2c":"Gold medals won by each nation","ce8f9d29":"# Fill null values","76f441fa":"**Mean value per Region**"}}