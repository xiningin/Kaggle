{"cell_type":{"c8b356ca":"code","bc7c491d":"code","1727bba6":"code","834a50ac":"code","d04a2157":"code","5753d2fd":"code","67eed6c7":"code","a14a09e9":"code","5b5c7df4":"code","1f68933a":"code","1aa13f4b":"code","17ea24de":"code","32c587a3":"code","2b72d775":"code","b6eb73ff":"code","4ca705b8":"markdown","6e64757c":"markdown","d0747be8":"markdown","95390385":"markdown","e61674d3":"markdown","8922d638":"markdown","572b4823":"markdown","ddcf4000":"markdown"},"source":{"c8b356ca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns # visualization tool\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bc7c491d":"data = pd.read_csv('..\/input\/star-type-classification\/Stars.csv')","1727bba6":"data.info()","834a50ac":"data.shape","d04a2157":"data.head(10)","5753d2fd":"data.describe()","67eed6c7":"data.groupby('Type').count().plot.bar()","a14a09e9":"data.corr()","5b5c7df4":"f,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax)","1f68933a":"data.columns","1aa13f4b":"# Line Plots\n\nfig, axs = plt.subplots(2,2, figsize=(15,15))\n\ndata.Temperature.plot(kind='line', color='g', label='Temperature', linewidth=1, alpha=0.5, linestyle='-', ax=axs[0,0])\ndata.L.plot(kind='line', color='r', label='L', linewidth=1, alpha=0.5, linestyle='-', ax=axs[0,1])\ndata.R.plot(kind='line', color='b', label='R', linewidth=1, alpha=0.5, linestyle='-', ax=axs[1,0])\ndata.A_M.plot(kind='line', color='y', label='A_M', linewidth=1, alpha=0.5, linestyle='-', ax=axs[1,1])\n\naxs[0,0].legend(loc='upper right')\naxs[0,0].set_xlabel('Index')\naxs[0,0].set_ylabel('Temperature')\naxs[0,1].legend(loc='upper right')\naxs[0,1].set_xlabel('Index')\naxs[0,1].set_ylabel('L')\naxs[1,0].legend(loc='upper right')\naxs[1,0].set_xlabel('Index')\naxs[1,0].set_ylabel('R')\naxs[1,1].legend(loc='upper right')\naxs[1,1].set_xlabel('Index')\naxs[1,1].set_ylabel('A_M')\n\n\n","17ea24de":"# Scatter plot x=type, y=A_M\ndata.plot(kind='scatter', x='Type', y='A_M', alpha=0.5, color='red')\nplt.xlabel('Type')\nplt.ylabel('A_M')\nplt.title('Type vs A_M')","32c587a3":"# Histogram\n# bins = number of bar in figure\ndata.A_M.plot(kind='hist', bins=50, figsize=(12,12), grid=True)","2b72d775":"# Filtering operitons with pandas\ndata[((data['Temperature'] > 5000) & (data['Temperature'] < 20000)) & (data['L'] > 60000)]","b6eb73ff":"# For pandas we can achieve index and value\nfor index, value in data[['A_M']][10:30].iterrows():\n    print(index, ' : ', value)","4ca705b8":"We can analyze the dataset's numeric properties with describe function. ","6e64757c":"Now we can visualize some properties of dataset.","d0747be8":"Temperature, Color and Spectral_Class are type of object, L, R, A_M are type of float and Temperature, Type are type of int.\nNow we can print first ten elements of this dataset to see the values of the properties of first ten stars.","95390385":"According to the bar graph above we can say that dataset is balanced.\nNow we can analyze the correlation of numeric features with corr function.","e61674d3":"Now we can roughly analyze the dataset with some pandas functions.","8922d638":"Firstly we must read the dataset from csv.","572b4823":"According to the correlation graph above we can say that some features are dependent each other to a certain extent. Temperature and R, L and A_M, L and Type, R and A_M, R and Type seem somewhat dependent on each other. The most important relationship emerges between Type and A_M. Minus sign means that this relationship is inversely proportional. This relationship is most important because correlation value of this two feature is -0.955276. The value is too close to -1 and that means these two values are very dependent to each other.","ddcf4000":"As we can see from the scatter graph above about relation with A_M and Type, when type number of star increases (from 0 to 5 the size of star increases) A_M decreases."}}