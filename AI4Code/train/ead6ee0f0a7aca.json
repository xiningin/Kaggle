{"cell_type":{"d586c042":"code","e9801687":"code","c23c8513":"code","3d84bb87":"code","3a7ba49e":"code","c227144e":"code","26358b0d":"code","79cebf84":"code","ba6b381c":"code","ed623baa":"code","207d77de":"code","b239f7da":"code","526aab93":"code","836f971e":"code","c4a1b5c3":"code","b7cefa00":"code","b96024f8":"markdown","b8684ea2":"markdown","db5f77b4":"markdown","1359b6c8":"markdown","eefe5597":"markdown","a1ecdad0":"markdown","3d0394c1":"markdown"},"source":{"d586c042":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e9801687":"train = pd.read_csv(\"..\/input\/learn-together\/train.csv\")\ntest = pd.read_csv(\"..\/input\/learn-together\/test.csv\")","c23c8513":"train.head()","3d84bb87":"test.head()","3a7ba49e":"train.describe()","c227144e":"train = train.drop([\"Id\"], axis = 1)\n\ntest_ids = test[\"Id\"]\ntest = test.drop([\"Id\"], axis = 1)","26358b0d":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier","79cebf84":"X_train, X_val, y_train, y_val = train_test_split(train.drop(['Cover_Type'], axis=1), train['Cover_Type'], test_size=0.2, random_state = 42)","ba6b381c":"X_train.shape, X_val.shape, y_train.shape, y_val.shape","ed623baa":"model = RandomForestClassifier(n_estimators=100)\nmodel.fit(X_train, y_train)","207d77de":"from sklearn.metrics import classification_report, accuracy_score","b239f7da":"model.score(X_train, y_train)","526aab93":"predictions = model.predict(X_val)\naccuracy_score(y_val, predictions)","836f971e":"test.head()","c4a1b5c3":"test_pred = model.predict(test)","b7cefa00":"# Save test predictions to file\noutput = pd.DataFrame({'ID': test_ids,\n                       'Cover_Type': test_pred})\noutput.to_csv('submission.csv', index=False)","b96024f8":"# Import Data","b8684ea2":"# Future work\n\n* Explorative Data Analysis to extract the most relevant features\n* Feature engineering\n* Cross-validation so we can use the entire training data\n* Grid-Search to find the optimal parameters for our classifier so we can fight overfitting\n* Try a different classifer. XgBoost for example (I suspect the winning solution will use an xgboost. highly recommended\n* Deep-learning ? hummm probably not. Overkill","db5f77b4":"# Model Training","1359b6c8":"Our Model has a 100% accuracy on the training set and ~ 87% on the test set. A clear example of overfitting. But we won't get into that cause this notebook is to get started.","eefe5597":"Let's use 80% of the Data for training, and 20% for validation. We'll then train a simple Random Forest Classifier with 100 trees","a1ecdad0":"Let's delete the Id column in the training set but store it for the test set before deleting","3d0394c1":"# Predictions"}}