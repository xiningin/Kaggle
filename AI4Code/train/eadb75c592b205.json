{"cell_type":{"88f30841":"code","86bf7d05":"code","3e717281":"code","653e01ec":"code","22e20100":"code","6b809ac2":"code","7aebca96":"code","7479ecf7":"code","356e3c0f":"code","a9b0ab1c":"code","6ee796d6":"code","9f9657dc":"code","ec55870a":"code","206f1722":"code","60090c50":"code","8e2d0947":"code","b4ec368c":"code","1cf0d638":"code","7068a928":"code","965a7104":"code","2ddf1f1a":"code","fb179d89":"code","3bc231cb":"code","1f713e2a":"code","2da04b73":"markdown","dc6507c2":"markdown","81c4f336":"markdown","975879a1":"markdown","db1f0661":"markdown","742af15c":"markdown","d4d38268":"markdown","e039730a":"markdown","b3bc9216":"markdown"},"source":{"88f30841":"import os\nimport pandas as pd\nimport cv2\nimport matplotlib.pyplot as plt","86bf7d05":"path = '\/kaggle\/input\/happy-whale-and-dolphin\/'\nos.listdir(path)","3e717281":"train_data = pd.read_csv(path+'train.csv')\nsamp_sub = pd.read_csv(path+'sample_submission.csv')","653e01ec":"print('Number train samples: ', len(train_data))\nprint('Number train images: ', len(os.listdir(path+'train_images')))\nprint('Number test images: ', len(os.listdir(path+'test_images')))","22e20100":"train_data.head()","6b809ac2":"train_data","7aebca96":"print(\"Length of train data\", len(train_data))\nprint(\"Number of Species: \",len(train_data['species'].unique()))\nprint(\"number of Individuals: \", len(train_data['individual_id'].unique()))","7479ecf7":"train_data['species'].unique()","356e3c0f":"train_data['species'].value_counts()","a9b0ab1c":"train_data['individual_id'].value_counts()","6ee796d6":"file = train_data.loc[0, 'image']\nspecies = train_data.loc[0, 'species']\nindividual_id = train_data.loc[0, 'individual_id']\nprint(file)","9f9657dc":"img = cv2.imread(path+'train_images\/'+file)\nprint('Shape: ', img.shape)","ec55870a":"fig, ax = plt.subplots(1, 1, figsize = (10, 10))\nax.imshow((cv2.cvtColor(img, cv2.COLOR_BGR2RGB)))\nax.set_xticklabels([])\nax.set_yticklabels([])\nax.set_title(individual_id)\nfig.suptitle(species)\nplt.show()","206f1722":"def plot_examples(species = 'bottlenose_dolphin'):\n    \"\"\" Plot 5 images of a given species \"\"\"\n    \n    fig, axs = plt.subplots(1, 5, figsize=(25, 20))\n    fig.subplots_adjust(hspace = .1, wspace=.1)\n    axs = axs.ravel()\n    temp = train_data[train_data['species']==species].copy()\n    temp.index = range(len(temp.index))\n    for i in range(5):\n        file = temp.loc[i, 'image']\n        species = temp.loc[i, 'species']\n        indicidual = temp.loc[i, 'individual_id']\n        img = cv2.imread(path+'train_images\/'+file)\n        axs[i].imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n        axs[i].set_title('individual')\n        axs[i].set_xticklabels([])\n        axs[i].set_yticklabels([])\n    plt.show()","60090c50":"plot_examples('bottlenose_dolphin')","8e2d0947":"plot_examples(species = 'beluga')","b4ec368c":"plot_examples(species = 'humpback_whale')","1cf0d638":"plot_examples(species = 'melon_headed_whale')","7068a928":"def image_preprocessing(image, image_size):\n    \"\"\" Image Preprocessing \"\"\"\n\n    # Load Image\n    readFlag=cv2.COLOR_BGR2GRAY\n    #image = np.asarray(bytearray(resp.read()), dtype=\"uint8\")\n    #image = cv2.imdecode(image, readFlag)\n    image_gray = cv2.cvtColor(image, readFlag)\n    \n    # Crop Image\n    mid_row = int(image_gray.shape[0]\/2)\n    mid_col = int(image_gray.shape[1]\/2)\n    if image_gray.shape[0]>image_gray.shape[1]:\n        image_cropped = image_gray[mid_row-mid_col:mid_row+mid_col,\n                                   0:image_gray.shape[1]]\n    else:\n        image_cropped = image_gray[0:image_gray.shape[0],\n                                   mid_col-mid_row:mid_col+mid_row]\n    \n    # Rescale Image\n    image_rescale = cv2.resize(image_cropped,\n                               dsize=(image_size, image_size),\n                               interpolation=cv2.INTER_AREA)\n    return image_rescale\n\ndef plot_befor_after(image):\n    \"\"\" Compare original and prepared image \"\"\"\n    \n    fig, axs = plt.subplots(1, 2, figsize=(15, 10))\n    fig.subplots_adjust(hspace = .1, wspace=.1)\n    axs = axs.ravel()\n    # Plot Original Image\n    axs[0].imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))\n    axs[0].set_title('original shape: '+str(image.shape))\n    # Image Preprocessing\n    image_rescale = image_preprocessing(image, image_size)\n    # Plot Prepared Image\n    axs[1].imshow(image_rescale, cmap='gray')\n    axs[1].set_title('rescaled shape: '+str(image_rescale.shape))\n    for i in range(2):\n        axs[i].set_xticklabels([])\n        axs[i].set_yticklabels([])\n    plt.show()","965a7104":"image_size = 128","2ddf1f1a":"row = 100\nfile = train_data.loc[row, 'image']\nspecies = train_data.loc[row, 'species']\nimage = cv2.imread(path+'train_images\/'+file)\nprint('Shape:', image.shape)","fb179d89":"plot_befor_after(image)","3bc231cb":"samp_sub.head()","1f713e2a":"samp_sub.to_csv('submission.csv', index = False)","2da04b73":"# \ud83d\udee0 Dependencies","dc6507c2":"## Image Preprocessing","81c4f336":"## Individuals of different species","975879a1":"# Data ","db1f0661":"### Load Single Image","742af15c":"# Meta Data\n\n* train_images\/ - a folder containing the training images\n\n* train.csv - provides the species and the individual_id for each of the training images\n\n* test_images\/ - a folder containing the test images; for each image, your task is to predict the individual_id; no   species information is given for the test data; there are individuals in the test data that are not observed in the training data, which should be predicted as new_individual.\n\n* sample_submission.csv - a sample submission file in the correct format","d4d38268":"# Raw Submission","e039730a":"# [Happywhale - Whale and Dolphin Identification](https:\/\/www.kaggle.com\/c\/happy-whale-and-dolphin)\n> Identify whales and dolphins by unique characteristics\n\n<img src=\"https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/22962\/logos\/header.png?t=2021-03-17-22-44-09\">","b3bc9216":"# EDA"}}