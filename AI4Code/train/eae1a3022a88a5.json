{"cell_type":{"70884d1a":"code","1b29252a":"code","472e50df":"code","262b157c":"code","7ca217a1":"code","b3df43e0":"code","242f09da":"code","c7b27d10":"code","feb44956":"code","728979fb":"code","e88c0861":"code","7d44e28d":"code","275f9e5f":"markdown","532df161":"markdown"},"source":{"70884d1a":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import odeint","1b29252a":"total_time = 500   #s\nt_steps = 100000    #s\nH = 3\nC = 1.35\nbeta = 4\nlame = 7  # for normal rythm \n#lame = 17 # Ventricular flutter\n\n\n#@numba.jit(nopython=True, parallel=True)\ndef model(y,t):\n    x1 = (y[0] - y[1] - C*y[0]*y[1] - y[0]*y[1]**2)*lame\n    x2 = (H*y[0] - 3*y[1] + C*y[0]*y[1] + y[0]*y[1]**2 + beta*(y[3] - y[1]))*lame\n    x3 = (y[2] - y[3] - C*y[2]*y[3] - y[2]*y[3]**2)*lame\n    x4 = (H*y[2] - 3*y[3] + C*y[2]*y[3] + y[2]*y[3]**2 + 2*beta*(y[1] - y[3]))*lame\n    \n    return x1, x2, x3, x4\n    \n\ny0 = [0,0,0.1,0]\nt = np.linspace(0,total_time, t_steps)\n    \nx = odeint(model, y0, t)\n\n#plot\n    \nfig, ax = plt.subplots(2,2,figsize=(20,10))\nax[0,0].plot(t, x[:,0])\nax[0,0].set_title('x1')\nax[0,0].set(xlabel = 'Time', ylabel = 'x1', xlim = [0,60])\n\nax[0,1].plot(t, x[:,1])\nax[0,1].set_title('x2')\nax[0,1].set(xlabel = 'Time', ylabel = 'x2', xlim = [0,60])\n\nax[1,0].plot(t, x[:,2])\nax[1,0].set_title('x3')\nax[1,0].set(xlabel = 'Time', ylabel = 'x3', xlim = [0,60])\n\nax[1,1].plot(t,x[:,3])\nax[1,1].set_title('x4')\nax[1,1].set(xlabel = 'Time', ylabel = 'x4', xlim = [0, 60])    \n   ","472e50df":"plt.plot(x[:,2], x[:,3])\nplt.xlabel('x3')\nplt.ylabel('x4')\nplt.title('Phase portrate')\n","262b157c":"alpha_1 = -0.024\nalpha_2 = 0.0216\nalpha_3 = -0.0012\nalpha_4 = 0.12\n\nECG = alpha_1*x[:,0] + alpha_2*x[:,1]+ alpha_3*x[:,2] + alpha_4*x[:,3]\nplt.plot(t, ECG)\nplt.xlim(194,200)\nplt.xlabel('Time(s)')\nplt.ylabel('ECG')\nplt.title('Normal rhythm (H\u2009=\u20093)')","7ca217a1":"#header = 'Normal_rhythm' \n#np.savetxt('ECG.dat', ECG, header = header)","b3df43e0":"#dat = np.loadtxt('ECG.dat')\n#plt.plot(t, dat)\n#plt.xlim(194,200)\n#plt.xlabel('Time(s)')\n#plt.ylabel('ECG')\n#plt.title('Normal rhythm (H\u2009=\u20093)')","242f09da":"!pip install matrixprofile\n!pip install stumpy","c7b27d10":"ECG = ECG[194:1500]","feb44956":"ECG.shape\n","728979fb":"#import stumpy as sp\nimport matrixprofile as mp\n\nfrom matplotlib import pyplot as plt\n%matplotlib inline","e88c0861":"\nwindow_size = 300\nprofile = mp.compute(ECG, windows=window_size)\nprofile = mp.discover.motifs(profile, k=1)","7d44e28d":"\nfigures = mp.visualize(profile)","275f9e5f":"# Motifs with Matrix Profile","532df161":"### Work in Progress"}}