{"cell_type":{"c9fbe996":"code","1542ad70":"code","484c4ec5":"code","99e6fa5c":"code","4c2fffd7":"code","14e8a53c":"code","a8b6a781":"markdown","9fbbf0f5":"markdown"},"source":{"c9fbe996":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import preprocessing, svm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\n# Setting up our datasets\nbottle = pd.read_csv('..\/input\/bottle.csv')\nbottle = bottle[['Salnty', 'T_degC']]\nbottle.columns = ['Sal', 'Temp']\n\n# Limiting amount of entries to speed up regression time\nbottle = bottle[:][:500]\n\nprint(bottle.head())","1542ad70":"# This produces a scatter \nsns.lmplot(x=\"Sal\", y=\"Temp\", data=bottle,\n           order=2, ci=None);","484c4ec5":"# Picturing a residual plot to check for heteroscedasticity \nsns.residplot(bottle['Sal'], bottle['Temp'], order=2, lowess=True)","99e6fa5c":"# Eliminating NaN or missing input numbers\nbottle.fillna(method='ffill', inplace=True)","4c2fffd7":"# Set up the training data\nX = np.array(bottle['Sal']).reshape(-1, 1)\ny = np.array(bottle['Temp']).reshape(-1, 1)\n\nbottle.dropna(inplace=True)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n\nclf = LinearRegression()\nclf.fit(X_train, y_train)\naccuracy = clf.score(X_test, y_test)\nprint(accuracy)","14e8a53c":"# Make predictions using the new model\ny_pred = clf.predict(X_test)\nplt.scatter(X_test, y_test, color='b')\nplt.plot(X_test, y_pred, color='k')\nplt.show()","a8b6a781":"This is the sklearn implemenation","9fbbf0f5":"This is a seaborn implementation using built in methods"}}