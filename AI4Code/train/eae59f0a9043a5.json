{"cell_type":{"8e36442e":"code","991dead0":"code","9bf5d4d3":"code","0d9a1ed8":"code","651a5d58":"code","8f74fbbd":"code","c78c6872":"code","686ebbad":"code","52d169b1":"code","63a4dfb2":"code","892c708b":"code","25e6f5a5":"code","00ee82a7":"code","9d916f41":"code","296642d9":"code","3928af76":"code","ed18a3bf":"code","ca4a35c4":"code","24f6f1a3":"code","d5022c5a":"code","389a5550":"code","f15100e6":"code","6de75f9a":"code","83c6f048":"code","e0751874":"code","549d01cf":"code","25d75dcf":"code","27df6d37":"code","9a242ac8":"code","a1b4511d":"markdown","70ed268b":"markdown","e7b1aa0c":"markdown","c3c375be":"markdown","37de3ee8":"markdown","b1b98124":"markdown"},"source":{"8e36442e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Draw inline\n%matplotlib inline","991dead0":"#load users\nusers = pd.read_csv('..\/input\/train_users_2.csv')","9bf5d4d3":"users.isnull().sum()","0d9a1ed8":"#examining age\nusers['age'] = users['age'].dropna()\n\nage_plot = sns.countplot(users['age'])\n\n#limiting tick frequency for ease of readability \nfor ind, label in enumerate(age_plot.get_xticklabels()):\n    if ind % 15 == 0:\n        label.set_visible(True)\n    else:\n        label.set_visible(False)\n","651a5d58":"#looks like there are ages at 1 and above 100?\n\nusers['age'].describe()","8f74fbbd":"#transform outliers into NaN\n\nusers.loc[users['age'] < 15, 'age'] = np.NaN\nusers.loc[users['age'] > 100, 'age'] = np.NaN","c78c6872":"sns.countplot(users['gender'], palette = \"deep\")","686ebbad":"#change unknowns to NaN\nusers.loc[users['gender'] == '-unknown-', 'gender'] = np.NaN\nsns.countplot(users['gender'],  palette = \"deep\")","52d169b1":"women = sum(users['gender'] == 'FEMALE')\nmen = sum(users['gender'] == 'MALE')\nprint('There are', women, 'women and', men, 'men in this dataset.')","63a4dfb2":"#any trend in country destinations in users who put NaN as their gender?\n\n#total number who have NaN genders, and their destinations (proportional)\nna_genders = users.loc[users['gender'].isna(), 'country_destination'].value_counts().sum()\nna_gender_countries = users.loc[users['gender'].isna(), 'country_destination'].value_counts() \/ na_genders * 100\n\n#non NaN country destinations (proportional)\ncomplete_genders = users.loc[users['gender'].notnull(), 'country_destination'].value_counts().sum()\ncomplete_gender_countries = users.loc[users['gender'].notnull(), 'country_destination'].value_counts() \/ complete_genders * 100\n\ncompared_na_genders = pd.concat([na_gender_countries, complete_gender_countries], axis = 1)\ncompared_na_genders.columns = ['na gender countries', 'complete gender countries']\ncompared_na_genders\n\n#so definitely greater proportion of folks who have NaN as a gender don't book a trip anywhere","892c708b":"#Is there an initial trend in where (filled out) genders are going?\n\n#find number of female and male users\n\nfemale = users.loc[users['gender'] == 'FEMALE', 'country_destination'].value_counts().sum()\nmale = users.loc[users['gender'] == 'MALE', 'country_destination'].value_counts().sum()\n\n#scale according to total numbers of female and male users\n\nfemale_destinations = users.loc[users['gender'] == 'FEMALE', 'country_destination'].value_counts() \/ female * 100\nmale_destinations = users.loc[users['gender'] == 'MALE', 'country_destination'].value_counts() \/ male * 100\n\ngender_dest = pd.concat([female_destinations, male_destinations], axis=1)\ngender_dest.columns = ['female destinations', 'male destinations']\ngender_dest","25e6f5a5":"ax = gender_dest.plot.bar(colormap = 'jet', title = 'Percentage of Gender Per Destination')\nax.set_xlabel(\"Country Destination\")\nax.set_ylabel(\"Percentage\")\n\n# Looks just about the same for both groups - nothing stands out here","00ee82a7":"#checking what format the dates are in, as they're not in timestamp form (from users.dtypes)\n\nprint(\"Date Account Created\",\"\\n\", users['date_account_created'].sample(3))\nprint(\"\\n\")\nprint(\"Date of First Booking\", \"\\n\", users['date_first_booking'].sample(3))","9d916f41":"#convert dates to proper datetime notation\n\nusers['date_account_created'] = pd.to_datetime(users['date_account_created'], format = '%Y-%m-%d', errors='coerce')\nusers['date_first_booking'] = pd.to_datetime(users['date_first_booking'], format = '%Y-%m-%d', errors='coerce')","296642d9":"users['date_account_created'].describe()","3928af76":"users['date_first_booking'].describe()","ed18a3bf":"#finding the average lengh between account created and first booking\n\nimport datetime as dt","ca4a35c4":"users['Difference'] = users['date_first_booking'] - users['date_account_created']\nprint(\"Average length between account creation & first booking:\", users['Difference'].mean())\n","24f6f1a3":"users['Difference'].describe()\n\n#How are there negative days between account creation & first booking?","d5022c5a":"users[users['Difference'] < pd.Timedelta(0)].sample(5)\n\n#strange - looks like either AirBnb allows you book before creating an account, or this data has been entered incorrectly\n#for now, going to disregard - but note the date columns might not be entirely trustworthy\n#upon futhur research, can replace date values as needed","389a5550":"# visualize dates that accounts are created, and the first booking happens\n\ngrouped_create_date = users['date_account_created'].dt.year\ngrouped_first_date = users['date_first_booking'].dt.year\n\nfig, ax = plt.subplots(1,2, figsize=(20, 7))\nsns.countplot((grouped_create_date), ax=ax[0], hue = users['country_destination'])\nsns.countplot((grouped_first_date), ax=ax[1], hue = users['country_destination'])\n\nax[0].set_xlabel('Date of Account Creation')\nax[0].set_ylabel('Number of Created Accounts')\nax[0].set_title('Accounts Created')\n\nax[1].set_xlabel('Date of First Booking')\nax[1].set_ylabel('Number of Bookings')\nax[1].set_title('Bookings')\n\nfig.show()","f15100e6":"#now we have to correct the format of 'timestamp_first_active'\n\nprint(type(users['timestamp_first_active'][0]))\nprint(users['timestamp_first_active'].sample(2))","6de75f9a":"users['timestamp_first_active'] = pd.to_datetime((users['timestamp_first_active']\/\/1000000), format='%Y%m%d')","83c6f048":"#finding average length between first active day and account creation\n\nusers['OG_Difference'] = users['date_first_booking'] - users['timestamp_first_active']\nprint(\"Average length between account first active & first booking:\", users['OG_Difference'].mean())\n\n#looks to be about the same as account creation & first booking - are account creation & first active very similar same?\n\nusers['First Lag'] = users['date_account_created'] - users['timestamp_first_active']\nprint(\"Average length between account first active & date account created:\", users['First Lag'].mean())\n\n#Looks like most people created their account on the same day they were first active","e0751874":"users['First Lag'].describe()\n\n#although one user waited 1456 days after they were first active to create an account!","549d01cf":"#explore categorical variables - do any have initial trends?\n\nsns.countplot(users['signup_method'], hue = users['country_destination'])\n\n#setting legend outside of display box\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","25d75dcf":"sns.countplot(users['signup_app'], hue = users['country_destination'])\n\n#setting legend outside of display box\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","27df6d37":"first_device_type = users['first_device_type'].value_counts()\npd.DataFrame(first_device_type).transpose()","9a242ac8":"language = users['language'].value_counts()\npd.DataFrame(language).transpose()","a1b4511d":"Now, let's handle the dates - are they all in the correct format?","70ed268b":"First, clean data. How many elements are NaN? Do you need to drop any columns with missing values? Are there are any other values that are missing?","e7b1aa0c":"**AirBnB - Cleaning and First Look @ Data**\n\nSumary of Steps Taken in Kernel\n\nAge: \n1. Drop null values\n2. Change outliers\n3. Visualize age across entire dataset\n\nGender:\n1. Convert to accepted values\n2. Analyze and visualize destination\/gender trends\n\nDates:\n1. Transform all to datetime notation\n2. Examine average lengths between important dates\n3. Examine discrepancies in recorded dates\n4. Visualize account creation & booking dates\n\nCategorical Variables:\n1. Visualize trends between signup_method, signup_app and country destination\n2. Summarize first_device_type and language data\n","c3c375be":"Next, we can evaluate gender in the dataset.","37de3ee8":"**date_first_booking** is NaN for 124543 users; that makes sense as those are the users who did not book a trip anywhere","b1b98124":"**age** is NaN for 87990 users; that's not great as that seems like it would be an important variable"}}