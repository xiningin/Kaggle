{"cell_type":{"d55016e7":"code","73ba2b31":"code","3899e9ce":"code","71f41144":"code","3b24f051":"code","104227f8":"code","1095ec57":"code","f4e83cfa":"code","db7e9b79":"code","afda2d54":"code","d0257c39":"code","6a4924cd":"code","74328b3a":"code","5bfe6f58":"code","b791a5bc":"code","f1ce7ff0":"code","5b302ded":"code","c4333352":"code","f5729749":"code","e4edb1c7":"code","03be76d2":"code","b2107995":"code","1850d24e":"code","4478ae78":"markdown","99e1417d":"markdown","7b662806":"markdown","b95e1c75":"markdown","9523f5e6":"markdown","ce701985":"markdown","05ef8311":"markdown","11798c64":"markdown","a9a9473b":"markdown","be3b045d":"markdown","731a1ee9":"markdown","f74f7d7f":"markdown","f44a071d":"markdown","ee15a134":"markdown","25e4a3fc":"markdown","dc17ff86":"markdown"},"source":{"d55016e7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","73ba2b31":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nfrom sklearn.preprocessing import StandardScaler, Binarizer\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import f1_score, confusion_matrix, recall_score, precision_score, roc_auc_score, accuracy_score, precision_recall_curve\nfrom scipy.stats import skew\nfrom sklearn.decomposition import PCA\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier, IsolationForest\nfrom sklearn.tree import DecisionTreeClassifier\nfrom xgboost import XGBClassifier\nimport xgboost\nfrom lightgbm import LGBMClassifier\nimport lightgbm\nfrom scipy import stats\nfrom statsmodels.stats.multicomp import pairwise_tukeyhsd\nfrom statsmodels.stats.multicomp import MultiComparison\n\n\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline","3899e9ce":"# \uae30\uc900 url\npath = \"..\/input\/kakr-4th-competition\/\"\n\ntrain = pd.read_csv(path + \"train.csv\")\ntest = pd.read_csv(path + \"test.csv\")\nsubmit = pd.read_csv(path + \"sample_submission.csv\")","71f41144":"train.info(); test.info()","3b24f051":"# \uc5f0\uc18d\ud615 \ubcc0\uc218 \ucd94\ucd9c\n# 'id', 'age', 'fnlwgt', 'education_num', 'capital_gain', 'capital_loss','hours_per_week'\nprint(\", \".join(train.dtypes[train.dtypes != \"object\"].index.values))\n\n# \ubc94\uc8fc\ud615 \ubcc0\uc218 \ucd94\ucd9c\n# 'workclass', 'education', 'marital_status', 'occupation','relationship', 'race', 'sex', 'native_country', 'income'\nprint(\", \".join(train.dtypes[train.dtypes == \"object\"].index.values))","104227f8":"def df_drop(df):\n    if \"income\" in df.columns:\n        df[\"income_label\"] = df[\"income\"].apply(lambda x: 1 if x == \">50K\" else 0)\n        # education_num \ucd94\uac00\n        df.drop([\"income\", \"id\", \"education_num\", \"fnlwgt\"], axis = 1, inplace = True)\n    else:\n        df.drop([\"id\", \"education_num\", \"fnlwgt\"], axis = 1, inplace = True)\n    return df\n\ntrain_df = df_drop(train.copy())\ntest_df = df_drop(test.copy())","1095ec57":"print(train_df[\"income_label\"].value_counts() \/ train_df.shape[0]* 100)","f4e83cfa":"from scipy import stats\n\n# \ub808\uc774\ube14 \ubcc4 df\ntrain_df_0 = train_df[train_df[\"income_label\"] == 0]\ntrain_df_1 = train_df[train_df[\"income_label\"] == 1]\n\n# \ub808\uc774\ube14 \ubcc4 histogram\nsns.distplot(train_df_0[\"age\"], hist = False, color = \"red\")\nsns.distplot(train_df_1[\"age\"], hist = False, color = \"blue\")\nplt.show()\n\n\n# \ub808\uc774\ube14 \ubcc4 ttest\n# \ucc28\uc774\uac00 \uc788\uc74c \nprint(\"train set age ttest\")\nstats, pvalue = stats.ttest_ind(train_df_0[\"age\"], train_df_1[\"age\"])\nprint(f\"stats = {stats:.2f}, pvalue = {pvalue:.2f}\")\n\n# \uc774\uc0c1\uce58 \ud655\uc778\nsns.boxplot(train[\"age\"])","db7e9b79":"from scipy import stats\nprint(stats.shapiro(train_df[\"age\"]))\nq1 = np.quantile(train_df[\"age\"], 0.25)\nq3 = np.quantile(train_df[\"age\"], 0.75)\niqr = q3 - q1\nhigher = q3 + 1.5*iqr\n# 90\uc0b4\uc5d0 72\uc2dc\uac04 \uc77c\ud558\ub294 \uac83\uc774 \uac00\ub2a5\ud55c\uac00?\ntrain_df[train_df[\"age\"] > higher].sort_values(\"hours_per_week\", ascending = False)","afda2d54":"q1 = np.quantile(test_df[\"age\"], 0.25)\nq3 = np.quantile(test_df[\"age\"], 0.75)\niqr = q3 - q1\nhigher = q3 + 1.5*iqr\n# Transport-moving\uc5d0 \uc77c\ud558\uc9c0\ub9cc 90\uc0b4\uc5d0 \uc8fc\uc5d0 99\uc2dc\uac04 \uc77c\ud558\ub294 \uac83\uc774 \uac00\ub2a5\ud55c\uac00?\ntest_df[test_df[\"age\"] > higher]","d0257c39":"def age_to_category(x):\n    a = \"\"\n    # 17\uc0b4\uc774 \ucd5c\uc5f0\uc18c\n    if x <= 18:\n        a = \"Teenager\"\n    elif x <= 25:\n        a = \"Student\"\n    elif x <= 35:\n        a = \"Young_Adult\"\n    elif x <= 60:\n        a = \"Adult\"\n    else:\n        a = \"Elderly\"\n    return a\n\n# age \ubcc0\uc218 \ubcc0\uacbd\ntrain_df[\"age\"] = train_df[\"age\"].apply(lambda x : age_to_category(x))\ntest_df[\"age\"] = test_df[\"age\"].apply(lambda x : age_to_category(x))","6a4924cd":"plt.subplots(figsize = (16, 7))\nsns.countplot(data= train_df, x = \"age\", hue = \"income_label\")\n\n# age \ubc94\uc8fc\ubcc4 \uc218\uce58\ud615 \ubcc0\uc218\ub4e4\uc758 \ucc28\uc774 \ud655\uc778\nprint(train_df.groupby(\"age\")[[\"capital_gain\", \"hours_per_week\", \"income_label\"]].agg([\"mean\", \"std\"]))\n\nmc = MultiComparison(data = train_df[\"income_label\"], groups = train_df[\"age\"])\nprint(mc.tukeyhsd())\n\n\ndef change_cat_age(x):\n    cat = \"\"\n    if x == \"Teenager\":\n        cat = \"Student\"\n    else:\n        cat = x\n    return cat\n# Teenager\uc640 Student\uc758 \ucc28\uc774\uac00 \uc5c6\uc74c\uc744 \ud655\uc778\ntrain_df[\"age\"] = train_df[\"age\"].apply(lambda x: change_cat_age(x))\ntest_df[\"age\"] = test_df[\"age\"].apply(lambda x: change_cat_age(x))","74328b3a":"plt.subplots(figsize = (16,7))\nsns.distplot(train[train[\"income\"]== \"<=50K\" ][\"fnlwgt\"], hist = False, color = \"red\")\nsns.distplot(train[train[\"income\"]== \">50K\" ][\"fnlwgt\"], hist = False, color = \"blue\")\n\n\nstats.ttest_ind(train[train[\"income\"]== \"<=50K\" ][\"fnlwgt\"], train[train[\"income\"]== \">50K\" ][\"fnlwgt\"])","5bfe6f58":"from scipy import stats\ncapital_0 = train[train[\"income\"]== \"<=50K\" ][\"capital_gain\"]\ncapital_1 = train[train[\"income\"]== \">50K\" ][\"capital_gain\"]\n\n# capital_gain \ubcc0\uc218\ud655\uc778\nplt.hist(train[\"capital_gain\"])\nplt.show()\nfig, axs = plt.subplots(figsize = (14,4), ncols = 2)\nsns.distplot(train[train[\"income\"]== \"<=50K\" ][\"capital_gain\"], hist = False, color = \"red\", kde_kws={'bw': 0.1}, ax = axs[0])\nsns.distplot(train[train[\"income\"]== \">50K\" ][\"capital_gain\"], hist = False, color = \"blue\", kde_kws={'bw': 0.1}, ax = axs[1])\n\n\nprint(stats.ttest_ind(train[train[\"income\"]== \"<=50K\" ][\"capital_gain\"], train[train[\"income\"]== \">50K\" ][\"capital_gain\"]))","b791a5bc":"# 0\uc744 \uc81c\uc678 \ud55c capital_gain \uc774\uc0c1\uce58 \ud655\uc778(why? 0\uac12\uc774 \ucd5c\ube48\uac12\uc774\uae30 \ub54c\ubb38\uc5d0 0 boxplot\uc744 \uadf8\ub838\uc744 \uc2dc 0 \ubcf4\ub2e4 \uc57d\uac04 \ub192\uc740 \uac12\ub4e4\ub3c4 \ubaa8\ub450 \uc774\uc0c1\uce58\ub85c \ud45c\uae30 \ub418\uae30 \ub54c\ubb38)\ncapital_gain_check = train_df[train_df[\"capital_gain\"] > 0]\n\n\nprint(stats.ttest_ind(capital_gain_check[capital_gain_check[\"income_label\"]== 0][\"capital_gain\"], capital_gain_check[capital_gain_check[\"income_label\"]== 1][\"capital_gain\"]))\n# label \ubcc4 \uc774\uc0c1\uce58 \ud655\uc778 \ud544\uc694\nsns.boxplot(x = \"income_label\", y = \"capital_gain\", data = capital_gain_check)","f1ce7ff0":"q1 = np.quantile(capital_gain_check[capital_gain_check[\"income_label\"] == 1][\"capital_gain\"], 0.25)\nq3 = np.quantile(capital_gain_check[capital_gain_check[\"income_label\"] == 1][\"capital_gain\"], 0.75)\niqr = q3 - q1\nhigher = q3 + 1.5*iqr","5b302ded":"plt.subplots(figsize = (16, 7))\nsns.countplot(data= train_df, x = \"native_country\", hue = \"income_label\")\n\n# \uc218\uce58\ud615 \ubcc0\uc218 \ucc28\uc774 \ud655\uc778\n# \ub098\ub77c\ubcc4 \ucc28\uc774\uac00 \uc5c6\ub2e4 . >  \uc81c\uac70\nmc = MultiComparison(data = train_df[\"hours_per_week\"], groups = train_df[\"native_country\"])\nprint(mc.tukeyhsd())\n\ntrain_df = train_df.drop(\"native_country\", axis = 1)\ntest_df = test_df.drop(\"native_country\", axis = 1)","c4333352":"plt.subplots(figsize = (16, 7))\nsns.countplot(data= train_df, x = \"workclass\", hue = \"income_label\")\n\n# workclass \ubc94\uc8fc\ubcc4 \uc218\uce58\ud615 \ubcc0\uc218\ub4e4\uc758 \ucc28\uc774 \ud655\uc778\nprint(train_df.groupby(\"workclass\")[[\"capital_gain\", \"hours_per_week\", \"income_label\"]].agg([\"mean\", \"std\"]))\n\n\ncheck_0 = train_df[train_df[\"workclass\"] == \"Without-pay\"]\ncheck_1 = train_df[train_df[\"workclass\"] == \"Never-worked\"]\n\n# \uc218\uce58\ud615 \ubcc0\uc218 \ucc28\uc774 \ud655\uc778\n# Other\uacfc Amer-Indian-Eskimo\ub294 \ucc28\uc774\uac00 \uc5c6\uc74c\nprint(\"income_label\", stats.ttest_ind(check_0[\"income_label\"], check_1[\"income_label\"]))\nprint(\"hours_per_week\", stats.ttest_ind(check_0[\"hours_per_week\"], check_1[\"hours_per_week\"]))\n\ndef change_cat_workclass(x):\n    cat = \"\"\n    if x == \"Without-pay\":\n        cat = \"Unemployed\"\n    elif x == \"Never-worked\":\n        cat = \"Unemployed\"\n    elif x == \"?\":\n        cat = \"Unemployed\"\n    else:\n        cat = x\n    return cat\n# Without-pay\uc640 Newver-worked\uc758 \ucc28\uc774\uac00 \uc5c6\uc74c\uc744 \ud655\uc778\n# No_pay_worked\uc640 ? \ucc28\uc774\uac00 \uc5c6\uc74c\uc744 \ud655\uc778\ntrain_df[\"workclass\"] = train_df[\"workclass\"].apply(lambda x: change_cat_workclass(x))\ntest_df[\"workclass\"] = test_df[\"workclass\"].apply(lambda x: change_cat_workclass(x))\n\n\nmc = MultiComparison(data = train_df[\"income_label\"], groups = train_df[\"workclass\"])\nprint(mc.tukeyhsd())","f5729749":"plt.subplots(figsize = (16, 7))\nsns.countplot(data= train_df, x = \"race\", hue = \"income_label\")\n\n# workclass \ubc94\uc8fc\ubcc4 \uc218\uce58\ud615 \ubcc0\uc218\ub4e4\uc758 \ucc28\uc774 \ud655\uc778\nprint(train_df.groupby(\"race\")[[\"capital_gain\", \"hours_per_week\", \"income_label\"]].agg([\"mean\", \"std\"]))\n\n# \uc218\uce58\ud615 \ubcc0\uc218 \ucc28\uc774 \ud655\uc778\n# Other\uacfc Amer-Indian-Eskimo\ub294 \ucc28\uc774\uac00 \uc5c6\uc74c\nmc = MultiComparison(data = train_df[\"hours_per_week\"], groups = train_df[\"race\"])\nprint(mc.tukeyhsd())\n\n\n# Asian-Pac-Islander  White\ub3c4 \ubb36\ub294\uac78 \uace0\ub824\ud574\ubcfc\ub9cc\ud558\ub2e4.\ndef change_cat_race(x):\n    cat = \"\"\n    if x == \"Other\":\n        cat = \"Other\"\n    elif x == \"Amer-Indian-Eskimo\":\n        cat = \"Other\"\n    elif x == \"Black\":\n        cat = \"Other\"\n    else:\n        cat = x\n    return cat\n\ntrain_df[\"race\"] = train_df[\"race\"].apply(lambda x: change_cat_race(x))\ntest_df[\"race\"] = test_df[\"race\"].apply(lambda x: change_cat_race(x))","e4edb1c7":"plt.subplots(figsize = (16, 7))\nsns.countplot(data= train_df, x = \"marital_status\", hue = \"income_label\")\n\n# workclass \ubc94\uc8fc\ubcc4 \uc218\uce58\ud615 \ubcc0\uc218\ub4e4\uc758 \ucc28\uc774 \ud655\uc778\n# print(train_df.groupby(\"education\")[[\"capital_tot\", \"hours_per_week\", \"income_label\"]].agg([\"mean\", \"std\"]))\n\n# \uc218\uce58\ud615 \ubcc0\uc218 \ucc28\uc774 \ud655\uc778\nmc = MultiComparison(data = train_df[\"capital_tot\"], groups = train_df[\"marital_status\"])\nprint(mc.tukeyhsd())\n\ndef change_cat_marital_status(x):\n    cat = \"\"\n    if x == \"Divorced\":\n        cat = \"No_live_anymore\"\n    elif x == \"Married-spouse-absent\":\n        cat = \"No_live_anymore\"\n    elif x == \"Separated\":\n        cat = \"No_live_anymore\"\n    elif x == \"Widowed\":\n        cat = \"No_live_anymore\"\n    elif x == \"Married-civ-spouse\":\n        cat = \"Married\"\n    elif x == \"Married-AF-spouse\":\n        cat = \"Married\"\n    else:\n        cat = x\n    return cat\n\ntrain_df[\"marital_status\"] = train_df[\"marital_status\"].apply(lambda x: change_cat_marital_status(x))\ntest_df[\"marital_status\"] = test_df[\"marital_status\"].apply(lambda x: change_cat_marital_status(x))","03be76d2":"# \ub108\ubb34 \ubc14\uc058\ub124\uc694 \u3160\u3160 \ub2e4\uc74c\uc8fc\uc911\uc5d0\ub294 \ub178\ud2b8\ubd81 \uc644\uc131\ud558\uae30\ub97c ..","b2107995":"print(train_df[(train_df[\"sex\"] == \"Female\") & (train_df[\"relationship\"] == \"Husband\")])\nidx = train_df[(train_df[\"sex\"] == \"Female\") & (train_df[\"relationship\"] == \"Husband\")].index.values\ntrain_df.drop(idx, inplace = True)\n\nsns.countplot(train_df[train_df[\"sex\"] == \"Male\"][\"relationship\"])\n\nidx = train_df[(train_df[\"sex\"] == \"Male\") & (train_df[\"relationship\"] == \"Wife\")].index.values\ntrain_df.drop(idx, inplace = True)","1850d24e":"# 0 ~ 26043\ntotal = pd.concat([train_df, test_df]).reset_index(drop = True)\n\nx = total.drop(\"occupation\", axis = 1)\ny = total.occupation\n\nohe_train = pd.get_dummies(x)\ntrain_idx = total[total[\"occupation\"] != \"?\"].index.values\ntest_idx = total[total[\"occupation\"] == \"?\"].index.values\n\nx_train = ohe_train.loc[train_idx, :]\ny_train = y[train_idx]\n\n\n\nxgb_clf = XGBClassifier()\nxgb_clf.fit(x_train, y_train)\npred = xgb_clf.predict(x_train)\n\nprint(accuracy_score(pred, y_train))\n\nx_test = ohe_train.loc[test_idx, :]\npred = xgb_clf.predict(x_test)\ntotal.loc[test_idx, \"occupation\"] = pred\ntrain_df = total.iloc[0:26044, :]\ntest_df = total.iloc[26044:, :]","4478ae78":"## \"?\" \ubc94\uc8fc \ucc98\ub9ac \ubc29\uc548 \uace0\ucc30\n> workclass, occupation, native_country\uc5d0 \"?\"\ub77c\ub294 \uc774\uc0c1\uce58\ub77c\uace0 \ubcfc \uc218 \uc788\ub294 \uc774\uc0c1\uce58\uac00 \uc874\uc7ac\ud55c\ub2e4.\n> \uc704\uc758 \uacfc\uc815\uc744 \ud1b5\ud574 native_country\ub294 \ubcc0\uc218\uc758 \uc81c\uac70, workclass\ub294 \ub2e4\ub978 \ubc94\uc8fc\uc640 \ubcd1\ud569\uc744 \ud1b5\ud574 \uc81c\uac70 \ud558\uc600\ub2e4.\n> \n> \uac00\uc7a5 \ub9ce\uc740 \ube48\ub3c4\ub97c \ubcf4\uc778 \ubc94\uc8fc\ub85c \ub300\uccb4\ub4f1\uc758 \ubc29\ubc95\uc774 \uc788\ub294\ub370 occupation\uc744 \uc885\uc18d\ubcc0\uc218\ub85c \uc120\uc815\ud55c\ub4a4 \"?\" \ubc94\uc8fc\uac00 \uc18d\ud558\uc9c0 \uc54a\uc740 \ub370\uc774\ud130 \ud3ec\uc778\ud2b8\ub4e4\uc744 \ud6c8\ub828 \ub370\uc774\ud130\uc14b\uc73c\ub85c\ud55c \ub2e4\uc911 \ubd84\ub958 \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub378\ub9c1\uc744 \ud1b5\ud55c \uc608\uce21\uc73c\ub85c \"?\"\ubcc0\uc218\ub97c \ub300\uccb4\ud558\ub294 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud574 \ubcf4\uc558\ub2e4. \uc2e4\uc81c\ub85c f1_score\uc758 \uac12\uc744 \uc870\uae08 \uc62c\ub9ac\ub294 \ud6a8\uacfc\ub97c \ubcf4\uae30\ub3c4 \ud558\uc600\ub2e4.\n\n> train, test dataset\uc744 concat & train, test set\uc744 \ub2e4\uc2dc \ubd84\ub958\ud558\uae30 \uc704\ud55c index \uae30\uc5b5(26043)\n>\n> x(\ub3c5\ub9bd\ubcc0\uc218 \/ feature), y(\uc885\uc18d\ubcc0\uc218 \/ label) \ubd84\ub9ac\n>\n> train, test set\ubd84\ub958 How? \"?\"\ub97c \uae30\uc900\uc73c\ub85c index\ucd94\ucd9c\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubd84\ub958 \ud558\uc600\uc74c\n>\n> \ubd84\ub958 \ubaa8\ub378 \uc0ac\uc6a9(xgb\uac00 lgb\ubaa8\ub378 \ubcf4\ub2e4 \uc815\ud655\ub3c4\uac00 \ub192\uc558\uc74c)\n>\n> \ubaa8\ub378\ub9c1\uc758 \uacb0\uacfc\ub85c \"?\" \ubc94\uc8fc \ub300\uccb4","99e1417d":"## \uacb0\uce21\uce58, \ud06c\uae30\ud655\uc778\ndf(\ub370\uc774\ud130 \ud504\ub808\uc784).info() : \uac01 \ubcc0\uc218\ubcc4 \ub370\uc774\ud130 \ud0c0\uc785\uacfc \uacb0\uce21\uce58, \ub370\uc774\ud130\uc758 \ud06c\uae30 \ud655\uc778\n\n - train : \ud589(\ub370\uc774\ud130 \ud3ec\uc778\ud2b8) : 26049, \uc5f4(\ubcc0\uc218) : 15(\ub3c5\ub9bd\ubcc0\uc218 \/ features) + 1(\uc885\uc18d\ubcc0\uc218 \/ label)\n - test : \ud589(\ub370\uc774\ud130 \ud3ec\uc778\ud2b8) : 6512, \uc5f4(\ubcc0\uc218) : 15(\ub3c5\ub9bd\ubcc0\uc218 \/ features)","7b662806":"## dataset load","b95e1c75":"## \uc885\uc18d\ubcc0\uc218(label)\uc758 \ubd88\uade0\ud615\ub3c4 \ud655\uc778\n\n - [\ucc38\uace0\uc0ac\uc774\ud2b8](https:\/\/developers.google.com\/machine-learning\/data-prep\/construct\/sampling-splitting\/imbalanced-data)\n \n - \ubd84\ub958(classification)\uc5d0\uc11c \uc885\uc18d\ubcc0\uc218\uc778 label\uc758 \ub370\uc774\ud130 \ubd88\uade0\ud615\uc758 \ubb38\uc81c\ub294 \ud56d\uc0c1 \uace0\ub824 \ub418\uc5b4\uc57c \ud55c\ub2e4.\n - \uc704\uc758 \uad6c\uae00\uc0ac\uc774\ud2b8\uc5d0\uc11c\ub294 Imbalanced Data\uc5d0 \ub300\ud574 \uc5b4\ub290\uc815\ub3c4\uc758 \ube44\uc728\uc774 \ubd88\uade0\ud615\uc774\uace0 \ub370\uc774\ud130\uac00 \ubd88\uade0\ud615\uc774 \uc2ec\ud560\ub54c \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc778 Downsampling and Upweighting\uc5d0 \ub300\ud55c \uc124\uba85\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.","9523f5e6":"## race","ce701985":"## \ubcc0\uc218(feature) \uc81c\uac70 \ubc0f \uc885\uc18d\ubcc0\uc218(label) \ubc94\uc8fc\ud654\n\n - ","05ef8311":"## marital_status","11798c64":"## capital gain\n> \uc2dc\uac01\ud654\n- label 0\uc740 0 ~ 4000\uc0ac\uc774\uc5d0 \ub370\uc774\ud130\uac00 \ubd84\ud3ec \ud558\uace0, label 1\uc740 0 ~ 100000 \uc774\uc0c1\uc758 \uac12\uc73c\ub85c \ubd84\ud3ec\ud558\uace0 \uc788\ub2e4.\n- \uc815\uc801\ud3b8\ud3ec\uc640 \ube44\uc2b7\ud558\uc9c0\ub9cc \uadf9\ub2e5\uc804\uc778 \uc774\uc0c1\uce58\ub4e4\uc774 \uc874\uc7ac\ud55c\ub2e4.\n- 0 \uac12\uc758 \ube48\ub3c4\uac00 \ud06c\ub2e4\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc591\ub3c4\uc18c\ub4dd\uc774 \uc5c6\ub2e4\ub294 \ub73b\uc73c\ub85c \uc774\uc0c1\uce58\ub85c \ubcfc \uc218 \uc5c6\ub2e4\n\n> T-TEST\n- ttest\ub97c \ud1b5\ud574 \ub450 label\uac04\uc5d0\ub294 \ud3c9\uade0\uc5d0 \ucc28\uc774\uac00 \ubcf4\uc774\ubbc0\ub85c \ubd84\ub958 \ud559\uc2b5\uc2dc\uc5d0 \uc5b4\ub290\uc815\ub3c4 \uc601\ud5a5\uc744 \ubbf8\uce5c\ub2e4\uace0 \ucd94\uce21\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n> \uc774\uc0c1\uce58\n- boxplot\uc744 \ud1b5\ud574 label\ubcc4 \uc774\uc0c1\uce58\ub97c \ud655\uc778 \ud588\uc9c0\ub9cc test dataset\uc5d0\ub3c4 \uac19\uc740 \uc774\uc0c1\uce58\ub97c \ubcf4\uc774\ubbc0\ub85c \uc81c\uac70 \ud558\ub294 \ubc29\ubc95\uc744 \uace0\ub824\ud558\uae30\uc5d0\ub294 \uc801\ud569\ud558\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \uc0dd\uac01\ub41c\ub2e4.\n\n> \ubc94\uc8fc\ud654\n- \uc774\uc0c1\uce58\ub4e4 \ucc98\ub9ac\ub97c \ubc94\uc8fc \ud615\uc2dd\uc73c\ub85c \ucc98\ub9ac \ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \uace0\ub824 \ud574\ubd10\ub3c4 \uc88b\uc744\ub4ef \uc2f6\ub2e4.","a9a9473b":"## age\n> \uc2dc\uac01\ud654\n- label\ubcc4 histogram\uc744 \uadf8\ub824 \ubcf4\uc558\uc744 \uc2dc\uc5d0 \uc5b4\ub290\uc815\ub3c4\uc758 \uc815\uc801\ud3b8\ud3ec\ub97c \ubcf4\uc785\ub2c8\ub2e4. \uc774\ub294 \ub098\uc774\uac00 \uc5b4\ub9b0 \uc0ac\ub78c\ub4e4\uc774 \ub300\ubd80\ubd84\uc774\ub098 \uc5b4\ub9b0 \uc0ac\ub78c\ub4e4\uc5d0 \ube44\ud574 \ub098\uc774\uac00 \uc5c4\uccad \ub9ce\uc740 \uc0ac\ub78c\ub4e4(\uc774\uc0c1\uce58\uac00 \ub420 \uc218 \uc788\uc74c)\uc774 \uc874\uc7ac\ud55c\ub2e4\ub294 \ub73b\uc774\uae30\ub3c4 \ud569\ub2c8\ub2e4.\n- histogram\uc744 \ud1b5\ud574 \uc54c \uc218 \uc788\ub294 \uc815\ubcf4\ub85c\ub294 \uc218\uc785\uc774 \uc801\uc740(label = 0) \uc9d1\ub2e8\uc740 \uc8fc\ub85c 10 ~ 30\ub300\uc758 \uc0ac\uc774\uc5d0 \ubd84\ud3ec\ud558\uace0 \uc788\uace0 \uc218\uc785\uc774 \ub9ce\uc740(label = 1) \uc9d1\ub2e8\uc740 30 ~ 50\ub300\uc758 \uc0ac\uc774\uc5d0 \ubd84\ud3ec\ud558\uace0 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n> T-TEST\n- ttest\ub97c \ud1b5\ud574 \ub450 label\uac04\uc5d0\ub294 \ud3c9\uade0\uc5d0 \ucc28\uc774\uac00 \ubcf4\uc774\ubbc0\ub85c \ubd84\ub958 \ud559\uc2b5\uc2dc\uc5d0 \uc5b4\ub290\uc815\ub3c4 \uc601\ud5a5\uc744 \ubbf8\uce5c\ub2e4\uace0 \ucd94\uce21\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n> \uc774\uc0c1\uce58\n- boxplot\uc744 \ud1b5\ud574 4\ubd84\uc704\uc218 \ubcf4\ub2e4 \ub192\uc740 \uac12\uc744 \ubcf4\uc774\ub294 \uc774\uc0c1\uce58\ub9cc \ud655\uc778 \uac00\ub2a5\n- \uc815\uaddc\ubd84\ud3ec\ub97c \ub744\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 IQR\uc744 \ud65c\uc6a9\ud574 \uc774\uc0c1\uce58 \ucd94\ucd9c\n- \uacfc\uac70\uc758 \ub370\uc774\ud130\uc758 \ud559\uc2b5\uc744 \ud1b5\ud574 \ubbf8\ub798\ub97c \uc608\uce21\ud558\ub294 \ud504\ub85c\uc81d\ud2b8\uc640\ub294 \ub2ec\ub9ac \uc8fc\uc5b4\uc9c4(train)\ub370\uc774\ud130\ub97c \uac00\uc9c0\uace0 test\uc14b\uc758 \ub808\uc774\ube14\uc744 \uc608\uce21\ud574\uc57c \ud558\ub294 \ub300\ud68c\uc778 \ub9cc\ud07c \uc774\uc0c1\uce58\ucc98\ub9ac\ub97c \ud560\ub54c test\uc14b\uacfc\uc758 \ube44\uad50\ub97c \ud1b5\ud574 \uc81c\uac70\ud558\uace0\uc790 \ud558\uc600\uc2b5\ub2c8\ub2e4.\n- \uc2e4\uc81c\ub85c test\ub370\uc774\ud130 \uc14b\ub3c4 \ub098\uc774\uac00 \ub9ce\uc740 \uc0ac\ub78c\ub4e4\uc758 \uc774\uc0c1\uce58\ub97c \uac00\uc9c0\uace0 \uc788\uc9c0\ub9cc \ub300\ud68c \ud2b9\uc131\uc0c1 test\uc14b \ub370\uc774\ud130 \ud3ec\uc778\ud2b8(\ud589)\uc744 \uc81c\uac70 \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n- \uadf8\ub7ec\ubbc0\ub85c train \ub370\uc774\ud130\uc758 \uc774\uc0c1\uce58\ub97c \uc81c\uac70 \uc2dc\uc5d0 test \ub370\uc774\ud130\uc758 age\uc758 \uc774\uc0c1\uce58\ub97c \uac00\uc9c0\uace0 \uc788\ub294 dataset\uc5d0 \ub300\ud55c \ud559\uc2b5\uc774 \uc774\ub8e8\uc5b4\uc9c0\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ubd84\ub958 \uacb0\uacfc\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uac83\uc73c\ub85c \uc0dd\uac01\ud558\uc5ec \uc81c\uac70 \ud558\uc9c0 \uc54a\uace0 \uae30\uc874 \uc5ec\ub7ec \ub300\ud68c\ub4e4\uc758 age\ucc98\ub9ac \ubc29\uc2dd\uc778 \ubc94\uc8fc\ud654\ub85c \ubc94\uc8fc\ud615 \ubcc0\uc218\ub85c \ubcc0\uacbd\ud558\uc600\uc2b5\ub2c8\ub2e4.\n- \ubb3c\ub860, test \uc14b\uc758 age\uc758 \uc774\uc0c1\uce58 \ub370\uc774\ud130 \ud3ec\uc778\ud2b8(\ud589)\ub4e4\uc744 EDA\ub97c \ud1b5\ud574(\uc608) \ubcc0\uc218\ubcc4 \ube48\ub3c4 \uac12)\ub4e4\uc744 \ud1b5\ud574 \ubd80\ubd84 \uc81c\uac70\ub3c4 \uc2dc\ub3c4\ud574 \ubcfc\ub9cc\ud558\ub2e4.\n\n> \ubc94\uc8fc\ud654\n- \uae30\uc874 \ub300\ud68c\ub4e4\uc744 \ucc38\uace0\ud558\uc5ec \ub098\uc774\ub300 \ubcc4\ub85c \ubc94\uc8fc\ud654\n- \ucd94\ub860 \ud1b5\uacc4\ub97c \ud1b5\ud574 \ubc94\uc8fc\ud615 \ubcc0\uc218\ub4e4 \ubcc4\ub85c \ud3c9\uade0\ucc28\uc774\ub97c \ud655\uc778\ud558\uace0 \ucc28\uc774\uac00 \uc5c6\ub294 \ubc94\uc8fc\ub4e4\uc744 \ud569\uce58\uace0\uc790 \ud558\uc600\uc2b5\ub2c8\ub2e4.\n- \uac00\uc124 : \ub098\uc774\ub300\ubcc4(\uc885\uc18d\ubcc0\uc218) \uc218\uc785(\ub3c5\ub9bd\ubcc0\uc218)\uc5d0\ub294 \ucc28\uc774\uac00 \uc788\uc744 \uac83\uc774\ub2e4.\n- *\uc8fc\uc758* anova\ub098 ttest\ub97c \ub3cc\ub9ac\uae30 \uc704\ud574\uc11c\ub294 \ub3c5\ub9bd\ubcc0\uc218\ub294 \uc5f0\uc18d\ud615 \ubcc0\uc218\uc5ec\uc57c \ud55c\ub2e4. \uc774\ubc88 \ub300\ud68c\uc758 \uc218\uc785\uc740 0\uacfc 1\ub85c \uc22b\uc790 \ud615\uc2dd\uc774\uae30 \ub54c\ubb38\uc5d0 anova\ub97c \ub3cc\ub9ac\ub294\uac8c \uac00\ub2a5(but, \uc2e4\uc81c\ub85c \ud1b5\uacc4\uc801 \uac80\uc99d \uc5f0\uad6c \uc0c1\ud669\uc5d0\uc11c \uc54c\ub9de\uc740 \ud1b5\uacc4\ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4.)\n- \uc9d1\ub2e8\uc774 2\uac1c \uc774\uc0c1\uc774\uae30 \ub54c\ubb38\uc5d0 anova \ucc44\ud0dd\n- \ubc94\uc8fc\ub97c \uc7ac\uc124\uc815\ud558\uae30 \uc704\ud574 \uac00\uc124\uc758 \ub3c5\ub9bd\ubcc0\uc218\ub97c \uc218\uc785 \ubfd0\ub9cc\uc544\ub2c8\ub77c hours_per_week, capital_gain, capital_loss\ub4f1\uc744 \ud65c\uc6a9\ud558\uc5ec Student\uc640 Teenager\uac00 \ucc28\uc774\uac00 \uc5c6\uc74c\uc744 \ud655\uc778\ud558\uace0 Teenager\ub85c \ud1b5\ud569 \ud558\uc600\uc2b5\ub2c8\ub2e4.","be3b045d":"## \uc5f0\uc18d\ud615 or \ubc94\uc8fc\ud615 \ubcc0\uc218 \ucd94\ucd9c\n\n - \uc5f0\uc18d\ud615 \ubcc0\uc218\n \n  id, age, fnlwgt, education_num, capital_gain, capital_loss, hours_per_week\n  \n  \ubcc0\uc218(feature)\uac00 object\uac00 \uc544\ub2cc int\ub098 float\uc758 \ud615\uc2dd\uc774\ub77c\ub3c4 \uc21c\uc11c\ud615 \ubcc0\uc218\uc640 \uac19\uc774 \uc22b\uc790\ub85c \ud45c\ud604\ub41c \ubc94\uc8fc\ud615 \ubcc0\uc218\uac00 \uc788\uc744 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0\n  \uc2dc\uac01\ud654\ub97c \ud1b5\ud55c \ud655\uc778\uc774 \ud544\uc694!\n \n - \ubc94\uc8fc\ud615 \ubcc0\uc218\n \n  workclass, education, marital_status, occupation, relationship, race, sex, native_country, income\n","731a1ee9":"# EDA\n## \uc5f0\uc18d\ud615 \ubcc0\uc218\n- id, age, fnlwgt, education_num, capital_gain, capital_loss, hours_per_week\n- id\ub294 \ub370\uc774\ud130 \ud3ec\uc778\ud2b8\ub4e4\uc758 index\uc640 \uac19\uae30 \ub54c\ubb38\uc5d0 \ub530\ub85c \ud655\uc778\ud558\uc9c0\ub294 \uc54a\ub294\ub2e4","f74f7d7f":"## Workclass","f44a071d":"# \ub4e4\uc5b4\uac00\uae30\uc5d0 \uc55e\uc11c\n\n- EDA\ub97c \ud1b5\ud574 \uc5bb\uc740 \uc815\ubcf4\ub97c \uacf5\uc720\ud558\uace0 \ud1a0\ub860\ud558\uace0\uc790 \ub178\ud2b8\ubd81\uc744 \uc62c\ub9bd\ub2c8\ub2e4. \uc5b8\uc81c\ub4e0\uc9c0 \uc870\uc5b8\uc774\ub098 \uad81\uae08\ud558\uc2e0 \uc810 \ubb3c\uc5b4\ubcf4\uc168\uc73c\uba74 \uc88b\uaca0\uc2b5\ub2c8\ub2e4.\n\n- [\ucc38\uace0\uc0ac\uc774\ud2b8](https:\/\/machinelearningmastery.com\/how-to-use-statistics-to-identify-outliers-in-data\/)\n\n   \uc774\uc0c1\uce58\ucc98\ub9ac \ubc29\ubc95\uc5d0 \ub300\ud574 \uc775\uc219\ud558\uc9c0 \uc54a\uc73c\uc2e0 \ubd84\ub4e4\uc740 \uc704\uc758 \uc0ac\uc774\ud2b8\ub97c \ud1b5\ud574 \ud1b5\uacc4\uc801\uc778 \ubc29\ubc95\ub4f1\uc73c\ub85c \uc5b4\ub5bb\uac8c \uc774\uc0c1\uce58\ub97c \ucc98\ub9ac\ud558\ub294\uc9c0 \ucc38\uace0\ud558\uba74 \uc88b\uc744\uaebc \uac19\uc2b5\ub2c8\ub2e4.\n   \n   \uc2a4\ud3ec\uce20 \ub370\uc774\ud130 \ubd84\uc11d\ub4f1\uc758 \ub370\uc774\ud130 \ubd84\uc11d \uacbd\ud5d8\uc5d0 \ube44\ucd94\uc5b4 \ubcfc\ub54c \uc704\uc758 \uc0ac\uc774\ud2b8\uc5d0\uc11c \uc5b8\uae09\ud55c \ubc29\uc2dd\uc774 \uc544\ub2cc \ub2e4\uc591\ud55c \ubc29\ubc95\ub4e4\uc774 \uc788\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4.\n   (\ub370\uc774\ud130 \ud578\ub4e4\ub9c1\uc744 \ud558\uba74\uc11c \ud655\ubcf4\ud55c \uc815\ubcf4\ub97c \ud1b5\ud55c \ucc98\ub9ac, \ub3c4\uba54\uc778 \uc9c0\uc2dd\uc744 \ud1b5\ud55c \ucc98\ub9ac \ub4f1\ub4f1)","ee15a134":"## fnlwgt\n> \uc2dc\uac01\ud654\n- label\ubcc4 histogram\uc744 \uadf8\ub824 \ubcf4\uc558\uc744 \uc2dc\uc5d0 \uc5b4\ub290\uc815\ub3c4\uc758 \uc815\uc801\ud3b8\ud3ec\ub97c \ubcf4\uc774\uba70, \ubd84\ud3ec\uc5d0 \ucc28\uc774\uac00 \uc5c6\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4.\n\n> T-TEST\n- ttest\ub97c \ud1b5\ud574 \ub450 label\uac04\uc5d0\ub294 \ud3c9\uade0\uc5d0 \ucc28\uc774\uac00 \uc5c6\ub294 \uac83\uc744 \ud655\uc778 \ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \ubd84\ub958\uc2dc\uc5d0 fnlwgt\uac00 \ud070\ucc28\uc774\uac00 \uc5c6\ub2e4\ub294 \uac83\uc744 \uc598\uae30 \ud558\ub294 \ud558\ub098\uc758 \uacb0\uacfc\uac00 \ub41c\ub2e4.\n- \uc2e4\uc81c \uc815\ud615\ub370\uc774\ud130\ub97c \uc608\uce21\ud558\ub294 \ub300\ud68c\uc5d0\uc11c \uc8fc\ub85c \uc0ac\uc6a9\ud558\ub294 \uc559\uc0c1\ube14 \ubaa8\ud615\uc740 \ubcc0\uc218 \ud558\ub098\ud558\ub098 \ub9c8\ub2e4\uc758 \ucc28\uc774\ub97c \ubcf4\uae30 \ub54c\ubb38\uc5d0 fnlwgt\uac00 \ud3c9\uade0\uc801\uc73c\ub85c \ucc28\uc774\uac00 \uc5c6\ub2e4\ub294 \uac83\uc740 \ud070 \ub2e8\uc11c\uac00 \ub420 \uc218 \uc788\ub2e4.","25e4a3fc":"## EDA \uacfc\uc815\uc911 \ubc1c\uacac\ud55c \ud655\uc2e4\ud55c \uc774\uc0c1\uce58\n> \ud6c8\ub828 \ub370\uc774\ud130\uc5d0\ub294 \uc131\ubcc4\uc774 \uc5ec\uc790\uc778\ub370, \ub0a8\ud3b8\uc778 \uacbd\uc6b0, \uc131\ubcc4\uc774 \ub0a8\uc790\uc778\ub370 \uc544\ub0b4\uc778 \uacbd\uc6b0\uac00 \uc788\ub2e4.\n> \uc774\uc0c1\uce58\uc774\ubbc0\ub85c \uc81c\uac70 \ud544\uc694","dc17ff86":"## native_country\n> native_country \uac19\uc740 \uacbd\uc6b0\uc5d0\ub294 \ubc94\uc8fc \ubcc4 \ucc28\uc774\uc810\uc744 \ubc1c\uacac\ud560 \uc218 \uc5c6\uace0 \uc2e4\uc81c \ubd84\ub958 \ubaa8\ub378\uc744 \ub3cc\ub838\uc744\ub54c \ubcc0\uc218 \uc911\uc694\ub3c4 \ud06c\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uc81c\uac70 \ud558\ub294 \uac83\uc744 \ucd94\ucc9c\ud55c\ub2e4."}}