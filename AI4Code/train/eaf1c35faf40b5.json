{"cell_type":{"e2f219ef":"code","3a395eca":"code","3085bf5b":"code","fa2797c6":"code","aba67eab":"code","c2bf2aa4":"code","9e3bc10c":"code","b494825a":"code","77f0e718":"code","ffe4c47b":"code","8dfd1304":"code","b9386063":"code","65425c8b":"code","23e7e35d":"code","b6f06f7e":"code","818af0e9":"code","9f6eaacc":"code","ab160e7b":"code","a877c8d3":"code","c84f2bee":"code","2bf1dbee":"code","a9ee983a":"code","678fc359":"code","d86e240e":"code","557bbec7":"code","261c1efb":"code","9b81db10":"code","7eec464c":"code","b99fc85d":"code","f8cf3018":"code","a4c19384":"code","a57e0151":"code","8c0917ed":"code","3ba2ba02":"code","0c3b984e":"code","76599c1c":"code","021038a8":"code","e48f22df":"code","677096dc":"code","ecbce84e":"markdown","59c3972e":"markdown","4c9be1b4":"markdown","5aa7f044":"markdown"},"source":{"e2f219ef":"# Import libraries and packages\n\nimport numpy as np\nimport pandas as pd\nfrom pandas.api.types import is_string_dtype\nfrom pandas.api.types import is_numeric_dtype\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport csv\nimport json\nimport geojson\nimport folium\nfrom folium import plugins\nfrom folium.plugins import FastMarkerCluster\nfrom folium.plugins import TimestampedGeoJson\nimport datetime\nimport geopandas as gpd\nimport geoplot\nimport geoplot.crs as gcrs\nimport geoplot as gplt\n\n%matplotlib inline","3a395eca":"# Import listings data, load as pandas dataframe\nlistings_data = pd.read_csv('..\/input\/listings_march2019.csv')\n\n# Import reviews data, load as a pandas dataframe\nreviews_data = pd.read_csv('..\/input\/reviews_march2019.csv')","3085bf5b":"# Load the geojson file required for mapping as a geodataframe\nsyd_geo = gpd.GeoDataFrame.from_file('..\/input\/neighbourhoods.geojson')","fa2797c6":"# Create dataframe listings with relevant columns\n\nlistings = listings_data[['id','neighbourhood','neighbourhood_cleansed','latitude','longitude','property_type','room_type','accommodates','price','host_since',\n    'guests_included','minimum_nights','number_of_reviews','review_scores_rating','instant_bookable','cancellation_policy']]","aba67eab":"# Price is in string format with '$'' and ','' Remove and convert to float\nlistings.price = listings.price.replace('[\\$,]', '', regex=True).astype(float)","c2bf2aa4":"# Convert host_since from string to datetime\nlistings['host_since'] = pd.to_datetime(listings['host_since'])","9e3bc10c":"# Create a series to group listings by year and convert to a dataframe\nresult = listings.groupby(listings['host_since'].map(lambda x: x.year)).id.count()\nyear = pd.DataFrame(result)","b494825a":"# Rename column id to listings and reset index\nyear.rename(columns={'id':'listings'}, inplace=True)\nyear = pd.DataFrame(year).reset_index()","77f0e718":"# Create a new column with the cumulative listings by year\nyear['total listings']= year['listings'].cumsum(axis=0)","ffe4c47b":"# Convert host_since data type to int\nyear['host_since'] = year['host_since'].astype(int)","8dfd1304":"# Rename column host_since to year\nyear.rename(columns={'host_since':'year'}, inplace=True)","b9386063":"# Plot Airbnb listings over time\nsns.set(style=\"whitegrid\")\nfig, ax = plt.subplots()\nfig.set_size_inches(12, 8)\nax = sns.barplot(x=\"year\", y=\"total listings\", data=year, color='Coral')\nax.set_title('Airbnb Listings in Sydney',fontsize=25,pad=20) # Give the plot a main title\nax.set_xlabel('Year',fontsize=15, labelpad=15) # Set text for the x axis,\nax.set_ylabel('Number of Listings',fontsize=15, labelpad=15)# Set text for y axis  \nsns.despine(offset=5, left=True)","65425c8b":"# Plot new Airbnb listings over time\nsns.set(style=\"whitegrid\")\nfig, ax = plt.subplots()\nfig.set_size_inches(12, 8)\nax = sns.barplot(x='year', y=\"listings\", data=year, color=\"coral\")\nax.set_title('New Airbnb Listings, Sydney',fontsize=20,pad=20) # Give the plot a main title\nax.set_xlabel('Year',fontsize=14, labelpad=15) # Set text for the x axis,\nax.set_ylabel('Listings',fontsize=14, labelpad=15)# Set text for y axis  \nsns.despine(offset=5, left=True)","23e7e35d":"# Plot the room types in Sydney\nsns.set(style=\"whitegrid\")\nfig, ax = plt.subplots()\nfig.set_size_inches(12, 8)\nax.axes.set_title(\"Room Type, Airbnb Sydney\",fontsize=20, pad=20)\nax = sns.countplot(y='room_type',data=listings,order=listings['room_type'].value_counts().index, palette=\"Set3\")\nax.set_xlabel('Number of Listings',fontsize=14,labelpad=15)\nax.set_ylabel('Type of Room',fontsize=14,labelpad=15)\nax.xaxis.set_tick_params(labelsize=10)\nax.yaxis.set_tick_params(labelsize=10)","b6f06f7e":"# Plot top 20 neighbourhoods in terms listings\nsns.set(style=\"whitegrid\")\nfig, ax = plt.subplots()\nfig.set_size_inches(25, 15)\nax.axes.set_title(\"Most Popular Neighourhoods\",fontsize=40,pad=40)\nax = sns.countplot(y='neighbourhood',data=listings, order = listings['neighbourhood'].value_counts().iloc[:20].index, palette=\"Set3\")\nax.set_xlabel('Number of Listings',fontsize=30,labelpad=30)\nax.set_ylabel('Neighbourhood',fontsize=30,labelpad=30)\nax.xaxis.set_tick_params(labelsize=20)\nax.yaxis.set_tick_params(labelsize=20)","818af0e9":"# Create a list of top 20 neighbourhoords in terms of listings\ntop = listings['neighbourhood'].value_counts().iloc[:20].index.tolist()","9f6eaacc":"# Create a dataframe to group neighbourhoods by average room price\nprice = pd.DataFrame(listings.groupby(['neighbourhood']).price.mean().reset_index())\n\n# Create a dataframe to filter top 20 neighbourhoods\ntop_price = price[price['neighbourhood'].isin(top)].sort_values('price',ascending=False)","ab160e7b":"# Barplot of price by neighbourhood, top 20 neighbourhoods in terms of listings\nfig, ax = plt.subplots()\nfig.set_size_inches(25, 15)\nax.axes.set_title(\"Room Price, Airbnb Sydney\",fontsize=40, pad=40)\nax = sns.barplot(x='price', y='neighbourhood',data=top_price, palette='Set3')\nax.set_xlabel('Avg. Price',fontsize=30,labelpad=30)\nax.set_ylabel('Neighbourhood',fontsize=30,labelpad=30)\nax.xaxis.set_tick_params(labelsize=20)\nax.yaxis.set_tick_params(labelsize=20)","a877c8d3":"# Boxplot of the ratings for the listings\nfig, ax = plt.subplots(figsize=(20,10))\n\nax = sns.boxplot(x=listings[\"review_scores_rating\"], linewidth=1, palette='Set2')\nax.set_title('Avg. Rating, Airbnb Sydney',fontsize=30,pad=30) # Give the plot a main title\nax.set_xlabel('Rating',fontsize=20, labelpad=15) # Set text for the x axis,\n\nsns.despine(offset=5, left=True)","c84f2bee":"# Rename column from date to review_date in the reviews data\nreviews_data.rename(columns={'date':'review_date'}, \n                 inplace=True)","2bf1dbee":"# Change data type to datetime\nreviews_data['review_date'] = pd.to_datetime(reviews_data['review_date'])","a9ee983a":"# Create new columns for year, month and month year\nreviews_data['month_year'] = reviews_data.review_date.dt.to_period('M')\nreviews_data['year'] = reviews_data.review_date.apply(lambda x: x.year)\nreviews_data['month'] = reviews_data.review_date.apply(lambda x: x.month)","678fc359":"# Create new dataframe to group reviews by year\nreviews_year = pd.DataFrame(reviews_data.groupby(['year']).review_date.count().reset_index())","d86e240e":"# Rename column from review_date to reviews\nreviews_year.rename(columns={'review_date':'reviews'}, \n                 inplace=True)","557bbec7":"# Create new column for bookings, estimate bookings by mupltiplying reviews by 2\nreviews_year['bookings'] = reviews_year['reviews']*2","261c1efb":"# Plot bookings per year\nsns.set(style=\"whitegrid\")\nfig, ax = plt.subplots()\nfig.set_size_inches(12, 8)\nax = sns.barplot(x=\"year\", y=\"bookings\", data=reviews_year, color='Coral')\nax.set_title('Bookings per Year, Airbnb Sydney',fontsize=20,pad=20) # Give the plot a main title\nax.set_xlabel('Year',fontsize=15, labelpad=15) # Set text for the x axis,\nax.set_ylabel('Estimated Bookings',fontsize=15, labelpad=15)# Set text for y axis  \nsns.despine(offset=5, left=True)","9b81db10":"# Merge reviews per year and listings per year\ndemand = year.merge(reviews_year, on='year')","7eec464c":"# Create new columns for booked nights and available nights\ndemand['booked nights'] = demand['bookings']*2\ndemand['available nights'] = demand['total listings']*365","b99fc85d":"# Create new feature occupancy rate, booked nights divided by available nights\ndemand['occupancy rate'] = demand['booked nights']\/demand['available nights']*100","f8cf3018":"# Plot occupancy rate\nsns.set(style=\"whitegrid\")\nfig, ax = plt.subplots()\nfig.set_size_inches(12, 8)\nax = sns.barplot(x=\"year\", y=\"occupancy rate\", data=demand, color='Coral')\nax.set_title('Occupancy Rate, Airbnb Sydney',fontsize=20,pad=20) # Give the plot a main title\nax.set_xlabel('Year',fontsize=15, labelpad=15) # Set text for the x axis,\nax.set_ylabel('Occupancy Rate %',fontsize=15, labelpad=15)# Set text for y axis  \nsns.despine(offset=5, left=True)","a4c19384":"# Create new dataframe for listings grouped by neighbourhood\nlistings_geo = pd.DataFrame(listings.groupby(['neighbourhood_cleansed']).id.count()).reset_index()\n\n# Rename column in neighbourhood_cleansed dataframe\nlistings_geo.rename(columns={'neighbourhood_cleansed':'neighbourhood','id':'listings'}, \n                 inplace=True)","a57e0151":"# Create new dataframe for listings grouped by neighbourhood\nprice_geo = pd.DataFrame(listings.groupby(['neighbourhood_cleansed']).price.mean()).reset_index()\n\n# Rename column in neighbourhood_cleansed dataframe\nprice_geo.rename(columns={'neighbourhood_cleansed':'neighbourhood','id':'listings'}, \n                 inplace=True)","8c0917ed":"# Create a new dataframe for ratings grouped by neighbourhood\nratings_geo = pd.DataFrame(listings.groupby(['neighbourhood_cleansed']).review_scores_rating.mean()).reset_index()\n\n# Rename column in neighbourhood_cleansed dataframe\nratings_geo.rename(columns={'neighbourhood_cleansed':'neighbourhood','id':'listings'}, \n                 inplace=True)","3ba2ba02":"# Drop the column neighbourhood_group, no useful data\nsyd_geo.drop(columns=['neighbourhood_group'],inplace=True)","0c3b984e":"# Merge listings, price and ratings with geo\nsyd_geo = syd_geo.merge(listings_geo, on='neighbourhood')\nsyd_geo = syd_geo.merge(price_geo, on='neighbourhood')\nsyd_geo = syd_geo.merge(ratings_geo, on='neighbourhood')","76599c1c":"# Inspect the dataframe\nsyd_geo.head()","021038a8":"# Plot the data, Listings Choropleth\n\ngplt.choropleth(syd_geo, hue=syd_geo['listings'], projection=gcrs.PlateCarree(),\n                cmap='Blues', linewidth=0.5, edgecolor='white', k=None, legend=True, figsize=(10, 10))\nplt.title(\"Listings per Neighbourhood, Airbnb Sydney\", fontsize=20, pad=60)\nplt.savefig(\"airbnb_listings_suburb.png\", bbox_inches='tight', pad_inches=0.1)","e48f22df":"# Plot the data, Avg. Listing Price Choropleth\n\ngplt.choropleth(syd_geo, hue=syd_geo['price'], projection=gcrs.PlateCarree(),\n                cmap='Blues', linewidth=0.5, edgecolor='white', k=None, legend=True, figsize=(10, 10))\nplt.title(\"Avg. Listing Price per Neighbourhood, Airbnb Sydney\", fontsize=20, pad=60)\nplt.savefig(\"airbnb_price_suburb.png\", bbox_inches='tight', pad_inches=0.1)","677096dc":"# Plot the data, Avg. Rating Choropleth\n\ngplt.choropleth(syd_geo, hue=syd_geo['review_scores_rating'], projection=gcrs.PlateCarree(),\n                cmap='Blues', linewidth=0.5, edgecolor='white', k=None, legend=True, figsize=(10, 10))\nplt.title(\"Avg. Rating per Neighbourhood, Airbnb Sydney\", fontsize=20, pad=60)\nplt.savefig(\"airbnb_ratings_suburb.png\", bbox_inches='tight', pad_inches=0.1)","ecbce84e":"# Data prep for choropleth maps","59c3972e":"## Background and Inspiration\n\nThis is, the first of what I hope to be many posts I write as I sharpen my skills as an aspiring data scientist. I was on the lookout for an interesting data set that ticked a few boxes.\n* Was complete and required limited transformation or cleaning\n* Presented an opportunity to learn some basic python packages and visualise data on a map\n* Was relevant to where I lived which meant I could provide some subject matter expertise\n\nI found the data on Insideairbnb.com which is an independent, non-commercial set of tools and data to explore how Airbnb is really being used in cities around the world.\nAn extremely thorough analysis of an NYC Airbnb dataset by Sarang Gupta and team ([link](https:\/\/towardsdatascience.com\/airbnb-rental-listings-dataset-mining-f972ed08ddec)) served as inspiration and guidance.","4c9be1b4":"*** \n## Description of Data\nThe data is sourced from the **Inside Airbnb** website `http:\/\/insideairbnb.com\/get-the-data.html` which hosts publicly available data from the Airbnb site.\nThe dataset comprises of three main tables:\n* `listings` - Detailed listings data showing 96 atttributes for each of the listings. Some of the attributes used in the analysis are `price` (continuous), `longitude` (continuous), `latitude` (continuous), `listing_type` (categorical), `is_superhost` (categorical), `neighbourhood` (categorical), `ratings` (continuous) among others.\n* `reviews` - Detailed reviews given by the guests with 6 attributes. Key attributes include `date` (datetime), `listing_id` (discrete), `reviewer_id` (discrete) and `comment` (textual).\n* `calendar` - Provides details about booking for the next year by listing. Four attributes in total including `listing_id` (discrete), `date` (datetime), `available` (categorical) and `price` (continuous).\n\n\nThe data used in this analysis is dated March 2019 and the geographic scope covers Sydney, Australia\n*** ","5aa7f044":"## Data Prep\n\n**Listings Data**\n\nI extracted the following columns from the listings data frame. \n\n* `id` (discrete)\n* `neighbourhood` (categorical)\n* `neighbourhood_cleansed` (categorical)\n* `latitude` (continuous)\n* `longitude` (continuous)\n* `property_type` (categorical)\n* `room_type` (categorical)\n* `accommodates` (discrete)\n* `price` (continuous)\n* `host_since` (datetime)\n* `guests_included` (discrete)\n* `minimum_nights` (discrete)\n* `number_of_reviews` (discrete)\n* `review_scores_rating` (continuous) \n* `instant_bookable` (boolean)\n* `cancellation_policy` (categorical)\n\nWhen I inspected the columns, I found two attributes that referenced a suburb, `neighbourhood` and `neighbourhood_cleansed`. The data in the `neighbourhood` column was more granular and as a resident of Sydney, I found this more insightful. However, I chose to retain both in this analysis for maximum flexibility. \n\n\n**Geo Data**\n\n* `neighbourhood` (categorical)\n* `geometry` (polygon)\n\nI dropped the `neighbourhood_group` column as it contained null values. \n\n\n**Reviews Data**\n\n* `listing_id` (discrete)\n* `id` (discrete)\n* `date` (datetime)\n* `reviewer_id` (discrete)\n* `reviewer_name` (string)\n* `comments` (string)\n\nI retained all the columns in the reviews data as there weren't many columns and it was manageable. You could drop `listing_id`, `reviewer_id`, `reviewer_name` and `comments`."}}