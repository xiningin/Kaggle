{"cell_type":{"6e83dfbf":"code","7f812157":"code","aa9140ea":"code","30bbe192":"code","35bbe4a6":"code","efd06b64":"code","337306e2":"code","021b25f5":"code","7da2ae7e":"code","3f084cbe":"code","d287c2e5":"code","70f70c68":"code","68a32de0":"code","20ee8f4c":"code","23ca15d2":"code","27303386":"code","d698a684":"code","3185090a":"code","e683e110":"code","9bb3f3e4":"code","ef3b807f":"code","3a084304":"code","78658eed":"code","f7ff530d":"code","9358864d":"code","d409d76f":"code","1d6ee37a":"code","0ee9c519":"code","8ff113e8":"code","67e7dbde":"code","f454ae51":"code","a70c0cec":"code","3d253a2b":"markdown","f23670f9":"markdown","164c18f5":"markdown","b6ef285a":"markdown","9597ac93":"markdown","d30743a2":"markdown","4da972f7":"markdown","7f00cdd8":"markdown","cf3ae9e5":"markdown","e68c25c6":"markdown"},"source":{"6e83dfbf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport bokeh\nfrom bokeh.io import show, output_notebook\nfrom bokeh.palettes import Spectral9\nfrom bokeh.plotting import figure\noutput_notebook() # You can use output_file();\n\nimport plotly.graph_objects as go\nimport plotly.express as px\n\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected = True)\nimport plotly.offline as py\npy.init_notebook_mode(connected = True)\n\n# Special\nimport wordcloud, missingno\nfrom wordcloud import WordCloud # wordcloud\nimport missingno as msno # check missing value\nimport networkx as nx\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7f812157":"data = pd.read_csv('..\/input\/17k-apple-app-store-strategy-games\/appstore_games.csv')","aa9140ea":"data.info()","30bbe192":"data.describe()","35bbe4a6":"data.head(10)","efd06b64":"data.columns","337306e2":"data = data.drop(['URL','ID'],axis = 1)","021b25f5":"msno.matrix(data)","7da2ae7e":"data.isnull().sum()","3f084cbe":"data.dtypes","d287c2e5":"import matplotlib.pyplot as plt\nimport requests\nfrom PIL import Image\nfrom io import BytesIO\n\nfig,ax = plt.subplots(20,10, figsize = (12,12))\n\nfor i in range(200):\n    r = requests.get(data['Icon URL'][i])\n    image = Image.open(BytesIO(r.content))\n    ax[i\/\/10][i%10].imshow(image)\n    ax[i\/\/10][i%10].axis('off')\nplt.show()","70f70c68":"\nplt.figure(figsize = (12,12))\nsns.barplot(x = data['Average User Rating'].value_counts().index,\n           y=data['Average User Rating'].value_counts().values)\nplt.xlabel('Average User Rating')\nplt.ylabel('Frequency')\nplt.title('Average User Rating Bar Plot')\nplt.show()\n","68a32de0":"plt.figure(figsize=(12,12))\nsns.barplot(x=data['Price'].value_counts().index,\n           y=data['Price'].value_counts().values)\nplt.xlabel('Price')\nplt.ylabel('Frequency')\nplt.title('Price Plot')\nplt.show()\n","20ee8f4c":"fig, ax = plt.subplots(1, 2, figsize=(14,28))\nwordcloud = WordCloud(background_color='white',width=800, height=800).generate(' '.join(data['Name']))\nwordcloud_sub = WordCloud(background_color='white',width=800, height=800).generate(' '.join(data['Subtitle'].dropna().astype(str)) )\nax[0].imshow(wordcloud)\nax[0].axis('off')\nax[0].set_title('Wordcloud(Name)')\nax[1].imshow(wordcloud_sub)\nax[1].axis('off')\nax[1].set_title('Wordcloud(Subtitle)')\nplt.show()","23ca15d2":"data.corr()","27303386":"f,ax= plt.subplots(figsize=(12,12))\nsns.heatmap(data.corr(),annot= True,ax=ax)\nplt.show()","d698a684":"data['Original Release Date'] = pd.to_datetime(data['Original Release Date'], format = '%d\/%m\/%Y')\ndate_aur = pd.DataFrame({'Average User Rating':data['Average User Rating']})\ndate_aur = date_aur.set_index(data['Original Release Date'])\ndate_aur = date_aur.sort_values(by=['Original Release Date'])\ndate_aur.head()\n","3185090a":"data.dtypes","e683e110":"plt.figure(figsize=(12,6))\nsns.barplot(data['User Rating Count'][:20],data.Name[:20])\nplt.title('Top 10 User Rates')\nplt.show()","9bb3f3e4":"fig = go.Figure([go.Bar(x=data[\"Primary Genre\"], y=data[\"Average User Rating\"])])\nfig.update_layout(title_text=\"Primary Genre\")\npy.iplot(fig, filename=\"test\") ","ef3b807f":"fig = px.scatter(data, y=\"In-app Purchases\", x=\"Size\")\npy.iplot(fig, filename=\"test\")","3a084304":"data.drop([\"Name\",\"Icon URL\",\"Subtitle\",\"Icon URL\",\"In-app Purchases\",\"Description\",\"Languages\",\"Developer\",\"Size\",\"Genres\",\"Original Release Date\",\"Current Version Release Date\",\"Original Release Date\",\"Age Rating\"],axis=1,inplace=True)\ndata.head()","78658eed":"data.columns=[\"average_user_rating\",\"user_rating_count\",\"price\",\"genre\"]\ndata.isnull().sum()","f7ff530d":"def nan_to_median(series):\n    return series.fillna(series.median())\ndata['user_rating_count']=data['user_rating_count'].transform(nan_to_median)\ndata['average_user_rating']=data['average_user_rating'].transform(nan_to_median)\ndata['price']=data['price'].transform(nan_to_median)\ndata.isnull().sum()","9358864d":"data['user_rating_count'] = data['user_rating_count'].astype(int)\ndata['price'] = data['price'].astype(int)\ndata['average_user_rating'] = data['average_user_rating'].astype(int)","d409d76f":"x = data.drop('average_user_rating',axis = 1)\ny = data['average_user_rating']","1d6ee37a":"x = pd.get_dummies(x, columns=['genre'],prefix = ['genre'])","0ee9c519":"x.head()","8ff113e8":"y.head()","67e7dbde":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(x,y,test_size = 0.3,random_state=42, stratify=y)","f454ae51":"x.info()","a70c0cec":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import GridSearchCV , StratifiedKFold\nfrom sklearn.model_selection import cross_val_score\n\nknn_model=KNeighborsClassifier().fit(X_train,y_train)\nlr_model=LogisticRegression().fit(X_train,y_train)\nrf_model=RandomForestClassifier().fit(X_train,y_train)\nlgb_model=LGBMClassifier().fit(X_train,y_train)\nxgb_model=XGBClassifier().fit(X_train,y_train)\ngbm_model=GradientBoostingClassifier().fit(X_train,y_train)\n\n\nmodeller=[lr_model,rf_model,lgb_model,gbm_model,xgb_model,knn_model]\n\nsc_fold=StratifiedKFold(n_splits=5,shuffle=True,random_state=42)\n\nfor model in modeller:\n    isimler=model.__class__.__name__\n    accuracy=cross_val_score(model,X_train,y_train,cv=sc_fold)\n    print(\"{}s score:{}\".format(isimler,accuracy.mean()))","3d253a2b":"* Almost all is free","f23670f9":"# **Check Missing Data with missingno**\n","164c18f5":"\n* As we can see, there is a density at 4.5","b6ef285a":"* As we see most people love games","9597ac93":"# Vizualizations\n* Images\n* Avarege user rating bar plot\n* Price plot\n* WordCloud\n* Correlation\n* Top 10 User Rates\n* Primary Genre\n* Scatter plot of In-App Purchase & Size","d30743a2":"**We have so much missing data in Subtitle, Average User Rating, User Rating Count, In-App Purchases and Languages**","4da972f7":"# > let's start with reading data,describe & removing the unnecessary ones","7f00cdd8":"* almost no correlation","cf3ae9e5":"# Now we have come to the part we have to do\n1. unnecessary columns are removed\n2. Rename Columns\n3. The missing values Changes(But we unchanged STD)\n4. When the data is float, we convert it to integer for ML Algorithms does work\n5. Create the model of train,test split \n6. Using the Label Encoder For \"Primary Genres\"\n7. Train & Fit the model\n","e68c25c6":"* There are a lot of game genres"}}