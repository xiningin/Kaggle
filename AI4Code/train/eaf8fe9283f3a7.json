{"cell_type":{"8cfe729c":"code","42a0da08":"code","825d750e":"code","851560a2":"code","dcb6eb5a":"code","87c4de16":"code","bede6fce":"code","8acc5ff3":"code","dfa78a3c":"code","a3b752ed":"code","a185e423":"code","a4f4626d":"code","622ddf4d":"code","6189e085":"code","507fc398":"code","309dba75":"code","edc7085d":"code","18a4ead8":"code","aa352f3a":"code","36741707":"code","325df569":"code","f4de2f44":"code","635cd8d2":"code","7b5cf014":"code","c88467a3":"code","73fc25b5":"markdown","875613ec":"markdown","62f76cae":"markdown"},"source":{"8cfe729c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","42a0da08":"data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndata2 = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\npass_id = data2['PassengerId']\ndata","825d750e":"#Deleting unnecessary columns\ndata.drop('PassengerId', axis=1, inplace=True)\ndata.drop('Name', axis=1, inplace=True)\n\ndata.drop('Ticket', axis=1, inplace=True)\ndata.drop('Cabin', axis=1, inplace=True)","851560a2":"data.head()","dcb6eb5a":"data.isnull().sum() #Checking for any null values","87c4de16":"data['Embarked'] = data['Embarked'].fillna(value='S')","bede6fce":"data['Embarked'].unique()","8acc5ff3":"#Categorical to Numerical\ndata['Sex'].replace('female', 0,inplace=True)\ndata['Sex'].replace('male', 1,inplace=True)\n\n\ndata['Embarked'].replace('S', 0,inplace=True)\ndata['Embarked'].replace('C', 1,inplace=True)\ndata['Embarked'].replace('Q', 2,inplace=True)","dfa78a3c":"data['Age'] = data['Age'].fillna(value= data['Age'].mean())","a3b752ed":"data.isnull().sum()","a185e423":"data['Parch'].unique()","a4f4626d":"data['SibSp'].unique()","622ddf4d":"data2.head()","6189e085":"data2.isnull().sum()","507fc398":"data2.drop(['PassengerId','Name','Ticket','Cabin'],axis=1, inplace=True)","309dba75":"data2['Age'] = data2['Age'].fillna(value= data2['Age'].mean())\ndata2['Fare'] = data2['Fare'].fillna(value= data2['Fare'].mean())","edc7085d":"#Categorical to Numerical\ndata2['Sex'].replace('female', 0,inplace=True)\ndata2['Sex'].replace('male', 1,inplace=True)\n\n\ndata2['Embarked'].replace('S', 0,inplace=True)\ndata2['Embarked'].replace('C', 1,inplace=True)\ndata2['Embarked'].replace('Q', 2,inplace=True)","18a4ead8":"sns.pairplot(data)","aa352f3a":"data.head()","36741707":"from sklearn.ensemble import RandomForestClassifier\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\", \"Age\", \"Fare\", \"Embarked\"]\nX_train = pd.get_dummies(data[features])\ny_train = data['Survived']\nX_test = pd.get_dummies(data2[features])","325df569":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","f4de2f44":"classifier = RandomForestClassifier(n_estimators = 100, criterion = 'entropy', max_depth = 5, random_state = 1)\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\n","635cd8d2":"y_test = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\ny_test = np.array(y_test[\"Survived\"])","7b5cf014":"print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","c88467a3":"output = pd.DataFrame({'PassengerId': pass_id, 'Survived': y_pred})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","73fc25b5":"***Visualization***","875613ec":"Training","62f76cae":"**Machine Learning Model**"}}