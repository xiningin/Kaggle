{"cell_type":{"9b68654a":"code","4d8c78b0":"code","d3f54040":"code","43520219":"code","aa0bd77f":"code","28279821":"code","174e595f":"code","1564c6fe":"code","db21775d":"code","a55470e3":"code","05314346":"code","03c04f76":"code","f569d2de":"code","758010f5":"code","230d32b6":"code","291ad076":"code","5460571b":"code","a7979321":"code","c8175006":"code","69233355":"code","060b4e04":"code","d2d99bdb":"code","1bc91b05":"code","1522b81a":"code","8314ec1a":"code","92638807":"code","59e5d0c9":"code","aa0275e1":"code","1ddedc02":"code","4e6f0de0":"code","afde8837":"code","b9c730a1":"code","7306a34a":"code","83a33841":"code","622a39dc":"code","5c71e350":"code","57e85a4c":"code","dded9499":"code","85b786a1":"code","85b43808":"code","74619ae2":"code","f82d7a8d":"code","31a5e58f":"code","844f1e48":"code","8cff3fae":"code","d35ee863":"code","bcf264ac":"code","99879fa0":"code","2a8bda55":"code","2e988412":"markdown","02beec02":"markdown","e51890a2":"markdown","97b77195":"markdown","2e16df65":"markdown","ea3490d5":"markdown","f84d7c67":"markdown","fd96ae80":"markdown","140793c6":"markdown","220f8e0e":"markdown","ba5392c4":"markdown","2321c63d":"markdown","8424ee3c":"markdown","ded41e63":"markdown","3d358822":"markdown","777845fb":"markdown","e93504e8":"markdown","9aa02759":"markdown","3976eccd":"markdown","faa3b7e5":"markdown","71e2a2d4":"markdown","ba3cdafb":"markdown","b3691b7e":"markdown","c0195b09":"markdown","2337b554":"markdown","b07a3b05":"markdown","83851522":"markdown","f01286bb":"markdown","9f9e4db7":"markdown","1477cc48":"markdown","99e024ec":"markdown","25b65b94":"markdown","a6389aa0":"markdown","7a1569d9":"markdown","8f8f1268":"markdown","7dfd55a8":"markdown","78972eec":"markdown","67029a8e":"markdown"},"source":{"9b68654a":"import numpy as np\nimport pandas as pd\nimport seaborn as sb\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import r2_score","4d8c78b0":"zomato_orgnl=pd.read_csv(\"..\/input\/zomato-bangalore-restaurants\/zomato.csv\")","d3f54040":"zomato_orgnl.head()","43520219":"zomato_orgnl.isnull().sum()","aa0bd77f":"zomato_orgnl.info()","28279821":"zomato=zomato_orgnl.drop(['url','dish_liked','phone'],axis=1)\nzomato.columns","174e595f":"zomato.rename({'approx_cost(for two people)': 'approx_cost_for_2_people',\n               'listed_in(type)':'listed_in_type',\n               'listed_in(city)':'listed_in_city'\n              }, axis=1, inplace=True)\nzomato.columns","1564c6fe":"remove_comma = lambda x: int(x.replace(',', '')) if type(x) == np.str and x != np.nan else x \nzomato.votes = zomato.votes.astype('int')\nzomato['approx_cost_for_2_people'] = zomato['approx_cost_for_2_people'].apply(remove_comma)","db21775d":"zomato.info()","a55470e3":"zomato['rate'].unique()","05314346":"zomato = zomato.loc[zomato.rate !='NEW']\nzomato = zomato.loc[zomato.rate !='-'].reset_index(drop=True)","03c04f76":"remove_slash = lambda x: x.replace('\/5', '') if type(x) == np.str else x\nzomato.rate = zomato.rate.apply(remove_slash).str.strip().astype('float')","f569d2de":"zomato['rate'].head()","758010f5":"zomato.info()","230d32b6":"def Encode(zomato):\n    for column in zomato.columns[~zomato.columns.isin(['rate', 'approx_cost_for_2_people', 'votes'])]:\n        zomato[column] = zomato[column].factorize()[0]\n    return zomato\n\nzomato_en = Encode(zomato.copy())","291ad076":"zomato_en['rate'] = zomato_en['rate'].fillna(zomato_en['rate'].mean())\nzomato_en['approx_cost_for_2_people'] = zomato_en['approx_cost_for_2_people'].fillna(zomato_en['approx_cost_for_2_people'].mean())","5460571b":"zomato_en.isna().sum()","a7979321":"corr = zomato_en.corr(method='kendall')","c8175006":"plt.figure(figsize=(15,8))\nsns.heatmap(corr, annot=True)\nplt.savefig(\"image0.png\")","69233355":"zomato_en.columns","060b4e04":"x = zomato_en.iloc[:,[2,3,5,6,7,8,9,11]]\ny = zomato_en['rate']","d2d99bdb":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=353)","1bc91b05":"x_train.head()","1522b81a":"y_train.head()","8314ec1a":"reg=LinearRegression()\nreg.fit(x_train,y_train)","92638807":"y_pred=reg.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_pred)","59e5d0c9":"'''reg_score=[]\nimport numpy as np\nfor j in range(1000):\n    x_train,x_test,y_train,y_test =train_test_split(x,y,random_state=j,test_size=0.1)\n    lr=LinearRegression().fit(x_train,y_train)\n    reg_score.append(lr.score(x_test,y_test))\nK=reg_score.index(np.max(reg_score))\n#K=353'''","aa0275e1":"from sklearn.tree import DecisionTreeRegressor","1ddedc02":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=105)","4e6f0de0":"DTree=DecisionTreeRegressor(min_samples_leaf=.0001)","afde8837":"DTree.fit(x_train,y_train)\ny_predict=DTree.predict(x_test)","b9c730a1":"from sklearn.metrics import r2_score","7306a34a":"r2_score(y_test,y_predict)","83a33841":"'''from sklearn.tree import DecisionTreeRegressor\nts_score=[]\nfor j in range(1000):\n    x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=j)\n    dc=DecisionTreeRegressor().fit(x_train,y_train)\n    ts_score.append(dc.score(x_test,y_test))\nJ= ts_score.index(np.max(ts_score))\n\nJ\n#J=105'''","622a39dc":"from sklearn.ensemble import RandomForestRegressor\nRForest=RandomForestRegressor(n_estimators=5,random_state=329,min_samples_leaf=.0001)","5c71e350":"RForest.fit(x_train,y_train)\ny_predict=RForest.predict(x_test)","57e85a4c":"from sklearn.metrics import r2_score\nr2_score(y_test,y_predict)","dded9499":"'''rf_score=[]\nfor k in range(500):\n    x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.01,random_state=k)\n    dtc=RandomForestRegressor().fit(x_train,y_train)\n    rf_score.append(dtc.score(x_test,y_test))\nK= rf_score.index(np.max(rf_score))\nK=329'''","85b786a1":"fig = plt.figure(figsize=(20,7))\nloc = sns.countplot(x=\"location\",data=zomato_orgnl, palette = \"Set1\")\nloc.set_xticklabels(loc.get_xticklabels(), rotation=90, ha=\"right\")\nplt.ylabel(\"Frequency\",size=15)\nplt.xlabel(\"Location\",size=18)\nloc\nplt.title('NO. of restaurents in a Location',size = 20,pad=20)\nplt.savefig(\"image1.png\", bbox_inches=\"tight\")","85b43808":"fig = plt.figure(figsize=(17,5))\nrest = sns.countplot(x=\"rest_type\",data=zomato_orgnl, palette = \"Set1\")\nrest.set_xticklabels(rest.get_xticklabels(), rotation=90, ha=\"right\")\nplt.ylabel(\"Frequency\",size=15)\nplt.xlabel(\"Restaurent type\",size=15)\nrest \nplt.title('Restaurent type',fontsize = 20 ,pad=20)\nplt.savefig(\"image2.png\", bbox_inches=\"tight\")","74619ae2":"plt.figure(figsize=(15,7))\nchains=zomato_orgnl['name'].value_counts()[:20]\nsns.barplot(x=chains,y=chains.index,palette='Set1')\nplt.title(\"Most famous restaurants chains in Bangaluru\",size=20,pad=20)\nplt.xlabel(\"Number of outlets\",size=15)\nplt.savefig(\"image3.png\", bbox_inches=\"tight\")","f82d7a8d":"plt.figure(figsize=(15,7))\nzomato_orgnl['online_order'].value_counts().plot.bar()\nplt.title('Online orders', fontsize = 20)\nplt.ylabel('Frequency',size = 15)\nplt.savefig(\"image4.png\", bbox_inches=\"tight\")","31a5e58f":"plt.figure(figsize=(15,7))\nzomato_orgnl['book_table'].value_counts().plot.bar()\nplt.title('Booking Table', fontsize = 20,pad=15)\nplt.ylabel('Frequency', fontsize = 15)\nplt.savefig(\"image5.png\", bbox_inches=\"tight\")","844f1e48":"plt.figure(figsize=(10,10))\nrestaurantTypeCount=zomato_orgnl['rest_type'].value_counts().sort_values(ascending=True)\nslices=[restaurantTypeCount[0],\n        restaurantTypeCount[1],\n        restaurantTypeCount[2],\n        restaurantTypeCount[3],\n        restaurantTypeCount[4],\n        restaurantTypeCount[5],\n        restaurantTypeCount[6],\n        restaurantTypeCount[7],\n        restaurantTypeCount[8]]\nlabels=['Pubs and bars','Buffet','Drinks & nightlife','Cafes','Desserts','Dine-out','Delivery ','Quick Bites','Bakery']\ncolors = ['#3333cc','#ffff1a','#ff3333','#c2c2d6','#6699ff','#c4ff4d','#339933','black','orange']\nplt.pie(slices,colors=colors, labels=labels, autopct='%1.0f%%', pctdistance=.5, labeldistance=1.2,shadow=True)\nfig = plt.gcf()\nplt.title(\"Percentage of Restaurants according to their type\", bbox={'facecolor':'2', 'pad':2})\nplt.savefig(\"image6.png\", bbox_inches=\"tight\")","8cff3fae":"fig, ax = plt.subplots(figsize=[15,7])\nsns.distplot(zomato_en['approx_cost_for_2_people'],color=\"magenta\")\nax.set_title('Approx cost for two people distribution',size=20,pad=15)\nplt.xlabel('Approx cost for two people',size = 15)\nplt.ylabel('Percentage of restaurents',size = 15)\nplt.savefig(\"image7.png\", bbox_inches=\"tight\")","d35ee863":"plt.figure(figsize=(12,7))\npreds_rf = RForest.predict(x_test)\nplt.scatter(y_test,x_test.iloc[:,2],color=\"red\")\nplt.title(\"True rate vs Predicted rate\",size=20,pad=15)\nplt.xlabel('Rating',size = 15)\nplt.ylabel('Frequency',size = 15)\nplt.scatter(preds_rf,x_test.iloc[:,2],color=\"green\")\nplt.savefig(\"image8.png\", bbox_inches=\"tight\")","bcf264ac":"plt.figure(figsize=(15,8))\nrating = zomato['rate']\nplt.hist(rating,bins=20,color=\"red\")\nplt.title('Restaurent rating distribution', size = 20, pad = 15)\nplt.xlabel('Rating',size = 15)\nplt.ylabel('No. of restaurents',size = 15)\nplt.savefig(\"image9.png\", bbox_inches=\"tight\")","99879fa0":"plt.figure(figsize=(15,8))\nsns.violinplot(zomato.approx_cost_for_2_people)\nplt.title('Approx cost for 2 people distribution', size = 20, pad = 15)\nplt.xlabel('Approx cost for 2 people',size = 15)\nplt.ylabel('Density',size = 15)\nplt.savefig(\"image10.png\", bbox_inches=\"tight\")","2a8bda55":"plt.figure(figsize=(15,8))\ncuisines=zomato['cuisines'].value_counts()[:15]\nsns.barplot(cuisines,cuisines.index)\nplt.title('Most popular cuisines of Bangaluru', size = 20, pad = 15)\nplt.xlabel('No. of restaurents',size = 15)\nplt.savefig(\"image11.png\", bbox_inches=\"tight\")","2e988412":"__We remove the restaurent datas which has rate='NEW'__","02beec02":"## viii) Showing True rate vs Predicted rate","e51890a2":"# 3.Data pre-processing","97b77195":"__Information on original zomato dataset__","2e16df65":"## vi) Percentage of  restaurents according to their types","ea3490d5":"# 4.STARTING REGRESSION PART<br>(PREDICTION)","f84d7c67":"__Confirming the data-types of \"votes\" and \"approx_cost_for_2_people\"__","fd96ae80":"# 1.Loading Packages","140793c6":"__Renaming \"approx_cost(for two people)\" ,listed_in(type) and listed_in(city) as they have multiple data-types__","220f8e0e":"## iv) Frequency of  restaurents taking online order or not","ba5392c4":"# 5.DATA VISUALIZATION","2321c63d":"## x) Approx cost for 2 people distribution","8424ee3c":" __From above, it is found that the column \"dish_liked\" has more than 50% values missing__","ded41e63":"## ix) Restaurent rating distribution","3d358822":"## ii) Frequency of different types of restaurents","777845fb":"# 2.Reading dataset","e93504e8":"## Applying LINEAR REGRESSION","9aa02759":"__Counting missing values for different columns__","3976eccd":"## vii) Distribution of  restaurents according to approx cost for two people ","faa3b7e5":"__Checking unique values of \"rate\"__","71e2a2d4":"__Checking for correlation among all the x(inputs)__","ba3cdafb":"__\"votes\" and  \"approx_cost_for_2_people\" have values like 1,000. \nSo we will change them into pure numeric values.\n<br>For this, we will use the lambda function__","b3691b7e":"__Now we will convert \"rate\" into float__","c0195b09":"## i) No. of restaurents in a particular location","2337b554":"__With LINEAR REGRESSION, we are getting an  accuracy of  30 %__","b07a3b05":"__With DECISION TREE REGRESSION, we are getting an  accuracy of  83 %__","83851522":"__Now we see that 'rate' column has converted to float datatype__","f01286bb":"## iii) Most famous restaurent chains in Bengaluru","9f9e4db7":"__Dropping the column \"dish_liked\", \"phone\", \"url\"  and saving the new dataset as \"zomato\"__","1477cc48":"## xi) Most popular cuisines of Bangaluru","99e024ec":" ## v) Frequency of  restaurents allowing booking table or not","25b65b94":"__The highest correlation is between name and address which is 0.63 which is not of very much concern__ \n<br> __Splitting dataset into train & test__ ","a6389aa0":"__Now we will Label Encode the input variable columns into 0,1,2...__","7a1569d9":"__Converting \"votes\" and  \"approx_cost_for_2_people\" into numeric(int)__","8f8f1268":"## Applying RANDOM FOREST REGRESSION ","7dfd55a8":"__With RANDOM FOREST REGRESSION, we are getting an  accuracy of  84 % which is better than all three__","78972eec":"## Applying DECISION TREE REGRESSION","67029a8e":"__Now we will remove '\/5'__"}}