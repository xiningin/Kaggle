{"cell_type":{"0e207073":"code","d021bc8d":"code","6eba0e30":"code","0dbdfc42":"code","6d221a49":"code","eac10870":"code","bcf9d678":"code","45d9078e":"code","d596a6d2":"code","bb8fb31f":"code","0c50b0b5":"code","ed3381d1":"code","6244c979":"code","9e219d80":"code","a87138c7":"code","519e6767":"code","73a23f1a":"code","014eadce":"code","c178c890":"code","d3b66ed5":"code","a0f7db0d":"code","63379252":"code","8d37994b":"code","6f30202a":"code","bb82c60f":"code","13366d53":"code","309b9e6a":"code","99944fb5":"code","ed4de3ba":"code","3588fdce":"code","f64b50f8":"code","2af50ca5":"code","ce9e95f7":"code","a8913908":"code","cf3a1cc4":"code","95489081":"code","0bc2278a":"code","e7af7f6a":"code","6e31fc03":"code","55bd8a34":"code","a3439552":"code","5e06a28f":"code","111ea8e4":"code","45bdcda4":"code","396ad49c":"code","dbaeae79":"code","e814b458":"code","c63cd74a":"code","d22b7e5d":"code","438b23ab":"code","51135b19":"code","2531860b":"code","59e50ef1":"code","b40bf5e0":"code","838ab8c8":"code","17d8d1e0":"code","200f3bad":"code","9d659b23":"code","0b8f4903":"code","e359a76c":"code","997513e7":"code","3518aa4a":"code","3c76938a":"code","7255a613":"code","619fa9bc":"code","4d5fa9e0":"code","7093945a":"code","e58819fe":"code","81df7a1f":"code","42cc0d55":"code","1172bb4f":"markdown","e7dc2f51":"markdown","a36f51d8":"markdown","005aba31":"markdown","20b8c141":"markdown","a1f73d27":"markdown","4caf8b04":"markdown","9ce51a4d":"markdown","bf1d7c5a":"markdown","184850b0":"markdown","60a3784a":"markdown","b804988d":"markdown"},"source":{"0e207073":"import pandas as pd\nimport numpy as np\nimport os","d021bc8d":"import matplotlib.pyplot as plt\n%matplotlib inline","6eba0e30":"data=pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')","0dbdfc42":"data.head()","6d221a49":"data.shape","eac10870":"data.info()","bcf9d678":"data['thal'].value_counts()","45d9078e":"data['sex'].value_counts() # 1-male and 0-female","d596a6d2":"data.describe()","bb8fb31f":"data.age.hist(color='red',rwidth=0.5)\nplt.xlabel('age')\nplt.ylabel('population')","0c50b0b5":"plt.bar(data.target,data.chol)\nplt.xticks([0,1])\nplt.xlabel('target')\nplt.ylabel('Cholosterol')\nplt.show()","ed3381d1":"# Get correlation between target and other features:\n# Target has positive correlation with cp(chest pain).i.e positive linear relationship.\n# Target and exang has negative relationship. \ncorr_matrix=data.corr()\ncorr_matrix['target'].sort_values(ascending=False)","6244c979":"from pandas.plotting import scatter_matrix","9e219d80":"# create a scatter matrix to see the relationship between all the below mentioned features against each other\natt = ['target','exang','cp','thalach','oldpeak']\nscatter_matrix(data[att],figsize=(10,7))\nplt.show()","a87138c7":"fig,ax = plt.subplots(2,2,figsize=(10,8))\nax[0,0].hist(data[att[0]])\nax[0,0].set_title('target')\nax[0,0].set_xticks([0,1])\n\nax[0,1].hist(data[att[1]])\nax[0,1].set_title('exang (exercise induced angina)')\nax[0,1].set_xticks([0,1])\n\n\nax[1,0].hist(data[att[2]])\nax[1,0].set_title('cp (chest pain level)')\nax[1,0].set_xticks([0,1,2,3])\n\nax[1,1].hist(data[att[3]])\nax[1,1].set_title('oldpeak')\n\nfig.show()","519e6767":"from sklearn.preprocessing import StandardScaler","73a23f1a":"s = StandardScaler()","014eadce":"new_data=s.fit_transform(data)","c178c890":"new_data[0,:]","d3b66ed5":"from sklearn.ensemble import RandomForestClassifier","a0f7db0d":"X=data.drop('target',axis=1)\ny= data['target']","63379252":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=42)","8d37994b":"X_test.shape","6f30202a":"rf = RandomForestClassifier()\nrf.fit(X_train,y_train)","bb82c60f":"y_pred= rf.predict(X_test)","13366d53":" from sklearn.metrics import precision_score, recall_score\nfrom sklearn.metrics import accuracy_score,f1_score","309b9e6a":"from sklearn.metrics import confusion_matrix","99944fb5":"confusion_matrix(y_test, y_pred)","ed4de3ba":"print(precision_score(y_test, y_pred))\nprint(recall_score(y_test, y_pred))","3588fdce":"f1_score(y_test, y_pred)","f64b50f8":"accuracy_score(y_test, y_pred)","2af50ca5":"from sklearn.metrics import roc_curve,auc\nfpr,tpr,threshold = roc_curve(y_test,y_pred)\nauc(fpr,tpr)","ce9e95f7":"plt.plot(fpr,tpr,marker='.')\nplt.xlabel('false positive rate')\nplt.ylabel('true postive rate')\nplt.show()","a8913908":"import pickle\npickle.dump(rf, open('model.pkl','wb'))","cf3a1cc4":"sol = []\nsol.append({'model':'RandomForest','precision_score':precision_score(y_test, y_pred),'recall_score':recall_score(y_test, y_pred),'roc_auc score':auc(fpr,tpr)})","95489081":"from sklearn.linear_model import LogisticRegression","0bc2278a":"log_reg = LogisticRegression()\nlog_reg.fit(X_train,y_train)","e7af7f6a":"y_pred=log_reg.predict(X_test)","6e31fc03":"print(confusion_matrix(y_test,y_pred))\nprint('precision:', precision_score(y_test,y_pred))\nprint('recall:',recall_score(y_test,y_pred))\nprint('f1_score:',f1_score(y_test,y_pred))","55bd8a34":"print('accuracy_score:',accuracy_score(y_test,y_pred))","a3439552":"fpr,tpr,threshold = roc_curve(y_test,y_pred)\nprint('AUC score:',auc(fpr,tpr))","5e06a28f":"plt.plot(fpr,tpr,marker='.')\nplt.xlabel('false positive rate')\nplt.ylabel('true positive rate')\nplt.show()","111ea8e4":"sol.append({'model':'Logistic Regression','precision_score':precision_score(y_test, y_pred),'recall_score':recall_score(y_test, y_pred),'roc_auc score':auc(fpr,tpr)})","45bdcda4":"from sklearn.linear_model import Perceptron\nperc = Perceptron(penalty='l2')\nperc.fit(X_train,y_train)","396ad49c":"y_pred = perc.predict(X_test)","dbaeae79":"print(confusion_matrix(y_test,y_pred))\nprint('precision:', precision_score(y_test,y_pred))\nprint('recall:',recall_score(y_test,y_pred))\nprint('f1_score:',f1_score(y_test,y_pred))","e814b458":"print('accuracy_score:',accuracy_score(y_test,y_pred))","c63cd74a":"fpr,tpr,threshold = roc_curve(y_test,y_pred)\nprint('AUC score:',auc(fpr,tpr))","d22b7e5d":"plt.plot(fpr,tpr,marker='.')\nplt.xlabel('false positive rate')\nplt.ylabel('true positive rate')\nplt.show()","438b23ab":"sol.append({'model':'Perceptron','precision_score':precision_score(y_test, y_pred),'recall_score':recall_score(y_test, y_pred),'roc_auc score':auc(fpr,tpr)})","51135b19":"from sklearn.tree import DecisionTreeClassifier\ndecision_tree = DecisionTreeClassifier()\ndecision_tree.fit(X_train,y_train)\ny_pred = decision_tree.predict(X_test)","2531860b":"print('accuracy_score:',accuracy_score(y_test,y_pred))","59e50ef1":"fpr,tpr,threshold = roc_curve(y_test,y_pred)\nprint('AUC score:',auc(fpr,tpr))","b40bf5e0":"plt.plot(fpr,tpr,marker='.')\nplt.xlabel('false positive rate')\nplt.ylabel('true positive rate')\nplt.show()","838ab8c8":"sol.append({'model':'Decision Tree Classifier','precision_score':precision_score(y_test, y_pred),'recall_score':recall_score(y_test, y_pred),'roc_auc score':auc(fpr,tpr)})","17d8d1e0":"from sklearn.svm import SVC\nclf = SVC(kernel='rbf')\nclf.fit(X_train,y_train)\ny_pred = clf.predict(X_test)","200f3bad":"print('accuracy_score:',accuracy_score(y_test,y_pred))","9d659b23":"print(confusion_matrix(y_test,y_pred))\nprint('precision:', precision_score(y_test,y_pred))\nprint('recall:',recall_score(y_test,y_pred))\nprint('f1_score:',f1_score(y_test,y_pred))","0b8f4903":"fpr,tpr,threshold = roc_curve(y_test,y_pred)\nprint('AUC score:',auc(fpr,tpr))","e359a76c":"plt.plot(fpr,tpr,marker='.')\nplt.xlabel('false positive rate')\nplt.ylabel('true positive rate')\nplt.show()","997513e7":"sol.append({'model':'SVM (RBF Kernel)','precision_score':precision_score(y_test, y_pred),'recall_score':recall_score(y_test, y_pred),'roc_auc score':auc(fpr,tpr)})","3518aa4a":"clf = SVC(kernel='linear')\nclf.fit(X_train,y_train)\ny_pred = clf.predict(X_test)","3c76938a":"print(confusion_matrix(y_test,y_pred))\nprint('precision:', precision_score(y_test,y_pred))\nprint('recall:',recall_score(y_test,y_pred))\nprint('f1_score:',f1_score(y_test,y_pred))","7255a613":"print('accuracy_score:',accuracy_score(y_test,y_pred))","619fa9bc":"fpr,tpr,threshold = roc_curve(y_test,y_pred)\nprint('AUC score:',auc(fpr,tpr))","4d5fa9e0":"plt.plot(fpr,tpr,marker='.')\nplt.xlabel('false positive rate')\nplt.ylabel('true positive rate')\nplt.show()","7093945a":"sol.append({'model':'SVM (Linear Kernel)','precision_score':precision_score(y_test, y_pred),'recall_score':recall_score(y_test, y_pred),'roc_auc score':auc(fpr,tpr)})","e58819fe":"df={}\nfor i in range(len(sol)):\n    df[i]=pd.Series(sol[i])","81df7a1f":"for i in range(len(df)):\n    solution=pd.concat(df,axis=1)","42cc0d55":"solution","1172bb4f":"# 6) SVM ( Linear Kernel):","e7dc2f51":"print(confusion_matrix(y_test,y_pred))\nprint('precision:', precision_score(y_test,y_pred))\nprint('recall:',recall_score(y_test,y_pred))\nprint('f1_score:',f1_score(y_test,y_pred))","a36f51d8":"# 2) Logistic Regression: ","005aba31":"# 4) Decision Tree Classifier:","20b8c141":"# END","a1f73d27":"# 5) SVM (RBF Kernel)","4caf8b04":"### From the below table, we can see that Random forest has the highest accuracy among them all. ","9ce51a4d":"# 1) Random Forest Classifier:","bf1d7c5a":"### Standard Scaler:\n##### All data values are skewed. all have different range(left image;before standard scaler)\n![](https:\/\/i.stack.imgur.com\/PZgJ2.png) \n##### Equation for standard scaler::\n![](https:\/\/media.geeksforgeeks.org\/wp-content\/uploads\/standardisation.jpg) \n","184850b0":"age = age in years\n\nsex =(1 = male; 0 = female)\n\ncp = chest pain type\n\ntrestbps = resting blood pressure (in mm Hg on admission to the hospital)\n\nchol = serum cholestoral in mg\/dl\n\nfbs = (fasting blood sugar &gt; 120 mg\/dl) (1 = true; 0 = false)\n\nrestecg = resting electrocardiographic results\n\nthalach = maximum heart rate achieved\n\nexang = exercise induced angina (1 = yes; 0 = no)\n\noldpeak = ST depression induced by exercise relative to rest\n\nslope = the slope of the peak exercise ST segment\n\nca = number of major vessels (0-3) colored by flourosopy\n\nthal  = 3 = normal; 6 = fixed defect; 7 = reversable defect\n\ntarget = 1 or 0","60a3784a":"# 3) Perceptron: ","b804988d":"### Infromation of each feature:"}}