{"cell_type":{"34c47996":"code","fef4ac07":"code","a8ce7d20":"code","83505b0b":"code","25778723":"code","09d7731e":"code","a1aa1644":"code","3f856db4":"code","3d6a59b6":"code","cf46da62":"code","1b12b914":"code","5ed5b6e1":"code","deaa24b8":"code","5c496057":"code","9dfa12f6":"code","17247ccb":"markdown","6a7368e1":"markdown","663c3e84":"markdown","fd935a14":"markdown","a24c76aa":"markdown"},"source":{"34c47996":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fef4ac07":"import pandas as pd\nimport seaborn as sns\nimport numpy as np\n","a8ce7d20":"import matplotlib.pyplot as plt\n%matplotlib inline","83505b0b":"df = pd.read_csv('..\/input\/netflix-original-films-imdb-scores\/NetflixOriginals.csv')\ndf.head()","25778723":"df.shape","09d7731e":"df.isnull().sum()","a1aa1644":"df.describe()","3f856db4":"df.info()","3d6a59b6":"df['Premiere'] = pd.to_datetime(df['Premiere'])","cf46da62":"df['Year'] = df['Premiere'].apply(lambda x:x.year)\ndf['Day'] = df['Premiere'].apply(lambda x:x.day)\nmonths ={1: 'January',2: 'Febuary',3: 'March',4: 'April',5: 'May',6: 'June',7: 'July',8: 'August',9: 'September',10: 'October',\n        11: 'November',12: 'December'}\ndf['Month'] = df['Premiere'].apply(lambda x:months[x.month])","1b12b914":"df = df.drop('Premiere',axis=1)\ndf.head()","5ed5b6e1":"df.groupby('Year').count()['Title'].plot(kind='bar')\nplt.title('Movie Releases Per Year')\nplt.xlabel('Year')\nplt.ylabel('Total Number')","deaa24b8":"df.groupby('Month').count()['Title'].plot(kind='bar')\nplt.title('Movie releases per month')\nplt.xlabel('Months')\nplt.ylabel('Movie count')","5c496057":"sns.set(rc={'figure.figsize':(14, 8)})\nax = sns.countplot(df.Month, hue= df.Year, palette='bright',data = df)\nax.set_title('Number of new movies by month')\nplt.xlabel('Month')\nplt.ylabel('Number of Movies')\nplt.show()","9dfa12f6":"sns.regplot(data=df,x='IMDB Score',y='Runtime');\nplt.title('Scatter plot of runtime and IMDB score');","17247ccb":" From the above visualizations\n* You can see a genereal increase in movie release year after year showing an increase in demand\n* Number of program releases differs by months. October and April are the months which have the highest number of program releases.\n* From 2016 there has been a trend to atleast have new content out every month and this is expected to continue that way as they try to retain and add new movie lovers.","6a7368e1":"* There is no significant relationship between runtime and IMDB score.","663c3e84":"* In this study, we are going to make Exploratory Data Analysis (EDA) with the Netflix original films dataset.\n* Study aims to be beginner friendly \n* Study's dataset has top 584 Netflix original films on the different genre.\n* Each films has language, release time, runtime and IMDB Score.","fd935a14":"**Correlation Between Runtime and IMDB Ratings**","a24c76aa":"* We need to make an adjustment on the Premiere feature,it should be datetime object, and also transform it in order to consider it in more detail.\n\n"}}