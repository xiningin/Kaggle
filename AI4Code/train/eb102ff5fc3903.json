{"cell_type":{"c8bf3298":"code","1e65d92f":"code","69858aa9":"code","e636c320":"code","9be82991":"code","1e7db2ef":"code","fec639f7":"code","df422419":"code","2b73d6dd":"code","4fe4aa7b":"code","8cc2ff7f":"code","7661b159":"code","e1d1f3e0":"code","e852e09a":"code","47c78d42":"code","7ed06994":"code","655362e0":"markdown","5fe84ae2":"markdown","9cafcb80":"markdown","2ac5648c":"markdown","9872c6b7":"markdown"},"source":{"c8bf3298":"# Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","1e65d92f":"# Load data\ndf = pd.read_csv('https:\/\/raw.githubusercontent.com\/pawan-97\/Datasets\/FDS--LAB\/Classified_Data.csv',index_col=0)\n# Head of data set\ndf.head()","69858aa9":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(df.drop('TARGET CLASS',axis=1))\nscaled_feature = scaler.transform(df.drop('TARGET CLASS',axis=1))\n","e636c320":"df_feat = pd.DataFrame(scaled_feature,columns=df.columns[:-1])\ndf_feat.head()","9be82991":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(scaled_feature,df['TARGET CLASS'],test_size=0.30)\n","1e7db2ef":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=1)\nknn.fit(X_train,y_train)","fec639f7":"# Predictions\npred = knn.predict(X_test)","df422419":"from sklearn.metrics import classification_report, confusion_matrix\n","2b73d6dd":"# Confusion Matrix\nconfusion_matrix(y_test,pred)","4fe4aa7b":"# Report\nprint(classification_report(y_test,pred))","8cc2ff7f":"error_rate = []\nfor i in range(1,40):\n  knn = KNeighborsClassifier(n_neighbors=i)\n  knn.fit(X_train,y_train)\n  pred_i = knn.predict(X_test)\n  error_rate.append(np.mean(pred_i != y_test))","7661b159":"error_rate","e1d1f3e0":"# Plotting\nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue',linestyle='dashed',marker='o',\n         markerfacecolor='red',markersize=10)\nplt.title('Error Rate vs K Value')\nplt.xlabel('K Value')\nplt.ylabel('Error Rate')\nplt.show()\n","e852e09a":" # with K=23\nknn = KNeighborsClassifier(n_neighbors=23)\nknn.fit(X_train,y_train)\npred = knn.predict(X_test)","47c78d42":"# Confusion Matrix\nconfusion_matrix(y_test,pred)","7ed06994":"# Report\nprint(classification_report(y_test,pred))","655362e0":"#### Prediction and Evaluations","5fe84ae2":"#### Model Building","9cafcb80":"#### Train Test Split","2ac5648c":"#### Choosing Best K","9872c6b7":"#### Standardization"}}