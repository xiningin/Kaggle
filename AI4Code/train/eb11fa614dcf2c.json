{"cell_type":{"b080bc60":"code","1170fbe4":"code","a3aaa368":"code","8c8bcf51":"code","a61632d4":"code","056bdb60":"code","3a6644df":"code","1c93781b":"code","e3faa00d":"code","80e60dd2":"code","c0dd86bc":"code","c5df1fce":"code","7a0b8372":"code","de28cf7b":"code","3839e9fe":"code","9df9a177":"code","add88b4e":"code","6bf9b33a":"code","91c97454":"code","3d4069c7":"code","8fc60b2b":"code","14c50809":"code","1fb75155":"code","d5c4ecd0":"code","2a16c345":"code","ba899774":"code","3ca043e4":"markdown","df04c531":"markdown","abc4f558":"markdown","7588f4a8":"markdown","11a64ae9":"markdown","de4fedf2":"markdown","87c7602f":"markdown","69de15c9":"markdown","22ab3bad":"markdown","3a485665":"markdown","932f5df9":"markdown","7bfcbe8d":"markdown","ea184d74":"markdown","2a0b101f":"markdown","16835dd9":"markdown","f30ba3bc":"markdown","28dd3e43":"markdown","76293544":"markdown","04fe771e":"markdown"},"source":{"b080bc60":"# Import Libraries\nimport pandas as pd\nimport numpy as np\nimport nltk\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfTransformer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn import metrics","1170fbe4":"# Load the course data files for English into a dataframe using Pandas\ndataframe_english = pd.read_csv(r\"..\/input\/concretext-dataset\/CONcreTEXT_trial_EN.tsv\", sep = \"\\t\")\ndataframe_english","a3aaa368":"# Load the course data files for Italian into a dataframe using Pandas\ndataframe_italian = pd.read_csv(r\"..\/input\/concretext-dataset\/CONcreTEXT_trial_IT.tsv\", sep = \"\\t\")\ndataframe_italian","8c8bcf51":"# Combining both the dataframes using concat function in pandas\ncombined_dataframe = pd.concat([dataframe_english, dataframe_italian])\ncombined_dataframe","a61632d4":"# Question-1\ncondition = [combined_dataframe['MEAN'] <= 4, combined_dataframe['MEAN'] > 4]\nclass_labels = [\"LOW\", 'HIGH']\n    \ncombined_dataframe['CONCRETE'] = np.select(condition, class_labels)\ncombined_dataframe","056bdb60":"combined_dataframe['LEN_OF_CHAR_TARGET'] = combined_dataframe['TARGET'].str.len()\ncombined_dataframe","3a6644df":"combined_dataframe['TARGET_str_len_concrete'] = np.where(combined_dataframe['TARGET'].str.len() >= 5, 'HIGH', 'LOW')\ncombined_dataframe","1c93781b":"# Spliting the training and test data set in 80% : 20% using train_test_split\n\ncombined_df_train, combined_df_test = train_test_split(combined_dataframe, test_size=0.2, shuffle=True, random_state=42)\n\nprint(\"\\t English Language Train data: \\n\\n\", combined_df_train.head(5), \"\\n\\n Length of the Train data is: \", len(combined_df_train))\nprint('\\n')\nprint(\"***********************************************************\")\nprint('\\n')\nprint(\"\\t English Language Test data: \\n\\n\", combined_df_test.head(5), \"\\n\\n Length of the Train data is: \", len(combined_df_test))","e3faa00d":"from sklearn.dummy import DummyClassifier\nX = combined_df_train['TEXT']\ny = combined_df_train['CONCRETE']\ndummy_clf = DummyClassifier(strategy=\"most_frequent\")","80e60dd2":"dummy_clf.fit(X, y)","c0dd86bc":"predict_value = dummy_clf.predict(combined_df_test['CONCRETE'])\npredict_value","c5df1fce":"target_names = combined_df_train['CONCRETE'].unique()\ntarget_names","7a0b8372":"print(metrics.classification_report(combined_df_test['CONCRETE'], predict_value,\n    target_names=target_names))\n\nmetrics.confusion_matrix(combined_df_test['CONCRETE'], predict_value)","de28cf7b":"y_pred = combined_df_test['TARGET_str_len_concrete']","3839e9fe":"target_names = combined_dataframe['CONCRETE'].unique()\n\nprint(metrics.classification_report(combined_df_test['CONCRETE'], y_pred,\n    target_names=target_names))\n\nmetrics.confusion_matrix(combined_df_test['CONCRETE'], y_pred)","9df9a177":"# CountVectorizer() is used for Text preprocessing, tokenizing and filtering of stopwords in the given text.\ncount_vect = CountVectorizer()\ncombined_train_data_count_vect = count_vect.fit_transform(combined_df_train['TEXT'])\ncombined_train_data_count_vect.shape","add88b4e":"combined_df_train['TEXT']","6bf9b33a":"# TfidfTransformer() is used for converting the words occurrences to frequencies\ntfidf_transformer = TfidfTransformer()\ncombined_train_data_count_vect_tfidf = tfidf_transformer.fit_transform(combined_train_data_count_vect)\ncombined_train_data_count_vect_tfidf.shape","91c97454":"naive_bayes_model = MultinomialNB().fit(combined_train_data_count_vect_tfidf, combined_df_train['CONCRETE'])\nnaive_bayes_model","3d4069c7":"category = ['HIGH', 'LOW']\ndocs_new = combined_df_test['TEXT']\nX_new_counts = count_vect.transform(docs_new)\nX_new_tfidf = tfidf_transformer.transform(X_new_counts)\n\npredicted = naive_bayes_model.predict(X_new_tfidf)\npredicted\n\nfor doc, category in zip(docs_new, predicted):\n    #print(predicted)\n    print('%r => %s' % (doc, category))","8fc60b2b":"category = ['HIGH', 'LOW']\nprint(metrics.classification_report(combined_df_test['CONCRETE'], predicted,\n    target_names=category))\n\nmetrics.confusion_matrix(combined_df_test['CONCRETE'], predicted)","14c50809":"df = combined_dataframe \ndf","1fb75155":"def threshold_function (n):\n    df['TARGET_str_len_concrete'] = np.where(df['LEN_OF_CHAR_TARGET'] >= n, 'HIGH', 'LOW')\n    train, test = train_test_split(df, test_size=0.2, random_state=42, shuffle=True)\n    target_names = test['CONCRETE'].unique()\n    print(metrics.classification_report(test['CONCRETE'], test['TARGET_str_len_concrete'],\n    target_names=target_names))\n    print(metrics.confusion_matrix(test['CONCRETE'], y_pred))","d5c4ecd0":"threshold_function(7)","2a16c345":"threshold_function(3)","ba899774":"threshold_function(2)","3ca043e4":"<a href=\"#Question 3 Answer Majority Class Baseline\" style=\"color:blue;\">Click here to have a look at Answer to Question-3 Majority Class Baseline<\/a>","df04c531":"## Predict whether the text is HIGH concrete or LOW concrete","abc4f558":"<a id=\"Question 7 Answer_Different_Thresholds\">\n<\/a>\n\n## Question-7 Answer - Different Thresholds\n","7588f4a8":"<a href=\"#Question 7 Answer_Different_Thresholds\" style=\"color:blue;\">Click here to have a look at Answer to Question 7 - Different Thresholds<\/a>","11a64ae9":"<a id=\"Question 4 Target Length Baseline\">\n<\/a>\n\n\n## Question-4 Answer - Target Length Baseline","de4fedf2":"I have chosen three different threshold values for the Target length 7, 3 and 2 respectively. I chose >=7 as HIGH because, in Q4 we have set the threshold as >=5 and the model gave accuracy as 60%, so I felt that increasing the threshold value would increase the accuracy of the model. But to my suprise, the model performed vice versa. It gave me an accuracy of 40%. \n\nSo, for my next option I chose 2 value less than Q4 (>=5) since the first threshold is two value higher than Q4 threshold, i.e., I opted for 3 as my threshold. The model performed really well and gave me an output of 73% when compared to threshold values >=5 and >=7.\n\nNext, I still wanted to improve the accuracy of the model and reduced my threshold value to >= 2. But the model gave me the same output as of threshold value >= 3. Hence, I finalized that the Target length baseline model gave its best accuracy of 73% at threshold value >=3 and >=2 which equals the NB and majority class baseline accuracy.","87c7602f":"<a id=\"Question 6 Answer_Result_Comparison\">\n<\/a>\n\n## Question-6 Answer - Model Result Comparison","69de15c9":"<a id=\"Question 3 Answer Majority Class Baseline\">\n<\/a>\n\n## Question-3 Answer - Majority Class Baseline","22ab3bad":"## Target Length Baseline","3a485665":"From the above result we can see that the accuracy wise Majority Class baseline model and Naive Bayes Classifier produces the same accuracy of 73% whereas Target length baseline model gives 60% accuracy. Although Majority Class baseline model and Naive Bayes Classifier gives same accuracy result, its precision & recall value differs as (0.72, 1) and (0.74, 0.97) respectively. Also, majority class baseline model considers only the most frequent class not all the classes. But NB includes all the classes and gives an accuracy of 73% which is better than majority class baseline. \n\nAs a result of comparing all the 3 models, based on the above outcome, NB classifier performed better.","932f5df9":"<a href=\"#Question 2 Split the Dataset\" style=\"color:blue;\">Click here to have a look at Answer to Question-2 Split the Dataset<\/a>","7bfcbe8d":"<a id=\"Question 2 Split the Dataset\">\n<\/a>\n\n## Question-2 Answer - Split the Dataset","ea184d74":"## Majority Class Baseline","2a0b101f":"<a href=\"#Question 1 Answer\" style=\"color:blue;\">Click here to have a look at Answer to Question-1 Assigning Class Labels for the combined Dataframe<\/a>","16835dd9":"<a id=\"Question 5 Answer_predict_HIGH_LOW\">\n<\/a>\n\n## Question-5 Answer - Predict whether the text is HIGH concrete or LOW concrete","f30ba3bc":"<a href=\"#Question 6 Answer_Result_Comparison\" style=\"color:blue;\">Click here to have a look at Answer to Question-6 - Model Result Comparison<\/a>","28dd3e43":"<a id=\"Question 1 Answer\">\n<\/a>\n\n## Question-1 Answer - Assigning Class Labels for the combined Dataframe","76293544":"<a href=\"#Question 5 Answer_predict_HIGH_LOW\" style=\"color:blue;\">Click here to have a look at Answer to Question-5 - Predict whether the text is HIGH concrete or LOW concrete<\/a>","04fe771e":"<a href=\"#Question 4 Target Length Baseline\" style=\"color:blue;\">Click here to have a look at Answer to Question-4 Target Length Baseline<\/a>"}}