{"cell_type":{"5c587b3d":"code","ea6ad422":"code","98bf3ad4":"code","15f62597":"code","125b2649":"code","0ba50600":"code","1272a810":"code","ffa2e66a":"code","0de81911":"code","75db2f30":"code","339c84db":"code","7f9bf104":"code","248846e8":"code","06dc4430":"code","6ee29a34":"code","445393b4":"code","e58797a6":"code","3d4017d9":"code","a59670dd":"code","060ca7e6":"code","c294ddd7":"code","cc7835b1":"code","222aeda8":"code","5cc979de":"code","82dbe4a8":"code","66702cdf":"code","6a93fa44":"code","78b2dcac":"markdown"},"source":{"5c587b3d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ea6ad422":"test=pd.read_csv(\"..\/input\/male-female-height-and-weight\/Test set.csv\")\ntrain=pd.read_csv('..\/input\/male-female-height-and-weight\/Training set.csv')","98bf3ad4":"test.head()","15f62597":"train.head()","125b2649":"import matplotlib.pyplot as plt\nimport seaborn as sns","0ba50600":"sns.scatterplot(test.Height,test.Weight, hue=test.Sex)","1272a810":"test['Sex'].replace('Female',0, inplace=True)\ntest['Sex'].replace('Male',1, inplace=True)\ntrain['Sex'].replace('Female',0, inplace=True)\ntrain['Sex'].replace('Male',1, inplace=True)","ffa2e66a":"from sklearn.neighbors import KNeighborsClassifier","0de81911":"knn15=KNeighborsClassifier(n_neighbors=21)","75db2f30":"knn15.fit(train.drop(['Sex'],axis=1),train['Sex'])","339c84db":"predicted=knn15.predict(test.drop(['Sex'],axis=1))","7f9bf104":"len(predicted)","248846e8":"test.Sex[0:204]","06dc4430":"predicted","6ee29a34":"from sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report,confusion_matrix","445393b4":"print(confusion_matrix(test['Sex'],predicted))","e58797a6":"accu=accuracy_score(test['Sex'],predicted)","3d4017d9":"accu","a59670dd":"error_rate = []\nX_train=train.drop(['Sex'],axis=1)\nX_test=test.drop(['Sex'],axis=1)\ny_train=train['Sex']\ny_test=test['Sex']\n\nfor i in range(1,40):\n    \n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    pred_i = knn.predict(X_test)\n    error_rate.append(np.mean(pred_i != y_test))\n\nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',\n         markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","060ca7e6":"from sklearn.metrics import roc_auc_score\nroc_auc_score(y_test, predicted)","c294ddd7":"from sklearn.linear_model import LogisticRegression\n","cc7835b1":"model=LogisticRegression(random_state=0)","222aeda8":"model.fit(X_train, y_train)","5cc979de":"y_predicted = model.predict(X_test)","82dbe4a8":"roc_auc_score(y_test, y_predicted)","66702cdf":"from sklearn import svm\nclf = svm.SVC(kernel='linear') \nclf.fit(X_train, y_train)\ny_predicted = clf.predict(X_test)","6a93fa44":"roc_auc_score(y_test, y_predicted)","78b2dcac":"# Logistic Regression works best"}}