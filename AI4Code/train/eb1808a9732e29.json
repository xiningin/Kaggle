{"cell_type":{"ecca4e26":"code","db19c10f":"code","bca7de5e":"code","ae72068c":"code","16208205":"code","b4ab3ef7":"code","f7aff81f":"code","dc49d1c9":"code","43a8ad07":"code","a218ec34":"code","07a038a4":"code","8a59e410":"code","09bdc449":"code","4921c06e":"code","9bc825ea":"code","d1a760c6":"markdown","9d7749a5":"markdown"},"source":{"ecca4e26":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","db19c10f":"train = pd.read_json(\"..\/input\/train.json\")\ntest = pd.read_json(\"..\/input\/test.json\")","bca7de5e":"train.head()","ae72068c":"print(\"The number of traning examples(data points) = %i \" % train.shape[0])\nprint(\"The number of features we have = %i \" % train.shape[1])","16208205":"train.describe()","b4ab3ef7":"train.isnull().sum()","f7aff81f":"import seaborn as sns\n\n\nimport matplotlib.pyplot as plt\n\n\ncorr = train.corr()\nf, ax = plt.subplots(figsize=(25, 25))\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\nsns.heatmap(corr, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5)","dc49d1c9":"corr","43a8ad07":"((train.is_turkey).value_counts()).plot.bar( ec=\"orange\")","a218ec34":"unique, count= np.unique(train.is_turkey, return_counts=True)\nprint(\"The number of occurances of each class in the dataset = %s \" % dict (zip(unique, count) ), \"\\n\" )","07a038a4":"duration = train.end_time_seconds_youtube_clip - train.start_time_seconds_youtube_clip\ntrain['duration'] = duration","8a59e410":"duration.hist()","09bdc449":"from scipy import stats\nimport numpy as np\n\nz = np.abs(stats.zscore(train.drop(['audio_embedding', 'vid_id', 'is_turkey'], axis = 1)))\n\nzee = (np.where(z > 2.5))[1]\n\nprint(\"number of data examples greater than 2.5 standard deviations = %i \" % len(zee))","4921c06e":"f = plt.figure(figsize=(25,10))\nsns.boxplot(x=train['duration'])","9bc825ea":"print(\"Shape of first audio embedding. 1st dimention = %i, 2nd dimention = %i \" % \n      (np.shape((train.audio_embedding[0]))[0] , np.shape((train.audio_embedding[0]))[1]) ) ","d1a760c6":"Data skewed so we need to consider f-beta score instead of accuracy","9d7749a5":"Most videos duration between 9 and 10 seconds"}}