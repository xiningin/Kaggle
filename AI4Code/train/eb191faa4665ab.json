{"cell_type":{"4b345f45":"code","1fe202b0":"code","a2325717":"code","53e15b1b":"code","90bb25d8":"code","10d7d1d2":"code","73742def":"code","8975e3de":"code","1fc65578":"code","ae92b4d7":"code","6c121eeb":"code","61ba5b2d":"code","dec583f3":"code","ac24afdb":"code","7143a945":"code","dc9bd6d7":"code","918034ae":"markdown","8f8b3a47":"markdown","7df9f812":"markdown","092dbd8e":"markdown","cc8d829b":"markdown","4a5e1a5b":"markdown","21efa26e":"markdown","0d52d55f":"markdown","1d9d47d0":"markdown","0b9576e9":"markdown","151d0023":"markdown","d8399380":"markdown","de69efa1":"markdown"},"source":{"4b345f45":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n\nimport os\nimport seaborn as sns\n#import plotly.express as px\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\n\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1fe202b0":"data_folder = \"\/kaggle\/input\/local-elections-romania-2020\"\ndata_files = os.listdir(data_folder)\n\ndata_df = pd.DataFrame()\nfor data_file in tqdm(data_files):\n    date_hour = data_file.split(\"_\")\n    date = date_hour[1]\n    hour = date_hour[2].split(\"-\")[0]\n    _df = pd.read_csv(os.path.join(data_folder, data_file))\n    _df['date'] = date\n    _df['hour'] = hour\n    data_df = data_df.append(_df)\ndata_df.head(3)","a2325717":"def county_sex_age(data, county, sex):\n    \n    if sex == \"men\":\n        Men18_24 = data[(data[\"Judet\"]== county) & (data[\"hour\"]==\"21\")][\"Barbati 18-24\"].sum()\n\n        Men25_34 = data[(data[\"Judet\"]== county) & (data[\"hour\"]==\"21\")][\"Barbati 25-34\"].sum()\n\n        Men35_44 =  data[(data[\"Judet\"]== county) & (data[\"hour\"]==\"21\")][\"Barbati 35-44\"].sum()\n\n        Men45_64 =  data[(data[\"Judet\"]== county) & (data[\"hour\"]==\"21\")][\"Barbati 45-64\"].sum()\n\n        Men65 =  data[(data[\"Judet\"]== county) & (data[\"hour\"]==\"21\")][\"Barbati 65+\"].sum()\n\n\n        men = pd.DataFrame([Men18_24,Men25_34, Men35_44, Men45_64, Men65 ], index= data.columns[14:19])\n        men.columns = [\"Value\"]\n        return(men)\n       \n    if sex == \"women\":\n        Women18_24 = data[(data[\"Judet\"]== county) & (data[\"hour\"]==\"21\")][\"Femei 18-24\"].sum()\n\n        Women25_34 = data[(data[\"Judet\"]== county) & (data[\"hour\"]==\"21\")][\"Femei 25-34\"].sum()\n\n        Women35_44 =  data[(data[\"Judet\"]== county) & (data[\"hour\"]==\"21\")][\"Femei 35-44\"].sum()\n\n        Women45_64 =  data[(data[\"Judet\"]== county) & (data[\"hour\"]==\"21\")][\"Femei 45-64\"].sum()\n\n        Women65 =  data[(data[\"Judet\"]== county) & (data[\"hour\"]==\"21\")][\"Femei 65+\"].sum()\n\n\n        Women = pd.DataFrame([Women18_24, Women25_34, Women35_44, Women45_64, Women65 ], index= data.columns[19:24])\n        Women.columns = [\"Value\"]\n        return(Women)","53e15b1b":"County = \"BH\"\nSex =\"men\"\ncounty_sex_age(data_df, County , Sex )","90bb25d8":"def county_sex_age_pie(county, sex):\n    df = county_sex_age(data_df, County , Sex )\n\n    fig1, ax1 = plt.subplots(figsize=(20, 10))\n    ax1.pie(df[\"Value\"], labels=df.index, autopct='%1.1f%%',\n            shadow=True, startangle=90)\n    ax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n    plt.legend(fontsize=15)\n    plt.rcParams.update({'font.size': 10})\n    plt.show()","10d7d1d2":"County = \"B\"\nSex =\"men\"\ncounty_sex_age_pie(County, Sex)","73742def":"Judet = data_df[\"Judet\"].drop_duplicates().to_list()\n\nvotes = []\n\nfor i in tqdm(Judet):\n    \n    votes.append(county_sex_age(data_df,i, \"men\").sum()[0] + county_sex_age(data_df,i, \"women\").sum()[0])","8975e3de":"Vote_judet = pd.DataFrame([Judet,votes]).T\nVote_judet.columns = [\"Judet\", \"Votes\"]\n\nVote_judet = Vote_judet.sort_values('Votes', ascending = False)\nf, (ax1) = plt.subplots(figsize=(15, 7))\nsns.barplot(x=Vote_judet.Judet, y=Vote_judet.Votes, palette=\"rocket\", ax=ax1)\nax1.axhline(0, color=\"k\", clip_on=False)\n#ax1.set_ylabel(\"Sequential\") ","1fc65578":"votesM = []\nvotesW = []\n\nfor i in tqdm(Judet):\n    \n    votesM.append(county_sex_age(data_df,i, \"men\").sum()[0])\n    votesW.append(county_sex_age(data_df,i, \"women\").sum()[0])\n","ae92b4d7":"fig1, ax1 = plt.subplots(figsize=(18, 8))\nax1.pie([sum(votesM),sum(votesW)], labels=[\"Men\",\"Women\"], autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.legend(fontsize=15)\nplt.rcParams.update({'font.size': 16})\nplt.show()","6c121eeb":"sex_age = data_df.columns[14:24]\ncol = [\"Judet\"]\ncol.extend(sex_age)\n\nsex_age_complete = data_df[col].groupby(\"Judet\").agg(sum).sum().sort_values()\n\nfig1, ax1 = plt.subplots(figsize=(18, 8))\nax1.pie(sex_age_complete, labels=sex_age_complete.index, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.legend(fontsize=15)\nplt.rcParams.update({'font.size': 16})\nplt.show()","61ba5b2d":"votesHour = data_df[[\"Judet\", \"LT\", \"hour\"]].groupby([\"Judet\",\"hour\"]).sum(\"LT\").reset_index()\nvotesHour.hour = pd.to_numeric(votesHour.hour)\nvotesHour = votesHour.pivot(\"hour\", \"Judet\", \"LT\")\n\nsns.set(rc={'figure.figsize':(15,12)})\ng = sns.lineplot(data=votesHour, dashes=False)\ng.text(18, 600000, \"Judet = B\", horizontalalignment='left', size='medium', color='black', weight='semibold')\ng.text(18, 45000, \"Judet = CV\", horizontalalignment='left', size='medium', color='black', weight='semibold')","dec583f3":"def percrnt_part(County, UAT):\n\n    total_Votes = data_df[(data_df[\"Judet\"]== County) & (data_df[\"UAT\"]== UAT) & (data_df[\"hour\"]==\"21\")][\"LT\"].sum()\n\n    total_VPLP = data_df[(data_df[\"Judet\"]== County) & (data_df[\"UAT\"]== UAT) & (data_df[\"hour\"]==\"21\")][\"Votanti pe lista permanenta\"].sum()\n    total_VPLC = data_df[(data_df[\"Judet\"]== County) & (data_df[\"UAT\"]== UAT) & (data_df[\"hour\"]==\"21\")][\"Votanti pe lista complementara\"].sum()\n    total = total_VPLP + total_VPLC\n    return(total_Votes\/total)\n\n\npercrnt_part(\"AB\", \"MUNICIPIUL ALBA IULIA\")","ac24afdb":"Per_part = pd.DataFrame(data_df[[\"Judet\", \"UAT\"]].drop_duplicates().apply(lambda x: percrnt_part(x['Judet'], x['UAT']), axis=1))\nPer_part.columns = [\"per\"]\nPer_part = Per_part.reset_index(drop = True)","7143a945":"sns.set_style(\"darkgrid\", {\"axes.facecolor\": \".9\"})\ntips = sns.load_dataset(\"tips\")\n#ax = sns.boxplot(y=\"per\", data=Per_part)\n#fig.set_size_inches(, 15)\nplt.figure(figsize=(15,12))\nax = sns.swarmplot(y=\"per\", data=Per_part , color = \"blue\")","dc9bd6d7":"X = data_df[[\"Judet\", \"UAT\"]].drop_duplicates().reset_index(drop= True)\nX = pd.concat([X,Per_part], axis = 1)\nX[X[\"per\"] > 1]","918034ae":"# We can notice that there are no significant differences in the number of votes between the global sexes","8f8b3a47":"# Function that creates information about the number of votes by sex and age","7df9f812":"# Accumulated votes by county","092dbd8e":"# Example of this function\n","cc8d829b":"# Example of this function","4a5e1a5b":"# Votes By sex","21efa26e":"#  <span style=\"color:red\">In these places there is a participation percentage greater than 1, which does not make sense, this could be irregularities or outliers.<\/span>","0d52d55f":"# Votes by county","1d9d47d0":"# We created a function that measures the percentage of votes counted and the total maximum on the permanent and supplementary lists","0b9576e9":"![](https:\/\/lyme-online.co.uk\/wp-content\/uploads\/2019\/03\/Social-Media-Marketing-Political-Election-Campaign-Propaganda.jpg)","151d0023":"# Function that creates pie charts by sex, age and county","d8399380":"# Looking at the distribution by sex and age, we see that the largest proportion of voters are those between 45 and 64 years old.","de69efa1":"# We calculate this percentage for the following locations"}}