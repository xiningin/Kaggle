{"cell_type":{"45824b53":"code","b328ba63":"code","71190920":"code","0af7e1b5":"code","d2758291":"code","34fad30f":"code","8b51a764":"code","82403230":"code","106406b0":"code","2ec07030":"code","5dcd2209":"code","2a99bf16":"code","6aa26cef":"code","fb62ee0c":"code","881f15ef":"code","f28b5fd9":"code","f08f431e":"code","2f940a7a":"code","1a0131a1":"code","e90b1290":"code","b885209f":"code","f36bf8a8":"code","b8183f15":"code","fafd9cc7":"code","0cc786c7":"code","271345b2":"code","d3573bf7":"code","07001bf7":"code","85582b72":"code","2092d346":"code","801f904e":"code","6d12e92f":"code","14b0e199":"code","c62d22de":"code","33f67200":"code","f817fcbf":"code","eeaf6e8d":"code","20e55ebf":"code","3e31a2a6":"code","ae2e74c1":"markdown","73b052bb":"markdown","18c44b94":"markdown","3d3267db":"markdown","399b099b":"markdown","97b95655":"markdown","3d594862":"markdown","55d3acc1":"markdown","943b9e8e":"markdown","660a788c":"markdown","cb524cc9":"markdown","25ca4aea":"markdown","fa5ef44a":"markdown","0d8617bc":"markdown"},"source":{"45824b53":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b328ba63":"! pip install dexplot","71190920":"# Importing the necessary Libraries\n\n# Importing the necessary libraries\n\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px \nimport plotly.graph_objs as go\nfrom plotly.offline import iplot","0af7e1b5":"df = pd.read_csv('\/kaggle\/input\/trial-and-terror\/trial_and_terror.csv')","d2758291":"df.head()","34fad30f":"# Getting info about the datatype\n\ndf.info()","8b51a764":"# Shape of the data\ndf.shape","82403230":"# Describing the data\ndf.describe()","106406b0":"# Cheking for the null values in the dataset\n\ndf.isnull().sum()","2ec07030":"# For finer-grained control, the thresh parameter lets you specify a minimum number of non-null values for the row\/column to be kept\n# Here I am taking that threshold as 408, so any row having values greater than or equal to 408 will be kept intact\n\ndf.dropna(axis='columns', thresh=408, inplace = True)\ndf","5dcd2209":"df['description']","2a99bf16":"labels = df['race'].value_counts().index\nvalues = df['race'].value_counts().values\n\ncolors = df['race']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","6aa26cef":"# Lets try to plot in how many cases guilty person has been released\n\nlabels = df['released'].value_counts().index\nvalues = df['released'].value_counts().values\n\ncolors = df['released']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","fb62ee0c":"# Lets see the disposition status of the guilty person\n\nlabels = df['disposition'].value_counts().index\nvalues = df['disposition'].value_counts().values\n\ncolors = df['disposition']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","881f15ef":"# Lets look at the gender \n\nlabels = df['gender'].value_counts().index\nvalues = df['gender'].value_counts().values\n\ncolors = df['gender']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","f28b5fd9":"# Plotting the instituitional name display\n\nlabels = df['institution_nameDisplay'].value_counts().index\nvalues = df['institution_nameDisplay'].value_counts().values\n\ncolors = df['institution_nameDisplay']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","f08f431e":"# Plotting the instituition city where crime has been done\n\nlabels = df['institution_city'].value_counts().index\nvalues = df['institution_city'].value_counts().values\n\ncolors = df['institution_city']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","2f940a7a":"# Plotting the instituition state where crime has been done\n\nlabels = df['institution_state'].value_counts().index\nvalues = df['institution_state'].value_counts().values\n\ncolors = df['institution_state']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","1a0131a1":"\n\n# Plotting the institution_securityLevel where crime has been done\n\nlabels = df['institution_securityLevel'].value_counts().index\nvalues = df['institution_securityLevel'].value_counts().values\n\ncolors = df['institution_securityLevel']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","e90b1290":"# Lets plot the data of case_district for top 10 districts having the max number of the cases\n\nlabels = df['case_district'].value_counts()[:10].index\nvalues = df['case_district'].value_counts()[:10].values\n\ncolors = df['case_district']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","b885209f":"# Lets plot the data of case_imprisonment\nlabels = df['case_imprisonment'].value_counts().index\nvalues = df['case_imprisonment'].value_counts().values\n\ncolors = df['case_imprisonment']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","f36bf8a8":"# Lets plot the data of case_restitutiont \nlabels = df['case_state'].value_counts().index\nvalues = df['case_state'].value_counts().values\n\ncolors = df['case_state']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","b8183f15":"\n# Lets plot the data of case_restitutiont \n\nlabels = df['case_sting'].value_counts().index\nvalues = df['case_sting'].value_counts().values\n\ncolors = df['case_sting']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","fafd9cc7":"# Lets plot the data of first case charge of the criminals \nlabels = df['case_charge_1'].value_counts().index\nvalues = df['case_charge_1'].value_counts().values\n\ncolors = df['case_charge_1']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","0cc786c7":"# Lets plot the data of second case charge of the criminals \n\nlabels = df['case_charge_2'].value_counts().index\nvalues = df['case_charge_2'].value_counts().values\n\ncolors = df['case_charge_2']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","271345b2":"  \n\n# Lets plot the data of terror org of the criminals \n\nlabels = df['case_terrorOrg_1'].value_counts().index\nvalues = df['case_terrorOrg_1'].value_counts().values\n\ncolors = df['case_terrorOrg_1']\n\nfig = go.Figure(data=[go.Pie(labels = labels, values=values, textinfo=\"label+percent\", marker=dict(colors=colors))])\nfig.show()","d3573bf7":"import dexplot as dxp\n\ndxp.count(val='race', data=df, figsize=(4,3), normalize=True)","07001bf7":"# Lets plot the relation between the race and the released data of the criminals\n\ndxp.count(val='released', data=df, split='race', figsize=(10,7), normalize=True)","85582b72":"# Lets plot the relation between the race and the disposition status of the criminals\n\ndxp.count(val='race', data=df, split='disposition', figsize=(10,7), normalize=True)","2092d346":"# Lets plot the relation between the race and the gender status of the criminals\n\ndxp.count(val='race', data=df, split='gender', figsize=(10,7), normalize=True)","801f904e":"# Lets plot the relation between the released and the gender status of the criminals\n\ndxp.count(val='released', data=df, split='gender', figsize=(10,7), normalize=True)","6d12e92f":"# Lets plot the relation between the released and the disposition status of the criminals\n\ndxp.count(val='released', data=df, split='disposition', figsize=(10,7), normalize=True)","14b0e199":"# Lets plot the relation between the disposition and the gender status of the criminals\n\ndxp.count(val='disposition', data=df, split='gender', figsize=(10,7), normalize=True)","c62d22de":"# Visualize the relation between the race and the terror organization they are asscociated with\n\ndxp.count(\nval='case_terrorOrg_1',\ndata=df,\nsplit='race',\norientation=\"h\",\nstacked=True,\nfigsize=(6,4),\nxlabel=\"Race Distribution\")\n","33f67200":"# Visualize the relation between the race and the case charge 1 they are asscociated with\n\ndxp.count(\nval='case_charge_1',\ndata=df,\nsplit='race',\norientation=\"h\",\nstacked=True,\nfigsize=(8,6),\nxlabel=\"Race Distribution\")\n","f817fcbf":"# Visualize the relation between the race and the case charge 2 they are asscociated with\n\ndxp.count(\nval='case_charge_2',\ndata=df,\nsplit='race',\norientation=\"h\",\nstacked=True,\nfigsize=(8,6),\nxlabel=\"Race Distribution\")","eeaf6e8d":"# Visualize the relation between the race and the state in which the crime has been committed\n\ndxp.count(\nval='case_state',\ndata=df,\nsplit='race',\norientation=\"h\",\nstacked=True,\nfigsize=(8,6),\nxlabel=\"Race Distribution\")","20e55ebf":"\n\n# Visualize the relation between the race and the case_imprisonment of the crime  committed\n\ndxp.count(\nval='case_imprisonment',\ndata=df,\nsplit='race',\norientation=\"h\",\nstacked=True,\nfigsize=(12,8),\nxlabel=\"Race Distribution\")","3e31a2a6":"# Visualize the relation between the race and the case_imprisonment of the crime  committed\n\ndxp.count(\nval='case_district',\ndata=df,\nsplit='race',\norientation=\"h\",\nstacked=True,\nfigsize=(12,8),\nxlabel=\"Race Distribution\")","ae2e74c1":"## Visualization","73b052bb":"There is 808 rows and 39 columns","18c44b94":"From the above datasets we can see that maximum years for the case imprisonment is 86 years","3d3267db":"In almost half of the case the person has been released ","399b099b":"Most of the time crime has been done when the security was either low or medium","97b95655":"Brooklyn MDC has the highest number of 'institution_nameDisplay'","3d594862":"New York accounts for the maximum number of the criminal cases and its more than 25% of the total criminal cases, and New York together with Virginia, Florida and California constitutes around 50% of the total criminal cases","55d3acc1":"As per the data given most of the crime has been done by the White People","943b9e8e":"From the above plot we can see that white people have more true rate for being released compare to others and when coming to released being false Black and Asian have high rate as of comparing to their ratio in crimes","660a788c":"For the most of the person charged with criminal cases they have been charged for material support followed by immigration violations, criminal conspiracy and so on","cb524cc9":"Al Qaeda and ISIS are the biggest terror organization ","25ca4aea":" From the above plot we can see that Eastern and Southern District of New York has the highest number of the criminal cases","fa5ef44a":"#### Guys if you found this notebook please upvote it\n\n#### Please feel free to comment for any Queries and Suggetions\n\n#### This notebook is not yet completed will do a lot of things to make it more interesting, feel free to suggest me","0d8617bc":"More than 90% of the crime has been done by the Male"}}