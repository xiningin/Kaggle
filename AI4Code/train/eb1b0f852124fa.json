{"cell_type":{"420246ac":"code","c227e1f4":"code","558ee2f6":"code","393766f9":"code","1297206d":"code","cbbd431e":"code","dd60ba0d":"code","4ebefba1":"code","98634a08":"code","bd3e30d5":"code","3a17dfb5":"code","93c14034":"code","8df0d651":"code","f798d70f":"code","7c2bd034":"code","54e017bf":"code","77d9f60a":"code","68c16ac1":"code","f671c6e1":"code","4aba9c88":"code","cdd79b8f":"code","b3da30bf":"code","0697d045":"code","c57bc79a":"code","d85b9a36":"code","5d1d58b1":"code","e57abbec":"code","939028cb":"code","c007c662":"code","ef1d9d3f":"code","f2df1eeb":"code","242d7ab5":"code","f1856b99":"code","78cb8ac2":"markdown","f6de1f16":"markdown","0b0756b8":"markdown","e3aa0555":"markdown","721db379":"markdown","3835cc86":"markdown","8e810943":"markdown","5f3e15da":"markdown","d379fc3a":"markdown","2b38f13e":"markdown","e5d2c7e7":"markdown","692e8d0b":"markdown","2ca5c22a":"markdown","da512fe3":"markdown","a084a0a1":"markdown"},"source":{"420246ac":"# importings\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","c227e1f4":"train_df = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/titanic\/test.csv\")","558ee2f6":"train_df.head()","393766f9":"print(\"train data shape : \", train_df.shape)\nprint(\"test data shape : \", test_df.shape)","1297206d":"train_df.info()","cbbd431e":"test_df.info()","dd60ba0d":"train_df.describe().T","4ebefba1":"train_df.describe(include = \"O\").T","98634a08":"plt.figure(figsize = (8,6))\nplt.hist(data = train_df, x = 'Age')\nplt.xlabel(\"Age\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Distribution Of Age\");","bd3e30d5":"# Distribution of Age For Survived And Non Survived\ng = sns.FacetGrid(data = train_df, col = 'Survived', sharey = False)\ng.map(plt.hist, \"Age\");","3a17dfb5":"# Distribution of gender\nbase_color = sns.color_palette()[0]\nidx = train_df['Sex'].value_counts().index\nsns.countplot(data = train_df, x = \"Sex\", color = base_color, order = idx);\n","93c14034":"# Distribution of Pclass\nidx = train_df['Pclass'].value_counts().index\nsns.countplot(data = train_df, x = \"Pclass\", color = base_color, order = idx);","8df0d651":"# Sex VS Survived\nSex_Survived = train_df[[\"Sex\", 'Survived']].groupby(\"Sex\", as_index = False).mean()\nSex_Survived","f798d70f":"sns.barplot(data = Sex_Survived, x = 'Sex', y = 'Survived', color = base_color)","7c2bd034":"# Pclas VS Survived\nPclass_Survived = train_df[[\"Pclass\", 'Survived']].groupby(\"Pclass\", as_index = False).mean()\nPclass_Survived","54e017bf":"sns.barplot(data = Pclass_Survived, x = 'Pclass', y = 'Survived', color = base_color);","77d9f60a":"# Embarked Distribution\ntrain_df['Embarked'].value_counts().plot(kind = 'bar', color = base_color)\nplt.xticks(rotation = 60);","68c16ac1":"# Embarked VS Survived\nEmbarked_Survived = train_df[[\"Embarked\", 'Survived']].groupby(\"Embarked\", as_index = False).mean()\nEmbarked_Survived","f671c6e1":"sns.barplot(data = Embarked_Survived, x = 'Embarked', y = 'Survived', color = base_color);","4aba9c88":"# filling data in Age\nall_data = [train_df, test_df]\nfor data in all_data :\n    age_sample = data['Age'].dropna().sample(data['Age'].isnull().sum())\n    age_sample.index = data[data['Age'].isnull()].index\n    data.loc[data['Age'].isnull(), 'Age'] = age_sample\n# check for Age nulls\nprint(train_df['Age'].isnull().sum())\nprint(test_df['Age'].isnull().sum())             ","cdd79b8f":"age_sample = test_df['Fare'].dropna().sample(test_df['Fare'].isnull().sum())\nage_sample.index = test_df[test_df['Fare'].isnull()].index\ntest_df.loc[test_df['Fare'].isnull(), 'Fare'] = age_sample\n# check for nulls\ntest_df[\"Fare\"].isnull().sum()","b3da30bf":"# Filling nans in Embarked\ntrain_df['Embarked'].fillna(train_df[\"Embarked\"].mode()[0], inplace = True)\n# check \ntrain_df['Embarked'].isnull().sum()","0697d045":"print(f\"Number of features in train data before dropping is {train_df.shape[1]}\")\nprint(f\"Number of features in test data before dropping is {test_df.shape[1]}\")\ntrain_df.drop(columns = ['PassengerId', 'Cabin', 'Name', 'Ticket'], axis = 1, inplace = True)\ntest_df.drop(columns = ['PassengerId','Name', 'Cabin', 'Ticket'], axis = 1, inplace = True)\n# Check for Dropping Features\nprint(f\"Number of features in train data after dropping is {train_df.shape[1]}\")\nprint(f\"Number of features in test data after dropping is {test_df.shape[1]}\")\n","c57bc79a":"for data in all_data :\n    data[\"Family Size\"] = data['SibSp'] + data['Parch'] + 1\n    data.drop(columns = ['SibSp', 'Parch'], axis = 1, inplace = True)\n    ","d85b9a36":"# Sex\nfor data in train_df, test_df :\n    data['Sex'] = data['Sex'].map({'male' : 0, 'female' : 1}).astype(int)\n","5d1d58b1":"# Age Feature\ntrain_df['Age Band'] = pd.cut(train_df['Age'], 5)\ntrain_df[['Age Band', 'Survived']].groupby(['Age Band'], as_index = False).mean().sort_values(by = 'Survived', ascending = False)","e57abbec":"for data in [train_df, test_df] :\n    data['Age'] = pd.cut(data['Age'], bins = [data['Age'].min(), 16, 32, 48, 64, data['Age'].max()], labels = [5, 2, 3, 4, 1 ])","939028cb":"# Fare Feature\ntrain_df['Fare Band'] = pd.cut(train_df['Fare'], 5)\ntrain_df[['Fare Band', 'Survived']].groupby(['Fare Band'], as_index = False).mean().sort_values(by = 'Survived', ascending = False)","c007c662":"for data in [train_df, test_df] :\n    data['Fare'] = pd.cut(data['Fare'], bins = [data['Fare'].min(), 102, 204, 307, 409, data['Fare'].max()], labels = [1, 3, 2, 0, 4 ])","ef1d9d3f":"# Dropping Age Band And Fare Band\ntrain_df.drop(['Age Band', 'Fare Band'], axis = 1, inplace = True)","f2df1eeb":"train_df = pd.get_dummies(data = train_df, columns = ['Embarked'])\ntest_df = pd.get_dummies(data = test_df, columns = ['Embarked'])","242d7ab5":"train_df.head()","f1856b99":"test_df.head()","78cb8ac2":"2. Dropping some features","f6de1f16":"5. Cutting Age and Fare into Bands","0b0756b8":"#### Test Data \n1. there is missing values in Age, Fare and Cabin\n2. Missing in Cabin also is huge[327]","e3aa0555":"6. Getting Dummies For Embarked","721db379":"# Exploring And Vosualizing Data To Gain Insights","3835cc86":"> The Majority of Females are Survived","8e810943":"3. Collecting [SipSp] and [Parch] in one Feature [Family Size]","5f3e15da":"1. The Distribution Of Age","d379fc3a":"# Preparing Data For The Model","2b38f13e":"#### Train Data\n1. there is missing values in Age, Cabin and Embarked\n2. Missing in Cabin is huge [627] ","e5d2c7e7":"## Univariate And Bivariate Exploration For More Exploring","692e8d0b":"# Get The Data","2ca5c22a":"# Data Is Ready For The Model","da512fe3":"4. Encoding Categorical Features","a084a0a1":"### Handilig Missing Data"}}