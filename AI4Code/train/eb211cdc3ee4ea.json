{"cell_type":{"404e0bf1":"code","664f1bb0":"code","28b5c319":"code","04cb20fa":"code","78fff5de":"code","657c53f2":"code","9bd7af76":"code","b62917fd":"code","e2695135":"code","3e8a0668":"code","1013b354":"code","98dcf446":"code","7198369a":"markdown","954d6126":"markdown"},"source":{"404e0bf1":"# Generic Libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport re\n\n# Plotting Libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport plotly.express as pex\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\n\nfrom bokeh.layouts import gridplot\nfrom bokeh.plotting import figure, output_file, show","664f1bb0":"#Load Data\nurl = '..\/input\/handwashing-vs-childbed-fever\/monthly_deaths.csv'\ndata = pd.read_csv(url, header='infer')","28b5c319":"#Check for null values\ndata.isna().sum()","04cb20fa":"print(\"Total Records: \",data.shape[0])","78fff5de":"#Processing date column\n\ndata.date = pd.to_datetime(data.date, format='%Y-%m-%d')\ndata['year'] = data.date.apply(lambda x: x.year)\ndata['month'] = data.date.apply(lambda x: x.month)\ndata['day'] = data.date.apply(lambda x: x.day)\n\n#Dropping the Date Column\ndata = data.drop(columns='date', axis=1)\n","657c53f2":"#Inspect\ndata.head()","9bd7af76":"# HeatMap of Births\nbr = data.pivot_table(index=\"year\",columns=\"month\",values=\"births\",fill_value=0)\nplt.figure(figsize=(15,8))\nplt.title('Births - HeatMap [Year vs Month]', fontsize=15)\nplt.tick_params(labelsize=10)\nax = sns.heatmap(br, cmap='Greys', linecolor='grey',linewidths=0.1, cbar=False, annot=True, fmt=\"\")","b62917fd":"# HeatMap of Deaths\ndt = data.pivot_table(index=\"year\",columns=\"month\",values=\"deaths\",fill_value=0)\nplt.figure(figsize=(15,10))\nplt.title('Deaths - HeatMap', fontsize=15)\nplt.tick_params(labelsize=10)\nax = sns.heatmap(dt, cmap='Greys', linecolor='grey',linewidths=0.1, cbar=False, annot=True, fmt=\"\")","e2695135":"cols = ['births','deaths']\n\nlayout = dict(title='Births & Deaths from 1841-1849 (with plotly)',)\n\nfig = go.Figure([{\n    'x': data.year,\n    'y': data[col],\n    'name': col\n}  for col in cols], layout)\n\niplot(fig)","3e8a0668":"def plot_sumry(dataframe,col1,col2):\n\n    sns.set_palette('pastel')\n    sns.set_color_codes()\n    fig = plt.figure(figsize=(15, 15))\n    plt.subplots_adjust(hspace = 0.9)\n    \n    plt.subplot(221)\n    ax1 = sns.lineplot(x=\"year\", y=col1, data=dataframe, color = 'midnightblue')\n    plt.title(f'{col1.capitalize()} from 1841-1849(with seaborn)', fontsize=13)\n    \n    plt.subplot(222)\n    ax2 = sns.lineplot(x=\"year\", y=col2, data=dataframe, color = 'midnightblue')\n    plt.title(f'{col1.capitalize()} from 1841-1849(with seaborn)', fontsize=13)","1013b354":"plot_sumry (data,'births','deaths')","98dcf446":"x = data.pivot_table(index='year',values=['births','deaths'],aggfunc=np.mean)\nx.plot(figsize=(15,8))\nplt.title(\"Average Births & Deaths from 1841-1849\", fontsize=15)","7198369a":"# Plotting Time Data\n\nIn this notebook we are going to learn to plot some elegant charts based on the time series data. For this we're going to use the [Handwashing vs Childbed Fever Dataset](https:\/\/www.kaggle.com\/yassershrief\/handwashing-vs-childbed-fever).\n\nPlease consider to **UPVOTE** if you find this notebook helpful :-).","954d6126":"## Plotting Time Series"}}