{"cell_type":{"3c5f2a2a":"code","80743371":"code","1ed14575":"code","aa231f9f":"code","6cf35284":"code","ca27fd0b":"code","e8f751ba":"code","9ab4b06b":"code","67cb7ddf":"code","4d82e9a3":"code","e131776e":"code","ca6e298b":"markdown","f5f1ce57":"markdown","734516a5":"markdown","ae32c594":"markdown","b95fad78":"markdown","0fcd6a9f":"markdown","b923fd1f":"markdown"},"source":{"3c5f2a2a":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nfrom datetime import date\nfrom operator import itemgetter\nimport matplotlib.ticker as ticker\n\nprint(\"Setup complete\")","80743371":"dog17_filepath = \"..\/input\/dogs-of-zurich\/20170308hundehalter.csv\"\ndog17data = pd.read_csv(dog17_filepath,index_col='HALTER_ID')\ndog17data['ALTER'].dropna()\ndf = pd.read_csv(dog17_filepath,index_col='HALTER_ID')\ndf.dropna(subset = [\"ALTER\"], inplace=True)\nprint('nans dropped and ready to go')\ndf.head()","1ed14575":"df.describe(include = 'all')","aa231f9f":"df.dtypes","6cf35284":"# making a new df so as not to mess with the primary one\n# goal = get rid of the one row with nan value for ALTER, although it does have dog geburtsjahr.\n# the above problem caused graph to not work because length of the y and x axis did not match, so had to get rid of whole row.\ndf = pd.read_csv(dog17_filepath,index_col='HALTER_ID')\ndf.dropna(subset = [\"ALTER\"], inplace=True)\n# then I made a dog age variable, to make it easier to show age.\ndf['dog_age'] = 2017 - df['GEBURTSJAHR_HUND']\n# further made b and a variable to get columns needed for graph.\nb = df['dog_age'][(df['dog_age'] >= 0) & (df['dog_age'] <= 25)]\n# 'a' variable was changed so that x values for ALTER are sorted from youngest to oldest, to be able to later make regression line.\n\nf, (ax_box, ax_hist) = plt.subplots(2, sharex=True, gridspec_kw= {\"height_ratios\": (0.2, 1)},figsize=(15,10))\n\nmean=b.mean()\nmedian=b.median()\n# mode=b.mode().get_values()[0]\n\nsns.set_style(\"darkgrid\")\n\nsns.boxplot(b, ax=ax_box)\nax_box.axvline(mean, color='r', linestyle='--')\nax_box.axvline(median, color='g', linestyle='-')\n# ax_box.axvline(mode, color='b', linestyle='-')\n\nsns.distplot(a=b,hist=True, bins=np.arange(min(b)-0.5, max(b)+1, 1), ax = ax_hist)\nax_hist.axvline(mean, color='r', linestyle='--')\nax_hist.axvline(median, color='g', linestyle='-')\n# ax_hist.axvline(mode, color='b', linestyle='-')\n\nplt.xticks(np.arange(min(b), max(b)+1, 1))\nplt.xlabel('Age Dog', fontsize=12)\nplt.title(\"Distribution of dog age\", fontsize=20)\nplt.xlim(min(b), max(b) + 1)\n\nplt.legend({'Mean':mean,'Median':median})\nax_box.set(xlabel='')\nplt.show()","ca27fd0b":"df['dog_age'] = 2017 - df['GEBURTSJAHR_HUND']\nowner = df['ALTER']\ns_owner = sorted(owner)\nage = df['dog_age'][(df['dog_age'] >= 0) & (df['dog_age'] <= 25)]\nsex = df['GESCHLECHT_HUND']\n\nplt.figure(figsize=(15,5))\nax = sns.barplot(x=s_owner, y=age,hue=sex)\n\nl = plt.legend()\nl.get_texts()[0].set_text('Female dog')\nl.get_texts()[1].set_text('Male dog')\n\nplt.xlabel('Owner age', fontsize=12)\nplt.ylabel('Dog age', fontsize=12)\nplt.title('Average dog age per dog sex and owner age group', fontsize=20)\n\nplt.show()","e8f751ba":"df['dog_age'] = 2017 - df['GEBURTSJAHR_HUND']\nowner = df['ALTER']\nowner_sex = df['GESCHLECHT']\ns_owner = sorted(owner)\nage = df['dog_age'][(df['dog_age'] >= 0) & (df['dog_age'] <= 25)]\nsex = df['GESCHLECHT_HUND']\n\nplt.figure(figsize=(15,5))\nax = sns.barplot(x=s_owner, y=age,hue=owner_sex)\n\nl = plt.legend()\nl.get_texts()[0].set_text('Female owner')\nl.get_texts()[1].set_text('Male owner')\n\nplt.xlabel('Owner age', fontsize=12)\nplt.ylabel('Dog age', fontsize=12)\nplt.title('Average dog age per owner sex and owner age group', fontsize=20)\n\nplt.show()","9ab4b06b":"# first, convert float column of stadtkreis to integers.\ndf['STADTKREIS'] = df['STADTKREIS'].fillna(0.0).astype(int)\n\n# second, make separate dfs for all city districts.\ndistrict_1 = df[df.STADTKREIS == 1]\ndistrict_2 = df[df.STADTKREIS == 2]\ndistrict_3 = df[df.STADTKREIS == 3]\ndistrict_4 = df[df.STADTKREIS == 4]\ndistrict_5 = df[df.STADTKREIS == 5]\ndistrict_6 = df[df.STADTKREIS == 6]\ndistrict_7 = df[df.STADTKREIS == 7]\ndistrict_8 = df[df.STADTKREIS == 8]\ndistrict_9 = df[df.STADTKREIS == 9]\ndistrict_10 = df[df.STADTKREIS == 10]\ndistrict_11 = df[df.STADTKREIS == 11]\ndistrict_12 = df[df.STADTKREIS == 12]","67cb7ddf":"fig, ((ax1, ax2, ax3), (ax4, ax5, ax6), (ax7, ax8, ax9), (ax10, ax11, ax12)) = plt.subplots(nrows=4, ncols=3, figsize=(30,20))\nplt.subplots_adjust(hspace=0.5)\n\n# district 1 plot\nd1_races = district_1['RASSE1'].value_counts()\nd1_races = d1_races\/sum(d1_races)\nd1_races_percent = (d1_races*100).head(5)\nax1.bar(d1_races_percent.index , d1_races_percent)\nax1.set_title('District 1')\nax1.set_ylabel('% race in district')\nax1.set_xticklabels(d1_races_percent.index, rotation=30)\n\n# district 2 plot\nd2_races = district_2['RASSE1'].value_counts()\nd2_races = d2_races\/sum(d2_races)\nd2_races_percent = (d2_races*100).head(5)\nax2.bar(d2_races_percent.index , d2_races_percent)\nax2.set_title('District 2')\nax2.set_ylabel('% race in district')\nax2.set_xticklabels(d2_races_percent.index, rotation=30)\n\n# district 3 plot\nd3_races = district_3['RASSE1'].value_counts()\nd3_races = d3_races\/sum(d3_races)\nd3_races_percent = (d3_races*100).head(5)\nax3.bar(d3_races_percent.index , d3_races_percent)\nax3.set_title('District 3')\nax3.set_ylabel('% race in district')\nax3.set_xticklabels(d3_races_percent.index, rotation=30)\n\n# district 4 plot\nd4_races = district_4['RASSE1'].value_counts()\nd4_races = d4_races\/sum(d4_races)\nd4_races_percent = (d4_races*100).head(5)\nax4.bar(d4_races_percent.index , d4_races_percent)\nax4.set_title('District 4')\nax4.set_ylabel('% race in district')\nax4.set_xticklabels(d4_races_percent.index, rotation=30)\n\n# district 5 plot\nd5_races = district_5['RASSE1'].value_counts()\nd5_races = d5_races\/sum(d5_races)\nd5_races_percent = (d5_races*100).head(5)\nax5.bar(d5_races_percent.index , d5_races_percent)\nax5.set_title('District 5')\nax5.set_ylabel('% race in district')\nax5.set_xticklabels(d5_races_percent.index, rotation=30)\n\n# district 6 plot\nd6_races = district_6['RASSE1'].value_counts()\nd6_races = d6_races\/sum(d6_races)\nd6_races_percent = (d6_races*100).head(5)\nax6.bar(d6_races_percent.index , d6_races_percent)\nax6.set_title('District 6')\nax6.set_ylabel('% race in district')\nax6.set_xticklabels(d6_races_percent.index, rotation=30)\n\n# district 7 plot\nd7_races = district_7['RASSE1'].value_counts()\nd7_races = d7_races\/sum(d7_races)\nd7_races_percent = (d7_races*100).head(5)\nax7.bar(d7_races_percent.index , d7_races_percent)\nax7.set_title('District 7')\nax7.set_ylabel('% race in district')\nax7.set_xticklabels(d7_races_percent.index, rotation=30)\n\n# district 8 plot\nd8_races = district_8['RASSE1'].value_counts()\nd8_races = d8_races\/sum(d8_races)\nd8_races_percent = (d8_races*100).head(5)\nax8.bar(d8_races_percent.index , d8_races_percent)\nax8.set_title('District 8')\nax8.set_ylabel('% race in district')\nax8.set_xticklabels(d8_races_percent.index, rotation=30)\n\n# district 9 plot\nd9_races = district_9['RASSE1'].value_counts()\nd9_races = d9_races\/sum(d9_races)\nd9_races_percent = (d9_races*100).head(5)\nax9.bar(d9_races_percent.index , d9_races_percent)\nax9.set_title('District 9')\nax9.set_ylabel('% race in district')\nax9.set_xticklabels(d9_races_percent.index, rotation=30)\n\n# district 10 plot\nd10_races = district_10['RASSE1'].value_counts()\nd10_races = d10_races\/sum(d10_races)\nd10_races_percent = (d10_races*100).head(5)\nax10.bar(d10_races_percent.index , d10_races_percent)\nax10.set_title('District 10')\nax10.set_ylabel('% race in district')\nax10.set_xticklabels(d10_races_percent.index, rotation=30)\n\n# district 11 plot\nd11_races = district_11['RASSE1'].value_counts()\nd11_races = d11_races\/sum(d11_races)\nd11_races_percent = (d11_races*100).head(5)\nax11.bar(d11_races_percent.index , d11_races_percent)\nax11.set_title('District 11')\nax11.set_ylabel('% race in district')\nax11.set_xticklabels(d11_races_percent.index, rotation=30)\n\n# district 12 plot\nd12_races = district_12['RASSE1'].value_counts()\nd12_races = d12_races\/sum(d12_races)\nd12_races_percent = (d12_races*100).head(5)\nax12.bar(d12_races_percent.index , d12_races_percent)\nax12.set_title('District 12')\nax12.set_ylabel('% race in district')\nax12.set_xticklabels(d12_races_percent.index, rotation=30)\n\nfig.suptitle('Most popular dog races per district', fontsize=25)\n\nplt.show()","4d82e9a3":"df2 = df[['RASSE1','GEBURTSJAHR_HUND']].set_index('GEBURTSJAHR_HUND')\n\nline_data = df2.groupby(['GEBURTSJAHR_HUND','RASSE1']).size().unstack()\nline_data[np.isnan(line_data)] = 0\n\nfive = line_data[['Chihuahua', 'Mischling klein', 'Labrador Retriever', 'Jack Russel Terrier','Franz\u00f6sische Bulldogge']]\nplt.figure(figsize=(20,7))\nsns.lineplot(data=five)\nplt.xlabel('Year',fontsize=12)\nplt.ylabel('Number of newly registered dogs', fontsize=12)\nplt.title('Popularity of selected dog races over time - 1', fontsize=20)\nplt.show()","e131776e":"df2 = df[['RASSE1','GEBURTSJAHR_HUND']].set_index('GEBURTSJAHR_HUND')\n\nline_data = df2.groupby(['GEBURTSJAHR_HUND','RASSE1']).size().unstack()\nline_data[np.isnan(line_data)] = 0\n\nfive = line_data[['Jack Russel Terrier', 'Mischling gross', 'Yorkshire Terrier', 'Border Collie','Malteser','Mops']]\nplt.figure(figsize=(20,7))\nsns.lineplot(data=five)\nplt.xlabel('Year',fontsize=12)\nplt.ylabel('Number of newly registered dogs', fontsize=12)\nplt.title('Popularity of selected dog races over time - 2', fontsize=20)\nplt.show()","ca6e298b":"## Average dog age per owner age group","f5f1ce57":"# Types of data in dataset","734516a5":"## Distribution function of dog age ","ae32c594":"# Popularity of dog races over time per district","b95fad78":"# How old are dog owners and their dogs? ","0fcd6a9f":"# Most popular dog race per district","b923fd1f":"# **Dogs of Z\u00fcrich dataset - Data Visualization**"}}