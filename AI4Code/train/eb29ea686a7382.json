{"cell_type":{"35d54aa7":"code","69b3c256":"code","1c672f34":"code","a8f3010a":"code","b073ee4b":"code","8bbc826d":"code","f37b460e":"code","20301849":"code","0082f81c":"code","c200f99f":"markdown","4b34c64f":"markdown","98eeb542":"markdown","0a448e06":"markdown"},"source":{"35d54aa7":"import numpy as np \nimport pandas as pd\nimport plotly as py\nimport plotly.graph_objs as go\nimport plotly.express as px\nfrom plotly.offline import init_notebook_mode\ninit_notebook_mode(connected = True)\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\npd.set_option('display.max_columns', None)\n#########################################################\ndf = pd.read_csv('..\/input\/stock-exchange-data\/indexData.csv')\ndf_p = pd.read_csv('..\/input\/stock-exchange-data\/indexProcessed.csv')\ninfo = pd.read_csv('..\/input\/stock-exchange-data\/indexInfo.csv')","69b3c256":"info","1c672f34":"df.head()","a8f3010a":"df.info()","b073ee4b":"df.dropna(inplace = True)\ndf.reset_index(drop = True, inplace = True)","8bbc826d":"new_features = ['p_change', 'close-1', 'close-1%', 'volume-1', 'volume-1%']\nfor i in new_features:\n    df[i] = 0\n    df[i] = df[i].astype('float')\n    \nfor k in range(1, len(df)):\n    if df['Index'][k] == df['Index'][k-1]:\n        df['p_change'][k] = df['Close'][k] - df['Open'][k]\n        df['close-1'][k] = df['Close'][k] - df['Close'][k-1]\n        df['close-1%'][k] = ((df['Close'][k] \/ df['Close'][k-1]) * 100) - 100\n        if df['Volume'][k] != 0 and df['Volume'][k-1] != 0:\n            df['volume-1'][k] = df['Volume'][k] - df['Volume'][k-1]\n            df['volume-1%'][k] = ((df['Volume'][k] \/ df['Volume'][k-1]) * 100) - 100\n\ndf['Date'] = pd.to_datetime(df['Date'])\ndf['year'] = df['Date'].dt.year\ndf['month'] = df['Date'].dt.month\n\ndf.head()","f37b460e":"def eda():\n    stocks = info['Index'].tolist()\n    colors = {'NYA': '#41729F',\n             'IXIC': '#5885AF',\n             'HSI': '#274472',\n             '000001.SS': '#C3E0E5',\n             'N225': '#145DA0',\n             'N100': '#0C2D48',\n             '399001.SZ': '#2E8BC0',\n             'GSPTSE': '#B1D4E0',\n             'NSEI': '#BFD7ED',\n             'GDAXI': '#60A3D9',\n             'KS11': '#0074B7',\n             'SSMI': '#003B73',\n             'TWII': '#0E86D4',\n             'J203.JO': '#68BBE3'}\n    \n    for stock in stocks:\n        plt.figure(figsize = (15, 7))\n        plt.title(stock, size = 35, y = 1.03, fontname = 'monospace')\n        plt.grid(color = 'gray', linestyle = ':', axis = 'y', alpha = 0.8, zorder = 0,  dashes = (1,7))\n        a = sns.lineplot(x = \"Date\", y = \"Close\", data = df.query(\"Index == @stock\"), color = colors.get(stock), linewidth = 0.5)\n        plt.ylabel('Close price', size = 14, fontname = 'monospace')\n        plt.xlabel('')\n        plt.yticks(size = 12, fontname = 'monospace')\n    \n        for j in ['right', 'top']:\n            a.spines[j].set_visible(False)\n        for j in ['bottom', 'left']:\n            a.spines[j].set_linewidth(1.3)\n    \n        plt.show()\n\n        fig = plt.figure(figsize = (15, 15))\n        plt.subplot(221)\n        plt.grid(color = 'gray', linestyle = ':', axis = 'y', alpha = 0.8, zorder = 0,  dashes = (1,7))\n        a = sns.lineplot(x = \"Date\", y = \"close-1\", data = df.query(\"Index == @stock\"), color = colors.get(stock), linewidth = 0.5)\n        plt.ylabel('Price changes', size = 14, fontname = 'monospace')\n        plt.xlabel('')\n        plt.yticks(size = 12, fontname = 'monospace')\n\n        plt.subplot(222)\n        plt.grid(color = 'gray', linestyle = ':', axis = 'y', alpha = 0.8, zorder = 0,  dashes = (1,7))\n        b = sns.lineplot(x = \"Date\", y = \"close-1%\", data = df.query(\"Index == @stock\"), color = colors.get(stock), linewidth = 0.5)\n        plt.ylabel('Price changes %', size = 14, fontname = 'monospace')\n        plt.xlabel('')\n        plt.yticks(size = 12, fontname = 'monospace')\n    \n        plt.subplot(223)\n        plt.grid(color = 'gray', linestyle = ':', axis = 'y', alpha = 0.8, zorder = 0,  dashes = (1,7))\n        c = sns.lineplot(x = \"Date\", y = \"volume-1\", data = df.query(\"Index == @stock\"), color = colors.get(stock), linewidth = 0.5)\n        plt.ylabel('Volume changes', size = 14, fontname = 'monospace')\n        plt.xlabel('')\n        plt.yticks(size = 12, fontname = 'monospace')\n    \n        plt.subplot(224)\n        plt.grid(color = 'gray', linestyle = ':', axis = 'y', alpha = 0.8, zorder = 0,  dashes = (1,7))\n        d = sns.lineplot(x = \"Date\", y = \"volume-1%\", data = df.query(\"Index == @stock\"), color = colors.get(stock), linewidth = 0.5)\n        plt.ylabel('Volume changes %', size = 14, fontname = 'monospace')\n        plt.xlabel('')\n        plt.yticks(size = 12, fontname = 'monospace')\n\n        for i in [a,b,c,d]:\n            for j in ['right', 'top']:\n                i.spines[j].set_visible(False)\n            for j in ['bottom', 'left']:\n                i.spines[j].set_linewidth(1.3)\n        \n        plt.figtext(0.5, -0.001, 'whitespace', color = 'white')\n    \n        plt.show()","20301849":"eda()","0082f81c":"corr_map = pd.DataFrame()\nfor stock in info['Index'].tolist():\n    corr_map[stock] = df.query(\"Index == @stock & year >= 2012\")['Close'].reset_index()['Close']\n\nmatrix = np.triu(corr_map.corr())\nplt.figure(figsize = (12, 10))\nsns.heatmap(corr_map.corr(), annot = True, cmap = 'Blues', fmt=\".2f\", mask = matrix, vmin = -1, vmax = 1, linewidths = 0.1, linecolor = 'white', cbar = False, annot_kws = {'fontsize': 11})\nplt.xticks(size = 10, fontname = 'monospace')\nplt.yticks(size = 11, fontname = 'monospace')\nplt.figtext(0.88, 0.65, '''Correlation map from\n2012 to 2021\nfor all\nstocks''', fontsize = 40, fontname = 'monospace', ha = 'right', color = '#4897d8')\nplt.show()","c200f99f":"# Basic information","4b34c64f":"![](https:\/\/www.syl.ru\/misc\/i\/ai\/425996\/2860180.jpg)","98eeb542":"# EDA","0a448e06":"# Preprocessing"}}