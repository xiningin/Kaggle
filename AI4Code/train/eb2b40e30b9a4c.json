{"cell_type":{"f171ea26":"code","cd54b246":"code","9dc0ab45":"code","c7148ee4":"code","16ab46a1":"code","27dd8151":"code","22855e12":"code","65d4641e":"code","10e946a6":"code","ddd1892c":"code","f7895903":"markdown","db3feeac":"markdown","72a66922":"markdown","e543a291":"markdown"},"source":{"f171ea26":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cd54b246":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n","9dc0ab45":"df=pd.read_csv('..\/input\/social-network-ads\/Social_Network_Ads.csv')\ndf.head()","c7148ee4":"df.Purchased.value_counts()\n","16ab46a1":"X=df[['Age','EstimatedSalary']]\ny=df['Purchased']\nprint(X.head())\ny.head()","27dd8151":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=23)","22855e12":"from sklearn.ensemble import RandomForestClassifier\nmodel=RandomForestClassifier()\nmodel.fit(X_train,y_train)","65d4641e":"result=model.predict(X_test)\nprint(result)","10e946a6":"score=100*model.score(X_test,y_test)\nprint(score)","ddd1892c":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,result))","f7895903":"### TRAIN THE MODEL","db3feeac":"### NOW SPLIT THE DATASET INTO TRAINING SET AND TEST SET","72a66922":"### NOW MAKE THE DEPENDENT MATRIX AND INDEPENDENT MATRIX","e543a291":"### REPORT"}}