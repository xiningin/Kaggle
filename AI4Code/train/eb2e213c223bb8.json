{"cell_type":{"b0f70565":"code","e882b13a":"code","3be3553b":"code","b3475937":"code","55b8d66c":"code","c567af21":"code","5fd40739":"code","836e8af8":"code","724a4292":"code","75fddc39":"code","623a9409":"code","2ba87fab":"code","1901ebbb":"code","9f850038":"code","fcc7f843":"code","7e16731f":"code","43784700":"code","187a64dc":"code","1ddb7876":"code","d828464d":"code","c5fd2ede":"code","014f018d":"code","a2148d6d":"code","3e7f332d":"code","5a376e40":"code","1d03dde2":"code","3d206a36":"code","04989e2c":"code","9060a809":"code","387f7bbf":"code","1f6f4af2":"code","cc5b6783":"code","3b08a891":"code","fd61cc2e":"code","ed7ab691":"code","e42e6d25":"code","c55cf274":"code","5fa0510c":"code","b5cd99d6":"markdown","a767d9f7":"markdown","fc6e124b":"markdown","8596521b":"markdown","060c165e":"markdown","5e48d978":"markdown","7eeed4f6":"markdown","534d9f3e":"markdown","dff36cd8":"markdown"},"source":{"b0f70565":"\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","e882b13a":"data = pd.read_csv(r\"\/kaggle\/input\/mushroom-classification\/mushrooms.csv\")\ndata.info()","3be3553b":"data.describe()","b3475937":"data.columns\n","55b8d66c":"data.isnull().sum()","c567af21":"print(data[\"class\"].value_counts())\nlabels = 'Edible', 'Poisonous',\nsizes = [4208, 3916]\ncolors = ['steelblue','yellowgreen']\nexplode = (0, 0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Class\")\nplt.show()","5fd40739":"print(data[\"cap-shape\"].value_counts())\nlabels = 'Convex', 'Flat',\"Knobbed\",\"Bell\",\"Sunken\",\"Conical\"\nsizes = [3656, 3152,828,452,32,4]\ncolors = ['rosybrown','dimgrey',\"indianred\",\"chocolate\",\"gold\",\"darkviolet\"]\nexplode = (0, 0,0,0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Cap Shape\")\nplt.show()","836e8af8":"print(data[\"cap-surface\"].value_counts())\nlabels = 'Scaly',\"Smooth\",\"Fibrous\",\"Grooves\"\nsizes = [3244, 2556,2320,4]\ncolors = ['rosybrown','turquoise',\"chocolate\",\"indianred\",\"gold\",\"darkviolet\"]\nexplode = (0, 0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Cap Surface\")\nplt.show()","724a4292":"print(data[\"cap-color\"].value_counts())\nlabels = 'Brown',\"Gray\",\"Red\",\"Yellow\",\"White\",\"Buff\",\"Pink\",\"Cinnamon\",\"Green\",\"Purple\"\nsizes = [2284, 1840,1500,1072,1040,168,144,44,16,16]\ncolors = ['brown','gray',\"red\",\"yellow\",\"white\",\"khaki\",\"pink\",\"sandybrown\",\"green\",\"purple\"]\nexplode = (0, 0,0,0,0,0,0,0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Cap Color\")\nplt.show()","75fddc39":"print(data[\"bruises\"].value_counts())\nlabels = 'True',\"False\"\nsizes = [4748, 3376]\ncolors = ['rosybrown','turquoise',\"chocolate\",\"indianred\",\"gold\",\"darkviolet\"]\nexplode = (0, 0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Bruises\")\nplt.show()","623a9409":"print(data[\"odor\"].value_counts())\nlabels = 'None',\"Foul\",\"Fishy\",\"Spicy\",\"Almond\",\"Anise\",\"Puncent\",\"Creosote\",\"Musty\"\nsizes = [3528, 2160,576,576,400,400,256,192,36]\ncolors = ['rosybrown','turquoise',\"chocolate\",\"indianred\",\"gold\",\"darkviolet\",\"darkblue\",\"teal\",\"forestgreen\"]\nexplode = (0, 0,0,0,0,0,0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Odor\")\nplt.show()","2ba87fab":"print(data[\"gill-attachment\"].value_counts())\nlabels = 'Free', \"Attached\"\nsizes = [7914, 210]\ncolors = ['rosybrown','turquoise',\"chocolate\",\"indianred\",\"gold\",\"darkviolet\",\"darkblue\",\"teal\",\"forestgreen\"]\nexplode = (0, 0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Odor\")\nplt.show()","1901ebbb":"print(data[\"gill-spacing\"].value_counts())\nlabels = 'Close', \"Crowded\"\nsizes = [6812, 1312]\ncolors = ['gold','indianred',\"chocolate\",\"indianred\",\"gold\",\"darkviolet\",\"darkblue\",\"teal\",\"forestgreen\"]\nexplode = (0, 0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Gill Spacing\")\nplt.show()","9f850038":"print(data[\"gill-size\"].value_counts())\nlabels = 'Broad', \"Narrow\"\nsizes = [5612, 2512]\ncolors = ['mediumaquamarine','blueviolet',\"chocolate\",\"indianred\",\"gold\",\"darkviolet\",\"darkblue\",\"teal\",\"forestgreen\"]\nexplode = (0, 0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Gill size\")\nplt.show()","fcc7f843":"print(data[\"gill-color\"].value_counts())\nlabels = 'Buff',\"Pink\",\"White\",\"Brown\",\"Gray\",\"Chocolate\",\"Purple\",\"Black\",\"Red\",\"Yellow\",\"Orange\",\"Green\"\nsizes = [1728, 1492,1202,1048,752,732,492,408,96,86,64,24]\ncolors = ['khaki','pink',\"white\",\"brown\",\"gray\",\"chocolate\",\"purple\",\"black\",\"red\",\"yellow\",\"orange\",\"green\"]\nexplode = (0, 0,0,0,0,0,0,0,0,0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Gill Color\")\nplt.show()","7e16731f":"print(data[\"stalk-shape\"].value_counts())\nlabels = 'Tapering', \"Enlarging\"\nsizes = [4608, 3516]\ncolors = ['dodgerblue','indianred',\"chocolate\",\"indianred\",\"gold\",\"darkviolet\",\"darkblue\",\"teal\",\"forestgreen\"]\nexplode = (0, 0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Stalk Shape\")\nplt.show()","43784700":"print(data[\"stalk-root\"].value_counts())\nlabels = 'Bulbous', \"Missing\",\"Equal\",\"Club\",\"Rooted\"\nsizes = [3776, 2480,1120,556,192]\ncolors = ['forestgreen','indianred',\"chocolate\",\"darkblue\",\"gold\",\"darkviolet\",\"darkblue\",\"teal\",\"forestgreen\"]\nexplode = (0, 0,0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Stalk Root\")\nplt.show()","187a64dc":"print(data[\"stalk-surface-above-ring\"].value_counts())\nlabels = 'Smooth', \"Silky\",\"Fibrous\",\"Scaly\"\nsizes = [5176, 2372,552,24]\ncolors = ['gold',\"silver\",\"firebrick\",\"turquoise\"]\nexplode = (0, 0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Stalk Surface Above Ring\")\nplt.show()","1ddb7876":"print(data[\"stalk-surface-below-ring\"].value_counts())\nlabels = 'Smooth', \"Silky\",\"Fibrous\",\"Scaly\"\nsizes = [4936, 2304,600,284]\ncolors = ['palegoldenrod',\"silver\",\"firebrick\",\"turquoise\"]\nexplode = (0, 0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Stalk Surface Below Ring\")\nplt.show()","d828464d":"print(data[\"stalk-color-above-ring\"].value_counts())\nlabels = 'white', \"pink\",\"gray\",\"brown\",\"buff\",\"orange\",\"red\",\"cinnamon\",\"yellow\"\nsizes = [4464, 1872,576,448,432,192,96,36,8]\ncolors = ['whitesmoke',\"pink\",\"gray\",\"brown\",\"khaki\",\"orange\",\"red\",\"sandybrown\",\"yellow\"]\nexplode = (0, 0,0,0,0,0,0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Stalk Color Above Ring\")\nplt.show()","c5fd2ede":"print(data[\"stalk-color-below-ring\"].value_counts())\nlabels = 'white', \"pink\",\"gray\",\"brown\",\"buff\",\"orange\",\"red\",\"cinnamon\",\"yellow\"\nsizes = [4384, 1872,576,512,432,192,96,36,24]\ncolors = ['whitesmoke',\"pink\",\"gray\",\"brown\",\"khaki\",\"orange\",\"red\",\"sandybrown\",\"yellow\"]\nexplode = (0, 0,0,0,0,0,0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Stalk Color Below Ring\")\nplt.show()","014f018d":"print(data[\"veil-color\"].value_counts())\nlabels = 'White', \"Orange\",\"Brown\",\"Yellow\"\nsizes = [7924, 96,96,8]\ncolors = ['whitesmoke','orange',\"brown\",\"yellow\",\"gold\",\"darkviolet\",\"darkblue\",\"teal\",\"forestgreen\"]\nexplode = (0, 0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Veil Color\")\nplt.show()","a2148d6d":"print(data[\"ring-number\"].value_counts())\nlabels = 'One', \"Two\",\"None\"\nsizes = [7488, 600,36]\ncolors = ['teal','orange',\"brown\",\"yellow\",\"gold\",\"darkviolet\",\"darkblue\",\"teal\",\"forestgreen\"]\nexplode = (0, 0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Ring Number\")\nplt.show()","3e7f332d":"print(data[\"ring-type\"].value_counts())\nlabels = 'Pendant', \"Evanescent\",\"Large\",\"Flaring\",\"None\"\nsizes = [3968, 2776,1296,48,36]\ncolors = [\"royalblue\",\"khaki\",\"mediumpurple\",\"red\",\"grey\"]\nexplode = (0, 0,0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Ring Type\")\nplt.show()","5a376e40":"print(data[\"spore-print-color\"].value_counts())\nlabels = 'White', \"Brown\",\"Black\",\"Chocolate\",\"Green\",\"Orange\",\"Buff\",\"Purple\",\"Yellow\"\nsizes = [2388, 1968,1872,1632,72,48,48,48,48]\ncolors = [\"whitesmoke\",\"brown\",\"black\",\"chocolate\",\"green\",\"orange\",\"khaki\",\"purple\",\"yellow\"]\nexplode = (0, 0,0,0,0,0,0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Spore Print Color\")\nplt.show()","1d03dde2":"print(data[\"population\"].value_counts())\nlabels = 'Several', \"Solitary\",\"Scattered\",\"Numerous\",\"Abundant\",\"Clustered\"\nsizes = [4040,1712,1248,400,384,340]\ncolors = [\"antiquewhite\",\"fuchsia\",\"deepskyblue\",\"springgreen\",\"darkkhaki\",\"gold\"]\nexplode = (0, 0,0,0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Population\")\nplt.show()","3d206a36":"print(data[\"habitat\"].value_counts())\nlabels = 'Woods', \"Grasses\",\"Paths\",\"Leaves\",\"Urban\",\"Meadows\",\"Waste\"\nsizes = [3148,2148,1144,832,368,292,192]\ncolors = ['palegoldenrod',\"silver\",\"firebrick\",\"turquoise\",\"forestgreen\",\"gold\",\"purple\"]\nexplode = (0, 0,0,0,0,0,0)\nfig1, ax1 = plt.subplots(figsize =(10,10))\nax1.pie(sizes,colors = colors ,explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"Population\")\nplt.show()\n","04989e2c":"data[\"class\"] = [1 if each == \"e\" else 0 for each in data[\"class\"]]\ny = data[\"class\"]\ndata.drop([\"class\"],axis = 1 , inplace = True)\ndata = pd.get_dummies(data,columns = ['cap-shape', 'cap-surface', 'cap-color', 'bruises', 'odor',\n       'gill-attachment', 'gill-spacing', 'gill-size', 'gill-color',\n       'stalk-shape', 'stalk-root', 'stalk-surface-above-ring',\n       'stalk-surface-below-ring', 'stalk-color-above-ring',\n       'stalk-color-below-ring', 'veil-type', 'veil-color', 'ring-number',\n       'ring-type', 'spore-print-color', 'population', 'habitat'])\n","9060a809":"from sklearn.model_selection import train_test_split\nx_train , x_test , y_train, y_test = train_test_split(data,y,test_size = 0.2 , random_state = 42)","387f7bbf":"from sklearn.naive_bayes import GaussianNB\nnaive_bayes = GaussianNB()\nnaive_bayes.fit(x_train,y_train)\nnb_score = naive_bayes.score(x_test,y_test)\nprint(\"Naive Bayes Accuracy : \",nb_score)","1f6f4af2":"y_pred = naive_bayes.predict(x_test)\ny_true = y_test\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_true,y_pred)\nf, ax = plt.subplots(figsize =(10,10))\nsns.heatmap(cm,annot = True,linewidths=0.5,linecolor=\"blue\",fmt = \".0f\",ax=ax)\nplt.xlabel(\"y_pred\")\nplt.ylabel(\"y_true\")\nplt.show()","cc5b6783":"from sklearn.svm import SVC\nsvm = SVC(gamma = 0.01 , C = 500 , kernel = \"rbf\")\nsvm.fit(x_train,y_train)\nsvm_score = svm.score(x_test,y_test)\nprint(\"SVM Max Score = : \", svm_score)","3b08a891":"y_pred1 = svm.predict(x_test)\ny_true1 = y_test\nfrom sklearn.metrics import confusion_matrix\ncm1 = confusion_matrix(y_true1,y_pred1)\nf, ax = plt.subplots(figsize =(10,10))\nsns.heatmap(cm1,annot = True,linewidths=0.5,linecolor=\"blue\",fmt = \".0f\",ax=ax)\nplt.xlabel(\"y_pred\")\nplt.ylabel(\"y_true\")\nplt.show()","fd61cc2e":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression(C = 1.0, penalty = \"l2\")\nlr.fit(x_train,y_train)\nprint(\"Logistic Regression Max Score : \",lr.score(x_test,y_test))\nlr_max = lr.score(x_test,y_test)","ed7ab691":"y_pred2 = lr.predict(x_test)\ny_true2 = y_test\nfrom sklearn.metrics import confusion_matrix\ncm2 = confusion_matrix(y_true2,y_pred2)\nf, ax = plt.subplots(figsize =(10,10))\nsns.heatmap(cm2,annot = True,linewidths=0.5,linecolor=\"blue\",fmt = \".0f\",ax=ax)\nplt.xlabel(\"y_pred\")\nplt.ylabel(\"y_true\")\nplt.show()","e42e6d25":"score_list = []\nfrom sklearn.ensemble import RandomForestClassifier\nfor each in range (1,100):\n    rf = RandomForestClassifier(n_estimators = each,random_state = 7,bootstrap = \"False\",criterion=\"gini\",\n                                    min_samples_split = 10 , min_samples_leaf = 1)\n    rf.fit(x_train,y_train)\n    score_list.append(rf.score(x_test,y_test))\n    \nrf_max = np.max(score_list)\nprint(\"RF Max Score : \",rf_max)","c55cf274":"y_pred3 = rf.predict(x_test)\ny_true3 = y_test\nfrom sklearn.metrics import confusion_matrix\ncm3 = confusion_matrix(y_true3,y_pred3)\nf, ax = plt.subplots(figsize =(10,10))\nsns.heatmap(cm3,annot = True,linewidths=0.5,linecolor=\"blue\",fmt = \".0f\",ax=ax)\nplt.xlabel(\"y_pred\")\nplt.ylabel(\"y_true\")\nplt.show()","5fa0510c":"results = pd.DataFrame({\"Classification\" :[\"Random Forest C.\" ,\"Logistic Regression C.\",\n            \"Naive Bayes C..\",\"Support Vector C.\"],\n                        \"Accuracy\" : [rf_max*100,lr_max*100,nb_score*100,svm_score*100]})\nresults = results.sort_values(by=['Accuracy'],ascending = False)\nprint(results)","b5cd99d6":"Content :\n    \n1. [Load and Check Data](#1) \n    \n2. [Visualizing Data](#2)    \n       \n3. [Prediction](#3)                                       \n    3.1 [Naive Bayes Classification](#4)                  \n    3.2 [Support Vector Classification](#5)                       \n    3.3 [Logistic Regression Classification](#6)                \n    3.4 [Random Forest Classification](#7)\n        \n5. [Results](#8) ","a767d9f7":"<a id = \"3\"><\/a>\n<font color ='red'>\n# 3. Prediction","fc6e124b":"<a id = \"5\"><\/a>\n<font color ='red'>\n# 3.2 Support Vector Classification","8596521b":"<a id = \"4\"><\/a>\n<font color ='red'>\n# 3.1 Naive Bayes Classification","060c165e":"<a id = \"7\"><\/a>\n<font color ='red'>\n# 3.4 Random Forest Classification","5e48d978":"<a id = \"2\"><\/a>\n<font color ='red'>\n# 2. Visualizing Data","7eeed4f6":"<a id = \"6\"><\/a>\n<font color ='red'>\n# 3.3 Logistic Regression Classification","534d9f3e":"<a id = \"1\"><\/a>\n<font color ='red'>\n# 1. Load and Check Data","dff36cd8":"<a id = \"8\"><\/a>\n<font color ='red'>\n# 4. Results"}}