{"cell_type":{"aeb714a7":"code","8710d1df":"code","ae48f6b0":"code","563eb8cd":"code","bcb2a2f5":"code","b2791845":"code","bd5d93f9":"code","af9759ba":"code","935ac42f":"code","35a7e531":"code","d2729e1b":"code","ac09e434":"code","6cfb9d02":"code","24e878bd":"code","755b06ef":"code","29b41315":"code","e9c789a3":"code","d0a375ea":"code","bb33d634":"code","105f988b":"code","f578aa11":"code","883b3450":"code","8a55666f":"code","a9e43244":"code","1ec0298d":"code","3ff0c244":"code","9025788a":"code","b3551893":"markdown","b400558f":"markdown","41324788":"markdown","698413aa":"markdown","7a9fb310":"markdown","551af995":"markdown","389b4a39":"markdown"},"source":{"aeb714a7":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set()","8710d1df":"dataset = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","ae48f6b0":"dataset.head()","563eb8cd":"dataset.describe(include = 'all')","bcb2a2f5":"dataset.isna().sum()","b2791845":"sns.catplot(x = 'Gender', kind = 'count', data=dataset, height = 6, aspect = 1)\nplt.title('Gender Distribution', size = 20)\nplt.xlabel(\"\")\nplt.ylabel(\"\")\nplt.show()","bd5d93f9":"dataset['Age'].plot(kind='hist', figsize = (10, 6))\nplt.title('Age Distribution', size = 20)\nplt.xlabel('Age', size = 15)","af9759ba":"dataset['Annual Income (k$)'].plot(kind='hist', figsize = (10, 6))\nplt.title('Income Distribution', size = 20)\nplt.xlabel('Annual Income (k$)', size = 15)","935ac42f":"dataset['Spending Score (1-100)'].plot(kind='hist', figsize = (10, 6))\nplt.title('Spending Score Distribution', size = 20)\nplt.xlabel('Spending Score (1-100)', size = 15)","35a7e531":"sns.catplot(x = 'Gender', y = 'Spending Score (1-100)', data = dataset, \n            kind = 'bar', height = 6, aspect = 1)\nplt.title('Gender vs. Spending Score', size = 20)\nplt.xlabel('')\nplt.ylabel('Avg. Spending Score', size = 15)","d2729e1b":"sns.set(rc={'figure.figsize':(10,6)})\nsns.scatterplot(x = 'Age', y = 'Spending Score (1-100)', data=dataset)\nplt.title('Age vs. Spending Score', size = 20)\nplt.xlabel('Age', size = 15)\nplt.ylabel('Spending Score (1-100)', size = 15)","ac09e434":"sns.set(rc={'figure.figsize':(10,6)})\nsns.scatterplot(x = 'Annual Income (k$)', y = 'Spending Score (1-100)', data=dataset)\nplt.title('Annual Income (k$) vs. Spending Score', size = 20)\nplt.xlabel('Annual Income (k$)', size = 15)\nplt.ylabel('Spending Score (1-100)', size = 15)","6cfb9d02":"# Get rid of the ID column \n\nX = dataset.iloc[:,1:]\n\n# Peform Feature Scaling\n\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX.iloc[:,1:] = sc.fit_transform(X.iloc[:,1:])\n\n# Recode the Gender column\n\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [0])], remainder='passthrough')\nX = np.array(ct.fit_transform(X))","24e878bd":"print(X[:5])","755b06ef":"from sklearn.cluster import KMeans\nwcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++')\n    kmeans.fit(X)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","29b41315":"kmeans = KMeans(n_clusters = 6, init = 'k-means++')\ny_kmeans = kmeans.fit_predict(X)","e9c789a3":"kmeans_dataset = dataset.copy()\nkmeans_dataset['Clusters'] = y_kmeans","d0a375ea":"kmeans_dataset.head()","bb33d634":"# Get rid of the ID column \n\nX = dataset.iloc[:,1:-1]\ny = dataset.iloc[:,-1]\n\n# Peform Feature Scaling\n\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX.iloc[:,1:] = sc.fit_transform(X.iloc[:,1:])\n\n# Recode the Gender column\n\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [0])], remainder='passthrough')\nX = np.array(ct.fit_transform(X))","105f988b":"from sklearn.decomposition import PCA\npca = PCA(n_components = 1)\nX = pca.fit_transform(X)\nprint(X[:5])","f578aa11":"pca_dataframe = pd.DataFrame({'Spending_Score':y, 'PCA_Var':X[:,0]})","883b3450":"pca_dataframe.head()","8a55666f":"X = pca_dataframe.iloc[:].values","a9e43244":"from sklearn.cluster import KMeans\nwcss = []\nfor i in range(1, 11):\n    kmeans_pca = KMeans(n_clusters = i, init = 'k-means++')\n    kmeans_pca.fit(X)\n    wcss.append(kmeans_pca.inertia_)\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","1ec0298d":"kmeans_pca = KMeans(n_clusters = 3, init = 'k-means++')\ny_kmeans_pca = kmeans_pca.fit_predict(X)","3ff0c244":"pca_dataframe['Cluster'] = y_kmeans_pca","9025788a":"sns.set(rc={'figure.figsize':(10,6)})\nsns.scatterplot(x = 'PCA_Var', y = 'Spending_Score', hue = 'Cluster', data=pca_dataframe, palette = \"deep\")","b3551893":"## Clustering ","b400558f":"#### In order to find the optimal number of clusters I will use the elbow method","41324788":"###### By looking at the last two graphs we can see that there are differences in spending scores based on age and anual income ","698413aa":"###### It seems that the optimal number of clusters is 6","7a9fb310":"### PCA","551af995":"###### We can see that after applying PCA the number of clusters reduced to only 3, and it looks like there is a clear difference between the three regarding their spending score, but probably the model won't be able to discriminate well between the customers based on the dimension resulted from applying PCA","389b4a39":"### K-Means Clusering"}}