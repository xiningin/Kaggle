{"cell_type":{"c72954fe":"code","48ead73c":"code","c8ce7526":"code","5a141640":"code","1e6177d1":"code","ff39a365":"code","0d35c54f":"code","1da21cbb":"code","efcaf3c0":"code","8b71d149":"code","79b10d3a":"code","c700cdc9":"code","45815241":"code","dccbc78e":"code","366cf8c3":"code","d20de7b7":"code","964c0967":"code","aefbcd10":"code","7bc6ad77":"code","f0987401":"code","621fc862":"code","bd97ff31":"code","bf496cff":"code","1affbddb":"code","82ca844b":"code","0c73a24f":"code","b457d357":"code","1ce2e2fe":"markdown","d73293f3":"markdown","efcee571":"markdown","924a6c71":"markdown","625cdf64":"markdown","d1756e0a":"markdown","4a826302":"markdown","fed86f89":"markdown","0d55c707":"markdown","8088df7d":"markdown","363e2834":"markdown","0960312b":"markdown","68f18748":"markdown","85c3883d":"markdown","7d50ed55":"markdown","0c40a338":"markdown","73956d96":"markdown","b46c551f":"markdown"},"source":{"c72954fe":"#\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\nimport numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n%matplotlib inline","48ead73c":"# pickle\u3092\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u5fa9\u5143\ntrain = pd.read_pickle(\"..\/input\/titanic11\/titanic_train.pkl\")\ntest = pd.read_pickle(\"..\/input\/titanic11\/titanic_test.pkl\")\ndata = [train,test]","c8ce7526":"data[0].head()","5a141640":"data[1].head()","1e6177d1":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5206\u5272\u3092\u884c\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092import\nfrom sklearn.model_selection import train_test_split","ff39a365":"#tr_train,tr_test\u306b\u632f\u308a\u5206\u3051\u3089\u308c\u308b\u30c7\u30fc\u30bf\u306f\u30e9\u30f3\u30c0\u30e0\u306b\u6c7a\u307e\u308b\n# random_state = 1234\u3000\u306f\u632f\u308a\u5206\u3051\u65b9\u3092\u56fa\u5b9a\u3059\u308b\u305f\u3081\u306e\u5024\ntr_train,tr_test=train_test_split(train, test_size=0.3, random_state = 1234) ","0d35c54f":"train.columns[1:]","1da21cbb":"train.columns[1:]","efcaf3c0":"train.columns[0]","8b71d149":"#\u8a13\u7df4\u7528\u306e\u8aac\u660e\u5909\u6570\ntr_train_X = tr_train[train.columns[1:]]\n\n# \u8a13\u7df4\u7528\u306e\u76ee\u7684\u5909\u6570\ntr_train_Y = tr_train[train.columns[0]]\n\n# \u8a55\u4fa1\u7528\u306e\u8aac\u660e\u5909\u6570\ntr_test_X = tr_test[train.columns[1:]]\n\n# \u8a55\u4fa1\u7528\u306e\u76ee\u7684\u5909\u6570\ntr_test_Y = tr_test[train.columns[0]]","79b10d3a":"tr_train_X.head()","c700cdc9":"tr_train_Y.head()","45815241":"# sklearn\u306e\u6c7a\u5b9a\u6728\u3092import\nfrom sklearn import tree\n\n# \u6c7a\u5b9a\u6728\u5206\u985e\u5668\u306b\u3088\u308b\u7a7a\u306e\u5206\u985e\u5668\u3092\u751f\u6210\nmodel=tree.DecisionTreeClassifier()","dccbc78e":"# \u8a13\u7df4\u7528\u306e\u8aac\u660e\u5909\u6570,\u76ee\u7684\u5909\u6570\u3092\u4e0e\u3048\u3066\u5b66\u7fd2\u3055\u305b\u308b\nmodel.fit(tr_train_X,tr_train_Y)\n\n# \u751f\u6210\u3055\u308c\u305f\u30e2\u30c7\u30eb\u3092\u7528\u3044\u3066\u3001\u30c6\u30b9\u30c8\u7528\u306e\u8aac\u660e\u5909\u6570\u306b\u5bfe\u3059\u308b\u4e88\u6e2c\u5024\u3092\u5165\u624b\npredict= model.predict(tr_test_X)","366cf8c3":"from sklearn import metrics\n\n# \u7cbe\u5ea6\u3092max 1.0\u3067\u8fd4\u3059matrics.accuracy_score\u3092\u5229\u7528\n# \u5f15\u6570\u306b\u30e2\u30c7\u30eb\u306b\u3088\u308a\u4e88\u6e2c\u3055\u308c\u305f\u5024\u3068\u3001\u5b9f\u969b\u306e\u76ee\u7684\u5909\u6570\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u6b63\u89e3\u7387\u3092\u8a08\u7b97\nprint('\u5224\u5225\u7387\uff1a',metrics.accuracy_score(predict, tr_test_Y))","d20de7b7":"# sklearn\u306e\u30a2\u30f3\u30b5\u30f3\u30d6\u30eb\u5b66\u7fd2\u7cfb\u30e9\u30a4\u30d6\u30e9\u30ea\u304b\u3089\u3001\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u5206\u985e\u5668\u3092import\nfrom sklearn.ensemble import RandomForestClassifier\n\n# \u7a7a\u306e\u30e2\u30c7\u30eb\u3092\u751f\u6210\n# \u6c7a\u5b9a\u6728\u306e\u6570\u3092n_estimators\u3067\u6307\u5b9a\nmodel=RandomForestClassifier(n_estimators=300)","964c0967":"# \u8a13\u7df4\u7528\u306e\u8aac\u660e\u5909\u6570,\u5fdc\u7b54\u5909\u6570\u3092\u4e0e\u3048\u3066\u5b66\u7fd2\u3055\u305b\u308b\nmodel.fit(tr_train_X,tr_train_Y)\n\n# \u751f\u6210\u3055\u308c\u305f\u30e2\u30c7\u30eb\u3092\u7528\u3044\u3066\u3001\u30c6\u30b9\u30c8\u7528\u306e\u8aac\u660e\u5909\u6570\u306b\u5bfe\u3059\u308b\u4e88\u6e2c\u5024\u3092\u5165\u624b\npredict= model.predict(tr_test_X)","aefbcd10":"from sklearn import metrics\n\n# \u5224\u5225\u7387\u3092\u8868\u793a\n# \u4e88\u6e2c\u7d50\u679c\u3068\u5b9f\u969b\u306e\u76ee\u7684\u5909\u6570\u3092\u5f15\u6570\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u5224\u5225\u7387\u3092\u8a08\u7b97\nprint('\u5224\u5225\u7387\uff1a',metrics.accuracy_score(predict, tr_test_Y))","7bc6ad77":"# KFold\u4ea4\u5dee\u691c\u8a3c\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u4ea4\u5dee\u691c\u8a3c\u306e\u30b9\u30b3\u30a2\u3092\u6c42\u3081\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u304a\u3088\u3073\u4ea4\u5dee\u691c\u8a3c\u306b\u3088\u308b\u4e88\u6e2c\u306b\u95a2\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092import\nfrom sklearn.model_selection import KFold, cross_val_score","f0987401":"# \u5206\u5272\u6570n_splits, \u30e9\u30f3\u30c0\u30e0\u6027\u306e\u56fa\u5b9a\u3092\u884c\u3046random_state, \u30c7\u30fc\u30bf\u306e\u30b7\u30e3\u30c3\u30d5\u30eb\u3092\u884c\u3046\u304b\u3092\u6307\u5b9a\u3059\u308bshuffle\u3092\u5f15\u6570\u306b\u4e0e\u3048\u308b\nkf=KFold(n_splits=5, random_state=30, shuffle=True)","621fc862":"# \u8aac\u660e\u5909\u6570\u3068\u3057\u3066\u3001train\u306e\u30b3\u30e9\u30e0\u304c1\u4ee5\u964d\u306e\u3082\u306e\u3092\u8a2d\u5b9a\nx=train[train.columns[1:]]\n\n# \u76ee\u7684\u5909\u6570\u3068\u3057\u3066\u3001train\u306e\"Survived\"\u3092\u8a2d\u5b9a\ny=train[\"Survived\"]\n\n# \u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u5f97\u3089\u308c\u308b\u30b9\u30b3\u30a2\u3092\u4ee3\u5165\n# \u4e88\u6e2c\u306b\u4f7f\u3046\u30e2\u30c7\u30eb\u3001\u8aac\u660e\u5909\u6570\u3001\u76ee\u7684\u5909\u6570\u3001\u304a\u3088\u3073\u4f5c\u6210\u3057\u305fKFold\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5f15\u6570\u306b\u4e0e\u3048\u308b\ncv_result = cross_val_score(model, x, y, cv = kf)\nprint(\"cv: {}\".format(cv_result))\n\n# \u5206\u5272\u6570\u306e\u5206\u3060\u3051\u7cbe\u5ea6\u304c\u5f97\u3089\u308c\u308b\u306e\u3067\u3001\u5e73\u5747\u5024\u3092\u3068\u308c\u3070\u5168\u4f53\u306e\u7cbe\u5ea6\u304c\u78ba\u8a8d\u53ef\u80fd\nprint(\"\u5e73\u5747\u7cbe\u5ea6\uff1a{}\".format(cv_result.mean()))","bd97ff31":"from sklearn.model_selection import GridSearchCV\n# \u30b5\u30fc\u30c1\u3057\u305f\u3044\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3001\u304a\u3088\u3073\u63a2\u308b\u7bc4\u56f2\u306e\u6307\u5b9a\n# \u4eca\u56de\u306f\u3001\u4e88\u6e2c\u5b50\u306e\u6570\u3092100~1000\u307e\u3067\u3001100\u523b\u307f\u3067\u63a2\u308b\nparam={'n_estimators':range(100,1000,100)}\n\n# \u5206\u985e\u5668\u306f\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u3092\u6307\u5b9a\n# cv\u306b\u4e0e\u3048\u305f\u6570\u5024\u5206\u3060\u3051\u3001\u4ea4\u5dee\u691c\u8a3c\u3092\u884c\u3046\nGS_rf=GridSearchCV(estimator=RandomForestClassifier(random_state=0),param_grid=param,verbose=True,cv=5)\nGS_rf.fit(x,y)\n\nprint(\"\u30d9\u30b9\u30c8\u30b9\u30b3\u30a2\uff1a{}\".format(GS_rf.best_score_))\nprint(\"\u6700\u9069\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a{}\".format(GS_rf.best_estimator_))","bf496cff":"# \u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3067\u5f97\u3089\u308c\u305f\u30d9\u30b9\u30c8\u306a\u30e2\u30c7\u30eb\u3092\u7528\u3044\u3066\u5206\u985e\u3092\u884c\u3046\nmodel = GS_rf.best_estimator_\n\n# \u5b66\u7fd2\nmodel.fit(train[train.columns[1:]] ,train[train.columns[0]])\n\n# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u4e88\u6e2c\ntest_prediction = model.predict(test)","1affbddb":"# kaggle\u306e\u8ab2\u984c\u3068\u3057\u3066 PassengerId 892 ~ 1310 \u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u304c\u8981\u6c42\u3055\u308c\u3066\u3044\u308b\u305f\u3081\n# id\u3092\u751f\u6210\u3057\u3066\u304a\u304f\npassenger_id = np.arange(892,1310)","82ca844b":"# PassengerId\u3068\u4e88\u6e2c\u7d50\u679c\u3092\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u5316\ntest_result = pd.DataFrame( { 'PassengerId': passenger_id , 'Survived': test_prediction } )\nprint(test_result.head(10))","0c73a24f":"# \u751f\u6210\u3057\u305f\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092csv\u3068\u3057\u3066\u4fdd\u5b58\ntest_result.to_csv( 'titanic_forsubmisson.csv' , index = False )","b457d357":"# \u5206\u985e\u306b\u7528\u3044\u305f\u8aac\u660e\u5909\u6570\u306b\u3064\u3044\u3066\u3001\u305d\u308c\u305e\u308c\u304c\u5206\u985e\u306b\u8ca2\u732e\u3057\u305f\u5ea6\u5408\u3044\u3092feature_importances_\u3067\u53d6\u5f97\u3067\u304d\u308b\nfeature_importances= pd.DataFrame({\"feature_importances\":model.feature_importances_})\nsns.barplot(tr_train_X.columns, feature_importances[\"feature_importances\"])\nplt.show()","1ce2e2fe":"\u3053\u306e\u30e2\u30c7\u30eb\u306btr_train_X\u306e\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3055\u305b\u3001tr_train_Y\u306e\u30c7\u30fc\u30bf\u3092\u5206\u985e\u3057\u5224\u5225\u7387\u3092\u7b97\u51fa","d73293f3":"# \u30e2\u30c7\u30eb\u306e\u691c\u8a3c","efcee571":"## \u6c7a\u5b9a\u6728","924a6c71":"train\u2192tr_train\u3068tr_test\u306b\u5206\u5272<br>\n\uff08tr_train\u30c7\u30fc\u30bf\u6570\uff09\uff1a\uff08tr_test\u306e\u30c7\u30fc\u30bf\u6570\uff09\uff1d7:3<br>\n\u3068\u306a\u308b\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3002","625cdf64":"# \u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u3068\u8a55\u4fa1","d1756e0a":"test\u306e\u30c7\u30fc\u30bf\u306b\u306f\u7b54\u3048\uff08\"Survived\"\uff09\u304c\u3064\u3044\u3066\u304a\u3089\u305a\u3001\u3053\u308c\u3092\u7528\u3044\u3066\u5b66\u7fd2\u5668\u306e\u826f\u3057\u60aa\u3057\u3092\u78ba\u304b\u3081\u308b\u8853\u304c\u306a\u3044\u306e\u3067\u3001<br>\ntrain\u306e\u4e00\u90e8\u306e\u30c7\u30fc\u30bf\u3092\u5206\u985e\u5668\u306e\u691c\u8a3c\u7528\u306b\u7528\u3044\u308b\u3053\u3068\u3068\u3059\u308b\u3002<br>","4a826302":"\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u306e\u30e2\u30c7\u30eb\u3092\u8a2d\u5b9a\u3002n_estimator\u306f100\u3068\u3057\u3066\u304a\u304f\u3002","fed86f89":"\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306e\u6700\u3082\u57fa\u672c\u7684\u306a\u624b\u6cd5","0d55c707":"\u3053\u306e\u30e2\u30c7\u30eb\u306btr_train_X\u306e\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3055\u305b\u3001tr_train_Y\u306e\u30c7\u30fc\u30bf\u3092\u5206\u985e\u3057\u5224\u5225\u7387\u3092\u7b97\u51fa","8088df7d":"tr_train_X\u306b\u306ftr_train\u306e\"Survived\"\u5217\u3010\u4ee5\u5916\u3011\u306e\u30c7\u30fc\u30bf\u3092\u3001<br>\ntr_train_Y\u306b\u306ftr_train\u306e\"Survived\"\u5217\u306e\u307f\u3092\u3001<br>\ntr_test_X\u306b\u306ftr_test\u306e\"Survived\"\u5217\u3010\u4ee5\u5916\u3011\u306e\u30c7\u30fc\u30bf\u3092\u3001<br>\ntr_test_Y\u306b\u306ftr_test\u306e\"Survived\"\u5217\u306e\u307f\u3092\u7d0d\u3081\u308b\u3002<br>","363e2834":"\u5224\u5225\u7387\u3092sklearn.metrics\u3092\u7528\u3044\u3066\u898b\u3066\u307f\u308b","0960312b":"# \u30e2\u30c7\u30eb\u306e\u69cb\u7bc9","68f18748":"test\u7528\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8(test.csv)\u3092\u3053\u306e\u30e2\u30c7\u30eb\u306b\u5f93\u3063\u3066\u5206\u985e\u3002\n\u307e\u305f\u3001\u5206\u985e\u7d50\u679c\u3092\u63d0\u51fa\u3059\u308b\u5f62\u5f0f\u306b\u307e\u3068\u3081\u308b(csv\u5f62\u5f0f)","85c3883d":"## K-\u5206\u5272\u4ea4\u5dee\u691c\u8a3c","7d50ed55":"## \u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1","0c40a338":"# \u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u5206\u5272","73956d96":"\u5224\u5225\u7387\u3092sklearn.metrics\u3092\u7528\u3044\u3066\u898b\u3066\u307f\u308b","b46c551f":"## \u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8"}}