{"cell_type":{"dbdd627f":"code","7213336b":"code","05a1c221":"code","ec26e53f":"code","c0354574":"code","6c90a931":"code","424c8319":"code","44cd25f5":"code","c8d0edf6":"code","a3d2cbf8":"code","02fbe202":"code","6a325e4e":"markdown","0887a67b":"markdown","12004643":"markdown","21805da2":"markdown","d16f8bcc":"markdown","acc8c066":"markdown","206eee9b":"markdown","44618b5e":"markdown","fa62b5ed":"markdown"},"source":{"dbdd627f":"from IPython.display import Image\nImage(filename=\"..\/input\/telco-churn\/telco_header.png\")","7213336b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\/\"))","05a1c221":"churn = pd.read_csv('..\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv')\n\nprint('Churn data: \\nRows: {}\\nCols: {}'.format(churn.shape[0],churn.shape[1]))\nprint(churn.columns)","ec26e53f":"churn.head()","c0354574":"churn['TotalCharges'] = pd.to_numeric(churn['TotalCharges'], errors = 'coerce')\n\nfor x in churn.columns:\n    if churn[x].isnull().values.ravel().sum() > 0:\n        print('{} - {}'.format(x,churn[x].isnull().values.ravel().sum()))\n        \nchurn['TotalCharges'].fillna(churn['tenure'] *  churn['MonthlyCharges'], inplace = True)","6c90a931":"churn['SeniorCitizen'] = churn['SeniorCitizen'].apply(lambda x: \"Senior\" if x==1 else (\"Non-Senior\" if x==0 else x))\n\ncols = ['gender', 'SeniorCitizen', 'Partner', 'Dependents', 'PhoneService', \n        'MultipleLines', 'InternetService', 'OnlineSecurity', 'OnlineBackup', \n        'DeviceProtection', 'TechSupport', 'StreamingTV', 'StreamingMovies', \n        'Contract', 'PaperlessBilling', 'PaymentMethod']\n\nfig, ax = plt.subplots(4,4,figsize=(18,8), sharex=True)\n\nj=0\nk=0\n    \nfor i in cols:\n    temp = churn.pivot_table(churn, index=[i], columns=['Churn'], aggfunc=len).reset_index()[[i,'tenure']]\n    temp.columns=[i,'Churn_N','Churn_Y']\n    temp['Churn_ratio']=(temp['Churn_Y'])\/(temp['Churn_Y']+temp['Churn_N'])\n    \n    a = sns.barplot(x='Churn_ratio', y=i, data=temp, ax=ax[j][k], color=\"palegreen\")\n    a.set_yticklabels(labels=temp[i])\n    for p in ax[j][k].patches:\n        ax[j][k].text(p.get_width() + .05, p.get_y() + p.get_height()\/1.5, '{:,.1%}'.format(p.get_width()),\n                   fontsize=8, color='black', ha='center', va='bottom')\n    ax[j][k].set_xlabel('', size=8, color=\"green\")\n    ax[j][k].set_ylabel('', size=8, color=\"green\", rotation=0, horizontalalignment='right')\n    ax[j][k].set_title(i, size=10, color=\"green\")\n    #print(j,k)\n    if k==3: \n        j=j+1\n        k=0\n    else:\n        k=k+1 \n    \nfig.suptitle(\"Churn ratio across attributes\", fontsize=14, family='sans-serif', color=\"green\")\nplt.subplots_adjust(left=None, bottom=None, right=None, top=None,\n                    wspace=1, hspace=1)\nplt.xlim(0,.5)\nplt.show()","424c8319":"fig, ax = plt.subplots(figsize=(8,6))\n\nsns.boxenplot(x=\"MonthlyCharges\", y=\"gender\", data=churn, color=\"palegreen\", ax=ax)\n        \nax.set_xlabel('Monthly Charges', size=12, color=\"green\")\nax.set_ylabel('Gender', size=14, color=\"green\")\nax.set_title('Tenure distribution', size=18, color=\"green\")\nplt.show()","44cd25f5":"fig, ax = plt.subplots(2, 1, figsize=(8,6), sharey=True, sharex=True)\n\nsns.distplot(churn[churn['Churn']==\"Yes\"][\"tenure\"] , color=\"#F5B7B1\", ax=ax[0])\nsns.distplot(churn[churn['Churn']==\"No\"][\"tenure\"] , color=\"#ABEBC6\", ax=ax[1])\n        \nax[0].set_xlabel('Churn - Yes', size=12, color=\"#800000\")\nax[1].set_xlabel('Churn - No', size=12, color=\"green\")\n#ax.set_ylabel('Churn', size=14, color=\"green\")\n#ax[0].set_title('Tenure distribution', size=18, color=\"green\")\nfig.suptitle(\"Tenure distribution\", fontsize=14)\nplt.show()","c8d0edf6":"fig, ax = plt.subplots(2, 1, figsize=(8,6), sharey=True, sharex=True)\n\nsns.distplot(churn[churn['Churn']==\"Yes\"][\"MonthlyCharges\"] , color=\"#F5B7B1\", ax=ax[0])\nsns.distplot(churn[churn['Churn']==\"No\"][\"MonthlyCharges\"] , color=\"#ABEBC6\", ax=ax[1])\n        \nax[0].set_xlabel('Churn - Yes', size=12, color=\"#800000\")\nax[1].set_xlabel('Churn - No', size=12, color=\"green\")\n\nfig.suptitle(\"Monthly Charges distribution\", fontsize=14)\nplt.show()","a3d2cbf8":"fig, ax = plt.subplots(2, 1, figsize=(8,6), sharey=True, sharex=True)\n\nsns.distplot(churn[churn['Churn']==\"Yes\"][\"TotalCharges\"] , color=\"#F5B7B1\", ax=ax[0])\nsns.distplot(churn[churn['Churn']==\"No\"][\"TotalCharges\"] , color=\"#ABEBC6\", ax=ax[1])\n        \nax[0].set_xlabel('Churn - Yes', size=12, color=\"#800000\")\nax[1].set_xlabel('Churn - No', size=12, color=\"green\")\n\nfig.suptitle(\"Total Charges distribution\", fontsize=14)\nplt.show()","02fbe202":"a = sns.jointplot(x=\"tenure\", y=\"MonthlyCharges\", data=churn[churn['Churn']=='Yes'], kind=\"kde\", color=\"#F5B7B1\", height=5)\nplt.title('Churn Yes')\nb = sns.jointplot(x=\"tenure\", y=\"MonthlyCharges\", data=churn[churn['Churn']=='No'], kind=\"kde\", color=\"#ABEBC6\", height=5)\nplt.title('Churn No')","6a325e4e":"**Data Visualizations**\n\n* 45% of the users paying via electronic check churn\n* 43% of the users under month-to-month contract churn\n* 42% of the users with fiber optic internet churn\n* 42% of the users no online security churn\n* 42% of the users opting no for TechSupport churn\n* 42% of the senior citizen users churn\n* 40% of the users with no OnlineBackup churn\n* 39% of the users with no DeviceProtection churn","0887a67b":"**Higher the monthly charge is, higher the churn**","12004643":"**11 missing values found in the dataset for TotalCharges attribute**\n\nTotal Charges has to be converted into numeric values before checking for null values. The missing values can be replaced by monthly charges multiplied by tenure. ","21805da2":"**More the tenure is, lesser is the churn ratio**","d16f8bcc":"* Churned data points are concentrated in high monthly charges and low tenure. \n* Not churned data points are concentrated in (1) low monthly charges & low tenure and (2) high monthly charges & high tenure.","acc8c066":"**More to come..**","206eee9b":"**Thanks for viewing my Kernel! If you like my work, please leave an upvote! :) **","44618b5e":"**Key Insights:**\n\n* 45% of the users paying via electronic check churn\n* 43% of the users under month-to-month contract churn\n* 42% of the users with fiber optic internet churn\n* 42% of the users no online security churn\n* 42% of the users opting no for TechSupport churn\n* 42% of the senior citizen users churn\n* 40% of the users with no OnlineBackup churn\n* 39% of the users with no DeviceProtection churn\n* More the tenure is, lesser is the churn ratio\n* Higher the monthly charge is, higher the churn\n* Churned data points are concentrated in high monthly charges and low tenure. \n* Not churned data points are concentrated in (1) low monthly charges & low tenure and (2) high monthly charges & high tenure.","fa62b5ed":"**Distribution of total charges**"}}