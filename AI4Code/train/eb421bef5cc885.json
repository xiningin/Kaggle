{"cell_type":{"9ff2badf":"code","b7540bf6":"code","7be83dee":"code","6813bfc5":"code","8611993e":"code","7381dbaa":"code","f009fc6e":"code","16aad0b9":"code","9d55554e":"code","17908112":"code","75664daa":"code","2b5878e2":"code","ea303084":"code","5be1078d":"code","bceaca23":"code","3d60dc3c":"code","0665ff96":"code","25bcc81a":"code","8103cd8a":"code","a904bc9b":"code","1a060f6c":"code","78879521":"code","407ae3b8":"code","9bd28ded":"markdown","4252f815":"markdown","42522075":"markdown","358b53ee":"markdown","98598459":"markdown","e4f13b0b":"markdown","45bb5e2e":"markdown","9a106887":"markdown","4bf05add":"markdown","9b8c77d5":"markdown","26b10f45":"markdown","965edcb0":"markdown","bdd5f857":"markdown","db5ba07d":"markdown","01059520":"markdown","d905ba0c":"markdown","a2d90c28":"markdown","0abafeac":"markdown"},"source":{"9ff2badf":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno \nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import GridSearchCV","b7540bf6":"data = pd.read_csv('\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')","7be83dee":"data.sample(5)","6813bfc5":"def review(x):\n    if x<=5:\n        answer = 'bad'\n    else:\n        answer = 'good'\n    return answer\ndata['Taste_review'] = data['quality'].apply(lambda x : review(x))","8611993e":"data.sample(3)","7381dbaa":"data.shape","f009fc6e":"data.describe()","16aad0b9":"data.dtypes","9d55554e":"data.info()","17908112":"missingno.matrix(data, figsize = (12,6))","75664daa":"data.columns","2b5878e2":"plt.figure(figsize=(20, 20))\nplt.subplot(3,4,1)\nplt.title('fixed acidity',fontsize=25)\nsns.distplot(data['fixed acidity'])\n\nplt.subplot(3,4,2)\nplt.title('volatile acidity',fontsize=25)\nsns.distplot(data['volatile acidity'])\n\nplt.subplot(3,4,3)\nplt.title('citric acid',fontsize=25)\nsns.distplot(data['citric acid'])\n\nplt.subplot(3,4,4)\nplt.title('residual sugar',fontsize=25)\nsns.distplot(data['residual sugar'])\n\nplt.subplot(3,4,5)\nplt.title('chlorides',fontsize=25)\nsns.distplot(data['chlorides'])\n\nplt.subplot(3,4,6)\nplt.title('free sulfur dioxide',fontsize=25)\nsns.distplot(data['free sulfur dioxide'])\n\nplt.subplot(3,4,7)\nplt.title('total sulfur dioxide',fontsize=25)\nsns.distplot(data['total sulfur dioxide'])\n\nplt.subplot(3,4,8)\nplt.title('density',fontsize=25)\nsns.distplot(data['density'])\n\nplt.subplot(3,4,9)\nplt.title('pH',fontsize=25)\nsns.distplot(data['pH'])\n\nplt.subplot(3,4,10)\nplt.title('sulphates',fontsize=25)\nsns.distplot(data['sulphates'])\n\nplt.subplot(3,4,11)\nplt.title('alcohol',fontsize=25)\nsns.distplot(data['alcohol'])\n\nplt.subplot(3,4,12)\nplt.title('quality',fontsize=25)\nsns.distplot(data['quality'])","ea303084":"plt.figure(figsize=(10,10))\nsns.heatmap(data = data.corr(), annot=True, \nfmt = '.2f', linewidths=.5, cmap='Blues')","5be1078d":"sns.set()\nsns.pairplot(data, hue=\"Taste_review\", diag_kind=\"hist\")\nplt.show()","bceaca23":"X = data.iloc[:,:-2]\ny = data.iloc[:,-1]\nX_train,X_test,y_train,y_test = train_test_split(X, y, test_size = 0.2, random_state = 19)","3d60dc3c":"print('train distribution')\nprint(round(y_train.value_counts()[0]\/y_train.value_counts()[1],2))\nprint('###################')\nprint('test distribution')\nprint(round(y_test.value_counts()[0]\/y_test.value_counts()[1],2))","0665ff96":"tr_clf = DecisionTreeClassifier()\ntr_clf.fit(X_train,y_train)\n# test\ub370\uc774\ud130 \uc131\ub2a5\npred = tr_clf.predict(X_test)\nprint(classification_report(y_test,pred))","25bcc81a":"params ={'penalty':['l1','l2'],\n        'C':[0.01, 0.1, 1, 5, 10]}","8103cd8a":"scaler = StandardScaler()\nX_train_scaled = scaler.fit_transform(X_train)\nlr_clf = LogisticRegression(solver='liblinear',max_iter=1000)\nlr_grid = GridSearchCV(lr_clf, param_grid=params, scoring='accuracy', cv=2)\nlr_grid.fit(X_train_scaled, y_train)\nresults = pd.DataFrame(lr_grid.cv_results_)\ndisplay(np.transpose(results))\nprint('bestparams: {}'.format(lr_grid.best_params_))","a904bc9b":"X_test_scaled = scaler.transform(X_test)\nlr_preds = lr_grid.predict(X_test_scaled)\nprint(classification_report(y_test,lr_preds))","1a060f6c":"params ={'max_depth':[ 10, 12, 14],\n        'min_samples_leaf':[3,5,7],\n        'min_samples_split':[2,3,5]}","78879521":"rf_clf = RandomForestClassifier(n_estimators=200)\nrf_grid = GridSearchCV(rf_clf, param_grid=params, scoring='accuracy',n_jobs=-1)\nrf_grid.fit(X_train,y_train)\nprint('best_params:{}'.format(rf_grid.best_params_))","407ae3b8":"rf_pred = rf_grid.predict(X_test)\nprint(classification_report(y_test,rf_pred))","9bd28ded":"There seems to be nothing unusual about the data except that it is composed float data \\\n\ub370\uc774\ud130\uac00 \uc804\ubd80 \uc2e4\uc218\ud615\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub294 \uac83 \ube7c\uace0\ub294 \ub370\uc774\ud130\uc758 \ud2b9\uc774\uc0ac\ud56d\uc740 \uc5c6\ub294 \uac83\uc73c\ub85c \ubcf4\uc778\ub2e4","4252f815":"## Create columns ['bad', 'good'] based on quality\n## (quality\uc5d0 \ub530\ub978 ['bad', 'good'] \uc5f4 \ub9cc\ub4e4\uae30)","42522075":"Logistic regression scaling, cross-validation and result \\\n(!!Logistic regression has a significant impact on predictive performance depending on whether it scales!!)\\\n\ub85c\uc9c0\uc2a4\ud2f1 \ud68c\uadc0 \uc2a4\ucf00\uc77c\ub9c1, \uad50\ucc28\uac80\uc99d, \uacb0\uacfc \\\n(!!\ub85c\uc9c0\uc2a4\ud2f1 \ud68c\uadc0\ub294 \uc2a4\ucf00\uc77c\ub9c1 \uc5ec\ubd80\uc5d0 \ub530\ub77c \uc608\uce21\uc131\ub2a5 \uc601\ud5a5\uc774 \ud06c\ub2e4!!)","358b53ee":"RandomForest parameters(\ub79c\ub364 \ud3ec\ub808\uc2a4\ud2b8 \ud53c\ub77c\ubbf8\ud130)","98598459":"#### Training data, separating test data(\ud6c8\ub828 \ub370\uc774\ud130, \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ubd84\ub9ac\ud558\uae30)","e4f13b0b":"Logistic regression parameters(\ub85c\uc9c0\uc2a4\ud2f1 \ud68c\uadc0 \ud30c\ub77c\ubbf8\ud130)","45bb5e2e":"## Data summary(\ub370\uc774\ud130 \uc694\uc57d)","9a106887":"RandomForest Cross-validation(\ub79c\ub364 \ud3ec\ub808\uc2a4\ud2b8 \uad50\ucc28\uac80\uc99d)","4bf05add":"View test data performance based on trained models(\ud6c8\ub828\ub41c \ubaa8\ub378\uc744 \ubc14\ud0d5\uc73c\ub85c \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \uc131\ub2a5 \ubcf4\uae30)","9b8c77d5":"## Create Predictive Model (\uc608\uce21 \ubaa8\ud615 \uc0dd\uc131)","26b10f45":"# Although I am still immature, please 'upvote' for me if I can be of any help.","965edcb0":"## Introduction\nLet's take a look at the wine rating data as a whole.\\\nIf the quality is less than 5 points, we will evaluate it as 'bad' and if it is more than 6 points, we will evaluate it as 'good' and create a binary classification prediction model.\n\n\uc640\uc778 \ub4f1\uae09\ub370\uc774\ud130\ub97c \uc804\uccb4\uc801\uc73c\ub85c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\\\nquality\uac00  5\uc810\uc774\ud558\uc774\uba74 'bad', 6\uc810\uc774\uc0c1\uc774\uba74 'good'\uc73c\ub85c \ud3c9\uac00\ud558\uc5ec \uc774\uc9c4\ubd84\ub958 \uc608\uce21\ubaa8\ud615\uc744 \ub9cc\ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\n","bdd5f857":"## Import data(\ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30)","db5ba07d":"Training data, test data distribution(\ud6c8\ub828 \ub370\uc774\ud130, \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ubd84\ud3ec)","01059520":"## Logistic Regreesion","d905ba0c":"## RandomForest","a2d90c28":"## DecisionTree","0abafeac":"## EDA"}}