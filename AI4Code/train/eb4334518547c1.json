{"cell_type":{"43d0b032":"code","f559ae25":"code","ef800ed7":"code","7b798a44":"code","5ec41584":"code","9a001b08":"code","c5e3a56d":"code","8d5868da":"code","25bdb2cb":"code","e2f12ca1":"code","f1cef183":"code","31a95546":"markdown"},"source":{"43d0b032":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import ElasticNet, LinearRegression, Lasso, Ridge\nfrom sklearn.svm import LinearSVR, SVR\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\n\nfrom sklearn.neural_network import MLPRegressor\n\nfrom sklearn.metrics import mean_squared_error,r2_score\nfrom sklearn.pipeline import Pipeline\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","f559ae25":"train_df = pd.read_csv('\/kaggle\/input\/commonlitreadabilityprize\/train.csv')","ef800ed7":"train_df.head()","7b798a44":"train_df.isnull().sum()","5ec41584":"new_train_df = train_df[['excerpt','target','standard_error']]","9a001b08":"X = new_train_df['excerpt']\ny = new_train_df['target']","c5e3a56d":"X_train, X_test, y_train,y_test = train_test_split(X, y, test_size=0.33, random_state=42)","8d5868da":"models = {'Elastic Net': ElasticNet(),\n          'Lasso': Lasso(),\n          'LinearRegression': LinearRegression(),\n          'MLPRegressor': MLPRegressor(),\n          'Ridge': Ridge(),\n          'LinearSVR': LinearSVR(),\n          'RandomForest': RandomForestRegressor(),\n          'XGBoost': XGBRegressor(n_estimators=1000,eta=0.1, tree_method='hist'), \n          'SVR': SVR(kernel = 'rbf')}","25bdb2cb":"mean_squared_errors = []\nr2_scores = []\nfor m in models.values():\n    pipeline = Pipeline([('tfidf',TfidfVectorizer()),('rgr',m)])\n    pipeline.fit(X_train,y_train)\n    preds = pipeline.predict(X_test)\n    mean_squared_errors.append(mean_squared_error(y_test,preds))\n    r2_scores.append(r2_score(y_test,preds))","e2f12ca1":"plt.style.use('ggplot')\nplt.figure(figsize=(12,5))\nplt.plot(models.keys(),mean_squared_errors,color='r',marker='o')\nplt.ylabel('Mean Squared Error')\nplt.title('Mean Squared Error by Model')\nplt.show()","f1cef183":"plt.figure(figsize=(12,5))\nplt.plot(models.keys(),r2_scores,color='b',marker='o')\nplt.ylabel('Coeff. of determination (R2 Score)')\nplt.title('R2 score by Model')\nplt.show()","31a95546":"## **Performance comparison of different regression models**\n#### This notebook deals with comparison of models like Elastic Net, Linear Regression, LinearSVR, MLPRegressor, RandomForestRegressor using **Mean Squared Error** and **R2 Score** metrics.\n\n\nFork this notebook or suggest some other algorithms (models) that I can add for comparison."}}