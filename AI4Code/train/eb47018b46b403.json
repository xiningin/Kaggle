{"cell_type":{"331e4285":"code","929d42cf":"code","41fd7aaa":"code","0e67db7a":"code","7ae343fb":"code","bb2d84da":"code","390dfbdd":"code","63ef28ab":"code","635ce926":"code","4b29c50d":"code","10284e58":"markdown","328867ce":"markdown","4e8409d1":"markdown","7e2b1085":"markdown","7f87a698":"markdown","b6a8dd34":"markdown","d1313970":"markdown","bcdde95d":"markdown","9b07e51c":"markdown","1aa5aa13":"markdown","f6e2e1ee":"markdown","8e70803b":"markdown","4935abc6":"markdown","457bb003":"markdown"},"source":{"331e4285":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","929d42cf":"train_data = pd.read_csv('..\/input\/tabular-playground-series-oct-2021\/train.csv')\ntrain_data.head()","41fd7aaa":"train = train_data.sample(n=10000, random_state=42)\ntrain.head()","0e67db7a":"import random\n\nrand_feat = random.randint(0, 284)\nprint('Feature: f' + str(rand_feat))\nsns.kdeplot(data=train_data, x=f'f{rand_feat}', color='blue', fill=True)\nsns.kdeplot(data=train, x=f'f{rand_feat}', color='red', fill=True)","7ae343fb":"pd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)","bb2d84da":"temp = 0\nsubset_array = []\n\nwhile (temp < 285):\n    subset_array.append(f'f{temp}')\n    temp += 1\n\nprint(subset_array)","390dfbdd":"corr = train.corr()\n\ncorr_df = pd.DataFrame(data=corr['target'])\ncorr_df = corr_df[1:287]\ncorr_df = corr_df.transpose()\n\ncorr_df.style.background_gradient(subset=subset_array, cmap='coolwarm', vmin=-1.0, vmax=1.0)","63ef28ab":"corr_df = corr_df.transpose()\ncorr_df = corr_df.sort_values('target')\ncorr_df = pd.DataFrame(corr_df)\ncorr_df = corr_df.transpose()\ncorr_df.style.background_gradient(subset=subset_array, cmap='coolwarm', vmin=-1.0, vmax=1.0)","635ce926":"corr = train_data.corr()\n\ncorr_df = pd.DataFrame(data=corr['target'])\ncorr_df = corr_df[1:287]\ncorr_df = corr_df.transpose()\n\ncorr_df.style.background_gradient(subset=subset_array, cmap='coolwarm', vmin=-1.0, vmax=1.0)","4b29c50d":"corr_df = corr_df.transpose()\ncorr_df = corr_df.sort_values('target')\ncorr_df = pd.DataFrame(corr_df)\ncorr_df = corr_df.transpose()\ncorr_df.style.background_gradient(subset=subset_array, cmap='coolwarm', vmin=-1.0, vmax=1.0)","10284e58":"<h2>Training Data Sample<\/h2>","328867ce":"<h2>Display all correlation results<\/h2>","4e8409d1":"<h1>Correlation of Full Training Data<\/h1>","7e2b1085":"<h1>Sample Correlation<\/h1>","7f87a698":"<h2>Correlation of Training Sample Data<\/h2>","b6a8dd34":"<h2>Correlation of Features to Target - Full \"train.csv\"<\/h2>","d1313970":"<h1>Imports<\/h1>","bcdde95d":"<h2>Generate Array of Features Labels (for correlation table formatting)<\/h2>","9b07e51c":"<h2>Sort by Value for Convenience<\/h2>","1aa5aa13":"<h2>Sorted<\/h2>","f6e2e1ee":"<h2>Ensure Sample is Representative of Full Data (maybe run this a few times)<\/h2>","8e70803b":"<h1>Create Sample of Dataset<\/h1>","4935abc6":"<h2>Training Data<\/h2>","457bb003":"<h2>Packages<\/h2>"}}