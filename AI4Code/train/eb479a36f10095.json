{"cell_type":{"a7e67134":"code","8de7ea4f":"code","10053e61":"code","7a340165":"code","ae7ab038":"code","666b99ec":"code","07a1c748":"markdown","7b19d8aa":"markdown","91dbbc28":"markdown","a7163044":"markdown","3055f72e":"markdown","9898bc85":"markdown"},"source":{"a7e67134":"from time_series import TimeSeries\n\n# Imports for data visualization\nimport matplotlib.pyplot as plt\nfrom pandas.plotting import register_matplotlib_converters\nfrom matplotlib.dates import DateFormatter\nfrom matplotlib import dates as mpld\n\nregister_matplotlib_converters()\n","8de7ea4f":"import pandas as pd\ndata = pd.read_csv('..\/input\/monthly-sales\/monthly_sales.csv')\nts = TimeSeries(data, train_size=0.8)\n\nprint(\"Sales Data\")\nprint(ts.data.describe())\n\nprint(\"Head and Tail of the time series\")\nprint(ts.data.head(5).iloc[:,1])\nprint(ts.data.tail(5).iloc[:,1])\n\n# Plot of raw time series data\nplt.plot(ts.data.index,ts.data.sales)\nplt.gcf().autofmt_xdate()\ndate_format = mpld.DateFormatter('%Y-%m')\nplt.gca().xaxis.set_major_formatter(date_format)\nplt.title(\"Sales Data Analysis (2013-2016)\")\nplt.xlabel(\"Time\")\nplt.ylabel(\"Sales\")\nplt.show()","10053e61":"from statsmodels.tsa.seasonal import seasonal_decompose\n\nresult_add = seasonal_decompose(ts.data.iloc[:,1],period=12,model='additive')\nresult_add.plot()\nplt.gcf().autofmt_xdate()\ndate_format = mpld.DateFormatter('%y-%m')\nplt.gca().xaxis.set_major_formatter(date_format)\n\nresult_mul = seasonal_decompose(ts.data.iloc[:,1],period=12,model='multiplicative')\nresult_mul.plot()\nplt.gcf().autofmt_xdate()\ndate_format = mpld.DateFormatter('%y-%m')\nplt.gca().xaxis.set_major_formatter(date_format)\nplt.show()\n","7a340165":"from statsmodels.tsa.holtwinters import ExponentialSmoothing\n# Scaling down the data by a factor of 1000\nts.set_scale(1000)\n\n# Training the model\nmodel = ExponentialSmoothing(ts.train,trend='additive',seasonal='additive',seasonal_periods=12).fit(damping_slope=1)\nplt.plot(ts.train.index,ts.train,label=\"Train\")\nplt.plot(ts.test.index,ts.test,label=\"Actual\")\n\n# Create a 5 year forecast\nplt.plot(model.forecast(60),label=\"Forecast\")\n\nplt.legend(['Train','Actual','Forecast'])\nplt.gcf().autofmt_xdate()\ndate_format = mpld.DateFormatter('%Y-%m')\nplt.gca().xaxis.set_major_formatter(date_format)\nplt.title(\"Sales Data Analysis (2013-2016)\")\nplt.xlabel(\"Time\")\nplt.ylabel(\"Sales (x1000)\")\nplt.show()","ae7ab038":"from statsmodels.tsa.holtwinters import ExponentialSmoothing\n\nts = TimeSeries(data, train_size=0.8)\n# Additive model\nmodel_add = ExponentialSmoothing(ts.data.iloc[:,1],trend='additive',seasonal='additive',seasonal_periods=12,damped=True).fit(damping_slope=0.98)\nprediction = model_add.predict(start=ts.data.iloc[:,1].index[0],end=ts.data.iloc[:,1].index[-1])\n\nplt.plot(ts.data.iloc[:,1].index,ts.data.iloc[:,1],label=\"Train\")\nplt.plot(ts.data.iloc[:,1].index,prediction,label=\"Model\")\nplt.plot(model_add.forecast(60))\n\nplt.legend(['Actual','Model','Forecast'])\nplt.gcf().autofmt_xdate()\ndate_format = mpld.DateFormatter('%Y-%m')\nplt.gca().xaxis.set_major_formatter(date_format)\nplt.title(\"Sales Data Analysis (2013-2016)\")\nplt.xlabel(\"Time\")\nplt.ylabel(\"Sales\")\nplt.show()\n\n\n# Multiplicative model\nmodel_mul = ExponentialSmoothing(ts.data.iloc[:,1],trend='additive',seasonal='multiplicative',seasonal_periods=12,damped=True).fit()\nprediction = model_mul.predict(start=ts.data.iloc[:,1].index[0],end=ts.data.iloc[:,1].index[-1])\n\nplt.plot(ts.data.iloc[:,1].index,ts.data.iloc[:,1],label=\"Train\")\nplt.plot(ts.data.iloc[:,1].index,prediction,label=\"Model\")\nplt.plot(model_mul.forecast(60))\nplt.legend(['Actual','Model','Forecast'])\nplt.gcf().autofmt_xdate()\ndate_format = mpld.DateFormatter('%Y-%m')\nplt.gca().xaxis.set_major_formatter(date_format)\nplt.title(\"Sales Data Analysis (2013-2016)\")\nplt.xlabel(\"Time\")\nplt.ylabel(\"Sales\")\nplt.show()","666b99ec":"print(model_add.summary())\nprint(model_mul.summary())","07a1c748":"## Analysis of Sales data\n\n### Dataset\n\nThe given dataset contains monthly total sales of a company for the period 2013-2016.\n\n### Objectives\n\n1. To analyse the sales data and understand the performance of the company.\n2. Find patterns and construct a model to forecast future sales.\n\n**Note:** For detailed analysis and mathematical overview checkout https:\/\/github.com\/KrishnanSG\/holt-winters","7b19d8aa":"### Validation of the model\nLet's do a brief comparison between the additive and the multiplicative models.","91dbbc28":"### Load sales data and create visualization","a7163044":"### Observations from Seasonal Decompose\n\n1. The time series seems to roughly have a constant seasonality but has an overall **increasing trend**.\n2. A slightly decreasing trend is observed till 2014-07 after that an increasing trend is observed.\n\n### Model Selection\n\nFrom the above observations we can evidently conclude that **Holt-Winter additive model** would be an appropriate choice as there is a constant seasonality component along with an increasing trend.\n","3055f72e":"### Seasonal Decompose of the time series\n\nSeasonal decompose is a method used to decompose the components of a time series into the following:\n- Level - average value in the series.\n- Trend - increasing or decreasing value in the series.\n- Seasonality - repeating short-term cycle in the series.\n- Noise - random variation in the series.\n\nThe analysis of the components individually provide better insights for model selection.","9898bc85":"### Conclusion of the analysis\n\nFrom the model summary obtained it is clear that the sum of squared errors (SSE) for the additive model (5088109579.122) < the SSE for the multiplicative(5235252441.242) model.\n\nHence the initial assumption that seasonality is roughly constant and therefore choosing additive model was appropriate. \n\nNote:\nThe forecast made using multiplicative model seems to be unrealistic since the variance between the high and low on an average is **100000** which is somewhat unexpected in real world sales compared to **63000** incase of additive model.\n\n"}}