{"cell_type":{"a13a2373":"code","77ee6a4f":"code","8da3691b":"code","0f10b47a":"code","0fa67979":"code","22316114":"code","80737ab9":"code","0a185ff4":"code","11627efb":"code","bab18ed5":"code","81d09bc2":"code","94ecd2c6":"code","c6154682":"code","cd6d6c78":"code","837a6d03":"code","d17a1eb1":"code","254511b1":"code","4c368abc":"code","e9d899cd":"code","eb443dca":"code","aa47a160":"code","d952c69b":"code","abe05043":"code","f6238d9b":"code","68d1719e":"code","27227f74":"code","de810ad8":"code","d97404e8":"code","70cdca54":"code","7401060f":"code","d716c8f2":"code","a259a939":"code","1338c5e6":"code","21c55e30":"code","bf56cf63":"code","0e675d7e":"code","fc9e255b":"code","997df22f":"code","0af70ee9":"code","3f624799":"code","585040ca":"code","30da8ff4":"code","4021c7f7":"code","215bba83":"code","6155631e":"code","4b51102b":"code","7a7c2d04":"markdown","297dc9d5":"markdown","dd272b9d":"markdown","5ae8f61b":"markdown","6ca477ab":"markdown","c733b480":"markdown","9b641763":"markdown","891d96a3":"markdown","3e98214f":"markdown","b7047645":"markdown","c5c3eec3":"markdown","d49d3483":"markdown","32f77846":"markdown","0ed285cd":"markdown","5d7aab12":"markdown","dcb24849":"markdown","6aec73cd":"markdown","5b581c10":"markdown","7505763e":"markdown","e7dd5c38":"markdown","9d044ded":"markdown","ae5fa78f":"markdown","306d0ba7":"markdown","db311a1c":"markdown","3cd9b369":"markdown","cae87fba":"markdown","89c1f8f3":"markdown","46848478":"markdown","0c7541ea":"markdown","ba0ae585":"markdown"},"source":{"a13a2373":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","77ee6a4f":"import pandas as pd\nimport numpy as np","8da3691b":"fighter_details = pd.read_csv(\"\/\/kaggle\/\/input\/\/ufcdata\/\/raw_fighter_details.csv\")","0f10b47a":"fighter_details.head()","0fa67979":"fight_data = pd.read_csv(\"\/\/kaggle\/\/input\/\/ufcdata\/\/preprocessed_data.csv\")","22316114":"fight_data.head()","80737ab9":"pd.set_option('display.max_columns',None)","0a185ff4":"fight_data.head()","11627efb":"ufc_data = pd.read_csv(\"\/\/kaggle\/\/input\/\/ufcdata\/\/data.csv\")","bab18ed5":"ufc_data.head()","81d09bc2":"ufc_data.dtypes","94ecd2c6":"pd.set_option('display.max_rows',None)","c6154682":"ufc_data.dtypes","cd6d6c78":"ufc_data.columns.tolist()","837a6d03":"ufc_data.index","d17a1eb1":"ufc_data.to_numpy()","254511b1":"ufc_data.size","4c368abc":"ufc_data.describe()","e9d899cd":"ufc_data.describe(include='all')","eb443dca":"fight_winner_df = ufc_data[['R_fighter','B_fighter','Winner']]","aa47a160":"fight_winner_df.head()","d952c69b":"len(fight_winner_df[fight_winner_df['Winner']=='Red'])\n","abe05043":"len(fight_winner_df[fight_winner_df['Winner']=='Blue'])","f6238d9b":"fight_winner_df[fight_winner_df['Winner']=='Red']['R_fighter'].value_counts()","68d1719e":"fight_winner_df[fight_winner_df['Winner']=='Red']['B_fighter'].value_counts()","27227f74":"ufc_data.head()","de810ad8":"weight_classes = ufc_data['weight_class'].unique()","d97404e8":"weight_classes","70cdca54":"weight_class_winner = ufc_data[['weight_class','Winner']]","7401060f":"weight_class_winner.head()","d716c8f2":"weight_class_winner['weight_class'].unique()\n#len(weight_class_winner.groupby(['weight_class','Winner']))","a259a939":"len(weight_class_winner[weight_class_winner['weight_class'].isin(['Bantamweight'])])","1338c5e6":"len(weight_class_winner)","21c55e30":"weight_class_winner[((weight_class_winner['weight_class']=='Bantamweight') & (weight_class_winner['Winner'] == 'Red'))].count()","bf56cf63":" weight_class_red=weight_class_winner[weight_class_winner['Winner'] == 'Red']","0e675d7e":"weight_class_blue=weight_class_winner[weight_class_winner['Winner'] == 'Blue']","fc9e255b":"weight_class_red = weight_class_red.groupby('weight_class',as_index=False).count()","997df22f":"weight_class_red.head()\n","0af70ee9":"weight_class_red.rename(columns={'Winner':'win_count'},inplace=True)","3f624799":"weight_class_red","585040ca":"weight_class_blue","30da8ff4":"weight_class_blue = weight_class_blue.groupby('weight_class',as_index=False).count()","4021c7f7":"weight_class_blue","215bba83":"weight_class_blue.rename(columns={'Winner':'win_count'},inplace=True)","6155631e":"weight_class_winners = pd.DataFrame(columns =['weight_class','winner'])\nfor weight_class in weight_classes:\n    red_count = weight_class_red[(weight_class_red['weight_class'] == weight_class)].win_count.values\n    blue_count = weight_class_blue[(weight_class_blue['weight_class'] == weight_class)].win_count.values\n    winner = \"\"\n    if red_count > blue_count:\n        winner = 'Red'\n    else:\n        winner = 'Blue'\n    weight_class_winners.loc[len(weight_class_winners)] = [weight_class,winner]","4b51102b":"weight_class_winners","7a7c2d04":"**Comparing the number of matches won by each team in all the categories.**","297dc9d5":"**Checking the conditions if winner is red and weight class is Bantamweight**","dd272b9d":"Jeremy Stephens won highest number of games in Blue category players and the number of games is 12.","5ae8f61b":"**Get the details of games won by Red category players.**","6ca477ab":"Number of games won by red category","c733b480":"Number of games won by blue category","9b641763":"**Set max row dispay to none, to see all the rows.**","891d96a3":"From the above output, the index of the data is plain numbers.There is no identifier as game Id.","3e98214f":"Find out the player who won more games in each category","b7047645":"**Load Fight details**","c5c3eec3":"Overall, the players in red category won more games than those in blue category.","d49d3483":"**Get the details of games won by Blue category players.**","32f77846":"All different weight classes.","0ed285cd":"**Load Fighter details**","5d7aab12":"**To display all columns =. In the baove output some columns are replaced by .... This can be avoided by sing the beow setting max_columns, similarly for rows max_rows.**","dcb24849":"**The above two dataframes give data separately about fighters and fights. Here I'm trying to get the complete data that is in association with both the above dataframes.**","6aec73cd":"Just trying to play around the pandas functions.","5b581c10":"**List down the datatypes of all the columns**","7505763e":"The operations like mean, min, max etc.can't be applied to object data type, hence it shown NaN. Another point to notice is that the above calculations exclude NaN, we have to explicitly include if we want it to access even NaNs.","e7dd5c38":"Describe functions gives an overview of the data by giving the parameters like mean, count, std, min, ma and other percentiles. However, it performs calculation only on numerical data by default, we have to explicitly say 'all' to include the analysis on categorical values.","9d044ded":"****The conclusion that can be drawn from this is that, overall red performs better than blue****","ae5fa78f":"**Performing group by weight_class to get the count of games won by a particular team.**","306d0ba7":"2. The weight class in which red won more games that blue and viceversa.","db311a1c":"Now lets get all the column names to get more insight into the dataframe.","3cd9b369":"1. Find out the fighter who won highest number of fights including both red and blue category.","cae87fba":"Georges St-Pierre won more number of games in Red category i.e., 19.","89c1f8f3":"**Below are the list of question I'm trying to answer.**","46848478":"According to the above output, the data is of type object (str), bool, and float64.","0c7541ea":"Using isin to check how many games happened in a weigh_class Bantamweight","ba0ae585":"The above output gives the details about location where the fight is held, winner of the fight, title bout, the weight class to whihc the competition belongs to and number of rounds in the competition. The players are categorized into red and blue, the features of players categorized as red, is mentioned with R_ in column name and those with blue is mentioned in B_ column name."}}