{"cell_type":{"de80bd2e":"code","21cce1d0":"code","326af9fc":"code","9f640a7a":"code","88bb9c37":"code","c9428a27":"code","a1ddb2e7":"code","424cc7c6":"code","60428709":"code","2aac6274":"code","c2f2d4ab":"code","ade212cd":"code","17aeba3d":"code","e1f6c6ab":"code","b87ca378":"code","3117a98d":"code","9fe8c831":"code","c60e3477":"code","cc97ae57":"code","f44a8428":"code","e3da9703":"code","1731c89a":"code","9f1b2118":"code","d70b583b":"code","e5cec3e9":"code","71a00f17":"code","ae1e40db":"code","2be1c248":"code","2e1b939c":"code","0ccb211d":"code","b40478f9":"code","fb24b03f":"code","b697db46":"code","f3fefd6b":"code","4798e890":"code","fbfffdf8":"code","458c4050":"code","aacdb841":"code","57d098f2":"markdown","5e44b32f":"markdown","b0a1c2ab":"markdown","db2398eb":"markdown","28eccde7":"markdown","7b0478a8":"markdown","20f9d954":"markdown","765e0e0f":"markdown","5935c948":"markdown","d9721afd":"markdown","4181f5c8":"markdown","8e8f1922":"markdown","3a3aec47":"markdown","5cc86640":"markdown","3e93237b":"markdown","bb5f0ac1":"markdown","2500abc6":"markdown","153467d9":"markdown","89a78b98":"markdown","b6e6f41d":"markdown","8222d260":"markdown","f9eaa205":"markdown","1a53c881":"markdown","fc8b44ba":"markdown","6d745aad":"markdown","f675e0d4":"markdown"},"source":{"de80bd2e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","21cce1d0":"data=pd.read_csv(\"\/kaggle\/input\/used-cars-data-pakistan\/OLX_Car_Data_CSV.csv\",encoding = \"ISO-8859-1\")\ndata.head()","326af9fc":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns","9f640a7a":"plt.figure(figsize=(20,10))\nsns.countplot(data=data,x=\"Brand\")","88bb9c37":"sns.countplot(data=data,x=\"Transaction Type\")","c9428a27":"sns.relplot(data=data,x=\"KMs Driven\",y=\"Price\")","a1ddb2e7":"sns.lmplot(data=data,x=\"KMs Driven\",y=\"Price\")","424cc7c6":"data[\"-km\"]=-1*data[\"KMs Driven\"]\nsns.lmplot(data=data,x=\"-km\",y=\"Price\")","60428709":"dataMore100=data[data[\"Price\"]>30000 & (data[\"Price\"]<31000)]\nsns.lmplot(data=dataMore100,x=\"KMs Driven\",y=\"Price\")","2aac6274":"dataMore100=data[(data[\"Price\"]>30000) & (data[\"Price\"]<100000)]\nsns.lmplot(data=dataMore100,x=\"KMs Driven\",y=\"Price\")","c2f2d4ab":"dataMore100=data[(data[\"Price\"]>30000) & (data[\"Price\"]<100000)]\nsns.relplot(data=dataMore100,x=\"KMs Driven\",y=\"Price\",hue=\"Brand\")","ade212cd":"print(min(data[\"Price\"]))\nprint(max(data[\"Price\"]))","17aeba3d":"data[data[\"Price\"]==max(data[\"Price\"])]","e1f6c6ab":"data[data[\"Price\"]==min(data[\"Price\"])]","b87ca378":"dataMore100=data[(data[\"KMs Driven\"]>30000) & (data[\"KMs Driven\"]<34000)]\nsns.relplot(data=dataMore100,x=\"KMs Driven\",y=\"Price\",hue=\"Brand\")","3117a98d":"dataMore100=data[(data[\"KMs Driven\"]>=0) & (data[\"KMs Driven\"]<5000)]\nsns.relplot(data=dataMore100,x=\"KMs Driven\",y=\"Price\",hue=\"Brand\")","9fe8c831":"data.head()","c60e3477":"from sklearn import preprocessing\nfrom sklearn.impute import SimpleImputer\ndataClean = data.dropna() \nencodedData= pd.DataFrame()\nencodedData[\"Year\"]=dataClean[\"Year\"]\nencodedData[\"km\"]=dataClean[\"KMs Driven\"]\nencodedData[\"Price\"]=dataClean[\"Price\"]\nchangeColumns=[\"Brand\",\"Condition\",\"Fuel\",\"Model\"]\nfor col in changeColumns:\n    lr = preprocessing.LabelEncoder()\n    temp=dataClean[col]\n    encodedData[col]=lr.fit_transform(temp)","cc97ae57":"encodedData.isnull().sum()","f44a8428":"x=encodedData[[\"Year\",\"km\",\"Brand\",\"Condition\",\"Fuel\",\"Model\"]]\ny=encodedData[\"Price\"]","e3da9703":"from sklearn.datasets import load_boston\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.tree import DecisionTreeRegressor\nregressor = DecisionTreeRegressor(random_state=0)\ncross_val_score(regressor,x,y, cv=10)","1731c89a":"from sklearn.ensemble import RandomForestRegressor\ncross_val_score(RandomForestRegressor(),x,y, cv=10)","9f1b2118":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.33, random_state=42)","d70b583b":"rfr=RandomForestRegressor()\nrfr.fit(x_train,y_train)\nypred=rfr.predict(x_test)\nfrom sklearn.metrics import max_error\nprint(max_error(y_test,ypred))","e5cec3e9":"y_test2=list(y_test)\nfor i in range(0,len(ypred)):\n    if i==100:\n        break\n    print(int(ypred[i]),\"    \",y_test2[i])","71a00f17":"from sklearn.metrics import r2_score\nr2_score(y_test, ypred)","ae1e40db":"rfr.feature_importances_","2be1c248":"encodedData.columns","2e1b939c":"from sklearn.tree import DecisionTreeRegressor\nregressor = DecisionTreeRegressor(random_state=0)\nregressor.fit(x_train,y_train)\nypred=regressor.predict(x_test)\nfrom sklearn.metrics import max_error\nprint(max_error(y_test,ypred))","0ccb211d":"r2_score(y_test, ypred)","b40478f9":"regressor.feature_importances_","fb24b03f":"import xgboost as xgb\nregresyon=xgb.XGBRegressor()\nregresyon.fit(x_train,y_train)\nypred=regresyon.predict(x_test)\nprint(max_error(y_test,ypred))","b697db46":"r2_score(y_test, ypred)","f3fefd6b":"regresyon=xgb.XGBRegressor(n_estimators = 40,learning_rate=0.01)\nregresyon.fit(x_train,y_train)\nypred=regresyon.predict(x_test)\nprint(max_error(y_test,ypred))\nprint(r2_score(y_test, ypred))","4798e890":"regresyon=xgb.XGBRegressor(n_estimators = 5,learning_rate=0.1)\nregresyon.fit(x_train,y_train)\nypred=regresyon.predict(x_test)\nprint(max_error(y_test,ypred))\nprint(r2_score(y_test, ypred))","fbfffdf8":"import xgboost as xgb\nregresyon=xgb.XGBRegressor()\nregresyon.fit(x_train,y_train)\nypred=regresyon.predict(x_test)\nprint(max_error(y_test,ypred))\nprint(regresyon.feature_importances_)","458c4050":"x.columns","aacdb841":"from sklearn.dummy import DummyRegressor\nregresyon=DummyRegressor()\nregresyon.fit(x_train,y_train)\nypred=regresyon.predict(x_test)\nprint(max_error(y_test,ypred))\nprint(r2_score(y_test, ypred))","57d098f2":"R s-quare values is not bad but also not the best.","5e44b32f":"Basically 0","b0a1c2ab":"### So if KM is decrease price is increase. \u0130n near 0 Price is dramatically increased. ","db2398eb":"XGBoost performance is not good enough. We have to do Hyper Parameter Tuning","28eccde7":"This Algorithm says Year and Km is the most important feature for predict Price","7b0478a8":"Cash is important in Pakistan. ","20f9d954":"Can't work fine. ","765e0e0f":"if we do - Km this plots has more meaningful data.","5935c948":"## Random Forest says I like new cars Model is not important.\n## Decision Tree is says I love Model I choose empty Laguna to full Megane :)\n## What about XGBOOst","d9721afd":"I don't know simple Label Encoder is good for Regression?????","4181f5c8":"Toyota Vitz. I don't hear until know. oHH it's just a Toyota Yaris. ","8e8f1922":" Maybe have meaningful plots with brands.","3a3aec47":"Suzuki has very good market in Pakistan. ","5cc86640":"OKay data is ready. Now Regression Time.\nFirst Use Decision Tree Regressor","3e93237b":"Suzuki Dominated Pakistan. Toyota and Honda is has also things. NO Renault and Fiat it is interesting. ","bb5f0ac1":"87654321 is that a car or some kind of country","2500abc6":"What is basline score?","153467d9":"Now \u0130t's time to Decision Tree regressor","89a78b98":"Doesn't look fine.","b6e6f41d":"Mos t \u0130mportant Features in Decision Tree regression model and km","8222d260":"XGBOOst love brand. \u0130t is interesting.","f9eaa205":"\u0130t looks random forest looks better than Decision Tree. ","1a53c881":"Looks like it's worked. Maybe some values has problems. What about mean square error.","fc8b44ba":"Error is too big","6d745aad":"Okay now we make regression analysis. Price prediction.","f675e0d4":"Random Forest work better than Decision Tree Regressor"}}