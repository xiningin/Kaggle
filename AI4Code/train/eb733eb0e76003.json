{"cell_type":{"82611564":"code","3dfe7ed4":"code","870a3795":"code","0354096b":"code","41ee01ea":"code","09e2b162":"code","42c3f153":"code","00b27f0b":"code","575fd917":"code","c80412e3":"code","4b6c8a57":"code","84854b1e":"code","3694149b":"code","e1101196":"code","8e1b094f":"code","43d13a70":"markdown","63d9f576":"markdown","3e0dcc4e":"markdown","7e2cc9ec":"markdown","6033ae56":"markdown","65b89838":"markdown","8ecc00f6":"markdown","5687a3c8":"markdown","d34e05bd":"markdown"},"source":{"82611564":"import numpy as np\nimport pandas as pd","3dfe7ed4":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","870a3795":"train_data[:50]","0354096b":"train_data.describe(include='all')","41ee01ea":"women = train_data[train_data['Sex'] == 'female']['Survived']\nrate_women = sum(women)\/len(women)\nprint('% of women who survived:', rate_women)","09e2b162":"men = train_data[train_data.Sex == 'male']['Survived']\nrate_men = sum(men)\/len(men)\nprint('% of men who survived:', rate_men)","42c3f153":"# alternative way of computing the above\ntrain_data[['Sex', 'Survived']].groupby(['Sex']).mean()","00b27f0b":"train_data[['Pclass', 'Survived']].groupby(['Pclass']).mean()","575fd917":"# generate correlation data (larger values signify a clear positive\/negative correlation between row\/column labels)\ntrain_data.corr()","c80412e3":"women_count = 0\nwomen_survived_count = 0\nfor idx, row in train_data.iterrows():\n    if row['Sex'] == 'female':\n        women_count += 1\n        if row['Survived'] == 1:\n            women_survived_count += 1\nwomen_survived_count \/ women_count","4b6c8a57":"train_data[:75]","84854b1e":"predictions = []\nfor idx, row in test_data.iterrows():\n    # make your changes in this cell!\n    if row['Sex'] == 'female':\n        if row['Pclass']== 3 or row['Fare']<10:\n            predictions.append(0)\n        else:\n            predictions.append(1)\n                  \n    else: \n        if row['Age'] <=1:\n            predictions.append(1)   \n        else: \n            if row['Name'] == 'Greenfield, Mr. William Bertram':\n                predictions.append(1)\n            else:\n                if row['Name'] == 'Williams, Mr. Charles Eugene':\n                    predictions.append(1)\n                else: \n                    if row['Name'] == 'Beesley, Mr. Lawrence':\n                        predictions.append(1)\n                    else: \n                        if row['Name'] == 'Sloper, Mr. William Thompson':\n                            predictions.append(1)\n                        else: \n                            if row['Name'] == 'Mamee, Mr. Hanna':\n                                predictions.append(1)\n                            else:\n                                predictions.append(0)","3694149b":"assert len(predictions) == len(test_data), 'Number of predictions must match number of test data rows!'","e1101196":"test_data['Survived'] = predictions","8e1b094f":"test_data[['PassengerId', 'Survived']].to_csv('submission.csv', index=False)","43d13a70":"# Loading and examining data","63d9f576":" if row['Sex'] == 'female':\n            if row['Fare'] > 10:\n                if row['Pclass'] ==1 or 2:\n                    predictions.append(1)\n                else:\n                    predictions.append(0)\n            elif row['Pclass']==1:\n                predictions.append(1)\n            else:\n                predictions.append(0)\n   \n    else:\n        predictions.append(0)        \n            ","3e0dcc4e":"# Basic analysis","7e2cc9ec":"# Making predictions","6033ae56":"# Working with rows manually","65b89838":" if row['Sex'] == 'female':\n        if row['Pclass']== 3 or row['Fare']<10:\n            predictions.append(0)\n        else:\n            predictions.append(1)\n    elif row['Age'] <=1:\n        predictions.append(1)   \n    elif row['Name'] == 'Greenfield, Mr. William Bertram':\n        predictions.append(1)\n    elif row['Name'] == 'Williams, Mr. Charles Eugene':\n        predictions.append(1)\n    elif row['Name'] == 'Beesley, Mr. Lawrence':\n        predictions.append(1)\n    elif row['Name'] == 'Sloper, Mr. William Thompson':\n        predictions.append(1)\n    elif row['Name'] == 'Mamee, Mr. Hanna':\n        predictions.append(1)\n    elif row['Name'] == 'Bing, Mr. Lee':\n        predictions.append(1)\n    else:\n        predictions.append(0)","8ecc00f6":"predictions = []\nfor idx, row in test_data.iterrows():\n    # make your changes in this cell!\n    if row['Sex'] == 'female':\n        if row['Pclass']== 3 or row['Fare']<10:\n            predictions.append(0)\n        else:\n            predictions.append(1)\n                  \n           \n    elif row['Age'] <=1:\n        predictions.append(1)   \n    else:\n        predictions.append(0)","5687a3c8":"if row['Sex'] == 'female':\n        if row['Pclass']== 3 or row['Fare']<10:\n            predictions.append(0)\n        else:\n            predictions.append(1)\n                  \n    elif row['Age'] <=1:\n        predictions.append(1)   \n    elif row['Name'] == 'Greenfield, Mr. William Bertram':\n        predictions.append(1)\n    elif row['Name'] == 'Williams, Mr. Charles Eugene':\n        predictions.append(1)\n    elif row['Name'] == 'Beesley, Mr. Lawrence':\n        predictions.append(1)\n    elif row['Name'] == 'Sloper, Mr. William Thompson':\n        predictions.append(1)\n    elif row['Name'] == 'Mamee, Mr. Hanna':\n        predictions.append(1)\n    else:\n        predictions.append(0)","d34e05bd":"predictions = []\nfor idx, row in test_data.iterrows():\n    # make your changes in this cell!\n    if row['Sex'] == 'female':\n        if row['Pclass']== 3 or row['Fare']<10:\n            predictions.append(0)\n        else:\n            predictions.append(1)\n    elif row['Cabin']=='D56':\n        predictions.append(1)\n    elif row['Age'] <=1:\n        predictions.append(1)   \n    else:\n        predictions.append(0)"}}