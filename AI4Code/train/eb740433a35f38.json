{"cell_type":{"c04767d9":"code","69b09362":"code","821a050a":"code","9dcb9e29":"code","0980940c":"code","b32e9410":"code","9f69edd1":"code","376f43ba":"code","8b144358":"code","eaa24b48":"code","17430ea5":"code","603ccc1f":"code","593d02c1":"code","0a3fd81a":"code","ecb5cd4f":"code","f9caf4a4":"code","3c1d951a":"code","47ca1d02":"code","dd22afe4":"code","de0d4dc8":"code","b65b6ee2":"code","f20f53f8":"code","39036236":"markdown","4870d235":"markdown","f612d51d":"markdown","7c255402":"markdown","f9d34abe":"markdown","661bfea9":"markdown","891925f3":"markdown","b9446b6a":"markdown","0ecbe5cf":"markdown","3a85f9f1":"markdown","4d06f957":"markdown","1923f4e2":"markdown","9bb207dc":"markdown","3b4fb885":"markdown","4655ae27":"markdown","efbef400":"markdown"},"source":{"c04767d9":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport seaborn as sns\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected = False)\nimport cufflinks as cf\ncf.go_offline(True)","69b09362":"data=pd.read_csv('..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\ndata2=pd.read_csv('..\/input\/covid-19\/data\/countries-aggregated.csv')","821a050a":"data.head()","9dcb9e29":"data.tail()","0980940c":"data.describe()","b32e9410":"data.info()","9f69edd1":"data.isnull().sum()","376f43ba":"data.corr()","8b144358":"plt.figure(figsize=(12,10))\nsns.heatmap(data.corr())","eaa24b48":"data.corr()['total_vaccinations_per_hundred'].sort_values().plot(kind='bar')","17430ea5":"data.corr()['people_vaccinated_per_hundred'].sort_values().plot(kind='bar')","603ccc1f":"data.corr()['daily_vaccinations_per_million'].sort_values().plot(kind='bar')","593d02c1":"fig=px.choropleth(data_frame=data,\n                          locations=data['country'],\n                          locationmode='country names',\n                          color=data['daily_vaccinations_per_million'],\n                          animation_frame=data['date'],\n                          animation_group=data['vaccines'])\nfig.update_layout(dict1={'title':'Daily Vaccinations Per Million'})\n\nfig.show() ","0a3fd81a":"data.dropna(subset=['daily_vaccinations'],inplace=True)\ns=data['date'].str.split('-',expand=True)\ndata['Year']=s[0]\ndata['Month']=s[1]\ndata['Date']=s[2]\nfig1=px.scatter_geo(data,color='vaccines',locationmode=\"ISO-3\",locations=\"iso_code\",opacity=0.6,\n                     hover_name=\"iso_code\", size=\"daily_vaccinations\",projection='conic equal area',animation_group =\"iso_code\",color_continuous_scale='blackbody',\n                     animation_frame=\"Date\",scope='world',symbol='vaccines',template=\"plotly_dark\",title='Vaccination Count Over The World Over Time' )\nfig1.layout.updatemenus[0].buttons[0].args[1][\"frame\"][\"duration\"] = 400\n\nfig1.update_geos(\n    landcolor=\"green\",\n    oceancolor=\"blue\",\n    showocean=True,\n    lakecolor=\"LightBlue\"\n)\n\nfig1.update_traces(\n    marker_coloraxis=None\n)\nfig1.show()","ecb5cd4f":"data.groupby('vaccines')['country'].count().iplot(title='Covid vaccines Count')","f9caf4a4":"fig=px.choropleth(data_frame=data,\n                          locations=data['country'],\n                          locationmode='country names',\n                          color=data['total_vaccinations_per_hundred'],\n                          animation_frame=data['date'],\n                          animation_group=data['vaccines'])\nfig.update_layout(dict1={'title':'Total Vaccinations per hundred'})\nfig.show() ","3c1d951a":"s=data.drop_duplicates(subset=['iso_code'])['vaccines'].apply(lambda x: x.split(','))\ndic={}\nfor i in s:\n    for j in i :\n        if j[0]==' ':\n            k= j[1:]\n        elif j[-1]==' ':\n            k=j[:-1]\n        else:\n            k=j\n        if k not in dic :\n            dic[k]=1\n        else:\n            dic[k]+=1\npx.bar(x=list(dic.keys()),y=list(dic.values()),color=list(dic.keys()),template='plotly_dark',labels={'x':'Vaccine Name','y':'Total Count'})","47ca1d02":"df = px.data.gapminder()\nfig = px.scatter_geo(df, locations=\"iso_alpha\", color=\"continent\",\n                     hover_name=\"country\", size=\"pop\",\n                     animation_frame=\"year\",\n                     projection=\"natural earth\")\nfig.show()","dd22afe4":"data.groupby('country')['total_vaccinations_per_hundred'].mean().sort_values()[40:].iplot(title='Top 20 countries based on Total Vaccinations Per Hundred')\ndata.groupby('country')['daily_vaccinations_per_million'].mean().sort_values()[40:].iplot(title='Top 20 countries based on Daily Vaccinations Per Million ')","de0d4dc8":"arr=[]\nindex1=data.groupby(['country','date']).count().index\nindex2=data2.groupby(['Country','Date']).count().index\nfor i in index2:\n    if i in index1:\n        arr.append(1)\n    else:\n        arr.append(0)\ndata2['Vaccine_is_there']=arr\ndata2.head()","b65b6ee2":"t=data2.groupby(['Country']).sum()\ncons=t[t['Vaccine_is_there']==0].index\ndan=data2[~data2['Country'].isin(cons)]","f20f53f8":"data2['Date']=pd.to_datetime(data2['Date'])\ndfs=list(data2.groupby(\"Country\"))\nfirst_title = dfs[0][0]\ntraces = []\nbuttons = []\nfor i,d in enumerate(dfs):\n    visible=[False]*len(dfs)\n    visible[i]=True\n    name=d[0]\n    p=d[1][d[1]['Vaccine_is_there']==0]\n    n=d[1][d[1]['Vaccine_is_there']==1]\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(x=p['Date'],y=p['Deaths'].values))\n    fig.add_trace(go.Scatter(x=n['Date'],y=n['Deaths'].values))\n    \n    traces.append(\n    fig.update_traces(visible=True if i==0 else False).data[0])\n    buttons.append(dict(label=name,\n                        method=\"update\",\n                        args=[{\"visible\":visible},\n                              {\"title\":f\"{name}\"}]))\n\nupdatemenus = [{'active':0, \"buttons\":buttons}]\nshapes=[({'type': 'line',\n               'xref': 'x',\n               'yref': 'y',\n               'x0': '2020-12-29' ,\n               'y0': 0,\n               'x1': '2020-12-29',\n               'y1': 3000})]\nfig = go.Figure(data=traces,\n                 layout=dict(updatemenus=updatemenus,shapes=shapes,template='plotly_dark'))\nfig.update_layout(title=first_title, title_x=0.5)\nfig.show()","39036236":"# Change in death rate after introduction of Vaccine\nNow we will be using the sencond dataset regarding the deaths, recoverings and confirmed cases.","4870d235":"**Now we will be using the plotly's scatter_geo graph for plotting the corresponding daily_vaccination numbers by thier place or continent in use.\nTo read more about :- [Plotly's scatter_geo graph](https:\/\/plotly.com\/python\/scatter-plots-on-maps\/)**","f612d51d":"By seeing the below graph, we can estimate the impact of Pfizer, BioNTech and Moderna vaccine on the world.","7c255402":"# Thank You","f9d34abe":"# Necessary Imports","661bfea9":"**We can clearly see that Pfizer\/Biotech's impact in USA and Covaxin's impact on India is huge and it keeps on growing by the date increases . We can also see heavy impact of CNBG\/Cinovac starting in China . Sinovac takes a sudden roll in Turkey on 14th and keeps on growing after that :)**","891925f3":"# Vaccination Outcomes of World...\nIn this notebook we will be doing EDA on the vaccine data of the different countries with their population v\/s total vaccinations v\/s people vaccinated mainly.","b9446b6a":"From this we cans see that Pfizer is the vaccine most spread in the world in Januray 2021 followed by Moderna and Sinovac :)","0ecbe5cf":"## The data is dated till 29 Janunary (Last updated)","3a85f9f1":"### After the white line the vaccine was introduced :) You can see the results for different countries with using the drop down menu.\nCurrently looking for a solution for the drop down bug. Please comment below if you have any.","4d06f957":"We see the Pfizer\/BioNTech, AstraZeneca and Moderna is mostly used for vaccination.","1923f4e2":"The below graph gives us the freedom to choose a country of out choice from the dropdown and see the corresponding outcomes.","9bb207dc":"Reading the files csv data files.","3b4fb885":"# Please Upvote and Comment below if you liked this notebook.\n### Any suggestiongs are accepted and would be happy to listen to your feedback.\ud83d\ude0a","4655ae27":"# Which vaccine is distributed in the world the most ??\u00b6","efbef400":"**Moreover we will be using plotly's choropleth map-graph which gives a clear and interactive understanding on the feautres by there corresponding place on map.\nTo read more about :-  [Plotly's Choropleth Graphs](https:\/\/plotly.com\/python\/choropleth-maps\/)**"}}