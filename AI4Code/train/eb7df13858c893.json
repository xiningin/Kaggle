{"cell_type":{"5a9935f8":"code","8a944f89":"code","1c48e2a7":"code","6744a486":"code","2d47b264":"code","2d8b8db1":"markdown"},"source":{"5a9935f8":"import os\nimport numpy as np\nimport pandas as pd\n\nimport pydicom\nfrom pydicom.pixel_data_handlers.util import apply_voi_lut\n\nfrom tqdm.notebook import tqdm\n\nfrom PIL import Image","8a944f89":"#Util Methods\ndef read_xray(path):\n    dicom_file = pydicom.read_file(path)\n    # VOI LUT (if available by DICOM device) is used to transform raw DICOM data to \n    # \"human-friendly\" view\n    data = apply_voi_lut(dicom_file.pixel_array, dicom_file)\n    #MONOCHROME1 indicates that the greyscale ranges from bright to dark with ascending pixel values, \n    #whereas MONOCHROME2 ranges from dark to bright with ascending pixel values.\n    if dicom_file.PhotometricInterpretation == 'MONOCHROME1':\n        data = np.amax(data) - data\n    data = data - np.min(data)\n    data = data\/np.max(data)\n    data = (data * 255).astype(np.uint8)\n    return data\n\ndef resize(array, size):\n    im = Image.fromarray(array)\n    #LANCZOS (a high-quality downsampling filter)\n    im = im.resize((size,size),  resample = Image.LANCZOS)\n    return im","1c48e2a7":"training_image_ids = []\ndim_0 = []\ndim_1 = []\n\nfor split in ['train','test']:\n    load_dir = f'..\/input\/vinbigdata-chest-xray-abnormalities-detection\/{split}\/'\n    save_dir = f'\/kaggle\/tmp\/{split}'\n    #Creating save_dirs\n    os.makedirs(save_dir, exist_ok = True)\n    #iterating over each file\n    for file in tqdm(os.listdir(load_dir)):\n        xray = read_xray(load_dir+file)\n        im = resize(xray, size = 512)\n        im.save(save_dir+file.replace('.dicom','.png'))\n        \n        if split == 'train':\n            training_image_ids.append(file.replace('.dicom',''))\n            dim_0.append(xray.shape[0])\n            dim_1.append(xray.shape[1])","6744a486":"! tar -zcf train.tar.gz -C \"\/kaggle\/tmp\/train\"\n! tar -zcf test.tar.gz -C \"\/kaggle\/tmp\/test\"","2d47b264":"df = pd.DataFrame({\"image_id\":training_image_ids,\"dim_0\":dim_0,\"dim1\":dim_1})\ndf.to_csv(\"train_metadata.csv\", index = False)","2d8b8db1":"# 1. Preprocessing\n\nConverting DICOM files to png images.\nFrom https:\/\/www.kaggle.com\/xhlulu\/vinbigdata-process-and-resize-to-image"}}