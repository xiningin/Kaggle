{"cell_type":{"ec10a316":"code","57476749":"code","9e7a51c2":"code","a4dbe90c":"code","eded6736":"code","8bd86d6c":"markdown"},"source":{"ec10a316":"import pandas as pd\nimport numpy as np\nfrom PIL import Image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n\n%matplotlib inline","57476749":"train_dir = '\/kaggle\/input\/landmark-retrieval-2020\/train\/'\ntrain = pd.read_csv('\/kaggle\/input\/landmark-retrieval-2020\/train.csv')","9e7a51c2":"def get_image_path(df, num, train_dir):\n    folder = []\n    for i in range(3):\n        folder.append(df['id'][num][i])\n        \n    _path = train_dir + '{}\/{}\/{}\/'.format(folder[0], folder[1], folder[2]) \n    file_name = df['id'][num] + '.jpg'\n    image_path = _path + file_name\n    return image_path","a4dbe90c":"def get_img_from_landmark_id(df, landmark_id, train_dir):\n    landmark_df = df[df['landmark_id']==landmark_id]\n    \n    if len(landmark_df)==0:\n        return \"no picture of landmark_id={}\".format(landmark_id)\n    image_path = []\n    for i in range(len(landmark_df)):\n        image_path.append(get_image_path(df, i, train_dir))\n    \n    print(\"pictures of landmark_id={}\".format(landmark_id))\n    plt.figure(figsize=(8.0, 20.0))\n    plt.subplots_adjust(wspace=0.6, hspace=1)\n    for i, file_name in enumerate(image_path):\n        display_image = plt.imread(file_name)\n        plt.title(landmark_df['id'][i])\n        plt.subplot(len(image_path),2,i+1)\n        plt.imshow(display_image)","eded6736":"get_img_from_landmark_id(train, 1, train_dir)","8bd86d6c":"I made a [notebook](https:\/\/www.kaggle.com\/shumpeiabe\/show-image-and-landmark-id) that shows a image when you give a row number.\n\nBut in this competition, I thought displaying image from landmark_id is more useful than it. So, this is it."}}