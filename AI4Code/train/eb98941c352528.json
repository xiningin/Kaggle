{"cell_type":{"f5751645":"code","13fa7bef":"code","f0c2857a":"code","6bf6c41e":"code","25d1f74b":"code","e613fcb3":"code","d001490b":"code","d1114adc":"code","4bf3538d":"code","6a87c452":"code","5bbdd024":"code","3c699f3c":"code","d876615a":"code","b04fdaed":"code","3e77e468":"code","af9082be":"code","6105884e":"code","3f9cbd84":"code","a1eecd56":"code","4920413a":"code","030c7796":"code","5ba5bf18":"code","3083c3d5":"code","1ffb0342":"code","bde4fc1b":"code","1c766053":"code","7b3ccdb5":"code","ce59a688":"code","af6b4cbc":"code","190fda55":"code","722a7bbf":"code","81b1cfa7":"code","ae1c5af6":"code","442d7647":"code","97442c6e":"code","ad9d77ca":"code","7a6b2792":"code","bcd02d46":"markdown"},"source":{"f5751645":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","13fa7bef":"numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nnumpy_array = np.array(numbers)\nprint(numpy_array)","f0c2857a":"pandas_series = pd.Series(data=numbers)\nprint(pandas_series)","6bf6c41e":"my_index = ['a', 'b', 'c', 'd', 'e', 'f', 'g','h', 'i','j']\npandas_series = pd.Series(data=numbers, index=my_index, dtype=float)\nprint(pandas_series)","25d1f74b":"numbers_dictionary = {'a': 0, 'b':1, 'c':2, 'd':3, 'e':4, 'f':5, 'g':6,'h':7, 'i':8,'j':9}\npandas_series = pd.Series(data=numbers_dictionary)\nprint(pandas_series)","e613fcb3":"print(pandas_series.ndim)","d001490b":"print(pandas_series.dtype)","d1114adc":"print(pandas_series.shape)","4bf3538d":"print(pandas_series.sum())\nprint(pandas_series.max())\nprint(pandas_series.mean())","6a87c452":"print(pandas_series+pandas_series)","5bbdd024":"print(np.sqrt(pandas_series))","3c699f3c":"print(pandas_series*pandas_series)","d876615a":"print(pandas_series.median())\nprint(pandas_series[pandas_series>pandas_series.median()])","b04fdaed":"print(pandas_series[pandas_series == 5])","3e77e468":"df = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore.csv\")","af9082be":"print(df.shape)","6105884e":"print(df.columns)","3f9cbd84":"print(df.dtypes)","a1eecd56":"df.head()","4920413a":"df.tail(7)","030c7796":"df.info()","5ba5bf18":"print(df.isnull().sum().sort_values(ascending=False))","3083c3d5":"print(df.describe())","1ffb0342":"print(df[\"Category\"].describe())","bde4fc1b":"df.describe(include=['O'])","1c766053":"df[\"Category\"].value_counts()","7b3ccdb5":"df[df[\"Category\"]==\"1.9\"]","ce59a688":"df.loc[10472,\"Category\"]=\"PHOTOGRAPHY\"","af6b4cbc":"df.sort_values(by='Rating', ascending=False).head(10)","190fda55":"df.drop(10472)\ndf.sort_values(by='Rating', ascending=False).head(10)","722a7bbf":"#1. y\u00f6ntem\ndf = df.drop(10472)\n#2.y\u00f6ntem\n#df.drop(10472, inplace = True)\ndf.sort_values(by='Rating', ascending=False).head(10)","81b1cfa7":"df= df.drop(\"Content Rating\", axis=1)","ae1c5af6":"df =df.drop(columns =\u201cLast Updated\u201d)\nprint(df.columns)","442d7647":"print(df.groupby(\"Category\")[\"Rating\"].mean().head(10))","97442c6e":"print(df.groupby([\"Category\", \"Type\"])[\"Rating\"].max().head(10))","ad9d77ca":"df[\"Rating\"].fillna(df.groupby(\"Category\")[\"Rating\"].transform(\"mean\"), inplace=True)\nprint(df.isnull().sum().sort_values(ascending=False))","7a6b2792":"df = df.dropna()\nprint(df.isnull().sum().sort_values(ascending=False))","bcd02d46":"**Seriler Numpy dizileri baz al\u0131narak olu\u015fturulmu\u015ftur. Dolay\u0131s\u0131yla tek boyutlu Numpy dizilerine \u00e7ok benzerler.**"}}