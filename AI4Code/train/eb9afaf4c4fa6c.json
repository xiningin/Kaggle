{"cell_type":{"dc1b2619":"code","9c416d32":"code","ab1edecd":"code","707a9832":"code","30f43899":"code","ea10aea8":"code","a72be037":"code","5b53bb65":"code","9dad6c4b":"code","702cf61e":"code","bf10d9db":"code","ad88f146":"code","2d4db3af":"code","7c7eff1b":"code","07eea7c3":"code","842106fa":"code","84e7c852":"code","c54b5e00":"code","d4129be6":"code","a892cb29":"code","19bae369":"code","d296401b":"code","dddcd5f0":"code","12a33613":"code","88b79e30":"code","26c93861":"code","95dca8e6":"code","6ba9f6bb":"code","1ef45c8b":"code","993696b2":"code","9291557a":"code","95f820e5":"code","9d64cf9a":"code","13636d8b":"code","6f1df3e6":"code","00dbd370":"code","d1dce59b":"code","516d0e22":"code","a945823f":"code","a12f0ea1":"code","8d7b37a0":"code","e4e35f68":"code","106dd140":"code","32ca42d5":"code","6d43ffd1":"code","e4a14521":"code","a5228ce2":"code","74c5bfa3":"code","8d973c84":"code","30c677ea":"markdown","f1666574":"markdown","d68a1de1":"markdown","bb069475":"markdown","eea887f5":"markdown","e16dcc03":"markdown","76f7f354":"markdown","03fa76da":"markdown","1b424940":"markdown","96856785":"markdown","ef2a4b79":"markdown","e8565489":"markdown","222f4b18":"markdown","3f94b62a":"markdown","51024073":"markdown","1bc5245e":"markdown","1835169b":"markdown","21f853e2":"markdown","1b910345":"markdown","0e046527":"markdown"},"source":{"dc1b2619":"import pandas as pd\nimport numpy as np\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import rcParams\nimport warnings\nwarnings.filterwarnings('ignore')","9c416d32":"df=pd.read_csv('..\/input\/iris-dataset\/IRIS.csv')","ab1edecd":"df.columns","707a9832":"df.head()","30f43899":"df.tail()","ea10aea8":"df.shape","a72be037":"df.isnull().sum()","5b53bb65":"df.describe()","9dad6c4b":"df.info()","702cf61e":"df.corr()","bf10d9db":"rcParams['figure.figsize']=(8,6)\nsns.heatmap(df.corr(),annot=True,cmap = 'Wistia')\nplt.title('Heatmap for the Dataset', fontsize = 20)\nplt.show()","ad88f146":"df.groupby('species').count()","2d4db3af":"df['species'].value_counts()","7c7eff1b":"df.dtypes","07eea7c3":"df.groupby('species').mean()","842106fa":"sns.pairplot(df,hue ='species',palette='pastel')\n","84e7c852":"df.hist(figsize=(8,6))","c54b5e00":"sns.boxplot(y=df['petal_length'],x=df['species'],data=df)","d4129be6":"sns.boxplot(y=df['petal_width'],x=df['species'],data=df)","a892cb29":"sns.boxplot(y=df['sepal_length'],x=df['species'],data=df)","19bae369":"sns.boxplot(y=df['sepal_width'],x=df['species'],data=df)","d296401b":"from sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom xgboost import XGBClassifier","dddcd5f0":"y = df['species']\nX = df.drop(['species'], axis = 1)","12a33613":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.30)","88b79e30":"#lr=LogisticRegression()","26c93861":"y_train","95dca8e6":"#lryhat=lr.predict(X_test)","6ba9f6bb":"#classification_report(lryhat,y_test)","1ef45c8b":"#confusion_matrix(lryhat,y_test)\n","993696b2":"#accuracy_score(lryhat,y_test)","9291557a":"cl=SVC(kernel='linear')","95f820e5":"cl.fit(X_train,y_train)","9d64cf9a":"clyhat=cl.predict(X_test)","13636d8b":"classification_report(clyhat,y_test)","6f1df3e6":"confusion_matrix(clyhat,y_test)","00dbd370":"accuracy_score(clyhat,y_test)","d1dce59b":"dtc = DecisionTreeClassifier()\ndtc.fit(X_train, y_train)","516d0e22":"dtc.fit(X_train,y_train)","a945823f":"dtcyhat=dtc.predict(X_test)","a12f0ea1":"classification_report(dtcyhat,y_test)","8d7b37a0":"accuracy_score(dtcyhat,y_test)","e4e35f68":"knn = KNeighborsClassifier(n_neighbors =12)  # n_neighbors means k\nknn.fit(X_train, y_train)\nknnyhat = knn.predict(X_test)","106dd140":"accuracy_score(knnyhat,y_test)","32ca42d5":"classifier = GaussianNB()\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)","6d43ffd1":"print('accuracy is',accuracy_score(y_pred,y_test))","e4a14521":"model=XGBClassifier()","a5228ce2":"model.fit(X_train,y_train)","74c5bfa3":"modelyhat=model.predict(X_test)","8d973c84":"accuracy_score(modelyhat,y_test)","30c677ea":"<h3>Classification Models<\/h3>","f1666574":"<h3>KNN MODEL<\/h3>","d68a1de1":"<h4>We can observe that some features are highly correlated with one another.<\/h4>","bb069475":"<h3>NAIVE BAYES<\/h3>","eea887f5":"<h3>CONCLUSION<\/h3>","e16dcc03":"<h3>Reading the Dataset<\/h3>","76f7f354":"<h5>ACCURACY OBTAINED IS 97.77%<\/h5>","03fa76da":"<h3>Data Visualization<\/h3>","1b424940":"<h5>ACCURACY OBTAINED IS 100%<\/h5>","96856785":"<h5>ACCURACY OBTAINED IS 97.77%<\/h5>","ef2a4b79":"<h5>ACCURACY OBTAINED IS 97.77%<\/h5>","e8565489":"<h3>DECISION TREE<\/h3>","222f4b18":"<h3>Exploratory Data Analysis<\/h3>","3f94b62a":"We see that the highest accuracy is achieved by Naive Bayes Algorithm.","51024073":"<h3>XGBOOST<\/h3>","1bc5245e":"<h5>ACCURACY OBTAINED IS 97.77%<\/h5>","1835169b":"<h3>SUPPORT VECTOR MACHINES<\/h3>","21f853e2":"<h3>LOGISTIC REGRESSION<\/h3>","1b910345":"<h3>Data Preprocessing<\/h3>","0e046527":"<h5>ACCURACY OBTAINED IS 97.77%<\/h5>"}}