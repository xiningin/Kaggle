{"cell_type":{"824b7cb5":"code","e09c1bc7":"code","ebb45053":"code","26caeeb8":"code","d82f666a":"code","b2401ab3":"code","83e3911f":"code","bc173d38":"code","24fa1e68":"code","62912655":"code","71c36296":"code","459d972c":"code","fbb04b55":"code","0ff43831":"code","4fc15887":"code","95d50a94":"code","8ed066f3":"code","0046b588":"code","8b0e91a6":"code","d50aea27":"code","fe0a4df9":"code","c8c6a6c9":"code","9d9dc2d5":"code","0341e7cb":"code","39de08f1":"code","67e48a1d":"code","04013e81":"code","cd430812":"code","b30f3ccb":"code","3a46efaa":"code","384079c9":"code","7058d45c":"code","91927da5":"code","c2425aea":"code","2e580223":"code","bd80a516":"code","d6e4c3d2":"code","a98757f8":"code","2fdd71fa":"code","de02cd1c":"code","c846796c":"code","db91e249":"code","bdb6867a":"code","c9fe1cb4":"code","86ac6e00":"code","c2065faf":"code","86ce87f9":"code","ae5cfe34":"code","87c41f2a":"markdown","c057b876":"markdown","f8c98aa7":"markdown","50f152e4":"markdown","00a59623":"markdown","b6b38457":"markdown","2cbd3788":"markdown","b1eac97b":"markdown","18cbb24a":"markdown","52499f24":"markdown","81da26db":"markdown","1970fea3":"markdown","cf998c44":"markdown","5b2624a3":"markdown","54b9719e":"markdown","6ad3a1c7":"markdown","8354593a":"markdown","4a2d5ec4":"markdown","a769b047":"markdown","00dbdea8":"markdown","9121c5fe":"markdown"},"source":{"824b7cb5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e09c1bc7":"#importing libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.gridspec import GridSpec\nimport seaborn as sns\n%matplotlib inline\nimport random\nfrom datetime import datetime","ebb45053":"#Loading the dataset\ndata = pd.read_csv(\"..\/input\/air-quality-in-mumbai-2015\/mumbai-aqi-2015.csv\")","26caeeb8":"data.head()","d82f666a":"data.shape","b2401ab3":"#checking for missing values\nprint(data.isna().sum())","83e3911f":"#importing imputation library\nfrom sklearn.impute import SimpleImputer","bc173d38":"imp_mean_so2 = SimpleImputer(missing_values=np.nan,  strategy='mean')\nimp_mean_no2 = SimpleImputer(missing_values=np.nan,  strategy='mean')\nimp_mean_rspm = SimpleImputer(missing_values=np.nan,  strategy='mean')\nimp_mean_spm = SimpleImputer(missing_values=np.nan,  strategy='mean')\n","24fa1e68":"imp_mean_so2.fit(data[['so2']])\nimp_mean_no2.fit(data[['no2']])\nimp_mean_rspm.fit(data[['rspm']])\nimp_mean_spm.fit(data[['spm']])","62912655":"data['so2'] = imp_mean_so2.fit_transform(data[['so2']]).ravel()\ndata['no2'] = imp_mean_no2.fit_transform(data[['no2']]).ravel()\ndata['rspm'] = imp_mean_rspm.fit_transform(data[['rspm']]).ravel()\ndata['spm'] = imp_mean_spm.fit_transform(data[['spm']]).ravel()\n","71c36296":"#confirming if the imputation has worked\ndata.isna().sum()","459d972c":"data_clean = data.drop(['sampling_date','state','agency', 'pm2_5','stn_code','location' ], axis=1)","fbb04b55":"#creating a backup of data_clean dataset\ndata_clean_backup = data_clean.copy()","0ff43831":"data_clean.head()","4fc15887":"data_clean['location_monitoring_station'].unique()","95d50a94":"locn = ['Worli','Kalbadevi', 'Parel']","8ed066f3":"data_clean['location_monitoring_station'] = data_clean['location_monitoring_station'].replace('Worli, Mumbai',locn[0])\ndata_clean['location_monitoring_station'] = data_clean['location_monitoring_station'].replace('Bank of India, Kalbadevi Branch, Kalbadevi, Mumbai',locn[1])\ndata_clean['location_monitoring_station'] = data_clean['location_monitoring_station'].replace('Parel T.T., BMC Southward Office, DR. Ambedkar Road, Mumbai',locn[2])","0046b588":"#verifying if the replacement has worked\ndata_clean['location_monitoring_station'].unique()","8b0e91a6":"data_clean['date'] = pd.to_datetime(data_clean.date).dt.strftime('%d-%b-%Y')","d50aea27":"data_clean.head()","fe0a4df9":"#backing up the dataset\ndata_clean_backup = data_clean.copy()","c8c6a6c9":"pd.options.display.float_format = '{:.2f}'.format ","9d9dc2d5":"data_clean.head()","0341e7cb":"data_clean.groupby(\"type\").size()","39de08f1":"types = ['Industrial Areas','Residential','Residential and Rural']\n","67e48a1d":"data_clean['type'] = data_clean['type'].replace('Industrial Area',types[0])\ndata_clean['type'] = data_clean['type'].replace('Residential and others',types[1])\ndata_clean['type'] = data_clean['type'].replace('Residential, Rural and other Areas',types[2])","04013e81":"#verifying if the replacement has worked\ndata_clean.groupby(\"type\").size()","cd430812":"#Taking Backup\ndata_clean_backup = data_clean.copy()","b30f3ccb":"data_clean['Year'] = pd.to_datetime(data_clean['date']).dt.year\ndata_clean['Month'] = pd.to_datetime(data_clean['date']).dt.strftime('%b')","3a46efaa":"data_clean.head()","384079c9":"data_clean = data_clean.rename(columns={'location_monitoring_station':'location'})","7058d45c":"#Taking Backup\ndata_clean_backup = data_clean.copy()","91927da5":"plt.style.use('seaborn-deep')\nplt.figure(figsize=(10,10))\nplt.grid(True)\nx = data_clean['so2']\ny = data_clean['no2']\nplt.hist([x,y], label=['So2 Distribution','No2 Distribution'])\nplt.legend(loc='upper right')\nplt.title('SO2 & NO2 Distribution')\nplt.show()","c2425aea":"plt.style.use('seaborn-deep')\nplt.figure(figsize=(10,10))\nx = data_clean['spm']\ny = data_clean['rspm']\nplt.hist([x,y], label=['spm Distribution','rspm Distribution'])\nplt.legend(loc='upper right')\nplt.title('SPM & RSPM Distribution')\nplt.show()","2e580223":"#creating a seperate dataframe with feature columns for correlation matrix\ndata_clean_feature = pd.DataFrame(data_clean, columns= ['so2','no2','spm','rspm'])\ndata_clean_feature.head()","bd80a516":"corr = data_clean_feature.corr(method='pearson')\nfig = plt.figure(figsize=(10,10))\nax = fig.add_subplot(111)\ncax = ax.matshow(corr,cmap='coolwarm', vmin=-1, vmax=1)\nfig.colorbar(cax)\nticks = np.arange(0,len(data_clean_feature.columns),1)\nax.set_xticks(ticks)\nplt.xticks(rotation=90)\nax.set_yticks(ticks)\nax.set_xticklabels(data_clean_feature.columns)\nax.set_yticklabels(data_clean_feature.columns)\nplt.show()","d6e4c3d2":"sns.set(style=\"darkgrid\")\nfig, ax = plt.subplots(figsize=(15,10))\nax = sns.swarmplot (x='location', y='rspm', data=data_clean, hue = 'type')\nplt.title('RSPM Distribution Across Mumbai')","a98757f8":"sns.set(style=\"darkgrid\")\nfig, ax = plt.subplots(figsize=(15,10))\nax = sns.swarmplot (x='location', y='spm', data=data_clean, hue = 'type')\nplt.title('SPM Distribution Across Mumbai')","2fdd71fa":"sns.set(style=\"darkgrid\")\nfig, ax = plt.subplots(figsize=(15,10))\nax = sns.swarmplot (x='location', y='so2', data=data_clean, hue = 'type')\nplt.title('SO2 Distribution Across Mumbai')","de02cd1c":"sns.set(style=\"darkgrid\")\nfig, ax = plt.subplots(figsize=(15,10))\nax = sns.swarmplot (x='location', y='no2', data=data_clean, hue = 'type')\nplt.title('NO2 Distribution Across Mumbai')","c846796c":"g = plt.figure(figsize=(20,20))\ng = sns.catplot(x=\"Year\", y=\"rspm\", hue=\"location\", data=data_clean, kind=\"bar\", palette=\"muted\")\ng.set_titles(\"RSPM Concentration\")\ng.despine(left=True)\ng.set_ylabels(\"RSPM\")\nplt.title(\"RSPM Increase over the Years per Location\")","db91e249":"g = plt.figure(figsize=(20,20))\ng = sns.catplot(x=\"Year\", y=\"spm\", hue=\"location\", data=data_clean, kind=\"bar\", palette=\"muted\")\ng.set_titles(\"SPM Concentration\")\ng.despine(left=True)\ng.set_ylabels(\"SPM\")\nplt.title(\"SPM Increase over the Years per Location\")","bdb6867a":"g = plt.figure(figsize=(20,20))\ng = sns.catplot(x=\"Year\", y=\"so2\", hue=\"location\", data=data_clean, kind=\"bar\", palette=\"muted\")\ng.set_titles(\"SO2 Concentration\")\ng.despine(left=True)\ng.set_ylabels(\"SO2\")\nplt.title(\"SO2 Increase over the Years per Location\")","c9fe1cb4":"g = plt.figure(figsize=(20,20))\ng = sns.catplot(x=\"Year\", y=\"no2\", hue=\"location\", data=data_clean, kind=\"bar\", palette=\"muted\")\ng.set_titles(\"NO2 Concentration\")\ng.despine(left=True)\ng.set_ylabels(\"NO2\")\nplt.title(\"NO2 Increase over the Years per Location\")","86ac6e00":"sns.relplot(x=\"Year\", y=\"spm\", kind=\"line\", hue=\"type\",data=data_clean)\nplt.title(\"SPM Distribution per Year for all location types\")","c2065faf":"sns.relplot(x=\"Year\", y=\"rspm\", kind=\"line\", hue=\"type\",data=data_clean)\nplt.title(\"RSPM Distribution per Year for all location types\")","86ce87f9":"sns.relplot(x=\"Year\", y=\"so2\", kind=\"line\", hue=\"type\",data=data_clean)\nplt.title(\"SO2 Distribution per Year for all location types\")","ae5cfe34":"sns.relplot(x=\"Year\", y=\"no2\", kind=\"line\", hue=\"type\",data=data_clean)\nplt.title(\"NO2 Distribution per Year for all location types\")","87c41f2a":"**Pollutant Distribution across Mumbai**","c057b876":"# **Formatting the Columns**","f8c98aa7":"**Data Analysis of Mumbai Air Quality**\n\nFirst of all thank you @aayushkurup for uploading this dataset. In this notebook, I have tried to perform a simple data-analysis on the Mumbai Air Quality data.","50f152e4":"**Pollutant Increase Over the Years per Location**","00a59623":"**Column = so2, no2, rspm, spm**\n\nPerforming the a simple 'Mean\/Median' Imputation on these columns. Making an assumption here that there is no correlation between these columns.","b6b38457":"**column = location_monitoring_station**","2cbd3788":"The \u201ccorr()\u201d method evaluates the correlation between all the features, then it can be graphed with a color coding\n\nOn this example, when there is no correlation between 2 variables (when correlation is 0 or near 0) the color is gray. The darkest red means there is a perfect positive correlation, while the darkest blue means there is a perfect negative correlation.","b1eac97b":"# **Dropping Unwanted Columns**\n\nColumns such as sampling_date, state, agency, date are of no use. Also the column = pm2_5 is completely empty\n","18cbb24a":"**Finding co-relation between features i.e. SO2, NO2, SPM, RSPM**","52499f24":"# **Handling Missing Values**\n\nThere are two ways of handling missing values. \n\n1. Drop all the missing value column\/index\n2. Perform imputation on these missing values\n\nIn this section, I will be performing imputation on every column","81da26db":"> **Importing Libraries**","1970fea3":"**Renaming the 'Location Monitoring Station' to 'Location'**","cf998c44":"**column = type**\n\nWith an assumption that Industrial Area is same as Industrial Areas. Residenial and Others is simply 'Residential' and Residential, Rual and other Areas is simply 'Residential and Rural'\n","5b2624a3":"**column = so2, no2, rspm, spm**\n\nRounding to 2 decimal points","54b9719e":"**Loading the Dataset**","6ad3a1c7":"**column = date**\n\nChanging the date column format to dd-mmm-yyyy","8354593a":"For the easy of analysis, replacing\n\nWorli, Mumbai with Worli\n\nBank of India, Kalbadevi Branch, Kalbadevi, Mumbai with Kalbadevi\n\nParel T.T., BMC Southward Office, DR. Ambedkar Road, Mumbai with Parel\n\n\n","4a2d5ec4":"# **Visual Data Analysis**\n","a769b047":"**Pollutant Distribution per Year for all Location Types**","00dbdea8":"**Adding Two Extra Columns [For Date Time Series]**","9121c5fe":"**Dataset Exploration**"}}