{"cell_type":{"38a59dd5":"code","4535538e":"code","478fd4c4":"code","f99604b6":"code","a36894be":"code","74bba03b":"code","6b0ac0ec":"code","1161a1b4":"code","9e75aa81":"code","955169b8":"code","ef9e5efe":"code","427f8250":"code","194a0aae":"code","12342f9a":"code","da03c225":"code","4bcd5a04":"code","7b19dcba":"code","310830e7":"code","30941656":"code","2b082e5d":"code","79a1eda8":"code","1f11c4cb":"code","a593fe66":"code","eb5438d1":"code","1db0da45":"markdown","663a63ae":"markdown","1f1537e6":"markdown","884577a2":"markdown","16d56e84":"markdown","590c78e2":"markdown","bffee9ec":"markdown"},"source":{"38a59dd5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4535538e":"df=pd.read_csv('\/kaggle\/input\/80-cereals\/cereal.csv')\ndf.head()","478fd4c4":"df.shape","f99604b6":"df.isnull().sum()","a36894be":"numerical=df.select_dtypes(include=['int64','float64'])\nnumerical.head()","74bba03b":"categorical=df.select_dtypes(include='object')\ncategorical.head()","6b0ac0ec":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","1161a1b4":"sns.distplot(df['rating'])","9e75aa81":"sns.barplot(data=df,x='rating',y='sugars')","955169b8":"df.columns","ef9e5efe":"sns.barplot(data=df,x='protein',y='rating')","427f8250":"sns.barplot(data=df,x='vitamins',y='rating')","194a0aae":"sns.barplot(df['fat'],df['rating'])","12342f9a":"df.columns","da03c225":"plt.figure(figsize=(15,10))\nsns.barplot(df['sodium'],df['rating'])","4bcd5a04":"sns.barplot(df['fiber'],df['rating'])","7b19dcba":"plt.figure(figsize=(15,10))\nsns.barplot(df['carbo'],df['rating'])","310830e7":"corr=df.corr()","30941656":"plt.figure(figsize=(15,10))\nsns.heatmap(corr, cbar = True,  square = True, annot=True,cmap= 'coolwarm')","2b082e5d":"categorical.head()","79a1eda8":"dummy=pd.get_dummies(df[['name','mfr','type']])\ncolumn_name=df.columns.values.tolist() \ncolumn_name.remove('name') \ncolumn_name.remove('mfr')\ncolumn_name.remove('type')\ndata1=df[column_name].join(dummy) ","1f11c4cb":"data1.head()","a593fe66":"from sklearn.model_selection import train_test_split\ny = data1['rating']\nX = data1.drop('rating', axis=1)\n\n# setting up testing and training sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=27)\nprint (X_train.shape)\nprint (y_train.shape)\nprint (X_test.shape)\nprint (y_test.shape)","eb5438d1":"from sklearn.linear_model import LinearRegression\nlm=LinearRegression()\nimport statsmodels.api as sm\nlm = sm.OLS(y_train, X_train).fit()\nlm.summary()","1db0da45":"As the value of sugar increases in the ceareals the rating of the cereals decreases","663a63ae":"increased fiber content increased rating","1f1537e6":"sodium content should be between 0-130 for better rating","884577a2":"There are no null values","16d56e84":"when the fat content in the cereals is 0 rating for the cereals is high while the fat content in the cereal decreses the rating of the cereals.\nwhen fat content is 5 then rating is very low","590c78e2":"when the vitamin is 0 the rating of the cereal is very high whereas the rating is low for the high vitamin cereals ","bffee9ec":"As the protien content in the cereals increase then the rating for the cereals also increases"}}