{"cell_type":{"bb9857cd":"code","da988738":"code","4e2ab867":"code","d0c3783f":"code","439a8633":"code","be2b349e":"code","ac5fc27e":"code","e76195e4":"code","ec3cd4ae":"code","5ea753d7":"code","59cc1d89":"code","bc717667":"code","242406f5":"code","04e830d2":"code","f96d3e88":"code","988d8913":"code","f8f9b85d":"code","d16bb56f":"code","bd0f89f0":"code","7033cd65":"code","1aa0f9fe":"code","e204845b":"code","a8ab4fb8":"code","6c672bd3":"code","04fb6c30":"code","5bc78954":"code","13c68f83":"code","32ed30a3":"code","64c95877":"code","134b5149":"code","6f11bec9":"code","664f09b2":"code","2be2ce61":"code","25483c65":"code","3b708fff":"code","1db2e1e1":"code","6b0cfea4":"code","e09512a4":"code","c2b27379":"code","2ee55b19":"code","a7eab753":"code","1da00696":"code","bfb4b5c5":"code","7aae789f":"code","a3ce0b71":"code","978e7cc9":"code","eb5ccf11":"code","a737575b":"code","f8dcc680":"code","0dca49a7":"code","ef8bd758":"code","652cd2b6":"code","29fceee6":"code","359f7120":"code","7dfc3075":"code","edf84fbb":"code","58434a16":"code","eb325c0a":"code","8efdea98":"code","b498939d":"code","3f147ab0":"code","5bf0dc86":"markdown","f622f7ad":"markdown","1f8a3224":"markdown","984a663d":"markdown","e9cd6445":"markdown","80bcb82a":"markdown","0a4eb3a6":"markdown","51c76327":"markdown","e104043a":"markdown","694d6609":"markdown","b4b5a083":"markdown","d4662881":"markdown","9d979805":"markdown","0c88caab":"markdown","24137a8d":"markdown","a0225131":"markdown","22fa32b3":"markdown","a496f334":"markdown","baac4a4a":"markdown","472c3161":"markdown","8186beca":"markdown","1f9d7560":"markdown","8ae69c72":"markdown","91bcb969":"markdown","a4d97e1e":"markdown","b0a1756b":"markdown","c92d535b":"markdown"},"source":{"bb9857cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","da988738":"import matplotlib.pyplot as plt\nimport tensorflow as tf\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nimport warnings\nwarnings.filterwarnings('ignore')\nimport seaborn as sns","4e2ab867":"df = pd.read_csv('\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')","d0c3783f":"df.head()","439a8633":"# Removing unimportant columns\ndf.drop(['id','name','host_id','host_name','last_review'],axis=1,inplace=True)","be2b349e":"df.head(2)","ac5fc27e":"df.shape","e76195e4":"df.info()","ec3cd4ae":"df.describe().T","5ea753d7":"df[df.price==0].index","59cc1d89":"df.loc[df[df.price==0].index,'price']=int(df.price.mean())","bc717667":"df.isna().sum()","242406f5":"df.reviews_per_month.median()","04e830d2":"df.reviews_per_month.fillna(df.reviews_per_month.median(),inplace=True)","f96d3e88":"df.plot(kind='box')","988d8913":"continous_col = []\nfor x in df.columns:\n  if df[x].dtypes != 'O':\n    continous_col.append(x)","f8f9b85d":"len(continous_col)","d16bb56f":"plt.figure(figsize=(22,12))\ni = 1\nfor x in continous_col:\n  plt.subplot(2,4,i)\n  sns.boxplot(y=df[x])\n  i+=1\n","bd0f89f0":"df[df.price>5000].index","7033cd65":"# shrinking outliers to limit value\ndf.loc[df[df.price>5000].index,'price'] = 5000","1aa0f9fe":"df[df.minimum_nights>250].index","e204845b":"# shrinking outliers to limit value\ndf.loc[df[df.minimum_nights>250].index,'minimum_nights'] = 250","a8ab4fb8":"df[df.number_of_reviews>450].index","6c672bd3":"df.loc[df[df.number_of_reviews>450].index,'number_of_reviews'] = 450","04fb6c30":"df[df.reviews_per_month>15].index","5bc78954":"df.loc[df[df.reviews_per_month>15].index,'reviews_per_month']=15","13c68f83":"sns.distplot(df.price)","32ed30a3":"df.price=np.log(df.price)","64c95877":"X = df.drop('price',axis=1)","134b5149":"Y = df.price","6f11bec9":"Y","664f09b2":"cols = []\nfor x in X.columns:\n  if X[x].dtypes == 'O':\n    cols.append(x)\ncols","2be2ce61":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nfor x in cols:\n  X[x] = le.fit_transform(X[x])","25483c65":"X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.3,random_state=1)","3b708fff":"from sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nX_train = ss.fit_transform(X_train)\nX_test = ss.transform(X_test)","1db2e1e1":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense","6b0cfea4":"X.shape","e09512a4":"model = Sequential()\nmodel.add(Dense(30, activation=\"tanh\", input_dim=10))\nmodel.add(Dense(30, activation=\"tanh\"))\nmodel.add(Dense(30, activation=\"tanh\"))\nmodel.add(Dense(20, activation=\"tanh\"))\nmodel.add(Dense(15, activation=\"tanh\"))\nmodel.add(Dense(10, activation=\"tanh\"))\nmodel.add(Dense(1))","c2b27379":"model.compile(optimizer=\"adam\", loss=\"mse\")\n\ntrained_model = model.fit(X_train, Y_train, epochs=200,batch_size=16)","2ee55b19":"plt.plot(trained_model.history[\"loss\"])","a7eab753":"Y_pred = model.predict(X_test)","1da00696":"from sklearn.metrics import r2_score,mean_squared_error\nacc1 = (r2_score(Y_test,Y_pred))\nprint(acc1)","bfb4b5c5":"model2 = Sequential()\nmodel2.add(Dense(30, activation=\"relu\", input_dim=10))\nmodel2.add(Dense(30, activation=\"relu\"))\nmodel2.add(Dense(25, activation=\"relu\"))\nmodel2.add(Dense(12, activation=\"relu\"))\nmodel2.add(Dense(10, activation=\"relu\"))\nmodel2.add(Dense(8, activation=\"relu\"))\nmodel2.add(Dense(1))","7aae789f":"model2.compile(optimizer=\"adam\", loss=\"mse\")\n\ntrained_model2 = model2.fit(X_train, Y_train, epochs=200,batch_size=32)","a3ce0b71":"plt.plot(trained_model2.history[\"loss\"])","978e7cc9":"Y_pred2 = model2.predict(X_test)","eb5ccf11":"from sklearn.metrics import r2_score,mean_squared_error\nacc2 = (r2_score(Y_test,Y_pred2))\nprint(acc2)","a737575b":"model3 = Sequential()\nmodel3.add(Dense(30, activation=\"relu\", input_dim=10))\nmodel3.add(Dense(30, activation=\"relu\"))\nmodel3.add(Dense(25, activation=\"relu\"))\nmodel3.add(Dense(20, activation=\"relu\"))\nmodel3.add(Dense(20, activation=\"relu\"))\nmodel3.add(Dense(10, activation=\"relu\"))\nmodel3.add(Dense(1))","f8dcc680":"model3.compile(optimizer=\"SGD\", loss=\"mse\")\n\ntrained_model3 = model3.fit(X_train, Y_train, epochs=200,batch_size=8)","0dca49a7":"plt.plot(trained_model3.history[\"loss\"])","ef8bd758":"Y_pred3 = model3.predict(X_test)","652cd2b6":"acc3 = (r2_score(Y_test,Y_pred3))\nprint(acc3)","29fceee6":"model4 = Sequential()\nmodel4.add(Dense(50, activation=\"relu\", input_dim=10))\nmodel4.add(Dense(45, activation=\"relu\"))\nmodel4.add(Dense(35, activation=\"relu\"))\nmodel4.add(Dense(30, activation=\"relu\"))\nmodel4.add(Dense(20, activation=\"relu\"))\nmodel4.add(Dense(15, activation=\"relu\"))\nmodel4.add(Dense(1))","359f7120":"model4.compile(optimizer=\"adam\", loss=\"mse\")\n\ntrained_model4 = model4.fit(X_train, Y_train, epochs=200,batch_size=16)","7dfc3075":"plt.plot(trained_model4.history[\"loss\"])","edf84fbb":"Y_pred4 = model4.predict(X_test)\nacc4 = (r2_score(Y_test,Y_pred4))\nprint(acc4)","58434a16":"Y_pred_ensemble = (Y_pred+Y_pred2+Y_pred3+Y_pred4)\/4","eb325c0a":"acc_ensemble = (r2_score(Y_test,Y_pred_ensemble))\nprint(acc_ensemble)","8efdea98":"performance = pd.DataFrame([acc1,acc2,acc3,acc4,acc_ensemble],index=['Model 1','Model 2','Model 3','Model 4','Ensemble Model'],columns=['Accuracy'])","b498939d":"performance","3f147ab0":"sns.barplot(x=performance.Accuracy.values,y=performance.Accuracy.index)","5bf0dc86":"Model 1","f622f7ad":"# Handling Skewness","1f8a3224":"# Evaluation","984a663d":"Model 2","e9cd6445":"No Null values, data is clean now","80bcb82a":"Handling outliers of minimum_nights column","0a4eb3a6":"Model 4","51c76327":"# Checking Null Values","e104043a":"# Neural Network","694d6609":"Log Transformation","b4b5a083":"Price cannot be 0, replacing it with median value","d4662881":"Handling Outliers of reviews_per_month column","9d979805":"# Label Encoding","0c88caab":"# Data Inspection","24137a8d":"Handling outliers of number_of_reviews column","a0225131":"Outliers are handled.","22fa32b3":"# Thanks a lot, do upvote if you liked it. :)","a496f334":"# Prediction","baac4a4a":"# Create X and Y","472c3161":"# Split the Data","8186beca":"Model 3","1f9d7560":"# Import Libraries","8ae69c72":"# Scaling of X","91bcb969":"# Read Data","a4d97e1e":"Handling outliers of Price column","b0a1756b":"# Ensemble Model","c92d535b":"# Checking Outliers"}}