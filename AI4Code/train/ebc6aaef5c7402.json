{"cell_type":{"2da4d86b":"code","d9edda1f":"code","a6bdb352":"code","6b2bb341":"code","9c3fa6a9":"markdown","b255ea85":"markdown"},"source":{"2da4d86b":"import numpy as np\nimport pandas as pd\n\npd.set_option('display.max_colwidth', None)\npd.set_option('display.max_rows', 999)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d9edda1f":"def reduce_mem_usage(df):\n    \"\"\" iterate through all the columns of a dataframe and modify the data type\n        to reduce memory usage.        \n    \"\"\"\n    start_mem = df.memory_usage().sum() \/ 1024**2\n    print('Memory usage of dataframe is {:.2f} MB'.format(start_mem))\n    \n    for col in df.columns:\n        col_type = df[col].dtype\n        \n        if col_type != object:\n            c_min = df[col].min()\n            c_max = df[col].max()\n            if str(col_type)[:3] == 'int':\n                if c_min > np.iinfo(np.int8).min and c_max < np.iinfo(np.int8).max:\n                    df[col] = df[col].astype(np.int8)\n                elif c_min > np.iinfo(np.int16).min and c_max < np.iinfo(np.int16).max:\n                    df[col] = df[col].astype(np.int16)\n                elif c_min > np.iinfo(np.int32).min and c_max < np.iinfo(np.int32).max:\n                    df[col] = df[col].astype(np.int32)\n                elif c_min > np.iinfo(np.int64).min and c_max < np.iinfo(np.int64).max:\n                    df[col] = df[col].astype(np.int64)  \n            else:\n                if c_min > np.finfo(np.float32).min and c_max < np.finfo(np.float32).max:\n                    df[col] = df[col].astype(np.float32)\n                else:\n                    df[col] = df[col].astype(np.float64)\n        else:\n            df[col] = df[col].astype('category')\n\n    end_mem = df.memory_usage().sum() \/ 1024**2\n    print('Memory usage after optimization is: {:.2f} MB'.format(end_mem))\n    print('Decreased by {:.1f}%'.format(100 * (start_mem - end_mem) \/ start_mem))\n    \n    return df","a6bdb352":"train = pd.read_csv('..\/input\/qualityeducation\/train.csv')\ntrain = reduce_mem_usage(train)\ntrain.to_parquet('train.parquet')","6b2bb341":"test = pd.read_csv('..\/input\/qualityeducation\/test.csv')\ntest = reduce_mem_usage(test)\ntest.to_parquet('test.parquet')","9c3fa6a9":"![enem_pic_croped.jpg](attachment:b9099661-8870-487b-b6df-9c1d22b4f958.jpg)\n# ML Olympiad - QUALITY EDUCATION\n## Previs\u00e3o das notas da prova do ENEM\n  ","b255ea85":"### Este notebook carrega os dados da competi\u00e7\u00e3o, reduz o uso de mem\u00f3ria alterando os tipo de dados e salva em formato parquet!\n"}}