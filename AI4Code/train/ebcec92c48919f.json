{"cell_type":{"2020a650":"code","dc1a4eab":"code","3313ec72":"code","a3f7b158":"code","964fc44a":"code","f2a90c2d":"code","59fe43d9":"code","6fb33ca8":"code","2588cf60":"code","567a1698":"code","4bfacd06":"code","d1a563cc":"code","5be76a50":"code","3200ff29":"code","788c7bce":"code","a3e515bf":"code","b1796704":"code","dffe3caa":"code","f945b2ba":"code","45f93c83":"code","c8ca0a87":"code","e5969c58":"code","ec736c35":"code","9d7db687":"code","43b4fde8":"code","563328cd":"code","9c7ee016":"code","fd65316b":"code","61da51f7":"markdown","6d103526":"markdown","7f2f5695":"markdown","2e0ac8a7":"markdown"},"source":{"2020a650":"import numpy as np \nimport pandas as pd\nimport plotly.express as px","dc1a4eab":"train = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","3313ec72":"train.head()","a3f7b158":"train.info()","964fc44a":"train.describe()","f2a90c2d":"train.shape","59fe43d9":"train.corr()['SalePrice'].sort_values(ascending=False)","6fb33ca8":"fig = px.box(train['SalePrice'])\nfig.update_layout(title='Sale Price Distribution',title_x=0.5)","2588cf60":"fig = px.histogram(train['SalePrice'])\nfig.update_layout(title='Sale Price Distribution',title_x=0.5)\nfig.show()","567a1698":"fig = px.scatter(train, x=\"GarageArea\", y=\"SalePrice\", trendline=\"ols\")\nfig.update_layout(title='Regression plot of Garage Area and Sale Price',title_x=0.5)\nfig.show()","4bfacd06":"sale_types = train.groupby('SaleType')[['SalePrice']].sum().reset_index().sort_values('SalePrice',ascending=False)\nfig = px.bar(sale_types,x=sale_types['SaleType'],y=sale_types['SalePrice'])\nfig.update_layout(title='Sale Prices by Sale Type',title_x=0.5)\nfig.show()","d1a563cc":"house_style = train.groupby('HouseStyle')[['SalePrice']].sum().reset_index().sort_values('SalePrice',ascending=False)\nfig = px.bar(sale_types,x=house_style['HouseStyle'],y=house_style['SalePrice'],labels={'x':'House Style','y':'Cumulative Sales Price'})\nfig.update_layout(title='Sale Prices by House Style',title_x=0.5)\nfig.show()","5be76a50":"house_style = train.groupby('SaleCondition')[['SalePrice']].sum().reset_index().sort_values('SalePrice',ascending=False)\nfig = px.bar(sale_types,x=house_style['SaleCondition'],y=house_style['SalePrice'],labels={'x':'Sale Condition','y':'Cumulative Sales Price'})\nfig.update_layout(title='Sale Prices by Sale Condition',title_x=0.5)\nfig.show()","3200ff29":"house_style = train.groupby('LandSlope')[['SalePrice']].sum().reset_index().sort_values('SalePrice',ascending=False)\nfig = px.bar(sale_types,x=house_style['LandSlope'],y=house_style['SalePrice'],labels={'x':'Land Slope','y':'Cumulative Sales Price'})\nfig.update_layout(title='Sale Prices by Land Slope',title_x=0.5)\nfig.show()","788c7bce":"def clean_dataset(df):\n    \n    df = df.drop(['MiscFeature','Fence','PoolQC','FireplaceQu','Alley','LowQualFinSF'],axis=1).fillna(method='ffill')\n    df = pd.get_dummies(df,columns=df.loc[:,df.dtypes==object].columns,drop_first=True)\n    return df\n","a3e515bf":"train = clean_dataset(train)\ntest = clean_dataset(test)","b1796704":"selected_values = list(test.columns)\nselected_values.append('SalePrice')\n\ntrain = train[selected_values]","dffe3caa":"from sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.model_selection import KFold","f945b2ba":"X = train.drop(['SalePrice','Id'],axis=1)\ny = train['SalePrice']","45f93c83":"kf = KFold(random_state=101,shuffle=True,n_splits=10,)","c8ca0a87":"for train_index,test_index in kf.split(X,y):\n    X_train,X_test = X.iloc[train_index],X.iloc[test_index],\n    y_train,y_test = y.iloc[train_index],y.iloc[test_index]","e5969c58":"regressor=XGBRegressor(base_score=0.25, booster='gbtree', colsample_bylevel=1,\n       colsample_bytree=1, gamma=0, learning_rate=0.1, max_delta_step=0,\n       max_depth=2, min_child_weight=1, missing=None, n_estimators=900,\n       n_jobs=1, nthread=None, objective='reg:squarederror', random_state=101,\n       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None, subsample=1)","ec736c35":"regressor.fit(X_train,y_train)","9d7db687":"regressor.score(X_train,y_train)","43b4fde8":"regressor.score(X_test,y_test)","563328cd":"from sklearn.metrics import mean_squared_error\nnp.sqrt(mean_squared_error(y_test,regressor.predict(X_test)))","9c7ee016":"predictions = regressor.predict(test.drop('Id',axis=1))","fd65316b":"submission = pd.DataFrame(data=predictions,index=test.index,columns=['SalePrice']).reset_index()\nsubmission.columns = ['Id','SalePrice']\nsubmission['Id'] = test['Id']\nsubmission.to_csv('submission.csv',index=False)","61da51f7":"This is one of my solutions for the House Prices: Advanced Regression Techniques competition. This is one for anybody starting out on the competition. Part 2 will be coming soon with more EDA and feature engineering. But for now, enjoy,comment your thoughts below and please upvote!!","6d103526":"<h1 style=\"text-align: center;\">Data Cleaning & Modelling<\/h1>","7f2f5695":"<h1 style=\"text-align: center;\">Welcome to my Kernel!<\/h1>","2e0ac8a7":"<h1 style=\"text-align: center;\">Exploratory Data Analyis<\/h1>"}}