{"cell_type":{"c50c81a3":"code","173ebdae":"code","69b7ec8f":"code","0a99ec55":"code","63d673a2":"code","dfb24d27":"code","5c0ec3ca":"code","f8a68529":"code","77e6d0f5":"code","ad208458":"code","2e30bf01":"code","e9448962":"code","673c16e3":"code","e4abe5ea":"code","64e79928":"code","063137ff":"code","fe1191a0":"code","1f155d08":"code","32b60020":"code","38a0e5a5":"code","ce1cc9ad":"code","6b18cb46":"code","197ddcc4":"code","34616ce1":"code","076a5276":"code","e7519585":"code","e6d6a942":"markdown","2a989df1":"markdown"},"source":{"c50c81a3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in 3\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","173ebdae":"data = pd.read_csv(\"\/kaggle\/input\/diabetic-retinopathy-resized\/trainLabels.csv\")\ndata.head()","69b7ec8f":"data.head()","0a99ec55":"data['image_name'] = [i+\".jpeg\" for i in data['image'].values]\ndata.head()","63d673a2":"data['level'].hist()\ndata['level'].value_counts()","dfb24d27":"from sklearn.model_selection import train_test_split","5c0ec3ca":"train, val = train_test_split(data, test_size=0.15)","f8a68529":"train.shape, val.shape","77e6d0f5":"from keras.preprocessing.image import ImageDataGenerator","ad208458":"import cv2\ndef load_ben_color(image):\n    IMG_SIZE = 224\n    sigmaX=10\n    image = cv2.resize(image, (IMG_SIZE, IMG_SIZE))\n    image=cv2.addWeighted ( image,4, cv2.GaussianBlur( image , (0,0) , sigmaX) ,-4 ,128)\n    return image","2e30bf01":"data_gen = ImageDataGenerator(rescale=1\/255.,\n                              zoom_range=0.15,\n                              fill_mode='constant',\n                              cval=0.,\n                              horizontal_flip=True,\n                              vertical_flip=True,\n                              preprocessing_function=load_ben_color)","e9448962":"# batch size\nbs = 32\n\ntrain_gen = data_gen.flow_from_dataframe(train, \n                                         \"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\",\n                                         x_col=\"image_name\", y_col=\"level\", class_mode=\"raw\",\n                                         batch_size=bs,\n                                         target_size=(224, 224))\nval_gen = data_gen.flow_from_dataframe(val,\n                                       \"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\",\n                                       x_col=\"image_name\", y_col=\"level\", class_mode=\"raw\",\n                                       batch_size=bs,\n                                       target_size=(224, 224))","673c16e3":"from keras.applications.vgg16 import VGG16\nimport keras.layers as L\nfrom keras.models import Model","e4abe5ea":"base_model = VGG16(weights='..\/input\/vgg16\/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5',\n                   include_top=False,\n                   input_shape=(224, 224, 3))\nx = base_model.output\nx = L.GlobalMaxPooling2D()(x)\nx = L.BatchNormalization()(x)\nx = L.Dropout(0.4)(x)\nx = L.Dense(1024, activation=\"relu\")(x)\nx = L.Dropout(0.2)(x)\nx = L.Dense(64, activation=\"relu\")(x)\npredictions = L.Dense(5, activation='softmax')(x)","64e79928":"model = Model(inputs=base_model.input, outputs=predictions)","063137ff":"for layer in base_model.layers[:12]: layer.trainable = False","fe1191a0":"model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])","1f155d08":"model.summary()","32b60020":"from keras.callbacks import ModelCheckpoint, ReduceLROnPlateau\nmodel_chk = ModelCheckpoint(\"vgg16_model.h5\", save_best_only=True, monitor=\"val_accuracy\")\nreduce_lr = ReduceLROnPlateau()","38a0e5a5":"model.fit_generator(train_gen, train_gen.n \/\/ bs,\n                    validation_data=val_gen, validation_steps=val_gen.n \/\/ bs,\n                    epochs=30, workers=4, callbacks=[model_chk])","ce1cc9ad":"model.evaluate_generator(val_gen, steps=val_gen.n\/bs, verbose=1)","6b18cb46":"from keras.models import load_model\nmodel = load_model(\"vgg16_model.h5\")","197ddcc4":"from PIL import Image\nim = Image.open(\"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\" + val.iloc[0].image_name)\nim = np.array(im.resize((224, )*2, resample=Image.LANCZOS))\nim.shape","34616ce1":"import matplotlib.pyplot as plt\nplt.imshow(im)","076a5276":"plt.imshow(load_ben_color(im))","e7519585":"print(\"predicted:\", np.argmax(model.predict(load_ben_color(im).reshape(1, *im.shape))[0]))\nprint(\"actual:\", val.iloc[0].level)","e6d6a942":"### VGG16","2a989df1":"test some instances"}}