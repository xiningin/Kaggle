{"cell_type":{"bb03ba8e":"code","985110d1":"code","ffa8cb70":"code","b152d392":"code","cc3dce85":"code","6c95f111":"code","84f77883":"code","7391d209":"code","e6af02fd":"code","8122a611":"code","75352633":"code","d4c88890":"code","7bfa3767":"code","9ae3f2a8":"code","6be623b2":"code","00365972":"code","6cbff62e":"code","8109951a":"code","68571741":"code","e1f7dfa5":"markdown","edc3774c":"markdown"},"source":{"bb03ba8e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","985110d1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nimport datetime","ffa8cb70":"df = pd.read_csv('..\/input\/tmdb_5000_movies.csv')\ndf.head()","b152d392":"# next we want to see some of this data (but not all of it)\ndf.head()","cc3dce85":"# so we know there should be exactly 5000 rows of data, but we can check with \"shape\"\n\ndf.shape","6c95f111":"# we can see more statistical details about the movie database\n\ndf.describe() # only shows numerical columns","84f77883":"df_reduced=df[['budget', 'homepage', 'original_language', 'title', 'popularity', 'release_date', 'revenue', 'runtime']]\ndf_reduced.head()","7391d209":"df_reduced[df['homepage'].isnull()].head()","e6af02fd":"# Let's take a look at all of the languages in the dataset\n\ndf_reduced['original_language'].unique()","8122a611":"# We can group the data by language\n\ndf_reduced.groupby('original_language')['title'].count().sort_values(ascending=False)","75352633":"# We can get all of the rows for a specific language!\n\ndf_reduced[df_reduced['original_language'] == 'zh']","d4c88890":"# Let's add a new column to identify movies we like. \n\ndf_reduced['i_like'] = None\ndf_reduced.head()","7bfa3767":"# Update the column for a movie you like! \n\ndf_reduced.loc[df_reduced['title'] == 'Avatar', ['i_like']] = True","9ae3f2a8":"df_reduced.loc[df_reduced['title'] == 'Avatar']","6be623b2":"df_reduced.plot.scatter(x='budget', y='revenue')","00365972":"ax = df.set_index('budget')['revenue'].plot(style='o', figsize=(12,12))\n\ndef label_point(x, y, val, ax):\n    a = pd.concat({'x': x, 'y': y, 'val': val}, axis=1)\n    for i, point in a.iterrows():\n      if(point['x'] > 200000000 or point['y'] > 1000000000):\n        ax.text(point['x'], point['y'], str(point['val']))\n           \nlabel_point(df.budget, df.revenue, df.title, ax)","6cbff62e":"df_reduced.plot.scatter(x='runtime', y='revenue')","8109951a":"df_reduced['runtime'].hist(bins=15)","68571741":"df_reduced.plot.bar(x='original_language', y='revenue')","e1f7dfa5":"We want to import some useful python libraries.\n\nNumpy is a library that adds a lot more math \/ linear algebra capabilities to python, such as arrays.\n\nPandas is a library that provides tools for data strucures and data analysis","edc3774c":"## Data Science Workshop"}}