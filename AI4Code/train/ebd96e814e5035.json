{"cell_type":{"dfaa07ed":"code","f0340570":"code","0b15af8e":"code","0c20a508":"code","ec0687a0":"code","b037811b":"code","b5ab16ce":"code","56c39d3d":"code","02b6b783":"code","fe69b9ed":"code","abc89a65":"code","2cdd888e":"code","fd97e5e4":"code","f2ebaab4":"code","b787a42d":"code","a4a29458":"code","44d39774":"markdown","47a9e914":"markdown"},"source":{"dfaa07ed":"import pandas as pd\n\nmain_file_path = '..\/input\/house-prices-advanced-regression-techniques\/train.csv' # this is the path to the Iowa data that you will use\ndata = pd.read_csv(main_file_path)\n\n# Run this code block with the control-enter keys on your keyboard. Or click the blue botton on the left\nprint(data.describe())","f0340570":"# list of all columns\nprint(data.columns)","0b15af8e":"# list out SalePrice column\nsale_price_column = data.SalePrice\n# print few lines for the column just created\nprint(sale_price_column.head())","0c20a508":"relevant_column = ['SaleCondition', 'SaleType']\ntwo_columns_of_data = data[relevant_column]\ntwo_columns_of_data.describe()","ec0687a0":"y = data.SalePrice\n#print(y.head())","b037811b":"predictors = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']\nX = data[predictors]\n#X.head()","b5ab16ce":"from sklearn.tree import DecisionTreeRegressor\n\niowa_model = DecisionTreeRegressor()","56c39d3d":"# fit the model\niowa_model.fit(X, y)","02b6b783":"print('lets\\'s make some predictions with the following data')\nprint(X.head())\n\nprint('predicting for the above data')\nprint(iowa_model.predict(X.head()))","fe69b9ed":"#from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\n\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=0)\n# modelling\niowa_model = DecisionTreeRegressor()\n\n# fit the model\niowa_model.fit(train_X, train_y)\n\n# make precition with validation\nval_prediction = iowa_model.predict(val_X)\nprint('mean absolute error', mean_absolute_error(val_prediction, val_y))","abc89a65":"def get_mae(max_leaf_nodes, predictor_train, predictor_val, target_train, target_val):\n    model=DecisionTreeRegressor(max_leaf_nodes=max_leaf_nodes, random_state=0)\n    model.fit(predictor_train, target_train)\n    pred_val = model.predict(predictor_val)\n    mae = mean_absolute_error(pred_val, target_val)\n    return mae","2cdd888e":"# compare mae with different max_leaf_node values\nbest_mae = 9999999\nfor max_leaf_nodes in [5, 50, 500, 5000]:\n    my_mae = get_mae(max_leaf_nodes, train_X, val_X, train_y, val_y)\n    print('Maximum leaf nodes: %d \\t\\t Mean Absolute Error: %d' % (max_leaf_nodes, my_mae))\n    \n    if(my_mae < best_mae):\n        best_mae = my_mae\nprint(\"\\nBest mean absolute error with decission tree is: %d\" % (best_mae))","fd97e5e4":"from sklearn.ensemble import RandomForestRegressor\n\nrandom_forest_model = RandomForestRegressor()\n\nrandom_forest_model.fit(train_X, train_y)\n\nmodel_pred = random_forest_model.predict(val_X)\n\nprint(\"Mean absolute error with random forest is: %d\" % (mean_absolute_error(model_pred, val_y)))","f2ebaab4":"import numpy as np\nimport pandas as pd\nfrom sklearn.ensemble import RandomForestRegressor\n\n# Read the data\ntrain = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\n\n# pull data into target (y) and predictors (X)\ntrain_y = train.SalePrice\npredictor_cols = ['LotArea', 'OverallQual', 'YearBuilt', 'TotRmsAbvGrd']\n\n# Create training predictors data\ntrain_X = train[predictor_cols]\n\nmy_model = RandomForestRegressor()\nmy_model.fit(train_X, train_y)","b787a42d":"# Read the test data\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\n# Treat the test data in the same way as training data. In this case, pull same columns.\ntest_X = test[predictor_cols]\n# Use the model to make predictions\npredicted_prices = my_model.predict(test_X)\n# We will look at the predicted prices to ensure we have something sensible.\nprint(predicted_prices)","a4a29458":"my_submission = pd.DataFrame({'Id': test.Id, 'SalePrice': predicted_prices})\n# you could use any filename. We choose submission here\nmy_submission.to_csv('submission.csv', index=False)","44d39774":"# Introduction\n**This will be your workspace for the [Machine Learning course](https:\/\/www.kaggle.com\/learn\/machine-learning).**\n\nYou will need to translate the concepts to work with the data in this notebook, the Iowa data. Each page in the Machine Learning course includes instructions for what code to write at that step in the course.\n\n# Write Your Code Below","47a9e914":"\n**If you have any questions or hit any problems, come to the [Learn Discussion](https:\/\/www.kaggle.com\/learn-forum) for help. **\n\n**Return to [ML Course Index](https:\/\/www.kaggle.com\/learn\/machine-learning)**"}}