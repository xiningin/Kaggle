{"cell_type":{"ea240be8":"code","135793c2":"code","ebdadb29":"code","30ccdf45":"code","83cbc5e6":"code","6b17c955":"code","6c465d77":"code","a85cd641":"code","ec8bc4d5":"code","0759e788":"code","3f07f7f4":"code","421a5b0e":"code","854dea87":"code","3a2a9f62":"code","1a5b90f3":"markdown","ca283c36":"markdown"},"source":{"ea240be8":"from sklearn.model_selection import train_test_split\nfrom keras.utils import to_categorical\nfrom keras.callbacks import ModelCheckpoint \nfrom keras.models import Sequential\nfrom keras.layers.core import Dense, Dropout, Activation, Flatten\nfrom keras.layers.normalization import BatchNormalization\nfrom keras import optimizers\nfrom keras import initializers\nimport numpy as np\nfrom matplotlib import pyplot as plt","135793c2":"classes = ['T-shirt\/top', 'Trouser', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']","ebdadb29":"folder = '\/kaggle\/input\/fashion-mnist-itba-lab-2020\/'\nx = np.load(folder+'train_images.npy')\ny = np.loadtxt(folder+'train_labels.csv', delimiter=',', skiprows=1)\nx_test = np.load(folder+'test_images.npy')","30ccdf45":"x_train, x_valid, y_train, y_valid = train_test_split(x, y, test_size = 0.1)","83cbc5e6":"y_train_categorical = to_categorical(y_train)\ny_val_categorical = to_categorical(y_valid)","6b17c955":"alto = 4\nancho = 8\nf, axs = plt.subplots(alto, ancho, figsize=(30,4*alto))\naxs = axs.reshape(-1)\nfor i in range(alto*ancho):\n    axs[i].imshow(x_train[i], cmap='gray')\n    axs[i].set_title(f'{classes[int(y_train[i])]} - class: {int(y_train[i])}\\n{y_train_categorical[i]}')\n    axs[i].axis('off')","6c465d77":"output_size = 10\nmodel_single_layer = Sequential()\nmodel_single_layer.add(Flatten(input_shape=x_train.shape[1:]))\nmodel_single_layer.add(Dense(output_size, name='Salida'))\nmodel_single_layer.add(Activation('softmax'))\nmodel_single_layer.summary()","a85cd641":"lr = 0.000001 \nSGD = optimizers.sgd(lr=lr)\nmodel_single_layer.compile(loss = 'categorical_crossentropy', optimizer=SGD, metrics=['accuracy'])","ec8bc4d5":"batch_size = 512\nmodel_single_layer.fit(x_train, \n                       y_train_categorical,\n                       epochs=20, batch_size=batch_size, \n                       verbose=1, \n                       validation_data = (x_valid, y_val_categorical)\n                      )","0759e788":"f, (ax1, ax2) = plt.subplots(1, 2, figsize=(20,6))\nax1.plot(model_single_layer.history.history['loss'], label='train')\nax1.plot(model_single_layer.history.history['val_loss'], label='val')\nax1.set_title('Loss - Cross Entropy')\nax1.legend()\nax2.plot(model_single_layer.history.history['accuracy'], label='train')\nax2.plot(model_single_layer.history.history['val_accuracy'], label='val')\nax2.set_title('Metric - Accuracy')\nax2.legend()\nplt.show()","3f07f7f4":"loss, acc = model_single_layer.evaluate(x_valid, y_val_categorical, verbose=0)\nprint(acc, loss)","421a5b0e":"# Calculo probabilidades de cada clase para cada observaci\u00f3n\ntest_prediction = model_single_layer.predict(x_test)\nprint(test_prediction.shape)","854dea87":"# Calculo clase\ntest_labels = np.argmax(test_prediction, axis = 1)\nprint(test_labels)","3a2a9f62":"import pandas\ndf = pandas.DataFrame(data={\"Category\": test_labels}).astype(int)\ndf.to_csv(\".\/submission.csv\", sep=',',index=True,  index_label='Id')","1a5b90f3":"# Armo CSV para submitear","ca283c36":"# Cargo Data"}}