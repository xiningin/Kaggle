{"cell_type":{"b251dd2f":"code","2abd2faf":"code","d43ff88f":"code","bf050652":"code","02610ea9":"code","215366ad":"code","c3aed1b1":"code","dc602177":"code","95fad58e":"code","5eb20b6f":"code","188f8f16":"code","8a130034":"code","cbc57c1a":"code","8d09d632":"code","65a3f7ba":"code","53dfb183":"code","b1c03b50":"code","660ed94d":"code","19ed4a45":"code","616653f3":"code","d75e82d7":"code","45e66411":"code","06d7da5d":"code","8646ee4b":"code","8f7b3fd5":"code","5cb58556":"code","6485f763":"code","2abd5908":"code","bbbfed81":"markdown","e2099627":"markdown","bd1aa61f":"markdown","669e2738":"markdown","f458be08":"markdown","1a1cc3c2":"markdown","8db046e8":"markdown","6e7cc469":"markdown","c9209fc4":"markdown","0aa9ae99":"markdown","b4fbfdf0":"markdown","e043a9ca":"markdown","27966337":"markdown","ee2e0617":"markdown"},"source":{"b251dd2f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2abd2faf":"admission_df = pd.read_csv(\"\/kaggle\/input\/graduate-admissions\/Admission_Predict.csv\")","d43ff88f":"admission_df.head()","bf050652":"admission_df.drop(columns = \"Serial No.\", inplace = True)\nadmission_df.head()","02610ea9":"admission_df.isnull().sum()","215366ad":"admission_df.dtypes","c3aed1b1":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nsns.set_style(\"darkgrid\")","dc602177":"plt1 = sns.distplot(admission_df['GRE Score'])\nplt.title(\"Distribution of GRE score\")\nplt.show()","95fad58e":"plt1 = sns.distplot(admission_df['TOEFL Score'])\nplt.title(\"Distribution of TOEFL score\")\nplt.show()","5eb20b6f":"plt1 = sns.distplot(admission_df['University Rating'])\nplt.title(\"Distribution of University Rating\")\nplt.show()","188f8f16":"plt1 = sns.distplot(admission_df['SOP'])\nplt.title(\"Distribution of SOP\")\nplt.show()","8a130034":"plt1 = sns.distplot(admission_df['LOR '])\nplt.title(\"Distribution of LOR\")\nplt.show()","cbc57c1a":"plt1 = sns.distplot(admission_df['CGPA'])\nplt.title(\"Distribution of CGPA\")\nplt.show()","8d09d632":"import plotly\nimport plotly.graph_objs as go\n\navg_gre_score = admission_df['GRE Score'].mean()\ndata = [go.Histogram(\n        x = admission_df['GRE Score']\n)]\n\n# Vertical dashed line to indicate the average app rating\nlayout = {'shapes': [{\n              'type' :'line',\n              'x0': avg_gre_score,\n              'y0': 0,\n              'x1': avg_gre_score,\n              'y1': 100,\n              'line': { 'dash': 'dashdot'}\n          }]\n          }\n\nprint(avg_gre_score)\nplotly.offline.iplot({'data': data, 'layout': layout})","65a3f7ba":"avg_toefl_score = admission_df['TOEFL Score'].mean()\ndata = [go.Histogram(\n        x = admission_df['TOEFL Score']\n)]\n\n# Vertical dashed line to indicate the average app rating\nlayout = {'shapes': [{\n              'type' :'line',\n              'x0': avg_toefl_score,\n              'y0': 0,\n              'x1': avg_toefl_score,\n              'y1': 100,\n              'line': { 'dash': 'dashdot'}\n          }]\n          }\nprint(avg_toefl_score)\nplotly.offline.iplot({'data': data, 'layout': layout})","53dfb183":"avg_sop_score = admission_df['SOP'].mean()\ndata = [go.Histogram(\n        x = admission_df['SOP']\n)]\n\n# Vertical dashed line to indicate the average app rating\nlayout = {'shapes': [{\n              'type' :'line',\n              'x0': avg_sop_score,\n              'y0': 0,\n              'x1': avg_sop_score,\n              'y1': 100,\n              'line': { 'dash': 'dashdot'}\n          }]\n          }\nprint(avg_sop_score)\nplotly.offline.iplot({'data': data, 'layout': layout})","b1c03b50":"avg_lor_score = admission_df['LOR '].mean()\ndata = [go.Histogram(\n        x = admission_df['LOR ']\n)]\n\n# Vertical dashed line to indicate the average app rating\nlayout = {'shapes': [{\n              'type' :'line',\n              'x0': avg_lor_score,\n              'y0': 0,\n              'x1': avg_lor_score,\n              'y1': 100,\n              'line': { 'dash': 'dashdot'}\n          }]\n          }\nprint(avg_lor_score)\nplotly.offline.iplot({'data': data, 'layout': layout})","660ed94d":"avg_cgpa_score = admission_df['CGPA'].mean()\ndata = [go.Histogram(\n        x = admission_df['CGPA']\n)]\n\n# Vertical dashed line to indicate the average app rating\nlayout = {'shapes': [{\n              'type' :'line',\n              'x0': avg_cgpa_score,\n              'y0': 0,\n              'x1': avg_cgpa_score,\n              'y1': 100,\n              'line': { 'dash': 'dashdot'}\n          }]\n          }\nprint(avg_cgpa_score)\nplotly.offline.iplot({'data': data, 'layout': layout})","19ed4a45":"plt2 = sns.jointplot(x = admission_df['GRE Score'], y = admission_df['TOEFL Score'], kind = 'hex')\nplt3 = sns.jointplot(x = admission_df['GRE Score'], y = admission_df['SOP'], kind = 'hex')\nplt4 = sns.jointplot(x = admission_df['GRE Score'], y = admission_df['CGPA'], kind = 'hex')\nplt5 = sns.jointplot(x = admission_df['GRE Score'], y = admission_df['University Rating'], kind = 'hex')\nplt5 = sns.jointplot(x = admission_df['GRE Score'], y = admission_df['LOR '], kind = 'hex')","616653f3":"fig = sns.lmplot(x=\"TOEFL Score\", y=\"CGPA\", data=admission_df, hue=\"Research\")\nplt.title(\"TOEFL Score vs CGPA\")\nplt.show()","d75e82d7":"fig = sns.lmplot(x=\"TOEFL Score\", y=\"SOP\", data=admission_df, hue=\"Research\")\nplt.title(\"TOEFL Score vs SOP\")\nplt.show()","45e66411":"fig = sns.lmplot(x=\"TOEFL Score\", y=\"LOR \", data=admission_df, hue=\"Research\")\nplt.title(\"TOEFL Score vs LOR\")\nplt.show()","06d7da5d":"fig = sns.lmplot(x=\"CGPA\", y=\"SOP\", data=admission_df, hue=\"Research\")\nplt.title(\"CGPA vs SOP\")\nplt.show()","8646ee4b":"fig = sns.lmplot(x=\"CGPA\", y=\"LOR \", data=admission_df, hue=\"Research\")\nplt.title(\"CGPA vs LOR\")\nplt.show()\n","8f7b3fd5":"corr_1 = admission_df.corr()\nfig, ax = plt.subplots(figsize=(8, 8))\nsns.heatmap(corr_1, linewidths=.5, annot=True, fmt=\".2f\")\nplt.show()","5cb58556":"from sklearn.model_selection import train_test_split\n\nX = admission_df.drop(['Chance of Admit '], axis=1)\ny = admission_df['Chance of Admit ']\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.30)","6485f763":"from sklearn.metrics import accuracy_score\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import mean_squared_error\n\nmodel1 = DecisionTreeRegressor()\nmodel1.fit(X_train, y_train)\npredictions1 = model1.predict(X_test)\nprint(\"Decision Tree: \",np.sqrt(mean_squared_error(y_test, predictions1)))","2abd5908":"from sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import GradientBoostingRegressor\n\nmodels = {\"Linear Regression\": LinearRegression(), 'Random Forest':RandomForestRegressor(), \n          'KNN':KNeighborsRegressor(),'SVM':SVR(), 'GradientBoost':GradientBoostingRegressor()}\n\nfor model_name, model in models.items():\n    predictor_model = model\n    predictor_model.fit(X_train, y_train)\n    predictions = predictor_model.predict(X_test)\n    print(str(model_name) + \": \"+ str(np.sqrt(mean_squared_error(y_test, predictions))))","bbbfed81":"From the analysis, it is clear that:\n\nThe mean score of:\n1. GRE --> 315 - 319\n2. TOEFL --> 106 - 107\n3. SOP --> 3.5\n4. LOR --> 3.5\n5. CGPA --> 8.5 - 8.69","e2099627":"\nCGPA and SOP are not that much related. Since Statement of purpose(SOP) includes the accomplishments, the people with high CGPA tends to have good score of SOP.","bd1aa61f":"# Decision Tree Model","669e2738":"# Conclusion:\nThus, from the analysis, it is clear that the CGPA, GRE score, and TOEFL score are of high importance in getting a admit for graduate schools. These three features performs the best in predicting the chance of admit of the student.","f458be08":"\nInsights:\n1. GRE score and TOEFL score are directly related. \n2. People with higher GRE scores tends to get high scores in TOEFL.\n3. People with higher CGPA tends to get higher GRE score.\n4. Various LOR scores are distributed among various GRE scores. So, GRE and LOR scores are not much related.\n5. The relation between GRE score and SOP & GRE Score and University Rating are similar to the case of LOR and GRE. They are slightly related.","1a1cc3c2":"With the help of these distribution plots, we can easily see the scores of GRE, TOEFL, and so on that are most commonly scored by the students. The most common scores in:\n\n1. GRE --> between 320 to 330 and then 310 to 320\n2. TOEFL --> between 105 and 110. Mostly above 100.\n3. University Rating --> 3\n4. SOP --> between 3 and 4, mostly near 4\n5. LOR --> 3 and 4\n6. CGPA --> above 8.5 and also, 9 is mostly scored cgpa.","8db046e8":"SOP and TOEFL score are not much related. Various SOP scores are distributed among various TOEFL scores.\n","6e7cc469":"TOEFL Score and CGPA are highly related. People with high CGPA tend to get high TOEFL scores.\n\n","c9209fc4":"# Insights:\nWith the shown outputs of error rates in different models, it is clearly seen that the Linear Regression model has lesser error rate comparatively and hence is considered as the best model in this case. A simple model like Linear Regression performs the best with these kind of data.","0aa9ae99":"# Model fitting and prediction\u00b6\n# Train-test-splitting","b4fbfdf0":"CGPA and LOR are not much related. Various CGPA scores have different kinds of LOR scores.\n\n","e043a9ca":"The case of relationship between TOEFL and LOR are the same as the case of relationship among TOEFL and SOP\n\n","27966337":"The error rate in the predictions by decision tree model is quite high.","ee2e0617":"With the correlation heatmap, the relationship between various features are easily identified.\n\n> #   **From this, the key takeaway is the relation between different features and their effect on chance of admit.**\n\nThe CGPA score has highest importance in the chance of admit with the correlation of 0.87, followed by GRE Score (correlation of 0.80) and then TOEFL(correlation of 0.79)."}}