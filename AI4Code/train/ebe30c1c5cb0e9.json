{"cell_type":{"7a0336f9":"code","82a0b461":"code","26ae9074":"code","1d4ca54b":"code","b33f4e07":"code","21dbf3bf":"code","9377c4c7":"code","031a7e26":"code","3bf8e34e":"code","0cba05e0":"code","b3a5d659":"code","343fe5b7":"code","b870819a":"code","33fee962":"code","d7ff76ba":"code","74289917":"code","4ad1b888":"code","a417eaab":"code","a8b061d2":"code","9a51b31b":"code","df1e13a2":"code","b3e32161":"code","1def7fa0":"code","68eaee57":"code","32138740":"code","563d021c":"code","70da7349":"code","a08c8d8d":"markdown","34ff636b":"markdown"},"source":{"7a0336f9":"import pandas as pd \nimport numpy as np \nimport os \n","82a0b461":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","26ae9074":"data = pd.read_csv(r'\/kaggle\/input\/credit-card-customers\/BankChurners.csv')","1d4ca54b":"df = data.drop(columns= ['Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1',\n       'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2'])","b33f4e07":"df['Attrition_Flag'].value_counts()","21dbf3bf":"def attritionFlag(x):\n    if x == 'Existing Customer':\n        return 0\n    else:\n        return 1\ndf['Attrition_Flag'] = df['Attrition_Flag'].apply(lambda x: attritionFlag(x))","9377c4c7":"from sklearn import preprocessing\nimport matplotlib.pyplot as plt \nplt.rc(\"font\", size=14)\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\nsns.set(style=\"white\")\nsns.set(style=\"whitegrid\", color_codes=True)","031a7e26":"df.Customer_Age.hist()\nplt.title('Histogram of Age')\nplt.xlabel('Age')\nplt.ylabel('Frequency')\nplt.savefig('hist_age')","3bf8e34e":"df.columns","0cba05e0":"df.Gender.value_counts()","b3a5d659":"df.Education_Level.value_counts()","343fe5b7":"df.groupby('Attrition_Flag').mean()","b870819a":"%matplotlib inline\npd.crosstab(data.Card_Category,data.Attrition_Flag).plot(kind='bar')\nplt.title('Card_Category Churn rate')\nplt.xlabel('Card_Category')\nplt.ylabel('Frequency of Customers')\n#plt.savefig('purchase_fre_job')","33fee962":"table=pd.crosstab(data.Marital_Status,data.Attrition_Flag)\ntable.div(table.sum(1).astype(float), axis=0).plot(kind='bar', stacked=True)\nplt.title('Stacked Bar Chart of Marital Status vs Attrition')\nplt.xlabel('Marital Status')\nplt.ylabel('Proportion of Customers')\nplt.savefig('mariral_vs_pur_stack')","d7ff76ba":"table=pd.crosstab(data.Education_Level,data.Attrition_Flag)\ntable.div(table.sum(1).astype(float), axis=0).plot(kind='bar', stacked=True)\nplt.title('Stacked Bar Chart of Education vs Attrition Flag')\nplt.xlabel('Education')\nplt.ylabel('Proportion of Customers')\nplt.savefig('edu_vs_pur_stack')","74289917":"pd.crosstab(data.Income_Category,data.Attrition_Flag).plot(kind='bar')\nplt.title('Income Category vs Attribition')\nplt.xlabel('Income Category')\nplt.ylabel('Proportion of Customers')\nplt.savefig('Income_bar')","4ad1b888":"df.dtypes","a417eaab":"df = pd.get_dummies(df, columns = ['Gender','Education_Level','Marital_Status','Income_Category','Card_Category'])","a8b061d2":"df.head()","9a51b31b":"from sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split\nX = df.drop(columns= ['CLIENTNUM','Attrition_Flag'])\ny = df['Attrition_Flag']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)\nlogreg = LogisticRegression()\nlogreg.fit(X_train, y_train)","df1e13a2":"y_pred = logreg.predict(X_test)\nprint('Accuracy of logistic regression classifier on test set: {:.2f}'.format(logreg.score(X_test, y_test)))","b3e32161":"from sklearn.metrics import confusion_matrix\nconfusion_matrix = confusion_matrix(y_test, y_pred)\nprint(confusion_matrix)","1def7fa0":"from keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.wrappers.scikit_learn import KerasClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline","68eaee57":"n = X.shape[1]\n\nfrom sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler().fit(X_train)\n\nX_train = scaler.transform(X_train)\n\nX_test = scaler.transform(X_test)  \nmodel = Sequential()\n\nmodel.add(Dense(16, activation='relu', input_shape=(n,)))\n\nmodel.add(Dense(16, activation='relu'))\nmodel.add(Dense(16,activation = 'relu'))\n\nmodel.add(Dense(1, activation='sigmoid'))","32138740":"model.compile(loss='binary_crossentropy',\n              optimizer='sgd',\n              metrics=['accuracy'])\n                   \nmodel.fit(X_train, y_train,epochs=100, batch_size=120, verbose=1)","563d021c":"y_pred = model.predict_classes(X_test)","70da7349":"score = model.evaluate(X_test, y_test,verbose=1)\n\nprint(score)","a08c8d8d":"# Creating Dummy Variable","34ff636b":"# Visualizations"}}