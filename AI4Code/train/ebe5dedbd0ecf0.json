{"cell_type":{"c205fa3c":"code","23e67fae":"code","902a2e21":"code","96fa85c3":"code","0e84e16a":"code","425b3153":"code","82ae2f67":"code","130bcd8f":"code","e9e03e65":"code","5f0ef681":"code","f7131b54":"code","4d828005":"code","992af088":"code","cc6e3dbd":"code","24e846c6":"code","e91568fa":"code","d4e8b904":"code","8976c201":"markdown","c1428d18":"markdown","cf713909":"markdown","8d4c2c4b":"markdown","66b7f58f":"markdown"},"source":{"c205fa3c":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm\nimport cv2\n\nimport warnings\nwarnings.filterwarnings('ignore')\nimport os\nfor dirname, _, _ in os.walk('\/kaggle\/input'):\n        print(dirname)","23e67fae":"train_path = \"\/kaggle\/input\/waste-classification-data\/DATASET\/TRAIN\/\"\ntest_path = \"\/kaggle\/input\/waste-classification-data\/DATASET\/TEST\/\"","902a2e21":"from keras.models import Sequential \nfrom keras.layers import Conv2D, MaxPooling2D, Activation, Dropout, Flatten, Dense, BatchNormalization\nfrom keras.preprocessing.image import ImageDataGenerator, img_to_array, load_img\nfrom keras.utils.vis_utils import plot_model\nfrom glob import glob","96fa85c3":"x_data = [] \ny_data = [] \n\nfor category in glob(train_path+'\/*'):\n    for file in tqdm(glob(category+'\/*')):\n        img_array=cv2.imread(file)\n        img_array = cv2.cvtColor(img_array, cv2.COLOR_BGR2RGB)\n        x_data.append(img_array) \n        y_data.append(category.split(\"\/\")[-1])\n        \ndata=pd.DataFrame({'image': x_data,'label': y_data})","0e84e16a":"data.shape","425b3153":"from collections import Counter\nCounter(y_data)","82ae2f67":"colors = ['#a0d157','#c48bb8']\nplt.pie(data.label.value_counts(),startangle=90,explode=[0.05,0.05],autopct='%0.2f%%',\n        labels=['Organic', 'Recyclable'], colors= colors,radius=2)\nplt.show()","130bcd8f":"plt.figure(figsize=(20,15))\nfor i in range(9):\n    plt.subplot(4,3,(i%12)+1)\n    index=np.random.randint(15000)\n    plt.title('This image is of {0}'.format(data.label[index]),fontdict={'size':20,'weight':'bold'})\n    plt.imshow(data.image[index])\n    plt.tight_layout()","e9e03e65":"className = glob(train_path + '\/*' )\nnumberOfClass = len(className)\nprint(\"Number Of Class: \",numberOfClass)","5f0ef681":"model = Sequential()\nmodel.add(Conv2D(32,(3,3),input_shape = (224,224,3)))\nmodel.add(Activation(\"relu\"))\nmodel.add(MaxPooling2D())\n\nmodel.add(Conv2D(64,(3,3)))  \nmodel.add(Activation(\"relu\"))\nmodel.add(MaxPooling2D())\n\nmodel.add(Conv2D(128,(3,3)))\nmodel.add(Activation(\"relu\"))\nmodel.add(MaxPooling2D())\n\nmodel.add(Flatten())\nmodel.add(Dense(256))\nmodel.add(Activation(\"relu\"))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(64))\nmodel.add(Activation(\"relu\"))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(numberOfClass)) # output\nmodel.add(Activation(\"sigmoid\"))\n\nmodel.compile(loss = \"binary_crossentropy\",\n              optimizer = \"adam\",\n              metrics = [\"accuracy\"])\n\nbatch_size = 256","f7131b54":"plot_model(model)","4d828005":"train_datagen = ImageDataGenerator(rescale= 1.\/255)","992af088":"test_datagen = ImageDataGenerator(rescale= 1.\/255)","cc6e3dbd":"train_generator = train_datagen.flow_from_directory(\n        train_path, \n        target_size= (224,224),\n        batch_size = batch_size,\n        color_mode= \"rgb\",\n        class_mode= \"categorical\")\n\ntest_generator = test_datagen.flow_from_directory(\n        test_path, \n        target_size= (224,224),\n        batch_size = batch_size,\n        color_mode= \"rgb\",\n        class_mode= \"categorical\")","24e846c6":"hist = model.fit_generator(\n        generator = train_generator,\n        epochs=10,\n        validation_data = test_generator)","e91568fa":"plt.figure(figsize=[10,6])\nplt.plot(hist.history[\"accuracy\"], label = \"Train acc\")\nplt.plot(hist.history[\"val_accuracy\"], label = \"Validation acc\")\nplt.legend()\nplt.show()","d4e8b904":"plt.figure(figsize=(10,6))\nplt.plot(hist.history['loss'], label = \"Train loss\")\nplt.plot(hist.history['val_loss'], label = \"Validation loss\")\nplt.legend()\nplt.show()","8976c201":"* O -> Organic\n* R -> Recyclable","c1428d18":"## Import Libraries","cf713909":"# Convolutional Neural Network - CNN","8d4c2c4b":"# \ud83d\udccc Introduction\n\n![image.png](attachment:ecafcddb-f01b-47ac-b38e-1cd964b2b971.png)\n\nWaste is a significant global issue. Increasing volumes of waste are being generated as the global population and living standards rise. People are increasingly concerned about the production of waste and its effect, and are seeking ways to deal with the problem.\n\nRecycling is the process of converting waste materials into new materials and objects. The recovery of energy from waste materials is often included in this concept. The recyclability of a material depends on its ability to reacquire the properties it had in its original state. It is an alternative to \"conventional\" waste disposal that can save material and help lower greenhouse gas emissions. Recycling can prevent the waste of potentially useful materials and reduce the consumption of fresh raw materials, thereby reducing: energy usage, air pollution (from incineration), and water pollution (from landfilling).\n\n **\ud83d\udfe2 In this notebook, we will classify waste as organic or recyclable using Convolutional Neural Network (CNN).**","66b7f58f":"## Visualization"}}