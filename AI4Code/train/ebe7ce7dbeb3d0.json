{"cell_type":{"3da36251":"code","f015a4fa":"code","ba5e012c":"code","b7855bbf":"code","b3cd1019":"code","620992e0":"code","1a80a4b6":"code","31a62b38":"code","555e95e0":"code","591d737d":"code","08afcfdc":"code","f4eef707":"markdown"},"source":{"3da36251":"import numpy as np\nfrom tensorflow import keras\nfrom tensorflow.keras import backend as K\nfrom tensorflow.keras.models import Model, Sequential\nfrom tensorflow.keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, Input\nfrom tensorflow.keras.datasets import fashion_mnist","f015a4fa":"# Data Processing\n(x_train, y_train), (x_test, y_test) = fashion_mnist.load_data()\nx_train = x_train.astype('float32') \/ 255.0\nx_test = x_test.astype('float32') \/ 255.0\n\nx_train.shape, x_test.shape, y_train.shape, y_test.shape","ba5e012c":"input_shape = (x_train.shape[1:] + (1,)) # (28, 28, 1)\nnum_classes = len(np.unique(y_train)) ","b7855bbf":"y_train = keras.utils.to_categorical(y_train, num_classes)\ny_test = keras.utils.to_categorical(y_test, num_classes)","b3cd1019":"# Model\ninp = Input(shape=input_shape)\n_ = Conv2D(filters=32, kernel_size=(3, 3), activation='relu')(inp)\n_ = Conv2D(filters=64, kernel_size=(3, 3), activation='relu')(_)\n_ = MaxPool2D(pool_size=(2, 2))(_)\n_ = Dropout(0.25)(_)\n_ = Flatten()(_)\n_ = Dense(units=128, activation='relu')(_)\n_ = Dropout(0.2)(_)\n_ = Dense(units=num_classes, activation='softmax')(_)\nmodel = Model(inputs=inp, outputs=_)\nmodel.summary()","620992e0":"model.compile(loss=keras.losses.categorical_crossentropy,\n              optimizer=keras.optimizers.Adam(), metrics=['accuracy'])\n","1a80a4b6":"history = model.fit(np.expand_dims(x_train, -1), y_train, batch_size=128, epochs=12, validation_split=0.3)","31a62b38":"# Save the Model Training \nfilename = 'Model_12_epochs.h5'\nmodel.save(filename)","555e95e0":"#To load a model that we have already trained and saved:\nmodel.load_weights('Model_12_epochs.h5')","591d737d":"## Evaluation Model\n\nloss, accuracy = model.evaluate(np.expand_dims(x_test, -1), y_test, verbose=0)\nprint(loss, accuracy)","08afcfdc":"import matplotlib.pyplot as plt\n%matplotlib inline\n\nfig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(14, 5))\nax1.plot(history.history['loss'], label='Train Loss')\nax1.plot(history.history['val_loss'], label='Val Loss')\nax1.legend()\nax2.plot(history.history['accuracy'], label='Train Accuracy')\nax2.plot(history.history['val_accuracy'], label='Val Accuracy')\nax2.legend()","f4eef707":"## Create a simple 2-D Convolutional Neural Network (CNN) model using keras \nwith tensorflow backend for the MNIST fashion dataset. Perform the following.\n- a) Preparing the data\n- b) Build and compile the model\n- c) Train and evaluate the model\n- d) Save the model to disk for reuse"}}