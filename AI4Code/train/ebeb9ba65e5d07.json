{"cell_type":{"02f6ecc8":"code","8aeece5b":"code","635a47d4":"code","f1d74399":"code","92de62ef":"code","13e9e902":"code","2a568353":"code","c842c2cc":"code","cc49755b":"code","8898ae1b":"code","1c927dc2":"code","825b52e6":"code","4712fce5":"code","ff458fe0":"code","636977dd":"code","d7801874":"code","0ca47115":"code","54e9d771":"code","dca2aae9":"code","90b7a27f":"code","3a44eff0":"code","3ac91a4d":"code","6b03c356":"code","448c9db9":"code","0ca58209":"code","c4a58881":"code","d909b557":"code","adaca06d":"code","ea6649ba":"markdown","dfdd3ee8":"markdown","4142ade9":"markdown","6ffbd057":"markdown","0624c889":"markdown","5ecbdfdd":"markdown","ea5e5b53":"markdown","cf327a3b":"markdown","e4422dff":"markdown","b981ae73":"markdown","431774cd":"markdown"},"source":{"02f6ecc8":"!pip install mlxtend","8aeece5b":"import pandas as pd\nfrom mlxtend.frequent_patterns import apriori, association_rules","635a47d4":"res1 = pd.read_csv('..\/input\/19560-indian-takeaway-orders\/restaurant-1-orders.csv')\n\nres1.head()","f1d74399":"res2 = pd.read_csv('..\/input\/19560-indian-takeaway-orders\/restaurant-2-orders.csv')\n\nres2.head()","92de62ef":"res2.columns = res1.columns","13e9e902":"df = pd.concat([res1,res2],ignore_index=True)\n\ndf.head()","2a568353":"item_id_dict = dict(zip(df['Item Name'].unique(),range(1,df['Item Name'].nunique() + 1)))","c842c2cc":"df['Item ID'] = df['Item Name'].apply(lambda x: item_id_dict[x])","cc49755b":"df.head()","8898ae1b":"apriori_ds = df.groupby(['Order Number','Item ID'],as_index=False).agg({'Quantity':'sum'})","1c927dc2":"apriori_ds = pd.pivot(data=apriori_ds,index='Order Number',columns='Item ID',values='Quantity')\n\n#\u00a0istedi\u011fim yap\u0131y\u0131 elde ettim fakat e\u011fer \u00fcr\u00fcn sipari\u015fte yoksa NaN geliyor bunu \u00e7\u00f6zmem gerek\napriori_ds.head() ","825b52e6":"apriori_ds = apriori_ds.fillna(0)\n\napriori_ds.head()","4712fce5":"#\u00a0applymap verdi\u011fimiz fonksiyonu her h\u00fccreye uygular. \n# H\u00fccre 1'den b\u00fcy\u00fckse (ki bu o kesi\u015fimin oldu\u011fu s\u00fctundaki \u00fcr\u00fcn, kesi\u015fimdeki fi\u015fte var demektir) 1, \n#  k\u00fc\u00e7\u00fckse (bu da \u00fcr\u00fcn\u00fcn fi\u015fte olmad\u0131\u011f\u0131 anlam\u0131na gelir) 0 ile dolduracakt\u0131r.\napriori_ds = apriori_ds.applymap(lambda x: 1 if x > 0 else 0) \n\napriori_ds.head()","ff458fe0":"# item setleri \u00e7\u0131kar\u0131yoruz\nfreqs = apriori(apriori_ds, min_support=0.01 ,use_colnames=True)","636977dd":"freqs.head()","d7801874":"freqs.shape","0ca47115":"rules = association_rules(freqs, metric=\"support\", min_threshold=0.01)","54e9d771":"rules","dca2aae9":"# id'e g\u00f6re \u00fcr\u00fcn ad\u0131 bulma\ndef find_by_id(df,item_id):\n    \"\"\"\n    Ham verinin tutuldu\u011fu veri seti i\u00e7erisinde, id'si verilen \u00fcr\u00fcn\u00fcn ad\u0131n\u0131 getirir\n    \n    \u00d6rnek\n    ----------\n    find_by_id(df,1)\n    \"\"\"\n    return df[df['Item ID']==item_id]['Item Name'].values[0]","90b7a27f":"find_by_id(df,6)","3a44eff0":"# kelimeye g\u00f6re \u00fcr\u00fcn arama\ndef get_item_names(df,item_name):\n    \"\"\"\n    Ham verinin tutuldu\u011fu veri seti i\u00e7erisinde ITEMNAME s\u00fctununda item_name parametresinin ge\u00e7ti\u011fi \u00fcr\u00fcnleri verir\n    \n    \u00d6rnek\n    --------\n    get_item_names(df,'Roti')\n    \"\"\"\n    return [(i,df[df['Item ID'] == i]['Item Name'].values[0]) for i in df[df['Item Name'].str.contains(item_name, na=False)]['Item ID'].unique()]","3ac91a4d":"get_item_names(df,'Roti')","6b03c356":"def recommend_items(rules_df, item_id, rec_count=5):\n    # rules_df -> kurallar\u0131n olu\u015fturuldu\u011fu dataframe\n    # item_id -> \u015fu an sepete eklenen \u00fcr\u00fcn\n    # rec_count -> tavsiye edilecek \u00fcr\u00fcn adedi\n    \n    sorted_rules = rules_df.sort_values('lift', ascending=False)\n\n    recommended_products = []  # tavsiye edilen \u00fcr\u00fcnleri tutmak i\u00e7in bir liste olu\u015ftur\n\n    # sat\u0131n al\u0131nmas\u0131 muhtemel ilk \u00fcr\u00fcnleri gez\n    for i, item in sorted_rules[\"antecedents\"].items():\n        for j in list(item):  # her \u00fcr\u00fcn\u00fc veya \u00fcr\u00fcn grubunu bir listeye ata\n            if j == item_id:  # e\u011fer d\u00f6nd\u00fc\u011f\u00fcn liste product_id'e e\u015fitse ki bu sepetteki \u00fcr\u00fcn id'si demek\n                # tavsiye edilen \u00fcr\u00fcn listesine consequents s\u00fctunundaki \u00fcr\u00fcn\u00fc ekle\n                recommended_products.append(list(sorted_rules.iloc[i][\"consequents\"]))\n\n    # ayn\u0131 \u00fcr\u00fcnden birden fazla olabilir diye bunu set veri yap\u0131s\u0131na \u00e7evir ve her biri unique olsun\n    recommended_products = list({item for item_list in recommended_products for item in item_list})\n    # tavsiye edilen \u00fcr\u00fcn listesinin ba\u015ftan rec_count kadar\u0131n\u0131 d\u00f6nd\u00fcr\n    return recommended_products[:rec_count]","448c9db9":"def get_altin_vurus(df,rules,item_id):\n    \"\"\"\n    kurallar\u0131n tutuldu\u011fu ve ham verilerin tutuldu\u011fu veri setini parametre olarak al\u0131r\n    \"\"\"\n    recommendeds = recommend_items(rules,item_id)\n    recommended_names = [find_by_id(df,i) for i in recommendeds]\n        \n    print(f'Sepete Eklenen \u00dcr\u00fcn: {find_by_id(df,item_id)}')\n    print(f'\u00d6nerilen \u00dcr\u00fcnler: {recommended_names}')","0ca58209":"get_altin_vurus(df,rules,1)","c4a58881":"get_item_names(df,'Garlic') # i\u00e7erisinde 'Garlic' ge\u00e7en itemlar","d909b557":"find_by_id(df,3) # 3 id'li \u00fcr\u00fcn\u00fcn ad\u0131 ne","adaca06d":"get_altin_vurus(df,rules,3)","ea6649ba":"# Tavsiye Yapal\u0131m","dfdd3ee8":"# Paketleri Y\u00fckleme","4142ade9":"# Birka\u00e7 Faydal\u0131 Fonksiyon Yazal\u0131m","6ffbd057":"## Item ID Olu\u015fturma\n\n1'den ba\u015flayarak her bir tekil item name i\u00e7in artacak \u015fekilde dummy id olu\u015fturuyorum. Olu\u015fturdu\u011fum id'lerden Item:ID \u00e7iftlerinden olu\u015fan dictionary olu\u015fturup id'leri veri setine at\u0131yorum","0624c889":"# Apriori \u0130\u00e7in Veri Yap\u0131s\u0131 Haz\u0131rlama\n\nSat\u0131rlarda sipari\u015f numaras\u0131 (bu \u00f6rnekte sepeti temsil etmekte), s\u00fctunlarda \u00fcr\u00fcn kodunu ve kesi\u015fimlerinde ise \u00fcr\u00fcn\u00fcn sipari\u015fte olup olmad\u0131\u011f\u0131n\u0131 belirtece\u011fim (binary olarak)","5ecbdfdd":"`association_rules` fonksiyonu sonucunda elde edilen \u00e7\u0131kt\u0131n\u0131n anlam\u0131:\n\n- antecedents -> ilk \u00f6nce sepete eklendi\u011fi varsay\u0131lan item(lar)\n- consequents -> antecedents sonras\u0131nda sepete eklenmesi muhtemel item(lar)\n- antecedent support -> antecedents'in sepette g\u00f6r\u00fclme olas\u0131l\u0131\u011f\u0131\n- consequent support -> consequents'in sepette g\u00f6r\u00fclme olas\u0131l\u0131\u011f\u0131\n- support -> antecedents ve consequents'in birlikte g\u00f6z\u00fckme olas\u0131l\u0131\u011f\u0131\n- confidence -> antecedents sepete eklendi\u011finde consequents'in eklenme olas\u0131l\u0131\u011f\u0131\n- lift -> antecedents sat\u0131ld\u0131\u011f\u0131nda, consequents'in sat\u0131lma olas\u0131l\u0131\u011f\u0131 Lift kat kadar artar\n- leverage -> Lift'e benzer, fakat y\u00fcksek support de\u011ferlerine \u00f6ncelik verir, lift de\u011feri oldu\u011funda kullan\u0131lmas\u0131 pek tercih edilmez\n- conviction -> consequents olmadan antecedents g\u00f6z\u00fckme olas\u0131l\u0131\u011f\u0131","ea5e5b53":"# Tavsiyelerimizi Daha Okunabilir Hale Getirelim","cf327a3b":"Item setler \u00fczerinden kurallar\u0131 \u00f6\u011freniyoruz: `rules` fonksiyonu ile","e4422dff":"# Veri Setini Haz\u0131rlama\n[Dataset](https:\/\/www.kaggle.com\/henslersoftware\/19560-indian-takeaway-orders)\n\nRestaurant 1 ve 2'e ait veri setlerini indirip birle\u015ftirece\u011fim","b981ae73":"# \u00d6rnekler Yapal\u0131m","431774cd":"# Apriori Fonksiyonu Kullanarak Apriori Algoritmas\u0131n\u0131 Uygulayal\u0131m\n\n`Support(X,Y) = Freq(X,Y)\/N` \u2192 X ve Y'nin birlikte g\u00f6r\u00fclme olas\u0131l\u0131\u011f\u0131d\u0131r.\n\n`Confidence(X,Y) = Freq(X,Y)\/Freq(X)` \u2192 X sat\u0131n al\u0131nd\u0131\u011f\u0131nda Y'nin sat\u0131lmas\u0131 olas\u0131l\u0131\u011f\u0131\n\n`Lift = Support(X,Y)\/(Support(X)*Support(Y))` \u2192 X sat\u0131n al\u0131nd\u0131\u011f\u0131nda Y'nin sat\u0131n al\u0131nma olas\u0131l\u0131\u011f\u0131 lift kat kadar artar"}}