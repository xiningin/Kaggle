{"cell_type":{"97a84f93":"code","a5a76bbe":"code","3144a968":"code","cc713dc2":"code","4ad5ad98":"code","bcf3f15e":"code","ac749da6":"code","f65b8f15":"code","553cdba8":"code","86c81c69":"code","bfdb63b4":"code","a513ea13":"code","69d4ee31":"code","b3e1c402":"code","d02abb69":"code","4378d0e8":"code","b2e52df3":"code","d5401ce7":"code","6c1572de":"code","6d1237b8":"code","17385d87":"code","d964cfdf":"code","ca320375":"code","6259a124":"code","a9631695":"code","c29bd02b":"code","59e32268":"code","f2361c29":"code","8987e3cc":"markdown","11b7b2da":"markdown","3f184c47":"markdown"},"source":{"97a84f93":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a5a76bbe":"import matplotlib.pyplot as plt\nimport seaborn as sns  ","3144a968":"data = pd.read_csv(\"..\/input\/youtube-new\/CAvideos.csv\")\ndata.head()","cc713dc2":"data.info()","4ad5ad98":"data.corr()","bcf3f15e":"f, ax = plt.subplots(figsize=(19,19))\nsns.heatmap(data.corr(), annot=True, linewidths=0.6, fmt=\".2f\", ax=ax)\nplt.show()","ac749da6":"data.head(7)","f65b8f15":"data.columns","553cdba8":"data.likes.plot(kind=\"line\", color=\"r\", label=\"likes\", linewidth=1, alpha=0.5, grid=True,linestyle=\":\")\ndata.comment_count.plot(color=\"g\", label=\"comment_count\", linewidth=1, grid=True, linestyle=\"-.\")\nplt.legend(loc='upper right')\nplt.xlabel('x axis')              \nplt.ylabel('y axis')\nplt.title('Line Plot')      ","86c81c69":"\ndata.plot(kind='scatter', x='likes', y='dislikes',alpha = 0.5,color = 'red')\nplt.xlabel('likes')              \nplt.ylabel('dislikes')\nplt.title('Scatter Plot') ","bfdb63b4":"sns.regplot(data.likes, data.comment_count)\nsns.regplot(data.likes, data.comment_count, fit_reg=False)\nplt.show()","a513ea13":"data.category_id.plot(kind=\"hist\", bins=100, figsize=(10,10))\nplt.show()","69d4ee31":"dictionary = {\"Izmir\":\"Konak\", \"Istanbul\":\"Be\u015fikta\u015f\", \"Ankara\":\"\u00c7ankaya\", \"Mu\u011fla\":\"Bodrum\"}","b3e1c402":"print(dictionary.keys())\nprint(dictionary.values())","d02abb69":"dictionary[\"Izmir\"]=\"\u00c7e\u015fme\"\nprint(dictionary)","4378d0e8":"dictionary[\"Ayd\u0131n\"]=\"Ku\u015fadas\u0131\"\nprint(dictionary)","b2e52df3":"del dictionary[\"Mu\u011fla\"]\nprint(dictionary)","d5401ce7":"series = data[\"likes\"]\nprint(type(series))","6c1572de":"data_frame = data[[\"dislikes\"]]\nprint(type(data_frame))","6d1237b8":"print(5>3)\nprint(5!=2)\nprint(True and False)\nprint(True or False)","17385d87":"x = data[\"likes\"]>3000000\ndata[x]","d964cfdf":"data[(data[\"likes\"]>3000000) & (data[\"dislikes\"]<150000)]","ca320375":"i=20\nwhile i!=15:\n    print(\"i is :\",i)\n    i-=1\nprint(i, \"is equal the 15\")\n","6259a124":"lis = [25,26,27,28,29]\nfor i in lis:\n    print(i)","a9631695":"print(\"index\",\"   value\" )\nfor index, value in enumerate(lis):\n    print(index, \"      \", value)","c29bd02b":"dictionary = {\"Izmir\":\"Konak\", \"Istanbul\":\"Be\u015fikta\u015f\", \"Ankara\":\"\u00c7ankaya\", \"Mu\u011fla\":\"Bodrum\"}","59e32268":"for key,value in dictionary.items():\n    print(key, \":   \", value)","f2361c29":"for index,value in data[[\"likes\"]][0:1].iterrows():\n    print(\"index:\", index, \"  value:\", value)\n","8987e3cc":"# **DICTIONARY**","11b7b2da":"# **WHILE  and  FOR  LOOPS**\n","3f184c47":"# **PANDAS** "}}