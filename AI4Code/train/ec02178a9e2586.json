{"cell_type":{"697575d6":"code","306a9872":"code","ba3047c3":"code","4747942a":"code","8ba5454d":"code","805b7ce0":"code","6247a6ce":"code","6d14918e":"code","1e250362":"code","3f13048b":"code","63641391":"code","f560db09":"code","d8ef2742":"code","522e7580":"code","4460c256":"code","0d9b89b3":"code","bfa1baa6":"code","94864e94":"code","4c6126b9":"code","4784983c":"code","bc2cfef5":"code","a77b6673":"code","09a27c87":"code","ff8ed019":"code","7d1ce19f":"code","0daa6188":"code","3bcf2452":"code","bbc6785b":"code","a8db3a62":"code","c5e13cbe":"code","25d560dd":"code","0cb1aed6":"code","d69b84d2":"code","f837d7e0":"code","23c00cbc":"code","4feee505":"code","9f39288d":"code","734a5854":"code","b4e6efac":"code","ae346d55":"code","723d6869":"code","fd378942":"code","9d366d94":"code","87eab68b":"code","f6907ea4":"code","9d7a81f7":"code","43a16315":"code","09c4aff5":"code","c4bd7fdf":"code","a88184ae":"code","527ff5b8":"code","e6c27644":"code","f0798263":"code","0b3b5e96":"markdown","de38faee":"markdown","7bd0b1cd":"markdown","dc7ae645":"markdown","ca798b2b":"markdown","c8e2a658":"markdown","73038106":"markdown","59fcb126":"markdown","4a2afc63":"markdown","cc8a2154":"markdown","861a9462":"markdown","6e1bb660":"markdown","ea3200ec":"markdown"},"source":{"697575d6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \nfrom xgboost import XGBClassifier\nimport matplotlib.pyplot as plt\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sas\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport seaborn as sns\nimport os\nfrom wordcloud import WordCloud\nfrom collections import Counter\nimport json\nfrom PIL import Image\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","306a9872":"train=pd.read_csv('..\/input\/train.csv',index_col=0)\ntest=pd.read_csv('..\/input\/test.csv',index_col=0)","ba3047c3":"train.head()","4747942a":"test['revenue']=-99","8ba5454d":"test.head()","805b7ce0":"train","6247a6ce":"train[['belongs_to_collection']].info()","6d14918e":"train[['belongs_to_collection','title']].head()","1e250362":"train=train.drop('belongs_to_collection',axis=1)\ntest=test.drop('belongs_to_collection',axis=1)","3f13048b":"train.loc[train.index == 16,'revenue'] = 192864         \ntrain.loc[train.index == 90,'budget'] = 30000000                  \ntrain.loc[train.index== 118,'budget'] = 60000000       \ntrain.loc[train.index== 149,'budget'] = 18000000       \ntrain.loc[train.index== 313,'revenue'] = 12000000       \ntrain.loc[train.index == 451,'revenue'] = 12000000      \ntrain.loc[train.index == 464,'budget'] = 20000000       \ntrain.loc[train.index == 470,'budget'] = 13000000       \ntrain.loc[train.index== 513,'budget'] = 930000         \ntrain.loc[train.index == 797,'budget'] = 8000000        \ntrain.loc[train.index == 819,'budget'] = 90000000       \ntrain.loc[train.index == 850,'budget'] = 90000000       \ntrain.loc[train.index == 1007,'budget'] = 2              \ntrain.loc[train.index== 1112,'budget'] = 7500000       \ntrain.loc[train.index == 1131,'budget'] = 4300000        \ntrain.loc[train.index == 1359,'budget'] = 10000000       \ntrain.loc[train.index == 1542,'budget'] = 1             \ntrain.loc[train.index == 1570,'budget'] = 15800000       \ntrain.loc[train.index== 1571,'budget'] = 4000000        \ntrain.loc[train.index == 1714,'budget'] = 46000000       \ntrain.loc[train.index == 1721,'budget'] = 17500000       \ntrain.loc[train.index== 1865,'revenue'] = 25000000      \ntrain.loc[train.index == 1885,'budget'] = 12             \ntrain.loc[train.index == 2091,'budget'] = 10             \ntrain.loc[train.index == 2268,'budget'] = 17500000       \ntrain.loc[train.index == 2491,'budget'] = 6              \ntrain.loc[train.index == 2602,'budget'] = 31000000       \ntrain.loc[train.index == 2612,'budget'] = 15000000       \ntrain.loc[train.index == 2696,'budget'] = 10000000      \ntrain.loc[train.index == 2801,'budget'] = 10000000       \ntrain.loc[train.index == 335,'budget'] = 2 \ntrain.loc[train.index == 348,'budget'] = 12\ntrain.loc[train.index == 470,'budget'] = 13000000 \ntrain.loc[train.index == 513,'budget'] = 1100000\ntrain.loc[train.index == 640,'budget'] = 6 \ntrain.loc[train.index == 696,'budget'] = 1\ntrain.loc[train.index == 797,'budget'] = 8000000 \ntrain.loc[train.index == 850,'budget'] = 1500000\ntrain.loc[train.index == 1199,'budget'] = 5 \ntrain.loc[train.index == 1282,'budget'] = 9              \ntrain.loc[train.index== 1347,'budget'] = 1\ntrain.loc[train.index== 1755,'budget'] = 2\ntrain.loc[train.index == 1801,'budget'] = 5\ntrain.loc[train.index == 1918,'budget'] = 592 \ntrain.loc[train.index == 2033,'budget'] = 4\ntrain.loc[train.index == 2118,'budget'] = 344 \ntrain.loc[train.index == 2252,'budget'] = 130\ntrain.loc[train.index == 2256,'budget'] = 1 \ntrain.loc[train.index == 2696,'budget'] = 10000000","63641391":"test.loc[test.index== 3033,'budget'] = 250 \ntest.loc[test.index== 3051,'budget'] = 50\ntest.loc[test.index == 3084,'budget'] = 337\ntest.loc[test.index == 3224,'budget'] = 4  \ntest.loc[test.index == 3594,'budget'] = 25  \ntest.loc[test.index == 3619,'budget'] = 500  \ntest.loc[test.index == 3831,'budget'] = 3  \ntest.loc[test.index== 3935,'budget'] = 500  \ntest.loc[test.index == 4049,'budget'] = 995946 \ntest.loc[test.index== 4424,'budget'] = 3  \ntest.loc[test.index == 4460,'budget'] = 8  \ntest.loc[test.index == 4555,'budget'] = 1200000 \ntest.loc[test.index== 4624,'budget'] = 30 \ntest.loc[test.index== 4645,'budget'] = 500 \ntest.loc[test.index == 4709,'budget'] = 450 \ntest.loc[test.index == 4839,'budget'] = 7\ntest.loc[test.index== 3125,'budget'] = 25 \ntest.loc[test.index== 3142,'budget'] = 1\ntest.loc[test.index == 3201,'budget'] = 450\ntest.loc[test.index == 3222,'budget'] = 6\ntest.loc[test.index== 3545,'budget'] = 38\ntest.loc[test.index == 3670,'budget'] = 18\ntest.loc[test.index == 3792,'budget'] = 19\ntest.loc[test.index == 3881,'budget'] = 7\ntest.loc[test.index == 3969,'budget'] = 400\ntest.loc[test.index == 4196,'budget'] = 6\ntest.loc[test.index == 4221,'budget'] = 11\ntest.loc[test.index == 4222,'budget'] = 500\ntest.loc[test.index== 4285,'budget'] = 11\ntest.loc[test.index == 4319,'budget'] = 1\ntest.loc[test.index == 4639,'budget'] = 10\ntest.loc[test.index == 4719,'budget'] = 45\ntest.loc[test.index == 4822,'budget'] = 22\ntest.loc[test.index == 4829,'budget'] = 20\ntest.loc[test.index== 4969,'budget'] = 20\ntest.loc[test.index== 5021,'budget'] = 40 \ntest.loc[test.index== 5035,'budget'] = 1 \ntest.loc[test.index== 5063,'budget'] = 14 \ntest.loc[test.index == 5119,'budget'] = 2 \ntest.loc[test.index== 5214,'budget'] = 30 \ntest.loc[test.index== 5221,'budget'] = 50 \ntest.loc[test.index== 4903,'budget'] = 15\ntest.loc[test.index == 4983,'budget'] = 3\ntest.loc[test.index == 5102,'budget'] = 28\ntest.loc[test.index== 5217,'budget'] = 75\ntest.loc[test.index == 5224,'budget'] = 3 \ntest.loc[test.index== 5469,'budget'] = 20 \ntest.loc[test.index == 5840,'budget'] = 1 \ntest.loc[test.index == 5960,'budget'] = 30\ntest.loc[test.index == 6506,'budget'] = 11 \ntest.loc[test.index== 6553,'budget'] = 280\ntest.loc[test.index == 6561,'budget'] = 7\ntest.loc[test.index== 6582,'budget'] = 218\ntest.loc[test.index == 6638,'budget'] = 5\ntest.loc[test.index== 6749,'budget'] = 8 \ntest.loc[test.index==6759,'budget'] = 50 \ntest.loc[test.index == 6856,'budget'] = 10\ntest.loc[test.index== 6858,'budget'] =  100\ntest.loc[test.index == 6876,'budget'] =  250\ntest.loc[test.index == 6972,'budget'] = 1\ntest.loc[test.index== 7079,'budget'] = 8000000\ntest.loc[test.index == 7150,'budget'] = 118\ntest.loc[test.index == 6506,'budget'] = 118\ntest.loc[test.index == 7225,'budget'] = 6\ntest.loc[test.index == 7231,'budget'] = 85\ntest.loc[test.index == 5222,'budget'] = 5\ntest.loc[test.index == 5322,'budget'] = 90\ntest.loc[test.index == 5350,'budget'] = 70\ntest.loc[test.index == 5378,'budget'] = 10\ntest.loc[test.index== 5545,'budget'] = 80\ntest.loc[test.index == 5810,'budget'] = 8\ntest.loc[test.index== 5926,'budget'] = 300\ntest.loc[test.index== 5927,'budget'] = 4\ntest.loc[test.index== 5986,'budget'] = 1\ntest.loc[test.index == 6053,'budget'] = 20\ntest.loc[test.index== 6104,'budget'] = 1\ntest.loc[test.index == 6130,'budget'] = 30\ntest.loc[test.index == 6301,'budget'] = 150\ntest.loc[test.index == 6276,'budget'] = 100\ntest.loc[test.index == 6473,'budget'] = 100\ntest.loc[test.index== 6842,'budget'] = 30","f560db09":"new_data=pd.concat([train,test],axis=0)\nnew_data.head()","d8ef2742":"new_data.isnull().sum()","522e7580":"new_data[new_data['release_date'].isnull()]","4460c256":"new_data['release_date']=new_data['release_date'].fillna('3\/20\/01')","0d9b89b3":"new_data.head()","bfa1baa6":"new_data['release_month']=new_data['release_date'].str.split('\/').apply(lambda x:x[0])\nnew_data['release_day']=new_data['release_date'].str.split('\/').apply(lambda x:x[1])\nnew_data['release_year']=new_data['release_date'].str.split('\/').apply(lambda x:x[2])\nnew_data[['release_month','release_day','release_year','release_date']].head()","94864e94":"new_data=new_data.drop('release_date',axis=1)","4c6126b9":"new_data['homepage_fact']=new_data['homepage'].apply(lambda x: 0 if x is np.nan  else 1)","4784983c":"a=new_data.loc[train.index].groupby('homepage_fact').revenue.mean()\nsas.barplot([0,1],[a[0],a[1]])","bc2cfef5":"new_data['homepage_end']=new_data[new_data['homepage'].notna()]['homepage'].str.findall(r'\\.([a-z]+)(?:\\\/|$)').apply(lambda x:x[0])\nnew_data['homepage_end'].head()","a77b6673":"new_data['homepage_end']=new_data['homepage_end'].fillna(0)","09a27c87":"a=new_data.loc[train.index].groupby('homepage_end').revenue.mean()\nsas.barplot(a.index,a)","ff8ed019":"page=pd.get_dummies(new_data['homepage_end'])\npage.head()","7d1ce19f":"new_data=new_data.drop('homepage',axis=1)","0daa6188":"new_data.head()","3bcf2452":"new_data['poster_path'].describe()","bbc6785b":"new_data=new_data.drop('poster_path',axis=1)","a8db3a62":"new_data['len_overview']=new_data['overview'].fillna('NAN').apply(lambda x:len(x))","c5e13cbe":"# new_data=new_data.drop('overview',axis=1)","25d560dd":"new_data.head()","0cb1aed6":"sns.relplot('budget','revenue',data=train)","d69b84d2":"new_data['geres_name']=new_data['genres'].str.findall(r'\\'name\\'\\s?:\\s?\\'(\\w+)\\'')\nnew_data['geres_name'].head()","f837d7e0":"new_data=new_data.drop('genres',axis=1)","23c00cbc":"new_data.head()","4feee505":"country=new_data['production_countries'].str.findall(r'[A-Z]{2,5}')\n","9f39288d":"new_data['production_countries']=country\nnew_data.head()","734a5854":"new_data['original_and_new']=new_data['original_title']==new_data['title']","b4e6efac":"new_data=new_data.drop('original_title',axis=1)\nnew_data=new_data.drop('title',axis=1)\nnew_data.head()","ae346d55":"new_data=pd.concat([new_data,page],axis=1)\nnew_data.head()","723d6869":"new_data['production_companies']=new_data['production_companies'].str.findall(r'\\'name\\'?:\\s?\\'([A-Za-z]+)')\nnew_data.fillna('Unknow')","fd378942":"new_data['imdb_id'].describe()","9d366d94":"new_data=new_data.drop('imdb_id',axis=1)","87eab68b":"new_data['spoken_languages']=new_data['spoken_languages'].str.findall(r'\\'[a-z]{2}\\'')","f6907ea4":"new_data.head()","9d7a81f7":"new_data['production_companies']=new_data['production_companies'].fillna('unknow')","43a16315":"new_data['spoken_languages']=new_data['spoken_languages'].fillna('unknow')","09c4aff5":"new_data.head()","c4bd7fdf":"new_data['Keywords']=new_data['Keywords'].str.findall(r'\\'?:\\s?\\'([a-z]+\\s?[a-z]+)\\'').fillna('unkonw')","a88184ae":"new_data.head()","527ff5b8":"m=list(new_data['cast'].str.findall(r'\\'name\\'?:\\s?\\'(\\S+\\s?\\S+)\\'').fillna('unknow'))\nm","e6c27644":"Counter([i for j in m for i in j]).most_common(15)","f0798263":"\nlist_of_keywords=list(new_data['Keywords'])\nplt.figure(figsize = (16, 12))\ntext = ' '.join(['_'.join(i.split(' ')) for j in list_of_keywords for i in j])\nwordcloud = WordCloud(max_font_size=None, background_color='black', collocations=False,\n                      width=1200, height=1000).generate(text)\nplt.imshow(wordcloud)\nplt.title('Top keywords')\nplt.axis(\"off\")\nplt.show()","0b3b5e96":"By comparing the two columns of data, we find that they share some common names. And the column has a large number of missing values.Because the column is STR type.Therefore, it is difficult to predict missing values using models. I decided to get rid of this line. \n","de38faee":"we can drop it,because it is no necessary","7bd0b1cd":"Integrating training set and test set ","dc7ae645":"In my opinion, the cost of making movies should be divided into millions and billions. ","ca798b2b":"we can  see that the higher budget the higher revenue ","c8e2a658":"it is so tired to hand this data. too many columns","73038106":"We can see that the total box office with web pages is significantly higher than that without web pages. ","59fcb126":"As we can see, tens of millions have become the budget for most movies. Maybe this feature can be combined with other features, and it may be very useful.","4a2afc63":"This is my first kernel","cc8a2154":"release_date  has one Miss value","861a9462":"Now let's deal with the release column.","6e1bb660":"Maybe\uff0clength of 'overview' is very useful","ea3200ec":"maybe it is no necessary.we can drop it"}}