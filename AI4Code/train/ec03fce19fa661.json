{"cell_type":{"be4badcb":"code","f53820a3":"code","8886ed4b":"code","8a05a60a":"code","d10be89b":"code","ebc530fb":"code","6d654c2f":"code","cabf82a6":"code","180854de":"code","c9cc5ef5":"code","7202070c":"code","ffb635ce":"code","be5ebf4c":"code","1aa4d616":"code","54f31f22":"code","88ebef22":"code","0f11e3bb":"code","0e35531a":"code","bb9967b2":"code","69515589":"code","4eefaf5e":"code","891f9713":"code","4d3c956f":"code","917fa400":"code","421b8073":"code","1ce316af":"code","2b4e256e":"code","1ad9f8d5":"code","2588b80c":"code","3e2c77cd":"code","1c2e0ad8":"code","01983383":"code","79e36791":"code","b7a9f0bb":"code","1936b08d":"code","abda83c3":"code","23a4592c":"code","e4056bcb":"code","de9b6912":"code","cf328d2a":"code","f5b7d2e9":"code","161784e3":"code","8144249b":"code","0cb57418":"code","87ef0012":"markdown","237f9eb1":"markdown","6b6e86ff":"markdown","5ddeaf0b":"markdown","46986fc8":"markdown","4a354398":"markdown","99e1090d":"markdown","ae818624":"markdown","7e8abbc5":"markdown","9950cd28":"markdown","5306bf9b":"markdown","c0d14c76":"markdown","695ccded":"markdown","4d172e66":"markdown","52fb2f2d":"markdown","2864c50a":"markdown","c7ebf487":"markdown","3c3236f2":"markdown","f187eb46":"markdown","473b5674":"markdown","ee56706c":"markdown","0919721e":"markdown","0b80bf6c":"markdown","4f5466c6":"markdown","f5c9cc3a":"markdown","4d263858":"markdown","6e0438b8":"markdown","dddb1918":"markdown","f6f30a8c":"markdown","b82b9c3a":"markdown","8c14e349":"markdown","402aaca3":"markdown","a204541e":"markdown","b0967203":"markdown","3fb6daad":"markdown","fa4b6baf":"markdown","fb5b5127":"markdown"},"source":{"be4badcb":"import numpy as np \nimport pandas as pd\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.set(style=\"ticks\")","f53820a3":"from wordcloud import WordCloud","8886ed4b":"df=pd.read_csv(\"..\/input\/fifa19\/data.csv\")","8a05a60a":"df.head(10)","d10be89b":"df.shape","ebc530fb":"df.info()","6d654c2f":"df.isnull().sum()","cabf82a6":"df.columns","180854de":"f,ax = plt.subplots(figsize=(25, 15))\nsns.heatmap(df.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show()","c9cc5ef5":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.Nationality))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('nationality.png')\nplt.show()","7202070c":"df['Club'].fillna('No Club', inplace = True)\ndf['Position'].fillna('ST', inplace = True)","ffb635ce":"impute_mean = df.loc[:, ['Crossing', 'Finishing', 'HeadingAccuracy',\n                                 'ShortPassing', 'Volleys', 'Dribbling', 'Curve', 'FKAccuracy',\n                                 'LongPassing', 'BallControl', 'Acceleration', 'SprintSpeed',\n                                 'Agility', 'Reactions', 'Balance', 'ShotPower', 'Jumping',\n                                 'Stamina', 'Strength', 'LongShots', 'Aggression', 'Interceptions',\n                                 'Positioning', 'Vision', 'Penalties', 'Composure', 'Marking',\n                                 'StandingTackle', 'SlidingTackle', 'GKDiving', 'GKHandling',\n                                 'GKKicking', 'GKPositioning', 'GKReflexes']]","be5ebf4c":"for i in impute_mean.columns:\n    df[i].fillna(df[i].mean(), inplace = True)","1aa4d616":"impute_mode = df.loc[:, ['Body Type','International Reputation', 'Height', 'Weight', 'Preferred Foot','Jersey Number']]\nfor i in impute_mode.columns:\n    df[i].fillna(df[i].mode()[0], inplace = True)","54f31f22":"impute_median = df.loc[:, ['Weak Foot', 'Skill Moves', ]]\nfor i in impute_median.columns:\n    df[i].fillna(df[i].median(), inplace = True)","88ebef22":"df.columns[df.isna().any()]","0f11e3bb":"df.fillna(0, inplace = True)","0e35531a":"def defending(data):\n    return int(round((data[['Marking', 'StandingTackle', \n                               'SlidingTackle']].mean()).mean()))\n\ndef general(data):\n    return int(round((data[['HeadingAccuracy', 'Dribbling', 'Curve', \n                               'BallControl']].mean()).mean()))\n\ndef mental(data):\n    return int(round((data[['Aggression', 'Interceptions', 'Positioning', \n                               'Vision','Composure']].mean()).mean()))\n\ndef passing(data):\n    return int(round((data[['Crossing', 'ShortPassing', \n                               'LongPassing']].mean()).mean()))\n\ndef mobility(data):\n    return int(round((data[['Acceleration', 'SprintSpeed', \n                               'Agility','Reactions']].mean()).mean()))\ndef power(data):\n    return int(round((data[['Balance', 'Jumping', 'Stamina', \n                               'Strength']].mean()).mean()))\n\ndef rating(data):\n    return int(round((data[['Potential', 'Overall']].mean()).mean()))\n\ndef shooting(data):\n    return int(round((data[['Finishing', 'Volleys', 'FKAccuracy', \n                               'ShotPower','LongShots', 'Penalties']].mean()).mean()))","bb9967b2":"df['Defending'] = df.apply(defending, axis = 1)\ndf['General'] = df.apply(general, axis = 1)\ndf['Mental'] = df.apply(mental, axis = 1)\ndf['Passing'] = df.apply(passing, axis = 1)\ndf['Mobility'] = df.apply(mobility, axis = 1)\ndf['Power'] = df.apply(power, axis = 1)\ndf['Rating'] = df.apply(rating, axis = 1)\ndf['Shooting'] = df.apply(shooting, axis = 1)","69515589":"df.rename(columns={'Club Logo':'Club_Logo'}, inplace=True)","4eefaf5e":"players = df[['Name','Defending','General','Mental','Passing',\n                'Mobility','Power','Rating','Shooting','Flag','Age',\n                'Nationality', 'Photo', 'Club_Logo', 'Club']]\n\nplayers.head(20)","891f9713":"plt.figure(figsize = (18, 8))\nsns.set(style=\"ticks\")\nplt.style.use('fivethirtyeight')\nax = sns.countplot('Position', data = df, palette = 'dark')\nax.set_xlabel(xlabel = 'Different Positions in Football', fontsize = 16)\nax.set_ylabel(ylabel = 'Count of Players', fontsize = 16)\nax.set_title(label = 'Comparison of Positions and Players', fontsize = 20)\nplt.show()","4d3c956f":"plt.figure(figsize = (13, 8))\nsns.set(style=\"ticks\")\nax = sns.countplot(x = 'Height', data = df, palette = 'bone')\nax.set_title(label = 'Count of players on Basis of Height', fontsize = 20)\nax.set_xlabel(xlabel = 'Height in Foot per inch', fontsize = 16)\nax.set_ylabel(ylabel = 'Count', fontsize = 16)\nplt.show()\n","917fa400":"plt.figure(figsize = (15, 7))\nsns.set(style=\"ticks\")\nsns.countplot(x = 'Work Rate', data = df, palette = 'plasma')\nplt.title('Different work rates of the Players Participating in the FIFA 2019', fontsize = 20)\nplt.xlabel('Work rates associated with the players', fontsize = 16)\nplt.ylabel('count of Players', fontsize = 16)\nplt.show()\n","421b8073":"x = df.Special\nplt.figure(figsize = (12, 8))\nsns.set(style=\"ticks\")\nax = sns.distplot(x, bins = 58, kde = False, color = 'cyan')\nax.set_xlabel(xlabel = 'Special score range', fontsize = 16)\nax.set_ylabel(ylabel = 'Count of the Players',fontsize = 16)\nax.set_title(label = 'Histogram for the Speciality Scores of the Players', fontsize = 20)\nplt.show()","1ce316af":"some_countries = ('England', 'Germany', 'Spain', 'Argentina', 'France', 'Brazil', 'Italy', 'Columbia')\ndata_countries = df.loc[df['Nationality'].isin(some_countries) & df['Overall']]\nplt.rcParams['figure.figsize'] = (15, 7)\nsns.set(style=\"ticks\")\nax = sns.barplot(x = data_countries['Nationality'], y = data_countries['Overall'], palette = 'spring')\nax.set_xlabel(xlabel = 'Countries', fontsize = 9)\nax.set_ylabel(ylabel = 'Overall Scores', fontsize = 9)\nax.set_title(label = 'Distribution of overall scores of players from different countries', fontsize = 20)\nplt.show()","2b4e256e":"df['Club'].value_counts().head(10)","1ad9f8d5":"data = df.copy()","2588b80c":"# for visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\nsns.set(style=\"ticks\")","3e2c77cd":"some_clubs = ('CD Legan\u00e9s', 'Southampton', 'RC Celta', 'Empoli', 'Fortuna D\u00fcsseldorf', 'Manchestar City',\n             'Tottenham Hotspur', 'FC Barcelona', 'Valencia CF', 'Chelsea', 'Real Madrid')\n\ndata_clubs = data.loc[data['Club'].isin(some_clubs) & data['Overall']]\n\nplt.rcParams['figure.figsize'] = (15, 8)\nax = sns.boxplot(x = data_clubs['Club'], y = data_clubs['Overall'], palette = 'inferno')\nax.set_xlabel(xlabel = 'Some Popular Clubs', fontsize = 9)\nax.set_ylabel(ylabel = 'Overall Score', fontsize = 9)\nax.set_title(label = 'Distribution of Overall Score in Different popular Clubs', fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","1c2e0ad8":"left = data[data['Preferred Foot'] == 'Left'][['Name', 'Age', 'Club', 'Nationality']].head(10)\nleft","01983383":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(left.Name))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('left.png')\nplt.show()","79e36791":"right = data[data['Preferred Foot'] == 'Right'][['Name', 'Age', 'Club', 'Nationality']].head(10)\nright","b7a9f0bb":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(right.Name))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('right.png')\nplt.show()","1936b08d":"sns.lmplot(x = 'BallControl', y = 'Dribbling', data = data, col = 'Preferred Foot')\nplt.show()","abda83c3":"data.groupby(data['Club'])['Nationality'].nunique().sort_values(ascending = False).head(10)","23a4592c":"data.groupby(data['Club'])['Nationality'].nunique().sort_values(ascending = True).head(10)","e4056bcb":"df.head()","de9b6912":"df.drop(['Unnamed: 0'],axis=1,inplace=True)","cf328d2a":"player = str(df.loc[df['Potential'].idxmax()][1])\nprint('Maximum Potential : '+str(df.loc[df['Potential'].idxmax()][1]))\nprint('Maximum Overall Perforamnce : '+str(df.loc[df['Overall'].idxmax()][1]))","f5b7d2e9":"pr_cols=['Crossing', 'Finishing', 'HeadingAccuracy', 'ShortPassing', 'Volleys',\n       'Dribbling', 'Curve', 'FKAccuracy', 'LongPassing', 'BallControl',\n       'Acceleration', 'SprintSpeed', 'Agility', 'Reactions', 'Balance',\n       'ShotPower', 'Jumping', 'Stamina', 'Strength', 'LongShots',\n       'Aggression', 'Interceptions', 'Positioning', 'Vision', 'Penalties',\n       'Composure', 'Marking', 'StandingTackle', 'SlidingTackle', 'GKDiving',\n       'GKHandling', 'GKKicking', 'GKPositioning', 'GKReflexes']\ni=0\nwhile i < len(pr_cols):\n    print('Best {0} : {1}'.format(pr_cols[i],df.loc[df[pr_cols[i]].idxmax()][1]))\n    i += 1","161784e3":"i=0\nbest = []\nwhile i < len(pr_cols):\n    best.append(df.loc[df[pr_cols[i]].idxmax()][1])\n    i +=1","8144249b":"best","0cb57418":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(best))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('best.png')\nplt.show()","87ef0012":"## Nationality","237f9eb1":"### Columns Names","6b6e86ff":"### Imputing via mode for Discrete or Continous Numerical values","5ddeaf0b":"### Different positions acquired by the players ","46986fc8":"## Data Visualization","4a354398":"## Best Players","99e1090d":"#### Check Null values in different columns","ae818624":"### Generalizing diff. features in a core features","7e8abbc5":"### Renaming a column","9950cd28":"### Columns remaining to be imputed","5306bf9b":"# <font color='orange'> Please Upvote if you found this helpful :) <\/font>","c0d14c76":"### Players on the Basis of Height","695ccded":"### Comparison the performance of left-footed and right-footed footballers on BallControl and Dribbing","4d172e66":"### Imputing Club and Position","52fb2f2d":"#### Print first 10 values","2864c50a":"Nationality Text Size = Nationality Player Count","c7ebf487":"### Adding these categories to the data","3c3236f2":"### Define a DataFrame for core features of players","f187eb46":"#### Replace remaining columns by 0","473b5674":"# Breakdown of this notebook:\n1. **Importing Libraries**\n2. **Loading the dataset**\n3. **Data Cleaning:** \n - Deleting redundant columns.\n - Dropping duplicates.\n - Cleaning individual columns.\n - Remove the NaN values from the dataset\n - Some Transformations\n4. **Data Visualization:** Using plots to find relations between the features.\n    - Get Correlation between different variables\n    - Different positions acquired by the players\n    - Players on the Basis of Height\n    - Different Work rate of the players\n    - Relation between neighbourgroup and Availability of Room\n    - Speciality Scores of Players\n    - Different Nations Players and their Overall Scores\n    - Distribution of Overall Score in Different popular Clubs\n    - Comparison the performance of left-footed and right-footed footballers on BallControl and Dribbing\n    - Right and Left Foot\n5. **Word Cloud**","ee56706c":"### Distribution of Overall Score in Different popular Clubs","0919721e":"### Speciality Scores of Players","0b80bf6c":"### Imputing via mean for numerical variables","4f5466c6":"### Player with maximum Potential and Overall Performance","f5c9cc3a":"<h1 align='center'> FIFA19 Ultimate Team <h1>\n![](https:\/\/i2-prod.liverpoolecho.co.uk\/sport\/football\/football-news\/article15746687.ece\/ALTERNATES\/s810\/3_FIFA-19-Ultimate-Team-TOTW.jpg)","4d263858":"### Count of Different Clubs","6e0438b8":"## Fillinng and removing Null values","dddb1918":"### Top 10 Right footed footballers","f6f30a8c":"### Loading Dataset","b82b9c3a":"### Different Work rate of the players","8c14e349":"### Top 10 left footed footballers","402aaca3":"## For more updates look into this GitHub Link: https:\/\/github.com\/chiragsamal\/FIFA-2019","a204541e":"## Correlation between different features","b0967203":"### Importing Librarires","3fb6daad":"### Different Nations' Players and their Overall Scores","fa4b6baf":"### Imputing via mode for categorical values ","fb5b5127":"#### Shape of the dataset"}}