{"cell_type":{"44983f84":"code","cfddacf9":"code","80618c97":"code","ba294fe9":"code","9a1f6cfe":"code","d413e3d0":"code","906156cc":"code","f8922966":"code","8f9b0203":"code","0fa41de6":"code","9a87c61c":"code","f674a556":"code","b7898ff1":"code","29a01f7e":"code","7af1d5e1":"code","ac48c741":"code","af636435":"markdown","a4fe52c1":"markdown","18cd6401":"markdown","4f4ac9a3":"markdown"},"source":{"44983f84":"#importing lib\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\nimport os\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly.graph_objs import *\nimport plotly.graph_objs as go\ninit_notebook_mode()\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report,confusion_matrix","cfddacf9":"stocks = pd.read_csv('..\/input\/fundamentals.csv')","80618c97":"stocks.head()","ba294fe9":"top_rev = stocks.groupby(by='Ticker Symbol').agg({'Total Revenue':sum})","9a1f6cfe":"g = top_rev['Total Revenue'].nlargest(5)","d413e3d0":"next = [Bar(\n            y=g,\n            x=g.keys(),\n            marker = dict(\n            color = 'lightsteelblue'\n            ),\n            name = \"Contractor's amount earned per project\"\n    )]\nlayout1 = go.Layout(\n    title=\"Top 10 Exporters\",\n    xaxis=dict(\n        title='Company',\n        titlefont=dict(\n            family='Courier New, monospace',\n            size=30,\n            color='#7f7f7f'\n               )\n    ),\n    yaxis=dict(\n        title='Total Revenue',\n        titlefont=dict(\n            family='Courier New, monospace',\n            size=22,\n            color='#7f7f7f'\n        )\n    )\n)\nmyFigure2 = go.Figure(data = next, layout = layout1)\niplot(myFigure2)","906156cc":"wmt = stocks[stocks['Ticker Symbol']=='WMT']\n#sns.distplot(Aqua['Generation'],bins=28,kde=False,color='red')","f8922966":"wmt.head()","8f9b0203":"gir = ['Total Equity',\n       'Total Revenue',\n       'Accounts Payable',\n       'Accounts Receivable',\n      'Cost of Revenue',\n      'Profit Margin',\n      'Sale and Purchase of Stock',\n      'Earnings Per Share']\ntip = np.corrcoef(wmt[gir].values.T)\n","0fa41de6":"wmt.info()","9a87c61c":"sns.set(font_scale = 0.9)\nmap = sns.heatmap(tip, cbar = True,\n                  cmap=\"YlGnBu\",\n                  annot = True, \n                  square= True,\n                  fmt = '.1f',\n                  annot_kws = {'size':11}, \n                 yticklabels = gir,\n                 xticklabels = gir)","f674a556":"#Setting the arrays \n\nn = wmt['Total Revenue']\nm = wmt[['Accounts Payable',\n         'Cost of Revenue',\n         'Sale and Purchase of Stock'\n    \n]]","b7898ff1":"# Splitting the into sets of training and test.\ntrain,test,train_label,test_label=train_test_split(m,n,test_size=0.33,random_state=101)","29a01f7e":"# The model \nLinear = LinearRegression(fit_intercept=True)\nmo = Linear.fit(train,train_label)\npredi = mo.predict(test)\nprint(r2_score(test_label,predi))","7af1d5e1":"print (Linear.intercept_)","ac48c741":"# Finding the coefficient. (value of 1 unit increase) \ncoef = pd.DataFrame(Linear.coef_,m.columns,columns=['Coefficient'])\ncoef","af636435":"# Walmart ","a4fe52c1":"Here are the top 5 stocks that has the biggest revenue: \n\n    1. Walmart \n    2. EXXON MOBIL corp\n    3. Apple inc.\n    4. Chevron Corp.\n    5. General Motoros","18cd6401":"# Linear Regression","4f4ac9a3":"Now lets do some Linear Regression with the top search, Walmart(wmt)"}}