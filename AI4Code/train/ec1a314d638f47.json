{"cell_type":{"d2d5ba5d":"code","e5d2e5ed":"code","fe7b45fa":"code","a40a61db":"code","c3ea496d":"code","621bf19f":"code","6c55c623":"code","c1782afe":"code","c6d9e952":"code","2e4d445c":"code","963f8075":"code","16991e93":"code","a7c232e3":"code","f838447e":"code","18307a84":"code","380b7839":"code","7eb312c8":"code","9508970f":"markdown","a2a8a9d8":"markdown","c5bb723c":"markdown","8ba58b24":"markdown","13c68b40":"markdown","306ba66d":"markdown","bdce2b9d":"markdown","46c73bd9":"markdown","62ed819c":"markdown","fea86dc3":"markdown","3552bb9c":"markdown","be2396c9":"markdown","19a01182":"markdown","603fd0bd":"markdown","8a92d15f":"markdown","b3b7d500":"markdown","b3258356":"markdown"},"source":{"d2d5ba5d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# styles for seaborn\nsns.set(style=\"ticks\", palette=\"muted\", color_codes=True)\nsns.set_color_codes(\"pastel\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e5d2e5ed":"# import the dataset which contains ratings (Label) and reviews (Review) grouped by Course ID\ndata = pd.read_csv(\"..\/input\/reviews_by_course.csv\")\ndata.head()","fe7b45fa":"# inspect dataset for missing values\nprint(data.info())\n# fill NaN with empty string\ndata = data.fillna(\"\")\n# inspect dataset again\nprint(data.info())","a40a61db":"# unique course ID\nlen(data[\"CourseId\"].unique())","c3ea496d":"# find most popular courses\nreviews_number = data[\"CourseId\"].value_counts()\n# show top20 courses by the reviews number\nprint(reviews_number[:20])","621bf19f":"# plot barplot\nsns.barplot(y=reviews_number[:20].index, x=reviews_number[:20],color=\"b\").set(xlabel=\"number of ratings\", ylabel=\"Course ID\")","6c55c623":"# average rating of the course\naverage_rating = data.groupby(\"CourseId\").mean().sort_values(\"Label\", ascending=False)\n# plot histogram\nsns.distplot(average_rating, kde=False).set(xlabel=\"average rating\", ylabel=\"number of courses\")","c1782afe":"# plot histogram for average rating >= 3.8\nsns.distplot(average_rating[average_rating.Label >= 3.8], kde=False).set(xlabel=\"average rating\", ylabel=\"number of courses\",)","c6d9e952":"# number of courses with average rating 5.0\nav_rating_5 = int(average_rating[average_rating.Label==5.0].count())\nprint(\"Number of courses with average rating 5.0:\")\nprint(av_rating_5)\nprint(\"% of the total number of courses:\")\nprint(av_rating_5\/len(data[\"CourseId\"].unique())*100)","2e4d445c":"# extract review numbers for courses with average rating 5.0\ndf_av_rating_5 = pd.DataFrame(reviews_number)[average_rating.Label==5.0]\n# explore statistics\nprint(df_av_rating_5.describe())","963f8075":"# compute the number of characters in the review\ndata[\"Review_len\"] = data[\"Review\"].str.len()\n# compute the average number of characters in the review for every course\naverage_len = data.groupby(\"CourseId\").mean().sort_values(\"Review_len\", ascending=False)\n# explore statistics\nprint(average_len.Review_len.describe())\n#plot histogram\nsns.distplot(average_len[\"Review_len\"], kde=False).set(xlabel=\"average number of characters in review\", ylabel=\"number of courses\",)","16991e93":"# Merge datasets on index and create new DataFrame \"analysis\"\n# first we will transform most_reviews from Series to DataFrame\ndf_reviews_number = pd.DataFrame(reviews_number)\n# merge df_reviews_number and average_rating\nanalysis = pd.merge(df_reviews_number, average_rating,  right_index=True, left_index=True)\n# transform average_len from Series to DataFrame\ndf_average_len = pd.DataFrame(average_len.Review_len)\n# merge analysis and df_average_len\nanalysis = pd.merge(analysis, df_average_len,  right_index=True, left_index=True)\n# rename columns\nanalysis.columns = [\"reviews_number\", \"av_rating\", \"av_review_len\"]\n# show first 5 rows\nanalysis.head()","a7c232e3":"# Let's first explore correlations \nanalysis.corr()","f838447e":"# plot scatter plot with av_review_len as x and av_rating as y\nsns.scatterplot(x=\"av_review_len\", y=\"av_rating\", data = analysis).set(xlim=(0,500), xlabel=\"average number of characters in review\", ylabel=\"average rating\")","18307a84":"# Show scatter plot with linear model\nsns.lmplot(x=\"av_review_len\", y=\"av_rating\", data = analysis).set(xlim=(-30, 500), ylim=(2,5.1), xlabel=\"average number of characters in review\", ylabel=\"average rating\")","380b7839":"# Count the number of \"!\" in the reviews\ndata[\"excl_num\"] = data[\"Review\"].str.count(\"!\")\n# Explote the statistics\nprint(data[\"excl_num\"].describe())","7eb312c8":"print(\"Course Id:\")\nprint(data.iloc[data[\"excl_num\"].idxmax()][\"CourseId\"])\nprint(\"Review:\")\nprint(data.iloc[data[\"excl_num\"].idxmax()][\"Review\"])","9508970f":"## EDA of reviews and ratings of Coursera courses","a2a8a9d8":"### Let's find courses with the highest number of reviews\/ratings for the course.\nAnd print top20.","c5bb723c":"### First import the dataset and output 5 first rows.","8ba58b24":"### There are 1835 unique courses in the dataset.","13c68b40":"### We have to find that review!!!\nApparently, the course \"getting-started-with-essay-writing\" did not help the student to improve his\/her essay writing skills :)","306ba66d":"### Let's see whether there are any correlations between columns in the new DataFrame.\nThere is a weak negative correlation between the average rating and average review length.","bdce2b9d":"### Inspect the dataset. Looks like three reviews (Review) are missing and thre is no missing ratings (Label).\nFill missing reviews with empty string.","46c73bd9":"### That is how the correlation looks on a scatter plot.","62ed819c":"Zoomed in x-axis to see the 3.8 - 5 range in details. ","fea86dc3":"### Time to find average ratings of the courses.\nShowed distribution of the average rating using histogram.","3552bb9c":"### Let's turn to reviews and find the average number of characters in the review.\nShowed the distribution of the average length using histogram.","be2396c9":"### Put number of reviews, average rating and average length of the review together in one DataFrame.","19a01182":"### The courses with average rating 5.0 have only from 1 to 32 ratings with median number of ratings equal to 3.","603fd0bd":"## P. S.\n### Do people use exclamation mark in the reviews?\nOn average 0.4 times per review, but there is one review with 421 exclamation marks!!!","8a92d15f":"### Not surprising that Machine Learning by Andrew Ng has the most ratings. Perhaps, it is one of the best courses on Coursera!\n### Let's see how ahead of other top20 courses it is.","b3b7d500":"### Built linear model. \nThis model corroborates the negative correlation between the average rating and average review length.","b3258356":"### 5.0, 4.0 and 3.0 seem to be outliers. I am wondering how many courses have average rating 5.0?\nTurns out 239 or 13% of the total number of courses!"}}