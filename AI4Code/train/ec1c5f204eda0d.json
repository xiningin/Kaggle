{"cell_type":{"314c11fe":"code","b6c9d5af":"code","7448feae":"code","4ed85983":"code","e51d290a":"code","c3c8ce7d":"code","ac1824c0":"code","1a54de7b":"code","662083c2":"code","42238ff4":"code","51a5e029":"code","d96e2bd0":"code","d2be0d29":"code","e757f869":"code","59cd4fa2":"code","1d478916":"code","506638ea":"code","a0f9b7e5":"code","51e102a4":"code","d59182e5":"code","f409595b":"code","40b6e5c9":"code","f52e5d41":"markdown","99576380":"markdown","7446830c":"markdown","25dd1a72":"markdown","dcab6a5f":"markdown","2800bcf9":"markdown","a4b26b2b":"markdown","d1f37091":"markdown","740b9be1":"markdown","c7c1e838":"markdown","3f0438a1":"markdown","f52ed57d":"markdown","7a7c33ac":"markdown","27a9b6eb":"markdown","1a3c55a0":"markdown"},"source":{"314c11fe":"import numpy as np\nimport tensorflow as tf\nimport random as rn\nimport os\nfrom keras import backend as K\nimport pandas as pd # \u57fa\u672c\u30e9\u30a4\u30d6\u30e9\u30ea\nimport numpy as np # \u57fa\u672c\u30e9\u30a4\u30d6\u30e9\u30ea\nimport matplotlib.pyplot as plt # \u30b0\u30e9\u30d5\u63cf\u753b\u7528\nimport seaborn as sns; sns.set() # \u30b0\u30e9\u30d5\u63cf\u753b\u7528\nimport shap\nfrom keras.preprocessing import image\nfrom sklearn.model_selection import train_test_split\nimport keras","b6c9d5af":"input_shape = (224, 224, 3)\nbatch_size = 200\nepochs = 1\nnum_classes = 5\ntrain_images = []\ntrain_labels = []\nfor f in os.listdir(\"\/kaggle\/input\/1056lab-noodles-image-classification\/train\/pad_thai\"):\n    train_images.append(image.img_to_array(image.load_img(\"\/kaggle\/input\/1056lab-noodles-image-classification\/train\/pad_thai\/\"+f, target_size=input_shape[:2])))\n    train_labels.append(0)\nfor f in os.listdir(\"\/kaggle\/input\/1056lab-noodles-image-classification\/train\/pho\"):\n    train_images.append(image.img_to_array(image.load_img(\"\/kaggle\/input\/1056lab-noodles-image-classification\/train\/pho\/\"+f, target_size=input_shape[:2])))\n    train_labels.append(1)\nfor f in os.listdir(\"\/kaggle\/input\/1056lab-noodles-image-classification\/train\/ramen\"):\n    train_images.append(image.img_to_array(image.load_img(\"\/kaggle\/input\/1056lab-noodles-image-classification\/train\/ramen\/\"+f, target_size=input_shape[:2])))\n    train_labels.append(2)\nfor f in os.listdir(\"\/kaggle\/input\/1056lab-noodles-image-classification\/train\/spaghetti_bolognese\"):\n    train_images.append(image.img_to_array(image.load_img(\"\/kaggle\/input\/1056lab-noodles-image-classification\/train\/spaghetti_bolognese\/\"+f, target_size=input_shape[:2])))\n    train_labels.append(3)\nfor f in os.listdir(\"\/kaggle\/input\/1056lab-noodles-image-classification\/train\/spaghetti_carbonara\"):\n    train_images.append(image.img_to_array(image.load_img(\"\/kaggle\/input\/1056lab-noodles-image-classification\/train\/spaghetti_carbonara\/\"+f, target_size=input_shape[:2])))\n    train_labels.append(4)","7448feae":"test_images = []\ntest_labels = []\nfor f in sorted(os.listdir(\"\/kaggle\/input\/1056lab-noodles-image-classification\/test\")):\n    test_images .append(image.img_to_array(image.load_img(\"\/kaggle\/input\/1056lab-noodles-image-classification\/test\/\"+f, target_size=input_shape[:2])))\n    test_labels .append(0)","4ed85983":"train_images = np.asarray(train_images)\ntrain_labels = np.asarray(train_labels)\ntest_images = np.asarray(test_images)\ntest_labels = np.asarray(test_labels)","e51d290a":"class_names = ['pad_thai', 'pho', 'ramen', 'spaghetti_bolognese', 'spaghetti_carbonara']","c3c8ce7d":"train_images.shape","ac1824c0":"len(train_labels)","1a54de7b":"train_labels","662083c2":"test_images.shape","42238ff4":"len(test_labels)","51a5e029":"plt.figure()\nplt.imshow(train_images[0])\nplt.colorbar()\nplt.grid(False)\nplt.show()","d96e2bd0":"train_images = train_images \/ 255.0\ntest_images = test_images \/ 255.0","d2be0d29":"plt.figure(figsize=(10,10))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(False)\n    plt.imshow(train_images[i], cmap=plt.cm.binary)\n    plt.xlabel(class_names[train_labels[i]])\nplt.show()","e757f869":"import tensorflow as tf\nfrom tensorflow import keras\n\n# \u30d8\u30eb\u30d1\u30fc\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ntrain_labels = keras.utils.to_categorical(train_labels, num_classes)\ntest_labels = keras.utils.to_categorical(test_labels, num_classes)","59cd4fa2":"from keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten\nfrom keras.layers import Conv2D, MaxPooling2D\nmodel = Sequential()\nmodel.add(Conv2D(32, kernel_size=(3, 3),\n                 activation='relu',\n                 input_shape=input_shape))\nmodel.add(Conv2D(64, (3, 3), activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(num_classes, activation='softmax'))\nmodel.compile(loss=keras.losses.categorical_crossentropy,\n              optimizer=\"SGD\",\nmetrics=['accuracy'])\nhistory = model.fit(train_images, train_labels,\n          batch_size=batch_size,\n          epochs=epochs)","1d478916":"predictions = model.predict(test_images)","506638ea":"predictions[5]","a0f9b7e5":"np.argmax(predictions[5])","51e102a4":"predictions=np.argmax(predictions,axis=1).astype(str)","d59182e5":"np.place(predictions,predictions=='0','pad_thai')\nnp.place(predictions,predictions=='1','pho')\nnp.place(predictions,predictions=='2','ramen')\nnp.place(predictions,predictions=='3','spaghetti_bolognese')\nnp.place(predictions,predictions=='4','spaghetti_carbonara')","f409595b":"import pandas as pd # \u57fa\u672c\u30e9\u30a4\u30d6\u30e9\u30ea\nsubmit_df = pd.read_csv('\/kaggle\/input\/1056lab-noodles-image-classification\/sampleSubmission.csv', index_col=0)\nsubmit_df['label']=predictions","40b6e5c9":"submit_df.to_csv('submission.csv')","f52e5d41":"# \u30c7\u30fc\u30bf\u306e\u30ed\u30fc\u30c9","99576380":"# CNN","7446830c":"\u30e9\u30d9\u30eb\u306f\u305d\u308c\u305e\u308c\u30010\u304b\u30894\u307e\u3067\u306e\u9593\u306e\u6574\u6570 : 5\u30af\u30e9\u30b9\u5206\u985e","25dd1a72":"test\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u306f3499\u306e\u30e9\u30d9\u30eb\u304c\u3042\u308b","dcab6a5f":"# \u30af\u30e9\u30b9\u540d\u306e\u4fdd\u5b58","2800bcf9":"5\u3064\u306e\u914d\u5217\u306b\u3001\u5bfe\u8c61\u306e\u753b\u50cf\u304c\uff15\u30af\u30e9\u30b9\u306e\u3046\u3061\u306e\u3069\u308c\u306b\u8a72\u5f53\u3059\u308b\u304b\u306e\u78ba\u4fe1\u5ea6\u3092\u8868\u3057\u3066\u3044\u308b\u3002","a4b26b2b":"# Prediction","d1f37091":"\npad_thai\u304b\u3089\u9806\u306b\u5165\u308c\u3066\u308b\u306e\u3067\u540c\u3058\u30af\u30e9\u30b9\u540d\u3057\u304b\u51fa\u3066\u3053\u306a\u3044\u304c\u30c7\u30fc\u30bf\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d\u3002","740b9be1":"\u30af\u30e9\u30b9n\u306b\u3082\u3063\u3068\u3082\u9069\u3057\u3066\u3044\u308b\u3002","c7c1e838":"sumple_submission.csv\u306e\u5f62\u5f0f\u306b\u5408\u308f\u305b\u308b","3f0438a1":"test\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u306f1500\u679a\u306e\u753b\u50cf\u30d4\u30af\u30bb\u30eb\u6570\u306ftrain\u3068\u540c\u3058","f52ed57d":"# Preprocessing","7a7c33ac":"\n224*224\u30d4\u30af\u30bb\u30eb\u753b\u50cf\u304c\u304c3499\u679a","27a9b6eb":"train\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u306f3499\u306e\u30e9\u30d9\u30eb\u304c\u3042\u308b","1a3c55a0":"# \u30c7\u30fc\u30bf\u306e\u89b3\u5bdf"}}