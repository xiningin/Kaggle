{"cell_type":{"40bcb3e2":"code","1abceb52":"code","06fbbddf":"code","fc5d474b":"code","703eebd5":"code","c711c115":"code","03a306b4":"code","f58c9826":"code","7cd094ec":"code","3b9a74cc":"code","23216793":"code","6fdfb370":"code","d1307127":"markdown","d0d95133":"markdown","82528572":"markdown","a9ded7bb":"markdown","861391b6":"markdown","f24030f0":"markdown","879f1058":"markdown","a1bac8e1":"markdown","ea656157":"markdown","0fa55067":"markdown","5ec7f867":"markdown","8bf823d8":"markdown","ee9b4f2a":"markdown","02c8c0f0":"markdown","62973cfa":"markdown","de9b49d7":"markdown","6f19d7cc":"markdown","83e27c82":"markdown"},"source":{"40bcb3e2":"from mpl_toolkits.mplot3d import Axes3D\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #data visualization\nimport plotly.express as px \n\n\n\n#get the dataset of students performance\ndfStudents = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndfStudents.dataframeName = 'StudentsPerformance.csv'","1abceb52":"rows, cols = dfStudents.shape\nprint(f'{rows} rows and {cols} columns')\ndfStudents.describe()","06fbbddf":"dfStudents.head(10)","fc5d474b":"#Count nulls\nprint(dfStudents.isnull().sum())\n\n#Delete nulls\ndfStudents = dfStudents.dropna()\nprint('---')\ndfStudents.shape","703eebd5":"dfStudents['total score'] = round((dfStudents['math score'] + dfStudents['reading score'] + dfStudents['writing score']) \/ 3, 2 )\ndfStudents.head(10)\n","c711c115":"groupRank = pd.cut(dfStudents['total score'], [60, 70, 80, 90, 100], right=False)\ngroupRank = groupRank.dropna()\ngroupRank = groupRank.value_counts()\ndfgroupRank = pd.DataFrame({'Students': [groupRank[0], groupRank[1], groupRank[2], groupRank[3]]}, index= groupRank.index)  \ndfgroupRank","03a306b4":"fig1 = px.bar(dfgroupRank, x= dfgroupRank.index.astype(str), y= 'Students', width=800, height=400, \n              title=\"Number of Students in different mean ranges\")\nfig1.show()","f58c9826":"group = dfStudents.groupby('parental level of education')\n\ngroupHS = group.get_group('high school')\ngroupHs_mean = round(groupHS['total score'].sum() \/ len(groupHS), 2 )\nprint(\"Students in High School: \", len(groupHS), \n      \"mean of total score: \", groupHs_mean)\n\ngroupBD = group.get_group(\"bachelor's degree\")\ngroupBD_mean = round(groupBD['total score'].sum() \/ len(groupBD), 2 )\nprint(\"Students in bachelor's degree: \", len(groupBD),\n     \"mean of total score: \", groupBD_mean)\n\ngroupMD = group.get_group(\"master's degree\")\ngroupMD_mean = round(groupMD['total score'].sum() \/ len(groupMD), 2 )\nprint(\"Students in master's degree: \", len(groupMD),\n     \"mean of total score: \", groupMD_mean)\n\ngroupSC = group.get_group('some college')\ngroupSC_mean = round(groupSC['total score'].sum() \/ len(groupSC), 2 )\nprint(\"Students in some college: \", len(groupSC), \n     \"mean of total score: \", groupSC_mean)\n\ngroupAD = group.get_group(\"associate's degree\")\ngroupAD_mean = round(groupAD['total score'].sum() \/ len(groupAD), 2 )\nprint(\"Students in associate's degree: \", len(groupAD), \n     \"mean of total score: \", groupAD_mean)\n\nprint(\"************************************************\")\n\ndfGroupScores = pd.DataFrame({'Total Students': [len(groupHS), len(groupBD), len(groupMD), len(groupSC), len(groupAD) ], \n                              'Mean Score': [groupHs_mean, groupBD_mean, groupMD_mean, groupSC_mean, groupAD_mean]}, \n                             index =['High School', \"Bachelor's degree\", \"Master's degree\", \"Some college\", \"Associate's degree\"])  \ndfGroupScores","7cd094ec":"px.pie(dfGroupScores, names= dfGroupScores.index, values= \"Total Students\", title= \"% STUDENTS ON EACH PARENTAL EDUCATION LEVEL\")","3b9a74cc":"fig2 = px.bar(dfGroupScores, x= dfGroupScores.index, y='Mean Score', width=800, height=400, \n              title=\"Mean Scores on each parental education level\")\nfig2.show()","23216793":"#Create a group of only females of High school\nfemale = groupHS.groupby('gender').get_group('female')\n#Obtain the total\nprint(\"Female Students: \", len(female))\n#get the maximum total score\nfemale_max = female['total score'].max()\nfemale_min = female['total score'].min()\nprint(\"Highest score of female: \", female_max)\nprint(\"Lowest score of female: \", female_min)\n\nprint(\"************************************************\")\n\n#Do the same to males\nmale = groupHS.groupby('gender').get_group('male')\nprint(\"Male Students: \", len(male))\nmale_max = male['total score'].max()\nmale_min = male['total score'].min()\nprint(\"Highest score of male: \", male_max)\nprint(\"Lowest score of male: \", male_min)\n\nprint(\"************************************************\")\n\n# Create a new dataframe of these calculations \ndfHSMaxMin = pd.DataFrame({'Max Score': [female_max, male_max], \n                           'Min Score': [female_min, male_min]}, index =['Female', 'Male'])  \ndfHSMaxMin","6fdfb370":"dfHSMaxMin.plot(kind=\"bar\")\nplt.title(label= \"Maximum and Minimum Scores by gender with a parental level of High School\" , fontsize= 18, pad='40')\nplt.show()","d1307127":"#### Clean the dataset in case there is missing data (nan)","d0d95133":"__________________________________________________________________________________________________________________________________","82528572":"#### Observe the dimensions and describe the information","a9ded7bb":"*********************************************************************************************************","861391b6":"*Ranks -> 60-70, 70-80,  80-90,  90-100*","f24030f0":"*********************************************************************************************************","879f1058":"#### Present some elements of the dataset","a1bac8e1":"## 1.2 Group mean scores","ea656157":"# Dataset presentation","0fa55067":"## 1.1 Creat a new column with the mean score for each student","5ec7f867":"## TecNM Campus Colima           Ingenier\u00eda en Sistemas Computacionales\n### Herramientas para la ciencia de datos   U3\nHector Barbosa Le\u00f3n\n__________________________________________________________________________________________________________\n### 3b Descriptive data extraction\n\nAlejandra Centeno Alcaraz     17460100\n","8bf823d8":"*********************************************************************************************************","ee9b4f2a":"## 3.2 Graph the results","02c8c0f0":"*There is no missing data*","62973cfa":"## 2.1 Obtain the total of students on each parental level of education and then their mean score","de9b49d7":"## 2.2 Graph the results","6f19d7cc":"## 1.3 Graph the results","83e27c82":"## 3.1 Maximum \/ minimum mean score for female and male of the group \"High school\" (parental level of education)"}}