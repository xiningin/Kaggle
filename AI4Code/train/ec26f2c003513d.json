{"cell_type":{"ea1a5cd6":"code","17032860":"code","85bc63ca":"code","546171e1":"code","e2239f3a":"code","57cd9bf8":"code","ecbe47f7":"code","47e285f1":"code","b1954c62":"code","61241972":"code","b0665453":"code","944f367a":"code","5f94fe5c":"code","68bc04b9":"code","72d3a673":"code","0c8731a5":"code","f6780588":"code","5ee89483":"code","2647fad4":"markdown","0e2de873":"markdown","61cab987":"markdown","9613e4a9":"markdown","54973657":"markdown"},"source":{"ea1a5cd6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","17032860":"import numpy as np\nimport pandas as pd\nimport matplotlib as plt\nimport seaborn as sns\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","85bc63ca":"df=pd.read_csv('\/kaggle\/input\/bengaluru-house-price-data\/Bengaluru_House_Data.csv')","546171e1":"df.info()","e2239f3a":"df_missing_values = df.isnull().sum()\ndf_missing_values","57cd9bf8":"df_numeric_columns = df.select_dtypes(include=[\"int64\",\"float64\"]).keys()\ndf_numeric_columns","ecbe47f7":"columns_numeric_missing =[var for var in df_numeric_columns if df_missing_values[var]>0]\ncolumns_numeric_missing","47e285f1":"df_categorical_columns = df.select_dtypes(include=[\"object\"]).keys()\ndf_categorical_columns","b1954c62":"columns_categorical_missing = [var for var in df_categorical_columns if df_missing_values[var]>0]\ncolumns_categorical_missing","61241972":"imputer = SimpleImputer(missing_values = np.nan, strategy ='mean')\ndata =[[12, np.nan, 34], [12, 32, np.nan], [np.nan, 11, 20]]\nprint(\"original Data :\\n\", data)\nimputer = imputer.fit(data)\ndata = imputer.transform(data)","b0665453":"numeric_value_mean_imputer=Pipeline(steps=[(\"imputer\", SimpleImputer(strategy=\"mean\"))])\ncategorical_value_mode_imputer=Pipeline(steps=[(\"imputer\", SimpleImputer(strategy=\"most_frequent\"))])","944f367a":"preprocessing=ColumnTransformer(transformers=[(\"mean_imputer\", numeric_value_mean_imputer, columns_numeric_missing),\n                                               (\"mode_imputer\",categorical_value_mode_imputer,columns_categorical_missing)])\npreprocessing","5f94fe5c":"df_clean_null_value = preprocessing.fit_transform(df)\ndf_clean_null_value ","68bc04b9":"df_missing_value_solve = pd.DataFrame(df_clean_null_value, columns=columns_numeric_missing+columns_categorical_missing)\ndf_missing_value_solve","72d3a673":"df.update(df_missing_value_solve)","0c8731a5":"def clean_missing(df):\n    from sklearn.pipeline import Pipeline\n    from sklearn.impute import SimpleImputer\n    from sklearn.compose import ColumnTransformer\n    df_missing_values=df.isnull().sum()\n    df_numeric_columns=df.select_dtypes(include=[\"int64\",\"float64\"]).keys()\n    columns_numeric_missing= [var for var in df_numeric_columns if df_missing_values[var]>0]\n    df_categorical_columns=df.select_dtypes(include=[\"object\"]).keys()\n    columns_categorical_missing= [var for var in df_categorical_columns if df_missing_values[var]>0]\n    numeric_value_mean_imputer=Pipeline(steps=[(\"imputer\", SimpleImputer(strategy=\"mean\"))])\n    categorical_value_mode_imputer=Pipeline(steps=[(\"imputer\", SimpleImputer(strategy=\"most_frequent\"))])\n    preprocessing=ColumnTransformer(transformers=[(\"mean_imputer\", numeric_value_mean_imputer, columns_numeric_missing),\n                                               (\"mode_imputer\",categorical_value_mode_imputer,columns_categorical_missing)])\n    df_clean_null_value=preprocessing.fit_transform(df)\n    df_missing_value_solve=pd.DataFrame(df_clean_null_value, columns=columns_numeric_missing+columns_categorical_missing)\n    df.update(df_missing_value_solve)\n    return df","f6780588":"df=clean_missing(df)","5ee89483":"df.info()","2647fad4":"Clean missing value","0e2de873":"Make Pipeline","61cab987":"Update main data frame","9613e4a9":"Column Transform","54973657":"Select missing categorical columns"}}