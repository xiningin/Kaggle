{"cell_type":{"b94afb7e":"code","2a13f65d":"code","96d7284d":"code","49a71b47":"code","9d2ae851":"code","6c1ad971":"code","5b0e8459":"code","8824026b":"code","0d289eb2":"code","ff19e66b":"code","b2580726":"code","890552a4":"code","b5a9afd8":"code","44a0877b":"code","a1579ced":"code","1373e2be":"code","2c14192d":"code","ccefc0fb":"code","7c972492":"code","1e2e90e8":"code","6f4ebde0":"code","a6d38f7c":"code","f5ec54c7":"code","4fbabddb":"code","dec66b8b":"code","34c05f99":"code","f96199ba":"code","7320f0a6":"code","d5c82cb5":"code","92b9fd44":"code","33e4da53":"code","8061f883":"code","bd81e8e8":"code","46261ee7":"code","e00d1e79":"code","a9f929ae":"markdown","b6d087bd":"markdown","f36a0720":"markdown","eefef1d7":"markdown","d6075504":"markdown","1ed315c0":"markdown","0d3f9043":"markdown","9900b3e0":"markdown","b6e86147":"markdown","321cc914":"markdown"},"source":{"b94afb7e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nimport tensorflow as tf","2a13f65d":"data = pd.read_csv('..\/input\/hotel-booking-demand\/hotel_bookings.csv')","96d7284d":"data","49a71b47":"data.info()","9d2ae851":"data.isna().sum()","6c1ad971":"data = data.drop('company', axis=1)","5b0e8459":"for column in ['children', 'agent']:\n    data[column] = data[column].fillna(data[column].mean())","8824026b":"def get_categorical_uniques(df):\n    return {column: list(df[column].unique()) for column in df.columns if df.dtypes[column] == 'object'}","0d289eb2":"get_categorical_uniques(data)","ff19e66b":"data['reservation_year'] = data['reservation_status_date'].apply(lambda x: np.int(x[0:4]))\ndata['reservation_month'] = data['reservation_status_date'].apply(lambda x: np.int(x[5:7]))\n\ndata = data.drop('reservation_status_date', axis=1)","b2580726":"data","890552a4":"get_categorical_uniques(data)","b5a9afd8":"data['meal'] = data['meal'].replace('Undefined', np.NaN)","44a0877b":"target = 'hotel'\n\n\nordinal_features = ['arrival_date_month']\n\nnominal_features = ['meal', 'country', 'market_segment', 'distribution_channel', 'reserved_room_type', 'assigned_room_type', 'deposit_type', 'customer_type', 'reservation_status']","a1579ced":"month_ordering = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']","1373e2be":"data['arrival_date_month'] = data['arrival_date_month'].apply(lambda x: month_ordering.index(x))","2c14192d":"numerical_columns = [column for column in data.columns if data.dtypes[column] != 'object']\n\ncorr = data[numerical_columns].corr()\n\nplt.figure(figsize=(18, 15))\nsns.heatmap(corr, annot=True, vmin=-1.0, vmax=1.0, cmap='mako')\nplt.show()","ccefc0fb":"data = data.drop(['arrival_date_week_number', 'reservation_year'], axis=1)","7c972492":"data","1e2e90e8":"def onehot_encode(df, column, prefix):\n    df = df.copy()\n    dummies = pd.get_dummies(df[column], prefix=prefix)\n    df = pd.concat([df, dummies], axis=1)\n    df = df.drop(column, axis=1)\n    return df","6f4ebde0":"onehot_prefixes = ['m', 'c', 'ms', 'dc', 'rt', 'at', 'dt', 'ct', 'rs']","a6d38f7c":"for column, prefix in zip(nominal_features, onehot_prefixes):\n    data = onehot_encode(data, column, prefix)","f5ec54c7":"data","4fbabddb":"label_encoder = LabelEncoder()\n\ndata['hotel'] = label_encoder.fit_transform(data['hotel'])","dec66b8b":"{index: label for index, label in enumerate(label_encoder.classes_)}","34c05f99":"data","f96199ba":"y = data.loc[:, target]\nX = data.drop(target, axis=1)","7320f0a6":"scaler = StandardScaler()\n\nX = scaler.fit_transform(X)","d5c82cb5":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=46)","92b9fd44":"X.shape","33e4da53":"y.mean()","8061f883":"inputs = tf.keras.Input(shape=(246,))\nx = tf.keras.layers.Dense(64, activation='relu')(inputs)\nx = tf.keras.layers.Dense(64, activation='relu')(x)\noutputs = tf.keras.layers.Dense(1, activation='sigmoid')(x)\n\nmodel = tf.keras.Model(inputs, outputs)\n\n\nmodel.compile(\n    optimizer='adam',\n    loss='binary_crossentropy',\n    metrics=[\n        'accuracy',\n        tf.keras.metrics.AUC(name='auc')\n    ]\n)\n\n\nbatch_size = 32\nepochs = 7\n\nhistory = model.fit(\n    X_train,\n    y_train,\n    validation_split=0.2,\n    batch_size=batch_size,\n    epochs=epochs\n)","bd81e8e8":"fig = px.line(\n    history.history,\n    y=['loss', 'val_loss'],\n    labels={'x': \"Epoch\", 'y': \"Loss\"},\n    title=\"Loss Over Time\"\n)\n\nfig.show()","46261ee7":"np.argmin(history.history['val_loss'])","e00d1e79":"model.evaluate(X_test, y_test)","a9f929ae":"# Modeling and Training","b6d087bd":"# Results","f36a0720":"## Encoding","eefef1d7":"# Getting Started","d6075504":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/RMFL36yY8C0","1ed315c0":"# Back to Encoding","0d3f9043":"# Preprocessing","9900b3e0":"## Splitting and Scaling","b6e86147":"# Visualizing Correlations","321cc914":"# Task for Today  \n\n***\n\n## Hotel Classification  \n\nGiven *data about guests at two different hotels (one city hotel and one resort hotel)*, let's try to predict which **hotel a guest is staying at**.  \n  \nWe will use a TensorFlow ANN to make our predictions."}}