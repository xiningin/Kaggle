{"cell_type":{"7e3f78b2":"code","1d961af5":"code","cebc5617":"code","07b27534":"code","65e76d1b":"code","94188430":"code","3f471819":"code","0f8118cc":"code","f0e2a6d4":"code","ee0ef91d":"code","bef71385":"code","5d7d17b9":"code","e8b1a0d9":"code","f7359e72":"code","8a4eab7f":"code","a1acbbb5":"code","a3d05deb":"code","20d55176":"code","20201491":"code","08b8bd18":"code","58a1befb":"code","0628ba0d":"code","cf7f609b":"code","798bd3a8":"code","e8c9c2d3":"code","eff3219a":"code","5d365f43":"code","04040992":"code","a45bedcb":"code","cb1fbba5":"code","2c41f256":"code","fad3044b":"code","749397bd":"code","7e5165c7":"code","97151f36":"code","9b0be13b":"code","0ae502fb":"code","cccec13b":"code","1ca96c31":"code","65a353aa":"code","8754e006":"code","cb302c3c":"code","8ccd398d":"code","8db5a6a0":"code","ef0af969":"markdown","8768c191":"markdown","d088e682":"markdown","1459948a":"markdown","3c3873fd":"markdown"},"source":{"7e3f78b2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \nimport matplotlib.pyplot as plt\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1d961af5":"df=pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/test.csv')\ndf.head(5)","cebc5617":"test = test_df.iloc[:, 1:].values","07b27534":"df.info()","65e76d1b":"    X = df.iloc[:, 2:].values\n    y = df.iloc[:, 1].values\n    y","94188430":"from sklearn.model_selection import train_test_split","3f471819":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.200, random_state = 1,stratify =y)","0f8118cc":"from sklearn.metrics import accuracy_score, recall_score, precision_score, f1_score, classification_report, confusion_matrix","f0e2a6d4":"from sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics","ee0ef91d":"logreg = LogisticRegression()\nlogreg.fit(X_train, y_train)","bef71385":"y_pred = logreg.predict(X_test)\nprint('Accuracy of logistic regression classifier on test set: {:.2f}'.format(logreg.score(X_test, y_test)))","5d7d17b9":"from sklearn.metrics import confusion_matrix\nconfusion_matrix = confusion_matrix(y_test, y_pred)\nprint(confusion_matrix)","e8b1a0d9":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","f7359e72":"y_pred = logreg.predict(test)","8a4eab7f":"sub = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nsub['target'] = y_pred\nsub.to_csv('logreg1.csv', index=False)","a1acbbb5":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn import metrics","a3d05deb":"gnb = GaussianNB()\ngnb.fit(X_train, y_train)","20d55176":"y_pred = gnb.predict(X_test)","20201491":"print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","08b8bd18":"from sklearn.metrics import classification_report, confusion_matrix\nprint(confusion_matrix(y_test, y_pred))","58a1befb":"print(\"Accuracy:\",metrics.classification_report(y_test, y_pred))","0628ba0d":"y_pred = gnb.predict(test)","cf7f609b":"sub = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nsub['target'] = y_pred\nsub.to_csv('gaussian.csv', index=False)","798bd3a8":"from sklearn.naive_bayes import BernoulliNB\nfrom sklearn.model_selection import train_test_split","e8c9c2d3":"bnb = BernoulliNB(binarize=0.0)\nbnb.fit(X_train, y_train)","eff3219a":" bnb.score(X_test, y_test)","5d365f43":"y_pred = bnb.predict(X_test)","04040992":"print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","a45bedcb":"from sklearn.metrics import classification_report, confusion_matrix\nprint(confusion_matrix(y_test, y_pred))","cb1fbba5":"print(\"Accuracy:\",metrics.classification_report(y_test, y_pred))","2c41f256":"y_pred = bnb.predict(test)","fad3044b":"sub = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nsub['target'] = y_pred\nsub.to_csv('Bernollin.csv', index=False)","749397bd":"import seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics \nfrom sklearn.tree import DecisionTreeClassifier","7e5165c7":"clf = DecisionTreeClassifier()\nclf = clf.fit(X_train,y_train)\ny_pred = clf.predict(X_test)","97151f36":"print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","9b0be13b":"y_pred = clf.predict(test)","0ae502fb":"sub = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nsub['target'] = y_pred\nsub.to_csv('DTrees.csv', index=False)","cccec13b":"import os\nos.environ['KMP_DUPLICATE_LIB_OK']='True'\nimport xgboost as xgb\nimport pandas as pd","1ca96c31":"xg_cl = xgb.XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=1, gamma=1,\n              learning_rate=0.1, max_delta_step=0, max_depth=8,\n              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,\n              nthread=None, objective='binary:logistic', random_state=0,\n              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n              silent=None, subsample=1, verbosity=1)","65a353aa":"xg_cl.fit(X_train, y_train)","8754e006":"y_pred = xg_cl.predict(X_test)","cb302c3c":"accuracy = float(np.sum(y_pred==y_test))\/y_test.shape[0]\nprint(\"accuracy: %f\" % (accuracy))","8ccd398d":"y_pred = xg_cl.predict(test)","8db5a6a0":"sub = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nsub['target'] = y_pred\nsub.to_csv('xgboost1.csv', index=False)","ef0af969":"LOGREG finished\n","8768c191":"**Logistic Regression******","d088e682":"Naive Bayes\n","1459948a":"DTrees and RF","3c3873fd":"XGBOOST"}}