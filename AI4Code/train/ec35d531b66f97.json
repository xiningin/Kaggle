{"cell_type":{"201ce872":"code","3dc88ba1":"code","9e5bff6a":"code","0a913f2b":"code","0dd30260":"code","24f7f7a8":"code","60b2b1c5":"code","10406f4d":"code","58128d8d":"code","74eeef47":"code","327db95c":"code","6fa4e8f4":"code","1e6ec441":"code","142a463c":"code","6f01404a":"code","c7fdf7d5":"code","b2091912":"code","cf19783e":"code","ca6564bd":"code","62b8cd54":"code","27c42a43":"code","3909b4c8":"code","a93ef9f0":"code","4101ec56":"code","ab825621":"code","c73bcde1":"code","b9b58570":"code","5eb1f987":"code","7f2aa755":"code","87b74c8d":"code","11ccae4c":"code","205f40b7":"code","a21d37de":"code","99d8f89f":"code","79336b09":"code","76c10d9c":"code","e7057f28":"code","bf60ff04":"code","6243d985":"code","3e783aab":"code","8dfc44dc":"code","01fdf7de":"code","f603b746":"code","1616cae2":"markdown","76d7a4d6":"markdown","045428f5":"markdown"},"source":{"201ce872":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3dc88ba1":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","9e5bff6a":"df = pd.read_csv('..\/input\/real-estate-price-prediction\/Real estate.csv', index_col='No')\ndf.head(5)","0a913f2b":"df.info()","0dd30260":"df.describe()","24f7f7a8":"plt.figure(figsize=(16,6))\ncorr = df.corr()\nsns.set_theme(style ='white')\nheat_map = sns.heatmap(corr,vmin = -1, vmax = 1, square = True, annot = True, cmap = 'coolwarm')\nheat_map.set_title('Correlation Heatmap', fontdict={'fontsize':18} )\n","60b2b1c5":"df.columns","10406f4d":"df['X3 distance to the nearest MRT station'].value_counts()\nprint(df['X3 distance to the nearest MRT station'].max())\nprint(df['X3 distance to the nearest MRT station'].min())","58128d8d":"df['X4 number of convenience stores'].value_counts()","74eeef47":"x_1 = df['X4 number of convenience stores']\ny_1 = df['X3 distance to the nearest MRT station']\nsns.scatterplot(x_1, y_1)\n","327db95c":"from datetime import datetime\ndf['X1 transaction date'] = pd.to_datetime(df['X1 transaction date'])\n\n\ndf.head()","6fa4e8f4":"df['X2 house age'].value_counts()","1e6ec441":"print(df['X2 house age'].max())\nprint(df['X2 house age'].min())","142a463c":"df.info()","6f01404a":"df.tail(10)","c7fdf7d5":"df['X2 house age']","b2091912":"df.shape","cf19783e":"df = df.drop('X1 transaction date', axis =1)\ndf.head()","ca6564bd":"plt.figure(figsize=(16,6))\nhist_graph = sns.histplot(df, x = 'X2 house age', color ='g')\nhist_graph.set_title('Histogram for house age', fontdict={'fontsize': 18})\n","62b8cd54":"plt.figure(figsize=(16,6))\nhist_graph = sns.histplot(df, x = 'X4 number of convenience stores', color ='r')\nhist_graph.set_title('Histogram for number of convenience stores', fontdict={'fontsize': 18})","27c42a43":"scatter_p_x3 = sns.scatterplot(x = df['X3 distance to the nearest MRT station'], y =df['Y house price of unit area'])\nscatter_p_x3.set_title('Scatter Plot for X3 distance to the nearest MRT station')","3909b4c8":"scatter_p_x4 = sns.scatterplot(x = df['X4 number of convenience stores'], y =df['Y house price of unit area'])\nscatter_p_x4.set_title('Scatter Plot for X4 number of convenience stores')","a93ef9f0":"scatter_p_x5 = sns.scatterplot(x = df['X5 latitude'], y =df['Y house price of unit area'])\nscatter_p_x5.set_title('Scatter Plot for X5 latitude')","4101ec56":"plt.figure(figsize=(20,10))\nreg_plot_x5_log=sns.regplot(x = df['X5 latitude'], y =df['Y house price of unit area'], order=2)","ab825621":"plt.figure(figsize=(20, 6))\nline_p_x5 = sns.lineplot(x = df['X5 latitude'], y =df['Y house price of unit area'], marker = True)","c73bcde1":"hist_plot_x5_log=sns.displot(x = df['X5 latitude'])","b9b58570":"scatter_p_x6 = sns.scatterplot(x = df['X6 longitude'], y =df['Y house price of unit area'])\nscatter_p_x6.set_title('Scatter Plot for X6 longitude')","5eb1f987":"hist_plot_x6=sns.displot(x = df['X6 longitude'])","7f2aa755":"line_p_x6 = sns.lineplot(x = df['X6 longitude'], y =df['Y house price of unit area'], marker = True)","87b74c8d":"df.columns","11ccae4c":"df.info()","205f40b7":"msk = np.random.rand(len(df)) < 0.8\ntrain = df[msk]\ntest = df[~msk]","a21d37de":"train.columns","99d8f89f":"from sklearn.preprocessing import PolynomialFeatures\nfrom sklearn import linear_model\ntrain_x = np.asanyarray(train[['X2 house age', 'X3 distance to the nearest MRT station',\n       'X4 number of convenience stores', 'X5 latitude', 'X6 longitude'\n       ]])\ntrain_y = np.asanyarray(train[['Y house price of unit area']])\n\ntest_x = np.asanyarray(test[['X2 house age', 'X3 distance to the nearest MRT station',\n       'X4 number of convenience stores', 'X5 latitude', 'X6 longitude']])\ntest_y = np.asanyarray(test[['Y house price of unit area']])\n\n\npoly = PolynomialFeatures(degree=2)\ntrain_x_poly = poly.fit_transform(train_x)\ntrain_x_poly","79336b09":"multi = linear_model.LinearRegression()\nlr = multi.fit(train_x, train_y)\nprint ('Coefficients: ', lr.coef_)\nprint ('Intercept: ',lr.intercept_)","76c10d9c":"from math import sqrt\nfrom sklearn.metrics import mean_absolute_error, r2_score, mean_squared_error","e7057f28":"preds_1 =lr.predict(test_x)","bf60ff04":"Results = pd.DataFrame({'Algorithm': [],'MAE': [], 'R^2': [], \"MSE\":[], \"RMSE\":[]})\n","6243d985":"res = pd.DataFrame({'Algorithm': ['Linear Regression'],'MAE': [mean_absolute_error(test_y, preds_1)], \"R^2\":[r2_score(test_y, preds_1)], \"MSE\":[mean_squared_error(test_y, preds_1)],\"RMSE\":[sqrt(mean_squared_error(test_y, preds_1))]})\n \nResults = Results.append(res)","3e783aab":"clf = linear_model.LinearRegression()\ntrain_y_ = clf.fit(train_x_poly, train_y)\n# The coefficients\nprint ('Coefficients: ', clf.coef_)\nprint ('Intercept: ',clf.intercept_)","8dfc44dc":"test_x_poly = poly.fit_transform(test_x)\npreds_2 = clf.predict(test_x_poly)","01fdf7de":"res = pd.DataFrame({'Algorithm': ['Polynormial Regression'],'MAE': [mean_absolute_error(test_y, preds_2)], \"R^2\":[r2_score(test_y, preds_2)], \"MSE\":[mean_squared_error(test_y, preds_2)],\"RMSE\":[sqrt(mean_squared_error(test_y, preds_2))]})\n\nResults = Results.append(res)","f603b746":"Results","1616cae2":"'X2 house age', 'X3 distance to the nearest MRT station',\n       'X4 number of convenience stores', 'X5 latitude', 'X6 longitude',\n       'Y house price of unit area'","76d7a4d6":"Transcation date corr with house price per unit area is ~0. ","045428f5":"This is  a not linear relation"}}