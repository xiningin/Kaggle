{"cell_type":{"3e7f042a":"code","a7c85ff3":"code","ac5eae6d":"code","6988d3e5":"code","db6afcba":"code","ab5be0cd":"code","3504f718":"code","acc4a0f4":"code","73d5c372":"code","374389f8":"code","1103ed86":"code","715a4098":"code","aaca9ff9":"code","221e3899":"code","461a6a01":"code","badf9fe3":"code","2f38ba76":"code","7abb7d7e":"code","adf344f0":"code","1c5cfa1a":"code","ba4f2b49":"code","8749d6e1":"markdown","48803de8":"markdown"},"source":{"3e7f042a":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns","a7c85ff3":"train_df = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/train.csv')\ntest_df = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/test.csv')\nsample_sub = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/sample_submission.csv')","ac5eae6d":"train_df.head()","6988d3e5":"print(f'Train shape:{train_df.shape}')\nprint(f'Test shape:{test_df.shape}')","db6afcba":"train_df.describe()","ab5be0cd":"train_df.info()","3504f718":"from sklearn.model_selection import train_test_split","acc4a0f4":"X = train_df.drop('target', axis=1)\ny = train_df['target']","73d5c372":"X_train, X_val, y_train, y_val = train_test_split(X, y,test_size=0.2, random_state=3)","374389f8":"from lightgbm import LGBMRegressor\n\nlgb_model = LGBMRegressor(n_estimators = 493,metric='rmse', \n                          reg_alpha = 2, reg_lambda=10, colsample_bytree=0.8)","1103ed86":"lgb_model.fit(X_train, y_train, eval_set=(X_val, y_val))","715a4098":"y_pred_lgb = lgb_model.predict(test_df)","aaca9ff9":"import xgboost as xgb","221e3899":"params = {'objective': 'reg:squarederror', \n          'eval_metric': 'rmse',\n          'eta': 0.01,\n          'max_depth': 10, \n          'subsample': 0.6, \n          'colsample_bytree': 0.6,\n          'lambda':10,\n          'alpha':2,\n          'random_state': 42, \n          'silent': True}\n    \ntr_data = xgb.DMatrix(X_train, y_train)\nva_data = xgb.DMatrix(X_val, y_val)\n\nwatchlist = [(tr_data, 'train'), (va_data, 'valid')]\n\nmodel_xgb = xgb.train(params, tr_data, 1000, watchlist, maximize=False,verbose_eval=100)","461a6a01":"dtest = xgb.DMatrix(test_df)\ny_xgb_pred = model_xgb.predict(dtest, ntree_limit=model_xgb.best_ntree_limit)","badf9fe3":"from catboost import CatBoostRegressor","2f38ba76":"cb_model = CatBoostRegressor(iterations=795,\n                             learning_rate=0.05,\n                             depth=10,\n                             reg_lambda=10,\n                             eval_metric='RMSE',\n                             random_seed = 42,\n                             bagging_temperature = 0.2,\n                             od_type='Iter',\n                             metric_period = 50,\n                             od_wait=20)\n\ncb_model.fit(X_train, y_train,\n             eval_set=(X_val, y_val),\n             use_best_model=True,\n             verbose=50)","7abb7d7e":"cat_pred =cb_model.predict(test_df)","adf344f0":"sample_sub['target'] = (y_pred_lgb + y_xgb_pred + cat_pred) \/ 3 # averaging results.","1c5cfa1a":"sample_sub = sample_sub.round(6)","ba4f2b49":"sample_sub.to_csv('submission.csv',columns=['id', 'target'], header=True, index=False)","8749d6e1":"# Tabular playground - Jan 2021","48803de8":"This note book demonstrates how to train different machine learning algorithms and regularize them. This notebook is intended for beginners. please upvote if you like the content. "}}