{"cell_type":{"25dd2fe7":"code","1c489292":"code","4549be27":"code","84778bef":"code","9008f12e":"code","2fde15ce":"code","28000940":"code","e16c2d01":"code","e1caeb16":"code","4e8f09b8":"code","062cf59a":"code","13fdb7be":"markdown","a9c17dcc":"markdown","2b3b10be":"markdown","104b3365":"markdown","f30abd08":"markdown","37e59809":"markdown","cee99d9b":"markdown"},"source":{"25dd2fe7":"!conda install openbabel -c openbabel -y","1c489292":"import sys\n!conda install --yes --prefix {sys.prefix} -c rdkit rdkit","4549be27":"!pip install git+https:\/\/github.com\/samoturk\/mol2vec","84778bef":"import numpy as np\nimport pandas as pd\nimport os\nfrom tqdm import tqdm_notebook as tqdm\n\nfrom rdkit import Chem\nfrom mol2vec.features import mol2alt_sentence\nimport pybel\n\nfrom gensim.models import Word2Vec","9008f12e":"file_dir = '..\/input\/champs-scalar-coupling\/structures\/'\nmols_files=os.listdir(file_dir)\nmols_index=dict(map(reversed,enumerate(mols_files)))\nmol_name = list(mols_index.keys())","2fde15ce":"# FROM: https:\/\/www.kaggle.com\/roccomeli\/easy-xyz-to-smiles-conversion\n\ndef xyz_to_smiles(fname: str) -> str:\n    \n    mol = next(pybel.readfile(\"xyz\", fname))\n\n    smi = mol.write(format=\"smi\")\n\n    return smi.split()[0].strip()","28000940":"smiles = [xyz_to_smiles(file_dir + i) for i in tqdm(mol_name)]","e16c2d01":"df_smiles = pd.DataFrame({'molecule_name': mol_name, 'smiles': smiles})\ndf_smiles.head(11)","e1caeb16":"sentence = mol2alt_sentence(Chem.MolFromSmiles(df_smiles.smiles[33]), 1)\nprint('SMILE:', df_smiles.smiles[33])\nprint(sentence)","4e8f09b8":"model = Word2Vec.load('..\/input\/mol2vec\/model_300dim.pkl')","062cf59a":"model.wv[sentence[0]]","13fdb7be":"In this kernel, I extract new features, at molecule level, making use of pre-trained MOL2VEC model.\n\nThe algorith is based on the classical Word2Vec for NLP. I found this beatiful [project on GitHub](https:\/\/github.com\/samoturk\/mol2vec) which easy provides the conversion of molecules into vectors. The pyhton package gives you also all the instruments to train your own vector rapresentation of molecules (here, I make use of a pre-trained model).\n\nAll we need is the SMILE notation for our molecules. I've found a good [kernel](https:\/\/www.kaggle.com\/roccomeli\/easy-xyz-to-smiles-conversion) which has already implemented the creation of SMILE code.\nWe need SMILEs because we have to create the Morgan fingerprint. This is just a numeric identifier for a molecule substructure.\nWith fingerprints at our disposal we can question MOL2VEC to get the corresponding structure representation of a given molecule.   ","a9c17dcc":"**Install the required packages**","2b3b10be":"**Read structure files**","104b3365":"**Extract Morgan Fingerprints**","f30abd08":"**Load pretrained MOL2VEC**","37e59809":"**SMILE creation**","cee99d9b":"**See you on [MEDIUM](https:\/\/medium.com\/@cerlymarco)**"}}