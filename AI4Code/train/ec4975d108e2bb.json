{"cell_type":{"d959d16a":"code","aaf7434e":"code","26b51923":"code","71db8734":"code","c57d6bb5":"code","96a07624":"code","c47d9294":"code","f108e703":"code","3fb40960":"code","0bdd1f2f":"code","172171a1":"code","0c54262e":"code","13053bd0":"code","0977c922":"code","7cf66c26":"code","74d8a5ee":"code","f7fd6a95":"code","b4b01008":"code","bdd7b234":"code","6bf4cf87":"code","1ab5c2ee":"code","d8e67a5f":"code","5588f7f2":"code","2cd053f5":"code","d83b10d1":"code","e407c3bf":"code","209d1e90":"code","1d164185":"code","2441ffb7":"code","fed4c6bf":"markdown","efed46c7":"markdown","0ad35b34":"markdown","69c1ebdf":"markdown","027a792e":"markdown","5edb020d":"markdown","673d2bf0":"markdown","5d3fbc95":"markdown","1d1f3012":"markdown","50d75822":"markdown","844851b9":"markdown","cca3e2d8":"markdown","8410902a":"markdown"},"source":{"d959d16a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","aaf7434e":"hist_trans = pd.read_csv('..\/input\/historical_transactions.csv')\nnew_trans = pd.read_csv('..\/input\/new_merchant_transactions.csv')","26b51923":"hist_trans.shape, new_trans.shape","71db8734":"hist_trans.purchase_date = pd.to_datetime(hist_trans.purchase_date)\nnew_trans.purchase_date = pd.to_datetime(new_trans.purchase_date)","c57d6bb5":"hist_trans.purchase_date.agg([np.min, np.max])","96a07624":"new_trans.purchase_date.agg([np.min, np.max])","c47d9294":"hist_time_range = hist_trans.groupby('card_id', sort=False)['purchase_date'].agg([np.min, np.max])\nnew_time_range = new_trans.groupby('card_id', sort=False)['purchase_date'].agg([np.min, np.max])","f108e703":"hist_time_range.head()","3fb40960":"new_time_range.head()","0bdd1f2f":"hist_time_range.shape, new_time_range.shape","172171a1":"set(hist_time_range.index.tolist()) - set(new_time_range.index.tolist())","0c54262e":"set(new_time_range.index.tolist()) - set(hist_time_range.index.tolist())","13053bd0":"time_range = hist_time_range.join(new_time_range, how='right', lsuffix='_hist', rsuffix='_new')","0977c922":"time_range.head()","7cf66c26":"time_range.shape","74d8a5ee":"all(time_range.amax_hist < time_range.amin_new)","f7fd6a95":"hist_month_num = (time_range.amax_hist - time_range.amin_hist).apply(lambda x: x.days \/ 30)\nnew_month_num = (time_range.amax_new - time_range.amin_new).apply(lambda x: x.days \/ 30)","b4b01008":"plt.hist(hist_month_num.values, bins=50)\nplt.title('Historical transactions time range')\nplt.xlabel('Month')\nplt.ylabel('Counts')","bdd7b234":"plt.hist(new_month_num.values, bins=50)\nplt.title('New merchant transactions time range')\nplt.xlabel('Month')\nplt.ylabel('Counts')","6bf4cf87":"hist_trans.dropna(axis=0, how='any', inplace=True)\nnew_trans.dropna(axis=0, how='any', inplace=True)","1ab5c2ee":"hist_trans.shape, new_trans.shape","d8e67a5f":"hist_merchant_set = hist_trans.groupby('card_id')['merchant_id'].apply(lambda x: set(x.tolist()))\nnew_merchant_set = new_trans.groupby('card_id')['merchant_id'].apply(lambda x: set(x.tolist()))","5588f7f2":"hist_merchant_set.head()","2cd053f5":"merchant_set = pd.concat([hist_merchant_set, new_merchant_set], axis=1, join='inner')","d83b10d1":"merchant_set.columns = ['hist', 'new']","e407c3bf":"merchant_set.head()","209d1e90":"intersection = merchant_set.apply(lambda x: len(set.intersection(x['hist'], x['new'])), axis=1)","1d164185":"intersection.head()","2441ffb7":"any(intersection.values)","fed4c6bf":"Hope this will help, thanks!","efed46c7":"### 2. Time range for each `card_id`","0ad35b34":"So, we know that `historical_transactions.csv` records transactions from 2017\/01\/01 to 2018\/02\/28, and `new_merchant_transactions.csv` records transactions from 2017\/03\/01 to 2018\/04\/30.","69c1ebdf":"How long is `historical_transactions\/new_merchant_transactions` for each `card_id`?","027a792e":"**Data Description** has little information about `historical_transactions.csv` and `new_merchant_transactions.csv`.\n>  - historical_transactions.csv - up to 3 months' worth of historical transactions for each card_id\n>  - new_merchant_transactions.csv - two months' worth of data for each card_id containing ALL purchases that card_id made at merchant_ids that were not visited in the historical data.\n\nThis kernel do same statistic about this two files.","5edb020d":"### 3. New merchant","673d2bf0":"There is no intersections between `historical_transactions.merchant_id` and `new_merchant_transactions.merchant_id` for every `card_id`.","5d3fbc95":"`card_id` in `new_merchant_transactions.csv` also in `historical_transactions.csv`,  but the reverse is not the case.","1d1f3012":"`new_merchant_transactions`: ALL purchases that card_id made at `merchant_id`s that were not visited in the historical data. Let's check it.","50d75822":"Well, historical transactions lasts more than 3 months, which is not consistent with **Data Description**.(am I wrong? if someone know the reason, please tell me.). new merchant transactions did last up to 2 months.","844851b9":"Does historical_transactions early than new_transactions for all `card_id`?","cca3e2d8":"We'd better remove NA merchant_id","8410902a":"### 1. Overall time range"}}