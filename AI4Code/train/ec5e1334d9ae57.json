{"cell_type":{"bb108932":"code","93ffa7de":"code","1278fd9f":"code","9b376a80":"code","1d45ddeb":"code","6c609790":"code","114acc67":"code","e78700bc":"code","284ec0ad":"code","58d66b64":"code","83c9a21e":"code","e5d8459c":"code","a7298eea":"code","7e183c01":"code","15415624":"code","f53b7607":"code","b062bb15":"code","09c62938":"code","0f0d7403":"code","56896812":"markdown","c1b2130f":"markdown","45de6563":"markdown","985a3857":"markdown","55c5ab3b":"markdown"},"source":{"bb108932":"# basic library\nimport numpy as np\nimport pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# visulization library\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# deep learning library\nimport tensorflow as tf\nfrom tensorflow import keras\n\n# preprocessing\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import OneHotEncoder","93ffa7de":"train_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\nsample_submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","1278fd9f":"train_df.info()","9b376a80":"train_df.head()","1d45ddeb":"train = train_df.drop(['PassengerId', 'Name', 'Ticket', 'Cabin'], axis=1)\ntest = test_df.drop(['PassengerId', 'Name', 'Ticket', 'Cabin'], axis=1)","6c609790":"sns.boxplot(x='Survived', y='Age', data=train_df)","114acc67":"train['Age'] = train['Age'].fillna(train['Age'].mean())\ntest['Age'] = test['Age'].fillna(test['Age'].mean())","e78700bc":"sns.countplot(x='Embarked', data=train)","284ec0ad":"train['Embarked'] = train['Embarked'].fillna('C')","58d66b64":"X_train = train.drop(['Survived'], axis=1)\ny_train = train['Survived']","83c9a21e":"X_train.head()","e5d8459c":"X_train = pd.get_dummies(X_train)\nX_test = pd.get_dummies(test)","a7298eea":"sc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","7e183c01":"model = keras.models.Sequential()\n\nmodel.add(keras.layers.Dense(10, input_shape=X_train.shape[1:], kernel_initializer='he_normal'))\nmodel.add(keras.layers.Activation('elu'))\n\n# 1st hidden layer\nmodel.add(keras.layers.Dense(200, kernel_initializer='he_normal'))\nmodel.add(keras.layers.Activation('elu'))\nmodel.add(keras.layers.Dropout(0.5))\nmodel.add(keras.layers.BatchNormalization())\n\n# 2nd hidden layer\nmodel.add(keras.layers.Dense(200, kernel_initializer='he_normal'))\nmodel.add(keras.layers.Activation('elu'))\nmodel.add(keras.layers.Dropout(0.5))\nmodel.add(keras.layers.BatchNormalization())\n\n# 3rd hidden layer\nmodel.add(keras.layers.Dense(200, kernel_initializer='he_normal'))\nmodel.add(keras.layers.Activation('elu'))\nmodel.add(keras.layers.Dropout(0.5))\nmodel.add(keras.layers.BatchNormalization())\n\n# 4th hidden layer\nmodel.add(keras.layers.Dense(200, kernel_initializer='he_normal'))\nmodel.add(keras.layers.Activation('elu'))\nmodel.add(keras.layers.Dropout(0.5))\nmodel.add(keras.layers.BatchNormalization())\n\n# 5th hidden layer\nmodel.add(keras.layers.Dense(200, kernel_initializer='he_normal'))\nmodel.add(keras.layers.Activation('elu'))\nmodel.add(keras.layers.Dropout(0.5))\nmodel.add(keras.layers.BatchNormalization())\n\n# output layer\nmodel.add(keras.layers.Dense(1, activation='sigmoid'))","15415624":"model.summary()","f53b7607":"model.compile(loss='binary_crossentropy', optimizer='adam',  metrics = ['accuracy'])","b062bb15":"history = model.fit(X_train, y_train, epochs=100)","09c62938":"y_pred = model.predict(X_test)","0f0d7403":"y_pred = y_pred.round().astype(int)\nsample_submission['Survived'] = y_pred\nsample_submission.to_csv('submission1.csv',index = False)","56896812":"**I hope you find this kernel useful and enjoyable and think that it helped you. PLEASE UPVOTE.**\n\nYour comments and feedback are most welcome.","c1b2130f":"## Import Library","45de6563":"## Feature vs Target","985a3857":"## Pre-processing","55c5ab3b":"## Model Creation"}}