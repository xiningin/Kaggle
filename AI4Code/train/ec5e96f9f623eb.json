{"cell_type":{"f42aab7a":"code","7a85b7d0":"code","a089a90c":"code","02d53995":"code","c86ddd99":"code","decef61c":"code","81c29903":"code","82b5fd14":"code","ca2589e1":"code","575efaf0":"code","a0303064":"code","804e0ed6":"code","3819b787":"code","01085b39":"code","a01c66b9":"code","16898994":"code","4ca9a208":"code","25b1e4cb":"code","6d7c7319":"code","707969a5":"code","b1d5a7c9":"code","7935800d":"code","3d570869":"code","7bd41e97":"code","f164ea1c":"code","37677664":"code","5c746522":"code","56a4cde4":"code","5684f39b":"code","9b0cf48e":"code","d2551260":"code","6524ffce":"code","82463752":"code","e9ccdd7a":"code","9998a6d4":"markdown","26e1730d":"markdown","4cb5ce0a":"markdown","27c1ae47":"markdown","05cea1f3":"markdown","e9920860":"markdown","5767fcf4":"markdown","633b5581":"markdown"},"source":{"f42aab7a":"!pip install dataprep by\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom warnings import filterwarnings\nfrom datetime import datetime\nfrom mpl_toolkits.mplot3d import Axes3D\nimport statsmodels.api as sm\nimport missingno as msno\nimport statsmodels.stats.api as sms\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import scale\nfrom sklearn.neighbors import LocalOutlierFactor\nfrom scipy.stats import levene\nfrom scipy.stats import shapiro\nfrom scipy.stats.stats import pearsonr\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict\nfrom sklearn.preprocessing import scale\nfrom sklearn.model_selection import ShuffleSplit, GridSearchCV\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn import model_selection\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.cross_decomposition import PLSRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import LassoCV\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.linear_model import ElasticNetCV\nfrom sklearn import linear_model\nfrom sklearn.ensemble import RandomForestRegressor, RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingRegressor, GradientBoostingClassifier\nimport xgboost as xgb\nfrom xgboost import XGBRegressor, XGBClassifier\nfrom lightgbm import LGBMRegressor, LGBMClassifier\nfrom catboost import CatBoostRegressor, CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn import tree\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom sklearn.cluster import KMeans\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.manifold import Isomap,TSNE\nfrom sklearn.feature_selection import mutual_info_classif\nfrom tqdm.notebook import tqdm\nfrom scipy.stats import ttest_ind\nimport plotly.offline as pyo\nimport scipy.stats as stats\nimport pymc3 as pm\nfrom dataprep.eda import *\nfrom dataprep.eda import plot\nfrom dataprep.eda import plot_diff\nfrom dataprep.eda import plot_correlation\nfrom dataprep.eda import plot_missing\nimport plotly.figure_factory as ff\nfrom collections import Counter\nimport pandas_profiling as pp\nfrom mpl_toolkits.basemap import Basemap\nimport datetime as dt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.io as pio\nimport folium\nfrom folium import plugins","7a85b7d0":"READING_MAIN = pd.read_csv(\"..\/input\/connection-between-frp-and-plants\/PROJECT_FRP_TYPE_OF_PLANTS.csv\")","a089a90c":"READING_MAIN","02d53995":"READING_MAIN.rename(columns={\"AD\":\"plants\"},inplace=True)","c86ddd99":"READING_MAIN","decef61c":"print(READING_MAIN[\"acq_date\"].value_counts())","81c29903":"print(READING_MAIN[\"plants\"].value_counts())","82b5fd14":"MAX_FPR_DATA = READING_MAIN[READING_MAIN[\"frp\"] == READING_MAIN[\"frp\"].max()]","ca2589e1":"MAX_FPR_DATA","575efaf0":"MAP_FUNCTION = folium.Map(location=[38.9637,35.2433],\n                  tiles='openstreetmap',\n                  zoom_start=6.4)\n\nfolium.CircleMarker(\n    location=[37.0248,27.7112],\n    radius=20,\n    popup=f\"<b>MAXIMUM FRP -- <b>{MAX_FPR_DATA.plants.values}\",\n    tooltip=\"Click me\",\n    color='#FF0000',\n    fill=True,\n    fill_color='#FF0000',\n).add_to(MAP_FUNCTION)\n\nMAP_FUNCTION","a0303064":"MIN_FPR_DATA = READING_MAIN[READING_MAIN[\"frp\"] == READING_MAIN[\"frp\"].min()]","804e0ed6":"MIN_FPR_DATA","3819b787":"JULY_29_DATA = READING_MAIN[READING_MAIN[\"acq_date\"] == \"7\/29\/2021\"]","01085b39":"JULY_29_DATA.reset_index(drop=True,inplace=True)","a01c66b9":"JULY_29_DATA","16898994":"print(JULY_29_DATA[\"plants\"].value_counts())","4ca9a208":"JULY_29_CONIFEROUS = JULY_29_DATA[JULY_29_DATA[\"plants\"] == \"\u0130\u011fne Yaprakl\u0131 Ormanlar\"]\n\nJULY_29_CONIFEROUS.reset_index(drop=True,inplace=True)","25b1e4cb":"JULY_29_CONIFEROUS","6d7c7319":"CONIFEROUS_LAT_LONG = JULY_29_CONIFEROUS[[\"latitude\",\"longitude\"]]\n\nCONIFEROUS_LAT_LONG.latitude = CONIFEROUS_LAT_LONG.latitude.astype(float)\nCONIFEROUS_LAT_LONG.longitude = CONIFEROUS_LAT_LONG.longitude.astype(float)\n\nHEAT_CONIFEROUS = list(zip(CONIFEROUS_LAT_LONG.latitude,CONIFEROUS_LAT_LONG.longitude))","707969a5":"MAP_FUNCTION = folium.Map(location=[38.9637,30.2433],\n                  tiles='Stamen Terrain',\n                  zoom_start=6.5)\n\nplugins.MarkerCluster(CONIFEROUS_LAT_LONG).add_to(MAP_FUNCTION)\n\nMAP_FUNCTION","b1d5a7c9":"JULY_29_SORTED_TIME = JULY_29_DATA.copy()\n\nJULY_29_SORTED_TIME.sort_values(by=[\"acq_time\"],ascending=True,inplace=True)\n\nJULY_29_SORTED_TIME","7935800d":"print(JULY_29_SORTED_TIME[JULY_29_SORTED_TIME[\"frp\"] == JULY_29_SORTED_TIME[\"frp\"].max()])","3d570869":"figure = plt.figure(figsize=(25,14))\nsns.lineplot(x=JULY_29_SORTED_TIME[\"acq_time\"],y=JULY_29_SORTED_TIME[\"frp\"])\nplt.title(\"TIME-FRP \/ JULY 29\")\nplt.tight_layout()\nplt.show()","7bd41e97":"MAIN_LAT_LONG = READING_MAIN[[\"latitude\",\"longitude\"]]\n\nMAIN_LAT_LONG.latitude = MAIN_LAT_LONG.latitude.astype(float)\nMAIN_LAT_LONG.longitude = MAIN_LAT_LONG.longitude.astype(float)\n\nHEAT_MAIN_LAT_LONG = list(zip(MAIN_LAT_LONG.latitude,MAIN_LAT_LONG.longitude))","f164ea1c":"MAP_FUNCTION = folium.Map(location=[38.9637,30.2433],\n                  tiles='Stamen Terrain',\n                  zoom_start=6.5)\n\nplugins.MarkerCluster(MAIN_LAT_LONG).add_to(MAP_FUNCTION)\n\nMAP_FUNCTION","37677664":"MAIN_CONIFEROUS = READING_MAIN[READING_MAIN[\"plants\"] == \"\u0130\u011fne Yaprakl\u0131 Ormanlar\"]\n\nMAIN_CONIFEROUS.reset_index(drop=True,inplace=True)\n\nMAIN_CONIFEROUS","5c746522":"MAIN_CONIFEROUS_LAT_LONG = MAIN_CONIFEROUS[[\"latitude\",\"longitude\"]]\n\nMAIN_CONIFEROUS_LAT_LONG.latitude = MAIN_CONIFEROUS_LAT_LONG.latitude.astype(float)\nMAIN_CONIFEROUS_LAT_LONG.longitude = MAIN_CONIFEROUS_LAT_LONG.longitude.astype(float)\n\nHEAT_MAIN_CONIFEROUS = list(zip(MAIN_CONIFEROUS_LAT_LONG.latitude,MAIN_CONIFEROUS_LAT_LONG.longitude))","56a4cde4":"MAP_FUNCTION = folium.Map(location=[38.9637,30.2433],\n                  tiles='Stamen Terrain',\n                  zoom_start=6.5)\n\nplugins.MarkerCluster(MAIN_CONIFEROUS_LAT_LONG).add_to(MAP_FUNCTION)\n\nMAP_FUNCTION","5684f39b":"MAP_FUNCTION = folium.Map(location=[38.9637,30.2433],\n                  tiles='Stamen Terrain',\n                  zoom_start=6.5)\n\nplugins.MarkerCluster(MAIN_LAT_LONG).add_to(MAP_FUNCTION)\n\nplugins.AntPath(MAIN_CONIFEROUS_LAT_LONG).add_to(MAP_FUNCTION)\n\nMAP_FUNCTION","9b0cf48e":"MAP_FUNCTION = folium.Map(location=[38.9637,30.2433],\n                  tiles='Stamen Terrain',\n                  zoom_start=6.5)\n\nplugins.MarkerCluster(MAIN_LAT_LONG).add_to(MAP_FUNCTION)\n\nplugins.HeatMap(MAIN_CONIFEROUS_LAT_LONG).add_to(MAP_FUNCTION)\n\nMAP_FUNCTION","d2551260":"MAP_FUNCTION = folium.Map(location=[38.9637,30.2433],\n                  tiles='Stamen Terrain',\n                  zoom_start=6.5)\n\nplugins.MarkerCluster(MAIN_LAT_LONG).add_to(MAP_FUNCTION)\n\nplugins.HeatMap(HEAT_CONIFEROUS).add_to(MAP_FUNCTION)\n\nMAP_FUNCTION","6524ffce":"plt.style.use(\"dark_background\")","82463752":"figure = plt.figure(figsize=(25,14))\nsns.lineplot(x=JULY_29_DATA[\"plants\"],y=JULY_29_DATA[\"frp\"])\nplt.title(\"PLANTS-FRP \/ JULY 29\")\nplt.tight_layout()\nplt.show()","e9ccdd7a":"figure = plt.figure(figsize=(25,14))\nsns.lineplot(x=JULY_29_DATA[\"plants\"],y=JULY_29_DATA[\"brightness\"])\nplt.title(\"PLANTS-BRIGHTNESS \/ JULY 29\")\nplt.tight_layout()\nplt.show()","9998a6d4":"#### MIN FRP DATA","26e1730d":"### MAIN","4cb5ce0a":"### DATA TYPES","27c1ae47":"#### 29 JULY","05cea1f3":"#### JULY 29 BASED ON TIME","e9920860":"#### MAIN DATA MAP","5767fcf4":"#### MAX FRP","633b5581":"### PLOT"}}