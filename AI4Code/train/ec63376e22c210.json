{"cell_type":{"4f5a15ce":"code","eb1a7b6a":"code","191ebff0":"code","063e2a42":"code","d94f4b66":"code","8ce6e955":"code","1a9acd17":"code","d112c2f3":"code","c876094f":"code","dd9ed78e":"code","4e99b258":"code","7e6d812b":"code","f85c36a7":"code","49a55209":"code","8b8e494b":"code","ddb57c1d":"code","a2945be0":"code","fdbcb36d":"code","c135d0c9":"code","2fbb0cc1":"code","48ef5f35":"code","9225477d":"code","228a47aa":"code","92c5600f":"code","8785c573":"code","0fe21066":"code","7609090a":"code","236260a9":"code","ac1b3386":"code","87ae71f8":"code","59ececb6":"code","6f337975":"code","3763f86f":"code","a409baf5":"code","b85ea54e":"code","4ebff740":"code","ec6944db":"code","00969bfa":"code","f566c976":"code","2bd42769":"code","53f55cbe":"code","b0476b9d":"code","ffe74d8c":"code","b58b387c":"code","c58d59c5":"code","0e76a4b9":"code","9a86c78a":"markdown","b963a971":"markdown","443538be":"markdown","566002da":"markdown","831a7672":"markdown","ba932d04":"markdown","58197051":"markdown","bb0e3b42":"markdown","a9e9c65c":"markdown","d9dbefdb":"markdown","80af198d":"markdown","758f4179":"markdown","8140b21f":"markdown"},"source":{"4f5a15ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nfrom collections import Counter\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n   \nfrom subprocess import check_output\nprint(check_output([\"ls\",\"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","eb1a7b6a":"data = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')\ndata.info()","191ebff0":"data.corr()","063e2a42":"f,ax = plt.subplots(figsize=(16, 16))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","d94f4b66":"data.head(10)","8ce6e955":"data.columns","1a9acd17":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.NA_Sales.plot(kind = 'line', color = 'g',label = 'NA_Sales',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.EU_Sales.plot(color = 'r',label = 'EU_Sales',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","d112c2f3":"# Scatter Plot \ndata.plot(kind='scatter', x='NA_Sales', y='EU_Sales',alpha = 0.5,color = 'red')\nplt.xlabel('NA_Sales')              # label = name of label\nplt.ylabel('EU_Sales')\nplt.title('NA_Sales EU_Sales Scatter Plot')            # title = title of plot\nplt.show()","c876094f":"# Histogram\n# bins = number of bar in figure\ndata.NA_Sales.plot(kind = 'hist',bins = 70,figsize = (12,12))\nplt.show()","dd9ed78e":"# clf() = cleans it up again you can start a fresh\ndata.NA_Sales.plot(kind = 'hist',bins = 50)\nplt.clf()\n# We cannot see plot due to clf()","4e99b258":"data = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')\nseries = data['NA_Sales']        # data['NA_Sales'] = series\nprint(type(series))\ndata_frame = data[['NA_Sales']]  # data[['NA_Sales']] = data frame\nprint(type(data_frame))","7e6d812b":"# 1 - Filtering Pandas data frame\nx = data['NA_Sales']>200     # There are only 3 pokemons who have higher defense value than 200\nprint(x)\ndata[x]","f85c36a7":" #2 - Filtering pandas with logical_and\ndata[np.logical_and(data['NA_Sales']>10, data['EU_Sales']>11 )]","49a55209":"# This is also same with previous code line. Therefore we can also use '&' for filtering.\ndata[(data['NA_Sales']>2) & (data['EU_Sales']>1)]","8b8e494b":"threshold = sum(data.EU_Sales)\/len(data.EU_Sales)\ndata[\"new_EU\"] = [\"high\" if i > threshold else \"middle\" if  i>45 else \"low\" for i in data.EU_Sales]\ndata.loc[:10,[\"new_EU\",\"EU_Sales\"]] # we will learn loc more detailed later\ndata","ddb57c1d":"data.info()","a2945be0":"data.describe()","fdbcb36d":"print(data['NA_Sales'].value_counts(dropna =False))","c135d0c9":"data['EU_Sales'].value_counts(dropna =False)","2fbb0cc1":"data['EU_Sales'].describe()","48ef5f35":"data.dropna(inplace = True)  \ndata.describe()","9225477d":"data.boxplot(column='NA_Sales',by = 'EU_Sales')","228a47aa":"data_new = data.head()    # I only take 5 rows into new data\ndata_new","92c5600f":"melted = pd.melt(frame=data_new,id_vars = 'Name', value_vars= ['NA_Sales','EU_Sales'])\nmelted","8785c573":"melted.pivot(index = 'Name', columns = 'variable',values='value')","0fe21066":"data1 = data.head()\ndata2= data.tail()\nconc_data_row = pd.concat([data1,data2],axis =0,ignore_index =True) # axis = 0 : adds dataframes in row\nconc_data_row","7609090a":"data3 = data['Name'].head()\ndata1 = data['NA_Sales'].head()\ndata2= data['EU_Sales'].head()\nconc_data_col = pd.concat([data3,data1,data2],axis =1) # axis = 0 : adds dataframes in row\nconc_data_col","236260a9":"data.dtypes","ac1b3386":"data['Name'] = data['Name'].astype('category')\ndata['NA_Sales'] = data['NA_Sales'].astype('category')\ndata.dtypes","87ae71f8":"# data.info()\ndata","59ececb6":"data[\"NA_Sales\"].value_counts(dropna=False)","6f337975":"data1=data\ndata1.dropna(inplace=True)\ndata1.info()","3763f86f":"data = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')\ndata.head()","a409baf5":"year_total = data.groupby(['Year']).sum()\nsum_year_total = year_total['Global_Sales']\n#veri setindeki float olan yillarin int donusumu yapiliyor\nyil = year_total.index.astype(int)\n\nplt.figure(figsize=(12,8))\nax = sns.barplot(y = sum_year_total, x = yil)\nax.set_xlabel(xlabel='yillar', fontsize=16)\nax.set_xticklabels(labels = yil, fontsize=12, rotation=50)\nax.set_ylabel(ylabel='toplam satislar', fontsize=16)\nax.set_title(label='YILLIK BAZDA SATISLAR', fontsize=20)\nplt.show();","b85ea54e":"year_total = data.groupby(['Year']).count()\nx = year_total['Global_Sales']\ny = x.index.astype(int)\nplt.figure(figsize=(12,8))\ncolors = sns.color_palette(\"muted\")\nax = sns.barplot(y = y, x = x, orient='h', palette=colors)\nax.set_xlabel(xlabel='Sayilar', fontsize=16)\nax.set_ylabel(ylabel='Yil', fontsize=16)\nax.set_title(label='YILLIK BAZDA SATISLAR', fontsize=20)\nplt.show();","4ebff740":"table = data.pivot_table('Global_Sales', index='Genre', columns='Year', aggfunc='sum')\ntable\ngenres = table.idxmax()\nsales = table.max()\nyears = table.columns.astype(int)\ndata = pd.concat([genres, sales], axis=1)\ndata.columns = ['Genre', 'Global Sales']\n\nplt.figure(figsize=(12,8))\nax = sns.pointplot(y = 'Global Sales', x = years, hue='Genre', data=data, size=15, palette='Dark2')\nax.set_xlabel(xlabel='Yillar', fontsize=16)\nax.set_ylabel(ylabel='Dunyadaki Yillik Satislar', fontsize=16)\nax.set_title(label='Yillik Bazda Oyun Turlerinden en Yuksek Satislar Grafigi', fontsize=20)\nax.set_xticklabels(labels = years, fontsize=12, rotation=50)\nplt.show();","ec6944db":"q = table.quantile(0.90)\ndata = table[table < q]\nyears = table.columns.astype(int)\n\nplt.figure(figsize=(12,8))\nax = sns.boxplot(data=data)\nax.set_xticklabels(labels=years, fontsize=12, rotation=50)\nax.set_xlabel(xlabel='Year', fontsize=16)\nax.set_ylabel(ylabel='Revenue Per Game in $ Millions', fontsize=16)\nax.set_title(label='Distribution of Revenue Per Game by Year in $ Millions', fontsize=20)\nplt.show()\nplt.show()\n","00969bfa":"data = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')\ndata = data.dropna()\n\ndata.Year=data.Year.astype(int)\n#World rank of the top 100 video games, north america sales and europe sales.\ndf=data.loc[:99,:] # data.iloc[:100,:] -- data.head(100)\n\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\n\ntrace1=go.Scatter(\n                x=df.Rank,\n                y=df.NA_Sales,\n                mode=\"lines+markers\",\n                name=\"North America Sales\",\n                marker= dict(color = 'rgba(158, 90, 10, 0.7)'),\n                text=df.Name)\ntrace2=go.Scatter(\n                x=df.Rank,\n                y=df.EU_Sales,\n                mode=\"lines\",\n                name=\"Europe Sales\",\n                marker=dict(color = 'rgba(56, 140, 200, 0.7)'),\n                text=df.Name)\n\nedit_df=[trace1,trace2]\nlayout=dict(title=\"World rank of the top 100 video games, north america and europe sales .\",\n            xaxis=dict(title=\"World Rank\",tickwidth=5,ticklen=8,zeroline=False))\nfig=dict(data=edit_df,layout=layout)\niplot(fig)","f566c976":"#Games according to Genre\nlabels=data.Genre.value_counts().index\nexplode = [0,0,0,0,0,0,0,0,0,0,0,0]\nsizes = data.Genre.value_counts().values\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=sns.color_palette('Set2'), autopct='%1.1f%%')\nplt.title('Games According to Genre',fontsize = 17,color = 'green')","2bd42769":"# Count of Platforms\nplt.subplots(figsize = (15,8))\nsns.countplot(data.Platform)\nplt.title(\"Platform\",color = 'blue',fontsize=20)","53f55cbe":"#The genres according to the average sales\n# data preparation\ndataGenre_list=list(data.Genre.unique())\nna_sales=[]\neu_sales=[]\njp_sales=[]\nother_sales=[]\nglobal_sales=[]\nfor i in dataGenre_list:\n    val=data[data.Genre==i]\n    na_sales.append(val.NA_Sales.mean())\n    eu_sales.append(val.EU_Sales.mean())\n    jp_sales.append(val.JP_Sales.mean())\n    other_sales.append(val.Other_Sales.mean())\n    global_sales.append(val.Global_Sales.mean())\n    \ndf1=pd.DataFrame({\"Genre\":dataGenre_list,\"NA_Sales\":na_sales,\"EU_Sales\":eu_sales,\"JP_Sales\":jp_sales,\"Other_Sales\":other_sales,\"Global_Sales\":global_sales})\n\n# data visualization\ntrace1=go.Scatter(\n                x=df1.Genre,\n                y=df1.NA_Sales,\n                mode=\"lines+markers\",\n                name=\"North America Sales\",\n                marker= dict(color = 'rgba(25, 25, 255, 0.7)'))\ntrace2=go.Scatter(\n                x=df1.Genre,\n                y=df1.EU_Sales,\n                mode=\"lines\",\n                name=\"Europe Sales\",\n                marker=dict(color = 'rgba(25, 255, 25, 0.7)'))\ntrace3=go.Scatter(\n                x=df1.Genre,\n                y=df1.JP_Sales,\n                mode=\"lines+markers\",\n                name=\"Japan Sales\",\n                marker=dict(color = 'rgba(255, 25, 25, 0.7)'))\ntrace4=go.Scatter(\n                x=df1.Genre,\n                y=df1.Other_Sales,\n                mode=\"lines\",\n                name=\"Other Sales\",\n                marker=dict(color = 'rgba(25, 25, 25, 0.7)'))\ntrace5=go.Scatter(\n                x=df1.Genre,\n                y=df1.Global_Sales,\n                mode=\"lines+markers\",\n                name=\"Global Sales\",\n                marker=dict(color = 'rgba(250, 150, 0, 0.7)'))\nedit_df=[trace1,trace2,trace3,trace4,trace5]\nlayout=dict(title=\"The genres according to the average sales\",\n            xaxis=dict(title=\"  Genre of Video Games\",tickwidth=5,ticklen=8,zeroline=False))\nfig=dict(data=edit_df,layout=layout)\nplt.savefig('graph.png')\niplot(fig)","b0476b9d":"# Sales of the top 4 Video Games in 2016\ndf2016=data[data.Year==2016].iloc[:4,:]\n\nimport plotly.graph_objs as go\n\ntrace1=go.Bar(\n                x=df2016.Name,\n                y=df2016.NA_Sales,\n                name=\"NA_Sales\",\n                marker= dict(color = 'rgba(158, 90, 10, 0.7)',\n                            line=dict(color='rgb(0,0,0)',width=1.9)),\n               text=df2016.Publisher)\ntrace2=go.Bar(\n                x=df2016.Name,\n                y=df2016.EU_Sales,\n                name=\"EU_Sales\",\n                marker=dict(color = 'rgba(56, 140, 200, 0.7)',\n                           line=dict(color='rgb(0,0,0)',width=1.9)),\n                text=df2016.Publisher)\ntrace3=go.Bar(\n                x=df2016.Name,\n                y=df2016.JP_Sales,\n                name=\"JP_Sales\",\n                marker=dict(color = 'rgba(156, 30, 130, 0.7)',\n                           line=dict(color='rgb(0,0,0)',width=1.9)),\n                text=df2016.Publisher)\ntrace4=go.Bar(\n                x=df2016.Name,\n                y=df2016.Other_Sales,\n                name=\"Other_Sales\",\n                marker=dict(color = 'rgba(100, 240,50 , 0.7)',\n                           line=dict(color='rgb(0,0,0)',width=1.9)),\n                text=df2016.Publisher)\n\nedit_df=[trace1,trace2,trace3,trace4]\nlayout=go.Layout(barmode=\"group\",title='Sales of the top 4 Video Games in 2016')\nfig=dict(data=edit_df,layout=layout)\n#fig = go.Figure(data = edit_df, layout = layout)\nplt.savefig('graph.png')\niplot(fig)","ffe74d8c":"#Rates of Video Games Global Sales in 2016\ndf2016=data[data.Year==2016].iloc[:10,:]\npie_list=list(df2016.Global_Sales)\nlabels=df2016.Publisher\nfig={\n    \"data\":[\n        {\n            \"values\":pie_list,\n            \"labels\":labels,\n            \"domain\": {\"x\": [.2, 1]},\n            \"name\": \"Rates of Video Games \",\n            \"hoverinfo\":\"label+percent+name\",\n            \"hole\": .4,\n            \"type\": \"pie\"\n        },],\n    \"layout\":{\n        \"title\":\"Rates of Video Games Global Sales in 2016\",\n        \"annotations\":[\n            {\n                \"font\":{\"size\":17},\n                \"showarrow\": False,\n                \"text\": \"Video Games\",\n                \"x\": 0.75,\n                \"y\": 0.5\n            },\n        ]\n    }  \n}\niplot(fig)","b58b387c":"# Which video games is mentioned most at Genre of Action..\n# data prepararion\nfrom wordcloud import WordCloud  # word cloud library\nw_data = data[data.Genre == 'Action'].iloc[:50,:]\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(\n                        background_color='#f2f2f2',\n                        width=532,\n                        height=374\n                     ).generate(\" \".join(w_data.Name))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\nplt.show()","c58d59c5":"# World rank of the top 100 video games, japan sales and europe sales.\ndframe=data.iloc[:100,:]\ntrace0=go.Scatter(\n    x=dframe.Rank,\n    y=dframe.JP_Sales,\n    name = \"Japan Sales\",\n    marker = dict(color = 'rgba(56, 182, 32, 0.8)'),\n)\ntrace1=go.Scatter(\n    x=dframe.Rank,\n    y=dframe.EU_Sales,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"Europe Sales\",\n     marker = dict(color = 'rgba(196, 20, 92, 0.8)'),\n)\nedit_data=[trace0,trace1]\nlayout = go.Layout(\n    xaxis2=dict(\n        domain=[0.5, 0.95],\n        anchor='y2',        \n    ),\n    yaxis2=dict(\n        domain=[0.5, 0.95],\n        anchor='x2',\n    ),\n    title = ' World rank of the top 100 video games, japan sales and europe sales.'\n)\nfig = go.Figure(data=edit_data, layout=layout)\niplot(fig)","0e76a4b9":"# World rank of the top 100 video games, japan sales and europe sales.\ntrace1=go.Scatter3d(\n    x=dframe.Rank,\n    y=dframe.EU_Sales,\n    z=dframe.JP_Sales,\n    mode='markers',\n    marker=dict(\n        size=12,\n        #color='rgb(135,25,25)',\n        color=dframe.Rank,                # set color to an array\/list of desired values\n        colorscale='Viridis',             # choose a colorscale\n        opacity=0.9\n    )\n)\nedit_data=[trace1]\nlayout=go.Layout(\n     margin=dict(\n        l=1,\n        r=1,\n        b=1,\n        t=1  \n    )\n)\nfig=go.Figure(data=edit_data,layout=layout)\niplot(fig)","9a86c78a":"1-Read datas","b963a971":"----Bar Charts----","443538be":"**13\/10\/2019 **HOMEWORK****\n","566002da":"3-display of annual data entries on the horizontal barplot graph ","831a7672":"----Inset PLOTS----","ba932d04":"----World Cloud----","58197051":"----Pie Charts----","bb0e3b42":"4-Highest global sales of game genres each year","a9e9c65c":"----Count PLOT----","d9dbefdb":"2-total world sales by years and the barplot graph of these values","80af198d":"----3D Scatter Plot----","758f4179":"5-Distribution of Revenue Per Game by Year in $ Millions","8140b21f":"PLOTLY\n\n----Line Charts----"}}