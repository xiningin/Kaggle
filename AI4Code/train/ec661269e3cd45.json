{"cell_type":{"1234dc51":"code","4c387c0a":"code","7b029c18":"code","6088063a":"code","ae15a9a6":"code","5bb05d7f":"code","3185057a":"code","1ea98d09":"code","485c471c":"code","36fb4cde":"code","1a1af028":"code","0faebdbd":"code","7739cb92":"code","e94135f3":"code","5d7689e3":"markdown","f6669fe6":"markdown","b2700183":"markdown","b7a48867":"markdown","d9a77ede":"markdown","65bfd353":"markdown","ea88c318":"markdown","e42035ff":"markdown","771d2e89":"markdown","4e40118c":"markdown","a7b181aa":"markdown","b8fe8a25":"markdown","1f3fc230":"markdown","b97870eb":"markdown","46d64b3e":"markdown","bb4b400b":"markdown","6dedb46a":"markdown","1a81c908":"markdown","e886e0d0":"markdown","757dd775":"markdown","3c467b63":"markdown","3d1da67d":"markdown","dad4d305":"markdown"},"source":{"1234dc51":"import pandas as pd\nimport numpy as np\n\n# for min_max scaling\nfrom mlxtend.preprocessing import minmax_scaling\n\n# plotting modules\nimport seaborn as sns\nimport missingno\nimport matplotlib.pyplot as plt\n\nprint(\"Libraries imported !\")\n","4c387c0a":"input_file = '..\/input\/titanic.csv'\ndf = pd.read_csv(input_file)\ndf.head(10)","7b029c18":"print(f\"{len(df.index)} records in the dataframe.\\n\")\ntotal_passengers = len(df.index)\ndf.info()\n","6088063a":"df.count()","ae15a9a6":"df.isnull().sum()","5bb05d7f":"# Drop the 'Cabin' column\ndf.drop(columns=\"Cabin\", inplace=True)\n","3185057a":"# Put placeholder values in 'Age' and 'Embarked'. 999 for 'Age' and XX for 'Embarked'\n\ndf[\"Age\"].fillna(999, inplace = True)\ndf[\"Embarked\"].fillna('XX', inplace = True)\n\ndf.isnull().sum()\n\n","1ea98d09":"fig = plt.figure(figsize=(20,1))\nsns.countplot(y='Sex', data=df)\ntotal_male, total_female = df.Sex.value_counts()\nprint(df.Sex.value_counts())","485c471c":"survived = df[df.Survived == 1]\nsurvived_male, survived_female = survived.Sex.value_counts()\n\nplt.bar(2, df.Sex.value_counts()['male'], label='Male')\nplt.bar(2, survived.Sex.value_counts()['male'], label='Male Survived')\nplt.bar(1, df.Sex.value_counts()['female'], label='Female')\nplt.bar(1, survived.Sex.value_counts()['female'], label='Female Survived')\n\n\nplt.ylabel('Count')\nplt.xticks([])\nplt.title(\"Persons Survived on Titanic\")\n\nplt.legend()\nplt.show()\n","36fb4cde":"raw_data = pd.DataFrame([0, total_male, total_female, survived_male, survived_female, total_passengers])\n\nscaled_data = minmax_scaling(raw_data, columns = [0])\n\nplt.bar(2, scaled_data.iloc[1], label='Male')\nplt.bar(2, scaled_data.iloc[3], label='Male Survived')\nplt.bar(1, scaled_data.iloc[2], label='Female')\nplt.bar(1, scaled_data.iloc[4], label='Female Survived')\n\nplt.ylabel('Count')\nplt.xticks([])\nplt.title(\"Persons Survived on Titanic (scaled)\")\n\nplt.legend()\nplt.show()\n\nprint(f\"Male: {scaled_data.iloc[1] * 100}%\")\nprint(f\"Male Survived: {scaled_data.iloc[3] * 100}%\")\nprint(f\"Female: {scaled_data.iloc[2] * 100}%\")\nprint(f\"Female Survived: {scaled_data.iloc[4] * 100}%\")\n\n","1a1af028":"def plot_pie(df, index, title):\n    ax[index].pie(df, shadow=True, autopct='%1.1f%%')\n    ax[index].set_title(title)\n    ax[index].axis('equal')\n\ndef get_ports_data(df):\n    return [df.Embarked.value_counts()['S'], df.Embarked.value_counts()['C'], df.Embarked.value_counts()['Q']]\n    \nports = get_ports_data(df)\nports_sur = get_ports_data(survived)\n\nfig1, ax = plt.subplots(1, 2)\nplot_pie(ports, 0, 'Ports of Embarkment')\nplot_pie(ports_sur, 1, 'Survivors Ports of Embarkment')\nlabels = 'Southhampton', 'Cherbourg', 'Queenstown'\nax[1].legend(labels,\n          title=\"Port of Embarkment\",\n          loc=\"center left\",\n          bbox_to_anchor=(1, 0, 0.5, 1))\n\nplt.show()\nprint(df.Embarked.value_counts())\n","0faebdbd":"def plot_bar(df, index, title):\n    ax[index].bar([0,1,2], df, tick_label=['1st', '2nd', '3rd'], color=['red', 'blue', 'green'])\n    ax[index].set_title(title)\n\ndef get_classes_data(df):\n    return [df.Pclass.value_counts()[1], df.Pclass.value_counts()[2], df.Pclass.value_counts()[3]]\n    \n\nclasses = get_classes_data(df)\nclasses_surv = get_classes_data(survived)\n    \nfig1, ax = plt.subplots(1,2)\n\nplot_bar(classes, 0, \"Passenger Classes\")\nplot_bar(classes_surv, 1, \"Survivors Classes\")\n\nplt.show()\n\nprint(df.Pclass.value_counts())","7739cb92":"def get_scaled_data(df):\n    raw_classes = pd.Series([0, df.Pclass.value_counts()[1], df.Pclass.value_counts()[2], df.Pclass.value_counts()[3], total_passengers])\n    scaled_classes = minmax_scaling(raw_classes, columns = [0])\n    scaled_classes_flat = [float(scaled_classes[1]), float(scaled_classes[2]), float(scaled_classes[3]), float(scaled_classes[4])]\n    return scaled_classes_flat\n    \ndef plot_bar_s(df, index, title):\n    ax2[index].bar([0,1,2,3], df, tick_label=['1st', '2nd', '3rd', ''], color=['red', 'blue', 'green', 'white'])\n    ax2[index].set_title(title)\n    \nclasses_all = get_scaled_data(df)\nclasses_surv = get_scaled_data(survived)\n\nfig1, ax2 = plt.subplots(1,2)\nplot_bar_s(classes_all, 0, \"Passenger Classes\")\nplot_bar_s(classes_surv, 1, \"Survivors Classes\")\nplt.show()\n\n\n","e94135f3":"def create_table(dfr):\n    \n    new_table = pd.DataFrame(0, columns=['1st', '2nd', '3rd', 'Total'], index=['Southhampton', 'Cherbourg', 'Queenstown', 'Total'])\n    for pclass in ['1st', '2nd', '3rd']:\n        for port in ['Southhampton', 'Cherbourg', 'Queenstown']:\n            new_table[pclass][port] = dfr.PassengerId[df.Embarked == port[0]][dfr.Pclass == int(pclass[0])].count()\n            new_table['Total'][port]  += new_table[pclass][port]\n            new_table[pclass]['Total'] += new_table[pclass][port]\n            new_table['Total']['Total'] += new_table[pclass][port]\n    return new_table\n\ntotal_table = create_table(df)\nsurv_table = create_table(survived)\n\nsurv_rate_table = pd.DataFrame(0, columns=['1st', '2nd', '3rd', 'Total'], index=['Southhampton', 'Cherbourg', 'Queenstown', 'Total'])\nfor pclass in ['1st', '2nd', '3rd', 'Total']:\n    for port in ['Southhampton', 'Cherbourg', 'Queenstown', 'Total']:\n        surv_rate_table[pclass][port] = (surv_table[pclass][port] \/ total_table[pclass][port]) * 100\n\nprint(\"Total Passengers\")\nprint(total_table)\nprint(\"\\nSurviving Passengers\")\nprint(surv_table)\nprint(\"\\nSurviving Passengers %\")\nprint(surv_rate_table)","5d7689e3":"### Import the data from the file into a dataframe and check if it is ok","f6669fe6":"### Males and Females","b2700183":"### Passenger Classes (Scaled)","b7a48867":"### Import the libraries that will be used during this EDA","d9a77ede":"#### From this we can see that there could be some missing data, let's see what is missing","65bfd353":"### The data looks clean now. Let's see what we can derive from the data.","ea88c318":"### Let's have a look at the data scaled to total passengers","e42035ff":"##### We can see that the total passenger and survivers ports of embarkement are roughly in proportion with a slightly better survival rate for Cherbourg passengers","771d2e89":"The import is good. Let's see what the dataframe looks like and how many records we have.","4e40118c":"# Task 15 - Exploratory Data Analysis on Titanic Passenger List Data Set","a7b181aa":"##### From the scaled data we can see that survival between men and woman were more or less in the same proportion. Slightly more than a 3rd for each.","b8fe8a25":"### Classes vs Ports of Embarkment","1f3fc230":"### Passenger Classes","b97870eb":"#### From the above we can see we are missing 77% of the cabin column and 20% of the age column. Two embarked records are missing as well","46d64b3e":"At first glance it seems that being female would give the best chance of survival, although if we scale the data, woman and men proportionally had the same survival rate accross classes and ports. Being female would give a better chance of getting on a lifeboat though.\n\nBeing 1st class would give a good chance of survival at 62%, while 2nd class and from Queenstown would be slightly better at 66%. The best survival chance would however be for a 1st class passenger from Cherbourg at 69%.\n\nWhatever you do, don't travel 3rd class from Southhampton, more than 80% of these passenger died.","bb4b400b":"### Ports of Embarkment","6dedb46a":"Use the Titanic dataset provided and go wild with your analysis. Provide an\nin-depth EDA on the data set be creative. Create a jupyter notebook called\ntitanic.ipynb and DO the analysis and storylines and descriptions on the notebook.\n","1a81c908":"##### Here we can see that the majority of survivors were first class. This is probably due to the social norm that first class passengers \"are more important\" and should therefore be saved first","e886e0d0":"## Conclusion:","757dd775":"##### We see 74% of females survived and 19% of males survived. This is most likely due to the moral tendency of loading woman and children onto lifeboats before men.\u00b6","3c467b63":"If we drop the records with missing cabin or age data, we will lose a substantial amount of the data. 'Cabin' will not be able to provide much usable information, so we can drop the column. We can possibly impute data for 'Age' but only after some analysis has been done on the data to which passengers have missing ages and what relationships we can determine to other records. The two missing 'Embarked' records will simply be excluded from any computations as it only represents 0.2% of the passenger population.","3d1da67d":"From this we see 65% of passengers were male, 35% were female.","dad4d305":"#### How many Survived"}}