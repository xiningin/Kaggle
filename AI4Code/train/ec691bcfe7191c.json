{"cell_type":{"0db1eef6":"code","8ab97816":"code","357d360d":"code","1acc8e02":"code","2f1084cf":"code","3528428c":"code","5a043024":"code","ce3e0572":"code","91e68cf8":"code","822a1ea2":"code","afe4615f":"code","3e30a1f4":"code","ff3f7e60":"code","d1d097de":"code","7ca93107":"code","3a02db11":"code","15e13324":"markdown","670a847e":"markdown","07cc2367":"markdown"},"source":{"0db1eef6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom fbprophet import Prophet\nimport matplotlib.pyplot as plt","8ab97816":"data = pd.read_csv('..\/input\/tesla-stock-data-from-2010-to-2020\/TSLA.csv')\ndata.head()","357d360d":"data['Date'] = pd.DatetimeIndex(data['Date'])","1acc8e02":"plt.figure(figsize=(15, 12))\nplt.plot(data['Date'], data['Volume'])","2f1084cf":"plt.figure(figsize=(10, 8), constrained_layout=True)\nc = ['green', 'red']\ny = ['High', 'Low']\nl = 2.0\nfor j, c in zip(y, c):\n  plt.plot(data['Date'], data[j], color=c, linewidth=l, label=f'{j} stock')\n  plt.title('Tesla Stock')\n  plt.xlabel('Date')\n  plt.ylabel('stock_value')\n  plt.legend()\n  l -=0.5\n\nplt.show()","3528428c":"data2 = data[['High', 'Low']]\ndata2.head()","5a043024":"data = pd.read_csv('\/kaggle\/input\/gamestop-historical-stock-prices\/GME_stock.csv')\ndata.head()","ce3e0572":"data.isna().any()","91e68cf8":"import matplotlib.pyplot as plt\nimport datetime\n\ndata = pd.read_csv('\/kaggle\/input\/apple-aapl-historical-stock-data\/HistoricalQuotes.csv')\ndata.head()","822a1ea2":"data.isna().any()","afe4615f":"data.info()","3e30a1f4":"data = data.rename(columns={' Close\/Last':'Close', ' Volume':'Volume', ' Open': 'Open', ' High':'High', ' Low':'Low'})\ndata['Close'] = data['Close'].str.replace('$', '').astype('float')\ndata['Open'] = data['Open'].str.replace('$', '').astype('float')\ndata['High'] = data['High'].str.replace('$', '').astype('float')\ndata['Low'] = data['Low'].str.replace('$', '').astype('float')\ndata.head()","ff3f7e60":"data['Open'].plot(figsize=(16, 6))\ndata.rolling(100).mean()['Open'].plot()","d1d097de":"training_df = data['Open']\ntraining_df = pd.DataFrame(training_df)","7ca93107":"from sklearn.preprocessing import MinMaxScaler\nsc = MinMaxScaler(feature_range = (0,1))\ntraining_df_scaled = sc.fit_transform(training_df)","3a02db11":"X_train = []\ny_train = []\nfor i in range(60, 2477):\n    X_train.append(training_df_scaled[i-60:i, 0])\n    y_train.append(training_df_scaled[i, 0])\nX_train, y_train = np.array(X_train), np.array(y_train)\n\n\nX_train = np.reshape(X_train, (X_train.shape[0], X_train.shape[1], 1))\nX_train","15e13324":"**2.GameStop**","670a847e":"**3.Apple**","07cc2367":"**1.Tesla**"}}