{"cell_type":{"846b3a50":"code","5eafe224":"code","fd145cad":"code","51e6ff1c":"code","38f1d87d":"code","ed66eb39":"code","9dc524e5":"code","a1692d20":"code","03937034":"code","17c5e3f7":"code","0585de6e":"code","038ddc0d":"code","7e6ae72d":"code","22dccfa4":"code","91295c60":"code","41c85fe1":"code","a18ebe17":"code","96cfa280":"code","a21b30eb":"code","55f306cb":"code","e0c78174":"code","d79f7e10":"code","026eec87":"code","77294474":"code","8f9dcd91":"code","65d7bd21":"code","ac0a8a36":"code","70fde3ef":"code","6807f5b6":"code","51f7d57a":"code","91d72ecf":"code","ff45a5d5":"code","e2e43a17":"code","fd2df162":"code","16414881":"code","cfbdb29d":"code","2a565296":"code","095f5104":"code","c982a90c":"code","54dc59d8":"code","b72c1d57":"code","6b4cc807":"code","6a6fb5d2":"code","1315af10":"code","fe520db7":"code","0f491048":"code","26fe8acc":"code","89f2f049":"code","d419c178":"code","f4912b24":"code","0f43863b":"code","f4d8c29b":"code","530afc03":"code","3466ed98":"code","2912dfbb":"code","d5021198":"code","6e5ca006":"code","e1dff54e":"code","a6165fe5":"code","32007c8b":"code","d1be3c4b":"code","1ce97bba":"code","818ebc5d":"code","458557fc":"code","5cbe7eb6":"code","abfea01a":"code","45143ab1":"code","3a811f65":"code","f4e7e160":"code","655343f4":"code","4b151842":"code","37d53426":"code","08f09d16":"code","fbc6a5dc":"code","ae08d35c":"code","60fb3ba1":"code","fcfca729":"code","da85234f":"code","fc624aa4":"code","a8031bbb":"code","061d8187":"code","01edfb59":"code","289cc718":"code","1623f553":"code","0cafa39a":"code","e0dad7c8":"code","75d24ab8":"code","a63d7cdc":"code","23f9a05a":"code","01330b56":"code","2003b72a":"code","89d5c3ea":"code","01efde70":"code","288c5e12":"code","3972a613":"code","42b404f8":"code","fe7d7e5d":"code","fcc4b152":"code","ae31784d":"code","80691a6c":"code","9817f121":"code","05ce824c":"code","5bb2df4f":"code","54e7977b":"code","20ec92bd":"code","a0fc04c1":"code","66df58eb":"code","a329343e":"code","02163a65":"code","32d6f9fe":"code","a57c3fcb":"code","20a84c63":"code","25f676dc":"code","5ccd432a":"code","b7298df2":"code","8b604f74":"code","ed585775":"code","60ea8121":"code","1f4c5514":"markdown","fe4a685e":"markdown","02b6559e":"markdown","0c2b2611":"markdown","e350d372":"markdown","e8862b9c":"markdown","472a8e89":"markdown","c346339f":"markdown","ce15c383":"markdown","dff1c595":"markdown","91d06dfc":"markdown","49a8d7a1":"markdown","c5dfd408":"markdown","6b418478":"markdown","25345a9e":"markdown","f67b2137":"markdown","e8cdd600":"markdown","940bd7ab":"markdown","ae126957":"markdown","a7f275ee":"markdown","42689c28":"markdown","0440deb3":"markdown","9627a9e8":"markdown","3a69876e":"markdown","2aba8132":"markdown","ad7a5221":"markdown","20b43797":"markdown","80e01c33":"markdown","053618fc":"markdown","8d5b2439":"markdown","e0a1e67a":"markdown","2e6f2be4":"markdown","09f6472d":"markdown","8b3a592a":"markdown","0d602cc5":"markdown","1ba9d810":"markdown","baf2a8a7":"markdown","88c78790":"markdown","cd1944d8":"markdown","436162bd":"markdown","6be277bb":"markdown"},"source":{"846b3a50":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('seaborn')\nsns.set(font_scale=2.5) # matplotlib\uc758 \uae30\ubcf8 scheme \ub9d0\uace0 seaborn scheme\uc744 \uc138\ud305\ud558\uace0, \uc77c\uc77c\uc774 graph\uc758 font size\ub97c \uc9c0\uc815\ud560 \ud544\uc694 \uc5c6\uc774 seaborn\uc758 font_scale\uc744 \uc0ac\uc6a9\ud558\uba74 \ud3b8\ud568\n\nimport missingno as msno # \uacb0\uce21\uce58 \uc2dc\uac01\ud654\n\n# ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# notebook\uc744 \uc2e4\ud589\ud55c \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ubc14\ub85c \uadf8\ub9bc\uc744 \ubcfc \uc218 \uc788\uac8c \ud574\uc90c\n%matplotlib inline","5eafe224":"df_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')","fd145cad":"df_train.head()","51e6ff1c":"# \uac04\ub2e8\ud55c \ud1b5\uacc4\uc801 \uc218\uce58\ndf_train.describe()","38f1d87d":"df_test.describe()","ed66eb39":"for col in df_train.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100 * (df_train[col].isnull().sum() \/ df_train[col].shape[0]))\n    print(msg)","9dc524e5":"for col in df_test.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100 * (df_test[col].isnull().sum() \/ df_test[col].shape[0]))\n    print(msg)","a1692d20":"msno.matrix(df=df_train.iloc[:, :], figsize=(8, 8), color=(0.8, 0.5, 0.2)) \n# iloc: index location\n# \ube48\uce78\uc774 null \uac12","03937034":"msno.bar(df=df_train.iloc[:, :], figsize=(8, 8), color=(0.8, 0.5, 0.2)) ","17c5e3f7":"msno.bar(df=df_test.iloc[:, :], figsize=(8, 8), color=(0.8, 0.5, 0.2))","0585de6e":"f, ax = plt.subplots(1, 2, figsize=(18, 8))\n\ndf_train['Survived'].value_counts().plot.pie(explode=[0, 0.1], autopct='%1.1f%%', ax=ax[0], shadow=True)\nax[0].set_title('Pie plot - Survived')\nax[0].set_ylabel('')\nsns.countplot('Survived', data=df_train, ax=ax[1])\nax[1].set_title('Count plot - Survived')\nplt.show()","038ddc0d":"df_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).count()","7e6ae72d":"df_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).sum()","22dccfa4":"pd.crosstab(df_train['Pclass'], df_train['Survived'], margins=True).style.background_gradient(cmap='summer_r')","91295c60":"df_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar()\n# as_index = False\uc5ec\uc57c plot 2\uac1c \ub9cc\ub4e6","41c85fe1":"y_position = 1.02\nf, ax = plt.subplots(1, 2, figsize=(18, 8))\ndf_train['Pclass'].value_counts().plot.bar(color=['#CD7F32', '#FFDF00', '#D3D3D3'], ax=ax[0])\nax[0].set_title('Number of passengers By Pclass', y=y_position)\nax[0].set_ylabel('Count')\nsns.countplot('Pclass', hue='Survived', data=df_train, ax=ax[1]) #count \uba3c\uc800 \uadf8\ub9ac\uace0, hue \uc0c9\uc744 \ub098\ub220\uc11c \uc0dd\uc874\/\uc0ac\ub9dd \ubcf4\uc5ec\uc90c\nax[1].set_title('Pclass: Survived vs Dead', y=y_position)\nplt.show() # class\uac00 \ub192\uc744\uc218\ub85d \uc0dd\uc874 \ub192\uc74c -> \uacb0\uc815\ud2b8\ub9ac \ub4f1 \uc2e4\uc81c \ubaa8\ub378\uc5d0\uc11c \uace0\ub824\ud560 \uc218 \uc788\uc74c","a18ebe17":"f, ax = plt.subplots(1, 2, figsize=(18, 8))\ndf_train[['Sex', 'Survived']].groupby(['Sex'], as_index=True).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('Sex: Survived vs Dead')\nplt.show()","96cfa280":"df_train[['Sex', 'Survived']].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)","a21b30eb":"pd.crosstab(df_train['Sex'], df_train['Survived'], margins=True).style.background_gradient(cmap='summer_r')","55f306cb":"sns.factorplot('Pclass', 'Survived', hue='Sex', data=df_train, size=6, aspect=1.5)","e0c78174":"sns.factorplot(x='Sex', y='Survived', col='Pclass', data=df_train, satureation=5, size=9, aspect=1)","d79f7e10":"print('\uc81c\uc77c \ub098\uc774 \ub9ce\uc740 \ud0d1\uc2b9\uac1d : {:.1f} Years'.format(df_train['Age'].max()))\nprint('\uc81c\uc77c \uc5b4\ub9b0 \ud0d1\uc2b9\uac1d : {:.1f} Years'.format(df_train['Age'].min()))\nprint('\ud0d1\uc2b9\uac1d \ud3c9\uade0 \ub098\uc774 : {:.1f} Years'.format(df_train['Age'].mean()))","026eec87":"fig, ax = plt.subplots(1, 1, figsize=(9,5))\n# KDE = \ucee4\ub110\ubc00\ub3c4\ucd94\uc815, \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc744 \ubd80\ub4dc\ub7fd\uac8c \ubcf4\uc5ec\uc90c, \uc8fc\ub85c \uac00\uc6b0\uc2dc\uc548 \ud568\uc218 \uc0ac\uc6a9\nsns.kdeplot(df_train[df_train['Survived'] == 1]['Age'], ax=ax)\nsns.kdeplot(df_train[df_train['Survived'] == 0]['Age'], ax=ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.show()\n# \ub098\uc774\uac00 \uc5b4\ub9b4\uc218\ub85d \uc0dd\uc874\uc728 \ub192\uc544\uc9d0","77294474":"# f = plt.figure(figsize=(10,10))\n# f, ax = plt.subplots(1, 1, figsize=(5,5))\nplt.figure(figsize=(5,5))\na = np.arange(100)\nb = np.sin(a)\n\nplt.plot(b)","8f9dcd91":"# Age distribution withing classes\nplt.figure(figsize=(8, 6))\ndf_train['Age'][df_train['Pclass'] == 1].plot(kind='kde') # hist\uba74 \uacb9\uccd0\uc9c4 \uac8c \uc548 \ubcf4\uc774\ub294\ub370 kde\ub294 \ubcf4\uc784\ndf_train['Age'][df_train['Pclass'] == 2].plot(kind='kde')\ndf_train['Age'][df_train['Pclass'] == 3].plot(kind='kde')\n\nplt.xlabel('Age')\nplt.title('Age Distribution within classes')\nplt.legend(['1st Class', '2nd Class', '3rd Class'])","65d7bd21":"fig, ax = plt.subplots(1, 1, figsize=(9,5))\nsns.kdeplot(df_train[((df_train['Survived'] == 0) & (df_train['Pclass'] == 1))]['Age'], ax=ax)\nsns.kdeplot(df_train[((df_train['Survived'] == 1) & (df_train['Pclass'] == 1))]['Age'], ax=ax)\nplt.legend(['Survived == 0', 'Survived == 1'])\nplt.title('1st class')\nplt.show()","ac0a8a36":"fig, ax = plt.subplots(1, 1, figsize=(9,5))\nsns.kdeplot(df_train[((df_train['Survived'] == 0) & (df_train['Pclass'] == 2))]['Age'], ax=ax)\nsns.kdeplot(df_train[((df_train['Survived'] == 1) & (df_train['Pclass'] == 2))]['Age'], ax=ax)\nplt.legend(['Survived == 0', 'Survived == 1'])\nplt.title('2nd class')\nplt.show()","70fde3ef":"fig, ax = plt.subplots(1, 1, figsize=(9,5))\nsns.kdeplot(df_train[((df_train['Survived'] == 0) & (df_train['Pclass'] == 3))]['Age'], ax=ax)\nsns.kdeplot(df_train[((df_train['Survived'] == 1) & (df_train['Pclass'] == 3))]['Age'], ax=ax)\nplt.legend(['Survived == 0', 'Survived == 1'])\nplt.title('3rd class')\nplt.show()","6807f5b6":"plt.figure(figsize=(8, 6))\ndf_train['Age'][((df_train['Pclass'] == 1) & (df_train['Survived'] == 0))].plot(kind='hist')\ndf_train['Age'][((df_train['Pclass'] == 1) & (df_train['Survived'] == 1))].plot(kind='hist')\n\nplt.xlabel('Age')\nplt.title('Age Distribution within classes')\nplt.legend(['1st Class', '2nd Class', '3rd Class'])","51f7d57a":"change_age_range_survival_ratio = []\n\nfor i in range(1, 80):\n    change_age_range_survival_ratio.append(df_train[df_train['Age'] < i]['Survived'].sum() \/ len(df_train[df_train['Age'] < i]['Survived']))","91d72ecf":"i = 10\ndf_train[df_train['Age'] < i]['Survived'].sum() \/ len(df_train[df_train['Age'] < i]['Survived'])","ff45a5d5":"plt.figure(figsize=(7,7))\nplt.plot(change_age_range_survival_ratio)\nplt.title('Survival rate change depending on range of Age', y=1.02)\nplt.ylabel('Survival rate')\nplt.xlabel('Range of Age(0~x)')\nplt.show() # \ub098\uc774\uac00 \uc5b4\ub9b4\uc218\ub85d \uc0dd\uc874\uc728 \ub192\uc74c","e2e43a17":"f, ax = plt.subplots(1, 2, figsize=(18, 8))\nsns.violinplot('Pclass', 'Age', hue='Survived', data=df_train, scale='count', split=True, ax=ax[0])\nax[0].set_title('Pclass and Age vs Survived')\nax[0].set_yticks(range(0, 110, 10))\n\nsns.violinplot('Sex', 'Age', hue='Survived', data=df_train, scale='count', split=True, ax=ax[1])\nax[1].set_title('Sex and Age vs Survived')\nax[1].set_yticks(range(0, 110, 10))\nplt.show() # feature\ub4e4 \ube44\uad50 \uac00\ub2a5","fd2df162":"f, ax = plt.subplots(1, 1, figsize=(7, 7))\ndf_train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax)","16414881":"df_train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=True).mean().sort_values(by='Survived', ascending=False)","cfbdb29d":"df_train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=True).mean().sort_index()","2a565296":"f, ax = plt.subplots(2, 2, figsize=(20, 15))\nsns.countplot('Embarked', data=df_train, ax=ax[0, 0])\nax[0, 0].set_title('(1) No. Of Passengers Boared')\n\nsns.countplot('Embarked', hue='Sex', data=df_train, ax=ax[0, 1])\nax[0, 1].set_title('(2) Male-Female split for embarked')\n\nsns.countplot('Embarked', hue='Survived', data=df_train, ax=ax[1, 0])\nax[1, 0].set_title('(3) Embarked vs Survived')\n\nsns.countplot('Embarked', hue='Pclass', data=df_train, ax=ax[1, 1])\nax[1, 1].set_title('(4) Embarked vs Pclass')\n\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nplt.show()","095f5104":"df_train['FamilySize'] = df_train['SibSp'] + df_train['Parch'] + 1 # \uc790\uc2e0\uc744 \ud3ec\ud568\ud574\uc57c \ud558\ub2c8 1\uc744 \ub354\ud568\ndf_test['FamilySize'] = df_test['SibSp'] + df_test['Parch'] + 1 # \uc790\uc2e0\uc744 \ud3ec\ud568\ud574\uc57c \ud558\ub2c8 1\uc744 \ub354\ud568","c982a90c":"print('Maximum size of Family: ', df_train['FamilySize'].max())\nprint('Minimum size of Family: ', df_train['FamilySize'].min())","54dc59d8":"f, ax = plt.subplots(1, 3, figsize=(40, 10))\nsns.countplot('FamilySize', data=df_train, ax=ax[0])\nax[0].set_title('(1) No. Of passenger Boarded', y=1.02)\n\nsns.countplot('FamilySize', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('(2) Survived countplot depending on FamilySize', y=1.02)\n\ndf_train[['FamilySize', 'Survived']].groupby(['FamilySize'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax[2])\nax[2].set_title('(3) Survived rate depending on FamilySize', y=1.02)\n\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nplt.show()","b72c1d57":"fig, ax = plt.subplots(1, 1, figsize=(8, 8))\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness: {:.2f}'.format(df_train['Fare'].skew()), ax=ax) # Skewness: \uc65c\ub3c4\ng = g.legend(loc='best')","6b4cc807":"df_test.loc[df_test.Fare.isnull(), 'Fare'] = df_test['Fare'].mean() # testset\uc5d0 \uc788\ub294 nan value\ub97c \ud3c9\uade0\uac12\uc73c\ub85c \uce58\ud658\ud568","6a6fb5d2":"df_train['Fare'] = df_train['Fare'].map(lambda i: np.log(i) if i>0 else 0)\ndf_test['Fare'] = df_test['Fare'].map(lambda i: np.log(i) if i > 0 else 0)","1315af10":"fig, ax = plt.subplots(1, 1, figsize=(8, 8))\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness: {:.2f}'.format(df_train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')","fe520db7":"df_train.head()","0f491048":"df_train['Ticket'].value_counts()","26fe8acc":"df_train['Age'].isnull().sum()","89f2f049":"# df_train.Name\ndf_train['Initial'] = df_train['Name'].str.extract('([A-Za-z]+)\\.') # Let's extract the Salutations\ndf_test['Initial'] = df_train['Name'].str.extract('([A-Za-z]+)\\.') # Let's extract the Salutations","d419c178":"df_train.head()","f4912b24":"pd.crosstab(df_train['Initial'], df_train['Sex']).T.style.background_gradient(cmap='summer_r') # Checking the Initials with the Sex","0f43863b":"df_train['Initial'].replace(['Mlle', 'Mme', 'Ms', 'Dr', 'Major', 'Lady', 'Countess', 'Jonkheer', 'Col', 'Rev', 'Capt', 'Sir', 'Don', 'Dona'],\n                           ['Miss', 'Miss', 'Miss', 'Mr', 'Mr', 'Mrs', 'Mrs', 'Other', 'Other', 'Other', 'Mr', 'Mr', 'Mr', 'Mr'], inplace=True)\n\ndf_test['Initial'].replace(['Mlle', 'Mme', 'Ms', 'Dr', 'Major', 'Lady', 'Countess', 'Jonkheer', 'Col', 'Rev', 'Capt', 'Sir', 'Don', 'Dona'],\n                           ['Miss', 'Miss', 'Miss', 'Mr', 'Mr', 'Mrs', 'Mrs', 'Other', 'Other', 'Other', 'Mr', 'Mr', 'Mr', 'Mr'], inplace=True)","f4d8c29b":"df_train.groupby('Initial').mean()","530afc03":"df_train.groupby('Initial')['Survived'].mean().plot.bar()","3466ed98":"df_all = pd.concat([df_test, df_test])","2912dfbb":"df_all.reset_index(drop=True)","d5021198":"df_all.groupby('Initial').mean()","6e5ca006":"df_train.groupby('Initial').mean()","e1dff54e":"df_train.loc[1, :] # [\ud589, \uc5f4]","a6165fe5":"df_train.loc[df_train['Survived'] == 1]","32007c8b":"df_train.loc[(df_train['Age'].isnull()) & (df_train['Initial'] == 'Mr'), 'Age'] = 33\ndf_train.loc[(df_train['Age'].isnull()) & (df_train.Initial == 'Mrs'), 'Age'] = 36\ndf_train.loc[(df_train['Age'].isnull()) & (df_train.Initial == 'Master'), 'Age'] = 5\ndf_train.loc[(df_train['Age'].isnull()) & (df_train.Initial == 'Miss'), 'Age'] = 22\ndf_train.loc[(df_train['Age'].isnull()) & (df_train.Initial == 'Other'), 'Age'] = 46\n\ndf_test.loc[(df_test['Age'].isnull()) & (df_test['Initial'] == 'Mr'), 'Age'] = 33\ndf_test.loc[(df_test['Age'].isnull()) & (df_test.Initial == 'Mrs'), 'Age'] = 36\ndf_test.loc[(df_test['Age'].isnull()) & (df_test.Initial == 'Master'), 'Age'] = 5\ndf_test.loc[(df_test['Age'].isnull()) & (df_test.Initial == 'Miss'), 'Age'] = 22\ndf_test.loc[(df_test['Age'].isnull()) & (df_test.Initial == 'Other'), 'Age'] = 46","d1be3c4b":"df_test['Age'].isnull().sum()","1ce97bba":"df_train['Embarked'].isnull().sum()","818ebc5d":"df_train.shape","458557fc":"print('Embarked has', sum(df_train['Embarked'].isnull()), 'Null values')","5cbe7eb6":"df_train['Embarked'].fillna('S', inplace=True)","abfea01a":"df_train['Embarked'].isnull().sum()","45143ab1":"df_train['Age_cat'] = 0","3a811f65":"df_train.head()","f4e7e160":"df_train.loc[df_train['Age'] < 10, 'Age_cat'] = 0\ndf_train.loc[(10 <= df_train['Age']) & (df_train['Age'] < 20), 'Age_cat'] = 1\ndf_train.loc[(20 <= df_train['Age']) & (df_train['Age'] < 30), 'Age_cat'] = 2\ndf_train.loc[(30 <= df_train['Age']) & (df_train['Age'] < 40), 'Age_cat'] = 3\ndf_train.loc[(40 <= df_train['Age']) & (df_train['Age'] < 50), 'Age_cat'] = 4\ndf_train.loc[(50 <= df_train['Age']) & (df_train['Age'] < 60), 'Age_cat'] = 5\ndf_train.loc[(60 <= df_train['Age']) & (df_train['Age'] < 70), 'Age_cat'] = 6\ndf_train.loc[(70 <= df_train['Age']), 'Age_cat'] = 7","655343f4":"df_test.loc[df_train['Age'] < 10, 'Age_cat'] = 0\ndf_test.loc[(10 <= df_test['Age']) & (df_test['Age'] < 20), 'Age_cat'] = 1\ndf_test.loc[(20 <= df_test['Age']) & (df_test['Age'] < 30), 'Age_cat'] = 2\ndf_test.loc[(30 <= df_test['Age']) & (df_test['Age'] < 40), 'Age_cat'] = 3\ndf_test.loc[(40 <= df_test['Age']) & (df_test['Age'] < 50), 'Age_cat'] = 4\ndf_test.loc[(50 <= df_test['Age']) & (df_test['Age'] < 60), 'Age_cat'] = 5\ndf_test.loc[(60 <= df_test['Age']) & (df_test['Age'] < 70), 'Age_cat'] = 6\ndf_test.loc[(70 <= df_test['Age']), 'Age_cat'] = 7","4b151842":"df_train.head()","37d53426":"def category_age(x):\n    if x < 10:\n        return 0\n    elif x < 20:\n        return 1\n    elif x < 30:\n        return 2\n    elif x < 40:\n        return 3\n    elif x < 50:\n        return 4\n    elif x < 60:\n        return 5\n    elif x < 70:\n        return 6\n    else:\n        return 7","08f09d16":"df_train['Age_cat_2'] = df_train['Age'].apply(category_age)","fbc6a5dc":"print('1\ubc88 \ubc29\ubc95, 2\ubc88 \ubc29\ubc95 \ub458 \ub2e4 \uac19\uc740 \uacb0\uacfc\ub97c \ub0b4\uba74 True \uc918\uc57c \ud568 -> ', (df_train['Age_cat'] == df_train['Age_cat_2']).all())","ae08d35c":"df_train.drop(['Age_cat_2'], axis=1, inplace=True)","60fb3ba1":"df_train.Initial.unique()","fcfca729":"df_train['Initial'] = df_train['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})\ndf_test['Initial'] = df_test['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})","da85234f":"df_train.Embarked.unique()","fc624aa4":"df_train['Embarked'].value_counts()","a8031bbb":"df_train['Embarked'] = df_train['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})\ndf_test['Embarked'] = df_test['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})","061d8187":"df_train.head()","01edfb59":"df_train.Embarked.isnull().any() # true\uac00 \ud558\ub098\ub77c\ub3c4 \uc788\ub294\uc9c0 -> false\uba74 null\uac12 \uc5c6\uc74c","289cc718":"df_train['Sex'].unique()","1623f553":"df_train['Sex'] = df_train['Sex'].map({'female': 0, 'male': 1})\ndf_test['Sex'] = df_test['Sex'].map({'female': 0, 'male': 1})","0cafa39a":"heatmap_data = df_train[['Survived', 'Pclass', 'Sex', 'Fare', 'Embarked', 'FamilySize', 'Initial', 'Age_cat']]","e0dad7c8":"colormap = plt.cm.RdBu\nplt.figure(figsize=(14, 12))\nplt.title('Pearson Correlation of Features', y=1.05, size=15)\nsns.heatmap(heatmap_data.astype(float).corr(), linewidths=0.1, vmax=1.0,\n           square=True, cmap=colormap, linecolor='white', annot=True, annot_kws={'size': 16}, fmt='.2f')\n\ndel heatmap_data","75d24ab8":"df_train = pd.get_dummies(df_train, columns=['Initial'], prefix='Initial')\ndf_test = pd.get_dummies(df_test, columns=['Initial'], prefix='Initial')","a63d7cdc":"df_train.head()","23f9a05a":"df_train = pd.get_dummies(df_train, columns=['Embarked'], prefix='Embarked')\ndf_test = pd.get_dummies(df_test, columns=['Embarked'], prefix='Embarked')","01330b56":"df_train.drop(['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)\ndf_test.drop(['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)","2003b72a":"df_train.drop(['Age'], axis=1, inplace=True)\ndf_test.drop(['Age'], axis=1, inplace=True)","89d5c3ea":"df_train.head()","01efde70":"df_test.head()","288c5e12":"# importing all the required ML packages\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics # \ubaa8\ub378\uc758 \ud3c9\uac00\ub97c \uc704\ud574\uc11c \uc500\nfrom sklearn.model_selection import train_test_split # traning set\uc744 \uc27d\uac8c \ub098\ub220\uc8fc\ub294 \ud568\uc218","3972a613":"X_train = df_train.drop('Survived', axis=1).values\ntarget_label = df_train['Survived'].values\nX_test = df_test.values","42b404f8":"df_train.shape","fe7d7e5d":"# train set\uc744 train set\uacfc valid set\uc73c\ub85c \ub098\ub214\nX_tr, X_vld, y_tr, y_vld = train_test_split(X_train, target_label, test_size=0.3, random_state=2018) # y_tr\uc5d0 \ubaa9\uc801\uc774 \ub418\ub294 label\uc744 \uc8fc\uba74 \uc9c0\ub3c4\ud559\uc2b5, \uc548 \uc8fc\uba74 \ube44\uc9c0\ub3c4\ud559\uc2b5","fcc4b152":"X_tr.shape","ae31784d":"model = RandomForestClassifier()\nmodel.fit(X_tr, y_tr)","80691a6c":"pd.DataFrame(X_vld)","9817f121":"pd.DataFrame(X_test)","05ce824c":"prediction = model.predict(X_vld)","5bb2df4f":"prediction","54e7977b":"print('\ucd1d {}\uba85 \uc911 {:.2f}% \uc815\ud655\ub3c4\ub85c \uc0dd\uc874 \ub9de\ucda4'.format(y_vld.shape[0], 100 * metrics.accuracy_score(prediction, y_vld)))","20ec92bd":"(prediction == y_vld).sum()\/ prediction.shape[0]","a0fc04c1":"model.feature_importances_","66df58eb":"df_train.head()","a329343e":"df_test.head()","02163a65":"from pandas import Series","32d6f9fe":"feature_importance = model.feature_importances_","a57c3fcb":"Series_feat_imp = Series(feature_importance, index=df_test.columns)","20a84c63":"Series_feat_imp.sort_values","25f676dc":"plt.figure(figsize=(8, 8))\nSeries_feat_imp.sort_values(ascending=True).plot.barh()\nplt.xlabel('Feature importance')\nplt.ylabel('Feature')\nplt.show()","5ccd432a":"submission = pd.read_csv('..\/input\/gender-submission\/gender_submission.csv')","b7298df2":"submission.head()","8b604f74":"X_test = np.nan_to_num(X_test)","ed585775":"prediction = model.predict(X_test)","60ea8121":"submission['Survived'] = prediction","1f4c5514":"\uc5ec\uc131\uacfc \uad00\uacc4\uc788\ub294 Miss, Mr, Mrs \uac00 \uc0dd\uc874\ub960\uc774 \ub192\uc74c","fe4a685e":"- Lady first,\n- Money brings survival?","02b6559e":"# 4.3 Feature importance","0c2b2611":"# 2.4 Age","e350d372":"# 2.3 Both Sex and Pclass","e8862b9c":"# 3.1.2 Fill Null in Embarked","472a8e89":"# 1. Dataset \ud655\uc778","c346339f":"# 2.2 Sex","ce15c383":"# 2.8 Fare","dff1c595":"# 2.6 Embarked","91d06dfc":"# 1.1 Null data check","49a8d7a1":"# 2.1 Pclass","c5dfd408":"# 3. Feature engineering","6b418478":"\ub098\uc774\uac00 \uc5b4\ub9b4 \uc218\ub85d \uc0dd\uc874\ub960\uc774 \ud655\uc2e4\ud788 \ub192\uc740\uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\ub098\uc774\uac00 \uc911\uc694\ud55c feature","25345a9e":"# 3.2 Change Age(continuous to categorical)","f67b2137":"# 2. Exploratory data analysis","e8cdd600":"1. \ub370\uc774\ud130\uc14b \ud655\uc778\n\n2. \ud0d0\uc0c9\uc801 \ub370\uc774\ud130 \ubd84\uc11d(exploratory data analysis)\n\n3. feature engineering\n\n4. model \ub9cc\ub4e4\uae30\n\n5. \ubaa8\ub378 \ud559\uc2b5 \ubc0f \uc608\uce21\n\n6. \ubaa8\ub378 \ud3c9\uac00","940bd7ab":"Pclass\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c, Sex\ub3c4 \uc608\uce21 \ubaa8\ub378\uc5d0 \uc4f0\uc77c \uc911\uc694\ud55c feature","ae126957":"Class\uac00 \ub192\uc744 \uc218\ub85d \ub098\uc774 \ub9ce\uc740 \uc0ac\ub78c\uc758 \ube44\uc911\uc774 \ucee4\uc9d0","a7f275ee":"# 3.1 Fill Null","42689c28":"Figure(1) - S\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc0ac\ub78c\uc774 \ud0d1\uc2b9\n\nFigure(2) - C\uc640 Q\ub294 \ub0a8\ub140\uc758 \ube44\uc728\uc774 \ube44\uc2b7\ud558\uace0, S\ub294 \ub0a8\uc790\uac00 \ub354 \ub9ce\uc74c\n\nFigure(3) - \uc0dd\uc874\ud655\ub960\uc774 S \uacbd\uc6b0 \ub9ce\uc774 \ub0ae\uc74c\n\nFigure(4) - C\ub294 \ud074\ub798\uc2a4\uac00 \ub192\uc740 \uc0ac\ub78c\uc774 \ub9ce\uc774 \ud0c0\uc11c \uc0dd\uc874\uc728 \ub192\uc74c. S\ub294 3rd class\uac00 \ub9ce\uc544\uc11c \uc0dd\uc874\uc728 \ub0ae\uc74c.","0440deb3":"\uc5ec\uc790\uc758 \uc0dd\uc874 \ud655\ub960\uc774 \ub354 \ub192\uc74c","9627a9e8":"# 3.5 Drop columns","3a69876e":"# 3.4 One-hot encoding on Initial and Embarked","2aba8132":"# 2.9 Cabin\n\nNaN\uc774 \ub300\ub7b5 80%\uc774\ubbc0\ub85c, \uc0dd\uc874\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc911\uc694\ud55c \uc815\ubcf4\ub97c \uc5bb\uc5b4\ub0b4\uae30\uac00 \uc27d\uc9c0 \uc54a\uc544\uc11c \ubaa8\ub378\uc5d0 \ud3ec\ud568\ud558\uc9c0 \uc54a\uc74c.","ad7a5221":"Train, Test set \uc5d0\uc11c Age(\ub458\ub2e4 \uc57d 20%), Cabin(\ub458\ub2e4 \uc57d 80%), Embarked(Train\ub9cc 0.22%) null data \uc874\uc7ac","20b43797":"Figure (1) - \uac00\uc871\ud06c\uae30 1~11. \ub300\ubd80\ubd84 1\uba85 \uadf8 \ub2e4\uc74c\uc73c\ub85c 2, 3, 4\uba85.\n\nFigure (2), (3) - \uac00\uc871\uc774 4\uba85\uc778 \uacbd\uc6b0\uac00 \uac00\uc7a5 \uc0dd\uc874\ud655\ub960\uc774 \ub192\uc74c. \uac00\uc871\uc218\uac00 \ub9ce\uc544\uc9c8\uc218\ub85d, (5, 6, 7, 8, 11) \uc0dd\uc874\ud655\ub960\uc774 \ub0ae\uc544\uc9d0. \uac00\uc871\uc218\uac00 \ub108\ubb34 \uc791\uc544\ub3c4(1), \ub108\ubb34 \ucee4\ub3c4(5, 6, 8, 11) \uc0dd\uc874 \ud655\ub960\uc774 \uc791\uc74c. 3~4\uba85 \uc120\uc5d0\uc11c \uc0dd\uc874\ud655\ub960\uc774 \ub192\uc74c","80e01c33":"# 4.2 Model generation and prediction","053618fc":"38.4 % \uc0dd\uc874","8d5b2439":"\ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c \ub098\uc774\uac00 \uc5b4\ub9b4\uc218\ub85d \uc0dd\uc874\n\n\uc5ec\uc790 \uc0dd\uc874 \ub9ce\uc74c\n\n\uc5ec\uc131\uacfc \uc544\uc774","e0a1e67a":"# 4.1 Preparation - Split dataset into train, valid, test set","2e6f2be4":"# 2.5 Pclass, Sex, Age","09f6472d":"# 3.3 Change Initial, Embarked and Sex (string to numerical)","8b3a592a":"feature: Pclass, Age, SibSp, Parch, Fare\n\n\uc608\uce21\ud558\ub824\ub294 target label: Survived","0d602cc5":"# 3.1.1 Fill Null in Age using title","1ba9d810":"\uc0dd\uc874\uc790 \uc911 \ub098\uc774\uac00 \uc5b4\ub9b0 \uacbd\uc6b0\uac00 \ub9ce\uc74c","baf2a8a7":"# 1.2 Target label \ud655\uc778","88c78790":"# 2.10 Ticket","cd1944d8":"# 4. Building machine learning model and prediction using the trained model","436162bd":"\ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c female \uc774 \uc0b4 \ud655\ub960\uc774 male \ubcf4\ub2e4 \ub192\uc74c\n\n\ub0a8\uc790, \uc5ec\uc790 \uc0c1\uad00\uc5c6\uc774 \ud074\ub798\uc2a4\uac00 \ub192\uc744 \uc218\ub85d \uc0b4 \ud655\ub960 \ub192\uc74c","6be277bb":"# 2.7 Family - SibSp(\ud615\uc81c \uc790\ub9e4) + Parch(\ubd80\ubaa8, \uc790\ub140)"}}