{"cell_type":{"af1dfa76":"code","53fcacf0":"code","543aaa44":"code","f97da3a0":"code","db10b85a":"code","d71da32a":"code","9b5cfd73":"code","934a53cc":"code","b4a363f8":"code","b5b214be":"code","59f5bf03":"code","f8931993":"code","c1c9785c":"code","7eb71d86":"code","e88047ab":"code","a6d8f5f8":"code","f95f1cdf":"code","4a434521":"code","a85109b4":"code","a01a1828":"code","5f1ef9cb":"code","b8cfe96a":"code","8dab6ea9":"code","ff4c10da":"code","11e2c44a":"code","c04922c1":"code","921e8dca":"code","6b28a9f5":"code","bfb72d8d":"code","00348762":"code","f901fe84":"code","63385d9b":"code","883fa9e5":"code","9f945951":"code","7a595144":"code","ac248768":"markdown","8bd31082":"markdown","592b0b4b":"markdown","43209c1e":"markdown","05c1bce0":"markdown","53613194":"markdown","69be5725":"markdown","ec226cd2":"markdown"},"source":{"af1dfa76":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","53fcacf0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","543aaa44":"data = pd.read_csv('\/kaggle\/input\/titanicdataset-traincsv\/train.csv')\ndata.head()","f97da3a0":"data.isnull().sum()","db10b85a":"sns.heatmap(data.isnull(),yticklabels=False,cbar=False)","d71da32a":"sns.countplot(x='Survived',data=data)","9b5cfd73":"sns.countplot(x='Survived',hue='Sex',data=data)","934a53cc":"sns.countplot(x='Survived',hue='Pclass',data=data)","b4a363f8":"data_age = data.Age.dropna()\nsns.displot(data_age,kde=False)","b5b214be":"sns.countplot(x='SibSp',data=data)","59f5bf03":"sns.displot(data['Fare'],kde=False,bins=40)","f8931993":"plt.figure(figsize=(12,7))\nsns.boxplot(x='Pclass',y='Age',data=data)","c1c9785c":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age\n        ","7eb71d86":"data['Age'] = data[['Age','Pclass']].apply(impute_age,axis=1)","e88047ab":"sns.heatmap(data.isnull(),yticklabels=False,cbar=False)","a6d8f5f8":" data.drop('Cabin',axis=1,inplace=True)","f95f1cdf":"sns.heatmap(data.isnull(),yticklabels=False,cbar=False)","4a434521":" data.columns","a85109b4":"data.info()","a01a1828":"pd.get_dummies(data['Embarked'],drop_first=True).head()","5f1ef9cb":"sex = pd.get_dummies(data['Sex'],drop_first=True)\nembark =  pd.get_dummies(data['Embarked'],drop_first=True)","b8cfe96a":"data.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)\ndata.head()","8dab6ea9":"data = pd.concat([data,sex,embark],axis=1)\ndata.head()","ff4c10da":"X = data.drop('Survived',axis=1)\nX.head()","11e2c44a":"y= data['Survived']\ny.head()","c04922c1":"from sklearn.model_selection import train_test_split","921e8dca":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.30,random_state=101)","6b28a9f5":"from sklearn.linear_model import LogisticRegression","bfb72d8d":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","00348762":"predictions = logmodel.predict(X_test)","f901fe84":"from sklearn.metrics import confusion_matrix","63385d9b":"cf = confusion_matrix(y_test,predictions)\ncf","883fa9e5":"from sklearn.metrics import accuracy_score","9f945951":"accuracy = accuracy_score(y_test,predictions)\naccuracy","7a595144":"predictions","ac248768":"**Converting data into dataframe**","8bd31082":"**Missing Data**","592b0b4b":"**Logistic Regression Model**","43209c1e":"# EDA","05c1bce0":"**Training  and Prediction**","53613194":"**Visualise Null Values**","69be5725":"  **Data Cleaning**","ec226cd2":"**Importing Required Libaries**"}}