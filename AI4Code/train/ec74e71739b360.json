{"cell_type":{"2e2f1a63":"code","0ba68987":"code","23ee4345":"code","c5f5b614":"code","a78c9363":"code","8d8ed837":"code","e31384e3":"code","1d34a3ba":"markdown","030e7005":"markdown","650c492d":"markdown","45e1ccd0":"markdown"},"source":{"2e2f1a63":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0ba68987":"df = pd.read_csv('..\/input\/christmas-quotes\/christmas_quotes.csv', delimiter=',', encoding = \"utf8\")\ndf.head()","23ee4345":"df.isnull().sum()","c5f5b614":"df[\"author\"].value_counts()","a78c9363":"df[\"tags\"].value_counts()","8d8ed837":"#Codes by Pooja Jain https:\/\/www.kaggle.com\/jainpooja\/av-guided-hackathon-predict-youtube-likes\/notebook\n\ntext_cols = ['quote', 'author', 'tags']\n\nfrom wordcloud import WordCloud, STOPWORDS\n\nwc = WordCloud(stopwords = set(list(STOPWORDS) + ['|']), random_state = 42)\nfig, axes = plt.subplots(2, 2, figsize=(20, 12))\naxes = [ax for axes_row in axes for ax in axes_row]\n\nfor i, c in enumerate(text_cols):\n  op = wc.generate(str(df[c]))\n  _ = axes[i].imshow(op)\n  _ = axes[i].set_title(c.upper(), fontsize=24)\n  _ = axes[i].axis('off')\n_ = fig.delaxes(axes[3])","e31384e3":"author = df[(df['author']=='C.S. Lewis')].reset_index(drop=True)\nauthor.head()","1d34a3ba":"#I don't know any of those authors above.  What about Peter? Saint Peter before he downvoted\/cancelled (denied) Jesus 3 times?","030e7005":"![](https:\/\/i.pinimg.com\/originals\/3d\/35\/8c\/3d358cceabc79d9fc9cc37e15610c27c.jpg)pinterest.com","650c492d":"#Merry Xmas for everyone. Happy Birthday Jesus.\nAnd happy Hannukah and Kwanza to all kagglers.","45e1ccd0":"#Always winter but never Christmas (C.S. Lewis) 239 likes? "}}