{"cell_type":{"0e1210f9":"code","cab349e7":"code","dbb3c15c":"code","e4363f81":"code","2adac6c9":"markdown","cd20b3dd":"markdown","361e4514":"markdown","01ccff97":"markdown","41505d85":"markdown","c5a76ba0":"markdown"},"source":{"0e1210f9":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd","cab349e7":"#Import Data\ndf = pd.read_csv('..\/input\/foreign-exchange-rates-per-dollar-20002019\/Foreign_Exchange_Rates.csv')\n\n#replace NaN Values with previous value\ndf = df.replace('ND', np.nan)\ndf = df.fillna(method ='pad')\n\n#select columns with the major exchange rates\ndf = df[['Time Serie', 'UNITED KINGDOM - UNITED KINGDOM POUND\/US$','EURO AREA - EURO\/US$' ,'SWITZERLAND - FRANC\/US$', 'CANADA - CANADIAN DOLLAR\/US$', 'CHINA - YUAN\/US$', 'JAPAN - YEN\/US$']]\n\n\n#change data types\ndf['Time Serie'] = pd.to_datetime(df['Time Serie'], format = '%Y-%m-%d' )\nfor i in [i for i in list(range(len(df.columns))) if i not in [0]]:\n    df.iloc[:,i] = pd.to_numeric(df.iloc[:,i])\n\n#Exponential Smoothing of the time series for a better look\nfor column in df.drop('Time Serie', axis=1):\n    df[column] = df.loc[:,column].ewm(span=30,adjust=False).mean()\n\ndf","dbb3c15c":"# Initialize the figure\nplt.figure(figsize=(19.2,10.8), facecolor = (0.900, 0.900, 0.900))\nplt.style.use('seaborn-darkgrid')\n \n# create a color palette\npalette = plt.get_cmap('Set1')\n \n# multiple line plot\nnum=0\nfor column in df.drop('Time Serie', axis=1):\n    num+=1\n \n    # Find the right spot on the plot\n    plt.subplot(2,3, num)\n \n    # plot every groups, but discreet\n    for v in df.drop('Time Serie', axis=1):\n        plt.plot(df['Time Serie'], df[v], marker='', color='grey', linewidth=0.6, alpha=0.3)\n \n    # Plot the lineplot\n    plt.plot(df['Time Serie'], df[column], marker='', color=palette(num), linewidth=2.4, alpha=0.9, label=column)\n \n    # Set the Limits\n    if df[column].max() < 2:\n        y = 2\n    else: \n        y = df[column].max() + (df[column].max() \/ 10)\n    plt.ylim(0 ,y)\n    \n    #plt.margins(0.001,0.1)\n\n    # Not ticks everywhere\n    if num in range(4) :\n        plt.tick_params(labelbottom=False)\n    if num not in [1,4] :\n        plt.tick_params(labelleft= False)\n    if num in range(4,7):\n        plt.tick_params(labelleft= True)\n    \n    # Add title\n    plt.title(column, loc='left', fontsize=12, fontweight=0, color=palette(num) )\n\n# general title\nplt.suptitle(\"Major Exchange Rates\", fontsize=50, fontweight=0, color='black', weight = 'bold', y=0.98)","e4363f81":"from IPython.display import HTML\nHTML('<iframe width=\"640\" height=\"360\" src=\"https:\/\/www.youtube.com\/embed\/-6aZEfbflMY\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>')","2adac6c9":"## Data Preparation\nI will use the exchanges rates EUR, GBP, CHF, CAD, CNY and JPY. You can try this code with every currency pair you want, it's just an example.","cd20b3dd":"# Introduction\n\n## Context\n\nExchange rates are a common indicator for both travelers to investors. While these exchange quotes can be readily obtained anywhere, it is much easier for people to gain key insights through simple chart visualisation. \n\n## Objective\n\nCreate a creative Chart with Matplotlib to show the historical change of the major exchange rates.\n\n## Importing required packages","361e4514":"![](https:\/\/www.beefmagazine.com\/sites\/beefmagazine.com\/files\/styles\/article_featured_retina\/public\/0603T1-1779A-1540x800.jpg?itok=oHbTmWLP)","01ccff97":"I hope you get some inspiration for your next Data Visualisation and an good insight in the change of the historical change of the major currencies.\n\nOn [Twitter](https:\/\/twitter.com\/chartbearx), [Reddit](https:\/\/www.reddit.com\/user\/chartbear) and [YouTube](https:\/\/www.youtube.com\/channel\/UCTlKjrqvuAKAd4jTphXaUfg?sub_confirmation=1) i share data visualisations with a wide range of topics to show you intresting data in small bites.\n\nHave a nice Day and keep visualize.","41505d85":"## Animated Linechart\nI also created an animated Plot with matplotlib's FuncAnimation ([Documentation](https:\/\/matplotlib.org\/3.1.1\/api\/_as_gen\/matplotlib.animation.FuncAnimation.html)).\nYou can check it out on YouTube or see it below. \n","c5a76ba0":"## Generate a Grid with Linecharts\nI was inspirated by: [python-graph-gallery.com](https:\/\/python-graph-gallery.com\/125-small-multiples-for-line-chart\/) "}}