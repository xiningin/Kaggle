{"cell_type":{"33147b9c":"code","51a26d88":"code","4afda8c6":"code","3b1f0f66":"code","516b70f6":"code","4a3b9bb6":"code","aa4d2edd":"code","40fea598":"code","ed5c55d7":"code","ccfe4aae":"code","689b2632":"code","209d079f":"code","1df370ae":"code","3c33d680":"code","4f3f7a80":"code","5749e57c":"code","0e281ac1":"markdown","320d779e":"markdown","76b0814e":"markdown","761d5f2d":"markdown","faae541d":"markdown","8578b860":"markdown","c2dddbc8":"markdown"},"source":{"33147b9c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","51a26d88":"data = pd.read_csv('\/kaggle\/input\/flipkart-mobile-dataset\/Flipkart Mobile - 2.csv')\ndata.head()","4afda8c6":"data.describe()","3b1f0f66":"import matplotlib.pyplot as plt\nimport seaborn as sns","516b70f6":"label = data['sales_price']\nfeature = data.drop(['sales_price'],axis=1)","4a3b9bb6":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import LabelEncoder\nli = ['brand','model','base_color','processor','screen_size']\nfor i in li:\n  feature[i] = LabelEncoder().fit_transform(feature[i])\n  ","aa4d2edd":"import seaborn as sns\nfor i in feature.columns:\n  sns.distplot(feature[i])\n  plt.show()","40fea598":"for i in feature.columns:\n  sns.boxplot(feature[i])\n  plt.show()","ed5c55d7":"def remove(data):\n  Q1 = np.percentile(data, 25, interpolation = 'midpoint')\n  \n# Third quartile (Q3)\n  Q3 = np.percentile(data, 75, interpolation = 'midpoint')\n  iqr = Q3 - Q1\n  percentile25 = data.quantile(0.25)\n  percentile75 = data.quantile(0.75)\n\n  upper_limit = percentile75 + 1.5 * iqr\n  lower_limit = percentile25 - 1.5 * iqr\n  data = np.where(\n    data > upper_limit,upper_limit,\n    np.where(\n        data < lower_limit,\n        lower_limit,\n        data\n    )\n  )\n  return data\n\n#feature[feature['discount_percent'] > upper_limit]\n#feature[feature['discount_percent'] < lower_limit]\n\n","ccfe4aae":"li = ['num_of_ratings','sales','ratings','battery_capacity','screen_size','display_size','ROM','RAM','discount_percent']\n\nfor i in li:\n  feature[i] = remove(feature[i])","689b2632":"for i in feature.columns:\n  sns.boxplot(feature[i])\n  plt.show()","209d079f":"from sklearn.model_selection import train_test_split\n\ntrainF,testF,trainL,testL = train_test_split(feature,label,random_state= 42,test_size=.2)","1df370ae":"from sklearn.ensemble import RandomForestRegressor\nmodel = RandomForestRegressor(random_state=42)\nmodel.fit(trainF,trainL)","3c33d680":"model.score(testF,testL)","4f3f7a80":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nmodel.fit(trainF,trainL)\nmodel.score(testF,testL)","5749e57c":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()\nmodel.fit(trainF,trainL)\nmodel.score(testF,testL)","0e281ac1":"Ready for train model.. \nfirst of all split our data between train and test","320d779e":"**EAST OR WEST RANDOMFOREST IS THE BEST**","76b0814e":"###visualization of data using seaborn distplot","761d5f2d":"### visualizations for outliers","faae541d":"###convert catagorize string to number","8578b860":"**Again check if there have any outliers**","c2dddbc8":"some columns contain outliers, trying to remove them"}}