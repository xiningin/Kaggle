{"cell_type":{"994703c6":"code","4a509035":"code","de053437":"code","8a22a8ac":"code","2394451a":"code","18c0d8c5":"code","dc6f823d":"code","6a25d4bd":"code","7592940a":"code","95246c27":"code","3e31a673":"code","1cf1f691":"code","6c8c9faa":"code","f5eb958f":"code","fa27bb20":"code","ff4cdd98":"code","a68dd830":"code","836ab138":"code","41d0d29d":"code","8a84f091":"code","74b47e21":"code","e24d3b35":"code","353513ef":"code","c19b1ac7":"code","d972fdb0":"code","cb9ff761":"code","a4e94317":"markdown","4d8ef1ad":"markdown","493dfb5f":"markdown","d02dff94":"markdown","d8315405":"markdown","3e0627a6":"markdown","42dbd7c0":"markdown","8e4a8188":"markdown","a2e8c8d3":"markdown"},"source":{"994703c6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4a509035":"import pandas as pd\n\ndf1 = pd.read_csv('\/kaggle\/input\/agricuture-crops-production-in-india\/produce.csv', names=['PARTICULARS','FREQUENCY','UNIT','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008','2009','2010','2011','2012','2013','2014'], header=0, sep=',\\s+', delimiter=',', encoding=\"utf-8\", skipinitialspace=True)\nproduce_df = df1.drop('FREQUENCY', axis=1)\nproduce_df","de053437":"df2 = pd.read_csv('\/kaggle\/input\/agricuture-crops-production-in-india\/datafile (3).csv')\ndf2","8a22a8ac":"#Data Dimension\nproduce_df.shape","2394451a":"#Dataframe contents\nproduce_df.head()","18c0d8c5":"#Check for missing Values\nproduce_df.isnull().sum()","dc6f823d":"#Replace missing values with Zero\nproduce_final_df = produce_df.fillna(0)\nproduce_final_df.isnull().sum()","6a25d4bd":"i=0\nproduce_final_df.columns.to_list()\n","7592940a":"#Write to CSV File\nproduce_final_df.to_csv('produce_final.csv', index=False)","95246c27":"#Read Data\ndf = pd.read_csv('produce_final.csv')","3e31a673":"#Displays The Dataframe\ndf","1cf1f691":"#If we want to see more\npd.set_option('display.max_rows', df.shape[0]+1)\ndf","6c8c9faa":"#Reverting back to the Default\npd.set_option('display.max_rows', 5)\ndf","f5eb958f":"df.dtypes","fa27bb20":"df.select_dtypes(include=['number'])","ff4cdd98":"df.select_dtypes(include=['object'])","a68dd830":"b=0\nset3 = {\"\"}\nlist2 = []\narr2 = df['PARTICULARS'].values\nwhile b < len(arr2):\n    list2 = arr2[b].split()\n    for e in list2:\n        set3.add(e)\n    b+=1\n\n# used https:\/\/pythoncircle.com\/post\/156\/list-of-indian-states-in-python-format\/\nset4={\"Andhra\",\"Tamil\",\"Nadu\",\"Uttar\",\"Uttaranchal\",\"West\",\"Orissa\",\"Arunachal\",\"Pradesh\",\"Bengal\",\"Madhya\",\"Andhra Pradesh\",\"Himachal\",\"Jammu\",\"Jharkland\",\"Kashmir\",\"Arunachal Pradesh \",\"Assam\",\"Bihar\",\"Chhattisgarh\",\"Goa\",\"Gujarat\",\"Haryana\",\"Himachal Pradesh\",\"Jammu and Kashmir\",\"Jharkhand\",\"Karnataka\",\"Kerala\",\"Madhya Pradesh\",\"Maharashtra\",\"Manipur\",\"Meghalaya\",\"Mizoram\",\"Nagaland\",\"Odisha\",\"Punjab\",\"Rajasthan\",\"Sikkim\",\"Tamil Nadu\",\"Telangana\",\"Tripura\",\"Uttar Pradesh\",\"Uttarakhand\",\"West Bengal\",\"Andaman and Nicobar Islands\",\"Chandigarh\",\"Dadra and Nagar Haveli\",\"Daman and Diu\",\"Lakshadweep\",\"National Capital Territory of Delhi\",\"Puducherry\"}\nset5 = set3.difference(set4)\n\n#Print Set as a String to avoid New lines\nstr(set3.difference(set5))","836ab138":"set6={'Small','Major','Others','Yr','Territories', 'Other', 'Plantation','Yield','Total','and','Under','Production','Coverage','Target','Nine','Irrigation','Foodgrains','Commercial','Cash','','(DC)Agricultural','5','Achievements','Agricultural','Agriculture','Area','Avg'}\nstr(set5.difference(set6))","41d0d29d":"import re\nwheat_df = df[df.stack().str.contains('^(?=.*wheat)(?=.*yield)', False, re.IGNORECASE).any(level=0)][['PARTICULARS','2005']]\nwheat_df.sort_values(by='2005', ascending=False).head(10)['PARTICULARS'].str.lstrip(\"Agricultural Production Foodgrains Wheat Yield \")\n","8a84f091":"import re\nrice_df = df[df.stack().str.contains('^(?=.*rice)(?=.*yield)', False, re.IGNORECASE).any(level=0)][['PARTICULARS','2005']]\nrice_df.sort_values(by='2005', ascending=False).head(10)['PARTICULARS'].str.lstrip(\"Agricultural Production Foodgrains Rice Yield \")\n","74b47e21":"import re\ni=0\nset1 = {\"\"}\nlist1 = []\narr = df[df.stack().str.contains('^(?=.*karnataka)', False, re.IGNORECASE).any(level=0)]['PARTICULARS'].values\nwhile i < len(arr):\n    list1 = arr[i].split()\n    for elem in list1:\n        set1.add(elem)\n    i+=1\n\nset2 = {\"Agricultural\", \"Area\", \"Foodgrains\", \"Production\", \"Volume\", \"Yield\",\"Karnataka\"}\nset1.difference(set2)","e24d3b35":"pd.set_option('display.max_rows', df.shape[0]+1)\ndf['PARTICULARS'].loc[0]\n","353513ef":"#Remove columns Not required\n#Frequency\n#Years from 1993 to 2004\nselected_columns = ['Particulars',  'Unit',' 3-2005', ' 3-2006', ' 3-2007',\n       ' 3-2008', ' 3-2009', ' 3-2010', ' 3-2011', ' 3-2012', ' 3-2013',\n       ' 3-2014'\n]\nproduce_df = produce_raw_df[selected_columns].copy()","c19b1ac7":"#Rename multiple columns\nproduce_df.rename(columns = {' 3-2005':'2005', ' 3-2006':'2006',' 3-2007':'2007', ' 3-2008':'2008',' 3-2009':'2009', ' 3-2010':'2010', ' 3-2011':'2011', ' 3-2012':'2012', ' 3-2013':'2013', ' 3-2014':'2014'}, inplace = True) \nproduce_df\n","d972fdb0":"#Yield Of Rice in Karnataka\nkar_df = produce_df[produce_df.stack().str.contains('^(?=.*karnataka)(?=.*rice)(?=.*yield)', False, re.IGNORECASE).any(level=0)]\n\n#select only years data\n#kar1_df = kar_df[['2005','2006','2007','2008','2009','2010','2011','2012','2013','2014']]\nkar_df","cb9ff761":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n#Yield Of Rice in Karnataka\nkar_df = produce_df[produce_df.stack().str.contains('^(?=.*karnataka)(?=.*rice)(?=.*yield)', False, re.IGNORECASE).any(level=0)]\n\n#select only years data\nselected_years = ['2005','2006','2007','2008','2009','2010','2011','2012','2013','2014']\n\n\ni = 0\nyield_of_rice_kar = []\nwhile i < len(selected_years):\n    yield_of_rice_kar.insert(i, kar_df[selected_years[i]].values)\n    i += 1\n\nplt.plot(selected_years, yield_of_rice_kar)\n#plt.bar(selected_years, yield_of_rice_kar);\n","a4e94317":"# Top 10 Highest Rice producing states in 2005","4d8ef1ad":"# Show specific data types in dataframe","493dfb5f":"# Questions","d02dff94":"# What are the different Crops produced in India?","d8315405":"# Which types of Foodgrains was produced in Karnataka?","3e0627a6":"**Exploratory Data Analysis**","42dbd7c0":"# Overview of data types of each columns in the dataframe","8e4a8188":"# What are the Major Agricultural States of India ?","a2e8c8d3":"# Top 10 Highest wheat producing states in 2005"}}