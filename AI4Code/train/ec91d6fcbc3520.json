{"cell_type":{"e70907d0":"code","e30eb115":"code","9e9e338a":"code","0f1cd6a2":"code","38502200":"code","b4664c2f":"code","41f097c0":"code","490ce567":"code","8266f75c":"code","05bfa450":"code","135dea50":"code","5803ebf8":"code","02cc0390":"code","4adbc092":"code","cc19b57b":"code","9890fb68":"code","765850bd":"code","7fb5c54b":"code","f2538370":"code","5f1fb13e":"code","06ce393d":"code","4b6b64aa":"code","fe807350":"code","d4ce7fb6":"code","608c39ff":"code","77c33d01":"code","825c728a":"code","507d4f69":"code","d899d115":"code","03fc5c7c":"code","63222cb7":"code","89f35cd5":"code","061504ac":"code","46bb0cc9":"code","9808b47b":"code","49bc9827":"code","2c78f412":"code","b90fc97a":"code","d9f31d69":"code","fc390b66":"code","7166700d":"code","1f17636b":"code","e44e2cb1":"code","117a7aae":"code","19f67c2a":"code","fa74ff8f":"code","d86bfdf8":"code","381ab7ad":"code","49b85c8f":"code","9afd9204":"code","ecde5c80":"code","afa93a56":"code","948159c2":"code","68d2ca2d":"code","e1ec856d":"code","c476aa99":"code","6f8c0da5":"code","c8656530":"code","35d4104f":"code","c2a7326a":"code","9485f265":"code","45392981":"code","c6b3ceea":"markdown","bfc0d353":"markdown","01cb5ef3":"markdown","7d518e5e":"markdown","5f1b18ab":"markdown","67350a43":"markdown","f6dda461":"markdown","e990e402":"markdown","32339bea":"markdown","e2db39ce":"markdown","b7992e1f":"markdown","93f4747a":"markdown","d6469934":"markdown","248823a7":"markdown","35ef82c6":"markdown","c07b012e":"markdown","afdfdb54":"markdown","815fde27":"markdown","8f65f529":"markdown","6bc666cb":"markdown","1da502dd":"markdown","d693a244":"markdown","066af169":"markdown","525bfa2a":"markdown","e0bbc758":"markdown","0ca8d257":"markdown","bd636666":"markdown","89fc6306":"markdown","f6374eb2":"markdown","9760972d":"markdown"},"source":{"e70907d0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport seaborn as sns\n","e30eb115":"df=pd.read_csv('..\/input\/loan-eligible-dataset\/loan-train.csv')","9e9e338a":"df.head()","0f1cd6a2":"print('Rejected Loan is {} % of total'.format(round(df['Loan_Status'].value_counts()['N']\/len(df['Loan_Status'])*100)))\nprint('Accepted loan  is {} % of total'.format(round(df['Loan_Status'].value_counts()['Y']\/len(df['Loan_Status'])*100)))\nx=df.Loan_Status.value_counts()\nsns.barplot(x.index,x)\nplt.gca().set_ylabel('samples')","38502200":"categorical_columns = ['Gender', 'Married', 'Dependents', 'Education', 'Self_Employed', 'Property_Area','Credit_History','Loan_Amount_Term']\nnumerical_columns = ['ApplicantIncome', 'CoapplicantIncome', 'LoanAmount']\n","b4664c2f":"fig,axes = plt.subplots(4,2,figsize=(12,15))\nfor idx,cat_col in enumerate(categorical_columns):\n    row,col = idx\/\/2,idx%2\n    sns.countplot(x=cat_col,data=df,hue='Loan_Status',ax=axes[row,col])\n\n\nplt.subplots_adjust(hspace=1)","41f097c0":"df.shape","490ce567":"df.info()","8266f75c":"df.describe()","05bfa450":"pd.crosstab(df['Credit_History'],df['Loan_Status'], margins=True)","135dea50":"df.boxplot(column='ApplicantIncome')","5803ebf8":"df['ApplicantIncome'].hist(bins=20)","02cc0390":"df['CoapplicantIncome'].hist(bins=20)\n","4adbc092":"df.boxplot(column='ApplicantIncome', by='Education')","cc19b57b":"df.boxplot(column='LoanAmount')","9890fb68":"df['LoanAmount'].hist(bins=20)","765850bd":"df['LoanAmount_log']=np.log(df['LoanAmount'])\ndf['LoanAmount_log'].hist(bins=20)","7fb5c54b":"df.isnull().sum()","f2538370":"for col in categorical_columns :\n    df[col].fillna(df[col].mode()[0],inplace=True)\n    \n","5f1fb13e":"fig,axes = plt.subplots(1,3,figsize=(17,5))\nfor idx,cat_col in enumerate(numerical_columns):\n    sns.boxplot(y=cat_col,data=df,x='Loan_Status',ax=axes[idx])\n\nprint(df[numerical_columns].describe())\nplt.subplots_adjust(hspace=1)","06ce393d":"df['LoanAmount']=df['LoanAmount'].fillna(df['LoanAmount'].mean())","4b6b64aa":"df['LoanAmount_log']=df['LoanAmount_log'].fillna(df['LoanAmount_log'].mean())","fe807350":"df.isnull().sum()","d4ce7fb6":"df['TotalIncome']=df['ApplicantIncome']+df['CoapplicantIncome']\ndf['TotalIncome_log']=np.log(df['TotalIncome'])","608c39ff":"df['TotalIncome_log'].hist(bins=20)","77c33d01":"df.head()","825c728a":"x=df.iloc[:,np.r_[1:5,9:11,13:15]].values\ny=df.iloc[:,12].values","507d4f69":"from sklearn .model_selection import train_test_split\n\n\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)","d899d115":"from sklearn.preprocessing import LabelEncoder\n\nLabelEncoder_X=LabelEncoder()","03fc5c7c":"for i in range(0,5):\n    x_train[:,i]=LabelEncoder_X.fit_transform(x_train[:,i])\n    ","63222cb7":"x_train[:,7]=LabelEncoder_X.fit_transform(x_train[:,7])","89f35cd5":"x_train","061504ac":"labelEncoder_Y=LabelEncoder()\ny_train=labelEncoder_Y.fit_transform(y_train)","46bb0cc9":"y_train","9808b47b":"for i in range(0,5):\n    x_test[:,i]=LabelEncoder_X.fit_transform(x_test[:,i])\n    ","49bc9827":"x_test[:,7]=LabelEncoder_X.fit_transform(x_test[:,7])","2c78f412":"y_test=labelEncoder_Y.fit_transform(y_test)","b90fc97a":"from sklearn.preprocessing import StandardScaler\n\nss=StandardScaler()\nx_train=ss.fit_transform(x_train)\nx_test=ss.fit_transform(x_test)","d9f31d69":"from sklearn.tree import DecisionTreeClassifier\n\ntree_clf=DecisionTreeClassifier(criterion='entropy', random_state=0)\ntree_clf.fit(x_train,y_train)","fc390b66":"x_train.shape\n","7166700d":"\nx_test.shape","1f17636b":"y_pred=tree_clf.predict(x_test)\ny_pred","e44e2cb1":"from sklearn import metrics\n\nprint(\"The accuracy of Decision Tree Classifier is : \",metrics.accuracy_score(y_pred,y_test))","117a7aae":"from sklearn.naive_bayes import GaussianNB\n\nnbc=GaussianNB()\nnbc.fit(x_train,y_train)","19f67c2a":"y_pred2=nbc.predict(x_test)","fa74ff8f":"print('The accuracy of Naive Bayes is :',metrics.accuracy_score(y_pred2,y_test))","d86bfdf8":"testdata=pd.read_csv('..\/input\/loan-eligible-dataset\/loan-test.csv')","381ab7ad":"testdata.info()","49b85c8f":"testdata.isnull().sum()","9afd9204":"testdata['Gender'].fillna(testdata['Gender'].mode()[0],inplace=True)\ntestdata['Married'].fillna(testdata['Married'].mode()[0],inplace=True)\ntestdata['Dependents'].fillna(testdata['Dependents'].mode()[0],inplace=True)\ntestdata['Self_Employed'].fillna(testdata['Self_Employed'].mode()[0],inplace=True)\ntestdata['Loan_Amount_Term'].fillna(testdata['Loan_Amount_Term'].mode()[0],inplace=True)\ntestdata['Credit_History'].fillna(testdata['Credit_History'].mode()[0],inplace=True)\ntestdata['LoanAmount']=testdata['LoanAmount'].fillna(testdata['LoanAmount'].mean())\n# testdata['LoanAmount_log']=testdata['LoanAmount_log'].fillna(testdata['LoanAmount_log'].mean())","ecde5c80":"testdata.isnull().sum()","afa93a56":"testdata.boxplot(column='LoanAmount')","948159c2":"testdata['LoanAmount_log']=np.log(testdata['LoanAmount'])","68d2ca2d":"testdata['totalIncome']=testdata['ApplicantIncome']+testdata['CoapplicantIncome']\ntestdata['TotalIncome_log']=np.log(testdata['totalIncome'])","e1ec856d":"testdata.head()","c476aa99":"test=testdata.iloc[:,np.r_[1:5,9:11,13:15]].values","6f8c0da5":"for i in range(0,5):\n    test[:,i]=LabelEncoder_X.fit_transform(test[:,i])","c8656530":"test[:,7]=LabelEncoder_X.fit_transform(test[:,7])","35d4104f":"test","c2a7326a":"test=ss.fit_transform(test)","9485f265":"pred=nbc.predict(test)","45392981":"pred","c6b3ceea":"let's see how well the prediction is ! \n\nby calculating the accuracy ","bfc0d353":"Select the data that we need into variables ","01cb5ef3":"most of our variables have outliers that needs to worked on","7d518e5e":"### Decision Tree","5f1b18ab":"Now let's move on to non categorical (numerical) variables ","67350a43":"Now Applying an algorithm on our dataset ! \n","f6dda461":"Naive Bayes Algo ","e990e402":"We can clearly see that applicants with Credit_History 1 are more eligible to get a loan more then those who have Credit_History=0","32339bea":"Data Exploration ","e2db39ce":"Define Categorical column Names from numercial columns ","b7992e1f":"Handle the null values by using the mean function ","93f4747a":"let's see how Credit_History affects Loan_Status","d6469934":"Import Test Data ","248823a7":"data looks more normalized after applying the log function ! \n\nFind Missing values ","35ef82c6":"Let's explore some variables of our dataset by visualizing them!\n","c07b012e":"Converting Categorical variables to numeric format\n","afdfdb54":"Let's see How our dataset looks","815fde27":"Now, let's see values assigned to target","8f65f529":"lots of outliers ","6bc666cb":"##### Class distribution\nlets see the class distibution for \"Yes\" Which is labeled as 'Y' and \"No\" which is labeled as \"N\" ","1da502dd":"Relation Applicants Income and their education ","d693a244":"all the textual format is converted to numerical format.\nNow, let's scale our data ","066af169":"We can see that there's no big difference, the mean income does not vary very much but cearly some of the applicants have higher incomes as compared to not Graduate ","525bfa2a":"#### Scale the dataset ","e0bbc758":"Let's try to Handle the Missing values !\n \n let's start with categorical variables, we will be using the mode*.\n \n*the mode is simply the most observed value","0ca8d257":"Use this algo to predict the values of test dataset","bd636666":"Analyze Numerical Columns:","89fc6306":"Let's normalize the LoanAmount","f6374eb2":"#### Problem Statement:\nAbout Company\nDream Housing Finance company deals in all home loans. They have presence across all urban, semi urban and rural areas. \nCustomer first apply for home loan after that company validates the customer eligibility for loan.\n\n#### Problem\n\nCompany wants to automate the loan eligibility process (real time) based on customer detail provided while filling online application form. These details are Gender, Marital Status, Education, Number of Dependents, Income, Loan Amount, Credit History and others. To automate this process, they have given a problem to identify the customers segments, those are eligible for loan amount so that they can specifically target these customers. Here they have provided a partial data set","9760972d":"Let's explore Load among variables "}}