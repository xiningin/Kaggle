{"cell_type":{"d5e83da5":"code","ff138e0d":"code","fdf7dd67":"code","4d3c8f57":"code","22238613":"code","b06b9519":"code","ef5c3934":"code","9d0bbb82":"code","fdb91530":"code","95750693":"code","581b997e":"code","99c3eef7":"code","9c3abbf7":"code","9605ba1e":"code","db464392":"code","9f44860c":"code","262662c9":"code","72442626":"code","e508b661":"code","15306f63":"code","501ef7e6":"markdown","84428f8d":"markdown","b37d5f66":"markdown","5c9a289c":"markdown","73f62c26":"markdown","749548a8":"markdown","f751453b":"markdown"},"source":{"d5e83da5":"import pandas as pd\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom sklearn.utils import shuffle\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nimport os\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ff138e0d":"heart = pd.DataFrame(pd.read_csv(\"\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\"))\nheart.head()","fdf7dd67":"heart.isnull().sum()","4d3c8f57":"heart=shuffle(heart)\nheart","22238613":"y=heart[\"DEATH_EVENT\"]\nX=heart.drop(labels=[\"DEATH_EVENT\"],axis=1)","b06b9519":"y.head()","ef5c3934":"X.head()","9d0bbb82":"scaler = StandardScaler()\nX = scaler.fit_transform(X)\nX","fdb91530":"X_train, X_test, y_train, y_test = train_test_split(X, y,\ntest_size = 0.2)","95750693":"X_train.shape, X_test.shape, y_train.shape","581b997e":"X_train.shape[1]","99c3eef7":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(12, activation = 'relu',\n input_dim = X_train.shape[1]))\nmodel.add(keras.layers.Dense(24, activation = 'relu'))\nmodel.add(keras.layers.Dense(128, activation = 'relu'))\nmodel.add(keras.layers.Dense(1, activation = 'sigmoid'))","9c3abbf7":"model.summary()","9605ba1e":"model.compile(loss = 'binary_crossentropy',\n optimizer='adam', metrics=['accuracy'])","db464392":"import datetime, os\nlogdir = os.path.join(\"log\",\n datetime.datetime.now().\nstrftime(\"%Y%m%d-%H%M%S\"))\ntensorboard_callback = tf.keras.callbacks.TensorBoard(logdir,\n histogram_freq = 1)","9f44860c":"r = model.fit(X_train, y_train, batch_size = 32, epochs = 50,\n validation_split = 0.2,\n callbacks = [tensorboard_callback])","262662c9":"test_scores = model.evaluate(X_test, y_test)\nprint('Test Loss: ', test_scores[0])\nprint('Test accuracy: ', test_scores[1] * 100)","72442626":"y_pred = (model.predict(X_test) > 0.5).astype(\"int32\")","e508b661":"y_pred","15306f63":"cf = confusion_matrix(y_test, y_pred)\ncf","501ef7e6":"Now the X data is normalized in order to make the neural network better optimized","84428f8d":"It will see the nulls in the dataset and clean data that cannot be used","b37d5f66":"To read the matrix above here is an example\n\n![image.png](attachment:image.png)","5c9a289c":"As the dataset is already clean, we would have to continue with the next part, which is to create a neural network for the prediction of heart failures, but first we will do a shuffle to mix in the dataframe.\n","73f62c26":"Now we separate the training and testing data\n","749548a8":"\n\n```\n# This is formatted as code\n```\n\n# Heart Failure Prediction\n\n---\n\n\nThe reason for this project is the prediction of heart failures from given parameters","f751453b":"Now we have to separate the prediction column from the input values"}}