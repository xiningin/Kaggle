{"cell_type":{"ac7103c5":"code","1047d066":"code","51df3832":"code","6f01c9b3":"code","e3a4d2d1":"markdown","0a8090c7":"markdown","b6af6824":"markdown","5c9717e9":"markdown","b4f96eb5":"markdown","23f204aa":"markdown","593abcfa":"markdown","ce510701":"markdown"},"source":{"ac7103c5":"# Clone GFPGAN and enter the GFPGAN folder\n!rm -rf GFPGAN\n!git clone https:\/\/github.com\/TencentARC\/GFPGAN.git\n%cd GFPGAN\n\n# Set up the environment\n!pip install basicsr\n\n# Install other depencencies\n!pip install facexlib\n!pip install -r requirements.txt\n!python setup.py develop\n!pip install realesrgan\n\n# Download the pre-trained model\n!wget https:\/\/github.com\/TencentARC\/GFPGAN\/releases\/download\/v0.2.0\/GFPGANCleanv1-NoCE-C2.pth -P experiments\/pretrained_models","1047d066":"import shutil\nimport os\nupload_folder = 'inputs\/upload'\n\nif os.path.isdir(upload_folder):\n    shutil.rmtree(upload_folder)\nos.makedirs(upload_folder, exist_ok=True)\nshutil.move('inputs\/whole_imgs\/Blake_Lively.jpg', 'inputs\/upload\/Blake_Lively.jpg')","51df3832":"!rm -rf results\n!python inference_gfpgan.py --upscale 2 --test_path inputs\/upload --save_root results --model_path experiments\/pretrained_models\/GFPGANCleanv1-NoCE-C2.pth --bg_upsampler realesrgan\n\n!ls results\/cmp","6f01c9b3":"import cv2\nimport matplotlib.pyplot as plt\ndef display(img1, img2):\n  fig = plt.figure(figsize=(25, 10))\n  ax1 = fig.add_subplot(1, 2, 1) \n  plt.title('Input image', fontsize=16)\n  ax1.axis('off')\n  ax2 = fig.add_subplot(1, 2, 2)\n  plt.title('GFPGAN output', fontsize=16)\n  ax2.axis('off')\n  ax1.imshow(img1)\n  ax2.imshow(img2)\ndef imread(img_path):\n  img = cv2.imread(img_path)\n  img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n  return img\n\n# display each image in the upload folder\nimport os\nimport glob\n\ninput_folder = 'results\/cropped_faces'\nresult_folder = 'results\/restored_faces'\ninput_list = sorted(glob.glob(os.path.join(input_folder, '*')))\noutput_list = sorted(glob.glob(os.path.join(result_folder, '*')))\nfor input_path, output_path in zip(input_list, output_list):\n  img_input = imread(input_path)\n  img_output = imread(output_path)\n  display(img_input, img_output)","e3a4d2d1":"#### In this tutorial we're going to restore our childhood memories by using GFPGAN Inference.\n#### GFPGAN is a blind face restoration algorithm towards real-world face images. \n#### The results are **Incredible**. \ud83d\ude35\ud83d\ude31\n#### You can read about it [here](https:\/\/github.com\/TencentARC\/GFPGAN)\n![](https:\/\/xinntao.github.io\/projects\/GFPGAN_src\/gfpgan_teaser.jpg)","0a8090c7":"## Here's the output of my image \ud83d\ude0a :\n![Kartik Khandelwal](https:\/\/i.ibb.co\/Fb2YJJP\/Whats-App-Image-2021-12-14-at-8-40-40-PM-00.png)","b6af6824":"## References\n* Research paper [here](https:\/\/arxiv.org\/abs\/2101.04061).\n* Github [link](https:\/\/github.com\/TencentARC\/GFPGAN).\n* Website [link](https:\/\/huggingface.co\/spaces\/akhaliq\/GFPGAN).","5c9717e9":"## Vizualization","b4f96eb5":"#### First of all, we will clone the repository, set up the envrironment, and download the pre-trained model.","23f204aa":"#### Here's the Magic begin","593abcfa":"## Uploading Image","ce510701":"## Go try it out on colab [here](https:\/\/colab.research.google.com\/drive\/1sVsoBd9AjckIXThgtZhGrHRfFI6UUYOo#scrollTo=CdMZYp0T7NAy) & Share your feedback in the comment box.\n## If you learn something new, please upvote \ud83d\ude0a."}}