{"cell_type":{"91f42a71":"code","db3b038d":"code","8b45fd13":"code","f963b412":"code","f481ba90":"code","83858151":"code","4cddf65d":"code","d4623ed1":"code","c3ce172c":"code","520a0ceb":"code","8c0b8770":"code","67d7b704":"code","995ae10d":"code","56aae7c7":"code","f2ecb092":"code","f2610642":"code","a22fcb29":"code","1b436920":"code","a4e67b6b":"code","3ef83c84":"code","798fcb2a":"code","5dc1efca":"code","2227546b":"code","1fd1e343":"code","f4bbc438":"code","118a113f":"code","007a7610":"code","c8b92219":"code","d3561803":"code","5fa480b3":"code","f47ff1ce":"code","28695437":"markdown","37703a1b":"markdown","c73ae904":"markdown","342b03e9":"markdown","74a7860d":"markdown","fcfaa502":"markdown","f032f171":"markdown","f3756178":"markdown","79a10db2":"markdown","70815c92":"markdown","d1fa3ec2":"markdown"},"source":{"91f42a71":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport warnings\nwarnings.simplefilter(action='ignore', category=Warning)","db3b038d":"dataset = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')","8b45fd13":"dataset.head()","f963b412":"dataset = dataset.drop('Unnamed: 32', axis =1)","f481ba90":"dataset.describe()","83858151":"dataset.isnull().values.any()","4cddf65d":"dataset.isnull().values.sum()","d4623ed1":"dataset.isnull().sum()","c3ce172c":"dataset.shape","520a0ceb":"dataset['diagnosis'].agg(['count', 'size', 'nunique'])","8c0b8770":"pd.value_counts(dataset['diagnosis'])","67d7b704":"sns.set_style('whitegrid')\nplt.figure(figsize=(12, 6))\nsns.countplot(x=\"diagnosis\", data=dataset, palette='magma');","995ae10d":"plt.figure(figsize=(20, 17))\nmatrix = np.triu(dataset.corr())\nsns.heatmap(dataset.corr(), annot=True, linewidth=.8, mask=matrix, cmap=\"rocket\");\n","56aae7c7":"fig, ax = plt.subplots(2, 2, figsize=(15, 15))\nsns.scatterplot(x='fractal_dimension_mean', y='area_mean', hue=\"diagnosis\",\n                data=dataset, ax=ax[0][0], palette='magma')\nsns.scatterplot(x='fractal_dimension_worst', y='area_worst', hue=\"diagnosis\",\n                data=dataset, ax=ax[0][1], palette='magma')\nsns.scatterplot(x='smoothness_se', y='radius_worst', hue=\"diagnosis\",\n                data=dataset, ax=ax[1][0], palette='magma')\nsns.scatterplot(x='symmetry_se', y='radius_worst', hue=\"diagnosis\",\n                data=dataset, ax=ax[1][1], palette='magma');\n","f2ecb092":"# Creating a list of columns with only the columns that represent the mean.\nmean_columns = ['diagnosis', 'radius_mean', 'texture_mean', 'perimeter_mean',\n             'area_mean', 'smoothness_mean', 'compactness_mean', 'concavity_mean',\n             'concave points_mean', 'symmetry_mean', 'fractal_dimension_mean']\n\n# Creating a list of columns with only the columns that represent the worst values.\nworst_columns = ['diagnosis', 'radius_worst', 'texture_worst',\n              'perimeter_worst', 'area_worst', 'smoothness_worst',\n              'compactness_worst', 'concavity_worst', 'concave points_worst',\n              'symmetry_worst', 'fractal_dimension_worst']\n","f2610642":"sns.pairplot(dataset[mean_columns], hue=\"diagnosis\", palette='husl')","a22fcb29":"sns.pairplot(dataset[worst_columns], hue=\"diagnosis\", palette='viridis')","1b436920":"data = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')\ndel data['Unnamed: 32']\nX = data.iloc[:,2:].values\n# X = dataset.drop(['diagnosis','id'],axis=1).values\ny = data.iloc[:, 1].values","a4e67b6b":"X.shape","3ef83c84":"y.shape","798fcb2a":"# Encoding Dependent Variable with Label Encoder\nfrom sklearn.preprocessing import LabelEncoder\nlabelencoder_X_1 = LabelEncoder()\ny = labelencoder_X_1.fit_transform(y)\n\n# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1, random_state = 0)\n\n#Feature Scaling\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","5dc1efca":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\nclassifier = Sequential([\n    Dense(60, input_shape=(30,), activation='relu'),\n    Dense(30, activation='relu'),\n    Dense(15, activation='relu'),\n    Dense(8, activation='relu'),\n    Dense(4, activation='relu'),\n    Dense(1, activation='sigmoid')\n])\n","2227546b":"classifier.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\nhistory=classifier.fit(X_train, y_train,validation_data=(X_test, y_test), batch_size=100, epochs=50)","1fd1e343":"classifier.summary()","f4bbc438":"sns.set()\n\nacc = history.history['accuracy']\nval_acc = history.history['val_accuracy']\nloss = history.history['loss']\nval_loss = history.history['val_loss']\nepochs = range(1, len(loss) + 1)\n\n# Accuracy plot\nplt.plot(epochs, acc, color='green', label='Training Accuracy')\nplt.plot(epochs, val_acc, color='blue', label='Validation Accuracy')\nplt.title('Training and Validation Accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend()\n\nplt.figure()\n# Loss plot\nplt.plot(epochs, loss, color='green', label='Training Loss')\nplt.plot(epochs, val_loss, color='red', label='Validation Loss')\nplt.title('Training and Validation Loss')\nplt.xlabel('Epoch')\nplt.ylabel('Loss')\nplt.legend()\n\nplt.show()","118a113f":"y_pred = classifier.predict(X_test)\ny_pred","007a7610":"y_pred1 = (y_pred > 0.5)\ny_pred1","c8b92219":"from sklearn.metrics import confusion_matrix, classification_report\ncm = confusion_matrix(y_test, y_pred1)\nprint(cm)\nprint(\"accuracy is {}%\".format(((cm[0][0] + cm[1][1])\/57)*100))","d3561803":"def predict(model, X):\n    pred = model.predict(X).flatten()\n    pred[pred > 0.5] = 1\n    pred[pred <= 0.5] = 0\n    return pred\n\ndef plot_actual_vs_predicted(y_true,y_pred,title=None):\n    cm = confusion_matrix(y_true, y_pred)\n    plt.figure(figsize=(7,7))\n    sns.heatmap(cm, annot=True, fmt='g')\n    \n    #Labelling\n    plt.xlabel(\"Actual\")\n    plt.ylabel(\"Predicted\")\n    plt.title(title)\n    plt.show()","5fa480b3":"plot_actual_vs_predicted(y_test, y_pred1, 'Test Data Predictions')\nprint(classification_report(y_test, y_pred1))","f47ff1ce":"classifier.save('breast_cancer.h5')","28695437":"## Visualize the accuracy and loss to check whether our model is overfitting or not","37703a1b":"## Import required libraries ","c73ae904":"As we can observe from the heatmaps that there are many negative correlations in this dataset. Lets observe these by plotting it out.\n\nNegative Correlations\nThe column 'fractal_dimension_mean' had many negative correlations with many other attributes like 'area_mean', 'area_worst' etc. We'll plot some scatter plots for these.\n\nFractal analysis of images of breast tissue specimens provides a numeric description of tumour growth patterns as a continuous number between 1 and 2. This number is known as the Fractal Dimension","342b03e9":"#### Dataset have 569 rows and 32 Columns","74a7860d":"## Model Building","fcfaa502":"# Data Preprocessing","f032f171":"## Loading Dataset","f3756178":"#### Diagnosis Column have 2 unique values Malignant(M) and Benign(B) having count of 212 and 357 respectively.","79a10db2":"## Exploratory Data Analysis","70815c92":"Dataset link:- https:\/\/cainvas-static.s3.amazonaws.com\/media\/user_data\/shyamalkrish\/archive_10.zip","d1fa3ec2":"medium link :- https:\/\/medium.com\/@shyamalkrishnaagrawal1812\/breast-cancer-classification-7ebce56e441c"}}