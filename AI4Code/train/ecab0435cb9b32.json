{"cell_type":{"61f9e17b":"code","0bffabc5":"code","ab776705":"code","c720d827":"code","f04951d6":"code","11993c63":"code","e34c28a3":"code","66feef56":"code","204fd90d":"code","b3fb3de3":"code","cc352e85":"code","b0662224":"code","332d9b78":"code","072af788":"code","02acd9c1":"code","a0e5530c":"code","c8438f3d":"code","038a6880":"code","48fe5ee2":"code","06e55892":"code","50fb8340":"markdown","ccb85db7":"markdown","cf9d5b48":"markdown","c0a7e2c1":"markdown","992dca06":"markdown","84c065bd":"markdown","9bc2e988":"markdown","abf64ad6":"markdown","d4e650c2":"markdown","dfe2e2d4":"markdown"},"source":{"61f9e17b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0bffabc5":"from plotly import __version__\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\nprint(__version__) # requires version atleast>= 4.8.1","ab776705":"import cufflinks as cf","c720d827":"# For Notebooks\ninit_notebook_mode(connected=True)","f04951d6":"# For offline use\ncf.go_offline()","11993c63":"df=pd.read_excel(\"..\/input\/covid.xlsx\")\n\n\n#df = pd.DataFrame(np.random.randn(100,4),columns='A B C D'.split())\n\n","e34c28a3":"df.head()\n","66feef56":"df2 = pd.DataFrame({'Category':['A','B','C'],'Values':[32,43,50]})","204fd90d":"df2.head()","b3fb3de3":"df.iplot(kind='scatter',x='Total Confirmed cases*',y='Deaths**',mode='markers',size=10)","cc352e85":"df.iplot(kind='bar',x='Name of State \/ UT',y='Total Confirmed cases*')","b0662224":"df.iplot(kind='bar',x='Name of State \/ UT',y='Deaths**',color=\"red\")","332d9b78":"df.iplot(kind='bar',x='Name of State \/ UT',y='Cured\/Discharged\/Migrated*',color=\"pink\")\n","072af788":"df.iplot(kind='bar',x='Name of State \/ UT',y='Active Cases*')","02acd9c1":"df.columns","a0e5530c":"df.drop(columns=[\"S. No.\",\"Name of State \/ UT\"]).iplot(kind='box')","c8438f3d":"#df = pd.DataFrame({'x':[1,2,3,4,5],'y':[10,20,30,20,10],'z':[5,4,3,2,1]})\ndf.drop(columns=[\"S. No.\",\"Name of State \/ UT\"]).iplot(kind='surface',colorscale='rdylbu')","038a6880":"df.drop(columns=[\"S. No.\",\"Name of State \/ UT\"]).iplot(kind='spread')","48fe5ee2":"df['A'].iplot(kind='hist',bins=25)","06e55892":"df.iplot(kind='bubble',x='A',y='B',size='C')","50fb8340":"Plotly is a library that allows you to create interactive plots that you can use in dashboards or websites (you can save them as html files or static images).\n\n## Installation\n\nIn order for this all to work, you'll need to install plotly and cufflinks to call plots directly off of a pandas dataframe. These libraries are not currently available through **conda** but are available through **pip**. Install the libraries at your command line\/terminal using:\n\n    pip install plotly\n    pip install cufflinks\n\n** NOTE: Make sure you only have one installation of Python on your computer when you do this, otherwise the installation may not work. **\n\n## Imports and Set-up","ccb85db7":"## Using Cufflinks and iplot()\n\n* scatter\n* bar\n* box\n* spread\n* ratio\n* heatmap\n* surface\n* histogram\n* bubble","cf9d5b48":"## Spread","c0a7e2c1":"## 3d Surface","992dca06":"## Bar Plots\n","84c065bd":"## Scatter","9bc2e988":"## scatter_matrix()\n\nSimilar to sns.pairplot()","abf64ad6":"# Plotly and Cufflinks","d4e650c2":"## Boxplots","dfe2e2d4":"## histogram"}}