{"cell_type":{"35a5ea44":"code","b8d0179b":"code","33867322":"code","42075a5d":"code","9ed6aa34":"code","e806ab61":"code","25fbe74f":"code","7e7d123d":"code","fb03fe98":"code","931a87eb":"code","48d23fd3":"code","2bf5172d":"code","7f7bd16c":"code","790fa5f8":"code","f45bf7d9":"code","a4889774":"code","38945c5d":"code","1bae0884":"code","66dc042c":"code","b75dcabc":"code","a77bee17":"code","20a221c4":"code","9309d7e4":"code","ac72f29f":"code","e18226c0":"markdown","dddee6df":"markdown","910c535e":"markdown","d25a0068":"markdown","4174cf75":"markdown","a608c99b":"markdown","4bd35c17":"markdown","394458c4":"markdown","297e860b":"markdown","63d375cd":"markdown","64bd46ae":"markdown"},"source":{"35a5ea44":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","b8d0179b":"df = pd.read_csv('..\/input\/real-estate-price-prediction\/Real estate.csv')","33867322":"df","42075a5d":"df.columns","9ed6aa34":"df.info()","e806ab61":"sns.displot(data=df, x='Y house price of unit area')","25fbe74f":"Countplot_date=sns.countplot(data=df, x='X1 transaction date')\nplt.setp(Countplot_date.get_xticklabels(), rotation=90)\nplt.show()","7e7d123d":"sns.scatterplot(data=df, x='X2 house age'  ,y='Y house price of unit area')","fb03fe98":"sns.pairplot(df,diag_kind='kde')\nplt.show()","931a87eb":"sns.heatmap(df.corr(), annot=True,cmap='YlGnBu')","48d23fd3":"X = df.iloc[:,:-1].values","2bf5172d":"y=df.iloc[:,-1].values","7f7bd16c":"from sklearn.preprocessing import PolynomialFeatures\nconverter = PolynomialFeatures(degree=2)\nNew_X = converter.fit_transform(X)","790fa5f8":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(New_X, y,test_size=0.3, random_state=42)\n","f45bf7d9":"from sklearn.linear_model import LinearRegression\nLinear_Regression_Model = LinearRegression()\nLinear_Regression_Model.fit(X_train, y_train)\n\n","a4889774":"y_pred = Linear_Regression_Model.predict(X_test)","38945c5d":"import sklearn.metrics as metrics\nMAE= metrics.mean_absolute_error(y_test,y_pred)\nMSE= metrics.mean_squared_error(y_test,y_pred)\nRMSE = np.sqrt(MSE)","1bae0884":"MAE","66dc042c":"MSE","b75dcabc":"RMSE","a77bee17":"MAE_list=[]\nMSE_list=[]\nRMSE_list=[]\nRMSE_list_train=[]\nfor i in range(1,10):\n    from sklearn.preprocessing import PolynomialFeatures\n    converter = PolynomialFeatures(degree=i)\n    New_X = converter.fit_transform(X)\n    \n    from sklearn.model_selection import train_test_split\n    X_train, X_test, y_train, y_test = train_test_split(New_X, y,test_size=0.3, random_state=42)\n    \n    from sklearn.linear_model import LinearRegression\n    Linear_Regression_Model = LinearRegression()\n    Linear_Regression_Model.fit(X_train, y_train)\n    \n    y_pred = Linear_Regression_Model.predict(X_test)\n    y_pred_train= Linear_Regression_Model.predict(X_train)\n    \n    MSE= metrics.mean_squared_error(y_test,y_pred)\n    RMSE = np.sqrt(MSE)\n    \n    MSE_train= metrics.mean_squared_error(y_train,y_pred_train)\n    RMSE_train = np.sqrt(MSE_train) \n    \n    \n    RMSE_list.append(RMSE)\n    RMSE_list_train.append(RMSE_train)\n\n\n","20a221c4":"RMSE_list","9309d7e4":"RMSE_list_train","ac72f29f":"\nplt.plot(range(1,4), RMSE_list_train[:3], label='Train RMSE')\nplt.plot(range(1,4), RMSE_list[:3], label='Test RMSE')\n\nplt.xlabel('Polynomial Degree')\nplt.ylabel('RMSE')\nplt.legend()\nplt.show()","e18226c0":"# Step 7: Train and Test Split","dddee6df":"# Step 9: Prediction","910c535e":"# Step 10: Evaluate","d25a0068":"# Step 11: Adjust Parameters","4174cf75":"# Step 1: Import Libraries","a608c99b":"# Step 3: Data Overview","4bd35c17":"# Step 8: Regression Model","394458c4":"# Step 5: Define X and y","297e860b":"# Step 4: Exploratory Data Analysis","63d375cd":"# Step 2: Import Data","64bd46ae":"# Step 6: Preproccesing"}}