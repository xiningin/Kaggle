{"cell_type":{"9420eee1":"code","0ba79dbb":"code","952ac0b9":"code","f09588cb":"code","20fed153":"code","6000a2c1":"code","446c03fc":"code","abac6d51":"code","08b20e40":"code","8b6f8d85":"code","8bcaba8e":"code","af2cd610":"code","7b89503d":"code","436ea3e1":"code","6c95b876":"code","3c63a257":"code","70813ae9":"markdown","0e1b2dac":"markdown","c655f00d":"markdown","b31ebc02":"markdown","c62dc719":"markdown","9a432341":"markdown","c3d0fab5":"markdown","5ba56de1":"markdown","4a6893f7":"markdown","7e21e899":"markdown"},"source":{"9420eee1":"import numpy as np # \u6570\u7ec4\u5e38\u7528\u5e93\nimport pandas as pd # \u8bfb\u5165csv\u5e38\u7528\u5e93\nfrom sklearn.linear_model import LinearRegression # sk-learn\u5e93Linear Regression\u6a21\u578b\nfrom sklearn.model_selection import train_test_split # sk-learn\u5e93\u8bad\u7ec3\u4e0e\u6d4b\u8bd5\nfrom sklearn import metrics # \u751f\u6210\u5404\u9879\u6d4b\u8bd5\u6307\u6807\u5e93\nimport matplotlib.pyplot as plt # \u753b\u56fe\u5e38\u7528\u5e93\nimport math #\u6570\u5b66\u5e93","0ba79dbb":"data = pd.read_csv(\"..\/input\/kc_house_data.csv\")","952ac0b9":"data.dtypes","f09588cb":"X = data[['bedrooms','bathrooms','sqft_living','floors']]\nY = data['price']\nprint (X.shape, Y.shape)","20fed153":"xtrain, xtest, ytrain, ytest = train_test_split(X,Y, test_size=1\/3, random_state=0)","6000a2c1":"xtrain = np.asmatrix(xtrain)\nxtest = np.asmatrix(xtest)\nytrain = np.ravel(ytrain)\nytest = np.ravel(ytest)\nprint (xtrain[:1])\nprint(len(ytrain), len(ytest))","446c03fc":"plt.scatter(X['sqft_living'],Y)\nplt.show()","abac6d51":"X['sqft_living'].hist()\nplt.show()","08b20e40":"model = LinearRegression()\nmodel.fit(xtrain, ytrain)","8b6f8d85":"pd.DataFrame(list(zip(X.columns, np.transpose(model.coef_))))","8bcaba8e":"model.intercept_","af2cd610":"#\u4e00\u4e2a\u623f\u5b50\uff0c3\u4e2a\u5367\u5ba4\uff0c2\u4e2a\u536b\u751f\u95f4\uff0c2500sqft\uff0c2\u5c42\u697c\uff0c\u9884\u6d4b\u623f\u4ef7\nmodel.predict([[3,2,2500,2]])","7b89503d":"pred = model.predict(xtrain)\nytrain\nprint (((pred-ytrain)*(pred-ytrain)).sum() \/ len(ytrain))","436ea3e1":"print ((abs(pred-ytrain)\/ytrain).sum() \/ len(ytrain))","6c95b876":"predtest = model.predict(xtest)\n((predtest-ytest)*(predtest-ytest)).sum() \/ len(ytest)","3c63a257":"(abs(predtest-ytest)\/ytest).sum() \/ len(ytest)","70813ae9":"\u8bad\u7ec3\u96c6\u5408\u4e0a\u7684MSE","0e1b2dac":"\u89c2\u5bdf\u623f\u4ef7\u548c\u751f\u6d3b\u9762\u79ef\u7684\u5173\u7cfb","c655f00d":"\u4ece..\/input\/kc_house_data.csv\u6587\u4ef6\u4e2d\u8bfb\u5165\u6570\u636e","b31ebc02":"\u89c2\u5bdf\u751f\u6d3b\u9762\u79ef\u5206\u5e03","c62dc719":"\u5e73\u5747\u76f8\u5bf9\u8bef\u5dee","9a432341":"\u7528xtrain\u548cytrain\u8bad\u7ec3\u6a21\u578b","c3d0fab5":"\u83b7\u5f97\u81ea\u53d8\u91cfX\u548c\u56e0\u53d8\u91cfY","5ba56de1":"\u83b7\u5f972:1\u7684\u8bad\u7ec3\uff1a\u6d4b\u8bd5\u6570\u636e\u6bd4\u4f8b","4a6893f7":"\u8bad\u7ec3\u96c6\u4e0a\u7684\u5747\u65b9\u5deeMSE","7e21e899":"# Linear Regression\u9884\u6d4b\u623f\u4ef7"}}