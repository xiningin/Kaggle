{"cell_type":{"5ee7ef49":"code","d90b3416":"code","a6898c4b":"code","d936ee67":"code","bbc647e0":"code","ee2cea43":"code","acdb30ae":"code","105e42a5":"code","38a466f1":"code","513e2a86":"code","e8134e22":"code","d2a0c443":"code","57e35843":"code","8992d09f":"code","cd6a74b2":"code","896f4d20":"code","bb927ee1":"code","a9ac64e8":"code","2f52d960":"code","89704c58":"code","930847b3":"code","55a90431":"code","f061f71b":"code","7900d15e":"code","2a39a536":"code","f4c153e8":"code","20bf9479":"code","92de259a":"markdown","c1999641":"markdown","84d38d2d":"markdown","d57974cd":"markdown","601bbb2b":"markdown","60148aef":"markdown","e810975d":"markdown"},"source":{"5ee7ef49":"import numpy as np\nimport pandas as pd\nimport seaborn as sb\nimport matplotlib.pyplot as plt\nimport sklearn\n\nfrom pandas import Series, DataFrame\nfrom pylab import rcParams\nfrom sklearn import preprocessing\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics \nfrom sklearn.metrics import classification_report","d90b3416":"%matplotlib inline\nrcParams['figure.figsize'] = 10, 8\nsb.set_style('whitegrid')","a6898c4b":"test_titanic = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntest_titanic.columns = ['PassengerId','Pclass','Name','Sex','Age','SibSp','Parch','Ticket','Fare','Cabin','Embarked']\ntest_titanic.head()\ntitanic = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntitanic.columns = ['PassengerId','Survived','Pclass','Name','Sex','Age','SibSp','Parch','Ticket','Fare','Cabin','Embarked']\ntitanic.head()","d936ee67":"print('----Test Data----\\n',test_titanic.isnull().sum())\nprint('\\n----Train Data----\\n',titanic.isnull().sum())","bbc647e0":"\nprint('----Test Data----\\n',test_titanic.info())\nprint('\\n----Train Data----\\n',titanic.info())","ee2cea43":"test_titanic_data = test_titanic.drop(['PassengerId','Name','Ticket','Cabin'], 1)\ntitanic_data = titanic.drop(['PassengerId','Name','Ticket','Cabin'], 1)\nprint('----Train Data----\\n',titanic_data.head())\nprint('\\n----Test Data----\\n',test_titanic_data.head())","acdb30ae":"def age_approx(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","105e42a5":"test_titanic_data['Age'] = test_titanic_data[['Age', 'Pclass']].apply(age_approx, axis=1)\ntitanic_data['Age'] = titanic_data[['Age', 'Pclass']].apply(age_approx, axis=1)\nprint('----Train Data----\\n',titanic_data.isnull().sum())\nprint('\\n----Test Data----\\n',test_titanic_data.isnull().sum())","38a466f1":"test_titanic_data.fillna(test_titanic_data['Fare'].mean(),inplace=True)\ntitanic_data.dropna(inplace=True)\nprint('----Train Data----\\n',titanic_data.isnull().sum())\nprint('\\n----Test Data----\\n',test_titanic_data.isnull().sum())","513e2a86":"test_gender = pd.get_dummies(test_titanic_data['Sex'],drop_first=True)\ntrain_gender = pd.get_dummies(titanic_data['Sex'],drop_first=True)\nprint('----Train Data----\\n',train_gender.head())\nprint('\\n----Test Data----\\n',test_gender.head())","e8134e22":"test_embark_location = pd.get_dummies(test_titanic_data['Embarked'],drop_first=True)\ntrain_embark_location = pd.get_dummies(titanic_data['Embarked'],drop_first=True)\nprint('----Train Data----\\n',train_embark_location.head())\nprint('\\n----Test Data----\\n',test_embark_location.head())","d2a0c443":"\nprint('----Train Data----\\n',titanic_data.head())\nprint('\\n----Test Data----\\n',test_titanic_data.head())","57e35843":"test_titanic_data.drop(['Sex', 'Embarked'],axis=1,inplace=True)\ntitanic_data.drop(['Sex', 'Embarked'],axis=1,inplace=True)\nprint('----Train Data----\\n',titanic_data.head())\nprint('\\n----Test Data----\\n',test_titanic_data.head())","8992d09f":"test_titanic_dmy = pd.concat([test_titanic_data,test_gender,test_embark_location],axis=1)\ntitanic_dmy = pd.concat([titanic_data,train_gender,train_embark_location],axis=1)\nprint('----Train Data----\\n',titanic_dmy.head())\nprint('\\n----Test Data----\\n',test_titanic_dmy.head())","cd6a74b2":"print('----Train Data----\\n',sb.heatmap(titanic_dmy.corr()))","896f4d20":"print('\\n----Test Data----\\n',sb.heatmap(test_titanic_dmy.corr())) ","bb927ee1":"test_titanic_dmy.drop(['Fare', 'Pclass'],axis=1,inplace=True)\ntitanic_dmy.drop(['Fare', 'Pclass'],axis=1,inplace=True)\nprint('----Train Data----\\n',titanic_dmy.head())\nprint('\\n----Test Data----\\n',test_titanic_dmy.head())","a9ac64e8":"\nprint('----Train Data----\\n',titanic_dmy.info())\nprint('\\n----Test Data----\\n',test_titanic_dmy.info())","2f52d960":"train_X = titanic_dmy.iloc[:,1:].values#train data\ntrain_y = titanic_dmy.iloc[:,0].values","89704c58":"X_train, X_test, y_train, y_test = train_test_split(train_X, train_y, test_size = .3, random_state=25)","930847b3":"LogReg = LogisticRegression()\nLogReg.fit(X_train, y_train)","55a90431":"y_pred = LogReg.predict(X_test)","f061f71b":"from sklearn.metrics import confusion_matrix\nconfusion_matrix = confusion_matrix(y_test, y_pred)\nconfusion_matrix","7900d15e":"print(classification_report(y_test, y_pred))","2a39a536":"test_X_dataSet = test_titanic_dmy.values     #test data set\n","f4c153e8":"y_pred_test_dataSet = LogReg.predict(test_X_dataSet)","20bf9479":"outputs = pd.DataFrame({'PassengerId': test_titanic['PassengerId'],'Survived': y_pred_test_dataSet})\noutputs.to_csv('tests_output.csv')\n\nprint(\"Submission generated.\")\npd.read_csv('tests_output.csv').head()","92de259a":"#Checking for independence between features","c1999641":"#Drop all the rows that has null value","84d38d2d":"# **Checking for missing values**","d57974cd":"# **Test data for Logistic Regression**","601bbb2b":"#Deploying and evaluating the model","60148aef":"# Train Data","e810975d":"#Converting categorical variables to a dummy indicators"}}