{"cell_type":{"bec28863":"code","55f7018c":"code","a788a90f":"code","f9a930dc":"code","b3b711ee":"code","5a193aec":"code","1c5ba38c":"code","6ba062af":"code","27ee1fd8":"code","8f3556e3":"code","69d5b22c":"code","a02aec16":"code","9dd29347":"code","7fe5027a":"code","79a1e85b":"code","652b5875":"code","12bac723":"code","d1a77bbe":"code","b6d901ae":"code","6f1ce497":"code","ec5f822e":"code","e992f425":"code","37525b67":"code","7b128964":"code","6f6ad7da":"code","aa53b2f2":"code","18237f80":"code","10a9e91c":"code","71f509d1":"code","6a97702d":"code","4b441851":"code","20aa7005":"code","e20e3785":"code","fb3f1978":"code","062e44ed":"code","774ca137":"code","b28ccd2e":"code","0c4947ae":"code","216eb0f6":"code","4d03ff13":"code","f3677e4b":"code","82b67815":"code","e5f4ba4d":"code","1e9f765a":"code","52b79757":"code","068c46c9":"code","5c745094":"code","f8ccc96b":"code","5d2a0307":"code","08c423ad":"code","29a595e2":"code","1d9f6d14":"code","04993715":"code","b43b5425":"code","474feda0":"code","456f086b":"code","736e2801":"code","aaa1d672":"code","d4a77203":"code","26308da3":"code","26c1e71d":"code","621ecbeb":"code","adb10a1d":"code","90cbb1a9":"code","4e31cc5a":"code","606f444f":"code","1b47b4c9":"code","a089adda":"code","bd32d0b1":"code","7be5ec84":"code","97827a67":"code","68f42c1b":"code","710a2775":"code","bf7f00c0":"code","ec2179b2":"code","edb0e1e4":"code","72e56134":"code","304cf8e4":"code","6cddaf15":"markdown","155ae929":"markdown","19b218c8":"markdown","65f8e265":"markdown","16091c76":"markdown","da17e8de":"markdown","6b4ae278":"markdown","93386131":"markdown","4db956e2":"markdown","1117c2be":"markdown","52e99944":"markdown","8af60b7f":"markdown","16c3e6b4":"markdown","86424bc8":"markdown","8e4ae070":"markdown","2a63e391":"markdown","1daa9105":"markdown","8019e686":"markdown","9edf462e":"markdown","87a6221d":"markdown","c57d20c1":"markdown","e93af1a1":"markdown","625ea417":"markdown","3997e19e":"markdown","592941ed":"markdown","a6297618":"markdown","336c53a4":"markdown","c4830230":"markdown","829eb117":"markdown","206871e4":"markdown","43d14e11":"markdown","f77a8661":"markdown","ec3a18b2":"markdown","c6595291":"markdown","1bf19dae":"markdown","9f3093cc":"markdown","074aa911":"markdown","b4b250cf":"markdown","1d98d13c":"markdown","7f1786c1":"markdown","1901c38e":"markdown","bf709fed":"markdown","11846c66":"markdown","a98f0723":"markdown","6ffaf85f":"markdown","01394f67":"markdown","2f124ea4":"markdown","b003d3d4":"markdown","e53eeba8":"markdown","d5dee99e":"markdown","94709955":"markdown","f7d5d7e8":"markdown","5d69e542":"markdown","62821fbc":"markdown","8281685c":"markdown","d39f24bb":"markdown","98ffd1bf":"markdown","74cf57e5":"markdown","a228c4e2":"markdown","6489bc36":"markdown"},"source":{"bec28863":"# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')","55f7018c":"#Import the relevant libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LinearRegression\nimport statsmodels.api as sm  \nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom sklearn.metrics import r2_score","a788a90f":"pd.set_option('display.max_rows', None )\npd.set_option('display.max_columns', None)\npd.set_option('display.width', None)","f9a930dc":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b3b711ee":"# Importing bike.csv\nbike = pd.read_csv('\/kaggle\/input\/daycsv\/day.csv')","5a193aec":"# Display first few rows of application data\nbike.head()","1c5ba38c":"# Data Dimensions\nbike.shape","6ba062af":"# Display null value percentage of bike data\ndisplay(round(100*(bike.isnull().sum()\/len(bike.index)), 2))","27ee1fd8":"# Display datatypes\ndisplay(bike.info())  ","8f3556e3":"# Dropping unnecessary and redundant columns\nbike.drop([\"instant\",\"dteday\", \"casual\", \"registered\"],axis =1, inplace = True) \nbike.head()","69d5b22c":"# Data Dimensions\nbike.shape","a02aec16":"# list of columns\nbike.columns","9dd29347":"# Checking datatypes \nbike.info()","7fe5027a":"# describing variables\nbike.describe()","79a1e85b":"numerical = ['temp', 'atemp', 'hum', 'windspeed',]\nplt.figure(figsize =(12,6))\nfor i in enumerate(numerical):\n    plt.subplot(2,2, i[0]+1)\n    sns.boxplot(x= i[1], data = bike)","652b5875":"df_num = bike[[ 'temp', 'atemp', 'hum', 'windspeed','cnt']]\nsns.pairplot(df_num,corner=True)\nplt.show()","12bac723":"sns.distplot(bike['temp'],hist = False, label= 'temp')\nsns.distplot(bike['atemp'],hist = False, label= 'atemp')\nplt.show()","d1a77bbe":"plt.figure(figsize=(20,4))\nplt.subplot(131)\nsns.countplot(x= 'season', data = bike)\nplt.subplot(132)\nsns.countplot(x= 'mnth', data = bike)\nplt.subplot(133)\nsns.countplot(x= 'weekday', data = bike)\nplt.show()","b6d901ae":"plt.figure(figsize=(16,4))\nplt.subplot(141)\nsns.countplot(x= 'yr', data = bike)\nplt.subplot(142)\nsns.countplot(x= 'holiday', data = bike)\nplt.subplot(143)\nsns.countplot(x= 'workingday', data = bike)\nplt.subplot(144)\nsns.countplot(x= 'weathersit', data = bike)\nplt.show()","6f1ce497":"plt.figure(figsize=(12, 8))\nplt.subplot(2,2,1)\nsns.boxplot(x = 'yr', y = 'cnt', data = bike)\nplt.subplot(2,2,2)\nsns.boxplot(x = 'holiday', y = 'cnt', data = bike)\nplt.subplot(2,2,3)\nsns.boxplot(x = 'workingday', y = 'cnt', data = bike)\nplt.subplot(2,2,4)\nsns.boxplot(x = 'weathersit', y = 'cnt', data = bike)\nplt.show()","ec5f822e":"plt.figure(figsize=(16, 4))\nplt.subplot(121)\nsns.boxplot(x = 'season', y = 'cnt', data = bike)\nplt.subplot(122)\nsns.boxplot(x = 'weekday', y = 'cnt', data = bike)\nplt.show()\n","e992f425":"plt.figure(figsize=(10,4))\nsns.boxplot(x = 'mnth', y = 'cnt', data = bike)\nplt.show()","37525b67":"plt.figure(figsize = (16,10))        # Size of the figure\nsns.heatmap(bike.corr(),annot = True,cmap=\"YlGnBu\")\nplt.show()","7b128964":"# Check the housing dataframe now\nbike.head()","6f6ad7da":"bike[\"season\"].value_counts()","aa53b2f2":"bike[\"yr\"].value_counts()","18237f80":"bike[\"mnth\"].value_counts()","10a9e91c":"bike[\"holiday\"].value_counts()","71f509d1":"bike[\"weekday\"].value_counts()","6a97702d":"bike[\"workingday\"].value_counts()","4b441851":"bike[\"weathersit\"].value_counts()","20aa7005":"bike_new = pd.get_dummies(data=bike, columns=['weathersit', 'weekday', 'mnth', 'season'], drop_first = True)\nbike_new.head()","e20e3785":"bike_new.info()","fb3f1978":"# We specify this so that the train and test data set always have the same rows, respectively\nnp.random.seed(0)\ndf_train, df_test = train_test_split(bike_new, train_size = 0.70, random_state = 42)","062e44ed":"df_train.shape","774ca137":"df_test.shape","b28ccd2e":"bike_new.shape","0c4947ae":"scaler = MinMaxScaler()","216eb0f6":"df_train.head()","4d03ff13":"# Apply scaler() to all the columns except the 'yes-no' and 'dummy' variables\nnum_vars = ['temp', 'hum', 'windspeed','cnt','atemp']\ndf_train[num_vars] = scaler.fit_transform(df_train[num_vars])","f3677e4b":"df_train.head()","82b67815":"# Describing data\ndf_train.describe()","e5f4ba4d":"# Plotting heatmap of dataframe\nplt.figure(figsize = (20, 20))\nsns.heatmap(round(df_train.corr(),2), annot = True, cmap=\"YlGnBu\")\nplt.show()","1e9f765a":"# Dividing into X and Y sets for the model building\nimport copy\ntrain_plot = copy.copy(df_train)\ny_train = df_train.pop('cnt')\nX_train = df_train","52b79757":"# Running RFE with the output number of the variable equal to 15\nlm = LinearRegression()\nlm.fit(X_train, y_train)\nrfe = RFE(lm, 15)             # running RFE\nrfe = rfe.fit(X_train, y_train)","068c46c9":"# List of variables after applying RFE\nlist(zip(X_train.columns,rfe.support_,rfe.ranking_))","5c745094":"# List of variables to be considered for model building\ncol = X_train.columns[rfe.support_]\ncol","f8ccc96b":"# List of variables to be removed from data set\nX_train.columns[~rfe.support_]","5d2a0307":"# Creating X_test dataframe with RFE selected variables\nX_train_rfe = X_train[col]\nX_train_vif = X_train[col]","08c423ad":"# Adding a constant variable \nX_train_rfe = sm.add_constant(X_train_rfe)\nlm_1 = sm.OLS(y_train,X_train_rfe).fit()   # Running the linear model","29a595e2":"# Summary of our linear model\nprint(lm_1.summary())","1d9f6d14":"# Defining function to check vif\ndef vif_show(X_vif):\n    vif = pd.DataFrame()\n    vif['Features'] = X_vif.columns\n    vif['VIF'] = [variance_inflation_factor(X_vif.values, i) for i in range(X_vif.shape[1])]\n    vif['VIF'] = round(vif['VIF'], 2)\n    vif = vif.sort_values(by = \"VIF\", ascending = False)\n    print(vif)","04993715":"vif_show(X_train_vif)","b43b5425":"X_train_rfe = X_train_rfe.drop([\"atemp\"], axis = 1)\nX_train_vif = X_train_vif.drop([\"atemp\"], axis = 1)\ncol_to_drop = ['atemp']\nlm_2 = sm.OLS(y_train,X_train_rfe).fit()  ","474feda0":"print(lm_2.summary())","456f086b":"vif_show(X_train_vif)","736e2801":"X_train_rfe = X_train_rfe.drop([\"hum\"], axis = 1)\nX_train_vif = X_train_vif.drop([\"hum\"], axis = 1)\ncol_to_drop.append('hum')\nlm_3 = sm.OLS(y_train,X_train_rfe).fit()  ","aaa1d672":"print(lm_3.summary())","d4a77203":"vif_show(X_train_vif)","26308da3":"X_train_rfe = X_train_rfe.drop([\"season_3\"], axis = 1)\nX_train_vif = X_train_vif.drop([\"season_3\"], axis = 1)\ncol_to_drop.append('season_3')\nlm_4 = sm.OLS(y_train,X_train_rfe).fit()  ","26c1e71d":"print(lm_4.summary())","621ecbeb":"vif_show(X_train_vif)","adb10a1d":"X_train_rfe = X_train_rfe.drop([\"mnth_8\"], axis = 1)\nX_train_vif = X_train_vif.drop([\"mnth_8\"], axis = 1)\ncol_to_drop.append('mnth_8')\nlm_5 = sm.OLS(y_train,X_train_rfe).fit()  ","90cbb1a9":"print(lm_5.summary())","4e31cc5a":"vif_show(X_train_vif)","606f444f":"X_train_rfe = X_train_rfe.drop([\"mnth_7\"], axis = 1)\nX_train_vif = X_train_vif.drop([\"mnth_7\"], axis = 1)\ncol_to_drop.append('mnth_7')\nlm_6 = sm.OLS(y_train,X_train_rfe).fit()  ","1b47b4c9":"print(lm_6.summary())","a089adda":"vif_show(X_train_vif)","bd32d0b1":"y_train_pred = lm_6.predict(X_train_rfe)","7be5ec84":"# Plotting Error terms of train data\nfig = plt.figure()\nsns.distplot((y_train - y_train_pred), bins = 20)\nfig.suptitle('Error Terms', fontsize = 20)                  # Plot heading \nplt.xlabel('Errors', fontsize = 18)# X-label\nplt.show()","97827a67":"res = y_train - y_train_pred\n#res = res.abs()\nplt.scatter(y_train_pred,res)\nplt.xlabel('predicted value', fontsize = 18)\nplt.ylabel('residuals', fontsize = 18)\nplt.show()","68f42c1b":"df_test[num_vars] = scaler.transform(df_test[num_vars])","710a2775":"y_test = df_test.pop('cnt')\nX_test = df_test","bf7f00c0":"# Dropping unwanted columns\nX_test_new = X_test[col]\nX_test_new.drop(col_to_drop, axis = 1 , inplace = True)\n# Adding a constant variable \nX_test_new = sm.add_constant(X_test_new)","ec2179b2":"# Making predictions\ny_pred = lm_6.predict(X_test_new)","edb0e1e4":"# Calculating test data R^2\nr2 = r2_score(y_test, y_pred)\nprint(r2)","72e56134":"# n is number of rows in X\nn = X_test_new.shape[0]\n# Number of features (predictors, p) is the shape along axis 1\np = X_test_new.shape[1]\n# We find the Adjusted R-squared using the formula\nadjusted_r2 = 1-(1-r2)*(n-1)\/(n-p-1)\nadjusted_r2","304cf8e4":"# Plotting y_test and y_pred to understand the spread.\nfig = plt.figure()\nplt.scatter(y_test,y_pred)\nfig.suptitle('y_test vs y_pred', fontsize=20)              # Plot heading \nplt.xlabel('y_test', fontsize=18)                          # X-label\nplt.ylabel('y_pred', fontsize=16)                          # Y-label\nplt.show()","6cddaf15":"**Insights**\n- Looking at the p-values, it looks like variable `atemp` and `temp` isn't really significant (in the presence of other variables).","155ae929":"**Checking VIF**\n\nVariance Inflation Factor or VIF, gives a basic quantitative idea about how much the feature variables are correlated with each other. It is an extremely important parameter to test our linear model. The formula for calculating `VIF` is:\n\n### $ VIF_i = \\frac{1}{1 - {R_i}^2} $","19b218c8":"**Detecting Outliers- We are visualising using box plot**","65f8e265":"### Business Goal:","16091c76":"## Importing and Understanding Data","da17e8de":"# Bike Sharing Assignment","6b4ae278":"**The P-value and VIF of atemp is very high , so removing it from datset.**","93386131":"#### Univariate analysis of categorical columns","4db956e2":"## FINAL REPORT","1117c2be":"**Insights**\n- Looking at the p-values, it looks all variables are significant (in the presence of other variables). \n- To remove variables, we will check VIF. ","52e99944":"- R^2 score of train data = 0.812\n- Adjusted R^2 of train data = 0.808\n- R^2 score of test data = 0.812\n- Adjusted R^2 of train data = 0.802","8af60b7f":"#### We need to convert  levels into integer as well. For this, we will use something called dummy variables.\n- The variable weathersit has three levels.\n- The variable weekday has seven levels. \n- The variable mnth has three levels. \n- The variable season has three levels. ","16c3e6b4":"**The residuals are following the normally distributed with a mean 0.**","86424bc8":"- Using RFE(Recursive feature elimination) and manual (hybrid) approach","8e4ae070":"## Model Evaluation","2a63e391":"###### 3. F statistic has a very low p value (practically low)\nMeaning that the model fit is statistically significant, and the explained variance isn't purely by chance.","1daa9105":"# Building  model","8019e686":"**We generally want a VIF that is less than 5. So there are clearly some variables we need to drop.\nSince correlation between `cnt` and `temp` is high, we will drop `season_3`.**","9edf462e":"### Model No 6\n- Rebuilding the model without `mnth_7`","87a6221d":"In such an attempt, BoomBikes aspires to understand the demand for shared bikes among the people after this ongoing quarantine situation ends across the nation due to Covid-19. They have planned this to prepare themselves to cater to the people's needs once the situation gets better all around and stand out from other service providers and make huge profits.","c57d20c1":"**pairplot of all the numeric variables.**","e93af1a1":"### Model No 3\n- Rebuilding the model without `hum`","625ea417":"### Model No 5\n- Rebuilding the model without `mnth_8`","3997e19e":"**We generally want a VIF that is less than 5. So there are clearly some variables we need to drop.\nSince correlation between `cnt` and `temp` is high, we will drop `hum`.**","592941ed":"#### Bivariate analysis of categorical columns w.r.t target variable","a6297618":"### Model No 4\n- Rebuilding the model without `season_3`","336c53a4":"# Data Preparation","c4830230":"The fit is significant. \nFrom the parameters that we get, linear regression equation becomes:\n\n**cnt = 0.0702 + (0.2406 * yr) -  (0.0861 * holiday) + (0.5958 * temp) - (0.1039 * windspeed) - (0.0799 * weathersit_2) - (0.2576 * weathersit_3) - (0.0659 * mnth_11) - (0.0669 * mnth_12) + (0.0801 * season_2) + (0.1792 * season_4)**","829eb117":"###  Looking at some key statistics from the summary","206871e4":"## Import the relevant libraries","43d14e11":"**Insight:**\n- 'temp' and 'atemp' are highly correlated","f77a8661":"A US bike-sharing provider BoomBikes has recently suffered considerable dips in their revenues due to the ongoing Corona pandemic. The company is finding it very difficult to sustain in the current market scenario. So, it has decided to come up with a mindful business plan to be able to accelerate its revenue as soon as the ongoing lockdown comes to an end, and the economy restores to a healthy state. ","ec3a18b2":"### Dropping unnecessary and redundant columns\n- instant: record index , we can drop this columns\n- dteday: date, We have month, year columns so we can drop this.\n- casual: count of casual users\n- registered: count of registered users\n\nOur objective is to find total count of users irrespective of registration. So we can drop 'casual' & 'registered' columns","c6595291":"### Dummy Variables","1bf19dae":"**Checking relationship between temp and atemp**","9f3093cc":"### Model No 1\n- Using all 15 RFE selected variables","074aa911":"### Dividing into X and Y sets for the model building","b4b250cf":"### Univariate and Bivariate Analysis","1d98d13c":"##### 1. The coefficient for all variables are (0.0702 , 0.2406, -0.0861, 0.5958, -0.1039 , -0.0799, -0.2576,  -0.0659, 0.0801, 0.1792 ), with a very low p value\nThe coefficient is statistically significant. So the association is not purely by chance. ","7f1786c1":"### Rescaling the Features","1901c38e":"#### Heat-map of dataframe to show the relation between variables","bf709fed":"**Percentage of missing values in bike data**","11846c66":"# Final Result Comparison","a98f0723":"## Problem Statement","6ffaf85f":"We are required to model the demand for shared bikes with the available independent variables. It will be used by the management to understand how exactly the demands vary with different features. They can accordingly manipulate the business strategy to meet the demand levels and meet the customer's expectations. Further, the model will be a good way for management to understand the demand dynamics of a new market.","01394f67":"### It's advised to consider below variables utmost importance while planning, to achive maximum Booking.\n- Temperature (temp)\n- weathersit_3\n- year(yr)\n- season_4(winter)\n- windspeed","2f124ea4":"## Residual Analysis of the train data","b003d3d4":"The values we are concerned with are - \n1. The coefficients and significance (p-values)\n2. R-squared\n3. F statistic and its significance","e53eeba8":"### Building model using statsmodel, for the detailed statistics","d5dee99e":"**Insight**\n- Columns such as 'temp', 'atemp', 'season', 'yr' are highly correlated with variable 'cnt'","94709955":"**`mnth_8` having high p-value, so removing it**","f7d5d7e8":"## Making Predictions on test data","5d69e542":"They have contracted a consulting company to understand the factors on which the demand for these shared bikes depends. Specifically, they want to understand the factors affecting the demand for these shared bikes in the American market. The company wants to know:\n- Which variables are significant in predicting the demand for shared bikes.\n- How well those variables describe the bike demands","62821fbc":"### Model No 2\n- Rebuilding the model without `atemp`","8281685c":"**Value count of all categorical variables**","d39f24bb":"A bike-sharing system is a service in which bikes are made available for shared use to individuals on a short term basis for a price or free. Many bike share systems allow people to borrow a bike from a \"dock\" which is usually computer-controlled wherein the user enters the payment information, and the system unlocks it. This bike can then be returned to another dock belonging to the same system.","98ffd1bf":"## Splitting the Data into Training and Testing Sets","74cf57e5":"# Visualising the Data","a228c4e2":"**We want model with 10 variables , so removing variable `mnth_7`**","6489bc36":"#### Dividing into X_test and y_test"}}