{"cell_type":{"290963bc":"code","3e46e0c7":"code","07864681":"code","ff85157e":"code","32689642":"code","0a785189":"code","fb1907fb":"code","2d84a4d6":"code","0d110b0b":"code","60174678":"code","3b5effc7":"code","53ff946d":"code","2abfcaa2":"code","a32e5908":"code","64d0acf9":"code","73627b3e":"code","3d9915d4":"code","5deafbb9":"code","428f3e0d":"code","534a300b":"code","acf91d65":"code","bdad55a9":"code","97c1e789":"code","f3c67b0a":"code","6f3bc5b6":"code","9c0b00d1":"code","391e1818":"code","0a769f9b":"code","fcfff917":"code","b5914c64":"code","f1e64a5a":"code","d85945d5":"code","c03bab3a":"code","a93b81e2":"code","a0113229":"code","cda55ac8":"code","afa4b653":"code","f01df49c":"code","e60d365c":"code","14ccc604":"code","b9da7344":"code","14badbcc":"code","36aaa6b9":"code","8c4e598f":"code","da2a5637":"code","18b7575f":"code","a737abba":"code","3a8a00d0":"code","43bfc531":"code","d73377e7":"code","4fcca153":"code","3d09e9ef":"code","7d928422":"code","47344e95":"code","f3f322b7":"code","7f6680b4":"code","2d886aca":"code","ba9539b2":"code","fc1abea8":"code","5ad364e5":"code","1ae74da9":"code","8bfe14bc":"code","8de5f3cd":"code","478f18bb":"code","a4b8dead":"code","d505df17":"code","5821652d":"code","82924611":"code","50de33f4":"code","6fc55ca2":"code","cb3d4fbd":"code","6cec3efa":"code","505498ff":"code","7670238c":"code","e33d6b40":"code","872c4376":"code","57f80a60":"code","9ef0a63b":"code","6cc59590":"code","3401bc70":"code","033c7bb0":"code","05a4f6c6":"code","ece16515":"code","f3e23927":"code","71796e08":"code","fe8e6d45":"code","61317ff7":"code","a2df8166":"code","8796c105":"code","74c798be":"code","ed1e89f9":"code","e57da34f":"code","c44c796a":"code","b9f5fb25":"code","560677a6":"code","d9be737e":"code","ce44e976":"code","8f390bb9":"code","eb289a98":"code","2f70e9e7":"code","3d3cd5cb":"code","191bef7e":"code","1bb9d53f":"code","6b8d7bc0":"code","64982f95":"code","bcf8a819":"code","53a3d851":"code","380d30e2":"code","696b1860":"code","ae8618dc":"code","5dfa19b9":"code","b78b681f":"code","5ee02b91":"code","d1d20b51":"code","d8b38646":"code","f87e0192":"markdown","67fd141e":"markdown","cbc9dbf4":"markdown","1d56cf90":"markdown","703e28ab":"markdown","f48cac89":"markdown","6e9d46c1":"markdown","ccce33c1":"markdown"},"source":{"290963bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3e46e0c7":"data=pd.read_csv(\"\/kaggle\/input\/hotel-booking-demand\/hotel_bookings.csv\")\ndata","07864681":"data.dtypes","ff85157e":"data.isnull().sum()","32689642":"data.dtypes","0a785189":"del data['company']","fb1907fb":"data['agent']\n","2d84a4d6":"data['agent'].mode()","0d110b0b":"data['agent'].fillna(9.0,inplace=True)","60174678":"data['country']","3b5effc7":"data['country'].mode()","53ff946d":"data['country'].fillna('PRT',inplace=True)","2abfcaa2":"data['children']","a32e5908":"data['children'].mode()\n","64d0acf9":"data['children'].fillna(0,inplace=True)","73627b3e":"data['children']","3d9915d4":"data['children']=data['children'].apply(np.int64)","5deafbb9":"data.dtypes","428f3e0d":"data.isnull().sum()","534a300b":"data.isnull().sum()","acf91d65":"data.boxplot(column=['lead_time'])\ndata['lead_time'].describe()","bdad55a9":"data.boxplot(column=['adults'])\ndata['adults'].describe()","97c1e789":"data.boxplot(column=['stays_in_weekend_nights'])\ndata['stays_in_weekend_nights'].describe()","f3c67b0a":"data.boxplot(column=['stays_in_week_nights'])\ndata['stays_in_week_nights'].describe()","6f3bc5b6":"data.boxplot(column=['required_car_parking_spaces'])\ndata['required_car_parking_spaces'].describe()","9c0b00d1":"data.boxplot(column=['total_of_special_requests'])\ndata['total_of_special_requests'].describe()","391e1818":"Q1=data.quantile(.25)\nQ3=data.quantile(.75)\nIQR=Q3-Q1","0a769f9b":"outlier = data[((data['total_of_special_requests'] < (Q1['total_of_special_requests'] - 1.5 * IQR['total_of_special_requests'])) | (data['total_of_special_requests'] > (Q3['total_of_special_requests'] + 1.5 * IQR['total_of_special_requests'])))].index\ndata.drop(outlier, inplace= True)","fcfff917":"data.boxplot(column=['total_of_special_requests'])\ndata['total_of_special_requests'].describe()","b5914c64":"outlier2 = data[((data['required_car_parking_spaces'] < (Q1['required_car_parking_spaces'] - 1.5 * IQR['required_car_parking_spaces'])) | (data['required_car_parking_spaces'] > (Q3['required_car_parking_spaces'] + 1.5 * IQR['required_car_parking_spaces'])))].index\ndata.drop(outlier2, inplace= True)","f1e64a5a":"data.boxplot(column=['required_car_parking_spaces'])\ndata['required_car_parking_spaces'].describe()","d85945d5":"df1=pd.DataFrame({\"adults\":data['adults'], \"children\":data['children']})\ndf1.hist(bins=5)\nplt.ylabel('frequency')\nplt.xlabel('number of units')","c03bab3a":"adr_0=data['adr']\ndf2=pd.DataFrame({\"average daily rate\":data['adr']})\ndf2.hist(bins=500)\nplt.ylabel('frequency')","a93b81e2":"data.groupby(['arrival_date_month','arrival_date_year'])['adults', 'children'].sum().plot.bar(figsize=(15,5))\nprint(\"graph shows the number of adults and children that arrived\")\nplt.ylabel('no. of adults \/ children')","a0113229":"plt.boxplot(data.adr)\nprint(\"boxplot of 'average daily rate' gives one outlier\")","cda55ac8":"plt.boxplot(data.total_of_special_requests)\nprint(\"boxplot of 'total_of_special_requests' gives three outliers\")","afa4b653":"data.groupby(['arrival_date_year', 'arrival_date_month']).size().plot.bar(figsize=(15,5))\nprint(\"Year on year arrival count is depecited\")","f01df49c":"data.groupby(['hotel'])['booking_changes'].sum().plot.pie(radius = 2)\nplt.show()\nprint(\"pie chart shows the number of booking changes is greater in city hotels\")","e60d365c":"data.groupby(['hotel'])['total_of_special_requests'].sum().plot.pie(radius = 2)\nplt.show()\nprint(\"pie chart shows the number of special requests made is greater in city hotels\")","14ccc604":"data.groupby(['hotel'])['required_car_parking_spaces'].sum().plot.pie(radius = 2)\nplt.show()\nprint(\"pie chart shows the number of car parking spaces required is greater in resort hotels\")","b9da7344":"data.groupby(['deposit_type']).size().plot.bar()\nprint(\"graph shows the kind of deposits people are paying\")","14badbcc":"plt.figure(figsize = (30,10))\n\ndata.groupby(['country']).size().sort_values(ascending= False).head(15).plot.bar()\nprint(\"graph shows from which country maximum tourist are arriving; numbers show that the top five countries are Poland, Britan, France, Spain & Germany\")","36aaa6b9":"df_us = data[data.country == 'USA']\ndf_uk = data[data.country == 'GBR']\ndf_po = data[data.country == 'PRT']\ndf_ger = data[data.country == 'DEU']\ndf_sp = data[data.country == 'ESP']\ndf_merged = pd.concat([df_us, df_uk, df_po, df_ger, df_sp])","8c4e598f":"plt.figure(figsize=(15,5))\nsns.scatterplot(x= 'stays_in_weekend_nights', y='stays_in_week_nights', hue = 'country', data = df_merged )\nprint(\"scatter plot depicts Stay_in_week_nights vs. Stay_in_weekend_nights in the five countries\")","da2a5637":"plt.figure(figsize=(15,5))\nsns.scatterplot(x= 'country', y='previous_cancellations', hue = 'country', data = df_merged )\nprint(\"scatter plot depicts previous_cancellations vs. country in the five countries\")","18b7575f":"plt.figure(figsize=(15,5))\nsns.barplot(x= 'arrival_date_month', y = 'booking_changes', data = df_us)\nprint(\"chart shows in which month US visitors are arriving the most & also the booking change frequency\")","a737abba":"\nplt.figure(figsize=(10,10))\nsns.countplot(x='hotel', data = df_us, palette='gist_earth')\nplt.title('Hotel Types', weight='bold')\nplt.xlabel('Hotel', fontsize=12)\nplt.ylabel('Count', fontsize=12)","3a8a00d0":"xyz = data.corr()\nsns.heatmap(xyz)","43bfc531":"import pandas as pd","d73377e7":"df = pd.read_csv('\/kaggle\/input\/hotel-booking-demand\/hotel_bookings.csv')\ndf.head()","4fcca153":"from numpy import mean,var,std","3d09e9ef":"df['is_canceled'].mean()","7d928422":"df['is_canceled'].var()","47344e95":"df['lead_time'].mean()","f3f322b7":"df['lead_time'].var()","7f6680b4":"df['arrival_date_year'].mean()","2d886aca":"df['arrival_date_year'].var()","ba9539b2":"df['arrival_date_week_number'].mean()","fc1abea8":"df['arrival_date_week_number'].var()","5ad364e5":"df['arrival_date_day_of_month'].mean()","1ae74da9":"df['arrival_date_day_of_month'].var()","8bfe14bc":"df['stays_in_weekend_nights'].mean()","8de5f3cd":"df['stays_in_weekend_nights'].var()","478f18bb":"df['stays_in_week_nights'].mean()","a4b8dead":"df['stays_in_week_nights'].var()","d505df17":"df['adults'].mean()","5821652d":"df['adults'].var()","82924611":"df['children'].mean()","50de33f4":"df['children'].var()","6fc55ca2":"value = df['children']\nnormal = (value-value.min())\/(value.max()-value.min())\nnormal","cb3d4fbd":"zscore = (value-value.mean())\/value.std()\nzscore","6cec3efa":"zscore.mean()","505498ff":"zscore.var()","7670238c":"import seaborn as sns\nsns.distplot(df.children)","e33d6b40":"sns.kdeplot(df.children)","872c4376":"df['babies'].mean()","57f80a60":"df['babies'].var()","9ef0a63b":"df['is_repeated_guest'].mean()","6cc59590":"df['is_repeated_guest'].var()","3401bc70":"df['previous_cancellations'].mean()","033c7bb0":"df['previous_cancellations'].var()","05a4f6c6":"df['previous_bookings_not_canceled'].mean()","ece16515":"df['previous_bookings_not_canceled'].var()","f3e23927":"df['booking_changes'].mean()","71796e08":"df['booking_changes'].var()","fe8e6d45":"df['agent'].mean()","61317ff7":"df['agent'].var()","a2df8166":"value = df['agent']\nnormal = (value-value.min())\/(value.max()-value.min())\nnormal","8796c105":"zscore = (value-value.mean())\/value.std()\nzscore\n","74c798be":"zscore.mean()","ed1e89f9":"zscore.var()","e57da34f":"sns.distplot(df['agent'])","c44c796a":"sns.kdeplot(df['agent'])","b9f5fb25":"df['company'].mean()","560677a6":"df['company'].var()","d9be737e":"value = df['company']\nnormal = (value-value.min())\/(value.max()-value.min())\nnormal","ce44e976":"zscore = (value-value.mean())\/value.std()\nzscore","8f390bb9":"zscore.mean()","eb289a98":"zscore.var()","2f70e9e7":"sns.distplot(df['company'])","3d3cd5cb":"sns.kdeplot(df['company'])\n","191bef7e":"df['days_in_waiting_list'].mean()","1bb9d53f":"df['days_in_waiting_list'].var()","6b8d7bc0":"df['adr'].mean()","64982f95":"df['adr'].var()","bcf8a819":"value = df['adr']\nnormal = (value-value.min())\/(value.max()-value.min())\nnormal","53a3d851":"zscore = (value-value.mean())\/value.std()\nzscore","380d30e2":"zscore.mean()","696b1860":"zscore.var()\n","ae8618dc":"sns.distplot(df['adr'])","5dfa19b9":"sns.kdeplot(df['adr'])","b78b681f":"df['required_car_parking_spaces'].mean()","5ee02b91":"df['required_car_parking_spaces'].var()","d1d20b51":"df['total_of_special_requests'].mean()","d8b38646":"df['total_of_special_requests'].var()","f87e0192":"**SOURAV's CODE BEGINS FROM HERE\n**","67fd141e":"Now, we can analyze the other columns and impute their NaN values. Let us check the column agent. It has a data type of float64.","cbc9dbf4":"Thus it can be seen in the above graph that more patrons visit the city hotel than the resort hotel.","1d56cf90":"Since the country variable is an object type, it can be categorised as categorical data. For categorical data, the best possible way to fill the NaN cells, are by imputing the mode of the variable. Let us now find the mode for the country column.","703e28ab":"As seen in the preview above, agent column has data type float. In order to fill the NaN values, we can use the mean. Let us now compute the mean. ","f48cac89":"We have now replaced the NaN values with the mean. Now let us move on to checking the NaN values in the country column. Country has data of object type.","6e9d46c1":"As seen in the output above, the columns company,agent,country, and children have NaN or NA values. Using the output below, we can see the type of the data in each column. This information can be used to decide what to impute the NaN values with. However, before that, it can be seen that the total number of observations are 119,000 approximately, and the number of NaN values in the company column are 112,593 which means a large majority of the values in the column are null. We can then go on to exclude that column from the data we will be analyzing. ","ccce33c1":"As seen in the above result, the number of null values are now 0"}}