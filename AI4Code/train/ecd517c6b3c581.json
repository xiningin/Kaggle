{"cell_type":{"b1395ac3":"code","eb82b7fa":"code","842734c0":"code","2bf3d5df":"code","61aae7fa":"code","e658f52c":"code","8722ecf9":"code","52374945":"code","1b4a6ad4":"code","f0818064":"code","3865d262":"code","6192d35b":"code","de21bde3":"code","4c0fa756":"code","ef20e8fa":"code","1dab03b4":"code","989cd5c1":"code","4ad7f07c":"code","824537e5":"code","b08e42a2":"code","2b0a99f0":"code","dda573b9":"code","a1e8bebe":"code","7af57694":"code","81e87e6e":"markdown","96108c23":"markdown","14589b25":"markdown","3fd15b1d":"markdown","f07cd6c0":"markdown","33037101":"markdown"},"source":{"b1395ac3":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom keras.layers import Dense,MaxPooling2D,Conv2D,Flatten,GlobalAveragePooling2D\n\nfrom keras.preprocessing import image\nfrom keras.preprocessing.image import ImageDataGenerator as Imgen\n\nfrom PIL import Image","eb82b7fa":"pip install split-folders --quiet","842734c0":"import splitfolders\nsplitfolders.ratio(\"..\/input\/vehicle-detection-image-set\/data\",output='splitted',ratio=(0.8,0.1,0.1))","2bf3d5df":"train_ds = Imgen(rescale=1.\/255).flow_from_directory(\n    \".\/splitted\/train\",\n    seed = 1,\n    target_size = (150,150),\n    batch_size = 32\n)\n\nval_ds = Imgen(rescale=1.\/255).flow_from_directory(\n    \".\/splitted\/val\",\n    seed = 1,\n    target_size = (150,150),\n    batch_size = 32\n)\n\ntest_ds = Imgen(rescale=1.\/255).flow_from_directory(\n    \".\/splitted\/test\",\n    seed = 1,\n    target_size = (150,150),\n    batch_size = 32\n)","61aae7fa":"train_ds.class_indices","e658f52c":"x_train,y_train = next(train_ds)\nprint(x_train.shape,y_train.shape)","8722ecf9":"plt.figure(figsize=(15,10))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.imshow(x_train[i])\n    plt.title(np.argmax(y_train[i]))","52374945":"from keras.applications.xception import Xception","1b4a6ad4":"base_model = Xception(weights='imagenet',\n                     input_shape=(150,150,3),\n                      include_top=False\n                     )\nbase_model.trainable = False","f0818064":"model = keras.models.Sequential()\n\nmodel.add(base_model)\n\nmodel.add(GlobalAveragePooling2D())\n\nmodel.add(Dense(2,activation='relu'))","3865d262":"model.summary()","6192d35b":"model.compile(optimizer='sgd',loss=keras.losses.BinaryCrossentropy(from_logits=True),metrics=['accuracy'])","de21bde3":"callback = keras.callbacks.EarlyStopping(monitor='val_accuracy',patience=3)","4c0fa756":"#training the model\nhist = model.fit(train_ds,\n                 epochs=10,\n                 validation_data=val_ds,\n                 callbacks=[callback]\n                )","ef20e8fa":"#test\nmodel.evaluate(test_ds)","1dab03b4":"plt.figure(figsize=(6,6))\n\nplt.plot(hist.epoch,hist.history['accuracy'],label = 'Training')\nplt.plot(hist.epoch,hist.history['val_accuracy'],label = 'validation')\n\nplt.title(\"Accuracy\")\nplt.legend()\nplt.show()","989cd5c1":"plt.figure(figsize=(6,6))\n\nplt.plot(hist.epoch,hist.history['loss'],label = 'Training')\nplt.plot(hist.epoch,hist.history['val_loss'],label = 'validation')\n\nplt.title(\"Loss\")\nplt.legend()\nplt.show()","4ad7f07c":"x_test,y_test = next(test_ds)","824537e5":"pred_test = model.predict(x_test)\npred_test = [np.argmax(i) for i in pred_test]","b08e42a2":"test_dict = test_ds.class_indices\nli_pred = list(test_dict.keys())\nli_pred","2b0a99f0":"plt.figure(figsize=(15,10))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.imshow(x_test[i])\n    plt.xlabel(\"Actual: {}\".format(li_pred[np.argmax(y_test[i])]))\n    plt.ylabel(\"Pred: {}\".format(li_pred[pred_test[i]]))","dda573b9":"plt.imshow(Image.open(\"..\/input\/vehicle-detection-image-set\/data\/vehicles\/10.png\"));","a1e8bebe":"def predict_image(dir):\n    img = image.load_img(dir,target_size=(150,150))\n    img  = image.img_to_array(img)\n    img = np.expand_dims(img,axis=0)\n    \n    pred_img = model.predict(img)\n    \n    return li_pred[np.argmax(pred_img)]","7af57694":"print(predict_image('..\/input\/vehicle-detection-image-set\/data\/vehicles\/10.png'))","81e87e6e":"> Seeing some images","96108c23":"> importing pre-trained model","14589b25":"## Model","3fd15b1d":"> Loading Dataset","f07cd6c0":"> Visualizing predictions","33037101":"> Splitting into train test and val"}}