{"cell_type":{"9b079aec":"code","643c1c04":"code","a43e2ce8":"code","1a13f5d0":"code","523e866f":"code","ea62489a":"code","cf217377":"code","84e7b0a0":"code","884b1de5":"code","b6735992":"code","31f71406":"code","92422d53":"code","01feaf23":"code","661776f3":"code","93c22c00":"code","07bd4ff7":"code","2bb3b347":"code","a8e0dabd":"code","0c41182c":"code","ed643569":"code","7c341774":"code","f541a38f":"code","5713c5a4":"code","096503f2":"code","6dc03bee":"code","e57d748f":"code","7e807d13":"code","69f0dd3b":"code","805ea087":"code","88e9569e":"code","060364f4":"code","4374c7ab":"code","f6225906":"code","21ba7ef3":"code","a01bd4fd":"code","5d6c5478":"code","b286b323":"code","478d137d":"code","63994697":"code","ef734b4a":"code","8f47781a":"code","e1c1b5a6":"code","05dd0a0e":"code","92000b1c":"code","119fdadf":"code","6b4c6a25":"code","6133e62e":"code","7bdf5049":"code","d56e36cd":"code","5ed96b73":"code","70b14bed":"code","bb0bb00b":"code","c7f06997":"code","2a917fcf":"code","176fae20":"code","a443bca6":"code","53d2de5f":"code","d685b6aa":"code","67e0e277":"code","e0625092":"code","94058603":"code","84255a2e":"code","2327082e":"code","45618072":"code","8714d076":"code","373e18e3":"code","d0019930":"code","7657cde4":"code","7b782d70":"code","ceeff5a3":"code","9243f91d":"code","621d1596":"code","b6d5140c":"code","4e869a96":"code","007fb147":"code","4730847f":"code","125e16ec":"markdown","97074cc4":"markdown","2095c5b4":"markdown","b01e4b9b":"markdown","f98eb51c":"markdown","3172a9f6":"markdown","c8b531e2":"markdown","e8fa4be4":"markdown","d6d94e41":"markdown","93393643":"markdown","2133c6f2":"markdown","cd9e331f":"markdown","b3521883":"markdown","d33136e7":"markdown","26981d9d":"markdown","26ca2e37":"markdown","1cf0c74f":"markdown","6d5c568e":"markdown","2f1d18d8":"markdown","64f8e41d":"markdown","f2887462":"markdown","4acb44cd":"markdown","93a4d52d":"markdown","38684363":"markdown","97448482":"markdown","f405b6b4":"markdown","4edaebe7":"markdown","4366b716":"markdown","76b34d67":"markdown","bc2a3704":"markdown","6c7bf3d2":"markdown","f9fe98ca":"markdown","9659b066":"markdown","54635f99":"markdown","b5577d8f":"markdown","ed230fcd":"markdown","7810e230":"markdown","c9216cff":"markdown","3b18625b":"markdown","38e69a6b":"markdown","7a3a49ba":"markdown"},"source":{"9b079aec":"import numpy as np \nimport pandas as pd\n\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nsns.set()\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","643c1c04":"df = pd.read_csv('..\/input\/120-years-of-olympic-history-athletes-and-results\/athlete_events.csv')\nnoc = pd.read_csv('..\/input\/120-years-of-olympic-history-athletes-and-results\/noc_regions.csv')","a43e2ce8":"df.info()","1a13f5d0":"df.head()","523e866f":"noc.info()","ea62489a":"noc.head()","cf217377":"df['NOC'].nunique()","84e7b0a0":"df['Team'].nunique()","884b1de5":"data = pd.merge(df,noc,how='left',on='NOC')","b6735992":"summer = data.loc[data['Season']=='Summer']\nsummer.head()","31f71406":"summer.isnull().sum()","92422d53":"summer['Medal'].fillna('DNW', inplace = True)\n\nsummer = summer.drop_duplicates()","01feaf23":"summer.loc[:, ['NOC', 'Team']].drop_duplicates()['NOC'].value_counts().head(10)","661776f3":"summer.loc[summer['NOC']=='SWE']['Team'].unique()","93c22c00":"summer.loc[summer['NOC']=='USA']['Team'].unique()","07bd4ff7":"summer.loc[summer['region'].isnull(),['NOC', 'Team']].drop_duplicates()","2bb3b347":"summer['region'] = np.where(summer['NOC']=='SGP', 'Singapore', summer['region'])\nsummer['region'] = np.where(summer['NOC']=='ROT', 'Refugee Olympic Athletes', summer['region'])\nsummer['region'] = np.where(summer['NOC']=='TUV', 'Tuvalu', summer['region'])\nsummer['region'] = np.where(summer['NOC']=='UNK', 'Unknown', summer['region'])","a8e0dabd":"summer.drop(['notes','Team'], axis = 1 , inplace = True)\nsummer.rename(columns = {'region':'Country'}, inplace = True)","0c41182c":"summer.loc[:, ['NOC', 'Country']].drop_duplicates()['NOC'].value_counts().head()","ed643569":"summer[['Year','City']].drop_duplicates().sort_values('Year')","7c341774":"country_dict = {'Athina':'Greece',\n                'Paris':'France',\n                'St. Louis':'USA',\n                'London':'UK',\n                'Stockholm':\"Sweden\",\n                'Antwerpen':'Belgium',\n                'Amsterdam':'Netherlands',\n                'Los Angeles':'USA',\n               'Berlin':'Germany',\n                'Helsinki':'Finland',\n                'Melbourne':'Australia',\n                'Roma':'Italy',\n                'Tokyo':'Japan',\n                'Mexico City':'Mexico',\n                'Munich':'Germany',\n                'Montreal':'Canada',\n                'Moskva':'Russia',\n                'Seoul':'South Korea',\n               'Barcelona':'Spain',\n               'Atlanta':'USA',\n               'Sydney':'Australia',\n               'Beijing':'China',\n               'Rio de Janeiro':'Brazil'}","f541a38f":"summer['Host_Country']=summer['City'].map(country_dict)\nsummer.head()","5713c5a4":"plt.figure(figsize=(12,8))\nsummer.groupby('Year')['Country'].nunique().plot(kind='bar',color='lightseagreen')\nplt.xticks(rotation = 60)\nplt.ylabel(\"Number of Participating Countries\")\nplt.title(\"Countries at the Summer Olympic Games\")\n#plt.savefig('country_by_year')","096503f2":"plt.figure(figsize=(14,14))\nplt.subplot(2,1,1)\nsummer.groupby('Year')['ID'].nunique().plot(color='k',marker='o')\nplt.ylabel(\"Total Number of Athletes\")\nplt.title(\"Athletes at the Summer Olympic Games\")\nplt.subplot(2,1,2)\nsummer.loc[summer['Sex']=='M'].groupby('Year')['ID'].nunique().plot(color='b',marker='o',label='Male Athletes')\nsummer.loc[summer['Sex']=='F'].groupby('Year')['ID'].nunique().plot(color='r',marker='o',label='Female Athletes')\nplt.ylabel(\"Number of Athletes\")\nplt.legend(loc='upper left')\nplt.title(\"Athletes at the Summer Olympic Games by Sex\")","6dc03bee":"most_part = summer.groupby('NOC').nunique()[['Year','NOC']].sort_values('Year',ascending=False).head(20)\nmost_part.plot(y='Year',kind='barh',legend=None,figsize=(6,8),color=sns.cubehelix_palette(20,start=3,rot=-.25,reverse=True))\nplt.gca().invert_yaxis()\nplt.xticks(rotation=60)\nplt.xlabel('NOC')\nplt.ylabel('Number of Editions')\nplt.title('Countries with Most Participation')","e57d748f":"plt.figure(figsize=(6,6))\nhosts = summer[['Year','Host_Country']].drop_duplicates()\nsns.countplot(y='Host_Country',data=hosts,order = hosts['Host_Country'].value_counts().index,\n              palette=sns.cubehelix_palette(20,start=3,rot=-.25,reverse=True))\nplt.xlabel('')","7e807d13":"medals = summer.loc[summer['Medal']!='DNW']\n\nmedals.head()","69f0dd3b":"medals['Medal_Won'] = 1\nteam_events = pd.pivot_table(medals,\n                            index = ['Country', 'Year', 'Event'],\n                                    columns = 'Medal',\n                                    values = 'Medal_Won',\n                                    aggfunc = 'sum',\n                                     fill_value = 0).reset_index()\n\nteam_events = team_events.loc[team_events['Gold'] > 1, :]\n\nteam_sports = team_events['Event'].unique()\n\nteam_sports","805ea087":"team_sports = list(set(team_sports) - set([\"Swimming Women's 100 metres Freestyle\",\" Swimming Men's 50 metres Freestyle\",\n                                           \"Gymnastics Women's Balance Beam\",\"Gymnastics Men's Horizontal Bar\"]))","88e9569e":"medals['Team_Event'] = np.where(medals.Event.map(lambda x: x in team_sports),1,0)\nmedals['Individual_Event'] = np.where(medals.Team_Event,0,1)","060364f4":"medals_tally = medals.groupby(['Year', 'NOC', 'Country','Sport','Event', 'Medal'])[['Medal_Won', 'Team_Event','Individual_Event']].agg('sum').reset_index()\n\nmedals_tally['Medal_Count'] = medals_tally['Medal_Won']\/(medals_tally['Team_Event']+medals_tally['Individual_Event'])","4374c7ab":"medals_tally['Sex'] = 'M'\nmedals_tally.loc[medals_tally['Event'].str.contains('Women'),'Sex']='F'\n\nmedals_tally.tail()","f6225906":"top_countries = medals_tally.groupby(['Country'])['Medal_Count'].sum().reset_index().sort_values('Medal_Count',ascending=False)\n\ntop_countries.head(10).plot(kind='bar',y='Medal_Count',x='Country',legend=None,figsize=(10,6),color=sns.cubehelix_palette(10,reverse=True))\nplt.xticks(rotation=60)\nplt.xlabel('Country')\nplt.ylabel('Medals')\nplt.title('Medals by Country')","21ba7ef3":"plt.figure(figsize=(14,14))\nplt.subplot(2,1,1)\nmedals_tally.groupby('Year')['Event'].nunique().plot(color='k',marker='o')\nplt.ylabel(\"Number of Events\")\nplt.title(\"Number of Events at the Summer Olympic Games\")\nplt.subplot(2,1,2)\nmedals_tally.loc[medals_tally['Sex']=='M'].groupby('Year')['Event'].nunique().plot(marker='o',label='Events for Male Athletes')\nmedals_tally.loc[medals_tally['Sex']=='F'].groupby('Year')['Event'].nunique().plot(color='r',marker='o',label='Events for Female Athletes')\nplt.ylabel(\"Number of Events\")\nplt.legend(loc='upper left')\nplt.title(\"Number of Events at the Summer Olympic Games by Sex\")","a01bd4fd":"topw = medals_tally.loc[medals_tally['Sex']=='F'].groupby(['Country'])['Medal_Count'].sum().reset_index().sort_values('Medal_Count',ascending=False)\ntopm = medals_tally.loc[medals_tally['Sex']=='M'].groupby(['Country'])['Medal_Count'].sum().reset_index().sort_values('Medal_Count',ascending=False)\n","5d6c5478":"topnew = medals_tally.loc[medals_tally['Year']>1984].groupby(['Country'])['Medal_Count'].sum().reset_index().sort_values(\n    'Medal_Count',ascending=False)\n\ntopold = medals_tally.loc[medals_tally['Year']<=1984].groupby(['Country'])['Medal_Count'].sum().reset_index().sort_values('Medal_Count',ascending=False)\n","b286b323":"fig, ((ax1, ax2),(ax3,ax4)) = plt.subplots(nrows=2, ncols=2)\n\ntopw.head(10).plot(kind='bar',y='Medal_Count',x='Country',legend=None,figsize=(18,12),color=sns.color_palette(\"YlOrRd_d\"),ax=ax1)\nax1.set_xticklabels(labels= topw.head(10)['Country'],rotation=60)\nax1.set_xlabel('Country')\nax1.set_ylabel('Medals Won by Women')\nax1.set_title('Medals by Country (Women)')\ntopm.head(10).plot(kind='bar',y='Medal_Count',x='Country',legend=None,figsize=(18,12),color=sns.color_palette(\"Blues_d\"),ax=ax2)\nax2.set_xticklabels(labels= topw.head(10)['Country'],rotation=60)\nax2.set_xlabel('Country')\nax2.set_ylabel('Medals Won by Men')\nax2.set_title('Medals by Country (Men)')\ntopnew.head(10).plot(kind='bar',y='Medal_Count',x='Country',legend=None,figsize=(18,12),color=sns.color_palette(\"YlOrRd_d\"),ax=ax3)\nax3.set_xticklabels(labels= topnew.head(10)['Country'],rotation=60)\nax3.set_xlabel('Country')\nax3.set_ylabel('Medals')\nax3.set_title('Medals by Country (1988 Onwards)')\ntopold.head(10).plot(kind='bar',y='Medal_Count',x='Country',legend=None,figsize=(18,12),color=sns.color_palette(\"Blues_d\"),ax=ax4)\nax4.set_xticklabels(labels= topold.head(10)['Country'],rotation=60)\nax4.set_xlabel('Country')\nax4.set_ylabel('Medals Won by Men')\nax4.set_title('Medals by Country (Before 1988)')\nfig.subplots_adjust(hspace=0.5)\n","478d137d":"best_countries = ['USA','China','Russia','Germany','Australia','UK']","63994697":"best_recent = medals_tally.loc[(medals_tally['Country'].map(lambda x: x in best_countries))&(medals_tally['Year']>=1988)].groupby(['Country','NOC','Sport','Sex','Event','Medal'])['Medal_Count'].sum().reset_index()","ef734b4a":"best_recent.head()","8f47781a":"pd.pivot_table(best_recent,\n              index = 'Sport',\n              columns = 'Country',\n              values = 'Medal_Count',\n              aggfunc = 'sum',\n              fill_value = 0,\n              margins = True).sort_values('All', ascending = False)[1:].head(20)\n","e1c1b5a6":"medals_by_type = pd.pivot_table(best_recent,\n              index = 'Country',\n              columns = 'Medal',\n              values = 'Medal_Count',\n              aggfunc = 'sum',\n              fill_value = 0,\n              margins = True).loc[:, ['Gold', 'Silver', 'Bronze']]\nmedals_by_type.head()","05dd0a0e":"gsb = ['gold','silver','sienna']\n\nmedals_by_type[:6].plot(kind = 'bar', stacked = True, figsize = (10,7),color=sns.color_palette(gsb) )\nplt.xticks(rotation=0)\nplt.ylabel('Medal Count')\nplt.xlabel('Country')\nplt.title('Medals Breakdown by Country in the Recent Years')","92000b1c":"team_size = summer.loc[(summer['Year']>1980)&(summer['Country'].map(lambda x: x in best_countries))].drop_duplicates().groupby(['Year', 'Country']).ID.count().reset_index(name='Team Size')","119fdadf":"team_size.head(10)","6b4c6a25":"fig, ((ax1, ax2),(ax3,ax4),(ax5,ax6)) = plt.subplots(nrows=3, ncols=2)\n\nteam_size.loc[team_size['Country']=='USA'].plot(y='Team Size',x='Year',\n                                                label='Team Size',figsize=(18,20),color='k',marker='o',ax=ax1)\nmedals_tally.loc[(medals_tally['Year']>1980)&(medals_tally['Country']=='USA')].groupby('Year').sum().plot(y='Medal_Count',\n                                                label='Medals',figsize=(18,20),color='b',marker='o',ax=ax1)\nax1.set_xlabel('Year')\nax1.set_ylabel('Team Size\/Medals')\nax1.set_title('USA')\nteam_size.loc[team_size['Country']=='Russia'].plot(y='Team Size',x='Year',\n                                                label='Team Size',figsize=(18,20),color='k',marker='o',ax=ax2)\nmedals_tally.loc[(medals_tally['Year']>1980)&(medals_tally['Country']=='Russia')].groupby('Year').sum().plot(y='Medal_Count',\n                                                label='Medals',figsize=(18,20),color='purple',marker='o',ax=ax2)\nax2.set_xlabel('Year')\nax2.set_ylabel('Team Size\/Medals')\nax2.set_title('Russia')\nteam_size.loc[team_size['Country']=='Germany'].plot(y='Team Size',x='Year',\n                                                label='Team Size',figsize=(18,20),color='k',marker='o',ax=ax3)\nmedals_tally.loc[(medals_tally['Year']>1980)&(medals_tally['Country']=='Germany')].groupby('Year').sum().plot(y='Medal_Count',\n                                                label='Medals',figsize=(18,20),color='yellow',marker='o',ax=ax3)\nax3.set_xlabel('Year')\nax3.set_ylabel('Team Size\/Medals')\nax3.set_title('Germany')\nteam_size.loc[team_size['Country']=='China'].plot(y='Team Size',x='Year',\n                                                label='Team Size',figsize=(18,20),color='k',marker='o',ax=ax4)\nmedals_tally.loc[(medals_tally['Year']>1980)&(medals_tally['Country']=='China')].groupby('Year').sum().plot(y='Medal_Count',\n                                                label='Medals',figsize=(18,20),color='r',marker='o',ax=ax4)\nax4.set_xlabel('Year')\nax4.set_ylabel('Team Size\/Medals')\nax4.set_title('China')\nteam_size.loc[team_size['Country']=='Australia'].plot(y='Team Size',x='Year',\n                                                label='Team Size',figsize=(18,20),color='k',marker='o',ax=ax5)\nmedals_tally.loc[(medals_tally['Year']>1980)&(medals_tally['Country']=='Australia')].groupby('Year').sum().plot(y='Medal_Count',\n                                                label='Medals',figsize=(18,20),color='lightseagreen',marker='o',ax=ax5)\nax5.set_xlabel('Year')\nax5.set_ylabel('Team Size\/Medals')\nax5.set_title('Australia')\nteam_size.loc[team_size['Country']=='UK'].plot(y='Team Size',x='Year',\n                                                label='Team Size',figsize=(18,20),color='k',marker='o',ax=ax6)\nmedals_tally.loc[(medals_tally['Year']>1980)&(medals_tally['Country']=='UK')].groupby('Year').sum().plot(y='Medal_Count',\n                                                label='Medals',figsize=(18,20),color='royalblue',marker='o',ax=ax6)\nax6.set_xlabel('Year')\nax6.set_ylabel('Team Size\/Medals')\nax6.set_title('UK (or GBR)')\n\n\nfig.subplots_adjust(hspace=0.3)\n","6133e62e":"medals_grouped = pd.DataFrame(medals_tally.groupby(['Year','Country'])['Medal_Count'].sum().reset_index())","7bdf5049":"host_nations = summer[['Year', 'Host_Country',  'Country']].drop_duplicates()\nhost_nations = host_nations.loc[host_nations['Host_Country'] == host_nations['Country']]\n\nhost_nations['Prev_Year'] = host_nations['Year'] - 4\nhost_nations['Next_Year'] = host_nations['Year'] + 4\n\nhost_medals = host_nations.merge(medals_grouped, left_on=['Year','Country'],right_on=['Year','Country'],how='left')\nhost_medals.rename(columns = {'Medal_Count':'Medal_Count_Host'},inplace=True)\n\nhost_medals = host_medals.merge(medals_grouped, left_on=['Prev_Year','Country'],right_on=['Year','Country'],how='left')\nhost_medals.drop('Year_y',axis=1,inplace=True)\nhost_medals.rename(columns = {'Year_x': 'Year','Medal_Count':'Medal_Count_Prev'},inplace=True)\n\nhost_medals = host_medals.merge(medals_grouped, left_on=['Next_Year','Country'],right_on=['Year','Country'],how='left')\nhost_medals.drop('Year_y',axis=1,inplace=True)\nhost_medals.rename(columns = {'Year_x': 'Year','Medal_Count':'Medal_Count_Next'},inplace=True)\n\nhost_medals.head()\n","d56e36cd":"host_medals.drop(['Prev_Year','Next_Year'],axis=1,inplace=True)\nhost_medals = host_medals.sort_values('Year')","5ed96b73":"host_medals","70b14bed":"gdp = pd.read_excel('..\/input\/world-gdp\/world_gdp.xls',skiprows=3)\ngdp.head()","bb0bb00b":"gdp.columns","c7f06997":"gdp = gdp[['Country Name','1988', '1992', '1996', '2000', '2004','2008','2012', '2016']]\ngdp.rename(columns={'Country Name':'Country'},inplace=True)\ngdp.tail()","2a917fcf":"gdp = pd.melt(gdp, \n            id_vars='Country', \n            value_vars=list(gdp.columns[1:]), \n            var_name='Year', \n            value_name='GDP')\ngdp.sort_values(['Country','Year'],ascending = [True,True],inplace=True)\ngdp.head()","176fae20":"gdp['Year'] = gdp['Year'].astype(int)\n\nset(medals_tally['Country']) - set(gdp['Country'])","a443bca6":"set(gdp['Country']) - set(medals_tally['Country'])","53d2de5f":"to_replace = ['Bahamas, The','Egypt, Arab Rep.','Iran, Islamic Rep.',\"Cote d'Ivoire\",'Kyrgyz Republic','North Macedonia',\n             'Korea, Dem. People\u2019s Rep.','Russian Federation','Slovak Republic','Korea, Rep.','Syrian Arab Republic',\n              'Trinidad and Tobago','United Kingdom','United States','Venezuela, RB','Virgin Islands (U.S.)']\n            \n\nnew_countries =   ['Bahamas','Egypt', 'Iran', 'Ivory Coast','Kyrgyzstan','Macedonia','North Korea','Russia','Slovakia',\n                   'South Korea','Syria','Trinidad','UK','USA','Venezuela','Virgin Islands, US']\n\ngdp.replace(to_replace,new_countries,inplace=True)","d685b6aa":"medals_by_country = medals_tally.loc[medals_tally['Year']>1984].groupby(['Year','NOC','Country'])['Medal_Count'].sum().reset_index()\nmedals_by_country.head()","67e0e277":"medals_tally_gdp = medals_by_country.merge(gdp,\n                                   left_on = ['Year', 'Country'],\n                                   right_on = ['Year', 'Country'],\n                                   how = 'left')","e0625092":"event_yrs = [1988,1992,1996,2000,2004,2008,2012,2016]\ntw_gdp = [165.6,254.2,358.7,481.0,605.1,804.8,984.4,1132.9]\ntw_dict =dict(zip(event_yrs,tw_gdp))\n\nmedals_tally_gdp.loc[medals_tally_gdp.Country=='Taiwan','GDP'] = medals_tally_gdp.loc[medals_tally_gdp.Country=='Taiwan','Year'].map(tw_dict)","94058603":"medals_tally_gdp.isnull().sum()\/medals_tally_gdp.count()","84255a2e":"team_size = summer.loc[summer.Year >= 1988].drop_duplicates().groupby(['Year', 'Country']).ID.count().reset_index(name='Team_Size')","2327082e":"train = medals_tally_gdp.merge(team_size,left_on=['Year','Country'],right_on=['Year','Country'],how='left')\ntrain.head()","45618072":"pop = pd.read_csv('..\/input\/countries-population\/WorldPopulation.csv',\n                  usecols=['Country','1988','1992','1996','2000','2004','2008','2012','2016'])\n\npop.head()","8714d076":"pop = pd.melt(pop,\n              id_vars='Country', \n            value_vars=list(pop.columns[1:]), \n            var_name='Year', \n            value_name='Population')\n\npop['Year'] = pop['Year'].astype(int)","373e18e3":"train= train.merge(pop,on=['Year','Country'],how='left')\n\ntrain.head()","d0019930":"sns.pairplot(train,vars=['Medal_Count','GDP','Team_Size','Population'])","7657cde4":"train['Log_GDP'] = train['GDP'].apply(np.log)\ntrain['Log_Population'] = train['Population'].apply(np.log)\ntrain['Log_GDP_PC'] = train['Log_GDP'] - train['Log_Population'] #because log(gdp\/pop) = log(gdp) - log(pop)","7b782d70":"corr = train.loc[train['Medal_Count']>10.0,['Log_GDP', 'Medal_Count']].corr()['Medal_Count'][0]\n\nplt.plot(train.loc[train['Medal_Count']>10.0,  'Log_GDP'], \n     train.loc[train['Medal_Count']>10.0,  'Medal_Count'] , \n     linestyle = 'none', \n     marker = 'o',\n    color = 'navy',\n    alpha = 0.6)\nplt.xlabel('Log(GDP)')\nplt.ylabel('Number of Medals')\nplt.title('Log(GDP) versus medal tally')\nplt.text(22.7, \n     115,\n     \"Correlation = \" + str(corr))","ceeff5a3":"corr = train.loc[train['Medal_Count']>10.0,['Log_Population', 'Medal_Count']].corr()['Medal_Count'][0]\n\nplt.plot(train.loc[train['Medal_Count']>10.0,  'Log_Population'], \n     train.loc[train['Medal_Count']>10.0,  'Medal_Count'] , \n     linestyle = 'none', \n     marker = 'o',\n    color = 'lightseagreen',\n    alpha = 0.9)\nplt.xlabel('log(Population)')\nplt.ylabel('Number of Medals')\nplt.title('log(Population) versus medal tally')\nplt.text(14.8, \n     120,\n     \"Correlation = \" + str(corr))","9243f91d":"corr = train.loc[train['Medal_Count']>10.0,['Log_GDP_PC', 'Medal_Count']].corr()['Medal_Count'][0]\n\nplt.plot(train.loc[train['Medal_Count']>10.0,  'Log_GDP_PC'], \n     train.loc[train['Medal_Count']>10.0,  'Medal_Count'] , \n     linestyle = 'none', \n     marker = 'o',\n    alpha = 0.9)\nplt.xlabel('Logarithm of GDP Per Capita')\nplt.ylabel('Number of Medals')\nplt.title('log(GDP Per Capita) versus medal tally')\nplt.text(5.8, \n     117,\n     \"Correlation = \" + str(corr))","621d1596":"corr = train.loc[train['Medal_Count']>10.0,['Team_Size', 'Medal_Count']].corr()['Medal_Count'][0]\n\nplt.plot(train.loc[train['Medal_Count']>10.0,  'Team_Size'], \n     train.loc[train['Medal_Count']>10.0,  'Medal_Count'] , \n     linestyle = 'none', \n     marker = 'o',\n         color='r',\n    alpha = 0.8)\nplt.xlabel('Team Size')\nplt.ylabel('Number of Medals')\nplt.title('Team Size versus medal tally')\nplt.text(50,120,\n     \"Correlation = \" + str(corr))","b6d5140c":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error as mse\nimport statsmodels.formula.api as smf","4e869a96":"#train models on data upto 2012\nX_tr = train.loc[train.Year != 2016].dropna()[['Team_Size','Log_GDP','Log_Population']]\ny_tr = train.loc[train.Year != 2016].dropna()['Medal_Count']\n#predict on 2016\nX_tst = train.loc[train.Year == 2016].dropna()[['Team_Size','Log_GDP','Log_Population']]\ny_tst = train.loc[train.Year == 2016].dropna()['Medal_Count']","007fb147":"lr = LinearRegression()\nlr.fit(X_tr,y_tr)\ny_pred = lr.predict(X_tst)\n\nlr_score = lr.score(X_tst,y_tst) #this gives the R^2 score\nlr_err = np.sqrt(mse(y_tst,y_pred)) #this gives the rms error\n\nprint('Linear Regression R^2: {}, Linear Regression RMSE: {}'.format(lr_score,lr_err))","4730847f":"OLS = smf.ols('Medal_Count ~ Team_Size + Log_GDP + Log_Population', data=train.loc[train.Year!=2016]).fit()\n\ny_ols = OLS.predict(X_tst)\nols_score = OLS.rsquared #R^2\nols_err = np.sqrt(mse(y_tst, y_ols)) #rms error\nprint('Statsmodels OLS R^2: {}, Statsmodels OLS RMSE: {}'.format(ols_score,ols_err))","125e16ec":"# Predictions\n\nLet's try to predict the medal count using the \"train\" dataframe and a linear model.","97074cc4":"# Host Nation Advantage?\n\nLet's see if hosting the games increase the number of medals.","2095c5b4":"Let's look at which countries participated in most number of games.","b01e4b9b":"So clearly the two datasets use different names for the same countries. Let's sort that out. ","f98eb51c":"Now that that is done, we don't care about the Team names, and the notes. So we'll drop those columns and rename the 'region' column as Country.","3172a9f6":"Let's see how much data is missing.","c8b531e2":"## GDP Data\n\nI use data from [World Bank](https:\/\/data.worldbank.org\/indicator\/NY.GDP.MKTP.CD?locations=US)","e8fa4be4":"That doesn't look right! Let's check what these teams are for a couple of countries individually.","d6d94e41":"Looks like participation increased more or less steadily except between 1972 and 1984. We know that 65 countries lead by the United States boycotted the 1980 olympics. Here's a [Wikipedia link](https:\/\/en.wikipedia.org\/wiki\/1980_Summer_Olympics_boycott) with the basic information.\n\nIt may be interesting to look at games statistics before and after 1980 to see how much more participation has changed which countries win medals later.\n\nLet us now explore athlete participation in each edition","93393643":"Alright, now let's take a closer look at the NOC code vs Team discrepency.","2133c6f2":"## Population Data\n\nJust like GDP, population data may be important. Very small countries probably won't be able to send many athletes and therefore are less likely to win a lot of medals. [Here](https:\/\/www.kaggle.com\/centurion1986\/countries-population) is where I obtained the Population Data.","cd9e331f":"Two people coming first jointly is not a concept unheard of, so it is important to go through the team events list to see if there are any such events accidentally listed here. After doing that, we identify the following events:\n\n1. Swimming Women's 100 metres Freestyle\n2. Swimming Men's 50 metres Freestyle\n3. Gymnastics Women's Balance Beam\n4. Gymnastics Men's Horizontal Bar\n\nWe need to drop those from the team events list and proceed from there.","b3521883":"# Visual Exploration\n\nNow that we have our desired dataset, we can start exploring it further.\n\n### Participation\nLet's see how many countries participated in each edition.","d33136e7":"If we compare this to the plots for medals won by men and women, we see that China and Australia have made it into the top ten both in the total number of medals won by women and in the number of medals won after 1980.","26981d9d":"That wasn't very insightful, but we don't need the teams data as long as we have the country names from the NOC codes. Although we know that some country names were missing from the NOC regions data. Let's see which ones those are.","26ca2e37":"# Closer look at the top countries\n\nLet us take a closer look at the countries who won the most medals in recent years:\n\n1. USA\n2. Russia\n3. Germany\n4. China\n5. Australia\n6. UK","1cf0c74f":"Taiwan's GDP data is missing from the file. I'm going to manually insert it.","6d5c568e":"Let's look at the total number of events for men and women over time.","2f1d18d8":"## Loading the data","64f8e41d":"About 4.3%. Not too bad.","f2887462":"### Medals\n\nWe have seen the participation data. Now let's look at information about medals. We can simply count the number of medals against each country to see which countries won the most medals and so on.","4acb44cd":"\nSo lots of missing data in the Age, Height, Weight and Medal columns. For now not much can be done about the first three, but the NaN value in the medals section simply means that the athlete did not win a medal, so I will replaces the NaNs with a 'DNW' for Did Not Win.","93a4d52d":"## Conclusion\n\nLooks like we can make decent predictions based on a simple linear model with Team Size, GDP, and Population.\n\nThe R^2 value signifies the percetage of variation in the medals tally that is accounted for by the model.\nThe RMS error implies that the models can predict the medals tally of a country within about 10-11 medals. I would say that is not bad given the simplicity of the model.","38684363":"I am only interested in the Summer Olympics for now, so I will extract data containing information only about the summer games.","97448482":"Looking at the distribution of GDP and Population data, it might make sense to put them on a logarithmic scale, if we are to use a linear model.","f405b6b4":"For example, it looks like three NOC codes do not have the corresponding country name in the noc dataset.","4edaebe7":"But before we continue, we need to correct one thing. We obtained the medals table by counting the number of athletes who have won medals. However, the existence of team events mean that we are miscounting the number of medals per country. Each event should only count once. We need to correct this by first identifying team events, then adjusting the medals count accordingly.","4366b716":"# Initial Exploration\nFirst let's take a look at the data available.\n\n### Content\nThe file athlete_events.csv contains 271116 rows and 15 columns. Each row corresponds to an individual athlete competing in an individual Olympic event (athlete-events). The columns are:\n\n1. ID - Unique number for each athlete\n2. Name - Athlete's name\n3. Sex - M or F\n4. Age - Integer\n5. Height - In centimeters\n6. Weight - In kilograms\n7. Team - Team name\n8. NOC - National Olympic Committee 3-letter code\n9. Games - Year and season\n10. Year - Integer\n11. Season - Summer or Winter\n12. City - Host city\n13. Sport - Sport\n14. Event - Event\n14. Medal - Gold, Silver, Bronze, or NA\n\nThe file NOC_regions.csv contains 230 rows and 3 columns. Each row corresponds to a different country. The columns are:\n\n1. NOC - National Olympic Committee three letter code.\n2. Region - Country name.\n3. Notes.","76b34d67":"## Importing Necessary Modules","bc2a3704":"All right!. Now let's see which countries won the most medals in total.","6c7bf3d2":"## Initial Exploration\n\nLet's look at the datasets and see what information we can gather at first glance, such as missing data, any possible discrepancies etc.","f9fe98ca":"Looks like it does make a difference.\n\nAlso, the 1906 tally confused me, so I looked it up. Here is an excerpt from [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/1906_Intercalated_Games):\n*The 1906 Intercalated Games or 1906 Olympic Games was an international multi-sport event that was celebrated in Athens, Greece. They were at the time considered to be Olympic Games and were referred to as the \"Second International Olympic Games in Athens\" by the International Olympic Committee. Whilst medals were distributed to the participants during these games, the medals are not officially recognized by the IOC today and are not displayed with the collection of Olympic medals at the Olympic Museum in Lausanne, Switzerland.*","9659b066":"Looks like there were no women in the 1896 and it took a while for women to start participating in significant numbers, which is not surprising given world history in general.","54635f99":"Alright, so we know the missing ones are 'SGP' which is Singapore, 'ROT' which is 'Refugee Olympic Athletes', 'TUV' which is Tuvalu, and 'UNK' or Unknown. Let's manually replace that in the regions columns.","b5577d8f":"All right, that is odd. Looks like there are only 230 NOC codes in the athletes dataset, which matches the number in the noc dataset, but 1184 team names. We'll sort that out in a bit, after we have joined the two dataframes on the 'NOC' column.","ed230fcd":"Now let's aggregate the medals tally by year and country and merge that with the gdp data.","7810e230":"All right, no more duplicates. Let's add a host country column.","c9216cff":"# Can we make predictions?\n\nTo make a simple model for predictions, we can try to come up with a relationship between team size and medals won. However, there is a lot more nuance. For example, not every sport is played in every version of the games. E.g. in 2020, Karate is being introduced for the first time. But I'm more interested in making a simple model to predict the total number of medals per country. One other thing that could be useful is how much money each country spends on sports infrastructure. I looked for data related to that, and the closest I can find is GDP over the years. I'm going to use GDP data from the World Bank for the year, and see how that affects things. Another thing that may be intersting to see is the population data. I imagine on an average, countries with a larger populatoin will be able to send more athletes, and therefore win more medals. So I will obtain year-wise population data as well.","3b18625b":"### Hosts\n\nLet's see which countries hosted the summer games.","38e69a6b":"Looks like much like the number of participants, there was a significant disparity in the number of medals or events between men and women. So the countries which have done well in the recent years will probably have more medals won by women than those who have done well before the late 1980s. \nLet's see by viewing the top 10 countries before and after 1988 and the top 10 countries when it comes to medals won by male and female athletes.","7a3a49ba":"## Team size vs medals won\n\nIntuitively, one would think that teams with a higher number of participating athletes  will have a higher medal count. Let's see if that's true for the top 6 countries."}}