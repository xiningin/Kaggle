{"cell_type":{"888b39e4":"code","26b9874a":"code","f7a59bef":"code","22ee8dc7":"code","9f595eb3":"code","5589b7ef":"code","14ba2cb3":"code","eaa5c102":"code","b24ca667":"code","b360711a":"code","abb4d767":"code","85b8cefa":"code","e2f0cb26":"code","7d0d8a24":"code","d6235b3c":"code","398b3722":"code","73beb19a":"code","5e1cf475":"code","afdf248e":"markdown","92481e4d":"markdown","861c5793":"markdown","a08f7c1b":"markdown","5c0b10e5":"markdown","213abc65":"markdown","5080446c":"markdown","2c3d05d6":"markdown","7155f9a1":"markdown","d8b5c03a":"markdown","2a6cefb1":"markdown","4b3981df":"markdown","5e026018":"markdown","5fa155af":"markdown","70b5a519":"markdown","d5b1ae6b":"markdown","76c72820":"markdown","76193b89":"markdown"},"source":{"888b39e4":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR","26b9874a":"graduation_data=pd.read_csv(\"..\/input\/graduate-admissions\/Admission_Predict.csv\")\ngraduation_data.head()","f7a59bef":"#Getting all the information of our dataset\ngraduation_data.info()","22ee8dc7":"#We will find out mean,max,count of all the columns in our dataframe\ngraduation_data.describe()","9f595eb3":"graduation_data.drop(['Serial No.'],axis=1,inplace=True)\n\n#Now we will be declare features and output\nfeature_X=graduation_data.drop(['Chance of Admit '],axis=1)\nfeature_Y=graduation_data['Chance of Admit ']","5589b7ef":"feature_X.head()","14ba2cb3":"#Initialize sklearn MinMaxScalar\nscaler =MinMaxScaler()\nfeature_to_normalize=feature_X.values\nnormalized_feature=scaler.fit_transform(feature_to_normalize)\n# Create dataframe of normalized feature\ndf_normalized = pd.DataFrame(normalized_feature)\ndf_normalized.columns=feature_X.columns","eaa5c102":"df_normalized.head()","b24ca667":"f,ax = plt.subplots(figsize=(14, 14))\nsns.heatmap(df_normalized.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)","b360711a":"df_normalized.drop(['TOEFL Score','CGPA'],axis=1,inplace=True)","abb4d767":"x=df_normalized\ny=feature_Y","85b8cefa":"X_train,X_test,Y_train,Y_test=train_test_split(x,y,test_size=0.20,shuffle='false')","e2f0cb26":"model_LR=LinearRegression()\nmodel_LR.fit(X_train,Y_train)\n\nprediction=model_LR.predict(X_test)\nprint(f\"Mean Square Error using Linear Regressor is {(np.sqrt(mean_squared_error(Y_test, prediction)))}\")","7d0d8a24":"from sklearn.tree import DecisionTreeRegressor\n\nmodel_DT=DecisionTreeRegressor()\nmodel_DT.fit(X_train,Y_train)\n\nprediction=model_DT.predict(X_test)\nprint(f\"Mean Square Error using Decison Tree is {(np.sqrt(mean_squared_error(Y_test, prediction)))}\")","d6235b3c":"model_RF=RandomForestRegressor()\nmodel_RF.fit(X_train,Y_train)\n\nprediction=model_RF.predict(X_test)\nprint(f\"Mean Square Error using RandomForestRegressor is {(np.sqrt(mean_squared_error(Y_test, prediction)))}\")","398b3722":"model_KN=KNeighborsRegressor()\nmodel_KN.fit(X_train,Y_train)\n\nprediction=model_KN.predict(X_test)\nprint(f\"Mean Square Error using Kneighbors is {(np.sqrt(mean_squared_error(Y_test, prediction)))}\")","73beb19a":"model_SVR=SVR()\nmodel_SVR.fit(X_train,Y_train)\nprediction=model_SVR.predict(X_test)\nprint(f\"Mean Square Error using SVR is {(np.sqrt(mean_squared_error(Y_test, prediction)))}\")","5e1cf475":"import pickle\n# print(os.listdir())\nfilename='admission_model.pkl'\n# pickle.dump(model_LR, open(\".\/Model\/\"+filename, 'wb'))","afdf248e":"# Graduate Admission\n\n### Hi I have been working in Machine Learning from past one year. This is my first project working with Text Data. I have been working with Image Data more\n\n### Idea behind this project is to create a model and deploy on Heroku, which will help you get idea how machine learning product can be used End-To-End.\n\n### Dataset Link and details: https:\/\/www.kaggle.com\/mohansacharya\/graduate-admissions\n\n### In this notebook, you will get basic idea of what are the steps for developing Machine Learning Model\n\n### Feel free to reach out to me: \n- Email- satish.fulwani63@gmail.com\n- Github - https:\/\/github.com\/satishf889\n\n### Below are the useful links that will help you understand Heatmap used in this notebook\n  - https:\/\/medium.com\/@rokaandy\/python-data-visualization-heatmaps-79fa7506c410","92481e4d":"### Using RandomForestRegressor","861c5793":"### Using Linear Regressor","a08f7c1b":"### Understanding and visualising data","5c0b10e5":"### Using SVR","213abc65":"### Step 6:Conclusion\n#### Model with minimum 'Mean Square Error' is best fit for our data. So we would be using Linear Regresser with 0.7 Error\n\n### We have to use this model for prediction, so we would store our model using pickle.\n\n#### Pickle Details: https:\/\/docs.python.org\/3\/library\/pickle.html","5080446c":"### Import All Dependencies","2c3d05d6":"### Using Kneighbors","7155f9a1":"### Visualize data after normalization","d8b5c03a":"#### As we can see that values of feature are very high so it is good practice to normalize the data","2a6cefb1":"### Data after normalization","4b3981df":"#### As we can see Serial number is independent column so we will remove Serial Number","5e026018":"### Using DecisionTree","5fa155af":"#### As from the above figure we can see that correlation coeffient of GRE Score, TOEFL Score and CGPA is same so we can keep one feature and remove other two","70b5a519":"### Now our data is ready to be processed ","d5b1ae6b":"### Creating Models\n#### We will be creating various models and will be using 'Mean Square Error' as measure of Accuracy","76c72820":"### Load the dataset","76193b89":"### Spliting the data in Train and Test Set"}}