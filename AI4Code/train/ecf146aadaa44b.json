{"cell_type":{"c912d12b":"code","9a91d266":"code","0fc61c96":"code","90e0e923":"code","457dc7b6":"markdown","9e9386f7":"markdown"},"source":{"c912d12b":"#detailed documentation on how to apply AUTOROC\n#https:\/\/bobrupakroy.medium.com\/pip-install-autoroc-ba4ac1514739\n\n# roc curve for logistic regression model with optimal threshol\nfrom numpy import sqrt\nfrom numpy import argmax\nfrom sklearn.datasets import make_classification\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_curve\nfrom matplotlib import pyplot\n\n# generate dataset\nX, y = make_classification(n_samples=10000, n_features=2, n_redundant=0,\n\tn_clusters_per_class=1, weights=[0.99], flip_y=0, random_state=4)\n# split into train\/test sets\ntrainX, testX, trainy, testy = train_test_split(X, y, test_size=0.5, random_state=2, stratify=y)\n\n# fit a model\nmodel = LogisticRegression(solver='lbfgs')\nmodel.fit(trainX, trainy)\n\n# predict probabilities\nyhat = model.predict_proba(testX)\n# keep probabilities for the positive outcome only\nyhat = yhat[:, 1]\n\n","9a91d266":"# calculate roc curve\nfpr, tpr, thresholds = roc_curve(testy, yhat)\n# calculate the g-mean for each threshold\ngmeans = sqrt(tpr * (1-fpr))\n# locate the index of the largest g-mean\nix = argmax(gmeans)\nprint('Best Threshold=%f, G-Mean=%.3f' % (thresholds[ix], gmeans[ix]))\n# plot the roc curve for the model\npyplot.plot([0,1], [0,1], linestyle='--', label='No Skill')\npyplot.plot(fpr, tpr, marker='.', label='Logistic')\npyplot.scatter(fpr[ix], tpr[ix], marker='o', color='black', label='Best')\n# axis labels\npyplot.xlabel('False Positive Rate')\npyplot.ylabel('True Positive Rate')\npyplot.legend()\n# show the plot\npyplot.show()","0fc61c96":"from autoroc_rupakbob import autoroc\nt, t1 = autoroc.best_threshold(testy,yhat)","90e0e923":"#There is another version that turns out to be much faster and can be used as cross-validation using Youden\u2019s J statistic\nfrom autoroc_rupakbob import autoroc\nt3= autoroc.best_threshold_YoudenJstatistic(testy,yhat)\nprint(t3)","457dc7b6":"AUC Area under the curve is a performance measurement for the classification problems at various threshold settings. and ROC is a probability curve. AUC represents the degree or measure of speratibility. It tells us how much the model is capable of distinguishing between classes. The higher the AUC the better the model is at predicting 0 & 1\nNow we cant visualize each and every time when we have to go for automation. \n\nSo this is where my customized package comes to the rescue named autoroc","9e9386f7":"Just two lines of code. That\u2019s it!"}}