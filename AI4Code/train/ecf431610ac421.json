{"cell_type":{"605aed76":"code","a657960a":"code","e13acb61":"code","bf6ab097":"code","8582e672":"code","26b259b3":"code","7abb1377":"code","aa39d20c":"code","64213766":"code","107df7c0":"code","8a14f187":"code","35da7d96":"code","5060c3cb":"code","e9340369":"code","094cfaea":"code","7ffd9785":"code","990e0e77":"code","5b35d9e7":"code","43331f3d":"code","7c35c893":"code","d60115bb":"code","2d7cdf70":"code","14dccfbc":"code","4e790675":"code","a893396d":"code","e8a74e75":"code","0d6a4d47":"code","165a95fb":"code","747a60e5":"markdown","3cf7d7a7":"markdown","09825e6a":"markdown"},"source":{"605aed76":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a657960a":"import numpy as np \nimport pandas as pd \nfrom PIL import Image\nfrom IPython.display import HTML\nimport matplotlib.pyplot as plt\n\nfrom keras.layers import Dense,Dropout,Input,MaxPooling2D,ZeroPadding2D,Conv2D,Flatten\nfrom keras.models import Sequential\nfrom keras.losses import categorical_crossentropy\nfrom keras.optimizers import Adam,SGD\nfrom keras.preprocessing.image import img_to_array,load_img,ImageDataGenerator\nfrom keras.utils import to_categorical","e13acb61":"labels=pd.read_csv('\/kaggle\/input\/dog-breed-identification\/labels.csv')\nlabels.head()","bf6ab097":"labels.shape","8582e672":"labels.info()","26b259b3":"labels.describe()","7abb1377":"unique_breeds = labels['breed'].unique()\nlen(unique_breeds)","aa39d20c":"# path of the dogs images\nimg_file='\/kaggle\/input\/dog-breed-identification\/train\/'\nlabels=labels.assign(img_path=lambda x: img_file + x['id'] +'.jpg')\nlabels.head()","64213766":"a=labels['breed'].value_counts()\npd.DataFrame(a).head()","107df7c0":"ax=pd.value_counts(labels['breed'],ascending=True).plot(kind='barh',fontsize=\"40\",title=\"Class Distribution\",figsize=(50,100))\nax.set(xlabel=\"Images per class\", ylabel=\"Classes\")\nax.xaxis.label.set_size(40)\nax.yaxis.label.set_size(40)\nax.title.set_size(60)\nplt.show()","8a14f187":"scottish_deerhound_id = labels.loc[labels.breed == \"scottish_deerhound\"].iloc[1,0]\nImage.open('\/kaggle\/input\/dog-breed-identification\/train\/'+scottish_deerhound_id+\".jpg\")","35da7d96":"top_20=list(labels['breed'].value_counts()[:20].index)\ntop_20","5060c3cb":"df=labels[labels['breed'].isin(top_20)]\ndf.head()","e9340369":"df.shape","094cfaea":"df['img_path'].values.tolist()","7ffd9785":"img_pixel=np.array([img_to_array(load_img(img,target_size=(299,299))) for img in df['img_path'].values.tolist()])\nimg_pixel\n    ","990e0e77":"img_pixel.shape","5b35d9e7":"label1=pd.get_dummies(df['breed'])\nlabel1.head()","43331f3d":"x=img_pixel\ny=label1.values#array required in algo","7c35c893":"y","d60115bb":"print(x.shape)\nprint(y.shape)","2d7cdf70":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.2)","14dccfbc":"print(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","4e790675":"train_img_gen = ImageDataGenerator(\n    rotation_range=30,\n    width_shift_range=0.2,\n    height_shift_range=0.2,\n    rescale=1.\/255,\n    shear_range=0.2,\n    zoom_range=0.2,\n    horizontal_flip=True,\n    fill_mode='nearest')\n\ntest_img_gen=ImageDataGenerator(rescale=1.\/255)","a893396d":"train_set=train_img_gen.flow(X_train,y=y_train,batch_size=32)\ntest_set=test_img_gen.flow(X_test,y=y_test,batch_size=32)","e8a74e75":"model=Sequential()\nmodel.add(Conv2D(32,kernel_size=(3,3),input_shape=(299,299,3),activation='relu',padding='same'))\n#model.add(Conv2D(32,kernel_size=(3,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2),strides=(2,2)))\nmodel.add(Flatten())\nmodel.add(Dense(64,activation='relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(20,activation='softmax'))","0d6a4d47":"model.compile(loss=categorical_crossentropy,optimizer='adam',metrics=['accuracy'])\nmodel.summary()","165a95fb":"batch_size=32\nmodel.fit_generator(\n    train_set,\n    epochs=2, steps_per_epoch=len(X_train) \/ batch_size,\n    validation_data=(np.array(X_train), np.array(y_train)), validation_steps=len(X_test) \/ batch_size)","747a60e5":"so most popular breed in dataset is scottish deerhound with 126 images.","3cf7d7a7":"label encoding of classes(dog breed)","09825e6a":"For Machine Learning Operation, we are loading the images and converting it to numpy array of pixel"}}