{"cell_type":{"e016931c":"code","70ce1b45":"code","f5a91140":"code","9c301e81":"code","474c49ab":"code","736d9b9c":"code","449e094f":"code","6751cb9a":"code","868d2fae":"code","5045c882":"code","30497839":"code","39e9c331":"code","4822ad86":"code","827c04f7":"code","d874fd10":"code","7a3dcda6":"code","ef3881a7":"code","c6a77a41":"code","f4cf7c9b":"code","534b0444":"code","547fb271":"code","5093a506":"code","0126ea02":"code","cffbb68d":"code","9ef933ca":"code","2e059fd6":"code","495d0cc3":"code","ba964e79":"code","fe26c82e":"code","48c6546d":"code","5ceaedeb":"code","ba8363f9":"code","bb24c149":"code","b3693f35":"code","d33853eb":"code","44226ff0":"code","937e019d":"code","a226ce92":"code","16591766":"code","20c4ea95":"code","3fb07a4c":"code","b1ff6dbf":"code","21bb0cd3":"code","b76228b7":"code","a1072282":"code","4a4df9ef":"code","4a203ea8":"code","e101e9f8":"code","224a12ca":"code","00dfc2ee":"code","dbfe2d2d":"code","7a57f01e":"code","675533bc":"code","fa9d1cf1":"code","5292f017":"code","ca1bfaf0":"code","20a544ba":"code","aabbbe17":"code","a62d3edc":"code","b6118318":"code","20638ba5":"code","9a66e108":"code","a4c408cc":"code","0a578065":"code","1044d2e4":"code","e80ae055":"code","247dd8cd":"code","e20efe53":"code","38deac6b":"code","5f22c15c":"code","22abd1f4":"code","493cd39f":"code","e34881cd":"code","aee9be62":"code","360924a9":"code","3326bed6":"code","d397b6e2":"code","5906e465":"code","4fbde8cc":"code","13118bcb":"code","7c2fa7aa":"code","c4a977f8":"code","23bf15ca":"code","782a5b43":"code","d955a8ee":"code","025d5d42":"code","d2e91bf3":"code","99f6f642":"code","e5be0474":"code","af052301":"code","4665d1c2":"code","10930f51":"code","8abfc14f":"code","45b7a7ae":"code","c5181c05":"code","4ce5eff6":"code","075362f4":"code","ae07dcb9":"code","c9d4a9e3":"code","c2190197":"code","74ef2c39":"code","af1da197":"code","938872ec":"code","0802e42d":"code","616f2c55":"code","5283d6b0":"code","73d94a12":"code","284278e4":"code","06f7e370":"code","1dcb1ac7":"code","91482d15":"code","c0b58dff":"code","7da9ce09":"code","68e6bf15":"code","95593c4f":"code","63e8460a":"code","54f4d59e":"code","609141bc":"code","fba0b3fd":"code","2a4af600":"code","5c14a088":"code","d949afd8":"code","b22708a9":"code","a0905f36":"code","2cc8d952":"code","99fd1b49":"code","4011306f":"code","7c8358a3":"code","276c81ad":"code","6dd407f7":"code","9af9c117":"code","e7164526":"code","412998f0":"code","487c4bef":"code","7ffa9a1a":"code","7a4f0f62":"code","4d731841":"code","b87abcb2":"code","12fe5a3b":"code","f317870c":"code","cf452b39":"code","2b164f2e":"code","dddb3d7e":"code","83e35e5f":"code","9dcecb9f":"code","93ac9246":"code","154dc95f":"code","a85902f2":"code","8e9e5815":"code","9f1e96cc":"code","d439a073":"code","173ac78d":"code","fa982ced":"code","641ee2fc":"code","746e9fcf":"code","31263886":"code","cabb41c7":"code","b36a8dc3":"code","8ac42bfe":"code","3e33baf5":"code","b6ce0453":"code","75db6bd1":"code","e1cf0938":"code","4cfc921f":"code","384de322":"code","4fad1420":"code","5b6583f6":"code","d5e71437":"code","74855874":"code","40ea8125":"code","cde2b477":"code","5ff958a0":"code","2a523940":"code","abb6813b":"code","5b878ec1":"code","c74d80b3":"code","3a72639b":"code","f7ea2cd2":"code","ac44fc72":"code","f9c5f8e9":"code","cc9f511f":"code","b88534ee":"code","2b47af3d":"code","aba0092d":"code","2f857bec":"code","cf2a2867":"code","a3f44ac1":"code","efcc653e":"code","ae1a43e7":"code","7fe739e2":"code","c4469748":"code","e52245bc":"code","bedf21a8":"code","8ea67d83":"code","f632e1bb":"code","21a19911":"code","fc44adec":"code","d33455ef":"code","2aaf18ce":"code","7a126f51":"code","f7ad9f9b":"code","de7740de":"code","bb0f4ef7":"code","5d586582":"code","557b6c34":"code","dae1c47e":"code","34f49848":"code","b76f7cca":"code","395e713a":"code","94eed944":"code","99063ecc":"code","7151d751":"code","ec407316":"code","d7aa8fb0":"code","47f654b3":"code","77c3bf54":"code","ff68e4a5":"code","c463a29b":"code","43ee840f":"code","28dd97d8":"code","a840a1a3":"code","57bb59aa":"code","215ef1da":"code","7634dbdb":"code","71254c72":"code","9de93c68":"code","edb8f4eb":"code","384641bb":"code","80fb49df":"code","c5619e7b":"code","924c3ab2":"markdown","d57b33b8":"markdown","dbecff83":"markdown","53faba00":"markdown","c86c7de3":"markdown","3a97835c":"markdown","6724114f":"markdown","2376f5db":"markdown","ff5bc77a":"markdown","9fdcbe79":"markdown","71409fef":"markdown","b7673db2":"markdown","43f9b139":"markdown","58423a23":"markdown"},"source":{"e016931c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","70ce1b45":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom sklearn import preprocessing \nfrom category_encoders import *\nfrom sklearn.preprocessing import LabelEncoder\n%matplotlib inline\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import datasets, linear_model, metrics\nfrom sklearn.metrics import  confusion_matrix\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report,confusion_matrix","f5a91140":"df = pd.read_csv('..\/input\/star-type-classification\/Stars.csv')\ndf","9c301e81":"df.head()","474c49ab":"df.tail()","736d9b9c":"df.dtypes","449e094f":"df.columns","6751cb9a":"df.shape","868d2fae":"df.size","5045c882":"df.info()","30497839":"df.describe()","39e9c331":"df.isnull().sum()","4822ad86":"df.duplicated().sum()","827c04f7":"df.skew()","d874fd10":"df.corr()","7a3dcda6":"plt.figure(figsize=(16,9))\nx = df.drop(['Color','Spectral_Class'],axis = 1)\nax = sns.heatmap(df.corr(),annot = True,cmap = 'viridis')\nplt.show()","ef3881a7":"! pip install Autoviz","c6a77a41":"! pip install xlrd","f4cf7c9b":"from autoviz.AutoViz_Class import AutoViz_Class\nAV = AutoViz_Class()\ndf_av = AV.AutoViz('..\/input\/star-type-classification\/Stars.csv')","534b0444":"df['Color'].value_counts()","547fb271":"a = ['Blue White','Blue white','Blue-White','white','Whitish','Yellowish White','yellowish','Yellowish','White-Yellow','Pale yellow orange','Orange-Red']\nfor i in range(len(df['Color'])):\n    if df['Color'][i] in a[:3]:\n        df['Color'][i] = 'Blue-white'\n    elif df['Color'][i] in a[3:5]:\n        df['Color'][i] = 'White'\n    elif df['Color'][i] in a[5:9]:\n        df['Color'][i] = 'yellow-white'\n    elif df['Color'][i] in a[9:]:\n        df['Color'][i] = 'Orange'","5093a506":"df['Color'].value_counts()","0126ea02":"sns.countplot(x = 'Color',data = df)\nplt.show()","cffbb68d":"df['Spectral_Class'].value_counts()","9ef933ca":"sns.countplot(x='Spectral_Class', data = df)\nplt.show()","2e059fd6":"df['Type'].value_counts()","495d0cc3":"sns.countplot(x='Type', data = df)\nplt.show()","ba964e79":"fig = px.histogram(df, 'Temperature',             \n                   color='Color',\n                   title=\"<b>Average Temparature by color<\/b>\")\n\nfig.add_vline(x=df['Temperature'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()\n\n# all stars with red color are below 5000 temparture \n# only 6 blue stars outof 56 are lessthan 10k temparature \n# only 6 blue white stars ouof 41 are lessthan 10k temparature\n# A Blue Star has highest temparature among all","fe26c82e":"fig = px.histogram(df, 'L',             \n                   color='Color',\n                   title=\"<b>Average Relative Luminocity by color<\/b>\")\n\nfig.add_vline(x=df['L'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()\n\n# around 160 stars outof 240 have less than 100k  Relative Luminocity\n# A blue and a red star has greather Relative Luminocity among all","48c6546d":"fig = px.histogram(df, 'R',             \n                   color='Color',\n                   title=\"<b>Average Relative Radius by color<\/b>\")\n\nfig.add_vline(x=df['R'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()\n\n# almost 200 outof 240 stars have relative radius between 0-1\n# A blue star is bigger among all","5ceaedeb":"fig = px.histogram(df, 'A_M',             \n                   color='Color',\n                   title=\"<b>Average Absolute Magnitude by color<\/b>\")\n\nfig.add_vline(x=df['A_M'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()\n# Couple of red stars has highest Absolute Magnitude am","ba8363f9":"fig = px.histogram(df, 'Temperature',             \n                   color='Spectral_Class',\n                   title=\"<b>Average Temparature by Spectral_Class<\/b>\")\n\nfig.add_vline(x=df['Temperature'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()\n\n# all stars with red color are below 5000 temparture \n# only 6 blue stars outof 56 are lessthan 10k temparature \n# only 6 blue white stars ouof 41 are lessthan 10k temparature\n# A Blue Star has highest temparature among all","bb24c149":"fig = px.histogram(df, 'L',             \n                   color='Spectral_Class',\n                   title=\"<b>Average Spectral_Class by color<\/b>\")\n\nfig.add_vline(x=df['L'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()\n","b3693f35":"fig = px.histogram(df, 'R',             \n                   color='Spectral_Class',\n                   title=\"<b>Average Spectral_Class by color<\/b>\")\n\nfig.add_vline(x=df['R'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()\n","d33853eb":"fig = px.histogram(df, 'A_M',             \n                   color='Spectral_Class',\n                   title=\"<b>Average Spectral_Class by color<\/b>\")\n\nfig.add_vline(x=df['A_M'].mean(), line_width=2, line_dash=\"dash\", line_color=\"black\")\n\nfig.show()","44226ff0":"sns.barplot(data = df,x = 'Type',y ='Temperature')\nplt.show()","937e019d":"sns.barplot(data = df,x = 'Type',y ='R')\nplt.show()","a226ce92":"sns.barplot(data = df,x = 'Type',y ='A_M')\nplt.show()","16591766":"sns.barplot(data = df,x = 'Type',y ='L')\nplt.show()","20c4ea95":"blue_df = df[df['Color'] == 'Blue']\nblue_df# only blue color stars","3fb07a4c":"blue_df['Spectral_Class'].value_counts()","b1ff6dbf":"sns.countplot(x = 'Spectral_Class',data = blue_df)\nplt.show()\n\n# stars with color blue have spectral_class O","21bb0cd3":"sns.countplot(x = 'Type',data = blue_df)\nplt.show()\n\n# In blue color stars most of them were type 4","b76228b7":"blue_df.sort_values('Temperature').tail(10)\n\n# In blue color stars the star with highest temperature is from Spectral_class O and of type 4","a1072282":"blue_df.sort_values('Temperature').head()\n\n# In blue color stars the star with lowest temperature is from Spectral_class O and of type 4","4a4df9ef":"sns.barplot(x = 'Spectral_Class',y = 'Temperature',data = blue_df)\nplt.show()","4a203ea8":"fig = px.histogram(blue_df, 'Temperature',             \n                   color = 'Type')\nfig.show()\n\n# In blue color stars type 4 is in almost every temperature(except 35k-40k)\n# In blue color stars type 2 varies between 10k - 25k temperature(most of them between 15k-20k)\n# In blue color stars type 5 having high temparature from 25k - 40k\n# There is no type 0 and type 1 in blue coloured stars","e101e9f8":"fig = px.histogram(blue_df, 'L',             \n                   color = 'Type')\nfig.show()","224a12ca":"fig = px.histogram(blue_df, 'L',             \n                   color = 'Spectral_Class')\nfig.show()","00dfc2ee":"fig = px.histogram(blue_df, 'R',             \n                   color = 'Type')\nfig.show()","dbfe2d2d":"fig = px.histogram(blue_df, 'R',             \n                   color = 'Spectral_Class')\nfig.show()","7a57f01e":"fig = px.histogram(blue_df, 'A_M',             \n                   color = 'Type')\nfig.show()","675533bc":"fig = px.histogram(blue_df, 'A_M',             \n                   color = 'Spectral_Class')\nfig.show()","fa9d1cf1":"sns.scatterplot(x = 'Temperature',y = 'L',data = blue_df)\nplt.show()","5292f017":"sns.scatterplot(x = 'Temperature',y = 'R',data = blue_df)\nplt.show()","ca1bfaf0":"sns.scatterplot(x = 'Temperature',y = 'A_M',data = blue_df)\nplt.show()","20a544ba":"sns.scatterplot(x = 'Temperature',y = 'Type',data = blue_df)\nplt.show()","aabbbe17":"sns.scatterplot(x = 'L',y = 'R',data = blue_df)\nplt.show()","a62d3edc":"sns.scatterplot(x = 'L',y = 'A_M',data = blue_df)\nplt.show()","b6118318":"sns.scatterplot(x = 'L',y = 'Type',data = blue_df)\nplt.show()","20638ba5":"sns.scatterplot(x = 'R',y = 'A_M',data = blue_df)\nplt.show()","9a66e108":"sns.scatterplot(x = 'R',y = 'Type',data =blue_df)\nplt.show()","a4c408cc":"sns.scatterplot(x = 'A_M',y = 'Type',data = blue_df)\nplt.show()","0a578065":"plt.figure(figsize=(16,9))\nx = blue_df.drop(['Color','Spectral_Class'],axis = 1)\nax = sns.heatmap(blue_df.corr(),annot = True,cmap = 'viridis')\nplt.show()","1044d2e4":"sns.pairplot(blue_df.drop(['Color','Spectral_Class'],axis = 1))","e80ae055":"f = blue_df[blue_df['Spectral_Class'] == 'O']\nf\n# blue color stars with specral class O ","247dd8cd":"blue_df[blue_df['Spectral_Class'] == 'O']['Type'].value_counts()\n# blue color stars with specral class O and count of all its types","e20efe53":"sns.countplot(x = 'Type',data = f)\n\n#Most of the blue color stars with spectral class O are from type 4","38deac6b":"fig = px.histogram(f, 'Temperature',             \n                   color = 'Type')\nfig.show()","5f22c15c":"fig = px.histogram(f, 'L',             \n                   color = 'Type')\nfig.show()","22abd1f4":"fig = px.histogram(f, 'R',             \n                   color = 'Type')\nfig.show()","493cd39f":"fig = px.histogram(f, 'A_M',             \n                   color = 'Type')\nfig.show()","e34881cd":"sns.scatterplot(x = 'Temperature',y = 'L',data = f)\nplt.show()","aee9be62":"sns.scatterplot(x = 'Temperature',y = 'R',data = f)\nplt.show()","360924a9":"sns.scatterplot(x = 'Temperature',y = 'A_M',data = f)\nplt.show()","3326bed6":"sns.scatterplot(x = 'Temperature',y = 'Type',data = f)\nplt.show()","d397b6e2":"sns.scatterplot(x = 'L',y = 'R',data = f)\nplt.show()","5906e465":"sns.scatterplot(x = 'L',y = 'A_M',data = f)\nplt.show()","4fbde8cc":"sns.scatterplot(x = 'L',y = 'Type',data = f)\nplt.show()","13118bcb":"sns.scatterplot(x = 'R',y = 'A_M',data = f)\nplt.show()","7c2fa7aa":"sns.scatterplot(x = 'R',y = 'Type',data = f)\nplt.show()","c4a977f8":"sns.scatterplot(x = 'A_M',y = 'Type',data = f)\nplt.show()","23bf15ca":"plt.figure(figsize=(16,9))\nx = f.drop(['Color','Spectral_Class'],axis = 1)\nax = sns.heatmap(f.corr(),annot = True,cmap = 'viridis')\nplt.show()","782a5b43":"sns.pairplot(f.drop(['Color','Spectral_Class'],axis = 1))","d955a8ee":"g = blue_df[blue_df['Spectral_Class'] == 'B']\ng\n# blue color stars with specral class B","025d5d42":"blue_df[blue_df['Spectral_Class'] == 'B']['Type'].value_counts()\n# blue color stars with specral class B and count of all its types","d2e91bf3":"sns.countplot(x = 'Type',data = g)\n\n#Most of the blue color stars with spectral class B are from type 2","99f6f642":"fig = px.histogram(g, 'Temperature',             \n                   color = 'Type')\nfig.show()","e5be0474":"fig = px.histogram(g, 'L',             \n                   color = 'Type')\nfig.show()","af052301":"fig = px.histogram(g, 'R',             \n                   color = 'Type')\nfig.show()","4665d1c2":"fig = px.histogram(g, 'A_M',             \n                   color = 'Type')\nfig.show()","10930f51":"sns.scatterplot(x = 'Temperature',y = 'L',data = g)\nplt.show()","8abfc14f":"sns.scatterplot(x = 'Temperature',y = 'R',data = f)\nplt.show()","45b7a7ae":"sns.scatterplot(x = 'Temperature',y = 'A_M',data = f)\nplt.show()","c5181c05":"sns.scatterplot(x = 'Temperature',y = 'Type',data = f)\nplt.show()","4ce5eff6":"sns.scatterplot(x = 'L',y = 'R',data = f)\nplt.show()","075362f4":"sns.scatterplot(x = 'L',y = 'A_M',data = f)\nplt.show()","ae07dcb9":"sns.scatterplot(x = 'L',y = 'Type',data = f)\nplt.show()","c9d4a9e3":"sns.scatterplot(x = 'R',y = 'A_M',data = f)\nplt.show()","c2190197":"sns.scatterplot(x = 'R',y = 'Type',data = f)\nplt.show()","74ef2c39":"sns.scatterplot(x = 'A_M',y = 'Type',data = f)\nplt.show()","af1da197":"plt.figure(figsize=(16,9))\nx = g.drop(['Color','Spectral_Class'],axis = 1)\nax = sns.heatmap(g.corr(),annot = True,cmap = 'viridis')\nplt.show()","938872ec":"red_df = df[df['Color'] == 'Red']\nred_df","0802e42d":"red_df['Spectral_Class'].value_counts()","616f2c55":"sns.countplot(x = 'Spectral_Class',data = red_df)\nplt.show()","5283d6b0":"red_df['Type'].value_counts()","73d94a12":"sns.countplot(x = 'Type',data = red_df)\nplt.show()","284278e4":"red_df.sort_values('Temperature').tail(10)","06f7e370":"red_df.sort_values('Temperature').head(10)","1dcb1ac7":"fig = px.histogram(red_df, 'Temperature',             \n                   color = 'Spectral_Class')\nfig.show()","91482d15":"fig = px.histogram(red_df, 'Temperature',             \n                   color = 'Type')\nfig.show()","c0b58dff":"fig = px.histogram(red_df, 'L',             \n                   color = 'Type')\nfig.show()","7da9ce09":"fig = px.histogram(red_df, 'L',             \n                   color = 'Spectral_Class')\nfig.show()","68e6bf15":"fig = px.histogram(red_df, 'R',             \n                   color = 'Type')\nfig.show()","95593c4f":"fig = px.histogram(red_df, 'R',             \n                   color = 'Spectral_Class')\nfig.show()","63e8460a":"fig = px.histogram(red_df, 'A_M',             \n                   color = 'Type')\nfig.show()","54f4d59e":"fig = px.histogram(red_df, 'A_M',             \n                   color = 'Spectral_Class')\nfig.show()","609141bc":"sns.scatterplot(x = 'Temperature',y = 'L',data = red_df)\nplt.show()","fba0b3fd":"sns.scatterplot(x = 'Temperature',y = 'R',data = red_df)\nplt.show()","2a4af600":"sns.scatterplot(x = 'Temperature',y = 'A_M',data = red_df)\nplt.show()","5c14a088":"sns.scatterplot(x = 'Temperature',y = 'Type',data = red_df)\nplt.show()","d949afd8":"sns.scatterplot(x = 'L',y = 'R',data = red_df)\nplt.show()","b22708a9":"sns.scatterplot(x = 'L',y = 'A_M',data = red_df)\nplt.show()","a0905f36":"sns.scatterplot(x = 'L',y = 'Type',data = red_df)\nplt.show()","2cc8d952":"sns.scatterplot(x = 'R',y = 'A_M',data = red_df)\nplt.show()","99fd1b49":"sns.scatterplot(x = 'R',y = 'Type',data =red_df)\nplt.show()","4011306f":"sns.scatterplot(x = 'A_M',y = 'Type',data = blue_df)\nplt.show()","7c8358a3":"plt.figure(figsize=(16,9))\nx = red_df.drop(['Color','Spectral_Class'],axis = 1)\nax = sns.heatmap(red_df.corr(),annot = True,cmap = 'viridis')\nplt.show()","276c81ad":"p = red_df[red_df['Spectral_Class'] == 'M']\np","6dd407f7":"red_df[red_df['Spectral_Class'] == 'M']['Type'].value_counts()","9af9c117":"sns.countplot(x = 'Type',data = p)","e7164526":"fig = px.histogram(p, 'Temperature',             \n                   color = 'Type')\nfig.show()","412998f0":"fig = px.histogram(p, 'L',             \n                   color = 'Type')\nfig.show()","487c4bef":"fig = px.histogram(p, 'R',             \n                   color = 'Type')\nfig.show()","7ffa9a1a":"fig = px.histogram(p, 'A_M',             \n                   color = 'Type')\nfig.show()","7a4f0f62":"sns.scatterplot(x = 'Temperature',y = 'L',data = p)\nplt.show()","4d731841":"sns.scatterplot(x = 'Temperature',y = 'R',data = p)\nplt.show()","b87abcb2":"sns.scatterplot(x = 'Temperature',y = 'A_M',data = p)\nplt.show()","12fe5a3b":"sns.scatterplot(x = 'Temperature',y = 'Type',data = p)\nplt.show()","f317870c":"sns.scatterplot(x = 'L',y = 'R',data = p)\nplt.show()","cf452b39":"sns.scatterplot(x = 'L',y = 'A_M',data = p)\nplt.show()","2b164f2e":"sns.scatterplot(x = 'L',y = 'Type',data = p)\nplt.show()","dddb3d7e":"sns.scatterplot(x = 'R',y = 'A_M',data = p)\nplt.show()","83e35e5f":"sns.scatterplot(x = 'R',y = 'Type',data = p)\nplt.show()","9dcecb9f":"sns.scatterplot(x = 'A_M',y = 'Type',data = p)\nplt.show()","93ac9246":"plt.figure(figsize=(16,9))\nx = p.drop(['Color','Spectral_Class'],axis = 1)\nax = sns.heatmap(x.corr(),annot = True,cmap = 'viridis')\nplt.show()","154dc95f":"s = red_df[red_df['Spectral_Class'] == 'K']\ns","a85902f2":"n = red_df[red_df['Spectral_Class'] == 'G']\nn","8e9e5815":"bluew_df = df[df['Color'] == 'Blue-white']\nbluew_df","9f1e96cc":"bluew_df['Spectral_Class'].value_counts()","d439a073":"sns.countplot(x = 'Spectral_Class',data = bluew_df)\nplt.show()\n","173ac78d":"sns.countplot(x = 'Type',data = bluew_df)\nplt.show()","fa982ced":"bluew_df.sort_values('Temperature').tail(10)","641ee2fc":"blue_df.sort_values('Temperature').head(10)","746e9fcf":"sns.barplot(x = 'Spectral_Class',y = 'Temperature',data = bluew_df)\nplt.show()","31263886":"fig = px.histogram(bluew_df, 'Temperature',             \n                   color = 'Type')\nfig.show()","cabb41c7":"fig = px.histogram(bluew_df, 'L',             \n                   color = 'Type')\nfig.show()","b36a8dc3":"fig = px.histogram(bluew_df, 'L',             \n                   color = 'Spectral_Class')\nfig.show()","8ac42bfe":"fig = px.histogram(bluew_df, 'R',             \n                   color = 'Type')\nfig.show()","3e33baf5":"fig = px.histogram(bluew_df, 'R',             \n                   color = 'Spectral_Class')\nfig.show()","b6ce0453":"fig = px.histogram(bluew_df, 'A_M',             \n                   color = 'Type')\nfig.show()","75db6bd1":"fig = px.histogram(bluew_df, 'A_M',             \n                   color = 'Spectral_Class')\nfig.show()","e1cf0938":"sns.scatterplot(x = 'Temperature',y = 'L',data = bluew_df)\nplt.show()","4cfc921f":"sns.scatterplot(x = 'Temperature',y = 'R',data = bluew_df)\nplt.show()","384de322":"sns.scatterplot(x = 'Temperature',y = 'A_M',data = bluew_df)\nplt.show()","4fad1420":"sns.scatterplot(x = 'Temperature',y = 'Type',data = bluew_df)\nplt.show()","5b6583f6":"sns.scatterplot(x = 'L',y = 'R',data = bluew_df)\nplt.show()","d5e71437":"sns.scatterplot(x = 'L',y = 'A_M',data = bluew_df)\nplt.show()","74855874":"sns.scatterplot(x = 'L',y = 'Type',data = bluew_df)\nplt.show()","40ea8125":"sns.scatterplot(x = 'R',y = 'A_M',data = bluew_df)\nplt.show()","cde2b477":"sns.scatterplot(x = 'R',y = 'Type',data =bluew_df)\nplt.show()","5ff958a0":"sns.scatterplot(x = 'A_M',y = 'Type',data = bluew_df)\nplt.show()","2a523940":"plt.figure(figsize=(16,9))\nx = bluew_df.drop(['Color','Spectral_Class'],axis = 1)\nax = sns.heatmap(x.corr(),annot = True,cmap = 'viridis')\nplt.show()","abb6813b":"t = bluew_df[bluew_df['Spectral_Class'] == 'A']\nt","5b878ec1":"bluew_df[bluew_df['Spectral_Class'] == 'A']['Type'].value_counts()","c74d80b3":"sns.countplot(x = 'Type',data = t)","3a72639b":"fig = px.histogram(t, 'Temperature',             \n                   color = 'Type')\nfig.show()","f7ea2cd2":"fig = px.histogram(t, 'L',             \n                   color = 'Type')\nfig.show()","ac44fc72":"fig = px.histogram(t, 'R',             \n                   color = 'Type')\nfig.show()","f9c5f8e9":"fig = px.histogram(t, 'A_M',             \n                   color = 'Type')\nfig.show()","cc9f511f":"sns.scatterplot(x = 'Temperature',y = 'L',data = t)\nplt.show()","b88534ee":"sns.scatterplot(x = 'Temperature',y = 'R',data = t)\nplt.show()","2b47af3d":"sns.scatterplot(x = 'Temperature',y = 'A_M',data = t)\nplt.show()","aba0092d":"sns.scatterplot(x = 'Temperature',y = 'Type',data = t)\nplt.show()","2f857bec":"sns.scatterplot(x = 'L',y = 'R',data = t)\nplt.show()","cf2a2867":"sns.scatterplot(x = 'L',y = 'A_M',data = t)\nplt.show()","a3f44ac1":"sns.scatterplot(x = 'L',y = 'Type',data = t)\nplt.show()","efcc653e":"sns.scatterplot(x = 'R',y = 'A_M',data = t)\nplt.show()","ae1a43e7":"sns.scatterplot(x = 'R',y = 'Type',data = t)\nplt.show()","7fe739e2":"sns.scatterplot(x = 'A_M',y = 'Type',data = t)\nplt.show()","c4469748":"plt.figure(figsize=(16,9))\nx = t.drop(['Color','Spectral_Class'],axis = 1)\nax = sns.heatmap(x.corr(),annot = True,cmap = 'viridis')\nplt.show()","e52245bc":"q = bluew_df[bluew_df['Spectral_Class'] == 'B']\nq","bedf21a8":"bluew_df[bluew_df['Spectral_Class'] == 'B']['Type'].value_counts()","8ea67d83":"sns.countplot(x = 'Type',data = q)","f632e1bb":"fig = px.histogram(q, 'Temperature',             \n                   color = 'Type')\nfig.show()","21a19911":"fig = px.histogram(q, 'L',             \n                   color = 'Type')\nfig.show()","fc44adec":"fig = px.histogram(q, 'R',             \n                   color = 'Type')\nfig.show()","d33455ef":"fig = px.histogram(q, 'A_M',             \n                   color = 'Type')\nfig.show()","2aaf18ce":"sns.scatterplot(x = 'Temperature',y = 'L',data = q)\nplt.show()","7a126f51":"sns.scatterplot(x = 'Temperature',y = 'R',data = q)\nplt.show()","f7ad9f9b":"sns.scatterplot(x = 'Temperature',y = 'A_M',data = q)\nplt.show()","de7740de":"sns.scatterplot(x = 'Temperature',y = 'Type',data = q)\nplt.show()","bb0f4ef7":"sns.scatterplot(x = 'L',y = 'R',data = q)\nplt.show()","5d586582":"sns.scatterplot(x = 'L',y = 'A_M',data = q)\nplt.show()","557b6c34":"sns.scatterplot(x = 'L',y = 'Type',data = q)\nplt.show()","dae1c47e":"sns.scatterplot(x = 'R',y = 'A_M',data = q)\nplt.show()","34f49848":"sns.scatterplot(x = 'R',y = 'Type',data = q)\nplt.show()","b76f7cca":"sns.scatterplot(x = 'A_M',y = 'Type',data = q)\nplt.show()","395e713a":"plt.figure(figsize=(16,9))\nx = q.drop(['Color','Spectral_Class'],axis = 1)\nax = sns.heatmap(q.corr(),annot = True,cmap = 'viridis')\nplt.show()","94eed944":"plt.figure(figsize=(6,8))\nx = df.drop(['Color','Spectral_Class'],axis = 1)\nfor i in x.columns:\n    sns.histplot(x[i],kde = True)\n    plt.show()","99063ecc":"x = df.drop(['Color','Spectral_Class'],axis = 1)\nfor i in x.columns:\n    sns.boxplot(x = i, data = x,color = 'yellowgreen')   \n    plt.xlabel(i)\n    plt.show()","7151d751":"x = df.drop(['Color','Spectral_Class'],axis = 1)\nfor i in x.columns:\n    sns.violinplot(x = i, data = x,color = 'yellowgreen')   \n    plt.xlabel(i)\n    plt.show()","ec407316":"plt.figure(figsize=(6,8))\nfor i in df.columns:\n    sns.scatterplot(x = 'Type',y = i,data = df,color = 'Red')\n    plt.show()","d7aa8fb0":"sns.pairplot(df)","47f654b3":"def count_outliers(data,col):\n        q1 = data[col].quantile(0.25,interpolation='nearest')\n        q2 = data[col].quantile(0.5,interpolation='nearest')\n        q3 = data[col].quantile(0.75,interpolation='nearest')\n        q4 = data[col].quantile(1,interpolation='nearest')\n        IQR = q3 -q1\n        global LLP\n        global ULP\n        LLP = q1 - 1.5*IQR\n        ULP = q3 + 1.5*IQR\n        if data[col].min() > LLP and data[col].max() < ULP:\n            print(\"No outliers in\",i)\n        else:\n            print(\"There are outliers in\",i)\n            x = data[data[col]<LLP][col].size\n            y = data[data[col]>ULP][col].size\n            a.append(i)\n            print('Count of outliers are:',x+y)\nglobal a\na = []\nfor i in x.columns:\n    count_outliers(df,i)","77c3bf54":"df1=pd.get_dummies(data=df,columns=[\"Color\",\"Spectral_Class\"],drop_first=True)","ff68e4a5":"df1","c463a29b":"df1 = df1[['Temperature', 'L', 'R', 'A_M', 'Color_Blue-white',\n       'Color_Orange', 'Color_Red', 'Color_White', 'Color_yellow-white',\n       'Spectral_Class_B', 'Spectral_Class_F', 'Spectral_Class_G',\n       'Spectral_Class_K', 'Spectral_Class_M', 'Spectral_Class_O', 'Type']]","43ee840f":"df1","28dd97d8":"scaler = StandardScaler()","a840a1a3":"scaler.fit(df1.drop('Type',axis = 1))","57bb59aa":"scaled_features = scaler.transform(df1.drop('Type',axis = 1))","215ef1da":"df_feat = pd.DataFrame(scaled_features,columns = df1.columns[:-1])\ndf_feat.head()","7634dbdb":"\nX = df_feat\ny = df1['Type']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\nknn = KNeighborsClassifier(n_neighbors = 1)\nknn.fit(X_train,y_train)","71254c72":"pred = knn.predict(X_test)\npred","9de93c68":"print(confusion_matrix(y_test,pred))","edb8f4eb":"print(classification_report(y_test,pred))","384641bb":"error_rate= []\nfor i in range(1,40):\n    knn = KNeighborsClassifier(n_neighbors = i)\n    knn.fit(X_train,y_train)\n    pred_i = knn.predict(X_test)\n    error_rate.append(np.mean(pred_i != y_test))","80fb49df":"plt.figure(figsize = (10,6))\nplt.plot(range(1,40),error_rate,color = 'blue',linestyle = '--',marker = 'o',markerfacecolor='red',markersize = 10)\nplt.title('Error Rate vs K')\nplt.xlabel('K')\nplt.ylabel('Error Rate')\n","c5619e7b":"print(metrics.accuracy_score(y_test, pred))","924c3ab2":"# Importing Libraries","d57b33b8":"### Main idea behid this is first did visualisation for every color of stars.Then, seperated each color into one dataframe. for example,I created a dataframe which has only blue colored stars like wise did to every color. Next, In blue color classified according to spectral classes and did visualistaion on them using bar and histplot and also general visualisations using heat map,pair plot,scatter plot,box plot,vilolin plot etc..","dbecff83":"# Loading DataSet","53faba00":"# Encoding","c86c7de3":"## To show more realations in data I did around 200 visualisations","3a97835c":"# Data Visualisation","6724114f":"# Basic Data Cleaning","2376f5db":"#  finding least value for K to apply KNN","ff5bc77a":"# Count of outliers","9fdcbe79":"# Exploratory Data Analysis","71409fef":"# Feature Selection","b7673db2":"# Data Visualisation Using Autoviz","43f9b139":"## Reaaranging Columns","58423a23":"# Feature Scaling"}}