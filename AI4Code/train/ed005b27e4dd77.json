{"cell_type":{"ece0b530":"code","a94ecf78":"code","f7f2b75d":"code","4705ef38":"code","164ee532":"code","7abfda63":"code","c7d8d561":"code","ed68210e":"code","5e1d1a2f":"code","7d118604":"code","38b4dab7":"code","bb85906a":"code","de28336b":"code","7351d239":"code","6196458d":"code","2bdfc4e6":"code","f3aa830f":"code","a6a0b543":"code","00149d73":"code","a2679762":"code","61ba083e":"code","5cc36ce0":"code","df7018d6":"code","7ce2726b":"code","496374e4":"code","107065c4":"code","80724f93":"code","b4c8aecc":"code","0774fc63":"code","407ce666":"code","e1ace0f5":"code","362a35d4":"code","a9047923":"code","0400413c":"markdown","15be56de":"markdown","72287e48":"markdown","3d72ea59":"markdown","a098c99b":"markdown","0e70edc0":"markdown","26cb1486":"markdown","a984b46e":"markdown","865fcc83":"markdown","7448edae":"markdown","e056b5a5":"markdown","4efd379d":"markdown","18ffbaa1":"markdown","2a14500a":"markdown","be4bfe37":"markdown","204b3e1f":"markdown","32414bf6":"markdown"},"source":{"ece0b530":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datatable as dt\n\nimport warnings\nwarnings.filterwarnings('ignore')","a94ecf78":"df_train = dt.fread(\"..\/input\/tabular-playground-series-nov-2021\/train.csv\").to_pandas()\ndf_test = dt.fread(\"..\/input\/tabular-playground-series-nov-2021\/test.csv\").to_pandas()\ndf_subm = dt.fread(\"..\/input\/tabular-playground-series-nov-2021\/sample_submission.csv\").to_pandas()","f7f2b75d":"#Custom Color Palette \ud83c\udfa8\ncustom_colors = [\"#ffbe0b\",\"#fb5607\",\"#ff006e\",\"#8338ec\",\"#3a86ff\"]\ncustomPalette = sns.set_palette(sns.color_palette(custom_colors))\nsns.palplot(sns.color_palette(custom_colors),size = 1.2)\nplt.tick_params(axis ='both', labelsize=0, length = 0)","4705ef38":"df_train_row_count, df_train_column_count = df_train.shape\nprint('Total number of rows:', df_train_row_count)\nprint('Total number of columns:', df_train_column_count)","164ee532":"df_test_row_count, df_test_column_count = df_test.shape\nprint('Total number of rows:', df_test_row_count)\nprint('Total number of columns:', df_test_column_count)","7abfda63":"df_train.head()","c7d8d561":"df_train.describe().T","ed68210e":"df_train.info()","5e1d1a2f":"df_test.describe().T","7d118604":"df_train.isna().sum()","38b4dab7":"df_test.isna().sum()","bb85906a":"print (\"Unique values are:\\n\",df_train.nunique())","de28336b":"df_train.target.value_counts()","7351d239":"x = df_train['target'].value_counts()\n\nfig,ax = plt.subplots(figsize = (7,4))\nax.barh([1],x.values[1], height = 0.7, color ='#8338ec',alpha = 0.7)\nplt.text(-43000,1, 'False', {'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'black'},alpha = 0.7)\nplt.text(310000,1, '49.4%', {'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'black'},alpha = 0.7)\n\nax.barh([0],x.values[0], height = 0.7, color ='#fb5607',alpha = 0.7)\nplt.text(-38000,0,'True',{'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'black'}, alpha = 0.7)\nplt.text(313000,0, '50.6%',{'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'black'}, alpha = 0.7)\n\n\nplt.text(-50,2.2, 'How target is distributed? - True vs False',{'font': 'Trebuchet MS','weight':'bold','Size': '24','style':'normal', 'color':'#3a86ff'}, alpha = 0.9)\nplt.text(400000,1.65, 'False ', {'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'#8338ec'},alpha = 0.8)\nplt.text(445000,1.65, '|', {'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'black'}, alpha = 0.9)\nplt.text(455000,1.65, 'True',  {'font': 'Trebuchet MS','weight':'bold','Size': '16','style':'normal', 'color':'#fb5607'},alpha = 0.7)\nplt.text(-50,1.8, 'Nearly equal distribution',{'font': 'Trebuchet MS','Size': '14','style':'normal', 'color':'#ff006e'})\n\nax.axes.get_xaxis().set_visible(False)\nax.axes.get_yaxis().set_visible(False)\nax.spines['bottom'].set_visible(False)\nax.spines['left'].set_visible(True)\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)","6196458d":"plt.figure(figsize = (11,11))\ncorr = df_train.corr()\nmask = np.triu(np.ones_like(corr, dtype=bool))\nsns.heatmap(corr, mask=mask, cmap=custom_colors, robust=True, center=0,square=True, linewidths =.6)\nplt.title('Correlation')\nplt.show()","2bdfc4e6":"corr_loss = df_train.corr()\nplt.figure(figsize=(24,8))\ncorr_loss[\"target\"][:-1].plot(kind=\"bar\",grid=True)\nplt.title(\"Features correlation\")","f3aa830f":"cols = ['f'+str(i) for i in range(100)]\ni = 1\nplt.figure()\nfig, ax = plt.subplots(5, 4,figsize=(12, 12))\nfor feature in cols[0:20]:\n    plt.subplot(5, 4,i)\n    sns.histplot(df_train[feature],color=\"#3a86ff\", kde=True, edgecolor=\"black\")\n    sns.histplot(df_test[feature],color=\"#ffbe0b\", kde=True, edgecolor=\"black\")\n    plt.yticks([])\n    plt.legend(labels=('Train','Test'))\n    plt.tight_layout()\n    i += 1\nplt.show()","a6a0b543":"cols = ['f'+str(i) for i in range(100)]\ni = 1\nplt.figure()\nfig, ax = plt.subplots(5, 4,figsize=(12, 12))\nfor feature in cols[20:40]:\n    plt.subplot(5, 4,i)\n    sns.histplot(df_train[feature],color=\"#3a86ff\", kde=True, edgecolor=\"black\")\n    sns.histplot(df_test[feature],color=\"#ffbe0b\", kde=True, edgecolor=\"black\")\n    plt.yticks([])\n    plt.legend(labels=('Train','Test'))\n    plt.tight_layout()\n    i += 1\nplt.show()","00149d73":"cols = ['f'+str(i) for i in range(100)]\ni = 1\nplt.figure()\nfig, ax = plt.subplots(5, 4,figsize=(12, 12))\nfor feature in cols[40:60]:\n    plt.subplot(5, 4,i)\n    sns.histplot(df_train[feature],color=\"#3a86ff\", kde=True, edgecolor=\"black\")\n    sns.histplot(df_test[feature],color=\"#ffbe0b\", kde=True, edgecolor=\"black\")\n    plt.yticks([])\n    plt.legend(labels=('Train','Test'))\n    plt.tight_layout()\n    i += 1\nplt.show()","a2679762":"cols = ['f'+str(i) for i in range(100)]\ni = 1\nplt.figure()\nfig, ax = plt.subplots(5, 4,figsize=(12, 12))\nfor feature in cols[60:80]:\n    plt.subplot(5, 4,i)\n    sns.histplot(df_train[feature],color=\"#3a86ff\", kde=True, edgecolor=\"black\")\n    sns.histplot(df_test[feature],color=\"#ffbe0b\", kde=True, edgecolor=\"black\")\n    plt.yticks([])\n    plt.legend(labels=('Train','Test'))\n    plt.tight_layout()\n    i += 1\nplt.show()","61ba083e":"cols = ['f'+str(i) for i in range(100)]\ni = 1\nplt.figure()\nfig, ax = plt.subplots(5, 4,figsize=(12, 12))\nfor feature in cols[80:100]:\n    plt.subplot(5, 4,i)\n    sns.histplot(df_train[feature],color=\"#3a86ff\", kde=True, edgecolor=\"black\")\n    sns.histplot(df_test[feature],color=\"#ffbe0b\", kde=True, edgecolor=\"black\")\n    plt.yticks([])\n    plt.legend(labels=('Train','Test'))\n    plt.tight_layout()\n    i += 1\nplt.show()","5cc36ce0":"pip install autogluon","df7018d6":"from autogluon.tabular import TabularDataset, TabularPredictor","7ce2726b":"time = 7200\npred = TabularPredictor(label ='target', eval_metric = 'roc_auc').fit(train_data = df_train, time_limit = time, presets ='best_quality', verbosity = 2)\nresult = pred.fit_summary()\nresult","496374e4":"y_pred = pred.predict_proba(df_test)\ndf_subm['target'] = y_pred.iloc[:, -1].values\ndf_subm.to_csv(\"submission_autogluon.csv\", index=False)\ndf_subm","107065c4":"import h2o\nfrom h2o.automl import H2OAutoML\nh2o.init()","80724f93":"train = df_train.drop('id',axis=1)\ntest = df_test.drop('id',axis=1)\n\ntrain = h2o.H2OFrame(train)\ntest = h2o.H2OFrame(test)","b4c8aecc":"x = train.columns\ny = \"target\"\nx.remove(y)\n\naml = H2OAutoML(max_models = 30, nfolds = 5, seed = 1,max_runtime_secs = 1600)\naml.train(x = x, y = y, training_frame = train)","0774fc63":"lb = aml.leaderboard\nlb.head(rows = lb.nrows)","407ce666":"model_plot = aml.model_correlation_heatmap(train)","e1ace0f5":"pred_1 = aml.leader.predict(test).as_data_frame()['True']","362a35d4":"df_subm['target'] = pred_1","a9047923":"df_subm.to_csv('submission_h2o.csv', index=False)","0400413c":"<h3 style=\"font-family: Trebuchet MS;background-color:#eae4e9;color:#3a0ca3;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Features (f40 - f59) <\/centre><\/strong><\/h3>","15be56de":"<h3 style=\"font-family: Trebuchet MS;background-color:#eae4e9;color:#3a0ca3;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>If you found this notebook useful, please Upvote. Thanks!<\/centre><\/strong><\/h3>","72287e48":"Distribution of all features (f0-f99) that are available in train and test dataset are shown below. Because there are 100 features (f0-f99), 20 features are represented in each sections.`Blue` represents train dataset while `yellow` represents test dataset","3d72ea59":"<h3 style=\"font-family: Trebuchet MS;background-color:#eae4e9;color:#3a0ca3;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>H2O \u23f3<\/centre><\/strong><\/h3>","a098c99b":"<h3 style=\"font-family: Trebuchet MS;background-color:#eae4e9;color:#3a0ca3;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Features (f0 - f19) <\/centre><\/strong><\/h3>","0e70edc0":"<h3 style=\"font-family: Trebuchet MS;background-color:#eae4e9;color:#3a0ca3;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Checking for missing values \u270f\ufe0f <\/centre><\/strong><\/h3>","26cb1486":"<h3 style=\"font-family: Trebuchet MS;background-color:#eae4e9;color:#3a0ca3;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Features (f80 - f99) <\/centre><\/strong><\/h3>","a984b46e":"<h3 style=\"font-family: Trebuchet MS;background-color:#eae4e9;color:#3a0ca3;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Importing & Reading the dataset \ud83d\udcdd <\/centre><\/strong><\/h3>","865fcc83":"<p style=\"font-family: Trebuchet MS; line-height: 2; font-size: 16px; font-weight: bold; letter-spacing: 2px; text-align: center; color:#3a0ca3;\">All the features are  weakly correlated.<\/p>\n  ","7448edae":"<h3 style=\"font-family: Trebuchet MS;background-color:#eae4e9;color:#3a0ca3;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>AutoGluon \u23f3<\/centre><\/strong><\/h3>","e056b5a5":"<p style=\"font-family: Trebuchet MS; line-height: 2; font-size: 20px; font-weight: bold; letter-spacing: 2px; text-align: center; color: #3a0ca3\">Features Distribution<\/p>","4efd379d":"**Observations on this TPS:**\n- `target` column is the target variable\n- `Train` dataset has `600,000` rows and `102` columns which contains`100` features (f0-f99), `1` target variable `target` and `1` column of `id`\n- `Test` dataset has `540,000` rows and `101` columns which contains`100` features (f0-f99) and `1` column of `id`\n`target` and `1` column of `id`\n- No missing values in train and test dataset\n","18ffbaa1":"![TPS Oct 2021.jpg](attachment:88ff4400-df0a-49a0-95e0-1d45498c7d78.jpg)","2a14500a":"<h3 style=\"font-family: Trebuchet MS;background-color:#eae4e9;color:#3a0ca3;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Features (f20 - f39) <\/centre><\/strong><\/h3>","be4bfe37":"<p style=\"font-family: Trebuchet MS; line-height: 2; font-size: 18px; font-weight: bold; letter-spacing: 2px; text-align: center; color: #3a0ca3\">There are no missing values.<\/p>","204b3e1f":"<h3 style=\"font-family: Trebuchet MS;background-color:#eae4e9;color:#3a0ca3;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Importing Libraries & Packages \ud83d\udcda <\/centre><\/strong><\/h3>","32414bf6":"<h3 style=\"font-family: Trebuchet MS;background-color:#eae4e9;color:#3a0ca3;text-align: center;padding-top: 5px;padding-bottom: 5px;border-radius: 15px 50px;letter-spacing: 2px;\"><strong><centre>Features (f60 - f79) <\/centre><\/strong><\/h3>"}}