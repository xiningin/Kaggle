{"cell_type":{"74ffac24":"code","7d109ab8":"code","78a88d20":"code","6afb90f8":"code","b0158ce3":"code","24ea71d0":"code","08fa6614":"code","a16f2c18":"code","86c22d9a":"code","12dbf50e":"code","8b677623":"code","45722262":"code","f17edbab":"code","7cfd1ce7":"code","addd619f":"code","d6d51a89":"code","e089ad98":"code","898be5f8":"code","3d2690e9":"code","95a30f4f":"code","533f3ec8":"code","0d8fea59":"code","cbf54b99":"code","4356627c":"code","f927d89b":"code","ee72fe3d":"code","b1067ba0":"code","4332bccd":"code","99224133":"code","8cd16519":"code","57e93891":"code","e8fe1ffa":"code","75d2e806":"code","05598b9b":"code","a697dd13":"code","781fdc94":"code","a23fd254":"code","bee40bda":"code","705603fe":"code","215bc3ee":"code","805227a4":"code","9f8cbfff":"code","585f712f":"code","358c52f5":"code","5e05125e":"code","bf11970d":"code","64638637":"code","77aee487":"markdown","e8733d16":"markdown","521c4cbc":"markdown","e50b2573":"markdown","711a58d1":"markdown","66238517":"markdown","4d535a7f":"markdown","5a512a76":"markdown","ae524ef7":"markdown","e4389eee":"markdown","c0b59093":"markdown","04fd4edf":"markdown","bf76c638":"markdown","dd5b9afc":"markdown","541e7de1":"markdown","13cda039":"markdown","9c6d9046":"markdown","76e43382":"markdown","5871d766":"markdown","d8acfdde":"markdown","12e25086":"markdown"},"source":{"74ffac24":"import numpy as np #This library provide support to the arrays\nimport seaborn as sns #Library for data visualization\nimport pandas as pd #for data manipulation","7d109ab8":"ds = pd.read_csv('..\/input\/titanic\/train_and_test2.csv') #The titanic dataset is already built in seaborn library","78a88d20":"ds.head(10) #Displaying the first 10 rows","6afb90f8":"len(ds) #To find the number of entries","b0158ce3":"ds['Age'] = ds['Age'].fillna(ds['Age'].median()) \n#The Null or Not Available values in the Age Column will be replaced by the median values","24ea71d0":"x = ds['Age'].values  #x is Input\ny = ds['2urvived']    #y is the output\n# We will predicting the number of survived persons(y) on the basis of their age(x).","08fa6614":"x.shape #checking the shape","a16f2c18":"x=x.reshape(-1,1) #Reshaping the column.\n# -1 indicates to keep 891 as it is and 1 indicates to add 1 to the shaoe of column.","86c22d9a":"x.shape","12dbf50e":"from sklearn.model_selection import train_test_split","8b677623":"x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=0,test_size=0.25)\n#test_size indicates how many samples should be present for test dataset.\n#Therefore,25% of the entries will got to test dataset and the rest 75% will go to train dataset.","45722262":"len(x_train)","f17edbab":"len(y_train)","7cfd1ce7":"len(x_test)","addd619f":"from collections import Counter","d6d51a89":"Counter(y)\nsns.countplot(x=y)","e089ad98":"from sklearn.naive_bayes import GaussianNB","898be5f8":"model = GaussianNB()","3d2690e9":"model.fit(x_train,y_train) #Fitting the model","95a30f4f":"y_pred = model.predict_proba(x_test)  #Storing the predicted values in y_pred","533f3ec8":"y_pred","0d8fea59":"y_pred=model.predict(x_test)","cbf54b99":"y_pred","4356627c":"y_test","f927d89b":"from sklearn.metrics import accuracy_score","ee72fe3d":"accuracy_score(y_test, y_pred)","b1067ba0":"x=ds['Pclass'].values\ny=ds['2urvived']","4332bccd":"x=x.reshape(-1,1)","99224133":"x.shape","8cd16519":"x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=0,test_size=0.25)\n#Updating all the values once again","57e93891":"model = GaussianNB()","e8fe1ffa":"model.fit(x_train,y_train)","75d2e806":"model.predict_proba(x_test)","05598b9b":"y_pred=model.predict(x_test)","a697dd13":"accuracy_score(y_test, y_pred)","781fdc94":"x = ds[['Sex','Pclass']]\ny = ds['2urvived']","a23fd254":"x['Sex'].head()","bee40bda":"from sklearn.preprocessing import LabelEncoder","705603fe":"enc=LabelEncoder()","215bc3ee":"x['Sex']=enc.fit_transform(x['Sex']) #Converting the strings into number","805227a4":"x['Sex'].head() #male-1 female-0","9f8cbfff":"x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=0,test_size=0.25)","585f712f":"model=GaussianNB()","358c52f5":"\n\n\nmodel.fit(x_train,y_train)","5e05125e":"model.predict_proba(x_test)","bf11970d":"y_pred=model.predict(x_test)","64638637":"accuracy_score(y_test, y_pred)","77aee487":"**Name:Manjunath GB**\n\n**PRN: 72018269H**\n\n**Class: TE ENTC 'B'**","e8733d16":"**Determining the accuracy**","521c4cbc":"# Practical No.2\n## Data Science and Visualization (Honors Course)","e50b2573":"**Determining the Accuracy**","711a58d1":"**Accuracy** is given by (True Positive+True Negative)\/Total no. of entries","66238517":"## Data Cleaning","4d535a7f":"*The counter will count the number of individuals who have survived and those who have not survived.*","5a512a76":"In this practical we will predict the probability os survival on the basis of age,gender and passenger class in titanic dataset.","ae524ef7":"**By using two variables\/attributes we can predict the result more accurately;therefore always use subset of two variables which provide most accurate result.**","e4389eee":"## Splitting the data for Testing and Training","c0b59093":"## Predicting the survival on the basis of pclass","04fd4edf":"## Making the prediction using GaussianNB","bf76c638":"**The accuracy of the model is 65.47%.**\n\n*Hence we have predicted the survival on the basis of age.*","dd5b9afc":"*The accuracy score is 70.85% compared to previous attribute.Hence,we can say that pclass attribute gives more accuarcy.*","541e7de1":"*We will encode the entries in a certain format.*","13cda039":"## Determing the accuracy","9c6d9046":"## We will now use two columns and determine the accuracy","76e43382":"*The probability values are displayed.We need to convert them into binary values of 0 and 1.*","5871d766":"**Data Cleaning part has been completed.**","d8acfdde":"*Firstly,we will import certain libraries.*","12e25086":"**Therefore by using the relevant columns we can predict the result with more accuracy.**"}}