{"cell_type":{"71db8d93":"code","cb4c561f":"code","4ec2d246":"code","faa3e9fd":"code","d93563f5":"code","81f1f682":"code","058bef70":"code","15acc8ca":"code","ecdc34ce":"code","cb0745e5":"code","f1b187e0":"code","b9f5eaa6":"code","8adb1229":"code","a388c9b8":"code","b5ec4e6a":"code","e841e913":"code","070c441a":"code","a44ec50d":"code","7c5b9430":"code","9e208738":"code","7e55a3f7":"code","c81ba41f":"code","c78bae33":"code","abccf97d":"code","479631c6":"code","05f415bb":"code","b58c1605":"code","ab43f0b3":"code","3ea58c0d":"code","c3604e28":"code","782a57cf":"code","98324096":"code","b54bbc30":"code","12441c4a":"code","64098493":"code","4325fdd6":"code","3a627fde":"code","021213ca":"code","ed7b9698":"code","7f1612a9":"code","fad115e4":"code","fcb0e895":"code","70ecfd31":"code","4473e9cb":"code","0e7c05e8":"code","d53f39d7":"code","d7c121be":"code","fd1ad618":"code","31e7a8c4":"code","1559f66f":"code","e1771d02":"code","95c7d2b5":"code","d3c609cf":"code","030ad8f5":"code","137b1062":"code","ada0d7ba":"code","a24d6623":"code","d0b4be9d":"code","f77b8ca3":"code","c05f7d27":"code","6f7782c4":"code","5d6e1a86":"code","d5e49731":"code","8ed304b4":"code","93e1f636":"code","d31dcb91":"code","5f20c0ef":"code","cb31a735":"code","e7501904":"code","653ce063":"markdown","58777aa9":"markdown","1d47fd2c":"markdown","4589a180":"markdown","0fa750c7":"markdown","071aca0f":"markdown","ab6c83ed":"markdown","1a91bd1c":"markdown"},"source":{"71db8d93":"import warnings\nwarnings.filterwarnings('ignore')\nimport pandas as pd\nimport numpy as np","cb4c561f":"df = pd.read_csv(\"..\/input\/focusing-on-mobile-app-or-website\/Ecommerce Customers\")","4ec2d246":"df.head()","faa3e9fd":"df.info()","d93563f5":"df.describe()","81f1f682":"redundant =  ['Email','Address','Avatar']\ndf = df. drop(redundant,axis=1)\ndf.head()","058bef70":"import seaborn as sns\nimport matplotlib.pyplot as plt","15acc8ca":"sns.heatmap(df.corr(),annot=True)\nplt.show()","ecdc34ce":"sns.pairplot(df)\nplt.show()","cb0745e5":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","f1b187e0":"np.random.seed(0)\ndf_train,df_test = train_test_split(df,train_size=0.7,test_size=0.3,random_state = 100)","b9f5eaa6":"from sklearn.preprocessing import MinMaxScaler\ndf_train.head()","8adb1229":"df_test.head()","a388c9b8":"scaler = MinMaxScaler()","b5ec4e6a":"num_vars = ['Avg. Session Length','Time on App','Time on Website','Length of Membership','Yearly Amount Spent']\ndf_train[num_vars] = scaler.fit_transform(df_train[num_vars])","e841e913":"df_train.head()","070c441a":"plt.figure(figsize=(10,10))\nsns.pairplot(data=df)\nplt.show()","a44ec50d":"df_train.describe()","7c5b9430":"sns.heatmap(df.corr(),annot = True)","9e208738":"y_train = df_train.pop('Yearly Amount Spent')\nX_train = df_train","7e55a3f7":"import statsmodels.api as sm\nX_train_lm = sm.add_constant(X_train)\nlr_1 = sm.OLS(y_train,X_train_lm).fit()","c81ba41f":"lr_1.params","c78bae33":"print(lr_1.summary())","abccf97d":"X = X_train.drop('Time on Website',axis=1)","479631c6":"X_train_lm1 = sm.add_constant(X)","05f415bb":"lr_2 = sm.OLS(y_train,X_train_lm1).fit()","b58c1605":"lr_2.params","ab43f0b3":"print(lr_2.summary())","3ea58c0d":"from statsmodels.stats.outliers_influence import variance_inflation_factor","c3604e28":"vif = pd.DataFrame()\n\nvif['features'] = X.columns\n\nvif['VIF'] = [variance_inflation_factor(X.values,i) for i in range(X.shape[1])]\n\nvif['VIF'] = round(vif['VIF'],2)\n\nvif = vif.sort_values(by = 'VIF', ascending = False)\n\nvif","782a57cf":"X1 = X.drop('Length of Membership',axis = 1)","98324096":"X_train_lm2 = sm.add_constant(X1)","b54bbc30":"lr_3 = sm.OLS(y_train,X_train_lm2).fit()","12441c4a":"lr_3.params","64098493":"print(lr_3.summary())","4325fdd6":"vif = pd.DataFrame()\n\nvif['features'] = X1.columns\n\nvif['VIF'] = [variance_inflation_factor(X1.values,i) for i in range(X1.shape[1])]\n\nvif['VIF'] = round(vif['VIF'],2)\n\nvif = vif.sort_values(by = 'VIF', ascending = False)\n\nvif","3a627fde":"X2 = X.drop('Avg. Session Length',axis = 1)","021213ca":"X_train_lm3 = sm.add_constant(X2)","ed7b9698":"lr_4 = sm.OLS(y_train,X_train_lm3).fit()","7f1612a9":"lr_4.params","fad115e4":"print(lr_4.summary())","fcb0e895":"vif = pd.DataFrame()\n\nvif['features'] = X2.columns\n\nvif['VIF'] = [variance_inflation_factor(X2.values,i) for i in range(X2.shape[1])]\n\nvif['VIF'] = round(vif['VIF'],2)\n\nvif = vif.sort_values(by = 'VIF', ascending = False)\n\nvif","70ecfd31":"X3 = X.drop('Time on App',axis = 1)","4473e9cb":"X_train_lm4 = sm.add_constant(X3)","0e7c05e8":"lr_5 = sm.OLS(y_train,X_train_lm4).fit()","d53f39d7":"lr_5.params","d7c121be":"print(lr_5.summary())","fd1ad618":"vif = pd.DataFrame()\n\nvif['features'] = X3.columns\n\nvif['VIF'] = [variance_inflation_factor(X3.values,i) for i in range(X3.shape[1])]\n\nvif['VIF'] = round(vif['VIF'],2)\n\nvif = vif.sort_values(by = 'VIF', ascending = False)\n\nvif","31e7a8c4":"X4 = X2.drop('Time on App',axis=1)","1559f66f":"X_train_lm5 = sm.add_constant(X4)","e1771d02":"lr_6 = sm.OLS(y_train,X_train_lm5).fit()","95c7d2b5":"lr_6.params","d3c609cf":"print(lr_6.summary())","030ad8f5":"X5 = X2.drop('Length of Membership',axis=1)","137b1062":"X_train_lm6 = sm.add_constant(X5)","ada0d7ba":"lr_7 = sm.OLS(y_train,X_train_lm6).fit()","a24d6623":"lr_7.params","d0b4be9d":"print(lr_7.summary())","f77b8ca3":"#Lets go ahead and do residual analysis on the train data.\ny_train_amount = lr_6.predict(X_train_lm5)","c05f7d27":"# Plot the histogram of the error terms\nfig = plt.figure()\nsns.distplot((y_train - y_train_amount), bins = 20)\nfig.suptitle('Error Terms', fontsize = 20)                  \n# Plot heading \nplt.xlabel('Errors', fontsize = 18)       ","6f7782c4":"#Making predictions on test data\nnum_vars = ['Avg. Session Length','Time on App','Time on Website','Length of Membership','Yearly Amount Spent']\ndf_test[num_vars] = scaler.transform(df_test[num_vars])","5d6e1a86":"df_test.describe()","d5e49731":"y_test = df_test.pop('Yearly Amount Spent')\nX_test = df_test","8ed304b4":"# Adding constant variable to test dataframe\nX_test_m6 = sm.add_constant(X_test)","93e1f636":"# Creating X_test_m6 dataframe by dropping variables from X_test_m6\n\nX_test_m6 = X_test_m6.drop([\"Avg. Session Length\", \"Time on App\", \"Time on Website\"], axis = 1)","d31dcb91":"# Making predictions using the sixth model\n\ny_pred_m6 = lr_6.predict(X_test_m6)","5f20c0ef":"#Model Evaluation\n# Plotting y_test and y_pred to understand the spread\n\nfig = plt.figure()\nplt.scatter(y_test, y_pred_m6)\nfig.suptitle('y_test vs y_pred', fontsize = 20)              # Plot heading \nplt.xlabel('y_test', fontsize = 18)                          # X-label\nplt.ylabel('y_pred', fontsize = 16)     ","cb31a735":"y_test.head(10) - y_pred_m6.head(10)","e7501904":"from sklearn.metrics import r2_score\nr2_score(y_test, y_pred_m6)","653ce063":"The model predicts the amount spent quite well.","58777aa9":"As We see here that all 3 variables have very high VIF, we would drop these columns and build a model to check for the best model.","1d47fd2c":"We can see that the equation of our best fitted line is:\n\nYearly Amount Spent= 0.813957 x Length of Membership","4589a180":"It looks like Time on website doesn't have much significance in the model.\nSo, We will drop this column from the model.","0fa750c7":"As we can note from lr_3,lr_4 and lr_5, None of the models have a permissible VIF. The best model out of these 3 is lr_4 which has around 88.4% r2 and VIF for both variables as 6.92 and 6.92 each.\n\nNow we need to create another 2 models where we caan drop the 2 variables one by one and check for the best suitable model.","071aca0f":"As we can see that P values for all the variables are now 0. And dropping Time on Website did not cause much change in r2 for the model. We will also check VIF for the independent variables.","ab6c83ed":"Clearly, Higher Length of Membership leads to more purchasing.\nTime on App has better correlation to Amount spent than Time on Website.","1a91bd1c":"Accoding to me, lr_6 seems to be pretty good model where we have only 1 variable i.e. Length of Membership but this model is only 66-67% significant."}}