{"cell_type":{"f7e0dc91":"code","4b09d78a":"code","c8693151":"code","0eb7c89e":"code","94a14b45":"code","456e8ed1":"code","aa341494":"code","da0f63bc":"code","03077988":"code","f08133ad":"code","f5a6b6a3":"code","899c9607":"code","fad0bf25":"markdown","554c5626":"markdown","a18f5fb4":"markdown","28eeccd7":"markdown","72bd5543":"markdown","f03f041d":"markdown","48831994":"markdown","bff8c49d":"markdown","37971602":"markdown","cdd66930":"markdown","a2a01eec":"markdown"},"source":{"f7e0dc91":"from IPython.display import clear_output\n!pip3 install -U lazypredict\n\nclear_output()","4b09d78a":"!pip3 install -U pandas==1.2.3 #Upgrading pandas\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport lazypredict\nfrom lazypredict import Supervised\nfrom lazypredict.Supervised import LazyRegressor\nclear_output()","c8693151":"# import required modules\nimport pandas as pd \nfrom sklearn.model_selection import train_test_split\nimport datetime\n\ntrain = pd.read_csv(\"..\/input\/ventilator-pressure-prediction\/train.csv\")\ntest = pd.read_csv(\"..\/input\/ventilator-pressure-prediction\/test.csv\")","0eb7c89e":"train.columns","94a14b45":"X = train.drop(['id','breath_id','pressure'], axis=1)\ny = train['pressure']","456e8ed1":"# #Spliting into training and validation set\nX_train, X_valid, y_train, y_valid = train_test_split(X, y,test_size=.2,random_state =1)","aa341494":"num_models = 28\nreg_idx = [i for i in range(num_models)]\nnoregs_idx = [8,8,8,8,12,12,12,19,19,19,20,20,21,24] # Removing 14 models from 42 models. Removed models require lot of ram and getting error too \nregs_name =[]\nregs = []\nfor i in range(42):\n    regs_name.append(lazypredict.Supervised.REGRESSORS[i][0])\n    regs.append(lazypredict.Supervised.REGRESSORS[i][1])\n\nfor i in noregs_idx:\n    del regs_name[i]\n    del regs[i]\nprint(\"ALL 28 AVAILABLE REGRESSION MODELS:\")\nfor i in range(num_models):\n    print(i+1 , regs_name[i])","da0f63bc":"from sklearn.metrics import mean_absolute_error\nresults = pd.DataFrame()\nfor i in range(0,num_models):\n    print(i,regs_name[i])\n    reg = LazyRegressor(verbose=0, \n                    ignore_warnings=False,\n                    custom_metric= mean_absolute_error, #Creating custome metric for mae\n                    regressors = [regs[i]])\n    models, predictions = reg.fit(X_train, X_valid, y_train, y_valid)\n    models.index = [regs_name[i]]\n    results = results.append(models)\nclear_output()","03077988":"results = results.sort_values(by = \"mean_absolute_error\")\nprint(results)","f08133ad":"results.head()","f5a6b6a3":"plt.plot(reg_idx , results[\"mean_absolute_error\"],label = \"mean_absolute_error\" ,marker='o')\nplt.xlabel(\"Model ID\")\nplt.ylabel(\"mean_absolute_error\")\nplt.title(\"MAE Comparison of 28 Different Models\")\nplt.legend()\nplt.show()","899c9607":"plt.plot(reg_idx , results[\"Time Taken\"],label = \"Time Taken\" ,marker='*' , color = 'r')\nplt.xlabel(\"Model ID\")\nplt.ylabel(\"Time Taken\")\nplt.title(\"TIME TAKEN of 28 Different Models\")\nplt.legend()\nplt.show()","fad0bf25":"#### Inspired from https:\/\/www.kaggle.com\/odins0n\/30dml-comparison-of-36-different-models","554c5626":" # <h1 style=' border:0;'><center>Google \ud83e\udde0 - Ventilator Pressure Prediction<\/center><\/h1>\n  ## <h1 style=' border:0; color:#F7B2B0 '><center>Comparing with 28 models<\/center><\/h1>","a18f5fb4":"# <h1 style=' border:0; color:#FFA500 '><left> Comparison Plots \ud83d\udcc8 <\/left><\/h1> ","28eeccd7":"# <h1 style=' border:0; color:#FFA500 '><left>Model Selection \ud83d\udcda<\/left><\/h1> ","72bd5543":"# <h1 style=' border:0; color:#FFA500 '><left>\ud83e\udd47 Top 5 Performing Models<\/left><\/h1> ","f03f041d":"# <h1 style=' border:0; color:#FFA500 '><left>\u2714\ufe0f Results<\/left><\/h1> ","48831994":"# <h1 style=' border:0; color:#FFA500 '><center> If you find this notebook usefull support me with giving \u2b06\ufe0f!<\/left><\/h1> ","bff8c49d":"# <h1 style=' border:0; color:#FFA500 '><left>Import Libraries \ud83d\udcda<\/left><\/h1> ","37971602":"# <h1 style=' border:0; color:#FFA500 '><left>Training on 28 different models \ud83c\udfcb\ufe0f<\/left><\/h1> ","cdd66930":"# <h1 style=' border:0; color:#FFA500 '><left>Loading Data \ud83d\ude9a<\/left><\/h1> ","a2a01eec":"# <h1 style=' border:0; color:#FFA500 '><left>Installing Lazy Predict \ud83d\ude34<\/left><\/h1> "}}