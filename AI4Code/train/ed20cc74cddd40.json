{"cell_type":{"ef07e1aa":"code","8a971a18":"code","6d14b255":"code","ea90bfff":"code","219a3359":"code","4fff4d78":"code","e0e482f2":"code","f86dfcfe":"code","2b9ff84d":"code","244eb519":"code","3b2cb7f2":"code","520af874":"code","27c81a3e":"code","742d017b":"code","082323e4":"code","889f7fe2":"code","e2c4da78":"markdown","e9f7738d":"markdown","94053f84":"markdown"},"source":{"ef07e1aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8a971a18":"import matplotlib.pyplot as plt  \nimport seaborn as sns ","6d14b255":"df = pd.read_csv(\"\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv\")","ea90bfff":"df.info ","219a3359":"df.head(20)","4fff4d78":"df.corr()","e0e482f2":"for i in df:\n    print(i)","f86dfcfe":"\ndef summlist(x,y,z):\n    summ = []\n    for i in range(0,len(x)):\n        k = x[i]+y[i]+z[i]\n        summ.append(k)\n    return summ\n\nmath = [student*2\/10 for student in df[\"math score\"]]\nread = [student*4\/10 for student in df[\"reading score\"]]\nwrite = [student*4\/10 for student in df[\"writing score\"]]\n\n\ndf[\"verbal ability\"] = summlist(math,read,write)\n","2b9ff84d":"df.corr()","244eb519":"df.head(20)","3b2cb7f2":"average = sum(df[\"verbal ability\"])\/len(df[\"verbal ability\"])\n\ndf[\"verbal succes\"] = [\"Great\" if i>average else \"Unsufficient\" for i in df[\"verbal ability\"]]","520af874":"df.head(20)","27c81a3e":"df[df[\"verbal ability\"]== 100]","742d017b":"df.corr()","082323e4":"f,ax = plt.subplots(figsize = (8,8))\nsns.heatmap(df.corr(), annot = True , linewidths = .2 , fmt = \".2f\", ax = ax)","889f7fe2":"df[\"verbal ability\"].plot(kind = \"line\", color = \"orange\" , linewidth = 2 , alpha =0.7 , grid = True, linestyle = \"solid\", figsize = (13,11))\nplt.legend(loc = \"lower right\")\nplt.xlabel(\"Student Number\")\nplt.ylabel(\"Verbal Ability\")","e2c4da78":"This guys are our winners","e9f7738d":"Creating function which can summ lists and adding new attribute to our data frame","94053f84":"Adding new feature to our data frame so that we can measure the success of students"}}