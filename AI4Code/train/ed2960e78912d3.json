{"cell_type":{"05eed579":"code","14e3baeb":"code","cf9f2389":"code","948bd1df":"code","1676398b":"code","2444ded0":"code","eec23e4a":"code","1e297c3c":"code","95ca5705":"code","867ad0aa":"code","5f04c1d7":"code","55e4e88d":"code","17ce4144":"code","5546949a":"code","f9e01357":"code","b74b0d9c":"code","8013a2d1":"code","a134fe33":"code","03392d7c":"code","9a85e3c7":"code","82574304":"code","039faf44":"code","dd12d6e0":"code","ab624c20":"code","aa8c72ef":"code","4f87ed5c":"code","6a6fc146":"code","10f984e3":"code","471bdb82":"code","c1639443":"code","af1d753d":"code","704cac32":"code","e4491bb9":"code","8f0b33fe":"code","8a2a8646":"code","f0f9665b":"code","7cce41bd":"code","5f36de0c":"code","2db864ce":"code","66af134b":"code","1e3fde1c":"code","459cae16":"code","ab24c935":"code","0ffdab8e":"code","6decf2fc":"code","f2ced44d":"code","aeb94fda":"code","d8f943d7":"code","8a57af5f":"code","e9c9fd8f":"code","ac8a67e7":"code","569f722c":"code","73de7f54":"markdown","f2189e2a":"markdown","b868fc7e":"markdown","119e2533":"markdown","3f668e2f":"markdown","b6bfc6ca":"markdown","453facc3":"markdown","8718c599":"markdown","cb336fac":"markdown","4b49547b":"markdown","5f63ed94":"markdown","eaa0e884":"markdown","c168c595":"markdown","406f3a06":"markdown","8a5e642c":"markdown","29dc6038":"markdown","c1e622d3":"markdown","c8cbd2da":"markdown","59c9c0ba":"markdown","543b73be":"markdown","78fa45e2":"markdown","8e9625ce":"markdown","60ec6d0a":"markdown","462716a7":"markdown","892264ae":"markdown","275bedfb":"markdown","df8006fb":"markdown","d574129f":"markdown","a984a11c":"markdown","87eadb04":"markdown","5bb78934":"markdown","f704aa93":"markdown","4cd66c49":"markdown","245d371a":"markdown","1cedfc87":"markdown","3e09c9d4":"markdown"},"source":{"05eed579":"!pip install scispacy\n!pip install https:\/\/s3-us-west-2.amazonaws.com\/ai2-s2-scispacy\/releases\/v0.2.4\/en_core_sci_sm-0.2.4.tar.gz","14e3baeb":"import pandas as pd\nimport unicodedata as ud\nimport fasttext\nimport re\nimport scispacy\nimport spacy\nimport requests\n\nfrom typing import Dict\nfrom itertools import chain\nfrom tqdm.notebook import tqdm\nfrom string import punctuation\nfrom html import unescape\nfrom ftfy import fix_text\nfrom bs4 import BeautifulSoup\nfrom nltk.stem import PorterStemmer\nfrom Levenshtein import distance\n\ntqdm.pandas()","cf9f2389":"df = pd.read_csv(\n    filepath_or_buffer='\/kaggle\/input\/CORD-19-research-challenge\/metadata.csv', \n    encoding='utf-8',\n    delimiter=',',\n)\n\ndf.fillna({'title': '', 'abstract': ''}, inplace=True)\nprint(f'Number of studies: {len(df)}')","948bd1df":"empty_mask = (df['title'].str.strip() == '') & (df['abstract'].str.strip() == '')\nprint(f'Number of empty studies: {sum(empty_mask)}')\n\ndf = df.loc[~empty_mask]\nprint(f'Number of studies: {len(df)}')","1676398b":"df['title'] = df['title'].progress_apply(\n    lambda title: unescape(unescape(title))\n)\n\ndf['abstract'] = df['abstract'].progress_apply(\n    lambda abstract: unescape(unescape(abstract))\n)","2444ded0":"model = fasttext.load_model('\/kaggle\/input\/language-identification\/lid.176.bin')","eec23e4a":"df['title_lang'] = df['title'].progress_apply(\n    lambda title: model.predict(title.lower(), k=1)[0][0].split('__label__')[1]\n)\n\ndf['title_lang'].value_counts().head(10)","1e297c3c":"df['abstract_lang'] = df['abstract'].progress_apply(\n    lambda abstract: model.predict(abstract.lower(), k=1)[0][0].split('__label__')[1]\n)\n\ndf['abstract_lang'].value_counts().head(10)","95ca5705":"title_en_mask = df['title_lang'] == 'en'\ndf.loc[~title_en_mask, 'title'] = ''\nprint(f'Number of non-english titles: {sum(~title_en_mask)}')\n\nabstract_en_mask = df['abstract_lang'] == 'en'\ndf.loc[~abstract_en_mask, 'abstract'] = ''\nprint(f'Number of non-english abstracts: {sum(~abstract_en_mask)}')","867ad0aa":"def append_dot(text: str) -> str:\n    return text if re.search(r'[.?!]$', text) or text == '' else text + '.'\n\ndf['title'] = df['title'].str.strip().progress_apply(append_dot)\ndf['abstract'] = df['abstract'].str.strip().progress_apply(append_dot)","5f04c1d7":"abstract_mask = df['abstract'].str.startswith('Abstract')\nprint(f\"There are {sum(abstract_mask)} abstracts that start with word `abstract`.\")\n\ndf.loc[abstract_mask, 'abstract'] = (df\n    .loc[abstract_mask, 'abstract']\n    .progress_apply(lambda text: text[8:])\n    .str.strip()\n)","55e4e88d":"df['text'] = (df['title'] + ' ' + df['abstract']).str.strip()","17ce4144":"empty_mask = df['text'] == ''\nprint(f'Number of empty studies: {sum(empty_mask)}')\n\ndf = df.loc[~empty_mask]\nprint(f'Number of studies: {len(df)}')","5546949a":"html_mask = df['text'].progress_apply(\n    lambda text: bool(BeautifulSoup(text, \"html.parser\").find())\n)\n\nprint(f'Found {sum(html_mask)} studies with HTML tags.')","f9e01357":"df['text'] = df['text'].progress_apply(\n    lambda text: BeautifulSoup(text, \"html.parser\").get_text()\n)","b74b0d9c":"hyperlink_pattern = re.compile('http:\/\/\\S+|https:\/\/\\S+')","8013a2d1":"hyperlink_mask = df['text'].progress_apply(\n    lambda text: bool(re.search(hyperlink_pattern, text))\n)\n\nprint(f'Found {sum(hyperlink_mask)} studies with hyperlinks.')","a134fe33":"df['text'] = df['text'].progress_apply(\n    lambda text: re.sub(hyperlink_pattern, '', text)\n)","03392d7c":"df['text'] = df['text'].progress_apply(lambda text: fix_text(text, normalization='NFKC'))","9a85e3c7":"response = requests.get('https:\/\/www.i18nqa.com\/debug\/utf8-debug.html')\nresponse.encoding = 'UTF-8'  # By default is ISO-8859-1 (aka. Latin1) -> See RFC2854\nif response.status_code != 200:\n    print(\"Couldn't download a webpage source.\")","82574304":"soup = BeautifulSoup(\n    markup=response.text, \n    features='html.parser'\n)\n\ntable = soup.find(\"table\", attrs={\"id\": \"dbg\"})\n\nmapping = []\nfor row in table.findAll(\"tr\"):\n    cells = row.findAll(\"td\", attrs={\"class\": \"ch\"})\n    if cells:\n        if cells[1].text != '' and cells[0].text != '':\n            mapping.append((cells[1].text, cells[0].text))\n        \n        if cells[3].text != '' and cells[2].text != '':\n            mapping.append((cells[3].text, cells[2].text))\n            \ndf_mapping = pd.DataFrame(mapping, columns=['key', 'value'])\ndf_mapping.head()","039faf44":"df_mapping = df_mapping[df_mapping['key'].str.strip().apply(len) > 1]","dd12d6e0":"df_mapping_agg = df_mapping.groupby('key')['value'].apply(list)\ndf_mapping_agg[df_mapping_agg.apply(len) > 1]","ab624c20":"df_mapping['key'] = df_mapping['key'].apply(lambda key: ud.normalize('NFKC', key))\ndf_mapping['value'] = df_mapping['value'].apply(lambda value: ud.normalize('NFKC', value))\n\nencoding_mapping = dict(zip(df_mapping['key'], df_mapping['value']))","aa8c72ef":"encoding_pattern = '|'.join(encoding_mapping.keys())\nencoding_mask = df['text'].str.contains(encoding_pattern)\n\nprint(f'Found {sum(encoding_mask)} studies with encoding issues.')","4f87ed5c":"def replace_multiple(text: str, mapping: Dict[str, str]) -> str:\n    for key in mapping:\n        text = text.replace(key, mapping[key])\n    return text","6a6fc146":"df['text'] = df['text'].progress_apply(lambda text: replace_multiple(text, encoding_mapping))","10f984e3":"def is_nonunicode_char(char):\n    try:\n        ud.name(char)\n    except ValueError:\n        return True\n    \n    return False","471bdb82":"nonunicode_chars = df['text'].progress_apply(\n    lambda text: [char for char in text if is_nonunicode_char(char)]\n)\n\nnonunicode_chars_counts = pd.Series(chain(*nonunicode_chars)).value_counts()","c1639443":"nonunicode_chars_counts","af1d753d":"with pd.option_context('display.max_colwidth', -1):    \n    char_mask = df['text'].str.contains('\ue5fb')\n    display(df.loc[char_mask, 'text'])","704cac32":"unicode_mapping = {\n    '\ue5f8': '-',\n    '\uf0b7': '',\n    '\ue605': '=',\n    '\ue5fb': '=',\n    '\uf020': ''\n}","e4491bb9":"df['text'] = df['text'].progress_apply(lambda text: replace_multiple(text, unicode_mapping))","8f0b33fe":"def is_nonascii_char(char: str) -> bool:\n    try:\n        char.encode('ascii')\n    except ValueError:\n        return True\n    \n    return False","8a2a8646":"def get_nonascii_df(df: pd.DataFrame) -> pd.DataFrame:\n    nonascii_chars = df['text'].progress_apply(\n        lambda text: [\n            (char, ud.category(char), ord(char)) \n            for char in text \n            if is_nonascii_char(char)\n        ]\n    )\n\n    df_nonascii_chars = pd.DataFrame(\n        data=chain(*nonascii_chars), \n        columns=['char', 'category', 'ord']\n    )\n    \n    return (df_nonascii_chars\n        .groupby('category')['char']\n        .apply(set)\n    )","f0f9665b":"df.loc[10993, 'text'] = \"\"\"Traditional usages, botany, phytochemistry, pharmacology and toxicology of Polygonum multiflorum Thunb.: A review. Ethnopharmacological relevance Polygonum multiflorum Thunb., which is known as Heshouwu in China. It is traditionally valued and reported for hair-blacking, liver and kidney-tonifying and anti-aging effects as well as low toxicity. The aim of this review is to provide comprehensive information on the botany, traditional uses, phytochemistry, pharmacological research and toxicology of Polygonum multiflorum, based on the scientific literature. Moreover, trends and perspectives for future investigation of this plant are discussed. It will build up a new foundation for further study on Polygonum multiflorum. Materials and methods A systematic review of the literature on Polygonum multiflorum was performed using several resources, including classic books on Chinese herbal medicine and various scientific databases, such as PubMed, SciFinder, the Web of Science, Science Direct, China Knowledge Resource Integrated (CNKI). Results Polygonum multiflorum is widely distributed throughout the world and has been used as a traditional medicine for centuries in China. The ethnomedical uses of Polygonum multiflorum have been recorded in many provinces of China and Japan for nine species of adulterants in six families. More than 100 chemical compounds have been isolated from this plant, and the major components have been determined to be stilbenes, quinones, flavonoids and others. Crude extracts and pure compounds of this plant are used as effective agents in pre-clinical and clinical practice due to their anti-aging, anti-hyperlipidaemia, anti-cancer and anti-inflammatory effects and to promote immunomodulation, neuroprotection, and the curing of other diseases. However, these extracts can also lead to hepatotoxicity, nephrotoxicity and embryonic toxicity. Pharmacokinetic studies have demonstrated that the main components of Polygonum multiflorum, such as 2,3,5,4\u2032-tetrahydroxystilbene-2-O-\u03b2-d-glucopyranoside and emodin are distributed among many organs and tissues. Conclusion Therapeutic potential of Polygonum multiflorum has been demonstrated in the conditions like Alzheimer\u05f3s disease, Parkinson\u05f3s disease, hyperlipidaemia, inflammation and cancer, which is attributed to the presence of various stilbenes, quinones, flavonoids, phospholipids and other compounds in the drug. On the other hand, the adverse effects (hepatotoxicity, nephrotoxicity, and embryonic toxicity) of this plant were caused by the quinones, such as emodin and rhein. Thus more pharmacological and toxicological mechanisms on main active compounds are necessary to be explored, especially the combined anthraquinones (Emodin-8-O-\u03b2-d-glucopyranoside, Physcion-8-O-\u03b2-d-glucopyranoside, etc.) and the variety of stilbenes.\"\"\"\ndf.loc[14871, 'text'] = \"\"\"YouTube as source of information on 2019 novel coronavirus outbreak: A cross sectional study of English and Mandarin content. Background The current 2019 novel coronavirus outbreak is rapidly evolving. YouTube has been recognized as a popular source of information in previous disease outbreaks. We analyzed the content on YouTube about n-CoV in English and Mandarin languages. Methods YouTube was searched using the terms '2019 novel coronavirus', 'Wuhan virus' on 1st and 2nd February 2020. First 50 videos in each group were analyzed. Videos in other languages, duplicate videos, those without an audio and duration >15 min were excluded .72 videos in English and 42 in Mandarin were reviewed. 2 reviewers classified the videos as useful, misleading or news based on pre specified criterion. Inter-observer agreement was evaluated with kappa coefficient. Modified DISCERN index for reliability and medical information and content index (MICI) score were used for content analysis. Results These videos attracted cumulative 21,288,856 views. 67% of English and 50% Mandarin videos had useful information. The viewership of misleading Mandarin videos was higher than the useful ones. WHO accounted for only 4% of useful videos. Mean DISCERN score for reliability was 3.12\/5 and 3.25\/5 for English and Mandarin videos respectively. Mean cumulative MICI score of useful videos was low (6.71\/25 for English and 6.28\/25 for Mandarin). Conclusions YouTube viewership during 2019 n-CoV outbreak is higher than previous outbreaks. The medical content of videos is suboptimal International health agencies are underrepresented. Given its popularity, YouTube should be considered as important platform for information dissemination.\"\"\"\ndf.loc[15931, 'text'] = \"\"\"Traditional Chinese medicine herbal extracts of Cibotium barometz, Gentiana scabra, Dioscorea batatas, Cassia tora, and Taxillus chinensis inhibit SARS-CoV replication. Development of anti-severe acute respiratory syndrome associated coronavirus (SARS-CoV) agents is pivotal to prevent the reemergence of the life-threatening disease, SARS. In this study, more than 200 extracts from Chinese medicinal herbs were evaluated for anti-SARS-CoV activities using a cell-based assay that measured SARS-CoV-induced cytopathogenic effect (CPE) in vitro on Vero E6 cells. Six herbal extracts, one each from Gentianae Radix (l\u00f3ng d\u01cen; the dried rhizome of Gentiana scabra), Dioscoreae Rhizoma (sh\u0101n y\u00e0o; the tuber of Dioscorea batatas), Cassiae Semen (ju\u00e9 m\u00edng z\u01d0; the dried seed of Cassia tora) and Loranthi Ramus (s\u0101ng j\u00ec sh\u0113ng; the dried stem, with leaf of Taxillus chinensis) (designated as GSH, DBM, CTH and TCH, respectively), and two from Rhizoma Cibotii (g\u01d2u j\u01d0; the dried rhizome of Cibotium barometz) (designated as CBE and CBM), were found to be potent inhibitors of SARS-CoV at concentrations between 25 and 200\u03bcg\/ml. The concentrations of the six extracts needed to inhibit 50% of Vero E6 cell proliferation (CC50) and 50% of viral replication (EC50) were determined. The resulting selective index values (SI=CC50\/EC50) of the most effective extracts CBE, GSH, DBM, CTH and TCH were>59.4,> 57.5,> 62.1,> 59.4, and>92.9, respectively. Among these extracts, CBM and DBM also showed significant inhibition of SARS-CoV 3CL protease activity with IC50 values of 39\u03bcg\/ml and 44\u03bcg\/ml, respectively. Our findings suggest that these six herbal extracts may have potential as candidates for future development of anti-SARS therapeutics.\"\"\"\ndf.loc[15932, 'text'] = \"\"\"Antiviral Decoction of Isatidis Radix (b\u01cen l\u00e1n g\u0113n) Inhibited Influenza Virus Adsorption on MDCK Cells by Cytoprotective Activity. The aim of this study is to elucidate how the Isatidis Radix (b\u01cen l\u00e1n g\u0113n) tonic, as an aqueous mixture of hundreds of compositions, interrupts the infection of influenza viruses to their host cells. The efficacy of the tonic was evaluated and expressed as cell proliferation rate and plaque reduction rate in Madin-Darby Canine Kidney (MDCK) cells, against 3 strains of influenza A and B viruses. This boiling water (at 100\u00b0C) extract of Isatidis Radix (RIE) showed antiviral activity against influenza virus A and B. The concentration for 50% inhibition of influenza virus A replication (IC50) in MDCK cell was 12.6mg\/mL with a therapeutic index >8. When cells were incubated with RIE prior to virus adsorption, the numbers of viable cell were at least doubled compared to the numbers of virus control, RIE incubation after virus adsorption and RIE incubation with virus prior to adsorption, in both influenza virus A and B. Moreover, much less virus particles were spotted by scanning electron microscope (SEM) in the RIE pre-treated cells than the cells without RIE treatment. These results indicate the antiviral activity of RIE is mainly attributed to its host cell protection effect but not actions on virus or post-virus-adsorption interruption. Cell, but not virus, is more likely to be the action target of RIE.\"\"\"\ndf.loc[20310, 'text'] = \"\"\"Antiviral Decoction of Isatidis Radix (b\u01cen l\u00e1n g\u0113n) Inhibited Influenza Virus Adsorption on MDCK Cells by Cytoprotective Activity. The aim of this study is to elucidate how the Isatidis Radix (b\u01cen l\u00e1n g\u0113n) tonic, as an aqueous mixture of hundreds of compositions, interrupts the infection of influenza viruses to their host cells. The efficacy of the tonic was evaluated and expressed as cell proliferation rate and plaque reduction rate in Madin-Darby Canine Kidney (MDCK) cells, against 3 strains of influenza A and B viruses. This boiling water (at 100\u00b0C) extract of Isatidis Radix (RIE) showed antiviral activity against influenza virus A and B. The concentration for 50% inhibition of influenza virus A replication (IC(50)) in MDCK cell was 12.6 mg\/mL with a therapeutic index >8. When cells were incubated with RIE prior to virus adsorption, the numbers of viable cell were at least doubled compared to the numbers of virus control, RIE incubation after virus adsorption and RIE incubation with virus prior to adsorption, in both influenza virus A and B. Moreover, much less virus particles were spotted by scanning electron microscope (SEM) in the RIE pre-treated cells than the cells without RIE treatment. These results indicate the antiviral activity of RIE is mainly attributed to its host cell protection effect but not actions on virus or post-virus-adsorption interruption. Cell, but not virus, is more likely to be the action target of RIE.\"\"\"\ndf.loc[20309, 'text'] = \"\"\"Traditional Chinese medicine herbal extracts of Cibotium barometz, Gentiana scabra, Dioscorea batatas, Cassia tora, and Taxillus chinensis inhibit SARS-CoV replication. Development of anti-severe acute respiratory syndrome associated coronavirus (SARS-CoV) agents is pivotal to prevent the reemergence of the life-threatening disease, SARS. In this study, more than 200 extracts from Chinese medicinal herbs were evaluated for anti-SARS-CoV activities using a cell-based assay that measured SARS-CoV-induced cytopathogenic effect (CPE) in vitro on Vero E6 cells. Six herbal extracts, one each from Gentianae Radix (l\u00f3ng d\u01cen; the dried rhizome of Gentiana scabra), Dioscoreae Rhizoma (sh\u0101n y\u00e0o; the tuber of Dioscorea batatas), Cassiae Semen (ju\u00e9 m\u00edng z\u01d0; the dried seed of Cassia tora) and Loranthi Ramus (s\u0101ng j\u00ec sh\u0113ng; the dried stem, with leaf of Taxillus chinensis) (designated as GSH, DBM, CTH and TCH, respectively), and two from Rhizoma Cibotii (g\u01d2u j\u01d0; the dried rhizome of Cibotium barometz) (designated as CBE and CBM), were found to be potent inhibitors of SARS-CoV at concentrations between 25 and 200 \u03bcg\/ml. The concentrations of the six extracts needed to inhibit 50% of Vero E6 cell proliferation (CC(50)) and 50% of viral replication (EC(50)) were determined. The resulting selective index values (SI = CC(50)\/EC(50)) of the most effective extracts CBE, GSH, DBM, CTH and TCH were > 59.4, > 57.5, > 62.1, > 59.4, and > 92.9, respectively. Among these extracts, CBM and DBM also showed significant inhibition of SARS-CoV 3CL protease activity with IC(50) values of 39 \u03bcg\/ml and 44 \u03bcg\/ml, respectively. Our findings suggest that these six herbal extracts may have potential as candidates for future development of anti-SARS therapeutics. Abbreviations SARS, severe acute respiratory syndrome CoV, coronavirus CPE, cytopathogenic effect TCM, traditional Chinese medicine.\"\"\"\ndf.loc[25814, 'text'] = \"\"\"Suffering a Loss Is Good Fortune: Myth or Reality? We sometimes decide to take an offered option that results in apparent loss (e.g., unpaid overtime). Mainstream decision theory does not predict or explain this as a choice we want to make, whereas such a choice has long been described and highly regarded by the traditional Chinese dogma - suffering a loss is good fortune. To explore what makes the dogma work, we developed a celebrity anecdote\u2010based scale to measure \"Chikui\" (suffering a loss) likelihood and found that:(i) people with higher scores on the Chikui Likelihood Scale (CLS) were more likely to report higher scores on subjective well\u2010being and the Socioeconomic Index for the present and (ii) the current Socioeconomic Index could be positively predicted not only by current CLS scores but also by retrospective CLS scores recalled for the past, and the predictive effect was enhanced with increasing time intervals. Our findings suggest that \"suffering a loss is good fortune\" is not a myth but a certain reality. \u00a9 2017 The Authors Journal of Behavioral Decision Making Published by John Wiley & Sons Ltd.\"\"\"\ndf.loc[43373, 'text'] = \"\"\"Performance of radiologists in differentiating COVID-19 from viral pneumonia on chest CT. Background Despite its high sensitivity in diagnosing COVID-19 in a screening population, chest CT appearances of COVID 19 pneumonia are thought to be non-specific. Purpose To assess the performance of United States (U.S.) and Chinese radiologists in differentiating COVID-19 from viral pneumonia on chest CT. Methods A total of 219 patients with both positive COVID-19 by RT-PCR and abnormal chest CT findings were retrospectively identified from 7 Chinese hospitals in Hunan Providence, China from January 6 to February 20, 2020. A total of 205 patients with positive Respiratory Pathogen Panel for viral pneumonia and CT findings consistent with or highly suspicious for pneumonia by original radiology interpretation within 7 days of each other were identified from Rhode Island Hospital in Providence, RI. Three Chinese radiologists blindly reviewed all chest CTs (n=424) to differentiate COVID-19 from viral pneumonia. A sample of 58 age-matched cases was randomly selected and evaluated by 4 U.S. radiologists in a similar fashion. Different CT features were recorded and compared between the two groups. Results For all chest CTs, three Chinese radiologists correctly differentiated COVID-19 from non-COVID-19 pneumonia 83% (350\/424), 80% (338\/424), and 60% (255\/424) of the time, respectively. The seven radiologists had sensitivities of 80%, 67%, 97%, 93%, 83%, 73% and 70% and specificities of 100%, 93%, 7%, 100%, 93%, 93%, 100%. Compared to non-COVID-19 pneumonia, COVID-19 pneumonia was more likely to have a peripheral distribution (80% vs. 57%, p<0.001), ground-glass opacity (91% vs. 68%, p<0.001), fine reticular opacity (56% vs. 22%, p<0.001), and vascular thickening (59% vs. 22%, p<0.001), but less likely to have a central+peripheral distribution (14.% vs. 35%, p<0.001), pleural effusion (4.1 vs. 39%, p<0.001) and lymphadenopathy (2.7% vs. 10.2%, p<0.001). Conclusion Radiologists in China and the United States distinguished COVID-19 from viral pneumonia on chest CT with high specificity but moderate sensitivity. A translation of this abstract in Farsi is available in the supplement.\"\"\"\ndf.loc[43519, 'text'] = \"\"\"Expert consensus on Pulmonary Function Testing during the epidemic of Corona Virus Disease 2019. Corona virus disease 2019 (COVID-19) is mainly transmitted by respiratory droplets and close contact. Pulmonary function testing procedures have been associated with an increasing risk of COVID-19 transmission among patients\/subjects and medical staffs. Effective prevention and control strategies must be compulsorily implemented to prevent nosocomial infection. This recommendation is intended to be followed by healthcare workers (HCWs) of pulmonary function testing laboratory when COVID-19 is in epidemic. Based on the features of pulmonary function testing, precaution principles and strategies are developed in three aspects of management for HCWs, operating procedure, environment and equipment. Indications of pulmonary function testing should be followed strictly. It is strongly recommended to suspend the test for the confirmed or suspected cases of COVID-19 during the contagious stage, and to postpone the test for other patients if it is not imperative. Medical personnel should mandatorily adhere to the standard stratification of precaution measures. Patients\/Subjects should be isolated in a separate area for testing. Disposable in-line filters must be used during pulmonary function testing. Cleaning and disinfection procedures for environment and equipment in pulmonary function testing laboratory should be paid more attention.\"\"\"\ndf.loc[43523, 'text'] = \"\"\"Cause analysis and treatment strategies of \"recurrence\" with novel coronavirus pneumonia (covid-19) patients after discharge from hospital. With a large number of COVID-19 patients discharging from hospital, some had showed re-fever and positive nucleic acid test after discharge from hospital. This might be due to the biological characteristics of 2019-nCoV, and might also be related to the basic disease, clinical status, glucocorticoid using, sample sampling, processing and detecting of patients, and some even related to the re-infection or secondary bacterial virus infection. Therefore, we suggest that in view of this phenomenon, further stratified management of discharge from hospital should be carried out on the basis of guidelines, especially for patients with advanced age, underlying diseases or severe or critical pneumonia. For those patients who can\\'t completely deoxygenate for a long time after hospitalization, individualized treatment methods and different discharge evaluation criteria should be adopted to ensure the complete cure of patients and prevent recurrencing after discharge from hospital.\"\"\"\ndf.loc[43798, 'text'] = \"\"\"Analysis of clinical features of 153 patients with novel coronavirus pneumonia in Chongqing. Objective To analyze the clinical data of 153 patients with novel coronavirus pneumonia (COVID-19) in chongqing ,and provide reference and thinking for the diagnosis and treatment. Methods Analyze the clinical data, laboratory examination and chest imaging characteristics of 153 COVID-19 patients in Chongqing Public Health Medical Center from January 26 to February 5, 2020. According to the relevant diagnostic criteria ,patients were divided into non-severe group(n=132) and severe group(n=21),and analyze the correlation between serum index changes and disease severity. Results Combined with diabetes and chronic respiratory diseases, the severity of the disease was statistically significant ( \u03c7 2 =11.04 and 6.94, P <0.05). No symptoms were found in patients with mild illness ( \u03c7 2 =4.09, P <0.05) .The proportion of fever and muscle soreness in the severe group was higher than that in the non-severe group ( \u03c7 2 =4.40 and 22.67, P <0.05).Among the concomitant symptoms, the proportion of cough and shortness of breath in the severe group was higher than that in the non-severe group ( \u03c7 2 =8.46 and 4.80, P <0.05).C-reactive protein and d-dimer were higher in the severe group than in the non-severe group ( t =43.44 and 37.13, P <0.05), and the number of CD 3 + T lymphocyte cells, CD 4 + T lymphocyte cells and CD 8 + T lymphocyte cells in the severe group was lower than that in the non-severe group (Z=27.25, 20.60 and 17.36, P <0.05).Compared with the non-severe group, both lungs and the right lung lower lobe were more susceptible to involved ( \u03c7 2 =6.95 and 20.39, P <0.05) . Conclusion Severity of COVID-19 was associated with underlying disease, symptoms, site of involvement, C-reactive protein, d-dimer, CD 3 + T lymphocyte count, CD 4 + T lymphocyte count, and CD 8 + T lymphocyte count.\"\"\"\ndf.loc[43896, 'text'] = \"\"\"First case of severe childhood novel coronavirus pneumonia in China. Summary One patient with a complaint of \"intermittent diarrhea, vomiting for 6 days, fever with shortness of breath for half a day\" was referred to the Department of Critical Medicine, Wuhan Children\\'s Hospital, and was diagnosed with neonatal severe coronavirus pneumonia (NCP). Relevant databases such as China Knowledge Net, Weipu, Wanfang and other related databases were searched with the keywords of \"new coronavirus pneumonia\", \"children\", and \"critical severity\" as of February 8, 2020. This case is the first child with severe NCP in China. It started with gastrointestinal symptoms, early respiratory symptoms were not obvious, and rapidly progressed to acute respiratory distress syndrome, septic shock, and acute renal failure. The patient was negative for nucleic acid test of 2019 new-type coronavirus (2019-nCoV) for 2 consecutive consecutive throat swabs. For severe suspected cases, it is recommended to take samples of the lower respiratory tract or repeat samples of the upper respiratory tract for testing. Continuous blood purification technology can be applied to the treatment of children with severe NCP as early as possible.\"\"\"\ndf.loc[46814, 'text'] = \"\"\"Some Chinese folk prescriptions for wind-cold type common cold. Although self-limiting, the common cold (g\u01cen m\u00e0o) is highly prevalent. There are no effective antivirals to cure the common cold and few effective measures to prevent it, However, for thousands years, Chinese people have treated the common cold with natural herbs, According to the traditional Chinese medicine (TCM) theory (zh\u014dng y\u012b l\u01d0 l\u00f9n), the common cold is considered as an exterior syndrome, which can be further divided into the wind-cold type (f\u0113ng h\u00e1n x\u00edng), the wind-heat type (f\u0113ng r\u00e8 x\u00edng), and the summer heat dampness type (sh\u01d4 r\u00e8 x\u00edng). Since the most common type of common cold caught in winter and spring is the wind-cold type, the article introduced some Chinese folk prescriptions for the wind-cold type common cold with normal and weak physique, respectively. For thousands of years, Chinese folk prescriptions for the common cold, as complementary and alternative medicine (CAM; b\u01d4 ch\u014dng y\u01d4 t\u00ec d\u00e0i y\u012b xu\u00e9), have been proven to be effective, convenient, cheap, and most importantly, safe. The Chinese folk prescriptions (zh\u014dng gu\u00f3 m\u00edn ji\u0101n ch\u01d4 f\u0101ng) for the wind-cold type common cold are quite suitable for general practitioners or patients with the wind-cold type common cold, to treat the disease. Of course, their pharmacological features and mechanisms of action need to be further studied.\"\"\"\ndf.loc[45438, 'text'] = \"\"\"Anti-inflammatory and Antimicrobial Effects of Heat-clearing Chinese Herbs: A Current Review. ABSTRACT Inflammation is a normal immune response; but if the body's regulation of inflammation is dysfunctional, then it will have an adverse effect on the body. Although use of modern drugs for inflammation has a relieving effect, it is still unsatisfactory. Moreover, the emergence of drug-resistant strains and even new kinds of microorganisms is causing significant morbidity and mortality. Recently, more attention has been focused on herbal medicine to treat various diseases because of the ability of the herbs to affect multiple target signaling pathways and their multiple mechanisms of action. Thus, a large number of studies have reported on the anti-inflammatory and antimicrobial effects of the traditional Chinese herbs. Literature survey was performed by conducting systematic electronic search in PubMed, Science Direct, Google Scholar, and in books. This review has listed 11 heat-clearing Chinese herbs (HCCHs) including Scutellaria baicalensis (Hu\u00e1ng Q\u00edn), Coptis chinensis (Hu\u00e1ng Li\u00e1n), Flos Lonicerae (J\u012bn Y\u00edn H\u016ba), Forsythia suspensa (Li\u00e1n Qi\u00e0o), Isatidis Folium (D\u00e0 Q\u012bn Y\u00e8), Radix Isatidis (B\u01cen L\u00e1n G\u0113n), Viola yedoensis (Z\u01d0 Hu\u0101 D\u00ec D\u012bn), Pulsatilla Radix (B\u00e1i T\u00f3u W\u0113n), Andrographis paniculata (Chu\u0101n X\u012bn Li\u00e1n), Houttuynia cordata (Y\u00fa X\u012bng C\u01ceo), and Patrinia Herba (B\u00e0i Ji\u00e0n C\u01ceo), which have anti-inflammatory and antimicrobial effects, and has described their effects through different mechanisms of action and multiple targets. Their ability to affect multiple target signaling pathways and their potential mechanisms of action contributing to their anti-inflammatory and antimicrobial activity may be related to their action of removing heat and counteracting toxicity. Further studies are needed on the collection of HCCHs to know the detailed mechanism of action of herbs in this group for the assessment of effective drug.\"\"\"","7cce41bd":"df_nonascii_chars = get_nonascii_df(df)\n\nwith pd.option_context('display.max_colwidth', -1):\n    display(df_nonascii_chars)","5f36de0c":"with pd.option_context('display.max_colwidth', -1):    \n    char_mask = df['text'].str.contains('\u2253')\n    display(df.loc[char_mask, 'text'])","2db864ce":"ascii_mapping = {\n    # Cf\n    '\\xad': '',\n    '\\u200b': '',   \n        \n    # Ll    \n    '\u013a': 'l', \n    '\u00e7': 'c',\n    '\u03c7': 'x', \n    '\u01e7': 'g', \n    '\u0435': 'e', \n    '\u0144': 'n', \n    '\u00e8': 'e',\n    '\u0113': 'e', \n    '\u04e7': 'o', \n    '\u00f2': 'o', \n    '\u00fc': 'u', \n    '\u0219': 's', \n    '\u021b': 't', \n    '\u00f1': 'n', \n    '\u016b': 'u', \n    '\u00fa': 'u', \n    '\u00e3': 'a', \n    '\u00e2': 'a', \n    '\u00ea': 'e', \n    '\u00ed': 'i', \n    '\u0107': 'c', \n    '\u03bf': 'o', \n    '\u0151': 'o', \n    '\u014d': 'o', \n    '\u03c2': 'c', \n    '\u012b': 'i', \n    '\u00eb': 'e', \n    '\u01d0': 'i', \n    '\u03ca': 'i', \n    '\u0101': 'a', \n    '\u00f9': 'u', \n    '\u01d4': 'u', \n    '\u00e9': 'e', \n    '\u00fd': 'y', \n    '\u00ef': 'i', \n    '\u01d2': 'o', \n    '\u00f3': 'o', \n    '\u01ce': 'a', \n    '\u00ee': 'i', \n    '\u0153': 'oe', \n    '\u0142': 'l',\n    '\u0103': 'a', \n    '\u0163': 't', \n    '\u0131': 'i', \n    '\u015b': 's', \n    '\u00f6': 'o', \n    '\u00e0': 'a', \n    '\u00e1': 'a', \n    '\u00ec': 'i', \n    '\u015f': 's', \n    '\u00e4': 'a', \n    '\u00e6': 'ae', \n    '\u00f4': 'o',\n    # Exceptions\n    '\u0138': '\u03ba',\n    '\u043a': '\u03ba',\n    '\u025b': '\u03b5',\n    '\u0251': '\u03b1',\n    \n    # Lm\n    '\u02b9': \"'\", \n    '\u02c8': \"'\",\n    \n    # Lu\n    '\u0421': 'C', \n    '\u00c1': 'A', \n    '\u0397': 'H', \n    '\u00d3': 'O', \n    '\u00c6': 'AE', \n    '\u03a7': 'X', \n    '\u00d6': 'O', \n    '\u015e': 'S', \n    '\u021a': 'T', \n    '\u0399': 'I', \n    '\u0391': 'A', \n    '\u00c0': 'A', \n    '\u00c7': 'C', \n    '\u00c4': 'A', \n    '\u039c': 'M', \n    '\u00dc': 'U', \n    '\u039b': '^', \n    '\u00dd': 'Y', \n    '\u00ce': 'I', \n    '\u00c9': 'E', \n    '\u00cf': 'I', \n    '\u0152': 'OE', \n    '\u00c8': 'E', \n    '\u039d': 'N', \n    '\u0130': 'I', \n    '\u0218': 'S',\n    # Exceptions\n    '\u03a3': '\u2211',\n    '\u0424': '\u03a6',\n    \n    # Mn\n    '\u0301': '\"', \n    '\u0304': '', \n    '\u0307': '', \n    '\u0308': '', \n    '\u030a': '', \n    '\u0331': '', \n    '\u0336': '-',\n    \n    # Pd\n    '\u2015': '-',\n    '\u2013': '-', \n    '\u2012': '-', \n    '\u2010': '-', \n    '\u2014': '-', \n    \n    # Pf\n    '\u00bb': '',\n    \n    # Pf\n    '\u00ab': '',\n     \n    # Po\n    '\u2032': \"'\",\n    '\u05f3': \"'\",\n    '\u00b7': '.',\n    '\u00a7': '',\n    '\u2020': '',\n    '\u204e': '*',\n    '\u2021': '',\n    '\u00b6': '',\n    '\u2022': '-',\n    \n    # Sk    \n    '\u02c2': '<',\n                                                                                                                              \n    # Sm\n    '\u2aa2': '>=',\n    '\u2236': ':',\n    '\u29f9': '\\\\', \n    '\u22cd': '\u2248', \n    '\u00b1': '+\/-', \n    '\u2265': '>=', \n    '\u22ef': '-', \n    '\u2215': '\/', \n    '\u2266': '<=', \n    '\u221d': '\u221e', \n    '\u2223': '|', \n    '\u2a7e': '>=', \n    '\u2260': '!=', \n    '\u2219': '*', \n    '\u2264': '<=', \n    '\u2212': '-', \n    '\u00d7': '*', \n    '\u226a': '<<', \n    '\u2044': '\/', \n    '\u2a7d': '<=', \n    '\u226b': '>>', \n    '\u2217': '*', \n    '\u22c5': '', \n    '\u2216': '\\\\', \n    '\u2267': '>=',\n    # Exceptions\n    '\u2206': '\u0394',\n\n    # So\n    '\u25be': ' ',\n    '\u25a1': '',\n    '\u25cf': '-',\n    '\u2423': ' ',\n    '\u2580': '-',\n    '\u2610': 'r',\n    '\u25b8': '-',\n    '\u2606': '',\n    '\u00ae': '',   \n    '\u00a9': '',\n    '\u2253': '\"',\n    # Exceptions:\n    '\u21cc': '\u2194',\n    '\u25b3': '\u0394',\n    '\u237a': '\u03b1',\n}","66af134b":"df['text'] = df['text'].progress_apply(lambda text: replace_multiple(text, ascii_mapping))","1e3fde1c":"df_nonascii_chars = get_nonascii_df(df)\n\nwith pd.option_context('display.max_colwidth', -1):\n    display(df_nonascii_chars)","459cae16":"nlp = spacy.load('en_core_sci_sm')\nstemmer = PorterStemmer()\n\npunctation_mapping = dict(zip(\n    punctuation, [''] * len(punctuation)\n))","ab24c935":"def simplify_text(text: str) -> str:\n    # Remove stop words & puncation & lemmatize & stem\n    tokens = [\n        stemmer.stem(token.lemma_.lower())\n        for token in nlp(text) \n        if not (token.is_stop or token.is_punct)\n    ]\n\n    # Prepare text \n    text = ' '.join(tokens)    \n    \n    # Remove all punctation chars \n    text = replace_multiple(text, punctation_mapping)\n    \n    # Remove multiple spaces & strip text\n    text = re.sub(' +', ' ', text)\n    text = text.strip()\n    return text","0ffdab8e":"df['text_simplified'] = df['text'].progress_apply(simplify_text)","6decf2fc":"df_sorted = df.sort_values(by='text_simplified').reset_index(drop=True)","f2ced44d":"prev_text = ''\n\nfor idx, text in tqdm(df_sorted['text_simplified'].iteritems(), total=len(df_sorted)):\n    if prev_text == '' and (text == '' or text != ''):\n        dist = 999\n    else:\n        dist = distance(prev_text, text)\n    \n    df_sorted.loc[idx, 'distance'] = dist\n    prev_text = text","aeb94fda":"df_sorted.loc[df_sorted['distance'] <= 2000, 'distance'].hist(bins=100)","d8f943d7":"df_sorted.loc[df_sorted['distance'] <= 100, 'distance'].hist(bins=100)","8a57af5f":"df_sorted.loc[df_sorted['distance'] <= 20, 'distance'].hist(bins=20)","e9c9fd8f":"print(f'Number of studies: {len(df_sorted)}')","ac8a67e7":"df_sorted = df_sorted.loc[df_sorted['distance'] > 3]\nprint(f'Number of studies after duplicates removal: {len(df_sorted)}')","569f722c":"df_sorted.to_csv('\/kaggle\/working\/cord_metadata_cleaned.csv', index=False)","73de7f54":"## Simplify text\nSimple models like TF-IDF work best if the work upon lemmatized stemmed text with no stop words [Zipf's law](https:\/\/en.wikipedia.org\/wiki\/Zipf%27s_law). Such a simplified text form will be also useful for duplicate detection.","f2189e2a":"## Introduction\nThe purpose of the notebook is to clean the CORD-19 dataset in such a way that it can be utilized by any English-based pre-trained model. The work here is the result of [Evidence Prime](https:\/\/evidenceprime.com\/) team. We work on the project called [LASER](https:\/\/evidenceprime.com\/laser\/), which aims to track scientific literature and synthesize the knowledge about the given topic. We share our experience & knowledge in the notebook, hoping that it will inspire the community to fight COVID-19.","b868fc7e":"### Replace non-unicode chars","119e2533":"### Unescape HTML chars\n- I perform \"double\" unescaping to transform `&amp;lt;` into `<`\n- I want to get rid of `&nbsp;` first to combine `text` column properly from `title` & `abstract`. Otherwise, I might not detect all empty strings. I need such detection in the `text` column concatenation algorithm.","3f668e2f":"I also don't trust the table fully. Sometimes I found in the text [Angstrom unit](https:\/\/en.wikipedia.org\/wiki\/Angstrom) that according to the table it should be mapped into `\u0160`. Therefore I drop the keys with single char after striping the text.","b6bfc6ca":"### Calculate Levensthein distances","453facc3":"Yes! Let's make an encoding mapper then!","8718c599":"Finally, let's create the `text` column and drop non-English texts.","cb336fac":"### Remove hyperlinks","4b49547b":"Some titles and abstracts have different languages. I decided to keep a study if at least one of them contains English text.","5f63ed94":"### Fix encoding table issues","eaa0e884":"I suspect that it doesn't fix all the cases (this shows my experience), therefore I decided to fix manually some of them. I found decoding tables online to help with this task. I crawl & use only the first one.\n* https:\/\/www.i18nqa.com\/debug\/utf8-debug.html\n* http:\/\/string-functions.com\/encodingindex.aspx","c168c595":"### Remove empty records\nSome records might miss titles and abstracts, but they have full texts. Such records would be discarded anyway in the first stage of screening, hence I remove them.","406f3a06":"### Find encoding table issues","8a5e642c":"Is it a valid mapping?","29dc6038":"Some abstracts start with `Abstract`. I decided to remove such a prefix.","c1e622d3":"## Install missing packages","c8cbd2da":"### Remove non-english studies\nI decided to remove non-English studies because pre-trained models are mostly language-specific. Although TF-IDF algorithm can be considered an exception, take in mind that the tokenization algorithm still depends on the language. Empty text is mapped into `en` language using the FastText model.","59c9c0ba":"### Find distance threshold","543b73be":"## Import packages","78fa45e2":"## Clean data","8e9625ce":"### Normalize encoding\nStudies are crawled \/ downloaded from multiple databases and likely processed by many tools like EndNote or Covidence. As the result contains a lot of [mojibakes](https:\/\/en.wikipedia.org\/wiki\/Mojibake). I used a `ftfy` package to fix some of them.\n","60ec6d0a":"### Remove HTML tags","462716a7":"### Find hyperlinks\nThe text contains hyperlinks that bring no information to pre-trained language models. In a worst-case scenario such hyperlinks might introduce out-of-distribution errors to pre-trained model, thus I decided to remove them from the text.","892264ae":"### Investigate non-unicode chars","275bedfb":"### Find non-ascii chars\nThe Unicode standard is too rich for people to use. As the result, people use different chars for the same thing (e.g. `\u03b1`, `\u0251`). I believe that deep learning models can learn such meaning, but char simplification makes it easier for sure. This way we could also identify some encoding issues that couldn't be fixed previously.","df8006fb":"### Find non-unicode chars\nI couldn't identify all broken chars. Let's investigate non-unicode chars and fix them.","d574129f":"Let's take a look again for non-ascii characters.","a984a11c":"## Remove duplicates\nStudies are downloaded from multiple databases. As a result, a great deal of \"duplicates\" exist. Duplicates are not easy to detect, because often there is no 1-1 relation between them. The text might contain typos or additional information. We would need fuzzy matching to detect duplicates then!\n\nIn the literature, there is a concept of studification and duplicate detection. What is the difference between those? Every study has its own life i.e. it evolves over time. Some journals have length requirements, thus they have to be truncated (e.g. some endpoints need to be removed). In addition, population size might get bigger and bigger or intermediate results are published. No one would wait 50 years to publish just one study. Furthermore, some authors might be appended or dropped. This is what we call studification. Taking all this into consideration we can define that two studies are duplicates if two studies are the same and were published the same year. What does mean the word 'same'? Well, we don't know until we go deeper into the article. We would need to extract information from the publication. What should we do then?\n\nIn the metadata we don't have correct publication years, thus we just need to rely on plain text. I decided on \"safe\" fuzzy matching with Levensthein distance. I sorted the list to avoid $n^2$ complexity by looking only on adjacent texts. I need to be careful not to drop a very important study, thus I aim for low threshold.","87eadb04":"## Read data","5bb78934":"### Concat `title` and `abstract` columns into `text` column\nSome papers (e.g. [SWIFT-Review: a text-mining workbench for systematic review](https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC4877757\/)) treat the columns separately.  I decided to process further a single-column `text` for code clarity. ","f704aa93":"## Save results","4cd66c49":"I decided to first fix some studies with Chinese chars from `Lo` Unicode category.","245d371a":"### Find HTML tags\nThe text contains HTML tags that are useful for people because they support text with formatting information. As far as I know, current language models don't utilize such knowledge, thus I just extract text from tags.","1cedfc87":"### Investigate non-ascii chars","3e09c9d4":"### Replace non-ascii chars"}}