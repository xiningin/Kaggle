{"cell_type":{"8db36188":"code","55557a14":"code","b88d583e":"code","fe5c167c":"code","33f8bfa4":"code","b1bb2c49":"code","dfd1c997":"code","b372f9f3":"code","268c8261":"code","311e4f73":"code","cf3a6308":"code","1517e30d":"code","ea4024ef":"code","fd92cf4b":"markdown","ea0fe86c":"markdown","1e0db7f8":"markdown","a1af5f40":"markdown","ffa9b680":"markdown","40550b01":"markdown","03638712":"markdown","aaba0d00":"markdown"},"source":{"8db36188":"import pandas as pd\nimport os\nfrom keras import optimizers\nfrom keras import layers,models\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.layers import Dense, Conv2D, Flatten\nfrom keras.models import Sequential, Model\nfrom keras.layers import Input, Conv2D, MaxPooling2D, Dense, Dropout, Activation, Flatten\nprint(os.listdir(\"..\/input\"))\nimport numpy as np","55557a14":"train_dataframe = pd.read_csv(\"..\/input\/train.csv\")\ntrain_dataframe[\"has_cactus\"] = np.where(train_dataframe[\"has_cactus\"] == 1, \"yes\", \"no\")\nprint(train_dataframe.head())","b88d583e":"base_dir = \"..\/input\/\"\ntrain_dir = os.path.join(base_dir,\"train\/train\")\ntest_dir = os.path.join(base_dir, \"test\/test\")\ndf_test=pd.read_csv('..\/input\/sample_submission.csv')\n\ntesting_dir = os.path.join(base_dir, \"test\")\nbatch_size=150","fe5c167c":"train_datagen = ImageDataGenerator(rescale=1\/255,validation_split=0.10,rotation_range=40,\n    width_shift_range=0.2,height_shift_range=0.2,shear_range=0.2,\n    zoom_range=0.2,horizontal_flip=True,fill_mode='nearest')","33f8bfa4":"train_generator = train_datagen.flow_from_dataframe(dataframe = train_dataframe,directory = train_dir,x_col=\"id\",\n    y_col=\"has_cactus\",target_size=(150,150),subset=\"training\",batch_size=250,shuffle=True,class_mode=\"binary\"\n)\n\nvalid_generator = train_datagen.flow_from_dataframe(dataframe = train_dataframe,directory = train_dir,x_col=\"id\",\n    y_col=\"has_cactus\",target_size=(150,150),subset=\"validation\",batch_size=125,shuffle=True,class_mode=\"binary\"\n)","b1bb2c49":"test_datagen = ImageDataGenerator(\n    rescale=1\/255\n)","dfd1c997":"test_generator = test_datagen.flow_from_directory(testing_dir,target_size=(150,150),batch_size=1,\n    shuffle=False,class_mode=None)","b372f9f3":"model=models.Sequential()\nmodel.add(layers.Conv2D(32,(3,3),activation='relu',input_shape=(150,150,3)))\nmodel.add(layers.MaxPool2D((2,2)))\nmodel.add(layers.Conv2D(64,(3,3),activation='relu',input_shape=(150,150,3)))\nmodel.add(layers.MaxPool2D((2,2)))\nmodel.add(Dropout(0.2))\nmodel.add(layers.Conv2D(128,(3,3),activation='relu',input_shape=(150,150,3)))\nmodel.add(layers.MaxPool2D((2,2)))\nmodel.add(layers.Conv2D(128,(3,3),activation='relu',input_shape=(150,150,3)))\nmodel.add(layers.MaxPool2D((2,2)))\nmodel.add(layers.Flatten())\nmodel.add(layers.Dense(512,activation='relu'))\nmodel.add(layers.Dense(1,activation='sigmoid'))\nmodel.summary()\n\n","268c8261":"model.compile(loss='binary_crossentropy',optimizer=optimizers.rmsprop(),metrics=['acc'])","311e4f73":"epochs=10\nhistory=model.fit_generator(train_generator,steps_per_epoch=100,epochs=10,validation_data=valid_generator,validation_steps=50)","cf3a6308":"preds = model.predict_generator(\n    test_generator,\n    steps=len(test_generator.filenames))","1517e30d":"df=pd.DataFrame({'id':df_test['id'] })\ndf['has_cactus']=preds\ndf.to_csv(\"submission.csv\",index=False)","ea4024ef":"df.head()","fd92cf4b":"# Fitting the model with train and validation data ","ea0fe86c":"# Compiling the model with loss and optimizers","1e0db7f8":"# Predicting the trained model with test data","a1af5f40":"# **Necessary Libraries**","ffa9b680":"# Splitting the data into Train,Test,Validation","40550b01":"# Making submission in csv format with the trained model of test dataset","03638712":"# Load the datas","aaba0d00":"## Creating the Model"}}