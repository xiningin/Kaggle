{"cell_type":{"a79d18af":"code","927f21b9":"code","831f8f42":"code","f8927d7d":"code","5431c73c":"code","2c3a92eb":"code","ffeeba1c":"code","820d5b0d":"code","4f765326":"code","12e1ed94":"code","2274c185":"code","897662c0":"code","c52c948d":"code","05921df6":"code","9601a5e8":"code","6da384cc":"code","d740d84b":"code","1740b44c":"code","9a1a8bad":"code","b0da3c74":"code","f9b29de9":"code","c13a3068":"code","c28e2344":"code","6abc4596":"code","fb248787":"code","94f4c841":"code","30c648f9":"code","4dd0c4cf":"code","dc8d9ccd":"code","c6c4e567":"code","4dcfccf0":"markdown","8395ccfc":"markdown","7dc43e53":"markdown","91964d74":"markdown","bbda2e98":"markdown","2095d217":"markdown","7fb27298":"markdown","c3bc5d9c":"markdown","bec85665":"markdown","f0e5d773":"markdown","2d8212af":"markdown","ceee75d0":"markdown","3848fec4":"markdown","573a311b":"markdown","f54cf635":"markdown","4d4c99c8":"markdown","df66285b":"markdown","b80232aa":"markdown","17b1052b":"markdown","2c14c8b8":"markdown","c86bce6e":"markdown","ea2b3fa3":"markdown"},"source":{"a79d18af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","927f21b9":"data=pd.read_csv(\"\/kaggle\/input\/malware-analysis-datasets-pe-section-headers\/pe_section_headers.csv\")\ndata.tail()","831f8f42":"howmanyna=data.isna().sum().sum()\nprint(howmanyna)","f8927d7d":"x=data.iloc[:,1:5]\ny=data.iloc[:,5:]","5431c73c":"%matplotlib inline\nimport seaborn as sns\nsns.countplot(data=data,x=\"malware\")","2c3a92eb":"sns.relplot(data=data,x=\"size_of_data\",y=\"virtual_size\",hue=\"malware\")","ffeeba1c":"sizedifference=data[\"virtual_size\"]-data[\"size_of_data\"]\nsizedifference","820d5b0d":"print(sizedifference.max())\nprint(sizedifference.min())","4f765326":"newx=pd.DataFrame({\"sizedif\":sizedifference,\"entr\":data[\"entropy\"]})\nnewx.head()","12e1ed94":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score\nrfc=RandomForestClassifier()\n#scores = cross_val_score(clf, iris.data, iris.target, cv=5)\ncross_val_score(rfc,newx,y,cv=10)","2274c185":"rfc=RandomForestClassifier()\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import confusion_matrix\ny_pred = cross_val_predict(rfc,newx, y, cv=10)\nconf_mat = confusion_matrix(y, y_pred)","897662c0":"conf_mat","c52c948d":"import warnings  \nwarnings.filterwarnings('ignore')","05921df6":"from sklearn.tree import DecisionTreeClassifier\nrfc=DecisionTreeClassifier()\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import confusion_matrix\ny_pred = cross_val_predict(rfc,newx, y, cv=10)\nconf_mat = confusion_matrix(y, y_pred)\nprint(conf_mat)","9601a5e8":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nscale_newx=sc.fit_transform(newx)","6da384cc":"from sklearn.svm import SVC\nsvm=SVC(kernel=\"rbf\")\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import confusion_matrix\ny_pred = cross_val_predict(svm,scale_newx, y, cv=10)\nconf_mat = confusion_matrix(y, y_pred)\nprint(conf_mat)","d740d84b":"from sklearn.svm import SVC\nsvm=SVC(kernel=\"linear\")\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import confusion_matrix\ny_pred = cross_val_predict(svm,scale_newx, y, cv=10)\nconf_mat = confusion_matrix(y, y_pred)\nprint(conf_mat)","1740b44c":"rfc=RandomForestClassifier()\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import confusion_matrix\ny_pred = cross_val_predict(rfc,x, y, cv=10)\nconf_mat = confusion_matrix(y, y_pred)\nprint(conf_mat)","9a1a8bad":"from sklearn.tree import DecisionTreeClassifier\nrfc=DecisionTreeClassifier()\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import confusion_matrix\ny_pred = cross_val_predict(rfc,x, y, cv=10)\nconf_mat = confusion_matrix(y, y_pred)\nprint(conf_mat)","b0da3c74":"newplotx=pd.DataFrame({\"sizedif\":sizedifference,\"entr\":data[\"entropy\"],\"mal\":y[\"malware\"]})\nnewplotx.head()","f9b29de9":"sns.relplot(data=newplotx,x=\"sizedif\",y=\"entr\",hue=\"mal\")","c13a3068":"from sklearn.naive_bayes import GaussianNB\ngbc=GaussianNB()\ny_pred = cross_val_predict(gbc,newx, y, cv=10)\nconf_mat = confusion_matrix(y, y_pred)\nprint(conf_mat)","c28e2344":"from imblearn.under_sampling import ClusterCentroids\ncc = ClusterCentroids(random_state=0)\nX_resampled, y_resampled = cc.fit_resample(x, y)","6abc4596":"len(X_resamled)","fb248787":"from sklearn.svm import SVC\nsvm=SVC(kernel=\"rbf\")\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import confusion_matrix\ny_pred = cross_val_predict(svm,X_resampled, y_resampled, cv=10)\nconf_mat = confusion_matrix(y_resampled, y_pred)\nprint(conf_mat)","94f4c841":"rfc=RandomForestClassifier()\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import confusion_matrix\ny_pred = cross_val_predict(rfc,X_resampled, y_resampled, cv=10)\nconf_mat = confusion_matrix(y_resampled, y_pred)\nprint(conf_mat)","30c648f9":"rfc=DecisionTreeClassifier()\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import confusion_matrix\ny_pred = cross_val_predict(rfc,X_resampled, y_resampled, cv=10)\nconf_mat = confusion_matrix(y_resampled, y_pred)\nprint(conf_mat)","4dd0c4cf":"from imblearn.under_sampling import ClusterCentroids\ncc = ClusterCentroids(random_state=0)\nX2_resampled, y2_resampled = cc.fit_resample(newx, y)","dc8d9ccd":"rfc=RandomForestClassifier()\ny_pred = cross_val_predict(rfc,X2_resampled, y2_resampled, cv=10)\nconf_mat = confusion_matrix(y2_resampled, y_pred)\nprint(conf_mat)","c6c4e567":"rfc=DecisionTreeClassifier()\ny_pred = cross_val_predict(rfc,X2_resampled, y2_resampled, cv=10)\nconf_mat = confusion_matrix(y2_resampled, y_pred)\nprint(conf_mat)","4dcfccf0":"Size Difference is too big. ","8395ccfc":"Our Data lost his virtie with downsampling. ","7dc43e53":"PLot our data. ","91964d74":"Down Sampling is looking work. Lose some accuracy but more balanced decision making. ","bbda2e98":"This data is unbalanced data. Classical method can't work with enough quality.","2095d217":"Now Use all the data and make classification","7fb27298":"Performance is better but not enough.","c3bc5d9c":"RBF SVM have horrifically bad performance.","bec85665":"Accuracy is not good metric for this ","f0e5d773":"I forget Naive Bayes. Use Gaussian Naive Bayes for classification. ","2d8212af":"These Approach have only we do under sampling.","ceee75d0":"Doesn't have any na in this dataset.","3848fec4":"### Conclusion\nThis dataset is hard to classsify but have some observation and other things.\n\nAnd lastly I miss GGPLOt :)","573a311b":"Looks good. ","f54cf635":"Make classification with only 2 columns sizedifference and entrophy.","4d4c99c8":"\u0130f Virtual Size is bigger than size of data \u0130t's became malware. \u0130t's my first hypothesis.","df66285b":"I can't understand anything. These plots is can't say anything.","b80232aa":"I think hash value is not important. I think hash is used in signature base classification.","17b1052b":"Can't work well. Nearly %50 %50 predict. ","2c14c8b8":"Our Data Perform better than original data. ","c86bce6e":"This time Accuracy is crying.","ea2b3fa3":"To many false positive in this result. "}}