{"cell_type":{"41f03d9c":"code","0e56ee7c":"code","0b49e43f":"code","f4440ff3":"code","381dfe4e":"code","1dc87d34":"code","e1d70839":"code","cd10ba7f":"code","d38c9ebb":"code","516cb9d5":"code","e077521a":"code","44396544":"code","bc79a532":"code","506320b2":"code","460fb109":"code","52dc88d1":"code","f50501f8":"code","112f62f3":"code","ad8e1d33":"code","a4817e9a":"code","b323d8b0":"code","494b9759":"markdown","2c75ab5d":"markdown"},"source":{"41f03d9c":"from fastai import *\nfrom fastai.vision import *\n\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import auc,roc_curve\n\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n% matplotlib inline","0e56ee7c":"path= Path('..\/input\/kather_texture_2016_image_tiles_5000\/Kather_texture_2016_image_tiles_5000\/')\ncsv_file='..\/input\/hmnist_28_28_RGB.csv'","0b49e43f":"df= pd.read_csv(csv_file)\ndf.head()","f4440ff3":"class_names = {1: \"Tumor\", 2: \"Stroma\", 3: \"Complex\", 4: \"Lympho\",\n               5: \"Debris\", 6: \"Mucosa\", 7: \"Adipose\", 8: \"Empty\"}\nclass_numbers = {\"Tumor\": 1, \"Stroma\": 2, \"Complex\": 3, \"Lympho\": 4,\n               \"Debris\": 5, \"Mucosa\": 6, \"Adipose\": 7, \"Empty\": 8}\nclass_colors = {1: \"Red\", 2: \"Orange\", 3: \"Gold\", 4: \"Limegreen\",\n                5: \"Mediumseagreen\", 6: \"Darkturquoise\", 7: \"Steelblue\", 8: \"Purple\"}\n\nlabel_percentage = df.label.value_counts() \/ df.shape[0]\nclass_index = [class_names[idx] for idx in label_percentage.index.values]\n\nplt.figure(figsize=(20,5))\nsns.barplot(x=class_index, y=label_percentage.values, palette=\"Set3\");\nplt.ylabel(\"% in data\");\nplt.xlabel(\"Target cancer class\");\nplt.title(\"How is cancer distributed in this data?\");","381dfe4e":"tfms=get_transforms(flip_vert=True, max_warp=0.)","1dc87d34":"data = (ImageItemList.from_folder(path)\n        .random_split_by_pct()\n        .label_from_folder()\n        .transform(tfms, size=150)\n        .databunch(num_workers=2, bs=32))","e1d70839":"data.show_batch(row=3, figsize=(10,10))","cd10ba7f":"learner= create_cnn(data, models.resnet34, metrics=[accuracy], model_dir='\/tmp\/models\/')","d38c9ebb":"learner.lr_find()\nlearner.recorder.plot()","516cb9d5":"lr=5e-3\nlearner.fit_one_cycle(8, lr)","e077521a":"learner.save('stage-1')","44396544":"learner.unfreeze()","bc79a532":"learner.lr_find()\nlearner.recorder.plot()","506320b2":"learner.fit_one_cycle(16, slice(5e-5,5e-4))","460fb109":"learner.recorder.plot_losses()","52dc88d1":"learner.save('stage-2')","f50501f8":"interp = ClassificationInterpretation.from_learner(learner)\ninterp.plot_confusion_matrix(figsize=(12,12), dpi=60)","112f62f3":"interp.most_confused()","ad8e1d33":"preds, lb=learner.get_preds()","a4817e9a":"#  ROC curve\nfpr, tpr, thresholds = roc_curve(lb.numpy(), preds.numpy()[:,1], pos_label=1)\n\n#  ROC area\npred_score = auc(fpr, tpr)\nprint(f'ROC area is {pred_score}')","b323d8b0":"plt.figure()\nplt.plot(fpr, tpr, color='orange', label='ROC curve (area = %0.2f)' % pred_score)\nplt.plot([0, 1], [0, 1], color='navy', linestyle='--')\nplt.xlim([-0.01, 1.0])\nplt.ylim([0.0, 1.01])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver Operating Characteristic')\nplt.legend(loc=\"lower right\")","494b9759":"## Model ","2c75ab5d":"## Evaluation"}}