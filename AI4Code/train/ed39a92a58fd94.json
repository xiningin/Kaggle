{"cell_type":{"5a03e5aa":"code","345bd7e7":"code","cf1dd2c0":"code","eff64a78":"code","9efea395":"code","33d26455":"code","4c42a1b9":"code","34d13263":"code","acc1be9b":"code","3b8409b6":"code","beaf008c":"code","440a268c":"markdown"},"source":{"5a03e5aa":"#!pip install dicom","345bd7e7":"#import dicom \nimport pydicom as dicom\nimport pandas as pd\nimport glob\nimport os\nfrom tqdm import tqdm\nimport cv2\nfrom PIL import Image\noutdir = '..\/input\/train_jpg\/'\nfolder_path = \"..\/input\/siim-acr-pneumothorax-segmentation-data\/pneumothorax\/dicom-images-train\/\"\nimages_path = os.listdir(folder_path)\n\n\ndef dictify(ds):\n    output = dict()\n    for elem in ds:\n        if elem.VR != 'SQ': \n            output[elem.tag] = elem.value\n        else:\n            output[elem.tag] = [dictify(item) for item in elem]\n    return output\n\nmetadata_train = []\nimage_names_train = []\nfor i in tqdm(range(len(images_path))):\n    t = os.listdir(folder_path+images_path[i])\n    for j in range(len(t)):\n        img_path = os.listdir(folder_path+images_path[i]+'\/'+t[j])\n        for k in range(len(img_path)):\n            #ds = dicom.dcmread(folder_path+images_path[i]+'\/'+t[j]+'\/'+img_path[k])\n            ds1 = dicom.dcmread(folder_path+images_path[i]+'\/'+t[j]+'\/'+img_path[k], stop_before_pixels=True)\n            metadata_train.append(dictify(ds1))\n            #img = ds.pixel_array\n            #im = Image.fromarray(img)\n            #im.save(img_path[k].replace('.dcm','.png'))\n            #image_names_train.append(img_path[k].replace('.dcm','.png'))","cf1dd2c0":"folder_path_test = \"..\/input\/siim-acr-pneumothorax-segmentation-data\/pneumothorax\/dicom-images-test\/\"\nimages_path_test = os.listdir(folder_path_test)\n\nmetadata_test = []\nimage_names_test = []\nfor i in tqdm(range(len(images_path_test))):\n    t = os.listdir(folder_path_test+images_path_test[i])\n    for j in range(len(t)):\n        img_path = os.listdir(folder_path_test+images_path_test[i]+'\/'+t[j])\n        for k in range(len(img_path)):\n            #ds = dicom.dcmread(folder_path_test+images_path_test[i]+'\/'+t[j]+'\/'+img_path[k])\n            ds1 = dicom.dcmread(folder_path_test+images_path_test[i]+'\/'+t[j]+'\/'+img_path[k], stop_before_pixels=True)\n            metadata_test.append(dictify(ds1))\n            #img = ds.pixel_array\n            #im = Image.fromarray(img)\n            #im.save(img_path[k].replace('.dcm','.png'))\n            #image_names_test.append(img_path[k].replace('.dcm','.png'))","eff64a78":"sample = dicom.dcmread('..\/input\/siim-acr-pneumothorax-segmentation-data\/pneumothorax\/dicom-images-test\/1.2.276.0.7230010.3.1.2.8323329.6536.1517875198.802171\/1.2.276.0.7230010.3.1.3.8323329.6536.1517875198.802170\/1.2.276.0.7230010.3.1.4.8323329.6536.1517875198.802172.dcm')\nprint(sample)","9efea395":"columns_list = ['Specific Character Set','SOP Class UID','SOP Instance UID','Study Date','Study Time', 'Accession Number','Modality','Conversion Type',\"Referring Physician's Name\",\n               'Series Description',\"Patient's Name\",'Patient ID',\"Patient's Birth Date\",\"Patient's Sex\",\"Patient's Age\",'Body Part Examined','View Position','Study Instance UID',\n               'Series Instance UID', 'Study ID', 'Series Number', 'Instance Number','Patient Orientation','Samples per Pixel','Photometric Interpretation','Rows', 'Columns',\n               'Pixel Spacing','Bits Allocated','Bits Stored','High Bit','Pixel Representation','Lossy Image Compression','Lossy Image Compression Method']","33d26455":"train = pd.DataFrame(metadata_train)\ntest = pd.DataFrame(metadata_test)\ntrain.columns = columns_list\ntest.columns = columns_list\n#train_image = pd.DataFrame({'img':image_names_train})\n#test_image = pd.DataFrame({'img':image_names_test})","4c42a1b9":"train.head()","34d13263":"#!pip install pandas-profiling","acc1be9b":"import pandas_profiling","3b8409b6":"pandas_profiling.ProfileReport(train)","beaf008c":"train.to_csv('meta_train.csv', index=False)\ntest.to_csv('meta_test.csv', index=False)\n\n#train_image.to_csv('train_img.csv', index=False)\n#test_image.to_csv('test_img.csv', index=False)","440a268c":"**Some EDA using pandas-profiling**"}}