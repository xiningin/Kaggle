{"cell_type":{"a0aaf952":"code","b99539e9":"code","46e2dad4":"code","5e02fde5":"code","d93b11fd":"code","2f538021":"code","91beda2a":"code","34d55e31":"code","9e4a446b":"code","583d72e5":"code","0868cdac":"code","1a5b2580":"code","0b3ee07f":"code","b810f1a1":"code","eea0f17e":"code","442e6255":"code","5d881cc8":"markdown"},"source":{"a0aaf952":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport plotly\nplotly.offline.init_notebook_mode(connected=True)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","b99539e9":"df = pd.read_csv('..\/input\/anime-recommendations-database\/anime.csv')","46e2dad4":"df.shape","5e02fde5":"df.head()","d93b11fd":"df.type.unique()","2f538021":"df.genre.unique()","91beda2a":"num_romance = len(df[df.genre =='Romance'])\nprint('There are {} romance anime in the dataset'.format(num_romance))\nnum_drama = len(df[df.genre =='Drama'])\nprint('There are {} drama anime in the dataset'.format(num_drama))","34d55e31":"mean_rate = df.rating.mean()\nprint('Mean rating of anime is: {:.2f}'.format(mean_rate))","9e4a446b":"def top10(df, genre ,type):\n    top = df[(df['genre'] == genre) & (df['type'] == type)]\n    top_10 = top.head(10)\n    return top_10","583d72e5":"top10(df, 'Comedy', 'Movie') # CHEBURASHKA HERE!!!","0868cdac":"top10(df, 'Drama', 'Movie')","1a5b2580":"top_rate_ova = df[(df.rating > 9) & (df.type == 'OVA')]\ntop_rate_ova.head()","0b3ee07f":"top_rate_tv = df[(df.rating > 9) & (df.type == 'TV')]\ntop_rate_tv.head(10)","b810f1a1":"top_rate_movie = df[(df.rating > 9) & (df.type == 'Movie')]\ntop_rate_movie.head(10)","eea0f17e":"# Let's count anime types in this dataset\nsns.set_style('whitegrid')\nfig,(ax1) = plt.subplots(figsize=(20,11))\nplt.suptitle('Count plots')\nsns.countplot(y='type', data=df, ax=ax1)\nplt.show()","442e6255":"\"\"\"\nSecond way to count anime types in this dataset\nThis tool is very handy with solving data visualization\n\n\"\"\"\nnum_of_type_of_anime  = df.type.value_counts().sort_values(ascending=True)\ndata = [go.Pie(labels = num_of_type_of_anime.index, values = num_of_type_of_anime.values, hoverinfo = 'label+value')]\nplotly.offline.iplot(data, filename='active category')","5d881cc8":"## We can visualize data in different ways"}}