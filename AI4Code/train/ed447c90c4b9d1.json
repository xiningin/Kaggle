{"cell_type":{"2291d779":"code","bb4afc86":"code","ae042eaf":"code","5e7cb309":"code","616a9d12":"code","4b364ece":"code","703e0e94":"code","96a07104":"code","f8860ed1":"code","5aa7a756":"code","188bac6b":"code","515eb89c":"code","56064c62":"code","5899cecb":"code","b5fddbf4":"code","ef9f2564":"code","89220997":"code","64dfe61c":"code","0b43c2d5":"code","3671f797":"code","cf4fee2d":"markdown","04b8156d":"markdown","3ccaa86a":"markdown","d790cd6c":"markdown"},"source":{"2291d779":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bb4afc86":"import cv2\nimport os\nimport matplotlib.pyplot as plt \nimport math \nimport itertools\n# for making adjacency matrix\nimport networkx as nx","ae042eaf":"from PIL import Image\nimage = Image.open('\/kaggle\/input\/qubidataset2\/task3-test\uff08347p)\/X51005719888.jpg')\nimage","5e7cb309":"import pytesseract\nfrom pytesseract import Output","616a9d12":"import glob\nimport os\nimport random\nimport shutil\nfrom matplotlib import pyplot as plt\n","4b364ece":"!pip install easyocr","703e0e94":"import easyocr\nreader = easyocr.Reader(['en'])","96a07104":"bounds = reader.readtext('\/kaggle\/input\/qubidataset2\/task3-test\uff08347p)\/X51005719888.jpg')\nbounds","f8860ed1":"from PIL import ImageDraw","5aa7a756":"def draw_boxes(image,bounds ,color = 'yellow',width=2):\n    draw = ImageDraw.Draw(image)\n    for bound in bounds:\n        p0,p1,p2,p3 = bound[0]\n        draw.line([*p0,*p1,*p2,*p3,*p0],fill=color,width=width)\n    return image\ndraw_boxes(image,bounds)","188bac6b":"bounds[1][1]","515eb89c":"text = ''\nfor i in range(len(bounds)):\n    text = text + bounds[i][1] + '\\n'\n    \nprint(text)\n    ","56064c62":"import spacy\nnlp = spacy.load('en_core_web_lg')\ndoc = nlp(text)\nfrom spacy import displacy\ndisplacy.render(nlp(doc.text), style='ent', jupyter=True)\n","5899cecb":"extracted_text = pytesseract.image_to_string(image)","b5fddbf4":"extracted_text = pytesseract.image_to_string(image)\nextracted_text = extracted_text.replace(\"  \",\"\")\nextracted_text = extracted_text.replace(\"   \",\"\")\nextracted_text\n","ef9f2564":"import re\ntext = re.split(r\"\\n\",extracted_text)\nfinal_text=''\nfor i in text:\n    if i != '' and i != ' ':\n        final_text = final_text + i + ' \\n'\nfinal_text","89220997":"!python -m spacy download en_core_web_lg","64dfe61c":"import spacy\nnlp = spacy.load('en_core_web_lg')\ndoc1 = nlp(final_text)\nfor ent in doc.ents:\n    print(ent.text,ent.label_)\n","0b43c2d5":"from spacy import displacy\ndisplacy.render(nlp(doc1.text), style='ent', jupyter=True)","3671f797":"import os \nImg = os.listdir('..\/input\/qubidataset2\/task3-test\uff08347p)\/')\nfor j in range(len(Img)):\n    img = '..\/input\/qubidataset2\/task3-test\uff08347p)\/' + Img[j]\n    bound_df = reader.readtext('..\/input\/qubidataset2\/task3-test\uff08347p)\/' + Img[j] )\n    text = ''\n    for i in range(len(bound_df)):\n        text = text + bound_df[i][1] + '\\n'\n    nlp = spacy.load('en_core_web_lg')\n    doc = nlp(text)\n    displacy.render(nlp(doc.text),style = 'ent',jupyter=True)\n    ","cf4fee2d":"TEXT DETECTION","04b8156d":"Tessract library for text recognization","3ccaa86a":"**NER Using spacy**","d790cd6c":"**Finally for all Images** "}}