{"cell_type":{"c3ef335f":"code","cddf228b":"code","c92da815":"code","d00b96c3":"code","2f57ffcf":"code","670b7e67":"code","d891d519":"code","6b71417d":"code","4383d583":"code","00099a99":"code","23bbdb55":"code","dd9986c1":"code","266b8d75":"code","e8bcdc62":"code","91e6c3b2":"code","59086a93":"markdown","764bc142":"markdown","79326c04":"markdown"},"source":{"c3ef335f":"#Import libraries\nimport pandas as pd\nimport numpy as np\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import OneHotEncoder, MinMaxScaler\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.model_selection import StratifiedShuffleSplit, cross_validate, cross_val_predict, train_test_split\nfrom sklearn.metrics import recall_score, accuracy_score, roc_auc_score, f1_score\nfrom sklearn.ensemble import RandomForestClassifier","cddf228b":"data = pd.read_csv('..\/input\/heart-failure-prediction\/heart.csv')","c92da815":"data.info()","d00b96c3":"data.head()","2f57ffcf":"corr_matrix = data.corr()    \n\ncorr_matrix['HeartDisease'].sort_values(ascending=False)","670b7e67":"features = data.drop(['HeartDisease'], axis=1)\nlabels = data.HeartDisease","d891d519":"#Create categorical features pipeline\ncat_pipeline = Pipeline([\n    ('cat', OneHotEncoder()),\n])","6b71417d":"#Create numerical features pipeline\nnum_pipeline = Pipeline([\n    ('scaler', MinMaxScaler()),\n])","4383d583":"#Create consolidated pipeline\nnum_attribs = ['Age', 'RestingBP', 'Cholesterol', 'MaxHR', 'Oldpeak']\n\ncat_attribs = ['Sex', 'ChestPainType', 'FastingBS', 'RestingECG', 'ExerciseAngina', 'ST_Slope']\n\nfull_pipeline = ColumnTransformer([\n    ('num', num_pipeline, num_attribs),\n    ('cat', cat_pipeline, cat_attribs),\n])\n\n#Prepare features via full pipeline\nfeatures_prepared = full_pipeline.fit_transform(features)","00099a99":"X_train, X_val, y_train, y_val = train_test_split(features_prepared, labels, test_size=0.2, shuffle=True, random_state=42)","23bbdb55":"rf = RandomForestClassifier(n_estimators=4400, max_depth=7, max_features='sqrt', bootstrap=False)","dd9986c1":"rf.fit(X_train, y_train)","266b8d75":"#Calculate feature importances\nfeature_importances = rf.feature_importances_\n\n#Determine most important features\ncategories = full_pipeline.transformers_[1][1][0].get_feature_names(cat_attribs)\n\nfeature_names = num_attribs + categories.tolist()\n\nsorted(zip(feature_importances, feature_names), reverse=True)","e8bcdc62":"val_pred = cross_val_predict(rf, X_val, y_val, cv=3)","91e6c3b2":"print('Accuracy score: ', accuracy_score(y_val, val_pred))\nprint('ROC AUC score: ', roc_auc_score(y_val, val_pred))\nprint('F1 score: ', f1_score(y_val, val_pred))","59086a93":"# **Model Validation**","764bc142":"# **Data Preprocessing**","79326c04":"# **Initialize Classifier**"}}