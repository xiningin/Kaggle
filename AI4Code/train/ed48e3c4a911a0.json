{"cell_type":{"7e1f1684":"code","3c610165":"code","8d9156a9":"code","039a071e":"code","1a93d38f":"code","2fe63f49":"code","11f27793":"code","eb46285d":"code","eedb9789":"code","019801b5":"code","3f2c8d0f":"code","67af32fd":"code","7a29458f":"code","7f203266":"code","049a5a3e":"code","613daae0":"code","cbf20652":"code","d4926978":"code","31317626":"code","2c9e5d5f":"code","30e079ee":"code","79838252":"code","18058f1b":"code","779daeba":"code","398fc2cf":"code","06b08ce2":"code","161feba8":"markdown","fe2129e0":"markdown","6c8631a9":"markdown","4ef9ab6b":"markdown","22879d5b":"markdown","80cb2162":"markdown","9cb6f55b":"markdown","c2adc669":"markdown"},"source":{"7e1f1684":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nprint(\"Setup Complete\")\n","3c610165":"#Loading Dataset\nsong = pd.read_csv(\"..\/input\/34740-hit-and-nonhit-songs-spotify-features\/complete.csv\")","8d9156a9":"song.head(3)","039a071e":"# Total Number Of Unique Artists. \nsong[\"artist_name\"].nunique()","1a93d38f":"# Number Of Artists Who produced Hit Song.\nsong[song[\"On_chart\"]==1]['artist_name'].nunique()","2fe63f49":"song.info()","11f27793":"song.describe()\n# So as we Can See There Are Some Outliers IN the Data fro column outliers","eb46285d":"sns.scatterplot(x='loudness',y='danceability',hue='On_chart',data=song)","eedb9789":"sns.scatterplot(x='loudness',y='energy',hue='On_chart',data=song)","019801b5":"sns.heatmap(song.corr(),cmap='magma',linecolor='black',linewidth=0.8)","3f2c8d0f":"sns.countplot(song[song[\"loudness\"]<=-40][\"On_chart\"])\nprint(\"Total Songs Below -40 Loudness: \",song[song[\"loudness\"]<=-40][\"loudness\"].count())\n# So As Not A Single Song Is Hit If The Loudness in Below -40\n# So Will change loudness to -30 for every song which is below loudness -40","67af32fd":"for a in range(song.shape[0]):\n    if song['loudness'][a] < -40.00:\n        song['loudness'][a] = -40.00\n    else:\n        pass","7a29458f":"(23.4+32.5+41.6+36.4+49.4)\/5","7f203266":"#importing library\nfrom sklearn.model_selection import train_test_split","049a5a3e":"song.head(0)","613daae0":"# selecting featues and target\nfeature = song.drop(['track_title','artist_name','track_id','On_chart'],axis=1)\ntarget = song['On_chart']","cbf20652":"# Splitting Data\nX_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.2, random_state=42)","d4926978":"from sklearn.ensemble import RandomForestClassifier","31317626":"model = RandomForestClassifier()","2c9e5d5f":"model.fit(X_train,y_train)","30e079ee":"# Predicting Hit Song For Test Data\nprediction = model.predict(X_test)","79838252":"prediction","18058f1b":"from sklearn.metrics import classification_report,confusion_matrix,accuracy_score","779daeba":"print(\"Confusion Matrix:\\n\",confusion_matrix(y_test,prediction))\nprint(\"\\nClassification Report:\\n\",classification_report(y_test,prediction))\nprint(\"Accuracy Score: \",accuracy_score(y_test,prediction))","398fc2cf":"X_train.head(2)","06b08ce2":"# Let's Predict Random Value Data \nnewsong_info = [[255789,0.786,1,1,4,0.08722,0.998,0.756,0.5846,-9.585,0.0865,0.878,185.658]]\nval = model.predict(newsong_info)\nif val==0:\n    print(\"Not A Hit Song\")\nelse:\n    print(\"Hit Song\")","161feba8":"# **Hit Song Prediction**","fe2129e0":"# Importing Basic Libraries","6c8631a9":"# Data Exploration And Pre-Processing","4ef9ab6b":"# Thank You ","22879d5b":"# Splitting Data","80cb2162":"# Prediction ","9cb6f55b":"# Training Model","c2adc669":"# Evaluation"}}