{"cell_type":{"1831839f":"code","410b058d":"code","ad3ea403":"code","8113148e":"code","0cd82aeb":"code","064e504e":"code","e3e77d9e":"code","da5216da":"code","4f6b4dd4":"code","df9df885":"code","0eed5669":"code","e476b6f1":"code","741e916a":"code","1f8ffdc0":"code","65f6651e":"code","87647bb7":"code","85985490":"code","71a1e141":"code","61d84506":"code","de9ef343":"code","bcf0550b":"code","ec627ad9":"code","50ad1519":"code","4d1e5509":"code","ee0dd47e":"code","05e5ee19":"code","2005b16b":"code","04a83d6a":"code","d876e8e5":"code","964a4f0c":"code","c89f5cd3":"code","67c18218":"code","6a6e4cac":"code","7cdeabca":"code","345e8021":"code","a7d5a88e":"code","7063893c":"code","8a521191":"code","6e44e57b":"code","4631795a":"code","183e33ad":"code","4b47388f":"code","990cd84a":"code","b96dce04":"code","341ce23c":"code","80a036e1":"code","c19ecf7e":"code","89aa4b61":"code","06895349":"code","f1bb6a70":"code","f276c630":"code","a09b800c":"code","fb39b825":"code","a4ea4e4e":"code","1ba9d1b8":"code","df723701":"code","1fc2d140":"code","fbc507e0":"code","b0f6330e":"code","e377e6d9":"code","10f72e85":"code","4fd2b343":"code","09eb4d2f":"code","44c1db8b":"code","f976fa6e":"code","2dd5e710":"code","610ac113":"code","818b120a":"code","b9a8781d":"code","aa8eeacf":"code","1223b79e":"code","f9b17ead":"code","c815acdd":"code","6eba56c7":"code","faf47cc9":"code","99984011":"code","7e1db675":"code","bc39a989":"code","0b23338f":"code","6a981f2d":"code","d1f25d8f":"code","0160d4c8":"code","a027e5be":"code","52c6b294":"code","0b82fb63":"code","d11b5178":"code","25e6e9b8":"code","e4f4e90a":"code","14c510c5":"code","3a4f567d":"markdown","5e6ed234":"markdown","cc764605":"markdown","c1eb7a5b":"markdown","1ce1af79":"markdown","2335f34b":"markdown","fff0bcaf":"markdown","94b5ae0b":"markdown","0cd4238e":"markdown","ca5af159":"markdown","a445503a":"markdown","efa77b5f":"markdown","33a770f9":"markdown","d332245f":"markdown","fe0da20a":"markdown","7ef8e322":"markdown","84b2c80f":"markdown","46ece47f":"markdown","5b581e11":"markdown","f60712eb":"markdown","0cfef9fc":"markdown","910bb5f4":"markdown","409c752e":"markdown","760daaf1":"markdown"},"source":{"1831839f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","410b058d":"train = pd.read_csv('..\/input\/titanic\/train.csv')","ad3ea403":"test = pd.read_csv('..\/input\/titanic\/test.csv')","8113148e":"train.head()","0cd82aeb":"train.describe()","064e504e":"train.isnull().sum()","e3e77d9e":"train.info()","da5216da":"train.hist(bins = 50,figsize = (20,20))\nplt.show()","4f6b4dd4":"sns.countplot(x = 'Sex',data = train)","df9df885":"g = sns.catplot(x = 'Sex',y = 'Survived',data = train,kind = 'bar')\ng.set(yticklabels = [])","0eed5669":"sns.catplot(x = 'Pclass',y = 'Survived',data = train,kind = 'bar')","e476b6f1":"sns.stripplot(x = 'Survived',y = 'Age',data = train)","741e916a":"sns.stripplot(x = 'Survived',y = 'Fare',data = train)","1f8ffdc0":"sns.barplot(x = 'Sex',y = \"Survived\",hue = 'Pclass',data = train)","65f6651e":"c = sns.FacetGrid(col = 'Survived',row = 'Sex',data = train)\nc = c.map(plt.hist,'Age')","87647bb7":"c = sns.FacetGrid(col = 'Survived',row = 'Sex',data = train)\nc = c.map(plt.hist,'Fare')","85985490":"train.isna().sum()","71a1e141":"train_1 = train.copy()","61d84506":"train_1 = train_1.drop('Cabin',axis = 1)","de9ef343":"train_1['Embarked'] = train_1['Embarked'].fillna(method = 'ffill')","bcf0550b":"train_1 = train_1.dropna(how = 'any',axis = 0)","ec627ad9":"train_1.shape","50ad1519":"uv = np.percentile(train_1.Fare,[95])[0]\nuv","4d1e5509":"train_1[train_1.Fare> 3*uv]","ee0dd47e":"train_1.Fare[train_1.Fare>3*uv] = 3*uv","05e5ee19":"sns.stripplot(x = 'Survived',y = 'Fare',data = train_1)\n\"\"\"There is some improvement as compared to eralier\"\"\"","2005b16b":"train_1.Age.max()\n#Let us ignore it for sometime","04a83d6a":"train_1.describe()","d876e8e5":"train_1.info()","964a4f0c":"train_1[['Sex','Survived']].groupby(['Sex']).mean()","c89f5cd3":"train_1[['Sex','Survived','Pclass']].groupby(['Sex','Pclass']).mean()","67c18218":"train_1.Sex = train_1.Sex.map({'female':0,'male':1})","6a6e4cac":"train_1 = pd.get_dummies(train_1, columns = ['Embarked'])","7cdeabca":"train_1.head()","345e8021":"family_member = train_1['SibSp'] + train_1['Parch']","a7d5a88e":"train_1['family_member'] = family_member","7063893c":"train_1.head()","8a521191":"del train_1['SibSp']","6e44e57b":"del train_1['Parch']","4631795a":"del train_1['Embarked_C']","183e33ad":"train_1.head()","4b47388f":"train_1.info()","990cd84a":"train_1['Pclass'] = train_1.Pclass.astype('category')","b96dce04":"train_1['Sex'] = train_1.Sex.astype('category')","341ce23c":"corr_matrix = train_1.corr()","80a036e1":"corr_matrix","c19ecf7e":"y_train = train_1['Survived']\nX_train = train_1.drop(['Survived','PassengerId','Ticket','Name','Embarked_Q','Embarked_S'],axis = 1)","89aa4b61":"X_train.isnull().sum()","06895349":"print(y_train.shape, \" \", X_train.shape)","f1bb6a70":"from sklearn.linear_model import LogisticRegression","f276c630":"lr = LogisticRegression()","a09b800c":"lr.fit(X_train,y_train)","fb39b825":"predict = lr.predict(X_train)","a4ea4e4e":"from sklearn.metrics import mean_squared_error","1ba9d1b8":"rmse = np.sqrt(mean_squared_error(y_train,predict))","df723701":"rmse","1fc2d140":"from sklearn.model_selection import cross_val_score\nscore = cross_val_score(lr,X_train,y_train,cv = 5)","fbc507e0":"rmse = np.sqrt(score)","b0f6330e":"rmse","e377e6d9":"from sklearn.metrics import confusion_matrix,accuracy_score","10f72e85":"confusion_matrix(y_train,predict)","4fd2b343":"accuracy_score(y_train,predict)","09eb4d2f":"from sklearn.model_selection import GridSearchCV\nparam_grid = [{'C': [3,10,20,5,30,50],\"solver\" : ['lbfgs','liblinear']}]","44c1db8b":"log_cv = GridSearchCV(lr,param_grid,cv = 5)","f976fa6e":"log_cv.fit(X_train,y_train)","2dd5e710":"log_cv.best_params_","610ac113":"log_cv.best_score_","818b120a":"predict_1 = log_cv.predict(X_train)","b9a8781d":"score_1 = accuracy_score(y_train,predict_1)\nscore_1","aa8eeacf":"from sklearn.preprocessing import MinMaxScaler","1223b79e":"scaler = MinMaxScaler(feature_range = (0,1))","f9b17ead":"X_scaled = scaler.fit_transform(X_train)","c815acdd":"lr.fit(X_scaled,y_train)","6eba56c7":"y_pred = lr.predict(X_scaled)","faf47cc9":"accuracy_score(y_train,y_pred)","99984011":"test.isnull().sum()","7e1db675":"del test['Cabin']","bc39a989":"test.Fare = test.Fare.fillna(test.Fare.mean())","0b23338f":"test.Age = test.Fare.fillna(test.Age.mean())","6a981f2d":"family_member_1 = test['SibSp'] + test['Parch']\ntest['family_member'] = family_member_1","d1f25d8f":"del test['SibSp']","0160d4c8":"del test['Parch']","a027e5be":"test.Sex = test.Sex.map({'female':0,'male':1})","52c6b294":"X_test = test.drop(['PassengerId','Name','Ticket','Embarked'],axis = 1)","0b82fb63":"X_test.shape","d11b5178":"predictions = log_cv.predict(X_test)","25e6e9b8":"OUTPUT = pd.DataFrame({'PassengerId':test.PassengerId,\"Survived\":predictions})","e4f4e90a":"OUTPUT","14c510c5":"OUTPUT.to_csv('Prediction.csv', index = False)","3a4f567d":"NOW WE WILL DO ANALYSIS ON 3 VARIABLES - 2 INDEPENDENT AND 1 DEPENDENT VARIABLE","5e6ed234":" Importing neccesary libraries","cc764605":"NOW WE WILL DO TWO VARIABLE ANALYSIS WITH DEPENDENT VARIABLE(SURVIVAL) AND INDEPENDENT VARIABLES","c1eb7a5b":"There is one outlier in Age variable","1ce1af79":"Outlier Treatement","2335f34b":"Now we will work on test data.","fff0bcaf":"Therefore among 3 different accuracy scores the greatest was 0.7983, therefore we will use this to predict the Survival rate on test dataset","94b5ae0b":"Conclusions from above graph:\n\n1. We can conclude that wealthier females i.e. females who were travelling in 1st and @nd class have higher survival rate and the survival rate of male was very less.\n2. The Survival rate of male in age gap og 20-45 is very less but the survival rate of female in this age gap was compartively better.","0cd4238e":"Let us try Normalisation to see if accuracy increases","ca5af159":"Now we have removed missing values and outlier so swill again analyse the data on the basis of mean value","a445503a":"Conclusion from above graphs\n\n1. Female have higher survival rate\n2. Wealthier People i.e. people sitting on 1st class has greater survival rate.\n3. There is some outlier and missing values in Age variable but from the above graph we can conclude that people who died was in the age group 20-45.\n4. We cannot conclude anything from Fare-Survived graph as there is alot skewness in the graph.","efa77b5f":"# Introduction","33a770f9":"Now we will treat categorical variables","d332245f":"Loading the train and test dataset","fe0da20a":"FINE-TUNE THE MODEL WITH GridSearchCV","7ef8e322":"From above two result we can conclude that the wealthier females have the highest survival rate.","84b2c80f":"There were outlier\/skewness in two columns i.e. in Fare and Age","46ece47f":"The Cabin Variable has many null values so we can drop it before builiding model","5b581e11":"This is my first kernel or say my first notebook. I am new to this, it will be very helpful if you suggest me how should I improve my EDA and ML models(by your comments). I know I am not that much good at story telling but please have a look at my work and if possible do upvote!","f60712eb":"##### Now we will build a Logistic Regression model","0cfef9fc":"Now we combine the two columns i.e. SibSp(Sibling-Spouse) and Parch(Parents,son,daughter) into one column i.e. family_member","910bb5f4":"Single Variable Analysis","409c752e":"From the above graphs we can deduct that:\n\n1. Most of the people preffered 3rd class ticket\n2. The people between age 20-40 were more as compared to others.\n2. Most of the people were travelling alone i.e. there were no spouse,sibling or parents with them.\n4. There were more males as compared to female in the ship.","760daaf1":"Now we will treat Missing values"}}