{"cell_type":{"e1eb0d74":"code","d1e0c9dc":"code","eb0c1250":"code","d4a7d7d8":"code","53dbf76e":"code","cd91bad5":"code","7f7acb74":"code","cf505e76":"code","2760e10b":"code","c26bc840":"code","f4b15be8":"code","2dde9a3b":"code","5e8db92d":"code","9d7ee655":"code","cf94ba91":"code","1eff9d67":"code","8b4f4dc2":"code","0616e05d":"code","01692780":"code","d1b52d88":"code","c19f63e4":"markdown","cb3e9db8":"markdown","aef35a79":"markdown","bc4e634c":"markdown","382d6214":"markdown","fc8e9365":"markdown","eb9ef1ca":"markdown","b75ae72e":"markdown","f7661651":"markdown","0b706ee4":"markdown","c110094e":"markdown"},"source":{"e1eb0d74":"import numpy as np, pandas as pd, os, json, re\nfrom tqdm.notebook import tqdm","d1e0c9dc":"BM_pdf_loaded, CUS_pmc_loaded, CUS_pdf_loaded, CL_pmc_loaded, CL_pdf_loaded, NUS_pmc_loaded, NUS_pdf_loaded = [], [], [], [], [], [], []\n\nBM_pdf = \"\/kaggle\/input\/CORD-19-research-challenge\/biorxiv_medrxiv\/biorxiv_medrxiv\/pdf_json\/\"\n\nCUS_pmc = \"\/kaggle\/input\/CORD-19-research-challenge\/comm_use_subset\/comm_use_subset\/pmc_json\/\"\nCUS_pdf = \"\/kaggle\/input\/CORD-19-research-challenge\/comm_use_subset\/comm_use_subset\/pdf_json\/\"\n\nCL_pmc = \"\/kaggle\/input\/CORD-19-research-challenge\/custom_license\/custom_license\/pmc_json\/\"\nCL_pdf = \"\/kaggle\/input\/CORD-19-research-challenge\/custom_license\/custom_license\/pdf_json\/\"\n\nNUS_pmc = \"\/kaggle\/input\/CORD-19-research-challenge\/noncomm_use_subset\/noncomm_use_subset\/pmc_json\/\"\nNUS_pdf = \"\/kaggle\/input\/CORD-19-research-challenge\/noncomm_use_subset\/noncomm_use_subset\/pdf_json\/\"\n\ndef jsonAppender(dir_, loaded_file):\n    \n    files = os.listdir(dir_)\n    \n    for filename in tqdm(files):\n        file = dir_ + filename\n        opened_file = json.load(open(file, 'rb'))\n        loaded_file.append(opened_file)\n        \njsonAppender(BM_pdf, BM_pdf_loaded)\njsonAppender(CUS_pmc, CUS_pmc_loaded)\njsonAppender(CUS_pdf, CUS_pdf_loaded)\njsonAppender(CL_pmc, CL_pmc_loaded)\njsonAppender(CL_pdf, CL_pdf_loaded)\njsonAppender(NUS_pmc, NUS_pmc_loaded)\njsonAppender(NUS_pdf, NUS_pdf_loaded)\n\n\nprint(\n    \"BM_pdf Count\", len(BM_pdf_loaded), \n    \"\\nCUS_pmc Count\", len(CUS_pmc_loaded), \n    \"\\nCUS_pdf Count\", len(CUS_pdf_loaded), \n    \"\\nCL_pmc Count\", len(CL_pmc_loaded), \n    \"\\nCL_pdf Count\", len(CL_pdf_loaded), \n    \"\\nNUS_pmc Count\", len(NUS_pmc_loaded), \n    \"\\nNUS_pdf Count\", len(NUS_pdf_loaded),\n)","eb0c1250":"# CLeaning Helpers\n\ndef authorFormator(file):\n    \n    Authors = \"\"\n    AuthorsO = []\n    \n    for i in file[\"metadata\"][\"authors\"]:\n\n        firstName = str(i[\"first\"])\n        middleName = str(i[\"middle\"])\n        lastName = str(i[\"last\"])\n        suffix = str(i[\"last\"])\n\n        if (middleName != \"[]\"):\n            middleName = middleName.replace(\"['\",\"\").replace(\"']\",\"\")\n            Author = firstName + \" \" + middleName + \" \" + lastName\n        else:\n            Author = firstName + \" \" + lastName\n        \n        AuthorsO.append(Author)\n        \n    Authors = ', '.join(AuthorsO)\n        \n    return Authors\n\ndef bodyText(file):\n    \n    Body_text = \"\"\n    for i in file[\"body_text\"]:\n        Body_text += (i[\"text\"] + \"\\n\\n\")\n        \n    return Body_text","d4a7d7d8":"def dataAppender(fileName, clean_file_name):\n    for file in tqdm(fileName):\n\n        features = [\n            file[\"paper_id\"],\n            file[\"metadata\"][\"title\"],\n            authorFormator(file),\n            bodyText(file)\n\n        ]\n        \n        clean_file_name.append(features)","53dbf76e":"# Cleaning BM_pdf\n\nBM_pdf_cleaned = []\ndataAppender(BM_pdf_loaded, BM_pdf_cleaned)","cd91bad5":"# Cleaning CUS_pmc\n\nCUS_pmc_cleaned = []\ndataAppender(CUS_pmc_loaded, CUS_pmc_cleaned)","7f7acb74":"# Cleaning CUS_pdf\n\nCUS_pdf_cleaned = []\ndataAppender(CUS_pdf_loaded, CUS_pdf_cleaned)","cf505e76":"# Cleaning CL_pmc\n\nCL_pmc_cleaned = []\ndataAppender(CL_pmc_loaded, CL_pmc_cleaned)","2760e10b":"# Cleaning CL_pdf\n\nCL_pdf_cleaned = []\ndataAppender(CL_pdf_loaded, CL_pdf_cleaned)","c26bc840":"# Cleaning NUS_pmc\n\nNUS_pmc_cleaned = []\ndataAppender(NUS_pmc_loaded, NUS_pmc_cleaned)","f4b15be8":"# Cleaning NUS_pdf\n\nNUS_pdf_cleaned = []\ndataAppender(NUS_pdf_loaded, NUS_pdf_cleaned)","2dde9a3b":"cols = [\n    'Paper_id', \n    'Title', \n    'Authors',\n    'Body_text'\n]\n\nBM_pdf_df = pd.DataFrame(BM_pdf_cleaned, columns=cols)\nCUS_pmc_df = pd.DataFrame(CUS_pmc_cleaned, columns=cols)\nCUS_pdf_df = pd.DataFrame(CUS_pdf_cleaned, columns=cols)\nCL_pmc_df = pd.DataFrame(CL_pmc_cleaned, columns=cols)\nCL_pdf_df = pd.DataFrame(CL_pdf_cleaned, columns=cols)\nNUS_pmc_df = pd.DataFrame(NUS_pmc_cleaned, columns=cols)\nNUS_pdf_df = pd.DataFrame(NUS_pdf_cleaned, columns=cols)\n\ndfs = [BM_pdf_df, CUS_pmc_df, CUS_pdf_df, CL_pmc_df, CL_pdf_df, NUS_pmc_df, NUS_pdf_df]\n\nclean_df = pd.concat(dfs)\n\nclean_df.head()","5e8db92d":"\"\"\"\nClean Corona CSV file\nCreated on 8 April 2020\nFile Shape: (52097, 4)\n\"\"\"\n\n# clean_df.to_csv('cleanCORD.csv', index=False)","9d7ee655":"import pandas as pd\ndata = pd.read_csv(\"..\/input\/cleancord\/cleanCorona.csv\")\ndata.head()","cf94ba91":"# Preparing covid_keywords\ncovid_keywords_list = [\" nCov\", \n                        \"COVID-19\",\n                        \"COVID 19\",\n                        \"2019 nCov\",\n                        \"2019-nCov\", \n                        \"COVID 2019\", \n                        \"SARS-CoV-2\", \n                        \"SARS CoV-2\", \n                        \"SARS CoV 2\", \n                        \"Coronavirus 2\", \n                        \"Orthocoronavirinae\",\n                        \"SARS Coronavirus 2\",\n                        \"2019 Novel Coronavirus\", \n                        \"2019 Coronavirus Pandemic\",\n                        \"Coronavirus Disease 2019\", \n                        \"2019-nCoV acute respiratory disease\", \n                        \"Novel coronavirus pneumonia\"\n                      ]\ncovid_keywords = '|'.join(covid_keywords_list)","1eff9d67":"# Filtering COVID data\ncovid_19_bool = data.Body_text.str.contains(covid_keywords, na=False, case=False)","8b4f4dc2":"# Generating COVID data\n\ncovid_19 = data[covid_19_bool]\ncovid_19.shape","0616e05d":"covid_19.head()","01692780":"# Replacing Unnecessary Characters with space\ncovid_19_f = covid_19.replace({'<br>|\\n|\u25ba ': ' '}, regex=True)\ncovid_19_f.head()","d1b52d88":"\"\"\"\nExporting COVID CSV\nAvailable On: https:\/\/www.kaggle.com\/psrajput\/covid-19\nLast Updated: 9 April\n\"\"\"\n\n# covid_19_f.to_csv(r'covid_19.csv')","c19f63e4":"## 3. Cleaning JSONs <a id=\"cleaning_json\"><\/a>","cb3e9db8":"**Purpose**: \n\n1. Converting Raw JSONs to a clean CSV & \n2. Generating COVID CSV from that clean CSV\n\n**Note**: \n\nYou might not be able to run this notebook completely due to memory issues. The CSV is already generated and is ready to use. Use the following links to directly use whatever dataset you want to use.\n\n[CLEAN CORD CSV](https:\/\/www.kaggle.com\/psrajput\/cleancord)\n\n[COVID-19 CSV](https:\/\/www.kaggle.com\/psrajput\/covid-19)\n\nStill if you want to run, then run from 1-4 for generating clean CSV.\n\n\n**Last Updated**: @9April2020","aef35a79":"## 1. Importing Libraries <a id=\"importing_libs\"><\/a>","bc4e634c":"## 7. Data Cleaning & Generating COVID-19 CSV <a id=\"data_cleaning\"><\/a>","382d6214":"## 6. Loading Cleaned CORD Data <a id=\"loading_data\"><\/a>","fc8e9365":"## 2. Loading JSONs <a id=\"loading_json\"><\/a>","eb9ef1ca":"## 4. Converting JSONs To Dataframe <a id=\"generating_df\"><\/a>","b75ae72e":"## Table of Contents\n1. [Importing Libraries](#importing_libs)\n2. [Loading_Json](#loading_json)\n3. [Cleaning_Json](#cleaning_json)\n4. [Generating_Dataframe](#generating_df)\n5. [Exporting_CSV](#exporting_csv)\n6. [Loading Data](#loading_data)\n7. [Data Cleaning & Generating CSV](#data_cleaning)","f7661651":"Possible Included Outliers: \"coronavirus 229E-(HCoV-229E-)\"","0b706ee4":"## 5. Exporting Dataframe As CSV <a id=\"exporting_csv\"><\/a>","c110094e":"**Note**: Only Keeping Paper ID, Paper Title, Author Name and Body Text because either other most of the fields are empty or the structure varies a lot for other variables."}}