{"cell_type":{"6c7ddf70":"code","6626dcf4":"code","af95d131":"code","b9218e08":"code","4e1d2d67":"code","b4c9527c":"code","fa99ef50":"code","d0f66e1e":"code","2a71a886":"code","2c450c05":"code","4ef0ddab":"code","c6c4518c":"code","7a64c352":"code","62d0c97f":"code","ad943db1":"code","3f404d5d":"markdown","7d96ea8a":"markdown","8380357d":"markdown","2a22f399":"markdown","bb5d18d8":"markdown"},"source":{"6c7ddf70":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier","6626dcf4":"data = pd.read_csv(\"..\/input\/mushroom-classification\/mushrooms.csv\")","af95d131":"data","b9218e08":"mappings = list()\n\nencoder = LabelEncoder()\n\nfor column in range(len(data.columns)):\n    data[data.columns[column]] = encoder.fit_transform(data[data.columns[column]])\n    mappings_dict = {index: label for index, label in enumerate(encoder.classes_)}\n    mappings.append(mappings_dict)","4e1d2d67":"mappings","b4c9527c":"y = data['class']\nX = data.drop('class', axis=1)","fa99ef50":"scaler = StandardScaler()\n\nX = pd.DataFrame(scaler.fit_transform(X), columns=X.columns)","d0f66e1e":"X","2a71a886":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8)","2c450c05":"log_model = LogisticRegression()\nsvm_model = SVC(C=1.0, kernel='rbf')\nnn_model = MLPClassifier(hidden_layer_sizes=(128, 128))","4ef0ddab":"np.sum(y) \/ len(y)","c6c4518c":"log_model.fit(X_train, y_train)\nsvm_model.fit(X_train, y_train)\nnn_model.fit(X_train, y_train)","7a64c352":"print(f\"---Logistic Regression: {log_model.score(X_test, y_test)}\")\nprint(f\"Support Vector Machine: {svm_model.score(X_test, y_test)}\")\nprint(f\"--------Neural Network: {nn_model.score(X_test, y_test)}\")","62d0c97f":"X_test.shape","ad943db1":"corr = data.corr()\n\nsns.heatmap(corr)","3f404d5d":"# Preprocessing","7d96ea8a":"# Visualization","8380357d":"# Training","2a22f399":"# Model Selection","bb5d18d8":"# Getting Started"}}