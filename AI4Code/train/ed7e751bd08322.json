{"cell_type":{"7e813804":"code","870d51f2":"code","7ea2253a":"code","108cbc4f":"code","88e7b179":"code","203aadb0":"code","fef4aaeb":"code","40a9e073":"code","781c2cba":"code","0a28459a":"code","4ecdcc27":"code","ff947b5b":"code","f77ef542":"code","1bbed078":"code","e99cedc0":"code","1fbedc26":"code","4cf66c85":"code","a108fdfd":"code","28c924b2":"code","423f4750":"code","bf264ca2":"code","268877dd":"code","2e6b0ae6":"code","7b6775ca":"markdown","2d3235d5":"markdown","50ff0ffa":"markdown","3c23f28d":"markdown","9dcc2339":"markdown","f5c9446a":"markdown","3450e19d":"markdown","ec74beda":"markdown","6b150a36":"markdown","297280de":"markdown","2eb4e04a":"markdown","6ecbd140":"markdown","66eb17ea":"markdown"},"source":{"7e813804":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport datetime\nimport math\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","870d51f2":"fp = pd.read_csv('..\/input\/coronavirusdataset\/SeoulFloating.csv')\n\nfp['dayofweek'] = fp['date'].apply(lambda x: datetime.datetime.strptime(x, \"%Y-%m-%d\").weekday()).astype('str')\nfp['month'] = fp['date'].apply(lambda x: x[6:7]) \nfp['new_date'] = fp['month'].astype('str') + '\/' + fp['date'].apply(lambda x: x[8:])\nfp = fp.sort_values(['date', 'hour', 'birth_year', 'sex'])  ## this data is not sorted.\nfp.reset_index(drop= True, inplace = True)\n","7ea2253a":"fp.head()","108cbc4f":"time = pd.read_csv('\/kaggle\/input\/coronavirusdataset\/Time.csv')\ntime['month'] = time['date'].apply(lambda x: x[6:7]) \ntime['new_date'] = time['month'].astype('str') + '\/' + time['date'].apply(lambda x: x[8:])\ntime['dayofweek'] = time['date'].apply(lambda x: datetime.datetime.strptime(x, \"%Y-%m-%d\").weekday()).astype('str')\n","88e7b179":"time.head()","203aadb0":"def plot_correlatiin(city, time, fp):\n    holiday = ['1\/01', '1\/21','1\/22','1\/23','1\/24','1\/25','1\/26','1\/27','1\/28','1\/29','1\/30']\n    ## holiday is excluded.\n    dayofweek_map = {0:'Monday', 1:'Tuesday', 2: 'Wednesday', 3:'Thursday', 4:'Friday', 5:'Saturday', 6:'Sunday'}\n\n    fig, ax = plt.subplots(3, 2, figsize = (18,8),  gridspec_kw={'wspace': 0.2})\n    \n    for i in range(0,6):\n        \n        time_df = time[(time['date'] < '2020-03-01')&( time['dayofweek'] == str(i))]\n        time_df = time_df[~time_df['new_date'].isin(holiday)].reset_index(drop=True)    \n\n        tmp = fp[(fp['city'] == city) & (fp['date'] >= '2020-01-20') & (fp['dayofweek'] == str(i))]\n        tmp = tmp[~tmp['new_date'].isin(holiday)]\n        group_= pd.DataFrame(tmp.groupby(['date'])['fp_num'].mean())\n        group_.reset_index(inplace = True)\n\n        join_data = pd.merge(time_df, group_, how = 'left', on = 'date')\n\n        correlations =  join_data[['test','negative', 'confirmed', 'fp_num']].corr()\n\n\n        # Heatmap of correlations\n        fig.suptitle('{} correlations Every day of the week'.format(city), fontsize = 16)\n        \n        a = int(math.floor(i\/2))\n        b = i % 2\n        fig.subplots_adjust(left=0.02, bottom=0.06, right=0.95, wspace=0.1)\n        t= sns.heatmap(correlations, cmap = plt.cm.RdYlBu_r, vmin = -1, annot = True, vmax = 1, ax = ax[a,b])#, annot_kws={\"size\": 8})\n        t.set_title(\"{}\".format(dayofweek_map[i]), fontsize=8.5)\n        \n        \n        correlations.reset_index(inplace = True)\n        tmp = correlations.loc[0:2, 'fp_num']\n        if i == 0:\n            base = tmp.copy()\n        else:\n\n            base = pd.concat([base, tmp], axis = 1)\n\n\n    base = base.T\n    base.reset_index(drop= True, inplace = True)\n    base.columns = ['test','negative','confirmed']\n    week = pd.DataFrame(['Monday', 'Tuesday',  'Wednesday', 'Thursday', 'Friday', 'Saturday'], columns = ['week'])\n    base = pd.concat([base,week], axis = 1)\n    return base\n    \n\ndef correlation_fp_num(base):\n    plt.figure(figsize=(10, 8))\n    for i in ['test','negative','confirmed']:\n        plt.plot(base['week'], base[i])\n        plt.legend()\n    plt.ylabel('correlation between fp_num', fontsize = 15)\n    plt.show()","fef4aaeb":"base = plot_correlatiin('Jongno-gu', time, fp)\ncorrelation_fp_num(base)","40a9e073":"base = plot_correlatiin('Gangnam-gu', time, fp)\ncorrelation_fp_num(base)","781c2cba":"base = plot_correlatiin('Jung-gu', time, fp)\ncorrelation_fp_num(base)","0a28459a":"base = plot_correlatiin('Seocho-gu', time, fp)\ncorrelation_fp_num(base)","4ecdcc27":"base = plot_correlatiin('Jungnang-gu', time, fp)\ncorrelation_fp_num(base)","ff947b5b":"base = plot_correlatiin('Nowon-gu', time, fp)\ncorrelation_fp_num(base)\n\n","f77ef542":"base = plot_correlatiin('Gangbuk-gu', time, fp)\ncorrelation_fp_num(base)\n\n","1bbed078":"base = plot_correlatiin('Gwanak-gu', time, fp)\ncorrelation_fp_num(base)\n\n","e99cedc0":"def birth_corr_plot(city, time, fp):\n\n    holiday = ['1\/01', '1\/21','1\/22','1\/23','1\/24','1\/25','1\/26','1\/27','1\/28','1\/29','1\/30']\n    dayofweek_map = {0:'Monday', 1:'Tuesday', 2: 'Wednesday', 3:'Thursday', 4:'Friday', 5:'Saturday', 6:'Sunday'}\n\n    for j in [20, 30, 40, 50, 60, 70]:\n        for i in range(0,6):\n\n            time_df = time[(time['date'] < '2020-03-01')&( time['dayofweek'] == str(i))]\n            time_df = time_df[~time_df['new_date'].isin(holiday)].reset_index(drop=True)    \n\n            tmp = fp[(fp['city'] == city) & (fp['date'] >= '2020-01-20') & (fp['dayofweek'] == str(i)) & (fp['birth_year'] == j)]\n            tmp = tmp[~tmp['new_date'].isin(holiday)]\n            group_= pd.DataFrame(tmp.groupby(['date'])['fp_num'].mean())\n            group_.reset_index(inplace = True)\n\n            join_data = pd.merge(time_df, group_, how = 'left', on = 'date')\n\n            correlations =  join_data[['test','negative', 'confirmed', 'fp_num']].corr()\n\n\n            correlations.reset_index(inplace = True)\n            tmp = correlations.loc[2:2, 'fp_num']\n            if i == 0:\n                base = tmp.copy()\n            else:\n\n                base = pd.concat([base, tmp], axis = 1)\n\n\n        base = base.T\n        base.reset_index(drop= True, inplace = True)\n        base.columns = ['confirmed']\n        week = pd.DataFrame(['Monday', 'Tuesday',  'Wednesday', 'Thursday', 'Friday', 'Saturday'], columns = ['week'])\n        base = pd.concat([base,week], axis = 1)\n        base['birth_year'] = j\n\n        if j == 20:\n            birth_base = base.copy()\n        else:\n            birth_base = pd.concat([birth_base, base], axis = 0)\n            \n    palette = sns.color_palette(\"mako_r\", 6)\n    plt.figure(figsize=(10, 8))\n    sns.lineplot(data = birth_base, x = 'week', y='confirmed', hue='birth_year', palette=palette, sort=False)\n    plt.show()\n\n\n\n\n\n","1fbedc26":"birth_corr_plot('Jongno-gu', time, fp)\n","4cf66c85":"birth_corr_plot('Gangnam-gu', time, fp)\n","a108fdfd":"birth_corr_plot('Jung-gu', time, fp)\n","28c924b2":"birth_corr_plot('Seocho-gu', time, fp)\n\n","423f4750":"birth_corr_plot('Jungnang-gu', time, fp)\n","bf264ca2":"birth_corr_plot('Nowon-gu', time, fp)\n","268877dd":"birth_corr_plot('Gangbuk-gu', time, fp)\n","2e6b0ae6":"birth_corr_plot('Gwanak-gu', time, fp)\n","7b6775ca":"# 2. For each age group Correlation plot(each city)\n- This time, let's look at how the floating population changes as COVID increases with age.\n- <font size=3 color=\"red\">A negative correlation <\/font> : people are not moving as the corona situation becomes serious\n- <font size=3 color=\"blue\"> a positive correlation <\/font> : more and more people are coming to this area.\n\n\n- \uc774\ubc88\uc5d0\ub294 \uac19\uc740 \ubc29\uc2dd\uc774\uc9c0\ub9cc, \uac01 \uc5f0\ub839\ub300\ubcc4\ub85c \ub098\ub220\uc11c \uc0c1\uad00\uad00\uacc4\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","2d3235d5":"# Korea is refraining from moving because of COVID.\n## The corona virus is getting worse, and many countries around the world are ordering bans to move. \n\n- Korea did not issue a ban on movement, but it is campaigning for <font size=3 color=\"red\">\"Social Distance Setting.\"<\/font>\n- Let's find out where and how much the exercise was done through floating population data and patient data.\n\n\n\n- \ud55c\uad6d\uc740 \uc774\ub3d9 \uae08\uc9c0 \uba85\ub839\uc744 \ub0b4\ub9ac\uc9c0\ub294 \uc54a\uc558\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc0ac\ud68c\uc801 \uac70\ub9ac \ub450\uae30 \uc6b4\ub3d9\uc774 \uc790\uc728\uc801\uc73c\ub85c \ud589\ud574\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \n- \uc0ac\ud68c\uc801 \uac70\ub9ac\ub450\uae30\uac00 \uc5b4\ub5bb\uac8c \uc774\ub8e8\uc5b4\uc9c0\uace0 \uc788\ub294\uc9c0, \uc720\ub3d9\uc778\uad6c \ub370\uc774\ud130\uc640 \ud658\uc790 \ub370\uc774\ud130\ub97c \ud1b5\ud574\uc11c \ud655\uc778\ud558\uace0\uc790 \ud569\ub2c8\ub2e4. ","50ff0ffa":"## Floating population data load and preprocessing \n- Floating population data is still available until February in Seoul\n- Make a column related to time for visualization.\n","3c23f28d":"## Residential Gu Correlation plot","9dcc2339":"# Conclusion\n\n- In Korea, the \"Social Distance Setting\" is practiced very well in each region.\n- Unfortunately, there seems to be some deviation when there is a lot of free time like weekends.\n- Anyway, I think that this is one of the factors that has stabilized the trend of COVID infection in Korea.\n- We hope that all countries in the world will regain their daily lives from COVID.\n<\/br>\n\n\n- \ud55c\uad6d\uc740 \uc0ac\ud68c\uc801 \uac70\ub9ac\ub450\uae30 \uc6b4\ub3d9\uc744 \uc790\uc728\uc801\uc73c\ub85c \uc9c0\uc5ed\ubcc4\ub85c \ub9e4\uc6b0 \uc798 \uc2e4\ucc9c\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \n- \uc544\uc27d\uac8c\ub3c4 \uc8fc\ub9d0\ucc98\ub7fc \uc5ec\uc720 \uc2dc\uac04\uc774 \ub9ce\uc744 \ub54c\ub294 \ub2e4\uc18c \uc774\ud0c8\uc774 \uc788\uc2b5\ub2c8\ub2e4. \n- \uc544\ubb34\ud2bc \uc774\ub7ec\ud55c \ubd80\ubd84\uc774 \ud55c\uad6d\uc774 \ube60\ub974\uac8c COVID \uac10\uc5fc \ucd94\uc138\uac00 \uc548\uc815\ud654\ub41c \uc694\uc778 \uc911\uc5d0 \ud558\ub098\ub77c\uace0 \uc0dd\uac01\ub429\ub2c8\ub2e4. \n- \uc138\uacc4\uc758 \ubaa8\ub4e0 \uad6d\uac00\ub4e4\uc774 COVID\ub85c\ubd80\ud130 \uc77c\uc0c1\uc744 \ub418\ucc3e\uae30\ub97c \ud76c\ub9dd\ud569\ub2c8\ub2e4.","f5c9446a":"### Great! As the COVID became more severe, the floating population increased in residential areas <font size=3 color=\"blue\">(correlation is positive).<\/font>\n\n- Unfortunately, the correlation decreases over the weekend, and it is estimated that people move to other industrial areas.\n\n\n- \uc8fc\uac70 \uc9c0\uc5ed\uc774\uae30 \ub54c\ubb38\uc5d0 \uc0ac\ub78c\ub4e4\uc758 COVID\uac00 \uc2ec\ud574\uc9d0\uc5d0 \ub530\ub77c \uc720\ub3d9\uc778\uad6c\uc640 \uc591\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac16\uace0 \uc788\uc2b5\ub2c8\ub2e4. \n","3450e19d":"### The large flow is the same as before (whether the value is negative or positive), Variations vary by age group.\n- For more detailed analysis, it is necessary to have data in the **dong unit** of the floating population, not in units of gu. \n- Or, it seems that We need more data about what event was in the gu.\n\n\n- \ud070 \ud750\ub984\uc740 \ub3d9\uc77c\ud558\uc9c0\ub9cc(\uac12\uc774 \uc591\uc774\ub0d0 \uc74c\uc774\ub0d0) \uc5f0\ub839\ub300\ubcc4\ub85c \ud3b8\ucc28\uac00 \uc2ec\ud569\ub2c8\ub2e4. \n- \uad6c \ub2e8\uc704\uc758 \ub370\uc774\ud130\uac00 \uc544\ub2cc \ub3d9 \ub2e8\uc704\uc758 \uc720\ub3d9\uc778\uad6c \ub370\uc774\ud130\uac00 \uc81c\uacf5\ub418\uac70\ub098, \uc138\ubd80\uc801\uc73c\ub85c \ud574\ub2f9 \uad6c\uc5d0 \uc5b4\ub5a4 \uc774\ubca4\ud2b8\uac00 \uc788\uc5c8\ub294\uc9c0 \ud30c\uc545\uc774 \ud544\uc694\ud560 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","ec74beda":"## Residential Gu Correlation plot","6b150a36":"### Great! On weekdays, Fp-num tends to decrease as COVID gets worse. <font size=3 color=\"red\">(correlation is negative)<\/fond>\n- It seems that there is a \"social distance setting\".\n- Unfortunately, as the weekend approaches, such as Friday and Saturday, people begin to move little by little.\n- Also There are some deviations on weekdays.\n\n\n- \uc0ac\ud68c\uc801 \uac70\ub9ac\ub450\uae30 \uc6b4\ub3d9\uc774 \uc774\ub8e8\uc5b4\uc9c0\uace0 \uc788\ub294 \uac78\ub85c \ubcf4\uc785\ub2c8\ub2e4. \n- \uc548\ud0c0\uae5e\uac8c\ub3c4 \uc8fc\ub9d0\uc774 \ub420\uc218\ub85d \uc720\ub3d9\uc778\uad6c\ub294 \ub2e4\uc18c \uc99d\uac00\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \n- \ub610\ud55c \ud3c9\uc77c\uc5d0\ub294 \uc57d\uac04\uc758 \ud3b8\ucc28\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4. ","297280de":"## industrial Gu Correlation plot","2eb4e04a":"## Time data load and preprocessing \n- This is the trend data of ***the number of confirmed persons, the number of negative judgments, and the number of covid testers over time.***\n- All data are cumulative.\n- Also make a same column related to time for visualization.\n","6ecbd140":"## industrial Gu Correlation plot","66eb17ea":"# 1. Total Correlation plot(each city)\n### I will plot the correlation between the floating population and number of confirmers, and the number of covid testers by day of the week.\n\n- <font size=3 color=\"red\">A negative correlation <\/font> : people are not moving as the corona situation becomes serious\n- <font size=3 color=\"blue\"> a positive correlation <\/font> : more and more people are coming to this area.\n\n- Seoul City has **25 gu**, which are subdivided into **424 dongs.**\n- I will see **8 representative gu** among these gus. 8 gu are divided into  <font size=3 color=\"blue\">4 residential areas<\/font> and  <font size=3 color=\"red\">4 industrial areas.<\/font>\n\n\n- \uc720\ub3d9\uc778\uad6c\uc640 \ub204\uc801 \uac10\uc5fc\uc790 \uc218, \uc74c\uc131 \ud310\uc815 \uc218, \ucf54\ub85c\ub098 \uac80\uc0ac\uc790 \uc218 \uc0ac\uc774\uc758 \uc694\uc77c\ubcc4 \uc0c1\uad00\uad00\uacc4\ub97c \uc0b4\ud3b4\ubcfc \uac83\uc785\ub2c8\ub2e4. \n- \uac12\uc774 \uc74c\uc218 : COVID\uac00 \uc2ec\ud574\uc9d0\uc5d0 \ub530\ub77c \uc720\ub3d9\uc778\uad6c\uac00 \uac10\uc18c\ud55c \uac83\uc785\ub2c8\ub2e4. \n- \uac12\uc774 \uc591\uc218 : COVID\uac00 \uc2ec\ud574\uc9d0\uc5d0 \ub530\ub77c \uc720\ub3d9\uc778\uad6c\uac00 \uc99d\uac00\ud55c \uac83\uc785\ub2c8\ub2e4. \n- \uc11c\uc6b8\uc758 \ub300\ud45c\uc801\uc778 8\uac1c\uc758 \uad6c\ub97c \uac00\uc838\uc654\uace0, \uadf8\uc911 4\uac1c\ub294 \uc0b0\uc5c5 \uc9c0\uc5ed, 4\uac1c\ub294 \uc8fc\uac70 \uc9c0\uc5ed\uc785\ub2c8\ub2e4."}}