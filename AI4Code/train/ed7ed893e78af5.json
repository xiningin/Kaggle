{"cell_type":{"095fa2ac":"code","ea8d41e0":"code","b3acad8d":"code","95fae7bb":"code","b9156f2b":"code","734ce468":"code","d9018fc1":"code","1f782189":"code","d194abd3":"code","1bd793ff":"code","e8e4560a":"code","727a4b56":"code","c20b37e7":"code","d10bf203":"code","9478c965":"code","20fddd10":"code","9aa8abc5":"code","0e760a9d":"code","83477c0c":"code","fc1deb71":"code","42136089":"code","c402dae3":"code","69f68a55":"code","3d64e447":"code","7eb7ec93":"code","e637bf8a":"code","0a369ba0":"code","ec25286a":"code","bbc84abb":"code","9c5ee784":"code","405ff080":"code","61b4ea41":"code","258e403e":"code","089ebfcb":"code","045f0009":"code","ca74bc4f":"code","fbf88278":"code","849e02e6":"code","c3a14247":"code","f2fcb457":"code","d84cd178":"code","42a60de0":"code","ac51de91":"code","a137824a":"code","2cf9d700":"code","85cd5cc1":"code","d19bf38f":"code","894fae1b":"code","2dbe6288":"code","8578d988":"code","452d4b9f":"code","2602f522":"markdown","b938e5f2":"markdown","eb6c24fb":"markdown","3554564c":"markdown","129ffe0d":"markdown","83a46aec":"markdown","696f9422":"markdown","fab74218":"markdown","4e786da1":"markdown","e545f128":"markdown","ac44f704":"markdown","79acdc6e":"markdown","135eca86":"markdown","adfec3b6":"markdown","faaa297f":"markdown","0de62b7c":"markdown","e2700fbd":"markdown","0461d3d0":"markdown","388b05df":"markdown","6fb49d4f":"markdown","ab6fb538":"markdown","3b698315":"markdown","620995e4":"markdown","1ec9aa5e":"markdown"},"source":{"095fa2ac":"import pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec # Alignments \n\nimport seaborn as sns # theme & dataset\nprint(f\"Matplotlib Version : {mpl.__version__}\")\nprint(f\"Seaborn Version : {sns.__version__}\")\n\n\nplt.style.use('ggplot')\n%matplotlib inline","ea8d41e0":"df = pd.read_csv('\/kaggle\/input\/loan-data-for-dummy-bank\/loan_final313.csv')","b3acad8d":"df.head()","95fae7bb":"plt.rcParams['figure.dpi'] = 200","b9156f2b":"df.columns","734ce468":"df.info()","d9018fc1":"df.isnull().sum()","1f782189":"## Check how imbalanced TARGET is\ndf['loan_condition'].value_counts()","d194abd3":"# to recognize what is designated as _cat\ndf3 = df.loc[df['grade'] == 'G']\ndf3['grade_cat'].head()","1bd793ff":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf['loan_condition'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True)\nax[0].set_title('loan_condition')\nax[0].set_ylabel('')\nsns.countplot('loan_condition',data=df,ax=ax[1])\nax[1].set_title('loan_condition')\nplt.show()","e8e4560a":"df.groupby(['home_ownership','loan_condition'])['loan_condition'].count()","727a4b56":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf[['home_ownership','loan_condition_cat']].groupby(['home_ownership']).mean().plot.bar(ax=ax[0])\nax[0].set_title('loan_condition vs home_ownership')\nsns.countplot('home_ownership',hue='loan_condition_cat',data=df,ax=ax[1])\nax[1].set_title('home_ownership:Bad Loan vs Good loan')\nplt.show()","c20b37e7":"df.groupby(['term','loan_condition'])['loan_condition'].count()","d10bf203":"pd.crosstab(df.term,df.loan_condition,margins=True).style.background_gradient(cmap='summer_r')","9478c965":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf[['term','loan_condition_cat']].groupby(['term']).mean().plot.bar(ax=ax[0])\nax[0].set_title('loan_condition vs term')\nsns.countplot('term',hue='loan_condition_cat',data=df,ax=ax[1])\nax[1].set_title('term:Bad Loan vs Good loan')\nplt.show()","20fddd10":"pd.crosstab(df.application_type,df.loan_condition,margins=True).style.background_gradient(cmap='summer_r')","9aa8abc5":"pd.crosstab(df.purpose,df.loan_condition,margins=True).style.background_gradient(cmap='summer_r')","0e760a9d":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf[['purpose','loan_condition_cat']].groupby(['purpose']).mean().plot.bar(ax=ax[0])\nax[0].set_title('loan_condition vs purpose')\nsns.countplot('purpose_cat',hue='loan_condition_cat',data=df,ax=ax[1])\nax[1].set_title('purpose:Bad Loan vs Good Loan')\nplt.show()\n\n####purpose_cat = 6 refers to debt_consolidation","83477c0c":"pd.crosstab(df.region,df.loan_condition,margins=True).style.background_gradient(cmap='summer_r')","fc1deb71":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf[['region','loan_condition_cat']].groupby(['region']).mean().plot.bar(ax=ax[0])\nax[0].set_title('loan_condition vs region')\nsns.countplot('region',hue='loan_condition_cat',data=df,ax=ax[1])\nax[1].set_title('Region : ')\nplt.show()","42136089":"pd.crosstab(df.emp_length_int,df.loan_condition,margins=True).style.background_gradient(cmap='summer_r')","c402dae3":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf['emp_length_int'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Number Of Loans By emp_length_int')\nax[0].set_ylabel('Count')\nsns.countplot('emp_length_int',hue='loan_condition_cat',data=df,ax=ax[1])\nax[1].set_title('emp_length_int: Bad Loan vs Good Loan')\nplt.show()","69f68a55":"pd.crosstab(df.grade,df.loan_condition,margins=True).style.background_gradient(cmap='summer_r')","3d64e447":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf['grade'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Number Of Loans By Grade')\nax[0].set_ylabel('Count')\nsns.countplot('grade',hue='loan_condition_cat',data=df,ax=ax[1])\nax[1].set_title('grade: Bad Loan vs Good Loan')\nplt.show()","7eb7ec93":"pd.crosstab(df.interest_payments,df.loan_condition,margins=True).style.background_gradient(cmap='summer_r')","e637bf8a":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf['interest_payments'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Number Of Loans By Interest_payments')\nax[0].set_ylabel('Count')\nsns.countplot('interest_payments',hue='loan_condition_cat',data=df,ax=ax[1])\nax[1].set_title('interest_payments: Bad Loan vs Good Loan')\nplt.show()","0a369ba0":"pd.crosstab(df.income_category,df.loan_condition,margins=True).style.background_gradient(cmap='summer_r')","ec25286a":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndf['income_category'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Number Of Loans By Income_category')\nax[0].set_ylabel('Count')\nsns.countplot('income_category',hue='loan_condition_cat',data=df,ax=ax[1])\nax[1].set_title('Income_category: Bad Loan vs Good Loan')\nplt.show()","bbc84abb":"print('Highest Loan Amount was:',df['loan_amount'].max(),'$')\nprint('Lowest Loan Amount was:',df['loan_amount'].min(),'$')\nprint('Average Loan Amount was:',df['loan_amount'].mean(),'$')","9c5ee784":"f,ax=plt.subplots(1,2,figsize=(18,8))\nsns.violinplot(\"income_category\",\"loan_amount\", hue=\"loan_condition_cat\", data=df,split=True,ax=ax[0])\nax[0].set_title('income_category and loan_amount vs Loan_condition')\nax[0].set_yticks(range(0,40000,5000))\nsns.violinplot(\"term\",\"loan_amount\", hue=\"loan_condition_cat\", data=df,split=True,ax=ax[1])\nax[1].set_title('Term and loan_amount vs Loan_condition')\nax[1].set_yticks(range(0,40000,5000))\nplt.show()","405ff080":"print('Highest installment was:',df['installment'].max(),'$')\nprint('Lowest installment was:',df['installment'].min(),'$')\nprint('Average installment was:',df['installment'].mean(),'$')","61b4ea41":"f,ax=plt.subplots(1,2,figsize=(18,8))\nsns.violinplot(\"income_category\",\"installment\", hue=\"loan_condition_cat\", data=df,split=True,ax=ax[0])\nax[0].set_title('income_category and installment vs Loan_condition')\nax[0].set_yticks(range(0,1500,300))\nsns.violinplot(\"term\",\"installment\", hue=\"loan_condition_cat\", data=df,split=True,ax=ax[1])\nax[1].set_title('Term and installment vs Loan_condition')\nax[1].set_yticks(range(0,1500,300))\nplt.show()","258e403e":"print('Highest interest_rate was:',df['interest_rate'].max(),'%')\nprint('Lowest interest_rate was:',df['interest_rate'].min(),'%')\nprint('Average interest_rate was:',df['interest_rate'].mean(),'%')","089ebfcb":"f,ax=plt.subplots(1,2,figsize=(18,8))\nsns.violinplot(\"income_category\",\"interest_rate\", hue=\"loan_condition_cat\", data=df,split=True,ax=ax[0])\nax[0].set_title('income_category and interest_rate vs Loan_condition')\nax[0].set_yticks(range(0,30,3))\nsns.violinplot(\"term\",\"interest_rate\", hue=\"loan_condition_cat\", data=df,split=True,ax=ax[1])\nax[1].set_title('Term and interest_rate vs Loan_condition')\nax[1].set_yticks(range(0,30,3))\nplt.show()","045f0009":"df_labeled = df.drop(['id','final_d', 'year','loan_condition', 'issue_d', 'home_ownership', 'income_category', \n              'term', 'application_type', 'purpose', 'interest_payments', 'loan_condition', 'grade', 'region'],axis=1 )","ca74bc4f":"sns.heatmap(df_labeled.corr(),annot=True,cmap='RdYlGn',linewidths=0.2) #df.corr()-->correlation matrix\nfig=plt.gcf()\nfig.set_size_inches(20, 16)\nplt.show()","fbf88278":"from sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\ndf['region'] = le.fit_transform(df['region'])","849e02e6":"df_for_use = df.drop(['id','final_d', 'year','loan_condition', 'issue_d', 'home_ownership', 'income_category', \n              'term', 'application_type', 'purpose', 'interest_payments', 'loan_condition', 'grade'],axis=1 )","c3a14247":"df_for_use.head()","f2fcb457":"#### Export\n\n\ndf_for_use.to_pickle('df_for_use.pkl')","d84cd178":"df_fe = df.drop(['id','final_d', 'year','loan_condition', 'issue_d', 'home_ownership', 'income_category', 'term', 'application_type', 'purpose', 'interest_payments', 'loan_condition', 'grade', 'region'],axis=1 )","42a60de0":"df_fe.columns","ac51de91":"# df_fe.drop(['total_rec_prncp', 'installment', 'interest_rate' ] , axis = 1, inplace = True)","a137824a":"df_fe['LoanAmntOverIncome'] = df_fe['loan_amount'] \/ df_fe['annual_inc']\ndf_fe['installmentOverLoanAmnt'] = df_fe['installment'] \/ df_fe['loan_amount']\ndf_fe['totalPymntOverIncome'] = df_fe['total_pymnt'] \/ df_fe['annual_inc']\ndf_fe['totalRecPrncpOverIncome'] = df_fe['total_rec_prncp'] \/ df_fe['annual_inc']\n\n","2cf9d700":"df.dtypes","85cd5cc1":"df_fe.astype({'LoanAmntOverIncome': 'float32'}).dtypes","d19bf38f":"df_fe['totalRecPrncpOverIncome']","894fae1b":"nanCounter = np.isnan(df_fe.loc[:,df_fe.columns]).sum()","2dbe6288":"nanCounter","8578d988":"df_fe.head()","452d4b9f":"#### Export\n\n\ndf_fe.to_pickle('df_fe.pkl')","2602f522":"### Data Description \n\n* emp_length_int : Employment length in years. Possible values are between 0 and 10 where 0 means less than one year and 10 means ten or more years.\n* home_ownership : The home ownership status provided by the borrower during registration. Our values are: RENT, OWN, MORTGAGE, OTHER.\n* income_category : Categorized Income (Low, Medium, High) \n* annual_inc : The self-reported annual income provided by the borrower during registration.\n\n* loan_amount : The listed amount of the loan applied for by the borrower. If at some point in time, the credit department reduces the loan amount, then it will be reflected in this value.\n* term : The number of payments on the loan. Values are in months and can be either 36 or 60.\n\n* application_type : Indicates whether the loan is an individual application or a joint application with two co-borrowers\n* purpose : A category provided by the borrower for the loan request.\n* interest_payments : ;;\n* loan_condition : Condition of the Loan [TARGET] (Good Loan = 0 , Bad Loan = 1)\n* interest_rate :  Interest Rate on the loan\n* grade : LC assigned loan grade\n* dti : A ratio calculated using the borrower\u2019s total monthly debt payments on the total debt obligations, - - - excluding mortgage and the requested LC loan, divided by the borrower\u2019s self-reported monthly income.\n* total_pymnt : Payments received to date for total amount funded\n* total_rec_prncp : Principal received to date\n* recoveries : post charge off gross recovery\n* installment : The monthly payment owed by the borrower if the loan originates.\n* region : region of Loan being executed","b938e5f2":"## Continuous Features\n\n#### : loan_amount, annual_inc, interest_rate, dti, total_pymnt, recoveries, installment\n","eb6c24fb":"## interest_rate\n\n: \ub300\ucd9c\uc758 \uc774\uc790\uc728","3554564c":"## income_category\n\n: \uc218\uc775 Low = 1, Medium = 2, High = 3 \uc73c\ub85c \ubd84\ub958","129ffe0d":"## grade\n\n: \ub300\ucd9c \ub4f1\uae09 ( A ~ G , 1~7)","83a46aec":"### region \n\n: \uac70\ub798\uc9c0\uc5ed","696f9422":"## loan_amount\n\n: \ub300\ucd9c\uae08\uc561(\ub2ec\ub7ec)","fab74218":"### Correlation Between The Features","4e786da1":"### application_type \n\n: \uac1c\uc778 \ub300\ucd9c \uc2e0\uccad(=1) \uc778\uc9c0, 2\uba85\uc758 \ub300\ucd9c\uc790\uc5d0 \uc758\ud574 \uacf5\ub3d9\uc73c\ub85c \uc2e0\uccad\ub41c \ub300\ucd9c \uc2e0\uccad (=2)\uc778\uc9c0 \uc5ec\ubd80","e545f128":"## Data Visualization","ac44f704":"### **Drop Columns for MODEL _ Without FE and elimination**","79acdc6e":"#### Highly correlated Features\n: loan_amount & installment ,\n  total_rec_prncp & total_pymnt ,\n  grade_cat & interest_rate\n  ","135eca86":"### Data Description (Korean)\n\n* year : \ub300\ucd9c \ubc1c\uc0dd \uc5f0\ub3c4\n* issue_d : \ub300\ucd9c \ubc1c\uc0dd \uc77c\uc790\n* final_d : \ub9c8\uc9c0\ub9c9 \uac70\ub798\uc77c\uc790\n* emp_length_int : \"\uadfc\uc18d\ub144\uc218. 0\uc740 1\ub144 \ubbf8\ub9cc, 10\uc740 10\ub144 \uc774\uc0c1\"\n* home_ownership : \"\ub4f1\ub85d \uc2dc \ub300\ucd9c\uc790\uc5d0\uac8c\uc11c \uc81c\uacf5\ub41c \uc9d1 \ubcf4\uc720 \uc0c1\ud0dc. RENT(\ub300\uc5ec) = 1, OWN(\uc18c\uc720) = 2, MORTAGE(\ub2f4\ubcf4\ub300\ucd9c) = 3 \"\n* home_ownership_cat : ;;\n* income_category : \"\uc218\uc775 Low = 1, Medium = 2, High = 3 \uc73c\ub85c \ubd84\ub958\"\n* annual_inc : \ub4f1\ub85d\uc2dc \ub300\ucd9c\uc790\uc5d0\uac8c\uc11c \uc81c\uacf5\ub41c \uc5f0\uac04 \uc18c\ub4dd\n* income_cat : ;;\n* loan_amount : \ub300\ucd9c\uae08\uc561(\ub2ec\ub7ec)\n* term : \"\ub300\ucd9c\uae30\uac04(36\uac1c\uc6d4 = 1, 60\uac1c\uc6d4 = 2)\"\n* term_cat : ;;\n* application_type : \"\uac1c\uc778 \ub300\ucd9c \uc2e0\uccad(=1) \uc778\uc9c0, 2\uba85\uc758 \ub300\ucd9c\uc790\uc5d0 \uc758\ud574 \uacf5\ub3d9\uc73c\ub85c \uc2e0\uccad\ub41c \ub300\ucd9c \uc2e0\uccad (=2)\uc778\uc9c0 \uc5ec\ubd80\"\n* application_type_cat : ;;\n* purpose : \ub300\ucd9c\uc774\uc720\n* purpose_cat : \"\ub300\ucd9c\uc6a9\ub3c4(\ube5b \uccad\uc0b0, \uce74\ub4dc \ub300\uae08 \uacb0\uc81c, \uc9d1 \uac1c\ubc1c \ub4f1\ub4f1) \n[credit_card = 1, car = 2, small_business = 3, other = 4, wedding = 5, debt_consolidation =6, \nhome_improvement = 7, major_purchase = 8, medical = 9, moving = 10, vacation = 11, house =12,\nrenewable_energy = 13,  educational = 14]\"\n* interest_payments : \"\uc774\uc790 \uc9c0\ubd88? (Low = 1, High =2 \ub85c \ubd84\ub958)\"\n* interest_payments_cat : ;;\n* loan_condition : \ub300\ucd9c\uc758 \uc0c1\ud0dc(TARGET) (Good Loan = 0 , Bad Loan = 1)\n* loan_condition_cat : ;;\n* interest_rate : \ub300\ucd9c\uc758 \uc774\uc790\uc728\n* grade : \ub300\ucd9c \ub4f1\uae09 ( A ~ G , 1~7)\n* grade_cat : ;;\n* dti : \uae08\uc735\ubd80\ucc44 \uc0c1\ud658\ub2a5\ub825\uc744 \uc18c\ub4dd\uc73c\ub85c \ub530\uc838\uc11c \ub300\ucd9c\ud55c\ub3c4\ub97c \uc815\ud558\ub294 \uacc4\uc0b0\ube44\uc728\n* total_pymnt : \ucd1d \uc0c1\ud658\uae08\uc561\n* total_rec_prncp : ???\n* recoveries : \ud68c\uc218\n* installment : \ubd84\ud560 \ubd88\uc785\uae08\n* region : \uac70\ub798\uc9c0\uc5ed\n","adfec3b6":"**Categorical Features in the dataset**:, home_ownership,  term, application_type, purpose, region.\n\n**Ordinal Features in the dataset** :emp_length_int, grade, interest_payments, income_category\n\n**Continous Features in the dataset**: loan_amount, annual_inc, interest_rate, dti, total_pymnt, recoveries, installment","faaa297f":"## emp_length_int\n\n: \uadfc\uc18d\ub144\uc218. 0\uc740 1\ub144 \ubbf8\ub9cc, 10\uc740 10\ub144 \uc774\uc0c1","0de62b7c":"## installment\n\n: \ubd84\ud560 \ubd88\uc785\uae08","e2700fbd":"## Categorical Features\n\n#### : home_ownership,  term, application_type, purpose, region.\n","0461d3d0":"### purpose\n: \ub300\ucd9c\uc774\uc720","388b05df":"### home_ownership \n\n: \ub4f1\ub85d \uc2dc \ub300\ucd9c\uc790\uc5d0\uac8c\uc11c \uc81c\uacf5\ub41c \uc9d1 \ubcf4\uc720 \uc0c1\ud0dc. RENT(\ub300\uc5ec) = 1, OWN(\uc18c\uc720) = 2, MORTAGE(\ub2f4\ubcf4\ub300\ucd9c) = 3 ","6fb49d4f":"### term \n\n: \ub300\ucd9c\uae30\uac04(36\uac1c\uc6d4 = 1, 60\uac1c\uc6d4 = 2)","ab6fb538":"## Analysing The Features","3b698315":"## Feature_Engineering","620995e4":"## interest_payments\n\n: \uc774\uc790 \uc9c0\ubd88? (Low = 1, High =2 \ub85c \ubd84\ub958)","1ec9aa5e":"## Ordinal Features\n\n#### : emp_length_int, grade, interest_payments, income_category\n"}}