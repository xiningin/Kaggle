{"cell_type":{"a93cf7b3":"code","52c92aea":"code","76e57549":"code","d29a48b5":"code","ab2d33d9":"code","9fdf56f9":"code","3c7b4ccf":"code","73d85cae":"code","b022cf4b":"code","66c17854":"code","186f573b":"code","dec4e41d":"code","cfcd9482":"code","c4801453":"code","0a7cbfc2":"code","25b82e17":"code","fd80dc4a":"code","a8192dfe":"code","61cad911":"code","636308fd":"code","9fed17f2":"code","b4ed29b8":"code","bdd03667":"code","7fad8e86":"code","0f3098a2":"code","805cd507":"code","14580cc6":"code","1df0e7b4":"code","2294bc01":"code","fe170969":"code","afb144a9":"code","68656726":"code","034ff8da":"code","2cee8591":"code","c1ad7747":"code","aaa9d29f":"code","d1f89ddd":"code","a8e8f579":"markdown","762bc8e8":"markdown","e3a0d6c3":"markdown","605c9415":"markdown","d63556e5":"markdown","f83cde7a":"markdown","3cbcc6ad":"markdown","8a0dd2e3":"markdown","14b67e15":"markdown","80fd83cd":"markdown","0c60b019":"markdown","12781827":"markdown","4ee7e1b3":"markdown","1fbc292f":"markdown","85bf4c64":"markdown","9c1d9cf7":"markdown","d5e65048":"markdown","72ea2bc1":"markdown","421b74d8":"markdown","daff8e25":"markdown","e62e96aa":"markdown","eeb15364":"markdown","f79996af":"markdown","913a81df":"markdown","f4b6ee81":"markdown","d0b18ad7":"markdown"},"source":{"a93cf7b3":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","52c92aea":"data = pd.read_csv(\"..\/input\/googleplaystore.csv\")","76e57549":"data.info()","d29a48b5":"data.isnull().sum()","ab2d33d9":"data.isnull().sum()*100\/len(data)","9fdf56f9":"data.isnull().sum(axis = 1)*100\/len(data)","3c7b4ccf":"data.info()","73d85cae":"data.dropna(inplace=True)","b022cf4b":"data[\"Reviews\"]=data[\"Reviews\"].astype(str).str.replace(\",\",\"\")\ndata[\"Reviews\"]=data[\"Reviews\"].astype(str).str.replace(\"M\", \"\")\ndata[\"Reviews\"] = data[\"Reviews\"].astype(int)\n\ndata[\"Reviews\"]","66c17854":"data[\"Size\"] =data[\"Size\"].astype(str).str.replace('Varies with device', \"0\")\ndata[\"Size\"] = data[\"Size\"].astype(str).str.replace(\"M\",\"\")\ndata[\"Size\"] = data[\"Size\"].str.replace(\",\",\"\")\ndata[\"Size\"] = data[\"Size\"].str.replace(\"+\",\"\")\ndata[\"Size\"] = data[\"Size\"].astype(str).str.replace(\"k\",\"\").astype(float)*1024","186f573b":"data[\"Size\"]","dec4e41d":"data[\"Installs\"]=data[\"Installs\"].astype(str).str.replace(\"+\", \"\")\ndata[\"Installs\"]=data[\"Installs\"].astype(str).str.replace(\",\",\"\")\ndata[\"Installs\"]=data[\"Installs\"].astype(str).str.replace('Free',\"\")\ndata[\"Installs\"] = data[\"Installs\"].astype(int)\ndata[\"Installs\"]","cfcd9482":"data[\"Price\"] = data[\"Price\"].astype(str).str.replace('Everyone',\"0\")\ndata[\"Price\"] = data[\"Price\"].astype(str).str.replace(\"$\",\"\")\ndata[\"Price\"] = data[\"Price\"].astype(float)\ndata[\"Price\"] = data[\"Price\"]*70\ndata[\"Price\"].unique()","c4801453":"#now i am using such of lib for visualisation\n%matplotlib inline\nsns.heatmap(data.corr(),cmap='coolwarm')","0a7cbfc2":"import plotly\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)","25b82e17":"number_of_apps_in_category = data['Category'].value_counts().sort_values(ascending=True)\n\ndf = [go.Pie(labels = number_of_apps_in_category.index,values = number_of_apps_in_category.values,hoverinfo = 'label+value')]\n\nplotly.offline.iplot(df, filename='active_category')","fd80dc4a":"df = [go.Histogram(\n        x = data.Rating,\n        xbins = {'start': 1, 'size': 0.1, 'end' :5}\n)]\n\nprint('Average app rating = ', np.mean(data['Rating']))\nplotly.offline.iplot(df, filename='overall_rating_distribution')","a8192dfe":"#most reviewed app rating\nplt.figure(figsize=(12,6))\nsns.distplot(data[\"Rating\"],bins=10,color=\"red\")","61cad911":"plt.figure(figsize=(12,6))\nsns.barplot(x = data.groupby('Category')['Rating'].mean().index, y = data.groupby('Category')['Rating'].mean().values)\nplt.xlabel('Category', fontsize=13)\nplt.ylabel('Rating', fontsize=13)\nplt.xticks(rotation=90)\nplt.title(\"avg rating table based on category\")","636308fd":"most_popular_apps = data[(data[\"Reviews\"]>10000000) ][ (data[\"Rating\"]>=4.5)]\nsns.countplot(most_popular_apps[\"Category\"])\nplt.xticks(rotation=90)","9fed17f2":"sns.set_context('talk',font_scale=1)\nplt.figure(figsize=(17,13))\nsns.countplot(data=data,y=\"Category\",hue=\"Type\")","b4ed29b8":"# Box plot ","bdd03667":"plt.figure(figsize=(16,12))\nsns.boxplot(data=data,x=\"Size\",y=\"Category\",palette='rainbow')","7fad8e86":"sns.countplot(x=data[\"Type\"])","0f3098a2":"plt.figure(figsize=(17,13))\nsns.countplot(data=data[data[\"Reviews\"]>1000000],y=\"Category\",hue=\"Type\")\nplt.title(\"most popular apps with 1000000+ reviews\")\nplt.xlabel(\"no of apps\")","805cd507":"\nplt.figure(figsize=(12,6))\nsns.distplot(data[data[\"Reviews\"]>10000][\"Rating\"],bins=10,color=\"red\")","14580cc6":"plt.figure(figsize=(16,6))\nsns.scatterplot(data=data[data[\"Reviews\"]>100000],x=\"Size\",y=\"Rating\",hue=\"Type\")\nplt.title(\"apps with reviews graterthan 100000\")","1df0e7b4":"x=np.log(data[\"Installs\"])\ny=np.log(data[\"Reviews\"])\npopular_apps = data[(data[\"Installs\"]>10000000) & (data[\"Rating\"]>=4.7)]\n\npd.DataFrame(popular_apps[popular_apps[\"Type\"]==\"Free\"][[\"App\"]])","2294bc01":"from sklearn import metrics\nfrom sklearn import preprocessing\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split","fe170969":"mldata = data[[\"Reviews\",\"Size\",\"Installs\",\"Price\",\"Rating\"]]\nmldata.dropna(inplace=True)\n\nX=mldata.iloc[:,0:-1].values\ny = mldata.iloc[:,-1].values","afb144a9":"xtrain,xtest,ytrain,ytest = train_test_split(X,y)","68656726":"#Fit regressor or model on data\nrfr = RandomForestRegressor(n_estimators=300)","034ff8da":"rfr.fit(xtrain,ytrain)\nypre = rfr.predict(xtest)\n\ndf=pd.DataFrame()\n\ndf[\"ytest\"]=pd.Series(ytest)\n\ndf[\"ypre\"] =pd.Series(ypre)\ndf.sample(10)","2cee8591":"import collections\ncount = 1\nfor i in data['Category'].unique():\n    print(count,': ',i)\n    count = count + 1\n\nsns.set_style('whitegrid')\nplt.figure(figsize=(16,8))\nplt.title('Number of apps on the basis of category')\nsns.countplot(x='Category',data = data)\nplt.xticks(rotation=90)\nplt.show()","c1ad7747":"sns.set_style('whitegrid')\nplt.figure(figsize=(15,8))\nsns.scatterplot(y='Category',x='Reviews',data = data,hue='Category',legend=False)\nplt.xticks(rotation=90)\nplt.title('Number of reviews on the basis of Category')\nplt.show()","aaa9d29f":"plt.figure(figsize=(20,8))\ndata.groupby('Category')['Reviews'].sum().sort_values(ascending=False).head(10).plot(kind='bar');\nplt.ylabel('Count', fontsize=16)\nplt.xlabel('Ratings', fontsize=16)\nplt.title(\"Total Reviews Number for Top 10 Category\", fontsize=16)\nplt.xticks(rotation=45)\nplt.show()","d1f89ddd":"plt.figure(figsize=(25,10))\nplt.scatter(x=data[\"Genres\"],y=data[\"Rating\"],color=\"green\",marker=\"o\")\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","a8e8f579":"# Default command to drop Na values from whole dataset","762bc8e8":"this method is used to clean \"size\" column size column contains the strings like 'M' stands for megabyte \"Varies with device\",\"k\" stands for kilobyte we convert have to every app size to megabytes and return as float type","e3a0d6c3":"# Percentage of missing values or Nan values in each column","605c9415":"3 # Free and Paid apps in google play store","d63556e5":"Fourth method is used to clean \"$\" and \"Everyone string from the column","f83cde7a":"# Missing values in each row","3cbcc6ad":"# Top 10 categories and their reviews","8a0dd2e3":"# Split data for cross validation","14b67e15":"# Apps with upper then 1,00,000 reviews","80fd83cd":"# Categorywise free and paid app in google play store","0c60b019":"**data of Reviews has string M in it M stands for million we have to remove \",\" from values .if the values has 'M' and finally convert to int this method can clean the Review column**","12781827":"- Import required libararies\n- Preprocess data\n- Use regex for pattern matching\n- Split data for cross-validation\n- Train machine on robustfit algo\n- Predict new values using test data\n- Check accuracy score\n- Check Mean Squared Error","4ee7e1b3":"# Import libs","1fbc292f":"# Now its time to predict some rating using machine learning","85bf4c64":"# Most popular app","9c1d9cf7":"# Most popular app","d5e65048":"# Number of reviews on the basis of category","72ea2bc1":"# Preparing data for data science\/analytics\nThe process of preparing data like resizing,remarking,changing datatype for analytics or others is known as **DATA MINING**. Working with massive data is also known as **DATA MINING** \n### CONTENT\n- Finding missing values \n- Filling up missing values \n- Changing Dtype if neended","421b74d8":"**i can see rating column has lesser rows as compare to other, this will impact on my analysis.By this information i want to check other column**","daff8e25":"# Genreswise rating ","e62e96aa":"**Third method is used to clean installs column it removes the string \"+\", \",\" and returns as integer**","eeb15364":"# Most reviewed app rating","f79996af":"# The most popular paid apps with decent reviews and ratings","913a81df":"# Fit your train data i**n model\/Algo","f4b6ee81":"# Let's Start!","d0b18ad7":"# Load dataset"}}