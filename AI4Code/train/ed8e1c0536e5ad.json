{"cell_type":{"11a0d1d4":"code","15022075":"code","f104bd51":"code","6623dab2":"code","3d6be599":"code","b6c6c61d":"code","0c6528d3":"code","8b9978ee":"code","a30e36ac":"code","92596861":"code","60d43f9a":"code","b28f7fdb":"code","0a93ad48":"code","3056fca8":"code","38369163":"markdown","1d973421":"markdown","2bde6050":"markdown","c5ec7c2c":"markdown","7cc8a93e":"markdown","eba48cab":"markdown"},"source":{"11a0d1d4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns   # visualization tool\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","15022075":"data1 = pd.read_csv('..\/input\/2015.csv')\ndata2 = pd.read_csv('..\/input\/2016.csv')\ndata3 = pd.read_csv('..\/input\/2017.csv')\n# receive data \/ obtain data","f104bd51":"print(\"Year 2015:\")\ndata1.info()\nprint(\"\\n Year 2016:\")\ndata2.info()\nprint(\"\\n Year 2017: \")\ndata3.info()\n# we learn about the contents of the data","6623dab2":"# Let's start processing 2017 data\ndata3.corr()","3d6be599":"# correlation map\nf,ax = plt.subplots(figsize = (21,21))\nsns.heatmap(data3.corr(), annot= True, linewidths= .5, fmt= '.1f', ax= ax)\nplt.show()\n","b6c6c61d":"data3.head(24)\n# Show 15 in our data from the beginning.","0c6528d3":"data3.columns\n# What are the features of 2017 data?","8b9978ee":"# Line plot\ndata3.Freedom.plot(kind= 'line', color= 'red', label= 'Freedom', linewidth= 1, alpha = 0.8, grid= True, linestyle= ':')\ndata3.Generosity.plot(kind= 'line', color= 'blue', label= 'Generosity', linewidth= 1, alpha = 0.8, grid= True, linestyle= '-.')\nplt.legend(loc='upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('Line Plot')\nplt.show()\n","a30e36ac":"# Scatter Plot\n# correlation between two variables\ndata3.plot(kind='scatter', x= 'Freedom', y= 'Generosity', alpha = 0.6, color= 'green')\nplt.xlabel('Freedom')\nplt.xlabel('Generosity')\nplt.title('Freedom-Generosity Scatter Plot')\n","92596861":"# Histogram\n# Let's learn about the frequency of feature\ndata3.Freedom.plot(kind= 'hist', bins= 65, figsize= (21,21))\nplt.show()\n# bins = number of bar in figure","60d43f9a":"# clf() = cleans it up again you can start a fresh\ndata3.Generosity.plot(kind= 'hist', bins =65)\nplt.clf()\n# we can't see plot due to clf()\n","b28f7fdb":"data3 = pd.read_csv('..\/input\/2017.csv')\nseries = data3['Freedom']\nprint(type(series))\ndata_frame = data3[['Freedom']]\nprint(type(data_frame))","0a93ad48":"# With Pandas, let's make a dataframe filtering example\nfilter1 = data3['Economy..GDP.per.Capita.'] > 1.5\ndata3[filter1]\n","3056fca8":"# we search for something more specific\ndata3[(data3['Happiness.Rank'] < 36) & (data3['Economy..GDP.per.Capita.'] > 1.6)]\n# Are these the most livable countries?","38369163":"# We will continue here.","1d973421":"*  **In this tutorial, I'm doing my first data science experiments.**\n*  ***You can follow step by step notebook.***\n*  That's all for now. It will develop further in the future.\n","2bde6050":"# My First Data Science Experience","c5ec7c2c":"# Are these the most livable countries?\n***Hmm... I don't know...***","7cc8a93e":"# ***Leave a small note here:***\n***I go, You go, We go, xdxd, DATAI Team Kaan Can xd***","eba48cab":"# Let's process this data graphically."}}