{"cell_type":{"17677e94":"code","7b4d5d22":"code","ae8fa29b":"code","12eccd87":"code","3199ec6d":"code","0795be3b":"code","50b33862":"code","83c384f0":"code","862cffac":"code","5d61b500":"code","8a66e63f":"code","df2382d2":"code","0cad0981":"code","1acd6e47":"code","d5387c02":"code","8730febd":"code","946b6583":"code","cb8eb281":"code","4376dbf1":"code","be04a49b":"code","3b0fb88c":"code","effa5eed":"markdown","f6069ebe":"markdown","6c726833":"markdown","a6133478":"markdown","ca2ca42e":"markdown","8558cae3":"markdown","578a1cb1":"markdown","ed108031":"markdown","4102f738":"markdown","ed2f8b4f":"markdown"},"source":{"17677e94":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7b4d5d22":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pprint import pprint as pp","ae8fa29b":"df = pd.read_csv('..\/input\/drug-classification\/drug200.csv',delimiter=',')\n","12eccd87":"df.sample(10)","3199ec6d":"print(df.isnull().sum())\n","0795be3b":"print(df.describe(include='all'))\n","50b33862":"print(df.shape)","83c384f0":"types_lookup = {}\ntypes_lookup['BP'] = list(df['BP'].unique())\ntypes_lookup['Cholesterol'] = list(df['Cholesterol'].unique())\ntypes_lookup['Drug'] = list(df['Drug'].unique())\ntypes_lookup['Sex'] = list(df['Sex'].unique()) \npp(types_lookup)","862cffac":"sns.countplot(x=df.Drug,data=df)","5d61b500":"df.groupby('Drug')['BP'].value_counts().unstack().plot.bar()\ndf.groupby('Drug')['Cholesterol'].value_counts().unstack().plot.bar()\ndf.groupby('Drug')['Sex'].value_counts().unstack().plot.bar()","8a66e63f":"df.boxplot(column=['Age'], by=['Drug'], figsize=(12, 8))\n","df2382d2":"# I just wanted to see threshold valus for drug-a and drug-b\ngb = df.groupby('Drug')\nprint(f\"For drug-B : {gb.get_group('drugB')['Age'].describe()}\")  # drug b segment has minimum age of 51. \nprint(f\"For drug-A : {gb.get_group('drugA')['Age'].describe()}\")  # drug a segment has max age of 50. ","0cad0981":"plt.figure(figsize=(12, 8))\nsns.swarmplot(x='Drug',\n              y='Na_to_K',\n              data=df)\n\nplt.title('Drug and Sodium\/Potassium Ratio')\n","1acd6e47":"df_before_preprocess = df.copy()","d5387c02":"from sklearn import preprocessing\nlabel_encoder = preprocessing.LabelEncoder()\ncols_ = ['Sex', 'BP', 'Cholesterol', 'Drug']\nfor col in cols_:\n    df[col] = label_encoder.fit_transform(df[col])","8730febd":"from sklearn.model_selection import train_test_split\nX = df.drop('Drug', axis=1)\ny = df['Drug']\nX_train,X_test,y_train,y_test = train_test_split(X,y, test_size = 0.2, stratify = y) ","946b6583":"from sklearn.tree import DecisionTreeClassifier\ndt = DecisionTreeClassifier()\n","cb8eb281":"dt.fit(X_train,y_train)","4376dbf1":"from sklearn.metrics import accuracy_score,confusion_matrix\npredictions = dt.predict(X_test)\nprint(accuracy_score(y_test,predictions))","be04a49b":"print(df_before_preprocess['Drug'])\nprint(df['Drug'])","3b0fb88c":"from sklearn import tree\nfeature_names = list(X_train.columns)\nclass_names = list(types_lookup['Drug'])\n\nfig, axes = plt.subplots(nrows = 1,ncols = 1,figsize = (4,4), dpi=300)\ntree.plot_tree(dt,\n               feature_names = feature_names, \n               class_names=class_names,\n               filled = True);\n","effa5eed":"Clearly DrugY has dependency with Sodium-potassium ratio.We can say that because; \nThere is nobody has ratio lower than around 15,\nand ratio for other patients using other drug types does not exceed around 15.\n\nThe higher the sodium-potassium ratio, the greater the chances of dying from cardiovascular disease, a heart attack, or for any reason at all (Archives of Internal Medicine, July 11, 2011).I just added this information because i believe that we have to search for the terms we are not familiar with.Maybe next time we can look for some correlation between the NA-K ratio with BP ;) ","f6069ebe":"We can see there is possible age threshold for using drug-B and drug-A. Other than that we can guess that there is no age limit for Drug-(Y,C,X).","6c726833":"# At first wanted to check if there is imbalance in target column because of the small dataset. No big difference btw these categories.\n> ","a6133478":"# Exploratory Research","ca2ca42e":"I think it is a good shot and we have gained new insight. We can easily see that there is nobody with normal or low cholesterol levels among patients with drug-a or drug-b.Also all of patients with drug-c have low bloodpressure and high cholesterol. And we have to remember the counts of observations in each drug category (ps: drug-c is least-frequency element.Maybe we can deep our exploration about drug-c using bivariate relationship analyze with other columns (Age,SodiumPotassium ratio). \nIt would be wrong if we didn't check if there is any gender-specific drugs or not (Gender-specific drugs are those exclusively indicated for either male or female patients).","8558cae3":"Train_test_split functions stratify argument in might be important for having a balanced number of examples for each class label. ","578a1cb1":"# Preprocess , Decision Tree Learning Model Creation,  Fitting and Results ","ed108031":"I would like to check frequency distribution of categorical variables conditioned by different target values since there are 5 drug categories and only 200 sample consisting of 5 columns.","4102f738":"Drug vs Sodium-Potassium Ratio Using Swarmplot","ed2f8b4f":"As we saw in Exploratory Research part, some filtering might be play important role for explaining underlying function of data."}}