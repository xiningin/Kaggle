{"cell_type":{"d4608795":"code","68ff8954":"code","16f33c25":"code","d6ce8266":"code","8012ac3b":"code","9139693d":"code","93b9f3ef":"code","85d5f92d":"code","96c234b2":"code","e33f3934":"code","279f9464":"code","6b4472ef":"code","e87b02f8":"code","3d4382de":"code","fbb5c963":"code","aec736b8":"code","6b275cd0":"code","9ccd970e":"code","b0527de8":"code","d54ab9ff":"markdown","75dfe5cf":"markdown","fd6d3427":"markdown","1a236d6e":"markdown","af0aea94":"markdown","7c408887":"markdown"},"source":{"d4608795":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nfrom warnings import filterwarnings\nfilterwarnings('ignore')","68ff8954":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import cross_val_predict\n\nfrom sklearn.linear_model import ElasticNet\n\n\nfrom sklearn.model_selection import GridSearchCV","16f33c25":"# Loading Datasets\n\ntrain  = pd.read_csv(\"..\/input\/house-price-prediction-cleaned-dataset\/Cleaned train.csv\")\ntest = pd.read_csv(\"..\/input\/house-price-prediction-cleaned-dataset\/Cleaned test.csv\")","d6ce8266":"train.head()","8012ac3b":"train.shape","9139693d":"test.head()","93b9f3ef":"test.shape","85d5f92d":"# transforming SalePrice with log\n\ntrain[\"Saleprice\"] = np.log(train[\"Saleprice\"])\nprice = train[\"Saleprice\"]\ntrain.drop(['Saleprice','Id'], axis=1, inplace=True)\ntest_id = test['Id']\ntest.drop('Id', axis=1, inplace=True)","96c234b2":"# Using 12 fold for cross validation\n\nkf = KFold(n_splits=12, shuffle=True, random_state=42)","e33f3934":"# Using Cross_validation_Score to get Root mean square error\n\ndef cv_rmse(model):\n    \n    return np.sqrt(-cross_val_score(model, train, price, scoring=\"neg_mean_squared_error\", cv=kf)).mean()\n    ","279f9464":"# Evaluating model with default parameters and check the rmse value\nelastic_net = ElasticNet()","6b4472ef":"print(\"RMSE with default parameters :\",cv_rmse(elastic_net))","e87b02f8":"# Lets tune Parameters\n\nalpha = [0.001,0.005,0.01,0.05,0.1,0.5,1,5,10,50,100]\nl1_ratio = [0.001,0.005,0.01,0.05,0.1,0.5,1,5,10,50,100]\n\nparams = {\"alpha\":alpha,\"l1_ratio\":l1_ratio}","3d4382de":"# Apply GridSearchCV to get optimal Parameters\n\ngrid_cv = GridSearchCV(estimator=elastic_net,\n                       param_grid=params,\n                       cv=kf,\n                       refit=True,\n                       verbose=1)\n                       ","fbb5c963":"# Fitting the gridsearchcv model and get the best parameters\n\ngrid_cv.fit(train,price)\n","aec736b8":"grid_cv.best_score_, grid_cv.best_params_","6b275cd0":"# Redefining model with above parameter values\n\nelastic_net = ElasticNet(alpha=0.001, l1_ratio=0.5).fit(train,price)\ncv_rmse(elastic_net)","9ccd970e":"# SalePrice is in log, we need to Convert it back to actual price by taking exponential using np.e\n\nsubmission = pd.DataFrame({\"Id\":test_id,\"SalePrice\":np.e**elastic_net.predict(test)})","b0527de8":"submission.to_csv(\"Submission.csv\", index=False)","d54ab9ff":"### This is a regression problem with many features, so will focus on only two concepts \n- How to fix overfitting.\n- Which model to choose (Lasso, Ridge, ElasticNet)","75dfe5cf":"#### Importing Packages","fd6d3427":"#### From above image we can see 3 situations \n- 1) Under fit (High Bias: Model fails to recognise pattern for given features) : This Happens when dataset contains very less features.\n- 2) Over fit (High Variance: Model does good with train set but bad with test set) : This Happens when dataset contains more features.\n- 3) Correct fit : Low Bias and Low Variance","1a236d6e":"![Model_Fitting.png](attachment:Model_Fitting.png)","af0aea94":"### This is how I got into top 2% in Kaggle House Price Prediction Competition just using the cleaned data and one simple model.\n\n- The model is built on top of cleaned dataset which you can get from this link : https:\/\/www.kaggle.com\/chandramoulinaidu\/house-price-prediction-cleaned-dataset\n- This dataset is accurately tailored for model fitting.\n- Description for this problem : https:\/\/www.kaggle.com\/c\/home-data-for-ml-course\n- Evaluation is based on RMSE","7c408887":"#### Since House price prediction problem contains more features, it will be definitely overfitting problem.\n#### Regularization : To fix overfitting\n- In regularization, what we do is normally we keep the same number of features, but reduce the magnitude of the coefficients by value alpha vlaue(regularization parameter , Lambda in above image).\n- This alpha will minimize the coefficients of the features and reduce the model complexity.\n- Since Normal Linear Regression does not have this alpha parameter we will be switching to other algorithm.\n\n#### Algorithms:\n- Lasso (L1) Uses L1 to minimize coefficient very near to 0 (almost negligible).\n- Ridge (L2) Uses L2 to minimize coefficient to some extent.\n- ElasticNet (Boht L1 and L2)\n\nWe will be using ElasticNet\n\n![elasticnet.png](attachment:elasticnet.png)\n\nHere $ \\lambda_1$ --> L1, $ \\lambda_2$ --> L2"}}