{"cell_type":{"6ba260d6":"code","28cf317f":"code","16c7785d":"code","e2aedf69":"code","d6ace784":"code","3a8505b6":"code","3e69771e":"code","ba432c7d":"code","7d4d66bf":"code","7c8466f8":"code","20e52903":"code","4090a74c":"code","f0283117":"code","216d0c1a":"code","dc6f3653":"code","6385c2de":"code","c968df87":"code","02999445":"code","481b0cb9":"code","d65f7348":"code","32ed7d74":"code","4b7d1919":"code","6e446e5b":"code","0a2d1f5a":"code","800925ba":"code","ec6ac722":"code","be540faa":"code","3191e980":"code","07e0e1ff":"code","e45a4cd8":"code","da200658":"code","69d31d83":"code","d1daadb6":"markdown","f74d0a4f":"markdown","f063a1cd":"markdown","f8b273a0":"markdown","d27a2ebf":"markdown","d839f148":"markdown","94cbc097":"markdown","ce0f83a5":"markdown","04c4e2bc":"markdown","fc10d324":"markdown","2049c9cd":"markdown","f47f7ce9":"markdown","e89e1c29":"markdown","e7d8b6c5":"markdown","5a3cea6c":"markdown","daff3859":"markdown","254f27d1":"markdown","6a6bbd3c":"markdown","f771554e":"markdown","24e7a23b":"markdown","61b1c41f":"markdown","a189c7dc":"markdown","121769e8":"markdown","b1505e1e":"markdown","a8368326":"markdown"},"source":{"6ba260d6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns # beautiful graphs\nimport matplotlib.pyplot as plt #math stuf\nimport datetime as dt #for date math\nimport re #regex\nimport json #json parser","28cf317f":"#Let's import the dataset\n#Export\ndf_export = pd.read_csv('..\/input\/brazil-exportimport-information\/EXP_COMPLETA.csv', sep=';')\ndf_export = df_export[(df_export['CO_NCM'] >= 71000000) & (df_export['CO_NCM'] < 72000000)]\ndf_export = df_export.reset_index(drop=True)\n\n#Import\ndf_import = pd.read_csv('..\/input\/brazil-exportimport-information\/IMP_COMPLETA.csv', sep=';')\ndf_import = df_import[(df_import['CO_NCM'] >= 71000000) & (df_import['CO_NCM'] < 72000000)]\ndf_import = df_import.reset_index(drop=True)","16c7785d":"df_country = pd.read_csv('..\/input\/brazil-exportimport-information\/PAIS.csv', sep=';', encoding='iso-8859-1')\n\ncountry_dict = {}\nfor i, row in df_country.iterrows():\n    country_dict[row['CO_PAIS']] = row['NO_PAIS_ING']\n\n#Export\ndf_export['COUNTRY'] = df_export['CO_PAIS'].map(country_dict)\n#Import\ndf_import['COUNTRY'] = df_import['CO_PAIS'].map(country_dict)","e2aedf69":"df_block = pd.read_csv('..\/input\/brazil-exportimport-information\/PAIS_BLOCO.csv', sep=';', encoding='iso-8859-1')\n\nblock_dict = {}\nfor i, row in df_block.iterrows():\n    block_dict[row['CO_PAIS']] = row['NO_BLOCO_ING']\n\n#Export\ndf_export['BLOCK'] = df_export['CO_PAIS']\ndf_export['BLOCK'] = df_export['BLOCK'].map(block_dict)\n\n#Import\ndf_import['BLOCK'] = df_import['CO_PAIS']\ndf_import['BLOCK'] = df_import['BLOCK'].map(block_dict)","d6ace784":"df_via = pd.read_csv('..\/input\/brazil-exportimport-information\/VIA.csv', sep=';', encoding='iso-8859-1')\n\nvia_dict = {}\nfor i, row in df_via.iterrows():\n    via_dict[row['CO_VIA']] = row['NO_VIA']\n\n#Export\ndf_export['VIA'] = df_export['CO_VIA']\ndf_export['VIA'] = df_export['VIA'].map(via_dict)\n#Import\ndf_import['VIA'] = df_import['CO_VIA']\ndf_import['VIA'] = df_import['VIA'].map(via_dict)","3a8505b6":"#Export\ndf_export = df_export.drop(['QT_ESTAT', 'CO_UNID', 'CO_URF', 'CO_VIA'], axis=1)\n#Import\ndf_import = df_import.drop(['QT_ESTAT', 'CO_UNID', 'CO_URF', 'CO_VIA'], axis=1)","3e69771e":"#Export\ndf_export = df_export.rename(columns = {'CO_ANO':'YEAR','CO_MES':'MONTH','CO_NCM':'NCM','SG_UF_NCM':'UF','KG_LIQUIDO':'KG'}, inplace = False)\n#Import\ndf_import = df_import.rename(columns = {'CO_ANO':'YEAR','CO_MES':'MONTH','CO_NCM':'NCM','SG_UF_NCM':'UF','KG_LIQUIDO':'KG'}, inplace = False)","ba432c7d":"via_ing_dict={\n'AEREA':'Air',\n'MARITIMA':'Sea',\n'MEIOS PROPRIOS':'Own Means',\n'RODOVIARIA':'Road',\n'POSTAL':'Postal',\n'VIA NAO DECLARADA':'Non Declared',\n'EM MAOS':'By Hand',\n'FERROVIARIA':'Rail',\n'VICINAL FRONTEIRICO':'Border',\n'FLUVIAL':'Fluvial',\n'ENTRADA\/SAIDA FICTA':'Ficta',\n'COURIER':'Courier'\n}\n\n#Export\ndf_export['VIA'] = df_export['VIA'].map(via_ing_dict)\n#Import\ndf_import['VIA'] = df_import['VIA'].map(via_ing_dict)","7d4d66bf":"#Export\ndf_export = df_export[df_export['YEAR'] < 2020]\n#Import\ndf_import = df_import[df_import['YEAR'] < 2020]","7c8466f8":"df_all = pd.concat([df_export.assign(TRADE='Export'), df_import.assign(TRADE='Import')])\ndf_all = df_all.reset_index(drop=True)\n\ndf_group = df_all.groupby(['YEAR','TRADE']).sum()\ndf_group = df_group.reset_index()\n\nsns.set(style='darkgrid')\nplt.figure(figsize=(10, 10))\nax = sns.lineplot(x='YEAR',y='VL_FOB',data=df_group,hue='TRADE')\nax.set(xlabel='Year', ylabel='US$ FOB')","20e52903":"#Group\nGEM_MIN = 71010000\nGEM_MAX = 71059999\nMETAL_MIN = 71060000\nMETAL_MAX = 71129999\nJEWELRY_MIN = 71130000\nJEWELRY_MAX = 71189999\n\n#Subgroup\nPRECIOUS_MIN_1 = 71131000\nPRECIOUS_MAX_1 = 71131999\nPRECIOUS_MIN_2 = 71141000\nPRECIOUS_MAX_2 = 71141999\nPLATED_MIN_1 = 71132000\nPLATED_MAX_1 = 71132999\nPLATED_MIN_2 = 71142000\nPLATED_MAX_2 = 71142999\nOTHERS_MIN = 71150000\nOTHERS_MAX = 71159999\nPEARLS_GEM_MIN = 71160000\nPEARLS_GEM_MAX = 71169999\nBIJOU_MIN = 71170000\nBIJOU_MAX = 71179999\nCOIN_MIN = 71180000\nCOIN_MAX = 71189999","4090a74c":"df_all.loc[(df_all['NCM']>=METAL_MIN) & (df_all['NCM']<=METAL_MAX),'GROUP'] = 'Metal'\ndf_all.loc[(df_all['NCM']>=GEM_MIN) & (df_all['NCM']<=GEM_MAX),'GROUP'] = 'Gem'\ndf_all.loc[(df_all['NCM']>=JEWELRY_MIN) & (df_all['NCM']<=JEWELRY_MAX),'GROUP'] = 'Jewelry'","f0283117":"df_all.loc[(df_all['NCM']>=PRECIOUS_MIN_1) & (df_all['NCM']<=PRECIOUS_MAX_1),'SUBGROUP'] = 'Precious'\ndf_all.loc[(df_all['NCM']>=PRECIOUS_MIN_2) & (df_all['NCM']<=PRECIOUS_MAX_2),'SUBGROUP'] = 'Precious'\ndf_all.loc[(df_all['NCM']>=PLATED_MIN_1) & (df_all['NCM']<=PLATED_MAX_1),'SUBGROUP'] = 'Plated'\ndf_all.loc[(df_all['NCM']>=PLATED_MIN_2) & (df_all['NCM']<=PLATED_MAX_2),'SUBGROUP'] = 'Plated'\ndf_all.loc[(df_all['NCM']>=OTHERS_MIN) & (df_all['NCM']<=OTHERS_MAX),'SUBGROUP'] = 'Others'\ndf_all.loc[(df_all['NCM']>=PEARLS_GEM_MIN) & (df_all['NCM']<=PEARLS_GEM_MAX),'SUBGROUP'] = 'Pearls & Gems'\ndf_all.loc[(df_all['NCM']>=BIJOU_MIN) & (df_all['NCM']<=BIJOU_MAX),'SUBGROUP'] = 'Bijou'\ndf_all.loc[(df_all['NCM']>=COIN_MIN) & (df_all['NCM']<=COIN_MAX),'SUBGROUP'] = 'Coin'","216d0c1a":"df_group = df_all.groupby(['YEAR','TRADE','GROUP']).sum()\ndf_group = df_group.reset_index()\ndf_group = df_group[df_group['TRADE']=='Export']\ndf_group = df_group.drop(columns=['MONTH','NCM','KG','TRADE'])\n\ndf_plot = df_group.pivot(columns='GROUP', index='YEAR', values='VL_FOB')\n\nplt.figure(figsize=(10, 10))\nax.set(xlabel='Year', ylabel='US$ FOB')\ndf_plot.plot(kind='bar', stacked=True)","dc6f3653":"df_exchange = pd.read_csv('..\/input\/currency-exchange-rate-usdbrl-19932019\/Month.csv',dayfirst=True,parse_dates=[0])\ndf_exchange['Mean'] = (df_exchange['Max'] + df_exchange['Min'])\/2\n\ndf_exchange = df_exchange.groupby(df_exchange['Date'].map(lambda x: x.year)).mean()\ndf_exchange = df_exchange.reset_index()\n\ndf_group = df_all.groupby(['YEAR','TRADE']).sum()\ndf_group = df_group.reset_index()\n\ndf_exp_exchange = df_group[df_group['TRADE']=='Export']\ndf_exp_exchange = df_exp_exchange.merge(df_exchange,left_on='YEAR',right_on='Date')\ndf_exp_exchange = df_exp_exchange[['VL_FOB','Mean']]\ndf_exp_exchange = (df_exp_exchange-df_exp_exchange.min())\/(df_exp_exchange.max()-df_exp_exchange.min())\n\nprint(df_exp_exchange.corr(method='pearson'))\n\nsns.set(style='darkgrid')\nplt.figure(figsize=(10, 10))\nax.set(ylabel='EXP Value', xlabel='BRL\/USD Exchange')\nax = sns.scatterplot(y='VL_FOB', x='Mean', data=df_exp_exchange)","6385c2de":"df_group = df_all.groupby(['YEAR','TRADE','GROUP']).sum()\ndf_group = df_group.reset_index()\ndf_group = df_group[df_group['GROUP']=='Jewelry']\n\nsns.set(style='darkgrid')\nplt.figure(figsize=(10, 10))\nax.set(xlabel='Year', ylabel='US$ FOB')\nax = sns.lineplot(x='YEAR',y='VL_FOB',data=df_group,hue='TRADE')","c968df87":"df_group = df_all.groupby(['YEAR','TRADE','GROUP']).sum()\ndf_group = df_group.reset_index()\ndf_group = df_group[df_group['GROUP']=='Jewelry']\ndf_exp_exchange = df_group[df_group['TRADE']=='Export']\ndf_exp_exchange = df_exp_exchange[df_exp_exchange['GROUP']=='Jewelry']\n\ndf_exp_exchange = df_exp_exchange.merge(df_exchange,left_on='YEAR',right_on='Date')\ndf_exp_exchange = df_exp_exchange[['VL_FOB','Mean']]\ndf_exp_exchange = (df_exp_exchange-df_exp_exchange.min())\/(df_exp_exchange.max()-df_exp_exchange.min())\n\nprint(df_exp_exchange.corr(method='pearson'))\n\nsns.set(style='darkgrid')\nplt.figure(figsize=(10, 10))\nax.set(ylabel='EXP Value', xlabel='BRL\/USD Exchange')\nax = sns.scatterplot(y='VL_FOB', x='Mean', data=df_exp_exchange)","02999445":"df_plot = df_all.groupby(['YEAR','TRADE','SUBGROUP']).sum()\ndf_plot = df_plot.reset_index()\ndf_plot = df_plot[df_plot['TRADE']=='Export']\ndf_plot = df_plot[df_plot['SUBGROUP']!='Coin']\ndf_plot = df_plot[df_plot['SUBGROUP']!='Others']\ndf_plot = df_plot.pivot(columns='SUBGROUP', index='YEAR', values='VL_FOB')\nplt.figure(figsize=(10, 10))\ndf_plot.plot(kind='bar', stacked=True)","481b0cb9":"df_plot = df_all.groupby(['YEAR','TRADE','SUBGROUP']).sum()\ndf_plot = df_plot.reset_index()\ndf_plot = df_plot[df_plot['TRADE']=='Import']\ndf_plot = df_plot[df_plot['SUBGROUP']!='Coin']\ndf_plot = df_plot[df_plot['SUBGROUP']!='Others']\ndf_plot = df_plot.pivot(columns='SUBGROUP', index='YEAR', values='VL_FOB')\nplt.figure(figsize=(10, 10))\ndf_plot.plot(kind='bar', stacked=True)","d65f7348":"df_plot = df_all.groupby(['YEAR','TRADE','SUBGROUP']).sum()\ndf_plot = df_plot.reset_index()\ndf_plot = df_plot[df_plot['SUBGROUP']=='Precious']\n#df_plot['VL_FOB'] = np.where(df_plot.TRADE=='Import',-df_plot.VL_FOB,df_plot.VL_FOB)\n\nsns.set(style='darkgrid')\nplt.figure(figsize=(10, 10))\nax.set(xlabel='Year', ylabel='US$ FOB')\nax = sns.lineplot(x='YEAR',y='VL_FOB',data=df_plot,hue='TRADE')","32ed7d74":"df_plot = df_all.groupby(['YEAR','TRADE','SUBGROUP']).sum()\ndf_plot = df_plot.reset_index()\ndf_plot = df_plot[df_plot['SUBGROUP']=='Bijou']\n#df_plot['VL_FOB'] = np.where(df_plot.TRADE=='Import',-df_plot.VL_FOB,df_plot.VL_FOB)\n\nsns.set(style='darkgrid')\nplt.figure(figsize=(10, 10))\nax.set(xlabel='Year', ylabel='US$ FOB')\nax = sns.lineplot(x='YEAR',y='VL_FOB',data=df_plot,hue='TRADE')","4b7d1919":"!pip install ipywidgets\n!pip install keplergl\n!jupyter nbextension install --py --sys-prefix keplergl\n!jupyter nbextension enable keplergl --py --sys-prefix","6e446e5b":"df_map = df_all.groupby(['UF','TRADE','SUBGROUP']).sum()\ndf_map = df_map.reset_index()\ndf_map = df_map[df_map['SUBGROUP']=='Precious']\ndf_map = df_map[df_map['TRADE']=='Export']\ndf_map = df_map.drop(columns=['NCM','KG','TRADE','SUBGROUP','YEAR','MONTH','CO_PAIS'])\ndf_map = df_map.reset_index(drop=True)\n\n#We removed some UFs when we selected only rows with the subgroup 'Precious'\n#For the map we need to put then back\ndf_uf = pd.read_csv('..\/input\/brazil-exportimport-information\/UF.csv', sep=';', encoding='iso-8859-1')\nfor i, row in df_uf.iterrows():\n    if (df_map['UF'].str.contains(row['SG_UF']).any()):\n        df_map.loc[(df_map['UF']==row['SG_UF']),'UF_NAME'] = row['NO_UF']\n    else:\n        new_row = {'UF':row['SG_UF'], 'VL_FOB':0, 'UF_NAME':row['NO_UF']}\n        df_map = df_map.append(new_row, ignore_index=True)\n#Drop UF's code that don't correlate to a State\ndf_map = df_map[~df_map['UF'].str.contains('EX|CB|MN|ND|RE|ZN|ED')]","0a2d1f5a":"brazil_geo = json.load(open('..\/input\/brazil-geojson\/brazil_geo.json'))\nbrazil_geo = brazil_geo['features']\n\nuf_geo = {}\n\nfor uf in brazil_geo:\n    uf_geo[uf['id']] = uf['geometry']\n    \ndf_map['GEOMETRY'] = df_map['UF'].map(uf_geo)","800925ba":"config = {\n  \"version\": \"v1\",\n  \"config\": {\n    \"visState\": {\n      \"filters\": [],\n      \"layers\": [\n        {\n          \"id\": \"elzzyyt\",\n          \"type\": \"geojson\",\n          \"config\": {\n            \"dataId\": \"dj3gzji39\",\n            \"label\": \"Export Total (1997 to 2019)\",\n            \"color\": [\n              255,\n              203,\n              153\n            ],\n            \"columns\": {\n              \"geojson\": \"GEOMETRY\"\n            },\n            \"isVisible\": True,\n            \"visConfig\": {\n              \"opacity\": 1,\n              \"strokeOpacity\": 0.8,\n              \"thickness\": 1,\n              \"strokeColor\": [\n                38,\n                26,\n                16\n              ],\n              \"colorRange\": {\n                \"name\": \"ColorBrewer YlGn-8\",\n                \"type\": \"sequential\",\n                \"category\": \"ColorBrewer\",\n                \"colors\": [\n                  \"#ffffe5\",\n                  \"#f7fcb9\",\n                  \"#d9f0a3\",\n                  \"#addd8e\",\n                  \"#78c679\",\n                  \"#41ab5d\",\n                  \"#238443\",\n                  \"#005a32\"\n                ]\n              },\n              \"strokeColorRange\": {\n                \"name\": \"Global Warming\",\n                \"type\": \"sequential\",\n                \"category\": \"Uber\",\n                \"colors\": [\n                  \"#5A1846\",\n                  \"#900C3F\",\n                  \"#C70039\",\n                  \"#E3611C\",\n                  \"#F1920E\",\n                  \"#FFC300\"\n                ]\n              },\n              \"radius\": 10,\n              \"sizeRange\": [\n                0,\n                10\n              ],\n              \"radiusRange\": [\n                0,\n                50\n              ],\n              \"heightRange\": [\n                0,\n                500\n              ],\n              \"elevationScale\": 5,\n              \"stroked\": True,\n              \"filled\": True,\n              \"enable3d\": False,\n              \"wireframe\": False\n            },\n            \"hidden\": False,\n            \"textLabel\": [\n              {\n                \"field\": None,\n                \"color\": [\n                  255,\n                  255,\n                  255\n                ],\n                \"size\": 18,\n                \"offset\": [\n                  0,\n                  0\n                ],\n                \"anchor\": \"start\",\n                \"alignment\": \"center\"\n              }\n            ]\n          },\n          \"visualChannels\": {\n            \"colorField\": {\n              \"name\": \"VL_FOB\",\n              \"type\": \"integer\"\n            },\n            \"colorScale\": \"quantile\",\n            \"sizeField\": None,\n            \"sizeScale\": \"linear\",\n            \"strokeColorField\": None,\n            \"strokeColorScale\": \"quantile\",\n            \"heightField\": None,\n            \"heightScale\": \"linear\",\n            \"radiusField\": None,\n            \"radiusScale\": \"linear\"\n          }\n        }\n      ],\n      \"interactionConfig\": {\n        \"tooltip\": {\n          \"fieldsToShow\": {\n            \"dj3gzji39\": [\n              {\n                \"name\": \"VL_FOB\",\n                \"format\": None\n              },\n              {\n                \"name\": \"UF\",\n                \"format\": None\n              },\n              {\n                \"name\": \"UF_NAME\",\n                \"format\": None\n              }\n            ]\n          },\n          \"compareMode\": False,\n          \"compareType\": \"absolute\",\n          \"enabled\": True\n        },\n        \"brush\": {\n          \"size\": 0.5,\n          \"enabled\": False\n        },\n        \"geocoder\": {\n          \"enabled\": False\n        },\n        \"coordinate\": {\n          \"enabled\": False\n        }\n      },\n      \"layerBlending\": \"normal\",\n      \"splitMaps\": [],\n      \"animationConfig\": {\n        \"currentTime\": None,\n        \"speed\": 1\n      }\n    },\n    \"mapState\": {\n      \"bearing\": 0,\n      \"dragRotate\": False,\n      \"latitude\": -14.927493161931578,\n      \"longitude\": -56.124965564305676,\n      \"pitch\": 0,\n      \"zoom\": 2.7402945845847593,\n      \"isSplit\": False\n    },\n    \"mapStyle\": {\n      \"styleType\": \"dark\",\n      \"topLayerGroups\": {},\n      \"visibleLayerGroups\": {\n        \"label\": False,\n        \"road\": False,\n        \"border\": True,\n        \"building\": False,\n        \"water\": True,\n        \"land\": True,\n        \"3d building\": False\n      },\n      \"threeDBuildingColor\": [\n        9.665468314072013,\n        17.18305478057247,\n        31.1442867897876\n      ],\n      \"mapStyles\": {}\n    }\n  }\n}","ec6ac722":"from keplergl import KeplerGl\n\nmap_export_total = KeplerGl()\nmap_export_total.add_data(data=df_map, name='dj3gzji39')\nmap_export_total.config = config\n\nmap_export_total","be540faa":"df_map = df_all.groupby(['COUNTRY','TRADE','SUBGROUP']).sum()\ndf_map = df_map.reset_index()\ndf_map = df_map[df_map['SUBGROUP']=='Precious']\ndf_map = df_map[df_map['TRADE']=='Export']\ndf_map = df_map.drop(columns=['TRADE','SUBGROUP','YEAR','MONTH','NCM','CO_PAIS','KG'])\ndf_map = df_map.sort_values(by=['VL_FOB'],ascending=False)\ndf_map = df_map.reset_index(drop=True)","3191e980":"df_country = pd.read_csv('..\/input\/world-capitals-gps\/concap.csv', sep=',', encoding='iso-8859-1')\ndf_country\n\ndf_map = df_map.merge(df_country,left_on='COUNTRY',how='left',right_on='CountryName',suffixes=('_map', '_country'))","07e0e1ff":"df_map = df_map.drop(columns=['CountryName','CapitalName','CountryCode','ContinentName'])\ndf_map[df_map['CapitalLatitude'].isna()]\n\ndf_map_missing = pd.DataFrame([\n    ['Bahrein', 18314598, 26.216667, 50.583333],\n    ['French Guyana', 264708, 18.35, -64.933333],\n    ['Virgin Islands (USA)', 229499, 18.333333, -64.833333],\n    ['Netherlands Antilles', 131703, 12.226079 -69.060087],\n    [\"Cote D'Ivore\", 53217, 6.85, -5.3],\n    ['Lebuan', 30034, 5.315894, 115.219033],\n    ['Guadeloupe', 21850, 16.270000, -61.580002],\n    ['Reunion', 19821, -21.114444, 55.5325],\n    ['Martinique', 8856, 14.666667, -61],\n    ['Brunei', 230, 4.890283, 114.942217],\n    ['Hong Kong', 4441562, 22.3, 114.2],\n], columns=['COUNTRY','VL_FOB','CapitalLatitude','CapitalLongitude'])\n\ndf_map = df_map[df_map['CapitalLatitude']!=0]\ndf_map = df_map.append(df_map_missing)\ndf_map = df_map.dropna(axis='rows')\ndf_map = df_map.sort_values(by=['VL_FOB'],ascending=False)\ndf_map = df_map.reset_index(drop=True)","e45a4cd8":"df_map.head(20)","da200658":"config = {\n  \"version\": \"v1\",\n  \"config\": {\n    \"visState\": {\n      \"filters\": [],\n      \"layers\": [\n        {\n          \"id\": \"a8vgbvm\",\n          \"type\": \"point\",\n          \"config\": {\n            \"dataId\": \"cmt54a6kj\",\n            \"label\": \"Export Total (1997 to 2019)\",\n            \"color\": [\n              118,\n              183,\n              61\n            ],\n            \"columns\": {\n              \"lat\": \"CapitalLatitude\",\n              \"lng\": \"CapitalLongitude\",\n              \"altitude\": None\n            },\n            \"isVisible\": True,\n            \"visConfig\": {\n              \"radius\": 10,\n              \"fixedRadius\": False,\n              \"opacity\": 0.8,\n              \"outline\": False,\n              \"thickness\": 2,\n              \"strokeColor\": None,\n              \"colorRange\": {\n                \"name\": \"Global Warming\",\n                \"type\": \"sequential\",\n                \"category\": \"Uber\",\n                \"colors\": [\n                  \"#5A1846\",\n                  \"#900C3F\",\n                  \"#C70039\",\n                  \"#E3611C\",\n                  \"#F1920E\",\n                  \"#FFC300\"\n                ]\n              },\n              \"strokeColorRange\": {\n                \"name\": \"Global Warming\",\n                \"type\": \"sequential\",\n                \"category\": \"Uber\",\n                \"colors\": [\n                  \"#5A1846\",\n                  \"#900C3F\",\n                  \"#C70039\",\n                  \"#E3611C\",\n                  \"#F1920E\",\n                  \"#FFC300\"\n                ]\n              },\n              \"radiusRange\": [\n                0,\n                150\n              ],\n              \"filled\": True\n            },\n            \"hidden\": False,\n            \"textLabel\": []\n          },\n          \"visualChannels\": {\n            \"colorField\": None,\n            \"colorScale\": \"quantile\",\n            \"strokeColorField\": None,\n            \"strokeColorScale\": \"quantile\",\n            \"sizeField\": {\n              \"name\": \"VL_FOB\",\n              \"type\": \"integer\"\n            },\n            \"sizeScale\": \"sqrt\"\n          }\n        }\n      ],\n      \"interactionConfig\": {\n        \"tooltip\": {\n          \"fieldsToShow\": {\n            \"cmt54a6kj\": [\n              {\n                \"name\": \"COUNTRY\",\n                \"format\": None\n              },\n              {\n                \"name\": \"VL_FOB\",\n                \"format\": None\n              }\n            ]\n          },\n          \"compareMode\": False,\n          \"compareType\": \"absolute\",\n          \"enabled\": True\n        },\n        \"brush\": {\n          \"size\": 0.5,\n          \"enabled\": False\n        },\n        \"geocoder\": {\n          \"enabled\": False\n        },\n        \"coordinate\": {\n          \"enabled\": False\n        }\n      },\n      \"layerBlending\": \"normal\",\n      \"splitMaps\": [],\n      \"animationConfig\": {\n        \"currentTime\": None,\n        \"speed\": 1\n      }\n    },\n    \"mapState\": {\n      \"bearing\": 0,\n      \"dragRotate\": False,\n      \"latitude\": 8.884265547401553,\n      \"longitude\": -19.06778798832715,\n      \"pitch\": 0,\n      \"zoom\": 0.8934685912520477,\n      \"isSplit\": False\n    },\n    \"mapStyle\": {\n      \"styleType\": \"dark\",\n      \"topLayerGroups\": {},\n      \"visibleLayerGroups\": {\n        \"label\": False,\n        \"road\": False,\n        \"border\": True,\n        \"building\": False,\n        \"water\": True,\n        \"land\": False,\n        \"3d building\": False\n      },\n      \"threeDBuildingColor\": [\n        9.665468314072013,\n        17.18305478057247,\n        31.1442867897876\n      ],\n      \"mapStyles\": {}\n    }\n  }\n}","69d31d83":"map_export_world = KeplerGl()\nmap_export_world.add_data(data=df_map, name='cmt54a6kj')\nmap_export_world.config = config\n\nmap_export_world","d1daadb6":"### 1.3. Drop unused columns\n\nThe URF Code is from what port\/aeroport the product as shipped\/recived. We don't care much about this info, so let's drop this column.\n\n**QT_ESTAT** and **CO_UNID** are what type of unity is used (Box, pallet, etc) and how much of that unit was shipped. Also not a relevant info, so let's drop it.\n\nSince we are were, let's also drop the via and country code column.","f74d0a4f":"## 2. Analysis\n\n### 2.1. Trade Balance","f063a1cd":"## 3. Conclusion\n\n### 3.1. TL;DR\n\n- We did some cools maps with Kepler.gl\n- Brazil export a lot of commodities related to jewelry (Gold, silver, gems)\n- Brazil import more costume jewelry (bijou) than export\n- Brazil export jewelry principally to EUA, Switzerland, Israel, Peru and Argentina\n- Brazil seens to export more then import jewelry, but that changed recently\n\n### 3.2. Objective & Final Considerations\n\nWe used kepler.gl to make some maps, and got some inshigths on Brazilian commerce of jewelry.","f8b273a0":"#### 1.2.3. Transport Via Code","d27a2ebf":"As we can see, the states that export more are the expected ones. Brazil has more industry and a bigger economy on the south and southeast states.\n\nAnd we have a kind of duty free zone on Manaus (Amazonia State), wich also seen's to export a lot of jewelry.\n\n#### 2.2.2. Jewelry Export to what Countrys?\n\nLet's see what country imported the most jewelry from Brazil.","d839f148":"As expected, we import a lot of Bijou. We also import a lot of Precious Jewelry.\n\n#### 2.1.7. Precious Jewelry Trade Balance\n\nLet's see how the trade balance for the subgroup of Precious Jewelry behaves.","94cbc097":"As we can see, there seens to be some correlation beteween the high value of dolar when compared to real, but only p=0.480602 wich is not a strong correlation.\n\n#### 2.1.3. Jewelry and Similar Trade Balance\n\nLet's see the trade balance for only the group of manufactured goods\n\n**71.13 to 71.18** - Jewelry, bijou, coins, etc","ce0f83a5":"Nice, this already give us a important info, Brazil export wayyyy more precius metal, gems and jewelry then import.\n\nLet's see if this is mostly precious metals, gems or jewelry.\n\n#### 2.1.1. Exports Group\n\nThe 71.XX.XX.XX NCM can be divided on three big groups.\n\n* **71.01 to 71.05 - Gems, pearls, sintetic gems, etc**\n* **71.06 to 71.12 - Silver, gold, platinum, etc**\n* **71.13 to 71.18 - Precious jewelry, costume jewelry, coins, etc**\n\nFrom those three, we also want to subdive the Jewelry and costume jewelry group.\n\n* **71.13.1 and 71.14.1 precious metals**\n* **71.13.2 and 71.14.2 metals plated with precious metal**\n* **71.15 other things made with precious metal (platinum catalyst,etc)**\n* **71.16 pearls and gem jewelry**\n* **71.17 costume jewlery (bijou)**\n* **71.18 coins**","04c4e2bc":"### 1.6. Drop 2020\n\nSince we don't have the full 2020 year, it will be simpler to just drop the entire year and just do analysis with the full years that we have.","fc10d324":"#### 1.2.2. Block Code","2049c9cd":"^ There is a bunch of code here to config how kepler shows the map, if you want to use kepler, i recomend you get the .csv of your dataframe, upload to the site, do the changes to the map there and then copy this part from the site.","f47f7ce9":"### 1.4. Rename columns","e89e1c29":"So, the top 20 importers of Brazilian Jewlery are as follows:","e7d8b6c5":"# Table of Contents\n\n- 1. Dataset and ETL\n    - 1.1. Import Dataset\n    - 1.2. Change to text\n        - 1.2.1. Country Code\n        - 1.2.2. Block Code\n        - 1.2.3. Transport Via Code\n    - 1.3. Drop unused columns\n    - 1.4. Rename columns\n    - 1.5. Rename VIA\n    - 1.6. Drop 2020\n- 2. Analysis\n    - 2.1. Trade Balance\n        - 2.1.1. Exports by Group\n\t\t- 2.1.2. Exchange Rate Correlation\n\t\t- 2.1.3. Jewelry and Similar Trade Balance\n\t\t- 2.1.4. Jewelry and Similar Exchange Rate Correlation\n\t\t- 2.1.5. Precious Jewelry VS Costume Jewelry Export\n\t\t- 2.1.6. Precious Jewelry VS Costume Jewelry Import\n\t\t- 2.1.7. Precious Jewelry Trade Balance\n        - 2.1.8. Costume Jewelry Trade Balance\n    - 2.2. Precious Jewelry Export Map\n        - 2.2.1. Precious Jewelry Export Region\n        - 2.2.2. Precious Jewelry Export to what Countrys?\n- 3. Conclusion\n    - 3.1. TL;DR\n    - 3.2. Objective & Final Considerations","5a3cea6c":"Ok, so until 2013 we had exported more precious jewelry then imported, but it seens that trend is passing in 2019.\n\n#### 2.1.8. Costume Jewelry Trade Balance\n\nWhat about bijou?","daff3859":"What country is [Bahrein](https:\/\/en.wikipedia.org\/wiki\/Bahrain)???\n\nAparently is a realy small country on the Persian Gulf.\nTo give you a picture of how small is the country, they have a total area of 780km\u00b2 (S\u00e3o Paulo, the biggest city in Brazil is 1.521km\u00b2) and has a population of 1.569.446 (S\u00e3o Paulo has 12.252.023).\n\nAnd a small country like that is the 7\u00ba importer of Brazilian Jewelry.","254f27d1":"Uhhhg...As is standard in my country, we export comodities, not finished products.\n\nWhile we export 2-4 billion dolars in precious metal every year since 2010, we export only 100-200 million of finished products.\n\n#### 2.1.2. Exchange Rate Correlation\n\nDoes this grownth in export correlate to the growth of the exchange rate of USD\/BRL coin?","6a6bbd3c":"Well, considering only manufactured goods, we have a a more equal trade balance.\nWe export more than import, but not order of magnitudes more.\n\n#### 2.1.4. Jewelry and Similar Exchange Rate Correlation","f771554e":"### 1.5. Rename VIA\n\nUnfortunaly for me, the VIA.csv file doesn't come with a english translation. So i will translate by hand.\n\nVIA is the info on what kind of method of transportation was used.","24e7a23b":"# Brazil Export\/Import of Jewelry - Analysis\n\nOn my spare time I am a silversmith. Since I plan on eventualy selling some pieces, any info on how the Brazilian jewelry market work is appreciated.\n\nBrazil releases info from what was imported\/exported on the country\nThe Brazil Ministry of Industry, external commerce and service releases info from what was imported\/exported on the country on this site: http:\/\/comexstat.mdic.gov.br\/\n\nThe data is from 1997 to 2020, and a simple analysis if Brazil import or export more jewelry can tell us if Brazil was competitive prices on the exterior. It can also tell us if jewelry, semi-jewelry or bijou has a bigger market, what country import more jewelery from Brazil, etc","61b1c41f":"So, probably no correlation between the BRL\/USD exchange and export value.\nWhich means that the export of jewelry is probably stable and non dependent on the dolar value.\n\n#### 2.1.5. Precious Jewelry VS Costume Jewelry Export\n\nOk, now let's how the export of the subgroup of jewelry is distribuited.\nWe have Costume Jewelry (Bijou), Pearls & Gems Jewelry, Plated Jewelry, Precious Jewelry,Coins and Others.\n\nWe don't care about Coin and Others, so let's drop that.","a189c7dc":"As expected, we import more costume jewelry than export.\n\n\n### 2.2. Precious Jewelry Export Map\n\nWhat state from Brazil export more Jewelry? And to what countries?\n\nWe can use [Kepler.gl](https:\/\/kepler.gl\/), a open souce geospatial analysis tool made by uber and generate some cools maps and check that.\n\n#### 2.2.1. Jewelry Export Region\n\nLet's see what states from Brazil export more Jewelry.","121769e8":"## 1. Dataset and ETL\n### 1.1. Import Dataset\n\nOk, so Brazil updates each month the export\/import info posted on SIXCOMEX, the software that Brazilian companies use to declare their import\/export.\n\nThey don't release all the info for each transaction, but they do release the NCM (Code description of the product - Mercosul Common Nomeclature) of the transaction.\n\nThis number describe the product been traded. Luckyly for us, jewelry and similar products all fall on the 71.XX.XX.XX code.\n\nSo let's import the exp. and imp. info and drop everything not on the 71.XX.XX.XX NCM.","b1505e1e":"### 1.2. Change to text\n\nFrom this dataset, i think we will probably not use the QT_ESTAT (From what i understand, is how much of the product was exported\/imported).\nBut we will probably use all the other info.\n\nSince a lot of that info is qualitative, let's change from number to some descritive text.\n\n#### 1.2.1. Country Code","a8368326":"Nice, we have a steady export of Precious Jewelry, and some export of Costume Jewelry (Bijou).\n\n#### 2.1.6. Precious Jewelry VS Costume Jewelry Import\n\nWhat about the import?"}}