{"cell_type":{"3e48504c":"code","5babd722":"code","2f6b73b4":"code","ae90b50f":"code","0be69e2a":"code","ee324c9e":"code","491209ff":"code","9f8ed922":"code","750a62e6":"code","350b5431":"code","3807de04":"code","7c92e0f5":"code","9e841517":"code","52e8aa6b":"code","12c521a5":"code","4d51a289":"code","c7f85aad":"code","14c3829a":"code","8af682bf":"code","395f0fd3":"code","960ee8a9":"code","3e58cf51":"code","764d699f":"code","84706c60":"code","c46459a5":"code","452e6c53":"code","948ed4da":"code","c186b6a6":"code","fefdd6f4":"code","a223fdaa":"code","888d18a2":"code","8e613983":"code","eaaddf81":"code","67eed18b":"code","f6c5adce":"code","7c7c340d":"code","89ce1dfb":"code","d38889a0":"markdown","5846a1dc":"markdown","1fc24e39":"markdown","3527b35f":"markdown","8e6a90f8":"markdown"},"source":{"3e48504c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        os.path.join(dirname, filename)","5babd722":"import warnings;\nwarnings.filterwarnings('ignore');\n\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn.datasets import load_iris\nimport xgboost as xgb\nfrom sklearn.metrics import accuracy_score","2f6b73b4":"train= pd.read_csv('..\/input\/siim-isic-melanoma-classification\/train.csv')\ntest= pd.read_csv('..\/input\/siim-isic-melanoma-classification\/test.csv')\nsub   = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/sample_submission.csv')\ntrain.head()","ae90b50f":"train.target.value_counts()","0be69e2a":"train['sex'] = train['sex'].fillna('na')\ntrain['age_approx'] = train['age_approx'].fillna(0)\ntrain['anatom_site_general_challenge'] = train['anatom_site_general_challenge'].fillna('na')\n\ntest['sex'] = test['sex'].fillna('na')\ntest['age_approx'] = test['age_approx'].fillna(0)\ntest['anatom_site_general_challenge'] = test['anatom_site_general_challenge'].fillna('na')","ee324c9e":"train['sex'] = train['sex'].astype(\"category\").cat.codes +1\ntrain['anatom_site_general_challenge'] = train['anatom_site_general_challenge'].astype(\"category\").cat.codes +1\ntrain.head()","491209ff":"test['sex'] = test['sex'].astype(\"category\").cat.codes +1\ntest['anatom_site_general_challenge'] = test['anatom_site_general_challenge'].astype(\"category\").cat.codes +1\ntest.head()","9f8ed922":"x_train = train[['sex', 'age_approx','anatom_site_general_challenge']]\ny_train = train['target']\n\nx_test = test[['sex', 'age_approx','anatom_site_general_challenge']]\n\ntrain_DMatrix = xgb.DMatrix(x_train, label= y_train)\ntest_DMatrix = xgb.DMatrix(x_test)\n","750a62e6":"param = {\n    'booster':'gbtree', \n    'eta': 0.3,\n    'num_class': 2,\n    'max_depth': 5\n}\nepochs = 100","350b5431":"clf = xgb.XGBClassifier(n_estimators=1000, \n                        max_depth=8, \n                        objective='multi:softprob',\n                        seed=0,  \n                        nthread=-1, \n                        learning_rate=0.15, \n                        num_class = 2, \n                        scale_pos_weight = (32542\/584))","3807de04":"clf.fit(x_train, y_train)","7c92e0f5":"sub.head()","9e841517":"sub[\"meta_target\"] = clf.predict_proba(x_test)[:,1]","52e8aa6b":"#sub.to_csv('submission.csv', index = False)","12c521a5":"from fastai.imports import *\nfrom fastai import *\nfrom fastai.vision import *\nfrom torchvision.models import *","4d51a289":"train.head()","c7f85aad":"train.shape","14c3829a":"label1 = train[train['target']==1]","8af682bf":"label1.shape","395f0fd3":"label2 = train[train['target']==0].iloc[:584]","960ee8a9":"label2.head()","3e58cf51":"train_small = pd.concat([label1,label2])","764d699f":"train_small.head()","84706c60":"train_small.shape","c46459a5":"train_small['image_name'] = train_small['image_name']+'.jpg'","452e6c53":"test['image_name'] = test['image_name']+'.jpg'","948ed4da":"train_small.head()","c186b6a6":"train_small.to_csv('train_jpg.csv', index = False)","fefdd6f4":"test.to_csv('test_jpg.csv', index = False)","a223fdaa":"tfms = get_transforms(flip_vert=True)","888d18a2":"path = \"\/kaggle\/\"\ndata = ImageDataBunch.from_csv(path, folder= 'input\/siim-isic-melanoma-classification\/jpeg\/train', \n                              valid_pct = 0.2,\n                              csv_labels = 'working\/train_jpg.csv',\n                              ds_tfms = tfms, \n                              fn_col = 'image_name',\n                              label_col = 'target',\n                              bs = 32,\n                              size=256).normalize(imagenet_stats);\ntest_data = ImageDataBunch.from_csv(path, folder= 'input\/siim-isic-melanoma-classification\/jpeg\/test', \n                              valid_pct = 0.2,\n                              csv_labels = 'working\/test_jpg.csv',\n                              ds_tfms = tfms, \n                              fn_col = 'image_name',\n                              bs = 32,\n                              size=256).normalize(imagenet_stats);\n","8e613983":"data.show_batch(rows=3,figsize=(8,8));","eaaddf81":"learn = cnn_learner(data, models.resnet34, metrics=error_rate)\ndevice = torch.device(\"cuda:0\" if torch.cuda.is_available() else \"cpu\")\nlearn.model.to(device)","67eed18b":"#learn.model_dir = \"\/kaggle\/working\"\nlearn.lr_find()","f6c5adce":"learn.recorder.plot()","7c7c340d":"learn.fit_one_cycle(8,slice(0.015));","89ce1dfb":"learn.freeze()","d38889a0":"Now that we predict the target from the meta data, we can move on to image training. For this we are using the fastai library.\n\n# Training the Images\n","5846a1dc":"**Since the quantity of images are gigantic, it will take some time to train the whole dataset even with the GPU's. So I have used some images for training and the predictions are done with the aid of that.**","1fc24e39":"# Melanoma Classification : The Naive Approach\n## Strictly for Beginners\n\n![Imgur](https:\/\/i.imgur.com\/7U9tlVA.jpg)\n\nThis notebook is ideal for beginners who want to start out with Computer vision. This kernel uses fastai library for computer vision processing. It is one of the easy library which can be used for cv. You can check out the official page of fastai to get a hang of it or to know more about it. But for the sake of your understanding, I have explained most of the stuffs used here. Thank me later.","3527b35f":"# Resources\n\n[Fastai documentation](https:\/\/docs.fast.ai\/tutorial.resources.html)\n\n\n[Fastai Course](https:\/\/course.fast.ai\/)\n\n## Happy Coding!","8e6a90f8":"**In this Competition, as you can see, there are meta data as well as images. I am trying to process both and attain results, so that we can use the combined result to build our classifier.**\n\n# Training the Metadata\n\n**I used XGBoost to train the meta data and predict the targets.**"}}