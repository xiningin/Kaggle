{"cell_type":{"97cb902e":"code","e362c4d3":"code","9b809a9d":"code","9de9c460":"code","5ac19c81":"code","988d85d7":"code","3506281f":"code","397629e9":"markdown","6bf47ece":"markdown","428cb57a":"markdown","c5d71526":"markdown","21cda70e":"markdown","fe72b51e":"markdown","9e3b3d0f":"markdown","0a83bbba":"markdown","5981363a":"markdown"},"source":{"97cb902e":"import pandas as pd\nurl = \"https:\/\/raw.githubusercontent.com\/matheusmota\/dataviz2018\/master\/resources\/datasets\/Pokemon.csv\"\ndf_pokemon = pd.read_csv(url, delimiter=',')\n\n","e362c4d3":"import plotly\nimport plotly.graph_objs as go\n\nplotly.offline.init_notebook_mode(connected=True)\n\ndr = (df_pokemon.groupby(by=['Type 1','Legendary']).sum()['Attack']).reset_index().rename(columns={'index':'Type 1'})\nlegendary = (df_pokemon[df_pokemon['Legendary'] == True].groupby(by=['Type 1','Legendary']).sum()['Attack']).reset_index().rename(columns={'index':'Type 1','Attack':'Attack Legendary'})\nnormal = (df_pokemon[df_pokemon['Legendary'] == False].groupby(by=['Type 1','Legendary']).sum()['Attack']).reset_index().rename(columns={'index':'Type 1','Attack':'Attack Normal'})\nlegendary.drop('Legendary', axis=1, inplace=True)\nnormal.drop('Legendary', axis=1, inplace=True)\nd = pd.merge(normal,legendary ,how='left', on='Type 1')\nd.fillna(0, inplace=True)\nrandom_x = d[d['Attack Legendary'].notnull()]['Type 1']\nrandom_y =  d[d['Attack Legendary'].notnull()]['Attack Legendary']\n\ntrace1 = go.Scatter(\n    x = random_x,\n    y = random_y,\n    mode = 'lines',\n   name = 'Lendarios',\n)\n\nrandom_x1 = d['Type 1']\nrandom_y1 = d['Attack Normal']\n\ntrace2 = go.Scatter(\n    x = random_x1,\n    y = random_y1,\n    mode = 'lines',\n     name = 'Normal',\n)\n\ndata = [trace1, trace2]\n\nplotly.offline.iplot(data, filename='basic-line')\n\n","9b809a9d":"%matplotlib inline\nimport numpy as np\nimport pandas as pd\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\n\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\ninit_notebook_mode(connected=True)\n\ndf_barras = (df_pokemon[['Type 1','HP','Attack','Defense']].groupby(by=['Type 1'])).mean().reset_index().rename(columns={'index':'Type 1'})\n\nx = df_barras['Type 1']\ny = df_barras['HP']\ny2 = df_barras['Attack']\ny3 = df_barras['Defense']\n\ntrace1 = go.Bar(\n    x= x,\n    y=y,\n    text=y,\n    name='HP',\n    textposition = 'auto',\n    marker=dict(\n        color='rgb(158,202,225)',\n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5),\n        ),\n    opacity=0.6\n)\n\ntrace2 = go.Bar(\n    x=x,\n    y=y2,\n    name='Attack',\n    text=y2,\n    textposition = 'auto',\n    marker=dict(\n        color='rgb(58,200,225)',\n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5),\n        ),\n    opacity=0.6\n)\n\ntrace3 = go.Bar(\n    x=x,\n    y=y3,\n    name='Defense',\n    text=y3,\n    textposition = 'auto',\n    marker=dict(\n        color='rgb(10,100,155)',\n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5),\n        ),\n    opacity=0.6\n)\n\ndata = [trace1,trace2,trace3]\nplotly.offline.iplot(data, filename='grouped-bar-direct-labels')\n#py.iplot(data, filename='grouped-bar-direct-labels')","9de9c460":"%matplotlib inline\nimport numpy as np\nimport pandas as pd\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\n\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\ninit_notebook_mode(connected=True)\n\n\n\nx = df_pokemon['Attack'].values\ndata = [go.Histogram(x=x)]\n\n\n\nlayout = go.Layout(\n    xaxis=dict(\n        title='',\n        zeroline=False,\n        showgrid=False,\n         showline=False,\n    )\n)\n\nfig = go.Figure(data=data, layout=layout)\n\n\nplotly.offline.iplot(fig)","5ac19c81":"%matplotlib inline\nimport numpy as np\nimport pandas as pd\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\n\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\ninit_notebook_mode(connected=True)\n\n\nFire_HP = df_pokemon[df_pokemon['Type 1'] == 'Fire'].mean()['HP']\nFire_Attack = df_pokemon[df_pokemon['Type 1'] == 'Fire'].mean()['Attack']\nFire_Defense = df_pokemon[df_pokemon['Type 1'] == 'Fire'].mean()['Defense']\nFire_SpAtk = df_pokemon[df_pokemon['Type 1'] == 'Fire'].mean()['Sp. Atk']\nFire_SpDef = df_pokemon[df_pokemon['Type 1'] == 'Fire'].mean()['Sp. Def']\nFire_Speed = df_pokemon[df_pokemon['Type 1'] == 'Fire'].mean()['Speed']\nFire_Stage = df_pokemon[df_pokemon['Type 1'] == 'Fire'].mean()['Stage']\n\nWater_HP = df_pokemon[df_pokemon['Type 1'] == 'Water'].mean()['HP']\nWater_Attack = df_pokemon[df_pokemon['Type 1'] == 'Water'].mean()['Attack']\nWater_Defense = df_pokemon[df_pokemon['Type 1'] == 'Water'].mean()['Defense']\nWater_SpAtk = df_pokemon[df_pokemon['Type 1'] == 'Water'].mean()['Sp. Atk']\nWater_SpDef = df_pokemon[df_pokemon['Type 1'] == 'Water'].mean()['Sp. Def']\nWater_Speed = df_pokemon[df_pokemon['Type 1'] == 'Water'].mean()['Speed']\nWater_Stage = df_pokemon[df_pokemon['Type 1'] == 'Water'].mean()['Stage']\n\n\ndata = [\n    go.Scatterpolar(\n      r = [Fire_HP, Fire_Attack, Fire_Defense, Fire_SpAtk, Fire_SpDef, Fire_Speed,Fire_Speed , Fire_Stage],\n      theta = ['HP','Attack','Defense', 'Sp. Atk', 'Sp. Def', 'Speed', 'Stage'],\n      fill = 'toself',\n      name = 'Fire Pokemons'\n    ),\n    go.Scatterpolar(\n      r = [Water_HP, Water_Attack, Water_Defense, Water_SpAtk, Water_SpDef, Water_Speed,Water_Speed , Water_Stage],\n      theta =  ['HP','Attack','Defense', 'Sp. Atk', 'Sp. Def', 'Speed', 'Stage'],\n      fill = 'toself',\n      name = 'Water Pokemons'\n    )\n]\n\nlayout = go.Layout(\n  polar = dict(\n    radialaxis = dict(\n      visible = True,\n      range = [0, 100]\n    )\n  ),\n  showlegend = False\n)\n\nfig = go.Figure(data=data, layout=layout)\n#py.iplot(fig, filename = \"radar\/multiple\")\nplotly.offline.iplot(fig, filename = \"radar\")","988d85d7":"%matplotlib inline\nimport numpy as np\nimport pandas as pd\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\n\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\ninit_notebook_mode(connected=True)\n\n\n\ntrace0 = go.Box( \n  y= df_pokemon[df_pokemon['Legendary'] == False]['Attack'] ,\n    name='Attack',\n     boxmean='sd',\n    marker=dict(\n        color='rgb(8, 81, 156)'\n        #color='#1E88E5'\n    )\n)\ntrace1 = go.Box(\n    y=df_pokemon[df_pokemon['Legendary'] == False]['Defense'],  \n    name='Defense',\n     boxmean='sd',\n    marker=dict(\n        color='#D32F2F'\n    )\n)\n\ndata = [trace0, trace1]\nlayout = go.Layout(\n   yaxis=dict(\n        title='',\n        zeroline=False,\n        showgrid=False,\n         showline=True,\n    ),   \n    boxmode='group'\n)\nfig = go.Figure(data=data, layout=layout)\nplotly.offline.iplot(fig, filename = \"box plot\")","3506281f":"%matplotlib inline\nimport numpy as np\nimport pandas as pd\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\n\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\ninit_notebook_mode(connected=True)\n\ndf_type1 =  df_pokemon[( ( df_pokemon['Type 1'] == 'Fire') | (df_pokemon['Type 1'] == 'Water')  | (df_pokemon['Type 1'] == 'Ice')  | (df_pokemon['Type 1'] == 'Grass') ) ] \n\n#for i in range(0,len(pd.unique(df['day']))):\ndata = []\n\n\ntrace = {\n        \"type\": 'violin',\n        \"x\": 'Fire',\n        \"y\": df_type1[ df_type1['Type 1'] == 'Fire']['Attack'],\n        \"name\": 'Fire',\n        \"fillcolor\": '#ff9900',\n         \"line\": {\n            \"color\": 'black'\n        },\n        \"box\": {\n            \"visible\": True\n        },\n        \"meanline\": {\n            \"visible\": True\n        }\n    }\ndata.append(trace)\n\ntrace = {\n        \"type\": 'violin',\n        \"x\": 'Water',\n        \"y\": df_type1[ df_type1['Type 1'] == 'Water']['Attack'],\n        \"name\": 'Water',\n        \"fillcolor\": '#00ccff',\n     \"line\": {\n            \"color\": 'black'\n        },\n        \"box\": {\n            \"visible\": True\n        },\n        \"meanline\": {\n            \"visible\": True\n        }\n    }\ndata.append(trace)\n\ntrace = {\n        \"type\": 'violin',\n        \"x\": 'Ice',\n        \"y\": df_type1[ df_type1['Type 1'] == 'Ice']['Attack'],\n        \"name\": 'Ice',\n         \"fillcolor\": '#F5F5F5',\n     \"line\": {\n            \"color\": 'black'\n        },\n        \"box\": {\n            \"visible\": True\n        },\n        \"meanline\": {\n            \"visible\": True\n        }\n    }\ndata.append(trace)\n\ntrace = {\n        \"type\": 'violin',\n        \"x\": 'Grass',\n        \"y\": df_type1[ df_type1['Type 1'] == 'Grass']['Attack'],\n        \"name\": 'Grass',\n    \"fillcolor\": '#00cc99',\n     \"line\": {\n            \"color\": 'black'\n        },\n        \"box\": {\n            \"visible\": True\n        },\n        \"meanline\": {\n            \"visible\": True\n        }\n    }\ndata.append(trace)\n\n        \nfig = {\n    \"data\": data,\n    \"layout\" : {\n        \"title\": \"\",\n        \"yaxis\": {\n            \"zeroline\": False,\n        }\n    }\n}\n\nplotly.offline.iplot(fig, filename='violin\/multiple', validate = False)\n","397629e9":"**Vari\u00e1vel escolhida foi Attack, agrupada por Legendary**","6bf47ece":"**Vari\u00e1vel escolhida foi Attack**","428cb57a":"**Vari\u00e1veis escolhidas fora Attack e Defense**","c5d71526":"**O Dataset escolhido foi o  pokemon**","21cda70e":"Vari\u00e1veis escolhidas foram HP , Attack, Defense, Sp. Atk, Sp. Def, Speed, Stage , exibidas por Type 1 ","fe72b51e":"# Quest\u00e3o \u00fanica - Plotly Python\n\nUtilizando um ou mais [datasets da disciplina](https:\/\/github.com\/matheusmota\/dataviz2018\/tree\/master\/resources\/datasets), usando o [Plotly Python](https:\/\/plot.ly\/python\/), construa:\n\n* Um gr\u00e1fico de linha\n* Um gr\u00e1fico de barras\n* Um histograma\n* Um gr\u00e1fico radar\n* Um gr\u00e1fico de caixa\n* Um gr\u00e1fico de violino\n\nDeixe claro qual o dataset escolhido e as vari\u00e1veis.\n\n","9e3b3d0f":"**Vari\u00e1veis escolhidas foram HP, Attack e Defense agrupadas por Type 1**","0a83bbba":"**Vari\u00e1vel escolhida foi Attack**","5981363a":"# Especializa\u00e7\u00e3o em Ci\u00eancia de Dados - Turma 2018.1 - Facens\n## Aula 3 | Exerc\u00edcio 1\n\n* **Data de entrega:** 28\/out\/2018 11:59 AM\n* **Professor:**  Matheus Mota\n* **Aluno: Jader Airton Bezerra Lima**  \n* **RA: 183133** "}}