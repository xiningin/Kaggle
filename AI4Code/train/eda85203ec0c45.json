{"cell_type":{"117b0c52":"code","35eb0a94":"code","34de9d7d":"code","c2e4c555":"code","db8a6987":"code","158501ef":"code","938aea0c":"code","e99b4575":"code","e329a8e2":"code","8caaa336":"code","81749650":"code","e752e679":"code","e73dae75":"code","bb4f304b":"markdown","677c598c":"markdown","f5e84191":"markdown"},"source":{"117b0c52":"import numpy as np\nimport pandas as pd\npd.set_option('display.max_rows', None)\n\nfrom sklearn.cluster import KMeans","35eb0a94":"questions = pd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/questions.csv')\nquestions.head()\nquestions.shape","34de9d7d":"questions = questions[~questions['tags'].isna()]\nquestions.shape","c2e4c555":"questions.head()","db8a6987":"questions = questions.assign(tags=questions['tags'].str.split()).explode('tags')\nquestions.head()","158501ef":"print(f\"total tag num is {len(questions['tags'].value_counts())}.\")","938aea0c":"questions = questions[['question_id', 'tags']]\ndf = pd.get_dummies(questions, columns=['tags'])\ndf.head()","e99b4575":"tmp_df = df.groupby('question_id').agg(['sum'])\ntmp_df.head()","e329a8e2":"km = KMeans(n_clusters=20,\n            init='random',\n            n_init=10,\n            random_state=0)","8caaa336":"X = tmp_df.iloc[:, 1:]\ncluster_labels = km.fit_predict(X)\ncluster_labels","81749650":"tmp_df['k'] = cluster_labels\ntmp_df = tmp_df.reset_index()\ntmp_df = tmp_df[['question_id', 'k']]\ntmp_df.columns = tmp_df.columns.droplevel(1)\ntmp_df.head(10)","e752e679":"from sklearn.metrics import silhouette_score\n\nscores = []\nfor i in range(5, 100, 10):\n    km = KMeans(n_clusters=i,\n                init='random',\n                n_init=10,\n                random_state=0)\n    cluster_labels = km.fit_predict(X)\n    score = silhouette_score(X, cluster_labels)\n    scores.append(score)\n    print(f'cluster num: {i}, silhouette score: {score}')","e73dae75":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport matplotlib.style as style\nstyle.use('fivethirtyeight')\n\nfig = plt.figure(figsize=(12,6))\npd.Series(scores, index=list(range(5, 100, 10))).plot.bar(scores);","bb4f304b":"check tag num","677c598c":"This notebook aims to get cluster of questions.","f5e84191":"Get best cluster num using silhouette score."}}