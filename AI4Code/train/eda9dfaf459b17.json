{"cell_type":{"347053b0":"code","176a8f51":"code","5ff5d14c":"code","94e1edfc":"code","bfb69187":"code","fe0e668e":"code","ede5c267":"code","79a448ef":"code","b8646f87":"code","5608e40d":"code","4e1c4aae":"code","e915930e":"code","e8f184e9":"code","ba6cb9a9":"code","0120f8b7":"code","2f2ed5f9":"code","f0922594":"code","43047136":"code","09324a6a":"markdown","bd20e972":"markdown","a05014b7":"markdown","a028148f":"markdown"},"source":{"347053b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","176a8f51":"df=pd.read_csv('\/kaggle\/input\/la-liga-match-data\/combined_data_laliga.csv')\ndf","5ff5d14c":"df.info()","94e1edfc":"df['Home Team'].unique()","bfb69187":"df['Away Team'].unique()","fe0e668e":"team_map={'ATHLETIC':0,'VALENCIA':1,'DEPORTIVO':2,'ESPANYOL':3,'REAL SOCIEDAD':4,'ELCHE':5,'GETAFE':6,'VILLARREAL':7,'C\u00d3RDOBA':8,'ATLETICO MADRID':9,'ALMER\u00cdA':10,'M\u00c1LAGA':11,'LEVANTE':12,'CELTA':13,'EIBAR':14,'SEVILLA FC':15,\n       'BARCELONA':16, 'RAYO VALLECANO':17, 'REAL MADRID':18, 'GRANADA':19,\n       'LAS PALMAS':20, 'GIJ\u00d3N':21, 'REAL BETIS':22, 'OSASUNA':23, 'ALAV\u00c9S':24,\n       'LEGAN\u00c9S':25, 'GIRONA':26, 'VALLADOLID':27, 'HUESCA':28, 'MALLORCA':29,\n       'C\u00c1DIZ CF':30}\n\ndf=df.replace({'Away Team':team_map})\ndf=df.replace({'Home Team':team_map})","ede5c267":"df.drop(['Score','Half Time Score'],axis=1,inplace=True)","79a448ef":"df","b8646f87":"df['win']=np.where(df['Away Team Goals Scored']>df['Home Team Goals Scored'],0,1)","5608e40d":"df","4e1c4aae":"y_train=df.pop('win')\nx_train=df","e915930e":"import matplotlib.pyplot as plt\n\nplt.bar(x_train['Home Team'].unique(),x_train['Away Team'].unique(),color='green')\nplt.title('Home Team vs Away Team')\nplt.xlabel('Home Team')\nplt.ylabel('Away Team')\nplt.show()","e8f184e9":"plt.bar(x_train['year'],x_train['Home Team Goals Scored'],color='orange')\nplt.title('Year vs Goals for Home Team')\nplt.xlabel('Year')\nplt.ylabel('Goals')\nplt.show()\n\nplt.bar(x_train['year'],x_train['Away Team Goals Scored'],color='purple')\nplt.title('Year vs Goals for Away Team')\nplt.xlabel('Year')\nplt.ylabel('Goals')\nplt.show()","ba6cb9a9":"from tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense\n\nmodel=Sequential()\nmodel.add(Dense(2660,activation='relu'))\nmodel.add(Dense(700,activation='relu'))\nmodel.add(Dense(1,activation='softmax'))","0120f8b7":"model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])","2f2ed5f9":"history=model.fit(x_train,y_train,batch_size=1330,epochs=15,validation_split=0.1)\n","f0922594":"# dft=pd.read_csv('\/kaggle\/input\/la-liga-match-data\/laliga2020.csv')\n","43047136":"# dft=dft.replace({'Away Team':team_map})\n# dft=dft.replace({'Home Team':team_map})\n# dft.drop(['Score','Half Time Score'],axis=1,inplace=True)\n# dft['win']=np.where(dft['Away Team Goals Scored']>dft['Home Team Goals Scored'],0,1)\n# dft['year']=2020\n# y_test=dft.pop('win')\n# x_test=dft\n\nloss,acc=model.evaluate(x_train,y_train)\nprint(\"Accuracy=\",acc*100,\"%\")","09324a6a":"### Reading Data","bd20e972":"### Data Representation","a05014b7":"### Data Cleaning\n\nMapping some of the data to more suitable formats for easier represntation and model building","a028148f":"### Model Building\n\nA Dense Sequential classification has been built using Keras Tensorflow package."}}