{"cell_type":{"fe2d794f":"code","4ff7586e":"code","79a6076f":"code","3a13acfc":"code","3928961e":"code","2a2b59b6":"code","319ad314":"code","e6fb5e09":"code","bba30757":"code","a8c3240c":"code","9e212ee0":"code","b2bd703e":"code","6546bb24":"code","f2556419":"code","52ca4081":"code","84f57656":"code","2c0ec82c":"code","4f06e519":"code","e4984d7a":"code","1ef75ea2":"code","d0beae58":"code","ad8ec4f8":"code","b8af565b":"code","bd51ebb6":"code","c2db47f9":"code","3da39395":"code","36bbbd88":"code","5e1dd66b":"code","e49205be":"code","5f606ada":"code","acd20d5f":"markdown","1dab367e":"markdown","d87444d1":"markdown","652c12b1":"markdown","949628b6":"markdown","f7a4648e":"markdown","fa4e811c":"markdown","a4ed518d":"markdown","4eba544c":"markdown","22752944":"markdown","f758069c":"markdown","584a7ccc":"markdown","0b2720e7":"markdown","d124a28a":"markdown","9d14125f":"markdown","398c5e67":"markdown","7f5cb024":"markdown","2e17ba53":"markdown","95bc7943":"markdown","1fb088dd":"markdown","5cd36689":"markdown","9e9d8ae2":"markdown"},"source":{"fe2d794f":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport seaborn as sns  ","4ff7586e":"#read to csv\ndata = pd.read_csv(\"..\/input\/googleplaystore.csv\")","79a6076f":"data.info()","3a13acfc":"data.columns","3928961e":"data.shape","2a2b59b6":"data.head(10)","319ad314":"data['Category'].unique()","e6fb5e09":"data[data['Category'] == '1.9']","bba30757":"data.loc[10472] = data.loc[10472].shift()\ndata['App'].loc[10472] = data['Category'].loc[10472]\ndata['Category'].loc[10472] = np.nan\ndata.loc[10472]","a8c3240c":"data['Rating'].unique()","9e212ee0":"data['Rating'] = pd.to_numeric(data['Rating'], errors='coerce')\ndata['Rating'].dtypes","b2bd703e":"data['Reviews'].unique()","6546bb24":"data['Reviews'] = data.Reviews.replace(\"0.0\",0)\ndata['Reviews'] = data['Reviews'].astype(float)\ndata['Reviews'].dtype","f2556419":"data['Size'].unique()","52ca4081":"data['Size'] = data.Size.replace(\"Varies with device\",np.nan)\ndata['Size'] = data.Size.str.replace(\"M\",\"000\") # All size values became the kilobyte type.\ndata['Size'] = data.Size.str.replace(\"k\",\"\")\ndata['Size'] =data['Size'].astype(float)\ndata['Size'].dtypes","84f57656":"data['Installs'].unique()","2c0ec82c":"data['Installs'] = data.Installs.str.replace(\",\",\"\")\ndata['Installs'] = data.Installs.str.replace(\"+\",\"\")\ndata['Installs'] = data.Installs.replace(\"Free\",np.nan)\ndata['Installs'] = data['Installs'].astype(float)\ndata['Installs'].dtype","4f06e519":"data['Price'].unique()","e4984d7a":"data['Price'] = data.Price.replace(\"Everyone\",np.nan)\ndata['Price'] = data.Price.str.replace(\"$\",\"\").astype(float)\ndata['Price'].dtype","1ef75ea2":"data['Last Updated'].unique()","d0beae58":"data['Last Updated'] = pd.to_datetime(data['Last Updated'])\ndata['Last Updated'].head()","ad8ec4f8":"data.corr()","b8af565b":"#correlation map\nf,ax = plt.subplots(figsize=(12, 12))\nsns.heatmap(data.corr(), annot=True, linewidths=1,ax=ax,cmap=\"Blues\")\nplt.show()","bd51ebb6":"data.describe()","c2db47f9":"category_list = list(data['Category'].unique())\ncategory_review = []\nfor i in category_list:\n    x = data[data['Category'] == i]\n    if(len(x)!=0):\n        review = sum(x.Reviews)\/len(x)\n        category_review.append(review)\n    else:\n        review = sum(x.Reviews)\n        category_review.append(review)\n#sorting\ndata_category_reviews = pd.DataFrame({'category': category_list,'review':category_review})\nnew_index = (data_category_reviews['review'].sort_values(ascending=False)).index.values\nsorted_data =data_category_reviews.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['category'], y=sorted_data['review'],palette='rocket')\nplt.xticks(rotation=80)\nplt.xlabel(\"Category\")\nplt.ylabel(\"Reviews\")\nplt.title(\"Category and Reviews\")\nplt.show()","3da39395":"category_list = list(data['Category'].unique())\ncategory_install = []\nfor i in category_list:\n    x = data[data['Category'] == i]\n    if(len(x)!=0):\n        install = sum(x.Installs)\/len(x)\n        category_install.append(install)\n    else:\n        install = sum(x.Installs)\n        category_install.append(install)\n        \n#sorting\ndata_category_install = pd.DataFrame({'category': category_list,'install':category_install})\nnew_index = (data_category_install['install'].sort_values(ascending=False)).index.values\nsorted_data =data_category_install.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['category'], y=sorted_data['install'],palette='rocket')\nplt.xticks(rotation=80)\nplt.xlabel(\"Category\")\nplt.ylabel(\"Install\")\nplt.title(\"Category and Install\")\nplt.show()","36bbbd88":"category_list = list(data['Category'].unique())\ncategory_rating = []\nfor i in category_list:\n    x = data[data['Category'] == i]\n    x = x.dropna()\n    if(len(x)!=0):\n        rating = sum(x.Rating)\/len(x)\n        category_rating.append(rating)\n    else:\n        rating = sum(x.Rating)\n        category_rating.append(rating)\n#sorting\ndata_category_reviews = pd.DataFrame({'category': category_list,'rating':category_rating})\nnew_index = (data_category_reviews['rating'].sort_values(ascending=False)).index.values\nsorted_data =data_category_reviews.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['category'], y=sorted_data['rating'])\nplt.xticks(rotation=80)\nplt.xlabel(\"Category\")\nplt.ylabel(\"Rating\")\nplt.title(\"Category and Rating\")\nplt.show()","5e1dd66b":"category_list = list(data['Category'].unique())\ncategory_size = []\nfor i in category_list:\n    x = data[data['Category'] == i]\n    x = x.dropna()\n    if(len(x)!=0):\n        size = sum(x.Size)\/len(x)\n        category_size.append(size)\n    else:\n        size = sum(x.Size)\n        category_size.append(size)\n#sorting\ndata_category_reviews = pd.DataFrame({'category': category_list,'size':category_size})\nnew_index = (data_category_reviews['size'].sort_values(ascending=False)).index.values\nsorted_data =data_category_reviews.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['category'], y=sorted_data['size'],palette='rocket')\nplt.xticks(rotation=80)\nplt.xlabel(\"Category\")\nplt.ylabel(\"Size\")\nplt.title(\"Category and Size\")\nplt.show()","e49205be":"category_list = list(data['Category'].unique())\ncategory_size = []\nfor i in category_list:\n    x = data[data['Category'] == i]\n    x = x.dropna()\n    if(len(x)!=0):\n        size = sum(x.Price)\/len(x)\n        category_size.append(size)\n    else:\n        size = sum(x.Price)\n        category_size.append(size)\n#sorting\ndata_category_reviews = pd.DataFrame({'category': category_list,'size':category_size})\nnew_index = (data_category_reviews['size'].sort_values(ascending=False)).index.values\nsorted_data =data_category_reviews.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['category'], y=sorted_data['size'],palette='rocket')\nplt.xticks(rotation=80)\nplt.xlabel(\"Category\")\nplt.ylabel(\"Price\")\nplt.title(\"Category and Price\")\nplt.show()","5f606ada":"category_list = list(data['Content Rating'].unique())\ncategory_size = []\nfor i in category_list:\n    x = data[data['Content Rating'] == i]\n    if(len(x)!=0):\n        size = sum(x.Installs)\/len(x)\n        category_size.append(size)\n    else:\n        size = sum(x.Installs)\n        category_size.append(size)\n#sorting\ndata_category_reviews = pd.DataFrame({'category': category_list,'size':category_size})\nnew_index = (data_category_reviews['size'].sort_values(ascending=False)).index.values\nsorted_data =data_category_reviews.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['category'], y=sorted_data['size'])\nplt.xlabel(\"Content Rating\")\nplt.ylabel(\"Installs\")\nplt.title(\"Content Rating and Installs\")\nplt.show()","acd20d5f":"<a id=\"f\"><\/a>\n## Price","1dab367e":"<a id=\"3\"><\/a>\n# Exploratory Data Analysis\n","d87444d1":"<a id=\"b1\"><\/a>\n## Category and Size","652c12b1":"<a id=\"4\"><\/a>\n# Conclusion\n\n#### from the above correlation between reviews, rating, installation, size and prize we concluded that Reviews and Rating correlate very strongly, which can be seen from above graphs, that category of App having large number of reviews has larger number of installs.  \n#### To maximize the product profit we should have **Content Rating = Everyone 10+ or Teen** and **Large number of Reviews**","949628b6":"<a id=\"b1\"><\/a>\n## Category and Rating","f7a4648e":"<a id=\"d\"><\/a>\n## Size","fa4e811c":"<a id=\"2\"><\/a>\n# 2. Cleaning Data\n\nDataset can contain missing data, numerical string value, various cues. If we can clean them, we can make easy our analysis.\n\n<a id=\"a\"><\/a>\n## Category","a4ed518d":"Data type of Last Uptated is object. I converted from string to date type.","4eba544c":"<a id=\"b\"><\/a>\n## Rating ","22752944":"<a id=\"d1\"><\/a>\n## Content Rating and Installs ","f758069c":"Data type of Rating is object. If we convert from string to numeric, we can make easy.","584a7ccc":"Data type of Size is object. I had to convert the column because it contains the application sizes. Firstly I changed 'Varies with device' value with Nan. After, I dropped 'M' and 'k'. Finally, I converted float value.","0b2720e7":"Data type of Price is object. I have made similar processes, which I made the in 'Size'. ","d124a28a":"<a id=\"b1\"><\/a>\n## Category and Price","9d14125f":"Data type of Size is object. I'm gonna make similar processes, which I made the in 'Size'. ","398c5e67":"<a id=\"e\"><\/a>\n## Installs","7f5cb024":"We can make NaN category value. At that time we can get a clean data. I used shift() method that is found Pandas library.","2e17ba53":"<a id=\"c\"><\/a>\n## Reviews","95bc7943":"<a id=\"a1\"><\/a>\n## Category and Reviews","1fb088dd":"<a id=\"g\"><\/a>\n## Last Updated","5cd36689":"<a id=\"b1\"><\/a>\n## Category and Installs","9e9d8ae2":"'1.9' is wrong value. So I have to see in which rows '1.9' corresponds to."}}