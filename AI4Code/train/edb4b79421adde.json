{"cell_type":{"ebfd6401":"code","373c9c84":"code","2251250a":"code","e1073204":"code","a22a7799":"code","c21df0fc":"code","8b8f1b42":"code","e1fb7ef0":"code","80a5e524":"code","b55fba3f":"code","59a100a6":"markdown","6948a408":"markdown","0a657848":"markdown","5f0d06ed":"markdown","69f7e69f":"markdown","0c3118ca":"markdown","e823c125":"markdown"},"source":{"ebfd6401":"! pip install --quiet chart-studio","373c9c84":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport re\nfrom tqdm.notebook import tqdm\nimport nltk\n\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import iplot\nfrom wordcloud import WordCloud\nfrom plotly.offline import iplot\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\nplt.style.use('fivethirtyeight')","2251250a":"data = pd.read_csv(\"..\/input\/all-trumps-twitter-insults-20152021\/trump_insult_tweets_2014_to_2021.csv\")[['target', 'tweet']]\ndata.head()","e1073204":"char_freq = data['tweet'].str.len()\nfig = px.histogram(x=char_freq)\nfig.update_layout(title=\"Character Frequency Count\")\niplot(fig)","a22a7799":"word_dist = data['tweet'].str.split().map(lambda x: len(x))\nfig = px.histogram(x=word_dist, color_discrete_sequence=px.colors.sequential.Agsunset)\nfig.update_layout(title=\"Word Count Distribution\")\niplot(fig)","c21df0fc":"uwc = data['tweet'].apply(lambda x: len(set(str(x).split()))).to_list()\nfig = ff.create_distplot([uwc], ['All Tweets'])\nfig.update_layout(title=\"Unique Word Count in all Tweets\")\niplot(fig)","8b8f1b42":"url = data['tweet'].str.split().map(lambda x: len([w for w in str(x).lower().split() if 'http' in w or 'https' in w or 'ftp' in w]))\nfig = px.histogram(x=url, color_discrete_sequence=px.colors.sequential.algae_r)\nfig.update_layout(title=\"URL Count\")\niplot(fig)","e1fb7ef0":"wc = \" \".join(data['tweet'].tolist())\nwc = WordCloud(width=256, height=256, collocations=False).generate(wc)\nplt.figure(figsize=(8, 8))\nplt.imshow(wc)\nplt.axis('off')\nplt.show()","80a5e524":"data['bigrams'] = data['tweet'].apply(lambda x: list(nltk.bigrams(nltk.word_tokenize(x))))\ndata['bigrams_count'] = data['bigrams'].apply(lambda x: len(x))\n\ndata.head()","b55fba3f":"plt.style.use('classic')\nsns.displot(data['bigrams_count'], color='red', kde=True)\nplt.title(\"Bigrams Count Distribution\")\nplt.xlabel(\"Number of Bigrams\")\nplt.ylabel(\"Count\")\nplt.show()","59a100a6":"<h2 align='center' style='color:green'>Bi-Gram Words<\/h2>","6948a408":"<h2 align='center' style='color:green'>Unique Word Count<\/h2>","0a657848":"<h2 align='center' style='color:green'>Word Count Distribution!<\/h2>","5f0d06ed":"<h2 align='center' style='color:green'>Character Frequency Count!<\/h2>","69f7e69f":"<h1 style=\"color:aqua;text-align:center\">Analyzing Trump's Insults over the years!<\/h1>\n\n\n<span style=\"text-align:center\"><strong style=\"color:red\">If you like my notebook, please leave an upvote!<\/strong><\/span>\n<hr>","0c3118ca":"<h2 align='center' style='color:green'>Word Cloud<\/h2>","e823c125":"<h2 align='center' style='color:green'>URL Count<\/h2>"}}