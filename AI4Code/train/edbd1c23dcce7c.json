{"cell_type":{"551cfa84":"code","e00e0f14":"code","e1a19cf4":"code","f7ace9fa":"code","e43b4c53":"code","31d0a5ff":"code","d95cf9b1":"code","2db64ed5":"code","54a0d7cd":"code","b25720d4":"code","ce2affd8":"code","1c2cc2ee":"markdown","aad21923":"markdown","944dc612":"markdown","f37ec9e6":"markdown","a98e05f4":"markdown","5ad8cd41":"markdown","2ac203e4":"markdown"},"source":{"551cfa84":"import numpy as np \nimport pandas as pd  ","e00e0f14":"path = \"\/kaggle\/input\/meta-kaggle\/\"\ndf_user = pd.read_csv(path+\"Users.csv\")\ndf_achievements = pd.read_csv(path+\"UserAchievements.csv\")","e1a19cf4":"df_user.head()","f7ace9fa":"df_achievements.head()","e43b4c53":"df_achievements.AchievementType.unique()","31d0a5ff":"segments = ['Competitions' ,'Discussion' , 'Scripts' ]\ntop_ids = {}  # A dictionary of segment-IDs combination\n\nfor segment in segments : \n    top_ids[segment] = df_achievements['UserId'][(df_achievements['Tier']>3) & (df_achievements['AchievementType'] == segment) ]\n    print(\"Currently there are {} users who are atleast a {} GrandMaster\".format(len(top_ids[segment]) , segment  ))","d95cf9b1":"top_user_ids = set(top_ids[segments[0]]).intersection(set(top_ids[segments[1]])).intersection(set(top_ids[segments[2]]))","2db64ed5":"print(\"There are {} users who are Grandmasters in ALL 3 SEGMENTS\".format(len(top_user_ids)))","54a0d7cd":"top_user_ids","b25720d4":"df_top_users = df_user[df_user.Id.isin(top_user_ids)]","ce2affd8":"df_top_users[['UserName','DisplayName']]","1c2cc2ee":"### **List** & Filter the users who are **atleast Tier 4** in each of the three segments ( Competition, Discussion , Script)","aad21923":"Their UserIDs  - ","944dc612":"### Take an intersection of the users who are top in all 3 three segments ( Competition, Discussion , Script)","f37ec9e6":"There are 3 Top users for the position ( EDIT : Now 2 for the next two slots - )\n\n| userid   | Display Name    |\n|----------|-----------------|\n| abhishek | Abhishek Thakur |\n| cdeotte  | Chris Deotte    | \n| christofhenkel    | Dieter |","a98e05f4":"We need these files \n* Users.csv  ( Useful Columns =  Id |\tUserName | \tDisplayName | \tRegisterDate \t| PerformanceTier )\n* UserAchievements.csv ( Useful Columns =  UserId \t| AchievementType |\tTier)","5ad8cd41":"### How do we get these names ??\nUse only the filter options in pandas to come to this list - \nHere's the quick and dirty way  - \n\n\n* List all the users who are atleast 'GrandMaster' in Competitions, Discussions, Scripts\n* Take an intersection of all the three sets ( Users who are Grandmaster status in all 3 segments )\n\n#### Asssumptions \n* Since the 'DataSets' Grandmaster Achievement Type is unavailable , we assume that the next few 4x GMs come from the group of kagglers who are already 3x GM in Competitions, Discussions, Scripts ( and NOT Dataset ) - I know, this is a wild assumuption - but yeah .\n* #### There is a 'high chance' that the next 4x Grandmaster will come from this intersection set.\n","2ac203e4":"Unfortunately, the file does not seem to have the **'DataSets' Grandmaster Achievement Type** - That would have made it not miss out some other contenders."}}