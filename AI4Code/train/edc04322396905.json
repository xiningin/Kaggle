{"cell_type":{"c5e9c4c8":"code","3900b810":"code","27878be2":"code","52134ff9":"code","17ab88b4":"code","c8b37c4a":"markdown","4528d3ee":"markdown","bca19357":"markdown"},"source":{"c5e9c4c8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3900b810":"import cv2 as cv\nfrom matplotlib import pyplot as plt\nimport numpy as np","27878be2":"#image declaration\nimg = cv.imread('..\/input\/jalananjk\/jalanan.jpg')\nimg = cv.cvtColor(img, cv.COLOR_BGR2RGB)\n\n\n#powerlaw to dehaze proccess\nfor powerlaw in[1.8]:\n    out = np.array(255*(img\/255)**powerlaw, dtype='uint8')\n\n\n#2D matrix filter for better dehazing\ndehaze_filter = np.array([[1, -2, -2.5],\n                    [-1,  9.3, -1],\n                    [-1, 1, -1]])\n#2D filter for better dehazing after power law\ndehaze = cv.filter2D(out, -1, dehaze_filter)\n\n\n#image show\nplt.figure(figsize=(7,7))\nplt.imshow(img)\nplt.title('Original')\nplt.figure(figsize=(7,7))\nplt.imshow(dehaze)\nplt.title('Dehazed Image')\nplt.figure(figsize=(7,7))","52134ff9":"#edge detection\nlap = cv.Sobel(dehaze,cv.CV_64F,0,1, ksize=3)\nlap = np.uint8(np.absolute(lap))\ncan = cv.Canny(dehaze, 50,255)","17ab88b4":"plt.imshow(dehaze)\nplt.title('Dehazed Image')\nplt.figure(figsize=(7,7))\nplt.imshow(can)\nplt.title('Pothole Detection')\nplt.figure(figsize=(7,7))\nplt.imshow(lap)\nplt.title('Pothole Detection')","c8b37c4a":"**Mendeteksi Lubang dengan Canny dan Sobel**\n> Canny dan sobel akan mendeteksi tepian yang ada pada gambar setelah kabut berkurang dan pada gambar canny akan **terlihat garis** yang itu merupakan lubang, sedangkan pada gambar sobel akan terlihat **warna putih** pada gambar yang itu merupakan lubang.","4528d3ee":"**Import Library**\n> Open CV, Matplotlib dan Numpy","bca19357":"**Mengurangi kabut pada gambar**\n> Menggunakan Powerlaw untuk menerangkan beserta sharp filter agar kabut semakin berkurang dan gambar tetap cerah"}}