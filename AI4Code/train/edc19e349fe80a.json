{"cell_type":{"25ae7fcb":"code","5ef2eecb":"code","a1ea2b3e":"code","337ae8cd":"code","85cc4013":"code","1a68c48e":"code","2bcda675":"code","269d1146":"code","d1a05a5e":"code","91c049fe":"code","dc171c5b":"code","b4603c86":"code","8e475547":"code","aa00f2a8":"code","db5bac29":"code","741eddf9":"code","60c46ef9":"code","0a26f27b":"code","43deac69":"code","2b18cfe0":"code","e429fb6d":"code","12b6817a":"code","95f0fe2b":"code","66dce493":"code","1a055ce5":"markdown","742c4f75":"markdown","5682cb7b":"markdown","d49b5af6":"markdown","373b7678":"markdown","e8d53487":"markdown","f6fd08bb":"markdown","3815d98e":"markdown","5e21b84e":"markdown","db00d2f7":"markdown","2124c17d":"markdown","87436464":"markdown","795cc242":"markdown","c384bbf0":"markdown","88e1fd2c":"markdown","61e18fee":"markdown"},"source":{"25ae7fcb":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\ndef ignore_warn(*args, **kwargs):\n    pass\nwarnings.warn = ignore_warn #ignore annoying warning (from sklearn and seaborn)\n%pylab inline","5ef2eecb":"data_train = pd.read_csv('\/kaggle\/input\/protonx-tf01-linear-regression\/train.csv')\ndata_train.head()\n# data_train.info()","a1ea2b3e":"data_train.info()","337ae8cd":"from pandas.plotting import scatter_matrix\nimport seaborn as sns\nimport matplotlib as plt\n\nattributes = [\"ChanceOfAdmit\", \"GRE\", \"TOEFL\", \"UniversityRating\", \"SOP\", \"LOR\", \"CGPA\", \"Research\"]\n# scatter_matrix(data_train[attributes], figsize=(12, 8))\n# sns.pairplot(data_train[attributes], hue=\"ChanceOfAdmit\", diag_kws={'bw': 0.2})\n# sns.pairplot(data_train[attributes], hue=\"ChanceOfAdmit\", diag_kind=\"hist\")\ndata_train.plot(kind=\"scatter\", x=\"ChanceOfAdmit\", y=\"GRE\", alpha=0.5)","85cc4013":"data_train.plot(kind=\"scatter\", x=\"ChanceOfAdmit\", y=\"TOEFL\", alpha=0.5)","1a68c48e":"data_train.plot(kind=\"scatter\", x=\"ChanceOfAdmit\", y=\"UniversityRating\", alpha=0.25)","2bcda675":"data_train.plot(kind=\"scatter\", x=\"ChanceOfAdmit\", y=\"SOP\", alpha=0.25)","269d1146":"data_train.plot(kind=\"scatter\", x=\"ChanceOfAdmit\", y=\"CGPA\", alpha=0.25)","d1a05a5e":"data_train.plot(kind=\"scatter\", x=\"ChanceOfAdmit\", y=\"LOR\", alpha=0.25)","91c049fe":"data_train.plot(kind=\"scatter\", x=\"ChanceOfAdmit\", y=\"Research\", alpha=0.25)","dc171c5b":"corr_matrix = data_train.corr()\ncorr_matrix[\"ChanceOfAdmit\"].sort_values(ascending=False)","b4603c86":"train = data_train.to_numpy() # Convert to ndarray\n\nX = train[ : , 1 : train.shape[1] - 1] # Select feature columns only\nXhat = X\n\nY = train[ : , train.shape[1] - 1] # Data label","8e475547":"print(Xhat[:10])\nprint()\nprint(Y[:10])","aa00f2a8":"Xhat.shape","db5bac29":"from sklearn.linear_model import LinearRegression\nimport tensorflow as tf\n\nlin_reg = LinearRegression()\nlin_reg.fit(X, Y)\n\npredictions = lin_reg.predict(X)\n\nprint('Y: ', Y)\nprint('predictions: ', predictions)","741eddf9":"def predict(X): # Data features without bias\n    return lin_reg.predict(X)","60c46ef9":"data_test = pd.read_csv('\/kaggle\/input\/protonx-tf01-linear-regression\/sample_submission.csv')","0a26f27b":"X_test = data_test.to_numpy()\nX_test = X_test[ : , 1 : X_test.shape[1] -1]","43deac69":"print(X_test.shape)\nprint()\nprint(X_test[:10])","2b18cfe0":"answer = predict(X_test)","e429fb6d":"print(answer.shape)\nprint()\nprint(answer[:10])","12b6817a":"submit = data_test\nsubmit['ChanceOfAdmit'] = answer","95f0fe2b":"submit.head()","66dce493":"submit.to_csv('submission.csv', index = False)","1a055ce5":"We then check its shape and data","742c4f75":"Our data has 400 samples, thus using normal equation is quick and easy to implement.\n### 2. Th\u1ef1c hi\u1ec7n Code \u0111\u1ec3 Train model v\u00e0 t\u00ecm ra weight t\u1ea1i \u0111\u00e2y !!!","5682cb7b":"## Prediction and submission\n### 1. Define a prediction function","d49b5af6":"## Data preparation\n\n### 1. Load the data and take a peek","373b7678":"## Building a model using linear regression","e8d53487":"### 2. Preprare data for training","f6fd08bb":"Check the data to see if it is fit for training","3815d98e":"### 6. Save our submission file","5e21b84e":"### 5. Write our answer to ChanceOfAdmit column in test data","db00d2f7":"### 1. Check training data to find a suitable approach","2124c17d":"### 2. Read test data:","87436464":"Again, check its shape and data","795cc242":"Let's take a peek at the submission csv before submitting","c384bbf0":"# Notebook m\u1eabu c\u1ee7a nh\u00f3m: **The Simp Duo**","88e1fd2c":"### 3. Convert data to numpy array and extract features column only","61e18fee":"### 4. Our prediction"}}