{"cell_type":{"8d5623d8":"code","f95856cf":"code","b451fe39":"code","a59b034d":"code","bb8d6b89":"code","838a70a7":"code","8626b674":"code","3a463b79":"code","cf5d95df":"code","22ff2f57":"code","ed68c164":"code","252eea45":"code","72291808":"code","a0dc2f72":"code","8dbc7612":"code","49bb5aec":"markdown"},"source":{"8d5623d8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f95856cf":"import numpy as np # linear algebra\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport geopandas as gpd","b451fe39":"#pip install tabula-py","a59b034d":"pd.set_option('display.max_columns',370) # setting the visulaization on columns\npd.set_option('display.max_rows',370)\npd.set_option(\"display.max_colwidth\",300)","bb8d6b89":"df_basedata= pd.read_csv('\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv',)\ndf=df_basedata.copy()","838a70a7":"#Creating a new DF for grouping the questions\ndf_question=pd.DataFrame(columns=['Q_Id','Question'])\ndf_question['Question']=df.T[0]\ndf_question['Q_Id']=df.columns\ndf_question.reset_index(inplace=True)\ndf_question.drop(columns=('index'),inplace=True)\ndf_question['Quest']=pd.Series()\ndf_question['Quest']=df_question['Quest'].astype(object) #converting the questioin col into object\ndf_question['Primary_group']=np.NaN\n#extract the suffix and add to the dataframe\ndf_question['Suffix'] = [i.split(\"-\")[-1].strip() for i in df_question[\"Question\"]]","8626b674":"#Group all the Questions\ndf_question['Quest'][0]='Duration_survey'\ndf_question['Quest'][1]='Age'\ndf_question['Quest'][2]='Sex'\ndf_question['Quest'][3]='Country'\ndf_question['Quest'][4]='Qualification'\ndf_question['Quest'][5]='Position'\ndf_question['Quest'][6]='Coding_exp'\ndf_question['Quest'][7:20]='Main_lang'\ndf_question['Quest'][20]='Recomended_Lang_DS'\ndf_question['Quest'][21:34]='IDE'\ndf_question['Quest'][34:51]='Hosted_Notebook'\ndf_question['Quest'][51]='Computing_platform'\ndf_question['Quest'][52:58]='Special_Hardware'\ndf_question['Quest'][58]='TPU_Usage'\ndf_question['Quest'][59:71]='Vis_tool'\ndf_question['Quest'][71]='ML_Exp'\ndf_question['Quest'][72:90]='ML_Framework'\ndf_question['Quest'][90:102]='ML_Algo'\ndf_question['Quest'][102:109]='Com_vision_method'\ndf_question['Quest'][109:115]='NLP_method'\ndf_question['Quest'][115]='Current_industry'\ndf_question['Quest'][116]='Employ_size'\ndf_question['Quest'][117]='DS_Eng_Size'\ndf_question['Quest'][118]='ML_in_current_business'\ndf_question['Quest'][119:127]='Your_role'\ndf_question['Quest'][127]='Salary'\ndf_question['Quest'][128]='ML_Expense_at_home'\ndf_question['Quest'][129:141]='Cloud'\ndf_question['Quest'][141]='Familiar_Cloud'\ndf_question['Quest'][142:147]='Regular_Famous_Cloud'\ndf_question['Quest'][147:155]='30_Cloud_DataStorage'\ndf_question['Quest'][155:164]='31_Cloud_ML_Pack'\ndf_question['Quest'][165:186]='32_Big_data'\ndf_question['Quest'][186]='33_Regular_Big_data'\ndf_question['Quest'][187:204]='34_Business_Tool'\ndf_question['Quest'][204]='35_Regular_Business_Tool'\ndf_question['Quest'][205:213]='36_Auto_ML_tool'\ndf_question['Quest'][213:221]='37_Regular_Auto_ML_tool'\ndf_question['Quest'][221:232]='38_Manage_ML_exp_tool'\ndf_question['Quest'][233:243]='39_Public_Share_App'\ndf_question['Quest'][243:255]='40_DL_Learning_Platform'\ndf_question['Quest'][255]='41_Analysis_Tool'\ndf_question['Quest'][256:268]='42_DL_Media_Sourse'\ndf_question['Quest'][268:280]='27B_Future_Cloud'\ndf_question['Quest'][280:285]='29B_Cloud_expert_in_2yrs'\ndf_question['Quest'][285:293]='30B_Cloud_DB_expert_in_2yrs'\ndf_question['Quest'][293:303]='31B_Cloud_ML_expert_in_2yrs'\ndf_question['Quest'][303:324]='32B_Bigdata_expert_in_2yrs'\ndf_question['Quest'][324:341]='34B_Busi_Tool_expert_in_2yrs'\ndf_question['Quest'][341:349]='36B_AutoML_tool_expert_in_2yrs'\ndf_question['Quest'][349:357]='37B_'\ndf_question['Quest'][357:]='38B_ML_exp_manag_tool_expert_2yrs'","3a463b79":"#Clean the suffix \ndf_question['Suffix'][1]='Age'\ndf_question['Suffix'][2]='Gender'\ndf_question['Suffix'][3]='Country'\ndf_question['Suffix'][4]='Qualification'\ndf_question['Suffix'][5]='Position'\ndf_question['Suffix'][6]='Exp_Coding'\ndf_question['Suffix'][18]='Language_None'\ndf_question['Suffix'][19]='Language_Other'\ndf_question['Suffix'][20]='Reccomended_Language'\ndf_question['Suffix'][21]='Jupyter'\ndf_question['Suffix'][31]='Jupyter'\ndf_question['Suffix'][32]='IDE_None'\ndf_question['Suffix'][33]='IDE_Other'\ndf_question['Suffix'][43]='Google Cloud Notebooks'\ndf_question['Suffix'][49]='Hosted_Notebook_None'\ndf_question['Suffix'][50]='Hosted_Notebook_Other'\ndf_question['Suffix'][51]='Computing_platform'\ndf_question['Suffix'][56]='Special_Hardware_None'\ndf_question['Suffix'][57]='Special_Hardware_Other'\ndf_question['Suffix'][58]='TPU_Usage_Time'\ndf_question['Suffix'][69]='Vis_Tool_None'\ndf_question['Suffix'][70]='Vis_Tool_Other'\ndf_question['Suffix'][71]='ML_Exp'\ndf_question['Suffix'][72]='Sk_Learn'\ndf_question['Suffix'][82]='H2O_3'\ndf_question['Suffix'][86]='PyTorch_Light'\ndf_question['Suffix'][88]='ML_Framework_None'\ndf_question['Suffix'][89]='ML_Framework_Other'\ndf_question['Suffix'][100]='Algo_None'\ndf_question['Suffix'][101]='Algo_Other'\ndf_question['Suffix'][102]='CV2_Pil_SKImg'\ndf_question['Suffix'][107]='Comp_vision_None'\ndf_question['Suffix'][108]='Comp_vision_Other'\ndf_question['Suffix'][113]='NLP_None'\ndf_question['Suffix'][114]='NLP_Other'\ndf_question['Suffix'][115]='Current_Industry'\ndf_question['Suffix'][116]='Company_Emp_size'\ndf_question['Suffix'][117]='DS_Engg_size'\ndf_question['Suffix'][118]='ML_implemented_in Current_company?'\ndf_question['Suffix'][119]='Role_Data_Analyst'\ndf_question['Suffix'][120]='Role_Data_Engineer'\ndf_question['Suffix'][121]='Role_build_ML_Prototypes_Newareas'\ndf_question['Suffix'][122]='Role_ML_Engineer'\ndf_question['Suffix'][123]='Role_ML_Model_Improvement'\ndf_question['Suffix'][124]='Role_ML_Research'\ndf_question['Suffix'][125]='Role_None'\ndf_question['Suffix'][126]='Role_Other'\ndf_question['Suffix'][127]='Salary'\ndf_question['Suffix'][128]='Exp_at_home_in_ML'\ndf_question['Suffix'][139]='Cloud_Computing_None'\ndf_question['Suffix'][140]='Cloud_Computing_Other'\ndf_question['Suffix'][141]='Familiar_Cloud'\ndf_question['Suffix'][145]='Regular_Cloud_None'\ndf_question['Suffix'][144]='Regular_Cloud_Other'\ndf_question['Suffix'][153]='Regular_DStorage_None'\ndf_question['Suffix'][154]='Regular_DStorage_Other'\ndf_question['Suffix'][163]='Managed_ML_Prod_None'\ndf_question['Suffix'][164]='Managed_ML_Prod_Other'\ndf_question['Suffix'][184]='Reg_Big_Data_tool_None'\ndf_question['Suffix'][185]='Reg_Big_Data_tool_Other'\ndf_question['Suffix'][186]='Big_Data_tool_MostOften'\ndf_question['Suffix'][202]='Busines_intl_tool_None'\ndf_question['Suffix'][203]='Busines_intl_tool_Other'\ndf_question['Suffix'][204]='Busines_intl_tool_Mostoften'\ndf_question['Suffix'][211]='Auto_ML_tool_None'\ndf_question['Suffix'][212]='Auto_ML_tool_Other'\ndf_question['Suffix'][219]='Auto_ML_tool_regular_None'\ndf_question['Suffix'][220]='Auto_ML_tool_regular_Other'\ndf_question['Suffix'][231]='ML_Experiment_aid_tool_None'\ndf_question['Suffix'][232]='ML_Experiment_aid_tool_Other'\ndf_question['Suffix'][242]='Public_share_app_Other'\ndf_question['Suffix'][253]='Learning_Platform_None'\ndf_question['Suffix'][254]='Learning_Platform_Other'\ndf_question['Suffix'][255]='Main_Analytical_Tool'\ndf_question['Suffix'][266]='Media_Source_None'\ndf_question['Suffix'][267]='Media_Source_Other'\ndf_question['Suffix'][278]='Future_cld_compu_platform_None'\ndf_question['Suffix'][279]='Future_cld_compu_platform_Other'\ndf_question['Suffix'][283]='which_Cloud_Expert_in_2yrs_None'\ndf_question['Suffix'][284]='which_Cloud_Expert_in_2yrs_Other'\ndf_question['Suffix'][291]='which_DataS_tool_Expert_in_2yrs_None'\ndf_question['Suffix'][292]='which_DataS_tool_Expert_in_2yrs_Other'\ndf_question['Suffix'][301]='Manage_ML_tool_Expert_in_2yrs_None'\ndf_question['Suffix'][302]='Manage_ML_tool_Expert_in_2yrs_Other'\ndf_question['Suffix'][322]='BigData_Tool_Expert_in_2yrs_None'\ndf_question['Suffix'][323]='BigData_Tool_Expert_in_2yrs_Other'\ndf_question['Suffix'][339]='Busi_int_Tool_Expert_in_2yrs_None'\ndf_question['Suffix'][340]='Busi_int_Tool_Expert_in_2yrs_Other'\ndf_question['Suffix'][347]='AutoML_Tool_Expert_in_2yrs_None'\ndf_question['Suffix'][348]='AutoML_Tool_Expert_in_2yrs_Other'\ndf_question['Suffix'][355]='Specific_AutoML_Tool_Expert_in_2yrs_None'\ndf_question['Suffix'][356]='Specific_AutoML_Tool_Expert_in_2yrs_Other'\ndf_question['Suffix'][367]='Specific_ML_Experi_Tool_Expert_in_2yrs_None'\ndf_question['Suffix'][368]='Specific_ML_Experi_Tool_Expert_in_2yrs_Other'","cf5d95df":"df_question['Primary_group'][0:7]='Indiv_Detail'\ndf_question['Primary_group'][7:21]='Language'\ndf_question['Primary_group'][21:34]='IDE'\ndf_question['Primary_group'][34:51]='Hosted_Notebook'\ndf_question['Primary_group'][52:58]='Special_Hardware'\ndf_question['Primary_group'][59:71]='Visualization'\ndf_question['Primary_group'][72:90]='ML_Library'\ndf_question['Primary_group'][90:102]='ML_Algo'\ndf_question['Primary_group'][102:109]='Vision'\ndf_question['Primary_group'][109:115]='NLP'\ndf_question['Primary_group'][115]='Peronal'\ndf_question['Primary_group'][119:129]='Indiv_Detail'\ndf_question['Primary_group'][129:164]='Cloud'\ndf_question['Primary_group'][165:187]='DB'\ndf_question['Primary_group'][187:205]='Busniess_Tool'\ndf_question['Primary_group'][205:233]='ML'\ndf_question['Primary_group'][233:243]='Public_Sharing_platform'\ndf_question['Primary_group'][243:255]='Learning_platform'\ndf_question['Primary_group'][256:268]='Learning_platform'\ndf_question['Primary_group'][268:303]='Cloud'\ndf_question['Primary_group'][303:324]='DB'\ndf_question['Primary_group'][324:341]='Busniess_Tool'\ndf_question['Primary_group'][341:368]='ML'","22ff2f57":"df_question.head(10)","ed68c164":"df_question['Primary_group'].unique()","252eea45":"#df.iloc[0]=df_question['Quest'] #replacing all the long questions into short ","72291808":" #Replacing long country names to short for ploting and code convenience\ndf['Q3']=df['Q3'].replace('United States of America','USA')\ndf['Q3']=df['Q3'].replace('Iran, Islamic Republic of...','Iran')\ndf['Q3']=df['Q3'].replace('United Kingdom of Great Britain and Northern Ireland','UK')\ndf['Q3']=df['Q3'].replace('Hong Kong (S.A.R.)','HKong')\ndf['Q3']=df['Q3'].replace('United Arab Emirates','UAE')\ndf['Q4']=df['Q4'].replace('Some college\/university study without earning a bachelor\u2019s degree','College')\ndf['Q4']=df['Q4'].replace('No formal education past high school','High_School')\ndf['Q4']=df['Q4'].replace('I prefer not to answer','Not to Answer')\ndf['Q4']=df['Q4'].replace('No formal education past high school','High_School')","a0dc2f72":"df_question.head()","8dbc7612":"# import the modules we'll need\nfrom IPython.display import HTML\nimport pandas as pd\nimport numpy as np\nimport base64\n\n# function that takes in a dataframe and creates a text link to  \n# download it (will only work for files < 2MB or so)\ndef create_download_link(df, title = \"Download CSV file\", filename = \"2021_Survey_question_DF.csv\"):  \n    csv = df.to_csv()\n    b64 = base64.b64encode(csv.encode())\n    payload = b64.decode()\n    html = '<a download=\"{filename}\" href=\"data:text\/csv;base64,{payload}\" target=\"_blank\">{title}<\/a>'\n    html = html.format(payload=payload,title=title,filename=filename)\n    return HTML(html)\n\n\n# create a link to download the dataframe\ncreate_download_link(df_question)","49bb5aec":"###### Primary grouping of question"}}