{"cell_type":{"e58e04eb":"code","ee8e59c8":"code","537298c6":"code","aa4841a9":"code","8450ca0f":"code","cb51a9ab":"code","b8e00835":"code","a68c66ef":"code","9c090489":"code","fa9a3f20":"code","213dde89":"code","a4c9aabe":"code","276b05a1":"code","d19fb84d":"code","04d1e047":"code","75e7b148":"code","ab098b71":"code","88e0960b":"code","8643061b":"code","6aadf392":"code","02805f18":"markdown","bcb6c0a8":"markdown","3ef060a7":"markdown","8a8b7bc4":"markdown","ff7b75bf":"markdown","169750b9":"markdown","c741ad8e":"markdown","f19d9b03":"markdown","7b67f551":"markdown","0b2ef38c":"markdown","09ebd14f":"markdown","763b80d3":"markdown","e9fde6b3":"markdown"},"source":{"e58e04eb":"import pandas as pd\nimport numpy as np\nfrom numpy import array\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\n\nfrom keras.preprocessing.text import one_hot\nfrom keras.preprocessing.sequence import pad_sequences\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import Flatten\nfrom keras.layers.embeddings import Embedding\nfrom keras.preprocessing.text import Tokenizer\nfrom keras.preprocessing.sequence import pad_sequences\n","ee8e59c8":"df = pd.read_csv('..\/input\/textdb3\/fake_or_real_news.csv') # Load data into DataFrame\ndf.head()","537298c6":"df.info()","aa4841a9":"# Pre-Processing\ndf['text'] = df['text'].apply(lambda x: x.lower())\ndf.head()","8450ca0f":"# Pre-Processing\ndf['text'] = df['text'].str.replace('[^\\w\\s]','')\ndf.head()","cb51a9ab":"df.iloc[0,2]","b8e00835":"\nmax_features = 3000 # Vocabulary Size\n\ntokenizer = Tokenizer(num_words=max_features, split=' ')\ntokenizer.fit_on_texts(df['text'].values)\nX = tokenizer.texts_to_sequences(df['text'].values)","a68c66ef":"print(X[:1])","9c090489":"max_length = 2000\n# Padding\nX = pad_sequences(X,maxlen = max_length, padding = 'post')","fa9a3f20":"print(X[:1])","213dde89":"#y = df.label\ny = pd.get_dummies(df['label']).values","a4c9aabe":"y[:5]","276b05a1":"df.label[:5]","d19fb84d":"\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25,random_state=44)\n\nprint(X_train.shape,y_train.shape)\nprint(X_test.shape,y_test.shape)","04d1e047":"# define the model\nmodel = Sequential()\nmodel.add(Embedding(max_features, 24, input_length=max_length))\nmodel.add(Flatten())\nmodel.add(Dense(32,activation=\"relu\"))\nmodel.add(Dense(2, activation='sigmoid'))\n\n# compile the model\nmodel.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n\n# summarize the model\nprint(model.summary())\n","75e7b148":"# fit the model\nhistory = model.fit(X_train, \n          y_train, \n          epochs=5,\n          batch_size=32,\n          verbose=1)\n","ab098b71":"# evaluate the model\nloss, accuracy = model.evaluate(X_test, y_test, verbose=1)\nprint('Accuracy: %f' % (accuracy*100))\n","88e0960b":"import matplotlib.pyplot as plt","8643061b":"plt.plot(history.history[\"loss\"])","6aadf392":"plt.plot(history.history[\"accuracy\"])","02805f18":"# 2.3 Processing Target","bcb6c0a8":"# Imports","3ef060a7":"# 2.2 Padding","8a8b7bc4":"***Russell C.- 2021***","ff7b75bf":"# 4. Training","169750b9":"# 2.4 Train-Test Split","c741ad8e":"### See loss and accuracy plot","f19d9b03":"# Fake News Classifier with Deep Learning","7b67f551":"# 2.1 Tokenization","0b2ef38c":"# 3. Design Deep Neural Network Model","09ebd14f":"# 5. Evaluation","763b80d3":"# 1. Load Data","e9fde6b3":"# 2. Pre-processing"}}