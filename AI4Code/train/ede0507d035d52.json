{"cell_type":{"3b9fdc1e":"code","f3f16f18":"code","0a00b924":"code","83806409":"code","c9c23c8e":"code","937ae1f4":"code","c1845cbd":"code","19bfc98c":"code","0226519f":"code","f57900ab":"code","860ab6c6":"markdown","b514d894":"markdown","b697c23c":"markdown","238754a1":"markdown","e9b51a0d":"markdown","d5b95a98":"markdown","a5c758ff":"markdown","2bfdc570":"markdown","a828d5fd":"markdown","4020899d":"markdown","251ae5ff":"markdown","37174388":"markdown"},"source":{"3b9fdc1e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n%matplotlib inline\nfrom matplotlib import pyplot as plt\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n\nimport os\nfor dirname, _, filenames in os.walk('..\/input\/time-series-analysis-datasets\/'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n#load insurance data from csv into dataframe \ndf_insurance = pd.read_csv('..\/input\/insurance\/insurance.csv')","f3f16f18":"df_insurance.shape","0a00b924":"df_insurance.head(5)","83806409":"df_insurance.describe()","c9c23c8e":"# build Features X and target Variable y \nX = df_insurance[['age']].values\ny = df_insurance['charges'].values\n\n# check shape an first 5 rows from X --> age\nprint(X.shape, y.shape)\nprint(X[0:5])","937ae1f4":"from sklearn.linear_model import LinearRegression\n# initiate model  \nmodel = LinearRegression()\n# handover data in model and learn\nmodel.fit(X,y)\n# get the intercept of the linear funktion \nintercept = model.intercept_\n# geht the coeficient for age of the Model\ncoef = model.coef_\n\n# set age limits for prediction \ny_pred = model.predict([[18], [65]])\n\nprint('intercept {:.3f}, coef.age {} '.format(intercept, coef))\nprint('predictions: ', y_pred)","c1845cbd":"from sklearn.metrics import mean_absolute_error, r2_score\n# variable to handover input, model result comparison   \ny_pred = model.predict(X)\n\n# calculate mean_absoulte error and r_square to prediction with train data and trained data\nmean_absolute_error = mean_absolute_error(y, y_pred)\nr2 = r2_score(y, y_pred)\n\nprint('mean absolute error: {:.3f}, r2: {:3f}'.format(mean_absolute_error, r2))","19bfc98c":"# write new train dataset\nX = df_insurance[['age', 'bmi', 'children']].values\ny = df_insurance['charges'].values\n\n# import train test split functions\nfrom sklearn.model_selection import train_test_split\n\n# split the trainset in by 80% train and 20% test set  \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state=11)\n\n# check the shape of the splittes sets\nX_train.shape, X_test.shape, y_train.shape, y_test.shape  ","0226519f":"model = LinearRegression()\n# handover data in model and learn\nmodel.fit(X_train, y_train)\n# get the intercept of the linear funktion \nintercept = model.intercept_\n# geht the coeficient for age of the Model\ncoef = model.coef_\n\n# variable for model prediction\ny_test_pred = model.predict(X_test)\n\n#Evaluation over test data \nfrom sklearn.metrics import mean_absolute_error, r2_score\n\n# calculate mean_absoulte error and r_square to prediction with train data and trained data\nmean_absolute_error = mean_absolute_error(y_test, y_test_pred)\nr2 = r2_score(y_test, y_test_pred)\n\nprint('intercept: {:.3f}, coefs.: {}'.format(intercept, coef))\nprint('mean absolute error: {:.3f}, r2: {:.3f}'.format(mean_absolute_error, r2))","f57900ab":"costs_40 = model.predict([[40, 20.1, 1]])\nprint('costs caused by a 40 years old person with a bmi of 20.1 and one child: {:.2f}\u20ac p.a.'.format(costs_40[0]))\ncosts_40 = model.predict([[35, 20.1, 2]])\nprint('costs caused by a 40 years old person with a bmi of 20.1 and two childs: {:.2f}\u20ac p.a.'.format(costs_40[0]))","860ab6c6":"### Expand Train Set and split in Train-set and Test-set \nTo get more precise precise result for the cost expenses prediction, features like the 'bmi' (body mass index) and the owner ship of 'children' will added to the train data set.\n\nFor more precise evaluation results and to avoid overfitting results, the trainset will split of in Train-set and Test-set. \n","b514d894":"## Exploratory Analysis","b697c23c":"### Train and Evaluate the Model with the 20% Test-set","238754a1":"### Training and Prediction of the Linear Regression Model\nThe Linear Regression Model class is from the scikit-learn library. \nIt will be trained on the on the 'age' and the 'charges'. The usage the key values 'perception' and 'coefficient', helps to understand the value of the training. The 'age' will be limited by a range of 18 years to 65 years for a more realistic prediction.      ","e9b51a0d":"*costs caused by a 40 years old person with a bmi of 20.1 and one child: 9949.96\u20ac p.a.* <br>\n*costs caused by a 40 years old person with a bmi of 20.1 and two childs: 9202.55\u20ac p.a.*<br>\nThere is some linearity recognisable. It leads to some point of interpretation that person with a high a age, an high bmi and a high number of children causes less insurance expenses. ","d5b95a98":"*intercept: -7262.450, coefs.: [246.83315449 330.9616626  686.75706631]\nmean absolute error: 9057.372, r2: 0.083* <br>\nReturn of 3 coefficients in the order 'age', 'bmi', 'children'. <br><br>\n\nThe R2 score decreases from 9% to 8%. and the mean absolute error increases from 9055\u20ac to 9057\u20ac by 2\u20ac. \n\nMaybe the the feastures 'age', 'bmi' and numbers of 'child' doesnt have a big impact of the estimation from 'charges' or the features corellate with the 'age'.  ","a5c758ff":"## Linear Regression with Scikit Learn\nImport insurance dataset to predict insurance costs of a person in a year. First make prediction the feature 'age' and the 'charges'. \ninclude the csv in a pandas dataframe and extract and them in numpy arrays. The Linear Regression Model need a numpy array format for data input. ","2bfdc570":"# ML Basics - Predicting Insurance Costs with Linear Regression\nThis Notebook is about the training of a Linear-Regression-Model on insurance data, to predict the cost expenses of a person per year.","a828d5fd":"### Evaluate the Linear Regression Model\nTo Evaluate the treining ofthe the Model, the mean absolute error and the r2 score will be calcualtated to get insights about the variance and the error of the variance.    ","4020899d":"### Sources: \n* https:\/\/github.com\/PacktPublishing\/Practical-Time-Series-Analysis\n* Hirschle, Jochen. Machine Learning f\u00fcr Zeitreihen (German Edition) (S.94). Carl Hanser Verlag GmbH & Co. KG. Kindle-Version. Hirschle, Jochen. Machine Learning f\u00fcr Zeitreihen (German Edition) (S.94). Carl Hanser Verlag GmbH & Co. KG. Kindle-Version. \n* https:\/\/www.kaggle.com\/mirichoi0218\/insurancehttps:\/\/www.kaggle.com\/mirichoi0218\/insurance\n","251ae5ff":"*mean absolute error: 9055.150, <br> \nr2: 0.0894*\n\nThe error of the model prediction is 9055 \u20ac p.a. . Calculating the the avarage over the training data would cause an error of 13.231 \u20ac p.a. \n\nThe r2_score of 0.0894 implies a 9% variance of the costs caused by the age  ","37174388":"## Load and Perapare Datasets   \nImport of standard libraries and basic funtions to include data sets in the notebook."}}