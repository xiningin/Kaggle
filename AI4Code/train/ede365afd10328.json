{"cell_type":{"da9e9fce":"code","9a847148":"code","6cde446f":"code","9e450487":"code","f39f0d5d":"code","8826f861":"code","6d680ea5":"code","918066f4":"code","6135615e":"code","fe24eda8":"code","78453ade":"code","63b8ba6a":"code","5fb7c183":"code","8c053829":"code","d9363f6b":"code","318b9ad2":"markdown","75a601ca":"markdown","0a4e9971":"markdown","f38c24ac":"markdown","d053162f":"markdown","1926220a":"markdown","abca57a8":"markdown"},"source":{"da9e9fce":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nprint('Priyatama is ready!')","9a847148":"train = pd.read_csv('..\/input\/breast-cancer-detection\/train.csv')\ntest = pd.read_csv('..\/input\/breast-cancer-detection\/test.csv')","6cde446f":"train.head()","9e450487":"test.head()","f39f0d5d":"# Strip column names of all spaces and add underscore wherever required.\n\ntrain.columns = ['_'.join(col.split(' ')).lower() for col in train.columns]\ntest.columns = ['_'.join(col.split(' ')).lower() for col in test.columns]","8826f861":"print('Columns in train dataset are as follows:' '\\n')\na = (train.columns)\nprint(*a, sep = \", \")\nprint('\\n','$'*100,'\\n')\nprint('Columns in test dataset are as follows:' '\\n')\nb = (test.columns)\nprint(*b, sep = \", \")","6d680ea5":"train = train.drop('unnamed:_32', axis = 1)\ntest = test.drop('unnamed:_32', axis = 1)","918066f4":"print('Object type columns in Train dataset as follows:' '\\n')\nprint(train.select_dtypes(exclude = 'float64'))\nprint('\\n','$' * 100, '\\n')\nprint('Object type columns in Test dataset as follows:' '\\n')\nprint(test.select_dtypes(exclude = 'float64'))","6135615e":"train.diagnosis.value_counts().plot(kind = 'bar')","fe24eda8":"print('Null values in Train dataset are as follows:' '\\n')\na = train.isnull().sum()\nprint(a[a>0])\nprint('\\n','o' * 80, '\\n')\nprint('Null values in Train dataset are as follows:' '\\n')\nb = test.isnull().sum()\nprint(b[b>0])","78453ade":"corr = train.corr()\nfig, ax = plt.subplots(figsize=(7,7))\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values)","63b8ba6a":"from sklearn.model_selection import train_test_split","5fb7c183":"X = train.drop(['diagnosis','id'], axis = 1)\ny = train.diagnosis","8c053829":"from sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nX_train = ss.fit_transform(X_train)\nX_valid = ss.transform(X_valid)","d9363f6b":"from sklearn.linear_model import LogisticRegression\nlor = LogisticRegression()\nlor.fit(X_train, y_train)\nlor.score(X_valid, y_valid)","318b9ad2":"# 3. Cleaning the data.","75a601ca":"## 4.1 Test Train Split.","0a4e9971":"# 2. Reading the datasets. ","f38c24ac":"# 1. Setting up the Coding Environment ","d053162f":"## 4.2 Feature Scaling.\n","1926220a":"# 4. Model Designing.","abca57a8":"## 4.3 Logistic Regression."}}