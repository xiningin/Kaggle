{"cell_type":{"a794dec9":"code","24513246":"code","f08bc7ed":"code","1faf0cfe":"code","f8a112a2":"code","0fc4064d":"code","26f9ed7a":"code","c01a4b3a":"code","06425b4c":"code","756007f0":"code","b8e8fd02":"code","394b64bd":"code","627c1d2b":"code","59c1a56a":"code","c119ee5d":"code","76651344":"code","de0b71f2":"code","4383523b":"code","65360a02":"code","064ef658":"code","b2d71aa6":"code","8adbdf54":"code","561a3767":"code","2eb466fc":"code","785351d7":"code","1c1090ea":"code","39773c0d":"code","e68c0b26":"code","7ccc7006":"code","eb8412ad":"code","6c85b45a":"markdown","8bfbf5e9":"markdown","11596a8e":"markdown","ffb444fc":"markdown"},"source":{"a794dec9":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom xgboost import XGBClassifier\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler, MinMaxScaler\nfrom sklearn.model_selection import train_test_split, cross_val_score, KFold, GridSearchCV\nfrom sklearn.metrics import confusion_matrix, accuracy_score","24513246":"df = pd.read_csv('..\/input\/loan-prediction-based-on-customer-behavior\/Training Data.csv')","f08bc7ed":"df.head()","1faf0cfe":"sns.heatmap(df.corr(), annot=True);","f8a112a2":"df.info()","0fc4064d":"df['Risk_Flag'].value_counts()","26f9ed7a":"sns.countplot(data=df, x='Risk_Flag')","c01a4b3a":"sns.countplot(data=df, x='Married\/Single')","06425b4c":"sns.countplot(data=df, x='House_Ownership', hue='Married\/Single')","756007f0":"sns.countplot(data=df, x='Car_Ownership', hue='Married\/Single')","b8e8fd02":"plt.figure(figsize=(12,12))\nsns.countplot(data=df, y='Profession', order=df['Profession'].value_counts().index)","394b64bd":"sns.histplot(df['Income'], bins=10)","627c1d2b":"sns.countplot(data=df, x='Married\/Single', hue='Risk_Flag')","59c1a56a":"# Create New Feature, Has the applicant ever worked anywhere other than his current job?\ndef chprof(df):\n    return 0 if df==0 else 1\n\ndf['Have_Changed_Profession'] = df['Experience'] - df['CURRENT_JOB_YRS']\ndf['Have_Changed_Profession'] = df['Have_Changed_Profession'].apply(chprof)","c119ee5d":"df.head()","76651344":"# Create feature based on Experience\nranges = [-1,2,5,10,20]\ncat = ['Entry','Intermediate','Mid','Senior']\ndf['ExpLevel'] = pd.cut(df['Experience'],bins=ranges, labels=cat).astype('string')","de0b71f2":"df['Experience'].unique()","4383523b":"df.head()","65360a02":"minmax = MinMaxScaler()\ndf['Income']=minmax.fit_transform(df[['Income']])","064ef658":"# Create feature based on Income\nranges = [-1.0,0.4,0.7,1.0]\ncat = ['Low','Mid','High']\ndf['IncLevel'] = pd.cut(df['Income'],bins=ranges, labels=cat).astype('string')","b2d71aa6":"df.head()","8adbdf54":"# Label Encoder\ntransform_features = ['Married\/Single', 'House_Ownership', 'Car_Ownership', 'Profession', 'CITY', 'STATE', 'ExpLevel','IncLevel']\nfor feature in transform_features:        \n    df[feature] = LabelEncoder().fit_transform(df[feature])","561a3767":"df.head()","2eb466fc":"X = df.drop(columns='Risk_Flag')\nY = df['Risk_Flag']","785351d7":"X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=48, stratify=Y)","1c1090ea":"xgbc = XGBClassifier()","39773c0d":"xgbc.fit(X_train, y_train)","e68c0b26":"y_pred = xgbc.predict(X_test)","7ccc7006":"confusion_matrix(y_pred, y_test)","eb8412ad":"accuracy_score(y_pred, y_test)","6c85b45a":"# EDA","8bfbf5e9":"# Modelling","11596a8e":"# Feature Engineering","ffb444fc":"# Split data"}}