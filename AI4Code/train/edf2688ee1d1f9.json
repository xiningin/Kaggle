{"cell_type":{"d46f7bf9":"code","34eafa0f":"code","a6fc5357":"code","fc21cf3d":"code","0aa6c9bf":"code","a8155b99":"code","e2dfbdd2":"code","9e628064":"code","08cc4b5a":"code","83abf862":"code","dc463ae2":"code","2c46cf05":"code","43802e92":"markdown","b54f2486":"markdown","54511de2":"markdown","9b7e08c5":"markdown","a1987561":"markdown","36f2fbb4":"markdown","904673cb":"markdown","dbbae8ea":"markdown","cea7c9d0":"markdown","520613c8":"markdown","dd1db591":"markdown","5929b5d9":"markdown","7847b770":"markdown","d43036c0":"markdown","2a097a17":"markdown"},"source":{"d46f7bf9":"import numpy as np \nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename)) \n        \nimport warnings\nwarnings.filterwarnings(\"ignore\")        \nimport matplotlib\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\n","34eafa0f":"aug_train = pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')\naug_test = pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_test.csv')\naug_train.info()","a6fc5357":"aug_train['last_new_job'] = aug_train['last_new_job'].apply(lambda x: 'Never' if x == 'never' else x) #just reads nicer\naug_train['enrolled_university'][aug_train['enrolled_university'] == 'no_enrollment'] = 'No Enrollment' #just reads nicer\naug_train['company_size'] = aug_train['company_size'].apply(lambda x: '10-49' if x == '10\/49' else x) #diff replacement method\n\naug_train['experience'] = aug_train['experience'].apply(lambda x: '0' if x == '<1' else x)\naug_train['experience'] = aug_train['experience'].apply(lambda x: '20' if x == '>20' else x)\n\n\naug_train['company_size'].fillna('0',inplace=True)\naug_train['company_type'].fillna('Unknown',inplace=True)\naug_train['major_discipline'].fillna('Unknown',inplace=True)\naug_train['gender'].fillna('Not provided',inplace=True)\n\n\n# Repeat steps on Test set\n\naug_test['last_new_job'] = aug_test['last_new_job'].apply(lambda x: 'Never' if x == 'never' else x) #just reads nicer\naug_test['enrolled_university'][aug_test['enrolled_university'] == 'no_enrollment'] = 'No Enrollment' #just reads nicer\naug_test['company_size'] = aug_test['company_size'].apply(lambda x: '10-49' if x == '10\/49' else x) #diff replacement method\n\naug_test['experience'] = aug_test['experience'].apply(lambda x: '0' if x == '<1' else x)\naug_test['experience'] = aug_test['experience'].apply(lambda x: '20' if x == '>20' else x)\n\naug_test['company_size'].fillna('0',inplace=True)\naug_test['company_type'].fillna('Unknown',inplace=True)\naug_test['major_discipline'].fillna('Unknown',inplace=True)\naug_test['gender'].fillna('Not provided',inplace=True)\n\n\n\n# This is what I mean with respect to the gender categories:\n\naug_train['target'].groupby(aug_train['gender']).mean()\n\n# I will drop the remaining missing data\naug_train.dropna(inplace=True)\naug_test.dropna(inplace=True)\n\n# Converting objects to integers\n\naug_train['experience'] = aug_train['experience'].astype(str).astype(int)\naug_test['experience'] = aug_test['experience'].astype(str).astype(int)\n\naug_train['training_hours'] = aug_train['training_hours'].astype(str).astype(int)\naug_test['training_hours'] = aug_test['training_hours'].astype(str).astype(int)","fc21cf3d":"aug_train_one_hot = pd.get_dummies(aug_train, columns = ['city',\n                                                         'gender',\n                                                         'relevent_experience',\n                                                         'enrolled_university',\n                                                         'education_level',\n                                                         'major_discipline',\n                                                         'company_size',\n                                                         'company_type',\n                                                         'last_new_job'])\n\ntrain_input = aug_train_one_hot.drop(['enrollee_id','target'], axis=1).to_numpy()\ntrain_target = aug_train_one_hot['target'].to_numpy()\nprint(train_input.shape, train_target.shape)","0aa6c9bf":"columns_list = aug_train_one_hot.drop(['enrollee_id','target'], axis=1).columns.values.tolist()","a8155b99":"# from sklearn.preprocessing import StandardScaler\n# ss = StandardScaler()\n# ss.fit(train_input)\n# train_input = ss.transform(train_input)","e2dfbdd2":"from sklearn.tree import DecisionTreeClassifier\ndt = DecisionTreeClassifier(max_depth=2, random_state=42)\ndt.fit(train_input, train_target)\nprint(dt.score(train_input, train_target))","9e628064":"import matplotlib.pyplot as plt\nfrom sklearn.tree import plot_tree\nplt.figure(figsize=(20,10))\nplot_tree(dt, filled=True, feature_names=columns_list, fontsize=15)\nplt.show()","08cc4b5a":"print(dt.feature_importances_)","83abf862":"import seaborn as sns\nsns.set_theme(style=\"darkgrid\")\n\ng = sns.jointplot(x=\"training_hours\", y=\"city_development_index\", data=aug_train,\n                  kind=\"kde\", \n                  hue = \"target\",\n                  color=\"b\", height=10)","dc463ae2":"CDI = pd.DataFrame(\n    {'City':['Abidjan', 'Accra', 'Antananarivo', 'Bangui', 'Banjul', 'Brazzaville', 'Bujumbura', 'Bulawayo', 'Chegutu', 'Conakry', 'Douala', 'Entebbe', \n             'Gweru', 'Harare', 'Ibadan', 'Jinja', 'Kigali', 'Kinshasa', 'Kisumu', 'Kumasi', 'Lagos', 'Lilongwe', 'Lome', 'Mombasa', 'Monrovia', 'Nairobi', 'Niamey', \n             'Nouakchott', 'Aden', 'Algiers', 'Amman', 'Baghdad', 'Casablanca', 'Damascus', 'Doha', 'Gaza', 'Kuwait', 'Muscat', 'Rabat', 'Sana\\'a', 'Tripoli', \n             'Tunis', 'Apia', 'Bangalore', 'Bangkok', 'Cebu', 'Chiang Mai', 'Chittagong', 'Colombo', 'Dhaka', 'Hanam', 'Hanoi', 'Hohhot', 'Hong Kong', 'Jakarta', \n             'Kathmandu', 'Lahore', 'Mandaluyong', 'Medan', 'Naga', 'Penang', 'Phnom Penh', 'Port Moresby', 'Pusan', 'Semarang', 'Seoul', 'Singapore', 'Surabaya', \n             'Suva', 'Sylhet', 'Tangail', 'Ulaanbaatar', 'Vientiane', 'Yangon', 'Amal', 'Ankara', 'Aversa', 'Basel', 'Hull', 'Madrid', 'Melbourne', 'Pamplona', 'Stockholm', \n             'Umea', 'Armenia', 'Asuncion', 'Belem', 'Belize', 'Bridgetown', 'Buenos Aires', 'Cajamarca', 'Cienfuegos', 'Ciudad Habana', 'Ciudad Juarez', 'Colon', 'Cordoba', \n             'Cuenca', 'Gran Concepcion', 'Guayaquil', 'Huanuco', 'Huaras', 'Icapui', 'Iquitos', 'Kingston', 'Leon', 'Lima', 'Manta', 'Maranguape', 'Marinilla', 'Medellin', \n             'Montego Bay', 'Montevideo', 'Port of Spain', 'Porto Alegre', 'Puyo', 'Quetzaltenango', 'Quito', 'Recife', 'Rio de Janeiro', 'Rosario', 'San Salvador', 'Santa Clara', \n             'Santa Cruz de la Sierra', 'Santiago de Chile', 'Santiago de los Caballeros', 'Santo Andre', 'Tacna', 'Tena', 'Tome', 'Tumbes', 'Valparaiso', 'Vina del mar', \n             'Astrakhan', 'Belgorod', 'Belgrad', 'Bishkek', 'Bourgas', 'Brno', 'Bydgoszcz', 'Chisinau', 'Gdansk', 'Katowice', 'Kostroma', 'Ljubljana', 'Moscow', \n             'Nizhny Novgorod', 'Novomoscowsk', 'Omsk', 'Poznan', 'Prague', 'Pushkin', 'Riga', 'Sarajevo', 'Sofia', 'Surgut', 'Tallinn', 'Tbilisi', 'Troyan', \n             'Veliko Tarnovo', 'Veliky Novgorod', 'Vilnius'],\n     'Country':['C\u00f4te d\\'Ivoire', 'Ghana', 'Madagascar', 'Central African Republic', 'Gambia', 'Congo', 'Burundi', 'Zimbabwe', 'Zimbabwe', 'Guinea', 'Cameroon', 'Uganda', \n                'Zimbabwe', 'Zimbabwe', 'Nigeria', 'Uganda', 'Rwanda', 'Congo, Dem. Rep.', 'Kenya', 'Ghana', 'Nigeria', 'Malawi', 'Togo', 'Kenya', 'Liberia', 'Kenya', \n                'Niger', 'Mauritania', 'Yemen', 'Algeria', 'Jordan', 'Iraq', 'Morocco', 'Syria', 'Qatar', 'Palestine', 'Kuwait', 'Oman', 'Morocco', 'Yemen', 'Libya', \n                'Tunisia', 'Samoa, Western', 'India', 'Thailand', 'Philippines', 'Thailand', 'Bangladesh', 'Sri Lanka', 'Bangladesh', 'Korea, Rep. Of', 'Vietnam', \n                'Central African Republic', 'China', 'Indonesia', 'Nepal', 'Pakistan', 'Philippines', 'Indonesia', 'Philippines', 'Malaysia', 'Cambodia', 'Papua New Guinea', \n                'Korea, Rep. Of', 'Indonesia', 'Korea, Rep. Of', 'Singapore', 'Indonesia', 'Fiji', 'Bangladesh', 'Bangladesh', 'Mongolia', 'Laos', 'Myanmar', 'Sweden', \n                'Turkey', 'Italy', 'Switzerland', 'Canada', 'Spain', 'Australia', 'Spain', 'Sweden', 'Sweden', 'Colombia', 'Paraguay', 'Brazil', 'Belize', 'Barbados', \n                'Argentina', 'Peru', 'Cuba', 'Cuba', 'Mexico', 'Panama', 'Argentina', 'Ecuador', 'Chile', 'Ecuador', 'Peru', 'Peru', 'Brazil', 'Peru', 'Jamaica', \n                'Nicaragua', 'Peru', 'Ecuador', 'Brazil', 'Colombia', 'Colombia', 'Jamaica', 'Uruguay', 'Trinidad and Tobago', 'Brazil', 'Ecuador', 'Guatemala', \n                'Ecuador', 'Brazil', 'Brazil', 'Argentina', 'El Salvador', 'Cuba', 'Bolivia', 'Chile', 'Dominican Republic', 'Brazil', 'Peru', 'Ecuador', \n                'Chile', 'Peru', 'Chile', 'Chile', 'Russian Federation', 'Russian Federation', 'Yugoslavia', 'Kyrgyzstan', 'Bulgaria', 'Czech Republic', \n                'Poland', 'Moldova', 'Poland', 'Poland', 'Russian Federation', 'Slovenia', 'Russian Federation', 'Russian Federation', 'Russian Federation', \n                'Russian Federation', 'Poland', 'Czech Republic', 'Russian Federation', 'Latvia', 'Bosnia and Herzegovina', 'Bulgaria', 'Russian Federation', 'Estonia', \n                'Georgia', 'Bulgaria', 'Bulgaria', 'Russian Federation', 'Lithuania'],\n     'Region':['Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', \n               'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', 'Africa', \n               'Arab States', 'Arab States', 'Arab States', 'Arab States', 'Arab States', 'Arab States', 'Arab States', 'Arab States', 'Arab States', 'Arab States', \n               'Arab States', 'Arab States', 'Arab States', 'Arab States', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', \n               'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', \n               'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', \n               'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'Asia-Pacific', 'HIC', 'HIC', 'HIC', 'HIC', 'HIC', 'HIC', 'HIC', 'HIC', 'HIC', \n               'HIC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', \n               'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', 'LAC', \n               'LAC', 'LAC', 'LAC', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', \n               'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', \n               'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional', 'Transitional' ],\n     'CDI':[39.7, 46.6, 34.5, 27.5, 40.5, 27.1, 43.1, 74.6, 55.4, 37.1, 48.2, 39.7, 68.5, 70.2, 27.3, 42.7, 31.9, 35.3, 53.5, 57.1, 29.3, 31.5, 40.9, 53.4, 28.1, 56.1, \n            21.7, 30.8, 42.5, 76.1, 77, 47.2, 57.2, 64.3, 82.6, 44.5, 88.3, 76.7, 63.1, 41.8, 67.7, 74.6, 59, 58, 82.6, 67, 78.5, 39.3, 58.4, 47.1, 89.9, 74.2, 65.8, \n            92, 69.2, 62, 61.1, 70.8, 58, 66.7, 67.3, 39.2, 39.3, 88.6, 58.1, 95.8, 94.5, 62.2, 69.3, 40.6, 35.3, 66, 47.1, 51.3, 94.7, 72, 81.7, 95.2, 98, 94.4, 95.5, \n            90.2, 97.3, 95.8, 54, 55.7, 53, 63, 77.9, 79.4, 72.5, 69.6, 71, 72.6, 66.2, 81.9, 76.5, 79.9, 69, 59.5, 41.9, 35.9, 35.9, 62.7, 48.9, 67.2, 52.1, 62.1, 66.4, \n            73, 60.1, 72.5, 72.9, 68.5, 55.2, 57.8, 60.2, 69.9, 79.4, 72.6, 70.2, 72.2, 64.3, 79.2, 68, 76.8, 57.9, 52.6, 80.3, 50.5, 87.8, 87.4, 71.2, 77.3, 69.6, \n            55.8, 85.4, 89.6, 71, 76.9, 77.4, 76.4, 75.1, 91.7, 89.9, 78.6, 74.5, 73.8, 79.8, 89.6, 81.1, 81.1, 68.1, 79.1, 77.6, 81.5, 72.2, 64.8, 71.5, 76.2, 83.3],\n     'City Product':[56.6, 49.4, 44.4, 42, 46, 30.7, 50.3, 67.5, 55.1, 50.8, 46.6, 42.7, 58.9, 68.1, 39.8, 41.8, 45.9, 64.6, 60, 42.8, 42.1, 34.4, 55.4, 54.6, 46.6, \n                     63.2, 40, 50, 42.3, 69.2, 65.1, 65.1, 64.5, 57.9, 89.6, 63.7, 92.8, 77.5, 62.7, 40, 70.2, 70.6, 65.3, 51.1, 77.7, 70.2, 68, 55.4, 46.9, 57.5, \n                     87.9, 59.6, 60, 89.4, 66.2, 60.4, 71.1, 69.6, 40.8, 70.3, 73.4, 40.1, 69, 83.1, 47, 94.7, 91.6, 58.6, 73.5, 51.4, 48.7, 49.9, 44, 47.4, 81.2, \n                     73, 82.2, 91.5, 97.2, 87.9, 90, 84, 93.5, 85.9, 63.6, 75.7, 51.6, 64.3, 87.1, 82.2, 58.4, 62.6, 64.9, 75.4, 58.4, 77.6, 50.5, 81.5, 61.1, 36.2, \n                     43.6, 40.1, 51.2, 63, 52.8, 64.4, 35.1, 51.6, 62, 61.6, 61.2, 81.5, 73.4, 74.8, 58.8, 64.3, 57.6, 68.2, 82.3, 70, 72.5, 82.2, 55.8, 74.9, \n                     65.7, 51.4, 50, 35.1, 74.8, 40.4, 74.8, 74.2, 59.3, 69.7, 69, 64, 61.6, 79.9, 72.3, 54, 73.8, 79, 64.5, 83.4, 81, 69.1, 59.1, 67.7, 79.1, 83, \n                     69.5, 71.8, 56.1, 70.9, 82, 78, 58.6, 66.9, 64.2, 67.5, 75.2],\n     'Infrastructure':[21.7, 50, 22.5, 14.9, 16, 31.6, 32.8, 84.5, 45, 30.4, 34.9, 29.5, 83.8, 82.5, 21.1, 42, 29.8, 34.9, 42, 47.5, 29.5, 33, 21.8, 41.3, 4.7, \n                       52.5, 22, 12.3, 40.2, 75, 84.9, 56.3, 81.8, 68.6, 90, 65, 99, 78, 65.5, 39, 73.1, 61, 63.5, 82.7, 89.6, 42.3, 82.5, 41, 68.6, 48.8, 84.8, \n                       72, 67.9, 99.3, 57.3, 76.3, 78.5, 66.4, 54.6, 55.4, 79.3, 40.1, 18.1, 89.3, 34.8, 98.4, 99.5, 64.2, 79.3, 40.4, 28.3, 60.8, 58, 65.3, 98.8, \n                       93.9, 96.3, 99.7, 98.8, 98.8, 99.8, 93.5, 99.5, 98.8, 84, 39.5, 50.5, 58.8, 69.9, 92.1, 62.8, 70.4, 74.8, 76.8, 58.8, 79.5, 83.5, 88.6, \n                       63.8, 49.3, 30, 52.8, 69.4, 66.2, 45.7, 67.7, 65, 47, 88.9, 96.2, 59.8, 87.9, 87.5, 77.8, 65, 58.8, 76.6, 64.8, 86.2, 83.3, 82.3, 70, \n                       60.7, 92.8, 79, 93, 53.1, 69, 74.8, 50, 87.3, 89.3, 77.8, 82.5, 91.7, 42.9, 95.8, 90.9, 91.7, 94.5, 87.1, 92.2, 79.6, 99.3, 98.7, 90, \n                       88.5, 78.8, 94.2, 98.4, 96.8, 89.5, 78.8, 93.7, 86.7, 95.4, 88.2, 81.5, 98, 86.2, 88.9],\n     'Waste':[29, 0, 0, 0.1, 48, 0.4, 18.2, 75.5, 38.5, 40, 39.5, 16, 70.5, 96.5, 2.5, 34, 10, 13.3, 32.5, 49, 2, 0, 0, 52.3, 0, 39, 0, 2, 17.5, 80, 77.2, 0, \n              5, 37, 70, 0, 93, 80, 52.5, 17.5, 27.5, 85, 0, 31.3, 74.5, 66, 85, 0.3, 45, 0, 90.4, 90, 50.1, 99, 46.7, 37.5, 50, 45.9, 42.6, 43, 20, 0, 10, \n              84.7, 37.2, 99.3, 100, 35, 37.5, 0.3, 0, 53, 0, 0, 100, 40.4, 45.6, 100, 100, 100, 100, 89.5, 100, 100, 0, 2, 0, 45, 53.5, 50, 78.5, 41.1, \n              50, 48.5, 45, 74.6, 87.5, 52.9, 51.7, 50, 0, 0, 32, 20, 0, 34, 0, 49, 50, 42.5, 15, 17.1, 40, 49.8, 0, 32.5, 0, 54.5, 62.6, 36.3, 40.6, 35, 58.5, \n              51.7, 40, 65, 32, 2.5, 75.4, 35, 100, 95, 46, 50.5, 10.4, 7.5, 96.5, 100, 14.3, 71.2, 51.8, 34.3, 54.9, 99, 86.8, 53.7, 50, 44.5, 48.2, 88.5, \n              55, 45, 75, 58.5, 46.6, 61.8, 47.5, 4.5, 28, 49, 77],\n     'Health':[94.6, 94, 92.7, 90.2, 87.8, 86.4, 82.6, 78.4, 84.1, 85.2, 87.5, 81.1, 67.7, 80.6, 86.6, 86.6, 81.2, 81.6, 80.5, 80.7, 26.4, 76, 81, 83.8, 78.8, \n               84.6, 78.3, 74.1, 94.5, 88.8, 94.9, 88.8, 88.9, 85.9, 82, 80.9, 82.9, 77.9, 83.6, 76.3, 70.2, 42.4, 94.1, 42.2, 90.6, 59.1, 90, 83.1, 61.5, 84.6, \n               80.2, 35, 75.7, 61.5, 79, 40.7, 52.9, 29, 31.8, 44, 82.3, 86.3, 43.9, 71, 69.6, 81.8, 64.8, 78.5, 54.5, 77.5, 80.5, 47.2, 65.9, 54.7, 93.7, 93.9, \n               93.3, 86.8, 82.9, 80.2, 50.5, 74.2, 75.6, 56.5, 90.9, 83.8, 90.2, 87.2, 89.3, 93.6, 89.9, 80.9, 90.7, 84.3, 89.2, 83, 80.3, 82.3, 85.4, 83.4, 81.3, \n               82, 86.3, 80.5, 84.6, 89.3, 85.4, 82, 51.6, 72.5, 81.4, 88.3, 82.3, 90.1, 78.4, 90.1, 77.8, 86.1, 76.5, 79.2, 68.8, 86.5, 84.1, 60.3, 78.4, 83.4, \n               70.1, 60.4, 62.9, 71.4, 32.5, 61.5, 90.6, 90.3, 88.7, 87.3, 92.5, 84.7, 90, 86.2, 85.6, 89.3, 87.6, 86.9, 85.6, 86.4, 81.5, 80.5, 77.8, 78.5, 64.9, \n               77.8, 61, 53.7, 73.8, 86, 64.6, 62.3, 65.9, 87, 53.9 ], \n     'Education':[42.4, 62, 52.5, 36.8, 37.8, 18.5, 57.7, 77.6, 77.6, 29.5, 59.8, 68.2, 77.6, 77.6, 29.1, 63.1, 44.8, 22.8, 68.3, 62, 29.1, 58.3, 73.3, 65.3, 36.5, \n                  65.3, 14.9, 39, 46.6, 75.2, 75, 51.9, 48.6, 75.8, 77.2, 51.6, 70, 63.4, 48.6, 46.6, 86.6, 70.8, 82.7, 48.5, 78.9, 78.7, 76.3, 38.1, 45.3, 59.2, \n                  97.7, 69, 69.5, 81.3, 95.7, 64.8, 40.8, 89.3, 72.7, 80.2, 75.8, 49, 40.2, 97.9, 93.5, 97.7, 88.6, 75.4, 75.5, 49.3, 38.1, 92, 71.3, 73.4, 99.8, \n                  72.5, 90.7, 89.8, 99.5, 91.3, 94.1, 90.6, 99.8, 99.8, 40.5, 78.1, 84.3, 64.7, 88.6, 88.4, 84.1, 84.7, 84.7, 80.4, 82.2, 88.4, 79.3, 86.7, 83.3, 84.1, \n                  48.8, 11, 37.7, 74.5, 65.5, 84.1, 82.8, 84.3, 52.7, 81.8, 74.5, 89.4, 76.9, 58.2, 82.8, 57.2, 88.3, 86.1, 84.3, 87, 70.9, 84.7, 72.4, 86.7, 76.4, \n                  88.7, 85.5, 82.8, 86.7, 41.3, 86.7, 88.2, 92.4, 98.7, 90.1, 86.2, 86, 86.8, 89.3, 84.3, 85.2, 88.9, 94.2, 86.2, 99.3, 97.3, 94.8, 94.4, 88.6, \n                  87.4, 99.8, 87.2, 47, 86.3, 88.3, 89.8, 85.5, 90.5, 85.6, 97.5, 88.3]  })\n","2c46cf05":"pd.set_option('display.max_rows', None)\nCDI[CDI['CDI'] < 62.5].sort_values(by=\"CDI\", ascending=False)","43802e92":"Let's find out which features is most important then others to predect Job change.\n\nI do not ML approach, it is handy, but test data's target answers are not provided.\nBut use tree decision model instead.","b54f2486":"### Apply DecisionTreeClassifier for find out key factor\n\nmax_depth = 2 is enough, no score gain when use 3.\nif you use max_depth more than 4, you may get higher score, but it looks like over-fitting.","54511de2":"## One-Hot on Categorical data","9b7e08c5":"## Change Data : Reads nicer & Converting objects to integers","a1987561":"### Let's check what is relationship between City Development Index and other factores\n#### 1 = Job changed\n#### 0 = Job unchanged\n#### Training_hours did not has great importance, because it shows almost same distribution on CDI 0.9 and 0.6.","36f2fbb4":"# HR Analytics : Which features is most important?\n","904673cb":"# Conclusion\n### On HR Analytics data, trainees of these Cities would change their current job :.","dbbae8ea":"### Only one factor has great importance == City Development Index","cea7c9d0":"# Then... what is City Development Index ?","520613c8":"I refer Josh's works on below code.\nhttps:\/\/www.kaggle.com\/joshuaswords\/awesome-hr-data-visualization-prediction","dd1db591":"## Loading library","5929b5d9":"### Get columns list for tree graph (later)","7847b770":"City Development Index :\nhttps:\/\/en.wikipedia.org\/wiki\/City_development_index\n\nI can get the data from pp32-34, Table B. CDI and component subindices, GLOBAL URBAN INDICATORS DATABASE, Version 2 , Global Urban Observatory, United Nations Human Settlements Programme (UN - Habitat), ISBN 92-1-131627- 8 \n\nNote :\n* Index No. 46 is missing on original data\n* Total cases on the data == 161 cities\n* City Development Index = (Infrastructure index + Waste index + Education index + Health index + City Product index) \/ 5 \n* But math was not mathched, because Each sub-index is a combination of several indicators that have been normalized to give a value between 0 and 1. ","d43036c0":"#### You might get better result when using StandardScaler, but for easy reading and understanding, I use original distribution.\n#### Leave the code for reference : ","2a097a17":"## Loading Data"}}