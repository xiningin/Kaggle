{"cell_type":{"2072dbc8":"code","a94dcebd":"code","5f1a3aa5":"code","8fc90ad8":"code","a43066a9":"code","e1d19132":"code","24273342":"code","5e2b42da":"code","816e8bcb":"code","18ccc70c":"markdown","24d39de9":"markdown","08637bbe":"markdown"},"source":{"2072dbc8":"import pandas as pd\nimport numpy as np\n%matplotlib inline\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split, cross_val_score, StratifiedKFold\nimport scipy\nfrom sklearn.linear_model import LogisticRegression\nimport optuna\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a94dcebd":"train=pd.read_csv('\/kaggle\/input\/cat-in-the-dat\/train.csv', index_col='id')\ntest=pd.read_csv('\/kaggle\/input\/cat-in-the-dat\/test.csv', index_col='id')\nsubmission=pd.read_csv('\/kaggle\/input\/cat-in-the-dat\/sample_submission.csv', index_col='id')\nYtrain=train['target']\ntrain=train[list(test)]\nall_data=pd.concat((train, test))\nprint(train.shape, test.shape, all_data.shape)","5f1a3aa5":"encoded=pd.get_dummies(all_data, columns=all_data.columns, sparse=True)\nencoded=encoded.sparse.to_coo()\nencoded=encoded.tocsr()","8fc90ad8":"Xtrain=encoded[:len(train)]\nXtest=encoded[len(train):]","a43066a9":"kf=StratifiedKFold(n_splits=10)","e1d19132":"def objective(trial):\n    C=trial.suggest_loguniform('C', 10e-10, 10)\n    model=LogisticRegression(C=C, class_weight='balanced',max_iter=10000, solver='lbfgs', n_jobs=-1)\n    score=-cross_val_score(model, Xtrain, Ytrain, cv=kf, scoring='roc_auc').mean()\n    return score\nstudy=optuna.create_study()","24273342":"#study.optimize(objective, n_trials=50)","5e2b42da":"#print(study.best_params)\n#print(-study.best_value)\n#params=study.best_params","816e8bcb":"model=LogisticRegression(C=0.09536298444122952, class_weight='balanced',max_iter=10000, solver='lbfgs', n_jobs=-1)\nmodel.fit(Xtrain, Ytrain)\npredictions=model.predict_proba(Xtest)[:,1]\nsubmission['target']=predictions\nsubmission.to_csv('Result.csv')\nsubmission.head()","18ccc70c":"# Load DataSet","24d39de9":"Trial Resulted in Value : C = 0.09536298444122952","08637bbe":"Credits to @Ants \/ Notebook : https:\/\/www.kaggle.com\/superant\/oh-my-cat"}}