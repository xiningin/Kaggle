{"cell_type":{"3d94a210":"code","d2a3091d":"code","dd054661":"code","4ffc759c":"code","569c46bf":"code","174d1c94":"code","8ffa074f":"code","c66baa56":"code","1589121d":"code","47b9c877":"code","f7be583d":"markdown","e3d12330":"markdown","661414a6":"markdown","069e6356":"markdown","8940ded7":"markdown"},"source":{"3d94a210":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d2a3091d":"# Plotting Libraries\n\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\ndf = pd.read_csv('..\/input\/pakistan-crimes-by-type\/248a92b9-5817-43f2-b0e7-6d45a45a8ee9.csv')","dd054661":"print(df.shape)\ndf.head()","4ffc759c":"\n# The data is still preserved in the original df and can be pulled if needed.\ndf2=df.drop('_id', axis=1)\ndf2","569c46bf":"df_long=pd.melt(df2, id_vars=['Year', 'Offence'], var_name='Province' ) # Creates the long formatting\ndf_long=df_long.drop(df_long.loc[df_long['Province']== 'Pakistan'].index,axis=0) # Dropping Pakistan as a whole","174d1c94":"totals=df_long.loc[df_long['Offence']== 'TOTAL RECORDED CRIME'] # grabbing totals rows just in case\ndf_long=df_long.drop(df_long.loc[df_long['Offence']== 'TOTAL RECORDED CRIME'].index,axis=0) # Dropping totals rows\n","8ffa074f":"crime_by_prov=df_long.groupby('Province')['value'].sum()\nmax=df_long.groupby('Province')['value'].max()\npx.bar( crime_by_prov, title='<b>Total Crimes by Province 2012-2017<\/b><br>Most Crimes:Punjab, 2.37M Crimes<br>Least Crimes:G.B, 9.3k Crimes ', labels={'_value':'Crime Total'}, \n            color= max, color_continuous_scale='Thermal')","c66baa56":"df_long=df_long.drop(df_long.loc[((df_long['Offence'] == 'Others'))].index, axis=0) # Dropping \"Others\" Crime\n# Note: Dropping 'Others' to enrigh graph visualization as it does not tell us anything other than a crime was commited.","1589121d":"# Splitting each Province into its own variable\n#---\npunjab_crime= df_long.loc[df_long['Province']=='Punjab'].groupby('Offence')['value'].sum()\n#---\nsindh_crime=df_long.loc[df_long['Province']=='Sindh'].groupby('Offence')['value'].sum()\n#---\nkp_crime=df_long.loc[df_long['Province']=='KP'].groupby('Offence')['value'].sum()\n#---\nbalochistan_crime=df_long.loc[df_long['Province']=='Balochistan'].groupby('Offence')['value'].sum()\n#---\nislamabad_crime=df_long.loc[df_long['Province']=='Islamabad'].groupby('Offence')['value'].sum()\n#---\nrailways_crime=df_long.loc[df_long['Province']=='Railways'].groupby('Offence')['value'].sum()\n#---\ngb_crime=df_long.loc[df_long['Province']=='G.B'].groupby('Offence')['value'].sum()\n#---\najk_crime=df_long.loc[df_long['Province']=='AJK'].groupby('Offence')['value'].sum()\n#---","47b9c877":"fig = make_subplots(\n        rows=8,\n        cols=2,\n        subplot_titles=(\"Punjab\", 'Sindh','','', 'KP', 'Balochistan','','', 'Islamabad', 'Railways','','', 'GB', 'AJK')\n\n)\n# Punjab\nfig.add_trace(go.Bar(x=punjab_crime.index, y=punjab_crime.values), row=1, col=1)\n# Sindh\nfig.add_trace(go.Bar(x=punjab_crime.index, y=punjab_crime.values), row=1, col=2)\n# KP\nfig.add_trace(go.Bar(x=punjab_crime.index, y=punjab_crime.values), row=3, col=1)\n# Balochistan\nfig.add_trace(go.Bar(x=punjab_crime.index, y=punjab_crime.values), row=3, col=2)\n# Islamabad\nfig.add_trace(go.Bar(x=punjab_crime.index, y=punjab_crime.values), row=5, col=1)\n# Railways\nfig.add_trace(go.Bar(x=punjab_crime.index, y=punjab_crime.values), row=5, col=2)\n# GB\nfig.add_trace(go.Bar(x=punjab_crime.index, y=punjab_crime.values), row=7, col=1)\n#AJK\nfig.add_trace(go.Bar(x=punjab_crime.index, y=punjab_crime.values), row=7, col=2)\n\nfig.update_layout(\n    title_text='Crimes by Province',\n    autosize=True,\n    width=1000,\n    height=1000,\n    paper_bgcolor='#006600',\n    font_color= 'white',\n    showlegend=False\n    )\n","f7be583d":"## Initial Data View","e3d12330":"# Pakistan Crime Data\n\n    1. How many murders happened in different provinces\n    2. In which Province most crimes have happened\n    3. In which Province least crimes have happened\n    4. Subplots of Crimes by Province\n","661414a6":"## Subplots of Crimes by Province","069e6356":"## Clean-up and Data Massage","8940ded7":"# Crime Analysis"}}