{"cell_type":{"3916065e":"code","4612becb":"code","a7fef6f9":"code","c6c3b433":"code","b5980bb5":"code","e1de70ee":"markdown","13398c7f":"markdown","708d37e6":"markdown"},"source":{"3916065e":"import pandas as pd\nfrom matplotlib import pyplot as plt\n\nplt.style.use('seaborn')\n\nx = [5, 7, 8, 5, 6, 7, 9, 2, 3, 4, 4, 4, 2, 6, 3, 6, 8, 6, 4, 1]\ny = [7, 4, 3, 9, 1, 3, 2, 5, 2, 4, 8, 7, 1, 6, 4, 9, 7, 7, 5, 1]\n\nplt.scatter(x,y, s = 100, color = 'green',edgecolor = 'black', linewidth = 1, alpha = 0.75) \n#for more on the marker styles, we can always refer to the documentation\nplt.tight_layout()\nplt.show()","4612becb":"#say our data has more than one type of value. Different colored plots would be nice.\n\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n\nplt.style.use('seaborn')\n\nx = [5, 7, 8, 5, 6, 7, 9, 2, 3, 4, 4, 4, 2, 6, 3, 6, 8, 6, 4, 1]\ny = [7, 4, 3, 9, 1, 3, 2, 5, 2, 4, 8, 7, 1, 6, 4, 9, 7, 7, 5, 1]\n\ncolors = [7, 5, 9, 7, 5, 7, 2, 5, 3, 7, 1, 2, 8, 1, 9, 2, 5, 6, 7, 5] #additional data\nsizes = [209, 486, 381, 255, 191, 315, 185, 228, 174,\n         538, 239, 394, 399, 153, 273, 293, 436, 501, 397, 539]\n\nplt.scatter(x,y, s = sizes, c = colors, cmap = 'Greens', edgecolor = 'black',\n            linewidth = 1, alpha = 0.75)\ncbar = plt.colorbar() #this is a method\ncbar.set_label('Satisfaction')\n\n\nplt.tight_layout()\n\nplt.show()","a7fef6f9":"#working with real world data\n\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n\nplt.style.use('seaborn')\n\ndata = pd.read_csv('..\/input\/vidlikes.csv')\nview_count = data['view_count']\nlikes = data['likes']\nratio = data['ratio']\n\nplt.scatter(view_count, likes, edgecolor = 'black', linewidth = 1, alpha = 0.75)\n\nplt.title('Trending YouTube Videos')\nplt.xlabel('View Count')\nplt.ylabel('Total Likes')\n\nplt.tight_layout()\n\nplt.show()\n#this plot is not so accurate because there is an out liar, has far much more views and likes than others\n","c6c3b433":"import pandas as pd\nfrom matplotlib import pyplot as plt\n\nplt.style.use('seaborn')\n\ndata = pd.read_csv('..\/input\/vidlikes.csv')\nview_count = data['view_count']\nlikes = data['likes']\nratio = data['ratio']\n\nplt.scatter(view_count, likes, edgecolor = 'black', linewidth = 1, alpha = 0.75)\n\n#applying log scale on both axes to correct the plot choke\nplt.xscale('log')\nplt.yscale('log')\n\nplt.title('Trending YouTube Videos')\nplt.xlabel('View Count')\nplt.ylabel('Total Likes')\n\nplt.tight_layout()\n\nplt.show()\n\n","b5980bb5":"#Applying color map\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n\nplt.style.use('seaborn')\n\ndata = pd.read_csv('..\/input\/vidlikes.csv')\nview_count = data['view_count']\nlikes = data['likes']\nratio = data['ratio']\n\nplt.scatter(view_count, likes,c = ratio,\n            #summer is just one of the several cmap styles. Reffer to documentation for more.\n            cmap = 'summer',\n            edgecolor = 'black', linewidth = 1, alpha = 0.75)\ncbar = plt.colorbar()\ncbar.set_label = ('Like\/Dislike Ratio')\n#applying log scale on both axes to correct the plot choke\nplt.xscale('log')\nplt.yscale('log')\n\nplt.title('Trending YouTube Videos')\nplt.xlabel('View Count')\nplt.ylabel('Total Likes')\n\nplt.tight_layout()\n\nplt.show()\n\n","e1de70ee":"The color bar provides a scale of reference.","13398c7f":"This is a much better plot.","708d37e6":"This plot however as you can see is not that good.\n\nThere exist an outl liar plot at the far right while the rest of th plots are clogged together at the bottom left. To fix this, we apply the log arguement in the plt.xscale() and plt.yscale() methods as seen in the next plot."}}