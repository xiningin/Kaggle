{"cell_type":{"e1ab2033":"code","e9a7dfd8":"code","e355013b":"code","0838424d":"code","730e5d8c":"code","508e4f5d":"code","056d4e87":"code","e4267935":"code","1d4b5ef5":"code","4fd0eacc":"code","07f248e1":"code","d6f0c21a":"code","6843f445":"code","9411b935":"code","5b857949":"code","9064e4a9":"code","9a38fab7":"code","262c6ca1":"code","26fe278e":"code","a45e2abb":"code","22247eec":"code","da26675b":"code","a689837b":"code","165acb83":"code","0b6d29f0":"code","126be5f0":"code","7e0dec48":"code","1bfce85f":"code","8486b802":"code","742299ef":"code","bd10bbe9":"code","f1019e73":"code","48b68cac":"code","c56f106a":"code","251da4ed":"code","db2796dd":"code","ef04ab69":"code","befc289e":"code","e5fd89cf":"code","37ea2462":"code","c70024ed":"code","ebc7acd9":"code","0c0c21df":"code","553deceb":"code","eeb4e086":"code","b0403c7b":"code","19865d84":"code","7e01e7d8":"markdown","ca98903d":"markdown","9dc413f6":"markdown","3ea5fd3f":"markdown","46b253dd":"markdown","29d10b03":"markdown","f85a9656":"markdown","71ce79a9":"markdown","82f3f232":"markdown","5f86e2c3":"markdown","61942270":"markdown","86bfc33e":"markdown","d4e8a148":"markdown","66028b28":"markdown","c860fa73":"markdown","5b803740":"markdown","d1655a3e":"markdown","d0c87b97":"markdown","75c6e304":"markdown","cfd9d34f":"markdown","899530a5":"markdown","42f32d63":"markdown","440712fe":"markdown","12219001":"markdown","75c0f627":"markdown","e9a855ac":"markdown","a3ea529e":"markdown","19790d47":"markdown","a8b3cd78":"markdown","0b48c69a":"markdown","1daee7e5":"markdown","bea2de9c":"markdown","e0c97d6b":"markdown","55a6e1a7":"markdown","fd9d4082":"markdown","5ad8ce18":"markdown","0135403b":"markdown","fae39fa0":"markdown","8cef0be3":"markdown","432cbc76":"markdown","3f84ba81":"markdown","cb52cdda":"markdown","6ab9092b":"markdown","1b954460":"markdown","6ad04556":"markdown","ee57deef":"markdown","a3ca7b90":"markdown","90964597":"markdown","81010178":"markdown","53215e55":"markdown"},"source":{"e1ab2033":"import pandas as pd \nimport numpy as np \nimport seaborn as sns\nimport numpy as np\nimport matplotlib.pyplot as plt \nfrom IPython.display import Image","e9a7dfd8":"corona_dataset_csv = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv')\ncorona_dataset_csv.head(10)","e355013b":"corona_dataset_csv.drop(['Lat','Long'],axis=1,inplace=True)","0838424d":"corona_dataset_csv.head(10)","730e5d8c":"corona_dataset_aggregated = corona_dataset_csv.groupby(\"Country\/Region\").sum()","508e4f5d":"corona_dataset_aggregated.head()","056d4e87":"corona_dataset_aggregated.loc['China'].plot()\ncorona_dataset_aggregated.loc['Italy'].plot()\ncorona_dataset_aggregated.loc['Turkey'].plot()\nplt.legend()","e4267935":"corona_dataset_aggregated.loc['China'].plot()","1d4b5ef5":"corona_dataset_aggregated.loc['China'][:3].plot()","4fd0eacc":"names = [\"China\", \"Italy\", \"Turkey\"]\nfor name in names:\n    data_= corona_dataset_aggregated.loc[name].values\n    data__ = corona_dataset_aggregated.loc[name].keys()\n    data_diff = []\n    for i in range(len(data_)-1):\n         data_diff.append(abs(data_[i+1]-data_[i]))\n        \n    d = dict( Daily_Increase = data_diff, Numbers = data__ )\n\n    df= pd.DataFrame(dict([ (k,pd.Series(v)) for k,v in d.items() ]))\n    df.plot(title=name)\n","07f248e1":"corona_dataset_aggregated.loc['China'].diff().max()","d6f0c21a":"corona_dataset_aggregated.loc['Italy'].diff().max()","6843f445":"corona_dataset_aggregated.loc['Turkey'].diff().max()","9411b935":"countries = list(corona_dataset_aggregated.index)\nmax_infection_rates = []\nfor country in countries :\n    max_infection_rates.append(corona_dataset_aggregated.loc[country].diff().max())\ncorona_dataset_aggregated['max infection rate'] = max_infection_rates","5b857949":"corona_dataset_aggregated.head()","9064e4a9":"corona_data = pd.DataFrame(corona_dataset_aggregated['max infection rate'])","9a38fab7":"corona_data.head(-10)\n#We will use this new dataframe soon.","262c6ca1":"world_happiness_report = pd.read_csv(\"..\/input\/world-happiness\/2019.csv\")\nworld_happiness_report.head()","26fe278e":"columns_to_dropped = ['Overall rank','Score','Generosity','Perceptions of corruption']\nworld_happiness_report.drop(columns_to_dropped,axis=1 , inplace=True)","a45e2abb":"world_happiness_report.head()","22247eec":"world_happiness_report.set_index(['Country or region'],inplace=True)\nworld_happiness_report.head()","da26675b":"#Time to use our infection rates DataFrame\ncorona_data.head()","a689837b":"world_happiness_report.head()","165acb83":"data = world_happiness_report.join(corona_data).copy()","0b6d29f0":"data.head()","126be5f0":"X = data['GDP per capita']\nY = data['max infection rate']\n\nX_bar = np.mean(X) #finding the average for all X values\nY_bar = np.mean(Y) #finding the average for all Y values\n\ntop = np.sum((X - X_bar) * (Y - Y_bar))\n\nbot = np.sqrt(np.sum(np.power(X - X_bar, 2)) * np.sum(np.power(Y - Y_bar, 2)))\n\nprint(\"Correlation of GDP per Capita and Max Infection Rate:\", top\/bot)\n\n","7e0dec48":"X = data['Freedom to make life choices']\nY = data['max infection rate']\n\nX_bar = np.mean(X) #finding the average for all X values\nY_bar = np.mean(Y) #finding the average for all Y values\n\ntop = np.sum((X - X_bar) * (Y - Y_bar))\n\nbot = np.sqrt(np.sum(np.power(X - X_bar, 2)) * np.sum(np.power(Y - Y_bar, 2)))\n\nprint(\"Correlation of Freedom to make life choices and Max Infection Rate:\", top\/bot)","1bfce85f":"data.corr()","8486b802":"Image(filename='..\/input\/images\/img\/LSM.png') ","742299ef":"X = data['GDP per capita']\nY = data['max infection rate']\n\n# Mean X and Y\nx_bar = np.mean(X)\ny_bar = np.mean(Y)\n\ntop = np.sum((X - x_bar) * (Y - y_bar))\nbot = np.sum(np.power(X - x_bar, 2)) \n\nm = top \/ bot\nc = y_bar - (m * x_bar)\n \n# Print coefficients\nprint(m, c)","bd10bbe9":"# Plotting Values and Regression Line\nmax_x = np.max(X) \nmin_x = np.min(X) \n# Calculating line values x(independent values) and line(output)\nindependent = np.linspace(min_x, max_x,)\nline = c + m * independent \n\nplt.plot(independent, line, color='#52b920', label='Regression Line')\n\n# Ploting Scatter Points\nplt.scatter(X, Y, c='#ef4423', label='Countries')\n \nplt.xlabel('GDP per Capita')\nplt.ylabel('Max Infection Rate')\nplt.legend()\nplt.show()","f1019e73":"Image(filename='..\/input\/images\/img\/RMSD.png') ","48b68cac":"pred = []\nfor i in X.values:\n    pred.append(i * m + c)\nnumer = np.sum(np.power(pred -Y , 2))\ndenom = len(pred)\n\nRMSD = np.sqrt(numer\/denom)\nprint(\"\\n\",\"root-mean-square-error(RMSE):\",RMSD,\"\\n\")","c56f106a":"x = data['GDP per capita']\ny = data['max infection rate']\nsns.regplot(x,np.log(y))","251da4ed":"x = data['Social support']\ny = data['max infection rate']\nsns.regplot(x,np.log(y))","db2796dd":"x = data['Healthy life expectancy']\ny = data['max infection rate']\nsns.regplot(x,np.log(y))","ef04ab69":"x = data['Freedom to make life choices']\ny = data['max infection rate']\nsns.regplot(x,np.log(y))\n","befc289e":"corona_dataset_csv2 = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv')\ncorona_dataset_csv2.drop(['Lat','Long'],axis=1,inplace=True)\ncorona_dataset_aggregated2 = corona_dataset_csv.groupby(\"Country\/Region\").sum()\ncorona_dataset_aggregated2.loc['China'].plot()\ncorona_dataset_aggregated2.loc['Italy'].plot()\ncorona_dataset_aggregated2.loc['Turkey'].plot()\nplt.legend() ","e5fd89cf":"countries2 = list(corona_dataset_aggregated.index)\nmax_death_rates = []\nfor country in countries2 :\n    max_death_rates.append(corona_dataset_aggregated2.loc[country].diff().max())\ncorona_dataset_aggregated2['Max Death Rate'] = max_death_rates","37ea2462":"corona_data2 = pd.DataFrame(corona_dataset_aggregated2['Max Death Rate'])","c70024ed":"corona_data2.head()","ebc7acd9":"data2 = world_happiness_report.join(corona_data2).copy()\ndata2.head()","0c0c21df":"data2.corr()","553deceb":"x = data2['GDP per capita']\ny = data2['Max Death Rate']\nsns.regplot(x,np.log(y))","eeb4e086":"x = data2['Social support']\ny = data2['Max Death Rate']\nsns.regplot(x,np.log(y))","b0403c7b":"x3 = data2['Healthy life expectancy']\ny3 = data2['Max Death Rate']\nsns.regplot(x,np.log(y))","19865d84":"x = data2['Freedom to make life choices']\ny = data2['Max Death Rate']\nsns.regplot(x,np.log(y))","7e01e7d8":"#### World Happiness Report Dataset :","ca98903d":"![fist.jpg](attachment:fist.jpg)","9dc413f6":"We have examined the relationship between coronavirus's spreading and a country's development. On this purpose, we used GDP and Freedom to make life choices of a country as main indicatiors of development. As a result, having an developed country may not help stopping the spread of the coronavirus. Even though there are multiple reasons that can affect behind this pandemic, it is highly likely for an undeveloped less-democratic regime to stop it by strict rules without waiting democracy to step in is easier than the happier countries. For example, USA has many states and many rules for every state. On the other hand, Chine is rules by a totalitarian government who locked people's door without even asking. Without further speaculation, We can clearly say that There was no interesting relationship between the happiness and the spread of Coronavirus in this data analysis.","3ea5fd3f":"Note: We will use log(y) instead of just y when plotting the line for the sake of visualization from now on!","46b253dd":"## Time to Relate all to Hapiness\n- Importing the WorldHappinessReport.csv dataset\n- selecting needed columns for our analysis \n- join the datasets \n- calculate the correlations as the result of our analysis","29d10b03":"### Visualization of the results","f85a9656":"### Importing the dataset","71ce79a9":"#### Defination: The intensity of the virus can be described by the maximum number of new confirmed cases over 24 hours.","82f3f232":"### Changing the indices of the dataframe","5f86e2c3":"r = \u03a3\u1d62((x\u1d62 \u2212 mean(x))(y\u1d62 \u2212 mean(y))) (\u221a\u03a3\u1d62(x\u1d62 \u2212 mean(x))\u00b2 \u221a\u03a3\u1d62(y\u1d62 \u2212 mean(y))\u00b2)\u207b\u00b9\n\nA smaller absolute value of r indicates weaker correlation. Correlation Coefficient for GDP per capita and max infection rate is greater than 0\tpositive but not so much. Therefore, there is a weak positive correlation between these two.","61942270":"Is there any relationship between the spread of the Coronavirus and how happy the people who are living in that country?\n\nDatasets being used in the search of this question are World Happiness Index by United Nations and Covid-19 Daily Dataset by John Hopkins University. Two of them are available on their websites.","86bfc33e":"## Visualizing Death Numbers","d4e8a148":"## Correlation between GDP per Capita and Maximum Infection Rate ","66028b28":"### Let's Import the modules ","c860fa73":"### Number of infections in 3 days","5b803740":"### Plotting Healthy life expectancy vs maximum Infection rate","d1655a3e":"#### Infection rate of the virus is very high in particular days!","d0c87b97":"Those results show us that people who live in the more developed countries are more prone to get infection of coronavirus with compare to less developed countries. You may say that this because of lack of corona test kits in less developed countries. So we can do the same operations for aggregated death numbers. Let's check total death numbers to find out the result.","75c6e304":"### Plotting GDP vs maximum death rate","cfd9d34f":"## Comparing Infection with Other Parameters","899530a5":"### Aggregating the rows by the country","42f32d63":"# First Results and Beyond","440712fe":"### Delete the useless columns (locations)","12219001":"## Finding maximum death rate for every country","75c0f627":"### Find maximum infection rate for all of the countries. ","e9a855ac":"### Plotting GDP vs maximum Infection rate","a3ea529e":"#### Corona Dataset :","19790d47":"##### For some countries, Coronavirus can copy itself faster than the others.","a8b3cd78":"### Visualizing data related to a country ","0b48c69a":"# Welcome to Covid19 Data Analysis Notebook\n------------------------------------------","1daee7e5":"The \u201csquare\u201d here refers to squaring the distance between a data point and the regression line. The line with the minimum value of the sum of square is the best-fit regression line. \nRegression Line, y = mx+c where,\n\ny = Dependent Variable\n\nx= Independent Variable ","bea2de9c":"### Create a new dataframe with only Max Infection Rate ","e0c97d6b":"![covid.jpg](attachment:covid.jpg)","55a6e1a7":"### Plotting Social support vs maximum Infection rate","fd9d4082":"# Regression Analysis using Least Square Method","5ad8ce18":"# Summary","0135403b":"### Freedom to make life choices vs maximum death rate ","fae39fa0":"### Now let's join two dataset we have prepared  ","8cef0be3":"### Importing covid19 dataset\n","432cbc76":"# Correlation matrix","3f84ba81":"### Find maxmimum infection rate for China, Italy and Turkey","cb52cdda":"### Calculating a good measure \nwe need to find a good measure reperestend as a number, describing the spread of the virus in a country. ","6ab9092b":"# Introduction","1b954460":"### Plotting Social support vs maximum death rate","6ad04556":"### Plotting Healthy life expectancy vs maximum Infection rate\n","ee57deef":"# Root Mean Square Error (Root Mean Square Deviation)","a3ca7b90":"### Total Number in China","90964597":"### Plotting Freedom to make life choices vs maximum Infection rate","81010178":"### Let's drop the useless columns ","53215e55":"# Calculating the first derivative of the curve"}}