{"cell_type":{"b2acfba3":"code","0c3672a8":"code","5c120f51":"code","ec27dc5b":"code","02be985f":"code","24fcdbae":"code","c4dfb076":"code","cfed0295":"code","617dcd35":"code","39cf4cec":"code","66c562e5":"code","6dba2ec7":"code","03cdc79d":"code","9ab7c0c8":"code","b548ec76":"code","1c55797f":"code","d8742e19":"code","87764451":"code","05c016fd":"code","4f5558eb":"code","cfadbb29":"code","1ff26458":"code","4d6d71c4":"code","ded16715":"code","43664edd":"code","c6c3b669":"code","b3a6def8":"code","8c858206":"code","fe0fab71":"code","a85a4ad0":"code","eb0c8fb6":"code","8cba42ea":"code","d6b62460":"code","cf09f9d8":"code","60661445":"code","12a09951":"code","35c704bc":"code","394e75d5":"code","7e9abbc0":"code","0c2c6f79":"code","de2fb22d":"code","860541aa":"code","6f9f3335":"code","012d7e47":"code","62ea8923":"code","b3c441b3":"code","414afebf":"code","b1647c91":"code","98a06a94":"code","c543a29c":"code","b11fe107":"code","64504545":"code","90ff62ef":"code","3662738e":"code","1a4d752e":"code","9b34be99":"code","55f9a9ed":"code","e23737c2":"markdown","e7170e89":"markdown","6152335e":"markdown","91ba99a8":"markdown","0dbd3b76":"markdown","5de03e9b":"markdown","4a9365f8":"markdown","142b7ff3":"markdown","dd60a595":"markdown"},"source":{"b2acfba3":"import os\n\nimport pandas as pd\n\nimport nltk\nfrom nltk import word_tokenize\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import *\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\nfrom nltk.probability import FreqDist\n\nfrom textblob import TextBlob\nimport math\nimport pickle\nimport string\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# from sklearn.model_selection import train_test_split\n# from sklearn.feature_extraction.text import CountVectorizer,TfidfTransformer\n# from sklearn.metrics import f1_score, accuracy_score\n# from sklearn.model_selection import cross_val_score\n# from sklearn.svm import LinearSVC\n# from sklearn.naive_bayes import MultinomialNB\n# from sklearn.pipeline import Pipeline","0c3672a8":"#data = pd.read_csv('.\/titles_sentiment.csv')\ndata = pd.read_csv('..\/input\/titles_tagged_metaphors.csv')\nstdout = pd.read_csv('..\/input\/sentences_metaphors_stdout.csv')\ntry:\n    pass#data = data.set_index('id')\nexcept:\n    pass","5c120f51":"sw = list(set(stopwords.words('english')))","ec27dc5b":"types = list(set(data.type.values))\nqtd_type = [ len(data[data['type'] == t]) for t in types ]","02be985f":"ax = sns.barplot(x=types, y=qtd_type)\nfor item in ax.get_xticklabels():\n    item.set_rotation(45)","24fcdbae":"stemmer = PorterStemmer()\ntokens = dict()\nfor t in types:\n    if not t in tokens:\n        tokens[t] = []\n    titles = data[data['type'] == t].title.values\n    \n    for title in titles:\n        tokenized = word_tokenize(title)\n        tokenized = [stemmer.stem(item.lower()) for item in tokenized if item.lower() not in sw]\n        tokens[t] += tokenized","c4dfb076":"freqs = dict()\nfor t in types:\n    freqs[t] = FreqDist(tokens[t])","cfed0295":"def dict_filter (word_freq):\n    return dict( (word,word_freq[word]) for word in word_freq if word.isalnum() )\n\nfor f in freqs:\n    freqs[f] = FreqDist( dict_filter(freqs[f]) )\n    freqs[f].plot(20, title=f)","617dcd35":"#Contagem de tokens\nall_tokens = []\nfor t in tokens:\n    all_tokens += tokens[t]","39cf4cec":"#Propor\u00e7\u00e3o de met\u00e1foras\ntoken_count = len(all_tokens)\nmetaphor_count = sum(data['detected_metaphors'].values)\nprint(\"Propor\u00e7\u00e3o de tokens com met\u00e1foras em rela\u00e7\u00e3o \u00e0 quantidade total de tokens: %.2f%%\" % ((metaphor_count\/token_count)*100))","66c562e5":"#para cada classe\n#textblob polaridade absoluta\n\n#avg_abs_textblob_polarity: \u00e9 a m\u00e9dia de polaridade para a classe\n#avg_textblov_subjectivity: \u00e9 a m\u00e9dia de subjetividade para a classe\n#avg_vader_neg: \u00e9 a m\u00e9dia de sentimento negativo para a classe\n#avg_vader_pos: \u00e9 a m\u00e9dia de sentimento positivo para a classe\n#strong_polarity_percent: \u00e9 a porcentagem de registros que contem polaridade forte ( > 0.5) para a classe\n#strong_subjectivity_percent: \u00e9 a porcentagem de registros que contem subjetividade forte (> 0.5) para a classe\n#strong_neg_percent: \u00e9 a porcentagem de registros que contem negatividade forte (> 0.5) para a classe\n#strong_pos_percent: \u00e9 a porcentagem de registros que contem positividade forte (> 0.5) para a classe\n#agv_metaphors: m\u00e9dia da quantidade de met\u00e1foras detectadas para a classe\n#max_metaphors: valor m\u00e1ximo de met\u00e1foras detectadas em um mesmo t\u00edtulo, para a classe\n\n#As demais estat\u00edsticas que cont\u00e9m _metaphors s\u00e3o semelhantes \u00e0s descritas acima, mas consideram apenas\n#t\u00edtulos com pelo menos uma met\u00e1fora\n\nsent_analysis = {}\nfor t in types:\n    sent_analysis[t] = {\n        'avg_abs_textblob_polarity': data[data['type'] == t]['textblob_polarity'].apply(abs).mean(),\n        'avg_textblov_subjectivity': data[data['type'] == t]['textblob_subjectivity'].apply(abs).mean(),\n        'avg_vader_neg': data[data['type'] == t]['vader_neg'].apply(abs).mean(),\n        'avg_vader_pos': data[data['type'] == t]['vader_pos'].apply(abs).mean(),\n        'avg_vader_neu': data[data['type'] == t]['vader_neu'].apply(abs).mean(),\n        'strong_polarity_percent': len(data[(data['type'] == t) & (data['textblob_polarity'].apply(abs) > .5)]['textblob_polarity'])\/len(data[data['type'] == t]),\n        'strong_subjectivity_percent': len(data[(data['type'] == t) & (data['textblob_subjectivity'].apply(abs) > .5)]['textblob_subjectivity'])\/len(data[data['type'] == t]),\n        'strong_neg_percent': len(data[(data['type'] == t) & (data['vader_neg'].apply(abs) > .5)]['vader_neg'])\/len(data[data['type'] == t]),\n        'strong_pos_percent': len(data[(data['type'] == t) & (data['vader_pos'].apply(abs) > .5)]['vader_pos'])\/len(data[data['type'] == t]),\n                        \n        'avg_metaphors': data[data['type'] == t]['detected_metaphors'].mean(),\n        'max_metaphors': data[data['type'] == t]['detected_metaphors'].max(),\n                        \n        'avg_abs_textblob_polarity_metaphors': data[(data['type'] == t) & (data['detected_metaphors'] > 0)]['textblob_polarity'].apply(abs).mean(),\n        'avg_textblov_subjectivity_metaphors': data[(data['type'] == t) & (data['detected_metaphors'] > 0)]['textblob_subjectivity'].apply(abs).mean(),\n        'avg_vader_neg_metaphors': data[(data['type'] == t) & (data['detected_metaphors'] > 0)]['vader_neg'].apply(abs).mean(),\n        'avg_vader_pos_metaphors': data[(data['type'] == t) & (data['detected_metaphors'] > 0)]['vader_pos'].apply(abs).mean(),\n        'strong_polarity_percent_metaphors': len(data[(data['type'] == t) & (data['detected_metaphors'] > 0) & (data['textblob_polarity'] > .5)])\/len(data[(data['type']==t) & (data['detected_metaphors'] > 0)]),\n        'strong_subjectivity_percent_metaphors': len(data[(data['type'] == t) & (data['detected_metaphors'] > 0) & (data['textblob_subjectivity'] > .5)])\/len(data[(data['type']==t) & (data['detected_metaphors'] > 0)]),\n        'strong_neg_percent_metaphors': len(data[(data['type'] == t) & (data['detected_metaphors'] > 0) & (data['vader_neg'] > .5)])\/len(data[(data['type']==t) & (data['detected_metaphors'] > 0)]),\n        'strong_pos_percent_metaphors': len(data[(data['type'] == t) & (data['detected_metaphors'] > 0) & (data['vader_pos'] > .5)])\/len(data[(data['type']==t) & (data['detected_metaphors'] > 0)])\n    }","6dba2ec7":"def barplot_statistics(prop, plot_title, ylimit=False):\n    sns.set_style(\"whitegrid\")\n    statistic = [sent_analysis[t][prop] for t in types ]\n    for t in types:\n        ax = sns.barplot(x=types, y=statistic)\n        ax.set_title(plot_title)\n        sns.despine(left=True, bottom=True)\n        if ylimit:\n            plt.ylim(0, ylimit)\n        \n        for item in ax.get_xticklabels():\n            item.set_rotation(45)","03cdc79d":"#M\u00e9dia de polaridade absoluta\nbarplot_statistics('avg_abs_textblob_polarity', 'M\u00e9dia de polaridade absoluta', .3)","9ab7c0c8":"#M\u00e9dia absoluta de subjetividade\nbarplot_statistics('avg_textblov_subjectivity', 'M\u00e9dia de subjetividade', .3)","b548ec76":"#M\u00e9dia absoluta de negatividade\nbarplot_statistics('avg_vader_neg', 'M\u00e9dia de negatividade', .3)","1c55797f":"#M\u00e9dia absoluta de positividade\nbarplot_statistics('avg_vader_pos', 'M\u00e9dia de positividade', .3)","d8742e19":"#M\u00e9dia absoluta de neutralidade\nbarplot_statistics('avg_vader_neu', 'M\u00e9dia de neutralidade', 1)","87764451":"#M\u00e9dia absoluta de polaridade forte\nbarplot_statistics('strong_polarity_percent', 'Porcentagem de t\u00edtulos com polaridade forte', .3)","05c016fd":"#M\u00e9dia absoluta de subjetividade forte\nbarplot_statistics('strong_subjectivity_percent', 'Porcentagem de t\u00edtulos com subjetividade forte', .3)","4f5558eb":"#M\u00e9dia absoluta de positividade forte\nbarplot_statistics('strong_pos_percent', 'Porcentagem de t\u00edtulos com positividade forte', .3)","cfadbb29":"#M\u00e9dia absoluta de positividade forte\nbarplot_statistics('strong_neg_percent', 'Porcentagem de t\u00edtulos com negatividade forte', .3)","1ff26458":"#M\u00e9dia de met\u00e1foras por classe\nbarplot_statistics('avg_metaphors', 'M\u00e9dia de met\u00e1foras por classe')","4d6d71c4":"#Quantidade M\u00e1xima de met\u00e1foras em um t\u00edtulo, por classe\nbarplot_statistics('max_metaphors', 'Quantidade M\u00e1xima de met\u00e1foras em um t\u00edtulo')","ded16715":"#M\u00e9dia de polaridade absoluta para t\u00edtulos com met\u00e1foras\nbarplot_statistics('avg_abs_textblob_polarity_metaphors', 'M\u00e9dia de polaridade absoluta para t\u00edtulos com met\u00e1foras', .3)","43664edd":"#M\u00e9dia absoluta de subjetividade para t\u00edtulos com met\u00e1foras\nbarplot_statistics('avg_textblov_subjectivity_metaphors', 'M\u00e9dia de subjetividade para t\u00edtulos com met\u00e1foras', .3)","c6c3b669":"#M\u00e9dia absoluta de negatividade para t\u00edtulos com met\u00e1foras\nbarplot_statistics('avg_vader_neg_metaphors', 'M\u00e9dia de negatividade para t\u00edtulos com met\u00e1foras', .3)","b3a6def8":"#M\u00e9dia absoluta de positividade para t\u00edtulos com met\u00e1foras\nbarplot_statistics('avg_vader_pos_metaphors', 'M\u00e9dia de positividade para t\u00edtulos com met\u00e1foras',.3)","8c858206":"#M\u00e9dia absoluta de polaridade forte para t\u00edtulos com met\u00e1foras\nbarplot_statistics('strong_polarity_percent_metaphors', 'Porcentagem de t\u00edtulos com polaridade forte para t\u00edtulos com met\u00e1foras', .3)","fe0fab71":"#M\u00e9dia absoluta de subjetividade forte para t\u00edtulos com met\u00e1foras\nbarplot_statistics('strong_subjectivity_percent_metaphors', 'Porcentagem de t\u00edtulos com subjetividade forte para t\u00edtulos com met\u00e1foras', .3)","a85a4ad0":"#M\u00e9dia absoluta de negatividade forte para t\u00edtulos com met\u00e1foras\nbarplot_statistics('strong_neg_percent_metaphors', 'Porcentagem de t\u00edtulos com Negatividade forte para t\u00edtulos com met\u00e1foras', .3)","eb0c8fb6":"#M\u00e9dia absoluta de positividade forte para t\u00edtulos com met\u00e1foras\nbarplot_statistics('strong_pos_percent_metaphors', 'Porcentagem de t\u00edtulos com positividade forte para t\u00edtulos com met\u00e1foras', .3)","8cba42ea":"#filtra palavras metaf\u00f3ricas\nmet_stdout = stdout#[stdout['has_metaphor'] == 1]\n#transforma o dataset para om dict, para que as met\u00e1foras sejam marcadas\ntitles_dict = data.set_index('id').to_dict('index')\n#para cada t\u00edtulo, encontra a met\u00e1fora e marca com um M_\nfor item_metaphor in met_stdout.values:\n    try:\n        if (item_metaphor[1]==1):\n            titles_dict[ item_metaphor[0] ]['title'] = titles_dict[ item_metaphor[0] ]['title'].replace(item_metaphor[2], \"M_\"+str(item_metaphor[2]))\n        titles_dict[ item_metaphor[0] ]['id'] = item_metaphor[0]\n    except:\n        pass#print(item_metaphor[0])\n#transforma o dict para um df\ndata_with_metaphors = pd.DataFrame(list(titles_dict.values()))\ndata_with_metaphors.set_index('id').to_csv('titles_tagged_metaphors.csv')","d6b62460":"#taggeddata = pd.read_csv('..\/input\/titles_tagged_metaphors.csv',usecols=['id','title','type','detected_metaphors'])\ntaggeddata = pd.read_csv('..\/input\/titles_tagged_metaphors.csv')\ntaggeddata.head()","cf09f9d8":"#recupera os t\u00edtulos originais\n#taggeddata['title_orig'] = taggeddata.apply(lambda row: row['title'].replace(\"M_\",\"\"), axis=1)\ntaggeddata.head()","60661445":"#o POS deve ser feito em cima de todo o t\u00edtulo, sem a tag M_\ndef word_man(sentence):\n    tokenSemTagM = nltk.word_tokenize(sentence.replace(\"M_\",\"\"))\n    tokenComTagM = nltk.word_tokenize(sentence)\n    #print(len(tokenComTagM))\n    pos = nltk.pos_tag(tokenSemTagM)\n    #print(len(pos))\n    if len(pos) != len(tokenSemTagM) != len(tokenComTagM):\n        print('ops')\n    result = []\n    try:\n        for i in range(len(tokenComTagM)):\n            if \"M_\" in tokenComTagM[i]:\n                result.append(pos[i])\n    except:\n        return []\n    return result\n\ntaggeddata['met_tokenized_sents'] = taggeddata.apply(lambda row: word_man(row['title']), axis=1)\n","12a09951":"taggeddata.head()","35c704bc":"# inicialmente vamos abstrair v\u00e1rias categorias de NN em uma \u00fanica e v\u00e1rias categorias de VB em uma \u00fanica\ntypesLang = ['NN', 'VB']\n\nfor t in typesLang:\n    def word_manNN(tokenized_sents):\n        try:\n            count = 0\n            for i in range(len(tokenized_sents)):\n                if t in tokenized_sents[i][1]:\n                    count = count+1\n        except:\n            return count\n        return count\n\n    taggeddata['met_'+t] = taggeddata.apply(lambda row: word_manNN(row['met_tokenized_sents']), axis=1)\ntaggeddata.head(20)","394e75d5":"taggeddata.set_index('id').to_csv('titles_tagged_metaphors_with_tokenized_sents.csv')","7e9abbc0":"#len(taggeddata[(taggeddata['type'] == 'fake') & (taggeddata['met_NN'] == 0) & (taggeddata['met_VB'] == 0)])\n#len(taggeddata[(taggeddata['type'] == 'fake') & ((taggeddata['met_NN'] == 1) | (taggeddata['met_VB'] == 1))])\n#len(taggeddata[(taggeddata['type'] == 'fake') & (taggeddata['met_NN'] == 1) & (taggeddata['met_VB'] == 0)])\n#len(taggeddata[(taggeddata['type'] == 'fake') & (taggeddata['met_NN'] == 0) & (taggeddata['met_VB'] == 1)])\n#len(taggeddata[(taggeddata['type'] == 'fake') & (taggeddata['met_NN'] == 1) & (taggeddata['met_VB'] == 1)])\n\ntypes","0c2c6f79":"sent_analysis = {}\nfor t in types:\n    lenTotal = len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1)])\n    print(lenTotal)\n    sent_analysis[t] = {\n        'abs_sem_metafora' : len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & (taggeddata['met_NN'] == 0) & (taggeddata['met_VB'] == 0)]),\n        'abs_com_metafora' : len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & ((taggeddata['met_NN'] >= 1) | (taggeddata['met_VB'] >= 1))]),\n        'abs_com_metafora_so_NN' : len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & (taggeddata['met_NN'] >= 1)]),\n        'abs_com_metafora_so_VB' : len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & (taggeddata['met_VB'] >= 1)]),\n        'abs_com_metafora_NN_e_VB' : len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & (taggeddata['met_NN'] >= 1) & (taggeddata['met_VB'] >= 1)]),\n        \n        'pct_sem_metafora' : (len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & (taggeddata['met_NN'] == 0) & (taggeddata['met_VB'] == 0)])\/lenTotal),\n        'pct_com_metafora' : (len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & ((taggeddata['met_NN'] >= 1) | (taggeddata['met_VB'] >= 1))])\/lenTotal),\n        #'pct_com_metafora_so_NN' : (len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & (taggeddata['met_NN'] >= 1) & (taggeddata['met_VB'] == 0)])\/lenTotal),\n        'pct_com_metafora_so_NN' : (len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & (taggeddata['met_NN'] >= 1)])\/lenTotal),\n        #'pct_com_metafora_so_VB' : (len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & (taggeddata['met_NN'] == 0) & (taggeddata['met_VB'] >= 1)])\/lenTotal),\n        'pct_com_metafora_so_VB' : (len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & (taggeddata['met_VB'] >= 1)])\/lenTotal),\n        'pct_com_metafora_NN_e_VB' : (len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & (taggeddata['met_NN'] >= 1) & (taggeddata['met_VB'] >= 1)])\/lenTotal)\n    }","de2fb22d":"barplot_statistics('abs_sem_metafora', 'Total sem met\u00e1fora') # TODO AJUSTAR","860541aa":"\nbarplot_statistics('abs_com_metafora', 'Total com met\u00e1fora (NN ou VB)') #AJUSTAR","6f9f3335":"barplot_statistics('abs_com_metafora_so_NN', 'Total com met\u00e1fora (somente NN)')","012d7e47":"barplot_statistics('abs_com_metafora_so_VB', 'Total com met\u00e1fora (somente VB)')","62ea8923":"\nbarplot_statistics('abs_com_metafora_NN_e_VB', 'Total com met\u00e1fora (NN e VB presentes)')","b3c441b3":"barplot_statistics('pct_sem_metafora', 'Percentual de met\u00e1foras que n\u00e3o s\u00e3o um VB ou NN') # AJUSTAR","414afebf":"barplot_statistics('pct_com_metafora', 'Percentual de NN ou VB nos t\u00edtulos com met\u00e1fora ') #AJUSTAR","b1647c91":"\nbarplot_statistics('pct_com_metafora_so_NN', 'Percentual de NN nos t\u00edtulos com met\u00e1fora')","98a06a94":"\nbarplot_statistics('pct_com_metafora_so_VB', 'Percentual de VB nos t\u00edtulos com met\u00e1fora')","c543a29c":"barplot_statistics('pct_com_metafora_NN_e_VB', 'Percentual de NN e VB em conjunto, nos t\u00edtulos com met\u00e1fora')","b11fe107":"# an\u00e1lise de classes gramaticais + sentimento\n\n    \nsent_analysis = {}\nfor t in types:\n    lenTotal = len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1)])\n    #print(lenTotal)\n    sent_analysis[t] = {\n        #'pct_com_metafora_so_VB' : (len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & (taggeddata['met_NN'] == 0) & (taggeddata['met_VB'] == 1)])\/lenTotal),\n        #'pct_com_metafora_NN_e_VB' : (len(taggeddata[(taggeddata['type'] == t) & (taggeddata['detected_metaphors'] >= 1) & (taggeddata['met_NN'] == 1) & (taggeddata['met_VB'] == 1)])\/lenTotal)\n        'avg_textblov_subjectivity_metaphors_vb': data[(data['type'] == t) & (data['detected_metaphors'] > 0) & (taggeddata['met_VB'] >= 1)]['textblob_subjectivity'].apply(abs).mean(),\n        'avg_textblov_subjectivity_metaphors_nn': data[(data['type'] == t) & (data['detected_metaphors'] > 0) & (taggeddata['met_NN'] >= 1)]['textblob_subjectivity'].apply(abs).mean(),\n        'avg_textblov_subjectivity_metaphors_nn_e_vb': data[(data['type'] == t) & (data['detected_metaphors'] > 0) & (taggeddata['met_NN'] >= 1) & (taggeddata['met_VB'] >= 1)]['textblob_subjectivity'].apply(abs).mean(),   \n        'avg_abs_textblob_polarity_metaphors_nn_e_vb': data[(data['type'] == t) & (data['detected_metaphors'] > 0) & (taggeddata['met_NN'] >= 1) & (taggeddata['met_VB'] >= 1)]['textblob_polarity'].apply(abs).mean(),   \n        'avg_abs_textblob_polarity_metaphors_nn': data[(data['type'] == t) & (data['detected_metaphors'] > 0) & (taggeddata['met_NN'] >= 1)]['textblob_polarity'].apply(abs).mean(),   \n        'avg_abs_textblob_polarity_metaphors_vb': data[(data['type'] == t) & (data['detected_metaphors'] > 0) & (taggeddata['met_VB'] >= 1)]['textblob_polarity'].apply(abs).mean(),\n    }","64504545":"barplot_statistics('avg_textblov_subjectivity_metaphors_vb', 'M\u00e9dia subjetividade quando existe met. VB')","90ff62ef":"barplot_statistics('avg_textblov_subjectivity_metaphors_nn', 'M\u00e9dia subjetividade quando existe met. NN')","3662738e":"barplot_statistics('avg_textblov_subjectivity_metaphors_nn_e_vb', 'M\u00e9dia subjetividade quando existe met. VB e NN')","1a4d752e":"barplot_statistics('avg_abs_textblob_polarity_metaphors_nn_e_vb', 'M\u00e9dia polaridade quando existe met. VB e NN')","9b34be99":"barplot_statistics('avg_abs_textblob_polarity_metaphors_nn', 'M\u00e9dia polaridade quando existe met. NN')","55f9a9ed":"barplot_statistics('avg_abs_textblob_polarity_metaphors_vb', 'M\u00e9dia polaridade quando existe met. VB')","e23737c2":"Distribui\u00e7\u00e3o de palavras","e7170e89":"Sentimentos por met\u00e1fora","6152335e":"Estat\u00edsticas gerais de sentimentos","91ba99a8":"Distribui\u00e7\u00e3o de classes","0dbd3b76":"Propor\u00e7\u00e3o de met\u00e1foras","5de03e9b":"**Met\u00e1foras e tipo**","4a9365f8":"Sentimentos e quantidades de met\u00e1foras","142b7ff3":"An\u00e1lise de uso de met\u00e1foras","dd60a595":"**Gerando gr\u00e1ficos**"}}