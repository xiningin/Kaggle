{"cell_type":{"4d516b5d":"code","0aba7253":"code","fdb6630c":"code","035039da":"code","cf8398ce":"code","551a38c0":"code","f523ec31":"markdown","322518dd":"markdown","3f7942b3":"markdown","f642e7ea":"markdown","8d403f9e":"markdown"},"source":{"4d516b5d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0aba7253":"# Identity Matrix\n# Since all Identity Matrices are square, the np.eye() function only takes a single integer as an argument\n# 7 x 7 Identity matrix\nX = np.eye(7)\nprint(X)","fdb6630c":"# Diagonal Matrix\n# 8 x 8 diagonal matrix that contains the numbers 1,2,3,4,5,6,7 and 8 on its main diagonal\nX = np.diag([1,2,3,4,5,6,7,8])\nprint(X)","035039da":"# Slicing\n# NumPy array with elements from 1 to 9 \nx = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9]) \n\n# Index values can be negative. \narr = x[np.array([1, 3, -3])] \nprint(\"Elements are : \\n\",arr) ","cf8398ce":"# Stacking \narrays = [np.random.randn(2, 3)for _ in range(8)]\na = np.stack(arrays, axis=0).shape\nprint(a)","551a38c0":"# Broadcasting \na = np.array([1,2,3,4]) \nb = np.array([10,20,30,40]) \nc = a * b \nprint(c)","f523ec31":"# **5. BROADCASTING**","322518dd":"# **3. SLICING**","3f7942b3":"# **1. IDENTITY MATRIX**","f642e7ea":"# **2. DIAGONAL MATRIX**","8d403f9e":"# **4. STACKING**"}}