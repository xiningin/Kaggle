{"cell_type":{"fb7e96f6":"code","1aeb8150":"code","7f28fa12":"code","a9f975eb":"code","41fbc31d":"code","faccf856":"code","86bd10f9":"markdown"},"source":{"fb7e96f6":"import pandas as pd\nimport numpy as np\n\ntrain = pd.read_csv('..\/input\/otto-group-product-classification-challenge\/train.csv')\ntest = pd.read_csv('..\/input\/otto-group-product-classification-challenge\/test.csv')\nsampleSubmission = pd.read_csv('..\/input\/otto-group-product-classification-challenge\/sampleSubmission.csv')\n\ntrain.shape, test.shape","1aeb8150":"train[\"target\"] = train[\"target\"].str.replace('Class_', '')\ntrain[\"target\"] = train[\"target\"].astype(int) - 1\n\nX_train = train.drop(['id','target'] , axis=1)\ny_train = train[\"target\"]\nX_test = test.drop('id', axis=1)","7f28fa12":"y_pred = np.zeros((len(X_test), 9))\nmodels = []\noof_train = np.zeros((len(X_train),9))","a9f975eb":"import lightgbm as lgb\nfrom sklearn.model_selection import KFold\n\nNFOLDS = 5\n\ncv = KFold(n_splits=NFOLDS, shuffle=True, random_state=0)\n\nparams = {\n    #'metric':'multi_logloss',\n    'objective': 'multiclass',\n    'num_class': 9,\n    #'verbosity': 1,\n}\n\nfor fold_id, (train_index, valid_index) in enumerate(cv.split(X_train)):\n    X_tr = X_train.loc[train_index, :]\n    X_val = X_train.loc[valid_index, :]\n    y_tr = y_train[train_index].astype(int)\n    y_val = y_train[valid_index].astype(int)\n    \n    lgb_train = lgb.Dataset(X_tr, y_tr)\n    lgb_eval = lgb.Dataset(X_val, y_val)\n    \n    model = lgb.train(params, lgb_train,\n                        valid_sets=[lgb_train, lgb_eval],\n                        verbose_eval=10,\n                        num_boost_round=1000,\n                        early_stopping_rounds=10)\n    \n    oof_train[valid_index] = model.predict(X_val, num_iteration=model.best_iteration)\n    y_pred += model.predict(X_test, num_iteration=model.best_iteration)\/NFOLDS","41fbc31d":"submit = pd.concat([sampleSubmission[['id']], pd.DataFrame(y_pred)], axis = 1)\nsubmit.columns = sampleSubmission.columns\nsubmit.to_csv('submit.csv', index=False)","faccf856":"submit","86bd10f9":"# reference\nhttps:\/\/www.kaggle.com\/sishihara\/upura-kaggle-tutorial-04-lightgbm\nhttps:\/\/www.kaggle.com\/sishihara\/upura-kaggle-tutorial-06-validation\nhttps:\/\/www.kaggle.com\/wakamezake\/otto-simple-lgb\/data"}}