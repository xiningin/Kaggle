{"cell_type":{"655952bd":"code","e2cedccd":"code","351432c6":"code","6a24cd22":"code","ad6a82ef":"code","ad74572d":"code","1d2bc8ae":"code","d1ae577c":"code","f0db330c":"code","19305972":"code","8f950154":"code","6edcab13":"code","9c959322":"code","467af666":"code","45afc9b2":"code","12f7a541":"code","f6f47163":"markdown","e8b9e6ee":"markdown","9d884ac3":"markdown"},"source":{"655952bd":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport gc\nfrom datetime import datetime\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e2cedccd":"weather_test = pd.read_csv('\/kaggle\/input\/ashrae-energy-prediction\/weather_test.csv')","351432c6":"weather_test['timestamp'] = pd.to_datetime(weather_test['timestamp'])\nweather_test['date'] = weather_test['timestamp'].apply(datetime.date)\nweather_test['time'] = weather_test['timestamp'].apply(datetime.time)","6a24cd22":"for j in ['air_temperature']:\n    temp = weather_test.groupby(['site_id','date','time'])[j].agg(pd.Series.mode)\n    temp_list = []\n    for i in weather_test.index:\n        if np.isnan(weather_test.loc[i][j]):\n            try:\n                temp1 = temp[[weather_test.loc[i].site_id,weather_test.loc[i].date,weather_test.loc[i].time]]\n                temp_list.append(temp1)\n            except:\n                temp_list.append(np.nan)\n        else:\n            temp_list.append(weather_test.loc[i][j])\n    weather_test[j] = temp_list\n    temp1 = []\n    for i in weather_test.index:\n        if type(weather_test.loc[i].air_temperature) == np.float64:\n            temp = weather_test.loc[i].air_temperature\n            temp1.append(temp)\n        else:\n            temp2 = 0\n            temp3 = 0\n            for i in weather_test.loc[i].air_temperature:\n                if type(i) == np.float64:\n                    temp2 += i\n                    temp3 += 1\n            temp1.append(temp2\/temp3)\n    weather_test[j] = temp1\n    del temp1\n    del temp\n    del temp_list","ad6a82ef":"weather_test['air_temperature'].isna().sum()","ad74572d":"gc.collect()","1d2bc8ae":"for j in ['dew_temperature']:\n    temp = weather_test.groupby(['site_id','date','time'])[j].agg(pd.Series.mode)\n    temp_list = []\n    for i in weather_test.index:\n        if np.isnan(weather_test.loc[i][j]):\n            try:\n                temp1 = temp[[weather_test.loc[i].site_id,weather_test.loc[i].date,weather_test.loc[i].time]]\n                temp_list.append(temp1)\n            except:\n                temp_list.append(np.nan)\n        else:\n            temp_list.append(weather_test.loc[i][j])\n    weather_test[j] = temp_list\n    temp1 = []\n    for i in weather_test.index:\n        if type(weather_test.loc[i].air_temperature) == np.float64:\n            temp = weather_test.loc[i].air_temperature\n            temp1.append(temp)\n        else:\n            temp2 = 0\n            temp3 = 0\n            for i in weather_test.loc[i].air_temperature:\n                if type(i) == np.float64:\n                    temp2 += i\n                    temp3 += 1\n            temp1.append(temp2\/temp3)\n    weather_test[j] = temp1\n    del temp1\n    del temp\n    del temp_list","d1ae577c":"weather_test['dew_temperature'].isna().sum()","f0db330c":"for j in ['wind_speed']:\n    temp = weather_test.groupby(['site_id','date','time'])[j].agg(pd.Series.mode)\n    temp_list = []\n    for i in weather_test.index:\n        if np.isnan(weather_test.loc[i][j]):\n            try:\n                temp1 = temp[[weather_test.loc[i].site_id,weather_test.loc[i].date,weather_test.loc[i].time]]\n                temp_list.append(temp1)\n            except:\n                temp_list.append(np.nan)\n        else:\n            temp_list.append(weather_test.loc[i][j])\n    weather_test[j] = temp_list\n    temp1 = []\n    for i in weather_test.index:\n        if type(weather_test.loc[i].air_temperature) == np.float64:\n            temp = weather_test.loc[i].air_temperature\n            temp1.append(temp)\n        else:\n            temp2 = 0\n            temp3 = 0\n            for i in weather_test.loc[i].air_temperature:\n                if type(i) == np.float64:\n                    temp2 += i\n                    temp3 += 1\n            temp1.append(temp2\/temp3)\n    weather_test[j] = temp1\n    del temp1\n    del temp\n    del temp_list","19305972":"weather_test['wind_speed'].isna().sum()","8f950154":"for j in ['wind_direction']:\n    temp = weather_test.groupby(['site_id','date','time'])[j].agg(pd.Series.mode)\n    temp_list = []\n    for i in weather_test.index:\n        if np.isnan(weather_test.loc[i][j]):\n            try:\n                temp1 = temp[[weather_test.loc[i].site_id,weather_test.loc[i].date,weather_test.loc[i].time]]\n                temp_list.append(temp1)\n            except:\n                temp_list.append(np.nan)\n        else:\n            temp_list.append(weather_test.loc[i][j])\n    weather_test[j] = temp_list\n    temp1 = []\n    for i in weather_test.index:\n        if type(weather_test.loc[i].air_temperature) == np.float64:\n            temp = weather_test.loc[i].air_temperature\n            temp1.append(temp)\n        else:\n            temp2 = 0\n            temp3 = 0\n            for i in weather_test.loc[i].air_temperature:\n                if type(i) == np.float64:\n                    temp2 += i\n                    temp3 += 1\n            temp1.append(temp2\/temp3)\n    weather_test[j] = temp1\n    del temp1\n    del temp\n    del temp_list","6edcab13":"weather_test['wind_direction'].isna().sum()","9c959322":"for j in ['sea_level_pressure']:\n    temp = weather_test.groupby(['site_id','date','time'])[j].agg(pd.Series.mode)\n    temp_list = []\n    for i in weather_test.index:\n        if np.isnan(weather_test.loc[i][j]):\n            try:\n                temp1 = temp[[weather_test.loc[i].site_id,weather_test.loc[i].date,weather_test.loc[i].time]]\n                temp_list.append(temp1)\n            except:\n                temp_list.append(np.nan)\n        else:\n            temp_list.append(weather_test.loc[i][j])\n    weather_test[j] = temp_list\n    temp1 = []\n    for i in weather_test.index:\n        if type(weather_test.loc[i].air_temperature) == np.float64:\n            temp = weather_test.loc[i].air_temperature\n            temp1.append(temp)\n        else:\n            temp2 = 0\n            temp3 = 0\n            for i in weather_test.loc[i].air_temperature:\n                if type(i) == np.float64:\n                    temp2 += i\n                    temp3 += 1\n            temp1.append(temp2\/temp3)\n    weather_test[j] = temp1\n    del temp1\n    del temp\n    del temp_list","467af666":"weather_test['sea_level_pressure'].isna().sum()","45afc9b2":"del weather_test['cloud_coverage']","12f7a541":"weather_test.to_csv('cleaned_weather_test.csv',index=False)","f6f47163":"# Purpose of this notebook","e8b9e6ee":"# Handling missing data of table weather data (test)","9d884ac3":"* **The purpose of this notebook is to handle missing data present in weather test file**\n* **This notebook outputs cleaned data files with name cleaned_weather_test**\n* **The output of this notebook can be used to create new notebook with cleaned file to perform furthur steps like model fitting etc.**\n* **Steps to use these cleaned files: Output->New_notebook**"}}