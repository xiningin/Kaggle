{"cell_type":{"235b380d":"code","ed91f220":"code","92ee0c55":"code","6c2cd1a0":"code","2ce45494":"code","25d972cd":"code","32700b70":"code","cd54ccf9":"code","a5d30d60":"code","badb8871":"code","163a937c":"code","2bf0eead":"code","933289f2":"markdown","c6ccb23e":"markdown","7163659b":"markdown","e4d56780":"markdown","9d0d9147":"markdown"},"source":{"235b380d":"#Libraries\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfrom kaggle_secrets import UserSecretsClient\n\nimport plotly.graph_objects as go\nimport plotly.express as px\n","ed91f220":"#Data Load\nurl = '..\/input\/data-of-india\/complete.csv'\ndata = pd.read_csv(url, header='infer')","92ee0c55":"user_secrets = UserSecretsClient()\nMapKey = user_secrets.get_secret(\"MapBoxKey\")","6c2cd1a0":"#Inspect\ndata.head()","2ce45494":"#Aggregate Function\nagg_func = {'Latitude':'first', 'Longitude':'first', \n            'Total Confirmed cases': 'sum',\n            'Death': 'sum',\n            'Cured\/Discharged\/Migrated': 'sum' }","25d972cd":"# New DataFrame with Aggregated Data\ndf = data.groupby('Name of State \/ UT', as_index=False).agg (agg_func)","32700b70":"#Renaming Columns\ndf = df.rename(columns={'Total Confirmed cases':'Cases', 'Cured\/Discharged\/Migrated': 'Recovered', 'Name of State \/ UT': 'State'})","cd54ccf9":"#Inspect New Dataframe\ndf.head()","a5d30d60":"fig = px.scatter_mapbox(df, lat=\"Latitude\", lon=\"Longitude\", hover_name=\"State\", hover_data=[\"Cases\", \"Death\", \"Recovered\"],\n                        color_discrete_sequence=[\"darkmagenta\"], zoom=2.5, height=300)\nfig.update_layout(mapbox_style=\"open-street-map\")\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","badb8871":"px.set_mapbox_access_token(MapKey)\nfig = px.scatter_mapbox(df, lat=\"Latitude\", lon=\"Longitude\",     color=\"Cases\", size=\"Cases\",\n                  color_continuous_scale=px.colors.cyclical.IceFire, size_max=15, zoom=2.5)\nfig.show()","163a937c":"px.set_mapbox_access_token(MapKey)\nfig = px.scatter_mapbox(df, lat=\"Latitude\", lon=\"Longitude\",     color=\"Death\", size=\"Death\",\n                  color_continuous_scale=px.colors.cyclical.IceFire, size_max=15, zoom=2.5)\nfig.show()","2bf0eead":"px.set_mapbox_access_token(MapKey)\nfig = px.scatter_mapbox(df, lat=\"Latitude\", lon=\"Longitude\",     color=\"Recovered\", size=\"Recovered\",\n                  color_continuous_scale=px.colors.cyclical.IceFire, size_max=15, zoom=2.5)\nfig.show()","933289f2":"## Recoveries per State","c6ccb23e":"## Cases per State","7163659b":"## Complete Info per State","e4d56780":"## Deaths per State","9d0d9147":"# State Wise Covid Cases - Geographical Map\n\nIn this notebook, I shall aggregate the all covid cases for each state using the aggregate function in Pandas and then plot the info on the Geographical Map."}}