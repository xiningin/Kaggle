{"cell_type":{"3cde1959":"code","992421a9":"code","a86c8432":"code","b24d8d7f":"code","f22e14d6":"code","d8b24e39":"code","84d69859":"code","d0981d58":"code","699ab731":"code","be63156b":"code","870eda9d":"code","d0e6388b":"code","ab0cce98":"code","f1f0846c":"code","83862e0b":"code","09270e83":"code","4c17b0d1":"code","edec9000":"code","79a565f5":"code","5d425058":"code","c40903c2":"code","cbf97f8b":"code","58b27aef":"code","64b1a3fd":"code","0e150ce6":"code","b706d47e":"code","720f228a":"code","f3a5305d":"code","a92c4da7":"code","14c4cf02":"code","e860df34":"code","8f8a5019":"code","799f5d73":"code","83ecb1c7":"code","29ab7623":"code","0a8c9d43":"code","8ecc0ee3":"code","205d3c13":"code","7e4281b3":"code","ba539581":"code","1c51fd4f":"code","b4985101":"code","9cf097e3":"code","d691a315":"code","186710e9":"code","0d0b89bd":"code","119803ad":"code","1039d516":"code","13ab1d94":"code","cd7296a0":"code","0c57f0b2":"code","653047a5":"code","7a6e2d6c":"code","29395a91":"code","a4afc362":"code","8170fc17":"code","7378fbc8":"code","1228acb7":"code","c01dc9c7":"code","e653cafb":"markdown","c097a3aa":"markdown","dd68b1e7":"markdown","1b53d6b5":"markdown","a0734614":"markdown","9fb90fe2":"markdown","f83d38cb":"markdown","5813f4c5":"markdown","d53b2170":"markdown","f7291db2":"markdown","1fa786cb":"markdown"},"source":{"3cde1959":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","992421a9":"data_path = \"\/kaggle\/input\/DADOS\/MICRODADOS_ENEM_2019.csv\"\n\ndf = pd.read_csv(data_path, sep=';', encoding = \"ISO-8859-1\", chunksize=1000000)\n\ndf = pd.concat(df, ignore_index=True)\n\ndf.head()","a86c8432":"def build_table(df, index, colunms):\n    df2 = df[index.keys()]\n\n    pieces = []\n    for col in df2.columns:\n        tmp_series = df2[col].value_counts()\n        tmp_series.name = col\n        pieces.append(tmp_series)\n    df_value_counts = pd.concat(pieces, axis=1)\n\n    df_t = df_value_counts.T\n    df_t.rename(columns=colunms, \n                index=index, inplace=True)\n\n    return df_t\n\n\ndef annotate(ax, labels=None):\n    if labels: \n        ax.set_xticklabels(labels)\n    for p in ax.patches:\n        ax.annotate(str(p.get_height()), (p.get_x(), p.get_height()))\n    \n    return ax","b24d8d7f":"build_table(df, {'TP_SEXO': 'Sexo'}, {'M': 'Masculino', 'F': 'Feminino'})","f22e14d6":"ax = df['TP_SEXO'].value_counts(sort=False).plot(title='Sexo', kind='bar', rot=0)\n\nannotate(ax)","d8b24e39":"df['SG_UF_RESIDENCIA'].value_counts().plot(title='Unidade da Federa\u00e7\u00e3o de resid\u00eancia',kind='bar', figsize=(20,5), rot=0)","84d69859":"df['NU_IDADE'].value_counts(sort=False).plot(title='Idade',kind='bar', figsize=(20,5))","d0981d58":"ax = df['TP_SEXO'].value_counts(sort=False).plot(title='Sexo', kind='bar', rot=0)\n\nannotate(ax)","699ab731":"ax = df['TP_ESTADO_CIVIL'].value_counts(sort=False).plot(title='Estado Civil',kind='bar', figsize=(20,5), rot=0)\n\nannotate(ax, ['N\u00e3o informado', 'Solteiro(a)', 'Casado(a)\/Mora com companheiro(a)', 'Divorciado(a)\/Desquitado(a)\/Separado(a)', 'Vi\u00favo(a)'])","be63156b":"ax = df['TP_COR_RACA'].value_counts(sort=False).plot(title='Cor\/ra\u00e7a', kind='bar', figsize=(20,5), rot=0)\n\nannotate(ax, ['N\u00e3o declarado','Branca','Preta','Parda','Amarela','Ind\u00edgena'])","870eda9d":"ax = df['TP_NACIONALIDADE'].value_counts(sort=False).plot(title='Nacionalidade', kind='bar', figsize=(20,5), rot=0)\n\nannotate(ax, ['N\u00e3o informado', 'Brasileiro(a)', 'Brasileiro(a) Naturalizado(a)', 'Estrangeiro(a)', 'Brasileiro(a) Nato(a), nascido(a) no exterior'])","d0e6388b":"ax = df['TP_ST_CONCLUSAO'].value_counts(sort=False).plot(title='Situa\u00e7\u00e3o de conclus\u00e3o do Ensino M\u00e9dio', kind='bar', figsize=(20,5), rot=0)\n\nannotate(ax, ['J\u00e1 conclu\u00ed o Ensino M\u00e9dio', 'Estou cursando e concluirei o Ensino M\u00e9dio em 2019', 'Estou cursando e concluirei o Ensino M\u00e9dio ap\u00f3s 2019', 'N\u00e3o conclu\u00ed e n\u00e3o estou cursando o Ensino M\u00e9dio'])","ab0cce98":"ax = df['TP_ESCOLA'].value_counts(sort=False).plot(title='Tipo de escola do Ensino M\u00e9dio',kind='bar', figsize=(20,5), rot=0)\n\nannotate(ax, ['N\u00e3o Respondeu', 'P\u00fablica', 'Privada', 'Exterior'])","f1f0846c":"ax = df['TP_ANO_CONCLUIU'].value_counts(sort=False).plot(title='Ano de Conclus\u00e3o do Ensino M\u00e9dio', kind='bar', figsize=(20,5), rot=0)\n\nannotate(ax, ['N\u00e3o informado', '2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007', 'Antes de 2007'])","83862e0b":"ax = df['IN_TREINEIRO'].value_counts(sort=False).plot(title='Indica se o inscrito fez a prova com intuito de apenas treinar seus conhecimentos', kind='bar', figsize=(20,5), rot=0)\n\nannotate(ax, ['N\u00e3o', 'Sim'])","09270e83":"ax = df['TP_DEPENDENCIA_ADM_ESC'].value_counts(sort=False).plot(title='Depend\u00eancia administrativa (Escola)', kind='bar', figsize=(20,5), rot=0)\n\nannotate(ax, ['Estadual','Municipal','Privada','Federal'])","4c17b0d1":"ax = df['TP_LOCALIZACAO_ESC'].value_counts(sort=False).plot(title='Localiza\u00e7\u00e3o (Escola)', kind='bar', figsize=(20,5), rot=0)\n\nannotate(ax, ['Rural', 'Urbana'])","edec9000":"index = {\n    'IN_BAIXA_VISAO' : 'Indicador de baixa vis\u00e3o',\n    'IN_CEGUEIRA' : 'Indicador de cegueira',\n    'IN_SURDEZ' : 'Indicador de surdez',\n    'IN_SURDO_CEGUEIRA' : 'Indicador de surdo-cegueira',\n    'IN_DEFICIENCIA_FISICA' : 'Indicador de defici\u00eancia f\u00edsica',\n    'IN_DEFICIENCIA_MENTAL' : 'Indicador de defici\u00eancia mental',\n    'IN_DEFICIT_ATENCAO' : 'Indicador de d\u00e9ficit de aten\u00e7\u00e3o',\n    'IN_DISLEXIA' : 'Indicador de dislexia',\n    'IN_DISCALCULIA' : 'Indicador de discalculia',\n    'IN_AUTISMO' : 'Indicador de autismo',\n    'IN_VISAO_MONOCULAR' : 'Indicador de vis\u00e3o monocular',\n    'IN_OUTRA_DEF' : 'Indicador de outra defici\u00eancia ou condi\u00e7\u00e3o especial'\n}\n\nbuild_table(df, index, {0: 'N\u00e3o', 1: 'Sim'})","79a565f5":"index = {\n    'IN_GESTANTE': 'Indicador de gestante',\n    'IN_LACTANTE': 'Indicador de lactante',\n    'IN_IDOSO': 'Indicador de inscrito idoso',\n    'IN_ESTUDA_CLASSE_HOSPITALAR': 'Indicador de inscri\u00e7\u00e3o em Unidade Hospitalar'\n}\n\nbuild_table(df, index, {0: 'N\u00e3o', 1: 'Sim'})","5d425058":"index = {\n    'IN_SEM_RECURSO':'Indicador de inscrito que n\u00e3o requisitou nenhum recurso',\n    'IN_BRAILLE':'Indicador de solicita\u00e7\u00e3o de prova em braille',\n    'IN_AMPLIADA_24':'Indicador de solicita\u00e7\u00e3o de prova superampliada com fonte tamanho 24',\n    'IN_AMPLIADA_18':'Indicador de solicita\u00e7\u00e3o de prova ampliada com fonte tamanho 18',\n    'IN_LEDOR':'Indicador de solicita\u00e7\u00e3o de aux\u00edlio para leitura (ledor)',\n    'IN_ACESSO':'Indicador de solicita\u00e7\u00e3o de sala de f\u00e1cil acesso',\n    'IN_TRANSCRICAO':'Indicador de solicita\u00e7\u00e3o de aux\u00edlio para transcri\u00e7\u00e3o',\n    'IN_LIBRAS':'Indicador de solicita\u00e7\u00e3o de Tradutor- Int\u00e9rprete Libras',\n    'IN_TEMPO_ADICIONAL':'Indicador de solicita\u00e7\u00e3o de tempo adicional',\n    'IN_LEITURA_LABIAL':'Indicador de solicita\u00e7\u00e3o de leitura labial',\n    'IN_MESA_CADEIRA_RODAS':'Indicador de solicita\u00e7\u00e3o de mesa para cadeira de rodas',\n    'IN_MESA_CADEIRA_SEPARADA':'Indicador de solicita\u00e7\u00e3o de mesa e cadeira separada',\n    'IN_APOIO_PERNA':'Indicador de solicita\u00e7\u00e3o de apoio de perna e p\u00e9',\n    'IN_GUIA_INTERPRETE':'Indicador de solicita\u00e7\u00e3o de guia int\u00e9rprete',\n    'IN_COMPUTADOR':'Indicador de solicita\u00e7\u00e3o de computador',\n    'IN_CADEIRA_ESPECIAL':'Indicador de solicita\u00e7\u00e3o de cadeira especial',\n    'IN_CADEIRA_CANHOTO':'Indicador de solicita\u00e7\u00e3o de cadeira para canhoto',\n    'IN_CADEIRA_ACOLCHOADA':'Indicador de solicita\u00e7\u00e3o de cadeira acolchoada',\n    'IN_PROVA_DEITADO':'Indicador de solicita\u00e7\u00e3o para fazer prova deitado em maca ou mobili\u00e1rio similar',\n    'IN_MOBILIARIO_OBESO':'Indicador de solicita\u00e7\u00e3o de mobili\u00e1rio adequado para obeso',\n    'IN_LAMINA_OVERLAY':'Indicador de solicita\u00e7\u00e3o de l\u00e2mina overlay',\n    'IN_PROTETOR_AURICULAR':'Indicador de solicita\u00e7\u00e3o de protetor auricular',\n    'IN_MEDIDOR_GLICOSE':'Indicador de solicita\u00e7\u00e3o de medidor de glicose e\/ou aplica\u00e7\u00e3o de insulina',\n    'IN_MAQUINA_BRAILE':'Indicador de solicita\u00e7\u00e3o de m\u00e1quina Braile e\/ou Reglete e Pun\u00e7\u00e3o',\n    'IN_SOROBAN':'Indicador de solicita\u00e7\u00e3o de soroban',\n    'IN_MARCA_PASSO':'Indicador de solicita\u00e7\u00e3o de marca-passo (impeditivo de uso de detector de metais)',\n    'IN_SONDA':'Indicador de solicita\u00e7\u00e3o de sonda com troca peri\u00f3dica',\n    'IN_MEDICAMENTOS':'Indicador de solicita\u00e7\u00e3o de medicamentos',\n    'IN_SALA_INDIVIDUAL':'Indicador de solicita\u00e7\u00e3o de sala especial individual',\n    'IN_SALA_ESPECIAL':'Indicador de solicita\u00e7\u00e3o de sala especial at\u00e9 20 participantes',\n    'IN_SALA_ACOMPANHANTE':'Indicador de solicita\u00e7\u00e3o de sala reservada para acompanhantes',\n    'IN_MOBILIARIO_ESPECIFICO':'Indicador de solicita\u00e7\u00e3o de mobili\u00e1rio espec\u00edfico',\n    'IN_MATERIAL_ESPECIFICO':'Indicador de solicita\u00e7\u00e3o de material espec\u00edfico',\n    'IN_NOME_SOCIAL':'Indicador de inscrito que se declarou travesti, transexual ou transg\u00eanero e solicitou atendimento pelo Nome Social, conforme \u00e9 reconhecido socialmente em conson\u00e2ncia com sua identidade de g\u00eanero'\n}\n\nbuild_table(df, index, {0: 'N\u00e3o', 1: 'Sim'})","c40903c2":"index = {\n    'TP_PRESENCA_CN': 'Presen\u00e7a na prova objetiva de Ci\u00eancias da Natureza',\n    'TP_PRESENCA_CH': 'Presen\u00e7a na prova objetiva de Ci\u00eancias Humanas',\n    'TP_PRESENCA_LC': 'Presen\u00e7a na prova objetiva de Linguagens e C\u00f3digos',\n    'TP_PRESENCA_MT': 'Presen\u00e7a na prova objetiva de Matem\u00e1tica'\n}\n\nbuild_table(df, index, {0: 'Faltou \u00e0 prova', 1: 'Presente na prova', 2: 'Eliminado na prova'})","cbf97f8b":"ax = df['CO_PROVA_CN'].value_counts(sort=False).plot(title='C\u00f3digo do tipo de prova de Ci\u00eancias da Natureza', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, ['Azul','Amarela','Cinza','Rosa','Laranja - Adaptada Ledor','Verde - Videoprova - Libras','Amarela (Reaplica\u00e7\u00e3o)','Cinza (Reaplica\u00e7\u00e3o)','Azul (Reaplica\u00e7\u00e3o)','Rosa (Reaplica\u00e7\u00e3o)'])","58b27aef":"ax = df['CO_PROVA_CH'].value_counts(sort=False).plot(title='C\u00f3digo do tipo de prova de Ci\u00eancias Humanas', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, ['Azul', 'Amarela', 'Branca', 'Rosa', 'Laranja - Adaptada Ledor', 'Verde - Videoprova - Libras', 'Azul (Reaplica\u00e7\u00e3o)', 'Amarelo (Reaplica\u00e7\u00e3o)', 'Branco (Reaplica\u00e7\u00e3o)', 'Rosa (Reaplica\u00e7\u00e3o)', 'Laranja - Adaptada Ledor (Reaplica\u00e7\u00e3o)'])","64b1a3fd":"ax = df['CO_PROVA_LC'].value_counts(sort=False).plot(title='C\u00f3digo do tipo de prova de Linguagens e C\u00f3digos', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, ['Azul', 'Amarela', 'Branca', 'Rosa', 'Laranja - Adaptada Ledor', 'Verde - Videoprova - Libras', 'Azul (Reaplica\u00e7\u00e3o)', 'Amarelo (Reaplica\u00e7\u00e3o)', 'Branco (Reaplica\u00e7\u00e3o)', 'Rosa (Reaplica\u00e7\u00e3o)', 'Laranja - Adaptada Ledor (Reaplica\u00e7\u00e3o)'])","0e150ce6":"ax = df['CO_PROVA_MT'].value_counts(sort=False).plot(title='C\u00f3digo do tipo de prova de Matem\u00e1tica', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, ['Azul','Amarela','Cinza','Rosa','Laranja - Adaptada Ledor','Verde - Videoprova - Libras','Amarela (Reaplica\u00e7\u00e3o)','Cinza (Reaplica\u00e7\u00e3o)','Azul (Reaplica\u00e7\u00e3o)','Rosa (Reaplica\u00e7\u00e3o)'])","b706d47e":"ax = df['NU_NOTA_CN'].plot.hist(title='Nota da prova de Ci\u00eancias da Natureza',bins=20, alpha=0.5, figsize=(25,5))\n\nannotate(ax)","720f228a":"ax = df['NU_NOTA_CH'].plot.hist(title='Nota da prova de Ci\u00eancias Humanas',bins=20, alpha=0.5, figsize=(25,5))\n\nannotate(ax)","f3a5305d":"ax = df['NU_NOTA_LC'].plot.hist(title='Nota da prova de Linguagens e C\u00f3digos',bins=20, alpha=0.5, figsize=(25,5))\n\nannotate(ax)","a92c4da7":"ax = df['NU_NOTA_MT'].plot.hist(title='Nota da prova de Matem\u00e1tica',bins=20, alpha=0.5, figsize=(25,5))\n\nannotate(ax)","14c4cf02":"ax = df['TP_LINGUA'].value_counts(sort=False).plot(title='L\u00edngua Estrangeira ', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, ['Ingl\u00eas', 'Espanhol'])","e860df34":"ax = df['TP_STATUS_REDACAO'].value_counts(sort=False).plot(title='Situa\u00e7\u00e3o da reda\u00e7\u00e3o do participante', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, ['Anulada', 'C\u00f3pia Texto Motivador', 'Em Branco', 'Fuga ao tema', 'N\u00e3o atendimento ao tipo textual', 'Texto insuficiente', 'Parte desconectada', 'Sem problemas'])","8f8a5019":"ax = df['NU_NOTA_COMP1'].plot.hist(title='Nota da compet\u00eancia 1 - Demonstrar dom\u00ednio da modalidade escrita formal da L\u00edngua Portuguesa.',bins=20, alpha=0.5, figsize=(25,5))\n\nannotate(ax)","799f5d73":"ax = df['NU_NOTA_COMP2'].plot.hist(title='Nota da compet\u00eancia 2 - Compreender a proposta de reda\u00e7\u00e3o e aplicar conceitos das v\u00e1rias \u00e1reas de conhecimento para desenvolver o tema, dentro dos limites estruturais do texto dissertativo-argumentativo em prosa.',bins=20, alpha=0.5, figsize=(25,5))\n\nannotate(ax)","83ecb1c7":"ax = df['NU_NOTA_COMP3'].plot.hist(title='Nota da compet\u00eancia 3 - Selecionar, relacionar, organizar e interpretar informa\u00e7\u00f5es, fatos, opini\u00f5es e argumentos em defesa de um ponto de vista.',bins=20, alpha=0.5, figsize=(25,5))\n\nannotate(ax)","29ab7623":"ax = df['NU_NOTA_COMP4'].plot.hist(title='Nota da compet\u00eancia 4 - Demonstrar conhecimento dos mecanismos lingu\u00edsticos necess\u00e1rios para a constru\u00e7\u00e3o da argumenta\u00e7\u00e3o.',bins=20, alpha=0.5, figsize=(25,5))\n\nannotate(ax)","0a8c9d43":"ax = df['NU_NOTA_COMP5'].plot.hist(title='Nota da compet\u00eancia 5 - Elaborar proposta de interven\u00e7\u00e3o para o problema abordado, respeitando os direitos humanos.',bins=20, alpha=0.5, figsize=(25,5))\n\nannotate(ax)","8ecc0ee3":"ax = df['NU_NOTA_REDACAO'].plot.hist(title='Nota da prova de reda\u00e7\u00e3o',bins=20, alpha=0.5, figsize=(25,5))\n\nannotate(ax)","205d3c13":"ax = df['Q001'].value_counts(sort=True).plot.barh(title='At\u00e9 que s\u00e9rie seu pai, ou o homem respons\u00e1vel por voc\u00ea, estudou?', figsize=(25,5), rot=0)\n\nax.set_yticklabels([\n    'Completou o Ensino M\u00e9dio, mas n\u00e3o completou a Faculdade',\n    'N\u00e3o completou a 4\u00aa s\u00e9rie\/5\u00ba ano do Ensino Fundamental',\n    'Completou a 4\u00aa s\u00e9rie\/5\u00ba ano, mas n\u00e3o completou a 8\u00aa s\u00e9rie\/9\u00ba ano do Ensino Fundamental',\n    'Completou a 8\u00aa s\u00e9rie\/9\u00ba ano do Ensino Fundamental, mas n\u00e3o completou o Ensino M\u00e9dio',\n    'N\u00e3o sei',\n    'Completou a Faculdade, mas n\u00e3o completou a P\u00f3s-gradua\u00e7\u00e3o',\n    'Nunca estudou',\n    'Completou a P\u00f3s-gradua\u00e7\u00e3o'\n])\n\nannotate(ax)","7e4281b3":"ax = df['Q002'].value_counts(sort=True).plot.barh(title='At\u00e9 que s\u00e9rie sua m\u00e3e, ou a mulher respons\u00e1vel por voc\u00ea, estudou?', figsize=(25,5), rot=0)\n\nax.set_yticklabels([\n    'Completou o Ensino M\u00e9dio, mas n\u00e3o completou a Faculdade',\n    'N\u00e3o completou a 4\u00aa s\u00e9rie\/5\u00ba ano do Ensino Fundamental',\n    'Completou a 4\u00aa s\u00e9rie\/5\u00ba ano, mas n\u00e3o completou a 8\u00aa s\u00e9rie\/9\u00ba ano do Ensino Fundamental',\n    'Completou a 8\u00aa s\u00e9rie\/9\u00ba ano do Ensino Fundamental, mas n\u00e3o completou o Ensino M\u00e9dio',\n    'Completou a Faculdade, mas n\u00e3o completou a P\u00f3s-gradua\u00e7\u00e3o',\n    'Completou a P\u00f3s-gradua\u00e7\u00e3o',\n    'Nunca estudou',\n    'N\u00e3o sei'\n])\n\nannotate(ax)","ba539581":"ax = df['Q005'].value_counts(sort=False).plot(title='Incluindo voc\u00ea, quantas pessoas moram atualmente em sua resid\u00eancia?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax)","1c51fd4f":"labels = ['N\u00e3o.', 'Sim, uma.', 'Sim, duas.', 'Sim, tr\u00eas.', 'Sim, quatro ou mais.']","b4985101":"ax = df['Q008'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem banheiro?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","9cf097e3":"ax = df['Q009'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem quartos para dormir?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","d691a315":"ax = df['Q010'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem carro?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","186710e9":"ax = df['Q011'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem motocicleta?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","0d0b89bd":"ax = df['Q012'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem geladeira?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","119803ad":"ax = df['Q013'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem freezer (independente ou segunda porta da geladeira)?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","1039d516":"ax = df['Q014'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem m\u00e1quina de lavar roupa? (o tanquinho N\u00c3O deve ser considerado)', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","13ab1d94":"ax = df['Q015'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem m\u00e1quina de secar roupa (independente ou em conjunto com a m\u00e1quina de lavar roupa)?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","cd7296a0":"ax = df['Q016'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem forno micro-ondas?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","0c57f0b2":"ax = df['Q017'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem m\u00e1quina de lavar lou\u00e7a?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","653047a5":"ax = df['Q018'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem aspirador de p\u00f3?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, ['N\u00e3o', 'Sim'])","7a6e2d6c":"ax = df['Q019'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem televis\u00e3o em cores?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","29395a91":"ax = df['Q020'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem aparelho de DVD?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, ['N\u00e3o', 'Sim'])","a4afc362":"ax = df['Q021'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem TV por assinatura?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, ['N\u00e3o', 'Sim'])","8170fc17":"ax = df['Q022'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem telefone celular?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","7378fbc8":"ax = df['Q023'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem telefone fixo?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, ['N\u00e3o', 'Sim'])","1228acb7":"ax = df['Q024'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem computador?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, labels)","c01dc9c7":"ax = df['Q025'].value_counts().sort_index().plot(title='Na sua resid\u00eancia tem acesso \u00e0 Internet?', kind='bar', figsize=(25,5), rot=0)\n\nannotate(ax, ['N\u00e3o', 'Sim'])","e653cafb":"# DADOS DA REDA\u00c7\u00c3O","c097a3aa":"Scatter and density plots:","dd68b1e7":"# DADOS DA PROVA OBJETIVA","1b53d6b5":"# IMPORTAR BIBLIOTECAS","a0734614":"# DADOS DOS PEDIDOS DE ATENDIMENTO ESPECIALIZADO","9fb90fe2":"# DADOS DOS PEDIDOS DE RECURSOS ESPECIALIZADOS E ESPEC\u00cdFICOS PARA REALIZA\u00c7\u00c3O DAS PROVAS","f83d38cb":"# DADOS DO PARTICIPANTE","5813f4c5":"# CARREGAR DADOS","d53b2170":"# DADOS DOS PEDIDOS DE ATENDIMENTO ESPEC\u00cdFICO","f7291db2":"# DADOS DO QUESTION\u00c1RIO SOCIOECON\u00d4MICO","1fa786cb":"# FUN\u00c7\u00d4ES AUXILIARES "}}