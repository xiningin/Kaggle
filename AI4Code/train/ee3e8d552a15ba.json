{"cell_type":{"85a5cc42":"code","6e389dfe":"code","d8bd83df":"code","ed59fe2d":"code","ede1cf73":"code","08e20275":"code","432ad67a":"code","b5e1001f":"code","6fa19f5f":"code","dbbf03cf":"code","5ef51b65":"code","fbd81936":"code","7932fddc":"code","b1d757ed":"code","56481e7b":"code","c8223619":"code","a63fedb7":"code","058340ec":"code","04db1b66":"code","f69c3071":"code","5c1a4664":"code","c280e09c":"code","fc540e4c":"code","71090aef":"code","5bacd025":"code","0fb016d8":"code","12141e96":"code","dec1c0e9":"code","83dd3485":"code","68052db4":"markdown"},"source":{"85a5cc42":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6e389dfe":"df_train=pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")","d8bd83df":"df_train.head()","ed59fe2d":"x_train=df_train.drop(columns=['label'])\ny_train=df_train['label']","ede1cf73":"x_train=x_train.values\ny_train=y_train.values","08e20275":"print(df_train.shape,x_train.shape,y_train.shape)","432ad67a":"x_train=np.reshape(x_train,(42000,28,28,1))","b5e1001f":"x_train.shape,y_train.shape","6fa19f5f":"mean_px = x_train.mean().astype(np.float32)\nstd_px = x_train.std().astype(np.float32)","dbbf03cf":"x_train=(x_train-mean_px)\/std_px","5ef51b65":"from sklearn.model_selection import train_test_split","fbd81936":"X_train, X_test, Y_train, Y_test = train_test_split(x_train, y_train, test_size=0.13, random_state=42)","7932fddc":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D,Dropout\nfrom tensorflow.keras.layers import MaxPooling2D\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.optimizers import SGD","b1d757ed":"import tensorflow as tf","56481e7b":"def define_model():\n    model = Sequential()\n    model.add(Conv2D(32, (3, 3), activation='relu', kernel_initializer='he_uniform', input_shape=(28, 28, 1)))\n    model.add(Conv2D(64, (3, 3), activation='relu', kernel_initializer='he_uniform'))\n    model.add(MaxPooling2D((2, 2)))\n    model.add(Flatten())\n    model.add(Dense(100, activation='relu', kernel_initializer='he_uniform'))\n    model.add(Dense(10, activation='softmax'))\n    opt = SGD(learning_rate=0.01, momentum=0.9)\n    model.compile(optimizer=opt, loss=tf.keras.losses.SparseCategoricalCrossentropy(), metrics=['accuracy'])\n    return model","c8223619":"model=define_model()\nhistory = model.fit(X_train, Y_train, epochs=20, batch_size=32, validation_data=(X_test, Y_test))","a63fedb7":"df_test=pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")","058340ec":"mean_px.shape,std_px.shape","04db1b66":"x_test=df_test.values","f69c3071":"x_test.shape","5c1a4664":"x_test=np.reshape(x_test,(28000,28,28,1))","c280e09c":"x_test=(x_test-mean_px)\/std_px","fc540e4c":"y_pred=model.predict(x_test)","71090aef":"y_pred=y_pred.argmax(axis=1)","5bacd025":"sub=pd.read_csv(\"..\/input\/digit-recognizer\/sample_submission.csv\")","0fb016d8":"sub.head()","12141e96":"sub['Label']=y_pred","dec1c0e9":"sub.head()","83dd3485":"sub.to_csv(\"Submmision_final2.csv\",index=False)","68052db4":"### [This](https:\/\/machinelearningmastery.com\/how-to-develop-a-convolutional-neural-network-from-scratch-for-mnist-handwritten-digit-classification\/) will come handy"}}