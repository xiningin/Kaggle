{"cell_type":{"69eda593":"code","6c34f1b4":"code","53d19d30":"code","61ba2590":"code","ad96d3dc":"code","266f8c01":"code","68853464":"code","04360ffa":"code","9d4b9852":"code","4568e73a":"code","db703013":"code","ba733a46":"code","b4647ad4":"code","ecef217e":"code","2ce3f36b":"code","096264c4":"code","c2d6b42b":"code","12bdf116":"code","9a60c641":"code","6294d3f9":"code","1e735b3e":"code","0a5a1fa0":"code","1bfad1d6":"code","47018f9f":"code","981a900e":"code","6ea3abbf":"code","bbc7721b":"code","1350dc49":"code","40a8051b":"markdown","34587aa2":"markdown","ebf65eaf":"markdown","c0dd5c7b":"markdown","c61e6a95":"markdown","80f79c02":"markdown","f92c3b5c":"markdown","bf57f5c8":"markdown","8402e10d":"markdown","24c54c20":"markdown","a27c1b9f":"markdown","9ad5e051":"markdown","d770ce46":"markdown","405392ec":"markdown","84c826c7":"markdown","69f109d3":"markdown"},"source":{"69eda593":"import matplotlib.pyplot as plt\nimport numpy as np \nimport pandas as pd\nimport matplotlib.style as stl\nimport seaborn as sns\n%matplotlib inline\nimport random\nimport warnings\nwarnings.filterwarnings('ignore')","6c34f1b4":"data=pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")\n","53d19d30":"data.head()","61ba2590":"data.shape","ad96d3dc":"data.info()","266f8c01":"data.describe()","68853464":"data[\"quality\"].unique()","04360ffa":"data.shape","9d4b9852":"for i in range (1599):\n    if (data.loc[i,\"quality\"]< 6 ) :\n        data.loc[i,\"quality\"]=0\n    else :\n        data.loc[i,\"quality\"]=1\n        ","4568e73a":"data[\"quality\"].unique()","db703013":"data.isna().sum()","ba733a46":"data.columns","b4647ad4":"def outlier_viz(col):\n    color = random.choice(['r', 'g', 'b'])\n    fig, ax = plt.subplots(1,2,figsize=(18,5))\n    sns.distplot(col, ax=ax[0], color=color)\n    sns.boxplot(col, ax=ax[1], color=color)\n    plt.suptitle('Distribution & Boxplot for Outlier Detection')\n    fig.show()\n    return None","ecef217e":"num = ['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',\n       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide','density', 'pH', 'sulphates','alcohol', 'quality']\n\nfor i in num:\n    outlier_viz(data[i])","2ce3f36b":"plt.figure(figsize=(20,12))\nsns.heatmap(data[num].corr(), annot=True, annot_kws={\"fontsize\":12}, fmt=\".2f\", vmin=-1)\nplt.show()","096264c4":"stl.use('ggplot')\nfor col in num:\n    plt.figure(figsize=(12,6))\n    sns.histplot(data[col], color=\"m\")\n    plt.show","c2d6b42b":"data.head()","12bdf116":"y=data.quality\nx=data.drop(\"quality\", axis=1)","9a60c641":"from sklearn.model_selection import train_test_split\nxtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.2)","6294d3f9":"from sklearn.ensemble import VotingClassifier","1e735b3e":"from sklearn import svm\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import VotingClassifier","0a5a1fa0":"model1=SGDClassifier(random_state=0)\nmodel2=KNeighborsClassifier(n_neighbors=2)\nmodel3= VotingClassifier([('SGD',model1),\n                         ('KNN',model2)\n                         ],voting='hard')\nfor model in (model1,model2,model3):\n    \n    model.fit(xtrain,ytrain)\n    print(model.__class__.__name__, model.score(xtest,ytest))","1bfad1d6":"from sklearn.ensemble import BaggingClassifier, RandomForestClassifier\nmodel =BaggingClassifier(base_estimator=DecisionTreeClassifier(), n_estimators=100)\nmodel.fit(xtrain,ytrain)\nmodel.score(xtest,ytest)\n","47018f9f":"model=RandomForestClassifier(n_estimators=100)\nmodel.fit(xtrain,ytrain)\nmodel.score(xtest,ytest)","981a900e":"from sklearn.ensemble import AdaBoostClassifier, GradientBoostingClassifier","6ea3abbf":"model= AdaBoostClassifier(n_estimators=100)\nmodel.fit(xtrain,ytrain)\nmodel.score(xtest,ytest)","bbc7721b":"from sklearn.ensemble import  StackingClassifier","1350dc49":"modell= StackingClassifier([('SGD',model1),('Tree',DecisionTreeClassifier()),\n                         ('KNN',model2)], final_estimator=DecisionTreeClassifier())\nmodell.fit(xtrain,ytrain)\nmodell.score(xtest,ytest)","40a8051b":"![](http:\/\/rasbt.github.io\/mlxtend\/user_guide\/classifier\/EnsembleVoteClassifier_files\/majority_voting.png)","34587aa2":"# Bagging","ebf65eaf":"__In the world of Statistics and Machine Learning, Ensemble learning techniques attempt to make the performance of the predictive models better by improving their accuracy. Ensemble Learning is a process using which multiple machine learning models (such as classifiers) are strategically constructed to solve a particular problem.__","c0dd5c7b":"# Stacking","c61e6a95":"__Essentially a stacked model works by running the output of multiple models through a \u201cmeta-learner\u201d (usually a linear regressor\/classifier, but can be other models like decision trees). The meta-learner attempts to minimize the weakness and maximize the strengths of every individual model__","80f79c02":"__The idea of boosting is to train weak learners sequentially, each trying to correct its predecessor.__","f92c3b5c":"__A voting classifier is a machine learning estimator that trains various base models or estimators and predicts on the basis of aggregating the findings of each base estimator. The aggregating criteria can be combined decision of voting for each estimator output.__","bf57f5c8":"![](https:\/\/miro.medium.com\/max\/1838\/1*AU_Yuk-8ihw768gwv7hVCw.png)","8402e10d":"# voting Classifier","24c54c20":"![](https:\/\/miro.medium.com\/max\/1156\/1*4uA23E47rv82m_myCkp6wQ.png)","a27c1b9f":"![](https:\/\/miro.medium.com\/max\/665\/0*G0Mv1RkCPMqiPZzu.png)","9ad5e051":"# Boosting","d770ce46":"<h1>thankyou for reading <\/h1>","405392ec":"__Bagging, also known as bootstrap aggregation, is the ensemble learning method that is commonly used to reduce variance within a noisy dataset. In bagging, a random sample of data in a training set is selected with replacement\u2014meaning that the individual data points can be chosen more than once.__","84c826c7":"# What is Ensemble learning?","69f109d3":"![](https:\/\/miro.medium.com\/max\/2000\/1*zTgGBTQIMlASWm5QuS2UpA.jpeg)"}}