{"cell_type":{"735a6327":"code","028c791f":"code","0dbc8037":"code","2a531e66":"code","7b6002f2":"code","4f0ae732":"markdown","d1ec3f95":"markdown","9f0fe542":"markdown","257ed808":"markdown","e286ba0b":"markdown","5ead9f10":"markdown","96847569":"markdown"},"source":{"735a6327":"import pandas as pd\nimport warnings\ndef ignore_warn(*args, **kwargs):\n    pass\nwarnings.warn = ignore_warn","028c791f":"# Preparatory part of the code\ntest = pd.read_csv('..\/input\/titanic\/test.csv') # load test dataset\ntest['fare'] = (test.Name.str.split().str[1] == 'Master.').astype('int')\nsubmission = pd.DataFrame({'PassengerId': test['PassengerId'], 'Survived': pd.Series(dtype='int32')})\n\n# Three lines of code for LB = 0.78947 (not less 80% teams - Titanic Top 20%) \n# Reasoning the statements see below (EDA)\ntest['Survived'] = [1 if (x == 'female') else 0 for x in test['Sex']]     # Statement 1\ntest.loc[(test.Fare == 1), 'Survived'] = 1                                 # Statement 2\ntest.loc[((test.Pclass == 3) & (test.Embarked == 'S')), 'Survived'] = 0   # Statement 3\n\n# Saving the result\nsubmission.Survived = test.Survived\nsubmission.to_csv('submission_S_Boy_Sex.csv', index=False)","0dbc8037":"# Reasoning for Statement 1 \n# Thanks for the idea to: https:\/\/www.kaggle.com\/mylesoneill\/tutorial-1-gender-based-model-0-76555 \n# Thanks for the idea of plot to: https:\/\/www.kaggle.com\/pavlofesenko\/simplest-top-10-titanic-0-80861\nimport matplotlib.pyplot as plt\n\ndef highlight(value):\n    if value >= 0.5:\n        style = 'background-color: palegreen'\n    else:\n        style = 'background-color: pink'\n    return style\n\ntrain = pd.read_csv('..\/input\/titanic\/train.csv') # load train dataset\npd.pivot_table(train, values='Survived', index=['Sex']).style.applymap(highlight)","2a531e66":"# Reasoning for Statement 2\n# Thanks for the plot to: https:\/\/www.kaggle.com\/pavlofesenko\/simplest-top-10-titanic-0-80861\ntrain['fare'] = (train.Name.str.split().str[1] == 'Master.').astype('int')\npd.pivot_table(train, values='Survived', index='Pclass', columns='Fare').style.applymap(highlight)","7b6002f2":"# Reasoning for Statement 3\n# Thanks for the plot to: https:\/\/www.kaggle.com\/pavlofesenko\/simplest-top-10-titanic-0-80861\npd.pivot_table(train, values='Survived', index=['Pclass', 'Embarked'], columns='Sex').style.applymap(highlight)","4f0ae732":"### Statement 3. Everybody from the class 3 cabins that were sat in Southampton ('S') were died","d1ec3f95":"Thanks to:\n\nhttps:\/\/www.kaggle.com\/mylesoneill\/tutorial-1-gender-based-model-0-76555\nhttps:\/\/nbviewer.jupyter.org\/github\/agconti\/kaggle-titanic\/blob\/master\/Titanic.ipynb\nhttps:\/\/www.kaggle.com\/pavlofesenko\/simplest-top-10-titanic-0-80861\n","9f0fe542":"# Reasoning (EDA)","257ed808":"### Statement 1. Women all survived and men all died","e286ba0b":"# Titanic : three lines of code for LB = 0.78947","5ead9f10":"![](http:\/\/) Statement 2. o('Master') from the 1-2 all the fare survived","96847569":"Before making predictions with complex algorithms, I tried to make it simple. \nImmediate prediction - three lines of code based on three statements. This provides a LB of at least 80% of teams - Titanic Top 20%.\nAfter the code I have justified in the form of graphs (EDA), from which the statements are obvious."}}