{"cell_type":{"8b83f667":"code","3c3cf338":"code","e23469e9":"code","2252b97c":"code","e9906fe3":"code","50cc23f4":"code","125b9957":"code","44f66822":"code","c0cb843d":"code","0f30a434":"code","c544b1ab":"code","d3d50dc6":"markdown","99a63b9c":"markdown","79edab0d":"markdown","6453da12":"markdown","89aef90a":"markdown","eb4fadba":"markdown","0da4c977":"markdown","3cc06270":"markdown","48f80a34":"markdown","30605eba":"markdown","43a32fea":"markdown","032f2781":"markdown","939c038e":"markdown","db8ced1b":"markdown","a0eef574":"markdown","e9e02670":"markdown","33517728":"markdown"},"source":{"8b83f667":"!unzip ..\/input\/256x256-images\/train.zip ","3c3cf338":"import numpy as np, pandas as pd\nimport matplotlib.pyplot as plt, seaborn as sns\nimport cv2, tifffile\nimport os;list_ims = os.listdir('..\/working')\nfrom plotly.offline import iplot\nimport cufflinks\ncufflinks.go_offline()\ncufflinks.set_config_file(world_readable=True, theme='pearl')\n\n\"\"\"From https:\/\/www.kaggle.com\/kool777\/hubmap-extensive-eda\"\"\"\n\ndef mask2rle(img):\n    '''\n    img: numpy array, 1 - mask, 0 - background\n    Returns run length as string formated\n    '''\n    pixels= img.T.flatten()\n    pixels = np.concatenate([[0], pixels, [0]])\n    runs = np.where(pixels[1:] != pixels[:-1])[0] + 1\n    runs[1::2] -= runs[::2]\n    return ' '.join(str(x) for x in runs)\n \ndef rle2mask(mask_rle, shape=(1600,256)):\n    '''\n    mask_rle: run-length as string formated (start length)\n    shape: (width,height) of array to return \n    Returns numpy array, 1 - mask, 0 - background\n\n    '''\n    s = mask_rle.split()\n    starts, lengths = [np.asarray(x, dtype=int) for x in (s[0:][::2], s[1:][::2])]\n    starts -= 1\n    ends = starts + lengths\n    img = np.zeros(shape[0]*shape[1], dtype=np.uint8)\n    for lo, hi in zip(starts, ends):\n        img[lo:hi] = 1\n    return img.reshape(shape).T","e23469e9":"def view_images(images, title = '', aug = None):\n    width = 6\n    height = 4\n    fig, axs = plt.subplots(height, width, figsize=(15,5))\n    for im in range(0, height * width):  \n        data = cv2.imread(images[im])\n        i = im \/\/ width\n        j = im % width\n        axs[i,j].imshow(data, cmap=plt.cm.bone) \n        axs[i,j].axis('off')\n\n    plt.suptitle(title)\n    plt.show()","2252b97c":"view_images(list_ims, title=\"First 20 256x256 tiles\")","e9906fe3":"im = tifffile.imread('..\/input\/hubmap-kidney-segmentation\/train\/e79de561c.tiff')\nplt.figure(figsize=(16, 16))\nplt.imshow(im[0, 0, :, :, :].transpose(1, 2, 0))\nplt.axis(\"off\");","50cc23f4":"plt.figure(figsize=(10, 10))\nplt.imshow(im[0, 0, :, :, :].transpose(1, 2, 0)[7000:8500, 7000:8500])\nplt.axis(\"off\");","125b9957":"train = pd.read_csv('..\/input\/hubmap-kidney-segmentation\/train.csv')\nexample_mask = rle2mask(train['encoding'][4], (im.shape[4], im.shape[3]))","44f66822":"plt.figure(figsize=(15, 15))\nplt.imshow(im[0, 0, :, :, :].transpose(1, 2, 0))\nplt.imshow(example_mask, alpha=0.5)\nplt.title(\"Image + Mask\", fontsize=16);\nplt.axis(\"off\");","c0cb843d":"plt.figure(figsize=(15, 15))\nplt.imshow(im[0, 0, :, :, :].transpose(1, 2, 0)[7000:8500, 7000:8500])\nplt.imshow(example_mask[7000:8500, 7000:8500], alpha=0.5)\nplt.title(\"Image + Mask\", fontsize=16);\nplt.axis(\"off\");","0f30a434":"m = pd.read_csv('..\/input\/hubmap-kidney-segmentation\/HuBMAP-20-dataset_information.csv')\nm['race'].value_counts(normalize=True).iplot(kind='bar',\n                                                      yTitle='Race', \n                                                      linecolor='black', \n                                                      opacity=0.7,\n                                                      color='red',\n                                                      theme='pearl',\n                                                      bargap=0.8,\n                                                      gridcolor='white',\n                                                      title='Distribution of the Race column')","c544b1ab":"m['sex'].value_counts(normalize=True).iplot(kind='bar',\n                                                      yTitle='Gender', \n                                                      linecolor='black', \n                                                      opacity=0.7,\n                                                      color='steelblue',\n                                                      theme='pearl',\n                                                      bargap=0.8,\n                                                      gridcolor='white',\n                                                      title='Distribution of the Sex column')","d3d50dc6":"Again we can see a shift between the image and the mask, so this will be another inaccuracy to deal with while modelling. On the forums it is estimated to be about 50 px which seems like a reasonable estimate.","99a63b9c":"Zoom in and see if we can find any potential irregularities in the image?","79edab0d":"# HuBMAP - an analysis and methodology\n\n---\n\nHello there, and welcome to my notebook. This is a simple analysis and a potential guidelines for the HuBMAP: Hacking the Kidney competition currently on Kaggle. \n\nThis is the first time doing image segmentation on Kaggle so I need heavy feedback as to what I'm doing - so let's get started with a quick run-through of the images and data.","6453da12":"This is a brief analysis of the metadata files contained, there is very little but we can utilize it to get a better sense of what we are dealing with.","89aef90a":"## Analysis by Race","eb4fadba":"Now we basically have to view an assortment of tiles prepared for us. ","0da4c977":"## Analysis by Gender","3cc06270":"So you might be as confused as I am when it comes to these little things here, and apparently this is a zoomed-in visual of several glomeruli. Glomeruli are a tuft of blood capillaries in essence, and they act as a sieve, a filter for your blood as it passes through the nephrons in your kidney.","48f80a34":"As you can see GM iafoss has processed the images into 256x256 tiles which makes it far easier to perform analysis on them. This is merely a preliminary step before carrying on.","30605eba":"# Getting started","43a32fea":"# Metadata","032f2781":"# Introduction (from hosts)\n\nThis competition, \u201cHacking the Kidney,\" starts by mapping the human kidney at single cell resolution.\n\nYour challenge is to detect functional tissue units (FTUs) across different tissue preparation pipelines. An FTU is defined as a \u201cthree-dimensional block of cells centered around a capillary, such that each cell in this block is within diffusion distance from any other cell in the same block\u201d (de Bono, 2013). The goal of this competition is the implementation of a successful and robust glomeruli FTU detector.\n\nYou will also have the opportunity to present your findings to a panel of judges for additional consideration. Successful submissions will construct the tools, resources, and cell atlases needed to determine how the relationships between cells can affect the health of an individual.\n\nAdvancements in HuBMAP will accelerate the world\u2019s understanding of the relationships between cell and tissue organization and function and human health. These datasets and insights can be used by researchers in cell and tissue anatomy, pharmaceutical companies to develop therapies, or even parents to show their children the magnitude of the human body.","939c038e":"Now we have to view a giant image at a glance, the image being the full scan from which we have obtained these small chunks. Also prepare to deal with memory issues if you want to use the huge image, it takes quite some time to read :-)","db8ced1b":"We can now try to view the image with the annotations created by Run Length Encoding to generate a mask for the image.","a0eef574":"Zoom in, so that we can see some portions of the scan with better clarity and if we can potentially observe any shifts in the image as have been pointed out in the public discussion forum.","e9e02670":"## Primary setup - load 256x256 images","33517728":"First of all, we have to import the required libraries. "}}