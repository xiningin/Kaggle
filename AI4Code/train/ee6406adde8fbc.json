{"cell_type":{"22f3903f":"code","9298592d":"code","0ee78222":"code","6d3d3e42":"code","02fac9dc":"code","ae69404f":"code","06ddb314":"code","e2e3f1b5":"code","b07eb1a2":"code","4713bcdf":"code","4d809b04":"code","0f0d2fca":"code","193527a4":"code","27d39ccd":"code","eda0b1bd":"code","70af9b80":"code","2004e5b4":"code","56ddc2ea":"code","069adc8e":"code","c73b0657":"code","3378cac0":"code","35f46927":"code","47610b2e":"code","8232fcca":"code","deac87d1":"code","f6fe8dd9":"code","b030178d":"code","0b9d5807":"code","7d634429":"code","e10d7c77":"code","4df9389e":"code","c64c7b6b":"code","5928b586":"code","215177c3":"code","82d80e62":"code","1c644f07":"code","8cde1448":"code","a8e43644":"code","1e6a3db3":"code","db4190c5":"code","80dc750b":"code","85d77dd4":"code","98633062":"code","1e100da9":"code","bdb4eda1":"markdown","a1cc7dac":"markdown","155646dc":"markdown","ad58a1c0":"markdown","1b69651b":"markdown","b0a11828":"markdown","82fb1f86":"markdown","cd58b0ba":"markdown","f02a301e":"markdown","deaba2f0":"markdown","234f78b5":"markdown","77807360":"markdown","d494d8d4":"markdown","1d483ec4":"markdown","fff6a3c6":"markdown","8a48a9aa":"markdown","f486ff2e":"markdown","59ca1c84":"markdown","67df1782":"markdown","973d3bc4":"markdown","cedd50de":"markdown","cec3ab8f":"markdown","42a60ca9":"markdown","d77b8109":"markdown","b633edb4":"markdown","c46a9cdf":"markdown","8b19d5ce":"markdown","760dbfd0":"markdown","ba1a5bd8":"markdown","70fca46b":"markdown","74dce500":"markdown","b68b4e45":"markdown","ea89c9a5":"markdown","6eaf877d":"markdown","797c5b08":"markdown","e0184065":"markdown","27ecc9b9":"markdown","6ad9fc95":"markdown","3ccef195":"markdown","927caf93":"markdown","9f7f75a6":"markdown","185221d6":"markdown","da3d8e08":"markdown","2fa422b2":"markdown","b17b3bb4":"markdown","af1dbbe1":"markdown","f1581edc":"markdown","045655bd":"markdown","16baa757":"markdown","7c13bfb1":"markdown","3258eda4":"markdown","87f0920a":"markdown"},"source":{"22f3903f":"pip install seaborn --upgrade","9298592d":"import pandas as pd # dataframe manipulation\nimport numpy as np # linear algebra\n\n# data visualization\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nprint('Seaborn verion', sns.__version__)\nsns.set_style('whitegrid')\n\n# text data\nimport string\nimport re\n\n# pie chart labels\ndef make_autopct(values):\n    def my_autopct(pct):\n        total = sum(values)\n        val = int(round(pct*total\/100.0))\n        return '{p:.2f}%\\n({v:d})'.format(p=pct,v=val)\n    return my_autopct","0ee78222":"df = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head()","6d3d3e42":"# rename column\ndf.rename(columns={\"User Rating\": \"User_Rating\"}, inplace=True)","02fac9dc":"print(f\"The dataset consists of {df.shape[0]} rows and {df.shape[1]} columns.\")","ae69404f":"df.isnull().sum()","06ddb314":"# incorrect spelling\ndf[df.Author == 'J. K. Rowling']","e2e3f1b5":"# correct spelling\ndf[df.Author == 'J.K. Rowling']","b07eb1a2":"df[df['Price'] == 0]","4713bcdf":"df.loc[df.Author == 'J. K. Rowling', 'Author'] = 'J.K. Rowling'","4d809b04":"# length of text in book name\ndf['name_len'] = df['Name'].apply(lambda x: len(x) - x.count(\" \")) # subtract whitespaces","0f0d2fca":"punctuations = string.punctuation\nprint('list of punctuations : ', punctuations)","193527a4":"# percentage of punctuations\ndef count_punc(text):\n    \"\"\"This function counts the number of punctuations in a text\"\"\"\n    count = sum(1 for char in text if char in punctuations)\n    return round(count\/(len(text) - text.count(\" \"))*100, 3)\n\n# apply function\ndf['punc%'] = df['Name'].apply(lambda x: count_punc(x))","27d39ccd":"# remove duplicate book names\nno_dup = df.drop_duplicates('Name')\n# data\ng_count = no_dup['Genre'].value_counts()\ngenre_col = ['navy','crimson']\n#plot\nfig, ax = plt.subplots(figsize=(8, 8))\ncenter_circle = plt.Circle((0, 0), 0.7, color='white')\nplt.pie(x=g_count.values, labels=g_count.index, autopct=make_autopct(g_count.values), \n          startangle=90, textprops={'size': 15}, pctdistance=0.5, colors=genre_col)\nax.add_artist(center_circle)\nfig.suptitle('Distribution of Genre for all unique books from 2009 to 2019', fontsize=20)\nfig.show()","eda0b1bd":"g_count = df['Genre'].value_counts() # includes duplicate books\nfig, axes = plt.subplots(2, 6, figsize=(10,5))\naxes = axes.ravel()\naxes[0].pie(x=g_count.values, labels=None, autopct='%1.1f%%',\n            startangle=90, textprops={'size': 11, 'color': 'white'},\n            pctdistance=0.5, radius=1.3, colors=genre_col)\naxes[0].set_title('2009 - 2019\\n(Overall)', color='darkgreen', fontdict={'fontsize': 15})\nfor ax, year in zip(axes[1:], np.arange(2009, 2020)):\n    counts = df[df['Year'] == year]['Genre'].value_counts()\n    ax.pie(x=counts.values, labels=None, autopct='%1.1f%%', \n                  startangle=90, textprops={'size': 10,'color': 'white'}, \n                  pctdistance=0.5, colors=genre_col, radius=1.1)\n    ax.set_title(year, color='darkred', fontdict={'fontsize': 15})\nplt.suptitle('Distribution of Fiction and Non-Fiction books each year',fontsize=20)\nfig.legend(g_count.index, loc='center right', fontsize=10)\nplt.show()","70af9b80":"print(f\"There are total {len(no_dup.Author.unique())} unique authors in list of top selling books from 2009 to 2019.\")","2004e5b4":"best_nf_authors = df.groupby(['Author', 'Genre']).agg({'Name': 'count'}).unstack()['Name', 'Non Fiction'].sort_values(ascending=False)[:11]\nbest_f_authors = df.groupby(['Author', 'Genre']).agg({'Name': 'count'}).unstack()['Name', 'Fiction'].sort_values(ascending=False)[:11]\n\nwith plt.style.context('Solarize_Light2'):\n    fig, ax = plt.subplots(1, 2, figsize=(6, 7))\n    ax[0].barh(y=best_nf_authors.index, width=best_nf_authors.values,\n           color=genre_col[0])\n    ax[0].invert_xaxis()\n    ax[0].yaxis.tick_left()\n    ax[0].set_xticks(np.arange(max(best_f_authors.values)+1))\n    ax[0].set_yticklabels(best_nf_authors.index, fontweight='semibold')\n    ax[0].set_xlabel('Number of appreances')\n    ax[0].set_title('Non Fiction Authors')\n    \n    ax[1].barh(y=best_f_authors.index, width=best_f_authors.values,\n           color=genre_col[1])\n    ax[1].yaxis.tick_right()\n    ax[1].set_xticks(np.arange(max(best_f_authors.values)+1))\n    ax[1].set_yticklabels(best_f_authors.index, fontweight='semibold')\n    ax[1].set_title('Fiction Authors')\n    ax[1].set_xlabel('Number of appreances')\n    \n    fig.legend(['Non Fiction', 'Fiction'], fontsize=12)\n    \nplt.show()","56ddc2ea":"n_best = 20\n\ntop_authors = df.Author.value_counts().nlargest(n_best)\nno_dup = df.drop_duplicates('Name') # removes all rows with duplicate book names\n\nfig, ax = plt.subplots(1, 3, figsize=(10,10), sharey=True)\n\ncolor = sns.color_palette(\"hls\", n_best)\n\nax[0].hlines(y=top_authors.index , xmin=0, xmax=top_authors.values, color=color, linestyles='dashed')\nax[0].plot(top_authors.values, top_authors.index, 'go', markersize=9)\nax[0].set_xlabel('Number of appearences')\nax[0].set_xticks(np.arange(top_authors.values.max()+1))\nax[0].set_yticklabels(top_authors.index, fontweight='semibold')\nax[0].set_title('Appearences')\n\nbook_count = []\ntotal_reviews = []\nfor name, col in zip(top_authors.index, color):\n    book_count.append(len(no_dup[no_dup.Author == name]['Name']))\n    total_reviews.append(no_dup[no_dup.Author == name]['Reviews'].sum()\/1000)\nax[1].hlines(y=top_authors.index , xmin=0, xmax=book_count, color=color, linestyles='dashed')\nax[1].plot(book_count, top_authors.index, 'go', markersize=9)\nax[1].set_xlabel('Number of unique books')\nax[1].set_xticks(np.arange(max(book_count)+1))\nax[1].set_title('Unique books')\n\nax[2].barh(y=top_authors.index, width=total_reviews, color=color, edgecolor='black', height=0.7)\nfor name, val in zip(top_authors.index, total_reviews):\n    ax[2].text(val+2, name, val)\nax[2].set_xlabel(\"Total Reviews (in 1000's)\")\nax[2].set_title('Total reviews')\nplt.show()","069adc8e":"n_best=20\ntop_reviews = no_dup.groupby('Author').agg({'Reviews': 'sum'})['Reviews'].nlargest(n_best)\nwith plt.style.context('bmh'):\n    plt.figure(figsize=(10,12))\n    plt.barh(y=top_reviews.index, width=top_reviews.values, height=0.7)\n    for name, val in zip(top_reviews.index, top_reviews.values):\n        plt.text(val\/2, name, val, ha='center', color='white', fontsize=12)\n    plt.yticks(fontweight='semibold')\n    plt.xlabel('Total Reviews')\n    plt.show()","c73b0657":"n_best = 20\n\nlong_title = no_dup.groupby('Author').agg({'name_len': 'mean'})['name_len'].nlargest(n_best)\n\nfig, ax = plt.subplots(1, 3, figsize=(10,10), sharey=True)\n\ncolor = sns.color_palette(\"hls\", n_best)\n\nax[0].barh(y=long_title.index, width=long_title.values, color=color, edgecolor='black')\nfor name, val in zip(long_title.index, long_title.values):\n    ax[0].text(val+2, name, int(val))\nax[0].set_xlabel('Length of text in book name')\nax[0].set_title('Average text length')\nax[0].set_yticklabels(long_title.index, fontweight='semibold')\n\nbook_count = []\ntotal_reviews = []\nfor name, col in zip(long_title.index, color):\n    book_count.append(len(no_dup[no_dup.Author == name]['Name']))\n    total_reviews.append(no_dup[no_dup.Author == name]['Reviews'].sum())\nax[1].hlines(y=top_authors.index , xmin=0, xmax=book_count, color=color, linestyles='dashed')\nax[1].plot(book_count, top_authors.index, 'go', markersize=9)\nax[1].set_xlabel('Number of unique books')\nax[1].set_xticks(np.arange(max(book_count)+1))\nax[1].set_title('Unique books')\n\nax[2].barh(y=long_title.index, width=total_reviews, color=color, edgecolor='black', height=0.7)\nfor name, val in zip(long_title.index, total_reviews):\n    ax[2].text(val+1000, name, val)\nax[2].set_xlabel(\"Total Reviews (in 1000's)\")\nax[2].set_title('Total reviews')\nplt.show()","3378cac0":"n_best = 20\n\nhigh_punc = no_dup.groupby('Author').agg({'punc%': 'mean'})['punc%'].nlargest(n_best)\n\nfig, ax = plt.subplots(1, 3, figsize=(10,10), sharey=True)\n\ncolor = sns.color_palette(\"hls\", n_best)\n\nax[0].barh(y=high_punc.index, width=high_punc.values, color=color, edgecolor='black')\nfor name, val in zip(high_punc.index, high_punc.values):\n    ax[0].text(val+1, name, round(val,2))\nax[0].set_xlabel('Puctutation percentage')\nax[0].set_title('Average punctutions percentage')\nax[0].set_yticklabels(high_punc.index, fontweight='semibold')\n\nbook_count = []\ntotal_reviews = []\nfor name, col in zip(high_punc.index, color):\n    book_count.append(len(no_dup[no_dup.Author == name]['Name']))\n    total_reviews.append(no_dup[no_dup.Author == name]['Reviews'].sum())\nax[1].hlines(y=top_authors.index , xmin=0, xmax=book_count, color=color, linestyles='dashed')\nax[1].plot(book_count, top_authors.index, 'go', markersize=9)\nax[1].set_xlabel('Number of unique books')\nax[1].set_xticks(np.arange(max(book_count)+1))\nax[1].set_title('Unique books')\n\nax[2].barh(y=high_punc.index, width=total_reviews, color=color, edgecolor='black', height=0.7)\nfor name, val in zip(high_punc.index, total_reviews):\n    ax[2].text(val+1000, name, val)\nax[2].set_xlabel(\"Total Reviews (in 1000's)\")\nax[2].set_title('Total reviews')\n\nplt.show()","35f46927":"no_dup.groupby(['Author', 'Genre']).agg({'Name': 'count'}).unstack().dropna()","47610b2e":"exp_collection = no_dup.groupby('Author').agg({'Price': 'sum'})['Price'].nlargest(20)\n\nfig, ax = plt.subplots(1, 3, figsize=(10,10), sharey=True)\n\ncolor = sns.color_palette(\"hls\", n_best)\n\nax[0].barh(y=exp_collection.index, width=exp_collection.values, color=color, edgecolor='black')\nfor name, val in zip(exp_collection.index, exp_collection.values):\n    ax[0].text(val+2, name, val)\nax[0].set_xlabel('Price')\nax[0].set_title('Total price of all books')\nax[0].set_yticklabels(exp_collection.index, fontweight='semibold')\n\nbook_count = []\ntotal_reviews = []\nfor name, col in zip(exp_collection.index, color):\n    book_count.append(len(no_dup[no_dup.Author == name]['Name']))\n    total_reviews.append(no_dup[no_dup.Author == name]['Reviews'].sum()\/1000)\nax[1].hlines(y=top_authors.index , xmin=0, xmax=book_count, color=color, linestyles='dashed')\nax[1].plot(book_count, top_authors.index, 'go', markersize=9)\nax[1].set_xlabel('Number of unique books')\nax[1].set_xticks(np.arange(max(book_count)+1))\nax[1].set_title('Unique books of respective authors')\n\nax[2].barh(y=exp_collection.index, width=total_reviews, color=color, edgecolor='black', height=0.7)\nfor name, val in zip(exp_collection.index, total_reviews):\n    ax[2].text(val+7, name, val)\nax[2].set_xlabel(\"Total Reviews (in 1000's)\")\nax[2].set_title('Total reviews of all unique books')\n\nplt.show()\n","8232fcca":"df[df.name_len == min(df.name_len)]","deac87d1":"df[df.name_len == max(df.name_len)]","f6fe8dd9":"no_dup = df.drop_duplicates('Name')\n\nfig, ax = plt.subplots(3, 2, figsize=(12,15))\nfig.subplots_adjust(wspace=0.4, hspace=0.4)\n\nsns.histplot(data=no_dup, x='name_len', binwidth=9, kde=True, ax=ax[0,0])\nax[0,0].set_title('Histogram of length of book name', fontsize=15, color='darkred')\nsns.histplot(data=no_dup, x='name_len', hue='Genre', binwidth=9, kde=True, ax=ax[0,1],palette=genre_col)\nax[0,1].set_title('Histogram of length of book name across genre', fontsize=15, color='darkred')\n\nsns.boxplot(data=no_dup, x='name_len', ax=ax[1,0])\nax[1,0].set_title('Boxplot of length of book name', fontsize=15, color='darkred')\nsns.boxplot(data=no_dup, x='name_len', y='Genre', ax=ax[1,1], palette=genre_col)\nax[1,1].set_title('Boxplot of length of book name across genre', fontsize=15, color='darkred')\n\nsns.ecdfplot(data=no_dup, x='name_len', ax=ax[2,0])\nax[2,0].set_title('ECDF of length of book name', fontsize=15, color='darkred')\nsns.ecdfplot(data=no_dup, x='name_len', hue='Genre', ax=ax[2,1], palette=genre_col)\nax[2,1].set_title('ECDF of length of book name across Genre', fontsize=15, color='darkred')\n\n#fig.suptitle('Distribution of length of book name for all 351 unique books', fontsize=20)\nfig.show()","b030178d":"no_dup.groupby('Genre').mean()['name_len']","0b9d5807":"# details of books with a price of zero dollar\nno_dup[no_dup['Price'] == 0]","7d634429":"no_dup = df.drop_duplicates('Name')\n\nfig, ax = plt.subplots(3, 2, figsize=(12,15))\nfig.subplots_adjust(wspace=0.4, hspace=0.4)\n\nsns.histplot(data=no_dup, x='Price', kde=True, ax=ax[0,0])\nax[0,0].set_title('Histogram of price', fontsize=15, color='darkred')\nsns.histplot(data=no_dup, x='Price', hue='Genre', kde=True, ax=ax[0,1], palette=genre_col)\nax[0,1].set_title('Histogram of price across genre', fontsize=15, color='darkred')\n\nsns.boxplot(data=no_dup, x='Price', ax=ax[1,0])\nax[1,0].set_title('Boxplot of price', fontsize=15, color='darkred')\nsns.boxplot(data=no_dup, x='Price', y='Genre', ax=ax[1,1], palette=genre_col)\nax[1,1].set_title('Boxplot of price across genre', fontsize=15, color='darkred')\n\nsns.ecdfplot(data=no_dup, x='Price', ax=ax[2,0])\nax[2,0].set_title('ECDF of price', fontsize=15, color='darkred')\nsns.ecdfplot(data=no_dup, x='Price', hue='Genre', ax=ax[2,1], palette=genre_col)\nax[2,1].set_title('ECDF of price across Genre', fontsize=15, color='darkred')\n\n#fig.suptitle('Distribution of price for all 351 unique books', fontsize=20)\nfig.show()","e10d7c77":"np.seterr(divide = 'ignore')\ndf['Price_log'] = np.where(df['Price']>0, np.log(df['Price']), 0)","4df9389e":"fig, ax = plt.subplots(1, 3, figsize=(12,4))\nplt.subplots_adjust(wspace=0.4)\nsns.kdeplot(data=df, x='Price_log', hue='Genre', ax=ax[0], palette=genre_col)\nsns.boxplot(data=df, x='Price_log', y='Genre', ax=ax[1], palette=genre_col)\nsns.ecdfplot(data=df, x='Price_log', hue='Genre', ax=ax[2], palette=genre_col)\nplt.legend(loc='right')\nplt.show()","c64c7b6b":"price_per_year = df.groupby(['Year', 'Genre']).agg({'Price': 'mean'}).unstack()\n\nfig, ax = plt.subplots(figsize=(10,6))\n\nwidth = 0.35\nbar1 = ax.bar(price_per_year.index - width\/2, price_per_year['Price', 'Fiction'],\n        width, label='Fiction', color=genre_col[1])\n\"\"\"for i, val in zip(price_per_year.index, price_per_year['Price', 'Fiction']):\n    plt.text(i - width, val, round(val,2))\"\"\"\nbar2 = ax.bar(price_per_year.index + width\/2, price_per_year['Price', 'Non Fiction'],\n        width, label='Non Fiction', color=genre_col[0])\n\"\"\"for i, val in zip(price_per_year.index, price_per_year['Price', 'Non Fiction']):\n    plt.text(i + width\/2, val, round(val,2))\"\"\"\nplt.xticks(price_per_year.index)\n\nplt.suptitle('Average Price of Fiction and Non Fiction books each year', fontsize=20)\nplt.xlabel('Year', fontsize=12)\nplt.ylabel('Price', fontsize=12)\nplt.legend(loc='best')\n\nplt.show()","5928b586":"max_price_per_year = df.groupby(['Year', 'Genre']).agg({'Price': 'max'}).unstack()\n\nplt.figure(figsize=(10,6))\n\nplt.plot(max_price_per_year.index, max_price_per_year['Price', 'Fiction'], 'o', \n         markersize=5, color='black')\nplt.plot(max_price_per_year.index, max_price_per_year['Price', 'Fiction'],\n         label='Fiction', color=genre_col[1])\nplt.plot(max_price_per_year.index, max_price_per_year['Price', 'Non Fiction'], 'o', \n         markersize=5, color='black')\nplt.plot(max_price_per_year.index, max_price_per_year['Price', 'Non Fiction'],\n         label='Non Fiction', color=genre_col[0])\n\n\nplt.xticks(max_price_per_year.index)\nplt.yticks(np.arange(0, 111, 10))\nplt.suptitle('Max Price of Fiction and Non Fiction book each year from 2009 to 2019', fontsize=20)\nplt.xlabel('Year', fontsize=12)\nplt.ylabel('Price', fontsize=12)\nplt.legend(loc='best')\nplt.show()","215177c3":"df[df.User_Rating == min(df.User_Rating)]","82d80e62":"print(f'There are total {len(no_dup[no_dup.User_Rating == max(no_dup.User_Rating)])} books which have recieved the best user rating of 4.9. Out of which ')\nfor k, v in dict(no_dup[no_dup.User_Rating == max(no_dup.User_Rating)]['Genre'].value_counts()).items():\n    print(k, v)","1c644f07":"no_dup[no_dup.User_Rating == max(no_dup.User_Rating)]['Author'].value_counts()","8cde1448":"fig, ax = plt.subplots(2, 2, figsize=(12,10))\nplt.subplots_adjust(wspace=0.3, hspace=0.3)\n\nsns.color_palette(\"Set2\")\nsns.countplot(data=no_dup, x='User_Rating', ax=ax[0,0])\nax[0,0].set_title('Countplot of User Rating')\nsns.countplot(data=no_dup, x='User_Rating', hue='Genre', ax=ax[0,1], palette=genre_col)\nax[0,1].set_title('Countplot of User Rating across Genre')\n\n\nsns.boxplot(data=no_dup, x='User_Rating', ax=ax[1,0])\nax[1,0].set_title('Boxplot of User Rating')\nsns.boxplot(data=no_dup, x='User_Rating', ax=ax[1,1], y='Genre', palette=genre_col)\nax[1,1].set_title('Cumulative frequency plot of User Rating')\n\nplt.show()","a8e43644":"average_rating = df.groupby(['Year', 'Genre']).agg({'User_Rating': 'mean'}).unstack()\n\nplt.figure(figsize=(10,6))\n\nplt.plot(average_rating.index, average_rating.values, )\nplt.plot(average_rating.index, average_rating.values, 'o', color='black')\n\nplt.legend(('Fiction', 'Non-Fiction'))\nplt.xticks(df.Year.unique())\nplt.suptitle('Average User Rating of Fiction and Non-Fiction books each year from 2009 to 2019', fontsize=20)\nplt.ylabel('User Rating', fontsize=12)\nplt.xlabel('Year', fontsize=12)\nplt.show()","1e6a3db3":"df[df.Reviews == min(df.Reviews)]","db4190c5":"df[df.Reviews == max(df.Reviews)]","80dc750b":"no_dup = df.drop_duplicates('Name')\n\nfig, ax = plt.subplots(3, 2, figsize=(12,15))\nfig.subplots_adjust(wspace=0.4, hspace=0.4)\n\nsns.histplot(data=no_dup, x='Reviews', kde=True, ax=ax[0,0])\nax[0,0].set_title('Histogram of Reviews', fontsize=15, color='darkred')\nsns.histplot(data=no_dup, x='Reviews', hue='Genre', kde=True, ax=ax[0,1], palette=genre_col)\nax[0,1].set_title('Histogram of Reviews across genre', fontsize=15, color='darkred')\n\nsns.boxplot(data=no_dup, x='Reviews', ax=ax[1,0])\nax[1,0].set_title('Boxplot of Reviews', fontsize=15, color='darkred')\nsns.boxplot(data=no_dup, x='Reviews', y='Genre', ax=ax[1,1], palette=genre_col)\nax[1,1].set_title('Boxplot of Reviews across genre', fontsize=15, color='darkred')\n\nsns.ecdfplot(data=no_dup, x='Reviews', ax=ax[2,0])\nax[2,0].set_title('ECDF of Reviews', fontsize=15, color='darkred')\nsns.ecdfplot(data=no_dup, x='Reviews', hue='Genre', ax=ax[2,1], palette=genre_col)\nax[2,1].set_title('ECDF of Reviews across Genre', fontsize=15, color='darkred')\nax[2,1].set_xticks(np.arange(0, 100000, 10000))\n\nplt.suptitle('Distribution of Reviews for all 351 unique books', fontsize=15)\nplt.show()","85d77dd4":"np.seterr(divide = 'ignore')\ndf['Reviews_log'] = np.where(df['Reviews']>0, np.log(df['Reviews']), 0)","98633062":"fig, ax = plt.subplots(1, 3, figsize=(12,4))\nplt.subplots_adjust(wspace=0.4)\nsns.kdeplot(data=df, x='Reviews_log', hue='Genre', ax=ax[0], palette=genre_col)\nsns.boxplot(data=df, x='Reviews_log', y='Genre', ax=ax[1], palette=genre_col)\nsns.ecdfplot(data=df, x='Reviews_log', hue='Genre', ax=ax[2], palette=genre_col)\nplt.legend(loc='right')\nplt.show()","1e100da9":"total_reviews = df.groupby(['Year', 'Genre']).agg({'Reviews': 'sum'}).unstack()\ncategory_names = df.Genre.unique()\nresults = dict(zip([str(year) for year in np.arange(2009, 2020)], total_reviews.values))\n\ndef survey(results, category_names):\n    labels = list(results.keys())\n    data = np.array(list(results.values()))\n    data_cum = data.cumsum(axis=1)\n    category_colors = plt.get_cmap('RdYlGn')(\n        np.linspace(0.15, 0.85, data.shape[1]))\n\n\n    fig, ax = plt.subplots(figsize=(10,10))\n    ax.invert_yaxis()\n    #ax.xaxis.set_visible(False)\n    ax.set_xlim(0, np.sum(data, axis=1).max())\n\n    for i, (colname, color) in enumerate(zip(category_names, category_colors)):\n        widths = data[:, i]\n        starts = data_cum[:, i] - widths\n        ax.barh(labels, widths, left=starts, height=0.5,\n                label=colname, color=color)\n        xcenters = starts + widths \/ 2\n\n        r, g, b, _ = color\n        text_color = 'white' if r * g * b < 0.5 else 'darkgrey'\n        for y, (x, c) in enumerate(zip(xcenters, widths)):\n            ax.text(x, y, str(int(c)), ha='center', va='center',\n                    color=text_color, fontsize=12)\n    ax.legend(ncol=len(category_names), bbox_to_anchor=(0, 1),\n              loc='lower left', fontsize='small')\n\n    return fig, ax\n\n\nsurvey(results, category_names)\nplt.show()","bdb4eda1":"## 4. Price\n- <div class=\"alert alert-block alert-warning\">Here, Price of a book is a continous quantitative variable.\n- <div class=\"alert alert-block alert-warning\">Minimum price of a book is zero dollar and max is 105 dollars. \n- <div class=\"alert alert-block alert-warning\">There are total 9 unique books with a price of zero dollar. It can be inferred that these books are either free or its an anomaly.","a1cc7dac":"### 2.5 Top 20 authors using high percentage of punctutations in books names","155646dc":"## Fix Anomaly","ad58a1c0":"### 2.1 Top 10 best selling authors for Non Fiction and Fiction Books\n<div class=\"alert alert-block alert-warning\">The best selling authors are selected based on their appearences in the top 50 selling books each year, from 2009 to 2019.","1b69651b":"### 3.3 Average length of book name across genre","b0a11828":"## Dataset Shape","82fb1f86":"![](https:\/\/www.adazing.com\/wp-content\/uploads\/2012\/03\/agold-book.png)","cd58b0ba":"### 6.4 Log transformation of reviews","f02a301e":"### 2.3 Top 20 Authors with  highest reviews\n<div class=\"alert alert-block alert-warning\">Author `EL James` has the highest number of reviews on his books.","deaba2f0":"### 2.2 Top 20 best selling authors\n- <div class=\"alert alert-block alert-warning\">The best selling authors are selected based on their appearences in the top 50 selling books each year. The number of apprearences includes duplicate book names. Their unique publications and total reviews are shown below.\n- <div class=\"alert alert-block alert-warning\">Author `Jeff Kinney` is the top selling author with 12 apperences in the top selling books from 2009 to 2019.","234f78b5":"1. <div class=\"alert alert-block alert-warning\"><b>Mispelled Author Name:<\/b> Author `J.K. Rowling` name is mispelled in two books as there is an additional whitespace between the initials J and K.<\/div>","77807360":"# <a id=toc><font color='teal'>Table of Contents<\/font><\/a>\n1. [Insights](#insights)\n2. [Essential Libraries and Custom Functions](#lib)\n3. [Lets look at the data](#data)\n4. [Add Additional Features](#add_feat)\n5. [Exploratory Data Analysis](#eda)","d494d8d4":"### 6.2 Book with maximum number of reviews","1d483ec4":"### 2.7 Top 20 authors with the most expensive book collection bundle","fff6a3c6":"## Data Anomalies","8a48a9aa":"# <a id=insights><font color='firebrick'>Insights<\/font><\/a>\n\n[Back to index](#toc)","f486ff2e":"### 5.2 Books with the best User Rating","59ca1c84":"### 6.5 Total number of Reviews of Fiction and Non-Fiction books each year\n- <div class=\"alert alert-block alert-warning\">Except for year 2018 and 2019, the total reviews of Non-Fictions books are higher than Fiction books.","67df1782":"2. <div class=\"alert alert-block alert-warning\"><b>Punctuations percentage:<\/b> It is the count of punctuations in book name.<\/div>","973d3bc4":"2. <div class=\"alert alert-block alert-warning\"><b>Books with zero dollar price:<\/b> There are 9 unique books with a price of zero dollar.<\/div>","cedd50de":"# <a id=eda><font color='orangered'>Exploratory Data Analysis<\/font><\/a>\n[Back to index](#toc)","cec3ab8f":"### 3.2 Longest Book Name","42a60ca9":"# <a id=add_feat><font color='teal'>Add Additional Features<\/font><\/a>\n[Back to index](#toc)","d77b8109":"- <div class=\"alert alert-block alert-warning\">Non-Fiction was a more popular category as compared to Fiction, every year from 2009 to 2019. Out of the 351 unique books, 54.4 percent were Non-Fiction and rest 45.6 percent were Fiction. The highest fraction (66 percent) of Non-Fiction books were sold in 2015 and lowest for fiction books. For Fiction books, highest fraction (48 percent) of books were sold in 2009, 2013 ad 2017, and lowest for Non-Fiction books.<\/div>\n- <div class=\"alert alert-block alert-warning\">Author `Jeff Kinney` is the top selling author with 12 apperences in the top selling books from 2009 to 2019. However, Author `EL James` has the highest number of reviews on his books. There are only 2 authors, DK and Scholastic, having books in both the genre category.\n- <div class=\"alert alert-block alert-warning\">The median and mean length of fiction books is less than non-fiction books.\n- <div class=\"alert alert-block alert-warning\">There are total 9 unique books with a price of zero dollar. It can be inferred that these books are either free or its an anomaly. Except for year 2009, the average price of Non-Fiction books is higher than Fiction books each year.\n- <div class=\"alert alert-block alert-warning\">None of the non-fiction books has a rating below 4.\n- <div class=\"alert alert-block alert-warning\">Except for years 2012 and 2013, the average user rating of fiction books is higher than Non-Fictions books each year. Also, the total reviews of Non-Fictions books are higher than Fiction books, except for year 2018 and 2019.","b633edb4":"### 6.1 Book with minimum number of reviews","c46a9cdf":"## Rename column","8b19d5ce":"### 6.3 Distribution of Reviews","760dbfd0":"1. <div class=\"alert alert-block alert-warning\"><b>Book name length:<\/b> It is the text length for a book name minus the spaces(whitespace) between words.<\/div>","ba1a5bd8":"### 4.5 Max Price of Fiction and Non Fiction book each year","70fca46b":"## 2. Author","74dce500":"### 2.6 Authors with books across both genres\n<div class=\"alert alert-block alert-warning\">There are only 2 authors, `DK` and `Scholastic`, having books in both the genre category","b68b4e45":"### 5.1 Book with the lowest User Rating","ea89c9a5":"### 2.4 Top 20 authors with long book names","6eaf877d":"### 4.3 Log transformation of Price\n<div class=\"alert alert-block alert-warning\">Since, price of all unique books is extremely skewed, applying log transformtion made the distribution normal. Looks like there is a slight difference between the price across genre.","797c5b08":"## 1. Genre\n- <div class=\"alert alert-block alert-warning\">Genre is a nominal categorical variable with 2 classes - Fiction and Non-Fiction.\n- <div class=\"alert alert-block alert-warning\">Non-Fiction was a more popular category as compared to Fiction, every year from 2009 to 2019. Out of the 351 unique books, 54.4 percent were Non-Fiction and rest 45.6 percent were Fiction. \n- <div class=\"alert alert-block alert-warning\">The highest fraction (66 percent) of Non-Fiction books were sold in 2015 and lowest for fiction books. For Fiction books, highest fraction (48 percent) of books were sold in 2009, 2013 ad 2017, and lowest for Non-Fiction books.   ","e0184065":"# <font color='purple'>Lets look at the data...<\/font>\n[Back to index](#toc)","27ecc9b9":"## 3. Length of book name","6ad9fc95":"## Missing Values","3ccef195":"### 4.1 Details of books with a price of zero dollar","927caf93":"<div class=\"alert alert-block alert-warning\">There are no missing values in any column.<\/div>","9f7f75a6":"# <font color='mediumvioletred'>Motivation<\/font>\nHello Everyone! I am a beginner in the field of data science and ML. The purpose for creating this notebook is to improve my data visualization skills using python. Below you will see I have experimented with different chart types, asthetics etc. Please feel free to point out my mistakes and suggest topics I can read to improve. Thanks!","185221d6":"### 3.3 Distribution for all 351 unique books\n- <div class=\"alert alert-block alert-warning\">Overall, the length is slightly left skewed.\n- <div class=\"alert alert-block alert-warning\">The median and mean length of fiction books is less than non-fiction books.\n- <div class=\"alert alert-block alert-warning\">The emperical cumulative frequency distribution plots indicates the differences in proportion of length of book name between fiction and non-fiction books.","da3d8e08":"### 5.4 Average User Rating of Fiction and Non-Fiction books each year\n- <div class=\"alert alert-block alert-warning\">Except for years 2012 and 2013, the average user rating of fiction books is higher than Non-Fictions books each year.","2fa422b2":"#### 5.2.1 Authors count\n- <div class=\"alert alert-block alert-warning\">In the 28 best rating books, Author Dav Pilkey has 6 books, followed by J.K Rowling and Rush Kimbaugh with 4 and 2 books.","b17b3bb4":"### 5.3 Distrubution of User Ratings","af1dbbe1":"<div class=\"alert alert-block alert-warning\">\n    The default library of seaborn on kaggle is 0.10.0, upgrading to the latest version 0.11.0\n    <\/div>","f1581edc":"## 5. User Ratings\n- <div class=\"alert alert-block alert-warning\">User Rating is a continous quantitative variable which ranges from 0 to 5.\n- <div class=\"alert alert-block alert-warning\">The minimum and the maximum value of user rating is 3.3 and 4.9\n- <div class=\"alert alert-block alert-warning\">The countplot indicates that most frequent occuring value of user rating is 4.8. None of the non-fiction book has a rating below 4.\n\n","045655bd":"### 4.2 Distribution of Price for all 351 unique books\n<div class=\"alert alert-block alert-warning\">Price looks extremely skewed and the differences in the distribution and proportion, across Genre cannot be identified. ","16baa757":"## 6. Reviews\n- <div class=\"alert alert-block alert-warning\">It is a discrete quantitative variable.\n- <div class=\"alert alert-block alert-warning\">Minimum number of reviews for a book is  37 and maximum of 87841.\n- <div class=\"alert alert-block alert-warning\">80 percent of the books have less than equal to 20,000 reviews.","7c13bfb1":"### 4.4 Average Price of top selling 50 books across Genre\n- <div class=\"alert alert-block alert-warning\">Except for year 2009, the average price of top 50 Non-Fiction books is higher than Fiction books each year.","3258eda4":"# <a id=lib><font color='steelblue'>Essential Libraries and custom function<\/font><\/a>\n[Back to index](#toc)","87f0920a":"### 3.1 Smallest Book Name"}}