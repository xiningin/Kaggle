{"cell_type":{"7453bd5d":"code","fa947986":"code","e635eb62":"code","90605fdd":"code","c7a2632b":"code","e3adc5f4":"code","6beb3edb":"code","2f9a7063":"code","f4d94733":"code","047e4b98":"code","d6bfb26a":"code","cb67916c":"code","4a65e266":"code","6e77c46f":"code","80a03651":"code","ac1cf8db":"code","86b46626":"code","75c774c3":"markdown","548076d7":"markdown","62821b68":"markdown","cb41d8fe":"markdown","0636e8a1":"markdown","040f1760":"markdown","d2d93b88":"markdown","ef05e66c":"markdown","03cadb9c":"markdown","3eb02323":"markdown","8d4f3f0a":"markdown","c07d47d0":"markdown","132b7c90":"markdown","1ce1edd7":"markdown"},"source":{"7453bd5d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import metrics\n\nfrom sklearn.linear_model import LinearRegression \nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import Lasso\n\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.tree import DecisionTreeRegressor\n\nfrom sklearn.metrics import mean_squared_error","fa947986":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e635eb62":"train = pd.read_csv(\"\/kaggle\/input\/Train.csv\") \ntest = pd.read_csv(\"\/kaggle\/input\/Test.csv\")","90605fdd":"train.columns","c7a2632b":"print(train.shape)\ntrain.head()","e3adc5f4":"train.describe()","6beb3edb":"train.info()","2f9a7063":"train.isna().any()","f4d94733":"#Using Pearson Correlation\nplt.figure(figsize=(18,10))\ncor = train.corr()\nsns.heatmap(cor, annot=True, cmap=plt.cm.Accent)\nplt.show()\nplt.savefig(\"main_correlation.png\")","047e4b98":"label = [\"Attrition_rate\"]\nfeatures = ['VAR7','VAR6','VAR5','VAR1','VAR3','growth_rate','Time_of_service','Time_since_promotion','Travel_Rate','Post_Level','Education_Level']","d6bfb26a":"featured_data = train.loc[:,features+label]\nfeatured_data = featured_data.dropna(axis=0)\nfeatured_data.shape","cb67916c":"X = featured_data.loc[:,features]\ny = featured_data.loc[:,label]","4a65e266":"X_train,X_test,y_train,y_test = train_test_split(X,y,random_state=1,test_size=0.55)","6e77c46f":"df = Ridge(alpha=0.000001)\ndf.fit(X_train,y_train)\ny_pred = df.predict(X_test)\nc=[]\nfor i in range(len(y_pred)):\n    c.append((y_pred[i][0].round(5)))\npf=c[:3000]\n\nprint(len(c),len(pf),c[0])","80a03651":"score = 100* max(0, 1-mean_squared_error(y_test, y_pred))\nprint(score)","ac1cf8db":"selected_test = test.loc[:,features]\n#selected_test.info()\nmean_values = np.mean(selected_test)\nselected_test[features].replace(mean_values,np.nan,inplace=True)\nfor i,val in enumerate(features):\n    selected_test[val] = selected_test[val].fillna(mean_values[i])\n    \nselected_test.head()","86b46626":"#Predicting\nimport pandas as pd\ndff = pd.DataFrame({'Employee_ID':test['Employee_ID'],'Attrition_rate':pf})\n#Converting to CSV\ndff.to_csv(\"Predictions.csv\",index=False)","75c774c3":"## Data Visualization and Preprocessing","548076d7":"#### The final test submission score.","62821b68":"## Prediction","cb41d8fe":"## Reading Dataset","0636e8a1":"![final test submission score](https:\/\/raw.githubusercontent.com\/blurred-machine\/HackerEarth-Machine-Learning-Challenge\/master\/final_test_score.PNG)","040f1760":"## Data Preprocessing Test file","d2d93b88":"## Learning Model","ef05e66c":"## Importing Necessary Libraries","03cadb9c":"### Splitting the Dataset","3eb02323":"#### Checking if there are some missing values in the data or not","8d4f3f0a":"#### Let's find out the path of input files.","c07d47d0":"### Labels and Features","132b7c90":"# Employee Attrition Rate. Will your employee leave you?","1ce1edd7":"#### Plotting the correlation matrix for the dataset"}}