{"cell_type":{"60d56269":"code","3332a8b2":"code","a16318a9":"code","6b14d995":"code","2e6bcfea":"code","aa49d67d":"code","9301670e":"code","c7fa7a29":"code","3fd3ba85":"code","f7ec9a4c":"code","9abdf584":"code","6c4557ee":"code","09aaa3d7":"code","da490674":"code","73fa8902":"markdown","8e4ef4da":"markdown","b0338b64":"markdown","1304c6be":"markdown","d9de1bb0":"markdown","24cdc569":"markdown","07530dee":"markdown","147374f6":"markdown","c3df0ec7":"markdown","f1866d90":"markdown","69f61308":"markdown","a5ccc2e9":"markdown","343a1f19":"markdown","5f818ad2":"markdown","b5ab9a47":"markdown","1cae3808":"markdown"},"source":{"60d56269":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.datasets import load_boston\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.linear_model import LinearRegression","3332a8b2":"bh_data = load_boston()","a16318a9":"print(bh_data.keys())","6b14d995":"boston = pd.DataFrame(bh_data.data, columns=bh_data.feature_names)","2e6bcfea":"print(bh_data.DESCR)","aa49d67d":"boston['MEDV'] = bh_data.target","9301670e":"X = pd.DataFrame(np.c_[boston['LSTAT'], boston['RM']], columns=['LSTAT','RM'])\nY = boston['MEDV']","c7fa7a29":"X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2, random_state=9)","3fd3ba85":"lin_reg_mod = LinearRegression()","f7ec9a4c":"lin_reg_mod.fit(X_train, y_train)","9abdf584":"pred = lin_reg_mod.predict(X_test)","6c4557ee":"test_set_rmse = (np.sqrt(mean_squared_error(y_test, pred)))\n\ntest_set_r2 = r2_score(y_test, pred)","09aaa3d7":"print(test_set_rmse)\nprint(test_set_r2)","da490674":"import matplotlib.pyplot as plt \n\ndef estimate_coef(x, y): \n\t# g\u00f6zlem \/ puan say\u0131s\u0131\n\tn = np.size(x) \n\n\t# x ve y vekt\u00f6r\u00fcn\u00fcn ortalamas\u0131 \n\tm_x, m_y = np.mean(x), np.mean(y) \n\n\t# x ile ilgili \u00e7apraz sapma ve sapman\u0131n hesaplanmas\u0131 \n\tSS_xy = np.sum(y*x) - n*m_y*m_x \n\tSS_xx = np.sum(x*x) - n*m_x*m_x \n\n\t# regresyon katsay\u0131lar\u0131n\u0131n hesaplanmas\u0131 \n\tb_1 = SS_xy \/ SS_xx \n\tb_0 = m_y - b_1*m_x \n\n\treturn(b_0, b_1) \n\ndef plot_regression_line(x, y, b): \n    # SADECE GORSEL AMACLI\n\t# ger\u00e7ek noktalar\u0131 da\u011f\u0131l\u0131m grafi\u011fi olarak \u00e7izmek\n\tplt.scatter(x, y, color = \"m\", \n\t\t\tmarker = \"o\", s = 30) \n\n\t# \u00f6ng\u00f6r\u00fclen yan\u0131t vekt\u00f6r\u00fc \n\ty_pred = b[0] + b[1]*x \n\n\t# regresyon \u00e7izgisinin \u00e7izilmesi \n\tplt.plot(x, y_pred, color = \"g\") \n\n\t# etiket koymak\n\tplt.xlabel('x') \n\tplt.ylabel('y') \n\n\t# g\u00f6sterme i\u015flevi \n\tplt.show() \n    \n    \n    \n\"\"\" d\u00fc\u015f\u00fck stat\u00fc oran\u0131 ('LSTAT') ve oda say\u0131s\u0131 ('RM')\"\"\"\nX2 = X.LSTAT\nplt.title(\"d\u00fc\u015f\u00fck stat\u00fc oran\u0131 ('LSTAT')\")\nb = estimate_coef(X2, Y) \nplot_regression_line(X2, Y, b)\n\nX3 = X.RM\nplt.title(\"oda say\u0131s\u0131 ('RM')\")\nb = estimate_coef(X3, Y) \nplot_regression_line(X3, Y, b)","73fa8902":"\u0130\u015fte sonu\u00e7lar\u0131m\u0131z:\n\n> Rmse i\u00e7in, bu de\u011fer ne kadar d\u00fc\u015f\u00fckse, o kadar uygun\n> 6.035041736063677\n\n> 1'e ne kadar yak\u0131nsa, uyum o kadar iyi olur\n> 0.6400551238836978\n\nModelin do\u011frulu\u011funu art\u0131rmak i\u00e7in daha fazla \u00f6zellik kullanmay\u0131 deneyebilirsiniz.","8e4ef4da":"\u015eimdi, regresyon g\u00f6revlerini de\u011ferlendirmek i\u00e7in yayg\u0131n olarak kullan\u0131lan iki \u00f6l\u00e7\u00fcm olan RMSE ve R-2 \u00f6l\u00e7\u00fcmlerini kullanarak ger\u00e7ek de\u011ferlere y\u00f6nelik \u00f6ng\u00f6r\u00fcleri kontrol edece\u011fiz:","b0338b64":"Ne t\u00fcr veri i\u00e7erdi\u011fini g\u00f6rmek i\u00e7in veri de\u011fi\u015fkeninin de\u011ferini yazd\u0131ral\u0131m:","1304c6be":"\u0130htiyac\u0131m\u0131z olan t\u00fcm k\u00fct\u00fcphaneler","d9de1bb0":"\u015eimdi veri \u00e7er\u00e7evesini e\u011fitim ve test setlerine ay\u0131ral\u0131m (%20):","24cdc569":"\u0130\u015fte geri d\u00f6n\u00fc\u015f\u00fcm\u00fcz: dict_keys(['data', 'target', 'feature_names', 'DESCR'])\n\ndata, evler ile ilgili t\u00fcm g\u00fcncel bilgidir. target evin fiyat\u0131, feature names veri kategorilerin isimleri ve DESCR veri k\u00fcmesinin \u00f6zelliklerini tan\u0131mlamak i\u00e7in bir komuttur.\n\n\u00f6zellik adlar\u0131n\u0131 s\u00fctun ba\u015fl\u0131klar\u0131 olarak da giriyoruz:","07530dee":"Normalde, en \u00f6nemli \u00f6zelliklerin ne oldu\u011funu bulmak ve bu de\u011fi\u015fkenleri regresyon i\u00e7in kullanmak i\u00e7in baz\u0131 veri analizleri yapars\u0131n\u0131z. Ancak bu tek ba\u015f\u0131na bir makale olabilir, bu y\u00fczden bu durumda, size en g\u00fc\u00e7l\u00fc korelasyona sahip \u00f6zelliklerin pop\u00fclasyondaki \"d\u00fc\u015f\u00fck stat\u00fc\" oran\u0131 ('LSTAT') ve oda say\u0131s\u0131 oldu\u011funu s\u00f6yleyece\u011fim. ('RM').\n\n\u00d6yleyse lineer regresyon i\u00e7in de\u011fi\u015fkenlerimiz olarak 'RM' ve 'LSTAT' kullanal\u0131m. Bu de\u011ferler veri setimizde zaten s\u00fcrekli oldu\u011fundan, onlar\u0131 kodlamam\u0131z gerekmiyor.\n\nAncak, iki de\u011fi\u015fken s\u00fctunu Numpy k\u00fct\u00fcphanesinin np.c_ komutuyla tek bir s\u00fctunda birle\u015ftirelim . Ayr\u0131ca, boston veri \u00e7er\u00e7evesini ve istedi\u011fimiz s\u00fctunu belirterek hedef de\u011ferleri depolamak i\u00e7in yeni bir de\u011fi\u015fken olu\u015fturaca\u011f\u0131z:","147374f6":"Art\u0131k model uygun oldu\u011fu i\u00e7in predict komutu arayarak tahminler yapabiliriz. Test setinde tahminler yap\u0131yoruz:","c3df0ec7":"Veri k\u00fcmesindeki \u00f6zellik t\u00fcrleri hakk\u0131nda bir fikir edinmek istiyorsak, baz\u0131 sat\u0131rlar\u0131 yazd\u0131rabiliriz, ayr\u0131ca \u00f6zelliklerin ne oldu\u011funu a\u00e7\u0131klayabiliriz:","f1866d90":"**Python ile \u00c7oklu Do\u011frusal Regresyon**","69f61308":"Do\u011fruluk \u00f6l\u00e7\u00fcmlerini yazd\u0131ral\u0131m ve hangi sonu\u00e7lar\u0131 ald\u0131\u011f\u0131m\u0131z\u0131 g\u00f6relim:","a5ccc2e9":"Bir evin medyan de\u011ferini tahmin etmek istiyoruz, ancak mevcut veri setimiz e\u011fitmek \/ test etmek i\u00e7in bu bilgiye sahip de\u011fil, o y\u00fczden veri \u00e7er\u00e7evesinde yeni bir s\u00fctun olu\u015ftural\u0131m ve veri setinden hedef de\u011ferleri y\u00fckleyelim.\n\nBu sadece de\u011fi\u015fkende yaratmak istedi\u011fimiz veri \u00e7er\u00e7evesini ve s\u00fctunun ad\u0131n\u0131 belirleyerek ve ard\u0131ndan target de\u011ferleri se\u00e7erek yap\u0131l\u0131r :","343a1f19":"\u015eimdi, sadece LinearRegression Scikit-Learn'den i\u015flevi \u00e7a\u011f\u0131rmak i\u00e7in yapt\u0131\u011f\u0131m\u0131z modelin bir \u00f6rne\u011fini olu\u015fturmak gerekiyor :","5f818ad2":"AYRICA GORSELLE\u015eT\u0130RME \u0130LE REGRESYON GOSTER\u0130M\u0130","b5ab9a47":"\u015eimdi bu modeli e\u011fitim verilerine g\u00f6re uyguluyoruz:","1cae3808":"\u015eimdi load_boston() i\u015flevini \u00e7a\u011f\u0131rarak veri k\u00fcmesinin bir \u00f6rne\u011fini olu\u015fturmam\u0131z gerekiyor :"}}