{"cell_type":{"1295cccb":"code","8883220e":"code","2bf0b176":"code","7d86ba08":"code","01471937":"code","7ba46db8":"code","20274362":"code","f8935c30":"code","141c5423":"code","5b8f153c":"code","20451cb6":"code","5f41c4c5":"code","75c72882":"code","171d73f2":"code","1956f648":"code","8a9154d2":"code","4ba1006b":"code","c7faef49":"code","da9d7a34":"code","b9397a68":"code","f738bcc4":"code","0cfa100b":"code","5b5370ac":"code","8634c32f":"code","abfc6303":"markdown","8089e95b":"markdown","2dab1a33":"markdown"},"source":{"1295cccb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import tree\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8883220e":"from IPython.display import Image","2bf0b176":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","7d86ba08":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","01471937":"print(train_data.corr())","7ba46db8":"%matplotlib inline\nfig, ax = plt.subplots(figsize=(12, 9)) \nsns.heatmap(train_data.corr(), square=True, vmax=1, vmin=-1, center=0)\nplt.show()","20274362":"print(train_data.isnull().sum())","f8935c30":"train_data[\"Age\"] = train_data[\"Age\"].fillna(train_data[\"Age\"].mean())\ntest_data[\"Age\"] = test_data[\"Age\"].fillna(test_data[\"Age\"].mean())\ntest_data[\"Fare\"] = test_data[\"Fare\"].fillna(test_data[\"Fare\"].mean())","141c5423":"print(test_data.isnull().sum())","5b8f153c":"train_data[\"FamilySize\"] = 1 + train_data[\"SibSp\"] + train_data[\"Parch\"] \ntest_data[\"FamilySize\"]  = 1 + test_data[\"SibSp\"] + test_data[\"Parch\"]  ","20451cb6":"test_data.head()","5f41c4c5":"print(train_data.corr())","75c72882":"y_train = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\",\"Fare\",\"FamilySize\"]\nX_train = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\ntrain_age = train_data[\"Age\"]\ntest_age = test_data[\"Age\"]\n\nX_train = pd.concat([train_age, X_train],axis=1)\nX_test = pd.concat([test_age, X_test],axis=1)","171d73f2":"print(X_test)","1956f648":"clf = tree.DecisionTreeClassifier(criterion='gini',\n  splitter='best', max_depth=3, min_samples_split=2,\n  min_samples_leaf=1, min_weight_fraction_leaf=0.0,\n  max_features=None, random_state=1,\n )","8a9154d2":"clf = clf.fit(X_train, y_train)","4ba1006b":"ranking = np.argsort(-clf.feature_importances_)\nf, ax = plt.subplots(figsize=(11, 9))\nsns.barplot(x=clf.feature_importances_[ranking], y=X_train.columns.values[ranking], orient='h')\nax.set_xlabel(\"feature importance\")\nplt.tight_layout()\nplt.show()","c7faef49":"fig = plt.figure(figsize=(12,8))\nfor i in np.arange(8):\n    ax = fig.add_subplot(5,6,i+1)\n    sns.regplot(x=X_train.iloc[:,i], y=y_train)\n\nplt.tight_layout()\nplt.show()","da9d7a34":"predict_clftree = clf.predict(X_test)","b9397a68":"print(predict_clftree)","f738bcc4":"pred_df = pd.DataFrame(predict_clftree)","0cfa100b":"pred_df= pred_df.rename(columns={0: 'Survived'})\npred_df = pred_df.astype(int)\npred_df = pd.concat([test_data[\"PassengerId\"], pred_df],axis=1)","5b5370ac":"pred_df.head()","8634c32f":"pred_df.to_csv('my_submission.csv', index=False)","abfc6303":"\u7279\u5fb4\u91cf\u306e\u76f8\u95a2\u4fc2\u6570\u3092\u7b97\u51fa","8089e95b":"\u76f8\u95a2\u4fc2\u6570\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7","2dab1a33":"Age\u306e\u6b20\u640d\u5024\u3092\u5e73\u5747\u5024\u3067\u88dc\u5b8c<br>\ntest\u30c7\u30fc\u30bf\u306eFare\u3092\u5e73\u5747\u5024\u3067\u88dc\u5b8c"}}