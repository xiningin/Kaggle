{"cell_type":{"00cf5763":"code","61fedc73":"code","b1156459":"code","7beb0105":"code","a36ee262":"code","bc08295a":"code","44f65382":"code","17040485":"code","3abe02da":"code","ee72c130":"code","dc222428":"code","b906ecc0":"code","c9668fab":"code","b009e661":"code","0f3441c0":"code","969f427f":"code","de38abd8":"code","36d95e4e":"code","b6af5b22":"code","c7ceeb6f":"code","0d261b2c":"markdown","cd3dd410":"markdown","d40e94cb":"markdown","4a591875":"markdown","eabcd7be":"markdown","5aa35ad3":"markdown","f738979d":"markdown","cb6da8b9":"markdown","d4038299":"markdown","d60f82da":"markdown","368cdf33":"markdown","030f6cf6":"markdown","11189467":"markdown"},"source":{"00cf5763":"# Arquivo de dados\nimport numpy as np # linear algebra\nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","61fedc73":"df = pd.read_csv('\/kaggle\/input\/hmeq.csv')\n\ndf.head(10).T","b1156459":"# Analisando o df\ndf.info()","7beb0105":"\ndf['MORTDUE'] =  df['MORTDUE'].fillna(0)\ndf['VALUE'] = df['VALUE'].fillna(0)\ndf['REASON'] = df[\"REASON\"].fillna(\"Nao Informado\")\ndf['JOB'] = df['JOB'].fillna('Nao Informado')\ndf['YOJ'] = df['YOJ'].fillna(0)\ndf['DEROG'] = df['DEROG'].fillna(0)\ndf['DELINQ'] = df['DELINQ'].fillna(0)\ndf['CLAGE'] = df['CLAGE'].fillna(0)\ndf['NINQ'] = df['NINQ'].fillna(0)\ndf['CLNO'] = df['CLNO'].fillna(0)\ndf['DEBTINC'] = df[\"DEBTINC\"].fillna(0)\ndf.head(10).T","a36ee262":"df = pd.get_dummies(df, columns=[\"REASON\",\"JOB\"])\ndf.shape","bc08295a":"df.head().T","44f65382":"# Verificando os tipos\ndf.info()","17040485":"from sklearn.model_selection import train_test_split\n\n# Dividindo em treino e teste\ntrain, test = train_test_split(df, test_size=0.2, random_state=42)\n\n# Dividindo em treino e valida\u00e7\u00e3o\ntrain, valid = train_test_split(train, test_size=0.2, random_state=42)\n\ntrain.shape, valid.shape, test.shape","3abe02da":"import seaborn as sn\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(18,18))\n\n\ncorrMatrix = df.corr()\nsn.heatmap(corrMatrix, annot=True)\nplt.show()","ee72c130":"# Selecionando as colunas para treinamento\nremoved = ['BAD']\n\n# Lista das features\nfeats = [c for c in train.columns if c not in removed]","dc222428":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(random_state=42)","b906ecc0":"# Treinar o modelo\nrf.fit(train[feats], train['BAD'])","c9668fab":"preds_val = rf.predict(valid[feats])\n","b009e661":"# Escolher a m\u00e9trica para verificar o desempenho do modelo\nfrom sklearn.metrics import accuracy_score","0f3441c0":"# Medir o desempenho na base de valida\u00e7\u00e3o (acur\u00e1cia)\naccuracy_score(valid['BAD'], preds_val)","969f427f":"import scikitplot as skplt","de38abd8":"skplt.metrics.plot_confusion_matrix(valid['BAD'], preds_val)","36d95e4e":"# Melhorando o desempenho do RF Classifier\nrf2 = RandomForestClassifier(random_state=42, n_estimators=200, max_depth=4, min_samples_split=5)\n\n# Treinando o modelo\nrf2.fit(train[feats], train['BAD'])","b6af5b22":"# Verificando a acur\u00e1cia da nova RF\npreds_test2 = rf2.predict(test[feats])\n\naccuracy_score(test['BAD'], preds_test2)","c7ceeb6f":"# Plotando a matriz de confusao para os dados de teste da RF2\nskplt.metrics.plot_confusion_matrix(test['BAD'], preds_test2)","0d261b2c":"### A precis\u00e3o pode ser usada em uma situa\u00e7\u00e3o em que os Falsos Positivos s\u00e3o considerados mais prejudiciais que os Falsos Negativos. \nNesse caso, ao classificar uma pessoa como bom, \u00e9 necess\u00e1rio que o modelo esteja correto, mesmo que acabe classificando adimplentes como ruim (Falso Negativo) no processo. O modelo precisa ser preciso na suas classifica\u00e7\u00f5es, pois se o modelo classificar algu\u00e9m como bom,mas na verdade ele \u00e9 um mau pagador isso ir\u00e1 gerar perda de dinheiro para o banco.\n","cd3dd410":"### 1.Carregamento dos Dados","d40e94cb":"**B\u00f4nus 2:**\n    \nExplique o que \u00e9 `precis\u00e3o` na matriz de confus\u00e3o acima e d\u00ea 1 exemplo onde isso pode ser \u00fatil.","4a591875":"### Separar dados em treino e valida\u00e7\u00e3o\n### Instanciar e treinar uma RandomForest\n","eabcd7be":"**B\u00f4nus 1:**\n    \nPlote uma matriz de confus\u00e3o nas previs\u00f5es dos dados de valida\u00e7\u00e3o.","5aa35ad3":"# B\u00f4nus\n\nAp\u00f3s terminar o exerc\u00edcio e verificar que est\u00e1 cumprindo todos os itens a serem avaliados, voc\u00ea pode fazer os itens a seguir para ganhar pontos extra na prova:","f738979d":"# IESB\n# Gradua\u00e7\u00e3o em Ci\u00eancia de Dados\n## Disciplina - Minera\u00e7\u00e3o de Dados e Intelig\u00eancia Computacional\n## Avalia\u00e7\u00e3o - 04\/05\/2020\n\n### Descri\u00e7\u00e3o\nA base de dados \"Home Equity\" possui dados pessoas e informa\u00e7\u00f5es de empr\u00e9stimo de 5.960 empr\u00e9stimos recentes. Para cada empr\u00e9stimo existem 12 vari\u00e1veis registradas.\nA vari\u00e1vel alvo (`BAD`) indica quando o cliente n\u00e3o pagou o empr\u00e9stimo (valor 1), e quando ele honrou o compromisso (valor 0).\n\n### Objetivo\nCriar um modelo de ML usando RandomForest para prever se determinado cliente ir\u00e1 ou n\u00e3o honrar o empr\u00e9stimo contra\u00eddo.\n\nO desempenho do modelo deve ser medido pela m\u00e9trica de acur\u00e1cia (`accuracy_score`).","cb6da8b9":"### Avalia\u00e7\u00e3o da performance do modelo pela m\u00e9trica de acur\u00e1cia (accuracy_score).\n","d4038299":"### O recall pode ser usada em uma situa\u00e7\u00e3o em que os Falsos Negativos s\u00e3o considerados mais prejudiciais que os Falsos Positivos. \nPor exemplo, o modelo deve de qualquer maneira encontrar todos os que podem ser inadimplentes, mesmo que classifique alguns poss\u00edveis adimplentes como possiveis inadimplentes (situa\u00e7\u00e3o de Falso Positivo) no processo. Ou seja, o modelo deve ter alto recall, pois classificar inadimplentes como adimplentes pode n\u00e3o ser favoravel para o banco.","d60f82da":"### Verifica\u00e7\u00e3o para saber se os dados foram importados corretamente","368cdf33":"**B\u00f4nus 3:**\n    \nExplique o que \u00e9 `recall` na matriz de confus\u00e3o acima e d\u00ea 1 exemplo onde isso pode ser \u00fatil.","030f6cf6":"#### Acur\u00e1cia \n- Mostra entre todas as classifi\u00e7\u00f5es,quantas o modelo classificou corretamente.\n- O modelo teve a perfomace de 89.62%, classificou 89.62% dos dados corretamente\n","11189467":"### Pr\u00e9-processamento dos dados (preenchimento de valores em branco, transforma\u00e7\u00e3o de texto em n\u00famero)"}}