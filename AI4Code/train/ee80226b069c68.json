{"cell_type":{"1f12b4a8":"code","54a0ff99":"code","35d7913a":"code","9de981d6":"code","496925fb":"code","02c994c3":"code","6aa2333e":"code","eb5e8ae9":"code","4c8218db":"code","014d796a":"code","db26e8a1":"code","95a81478":"code","22a359b0":"code","efb0e219":"code","3f64ce0c":"code","1f75d0d2":"code","ef8704ba":"code","5c7d3e93":"code","696c170f":"code","c2ff6ef9":"code","8e5a41b0":"code","6badb96f":"code","9c2554f5":"code","ebf35485":"code","489e708a":"code","1331aaf6":"code","a21d88b1":"code","1898f03e":"code","71fc0d7f":"code","38d6b7ab":"code","2f26765b":"code","ec1f33d6":"code","2a44aa7f":"code","d9156e5e":"code","85cacbda":"code","f6280bfb":"code","669c11e7":"code","6bf35549":"code","0e3bbfae":"code","c6c4dd13":"code","2a9149e3":"code","ae428760":"code","796638f9":"code","1651d8ad":"code","0f4f73a3":"code","0090dcc0":"code","6c2c6ff8":"code","51b42fd7":"code","a77e075a":"code","7d6e4497":"code","5ec63a46":"code","8a3d4bce":"code","0f2454dc":"code","c5eba87a":"code","b3533766":"markdown","8ec8c71b":"markdown","9eddde38":"markdown","d31642e9":"markdown","f9722b42":"markdown","7b04b3f7":"markdown","53382010":"markdown","56d9085f":"markdown","8d438d07":"markdown","2b15418e":"markdown","2df2c634":"markdown","d5272f22":"markdown","b85b0011":"markdown","edb3ab8d":"markdown","de33229c":"markdown","63815608":"markdown","f4b2bfe6":"markdown","968b4aee":"markdown","fb0680ba":"markdown","9f21ece1":"markdown","a9c465fe":"markdown","da01fd2b":"markdown","8045687c":"markdown","22338c57":"markdown","4faca7b8":"markdown","9d348a3f":"markdown","a369dc2b":"markdown","b6782741":"markdown","27ac1089":"markdown","f4271e5b":"markdown","fd5ed0a3":"markdown","95667618":"markdown","ff6d4c81":"markdown","4fa31661":"markdown","34a2bd70":"markdown","83d2929d":"markdown","eb6d4271":"markdown","dc8ce8a4":"markdown","8cced689":"markdown","882f2bb6":"markdown","de7d9e97":"markdown","98ee6c06":"markdown","0e67748e":"markdown","57ca9696":"markdown"},"source":{"1f12b4a8":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.axis import Axis\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","54a0ff99":"df_cardekho = pd.read_csv(\"..\/input\/vehicle-dataset-from-cardekho\/CAR DETAILS FROM CAR DEKHO.csv\")","35d7913a":"df_cardetails = pd.read_csv(\"..\/input\/vehicle-dataset-from-cardekho\/Car details v3.csv\")","9de981d6":"# Define Utiliy Functions\ndef data_insights_report(data=pd.DataFrame()):\n    report = pd.DataFrame()\n    report['Columns'] = data.columns\n    report['Data_Types'] = data.dtypes.values\n    report['Unique_Count'] = data.nunique().values\n    report['NAN_Count'] = data.isna().sum().values\n\n    tempdf = data.describe().apply(lambda x: round(x,2), axis=1).T\n    pd.merge(report,tempdf.reset_index().rename(columns={'index':'Columns'}), on='Columns')\n\n    return report.join(tempdf, on='Columns')","496925fb":"df_cardekho.head()","02c994c3":"df_cardekho.shape","6aa2333e":"duplicate = df_cardekho[df_cardekho.duplicated()] \nprint(\"Duplicate Rows :\") \nduplicate ","eb5e8ae9":"df_cardekho.drop_duplicates(inplace=True)","4c8218db":"df_cardekho.shape","014d796a":"sns.heatmap(df_cardekho.isnull())\nplt.show()","db26e8a1":"# Plotting the Pearson Correlation of Features\n\ndef correlation_heatmap(df):\n    _ , ax = plt.subplots(figsize =(6,4))\n    colormap = sns.diverging_palette(240, 20, as_cmap = True)\n    \n    _ = sns.heatmap(\n        df.corr(), \n        cmap = 'viridis',\n        square=True, \n        cbar_kws={'shrink':.8 }, \n        ax=ax,\n        annot=True, \n        linewidths=0.1,vmax=1.0, linecolor='white',\n        annot_kws={'fontsize':12 }\n    )\n    \n    plt.title('Pearson Correlation of Features', y=1.05, size=20)\n    plt.savefig('Heatmap.png')\n    \n    correlation = df.corr().unstack().sort_values(kind='quicksort')\n    print('Highly Correlated Variables')\n    return correlation[((correlation>=0.75) | (correlation<=-0.75)) & (correlation!=1)]\n\ncorrelation_heatmap(df_cardekho)","95a81478":"data_insights_report(df_cardekho)","22a359b0":"df_cardekho['year'].unique()","efb0e219":"df_cardekho['seller_type'].unique()","3f64ce0c":"sns.countplot(data=df_cardekho,x=\"fuel\")\nplt.title('Number of Cars grouped by fuel type')\nplt.ylabel('Number of Cars')\nplt.xlabel('Fuel Types')\nplt.show();","1f75d0d2":"sns.distplot(df_cardekho.selling_price, kde=False)\nplt.title('Selling price Distribution of cars')\nplt.show();","ef8704ba":"sns.boxplot(x=\"owner\", y=\"km_driven\", data=df_cardekho)","5c7d3e93":"sns.set_style('whitegrid')\nsns.countplot(x='seller_type',hue='transmission',data=df_cardekho)","696c170f":"sns.catplot(y=\"transmission\", hue=\"year\", kind=\"count\",\n            data=df_cardekho)\n","c2ff6ef9":"fig, (axis1,axis2) = plt.subplots(1, 2, figsize = (20,5))\nsns.countplot(x=\"seller_type\", data=df_cardekho, ax=axis1)\nsns.barplot(x=\"seller_type\", y=\"selling_price\",data=df_cardekho, ax=axis2 )","8e5a41b0":"fig, (axis1,axis2)=plt.subplots(1,2,figsize=(20,5))\nsns.countplot(x=\"owner\",data=df_cardekho,ax=axis1)\nsns.barplot(x=\"owner\",y=\"selling_price\",data=df_cardekho,ax=axis2)","6badb96f":"fig, (axis1,axis2)=plt.subplots(1,2,figsize=(20,5))\nsns.countplot(x=\"transmission\",data=df_cardekho,ax=axis1)\nsns.barplot(x=\"transmission\",y=\"selling_price\",data=df_cardekho,ax=axis2)","9c2554f5":"sns.scatterplot(data=df_cardekho,x=\"km_driven\",y=\"selling_price\")","ebf35485":"df_cardekho[\"Age\"] = 2020-df_cardekho[\"year\"]\ndf_cardekho.drop('year',axis=1,inplace=True)\nsns.lineplot(data=df_cardekho,x=\"Age\",y=\"selling_price\")","489e708a":"sns.barplot(data=df_cardekho,x=\"fuel\",y=\"selling_price\")","1331aaf6":"df_seller_owner = df_cardekho.groupby(by=[\"seller_type\",\"owner\",\"transmission\"])\ndf_seller_owner.count().sort_values(by=\"selling_price\", ascending=False).plot(kind=\"bar\", y=\"selling_price\")","a21d88b1":"sns.catplot(x=\"fuel\", y=\"km_driven\",\n                hue=\"owner\", col=\"transmission\",\n                data=df_cardekho, kind=\"box\",\n                height=7, aspect=.8);","1898f03e":"df_cardetails.head()","71fc0d7f":"df_cardetails.info()","38d6b7ab":"df_cardetails.isnull().sum()","2f26765b":"df_cardetails.shape","ec1f33d6":"duplicate = df_cardetails[df_cardetails.duplicated()] \nprint(\"Duplicate Rows :\") \nduplicate ","2a44aa7f":"df_cardetails.drop_duplicates(inplace=True)","d9156e5e":"df_cardetails.shape","85cacbda":"df_cardetails.drop(['torque'],axis = 1,inplace=True)","f6280bfb":"z = lambda x: float(str(x).split(' ')[0])\ndf_cardetails['mileage'] = df_cardetails['mileage'].apply(z)","669c11e7":"z = lambda x: float(str(x).split(' ')[0])\ndf_cardetails['engine'] = df_cardetails['engine'].apply(z)","6bf35549":"a= df_cardetails['max_power'].str.replace('bhp',' ')\ndf_cardetails['max_power'] = a","0e3bbfae":"z = lambda x: str(str(x).split(' ')[0])\ndf_cardetails['name'] = df_cardetails['name'].apply(z)","c6c4dd13":"df_cardetails.head()","2a9149e3":"df_cardetails.shape","ae428760":"data_insights_report(df_cardetails)","796638f9":"df_cardetails[df_cardetails['seats']==5].value_counts().sum()","1651d8ad":"most_frequent_value = df_cardetails['mileage'].mean()\ndf_cardetails['mileage'] = df_cardetails['mileage'].fillna(most_frequent_value)","0f4f73a3":"most_frequent_value = df_cardetails['engine'].mean()\ndf_cardetails['engine'] = df_cardetails['engine'].fillna(most_frequent_value)","0090dcc0":"most_frequent_value = round(df_cardetails['seats'].mean())\ndf_cardetails['seats'] = df_cardetails['seats'].fillna(most_frequent_value)","6c2c6ff8":"df_cardetails.info()","51b42fd7":"df_cardetails.drop(['max_power'],axis = 1,inplace=True)","a77e075a":"fig, (axis1,axis2) = plt.subplots(1, 2, figsize = (18,5))\nsns.countplot(x = 'seats', data = df_cardetails, ax = axis1)\nsns.lineplot(x = 'seats', y = 'selling_price', data = df_cardetails, ax = axis2);","7d6e4497":"fig, (axis1,axis2) = plt.subplots(1, 2, figsize = (18,5))\nsns.scatterplot(x = 'engine', y = 'selling_price', data = df_cardetails,ax = axis1);\nplt.title('Selling Price vs Engine Capacity');\nsns.scatterplot(x = 'mileage', y = 'selling_price', data = df_cardetails,ax = axis2);\nplt.title('Selling Price vs Mileage of car');","5ec63a46":"df_cardetails['name'].unique()","8a3d4bce":"df_cardetails['name'].value_counts()","0f2454dc":"plt.figure(figsize=(20,5))\ndf_cardetails.name.value_counts().head(100).plot.bar()\nplt.xlabel('Make')\nplt.ylabel('Count of Cars')\nplt.show()","c5eba87a":"# The total revenue generated in selling a particular Make.\nrev = pd.DataFrame(df_cardetails.groupby(['name'])['selling_price'].sum()).reset_index()\nrev.columns = ['name','selling_price']\nrev['percent'] = round(rev['selling_price']\/(rev['selling_price'].sum())*100,2)\ndisplay (rev.sort_values(['selling_price'], ascending=0))","b3533766":"### UNIVARIATE ANALYSIS ","8ec8c71b":"### Some visualizations ","9eddde38":"**Here we can see that as the ownership of the car is getting passed on, the km count is increasing.**","d31642e9":"**The top 5 manufacturers of cars being sold on CarDekho.com are Maruti Suzuki, Hyundai, Mahindra, Tata and Honda.**","f9722b42":"**Since almost 70% cars are 5-seater, so we impute the mean values of the cars whose data is available for the cars whose data is unavailable.**","7b04b3f7":"### This dataset contains information about used cars listed on www.cardekho.com\n### It has been taken from https:\/\/www.kaggle.com\/nehalbirla\/vehicle-dataset-from-cardekho?select=car+data.csv\n\n## Price prediction of the car to be sold","53382010":"**Cars which are less driven sell for a higher price**","56d9085f":"**>> We have data ranging from years 1992 to 2020**","8d438d07":"**Value wise %share of Maruti cars is about 23% of total, however volume wise it is 30%.**\n**It clearly shows that average selling price of a Maruti car is lower as compared to other brands.**","2b15418e":"**>> Diesel cars have the most selling price folowed by petrol.**","2df2c634":"### Removing the extra characters in mileage, engine, max_power and obtaining only the name of manufacturer ","d5272f22":"**>> Number of manual cars being sold is more than automatic, but automatic cars sells at a higher price**","b85b0011":"**>> Most cars to be sold are either petrol or diesel.**","edb3ab8d":"**>> We do not have any null values in our data from df_cardekho**\n\n**>> And all the data types are as per their attributes.**","de33229c":"**We have 1202 rows with the same values which won't add value as they are duplicates.**","63815608":"**>> Newer cars sell for higher prices**","f4b2bfe6":"**How the transmission type affects selling price**","968b4aee":"![cardekho.png](attachment:cardekho.png)","fb0680ba":"**A heatmap to check the null values**","9f21ece1":"### MULTIVARIATE ANALYSIS","a9c465fe":"**>> The number of respective owners and the selling price at which they are selling their graphs has a similar graph except the Test Drive Car**","da01fd2b":"**>> Here we can observe that most of the Automatic transmission cars have a Manufacturer Date after 2008-2009 as there were very few automatic cars at that time in India.**","8045687c":"## EDA on 'df_carkdekho' Dataframe","22338c57":"**>> Here we can observe that majority of the cars are sold in the price range of 2-10 Lakh.**","4faca7b8":"**Here we can see that most of the cars have 5 seats. But the maxiumum selling prices are for cars with 7 seats as most likely they are SUV's\/MUV's which are generally higher in cost.**","9d348a3f":"**>> We can see that the cars being sold by an Individual with Manual transmission is highest**","a369dc2b":"### Null Value imputations with mean","b6782741":"#### Reading the data from the csv file \n##### Note: Here we have 2 different datasets, df_cardekho is the main dataset through which we will predict the car prices. And the df_cardetails provide the in-depth details about the car being sold.","27ac1089":"**Checking for Duplicate rows.**","f4271e5b":"**>> Number of Indiviual sellers is the highest but Trustmark dealers are selling the cars for the highest price**","fd5ed0a3":"**>> Most of the cars are selling at a price less than Rs 20 lakh and the km on them are less than 3 lakh km.**\n\n**>> But we can see some outliers here where the price of the car can be as high as Rs 80lakh but cannot be driven for more than 8lakh km**","95667618":"**We created a new feature called 'Age' using the 'year' of the car and appended it to the dataframe**\n\n**We can now drop the Year column from the dataframe.**","ff6d4c81":"**Here we can see that only max_power has the Dtype as object as there is some space\/unknown character in the data.So we cannot change its data type until the data is cleaned,hence we drop this column.**","4fa31661":"### BIVARIATE ANALYSIS","34a2bd70":" **Checking how the seller type influences the selling type :**","83d2929d":"**GRAPH 1: We can see that each segment of Engiine capacities have variable pricing which can be based on the make of the car.**\n\n**GRAPH 2: A similar trend is observed for mileage in which for a car with similar mileage's the selling prices vary.**","eb6d4271":"**We have dropped the torque column as it has multiple values which need to be separated in order to make any inferences. This can be achieved using Regex.**","dc8ce8a4":"**Question : Why are there only 3 parameters on the Correlation Heatmap?**","8cced689":"**Effect of field \"owner\" to the selling price**","882f2bb6":"We have dropped the 763 duplicate rows.","de7d9e97":"# CarDekho.com Dataset ","98ee6c06":"##### The above graph gives us an insight into how \"seller_type\",\"owner\",\"transmission\" as a group influence the \"selling price\" ","0e67748e":"## EDA on 'df_cardetails' Dataframe","57ca9696":"#### Importing the necessary libraries"}}