{"cell_type":{"24d5bd8e":"code","cd5e0e53":"code","de7d8831":"code","a1d2d4f7":"code","dbaf15b4":"code","b6d5f454":"code","d611d44d":"code","8ebde44d":"code","19cedc1f":"code","1316d6a1":"code","8013cf86":"code","a3179b21":"code","aa03c105":"code","a777bd0c":"code","16eb9535":"code","d36db80d":"code","f21f55b0":"code","7484fa90":"markdown","54da30d3":"markdown","d3ef2afc":"markdown","817f578b":"markdown","e5518d11":"markdown","295e1427":"markdown","210ca6f2":"markdown","83231284":"markdown","972ada6f":"markdown","39a4f4b7":"markdown","466c8332":"markdown"},"source":{"24d5bd8e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cd5e0e53":"\u3053\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306f\u51fa\u984c\u8005\u304c\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u3053\u308c\u3092\u5143\u306b\u3057\u3066\u8003\u3048\u3066\u3082\u3089\u3063\u3066\u5927\u4e08\u592b\u3067\u3059\u3002\n\u3088\u308a\u3088\u308a\u4e88\u6e2c\u3092\u76ee\u6307\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n","de7d8831":"df=pd.read_csv(\"..\/input\/ainyuumon2021winter\/train.csv\")# Kaggle\u306ePath, \u4e0a\u306e\u30bb\u30eb\u53c2\u7167\ndf.head(15)","a1d2d4f7":"df.describe()","dbaf15b4":"df.isnull().sum()","b6d5f454":"L_onehot=[\"Education\",\"City\",\"Gender\",\"EverBenched\",\"PaymentTier\"]\nfrom sklearn.preprocessing import OneHotEncoder\n\nencoder=OneHotEncoder(sparse=False)\nencoder.fit(df[L_onehot].values)\nencoded=encoder.transform(df[L_onehot].values)\ndf[encoder.get_feature_names(L_onehot)]=encoded # get_feature_names_out should be used for current version of Scikit-learn","d611d44d":"df.head()","8ebde44d":"#L=[\"Education\",\"City\",\"Gender\",\"EverBenched\"]\n#from sklearn.preprocessing import OrdinalEncoder\n\n#encoder=OrdinalEncoder()\n#encoder.fit(df[L].values)\n#encoded=encoder.transform(df[L].values)\n#df[L]=encoded\n#df.head(10)","19cedc1f":"df[\"JoiningYear\"]=df[\"JoiningYear\"]-df[\"JoiningYear\"].min()\ndf.head()","1316d6a1":"df_y=df[\"LeaveOrNot\"]\ndf_x=df.drop(L_onehot+[\"ID\",\"Gender_Male\",\"EverBenched_No\",\"LeaveOrNot\"],axis=1)\ny=df_y.values\nx=df_x.values","8013cf86":"from sklearn.svm import SVC\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test=train_test_split(x,y)\nScaler=StandardScaler()\nScaler.fit(x_train)\nx_train_scaled=Scaler.transform(x_train)\nx_test_scaled=Scaler.transform(x_test)\n\nmodel=SVC()\nmodel.fit(x_train_scaled,y_train)\n\nprint(\"train: \",model.score(x_train_scaled,y_train))\nprint(\"test: \", model.score(x_test_scaled,y_test))","a3179b21":"testdf=pd.read_csv(\"..\/input\/ainyuumon2021winter\/test.csv\")\ntestdf.head()","aa03c105":"encoded=encoder.transform(testdf[L_onehot].values)\ntestdf[encoder.get_feature_names(L_onehot)]=encoded # get_feature_names_out should be used for current version of Scikit-learn\ntestdf[\"JoiningYear\"]=testdf[\"JoiningYear\"]-testdf[\"JoiningYear\"].min()\ntestdf_x=testdf.drop(L_onehot+[\"ID\",\"Gender_Male\",\"EverBenched_No\"],axis=1)\nxx=testdf_x.values\n\nxx_scaled=Scaler.transform(xx)","a777bd0c":"yy=model.predict(xx_scaled)","16eb9535":"Ans=pd.DataFrame(yy,index=testdf[\"ID\"],columns=[\"Pred\"])","d36db80d":"Ans.head(30)","f21f55b0":"Ans.to_csv(\"submission.csv\")","7484fa90":"\u53f3\u306e\u30d1\u30cd\u30eb\u306eCompetition\u2192Submit\u30dc\u30bf\u30f3\u3067\u3001submit\u3067\u304d\u307e\u3059\u3002","54da30d3":"# LabelEncoding\u306e\u5834\u5408\nLabel encoding \u306f\u4ee5\u4e0b\u306e\u30bb\u30eb\u306e\u901a\u308a","d3ef2afc":"# \u30e2\u30c7\u30eb\u3092\u9069\u7528\u3002\nmodel\u304c\u4e0a\u3067\u4f5c\u3063\u305f\u30e2\u30c7\u30eb\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3046\u3002","817f578b":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n\u8aad\u307f\u8fbc\u3093\u3067\u3001\u7c21\u5358\u306b\u307f\u3066\u307f\u3088\u3046\u3002","e5518d11":"# \u30e2\u30c7\u30eb\u306e\u4f5c\u6210\u3068\u5b66\u7fd2\n\u3068\u308a\u3042\u3048\u305a\u3001StandardScaler\u3067\u6a19\u6e96\u5316\u3057\u3066\u304b\u3089SVC\u306b\u3064\u3063\u3053\u3093\u3067\u307f\u305f","295e1427":"# \u305d\u306e\u4ed6\nJoiningYear\u3068ExperienceInCurrentDomain\u3092\u3069\u3046\u6271\u3046\u304b\u306f\u8003\u3048\u3069\u3053\u308d\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001JoiningYear\u3092\u6700\u5c0f\u5024\u304b\u3089\u306e\u5e74\u6570\u306b\u3057\u3066\u307f\u305f<\/br>\n\u672c\u5f53\u306f\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u305f\u308a\u3057\u3066\u3001\u30c7\u30fc\u30bf\u3092\u3088\u304f\u898b\u3066\u8003\u3048\u308b","210ca6f2":"# \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u51e6\u7406\n\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3092one-hot encoding\u306b","83231284":"# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u4e88\u6e2c\u5024\nmodel\u304c\u3067\u304d\u305f\u306e\u3067\u3001test.csv\u3078\u306e\u4e88\u6e2c\u3092\u3084\u308b","972ada6f":"# \u3053\u3053\u304b\u3089\u5f8c\u306f\u3001csv\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u3044\u308b\u3060\u3051","39a4f4b7":"# \u5909\u6570\u3092\u4f5c\u308b\nscikit-learn\u306b\u5165\u308c\u308b\u5909\u6570\u3092\u3064\u304f\u308b\n\u3053\u3053\u3067\u306fx,y\u305d\u308c\u305e\u308c\u3092DataFrame\u306b\u3057\u3066\u304b\u3089\u3001numpy\u914d\u5217\u306b\u3002","466c8332":"## train.csv\u306b\u3057\u305f\u306e\u3068\u540c\u3058\u5909\u63db\u3092\u3084\u308b\u3002\nencoder\u3084scaler\u306f\u3001train.csv\u3067\u4f5c\u3063\u305f\u306e\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3002"}}