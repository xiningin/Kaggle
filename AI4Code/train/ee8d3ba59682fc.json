{"cell_type":{"49ab2b78":"code","7c828236":"code","d88a6336":"code","bd13a828":"code","687f1482":"code","d75b5435":"code","fda7285a":"code","5a2697b1":"code","6d626bd3":"code","b841629a":"code","80d19a0f":"code","e4f40c88":"code","32f502be":"code","6cc8e12e":"code","c148f8d2":"code","67a41f5b":"code","4b1f1944":"code","502ed857":"code","91109bcc":"code","eea13bce":"code","a1ce5edf":"code","e58a0135":"code","e1c72c77":"code","b5678998":"code","116fed7f":"code","886c3bfc":"code","1ccd91fc":"code","9b3f950a":"code","4087f4a9":"code","1807dcde":"code","9dfe9c86":"code","d505c448":"code","bbc63b06":"code","e43e7cba":"code","944c832d":"code","f5ac634f":"code","86701f88":"code","d75a88ff":"code","4d5e3dc1":"code","0e7aa737":"code","214e029f":"code","7217b4e9":"code","8aaf7c3f":"code","704842d3":"code","df4a7b0c":"code","fcaa2601":"code","ce2f7b20":"markdown","4a08e4db":"markdown","752b286d":"markdown","95438bd4":"markdown","faee1552":"markdown","dcf4e95e":"markdown","ae713a5b":"markdown","c920fd2f":"markdown","829f21d5":"markdown","46740d2e":"markdown","803377b1":"markdown","9b2d18a7":"markdown"},"source":{"49ab2b78":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n","7c828236":"df  = pd.read_csv('\/kaggle\/input\/heart-failure-prediction\/heart.csv')\ndf.head()","d88a6336":"y = df.HeartDisease\ndf.drop(['HeartDisease'], axis=1, inplace=True)","bd13a828":"df.shape","687f1482":"df.dtypes","d75b5435":"df.describe()","fda7285a":"df.hist(bins=50, figsize=(20,15))","5a2697b1":"int_df = df.select_dtypes(include=['int64'])\nint_df.head()","6d626bd3":"obj_df = df.select_dtypes(include=['object'])\nobj_df.head()","b841629a":"obj_df.isnull().sum()","80d19a0f":"int_df.isnull().sum()","e4f40c88":"obj_df.nunique()","32f502be":"sns.countplot(x = 'ChestPainType' , data=df)","6cc8e12e":"sns.countplot(x = 'ST_Slope' , data=df)","c148f8d2":"sns.countplot(x = 'ExerciseAngina' , data=df)","67a41f5b":"sns.countplot(x = 'Sex', data=df)","4b1f1944":"# lambda method for if else \n","502ed857":"obj_df['Sex'] = obj_df['Sex'].apply(lambda x: 1 if x=='M' else 0)","91109bcc":"obj_df['ExerciseAngina'] = obj_df['ExerciseAngina'].apply(lambda x: 0 if x == \"N\" else 1)","eea13bce":"obj_df","a1ce5edf":"obj_df['ST_Slope'].unique()","e58a0135":"def ord_encode(x):\n    if x == \"Up\":\n        return 3\n    elif x == \"Flat\":\n        return 2\n    else:\n        return 1","e1c72c77":"obj_df['ST_Slope'] = obj_df['ST_Slope'].apply(ord_encode)","b5678998":"obj_df['RestingECG'].unique()","116fed7f":"obj_df['ChestPainType'].unique()","886c3bfc":"# one hot encoding\none_hot_encoded_data = pd.get_dummies(data = obj_df, columns = ['RestingECG', 'ChestPainType'])\none_hot_encoded_data\n\n\n","1ccd91fc":"int_df","9b3f950a":"# combine two dataframes\ndef combine_dataframes(x, y):\n    return pd.concat([x, y], axis=1)\n\ndf = combine_dataframes(int_df, one_hot_encoded_data)","4087f4a9":"df.head()","1807dcde":"df.shape","9dfe9c86":"df.hist(bins=50, figsize=(20,15))","d505c448":"# normalize the data\nfrom sklearn.preprocessing import StandardScaler\ndef normalize_data(x):\n    return StandardScaler().fit_transform(x)\ndf = normalize_data(df)","bbc63b06":"df","e43e7cba":"# train test split\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(df, y, test_size=0.25, random_state=42)","944c832d":"# apply logistic regression\nfrom sklearn.linear_model import LogisticRegression\nlogreg = LogisticRegression()\nlogreg.fit(X_train, y_train)\n","f5ac634f":"# predict the test set\ny_pred = logreg.predict(X_test)","86701f88":"# confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\ncm","d75a88ff":"# get accuracy\nfrom sklearn.metrics import accuracy_score\naccuracy_score(y_test, y_pred)\n","4d5e3dc1":"# aplply random forest\nfrom sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators=100)\nrf.fit(X_train, y_train)","0e7aa737":"# predict the test set\ny_pred = rf.predict(X_test)","214e029f":"# confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\ncm\n","7217b4e9":"# get accuracy\nfrom sklearn.metrics import accuracy_score\naccuracy_score(y_test, y_pred)","8aaf7c3f":"# apply support vector machine\nfrom sklearn.svm import SVC\nsvc = SVC()\nsvc.fit(X_train, y_train)\n","704842d3":"# predict the test set\ny_pred = svc.predict(X_test)\n","df4a7b0c":"# confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\ncm","fcaa2601":"# get accuracy\nfrom sklearn.metrics import accuracy_score\naccuracy_score(y_test, y_pred)","ce2f7b20":"# train test split","4a08e4db":"# combine the dataFs together","752b286d":"we have notice that above 2 columns dont have orders between their unique values so we will split each column into number of different columns","95438bd4":"# descripton","faee1552":"# obj_df work is done here\n","dcf4e95e":"# start the importing and analysis","ae713a5b":"# apply logistic regression","c920fd2f":"# Apply SVC algo","829f21d5":"# Normalize the data","46740d2e":"https:\/\/www.kaggle.com\/fedesoriano\/heart-failure-prediction\n\nCONTEXT ---->\n\nCardiovascular diseases (CVDs) are the number 1 cause of death globally, taking an estimated 17.9 million lives each year, which accounts for 31% of all deaths worldwide. Four out of 5CVD deaths are due to heart attacks and strokes, and one-third of these deaths occur prematurely in people under 70 years of age. Heart failure is a common event caused by CVDs and this dataset contains 11 features that can be used to predict a possible heart disease.\n\nPeople with cardiovascular disease or who are at high cardiovascular risk (due to the presence of one or more risk factors such as hypertension, diabetes, hyperlipidaemia or already established disease) need early detection and management wherein a machine learning model can be of great help.\n\n\nAttribute Information\nAge: age of the patient [years]\nSex: sex of the patient [M: Male, F: Female]\nChestPainType: chest pain type [TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic]\nRestingBP: resting blood pressure [mm Hg]\nCholesterol: serum cholesterol [mm\/dl]\nFastingBS: fasting blood sugar [1: if FastingBS > 120 mg\/dl, 0: otherwise]\nRestingECG: resting electrocardiogram results [Normal: Normal, ST: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV), LVH: showing probable or definite left ventricular hypertrophy by Estes' criteria]\nMaxHR: maximum heart rate achieved [Numeric value between 60 and 202]\nExerciseAngina: exercise-induced angina [Y: Yes, N: No]\nOldpeak: oldpeak = ST [Numeric value measured in depression]\nST_Slope: the slope of the peak exercise ST segment [Up: upsloping, Flat: flat, Down: downsloping]\nHeartDisease: output class [1: heart disease, 0: Normal]\n\n\nSOURCE ----> \n\nThis dataset was created by combining different datasets already available independently but not combined before. In this dataset, 5 heart datasets are combined over 11 common features which makes it the largest heart disease dataset available so far for research purposes. The five datasets used for its curation are:\n\nCleveland: 303 observations\nHungarian: 294 observations\nSwitzerland: 123 observations\nLong Beach VA: 200 observations\nStalog (Heart) Data Set: 270 observations\nTotal: 1190 observations\nDuplicated: 272 observations\n\nFinal dataset: 918 observations","803377b1":"Heart Disease is the result column this is classification problem","9b2d18a7":"# apply Random forest "}}