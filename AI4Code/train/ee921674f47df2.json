{"cell_type":{"badca0f1":"code","1475401e":"code","f7e52f7f":"markdown","0d02dccf":"markdown"},"source":{"badca0f1":"from IPython.display import clear_output\n!pip3 install rx\nclear_output()\n\n\nfrom rx import of, operators as op","1475401e":"print(\"start\")\n\nsource = of(\"Apple\", \"Orange\", \"PineApple\", \"Melon\", \"Strawberry\")\nsource.pipe(\n   op.delay(5)\n)\n\nsource.subscribe(lambda x: print(\"The value is {0}\".format(x)))\nprint(\"middle\")\nsource2 = of(\"1\", \"2\", \"3\", \"4\", \"5\")\nsource2.subscribe(lambda value: print(\"Received {0}\".format(value)))\n\nprint(\"end\")","f7e52f7f":"# delay","0d02dccf":"### This operator will delay the source observable emission as per the time or date given."}}