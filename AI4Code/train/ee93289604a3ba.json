{"cell_type":{"3cade29b":"code","b5bc85a7":"code","38fba555":"code","3b15c2d5":"code","5e0bd734":"code","9125b74a":"code","32f0743f":"code","f1757cbe":"code","fb8b233e":"code","b9bc1826":"code","f6f7ffdd":"code","19456f74":"code","d57922b6":"code","c2283cc7":"code","c24388e7":"code","7dfc2fd2":"code","75815886":"code","c754670c":"code","50f720fb":"code","01ddb15f":"code","693d2772":"code","a408780e":"code","f1fb922d":"code","0c29617c":"code","26884b0d":"code","6321f19a":"code","695c27bb":"code","00d2bd29":"markdown","ddc6e1ee":"markdown"},"source":{"3cade29b":"pip install dexplot","b5bc85a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","38fba555":"!pip install chart_studio\nimport plotly.express as px\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\n\n\n\nimport dexplot as dxp","3b15c2d5":"df = pd.read_excel('\/kaggle\/input\/population-growth-of-top-25-countries\/World Population.xlsx')\ndf.head()","5e0bd734":"# checking dataset\n\nprint (\"Rows     : \" ,df.shape[0])\nprint (\"Columns  : \" ,df.shape[1])\nprint (\"\\nFeatures : \\n\" ,df.columns.tolist())\nprint (\"\\nMissing values :  \", df.isnull().sum().values.sum())\nprint (\"\\nUnique values :  \\n\",df.nunique())","9125b74a":"dxp.count('Migrants (net)',df, figsize=(4,3), orientation='h')","32f0743f":"dxp.count('Urban Population',df, figsize=(4,3),orientation='h')","f1757cbe":"dxp.count('Population',df, figsize=(12,8), split='Year', orientation='h')","fb8b233e":"dxp.count('Migrants (net)',df, figsize=(12,8), split='Median Age', orientation='h')","b9bc1826":"dxp.count('Urban Population',df, figsize=(12,8), split='Fertility Rate', orientation='h')","f6f7ffdd":"dxp.count('Migrants (net)',df, split='Fertility Rate',normalize=True,figsize=(8,6),size=0.9,stacked=True)","19456f74":"dxp.count('Migrants (net)',df, split='Yearly\\nChange',normalize=True,figsize=(8,6),size=0.9,stacked=True)","d57922b6":"dxp.bar(x='Urban Population', y='Density (P\/Km\u00b2)', data=df, aggfunc='median')\n","c2283cc7":"dxp.line(x='Fertility Rate', y='Density (P\/Km\u00b2)', data=df, aggfunc='median')","c24388e7":"dxp.scatter(x='World Population', y='Migrants (net)', data=df, aggfunc='median')","7dfc2fd2":"dxp.bar(x='Year', y='World Population', data=df, aggfunc='countna')","75815886":"dxp.bar(x='Yearly\\nChange', y='Migrants (net)', data=df, aggfunc='median', \n        orientation='h', sort_values='desc')","c754670c":"dxp.line(x='Urban Population', y='Density (P\/Km\u00b2)', data=df, aggfunc='median', orientation='h')","50f720fb":"dxp.bar(x='Year', y='Population', data=df, aggfunc='median', split='Median Age')","01ddb15f":"dxp.bar(x='Migrants (net)', y='Median Age', data=df, aggfunc='median',\n        split='Fertility Rate', split_order='desc')","693d2772":"dxp.box(x='Year', y='Urban\\nPop %', data=df)","a408780e":"dxp.box(x='Year', y='Urban\\nPop %', data=df, \n        split='Yearly %\\nChange', split_order='desc')","f1fb922d":"dxp.box(x='Year', y='Migrants (net)', data=df, orientation='v',\n        split='\\nGlobal Rank', split_order='top 2')","0c29617c":"dxp.hist(val='Migrants (net)', data=df)","26884b0d":"dxp.hist(val='Population', data=df, orientation='h', split='\\nGlobal Rank', bins=15)","6321f19a":"dxp.kde(x='Year', y='Urban Population', data=df)","695c27bb":"dxp.line(data=df.head(10))","00d2bd29":"Das War's, Kaggle Notebook Runner: Mar\u00edlia Prata @mpwolke ","ddc6e1ee":"#Dexplot didnt accept  xticks to avoid the messy appearance above. "}}