{"cell_type":{"98b28d8c":"code","7ad35aab":"code","910b7724":"code","7852a7e0":"code","5fe6b9d9":"code","30e008d0":"markdown","b046995b":"markdown","d071aebb":"markdown","e03fd93f":"markdown"},"source":{"98b28d8c":"!pip install --upgrade mxnet\n!pip install autogluon==0.3.1","7ad35aab":"import pandas as pd\nfrom autogluon.tabular import TabularDataset, TabularPredictor\nfrom sklearn.metrics import mean_absolute_error\n\n\ntrain= TabularDataset('..\/input\/home-data-for-ml-course\/train.csv')\ntest_data = TabularDataset('..\/input\/home-data-for-ml-course\/test.csv')\n\ntrain_data = train.head(int(train.shape[0] * 0.8))\nvalid_data = train.tail(int(train.shape[0] * 0.2))","910b7724":"save_path = 'ag_models\/'  # where to save trained models\nlabel = 'SalePrice'\ntime_limit = 60*60*1\npredictor = TabularPredictor(label=label, problem_type = 'regression',eval_metric = 'mean_absolute_error', path = save_path)\npredictor.fit(train_data, time_limit=time_limit, auto_stack = True)\nresults = predictor.fit_summary(show_plot=True)\ny_pred_valid = predictor.predict(valid_data)\nperf = predictor.evaluate_predictions(y_true=valid_data[label], y_pred=y_pred_valid, auxiliary_metrics=True)\nprint('Perf ', perf)\nprint ('MAE ', mean_absolute_error(y_pred_valid, valid_data[label]))","7852a7e0":"predictor = TabularPredictor.load(save_path)  # Unnecessary, we reload predictor just to demonstrate how to load previously-trained predictor from file\ny_pred = predictor.predict(test_data)\nsubmission = pd.read_csv('..\/input\/home-data-for-ml-course\/sample_submission.csv')\nsubmission[label] = predictor.predict(test_data)\nsubmission.to_csv('submission.csv', index=False)\nsubmission.head()","5fe6b9d9":"predictor.feature_importance(valid_data)","30e008d0":"# 2. Prepare data","b046995b":"# 1. Install autogulon","d071aebb":"# 4. Predict and submit results","e03fd93f":"# 3. Train using fit()"}}