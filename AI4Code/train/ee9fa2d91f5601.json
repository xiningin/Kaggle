{"cell_type":{"678deeb5":"code","5f6c2699":"code","80b32e2b":"code","d1a13351":"code","b393c2c1":"code","c30df2f3":"code","18e15221":"code","7d9deb16":"code","4bd1c930":"code","18a8f315":"code","9ea9c85e":"code","6f38a550":"code","c66fb110":"code","2acb7540":"code","491065bf":"code","82e315fd":"code","f760f1b6":"markdown","6b5252fd":"markdown","3b9f44df":"markdown","e7395b96":"markdown","2b58e0d8":"markdown","94e7a029":"markdown","eb70bb7f":"markdown","268ff151":"markdown","239aad9d":"markdown","752f92c6":"markdown","bcde8d7f":"markdown","6b3dbf0e":"markdown","4dde6ddb":"markdown","7ac72636":"markdown","f19152d6":"markdown","86177547":"markdown","ce316667":"markdown","9f59f753":"markdown"},"source":{"678deeb5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom datetime import datetime\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport plotly.express as px\nimport plotly.figure_factory as ff\nfrom wordcloud import WordCloud, ImageColorGenerator\nimport plotly.graph_objects as go\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5f6c2699":"data = pd.read_csv('\/kaggle\/input\/us-police-shootings\/shootings.csv')\n\nstate_population= pd.read_csv(\"\/kaggle\/input\/us-population-by-state-2019\/US_State_Population.csv\", usecols=['State Code','July 2019 Estimate'])","80b32e2b":"data.info()","d1a13351":"data.sample(10)","b393c2c1":"data['manner_of_death'].unique()","c30df2f3":"print(f\"Unique values provided in ARMED field:\\n\\n {data['armed'].unique()}\\n\\n\")\nprint(f\"Unique values provided in ARMS CATEGORY field:\\n\\n {data['arms_category'].unique()}\\n\\n\")\nprint(f\"Unique values provided in THREAT LEVEL field:\\n\\n {data['threat_level'].unique()}\\n\\n\")\nprint(f\"Unique values provided in MANNER OF DEATH field:\\n\\n {data['manner_of_death'].unique()}\\n\\n\")","18e15221":"data['date'] = data['date'].apply(lambda x: datetime.strptime(x, '%Y-%m-%d')) # convert the string to datetime\ndata['count'] = 1 # this helps with grouping incidents and provides total instance count\n\ndata['armed'] = data['armed'].str.replace(\" \",\"_\") # I want to keep the words that are in the same field together in the word cloud e.g: box cutter -> box_cutter\ndata['armed'] = data['armed'].str.replace(\"_and_\",\" \") # Unless those words represent multiple arms e.g.: gun_and_knife","7d9deb16":"armed_text = \" \".join(text for text in data['armed'])\nwordcloud = WordCloud(background_color=\"white\").generate(armed_text)\nplt.figure(figsize=[10,10])\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.title(\"VICTIMS WERE ARMED WITH:\")\nplt.show()","4bd1c930":"fig = px.histogram(data, x=\"date\", y=\"count\", color=\"gender\", marginal=\"rug\", template='ggplot2', title='US Police Shootings Timeline')\nfig.update_layout(yaxis=dict(title_text=\"Count Of Shooting\"),xaxis=dict(title_text='Date of Occurance'))\nfig.show()","18a8f315":"fig = px.pie(data, values='count', names='race', title='Demographics of Victims')\n\nfig.show()","9ea9c85e":"fig = px.histogram(data, x=\"state\", y=\"count\", color=\"gender\", title=\"Shootings By State\").update_xaxes(categoryorder=\"total descending\")\nfig.update_layout(yaxis=dict(title_text=\"Count Of Shooting\"),xaxis=dict(title_text='State of Incident'))\nfig.update_layout(barmode='group')\nfig.show()","6f38a550":"shooting_per_state = pd.DataFrame(data.groupby(by='state').sum()['count']).rename(columns={\"count\":\"Total Shootings\"})\n\nshooting_per_state = shooting_per_state.merge(state_population, left_on='state', right_on='State Code').rename(columns={\"July 2019 Estimate\":\"Population\"})\n\nshooting_per_state['Shooting Per Capita'] = shooting_per_state['Total Shootings']\/shooting_per_state['Population']*100000","c66fb110":"fig = go.Figure(data=go.Choropleth(\n    locations=shooting_per_state['State Code'], # Spatial coordinates\n    z = shooting_per_state['Shooting Per Capita'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Reds',\n))\n\nfig.update_layout(\n    title_text = 'US Police Shootings by State per Capita (100.000)',\n    geo_scope='usa', # limit map scope to USA\n)\n\nfig.show()","2acb7540":"f, ax = plt.subplots(figsize=(15, 10))\nsns.set_style(\"dark\")\nsns.countplot(x=\"threat_level\", hue=\"body_camera\",palette=\"pastel\", edgecolor=\"0.5\", data=data);\nax.set(xlabel='Threat Level',ylabel='Shooting Count')","491065bf":"f, ax = plt.subplots(figsize=(15, 10))\nsns.set_style(\"dark\")\nsns.countplot(x=\"signs_of_mental_illness\", hue=\"race\",palette=\"pastel\", edgecolor=\"0.5\", data=data);\nax.set(xlabel='Signs of Mentall Illness',ylabel='Shooting Count')","82e315fd":"f, ax = plt.subplots( figsize=(20, 10))\nsns.swarmplot(x=\"race\", y=\"age\", data=data, ax=ax)\nax.set(xlabel='Race of Victim',ylabel='Age of Victim')","f760f1b6":"The numbers look even more interesting to me now. Although California and Texas lead when it comes to total number of shootings, they don't seem on the extreme ends of the spectrum when it comes to shootings per capita. On the other hand, Alaska, New Mexico and Oklahoma don't look so good regarding per capita shooting numbers.","6b5252fd":"Creating a word cloud to better see the type of arms victims were equipped with...","3b9f44df":"**ABOUT THE SOURCE DATA:**\n\nThe data contains basic info about police shooting victims like their name, age, gender and race. Along with it, is the shooting\/killing information, like date of event, where it happened? how they were shot? did they attack? Were they holding weapons? Did they show any mental illness? Was the policeman wearing a camera\/was the incident recorded? Did the suspect flee? Apart from that, a category column holds type of weapon used by the suspect","e7395b96":"What are the values provided under manner of death column ?","2b58e0d8":"Not so surprisingly, a large number of victims were armed with guns and knives. \nThere are also surprising things like ax, hammer, hatchet, screwdriver... ","94e7a029":"Were the victims armed ? What type of arms were there ?\nWhat does the arms category field tell us ?\nLet's take a closer look at some of the descriptive fields.","eb70bb7f":"A general overview of the dataset.\n\nPandas **info** function answers the following for me:\n* How many columns are there ?\n* Are there any missing data ? If so, under which columns ?\n* What are the data types provided in the dataframe ?\n* What's the number of total entries ?","268ff151":"I want to look at the total number of shootings month by month to see if there is a month\/season where incidents peak. ","239aad9d":"Majority of the shootings took place when the police body camera was off. This makes me curious, whether the policemen purposefully turn off the camera when they sense something will go seriously wrong or that they are about to lose their temper\/control. ","752f92c6":"Firstly, let us load the data","bcde8d7f":"Looking at the graph, although there are fluctuations between different periods, there doesn't seem to be any seasonality. ","6b3dbf0e":"Adding state population numbers and calculating shootings per capita.","4dde6ddb":"# Police Shootings in the US (Jan 2015 - Jun 2020)\n\nLoading the necessary libraries and listing the input data:","7ac72636":"Majority of the victims did not seem to show any sign of mental illness. <br>\nFinally, let's look at the age distribution of the victims for each race group.","f19152d6":"A small pre-processing step to help with the visualizations...","86177547":"Let's look at the geographical distribution of incidents. As one would expect, populated states such as California, Texas and Florida have higher number of incidents. Surprisingly, though, there are highly populated states with relatively low number of incidens, such as New York and Illinois. <br\/> This makes me even more interested about the geography of shootings. ","ce316667":"There doesn't seem to be any missing data. This is great news!\n\nAnother look at the data provided. \nThis time looking at a subset of sample records to see the values provided under each column.","9f59f753":"Looking at victims race distribution, the majority of the victims seem to be caucasians. "}}