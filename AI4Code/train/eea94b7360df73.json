{"cell_type":{"42f38455":"code","85563344":"code","45f3ae2e":"code","71395714":"code","0b87dba0":"code","7c6cafca":"code","4169f65c":"code","36ef9e58":"code","db791046":"code","fb9ffd76":"markdown","c44f1968":"markdown","cb3cf7ec":"markdown","3d61f8ed":"markdown","d337597a":"markdown","be153a32":"markdown"},"source":{"42f38455":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","85563344":"import tensorflow as tf\nimport matplotlib.pyplot as plt\n%matplotlib inline\ntf.__version__","45f3ae2e":"mnist=tf.keras.datasets.mnist   #28*28 handwritten digit 0-9 data\n(X_train, y_train), (X_test, y_test)=mnist.load_data()\nX_train=tf.keras.utils.normalize(X_train, axis=1)\nX_test=tf.keras.utils.normalize(X_test, axis=1)","71395714":"print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","0b87dba0":"model=tf.keras.models.Sequential()\nmodel.add(tf.keras.layers.Flatten())\nmodel.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))\nmodel.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))\nmodel.add(tf.keras.layers.Dense(10, activation=tf.nn.softmax))\n\nmodel.compile(optimizer='adam',\n             loss='sparse_categorical_crossentropy',\n             metrics=['accuracy'])\n\nmodel.fit(X_train, y_train, epochs=10)","7c6cafca":"val_loss, val_acc=model.evaluate(X_test, y_test)\nprint(val_loss, val_acc)","4169f65c":"model.save('mymodel_digit_recognizer')\nnew_model=tf.keras.models.load_model('mymodel_digit_recognizer')\npredictions=new_model.predict(X_test)","36ef9e58":"print(np.argmax(predictions[10]))","db791046":"plt.imshow(X_test[10])\nplt.show","fb9ffd76":"**Loading Data**","c44f1968":"**Checking with the models output**","cb3cf7ec":"**This notebook used very basic neural network to build a digit recognizer and used famous MNIST dataset. There is also a advanced version of this notebook in which I have used convolutional neural network. To visit please click the link below**\n[https:\/\/www.kaggle.com\/mdmahmudferdous\/digit-recognizer-0-985-score](https:\/\/www.kaggle.com\/mdmahmudferdous\/digit-recognizer-0-985-score)","3d61f8ed":"# Digit Recognizer using Basic Neural Network","d337597a":"**This is a very good model indeed...Please upvote if you like this or find this notebook useful, thanks.**","be153a32":"**Building the model**"}}