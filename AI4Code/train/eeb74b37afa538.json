{"cell_type":{"00700490":"code","f3a32bbe":"code","0dca7110":"markdown"},"source":{"00700490":"\"\"\"\nReferenced Refer https:\/\/www.kaggle.com\/xhlulu\/vinbigdata-process-and-resize-original-ratio\n\"\"\"\nimport os\nfrom pathlib import Path\n\nimport numpy as np\nimport pandas as pd\nimport pydicom\nfrom joblib import Parallel, delayed\nfrom PIL import Image\nfrom pydicom.pixel_data_handlers.util import apply_voi_lut\n\n\ndef read_xray(path, voi_lut=True, fix_monochrome=True):\n    # Original from: https:\/\/www.kaggle.com\/raddar\/convert-dicom-to-np-array-the-correct-way\n    dicom = pydicom.read_file(path)\n\n    # VOI LUT (if available by DICOM device) is used to transform raw DICOM data to\n    # \"human-friendly\" view\n    if voi_lut:\n        data = apply_voi_lut(dicom.pixel_array, dicom)\n    else:\n        data = dicom.pixel_array\n\n    # depending on this value, X-ray may look inverted - fix that:\n    if fix_monochrome and dicom.PhotometricInterpretation == \"MONOCHROME1\":\n        data = np.amax(data) - data\n\n    data = data - np.min(data)\n    data = data \/ np.max(data)\n    data = (data * 255).astype(np.uint8)\n\n    return data\n\n\ndef save_image_and_load_meta(load_dir: str, save_dir: str, file: str):\n    # False for fast processing...\n    xray = read_xray(load_dir + file, True, True)\n    im = Image.fromarray(xray)\n    # im = resize(xray, size=512, keep_ratio=True)\n    image_id = file.replace(\".dicom\", \"\")\n    im.save(save_dir + image_id + \".png\")\n    height, width = xray.shape[:2]\n    return image_id, height, width\n","f3a32bbe":"print(\"read_xray True True\")\ndata_dir = Path(f\".\")\nfor split in [\"test\", \"train\"]:\n    print(f\"Starting {split} preprocessing...\")\n    load_dir = f\"\/kaggle\/input\/vinbigdata-chest-xray-abnormalities-detection\/{split}\/\"\n    save_dir = str(data_dir \/ split) + \"\/\"\n\n    os.makedirs(save_dir, exist_ok=True)\n    file_list = os.listdir(load_dir)\n    file_list.sort()\n    print(\"file_list\", len(file_list), file_list[:3])\n\n    n_jobs = 16\n    results = Parallel(n_jobs, verbose=1)(\n        delayed(save_image_and_load_meta)(load_dir, save_dir, filename) for filename in file_list)\n\n    meta_df_filepath = str(data_dir \/ f\"{split}_meta.csv\")\n    meta_df = pd.DataFrame(results, columns=[\"image_id\", \"dim0\", \"dim1\"])\n    meta_df.to_csv(meta_df_filepath, index=False)\n    print(f\"Saved to {meta_df_filepath}\")\n","0dca7110":"# Preprocessing image with original size, lossless png format\n\n\nRefered https:\/\/www.kaggle.com\/xhlulu\/vinbigdata-process-and-resize-original-ratio\n\nBy using the output of this notebook, you are accepting the [competition rules](https:\/\/www.kaggle.com\/c\/vinbigdata-chest-xray-abnormalities-detection\/rules)."}}