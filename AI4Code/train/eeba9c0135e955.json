{"cell_type":{"e6e843dc":"code","3926baa6":"code","ab2cc766":"code","7c34370d":"code","cc5bff7e":"code","454216fe":"code","e5574188":"code","2da212f3":"code","4cfba737":"code","46be838b":"code","e3bd0c8f":"code","bd3029eb":"code","8444888f":"code","e89b39aa":"code","3460993c":"code","7d929b8c":"code","ea890718":"code","850da850":"code","c2d3d261":"code","45e58239":"code","4924245c":"code","60892e08":"code","2f97c86d":"markdown","8fe445c1":"markdown","68a49251":"markdown","c5a7da33":"markdown","0107f3f2":"markdown","8c86cd92":"markdown"},"source":{"e6e843dc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3926baa6":"data = pd.read_csv('\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv', sep=',') # because our csv file has seperator ';' instead of ','\ndata.head()","ab2cc766":"print(data.keys())","7c34370d":"data.shape","cc5bff7e":"print(data.isna().sum())","454216fe":"data['quality'].unique()","e5574188":"data.quality.value_counts().sort_index()","2da212f3":"sns.countplot(x='quality', data=data)\nplt.show()","4cfba737":"conditions = [ (data['quality'] >= 7),\n              (data['quality'] <= 4)  ]\n\nrating = ['superior', 'inferior']\ndata['rating'] = np.select(conditions, rating, default='fine')\ndata.rating.value_counts()","46be838b":"data.groupby('rating').mean()","e3bd0c8f":"correlations = data.corr()['quality'].drop('quality')\nprint(correlations)","bd3029eb":"plt.figure(figsize=(14,8))\nsns.heatmap(data.corr(), annot=True, linewidths=0)\nplt.show()","8444888f":"plt.figure()\nAlcohol = sns.boxplot(x='quality', y='alcohol', data=data)\n\nAlcohol.set(xlabel=\"Quality Dataset\", ylabel=\"Alcohol Percent\", \n            title=\"Percentage of Alcohol in different quality types\")","e89b39aa":"plt.figure()\nSulphates = sns.boxplot(x='rating', y='sulphates', data=data)\n\nSulphates.set(xlabel='Rating Dataset', ylabel='Sulphates', title='Sulphates in different types of dataset ratings')","3460993c":"sns.lmplot(x='alcohol', y='residual sugar', col='rating', data=data)","7d929b8c":"dataset = pd.read_csv('\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv', sep=',')\ndataset.keys()","ea890718":"from sklearn.preprocessing import StandardScaler\n\nX1 = dataset.drop(['quality'], axis=1)\nX = StandardScaler().fit_transform(X1)\n\ny = dataset['quality']","850da850":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, \n                                                    random_state=0)","c2d3d261":"from sklearn.metrics import classification_report\nfrom sklearn.tree import DecisionTreeClassifier\n\nmodel_one = DecisionTreeClassifier(random_state=1)\nmodel_one.fit(X_train, y_train)","45e58239":"y_pred_one = model_one.predict(X_test)\n\nprint(classification_report(y_test, y_pred_one))","4924245c":"from sklearn.ensemble import RandomForestClassifier\n\nmodel_two = RandomForestClassifier(random_state=1)\nmodel_two.fit(X_train, y_train)\n\ny_pred_two = model_two.predict(X_test)\n\nprint(classification_report(y_test, y_pred_two))","60892e08":"plt.figure()\nfeat_importances = pd.Series(model_two.feature_importances_, index=X1.columns)\nfeat_importances.nlargest(25).plot(kind='barh', figsize=(5,5))","2f97c86d":"## Sulphates vs Rating Dataset","8fe445c1":"## Alcohol Percent vs Wine Quality","68a49251":"# Decision Tree","c5a7da33":"# Random Forest","0107f3f2":"# Feature Importance - via Random Forest ","8c86cd92":"# Preparing Data for Modelling"}}