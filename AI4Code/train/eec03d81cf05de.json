{"cell_type":{"726218bc":"code","bc7178fa":"code","22ed9842":"code","0efd236e":"code","d56e3e91":"code","fa3bf50f":"code","750f0961":"code","81231242":"code","b46d7669":"code","9b31da0b":"code","ac4262ad":"code","f7e62ccf":"code","b5445642":"code","a8db0ddd":"code","8ef33ee7":"code","c28e2e60":"code","ff4c4c2b":"code","879ce87b":"markdown"},"source":{"726218bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bc7178fa":"train_data=pd.read_csv('\/kaggle\/input\/mobile-price-range-prediction-is2020\/train_data.csv')\ntest_data=pd.read_csv('\/kaggle\/input\/mobile-price-range-prediction-is2020\/test_data.csv')\nsample_submission=pd.read_csv('\/kaggle\/input\/mobile-price-range-prediction-is2020\/sample_submission.csv')","22ed9842":"train_data.head()","0efd236e":"test_data.head()","d56e3e91":"sample_submission.head()","fa3bf50f":"X_train=train_data.drop(columns=['price_range','id'])\nY_train=train_data['price_range']\ntest_data=test_data.drop(columns=['id'])","750f0961":"#LOGISTIC REGRESSION\nfrom sklearn.linear_model import LogisticRegression\nlr=LogisticRegression(C=100,random_state=0)\nlr=lr.fit(X_train,Y_train)\ny_pred=lr.predict(test_data)","81231242":"from sklearn.model_selection import cross_val_score\nscores=cross_val_score(LogisticRegression(),X_train,Y_train,cv=5)\nprint(scores)\nprint(scores.mean())","b46d7669":"data={'id':sample_submission['id'],'price_range':y_pred}\nresult=pd.DataFrame(data)\nresult.to_csv('\/kaggle\/working\/result_svm.csv',index=False)\noutput=pd.read_csv('\/kaggle\/working\/result_svm.csv')","9b31da0b":"#RANDOM FOREST CLASSIFIER\nfrom sklearn.ensemble import RandomForestClassifier\nforest=RandomForestClassifier(criterion='gini',n_estimators=25,random_state=0).fit(X_train,Y_train)\ny_pred=forest.predict(test_data)","ac4262ad":"from sklearn.model_selection import cross_val_score\nscores=cross_val_score(RandomForestClassifier(),X_train,Y_train,cv=5)\nprint(scores)\nprint(scores.mean())","f7e62ccf":"\n#SVM\nfrom sklearn.svm import SVC\nsvm=SVC(C=1.0,kernel='linear',random_state=0)\nsvm=svm.fit(X_train,Y_train)\n#y_pred=svm.predict(test_data)\ny_pred=svm.predict(test_data)\nprint(svm.score(X_train,Y_train))\n","b5445642":"from sklearn.model_selection import cross_val_score\nscores=cross_val_score(SVC(),X_train,Y_train,cv=5)\nprint(scores)\nprint(scores.mean())","a8db0ddd":"#DECISION TREE\nfrom sklearn.tree import DecisionTreeClassifier\ntree=DecisionTreeClassifier(criterion='gini',max_depth=4,random_state=0)\ntree=tree.fit(X_train,Y_train)\ny_pred=tree.predict(test_data)","8ef33ee7":"from sklearn.model_selection import cross_val_score\nscores=cross_val_score(DecisionTreeClassifier(),X_train,Y_train,cv=5)\nprint(scores)\nprint(scores.mean())","c28e2e60":"#NAIVE BAYES\nfrom sklearn.naive_bayes import GaussianNB\nnb=GaussianNB()\nnb=nb.fit(X_train,Y_train)\ny_pred=nb.predict(test_data)","ff4c4c2b":"from sklearn.model_selection import cross_val_score\nscores=cross_val_score(GaussianNB(),X_train,Y_train,cv=5)\nprint(scores)\nprint(scores.mean())","879ce87b":"## load dataset"}}