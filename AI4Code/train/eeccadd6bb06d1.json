{"cell_type":{"92553bac":"code","7a389292":"code","6eb2c7b6":"code","cdba4152":"code","bbe8ef12":"code","f2c5f419":"code","3f361b4e":"code","dbf92807":"code","df37cdf5":"code","d4fe4312":"code","4cd6e248":"code","aeb3c719":"code","633a61b7":"code","229c044b":"code","782cf6c0":"code","fd2bedb8":"code","32f9ce0c":"code","0f02743c":"code","3395f924":"code","50e4d0d4":"code","c701d264":"code","34e54b3d":"code","c3a21ae3":"code","d58f078f":"code","baae2aeb":"code","0ccc2d1e":"code","03b40e4a":"code","9dafcc24":"code","9c948924":"code","a4d2b4f3":"code","e93e75f0":"code","27067947":"code","6d292c95":"code","31c54fa1":"markdown","4c31b6b9":"markdown","754d9272":"markdown","578071ad":"markdown","275a1038":"markdown","b021d947":"markdown","e8fdd1f1":"markdown","2f690d3e":"markdown","0b336774":"markdown"},"source":{"92553bac":"#importing altair library \n\nimport altair as alt\n\n\n#other libraries\n\nimport numpy as np\nimport pandas as pd \n\nimport os\n\nimport random\nimport warnings\nwarnings.simplefilter('ignore')","7a389292":"a = [i for i in range(1,16)]\nb = np.random.randint(100,size=(1,15))\nb = b.flatten()\n\n\n\nsample1 = pd.DataFrame(list(zip(a,b)) , columns =['x','y'])\nsample1","6eb2c7b6":"#bar chart visualization\n\n\nalt.Chart(sample1).mark_bar().encode(x ='x', y='y')\n","cdba4152":"#simple line chart\n\nalt.Chart(sample1).mark_line().encode(x ='x', y='y')","bbe8ef12":"#making the line chart interactive\n\n\nalt.Chart(sample1).mark_line().encode(x ='x', y='y', tooltip=['x','y']).interactive()","f2c5f419":"#scatter plot\n\n\nalt.Chart(sample1).mark_circle(size = 60).encode(x ='x', y='y')","3f361b4e":"#scatter plot with a hue\n\nalt.Chart(sample1).mark_circle(size = 60).encode(x ='x', y='y' , color='y')","dbf92807":"#let us add some more attributes to sample1\n\nrand_list = ['yes','no','maybe']\nli =[]\n\nfor i in range(len(sample1)):\n    \n    random_choice = random.choice(rand_list)\n    li.append(random_choice)\n\nsample1['value'] = li\nsample1","df37cdf5":"#area chart\n\n\nalt.Chart(sample1).mark_area().encode(x='x',y ='y',color='value')\n","d4fe4312":"#bar chart with highlighting condition\n\nbars =alt.Chart(sample1).mark_bar().encode(x ='x', y='y', color = alt.condition(alt.datum.value =='yes',alt.value('red'),alt.value('steelblue')))\nbars","4cd6e248":"#let us try to label the chart\n\n\ntxt = bars.mark_text(align ='left', baseline ='middle', dx =3).encode(text='value')\n\n(bars + txt).properties(width=600)","aeb3c719":"\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","633a61b7":"df = pd.read_csv('\/kaggle\/input\/hr-analytics-job-shift\/HR analytics.csv')\ndf","229c044b":"df.info()","782cf6c0":"df.isnull().sum()","fd2bedb8":"df.gender.fillna(method ='ffill',inplace = True)\ndf.education_level.fillna(method ='bfill', inplace = True)","32f9ce0c":"df.isnull().sum()","0f02743c":"df.rename(columns ={'Job changes' : 'job_changes', 'Has HR expereince': 'hr_exp', 'University Grade':'univ_grade'},inplace = True)\ndf","3395f924":"df.experience.unique()","50e4d0d4":"df.experience.replace({'<1':1,'>20':20},inplace = True)\ndf.experience.unique()","c701d264":"df.experience.fillna(0,inplace = True)","34e54b3d":"df.experience.unique()","c3a21ae3":"sub_df = df[['city','gender','univ_grade','education_level','hr_exp','experience']]\nsub_df","d58f078f":"sub_df.isnull().sum()","baae2aeb":"sub_df.describe()","0ccc2d1e":"sub_df.experience.value_counts()","03b40e4a":"sub_df.experience = sub_df.experience.astype(int)","9dafcc24":"sub_df.info()","9c948924":"bars = alt.Chart(sub_df).mark_bar().encode(\n    x='mean(experience)',\n    y=\"city\"\n)\n\n\n\nbars","a4d2b4f3":"alt.Chart(sub_df).mark_bar().encode(x ='hr_exp', y='count(hr_exp)', column='univ_grade', color='hr_exp')","e93e75f0":"alt.Chart(sub_df).mark_bar().encode(alt.X('experience', bin = True),y='count()')","27067947":"alt.Chart(sub_df).mark_circle(size=60).encode(\n    x='education_level',\n    y='experience',\n    color='gender',\n    tooltip=['city','gender']\n).interactive().properties(width=500)","6d292c95":"pink_blue = alt.Scale(domain=('Male', 'Female', 'Other'),\n                      range=[\"steelblue\", \"salmon\", 'red'])\n\nslider = alt.binding_range(min=0, max=20, step=2)\nselect_exp = alt.selection_single(name=\"experience\", fields=['experience'],\n                                   bind=slider, init={'experience': 20})\n\nalt.Chart(sub_df).mark_bar().encode(\n    x='gender',\n    y='count(experience)',\n    color=alt.Color('gender', scale=pink_blue),\n    column='education_level'\n).properties(\n    width=150\n).add_selection(\n    select_exp\n).transform_filter(\n    select_exp\n).configure_facet(\n    spacing=8\n)","31c54fa1":"# Subset the dataset for our convenience","4c31b6b9":"# Bar chart visualizaion","754d9272":"# Before visualizing the dataset. Let us see some basic visualization using Altair lib","578071ad":"# Charts with slider","275a1038":"# Interactive visualization","b021d947":"# Histogram","e8fdd1f1":"# Altair python library\n\nAltair is a declarative statistical visualization library for Python. With Altair, you can spend more time understanding your data and its meaning. \n\n\nIn this notebook we will use some interactive visualizations to map the data\n\nUpvote if you find this useful :)\n\n![image.png](attachment:ddfa4267-783b-4a92-9983-9376d3084727.png)","2f690d3e":"# Now let us prepare the data with pandas library. This will help us to visualize in a better way","0b336774":"For the next chart try zooming in and out and toggle over the graph"}}