{"cell_type":{"208cf44f":"code","91554142":"code","f67673cb":"code","d2aa4fbc":"code","6144ce7f":"code","4873d658":"code","bbdfb969":"code","85828fe9":"code","c08604aa":"code","ca382b44":"code","e446f8db":"code","8330999a":"markdown"},"source":{"208cf44f":"from keras import models\nfrom keras import layers\nimport matplotlib.pyplot as plt","91554142":"from keras.datasets import boston_housing\n\n(train_data, train_targets), (test_data, test_targets) =  boston_housing.load_data()","f67673cb":"mean = train_data.mean(axis=0)\ntrain_data -= mean\nstd = train_data.std(axis=0)\ntrain_data \/= std\n\ntest_data -= mean\ntest_data \/= std","d2aa4fbc":"model = models.Sequential()\nmodel.add(layers.Dense(64, activation='relu',\n                        input_shape=(train_data.shape[1],)))\nmodel.add(layers.Dense(64, activation='relu'))\nmodel.add(layers.Dense(1))\nmodel.compile(optimizer='rmsprop', loss='mse', metrics=['mae'])","6144ce7f":"# track histories across training sessions\nhistories = []\nhistories.append(\n    model.fit(train_data, train_targets,\n              batch_size=2, epochs=20, verbose=0))","4873d658":"def plot_histories(histories):\n    plt.clf()\n    mae = []\n    for history in histories:\n        for error in history.history['mean_absolute_error']:\n            mae.append(error)\n    epochs = range(1, len(mae) + 1)\n\n    plt.plot(epochs, mae, 'b', label='Training mae')\n    plt.title('Training mean absolute error')\n    plt.legend()\n    plt.show()","bbdfb969":"plot_histories(histories)","85828fe9":"# continue training","c08604aa":"histories.append(\n    model.fit(train_data, train_targets,\n              batch_size=2, epochs=20, verbose=0))","ca382b44":"len(histories)","e446f8db":"plot_histories(histories)","8330999a":"# How to resume training a model\nTraning a model may take a very long time. This kernel shows how to train a keras model, visualize it's improvement and continue training it. We track training sessions in the `histories` variable."}}