{"cell_type":{"9f9c81ea":"code","01245253":"code","12cded3b":"code","e67ae96b":"code","1a69ea21":"code","7a42a708":"code","2038e87c":"code","9e8b7320":"code","b2916278":"code","e066d744":"code","bd2f71fe":"code","202743a7":"code","b1664673":"code","774abef7":"code","dadcdc2e":"code","e2e87ebd":"code","edf0e2c6":"code","123cc60a":"markdown","b3710c1d":"markdown","2ea51a0f":"markdown","5fd1b7e4":"markdown","9d1b4419":"markdown","c57bbcc0":"markdown","55ad5af3":"markdown","bae63265":"markdown","5a2a36fe":"markdown","164421f9":"markdown","7a234d62":"markdown","0d86924b":"markdown","a03798e6":"markdown","6e727b4e":"markdown","d6c71614":"markdown","8d784d2d":"markdown","e4989630":"markdown","9ead24e4":"markdown","12fcb17e":"markdown","156c72a0":"markdown","df70d362":"markdown","e781be7f":"markdown"},"source":{"9f9c81ea":"import numpy as np \nimport pandas as pd \n\nimport os\nfrom urllib.request import urlopen\nimport json\n\nimport plotly.express as px       \nimport plotly.offline as py       \nimport plotly.graph_objects as go \nfrom plotly.subplots import make_subplots\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\n\nfrom datetime import datetime, timedelta\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        \n        print(os.path.join(dirname, filename))","01245253":"latest_date = datetime.today()- timedelta(days=2)\nlatest_date = latest_date.strftime('%m\/%d\/%y')[1:]\n\ndf_cases = pd.read_csv('https:\/\/usafactsstatic.blob.core.windows.net\/public\/data\/covid-19\/covid_confirmed_usafacts.csv')[['countyFIPS', 'County Name', 'State', latest_date]]\ndf_cases = df_cases.rename(columns={'countyFIPS': 'county_fips',\n                                                  latest_date: 'confirmed'}).set_index('county_fips')\n\ndf_deaths = pd.read_csv('https:\/\/usafactsstatic.blob.core.windows.net\/public\/data\/covid-19\/covid_deaths_usafacts.csv')[['countyFIPS', latest_date]]\ndf_deaths = df_deaths.rename(columns={'countyFIPS': 'county_fips',\n                                                  latest_date: 'deaths'}).set_index('county_fips')\n\n\ndf_pop = pd.read_csv('https:\/\/usafactsstatic.blob.core.windows.net\/public\/data\/covid-19\/covid_county_population_usafacts.csv')[['countyFIPS', 'population']]\ndf_pop = df_pop.rename(columns={'countyFIPS': 'county_fips'}).set_index('county_fips')\n\ndf = df_cases.join(df_deaths)\ndf = df.join(df_pop)\n\ndf = df[df.index > 999]\ndf = df[df.population>0]\n\ndel df_cases, df_deaths, df_pop\n\ndf['mortality'] = df['deaths']\/ df['confirmed']\ndf['mortality'] = df['mortality'].fillna(0)\n\ndf['deaths_per_million'] = df['deaths'] * 1000000\/ df['population']\ndf['cases_per_million'] = df['confirmed'] * 1000000\/ df['population']\n\ndf['likely_infected_high'] = np.round(df['confirmed'] * 80\/ df['population'], 2)\ndf['likely_infected_high'] = np.clip(df['likely_infected_high'], 0, 1)\ndf['likely_infected_low'] = np.round(df['confirmed'] * 28\/ df['population'], 2)\ndf['likely_infected_low'] = np.clip(df['likely_infected_low'], 0, 1)\n\ndf['county_state'] = df['County Name'] + ', ' + df['State']\nprint('Number of counties: ' + str(df.index.nunique()))","12cded3b":"df_county_stats = pd.read_csv('\/kaggle\/input\/uncover\/UNCOVER\/county_health_rankings\/county_health_rankings\/us-county-health-rankings-2020.csv')[['fips',\n                                                                                            'segregation_index',\n                                                                                            'percent_black',\n                                                                                            'median_household_income',\n                                                                                            'percent_adults_with_obesity',\n                                                                                            'percent_smokers',\n                                                                                            'percent_with_access_to_exercise_opportunities',\n                                                                                            'percent_some_college',\n                                                                                            'percent_unemployed',\n                                                                                            'percent_children_in_poverty',\n                                                                                             ]]\ndf_county_stats = df_county_stats.rename(columns={'fips': 'county_fips',\n                                                  'segregation_index': 'segregation_level',\n                                                  }).set_index('county_fips')\n\ndf = df.join(df_county_stats)\n\ndf_county_stats = pd.read_csv('\/kaggle\/input\/county-ranking-data\/county_ranking.csv')[['fipscode',\n                                                                                            'v052_rawvalue',\n                                                                                            'v053_rawvalue',\n                                                                                            'v044_rawvalue',\n                                                                                            'v147_rawvalue',\n                                                                                            'v002_cilow',\n                                                                                            'v136_other_data_2']]\n\ndf_county_stats = df_county_stats.rename(columns={'fipscode': 'county_fips',\n                                                  'v052_rawvalue': 'percent_below_18',\n                                                  'v053_rawvalue': 'percent_above_65',\n                                                  'v044_rawvalue': 'income_inequality',\n                                                  'v147_rawvalue': 'life_expectancy',\n                                                  'v002_cilow': 'poor_fair_health',\n                                                  'v136_other_data_2': 'over_crowding'\n                                                  }).set_index('county_fips')\n\n\ndf = df.join(df_county_stats)\ndf = df.reset_index()\ndf['county_fips'] = df['county_fips'].astype(str).str.rjust(5,'0')\ndf.head()","e67ae96b":"!pip install chart_studio\n!pip install plotly-geo","1a69ea21":"plt.figure(figsize=(10,5))\n\nsns.distplot(df.likely_infected_high, hist=True, kde=False, color = 'red', \n             hist_kws={'edgecolor':'black', 'linewidth':1},\n             kde_kws={'linewidth': 2})\n\nprint('Summary Statistic of Percetnage of Population Likely Infected across counties: \\n')\nprint(df.likely_infected_high.describe())\n\nplt.xlim(0, 1)\nplt.title('Distribution of county population likely infected')\nplt.xlabel('Percentage of population likely infected')\n\nplt.show()","7a42a708":"def show_values_on_bars(axs, h_v=\"v\", space=0.4, text_size=10):\n    def _show_on_single_plot(ax):\n        if h_v == \"v\":\n            for p in ax.patches:\n                _x = p.get_x() + p.get_width() \/ 2\n                _y = p.get_y() + p.get_height()\n                value = p.get_height()\n                ax.text(_x, _y, value, ha=\"center\", size=text_size) \n        elif h_v == \"h\":\n            for p in ax.patches:\n                _x = p.get_x() + p.get_width() + float(space)\n                _y = p.get_y() + p.get_height()- float(0.2)\n                value = p.get_width() \n                value = \"{:.1%}\".format(value)\n                ax.text(_x, _y, value, ha=\"left\", size=text_size)\n\n    if isinstance(axs, np.ndarray):\n        for idx, ax in np.ndenumerate(axs):\n            _show_on_single_plot(ax)\n    else:\n        _show_on_single_plot(axs)\n\nplt.figure(figsize=(10,10))\ng=sns.barplot(x='likely_infected_low', y='county_state',data=df.sort_values(['likely_infected_low'], ascending=False).head(20), color=\"lightgreen\")\nshow_values_on_bars(g, \"h\", space=0.01, text_size=10)\nplt.xlim(0, 1.1)\nplt.xlabel(\"Percentage of population infected\")\nplt.ylabel(\"County, State\")\nplt.title(\"Likely spread of Virus if spread is 28 fold\")","2038e87c":"import plotly.express as px\nwith urlopen('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/geojson-counties-fips.json') as response:\n    counties = json.load(response)\n\nfig = px.choropleth(df, geojson=counties, locations='county_fips', color='likely_infected_low',\n                           color_continuous_scale=\"Reds\",\n                           range_color=(0, 0.2),\n                           scope=\"usa\",\n                           title=\"Percentage of population likely already infected if spread is 28 folds\",\n                           hover_name= \"county_state\",\n                           hover_data=[\"confirmed\", \"deaths\"],\n                           labels={'likely_infected_low': '% Likely Infected',\n                                   'confirmed': 'Confirmed Cases ',\n                                   'deaths': 'Deaths '}\n                          )\nfig.update_layout(margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0})\nfig.layout.template = None\nconfig = dict({'scrollZoom': False})\n    \nfig.show(config=config)\nfig.write_html(\"1.html\")","9e8b7320":"fig = px.choropleth(df, geojson=counties, locations='county_fips', color='likely_infected_high',\n                           color_continuous_scale=\"Reds\",\n                           range_color=(0, 0.2),\n                           scope=\"usa\",\n                           title=\"Percentage of population likely already infected if spread is 80 folds\",\n                           hover_name= \"county_state\",\n                           hover_data=[\"confirmed\", \"deaths\"],\n                           labels={'likely_infected_high': '% Likely Infected',\n                                   'confirmed': 'Confirmed Cases ',\n                                   'deaths': 'Deaths '}\n                          )\nfig.update_layout(margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0})\nfig.layout.template = None\nconfig = dict({'scrollZoom': False})\n    \nfig.show(config=config)\nfig.write_html(\"2.html\")","b2916278":"plt.figure(figsize=(10,5))\ndf_temp = df[df.confirmed>500]\n\nsns.distplot(df_temp.mortality, hist=True, kde=False, color = 'green', \n             hist_kws={'edgecolor':'black', 'linewidth':1},\n             kde_kws={'linewidth': 2})\nplt.title('Distribution of Mortality Rate')\nplt.xlabel('Covid Mortality Rate')","e066d744":"plt.figure(figsize=(20,8))\n\nplt.subplot(1, 2, 1)\ng=sns.barplot(x='mortality', y='county_state',data=df[df.confirmed>500].sort_values(['mortality'], ascending=False).head(10), color=\"red\")\nshow_values_on_bars(g, \"h\", space=0.002, text_size=20)\nplt.xlim(0, 0.15)\nplt.xlabel(\"Covid Mortality Rate\", size=20)\nplt.ylabel(\" \", size=20)\nplt.yticks(size=15) \n\nplt.title(\"Counties with highest Covid Mortality\", size=25)\n\nplt.subplot(1, 2, 2)\ng=sns.barplot(x='mortality', y='county_state',data=df[df.confirmed>500].sort_values(['mortality'], ascending=True).head(10), color=\"blue\")\nshow_values_on_bars(g, \"h\", space=0.002, text_size=20)\nplt.xlim(0, 0.05)\nplt.xlabel(\"Covid Mortality Rate\", size=20)\nplt.ylabel(\" \")\nplt.yticks(size=15) \nplt.title(\"Counties with lowest Covid Mortality\", size=25)\nplt.tight_layout()\n","bd2f71fe":"df['temp'] = - 1\ndf.loc[df.confirmed>100, 'temp'] = df['mortality']\n\nfig = px.choropleth(df, geojson=counties, locations='county_fips', color='temp',\n                           color_continuous_scale=\"Reds\",\n                           range_color=(0, 0.06),\n                           hover_name= \"county_state\",\n                           scope=\"usa\",\n                           labels={'temp':'Mortality Rate '}\n                          )\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.layout.template = None\nconfig = dict({'scrollZoom': False})\n\nfig.show(config=config)","202743a7":"plt.figure(figsize=(20,5))\nplt.subplot(1, 2, 1)\nsns.regplot(df_temp.percent_above_65, df_temp.mortality)\n\nplt.subplot(1, 2, 2)\nsns.barplot(pd.qcut(df_temp.percent_above_65, 4), df_temp.mortality)","b1664673":"plt.figure(figsize=(20,5))\nplt.subplot(1, 2, 1)\nsns.regplot(df_temp.percent_below_18, df_temp.mortality)\n\nplt.subplot(1, 2, 2)\nsns.barplot(pd.qcut(df_temp.percent_below_18, 4), df_temp.mortality)","774abef7":"df['dependency_ratio'] = df.percent_above_65 \/ df.percent_below_18\n\nplt.figure(figsize=(20,5))\nplt.subplot(1, 2, 1)\nsns.regplot(df[df['confirmed']>500].dependency_ratio, df_temp.mortality)\n\nplt.subplot(1, 2, 2)\nsns.barplot(pd.qcut(df[df['confirmed']>500].dependency_ratio, 4), df_temp.mortality)","dadcdc2e":"plt.figure(figsize=(20,5))\nval = [500, 1000, 8000]\ncolors = ['red', 'blue', 'green']\n\nfor i in range(3):\n    plt.subplot(1, 3, i+1)\n    sns.regplot(df[df.confirmed>val[i]].segregation_level, df[df.confirmed>val[i]].mortality,lowess=True, color=colors[i])\n    plt.title('Confirmed Cases > ' + str(val[i]))\n    plt.xlabel('Segregation Level')\n    if i>=1:\n        plt.ylabel(' ')","e2e87ebd":"import statsmodels.api as sm\n\nx_vars = ['population', 'percent_black', 'median_household_income',\n       'percent_adults_with_obesity', 'percent_smokers',\n       'percent_with_access_to_exercise_opportunities', 'percent_some_college',\n       'percent_unemployed', 'percent_children_in_poverty', 'percent_below_18',\n       'percent_above_65', 'income_inequality', 'life_expectancy', 'over_crowding',\n       'dependency_ratio', 'poor_fair_health'\n       ]\n\ny = df[df.confirmed>500].mortality\nx = df[df.confirmed>500][x_vars]\n\nx = sm.add_constant(x)\nols = sm.OLS(y, x).fit()\nprint('R2: ', ols.rsquared)","edf0e2c6":"df['predicted_mortality'] = ols.predict(sm.add_constant(df[x_vars]))\n\nfig = px.choropleth(df[df.confirmed<=500], geojson=counties, locations='county_fips', color='predicted_mortality',\n                           color_continuous_scale=\"Reds\",\n                           range_color=(0, 0.06),\n                           scope=\"usa\",\n                           hover_name= \"county_state\",\n                           labels={'predicted_mortality':' Predicted Mortality Rate'}\n                          )\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.layout.template = None\nconfig = dict({'scrollZoom': False})\n\nfig.show(config=config)","123cc60a":"### Identifying counties with highest and lowest Covid-19 Mortality Rates.\n- To get a better sense of Mortality we only compare counties where confirmed cases are > 500. ","b3710c1d":"The above distribution suggests that in most counties no more than 8% of the population is carrying the antibody. Suggesting that there is a possibility of a second spread.","2ea51a0f":"### Visualizing on a map to identify hot spot regions with high mortality\nNote: In this map the we have excluded counties below 500 cases. i.e. assigned them mortality of -1. ","5fd1b7e4":"### Interactive map showing likely spread of virus if the actual spread is 80 folds. ","9d1b4419":"### Interactive map showing likely spread of virus if the actual spread is 28 folds. ","c57bbcc0":"### However, if indeed the spread is 28 fold there are some counties in which a large portion of the population might be carrying the antibody. The counties with the highest percentage of population likely infected are:","55ad5af3":"# Why some US counties are hit harder than others? Exploring the likely spread of Covid-19","bae63265":"### Next, we fit a simple OLS regression to understand how much variation in covid mortality can be explained by county level characteristics.","5a2a36fe":"# 2. In the next part, we explore difference in the mortality across counties, why mortality rate is high in some counties and which counties are likely high risk if there is a second wave.","164421f9":"# 1. How likely is a second wave:\nAccording to experts, the spread of virus ***completely*** stops if there is a vaccine or if a large portion of population develop anti bodies and hence are immune to the virus. We explore the second possibility i.e. what portion of population is carrying the anti body.","7a234d62":"This suggest that in some counties the spread is likely more than 40%. This is in line with the results from NY anti body testing. So the second wave will likley be in counties less affected during the first wave. \n\n> Source: [NY Study](https:\/\/thehill.com\/policy\/healthcare\/494324-27m-new-yorkers-have-had-coronavirus-preliminary-data-shows)","0d86924b":"### Association between percentage of population below 18 in the county and covid mortality.","a03798e6":" ## Fetching Latest Covid-19 Data From USA Facts.\n Source: [USA Facts](https:\/\/usafacts.org\/visualizations\/coronavirus-covid-19-spread-map\/)","6e727b4e":"### Results of recent antibody test in California suggest that the number of people likely infected is 28 to 80 time the number of confirmed cases. If indeed the spread is 28-fold;  the distribution of percentage of population carrying Covid-19 antibody is displayed below. \n\n> Source: [California Study](https:\/\/news.usc.edu\/168987\/antibody-testing-results-covid-19-infections-los-angeles-county\/)","d6c71614":"![Image](https:\/\/www.furman.edu\/covid-19\/wp-content\/uploads\/sites\/177\/2020\/03\/CoronaVirusHeader-Final-3.jpg)","8d784d2d":"### Map showing predicted mortality in different counties if there is a second wave","e4989630":"## In this notebook our objective is two folds:\n### 1. We explore how likely is a second wave.\n### 2. If it is likely, which experts believe exists, which US counties are likely to experience high mortality rates.","9ead24e4":"### Below is the distribution of the mortality rate across counties in which the confirmed cases are greater than 500.","12fcb17e":"### Association between segregation level in the county and covid mortality.","156c72a0":"### In conclusion, we believe there are two key takeaways:\n1. Given the fact that in most counties only a small portion of the population is carrying the covid anitbodies, there is a possibility of a second wave.\n2. Based on county characteristics, there are counties that may be at a higher risk than other counties. Especially the counties in which a large portion of the population is above the age of 65.","df70d362":"### Association between percentage of population above 65 in the county and covid mortality.","e781be7f":"### Association between ratio (% above 65):(% below 18) and covid mortality."}}