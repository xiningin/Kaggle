{"cell_type":{"2eea033f":"code","7da1700d":"code","525d5693":"code","5dead61b":"code","9401c69e":"code","f716f65e":"code","9ca10231":"code","52997599":"code","dc91526c":"code","654b0715":"code","7d43c017":"code","8393592a":"code","357b38b5":"code","89849ab7":"code","53a7b2d4":"code","79e5c85e":"code","1c56cb68":"code","d145ab86":"code","e77a0e3f":"code","24b52a7a":"code","1b3e1119":"code","1a145dac":"code","fe8b9d8c":"code","d82b0ff1":"code","e310f38a":"code","8b941684":"code","8c704712":"code","10397e9f":"code","682201c4":"code","7f7c1b0f":"code","56d2eef6":"code","53357a68":"code","1c7c78e2":"code","b02feda6":"code","c4a3bd27":"code","aa067a6f":"code","050bb418":"code","d1909fe4":"code","3fd676a5":"code","1e07c8e9":"code","45a823e3":"code","54929253":"code","9c0b8bbc":"code","2f48d0d3":"code","bb2b512d":"code","d22eaa75":"code","e242e803":"code","c97995bd":"code","637141af":"code","ee602387":"code","fecbed52":"code","88b673c6":"code","fe0916c5":"code","bc733206":"code","398a6fd5":"code","a974a73b":"code","4e4010ed":"code","cd424b93":"code","f0614472":"code","1fcaed2f":"code","312fb54d":"code","7b4a527b":"code","863c1718":"code","befed2e4":"code","89f07031":"code","00f6d0af":"code","b1f649bc":"code","b9570907":"code","46b2fb95":"code","0f3cc36f":"code","58d7655e":"code","43227d6e":"code","96bdbc10":"code","c94517d6":"code","0e1e96fb":"code","7d5f84d6":"code","5258937c":"code","9f5dfaa8":"code","0c53c872":"code","525107da":"code","ba754232":"code","1538636f":"code","649bbf3b":"code","6dd27bde":"code","a7846680":"code","e5f29157":"code","6f0f1915":"code","44dae29b":"code","6e338acc":"code","d6859676":"code","61bb6c60":"code","a7ddd3c1":"code","d57b4e2e":"code","52aef4a7":"code","2023d72d":"code","1dadf09f":"code","34e07554":"code","73c082c3":"code","2f18e1b2":"code","245c4ff4":"code","ca352b86":"code","7b88b7b5":"code","915b3b37":"code","576e4448":"code","545bd7af":"markdown","6e76d290":"markdown","e162f8fd":"markdown","723201bc":"markdown","44c8d42b":"markdown","40c1297f":"markdown","653991d0":"markdown","1845e486":"markdown","61f0ac48":"markdown","d5000628":"markdown","62dcdf0a":"markdown","fec4ebfa":"markdown","ed389415":"markdown","cb08e5c6":"markdown","e09ad73b":"markdown","935f8da1":"markdown","6fd77fcf":"markdown"},"source":{"2eea033f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')","7da1700d":"df=pd.read_csv(\"..\/input\/advertising-dataset\/advertising.csv\")","525d5693":"df","5dead61b":"df.info()","9401c69e":"df.head()","f716f65e":"df.tail()","9ca10231":"df.corr()","52997599":"sns.heatmap(df.corr(),annot=True)","dc91526c":"#y = b1*x + b0 # linear reg","654b0715":"df[\"total_spend\"] = df.TV + df.Radio + df.Newspaper","7d43c017":"df","8393592a":"df.head()","357b38b5":"df.tail()","89849ab7":"import scipy.stats as stats","53a7b2d4":"def check_dist(df, var):\n    plt.subplot(1, 2, 1)\n    sns.histplot(x=var, data=df)\n    plt.subplot(1, 2, 2)\n    stats.probplot(df[var], dist=\"norm\", plot=plt)\n    plt.show()","79e5c85e":"for col in df.drop(\"Sales\", axis=1).columns:\n    check_dist(df, col)","1c56cb68":"sns.heatmap(df.corr(),annot=True)","d145ab86":"df.corr()","e77a0e3f":"df=df[[\"total_spend\",\"Sales\"]]\ndf.head()","24b52a7a":"sns.scatterplot(x=\"total_spend\",y=\"Sales\",data=df)","1b3e1119":"corr = df.Sales.corr(df.total_spend)\ncorr","1a145dac":"R2_score = corr**2\nR2_score","fe8b9d8c":"sns.regplot(x = \"total_spend\", y= \"Sales\", data = df)","d82b0ff1":"df.describe()","e310f38a":"# y = b1*x + b0\n# y = ba\u011f\u0131ml\u0131 de\u011fi\u015fken \/ target value, dependent value\n# b1 = katsay\u0131,  \/ e\u011fim, slope = 0 < b1 < 1\n# x = ba\u011f\u0131ms\u0131z de\u011fi\u015fken \/ feature, independent value\n# b0 = otonom parametre \/ intercept","8b941684":"X = df.total_spend\nX","8c704712":"y = df.Sales\ny","10397e9f":"np.polyfit(X, y, deg= 1)","682201c4":"print(\"b1 = {}\\nb0 = {}\".format(np.polyfit(X, y, deg= 1)[0],np.polyfit(X, y, deg= 1)[1]))","7f7c1b0f":"b1 = np.polyfit(X, y, deg= 1)[0]\nb0 = np.polyfit(X, y, deg= 1)[1]","56d2eef6":"y_predict = b1*X + b0","53357a68":"values = {\"actual\": y, \"predicted\": y_predict, \"resudial\": y - y_predict, \"LSE\": (y - y_predict)**2}\ndf_2 = pd.DataFrame(values)\ndf_2","1c7c78e2":"df_2.resudial.sum()","b02feda6":"df_2.LSE.sum()","c4a3bd27":"potential_spend = np.linspace(0, 500, 100)","aa067a6f":"potential_spend","050bb418":"predicted_sales_lin = b1 * potential_spend + b0\npredicted_sales_lin","d1909fe4":"plt.plot(potential_spend, predicted_sales_lin)\nsns.scatterplot(x = \"total_spend\", y = \"Sales\", data= df)","3fd676a5":"# y = b1*x + b0  = linear\n# y = a1*x1**3 + a2*x2**2 + a3*x3 + a0 = 3 degree polinomial","1e07c8e9":"a1 = np.polyfit(X, y, deg= 3)\na1","45a823e3":"a1 = np.polyfit(X, y, deg= 3)[0]\na2 = np.polyfit(X, y, deg= 3)[1]\na3 = np.polyfit(X, y, deg= 3)[2]\na0 = np.polyfit(X, y, deg= 3)[3]","54929253":"predicted_sales_poly = a1 * potential_spend ** 3 + a2 * potential_spend ** 2 + a3 * potential_spend + a0\npredicted_sales_poly","9c0b8bbc":"sns.scatterplot(x= \"total_spend\", y= \"Sales\", data= df)\nplt.plot(potential_spend, predicted_sales_poly, color= \"red\")","2f48d0d3":"sns.scatterplot(x= \"total_spend\", y= \"Sales\", data= df)\nplt.plot(potential_spend, predicted_sales_poly, color= \"red\")\nplt.plot(potential_spend, predicted_sales_lin, color= \"blue\")","bb2b512d":"spend = 420\nsales_pred_lin = b1* spend + b0\nsales_pred_poly = a1 * spend ** 3 + a2 *spend ** 2 + a3 * spend + a0","d22eaa75":"print(sales_pred_lin, sales_pred_poly)","e242e803":"df=pd.read_csv(\"..\/input\/advertising-dataset\/advertising.csv\")","c97995bd":"df","637141af":"df.sort_values(by= \"Sales\", \n                  ascending = False)","ee602387":"from scipy.stats import skew","fecbed52":"for i in df.drop(columns= \"Sales\").columns:\n    print(i, skew(df[i]))","88b673c6":"for j in df.drop(columns= \"Sales\").columns:\n    g = sns.distplot(df[j], color= \"b\", label= \"Skewness: %.2f\"%(df[j].skew()))\n    g = g.legend(loc= \"best\")\n    plt.show()","fe0916c5":"sns.pairplot(df)","bc733206":"# Tv - sales : pozitif g\u00fc\u00e7l\u00fc \n# radio - sales : orta\n# newspaper : zay\u0131f","398a6fd5":"# y = b1*X + b0\n# y = b1*X1 + b2*X2 + b3*X3 + ...........  + b0\n\n# target = y\n# X1 , X2, x3, ...... = X","a974a73b":"df","4e4010ed":"y = df[\"Sales\"]\ny","cd424b93":"X = df.drop(columns= \"Sales\")\nX","f0614472":"from sklearn.model_selection import train_test_split","1fcaed2f":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size= 0.3, random_state= 42) ","312fb54d":"df.sample(140)","7b4a527b":"print( \"X_train features shape: {}\\nY_train features shape: {}\\nX_test features shape: {}\\ny_test features shape: {}\".format(X_train.shape, y_train.shape, X_test.shape, y_test.shape))","863c1718":"from sklearn.linear_model import LinearRegression","befed2e4":"model = LinearRegression()","89f07031":"model.fit(X_train, y_train)","00f6d0af":"model.intercept_","b1f649bc":"print(\"bo: \", model.intercept_)","b9570907":"model.coef_","46b2fb95":"print(\"b1: {}\\nb2: {}\\nb3: {}\".format(model.coef_[0], model.coef_[1], model.coef_[2]))","0f3cc36f":"# y = 0.04 * TV + 0.19 * Radio + 0.006 * Newspaper + 2.70","58d7655e":"y_pred = model.predict(X_test)\ny_pred","43227d6e":"my_dict = {\"Actual\": y_test, \"pred\": y_pred, \"residual\": y_test - y_pred}","96bdbc10":"comparing = pd.DataFrame(my_dict)\ncomparing.sort_values(by= \"residual\")","c94517d6":"result_sample = comparing.sample(20)\nresult_sample","0e1e96fb":"result_sample.plot(kind= \"bar\", figsize = (15,9))\nplt.show()","7d5f84d6":"from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score","5258937c":"R2_score = r2_score(y_test, y_pred)\n\nR2_score","9f5dfaa8":"mae = mean_absolute_error(y_test, y_pred)\nmae","0c53c872":"mse = mean_squared_error(y_test, y_pred)\nmse","525107da":"rmse = np.sqrt(mean_squared_error(y_test, y_pred))\nrmse","ba754232":"sales_mean = df[\"Sales\"].mean()\nsales_mean","1538636f":"mae \/ sales_mean","649bbf3b":"rmse \/ sales_mean","6dd27bde":"variables = {\"Actual\": [1000, 2000, 3000], \"pred\": [1100, 2200, 3200]}\nvariables2 = {\"Actual\": [1000, 2000, 3000], \"pred\": [1100, 2200, 3600]}","a7846680":"variables, variables2","e5f29157":"df_2 = pd.DataFrame(variables)","6f0f1915":"df_3 = pd.DataFrame(variables2)","44dae29b":"df_2","6e338acc":"df_3","d6859676":"df_2[\"residual\"] = abs(df_2.Actual - df_2.pred)\ndf_2","61bb6c60":"df_3[\"residual\"] = abs(df_3.Actual - df_3.pred)\ndf_3","a7ddd3c1":"df_2.residual.sum() \/ 3","d57b4e2e":"df_3.residual.sum() \/ 3","52aef4a7":"a = ((df_2.residual ** 2).sum() \/ 3) ** 0.5\na","2023d72d":"b = ((df_3.residual ** 2).sum() \/ 3) ** 0.5\nb","1dadf09f":"b - a","34e07554":"def eval_metric(actual, pred):\n    mae = mean_absolute_error(actual, pred)\n    mse = mean_squared_error(actual, pred)\n    rmse = np.sqrt(mean_squared_error(actual, pred))\n    R2_score = r2_score(actual, pred)\n    print(\"Model Testing Performance: \")\n    print(\"---------------------------\");\n    print(f\"R2_score \\t: {R2_score}\")\n    print(f\"MAE \\t\\t: {mae}\")\n    print(f\"MSE \\t\\t: {mse}\")\n    print(f\"RMSE \\t\\t: {rmse}\")\n\n","73c082c3":"eval_metric(y_test, y_pred)","2f18e1b2":"y_train_pred = model.predict(X_train)","245c4ff4":"eval_metric(y_train, y_train_pred)","ca352b86":"residuals = y_test - y_pred","7b88b7b5":"plt.figure(figsize = (10, 6))\nsns.scatterplot(x = y_test, y = residuals)\nplt.axhline(y= 0, color = \"r\", linestyle = \"--\")\nplt.show()","915b3b37":"sns.kdeplot(residuals)","576e4448":"stats.probplot(residuals, dist= \"norm\", plot = plt);","545bd7af":"## Train-Test Split\n","6e76d290":"## Evaluation Model","e162f8fd":"## Create new independent variable (feature)","723201bc":"https:\/\/veribilimcisi.com\/2017\/07\/14\/mse-rmse-mae-mape-metrikleri-nedir\/","44c8d42b":"## Prediction with simple linear regression","40c1297f":"## Coefficient of determination (R2)","653991d0":"## Improving predictions","1845e486":"## Model Fitting and Compare Actual and Predicted Labels","61f0ac48":"## Determination of coefficients (slope and intercept)","d5000628":"## Splitting the dataset into X(independent variables) and y (dependent variable)","62dcdf0a":"## What is the concept of punishment for RMSE error metric?\n","fec4ebfa":"## Correlation between independent variable and dependent variable","ed389415":"## Error Metrics","cb08e5c6":"## Why do we use the least squares error method to find the regression line that best fits the data?","e09ad73b":"## Which feature is more suitable for linear regression?","935f8da1":"## Multiple Linear Regression","6fd77fcf":"# Simple Linear Regression"}}