{"cell_type":{"f9c4c11e":"code","0df2cb7c":"code","122e7345":"code","4e308e1e":"code","ee4e9e56":"code","52d512dd":"code","b9f7c024":"code","becaf45e":"code","23d0c9a0":"code","fb8b7e39":"code","635ed3c1":"code","45e837c3":"code","c469646a":"code","77cc5b53":"code","5e559bbb":"code","a83dbd59":"code","7f237f18":"code","0cfaf2a0":"code","5ad2fc3d":"code","d94058f2":"code","12a2d91a":"code","a983ea15":"code","e6c5f89b":"code","a338b6c2":"code","dd29303a":"code","a2791a6d":"code","5f97b32d":"markdown","40758060":"markdown","bf2a8ddc":"markdown","79a8d069":"markdown","5012d3eb":"markdown","b2d7f985":"markdown","05ce6c31":"markdown","a7adec9f":"markdown","20dd19b5":"markdown","dc2fe0d9":"markdown","c261ea3a":"markdown","2f0f07ec":"markdown","fd14a31a":"markdown","48335e29":"markdown","b757c34f":"markdown","4f38144c":"markdown"},"source":{"f9c4c11e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n%pylab inline\npylab.rcParams['figure.figsize'] = (10, 6) \ncolor = sns.color_palette()\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","0df2cb7c":"# to customize the displayed area of the dataframe \npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)","122e7345":"train = pd.read_csv('..\/input\/train-ver2\/train_ver2.csv', usecols=['ncodpers'])\n","4e308e1e":"train_unique_customers = set(train.ncodpers.unique())\nprint(\"Number of customers: \", len(train_unique_customers))","ee4e9e56":"num_occur = train.groupby('ncodpers').agg('size').value_counts()\n\nplt.figure(figsize=(8,4))\nsns.barplot(num_occur.index, num_occur.values, alpha=0.8, color=color[0])\nplt.xlabel('Number of Occurrences of the customer', fontsize=12)\nplt.ylabel('Number of customers', fontsize=12)\nplt.show()","52d512dd":"del train_unique_customers","b9f7c024":"train = pd.read_csv('..\/input\/train-ver2\/train_ver2.csv', dtype='float16', \n                    usecols=['ind_ahor_fin_ult1', 'ind_aval_fin_ult1', \n                             'ind_cco_fin_ult1', 'ind_cder_fin_ult1',\n                             'ind_cno_fin_ult1', 'ind_ctju_fin_ult1',\n                             'ind_ctma_fin_ult1', 'ind_ctop_fin_ult1',\n                             'ind_ctpp_fin_ult1', 'ind_deco_fin_ult1',\n                             'ind_deme_fin_ult1', 'ind_dela_fin_ult1',\n                             'ind_ecue_fin_ult1', 'ind_fond_fin_ult1',\n                             'ind_hip_fin_ult1', 'ind_plan_fin_ult1',\n                             'ind_pres_fin_ult1', 'ind_reca_fin_ult1',\n                             'ind_tjcr_fin_ult1', 'ind_valo_fin_ult1',\n                             'ind_viv_fin_ult1', 'ind_nomina_ult1',\n                             'ind_nom_pens_ult1', 'ind_recibo_ult1'])","becaf45e":"target_counts = train.astype('float64').sum(axis=0)\n#print(target_counts)\nplt.figure(figsize=(8,4))\nsns.barplot(target_counts.index, target_counts.values, alpha=0.8, color=color[0])\nplt.xlabel('Product Name', fontsize=12)\nplt.ylabel('Number of Occurrences', fontsize=12)\nplt.xticks(rotation='vertical')\nplt.show()","23d0c9a0":"hachem=train[['ind_ahor_fin_ult1', 'ind_aval_fin_ult1', 'ind_cco_fin_ult1',\n       'ind_cder_fin_ult1', 'ind_cno_fin_ult1', 'ind_ctju_fin_ult1',\n       'ind_ctma_fin_ult1', 'ind_ctop_fin_ult1', 'ind_ctpp_fin_ult1',\n       'ind_deco_fin_ult1', 'ind_deme_fin_ult1', 'ind_dela_fin_ult1',\n       'ind_ecue_fin_ult1', 'ind_fond_fin_ult1', 'ind_hip_fin_ult1',\n       'ind_plan_fin_ult1', 'ind_pres_fin_ult1', 'ind_reca_fin_ult1',\n       'ind_tjcr_fin_ult1', 'ind_valo_fin_ult1', 'ind_viv_fin_ult1',\n       'ind_nomina_ult1', 'ind_nom_pens_ult1', 'ind_recibo_ult1']].corr()>0.7","fb8b7e39":"listes=[]\nfor i in hachem.columns:\n    w=hachem.index[hachem[i] == True].tolist()\n    tu=(i,w)\n    listes.append(tu)","635ed3c1":"sns.heatmap(train[['ind_cno_fin_ult1','ind_nomina_ult1','ind_nom_pens_ult1']].corr())","45e837c3":"train = pd.read_csv('..\/input\/train-ver2\/train_ver2.csv', usecols=['fecha_dato', 'fecha_alta'], parse_dates=['fecha_dato', 'fecha_alta'])\ntrain['fecha_dato_yearmonth'] = train['fecha_dato'].apply(lambda x: (100*x.year) + x.month)\nyearmonth = train['fecha_dato_yearmonth'].value_counts()\n\nplt.figure(figsize=(8,4))\nsns.barplot(yearmonth.index, yearmonth.values, alpha=0.8, color=color[0])\nplt.xlabel('Year and month of observation', fontsize=12)\nplt.ylabel('Number of customers', fontsize=12)\nplt.xticks(rotation='vertical')\nplt.show()","c469646a":"train = pd.read_csv('..\/input\/train-ver2\/train_ver2.csv', usecols=['age'])\ntrain=train[train['age']!=' NA']\ntrain[['age']] = train[['age']].apply(pd.to_numeric)\n","77cc5b53":"def age_cat(x):\n    if int(x) <24:\n        return('Youth')\n    elif int(x) <55:\n        return('adults')\n    else:\n        return('old')","5e559bbb":"train['age_cat']=train['age'].apply(lambda x:age_cat(x))","a83dbd59":"sns.set_style('whitegrid')\nsns.countplot(x='age_cat',data=train,palette='RdBu_r')","7f237f18":"train['age'].hist(bins=50)\nplt.title(\"Customers' Age Distribution\")\nplt.xlabel(\"Age(years)\")\nplt.ylabel(\"Number of customers\") ","0cfaf2a0":"train = pd.read_csv('..\/input\/train-ver2\/train_ver2.csv', usecols=['canal_entrada'])","5ad2fc3d":"train[\"canal_entrada\"].value_counts().plot(x=None, y=None, kind='pie') \n","d94058f2":"train = pd.read_csv('..\/input\/train-ver2\/train_ver2.csv', usecols=['nomprov','renta'])","12a2d91a":"train.renta.isnull().sum()","a983ea15":"train.nomprov.unique()","e6c5f89b":"train.loc[train.nomprov==\"CORU\\xc3\\x91A, A\",\"nomprov\"] = \"CORUNA, A\"","a338b6c2":"train.loc[train.nomprov.isnull(),\"nomprov\"] = \"UNKNOWN\"\n","dd29303a":"#train.loc[train.renta.notnull(),:].groupby(\"nomprov\").agg([{\"Sum\":sum},{\"Mean\":mean}])\nincomes = train.loc[train.renta.notnull(),:].groupby(\"nomprov\").agg({\"renta\":{\"MedianIncome\":median}})\nincomes.sort_values(by=(\"renta\",\"MedianIncome\"),inplace=True)\nincomes.reset_index(inplace=True)\nincomes.nomprov = incomes.nomprov.astype(\"category\", categories=[i for i in train.nomprov.unique()],ordered=False)\nincomes.head()","a2791a6d":"pylab.rcParams['figure.figsize'] = (6, 4)\n\nwith sns.axes_style({\n        \"axes.facecolor\":   \"#ffc400\",\n        \"axes.grid\"     :    False,\n        \"figure.facecolor\": \"#c60b1e\"}):\n    h = sns.factorplot(data=incomes,\n                   x=\"nomprov\",\n                   y=(\"renta\",\"MedianIncome\"),\n                   order=(i for i in incomes.nomprov),\n                   size=6,\n                   aspect=1.5,\n                   scale=1.0,\n                   color=\"#c60b1e\",\n                   linestyles=\"None\")\nplt.xticks(rotation=90)\nplt.tick_params(labelsize=16,labelcolor=\"#ffc400\")#\nplt.ylabel(\"Median Income\",size=32,color=\"#ffc400\")\nplt.xlabel(\"City\",size=32,color=\"#ffc400\")\nplt.title(\"Income Distribution by City\",size=40,color=\"#ffc400\")\nplt.ylim(0,180000)\nplt.yticks(range(0,180000,40000))","5f97b32d":"We have 17 months of data present in our train and we can clearly see that majority of the customers are present for all 17 months. There is also a small spike at '11 month' compared to other months.! ","40758060":"For the first six months of the given train data, the number of customers \/ observations remain almost same and then there is a sudden spike in the number of customers \/ observations during July 2015.","bf2a8ddc":"**Customers attraction by channel**\n\nThe channels through which the customers were attracted to join.","79a8d069":"** Read in the csv file as a dataframe called train  **","5012d3eb":"Let us see the count of occurrences of each of the customers in train set","b2d7f985":"There was an issue with the unicode character \u00f1 in A Coru\u00f1a. I'll manually fix it, but if anybody knows a better way to catch cases like this I would be very glad to hear it in the comments.\n","05ce6c31":"**Exploring Dates:**\n\nLet us explore the dates now and see if there are any insights. There are 2 date fields present in the data.\n\n1. fecha_dato - The date of observation\n2. fecha_alta - The date in which the customer became as the first holder of a contract in the bank","a7adec9f":"** Import numpy , pandas and seaborn  **","20dd19b5":"**Product variable distribution:**\n","dc2fe0d9":"The majority of customers have joined through three major channels.","c261ea3a":"** Age distribution of the customers  **","2f0f07ec":"**Gross income of the household**","fd14a31a":"**No of Customers:**\n\nNow let us look at the number of unique customers in train data and test data and also the number of customers common between both","48335e29":"products that are come together (more than 70%): \n    ('ind_cno_fin_ult1','ind_nomina_ult1')=75.7% | ('ind_cno_fin_ult1','ind_nom_pens_ult1')=79% | ('ind_nomina_ult1','ind_nom_pens_ult1')=95%\n    ind_cno_fin_ult1= Payroll Account\n    ind_nom_pens_ult1=Pensions\n    ind_nomina_ult1=Payroll","b757c34f":"Product \"ind_cco_fin_ult1 \" is the most bought one and \"ind_aval_fin_ult1\" is the least bought one.","4f38144c":"Here is a feature that is missing a lot of values. Rather than just filling them in with a median, it's probably more accurate to break it down region by region. To that end, let's take a look at the median income by region, and in the spirit of the competition let's color it like the Spanish flag."}}