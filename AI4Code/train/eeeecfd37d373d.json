{"cell_type":{"7faee929":"code","45e0ef10":"code","f39305db":"code","7e77f7dc":"code","3919e0ad":"code","9a8a0172":"code","6bc107a4":"code","ed1bea56":"code","96af9bd3":"code","c3d5be35":"code","cdb441df":"code","e3dce74f":"code","9f475a2b":"code","ba1d7bd1":"code","7d478a3e":"code","b9179415":"code","2127cc07":"code","cd82ba27":"code","ffb2974d":"code","c949e030":"code","2c3414f2":"code","13beb885":"code","f4c599f7":"code","2dc92154":"code","0c41c661":"code","78d6d8b3":"code","2045b112":"code","72638681":"code","37f2cb1f":"code","d57d4e5a":"code","0597ea06":"code","00b7c313":"code","e6a4701d":"code","1ff4922d":"code","3a2b6d2b":"code","34eb9d88":"code","3745cd2e":"code","b82478cb":"code","04139874":"code","137922cb":"code","82ea0a16":"code","a26f06e7":"code","604cf72b":"code","13409c77":"code","975b51a8":"code","81aef551":"code","330f3db9":"code","7949600b":"code","86a0a1bd":"code","d07555c4":"code","eba7decb":"code","0e070cff":"markdown","e9221f35":"markdown"},"source":{"7faee929":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom datetime import datetime\n\ndf = pd.read_csv(r'..\/input\/covid19-mx\/covid-19_general_MX.csv')\ndf.head()","45e0ef10":"df.columns","f39305db":"df.shape","7e77f7dc":"df = df.drop('Unnamed: 0',axis=1)","3919e0ad":"df.shape","9a8a0172":"df.columns = ['SECTOR','ENTIDAD_UM','GENDER','STATE','PATIENT_TYPE', 'ADMISSION_DATE', 'SYMPTOM_DATE', \n'DATE_DECEASE','INTUBATE', 'PNEUMONIA', 'AGE', 'NATIONALITY', 'DIABETES', 'COPD','ASTHMA', 'INMUSUPR',\n'HYPERTENSION', 'OTHER_KNOWN_DISEASES', 'CARDIOVASCULAR','OBESITY', 'KIDNEY_CHRONIC', 'SMOKING', \n'IN_CONTACT_WITH_OTHER_CASE', 'RESULT', 'ICU']","6bc107a4":"df.describe()","ed1bea56":"df.info()","96af9bd3":"sector_vc = pd.value_counts(df['SECTOR'])\nsector_csv = pd.read_csv('..\/input\/covid19-mx\/SECTOR.csv')\n\nlabels = []\nfor i in sector_vc.index:\n    labels.append(sector_csv[sector_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\n    \nplt.figure(figsize=(25,30))\nplt.subplot(3,2,(1,2))\nplt.barh(labels,sector_vc.values,color='orange')\nfor j,k in zip(sector_vc.values,range(14)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n    \n    \nfrac = []\nfor i in sector_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\n    \nplt.subplot(3,2,3)\nplt.pie(frac,labels=labels,explode=[0.0, 0.0, 0.1, 0.09, 0.08, 0.07, 0.06, 0.05, 0.1,0.2, 0.43, 0.75, 1]\n       ,colors=['#DE3163','#40E0D0','#000080','#0000FF','#008080','#00FFFF','#008000','#00FF00','#DFFF00',\n                '#FFBF00','#FF7F50','#800080','#FF00FF'],startangle=200)\nplt.legend(loc=1)\n          \nplt.subplot(3,2,4)\nplt.pie(frac[5:],labels=labels[5:],explode=[0.05,0, 0, 0,0,0.1,0.3,0.4],\n       colors=['#00FFFF','#008000','#00FF00','#DFFF00',\n                '#FFBF00','#FF7F50','#800080','#FF00FF'])\nplt.legend(loc=3)\n\nplt.subplot(3,2,5)\nsector = pd.crosstab(df['SECTOR'],df['RESULT'])\n\none = np.array(list(sector[1]))\ntwo = np.array(list(sector[2]))\nthree = np.array(list(sector[3]))\n\nlabel = list(sector_csv['DESCRIPCI\u00d3N'].values)[1:]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(3,2,6)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nSECTOR - National Healthcare\\nInstitution that provided care',\n         size=50,horizontalalignment='center',verticalalignment='center')\nplt.axis('off')\n\nplt.show()","c3d5be35":"entidad_um_vc = pd.value_counts(df['ENTIDAD_UM'])\nentidads_csv = pd.read_csv('..\/input\/covid19-mx\/ENTIDADES.csv')\n\nlabels = []\nfor i in entidad_um_vc.index:\n    labels.append(entidads_csv[entidads_csv['CLAVE_ENTIDAD']==i]['ENTIDAD_FEDERATIVA'].values[0])\n\nplt.figure(figsize=(25,30))\nplt.subplot(3,2,(1,2))\nplt.barh(labels,entidad_um_vc.values,color='#F7FA31')\nfor i,j,k in zip(labels,entidad_um_vc.values,range(36)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n\nplt.subplot(3,2,3)\nfrac = []\nfor i in entidad_um_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode=[0.1,0.1,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,\n                                   0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03]\n       ,colors=['#1038BB','#1081BB','#0AE7D1','#0AE7A3','#0AE763','#3DE70A','#A1E70A',\n                '#DAE70A','#E7C80A','#E7930A','#E7570A','#E70A0A','#FE243E','#FE2466','#FE2487','#FE24BC','#FFA0FD',\n                '#DE24FE','#9C24FE','#7424FE','#DE3163','#40E0D0','#000080','#0000FF','#008080','#008000',\n                '#00FF00','#DFFF00','#FFBF00','#FF7F50','#800080','#FF8DCE'],startangle=20)\n\nplt.subplot(3,2,4)\nplt.pie(frac[-16:],labels=labels[-16:],explode=[0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03]\n       ,colors=['#FFA0FD','#DE24FE','#9C24FE','#7424FE','#DE3163','#40E0D0','#000080','#0000FF',\n                '#008080','#008000','#00FF00','#DFFF00','#FFBF00','#FF7F50','#800080','#FF8DCE'],startangle=20)\n\nplt.subplot(3,2,5)\nentidad_um = pd.crosstab(df['ENTIDAD_UM'],df['RESULT'])\n\none = np.array(list(entidad_um[1]))\ntwo = np.array(list(entidad_um[2]))\nthree = np.array(list(entidad_um[3]))\n\nlabel = list(entidads_csv['ENTIDAD_FEDERATIVA'].values)[:32]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(3,2,6)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nHealthcare Institution\\n that provided care',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","cdb441df":"gender_csv = pd.read_csv('..\/input\/covid19-mx\/SEXO.csv')\ngender_vc = pd.value_counts(df['GENDER'])\n\nlabels = []\nfor i in gender_vc.index:\n    labels.append(gender_csv[gender_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.bar(labels,gender_vc.values,color='#FF8DCE')\nfor j,k in zip(gender_vc.values,range(2)):\n    plt.annotate(j, xy=(k,j), xycoords=\"data\",va='center',ha='center',size=15, xytext=(0, 8),\n                   textcoords='offset points')\n\nplt.subplot(2,2,2)\nfrac = []\nfor i in gender_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,\n       colors=['#6DA7FD','#EA7AC4'],startangle=90,autopct='%.2f%%')\n\nplt.subplot(2,2,3)\ngender = pd.crosstab(df['GENDER'],df['RESULT'])\n\none = np.array(list(gender[1]))\ntwo = np.array(list(gender[2]))\nthree = np.array(list(gender[3]))\n\nlabel = list(gender_csv['DESCRIPCI\u00d3N'].values)[:2]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nGender',\n         size=50,horizontalalignment='center',verticalalignment='center')\nplt.axis('off')\n\nplt.show()","e3dce74f":"state_vc = pd.value_counts(df['STATE'])\n\nlabels = []\nfor i in state_vc.index:\n    labels.append(entidads_csv[entidads_csv['CLAVE_ENTIDAD']==i]['ENTIDAD_FEDERATIVA'].values[0])\n\nplt.figure(figsize=(25,30))\nplt.subplot(3,2,(1,2))\n\nplt.barh(labels,state_vc.values,color='#DE3163')\nfor i,j,k in zip(labels,state_vc.values,range(32)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n    \nplt.subplot(3,2,3)\nfrac = []\nfor i in state_vc.values\/879608*100 : \n    frac.append(round(i,2))\n    \nplt.pie(frac,labels=labels,explode=[0.1,0.1,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,\n                                   0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03]\n       ,colors=['#1038BB','#1081BB','#0AE7D1','#0AE7A3','#0AE763','#3DE70A','#A1E70A',\n                '#DAE70A','#E7C80A','#E7930A','#E7570A','#E70A0A','#FE243E','#FE2466','#FE2487','#FE24BC','#FE24FA',\n                '#DE24FE','#9C24FE','#7424FE','#DE3163','#40E0D0','#000080','#0000FF','#008080','#008000',\n                '#00FF00','#DFFF00','#FFBF00','#FF7F50','#800080','#FF8DCE'],startangle=20)\n\nplt.subplot(3,2,4)\nplt.pie(frac[-16:],labels=labels[-16:],explode=[0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03]\n       ,colors=['#FE24FA','#DE24FE','#9C24FE','#7424FE','#DE3163','#40E0D0','#000080','#0000FF','#008080','#008000',\n                '#00FF00','#DFFF00','#FFBF00','#FF7F50','#800080','#FF8DCE'],startangle=20)\n\nplt.subplot(3,2,5)\nstate = pd.crosstab(df['STATE'],df['RESULT'])\n\none = np.array(list(state[1]))\ntwo = np.array(list(state[2]))\nthree = np.array(list(state[3]))\n\nlabel = list(entidads_csv['ENTIDAD_FEDERATIVA'].values)[:32]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(3,2,6)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nState',\n         size=50,horizontalalignment='center',verticalalignment='center')\nplt.axis('off')\n\nplt.show()","9f475a2b":"patient_type_vc = pd.value_counts(df['PATIENT_TYPE'])\npatient_type_csv = pd.read_csv('..\/input\/covid19-mx\/TIPO_PACIENTE.csv')\n\nlabels = []\nfor i in patient_type_vc.index:\n    labels.append(patient_type_csv[patient_type_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.bar(labels,patient_type_vc.values,color=['#0AE7D1','#FF8DCE'])\nfor j,k in zip(patient_type_vc.values,range(2)):\n    plt.annotate(j, xy=(k,j), xycoords=\"data\",va='center',ha='center',size=15, xytext=(0, 8),\n                   textcoords='offset points')\n    \nplt.subplot(2,2,2)\nfrac = []\nfor i in patient_type_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.02,0]\n       ,colors=['#08DBC6','#FF8DCE'],startangle=90,autopct='%.2f%%')\n\nplt.subplot(2,2,3)\npatient_type = pd.crosstab(df['PATIENT_TYPE'],df['RESULT'])\n\none = np.array(list(patient_type[1]))\ntwo = np.array(list(patient_type[2]))\nthree = np.array(list(patient_type[3]))\n\nlabel = list(patient_type_csv['DESCRIPCI\u00d3N'].values)[:2]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nPatient Type',\n         size=50,horizontalalignment='center',verticalalignment='center')\nplt.axis('off')\n\nplt.show()","ba1d7bd1":"intubate_vc = pd.value_counts(df['INTUBATE'])\nsi_no_csv = pd.read_csv('..\/input\/covid19-mx\/SI_NO.csv')\n\nlabels = []\nfor i in intubate_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,intubate_vc.values,color=['#DE24FE','#1038BB','#1081BB','#0AE7D1'])\nfor i,j,k in zip(labels,intubate_vc.values,range(4)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n    \nplt.subplot(2,2,2)\nfrac = []\nfor i in intubate_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.02,0.02,0.02,0.5]\n       ,colors=['#DE24FE','#1038BB','#1081BB','#0AE7D1'],autopct='%.2f%%')\n\nplt.subplot(2,2,3)\nintubate = pd.crosstab(df['INTUBATE'],df['RESULT'])\n\none = np.array(list(intubate[1]))\ntwo = np.array(list(intubate[2]))\nthree = np.array(list(intubate[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:3]+[label[-1]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nIntubate',\n         size=50,horizontalalignment='center',verticalalignment='center')\nplt.axis('off')\n\nplt.show()","7d478a3e":"pneumonia_vc = pd.value_counts(df['PNEUMONIA'])\n\nlabels = []\nfor i in pneumonia_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,pneumonia_vc.values,color=['#1038BB','#1081BB','#0AE7D1'])\nfor j,k in zip(pneumonia_vc.values,range(3)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n    \nplt.subplot(2,2,2)\nfrac = []\nfor i in pneumonia_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.02,0.02,0.5]\n       ,colors=['#1038BB','#1081BB','#0AE7D1'],startangle=90,autopct='%.2f%%')\n\nplt.subplot(2,2,3)\npneumonia = pd.crosstab(df['PNEUMONIA'],df['RESULT'])\n\none = np.array(list(pneumonia[1]))\ntwo = np.array(list(pneumonia[2]))\nthree = np.array(list(pneumonia[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)[:3]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nPneumonia',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","b9179415":"age_vc = pd.value_counts(df['AGE'])\n\nfig = plt.figure(figsize=(20,20))\n\nplt.subplot(2,2,1)\ny_values = []\nfor i in range(121):\n    y_values.append(age_vc.values[age_vc.index==i][0])\nplt.bar(age_vc.index,age_vc.values,color='#40E0D0')\n\nplt.subplot(2,2,2)\nage = pd.crosstab(df['AGE'],df['RESULT'])\n\none = np.array(list(age[1]))\ntwo = np.array(list(age[2]))\nthree = np.array(list(age[3]))\n\nplt.bar(age_vc.index.sort_values(), one, color = '#00FFFF')\nplt.bar(age_vc.index.sort_values(), two, color = '#FF7F50', bottom = one)\nplt.bar(age_vc.index.sort_values(), three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,3)\nplt.plot(range(121),y_values,color='#1038BB',lw=6)\nplt.grid('True')\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis Age',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","2127cc07":"nationality_vc = pd.value_counts(df['NATIONALITY'])\nnationality_csv = pd.read_csv('..\/input\/covid19-mx\/NACIONALIDAD.csv')\n\nlabels = []\nfor i in nationality_vc.index:\n    labels.append(nationality_csv[nationality_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,nationality_vc.values,color=['#0AE7D1','#0AE7A3'])\nfor j,k in zip(nationality_vc.values,range(2)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n\nplt.subplot(2,2,2)\nfrac = []\nfor i in nationality_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.1,0.5]\n       ,colors=['#0AE7D1','#0AE7A3'],startangle=90,autopct='%.2f%%')\n\nplt.subplot(2,2,3)\nnationality = pd.crosstab(df['NATIONALITY'],df['RESULT'])\n\none = np.array(list(nationality[1]))\ntwo = np.array(list(nationality[2]))\nthree = np.array(list(nationality[3]))\n\nlabel = list(nationality_csv['DESCRIPCI\u00d3N'].values)[:2]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nNationality',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","cd82ba27":"diabetes_vc = pd.value_counts(df['DIABETES'])\n\nlabels = []\nfor i in diabetes_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,diabetes_vc.values,color=['#0AE7A3','#0AE763','#3DE70A'])\nfor j,k in zip(diabetes_vc.values,range(3)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n    \nplt.subplot(2,2,2)\nfrac = []\nfor i in diabetes_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.02,0.02,0.02]\n       ,colors=['#0AE7A3','#0AE763','#3DE70A'],startangle=90,autopct='%.2f%%')\n\nplt.subplot(2,2,3)\ndiabetes = pd.crosstab(df['DIABETES'],df['RESULT'])\n\none = np.array(list(diabetes[1]))\ntwo = np.array(list(diabetes[2]))\nthree = np.array(list(diabetes[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:2]+[label[-2]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nDiabetes',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","ffb2974d":"copd_vc = pd.value_counts(df['COPD'])\n\nlabels = []\nfor i in copd_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,copd_vc.values,color=['#0AE763','#3DE70A','#A1E70A'])\nfor j,k in zip(copd_vc.values,range(3)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n    \nplt.subplot(2,2,2)\nfrac = []\nfor i in copd_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.2,0,0.2]\n       ,colors=['#0AE763','#3DE70A','#A1E70A'],autopct='%.2f%%')\n\nplt.subplot(2,2,3)\ncopd = pd.crosstab(df['COPD'],df['RESULT'])\n\none = np.array(list(copd[1]))\ntwo = np.array(list(copd[2]))\nthree = np.array(list(copd[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:2]+[label[-2]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nCOPD - Chronic\\nObstructive Pulmonary\\nDisease',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","c949e030":"asthma_vc = pd.value_counts(df['ASTHMA'])\n\nlabels = []\nfor i in asthma_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,asthma_vc.values,color=['#3DE70A','#A1E70A','#DAE70A'])\nfor j,k in zip(asthma_vc.values,range(3)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n    \nplt.subplot(2,2,2)\nfrac = []\nfor i in asthma_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.2,0.1,0.1]\n       ,colors=['#3DE70A','#A1E70A','#DAE70A'],autopct='%.2f%%')\n\nplt.subplot(2,2,3)\nasthma = pd.crosstab(df['ASTHMA'],df['RESULT'])\n\none = np.array(list(asthma[1]))\ntwo = np.array(list(asthma[2]))\nthree = np.array(list(asthma[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:2]+[label[-2]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nAsthma',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","2c3414f2":"inmusupr_vc = pd.value_counts(df['INMUSUPR'])\n\nlabels = []\nfor i in inmusupr_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,inmusupr_vc.values,color=['#A1E70A','#DAE70A','#E7C80A'])\nfor j,k in zip(inmusupr_vc.values,range(3)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n    \nplt.subplot(2,2,2)\nfrac = []\nfor i in inmusupr_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.1,0.2,0.3]\n       ,colors=['#A1E70A','#DAE70A','#E7C80A'],autopct='%.2f%%')\n\nplt.subplot(2,2,3)\ninmusupr = pd.crosstab(df['INMUSUPR'],df['RESULT'])\n\none = np.array(list(inmusupr[1]))\ntwo = np.array(list(inmusupr[2]))\nthree = np.array(list(inmusupr[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:2]+[label[-2]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nImmunosuppression',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","13beb885":"hypertension_vc = pd.value_counts(df['HYPERTENSION'])\n\nlabels = []\nfor i in hypertension_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,hypertension_vc.values,color=['#DAE70A','#E7C80A','#E7930A'])\nfor j,k in zip(hypertension_vc.values,range(3)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n    \nplt.subplot(2,2,2)\nfrac = []\nfor i in hypertension_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.02,0.1,0.1]\n       ,colors=['#DAE70A','#E7C80A','#E7930A'],startangle=90,autopct='%.2f%%')\n\nplt.subplot(2,2,3)\nhypertension = pd.crosstab(df['HYPERTENSION'],df['RESULT'])\n\none = np.array(list(hypertension[1]))\ntwo = np.array(list(hypertension[2]))\nthree = np.array(list(hypertension[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:2]+[label[-2]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nHypertension',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","f4c599f7":"okd_vc = pd.value_counts(df['OTHER_KNOWN_DISEASES'])\n\nlabels = []\nfor i in okd_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,okd_vc.values,color=['#E7C80A','#E7930A','#E7570A'])\nfor j,k in zip(okd_vc.values,range(3)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n\nplt.subplot(2,2,2)    \nfrac = []\nfor i in okd_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.02,0.1,0.2]\n       ,colors=['#E7C80A','#E7930A','#E7570A'],autopct='%.2f%%')\n\nplt.subplot(2,2,3)\nokd = pd.crosstab(df['OTHER_KNOWN_DISEASES'],df['RESULT'])\n\none = np.array(list(okd[1]))\ntwo = np.array(list(okd[2]))\nthree = np.array(list(okd[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:2]+[label[-2]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nOther Known Diseases',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","2dc92154":"cardiovascular_vc = pd.value_counts(df['CARDIOVASCULAR'])\n\nlabels = []\nfor i in cardiovascular_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,cardiovascular_vc.values,color=['#E7930A','#E7570A','#E70A0A'])\nfor j,k in zip(cardiovascular_vc.values,range(3)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n\nplt.subplot(2,2,2)\nfrac = []\nfor i in cardiovascular_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.02,0.05,0.1]\n       ,colors=['#E7930A','#E7570A','#E70A0A'],autopct='%.2f%%')\n    \nplt.subplot(2,2,3)\ncardiovascular = pd.crosstab(df['CARDIOVASCULAR'],df['RESULT'])\n\none = np.array(list(cardiovascular[1]))\ntwo = np.array(list(cardiovascular[2]))\nthree = np.array(list(cardiovascular[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:2]+[label[-2]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nCardiovascular',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","0c41c661":"obesity_vc = pd.value_counts(df['OBESITY'])\n\nlabels = []\nfor i in obesity_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,obesity_vc.values,color=['#E7570A','#E70A0A','#FE243E'])\nfor j,k in zip(obesity_vc.values,range(3)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n    \nplt.subplot(2,2,2)\nfrac = []\nfor i in obesity_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.02,0.05,0.1]\n       ,colors=['#E7570A','#E70A0A','#FE243E'],startangle=90,autopct='%.2f%%')\n\nplt.subplot(2,2,3)\nobesity = pd.crosstab(df['OBESITY'],df['RESULT'])\n\none = np.array(list(obesity[1]))\ntwo = np.array(list(obesity[2]))\nthree = np.array(list(obesity[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:2]+[label[-2]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nObesity',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","78d6d8b3":"kidney_chronic_vc = pd.value_counts(df['KIDNEY_CHRONIC'])\n\nlabels = []\nfor i in kidney_chronic_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,kidney_chronic_vc.values,color=['#E70A0A','#FE243E','#FE2466'])\nfor j,k in zip(kidney_chronic_vc.values,range(3)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n\nplt.subplot(2,2,2)\n    \nfrac = []\nfor i in kidney_chronic_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.1,0.01,0.2]\n       ,colors=['#E70A0A','#FE243E','#FE2466'],autopct='%.2f%%')\n    \nplt.subplot(2,2,3)\nkidney_chronic = pd.crosstab(df['KIDNEY_CHRONIC'],df['RESULT'])\n\none = np.array(list(kidney_chronic[1]))\ntwo = np.array(list(kidney_chronic[2]))\nthree = np.array(list(kidney_chronic[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:2]+[label[-2]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nKidney Chronic',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","2045b112":"smoking_vc = pd.value_counts(df['SMOKING'])\n\nlabels = []\nfor i in smoking_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,smoking_vc.values,color=['#FE243E','#FE2466','#FE2487'])\nfor j,k in zip(smoking_vc.values,range(32)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n    \nplt.subplot(2,2,2)\nfrac = []\nfor i in smoking_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.1,0.02,0.1]\n       ,colors=['#FE243E','#FE2466','#FE2487'],autopct='%.2f%%')\n    \nplt.subplot(2,2,3)\nsmoking = pd.crosstab(df['SMOKING'],df['RESULT'])\n\none = np.array(list(smoking[1]))\ntwo = np.array(list(smoking[2]))\nthree = np.array(list(smoking[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:2]+[label[-2]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nSmoking',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","72638681":"icwoc_vc = pd.value_counts(df['IN_CONTACT_WITH_OTHER_CASE'])\n\nlabels = []\nfor i in icwoc_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,icwoc_vc.values,color=['#FE2466','#FE2487','#FE24BC'])\nfor j,k in zip(icwoc_vc.values,range(3)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n\nplt.subplot(2,2,2)\nfrac = []\nfor i in icwoc_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.02,0.02,0.02]\n       ,colors=['#FE2466','#FE2487','#FE24BC'],startangle=90,autopct='%.2f%%')\n    \nplt.subplot(2,2,3)\nicwoc = pd.crosstab(df['IN_CONTACT_WITH_OTHER_CASE'],df['RESULT'])\n\none = np.array(list(icwoc[1]))\ntwo = np.array(list(icwoc[2]))\nthree = np.array(list(icwoc[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:2]+[label[-1]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nIN CONTACT\\nWITH OTHER CASES',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","37f2cb1f":"icu_vc = pd.value_counts(df['ICU'])\n\nlabels = []\nfor i in icu_vc.index:\n    labels.append(si_no_csv[si_no_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,icu_vc.values,color=['#FE2487','#FE24BC','#FE24FA', '#DE24FE'])\nfor j,k in zip(icu_vc.values,range(4)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n    \nplt.subplot(2,2,2)\nfrac = []\nfor i in icu_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.02,0.02,0.02,0.1]\n       ,colors=['#FE2487','#FE24BC','#FE24FA', '#000000'],startangle=90,autopct='%.2f%%')\n    \nplt.subplot(2,2,3)\nicu = pd.crosstab(df['ICU'],df['RESULT'])\n\none = np.array(list(icu[1]))\ntwo = np.array(list(icu[2]))\nthree = np.array(list(icu[3]))\n\nlabel = list(si_no_csv['DESCRIPCI\u00d3N'].values)\nlabel = label[:3]+[label[-1]]\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'])\nplt.xticks(rotation=90)\n\nplt.subplot(2,2,4)\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nICU',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","d57d4e5a":"result_vc = pd.value_counts(df['RESULT'])\nresult_csv = pd.read_csv('..\/input\/covid19-mx\/RESULTADO.csv')\n\nlabels = []\nfor i in result_vc.index:\n    labels.append(result_csv[result_csv['CLAVE']==i]['DESCRIPCI\u00d3N'].values[0])\n\nplt.figure(figsize=(20,20))\nplt.subplot(2,2,1)\nplt.barh(labels,result_vc.values,color=['#1081BB','#3DE70A','#DE24FE'])\nfor j,k in zip(result_vc.values,range(3)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center')\n\nplt.subplot(2,2,2)\nfrac = []\nfor i in result_vc.values\/879608*100 : \n    frac.append(round(i,2))\n\nplt.pie(frac,labels=labels,explode = [0.02,0.02,0.02]\n       ,colors=['#1081BB','#3DE70A','#DE24FE'],autopct='%.2f%%')\n\nplt.subplot(2,2,(3,4))\nplt.text(x=0.5, y=0.5, s='Attribute Analysis\\nTarget value',size=50,horizontalalignment='center',\n     verticalalignment='center')\nplt.axis('off')\n\nplt.show()","0597ea06":"df['ADMISSION_MONTH'] = df['ADMISSION_DATE'].apply( lambda dateString : datetime.strptime(dateString,'%Y-%m-%d').month )\ndf['SYMPTOM_MONTH'] = df['SYMPTOM_DATE'].apply( lambda dateString : datetime.strptime(dateString,'%Y-%m-%d').month )","00b7c313":"d = df\nd = d.drop(['ADMISSION_DATE','SYMPTOM_DATE','DATE_DECEASE'],axis=1)\nd.head()","e6a4701d":"am_vc = pd.value_counts(df['ADMISSION_MONTH'])\nlabels = ['June','July','May','April','March','January','Feburary']\n\nplt.figure(figsize=(30,30))\nplt.subplot(2,2,(1,2))\nplt.barh(labels,am_vc.values,color='#FE2466')\nfor j,k in zip(am_vc.values,range(7)):\n    plt.annotate(j, xy=(j+3,k), xycoords=\"data\",va='center') \n    \nfrac = []\nfor i in am_vc.values\/879608*100 : \n    frac.append(round(i,2))\n    \nplt.subplot(2,2,3)\nplt.pie(frac,labels=labels,explode=[0.05, 0.01, 0.01, 0.01, 0.01, 0.1, 0.3]\n       ,colors=['#1038BB','#1081BB','#0AE7D1','#0AE7A3','#0AE763','#3DE70A','#A1E70A'],startangle=90,autopct='%.2f%%')\nplt.legend(loc=1)\n          \nplt.subplot(2,2,4)\nam = pd.crosstab(df['ADMISSION_MONTH'],df['RESULT'])\n\none = np.array(list(am[1]))\ntwo = np.array(list(am[2]))\nthree = np.array(list(am[3]))\n\nlabel = ['January','Feburary','March','April','May','June','July']\n\nplt.bar(label, one, color = '#00FFFF')\nplt.bar(label, two, color = '#FF7F50', bottom = one)\nplt.bar(label, three, color = '#FFBF00', bottom = one+two)\nplt.legend(['one','two','three'],loc='upper left')\nplt.xticks(rotation=90)\n\nplt.show()","1ff4922d":"from sklearn import tree\nfrom sklearn.model_selection import GridSearchCV\n\nx = d[['SECTOR','ENTIDAD_UM','GENDER','STATE','PATIENT_TYPE', 'INTUBATE', 'PNEUMONIA',\n       'AGE', 'NATIONALITY', 'DIABETES', 'COPD','ASTHMA', 'INMUSUPR',\n'HYPERTENSION', 'OTHER_KNOWN_DISEASES', 'CARDIOVASCULAR','OBESITY', 'KIDNEY_CHRONIC', 'SMOKING', \n        'IN_CONTACT_WITH_OTHER_CASE','ICU','ADMISSION_MONTH','SYMPTOM_MONTH']]\ny = d['RESULT']\n\nparameters = {'max_depth':range(2,20)}\nclf = GridSearchCV(estimator = tree.DecisionTreeClassifier(), \n                   param_grid = parameters)\nclf.fit(X=x, y=y)\ntree_model = clf.best_estimator_\nprint (clf.best_score_, clf.best_params_)","3a2b6d2b":"pd.DataFrame(clf.cv_results_)","34eb9d88":"clf = GridSearchCV(estimator = tree.DecisionTreeClassifier(), \n                   param_grid = parameters, cv=10)\nclf.fit(X=x, y=y)\ntree_model = clf.best_estimator_\nprint (clf.best_score_, clf.best_params_)","3745cd2e":"pd.DataFrame(clf.cv_results_)","b82478cb":"training = df[df['RESULT']!=3]","04139874":"training.shape","137922cb":"df.shape","82ea0a16":"# data with 2 classes only - not including the pending cases\n\nx = training[['SECTOR','ENTIDAD_UM','GENDER','STATE','PATIENT_TYPE', 'INTUBATE', 'PNEUMONIA',\n       'AGE', 'NATIONALITY', 'DIABETES', 'COPD','ASTHMA', 'INMUSUPR',\n'HYPERTENSION', 'OTHER_KNOWN_DISEASES', 'CARDIOVASCULAR','OBESITY', 'KIDNEY_CHRONIC', 'SMOKING', \n        'IN_CONTACT_WITH_OTHER_CASE','ICU','ADMISSION_MONTH','SYMPTOM_MONTH']]\ny = training['RESULT']\n\nclf1 = GridSearchCV(estimator = tree.DecisionTreeClassifier(), \n                   param_grid = parameters, cv=10)\nclf1.fit(X=x, y=y)\ntree_model = clf1.best_estimator_\nprint (clf1.best_score_, clf1.best_params_)","a26f06e7":"pd.DataFrame(clf1.cv_results_)","604cf72b":"# not included the admission month and symptom month\nx = training[['SECTOR','ENTIDAD_UM','GENDER','STATE','PATIENT_TYPE', 'INTUBATE', 'PNEUMONIA','AGE', 'NATIONALITY',\n              'DIABETES', 'COPD','ASTHMA', 'INMUSUPR','HYPERTENSION', 'OTHER_KNOWN_DISEASES', 'CARDIOVASCULAR',\n              'OBESITY', 'KIDNEY_CHRONIC', 'SMOKING', 'IN_CONTACT_WITH_OTHER_CASE','ICU']]\ny = training['RESULT']\n\nclf2 = GridSearchCV(estimator = tree.DecisionTreeClassifier(), \n                   param_grid = parameters, cv=10)\nclf2.fit(X=x, y=y)\ntree_model = clf2.best_estimator_\nprint (clf2.best_score_, clf2.best_params_)","13409c77":"pd.DataFrame(clf2.cv_results_)","975b51a8":"x = training[['GENDER','PATIENT_TYPE', 'INTUBATE', 'PNEUMONIA','AGE', 'DIABETES',\n              'COPD','ASTHMA', 'INMUSUPR', 'HYPERTENSION', 'OTHER_KNOWN_DISEASES',\n              'CARDIOVASCULAR','OBESITY', 'KIDNEY_CHRONIC', 'SMOKING', \n        'IN_CONTACT_WITH_OTHER_CASE','ICU','ADMISSION_MONTH','SYMPTOM_MONTH']]\ny = training['RESULT']\n\nclf3 = GridSearchCV(estimator = tree.DecisionTreeClassifier(), \n                   param_grid = parameters, cv=10)\nclf3.fit(X=x, y=y)\ntree_model = clf3.best_estimator_\nprint (clf3.best_score_, clf3.best_params_)","81aef551":"pd.DataFrame(clf3.cv_results_)","330f3db9":"clf4 = GridSearchCV(estimator = tree.DecisionTreeClassifier(), \n                   param_grid = parameters, scoring='accuracy', cv=10)\nclf4.fit(X=x, y=y)\ntree_model = clf4.best_estimator_\nprint (clf4.best_score_, clf4.best_params_)","7949600b":"pd.DataFrame(clf4.cv_results_)","86a0a1bd":"clf5 = GridSearchCV(estimator = tree.DecisionTreeClassifier(), \n                   param_grid = parameters, scoring='precision', cv=10)\nclf5.fit(X=x, y=y)\ntree_model = clf5.best_estimator_\nprint (clf5.best_score_, clf5.best_params_)","d07555c4":"tree.plot_tree(tree_model)","eba7decb":"clf6 = GridSearchCV(estimator = tree.DecisionTreeClassifier(), \n                   param_grid = parameters, scoring='recall', cv=10)\nclf6.fit(X=x, y=y)\ntree_model = clf6.best_estimator_\nprint (clf6.best_score_, clf6.best_params_)","0e070cff":"\n**COLUMNS**\n\n* 'SECTOR',\n* 'ENTIDAD_UM', \n* 'GENDER', \n* 'STATE', \n* 'PATIENT_TYPE',\n* 'ADMISSION_DATE', \n* 'SYMPTOM_DATE', \n* 'DATE_DECEASE', \n* 'INTUBATE',\n* 'PNEUMONIA',\n* 'AGE',\n* 'NATIONALITY', \n* 'DIABETES', \n* 'COPD',\n* 'ASTHMA',\n* 'INMUSUPR',\n* 'HYPERTENSION',\n* 'OTHER_KNOWN_DISEASES',\n* 'CARDIOVASCULAR',\n* 'OBESITY',\n* 'KIDNEY_CHRONIC',\n* 'SMOKING',\n* 'IN_CONTACT_WITH_OTHER_CASE',\n* 'RESULT',\n* 'ICU'","e9221f35":"MEANING OF EACH FEATURE\n\nSECTOR : National Healthcare institution that provided care. Refer to SECTOR.csv\n\nENTIDAD_UM : Healthcare institution that provided care Refer to ENTIDADES.csv\n\nSEXO : Gender Refer to SEXO.csv\n\nENTIDAD_RES : State where patient lives Refer to ENTIDADES.csv\n\nTIPO_PACIENTE : Type of attention gave to patient, refer to TIPO_PACIENTE.csv\n\nFECHA_INGRESO Date when patient entered health care institution Format: YYYY-MM-DD\n\nFECHA_SINTOMAS Date when symptoms started Format: YYYY-MM-DD\n\nFECHA_DEF Date of decease Format: YYYY-MM-DD 9999-99-99 means no date\n\nINTUBADO Intubated: check SI_NO file for reference on values\n\nNEUMONIA Pneumonia: check SI_NO file for reference on values\n\nEDAD Age\n\nNACIONALIDAD Nationality\n\nDIABETES Diabetes: check SI_NO file for reference on values\n\nEPOC EPOCH: check SI_NO file for reference on values\n\nASMA Asthma: check SI_NO file for reference on values\n\nINMUSUPR Immunosuppression: check SI_NO file for reference on values\n\nHIPERTENSION Hypertension: check SI_NO file for reference on values\n\nOTRA_CON Other known diseases: check SI_NO file for reference on values\n\nCARDIOVASCULAR Cardiovascular disease: check SI_NO file for reference on values\n\nOBESIDAD Obesity: check SI_NO file for reference on values\n\nRENAL_CRONICA Renal disease: check SI_NO file for reference on values\n\nTABAQUISMO Tabaquism: check SI_NO file for reference on values\n\nOTRO_CASO In contact with other SARS CoV-2 patient: check SI_NO file for reference on values\n\nRESULTADO COVID-19 test result\n\nUCI Intensive care needed?: check SI_NO file for reference on values"}}