{"cell_type":{"7b28ac42":"code","74b847d6":"code","f8272317":"code","e4009c62":"code","80fa348f":"code","bfcf72e9":"code","bb780632":"code","9107b684":"code","88b43547":"code","94473c26":"code","4fb4817d":"code","19486192":"code","4ab49c4a":"code","67a84c46":"markdown","35fb6d65":"markdown"},"source":{"7b28ac42":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","74b847d6":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline\nfrom fastai import *\nfrom fastai.vision import *","f8272317":"df = pd.read_csv('..\/input\/Data_Entry_2017.csv')\ndf.head()","e4009c62":"# Commented as this did not work out.\n\n#data  = ImageDataBunch.from_df(path= Path('..\/input\/'), \n                      #         df = df, \n                             #   label_delim = \"|\", size = 256, bs =8\n                            #   , valid_pct = .1 \n                            #   , label_col='Finding Labels').normalize(imagenet_stats)","80fa348f":"lst_files_003 = Path('..\/input\/images_003\/images').ls()\nlst_files_012 = Path('..\/input\/images_012\/images').ls()\nlst_files = lst_files_003 + lst_files_012","bfcf72e9":"# Filtering the dataset for later use.\nlst_names = list(map(os.path.basename, lst_files))\ndf_filtered = df[df['Image Index'].isin(lst_names)] # Filtered with the files which we are interested in.","bb780632":"def get_label(fname):\n    file_name = (Path(os.path.basename(fname)))\n    df_find = df.loc[df['Image Index'] == str(file_name)]\n    labelcol = 'Finding Labels'\n    retval = df_find[labelcol].values\n    retval = ' '.join(map(str, retval))\n    #print((retval))\n    return((retval))","9107b684":"#get_label('..\/input\/images_003\/images\/00004727_000.png')","88b43547":"il = ImageList.from_folder(path =  Path('..\/input\/images_003\/images')).add(\n    ImageList.from_folder(path =  Path('..\/input\/images_012\/images'))\n)","94473c26":"ll  = list(map(get_label, Path('..\/input\/images_003\/images').ls())) + list(map(get_label, Path('..\/input\/images_012\/images').ls()))","4fb4817d":"sd = il.split_by_rand_pct(0.1) # split data","19486192":"ll = sd.label_from_func(get_label, label_delim = \"|\")","4ab49c4a":"ll","67a84c46":"### This is an attempt to read data from the folders which are deep in the hierarchy using Fast AI Data Block API.","35fb6d65":"Comparing the output with Planet Dataset.\n\nImageDataBunch;\n\nTrain: LabelList (32384 items)\nx: ImageList\nImage (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128)\ny: MultiCategoryList\nhaze;primary,clear;primary,clear;primary,haze;primary;water,agriculture;clear;cultivation;primary;water\nPath: \/kaggle\/input;\n\nValid: LabelList (8095 items)\nx: ImageList\nImage (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128)\ny: MultiCategoryList\nclear;primary;road,clear;primary;water,clear;conventional_mine;habitation;primary;road;water,cloudy,agriculture;clear;cultivation;cultivation;habitation;primary;road;water\nPath: \/kaggle\/input;\n\nTest: None"}}