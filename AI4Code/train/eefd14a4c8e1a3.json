{"cell_type":{"fdd78a35":"code","6b367116":"code","417d07cc":"code","458de8da":"code","b38d1fd4":"code","36a7210e":"code","84555ccc":"code","056ee7eb":"code","cc63ad42":"code","dbeee615":"code","2bcfd741":"code","f9ed444d":"code","0af9bdc4":"code","3ea078be":"code","57c28965":"code","ea8d0f2c":"code","2e320c97":"code","c627b792":"code","04eba312":"code","3b0e7ba3":"code","dbf7c142":"code","253c1cb2":"code","721b9531":"code","dfcd5f60":"code","b3b07794":"code","29c4152d":"code","7309842f":"code","62c3b666":"code","8d7ab299":"code","3a784e2a":"code","254b76b9":"code","906d5e7b":"code","1862a009":"code","3113bcce":"code","06a8df22":"code","5cbf3a3c":"code","04cdb13e":"code","5ce110b0":"code","e7d8b3c0":"code","627919aa":"code","9fff601d":"code","0a5e9685":"code","975ec8d0":"code","3f9b3645":"code","f84b51e9":"code","6ca4a496":"code","f59c9baa":"code","ce285150":"code","4460b1e4":"code","ae85955e":"code","05dfd877":"code","b34331d9":"code","61019ed3":"code","eafcbd91":"code","76f5ba7e":"code","35474d61":"code","81b44652":"code","3927daa9":"code","e1c6bcf2":"code","a93ae9bc":"code","cbe13b85":"code","f07cdfec":"code","8e9e1ca0":"code","7af5df2e":"code","b01d1c3c":"code","b90cbb35":"code","0dd8d7c7":"code","be2b4e57":"code","09f37f28":"code","725dad44":"code","705dfae0":"code","45301d4c":"code","8a20764c":"code","334e389b":"code","e584a1cf":"code","d177a754":"code","418ca481":"code","f9561037":"code","4bbf99fc":"code","ccc87ffc":"code","331a5144":"code","11c9c849":"code","01459355":"code","4597de70":"code","b5b42939":"markdown","dc7ed60d":"markdown","d0777250":"markdown","b544c874":"markdown","53da7cf1":"markdown","5ea3213f":"markdown","a9a3ab99":"markdown","eba73634":"markdown","05436d64":"markdown","51ba875d":"markdown"},"source":{"fdd78a35":"import numpy as np # linear algebra\nimport pandas as pd \nimport matplotlib.pyplot as plt #plotting, math, stats\n%matplotlib inline\nimport seaborn as sns #plotting, regressions, stats","6b367116":"#Dataset from the World Health Organization\nWorld = pd.read_csv(\"..\/input\/httpsourworldindataorgcoronavirussourcedata\/full_data(14).csv\")\n\nplt.figure(figsize=(21,8)) # Figure size\nplt.title('Cases across the world as of April 6, 2020') # Title\nWorld.groupby(\"location\")['total_cases'].max().plot(kind='bar', color='teal')","417d07cc":"World.corr().style.background_gradient(cmap='magma')","458de8da":"df = pd.read_csv('..\/input\/us-counties-covid-19-dataset\/us-counties.csv')\n\n#I droped FIPS column. \n##not relevant for this analysis.\nUSA=df.drop(['fips','county'], axis = 1) \nUSA","b38d1fd4":"plt.figure(figsize=(19,17))\nplt.title('Cases by state') # Title\nsns.lineplot(x=\"date\", y=\"cases\", hue=\"state\",data=USA, palette=\"Paired\")\nplt.xticks(USA.date.unique(), rotation=90) # All values in the x axis rotate 90 degrees\nplt.show()","36a7210e":"##For ease of visualization\nNY=USA.loc[USA['state']== 'New York']\nLA=USA.loc[USA['state']== 'Louisiana']\nWA=USA.loc[USA['state']== 'Washington']\nIL=USA.loc[USA['state']== 'Illinois']\nMich=USA.loc[USA['state']== 'Michigan']\nPUR=USA.loc[USA['state']== 'Puerto Rico']\n","84555ccc":"# Concatenate dataframes \nStates=pd.concat([NY,LA,WA,IL,PUR,Mich]) \n\nStates=States.sort_values(by=['date'], ascending=True)\nStates\n","056ee7eb":"plt.figure(figsize=(15,9))\nplt.title('COVID-19 cases comparison of WA, IL, NY, LA, PR, and Michigan') # Title\nsns.lineplot(x=\"date\", y=\"cases\", hue=\"state\",data=States)\nplt.xticks(States.date.unique(), rotation=90) # All values in the x axis rotate 90 degrees\nplt.show()","cc63ad42":"USAg=USA.groupby(['date']).max()\nUSAg","dbeee615":"USAg=USAg.sort_values(by=['cases'], ascending=True)\nUSAg","2bcfd741":"Vuln = pd.read_csv(\"..\/input\/uncover\/esri_covid-19\/esri_covid-19\/cdcs-social-vulnerability-index-svi-2016-overall-svi-county-level.csv\")","f9ed444d":"Vuln= Vuln[['state', 'e_uninsur', 'epl_pov','epl_unemp','epl_age65','epl_age17','epl_disabl']]","0af9bdc4":"# converting and overwriting values in column \nVuln[\"state\"]=Vuln[\"state\"].str.lower()\nVuln[\"state\"]=Vuln[\"state\"].str.title()","3ea078be":"Vuln.head()","57c28965":"Vuln.describe()","ea8d0f2c":"Vuln.corr().style.background_gradient(cmap='viridis')","2e320c97":"census = pd.read_csv(\"..\/input\/uncover\/us_cdc\/us_cdc\/500-cities-census-tract-level-data-gis-friendly-format-2019-release.csv\")","c627b792":"census=census[['stateabbr','placename', 'geolocation', 'bphigh_crudeprev',\n               'stroke_crudeprev', 'obesity_crudeprev', 'diabetes_crudeprev','arthritis_crudeprev',\n               'cancer_crudeprev', 'casthma_crudeprev', 'copd_crudeprev', 'csmoking_crudeprev', \n               'highchol_crudeprev', 'kidney_crudeprev']]\ncensus","04eba312":"#COPD prevalence\nplt.figure(figsize=(19,7)) # Figure size\ncensus.groupby(\"stateabbr\")['copd_crudeprev'].max().plot(kind='bar', color='olive')","3b0e7ba3":"census=census.replace(to_replace =(\"ND\",\"OK\", \"UT\", 'AK', 'SD','AL','AR'),\n                 value =(\"North Dakota\", \"Oklahoma\", 'Utah', \"Alaska\", \"South Dakota\", \"Alabama\", \"Arkansas\"))","dbf7c142":"census=census.replace(to_replace =(\"NC\",\"OR\", \"NV\", 'AZ', 'SC','CA','CO'),\n                 value =(\"North Carolina\", \"Oregon\", 'Nevada', \"Arizona\", \"South Carolina\", \"California\", \"Colorado\"))","253c1cb2":"census=census.replace(to_replace =(\"MN\",\"WY\", \"WV\", 'WI', 'WA','VT','VA'),\n                 value =(\"Minnessota\", \"Wyoming\", 'West Virginia', \"Wisconsin\", \"Washington\", \"Vermont\", \"Virginia\"))","721b9531":"census=census.replace(to_replace =(\"FL\",\"NE\", \"MT\", 'HI', 'LA','NM','GA','KS'),\n                 value =(\"Florida\", \"Nebraska\", 'Montana', \"Hawaii\", \"Louisiana\", \"New Mexico\", \"Georgia\", \"Kansas\"))","dfcd5f60":"census=census.replace(to_replace =(\"NY\",\"NJ\", \"OH\", 'RI', 'PA','TX','ID','KY'),\n                 value =(\"New York\", \"New Jersey\", 'Ohio', \"Rhode Island\", \"Pennsylvania\", \"Texas\", \"Idaho\", \"Kentucky\"))","b3b07794":"census=census.replace(to_replace =(\"CT\",\"DC\", \"DE\", 'IA', 'IL','IN','MD','MA'),\n                 value =(\"Connecticut\", \"District of Columbia\", 'Delaware', \"Iowa\", \"Illinios\", \"Indiana\", \"Maryland\", \"Massachussetts\"))","29c4152d":"census=census.replace(to_replace =(\"ME\",\"MI\", \"MO\", 'MS', 'TN'),\n                 value =(\"Maine\", \"Michigan\", 'Missouri', \"Mississippi\", \"Tennessee\"))","7309842f":"#arthritis prevalence\nplt.figure(figsize=(19,7)) # Figure size\ncensus.groupby(\"stateabbr\")['arthritis_crudeprev'].max().plot(kind='bar', color='peru')","62c3b666":"census=census.drop(['placename', 'geolocation'], axis = 1) \ncensus = census.rename(columns={'stateabbr': 'state'})","8d7ab299":"census = census.rename(columns={'bphigh_crudeprev': 'high bp prev', 'stroke_crudeprev': 'stroke prev'})\n","3a784e2a":"census=census.rename(columns={'diabetes_crudeprev': 'diabetes prev', 'cancer_crudeprev': 'cancer prev', 'arthritis_crudeprev': 'arthritis prev'})","254b76b9":"census=census.rename(columns={'casthma_crudeprev': 'asthma prev', 'copd_crudeprev': 'copd prev', 'csmoking_crudeprev': 'smoking prev'})","906d5e7b":"census=census.rename(columns={'highchol_crudeprev': 'highChol prev', 'kidney_crudeprev': 'kidney prev'})\ncensus","1862a009":"census.describe()","3113bcce":"census.corr().style.background_gradient(cmap='cividis')","06a8df22":"chronic = pd.read_csv(\"..\/input\/uncover\/us_cdc\/us_cdc\/u-s-chronic-disease-indicators-cdi.csv\")","5cbf3a3c":"# iterating the columns \nfor col in chronic.columns: \n    print(col)","04cdb13e":"chronic=chronic[['locationdesc','topic','question','datavalue']]\n#replace NaNs with zeros in the df\nchronic=chronic.fillna(0)","5ce110b0":"chronic = chronic.rename(columns={'locationdesc': 'state','datavalue': 'rate of illness','topic': 'chronic illness','question': 'specific illness'})","e7d8b3c0":"chronic.head(3)","627919aa":"plt.figure(figsize=(22,6)) # Figure size\nplt.title('US chronic illnesses') # Title\nsns.countplot(chronic['chronic illness'])\nplt.xticks(rotation=45)","9fff601d":"chronic.describe()","0a5e9685":"chronic.corr().style.background_gradient(cmap='cool')","975ec8d0":"rank = pd.read_csv(\"..\/input\/uncover\/county_health_rankings\/county_health_rankings\/us-county-health-rankings-2020.csv\")\n","3f9b3645":"rank=rank[['state','num_deaths', 'percent_female','percent_excessive_drinking', \n           'num_uninsured','percent_vaccinated','percent_black','percent_american_indian_alaska_native',\n           'percent_asian', 'percent_native_hawaiian_other_pacific_islander', 'percent_hispanic', \n           'percent_non_hispanic_white']]\nrank.head()","f84b51e9":"plt.figure(figsize=(16,8)) # Figure size\nplt.title('States pre-COVID19 morbidity ranks') # Title\nrank.groupby(\"state\")['num_deaths'].max().plot(kind='bar', color='darkred')","6ca4a496":"rank.describe()","f59c9baa":"rank.corr().style.background_gradient(cmap='inferno')","ce285150":"stats = pd.read_csv(\"..\/input\/uncover\/covid_tracking_project\/covid-statistics-by-us-states-daily-updates.csv\")\n#replace NaNs with zeros in the df\nstats=stats.fillna(0)\n","4460b1e4":"# iterating the columns \nfor col in stats.columns: \n    print(col)","ae85955e":"stats.drop(['hash', 'fips', 'datechecked'], axis=1, inplace=True)\nstats.head()","05dfd877":"plt.figure(figsize=(14,8)) # Figure size\nplt.title('total tests') # Title\nstats.groupby(\"state\")['totaltestresults'].max().plot(kind='bar', color='steelblue')","b34331d9":"stats=stats[['date', 'state','positive','negative','hospitalized', 'death']]\nstats.head()","61019ed3":"stats=stats.replace(to_replace =\"WA\",\n                 value =\"Washington\")","eafcbd91":"stats=stats.replace(to_replace =\"SC\", \n                 value =\"South Carolina\")","76f5ba7e":"stats=stats.replace(to_replace =(\"NJ\",\"FL\", 'AL', \"TX\", \"OR\"),\n                 value =(\"New Jersey\", \"Florida\", \"Alabama\", \"Texas\", \"Oregon\"))","35474d61":"stats=stats.replace(to_replace =(\"AR\",\"AZ\", \"NY\", \"CA\", \"AK\"),\n                 value =(\"Arkansas\", \"Arizona\", 'New York', \"California\", \"Alaska\"))","81b44652":"stats=stats.replace(to_replace =(\"MT\",\"WI\", \"NC\", 'OH',\"RI\", \"VA\"),\n                 value =(\"Montana\", \"Wisconsin\", 'North Carolina','Ohio', \"Rhode Island\", 'Virginia'))","3927daa9":"stats=stats.replace(to_replace =(\"TN\",\"GA\", \"IL\", 'NH', \"MA\"),\n                 value =(\"Tennessee\", \"Georgia\", 'Illinios', \"New Hampshire\", \"Massachussetts\"))","e1c6bcf2":"stats=stats.replace(to_replace =(\"CO\",\"CT\", \"DC\", 'DE', \"GU\"),\n                 value =(\"Colorado\", \"Connecticut\", 'District of Columbia', \"Delaware\", \"Guam\"))","a93ae9bc":"stats=stats.replace(to_replace =(\"HI\",\"IA\", \"ID\", 'IN', \"KS\", 'KY'),\n                 value =(\"Hawaii\", \"Iowa\", 'Idaho', \"Indiana\", \"Kansas\", \"Kentucky\"))","cbe13b85":"stats=stats.replace(to_replace =(\"LA\",\"MD\", \"MN\", 'MI', \"MO\", 'MS'),\n                 value =(\"Louisiana\", \"Maryland\", 'Minnessota', \"Michigan\", \"Missouri\", \"Missippippi\"))","f07cdfec":"stats=stats.replace(to_replace =(\"ME\",\"NV\", \"WV\", 'NM', 'PA', \"VT\"),\n                 value =(\"Maine\", \"Nevada\", 'West Virginia', \"New Mexico\", \"Pennsylvania\", \"Vermont\"))","8e9e1ca0":"stats=stats.replace(to_replace =(\"ND\",\"OK\", \"UT\", 'PR', 'SD'),\n                 value =(\"North Dakota\", \"Oklahoma\", 'Utah', \"Puerto Rico\", \"South Dakota\"))","7af5df2e":"stats=stats.replace(to_replace =(\"VI\",\"WY\", \"NE\"),\n                 value =(\"Virgin Islands\", \"Wyoming\", \"Nebraska\"))","b01d1c3c":"stats.head(3)","b90cbb35":"stats.describe()","0dd8d7c7":"stats.corr().style.background_gradient(cmap='plasma')","be2b4e57":"# Merging the dataframes                       \na=pd.merge(USA, stats, how ='inner', on =('state', \"date\"))\na","09f37f28":"dfs1=pd.concat([a,rank,chronic], sort=True) \ndfs1.head()","725dad44":"# Merging the dataframes                       \nb=pd.concat([dfs1, Vuln], sort=False) ","705dfae0":"# Merging the dataframes                       \nc=pd.concat([b, census], sort=False) \n","45301d4c":"#replace NaNs with zeros in the df\nc=c.fillna(0)\nc.head()","8a20764c":"# iterating the columns to list their names\nfor col in c.columns: \n    print(col)","334e389b":"# Grouped df by date and state and extract a number of stats from each group\nd=c.groupby(\n   ['date', 'state'], as_index = False\n).agg(\n    {\n         'hospitalized':max,    # max values \n         'cases':max,\n         'deaths': max,\n         'num_uninsured':max, \n         'percent_vaccinated': max, \n         'num_uninsured': max,\n         'percent_american_indian_alaska_native':max,        \n         'percent_asian':max,\n         'percent_black':max,        \n        'percent_excessive_drinking':max,\n        'percent_female':max,\n        'percent_hispanic':max,\n        'percent_native_hawaiian_other_pacific_islander':max,\n        'percent_non_hispanic_white':max,\n        'epl_pov':max,\n        'epl_unemp': max,\n        'epl_age65':max,\n        'epl_age17':max,\n        'epl_disabl':max,\n        'high bp prev':max,\n        'stroke prev':max,\n        'obesity_crudeprev':max,\n        'diabetes prev':max,\n        'arthritis prev':max,\n        'cancer prev':max,\n        'asthma prev':max,\n        'copd prev':max,\n        'smoking prev':max,\n        'highChol prev':max,\n        'kidney prev':max\n         \n    }\n)\nd","e584a1cf":"sub1=d[d.date==0]\nsub2=d[d.date!=0]","d177a754":"sub2=sub2[['state', 'cases', 'deaths', 'hospitalized']]\nsub2.head()","418ca481":"# Merging the dataframes                       \nrisks=pd.merge(sub1, sub2, how ='inner', on ='state')\nrisks=risks.drop(['date'], axis = 1) \n","f9561037":"sum_column = risks[\"hospitalized_x\"] + risks[\"hospitalized_y\"]\nrisks[\"hospitalized\"] = sum_column\n","4bbf99fc":"risks=risks.drop(['hospitalized_x','hospitalized_y'], axis = 1) ","ccc87ffc":"sum_column2 = risks[\"cases_x\"] + risks[\"cases_y\"]\nrisks[\"cases\"] = sum_column2\nsum_column3 = risks[\"deaths_x\"] + risks[\"deaths_y\"]\nrisks[\"deaths\"] = sum_column3","331a5144":"risks=risks.drop(['cases_x','cases_y', 'deaths_x','deaths_y'], axis = 1) \nrisks","11c9c849":"# Grouped df by date and state and extract a number of stats from each group\nr=risks.groupby(\n   ['state'], as_index = False).agg(    \n    {\n         'hospitalized':max,    # max values \n         'cases':max,\n         'deaths': max,\n         'num_uninsured':max, \n         'percent_vaccinated': max, \n         'num_uninsured': max,\n         'percent_american_indian_alaska_native':max,        \n         'percent_asian':max,\n         'percent_black':max,        \n        'percent_excessive_drinking':max,\n        'percent_female':max,\n        'percent_hispanic':max,\n        'percent_native_hawaiian_other_pacific_islander':max,\n        'percent_non_hispanic_white':max,\n        'epl_pov':max,\n        'epl_unemp': max,\n        'epl_age65':max,\n        'epl_age17':max,\n        'epl_disabl':max,\n        'high bp prev':max,\n        'stroke prev':max,\n        'obesity_crudeprev':max,\n        'diabetes prev':max,\n        'arthritis prev':max,\n        'cancer prev':max,\n        'asthma prev':max,\n        'copd prev':max,\n        'smoking prev':max,\n        'highChol prev':max,\n        'kidney prev':max\n         \n    }\n)\n\nr","01459355":"r.describe()","4597de70":"r.corr().style.background_gradient(cmap='cubehelix')","b5b42939":"**df on COVID-19 Statistics**","dc7ed60d":"**What is the situation worldwide? Where does the US stand?**","d0777250":"**df on VULNERABILITIES in the US**","b544c874":"**df on chronic illnesses in the US**","53da7cf1":"The longest line represents the world's total, not a specific country.   \nIf the reported data is 100% correct and properly reported, the **US** has a significantly high total of cases.   \n","5ea3213f":"# What could be the risks across the US?   \nIn combining some of the dataframes provided by ROCHE, I visualize below some factors along with #COVID19 data.   \nFurther statistical analysis would be needed to reach scientific conclusion in this data.   \nHowever, the presentation here could help in identifying future research angles relating to risk factors and   \nCOVID-19.   ","a9a3ab99":"While not verified, there could be correlation among risk factors presented above.   \nFor example, there seems to be correlation between deaths, cases, and hospitalization.      \nHowever, a statistically-sound correlation does not mean causation.   ","eba73634":"df on **illness prevalence**","05436d64":"**df of illness ranking**","51ba875d":"# What are the risk correlated to COVID-19?  \n**US-specific population risk**  \nBy: Myrna M Figueroa Lopez\n> Final: Apr 7 2020"}}