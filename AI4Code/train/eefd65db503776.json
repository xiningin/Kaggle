{"cell_type":{"ee2e8f06":"code","8131a190":"code","76bd71e1":"markdown"},"source":{"ee2e8f06":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8131a190":"import matplotlib.pyplot as plt\nfrom scipy import stats\n\n#x=no. of years of cars\nx = [5,7,8,7,2,17,2,9,4,11,12,9,6]\n\n#y=speed of the car\ny = [99,86,87,88,111,86,103,87,94,78,77,85,86]\n\n\nplt.scatter(x, y)\n\nplt.show()\n\n\nslope, intercept, r, p, std_err = stats.linregress(x, y)\n\ndef myfunc(x):\n  return slope * x + intercept\n\nmymodel = list(map(myfunc, x))\n\nplt.scatter(x, y)\nplt.plot(x, mymodel)\nplt.show()\n\nspeed = myfunc(13)\n\nprint(\"Speed of car after 13 years:\")\nprint(speed)","76bd71e1":"Linear regression uses the relationship between the data-points to draw a straight line through all them.\n\nThis line can be used to predict future values.\n\nExample: \n\nThe x-axis represents age, and the y-axis represents speed. We have registered the age and speed of 13 cars as they were passing a tollbooth.\n\nLet us see if the data we collected could be used in a linear regression:"}}