{"cell_type":{"acbdb1bf":"code","d4819de2":"code","e38b30c4":"code","94b0b8e8":"code","f8fb22ba":"code","c35011f4":"code","5f5ffde6":"code","4ee3ebc4":"code","9a62039b":"code","00c50836":"code","35da7916":"code","9faf79f6":"code","cb5fae78":"code","8c2667a5":"code","104aec65":"code","a4c16014":"code","987d08a2":"code","8ec93885":"code","d4ff8bd6":"code","fae4f5cc":"code","cce9c08e":"code","ec00c01a":"code","a9415761":"code","d4947325":"markdown","f1859472":"markdown","c6a06e6c":"markdown","85fb1237":"markdown","a3166887":"markdown","1de51e51":"markdown"},"source":{"acbdb1bf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d4819de2":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","e38b30c4":"df=pd.read_csv('..\/input\/housesalesprediction\/kc_house_data.csv')\ndf","94b0b8e8":"df.info()","f8fb22ba":"df.shape","c35011f4":"df.isna().sum()","5f5ffde6":"df.duplicated().sum()","4ee3ebc4":"for i in df.iloc[:,3:].columns:\n    sns.boxplot(x=df[i],data=df,palette='rainbow')\n    \n    plt.show()","9a62039b":"l=[3,4,5,10,11,12,13,18,19,20]\ndef Outlier(data):\n    for column in data.iloc[:,l].columns:\n        if data[column].dtype!='str':\n            Q1=np.percentile(data[column],25)\n            Q3=np.percentile(data[column],75)\n            IQR= Q3-Q1\n            lower=Q1-(1.5* IQR)\n            upper=Q3+(1.5* IQR)\n            data.loc[:,column] =np.where(data[column].values>upper,upper,data[column].values)\n            data.loc[:,column] =np.where(data[column].values<lower,lower,data[column].values)\n    return data\n \ndf1=Outlier(df)\ndf1.head()","00c50836":"for i in df1.iloc[:,3:].columns:\n    sns.boxplot(x=df1[i],data=df1,palette='rainbow')\n    \n    plt.show()","35da7916":"# heatmap\n\ncorr = df1.corr()\nplt.figure(figsize=(14,14))\nsns.heatmap(corr, annot=True, fmt= '.2f',annot_kws={'size': 15}, cmap= 'coolwarm')\nplt.show()\nprint(corr)","9faf79f6":"# Plot a histogram\n\ndf.price.hist(bins=30, alpha=0.5)\nplt.show()","cb5fae78":"from sklearn.model_selection import train_test_split","8c2667a5":"X=df1.drop(['id','date','price','zipcode'],axis=1)\ny=df1['price']\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=2020)","104aec65":"#Scaling the data\n\nfrom sklearn.preprocessing import MinMaxScaler\n\nmin_max=MinMaxScaler()\n\nX_train_transformed=min_max.fit_transform(X_train)\n\nX_test_transformed=min_max.transform(X_test)","a4c16014":"from sklearn.neighbors import KNeighborsRegressor\n\nclf=KNeighborsRegressor(n_neighbors=5,metric='euclidean')","987d08a2":"clf.fit(X_train_transformed,y_train)","8ec93885":"pred1=clf.predict(X_test_transformed)\npred1","d4ff8bd6":"train_pred1=clf.predict(X_train_transformed)\ntrain_pred1","fae4f5cc":"#R2\n\nfrom sklearn.metrics import r2_score\nprint('R^2:',r2_score(y_test,pred1))\nprint('R^2:',r2_score(y_train,train_pred1))","cce9c08e":"#MSE\n\nfrom sklearn.metrics import mean_squared_error\nprint('MSE:',mean_squared_error(y_test,pred1))\nprint('MSE:',mean_squared_error(y_train,train_pred1))","ec00c01a":"#RMSE\n\nprint('RMSE:',np.sqrt(mean_squared_error(y_test,pred1)))\nprint('RMSE:',np.sqrt(mean_squared_error(y_train,train_pred1)))","a9415761":"#MAE\n\nfrom sklearn.metrics import mean_absolute_error\nprint('MAE:',mean_absolute_error(y_test,pred1))\nprint('MAE:',mean_absolute_error(y_train,train_pred1))","d4947325":"**Building A Model**","f1859472":"**Treating Outliers**","c6a06e6c":"**Splitting Data**","85fb1237":"**Reading Data**","a3166887":"**Evaluating The Model**","1de51e51":"**Importing Libraries**"}}