{"cell_type":{"2cc44676":"code","55cae479":"code","a9abb190":"code","a49bafd9":"code","3477d278":"code","5f733cb7":"code","2b2c95e4":"code","871fd2c2":"code","33e9d3ba":"code","17aa9317":"code","5cac966c":"code","6fcbb10b":"code","559d3a92":"code","2e2a672e":"code","d52c3bf1":"code","64f87354":"markdown","d7abee03":"markdown","a5ecb763":"markdown","68cdf6a3":"markdown","baad95c7":"markdown"},"source":{"2cc44676":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import model_selection\nfrom sklearn.linear_model import ElasticNet\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","55cae479":"df_train = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/test.csv')\ndf_submission = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/sample_submission.csv')","a9abb190":"X_train = df_train[['signal']].values\ny_train = df_train['open_channels'].values\nX_test = df_test[['signal']].values\n\ndf_train.head()","a49bafd9":"plt.figure(figsize=(12, 6))\nsns.countplot(x='open_channels', data=df_train)","3477d278":"plt.figure(figsize=(12, 6))\nsns.kdeplot(df_train['signal'])","5f733cb7":"plt.figure(figsize=(12, 6))\nsns.distplot(df_train['signal'])","2b2c95e4":"plt.figure(figsize=(12, 12))\nsns.jointplot(x='time', y='signal', data=df_train, kind='hex', gridsize=20)","871fd2c2":"%%time\n\nmodel = ElasticNet(alpha=0.9, l1_ratio=0.1)\nmodel.fit(X_train, y_train)","33e9d3ba":"%%time \npreds = model.predict(X_test)\n\n# preds_reshaped = np.reshape(preds, (int(len(preds)\/10), -1))\n# preds_reduced_mean = np.mean(preds_reshaped, axis=1)\n#preds_around = np.around(preds, decimals=1).astype(int)\npreds_around = np.rint(preds).astype(int)","17aa9317":"df_submission['open_channels'] = preds_around\ndf_submission[df_submission['open_channels']<0]['open_channels'] = 0\ndf_submission.head()","5cac966c":"sns.countplot(x='open_channels', data=df_train)","6fcbb10b":"sns.countplot(x='open_channels', data=df_submission)","559d3a92":"df_submission.head(10)","2e2a672e":"df_submission['time'] = [ \"{:.4f}\".format(df_submission['time'].values[x]) for x in range(2000000)]\ndf_submission.head(10)","d52c3bf1":"df_submission.to_csv(\"submission.csv\", index=False)","64f87354":"# 2. Plot","d7abee03":"# 1. Introduction","a5ecb763":"# 3. Fit Model","68cdf6a3":"# Ion Switching\n- Identify the number of channels open at each time point\n\nIn this competition, you will be predicting the number of `open_channels` present, based on electrophysiological signal data.\n\nIMPORTANT: While the time series appears continuous, the data is from discrete batches of 50 seconds long 10 kHz samples (500,000 rows per batch). In other words, the data from 0.0001 - 50.0000 is a different batch than 50.0001 - 100.0000, and thus discontinuous between 50.0000 and 50.0001.\n\nYou can find detailed information about the data from the paper Deep-Channel uses deep neural networks to detect single-molecule events from patch-clamp data.\n\n## Contents\n1. [Introduction](#1.-Introduction)\n2. [Plot](#2.-Plot)\n3. [Fit Model](#3.-Fit-Model)\n4. [Submission](#4.-Submission)","baad95c7":"# 4. Submission\n\nIf you use just to_csv() function you will meet an error with 'time'\nbecause it will lose last 0\n\nexample 500.0010 -> 500.001\n\n```\nERROR: Unable to find 200000 required key values in the 'time' column\nERROR: Unable to find the required key value '500.0010' in the 'time' column\n```"}}