{"cell_type":{"b575fdf0":"code","dcaba04b":"code","2d8eacf9":"code","97318de1":"code","5cb80133":"code","2886ffa3":"code","4e79f6f5":"code","ce3bb846":"code","5063396e":"code","311a22f1":"code","4a930183":"code","ca6fe0f9":"code","bb645580":"markdown","98bdae19":"markdown","34fe0aa6":"markdown"},"source":{"b575fdf0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","dcaba04b":"import re\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport nltk\nnltk.download('stopwords')\n\nfrom nltk.corpus import stopwords\nfrom wordcloud import WordCloud\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom textblob import TextBlob\n\n\n# setting display options\npd.set_option('display.max_colwidth', 900, \"display.max_columns\", 30, \"display.max_rows\", 140)","2d8eacf9":"tweets = pd.read_csv(\n    '\/kaggle\/input\/squid-game-netflix-twitter-data\/tweets_v8.csv', \n    usecols=['user_location', 'date', 'text']\n)\ntweets['date'] = pd.to_datetime(tweets['date'])\n\ntweets.head()","97318de1":"display(tweets.info())","5cb80133":"# prepare stopwords\nstopwords = set(stopwords.words('english'))\n\n#create the function of nlp to remove some characters\ndef nlp(text):\n    corpus = []\n    text = re.sub('\\\\n', ' ', text) # remove the newline code\n    text = re.sub('http\\S+', '', text) # remove url\n    text = re.sub('#\\w+', '', text) # remove hashtags\n    text = re.sub('@[^\\s]+', '', text) # remove @twitter_id\n    text = text.split()\n    corpus = [txt for txt in text if not txt in stopwords]\n    return ' '.join(corpus)","2886ffa3":"tweets['text_nlp'] = tweets['text'].apply(lambda x: nlp(x))\ntweets['text_nlp'].head(10)","4e79f6f5":"cloud = ' '.join([tweet for tweet in tweets['text_nlp']])\nwc = WordCloud(max_words=2000, width=1600, \\\n               height=800, stopwords=stopwords).generate(cloud)\n\nplt.figure(figsize=(10, 8))\nplt.title('WordCloud in all sentece', fontsize=25)\nplt.axis('off')\nplt.imshow(wc , interpolation = 'bilinear')\nplt.show()","ce3bb846":"fig = plt.figure(figsize=(10,5))\n\nword = tweets['text_nlp'].str.split().apply(lambda x: [len(i) for i in x])\nsns.histplot(word.apply(lambda x: np.mean(x)))\nplt.title('Average word len in each text', fontsize=25)\n\nplt.tight_layout()\nplt.xlim([0, 20])\nplt.show()","5063396e":"fig = plt.figure(figsize=(10,5))\n\nword = tweets['text_nlp'].str.split().apply(lambda x: len(x))\nsns.histplot(word.apply(lambda x: np.mean(x)), bins=30)\nplt.title('Average words len in each text', fontsize=25)\n\nplt.tight_layout()\nplt.xlim([0, 20])\nplt.show()","311a22f1":"def polarity(text):\n    testimonial = TextBlob(text)\n    polarity = testimonial.sentiment.polarity\n    return polarity\n\n\ndef subjectivity(text):\n    testimonial = TextBlob(text)\n    subjectivity = testimonial.subjectivity\n    return subjectivity\n\n\ndef senti(text, polarity_threshold=0.0):\n    testimonial = TextBlob(text)\n    senti = testimonial.sentiment.polarity\n    \n    if senti > polarity_threshold:\n        return 'Positive'\n    elif np.abs(senti) == polarity_threshold:\n        return 'Neutral'\n    else:\n        return 'Negative'\n    \n\ntweets['polarity'] = tweets['text_nlp'].apply(lambda x: polarity(x))\ntweets['subjectivity'] = tweets['text_nlp'].apply(lambda x: subjectivity(x))\ntweets['sentiment'] = tweets['text_nlp'].apply(lambda x: senti(x))\ntweets.head()","4a930183":"sns.countplot(x='sentiment', data=tweets)","ca6fe0f9":"fig, ax = plt.subplots(1, 3, figsize=(18, 8))\nsentiments = tweets['sentiment'].unique()\nfor i, senti in enumerate(sentiments):\n    senti_df = tweets.query('sentiment==@senti')\n    cloud = ' '.join([tweet for tweet in senti_df['text_nlp']])\n    wc = WordCloud(max_words=2000, width=1600, \\\n                   height=800).generate(cloud)\n\n    ax[i].set_title(senti, fontsize=25)\n    ax[i].axis('off')\n    ax[i].imshow(wc , interpolation = 'bilinear')\n    \nplt.tight_layout()\nplt.show()","bb645580":"# instant Conclusion\n\nThose who tweets positively tends to post 'Squid game', 'Red(green) light'. So I guess they want others to tell the seen which they are impressive, haha.","98bdae19":"# Using TextBlob then take a look at casual sentiment","34fe0aa6":"# WordCloud"}}