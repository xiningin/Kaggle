{"cell_type":{"6582e3ad":"code","c3cdafbc":"code","06f8dd6b":"code","50d22837":"code","8718bf04":"code","33c6baa3":"code","bb53d764":"code","6094fed6":"code","6255b84e":"code","2c2e4a86":"code","e36fd131":"code","18185b76":"code","a2a9bd12":"code","596d3b37":"code","3032cf92":"code","8d13271c":"markdown"},"source":{"6582e3ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c3cdafbc":"!pip install lazypredict","06f8dd6b":"!pip install pandas -U","50d22837":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nimport lazypredict\nfrom lazypredict.Supervised import LazyClassifier","8718bf04":"data = pd.read_csv('..\/input\/company-bankruptcy-prediction\/data.csv')","33c6baa3":"data.head(10)","bb53d764":"data.info()","6094fed6":"data.shape","6255b84e":"data.describe()","2c2e4a86":"data.isnull().sum()","e36fd131":"X = data.drop(['Bankrupt?'],axis = 1)\ny = data['Bankrupt?']","18185b76":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=44)","a2a9bd12":"#Splitted Data\nprint('X_train shape is ' , X_train.shape)\nprint('X_test shape is ' , X_test.shape)\nprint('y_train shape is ' , y_train.shape)\nprint('y_test shape is ' , y_test.shape)","596d3b37":"LC = LazyClassifier(verbose=0,ignore_warnings=True, custom_metric=None)\nmodel,predictions = LC.fit(X_train, X_test, y_train, y_test)","3032cf92":"predictions","8d13271c":"#### Starting off with installing Lazypredict!"}}