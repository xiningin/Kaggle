{"cell_type":{"8ce28876":"code","6a9f7020":"code","402129e0":"code","b465034f":"code","d8843539":"code","bb9a4eb8":"code","511903bf":"code","d3984d73":"code","0128690a":"code","7eb93d74":"code","93712fd7":"code","cf148622":"code","24234b0e":"markdown","33c0a930":"markdown","59f1d36d":"markdown","f1093e83":"markdown","bfa2b6e4":"markdown","5c232393":"markdown","da8f8454":"markdown","d5393dbf":"markdown"},"source":{"8ce28876":"import geopandas as gpd\n\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.geospatial.ex1 import *","6a9f7020":"loans_filepath = \"..\/input\/geospatial-learn-course-data\/kiva_loans\/kiva_loans\/kiva_loans.shp\"\n\n# Your code here: Load the data\nworld_loans = gpd.read_file(loans_filepath)\n\n# Check your answer\nq_1.check()\n\n# Uncomment to view the first five rows of the data\n#world_loans.head()","402129e0":"world_loans.head()","b465034f":"# This dataset is provided in GeoPandas\nworld_filepath = gpd.datasets.get_path('naturalearth_lowres')\nworld = gpd.read_file(world_filepath)\nworld.head()","d8843539":"import matplotlib.pyplot as plt","bb9a4eb8":"# Your code here\n\n\nfig, ax = plt.subplots(figsize=(16, 16))\nworld.plot(ax=ax,color='green')\nworld_loans.plot(ax=ax, color=\"C1\")\nfig.tight_layout()\n# Uncomment to see a hint\n#q_2.hint()","511903bf":"# Get credit for your work after you have created a map\nq_2.check()\n\n# Uncomment to see our solution (your code may look different!)\n#q_2.solution()","d3984d73":"# Your code here\nPHL_loans = world_loans.loc[world_loans.country==\"Philippines\"]\n\n# Check your answer\nq_3.check()","0128690a":"# Load a KML file containing island boundaries\ngpd.io.file.fiona.drvsupport.supported_drivers['KML'] = 'rw'\nPHL = gpd.read_file(\"..\/input\/geospatial-learn-course-data\/Philippines_AL258.kml\", driver='KML')\nPHL.head()","7eb93d74":"# Your code here\n\nfig, ax = plt.subplots(figsize=(16, 16))\nPHL.plot(ax=ax,color='green')\nPHL_loans.plot(ax=ax, color=\"C1\")\nfig.tight_layout()\n# Uncomment to see a hint\n#q_4.a.hint()","93712fd7":"# Get credit for your work after you have created a map\nq_4.a.check()\n\n# Uncomment to see our solution (your code may look different!)\n#q_4.a.solution()","cf148622":"# View the solution (Run this code cell to receive credit!)\nq_4.b.solution()","24234b0e":"### 4) Understand loans in the Philippines.\n\nRun the next code cell without changes to load a GeoDataFrame `PHL` containing boundaries for all islands in the Philippines.","33c0a930":"Can you identify any islands where it might be useful to recruit new Field Partners?  Do any islands currently look outside of Kiva's reach?\n\nYou might find [this map](https:\/\/bit.ly\/2U2G7x7) useful to answer the question.","59f1d36d":"**[Geospatial Analysis Home Page](https:\/\/www.kaggle.com\/learn\/geospatial-analysis)**\n\n---\n","f1093e83":"Use the `PHL` and `PHL_loans` GeoDataFrames to visualize loans in the Philippines.","bfa2b6e4":"### 1) Get the data.\n\nUse the next cell to load the shapefile located at `loans_filepath` to create a GeoDataFrame `world_loans`.  ","5c232393":"### 3) Select loans based in the Philippines.\n\nNext, you'll focus on loans that are based in the Philippines.  Use the next code cell to create a GeoDataFrame `PHL_loans` which contains all rows from `world_loans` with loans that are based in the Philippines.","da8f8454":"Use the `world` and `world_loans` GeoDataFrames to visualize Kiva loan locations across the world.","d5393dbf":"### 2) Plot the data.\n\nRun the next code cell without changes to load a GeoDataFrame `world` containing country boundaries."}}