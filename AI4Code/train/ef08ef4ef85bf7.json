{"cell_type":{"de274586":"code","8e7e5bbd":"code","cf26c44e":"code","020b17af":"code","9ffb1f76":"code","b1df3600":"code","e623ce01":"code","e7f1c6fe":"code","7d11cf71":"code","96b009b4":"code","6133b755":"code","bfb3f6f3":"code","09bd158e":"code","8f4e122e":"code","90dfb5a9":"code","12c3a654":"code","f84061cc":"code","f60cacea":"code","12ed1f15":"code","5af1bf3a":"code","0d2ec749":"code","d34df6e7":"code","afbd74bf":"code","47f5dd21":"code","befecc5a":"code","65db8625":"code","263e95ce":"code","d5f9db79":"code","d91daebf":"code","d16bde55":"code","3bb3a3e0":"code","603cc712":"code","43530821":"code","28f4abc7":"code","d8729a01":"code","a65150b5":"code","90fb218e":"code","256e4641":"code","6144ae6a":"code","81981d61":"markdown"},"source":{"de274586":"import pandas as pd\npd.set_option('display.max_columns', 500)\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","8e7e5bbd":"dfBase = pd.read_csv('..\/input\/Document.csv' #Read the Data Set From  CSV File || Otomobil.csv Dosyam\u0131z\u0131 Okuduk\n                     , names=['symboling','normalized-losses','make','fuel-type'\n                              ,'aspiration','num-of-doors','body-style','drive-wheels'\n                              ,'engine-location','wheel-base','length','width','height'\n                              ,'curb-weight','engine-type','num-of-cylinders','engine-size'\n                              ,'fuel-system','bore','stroke','compression-ratio','horsepower'\n                              ,'peak-rpm','city-mpg','highway-mpg','price'])","cf26c44e":"avg_mpg=((dfBase['city-mpg']+dfBase['highway-mpg'])\/2)  \n#\u015eehir \u0130\u00e7i Ve Uzun Yol Yak\u0131t T\u00fcketimi \u0130le Arac\u0131n Ortalama Yak\u0131t T\u00fcketimini Nitelik Olarak T\u00fcrettik.\n#Derived quality (city-mpg+highway-mpg)\/2 equals average fuel consumption\ndfBase.insert(25,'avg-mpg',avg_mpg)\ndfBase.head()","020b17af":"dfBase.shape #rows and columns of data set  || veri setimizin sat\u0131r ve s\u00fctun say\u0131s\u0131n\u0131 verir.","9ffb1f76":"dfBase.head() #let's Take a look at the first 5 data || Verilerimize Bir G\u00f6z Atal\u0131m(Ba\u015ftan 5 Adet'i)","b1df3600":"dfBase.tail()#let's Take a look at the last 5 data || Verilerimize Bir G\u00f6z Atal\u0131m(Sondan 5 Adet'i)","e623ce01":"dfBase.info()\n#We see simple information  || Verimiz ile ilgili basit bir bilgi alal\u0131m","e7f1c6fe":"#Data Preprocessing || Veri \u00d6n \u0130\u015fleme\ndf = dfBase.apply(lambda x: x.replace('?',np.NaN)) #global variable is assigned to free spaces || eksik de\u011ferlerimizi NaN \u00c7evirelim\ndf.isnull().sum() #How many miss values we have || Eksik De\u011ferlerimizin Da\u011f\u0131l\u0131m\u0131n\u0131  Ve Hangi Kolonlarda Olduklar\u0131 G\u00f6relim","7d11cf71":"df.hist(figsize=(16, 20), bins=50, xlabelsize=8, ylabelsize=8) \n#Let's look at the distribution of our data and detect anomalies \n#Verilerimizin Da\u011f\u0131l\u0131m\u0131na Bir Bakal\u0131m Ve Buradan Anomali Tespitlerini Yapabiliriz.    ","96b009b4":"df.describe() \n#Get basic information about data || Veri ile ilgili basit temel bilgiye g\u00f6z atal\u0131m","6133b755":"df.corr() \n#Korelasyona Bakal\u0131m Korelasyon Projemize Ciddi Y\u00f6n Verir. \n#Let's look at the correlation, the correlation is very important for our project\n\n#Hangi Verilerin Bizim i\u00e7in daha k\u0131ymetli oldu\u011funu,\n#correlation shows which one data is so important for our\n \n#Ay\u0131rt edici s\u00fctunlar\u0131,veriler aras\u0131ndaki ili\u015fkinin oran\u0131n\u0131 ve y\u00f6n\u00fcn\u00fc verir\n#correlation shows the relationships and direction between the datas","bfb3f6f3":"data_corr=df.corr()\n#Let's increase the visuality by drawing a heat map\n#Is\u0131 Haritas\u0131 \u00c7izerek G\u00f6rselli\u011fi Art\u0131ral\u0131m \nsns.heatmap(data_corr , vmax=.8, square=True) \nplt.title(\"Correlation of Data || Verilerin Koralesyonu\") #Map Title || Haritan\u0131n Ba\u015fl\u0131\u011f\u0131\nplt.style.use('dark_background')\nplt.show()","09bd158e":"#We use the imputer class to fill in the missing values with the mean value\n#Eksik Verilerimizi Ortalama De\u011ferler \u0130le Doldurmak \u0130\u00e7in Sklearn K\u00fct\u00fcphanesi Alt\u0131ndan Imputer import ediyoruz\nfrom sklearn.preprocessing import Imputer\n#We will fill missing value with a mean || Eksik Verileri Ortalama Stratejisi Kullanarak Dolduraca\u011f\u0131z\nimp = Imputer(missing_values='NaN', strategy='mean' )\ndf[['normalized-losses','bore','stroke','horsepower','peak-rpm','price']] = imp.fit_transform(df[['normalized-losses',\n                                                                                                      'bore','stroke','horsepower','peak-rpm','price']])\ndf.head() ","8f4e122e":"df[df.isnull().any(axis=1)] #Is there another null value? || Eksik Verimiz Kalm\u0131\u015f M\u0131 Kontrol Ediyoruz","90dfb5a9":"df[\"num-of-doors\"].value_counts() #Let's fill the doors count with the most repetitive value\n#NaN olan kap\u0131 say\u0131lar\u0131n\u0131 en \u00e7ok tekrar eden de\u011fer ile doldural\u0131m yani 4 \u0130le","12c3a654":"df['num-of-doors'] = df['num-of-doors'].fillna('four') #We have accepted the empty values as a 4-door car\n#Eksik De\u011ferlerimizi En \u00c7ok Tekrar Eden De\u011fer \u0130le Doldurduk","f84061cc":"#we can show categorical columns as numerical data using dictionary for computer(algorithms and normalization)\n#kategorik veriler say\u0131sal verilere d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcr bu i\u015flem bilgisayar i\u00e7in yap\u0131l\u0131r(algoritmalar i\u00e7in ve normalizasyon i\u00e7in)\ndf['num-of-cylinders'].unique() #Non Repetitive Value || Tekrars\u0131z Uniq De\u011ferler","f60cacea":"df['num-of-doors']=df['num-of-doors'].map({'two':2,'four':4}) #categorical datas convert numerical datas \n                                                              #kategorik verileri say\u0131sal verilere d\u00f6n\u00fc\u015ft\u00fcrd\u00fck\ndf['num-of-cylinders']=df['num-of-cylinders'].map({'two':2,'three':3,'four':4,'five':5,'six':6, 'eight':8,'twelve':12})\ndf.head()","12ed1f15":"#Which car is the most sold? let's see!\n#Ara\u00e7lar\u0131n Sat\u0131\u015f Say\u0131lar\u0131n\u0131 g\u00f6rsel olarak g\u00f6relim\nplt.figure(figsize=(10, 5))\n#plt.style.use('dark_background')\nsns.countplot(x='make', data=df)\nplt.xticks(rotation='vertical')\nplt.title('Manufacturer')\nplt.show()","5af1bf3a":"for col in ['make','fuel-type','aspiration','body-style',\n'drive-wheels','engine-location','engine-type','fuel-system']:\n    df[col] = df[col].astype('category') #Veri Tipini katerogiye d\u00f6n\u00fc\u015ft\u00fcr\u00fcyoruz || Data Type Convert category\n\ncat_df = df.select_dtypes(include=['category']).copy()\nnum_df= df.select_dtypes(exclude=['category']).copy() \n\ndf.dtypes","0d2ec749":"cat_df.head()","d34df6e7":"num_df.head()","afbd74bf":"#(engine-size,curb-weight) and price have a positive high corelation.let's see\n#motor hacmi,ara\u00e7 a\u011f\u0131rl\u0131\u011f\u0131 ile fiyat aras\u0131nda pozitif y\u00f6nl\u00fc ili\u015fki mevcut bunlar\u0131 g\u00f6sterelim\ndf_dum = pd.get_dummies(cat_df, columns= cat_df.columns)\nnum_df.corr()","47f5dd21":"sns.lmplot('price',\"engine-size\",data=df) #Bu \u0130li\u015fkiyi G\u00f6rsel Olarak G\u00f6relim\n#Let's see this relationship visually","befecc5a":"sns.lmplot('price',\"curb-weight\",data=df) #Bu \u0130li\u015fkiyi G\u00f6rsel Olarak G\u00f6relim\n#Let's see this relationship visually","65db8625":"Q1 = df.quantile(0.25) #\u00c7eyrek De\u011ferleri alal\u0131m ve \u00e7eyrekler a\u00e7\u0131kl\u0131\u011f\u0131n\u0131 Hesaplayal\u0131m Ve B\u00f6ylece U\u00e7 De\u011ferleri Bulup silebiliriz.\n              #find quarter values and Let's calculate the Interquartile range so we can find and delete the outliers values\n\nQ3 = df.quantile(0.75)\nIQR = Q3-Q1\nprint(1.5*IQR)","263e95ce":"print(\"Upper Outliers\") #Upper Outliers || \u00dcst U\u00e7 De\u011fer Hesapland\u0131\nprint(\"------------------------\")\nprint(Q1-IQR)\nprint(\"------------------------\")\nprint(\"Lower Outliers\") #Lower Outliers || Alt U\u00e7 De\u011fer Hesapland\u0131   \nprint(\"------------------------\")\nprint(Q3+IQR)\nprint(\"------------------------\")","d5f9db79":"new_df = df[(df.price >=-926.00) & (df.price <=25186.00)]\nnew_df.shape\n#17 U\u00e7 De\u011fer Silindi 205 den 188 e d\u00fc\u015ft\u00fc\n#17 End Value Deleted from 205 to 188\n","d91daebf":"sns.boxplot(x=new_df['price']) #Show Box Plot We see clearance of outliers || Boxplot \u00c7izildi U\u00e7 De\u011ferlerin Temizlendi\u011fini G\u00f6r\u00fcyoruz","d16bde55":"#Kolonlardaki De\u011ferlerimizin Say\u0131sal B\u00fcy\u00fckl\u00fcklerinin,\n #Da\u011f\u0131l\u0131m\u0131m\u0131z\u0131 \u00c7arp\u0131tmamas\u0131 \u0130\u00e7in Normalizasyon Yap\u0131yoruz\n#apply normalization to our values                                            \nfrom sklearn.preprocessing import Normalizer \nnumerical = num_df.values\nnormalizer = Normalizer().fit(numerical)\nnorm = normalizer.transform(numerical)\ndf_normalized = pd.DataFrame(norm)\ndf_normalized.columns = list(num_df.columns.values)\ndf_normalized.head()","3bb3a3e0":"dfMerged = pd.concat([df_dum,df_normalized,df_dum], axis=1)\ndfMerged.head()","603cc712":"dfMerged.shape","43530821":"prediction = dfMerged.iloc[204:205]\ndata = dfMerged.iloc[0:205]","28f4abc7":"#Linear Regresyon Modelimizi Uyguluyoruz Veri K\u00fcmemizi Test Train Olarak B\u00f6l\u00fcyoruz Ve E\u011fitiyoruz\n#Ve K Katlamal\u0131 \u00c7apraz Do\u011frulama Kullan\u0131yoruz\n#We are training data set with linear regression\n#and use K Fold Cross Validation\nfrom sklearn import preprocessing\nfrom sklearn.linear_model import LinearRegression \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import accuracy_score\nimport numpy as np\n\nX = data.drop(['price'],axis=1).values \nY = data['price'].values","d8729a01":"X_train, X_test, y_train, y_test = train_test_split(X,Y)","a65150b5":"model = LinearRegression(normalize=True)  \nmodel.fit(X_train, y_train)  ","90fb218e":"y_pred = model.predict(X_test) #Predict Completed || Tahmin etme i\u015flemi tamamland\u0131","256e4641":"from sklearn import metrics \n#let us measure the mean squared error of your estimates\n#taminlerimiz ne kadar yakla\u015f\u0131k de\u011fer veriyor \u00e7e\u015fitli metrikler ile buna bakal\u0131m\nprint('Mean Squared Error (MSE):', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error (RMSE):', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))  ","6144ae6a":"    #Genel \u0130\u015fleyi\u015f Ve Ba\u015far\u0131m\u0131n Gerek\u00e7elerinin A\u00e7\u0131klanmas:\n#Motor Hacmi-Ve(Ona Ba\u011fl\u0131 Olarak) Silindir Say\u0131s\u0131 ile Fiyat Aras\u0131nda Ayn\u0131 Y\u00f6nl\u00fc Ve Y\u00fcksek Oranl\u0131 Bir Korelasyon Bulunmakta.\n#Buda Demek Oluyorki basit\u00e7e Biz Sadece Motor Hacmine Baksak Bile ger\u00e7eklikten \u00e7okta uzak olmayan sonu\u00e7lar verebiliriz.\n#veri setimiz e\u011fitim ama\u00e7l\u0131 kullan\u0131lan bir veri seti oldu\u011fu i\u00e7in bu \u015fekilde de\u011ferler ald\u0131k ve ger\u00e7e\u011fe yak\u0131n tahminler yapmak \u00e7ok zor olmad\u0131.\n    #Data Preprocessing'in yorumlanmas\u0131\n#Eksik De\u011ferlerimizi Ortalama \u0130le Doldurmam\u0131z bizim i\u00e7in yeterli oldu fakat dahada g\u00fczel sonu\u00e7lar almak istersek,\n#eksik verileri doldurmak i\u00e7in de ayr\u0131 bir regresyon modeli kullanabiliriz.\n#kategorik bir tak\u0131m verilerin \u00e7ok az say\u0131da eksik de\u011fer i\u00e7ermesi sebebi ile \u00e7e\u015fitli imputation y\u00f6ntemleri kullan\u0131labilirdi\n#biz baz\u0131 de\u011ferlere direk ortalama ile doldurmay\u0131 se\u00e7erken baz\u0131lar\u0131na ise(genelde kategorik) en \u00e7ok tekrar eden de\u011feri,\n#bir \u00fcstteki de\u011feri direk almak gibi \u00e7e\u015fitli imputation y\u00f6ntemleri kullanmam\u0131z eksik veri say\u0131m\u0131z\u0131n,\n#genel veri say\u0131s\u0131na oranla \u00e7ok d\u00fc\u015f\u00fck olmas\u0131 sebebi ile sonucumuzu \u00e7ok fazla de\u011fi\u015ftirmedi.\n#outliers de\u011ferlerin \u00e7ok fazla olmas\u0131(17 adet) tahmin sapmam\u0131z\u0131 \u00e7ok art\u0131r\u0131yordu ve b\u00f6ylece sapmaya sebep oluyordu\n\n","81981d61":"1. symboling:               -3, -2, -1, 0, 1, 2, 3. #Markalar\u0131 Fiyatlar\u0131na G\u00f6re S\u0131n\u0131fland\u0131r\u0131lmas\u0131\n2. normalized-losses:        continuous from 65 to 256. #Sigorta \u00d6demelerinin Kabul Edilebilir De\u011ferleri\n3. make:                     alfa-romero, audi, bmw, chevrolet, dodge, honda, #Markalar\u0131m\u0131z\n                             isuzu, jaguar, mazda, mercedes-benz, mercury,\n                             mitsubishi, nissan, peugot, plymouth, porsche,\n                             renault, saab, subaru, toyota, volkswagen, volvo\n4. fuel-type:                diesel, gas. #Ara\u00e7 Yak\u0131t T\u00fcr\u00fc\n5. aspiration:               std, turbo. #Enjeksiyon t\u00fcr\u00fc\n6. num-of-doors:             four, two.  #Kap\u0131 Say\u0131m\u0131z\n7. body-style:               hardtop, wagon, sedan, hatchback, convertible. # Ara\u00e7 Tipi\n8. drive-wheels:             4wd, fwd, rwd. #  4 \u00c7eker \u00d6nden 2 \u00c7eki\u015fli Ve Arkadan \u0130ti\u015fli Kategorisi \n9. engine-location:          front, rear. #Motor Konumu\n10. wheel-base:               continuous from 86.6 120.9.\n11. length:                   continuous from 141.1 to 208.1. #Uzunluk\n12. width:                    continuous from 60.3 to 72.3.   #Geni\u015flik\n13. height:                   continuous from 47.8 to 59.8.   #Y\u00fckseklik\n14. curb-weight:              continuous from 1488 to 4066.   #Ara\u00e7 Bo\u015f A\u011f\u0131rl\u0131\u011f\u0131\n15. engine-type:              dohc, dohcv, l, ohc, ohcf, ohcv, rotor. #Motor T\u00fcrleri\n16. num-of-cylinders:         eight, five, four, six, three, twelve, two. #Ara\u00e7 Silindir Say\u0131s\u0131\n17. engine-size:              continuous from 61 to 326. #Motor Hacmi\n18. fuel-system:              1bbl, 2bbl, 4bbl, idi, mfi, mpfi, spdi, spfi. #Yak\u0131t Sistemi\n19. bore:                     continuous from 2.54 to 3.94.  #Silindir \u00c7ap\n20. stroke:                   continuous from 2.07 to 4.17.  #Silindir Derinlik\n21. compression-ratio:        continuous from 7 to 23. #Yak\u0131t S\u0131k\u0131\u015ft\u0131rma Oran\u0131\n22. horsepower:               continuous from 48 to 288. #Beygir G\u00fcc\u00fc\n23. peak-rpm:                 continuous from 4150 to 6600. #Motor Devir Say\u0131s\u0131 Max\n24. city-mpg:                 continuous from 13 to 49. #Miles Per Galon \u015eehir \u0130\u00e7inde Mil Ba\u015f\u0131na Yak\u0131lan Yak\u0131t Galon Say\u0131s\u0131\n25. highway-mpg:              continuous from 16 to 54. #Uzun Yol Yak\u0131t T\u00fcketimi \n26. price:                    continuous from 5118 to 45400. # Ve Fiyat\u0131m\u0131z."}}