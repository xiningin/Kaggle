{"cell_type":{"8d690f55":"code","c672b44e":"code","53b367cf":"code","aefa7c32":"code","d5313a7b":"code","a139270f":"code","07e4a2f4":"code","8bd1ca45":"code","ed90b5b0":"code","2877780f":"code","31a16f8e":"code","2aa2a867":"code","446e97a0":"code","fbcdf78b":"code","ca99ec14":"code","186dc7e4":"code","5abf889f":"code","4e094970":"code","9eab53a0":"code","25af36da":"code","93cb97f6":"code","b51e260a":"markdown","3a92cbf1":"markdown","12379f7e":"markdown","38ab16b1":"markdown","bfa2ec91":"markdown","b91ee9df":"markdown","39a842f5":"markdown","4e0abc8c":"markdown"},"source":{"8d690f55":"#importing libraries\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c672b44e":"df = pd.read_csv(\"\/kaggle\/input\/drug200\/drug200.csv\")\ndf.head()","53b367cf":"df.Drug.value_counts()","aefa7c32":"df.Sex.value_counts()","d5313a7b":"pd.crosstab(df.Sex,df.Drug)","a139270f":"pd.crosstab(df.Drug,df.Sex).plot(kind='bar',color=['salmon','lightblue'])\nplt.xlabel('Drug')\nplt.ylabel('Sex')","07e4a2f4":"df.isna().sum()","8bd1ca45":"df.head()","ed90b5b0":"X = df[['Age','Sex','BP','Cholesterol','Na_to_K']].values\nX = pd.DataFrame(X,columns =['Age','Sex','BP','Cholesterol','Na_to_K'])\nX","2877780f":"y = df.iloc[:,-1].values\ny = pd.DataFrame(y,columns = ['Drug'])\ny.head()","31a16f8e":"from sklearn.preprocessing import LabelEncoder\nlabel_encoder = LabelEncoder()\nlabel_X = X.copy()\nlist = ['Sex','BP','Cholesterol']\nfor col in list:\n    label_X[col] = label_encoder.fit_transform(X[col])","2aa2a867":"label_X","446e97a0":"X_train , X_test, y_train, y_test = train_test_split(label_X,y,test_size=0.3,random_state=42)","fbcdf78b":"dtree = DecisionTreeClassifier(criterion=\"entropy\",max_depth=4)\ndtree.fit(X_train,y_train)","ca99ec14":"y_preds = dtree.predict(X_test)","186dc7e4":"dtree.score(X_test,y_test)","5abf889f":"from sklearn.metrics import accuracy_score\nprint('accuracy score is {}'.format(accuracy_score(y_preds,y_test)))","4e094970":"print(y_preds[0:5])\nprint(y_test[0:5])","9eab53a0":"pip install graphviz","25af36da":"from  io import StringIO\nimport matplotlib.image as mpimg\nfrom sklearn import tree\n%matplotlib inline \nimport graphviz","93cb97f6":"dtree = tree.DecisionTreeClassifier()\ndtree = dtree.fit(X_train, y_train)\nfeatureNames = df.columns[0:5]\ndata = tree.export_graphviz(dtree,feature_names=featureNames,out_file=None)\ngraph = graphviz.Source(data)\ngraph","b51e260a":"## Evaluation","3a92cbf1":"## Using labelEncoder for categorical values","12379f7e":"## splitting dataset into X feature and target y","38ab16b1":"## predicting the test data","bfa2ec91":"## checking for null values","b91ee9df":"## Splitting data into training and test","39a842f5":"## Modelling and fitting training data","4e0abc8c":"## Visualizing target variable Drug wrt to sex"}}