{"cell_type":{"ad0ca6e7":"code","116f6eff":"code","7042c331":"code","6a209e73":"code","d150d6bf":"code","14a42559":"code","037cc049":"code","d37b7b7f":"code","d782c069":"code","5a3ab6b4":"code","d168ee53":"code","24e4eb07":"code","353c8d1c":"code","50d846f6":"code","4803b759":"code","6906c9be":"code","669ba1ec":"code","95977955":"code","c02d9f64":"code","36c82791":"code","d577556b":"code","8391c4f5":"code","872107b5":"code","67ed8d4b":"code","93eed91a":"code","2740c244":"code","5db36fe9":"code","7e07191c":"code","c6b5c563":"code","10ec065c":"code","4afe5892":"code","0ffcf5e1":"code","50dd4186":"code","6b0dae0f":"code","adc02bc0":"code","87a4299a":"code","60d1fc8a":"code","0ae7af09":"code","946dd78a":"code","6bd9ae6a":"code","79b6a712":"code","2968da93":"code","6e664328":"code","c5400b86":"code","58c911c6":"code","b332f6ef":"code","438b4023":"code","eb310dd5":"code","a35d1bf5":"code","ea5c02ca":"code","b02685c9":"code","5b0a9aa0":"code","702791be":"code","6a8b1a57":"code","f308c4b2":"code","92b74a81":"markdown","279619bb":"markdown","46d0cf39":"markdown","97cf0a33":"markdown","178dd4bf":"markdown","a2169b09":"markdown","8927461f":"markdown","52e55a75":"markdown","531a64fb":"markdown","d270c813":"markdown","1dea9c61":"markdown","5816cd58":"markdown","c915d886":"markdown","7c6edb96":"markdown","043cec86":"markdown","77322f17":"markdown","f627f1ad":"markdown","cd843d9f":"markdown","c333e071":"markdown","1c68fd1d":"markdown","3d47cc42":"markdown","f05c134a":"markdown","4713a65c":"markdown","b9f43ece":"markdown","167ce010":"markdown","2b847fdc":"markdown","1acc0c8c":"markdown","cd05af26":"markdown","f5392398":"markdown","b37ecd94":"markdown","4c1cd3cf":"markdown","420b788d":"markdown","65833925":"markdown","ac628117":"markdown","b1ee58b3":"markdown","2a899dde":"markdown","50ae8bc6":"markdown","d43e4860":"markdown","ff587b87":"markdown","21b103a0":"markdown","cdaff97d":"markdown","5bb0bd20":"markdown","9bfc0c56":"markdown","e701a008":"markdown","5f723684":"markdown","919a33b3":"markdown","c0f10c87":"markdown","0196372e":"markdown","fe8b5b31":"markdown","5aa16e4e":"markdown"},"source":{"ad0ca6e7":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import ElasticNet, Lasso, Ridge, LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error, make_scorer, r2_score\nfrom sklearn.pipeline import Pipeline\nfrom scipy.stats import norm, skew, kurtosis\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\nfrom xgboost import XGBRegressor\n\nimport warnings \nwarnings.filterwarnings('ignore')\n%matplotlib inline","116f6eff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nimport warnings\nwarnings.filterwarnings('ignore')\nimport os\nprint(os.listdir(\"..\/input\"))\ntrain = pd.read_csv(\"\/kaggle\/input\/bike-sharing-demand\/train.csv\", parse_dates=[\"datetime\"])\ntest = pd.read_csv(\"\/kaggle\/input\/bike-sharing-demand\/test.csv\", parse_dates=[\"datetime\"])\nsub = pd.read_csv(\"\/kaggle\/input\/bike-sharing-demand\/sampleSubmission.csv\")","7042c331":"print(train.shape)\nprint(train.columns)","6a209e73":"print(test.shape)\nprint(test.columns)","d150d6bf":"del train['casual']\ndel train['registered']","14a42559":"print('===== train =====')\nprint(train.isnull().sum())\nprint('===== test =====')\nprint(test.isnull().sum())","037cc049":"train.info()","d37b7b7f":"for val in ['season', 'holiday', 'workingday','weather']:\n    train[val] = train[val].astype('category')\n    test[val] = test[val].astype('category')","d782c069":"train['year'] = train['datetime'].dt.year\ntrain['month'] = train['datetime'].dt.month\ntrain['day'] = train['datetime'].dt.day\ntrain['hour'] = train['datetime'].dt.hour\ntrain['dayofweek'] = train['datetime'].dt.dayofweek","5a3ab6b4":"test['year'] = test['datetime'].dt.year\ntest['month'] = test['datetime'].dt.month\ntest['day'] = test['datetime'].dt.day\ntest['hour'] = test['datetime'].dt.hour\ntest['dayofweek'] = test['datetime'].dt.dayofweek","d168ee53":"target = train['count']\nsns.distplot(target, fit = norm)\nplt.annotate('skewness: {0}'. format(np.round(skew(target),3)), xy=(20,0.006))\nplt.annotate('kurtosisness: {0}'.format(np.round(kurtosis(target),3)),xy = (20,0.0065))","24e4eb07":"def scaler(x):\n    return ( x - np.mean(x)) \/ np.std(x)\n\nsns.distplot(scaler(target))\nprint('mean :',np.mean(scaler(target)))\nprint('std  :',np.std(scaler(target)))\nplt.annotate('skewness: {0}'. format(np.round(skew(scaler(target)),3)),\n             xy =(2,1.05))\nplt.annotate('kurtosisness: {0}'. format(np.round(kurtosis(scaler(target)),3)),\n             xy =(2,1))","353c8d1c":"sns.distplot(np.log1p(target), fit = norm)\n\nplt.annotate('skewness: {0}'.format(np.round(skew(np.log1p(target)),3)), xy = (1,0.35))\nplt.annotate('kurtosisness: {0}'.format(np.round(kurtosis(np.log1p(target)),3)), xy = (1,0.32))","50d846f6":"train['count']  = np.log1p(target)","4803b759":"sns.pairplot(train[['temp','atemp','humidity', 'windspeed']])","6906c9be":"train[['temp','atemp','count']].corr(method='pearson')","669ba1ec":"del train['atemp']\ndel test['atemp']","95977955":"for val in ['windspeed','humidity','temp']:\n    print ('{}` skewness : {:.3f}'.format(val, skew(train[val])))","c02d9f64":"sns.boxplot(x = train['year'],\n           y = train['count'])","36c82791":"sns.boxplot(x = train['season'],\n           y = train['count'])","d577556b":"sns.boxplot(x = train['hour'],\n           y = train['count'])","8391c4f5":"for i in [0,1,2,3,4] :\n    \n    train['hour'].replace(i, i+24, inplace = True)\n    test['hour'].replace(i, i+24, inplace = True)\n    \ntrain.hour.value_counts()","872107b5":"plt.scatter(x= train['hour'],\n           y = train['count'],\n           alpha = 0.3,\n           color = 'blue')\n\nplt.xlabel('hour')\nplt.ylabel('count')\n\nplt.title('hour ~ count')\n\nsns.regplot(x = train['hour'],\n            y = train['count'],\n           order = 2 , label = 'degree.2')\nsns.regplot(x = train['hour'],\n            y = train['count'],\n           order = 1 , label = 'degree.1')\n\nplt.legend(loc = 'upper right')\nplt.show()","67ed8d4b":"from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.ensemble import RandomForestClassifier\n\nlr_m = LinearRegression()\npoly_m = LinearRegression()\nrfc = RandomForestClassifier()\n\ntrain_hour = train.loc[:, 'hour'].values\ntest_hour = test.loc[:, 'hour'].values\n\n\ntrain_hour = train_hour.reshape(-1, 1)\ntest_hour = test_hour.reshape(-1, 1)\n\npoly = PolynomialFeatures(degree=2)\n\ntrain_hour_sqr = poly.fit_transform(train_hour)\ntest_hour_sqr = poly.fit_transform(test_hour)\n\nlr_m.fit(train_hour, target)\npoly_m.fit(train_hour_sqr, target)\n\npred_lr = lr_m.predict(train_hour)\npred_poly = poly_m.predict(train_hour_sqr)\n\nlr_score = mean_squared_error(target, pred_lr)\npoly_score = mean_squared_error(target, pred_poly)\n\nr2_lr = r2_score(target, pred_lr)\nr2_poly = r2_score(target, pred_poly)\n\nprint('r2_score (degree = 1) : {0:.3f} \\n  MSE : {1:.3f}'\n      .format(r2_lr, lr_score))\nprint('======================================================')\nprint('r2_score(degree = 2) : {0:.3f} \\n MSE : {1:.3f}'\n      .format(r2_poly, poly_score))\nprint('======================================================')\nprint('polynomial regression estimators : ({1:.3f}) * hour^2 + ({0:.3f}) * hour + ({2:.3f})'\n      .format(poly_m.coef_[1],poly_m.coef_[2], poly_m.intercept_))","93eed91a":"train['hour_sqr'] = np.square(train['hour'])\ntest['hour_sqr'] = np.square(test['hour'])","2740c244":"train.holiday.value_counts()","5db36fe9":"train.loc[train.dayofweek >= 5,'holiday'] = 1\ntest.loc[test.dayofweek >= 5, 'holiday'] = 1","7e07191c":"train.holiday.value_counts()","c6b5c563":"sns.boxplot(x = train['holiday'],\n            y = train['count'])","10ec065c":"plt.figure(figsize = (10,10))\nsns.boxplot(x = train['hour'],\n            y = train['count'],\n            hue = train['holiday'])","4afe5892":"sns.boxplot(x = train['month'],\n            y = train['count'])","0ffcf5e1":"plt.scatter(x = train['month'],\n            y = train['count'])","50dd4186":"plt.scatter(x = train['windspeed'],\n            y = train['count'])\nplt.xlabel('windspeed')\nplt.ylabel('count')","6b0dae0f":"sns.boxplot(x = train['weather'],\n            y = train['count'])","adc02bc0":"print('train \\n',train.weather.value_counts())\nprint('test \\n',test.weather.value_counts())","87a4299a":"train['weather'].replace(3,4,inplace = True)\ntest['weather'].replace(3,4,inplace = True)","60d1fc8a":"plt.scatter(x = train['humidity'],\n            y = train['count'],\n           alpha = 0.5,\n           color = 'blue')\nplt.xlabel('humidity')\nplt.ylabel('count')\n\nplt.annotate('correlation between humidity and count : {0:.3f}'.format(train[['humidity','count']].corr().iloc[1,0]), xy = (0,6))\nsns.regplot(x = train['humidity'],\n            y = train['count'])","0ae7af09":"sns.boxplot(x = train['dayofweek'],\n            y = train['count'])","946dd78a":"plt.scatter(x = train['hour'],\n            y = train['count'],\n            c = train['dayofweek'])","6bd9ae6a":"plt.scatter(x = train['temp'],\n            y = train['count'])\n\nplt.annotate('correlation between humidity and count : {0:.3f}'.format(train[['temp','count']].corr().iloc[1,0]), xy = (0,6))\nsns.regplot(x = train['temp'],\n            y = train['count'])","79b6a712":"sns.heatmap(train[['temp','windspeed','humidity','hour','count']].corr(method = 'pearson'),annot = True, fmt = '.2f')","2968da93":"train.info()","6e664328":"del train['datetime']\ndel test['datetime']","c5400b86":"def rmsle(y, pred):\n    log_y=np.log1p(y+1)\n    log_pred=np.log1p(pred + 1)\n    squared_error=(log_y-log_pred)**2\n    rmsle=np.sqrt(np.mean(squared_error))\n    return rmsle\n\nrmsle_score = make_scorer(rmsle)","58c911c6":"target = train['count']\ntrain.drop('count', axis = 1, inplace = True) # target, feature \ubd84\ub9ac","b332f6ef":"rf_reg = RandomForestRegressor(n_estimators=1000, n_jobs = -1,\n                               random_state = 777)\n# 1000\uac1c\uc758 \uc758\uc0ac\uacb0\uc815 \ub098\ubb34 \uc0dd\uc131, cpu \uc9d1\uc911, \ub09c\uc218 \uace0\uc815\n\nx_train, x_test, y_train, y_test = train_test_split(train,\n                                                    target,\n                                                    test_size = 0.3,\n                                                    random_state = 777)\n\nrf_reg.fit(x_train, y_train)\n\npred = rf_reg.predict(x_test)\n\npred = np.expm1(pred)\ny_test = np.expm1(y_test)\n\nprint('RandomForest score : ', rmsle(pred, y_test))","438b4023":"feat_imp = {'col' : train.columns,\n            'importances' : rf_reg.feature_importances_}\n\nfeat_imp = pd.DataFrame(feat_imp).sort_values(by = 'importances', ascending = False)\n\nsns.barplot(x = feat_imp['col'] ,\n            y = feat_imp['importances'])\nplt.xticks(rotation =  60)","eb310dd5":"print(feat_imp)","a35d1bf5":"pred = rf_reg.predict(test)\npred = np.expm1(pred)\nsub['count'] = pred\nsub.to_csv('submission_20200202.csv',index = False)","ea5c02ca":"for val in ['weather','day','windspeed','holiday']:\n    del train[val]\n    del test[val]","b02685c9":"train_m = pd.get_dummies(train, columns=['month','year','dayofweek','workingday','season'])\ntest_m = pd.get_dummies(test,columns=['month','year','dayofweek','workingday','season'])\nprint(train_m.shape)\nprint(test_m.shape)","5b0a9aa0":"rf_reg=RandomForestRegressor()\nxgb_reg=XGBRegressor()\nlr_reg=LinearRegression()\nlasso=Lasso()\nridge=Ridge()\nelastic=ElasticNet()\n\nmodel_list=[rf_reg, xgb_reg, lr_reg, ridge, lasso , elastic]\nfor model in model_list :\n    score = cross_val_score(model, train_m, target , scoring = rmsle_score, cv = 3)\n    print('{0} ` score : {1}'.format(model.__class__.__name__, np.mean(score)))","702791be":"params = {'max_depth': [3,5,7,11],\n         'min_samples_split': [2,4,6,8],\n         \"min_weight_fraction_leaf\": [0.01,0.1,0.2,0.3],\n         \"max_features\":[4,5,6]}\ngrid_rf = GridSearchCV(rf_reg,param_grid = params, n_jobs=-1)\ngrid_rf.fit(train_m, target)","6a8b1a57":"print(grid_rf.best_params_)","f308c4b2":"pred = grid_rf.predict(test_m)\n\nsub['count'] = np.expm1(pred)\n\nsub.to_csv('bike_submission_noob.csv', index = False)","92b74a81":"#### 2.2 feature \ubcc0\ud658\n\n* datetime \uc744 \uc5f0,\uc6d4,\uc77c,\uc694\uc77c,\uc2dc\uac04\uc73c\ub85c \ubd84\ub9ac\ud574 \uc0c8\ub85c\uc6b4 feature\ub85c \ub9cc\ub4e4\uc5b4 \uc90d\uc2dc\ub2e4","279619bb":"* \uc694\uc77c\ubcc4 target\uc758 \ubd84\ud3ec\uac00 \uc2dc\uac04\ub300 \ubcc4\ub85c \ub2e4\ub985\ub2c8\ub2e4.\n* \uc694\uc77c\ubcc4 target\uc758 boxplot\ub9cc \ubcf4\uc558\uc744\ub54c\ub294 \ucc28\uc774\uac00 \uc5c6\uc5b4\ubcf4\uc774\uc9c0\ub9cc \uc2dc\uac04\uacfc \uc5f0\uad00\uc9c0\uc5b4 \ubcf4\uba74 \ucc28\uc774\uac00 \ubcf4\uc785\ub2c8\ub2e4.","46d0cf39":"#### 4.1 randomforest\ub97c \uc774\uc6a9\ud55c feature importances\n* \ubcc0\uc218 \uc911\uc694\ub3c4(feature importances)\ub97c \ucd9c\ub825\ud574\uc8fc\ub294 \ubaa8\ub378\ub85c\ub294 lasso, xgboost, randomforest\ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc5ec\uae30\uc11c randomforest\ub97c \uc0ac\uc6a9\ud558\ub294 \uc774\uc720\ub294 eda\ub2e8\uacc4\uc5d0\uc11c feature\ub4e4\uc774 \uac1c\ubcc4\ub85c target\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uae30 \ubcf4\ub2e4\ub294 \ub2e4\ub978 feature\uc640 \uc5f0\uad00\ub418\uc5b4 target\uc5d0 \uc601\ud5a5\uc744 \uc904 \uac83\uc73c\ub85c \uc608\uc0c1\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.\n* \uc608\ub97c \ub4e4\uc5b4 \ud734\uc77c(holiday)\uac19\uc740 \uacbd\uc6b0\uc5d4 \ud63c\uc790\uc11c target\uacfc\uc758 \uad00\uacc4\ub294 \ubcc4\ucc28\uc774 \uc5c6\uc5b4\ubcf4\uc774\ub098 \uc2dc\uac04\uacfc \uc5f0\uad00\uc744 \uc9c0\uc5c8\uc744\ub54c \ub69c\ub837\ud55c \ucc28\uc774\ub97c \ubcf4\uc600\uc2b5\ub2c8\ub2e4.\n* \ud558\uc9c0\ub9cc \ucc28\uc774\uac00 \uc77c\uc815\ud558\uac8c \ub098\ud0c0\ub098\uc9c0\ub294 \uc54a\uc558\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc5ec\ub7ec\uac1c\uc758 \uc758\uc0ac\uacb0\uc815\ub098\ubb34\ub97c \uc0dd\uc131\ud558\uc5ec \uc608\uce21\ud558\ub294 \ub79c\ub364 \ud3ec\ub808\uc2a4\ud2b8\uac00 \uc774 \ubd80\ubd84\uc744 \uc798 \uc124\uba85\ud574\uc904\uc218 \uc788\uc73c\ub9ac\ub77c \ubbff\uae30\ub54c\ubb38\uc5d0 randomforest\ub97c \uc0ac\uc6a9\ud574 \ubcc0\uc218 \uc911\uc694\ub3c4\ub97c \ucd9c\ub825\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","97cf0a33":"* \uc885\uc18d\ubcc0\uc218\uc778 count\uc758 \ubd84\ud3ec\ub97c \ubcf4\uc558\uc744\ub54c \uc67c\ucabd\uc73c\ub85c \uce58\uc6b0\uce5c \ubaa8\uc2b5\uc744 \ubcf4\uc785\ub2c8\ub2e4.\n* \uc815\uaddc\ud654\ub97c \ud1b5\ud574 \ubd84\ud3ec\uc758 \uce58\uc6b0\uce68\uc744 \uc644\ud654 \ud574\ubcfc \ud544\uc694\uac00 \uc788\uc5b4 \ubcf4\uc785\ub2c8\ub2e4.","178dd4bf":"* \ud070 \ucc28\uc774\ub97c \ubcf4\uc774\uc9c0\ub294 \uc54a\uc9c0\ub9cc temp \uac00 atemp \ubcf4\ub2e4 \uc870\uae08 \ub354 \ub192\uc740 \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c0\uace0 \uc788\uc73c\ubbc0\ub85c atemp \ub97c \uc81c\uac70 \ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","a2169b09":"* datetime\uc740 \ubaa8\ub378\uc774 \ud559\uc2b5\ud560\uc218 \uc5c6\uc73c\ubbc0\ub85c \uc0ad\uc81c\ud558\uaca0\uc2b5\ub2c8\ub2e4.","8927461f":"* hour\ub97c 2\ucc28\ud56d\uc73c\ub85c \ubcc0\ud658\ud588\uc744 \ub584 r2 score\uc640 mse \uc9c0\ud45c\uac00 \ud6e8\uc52c \ub354 \uc88b\uac8c \ub098\ud0c0\ub0a9\ub2c8\ub2e4.\n* hour\uc758 2\ucc28\ud56d\uc758 \ucd94\uc815\uacc4\uc218\ub97c \uc0b4\ud3b4\ubcf4\uba74 1\ucc28\ud56d\uc740 \uc591\uc218, 2\ucc28\ud56d\uc740 \uc74c\uc218\ub85c \ub098\ud0c0\ub09c\ub2e4. \uc774\ub294 hour\uac00 \uc99d\uac00\ud560\ub54c count\uac00 \uc99d\uac00\ud558\uc9c0\ub9cc \uc99d\uac00\ub7c9\uc774 \ud55c\uacc4\uccb4\uac10\ud55c\ub2e4\ub294 \ub73b\uc73c\ub85c \ud574\uc11d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","52e55a75":"#### 2.1 feature \ud0c0\uc785 \ubcc0\ud658\n\n* \uc704\uc5d0\uc11c \ud655\uc778\ud55c \ubc94\uc8fc\ud615 \ubcc0\uc218\ub97c category\ub85c \uc9c0\uc815\ud574\uc8fc\uaca0\uc2b5\ub2c8\ub2e4.","531a64fb":"* temp\uac00 \uc99d\uac00\ud560\uc218\ub85d count\uac00 \uc99d\uac00\ud558\ub294 \uc0c1\uad00\uad00\uacc4\ub97c \ubcf4\uc785\ub2c8\ub2e4.","d270c813":"* \uc120\ud615\uc801 \uad00\uacc4\ub97c \ubcf4\uc774\uc9c0\ub294 \uc54a\uc9c0\ub9cc \ub69c\ub837\ud55c \ube44\uc120\ud615 \uad00\uacc4\ub97c \ubcf4\uc785\ub2c8\ub2e4.\n* hour\ub97c \ub2e4\ud56d\uc2dd\uc73c\ub85c \ubcc0\ud658\ud574\ubcfc \ud544\uc694\uac00 \uc788\ub2e4\uace0 \uc0dd\uac01\ub429\ub2c8\ub2e4.\n","1dea9c61":"### 5. Modeling","5816cd58":"* holiday\uc5d0\ub294 \uc8fc\ub9d0\uc774 \ud3ec\ud568\uc774 \ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n* \uac1c\uc778\uc801\uc778 \uc0dd\uac01\uc73c\ub85c\ub294 \uc26c\ub294\ub0a0\uacfc \ud3c9\uc77c\uc5d0 \uc2dc\uac04\ubcc4 \uc790\uc804\uac70 \uc218\uc694\uac00 \ub2e4\ub97c\uac83\uc774\ub77c \uc0dd\uac01\ud569\ub2c8\ub2e4.\n* \ub530\ub77c\uc11c \ud1a0\uc694\uc77c, \uc77c\uc694\uc77c\uc77c\ub54c\ub3c4(dayofweek = 5,6) holiday\ub97c 1\ub85c \ubcc0\ud658\ud574\uc8fc\uaca0\uc2b5\ub2c8\ub2e4.","c915d886":"### 4.2 one-hot encoding","7c6edb96":"* seanson\ubcc4 count\uc758 boxplot \ubaa8\uc591\uc758 \ucc28\uc774\ub294 \ud06c\uac8c \ubcf4\uc774\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub2e4\ub9cc season 1 (\ubd04) \uc77c\ub54c \ub2e4\ub978 season\uc5d0 \ube44\ud574 \ub2e4\ub978 \uc704\uce58\uc5d0 \uc788\ub294\uac83\uc744 \ud655\uc778 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* season 3 \uc77c\ub54c \ub2e4\ub978 season \uc5d0 \ube44\ud574 \uc774\uc0c1\uce58(outlier)\uac00 \ub9ce\uc774 \ubcf4\uc785\ub2c8\ub2e4.","043cec86":"#### 1.3 \uacb0\uce21\uce58 \ud655\uc778","77322f17":"### 4. feature engineering\n* modeling\uc5d0 \ud544\uc694\ud55c \ud615\ud0dc\ub85c \ubcc0\uc218\ub97c \ubcc0\ud658","f627f1ad":"### 3.2 feature \ubd84\ud3ec \ud655\uc778\n \n#### pairplot\n* feature\uc758 \ubd84\ud3ec\uc640 \ub2e4\ub978 feature\uac04\uc758 \uad00\uacc4\ub97c \ud55c\ubc88\uc5d0 \ubcf4\uc5ec\uc8fc\ub294 pairplot\uc744 \ud1b5\ud574 \ud655\uc778\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","cd843d9f":"* \ud53c\uc5b4\uc2a8 \uc0c1\uad00\uacc4\uc218\ub85c heatmap\uc744 \uadf8\ub824\ubcf4\uc558\uc744 \ub54c \uc5f0\uc18d\ud615 \ubcc0\uc218\ub4e4 \uac04\uc758 \uc0c1\uad00\uacc4\uc218\ub294 \ub300\uccb4\uc801\uc73c\ub85c \ub0ae\uc740\ud3b8\uc785\ub2c8\ub2e4.\n\n* \ub2e4\uc911\uacf5\uc120\uc131\uc758 \ubb38\uc81c\ub294 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc744\uac83\uc73c\ub85c \uc608\uc0c1\ub429\ub2c8\ub2e4.\n\n","c333e071":"#### 1.2 \ub370\uc774\ud130 \uc815\ubcf4 \ud655\uc778","1c68fd1d":"* \uacb0\uce21\uac12\uc744 \ud655\uc778\ud574\ubcf4\uc558\uc9c0\ub9cc \uc5c6\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","3d47cc42":"* \uc694\uc77c\ubcc4 count\uc758 \ubd84\ud3ec \ucc28\uc774\ub294 \uc5c6\uc5b4 \ubcf4\uc785\ub2c8\ub2e4.\n* \ud734\uc77c\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc2dc\uac04\uacfc \uc5f0\uad00\uc774 \uc788\uc744\uac83\uc73c\ub85c \uc608\uc0c1\uc774 \ub429\ub2c8\ub2e4.","f05c134a":"* \ubcc0\uc218 \uc911\uc694\ub3c4\ub97c \ubcf4\uba74 weather, day, windspeed, holiday\ub294 \uc911\uc694\ub3c4\uac00 0.01 \ubcf4\ub2e4 \ub0ae\uc2b5\ub2c8\ub2e4.\n* \uc774 feature\ub4e4\uc744 \uc81c\uac70\ud55c \ud6c4 \ubaa8\ub378\ub9c1\uc744 \ud558\ub294\uac83\uc774 \uc88b\uc544\ubcf4\uc785\ub2c8\ub2e4.","4713a65c":"#### 5.1 \ud68c\uadc0 \uba38\uc2e0\ub7ec\ub2dd\uc73c\ub85c \ud559\uc2b5\u00b6\n\uc5ec\ub7ec \ud68c\uadc0 \ubaa8\ub378\ub4e4\uc758 \uc608\uce21\uc131\ub2a5\uc744 \ud655\uc778\ud574\ubcf8 \ub4a4 \uc81c\uc77c \uc88b\uc740 \ubaa8\ub378\uc744 \uc120\ud0dd\ud558\uaca0\uc2b5\ub2c8\ub2e4.","b9f43ece":"### 2. \uc804\ucc98\ub9ac","167ce010":"* \uc65c\ub3c4\uc758 \uc815\uaddc\uc131 \uae30\uc900\uc740 \uc808\ub313\uac12 2\ub85c \uc54c\ub824\uc838\uc788\uc73c\ub098 \uc870\uae08 \ub354 \uc5c4\uaca9\ud558\uac8c \uae30\uc900\uc744 \uc124\uc815 \ud55c\ub2e4\uba74 0.75\uc815\ub3c4\ub85c \uc124\uc815\ud569\ub2c8\ub2e4.\n* \uc218\uce58\ud615 feature\ub4e4\uc758 \uc65c\ub3c4\ub294 \uc808\ub300\uac12\uc774 0\uc5d0 \uac00\uae4c\uc6b4 \uac12\uc744 \uac00\uc9c0\uae30\uc5d0 \uc815\uaddc\ubd84\ud3ec\uc5d0 \uadfc\uc0ac\ud558\ub2e4\uace0 \ub9d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\n* \uc218\uce58\ud615 \ubcc0\uc218\ub294 \uc0b0\uc810\ub3c4(catter)\ub97c \ud1b5\ud574, \ubc94\uc8fc\ud615 \ubcc0\uc218\ub294 boxplot\uc744 \ud1b5\ud574 \uad00\uacc4\ub97c \uc54c\uc544\uac00\ubcf4\ub824 \ud569\ub2c8\ub2e4.\n\n#### Target ~ Year","2b847fdc":"* windspeed\uc640 count\uc758 \uc0b0\uc810\ub3c4\ub97c \uadf8\ub824 \ubcf4\uc558\uc744 \ub54c \uc774\uc0c1\ud55c \uc810\uc774 windspeed\uac00 0\uc744 \uac00\uc9c0\ub294 \uac12\uc774 \ub9ce\uc2b5\ub2c8\ub2e4.\n* \ud48d\uc18d\uc774 0\uc774\ub77c\ub294\uac8c \ud604\uc2e4\uc5d0\uc11c \ubd88\uac00\ub2a5\ud558\uc9c0\ub294 \uc54a\uc9c0\ub9cc 0\uacfc 6\uc5d0 \uacf5\ubc31\uc774 \uc0dd\uae30\ub294 \uac83\uc744 \ud655\uc778\ud588\uc2b5\ub2c8\ub2e4.\n* kaggle Discussion \uc5d0\uc11c\ub294 0~6 \uc0ac\uc774\uc758 \ud48d\uc18d\uc744 \uac00\uc9c0\uba74 \ud48d\uc18d\uc774 \ub108\ubb34 \ub0ae\uc544 \uce21\uc815\uc774 \uc548\ub410\uc744\uac83\uc774\ub77c\uace0 \ub9d0\ud569\ub2c8\ub2e4.","1acc0c8c":"### 1. \ub370\uc774\ud130 \ub85c\ub529 \ubc0f \ud655\uc778","cd05af26":"* datetime\uc774 object \ud0c0\uc785\uc73c\ub85c \ub418\uc788\uc2b5\ub2c8\ub2e4.\n* season , holiday , workingday , weather \ubcc0\uc218\ub294 \ubc94\uc8fc\ud615 \ubcc0\uc218\uc774\uc9c0\ub9cc int \ud0c0\uc785\uc73c\ub85c \ub418\uc5b4\uc788\uc2b5\ub2c8\ub2e4.","f5392398":"* \uc0c8\ubcbd \uc2dc\uac04\uc5d0\ub294 \uc904\uc5b4 \ub4e4\ub2e4\uac00 \uc0c8\ubcbd 5\uc2dc \ubd80\ud130 \ub2e4\uc2dc \uc99d\uac00\ud558\ub294 \ubaa8\uc2b5\uc744 \ubcf4\uc785\ub2c8\ub2e4. \uc0c8\ubcbd \uc2dc\uac04\uc758 boxplot \uc740 box \ud06c\uae30\uac00 \ub2e4\ub978 \uc2dc\uac04\ub300\uc5d0 \ube44\ud574 \ud06c\uace0 \uaf2c\ub9ac \ub610\ud55c \uae38\uc5b4\uc9c0\ub294 \ubaa8\uc2b5\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc544\uce68 9\uc2dc\ubd80\ud130 box\uc758 \ud06c\uae30\uac00 \uc904\uc5b4\ub4e4\uc9c0\ub9cc \uc774\uc0c1\uce58\uac00 \uc0dd\uae30\ub294 \uac83\uc744 \ud655\uc778 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc544\uce68 8\uc2dc\ubd80\ud130 23\uc2dc\uae4c\uc9c0 box\uc758 \ubaa8\uc591\uc740 \ud06c\uac8c \ub2e4\ub974\uc9c0 \uc54a\ub294 \ubaa8\uc2b5\uc744 \ubcf4\uc785\ub2c8\ub2e4.\n* 17\uc2dc \ubd80\ud130 \uc810\ucc28\uc801\uc73c\ub85c count\uc758 \uac12\uc774 \uc904\uc5b4\ub4dc\ub294 \uac83\uc744 \ud655\uc778 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* hour(\uc2dc\uac04)\uacfc count\ub294 \uc120\ud615\uc801 \uad00\uacc4\ub97c \ubcf4\uc774\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc2dc\uac04\uc744 numeric \ubcc0\uc218\ub85c \uc0ac\uc6a9\ud558\uae30\uc5d4 \ubd80\uc801\uc808\ud574 \ubcf4\uc785\ub2c8\ub2e4.\n* \ubaa8\ub4e0 \uc2dc\uac04\ub300\ub97c \ubc94\uc8fc\ud615 \ubcc0\uc218\ub85c \ubcfc \uacbd\uc6b0 \ub108\ubb34 \ub9ce\uc740 level\uc744 \uac00\uc9c0\uac8c \ub429\ub2c8\ub2e4. one-hot encoding\uc744 \ud558\uac8c \ub41c\ub2e4\uba74 \ucd1d 24\uac1c\uc758 \uceec\ub7fc\uc774 \ucd94\uac00\uc801\uc73c\ub85c \uc0dd\uae30\uac8c \ub429\ub2c8\ub2e4. \uadf8\ub7ec\uae30\uc5d0\ub294 \ub370\uc774\ud130\uc758 \uc591\uc774 \ubd80\uc871\ud574 \ubcf4\uc785\ub2c8\ub2e4.\n* \uc2dc\uac04\uc740 \uacc4\uc18d \ub3cc\uae30 \ub54c\ubb38\uc5d0 \uc2dc\uac04\uc758 \uc2dc\uc791\uc774 0\uc2dc \uc77c \ud544\uc694\ub294 \uc5c6\uc5b4 \ubcf4\uc785\ub2c8\ub2e4.\n* 0~4\uc2dc\ub97c 23\uc2dc \uc774\ud6c4\uc758 \uc2dc\uac04\ub300\ub85c \uc0dd\uac01\uc744 \ud574\ubcf4\uace0 \uc2dc\uac04\uc911 \uc81c\uc77c \uc774\ub978\uc2dc\uac04\uc744 5\uc2dc\ub85c \uc0dd\uac01\ud574 \ubcf4\uc558\uc2b5\ub2c8\ub2e4.\n* \uadf8\ub7ec\uae30 \uc704\ud574\uc11c\ub294 00-04\uc2dc\ub97c \uadf8\ub300\ub85c \ub194\ub450\uae30 \ubcf4\ub2e4\ub294 00-04\uc2dc\ub97c 24~28\uc2dc\ub85c \ubc14\uafbc \ub4a4 \uc2dc\uac04\uc758 \ud06c\uae30\ub97c \uc720\uc9c0\ud55c \ucc44\ub85c \uc218\uce58\ud615 \ubcc0\uc218\ub85c \uc0ac\uc6a9\ud574 \ubcf4\uc558\uc2b5\ub2c8\ub2e4.\n","b37ecd94":"# Bike Sharing Demand\n\n* \uc790\uc804\uac70 \uc218\uc694\ub97c \uc608\uce21\ud558\uace0 \ubd84\uc11d\ud574\ubcf4\ub294 \ub178\ud2b8\ubd81\uc785\ub2c8\ub2e4.\n* \uc785\ubb38\ud55c\uc9c0 \uc5bc\ub9c8 \ub418\uc9c0\uc54a\uc558\uae30 \ub54c\ubb38\uc5d0 \ub9ce\uc774 \ubd80\uc871\ud55c\uc810 \uc591\ud574 \ubc14\ub78d\ub2c8\ub2e4.\n \n### \ubcc0\uc218 \uc124\uba85\n\n* datetime : \uc2dc\uac04\n* season : \uacc4\uc808\n* holiday : \uacf5\ud734\uc77c\n* workingday : \uadfc\ubb34\uc77c\n* weather : \ub0a0\uc528 ( \ub9d1\uc740\ub0a0\uc774 1 \uc774\uba70 4\ub85c \uac08\uc218\ub85d \uc88b\uc9c0\uc54a\uc740 \ub0a0\uc528\uc785\ub2c8\ub2e4)\n* temp : \uc628\ub3c4\n* atemp : \uccb4\uac10 \uc628\ub3c4\n* humidity : \uc2b5\ub3c4\n* windspeed : \ud48d\uc18d\n* count : \uc218\uc694\ub791 (target)\n\n\n## \ubaa9\ucc28\n\n#1. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\/\ud655\uc778\n\n      1.1 \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\n    \n      1.2 train, test \ub370\uc774\ud130 \ud655\uc778    \n     \n      1.3 \uacb0\uce21\uac12 \ud655\uc778\n    \n      1.4 feature\uc758 type \ud655\uc778\n      \n# 2. \uc804\ucc98\ub9ac\n\n    2.1 feature \ud0c0\uc785 \ubcc0\ud658    \n\n    2.2 feature \ubcc0\ud658\n    \n# 3. EDA\n\n    3.1 target \ubd84\ud3ec \ud655\uc778\n    \n    3.2 feature \ubd84\ud3ec \ud655\uc778\n    \n    3.3 feature \uac04\uc758 \uad00\uacc4\n        \n* pairplot\n\n* skewness   \n\n* heatmap\n\n      3.4 target feature \uad00\uacc4\n     \n* \uc0b0\uc810\ub3c4(\uc218\uce58\ud615)\n   \n* boxplot(\ubc94\uc8fc\ud615)\n\n## 1.feature engineering\n\n##### 4.1 one - hot encoding\n\n##### 4.2 randomforest\ub97c \uc774\uc6a9\ud55c feature importances \ud655\uc778\n\n## 2. modeling\n\n##### 5.1 \ud68c\uadc0 \uba38\uc2e0\ub7ec\ub2dd\uc73c\ub85c \ud559\uc2b5\n\n##### 5.2 \ubaa8\ub378 \uc120\ud0dd \ubc0f \ud29c\ub2dd\n\n##### 5.3 \uc624\ubc84\ud53c\ud305 \ud655\uc778\n\n### 3. submission","4c1cd3cf":"#### 1.1 \ub370\uc774\ud130 \ub85c\ub529","420b788d":"* count\uc640 \uc0b0\uc810\ub3c4\ub97c \uadf8\ub824 \ubcf4\uc558\uc744\ub54c \uc0c1\uad00\uacc4\uc218\ub294 -0.333\uc73c\ub85c \uc57d\ud55c \uc120\ud615\uc801 \uad00\uacc4\ub97c \ubcf4\uc785\ub2c8\ub2e4.","65833925":"#### \ubaa8\ub378 \uc0dd\uc131\n\n#### \ud3c9\uac00 \uc9c0\ud45c \uc0dd\uc131(root mean square lesat error)","ac628117":"* \uc885\uc18d \ubcc0\uc218\uac00 \uc5f0\uc18d\ud615 \ubcc0\uc218\uac00 \uc544\ub2c8\ub2e4\ubcf4\ub2c8 \uc815\uaddc\ud654\ub97c \ud1b5\ud574\uc11c\ub294 \ubd84\ud3ec\uac00 \ubcc0\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c log-scale\uc744 \ud574\uc904 \ud544\uc694\uac00 \uc788\uc5b4\ubcf4\uc785\ub2c8\ub2e4.","b1ee58b3":"#### Target ~ Month","2a899dde":"### 3. EDA\n \n#### 3.1 target \ubd84\ud3ec","50ae8bc6":"#### Target ~ Holiday : Hour","d43e4860":"* month \ubcc0\uc218\ub97c numeric \ubcc0\uc218\ub85c \uc0dd\uac01\ud560 \uacbd\uc6b0 \ub69c\ub837\ud55c \uad00\uacc4\ub098 \ucd94\uc138\ub97c \ubcf4\uc774\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n* 5~8\uc6d4\uc5d0\ub294 \ub2e4\ub978 \ub2ec\uc5d0 \ube44\ud574 box\uc758 \ud06c\uae30\uac00 \uc791\uace0 \uaf2c\ub9ac\uac00 \uae34 \ubaa8\uc2b5\uc744 \ubcf4\uc785\ub2c8\ub2e4.","ff587b87":"* log\ub97c \ucde8\ud55c \uacb0\uacfc \ubd84\ud3ec\uc758 \uc65c\ub3c4\uc640 \ucca8\ub3c4\uac00 \uc870\uae08 \ub354 \uc815\uaddc\ubd84\ud3ec\uc5d0 \uadfc\uc0ac\ud55c \ubaa8\uc2b5\uc744 \ubcf4\uc785\ub2c8\ub2e4\n* count\uc5d0 log\ub97c \ucde8\ud558\uc5ec \uc608\uce21\ud574 \ubcf4\ub824 \ud569\ub2c8\ub2e4. \ub2e4\ub9cc 0\uc73c\ub85c \uac12\uc744 \uac00\uc9c0\ub294 \ub370\uc774\ud130\uac00 \ub9ce\uc73c\ubbc0\ub85c log \ub300\uc2e0 log1p\ub97c \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4.","21b103a0":"#### Target ~ Hour","cdaff97d":"weather \ub97c 4\ub85c \uac12\uc744 \uac00\uc9c0\ub294 \ub370\uc774\ud130\ub294 train set\uc5d0\uc11c\ub294 1\uac1c, test set\uc5d0\uc11c\ub294 2\uac1c\uc785\ub2c8\ub2e4. weather\uac00 4\uc778 \ub370\uc774\ud130\uac00 \ub108\ubb34 \uc801\uae30\ub54c\ubb38\uc5d0 \ubcc0\uc218\ub97c \ubcc0\ud658\ud560 \ud544\uc694\ub97c \ub290\uaf08\uc2b5\ub2c8\ub2e4.\n\ub370\uc774\ud130 \uc124\uba85\uc5d0 \ubcf4\uba74 \uac12\uc774 \ucee4\uc9c8\uc218\ub85d \ub0a0\uc528\uac00 \uc548\uc88b\uc544 \uc9c4\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\nweather 3 \ubd80\ud130 \ube44\ub098 \ub208 \ud639\uc740 \ud0dc\ud48d\uc774 \uc624\ub294 \ub0a0\uc528\ub97c \ub73b\ud569\ub2c8\ub2e4.\n\ub530\ub77c\uc11c 4\ub85c \uac12\uc744 \uac00\uc9c0\ub294 \ub370\uc774\ud130\ub97c 3\uc73c\ub85c \ubc14\uafd4\uc8fc\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","5bb0bd20":"* holiday\ubcc4 count\uc758 \ubd84\ud3ec\ub294 \ucc28\uc774\uac00 \ub9ce\uc774 \uc5c6\uc5b4 \ubcf4\uc774\ubbc0\ub85c \uc124\uba85\ubcc0\uc218\ub85c \uc720\uc758\ubbf8\ud558\uc9c0 \uc54a\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n* \ub2e4\ub9cc \ud734\uc77c\uc77c\ub54c\uc640 \uc544\ub2d0\ub54c \uc2dc\uac04\ubcc4\ub85c \uc790\uc804\uac70 \ub300\uc5ec \uc218\uc694\ub7c9\uc774 \ub2e4\ub97c\uac83\uc73c\ub85c \uae30\ub300\ud574\ubcfc\uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \ud734\uc77c \ub0ae\uacfc \uc624\ud6c4\uc0ac\uc774\uc5d0 \uc218\uc694\ub7c9\uc774 \ud3c9\uc77c\ubcf4\ub2e4 \ub354 \ub9ce\uc744\uac83\uc73c\ub85c \uc608\uc0c1\ub418\uace0 \ucd9c\ud1f4\uadfc \uc2dc\uac04\uc5d0\ub294 \uc218\uc694\ub7c9\uc774 \ud3c9\uc77c\ubcf4\ub2e4 \ub354 \uc801\uc744\uac83\uc73c\ub85c \uc608\uc0c1\ub429\ub2c8\ub2e4.","9bfc0c56":"#### skewness (\uc65c\ub3c4)\n\n* feature\uc758 \ubd84\ud3ec\ub294 pairplot\uc744 \ud1b5\ud574 \uc2dc\uac01\ud654\ud558\uc5ec \ud655\uc778\ud55c \uacb0\uacfc \ub300\ubd80\ubd84 \uc815\uaddc\ubd84\ud3ec\uc758 \ubaa8\uc2b5\uc744 \ubcf4\uc774\uc9c0\ub9cc \uc65c\ub3c4\ub97c \uc9c1\uc811 \ud655\uc778\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n* \uc65c\ub3c4\ub294 \uc88c\uc6b0\ub300\uce6d\uc5d0 \ub300\ud55c \ud1b5\uacc4\uc694\uc57d\uce58\ub2e4 \ubd84\ud3ec\uc758 3\ucc28\uc801\ub960\uacfc \uad00\ub828\uc774 \uc788\uc73c\uba70 0\uc5d0 \uac00\uae4c\uc6b8 \uc218\ub85d \uc815\uaddc\ubd84\ud3ec\uc5d0 \uadfc\uc0ac\ud55c\ub2e4\uace0 \ub9d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc218\uce58\ud615 \ubcc0\uc218\ub4e4\uc758 \uc65c\ub3c4\ub97c \ud655\uc778\ud574\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","e701a008":"* \ud734\uc77c\uc77c\ub54c\uc640 \uc544\ub2d0\ub54c\uc758 \uc2dc\uac04\ubcc4 target\uc758 \ubd84\ud3ec\uac00 \ud655\uc2e4\ud788 \ub2e4\ub978\uac83\uc744 \ud655\uc778\ud560\uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* \ucd9c\ud1f4\uadfc\uc2dc\uac04(5-9 , 18-\ubc24)\uc5d0\ub294 \ud3c9\uc77c\uc5d0 \ub354 \ub9ce\uc774 \ube4c\ub9ac\uace0 \ucd9c\ud1f4\uadfc\uc2dc\uac04\uc774 \uc544\ub2d0\ub54c\ub294 \ud734\uc77c\uc5d0 \ub354 \ub9ce\uc774 \ube4c\ub9b0\ub2e4\uace0 \ub9d0\ud560\uc218 \uc788\uc2b5\ub2c8\ub2e4.\n* holiday\uc640 count\ub9cc\uc758 boxplot\uc744 \uadf8\ub824\ubcf4\uc558\uc744\ub54c\ub294 \ud070 \ucc28\uc774\uac00 \uc5c6\uc5b4\ubcf4\uc600\uc9c0\ub9cc \uc774\ub294 \uc2dc\uac04\ub300\ubcc4\ub85c \ucc28\uc774\uac00 \uc788\uae30\ub54c\ubb38\uc785\ub2c8\ub2e4.\n* holiday\uc640 hour\uc758 \uc0c1\ud638\uc791\uc6a9\ubcc0\uc218\ub97c \ucd94\uac00\uc801\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc904 \ud544\uc694\uac00 \uc788\uc5b4 \ubcf4\uc785\ub2c8\ub2e4.\n* \ud734\uc77c \uc77c\ub54c 5\uc2dc\ubd80\ud130 9\uc2dc \uae4c\uc9c0\ub294 \ud3c9\uc77c\ubcf4\ub2e4 \uc801\uac8c \ube4c\ub9ac\uc9c0\ub9cc 10\uc2dc\ubd80\ud130 17\uc2dc\uae4c\uc9c0\ub294 \ud734\uc77c\uc5d0 \ub354 \ub9ce\uc774 \ube4c\ub9ac\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4. \ub610\ud55c 18\uc2dc\ubd80\ud130 23\uc2dc\uae4c\uc9c0 \uc801\uac8c \ube4c\ub9ac\ub2e4\uac00 \uc0c8\ubcbd\uc5d0\ub294 \ub354 \ub9ce\uc774 \ube4c\ub9ac\ub294 \ud615\ud0dc\ub97c \ubcf4\uc785\ub2c8\ub2e4.","5f723684":"#### train_test_\ubd84\ub9ac \ubc0f randomforest \ud559\uc2b5","919a33b3":"## 5.2 model tuning","c0f10c87":"* test set \uc5d0\ub294 casual, registered\uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uc0ad\uc81c\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4","0196372e":"* arget\uc5d0 \ub85c\uadf8\ub97c \uc50c\uc6b4 \ub4a4 \ub610 \ub2e4\uc2dc \ub85c\uadf8\ub97c \uc50c\uc6b4 \uc810\uc218\uc774\uae30 \ub54c\ubb38\uc5d0 \uc2e4\uc81c \uc810\uc218\uc640\ub294 \ub2e4\ub978 \ub2e8\uc704\ub97c \uac00\uc9d1\ub2c8\ub2e4.\n* \uc774\uc911\uc5d0\uc11c randomforest \ub85c \uc608\uce21\uc744 \ud55c \ub4a4 \uc81c\ucd9c \ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","fe8b5b31":"* box \uc758 \ud06c\uae30\uc5d0\uc120 \ucc28\uc774\uac00 \uc5c6\uc5b4\ubcf4\uc774\uc9c0\ub9cc 2012\ub144\uc77c\ub54c \ud3c9\uade0\uc774 2011\ub144\uc5d0 \ube44\ud574 \ub192\uc2b5\ub2c8\ub2e4. \ub610\ud55c 2012\ub144\uc77c\ub54c \uc774\uc0c1\uce58(outlier)\uac00 \ub9ce\uc774 \ubcf4\uc774\ub294 \uac83\uc744 \ud655\uc778 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","5aa16e4e":"* temp \uc640 atemp \uac04\uc758 \ub69c\ub837\ud55c \uc120\ud615\uad00\uacc4\uac00 \ubcf4\uc785\ub2c8\ub2e4. \ub2e4\ub978 feature \ub4e4 \uacfc\uc758 \uad00\uacc4\uc5d0\uc120 \ub3c5\ub9bd\uc801\uc778 \ubaa8\uc2b5\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.\n* feature\uac04\uc758 \uac15\ud55c \uc120\ud615\uad00\uacc4\uc5d0 \uc788\uc744 \uacbd\uc6b0 \ud68c\uadc0\uc5d0\uc11c \ucd94\uc815\uacc4\uc218\uc758 \ubd84\uc0b0\uc774 \ub192\uc544\uc9c0\ubbc0\ub85c \uc2e0\ub8b0\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. \uc774\ub97c \ub2e4\uc911\uacf5\uc120\uc131 \ud604\uc0c1\uc774\ub77c \ud558\ub294\ub370 \ud574\uacb0\ubc29\ubc95\uc73c\ub85c\ub294 \ubcc0\uc218 \uc81c\uac70, \ucc28\ubd84, log \ubcc0\ud658, \uc815\uaddc\ud654 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4.\n* \uc628\ub3c4\uc640 \uccb4\uac10\uc628\ub3c4\ub294 \ube44\uc2b7\ud55c \uc758\ubbf8\ub97c \uac00\uc9c0\uae30 \ub54c\ubb38\uc5d0 \ubcc0\ud658\uc744 \ud1b5\ud574\uc11c \ub2e4\uc911\uacf5\uc120\uc131 \ud604\uc0c1\uc744 \ud574\uacb0\ud558\uae30 \ubcf4\ub2e4\ub294 \ub458\uc911 \ud558\ub098\ub97c \uc0ad\uc81c \ud574\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.\n* target\uacfc\uc758 \ub354 \ub0ae\uc740 \uc0c1\uad00\uacc4\uc218\ub97c \uac00\uc9c0\ub294 \ubcc0\uc218\ub97c \uc81c\uac70\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4."}}