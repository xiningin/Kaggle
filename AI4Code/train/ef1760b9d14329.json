{"cell_type":{"e80617d7":"code","796cf688":"code","49de5e14":"code","852a0930":"code","f69335b8":"code","220247e9":"code","2b054e4d":"code","c12c8c30":"code","e1607dc0":"code","8c17688a":"code","c7100851":"code","2ef0e48a":"code","7853717c":"code","b59865e7":"code","5b2b6409":"code","6b0331be":"code","260f51e4":"code","33bf7d2f":"code","5af924f0":"code","5c6682b8":"markdown","ae321acb":"markdown"},"source":{"e80617d7":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","796cf688":"# Load dataset\ndata = pd.read_csv(\"\/kaggle\/input\/data-analyst-jobs\/DataAnalyst.csv\")\ndata.head()","49de5e14":"data.info()","852a0930":"data.drop(\"Unnamed: 0\", axis=1, inplace=True)","f69335b8":"data.replace(to_replace = \"-1\", value = np.nan, inplace = True)\ndata.replace(to_replace = -1.0, value = np.nan, inplace = True)\ndata.replace(to_replace = -1, value = np.nan, inplace = True)\ndata.head()","220247e9":"data.isna().sum()","2b054e4d":"def clean_data(name):\n    data[name] = data[name].str.replace(r'\\r\\n|\\r|\\n\\d*[0-9](|.\\d*[0-9]|)*$', '')\n    data[name] = data[name].str.replace(r'\\r\\n|\\r|\\n', ' ')\n    data[name] = data[name].str.replace(r\"[$K*]\", ' ')","c12c8c30":"clean_data(\"Company Name\")\nclean_data(\"Job Description\")\nclean_data(\"Salary Estimate\")\ndata.head()","e1607dc0":"divided_data = data[\"Salary Estimate\"].str.split(\"-\", expand=True)\ndata['Minimum Salary'] = pd.to_numeric(divided_data[0].str.extract('(\\d+)', expand=False)) * 1000\ndata[\"Maximum Salary\"] = pd.to_numeric(divided_data[1].str.extract('(\\d+)', expand=False)) * 1000\ndata.head()","8c17688a":"data[\"Job Title\"].value_counts()[:20]","c7100851":"data.describe()","2ef0e48a":"top_companies = data[\"Company Name\"].value_counts().sort_values(ascending=False).head(20)\nfig, ax = plt.subplots(figsize=(14,9))\nrect1 = sns.barplot(x = top_companies.index, y = top_companies.values, palette=\"deep\").set_xticklabels(ax.get_xticklabels(), rotation=90)\nax.set_title(\"Top 20 Company with Highest number of Jobs\", fontweight=\"bold\")","7853717c":"ratings_data = data['Rating'].value_counts()\nfig, ax = plt.subplots(figsize=(14,9))\nrect1 = sns.barplot(x = ratings_data.index, y = ratings_data.values, palette=\"deep\").set_xticklabels(ax.get_xticklabels(), rotation=90)\nax.set_title(\"Ratings distribution\", fontweight=\"bold\")","b59865e7":"top_industries = data[\"Industry\"].value_counts().sort_values(ascending=False).head(20)\nfig, ax = plt.subplots(figsize=(14,9))\nrect1 = sns.barplot(x = top_industries.index, y = top_industries.values, palette=\"deep\").set_xticklabels(ax.get_xticklabels(), rotation=90)\nax.set_title(\"Top 20 Industries with Highest number of Jobs\", fontweight=\"bold\")","5b2b6409":"data_corr = {\n    'Rating': data.Rating,\n    'Location': data.Location,\n    'Industry': data.Industry,\n    'Founded': data.Founded,\n    'Min Salary': data['Minimum Salary'],\n    'Max Salary': data['Maximum Salary']\n}\n\ndata_corr = pd.DataFrame.from_dict(data_corr)\ndata_corr['Location'] = data_corr['Location'].astype('category').cat.codes\ndata_corr['Industry'] = data_corr['Industry'].astype('category').cat.codes\n\ncorr = data_corr.corr()\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\nf, ax = plt.subplots(figsize=(10, 10))\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\nplt.show()\ncorr","6b0331be":"from wordcloud import WordCloud, ImageColorGenerator\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn')\nfrom PIL import Image\nfrom nltk.corpus import stopwords\n\nwords_cloud = data[\"Job Description\"].str.split(\"(\").str[0].value_counts().keys()\nwc1 = WordCloud(stopwords=stopwords.words(\"english\"),scale=5,max_words=1000,colormap=\"rainbow\",background_color=\"white\").generate(\" \".join(words_cloud))\nplt.figure(figsize=(20,14))\nplt.imshow(wc1,interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.title(\"Key Words in Job Descriptions\",color='black',fontsize=20)\nplt.show()","260f51e4":"gr = sns.catplot(x = 'Minimum Salary', y = 'Industry', kind = \"box\", data = data, order = data.Industry.value_counts().iloc[:20].index)\ngr.fig.set_size_inches(30, 10)","33bf7d2f":"gr = sns.catplot(x = 'Maximum Salary', y = 'Industry', kind = \"box\", data = data, order = data.Industry.value_counts().iloc[:20].index)\ngr.fig.set_size_inches(30, 10)","5af924f0":"gr = sns.catplot(x = 'Rating', y = 'Industry', kind = \"box\", data = data, order = data.Industry.value_counts().iloc[:20].index)\ngr.fig.set_size_inches(30, 10)","5c6682b8":"# **Visualizate of EDA:**","ae321acb":"# **Let`s see the data:**\n\n- explore count, types and etc;\n- replace -1, '-1' and -1.0 with NaN;\n- explore count of NaN-values;\n- based on 'Salary Estimate' create 2 colimns: min and max salary;\n- see values of 'Job Title'."}}