{"cell_type":{"c5388add":"code","9cc84894":"code","cff8dd67":"code","ae449380":"code","a5d42e56":"code","e412b900":"code","6254b892":"code","e029839c":"code","6b30e03f":"code","890eeaff":"code","e4862c0b":"code","6398a0db":"code","aa19d9f2":"code","d070ca3a":"code","be39fa05":"code","bd003540":"code","cb63a0f8":"code","d80dc856":"code","fd37447a":"code","beea3b5a":"code","cdc47fdd":"code","45548677":"markdown","cfcfa9c6":"markdown","f92aaf07":"markdown","013e7103":"markdown","ca5d7bba":"markdown","b612d8c3":"markdown","29b98e07":"markdown"},"source":{"c5388add":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9cc84894":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nimport seaborn as sns","cff8dd67":"df = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\nprint(df.head())\nprint('\\n')\nprint(df.info())","ae449380":"df['data_tratada'] = pd.to_datetime(df.ObservationDate)","a5d42e56":"# Verifica o preenchimento da coluna Country\/Region\ndf['Country\/Region'].sort_values().unique()","e412b900":"replace_country = {' Azerbaijan':'Azerbaijan',\"('St. Martin',)\":'St. Martin'}\ndf['Country\/Region'] = df['Country\/Region'].replace(replace_country)","6254b892":"# Criando dataset agrupado por Country\/Region e data\ndfDia = df.groupby(['Country\/Region', 'data_tratada']).agg('sum').reset_index().drop('SNo', axis=1)\ndfDia.sort_values(by=['Country\/Region','data_tratada'], inplace=True)\ndfDia.head()","e029839c":"# Criando dicion\u00e1rio com a data do primeiro caso de coronavirus confirmado em cada pa\u00eds\nfirst_confirmed = {}\nfor c in dfDia['Country\/Region'].unique():\n    first = dfDia[(dfDia['Country\/Region'] == c) & (dfDia['Confirmed'] > 0)]['data_tratada'].min()\n    first_confirmed[c] = first","6b30e03f":"def calc_dias(dt, country):\n    '''\n    Fun\u00e7\u00e3o para calcular a quantidade de dias passados desde a data do primeiro caso de coronav\u00edrus confirmado\n    '''\n    dt_conf = first_confirmed.get(country)\n    if dt >= dt_conf:\n        return (dt - dt_conf).days\n    else:\n        return np.nan","890eeaff":"# Aplica a fun\u00e7\u00e3o calc_dias em todo o dataset di\u00e1rio\ndfDia['dias_corridos'] = dfDia.apply(lambda x: calc_dias(x['data_tratada'], x['Country\/Region']), axis=1)","e4862c0b":"# Verifica quais pa\u00edses possuem atualiza\u00e7\u00e3o no dia 15\/3\ndfDia.groupby('Country\/Region')['data_tratada'].agg('max').value_counts()","6398a0db":"# Verificando os \u00faltimos valores registrados por pa\u00eds\ndfDia.groupby('Country\/Region')['Confirmed'].agg('max').sort_values(ascending=False)","aa19d9f2":"# Criando dataframe sem a China\ndfDia2  = dfDia[ dfDia['Country\/Region'] != 'Mainland China']","d070ca3a":"# Vari\u00e1vel com a quantidade de dias a ser mostrada no gr\u00e1fico. \u00f9ltima data de atualiza\u00e7\u00e3o no Brasil + 3 dias\nqtd_dias_brasil = int(dfDia2[ dfDia2['Country\/Region'] == 'Brazil']['dias_corridos'].max())\nqtd_dias_analise = qtd_dias_brasil + 30","be39fa05":"# Criando dataframes para plotagem\ndados_brasil = dfDia2[ dfDia2['Country\/Region'] == 'Brazil']\ndados_italia = dfDia2[ dfDia2['Country\/Region'] == 'Italy']\ndados_us = dfDia2[ dfDia2['Country\/Region'] == 'US']\ndados_mundo = dfDia2[ dfDia2['Country\/Region'] != 'Brazil']","bd003540":"plt.style.use('ggplot')\n\nplt.figure(figsize=(13,6))\nplt.title(f'Evolu\u00e7\u00e3o de Casos Confirmados (COVID-19) no Mundo\\n({qtd_dias_analise} dias corridos ap\u00f3s a primeira confirma\u00e7\u00e3o em cada pa\u00eds)\\n\\n', size=20)\nmundo = plt.plot(dados_mundo['dias_corridos'],dados_mundo['Confirmed'], color = 'lightgray', label = 'Outros pa\u00edses')\nus = plt.plot(dados_us['dias_corridos'],dados_us['Confirmed'], color = 'blue', marker='o', linewidth=2, label='USA')\nitalia = plt.plot(dados_italia['dias_corridos'],dados_italia['Confirmed'], color = 'green', marker='o', linewidth=2, label='It\u00e1lia')\nbrasil = plt.plot(dados_brasil['dias_corridos'],dados_brasil['Confirmed'], color = 'red', marker='o', linewidth=2, label='Brasil')\nplt.xticks(range(0,qtd_dias_analise+1), fontsize=9)\n# R\u00f3tulo Brasil\nplt.text(qtd_dias_brasil+0.5, dfDia2[ dfDia2['Country\/Region'] == 'Brazil']['Confirmed'].max(), int(dfDia2[ dfDia2['Country\/Region'] == 'Brazil']['Confirmed'].max()), fontsize=15, color='red')\n# R\u00f3tulo Italia\nplt.text(28+0.4, int(dados_italia[ dados_italia['dias_corridos'] == 28.0 ]['Confirmed']) , int(dados_italia[ dados_italia['dias_corridos'] == 28.0 ]['Confirmed']), fontsize=15, color='green')\n# R\u00f3tulo USA\nplt.text(46-0.4, int(dados_us[ dados_us['dias_corridos'] == 48.0 ]['Confirmed']) , int(dados_us[ dados_us['dias_corridos'] == 48.0 ]['Confirmed']), fontsize=15, color='blue')\nplt.xlim([0,qtd_dias_analise])\nplt.ylim([0,1000])\nplt.xlabel('\\nDias Corridos', fontsize=15)\nplt.ylabel('Casos Confirmados\\n', fontsize=20)\nplt.legend(fontsize=12)\nplt.text(0.2,1010,'Dados atualizados at\u00e9 o dia {}.'.format(dfDia2[\"data_tratada\"].max().strftime(\"%d\/%m\/%Y\")))\nplt.text(0,-150,'Criado por:\\nEduardo Braz Rabello')","cb63a0f8":"plt.style.use('ggplot')\n\nplt.figure(figsize=(15,10))\nplt.yscale('log')\nplt.title(f'Evolu\u00e7\u00e3o de Casos Confirmados (COVID-19) no Mundo\\n({qtd_dias_analise} dias corridos ap\u00f3s a primeira confirma\u00e7\u00e3o em cada pa\u00eds)\\n', size=20)\nmundo = plt.plot(dados_mundo['dias_corridos'],dados_mundo['Confirmed'], color = 'lightgray', label = 'Outros pa\u00edses')\nus = plt.plot(dados_us['dias_corridos'],dados_us['Confirmed'], color = 'blue', marker='o', linewidth=2, label='USA')\nitalia = plt.plot(dados_italia['dias_corridos'],dados_italia['Confirmed'], color = 'green', marker='o', linewidth=2, label='It\u00e1lia')\nbrasil = plt.plot(dados_brasil['dias_corridos'],dados_brasil['Confirmed'], color = 'red', marker='o', linewidth=2, label='Brasil')\n#plt.xticks(range(0,60,5), fontsize=9)\n# R\u00f3tulo Brasil\nplt.text(qtd_dias_brasil+0.5, dfDia2[ dfDia2['Country\/Region'] == 'Brazil']['Confirmed'].max(), int(dfDia2[ dfDia2['Country\/Region'] == 'Brazil']['Confirmed'].max()), fontsize=15, color='red')\n# R\u00f3tulo Italia\n#plt.text(28+0.4, int(dados_italia[ dados_italia['dias_corridos'] == 28.0 ]['Confirmed']) , int(dados_italia[ dados_italia['dias_corridos'] == 28.0 ]['Confirmed']), fontsize=15, color='green')\n# R\u00f3tulo USA\n#plt.text(46-0.4, int(dados_us[ dados_us['dias_corridos'] == 48.0 ]['Confirmed']) , int(dados_us[ dados_us['dias_corridos'] == 48.0 ]['Confirmed']), fontsize=15, color='blue')\nplt.xlabel('\\nDias Corridos', fontsize=15)\nplt.ylabel('Casos Confirmados\\n', fontsize=20)\nplt.legend(fontsize=12)\n#plt.text(0.2,1010,'Dados atualizados at\u00e9 o dia {}.'.format(dfDia2[\"data_tratada\"].max().strftime(\"%d\/%m\/%Y\")))\n#plt.text(0,-150,'Criado por:\\nEduardo Braz Rabello')","d80dc856":"dados_mundo_corr = dados_brasil[ ['Country\/Region', 'dias_corridos', 'Confirmed'] ].copy()\nfor c in dfDia2['Country\/Region'].unique():\n    dataset = dados_mundo[dados_mundo['Country\/Region'] == c ][ ['dias_corridos', 'Confirmed'] ]\n    dados_mundo_corr = pd.merge(dados_mundo_corr, dataset, on='dias_corridos', how='outer', suffixes=(None, f'_{c}'))\n\ndados_mundo_corr.drop(['Country\/Region', 'dias_corridos'], axis=1, inplace = True)","fd37447a":"teste = dfDia2[dfDia2['Country\/Region'] == 'Italy' ][ ['dias_corridos', 'Confirmed'] ]\nteste.head()","beea3b5a":"lista_corr_BR = dados_mundo_corr.corr()['Confirmed'].sort_values(ascending=False).dropna()\nlista_corr_BR[lista_corr_BR > 0.95]","cdc47fdd":"dfDia2[ dfDia2['Country\/Region'] == 'Portugal']","45548677":"Criando dataset di\u00e1rio","cfcfa9c6":"- Criar gr\u00e1fico com o TOP paises com mais casos confirmados nos 18 primeiros dias\n- Criar minigraficos com os paises que tiveram correla\u00e7\u00e3o alta com o Brasil\n- Criar compara\u00e7\u00e3o de evolu\u00e7\u00e3o di\u00e1ria % de crescimento","f92aaf07":"**Importando bibliotecas**","013e7103":"Gr\u00e1fico comparativo da evolu\u00e7\u00e3o do coronavirus ao longo dos dias \u00e0 partir do primeiro caso confirmado no pa\u00eds, destacando o Brasil e a It\u00e1lia","ca5d7bba":"Tratamento dos dados","b612d8c3":"Pelos valores da China serem muito maiores que os demais porque foi o epicentro do corona, seus dados ser\u00e3o desconsiderados na an\u00e1lise.","29b98e07":"Ao analisar os nomes dos pa\u00edses registrados foram identificados que 2 pa\u00edses est\u00e3o despadronizados. Ser\u00e1 feito um tratamento nos pa\u00edses ' Azerbaijan' e \"('St. Martin',)\""}}