{"cell_type":{"4e918175":"code","aa80e9fc":"code","6734bd81":"code","ed121dd9":"code","b66b46b1":"code","93222144":"code","4f090021":"code","214e2b01":"markdown","6093f08e":"markdown","19b0fae8":"markdown","e057e52d":"markdown","10061cf0":"markdown","bbfd8a50":"markdown"},"source":{"4e918175":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aa80e9fc":"import matplotlib.pyplot as plt\nimport pandas as pd\n\ntrain = pd.read_csv('..\/input\/30-days-of-ml\/train.csv', index_col='id')\ntrain.info()","6734bd81":"train.head()","ed121dd9":"# The target is a continuous variable.\nfig, axes = plt.subplots(ncols=2, figsize=(10, 5))\n\nprint(train.target.describe())\n\ntrain.target.plot.box(ax=axes[0])\ntrain.target.hist(ax=axes[1])\n\nplt.suptitle('Target variable')\nplt.tight_layout()\nplt.show()","b66b46b1":"categorical_cols = [col for col in train.columns.values if col.startswith('cat')]\ncontinuous_cols = [col for col in train.columns.values if col.startswith('cont')]","93222144":"fig, axes = plt.subplots(ncols=5, nrows=2, figsize=(16, 6))\n\nfor i, (col, ax) in enumerate(zip(train[categorical_cols], axes.ravel())):\n    train[col].value_counts().sort_index().plot.bar(ax=ax, title=col)\n\nplt.suptitle('Categorical features')\nplt.tight_layout()\nplt.show()","4f090021":"fig, ax = plt.subplots(figsize=(10,8))\ntrain[continuous_cols].plot.box(ax=ax, title='Continuous features')\nplt.show()","214e2b01":"<a id=\"target\"><\/a>\n## Target variable\n\nObservations\n* The majority of data is distributed between 7 and 9\n* There are some outliers (arbout <6 and 10<)","6093f08e":"<a id=\"categorical\"><\/a>\n### Categorical features","19b0fae8":"<a id=\"features\"><\/a>\n## Input features\n\nThe data include 10 categorical features (cat0-cat9) and 14 numerical features (cont0-13) ","e057e52d":"## Table of contents\n\n* [Dataset overview](#overview)\n* [Target variable](#target)\n* [Input features](#features)\n  * [Categorical features](#categorical)\n  * [Continuous features](#continuous)","10061cf0":"<a id=\"overview\"><\/a>\n## Dataset overview\n\n[from the compention page](https:\/\/www.kaggle.com\/c\/30-days-of-ml\/overview)\n\n> The dataset is used for this competition is synthetic (and generated using a CTGAN), but based on a real dataset. The original dataset deals with predicting the amount of an insurance claim. Although the features are anonymized, they have properties relating to real-world features.\n\n> For this competition, you will be predicting a continuous target based on a number of feature columns given in the data. All of the feature columns, `cat0` - `cat9` are categorical, and the feature columns `cont0` - `cont13` are continuous.","bbfd8a50":"<a id=\"continuous\"><\/a>\n### Continuous features\n\nContinuous value features are mostly distributed around 0.5. `cont0`, `cont6` and `cont8` contain some outliers."}}