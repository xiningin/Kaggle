{"cell_type":{"d8ffc462":"code","adb2b64d":"code","cc852533":"code","9a8941c7":"code","48d3a1b5":"code","63fdb268":"code","13c06beb":"code","3118a7da":"code","9170d436":"code","541c6f70":"code","5f838f40":"code","27419e5f":"code","1f9c3443":"code","3229760c":"code","7b27269e":"code","d97b5b43":"code","8ee85601":"markdown","5b8f7a67":"markdown","967e1f15":"markdown","a798a83d":"markdown","4a30d71f":"markdown","1b3fdd6b":"markdown","6b35dfe2":"markdown","84cec82e":"markdown"},"source":{"d8ffc462":"import numpy as np\nnp.random.seed(1)\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport copy\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# optional\n# sns.set(style=\"whitegrid\")","adb2b64d":"data=pd.read_csv(\"..\/input\/heart.csv\")\ndata.head()","cc852533":"sns.distplot(data.target)","9a8941c7":"cmap = sns.diverging_palette(250, 15, s=75, l=40,n=9, center=\"dark\")\nf, ax = plt.subplots(figsize=(20,20))\nsns.heatmap(data.corr(),square=True,annot=True,vmin=-1,vmax=1, center=0,cmap=cmap)","48d3a1b5":"def draw_data_analysis(data,x,y,ws=1):\n    size=(max(10,len(pd.unique(data[x]))\/ws),10)\n    f, ax = plt.subplots(figsize=size)    \n    sns.countplot(data[x])\n    plt.title(\"Countplot \"+x)\n    plt.show()\n    \n    f, ax = plt.subplots(figsize=size)\n    sns.barplot(x=x,y=y,data=data)\n    plt.title(\"Barplot \"+x)\n    plt.show()","63fdb268":"for column in data.columns.drop('target'):\n    draw_data_analysis(data,column,'target',2)","13c06beb":"data.isna().sum()","3118a7da":"data_prev=copy.copy(data)\ndata.age=pd.cut(data.age,15)\ndata.trestbps=pd.cut(data.trestbps,5)\ndata.chol=pd.cut(data.chol,20)\ndata.thalach=pd.cut(data.thalach,10)\ndata.oldpeak=pd.cut(data.oldpeak,10)\n# data.thal=data.thal.astype('category')","9170d436":"for column in data.columns.drop('target'):\n    draw_data_analysis(data,column,'target',1\/2)","541c6f70":"f, ax = plt.subplots(figsize=(20,20))\nsns.heatmap(data.corr(),square=True,annot=True,vmin=-1,vmax=1, center=0,cmap=cmap)","5f838f40":"data.info()","27419e5f":"data.describe()","1f9c3443":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import KFold, cross_val_score, train_test_split\nimport xgboost as xgb\nfrom sklearn.metrics import accuracy_score,auc\nfrom sklearn.ensemble import RandomForestClassifier\n\ny=data.target\ndata=data.drop(['target'],axis=1)\nnum_feat=data.dtypes[data.dtypes!='category'].index\n\nsc=StandardScaler()\ndata[num_feat]=sc.fit_transform(data[num_feat])","3229760c":"data.describe()","7b27269e":"kfolds = KFold(n_splits=10, shuffle=True,random_state=1)\ndef acc_cv(model):\n    acc= cross_val_score(model, data.values, y.values, scoring=\"roc_auc\", cv = kfolds.get_n_splits(data.values))\n    return acc","d97b5b43":"\ndata=pd.get_dummies(data)\n\nX_train, X_test, y_train, y_test = train_test_split(data.values, y.values, test_size=0.4,random_state=100)\nrf=RandomForestClassifier(30,random_state=1)\nrf.fit(X_train,y_train)\nprint(acc_cv(rf).mean())\n\nxgbm=xgb.XGBClassifier(objective='binary:hinge',random_state=1)\nxgbm.fit(X_train,y_train)\nprint(acc_cv(xgbm).mean())","8ee85601":"## Data Normalization","5b8f7a67":"## Feature Engineering","967e1f15":"## EDA","a798a83d":"## Building and Evaluate model","4a30d71f":"## Analyze of Data after FE","1b3fdd6b":"## Imports and data import","6b35dfe2":"## Table of contents\n* [Imports and data import](#Imports-and-data-import)\n* [EDA](#EDA)\n* [NULL Check](#NULL-Check)\n* [Feature Engineering](#Feature-Engineering)\n* [Analyze of Data after FE](#Analyze-of-Data-after-FE)\n* [Data Normalization](#Data-Normalization)\n* [Building and Evaluate model](#Building-and-Evaluate-model)","84cec82e":"## NULL Check"}}