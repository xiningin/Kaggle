{"cell_type":{"0a3304a8":"code","669366b2":"code","18ce826f":"code","f8456b98":"code","7d06ed8e":"code","c7aa68d5":"code","f370f2f0":"code","2bf45f35":"code","94675597":"code","646092fb":"code","c6e683bf":"code","06853b56":"code","bddbf230":"code","5378ec49":"code","2134d8fb":"markdown"},"source":{"0a3304a8":"import nltk\nimport pandas as pd\nimport numpy\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom nltk.tokenize import RegexpTokenizer\nimport re\nimport gc\nfrom  collections import Counter\nimport math","669366b2":"file_0=open(\"..\/input\/xab\",mode='r',encoding='latin-1')\nfile_content=file_0.read()\nfile_0.close()\ndel(file_0)\ngc.collect()","18ce826f":"temp = re.sub(r'[^a-zA-Z0-9\\-\\s]*', r'', file_content)\ntemp = re.sub(r'(\\-|\\s+)', ' ', temp)\ndel(file_content)\ngc.collect()\n","f8456b98":"token_nltk=nltk.word_tokenize(temp)\ndel(temp)\nword_count = Counter(token_nltk)\n#print(word_count)\ngc.collect()","7d06ed8e":"two_gram=nltk.ngrams(token_nltk,2)\ngm=Counter(two_gram)\ntoken=gm.keys()\nfrequency=gm.values()","c7aa68d5":"def binary(k, n, x):\n    if (x == 0.0):\n        x = 0.01\n    if (x == 1.0): \n        x = 0.99\n    return k * math.log(x) + (n-k) * math.log(1-x)","f370f2f0":"N =sum(frequency)\nlength_dist_bigram=len(token)\nbigrams = nltk.bigrams(token_nltk)","2bf45f35":"unique_bigram=set(bigrams)","94675597":"list1=[]\nlist2=[]\nfor bi in unique_bigram:\n    c12 = gm.get(bi)\n    w1 = bi[0]\n    w2 = bi[1]\n    c1 = word_count.get(w1)\n    c2 = word_count.get(w2)\n    #print(c12)\n    #print(bi)\n    p = c2\/N\n    p1 = c12\/c1\n    p2 = (c2 - c12)\/(N - c1)\n    ll = binary(c12, c1, p) + binary(c2-c12, N-c1, p) - binary(c12, c1, p1) - binary(c2-c12, N-c1, p2)\n    ratio = -2 * ll\n    #print(bi)\n    #print(ratio)\n    list1.append(ratio)\n    list2.append(bi)\n    ","646092fb":"df=pd.DataFrame()\ndf[\"bi-gram\"]=list2\ndf[\"lv\"]=list1","c6e683bf":"df.head()","06853b56":"df.to_csv(\"mlr_bigram.csv\")","bddbf230":"df_10=df.nlargest(10,\"lv\")","5378ec49":"df_10","2134d8fb":"**Likelihood Ratio Test for finding all bi-gram **"}}