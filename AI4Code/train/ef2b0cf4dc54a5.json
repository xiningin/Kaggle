{"cell_type":{"d08c9cca":"code","a1463df9":"code","9cd0b7af":"code","bdf74047":"code","4fa854d1":"code","dce549d8":"code","39ad0b35":"code","71878679":"code","928ca695":"code","9c48ddc7":"code","da70c8a8":"code","1daf8ba1":"code","0a69d20d":"code","ab1a2f98":"code","606ab0ef":"code","2743f429":"code","30a61ec8":"code","59a5b157":"markdown","ab16cdc8":"markdown","e6928b45":"markdown","7ac9bc5d":"markdown","729203bd":"markdown","da7e138c":"markdown","58cdeda1":"markdown","e08a6ce1":"markdown","746b12b3":"markdown","0d8a4010":"markdown","a147975b":"markdown","c0cfc264":"markdown","5ab5a480":"markdown","e9bf86bd":"markdown","d3d64389":"markdown","88594c76":"markdown","5203a457":"markdown","771d3ca3":"markdown","f0bdd0dd":"markdown","324ed573":"markdown","f05dbe9b":"markdown","ac60bda1":"markdown","320f98b7":"markdown","de8a61db":"markdown","e22c5b9e":"markdown"},"source":{"d08c9cca":"import pandas as pd # Datensets\nimport numpy as np # Data Manipulation\nimport os # File System\nfrom IPython.display import Image\nfrom IPython.core.display import HTML \nimport matplotlib.pyplot as plt # Library for Plotting\nfrom mpl_toolkits.mplot3d import Axes3D  # noqa: F401 unused import\nimport seaborn as sns # Library for Plotting\nsns.set # make plots look nicer\nsns.set_palette(\"husl\")\nimport warnings\nwarnings.filterwarnings('ignore')\n# Plot inside Notebooks\n%matplotlib inline ","a1463df9":"# Read in Data\ndata = pd.read_csv(\"..\/input\/testsets\/avocado.csv\")","9cd0b7af":"# ToDo: Take a look at the data. \n# Try printing some lines or use describe to get a feel for it\ndata.head()","bdf74047":"# ToDo: Delete all data where region is in statelist\nstatelist = [ \"TotalUS\", 'California', 'GreatLakes', 'Midsouth', 'Northeast', 'SouthCarolina', 'SouthCentral', 'Southeast', 'Philadelphia', 'Plains', 'West']\ndata = data[~data.region.isin(statelist)]\n# ToDo: Remove all missing Data from the dataset\ndata = data.dropna(how=\"any\")\n# ToDo: Convert the \"Date\" column to datetime\ndata.Date = pd.to_datetime(data.Date)\n# ToDo: Calculate RealPrice\ndata[\"RealPrice\"] = ((2018 - data.Date.dt.year) * 0.02015 + 1) * data[\"AveragePrice\"]\n#ToDo: Find the number of remaining regions\nlen(data.region.unique())","4fa854d1":"#ToDo: Plot Data by time and price\nfig, ax = plt.subplots(figsize=(25, 10)) # Size of Plot\nax = sns.lineplot(x=\"Date\", y=\"AveragePrice\", data=data) # Makes a LinePlot\nplt.show()\n#ToDo: Plot Data by time and Volume\/Sales\nfig, ax = plt.subplots(figsize=(25, 10)) # Size of Plot\nax = sns.lineplot(x=\"Date\", y=\"Total Bags\", data=data) # Makes a LinePlot\nplt.show()","dce549d8":"#ToDo: Plot Data by time and price and type with style\nfig, ax = plt.subplots(figsize=(25, 10)) # Size of Plot\nax = sns.lineplot(x=\"Date\", y=\"AveragePrice\", hue=\"type\", data=data)\nplt.show()","39ad0b35":"# ToDo: create subset of Data and cut between 2017-01-01 and 2017-04-15\n# ToDo: Define the begin of the cut\nbegin = pd.to_datetime(\"2017-01-01\")\n# ToDo: Define the end of the cut\nend = pd.to_datetime(\"2017-04-15\")\n# ToDo: Cut the data\nsubset = data[(data[\"Date\"] > begin) & (data[\"Date\"] < end)]\n# ToDo: Plot Data by time and price and type with hue\nfig, ax = plt.subplots(figsize=(25, 10)) # Size of Plot\nax = sns.lineplot(x=\"Date\", y=\"AveragePrice\", hue=\"type\", data=subset)\nplt.show()","71878679":"#ToDo: Plot date and volume of S, L and XL Avocados in one graph\nfig, ax = plt.subplots(figsize=(25, 10))\nax = sns.lineplot(x=\"Date\", y=\"S\",data=data, label=\"S\")\nax = sns.lineplot(x=\"Date\", y=\"L\",data=data, label = \"L\")\nax = sns.lineplot(x=\"Date\", y=\"XL\",data=data, label = \"XL\")\nplt.legend()\nplt.show()","928ca695":"#ToDo: Plot date and volume of S, L and XL Bags in one graph\nfig, ax = plt.subplots(figsize=(25, 10))\nax = sns.lineplot(x=\"Date\", y=\"Small Bags\",data=data, label=\"S\")\nax = sns.lineplot(x=\"Date\", y=\"Large Bags\",data=data, label = \"L\")\nax = sns.lineplot(x=\"Date\", y=\"XLarge Bags\",data=data, label = \"XL\")\nplt.legend()\nplt.show()","9c48ddc7":"#ToDo: Plot a graph time and Volume for organic and conventional avocados seperately\n# Splitting Data\nconventional = data[data[\"type\"] == \"conventional\"]\norganic = data[data[\"type\"] == \"organic\"]\n\n# plot first data\nfig, ax = plt.subplots(figsize=(25, 10))\nax = sns.lineplot(x=\"Date\", y=\"Total Volume\",data=conventional, label=\"conventional\")\nplt.legend()\nplt.show()\n#plot second data\nfig, ax = plt.subplots(figsize=(25, 10))\nax = sns.lineplot(x=\"Date\", y=\"Total Volume\",data=organic, label=\"organic\")\nplt.legend()\nplt.show()","da70c8a8":"# ToDo: Calculate sum of Total Volume for organic and conventional\norganic_sales = organic[\"Total Volume\"].sum()\nconv_sales = conventional[\"Total Volume\"].sum()\n\n# ToDo: Calculate share of organic avocado Sales from all sold avocados\norganic_sales \/ (conv_sales + organic_sales)","1daf8ba1":"# ToDo: Plot a barchart with total volume and year, seperate by type\nfig, ax = plt.subplots(figsize=(25, 10))\nax = sns.barplot(x=\"year\", y=\"Total Volume\",data=data, hue = \"type\")\nplt.legend()\nplt.show()","0a69d20d":"# ToDo: Plot a barchart with type and real price, seperate by year\nfig, ax = plt.subplots(figsize=(25, 10))\nax = sns.barplot(x=\"type\", y=\"RealPrice\",data=data, hue = \"year\")\nplt.legend()\nplt.show()","ab1a2f98":"# ToDo: Scatter the data by S volume and L Volume\nfig, ax = plt.subplots(figsize=(25, 10))\nax = sns.scatterplot(x=\"S\", y=\"L\", data=conventional)\nplt.legend()\nplt.show()","606ab0ef":"# ToDo: Scatter the data by S volume and L Volume\nfig, ax = plt.subplots(figsize=(25, 10))\nax = sns.scatterplot(x=\"S\", y=\"L\", data=conventional[conventional[\"region\"] == \"Boston\"])\nplt.legend()\nplt.show()","2743f429":"sns.factorplot(x='AveragePrice',y='region',data=data[data.type==\"organic\"],hue='year', size = 15, join = False)","30a61ec8":"# durch L\u00f6sungen ersetzen:\n\na1 = [1, 43]               \na2 = [2, 2017]               \na3 = [3, 2018]               \na4 = [4, 2017]              \na5 = [5, 1.4]    \na6 = [6, \"False\"]  \na7 = [7, \"True\"]              \na8 = [8, \"Bio\"]              \na9 = [9, 0.028]             \na10 = [10, 2018]            \na11 = [11, 2018]  \na12 = [12, \"False\"]\na13 = [13, 7]\na14 = [14, 3]\na15 = [15, [\"HartfordSpringfield\", \"RaleighGreensboro\", \"SanFrancisco\"]]\nantworten = [a1,a2,a3,a4,a5,a6, a7, a8, a9, a10, a11, a12, a13, a14, a15]\nmeine_antworten = pd.DataFrame(antworten, columns = [\"Id\", \"Solution\"])\nmeine_antworten.to_csv(\"meine_loesung_Aufgaben2.csv\", index = False)","59a5b157":"# Aufgabe 10\n---\nJetzt steht es an dir eine Entscheidung zu treffen!\nDu bist Investor einer gro\u00dfen finnischen Investitionsbank und dein Auftrag ist es lukrative M\u00e4rkte f\u00fcr die Kapitalanlagen deiner Abteilung zu suchen.\nDein Chef hat von einem Insider erfahren, dass Avocados bald einen deutlichen Absatzschub haben werden.\n\n- Was empfiehlst du deinem Chef? Soll er investieren oder nicht?\n\n","ab16cdc8":"### Take Notes!\nHier kannst du dier aufschreiben, was dir an den Daten in den ersten beiden Plots auff\u00e4llt:\n* Notiz 1\n* Notiz 2","e6928b45":"# Use Case: Avocadomarkt\n\nEs wird ernst! Dein Chef Ronald Dump bei Subethic Investments hat angerufen.\nEr hat von einem Insider einen Tipp bekommen, dass Millenials auf Avocados abfahren und der Markt bald einen rieigen Spung machen wird.\nDie Weizenbonds aus dem Vorjahr habt Ihr erst vor ein paar Tagen liquidieren k\u00f6nnen und daher liegen aktuell ein paar Millionen bereit f\u00fcr die n\u00e4chste investition.\nJetzt liegt es an dir dem Chef die notwendigen Informationen vorzulegen, damit Ihr richtig investiert.\n\nDu hast dir \u00fcber einen Datenbroker Daten \u00fcber die Verkaufszahlen von Avocados in den USA besorgt und willst diese jetzt analysieren.\n\n### Los gehts!\n![Image of Avocado](https:\/\/media0.giphy.com\/media\/9MJ77c7fIJlc8GC27Q\/source.gif)","7ac9bc5d":"-------------------------------------------\n-------------------------------------------","729203bd":"# Aufgaben 2\n---------------------","da7e138c":"# Aufgabe 5: Daten aufteilen\n\nGut, die Basics hast du durch! \nDir ist aufgefallen, dass Bio Avocados einen ziemlich guten Preis erwirtschaften.\nAu\u00dferdem scheint der Markt f\u00fcr kleine Avocados schneller zu wachsen.\n\nDem solltest du genauer nachgehen.\nUm die Daten von konventionellen- und Bio-Avocados genauer zu betrachten, solltest du die aufteilen.\n\n\n### Verkaufen Art Avocados Verkaufsvolumen steigt relativ schneller? --> Ergebnis 8 (\"Bio\", \"Konventionell\")\n\n### Wie hoch ist der Anteil der verkauften Bio Avocados im Verh\u00e4ltnis zu allen verkauften Avocados? --> Ergebnis 9 (drei Nochkommastellen) ","58cdeda1":"---------------\n---------------","e08a6ce1":"# Aufgabe 0: Daten anschauen\n\nBeim letzten Auftrag hast du bereits gelernt, wie du dir einen \u00dcberblick \u00fcber die Daten verschaffst.\nAls Auffrischung solltest du dir hier kurz Zeit nehmen, dir die Daten nochmal anzuschauen.\nDer Auftrag wird sowieso ein All-Nighter, also nimm dir ruhig Zeit:","746b12b3":"### !!!!!!!!!!!!!!!! Hier sind ein paar Informationen versteckt. Das dient der \u00dcbersichtlichkeit. Schaut sie euch bitte kurz an!!!!!!!!!!!!!!!!!!!!!!!!!!!!","0d8a4010":"# Aufgabe 9\nAls allerletztes willst du noch wissen, in welchen regionen in den letzten Jahren hohe Preise erzielt werden konnten.\n\nDu hast schon lange keinen factorplot mehr gemacht.\nDu denkst das ist hier genau richtig!\n\nBenutze einen factorplot um den AveragePrice nach Region darzustellen. Unterscheide dabei die verschiedenen Jahre.\n\n### In welchen drei Regionen wurden in 2017 die h\u00f6chsten Preise erzielt? --> Ergebnis 15 [\"region 1\", \"region 2\", \"region 3\"]\n\n```\nsns.factorplot(x='',y='',data=data ,hue='', size = 15, join = False)\n```","a147975b":"# Aufgabe 6: Andere Graphen ausprobieren\n\nDeine Intuition war richtig. Der Markt an Bio Avocados ist noch recht klein. SCheint aber zu wachsen.\nDas solltest du dir merken.\n\nDein Chef will aber alle Daten Wissen. Er steht in letzter Zeit auf diese \"Data Driven Decisions\". \u00af\\_(\u30c4)_\/\u00af\n\nSoll er sie kriegen. Um die Daten etwas \u00fcbersichtlicher zu gestalten willst Verkauf und Preis in Balkendiagramen anzeigen. \nDas macht sich sp\u00e4ter auf den Folien gut und macht manche Information noch klarer.\n\nDU denkst dadurch kannst du die Relation zwischen konventionellen Avocados und Bio Avocados besser darstellen.\n\nBenutze ein Barchart um die Mengen an verkauften Avocados pro Jahr und Typ darzustellen.\nDann erstelle einen neuen Barchart und stelle Avocado Typ und den Preis ins Verh\u00e4ltnis. Unterscheide zus\u00e4tzlich nach Jahr.\n\n### In welchem Jahr war der Konsum von Bio-Avocados am h\u00f6chsten? --> Ergebnis 10 (YYYY)\n\n### In welchem Jahr war der reale Preis von Bio-Avocados am geringsten? --> Ergebnis 11 (YYYY)","c0cfc264":"# Aufgabe 2: Zeitverlauf darstellen\n## Am besten mit Seaborn weitermachen\n\nSo, du hast die Daten aufbereitet und bist bereit f\u00fcr die erste Analyse.\nGl\u00fccklicherweise hast du dir hier eine Time Series geangelt. Die 200.000\u20ac waren also nicht umsonst.\nDu f\u00e4ngst mit dem Offensichtlichen an und schaust dir zuerst an, wie der Avocado Preis sich \u00fcber den gesamten Zeitraum verhalten hat.\n\nVersuche die Avocado Daten nach der Zeit zu plotten.\nEinmal den Verlauf der Preise und einmal den Verlauf der Verkaufszahlen.\n\n### In welchem Jahr war der Avocado Preis bisher am h\u00f6chsten?    Trage das Ergebnis als Ergebnis 2 ein (YYYY)\n\n### In welchem Jahr hatte das Verkaufsvolumen (Total Bags) bisher den h\u00f6chsten !Durchschnittswert? --> Ergebnis 3 (YYYY)\n\n","5ab5a480":"# Aufgabe 3: Zeitverlauf konkretisieren\n\nAlles klar, du hast dir jetzt einen besseren \u00dcberblick verschafft.\nAber du wei\u00dft, dass reicht nicht aus um den Chef zu \u00dcberzeugen.\nDir fehlen noch etliche Informationen.\n\nDu hast dir noch gar nciht den Unterschied zwischen konventionellen und Bio-Avocados angeschaut.\nDu glaubst da k\u00f6nnte n\u00e4mlich ein Haken dran sein.\n\nIn deinem Kurs \"Analytics in 42 simple steps\" hast du gelernt, das du Graphen auch noch weiter unterteilen und differenzieren kannst.\nVersuche jetzt mihilfe von \"hue\", \"size\" oder \"style\" den Preisverlauf der unterschiedlichen Arten von Avocados aufzuzeigen.\n\n\n### In welchem Jahr ist der Preis von normalen und Bio-Avocados Zeitweise gleich? --> Jahr als Ergebnis 4 (YYYY)\n\nDann filtere den Datensatz um noch genauer hinschauen zu k\u00f6nnen. (Tipp: Zeitpunkt festlegen mit pd.to_datetime(\"YYYY-MM-DD\") )\n\n### Was ist (aufgerundet auf eine Nachkommsastelle) der niedrigste durchschnittliche Preis den Bio Avocados im Jahr 2017 erreichen? --> Ergebnis 5 (ca. Eine Nachkommastelle)\n\nNotiere deine Beobachtungen!","e9bf86bd":"# Aufgabe 4: Daten unterscheiden und gruppieren\n\nKlasse! Du hast herausgefunden, dass sich die Anbauweise von Avocados definitiv auf den Preis auswirkt.\nDas solltest du im Hinterkopf behalten!\n\nDu hast gesehen, dass die die Anzahl der verkauften Avocados in den einzelnen Gr\u00f6\u00dfen angegeben ist.\nAu\u00dferdem ob ist die Anzahl verkaufter Bags auch nach Gr\u00f6\u00dfe unterschieden.\nDu vermutest dahinter k\u00f6nnte sich etwas verbergen.\nAm besten du schaust mal nach:\n\nPlotte die Anzahl der verkauften S, L und XL Avocados.\nDann mache das Gleiche mit der Anzahl der verkauften S\u00e4cke.\n\nDamit du den \u00dcberblick beh\u00e4ltst kannst du drei enzelne Plots amchen und diese mit \"label = 'x'\" beschriften.\nmit plt.legend() f\u00fcgst du eine Legende hinzu.\n\n### Bewerte folgende Aussage: \"L Avocados werden eindeutig am h\u00e4ufigsten gekauft\" --> \"True\" oder \"False\" als Ergebnis 6\n\n### Bewerte folgende Aussage: \"Die Anzahl verkaufter S-Bags steigt \u00fcber die Zeit\" --> \"True\" oder \"False\" als Ergebnis 7\n","d3d64389":"### Take Notes!\nHier kannst du dier aufschreiben, was dir an den Daten in den ersten beiden Plots auff\u00e4llt:\n* Notiz 1\n* Notiz 2","88594c76":"-----\n-----","5203a457":"# Aufgabe 7\n\nDamit sollte der Chef zufrieden sein. Aber deine Neugier ist noch nicht befriedigt.\nDu bist dir sicher, dass sich noch mehr Muster in den Daten verstecken.\n\nEs w\u00e4re interessant zu sehen, ob sich ein hoher Verkauf von kleinen Avocados negativ auf den Verkauf von gro\u00dfen Avocados auswirkt.\nDen gesamten Datensatz \n\nEin Lineplot tut es da aber nicht...\n\nStelle mit einem Scatterplot das Verh\u00e4ltnis von verkauften kleinen und gro\u00dfen Avocados dar.\nBetrachte nur konventionell angebaute Avocados.\n\n### Gibt du einen eindeutigen Linearen Zusammenhang zwischen dem Verkauf von S und L Avocados ? --> Ergebnis 12 (\"True\" oder \"False\")\n\n","771d3ca3":"--------------------------\n--------------------------","f0bdd0dd":"# Aufgabe 8\nNaja, das war nicht ganz so \u00fcbersichtlich wie du gedacht hast.\nDu schaust dir lieber mal die Daten aus einer Region genauer an.\nVielleicht kannst du dann etwas Interessantes erfahren.\n\nStelle mit einem Scatterplot das Verh\u00e4ltnis von S und L Verk\u00e4ufen in der region Boston dar.\nBetrachte nur konventionell angebaute Avocados.\n\n### Wie viele Outlier kannst du erkennen? --> Ergebnis 13 \n### Wie viele cluster w\u00fcrdest du bilden (Ohne Outlier)? --> Ergebnis 14","324ed573":"-------------\n-------------","f05dbe9b":"-------------------------\n-------------------------","ac60bda1":"# Aufgabe 1:\n\nAls n\u00e4chstes solltest du den Datensatz rein laden und kurz s\u00e4ubern.\nDu weist bereits wie das geht. Beim \u00fcberfliegen des Datensatzes hast du dir gemerkt, dass folgende Sachen noch zu erledigen sind:\n\n* Alle Daten aus den regionen in der statelist l\u00f6schen \n* Alle fehlenden Daten l\u00f6schen\n* Das Datum in ein datetime umwandeln\n* Den RealPrice infaltionsbreinigt anf\u00fcgen\n\nTipp 1: Mit \".isin(list)\" kannst du \u00fcberpr\u00fcfen ob ein Wert in einer Liste ist.\n\nTipp 2: Mit dem \"~\" operator kannst du jeden Wahrheitswert umkehren\n\nstatelist = [\n\"TotalUS\",\n'California',\n'GreatLakes',\n'Midsouth',\n'Northeast',\n'SouthCarolina',\n'SouthCentral',\n'Southeast',\n'Philadelphia',\n'Plains',\n'West']\n\n\n## F\u00fcge die Anzahl der \u00fcbrigen regions als Ergbnis 1 ein.","320f98b7":"### Take Notes!\nHier kannst du dier aufschreiben, was dir an den Daten in den ersten beiden Plots auff\u00e4llt:\n* Notiz 1\n* Notiz 2","de8a61db":"# Plots und Graphen\nWir Menschen sind besonders gut darin Muster zu erkennen. Daher macht es Sinn Daten visuell darzustellen.\nPython bietet uns daf\u00fcr einige gute M\u00f6glichkeiten.\n\nZwei, die in Notebooks besonders gut funktionieren sind matplotlib und seaborn.\n\n## Matplotlib\nMatplotlib ist die am weitesten verbreitete Bibliothek f\u00fcr Graphen in Python. Sie funktioniert einwandfrei mit Pandas.\nMatplotlib ist einfach zu benutzen. F\u00fcr sch\u00f6ne Plots muss man aber ein wenig rumprobieren.\nDas Grundrezept f\u00fcr Graphen mit Matplotlib ist sehr simpel:\n\n```\nimport matplotlib.pyplot as plt\nx = data.X # Values for X-Axis\ny = data.Y # Values for Y-Axis\n\nfig, ax = plt.subplots(figsize=(25, 10)) # Size of Plot\nax.line(x,y) # Make a LinePlot\nax.scatter(x,y) # Make a ScatterPlot\nplt.show() # Show the graph in Notebook\n\n```\nDamit l\u00e4sst sich schon sehr viel anfangen.\nAuf der [Webpage](https:\/\/matplotlib.org\/gallery\/index.html) findet ihr noch viele weitere Beispiele.\n\n### Achtung! Bei gro\u00dfen Datenmengen zeigt Matplotlib automatisch einen Durchschnittswert im Graphen an.\n\n\n## Seaborn\nSeaborn ist eine Library die auf Matplotlib basiert, aber versucht Plots sch\u00f6ner und intuitiver zu machen.\nDie Konzepte sind \u00e4hnlich, die Befehle aber etwas anders:\nGrundrezept:\n\n```\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfig, ax = plt.subplots(figsize=(25, 10)) # Size of Plot\nax = sns.lineplot(x=\"X\", y=\"Y\", data=data) # Makes a LinePlot\nax = sns.scatterplot(x=\"X\", y=\"Y\", data=data) # Makes a Scatterplot\nplt.show()\n```\n\nViele weitere Beispiele findet Ihr auf der [Webseite](https:\/\/seaborn.pydata.org\/examples\/index.html) von Seaborn.\n\nFalls ihr verschiedene Kategorien von Daten in einer Grafik darstellen wollt, lohnt es sich die Keywords \"hue\", \"style\" und \"size\" von Seaborn zu verwenden:\n\n**hue** --> \u00c4ndert die Farbe basierend auf der Kategorie\n**style** --> \u00c4ndert die Markerform\/Linienform basierend auf der Kategorie\n**size** --> \u00c4ndert die Gr\u00f6\u00dfe (bei Scatter) basierend auf der Kategorie\n\nBeispiel:\n```\nax = sns.scatterplot(x=\"X\", y=\"Y\", hue= \"Z\" data=data) # Makes a Scatterplot\n```\n\nIhr seid freigestellt die Library zu verwenden, die euch am besten passt. \nF\u00fcr die weiterf\u00fchrenden Beispiele werde ich vor allem Seaborn verwenden, aufgrund der \u00c4sthetik. \n\n### Achtung! Bei gro\u00dfen Datenmengen zeigt Seaborn automatisch einen Durchschnittswert als Linie und die Streuung als Bereich im Graphen an.","e22c5b9e":"\n----------------------------------------------------------\n----------------------------------------------------------\n"}}