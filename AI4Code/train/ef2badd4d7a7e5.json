{"cell_type":{"b07439a9":"code","eefe5f63":"code","b7cb2008":"code","10642652":"code","454d91d2":"code","bb4760d1":"code","b057f528":"code","9e4ed4db":"code","9d4e2c98":"code","16cfa01c":"code","e55292fb":"code","0592c279":"code","956ddf8e":"code","b7776a94":"code","c8df1f9e":"code","595b0e73":"code","3d259744":"code","8b75cfcd":"code","34776505":"code","7ef7e47d":"code","08f44390":"code","0b9c206e":"code","a92c98ad":"code","1ae1c190":"code","f3d4f6a0":"markdown","847fd870":"markdown","c5644b26":"markdown","ec2ad352":"markdown","d7807f39":"markdown","e8726469":"markdown","cb42a448":"markdown","769c3129":"markdown","e9f1756d":"markdown","078e7c05":"markdown","edc6e745":"markdown","dea386b7":"markdown","e77f1921":"markdown","d0afb65e":"markdown"},"source":{"b07439a9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eefe5f63":"pip install chart_studio","b7cb2008":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\nimport plotly\nimport chart_studio.plotly as py\nimport cufflinks as cf\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.offline as offline\noffline.init_notebook_mode()\nfrom plotly import tools\nimport plotly.tools as tls\n\nimport folium\nfrom folium import plugins\nfrom folium.plugins import HeatMap\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nprint(os.listdir(\"..\/input\"))","10642652":"population_df = pd.read_csv(\"..\/input\/barcelona-data-sets\/population.csv\")\npopulation_df.head()","454d91d2":"population_df.info()\n","bb4760d1":"total_pop = population_df.loc[population_df['Year'] == 2017]['Number'].sum()\nprint(\"Total Population of Barcelona =\",total_pop)","b057f528":"temp_df = population_df.loc[population_df['Year'] == 2017].groupby(['Gender'])['Number'].sum()\n\ntrace = go.Pie(labels = temp_df.index,\n               values = temp_df.values,\n               marker = dict(colors=['#E53916','#2067AD'], line = dict(color='#FFFFFF', width=2.5))\n              )\n\ndata = [trace]\nlayout = go.Layout(title=\"Gender-Wise Distribution for Year-2017\")\nfig = go.Figure(data=data, layout=layout)\n\nplotly.offline.iplot(fig)","9e4ed4db":"male = population_df.loc[population_df['Gender'] == 'Male'].groupby(['Year'])['Number'].sum()\nfemale = population_df.loc[population_df['Gender'] == 'Female'].groupby(['Year'])['Number'].sum()\n\ntrace0 = go.Bar(x = male.index,\n                y= male.values,\n                name = \"Male\",\n                marker = dict(color='rgb(236,154,41)'),\n                opacity = 0.8\n               )\n\ntrace1 = go.Bar(x = female.index,\n                y = female.values,\n                name = \"Female\",\n                marker = dict(color='rgb(168,32,26)'),\n                opacity = 0.8\n               )\n\ndata = [trace0,trace1]\nlayout = go.Layout(barmode = 'group',\n                   xaxis = dict(tickangle=-30),\n                   title=\"Gender-Wise Distribution Across the Years\",\n                      )\nfig = go.Figure(data=data,layout=layout)\n\nplotly.offline.iplot(fig)\n","9d4e2c98":"dist_df = population_df.loc[population_df['Year'] == 2017].groupby(['District.Name'])['Number'].sum()\n\ntrace0 = go.Bar(x = dist_df.index,\n                y = dist_df.values,\n                marker = dict(color=list(dist_df.values),\n                                  colorscale='Reds'),\n                )\n\ndata = [trace0]\nlayout = go.Layout(xaxis = dict(tickangle=-30),\n                   title=\"District-Wise Distribution of population (Year 2017)\",\n                      )\nfig = go.Figure(data=data,layout=layout)\n\nplotly.offline.iplot(fig)","16cfa01c":"immig_df = pd.read_csv(\"..\/input\/barcelona-data-sets\/immigrants_by_nationality.csv\")\nimmig_df","e55292fb":"im_df = immig_df.loc[immig_df['Year'] == 2017].groupby(['Nationality'])['Number'].sum().sort_values(axis=0, ascending=False)[:25]\n\ntrace0 = go.Bar(x = im_df.index,\n                y = im_df.values,\n                marker = dict(color=list(dist_df.values),\n                                  colorscale='Portland'),\n                )\n\ndata = [trace0]\nlayout = go.Layout(xaxis = dict(tickangle=-30),\n                   title=\"Immigration By Nationality (Year 2017)\",\n                      )\nfig = go.Figure(data=data,layout=layout)\n\nplotly.offline.iplot(fig)","0592c279":"transport_df =pd.read_csv(\"..\/input\/barcelona-data-sets\/transports.csv\")\ntransport_df.head()","956ddf8e":"underground = transport_df.loc[transport_df['Transport'] == 'Underground']\nunderground = underground[['Latitude','Longitude','Station']]\n\nbarcelona_coordinates = [41.3851, 2.1734]\n\nmap_undergound = folium.Map(location=barcelona_coordinates, tiles='OpenStreetMap', zoom_start=12)\n\nfor each in underground.iterrows():\n    folium.CircleMarker([each[1]['Latitude'],each[1]['Longitude']],\n                        radius=5,\n                        color='blue',\n                        popup=each[1]['Station'],\n                        fill=True).add_to(map_undergound)\nmap_undergound","b7776a94":"busstop_df =pd.read_csv(\"..\/input\/barcelona-data-sets\/bus_stops.csv\")\nbusstop_df.head()","c8df1f9e":"daybus = busstop_df.loc[busstop_df['Transport'] == 'Day bus stop']\n\nmap_busstop = folium.Map(location=barcelona_coordinates, tiles='OpenStreetMap', zoom_start=12)\n\nfor each in daybus[:100].iterrows():\n    folium.Marker([each[1]['Latitude'],each[1]['Longitude']],\n                  popup=str(each[1]['Bus.Stop']),\n                  icon=folium.Icon(color='blue', icon='stop')).add_to(map_busstop)\n    \nmap_busstop\n","595b0e73":"accidents_df = pd.read_csv(\"..\/input\/barcelona-data-sets\/accidents_2017.csv\")\naccidents_df.head()","3d259744":"accidents_df['killed+injured'] = accidents_df['Mild injuries'] + accidents_df['Serious injuries'] + accidents_df['Victims']\ntemp_df = accidents_df.groupby(['District Name'])['killed+injured'].sum().sort_values(axis=0, ascending=False)\n\ntrace0 = go.Bar(x = temp_df.index,\n                y = temp_df.values,\n                marker = dict(color=list(temp_df.values))\n                )\n\ndata = [trace0]\nlayout = go.Layout(xaxis = dict(tickangle=-30),\n                   title=\"Top Districts Where People Killed and Injured in Accidents\",\n                      )\nfig = go.Figure(data=data,layout=layout)\n\nplotly.offline.iplot(fig)","8b75cfcd":"wkday = accidents_df.groupby(['Weekday']).\\\n        agg({'Mild injuries':'sum', 'Serious injuries':'sum','Victims':'sum'}).reset_index()\nwkday\n\ntrace0 = go.Bar(x = wkday['Weekday'],\n                y= wkday['Mild injuries'],\n                name = \"Mild injuries\",\n                marker = dict(color='rgb(108, 52, 131)')\n               )\n\ntrace1 = go.Bar(x = wkday['Weekday'],\n                y = wkday['Serious injuries'],\n                name = \"Serious injuries\",\n                marker = dict(color='rgb(241, 196, 15)')\n               )\n\ntrace2 = go.Bar(x = wkday['Weekday'],\n                y = wkday['Victims'],\n                name = \"Victims\",\n                marker = dict(color='rgb(211, 84, 0)')\n               )\n\ndata = [trace0,trace1,trace2]\nlayout = go.Layout(barmode = 'group',\n                   xaxis = dict(tickangle=-30),\n                   title=\"Weekday-Wise Accidents in Barcelona\",\n                       \n                      )\nfig = go.Figure(data=data,layout=layout)\n\nplotly.offline.iplot(fig)\n","34776505":"month = accidents_df.groupby(['Month']).\\\n        agg({'Mild injuries':'sum', 'Serious injuries':'sum','Victims':'sum'}).reset_index()\nmonth\n\ntrace0 = go.Bar(x = month['Month'],\n                y= month['Mild injuries'],\n                name = \"Mild injuries\",\n                marker = dict(color='rgb(205, 92, 92)')\n               )\n\ntrace1 = go.Bar(x = month['Month'],\n                y = month['Serious injuries'],\n                name = \"Serious injuries\",\n                marker = dict(color='rgb(75, 0, 130)')\n               )\n\ntrace2 = go.Bar(x = month['Month'],\n                y = month['Victims'],\n                name = \"Victims\",\n                marker = dict(color='rgb(34, 139, 34)')\n               )\n\ndata = [trace0,trace1,trace2]\nlayout = go.Layout(barmode = 'group',\n                   xaxis = dict(tickangle=-30),\n                   title=\"Month-Wise Accidents in Barcelona\")\nfig = go.Figure(data=data,layout=layout)\n\nplotly.offline.iplot(fig)","7ef7e47d":"barcelona_coordinates = [41.406141, 2.168594]\n\nfrom folium.plugins import HeatMap\n\nmap_accidents = folium.Map(location=barcelona_coordinates, tiles='CartoDB Dark_Matter', zoom_start=13)\n\nlat_long_df = accidents_df[['Latitude','Longitude']]\n\nlat_long = [[row['Latitude'],row['Longitude']] for index,row in lat_long_df.iterrows()]\n\n#map_accidents.add_children(plugins.HeatMap(lat_long))\n\nHeatMap(lat_long, min_opacity=0.5, radius=15).add_to(map_accidents)\nmap_accidents","08f44390":"airquality_df = pd.read_csv(\"..\/input\/barcelona-data-sets\/air_quality_Nov2017.csv\")\nairquality_df.dropna(how='any', inplace=True)\nairquality_df.head()","0b9c206e":"df = airquality_df.loc[:,['O3 Value','NO2 Value','PM10 Value']]\nplt.style.use('fivethirtyeight')\ng = sns.pairplot(df)","a92c98ad":"data = [\n    {\n        'x': airquality_df[\"Longitude\"],\n        'y': airquality_df[\"Latitude\"],\n        'text': airquality_df[\"Station\"],\n        'mode': 'markers',\n        'marker': {\n            'color': airquality_df[\"PM10 Value\"],\n            'size': airquality_df[\"PM10 Value\"],\n            'showscale': True,\n            'colorscale':'Viridis'\n        }\n    }\n]\n\nlayout= go.Layout(title= 'Air Quality',\n                  xaxis= dict(title= 'Longitude'),\n                  yaxis=dict(title='Latitude'))\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","1ae1c190":"trace1 = go.Box(y = airquality_df.loc[airquality_df['Air Quality'] == \"Good\"]['PM10 Value'],\n                name = \"Good\",\n                marker = dict(color='#AF4040')\n                )\n\ntrace2 = go.Box(y = airquality_df.loc[airquality_df['Air Quality'] == \"Moderate\"]['PM10 Value'],\n                name = \"Moderate\",\n                marker = dict(color='#4986B6'))\n\ndata = [trace1,trace2]\n\nlayout = go.Layout(xaxis = dict(title='Air Quality'), \n                   yaxis=dict(title='PM10 Values'),\n                   title=\"Air Quality in Barcelona (PM10 Values)\")\n\nfig = go.Figure(data=data, layout=layout)\nplotly.offline.iplot(fig)","f3d4f6a0":"# Heatmap of Accidents' Locations","847fd870":"# Air Quality (Year 2017)\n","c5644b26":"# Transport","ec2ad352":"##   Insights\n* In Barcelona, women outnumber men.\n* Over the five years, there has not been significant change in the population of the city.","d7807f39":"# Loading required libraries and datasets","e8726469":"# Insights\n* 'Eixample' is the most populated district in the city.","cb42a448":"# Barcelona Population\n","769c3129":"# Immigrants by Nationality\n","e9f1756d":"# Bus Stops","078e7c05":"# Underground Metro","edc6e745":"# Which district holds the highest number of population?","dea386b7":"# Insights\n* In 2017, majority of accidents occured in the month of November.\n* * The least number of accidents occured in the month of August","e77f1921":"# Accidents (Year 2017)","d0afb65e":"# Insights\n* In 2017, most of the accidents occured on Friday.\n* The least number of accidents occured on Sunday."}}