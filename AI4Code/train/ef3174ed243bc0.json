{"cell_type":{"f4c9a2c1":"code","15eb2070":"code","b418b1df":"code","22886c8d":"code","84ca1bae":"code","a794eb1e":"code","4e3a1bcd":"code","0d3b2e6d":"code","ac5217a9":"code","6476896f":"code","f14ccb36":"code","8622ac08":"code","b777b134":"code","a2eef3fe":"code","42e90078":"code","e5263e2d":"code","25f4a98a":"code","64d12fc8":"code","98bc3a24":"code","bef52856":"code","bb8bc480":"code","66f60f1d":"code","8125eb41":"code","d4944f18":"code","8334aa85":"code","7e5a189d":"code","efd4d34a":"code","bef00500":"code","b43139c3":"code","f5c883ad":"code","790851a6":"code","785b9a42":"code","3465ac73":"markdown","6a57af5b":"markdown","efbd5797":"markdown","21e03a5e":"markdown","39bb3c0e":"markdown","aeb4984b":"markdown"},"source":{"f4c9a2c1":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matloplib inline\n","15eb2070":"google_data = pd.read_csv ('..\/input\/google-play-store-apps\/googleplaystore.csv')\ngoogle_data.head()","b418b1df":"google_data.shape","22886c8d":"google_data.describe()","84ca1bae":"google_data.boxplot()","a794eb1e":"google_data.hist()","4e3a1bcd":"google_data.info()","0d3b2e6d":"google_data.isnull()","ac5217a9":"#count the nnuumber of missing values in each colmn\ngoogle_data.isnull().sum()","6476896f":"google_data[google_data.Rating > 5]","f14ccb36":"google_data.drop([10472], inplace=True)","8622ac08":"google_data[10470:10475]","b777b134":"google_data.boxplot()","a2eef3fe":"google_data.hist()","42e90078":"threshold = len(google_data)*0.1\nthreshold","e5263e2d":"google_data.dropna(thresh = threshold, axis = 1, inplace = True)","25f4a98a":"print(google_data.isnull().sum())","64d12fc8":"#Define a fuction impute_median\n\ndef impute_median(series):\n    return series.fillna(series.median())","98bc3a24":"google_data.Rating = google_data['Rating'].transform(impute_median)","bef52856":"#count the number of null values in each column\ngoogle_data.isnull().sum()","bb8bc480":"# modes of categorical values\nprint(google_data['Type'].mode())\nprint(google_data['Current Ver'].mode())\nprint(google_data['Android Ver'].mode())","66f60f1d":"# fill the missing categorical values with mode\ngoogle_data['Type'].fillna(str(google_data['Type'].mode().values[0]), inplace = True)\ngoogle_data['Current Ver'].fillna(str(google_data['Current Ver'].mode().values[0]), inplace=True)\ngoogle_data['Android Ver'].fillna(str(google_data['Android Ver'].mode().values[0]), inplace=True)","8125eb41":"# count the number of null values in each column\ngoogle_data.isnull().sum()","d4944f18":"# Let's convert Price, Reviews and Ratings into Numerical Values\ngoogle_data['Price'] = google_data['Price'].apply(lambda x: str(x).replace('$', '') if '$' in str(x) else str(x))\ngoogle_data['Price'] = google_data['Price'].apply(lambda x: float(x))\ngoogle_data['Reviews'] = pd.to_numeric(google_data['Reviews'], errors='coerce')","8334aa85":"google_data['Installs'] = google_data['Installs'].apply(lambda x: str(x).replace('+', '') if '+' in str(x) else str(x))\ngoogle_data['Installs'] = google_data['Installs'].apply(lambda x: str(x).replace(',', '') if ',' in str(x) else str(x))\ngoogle_data['Installs'] = google_data['Installs'].apply(lambda x: float(x))","7e5a189d":"google_data.head(10)","efd4d34a":"google_data.describe()","bef00500":"\ngrp = google_data.groupby('Category')\nx = grp['Rating'].agg(np.mean)\ny = grp['Price'].agg(np.sum)\nz = grp['Reviews'].agg(np.mean)\nprint(x)\nprint(y)\nprint(z)","b43139c3":"plt.figure(figsize=(12,5))\nplt.plot(x, \"ro\", color='g')\nplt.xticks(rotation=90)\nplt.show()","f5c883ad":"plt.figure(figsize=(16,5))\nplt.plot(x,'ro', color='r')\nplt.xticks(rotation=90)\nplt.title('Category wise Rating')\nplt.xlabel('Categories-->')\nplt.ylabel('Rating-->')\nplt.show()","790851a6":"plt.figure(figsize=(16,5))\nplt.plot(y,'r--', color='b')\nplt.xticks(rotation=90)\nplt.title('Category wise Pricing')\nplt.xlabel('Categories-->')\nplt.ylabel('Prices-->')\nplt.show()","785b9a42":"plt.figure(figsize=(16,5))\nplt.plot(z,'bs', color='g')\nplt.xticks(rotation=90)\nplt.title('Category wise Reviews')\nplt.xlabel('Categories-->')\nplt.ylabel('Reviews-->')\nplt.show()","3465ac73":"# Data Cleaning\n\n**Count th number of missing values in the DF**","6a57af5b":"# Check how many ratings are more than 5 outliers","efbd5797":"# Data Visualization","21e03a5e":"# Read Data","39bb3c0e":"# Data Imputati\u0131n and Manipulation\n\n**Fill the null values with a\u011fppropriate values using aggregate functions such as meab, median or mode**","aeb4984b":"# Remove columns that are %90 empty"}}