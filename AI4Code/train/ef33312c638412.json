{"cell_type":{"1a592a6a":"code","5121f4cd":"code","dead4579":"code","c7f56214":"code","52b7c2c5":"code","d71893d7":"code","7f9fb6a5":"code","1cde855a":"code","8a7268c4":"code","77c6174b":"code","a1097448":"code","98554a6d":"code","93f67943":"code","111a9107":"code","2afb8f46":"code","6b020202":"code","a6963cda":"code","d302c0f0":"code","67c6fb73":"code","28c32a3f":"code","00c0577f":"code","3fda8052":"code","02167339":"code","4100725a":"code","e96c299a":"code","2f7a0c86":"code","b1ba3613":"code","6e33c931":"code","5394eccc":"code","e684feb3":"code","479e0792":"markdown","0837bafa":"markdown","82d388cf":"markdown","c40504a2":"markdown","f27736df":"markdown","b798004c":"markdown","d5190292":"markdown","d822384b":"markdown","3d5f89f6":"markdown","a8449801":"markdown","f2ed9643":"markdown"},"source":{"1a592a6a":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm","5121f4cd":"df = pd.read_csv('\/kaggle\/input\/creditcardfraud\/creditcard.csv')\ndf.head()","dead4579":"df.shape","c7f56214":"df.head()","52b7c2c5":"plt.figure(figsize=(20, 20))\nsns.heatmap(df.corr())","d71893d7":"df.describe()","7f9fb6a5":"df.info()","1cde855a":"from collections import Counter","8a7268c4":"Counter(df['Class'])","77c6174b":"from imblearn.under_sampling import RandomUnderSampler","a1097448":"X = df.iloc[:, :-1]\ny = df['Class']","98554a6d":"und = RandomUnderSampler()\nX_und, y_und = und.fit_resample(X, y)","93f67943":"Counter(y_und)","111a9107":"# Lets concat undersampled X and y\ndf_und = pd.concat([X_und, y_und], axis=1)\ndf_und.head()","2afb8f46":"df_und.hist(figsize = (20, 20))\nplt.show()","6b020202":"df_und.isna().sum()","a6963cda":"plt.figure(figsize=(20, 20))\nsns.heatmap(df_und.corr())","d302c0f0":"colss = ['Time', 'V1', 'V2', 'V3', 'V4',  'V5', 'V6', 'V7', 'V8', 'Amount', 'Class']\nsns.pairplot(df_und[colss], height = 2.5)\nplt.show();","67c6fb73":"for i in range(1, 29):\n    st = \"V\"+str(i)\n    sns.histplot(data=df_und, x=st, hue=\"Class\")\n    plt.show()","28c32a3f":"sns.histplot(data=df_und, x=\"Time\", hue=\"Class\")\nplt.show()","00c0577f":"sns.histplot(data=df_und, x=\"Amount\", hue=\"Class\")\nplt.show()","3fda8052":"colss = ['Time', 'V2', 'V3', 'V4', 'V6', 'V7', 'V9', 'V11', 'V18', 'Amount', 'Class']\nsns.pairplot(df_und[colss], height = 2.5)\nplt.show();","02167339":"from sklearn.manifold import TSNE\nfrom sklearn.decomposition import PCA\nfrom umap import UMAP\nimport time\nimport matplotlib.patches as mpatches","4100725a":"df_und.head()","e96c299a":"X_und = df_und.iloc[:, :-1]\ny_und = df_und.iloc[:, -1]","2f7a0c86":"# T-SNE Implementation\nt0 = time.time()\nX_reduced_tsne = TSNE(n_components=2, random_state=42).fit_transform(X_und.values)\nt1 = time.time()\nprint(\"T-SNE took {:.2} s\".format(t1 - t0))\n\n# PCA Implementation\nt0 = time.time()\nX_reduced_pca = PCA(n_components=2, random_state=42).fit_transform(X_und.values)\nt1 = time.time()\nprint(\"PCA took {:.2} s\".format(t1 - t0))\n\n# TruncatedSVD\nt0 = time.time()\nX_reduced_umap = UMAP(n_components=2).fit_transform(X_und.values)\nt1 = time.time()\nprint(\"UMAP took {:.2} s\".format(t1 - t0))","b1ba3613":"f, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(24,6))\n# labels = ['No Fraud', 'Fraud']\nf.suptitle('Clusters using Dimensionality Reduction', fontsize=14)\n\n\nblue_patch = mpatches.Patch(color='#0A0AFF', label='0')\nred_patch = mpatches.Patch(color='#AF0000', label='1')\n\n\n# t-SNE scatter plot\nax1.scatter(X_reduced_tsne[:,0], X_reduced_tsne[:,1], c=(y_und == 0), cmap='coolwarm', label='0', linewidths=2)\nax1.scatter(X_reduced_tsne[:,0], X_reduced_tsne[:,1], c=(y_und == 1), cmap='coolwarm', label='1', linewidths=2)\nax1.set_title('t-SNE', fontsize=14)\n\nax1.grid(True)\n\nax1.legend(handles=[blue_patch, red_patch])\n\n\n# PCA scatter plot\nax2.scatter(X_reduced_pca[:,0], X_reduced_pca[:,1], c=(y_und == 0), cmap='coolwarm', label='0', linewidths=2)\nax2.scatter(X_reduced_pca[:,0], X_reduced_pca[:,1], c=(y_und == 1), cmap='coolwarm', label='1', linewidths=2)\nax2.set_title('PCA', fontsize=14)\nax2.grid(True)\n\nax2.legend(handles=[blue_patch, red_patch])\n\n# TruncatedSVD scatter plot\nax3.scatter(X_reduced_umap[:,0], X_reduced_umap[:,1], c=(y_und == 0), cmap='coolwarm', label='0', linewidths=2)\nax3.scatter(X_reduced_umap[:,0], X_reduced_umap[:,1], c=(y_und == 1), cmap='coolwarm', label='1', linewidths=2)\nax3.set_title('UMAP', fontsize=14)\n\nax3.grid(True)\n\nax3.legend(handles=[blue_patch, red_patch])\n\nplt.show()","6e33c931":"from sklearn.decomposition import KernelPCA\nfrom sklearn.manifold import Isomap\n","5394eccc":"t0 = time.time()\nX_reduced_pca_rbf = KernelPCA(n_components = 2, kernel=\"rbf\").fit_transform(X_und.values)\nt1 = time.time()\nprint(\"RBF took {:.2} s\".format(t1 - t0))\n\nt0 = time.time()\nX_reduced_pca_sigmoid = KernelPCA(n_components = 2, kernel=\"sigmoid\",).fit_transform(X_und.values)\nt1 = time.time()\nprint(\"Sigmoid took {:.2} s\".format(t1 - t0))\n\nt0 = time.time()\nX_reduced_isomap = Isomap(n_components=2).fit_transform(X_und.values)\nt1 = time.time()\nprint(\"Isomap took {:.2} s\".format(t1 - t0))","e684feb3":"fi, (ax4, ax5, ax6) = plt.subplots(1, 3, figsize=(24,6))\nfi.suptitle('Clusters using Dimensionality Reduction', fontsize=14)\n\n\nax4.scatter(X_reduced_pca_rbf[:,0], X_reduced_pca_rbf[:,1], c=(y_und == 0), cmap='coolwarm', label='0', linewidths=2)\nax4.scatter(X_reduced_pca_rbf[:,0], X_reduced_pca_rbf[:,1], c=(y_und == 1), cmap='coolwarm', label='1', linewidths=2)\nax4.set_title('PCA RBF', fontsize=14)\n\nax4.grid(True)\n\nax4.legend(handles=[blue_patch, red_patch])\n\n\nax5.scatter(X_reduced_pca_sigmoid[:,0], X_reduced_pca_sigmoid[:,1], c=(y_und == 0), cmap='coolwarm', label='0', linewidths=2)\nax5.scatter(X_reduced_pca_sigmoid[:,0], X_reduced_pca_sigmoid[:,1], c=(y_und == 1), cmap='coolwarm', label='1', linewidths=2)\nax5.set_title('PCA Sigmoid', fontsize=14)\n\nax5.grid(True)\n\nax5.legend(handles=[blue_patch, red_patch])\n\n# TruncatedSVD scatter plot\nax6.scatter(X_reduced_isomap[:,0], X_reduced_isomap[:,1], c=(y_und == 0), cmap='coolwarm', label='0', linewidths=2)\nax6.scatter(X_reduced_isomap[:,0], X_reduced_isomap[:,1], c=(y_und == 1), cmap='coolwarm', label='1', linewidths=2)\nax6.set_title('Isomap', fontsize=14)\n\nax6.grid(True)\n\nax6.legend(handles=[blue_patch, red_patch])\n\nplt.show()","479e0792":"### Our data is imbalanced","0837bafa":"### We undersampled data and there are equal amounts of Fraud and Non fraud observations","82d388cf":"### There are 492 fraud and 284315 non fraud observations on the dataset.\n### There are few things we could do \n- Oversample\n- Undersample\n- SMOTE","c40504a2":"### If we do not balance our data our accuracy will be high even though we mark all fraud cases as non-fraud. And we don't want that","f27736df":"### Let's Visualize the correlation again with the dataframe which is undersampled","b798004c":"### I will use methods such PCA, t-SNE and UMAP","d5190292":"### The first thing we will try is to undersample the data and we'll use RandomUnderSample for this ","d822384b":"### There are 30 columns in dataset. Class is target column. It can either be 0 (non fraud) or 1 (fraud).","3d5f89f6":"We have 284807 rows and 31 columns in our dataset","a8449801":"## In the next step we will visualize by reducing dimensions","f2ed9643":"### The  interesting thing about this data is that columns from V1 to V28 are standatized and thats the reason why we see interesting patterns in pairplot above"}}