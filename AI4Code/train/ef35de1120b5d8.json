{"cell_type":{"c895a88b":"code","5c333566":"code","9cf4c103":"code","5cb6edbf":"code","295164cb":"code","1a813528":"code","ff63bcbb":"code","9f14f703":"code","aa8c9f35":"code","46fc3596":"code","40086b32":"code","ab03df99":"code","7055e537":"code","3aa06726":"code","3362e93c":"code","cf6364ca":"code","a3c48104":"code","25aa1e10":"code","3e3ef615":"code","f2b227ad":"code","8692d160":"markdown","da6f32aa":"markdown","bae1f902":"markdown","c033f8f5":"markdown","dc362dbf":"markdown"},"source":{"c895a88b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5c333566":"bd=pd.read_csv('\/kaggle\/input\/california-housing-prices\/housing.csv')","9cf4c103":"bd.head()","5cb6edbf":"bd.info()","295164cb":"bd.describe()","1a813528":"import matplotlib.pyplot as plt\n%matplotlib inline\nbd.hist(bins=50,figsize=(20,15)) \nplt.show()","ff63bcbb":"bd.plot(kind=\"scatter\",x=\"longitude\",y=\"latitude\",alpha=0.4,\n             s=bd[\"population\"]\/100,label=\"population\",figsize=(10,7),\n             c=\"median_house_value\",cmap=plt.get_cmap(\"jet\"),colorbar=True, \n            )\nplt.legend()","9f14f703":"corr_matrix=bd.corr()\ncorr_matrix[\"median_house_value\"].sort_values(ascending=False) ","aa8c9f35":"import seaborn as sns\nplt.figure(figsize=(10,8))\nsns.heatmap(bd.corr(), annot=True)","46fc3596":"from pandas.plotting import scatter_matrix\nattributes = [\"median_house_value\",\t\"median_income\",\"total_rooms\",\"housing_median_age\"] \nscatter_matrix(bd[attributes],figsize=(12,8))\n","40086b32":"sns.distplot(bd.median_house_value)","ab03df99":"bd.isnull().sum()","7055e537":"df= bd.fillna(bd.mean())","3aa06726":"## convert ocean_proximity variable  into the number \nfrom sklearn.preprocessing import LabelEncoder\nlabelEncoder = LabelEncoder()\nprint(df[\"ocean_proximity\"].value_counts())\ndf[\"ocean_proximity\"] = labelEncoder.fit_transform(df[\"ocean_proximity\"])\ndf[\"ocean_proximity\"].value_counts()\ndf.describe()","3362e93c":"df1 = df.drop(['median_house_value'], axis=1)\ndf2 = df.median_house_value\n","cf6364ca":"from sklearn.model_selection import train_test_split\ndf1_train, df1_test,df2_train, df2_test = train_test_split(df1,df2, test_size=0.2, random_state=19)    ","a3c48104":"from sklearn import linear_model\nfrom sklearn.metrics import r2_score, mean_squared_error","25aa1e10":"linear_reg = linear_model.LinearRegression()\nlinear_reg.fit(df1_train,df2_train)\nr2_score(linear_reg.predict(df1_train),df2_train)","3e3ef615":"# Final predictions\nkd=linear_reg.predict(df1_test)","f2b227ad":"kd","8692d160":"# Corelation","da6f32aa":"# Data cleaning","bae1f902":"# split the data into train and test","c033f8f5":"# ML model implementation","dc362dbf":"# Explore the data\n"}}