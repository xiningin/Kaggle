{"cell_type":{"0d0d8751":"code","e5ff4bee":"code","f6c98bdd":"code","b286f4ce":"code","08881b90":"code","fa876292":"code","9f89cf2f":"code","76e28936":"code","946fdccb":"code","b7666e50":"code","687d27ed":"code","4016401c":"code","226019cc":"code","9de98688":"code","8c6853aa":"code","71af702e":"code","cd2bac17":"code","c608a0c9":"code","441957b1":"code","23dfcf9d":"code","0f8d800a":"code","c772dd59":"markdown","10999b74":"markdown","976c334c":"markdown","f78bda98":"markdown","9cb8535c":"markdown","75e48caa":"markdown","2f87cd39":"markdown","2d8fa807":"markdown","2d82e3f5":"markdown","5fdbbc8c":"markdown","2fd79d80":"markdown","d3fe880a":"markdown","0636cdca":"markdown","341ce54a":"markdown","af86012f":"markdown","4cf342c6":"markdown","a6166aaf":"markdown"},"source":{"0d0d8751":"!pip install plotly==4.14.3\n","e5ff4bee":"!pip install svglib","f6c98bdd":"#Importing libraries\nimport numpy as np\nimport pandas as pd\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objects as go\nimport plotly.io as pio\nfrom plotly.subplots import make_subplots\npio.templates.default = \"plotly\"\nimport plotly.express as px\nfrom IPython.display import SVG\nimport pydot\ncolors = ['rgba(38, 24, 74, 0.8)', 'rgba(71, 58, 131, 0.8)']\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b286f4ce":"df = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')","08881b90":"df = df.iloc[1:, 1:]\ndf= df.fillna('')","fa876292":"#list of programming languages preferred\ndf['programming_lang'] = df['Q7_Part_1']+'-'+df['Q7_Part_2']+'-'+df['Q7_Part_3']+'-'+df['Q7_Part_4']+'-'+df['Q7_Part_5']+'-'+df['Q7_Part_6']+'-'+df['Q7_Part_7']+'-'+df['Q7_Part_8']+'-'+df['Q7_Part_9']+'-'+df['Q7_Part_10']+'-'+df['Q7_Part_11']+'-'+df['Q7_Part_12']+'-'+df['Q7_OTHER']\ndf['programming_lang']=  df['programming_lang'].map(lambda x: x.split('-'))\nfor x in range(1, len(df['programming_lang'])+1):\n    l= ''\n    for elem in df['programming_lang'][x]:\n        if elem.strip():\n            l+=elem+','\n    df['programming_lang'][x] = l[:-1]  ","9f89cf2f":"#dropping unnecessary columns\ndf.drop(df.columns[6:19],axis=1,inplace=True)\ndf.drop(df.columns[7:51],axis=1,inplace=True)\ndf.drop(df.columns[8:51],axis=1,inplace=True)\ndf.drop(df.columns[15:17],axis=1,inplace=True)\ndf.drop(df.columns[16:137],axis=1,inplace=True)\ndf.drop(df.columns[17:131],axis=1,inplace=True)","76e28936":"#dividing dataset into two age groups: 18-24 and 25+\ndf['Q1'] = df['Q1'].map(lambda x: '18-24' if x in ['18-21','22-24'] else '25+')\n#Categorizing all other degrees other than bachelor's and master's as Others\ndf['Q4'] = df['Q4'].map(lambda x: 'Others' if x not in ['Bachelor\u2019s degree','Master\u2019s degree'] else x)\n#Creating a columns for employement status of each person\ndf['Employed'] = df['Q5'].map(lambda x: 'No' if x == 'Currently not employed' else 'Yes')\n#Renaming value\ndf['Q6'] = df['Q6'].map(lambda x: '0 years' if x in ['I have never written code',''] else x)\n#dividing dataset into two earning groups: <15000 and 15000+\ndf['Q24'] = df['Q24'].map(lambda x: '<15000' if x in ['$0-999', '1,000-1,999','2,000-2,999','3,000-3,999',\n                                                      '4,000-4,999', '5,000-7,499','7,500-9,999','10,000-14,999',''] else '15000+')","946fdccb":"df.head()","b7666e50":"temp = pd.DataFrame(df.Q1.value_counts()*100.00\/df.shape[0])\n\nfig = go.Figure()\n\nfor i in range(len(temp)):\n    fig.add_trace(go.Bar(\n        y=[''],\n        x=[temp.Q1[i]],\n        name= temp.index[i],text= temp.Q1.index[i], textposition='auto',\n        hovertemplate= \"Percentage: %{x}%<extra><\/extra>\",\n        marker=dict(color=colors[i],line=dict(color='rgba(0, 0, 0)', width=2)),\n        orientation='h' ))\n\nfig.update_layout(barmode='stack', title = '<b>AGE DISTRIBUTION OF SAMPLE<\/b>', xaxis = dict(showgrid=False,title = 'Count'))\nfig.show()","687d27ed":"temp = pd.DataFrame(df.Q4.value_counts())\nyes = []\nno=[]\nfor i in range (len(temp)):\n    yes.append(list(df[df.Q4 ==temp.index[i]].Employed.value_counts()*100.00\/df[df.Q4 ==temp.index[i]].shape[0])[0])\n    no.append(list(df[df.Q4 ==temp.index[i]].Employed.value_counts()*100.00\/df[df.Q4 ==temp.index[i]].shape[0])[1])\n    \nfig = go.Figure()\n\nfig.add_trace(go.Bar(\n    y= temp.index.tolist(),\n    x= yes,\n    name= 'Unemployed',text= 'Employed', textposition='auto',\n    hovertemplate= \"Percentage: %{x}%<extra><\/extra>\",\n    marker=dict(color=colors[0],line=dict(color='rgba(0, 0, 0)', width=2)),\n    orientation='h' ))\n\nfig.add_trace(go.Bar(\n    y= temp.index.tolist(),\n    x= no,\n    name= 'Employed',text= 'Unemployed', textposition='auto',\n    hovertemplate= \"Percentage: %{x}%<extra><\/extra>\",\n    marker=dict(color=colors[1],line=dict(color='rgba(0, 0, 0)', width=2)),\n    orientation='h' ))\n\nfig.update_layout(barmode='stack', title = '<b>LEVEL OF FORMAL EDUCATION<\/b>', xaxis = dict(showgrid=False, title = '%'))\nfig.show()","4016401c":"fig = px.treemap(df,\n                 path = [px.Constant('Survey Dataset') , 'Q1' , 'Q5'],\n                 title='<b>CURRENT ROLE<\/b>',\n                 color= df.Q5,\n                 color_discrete_sequence= px.colors.sequential.Purpor,\n                 height=800)\n\nfig.data[0].hovertemplate = '<b>%{label}<\/b><br>%{value}'\nfig.show()","226019cc":"temp1 = pd.DataFrame(df[df.Q5=='DBA\/Database Engineer'].Q1.value_counts())\ntemp2 = pd.DataFrame(df[df.Q5=='DBA\/Database Engineer'].Q2.value_counts())\ntemp3 = pd.DataFrame(df[df.Q5=='DBA\/Database Engineer'].Q4.value_counts())\ntemp4 = pd.DataFrame(df[df.Q5=='DBA\/Database Engineer'].Q24.value_counts())\n\n\nfig = go.Figure()\nfig = make_subplots(rows=2, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}],[{'type':'domain'}, {'type':'domain'}]])\n\nfig.add_trace(go.Pie(labels=temp1.index, \n               values=temp1.Q1, \n               title=\"<b>Age<\/b>\",  \n               hovertemplate= \"%{label}<extra><\/extra>\",\n               textinfo='label+percent',\n               pull = [0.05],\n               marker=dict(colors=px.colors.sequential.Sunset_r,line=dict(color='black',width=1))),1,1)\n\nfig.add_trace(go.Pie(labels=temp2.index, \n               values=temp2.Q2, \n               title=\"<b>Gender<\/b>\",\n               textinfo='label+percent',\n               hovertemplate= \"%{label}<extra><\/extra>\",\n               pull = [0.05],\n               marker=dict(colors=px.colors.sequential.Sunset_r,line=dict(color='black',width=1))),1,2)\n\nfig.add_trace(go.Pie(labels=temp3.index, \n               values=temp3.Q4, \n               title=\"<b>Highest Education<\/b>\",\n               textinfo='label+percent',     \n               hovertemplate= \"%{label}<extra><\/extra>\",\n               pull = [0.05],\n               marker=dict(colors=px.colors.sequential.Sunset_r,line=dict(color='black',width=1))),2,1)\n\nfig.add_trace(go.Pie(labels=temp4.index, \n               values=temp4.Q24, \n               title=\"<b>Yearly Compensation<\/b>\",\n               textinfo='label+percent',\n               hovertemplate= \"%{label}<extra><\/extra>\",\n               pull = [0.05],\n               marker=dict(colors=px.colors.sequential.Sunset_r,line=dict(color='black',width=1))),2,2)\n\n\nfig.update_layout(title_text=\"<b>DB ADMINISTRATOR\/ENGINEERS<\/b>\", height=800)\nfig.show()","9de98688":"temp = df[df.Q5=='DBA\/Database Engineer'].Q3.value_counts()*100.00\/df[df.Q5=='DBA\/Database Engineer'].shape[0]\n\ntrace1 = go.Bar(x = temp.values[::-1],y = temp.index[::-1],\n                marker=dict(color=colors[1],line=dict(color='black', width=1)),\n                orientation ='h',text= temp.values[::-1], textposition='outside',\n                hovertemplate=\"Country = %{y}<br>%{x}%<extra><\/extra>\")\n\nlayout = go.Layout(title_text= '<b>DISTRIBUTION OF DB ADMINISTRATOR\/ENGINEERS BY COUNTRY<\/b>',xaxis = dict(title = '%'), yaxis = dict(title = 'Country'),height=800)\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","8c6853aa":"x_data = [(df[df.Q5=='DBA\/Database Engineer'].Q23_Part_1.value_counts()*100.00\/df[df.Q5=='DBA\/Database Engineer'].shape[0]).tolist()[::-1],\n          (df[df.Q5=='DBA\/Database Engineer'].Q23_Part_2.value_counts()*100.00\/df[df.Q5=='DBA\/Database Engineer'].shape[0]).tolist()[::-1],\n          (df[df.Q5=='DBA\/Database Engineer'].Q23_Part_3.value_counts()*100.00\/df[df.Q5=='DBA\/Database Engineer'].shape[0]).tolist()[::-1],\n          (df[df.Q5=='DBA\/Database Engineer'].Q23_Part_4.value_counts()*100.00\/df[df.Q5=='DBA\/Database Engineer'].shape[0]).tolist()[::-1],\n         (df[df.Q5=='DBA\/Database Engineer'].Q23_Part_5.value_counts()*100.00\/df[df.Q5=='DBA\/Database Engineer'].shape[0]).tolist()[::-1],\n         (df[df.Q5=='DBA\/Database Engineer'].Q23_Part_6.value_counts()*100.00\/df[df.Q5=='DBA\/Database Engineer'].shape[0]).tolist()[::-1]]\n\ny_data = ['Analyze and understand data to<br>influence product or business decisions',\n          'Build and\/or run the data infrastructure that<br>my business uses for storing, analyzing, and<br>operationalizing data',\n          'Build prototypes to explore applying<br>machine learning to new areas',\n          'Build and\/or run a machine learning<br>service that operationally improves my<br>product or workflows',\n          'Experimentation and iteration<br>to improve existing ML models',\n          'Do research that advances the<br>state of the art of machine learning']\n\nfig = go.Figure()\n\nfor i in range(0, len(x_data[0])):\n    for xd, yd in zip(x_data, y_data):\n        fig.add_trace(go.Bar(x=[xd[i]], y=[yd],\n                             orientation='h',\n                             marker=dict(color=colors[i],line=dict(color='white', width=1)),\n                             text= ['Yes' if i==0 else ''], textposition='auto',\n                             hovertemplate=\"%{x}%<extra><\/extra>\"))\n        \nfig.update_layout(\n    barmode='stack',\n    title_text='<b>ROLE OF DB ADMINISTRATOR\/ENGINEERS<\/b>',\n    xaxis=dict(showgrid=False,title='%'),\n    yaxis=dict(showgrid=False, title='Responsibilities'),\n    showlegend=False,\n)\n\nfig.show()","71af702e":"temp1 = pd.DataFrame(df[df.Q5=='DBA\/Database Engineer'].Q15.value_counts()).rename(index={'':'0 years'})\ntemp2 = pd.DataFrame(df[df.Q5=='DBA\/Database Engineer'].Q22.value_counts()).rename(index={'':'None'})\n\nfig = go.Figure()\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\n\nfig.add_trace(go.Pie(labels=temp1.index, \n               values=temp1.Q15, \n               title=\"<b>USING<br>ML METHODS<br>FOR:<\/b>\",  \n               hovertemplate= \"%{label}<extra><\/extra>\",\n               pull = [0.04],\n               marker=dict(line=dict(color='black',width=1))),1,1)\n\nfig.add_trace(go.Pie(labels=temp2.index, \n               values=temp2.Q22, \n               title=\"<b>ML METHODS<br>AT<br>WORKPLACE:<\/b>\",\n               hovertemplate= \"%{label}<extra><\/extra>\",\n               pull = [0.04],\n               marker=dict(line=dict(color='black',width=1))),1,2)\n\nfig.update_traces(hole=0.4,marker= dict(colors=px.colors.sequential.Sunset_r))\nfig.update_layout(title_text=\"<b>DB ADMINISTRATOR\/ENGINEERS USE ML?<\/b>\",showlegend=False)\nfig.show()","cd2bac17":"temp = pd.DataFrame(df[df.Q5=='DBA\/Database Engineer'].Q37_Part_10.value_counts()).rename(index={'':'Others'})\n\ntrace1 = go.Pie(labels= temp.index,\n                             values=temp.Q37_Part_10,\n                             pull=[0.05],\n                             hoverinfo='label+percent')\n\nfig = go.Figure(data=[trace1])\nfig.update_traces(marker=dict(colors=px.colors.sequential.Sunset_r, line=dict(color='black', width=1)))\nfig.update_layout(title_text=\"<b>WHERE DID DB ADMINISTRATOR\/ENGINEERS LEARN DATA SCIENCE?<\/b>\")\nfig.show()","c608a0c9":"temp = df[df.Q5=='DBA\/Database Engineer']['programming_lang'].value_counts().reset_index()[:10].drop(index=5)\n\ntrace1 = go.Bar(x = temp['programming_lang'][::-1],y = temp['index'][::-1], orientation='h',\n                marker=dict(color=colors[1],line=dict(color='black', width=1)),\n               hovertemplate=\"Languages = %{y}<br>Count = %{x}<extra><\/extra>\")\n\nlayout = go.Layout(title_text=\"<b>CHOICE OF PROG. LANGUAGES BY DB ADMINISTRATOR\/ENGINEERS<\/b>\",yaxis = dict(title = 'Languages'), xaxis = dict(title = 'Count'))\nfig = go.Figure(data = [trace1], layout = layout)\nfig.show()","441957b1":"temp = df[(df.Q5=='DBA\/Database Engineer') & (~df.Q6.isin(['0 years']))].reset_index()\nfig = px.treemap(temp,\n                 path = [px.Constant('DB Administrator\/Engineer') , 'Q6' , 'Q8'],\n                 title='<b>RECOMMENDED PROG. LANGUAGE BY YEARS OF CODING EXPERIENCE<\/b>',\n                 color= temp.Q8,\n                 color_discrete_sequence= px.colors.sequential.Sunset_r,\n                 height=800)\n\nfig.data[0].hovertemplate = '<b>%{label}<\/b><br>%{value}'\nfig.show()","23dfcf9d":"dot_graph = pydot.Dot(graph_type='digraph')\n\nroot = pydot.Node('Survey Dataset')\nroot.set_shape('box')\nroot.set_style('filled')\ndot_graph.add_node(root)\n\nagenode = pydot.Node('18-24')\nagenode.set_shape('record')\ndot_graph.add_node(agenode)\nagenode.set_label('<{{18-24|<font color=\"green\">36.2%<\/font>}|{{Student|55.2%}|{Data Scientist|7.6%}|{Software Engineer|7.2%}|...|{DBA\/Engineer|<font color=\"red\">0.19%<\/font>}}}>')\niedge = pydot.Edge(root,agenode)\niedge.set_label('\\t\\t\\t\\tAGE')\ndot_graph.add_edge(iedge)\n\nnew = pydot.Node('DBA\/Engineer')\nnew.set_shape('box')\nnew.set_style('filled')\ndot_graph.add_node(new)\niedge = pydot.Edge(agenode,new)\niedge.set_style('dashed')\ndot_graph.add_edge(iedge)\n\nagenode = pydot.Node('25+')\nagenode.set_shape('record')\ndot_graph.add_node(agenode)\nagenode.set_label('<{{25+|<font color=\"green\">63.7%<\/font>}|{{Data Scientist|16.6%}|{Software Engineer|11.2%}|{Student|9.06%}|...|{DBA\/Engineer|<font color=\"red\">0.86%<\/font>}}}>')\niedge = pydot.Edge(root,agenode)\ndot_graph.add_edge(iedge)\niedge = pydot.Edge(agenode,new)\niedge.set_style('dashed')\ndot_graph.add_edge(iedge)\n\nagenode = pydot.Node('Age')\nagenode.set_shape('record')\ndot_graph.add_node(agenode)\nagenode.set_label('<{{18-24|11.2%}|{25+|88.8%}}>')\niedge = pydot.Edge(new,agenode)\niedge.set_label('Age')\ndot_graph.add_edge(iedge)\n\ngennode = pydot.Node('Gender')\ngennode.set_shape('record')\ndot_graph.add_node(gennode)\ngennode.set_label('<{{Men|82.4%}|{Women|12.8%}|{Non-binary|1.6%}|{Others|3.2%}}>')\niedge = pydot.Edge(new,gennode)\niedge.set_label('Gender')\ndot_graph.add_edge(iedge)\n\nsalnode = pydot.Node('Salary')\nsalnode.set_shape('record')\ndot_graph.add_node(salnode)\nsalnode.set_label('<{{15000|48.8%}|{15000+|51.2%}}>')\niedge = pydot.Edge(new,salnode)\niedge.set_label('Earn\\n(USD)')\ndot_graph.add_edge(iedge)\n\ndegnode = pydot.Node('Education')\ndegnode.set_shape('record')\ndot_graph.add_node(degnode)\ndegnode.set_label(\"<{{Bachelor's degree|32.8%}|{Master's degree|44%}|{Others|23.2%}}>\")\niedge = pydot.Edge(new,degnode)\niedge.set_label('Highest\\ndegree')\ndot_graph.add_edge(iedge)\n\nusenode = pydot.Node('Use')\nusenode.set_shape('record')\ndot_graph.add_node(usenode)\nusenode.set_label(\"<{Python|SQL|Bash|R|Javascript}>\")\niedge = pydot.Edge(new,usenode)\niedge.set_label('Use')\ndot_graph.add_edge(iedge)\n\nrecnode = pydot.Node('Recommend')\nrecnode.set_shape('record')\ndot_graph.add_node(recnode)\nrecnode.set_label(\"<{Python|SQL|C|Javascript|R|Julia|Java}>\")\niedge = pydot.Edge(new,recnode)\niedge.set_label('Recommend\\nlearning')\ndot_graph.add_edge(iedge)\n\ndot_graph.write_svg('age_profession.svg')\nSVG('age_profession.svg')","0f8d800a":"from svglib.svglib import svg2rlg\nfrom reportlab.graphics import renderPM\nimg = svg2rlg('age_profession.svg')\nrenderPM.drawToFile(img, \"file.png\", fmt=\"PNG\")","c772dd59":"---\n<div class=\"alert alert-block alert-danger\">\n\ud83e\udd14 Does that mean DB administration\/engineering is not needed in industries?<\/div>\n<div class=\"alert alert-block alert-success\">\n<b>NO.<\/b> Infact, most companies use large systems or databases to store their useful information and where databases exist, there is a need for a database administrator to build, maintain, and improve these systems and ensure that the information stays secure, organized, and accessible.\nThe need for DB administrators will exist till the companies continue to use databases for storing their information.\n<\/div>","10999b74":"---\n\ud83d\udfe5 Chances of employement increases for people with Master's degree.","976c334c":"---\n\ud83e\udd14 What combination of programming languages do DBA\/Es use on a regular basis?\n\n\ud83d\udfe5 Python and SQL the most popular choice of programming languages.<br>\n\ud83d\udfe5 Bash and R are also used by DBA\/Es. ","f78bda98":"---\n<a id=\"ref1\"><\/a>\ud83c\udf1f Here's what I saw:\n\n---","9cb8535c":"\n# 2020 Kaggle Machine Learning & Data Science Survey\n\nThe survey was live for 3.5 weeks in October'20 with 20,036 responses!\n<br>\nHere's a quick look at the data I have used from the survey:","75e48caa":"---\n\ud83e\udd14 How to learn **Data Science** like a DBA\/E?\n\n\ud83d\udfe5 Only 13.6% learnt data science for DB administation during their formal education.<br>\n\ud83d\udfe5 Most DBA\/E learnt data science from **e-learning platforms** like Coursera, edX, Kaggle Learn Courses, DataCamp, Fast.ai, Udacity, Udemy, LinkedIn Learning or from cloud-certification programs (direct from AWS, Azure, GCP, or similar).\n\n<div class=\"alert alert-block alert-success\">\n\ud83d\udca1 Once you know e-learning platforms are preferred by DBA\/Es, you should explore them yourself as each of them have good amount of resource and it's actually up for you to decide which one to follow based on your learning style, abilities, etc.<\/div>","2f87cd39":"---\n\ud83d\udfe5 Most 25+s are Data scientists and 18-24s are students.\n\n\ud83d\udfe5 **DB Administrator\/Engineer** is the least populor job role among both age groups.","2d8fa807":"# WHY YOU SHOULD CONSIDER BEING A DB ADMINISTRATOR\/ENGINEER?\n\n\n","2d82e3f5":"---\n\ud83d\udfe5 Most DBA\/Es **do not** use ML methods.<br>\n\ud83d\udfe5 Most DBA\/Es **do not** use ML methods at workplace either.","5fdbbc8c":"---\n\ud83d\udfe5 India has the highest number of DBA\/Es.\n<div class=\"alert alert-block alert-success\">\n\ud83d\udca1 Developing countries like India, Brazil, Indonesia, China,etc where industries are still transitioning and adopting cutting-edge technologies, the career prospect of DBA\/E looks promising.<\/div>","2fd79d80":"---\n\ud83d\udfe5 Python is the most recommended language by DBA\/Es.<br>\n\ud83d\udfe5 Highly experienced DBA\/Es recommend learning Python,SQL, C and javascript as well.\n\n<div class=\"alert alert-block alert-success\">\n\ud83d\udca1 People with less than 5 years of experience are new to the industry and probably learning and working on the newest technologies. It seems that they recommend learning <b>R<\/b>, which makes sense because R has been gaining in popularity just over past few years. (<a href=\"https:\/\/www.techrepublic.com\/article\/r-programming-language-continues-to-grow-in-popularity\/#:~:text=Must%2Dread%20developer%20content&text=A%20free%20and%20open%20source,8th%20place%20in%20August%202020\"> Source <\/a>) <\/div>","d3fe880a":"<div class=\"alert alert-block alert-warning\">\n\ud83e\udd14: Question<br>\n\ud83d\udfe5: Deduction from the visualization<br>\n\ud83d\udca1 : Personal thoughts\/analysis from the visualisation<br>\n\ud83c\udf1f : <a href=\"#ref1\">Bonus conclusion chart of the data<\/a><\/div>\n\n\n***FOR BETTER READING EXPERIENCE, HOVER OVER THE GRAPH AND READ THE LABELS.***","0636cdca":"<div class=\"alert alert-block alert-info\">\n    <b>REFERENCES:<\/b><br>\n1. https:\/\/plotly.com\/python\/<br>\n2. https:\/\/www.kaggle.com\/kmader\/flowcharts-pydot<\/div>","341ce54a":"<h1><span style =\"background:yellow\">EDA<\/span><\/h1>","af86012f":"---\n\ud83d\udfe5 What is it that DBA\/Es actually do?\n* 40% said that they build and\/or run the data infrastructure that business uses for storing, analyzing, and operationalizing data.\n* It also seems that the role doesn't require ML at all. (I will explore that after this)\n\n<div class=\"alert alert-block alert-success\">\n\ud83d\udca1 If you are someone who just started out in data science and find yourself learning towards programming, development,scripting more than machine learning, then becoming DBA\/E is a good option.<\/div>","4cf342c6":"\ud83d\udfe5 The majority(63.7%) of surveyed people are over 25 years of age.","a6166aaf":"\ud83d\udfe5 Here's what DBA\/Es are based on:\n<br>**Age** : 88.8% are 25+\n<br>**Gender** : 82.4% are Men\n<br>**Highest Education** : 44% have a Master's degree\n<br>**Yearly Compensation** : 51.2% earn more than 15,000 USD\n\n<div class=\"alert alert-block alert-success\">\n\ud83d\udca1 It seems that majority of DBA\/Es earn good money.<br>\n\ud83d\udca1 For India, <b>11Lakhs<\/b> (=15000USD) per annum is more than just a decent salary!<\/div>"}}