{"cell_type":{"e7b98daf":"code","5d8bcf8f":"code","175ee491":"code","befc206b":"code","bd8a89de":"code","f20fb13f":"code","c0fd2b5f":"code","1556caa6":"code","184d086f":"code","a22e8be3":"code","77aaf09d":"code","159824f9":"code","a4697cf5":"code","99f5095d":"markdown","e34f162f":"markdown","acdd08a9":"markdown","26658612":"markdown","654ec0ec":"markdown","9c79b8d1":"markdown","1c54e23d":"markdown","58722d3f":"markdown","e71004cb":"markdown","0d17939f":"markdown"},"source":{"e7b98daf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport math\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5d8bcf8f":"df_death = pd.read_csv('\/kaggle\/input\/coronavirus-dataset-update-0206\/time_series_2019-ncov-Deaths.csv')\ndf_confirmed = pd.read_csv('\/kaggle\/input\/coronavirus-dataset-update-0206\/time_series_2019-ncov-Confirmed.csv')","175ee491":"df_death_modf = df_death\ndf_death_modf['log_of_sum'] = df_death['2\/14\/20 11:23'].apply(lambda x: math.log2(x+1))\ndf_death_modf = df_death_modf.sort_values(by = 'log_of_sum', ascending = False)\ndf_death_modf = df_death_modf[df_death['2\/14\/20 11:23']!=0]\ndf_death_modf.head()","befc206b":"fig, ax = plt.subplots(1,1,figsize = (6,15))\nfig = sns.barplot(y = 'Province\/State', x = '2\/14\/20 11:23', orient = 'h',data = df_death_modf)\nplt.xlabel('Total_of_Death_Unitl_02_14_20', fontsize = 15)\nplt.ylabel('Province in China', fontsize = 15)\nplt.title('Totoal Death vs Province in China', fontsize = 20)\nplt.xticks(rotation = 0)\n","bd8a89de":"fig, ax = plt.subplots(1,1,figsize = (6,15))\nfig = sns.barplot(y = 'Province\/State', x = 'log_of_sum', orient = 'h',data = df_death_modf)\nplt.xlabel('Total_of_Death_Unitl_02_14_20', fontsize = 15)\nplt.ylabel('Province in China', fontsize = 15)\nplt.title('Totoal Death vs Province in China', fontsize = 20)\nplt.xticks(rotation = 0)","f20fb13f":"fig = px.scatter_geo(data_frame= df_death_modf, lat = 'Lat', lon = 'Long',size = 'log_of_sum' ,scope= 'asia')\nfig.update_layout(title_text = 'Death Distribution Across the World Casused By Novle Corona Virus')\nfig.show()","c0fd2b5f":"df_death_modf_plot = df_death_modf[df_death['2\/14\/20 11:23']!=0].drop(['Country\/Region','Lat','Long','log_of_sum'], axis = 1)\ndf_death_modf_plot.fillna(value = 0, inplace = True)\nindex = df_death_modf_plot[df_death_modf_plot['Province\/State'] == 'Hubei'].T.index[1:]\ndf_death_hubei = df_death_modf_plot[df_death_modf_plot['Province\/State'] == 'Hubei'].T[1:]\n\nsns.set()\nfig, ax = plt.subplots(1,1, figsize = (15,4))\nax = sns.scatterplot(x = index ,y = df_death_hubei[12])\nplt.title('Hubei_Death_total_Unitl_Feb_14th', fontsize = 20)\nplt.ylabel('Death_total', fontsize = 15)\nplt.xlabel('Date', fontsize = 15)\nplt.xticks(rotation = 90)\nplt.show()","1556caa6":"df_henan_death = df_death_modf.iloc[1,4:-1]\ndf_helongjiang = df_death_modf.iloc[2,4:-1]\n\nsns.set()\nfig, ax = plt.subplots(1,1, figsize = (15,4))\nax = sns.scatterplot(x = df_henan_death.index ,y = df_henan_death)\nplt.title('Henan_Death_total_Unitl_Feb_14th', fontsize = 20)\nplt.ylabel('Death_total', fontsize = 15)\nplt.xlabel('Date', fontsize = 15)\nplt.xticks(rotation = 90)\nplt.show()","184d086f":"total_death_rate = sum(df_death['2\/14\/20 11:23'])\/sum(df_confirmed['2\/14\/2020 11:23'])\ntotal_death_rate","a22e8be3":"df_death_rate = df_death['2\/14\/20 11:23']\/df_confirmed['2\/14\/2020 11:23']\ndf_death_rate =pd.concat([df_death['Province\/State'],df_death_rate], axis = 1)\ndf_death_rate.rename(columns={0: \"death_rate\"}, inplace = True)\ndf_death_rate_modf = df_death_rate[df_death_rate['death_rate'] != 0]\ndf_death_rate_modf =df_death_rate_modf.dropna()\ndf_death_rate_modf.sort_values(by = 'death_rate',ascending = False, inplace = True)\n\nfig, ax = plt.subplots(1,1,figsize = (6,15))\nfig = sns.barplot(y = 'Province\/State', x = 'death_rate', orient = 'h',data = df_death_rate_modf)\nplt.xlabel('Death_Rate_Unitl_02_14_20', fontsize = 15)\nplt.ylabel('Province in China', fontsize = 15)\nplt.title('Death_Rate vs Province in China', fontsize = 20)\nplt.xticks(rotation = 0)\n","77aaf09d":"df_HN = pd.read_csv('\/kaggle\/input\/coronavirus-dataset-update-0206\/Pandemic (H1N1) 200905-200907.csv', encoding='latin')\ndf_HN['death_rate'] = df_HN['Deaths']\/df_HN['Cases']\ndf_HN.sort_values(by = 'death_rate', ascending = False)\ndf_HN_trunc = df_HN.sort_values(by = 'Deaths', ascending = False)\ndf_HN_trunc = df_HN_trunc.drop_duplicates(subset = 'Country').head(18).sort_values(by = 'death_rate', ascending = False)","159824f9":"\n\ndf_HN_total = df_HN[df_HN['Country'] == 'Grand Total'].sort_values(by = 'Update Time')\n\nfig, ax = plt.subplots(1,1,figsize = (6,15))\nfig = sns.barplot(y = 'Update Time', x = 'death_rate', orient = 'h',data = df_HN_total)\nplt.xlabel('Death_Rate', fontsize = 15)\nplt.ylabel('Date', fontsize = 15)\nplt.title('Global Death Rate of H1N1 Virus with Time', fontsize = 20)\nplt.xticks(rotation = 0)","a4697cf5":"\n\nfig, ax = plt.subplots(1,1,figsize = (6,15))\nfig = sns.barplot(y = 'Country', x = 'death_rate', orient = 'h',data = df_HN_trunc)\nplt.xlabel('Death_Rate', fontsize = 15)\nplt.ylabel('Country', fontsize = 15)\nplt.title('Death_Rate of H1N1 Virus', fontsize = 20)\nplt.xticks(rotation = 0)","99f5095d":"1. To extract the data of confirmed and death caused by corona virus: To note, the confirmed and death numbers are cumsum with timeseries","e34f162f":"3. The barplot shows the death numbers across all the provinces and areas without doing the logging: Hubei, the epicenter of the virus infection dorminates the plot","acdd08a9":"8. The death rate across all the areas in China: it shows most provinces show the death rate around 1-3%. Hubei which has the largest death toll has the death rate of 2.5%.","26658612":"7. Similar trend is observed for Henan province which has the second largest death tolls. But the death toll is much smaller.","654ec0ec":"2. Due to the drastic num difference among provinces and areas, logging of the death number was applied for better observation in the following barplot. To note, since there are some provinces and areas that no death was observed, the number was added 1 before the logging. Also for these areas that no death was observed, these rows are filtered.","9c79b8d1":"9. H1N1 Death toll:","1c54e23d":"5. The geometric distribution of death numbers across the Aisa: the size of the circle indicates the greatness of death numbers. It shows that except Heilongjiang which is further north of China, the rest follows the pattern that with the euclidean distance increasing from Hubei, the epicenter, the death numbers gradually drop down. To note, until Feb 14th, the last day of this dataset, death was reported in Japan and Philippines.","58722d3f":"4. In order to clearly show the death numbers from other areas, the barplot of logging of the numbers are plotted. It shows Heilongjiang, Henan, Anhui have death numbers next to Hubei. To note, most of these provinces are neiboring Hubei, indicating the geometric spreading of the infection.","e71004cb":"Conclusion: The corona virus infection largely follow the geometric pattern. The further away from Hubei, the epicenter, the less serious. But there is exception probably due to the super infectors travelling through airplanes or fast trains. The death toll is around ~2% varying with different areas, probably due to different medical resources and infected populations. While the global H1N1 death toll is  0.4-0.8% which is significantly lower than that of novel corona virus.\n\nUnitl now there is still no cure for corona virus. But it seems it's not as serious as SARS which erupted in 2008.","0d17939f":"6. The death number evolution in Hubei with time going on: it shows the death number increase started to facilate since Feb 1st and reached the peak at the Feb 14. The number after this date is not avaliable. Based on the trend, it possibly would increase further."}}