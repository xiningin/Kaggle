{"cell_type":{"2f8fb3fc":"code","602916b1":"code","af81b8a1":"code","968e5f1f":"code","6466240c":"code","c835ad23":"code","6db71bbc":"code","16e20a8e":"code","a54d5be6":"code","3f4e2930":"code","02eb08aa":"code","8e6ed404":"code","84665e11":"code","3b5b99a3":"code","9d0d35a9":"code","3ffcdc78":"code","aa289b5b":"markdown","0b571def":"markdown","370d2817":"markdown","b1cfe1b5":"markdown","94effb8f":"markdown"},"source":{"2f8fb3fc":"#import library\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression, RidgeCV, LassoCV\nfrom sklearn.model_selection import train_test_split","602916b1":"df = pd.read_csv('..\/input\/spotify-artist-track-data\/spotify_data.csv')","af81b8a1":"df.shape","968e5f1f":"df.head()","6466240c":"#indexing track id\ndf = df.set_index('track_id')\ndf.head()","c835ad23":"df.describe()","6db71bbc":"df.info()","16e20a8e":"#handling categorical data\ndf = pd.get_dummies(df, drop_first = True)\ndf.head()","a54d5be6":"#split data\nX = df.drop('popularity', axis = 1)\ny = df['popularity']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","3f4e2930":"#Linear Regression\nlr = LinearRegression()\n%time lr.fit(X_train, y_train)\nlr.score(X_test, y_test)","02eb08aa":"#Ridge Regression\nridge = RidgeCV()\n%time ridge.fit(X_train, y_train)\nridge.score(X_test, y_test)","8e6ed404":"#Lasso Regression \nlasso = LassoCV()\n%time lasso.fit(X_train, y_train)\nlasso.score(X_test, y_test)","84665e11":"#compare MLA\nMLA = [\"Linear Regression\", \"Ridge Regression\", \"Lasso Regression\"]\nclfs = [LinearRegression(), RidgeCV(), LassoCV()]\nresult = []\n\nfor clff in clfs:\n    clff.fit(X_train, y_train)\n    acc = clff.score(X_test, y_test)\n    result.append(acc)\n    \nresult_df = pd.DataFrame(result, index = MLA)\nresult_df.columns = [\"Accuracy\"]\nresult_df.sort_values(by = \"Accuracy\", ascending = False)","3b5b99a3":"#distribution\nplt.figure(figsize = (10,6))\nsns.distplot(df['popularity'])\nplt.title(\"Distribution of Popularity\")\nplt.show()","9d0d35a9":"#defining feature\ncoef = pd.Series(ridge.coef_, index = X.columns)\n\nimp_coef = pd.concat([coef.sort_values().head(10),\n                     coef.sort_values().tail(10)])","3ffcdc78":"#visualize feature\nplt.figure(figsize = (10,6))\nimp_coef.plot(kind = 'barh')\nplt.title(\"Feature Importance\")\nplt.xlabel('Score')\nplt.ylabel('Features')\nplt.show()","aa289b5b":"### Ridge Regression is the best score result","0b571def":"# Spotify Popularity Track Prediction","370d2817":"## Regression Model","b1cfe1b5":"## Data Extraction","94effb8f":"## Check Feature Importance"}}