{"cell_type":{"41bec0d7":"code","f01cb3db":"code","b099d789":"markdown","cf508b42":"markdown"},"source":{"41bec0d7":"import pandas as pd\nimport plotly.express as px\n\ndf = px.data.gapminder().query(\"continent=='Americas'\")\ndf","f01cb3db":"from plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\nfig = make_subplots(rows=3, cols=1)\n\nfig.append_trace(go.Scatter(\n    x=df.query(\"country == 'Canada'\")['year'],\n    y=df.query(\"country == 'Canada'\")['lifeExp'],\n    name = 'Canada',\n    legendgroup = '1'\n), row=1, col=1)\nfig.append_trace(go.Scatter(\n    x=df.query(\"country == 'United States'\")['year'],\n    y=df.query(\"country == 'United States'\")['lifeExp'],\n    name = 'United States',\n    legendgroup = '1'\n), row=1, col=1)\n\nfig.append_trace(go.Scatter(\n    x=df.query(\"country == 'Mexico'\")['year'],\n    y=df.query(\"country == 'Mexico'\")['lifeExp'],\n    name = 'Mexico',\n    legendgroup = '2'\n), row=2, col=1)\nfig.append_trace(go.Scatter(\n    x=df.query(\"country == 'Colombia'\")['year'],\n    y=df.query(\"country == 'Colombia'\")['lifeExp'],\n    name = 'Colombia',\n    legendgroup = '2'\n), row=2, col=1)\nfig.append_trace(go.Scatter(\n    x=df.query(\"country == 'Brazil'\")['year'],\n    y=df.query(\"country == 'Brazil'\")['lifeExp'],\n    name = 'Brazil',\n    legendgroup = '2'\n), row=2, col=1)\n\nfig.append_trace(go.Scatter(\n    x=df.query(\"country == 'Argentina'\")['year'],\n    y=df.query(\"country == 'Argentina'\")['lifeExp'],\n    name = 'Argentina',\n    legendgroup = '3'\n), row=3, col=1)\nfig.append_trace(go.Scatter(\n    x=df.query(\"country == 'Chile'\")['year'],\n    y=df.query(\"country == 'Chile'\")['lifeExp'],\n    name = 'Chile',\n    legendgroup = '3'\n), row=3, col=1)\n\nfig.update_layout(\n    height=800, \n    width=800, \n    title_text=\"Life Expectancy in the Americas\", \n    xaxis3_title = 'Year',\n    yaxis1_title = 'Age',\n    yaxis2_title = 'Age',\n    yaxis3_title = 'Age',\n    legend_tracegroupgap = 180,\n    yaxis1_range=[50, 90],\n    yaxis2_range=[50, 90],\n    yaxis3_range=[50, 90]\n)\nfig.show()","b099d789":"If you liked my work, **please remember to upvote the notebook** so others can see!\n\nIf you have questions, feel free to comment down below or [message me on LinkedIn](https:\/\/www.linkedin.com\/in\/jaydeep-mistry\/).","cf508b42":"# How to make individual legends in subplots!\n\n### #Plotly #Python #subplots #legends #gapminder\n\n**Problem**: I wanted to visualize subplots with their own legends but I was not able to do so natively in Plotly.\n\n**Solution**: I found that Plotly's subplot functionality has two parameters that I could use to fake having an individual legend per subplot.\n\nIn this example I used their own subset of country level life expectancy dataset via gapminder to show how data in multiple subplots could have their own legend. I used the field `legendgroup` to group each subplot's traces into one bunch. Then I used `legend_tracegroupgap` to space apart the legend groups just enough so that it looks like the legends are natively drawn for each subplot. Please note that this method will only work in a set of subplots that are aligned in one column and multiple rows."}}