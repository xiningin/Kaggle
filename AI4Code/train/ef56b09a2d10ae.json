{"cell_type":{"67c93fe5":"code","94ab0e5f":"code","4cc7669f":"code","cb61b240":"code","9082065d":"code","8fc365a8":"code","6542baec":"code","1202b034":"code","f5aa5eb0":"code","22a13cb3":"code","17d41466":"code","d7684a29":"code","1e910ca8":"code","f5cd059c":"code","35ce77ad":"code","9ea96343":"code","184a9640":"code","ded5687b":"code","330004f0":"code","713bb4ff":"code","d578f0bd":"code","297c5de2":"code","d6eb42d5":"code","ee2e921b":"code","b77626d0":"code","a31bca27":"code","42dc55eb":"code","1169958a":"code","637d19ba":"code","5a8ad198":"markdown","48725dcc":"markdown","0d6e94a1":"markdown","84d49660":"markdown","907ac078":"markdown","91b8dbff":"markdown","9efe3aec":"markdown","c02f0a15":"markdown","38ef26f4":"markdown"},"source":{"67c93fe5":"# SEE WHAT'S UNDER THE HOOD HERE\n!cat \/etc\/os-release","94ab0e5f":"# WHERE ARE WE RIGHT NOW?\n!ls -l .","4cc7669f":"# BUT, WHERE, REALLY, ARE WE RIGHT NOW? (p.s. IT LOOKS LIKE WE'RE INSIDE \/kaggle\/working FOLDER, INSIDE AN ISOLATE DOCKER CONTAINER\/IMAGE)\n!echo \"ls -l \/kaggle\"\n!ls -l \/kaggle\n\n!echo \"\\nls -l \/kaggle\/working\"\n!ls -l \/kaggle\/working","cb61b240":"# LOOK AT INPUT FOLDER, WE SHOULD SEE \"firefox-63.0.3\" FOLDER ALREADY THERE\n!ls -l \"..\/input\"","9082065d":"# WE WILL MAKE NEW SUBFOLDER IN WORKING FOLDER (WHICH ISN'T READ-ONLY)\n!mkdir \"..\/working\/firefox\"\n!ls -l \"..\/working\"","8fc365a8":"# COPY OVER FIREFOX FOLDER INTO NEW SUBFOLDER JUST CREATED\n!cp -a \"..\/input\/firefox-63.0.3\/firefox\/.\" \"..\/working\/firefox\"\n!ls -l \"..\/working\/firefox\"","6542baec":"# ADD READ\/WRITE\/EXECUTE CAPABILITES\n!chmod -R 777 \"..\/working\/firefox\"\n!ls -l \"..\/working\/firefox\"","1202b034":"# INSTALL PYTHON MODULE FOR AUTOMATIC HANDLING OF DOWNLOADING AND INSTALLING THE GeckoDriver WEB DRIVER WE NEED\n!pip install webdriverdownloader","f5aa5eb0":"# INSTALL LATEST VERSION OF THE WEB DRIVER\nfrom webdriverdownloader import GeckoDriverDownloader\ngdd = GeckoDriverDownloader()\ngdd.download_and_install(\"v0.23.0\")","22a13cb3":"# INSTALL SELENIUM MODULE FOR AUTOMATING THINGS\n!pip install selenium","17d41466":"# LAUNCHING FIREFOX, EVEN INVISIBLY, HAS SOME DEPENDENCIES ON SOME SCREEN-BASED LIBARIES\n!apt-get install -y libgtk-3-0 libdbus-glib-1-2 xvfb","d7684a29":"# SETUP A VIRTUAL \"SCREEN\" FOR FIREFOX TO USe\n!export DISPLAY=:99","1e910ca8":"# PYTHON MODULES TO USE\nfrom selenium import webdriver as selenium_webdriver\nfrom selenium.webdriver.firefox.options import Options as selenium_options\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities as selenium_DesiredCapabilities","f5cd059c":"# FIRE UP A HEADLESS BROWSER SESSION WITH A \"SCREEN SIZE\" OF 1920x1080\n\nbrowser_options = selenium_options()\nbrowser_options.add_argument(\"--headless\")\nbrowser_options.add_argument(\"--window-size=1920,1080\")\n\ncapabilities_argument = selenium_DesiredCapabilities().FIREFOX\ncapabilities_argument[\"marionette\"] = True\n\nbrowser = selenium_webdriver.Firefox(\n    options=browser_options,\n    firefox_binary=\"..\/working\/firefox\/firefox\",\n    capabilities=capabilities_argument\n)","35ce77ad":"# SHOW LIST OF RUNNING PROCESSES; SHOULD SEE firefox AND geckodriver\n!ps -A","9ea96343":"# PERFORM A WEB SEARCH (SEE HOW WE CAN EVEN ARBITRARILY CHANGE BROWSER WINDOW SIZE ON-THE-FLY \"MOSTLY\" AS WE PLEASE, IF <= BROWSER_OPTION ABOVE)\nbrowser.set_window_size(1366, 768)\nbrowser.get(\"https:\/\/duckduckgo.com\/\")\nbrowser.find_element_by_id('search_form_input_homepage').send_keys(\"Kaggle Rocks!\")\nbrowser.find_element_by_id(\"search_button_homepage\").click()\nprint(browser.current_url)","184a9640":"# WE CAN EVEN TAKE A \"SCREENSHOT\"!\nbrowser.save_screenshot(\"screenshot.png\")\n\n!ls -l .","ded5687b":"# LET'S LOOK AT IT!\nfrom IPython.display import Image\nImage(\"screenshot.png\", width=800, height=500)","330004f0":"# CLOSE FIREFOX BROWSER\nbrowser.quit()\n\n!ps -A","713bb4ff":"# MORE MODULES TO IMPORT\nimport pandas as pd\nimport seaborn as sns\n\nfrom selenium.webdriver.common.by  import By as selenium_By\nfrom selenium.webdriver.support.ui import Select as selenium_Select\nfrom selenium.webdriver.support.ui import WebDriverWait as selenium_WebDriverWait\nfrom selenium.webdriver.support    import expected_conditions as selenium_ec","d578f0bd":"# FIRE UP A HEADLESS BROWSER SESSION WITH A \"SCREEN SIZE\" OF 1920x1080\n\nbrowser_options = selenium_options()\nbrowser_options.add_argument(\"--headless\")\nbrowser_options.add_argument(\"--window-size=1920,1080\")\n\ncapabilities_argument = selenium_DesiredCapabilities().FIREFOX\ncapabilities_argument[\"marionette\"] = True\n\nbrowser = selenium_webdriver.Firefox(\n    options=browser_options,\n    firefox_binary=\"..\/working\/firefox\/firefox\",\n    capabilities=capabilities_argument\n)","297c5de2":"# NAVIGATE TO NBA.COM TEAM STATS AND TAKE A PICTURE TO \"PROVE\" TO OURSELVES WHERE WE'RE AT\nbrowser.get(\"https:\/\/stats.nba.com\/teams\/traditional\/?sort=W_PCT&dir=-1\")\nprint(browser.current_url)\nbrowser.save_screenshot(\"screenshot.png\")\nImage(\"screenshot.png\", width=800, height=500)","d6eb42d5":"# INSTEAD OF \"Per Game\" TEAM STATS, LET'S LOOK AT \"Per 100 Possessions\"\nsel_obj = selenium_Select(browser.find_element_by_name(\"PerMode\"))\nsel_obj.select_by_visible_text(\"Per 100 Poss\")\n                          \n# WE NEED TO WAIT FOR DYNAMIC CONTENT TO REFRESH; WE WILL GIVE IT UP TO 10 SECONDS\nwait = selenium_WebDriverWait(browser, 10)\nwait.until(selenium_ec.visibility_of_element_located((selenium_By.XPATH, '\/\/div[@class=\"nba-stat-table__overflow\"]')))\n\n# WHILE AT IT, LET'S SORT BY PTS IN DESCENDING ORDER, JUST FOR FUN\nbrowser.find_element_by_xpath('\/\/th[@data-field=\"PTS\"]').click()\n\n# SEE WHERE WE ARE NOW\nbrowser.save_screenshot(\"screenshot.png\")\nImage(\"screenshot.png\", width=800, height=500)","ee2e921b":"# OK, LET'S GRAB THE HTML OF THIS TABLE NOW AND TAKE A PEAK AT FIRST 1500 CHARACTERS TO SEE IF IT SEEMS RIGHT\nhtml = browser.find_element_by_xpath('\/\/div[@class=\"nba-stat-table__overflow\"]').get_attribute(\"outerHTML\")\nhtml[0:1500]","b77626d0":"# LET'S LOAD INTO PANDAS AS SEE WHAT WE REALLY HAVE\ndf = pd.read_html(html)[0]\ndf.head()","a31bca27":"# LET'S DO SOME CLEANUP HERE (WE ONLY CARE ABOUT COLUMNS 2-29)\ndf = df.iloc[:, 1:28]\ndf.head()","42dc55eb":"# DO SOME BASIC STATS\ndf.describe()","1169958a":"# WHAT'S \"MOST IMPORTANT\" IN TERMS OF TEAM OFFENSIVE SCORING PER 100 POSSESSIONS AMONG SOME MAIN STAT CATEGORIES?\n# NOTE: FG% APPEARS MOST IMPORTANT - JUST LIKE \"Basketball on Paper\", BY DEAN OLIVER SUGGESTS!\ntmp = df[[\"PTS\",\"FG%\",\"3P%\",\"FT%\",\"OREB\",\"AST\",\"TOV\"]]\ng = sns.pairplot(tmp, kind=\"reg\")","637d19ba":"# WE CAN CLOSE FIREFOX NOW (REALLY COULD HAVE AFTER WE SNAGGED THE HTML WE NEEDED)\nbrowser.quit()\n\n!ps -A","5a8ad198":"I was curious if I could make web scraping via a headless Firefox browser and selenium work in a Kaggle kernel. While this curiosity led to much frustration and hair tugging, I learned alot and am happy to report it works!","48725dcc":"### Part 3: pull some data from somewhere out there down into a pandas data frame for analysis","0d6e94a1":"### CONCLUSION","84d49660":"1) Manually \"+Add data | Your Datasets | firefox-63.0.3.tar.bz2\"\n\nnote: referencing uploaded binary files as \"datasets\" automatically places them into \"..\/input\" folder\n\n2) Under Settings section, set Internet = \"Internet Conneted\"","907ac078":"### **Part 1: ** installing portable Firefox binary, geckodriver, and selenium library","91b8dbff":"### **Pre-requisite steps:**\n\n1) First, manually download firefox for linux locally somewhere:\n\nhttp:\/\/ftp.mozilla.org\/pub\/firefox\/releases\/63.0.3\/linux-x86_64\/en-US\/firefox-63.0.3.tar.bz2\n\n2) then upload as new private \"dataset\" to kaggle account, making it selectable across kernels\n\n*note: when uploading, make sure to choose \"Keep tabular files in original format\" *","9efe3aec":"## This notebook shows how to use headless Firefox browser + selenium library in Python to scrape data live in real-time from within a Kaggle notebook","c02f0a15":"I hope this helps somebody out there. If not, it wil be a useful reference for myself later!","38ef26f4":"### **Part 2:** automate Firefox"}}