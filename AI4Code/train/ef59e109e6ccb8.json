{"cell_type":{"594033ac":"code","7b64e908":"code","c114aa0b":"code","29f993bd":"code","280ae7cc":"code","8b2edd18":"code","21d5ead3":"code","5f520a4a":"code","4a546d46":"code","9fbeb188":"code","f868b951":"code","56f9bc41":"code","f411f344":"code","e37261c7":"code","09f161ff":"code","53b4651e":"markdown","fd5be817":"markdown","d5387206":"markdown","5d3323fd":"markdown","d08fb48b":"markdown","c494c12d":"markdown","23216510":"markdown","22c3d8fc":"markdown","30da0a14":"markdown"},"source":{"594033ac":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nhaberman = pd.read_csv(\"..\/input\/haberman12\/haberman12.csv\")\nhaberman","7b64e908":"print(haberman.shape)#trying to do from start","c114aa0b":"haberman['status'].value_counts() ","29f993bd":"# first i read the all comment below the assignment\n#replacing the status with yes or no\n#it really takes too much time \n#haberman.status.map(dict(1:yes, 2: no))     \n#haberman['status'] = haberman['status'].map({1:\"yes\", 2:\"no\"})\nhaberman['status'] = haberman['status'].map({1:\"yes\", 2:\"no\"})\nhaberman.head(20)","280ae7cc":"haberman.columns","8b2edd18":"haberman['status'].unique()","21d5ead3":"haberman.info() #checking updated info","5f520a4a":"#univariate analysis\nsns.FacetGrid(haberman, hue=\"status\", size=5) \\\n   .map(sns.distplot, \"age\") \\\n   .add_legend();\nplt.show();","4a546d46":"sns.FacetGrid(haberman, hue = \"status\" , size=5) \\\n    .map(sns.distplot, \"year\") \\\n    .add_legend();\nplt.show();","9fbeb188":"#PDF, CDF, BOXPLOT, VOILIN PLOT\n#PDF\nimport numpy as np\nhaberman_yes = haberman.loc[haberman[\"status\"] == \"yes\"];\nhaberman_no = haberman.loc[haberman[\"status\"] == \"no\"];\n\n\nplt.figure(figsize=(20,5))\nplt.subplot(141)#1=no.of row , 4=no.of columns 1=fig. number\ncounts,bin_edges=np.histogram(haberman_yes[\"age\"],bins=10,density=True)\npdf = counts\/(sum(counts)) #formulae\nprint(pdf);\nprint(bin_edges);\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf);\nplt.plot(bin_edges[1:], cdf)\nplt.ylabel(\"COUNT\")\nplt.xlabel('AGE')\nplt.legend(['PDF-age', 'CDF-age'])\nplt.title('PDF-CDF of AGE Status = YES')\n\nplt.subplot(142)#row 1 fig no 2\ncounts,bin_edges=np.histogram(haberman_yes[\"year\"],bins=10,density=True)\npdf = counts\/(sum(counts)) #formulae\nprint(pdf);\nprint(bin_edges);\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf);\nplt.plot(bin_edges[1:], cdf)\nplt.ylabel(\"COUNT\")\nplt.xlabel('year')\nplt.legend(['PDF-year', 'CDF-year'])\nplt.title('PDF-CDF of year Status = YES')\n\n\nplt.subplot(143)#row 1 fig 3\ncounts,bin_edges=np.histogram(haberman_no[\"age\"],bins=10,density=True)\npdf = counts\/(sum(counts)) #formulae\nprint(pdf);\nprint(bin_edges);\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf);\nplt.plot(bin_edges[1:], cdf)\nplt.ylabel(\"COUNT\")\nplt.xlabel('AGE')\nplt.legend(['PDF-age', 'CDF-age'])\nplt.title('PDF-CDF of AGE Status = NO')\n\n\nplt.subplot(144)#row 1 fig 4\ncounts,bin_edges=np.histogram(haberman_no[\"year\"],bins=10,density=True)\npdf = counts\/(sum(counts)) #formulae\nprint(pdf);\nprint(bin_edges);\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf);\nplt.plot(bin_edges[1:], cdf)\nplt.ylabel(\"COUNT\")\nplt.xlabel('YEAR')\nplt.legend(['PDF-year', 'CDF-year'])\nplt.title('PDF-CDF of YEAR Status = NO')\nplt.show();","f868b951":"plt.figure(figsize=(20,5))\nplt.subplot(131)\nsns.boxplot(x='status', y='nodes', data=haberman)\nplt.title(\"box plot of NODES(y-axis) and STATUS(x-axis)\")\n\nplt.subplot(132)\nsns.boxplot(x='status', y='age', data=haberman)\nplt.title(\"box plot of AGE(y-axis) and STATUS(x-axis)\")\n\nplt.subplot(133)\nsns.boxplot(x='status',y='year',data=haberman)\nplt.title(\"box plot of YEAR(y-axis) and STATUS(x-axis)\")\nplt.show()","56f9bc41":"plt.figure(figsize=(20,5))\nplt.subplot(131)\nsns.violinplot(x='status', y='nodes', data=haberman ,size=8)\nplt.title(\"violinplot of NODES(y-axis) and STATUS(x-axis)\")\n\nplt.subplot(132)\nsns.violinplot(x='status', y='age', data=haberman, size=8)\nplt.title(\"violinplot of AGE(y-axis) and STATUS(x-axis)\")\n\nplt.subplot(133)\nsns.violinplot(x='status',y='year',data=haberman, size=8)\nplt.title(\"violinplot of YEAR(y-axis) and STATUS(x-axis)\")\nplt.show()","f411f344":"#BI-variate analysis\n#scatter plot\nhaberman.plot(kind='scatter', x='age', y='nodes') ;\nplt.show()","e37261c7":"sns.set_style(\"whitegrid\");\nsns.FacetGrid(haberman, hue=\"status\", size=5) \\\n   .map(plt.scatter, \"age\", \"nodes\") \\\n   .add_legend();\nplt.show();","09f161ff":"#pair plot\nplt.close();\nsns.set_style(\"whitegrid\");\nsns.pairplot(haberman, hue=\"status\", size=4);\nplt.show()","53b4651e":"#observation\nage<40 and nodes<30 have higher change to live\nand\nage>40 and node<20 maybe to die","fd5be817":"#obervation\nit is combines the benifits of boxplot and histogram plot","d5387206":"#obervation\non X-axis 40-65 range patients are survived most \nand seems majority of survived patients are higher","5d3323fd":"ALL OBSERVATIONS","d08fb48b":"#obervation\non x axis year having range 60-66 had highest rate","c494c12d":"#Observation\nfrom nodes and status it seems big change of their death\nQ1-25 percentile\nQ2-50 percentile or median\nQ3-75 percentile\nand Q3 + 1.5*IQR maximum\nQ1 - 1.5*IQR minimum","23216510":"1.we are worked on haberman which is very important dataset from kaggle and haberman is unbalanced dataset.\n2.but appropriate dataset \n3.There are 4 columns of haberman dataset which has integer datatype\n4.the class label \"status\" is interger datatype but now labelled as a 1 as \"yes\" & 2 as \"no\" survived and unsurvied\n5.sometimes jupyter notebook not work properly on unbalanced dataset.\n6.from box plot 45% patient are below age of 52.\n7.on X-axis 40-65 range patients are survived most \nand seems majority of survived patients are higher\n8.on x axis year having range 60-66 had highest rate\n9.it is combines the benifits of boxplot and histogram plot\n10.In scatter plot age<40 and nodes<30 have higher change to live\nand\nage>40 and node<20 maybe to die\n11.it simply works on 4 feature not on 6 or n number\n12.not lineraly sepearable\n13.it look like diagnoal matrix\n","22c3d8fc":"obervation\n1.it simply works on 4 feature not on 6 or n number\n2.not lineraly sepearable\n3.it look like diagnoal matrix","30da0a14":"#Observation\n1. There are 4 columns of haberman dataset which has integer datatype\n2. the class label \"status\" is interger datatype but now labelled as a 1 as \"yes\" & 2 as \"no\" survived and unsurvied\n3. sometimes jupyter notebook not work properly on unbalanced dataset "}}