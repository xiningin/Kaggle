{"cell_type":{"046b88cc":"code","4a5a0f84":"code","f74674ce":"code","da35ae7a":"code","ef7d9359":"code","efab80ac":"code","cb962862":"code","f4043c80":"code","e286c21a":"code","e27352e6":"code","33747894":"markdown","2bbd17c4":"markdown","1d347fe1":"markdown"},"source":{"046b88cc":"import numpy as np\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport torch\n\n# We'll be using the vision library since it's an image recognition task\nimport fastai\nfrom fastai.vision.all import *","4a5a0f84":"def tensor_to_labelled_pil_image(tensor: np.ndarray, labels=None) -> list:\n    '''\n    MNIST data set is: first column is the label, the rest of the 784 columns comprises the 28x28 image\n\n    FastAI requires we work with actual an PILImage so this function converts the data\n    from the label and tensor to a dictionary of label-PILImage\n    '''\n    reshaped = tensor.reshape(-1, 28, 28)\n    reshaped = np.stack((reshaped,) *3, axis = 1)\n    image_arr = []\n\n    for idx, current_image in enumerate(reshaped):\n        img = torch.tensor(current_image, dtype=torch.float) \/ 255.\n        img = PILImage(to_image(img))\n        \n        final_data = None\n\n        if (labels is None):\n            final_data = {'x': img, 'y': None}\n        else:\n            final_data = {'x': img, 'y': labels[idx]}\n\n        image_arr.append(final_data)\n\n    return image_arr\n\ndef train_to_pil_images(df: pd.DataFrame) -> list:\n    '''\n    Converts the train dataframe to an array of dicts\n    '''\n    labels = df.iloc[:,0]\n    tensor = df.iloc[:,1:].values\n    return tensor_to_labelled_pil_image(tensor, labels)\n\ndef get_image_from_tensor_csv(path: str) -> L:\n    '''\n    The actual method we'll pass to digit recognizer\n    '''\n    df_train = pd.read_csv(path)\n    all_imgs = train_to_pil_images(df_train)\n    return L(all_imgs)","f74674ce":"# x = ImageBlock\n# y = CategoryBlock\n# since get_image_from_tensor_csv gets us a list of dict, we need to specify a get_x and get_y method\n# to get the expected input and output to DataBlock\nmnist_db = DataBlock(\n    blocks=(ImageBlock(cls=PILImage), CategoryBlock), \n    get_items=get_image_from_tensor_csv, \n    splitter=RandomSplitter(valid_pct=0.2, seed=42),\n    get_y=(lambda item: item['y']),\n    get_x=(lambda item: item['x'])\n)","da35ae7a":"dls = mnist_db.dataloaders('\/kaggle\/input\/digit-recognizer\/train.csv')","ef7d9359":"dls.show_batch()","efab80ac":"learn = cnn_learner(dls, resnet18, metrics=error_rate)\nlearn.fine_tune(10)","cb962862":"df_test = pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')\ntest_set = tensor_to_labelled_pil_image(df_test.values)","f4043c80":"test_set[0]['x']","e286c21a":"learn.predict(test_set[0]['x'])[0]","e27352e6":"#predictions = []\n\n#for idx, item in enumerate(test_set):\n#    result = learn.predict(item['x'])\n#    predictions.append(result[0])","33747894":"It appears to be a '2'. Let's see if our model predicts it correctly","2bbd17c4":"The rest of the code here is just some template to start writing it into CSV","1d347fe1":"Let's take a look at the first item in the array"}}