{"cell_type":{"6f7f8fd9":"code","14f8345a":"code","ed51c561":"code","c035391c":"code","8dd8162c":"code","1d14dd96":"code","dc9b41bd":"code","d784ff97":"code","a921a8bb":"code","ce92404f":"code","dd8923e2":"code","6590bfa3":"markdown","9f4422af":"markdown","e984bf7d":"markdown","20a331cc":"markdown","66acf799":"markdown","12b3df48":"markdown","e8357139":"markdown","a1b80492":"markdown"},"source":{"6f7f8fd9":"gcp_project_id = 'kaggle-playground-170215'\ngcs_path = \"gs:\/\/{}-vcm\/recursion-cellular-image-classification\/RGB224\/\".format(gcp_project_id)\ntrain_filename = \"automl_train.csv\"\ngcp_service_account_json = '\/kaggle\/input\/gcloudserviceaccountkey\/kaggle-playground-170215-4ece6a076f22.json'\ngcp_compute_region = 'us-central1' #for now, AutoML is only available in this region\ntrain_budget = 24\ndataset_name = 'recursion_224px_wo_controls'\nmodel_name = \"{}_{}\".format(dataset_name,train_budget) \n","14f8345a":"#google cloud SDK\n!echo \"deb [signed-by=\/usr\/share\/keyrings\/cloud.google.gpg] https:\/\/packages.cloud.google.com\/apt cloud-sdk main\" | tee -a \/etc\/apt\/sources.list.d\/google-cloud-sdk.list\n!apt-get install apt-transport-https ca-certificates\n!curl https:\/\/packages.cloud.google.com\/apt\/doc\/apt-key.gpg | apt-key --keyring \/usr\/share\/keyrings\/cloud.google.gpg add -\n!apt-get update && apt-get install --yes --allow-unauthenticated google-cloud-sdk\n\n#AutoML package\n!pip install google-cloud-automl\n","ed51c561":"#authenticate the Google Cloud SDK\n!gcloud config set project $gcp_project_id\n!gcloud auth activate-service-account --key-file=$gcp_service_account_json\n\n#uncomment if you don't already have this gcs bucket setup\n#!gsutil mb -p $gcp_project_id -c regional -l $gcp_compute_region gs:\/\/$gcp_project_id-vcm\/\n","c035391c":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport zipfile\nimport os\nfrom google.cloud import automl_v1beta1 as automl\n\n","8dd8162c":"df_train = pd.read_csv('..\/input\/recursion-2019-load-resize-and-save-images\/new_train.csv')\n\nvalidation = ['HEPG2-07','HUVEC-16','RPE-07','U2OS-02']\ntest = ['HEPG2-03','HUVEC-04','RPE-05','U2OS-01']\n\n\ndf_train['split'] = 'TRAIN' \n#put experiments in the lists aboe in Validation and TEST\ndf_train.loc[df_train['experiment'].isin(validation),'split'] = 'VALIDATION' \ndf_train.loc[df_train['experiment'].isin(test),'split'] = 'TEST'\n","1d14dd96":"\n#add gcs path\ndf_train['gcspath'] = gcs_path + 'train\/' + df_train['filename']\n\n#AutoML requires the label to be an int not a float\ndf_train['sirna'] = df_train['sirna'].astype(int)\n\ndf_train[['split','gcspath','sirna']].to_csv(train_filename,index=False,header=False)\n!gsutil cp $train_filename $gcs_path$train_filename #upload csv file to GCS\n","dc9b41bd":"with zipfile.ZipFile('..\/input\/recursion-2019-load-resize-and-save-images\/train.zip', 'r') as zip_ref:\n    zip_ref.extractall('.\/train\/')\n","d784ff97":"!gsutil -q -m cp -r .\/train\/* $gcs_path\/ #upload images to gcs\n!rm -r .\/train\/ #need to do this because otherwise you get a \"too many output files error\"","a921a8bb":"#1. Setup AutoML Data Object\nclient = automl.AutoMlClient.from_service_account_json(gcp_service_account_json)\nproject_location = client.location_path(gcp_project_id, gcp_compute_region)\n\nmy_dataset = {\n    \"display_name\": dataset_name,\n    \"image_classification_dataset_metadata\": {\"classification_type\": \"MULTICLASS\"},\n}\n\n# Create a dataset with the dataset metadata in the region\ndataset = client.create_dataset(project_location, my_dataset)\ndataset_id = (dataset.name.split(\"\/\")[-1])","ce92404f":"#2 Load data into the object\ndataset_full_id = client.dataset_path(\n    gcp_project_id, gcp_compute_region, dataset_id\n)\n\ninput_uris = ('{}{}'.format(gcs_path ,train_filename)).split(\",\")\ninput_config = {\"gcs_source\": {\"input_uris\": input_uris}}\n\nresponse = client.import_data(dataset_full_id, input_config)\n\nprint(\"Processing import...\")\nprint(\"Data imported. {}\".format(response.result()))\n","dd8923e2":"#3. Train the model\nmy_model = {\n    \"display_name\": model_name,\n    \"dataset_id\": dataset_id,\n    \"image_classification_model_metadata\": {\"train_budget\": train_budget}\n    if train_budget\n    else {},\n}\n\nresponse = client.create_model(project_location, my_model)\n\nprint(\"Training operation name: {}\".format(response.operation.name))\nprint(\"Training started...\")","6590bfa3":"# Create the training CSV and upload to Google Cloud Storage (GCS)\nHere are the docs for what your data should look like for AutoML vision","9f4422af":"# Extract images and upload to GCS","e984bf7d":"## Upload training CSV to GCS","20a331cc":"# Kick off an AutoML training job\n\nRequires a three step process:\n1. Setup an AutoML data object\n2. Load data into the object\n3. Train the model\n\nThis is mostly boilerplate copied from:\n[https:\/\/cloud.google.com\/vision\/automl\/docs\/tutorial](http:\/\/https:\/\/cloud.google.com\/vision\/automl\/docs\/tutorial)","66acf799":"# Import libraries\nImporting libraries after all packages have been installed","12b3df48":"# Install Google Cloud SDK and AutoML Package\nFollowed the instructions at [https:\/\/cloud.google.com\/sdk\/install](https:\/\/cloud.google.com\/sdk\/install) with some slight modifications for this environment. Need the Google Cloud SDK to use gsutil, which is the fast way to transfer the training data to Google Cloud Storage (GCS). \n\nAlso need to install the AutoML Python Package. ","e8357139":"## Split data by experiment\nBy default, splitting betweeen train, validation and test is optional for AutoML (by default it splits randomly). But it's important for this use case. ","a1b80492":"# Set Parameters\n\nIn GCP, work is organized into projects.\n\n**gcs_path** is the path that images and the training csv will be uploaded to. AutoML Vision requires the images to be stored in a directory with the root directory being gs:\/\/{project_id}-vcm. \n\n**train_filename** is the name of the csv file that's uploaded to GCS. Doesn't matter what you choose here. \n\n**gcp_service_account_json** is the path to the service account key. Service accounts allow you to authenticate with GCP using a JSON key (rather than typing in a password). I uploaded my service account key as a private dataset. Read more about setting one up at [https:\/\/cloud.google.com\/iam\/docs\/understanding-service-accounts](https:\/\/cloud.google.com\/iam\/docs\/understanding-service-accounts)\n\n**train_budget** is the number of node hours. 1 is min. 24 is maximum. I believe AutoML Vision Classifaction costs $20 per node hour.\n\n**dataset_name** is the name of the dataset that's loaded into AutoML. Doesn't matter what you choose here. \n\n**model_name** is the name of the model in AutoML. Doesn't matter what you choose here. I use the convention of dataset_name *underscore* train_budget\n"}}