{"cell_type":{"dcc80c56":"code","9bfbcdb9":"code","e3c7817b":"code","0072aedb":"code","782ba4ee":"code","bb3cea4f":"code","db737c15":"code","349131ee":"code","c0b711e8":"markdown","41982513":"markdown","188f7b60":"markdown"},"source":{"dcc80c56":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9bfbcdb9":"! conda install -y faiss-gpu cudatoolkit=10.0 -c pytorch","e3c7817b":"!  pip install imgdupes","0072aedb":"! ls -la ..\/input\/","782ba4ee":"! imgdupes --recursive  --faiss-flat \"..\/input\/test_images\" phash 1","bb3cea4f":"import matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nfrom matplotlib import rcParams\n\n%matplotlib inline\n\n# figure size in inches optional\nrcParams['figure.figsize'] = 15 ,15\ndef plotTwo(img_A,img_B):\n    # read images    \n    # display images\n    fig, ax = plt.subplots(1,2)\n    ax[0].imshow(img_A);\n    ax[1].imshow(img_B);","db737c15":"img_A = mpimg.imread('..\/input\/test_images\/01c31b10ab99.png')\nimg_B = mpimg.imread('..\/input\/test_images\/b29bd35acaf6.png')\nplotTwo (img_A,img_B)","349131ee":"img_A = mpimg.imread('..\/input\/test_images\/417d3908ee21.png')\nimg_B = mpimg.imread('..\/input\/test_images\/9d9de8c9afb5.png')\nplotTwo (img_A,img_B)","c0b711e8":"# So you get the idea here. ","41982513":"# Use imgdupes for the detection of duplicates with exact neighbor searching using faiss\n1.  In the training set\n2. In the test set \n3. Between the above sets","188f7b60":"# Let us see if these are really duplicates\n\n..\/input\/test_images\/01c31b10ab99.png\n..\/input\/test_images\/b29bd35acaf6.png\n\n..\/input\/test_images\/13e28ec4534a.png\n..\/input\/test_images\/6543b4168f98.png\n\n..\/input\/test_images\/1466c7e5936e.png\n..\/input\/test_images\/23c5eba92749.png\n\n..\/input\/test_images\/d00312c50737.png\n..\/input\/test_images\/1822b6c60784.png\n\n..\/input\/test_images\/2fb539602f57.png\n..\/input\/test_images\/80aa9b30d2f9.png\n\n..\/input\/test_images\/417d3908ee21.png\n..\/input\/test_images\/9d9de8c9afb5.png\n\n..\/input\/test_images\/4247b91698fc.png\n..\/input\/test_images\/a2319c2af727.png\n\n..\/input\/test_images\/aa381cb2abd2.png\n..\/input\/test_images\/9bd683e16325.png"}}