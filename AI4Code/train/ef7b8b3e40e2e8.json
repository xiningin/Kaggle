{"cell_type":{"86094d89":"code","8dab1c28":"code","e2a5be0a":"code","a85e6474":"code","f83b0a3e":"code","9219e345":"code","6aab56af":"markdown","c42b4507":"markdown"},"source":{"86094d89":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nfrom ipywidgets import interact ,widgets\nimport seaborn as sns\n%matplotlib inline\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8dab1c28":"data = pd.read_csv(\"\/kaggle\/input\/who-suicide-statistics\/who_suicide_statistics.csv\")\nprint(data.shape,data.drop_duplicates().shape)\nprint(data.head())\nprint(data.info())\nprint(data.isnull().sum())","e2a5be0a":"data_country_year = data.fillna(0).groupby(['country','year'],as_index=False).agg({'suicides_no':'sum','population':'sum'})\ndata_country_year['suicide%'] = data_country_year['suicides_no']*100\/data_country_year['population']\n\ndata_country_year_sex = data.fillna(0).groupby(['country','year','sex'],as_index=False).agg({'suicides_no':'sum','population':'sum'})\ndata_country_year_sex['suicide%'] = data_country_year_sex['suicides_no']*100\/data_country_year['population']\n\ndata_country_year_age = data.fillna(0).groupby(['country','year','age'],as_index=False).agg({'suicides_no':'sum','population':'sum'})\ndata_country_year_age['suicide%'] = data_country_year_age['suicides_no']*100\/data_country_year_age['population']\n\ndata_country = data.fillna(0).groupby(['country'],as_index=False).agg({'suicides_no':['min','mean','median','max'],\n                                                                       'population' :['min','mean','median','max']\n                                                                      })\ndata_country.columns = ['country','min','mean','median','max','pop_min','pop_mean','pop_median','pop_max']\n\n","a85e6474":"@interact\ndef year_wise_sucides(country = data_country_year.country.unique()):\n#     print(data[data.country==country].isnull().sum())\n    plot_df = data_country_year[data_country_year.country==country]\n    plt.figure(figsize=(15,8))\n    plt.subplots_adjust(hspace=0.7)\n    plt.subplot(3,1,1)\n    sns.lineplot(\"year\",\"suicide%\",data=plot_df,marker='o')\n    plt.xticks(plot_df.year.unique(),rotation=90)\n    plt.title(country)\n#     plt.xlabel(\"Year\")\n    plt.ylabel(\"%Suicide\")\n    plt.grid()\n\n    plt.subplot(3,1,2)\n    plot_df_sex = data_country_year_sex[data_country_year_sex.country==country]\n    sns.lineplot(\"year\",\"suicides_no\",hue='sex',data=plot_df_sex,marker='o')\n    plt.xticks(plot_df.year.unique(),rotation=90)\n#     plt.title(country)\n#     plt.xlabel(\"Year\")\n    plt.ylabel(\"%Suicide\")\n    plt.grid()\n    \n    \n    plt.subplot(3,1,3)\n    plot_df_age = data_country_year_age[data_country_year_age.country==country]\n    sns.lineplot(\"year\",\"suicides_no\",hue='age',data=plot_df_age,marker='o')\n    plt.xticks(plot_df.year.unique(),rotation=90)\n#     plt.title(country)\n    plt.xlabel(\"Year\")\n    plt.ylabel(\"%Suicide\")\n    plt.grid()\n","f83b0a3e":"top_num = 20\nplot_df = data_country.sort_values(by=['mean'],ascending=False).head(top_num)\nplt.figure(figsize=(15,5))\n\nplt.plot(\"country\",\"mean\",data =plot_df,label='mean')\nplt.plot(\"country\",\"median\",data =plot_df,label='median',linestyle='--',marker='o')\nplt.fill_between(plot_df['country'],plot_df['min'],plot_df['max'],alpha=0.3 )\nplt.legend()\nplt.xticks(rotation=90)\nplt.ylabel(\"#Suicides \")\nplt.twinx()\nplt.plot(\"country\",\"pop_median\",data =plot_df,label='pop_median',linestyle='-.',color='g')\nplt.legend(loc='upper left')\nplt.title(\"Country Level Suicides\")\nplt.xlabel(\"Country\")\nplt.ylabel(\"Population \")","9219e345":"@interact\ndef var_dist(col = ['age','sex','year']):\n    plot_df = data.fillna(0).groupby([col],as_index=False).agg({'suicides_no':'sum','population':'sum'})\n    plot_df['suicide%'] = plot_df['suicides_no']*100\/plot_df['population']\n    plt.figure(figsize=(10,5))\n    plt.subplots_adjust(wspace=0.5)\n    plt.subplot(1,2,1)\n    plt.barh(col,\"suicide%\",data=plot_df.sort_values(by=['suicide%']))\n    plt.xlabel(\"suicide%\")\n    plt.ylabel(\"age\")\n    plt.subplot(1,2,2)\n    plt.barh(col,\"suicides_no\",data=plot_df.sort_values(by=['suicides_no']))\n    plt.xlabel(\"suicides_no\")\n    \n    for col2 in ['age','sex']:\n        if col!=col2:\n            plot_df_bi = data.fillna(0).groupby([col,col2],as_index=False).agg({'suicides_no':'sum','population':'sum'})\n            plot_df_bi['suicide%'] = plot_df['suicides_no']*100\/plot_df['population']\n            plt.figure(figsize=(15,4))\n            sns.barplot(col,'suicides_no',hue=col2,data=plot_df_bi)\n            plt.xticks(rotation=90)\n            plt.title(f\"{col} vs {col2}\")\n    \n        ","6aab56af":"## Basic Data Stats","c42b4507":"## EDA"}}