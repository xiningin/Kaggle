{"cell_type":{"797ebee3":"code","a594db28":"code","3d8b3bc6":"code","9beaec46":"code","dde93722":"code","de960901":"code","e2087e4f":"code","fd612adb":"code","ae03cf69":"code","d6997a62":"code","d88868b9":"code","0d21d4ba":"code","51bda71a":"code","15c9f737":"code","3c18c0a3":"code","2e63a9a9":"code","174adf33":"code","1d6c593f":"code","b1e9277c":"markdown","e235b62e":"markdown"},"source":{"797ebee3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a594db28":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3d8b3bc6":"df = pd.read_csv('..\/input\/salary-data-simple-linear-regression\/Salary_Data.csv')","9beaec46":"df.head()","dde93722":"df.info()","de960901":"df.describe()","e2087e4f":"plt.figure(figsize=(16,6))\ncorr = df.corr\nsns.set_theme(style = 'white')\nheat_map = sns.scatterplot(x = df['YearsExperience'], y = df['Salary'])","fd612adb":"viz = df[['YearsExperience']]\nviz.hist()\nplt.show()","ae03cf69":"msk = np.random.rand(len(df)) < 0.8\ntrain = df[msk]\ntest = df[~msk]","d6997a62":"print('train_shape:', train.shape)\nprint('test_shape:',test.shape)\n","d88868b9":"Results = pd.DataFrame({'Algorithm': [],'MAE': [], 'R^2': [], \"MSE\":[], \"RMSE\":[]})","0d21d4ba":"from sklearn.linear_model import LinearRegression\nmodel_1 = LinearRegression()\nX_train = np.asanyarray(train[['YearsExperience']])\ny_train = np.asanyarray(train[['Salary']])\nmodel_1.fit (X_train, y_train)\n# The coefficients\nprint ('Coefficients: ', model_1.coef_)\nprint ('Intercept: ',model_1.intercept_)","51bda71a":"plt.scatter(train['YearsExperience'],train['Salary'],  color='blue')\nplt.plot(X_train, model_1.coef_[0][0]*X_train + model_1.intercept_[0], '-r')\nplt.xlabel(\"Years Experience\")\nplt.ylabel(\"Salary\")\nplt.title(\"Train Data\")","15c9f737":"X_test = np.asanyarray(test[['YearsExperience']])\ny_test = np.asanyarray(test[['Salary']])\npreds_1= model_1.predict(X_test)","3c18c0a3":"from sklearn.metrics import mean_absolute_error, r2_score, mean_squared_error\nfrom math import sqrt","2e63a9a9":"res = pd.DataFrame({'Algorithm': ['LinearRegression'],'MAE': [mean_absolute_error(y_test, preds_1)],\"R^2\": [r2_score(y_test, preds_1)], \"MSE\":[mean_squared_error(y_test, preds_1)], \"RMSE\":[sqrt(mean_squared_error(y_test, preds_1))]})\nResults = Results.append(res)","174adf33":"Results","1d6c593f":"plt.scatter(test['YearsExperience'], test['Salary'],  color='blue')\nplt.plot(X_test, model_1.coef_[0][0]*X_test + model_1.intercept_[0], '-y')\nplt.xlabel(\"Years Experience\")\nplt.ylabel(\"Salary\")\nplt.title(\"Test Data\")","b1e9277c":"Simple Linear Regression","e235b62e":"Plot Output"}}