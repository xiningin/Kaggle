{"cell_type":{"03904d72":"code","e5ba556e":"code","5f78d196":"code","be7fb753":"code","cdeaae19":"code","cb680350":"code","af456d54":"code","e07d75c8":"code","ad2d6216":"code","5ce1e540":"code","128148eb":"code","4a792d5c":"code","9f914812":"code","cb32e2b8":"code","2aed0b13":"code","2e494364":"code","50a48805":"code","6e74565f":"code","b6c8e48d":"code","9910b6fb":"code","53b04a03":"code","c12ae29e":"code","00fcba39":"code","9223d866":"code","0d511cba":"code","b36a42b5":"code","3b5751b9":"code","a7994348":"markdown","748ab5b8":"markdown"},"source":{"03904d72":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","e5ba556e":"train_file = '..\/input\/house-prices-advanced-regression-techniques\/train.csv'\ntrain = pd.read_csv(train_file)\nvalidation_file = '..\/input\/house-prices-advanced-regression-techniques\/test.csv'\nvalidation = pd.read_csv(validation_file)\n\npd.options.display.max_columns = len(train.columns)\ntrain.head(15)","5f78d196":"columns_list = train.columns\nprint(list(columns_list))","be7fb753":"train.info()","cdeaae19":"train.describe()","cb680350":"missing = train.isna().sum()\nmissing = missing[missing>0]\nmissing.plot(kind='bar', figsize=(25,5), grid=True)\nplt.show()","af456d54":"train.fillna(0, inplace=True)\nmissing = train.isna().sum()\nmissing = missing[missing>0]\nlen(missing)","e07d75c8":"cat_cols_list = list(train.select_dtypes(exclude='number').columns)\nprint(cat_cols_list)","ad2d6216":"#Replace NaN values 0\nfor col in cat_cols_list:\n    train[col].replace(to_replace=np.nan, value=0, inplace=True)","5ce1e540":"train.head()","128148eb":"for col in cat_cols_list:\n    train[col] = train[col].astype(str)","4a792d5c":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\nencoders = {column: LabelEncoder() for column in cat_cols_list}\n\nfor column in cat_cols_list:\n    train[column] = encoders[column].fit_transform(train[column])\n    \ntrain.head()","9f914812":"train.drop(columns='Id', axis=1).hist(figsize=(25,25))\nplt.show()","cb32e2b8":"train_corr = train.drop('Id', axis=1).corr()\ntrain_corr.style.background_gradient(cmap='Reds').set_precision(2)","2aed0b13":"train_corr['SalePrice'].abs().sort_values(ascending=False).plot(kind='bar', figsize=(30,5))\nplt.show()","2e494364":"top_10_corr = list(train_corr['SalePrice'].abs().sort_values(ascending=False).head(11).drop('SalePrice', axis=0).index.values)\nprint(top_10_corr)","50a48805":"from sklearn.model_selection import train_test_split\n\nX_train ,X_test, y_train, y_test = train_test_split(train[top_10_corr], train['SalePrice'], test_size = 0.25)","6e74565f":"from sklearn.svm import SVR\nsvr_model = SVR()\n\nsvr_model.fit(X_train, y_train)\nsvm_pred = svr_model.predict(X_test)","b6c8e48d":"plt.scatter(y_test, svm_pred, c='k')","9910b6fb":"validation= validation[top_10_corr]","53b04a03":"validation.fillna(0, inplace=True)\nmissing_val = validation.isna().sum()\nmissing_val = missing_val[missing_val>0]\nlen(missing_val)","c12ae29e":"#Replace NaN values 0\nfor col in cat_cols_list:\n    validation.replace(to_replace=np.nan, value=0, inplace=True)","00fcba39":"validation.head()","9223d866":"for col in ['ExterQual', 'KitchenQual']:\n    validation[col] = validation[col].astype(str)","0d511cba":"for column in ['ExterQual', 'KitchenQual']:\n    validation[column] = encoders[column].fit_transform(validation[column])\n    \nvalidation.head()","b36a42b5":"my_sub = pd.DataFrame(data = {'Id' : pd.read_csv(validation_file)['Id'],\n                              'SalePrice' : svr_model.predict(validation)})\nmy_sub.head()","3b5751b9":"my_sub.to_csv('.\/\/submission.csv', index=False)","a7994348":"****Libraries:","748ab5b8":"Load data"}}