{"cell_type":{"a8915833":"code","ae4a406c":"code","b6421aea":"code","4c88e3be":"code","3998fdbb":"code","fda2ebc8":"code","1c2c3ff3":"code","203291fc":"code","84e772a6":"code","c8079ed7":"code","f420925a":"code","050f8c1f":"code","fe384348":"code","0a5d6cd9":"code","b8792e8c":"code","412832a1":"code","ef5fc8da":"code","faa611bc":"code","cb8b7374":"code","cae2beba":"code","3c5962cf":"code","ce540c0b":"code","2720260a":"code","42a77402":"code","6b3b5c12":"code","359fef85":"code","2a9e3c26":"code","6031b8b9":"code","f5bddd36":"code","ad6535ee":"code","cb46ea83":"code","e7b92b20":"code","57805fff":"code","474c3c20":"code","be08b1dc":"code","f29cc724":"code","5786b23d":"code","d28545be":"markdown","7245c496":"markdown","b54053e7":"markdown"},"source":{"a8915833":"pip install nltk","ae4a406c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom nltk.sentiment import vader\nimport re\nimport nltk\nimport seaborn as sns\nnltk.download('vader_lexicon')","b6421aea":"dados = pd.read_csv('..\/input\/reddit-vaccine-myths\/reddit_vm.csv')\ndados.head()","4c88e3be":"dados.drop(['title','id','url','created'], axis=1, inplace=True)","3998fdbb":"dados['timestamp'] = dados['timestamp'].str.split(' ')","fda2ebc8":"dados['date'] = dados['timestamp'].str.slice(0,1)\ndados['hour'] = dados['timestamp'].str.slice(1)","1c2c3ff3":"x = []\nfor n in dados['date']:\n  x.append(str(n)[1:-1])","203291fc":"dados['date'] = x","84e772a6":"y = []\nfor z in dados['hour']:\n  y.append(str(z)[1:-1])","c8079ed7":"dados['hour'] = y","f420925a":"dados.drop('timestamp', axis=1, inplace=True)","050f8c1f":"no_aps = []\nfor l in dados['date']:\n  no_aps.append(l.replace(\"'\", \"\"))","fe384348":"dados['date'] = no_aps","0a5d6cd9":"no_aps = []\nfor j in dados['hour']:\n  no_aps.append(j.replace(\"'\", \"\"))","b8792e8c":"dados['hour'] = no_aps","412832a1":"dados['date'] = pd.to_datetime(dados['date'], format=\"%Y-%m-%d\")\ndados['hour'] = pd.to_datetime(dados['hour'], format=\"%H:%M:%S\")","ef5fc8da":"dados['year'] = dados['date'].map(lambda x: x.strftime(\"%Y\"))\ndados['month'] = dados['date'].map(lambda x: x.strftime(\"%m\"))\ndados['hour'] = dados['hour'].map(lambda x: x.strftime(\"%H\"))","faa611bc":"dados.dropna(inplace=True)","cb8b7374":"dados['body'] = dados['body'].str.lower()\ndados['body'] = dados['body'].apply(lambda x: re.sub(r'[\\@\\:\\_\\.\\;\\#\\\"\\'\\$\\%\\&\\\/]', \"\", str(x)))","cae2beba":"dados['body'] = dados['body'].apply(lambda x: x.replace(\"https\", \"\"))","3c5962cf":"dados.head()","ce540c0b":"sentiment = vader.SentimentIntensityAnalyzer()","2720260a":"sentiments = [sentiment.polarity_scores(i) for i in dados['body'].values]","42a77402":"dados['Negative Score'] = [i['neg'] for i in sentiments]\ndados['Positivo Score'] = [i['pos'] for i in sentiments]\ndados['Neuter Score'] = [i['neu'] for i in sentiments]\ndados['Compound Score'] = [i['compound'] for i in sentiments]","6b3b5c12":"dados.head()","359fef85":"score = dados['Compound Score'].values","2a9e3c26":"t = []\nfor v in score:\n  if v >= 0.05:\n    t.append('Positive')\n  elif v <= -0.05:\n    t.append('Negative')\n  else:\n    t.append(\"Neuter\")\n\ndados['Sentimen'] = t","6031b8b9":"dados.head()","f5bddd36":"dados['Sentimen'].value_counts().plot(kind='bar')","ad6535ee":"sns.histplot(dados['Compound Score'], bins=11)","cb46ea83":"dados = pd.concat([dados, pd.get_dummies(dados['Sentimen'])], axis=1)\ndados.head()","e7b92b20":"dados2 = dados.groupby('year').mean()\ndados2","57805fff":"ax, fig = plt.subplots(figsize=(12,6))\nplt.plot(dados2.index, dados2['Negative Score'], label='Negative')\nplt.plot(dados2.index, dados2['Neuter Score'], label='Neuter')\nplt.plot(dados2.index, dados2['Positivo Score'], label='Positive')\nfig.spines['right'].set_visible(False)\nfig.spines['top'].set_visible(False)\nplt.title('Mean Composition by Year', fontsize=12, color='grey', style='oblique', fontweight='bold')\nplt.xticks(color='grey', style='oblique', fontweight='bold')\nplt.yticks(color='grey', style='oblique', fontweight='bold')\nplt.xlabel(\"Year\", fontsize=15, color='grey', style='oblique', fontweight='bold')\nplt.ylabel(\"Composition\", fontsize=15, color='grey', style='oblique', fontweight='bold')\nplt.legend(fontsize=12)\nplt.show()","474c3c20":"dados3 = dados.groupby('hour').mean()\ndados3.head()","be08b1dc":"ax, fig = plt.subplots(figsize=(12,6))\nplt.plot(dados3.index, dados3['Negative Score'], label='Negative')\nplt.plot(dados3.index, dados3['Neuter Score'], label='Neuter')\nplt.plot(dados3.index, dados3['Positivo Score'], label='Positive')\nfig.spines['right'].set_visible(False)\nfig.spines['top'].set_visible(False)\nplt.title('Mean Composition by Hour', fontsize=12, color='grey', style='oblique', fontweight='bold')\nplt.xticks(color='grey', style='oblique', fontweight='bold')\nplt.yticks(color='grey', style='oblique', fontweight='bold')\nplt.xlabel(\"Year\", fontsize=15, color='grey', style='oblique', fontweight='bold')\nplt.ylabel(\"Composition\", fontsize=15, color='grey', style='oblique', fontweight='bold')\nplt.legend(fontsize=12)\nplt.show()","f29cc724":"dados4 = dados.groupby('month').mean()\ndados4.head()","5786b23d":"ax, fig = plt.subplots(figsize=(12,6))\nplt.plot(dados4.index, dados4['Negative Score'], label='Negative')\nplt.plot(dados4.index, dados4['Neuter Score'], label='Neuter')\nplt.plot(dados4.index, dados4['Positivo Score'], label='Positive')\nfig.spines['right'].set_visible(False)\nfig.spines['top'].set_visible(False)\nplt.title('Mean Composition by Month', fontsize=12, color='grey', style='oblique', fontweight='bold')\nplt.xticks(color='grey', style='oblique', fontweight='bold')\nplt.yticks(color='grey', style='oblique', fontweight='bold')\nplt.xlabel(\"Year\", fontsize=15, color='grey', style='oblique', fontweight='bold')\nplt.ylabel(\"Composition\", fontsize=15, color='grey', style='oblique', fontweight='bold')\nplt.legend(fontsize=12)\nplt.show()","d28545be":"# Reddit Vaccine Myths\n\n### Sentiment Analyze with Vader","7245c496":"### Cleaning Data","b54053e7":"### Sentiment Analyze"}}