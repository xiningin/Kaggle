{"cell_type":{"b85136b6":"code","1d9279ab":"code","b3db854d":"code","1b98079d":"code","83685e01":"code","52ac7acf":"code","e5c4af5e":"code","65b84f74":"code","2466c57f":"code","5aea6663":"code","e4aaf8ec":"code","1322a528":"code","e7d4d7a4":"code","aa04dc69":"code","8ec39990":"code","231a28f5":"markdown","70848e02":"markdown","2fb47c07":"markdown","19a61fdf":"markdown","0d600ca1":"markdown","84856d99":"markdown","8eb55052":"markdown","76635c6a":"markdown","5fdfb3f9":"markdown","76cf52d6":"markdown","b8d30d27":"markdown","6a2038af":"markdown"},"source":{"b85136b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split , cross_val_score\nfrom matplotlib import pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1d9279ab":"df = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ndf.head()","b3db854d":"plt.pie(df.shape,labels=[\"rows\",\"columns\"],colors=[\"silver\",\"orange\"],pctdistance=0.7,autopct=\"%.1f%%\",textprops={\"weight\":\"bold\"},wedgeprops={'edgecolor':\"black\",\"linewidth\":2})\nplt.title(\"Shape of dataframe\")\nplt.show()","1b98079d":"df.describe()","83685e01":"df.dtypes","52ac7acf":"df.size","e5c4af5e":"for columns in df:\n    print(columns)","65b84f74":"features = [\"Id\",\"MSSubClass\",\"LotArea\",\"OverallQual\",\"OverallCond\",\"YearBuilt\",\"YearRemodAdd\",\"1stFlrSF\",'2ndFlrSF','LowQualFinSF','GrLivArea',\"FullBath\",\"HalfBath\",\"BedroomAbvGr\",\"KitchenAbvGr\",\"TotRmsAbvGrd\",\"Fireplaces\",\"WoodDeckSF\",\"OpenPorchSF\",\"EnclosedPorch\",\"3SsnPorch\",\"ScreenPorch\",\"PoolArea\",\"MiscVal\",\"MoSold\",\"YrSold\"]\nfor i in features:\n    print(df[i].isna().sum)","2466c57f":"x = df[features]\ny = df[\"SalePrice\"]","5aea6663":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2)\nprint(x_train.shape)\nprint(x_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","e4aaf8ec":"model = RandomForestRegressor(n_estimators=50)\nmodel.fit(x_train,y_train)\nprint(model.score(x_test,y_test))\nprint(model.predict(x_test[:10]))","1322a528":"cross_val_score(RandomForestRegressor(n_estimators=50),x_train,y_train)","e7d4d7a4":"test_data = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\ntest_data","aa04dc69":"features = [\"Id\",\"MSSubClass\",\"LotArea\",\"OverallQual\",\"OverallCond\",\"YearBuilt\",\"YearRemodAdd\",\"1stFlrSF\",'2ndFlrSF','LowQualFinSF','GrLivArea',\"FullBath\",\"HalfBath\",\"BedroomAbvGr\",\"KitchenAbvGr\",\"TotRmsAbvGrd\",\"Fireplaces\",\"WoodDeckSF\",\"OpenPorchSF\",\"EnclosedPorch\",\"3SsnPorch\",\"ScreenPorch\",\"PoolArea\",\"MiscVal\",\"MoSold\",\"YrSold\"]\n\n\nnew_data = test_data[features]\nnew_data","8ec39990":"output = pd.DataFrame({\"Id\":test_data[\"Id\"],\"SalePrice\":model.predict(new_data)})\noutput.to_csv(\"house_prediction_submission.csv\",index=False)\nprint(\"completed\")","231a28f5":"# Upvote if you like my work , please","70848e02":"**And also let us check for nan values in that columns**","2fb47c07":"# Building a regression model","19a61fdf":"# Let's take all columns we need for our model","0d600ca1":"**So we dont have any nan values in features**","84856d99":"# Importing all required libraries","8eb55052":"**MSSubClass   :   Identifies the type of dwelling involved in the sale.**\n\n**LotArea   :   Lot size in square feet**\n\n**OverallQual   :   Rates the overall material and finish of the house**\n\n**YearBuilt   :   Original construction date**\n\n**YearRemodAdd   :   Remodel date (same as construction date if no remodeling or additions)**\n\n**1stFlrSF   :   First Floor square feet**\n\n**2ndFlrSF   :   Second floor square feet**\n\n**LowQualFinSF   :   Low quality finished square feet (all floors)**\n\n**GrLivArea   :   Above grade (ground) living area square feet**\n\n**FullBath   :   Full bathrooms above grade**\n\n**HalfBath   :   Half baths above grade**\n\n**Bedroom   :   Bedrooms above grade (does NOT include basement bedrooms)**\n\n**Kitchen   :   Kitchens above grade**\n\n**TotRmsAbvGrd   :   Total rooms above grade (does not include bathrooms)**\n\n**Fireplaces   :   Number of fireplaces**\n\n**WoodDeckSF   :   Wood deck area in square feet**\n\n**OpenPorchSF   :   Open porch area in square feet**\n\n**EnclosedPorch   :   Enclosed porch area in square feet**\n\n**3SsnPorch   :   Three season porch area in square feet**\n\n**ScreenPorch   :   Screen porch area in square feet**\n\n**PoolArea   :   Pool area in square feet**\n\n**MiscVal   :   Value of miscellaneous feature in dollars**\n\n**MoSold   :   Month Sold (MM)**\n\n**YrSold   :   Year Sold (YYYY)**","76635c6a":"# Split x and y into training and testing data","5fdfb3f9":"# Building a regression model","76cf52d6":"# Description to all column in features","b8d30d27":"# Reading train data as df","6a2038af":"# Making submission file"}}