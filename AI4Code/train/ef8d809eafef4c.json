{"cell_type":{"71c4be4d":"code","b6a8e454":"code","67ae3610":"code","27ffca61":"code","3c1d6b27":"code","bbeb5937":"code","60876857":"code","c864c090":"code","3c32ede4":"code","5900c746":"code","539fff04":"code","6d5024ea":"code","d794660a":"code","aab6b6b3":"code","4ecc57ce":"code","92903ee2":"code","db52a4d1":"code","aa4b885f":"code","ef8e26e2":"code","27fed864":"code","452ebde5":"code","4440c496":"code","168a2690":"code","c747bca3":"markdown","82f1a34d":"markdown","d209ea05":"markdown","1c670964":"markdown","15122439":"markdown","f57a0d0b":"markdown","e5372189":"markdown","9308b121":"markdown","ab843cc8":"markdown","58e96ff7":"markdown","c4a419a1":"markdown","a958ac87":"markdown","f5515d9e":"markdown","a8923b02":"markdown","aae3caf1":"markdown","ffda51bd":"markdown","09c0a09a":"markdown","14ead92e":"markdown","c8a2a92c":"markdown","f98b2b4e":"markdown","315b0134":"markdown","6707acb3":"markdown","dedaadbd":"markdown","ed827fb3":"markdown"},"source":{"71c4be4d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b6a8e454":"data = pd.read_csv(\"\/kaggle\/input\/sentiment140\/training.1600000.processed.noemoticon.csv\",encoding='latin-1')\ndata.head()","67ae3610":"DATASET_COLUMNS = [\"target\", \"ids\", \"date\", \"flag\", \"user\", \"TweetText\"]\ndata.columns = DATASET_COLUMNS\ndata.head()","27ffca61":"data.drop(['ids','date','flag','user'],axis = 1,inplace = True)\n","3c1d6b27":"data.head()","bbeb5937":"data['CleanTweet'] = data['TweetText'].str.replace(\"@\", \"\") \ndata.head()","60876857":"data['CleanTweet'] = data['CleanTweet'].str.replace(r\"http\\S+\", \"\") \ndata.head()","c864c090":"data['CleanTweet'] = data['CleanTweet'].str.replace(\"[^a-zA-Z]\", \" \") \ndata.head()","3c32ede4":"import nltk\nstopwords=nltk.corpus.stopwords.words('english')\n\ndef remove_stopwords(text):\n    clean_text=' '.join([word for word in text.split() if word not in stopwords])\n    return clean_text\n\ndata['CleanTweet'] = data['CleanTweet'].apply(lambda text : remove_stopwords(text.lower()))\ndata.head()","5900c746":"data['CleanTweet'] = data['CleanTweet'].apply(lambda x: x.split())\ndata.head()","539fff04":"# from nltk.stem.porter import * \n# stemmer = PorterStemmer() \n# data['CleanTweet'] = data['CleanTweet'].apply(lambda x: [stemmer.stem(i) for i in x])\n# data.head()","6d5024ea":"# data['CleanTweet'] = data['CleanTweet'].apply(lambda x: ' '.join([w for w in x]))\n# data.head()","d794660a":"# data['CleanTweet'] = data['CleanTweet'].apply(lambda x: ' '.join([w for w in x.split() if len(w)>3]))\n# data.head()","aab6b6b3":"# import matplotlib.pyplot as plt\n# all_words = ' '.join([text for text in data['CleanTweet']])\n\n# from wordcloud import WordCloud \n# wordcloud = WordCloud(width=800, height=500, random_state=21, max_font_size=110).generate(all_words) \n\n# plt.figure(figsize=(10, 7)) \n# plt.imshow(wordcloud, interpolation=\"bilinear\") \n# plt.axis('off') \n# plt.show()","4ecc57ce":"# from textblob import TextBlob","92903ee2":"# data['polarity'] = data['CleanTweet'].apply(lambda CleanTweet: TextBlob(CleanTweet).sentiment[0])\n# data.head()","db52a4d1":"# data['subjectivity'] = data['CleanTweet'].apply(lambda CleanTweet: TextBlob(CleanTweet).sentiment[1])\n# data.head()","aa4b885f":"# data['polarityinwords'] = np.where(data.polarity>0.000000000,'positive','negative')\n# data.head()","ef8e26e2":"# data['subjectivityinwords'] = np.where(data.subjectivity>0.5,'factual','personalopinion')\n\n# data.head()","27fed864":"# data['polarityinwords'].value_counts()","452ebde5":"# data['subjectivityinwords'].value_counts()","4440c496":"# positive_words =' '.join([text for text in data['CleanTweet'][data['polarityinwords'] =='positive']]) \n# wordcloud = WordCloud(width=800, height=500, random_state=21, max_font_size=110).generate(positive_words)\n\n# plt.figure(figsize=(10, 7)) \n# plt.imshow(wordcloud, interpolation=\"bilinear\") \n# plt.axis('off') \n# plt.show()","168a2690":"# depressive_words =' '.join([text for text in data['CleanTweet'][data['polarityinwords'] =='negative']]) \n# wordcloud = WordCloud(width=800, height=500, random_state=21, max_font_size=110).generate(depressive_words)\n\n# plt.figure(figsize=(10, 7)) \n# plt.imshow(wordcloud, interpolation=\"bilinear\") \n# plt.axis('off') \n# plt.show()","c747bca3":"Stemming is the process of removing few characters from the word so that it is made to reach root form of the word.","82f1a34d":"First we have to remove punctuation marks to cleanse text data.","d209ea05":"Text analysis also requires preprocesing just like numerical analysis.So few text pre-processing measures are used to clean the data.","1c670964":"Sentimental analysis on twitter data.\n\nThe objective is to find positivity in the tweets and also to check how much factual oriented are the tweets.\n\nThis can be achieved by sentimental analysis on tweets.\n\nWe use inbuilt python library to enable us perfrom sentimental analysis.\n![image.png](attachment:image.png)","15122439":"Next pre-processing technique would be removal of stop words. Stop words are the words which occur most frequently but do not add much meaning to the text other than grammatical usage.So it can be removed.","f57a0d0b":"![image.png](attachment:image.png)","e5372189":"![image.png](attachment:image.png)","9308b121":"![image.png](attachment:image.png)","ab843cc8":"![image.png](attachment:image.png)","58e96ff7":"After stop words are removed we next tokenize the content ","c4a419a1":"> There is more negativity than positivity.\n\n> Being a social media platform it is correct that almost 75% the tweets examined are of personal opinion and it holds good for majority of the tweets too.","a958ac87":"We use Textblob function to check the positivity and negativity of tweets.","f5515d9e":"Word Cloud for negative tweets","a8923b02":"Visulaizing most frequent words in tweets.","aae3caf1":"Removing words with less than 3 characters","ffda51bd":"Word cloud for positive tweets alone","09c0a09a":"![image.png](attachment:image.png)","14ead92e":"Data is given columns like target which is the class label.\nFollowed by twitter ids.\nFollowed by data and flag.\nThe next column will be the column for analysis that is TweetText.","c8a2a92c":"Twitter data is read in the csv format.It does not have columns at first so the first step will be giving column names.","f98b2b4e":"Data just has tweets and targets after dropping unwanted columns","315b0134":"![image.png](attachment:image.png)","6707acb3":"We should drop cells which are not needed for analysis to simplify the process.\n\nHence cells like ids,date,flag and user is dropped since we have to analyse the tweets only.","dedaadbd":"Next we stitch back the words.","ed827fb3":"![image.png](attachment:image.png)"}}