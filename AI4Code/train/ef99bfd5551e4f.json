{"cell_type":{"bace8814":"code","13e0814b":"code","c035406e":"code","e307c08b":"code","22b97c62":"code","e19c5871":"code","edc687e7":"code","18278220":"code","52af483c":"code","fec38bf8":"code","c3bbcc12":"code","7857838c":"code","ac901783":"code","5d997d6f":"code","c017dc1b":"code","4ffb317d":"code","94ecf218":"code","39ef9adf":"code","b983cb30":"code","e4d1ca8a":"code","b753bd92":"markdown","fdfb153e":"markdown","f42d8236":"markdown"},"source":{"bace8814":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport math\nimport random\nimport albumentations as A\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","13e0814b":"!pip install keras","c035406e":"import numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom PIL import Image\nfrom glob import glob\nimport cv2\n\n#Only 8 months and none of those below works anymore! Maybe they are already in Kaggle!\n\n#import keras  #Ignore above cudart dlerror if you do not have a GPU set up on your machine.\n#from keras.preprocessing.image import ImageDataGenerator\n#from keras.applications.vgg16 import VGG16\n#from keras.applications.vgg16 import preprocess_input\n#from keras import Model, layers\n#from keras.callbacks import *\n#from keras.models import load_model, model_from_json","e307c08b":"def plotImages(artist,directory):\n    print(artist)\n    multipleImages = glob(directory)\n    plt.rcParams['figure.figsize'] = (15, 15)\n    plt.subplots_adjust(wspace=0, hspace=0)\n    i_ = 0\n    for l in multipleImages[:25]:\n        im = cv2.imread(l)\n        im = cv2.resize(im, (128, 128)) \n        plt.subplot(5, 5, i_+1) #.set_title(l)\n        plt.imshow(cv2.cvtColor(im, cv2.COLOR_BGR2RGB)); plt.axis('off')\n        i_ += 1\n        \n        \nplotImages(\"Facial Paralysis Drawing in Gray Scale\",\"..\/input\/facial-droop-and-facial-paralysis-image\/Strokefaces\/droopy\/**\")","22b97c62":"def plotImages(artist,directory):\n    print(artist)\n    multipleImages = glob(directory)\n    plt.rcParams['figure.figsize'] = (15, 15)\n    plt.subplots_adjust(wspace=0, hspace=0)\n    i_ = 0\n    for l in multipleImages[25:50]:\n        im = cv2.imread(l)\n        im = cv2.resize(im, (128, 128)) \n        plt.subplot(5, 5, i_+1) #.set_title(l)\n        plt.imshow(cv2.cvtColor(im, cv2.COLOR_BGR2RGB)); plt.axis('off')\n        i_ += 1\n        \n        \nplotImages(\"Drooping in Gray Scale\",\"..\/input\/facial-droop-and-facial-paralysis-image\/Strokefaces\/droopy\/**\")","e19c5871":"from tqdm import tqdm\nfrom PIL import Image as Img\n\n#No longer working here! Only 8 months.\n\n#from keras import Input\n#from keras.layers import Dense, Reshape, LeakyReLU, Conv2D, Conv2DTranspose, Flatten, Dropout\n#from keras.models import Model\n#from keras.optimizers import RMSprop","edc687e7":"#Code by Nagesh Singh Chauhan https:\/\/www.kaggle.com\/nageshsingh\/generate-realistic-human-face-using-gan\n\nPIC_DIR = f'..\/input\/facial-droop-and-facial-paralysis-image\/Strokefaces\/droopy\/'\n\nIMAGES_COUNT = 1125\n\nORIG_WIDTH = 178\nORIG_HEIGHT = 208\ndiff = (ORIG_HEIGHT - ORIG_WIDTH) \/\/ 2\n\nWIDTH = 128\nHEIGHT = 128\n\ncrop_rect = (0, diff, ORIG_WIDTH, ORIG_HEIGHT - diff)\n\nimages = []\nfor pic_file in tqdm(os.listdir(PIC_DIR)[:IMAGES_COUNT]):\n    pic = Image.open(PIC_DIR + pic_file).crop(crop_rect)\n    pic.thumbnail((WIDTH, HEIGHT), Image.ANTIALIAS)\n    images.append(np.uint8(pic))","18278220":"#Code by Nagesh Singh Chauhan https:\/\/www.kaggle.com\/nageshsingh\/generate-realistic-human-face-using-gan\n\n#Display first 25 images\nplt.figure(1, figsize=(10, 10))\nfor i in range(25):\n    plt.subplot(5, 5, i+1)\n    plt.imshow(images[i])\n    plt.axis('off')\nplt.show()","52af483c":"#Codes by Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/monet-eda-and-visualization-techniques\n\ndef visualize_images(path, n_images, is_random=True, figsize=(16, 16)):\n    plt.figure(figsize=figsize)\n    w = int(n_images ** .5)\n    h = math.ceil(n_images \/ w)\n    \n    all_names = os.listdir(path)\n    image_names = all_names[:n_images]   \n    if is_random:\n        image_names = random.sample(all_names, n_images)\n            \n    for ind, image_name in enumerate(image_names):\n        img = cv2.imread(os.path.join(path, image_name))\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n        plt.subplot(h, w, ind + 1)\n        plt.imshow(img)\n        plt.xticks([])\n        plt.yticks([])\n    \n    plt.show()","fec38bf8":"droopy_PNG_PATH = '..\/input\/facial-droop-and-facial-paralysis-image\/Strokefaces\/droopy'","c3bbcc12":"visualize_images(droopy_PNG_PATH, 9)","7857838c":"#Codes by Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/monet-eda-and-visualization-techniques\n\ndef show_color_histogram(path):\n    image_names = os.listdir(path)\n    image_name = random.choice(image_names)\n    img = cv2.imread(os.path.join(path, image_name))\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n    fig = make_subplots(1, 2)\n\n    fig.add_trace(go.Image(z=img), 1, 1)\n    for channel, color in enumerate(['red', 'green', 'blue']):\n        fig.add_trace(\n            go.Histogram(\n                x=img[..., channel].ravel(), \n                opacity=0.5,\n                marker_color=color, \n                name='%s channel' %color\n            ), 1, 2)\n    fig.update_layout(height=400)\n    fig.show()","ac901783":"#Codes by Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/monet-eda-and-visualization-techniques\n\ndef color_hist_visualization(image_path, figsize=(16, 4)):\n    plt.figure(figsize=figsize)\n    \n    img = cv2.imread(image_path)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n    plt.subplot(1, 4, 1)\n    plt.imshow(img)\n    plt.axis(\"off\")\n    \n    colors = [\"red\", \"green\", \"blue\"]\n    for i in range(len(colors)):\n        plt.subplot(1, 4, i + 2)\n        plt.hist(\n            img[:, :, i].reshape(-1),\n            bins=25,\n            alpha=0.5,\n            color=colors[i],\n            density=True\n        )\n        plt.xlim(0, 255)\n        plt.xticks([])\n        plt.yticks([])\n        \n    plt.show() ","5d997d6f":"#Codes by Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/monet-eda-and-visualization-techniques\n\nimg_path = '..\/input\/facial-droop-and-facial-paralysis-image\/Strokefaces\/droopy\/After-Botox-for-Synkinesis-Dr-Azizzadeh-215x300.jpg'\ncolor_hist_visualization(img_path)\n\nimg_path = '..\/input\/facial-droop-and-facial-paralysis-image\/Strokefaces\/droopy\/images - 2019-08-23T112607.472.jpg'\ncolor_hist_visualization(img_path)\n\nimg_path = '..\/input\/facial-droop-and-facial-paralysis-image\/Strokefaces\/droopy\/images (22).jpg'\ncolor_hist_visualization(img_path)","c017dc1b":"import plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\n\nshow_color_histogram(droopy_PNG_PATH)","4ffb317d":"def batch_visualization(path, n_images, is_random=True, figsize=(16, 16)):\n    plt.figure(figsize=figsize)\n    \n    w = int(n_images ** .5)\n    h = math.ceil(n_images \/ w)\n    \n    all_names = os.listdir(path)\n    \n    image_names = all_names[:n_images]\n    if is_random:\n        image_names = random.sample(all_names, n_images)\n    \n    for ind, image_name in enumerate(image_names):\n        img = cv2.imread(os.path.join(path, image_name))\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n        plt.subplot(h, w, ind + 1)\n        plt.imshow(img)\n        plt.axis(\"off\")\n        \n    plt.show()","94ecf218":"batch_visualization(droopy_PNG_PATH, 1, is_random=True, figsize=(5, 5))","39ef9adf":"batch_visualization(droopy_PNG_PATH, 4, is_random=True, figsize=(10, 10))","b983cb30":"batch_visualization(droopy_PNG_PATH, 9, is_random=True)","e4d1ca8a":"batch_visualization(droopy_PNG_PATH, 16, is_random=True)","b753bd92":"#On the images below, Since the first snippet started with [:25] On the second I changed to starting with 25 and end with 50 [25:50] since there are 5 rows vs 5 columns: plt.subplot(5, 5, i_+1)","fdfb153e":"#Image shape\nimages = np.array(images) \/ 255 print(images.shape)","f42d8236":"#To view more techniques go to:\n\nCodes by Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/monet-eda-and-visualization-techniques\n\nNagesh Singh Chauhan https:\/\/www.kaggle.com\/nageshsingh\/generate-realistic-human-face-using-gan\n\nAnd https:\/\/www.kaggle.com\/mpwolke\/rijksmuseum-augmentation"}}