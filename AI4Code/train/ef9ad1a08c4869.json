{"cell_type":{"55017925":"code","004b242a":"code","78ba5110":"code","e7d062ac":"code","bc31a582":"code","ca324ced":"code","b4eda544":"code","9b5baf4c":"code","1d8cae00":"code","ad2477e4":"code","85cd572f":"code","0c6b2d2c":"code","948cf46f":"code","5879a174":"code","c62b7959":"code","42cd160f":"code","acd51e82":"code","1f474e8d":"code","e8d21756":"code","d191fa07":"code","f5ff0398":"code","53738310":"code","7dfecb51":"code","c317821a":"code","79d8ad99":"code","d702b8a7":"code","0bb73a47":"code","30cbe138":"code","dadee6ff":"code","901a7582":"markdown","1fe18d1f":"markdown","19b746f3":"markdown","0f678075":"markdown","74a1debf":"markdown","833ba4cd":"markdown","efa3161a":"markdown","91bad46e":"markdown","cbe73be7":"markdown","a8d90051":"markdown","364c7e07":"markdown","37de3cc9":"markdown","4fbc952f":"markdown","1b7aa5d6":"markdown","22d90306":"markdown","333571a8":"markdown","2b5df214":"markdown","152d2750":"markdown","3f5c7229":"markdown","37ccebd0":"markdown","a54d5f86":"markdown","4f3cd503":"markdown"},"source":{"55017925":"## Task 2 - Iris DataSet","004b242a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n","78ba5110":"iris = pd.read_csv('..\/input\/iris\/Iris.csv')\ndf = pd.DataFrame(iris)\ndf.head()","e7d062ac":"df.describe()","bc31a582":"df.isnull().sum()","ca324ced":"df.value_counts()","b4eda544":"df.info()","9b5baf4c":"df.drop('Id', axis=1, inplace=True)","1d8cae00":"df.head()","ad2477e4":"fig = df[df.Species == 'Iris-setosa'].plot(kind='scatter', x='SepalLengthCm', y='SepalWidthCm', color='orange', label='Setosa')\ndf[df.Species == 'Iris-virginica'].plot(kind='scatter', x='SepalLengthCm', y='SepalWidthCm', color='blue', label='Virginica', ax = fig)\ndf[df.Species == 'Iris-versicolor'].plot(kind='scatter', x='SepalLengthCm', y='SepalWidthCm', color='green', label='Versicolor', ax = fig)\n\nfig.set_xlabel('Sepal Length')\nfig.set_ylabel('Sepal Width')\nfig.set_title('Sepal Length vs Sepal Width')\nfig = plt.gcf()\nfig.set_size_inches(9,6)\nplt.show()","85cd572f":"fig = df[df.Species == 'Iris-setosa'].plot(kind='scatter', x='PetalLengthCm', y='PetalWidthCm', color='orange', label='Setosa')\ndf[df.Species == 'Iris-virginica'].plot(kind='scatter', x='PetalLengthCm', y='PetalWidthCm', color='blue', label='Virginica', ax=fig)\ndf[df.Species == 'Iris-versicolor'].plot(kind='scatter', x='PetalLengthCm', y='PetalWidthCm', color='green', label='Versicolor', ax=fig)\n\nfig.set_xlabel('Petal Length')\nfig.set_ylabel('Petal Width')\nfig.set_title('Petal Length Vs Petal Width')\nfig = plt.gcf()\nfig.set_size_inches(9,6)\nplt.show()","0c6b2d2c":"df.hist(edgecolor='black', linewidth=1.2)\nfig = plt.gcf()\nfig.set_size_inches(9,6)","948cf46f":"plt.figure(figsize=(9,6))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species', y='SepalLengthCm', data=df)\nplt.subplot(2,2,2)\nsns.violinplot(x='Species', y='SepalWidthCm', data=df)\nplt.subplot(2,2,3)\nsns.violinplot(x='Species', y='PetalLengthCm', data=df)\nplt.subplot(2,2,4)\nsns.violinplot(x='Species', y='PetalWidthCm', data=df)","5879a174":"from sklearn import metrics\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import svm","c62b7959":"plt.figure(figsize=(7,4))\nsns.heatmap(df.corr(), annot=True, cmap='Oranges_r')\nplt.show()","42cd160f":"train, test = train_test_split(df, test_size = 0.3)\nX_train = train[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]\ny_train = train.Species\nX_test = test[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]\ny_test = test.Species","acd51e82":"X_train.head()","1f474e8d":"y_train.head()","e8d21756":"model = svm.SVC().fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nprint(f'The accuracy of the SVM model is: {metrics.accuracy_score(y_pred, y_test)}')","d191fa07":"model = LogisticRegression().fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nprint(f'The accuracy of logistic regression is: {metrics.accuracy_score(y_pred, y_test)}')","f5ff0398":"model = KNeighborsClassifier(n_neighbors=10).fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nprint(f'The accuracy of KNeighboursClassifier is: {metrics.accuracy_score(y_pred, y_test)}')","53738310":"a_index=list(range(1,11))\na=pd.Series()\nx=[1,2,3,4,5,6,7,8,9,10]\nfor i in list(range(1,11)):\n    model=KNeighborsClassifier(n_neighbors=i) \n    model.fit(X_train,y_train)\n    y_pred=model.predict(X_test)\n    a=a.append(pd.Series(metrics.accuracy_score(y_pred,y_test)))\nplt.plot(a_index, a)\nplt.xticks(x)","7dfecb51":"model = DecisionTreeClassifier().fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nprint(f'The accuracy of Decision Tree Classifier is: {metrics.accuracy_score(y_pred, y_test)}')","c317821a":"petals = df[['PetalLengthCm', 'PetalWidthCm', 'Species']]\nsepals = df[['SepalLengthCm', 'SepalWidthCm', 'Species']]","79d8ad99":"train_p, test_p = train_test_split(petals, test_size=0.3, random_state=0)\n\nX_train_p = train_p[['PetalLengthCm', 'PetalWidthCm']]\ny_train_p = train_p.Species\nX_test_p = test_p[['PetalLengthCm', 'PetalWidthCm']]\ny_test_p = test_p.Species\n\n\ntrain_s, test_s = train_test_split(sepals, test_size=0.3, random_state=0)\nX_train_s = train_s[['SepalLengthCm', 'SepalWidthCm']]\ny_train_s = train_s.Species\nX_test_s = test_s[['SepalLengthCm', 'SepalWidthCm']]\ny_test_s = test_s.Species","d702b8a7":"model = svm.SVC().fit(X_train_p, y_train_p)\ny_pred = model.predict(X_test_p)\n\nmodel = svm.SVC().fit(X_train_s, y_train_s)\ny_pred2 = model.predict(X_test_s)\n\nprint(f'The accuracy of the svm model using petals is: {metrics.accuracy_score(y_pred, y_test_p)}')\nprint(f'The accuracy of the svm model using sepals is: {metrics.accuracy_score(y_pred2, y_test_s)}')","0bb73a47":"model = LogisticRegression().fit(X_train_p, y_train_p)\ny_pred = model.predict(X_test_p)\n\nmodel = LogisticRegression().fit(X_train_s, y_train_s)\ny_pred2 = model.predict(X_test_s)\n\nprint(f'The accuracy of Logistic Regression using petals is: {metrics.accuracy_score(y_pred, y_test_p)}')\nprint(f'The accuracy of Logistic Regression using sepals is: {metrics.accuracy_score(y_pred2, y_test_s)}')","30cbe138":"model = DecisionTreeClassifier().fit(X_train_p, y_train_p)\ny_pred = model.predict(X_test_p)\n\nmodel = DecisionTreeClassifier().fit(X_train_s, y_train_s)\ny_pred2 = model.predict(X_test_s)\n\nprint(f'The accuracy of the decision tree model using petals is: {metrics.accuracy_score(y_pred, y_test_p)}')\nprint(f'The accuracy of the decision tree model using sepals is: {metrics.accuracy_score(y_pred2, y_test_s)}')","dadee6ff":"model = KNeighborsClassifier(n_neighbors=10).fit(X_train_p, y_train_p)\ny_pred = model.predict(X_test_p)\n\nmodel = KNeighborsClassifier(n_neighbors=10).fit(X_train_s, y_train_s)\ny_pred2 = model.predict(X_test_s)\n\nprint(f'The accuracy of the KNN model using petals is: {metrics.accuracy_score(y_pred, y_test_p)}')\nprint(f'The accuracy of the KNN model using sepals is: {metrics.accuracy_score(y_pred2, y_test_s)}')","901a7582":"### Importing the relevant libraries for machine learning (predictive analysis)","1fe18d1f":"#### .describe() shows you statistical information about the dataset","19b746f3":"### Final observations:\n\n### - Using Petals for training the data is better than using sepals. They generate a higher accuracy score\n\n#### The highest accuracy score generated is 98%","0f678075":"#### .info() shows the number of non null data (non-missing data) which is none, and the type of data held in the columns","74a1debf":"### Reading the dataset into a pandas dataframe\n\n#### calling .head() to show the first 5 rows","833ba4cd":"#### Making a plot that shows all the data on one axis. This shows the data for the 3 different types of species in one picture.\n\n#### It is important to note the 'ax = fig' for the virginica and versicolor species. This is what allows all the data to be on the same axis and figure","efa3161a":"### The K Neighbours classifier performed the best with this dataset","91bad46e":"### Using a histogram to show the varying amount of Sepal and Petal Length and Width depending on size","cbe73be7":"### SVM Modelling\n\n#### You first need to call the model, then fit the train sets to the model using '.fit()'\n#### After that you can then get the prediction using 'y_pred'\n\n#### When you run the accuracy score, you are using the 'prediction' against the 'actual' from the test set. Remember the test set is completely new to the model as the model was trained on the train set.","a8d90051":"### Importing the libraries needed","364c7e07":"### Using seaborn to show the correlation heatmap","37de3cc9":"### Petal Length vs Petal Width - Using a scatter plot","4fbc952f":"### Sepal Length vs Sepal Width - Using a scatterplot","1b7aa5d6":"#### The y axis has the target variable (The variable we are trying to predict) which in this case is the species","22d90306":"#### The rest is repetitive as the same format is used","333571a8":"### This shows a graph of the number of neighbours in which the K Neighbour Classifier performs the best","2b5df214":"### You can then test the accuracy between just the Petals and Sepals separately. \n#### They are split into their own datasets and then using thr train_test_split method, split into train and test sets\n\n#### As you can see 'X_train_p' is the training set for petals and 'X_train_s' is the training set for sepals","152d2750":"#### using .isnull() shows you a boolean list all the values in the dataset that are null ('True' or 'False')\n\n#### Adding .sum() shows you a sum instead. \n\n#### The dataset has no missing values","3f5c7229":"#### .value_counts() shows the different information within the dataset","37ccebd0":"#### Using .drop() we can drop columns or rows in a dataset.\n\n#### x=1 shows that we want it to be a column. If we wanted to drop a row, it would be x=0\n\n#### inplace=True means we want the change to be permanent within the dataset","a54d5f86":"#### Fitting the model is the same as before, however, for each model, it will be fitted for both the petal dataset and sepa dataset","4f3cd503":"### Splitting the data into a Train set and Test set\n\n#### The train set is what the model is trained on.\n#### We then use the test set to see if our predictions are correct"}}