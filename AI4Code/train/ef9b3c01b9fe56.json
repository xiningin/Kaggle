{"cell_type":{"453cb307":"code","ecc35178":"code","255d4598":"code","36387646":"code","6fa6abf4":"code","d02ab1e6":"code","50a71220":"code","85eb77cf":"code","a6cfe902":"code","00570f9f":"code","932ad24e":"code","00fad3cc":"code","65cc1291":"code","eecab883":"code","ec95ddce":"code","92cd0b50":"code","638e10fd":"code","cf7a8186":"code","f05601be":"code","741bc0cc":"code","f5716e11":"code","751522a0":"code","502a7df2":"code","43eb4636":"code","8f66a74d":"code","0667f389":"code","a97eaf93":"code","741a1516":"code","730aebd3":"code","84759a41":"code","a649c6a0":"code","4cc26019":"code","54ee7019":"code","2de80564":"code","6a3a0fe3":"code","8465b96a":"code","2cb9df41":"code","c44ca22d":"code","9140d15a":"code","f60a7f0d":"code","50646833":"code","87f92a74":"code","2afa02e5":"code","775e3a3b":"code","4cf5d6ec":"code","3e8b6767":"code","3a24168d":"code","a7c364a2":"code","99f9e199":"code","ab8d690a":"code","7205a706":"code","0c20d4fb":"code","13459ea6":"code","b947bcb3":"code","f5facc26":"markdown","e6458337":"markdown","707021bf":"markdown"},"source":{"453cb307":"import numpy as np\nimport pandas as pd\n# For Visualization of data we would import\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#For preprocessing like scaling,encoding we would import\nimport sklearn\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import LabelEncoder\n#for model selection we import\nimport sklearn.model_selection \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\n#For measuring the performance of the model we will import\nfrom sklearn.metrics import confusion_matrix,accuracy_score,classification_report\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import roc_auc_score\n#Ensembleling\nfrom sklearn.ensemble import RandomForestClassifier\n#For saving the file we would import\nimport pickle\n","ecc35178":"#Now that we have imported all the necessary files lets start with our EDA process","255d4598":"df=pd.read_csv('\/kaggle\/input\/skyservercsv\/skyserver.csv')\ndf.head()","36387646":"#OUr target variable is Class","6fa6abf4":"df.info()","d02ab1e6":"#There is one object type data ie class we would be treating the same going a head","50a71220":"df.describe()","85eb77cf":"df.dtypes #Checking for the various datatypes that exist in the dataset","a6cfe902":"#Now lets check and analyse the dataset in depth\ndf['objid'].unique()","00570f9f":"df['run'].unique()","932ad24e":"df['rerun'].unique()","00fad3cc":"df['specobjid'].unique()","65cc1291":"#lets check the unique values in the loops\nfor i in df.keys():\n    print('Column Name: ',i)\n    print(df[i].unique())","eecab883":"#As the columns objid and rerun has only one unique values dropping them would not affect the data\ndf.drop(['objid','rerun'],axis=1,inplace=True)","ec95ddce":"df.head()","92cd0b50":"df.shape","638e10fd":"#Now we have 10000 rows and 16 columns","cf7a8186":"df.isnull()","f05601be":"df.isnull().sum()","741bc0cc":"sns.heatmap(df.isnull())#From this we can understand that there are no missing values in the data set","f5716e11":"#Now lets visualize how many stars, galaxy and quarsar exists in the dataset\nsns.countplot(df['class'])","751522a0":"df['class'].value_counts()","502a7df2":"#From this we can understand that there are 4998 Galaxy, 4152 Stars and 850 Quarsar in our dataset","43eb4636":"#Now lets find the correlation between different columns of the dataset\ndf.corr()","8f66a74d":"#Now lets plot the correlation using heatmap to understand the correlation using visualization\nplt.figure(figsize=(16,10))\nsns.heatmap(df.corr(),annot=True)","0667f389":"#Here we can see that class column correlation is not plotted in the heatmap as it is of type object now lets encode the class type into decimal type to establish the correlation","a97eaf93":"le=LabelEncoder()\ndf['class']=le.fit_transform(df['class'])","741a1516":"df['class'].unique()","730aebd3":"#Now we have converted our categorical column to numerical format now lets again plot and check what happens\nplt.figure(figsize=(16,10))\nsns.heatmap(df.corr(),annot=True)","84759a41":"#Now lets check for outliers\ndf.plot(kind='box',subplots=True,layout=(4,4))","a649c6a0":"plt.figure(figsize=(10,9))\nplt.title(\"Different Celestical bodies\")\nsns.distplot(df['class'])","4cc26019":"sns.pairplot(df)","54ee7019":"#Lets check for skewness in the dataset\ndf.skew()","2de80564":"#Now lets treat the outliers and remove the skewness in the data\nimport scipy.stats\nfrom scipy.stats import zscore\nz=np.abs(zscore(df))\nz","6a3a0fe3":"threshold=3\nprint(np.where(z>3))","8465b96a":"#Now lets remove the outliers\ndf_new=df[(z<3).all(axis=1)]\ndf_new","2cb9df41":"df.shape","c44ca22d":"df_new.shape","9140d15a":"y1=df_new.iloc[:,11:12]#setting output for new data after removing outliers\ny2=df.iloc[:,11:12]#setting output for original data\n#we would be analyzing both the data ie after outlier removal and before removal\nx1=df_new.drop(['class'],axis=1)\nx2=df.drop(['class'],axis=1)","f60a7f0d":"x1.shape","50646833":"y1.shape","87f92a74":"x2.shape","2afa02e5":"y2.shape","775e3a3b":"scale=StandardScaler()\nx1=scale.fit_transform(x1)","4cf5d6ec":"x2=scale.fit_transform(x2)","3e8b6767":"x_train,x_test,y_train,y_test=train_test_split(x1,y1,test_size=.33,random_state=42)","3a24168d":"x_train.shape","a7c364a2":"y_train.shape","99f9e199":"x_test.shape","ab8d690a":"y_test.shape","7205a706":"model=[GaussianNB(),DecisionTreeClassifier(),SVC(),KNeighborsClassifier(),RandomForestClassifier()]\nfor m in model:\n    m.fit(x_train,y_train)\n    m.score(x_train,y_train)\n    predm=m.predict(x_test)\n    print('Accuracy Score of',m,'is:')\n    print(accuracy_score(y_test,predm))\n    print(confusion_matrix(y_test,predm))\n    print(classification_report(y_test,predm))","0c20d4fb":"rf=RandomForestClassifier()\nrf.fit(x_train,y_train)\nrf.score(x_train,y_train)\npred=rf.predict(x_test)\nprint('Accuracy Score for Random Forest is')\nprint(accuracy_score(y_test,pred))\nprint(confusion_matrix(y_test,pred))\nprint(classification_report(y_test,pred))","13459ea6":"#From The above model scores we come to the conclusion that Random forest classifier has the highest accuracy now we would save our best model","b947bcb3":"filename='picklespacerf.pkl'\npickle.dump(rf,open(filename,'wb'))","f5facc26":"Importing the necessary library files","e6458337":"# To analyse the Space survey dataset and according to the data classify the same in 3 different class stars, galaxy,quasar","707021bf":"Observations:\n1) The columns objid and rerun are of no specific use to us so we can drop them\n2) For few of the columns the standard deviation is quite high so we have to check for the presence of outlier\n3) Also for the few of the columns their is quite difference between the mean and the median so presence of outlier can be confirmed from the same"}}