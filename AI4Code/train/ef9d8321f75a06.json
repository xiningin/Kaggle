{"cell_type":{"aaa37124":"code","6205e7b5":"code","113bf740":"code","488b9e8a":"code","401f55a3":"code","0fd2b655":"code","96d0a47b":"code","d4edfc8b":"code","05ef8046":"code","7b4892a9":"code","7b6a951c":"code","01f72b07":"code","581a1bab":"code","f3234e68":"code","2951e601":"code","74456b4e":"code","3c9df112":"code","187d416e":"markdown","3b9aac8f":"markdown"},"source":{"aaa37124":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6205e7b5":"import shutil\nimport os\ndef copyfilesandfolders(source,destination):\n    dest = shutil.copytree(source, destination) \n    print('Copy Completed')","113bf740":"source = '\/kaggle\/input\/100-bollywood-celebrity-faces\/bollywood_celeb_faces_0\/'\ndestination = '\/kaggle\/working\/Train\/'\ncopyfilesandfolders(source,destination)","488b9e8a":"source = '\/kaggle\/input\/100-bollywood-celebrity-faces\/bollywood_celeb_faces_1\/'\ndestination = '\/kaggle\/working\/Train2\/'\ncopyfilesandfolders(source,destination)","401f55a3":"source = '\/kaggle\/input\/100-bollywood-celebrity-faces\/bollywood_celeb_faces2\/'\ndestination = '\/kaggle\/working\/Train3\/'\ncopyfilesandfolders(source,destination)","0fd2b655":"len(os.listdir('\/kaggle\/working\/Train\/'))","96d0a47b":"len(os.listdir('\/kaggle\/working\/Train2\/'))","d4edfc8b":"len(os.listdir('\/kaggle\/working\/Train3\/'))","05ef8046":"def mergefolders(root_src_dir, root_dst_dir):\n    for src_dir, dirs, files in os.walk(root_src_dir):\n        dst_dir = src_dir.replace(root_src_dir, root_dst_dir, 1)\n        if not os.path.exists(dst_dir):\n            os.makedirs(dst_dir)\n        for file_ in files:\n            src_file = os.path.join(src_dir, file_)\n            dst_file = os.path.join(dst_dir, file_)\n            if os.path.exists(dst_file):\n                os.remove(dst_file)\n            shutil.copy(src_file, dst_dir)\n    print('Merge Completed Successfully!!')","7b4892a9":"path1='\/kaggle\/working\/Train\/'\npath2='\/kaggle\/working\/Train2\/'\npath3='\/kaggle\/working\/Train3\/'","7b6a951c":"merged_path = '\/kaggle\/working\/Train\/'\nmergefolders(path2,merged_path)","01f72b07":"merged_path = '\/kaggle\/working\/Train\/'\nmergefolders(path3,merged_path)","581a1bab":"allfiles = os.listdir('\/kaggle\/working\/Train\/')","f3234e68":"print(len(allfiles))","2951e601":"import shutil\nimport os\nimport numpy as np\nimport argparse\n\ndef get_files_from_folder(path):\n\n    files = os.listdir(path)\n    return np.asarray(files)\n\ndef mymethod(path_to_data, path_to_test_data, train_ratio):\n    # get dirs\n    _, dirs, _ = next(os.walk(path_to_data))    \n\n    # calculates how many train data per class\n    data_counter_per_class = np.zeros((len(dirs)))\n    for i in range(len(dirs)):\n        path = os.path.join(path_to_data, dirs[i])\n        files = get_files_from_folder(path)\n        data_counter_per_class[i] = len(files)\n    test_counter = np.round(data_counter_per_class * (1 - train_ratio))\n\n    # transfers files\n    for i in range(len(dirs)):\n        path_to_original = os.path.join(path_to_data, dirs[i])\n        path_to_save = os.path.join(path_to_test_data, dirs[i])\n\n        #creates dir\n        if not os.path.exists(path_to_save):\n            os.makedirs(path_to_save)\n        files = get_files_from_folder(path_to_original)\n        # moves data\n        for j in range(int(test_counter[i])):\n            dst = os.path.join(path_to_save, files[j])\n            src = os.path.join(path_to_original, files[j])\n            shutil.move(src, dst)\n\n\n\nif __name__ == \"__main__\":\n  mymethod(r\"\/kaggle\/working\/Train\/\",r\"\/kaggle\/working\/Test\/\", 0.7)","74456b4e":"allfiles = os.listdir('\/kaggle\/working\/Test\/')","3c9df112":"print(allfiles)","187d416e":"**Method to copy File from one directory to another**","3b9aac8f":"**Now Merge All 3 folders**"}}