{"cell_type":{"a0faacc7":"code","087b566d":"code","4bb610d9":"code","d7142090":"code","21d11cb2":"code","2684dfb9":"code","b3ca706d":"code","6addbd9e":"code","99b7817e":"markdown","8115de9b":"markdown"},"source":{"a0faacc7":"import matplotlib\nimport numpy as np\nimport pandas as pd\nimport os\nimport sklearn\nfrom sklearn import metrics\nfrom sklearn.preprocessing import StandardScaler \nfrom pandas import DataFrame\nfrom pandas import concat\nfrom pandas import read_csv\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns","087b566d":"# Breast Cancer dataset\n# Citation: Dr. William H. Wolberg, University of Wisconsin Hospitals, Madison \n# https:\/\/archive.ics.uci.edu\/ml\/datasets\/Breast+Cancer+Wisconsin+(Original)\n\n# Read the dataset (Note that the CSV provided for this demo has rows with the missing data removed)\ndf =  pd.read_csv('..\/input\/breastcancer.csv', header=0)\n\n# Take a look at the structure of the file\ndf.head(n=10)","4bb610d9":"# Drop Id column not used in analysis\ndf.drop(['Id'], 1, inplace=True)\n\n# Label encoding Target variable\nencoder = LabelEncoder()\ndf['Class'] = encoder.fit_transform(df['Class'])","d7142090":"# Check the result of the transform\ndf.head(n=6)","21d11cb2":"X = np.array(df.drop(['Class'], axis=1))\ny = np.array(df['Class'])\n\n# Scale the data. We will use the same scaler later for scoring function\nscaler = StandardScaler().fit(X)\nX = scaler.transform(X)","2684dfb9":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","b3ca706d":"# Fitting Logistic Regression to the Training set\nfrom sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression(random_state = 0)\nclassifier.fit(X_train, y_train)","6addbd9e":"print('Train Score:',classifier.score(X_train,y_train))\nprint('Test Scxore:',classifier.score(X_test,y_test))","99b7817e":"#### Logistic Regression ","8115de9b":"# 1- Import Libraries"}}