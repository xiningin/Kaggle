{"cell_type":{"56ffb7aa":"code","72bc5506":"code","0a33e155":"code","8353e27f":"code","239b8149":"code","cc308474":"code","c3a1c313":"code","8b988ea3":"code","f017374c":"code","f0b5b067":"code","d869c7b9":"code","d394f6cd":"code","59aa086b":"code","96f10843":"code","34a0e2d2":"code","bbe07e56":"code","55c7833a":"code","6d43fe5b":"code","0483924f":"code","fae51f74":"code","d5222623":"code","a629bd2c":"code","82a39039":"code","12ae603d":"code","6804c337":"code","bc1e1d97":"markdown","2d6031ce":"markdown","23ff1d78":"markdown","aeb40409":"markdown","676f1961":"markdown","a749d286":"markdown","ff8cc7b7":"markdown","106af1ca":"markdown","20ed6470":"markdown","0960900f":"markdown","081dc5a9":"markdown"},"source":{"56ffb7aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport plotly.graph_objs as go\n\nimport plotly as py\nfrom plotly import tools\nfrom plotly.offline import iplot\nfrom plotly.subplots import make_subplots\nimport datetime as dtt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","72bc5506":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport datetime as d\nimport seaborn as sns","0a33e155":"dt=pd.read_csv(r'..\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 5.csv',parse_dates=['Order Date & Time'])\nprint(\"Data Dimensions are: \", dt.shape)\nprint(\"Columns: \", dt.columns)","8353e27f":"print(dt.info())","239b8149":"dt.rename(columns = {'Order Number':'order_number','Order Status':'order_status','Book Name':'book_name','City':'city','Order Date & Time':'order_date_time','Payment Method':'payment_method','Total items':'total_items','Total weight (grams)':'total_weight_grams'}, inplace = True)\ndt.columns","cc308474":"dt['order_status']=dt['order_status'].astype(str)\ndt['book_name']=dt['book_name'].astype(str)\ndt['city']=dt['city'].astype(str)\ndt['payment_method']=dt['payment_method'].astype(str)","c3a1c313":"dt['payment_method'].replace({'Cash on Delivery (COD)':'Cash on delivery'}, inplace=True)\ndt['payment_method'] = dt['payment_method'].fillna('Cash on delivery')","8b988ea3":"dt['date'] = dt['order_date_time'].dt.date\ndt['month_Year'] = pd.to_datetime(dt['order_date_time']).dt.to_period('M')\ndt['time'] = dt['order_date_time'].dt.strftime('%H:%M')","f017374c":"db = (dt.set_index(['order_number', 'order_status','order_date_time', 'city',\n       'payment_method', 'total_items', 'total_weight_grams','date','month_Year','time'])\n    .apply(lambda x: x.str.split('\/').explode())\n    .reset_index())","f0b5b067":"db=db[['order_number', 'book_name','order_status','date','month_Year','time','city','payment_method', 'total_items', 'total_weight_grams','order_date_time']]","d869c7b9":"db.drop(['order_date_time'],axis=1)","d394f6cd":"db.describe(include=['object'])","59aa086b":"db=db.sort_values('date')","96f10843":"dts = db.groupby('date')['order_number'].count().reset_index() ","34a0e2d2":"fig1 = go.Figure()\n\n# Add traces\nfig1.add_trace(go.Scatter(x=dts['date'], y=dts['order_number'],\n                    mode='lines+markers',\n                    name='sales trend'))\nfig1.show()","bbe07e56":"df=db[db['book_name'].str.contains(r'(?!$)Free(?!$)')]\ndf['book_name'].value_counts()","55c7833a":"dnfree = db[~db.book_name.isin(['Lucky Draw - Free Book'])]\ndnfree = dnfree.groupby('date')['order_number'].count().reset_index()","6d43fe5b":"fig = go.Figure()\n# Add traces\nfig.add_trace(go.Scatter(x=dts['date'], y=dts['order_number'],\n                    mode='lines+markers',\n                    name='Sales with Free books'))\nfig.add_trace(go.Scatter(x=dnfree['date'], y=dnfree['order_number'],\n                    mode='lines+markers',\n                    name='Sales without Free books'))\nfig.show()","0483924f":"fig = px.scatter(dts, x= 'date', y = 'order_number', trendline = \"ols\")\nfig.show()\nresults = px.get_trendline_results(fig)\nresults","fae51f74":"table = pd.pivot_table(db,index=['order_status'],aggfunc={'order_number':np.count_nonzero})\ntable\ntable.plot(kind='bar')","d5222623":"db['book_name'].value_counts()[:35]","a629bd2c":"#Removing duplications\ndb['book_name'].replace({'Python Programming- Release Date: August 14, 2020':'Python Programming'}, inplace=True)\ndb['book_name'].replace({'\u0688\u06cc\u0679\u0627 \u0633\u0627\u0626\u0646\u0633':'Data Science'}, inplace=True)\ndb['book_name'].replace({'\u0688\u06cc\u0679\u0627 \u0633\u0627\u0626\u0646\u0633 \u06d4 \u0627\u06cc\u06a9 \u062a\u0639\u0627\u0631\u0641':'Data Science'}, inplace=True)","82a39039":"topbooks=db['book_name'].value_counts()[:10].index.tolist()\ntopbooks","12ae603d":"df_dict = {}\nfor n in topbooks:\n    df_dict[n] = db[db.book_name.isin([n])]\n    df_dict[n] = df_dict[n].groupby('date')['book_name'].count().reset_index()","6804c337":"fig = go.Figure()\n\nfig = make_subplots(rows=10, cols=1)\n\ntr_dict = {}\nfor n in topbooks:\n    tr_dict[n] = go.Scatter(x=df_dict[n]['date'], y=df_dict[n]['book_name'],mode='lines+markers',name=n)\ni=0\nj=1\nwhile i< len(topbooks):\n    fig.append_trace(tr_dict[topbooks[i]], row=j, col=1)\n    i+=1\n    j+=1\nfig.update_layout(height=1000, width=800, title_text=\"Sales Trend-Top Ten Books\")\nfig.show()","bc1e1d97":"Now check summery of non numeric data","2d6031ce":"Sales trend of top ten books.","23ff1d78":"The dataset contains total 19239 records with some null values in columns Book Name, City and Payment Method. We now rename columns by removing spaces for simplicity in code manipulation.","aeb40409":"Now we perform data type casting.","676f1961":"Query top 35 books to check duplicate\/typos","a749d286":"Splitting orders having mutiple books.","ff8cc7b7":"Simple linear regression on sales data.","106af1ca":"Sales comparison with and without free books.","20ed6470":"Quantity of free books included in sales  data","0960900f":"Top ten books","081dc5a9":"Check number of orders by date"}}