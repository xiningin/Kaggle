{"cell_type":{"02f1302e":"code","08f1edcd":"code","9b11edeb":"code","66ae8495":"code","8297a966":"code","0fd5103d":"code","3be58052":"code","c791839e":"code","8febb4af":"code","cb229ff5":"code","eae910eb":"code","1d00203f":"code","6e83c4b0":"code","02447e75":"code","9fda0ea6":"code","f4e67276":"code","932828ac":"code","1a960ff6":"code","fbebe4f3":"code","b925711f":"code","27bb4478":"code","13454fcc":"code","668559f4":"code","d799e11d":"code","02980930":"code","34ec3885":"code","40f43972":"code","1a103db8":"code","29ca2c07":"code","4dd4d659":"code","00f30fd5":"code","2f2345a4":"code","7d1932c2":"code","8543784c":"code","e97c656e":"code","55cb82f0":"code","b2e70124":"code","149362c8":"code","7684375a":"code","781b7786":"code","46bab145":"code","0320511b":"markdown","15c983d8":"markdown","e3d208fe":"markdown","81b0d2d6":"markdown","5c12bf1d":"markdown","b0a4ec32":"markdown","a1aaa1ad":"markdown","f147b670":"markdown","db1790d9":"markdown","aa66ec97":"markdown","1d459f70":"markdown","fe4fd38f":"markdown","c681a40e":"markdown","38c5ed46":"markdown","4a2c63c6":"markdown","ae7653c7":"markdown"},"source":{"02f1302e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","08f1edcd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","9b11edeb":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain.head()","66ae8495":"test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest.head()","8297a966":"train.info()","0fd5103d":"train.isnull()\n#if not null-> false\n#if null-> true","3be58052":"plt.figure(figsize=(10,7))\nsns.heatmap(train.isnull())","c791839e":"sns.countplot(x='Survived',data=train)","8febb4af":"sns.countplot(x='Survived',data=train,hue='Sex')","cb229ff5":"sns.countplot(x='Survived',data=train,hue='Pclass')","eae910eb":"sns.displot(train['Age'].dropna(),bins=30)\n#dropna()-> to remove missing values\n# ALT train['Age'].plot.hist()\n","1d00203f":"plt.figure(figsize=(10,7))\nsns.heatmap(train.isnull())","6e83c4b0":"sns.boxplot(x='Pclass',y='Age',data=train)","02447e75":"def new_age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass==1:\n            return 37\n        elif Pclass==2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age\n#avg value is written by analyzing the box plot average","9fda0ea6":"plt.figure(figsize=(10,7))\nsns.heatmap(train.isnull())","f4e67276":"train['Age']=train[['Age','Pclass']].apply(new_age,axis=1)","932828ac":"sns.heatmap(train.isnull())","1a960ff6":"train.drop(\"Cabin\",axis=1,inplace=True)","fbebe4f3":"sns.heatmap(train.isnull())","b925711f":"train.info()","27bb4478":"train.head()","13454fcc":"sex=pd.get_dummies(train['Sex'],drop_first=True)\nembark = pd.get_dummies(train['Embarked'],drop_first=True)","668559f4":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","d799e11d":"train = pd.concat([train,sex,embark],axis=1)\ntrain.head()","02980930":"sex.head()","34ec3885":"embark.head()","40f43972":"from sklearn.model_selection import train_test_split","1a103db8":"train.info()","29ca2c07":"train.columns","4dd4d659":"X=train[['Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'male', 'Q',\n       'S']]\ny=train['Survived']","00f30fd5":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.50, \n                                                    random_state=101)","2f2345a4":"from sklearn.linear_model import LogisticRegression","7d1932c2":"LR=LogisticRegression(max_iter=1000)\n","8543784c":"LR.fit(X_train, y_train)","e97c656e":"predictions = LR.predict(X_test).astype(int)\nPrediction = pd.DataFrame({'Survived': predictions})\nPrediction.shape","55cb82f0":"from sklearn.metrics import classification_report","b2e70124":"print(classification_report(y_test,predictions))","149362c8":"from sklearn.metrics import plot_confusion_matrix\nplot_confusion_matrix(LR, X_test, y_test)","7684375a":"from sklearn.metrics import accuracy_score\nprint(f' Accuracy of our model is=> {accuracy_score(y_test, predictions)}')","781b7786":"#Prediction = pd.DataFrame({'Survived': predictions})\n#Prediction.head()\n#lr_preds = LR.predict(X_test).astype(int)","46bab145":"output = pd.DataFrame({'PassengerId': train.PassengerId, 'Survived': Prediction[\"Survived\"]})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","0320511b":"Analyzing the **missing values**","15c983d8":"**DATA IS CLEANED NOW!!**","e3d208fe":"Looking out for null values","81b0d2d6":"avg. age values can be used to fill up the emtpy boxes\n\n","5c12bf1d":"**OUr data is ready for our model**","b0a4ec32":"\nCount of who survived, and who didnt. for classification problem, its better to see the ratio of the actual target label\n\n","a1aaa1ad":"# DONE!!","f147b670":"## Converting Categorical Features \n\nWe'll need to convert categorical features to dummy variables using pandas! Otherwise our machine learning algorithm won't be able to directly take in those features as inputs.","db1790d9":"# Train Test Split","aa66ec97":"We can check precision,recall,f1-score using classification report!","1d459f70":"# Evaluation","fe4fd38f":"We can directly drop off the cabin column, since its just useless","c681a40e":"Filling in the missing age data inplace of just dropping it off","38c5ed46":"In the above heatmap we can makeout that the white color signifies all the missing values!","4a2c63c6":"Importing all the imporatant libraries","ae7653c7":"# Training and Prediction"}}