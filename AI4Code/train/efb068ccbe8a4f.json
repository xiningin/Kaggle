{"cell_type":{"7b3709b2":"code","46f122e6":"code","b3c614bc":"code","4a8dc01a":"code","43945cd2":"code","9455f8de":"code","3e644964":"code","efb4b0dd":"code","80cbf37f":"markdown","a8e46993":"markdown","9d19ca4d":"markdown","91ea0695":"markdown","627a0ca1":"markdown","15f0a5bb":"markdown","2524e40d":"markdown","42eba6e1":"markdown","2dfca60d":"markdown","e0b005d7":"markdown"},"source":{"7b3709b2":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\n\nstyle.use(\"fivethirtyeight\")","46f122e6":"edu = pd.read_csv(\"..\/input\/us-education-datasets-unification-project\/states_all.csv\")\nedu.head()","b3c614bc":"edu[\"YEAR\"].max()","4a8dc01a":"edu_10yr = edu[edu[\"YEAR\"].isin([2009,2019])]\nedu_10yr","43945cd2":"edu_10yr[edu_10yr[\"YEAR\"]==2019].isnull().sum()","9455f8de":"r_states = [\n    \"OKLAHOMA\",\n    \"IDAHO\",\n    \"WYOMING\",\n    \"NORTH_DAKOTA\",\n    \"ARKANSAS\"\n]\n\nd_states = [\n    \"DISTRICT_OF_COLUMBIA\",\n    \"MASSACHUSETTS\",\n    \"VERMONT\",\n    \"CALIFORNIA\",\n    \"RHODE_ISLAND\"    \n]\n\nis_red = edu_10yr[\"STATE\"].isin(r_states)\nis_blue = edu_10yr[\"STATE\"].isin(d_states)\n\nsubset = edu_10yr[is_red | is_blue] # subset of both red and blue for later use\nred_states = edu_10yr[is_red]\nblue_states = edu_10yr[is_blue]\n\nprint(red_states[\"STATE\"].unique())\nprint(blue_states[\"STATE\"].unique())","3e644964":"colors = {\n    \"republican\": \"#d1352a\",\n    \"democrat\": \"#253db8\"\n}\n\nfig, ax = plt.subplots(figsize = (15,7))\n\n# 2009 red states\nred_plot_2009 = plt.scatter(\n    x = red_states.loc[red_states[\"YEAR\"]==2009, \"STATE\"],\n    y = red_states.loc[red_states[\"YEAR\"]==2009, \"AVG_MATH_8_SCORE\"],\n    c = colors[\"republican\"],\n    s = 1000,\n    alpha = 0.5,\n    linewidth = 2\n)\n\n# 2019 red states\nred_plot_2019 = plt.scatter(\n    x = red_states.loc[red_states[\"YEAR\"]==2019, \"STATE\"],\n    y = red_states.loc[red_states[\"YEAR\"]==2019, \"AVG_MATH_8_SCORE\"],\n    c = colors[\"republican\"],\n    s = 1000,\n    alpha = 1,\n    linewidth = 0\n)\n\n# 2009 blue states\nblue_plot_2009 = plt.scatter(\n    x = blue_states.loc[blue_states[\"YEAR\"]==2009, \"STATE\"],\n    y = blue_states.loc[blue_states[\"YEAR\"]==2009, \"AVG_MATH_8_SCORE\"],\n    c = colors[\"democrat\"],\n    s = 1000,\n    alpha = 0.5,\n    linewidth = 2\n)\n\n# 2019 blue states\nblue_plot_2009 = plt.scatter(\n    x = blue_states.loc[blue_states[\"YEAR\"]==2019, \"STATE\"],\n    y = blue_states.loc[blue_states[\"YEAR\"]==2019, \"AVG_MATH_8_SCORE\"],\n    c = colors[\"democrat\"],\n    s = 1000,\n    alpha = 1,\n    linewidth = 0\n)\n\nplt.savefig(\"before.png\") # for twitter @MitchsWorkshop\nplt.show()","efb4b0dd":"colors = {\n    \"republican\": \"#d1352a\",\n    \"democrat\": \"#253db8\"\n}\n\nfig, ax = plt.subplots(figsize = (15,7))\n\n# 2009 red states\nplt.scatter(\n    x = red_states.loc[red_states[\"YEAR\"]==2009, \"STATE\"],\n    y = red_states.loc[red_states[\"YEAR\"]==2009, \"AVG_MATH_8_SCORE\"],\n    c = colors[\"republican\"],\n    s = 1000,\n    alpha = 0.5,\n    linewidth = 2\n)\n\n# 2019 red states\nplt.scatter(\n    x = red_states.loc[red_states[\"YEAR\"]==2019, \"STATE\"],\n    y = red_states.loc[red_states[\"YEAR\"]==2019, \"AVG_MATH_8_SCORE\"],\n    c = colors[\"republican\"],\n    s = 1000,\n    alpha = 1,\n    linewidth = 0\n)\n\n# 2009 blue states\nplt.scatter(\n    x = blue_states.loc[blue_states[\"YEAR\"]==2009, \"STATE\"],\n    y = blue_states.loc[blue_states[\"YEAR\"]==2009, \"AVG_MATH_8_SCORE\"],\n    c = colors[\"democrat\"],\n    s = 1000,\n    alpha = 0.5,\n    linewidth = 2\n)\n\n# 2019 blue states\nplt.scatter(\n    x = blue_states.loc[blue_states[\"YEAR\"]==2019, \"STATE\"],\n    y = blue_states.loc[blue_states[\"YEAR\"]==2019, \"AVG_MATH_8_SCORE\"],\n    c = colors[\"democrat\"],\n    s = 1000,\n    alpha = 1,\n    linewidth = 0\n)\n\n\n### CHANGES TO DEFAULT PLOT ###\n\n# set new y limit\nplt.ylim((247, 305))\n\n# bold x axis\nplt.axhline(\n    250, \n    linewidth = 3,\n    color = \"black\",\n    alpha = 0.5\n)\n\n# split plot by party\nplt.axvline(\n    4.5,\n    linewidth = 2,\n    color = \"black\",\n    alpha = 0.5\n)\n\n# label sides of vline\n# republican\nplt.text(\n    x = 3.4,\n    y = 302,\n    s = \"Republican\",\n    color = colors[\"republican\"],\n    fontweight = \"bold\",\n    fontsize = 14,\n    alpha = 0.9\n)\n\n# democrat\nplt.text(\n    x = 4.7,\n    y = 302,\n    s = \"Democrat\",\n    color = colors[\"democrat\"],\n    fontweight = \"bold\",\n    fontsize = 14,\n    alpha = 0.9\n)\n\n# change xtick labels\ncustom_labels = [\n    \"Arkansas\", \n    \"Idaho\", \n    \"N. Dakota\", \n    \"Oklahoma\", \n    \"Wyoming\", \n    \"California\", \n    \"D.C.\", \n    \"Massachusetts\", \n    \"R. Island\", \n    \"Vermont\"\n]\nax.set_xticklabels(custom_labels)\n\n# label different opacities on both sides of plot\n# republican 2009\nplt.text(\n    x = 0.22,\n    y = 277.5,\n    s = \"2009\",\n    color = colors[\"republican\"],\n    alpha = 0.5,\n    fontweight = \"bold\",\n    fontsize = 16\n)\n\n# republican 2019\nplt.text(\n    x = 0.22,\n    y = 271.5,\n    s = \"2019\",\n    color = colors[\"republican\"],\n    alpha = 1,\n    fontweight = \"bold\",\n    fontsize = 16\n)\n\n# democrat 2009\nplt.text(\n    x = 5.22,\n    y = 271,\n    s = \"2009\",\n    color = colors[\"democrat\"],\n    alpha = 0.5,\n    fontweight = \"bold\",\n    fontsize = 16\n)\n\n# democrat 2019\nplt.text(\n    x = 5.22,\n    y = 277,\n    s = \"2019\",\n    color = colors[\"democrat\"],\n    alpha = 1,\n    fontweight = \"bold\",\n    fontsize = 16\n)\n\n### DRAW BARS BETWEEN CIRCLES ###\n\"\"\"\nThis loop checks to see if there is a wide enough gap to draw a line between, then draws it.\nSetting the values was a matter of trial and error. If you change the dot size, these won't work.\nAnd that's fine! Just adjust accordingly.\n\nI originally hand-drew each of them and it took hours. I highly recommend automating this process.\nThis was the best way I could find to do so, but I am open to suggestions!\n\nNote: With qualitative data in matplotlib, the different values (in this case, states) are numbered\n0,1,2,... behind the scenes. So if we draw a point at (0,250), it will appear above Arkansas.\n\"\"\"\n\n# ordered list of states as they appear on the x axis\nstates = [\n    \"ARKANSAS\",\n    \"IDAHO\",\n    \"NORTH_DAKOTA\",\n    \"OKLAHOMA\",\n    \"WYOMING\",\n    \"CALIFORNIA\",\n    \"DISTRICT_OF_COLUMBIA\",\n    \"MASSACHUSETTS\",\n    \"RHODE_ISLAND\",\n    \"VERMONT\"\n]\n\n# i will be the numeric x-value on the plot\nfor i,state in enumerate(states):\n    # subset by state\n    st = subset[subset[\"STATE\"]==state]\n    \n    # get scores for both years\n    score_09 = st.loc[st[\"YEAR\"]==2009, \"AVG_MATH_8_SCORE\"].values[0]\n    score_19 = st.loc[st[\"YEAR\"]==2019, \"AVG_MATH_8_SCORE\"].values[0]\n    \n    # find max and min score out of the two given\n    big_score = max([score_09, score_19])\n    small_score = min([score_09, score_19])\n    \n    # if there is a large enough gap, draw a line\n    if big_score - small_score > 4.5: # 4.5 is the gap needed to have visible space between points\n        plt.plot(\n            [i,i], # x1, x2\n            [small_score+2, big_score-2], # y1, y2 allowing padding to accomodate the size of the data point\n            c = \"#636363\",\n            linewidth = 3,\n            alpha = 1\n        )\n\n# remove vertical grid (removing the grid first fixed some weird behavior)\nplt.grid(False)\nplt.grid(linewidth = 1.5, axis = \"y\", color = \"black\", alpha = 0.2)\n\n# add title text\nplt.text(\n    x = -0.5,\n    y = 312,\n    s = \"United States 8th Grade Standardized Math Scores 2009-2019\",\n    fontsize = 22,\n    fontweight = \"bold\"\n)\n\n# add subtitle text\nplt.text(\n    x = -0.5,\n    y = 308,\n    s = \"States shown had the widest party margin in the 2020 Presidential Election\",\n    fontsize = 17,\n    fontweight = \"regular\"\n)\n\n# signature bar (white space necessary for style)\nplt.text(\n    x = -0.8,\n    y = 237.8,\n    s = \"   twitch.tv\/MitchsWorkshop                            Source: U.S. Census Bureau, National Center for Education Statistics  \",\n    backgroundcolor = \"grey\",\n    c = \"white\",\n    fontsize = 17\n)\n\n# new background colors\nface_color = \"#d9d7d4\"\nax.set_facecolor(face_color)\nfig.set_facecolor(face_color)\n\n# remove spines\nfor s in [\"top\", \"left\", \"bottom\", \"right\"]:\n    ax.spines[s].set_visible(False)\n\nplt.savefig(\"after.png\", bbox_inches = \"tight\", facecolor = face_color) # for twitter @MitchsWorkshop\nplt.show()","80cbf37f":"### Import libraries and data","a8e46993":"### 2009-2019 it is. We only need those two years for our plot.","9d19ca4d":"# Default plot with FiveThirtyEight style\nThe plot looks fine by default, but we are going to make some nice changes later.","91ea0695":"# Custom Dumbbell Plot with Matplotlib\nThis notebook is purely an exercise in plot aesthetics. As such, not all states will be shown, but I will show the top 5 most Democratic and Republican states (by election margins of the 2020 presidential election) [according to Politico](https:\/\/www.politico.com\/2020-election\/results\/president\/).\n\nNOTE: I copy and paste the entire cell at every step for those among us that want to copy and paste to look over the entire product later. Forgive the long notebook. Of course, you could do this step by step and keep editing the same Axes object in different cells. Feel free to ask questions on [Twitter](https:\/\/twitter.com\/MitchsWorkshop) or in real-time on [Twitch](https:\/\/twitch.tv\/MitchsWorkshop)!","627a0ca1":"# Done!\n### And there we have it! Want more or have questions? Stop by [my Twitch channel](https:\/\/twitch.tv\/MitchsWorkshop) and ask me in real time!","15f0a5bb":"### Subsets complete! All the states are there. Let's start the plot.","2524e40d":"### I want the last 10 years of data, what's the most recent one?","42eba6e1":"# Making our changes:\n### We are going to make the following style changes, in order:\n\n- widen the y limit\n- bold the x axis\n- add a vertical line to split the plot by party affiliation\n- label both sides of the plot with text\n- change the x-tick labels\n- annotate the meaning of different opacities with text\n- draw the bars between circles with a `for` loop\n- remove the vertical grid lines and customize the horizontal ones\n- add a title\n- add a subtitle\n- add a signature bar\n- change background colors\n- remove spines\n- save the figure for future Tweeting (who doesn't love a good chart after all?)\n\nEach step is commented, with special focus on the loop that draws the bars. Feel free to ask questions!","2dfca60d":"### Looks like the personnel counts are missing, but the test scores are there. We can work with that. Let's subset by our most Republican and Democratic states.","e0b005d7":"### Looks like a lot of nulls in 2019, let's check"}}