{"cell_type":{"7945db1e":"code","1f24a1dc":"code","7a7dfef8":"code","d64c8ce9":"code","2100df65":"code","5a8b12a1":"code","94b98fb2":"code","85c7cd75":"code","81384e10":"code","9cd199ea":"code","b7390d19":"code","86eb7870":"code","6442bd65":"code","6e371850":"code","ff7809a5":"code","2badf412":"code","c95702d5":"code","13aa8408":"code","f3411910":"code","701b19f2":"code","80df96f0":"code","c6637083":"code","ee9c6cfb":"code","79efea9f":"code","ccd8d193":"code","12df50e8":"code","b25f1429":"code","232eb79d":"code","07e297d1":"code","aa1b109d":"code","5ae4865b":"code","ddac3b2f":"code","b37e2d93":"code","d12dda19":"code","c8dbe175":"code","c6348df8":"code","846a9c51":"code","5a3821bc":"code","3885888a":"code","7394cccd":"code","b734270e":"code","4d8a8db3":"code","047b9037":"code","6e11f718":"code","b0ac4404":"code","b4bcd91a":"code","15ca9b60":"code","1dc704ea":"code","6bf8973d":"code","5ae3a838":"code","9c847a36":"code","eaffb063":"code","a39a2340":"code","ec29bfa6":"code","592a6ec1":"code","1c8943d8":"code","c38d0c3c":"markdown","8adb2c13":"markdown","52196cc4":"markdown","01140103":"markdown","37674c4b":"markdown","2ca2dcb2":"markdown","131d446b":"markdown","bc20c6e8":"markdown","0da7fcc5":"markdown","811115a1":"markdown","7442b475":"markdown","3ee205e4":"markdown","85578cd5":"markdown","f9bdfa54":"markdown"},"source":{"7945db1e":"import pandas as pd \n  \n# initialize list of lists of external data\ndata1 = [['China', 'China CDC', 'ORF1ab and N'], ['Germany', 'Charit\u00e9', 'RdRP, E, N'], ['Hong Kong', 'SAR HKU', 'ORF1ab and N'],\n         ['Japan', 'National Institute of Infectious Diseases', 'Pancorona and multiple targets, Spike protein'], \n         ['Thailand', 'National Institute of Health', 'N'], ['US', 'CDC', 'Three targets in N gene'], \n         ['France', 'Institut Pasteur, Paris', 'Two targets in RdRP']] \n  \n# Create as a DataFrame \ndf = pd.DataFrame(data1, columns = ['Country', 'Institute', 'Gene target']) \n  \ndf \n","1f24a1dc":"#text mining\n\ndf1=pd.read_csv('..\/input\/CORD-19-research-challenge\/metadata.csv')\ndf1.head(3)","7a7dfef8":"journals= df1[['title', 'abstract', 'publish_time']]\njournals.head()","d64c8ce9":"import numpy as np\na=journals.dropna(how='all')    #drops rows with all NaN values","2100df65":"b= a.dropna(how='any')    #drops any row with a nan","5a8b12a1":"b[['abstract']]\\\n.describe(include=np.object)\\\n.transpose()","94b98fb2":"b['words'] = b.abstract.str.strip().str.split('[\\W_]+')\nb['words'].head()","85c7cd75":"abstracts = b[b.words.str.len() > 0]\nabstracts.head()","81384e10":"rows = list()\nfor row in abstracts[['words']].iterrows():\n    r = row[1]\n    for word in r.words:\n        rows.append((word))\n\nwords = pd.DataFrame(rows, columns=['word'])\nwords.head()\n","9cd199ea":"#To calculate TF-IDF statistic, normalize the words by chaging the words to the same case. \ntext1 = words.word.str.lower()","b7390d19":"counts = text1.value_counts()\ncounts","86eb7870":"abstracts[abstracts['abstract'].str.contains('assay')]","6442bd65":"abstracts[abstracts['abstract'].str.contains('blood type')]","6e371850":"abstracts[abstracts['abstract'].str.contains('symptoms')]","ff7809a5":"abstracts[abstracts['abstract'].str.contains('antigens')]","2badf412":"abstracts[abstracts['abstract'].str.contains('antibodies')]","c95702d5":"abstracts[abstracts['abstract'].str.contains('diagnostic')]","13aa8408":"abstracts[abstracts['abstract'].str.contains('testing')]","f3411910":"abstracts[abstracts['abstract'].str.contains('false negative')]","701b19f2":"df2 = pd.read_csv(\"..\/input\/httpsourworldindataorgcoronavirussourcedata\/full_data(4).csv\")\ndf2","80df96f0":"df2.describe ()","c6637083":"#Correlation among columns\ndf2.corr()","ee9c6cfb":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","79efea9f":"df2.corr().style.background_gradient(cmap='coolwarm')","ccd8d193":"#Density plots\ndf2.plot(kind='density', subplots=True, layout=(2,2), sharex=False)\nplt.show()","12df50e8":"sns.regplot(x='total_cases', y='total_deaths', data=df2, logistic=False)","b25f1429":"df2.corr().plot.bar()","232eb79d":"USA=df2.loc[df2['location']== 'United States']\nUSA","07e297d1":"sns.countplot(USA['total_deaths'])","aa1b109d":"USA.describe()","5ae4865b":"USA.corr()","ddac3b2f":"sns.distplot(USA['total_cases'], \n             hist=True, kde=True, \n              color='orange', \n             hist_kws={'edgecolor':'black'}, \n             kde_kws={'linewidth': 2})","b37e2d93":"sns.regplot(x='new_cases', y='total_cases', data=USA)","d12dda19":"USA['date']=pd.to_datetime(USA['date'])","c8dbe175":"USA","c6348df8":"sns.set(rc={'figure.figsize':(11, 4)})","846a9c51":"USA['total_cases'].plot(linewidth=2)","5a3821bc":"plt.figure(figsize=(16,9)) # Figure size\nsns.lineplot(x='date', y='total_cases', data=USA, marker='o', color='red') \nplt.title('Cases per day') # Title\nplt.xticks(USA.date.unique(), rotation=90) # All values in x-axis; rotate 90 degrees\nplt.show()","3885888a":"from sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","7394cccd":"plt.figure(figsize=(8,6))\nplt.tight_layout()\nsns.distplot(USA['new_cases'], color='purple')","b734270e":"#predict\nx= USA['total_cases'].values.reshape(-1,1)\ny= USA['total_deaths'].values.reshape(-1,1)\n\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=1)\n\n","4d8a8db3":"# fit model\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)","047b9037":"#To retrieve the intercept:\nprint(model.intercept_)\n#For retrieving the slope:\nprint(model.coef_)","6e11f718":"y_pred = model.predict(X_test)","b0ac4404":"df3 = pd.DataFrame({'Actual': y_test.flatten(), 'Predicted': y_pred.flatten()})\ndf3","b4bcd91a":"df4 = df3\ndf4.plot(kind='bar',figsize=(10,6))\nplt.grid(which='major', linestyle='-', linewidth='0.5', color='green')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')\nplt.show()","15ca9b60":"plt.scatter(X_test, y_test,  color='gray')\nplt.plot(X_test, y_pred, color='red', linewidth=2)\nplt.show()","1dc704ea":"print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","6bf8973d":"SING=df2.loc[df2['location']== 'Singapore']\nSING","5ae3a838":"SING.corr()","9c847a36":"plt.figure(figsize=(16,9)) # Figure size\nsns.lineplot(x='date', y='total_cases', data=SING, marker='o', color='red') \nplt.title('Cases per day') # Title\nplt.xticks(SING.date.unique(), rotation=90) # All values in x-axis; rotate 90 degrees\nplt.show()","eaffb063":"#prediction\n#predict\nx1= SING['total_cases'].values.reshape(-1,1)\ny1= SING['total_deaths'].values.reshape(-1,1)\n\nX_train, X_test, y_train, y_test = train_test_split(x1, y1, test_size=0.4, random_state=1)","a39a2340":"# fit model\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)","ec29bfa6":"y_pred = model.predict(X_test)","592a6ec1":"df5 = pd.DataFrame({'Actual': y_test.flatten(), 'Predicted': y_pred.flatten()})\ndf5","1c8943d8":"plt.scatter(X_test, y_test,  color='gray')\nplt.plot(X_test, y_pred, color='green', linewidth=2)\nplt.show()","c38d0c3c":"The intercept (often labeled the constant) is the expected mean value of Y when all X=0.    \nThe regression coefficient is the constant that represents the rate of change of one variable (y) as a function of changes in the other (x); it is the slope of the regression line.","8adb2c13":"The numbers are not increasing by the hundreds or thousands, yet.","52196cc4":"**USA**   \nWhat does the data show?","01140103":"The above shows a correlation between new cases and newly reported deaths, and between total cases and total deaths.","37674c4b":"What do the numbers show?   ","2ca2dcb2":"The above shows that, in the **USA**, there is a high correlation between elements, except the new cases and new deaths which reflect a milder correlation.","131d446b":"The prediction above for Singapore seems correct. However, this depends on data reporting.","bc20c6e8":"**S-Protein** is consistenly discussed in the medical\/research literature abstracts available on COVID-19.   \nOther important terms:   \nAssays, Blood Type, Antigens\/Antibodies, diagnostics, and testing.   ","0da7fcc5":"Compared to a more successful country in controlling the spread: Singapore","811115a1":"1. **About testing **     \nSource: WHO   \nhttps:\/\/www.who.int\/emergencies\/diseases\/novel-coronavirus-2019\/technical-guidance\/laboratory-guidance\n \nWhat are countries looking for in **diagnostics**?   ","7442b475":"The predictions above are imperfect but informative.","3ee205e4":"What does the **literature** have in common?","85578cd5":"The above reflects a clear relationship between total cases and total deaths.","f9bdfa54":"The above shows a sharp increase in cases in the month of March."}}