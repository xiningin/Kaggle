{"cell_type":{"a6ee5994":"code","ba37f409":"code","17bace84":"code","a0db162e":"code","92596b52":"markdown","fe2681c8":"markdown"},"source":{"a6ee5994":"import keras\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom keras.models import Sequential\nfrom keras.layers import Dense","ba37f409":"x_data = np.linspace(-0.5,0.5,200)\nnoise = np.random.normal(0,0.02,x_data.shape)\ny_data = np.square(x_data) + noise\n\nplt.scatter(x_data, y_data)\nplt.show()","17bace84":"model = Sequential()\nmodel.add(Dense(units=1, input_dim=1))\nmodel.compile(optimizer='sgd', loss='mse')\nfor step in range(3001):\n    cost = model.train_on_batch(x_data, y_data)\n    if step % 500 == 0:\n        print('cost', cost)\nW,b = model.layers[0].get_weights()\nprint('W:',W,'b:',b)\n\ny_pred = model.predict(x_data)\nplt.scatter(x_data, y_data)\nplt.plot(x_data, y_pred, 'r-', lw=3)\nplt.show()","a0db162e":"model = Sequential()\nmodel.add(Dense(units=10, input_dim=1,activation='tanh'))\nmodel.add(Dense(units=1,activation='tanh'))\n\nfrom keras.optimizers import SGD\nsgd = SGD(lr = 0.3)\n\n\nmodel.compile(optimizer=sgd, loss='mse')\nfor step in range(3001):\n    cost = model.train_on_batch(x_data, y_data)\n    if step % 500 == 0:\n        print('cost', cost)\nW,b = model.layers[0].get_weights()\nprint('W:',W,'b:',b)\n\ny_pred = model.predict(x_data)\nplt.scatter(x_data, y_data)\nplt.plot(x_data, y_pred, 'r-', lw=3)\nplt.show()","92596b52":"## What can we do\n- 1.Put 1 input layer 10 hidden layers and 1 output layer\n- 1-10-1 construction\n- Because the learning rate of Stochastic gradient descent method is very low(0.01).We need define SGD by ourself.\n- add activations\uff08default=linear\uff09","fe2681c8":"We can see that the line can not fit this figure correctly"}}