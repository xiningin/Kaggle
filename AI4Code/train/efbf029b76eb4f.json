{"cell_type":{"9ee3135b":"code","60bcafe0":"code","db129a55":"code","321015d2":"code","c8778218":"code","c8eb8fb4":"code","305807c9":"code","2b13c5fb":"code","fd854a6b":"code","9de0c8e1":"code","d56e4e54":"code","a9522eea":"code","8ead7cb8":"code","c5f6075b":"code","d74689a6":"code","3d3798f6":"code","0b3ae6c4":"code","66d55793":"code","38129487":"code","049e06b2":"code","51fad3c0":"code","0618736b":"code","526f24de":"code","c39ec683":"code","8b895ef9":"code","26c24404":"code","9a267dc9":"code","401bec0d":"code","ce33a860":"code","70c0b821":"code","3ed2e152":"code","acb28413":"code","c56caca0":"code","16807a0f":"code","91c88108":"code","0b7727c6":"code","fe76604e":"code","1c63ae1b":"code","371ce12a":"code","449df316":"code","539fc743":"code","2f24d86e":"code","029dc530":"code","62aa9a15":"markdown","7c4a7a04":"markdown","12f0d4f6":"markdown","0deed9d7":"markdown","7995058f":"markdown"},"source":{"9ee3135b":"# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","60bcafe0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom keras.metrics import mean_absolute_error","db129a55":"path= \"\/kaggle\/input\/insurance\/insurance.csv\"\ndata= pd.read_csv(path)\ndata.head()","321015d2":"data.info()","c8778218":"data.dtypes.value_counts()","c8eb8fb4":"sns.heatmap(data.isnull())","305807c9":"data.hist(figsize=(15,10))","2b13c5fb":"data.plot(kind=\"box\")","fd854a6b":"sns.heatmap(data.corr(), annot=True)","9de0c8e1":"sns.scatterplot(x= \"age\", y=\"charges\", data= data, hue=\"region\")","d56e4e54":"sns.scatterplot(x= \"bmi\", y=\"charges\", data= data, hue=\"sex\")","a9522eea":"sns.scatterplot(x= \"bmi\", y=\"charges\", data= data, size=\"smoker\")","8ead7cb8":"x= data.drop(\"charges\", axis= 1)\ny= data.charges\n\nx.shape, y.shape","c5f6075b":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_tes= train_test_split(x,y,test_size= 0.3, random_state= 42)","d74689a6":"cat_cols= data.select_dtypes(include=\"object\").columns\nnum_cols= data.select_dtypes(exclude=\"object\").columns\n\ncat_cols, num_cols","3d3798f6":"num_cols= num_cols.drop(\"charges\")","0b3ae6c4":"from sklearn.compose import make_column_transformer\nfrom sklearn.preprocessing import MinMaxScaler, OneHotEncoder","66d55793":"x_train, x_test","38129487":"transformer= make_column_transformer( (OneHotEncoder(handle_unknown=\"ignore\"), cat_cols),\n                                      (MinMaxScaler(), num_cols),\n                                     remainder= \"passthrough\"\n                                    )\n\nx_train= transformer.fit_transform(x_train)\nx_test= transformer.transform(x_test)","049e06b2":"x_train[0].shape, x_train.shape","51fad3c0":"tf.random.set_seed(42)","0618736b":"model_1= keras.Sequential([\n    keras.layers.Dense(4, input_shape=(11,)),\n    keras.layers.Dense(8, activation=\"relu\"),\n    keras.layers.Dense(1)\n], name=\"model-1\")","526f24de":"model_1.compile(loss= \"mae\",\n              optimizer= tf.keras.optimizers.SGD(),\n              metrics=[\"mae\"]\n             )","c39ec683":"model_1_history= model_1.fit(x_train, y_train, epochs=100)","8b895ef9":"pd.DataFrame(model_1_history.history).plot()","26c24404":"model_1.evaluate(x_test, y_tes)\n\n# Overfitting ","9a267dc9":"y_tes.shape, y_pred.shape","401bec0d":"y_pred= model_1.predict(x_test)\nloss_1= mean_absolute_error(y_tes, tf.squeeze(y_pred)).numpy()\nloss_1","ce33a860":"model_2= keras.Sequential([\n    keras.layers.Dense(8, input_shape=(11,),  activation=\"relu\"),\n    keras.layers.Dense(16, activation=\"relu\"),\n    keras.layers.Dense(16, activation=\"relu\"),\n    keras.layers.Dense(8, activation=\"relu\"),\n    keras.layers.Dense(1)\n], name=\"model-2\")\n\nmodel_2.compile(loss= \"mae\",\n              optimizer= tf.keras.optimizers.Adam(lr=0.01),\n              metrics=[\"mae\"]\n             )\n\nmodel_2_history= model_2.fit(x_train, y_train, epochs=100)","70c0b821":"pd.DataFrame(model_2_history.history).plot()","3ed2e152":"model_2.evaluate(x_test, y_tes)","acb28413":"y_pred= model_2.predict(x_test)\nloss_2= mean_absolute_error(y_tes, tf.squeeze(y_pred)).numpy()\nloss_2","c56caca0":"model_3= keras.Sequential([\n    keras.layers.Dense(8, input_shape=(11,),  activation=\"relu\"),\n    keras.layers.Dense(16, activation=\"relu\"),\n    keras.layers.Dense(16, activation=\"relu\"),\n    keras.layers.Dense(8, activation=\"relu\"),\n    keras.layers.Dense(1)\n], name=\"model-3\")\n\nmodel_3.compile(loss= \"mae\",\n              optimizer= tf.keras.optimizers.Adam(lr=0.01),\n              metrics=[\"mae\"]\n             )\n\nmodel_3_history= model_3.fit(x_train, y_train, epochs=120)","16807a0f":"pd.DataFrame(model_3_history.history).plot()","91c88108":"model_3.evaluate(x_test, y_tes)","0b7727c6":"y_pred= model_3.predict(x_test)\nloss_3= mean_absolute_error(y_tes, tf.squeeze(y_pred)).numpy()\nloss_3","fe76604e":"model_4= keras.Sequential([\n    keras.layers.Dense(8, input_shape=(11,),  activation=\"relu\"),\n    keras.layers.Dense(16, activation=\"relu\"),\n    keras.layers.Dense(32, activation=\"relu\"),\n    keras.layers.Dense(8, activation=\"relu\"),\n    keras.layers.Dense(1)\n], name=\"model-4\")\n\nmodel_4.compile(loss= \"mae\",\n              optimizer= tf.keras.optimizers.Adam(lr=0.01),\n              metrics=[\"mae\"]\n             )\n\nmodel_4_history= model_4.fit(x_train, y_train, epochs=150)","1c63ae1b":"pd.DataFrame(model_4_history.history).plot()","371ce12a":"model_4.evaluate(x_test, y_tes)","449df316":"y_pred= model_4.predict(x_test)\nloss_4= mean_absolute_error(y_tes, tf.squeeze(y_pred)).numpy()\nloss_4","539fc743":"# Comparing all Models\n\nres= [(\"model_1\" , loss_1),\n      (\"model_2\" , loss_2),\n      (\"model_3\" , loss_3),\n      (\"model_4\" , loss_4)\n     ]\npd.DataFrame(res).set_index(0).plot(kind=\"bar\", xlabel=\"models\", ylabel=\"Losses\")","2f24d86e":"from tensorflow.keras.utils import plot_model\n\nplot_model(model_4, show_shapes = True)","029dc530":"model_4.save(\"medical_model_4.h5\")","62aa9a15":"> Model-2 - Training : 2231, Testing : 1835\n\n### Building Model-3","7c4a7a04":"> Model1 - training : 3493, testing : 5644\n\n### Building model-2","12f0d4f6":"> Model 3: Training : 1951, Testing : 1755\n\n#### Same Model : Higher EPOCH","0deed9d7":"### saving the Model","7995058f":"## Thanks for reading.... If u like this notebook, Please upvote it...\n"}}