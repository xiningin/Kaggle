{"cell_type":{"79b12b89":"code","d7563fbf":"code","cc4b4aca":"code","49abf314":"code","7959bb90":"code","36af0943":"code","f70e99ce":"code","a02ff95c":"code","ca274f57":"code","e087bb96":"code","054f6606":"code","9c185b15":"code","7eb828b7":"code","b8b7d11a":"code","1ce11bed":"code","6981b484":"code","0154a1ef":"code","7bf2324f":"code","ffef2b49":"code","af4267b8":"code","5118de7d":"code","c229ee61":"markdown","1d3a7490":"markdown","a3a5294e":"markdown","9efea186":"markdown","b1f0f8cc":"markdown","303b13c9":"markdown","695a9069":"markdown","d3e477cd":"markdown","7cfc5228":"markdown","5a10bb4a":"markdown","329da1ab":"markdown","0523fab4":"markdown","a45136a0":"markdown","bf1d7d44":"markdown","e287c48d":"markdown","546b9b19":"markdown","1969aea0":"markdown","665c3425":"markdown","2c8dbfdf":"markdown"},"source":{"79b12b89":"!pip install pgmpy","d7563fbf":"from pgmpy.factors.discrete import TabularCPD\nfrom pgmpy.models import BayesianModel\nimport pandas as pd\ndf = pd.read_csv('..\/input\/fraud_dataset.csv')","cc4b4aca":"from pgmpy.factors.discrete import TabularCPD\nfrom pgmpy.models import BayesianModel\n\n\nfraud_model = BayesianModel()\nfraud_model = BayesianModel()\nfraud_model = BayesianModel([('F', 'J'),\n                             ('A', 'J'),\n                             ('S', 'J'),\n                             ('F', 'G')])                         \n\n \n","49abf314":"from pgmpy.estimators import ExhaustiveSearch\ndata = pd.read_csv('..\/input\/fraud_dataset.csv')\ns = ExhaustiveSearch(pd.DataFrame(data))\n[dag.edges() for dag in s.all_dags()]","7959bb90":"from pgmpy.models import BayesianModel\nfrom pgmpy.estimators import MaximumLikelihoodEstimator\nimport pandas as pd\n\ndata = pd.read_csv('..\/input\/fraud_dataset.csv')\ndata.head()\ngas_cpd = MaximumLikelihoodEstimator(fraud_model, data).estimate_cpd('G')\n\nfraud_cpd = MaximumLikelihoodEstimator(fraud_model, data).estimate_cpd('F')\n\nage_cpd = MaximumLikelihoodEstimator(fraud_model, data).estimate_cpd('A')\n\nsex_cpd = MaximumLikelihoodEstimator(fraud_model, data).estimate_cpd('S')\n\njewelry_cpd = MaximumLikelihoodEstimator(fraud_model, data).estimate_cpd('J')\n\n","36af0943":"fraud_model.add_cpds(jewelry_cpd, fraud_cpd, age_cpd, sex_cpd, gas_cpd)\n\n## get the cpds of fraud model\nfraud_model.get_cpds()\n\n# Iterate over fraud_model.get_cpds()\nfor cpd in fraud_model.get_cpds():\n    print(\"CPD of {variable}:\".format(variable=cpd.variable))\n    print(cpd)","f70e99ce":"## retrieves the nodes reachable from 'Age' variable\nfraud_model.active_trail_nodes('A')\n","a02ff95c":"## immoralities in asia model\nfraud_model.get_immoralities()","ca274f57":"## computing dependencies in Fraud model\nfraud_model.get_independencies()","e087bb96":"## retrieving the local dependencies for the 'Gas' variable\nfraud_model.local_independencies('G')","054f6606":"# Doing exact inference using Variable Elimination\nfrom pgmpy.inference import VariableElimination\nfraud_infer = VariableElimination(fraud_model)\n\n# Computing the probability of gender of the person given age.\na = fraud_infer.query(variables=['S'], evidence={'A': 0})\nprint(a['S'])","9c185b15":"## Computing the probability of Jewelry given the probability of observing Gas is one and Fraud is zero\nb1 = fraud_infer.query(variables=['J'], evidence={'G': 1, 'F' : 0 })\nprint(b1['J'])","7eb828b7":"## Computing the probability of Jewelry when there is no evidence\nb = fraud_infer.query(variables=['J'], evidence={})\nprint(b['J'])\n\n## Computing the probability of Gas given the probability of observing Gas is one and Fraud is zero\nc = fraud_infer.query(variables=['J'], evidence={'G': 1, 'F': 0})\nprint(c['J'])","b8b7d11a":"## Computing the probability of Gas when there is no evidence\nd = fraud_infer.query(variables=['G'], evidence={})\nprint(d['G'])\n\n## Computing the probability of Jewelry when there is no evidence\ne = fraud_infer.query(variables=['J'], evidence={})\nprint(e['J'])\n\n## Computing the probability of Gas given the probability of observing Fraud is zero\nf = fraud_infer.query(variables=['G'], evidence={'F': 0})\nprint(f['G'])\n\n## Computing the probability of Jewelry given the probability of observing Fraud is zero\ng = fraud_infer.query(variables=['J'], evidence={'F': 0})\nprint(g['J'])","1ce11bed":"## Computing the probability of Age when there is no evidence\nh = fraud_infer.query(variables=['A'], evidence={})\nprint(h['A'])\n\n## Computing the probability of Sex when there is no evidence\ni = fraud_infer.query(variables=['S'], evidence={})\nprint(i['S'])\n\n## Computing the probability of Age given the probability of observing Jewelry is zero\nj = fraud_infer.query(variables=['A'], evidence={'J': 0})\nprint(j['A'])\n\n## Computing the probability of Sex given the probability of observing Jewelry is zero\nk = fraud_infer.query(variables=['S'], evidence={'J': 0})\nprint(k['S'])","6981b484":"## Computing the probability of Age given the probability of observing Jewelry is one\nl = fraud_infer.query(variables=['A'], evidence={'J': 1})\nprint(l['A'])\n\n## Computing the probability of Sex given the probability of observing Jewelry is one\nm = fraud_infer.query(variables=['S'], evidence={'J': 1})\nprint(m['S'])\n","0154a1ef":"## Computing the probability of Age when there is no evidence\nn = fraud_infer.query(variables=['A'], evidence={})\nprint(n['A'])\n\n## Computing the probability of Age given the probability of observing Sex is zero\no = fraud_infer.query(variables=['A'], evidence={'S': 0})\nprint(o['A'])","7bf2324f":"## Computing the probability of Sex when there is no evidence\np = fraud_infer.query(variables=['S'], evidence={})\nprint(p['S'])\n\n## Computing the probability of Sex given the probability of observing Age is zero\nq = fraud_infer.query(variables=['S'], evidence={'A': 0})\nprint(q['S'])","ffef2b49":"## Computing the probability of Sex given the probability of observing Age is zero and Jewelry is zero\ns = fraud_infer.query(variables=['S'], evidence={'A': 0, 'J': 0})\nprint(s['S'])","af4267b8":"## Computing the probability of Gas given the probability of observing Jewelry is zero\nt = fraud_infer.query(variables=['G'], evidence={'J': 0})\nprint(t['G'])\n\n## Computing the probability of Gas given the probability of observing Jewelry is zero and Fraud is zero\nu = fraud_infer.query(variables=['G'], evidence={'J': 0, 'F':0})\nprint(u['G'])","5118de7d":"## Computing the probability of Jewelry when there is no evidence\nv = fraud_infer.query(variables=['J'], evidence={})\nprint(v['J'])\n\n## Computing the probability of Jewelry given the probability of observing Gas is one\nw = fraud_infer.query(variables=['J'], evidence={'G': 1})\nprint(w['J'])\n\n## Computing the probability of Jewelry given the probability of observing Gas is zero\nx = fraud_infer.query(variables=['J'], evidence={'G': 0})\nprint(x['J'])","c229ee61":"## Problem Description : \n#### A Bayesian-network for detecting credit-card fraud. Arcs are drawn from cause to effect. The variables for our problem is Fraud ( F ), Gas ( G ), Jewelry ( J ), Age ( A ), and Sex ( S ), representing whether or not the current purchase is fraudulent, whether or not there was a gas purchased in the last 24 hours, whether or not there was a jewelry purchased in the last 24 hours, and the age and sex of the card holder, respectively. Our goal is to find the marginal distribution of fraud ie) whether or not the particular transaction is fradulent given an evidence.","1d3a7490":"#### Computing the probability of Gas when the evidence is J=1, F=0\n#### Let us observe how Jewelry impacts Gas when Fraud is observed (F=0). It can also be inferred that Gas is independent of Jewelry when Fraud is observed. (G\u22a5J | F)","a3a5294e":"####  get_immoralities() finds all the immoralities in the model .A v-structure X -> Z <- Y is an immorality if there is no direct edge between X and Y ","9efea186":"#### Observing the V structure\n#### Lets observe what happens to the cpds of age and sex when the evidence of Jewelry(J = 0) is observed","b1f0f8cc":"#### Observing the Conditional Independance\n#### Let us observe what happens to probability of Gas and Jewelry when evidence of Fraud is observed.\n","303b13c9":"#### Observing Conditional Independence\n#### Let us look at the conditional independence of Jewelry and Gas.","695a9069":"#### Let us observe the impact of Gas on Jewelry when Fraud is not being observed\n","d3e477cd":"#### Lets observe what happens to the cpds of age and sex when the evidence of Jewelry(J = 1) is observed","7cfc5228":"####  active_trail_nodes() returns a dictionary with the given variables as keys and all the nodes reachable from that respective variable as values.","5a10bb4a":"#### Let us observe how the influence flows from Age to Sex given the evidence Jewelry\n","329da1ab":"#### get_independencies() computes independencies in the Bayesian Network, by checking d-seperation.","0523fab4":"#### Computing the probability of Jewelry when both Gas and Fraud are Observed Together\n\n#### It is observed that when both gas and fraud is observed together , there is a significant trend to buy Jewelry. From this we can draw an inference that Gas is conditionally independant on Jewelry when Fraud is observed. The trend to buy Jewelry continues when Fraud(F=0) and Gas is observed .We can infer that when Fraud is observed , Jewelry is independant of Gas (J\u22a5G | F)\n","a45136a0":"#### local_independencies() returns an instance of Independencies containing the local independencies of each of the variables.","bf1d7d44":"#### Let us observe the influence of Sex on Age given the evidence of Sex (S=0)","e287c48d":"### Bayesian Networks Code Demo -- Fraud example\n\n#### A Bayesian network is a directed acyclic graphical model whose nodes represent a set of random variables and their conditional dependencies via a directed acyclic graph (DAG).We shall look at a Bayesian network called the 'Fraud Model' proposed by Heckerman which represent the probabilistic relationships between events of credit card transactions of jewelry or gas based on fraud and other features. Pgmpy is the python library used for demonstration","546b9b19":"#### In Bayesian Networks, the relationship between nodes are specified by CPDs.","1969aea0":"#### Exact inference using Variable Elimination","665c3425":"![fraud.png](attachment:fraud.png)","2c8dbfdf":"#### Let us observe the influence of Age on Sex without observing Jewelry\n"}}