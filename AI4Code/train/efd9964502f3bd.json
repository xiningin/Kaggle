{"cell_type":{"8c65e81f":"code","95eac446":"code","c838ae7c":"code","5a214a74":"code","1f8cd50b":"code","873435e9":"code","a1b74f2e":"code","8dd6736e":"code","aedb8a23":"code","e3be5617":"code","2349a295":"code","9bc9adf5":"markdown","c25e35af":"markdown","6f78c05e":"markdown","9193ecd0":"markdown","d2e90afb":"markdown","fd796616":"markdown","fa42b021":"markdown","11c613f9":"markdown","678d808f":"markdown","fe4af118":"markdown","a1848bac":"markdown","c05e3b57":"markdown"},"source":{"8c65e81f":"import pandas as pd\nimport numpy as np\n\nurl = '..\/input\/habermans-survival-data-set\/haberman.csv'\nlist_cols = ['Age', \"Patient's Years\", \"N_positive_ax\", \"survival_status\"]\ndf = pd.read_csv(url, names=list_cols)","95eac446":"df.head()","c838ae7c":"df['survival_status'].value_counts()","5a214a74":"X = df.drop(['survival_status'], axis=1)\ny = df['survival_status']\n\n# spliting daa\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=21, stratify=y)","1f8cd50b":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_val_score,cross_validate\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import confusion_matrix, classification_report\nmodel_lr = LogisticRegression()\ncv_score = cross_val_score(model_lr, X,y, scoring='roc_auc', cv=5)\ncv_score.mean()","873435e9":"model_lr.fit(X_train, y_train)\ny_pred = model_lr.predict(X_test)","a1b74f2e":"confusion_matrix(y_test, y_pred, labels=[1,2])","8dd6736e":"print(classification_report(y_test, y_pred))","aedb8a23":"TP = 52\nTN = 3\nFP = 17\nFN = 5","e3be5617":"precision = TP\/(TP+FP)\nprecision","2349a295":"recall = TP\/(TP+FN)\nrecall","9bc9adf5":"Kita coba secara manual menghitung recall dan precision","c25e35af":"Menghitung value dari kolom 'survival_status'","6f78c05e":"Menentukan label dan fitur serta membagi data menjadi data train dan data test dengan test_size=0.25.","9193ecd0":"**Precision**\n\nPrecision menunjukkan hasil yang lebih menunjukkan keefektifan pada matriks True Negatif dan dangat menghidari adanya data yang False Positif","d2e90afb":"Membuat report hasil akurasi,precisio, recall dan f1-score dari hasil prediksi","fd796616":"Import model ML, cross val score, gscv dan matriks untuk evalusai ML serta menentukan cv score rata-rata","fa42b021":"**Recall**","11c613f9":"**Applikasi Model Evaluasi**\n\nKali ini kita akan menggunakan data untuk memprediksi kelangsungan hidup pasien yang telah mengalami operasi payudara. Dengan informasi yang dimiliki terkait pasien, kita akan membuat model untuk memprediksi apakah pasien akan bertahan hidup dalam waktu lebih dari 5 tahun atau tidak.\n\nLebih Lengkapnya kalian bisa membaca informasi tentang dataset di link berikut : https:\/\/raw.githubusercontent.com\/jbrownlee\/Datasets\/master\/haberman.names\n\nBuat model Klasifikasi (Model\/Algoritma Bebas) untuk memprediksi status pasien. dengan ketentuan sebagai berikut :\n\n1. Bagi kedua data ini menjadi data training dan data test dengan test_size=0.25.\n2. Pelajar tentang metrics roc_auc_score kemudian buatlah model dan evaluasi dengan menggunakan teknik cross-validation dengan scoring 'roc_auc'. baca https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.cross_val_score.html untuk menggunakan metric roc_auc saat cross-validation.\n3. Berapa score rata2 dari model dengan teknik cross-validation tersebut?\n4. Prediksi data test dengan model yang telah kalian buat!\n5. Bagaimana hasil confusion matrix dari hasil prediksi tersebut?\n6. Bagaimana classification report dari hasil prediksi tersebut?\n7. Seberapa baik model anda dalam memprediksi seorang pasien mempunyai status positive?\n8. Seberapa baik model anda dalam memprediksi seorang pasien mempunyai status negatif?","678d808f":"Tampilkan 5 data teratas.","fe4af118":"Confussion matriks yang menunjukkan data TP, TN, FP, dan FN","a1848bac":"Melakukan fitting model dan predicting untuk data test","c05e3b57":"**Import Dataset**"}}