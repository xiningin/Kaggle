{"cell_type":{"213003d9":"code","d0ffcebc":"code","79784121":"code","249b5b2a":"code","0e39e250":"code","11ea5245":"code","5486c022":"code","cc4b82fb":"code","f8634bbe":"code","048919ef":"code","094ff15c":"code","b1c02f47":"code","07d88f76":"code","79bbd260":"code","93f44ffd":"code","c941d5fb":"code","317d3995":"code","3af3b6df":"code","001dcc26":"code","77d25646":"code","2e495b5f":"code","3dab769e":"code","c3fc0135":"code","968de6a0":"code","203181ce":"code","623966d6":"code","3df445ac":"code","60162428":"code","57674372":"code","35ae15d9":"code","5c49d261":"code","695ab50c":"code","6e5a9fd6":"code","deedef73":"code","4be60ba3":"code","2ad903ed":"markdown","a46585db":"markdown","3cfcf34f":"markdown","a268d079":"markdown","15cae512":"markdown","95463d26":"markdown","a782f79a":"markdown","42367555":"markdown","1881b36e":"markdown","3c6e1230":"markdown"},"source":{"213003d9":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom scipy import stats\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score\n\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression\nfrom xgboost import XGBClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import BernoulliNB\nfrom sklearn.naive_bayes import GaussianNB","d0ffcebc":"df = pd.read_csv(\"..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")","79784121":"df.head(10)","249b5b2a":"df.shape","0e39e250":"df.info()","11ea5245":"cols_to_be_object = [\"hypertension\",\"heart_disease\"]\nfor col in cols_to_be_object:\n    df[col] = df[col].astype(\"object\")","5486c022":"df.describe().T","cc4b82fb":"df.isnull().sum()","f8634bbe":"df[\"bmi\"].fillna(df[\"bmi\"].median(), inplace=True)","048919ef":"df.duplicated().sum()","094ff15c":"for col in df.columns:\n    print(df[col].value_counts())\n    print(\"-\"*15)","b1c02f47":"df[\"smoking_status\"].replace(\"Unknown\", df[\"smoking_status\"].mode().values[0], inplace=True)","07d88f76":"print(df[\"smoking_status\"].value_counts())","79bbd260":"plt.figure(figsize=(10,6))\nsns.countplot(df[\"gender\"])\nplt.title(\"Gender\", size=15)\nplt.show()","93f44ffd":"plt.figure(figsize=(10,6))\nsns.distplot(df[\"age\"])\nplt.title(\"Age\", size=15)\nplt.show()","c941d5fb":"plt.figure(figsize=(10,6))\nsns.countplot(df[\"heart_disease\"])\nplt.title(\"Heart Disease Numbers\", size=15)\nplt.show()","317d3995":"plt.figure(figsize=(10,6))\nsns.barplot(x=df[\"stroke\"], y=df[\"bmi\"])\nplt.title(\"BMI vs Stroke\", size=15)\nplt.show()","3af3b6df":"plt.figure(figsize=(10,6))\nsns.barplot(x=df[\"smoking_status\"], y=df[\"stroke\"])\nplt.title(\"Smoking Status vs Stroke\", size=15)\nplt.show()","001dcc26":"plt.figure(figsize=(10,6))\nsns.barplot(x=df[\"stroke\"], y=df[\"hypertension\"])\nplt.title(\"Hypertension vs Stroke\", size=15)\nplt.show()","77d25646":"X = df.drop([\"id\",\"stroke\"], axis=1)\ny = df[\"stroke\"]","2e495b5f":"y = pd.DataFrame(y, columns=[\"stroke\"])","3dab769e":"display(X.head())\ndisplay(y.head())","c3fc0135":"numerical_cols = X.select_dtypes([\"float64\",\"int64\"])\nscaler = StandardScaler()\nX[numerical_cols.columns] = scaler.fit_transform(X[numerical_cols.columns])","968de6a0":"X.head()","203181ce":"categorical_cols = X.select_dtypes(\"object\")\nX = pd.get_dummies(X, columns=categorical_cols.columns)","623966d6":"X.head()","3df445ac":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","60162428":"models = pd.DataFrame(columns=[\"Model\",\"Accuracy Score\"])","57674372":"log_reg = LogisticRegression()\nlog_reg.fit(X_train, y_train)\npredictions = log_reg.predict(X_test)\nscore = accuracy_score(predictions, y_test)\nprint(f\"LogisticRegression: {score}\")\n\nnew_row={\"Model\": \"LogisticRegression\", \"Accuracy Score\": score}\nmodels = models.append(new_row, ignore_index=True)","35ae15d9":"GNB = GaussianNB()\nGNB.fit(X_train, y_train)\npredictions = GNB.predict(X_test)\nscore = accuracy_score(predictions, y_test)\nprint(f\"GaussianNB: {score}\")\n\nnew_row={\"Model\": \"GaussianNB\", \"Accuracy Score\": score}\nmodels = models.append(new_row, ignore_index=True)","5c49d261":"BNB = BernoulliNB()\nBNB.fit(X_train, y_train)\npredictions = BNB.predict(X_test)\nscore = accuracy_score(predictions, y_test)\nprint(f\"BernoulliNB: {score}\")\n\nnew_row={\"Model\": \"BernoulliNB\", \"Accuracy Score\": score}\nmodels = models.append(new_row, ignore_index=True)","695ab50c":"svm = SVC()\nsvm.fit(X_train, y_train)\npredictions = svm.predict(X_test)\nscore = accuracy_score(predictions, y_test)\nprint(f\"SVC: {score}\")\n\nnew_row={\"Model\": \"SVC\", \"Accuracy Score\": score}\nmodels = models.append(new_row, ignore_index=True)","6e5a9fd6":"randomforest = RandomForestClassifier(n_estimators=1000, random_state=42)\nrandomforest.fit(X_train, y_train)\npredictions = randomforest.predict(X_test)\nscore = accuracy_score(predictions, y_test)\nprint(f\"RandomForestClassifier: {score}\")\n\nnew_row={\"Model\": \"RandomForestClassifier\", \"Accuracy Score\": score}\nmodels = models.append(new_row, ignore_index=True)","deedef73":"xgb = XGBClassifier(use_label_encoder=False)\nxgb.fit(X_train, y_train)\npredictions = xgb.predict(X_test)\nscore = accuracy_score(predictions, y_test)\nprint(f\"XGBClassifier: {score}\")\n\nnew_row={\"Model\": \"XGBClassifier\", \"Accuracy Score\": score}\nmodels = models.append(new_row, ignore_index=True)","4be60ba3":"models.sort_values(by=\"Accuracy Score\", ascending=False)","2ad903ed":"**HYPERTENS\u0130ON ---> YES = 1, NO = 0**","a46585db":"# Machine Learning Models","3cfcf34f":"**HEART DISEASE ---> YES = 1, NO = 0**","a268d079":"# Data Cleaning","15cae512":"# Comparison of Machine Learning Models","95463d26":"# Standardization of Data","a782f79a":"# Data Visualization","42367555":"# Exploratory Data Analysis","1881b36e":"# One Hot Encoding","3c6e1230":"# Splitting the Data into Train, Test Datasets"}}