{"cell_type":{"2185088b":"code","37812987":"code","cb0d3a7e":"code","0cb1c016":"code","89f2aded":"code","9b25ee16":"code","6e3dfbf0":"code","a1425cd0":"code","f7145746":"markdown","a55ad6f2":"markdown","3819cb98":"markdown","5bc12bc2":"markdown"},"source":{"2185088b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","37812987":"df = pd.read_csv('..\/input\/pm25-data-for-five-chinese-cities\/BeijingPM20100101_20151231.csv')\ndf.info()","cb0d3a7e":"df.head(10)\n","0cb1c016":"#DatetimeIndex \u65f6\u95f4\u6233\n#PeriodIndex \u65f6\u95f4\u6bb5\n#\u628a\u5206\u5f00\u7684\u51e0\u4e2a\u65f6\u95f4\u5b57\u7b26\u4e32\u8f6c\u5316\u6210pandas\u65f6\u95f4\u7c7b\u578b\nperiod = pd.PeriodIndex(year=df[\"year\"],month=df[\"month\"],day=df[\"day\"],hour=df[\"hour\"],freq=\"H\")\ndf[\"datetime\"] = period\ndf.set_index(\"datetime\",inplace=True)\ndf","89f2aded":"data = df[\"PM_US Post\"].dropna()\ndata","9b25ee16":"import matplotlib.pyplot as plt \n_x = data.index\n_y = data.values\nplt.figure(figsize=(20,8),dpi=80)\nplt.plot(range(len(_x)),_y)\n#plt.xticks(range(0,len(_x),20),list(_x)[::20])\nplt.show()","6e3dfbf0":"df2 = df.resample(\"M\").mean()\ndata = df2[\"PM_US Post\"].dropna()\n_x = data.index\n_y = data.values\nplt.figure(figsize=(20,8),dpi=80)\nplt.plot(range(len(_x)),_y)\nplt.xticks(range(0,len(_x),20),list(_x)[::20])\nplt.show()","a1425cd0":"df3 = df.resample(\"7D\").mean()\ndata = df3[\"PM_US Post\"].dropna()\n_x = data.index\n_y = data.values\nplt.figure(figsize=(20,8),dpi=80)\nplt.plot(range(len(_x)),_y)\nplt.xticks(range(0,len(_x),10),list(_x)[::10],rotation=45)\nplt.show()","f7145746":"## \u9879\u76ee\u76ee\u6807\n### \u7ed8\u5236\u51fa\u4e94\u4e2a\u57ce\u5e02\u7684PM2.5\u968f\u65f6\u95f4\u7684\u53d8\u5316\u60c5\u51b5\n- \u7ed8\u5236PM\u539f\u59cb\u503c\n\n### \u7f3a\u5931\u6570\u636e\u5904\u7406dropna\n- \u5904\u7406PM2.5\u7684\u7a7a\u503c\u6216\u8005NaN\n    \u53d6\u5f53\u524d\u5c0f\u65f6\/\u6708\u7684\u5e73\u5747\u503c\n    \n\u7531\u4e8e\u7d22\u5f15\u503c\u662f\u65f6\u95f4\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u7528dropna\u5c31\u53ef\u4ee5\u83b7\u5f97\u53ef\u7ed8\u56fe\u7684\u6570\u636e\uff0c\u5982\u4e0b\uff1a","a55ad6f2":"### \u8c03\u6574\u91c7\u6837\u9891\u7387\u4e3a7\u5929","3819cb98":"### \u964d\u91c7\u6837\n\u6309\u7167\u6708\u91c7\u6837\u7ed8\u56fe","5bc12bc2":"### \u7ed8\u5236\u66f2\u7ebf\u56fe"}}