{"cell_type":{"aee836ef":"code","2d598f79":"code","7fafee34":"code","498365cf":"code","e06887d9":"code","cdf56bc5":"code","17147c50":"code","3c221027":"code","192d0a65":"code","e0c383dc":"code","07c956fc":"code","7ad4070d":"code","fa57c1a5":"code","78032f40":"code","78ba05ce":"code","81c005f4":"code","9e9ed722":"code","6625bc73":"code","79812b47":"markdown","6d5e818c":"markdown","c854bf85":"markdown","3fe1f903":"markdown","786ba2b5":"markdown"},"source":{"aee836ef":"#import requests module\nimport requests","2d598f79":"# store the URI in the url variable.\nurl = 'https:\/\/api.data.gov\/ed\/collegescorecard\/v1\/schools?api_key=7g1Yt0xxEVGxrd8hovbQunznrPE4oxyJivQsoL4h'","7fafee34":"#using get command, returns response object\nresult = requests.get(url)","498365cf":"# Get the status code\nresult.status_code","e06887d9":"#Get the complete results in the text format.\nresult.text","cdf56bc5":"# Improt the module to read html code and capture the data.\nfrom bs4 import BeautifulSoup","17147c50":"#HTML Created. Please refer the result in the next command for exact page. \nhtml_string = \"\"\"\n<!doctyp html>\n<html lang=\"en\">\n<head>\n    <title>Doing Data Science With Python<\/title>\n<\/head>\n<body>\n    <h1 style=\"color:#F15B2A;\">Data Extraction: WebScrapping<\/h1>\n    <p id=\"author\">Author : Neeraj Sharma<\/p>\n    <p id=\"description\">This notebook will help you to learn webscraping.<\/p>\n    \n    <h3 style=\"color:#404040;\">Where does Data Scientist Spends their time?<\/h3>\n    <table id=\"workdistribution\" style=\"width:100%\">\n        <tr>\n            <th>Work<\/th>\n            <th>% of time<\/th>\n        <\/tr>\n        <tr>\n            <td>Data Extraction<\/td>\n            <td>20<\/td>\n        <\/tr>\n          <tr>\n            <td>Data Organize<\/td>\n            <td>60<\/td>\n        <\/tr>\n          <tr>\n            <td>Building Model and Evaluation<\/td>\n            <td>10<\/td>\n        <\/tr>\n          <tr>\n            <td>Presentation and Other tasks<\/td>\n            <td>10<\/td>\n        <\/tr>\n    <\/table>\n    <\/body>\n    <\/html>\n\"\"\"","3c221027":"#Display HTML page in the juyper notedbook\nfrom IPython.core.display import display, HTML\ndisplay(HTML(html_string))","192d0a65":"#use beautiful soup to read html string and create an object\nps = BeautifulSoup(html_string)","e0c383dc":"# print the value of ps\nprint(ps)","07c956fc":"# print the body from html\nbody = ps.find(name=\"body\")\nprint(body)","7ad4070d":"#use text attribute to get the content of the tag\nprint(body.find(name=\"h1\").text)","fa57c1a5":"#print the value of <p> tag\nprint(body.find(name='p'))","78032f40":"#print the value of all paragraphs tag\nprint(body.findAll(name='p'))","78ba05ce":"#loop through  each element in <p> tag and print them one by one\nfor p in body.findAll(name='p'):\n    print(p.text)","81c005f4":"# add attributes author also in selection process\nprint(body.findAll(name='p', attrs={\"id\":\"author\"}))","9e9ed722":"#print attributes description along with paragraph\nprint(body.findAll(name='p', attrs={\"id\":\"description\"}))","6625bc73":"# Read and print columns of the table. this can be later stored in the variable and create df to work further. \n#body\nbody = ps.find(name='body')\n#module table \nmodule_table = body.find(name='table', attrs={\"id\":\"workdistribution\"})\n#iterate through each row in the table (skipping the first row)\nfor row in module_table.findAll(name='tr')[1:]:\n    #module title\n    title = row.findAll(name='td')[0].text\n    #module duration\n    duration = int(row.findAll(name='td')[1].text)\n    print(title, duration)","79812b47":"## Data Extraction from API\nFollowing are the steps to extract data from APIs\n  - Import package --- import requests\n  - Use get function to make GET request --- result = requests.get(url)\n  - Status Code --- result.status_code\n  - Header information --- result.headers\n  - Response text --- result.text\n  - Response encoding --- result.encoding","6d5e818c":"## Web Scraping\nHere we will creat an html page and extract data from headers, paragraphs and table. This is just example. \nIn the real world we have to take necessury permission to perform webscrapping for any website. ","c854bf85":"*** Below code is not working in Kaggle however it is working absolutely fine in my local machine. Please refer the screen shots. Also see the subsequent commands for extracting the data in text and json format. You can run in your local.***\n\n![image.png](attachment:image.png)","3fe1f903":"# Data extraction\n - It is one of the most important task data scientist has to perform. In this notebook I will be extracting data from API. \n - Data extraction through API is not working in the kaggle kernal however working absolutely fine in the local jupyter notebook. I could not find the root cause yet. I will update the kernal further once I will figure it out. \n - Please share your comments and other codes in the comment for other types of data extraction. ","786ba2b5":"**Test data:**\nFollowing is the step to get the api details data.gov. You can use any other website for the source.\n - Step 1: Go to the https:\/\/collegescorecard.ed.gov\/data\/documentation\/\n - Step 2: Click on the link on page https:\/\/api.data.gov\/signup.\n - Step 3: Signup to get your key. Check emails to get the key. API Key: 7g1Yt0xxEVGxrd8hovbQunznrPE4oxyJivQsoL4h\n - Step 4. prepare the url  https:\/\/api.data.gov\/ed\/collegescorecard\/v1\/schools?api_key=7g1Yt0xxEVGxrd8hovbQunznrPE4oxyJivQsoL4h\n"}}