{"cell_type":{"f62cfea2":"code","6d325837":"code","89f2caa8":"code","b76925a5":"code","415b9958":"code","52bc6592":"code","a293df28":"code","6d464c6a":"code","c9276f62":"markdown","55e3fe00":"markdown","5548397f":"markdown","74e09b98":"markdown","29e7c00b":"markdown","6c58edcf":"markdown"},"source":{"f62cfea2":"import numpy as np \nimport pandas as pd \nimport os\nimport ipywidgets as widgets\n\nfrom IPython.display import display\nfrom IPython.display import HTML\n","6d325837":"input_dir = '\/kaggle\/input\/aipowered-literature-review-csvs\/kaggle\/working'\ndataframe_collection = {}\n\nfor root, dirs, files in os.walk(input_dir):\n    for table_dir in dirs:\n        df_tables = {}\n        table_dir_path = os.path.join(input_dir, table_dir)\n        for filename in os.listdir(table_dir_path):\n            table_file = os.path.join(table_dir_path, filename)\n            table = pd.read_csv(table_file)\n            df_tables[filename] = pd.read_csv(table_file)\n        \n        dataframe_collection[table_dir] = df_tables\n","89f2caa8":"def make_clickable(url, title):\n    return '<a href=\"{}\">{}<\/a>'.format(url,title)\n\ndef selectCol(x, df):\n    if('Study Link' in df.columns):\n        return x['Study Link']\n    elif ('Link' in df.columns):\n        return x['Link']\n    elif ('URL' in df.columns):\n        return x['URL']\n        \n\ndef link_study_to_url(df):\n    if('Study' in df.columns):\n        df['Study'] = df.apply(lambda x: make_clickable(selectCol(x, df), x['Study']), axis=1) \n    elif('Title' in df.columns):\n        df['Title'] = df.apply(lambda x: make_clickable(selectCol(x, df), x['Title']), axis=1)\n","b76925a5":"def unique_sorted_values(array):\n    unique = list(map(lambda x: x.replace(\".csv\", \"\"),array))\n    unique.sort()\n    return unique","415b9958":"redundant_fields = ['Study Link', 'Link', 'Journal', 'URL']\ndropdowns = {}\nfor name, cat_dict in dataframe_collection.items():\n    dropdowns[name] = widgets.Dropdown(options = unique_sorted_values(set(cat_dict.keys())), description=name, value=None)\n    for key, df in cat_dict.items():\n        link_study_to_url(df)\n        drop_list = [col for col in df.columns if col in redundant_fields]\n        df.drop(drop_list, axis=1, inplace=True) \n        df.drop('Unnamed: 0', axis=1, inplace=True)\n","52bc6592":"output = widgets.Output() \n\ndef key_dropdown_event_handler(change):\n    output.clear_output(wait=True)\n    with output:\n        df = dataframe_collection['Key Scientific Questions'][change.new + '.csv']\n        print(\"Table for {} - {}\".format(change.new, 'Key Scientific Questions'))\n        display(HTML(df.to_html(escape=False)))\n\ndef risk_dropdown_event_handler(change):\n    output.clear_output(wait=True)\n    with output:\n        df = dataframe_collection['Risk Factors'][change.new + '.csv']\n        print(\"Table for {} - {}\".format(change.new, 'Risk Factors'))\n        display(HTML(df.to_html(escape=False)))\n","a293df28":"item_layout = widgets.Layout(display='flex',\n                    flex_flow='row',\n                    align_items='stretch',\n                    width='70%')\n\ninput_widgets = widgets.HBox([dropdowns['Key Scientific Questions'], dropdowns['Risk Factors']],layout=item_layout)\ndropdowns['Key Scientific Questions'].observe(key_dropdown_event_handler, names=\"value\")\ndropdowns['Risk Factors'].observe(risk_dropdown_event_handler, names=\"value\")","6d464c6a":"display(input_widgets)\ndisplay(output)","c9276f62":"### Select a table from either of the dropdowns to display the corresponding table \n\nA sample output is as follows : \n\n![Screen%20Shot%202020-05-06%20at%2012.12.26%20AM.png](attachment:Screen%20Shot%202020-05-06%20at%2012.12.26%20AM.png)","55e3fe00":"# Notebook to visualize tables\n\nThis is a sample submission for the task https:\/\/www.kaggle.com\/antgoldbloom\/aipowered-literature-review-csvs\/tasks?taskId=823 to visualize tables in the dataset.\nMore features are to be added like wrap, scroll, etc. to make the table more readable, user-friendly and to resemble the tables at https:\/\/www.kaggle.com\/covid-19-contributions.\n\nThe aim is to create a interactive widget where one can filter, scroll, selection and click things as necessary.\n","5548397f":"### Helper functions to create hyperlinks for the studies","74e09b98":"### Collecting all the csv files as dataframes in a dictionary, categorized as Key Scientific Questions and Risk Factors","29e7c00b":"### Event handlers to fetch tables according to the dropdown options selected","6c58edcf":"### Create lists for category dropdown options for Key Scientific Questions and Risk Factors"}}