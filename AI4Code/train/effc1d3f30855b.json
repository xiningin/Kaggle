{"cell_type":{"798181f8":"code","31e56a91":"code","72c67f03":"code","0f9dcde6":"code","91ff5a15":"code","a825eb90":"code","f603b1c1":"code","2a6b0524":"code","4befdca4":"code","2d7a1346":"code","626096dd":"code","22ceac02":"code","1d599a86":"code","16ff850e":"code","d690ac1a":"code","684fe6db":"code","cb6f5951":"code","181971c0":"code","7e412730":"code","bf086a24":"code","d5d75320":"code","009732f7":"code","865e7315":"code","47e78fc9":"code","1a78fa09":"code","5311dc6a":"code","2efa2f13":"code","5cc29c21":"code","58a10b00":"code","f5325383":"code","3b1babd4":"code","00501a48":"code","2d9bf4bb":"code","193563eb":"code","fd425418":"code","2a1050cb":"code","c2acf26d":"code","ccada40a":"code","9f794f34":"code","a6369245":"code","d274b8e6":"code","178f26a7":"code","e9d03645":"code","fa2f0670":"code","79bf18ee":"code","db4e406e":"code","d98a81a8":"code","d9722a4c":"code","827c5add":"code","41c27c24":"code","4012fc40":"code","305f02c2":"code","4ab4b45c":"code","d376b7aa":"code","e6160725":"code","4190b567":"code","102883d2":"code","ae355fa4":"code","d790571f":"code","ee32eb0d":"code","3baf9f11":"code","e496eaa6":"code","3d339da4":"code","7953ae7e":"code","a93b849c":"code","221e6a04":"code","e42499e4":"code","175f92db":"code","0391d6a4":"code","628b9ada":"code","ccc36c5c":"code","9432bcb8":"code","e8c13853":"code","8f395f11":"code","a6bf6120":"code","ce48fa13":"code","aaf53225":"code","eab81466":"code","724ea456":"code","2970f923":"code","04fc2df2":"markdown","e2120038":"markdown","aac9eabf":"markdown","ba2a6ef2":"markdown","559fc0fa":"markdown","de961378":"markdown","5a3ad5b8":"markdown","094bfdc2":"markdown","3ec90dc2":"markdown","e547cfbc":"markdown"},"source":{"798181f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","31e56a91":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","72c67f03":"train.head()","0f9dcde6":"test.head()","91ff5a15":"train.isnull().sum()","a825eb90":"test.isnull().sum()","f603b1c1":"train['Embarked'].replace({'S':1,'C':2,'Q':3},inplace=True)","2a6b0524":"test['Embarked'].replace({'S':1,'C':2,'Q':3},inplace=True)","4befdca4":"train['Embarked'].max()","2d7a1346":"train['Embarked'].fillna(value=3,inplace=True)","626096dd":"train.isnull().sum()","22ceac02":"train.shape","1d599a86":"train.drop([\"Cabin\"],axis=1,inplace=True)\ntest.drop([\"Cabin\"],axis=1,inplace=True)","16ff850e":"train.head()","d690ac1a":"test.head()","684fe6db":"train[\"Embarked\"].unique()","cb6f5951":"import re\ndef split_it(data):\n    result = re.search('^.*,(.*)\\.\\s.*$', data)\n    if result.group(1) not in ['Miss', 'Mr', 'Master', 'Mrs']: \n        return 'Misc'\n    else: \n        return result.group(1)\n    \ntrain['Title'] = train['Name'].apply(split_it)\ntest['Title'] = test['Name'].apply(split_it)","181971c0":"train","7e412730":"train[\"Age\"].fillna(train.groupby(\"Title\")[\"Age\"].transform(\"median\"), inplace=True)\ntest[\"Age\"].fillna(test.groupby(\"Title\")[\"Age\"].transform(\"median\"), inplace=True)","bf086a24":"train.isnull().sum()","d5d75320":"test.isnull().sum()","009732f7":"test['Fare'].max()","865e7315":"test['Fare'].fillna(value=512.3292,inplace=True)\n","47e78fc9":"test.isnull().sum()","1a78fa09":"train.drop([\"Name\"], axis=1, inplace = True)\ntest.drop([\"Name\"], axis=1, inplace = True)","5311dc6a":"train.head()","2efa2f13":"train.replace(to_replace='male', value=0, inplace=True)\ntrain.replace(to_replace='female', value=1, inplace=True)","5cc29c21":"train['Sex']","58a10b00":"test.replace(to_replace='male', value=0, inplace=True)\ntest.replace(to_replace='female', value=1, inplace=True)","f5325383":"train.head()","3b1babd4":"train.drop([\"Ticket\"], axis=1, inplace=True)\ntest.drop([\"Ticket\"], axis=1, inplace=True)\ntrain.drop([\"Title\"], axis=1, inplace=True)\ntest.drop([\"Title\"], axis=1, inplace=True)\n","00501a48":"train.head()","2d9bf4bb":"test.head()","193563eb":"train.dtypes","fd425418":"test.dtypes","2a1050cb":"import matplotlib.pyplot as plt\nplt.figure(figsize=(15,8))\nx=train[\"Survived\"].value_counts()\nmylabel=[\"Not survived (0)\",\"Survived(1)\"]\ncolors=['aquamarine','lightblue']\nplt.pie(x,labels=mylabel,autopct=\"%1.1f%%\",startangle=15,shadow=True,colors=colors)\nplt.axis(\"equal\")\nplt.show()","c2acf26d":"train[\"Survived\"].value_counts()","ccada40a":"train['Pclass'].max()","9f794f34":"import seaborn as sns\nplt.figure(figsize=(15,8))\nhue_color={0:'#012a4a',1:'#2c7da0'}\nPclass=['class1','class2','class3']\nax=sns.countplot(data=train,x='Pclass',hue='Survived',palette=hue_color)\nplt.xticks(ticks = [0,1,2], labels = Pclass)\nplt.legend(['Percentage not survived or unknown', 'Percentage of survived'])\nplt.show()","a6369245":"plt.figure(figsize=(15,8))\nY=train[\"Sex\"].value_counts()\nmylabel=[\"Male\",\"Female\"]\ncolors = ['#E63946', '#F1FAEE']\nplt.pie(Y,labels=mylabel,autopct=\"%1.1f%%\",startangle=15,shadow=True,colors=colors)\nplt.axis(\"equal\")\nplt.show()","d274b8e6":"plt.figure(figsize=(15,8))\nhue_color={0:'#8D99AE',1:'#ef233c'}\nSex=['Male','Female']\nax=sns.countplot(data=train,x='Sex',hue='Survived',palette=hue_color)\nplt.xticks(ticks = [0,1], labels = Sex)\nplt.legend(['Percentage not survived or unknown', 'Percentage of survived'])\nplt.show()","178f26a7":"plt.figure(figsize=(15,8))\nsns.countplot(x=train['Survived'],hue=pd.cut(train['Age'],5)) ","e9d03645":"train['SibSp'].value_counts()","fa2f0670":"plt.figure(figsize=(15,8))\nz=train[\"SibSp\"].value_counts()\nmylabel=[0,1,2,3,4,5,8]\ncolors = ['#ede0d4','#e6ccb2','#ddb892','#b08968','#7f5539','#9c6644','#dda15e']\nplt.pie(z,labels=mylabel,autopct=\"%1.1f%%\",startangle=15,shadow=True,colors=colors)\nplt.axis(\"equal\")\nplt.show()","79bf18ee":"plt.figure(figsize=(15,8))\nhue_color={0:'#555b6e',1:'#89b0ae'}\nax=sns.countplot(data=train,x='SibSp',hue='Survived',palette=hue_color)\nplt.legend(['Percentage not survived or unknown', 'Percentage of survived'])\nplt.show()","db4e406e":"plt.figure(figsize=(15,8))\nEmbarked = [\"Southampton\", \"Cherbourg\", \"Queenstown\"]\nsns.countplot(data = train, x='Embarked', hue=train['Survived'])\nplt.xticks(ticks = [0,1,2], labels = Embarked)","d98a81a8":"gender_submission = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")","d9722a4c":"gender_submission.head()","827c5add":"from sklearn.model_selection import train_test_split","41c27c24":"X=train.drop(['Survived'],axis='columns')","4012fc40":"X","305f02c2":"X.dtypes","4ab4b45c":"y=train['Survived']","d376b7aa":"y","e6160725":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)","4190b567":"print(len(X_train),len(y_train),len(X_test),len(y_test))","102883d2":"from sklearn.linear_model import LogisticRegression\nmodel=LogisticRegression(solver='liblinear')","ae355fa4":"model.fit(X_train,y_train)","d790571f":"predictions = model.predict(X_test)","ee32eb0d":"model.score(X_test,y_test)","3baf9f11":"from sklearn import tree","e496eaa6":"model_2=tree.DecisionTreeClassifier()","3d339da4":"model_2.fit(X_train,y_train)","7953ae7e":"predictions_2=model_2.predict(X_test)","a93b849c":"model_2.score(X_test,y_test)","221e6a04":"from sklearn.neighbors import KNeighborsClassifier","e42499e4":"model_3 = KNeighborsClassifier()","175f92db":"model_3.fit(X_train,y_train)","0391d6a4":"predict_3 = model_3.predict(X_test)","628b9ada":"model_3.score(X_test,y_test)","ccc36c5c":"from sklearn.ensemble import RandomForestClassifier","9432bcb8":"model_4 = RandomForestClassifier()","e8c13853":"model_4.fit(X_train,y_train)","8f395f11":"predict_4 = model_4.predict(X_test)","a6bf6120":"model_4.score(X_test, y_test)","ce48fa13":"model_4.fit(X,y)","aaf53225":"pred = model_4.predict(test)","eab81466":"submission = pd.DataFrame({\"PassengerId\": gender_submission[\"PassengerId\"], \"Survived\":pred})","724ea456":"submission","2970f923":"submission.to_csv(\"submission\", index = False)","04fc2df2":"**DecisionTreeClassifier**","e2120038":"# **TRAIN DATA**","aac9eabf":"**RandomForestClassifier**","ba2a6ef2":"**Split_Data**","559fc0fa":"**KNeighborsClassifier**","de961378":"#  **MODEL SELECTION**","5a3ad5b8":"**LogisticRegression**","094bfdc2":"# **DATA VISUALISATION**","3ec90dc2":"# **DATA CLEANING**","e547cfbc":"Observation: Survival chances of class 3 passengers are very less as compared to class 1 and class 2."}}