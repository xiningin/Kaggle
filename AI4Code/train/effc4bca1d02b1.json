{"cell_type":{"497ebd5a":"code","ec9dd994":"code","f8f247fa":"code","5bf7cab9":"code","b7ae5035":"code","ef2e6e5c":"code","fb23acba":"code","fda4af7c":"code","d800d664":"code","bd38a21d":"code","91212eb4":"code","739fbc81":"code","6d6ab7c6":"code","c634f5e2":"code","bbb5c59c":"code","d588c2f3":"code","e8fbe0db":"code","7aa18267":"code","3cbc0407":"code","b88262a4":"code","cfd0333d":"markdown","93f4a514":"markdown","3a96bfb0":"markdown","055decb5":"markdown","07b9fcfd":"markdown","5ba1a0fb":"markdown","cc38c19b":"markdown","55cee12d":"markdown","98f49747":"markdown","23b8e642":"markdown","71b56320":"markdown","1bc5332b":"markdown","9d6882b8":"markdown","b42c7dbb":"markdown","48c0c45f":"markdown","20b74225":"markdown","c1df04cb":"markdown"},"source":{"497ebd5a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\npd.options.mode.use_inf_as_na = True\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats.mstats import gmean\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n# Any results you write to the current directory are saved as output.","ec9dd994":"price_df = pd.read_csv('..\/input\/nyse\/prices.csv')\nsec_df = pd.read_csv('..\/input\/nyse\/securities.csv')\nfund_df = pd.read_csv('..\/input\/nyse\/fundamentals.csv')","f8f247fa":"price_df.head()","5bf7cab9":"price_df.isna().sum()","b7ae5035":"sec_df = sec_df.rename(columns = {'Ticker symbol' : 'symbol','GICS Sector' : 'sector'})\nprice_df  = price_df.merge(sec_df[['symbol','sector']], on = 'symbol')\nprice_df['date'] = pd.to_datetime(price_df['date'])\nprice_df['year'] = price_df['date'].map(lambda x: x.year)\n#return here is log-returns\nprice_df['return'] = np.log(price_df.close \/ price_df.close.shift(1)) + 1\n#delete entries at the start of each stock\nprice_df['return_valid'] = price_df['symbol'] == price_df['symbol'].shift(1)\nprice_df = price_df.drop(price_df[price_df['return_valid'] == False].index)\nprice_df.dropna(how='any', thresh=None, subset=None, inplace = True)\n\nprice_df.tail()","ef2e6e5c":"sns.distplot(price_df['return'])\nprice_df['return'].describe()","fb23acba":"std = price_df['return'].std()\nmean = price_df['return'].mean()\nlow = mean-std*5\nhigh = mean+std * 5\nfig, ax = plt.subplots(figsize = [25,5])\nsns.distplot(np.clip(price_df['return'],low,high), ax = ax)","fda4af7c":"fund_df = fund_df.rename(columns = {'Ticker Symbol' : 'symbol', 'For Year':'year', 'Period Ending': 'date'})\nfund_df  = fund_df.merge(sec_df[['symbol','sector']], on = 'symbol')\nfund_df","d800d664":"risk_free_rate = {2011:0.0198,\n                  2012:0.0178, \n                  2013:0.0304, \n                  2014:0.0217, \n                  2015:0.0227, \n                  2016:0.0244,\n                  2017:0.0241}","bd38a21d":"def f(row):\n    next_year_data = price_df[(price_df['symbol'] == row['symbol']) & (price_df['year'] == row['year']+1)]['return']\n    current_data = price_df[(price_df['symbol'] == row['symbol']) & (price_df['year'] == row['year'])]\n    #print(data)\n    try: \n        calculateRatios(row,next_year_data,current_data['close'],risk_free_rate[row['year']+1])  \n    finally:\n        return row\n\ndef calculateRatios(row,data,pricedata,rf): \n    row['closing_price'] = pricedata.iloc[-1]\n    row['return'] = (np.mean(data) - 1)*len(data)\n    row['stdev'] = data.std()*np.sqrt(len(data))\n    row['sharpe'] = (row['return'] - rf) \/ row['stdev']","91212eb4":"#check that our code outputs correct result\n\nrow = 100\nf_sharpe = fund_df[row:row+1].apply(f, axis = 1)['sharpe']\nprint(fund_df[row:row+1])\n\ndata = price_df[(price_df['symbol'] == 'AME') & (price_df['year'] == 2013)]['return']\nreturns = (np.mean(data) - 1)*len(data)\nprint(returns)\nstdev = data.std()*np.sqrt(len(data))\nprint(stdev)\nsharpe = (returns - risk_free_rate[2013]) \/ stdev\n\nprint(\"Manually Computed: \", sharpe, \" Function Value: \", float(f_sharpe))","739fbc81":"fund_df = fund_df.apply(f, axis = 1)\nfund_df","6d6ab7c6":"fund_df = fund_df.dropna(axis=0, how='any', thresh=None, subset=None, inplace=False)\nsns.countplot(fund_df['year'])","c634f5e2":"sns.distplot(fund_df['sharpe'])\nfund_df['sharpe'].describe()","bbb5c59c":"len(fund_df[fund_df['sharpe'] > 1])\/len(fund_df)","d588c2f3":"fund_df.loc[:,'P\/E'] = fund_df['closing_price']\/fund_df['Earnings Per Share']\nfund_df.loc[:,'TEV\/NI'] = fund_df['Total Liabilities & Equity']\/fund_df['Net Income']\nfund_df.drop('closing_price', axis = 1)","e8fbe0db":"price_df.isna().sum()","7aa18267":"fund_df.isna().sum().sum()","3cbc0407":"sec_df.isna().sum()","b88262a4":"fund_df.to_csv(\"fund.csv\", index=False)\nsec_df.to_csv(\"sec.csv\", index=False)\nprice_df.to_csv(\"price.csv\", index=False)","cfd0333d":"Let's rename the columns to make it easier to manipulate, then add the sector to the fundamental data.","93f4a514":"Hello! We are Victor, Shawn and Yi Jian from Team Nameless! \n\nOur project is on Stocks Data.\n![](https:\/\/i.kym-cdn.com\/photos\/images\/newsfeed\/001\/499\/826\/2f0.png)","3a96bfb0":"## Price Dataset Preparation","055decb5":"Let's calculate the yearly return, std dev and sharpe ratio for the next year, and add that to fund_df. ","07b9fcfd":"Sharpe Ratio is only valid if the returns are normally distributed. Let's take a look at whether this is the case.","5ba1a0fb":"# Section 1: Dataset","cc38c19b":"Final Checks!","55cee12d":"## Sector & Fundamental Data Preparation","98f49747":"# Section 3: Data Preparation","23b8e642":"No missing data! That's great. Let's do some renaming of columns, and calculate the daily return on each stock.","71b56320":"As the risk free rate differs for different years, let's construct a dictionary to hold the rates for each year. We will take the rate as 10-year US Treasury Yields at year-end, from https:\/\/www.macrotrends.net\/2016\/10-year-treasury-bond-rate-yield-chart ","1bc5332b":"Alright! Our Dataset Preparation is done :) Time to export it to the next Kernel","9d6882b8":"## Sharpe Ratio Calculation","b42c7dbb":"# Section 2: Problem Definition\n\nModern Portfolio Theory (MPT) is a Nobel Prize-winning economic theory. It eplains how risk-averse investors can construct portfolios to optimize or maximize expected return based on a given level of market risk.\n\n## Two main types of financial data:\nFundamental Data: Data on the financial status of a company \nOne example is Earnings Per Share, which is the ratio of a company's earnings to the total number of shares.\n\nTechnical Data: Data on the price movements of a stock\nOne example is Sharpe Ratio, which is a measure of return to risk. \n\n## Our Problem:\nWe want to predict a stock's technical data based on its fundamental data. Specifically, we want to predict the next-year's Sharpe Ratio for a stock based on one year's ratio. This should help us construct a better portfolio. ","48c0c45f":"Yup, this looks a lot more normal!","20b74225":"Wow, there are a lot of outliers! Let's remove any outliers 5 standard deviations from the mean.","c1df04cb":"Sharpe Ratio is a measure of a stock's return-to-risk ratio. It is calculated as follows:\n\n![](https:\/\/a.c-dn.net\/c\/content\/igcom\/en_SG\/ig-financial-markets\/market-news-and-analysis\/trading-strategies\/2019\/01\/17\/the-sharpe-ratio-explained\/_jcr_content\/ArticleContent\/image.adaptive.620.high.png\/1547722043070.png)\n"}}