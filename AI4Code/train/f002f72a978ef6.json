{"cell_type":{"13bc6b7d":"code","7743fb3c":"code","aff4833b":"code","3c5f09b1":"code","4a6f531a":"code","e51b840f":"code","77a3809f":"code","279b4b91":"code","070c737b":"code","718ade94":"code","11eee659":"code","bcc13d63":"code","c333e4d2":"code","3a21a40b":"markdown","4d609ca4":"markdown","2e3609d6":"markdown"},"source":{"13bc6b7d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # visualization tool\nimport seaborn as sns # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","7743fb3c":"data = pd.read_csv(\"..\/input\/2017.csv\") # reading csv data through pandas","aff4833b":"data.info() # columns,count,data types","3c5f09b1":"data.columns # columns's names","4a6f531a":"data.rename(columns={\"Country\": \"Country\", \"Happiness.Rank\":\"HappinessRank\",\"Happiness.Score\":\"HappinessScore\",\n                        \"Health..Life.Expectancy.\":\"HealthLifeExpectancy\",\"Whisker.high\":\"WhiskerHigh\",\"Whisker.low\":\"WhiskerLow\",\n                        \"Economy..GDP.per.Capita.\":\"EconomyPerCapital\",\"Freedom\":\"Freedom\",\n                        \"Generosity\":\"Generosity\",\"Trust..Government.Corruption.\":\"TrustGovernmentCorruption\",\n                        \"Dystopia.Residual\":\"DystopiaResidual\"},inplace = True)\n# We are using inplace=True to change column names in place.\ndata.columns # final form of columns's names","e51b840f":"data.head(10) # shows first 10 rows ","77a3809f":"data.describe() # shows values such as max,min,mean (for numeric feature)","279b4b91":"data.corr() # relevance between columns","070c737b":"# correlation map\nf,ax = plt.subplots(figsize=(15, 15))\nsns.heatmap(data.corr(), annot=True, linewidths=.8, fmt= '.2f',ax=ax)\nplt.show()","718ade94":"data.EconomyPerCapital.plot(kind=\"line\",color=\"green\",label=\"EconomyPerCapital\",linewidth=1,alpha=0.8,grid=True,linestyle=':',figsize = (8,8))\ndata.HealthLifeExpectancy.plot(kind=\"line\",color=\"blue\",label=\"HealthLifeExpectancy\",linewidth=1,alpha=0.8,grid=True,linestyle='-.',figsize = (8,8))\nplt.legend(loc='upper left')\nplt.title('Line Plot') \nplt.xlabel(\"Country\")\nplt.ylabel(\"Variables\")\nplt.show()","11eee659":"data.plot(kind=\"scatter\",x=\"EconomyPerCapital\",y=\"HealthLifeExpectancy\",alpha=0.5,color=\"r\",figsize = (6,6))\nplt.title('Scatter Plot') \nplt.xlabel(\"Economy Per Capital\")\nplt.ylabel(\"Health Life Expectancy\")\nplt.show()","bcc13d63":"data.Freedom.plot(kind='hist',bins=60,grid=True,figsize=(10,10)) \nplt.title('Histogram Plot') \nplt.xlabel(\"Freedom\")\nplt.show()","c333e4d2":"NewData = data[(data.Freedom > 0.5) & (data.TrustGovernmentCorruption > 0.4)] # used for filtering\nNewData","3a21a40b":"****You can filter as you like with this way.****","4d609ca4":"****Freedom in countries****","2e3609d6":"****The relationship between Economy per Capita - Health Life Expectancy****"}}