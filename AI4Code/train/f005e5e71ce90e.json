{"cell_type":{"0cdd37c0":"code","7dab45e9":"code","8c8e9e92":"code","c9b055f9":"code","b84fca00":"code","dc435a5c":"code","77bad183":"code","7d97745c":"code","96f9cc7a":"code","5ddfc24e":"code","2170ef9e":"code","44837b97":"code","f168f2b1":"code","05890af7":"code","6e6becad":"code","01045964":"code","df2d6b2e":"code","bffd5fca":"code","e48c33da":"code","c5de858f":"code","d940c102":"code","c8586c26":"code","452bf0ec":"code","e0c3b949":"code","31d8fbae":"code","2dc8c9d6":"code","b7dcd2b4":"code","3e997098":"code","ae7f2140":"markdown"},"source":{"0cdd37c0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7dab45e9":"install.packages(\"tidyverse\")\ninstall.packages(\"lubridate\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"readr\")\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(readr)","8c8e9e92":"> library(tidyverse)\n\u2500\u2500 Attaching packages \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse 1.3.1 \u2500\u2500\n\u2713 ggplot2 3.3.3     \u2713 purrr   0.3.4\n\u2713 tibble  3.1.1     \u2713 dplyr   1.0.5\n\u2713 tidyr   1.1.3     \u2713 stringr 1.4.0\n\u2713 readr   1.4.0     \u2713 forcats 0.5.1\n\u2500\u2500 Conflicts \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse_conflicts() \u2500\u2500\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n> library(lubridate)\n\nAttaching package: \u2018lubridate\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    date, intersect, setdiff, union\n    \n > library(readr)\n\nAttaching package: \u2018readr\u2019\n\nThe following object is masked from \u2018package:scales\u2019:\n\n    col_factor\n\nWarning message:\npackage \u2018readr\u2019 was built under R version 3.6.3   ","c9b055f9":"\"\/kaggle\/working\"","b84fca00":"q2_2018 <- read_csv(\"\/cloud\/project\/Divvy_Trips_2018_Q1.csv\")\nq3_2018 <- read_csv(\"\/cloud\/project\/Divvy_Trips_2018_Q2.csv\")\nq4_2018 <- read_csv(\"\/cloud\/project\/Divvy_Trips_2018_Q3.csv\")\nq1_2028 <- read_csv(\"\/cloud\/project\/Divvy_Trips_2018_Q4.csv\")\n","dc435a5c":"> q2_2018 <- read_csv(\"\/cloud\/project\/Divvy_Trips_2018_Q2.csv\")\n\n\u2500\u2500 Column specification \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\ncols(\n  trip_id = col_double(),\n  start_time = col_datetime(format = \"\"),\n  end_time = col_datetime(format = \"\"),\n  bikeid = col_double(),\n  tripduration = col_number(),\n  from_station_id = col_double(),\n  from_station_name = col_character(),\n  to_station_id = col_double(),\n  to_station_name = col_character(),\n  usertype = col_character(),\n  gender = col_character(),\n  birthyear = col_double()\n)\n\n|===========================================================| 100% 138 MB\n> q3_2018 <- read_csv(\"\/cloud\/project\/Divvy_Trips_2018_Q3.csv\")\n\n\u2500\u2500 Column specification \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\ncols(\n  trip_id = col_double(),\n  start_time = col_datetime(format = \"\"),\n  end_time = col_datetime(format = \"\"),\n  bikeid = col_double(),\n  tripduration = col_number(),\n  from_station_id = col_double(),\n  from_station_name = col_character(),\n  to_station_id = col_double(),\n  to_station_name = col_character(),\n  usertype = col_character(),\n  gender = col_character(),\n  birthyear = col_double()\n)\n\n|===========================================================| 100% 198 MB\n> q4_2018 <- read_csv(\"\/cloud\/project\/Divvy_Trips_2018_Q4.csv\")\n\n\u2500\u2500 Column specification \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\ncols(\n  trip_id = col_double(),\n  start_time = col_datetime(format = \"\"),\n  end_time = col_datetime(format = \"\"),\n  bikeid = col_double(),\n  tripduration = col_number(),\n  from_station_id = col_double(),\n  from_station_name = col_character(),\n  to_station_id = col_double(),\n  to_station_name = col_character(),\n  usertype = col_character(),\n  gender = col_character(),\n  birthyear = col_double()\n)\n\n> q1_2028 <- read_csv(\"\/cloud\/project\/Divvy_Trips_2018_Q1.csv\")\n\n\u2500\u2500 Column specification \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\ncols(\n  trip_id = col_double(),\n  start_time = col_datetime(format = \"\"),\n  end_time = col_datetime(format = \"\"),\n  bikeid = col_double(),\n  tripduration = col_number(),\n  from_station_id = col_double(),\n  from_station_name = col_character(),\n  to_station_id = col_double(),\n  to_station_name = col_character(),\n  usertype = col_character(),\n  gender = col_character(),\n  birthyear = col_double()\n)\n\n ","77bad183":"> q1_2028$to_station_id <- as.numeric(q1_2028$to_station_id)\n> q1_2028$from_station_id <- as.numeric(q1_2028$from_station_id)\n> q2_2018$from_station_id <- as.numeric(q2_2018$from_station_id)\n> q3_2018$from_station_id <- as.numeric(q3_2018$from_station_id)\n> q4_2018$from_station_id <- as.numeric(q4_2018$from_station_id)\n> q2_2018$to_station_id <- as.numeric(q2_2018$to_station_id)\n> q3_2018$to_station_id <- as.numeric(q3_2018$to_station_id)\n> q4_2018$to_station_id <- as.numeric(q4_2018$to_station_id)\n","7d97745c":"> total_bike <- rbind(q1_2028, q2_2018, q3_2018, q4_2018)\n> head(total_bike)\n# A tibble: 6 x 12\n  trip_id start_time          end_time            bikeid tripduration from_station_id\n    <dbl> <dttm>              <dttm>               <dbl>        <dbl>           <dbl>\n1  1.75e7 2018-01-01 00:12:00 2018-01-01 00:17:23   3304          323              69\n2  1.75e7 2018-01-01 00:41:35 2018-01-01 00:47:52   5367          377             253\n3  1.75e7 2018-01-01 00:44:46 2018-01-01 01:33:10   4599         2904              98\n4  1.75e7 2018-01-01 00:53:10 2018-01-01 01:05:37   2302          747             125\n5  1.75e7 2018-01-01 00:53:37 2018-01-01 00:56:40   3696          183             129\n6  1.75e7 2018-01-01 00:56:15 2018-01-01 01:00:41   6298          266             304\n# ... with 6 more variables: from_station_name <chr>, to_station_id <dbl>,\n#   to_station_name <chr>, usertype <chr>, gender <chr>, birthyear <dbl>","96f9cc7a":"total_bike <- total_bike %>%\n  mutate(day_of_week = weekdays(as.Date(start_time)),\n         month = format(start_time, \"%B\"))\ntotal_bike <- total_bike %>%\n  mutate(ride_length = as.numeric(difftime(end_time, start_time, units = \"min\")))\nhead(total_bike)\n","5ddfc24e":"# A tibble: 6 x 15\n  trip_id start_time          end_time            bikeid tripduration from_station_id\n    <dbl> <dttm>              <dttm>               <dbl>        <dbl>           <dbl>\n1  1.75e7 2018-01-01 00:12:00 2018-01-01 00:17:23   3304          323              69\n2  1.75e7 2018-01-01 00:41:35 2018-01-01 00:47:52   5367          377             253\n3  1.75e7 2018-01-01 00:44:46 2018-01-01 01:33:10   4599         2904              98\n4  1.75e7 2018-01-01 00:53:10 2018-01-01 01:05:37   2302          747             125\n5  1.75e7 2018-01-01 00:53:37 2018-01-01 00:56:40   3696          183             129\n6  1.75e7 2018-01-01 00:56:15 2018-01-01 01:00:41   6298          266             304\n# ... with 9 more variables: from_station_name <chr>, to_station_id <dbl>,\n#   to_station_name <chr>, usertype <chr>, gender <chr>, birthyear <dbl>,\n#   day_of_week <chr>, month <chr>, ride_length <dbl>","2170ef9e":"colSums(is.na(total_bike))","44837b97":"colSums(is.na(total_bike))\n          trip_id        start_time          end_time            bikeid \n                0                 0                 0                 0 \n     tripduration   from_station_id from_station_name     to_station_id \n                0                 0                 0                 0 \n  to_station_name          usertype            gender         birthyear \n                0                 0            562505            555209 \n      day_of_week             month       ride_length \n                0                 0                 0 \n> ","f168f2b1":"total_bike_v2 <- total_bike %>%\n  filter(ride_length >= 0)\n\n\nmin(total_bike_v2$ride_length)","05890af7":"head(total_bike_v2)\ntotal_bike_clean <- total_bike_v2 %>%\n  select(-start_time,-end_time,-from_station_id, -to_station_id)\n\nhead(total_bike_clean)","6e6becad":"> head(total_bike_clean)\n# A tibble: 6 x 11\n   trip_id bikeid tripduration from_station_name   to_station_name    usertype gender\n     <dbl>  <dbl>        <dbl> <chr>               <chr>              <chr>    <chr> \n1 17536702   3304          323 Damen Ave & Pierce~ Claremont Ave & H~ Subscri~ Male  \n2 17536703   5367          377 Winthrop Ave & Law~ Clark St & Winnem~ Subscri~ Male  \n3 17536704   4599         2904 LaSalle St & Washi~ Troy St & North A~ Subscri~ Male  \n4 17536705   2302          747 Rush St & Hubbard ~ Larrabee St & Oak~ Subscri~ Male  \n5 17536706   3696          183 Blue Island Ave & ~ Paulina St & 18th~ Subscri~ Male  \n6 17536707   6298          266 Broadway & Wavelan~ Halsted St & Rosc~ Subscri~ Female\n# ... with 4 more variables: birthyear <dbl>, day_of_week <chr>, month <chr>,\n#   ride_length <dbl>","01045964":"colnames(total_bike_clean)  #List of column names\nnrow(total_bike_clean)  #How many rows are in data frame?\ndim(total_bike_clean)  #Dimensions of the data frame?\nhead(total_bike_clean)  #See the first 6 rows of data frame.  \nstr(total_bike_clean)  #See list of columns and data types (numeric, character, etc)","df2d6b2e":"> colnames(total_bike_clean)  #List of column names\n [1] \"trip_id\"           \"bikeid\"            \"tripduration\"      \"from_station_name\"\n [5] \"to_station_name\"   \"usertype\"          \"gender\"            \"birthyear\"        \n [9] \"day_of_week\"       \"month\"             \"ride_length\"      \n> nrow(total_bike_clean)  #How many rows are in data frame?\n[1] 3603075\n> dim(total_bike_clean)  #Dimensions of the data frame?\n[1] 3603075      11\n> head(total_bike_clean)  #See the first 6 rows of data frame.  \n# A tibble: 6 x 11\n   trip_id bikeid tripduration from_station_name   to_station_name    usertype gender\n     <dbl>  <dbl>        <dbl> <chr>               <chr>              <chr>    <chr> \n1 17536702   3304          323 Damen Ave & Pierce~ Claremont Ave & H~ Subscri~ Male  \n2 17536703   5367          377 Winthrop Ave & Law~ Clark St & Winnem~ Subscri~ Male  \n3 17536704   4599         2904 LaSalle St & Washi~ Troy St & North A~ Subscri~ Male  \n4 17536705   2302          747 Rush St & Hubbard ~ Larrabee St & Oak~ Subscri~ Male  \n5 17536706   3696          183 Blue Island Ave & ~ Paulina St & 18th~ Subscri~ Male  \n6 17536707   6298          266 Broadway & Wavelan~ Halsted St & Rosc~ Subscri~ Female\n# ... with 4 more variables: birthyear <dbl>, day_of_week <chr>, month <chr>,\n#   ride_length <dbl>\n> str(total_bike_clean)  #See list of columns and data types (numeric, character, etc)\nspec_tbl_df[,11] [3,603,075 x 11] (S3: spec_tbl_df\/tbl_df\/tbl\/data.frame)\n $ trip_id          : num [1:3603075] 17536702 17536703 17536704 17536705 17536706 ...\n $ bikeid           : num [1:3603075] 3304 5367 4599 2302 3696 ...\n $ tripduration     : num [1:3603075] 323 377 2904 747 183 ...\n $ from_station_name: chr [1:3603075] \"Damen Ave & Pierce Ave\" \"Winthrop Ave & Lawrence Ave\" \"LaSalle St & Washington St\" \"Rush St & Hubbard St\" ...\n $ to_station_name  : chr [1:3603075] \"Claremont Ave & Hirsch St\" \"Clark St & Winnemac Ave (Temp)\" \"Troy St & North Ave\" \"Larrabee St & Oak St\" ...\n $ usertype         : chr [1:3603075] \"Subscriber\" \"Subscriber\" \"Subscriber\" \"Subscriber\" ...\n $ gender           : chr [1:3603075] \"Male\" \"Male\" \"Male\" \"Male\" ...\n $ birthyear        : num [1:3603075] 1988 1984 1989 1983 1989 ...\n $ day_of_week      : chr [1:3603075] \"lunes\" \"lunes\" \"lunes\" \"lunes\" ...\n $ month            : chr [1:3603075] \"enero\" \"enero\" \"enero\" \"enero\" ...\n $ ride_length      : num [1:3603075] 5.38 6.28 48.4 12.45 3.05 ...\n - attr(*, \"spec\")=List of 3\n  ..$ cols   :List of 12\n  .. ..$ trip_id          : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n  .. ..$ start_time       :List of 1\n  .. .. ..$ format: chr \"\"\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_datetime\" \"collector\"\n  .. ..$ end_time         :List of 1\n  .. .. ..$ format: chr \"\"\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_datetime\" \"collector\"\n  .. ..$ bikeid           : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n  .. ..$ tripduration     : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_number\" \"collector\"\n  .. ..$ from_station_id  : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n  .. ..$ from_station_name: list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n  .. ..$ to_station_id    : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n  .. ..$ to_station_name  : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n  .. ..$ usertype         : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n  .. ..$ gender           : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n  .. ..$ birthyear        : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n  ..$ default: list()\n  .. ..- attr(*, \"class\")= chr [1:2] \"collector_guess\" \"collector\"\n  ..$ skip   : int 1\n  ..- attr(*, \"class\")= chr \"col_spec\"","bffd5fca":"total_bike_clean$day_of_week <- ordered(total_bike_clean$day_of_week, levels=c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"))","e48c33da":"my_mode <- function(x) {                     \n  unique_x <- unique(x)\n  tabulate_x <- tabulate(match(x, unique_x))\n  unique_x[tabulate_x == max(tabulate_x)]\n    }","c5de858f":"mode_weekday <- my_mode(total_bike_clean$day_of_week)","d940c102":"\ntotal_bike_summary <- total_bike_clean %>%\n  summarise(\n    mean(ride_length),\n    max(ride_length),\n    min(ride_length),\n    median(ride_length)\n  )","c8586c26":"View(total_bike_summary)","452bf0ec":"\t\nmean(ride_length)\nmax(ride_length)\nmin(ride_length)\nmedian(ride_length)\n1\n23.55243\n239000.7\n1.016667\n11.21667","e0c3b949":"total_bike_clean %>%\ngroup_by(member_casual) %>%\nsummarise(\n  \nmean(ride_length),\nmax(ride_length),\nmin(ride_length),\nmedian(ride_length)\n)","31d8fbae":"> total_bike_clean %>%\n+   group_by(usertype) %>%\n+   summarise(\n+     \n+     mean(ride_length),\n+     max(ride_length),\n+     min(ride_length),\n+     median(ride_length)\n+   )\n# A tibble: 2 x 5\n  usertype  `mean(ride_length~ `max(ride_length~ `min(ride_length~ `median(ride_leng~\n  <chr>                  <dbl>             <dbl>             <dbl>              <dbl>\n1 Customer                62.6           239001.              1.02              27.9 \n2 Subscrib~               14.5           226020.              1.02               9.55\n> ","2dc8c9d6":"total_bike_clean %>% \n  group_by(usertype, day_of_week) %>%  \n  summarise(\n    number_of_rides = n(),\t\t\t\t\t \n    average_duration = mean(ride_length)\n  ) %>% \t\t\n  arrange(usertype, day_of_week)","b7dcd2b4":"> total_bike_clean %>% \n+   group_by(usertype, day_of_week) %>%  \n+   summarise(\n+     number_of_rides = n(),\t\t\t\t\t \n+     average_duration = mean(ride_length)\n+   ) %>% \t\t\n+   arrange(usertype, day_of_week)\n`summarise()` has grouped output by 'usertype'. You can override using the `.groups` argument.\n# A tibble: 2 x 4\n# Groups:   usertype [2]\n  usertype   day_of_week number_of_rides average_duration\n  <chr>      <ord>                 <int>            <dbl>\n1 Customer   NA                   677155             62.6\n2 Subscriber NA                  2925920             14.5\n> ","3e997098":"counts <- aggregate(total_bike_v2$ride_length ~ total_bike_v2$usertype + total_bike_v2$day_of_week, FUN = mean)\nwrite.csv(counts, \"counts.csv\")\ncounts_tripduration <- aggregate(total_bike_v2$tripduration ~ total_bike_v2$usertype + total_bike_v2$day_of_week, FUN = mean)\nwrite.csv(counts_tripduration, \"counts_tripduration.csv\")","ae7f2140":"![https:\/\/public.tableau.com\/profile\/javier2715#!\/vizhome\/Cyclistic\/Dashboard1?publish=yes](http:\/\/)"}}