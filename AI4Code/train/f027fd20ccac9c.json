{"cell_type":{"67868583":"code","f7bf5c5f":"code","53019477":"code","c45a90a1":"code","e2f4bacd":"code","8cd0d627":"code","a7f0a21e":"code","c66ca932":"code","2b585ab1":"code","a6cd69b2":"code","ddf31982":"code","7b66d882":"code","ec6d6378":"code","371764d2":"code","82ef5c1c":"code","4501df17":"code","dc2a1a9c":"code","430e4f3f":"code","6266b1d7":"code","fffaa9ad":"code","3a3f2262":"code","6e691611":"code","2cf74f94":"code","5d773976":"code","1b1ac851":"code","b27837f3":"code","eb71b860":"code","4c59e97a":"code","edc87ad4":"code","59f8e4ee":"code","517e3385":"code","223d9427":"code","e451c0e5":"code","c2b56c03":"code","07560518":"code","6a8fd4ec":"code","8952c5f9":"code","8fb712e9":"markdown","5833c02e":"markdown","79e270eb":"markdown","a8592e01":"markdown","fc806d7d":"markdown","4d8487ab":"markdown","26f45ace":"markdown","a4d2b083":"markdown","ecc047b5":"markdown","f25d55c1":"markdown","e039033a":"markdown","c55a75cc":"markdown","f988315f":"markdown","47bc62b0":"markdown","c130d629":"markdown","a1929f0a":"markdown","1933d73e":"markdown","371f75e9":"markdown","c7b82368":"markdown","9a8eeb0a":"markdown","3f570d92":"markdown","e02850bf":"markdown","9743a1af":"markdown"},"source":{"67868583":"import pandas as pd\nimport numpy as np\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport matplotlib\nimport matplotlib.style\nimport matplotlib as mpl\nmpl.style.use('classic')\nfrom mpl_toolkits.mplot3d import Axes3D","f7bf5c5f":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","53019477":"train = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/train.csv\")\ntrain","c45a90a1":"train.info()","e2f4bacd":"test = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/test.csv\")\ntest","8cd0d627":"oil = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/oil.csv\")\noil","a7f0a21e":"holiday = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/holidays_events.csv\")\nholiday","c66ca932":"type_hols = holiday['locale'].value_counts()\ntype_hols","2b585ab1":"dict_hols = {\"National\":1, \"Regional\":2, \"Local\":3}\nholiday['type_hols'] = holiday['locale'].map(dict_hols)\nholiday","a6cd69b2":"holiday.info()","ddf31982":"holiday2 = pd.DataFrame()\n\nholiday2['date'] = oil['date']\nholiday2['type_hols'] = 0\nholiday2","7b66d882":"type_holiday = []\n\ni = 0\nj = 0\n\nfor i in range(len(holiday2)):\n    for j in range(len(holiday)):\n        if holiday2['date'].iloc[i] == holiday['date'].iloc[j]:\n            num_holiday = holiday['type_hols'].iloc[j]\n            j = j + 1\n            break\n        else:\n            num_holiday = 0\n            j = j + 1\n    type_holiday.append(num_holiday)\n    i = i + 1\nprint(type_holiday)\nprint(len(type_holiday))","ec6d6378":"holiday2['type_hols'] = type_holiday\nholiday2","371764d2":"stores = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/stores.csv\")\nstores","82ef5c1c":"transactions = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/transactions.csv\")\ntransactions","4501df17":"submission = pd.read_csv(\"\/kaggle\/input\/store-sales-time-series-forecasting\/sample_submission.csv\")\nsubmission","dc2a1a9c":"sns.distplot(train['sales'])","430e4f3f":"target = train['sales']\n\ntrain_copy = train\n\ncombi = train_copy.drop(['sales'], axis=1).append(test)\ncombi","6266b1d7":"combi = combi.assign(dcoilwtico=combi.date.map(oil.set_index('date').dcoilwtico))\ncombi","fffaa9ad":"combi = combi.assign(type_hols=combi.date.map(holiday2.set_index('date').type_hols))\ncombi","3a3f2262":"combi.info()","6e691611":"#combi.insert(6,'type_hols', 0)\n#combi","2cf74f94":"#type_holiday = []\n\n#i = 0\n#j = 0\n\n#for i in range(len(combi)):\n#    for j in range(len(holiday)):\n#        if combi['date'].iloc[i] == holiday['date'].iloc[j]:\n#            num_holiday = holiday['type_hols'].iloc[j]\n#            j = j + 1\n#            break\n#        else:\n#           num_holiday = 0\n#           j = j + 1\n#   type_holiday.append(num_holiday)\n#   i = i + 1\n#print(type_holiday)\n#print(len(type_holiday))","5d773976":"combi.isnull().sum()","1b1ac851":"combi['dcoilwtico'] = combi['dcoilwtico'].fillna(0)\ncombi['type_hols'] = combi['type_hols'].fillna(0)\ncombi","b27837f3":"from sklearn import preprocessing\nfrom sklearn.preprocessing import OrdinalEncoder\n\nenc = OrdinalEncoder()\n\nfor col in combi:\n    if combi[col].dtype==\"object\":\n        combi[col] = enc.fit_transform(combi[col].values.reshape(-1,1))\ncombi","eb71b860":"corrmat = combi.corr()\nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(corrmat, vmax=.8, square=True);","4c59e97a":"combi = (combi - combi.min()) \/ (combi.max() - combi.min())\ncombi","edc87ad4":"#combi = (combi = combi.min()) \/ np.std(combi)\n#combi","59f8e4ee":"features = ['date', 'store_nbr', 'family', 'onpromotion', 'dcoilwtico']\n\ny = target\nX = combi[: len(train)][features]\nX_test = combi[len(train) :][features]","517e3385":"from sklearn.model_selection import train_test_split\n\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.1, random_state=42)\nX_train.shape, X_val.shape, y_train.shape,y_val.shape, X_test.shape","223d9427":"from sklearn.linear_model import LinearRegression\n\nmodel = LinearRegression().fit(X_train, y_train)\nprint(model.score(X_train, y_train))","e451c0e5":"y_pred = model.predict(X_val)\nprint(model.score(X_val, y_val))","c2b56c03":"from sklearn import metrics\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_val, y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y_val, y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_val, y_pred)))","07560518":"fig, ax = plt.subplots()\nax.scatter(y_val, y_pred, edgecolors=(0, 0, 0))\nax.plot([y.min(), y.max()], [y.min(), y.max()], 'k--', lw=4)\nax.set_xlabel('Measured')\nax.set_ylabel('Predicted')\nplt.show()","6a8fd4ec":"prediction = model.predict(X_test)\nprediction[prediction < 0] = 0\nsubmission['sales'] = prediction","8952c5f9":"submission.to_csv('submission.csv', index=False)\nsubmission = pd.read_csv(\"submission.csv\")\nsubmission","8fb712e9":"holiday2","5833c02e":"Ordinal encode categories","79e270eb":"Predict on test set","a8592e01":"Analyse target","fc806d7d":"In this competition, you will predict sales for the thousands of product families sold at Favorita stores located in Ecuador. The training data includes dates, store and product information, whether that item was being promoted, as well as the sales numbers. Additional files include supplementary information that may be useful in building your models.","4d8487ab":"Combine holiday and combi","26f45ace":"Heatmap","a4d2b083":"Search for null values","ecc047b5":"Map oil to combi","f25d55c1":"Map holiday to combi","e039033a":"Create new column","c55a75cc":"Combine train and test","f988315f":"Split","47bc62b0":"Load","c130d629":"Map type_hols","a1929f0a":"Define X, y and X_test","1933d73e":"Read files","371f75e9":"Replace nan with 0","c7b82368":"Normalise","9a8eeb0a":"Import","3f570d92":"Select model","e02850bf":"Predict on validation set","9743a1af":"Standardise"}}