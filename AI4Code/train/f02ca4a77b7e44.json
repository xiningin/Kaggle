{"cell_type":{"1b7138b8":"code","4ee03e7a":"code","e576b4b5":"code","dcce1459":"code","87ca9bf1":"code","79ec0ce4":"code","860ec349":"code","f59aeed6":"code","1fbadc9c":"code","149ce610":"code","0069a570":"code","af4829c5":"code","2f3dede7":"code","ae4ca79e":"code","c7ef0408":"code","d1d0a364":"code","4e7b578f":"code","32c1d0d0":"code","fc77a6e0":"code","fb89e4aa":"code","51b8e1da":"code","cea6f73d":"code","4c3a07e5":"code","0f3f727f":"code","d78d047f":"code","f14b008d":"code","8dab79df":"code","ed01c091":"code","df8f1f45":"code","4e5d4ea8":"code","5efcc245":"code","3e2d8114":"code","38705065":"code","22ffc1e9":"markdown"},"source":{"1b7138b8":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns","4ee03e7a":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest  = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\nsub = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","e576b4b5":"train.head()","dcce1459":"train.isna().sum()","87ca9bf1":"plt.style.use('fivethirtyeight')\nsns.distplot(train['SalePrice'])","79ec0ce4":"corr = train.corr()\ncorr","860ec349":"k = 10\n\ncols = corr.nlargest(k,'SalePrice')['SalePrice'].index\ncm = np.corrcoef(train[cols].values.T)\n\nsns.set(font_scale=1.15)\n\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","f59aeed6":"plt.style.use('dark_background')\ncols = ['SalePrice','OverallQual','GrLivArea']\nsns.pairplot(train[cols],size=2.5)","1fbadc9c":"train.sort_values(by='GrLivArea',ascending=False)[:2]","149ce610":"# Deleting the top two data\ntrain = train.drop(index = train[train['Id'] == 1299].index)\ntrain = train.drop(index = train[train['Id'] == 524].index)","0069a570":"cols = ['SalePrice','OverallQual','GrLivArea']\nsns.pairplot(train[cols],size=2.5)","af4829c5":"train_x = train[[\"OverallQual\", \"GrLivArea\"]]\ntrain_y = train[\"SalePrice\"]","2f3dede7":"from sklearn.preprocessing import MinMaxScaler","ae4ca79e":"ms_x = MinMaxScaler()\nms_y = MinMaxScaler()","c7ef0408":"train_y","d1d0a364":"train_y = train_y.values.reshape(-1,1)\ntrain_y","4e7b578f":"train_x","32c1d0d0":"train_x = ms_x.fit_transform(train_x)\ntrain_y = ms_y.fit_transform(train_y)","fc77a6e0":"train_x","fb89e4aa":"train_y","51b8e1da":"from sklearn.linear_model import LinearRegression","cea6f73d":"lm = LinearRegression()","4c3a07e5":"lm.fit(train_x,train_y)","0f3f727f":"# partial regression coefficient\nprint('slope \uff1a {0}'.format(lm.coef_))\n\n# y-intercept\nprint('y-intercept : {0}'.format(lm.intercept_))\n","d78d047f":"lm_pred = lm.predict(train_x)\nlm_pred","f14b008d":"from sklearn import metrics","8dab79df":"print('MAE :', metrics.mean_absolute_error(train_y, lm_pred))\nprint('MSE :', metrics.mean_squared_error(train_y, lm_pred))\nprint('RMSE :', np.sqrt(metrics.mean_squared_error(train_y, lm_pred)))","ed01c091":"test_x = test[['OverallQual','GrLivArea']]\ntest_x","df8f1f45":"test_x = ms_x.fit_transform(test_x)","4e5d4ea8":"test_pred = lm.predict(test_x)","5efcc245":"test_pred = ms_y.inverse_transform(test_pred)\ntest_pred","3e2d8114":"test[\"SalePrice\"] = test_pred\ntest[[\"Id\",\"SalePrice\"]].head()","38705065":"test[[\"Id\",\"SalePrice\"]].to_csv(\".\/submission.csv\",index=False)","22ffc1e9":"Heat Map Shows that OverallQual and GrLivArea are the most correlated to SalePrice"}}