{"cell_type":{"95706cfb":"code","5a157830":"code","b8e6df15":"code","7e718822":"code","ce156cd0":"code","860424e0":"code","8d96b7e4":"code","ffb72f64":"code","a35610e2":"code","e0aaf1e1":"code","1162cc29":"code","8a5c3f3b":"code","30c898b3":"code","3d21a563":"code","1ed78c80":"code","da94b59e":"code","4de8c6c7":"code","fa0ae937":"code","ee545a07":"code","cbb2a59d":"code","cf44d0cd":"code","8ce56d6a":"code","dd2e8a90":"code","034fa347":"code","a70930e5":"code","9ed78f9c":"code","5dcbf77b":"code","b21374cd":"code","a0afedc7":"code","a8893634":"code","a39711e3":"code","20d20b13":"code","63399140":"code","3f479e12":"code","a280a849":"code","1b9f8e35":"code","f931ca4b":"code","0c7e5b73":"code","e89aa586":"code","e6998c4b":"code","2c17d2be":"code","87ffa54b":"code","4b4b37b0":"code","0a73d323":"code","e58f91fc":"code","500308d7":"markdown","bf3ecd5f":"markdown","65c43e45":"markdown","ef02324d":"markdown","b729923a":"markdown","3694af7a":"markdown","33501f96":"markdown","f24b4058":"markdown","a7df00c3":"markdown","20899c2c":"markdown","c7a1c3ee":"markdown","d211bfd4":"markdown","0606b107":"markdown","d8c9394a":"markdown","85e087c3":"markdown","669ac07c":"markdown","1909f826":"markdown","ff5d15c0":"markdown","af1eea4d":"markdown","d43df364":"markdown","2006b0eb":"markdown","32d7dc44":"markdown","97db8620":"markdown","c442301f":"markdown","269f9c6c":"markdown","0d5c3580":"markdown","cd2e846f":"markdown","3073859d":"markdown","278cd400":"markdown","c1b6f4d6":"markdown"},"source":{"95706cfb":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5a157830":"file_path_test = \"..\/input\/house-price-prediction-challenge\/test.csv\"\nfile_path_train = \"..\/input\/house-price-prediction-challenge\/train.csv\"","b8e6df15":"import tensorflow as tf\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","7e718822":"train_data = pd.read_csv(file_path_train)\ntest_data = pd.read_csv(file_path_test)","ce156cd0":"train_data.head(12)","860424e0":"train_data.isnull().sum()","8d96b7e4":"test_data.isnull().sum()","ffb72f64":"sns.distplot(train_data['TARGET(PRICE_IN_LACS)'])","a35610e2":"train_data['TARGET(PRICE_IN_LACS)'].value_counts()","e0aaf1e1":"len(train_data)*(0.03)","1162cc29":"# Remove the price outliers\ntrain_data = train_data.sort_values('TARGET(PRICE_IN_LACS)',ascending=False).iloc[884:] \ntrain_data.describe()","8a5c3f3b":"sns.distplot(train_data['TARGET(PRICE_IN_LACS)'])","30c898b3":"plt.figure(figsize=(12,8))\nsns.scatterplot(x='LONGITUDE',y='LATITUDE',data=train_data,hue='TARGET(PRICE_IN_LACS)', \n                palette = 'RdYlGn', edgecolor = None, alpha = 0.2)","3d21a563":"sns.distplot(train_data['SQUARE_FT'])","1ed78c80":"train_data['SQUARE_FT'].value_counts()","da94b59e":"len(train_data)*(0.03)","4de8c6c7":"# Cleaning the sqaure_ft outliers\ntrain_data = train_data.sort_values('SQUARE_FT',ascending=False).iloc[852:]\ntrain_data.describe()","fa0ae937":"sns.distplot(train_data['SQUARE_FT'])","ee545a07":"train_data['BHK_OR_RK'].value_counts()","cbb2a59d":"# Turning into a binary variable\ntrain_data['BHK_OR_RK'] = train_data['BHK_OR_RK'].replace(to_replace=['BHK', 'RK'], value=[1, 0])   ","cf44d0cd":"train_data.head()","8ce56d6a":"train_data['POSTED_BY'] = train_data['POSTED_BY'].replace(to_replace=['Owner', 'Dealer','Builder'], value=[0, 1, 2]) \ntest_data['POSTED_BY'] = test_data['POSTED_BY'].replace(to_replace=['Owner', 'Dealer','Builder'], value=[0, 1, 2])   ","dd2e8a90":"train_data.corr()['TARGET(PRICE_IN_LACS)']","034fa347":"plt.figure(figsize=(12,10))\nsns.heatmap(train_data.corr(), annot=True, cmap='coolwarm')","a70930e5":"train_data.drop(['ADDRESS'], axis = 1, inplace = True)\ntest_data.drop(['ADDRESS'], axis = 1, inplace = True)","9ed78f9c":"train_data.drop(['BHK_OR_RK'], axis = 1, inplace = True)\ntest_data.drop(['BHK_OR_RK'], axis = 1, inplace = True)","5dcbf77b":"train_data.drop(['READY_TO_MOVE'], axis = 1, inplace = True)\ntest_data.drop(['READY_TO_MOVE'], axis = 1, inplace = True)","b21374cd":"train_data.head()","a0afedc7":"X_train = train_data.drop('TARGET(PRICE_IN_LACS)',axis=1).values\nY_train = train_data['TARGET(PRICE_IN_LACS)'].values\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X_train,Y_train,test_size=0.1,random_state=42)","a8893634":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()","a39711e3":"X_train = scaler.fit_transform(X_train)","20d20b13":"X_test = scaler.transform(X_test)","63399140":"X_train.shape","3f479e12":"X_test.shape","a280a849":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.callbacks import Callback, ModelCheckpoint\nfrom tensorflow.keras.layers import Dropout","1b9f8e35":"model_price = Sequential()\n\n# Number of neurons equal to te feautres on the dataset\nmodel_price.add(Dense(8,activation='relu',input_shape=(8,)))\nmodel_price.add(Dropout(0.5))\nmodel_price.add(Dense(8,activation='relu'))\nmodel_price.add(Dropout(0.5))\nmodel_price.add(Dense(8,activation='relu'))\nmodel_price.add(Dropout(0.5))\nmodel_price.add(Dense(8,activation='relu'))\nmodel_price.add(Dropout(0.5))\nmodel_price.add(Dense(1, activation = 'linear'))\n\nmodel_price.compile(optimizer='adam',loss='mae')","f931ca4b":"from tensorflow.keras.callbacks import EarlyStopping\ncb = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=25)","0c7e5b73":"model_price.fit(x=X_train,y=Y_train, validation_data=(X_test, Y_test), batch_size=128, epochs=150, callbacks=[cb])\n# batch_size in power of two","e89aa586":"losses = pd.DataFrame(model_price.history.history)\nlosses.plot()","e6998c4b":"from sklearn.metrics import mean_absolute_error, max_error, mean_squared_error","2c17d2be":"y_pred = model_price.predict(X_test).reshape(X_test.shape[0])\n\n# Create a dataframe to put the two columns of the true value and the prediction\npred_df = pd.DataFrame({'Actual value':Y_test, 'Predicted value':y_pred})\nprint(pred_df.head())","87ffa54b":"mean_absolute_error(y_true=pred_df['Actual value'], y_pred=pred_df['Predicted value'])","4b4b37b0":"print(mean_squared_error(y_true=pred_df['Actual value'], y_pred=pred_df['Predicted value']))","0a73d323":"from sklearn.metrics import explained_variance_score\nexplained_variance_score(Y_test, y_pred)","e58f91fc":"pd.DataFrame(y_pred).to_csv('submission.csv')","500308d7":"5) BHK or RK","bf3ecd5f":"1) Null Values","65c43e45":"# Feature Engeneering","ef02324d":"2) Price Outliers","b729923a":"1) we conluded that the address is disposable since we have the latitude and longitude, so lets drop if from both datasets","3694af7a":"Features Columns:\n\nPOSTED_BY -\tCategory marking who has listed the property\n\nUNDER_CONSTRUCTION - Under Construction or Not\n\nRERA - Rera approved or Not\n\nBHK_NO - Number of Rooms\n\nBHK_OR_RK - Type of property\n\nSQUARE_FT - Total area of the house in square feet \n\nREADYTOMOVE - Category marking Ready to move or Not\n\nRESALE - Category marking Resale or not\n\nADDRESS - Address of the property\n\nLONGITUDE - Longitude of the property\n\nLATITUDE - Latitude of the property\n\nTARGET(PRICE_IN_LACS) - The price of the property\n\nIn total we have 12 features","33501f96":"So we need to clean also some outliers from the square feat feature.","f24b4058":"4) Square_Ft","a7df00c3":"# Training The Model","20899c2c":"With the correlation we see that the price is related more with the Resale, Number of rooms, square feat, posted by. Lets see the all picture of all the features using sns heatmap.","c7a1c3ee":"3) Latitude and Longitude","d211bfd4":"We can see outliers from 4000 to higher prices since we do not have much data on that so we can clean them.\nLets start to clear 5% of the higher values of the price.","0606b107":"Now we cleaned the feature 'SQUARE_FT', eliminating the outliers.","d8c9394a":"Now we convert the 'BHK_OR_RK' feature to 0 and 1 to be easy to analyse.","85e087c3":"This data set was taken from: https:\/\/www.kaggle.com\/anmolkumar\/house-price-prediction-challenge","669ac07c":"Here we will study the features and its importance to the prediction of the house price.","1909f826":"According to the heatmap the 'Ready_to_move' feature is 100% related with the 'Under_construction' feature, so we need to remove one to avoid overfitting.","ff5d15c0":"Here we can see the scatter of longitude and latitude and see the areas with more houses to sell along with the most expensive ones. Hilighting the importance of this data to the model. Now we can discard the address since we have the latitude and longitude, avoiding overfitting.","af1eea4d":"6) Conversion of the 'Posted By' to numerical feature","d43df364":"Based on the conclusions we obtained in the previous section we will drop some disposable features and features that my cause overfiting.","2006b0eb":"3) As mentioned in the previous section 'Ready to move' feature is 100% correlated with the 'under construction' feature so to avoid overfitting we drop one of them.","32d7dc44":"# House Prices In India","97db8620":"# Scaling","c442301f":"Now we obtained a distribution plot with the most comun prices we have, so we cleaned the price outliers.","269f9c6c":"# Test and Evaluate the Model","0d5c3580":"# Train Test Split","cd2e846f":"2) We easely see that the feature BHK_OR_RK is unbalanced and has less correlation with the price so we can drop it","3073859d":"# Creating a Model","278cd400":"# Processing the Data","c1b6f4d6":"7) Data Correlation"}}