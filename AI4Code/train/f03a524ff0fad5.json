{"cell_type":{"9c4fdc3b":"code","e17311b5":"code","fbf7e1be":"code","28e11a4d":"code","29361478":"code","45d6597d":"code","d5278a89":"code","96213448":"code","69ba06ce":"code","30be09e0":"code","696eba89":"code","29e645ca":"code","8cd628ea":"code","46ae5deb":"code","7d0e4b0a":"code","ded02a53":"code","8e0b0c66":"code","e27b7ef2":"code","e9c0da83":"code","1e46bed9":"markdown","27ab9ce2":"markdown","efcc5071":"markdown","7c21ab44":"markdown","903cc419":"markdown","a5fcd4bc":"markdown","14336e6f":"markdown","b88fbe3f":"markdown","6dfa7bec":"markdown","c26ef16a":"markdown","46142d96":"markdown","7371d8c6":"markdown","03a14b3e":"markdown","a67ee8fc":"markdown","fc88fe77":"markdown","514bec81":"markdown","e2c096df":"markdown","948c4d21":"markdown","09560cff":"markdown","c7670161":"markdown","8d9a68b2":"markdown","0ede0e7d":"markdown"},"source":{"9c4fdc3b":"#Import Packages\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as mlib\nprint('Setup complete')","e17311b5":"#import data\npath_train = '..\/input\/30-days-of-ml\/train.csv'\npath_test = '..\/input\/30-days-of-ml\/test.csv'\npath_submission = '..\/input\/30-days-of-ml\/sample_submission.csv'\ntrain_data = pd.read_csv(path_train)\ntest_data = pd.read_csv(path_test)\nsubmission = pd.read_csv(path_submission)\nprint('Import has been completed!')","fbf7e1be":"#choose numeric variables\nresponse = 'target'\nID = 'id'\n\nnum_cols = train_data[[column for column in train_data.columns.tolist()\n                      if (train_data[column].dtypes == 'float64' or train_data[column].dtypes == 'int64') and column != response and column != ID]].columns.tolist()\n\n\nnumeric_train = train_data[num_cols]\nnumeric_test = test_data[num_cols]\n\nnumeric_train.head(3)","28e11a4d":"cat_cols = train_data[[column for column in train_data.columns.tolist()\n                      if train_data[column].dtypes == 'object' and column != response and column != ID]].columns.tolist()\n\ncategoric_train = train_data[cat_cols]\ncategoric_test = test_data[cat_cols]\n\ncategoric_train.head(3)","29361478":"\"\"\" D\u0259yi\u015f\u0259nl\u0259ri \"bool\" (\"boolean\" - ikili) v\u0259 \"multi\" olaraq qrupla\u015fd\u0131rd\u0131q.\nBurada da t\u0259hlil zaman\u0131 istifad\u0259 etdiyimiz ifad\u0259ni istifad\u0259 etdik.\n\"\"\"\n# kardinall\u0131\u011f\u0131 2-y\u0259 b\u0259rab\u0259r olan s\u00fctunlar\u0131n adlar\u0131\nbool_cols = categoric_train[[column for column in categoric_train.columns.tolist()\n    if categoric_train[column].nunique() == 2]].columns.tolist()\n\n# kardinall\u0131\u011f\u0131 [3;6] aral\u0131\u011f\u0131nda olan s\u00fctunlar\u0131n adlar\u0131\nmulti_cols = categoric_train[[column for column in categoric_train.columns.tolist()\n    if categoric_train[column].nunique() >= 3\n    and categoric_train[column].nunique() <= 6]].columns.tolist()\n\nbool_train = categoric_train[bool_cols]\nmulti_train = categoric_train[multi_cols]\nbool_test = categoric_test[bool_cols]\nmulti_test = categoric_test[multi_cols]\n\ntrain_data[['cat0_dumm', 'cat1_dumm', 'cat2_dumm']] = pd.get_dummies(train_data[bool_cols], drop_first = True)\n\ntest_data[['cat0_dumm', 'cat1_dumm', 'cat2_dumm']] = pd.get_dummies(test_data[bool_cols], drop_first = True)\n# daha sonra \"dummy\" s\u00fctunlar\u0131n adlar\u0131n\u0131 siyah\u0131 \u015f\u0259klind\u0259 formala\u015fd\u0131r\u0131r\u0131q\n\ntrain_data[['cat0_dumm', \"cat0\", 'cat1_dumm', \"cat1\", 'cat2_dumm', \"cat2\"]].head(5)\n\nbool_dummy_cols =  ['cat0_dumm', 'cat1_dumm', 'cat2_dumm']\n\ntype(bool_dummy_cols)","45d6597d":"\"\"\" optional cell \"\"\"\nfor col in multi_cols:\n    categories = pd.DataFrame(train_data[col].value_counts(sort=True)).reset_index()['index'].tolist()\n    print(categories)","d5278a89":"labels1 = np.array(pd.DataFrame(train_data['cat3'].value_counts(sort=True, ascending = True)).reset_index().reset_index()[['index', 'level_0']]).tolist()\nlabels2 = np.array(pd.DataFrame(train_data['cat4'].value_counts(sort=True, ascending = True)).reset_index().reset_index()[['index', 'level_0']]).tolist()\nlabels3 = np.array(pd.DataFrame(train_data['cat5'].value_counts(sort=True, ascending = True)).reset_index().reset_index()[['index', 'level_0']]).tolist()\n\nprint(labels1)\nprint(\"\")\nprint(labels2)\nprint(\"\")\nprint(labels3)\nprint(\"\")\n\n\"\"\" \n\"Dictionary\" \"{}\" m\u00f6t\u0259riz\u0259 il\u0259 yarad\u0131l\u0131r. Burada bir ifad\u0259ni yaz\u0131b\nqar\u015f\u0131s\u0131na \":\" qoyaraq onun t\u0259rkibini, ya da m\u0259nas\u0131n\u0131 yaz\u0131r\u0131q.\nEnil\u0259 l\u00fc\u011f\u0259tl\u0259rd\u0259 oldu\u011fu kimi.\n\nA\u015fa\u011f\u0131dak\u0131 kod [0;3] aral\u0131\u011f\u0131nda (\u00e7\u00fcnki bizim h\u0259r s\u00fctunda 4 d\u0259y\u0259r var v\u0259 \"Python\"-da s\u0131ralama 0-dan ba\u015flay\u0131r)\nolan s\u0131ra n\u00f6mr\u0259l\u0259ri \u00fc\u00e7\u00fcn \"list\" daxilind\u0259 \"i\" n\u00f6mr\u0259li c\u00fctl\u0259rin i\u00e7ind\u0259 0-c\u0131 v\u0259 1-ci s\u0131radak\u0131 d\u0259y\u0259rl\u0259ri \u00e7\u0131xar\u0131r.\nN\u0259tic\u0259d\u0259, h\u0259r d\u0259y\u0259rin qar\u015f\u0131s\u0131na \u00f6z s\u0131ra n\u00f6mr\u0259sinin yaz\u0131ld\u0131\u011f\u0131 bir \"dictionary\" t\u0259rtib edirik.\n\nBu prosesi h\u0259r 3 s\u00fctun \u00fc\u00e7\u00fcn t\u0259krarlay\u0131r\u0131q.\n\"\"\"\ndict1 = {labels1[i][0]:labels1[i][1] for i in range(4)}\ndict2 = {labels2[i][0]:labels1[i][1] for i in range(4)}\ndict3 = {labels3[i][0]:labels1[i][1] for i in range(4)}\n\nprint(\"\")\nprint(dict1)\nprint(\"\")\nprint(dict2)\nprint(\"\")\nprint(dict3)","96213448":"\"\"\"\nDaha sonra h\u0259m \"train\", h\u0259m \"test\" datada yeni s\u00fctun yaradaraq\n\"map\" funksiyas\u0131 il\u0259 d\u0259y\u0259rl\u0259rin s\u0131ra n\u00f6mr\u0259sini \u0259lav\u0259 edirik.\n\"\"\"\n\ntrain_data['cat_or1'] = train_data.cat3.map(dict1)\ntrain_data['cat_or2'] = train_data.cat4.map(dict2)\ntrain_data['cat_or3'] = train_data.cat5.map(dict3)\n\ntest_data['cat_or1'] = test_data.cat3.map(dict1)\ntest_data['cat_or2'] = test_data.cat4.map(dict2)\ntest_data['cat_or3'] = test_data.cat5.map(dict3)\n\n\"\"\"\nYaratd\u0131\u011f\u0131m\u0131z yeni s\u00fctunlar\u0131n adlar\u0131n\u0131 bir siyah\u0131ya toplay\u0131r\u0131q ki,\ndatan\u0131n i\u00e7nd\u0259n onlar\u0131 rahatl\u0131qla se\u00e7\u0259k.\n\"\"\"\n\nmulti_ord_cols = ['cat_or1', 'cat_or2', 'cat_or3']","69ba06ce":"#choose x and y for train data\nx_train = train_data[num_cols + bool_dummy_cols + multi_ord_cols]\ny_train = train_data['target']\nprint(x_train.head(2))\nprint(y_train.head(2))\n\n#choose x for test data\nx_test = test_data[num_cols + bool_dummy_cols + multi_ord_cols]\nprint(x_test.head(2))","30be09e0":"#split train data\nfrom sklearn.model_selection import train_test_split as tts\nx_tr_train, x_tr_test, y_tr_train, y_tr_test = tts(x_train, y_train, test_size = 0.2, random_state = 33)\n","696eba89":"#import Random Forest Regressor\nfrom sklearn.ensemble import RandomForestRegressor","29e645ca":"# defining model\nregress = RandomForestRegressor(n_estimators = 10, max_depth = 5, random_state = 33)","8cd628ea":"#fit\nregress.fit(x_tr_train, y_tr_train)","46ae5deb":"#predict\ny_tr_predict = regress.predict(x_tr_test)","7d0e4b0a":"y_tr_predict","ded02a53":"#import package\nfrom sklearn.metrics import mean_squared_error\n\n#evaluate\n\nmean_squared_error(y_tr_predict, y_tr_test)","8e0b0c66":"#prediction with regress model\ny_predict = regress.predict(x_test)","e27b7ef2":"# add id column\nprediction = pd.concat([test_data['id'], pd.DataFrame(y_predict)], axis=1)\n# rename columns\nprediction.columns = ['id', 'target']\n# save as \".csv\"\nprediction.to_csv('ml_30_1st_try.csv', index = False)\n# print shape (optional)\nprediction.shape","e9c0da83":"print(\"U\u011furlar!\")\nprint('Good luck!')","1e46bed9":"# **\u00c7oxsinifli d\u0259yi\u015f\u0259nl\u0259rin ordinal d\u0259yi\u015f\u0259n\u0259 \u00e7evrilm\u0259si**\n# **Ordinal encodding for multiclass variables**\n\n# *By Sitara Aghayeva*","27ab9ce2":"T\u0259hlili apard\u0131qdan sonra kateqorik d\u0259yi\u015f\u0259nl\u0259ri \u0259d\u0259dl\u0259rl\u0259 ifad\u0259 etm\u0259k \u00fc\u00e7\u00fcn kod yazma\u011fa ba\u015flaya bil\u0259rik. M\u0259n burada he\u00e7 bir \"endodder\" funksiyadan istifad\u0259 etm\u0259y\u0259c\u0259y\u0259m. Onun \u0259v\u0259zin\u0259 \"map\" funksiyas\u0131  v\u0259 \"dictinoary\"-d\u0259n istifad\u0259 ed\u0259c\u0259y\u0259m. \"map\" funksiyas\u0131 \"Excel\"-d\u0259ki \"lookup\" funksiyas\u0131 kimidir. Onu \"SQL\"-d\u0259ki \"join\"-l\u0259r\u0259 d\u0259 b\u0259nz\u0259tm\u0259k olar.\n\n\"Join\" ed\u0259 bilm\u0259k \u00fc\u00e7\u00fcn \u0259laq\u0259li databazalarda \"fact\" v\u0259 \"dimension\" c\u0259dv\u0259ll\u0259ri olur. \"fact\" c\u0259dv\u0259li laz\u0131m olan \u0259sas datan\u0131 \u00f6z\u00fcnd\u0259 saxlay\u0131r, \"dimension\" c\u0259dv\u0259li is\u0259 data il\u0259 baxl\u0131 t\u0259sviri m\u0259lumatlar\u0131. M\u0259s\u0259l\u0259n, \"fact\" c\u0259dv\u0259lind\u0259 m\u00fc\u015ft\u0259rinin identifikasiya n\u00f6mr\u0259si, \u0259m\u0259liyyat m\u0259bl\u0259\u011fi, ald\u0131\u011f\u0131 m\u0259hsullar\u0131n say\u0131, ma\u011fazaya g\u0259ldiyi tarixl\u0259r qeyd olunursa, \"dimension\" c\u0259dv\u0259lind\u0259\" m\u00fc\u015ft\u0259ril\u0259rin \u015f\u0259xsi m\u0259lumatlar\u0131 qeyd olunur. V\u0259 biz m\u00fc\u015ft\u0259rinin identifikasiya n\u00f6mr\u0259sini \"foreign key\" kimi istifad\u0259 ed\u0259r\u0259k, \"dimension\" c\u0259dv\u0259lind\u0259ki \u015f\u0259xsi m\u0259lumatlar\u0131 \"fact\" c\u0259dv\u0259lin\u0259 birl\u0259\u015fdiririk. \n\n\"Map\" funskiyas\u0131 da bunu edir. \"dictionary\" burada \"dimension\" c\u0259dv\u0259li rolunu oynay\u0131r. Biz \u0259vv\u0259lc\u0259, \"dictionary\" yaradaraq h\u0259r d\u0259y\u0259r\u0259 m\u00fc\u0259yy\u0259n bir \u0259d\u0259d t\u0259yin ed\u0259c\u0259yik. Daha sonra \"map\" vasit\u0259sil\u0259 bu \u0259d\u0259dl\u0259ri \u0259sas c\u0259dv\u0259ld\u0259 h\u0259r d\u0259y\u0259rin qar\u015f\u0131s\u0131nda g\u00f6st\u0259r\u0259c\u0259yik. Y\u0259ni yeni s\u00fctun yaradaca\u011f\u0131q.\n\nBizim datada kateqqorik d\u0259yi\u015f\u0259nl\u0259rin n\u0259yi ifad\u0259 etdiyini bilm\u0259diyimiz \u00fc\u00e7\u00fcn, onlar\u0131n ard\u0131cll\u0131\u011f\u0131 m\u00fc\u0259yy\u0259n etm\u0259k olmur. Amm onlar\u0131 bel\u0259 bir \u00fcsulla s\u0131ralamaq olar:\n\nH\u0259r bir d\u0259y\u0259ri i\u015fl\u0259nm\u0259 say\u0131na g\u00f6r\u0259 artan s\u0131ra il\u0259 n\u00f6mr\u0259l\u0259yirik. Y\u0259ni \u0259n \u00e7ox t\u0259krarlanan d\u0259y\u0259r \u0259n yuxar\u0131 qiym\u0259ti al\u0131r.\n\nBunu is\u0259 a\u015fa\u011f\u0131dak\u0131 kod vasit\u0259sil\u0259 ed\u0259c\u0259yik.\n\n> train_data['cat3'].value_counts(sort=True, ascending = True)\n\ns\u00fctundak\u0131 d\u0259y\u0259rl\u0259rin say\u0131n\u0131 tap\u0131b artan s\u0131ra il\u0259 (azdan \u00e7oxa do\u011fru) d\u00fcz\u00fcr\u00fck.\n\n> pd.DataFrame()\n\n\"reset_index\" funksiyas\u0131ndan stifad\u0259 ed\u0259 bilm\u0259k \u00fc\u00e7\u00fcn n\u0259tic\u0259ni \"data frame\"-\u0259 \u00e7eviririk.\n\n> .reset_index().reset_index()\n\nindeksi 2 d\u0259f\u0259 yenil\u0259yirik. \u00c7\u00fcnki bu d\u0259f\u0259 h\u0259m d\u0259 d\u0259y\u0259rl\u0259rin ard\u0131c\u0131ll\u0131\u011f\u0131n\u0131 g\u00f6st\u0259r\u0259n s\u0131ra n\u00f6mr\u0259sini g\u00f6rm\u0259k ist\u0259yirik. Bu biz\u0259 \"dictionary\" yaratmaqda k\u00f6m\u0259k ed\u0259c\u0259k.\n\n> [['index', 'level_0']]\n\ns\u0131ra n\u00f6mr\u0259sini v\u0259 d\u0259y\u0259rl\u0259rin adlar\u0131n\u0131 \u00e7\u0131xar\u0131r\u0131q. D\u0259y\u0259rl\u0259rin say\u0131 biz\u0259 laz\u0131m deyil.\u00c7\u00fcnki art\u0131q s\u0131ralaman\u0131 \"level_0\" s\u00fctunu vasit\u0259sil\u0259 g\u00f6r\u0259 bil\u0259c\u0259yik.\n\n>  np.array()\n\n\"tolist()\" funsiyas\u0131ndan istifad\u0259 ed\u0259 bilm\u0259k \u00fc\u00e7\u00fcn n\u0259tic\u0259ni \"array\"-\u0259 \u00e7eviririk.\n \n> ).tolist()\n\nn\u0259ic\u0259ni \"list\"-\u0259 \u00e7eviririk.\n\n> labels1 =\n\nn\u0259tic\u0259ni d\u0259yi\u015f\u0259n\u0259 m\u0259nis\u0259dirik.\n\nBu \u00fcsulu h\u0259r 3 s\u00fctun \u00fc\u00e7\u00fcn t\u0259tbiq edirik.","efcc5071":"# Modell\u0259\u015fdirm\u0259 - Modelling","7c21ab44":"Xat\u0131rlay\u0131rs\u0131nza, biz \"train\" datam\u0131z\u0131 iki hiss\u0259y\u0259 b\u00f6l\u00fcb, onun sad\u0259c\u0259 bir hiss\u0259sini modeld\u0259 istifad\u0259 etmi\u015fdik. N\u0259tic\u0259 q\u0259na\u0259tb\u0259x\u015f olduqdan sonra, b\u0259z\u0259n modeli b\u00fct\u00fcn \"trainset\" \u00fcz\u0259rind\u0259 yenid\u0259n \"train\" edirl\u0259r. \n\n> #fit\n> regress.fit(train_data, test_data)","903cc419":"# \u018fsas kitabxanalar\u0131n y\u00fckl\u0259nm\u0259si - Importing main libraries","a5fcd4bc":"T\u0259brikl\u0259r!\n\nModeliniz v\u0259 n\u0259tic\u0259niz haz\u0131rd\u0131r!\n\nArt\u0131q n\u0259tic\u0259ni y\u00fckl\u0259y\u0259r\u0259k \"qiym\u0259t l\u00f6vh\u0259sind\u0259\" yerinizi ala bil\u0259rsiniz.","14336e6f":"Daha sonra \u0259d\u0259di d\u0259yi\u015f\u0259nl\u0259rimizi \"X\" kimi, h\u0259d\u0259f d\u0259yi\u015f\u0259ni is\u0259 \"y\" kimi i\u015far\u0259l\u0259yirik. \n\n**Qeyd:** Yuxar\u0131dak\u0131 funksiyada \"numeric_train\" v\u0259 \"numeric_test\" yazmaq yerin\u0259 onlar\u0131 birba\u015fa \"x\" v\u0259 \"y\" kimi adland\u0131ra bil\u0259rdik. Amma biz \"x\" d\u0259yi\u015f\u0259nl\u0259rin siyah\u0131s\u0131n\u0131 d\u0259yi\u015f\u0259 bil\u0259rik. Bu s\u0259b\u0259bd\u0259n onlar\u0131 kateqorik, \u0259d\u0259di, v\u0259 s. m\u00fcxt\u0259lif qruplara b\u00f6l\u00fcb ayr\u0131-ayr\u0131l\u0131qda d\u0259yi\u015f\u0259n kimi saxlamaq biz\u0259 onlar\u0131 asanl\u0131qla tapma\u011fa v\u0259 \"x\"-\u0259 daxil olan d\u0259yi\u015f\u0259nl\u0259ri uzun kodlar yazmadan d\u0259yi\u015fm\u0259y\u0259 k\u00f6m\u0259k edir. H\u0259m\u00e7inin yazd\u0131\u011f\u0131m\u0131z kod daha oxunaql\u0131 olur.","b88fbe3f":"\u0130ndi is\u0259 \"multiclass\" d\u0259yi\u015f\u0259nl\u0259ri ordinal d\u0259yi\u015f\u0259n\u0259 \u00e7evr\u0259c\u0259yik. Ordinal d\u0259yi\u015f\u0259nd\u0259 d\u0259y\u0259rl\u0259r aras\u0131nda ard\u0131cll\u0131q \u0259laq\u0259si var. Ona g\u00f6r\u0259 model bizim d\u0259yi\u015f\u0259nd\u0259ki d\u0259y\u0259rl\u0259rin s\u0131ra n\u00f6mr\u0259sini d\u0259 n\u0259z\u0259r\u0259 alacaq. M\u0259s\u0259l\u0259n, biz \"raz\u0131yam\" ifad\u0259sini 1, \"\u00e7ox raz\u0131yam\" ifad\u0259sin\u0259 2, \"raz\u0131 deyil\u0259m\" ifad\u0259sin\u0259 0 vers\u0259k, model bu ard\u0131c\u0131ll\u0131\u011f\u0131  \"\u00e7ox raz\u0131yam\" >  \"raz\u0131yam\" > \"raz\u0131 deyil\u0259m\" kimi q\u0259bul ed\u0259c\u0259k.\n\nBiz\u0259 m\u00fcsabiq\u0259 \u00e7\u0259r\u00e7iv\u0259sind\u0259 veril\u0259n datada biz s\u00fctunlar\u0131n ordinal olub olmad\u0131\u011f\u0131n\u0131 ba\u015fa d\u00fc\u015fm\u00fcr\u00fck. Ona g\u00f6r\u0259 b\u0259xtimizi s\u0131nay\u0131r\u0131q. Ancaq real data il\u0259 i\u015fl\u0259diyimiz zaman \"encodding\" (y\u0259ni kateqorik d\u0259yi\u015f\u0259nl\u0259rin \u0259d\u0259d \u00e7evrilm\u0259si) prosesind\u0259 buna fikir verm\u0259liyik. M\u0259s\u0259l\u0259n, \u0259g\u0259r d\u0259yi\u015f\u0259nimiz universitetl\u0259rin adlar\u0131ndan, v\u0259 ya \u015f\u0259h\u0259rl\u0259rd\u0259n ibar\u0259tdirs\u0259, onlar\u0131 \"ordinal encode\" etm\u0259k do\u011fru olmaz.\n\n\"Binary\" d\u0259yi\u015f\u0259nl\u0259rin emal\u0131 prosesi \u00fc\u00e7\u00fcn bu ke\u00e7idd\u0259ki \"notebook\"-a n\u0259z\u0259r sala bil\u0259rsiniz:\nhttps:\/\/www.kaggle.com\/sitaraaghayeva\/30-days-of-ml-encodding","6dfa7bec":"\u00d6t\u0259n d\u0259f\u0259 sizinl\u0259 \"pd.get_dummies\" vasit\u0259sil\u0259 kateqorik d\u0259yi\u015f\u0259nl\u0259ri \"binary\" d\u0259yi\u015f\u0259n\u0259 \u00e7evirm\u0259yi \u00f6yr\u0259ndik.\n\nBu d\u0259f\u0259 is\u0259 \u00e7oxsinifli kateqorik d\u0259yi\u015f\u0259nl\u0259ri ordinal d\u0259yi\u015f\u0259n\u0259 \u00e7evir\u0259c\u0259yik. Y\u0259ni s\u00fctunun i\u00e7ind\u0259ki d\u0259y\u0259rl\u0259ri ard\u0131c\u0131l tam \u0259d\u0259dl\u0259r\u0259 \u00e7evir\u0259c\u0259yik.","c26ef16a":"# \"Test\" data \u00fcz\u0259rind\u0259 proqnozla\u015fd\u0131rma - Prediction for test data","46142d96":"Model qurmaq anlay\u0131\u015f\u0131 bir q\u0259d\u0259r m\u00fcr\u0259kk\u0259b v\u0259 m\u00f6c\u00fcz\u0259vi g\u00f6r\u00fcn\u0259 bil\u0259r. Lakin modelin kodla\u015fd\u0131rma hiss\u0259si olduqca sad\u0259dir.\n\u018fg\u0259r **\"Python\"** \u00fczr\u0259 ilkin bilikl\u0259riniz varsa, siz d\u0259 ilk modelinizi a\u015fa\u011f\u0131dak\u0131 izahata v\u0259 \u015fablona \u0259sas\u0259n qura bil\u0259rsiniz.","7371d8c6":"\u018fn sonda n\u0259tic\u0259ni \".csv\" format\u0131na \u00e7eviririk. \n\nModeld\u0259 **\"id\"** - y\u0259ni identifikasiya n\u00f6mr\u0259si d\u0259yi\u015f\u0259n kimi istifad\u0259 olunmad\u0131\u011f\u0131 \u00fc\u00e7\u00fcn \u00e7\u0131xar\u0131l\u0131r.\n\nN\u0259tic\u0259ni g\u00f6nd\u0259rm\u0259mi\u015fd\u0259n qabaq **\"id\" s\u00fctunu n\u0259tic\u0259y\u0259 \u0259lav\u0259 olunmal\u0131d\u0131r**. \u018fks t\u0259qdird\u0259 n\u0259tic\u0259ni **\"submit\"** etdikd\u0259 x\u0259ta ba\u015f ver\u0259c\u0259k.\n\n**Eyni \u015f\u0259kild\u0259, s\u00fctun adlar\u0131n\u0131n do\u011fru oldu\u011funa da fikir verm\u0259liyik.**","03a14b3e":"\u018fvv\u0259lki \"notebook\"-muzda kateqorik d\u0259yi\u015f\u0259nl\u0259rin kardinall\u0131\u011f\u0131n\u0131 tapd\u0131q.\n\nhttps:\/\/www.kaggle.com\/sitaraaghayeva\/30-days-of-ml-encodding?rvi=1&scriptVersionId=73048305&cellId=15\n\n\n\nV\u0259 onlar\u0131 **\"binary\"** v\u0259 **\"multiclass\"** d\u0259yi\u015f\u0259nl\u0259r olaraq qrupla\u015fd\u0131rd\u0131q.\n\nhttps:\/\/www.kaggle.com\/sitaraaghayeva\/30-days-of-ml-encodding?rvi=1&scriptVersionId=73048305&cellId=17\n\n\n\nDaha sonra kardinall\u0131\u011f\u0131 2 v\u0259 6 aral\u0131\u011f\u0131nda olan b\u00fct\u00fcn s\u00fctunlar\u0131 \"pd.get_dummies()\" funskiyas\u0131 vasit\u0259sil\u0259 \"0\" v\u0259 \"1\" d\u0259y\u0259rl\u0259ri alan \"binary\" s\u00fctunlara \u00e7evirdik.\n\nhttps:\/\/www.kaggle.com\/sitaraaghayeva\/30-days-of-ml-encodding?rvi=1&scriptVersionId=73048305&cellId=30","a67ee8fc":"# Qiym\u0259tl\u0259ndirm\u0259 - Evaluation","fc88fe77":"Yuxar\u0131dak\u0131 s\u0259tird\u0259 \"multi_train\" datas\u0131ndak\u0131 s\u00fctunlarda d\u0259y\u0259rl\u0259rin say\u0131na g\u00f6r\u0259 ard\u0131c\u0131ll\u0131\u011f\u0131 t\u0259hlil edirik.\n\nMulti_train yuxar\u0131da t\u0259yin etdiyimiz \"data frame\" format\u0131nda c\u0259dv\u0259ldir. Burada \"multi_cols\" siyah\u0131s\u0131ndak\u0131 s\u00fctunlar daxildir. Bu siyah\u0131ya kardinall\u0131\u011f\u0131 3 v\u0259 6 aral\u0131\u011f\u0131nda olan s\u00fctunlar\u0131 \u0259lav\u0259 etmi\u015fdik.\n\nindi is\u0259 yuxar\u0131dak\u0131 s\u0259tird\u0259 yazd\u0131\u011f\u0131m\u0131z \"for loop\"-un k\u00f6m\u0259yil\u0259 h\u0259r s\u00fctunda d\u0259y\u0259rl\u0259ri say\u0131na g\u00f6r\u0259 ard\u0131c\u0131ll\u0131qla d\u00fcz\u00fcr\u00fck. \nN\u0259tic\u0259d\u0259n g\u00f6r\u00fcn\u00fcr ki, ilk s\u00fctun \u00fc\u00e7\u00fcn \u0259n \u00e7ox t\u0259krarlanan d\u0259y\u0259r \"C\", ikinci v\u0259 \u00fc\u00e7\u00fcnc\u00fc s\u00fctunda is\u0259 \"B\"-dir.\n\nG\u0259lin, yazd\u0131\u011f\u0131m\u0131z kodu t\u0259hlil ed\u0259k:\n\n> for col in multi_cols:\n\nbu hiss\u0259d\u0259 yazd\u0131\u011f\u0131m\u0131z funksiyan\u0131n \"multi_cols\" siyah\u0131s\u0131ndak\u0131 h\u0259r bir s\u00fctun \u00fc\u00e7\u00fcn t\u0259krarlanmas\u0131n\u0131 t\u0259min edirik. Qeyd ed\u0259k ki, \"multi_cols\" kardinall\u0131\u011f\u0131 3-6 aral\u0131\u011f\u0131nda olan **s\u00fctunlar\u0131n adlar\u0131 siyah\u0131s\u0131d\u0131r**.\n\n\"Loop\"-un daxilind\u0259 \"categories\" d\u0259yi\u015f\u0259ni yarad\u0131r\u0131q v\u0259 ifad\u0259nin n\u0259tic\u0259sini bu d\u0259yi\u015f\u0259n\u0259 m\u0259nims\u0259dirik.\n\n>     categories =\n\n> multi_train[col].value_counts(sort=True)\n\nDaha sonra \"multi_cols\" siyah\u0131s\u0131na aid h\u0259r bir s\u00fctun \u00fc\u00e7\u00fcn i\u00e7ind\u0259ki d\u0259y\u0259rl\u0259rin ne\u00e7\u0259 d\u0259f\u0259 t\u0259krarland\u0131\u011f\u0131n\u0131 \"value_counts\" funksiyas\u0131n\u0131n k\u00f6m\u0259yil\u0259 tap\u0131r\u0131q. \"sort=True\" arqumenti d\u0259y\u0259rl\u0259ri say\u0131n\u0131n \u00e7oxlu\u011funa g\u00f6r\u0259 artan s\u0131ra il\u0259 g\u00f6st\u0259rir.\n\n> pd.DataFrame(...)\n\n\u00f6nc\u0259ki ifad\u0259ni **\"pd.DataFrame(...)\"** funksiyas\u0131 i\u00e7ind\u0259 yazaraq ald\u0131\u011f\u0131m\u0131z n\u0259tic\u0259ni \"data frame\"-\u0259 \u00e7eviririk. Bu biz\u0259 bir sonrak\u0131 funksiyalar\u0131 t\u0259tbiq ed\u0259 bilm\u0259k \u00fc\u00e7\u00fcn laz\u0131md\u0131r. \u00c7\u00fcnki b\u0259zi funksiyalar yaln\u0131zca \"data frame\" n\u00f6v\u00fcnd\u0259 olan c\u0259dv\u0259ll\u0259r\u0259 t\u0259tbiq oluna bilir.\n\n> .reset_index()['index'].tolist()\n\n\"reset_index\" d\u0259 \"data frame\" \u00fc\u00e7\u00fcn spesifik funkiyalardand\u0131r. Bu funksiya c\u0259dv\u0259l\u0259 yeni indeks \u0259lav\u0259 edir v\u0259 \u0259vv\u0259lki indeks s\u00fctuna \u00e7evrilir. **\u0130ndeks \u00f6z\u00fc s\u00fctun deyil.** \"pd.Dataframe\" funksiyas\u0131 al\u0131nan n\u0259tic\u0259ni \"data frame\"-\u0259 \u00e7evir\u0259nd\u0259 d\u0259y\u0259rl\u0259rin say\u0131 bir s\u00fctuna toplan\u0131r, d\u0259y\u0259rl\u0259rin ad\u0131 is\u0259 indeks kimi qeyd olunur:\n\n>         cat5\n\n> B.....149340\n\n> D.....126137\n\n> C.....20248\n\n> A.....4275\n\nBuna g\u00f6r\u0259 d\u0259 \"reset_index\" ed\u0259r\u0259k yeni indeks yarad\u0131b, d\u0259y\u0259rl\u0259rin ad\u0131n\u0131 s\u00fctuna \u00e7eviririk:\n\n>       index  cat5\n\n> 0.....B.....149340\n\n> 1.....D.....126137\n\n> 2.....C.....20248\n\n> 3.....A.....4275\n\n\n\u018fn sonda is\u0259 n\u0259tic\u0259ni ekranda \u00e7ap edirik. \n>     print(categories)\n\n\nBu ifad\u0259d\u0259n qabaq qoyulan bo\u015flu\u011fa fikir verin. \u018fg\u0259r onu \"for\" s\u00f6z\u00fc il\u0259 eyni s\u0259viyy\u0259d\u0259 yazsan\u0131z, o zaman ancaq \u0259n ax\u0131r\u0131nc\u0131 s\u00fctunun n\u0259tic\u0259si \u00e7\u0131xacaq. Biz is\u0259 \"multi_cols\"-dak\u0131 b\u00fct\u00fcn s\u00fctunlar \u00fczr\u0259 n\u0259tic\u0259ni g\u00f6rm\u0259k ist\u0259yirik. Ona g\u00f6r\u0259 \"    \" bu q\u0259d\u0259r bo\u015fluq burax\u0131lmal\u0131d\u0131r. \n> for col in multi_cols:\n>     categories = pd.DataFrame(train_data[col].value_counts(sort=True)).reset_index()['index'].tolist()\n>     print(categories)","514bec81":"# **Veril\u0259nl\u0259rin t\u0259hlili - Data Analysis**\n\nA\u015fa\u011f\u0131dak\u0131 ke\u00e7id vasit\u0259sil\u0259 Data t\u0259hlilini \u0259trafl\u0131 oxuya bil\u0259rsiniz:\n\nhttps:\/\/www.kaggle.com\/sitaraaghayeva\/30-days-of-ml-simple-rf-model?rvi=1&scriptVersionId=72700113&cellId=11","e2c096df":"# Data y\u00fckl\u0259nm\u0259si - Import data","948c4d21":"# Datan\u0131n b\u00f6l\u00fcnm\u0259si - Split train data","09560cff":"Qurdu\u011fumuz model\u0259 **\"train\"** datam\u0131z\u0131 g\u00f6st\u0259r\u0259r\u0259k onu \u00f6yr\u0259dirik.","c7670161":"Daha \u00e7ox bel\u0259 payla\u015f\u0131mlar \u00fc\u00e7\u00fcn:\n\nhttps:\/\/challengersdeep.wixsite.com\/website\n\nhttps:\/\/www.instagram.com\/deep_education\/","8d9a68b2":"# Data Emal\u0131 - Data Preprocessing","0ede0e7d":"G\u0259lin bu \u00fcsula daha diqq\u0259tli baxaq:\n\n> response = 'target'\n\n> ID = 'id'\n\n\u018fvv\u0259lc\u0259 h\u0259d\u0259f d\u0259yi\u015f\u0259ninin v\u0259 identifikasiya n\u00f6mr\u0259sinin (yaxud index) yerl\u0259\u015fdiyi s\u00fctunlar\u0131n **adlar\u0131n\u0131** **(s\u00fctunun \u00f6z\u00fcn\u00fc deyil)** ba\u015fqa bir d\u0259yi\u015f\u0259n\u0259 m\u0259nims\u0259dir\u0259m. Bu add\u0131m\u0131n x\u00fcsusi \u0259h\u0259miyy\u0259ti yoxdur. Bunu sad\u0259c\u0259 onun \u00fc\u00e7\u00fcn edir\u0259m ki, bu \"notebook\"-u ba\u015fqa data \u00fc\u00e7\u00fcn istifad\u0259 ed\u0259nd\u0259 s\u00fctun adlar\u0131n\u0131 h\u0259r s\u0259trd\u0259 d\u0259yi\u015fm\u0259y\u0259 ehtiyac qalmas\u0131n. Bir s\u00f6zl\u0259, yazd\u0131\u011f\u0131m kodlar\u0131 maksimum universal \u015f\u0259kild\u0259 yazma\u011fa \u00e7al\u0131\u015f\u0131ram ki, sonradan m\u0259n, v\u0259 ya bir ba\u015fqas\u0131 ondan ba\u015fqa data \u00fcz\u0259rind\u0259 rahatl\u0131qla istifad\u0259 ed\u0259 bilsin."}}