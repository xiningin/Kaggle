{"cell_type":{"6120f5ac":"code","c1c10cab":"code","47d9bcbb":"code","44d21dff":"code","3036b8aa":"code","ac2b181b":"code","ac1845bf":"code","d28b8b20":"code","613d4e31":"code","57e7f38a":"code","4f719ee7":"code","75c93a37":"code","42e1489e":"code","d67f667b":"code","3c586e1d":"code","6c0a7419":"code","ee5d5208":"code","ec766093":"code","a32d6564":"code","3aeb3e20":"code","07066e7d":"code","2c685680":"code","73fea6c1":"code","709e9bc4":"markdown","ee4a2372":"markdown","af5df068":"markdown"},"source":{"6120f5ac":"#Loading libraries\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport os \nprint(os.getcwd())\n","c1c10cab":"data=pd.read_csv(\"..\/input\/insurance.csv\")\n","47d9bcbb":"\nprint(data.columns)\nprint(\"\\n\")\nprint(\"*\"*40)\nprint(\"\\n\")\nprint(data.head())","44d21dff":"data.info()","3036b8aa":"f,ax=plt.subplots(1,2,figsize=(18,5))\n\ng=sns.countplot(y=data.smoker,order=data.smoker.value_counts().index,ax=ax[0])\nfor i,v in enumerate(data.smoker.value_counts().values):\n    g.text(0.5,i,v,weight=\"bold\")\nax[0].set_title(\"Smoker\")\nax[0].set_ylabel(\"\")\n    \nf=sns.countplot(y=data.sex,order=data[\"sex\"].value_counts().index,ax=ax[1])\nfor i,v in enumerate(data.sex.value_counts().values):\n    f.text(0.5,i,v,weight=\"bold\")\nax[1].set_title(\"Gender\")\nax[1].set_ylabel(\"\")\nplt.subplots_adjust(wspace=0.8)\n","ac2b181b":"\nprint(data.columns)\n\nf,ax=plt.subplots(1,2,figsize=(15,8))\n\ng1=data.groupby([\"sex\",\"smoker\"])[\"age\"].count().to_frame().reset_index()\ng1.pivot(\"sex\",\"smoker\",\"age\").plot(kind=\"barh\",ax=ax[0])\nax[0].set_title(\"Smoker vs Gender\",weight=\"bold\",size=20)\nax[0].set_ylabel(\"\")\n\ng2=data.groupby([\"sex\",\"region\"])[\"age\"].count().to_frame().reset_index()\ng2.pivot(\"region\",\"sex\",\"age\").plot(kind=\"barh\",ax=ax[1])\nax[1].set_title(\"Regionwise gender\",weight=\"bold\",size=20)\nax[1].set_ylabel(\"\")\n\n\nplt.legend(loc=\"lower right\")\n","ac1845bf":"\ng=sns.countplot(y=data.region,order=data[\"region\"].value_counts().index)\nfor i,v in enumerate(data.region.value_counts().values):\n    g.text(0.5,i,v,weight=\"bold\")\n    \nplt.title(\"Regions\",size=20,weight=\"bold\")\nplt.ylabel(\"\")\nplt.xlabel(\"\")\nfig=plt.gcf()\nfig.set_size_inches(15,8)\n","d28b8b20":"f,ax=plt.subplots(1,2,figsize=(18,8))\n\ndata[\"sex\"].value_counts().plot.pie(autopct=\"%1.1f%%\",subplots=True,ax=ax[0])\nax[0].set_ylabel(\"\")\nax[0].set_title(\"Gender Ratio\",size=15,weight=\"bold\")\nfig=plt.gcf()\nmy_circle=plt.Circle((0,0),0.7,color=\"white\")\nfig.gca().add_artist(my_circle)\n\n\ndata[\"region\"].value_counts().plot.pie(autopct=\"%1.1f%%\",ax=ax[1],subplots=True,explode=[0,0.05,0.01,0])\n\nax[1].set_ylabel(\"\")\nax[1].set_title(\"Region\",size=15,weight=\"bold\")\n\n","613d4e31":"print(data.columns)\n\nsns.lmplot(x=\"bmi\",y=\"charges\",hue=\"smoker\",data=data,fit_reg=False,palette=\"magma\")\nfig=plt.gcf()\nfig.set_size_inches(15,8)\nplt.title(\"Plot for Charges & BMI\",weight=\"bold\")","57e7f38a":"f,ax=plt.subplots(1,2,figsize=(15,8))\nsns.barplot(y=\"smoker\",x=\"charges\",hue=\"sex\",data=data,ax=ax[0])\n\nax[0].set_title(\"Charges for Smoker\",weight=\"bold\",size=15)\nax[0].set_ylabel(\"\")\nax[0].set_xlabel(\"\")\n\nsns.barplot(y=\"sex\",x=\"charges\",data=data,ax=ax[1])\nax[1].set_title(\"Charges for Gender\",weight=\"bold\",size=15)\nax[1].set_xlabel(\"\")\nax[1].set_ylabel(\"\")\nplt.subplots_adjust(wspace=1.0)","4f719ee7":"f,ax=plt.subplots(1,2,figsize=(15,5))\nsns.boxplot(y=\"smoker\",x=\"charges\",data=data[data[\"smoker\"]==\"yes\"],hue=\"sex\",palette=\"magma\",ax=ax[0])\nax[0].set_title(\"Chargers for Smokers \",size=20,weight=\"bold\")\n\nsns.boxplot(y=\"smoker\",x=\"charges\",data=data[data[\"smoker\"]==\"no\"],hue=\"sex\",palette=\"magma\",ax=ax[1])\nax[1].set_title(\"Chargers for non-Smokers \",weight=\"bold\",size=20)","75c93a37":"sns.lmplot(y=\"charges\",x=\"age\",hue=\"smoker\",data=data,fit_reg=False)\nfig=plt.gcf()\nfig.set_size_inches(10,8)\nplt.title(\"Plot for Charges and Age\",size=20,weight=\"bold\")\nplt.xlabel(\"Age\",size=10,weight=\"bold\")\nplt.ylabel(\"Charges\",size=10,weight=\"bold\")","42e1489e":"cat=data.select_dtypes(include=\"object\").columns\nnum=data.select_dtypes(exclude=\"object\").columns","d67f667b":"#Finding Correlation Matrix\n\nsns.heatmap(data.corr(),annot=True,cbar=True)","3c586e1d":"plt.subplots(figsize=(10,8))\nsns.boxplot(x=\"charges\",y=\"smoker\",data=data[data[\"age\"]<=18])\nplt.title(\"Charges for smokers leass than 18 Yrs of Age\")\n\n\n","6c0a7419":"data[\"sex\"]=data[\"sex\"].map({\"female\":0,\"male\":1})\ndata[\"smoker\"]=data[\"smoker\"].map({\"yes\":1,\"no\":0})\n","ee5d5208":"r1=pd.get_dummies(data[\"region\"])\nfin=pd.merge(data,r1,how=\"left\",left_index=True,right_index=True)\nfin.drop(\"region\",axis=1,inplace=True)","ec766093":"\n\nfrom sklearn.preprocessing import StandardScaler,MinMaxScaler\nst=StandardScaler()\nscaler=MinMaxScaler(feature_range=(0,1))\na=np.array(data['bmi'])\nprint(a)\na1=a.reshape(-1,1)\nscled=scaler.fit_transform(a1)\nfin1=fin.copy()\nfin1[\"bmi_scale\"]=pd.DataFrame(scled)\n\nfin1.drop(\"bmi\",axis=1,inplace=True)\nfin1.head()","a32d6564":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score\n\n\n#Splitting the data\nX=fin.drop(\"charges\",axis=1)\ny=fin[\"charges\"]\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.25,random_state=42)\nprint(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","3aeb3e20":"#LINear regression\nTrain_rmse=[]\nTest_rmse=[]\n\nfrom sklearn.linear_model import LinearRegression\nmod_lg=LinearRegression()\nmod_lg.fit(X_train,y_train)\npre_lg=mod_lg.predict(X_train)\npred_lg=mod_lg.predict(X_test)\n\n\nprint(\"on Trained Data\")\nprint(\"Mean_Squared Error:\",mean_squared_error(pre_lg,y_train))\nprint(\"Absolute Error:\",mean_absolute_error(pre_lg,y_train))\nprint(\"R2_score:\",r2_score(pre_lg,y_train))\n\n\nprint(\"*\"*40)\n\nprint(\"On Test Data\")\nprint(\"Mean_Squared Error:\",mean_squared_error(pred_lg,y_test))\nprint(\"Absolute Error:\",mean_absolute_error(pred_lg,y_test))\nprint(\"R2_score:\",r2_score(pred_lg,y_test))\n","07066e7d":"from sklearn.ensemble import RandomForestRegressor\nmod_rf=RandomForestRegressor(n_estimators=500)\nprint(mod_rf)\nmod_rf.fit(X_train,y_train)\npre_rf=mod_rf.predict(X_train)\npred_rf=mod_rf.predict(X_test)\n\n\nprint(\"on Trained Data\")\nprint(\"Mean_Squared Error:\",mean_squared_error(pre_rf,y_train))\nprint(\"Absolute Error:\",mean_absolute_error(pre_rf,y_train))\n\n\nprint(\"*\"*40)\n\nprint(\"On Test Data\")\nprint(\"Mean_Squared Error:\",mean_squared_error(pred_rf,y_test))\nprint(\"Absolute Error:\",mean_absolute_error(pred_rf,y_test))\n\n#Plotting\nplt.figure(figsize=(10,6))\n\nplt.scatter(pre_rf,pre_rf - y_train,\n          c = 'black', marker = 'o', s = 35, alpha = 0.5,\n          label = 'Train data')\nplt.scatter(pred_rf,pred_rf - y_test,\n          c = 'c', marker = 'o', s = 35, alpha = 0.7,\n          label = 'Test data')\nplt.xlabel('Predicted values')\nplt.ylabel('Tailings')\nplt.legend(loc = 'upper left')\nplt.hlines(y = 0, xmin = 0, xmax = 60000, lw = 2, color = 'red')\nplt.show()\n\n\nfeature_importances=pd.DataFrame(mod_rf.feature_importances_,\n                                   index = X_train.columns,\n                                    columns=['importance']).sort_values('importance',ascending=False).reset_index()\nfeature_importances.columns=[\"feat\",\"values\"]\nsns.barplot(y=feature_importances.feat,x=feature_importances[\"values\"])","2c685680":"from sklearn.ensemble import AdaBoostRegressor\nmod_ada=AdaBoostRegressor()\n\n\nmod_ada.fit(X_train,y_train)\npre_ada=mod_ada.predict(X_train)\npred_ada=mod_ada.predict(X_test)\n\n\nprint(\"on Trained Data\")\nprint(\"Mean_Squared Error:\",mean_squared_error(pre_ada,y_train))\nprint(\"Absolute Error:\",mean_absolute_error(pre_ada,y_train))\n\n\nprint(\"*\"*40)\n\nprint(\"On Test Data\")\nprint(\"Mean_Squared Error:\",mean_squared_error(pred_ada,y_test))\nprint(\"Absolute Error:\",mean_absolute_error(pred_ada,y_test))\n\n\nfeature_importances=pd.DataFrame(mod_ada.feature_importances_,\n                                   index = X_train.columns,\n                                    columns=['importance']).sort_values('importance',ascending=False).reset_index()\nfeature_importances.columns=[\"feat\",\"values\"]\nsns.barplot(y=feature_importances.feat,x=feature_importances[\"values\"])","73fea6c1":"from sklearn.ensemble import GradientBoostingRegressor\nmod_gbm=GradientBoostingRegressor()\n\n\nmod_gbm.fit(X_train,y_train)\npre_gbm=mod_gbm.predict(X_train)\npred_gbm=mod_gbm.predict(X_test)\n\n\nprint(\"on Trained Data\")\nprint(\"Mean_Squared Error:\",mean_squared_error(pre_gbm,y_train))\nprint(\"Absolute Error:\",mean_absolute_error(pre_gbm,y_train))\n\n\nprint(\"*\"*40)\n\nprint(\"On Test Data\")\nprint(\"Mean_Squared Error:\",mean_squared_error(pred_gbm,y_test))\nprint(\"Absolute Error:\",mean_absolute_error(pred_gbm,y_test))\n\nfeature_importances=pd.DataFrame(mod_gbm.feature_importances_,\n                                   index = X_train.columns,\n                                    columns=['importance']).sort_values('importance',ascending=False).reset_index()\nfeature_importances.columns=[\"feat\",\"values\"]\nsns.barplot(y=feature_importances.feat,x=feature_importances[\"values\"])","709e9bc4":"Conclusion:From EDA and Feature importance plots we observed that Charges are morely dependent On Smoking,Body Mass Index,Age,Children.\nFurther,my model can be improved by having some other models and some feature engineering steps.\nThank You","ee4a2372":"# Explanatory Data Visualisation ","af5df068":"# MEdical Insurance Project"}}