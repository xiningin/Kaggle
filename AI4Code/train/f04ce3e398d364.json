{"cell_type":{"b66d9676":"code","61fb27cb":"code","98ccb00b":"code","303df6ed":"code","eb22de6c":"code","c38b02ac":"code","2f6b5718":"code","7f09f557":"code","7c63cd8d":"code","ae383464":"code","b4ae617f":"code","bacac1f8":"code","f8f83716":"code","607e1816":"code","c6a0cffd":"code","88ac14d6":"code","7717ab4c":"code","ea7ae554":"code","95223af6":"code","3ba4930b":"code","e4e63623":"code","3eaffb1e":"code","d86411b3":"code","f14b7e4c":"code","5bf193f8":"code","13c9b463":"code","17a0cf4c":"code","6f83aa59":"code","229a23fa":"code","347c6d18":"code","049cbca4":"code","b0dddb63":"code","392b183e":"code","f7583c1a":"markdown","53d48942":"markdown","c5984c97":"markdown","e7285390":"markdown","79cb2290":"markdown","d32c0492":"markdown","ce67a60c":"markdown","1cd12ab2":"markdown","5014e96b":"markdown","ff931a7f":"markdown","9f201418":"markdown","291a2b89":"markdown"},"source":{"b66d9676":"import numpy as np\nimport pandas as pd\nfrom fastai.vision import *","61fb27cb":"path = Path('..\/input')","98ccb00b":"path.ls()","303df6ed":"get_image_files(path\/'train-jpg')[:5]","eb22de6c":"df = pd.read_csv(path\/'train_v2.csv')\ndf.head()","c38b02ac":"np.random.seed(42)\nsize = 224\nbs = 64\nnum_workers = 0  # set this to 2 to prevent kernel from crashing","2f6b5718":"tfms = get_transforms(flip_vert=True, max_lighting=0.1, max_zoom=1.05, max_warp=0.)","7f09f557":"src = (ImageItemList.from_csv(path, 'train_v2.csv', folder='train-jpg', suffix='.jpg')\n       .random_split_by_pct()\n       .label_from_df(sep=' ')\n       .add_test_folder('test-jpg-v2'))","7c63cd8d":"data = (src.transform(tfms, size=size)\n        .databunch(bs=bs, num_workers=num_workers)\n        .normalize(imagenet_stats))","ae383464":"print(len(data.train_ds))\nprint(len(data.valid_ds))\nprint(len(data.test_ds))","b4ae617f":"data.classes","bacac1f8":"data.show_batch(rows=3, figsize=(7,6))","f8f83716":"arch = models.resnet50\nacc = partial(accuracy_thresh, thresh=0.2)\nf_score = partial(fbeta, thresh=0.2)","607e1816":"learn = create_cnn(data, arch, metrics=[acc, f_score], model_dir='\/tmp\/models')","c6a0cffd":"learn.lr_find()\nlearn.recorder.plot()","88ac14d6":"lr = 1e-2","7717ab4c":"learn.fit_one_cycle(4, slice(lr))","ea7ae554":"learn.save('stage-1')","95223af6":"learn.recorder.plot_losses()","3ba4930b":"learn.unfreeze()","e4e63623":"learn.lr_find()\nlearn.recorder.plot()","3eaffb1e":"learn.fit_one_cycle(2, max_lr=slice(1e-6,1e-4))","d86411b3":"learn.save('stage-2')","f14b7e4c":"learn.recorder.plot_losses()","5bf193f8":"preds, y = learn.get_preds(ds_type=DatasetType.Test)","13c9b463":"preds[:5]","17a0cf4c":"thresh = 0.2\nlabelled_preds = [' '.join([learn.data.classes[i] for i,p in enumerate(pred) if p > thresh]) for pred in preds]","6f83aa59":"labelled_preds[:5]","229a23fa":"submission = pd.DataFrame({'image_name':os.listdir('..\/input\/test-jpg-v2'), 'tags':labelled_preds})","347c6d18":"submission['image_name'] = submission['image_name'].map(lambda x: x.split('.')[0])","049cbca4":"submission = submission.sort_values('image_name')","b0dddb63":"submission[:5]","392b183e":"submission.to_csv('submission.csv', index=False)","f7583c1a":"Unfreeze all layers, run learning rate finder, fit some more","53d48942":"Create learner","c5984c97":"Visualize data","e7285390":"Use learning rate finder to pick a good learning rate","79cb2290":"Look at dataset","d32c0492":"Create predictions using test set","ce67a60c":"Load libraries","1cd12ab2":"Generate competition submission using predictions","5014e96b":"Verify datasets loaded properly.  We should have the following:\n* train: 32,384\n* valid: 8,095\n* test: 61,191","ff931a7f":"Create datablock","9f201418":"Fit the head of the network","291a2b89":"Define model architecture and metrics"}}