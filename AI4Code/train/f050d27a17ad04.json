{"cell_type":{"d4dd8bf8":"code","6e4a6cfc":"code","e6dd36e4":"code","85a9edfc":"code","ddb5d86a":"code","f2880b40":"code","8764394c":"code","4960c43b":"code","650edff1":"code","2cf6f7f1":"code","1303c226":"code","39c6d700":"code","4d6dec28":"markdown","8e63e0e4":"markdown","959518a6":"markdown","8442e231":"markdown","2769f933":"markdown","f86b3daf":"markdown","356e68ae":"markdown","9254285b":"markdown","a79b8516":"markdown","961631f7":"markdown","4a92e592":"markdown","68162317":"markdown"},"source":{"d4dd8bf8":"!pip install h2o\nimport os\nimport pandas as pd\nimport h2o\nfrom h2o.automl import H2OAutoML","6e4a6cfc":"full_dataset = pd.DataFrame()\n\ndf_hyundi = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/hyundi.csv')\ndf_hyundi = df_hyundi.rename({'tax(\u00a3)': 'tax'}, axis=1)\n\n#add fixed 'hyundi.csv' to the united dataset\nfull_dataset = pd.concat([full_dataset, df_hyundi])","e6dd36e4":"files = [file for file in os.listdir('..\/input\/used-car-dataset-ford-and-mercedes')]\nfor file in files:\n    if file in ['hyundi.csv', 'unclean cclass.csv', 'unclean focus.csv']:\n        continue\n    df = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/' + file)\n    full_dataset = pd.concat([full_dataset, df])\n\n#shuffle data to not have the same manufacturer in train or test splits\nfull_dataset = full_dataset.sample(frac=1).reset_index(drop=True)\n\npd.options.display.max_columns = full_dataset.shape[1]\n\n# check whether all data concatenated correctly\nprint(full_dataset.describe())","85a9edfc":"# check whether the shuffle was okay\nprint(full_dataset.head(10))","ddb5d86a":"if full_dataset.isnull().values.any():\n    full_dataset = full_dataset.fillna(0)\n    print('Dataset contained NaNs and now cleaned!')","f2880b40":"h2o.init()\n\nh2o_df = h2o.H2OFrame(full_dataset)\n\ntrain, test = h2o_df.split_frame(ratios=[.8])\n\nx = train.columns\ny = 'price'\nx.remove(y)\n\naml = H2OAutoML(max_runtime_secs=3600, max_models=20, stopping_metric='mae', seed=1)\n\naml.train(x=x, y=y, training_frame=train)","8764394c":"lb = aml.leaderboard\nprint(lb.head())","4960c43b":"best_ensemble = aml.leader\nmetalearner = h2o.get_model(best_ensemble.metalearner().model_id)","650edff1":"# check all details about the best ensemble like its scores, containing models and their importance\nmetalearner","2cf6f7f1":"best_model = aml.get_best_model()\nbest_model.model_performance(test)","1303c226":"explain_model = aml.explain(frame = test, figsize = (8,6))","39c6d700":"model_path = h2o.save_model(model=best_model, path='..\/output\/model', force=True)","4d6dec28":"# Save our model for further use.","8e63e0e4":"Going through the CSVs we can see that 'cclass.csv' and 'focus.csv' don't have 'tax' and 'mpg' columns.\nLet's make sure that the dataset has NaNs because of this and replace them with zeros.","959518a6":"Install all needed libraries and packages","8442e231":"# Running H2O AutoML\n\nRun H2O, load united dataset and do a train\/test split in 80\/20 proportion.\nGet our feature\/target columns and put them into a 'train' method from 'H2OAutoML' class.\nIf we set 'stopping_metric' parameter then training doesn't have any time limit so let's set this at 1 hour.\nAs metric I would choose Mean Average Error and set seed equals to 1 for reproducibility.","2769f933":"Choose the best model as metalearner to provide testing.","f86b3daf":"Go through our directory with dataset and add all files except aforementioned 'hyundi.csv' and 2 'uncleaned' files since they contain duplicate and uncleaned data.","356e68ae":"# Conclusion\n\nAfter H2O AutoML model training I got r^2 score of 0.971. It took some time to tune the model but if we are limited on time we can do model training faster with a little loss of r^2 (down to ~0.95-0.96).\nWe could have seen that we can successfully use H2O library for regression problems and get relatively good results.\n\nAs next steps, we can use H2O AutoML for more complex tasks, like NLP or CV.\n\nThis is my first notebook on Kaggle, please upvote if you liked it! Also I will appreciate any feedback on things I could have done better.","9254285b":"# Get completed model analysis","a79b8516":"# Get the prediction\n\nApply metalearner fot the test set","961631f7":"Get the table with the best models\/ensembles and print info about the very best one.","4a92e592":"# Data Preprocessing\n\nIn \"hyundi.csv\" we see an extra symbols in 'tax' column \"(\u00a3)\" so we need to fix it by renaming to other csv's standard.","68162317":"# About\n\nIn this work I have used the H2O Python library to solve the used cars price prediction problem.\nThe main idea of H2O is to automatize model training with almost no data preprocessing, hyperparameters tuning and scoring analysis.\nAll you need is to put all the data in H2O, go through the training process (by default it takes an hour, but you get great results even with faster training) and get the best ensemble for your problem."}}