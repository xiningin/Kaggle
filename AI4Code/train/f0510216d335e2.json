{"cell_type":{"99741ab3":"code","e7f00867":"code","4e50d098":"code","23984630":"code","5ac1111e":"code","0d66dd65":"markdown","32de7f02":"markdown","1ca0e462":"markdown","04943244":"markdown"},"source":{"99741ab3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsRegressor\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output. ","e7f00867":"df=pd.read_csv('..\/input\/USD_TRY Gemi Verileri.csv')\ndf['Tarih']=pd.to_datetime(df['Tarih'], errors='coerce')#some pandas miracle here\ndf['\u015eimdi']=pd.to_numeric(df['\u015eimdi'].str.replace(',', '.'), errors='coerce')# The \u015eimdi column look as object so i turned it to numeric\nprint(df.head(5), df.tail(5))\nprint(df.info())","4e50d098":"print(df.describe())#just try to see it","23984630":"X=df['\u015eimdi']\nY=df['Tarih']\nX=np.array(X).reshape((len(X), 1))#i got some issues with shapes but i found this solution on stackoverflow\nY=np.array(Y).reshape((len(Y), 1))\nfig=plt.figure()\nax=fig.add_subplot(111)\nax.plot_date(Y, X, '.')\nplt.show()\n\n","5ac1111e":"\nY=Y.astype('float64')\nx_train, x_test, y_train, y_test=train_test_split(X, Y, test_size=0.2)\n\n#firstly let's try linear regression\nlin_reg=LinearRegression()\nlin_reg.fit(x_train, y_train)\nco=lin_reg.score(X, Y)\n\n#now we will try KNeighborsRegressor\nknr=KNeighborsRegressor()\nknr.fit(X, Y)\nco2=knr.score(X, Y)\nX2=knr.predict(X)\nX2.astype('float64')\n\nprint(\"linear regsession: \", co)\nprint(\"KNeighbors Regressor: \", co2)#we have 89 precent accuracy with knr\nprint(\"prediction: \", X2)\n\nplt.scatter(X, Y, color='red')#let's plot the normal values and predicted values\nplt.plot(X, X2, color='blue')\nplt.show\n\n\n","0d66dd65":"We are going to use some regression model to see which one is a good accuracy\n\n\n","32de7f02":"Lets see the graph of turkish currency with dollar.\n\n","1ca0e462":"INTRODUCTION\n\nHello dear friends,\nThis is my first kernel to open. This kernel teach me a lot of thing. I will go on with this stuffs i hope i will learn more.\nWell in this kernel, i try to learn and implement some preproccesing and machine learning. I do not care how good it is for now all i care is this little project teach me a lot.  I used my own data which i downloaded from investing web site and also i put it in datasets. You are welcome to use it. The reason of using this data is because i see financal data more clearly and understandable.  I hope you can fix my mistake and create something better. \nThanks.","04943244":"As seen in plot,  we have a good prediction with KNeighborsRegressor."}}