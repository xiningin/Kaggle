{"cell_type":{"7b4cfe5b":"code","72f479b4":"code","2adbd2b4":"code","9315deaa":"code","89e78d3e":"code","88009cf0":"code","562b177a":"code","7a81847c":"code","2059fb98":"code","0fe5db24":"code","c266cab3":"code","bd00d205":"code","1e156303":"code","27e952b1":"code","9ebaac4a":"code","d61986c8":"code","35005798":"code","34f7b02a":"code","6c88e048":"code","20341e76":"code","dd18bc18":"code","880ed675":"code","3f1633de":"code","183243a0":"code","d3dfb9a4":"code","7cf6d0ca":"code","ecdb88b7":"markdown"},"source":{"7b4cfe5b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","72f479b4":"from IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = 'all'","2adbd2b4":"data=pd.read_csv(\"\/kaggle\/input\/indian-food-101\/indian_food.csv\")\n#finding data dimensions\ndata.shape\n#the dataset has 255 instances with 9 fields","9315deaa":"#describing of data\ndata.describe()","89e78d3e":"#field wise nulls\ndata.isna().sum()","88009cf0":"#row with null in region field\nimport pandas as pd\ndata.loc[data['region'].isna()]","562b177a":"#value count of region field\ndata['region'].value_counts()","7a81847c":"data.head(10)","2059fb98":"#column names in data file\ndata.columns","0fe5db24":"data[['flavor_profile','course']].value_counts()","c266cab3":"#replacing -1 in flavor_profile to others\ndata.flavor_profile.replace(['-1'],['Others'],inplace=True)\ndata['flavor_profile'].value_counts()","bd00d205":"#course types under sweet flavor_profile type\ndata.loc[data['flavor_profile']=='sweet',['flavor_profile','course']].value_counts()","1e156303":"data['ingredients'].value_counts()","27e952b1":"data['ingredients'].head()\n","9ebaac4a":"comma_ingreds=[]\nfor i in range(len(data)):\n    comma_ingreds.append(data['ingredients'].iloc[i].split(','))\ncomma_ingreds[:5]","d61986c8":"#from nltk.tokenize import word_tokenize\n#tokenized_ingredients=[]\n#tokenizing the ingredients in to a list of list\n#tokenized_ingredients=data['ingredients'].apply(nltk.word_tokenize)","35005798":"\n#converting it to flat list\nimport itertools\nmerged = list(itertools.chain(*comma_ingreds))\nlen(merged)\n","34f7b02a":"#removing comma from the list\n#element=','\n#while element in merged: merged.remove(element)\n#len(merged)\n#type(merged)","6c88e048":"#top 5 most used ingredient\nfrom collections import Counter\ncount_ingredients=dict(Counter(merged))\nsort_cnt_ingred=sorted(count_ingredients.items(), key=lambda x: x[1],reverse=True)\nprint(sort_cnt_ingred[:5])","20341e76":"type(sort_cnt_ingred)\nfreq_ingred_df=pd.DataFrame(sort_cnt_ingred,columns=['item','count'])\nfreq_ingred_df.head(5)","dd18bc18":"#top 10 used ingredients in indian foods\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nplt.figure(figsize=(12,8))\nax=sns.barplot(freq_ingred_df['item'].iloc[:10],freq_ingred_df['count'].iloc[:10])\nax.bar_label(ax.containers[0])","880ed675":"#different types of diets included in data\ndata['diet'].value_counts()","3f1633de":"#distribution of different flovors in data\nfp=data['flavor_profile'].value_counts()\nfp\nplt.figure(figsize=(12,8))\nfp.plot(kind='pie',colors=['maroon','skyblue','orange','green','yellow'])","183243a0":"#min, max and average cooking and prep times per flavor profile and course combination\ndata.groupby([\"flavor_profile\", \"course\"])[\"cook_time\",\"prep_time\"].agg([\"max\",\"min\",\"mean\"]).rename_axis([\"flavor_profile\", \"course\"])","d3dfb9a4":"items_by_state=data.groupby(['state'])['name'].count().reset_index()\nitems_by_state.sort_values(by='name',ascending=False,inplace=True)\nitems_by_state","7cf6d0ca":"plt.figure(figsize=(12,10))\nfig, ax = plt.subplots()\n\nax.barh(items_by_state.state,items_by_state.name)\n# new helper method to auto-label bars\nax.bar_label(ax.containers[0])","ecdb88b7":"Out of all the 9 fields only 'region' has one null field"}}