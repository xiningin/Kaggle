{"cell_type":{"7cca502a":"code","bfd9f24b":"code","7af629f7":"code","ecfcc91c":"code","2e973305":"code","9ca660b4":"code","a656a3d4":"code","e1e67a96":"code","ffb589b5":"code","15006474":"code","e9649162":"code","269708e9":"code","731cd096":"code","869f0353":"code","994c915e":"code","e42c05cc":"code","53c9a571":"code","6aea5e75":"code","89e03c69":"code","ea2eb098":"code","c920d763":"code","d6e2719c":"markdown","2297b146":"markdown","67cbd19e":"markdown","aea3ab7a":"markdown","b3dfc37f":"markdown","a4a348bf":"markdown","9a942b7c":"markdown","1a1ca490":"markdown","c1f2ccbb":"markdown","48e3800e":"markdown","befdac34":"markdown","f233f51a":"markdown","2bbf9979":"markdown","94879ce5":"markdown","e50d6f78":"markdown","e033c11b":"markdown","c75501f5":"markdown","2c81559a":"markdown"},"source":{"7cca502a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #\nimport seaborn as sns\nsns.set()\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","bfd9f24b":"df=pd.read_csv('\/kaggle\/input\/ushealthinsurancedataset\/insurance.csv')","7af629f7":"df.info()","ecfcc91c":"df.isnull().any()","2e973305":"df_age = df.copy()\nage_bins = [13, 20, 30, 40, 50, 60, 120]\nage_labels = ['teens', '20s', '30s', '40s', '50s', '60+']\ndf_age['age_range'] = pd.cut(df_age.age, age_bins, labels = age_labels, include_lowest = True)","9ca660b4":"df_groups = df_age.copy()\nbmi_bins = [0, 18.5, 24.9, 29.9, 60]\nbmi_labels = ['underweight', 'healthy', 'overweight', 'obese']\ndf_groups['weight_category'] = pd.cut(df_groups.bmi, bmi_bins, labels = bmi_labels, include_lowest = True)","a656a3d4":"feature = ['age_range', 'sex', 'weight_category', 'children', 'smoker', 'region']\nplt.figure(figsize = (15, 30))\nfor i in enumerate(feature):\n    plt.subplot(6, 3, i[0]+1)\n    sns.countplot(x = i[1], palette = 'dark', data = df_groups)","e1e67a96":"w_percent = df_groups['weight_category'].value_counts(normalize = True)\na_percent = df_groups['age_range'].value_counts(normalize = True)\nr_percent = df_groups['region'].value_counts(normalize = True)\nprint(w_percent)\nprint(a_percent)\nprint(r_percent)","ffb589b5":"#labels for weight category\nw_labels = ['obese', 'overweight', 'healthy', 'underweight']\nw_data = w_percent\nw_explode = (0.1, 0, 0, 0)  # only \"explode\" the 1st slice by setting value to 0.1\n\n#lables for age_range\na_labels = ['40s', '20s', '50s', '30s', 'teens', '60+']\na_data = a_percent\na_explode = (0.1, 0, 0, 0, 0 , 0)\n\n#labels for region\nr_labels = ['southeast', 'southwest', 'northwest', 'northeast']\nr_data = r_percent\nr_explode = (0.1, 0, 0, 0)","15006474":"#I wanted to assign different colors to the second pie chart. I found it confusing having it all with the same color scheme.\ncolors = ['royalblue', 'orange', 'springgreen', 'lightcoral', 'mediumpurple', 'burlywood']\n\nf, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize = (18,6))\n\nax1.pie(w_data, explode=w_explode, labels=w_labels, autopct='%1.1f%%',\n        shadow=True, startangle=45, textprops={'fontsize': 13, 'weight': 'bold'})\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nax1.set_title(\"Weight Category\", fontdict = {'fontsize': 24, 'fontweight': 'bold',\n                                             'color': '#0000A0'})\n\nax2.pie(a_data, explode= a_explode, labels=a_labels, autopct='%1.1f%%',\n        shadow=True, startangle=25, textprops={'fontsize': 13, 'weight': 'bold'}, \n        colors = colors)\nax2.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nax2.set_title(\"Age Range\", fontdict = {'fontsize': 24, 'fontweight': 'bold',\n                                       'color': '#0000A0'})\n\nax3.pie(r_data, explode= r_explode, labels=r_labels, autopct='%1.1f%%',\n        shadow=True, startangle=5, textprops={'fontsize': 13, 'weight': 'bold'})\nax3.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nax3.set_title(\"Region\", fontdict = {'fontsize': 24, 'fontweight': 'bold',\n                                       'color': '#0000A0'})\nplt.show()","e9649162":"df['sex'] = df['sex'].apply({'male':0,'female':1}.get) \ndf['smoker'] = df['smoker'].apply({'yes':1, 'no':0}.get)\ndf['region'] = df['region'].apply({'southwest':1, 'southeast':2, 'northwest':3, 'northeast':4}.get)","269708e9":"df.describe().transpose()","731cd096":"corr = df.corr()\nplt.figure(figsize=(8, 6))\nsns.heatmap(corr, annot=True, cmap = 'viridis')","869f0353":"sns.catplot(x=\"children\", y=\"charges\",\n            col=\"region\",\n            data=df_groups, kind=\"strip\",\n            height=4, aspect=.8, palette = \"Set2\")","994c915e":"#We omit the children and region variable. I made the choice to keep the sex variable for this notebook.\nX = df[['age', 'sex', 'bmi', 'smoker']]\ny = df['charges']","e42c05cc":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state = 42)","53c9a571":"model = LinearRegression()\nmodel.fit(X_train, y_train)","6aea5e75":"data1 = {'age' : 37,\n        'sex' : 0,\n        'bmi' : 30,\n        'smoker' : 0\n       }\nindex = [1]\nnew_client1_df = pd.DataFrame(data1,index)\nnew_client1_df","89e03c69":"prediction_new_client1 = model.predict(new_client1_df)\nprint(\"Estimated charge for Client 1 is: $\",str(prediction_new_client1.round(2))[1:-1])","ea2eb098":"data2 = {'age' : 33,\n        'sex' : 1,\n        'bmi' : 20,\n        'smoker' : 1\n       }\nindex = [1]\nnew_client2_df = pd.DataFrame(data2,index)\nnew_client2_df","c920d763":"prediction_new_client2 = model.predict(new_client2_df)\nprint(\"Estimated charge for Client 2 is: $\",str(prediction_new_client2.round(2))[1:-1])","d6e2719c":"## Introduction","2297b146":"Sex, children, and Region have the lowest correlation to charges. ","67cbd19e":"Let's assign these values in labels","aea3ab7a":"Going through to see if there are any null values in the data set","b3dfc37f":"This is my first notebook that I ever wrote on kaggle. I wanted to apply some data manipulation and machine learning techniques that I learned.","a4a348bf":"### Pie Chart","9a942b7c":"### Correlation","1a1ca490":"We'll use sklearn and it's packages to see if we can predict charges for new clients.","c1f2ccbb":"## Preprocessing","48e3800e":"## Data Exploration\n\n### Create categories for age and bmi\n\nI wanted to create categories to get a better idea of the clients' age and bmi.\n\nObtained BMI interpretation from CDC webiste https:\/\/www.cdc.gov\/healthyweight\/assessing\/bmi\/adult_bmi\/index.html","befdac34":"Now the actual graph.","f233f51a":"## Machine Learning","2bbf9979":"Region has a very low correlation to charges. We see that the charges are very similar for each region.","94879ce5":"### Graph the categories","e50d6f78":"I wanted to get the actual percentages of each category so I can input them into a pie chart.****","e033c11b":"### Split the data into train and test","c75501f5":"### Change the strings into numbers","2c81559a":"### Predict charges for new clients."}}