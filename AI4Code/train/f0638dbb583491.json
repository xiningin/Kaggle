{"cell_type":{"9a76e99e":"code","09cc5e35":"code","4fd094d0":"code","e81823ba":"code","b5b2e90a":"code","df270c94":"code","acbc0866":"code","58164e17":"code","582739d7":"code","a2eef952":"code","92d59b74":"code","df3c9179":"code","eb7b3c35":"code","52a9b8a6":"code","eabb8c21":"code","a0b85c75":"code","f361a952":"code","acdc64d0":"code","bde256f1":"code","df95912b":"code","fd4a89e7":"code","5ff3468e":"code","9a9e97e2":"markdown","b1384187":"markdown","4ef1152c":"markdown","59bb1012":"markdown","62a40097":"markdown","8022931f":"markdown","d79360dd":"markdown","ba22698b":"markdown"},"source":{"9a76e99e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","09cc5e35":"import pandas as pd\nimport missingno as msno","4fd094d0":"bank_data = pd.read_csv(\"..\/input\/bank.csv\",sep=\";\")\nbank_data.head()","e81823ba":"bank_data.tail()","b5b2e90a":"msno.matrix(bank_data)","df270c94":"#lets find out numerical features in the Bank_data\nnumeric_features = bank_data.select_dtypes(include=[np.number])\n\nnumeric_features.columns","acbc0866":"categorical_features = bank_data.select_dtypes(include=[np.object])\n\ncategorical_features.columns","58164e17":"x = bank_data.job.value_counts()\nprint(x.idxmax()) #solution 1","582739d7":"print(x[x == x.max()]) ","a2eef952":"print(x[x == x.max()].index[0]) #solution 3","92d59b74":"bank_data.marital.value_counts()","df3c9179":"bank_data.education.value_counts()","eb7b3c35":"# above checks are to see if the required levels are represented in any other format\nbank_data.loc[(bank_data.marital == 'married') & (bank_data.education == 'tertiary'),'balance'].mean() #solution1","52a9b8a6":"#bank balance for marital status as 'single' & the customers who already finished their 'tertiary ' education\nbank_data.loc[(bank_data.marital == 'single') & (bank_data.education == 'tertiary'), 'balance'].mean() #solution 2","eabb8c21":"#Bank balance for those whose marital status as ' divorced' & those people who already finished their 'tertiary' education\nbank_data.loc[(bank_data.marital == \"divorced\") & (bank_data.education == 'tertiary'), 'balance'].mean() #solution 3","a0b85c75":"#Bank balane for marital status as 'married' & the customer who have done only 'primary' education\n\nbank_data.loc[(bank_data.marital == 'married') & (bank_data.education == 'primary'),'balance'].mean() #solution","f361a952":"#Bank balance for those are divorsed & the customer done only 'primary' education\nbank_data.loc[(bank_data.marital == 'divorced') & (bank_data.education == 'primary'),'balance'].mean() #solution","acdc64d0":"bank_data.groupby('education').agg({'age':'mean'})","bde256f1":"bank_data.drop(['job', 'day', 'month', 'pdays', 'previous', 'poutcome'],axis=1, inplace=True)\nbank_data.head()","df95912b":"cat_cols = bank_data.columns[bank_data.dtypes == 'object']\nnum_cols = bank_data.columns[bank_data.dtypes == 'object']\n\ntwo_level_cols = []\nmore_level_cols = []\n\nfor col in cat_cols:\n    if len(pd.unique(bank_data[col])) ==2:\n        two_level_cols.extend([col])\n    else:\n        more_level_cols.extend([col])\nprint(two_level_cols)\nprint(more_level_cols)","fd4a89e7":"for col in two_level_cols:\n    uq_values = pd.unique(bank_data[col])\n    print(uq_values)\n    bank_data.loc[bank_data[col]==uq_values[0], col] = 0\n    bank_data.loc[bank_data[col]==uq_values[1], col] = 1\n    print(pd.unique(bank_data[col]))","5ff3468e":"bank_data = pd.get_dummies(bank_data, columns=more_level_cols)\nbank_data.head()","9a9e97e2":"**2.d. Drop the following columns from the dataframe: job, day, momth, pdays, previous, poutcome**","b1384187":"**Recode the categorical variables with 2 levels as 0 & 1**","4ef1152c":"**At First we're considering 'bank.csv' file as Framing the Data with Pandas And we will solve some common problems that most of the people are facing to solve :\n1)what is the most common occupation in the 'Job' column?\n2)what is the (average) mean 'Balanc' for people with martial status as married and also education as tertiary?\n3)what is the mean \"age\" for diff. \"Educatin\" categories?\n4)Drop the following columns from the dataFrame:Job, day, month, previous, pdays,poutcome?\n5)Recode categorical variables with 2 levels as 0& 1.?\n6)replace the categorical variables with more than 2 levels with their rep.dummy variables?\n**","59bb1012":"**2.b. what's the mean (avg.) 'balance' for people with marital status as married and also education as tertiary?**\n","62a40097":"**1.a. What's the most common occupation in the 'Job' Column?**","8022931f":"there are 18 columns and 4521 rows in each columns","d79360dd":"**2.f. Replace categorical variables with more than 2 levels with their repective dummy variables**","ba22698b":"**2.c. what is the mean \"age\" for diff. 'education' categories?**"}}