{"cell_type":{"381e7a5f":"code","440b2a21":"code","1e917e26":"code","3cec9cb0":"code","2ce931da":"code","27a6d38b":"code","ceb932a4":"code","37810bcb":"code","3ef1b100":"code","9e53faa0":"code","996318f9":"code","a3b6f347":"code","9e253497":"code","c7f02040":"code","cc3f5962":"code","062b7ac6":"code","a2209b37":"code","c28fd8b7":"code","2922a8c4":"code","2b713bb2":"code","7279e3e7":"code","da3f1631":"code","a8d979dc":"code","8bc13b23":"code","3f9d473d":"code","1d0b74f9":"code","3bb0945c":"code","09610435":"code","e718143c":"code","6b215586":"code","883f465d":"code","e7eb0706":"code","e7ad4143":"code","172f3581":"code","f1750bb1":"code","b96f35ff":"code","247c7423":"code","f6bbbd5a":"code","01e6cfbe":"code","bb43f689":"code","3e61bf8c":"code","ddd896cb":"code","d37804fb":"code","68d1e6a3":"code","98753a27":"code","cd388a96":"code","3a1267ed":"code","5de82ec1":"code","5ecbbc7e":"code","8aa4963d":"code","dd4fd975":"code","f661728f":"code","40a55297":"code","d4ccbe41":"code","e8925bc5":"code","a3bbfe75":"code","24cd112c":"code","07b4fc69":"code","18d8f515":"code","a90f71a1":"code","3e9a0168":"code","81a852be":"code","7ab3dfce":"code","61f1df05":"code","ee92eec9":"code","8563933e":"code","869f1d92":"code","8b83bea8":"code","3b1fedd4":"code","3f32c3f4":"code","790d3d21":"code","c0d8d795":"code","4784bcb1":"code","03f293a3":"code","95833881":"code","f76ad410":"code","777f68f7":"code","10f4caaa":"code","e0e680b9":"code","b17b7a68":"code","0651f649":"markdown","6a17ea29":"markdown","a30e79e9":"markdown","4094816b":"markdown","681634f6":"markdown","88b088e6":"markdown","78faab86":"markdown","4e568f19":"markdown","a8bfa687":"markdown","cdfe1554":"markdown","56a44ae4":"markdown","1178a5ab":"markdown","6cff40bd":"markdown","7a09667a":"markdown","37e4a17e":"markdown","23983421":"markdown","893c9cf3":"markdown","6263c263":"markdown"},"source":{"381e7a5f":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #visualization tool\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","440b2a21":"data=pd.read_csv('..\/input\/fifa_ranking.csv') # import data","1e917e26":"data.info()","3cec9cb0":"data.describe()","2ce931da":"data.columns","27a6d38b":"data.head(10)","ceb932a4":"data.corr() # correlation of data","37810bcb":"#correlation map\nf,ax = plt.subplots(figsize=(15, 15))\nsns.heatmap(data.corr(), annot=True ,linewidth=5, fmt= '.1f',ax=ax)\nplt.show()","3ef1b100":"# L\u0130NE PLOT\n# x= previous_points,y=rank_change\ndata.previous_points.plot(kind='line',color='red',label=\"previous_points\",linewidth=2,alpha=0.5,grid=True,linestyle=':')\ndata.rank_change.plot(kind='line',color='blue',label=\"rank_change\",linewidth=2,alpha=0.5,grid=True,linestyle='--')\nplt.legend(loc='upper left') # loc=location\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title(\"Line Plot\")\nplt.show()","9e53faa0":"#Scatter Plot\n#x=rank,y=previous_points\ndata.plot(kind='Scatter',x='rank',y='previous_points',alpha=1,color='blue',linewidth=0.2)\nplt.xlabel('Rank')\nplt.ylabel('Previous_points')\nplt.title('Rank PP Scatter Plot')\nplt.show()\n","996318f9":"#Histogram\ndata.previous_points.plot(kind='hist',bins=20,figsize=(10,10))\nplt.show()","a3b6f347":"#F\u0130ltering\nseries = data['previous_points']        # data['Defense'] = series\nprint(type(series))\ndata_frame = data[['previous_points']]  # data[['Defense']] = data frame\nprint(type(data_frame))","9e253497":"#Filtering with dataframe\nx=data['previous_points']>1900\ndata[x]","c7f02040":"# 2 - Filtering numpy with logical_and\ndata[np.logical_and(data['previous_points']>1700, data['rank']<100 )]","cc3f5962":"#we can also use '&' for filtering.\ndata[(data['previous_points']>1850) & (data['rank']<100)]","062b7ac6":"import builtins\ndir(builtins)","a2209b37":"def cube():\n    \n    def add():\n        x=10\n        y=11\n        z=x+y\n        return z\n    return add ()**3\nprint(cube())","c28fd8b7":"#Default Arguments\ndef f(a,b=10,c = 4): #Please attention,hear is that non-default follows default.\n    z=a+b*c\n    return z\nprint(f(10))\n# \u0130f you wanna use different numbers that this function.\nprint(f(2,4,5))","2922a8c4":"#Threshold Value\nthreshold=sum(data.previous_points)\/len(data.previous_points)\ndata[\"value_level\"]=[\"high\" if i>threshold else \"low\" for i in data.previous_points]\ndata.loc[:20,[\"value_level\",\"previous_points\"]]\n","2b713bb2":"data=pd.read_csv(\"..\/input\/fifa_ranking.csv\")","7279e3e7":"data.tail()","da3f1631":"data.columns","a8d979dc":"data.shape #Data's row and columns","8bc13b23":"data.info()","3f9d473d":"print(data['confederation'].value_counts(dropna =False))#dropna=null is deleted","1d0b74f9":"data.describe()","3bb0945c":"new_data=data.head()\nnew_data","09610435":"melted= pd.melt(frame=new_data,id_vars='country_full',value_vars=['previous_points','country_abrv'])\nmelted\n","e718143c":"#Reverse Melted\nmelted.pivot(index = 'country_full', columns = 'variable',values='value')","6b215586":"data1 = data.head()\ndata2= data.tail()\nconc_data_row = pd.concat([data1,data2],axis =0,ignore_index =True) # axis = 0 : adds dataframes in row\nconc_data_row","883f465d":"data1 = data['country_full'].head()\ndata2= data['previous_points'].head()\nconc_data_col = pd.concat([data1,data2],axis =1) # axis = 0 : adds dataframes in row\nconc_data_col","e7eb0706":"data[\"country_full\"].value_counts(dropna =False)","e7ad4143":"#Zip Method\n\ncountry = [\"Turkey\",\"Hungary\"]\npopulation = [\"100\",\"120\"]\nlist_label = [\"country\",\"population\"]\nlist_col = [country,population]\nzipp = list(zip(list_label,list_col))\ndata_dict = dict(zipp)\ndf = pd.DataFrame(data_dict)\ndf","172f3581":"#add column\n\ndf[\"Capital\"]=[\"Ankara\",\"Budapest\"]\ndf","f1750bb1":"#add income\ndf[\"income\"]=100\ndf","b96f35ff":"#PLOT\ndata.columns\n\ndata1=data.loc[:,[\"rank\",\"previous_points\",\"rank_change\"]]\ndata1.plot()\n\n","247c7423":"#Subplots\ndata1.plot(subplots=True)\nplt.show()","f6bbbd5a":"#Scatter Plot\ndata1.plot(kind=\"scatter\",x=\"rank\",y=\"rank_change\")\nplt.show()","01e6cfbe":"#Histogram Plot\ndata1.plot(kind = \"hist\",y = \"previous_points\",bins = 100,range= (0,300),normed = True)\n#Normed=Normalization on data\n","bb43f689":"fig, axes = plt.subplots(nrows=2,ncols=1)\ndata1.plot(kind = \"hist\",y = \"previous_points\",bins = 50,range= (0,250),normed = True,ax = axes[0])\ndata1.plot(kind = \"hist\",y = \"previous_points\",bins = 50,range= (0,250),normed = True,ax = axes[1],cumulative = True)\nplt.savefig('graph.png')\nplt","3e61bf8c":"data.describe()","ddd896cb":"time_list=[\"1994-03-09\",\"1997-09-09\"]\nprint(type(time_list))\n#list(class) convert to datetime(class)\ndatetime_object=pd.to_datetime(time_list)\nprint(type(datetime_object))","d37804fb":"\n\ndata2=data.head()\ndate_list=[\"1994-03-09\",\"1994-06-20\",\"2015-01-04\",\"1997-09-09\",\"1997-08-23\"]\ndatetime_object=pd.to_datetime(date_list)\ndata2[\"date\"]=datetime_object\ndata2=data2.set_index(\"date\")\ndata2","68d1e6a3":"#Selecting with type of datetime\nprint(data2.loc[\"1994-03-09\"])\nprint(data2.loc[\"1994-06-20\":\"1997-08-23\"])","98753a27":"#Resampling Pandas Time Series\n# M=Month A=Year\ndata2.resample(\"A\").mean()","cd388a96":"data2.resample(\"M\").mean()","3a1267ed":"data2.resample(\"M\").mean().interpolate(\"linear\") #Linear \u0130nterpolate","5de82ec1":"data2.resample(\"M\").first().interpolate(\"linear\")","5ecbbc7e":"# read data\ndata=pd.read_csv(\"..\/input\/fifa_ranking.csv\")\ndata.head()","8aa4963d":"data[\"country_full\"][0]","dd4fd975":"data.country_full[0]","f661728f":"data.loc[0:5,[\"country_full\"]]","40a55297":"data[[\"rank\",\"country_full\"]]","d4ccbe41":"#SLICING DATAFRAME\nprint(type(data[\"country_full\"])) #Series\nprint(type(data[[\"country_full\"]]))#DataFrame\n\n","e8925bc5":"data.loc[0:10,\"rank\":\"country_full\"]","a3bbfe75":"data.loc[10:1:-1,\"rank\":\"country_full\"]#sorting from reverse","24cd112c":"data.loc[1:10,\"country_full\":]","07b4fc69":"boolean=data.previous_points >1900\ndata[boolean]","18d8f515":"first_filter=data.previous_points>1800\nsecond_filter=data.rank_change>-1\ndata[first_filter&second_filter]","a90f71a1":"data.rank_change[data.previous_points>1750]","3e9a0168":"def div(n):\n    return n\/2\n\ndata.previous_points.apply(div)\n","81a852be":"data.previous_points.apply(lambda n:n\/2)","7ab3dfce":"data[\"totals\"]=data.previous_points+data.rank_change\ndata.head()","61f1df05":"# our index name is this:\nprint(data.index.name)\n# lets change it\ndata.index.name = \"index_name\"\ndata.head()","ee92eec9":"# We can change number range..\ndata3=data.copy()\ndata3.index=range(100,57893,1)\ndata3.head()","8563933e":"data=pd.read_csv(\"..\/input\/fifa_ranking.csv\")\ndata.head()","869f1d92":"#Setting index\ndata1 = data.set_index([\"rank\",\"previous_points\"]) \ndata1.head(100)","8b83bea8":"dic = {\"treatment\":[\"A\",\"A\",\"B\",\"B\"],\"gender\":[\"F\",\"M\",\"F\",\"M\"],\"response\":[19,55,52,90],\"age\":[15,40,78,65]}\ndf = pd.DataFrame(dic)\ndf","3b1fedd4":"df.pivot(index=\"treatment\",columns=\"gender\",values=\"response\")\n","3f32c3f4":"df1=df.set_index([\"treatment\",\"gender\"])\ndf1","790d3d21":"df1.unstack(level=0)\n","c0d8d795":"df1.unstack(level=1)\n","4784bcb1":"# To Change place of indexes\ndf2=df1.swaplevel(0,1)\ndf2","03f293a3":"#Reverse of pivoting\ndf","95833881":"pd.melt(df,id_vars=\"treatment\",value_vars=[\"age\",\"response\"])","f76ad410":"df","777f68f7":"df.groupby(\"treatment\").mean()","10f4caaa":"df.groupby(\"treatment\").age.max()","e0e680b9":"df.groupby(\"treatment\")[[\"age\",\"response\"]].min() \n","b17b7a68":"df.info()","0651f649":"**MANIPULATING DATA FRAMES WITH PANDAS\u00b6**\n","6a17ea29":"CATEGORICALS AND GROUPBY\u00b6\n","a30e79e9":"HIERARCHICAL INDEXING\u00b6","4094816b":"****MATPLOTLIB****","681634f6":"**PANDAS**","88b088e6":"**MELTING DATA FRAMES**","78faab86":"PYTHON ATA SC\u0130ENCE TOOLBOOX","4e568f19":"**PIVOTING DATA FRAMES\u00b6**","a8bfa687":"FILTER\u0130NG  W\u0130TH DATAFRAMES","cdfe1554":"**STATISTICAL EXPLORATORY DATA ANALYSIS\u00b6**","56a44ae4":"MISSING DATA","1178a5ab":"Nested Function\n***\n","6cff40bd":"**VISUAL EXPLORATY  DATA ANALYSIS**","7a09667a":"INDEX OBJECTS AND LABELED DATA\u00b6\n","37e4a17e":"TRANSFORMING DATA\n","23983421":"STACKING and UNSTACKING DATAFRAME\ndeal with multi label indexes\nlevel: position of unstacked index\nswaplevel: change inner and outer level index position","893c9cf3":"**ADDING INDEX\u0130NG TIME SER\u0130ES**","6263c263":"* * > > > > > CLEANING DATA"}}