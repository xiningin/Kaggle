{"cell_type":{"94a8b27d":"code","549c391d":"code","d321d627":"code","118e937f":"code","b81622d0":"code","3f62b3a8":"code","01fac14f":"code","fe67b7b8":"code","042a61bf":"code","2dd7109d":"code","7a7191e0":"code","7a67b9fc":"markdown","88054c30":"markdown","df266df0":"markdown","e24418ef":"markdown","93fb5ddd":"markdown","5210d1d4":"markdown","283a9cd8":"markdown","de7cee1b":"markdown"},"source":{"94a8b27d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# Defaults\nimport matplotlib as mpl\nmpl.rcParams['figure.figsize'] = [16.0, 6.0]","549c391d":"df = pd.read_csv(\"\/kaggle\/input\/house-price-predictions-public-leader-board\/20200806_house-prices-advanced-regression-techniques-publicleaderboard.csv\")\ndf.head()","d321d627":"competitors = df['TeamId'].value_counts().count()\nentries = df['TeamId'].value_counts().sum()\n\nprint(\"{} competitors submitted a total of {} times\".format(competitors, entries))","118e937f":"# Keep only the best scores per TeamId\nmin_scores = df.groupby('TeamId').min()['Score'].sort_values().reset_index()","b81622d0":"top100 = min_scores['Score'][99]\nprint(\"To be in the top 100, your Score should be lower than {:.6f}\".format(top100))","3f62b3a8":"top10prc_idx = int(len(min_scores['Score'])\/10)\ntop10prc = min_scores['Score'][top10prc_idx]\nprint(\"To be in the 10%, your Score should be lower than {:.6f}\".format(top10prc))","01fac14f":"min_scores.sample(10)","fe67b7b8":"# Slice the sample\nmin_scores = min_scores[min_scores['Score'] <=1]","042a61bf":"f, ax = plt.subplots()\ng = sns.scatterplot(data=min_scores, x='TeamId', y='Score', ax=ax)\ng.set(ylim=(-0.01, 1.1))\nplt.title(\"Scores by TeamId\", size=18)\nsns.despine(ax=ax, bottom=True, left=True)\nax.axhline(top10prc, c='orange', ls='--')\nax.axhline(top100, c='r', ls='--')\nax.legend([\"top 10%\", \"top 100 positions\"])","2dd7109d":"f1, ax1 = plt.subplots()\ng1 = sns.scatterplot(data=min_scores, x='TeamId', y='Score', ax=ax1, x_jitter=True)\ng1.set(ylim=(-0.01, top10prc*1.1))\nplt.title(\"Scores by TeamId in detail of the top performances\", size=18)\nax1.axhline(top10prc, c='orange', ls='--')\nax1.axhline(top100, c='r', ls='--')\nax1.legend([\"top 10%\", \"top 100 positions\"])\nsns.despine(ax=ax1, bottom=True, left=True)","7a7191e0":"f2, ax2 = plt.subplots()\nplt.title(\"Percentual score distribution for top scores (<1) in Kaggle competition\", size=18)\nplt.ylabel(\"Percentual value\")\n\n# Generate bins\nbins_plt = np.arange(0,1,0.02)\nout = pd.cut(min_scores['Score'], bins=bins_plt, include_lowest=True)\n# Generate normalized distribution and plot\nout_norm = out.value_counts(sort=False, normalize=True).mul(100)\nout_norm.plot.bar(rot=90, ax=ax2)\n\n# Replace x tick labels\nbins = out.cat.categories\nbins_tuples = [str(c)[1:-1].replace(\",\", \" < \") for c in bins]\nax2.set_xticklabels(bins_tuples)\n\n\nax2.text(x=17,y=5,s=\"(I'm here)\")\nplt.arrow(x=17,y=4, dx=0, dy=-3)\n\nax2.text(x=33,y=5,s='(I was here)')\nplt.arrow(x=33,y=4, dx=0, dy=-3)\n\nax2.axvline(6, c='orange', ls='--')\nax2.axvline(5, c='red', ls='--')\nax2.text(x=2,y=30,s=\"Top 100\\npositions\", c='r')\nax2.text(x=7,y=30,s=\"Top 10%\", c='orange')\n\nsns.despine(ax=ax2, bottom=True, left=True)\n\nplt.show()","7a67b9fc":"# Answering questions\n## How many competitors are there?","88054c30":"# Summary\n\nThe house price prediction is a great challenge to improve data analysis and ML skills. If you want to be at the top of the leader board, you would like to learn a lot to improve both skills. I did my step but I'm far from reaching a top 10% position. The plots shown here are my motivation to keep improving myself.\n\nThis brief analysis gave me an overview of how much I improved my position. I highlight this point cause there is an important underlying concept here:\n\n_Observing, where are you on the list, is not the same as observing the score distribution and see where are you there_. If you want to climb positions up, there is a huge non-linearity. Let's see an example:\n\n- You are in 5000th position, with score 0.72\n- Then you improve your score to 0.62. You will climb up 25 positions\n- You improve again your score to 0.52. You gain 45 positions\n\nLastly but not less important, this analysis helped me on quantifying how difficult is to be in the top 10% of this competition.","df266df0":"This detailed view shows that there is a huge difference between the top 10% and top 100 positions. The density between them is massive but the density decreases extremely below the top 100 positions!\n## From other point of view\nI will like to see where I'm right now in the competition and that's why I would like to see the same information but from a different point of view.\n### Percentual distribution of the scores","e24418ef":"## What's the score of the 100th position?","93fb5ddd":"# Analyzing with plots\n\nI will be using only the best scores per \"TeamId\" in the following part. Also those scores higher than 1 will be cutted off.","5210d1d4":"## What's the worst score of the top 10%?","283a9cd8":"## Scores by \"TeamId\"","de7cee1b":"We can see in the above plot that if Kaggle assigns higher IDs to newer users\/teams, then this competence cought much more attention from newer users\/teams (see points density at the right!). Let's zoom-in the plot to see details on top-perfomance submissions:"}}