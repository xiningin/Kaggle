{"cell_type":{"3273a866":"code","f4c01807":"code","ddd3b82a":"code","cfbc8a16":"code","928df5be":"code","0cbd134c":"code","84d04e58":"code","05a35334":"code","9ee91a80":"code","2a24b621":"code","a6cfedaa":"code","6eea4205":"markdown","7369e880":"markdown","1d5dc63a":"markdown","58e6595a":"markdown","f0b5cfcc":"markdown"},"source":{"3273a866":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","f4c01807":"df = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/mohit-baliyan\/references\/master\/salary_data.csv\")\ndf.head()","ddd3b82a":"plt.scatter(df.YearsExperience, df.Salary, color = 'blue')\nplt.xlabel('Year Experience')\nplt.ylabel('Salary')\nplt.show()","cfbc8a16":"class LinearRegression():\n\n  def __init__(self, learning_rate, iteration):\n    self.learning_rate = learning_rate\n    self.iteration = iteration\n    self.weights = None\n    self.bias = None\n  \n\n  def fit(self,X, y):\n    # No. of Training Examples and Features\n    n_samples, n_features = X.shape\n\n    # Initial Parameters\n    self.weights = np.zeros(n_features)\n    self.bias = 0\n\n    # Gradient Descent\n    for _ in range(self.iteration):\n\n      y_predicted = np.dot(X, self.weights) + self.bias\n\n      dw = (1\/n_samples)*np.dot(X.T, y_predicted - y)\n      db = (1\/n_samples)*np.sum(y_predicted - y)\n\n      self.weights = self.weights - self.learning_rate * dw\n      self.bias = self.bias - self.learning_rate * db\n\n\n  def predict(self, X):\n    y_approximated = np.dot(X, self.weights) + self.bias\n    return y_approximated\n  \n  def cofficient(self):\n    print('Weights',self.weights)\n    print('Bias',self.bias)","928df5be":"X = df.iloc[:,:-1].values\ny = df.iloc[:,1].values","0cbd134c":"from sklearn.model_selection import train_test_split\nX_train,X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 48)","84d04e58":"X_train.shape","05a35334":"reg = LinearRegression(learning_rate=0.001, iteration = 1000)\nreg.fit(X_train, y_train)","9ee91a80":"y_pred = reg.predict(X_test)","2a24b621":"reg.cofficient()","a6cfedaa":"plt.scatter( X_test, y_test, color = 'blue' )\nplt.plot( X_test, y_pred, color = 'orange', )\nplt.title( 'Salary vs Experience' )\nplt.xlabel( 'Years of Experience' )\nplt.ylabel( 'Salary' )\nplt.show()","6eea4205":"# Importing the libraries","7369e880":"## Plotting the Data","1d5dc63a":"1. Numpy: For matrix transformation\n2. Pandas: For dataframe manupulation\n3. Matplotlib: For plotting the charts","58e6595a":"# **Linear Regression from Scratch**","f0b5cfcc":"# Creating a Regression Model"}}