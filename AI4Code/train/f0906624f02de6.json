{"cell_type":{"3c176d2e":"code","547f65f7":"code","808c5b64":"code","6e59c5d4":"code","0766431e":"code","56187cf3":"code","0427315f":"code","6007a1a2":"code","47272e00":"code","e2640a93":"code","f3f7f5fc":"code","96a27fe2":"code","20478e95":"code","ecc73bf0":"code","246e5ea7":"code","8ef78476":"code","e032bf21":"code","8a910e08":"code","db35be37":"code","b7119002":"code","8942a859":"code","590761cb":"code","ebb49a4d":"code","36ac9364":"code","dc8cc643":"code","f99875cb":"code","953a0ec9":"code","aee87bde":"code","2ca62275":"code","5ac3ba6d":"code","e04797b5":"code","74a6994b":"code","8fc73dd3":"code","75ed5b70":"code","e091c734":"code","76d7efe2":"code","1be39711":"code","b85e7aa5":"code","f58e7d74":"code","3d06cdcd":"code","f742d2af":"markdown","4c309811":"markdown","38318e7e":"markdown","7f78a25b":"markdown"},"source":{"3c176d2e":"import pandas as pd\nimport seaborn as sns\nimport matplotlib\nimport numpy as np","547f65f7":"def plot(get_chart, xlabel=None, ylabel=None, title=None , figsize=(10,6), xticks=None):\n    titledict = {'fontweight':'bold', 'fontsize': 15}\n    labeldict = {'fontsize': 13}\n    plt.figure(figsize = figsize)\n    ax = get_chart()\n    title and ax.set_title(title + \"\\n\", fontdict=titledict)\n    xlabel and ax.set_xlabel(xlabel, fontdict=labeldict)\n    xlabel and ax.set_ylabel(ylabel, fontdict=labeldict)\n    plt.show()","808c5b64":"import matplotlib.pyplot as plt\n%matplotlib inline","6e59c5d4":"#fields = ['competencia','secao','graudeinstrucao','idade','racacor','sexo','tipomovimentacao','salario', 'cbo2002ocupacao', 'categoria']\ndf = pd.read_csv('..\/input\/d\/isabellefo\/cageddata\/CAGED.csv', delimiter = \";\")\n#df = pd.read_csv('CAGED2020\\CAGED2020.csv', delimiter = \";\", low_memory=False)","0766431e":"df.head()","56187cf3":"df['idade'] = pd.to_numeric(df['idade'], errors='coerce')\ndf['salario'] = pd.to_numeric(df['idade'], errors='coerce')","0427315f":"df.isnull().sum()","6007a1a2":"df.dropna(inplace = True)","47272e00":"df['descsexo']= df['sexo'].map({1: 'Masculino',3 :'Feminino', 9: 'Nao Identificado'})\ndf['descraca'] = df['racacor'].map({1: 'Branca',2: 'Preta',3: 'Parda', 4: 'Amarela',5 : 'Indigena',6:'Nao Informada',  9: 'Nao Identificado'})\ndf['desctipomovimenta\u00e7\u00e3o'] = df['tipomovimentacao'].map({\n10:'Admiss\u00e3o por Primeiro Emprego',\n20:'Admiss\u00e3o por Reemprego', \n25:'Admiss\u00e3o por contrato trabalho prazo determinado',\n31:'Desligamento por Demiss\u00e3o sem Justa Causa', \n32:'Desligamento por Demiss\u00e3o com Justa Causa', \n33:'Culpa Rec\u00edproca',\n35:'Admiss\u00e3o por Reintegra\u00e7ao', \n40:'Desligamento a Pedido',\n43:'T\u00e9rmino contrato trabalho prazo determinado',\n45:'Desligamento por T\u00e9rmino de Contrato',\n50:'Desligamento por Aposentadoria', \n60:'Desligamento por morte',\n70:'Admiss\u00e3o por Transfer\u00eancia', \n80:'Desligamento por Transfer\u00eancia', \n90:'Desliamento por Acordo Empregado e Empregador',\n98:'Desligamento de Tipo Ignorado',\n99:'N\u00e3o Identificado'})\ndf['descgraudeinstrucao'] = df['graudeinstrucao'].map({\n        1:\"Analfabeto\",\n        2:\"At\u00e9 5\u00aa Incompleto\",\n        3:\"5\u00aa Completo Fundamental\",\n        4:\"6\u00aa a 9\u00aa Fundamental\",\n        5:\"Fundamental Completo\",\n        6:\"M\u00e9dio Incompleto\",\n        7:\"M\u00e9dio Completo\",\n        8:\"Superior Incompleto\",\n        9:\"Superior Completo\",\n        10:\"Mestrado\",\n        11:\"Doutorado\",\n        80:\"P\u00f3s-Gradua\u00e7\u00e3o completa\",\n        99:\"N\u00e3o Identificado\",\n    })\ndf['desctipodedeficiencia'] = df['tipodedeficiencia'].map({\n        1:\"F\u00edsica\",\n        2:\"Auditiva\",\n        3:\"Visual\",\n        4:\"Intelectual (Mental)\",\n        5:\"M\u00faltipla\",\n        6:\"Reabilitado\",\n        9:\"N\u00e3o Identificado\",\n        0:\"N\u00e3o Deficiente\",\n    })","e2640a93":"df.head(3)","f3f7f5fc":"df.info()","96a27fe2":"conditions = [\n    (df['tipomovimentacao'].isin([10,20,25,35,70])),\n    (df['tipomovimentacao'].isin([31,32,33,40,43,45,50,60,80,90,98])),\n    (df['tipomovimentacao'].isin([99]))\n    ]\n\nvalues = ['Admitido', 'Desligado', 'N\u00e3o identificado']\n\ndf['movimento'] = np.select(conditions, values)","20478e95":"plot(\n    get_chart = lambda: sns.countplot(x='descsexo', hue='movimento',data = df, palette='husl'),\n    title = \"Contagem de colaboradores admitidos e contratados por sexo\",\n    xlabel = \"Sexo\",\n    ylabel = \"Contagem\",\n)","ecc73bf0":"conditions = [\n    ((df['idade'] >= 0) & (df['idade'] <= 19)),\n    ((df['idade'] >= 20) & (df['idade'] <= 59)),\n    (df['idade'] >= 60)\n    ]\n\nvalues = ['Jovem', 'Adulto', 'Idoso']\n\ndf['faixa_etaria'] = np.select(conditions, values)","246e5ea7":"df[df['faixa_etaria']=='0']['idade']","8ef78476":"def get_chart():\n    ax = sns.countplot(x='faixa_etaria',hue='movimento',data = df, palette='husl')\n    ax.set(yscale=\"log\")\n    return ax\nplot(\n    get_chart = get_chart,\n    xlabel = \"Faixa Et\u00e1ria\",\n    ylabel = \"Contagem(log)\",\n    title = \"Contagem de colaboradores admitidos e contratados por faixa et\u00e1ria\" \n)","e032bf21":"def get_chart():\n    labeled_sectors = df.loc[:, ['movimento', 'graudeinstrucao']]\n    labeled_sectors['label'] = df['graudeinstrucao'].map({\n        1:\"Analfabeto\",\n        2:\"At\u00e9 5\u00aa Incompleto\",\n        3:\"5\u00aa Completo Fundamental\",\n        4:\"6\u00aa a 9\u00aa Fundamental\",\n        5:\"Fundamental Completo\",\n        6:\"M\u00e9dio Incompleto\",\n        7:\"M\u00e9dio Completo\",\n        8:\"Superior Incompleto\",\n        9:\"Superior Completo\",\n        10:\"Mestrado\",\n        11:\"Doutorado\",\n        80:\"P\u00f3s-Gradua\u00e7\u00e3o completa\",\n        99:\"N\u00e3o Identificado\",\n    })\n    order = labeled_sectors['label'].value_counts().index\n    ax = sns.countplot(y='label', hue='movimento',data=labeled_sectors,order=order, palette='husl')\n    return ax\n\nplot(\n    get_chart = get_chart,\n    title = \"Contagem de colaboradores admitidos e contratados por grau instru\u00e7\u00e3o\",\n    ylabel = \"Grau de instru\u00e7\u00e3o\",\n    xlabel = \"Contagem\",\n)","8a910e08":"def get_chart():\n    labeled_sectors = df.loc[:, ['movimento', 'secao']]\n    labeled_sectors['label'] = df['secao'].map({\n        \"A\":\"Agricultura, Pecu\u00e1ria, Produ\u00e7\u00e3o Florestal, Pesca e Aq\u00dcIcultura\",\n        \"B\":\"Ind\u00fastrias Extrativas\",\n        \"C\":\"Ind\u00fastrias de Transforma\u00e7\u00e3o\",\n        \"D\":\"Eletricidade e G\u00e1s\",\n        \"E\":\"\u00c1gua, Esgoto, Atividades de Gest\u00e3o de Res\u00edduos e Descontamina\u00e7\u00e3o\",\n        \"F\":\"Constru\u00e7\u00e3o\",\n        \"G\":\"Com\u00e9rcio, Repara\u00e7\u00e3o de Ve\u00edculos Automotores e Motocicletas\",\n        \"H\":\"Transporte, Armazenagem e Correio\",\n        \"I\":\"Alojamento e Alimenta\u00e7\u00e3o\",\n        \"J\":\"Informa\u00e7\u00e3o e Comunica\u00e7\u00e3o\",\n        \"K\":\"Atividades Financeiras, de Seguros e Servi\u00e7os Relacionados\",\n        \"L\":\"Atividades Imobili\u00e1rias\",\n        \"M\":\"Atividades Profissionais, Cient\u00edficas e T\u00e9cnicas\",\n        \"N\":\"Atividades Administrativas e Servi\u00e7os Complementares\",\n        \"O\":\"Administra\u00e7\u00e3o P\u00fablica, Defesa e Seguridade Social\",\n        \"P\":\"Educa\u00e7\u00e3o\",\n        \"Q\":\"Sa\u00fade Humana e Servi\u00e7os Sociais\",\n        \"R\":\"Artes, Cultura, Esporte e Recrea\u00e7\u00e3o\",\n        \"S\":\"Outras Atividades de Servi\u00e7os\",\n        \"T\":\"Servi\u00e7os Dom\u00e9sticos\",\n        \"U\":\"Organismos Internacionais e Outras Institui\u00e7\u00f5es Extraterritoriais\",\n        \"Z\":\"N\u00e3o identificado\",\n    })\n    order = labeled_sectors['label'].value_counts().index\n    return sns.countplot(y='label', hue='movimento',data=labeled_sectors, order= order, palette='husl')\nplot(\n    get_chart=get_chart,\n    title=\"Contagem de colaboradores admitidos e contratados por setor\",\n    ylabel= \"Setor\",\n    xlabel= \"Contagem\",\n    figsize=(10,12)\n)","db35be37":"from IPython.display import Markdown\ndf_admitidos = df[df['movimento']=='Admitido']\nmen_mean_income = df_admitidos[df_admitidos['sexo']==1]['salario'].mean()\nwomen_mean_income = df_admitidos[df_admitidos['sexo']==3]['salario'].mean()\ngender_diff_income = abs(men_mean_income - women_mean_income)\nMarkdown(\"\"\"# Diferen\u00e7a da m\u00e9dia salarial entre homens e mulheres admitidos\n#### Sal\u00e1rio m\u00e9dio de homens admitidos: {0:,.2f}    \n#### Sal\u00e1rio m\u00e9dio de mulheres admitidas: {1:,.2f}\n#### Diferen\u00e7a: {2:,.2f}\n\n\"\"\".format(men_mean_income, women_mean_income, gender_diff_income))","b7119002":"from IPython.display import Markdown\ndf_admitidos = df[df['movimento']=='Admitido']\nmen_mean_income = df_admitidos[df_admitidos['sexo']==1]['salario'].median()\nwomen_mean_income = df_admitidos[df_admitidos['sexo']==3]['salario'].median()\ngender_diff_income = abs(men_mean_income - women_mean_income)\nMarkdown(\"\"\"# Diferen\u00e7a da m\u00e9dia salarial entre homens e mulheres admitidos(mediana)\n#### Sal\u00e1rio m\u00e9dio de homens admitidos: {0:,.2f}    \n#### Sal\u00e1rio m\u00e9dio de mulheres admitidas: {1:,.2f}\n#### Diferen\u00e7a: {2:,.2f}\n\n\"\"\".format(men_mean_income, women_mean_income, gender_diff_income))","8942a859":"from IPython.display import Markdown\ndf_admitidos = df[df['movimento']=='Admitido']\ndf_desligados = df[df['movimento']=='Desligado']\n\nhired_men = df_admitidos[df_admitidos['sexo']==1]['sexo'].count()\nhired_women = df_admitidos[df_admitidos['sexo']==3]['sexo'].count()\nhired_gender_diff = abs(hired_men - hired_women)\n\nfired_men = df_desligados[df_desligados['sexo']==1]['sexo'].count()\nfired_women = df_desligados[df_desligados['sexo']==3]['sexo'].count()\nfired_gender_diff = abs(fired_men - fired_women)\n\nMarkdown(\"\"\"### Quantidade de admiss\u00f5es\/demiss\u00f5es por g\u00eanero no per\u00edodo da pandemia\n| |Homens|Mulheres| Diferen\u00e7a |\n|---| ---  |   ---  | --- |\n|Adimitidos | {0:,} | {1:,} | {2:,} |\n|Deslligados| {3:,} | {4:,} | {5:,} |\n\n\"\"\".format(hired_men, hired_women, hired_gender_diff, fired_men, fired_women, fired_gender_diff))","590761cb":"df_desligados = df[df['movimento']=='Desligado']\n\nfired_men_income = df_desligados[df_desligados['sexo']==1]['salario'].mean()\nfired_women_income = df_desligados[df_desligados['sexo']==3]['salario'].mean()\nfired_gender_diff = abs(fired_men_income - fired_women_income)\n\nMarkdown(\"\"\"# Diferen\u00e7a salarial entre homens e mulheres desligados\n#### Sal\u00e1rio m\u00e9dio de homens admitidos: {0:,.2f}    \n#### Sal\u00e1rio m\u00e9dio de mulheres admitidas: {1:,.2f}\n#### Diferen\u00e7a: {2:,.2f}\n\n\"\"\".format(fired_men_income, fired_women_income, fired_gender_diff))","ebb49a4d":"race_mean_income = df.groupby(['racacor'])['salario'].mean()\n\ndef get_chart():\n    labeled_sectors = df.loc[:, ['movimento', 'racacor']]\n    labeled_sectors['label'] = df['racacor'].map({\n        1:\"Branca\",\n        2:\"Preta\",\n        3:\"Parda\",\n        4:\"Amarela\",\n        5:\"Ind\u00edgena\",\n        6:\"N\u00e3o informada\",\n        9:\"N\u00e3o Identificado\"\n    })\n    order = labeled_sectors['label'].value_counts().index\n    ax = sns.barplot(y= race_mean_income.values, x= race_mean_income.index,data =labeled_sectors,  palette='husl')\n    return ax\nplot(\n    get_chart,\n    title=\"M\u00e9dia sal\u00e1rial de moviementa\u00e7\u00e3o por etinia\",\n    xlabel=\"Etin\u00eda\",\n    ylabel=\"Contagem\",\n)","36ac9364":"plot(\n    lambda: sns.countplot(x='descraca', hue='descgraudeinstrucao',data = df, palette='husl'),\n    title=\"Diferen\u00e7a de escolaridade por ra\u00e7a\/cor\",\n    xlabel=\"Ra\u00e7a\/cor\",\n    ylabel=\"Contagem\"\n)","dc8cc643":"plot(\n    lambda: sns.countplot(hue='desctipomovimenta\u00e7\u00e3o', x='descsexo',data = df_desligados, palette='husl'),\n    title=\"Causas de demiss\u00e3o formalizadas pelos empregadores distribu\u00eddas por sexo\",\n    xlabel=\"Sexo\",\n    ylabel=\"Contagem\",\n)","f99875cb":"plot(\n    lambda: sns.countplot(hue='desctipomovimenta\u00e7\u00e3o', x='descraca',data = df_desligados, palette='husl'),\n    title=\"Causas de demiss\u00e3o formalizadas pelos empregadores distribu\u00eddas por ra\u00e7a\/cor\",\n    xlabel=\"Ra\u00e7a\/cor\",\n    ylabel=\"Contagem\"\n)","953a0ec9":"plot(\n    lambda: sns.countplot(hue='desctipomovimenta\u00e7\u00e3o', x='faixa_etaria',data = df_desligados, palette='husl'),\n    title=\"Causas de demiss\u00e3o formalizadas pelos empregadores distribu\u00eddas por faixa et\u00e1ria\",\n    xlabel=\"Faixa Et\u00e1ria\",\n    ylabel=\"Contagem\",\n)","aee87bde":"df['desccbo2002ocupacao'] = df['cbo2002ocupacao'].map({\n717020:'Servente de Obras',\n622505:'Trabalhador no Cultivo de Arvores Frutiferas', \n514320:'Faxineiro (Desativado em 2010)',\n411010:'Assistente Administrativo', \n622110:'Trabalhador da Cultura de Cana-De-Acucar', \n411005:'Auxiliar de Escritorio, em Geral',\n234520:'Professor de Ensino Superior na Area de Pratica de Ensino',\n234505:'Professor de Ensino Superior na Area de Didatica',\n521110:'Vendedor de Comercio Varejista', \n784205:'Alimentador de Linha de Producao',\n223505:'Enfermeiro'})","2ca62275":"df.groupby('descgraudeinstrucao')['desccbo2002ocupacao'].value_counts().groupby(level=0, group_keys=False).head(2)","5ac3ba6d":"df['competencia'].value_counts()","e04797b5":"df_admitidos[df_admitidos['tipodedeficiencia']!=0]['desctipodedeficiencia'].value_counts()","74a6994b":"df_desligados[df_desligados['tipodedeficiencia']!=0]['desctipodedeficiencia'].value_counts()","8fc73dd3":"df_admitidos['faixa_etaria'].value_counts()","75ed5b70":"gastos = pd.read_csv('..\/input\/gatos-2020\/Gastos_2020_.csv', sep=';')","e091c734":"gastos.head(13)","76d7efe2":"gastos = gastos.drop([gastos.index[12]])","1be39711":"gastos.info()","b85e7aa5":"gastos['ICMS'] = gastos['ICMS'].apply(lambda x:x.replace(\".\", \"\"))\ngastos['ICMS'] = gastos['ICMS'].apply(lambda x:x.replace(\",\", \".\"))\ngastos['ICMS'] = pd.to_numeric(gastos['ICMS'])\n","f58e7d74":"gastos['Total'] = gastos['Total'].apply(lambda x:x.replace(\".\", \"\"))\ngastos['Total'] = gastos['Total'].apply(lambda x:x.replace(\",\", \".\"))\ngastos['Total'] = pd.to_numeric(gastos['Total'])","3d06cdcd":"plot(\n    lambda: sns.barplot(x='Meses', y='Total',data = gastos, palette='husl'),\n    title=\"Repasses de 2020 - S\u00e3o Jos\u00e9 dos Campos\",\n    xlabel=\"Meses\",\n    figsize=(15, 6),\n    ylabel=\"Total\",\n)\n","f742d2af":"### Diferen\u00e7a salarial entre homens e mulheres desligados","4c309811":"### Duas profiss\u00f5es (ocupa\u00e7\u00f5es) mais escolhidas por n\u00edvel escolar","38318e7e":"### Causas de demiss\u00e3o formalizadas pelos empregadores distribu\u00eddas por sexo, ra\u00e7a\/cor e faixa et\u00e1ria","7f78a25b":"### Quantidade de admiss\u00f5es\/demiss\u00f5es por g\u00eanero no per\u00edodo da pandemia"}}