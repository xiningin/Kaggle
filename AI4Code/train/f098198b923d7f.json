{"cell_type":{"25adb143":"code","e9e955c8":"code","45c62252":"code","37c45767":"code","8362357c":"code","8cd59805":"code","34f8630d":"code","7e14388b":"code","2e6a9d62":"code","a4ff1cb9":"code","23e6bfd4":"code","7090553b":"code","c4b6a1e8":"code","9261791a":"code","a638f2cc":"code","9bb646ea":"code","38b6f064":"code","fbc92854":"code","1f6a682a":"code","d8091b81":"code","c116eb9e":"code","4932f4d0":"code","0d09d6e2":"markdown","0eec4419":"markdown","fcf31691":"markdown","59078fb6":"markdown","9983bdb5":"markdown","ab5e9d08":"markdown"},"source":{"25adb143":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport folium \nfrom folium import plugins\n\nimport json \nfrom datetime import datetime\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","e9e955c8":"patient = pd.read_csv('\/kaggle\/input\/coronavirusdataset\/PatientInfo.csv')\nroute = pd.read_csv('\/kaggle\/input\/coronavirusdataset\/PatientRoute.csv')","45c62252":"patient.head()","37c45767":"route.head()","8362357c":"print('There is some difference between Male and Female.')\nprint('But, it is difficult to be considered that Female is more vulnerable to CVD-19 than male.')\nsns.countplot(patient['sex'])\nplt.title('Distribution of Sex')\nplt.show()","8cd59805":"patient['age'] = 2020 - patient['birth_year'] + 1\npatient['age_group'] = patient['age'] \/\/ 10\npatient['age_group'] = [str(a).replace('.','') for a in patient['age_group']]\n\nprint('Female 20, 40, 50 age rank top with significant difference.')\nprint('What happens to them? It might be a next topic of my analysis')\nplt.figure(figsize = (15,8))\nax = sns.countplot(patient['sex'].str.cat(patient['age_group']))\nax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right')\nplt.show()","34f8630d":"sns.countplot(patient['country'])\nplt.title('Distribution of Country')\nplt.show()","7e14388b":"ax = sns.countplot(patient['infection_case'])\nax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right')\nplt.title('Distribution of infection_case')\nplt.show()","2e6a9d62":"print('As you can see Capital area, Daegu, and Gyeongsangbuk-do rank top 3.')\nax = sns.countplot(patient['province'])\nax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right')\nplt.title('How many patient by each province')\nplt.show()","a4ff1cb9":"ax = sns.countplot(patient['infection_order'])\nax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right')\nplt.title('Distribution of Infection order')\nplt.show()","23e6bfd4":"print('In my opinion, there seems to be 7 anomalies points, which locate above the red line.')\nprint('They might have a important role on spread of CVD 19.')\nprint('Lets take a look at those.')\nsns.scatterplot(patient['patient_id'],patient['contact_number'])\nplt.plot([0,7000000000], [200,200], color = 'red')\nplt.title('Distribution of Contact_number')\nplt.show()","7090553b":"anomaly_id = patient.query('contact_number > 200')['patient_id'].values; display(anomaly_id)","c4b6a1e8":"def make_polygon(route_df, patient_df, id_num):\n    \n    id_filter = route_df.query('patient_id == @id_num')\n    id_filter['timestamp'] = [json.dumps(date+'T00:00:00') for date in id_filter['date']]\n    \n    ctc = int(patient_df.query('patient_id == @id_num')['contact_number'].values[0])\n    \n    print(f'{id_num}th patient made contacts with {ctc} in those path')\n    \n    id_filter_shift = id_filter.shift(-1) \n\n    # set the zoom point\n    m = folium.Map([37, 128], zoom_start=7)\n\n    # set the icon on Incheon airport and gimpo airport\n    icon_plane1 = plugins.BeautifyIcon( icon='plane', border_color='#b3334f', text_color='#b3334f', icon_shape='triangle')\n    icon_plane2 = plugins.BeautifyIcon( icon='plane', border_color='#b3334f', text_color='#b3334f', icon_shape='triangle')\n\n    folium.Marker( location=[37.4692, 126.451], popup='incheon airport', icon=icon_plane1).add_to(m)\n    folium.Marker( location=[37.558808, 126.794458], popup='gimpo airport', icon=icon_plane2 ).add_to(m)\n\n    # add the fullscreen utility. if you don't need, it's ok to remark the line :)\n    plugins.Fullscreen( position='topright', title='Click to expand', title_cancel='Click to exit', force_separate_button=True ).add_to(m)\n\n    folium.Polygon( locations = id_filter[['latitude','longitude']], fill = True, tooltip = 'Polygon' ).add_to(m) \n    \n    for lat,lon in zip(id_filter.latitude, id_filter.longitude): \n        folium.Circle( location = [lat,lon], \n                      radius = 400,\n                     color = 'red').add_to(m)\n    \n    return m","9261791a":"make_polygon(route, patient, 1200000031)","a638f2cc":"make_polygon(route, patient, 1300000001)","9bb646ea":"make_polygon(route, patient, 2000000003)","38b6f064":"make_polygon(route, patient, 2000000006)","fbc92854":"def make_polygon_time(route_df, patient_df, id_num):\n    print(f'Where {id_num}th patient went for several days')\n    \n    \n    # set the zoom point\n    m = folium.Map([37, 128], zoom_start=7)\n    \n    id_filter = route_df.query('patient_id == @id_num')\n    id_filter['timestamp'] = [date+'T00:00:00' for date in id_filter['date']]\n    id_filter_shift = id_filter.shift(-1) \n    \n    # set the icon on Incheon airport and gimpo airport\n    icon_plane1 = plugins.BeautifyIcon( icon='plane', border_color='#b3334f', text_color='#b3334f', icon_shape='triangle')\n    icon_plane2 = plugins.BeautifyIcon( icon='plane', border_color='#b3334f', text_color='#b3334f', icon_shape='triangle')\n\n    folium.Marker( location=[37.4692, 126.451], popup='incheon airport', icon=icon_plane1 ).add_to(m)\n    folium.Marker( location=[37.558808, 126.794458], popup='gimpo airport', icon=icon_plane2 ).add_to(m)\n    \n    # add the fullscreen utility. if you don't need, it's ok to remark the line :)\n    plugins.Fullscreen( position='topright', title='Click to expand', title_cancel='Click to exit', force_separate_button=True ).add_to(m)\n\n    \n    lines = []\n    for lon, lat, time, lon_s, lat_s, time_s in zip(id_filter['longitude'], id_filter['latitude'], id_filter['timestamp'], \n                                                    id_filter_shift['longitude'], id_filter_shift['latitude'], id_filter_shift['timestamp']):\n        temp_dict = {}\n        temp_dict['coordinates'] = [[lon,lat], [lon_s,lat_s]]\n        temp_dict['dates'] = [time,time_s]\n        temp_dict['color'] = 'red'\n\n        lines += [temp_dict]\n\n    del lines[-1]\n\n    features = [ { 'type': 'Feature', \n                  'geometry': { 'type': 'LineString', \n                               'coordinates': line['coordinates'], }, \n                  'properties': { 'times': line['dates'], \n                                 'style': { 'color': line['color'], \n                                           'weight': line['weight'] if 'weight' in line else 5 } } } for line in lines ] \n\n    plugins.TimestampedGeoJson({ 'type': 'FeatureCollection', 'features': features, }, period='P1D', add_last_point=True).add_to(m) \n\n    return m","1f6a682a":"make_polygon_time(route, patient, 1200000031)","d8091b81":"make_polygon_time(route, patient, 1300000001)","c116eb9e":"make_polygon_time(route, patient, 2000000003)","4932f4d0":"make_polygon_time(route, patient, 2000000006)","0d09d6e2":"## geospatial EDA of CVD 19\n\nHi all :) ,\n\nThis is Yeonjun In from Korea. \n\nI made the kernel for spread of CVD 19 focused on geospatial EDA.\n\nThank you","0eec4419":"## Let't do it with time variable","fcf31691":"## Thank you for attention :) ","59078fb6":"## Start with patient data ","9983bdb5":"## Let's make geospatial plot\n\n- to see where the anomalies went","ab5e9d08":"# What i discover\n- If you remember how many patients by each region, capital area, Daegu, and Gyeongsangbuk-do rank top 3.\n- As you can see in geospatial plot, almost anomalies went capital area, Daegu.\n- I have gotten a kind of suspicion about the impact of anomalies on spread of CVD-19"}}