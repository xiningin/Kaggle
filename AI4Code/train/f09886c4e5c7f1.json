{"cell_type":{"72f8534e":"code","f926a0d7":"code","ba5355c3":"code","33aecb85":"code","4f58e5b0":"markdown","8ed35cb2":"markdown","cbe592ef":"markdown","ce702b80":"markdown","d43e216f":"markdown","3a84d433":"markdown","af597bc5":"markdown","b8ebdb77":"markdown","6c19c0d0":"markdown"},"source":{"72f8534e":"import pandas as pd\nimport cv2\nimport numpy as np\nimport seaborn as sns\nimport requests\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport matplotlib.cm as mtpltcm\nfrom mpl_toolkits.mplot3d import Axes3D\nimport feedparser\nimport random\nimport folium\nfrom folium.plugins import HeatMap, HeatMapWithTime\nfrom folium import plugins\nfrom netCDF4 import Dataset\nimport cartopy.crs as ccrs\nimport pydub\nfrom scipy.io.wavfile import read, write\nimport librosa\nimport librosa.display\nimport IPython\nfrom IPython.display import Audio\nimport scipy\nimport skimage\nfrom IPython.display import HTML\nimport matplotlib.animation as animation\nimport PIL\nfrom scipy import signal\nfrom scipy.fft import fftshift\nfrom mpl_toolkits.mplot3d import art3d\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\nimport plotly.express as px\nimport plotly.offline as po\nimport plotly.graph_objs as go\n\n\nfrom warnings import filterwarnings\n\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)\nfilterwarnings(\"ignore\", category=RuntimeWarning)\n\nfrom kaggle_secrets import UserSecretsClient","f926a0d7":"USER_SECRET_OPTION = UserSecretsClient()\nSECRET_OUT_MAIN = USER_SECRET_OPTION.get_secret(\"SITE_TARGET\")\nSECRET_OUT_START = USER_SECRET_OPTION.get_secret(\"ENTRY_START\")\nSECRET_OUT_NAME = USER_SECRET_OPTION.get_secret(\"NAME_MAIN\")\nSECRET_OUT_LOCATION = USER_SECRET_OPTION.get_secret(\"LOCATION_MAIN\")\nSECRET_OUT_STATUS = USER_SECRET_OPTION.get_secret(\"STATUS_MAIN\")","ba5355c3":"URL_TARGET=SECRET_OUT_MAIN\n        \nMAIN_URL = feedparser.parse(URL_TARGET)\nENTRIES = MAIN_URL[SECRET_OUT_START]\nCONTROL_ENTRIES = ENTRIES[0]","33aecb85":"MAP_FUNCTION = folium.Map(location=[25.9637,38.2433],\n                          tiles=\"Stamen Toner\",\n                  zoom_start=2.2)\n\nfor X_PARAMETER_TARGET in range(len(ENTRIES)):\n    \n\n    CONTROL_ENTRIES = ENTRIES[X_PARAMETER_TARGET]\n\n    LAT_TARGET = CONTROL_ENTRIES[SECRET_OUT_LOCATION].split(\" \")[0]\n    LON_TARGET = CONTROL_ENTRIES[SECRET_OUT_LOCATION].split(\" \")[1]\n    NAME_TARGET = CONTROL_ENTRIES[SECRET_OUT_NAME].split(\"]\")[1]\n    TYPE_TARGET = NAME_TARGET.split(\" \")\n   \n    STATUS_TARGET = CONTROL_ENTRIES[SECRET_OUT_STATUS]\n    \n\n    if \"Fire\" in TYPE_TARGET or \"Fires\" in TYPE_TARGET or \"Wildfire\" in TYPE_TARGET or \"Wildfires\" in TYPE_TARGET\\\n    or \"Forest\" in TYPE_TARGET or \"fire\" in TYPE_TARGET or \"fires\" in TYPE_TARGET:\n\n        folium.Marker(\n            location=[float(LAT_TARGET),float(LON_TARGET)],\n            popup=f\"<h3><b>{NAME_TARGET}<\/b><\/h3> - <h5><b>{STATUS_TARGET}<\/b><\/h5>\",\n            tooltip=\"Click me\",\n            icon=folium.Icon(color=\"red\",icon=\"flag\")\n        ).add_to(MAP_FUNCTION)\n        \n    elif \"Volcano\" in TYPE_TARGET:\n        \n        folium.Marker(\n            location=[float(LAT_TARGET),float(LON_TARGET)],\n            popup=f\"<h3><b>{NAME_TARGET}<\/b><\/h3> - <h5><b>{STATUS_TARGET}<\/b><\/h5>\",\n            tooltip=\"Click me\",\n            icon=folium.Icon(color=\"yellow\",icon=\"flag\")\n        ).add_to(MAP_FUNCTION)\n        \n    elif \"Flood\" in TYPE_TARGET:\n        \n        folium.Marker(\n            location=[float(LAT_TARGET),float(LON_TARGET)],\n            popup=f\"<h3><b>{NAME_TARGET}<\/b><\/h3> - <h5><b>{STATUS_TARGET}<\/b><\/h5>\",\n            tooltip=\"Click me\",\n            icon=folium.Icon(color=\"blue\",icon=\"cloud\")\n        ).add_to(MAP_FUNCTION)\n        \n        \n    elif \"Earthquake\" in TYPE_TARGET:\n        \n        folium.Marker(\n            location=[float(LAT_TARGET),float(LON_TARGET)],\n            popup=f\"<h3><b>{NAME_TARGET}<\/b><\/h3> - <h5><b>{STATUS_TARGET}<\/b><\/h5>\",\n            tooltip=\"Click me\",\n            icon=folium.Icon(color=\"green\",icon=\"info-sign\")\n        ).add_to(MAP_FUNCTION)\n        \n    else:\n        \n        folium.Marker(\n            location=[float(LAT_TARGET),float(LON_TARGET)],\n            popup=\"<b>UNDEFINED<\/b>\",\n            tooltip=\"Click me\"\n        ).add_to(MAP_FUNCTION)\n        \n\nfolium.TileLayer('openstreetmap').add_to(MAP_FUNCTION)\nfolium.TileLayer('Stamen Terrain').add_to(MAP_FUNCTION)\nfolium.TileLayer('stamenwatercolor').add_to(MAP_FUNCTION)\nfolium.TileLayer('cartodbpositron').add_to(MAP_FUNCTION)\nfolium.TileLayer('cartodbdark_matter').add_to(MAP_FUNCTION)\nfolium.LayerControl().add_to(MAP_FUNCTION)\nMAP_FUNCTION","4f58e5b0":"![YAZI-LOGO-JPG-BEYAZ.jpg](attachment:f7b01b6d-5770-40ab-921d-6fa7b0b6f258.jpg)","8ed35cb2":"# **DISASTER CONTROL**","cbe592ef":"# **PACKAGES AND LIBRARIES**","ce702b80":"<h4>\n    <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#000000;\n           font-size:120%;\n           font-family:Verdana;\n           letter-spacing:0.7px\">\n\n<p style=\"padding: 40px;\n              color:white;\">\nThis notebook is designed to be refreshed every 2 hours. In this way, you can check the real-time natural disasters by checking it every two hours.\n<\/p>\n<\/div>\n    <\/h4>","d43e216f":"### **READING PARSER AND LXML**","3a84d433":"### **SECRET KEYS**","af597bc5":"![BANNER-SADECE-YAZI-S\u0130YAH-JPG.jpg](attachment:e62d82ea-c33e-4118-9cf4-ef023d504c65.jpg)","b8ebdb77":"<h4>\n    <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#000000;\n           font-size:120%;\n           font-family:Verdana;\n           letter-spacing:0.7px\">\n\n<p style=\"padding: 40px;\n              color:white;\">\nNOTE THAT: That was produced for testing before main process. When all parameters are ready, you will see all functional features of CEI. \n<\/p>\n<\/div>\n    <\/h4>","6c19c0d0":"<h4>\n    <div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#570101;\n           font-size:120%;\n           font-family:Verdana;\n           letter-spacing:0.7px\">\n\n<p style=\"padding: 40px;\n              color:white;\">\nCLIMATIC EYE OF ISCI was produced by ISCI-Lab in order to stop the climate crisis and to detect natural disasters in real time. CEI-Climatic Eye of ISCI is not just a software tool. At the same time, it proceeds as a network using database and can be integrated into all platforms.\n<\/p>\n<\/div>\n    <\/h4>"}}