{"cell_type":{"eba76d91":"code","3594dacd":"code","5341a8a7":"code","6f2bcccf":"code","f5df5ce2":"code","b755a495":"code","ad397aab":"code","434616a3":"code","e96d262c":"code","6a1265b4":"code","c0c510ba":"code","fe143966":"code","64222a86":"code","49fccf96":"code","3de46a67":"code","91fd7365":"code","a73dc366":"code","8c3b46d0":"code","bdf5f763":"code","13c29fcd":"markdown","0ccb9b8a":"markdown","269c2f8a":"markdown"},"source":{"eba76d91":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Any results you write to the current directory are saved as output.","3594dacd":"admission = pd.read_csv('..\/input\/Admission_Predict.csv')","5341a8a7":"admission.head()","6f2bcccf":"admission.info()","f5df5ce2":"admission.isnull().sum()","b755a495":"target = admission['Chance of Admit ']\ntarget.head()","ad397aab":"df = admission.copy()\ndf.head()","434616a3":"df.nunique()","e96d262c":"sns.scatterplot(df['GRE Score'][:100],df['Chance of Admit '][:100],s=25,data=df);","6a1265b4":"df.corr()['Chance of Admit ']","c0c510ba":"df.drop(columns='Chance of Admit ',axis=1,inplace=True)\ndf.head()","fe143966":"df.set_index('Serial No.',inplace=True)\ndf.head()","64222a86":"from sklearn.model_selection import train_test_split\n\nX_train,X_valid,y_train,y_valid = train_test_split(df,target,random_state=0)","49fccf96":"from sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import LogisticRegression\n\nlog_clf = LinearRegression().fit(X_train,y_train)\nlnr_clf = LinearRegression().fit(X_train,y_train)","3de46a67":"print('Accuracy of Logistic regression classifier on test set: {:.3f}'.format(log_clf.score(X_train,y_train)))\nprint('Accuracy of Logistic regression classifier on test set: {:.3f}'.format(log_clf.score(X_valid,y_valid)))\nprint()\nprint('Accuracy of Linear regression classifier on test set: {:.3f}'.format(lnr_clf.score(X_train,y_train)))\nprint('Accuracy of Linear regression classifier on test set: {:.3f}'.format(lnr_clf.score(X_valid,y_valid)))","91fd7365":"from sklearn.tree import DecisionTreeRegressor\n\ndt_clf = DecisionTreeRegressor().fit(X_train, y_train)\n\nprint('Accuracy of Logistic regression classifier on test set: {:.3f}'.format(dt_clf.score(X_train,y_train)))\nprint('Accuracy of Logistic regression classifier on test set: {:.3f}'.format(dt_clf.score(X_valid,y_valid)))","a73dc366":"from sklearn.neighbors import KNeighborsRegressor\n\nknn_clf = KNeighborsRegressor().fit(X_train, y_train)\n\nprint('Accuracy of Logistic regression classifier on test set: {:.3f}'.format(knn_clf.score(X_train,y_train)))\nprint('Accuracy of Logistic regression classifier on test set: {:.3f}'.format(knn_clf.score(X_valid,y_valid)))","8c3b46d0":"from sklearn.neighbors import KNeighborsRegressor\n\nknn_clf = KNeighborsRegressor(n_neighbors=8).fit(X_train, y_train)\n\nprint('Accuracy of Logistic regression classifier on test set: {:.3f}'.format(knn_clf.score(X_train,y_train)))\nprint('Accuracy of Logistic regression classifier on test set: {:.3f}'.format(knn_clf.score(X_valid,y_valid)))","bdf5f763":"from sklearn.svm import SVR\n\nsvc_reg = SVR(gamma='auto').fit(X_train,y_train)\n\nprint('Accuracy of Logistic regression classifier on test set: {:.3f}'.format(svc_reg.score(X_train,y_train)))\nprint('Accuracy of Logistic regression classifier on test set: {:.3f}'.format(svc_reg.score(X_valid,y_valid)))","13c29fcd":"The above putput is an example of overfitting","0ccb9b8a":"By default the `n_neighbors` value to 8 and we can crealy see that we have avoided overfitting to some extent","269c2f8a":"By default the `n_neighbors` value in KNN is 5"}}