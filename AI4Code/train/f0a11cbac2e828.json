{"cell_type":{"721e78a1":"code","4ee475e9":"code","ec2d7e86":"code","c22fe028":"code","8d59aff2":"code","a8605eda":"code","8f2df2b5":"code","eee745c3":"code","cf02c353":"code","8e2d21f0":"code","588c6ffe":"code","cf69d55b":"code","420f3bc6":"code","dd7fc5cc":"code","bcf60e17":"code","fe76dbc5":"code","7ba45e3a":"code","633b3f16":"code","45b0240e":"code","f8c8e8d2":"code","b4daa7bc":"code","78cab208":"code","4bd867c7":"code","ca099f01":"code","cef4333f":"code","5566e0fe":"markdown"},"source":{"721e78a1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport sys\nprint(\"Python version: {}\". format(sys.version))\n\nimport pandas as pd\nprint(\"pandas version: {}\". format(pd.__version__))\n\nimport matplotlib \nprint(\"matplotlib version: {}\". format(matplotlib.__version__))\n\nimport numpy as np \nprint(\"NumPy version: {}\". format(np.__version__))\n\nimport scipy as sp \nprint(\"SciPy version: {}\". format(sp.__version__)) \n\n\n\nimport random\nimport time\n\nfrom datetime import datetime\n\nimport warnings\nwarnings.filterwarnings('ignore')\nprint('-'*25)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4ee475e9":"###Install all important libraries...","ec2d7e86":"\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport matplotlib.pylab as pylab\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\nmpl.style.use('ggplot')\nsns.set_style('white')\npylab.rcParams['figure.figsize'] = 12,8","c22fe028":"data_raw= pd.read_csv(\"..\/input\/windows-store\/msft.csv\")\ndata1=data_raw.copy(deep=True)\nprint(data_raw.info())\ndata_raw.sample(10)","8d59aff2":"data1.isnull().sum()","a8605eda":"data1.describe(include='all')","8f2df2b5":"    data1[\"Rating\"].fillna(data1[\"Rating\"].mode()[0],inplace=True)  \n    data1[\"Category\"].fillna(data1[\"Category\"].mode()[0],inplace=True) \n    data1[\"Price\"].fillna(data1[\"Price\"].mode()[0],inplace=True)\n    data1[\"Date\"] = data1['Date'].astype('datetime64[ns]')\n    data1[\"Date\"].fillna(data1['Date'].mean(),inplace=True)\n    \n","eee745c3":"data1['Price']=data1['Price'].str.replace(',', '')\ndata1['Price']=data1['Price'].str.replace('\u20b9', '')\ndata1['Price']=data1['Price'].apply(lambda x:0 if x=='Free'else x)\ndata1['Price']=data1['Price'].astype(\"float64\")","cf02c353":"data1['Ratebin']=pd.cut(data1['Rating'],8)\ndata1['Ratersbin']=pd.cut(data1['No of people Rated'].astype(int),9)\ndata1[\"Ratebin\"]","8e2d21f0":"data1.isnull().sum()","588c6ffe":"data1.info()","cf69d55b":"data1","420f3bc6":"#create time span column\nfrom datetime import date\ntoday = date.today()\ntoday=pd.to_datetime(today)\ndata1['Date'] = pd.to_datetime(data1['Date'])\ndata1['Duration'] = today-data1['Date']\ndata1['Duration']=data1['Duration'].dt.days\ndata1['Duration'].min()","dd7fc5cc":"data1['Durationbin']=pd.cut(data1['Duration'],[-200,0,365,730,1095,1460,1825,3850],labels=[\"Not Released\",\"1 Year\",\"2 Years\",\"3 Years\",\n                                                                                          \"4 Years\",\"5 Years\",\"More Than 5 Years\"])\ndata1['Price'].value_counts()\n","bcf60e17":"\ndata1[\"Pricebin\"]=pd.cut(data1[\"Price\"],[-0.5,0.0,500,1000,1500,2000,6000])","fe76dbc5":"data1.head()\n","7ba45e3a":"#Now, check once again whether there is any null value or not and also the information of the data ","633b3f16":"print('Train columns with null values: \\n', data1.isnull().sum())\nprint(\"-\"*10)\nprint (data1.info())\nprint(\"-\"*10)","45b0240e":"data1.head()","f8c8e8d2":"data1_x=[\"Duration\",\"Durationbin\" ,\"Ratersbin\",\"Price\",\"Category\",\"No of people Rated\",\"Pricebin\"]\nTarget=[\"Rating\"]\nfor x in data1_x:\n    \n    if data1[x].dtype != 'float64' :\n        print('Survival Correlation by:', x)\n        print(data1[[x, Target[0]]].groupby(x, as_index=False).mean())\n        print('-'*10, '\\n')\n\n        ","b4daa7bc":"data1[\"Ratebin\"]","78cab208":"plt.figure(figsize=[16,12])\n\nplt.subplot(231)\nplt.boxplot(x=data1['Duration'], showmeans = True, meanline = True)\nplt.title('Duration Box plot')\nplt.ylabel('Duration')\n\nplt.subplot(232)\nplt.boxplot(x=data1['No of people Rated'], showmeans = True, meanline = True)\nplt.title('Raters Box plot')\nplt.ylabel('No of people Rated')","4bd867c7":"fig, saxis = plt.subplots(2, 2,figsize=(80,30))\nsns.pointplot(x = 'Durationbin', y = 'Rating',  data=data1, ax = saxis[0,0])\nsns.pointplot(x = 'Ratersbin', y = 'Rating',  data=data1, ax = saxis[0,1])\nsns.pointplot(x = 'Pricebin', y = 'Rating',  data=data1, ax = saxis[1,0])\nsns.pointplot(x = 'Category', y = 'Rating',  data=data1, ax = saxis[1,1])","ca099f01":"fig, saxis = plt.subplots(2, 2,figsize=(30,10))\nsns.barplot(y='Category',x='Rating',data=data1, ax = saxis[0,0])\nsns.barplot(y='Pricebin',x='Rating',data=data1, ax = saxis[0,1])\nsns.barplot(y='Durationbin',x='Rating',data=data1,ax = saxis[1,0])\nsns.barplot(y='Ratersbin',x='Rating',data=data1,ax=saxis[1,1])","cef4333f":"fig, saxis = plt.subplots(2, 2,figsize=(30,10))\nsns.barplot(y='Category',x='Price',data=data1, ax = saxis[0,0])\nsns.countplot(y='Rating',data=data1,ax = saxis[0,1])\nsns.boxplot(x='Rating',y='No of people Rated',data=data1,ax=saxis[1,0])\nsns.barplot(y='Category',x='No of people Rated',data=data1, ax = saxis[1,1])","5566e0fe":"check if there is any null value or not..."}}