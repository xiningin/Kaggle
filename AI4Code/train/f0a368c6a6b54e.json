{"cell_type":{"3053151e":"code","a829a1db":"code","4bfdbdee":"code","43c7603b":"code","eaa9c2e1":"code","f856b6dc":"code","25f525ca":"code","489c4787":"code","f10b0eeb":"code","6811c0a8":"code","ec15d453":"markdown","07de14a1":"markdown","0a4b5ed5":"markdown","e9666584":"markdown","9ef06e94":"markdown","9c5622de":"markdown","a1261ed3":"markdown","2d19af07":"markdown","4b5b7248":"markdown","9af93583":"markdown","e21cd2b9":"markdown","c2c47eeb":"markdown","aa4e3d36":"markdown","fd07ac69":"markdown","0fe8d0d9":"markdown","1bf321ce":"markdown","68ec866b":"markdown"},"source":{"3053151e":"from IPython.display import IFrame\nIFrame(width=\"560\", height=\"315\", src=\"https:\/\/www.youtube.com\/embed\/EqWsPO8DVXk\", allowfullscreen=\"allowfullscreen\", frameborder=\"0\", allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture;\")","a829a1db":"# Optional we might have to force uninstall\n# !pip uninstall -y tensorflow","4bfdbdee":"import pip\npip.__version__","43c7603b":"# Current stable release for CPU-only\n!pip install tensorflow==2.0.0","eaa9c2e1":"import tensorflow as tf\nprint(tf.__version__)","f856b6dc":"from __future__ import absolute_import, division, print_function, unicode_literals\n\nimport tensorflow as tf\n\nfrom tensorflow import keras","25f525ca":"from tensorflow.keras import layers\n\nmodel = tf.keras.Sequential([\n# Adds a densely-connected layer with 64 units to the model:\nlayers.Dense(64, activation='relu', input_shape=(32,)),\n# Add another:\nlayers.Dense(64, activation='relu'),\n# Add a softmax layer with 10 output units:\nlayers.Dense(10, activation='softmax')])\n\nmodel.summary()\n\nmodel.compile(optimizer=tf.keras.optimizers.Adam(0.01),\n              loss='categorical_crossentropy',\n              metrics=['accuracy'])\n\n","489c4787":"from __future__ import absolute_import, division, print_function, unicode_literals\n\nimport tensorflow as tf\n\nimport cProfile","f10b0eeb":"# Code to check if eager execution is enabbled by default\n\ntf.executing_eagerly()","6811c0a8":"# Test Example Executes and returns results immediately\n\nx = [[2., 2.], [2., 2.]]\ny = [[4., 4.], [4., 4.]]\nm = tf.matmul(x, y)\nprint(m)","ec15d453":"# TensorFlow 2.0 Touchdown!\n\n### This notebook will try to introduce TensorFlow 2.0 to Kaggle community. ","07de14a1":"**Overview of Five different Distributed Strategies in TF 2.0**\n","0a4b5ed5":"Follow along this extensive guide to undersatnd more on eager execution in TF2.0 [https:\/\/www.tensorflow.org\/guide\/eager](http:\/\/https:\/\/www.tensorflow.org\/guide\/eager)","e9666584":"## Quick Version Check","9ef06e94":"## 2: Eager Execution by Default\n\nTensorFlow's eager execution is an imperative programming environment that evaluates operations immediately, without building graphs: operations return concrete values instead of constructing a computational graph to run later. This makes it easy to get started with TensorFlow and debug models, and it reduces boilerplate as well.\n\nEager execution is a flexible machine learning platform for research and experimentation, providing:\n\nAn intuitive interface\u2014Structure your code naturally and use Python data structures. Quickly iterate on small models and small data.\nEasier debugging\u2014Call ops directly to inspect running models and test changes. Use standard Python debugging tools for immediate error reporting.\nNatural control flow\u2014Use Python control flow instead of graph control flow, simplifying the specification of dynamic models.\nEager execution supports most TensorFlow operations and GPU acceleration.","9c5622de":"## TensorFlow 2.0 [](http:\/\/)WorkFlow","a1261ed3":"## **Lets Install TensorFlow 2.0**","2d19af07":"> Example Multi Layer Perceptron with TF2.0","4b5b7248":"### Other Key Updates\n\n1. Data pipelines with tf.Data https:\/\/www.tensorflow.org\/guide\/data\n2. SavedModel format update to make it easy for deployment via TensorFlow Serving, TensorFlow Lite, TensorFlow.js, or programs in other programming languages https:\/\/www.tensorflow.org\/guide\/checkpoint\n\nAlso don't miss out on Effective TF2.0 Guide https:\/\/www.tensorflow.org\/guide\/effective_tf2\n\n\n## Sources\n\n- Official Website https:\/\/www.tensorflow.org\n- TensorFlow Medium Blog https:\/\/medium.com\/tensorflow\n\n\nI welcome you comments and feedback on this update as well as cool things you're going to do with TF2.0 update. \n\nP.S. This is very high level survey of updates in TF2.0 and in no-way extensive.","9af93583":"For more such examples and detailed guide check TensorFlow Keras guide at [https:\/\/www.tensorflow.org\/guide\/keras\/overview](http:\/\/https:\/\/www.tensorflow.org\/guide\/keras\/overview)","e21cd2b9":"![TensorFlow 2.0 Workflow\/Ecosystem](https:\/\/miro.medium.com\/max\/1920\/0*C7GCWYlsMrhUYRYi)","c2c47eeb":"## 3: Distributed Training Strategy \n\n[tf.distribute.Strategy](http:\/\/https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/distribute\/Strategy) is a TensorFlow API to distribute training across multiple GPUs, multiple machines or TPUs. Using this API, you can distribute your existing models and training code with minimal code changes.\n\ntf.distribute.Strategy has been designed with these key goals in mind:\n\n1. Easy to use and support multiple user segments, including researchers, ML engineers, etc.\n2. Provide good performance out of the box.\n3. Easy switching between strategies.\n\nExtensive guide is at [https:\/\/www.tensorflow.org\/guide\/distributed_training](http:\/\/https:\/\/www.tensorflow.org\/guide\/distributed_training)","aa4e3d36":"> TensorFlow 2.0 needs **pip > 19.0**","fd07ac69":"## 1: Keras as a High level API to build and train models\n\nTo get started use tf.Keras to import Keras in program setup.","0fe8d0d9":"## Few Key Updates","1bf321ce":"![](https:\/\/i.ibb.co\/Sw5XsG2\/Screen-Shot-2019-10-05-at-1-12-04-AM.png)","68ec866b":"Google has released [TensorFlow 2.0](https:\/\/www.tensorflow.org\/api_docs\/python\/tf) on October 1 after releasing Alpha\/Beta versions earlier this year.\n\nLook at this introductory video for intuition behind this major version update."}}