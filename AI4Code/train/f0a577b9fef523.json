{"cell_type":{"2be42a39":"code","1adbf0cd":"code","f131605f":"code","7335e275":"code","1fdf95fb":"code","e2cba504":"code","034d9052":"code","79b08b5e":"code","6c359769":"code","dda42749":"code","a927800e":"code","b1d7eba1":"code","41d6ee3c":"code","d4ce0956":"code","b70cba95":"code","cad02c34":"code","3ad3e554":"code","7a467b4c":"code","44f017e8":"code","9386d629":"code","ecd9caf6":"code","2c8d74db":"code","12c1d887":"code","5ea760d0":"code","49670380":"code","5f521035":"code","4f363b4b":"code","06562a12":"code","8797ff02":"code","062c02c0":"code","f122f0d4":"code","e325baf1":"code","d15155ba":"code","023a0f9e":"code","4fdbb06f":"code","8f16febd":"code","85a84906":"code","e6b23cf4":"code","9610d022":"code","f13f368b":"code","c900c257":"code","6b47ce57":"code","0aaeb51e":"code","3f365d08":"code","361b66ab":"code","1fbd77dd":"code","14b09acb":"code","6b558de1":"code","acf6109f":"code","2da75103":"code","bced7525":"code","714b8476":"code","aab1189a":"code","728088df":"code","49bc6f2a":"code","2cae07dd":"code","ae29c34a":"code","76cadcf6":"code","fa203ad2":"code","08cc91c2":"code","6daab9f5":"code","b85a887e":"code","d8ed111a":"code","ec53945e":"code","63f91ec4":"code","69bd4b1e":"code","17c86d21":"code","a2ae7de8":"code","f2bf02bb":"code","175078b4":"code","958fbbd3":"code","cd3b5c87":"code","267d59e2":"code","34ff734c":"code","fc3e41ae":"code","3b60703d":"code","51ef86a4":"code","a651bc77":"code","7e4043ba":"code","fd04c340":"code","a25a3462":"code","9c937bb3":"code","b0aedd30":"markdown","08384084":"markdown","dbc03227":"markdown","3f10ca3d":"markdown","cff225ff":"markdown","6b6f44e5":"markdown","1381c4b8":"markdown","65772dd0":"markdown"},"source":{"2be42a39":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1adbf0cd":"import pandas as pd # Data Analytical library\nimport numpy as np # Fast Linear Alegbra \nimport matplotlib.pyplot as plt # Visulizations\nimport seaborn as sns # Statistical Viz\nfrom scipy.stats import *                \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\n","f131605f":"df=pd.read_csv('..\/input\/machine-learning-24-hrs-hackathon\/train_SJC.csv',header=1)\nprint(df.shape)","7335e275":"df.head()","1fdf95fb":"df=df.rename(columns={\"Unnamed: 2\":\"DateReported\", \"Unnamed: 7\":\"DependentsOther\", \"Unnamed: 11\": \"DaysWorkedPerWeek\"})","e2cba504":"df.head()","034d9052":"print (\"Train data shape:\", df.shape)","79b08b5e":"df.info()","6c359769":"print(f\"No. of unique {df['ClaimNumber'].nunique()}\")","dda42749":"df.head()","a927800e":"#Data Summary\ndf.describe()","b1d7eba1":"#Check for Missing Values\n\ndf.isnull()","41d6ee3c":"df.isnull().sum()","d4ce0956":"#Treatment for Missing Values","b70cba95":"df['MaritalStatus']=df['MaritalStatus'].fillna(df['MaritalStatus'].mode()[0])","cad02c34":"df['WeeklyWages']=df['WeeklyWages'].fillna(df['WeeklyWages'].mode()[0])","3ad3e554":"df['HoursWorkedPerWeek']=df['HoursWorkedPerWeek'].fillna(df['HoursWorkedPerWeek'].mode()[0])","7a467b4c":"df.isnull().sum()","44f017e8":"df.apply(pd.Series.nunique)  # number of unique elements in each object","9386d629":"df.info()","ecd9caf6":"#converting to datetime field\ndf['DateTimeOfAccident'] = pd.to_datetime(df['DateTimeOfAccident'])\ndf['DateReported'] = pd.to_datetime(df['DateReported'])\ndf[['DateTimeOfAccident','DateReported']].info()","2c8d74db":"df.info()","12c1d887":"df.head(10)","5ea760d0":"df.columns","49670380":"df['InitialIncurredCalimsCost'].describe()","5f521035":"df['UltimateIncurredClaimCost'].describe()","4f363b4b":"num_df=df.select_dtypes(include=[float,int])","06562a12":"cat_df=df.select_dtypes(exclude=[float,int])","8797ff02":"num_df","062c02c0":"cat_df","f122f0d4":"num_df.describe()","e325baf1":"cat_df.describe()","d15155ba":"df.apply(pd.Series.nunique)","023a0f9e":"df['Age'].value_counts().plot.bar()","4fdbb06f":"df['Gender'].value_counts().plot.bar()","8f16febd":"df['MaritalStatus'].value_counts().plot.bar()","85a84906":"df['DependentChildren'].value_counts().plot.bar()","e6b23cf4":"df['DependentsOther'].value_counts().plot.bar()","9610d022":"df['PartTimeFullTime'].value_counts().plot.bar()","f13f368b":"df['DaysWorkedPerWeek'].value_counts().plot.bar()","c900c257":"df.plot.box(figsize=(15,6))","6b47ce57":"plt.figure(figsize = (16, 10))\nplt.subplot(1, 2, 1)\nsns.distplot(df['UltimateIncurredClaimCost'])\nplt.subplot(1, 2, 2)\nplt.title('Log Scale')\nsns.distplot(np.log1p(df['UltimateIncurredClaimCost']));","0aaeb51e":"sns.catplot(data=df,x='UltimateIncurredClaimCost', col='Gender',kind='box')","3f365d08":"sns.catplot(data=df,x='InitialIncurredCalimsCost', col='Gender',kind='box')","361b66ab":"#sns.catplot(data=df,x='UltimateIncurredClaimCost', col='HoursWorkedPerWeek',kind='violin')\n\n#image size to big could open on jupyter notebook","1fbd77dd":"#sns.catplot(data=df,x='UltimateIncurredClaimCost', col='PartTimeFullTime',kind='violin')","14b09acb":"#sns.catplot(data=df,x='InitialIncurredCalimsCost', col='PartTimeFullTime',kind='violin')","6b558de1":"#sns.catplot(data=df,x='InitialIncurredCalimsCost',y='UltimateIncurredClaimCost',col='Gender',kind='point')","acf6109f":"#sns.catplot(data=df,x='InitialIncurredCalimsCost',y='UltimateIncurredClaimCost',col='DaysWorkedPerWeek',kind='point')","2da75103":"df.corr()","bced7525":"sns.heatmap(df.corr())","714b8476":"#Creating time difference from Accident to Reported date in hours \n\ndf['TimeDiff_Hrs'] = (df['DateReported'] - df['DateTimeOfAccident']).astype('timedelta64[h]')","aab1189a":"df.head()","728088df":"#We don't need the datetime features\ndf.drop(['DateTimeOfAccident', 'DateReported'], axis = 1, inplace = True)","49bc6f2a":"import sklearn.preprocessing as pre\nimport sklearn.model_selection as ms\nimport sklearn.linear_model as glm","2cae07dd":"df.head()","ae29c34a":"le=pre.LabelEncoder()","76cadcf6":"le.fit(df['Gender'])","fa203ad2":"le.transform(df['Gender'])","08cc91c2":"df.columns","6daab9f5":"train_df=['Age','Gender','MaritalStatus', 'WeeklyWages','PartTimeFullTime', 'HoursWorkedPerWeek', 'DaysWorkedPerWeek',\n          'InitialIncurredCalimsCost', 'UltimateIncurredClaimCost']","b85a887e":"for x in train_df:\n    df[x]=le.fit_transform(df[x])","d8ed111a":"df_ml=df[train_df]","ec53945e":"df_ml.dtypes","63f91ec4":"features=df_ml.drop('UltimateIncurredClaimCost',axis=1)\noutcome=df_ml['UltimateIncurredClaimCost']","69bd4b1e":"feature_scale=pre.minmax_scale(features)","17c86d21":"##Splitting the train data into 70% as training data and 30% as testing data to check the accuracy of the model\nx_train,x_test,y_train,y_test=ms.train_test_split(feature_scale,outcome,test_size=0.3,random_state=12356)","a2ae7de8":"print('Train', x_train.shape, y_train.shape)\nprint('Test', x_test.shape, y_test.shape)","f2bf02bb":"import sklearn.neighbors as NN","175078b4":"KNN=NN.KNeighborsRegressor(n_neighbors=5,metric='minkowski')","958fbbd3":"KNN.fit(x_train,y_train)","cd3b5c87":"KNN.predict(x_test)","267d59e2":"KNN.score(x_test,y_test)","34ff734c":"KNN.score(x_train,y_train)","fc3e41ae":"y_pred=KNN.score(x_test,y_test)","3b60703d":"Sample = pd.read_csv(\"..\/input\/machine-learning-24-hrs-hackathon\/sample_submission.csv\")","51ef86a4":"Sample.shape","a651bc77":"Sample.head()","7e4043ba":"Sample.isnull().sum()","fd04c340":"Sample[\"UltimateIncurredClaimCost\"] = y_pred\n","a25a3462":"Sample.to_csv(\"sample_submission_new.csv\",index=False)","9c937bb3":"Sample","b0aedd30":"**MACHINE LEARNING MODEL**","08384084":"**Feature Engineering**","dbc03227":"**Sample Prediction**","3f10ca3d":"**DATA NORMALIZATION**","cff225ff":"* Data fields\n* ClaimNumber: Unique policy identifier\n* DateTimeOfAccident: Date and time of accident\n* DateReported: Date that accident was reported\n* Age: Age of worker\n* Gender: Gender of worker\n* MaritalStatus: Martial status of worker. (M)arried, (S)ingle, (U)unknown.\n* DependentChildren: The number of dependent children\n* DependentsOther: The number of dependants excluding children\n* WeeklyWages: Total weekly wage\n* PartTimeFullTime: Binary (P) or (F)\n* HoursWorkedPerWeek: Total hours worked per week\n* DaysWorkedPerWeek: Number of days worked per week\n* ClaimDescription: Free text description of the claim\n* InitialIncurredClaimCost: Initial estimate by the insurer of the claim cost\n* UltimateIncurredClaimCost: Total claims payments by the insurance company. This is the field you are asked to predict in the test set.","6b6f44e5":"**TYPE Casting**","1381c4b8":"**EDA**","65772dd0":"**Data Processing**"}}