{"cell_type":{"b3df16d2":"code","4d184a80":"code","a8300245":"code","4a970f16":"code","bcd24bb1":"code","8e28e6a1":"code","158c9364":"code","fb91de72":"code","ab0b3ad0":"code","5d331552":"code","80e146ce":"code","10d68fcb":"code","e6114ab1":"code","c7474696":"code","d9850ba2":"code","9f4c2082":"code","a6ca61e8":"code","c4f76305":"code","65c50c7f":"code","aba95298":"code","c75fac20":"code","e676715d":"code","b8a07153":"markdown","1af043d8":"markdown","e0cd966b":"markdown","3b32c0ad":"markdown","61c2be15":"markdown","d1369f42":"markdown","30828742":"markdown","8bd4e596":"markdown","e1fef05f":"markdown","96a7c503":"markdown","4d6f500f":"markdown","59efa9f3":"markdown","fbddc90b":"markdown","290566e9":"markdown","4f4cd1b3":"markdown","23d1e25b":"markdown","13ac2842":"markdown"},"source":{"b3df16d2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# Any results you write to the current directory are saved as output.","4d184a80":"# Import the fast.ai library\nfrom fastai.vision import *","a8300245":"path = Path('\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/chest_xray\/test\/')\npath.mkdir(parents=True, exist_ok=True)","4a970f16":"path.ls()","bcd24bb1":"np.random.seed(42)\ndata = ImageDataBunch.from_folder(path, train=\".\", valid_pct=0.2,\n        ds_tfms=get_transforms(), size=224, num_workers=4).normalize(imagenet_stats)","8e28e6a1":"data.classes","158c9364":"data.show_batch(rows=3, figsize=(7,8))","fb91de72":"data.classes, data.c, len(data.train_ds), len(data.valid_ds)","ab0b3ad0":"learn = cnn_learner(data, models.resnet34, metrics=error_rate, model_dir=Path('\/kaggle\/working'))","5d331552":"learn.fit_one_cycle(4)","80e146ce":"learn.save('stage-1')\nlearn.unfreeze()\nlearn.lr_find()","10d68fcb":"learn.recorder.plot()","e6114ab1":"learn.fit_one_cycle(3, max_lr=slice(3e-5,6e-4))","c7474696":"learn.save('stage-2')","d9850ba2":"learn.load('stage-2');","9f4c2082":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()","a6ca61e8":"learn.path = Path('\/kaggle\/working')\nlearn.export()","c4f76305":"path = Path('\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/chest_xray\/train')","65c50c7f":"PNEUMONIA = ['person63_bacteria_306.jpeg',\n'person26_bacteria_122.jpeg',\n'person890_bacteria_2814.jpeg',\n'person519_virus_1038.jpeg',\n'person968_virus_1642.jpeg']\n\nNORMAL = ['IM-0757-0001.jpeg',\n'IM-0540-0001.jpeg',\n'IM-0683-0001.jpeg',\n'NORMAL2-IM-1288-0001.jpeg',\n'NORMAL2-IM-0482-0001.jpeg',]","aba95298":"learn = load_learner(Path('\/kaggle\/working'))","c75fac20":"print('These 5 X-rays have Pneumonia')\nfor l,i in enumerate(PNEUMONIA):\n    img = open_image(path\/'PNEUMONIA'\/i)\n    pred_class,pred_idx,outputs = learn.predict(img)\n    if str(pred_class) == 'PNEUMONIA':\n        print(f'Prediction for image {l+1} is Correct')","e676715d":"print('These 5 X-rays are normal and do not show any signs of Pneumonia')\nfor l, i in enumerate(NORMAL):\n    img = open_image(path\/'NORMAL'\/i)\n    pred_class,pred_idx,outputs = learn.predict(img)\n    if str(pred_class) == 'NORMAL':\n        print(f'Prediction for {l+6} is Correct')","b8a07153":"The model we're going to use is resnet34 and to download from Kaggle we need to make sure the Internet switch under settings is swtiched on.\n\nWe'll then create our convolutional neural net learner. \n\nWhen saving your model the cnn_learner will default to saving it in the current path directory. We can do this here because the dataset it read-only, therefor we specify the path using the model_dir parameter.","1af043d8":"As shown above, the model correctly identified all images.","e0cd966b":"We will now train a part of our model for 4 epochs.","3b32c0ad":"The two files in the specified path are NORMAL and PNEUMONIA. These are our classes and is what our machine learning algorithm will try to differentiate.","61c2be15":"We can see our error rate is 13%. Not bad but can definately be improved. We'll now save our model and unfreeze, which means it will now train using all our data.","d1369f42":"Again we save the model so if we come back we don't have to retrain everything.","30828742":"We've plotted the learning rate finder below. A general rule is to find the steepest negative line just prior to it trending upwards.","8bd4e596":"We plot a confusion matrix to see how well our model has predicted our validation set.\n\nSensitivity\t0.8793\tTPR = TP \/ (TP + FN)\nSpecificity\t1.0000\tSPC = TN \/ (FP + TN)\nPrecision\t1.0000\tPPV = TP \/ (TP + FP)\n\nSo it has predicted every normal X-ray correctly as normal, and 7 of the x-rays which showed pneumonia the model didn't spot and classified incorretly as normal.","e1fef05f":"The first step, once we have our data, is to create a path to where the data is stored. \n\nWith this dataset of X-ray images I'm only using the test folder as there are less files compared to the train folder. I'm not going to spend much of my time training this model and fast.ai is capable of still achieving remarkable results.","96a7c503":"Now I want to test our model on some of the images inside the training folder.\n\nFirst we'll change the path.","4d6f500f":"We now create our data bunch. The train parameter usually looks for a folder called train but because we want to use a small part of the data, I've added valid_pct=0.2 to make 20% of the images in our test folder, the test set and the rest will be used to train. Hopefully that's not too confusing.","59efa9f3":"This notebook demonstrates just how easy it is to create a machine learning model using the fast.ai library.\n\nTo train the model you must make sure kaggle uses it's GPU rather than CPU which can be specified when creating a notebook, or selecting the GPU tab under Setting.","fbddc90b":"I initally chose a slice of 1e5 to 2e-4 and trained for 3 epochs. This gave me a great error rate of 2.4% but the training loss was huge compared to the validation loss which showed it was underfitting. I then changed the learning rate to 3e-5 to 6e-4 and found the training and validation losses more similar, and an error rate of 3.2%. This is great improvement on the previous 13% error rate.","290566e9":"We could continue to train our model, even selecting a new data bunch and adding it to the cnn learner, known as transfer learning. Perhaps from the train folder this time.\n\nBut for now we will export our model. This will create a pickle file in the working directory called export.pkl.\n\nIf your are confused as where the working directory is on kaggle, your models will only appear once you have commited your notebook.","4f4cd1b3":"Next I have chosen 10 images, 5 from the folder labelled Pneumonia, and 5 from the folder labelled Normal and created two lists.","23d1e25b":"Below we have listed the names of our classes, the number of classes, and the number of images in our training and validation sets.","13ac2842":"Lets have a look at some of the images."}}