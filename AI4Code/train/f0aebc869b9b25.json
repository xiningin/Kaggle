{"cell_type":{"611a94d8":"code","cb66abe0":"code","7e703ed1":"code","cc8af4b6":"code","40b39492":"code","9b38cf40":"code","4a51f6d2":"code","09f5af6a":"code","5ec63e96":"code","b25327e6":"code","c6e5c3eb":"code","34046233":"code","52400de4":"code","97dabfd2":"code","fda9ebb5":"code","87223ca1":"code","be286812":"code","4f097073":"code","e2300b00":"code","f354e7a2":"code","f3cfaf40":"code","01334cb3":"code","d903e582":"code","d7530146":"code","ba5d3949":"code","19d8f9e1":"code","481a57b5":"code","55fe08c1":"code","aece6460":"code","6d317071":"code","62ba1401":"code","047a51ba":"code","877c47e1":"code","5700768a":"code","c579feb0":"code","00aa0c89":"code","b0fa4bd3":"code","137a17fd":"code","d05ce9fa":"code","49c59efe":"code","fc444345":"code","424dc388":"code","7fc00908":"code","a096adff":"code","39bb67ab":"code","460f5b7d":"code","8140a88c":"code","eb2fe88b":"code","93ed35d1":"code","f5961d15":"code","86327815":"code","f748c4ca":"code","92fb7405":"code","87b9ed02":"markdown","c286f341":"markdown","3235d906":"markdown","63a2ff79":"markdown","c5cf3eb3":"markdown","ecbb175b":"markdown","e4ac7f0a":"markdown","c3975d74":"markdown","a37eb23e":"markdown","aeda729b":"markdown","36cb88dc":"markdown","038e20d1":"markdown","0c17738c":"markdown","069327fc":"markdown","63750109":"markdown","67e4aaa6":"markdown","f6e51fde":"markdown","a70a0f7e":"markdown","fd6b0115":"markdown","97d39a6a":"markdown","ea84610c":"markdown","d9c47239":"markdown","e9c4a661":"markdown","cf220948":"markdown","6e97230e":"markdown","cf9f8b83":"markdown","72ff7bd9":"markdown","7c2e6b16":"markdown","ab610cb3":"markdown","e8119fd0":"markdown","19de2a2c":"markdown","61402b9c":"markdown","a68fb584":"markdown","0678d61a":"markdown","fe2d94d4":"markdown","e4d34fe6":"markdown"},"source":{"611a94d8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cb66abe0":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report","7e703ed1":"train = pd.read_csv(\"\/kaggle\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/hr-analytics-job-change-of-data-scientists\/aug_test.csv\")\nsample = pd.read_csv(\"\/kaggle\/input\/hr-analytics-job-change-of-data-scientists\/sample_submission.csv\")\ntrain.head()","cc8af4b6":"print(train.shape)\nprint(test.shape)\nprint(sample.shape)","40b39492":"train.describe(include = 'all')","9b38cf40":"train.info()","4a51f6d2":"train.isnull().sum()","09f5af6a":"plt.figure(figsize = (10, 7))\nsns.countplot(x = train['gender'])\nplt.show()","5ec63e96":"plt.figure(figsize = (10, 7))\nsns.countplot(x = train['education_level'])\nplt.show()","b25327e6":"plt.figure(figsize = (10, 7))\nsns.countplot(x = train['enrolled_university'])\nplt.show()","c6e5c3eb":"plt.figure(figsize = (10, 7))\nsns.countplot(x = train['relevent_experience'])\nplt.show()","34046233":"plt.figure(figsize = (10, 7))\nsns.countplot(x = train['major_discipline'])\nplt.show()","52400de4":"plt.figure(figsize = (10, 7))\nsns.countplot(y = train['experience'])\nplt.show()","97dabfd2":"plt.figure(figsize = (10, 7))\nsns.countplot(y = train['last_new_job'])\nplt.show()","fda9ebb5":"plt.figure(figsize = (10, 7))\nsns.barplot(x = 'relevent_experience', y = 'target', data = train)","87223ca1":"plt.figure(figsize = (10, 7))\nsns.barplot(x='gender', y='target', data=train)","be286812":"plt.figure(figsize = (10, 7))\nsns.barplot(x = 'enrolled_university', y = 'target', data=train)","4f097073":"plt.figure(figsize = (10, 7))\nsns.barplot(x = 'major_discipline', y = 'target', data = train)","e2300b00":"plt.figure(figsize = (10, 7))\nsns.barplot(x = 'enrolled_university', y = 'target', hue = 'education_level', data = train)","f354e7a2":"plt.figure(figsize = (20, 10))\nplt.subplot(221)\nsns.distplot(x = train['training_hours'])\nplt.subplot(222)\nsns.distplot(x = train['target'])\nplt.subplot(223)\nsns.distplot(x = train['city_development_index'])\nplt.show()","f3cfaf40":"px.pie(data_frame = train, names = 'gender', title = 'Gender')","01334cb3":"px.pie(data_frame = train, names = 'relevent_experience', title = 'Experience')","d903e582":"px.pie(data_frame = train, names = 'enrolled_university', title = 'Enrollment')","d7530146":"px.pie(data_frame = train, names = 'education_level', title = 'Education Level')","ba5d3949":"px.pie(data_frame = train, names = 'major_discipline', title = 'Major Discipline')","19d8f9e1":"px.pie(data_frame = train, names = 'last_new_job', title = 'Last Job')","481a57b5":"px.pie(data_frame = train, names = 'company_type', title = 'Gender')","55fe08c1":"px.histogram(data_frame = train, x = 'city', y = 'city_development_index', color='target')","aece6460":"px.histogram(data_frame = train, x = 'gender', title = 'Gender w.r.t Expereince', color = 'relevent_experience')","6d317071":"px.histogram(data_frame = train, x = 'education_level', title = 'Education level w.r.t Experience', color = 'relevent_experience')","62ba1401":"px.density_contour(data_frame = train, x = 'training_hours', y = 'target', title = 'Density Contour for Training Hours w.r.t Target')","047a51ba":"px.density_contour(data_frame = train, x = 'city_development_index', y = 'target', \n                   title = 'Density Contour for City Development Index w.r.t Target')","877c47e1":"px.box(data_frame = train, x = \"last_new_job\", y = \"city_development_index\", color = \"target\",\n      title = 'Change in Job vs. Development of City')","5700768a":"px.box(data_frame = train, x = \"gender\", y = \"city_development_index\", color = \"target\",\n      title = 'Gender vs. Development of City')","c579feb0":"px.box(train, x = \"company_size\", y = \"city_development_index\", color = \"target\",\n      title = 'Comapny Size vs. Development of City')","00aa0c89":"px.box(train, x = \"company_type\", y = \"city_development_index\", color = \"target\",\n      title = 'Company type vs. Development of City')","b0fa4bd3":"train['city'] = train['city'].map(lambda x: x.lstrip('city_'))\n\ntrain = train.dropna(subset=['experience']).reset_index(drop=True)\ntrain['experience'] = train['experience'].map(lambda x: x.lstrip('<>'))\n\ntrain['last_new_job'] = train['last_new_job'].astype(str)\nfor i in range(train.shape[0]):\n    train.loc[i,'last_new_job'] = train.loc[i,'last_new_job'].replace('>','').replace('<','').replace('never','0').replace('nan','0')\ntrain['last_new_job'] = train['last_new_job'].astype(int)","137a17fd":"train = train.drop(['gender', 'training_hours', 'enrollee_id'], axis=1)","d05ce9fa":"train.head()","49c59efe":"train.fillna('NA', inplace = True)\ntrain[\"enrolled_university\"] = train[\"enrolled_university\"].replace('NA', 'Unknown_uni')\ntrain[\"education_level\"] = train[\"education_level\"].replace('NA', 'Unknown_level')\ntrain[\"company_size\"] = train[\"company_size\"].replace('NA', 'Unknown_size')\ntrain[\"company_type\"] = train[\"company_type\"].replace('NA', 'Unknown_type')\ntrain[\"experience\"] = train[\"experience\"].replace('NA', 0)","fc444345":"rel_exp = pd.get_dummies(train['relevent_experience'], drop_first = True)\nenrolled_uni = pd.get_dummies(train['enrolled_university'], drop_first = True)\ned_level = pd.get_dummies(train['education_level'], drop_first = True)\nmaj_dis = pd.get_dummies(train['major_discipline'], drop_first = True)\ncomp_size = pd.get_dummies(train['company_size'], drop_first = True)\ncomp_type = pd.get_dummies(train['company_type'], drop_first = True)","424dc388":"train.drop(['relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'company_size',\n                   'company_type'], axis = 1,inplace = True)","7fc00908":"train = pd.concat([rel_exp, enrolled_uni, ed_level, maj_dis, comp_size, comp_type, train], axis = 1)","a096adff":"train.shape","39bb67ab":"train.head()","460f5b7d":"plt.figure(figsize = (20, 15))\nsns.heatmap(train.corr(), linecolor = 'white', linewidths = 1, cmap = 'coolwarm', annot = True)\nplt.show()","8140a88c":"X = train.iloc[:, :-1].values\ny = train.iloc[:, -1].values\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)","eb2fe88b":"from sklearn.linear_model import LogisticRegression\nlog = LogisticRegression(max_iter = 300)\nlog.fit(X_train, y_train)","93ed35d1":"y_pred_log = log.predict(X_test)\nprint(\"The Accuracy Score of Logistic Regression is: {}%\".format(accuracy_score(y_test, y_pred_log)*100))\nprint(\"The Confusion Matrix for Logistic Regression is: \\n{}\\n\".format(confusion_matrix(y_test, y_pred_log)))\nprint('\\n')\nprint(classification_report(y_test, y_pred_log))","f5961d15":"from sklearn.tree import DecisionTreeClassifier\ndt = DecisionTreeClassifier(criterion = 'entropy', random_state = 0)\ndt.fit(X_train, y_train)","86327815":"y_pred_dt = dt.predict(X_test)\nprint(\"The Accuracy Score of Decision Tree is: {}%\".format(accuracy_score(y_test, y_pred_dt)*100))\nprint(\"The Confusion Matrix for Decision Tree is: \\n{}\\n\".format(confusion_matrix(y_test, y_pred_dt)))\nprint('\\n')\nprint(classification_report(y_test, y_pred_dt))","f748c4ca":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators = 300, criterion = 'entropy')\nrf.fit(X_train, y_train)","92fb7405":"y_pred_rf = rf.predict(X_test)\nprint(\"The Accuracy Score of Random Forest is: {}%\".format(accuracy_score(y_test, y_pred_rf)*100))\nprint(\"The Confusion Matrix for Random Forest is: \\n{}\\n\".format(confusion_matrix(y_test, y_pred_rf)))\nprint('\\n')\nprint(classification_report(y_test, y_pred_rf))","87b9ed02":"### Dropping useless columns","c286f341":"### Gender vs. Target","3235d906":"It is quite evident that people who want to stay in a Job are staying in more developed city rather than those who are leaving.","63a2ff79":"On an average Female and Others are staying in better cities than Male employess.","c5cf3eb3":"### Dummy variables\n\nCreating Dummy varibales of various columns","ecbb175b":"### Concatenating the dummy variables with the training data","e4ac7f0a":"### Making necessary changes in various features","c3975d74":"### Pie Chart of various columns","a37eb23e":"### Major Discipline vs. Target","aeda729b":"### Enrolled University vs. Target based on Education Level","36cb88dc":"### Correlation","038e20d1":"### Relevant Experience (Countplot)","0c17738c":"### Logistic Regression","069327fc":"# **Importing the Data**","63750109":"### Education Level (Countplot)","67e4aaa6":"# Context and Content\n\nA company which is active in Big Data and Data Science wants to hire data scientists among people who successfully pass some courses which conduct by the company. Many people signup for their training. Company wants to know which of these candidates are really wants to work for the company after training or looking for a new employment because it helps to reduce the cost and time as well as the quality of training or planning the courses and categorization of candidates. Information related to demographics, education, experience are in hands from candidates signup and enrollment.\n\nThis dataset designed to understand the factors that lead a person to leave current job for HR researches too. By model(s) that uses the current credentials,demographics,experience data you will predict the probability of a candidate to look for a new job or will work for the company, as well as interpreting affected factors on employee decision.\n\nThe whole data divided to train and test . Target isn't included in test but the test target values data file is in hands for related tasks. A sample submission correspond to enrollee_id of test set provided too with columns : enrollee _id , target\n\n## Note:\n\nThe dataset is imbalanced.\nMost features are categorical (Nominal, Ordinal, Binary), some with high cardinality.\nMissing imputation can be a part of your pipeline as well.\n\n## Features\nenrollee_id : Unique ID for candidate\n\ncity: City code\n\ncity_ development _index : Developement index of the city (scaled)\n\ngender: Gender of candidate\n\nrelevent_experience: Relevant experience of candidate\n\nenrolled_university: Type of University course enrolled if any\n\neducation_level: Education level of candidate\n\nmajor_discipline :Education major discipline of candidate\n\nexperience: Candidate total experience in years\n\ncompany_size: No of employees in current employer's company\n\ncompany_type : Type of current employer\n\nlastnewjob: Difference in years between previous job and current job\n\ntraining_hours: training hours completed\n\ntarget: 0 \u2013 Not looking for job change, 1 \u2013 Looking for a job change","f6e51fde":"### Distribution Plots of different columns","a70a0f7e":"# Thank You :)","fd6b0115":"# **Exploratory Data Analysis**","97d39a6a":"### Dropping the irrelevant columns","ea84610c":"Private company and Public sector are more common in developed cities than others.","d9c47239":"### Splitting the data into Training and Test set","e9c4a661":"### Major Discipline (Countplot)","cf220948":"# **Feature Engineering**","6e97230e":"# **Basic Data Wrangling**","cf9f8b83":"# **Importing the Libraries**","72ff7bd9":"### Gender (Countplot)","7c2e6b16":"### Last Job (Countplot)","ab610cb3":"### Random Forest Classifier ","e8119fd0":"### Filling the missing values with 'NA' and then changing it back to a much more appropriate value","19de2a2c":"### Relevent Expereince vs. Target","61402b9c":"### Expereince (Countplot)","a68fb584":"# **Model**","0678d61a":"### Decision Tree Classifier","fe2d94d4":"### Enrolled University vs. Target","e4d34fe6":"### Enrolled University (Countplot)"}}