{"cell_type":{"85299c44":"code","3b21dfa4":"code","dfa88f08":"code","487400c0":"code","d6a2e544":"code","ddc9ddec":"code","132e8148":"markdown","eaa4e74c":"markdown","106b7f6f":"markdown","ef78c8e3":"markdown","f784734e":"markdown","ae5ab356":"markdown","594d8f22":"markdown"},"source":{"85299c44":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\ndata = pd.read_csv('..\/input\/billboard-the-hot-100-songs\/charts.csv')\ndata.head()\n\nartist = 'Michael Jackson' # If you want to find another artist, then change it to your favorites.","3b21dfa4":"data.describe()","dfa88f08":"data.hist(figsize=(10,9))\nplt.tight_layout()\nplt.show()","487400c0":"(data['artist']==artist).value_counts()","d6a2e544":"df_song_list = data[data['artist']==artist]\ndf_song_list['song'].value_counts()","ddc9ddec":"arr = []\nfig = plt.figure(figsize=(40,40))\nfig.set_facecolor('white')\nax = fig.add_subplot()\nlegend = []\nfor song in df_song_list['song'].unique():\n    name_condition = data['song']==song\n    artist_condition = data['artist']==artist\n    x_value = data[name_condition & artist_condition]['date']\n    y_value = data[name_condition & artist_condition]['rank']\n    ax.plot(x_value, y_value)\n    legend.append(song)\nplt.legend(legend)\nplt.show()","132e8148":"# Basic EDA of billboard Chart - concentrate about Michael Jackson's song.\n\nThis dataset has more than 300 thousands rows about top 100 of billboard chart. There are so many songs, so we can't explain all of artist and song. So I'll analyze songs about Michael Jackson, the legendary artist of pop.","eaa4e74c":"So we can understand about data type. type of 'date' is datetime. 'song' and 'artist' is string. other is numeric. \nBelow is histogram about numerical data.","106b7f6f":"so, we know there is 611 rows of Michael Jackson's work. Now we try to find what is the name of MJ's song.  ","ef78c8e3":"Now we know there is 41 songs of MJ, and also know value counts.\nI want to express the ranking of these songs in a line graph over time.","f784734e":"## 1. Loading data**","ae5ab356":"# 2. check artist's song on data","594d8f22":"# 3. Visualize"}}