{"cell_type":{"4a3a4291":"code","375dfcd1":"code","76451929":"code","4c32e651":"code","052d9600":"code","a793a5a3":"code","15a05ce9":"code","f3edba22":"code","cee76430":"code","a0623d7b":"code","2e87e178":"code","46cc4dd2":"code","a4083719":"code","382bcdd1":"code","b17a25c7":"code","0d06602c":"code","64e1fee2":"code","a423559d":"code","a1c7e533":"markdown","8ff5d90a":"markdown","f2a13d76":"markdown","f2d1790a":"markdown","3be0b4ac":"markdown","d7b9a2ed":"markdown","a0bc5e1b":"markdown","7c8c96da":"markdown","b38d9746":"markdown","eb65d7fc":"markdown","381b1c66":"markdown","6d918ca1":"markdown"},"source":{"4a3a4291":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#Feature Scaling\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.preprocessing import MinMaxScaler\n#Model Selection\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.tree import DecisionTreeRegressor\nfrom lightgbm import LGBMClassifier\n#Printing Issues\nplt.rcParams['axes.unicode_minus']=False","375dfcd1":"dtc=DecisionTreeClassifier()\ndtr=DecisionTreeRegressor()\nlgb=LGBMClassifier()\nss=StandardScaler()\nmm=MinMaxScaler()\nrs=RobustScaler()","76451929":"train=pd.read_csv('..\/input\/titanic\/train.csv')\ntest=pd.read_csv('..\/input\/titanic\/test.csv')\nsubmission=pd.read_csv('..\/input\/titanic\/gender_submission.csv')","4c32e651":"#Basic Preprocessing\ntrain.drop({'Name','Ticket','Cabin'},axis=1,inplace=True)\ntrain['Sex']=train['Sex'].replace('male',0)\ntrain['Sex']=train['Sex'].replace('female',1)\ntest['Sex']=test['Sex'].replace('male',0)\ntest['Sex']=test['Sex'].replace('female',1)\ntrain['Embarked']=train['Embarked'].replace('S',0)\ntrain['Embarked']=train['Embarked'].replace('C',1)\ntrain['Embarked']=train['Embarked'].replace('Q',2)","052d9600":"train.head()","a793a5a3":"mask=np.zeros_like(train.corr(),dtype=bool)\nmask[np.triu_indices_from(mask)]=True\n\nplt.figure(figsize=(7,7))\nsns.heatmap(train.corr(),annot=True,mask=mask,cmap='Blues')","15a05ce9":"plt.figure(figsize=(15,15))\nplt.subplot(331)\nplt.title('Survived')\nplt.pie(train['Survived'].value_counts(),labels=['Not-Survived','Survived'],autopct='%.1f%%')\nplt.subplot(332)\nplt.title('Sex')\nplt.pie(train['Sex'].value_counts(),labels=['Male','Female'],autopct='%.1f%%')\nplt.subplot(333)\nplt.title('Age')\nsns.kdeplot(train['Age'],color='navy')\nplt.subplot(334)\nplt.title('SibSp')\nsns.histplot(train['SibSp'].value_counts(),color='navy')\nplt.subplot(335)\nplt.title('Parch')\nsns.histplot(train['Parch'].value_counts(),color='navy')\nplt.subplot(336)\nplt.title('Embarked')\nplt.pie(train['Embarked'].value_counts(),labels=['S','C','Q'],autopct='%.1f%%')\nplt.subplot(337)\nplt.title('Pclass')\nplt.pie(train['Pclass'].value_counts(),labels=[3,1,2],autopct='%.1f%%')\nplt.subplot(338)\nplt.title('Fare')\nsns.kdeplot(train['Fare'],color='navy')","f3edba22":"train.isna().sum()","cee76430":"age_train=train[~train['Age'].isna()]\nage_test=train[train['Age'].isna()]","a0623d7b":"age_features=['Survived', 'Pclass', 'Sex', 'SibSp', 'Parch','Fare']\nage_target='Age'","2e87e178":"age_X_train=age_train[age_features]\nage_X_test=age_test[age_features]\nage_Y_train=age_train[age_target]","46cc4dd2":"dtr.fit(age_X_train,age_Y_train)\nage_result=dtr.predict(age_X_test)\nage_test.reset_index(inplace=True)\nage_test['Age']=age_result\nage_test['Age']=age_test['Age'].astype(int)","a4083719":"age_test.drop('index',axis=1,inplace=True)\ntest_new=pd.concat([age_train,age_test])","382bcdd1":"age_features=['Pclass', 'Sex', 'SibSp', 'Parch','Fare']\nage_target='Age'\nage_train=test[~test['Age'].isna()]\nage_test=test[test['Age'].isna()]\nage_train.fillna(0,inplace=True)\nage_X_train=age_train[age_features]\nage_X_test=age_test[age_features]\nage_Y_train=age_train[age_target]\ndtr.fit(age_X_train,age_Y_train)\nage_result=dtr.predict(age_X_test)\nage_test.reset_index(inplace=True)\nage_test['Age']=age_result\nage_test['Age']=age_test['Age'].astype(int)\nage_test.drop('index',axis=1,inplace=True)\ntest_new=pd.concat([age_train,age_test])","b17a25c7":"features=['Pclass', 'Sex', 'Age', 'SibSp', 'Parch','Fare']\ntarget='Survived'","0d06602c":"X_train=train_new[features]\nX_test=test_new[features]\nY_train=train_new[target]","64e1fee2":"dtc.fit(X_train,Y_train)\nresult=dtc.predict(X_test)\nresult","a423559d":"subm=submission.copy()\nsubm['Survived']=result\nsubm.to_csv(\"ver.1.0.csv\",index=False)","a1c7e533":"To predict survivor, we will use DecisionTreeClassifier.","8ff5d90a":"## 2. Data EDA(Exploratory Data Analysis)","f2a13d76":"Execute same things in the test set","f2d1790a":"To fill NaN value in the 'Age' columns, we will use DecisionTreeRegressor.","3be0b4ac":"## 3-1. Model Selection and fitting - DecisionTreeRegressor","d7b9a2ed":"Watching the correlation between the features.","a0bc5e1b":"## 4. Model Selection and Fitting - DecisionTreeClassifier","7c8c96da":"# Predicting Titanic Survivor Through Machine Learning","b38d9746":"## 1. Loading the Data","eb65d7fc":"## 5. Submission","381b1c66":"If the absolute value is larger than 0.4, it has correlation.<br>\n<li>Sex & Survived<\/li>\n<li>Pclass & Fare<\/li>\n<li>Farch & SibSp<\/li>\nhave correlations.","6d918ca1":"## 3. Data Preprocessing"}}