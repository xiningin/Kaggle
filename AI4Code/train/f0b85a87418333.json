{"cell_type":{"14035235":"code","0bbb7522":"code","5dd41bd1":"code","d1efe496":"code","8d6472d8":"code","c5fa94cf":"code","eab16065":"code","61a370c9":"markdown","0a31d933":"markdown","659c7c2e":"markdown","d3a69b3d":"markdown","46c0640d":"markdown","5fb8cd14":"markdown","dcc4a599":"markdown"},"source":{"14035235":"from __future__ import annotations","0bbb7522":"import json\nimport numpy as np\nimport pandas as pd\nimport os\nimport requests\nimport socket\n\nfrom tqdm.notebook import tqdm as show_progress\nfrom typing import Optional\nfrom shutil import copytree","5dd41bd1":"NOTEBOOK_NAME = \"Cellpose Model Collector\"","d1efe496":"INPUT_ROOT = os.path.abspath(os.path.join(\"..\", \"input\"))\nTEMP_ROOT = os.path.abspath(os.path.join(\"..\", \"temp\"))\nWORKING_ROOT = os.path.abspath(\".\")\nprint(f\"INPUT_ROOT='{INPUT_ROOT}'\")\nprint(f\"TEMP_ROOT='{TEMP_ROOT}'\")\nprint(f\"WORKING_ROOT='{WORKING_ROOT}'\")","8d6472d8":"!pip install cellpose","c5fa94cf":"from cellpose import models\n","eab16065":"copytree(\"\/root\/.cellpose\", os.path.join(WORKING_ROOT, \"cellpose_models\"))","61a370c9":"# And finally\n\nTo use this in your actual workbook, save the output of this workbook as a private dataset. \n\nLet's assume it's called \"Cellpose Models\". When it loads into your workbook it will appear in folder \"..\/input\/cellpose-models\".\n\n**Before** importing cellpose.models use the following to copy the model into the correct location:\n\n> from shutil import copytree \\\n> copytree(\"..\/input\/cellpose-models\/cellpose_models\", \"\/root\/.cellpose\")\n","0a31d933":"## Import cellpose models","659c7c2e":"# Copy models to working folder","d3a69b3d":"# Notebook configuration","46c0640d":"# Imports","5fb8cd14":"# Folder Roots","dcc4a599":"# Cellpose Model Collector\n\nThe cellpose library dynamically downloads it's pre-trained model weights during\nlibrary loading - this is fine normally but doesn't work if you are trying to\nuse the library in a notebook that doesn't have internet access, such as for\nthe Human Protein Atlas competition 2021.\n\nThis means that the model weights need to be downloaded first and saved as a Kaggle\ndataset. Then this can be imported into the notebook as a dataset and the weights\ncopied back into the folder that cellpose uses for caching the model weights.\n\nThis folder is \"\/root\/.cellpose\".\n\n## Offline loading the cellpose library\n\nYou also need to be able to offline load the cellpose library and the correct version of pytorch to\nwork with the GPU on Kaggle. To do this see the following notebook: [Offline Package Wheeler](https:\/\/www.kaggle.com\/andrewscholan\/offline-package-wheeler-public)."}}