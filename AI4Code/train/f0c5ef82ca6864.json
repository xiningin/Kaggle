{"cell_type":{"b804d797":"code","1457ffbd":"code","a9116f9d":"code","aee20067":"code","ed8b5eb3":"code","47344688":"code","99157813":"code","051c161d":"code","ea9294db":"markdown","1e7fc657":"markdown","a6abbd8a":"markdown","a8495d70":"markdown","53081b97":"markdown","3a84b3c9":"markdown"},"source":{"b804d797":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1457ffbd":"dfAll = pd.read_csv(\"..\/input\/fashion-mnist_train.csv\")\ndf = dfAll[((dfAll.label == 0) | (dfAll.label == 1))]","a9116f9d":"df.head()","aee20067":"df.info()","ed8b5eb3":"# We will split our data\n\nfrom sklearn.model_selection import train_test_split\n\nX = df.drop([\"label\"], axis=1)\nY = df.label\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.30, random_state=42)","47344688":"# Example Images\n\nplt.figure(figsize=(8,8))\nfor i in range(4):\n    plt.subplot(2,2,i+1)\n    plt.axis('off')\n    plt.imshow(x_train.head().values[i].reshape(28,28), cmap='gray', interpolation='none')","99157813":"x_train = x_train.values.T\ny_train = y_train.values.reshape(8400,1).T\nx_test = x_test.values.T\ny_test = y_test.values.reshape(3600,1).T","051c161d":"from keras.wrappers.scikit_learn import KerasClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom keras.models import Sequential\nfrom keras.layers import Dense\n\ndef buildClassifier():\n    classifier = Sequential()\n    classifier.add(Dense(units=8, kernel_initializer=\"uniform\", activation=\"relu\", input_dim=x_train.shape[0])) # Hidden Layer 1 with 8 nodes\n    classifier.add(Dense(units=6, kernel_initializer=\"uniform\", activation=\"relu\"))  # Hidden Layer 2 with 6 nodes\n    classifier.add(Dense(units=1, kernel_initializer=\"uniform\", activation=\"sigmoid\")) # Output Layer\n    classifier.compile(optimizer = \"adam\", loss = \"binary_crossentropy\", metrics = [\"accuracy\"])\n    return classifier\n\n\nclassifier = KerasClassifier(build_fn=buildClassifier, epochs = 100)\naccuracies = cross_val_score(estimator = classifier, X = x_train.T, y = y_train.T, cv=3)\nmean = accuracies.mean()\nvariance = accuracies.std()\n\nprint(\"Accuracy Mean is {:.2f}%\".format(mean*100))\nprint(\"Accuracy Variance is {}\".format(variance))","ea9294db":"**Read Data**<a id=2><\/a>","1e7fc657":"**We can say our model works with  approximately <font color=\"red\">99%<\/font> of acuracy.**","a6abbd8a":"Thanks for your time!","a8495d70":"**About Dataset**<a id=1><\/a><br>\n<br>\nDataset consists a training set of 60,000 examples and a test set of 10,000 examples. Each example is a 28x28 grayscale image, associated with a label from 10 classes.\n    - Each image is 28 pixels in height and 28 pixels in width, for a total of 784 pixels in total.\n    - Each pixel has a single pixel-value associated with it, indicating the lightness or darkness of that pixel, with higher numbers meaning darker. This pixel-value is an integer between 0 and 255.\n    - The training and test data sets have 785 columns. The first column consists of the class labels, and represents class of clothing. The rest of the columns contain the pixel-values of the associated image.\n<br>\nEach training and test example is assigned to one of the following labels:\n\n    - 0 T-shirt\/top\n    - 1 Trouser\n    - 2 Pullover\n    - 3 Dress\n    - 4 Coat\n    - 5 Sandal\n    - 6 Shirt\n    - 7 Sneaker\n    - 8 Bag\n    - 9 Ankle boot \n\nSince we want binary classification we'll just choose 0 and 1 for our data.","53081b97":"[](http:\/\/)<font color=\"red\" size=4>What is Artificial Neural Network?<\/font>\n<br>\nArtifical Neural Networks (ANN) are one of the main tools which are used in machine learning. \"Neural\" part of their name is called as like that because these systems try to learn things like human brain. Replicated networks contains some kind of neurons and these neurons create a network by connecting each other. These networks have capacity of learning, storing and finding out relationships between datas like a human! <br>\nFor example they can learn to identify images that contain cars by analyzing example images. So after learning phase is completed if you ask to algorithm 'Is it a car?' by giving it an image, algorithm can answer your question becuase it identified other cars images and learned how a car looks like. <br>\nNeural Networks has input and output layers like others but most of the cases they also have hidden layers, and usually we can say how 'deep' our algorithm according to number of hidden layers.\n<br>\n<br>\n<br>\n<img src=\"https:\/\/icdn5.digitaltrends.com\/image\/artificial_neural_network_1-791x388.jpg\" width=400\/>\n<br>\n<br>\nNow we'll try to use this algorithm with a dataset contains images of 10 different classes of fashion. \n<br>\n<br>\n**CONTENT**\n1. [Information About Data](#1)\n1. [Reading Data](#2)\n1. [ANN with Keras](#3)","3a84b3c9":"**ANN with Keras**<a id=3><\/a>"}}