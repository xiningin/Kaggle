{"cell_type":{"6b894b8b":"code","43bb2a62":"code","a9f8698a":"code","c49bc85d":"code","68928927":"code","288dde3e":"code","69430fc9":"code","d18fb362":"code","18c89a1f":"code","013b105f":"code","ce3e5a03":"code","dbf0e1b3":"code","cdcf9066":"code","9183c7ef":"code","d1451b94":"code","d1e7676d":"code","869df2f1":"code","c0019e0f":"code","ee1f1e81":"code","698b2f86":"code","2c42989d":"code","1f68ab95":"code","73bdf54e":"code","6d5670b5":"code","70ce9927":"code","03431bb4":"code","052ef599":"code","8e2b3137":"code","e1f34746":"code","6ec4ff1e":"code","ed503401":"markdown"},"source":{"6b894b8b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","43bb2a62":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom itertools import combinations\nimport warnings\nwarnings.filterwarnings('ignore')","a9f8698a":"df = pd.read_csv('..\/input\/diamonds-ds-ft-2109\/diamonds_train.csv')\ndf1 = pd.read_csv('..\/input\/diamonds-ds-ft-2109\/diamonds_test.csv')\ndf.head()","c49bc85d":"# dropping the unnames column\ndf = df.drop(columns=['Unnamed: 0'])\ndf1 = df1.drop(columns=['Unnamed: 0'])\ndf.head()","68928927":"df.dtypes","288dde3e":"df.info()","69430fc9":"df.describe()","d18fb362":"#univariate - numerical\nplt.figure(figsize=(25,15))\nj=1\nfor i in df.select_dtypes(exclude=['object']):\n    plt.subplot(3,4,j)\n    sns.distplot(df[i])\n    j=j+1","18c89a1f":"plt.figure(figsize=(25,15))\nj=1\nfor i in df.select_dtypes(exclude=['object']):\n    plt.subplot(3,4,j)\n    sns.boxplot(y=df[i])\n    j=j+1","013b105f":"plt.figure(figsize=(25,15))\nj=1\nfor i in df.select_dtypes(exclude=['object']):\n    plt.subplot(3,4,j)\n    sns.violinplot(y=df[i])\n    j=j+1","ce3e5a03":"#univariate - categorical\nplt.figure(figsize=(25,15))\nj=1\nfor i in df.select_dtypes(include=['object']):\n    plt.subplot(3,4,j)\n    sns.countplot(df[i])\n    j=j+1","dbf0e1b3":"# bivariate - numerical vs numerical\nsns.pairplot(data=df)","cdcf9066":"# diff combos\nlist(combinations([df.select_dtypes(exclude=['object']).columns,df.select_dtypes(include=['object']).columns],2))","9183c7ef":"# bivariate - numerical vs categorical \nplt.figure(figsize=(25,80))\nj=1\nfor k in df.select_dtypes(exclude=['object']):\n    for i in df.select_dtypes(include=['object']):\n        plt.subplot(10,3,j)\n        sns.boxplot(x=df[i],y=df[k])\n        j=j+1","d1451b94":"# correlation test\nplt.figure(figsize=(15,10))\nsns.heatmap(df.corr(),annot=True)","d1e7676d":"# checking the null values\ndf.isna().sum()","869df2f1":"# encoding to numerical\na = {'Fair':0, 'Good':1, 'Very Good':2, 'Premium':3, 'Ideal':4}\nb = {'D':6,'E':5,'F':4,'G':3,'H':2,'I':1,'J':0}\nc = {'I1':0 , 'SI2':1, 'SI1':2, 'VS2':3, 'VS1':4, 'VVS2':5, 'VVS1':6, 'IF':7 }","c0019e0f":"df['cut'] = df['cut'].map(a)\ndf1['cut'] = df1['cut'].map(a)","ee1f1e81":"df['color'] = df['color'].map(b)\ndf1['color'] = df1['color'].map(b)","698b2f86":"df['clarity'] = df['clarity'].map(c)\ndf1['clarity'] = df1['clarity'].map(c)","2c42989d":"df.dtypes","1f68ab95":"X = df.drop(columns=['price'])\ny = df['price']","73bdf54e":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(\n X, y, test_size=0.20, random_state=5)","6d5670b5":"import lightgbm as lgb\nfrom catboost import CatBoostRegressor","70ce9927":"model = lgb.LGBMRegressor()","03431bb4":"model = CatBoostRegressor()","052ef599":"model.fit(X_train,y_train)\npred = model.predict(X_test)\nmodel.score(X_test,y_test)","8e2b3137":"model.fit(X,y)\npred = model.predict(df1)","e1f34746":"sub = pd.DataFrame({'id':range(len(df1)),'price':pred})","6ec4ff1e":"sub.to_csv('submission.csv',index=False)","ed503401":"# Basic EDA"}}