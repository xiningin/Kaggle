{"cell_type":{"41cd8c60":"code","3d8752b2":"code","b001d574":"code","aafbf6b9":"code","c99e2d08":"code","b6f29586":"code","58360d54":"code","f6804ed4":"code","9b0bb401":"code","89345b10":"code","9a4e2804":"code","062d80b7":"code","19e5721e":"code","fce5af04":"code","4994852f":"code","8d17eb41":"code","96611d17":"code","bfcb9311":"code","ec73f484":"code","d6b0a5db":"code","f486a94b":"code","daef9e59":"code","bee637f5":"code","0ac6dfa0":"code","7ef2fd1d":"code","b65107ec":"code","28a3f7c1":"code","4a2f0aaa":"code","50549bf4":"code","510ee979":"code","be69f1e7":"code","9dd7fe88":"code","cae70d40":"code","e439b061":"code","27455303":"code","04de6290":"code","c78baceb":"code","7a5dfc84":"code","6a0b002e":"code","aa9425d2":"code","1cf9b541":"code","44b26e66":"markdown","8ad084a8":"markdown","66788173":"markdown","da93adcf":"markdown","6cc2f461":"markdown","ef599fc7":"markdown","9ffbdab0":"markdown","1f59dc05":"markdown","0b5185cd":"markdown","e0d51950":"markdown","caaf2b0b":"markdown","5df8d288":"markdown","d0ea9546":"markdown","668f2841":"markdown","acbf4c5b":"markdown","3c65981f":"markdown","8d5d8010":"markdown","78891b0f":"markdown"},"source":{"41cd8c60":"# Nessasary imports\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import plot_roc_curve\nimport warnings\nwarnings.filterwarnings('ignore')","3d8752b2":"# Setting up the paremeters for matplotlib visual treat\nplt.rcParams['axes.labelsize'] = 15.\nplt.rcParams['xtick.labelsize'] = 15.\nplt.rcParams['ytick.labelsize'] = 15.\nplt.rcParams['figure.figsize'] = [15.,8.]\nplt.rcParams['legend.fontsize'] = 13.","b001d574":"#Import DataSet\ndf = pd.read_csv(\"..\/input\/iris-flower-dataset\/IRIS.csv\")","aafbf6b9":"df.head()  ","c99e2d08":"# Size of the dataset\ndf.size","b6f29586":"df.columns","58360d54":"df.info()","f6804ed4":"df.isna().sum()","9b0bb401":"df.describe()","89345b10":"df['species'].value_counts()","9a4e2804":"plt.figure(figsize=(15,20))\nsns.set_theme(style='darkgrid')\nplt.subplot(4,1,1)\nsns.countplot(data=df, x=\"sepal_length\", hue=\"species\", palette=\"magma\")\nplt.subplot(4,1,2)\nsns.countplot(data=df, x=\"sepal_width\", hue=\"species\", palette=\"magma\")\nplt.subplot(4,1,3)\nsns.countplot(data=df, x=\"petal_length\", hue=\"species\", palette=\"magma\")\nplt.subplot(4,1,4)\nsns.countplot(data=df, x=\"petal_width\", hue=\"species\", palette=\"magma\");","062d80b7":"plt.figure(figsize=(20,15))\nsns.set_theme(style='darkgrid')\nplt.subplot(2,2,1)\nsns.histplot(x=df['sepal_length'], kde=True)\nplt.subplot(2,2,2)\nsns.histplot(x=df['sepal_width'], kde=True)\nplt.subplot(2,2,3)\nsns.histplot(x=df['petal_length'], kde=True)\nplt.subplot(2,2,4)\nsns.histplot(x=df['petal_width'], kde=True);","19e5721e":"sns.pairplot(data=df, hue=\"species\");","fce5af04":"corr_matrix = df.corr()\ncorr_matrix","4994852f":"sns.heatmap(corr_matrix, annot=True, cmap='Accent');","8d17eb41":"plt.figure(figsize=(20,15))\nsns.set_theme(style=\"darkgrid\")\nplt.subplot(2,2,1)\nsns.histplot(data=df, x='sepal_length', hue='species', kde=True)\nplt.subplot(2,2,2)\nsns.histplot(data=df, x='sepal_width', hue='species', kde=True)\nplt.subplot(2,2,3)\nsns.histplot(data=df, x='petal_length', hue='species', kde=True)\nplt.subplot(2,2,4)\nsns.histplot(data=df, x='petal_width', hue='species', kde=True);","96611d17":"plt.figure(figsize=(20,15))\nsns.set_theme(style=\"darkgrid\")\nplt.subplot(2,2,1)\nsns.boxplot(data=df,x='species', y='sepal_length')\nplt.subplot(2,2,2)\nsns.boxplot(data=df,x='species', y='sepal_width')\nplt.subplot(2,2,3)\nsns.boxplot(data=df,x='species', y='petal_length')\nplt.subplot(2,2,4)\nsns.boxplot(data=df,x='species', y='petal_width');","bfcb9311":"x= df.drop(\"species\",axis=1)\ny = df[\"species\"]","ec73f484":"# Split into training and test set \nnp.random.seed(123)\nx_train,x_test, y_train, y_test = train_test_split(x, y, test_size=0.3)","d6b0a5db":"x_train.head()","f486a94b":"y_train.head()","daef9e59":"# Put All models in dictionary\n\nmodels = {\"LogisticRegression\": LogisticRegression(),\n         \"RandomForest Classifier\": RandomForestClassifier(),\n         \"KNN\": KNeighborsClassifier(),\n         }\n\ndef fit_and_score(models, x_train, x_test, y_train, y_test):\n    \n    np.random.seed(123)\n    \n    model_scores = {}\n    \n    for name, model in models.items():\n        model.fit(x_train,y_train)\n        model_scores[name] = model.score(x_test,y_test)\n        \n    return model_scores","bee637f5":"scores = fit_and_score(models=models,\n                      x_train=x_train,\n                      x_test=x_test,\n                      y_train=y_train,\n                      y_test=y_test)\nscores","0ac6dfa0":"compare_model = pd.DataFrame(scores, index=[\"accuracy\"])\ncompare_model.T.plot(kind=\"line\", figsize=(10,6));","7ef2fd1d":"log_grid = [{'penalty' : ['l1', 'l2', 'elasticnet', 'none'],\n            'C' : np.logspace(-4, 4, 20),\n            'solver' : ['lbfgs','newton-cg','liblinear','sag','saga'],\n            'max_iter' : [100, 1000,2500, 5000]\n            }]","b65107ec":"np.random.seed(123)\nmodel_log = GridSearchCV(LogisticRegression(n_jobs=-1),\n                        param_grid=log_grid,\n                        cv=5,\n                        verbose=True)\nmodel_log.fit(x_train,y_train)","28a3f7c1":"model_log.best_params_","4a2f0aaa":"model_log.best_score_","50549bf4":"rf_grid = {'n_estimators': [int(x) for x in np.linspace(start = 10, stop = 80, num = 10)],\n            'max_features': ['auto', 'sqrt'],\n            'max_depth': [2,4],\n            \"min_samples_split\": [2, 5],\n            \"min_samples_leaf\": [1,2],\n            'bootstrap': [True, False]}","510ee979":"np.random.seed(123)\nmodel_rf = GridSearchCV(RandomForestClassifier(),\n                       param_grid=rf_grid,\n                       cv=5,\n                       verbose=True,\n                       n_jobs=-1)\nmodel_rf.fit(x_train, y_train)","be69f1e7":"model_rf.best_params_","9dd7fe88":"model_rf.best_score_","cae70d40":"knn_grid = {\"n_neighbors\": [3,5,11,19],\n           \"weights\": [\"uniform\", \"distance\"],\n           \"metric\":[\"euclidean\",\"manhattan\"]}","e439b061":"np.random.seed(123)\n\nmodel_knn = GridSearchCV(KNeighborsClassifier(n_jobs=-1),\n                        param_grid=knn_grid,\n                        cv=5,\n                        verbose=True,\n                        )\nmodel_knn.fit(x_train, y_train)","27455303":"model_knn.best_params_","04de6290":"model_knn.best_score_","c78baceb":"y_preds = model_knn.predict(x_test)","7a5dfc84":"y_preds","6a0b002e":"confusion_matrix(y_test,y_preds)","aa9425d2":"plt.figure(figsize=(10,6))\nsns.heatmap(confusion_matrix(y_test,y_preds),\n           annot=True, # Annotate the boxes\n                     cbar=False);","1cf9b541":"print(classification_report(y_test, y_preds))","44b26e66":"### KNN gives better results than both the models","8ad084a8":"### Logistic Regression ","66788173":"### As we can we have some outliers in virginica for sepal_length and width , sentosa and versicolor for petal_length and sentosa for  petal_width. ","da93adcf":"`We can observe setosa species has different characteristics,\nit has highest sepal length and sepal width while its petal length and petal with is the lowest among others. As for versicolor the the sepal length\/width and petal length\/width is of average size compared to the other two categories where as the virgica has the high sepal length but low sepal width, also with high petal length and width.`","6cc2f461":"### There is no missing value in the dataset","ef599fc7":"### As we can see petal_length is highly corelated with the species.","9ffbdab0":"## KNN","1f59dc05":"## Camparing Model Results (prior hyperparameter tuning)","0b5185cd":"## Modeling","e0d51950":"## Hyerparameter Tuning","caaf2b0b":"### Target value is equally distributed","5df8d288":"## Corelation between Features of Flower Categories","d0ea9546":"## RandomForestClassifier","668f2841":"## Conclusion:\n\n### KNeighborsClassifier performs after hyperparameter tuning.","acbf4c5b":"### Comments:\n* Hightest Sepal_length : `Iris_setosa`\n* Hightst sepal_width   : `Iris_verginica`\n* Hightest petal_length : `Iris_setosa`\n* Hightest petal_width  : `Iris_setosa`","3c65981f":"## EDA Univariate, Bivariate and Multivariate Analysis","8d5d8010":"## Iris Flower Data Dictionary:\n* The data set consists of 50 samples from each of three species of Iris (Iris Setosa, Iris virginica, and Iris versicolor). Four features were measured from each sample: the length and the width of the sepals and petals, in centimeters.\n* The dataset contains a set of 150 records under 5 attributes - Petal Length, Petal Width, Sepal Length, Sepal width and Class(Species).    ","78891b0f":"###  >  sepal_length: The distribution is unimodal, range is between 4.5 to 8.0, the mean value is  5.843333333333334 and median value is 5.8\n\n### > sepal_width: The distribution is unimodal, range is between 1.9 to 4.5, the mean value is  3.05 and median value is 3.0\n\n### >  petal_length: The distribution is bimodal, range is between 1 to 7.0, the mean value is  3.75 and median value is 4.35\n\n### >  petal_width: The distribution is bimodal, range is between 0 to 2.5, the mean value is  1.98 and median value is 1.3"}}