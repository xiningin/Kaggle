{"cell_type":{"f6b20d21":"code","863dcd3f":"code","01d727d4":"code","c0c96d5f":"code","dc957c14":"code","d9af6f1f":"code","f133f9b8":"code","b77d3fce":"code","10d00266":"code","df785bfc":"code","dcf01e61":"code","43fb70cc":"code","b33f58e6":"code","eb920291":"code","2a091ca9":"code","125c7b91":"code","b43eb466":"code","83811bf9":"code","0555a083":"code","7444c5da":"code","838056dc":"code","b20ade96":"code","ca450b06":"code","4c665c69":"code","9aaab652":"code","90c94b7c":"code","d9fbd3d7":"code","921486fe":"code","c45240e3":"code","17ec0fa3":"code","f5d1a34e":"code","f0e94c61":"code","9f9ff927":"code","ead71314":"code","d4fd41c7":"code","e3638620":"code","ce8cbf16":"code","ae323746":"code","8f160407":"code","971923b5":"code","f2372291":"code","981b1979":"code","7c42283b":"code","c4fd3a65":"code","abefe1c4":"code","54953065":"code","1758b410":"code","e07b9435":"code","ceaec33d":"code","69cbcd3e":"code","4ca2c15d":"code","c86623f3":"code","3057dba6":"code","faaa0845":"code","5ff6e0de":"code","5b58837e":"code","b9d61145":"code","879a3156":"code","2e1e1c45":"code","17c5e732":"code","b84520eb":"code","7f1a5b5b":"code","5d619e94":"code","5c090403":"code","0dedcb62":"code","f0a9f0b9":"code","c8e9fe60":"code","21a272a4":"code","c26a4557":"code","399a91d4":"code","3441f1a3":"code","ca176f18":"code","57699f49":"code","2d410537":"code","b3a4a79b":"code","5318953e":"code","6e2570f9":"code","d19e3795":"code","203e69f5":"code","f94224ec":"code","a6f006d7":"code","df0bfa47":"code","d9d513f6":"code","2d1bfb5b":"code","033fc40b":"code","026873f4":"code","7040bcfc":"code","3fe41b06":"markdown","70fa6402":"markdown","8fb8a0fe":"markdown","348495a8":"markdown","74d79ed6":"markdown","cc2a9b76":"markdown","7ea26678":"markdown","41089c63":"markdown","bccd8f67":"markdown","a1f178b3":"markdown","800cfabb":"markdown","63357fce":"markdown","50a3b170":"markdown","7505db40":"markdown","48be0fd0":"markdown","cc20345a":"markdown","c384cf07":"markdown","452de755":"markdown","8c6673f9":"markdown","61825b01":"markdown","0160e6a5":"markdown","e1381b4c":"markdown","bf773c2e":"markdown"},"source":{"f6b20d21":"print('\\n'.join([''.join([(' Saltuk_Kemal_Mert_Bar\u0131s_Ahmet_'[(x-y) % len('Saltuk_Kemal_Mert_Bar\u0131s_Ahmet_')] \n                           if ((x*0.05)**2+(y*0.1)**2-1)**3-(x*0.05)**2*(y*0.1)**3 <= 0 else ' ') \n                          for x in range(-30, 30)]) for y in range(15, -15, -1)]))","863dcd3f":"import numpy as np\nimport pandas as pd \nfrom sklearn.preprocessing import LabelEncoder\nimport os\nimport gc\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\nimport seaborn as sns","01d727d4":"df_prev = pd.read_csv('..\/input\/home-credit-default-risk\/previous_application.csv')","c0c96d5f":"df_prev.head()","dc957c14":"df_prev.columns","d9af6f1f":"df_prev.shape","f133f9b8":"df_prev.index","b77d3fce":"df_prev.isnull().values.any()","10d00266":"df_prev.isnull().sum()","df785bfc":"def missing_values_table(df_prev):\n        mis_val = df_prev.isnull().sum()\n        mis_val_percent = 100 * df_prev.isnull().sum() \/ len(df_prev)\n        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n        mis_val_table_ren_columns = mis_val_table.rename(\n        columns = {0 : 'Missing Values', 1 : '% of Total Values'})\n        mis_val_table_ren_columns = mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n        '% of Total Values', ascending=False).round(1)\n     \n        print (\"Your selected dataframe has \" + str(df_prev.shape[1]) + \" columns.\\n\"      \n            \"There are \" + str(mis_val_table_ren_columns.shape[0]) +\n              \" columns that have missing values.\")\n        \n        return mis_val_table_ren_columns\nmissing_values_table(df_prev)","dcf01e61":"df_prev.dtypes.value_counts()","43fb70cc":"df_prev.info()","b33f58e6":"cat_cols = [col for col in df_prev.columns if df_prev[col].dtypes == 'O']\ncat_cols","eb920291":"def cat_summary(data, categorical_cols, target, number_of_classes=10):\n    var_count = 0  # How many categorical variables will be reported?\n    vars_more_classes = []  # Variables with more than a certain number of classes will be stored.\n    for var in categorical_cols:\n        if len(df_prev[var].value_counts()) <= number_of_classes:  # Choose by number of classes.\n            print(pd.DataFrame({var: data[var].value_counts(),\n                                \"Ratio\": 100 * data[var].value_counts() \/ len(data),\n                                \"TARGET_MEDIAN\": data.groupby(var)[target].median()}), end=\"\\n\\n\\n\")\n            var_count += 1\n        else:\n            vars_more_classes.append(data[var].name)\n    print('%d categorical variables have been described' % var_count, end=\"\\n\\n\")\n    print('There are', len(vars_more_classes), \"variables have more than\", number_of_classes, \"classes\", end=\"\\n\\n\")\n    print('Variable names have more than %d classes:' % number_of_classes, end=\"\\n\\n\")\n    print(vars_more_classes)\n\n\ncat_summary(df_prev, cat_cols, \"SK_ID_CURR\")","2a091ca9":"# Number of unique classes in each object column\ndf_prev.select_dtypes('object').apply(pd.Series.nunique, axis = 0)","125c7b91":"# 1) NAME_TYPE_SUITE : Who was accompanying client when he was applying for the loan?\ndf_prev[\"NAME_TYPE_SUITE\"].value_counts()   ","b43eb466":"# Displaying Categorical Variables with Column Graph\nsns.countplot(x=\"NAME_TYPE_SUITE\", data=df_prev)\nplt.show()","83811bf9":"# 2) NAME_CLIENT_TYPE: Was the client old or new client when applying for the previous application?\ndf_prev[\"NAME_CLIENT_TYPE\"].value_counts()","0555a083":"# Displaying Categorical Variables with Column Graph\nsns.countplot(x=\"NAME_CLIENT_TYPE\", data=df_prev)\nplt.show()","7444c5da":"# 3) NAME_GOODS_CATEGORY: What kind of goods did the client apply for in the previous application?\ndf_prev[\"NAME_GOODS_CATEGORY\"].value_counts()","838056dc":"# 4) NAME_PORTFOLIO: Was the previous application for CASH, POS, CAR?\ndf_prev[\"NAME_PORTFOLIO\"].value_counts()","b20ade96":"# Displaying Categorical Variables with Column Graph\nsns.countplot(x=\"NAME_PORTFOLIO\", data=df_prev)\nplt.show()","ca450b06":"# 5) NAME_PRODUCT_TYPE: Was the previous application x-sell o walk-in?\ndf_prev[\"NAME_PRODUCT_TYPE\"].value_counts()","4c665c69":"# Displaying Categorical Variables with Column Graph\nsns.countplot(x=\"NAME_PRODUCT_TYPE\", data=df_prev)\nplt.show()","9aaab652":"# 6) CHANNEL_TYPE: Through which channel we acquired the client on the previous application?\ndf_prev[\"CHANNEL_TYPE\"].value_counts()","90c94b7c":"# 7) NAME_CONTRACT_STATUS: Contract status (approved, cancelled, ...) of previous application.\ndf_prev[\"NAME_CONTRACT_STATUS\"].value_counts()","d9fbd3d7":"# Displaying Categorical Variables with Column Graph\nsns.countplot(x=\"NAME_CONTRACT_STATUS\", data=df_prev)\nplt.show()","921486fe":"# 8) WEEKDAY_APPR_PROCESS_START:On which day of the week did the client apply for the loan.\ndf_prev[\"WEEKDAY_APPR_PROCESS_START\"].value_counts()","c45240e3":"# Displaying Categorical Variables with Column Graph\nsns.countplot(x=\"WEEKDAY_APPR_PROCESS_START\", data=df_prev)\nplt.show()","17ec0fa3":"df_prev.describe().T","f5d1a34e":"df_prev.describe([0.05, 0.10, 0.25, 0.50, 0.75, 0.80, 0.90, 0.95, 0.99]).T","f0e94c61":"# How many numeric variables are in the data set?\nnum_cols = [col for col in df_prev.columns if df_prev[col].dtypes != 'O']\nprint('Number of numerical variables: ', len(num_cols))","9f9ff927":"# What are the names of the numeric variables?\nnum_cols","ead71314":"# Visualization of numeric variables\ndef hist_for_nums(data, numeric_cols):\n    col_counter = 0\n    data = data.copy()\n    for col in numeric_cols:\n        data[col].hist(bins=20)\n        plt.xlabel(col)\n        plt.title(col)\n        plt.show()\n        col_counter += 1\nhist_for_nums(df_prev, num_cols)","d4fd41c7":"# Correlation Matrix\ncorrmat = df_prev.corr()\nfig = plt.figure(figsize = (10,7))\nsns.heatmap(corrmat,vmax = 1,square = True,annot = True,vmin = -1)\nplt.show()","e3638620":"df_prev['AMT_APPLICATION'].corr(df_prev['AMT_GOODS_PRICE'])","ce8cbf16":"df_prev['DAYS_FIRST_DUE'].corr(df_prev['DAYS_DECISION'])","ae323746":"df_prev['DAYS_FIRST_DUE'].corr(df_prev['DAYS_FIRST_DRAWING'])","8f160407":"# 1) AMT_ANNUITY: Annuity of previous application.\ndf_prev[\"AMT_ANNUITY\"].value_counts()","971923b5":"# 2)\uf0a7 AMT_APPLICATION: For how much credit did client ask on the previous application.\ndf_prev[\"AMT_APPLICATION\"].value_counts()","f2372291":"# 3) Final credit amount on the previous application. This differs from AMT_APPLICATION in a way that the AMT_APPLICATION is \n# the amount for which the client initially applied for, but during our approval process he could have received different amount\ndf_prev[\"AMT_CREDIT\"].value_counts()","981b1979":"# 4) AMT_DOWN_PAYMENT: Down payment on the previous application\ndf_prev[\"AMT_DOWN_PAYMENT\"].value_counts()","7c42283b":"# 5) AMT_GOODS_PRICE: Goods price of good that client asked for (if applicable) on the previous application.\ndf_prev[\"AMT_GOODS_PRICE\"].value_counts()","c4fd3a65":"# 6) CODE_REJECT_REASON: Why was the previous application rejected?\ndf_prev[\"CODE_REJECT_REASON\"].value_counts()","abefe1c4":"# 7) SELLERPLACE_AREA: Selling area of seller place of the previous application.\ndf_prev[\"SELLERPLACE_AREA\"].value_counts()","54953065":"a = ['Family', 'Spouse, partner', 'Children', 'Other_B', 'Other_A', 'Group of people']\ndf_prev[\"NAME_TYPE_SUITE\"] = df_prev[\"NAME_TYPE_SUITE\"].replace(a, 'Accompanied')","1758b410":"df_prev[\"NAME_TYPE_SUITE\"].value_counts()","e07b9435":"b = ['Auto Accessories', 'Jewelry', 'Homewares', 'Medical Supplies', 'Vehicles', 'Sport and Leisure', \n         'Gardening', 'Other', 'Office Appliances', 'Tourism', 'Medicine', 'Direct Sales', 'Fitness', 'Additional Service', \n         'Education', 'Weapon', 'Insurance', 'House Construction', 'Animals'] \ndf_prev[\"NAME_GOODS_CATEGORY\"] = df_prev[\"NAME_GOODS_CATEGORY\"].replace(b, 'others')","ceaec33d":"df_prev[\"NAME_GOODS_CATEGORY\"].value_counts()","69cbcd3e":"c = ['AP+ (Cash loan)', 'Channel of corporate sales', 'Car dealer']\ndf_prev[\"CHANNEL_TYPE\"] = df_prev[\"CHANNEL_TYPE\"].replace(c, 'Other_Channel')","4ca2c15d":"df_prev[\"CHANNEL_TYPE\"].value_counts()","c86623f3":"df_prev[\"NAME_SELLER_INDUSTRY\"].value_counts()","3057dba6":"d = ['Auto technology', 'Jewelry', 'MLM partners', 'Tourism']\ndf_prev[\"NAME_SELLER_INDUSTRY\"] = df_prev[\"NAME_SELLER_INDUSTRY\"].replace(d, 'Others')","faaa0845":"e = ['Refusal to name the goal', 'Money for a third person', 'Buying a garage','Gasification \/ water supply',\n     'Hobby','Business development','Buying a holiday home \/ land','Furniture','Car repairs',\n     'Buying a home','Wedding \/ gift \/ holiday']\ndf_prev[\"NAME_CASH_LOAN_PURPOSE\"] = df_prev[\"NAME_CASH_LOAN_PURPOSE\"].replace(e, 'Other_Loan')","5ff6e0de":"df_prev[\"WEEKDAY_APPR_PROCESS_START\"].value_counts()","5b58837e":"df_prev.groupby([\"WEEKDAY_APPR_PROCESS_START\",\"NAME_CONTRACT_STATUS\"]).agg(\"count\")","b9d61145":"weekend = [\"SATURDAY\",\"SUNDAY\"]                              \n\ndf_prev[\"WEEKDAY_APPR_PROCESS_START\"] = df_prev[\"WEEKDAY_APPR_PROCESS_START\"].apply(lambda x : \"WEEKEND\" if x in weekend else \"WEEKDAY\")\n\n# For weekday 58-60% and weekend 67% pazar = 71%","879a3156":"df_prev[\"WEEKDAY_APPR_PROCESS_START\"].value_counts()","2e1e1c45":"df_prev[\"NAME_CASH_LOAN_PURPOSE\"].value_counts()","17c5e732":"df_prev[\"NAME_SELLER_INDUSTRY\"].value_counts()","b84520eb":"df_prev[\"DAYS_FIRST_DRAWING\"].value_counts()","7f1a5b5b":"# 1) FLAG_LAST_APPL_PER_CONTRACT\ndf_prev[\"FLAG_LAST_APPL_PER_CONTRACT\"].value_counts()\n","5d619e94":"# 2) NFLAG_LAST_APPL_IN_DAY\ndf_prev[\"NFLAG_LAST_APPL_IN_DAY\"].value_counts()","5c090403":"# NaN values: 365.243 -> nan\ndf_prev['DAYS_FIRST_DRAWING'].replace(365243, np.nan, inplace= True)\ndf_prev['DAYS_FIRST_DUE'].replace(365243, np.nan, inplace= True)\ndf_prev['DAYS_LAST_DUE_1ST_VERSION'].replace(365243, np.nan, inplace= True)\ndf_prev['DAYS_LAST_DUE'].replace(365243, np.nan, inplace= True)\ndf_prev['DAYS_TERMINATION'].replace(365243, np.nan, inplace= True)","0dedcb62":"#* AMT_APPLICATION: For how much credit did client ask on the previous application.\n#* AMT_CREDIT : Final credit amount on the previous application. This differs from AMT_APPLICATION in a way that the AMT_APPLICATION is the amount for which the client initially applied for, but during our approval process he could have received different amount.\n#* 1) NEW_AMT_CTEDIT_RATE: Received Amount Rate \n\ndf_prev['NEW_APP_CREDIT_RATE'] = df_prev['AMT_APPLICATION'] \/ df_prev['AMT_CREDIT']","f0a9f0b9":"#* AMT_CREDIT\n#* AMT_ANNUITY: Annuity of previous application.\n#* 2) NEW_AMT_PAYMENT_RATE: The ratio of the loan received to the monthly payment.\ndf_prev['NEW_AMT_PAYMENT_RATE'] = df_prev['AMT_CREDIT'] \/ df_prev['AMT_ANNUITY']","c8e9fe60":"# 3) NEW_APP_GOODS_RATE\ndf_prev['NEW_APP_GOODS_RATE'] = df_prev['AMT_APPLICATION'] \/ df_prev['AMT_GOODS_PRICE']","21a272a4":"# 4) NEW_CREDIT_GOODS_RATE\ndf_prev['NEW_CREDIT_GOODS_RATE'] = df_prev['AMT_CREDIT'] \/ df_prev['AMT_GOODS_PRICE']","c26a4557":"# 5) NEW_RETURN_DAY\ndf_prev['NEW_RETURN_DAY'] =  df_prev['DAYS_DECISION'] + df_prev['CNT_PAYMENT'] * 30","399a91d4":"# 6) NEW_DAYS_TERMINATION_DIFF\n# Expected end day - days remaining or how many days are due.\ndf_prev['NEW_DAYS_TERMINATION_DIFF'] = df_prev['DAYS_TERMINATION'] - df_prev['NEW_RETURN_DAY']","3441f1a3":"# 7) NEW_DAYS_DUE_DIFF\n# (According to the application date of the current application, when was the first due date of the previous application?) - \n#(According to the application date of the current application, when should the first term of the previous application be?)\ndf_prev['NEW_DAYS_DUE_DIFF'] =  df_prev['DAYS_LAST_DUE_1ST_VERSION'] - df_prev['DAYS_FIRST_DUE'] ","ca176f18":"# 8) NEW_APP_CREDIT_RATE_RATIO\n#If x <= 1, a client got the desired loan or more.\ndf_prev[\"NEW_APP_CREDIT_RATE_RATIO\"] = df_prev[\"NEW_APP_CREDIT_RATE\"].apply(lambda x: 1 if(x<=1) else 0)","57699f49":"# 9) NEW_RETURN_DAY\n# the day the loan was issued + the number of loan installments * 30 (the number of days of the loan)\ndf_prev['NEW_RETURN_DAY'] =  df_prev['DAYS_DECISION'] + df_prev['CNT_PAYMENT'] * 30","2d410537":"# 10) NEW_CNT_PAYMENT\n# classifying the installment numbers of loans as  0-12 short | 12-60 medium | 60-120 long\ndf_prev[\"NEW_CNT_PAYMENT\"]=pd.cut(x=df_prev['CNT_PAYMENT'], bins=[0, 12, 60,120], labels=[\"K\u0131sa\", \"Orta\", \"Uzun\"])","b3a4a79b":"# 11) NEW_END_DIFF\n# According to the application date of the current application, when was the expected end of the previous application?\n# According to the application date of the current application, when was the last due date for the previous application?\ndf_prev[\"NEW_END_DIFF\"] = df_prev[\"DAYS_TERMINATION\"] - df_prev[\"DAYS_LAST_DUE\"]","5318953e":"def one_hot_encoder(df_prev, nan_as_category = True):\n    original_columns = list(df_prev.columns)\n    categorical_columns = [col for col in df_prev.columns if df_prev[col].dtype == 'object']\n    df_prev = pd.get_dummies(df_prev, columns= categorical_columns, dummy_na= nan_as_category)\n    new_columns = [c for c in df_prev.columns if c not in original_columns]\n    return df_prev, new_columns","6e2570f9":"df_prev, cat_cols = one_hot_encoder(df_prev, nan_as_category= True)","d19e3795":"df_prev.head()","203e69f5":"    num_aggregations = {\n        'AMT_ANNUITY': ['min', 'max', 'mean'],\n        'AMT_APPLICATION': ['min', 'max', 'mean'],\n        'AMT_CREDIT': ['min', 'max', 'mean'],\n        'AMT_DOWN_PAYMENT': ['min', 'max', 'mean'],\n        'AMT_GOODS_PRICE': ['min', 'max', 'mean'],\n        'HOUR_APPR_PROCESS_START': ['min', 'max', 'mean'],\n        'RATE_DOWN_PAYMENT': ['min', 'max', 'mean'],\n        'DAYS_DECISION': ['min', 'max', 'mean'],\n        'CNT_PAYMENT': ['mean', 'sum'],\n        'NEW_APP_CREDIT_RATE': ['min', 'max', 'mean', 'var'],\n        'NEW_AMT_PAYMENT_RATE': ['min', 'max', 'mean'],\n        'NEW_CREDIT_GOODS_RATE': ['min', 'max', 'mean'],\n        'NEW_RETURN_DAY': ['min', 'max', 'mean', 'var'],\n        'NEW_DAYS_TERMINATION_DIFF': ['min', 'max', 'mean'],\n        'NEW_END_DIFF': ['min', 'max', 'mean'],\n        'NEW_RETURN_DAY': ['min', 'max', 'mean'],\n        'NEW_APP_CREDIT_RATE_RATIO': ['min', 'max', 'mean'],\n        'NEW_DAYS_DUE_DIFF': ['min', 'max', 'mean']\n           }","f94224ec":"cat_aggregations = {}\n    \nfor cat in cat_cols:\n    cat_aggregations[cat] = ['mean']","a6f006d7":" prev_agg = df_prev.groupby('SK_ID_CURR').agg({**num_aggregations, **cat_aggregations})","df0bfa47":" prev_agg.columns = pd.Index(['PREV_' + e[0] + \"_\" + e[1].upper() for e in prev_agg.columns.tolist()])","d9d513f6":" prev_agg.columns","2d1bfb5b":"'NAME_CONTRACT_STATUS_Approved' in df_prev","033fc40b":" approved = df_prev[df_prev['NAME_CONTRACT_STATUS_Approved'] == 1]","026873f4":"approved_agg = approved.groupby('SK_ID_CURR').agg(num_aggregations)\napproved_agg.columns = pd.Index(['APR_' + e[0] + \"_\" + e[1].upper() for e in approved_agg.columns.tolist()])\nprev_agg = prev_agg.join(approved_agg, how='left', on='SK_ID_CURR')","7040bcfc":"refused = df_prev[df_prev['NAME_CONTRACT_STATUS_Refused'] == 1]\nrefused_agg = refused.groupby('SK_ID_CURR').agg(num_aggregations)\nrefused_agg.columns = pd.Index(['REF_' + e[0] + \"_\" + e[1].upper() for e in refused_agg.columns.tolist()])\nprev_agg = prev_agg.join(refused_agg, how='left', on='SK_ID_CURR')\ndel refused, refused_agg, approved, approved_agg, df_prev\ngc.collect()","3fe41b06":"* AMT_GOODS_PRICE\t385515 (missing)\t23.1(%)","70fa6402":"# 8. ONE-HOT ENCODING","8fb8a0fe":"* \u2022\tSK_ID_PREV Home Credit kredisi ile ili\u015fkili \u00f6nceki kredilerin ID\u2019si # \n* SK_ID_CURR Kredinin ID numaras\u0131\n* \u2022\tNAME_CONTRACT_TYPE Ba\u015fvurunun s\u00f6zle\u015fme \u00fcr\u00fcn\u00fc t\u00fcr\u00fc (Nakit kredi, t\u00fcketici kredisi [POS], ...)\n* \uf0a7\tAMT_ANNUITY Bir \u00f6nceki ba\u015fvurunun rant\u0131. \u00f6denecek taksit tutar\u0131 olabilir?\n* \uf0a7\tAMT_APPLICATION M\u00fc\u015fteri ne kadar kredi istedi? Ba\u015fvurdu\u011fu kredi miktar\u0131\n* \uf0a7\tAMT_CREDIT Bir \u00f6nceki ba\u015fvurunun en son kredi miktar\u0131, Bankan\u0131n verebilece\u011fi kredi miktar\u0131 yani ki\u015finin bankadaki kredi limiti\n* \uf0a7\tAMT_DOWN_PAYMENT Bir \u00f6nceki ba\u015fvuruda pe\u015finat Verdi\u011fi pe\u015finat miktar\u0131\n* \uf0a7\tAMT_GOODS_PRICE Bir \u00f6nceki ba\u015fvuruda m\u00fc\u015fterinin talep etti\u011fi mal\u0131n fiyat\u0131 (e\u011fer varsa) M\u00fc\u015fterinin almak istedi\u011fi \u00fcr\u00fcn\u00fcn fiyat\u0131 nedir?\n* \u2022\tWEEKDAY_APPR_PROCESS_START M\u00fc\u015fteri, ba\u015fvurusunu haftan\u0131n hangi g\u00fcn\u00fc yapm\u0131\u015ft\u0131r?\n* \u2022\tHOUR_APPR_PROCESS_START M\u00fc\u015fteri, krediye yakla\u015f\u0131k saat ka\u00e7ta ba\u015fvurdu?\n* \u2022\tFLAG_LAST_APPL_PER_CONTRACT Bir \u00f6nceki s\u00f6zle\u015fme i\u00e7in son ba\u015fvuru ise i\u015faretle. Bazen m\u00fc\u015fteri ya da memurumuzun hatas\u0131 ile tek bir s\u00f6zle\u015fme i\u00e7in daha fazla ba\u015fvuru olabilir. ?\n* \u2022\tNFLAG_LAST_APPL_IN_DAY M\u00fc\u015fterinin ba\u015fvurusu, o g\u00fcn yapt\u0131\u011f\u0131 son ba\u015fvuru mu? Bazen m\u00fc\u015fteriler g\u00fcn i\u00e7inde birden fazla ba\u015fvuru yap\u0131yor. Nadiren veritaban\u0131m\u0131zda tek ba\u015fvuru iki kere olup hataya sebebiyet verebiliyor ?\n* \u2022\tNFLAG_MICRO_CASH Mikro finans kredisi (Evet, Hay\u0131r)\n* \u2022\tRATE_DOWN_PAYMENT \u00d6nceki kredi \u00fczerinde normalle\u015ftirilmi\u015f pe\u015finat oran\u0131\n* \u2022\tRATE_INTEREST_PRIMARY \u00d6nceki kredi normalle\u015ftirilmi\u015f faiz oran\u0131\n* \u2022\tRATE_INTEREST_PRIVILEGED \u00d6nceki kredi normalle\u015ftirilmi\u015f faiz oran\u0131 ayr\u0131cal\u0131k m\u0131?\n* \u2022\tNAME_CASH_LOAN_PURPOSE Nakit kredinin amac\u0131\n* \u2022\tNAME_CONTRACT_STATUS Kredinin s\u00f6zle\u015fme durumu (aktif imzal\u0131, ...)\n* \u2022\tDAYS_DECISION Mevcut ba\u015fvuru ile ilgili olarak, \u00f6nceki ba\u015fvuruya ne zaman kara verildi?\n* \u2022\tNAME_PAYMENT_TYPE M\u00fc\u015fterinin kredi i\u00e7in se\u00e7ti\u011fi \u00f6deme y\u00f6ntemi\n* \u2022\tCODE_REJECT_REASON Ba\u015fvuru neden reddedildi?\n* \uf0a7\tNAME_TYPE_SUITE M\u00fc\u015fteri krediye ba\u015fvururken yan\u0131nda kim vard\u0131?\n* \uf0a7\tNAME_CLIENT_TYPE M\u00fc\u015fteri krediye ba\u015fvururken yeni mi yoksa eski m\u00fc\u015fteri miydi?\n* \uf0a7\tNAME_GOODS_CATEGORY M\u00fc\u015fteri krediye ba\u015fvururken ne tarz \u00fcr\u00fcnler i\u00e7in ba\u015fvurdu?\n* \uf0a7\tNAME_PORTFOLIO Ba\u015fvuru ne i\u00e7in? (Nakit, POS, araba, ...)\n* \uf0a7\tNAME_PRODUCT_TYPE Ba\u015fvuru \u00e7apraz sat\u0131\u015f m\u0131 yoksa walk-in mi?\n* \uf0a7\tCHANNEL_TYPE Hangi kanal\u0131 kullanarak m\u00fc\u015fteriyi elde ettik?\n* \u2022\tSELLERPLACE_AREA \u00d6nceki ba\u015fvurunun sat\u0131c\u0131 yeri sat\u0131\u015f alan\u0131\n* \u2022\tNAME_SELLER_INDUSTRY Sat\u0131c\u0131n\u0131n end\u00fcstrisi\n* \u2022\tCNT_PAYMENT Term of previous credit at application of the previous application (\u00e7eviremedim)\n* \u2022\tNAME_YIELD_GROUP Bir \u00f6nceki krediye g\u00f6re grupland\u0131r\u0131lm\u0131\u015f faiz oran\u0131\n* \u2022\tPRODUCT_COMBINATION Kredinin ayr\u0131nt\u0131l\u0131 \u00fcr\u00fcn kombinasyonu\n* \u2022\tDAYS_FIRST_DRAWING Mevcut ba\u015fvurunun ba\u015fvuru tarihine g\u00f6re, bir \u00f6nceki ba\u015fvurunun ilk \u00f6demesi yap\u0131ld\u0131\u011f\u0131 zaman\n* \u2022\tDAYS_FIRST_DUE Mevcut ba\u015fvurunun ba\u015fvuru tarihine g\u00f6re, bir \u00f6nceki ba\u015fvurunun ilk vadesi ne zaman olmal\u0131yd\u0131?\n* \u2022\tDAYS_LAST_DUE_1ST_VERSION Mevcut ba\u015fvurunun ba\u015fvuru tarihine g\u00f6re, bir \u00f6nceki ba\u015fvurunun ilk vadesi ne zamand\u0131?\n* \u2022\tDAYS_LAST_DUE Mevcut ba\u015fvurunun ba\u015fvuru tarihine g\u00f6re, bir \u00f6nceki ba\u015fvurunun son vade tarihi ne zamand\u0131?\n* \u2022\tDAYS_TERMINATION Mevcut ba\u015fvurunun ba\u015fvuru tarihine g\u00f6re, bir \u00f6nceki ba\u015fvurunun beklenen biti\u015fi ne zamand\u0131?\n* \u2022\tNFLAG_INSURED_ON_APPROVAL M\u00fc\u015fteri bir \u00f6nceki ba\u015fvurunda sigorta talep etti mi?","348495a8":"# 9. AGGREGATION","74d79ed6":"* **Aggregation for categorical features**","cc2a9b76":"6) WEEKDAY_APPR_PROCESS_START","7ea26678":"![](http:\/\/)![image.png](attachment:image.png)","41089c63":"# 4. ANALYSIS of CATEGORICAL VARIABLE","bccd8f67":"3) CHANNEL_TYPE","a1f178b3":"* AMT_DOWN_PAYMENT\t895844(missing)\t53.6(%)","800cfabb":"# 7. NEW FEATURES","63357fce":"# **Previous application data**\n\nprevious_application contains information about all previous applications for Home Credit loans of clients who have loans .\n","50a3b170":"1) NAME_TYPE_SUITE  ","7505db40":"> Need to drop","48be0fd0":"1. Checking missing value","cc20345a":"**Aggregation for numeric features**","c384cf07":"# 5. ANALYSIS of NUMERICAL VARIABLE","452de755":"5) NAME_CASH_LOAN_PURPOSE","8c6673f9":"4) NAME_SELLER_INDUSTRY","61825b01":"# 2. UNDERSTANDING THE DATA-SET","0160e6a5":"# 1. IMPORT SOME NECESSARY LIBRARIES","e1381b4c":"2) NAME_GOODS_CATEGORY","bf773c2e":"# 6. SOME IMPROVEMENTS"}}