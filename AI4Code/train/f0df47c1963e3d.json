{"cell_type":{"4314b653":"code","595a6244":"code","398feb88":"code","8269d396":"code","8583d4d2":"code","1782c361":"code","a4889b01":"code","8fdf3ad2":"code","357e2d98":"code","219dcf62":"code","3746a617":"code","19b7e424":"code","1751e48b":"code","98c837ba":"code","473fcb1a":"code","92b63efc":"code","a70208a6":"code","bb252608":"code","a10de940":"code","18eb9312":"code","8538033f":"code","bbc623d0":"markdown","0e2608c2":"markdown","7101351c":"markdown","e9f0a1c5":"markdown","6122b8fe":"markdown","8a8d0b54":"markdown","e87354dd":"markdown","a1eba0af":"markdown","a01ebe67":"markdown","48095e52":"markdown","96ff0323":"markdown","19349a82":"markdown","72fef812":"markdown","e34785a7":"markdown","78c49daf":"markdown","0510943e":"markdown","64018dc1":"markdown","7ade49ca":"markdown","9b85833a":"markdown"},"source":{"4314b653":"#Libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n#Split Data Train and Test\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, cross_val_score, GridSearchCV\n\n#Modelling\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import accuracy_score, classification_report, roc_auc_score, plot_roc_curve","595a6244":"train_data=pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")","398feb88":"train_data.head(10)","8269d396":"fig=plt.figure()\nax=fig.add_subplot(1,1,1)\nax.hist(train_data['quality'],bins=10)\nplt.show()","8583d4d2":"#Complete Data exploration\nf = plt.figure()\nf.set_figwidth(20)\nf.set_figheight(10)\nx=train_data['quality']\nplt.plot(x,train_data['fixed acidity'],'r',label='Fixed acidity')\nplt.plot(x,train_data['free sulfur dioxide'],'pink',label='free sulfur dioxide')\nplt.plot(x,train_data['residual sugar'],'maroon',label='residual sugar')\nplt.plot(x,train_data['total sulfur dioxide'],'lightseagreen',label='total sulfur dioxide')\nplt.plot(x,train_data['volatile acidity'],'b',label='Volatile acidity')\nplt.plot(x,train_data['citric acid'],'g',label='citric acid')\nplt.plot(x,train_data['pH'],'y',label='pH')\nplt.plot(x,train_data['alcohol'],'v',label='alcohol')\nplt.plot(x,train_data['chlorides'],'c',label='chlorides')\nplt.plot(x,train_data['sulphates'],'m',label='sulphates')\nplt.plot(x,train_data['density'],'k',label='density')\nplt.legend(loc=0)\nplt.figure()\nplt.show()","1782c361":"train_data.drop_duplicates(inplace=True)","a4889b01":"train_data.isna().sum()","8fdf3ad2":"Corr=train_data.corr()\nCorr_res=[]\nfor i in range(0,len(train_data.dtypes)):\n  for j in range(0,len(train_data.dtypes)):\n    value=Corr.iloc[i:i+1,j:j+1].values\n    if value>0.8 and value!=1 :\n     Corr_res.append(Corr.columns[i])","357e2d98":"#Standardization\nfrom sklearn.preprocessing import StandardScaler\nstd = StandardScaler()\ntrain_data.iloc[:,:-1]=std.fit_transform(train_data.iloc[:,:-1]) #Standardize data set except dependent value(Quality feature)","219dcf62":"#Assigning dataframe to list of array values\nX=train_data.iloc[:,:-1].values\nY=train_data.iloc[:,-1].values","3746a617":"#Split the data set in the ratio of 80:20 \nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X,Y,test_size = 0.2, random_state = 42)","19b7e424":"error_rate = []\nfor i in range(1, 40):\n\t\n\tknn = KNeighborsClassifier(n_neighbors = i)\n\tknn.fit(x_train, y_train)\n\tpred_i = knn.predict(x_test)\n\terror_rate.append(np.mean(pred_i != y_test))\n\nplt.figure(figsize =(10, 6))\nplt.plot(range(1, 40), error_rate, color ='blue',\n\t\t\t\tlinestyle ='dashed', marker ='o',\n\t\tmarkerfacecolor ='red', markersize = 10)\n\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')\n","1751e48b":"#K=21 has lowest error rate\n#Model Fit\nclassifier2 = KNeighborsClassifier(n_neighbors= 21, metric = 'manhattan', p = 2,weights='uniform')\nclassifier2.fit(x_train,y_train)","98c837ba":"#Predicting the ouput from input data (x_train) and (y_train) \ny_pred1 = classifier2.predict(x_train)\ny_pred2 = classifier2.predict(x_test)","473fcb1a":"from sklearn.metrics import accuracy_score\nprint(\"Accuracy score of train data set:\",accuracy_score(y_train, y_pred1))\nprint(\"Accuracy score of test data set:\",accuracy_score(y_test, y_pred2))","92b63efc":"plt.figure()\nplt.plot(y_test,'o',color = 'blue',label = 'Actual Values')\nplt.plot(y_pred2,color = 'red',label = 'Predicted values')\nplt.legend()","a70208a6":"train_data['quality'].value_counts()","bb252608":"#If quality value is less than or eqaul to 6 then it will be in class 0\n#If quality value is greater than 6  then it will be in class 1\ntrain_data['quality'] = np.where(train_data['quality'] > 6, 1, 0)\ntrain_data['quality'].value_counts()","a10de940":"#Assigning dataframe to list of array values\nX = train_data.drop(['quality'], axis = 1).values\ny = train_data['quality'].values","18eb9312":"#Splitting the data in the proportion of 70:30 and 86:14\nX_train, X_test, y_train, y_test = train_test_split(X,y,\n                                                   stratify = y,\n                                                   test_size = 0.3,\n                                                   random_state = 1111)","8538033f":"k = range(1,50,2)\ntesting_accuracy = []\ntraining_accuracy = []\nscore = 0\n#Fitting the model\nfor i in k:\n    knn = KNeighborsClassifier(n_neighbors = i)\n    pipe_knn = Pipeline([('scale', MinMaxScaler()), ('knn', knn)])\n    pipe_knn.fit(X_train, y_train)\n    \n    y_pred_train = pipe_knn.predict(X_train)\n    training_accuracy.append(accuracy_score(y_train, y_pred_train))\n    \n    y_pred_test = pipe_knn.predict(X_test)\n    acc_score = accuracy_score(y_test,y_pred_test)\n    testing_accuracy.append(acc_score)\n    \n    if score < acc_score:\n        score = acc_score\n        best_k = i\n        \nprint('Best Accuracy Score', score, 'Best K-Score', best_k)","bbc623d0":"<a id = '2.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Loading the dataset<\/strong><\/p>","0e2608c2":"<a id = '3.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Exploratory Data Analysis (EDA)<\/strong><\/p>","7101351c":"<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>\u2022 Remove Dulpicates<\/strong><\/p>\n\n","e9f0a1c5":"<a id = '1.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Importing Libraries<\/strong><\/p>","6122b8fe":"<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>\u2022 Finding Co-relation between data features attributes<\/strong><\/p>\n\n","8a8d0b54":"<a id = '0'><\/a>\n<p style = \"font-size : 35px; color : #34656d ; font-family : 'Comic Sans MS'; text-align : center; background-color : #f9b208; border-radius: 5px 5px;\"><strong>Table of Contents<\/strong><\/p> \n\n* [Imporing Libraries](#1.0)\n* [Loading the data](#2.0)\n* [Exploratory Data Analysis (EDA)](#3.0)  \n* [Data Preprocessing](#4.0) \n* [Data Modeling](#5.0) \n* [Accuracy Score](#6.0) \n* [Visualization](#7.0) ","e87354dd":"<p style = \"font-size : 27px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>Quality range:0-10<\/strong><\/p>\n<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>Dividing Quality range into two parts,<\/strong><\/p>\n<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>1.  Good quality:7-10<\/strong><\/p>\n<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>2.  Bad  quality:0-6<\/strong><\/p>\n\n\n\n\n\n","a1eba0af":"<a id = '5.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Data Modeling<\/strong><\/p>\n\n","a01ebe67":"<a id = '6.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Accuracy Score<\/strong><\/p>\n\n","48095e52":"<img style=\"float: center;  border:5px solid #ff0000; width:100%\" src = https:\/\/user-images.githubusercontent.com\/47216809\/86511259-ef33e380-be14-11ea-8ea3-3a3cc4ff5ce8.jpg >","96ff0323":"<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>Splitting the data<\/strong><\/p>\n","19349a82":"<a id = '7.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Visualization<\/strong><\/p>\n\n","72fef812":"<a id = '4.0'><\/a>\n<p style = \"font-size : 35px; color :#000080 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #808080; border-radius: 5px 5px;\"><strong>Data Preprocessing<\/strong><\/p>","e34785a7":"![giphy.gif](https:\/\/media.giphy.com\/media\/ng6NcNAvohN6M\/giphy.gif)","78c49daf":"<p style = \"font-size : 27px; color : #D35400 ; font-family : 'Comic Sans MS';  \"><strong>K-Nearest Neighbors<\/strong><\/p>\n\n","0510943e":"<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>\u2022 Attempt through Classification<\/strong><\/p>\n\n\n ","64018dc1":"<p style = \"font-size : 25px; color : #800000 ; font-family : 'Comic Sans MS';  \"><strong>\u2022 Finding null values<\/strong><\/p>\n\n","7ade49ca":"![giphy.gif](https:\/\/media.giphy.com\/media\/2eK59YqprmQB0GtKHw\/giphy.gif)","9b85833a":"<p style = \"font-size : 50px; color : #000000 ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ff0000; border-radius: 5px 5px;\"><strong>\ud83c\udf77 Red Wine Quality Analysis<\/strong><\/p>\n\n\n\n<p style = \"font-size : 25px; color : #000000  ; font-family : 'Comic Sans MS';  \"><strong> Context:-<\/strong><\/p>\n<p style = \"font-size : 22px; color : #000000  ; font-family : 'Comic Sans MS';  \"><strong> The two datasets are related to red and white variants of the Portuguese \"Vinho Verde\" wine. For more details, consult the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).<\/strong><\/p>\n<p style = \"font-size : 22px; color : #000000  ; font-family : 'Comic Sans MS';  \"><strong>These datasets can be viewed as classification or regression tasks. The classes are ordered and not balanced (e.g. there are much more normal wines than excellent or poor ones).\n <\/strong><\/p>\n\n\n"}}