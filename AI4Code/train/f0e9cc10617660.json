{"cell_type":{"5da5d04d":"code","9d98837a":"code","a30a21a7":"code","a7105ae8":"code","519a6246":"code","377c5282":"code","8a09502a":"code","74d600d4":"code","7de3be84":"code","8a56ac60":"code","f5610509":"code","11eedc1e":"code","0fc7fb95":"code","64734237":"code","15652532":"code","54d3e6e7":"code","94beb845":"code","59d32749":"code","c7d6d09a":"code","50885d43":"code","e25dbffa":"code","8ef4e25c":"code","694929de":"code","fc9ebe70":"code","ecf01688":"code","6d4eeb14":"code","ea443d1c":"code","7aa5f0ee":"code","c5a326fb":"code","13de8778":"code","2fc9daaa":"code","808097b5":"code","b73bd88d":"code","00551333":"code","5402b794":"code","d50dce5e":"code","37c782e5":"markdown","6951707d":"markdown","846bb120":"markdown","17a9decc":"markdown","6d8934fe":"markdown","177237d4":"markdown"},"source":{"5da5d04d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_style ('whitegrid')\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9d98837a":"#load data\ndata = pd.read_csv('..\/input\/WA_Fn-UseC_-Telco-Customer-Churn.csv')","a30a21a7":"#check the head of the data\ndata.head()","a7105ae8":"data.info()","519a6246":"#Drop customerID - not needed\ndata = data.drop(columns = 'customerID')\ndata.head()","377c5282":"#Convert TotalCharges to a numeric datatype\ndata['TotalCharges'] = pd.to_numeric(data['TotalCharges'], errors = 'coerce')\ntype(data['TotalCharges'][0])","8a09502a":"#Check for missing values in each column\nmissing_values_count = data.isnull().sum()\nmissing_values_count","74d600d4":"#TotalCharges is the only column with missing values\n#fill missing values with the mean TotalCharges\ndata['TotalCharges'] = data['TotalCharges'].fillna(data['TotalCharges'].mean())","7de3be84":"#Let's check the missing values again to confirm that TotalCharges has no missing values\nmissing_values_count_2 = data.isnull().sum()\nmissing_values_count_2","8a56ac60":"#Convert SeniorCitizen from integer to string\ndata['SeniorCitizen'] = data['SeniorCitizen'].apply(lambda x: 'Yes' if x==1 else 'No')\ndata.head()","f5610509":"#Let's check the outcome variable Churn\nsns.countplot(x='Churn', data = data)","11eedc1e":"sns.pairplot(data = data, hue = 'Churn')","0fc7fb95":"sns.heatmap(data.corr(),cmap = 'viridis', annot=True)","64734237":"plt.subplots(figsize=(12,4))\nplt.subplot(1,3,1)\nsns.boxplot(x='MonthlyCharges', y='Churn', data=data)\nplt.subplot(1,3,2)\nsns.boxplot(x='TotalCharges', y='Churn', data=data)\nplt.subplot(1,3,3)\nsns.boxplot(x='tenure', y='Churn', data=data)\nplt.tight_layout()","15652532":"sns.countplot(x='Dependents', data=data, hue='Churn')","54d3e6e7":"sns.countplot(x='Contract', data=data, hue='Churn')\n#insight - month-to-month contract customers have a higher churn rate","94beb845":"sns.countplot(x='Partner', data=data, hue='Churn')","59d32749":"sns.countplot(x='InternetService', data=data, hue='Churn')\n#Insight - customers with fiber optic service tend to have a higher churn rate","c7d6d09a":"sns.countplot(x='TechSupport', data=data, hue='Churn')\n#Insght - Customers without tech support tend to have a higher churn rate","50885d43":"sns.countplot(x='PaperlessBilling', data=data, hue='Churn')","e25dbffa":"data.sample(5)","8ef4e25c":"columns = list(data.columns)","694929de":"numeric_cols = ['tenure', 'TotalCharges', 'MonthlyCharges']\nnon_numeric_cols = list(set(columns) - set(numeric_cols))\nnon_numeric_cols","fc9ebe70":"non_numeric_data = pd.get_dummies(data[non_numeric_cols], drop_first=True)\nnon_numeric_data.sample(5)","ecf01688":"from sklearn.preprocessing import scale\nnumeric_data = pd.DataFrame(scale(data[numeric_cols]), index=data.index, columns=numeric_cols)\nnumeric_data.head()","6d4eeb14":"prepared_data = pd.concat([numeric_data, non_numeric_data], axis=1)\nprepared_data.head()","ea443d1c":"from sklearn.model_selection import train_test_split","7aa5f0ee":"X_train, X_test, y_train, y_test = train_test_split(prepared_data.drop(['TotalCharges', 'Churn_Yes'], axis=1),prepared_data['Churn_Yes'],test_size=0.30, random_state=42)","c5a326fb":"from sklearn.linear_model import LogisticRegression","13de8778":"logmodel=LogisticRegression()","2fc9daaa":"logmodel.fit(X_train,y_train)","808097b5":"predictions = logmodel.predict(X_test)","b73bd88d":"#Model Evaluation\nfrom sklearn.metrics import classification_report,confusion_matrix,accuracy_score","00551333":"print(classification_report(y_test,predictions))","5402b794":"print(confusion_matrix(y_test,predictions))","d50dce5e":"accuracy_score(y_test, predictions)","37c782e5":"Insights from the above graph\n#- TotalCharges is strongly correlated with tenure, which makes sense because you pay more with time\n#- It would be good to drop TotalCharges during modeling since it is strongly dependent on tenure and MonthlyCharges","6951707d":"**Modeling**","846bb120":"Insights from the above graph\n#- The customers with longer tenures general tend to stay","17a9decc":"**Data Preprocessing and Exploratory Data Analysis (EDA)**","6d8934fe":"#Insights\n#- Customers with higher monthly charges have a higher churn rate\n#- Customers with longer tenure have lower churn rate","177237d4":"**Feature Engineering**\n**- Scaling of numeric variables**\n**- Getting dummies for categorical variables**"}}