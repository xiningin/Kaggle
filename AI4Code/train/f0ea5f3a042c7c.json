{"cell_type":{"b9809536":"code","6e4b8ec4":"code","0b78440a":"code","0a1982a5":"code","62159284":"code","e9dd29d4":"code","8c2d6002":"code","57e6f9fc":"code","3c29a5e7":"code","90f55a90":"code","42882397":"code","14f48717":"code","46b31f0b":"code","9691b7a2":"code","4855f737":"code","deaa033a":"code","5e5456f9":"code","db8bc5f5":"code","9a1c83cd":"code","27115f68":"code","b3a16a29":"code","938f6384":"code","939526d5":"code","c473d000":"code","4dd8d658":"code","af9d7c59":"code","cc2e756b":"code","5e647284":"code","028d5210":"code","dba57a67":"code","9e766fde":"markdown","6958d007":"markdown","25175553":"markdown","b8bbc158":"markdown","cfbcf81f":"markdown","573e192b":"markdown","068c610b":"markdown","8be5721c":"markdown"},"source":{"b9809536":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  #  visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n# Any results you write to the current directory are saved as output.","6e4b8ec4":"data = pd.read_csv(\"..\/input\/athlete_events.csv\")\ndata2 = pd.read_csv(\"..\/input\/noc_regions.csv\")","0b78440a":"data.info()","0a1982a5":"data.corr()","62159284":"data.describe()","e9dd29d4":"#correlation map\nf,ax = plt.subplots(figsize = (15,15))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= \".1f\",ax=ax)\nplt.show()","8c2d6002":"data.columns","57e6f9fc":"data[\"Name\"]","3c29a5e7":"print(data[\"Team\"].value_counts(dropna=False))","90f55a90":"data.head(10)","42882397":"data.tail(10)","14f48717":"print(\"Male:\",len(data[data.Sex == \"M\"]))\nprint(\"Female:\",len(data[data.Sex == \"F\"]))","46b31f0b":"# bar\ny = np.array([len(data[data.Sex == \"M\"]),len(data[data.Sex == \"F\"])])\nx = [\"Male\",\"Female\"]\n\nplt.bar(x,y)\nplt.xlabel(\"Sex\")\nplt.ylabel(\"Frequency\")\nplt.show()","9691b7a2":"#Line Plot\ndata.Height.plot(kind = \"line\", color = \"blue\", label = \"Height\", linewidth = 0.5, alpha = 0.5,grid = True,linestyle = \"-.\")\ndata.Weight.plot(kind = \"line\", color = \"red\" , label = \"Weight\", linewidth = 0.5, alpha = 0.5,grid = True,linestyle = \"-\" )\nplt.legend(loc = \"upper left\")\nplt.xlabel(\"index\")\nplt.ylabel(\"value\")\nplt.title(\"Weight-Height for athletes\")\nplt.show()\n\n","4855f737":"#Scatter Plot\ndata.plot(kind = \"scatter\", x = \"Weight\", y = \"Height\", alpha = 0.1, color = \"blue\")\nplt.xlabel(\"Weight\")\nplt.ylabel(\"Height\")\nplt.title(\"Weight-Height Scatter Plot\")","deaa033a":"#Histogram\ndata.Age.plot(kind = \"hist\",bins = 100, figsize =(12,12) )\nplt.xlabel(\"Age\")\nplt.ylabel(\"Frequency\")\nplt.show()","5e5456f9":"data.Age.plot(kind = \"hist\",bins = 50, figsize =(12,12) )\nplt.clf()","db8bc5f5":"dictionary = {\"John_Aalberg\" : \"UnitedStates\", \"Antti_Sami_Aalto\" : \"Finland\"}\nprint(dictionary.keys())\nprint(dictionary.values())","9a1c83cd":"dictionary[\"John_Aalberg\"] = \"USA\"\nprint(dictionary)\ndictionary[\"Pepijn_Aardewi_jn\"] = \"Netherlands\"\nprint(dictionary)\ndel dictionary[\"John_Aalberg\"]\nprint(dictionary)\nprint(\"John_Aalberg\" in dictionary) \ndictionary.clear()\nprint(dictionary)","27115f68":"series = data[\"Weight\"]\nprint(type(series))\ndata_frame = data[[\"Weight\"]]\nprint(type(data_frame))","b3a16a29":"data.loc[:10, \"Name\"]  #\"pandas.core.series.Series\"","938f6384":"data.loc[:10, [\"Name\"]] #\"pandas.core.frame.DataFrame\"","939526d5":"data.loc[0:100:10, \"Name\":\"Team\"]","c473d000":"data.loc[100:0:-10, \"Name\":\"Team\"]","4dd8d658":"data[\"Qualification\"] = [\"Nice\" if each == \"Gold\" else \"Bad\" for each in data.Medal]\ndata.head()","af9d7c59":"# example\npi = 3.14\nprint(pi > 3)\nprint(pi!=3.14)\n# Boolean operators\nprint(True & False)\nprint(True or False)","cc2e756b":"x = data[\"Age\"] > 80\ndata[x]","5e647284":"data[(data[\"Age\"]>80) & (data[\"Year\"]<1935)]","028d5210":"i = 0\nwhile i != 20 :\n    print('i is: ',i)\n    i +=4 \nprint(i,' is equal to 20')","dba57a67":"lis = [33,55,11,22,66]\nfor each in lis:\n    print('each is: ',each)\nprint('')\n\n# Enumerate index and value of list\n# index : value = 0:33, 1:55, 2:11, 3:22, 4:66\nfor index, value in enumerate(lis):\n    print(index,\" : \",value)\nprint('')   \n\n\n# For pandas we can achieve index and value\nfor index,value in data[['Year']][0:1].iterrows():\n    print(index,\" : \",value)","9e766fde":"**PLOTS**","6958d007":"**TAKING INFORMATION FROM DATA**","25175553":"**SEX**","b8bbc158":"**IMPORTING DATA**","cfbcf81f":"**CONTROLLING DATA WITH HEAD AND TAIL CODES**","573e192b":"DICTIONARY and PANDAS EXAMPLES","068c610b":"**AGE**","8be5721c":"This kernel is the very first step for my data science studies.\nI tried to analyze and visualize the daha which i found in dataset named  \"120 years of Olympic history: athletes and results\".\nI will upgrade this kernel with my progress in Udemy Class from DATAI Team"}}