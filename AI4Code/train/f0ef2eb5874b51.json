{"cell_type":{"b7fc137d":"code","7ee82411":"code","be96dbdd":"code","b5dc662d":"code","8e29ca21":"code","03ef7ffc":"code","05bb83d5":"code","b06155e1":"code","52c6fc50":"code","066e46b8":"code","3d05aaac":"code","ebf9beae":"code","0fa2d8ad":"code","01415e76":"markdown","9a73cb96":"markdown","5d897988":"markdown"},"source":{"b7fc137d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7ee82411":"flipkart_data = pd.read_csv('\/kaggle\/input\/flipkart-mobiles-dataset\/Flipkart_mobile_brands_scraped_data.csv')","be96dbdd":"flipkart_data.head(10)","b5dc662d":"flipkart_data.info()","8e29ca21":"flipkart_data.describe()","03ef7ffc":"flipkart_data['Brand'].groupby(flipkart_data['Brand']).count().sort_values(ascending = False)","05bb83d5":"import matplotlib.pyplot as plt\nx = []\ny = []\nfor attribut in flipkart_data:\n  x.append(attribut[0])\n  y.append(attribut[4])\n\nplt.bar(x,y, width = 0.72, label = \"Price\")\nplt.xlabel('Brand')\nplt.ylabel('Selling Price')\nplt.title('Price Comparison')\nplt.legend()\nplt.show()","b06155e1":"most_exp = flipkart_data[['Brand','Selling Price']] [flipkart_data['Selling Price'] == flipkart_data['Selling Price'].max()]\nprint(most_exp)","52c6fc50":"mobile = flipkart_data.groupby('Brand')\nmost_exp = mobile['Model','Selling Price'].max()\nmost_exp","066e46b8":"flipkart_data['Brand'].value_counts()","3d05aaac":"import seaborn as sns\n\nsns.set_style('whitegrid')\nsns.countplot(x='Brand', data = flipkart_data,palette='RdBu_r')","ebf9beae":"sns.displot(flipkart_data['Selling Price'].dropna(), kde=False,color='darkred')","0fa2d8ad":"sns.displot(flipkart_data['Brand'].dropna(), kde=False,color='darkblue')","01415e76":"**Price Comparison in brands**","9a73cb96":"Total no. of mobiles per brand","5d897988":"**Most Expensive Product**"}}