{"cell_type":{"de182b3b":"code","4b7da614":"code","fcd21be0":"code","55af4b3e":"code","92e03202":"code","da2bcfff":"code","d989316b":"code","a215402a":"code","26a8610b":"code","1faf4b3a":"code","87bb987f":"code","0facdecd":"code","1b63df10":"code","a12d0666":"code","15e83e9c":"code","99730717":"code","72bad1cc":"code","d86189ea":"code","8ec6d0cc":"code","3d781fd3":"code","86ca696a":"code","1422efa6":"code","ba2a79fd":"code","17d76532":"code","52cec6d8":"code","9295c11f":"code","c544689f":"code","ceca3e4f":"markdown","4041af33":"markdown","94f71ffe":"markdown","0e9fad9c":"markdown","11ef85ef":"markdown","c04fb420":"markdown","6c5788d6":"markdown","f1a9458b":"markdown","4623ad26":"markdown","a318850e":"markdown","12b22e52":"markdown","63a7091b":"markdown","937c5a83":"markdown","127e49bf":"markdown","39592990":"markdown","8f690172":"markdown","adbb0347":"markdown","fe3c5cc5":"markdown","2b6925c8":"markdown"},"source":{"de182b3b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4b7da614":"import os\n# to interact with the operating system \n\nimport numpy as np\n\nimport pandas as pd\n# data structure tool for data manipulation and analysis\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom matplotlib.pyplot import figure\n# for data visualization\n\nimport warnings\nwarnings.filterwarnings('ignore')","fcd21be0":"df = pd.read_csv(\"..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\")","55af4b3e":"# data exploration\ndf.head()","92e03202":"# data description\ndf.info()","da2bcfff":"# explore the date range in which data were logeed\n# we need to convert created date from object to date fromat\ndf['date'] = pd.to_datetime(df['date'])\n# get the date range\nprint (\"The dataset contains vaccination information since :\" , df['date'].min(),\"to :\" , df['date'].max()  ) ","d989316b":"# What is the total number of countries that exist in the dataset?\nprint ( \"There are \" , df['country'].nunique() , \"different countries in the dataset\")\nprint ( \"There are \" , df['iso_code'].nunique() , \"different iso_code in the dataset\")","a215402a":"print (\"since we have in the datasets countries with missing iso_code, country column will be used for data classification and grouping\") ","26a8610b":"# create new dataframe contains country and vaccine type\ndf_vaccine_type = df[[\"country\",\"vaccines\"]]\n\n# How many missing values in country column?\nprint (\" The dataset contains: \" , df_vaccine_type['country'].isnull().sum() , \"missing country values\" )\nprint (\" The dataset contains: \" , df_vaccine_type['vaccines'].isnull().sum() , \"missing vaccines values\" )","1faf4b3a":"# disply the types of vaccines used\ndf_vaccine_type[\"vaccines\"].value_counts().to_frame()","87bb987f":"# grouping results\ndf_group = df_vaccine_type.groupby(['country', 'vaccines']).count().reset_index()\npd.set_option(\"display.max_rows\", None, \"display.max_columns\", None)\ndf_group","0facdecd":"Multi_vaccine_country = df_group[df_group.vaccines.str.contains(\",\")].reset_index(drop= True)\nMulti_vaccine_country","1b63df10":"Single_vaccine_country = df_group.drop(df_group[df_group.vaccines.str.contains(\",\")].index).reset_index(drop = True)\nSingle_vaccine_country","a12d0666":"# create new dataframe contains country and vaccine type\ntop_used_vaccines = df[[\"total_vaccinations\",\"vaccines\"]]\n\n# How many missing values in country column?\nprint (\" The dataset contains: \" , top_used_vaccines['total_vaccinations'].isnull().sum() , \"missing country values\" )","15e83e9c":"# simply drop whole row with NaN \ntop_used_vaccines.dropna( axis=0, inplace=True)\n\n# reset index, because we droped two rows\ntop_used_vaccines.reset_index(drop=True, inplace=True)\n\n# group by vaccine types\ntop_used_vaccines = top_used_vaccines.groupby(['vaccines'])['total_vaccinations'].sum().reset_index()\n\n# sort the total people vaccinated by a certain vaccine type\ntop_used_vaccines_sorted = top_used_vaccines.sort_values(by = 'total_vaccinations', ascending=False)\n\n# reset index\ntop_used_vaccines_sorted.set_index('vaccines', inplace=True)\n\n# add percentage column\ntop_used_vaccines_sorted['percent'] = (top_used_vaccines_sorted['total_vaccinations'] \/ top_used_vaccines_sorted['total_vaccinations'].sum()) * 100\n\n# top 5 vaccines used\ntop_vaccines = top_used_vaccines_sorted.nlargest(5, columns=['total_vaccinations']).reset_index()\ntop_vaccines\n#vac_people_sorted[vac_people_sorted['people_vaccinated']==vac_people_sorted['people_vaccinated'].max()]","99730717":"\nsns.set_style(\"ticks\")\nsns.set_context(\"poster\")\nsns.barplot(x= 'vaccines', y= 'percent', data= top_vaccines)\nsns.set(rc={'figure.figsize':(8,8)})\nplt.yticks(fontsize = 15)\nplt.xticks(fontsize = 15 , rotation = 90)\nplt.xlabel('Vaccines' ,fontsize = 15)\nplt.ylabel('Percent' ,fontsize = 15)\nplt.title('Top Used Vaccine Types', fontsize = 20 )","72bad1cc":"# We will anaylze seprately the number of people vaccinated and number of people fully vaccinated people \ndf_fltrd = df[[\"country\" , \"people_vaccinated\" , \"people_fully_vaccinated\" , \"total_vaccinations\"]]\n# data description\ndf_fltrd.info()","d86189ea":"# How many missing values in country column?\nprint (\" The dataset contains: \" , df_fltrd[\"people_vaccinated\"].isnull().sum() , \"missing values for people_vaccinated\" )\nprint (\" The dataset contains: \" , df_fltrd[\"people_fully_vaccinated\"].isnull().sum() , \"missing values for people_fully_vaccinated\" )\nprint (\" The dataset contains: \" , df_fltrd[\"total_vaccinations\"].isnull().sum() , \"missing values for total vaccinations\" )\n","8ec6d0cc":"# simply drop whole row with NaN \ndf_fltrd.dropna( axis=0, inplace=True)\n\n# reset index, because we droped two rows\ndf_fltrd.reset_index(drop=True, inplace=True)\n\n# group by vaccine types\ndf_1 = df_fltrd.groupby(['country'])['people_vaccinated'].sum().reset_index()\n\n# sort the total people vaccinated by a certain vaccine type\ntop_country_sorted = df_1.sort_values(by = 'people_vaccinated', ascending=False)\ntop_country_sorted.reset_index(drop = True)\n# reset index\n#top_country_sorted.set_index('country', inplace=True)\n#top_country_sorted\n# top 5 vaccines used\ntop_five_countries = top_country_sorted.nlargest(5, columns=['people_vaccinated']).reset_index(drop = True)\ntop_five_countries","3d781fd3":"sns.set_style(\"ticks\")\nsns.set_context(\"poster\")\nsns.barplot(x= 'country', y= 'people_vaccinated', data= top_five_countries)\nsns.set(rc={'figure.figsize':(8,8)})\nplt.yticks(fontsize = 15)\nplt.xticks(fontsize = 15 , rotation = 90)\nplt.xlabel('country' ,fontsize = 15)\nplt.ylabel('Number of Prtially Vaccinated People' ,fontsize = 15)\n","86ca696a":"# grouping\ndf_2 = df_fltrd.groupby(['country'])['people_fully_vaccinated'].sum().reset_index()\n\n# sort the total people vaccinated by a certain vaccine type\ntop_fully_country_sorted = df_2.sort_values(by = 'people_fully_vaccinated', ascending=False)\ntop_fully_country_sorted.reset_index(drop = True)\n\n# reset index\n#top_country_sorted.set_index('country', inplace=True)\ntop_five_fully_countries = top_fully_country_sorted.nlargest(5, columns=['people_fully_vaccinated']).reset_index(drop = True)\ntop_five_fully_countries","1422efa6":"sns.set_style(\"ticks\")\nsns.set_context(\"poster\")\nsns.barplot(x= 'country', y= 'people_fully_vaccinated', data= top_five_fully_countries)\nsns.set(rc={'figure.figsize':(8,8)})\nplt.yticks(fontsize = 15)\nplt.xticks(fontsize = 15 , rotation = 90)\nplt.xlabel('country' ,fontsize = 15)\nplt.ylabel('Number of Fullly Vaccinated People' ,fontsize = 15)","ba2a79fd":"# grouping\ndf_1 = df_fltrd.groupby(['country'])['total_vaccinations'].sum().reset_index()\n\n# sort the total people vaccinated by a certain vaccine type\ntop_total_country_sorted = df_1.sort_values(by = 'total_vaccinations', ascending=False)\ntop_total_country_sorted.reset_index(drop = True)\n# reset index\n#top_country_sorted.set_index('country', inplace=True)\n\n# top 5 vaccines used\ntop_five_total_countries = top_total_country_sorted.nlargest(5, columns=['total_vaccinations']).reset_index(drop = True)\ntop_five_total_countries","17d76532":"sns.set_style(\"ticks\")\nsns.set_context(\"poster\")\nsns.barplot(x= 'country', y= 'total_vaccinations', data= top_five_total_countries)\nsns.set(rc={'figure.figsize':(8,8)})\nplt.yticks(fontsize = 15)\nplt.xticks(fontsize = 15 , rotation = 90)\nplt.xlabel('country' ,fontsize = 15)\nplt.ylabel('Total Vaccinations' ,fontsize = 15)","52cec6d8":"# create new dataframe contains country and vaccine type\ndaily_vaccin = df[[\"country\",\"daily_vaccinations_per_million\"]]\nprint (\" The dataset contains: \" , daily_vaccin [\"daily_vaccinations_per_million\"].isnull().sum() , \"missing values\" )","9295c11f":"# simply drop whole row with NaN \ndaily_vaccin.dropna( axis=0, inplace=True)\n\n# reset index, because we droped two rows\ndaily_vaccin .reset_index(drop=True, inplace=True) ","c544689f":"daily_vaccin = daily_vaccin.groupby(['country'])['daily_vaccinations_per_million'].sum().reset_index()\ndaily_vaccin_sorted = daily_vaccin.sort_values(by = 'daily_vaccinations_per_million', ascending=False)\ndaily_vaccin_sorted.set_index('country', inplace=True)\ndaily_vaccin_sorted[daily_vaccin_sorted['daily_vaccinations_per_million']==daily_vaccin_sorted['daily_vaccinations_per_million'].max()]\nprint (\"County that has vaccinated a larger percent from its population is  :\" ,daily_vaccin_sorted['daily_vaccinations_per_million'].head(1) , \"vaccinations\") ","ceca3e4f":"## 6. Countries in Which More People Were Vaccinated  ","4041af33":"#### It can be observed that some countries tended to use more than one vaccine type, so we will split the countries list into two lists.","94f71ffe":"## 3. Imports \n","0e9fad9c":"* The Dataset contains Covid-19 world vaccination progress from 2020-12-13 to 2021-02-01 for **67 countries**. In terms of vaccines used, there were **40 countries** tended to use single vaccin type, where **27 countries used two or more vaccines**. However, **Moderna and Pfizer\/BioNTech** together were the most used vaccines with **558100601** recorded vaccinations accounted nearly **49%** of the total given vaccinations.\n\n* The data analysis shows that **United States** is the country where more people were vaccinated regradless the stage of vaccination (partially or fully vaccined). While, Israel was the country in which more people were vaccinated in terms of percent from entire population.","11ef85ef":"## 2.Problem Statment\n\nTrack COVID-19 vaccination in the World, answer instantly to your questions:\n\nWhich country is using what vaccine?\n\nIn which country the vaccination programme is more advanced?\n\nWhere are vaccinated more people per day? But in terms of percent from entire population ?","c04fb420":" ### 6.2 Top Countries in Which People Were Fully Vaccinated","6c5788d6":"## 4. Data Exploration ","f1a9458b":" ### 5.1 Countries in Which Mutli-Vaccine Types were Used ","4623ad26":"<div class=\"alert alert-block alert-info\" style=\"margin-top: 20px\">\n<ol>\n<li><a href=\"#i\">Introduction<\/a><\/li>\n<li><a href=\"#i\">Problem Statement<\/a><\/li> \n    <li><a href=\"#i\">Imports<\/a><\/li> \n    <li><a href=\"#i\">Data Exploration <\/a><\/li> \n    <li><a href=\"#i\">Vaccine Types Used Per Country<\/a><\/li> \n    <li><a href=\"#i\">Countries in Which More People Were Vaccinated<\/a><\/li>\n    <li><a href=\"#i\">Daily Vaccination vs Population<\/a><\/li>\n    <li><a href=\"#i\">Conclusion<\/a><\/li>\n    ","a318850e":" ### 6.1 Top Countries in Which People Were Partially Vaccinated","12b22e52":" ### 5.2 Countries in Which Single-Vaccine Type was Used ","63a7091b":"## 1. Introduction \n\nContext\nData is collected daily from Our World in Data GitHub repository for covid-19, merged and uploaded.\n\nContent\nThe data contains the following information:\n\n**Country **- this is the country for which the vaccination information is provided;\nCountry ISO Code - ISO code for the country;\n**Date **- date for the data entry; for some of the dates we have only the daily vaccinations, for others, only the (cumulative) total;\nTotal number of vaccinations - this is the absolute number of total immunizations in the country;\nTotal number of people vaccinated - a person, depending on the immunization scheme, will receive one or more (typically 2) vaccines; at a certain moment, the number of vaccination might be larger than the number of people;\nTotal number of people fully vaccinated - this is the number of people that received the entire set of immunization according to the immunization scheme (typically 2); at a certain moment in time, there might be a certain number of people that received one vaccine and another number (smaller) of people that received all vaccines in the scheme;\nDaily vaccinations (raw) - for a certain data entry, the number of vaccination for that date\/country;\nDaily vaccinations - for a certain data entry, the number of vaccination for that date\/country;\nTotal vaccinations per hundred - ratio (in percent) between vaccination number and total population up to the date in the country;\nTotal number of people vaccinated per hundred - ratio (in percent) between population immunized and total population up to the date in the country;\nTotal number of people fully vaccinated per hundred - ratio (in percent) between population fully immunized and total population up to the date in the country;\nNumber of vaccinations per day - number of daily vaccination for that day and country;\nDaily vaccinations per million - ratio (in ppm) between vaccination number and total population for the current date in the country;\nVaccines used in the country - total number of vaccines used in the country (up to date);\nSource name - source of the information (national authority, international organization, local organization etc.);\nSource website - website of the source of information;","937c5a83":"### Vaccine Types Used for each Country","127e49bf":"## 5. Vaccine Types Used Per Country\n","39592990":"#### Let's explore the most used vaccines","8f690172":" ### 6.3 Top Countries with High Total Vaccinations","adbb0347":"![](http:\/\/)","fe3c5cc5":"## 7. Daily Vaccinations vs Population","2b6925c8":"## 8. Conclusion "}}