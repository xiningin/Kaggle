{"cell_type":{"eaa4630c":"code","5f862fe6":"code","0b14f1ad":"code","cbd23bd8":"code","b65104e7":"code","b6b2b15a":"code","f6f7cd3c":"code","143edea4":"code","80e937ff":"code","6c621b23":"code","db724092":"code","fbebd266":"code","7f8cc912":"code","42319042":"code","da614653":"code","75293274":"code","187e0efe":"code","048eca54":"code","d70d1713":"code","2bfef71f":"code","1bfb208e":"code","255415a6":"code","d9038476":"code","290a7d43":"code","a0d1d6aa":"markdown","7f9e6282":"markdown","3e492069":"markdown","1596132b":"markdown","4ec0c6d6":"markdown","9785944f":"markdown"},"source":{"eaa4630c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5f862fe6":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","0b14f1ad":"items= pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv')\nitem_categories=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nsales_train=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')                            \nshops=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/shops.csv')\ntest=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv')","cbd23bd8":"items.head()","b65104e7":"sales_train.head()","b6b2b15a":"item_categories.head()","f6f7cd3c":"shops.head()","143edea4":"df_train=sales_train.merge(items, on='item_id')\ndf_train=df_train.merge(item_categories,on='item_category_id')\ndf_train=df_train.merge(shops,on='shop_id')\n","80e937ff":"df_train.head()","6c621b23":"df_train.shape","db724092":"df_train.describe()","fbebd266":"print(\"The duplicated data is: \",df_train.duplicated().sum())\nprint(\"The duplicated data is: \",df_train.isnull().sum())","7f8cc912":"df_train.drop_duplicates(inplace=True)","42319042":"df_train.head()","da614653":"df_train.info()","75293274":"#change the time format\ndf_train.date=pd.to_datetime(df_train.date)","187e0efe":"df_train[df_train['date_block_num']==0]","048eca54":"gp=df_train.groupby('shop_name')['item_cnt_day'].count().reset_index(name='count').sort_values(['count'], ascending=False).head(5)\nsns.barplot(data=gp,x='shop_name',y='count')\n_=plt.title('The top 5 of places sold the product')\n_=plt.xlabel('Shop name')\n_=plt.xticks(rotation=90)\n\nplt.show()","d70d1713":"sns.barplot(data=df_train,x='date_block_num',y='item_cnt_day')\n_=plt.title('The count of sold produce according to the month number')\n_=plt.xlabel('month number')\n_=plt.xticks(rotation=90)\n\nplt.show()","2bfef71f":"sns.lineplot(x='date',y=\"item_cnt_day\",data=df_train)\nplt.xlabel(\"The date\")\nplt.ylabel(\"item count day\")\nplt.xticks(rotation=90)\n\nplt.title(\"The realtion between the date and the item count day\")","1bfb208e":"sns.boxplot(x='item_price',data=df_train)","255415a6":"print('the mean of item price is '+ str(df_train.item_price.mean())+ 'and the std is '+str(df_train.item_price.std()))","d9038476":"#remove the outlier in the price of the items, could effect on the predicitions on the future\ndf_price_test=df_train.drop(df_train[df_train.item_price>df_train.item_price.mean()+df_train.item_price.std()*3].index)\n","290a7d43":"sns.boxplot(x='item_price',data=df_price_test)","a0d1d6aa":"The item is increased","7f9e6282":"# Importind and Cleaning data","3e492069":"## Import the required Lib and data","1596132b":"### Concatenate the data","4ec0c6d6":"## Investigating and cleaning data ","9785944f":"Drop all of duplicated"}}