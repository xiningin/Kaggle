{"cell_type":{"79a75bf6":"code","a90a12ad":"code","c38162f4":"code","69fdac98":"code","0bfcf7d5":"code","163633da":"code","673f7b41":"code","1b1d4cc1":"code","a76e6be4":"code","e9e8fd82":"code","f4e18f47":"code","2387173e":"code","ed43079e":"code","8efaad8c":"code","e228a911":"code","4775f004":"code","afd20445":"code","a0744acf":"code","0622b018":"code","b1c79ae8":"code","4ecc81c7":"code","b888fe65":"code","db06ab44":"code","71238a9d":"code","e2676b65":"code","1b6fe14d":"code","fe5ef5b6":"code","b25ecb2e":"code","804c83d0":"code","ed3e248d":"code","5090b88e":"code","cc3d82a4":"code","df0e2ceb":"code","d99b2bd5":"code","5712e809":"code","415a72c7":"code","2b84837a":"code","a710d0f1":"code","b7f32cfd":"markdown","225959b5":"markdown","b46bd023":"markdown","bfd8b396":"markdown","bbfcc1ba":"markdown","9065e006":"markdown","d9698d46":"markdown","22143d6b":"markdown","8cada964":"markdown"},"source":{"79a75bf6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')","a90a12ad":"# reading the dataset\ndf = pd.read_csv('..\/input\/diamonds\/diamonds.csv')","c38162f4":"# how the data looks\ndf.head()","69fdac98":"df.shape","0bfcf7d5":"df.info()","163633da":"# summary of each numerical attribute\ndf.describe()","673f7b41":"df.isnull().sum()","1b1d4cc1":"del df['Unnamed: 0']","a76e6be4":"# Coorelation analysis\nplt.figure(figsize=(15,10))\nsns.heatmap(df.corr(), annot=True, cmap='coolwarm')","e9e8fd82":"sns.pairplot(df)","f4e18f47":"# The diamond cut categories\ndf['cut'].value_counts()","2387173e":"sns.countplot(x='cut', data = df)","ed43079e":"sns.boxplot('cut', 'price', data = df)","8efaad8c":"# The diamond color categories\ndf['color'].value_counts()","e228a911":"sns.countplot(x='color', data = df)","4775f004":"sns.boxplot('color', 'price', data = df)","afd20445":"# The diamond clarity categories\ndf['clarity'].value_counts()","a0744acf":"sns.countplot(x='clarity', data = df)","0622b018":"sns.violinplot('clarity', 'price', data = df)","b1c79ae8":"df.hist(bins = 50, figsize=(15,10))\nplt.show()","4ecc81c7":"print(\"x == 0 : {}\".format((df.x==0).sum()))\nprint(\"y == 0 : {}\".format((df.y==0).sum()))\nprint(\"z == 0 : {}\".format((df.z==0).sum()))","b888fe65":"df.loc[(df['x']==0) | (df['y']==0) | (df['z']==0)]","db06ab44":"df[['x','y','z']] = df[['x','y','z']].replace(0,np.NaN)","71238a9d":"df.isnull().sum()","e2676b65":"df.dropna(inplace=True)","1b6fe14d":"df.shape","fe5ef5b6":"import missingno as msno\nmsno.matrix(df)","b25ecb2e":"one_hot_encoder =  pd.get_dummies(df)\ndf = one_hot_encoder","804c83d0":"df.dtypes","ed3e248d":"df.head()","5090b88e":"X = df.drop('price', axis = 1)\ny = df['price']","cc3d82a4":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","df0e2ceb":"print(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","d99b2bd5":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","5712e809":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)\n\ny_pred = regressor.predict(X_test)","415a72c7":"from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\n\nlr_mae = mean_absolute_error(y_test, y_pred)\nlr_mse = mean_squared_error(y_test, y_pred)\nlr_r2 = r2_score(y_test, y_pred)\nprint('Linear Regression')\nprint('Mean Absolute Error:', lr_mae)\nprint('Mean Squared Error:', lr_mse)\nprint('R Squared :', lr_r2)","2b84837a":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 20, random_state = 0)\nregressor.fit(X_train, y_train)\n\ny_pred = regressor.predict(X_test)","a710d0f1":"rf_mae = mean_absolute_error(y_test, y_pred)\nrf_mse = mean_squared_error(y_test, y_pred)\nrf_r2 = r2_score(y_test, y_pred)\nprint('Random Forest Regressor')\nprint('Mean Absolute Error:', rf_mae)\nprint('Mean Squared Error:', rf_mse)\nprint('R Squared :', rf_r2)","b7f32cfd":"Clarity vs Price","225959b5":"Some columns have strings which we will need to convert to ints","b46bd023":"Cut vs Price","bfd8b396":"If you find this notebook useful, **PLEASE UPVOTE!!**","bbfcc1ba":"The minimum values for x,y and z here are 0 but it is not possible because according to the data description they are the length, width and depth","9065e006":"Just to visualize no missing values","d9698d46":"A zero value in these rows means missing data so we can replace the zeros with nan.","22143d6b":"Unecessary column which needs to be dropped","8cada964":"Color vs Price"}}