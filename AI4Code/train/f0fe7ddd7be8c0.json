{"cell_type":{"f29e8cdb":"code","7a248d8b":"code","97198770":"code","2f4d4aa5":"code","5af033b3":"code","41e3a829":"code","61fd6a03":"code","2b39aba4":"code","2394634b":"code","6a8eea4a":"code","d4bd51fb":"code","0c967650":"code","c616b614":"code","8c314a1c":"code","b5ced37d":"code","ef1657e5":"code","c62a0f7a":"code","44554ab5":"code","a32c123b":"code","166e23d8":"markdown","7a1772f7":"markdown","c2b6749b":"markdown","8f421835":"markdown","bf42bee3":"markdown","8f4d07c6":"markdown","e9ffee6f":"markdown","b184df29":"markdown","5b3604bb":"markdown","a872f7b8":"markdown","cc72b18f":"markdown","01a24482":"markdown","2f5515b7":"markdown","a924b2bb":"markdown","95fa335c":"markdown"},"source":{"f29e8cdb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7a248d8b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split,KFold,cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC","97198770":"df=pd.read_csv('..\/input\/mushroom-classification\/mushrooms.csv')\ndf.head()","2f4d4aa5":"from sklearn.preprocessing import LabelEncoder\nlabelencoder=LabelEncoder()\nfor column in df.columns:\n    df[column]=labelencoder.fit_transform(df[column])\n    \ndf.head()\n","5af033b3":"df.isnull().sum()","41e3a829":"print(df.groupby('class').size())","61fd6a03":"df.columns","2b39aba4":"X=df[df.columns]\nX=X.drop(columns=['class'])\nX.head()","2394634b":"Y=df['class']\nY.head()","6a8eea4a":"from sklearn.preprocessing import StandardScaler\nstand_x=StandardScaler()\nX=stand_x.fit_transform(X)","d4bd51fb":"X[0]","0c967650":"#histograms the dataset\nfig = plt.figure(figsize = (15,20))\nax = fig.gca()\npd.DataFrame(X).hist(ax = ax)","c616b614":"models=[]\nmodels.append(('LR',LogisticRegression()))\nmodels.append(('DT',DecisionTreeClassifier()))\nmodels.append(('KN',KNeighborsClassifier()))\nmodels.append(('NB',GaussianNB()))\nmodels.append(('SVC',SVC()))","8c314a1c":"results=[]\nnames=[]\nscoring='accuracy'","b5ced37d":"for name,model in models:\n    kfold=KFold(n_splits=10,random_state=7)\n    cv_result=cross_val_score(model,X,Y,cv=kfold,scoring=scoring)\n    results.append(cv_result)\n    names.append(name)\n    msg=(\"%s: %f (%f)\" % (name,cv_result.mean(),cv_result.std()))\n    print(msg)","ef1657e5":"import matplotlib.pyplot as plt\nfig=plt.figure()\nfig.suptitle('Algorithms Coparison')\nax=fig.add_subplot(111)\nplt.boxplot(results)\nax.set_xticklabels(names)\nplt.show()","c62a0f7a":"x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=1)","44554ab5":"my_model=DecisionTreeClassifier()\nmy_model.fit(x_train,y_train)","a32c123b":"result=my_model.score(x_test,y_test)\nprint('Accuracy : ' ,(result*100))","166e23d8":"Spliting the dataset to X and Y","7a1772f7":"Load the Dataset","c2b6749b":"we have  models and accuracy estimations for ech,\nwe can see that DT hase the largest accuracy ","8f421835":"****Dataset****\n\nThis dataset includes descriptions of hypothetical samples corresponding to 23 species of gilled mushrooms in the Agaricus and Lepiota Family Mushroom drawn from The Audubon Society Field Guide to North American Mushrooms (1981). Each species is identified as definitely edible, definitely poisonous, or of unknown edibility and not recommended. This latter class was combined with the poisonous one. The Guide clearly states that there is no simple rule for determining the edibility of a mushroom; no rule like \"leaflets three, let it be'' for Poisonous Oak and Ivy.\n\nTime period: Donated to UCI ML 27 April 1987\n\n\n****Attribute Information:****\n\n1. cap-shape: bell=b,conical=c,convex=x,flat=f, knobbed=k,sunken=s\n2. cap-surface: fibrous=f,grooves=g,scaly=y,smooth=s\n3. cap-color: brown=n,buff=b,cinnamon=c,gray=g,green=r, pink=p,purple=u,red=e,white=w,yellow=y\n4. bruises?: bruises=t,no=f\n5. odor: almond=a,anise=l,creosote=c,fishy=y,foul=f, musty=m,none=n,pungent=p,spicy=s\n6. gill-attachment: attached=a,descending=d,free=f,notched=n\n7. gill-spacing: close=c,crowded=w,distant=d\n8. gill-size: broad=b,narrow=n\n9. gill-color: black=k,brown=n,buff=b,chocolate=h,gray=g, green=r,orange=o,pink=p,purple=u,red=e, white=w,yellow=y\n10. stalk-shape: enlarging=e,tapering=t\n11. stalk-root: bulbous=b,club=c,cup=u,equal=e, rhizomorphs=z,rooted=r,missing=?\n12. stalk-surface-above-ring: fibrous=f,scaly=y,silky=k,smooth=s\n13. stalk-surface-below-ring: fibrous=f,scaly=y,silky=k,smooth=s\n14. stalk-color-above-ring: brown=n,buff=b,cinnamon=c,gray=g,orange=o, pink=p,red=e,white=w,yellow=y\n15. stalk-color-below-ring: brown=n,buff=b,cinnamon=c,gray=g,orange=o, pink=p,red=e,white=w,yellow=y\n16. veil-type: partial=p,universal=u\n17. veil-color: brown=n,orange=o,white=w,yellow=y\n18. ring-number: none=n,one=o,two=t\n19. ring-type: cobwebby=c,evanescent=e,flaring=f,large=l, none=n,pendant=p,sheathing=s,zone=z\n20. spore-print-color: black=k,brown=n,buff=b,chocolate=h,green=r, orange=o,purple=u,white=w,yellow=y\n21. population: abundant=a,clustered=c,numerous=n, scattered=s,several=v,solitary=y\n22. habitat: grasses=g,leaves=l,meadows=m,paths=p, urban=u,waste=w,woods=d","bf42bee3":"Import Libraries","8f4d07c6":"spliting the dataset ","e9ffee6f":"good! we have get 100% accuracy in our test dataset","b184df29":"Evaluate The model in test dataset","5b3604bb":"**labelEncoder for dataset to macke it numerical **","a872f7b8":"our target is the class column ","cc72b18f":"Build Models\n\n* 'LR',LogisticRegression\n* 'DT',DecisionTreeClassifier\n* 'KN',KNeighborsClassifier\n* 'NB',GaussianNB\n* 'SVC',SVC","01a24482":"Many machine learning algorithms work better when features are on a relatively similar scale and close to normally distributed so we will standad the data using StandardScaler","2f5515b7":"Data Visulaization","a924b2bb":"check if there are any null values ","95fa335c":"now we will use DT model to fit it in our data"}}