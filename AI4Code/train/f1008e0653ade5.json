{"cell_type":{"9468c398":"code","c9d6c01a":"code","91622a7c":"code","1738a126":"code","8f32d371":"code","b19eb73e":"code","444f07e0":"code","9fbab4a0":"code","34a55418":"code","aafccc07":"code","d77ff618":"code","9fac00e7":"code","93396d24":"code","28b89de2":"code","3c12df61":"code","3e076c79":"code","3390bcfb":"code","095a7fca":"code","52dacfd3":"code","d2e22484":"code","bee3ab11":"code","4871b68a":"code","345a3e59":"code","eea06f35":"code","554416da":"code","483e9c7a":"code","9b4c6fec":"code","69f969a9":"code","ad3a0075":"code","6596c923":"code","88714117":"code","2fa2a3d4":"code","c2714276":"code","6a248eb6":"code","cc21f858":"code","6eabe09a":"code","ed126f10":"code","f2b3a2f8":"code","03186aa9":"code","93d4499b":"code","5201157a":"code","24405dd4":"code","238071c6":"code","08e94154":"code","6cae4d1f":"code","f2e48d40":"code","9a343af8":"code","655ea942":"code","1e3464df":"code","f928125e":"code","f805d7f3":"code","5d5f00db":"code","94186cac":"code","ce1ea420":"code","d20564a3":"code","960faf45":"code","5f83d4db":"code","e83851cd":"code","c0b6f224":"code","4608ef72":"code","18bdbb64":"code","b049cd0d":"code","07ac7fc8":"code","6571cab6":"code","4422518a":"code","379ba37b":"code","8ae27f6c":"markdown","9edd91bc":"markdown"},"source":{"9468c398":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c9d6c01a":"train_user = pd.read_csv('..\/input\/train_users_2.csv')","91622a7c":"countries = pd.read_csv('..\/input\/countries.csv')\nage_gender = pd.read_csv('..\/input\/age_gender_bkts.csv')\nsessions = pd.read_csv('..\/input\/sessions.csv')","1738a126":"sns.countplot(x='country_destination', data=train_user)\n\n#there  are large number of undefined countries with small other counties\n#gender of most is unknown with very small unknown","8f32d371":"sns.countplot(x='gender' , data=train_user)","b19eb73e":"sns.countplot(x='signup_flow' , data=train_user)","444f07e0":"sns.set_style('ticks')\nfig, ax = plt.subplots()\nfig.set_size_inches(11.7, 8.27)\ndevice_percentage = train_user.first_device_type.value_counts() \/ train_user.shape[0] * 100\ndevice_percentage.plot(kind='bar',color='#196F3D')\nplt.xlabel('Device used by user')\nplt.ylabel('Percentage')\nsns.despine()","9fbab4a0":"sns.distplot(train_user.age.dropna(), color='#16A085')","34a55418":"train_user['corrected_age']=train_user['age'].apply(lambda x : 36 if x>100 else x)\nsns.distplot(train_user.corrected_age.dropna(), color='#16A085')\n","aafccc07":"display((train_user.isnull().sum()\/train_user.shape[0])*100)","d77ff618":"train_user['date_account_created_new'] = pd.to_datetime(train_user['date_account_created'])\ntrain_user['date_first_active_new'] = pd.to_datetime((train_user.timestamp_first_active \/\/ 1000000), format='%Y%m%d')","9fac00e7":"train_user['date_account_created_day'] = train_user.date_account_created_new.dt.weekday_name\ntrain_user['date_account_created_month'] = train_user.date_account_created_new.dt.month\ntrain_user['date_account_created_year'] = train_user.date_account_created_new.dt.year\ntrain_user['date_first_active_day'] = train_user.date_first_active_new.dt.weekday_name\ntrain_user['date_first_active_month'] = train_user.date_first_active_new.dt.month\ntrain_user['date_first_active_year'] = train_user.date_first_active_new.dt.year","93396d24":"train_user['isequal']=~(train_user['date_account_created_new'] == train_user['date_first_active_new'])\n#there are 178 rows whose values are not same for date_account_created adn date_first_active","28b89de2":"#display(train_user.loc[train_user['isequal']==True])","3c12df61":"#sns.countplot(x='country_destination', data=train_user.loc[train_user['isequal']==False])\n#if both value are equal then there are greater changes of travel for value which are equal but \n# 213273 values are same and only 178 rows are different so they are reducible\ndisplay(train_user.head())\n","3e076c79":"train_user['isequal'].value_counts()\/train_user.shape[0]*100","3390bcfb":"train_user['gender'].value_counts()\/train_user.shape[0]*100","095a7fca":"train_user['signup_method'].value_counts()\/train_user.shape[0]*100","52dacfd3":"train_user['language'].value_counts()\/train_user.shape[0]*100","d2e22484":"train_user['affiliate_channel'].value_counts()\/train_user.shape[0]*100\n","bee3ab11":"train_user['affiliate_provider'].value_counts()\/train_user.shape[0]*100","4871b68a":"train_user['first_affiliate_tracked'].value_counts()\/train_user.shape[0]*100","345a3e59":"#Dealing with first_afflicated_data and flling with untracked as it has most unfilled data\ndef definefirstaffiliate(cols):\n    if pd.isnull(cols[0]):\n        return 'untracked'\n    else:\n        return cols[0]\n    ","eea06f35":"train_user['first_affiliate_tracked_updated'] = train_user[['first_affiliate_tracked']].apply( definefirstaffiliate , axis = 1) ","554416da":"train_user['first_affiliate_tracked_updated'].value_counts()\/train_user.shape[0]*100\n#cleared affiliated data","483e9c7a":"#current plan is to drop the date_first_booking\n#something to do with age\n#thinking maybe predicting the age with logistic regresson can work\n#thinking filing them with 36 presently can work\ndisplay(train_user.sample(10))","9b4c6fec":"def defineage(cols):\n    if pd.isnull(cols[0]):\n        return 36\n    else:\n        return cols[0]\n    ","69f969a9":"train_user['corrected_age'] = train_user[['corrected_age']].apply( defineage , axis = 1) ","ad3a0075":"display(train_user.sample(15))\n#creating dummy variable\ngender = pd.get_dummies(train_user['gender'] ,prefix='gender')","6596c923":"gender.sample(5)","88714117":"gender['gender_combine']=(gender['gender_-unknown-']) | (gender['gender_OTHER'])","2fa2a3d4":"gender = gender.drop(['gender_-unknown-','gender_OTHER'],axis=1)\ngender.sample(10)","c2714276":"signup_method = pd.get_dummies(train_user['signup_method'] ,prefix='signup_method')\naffiliate_channel = pd.get_dummies(train_user['affiliate_channel'] ,prefix='affiliate_channel')\naffiliate_provider = pd.get_dummies(train_user['affiliate_provider'] ,prefix='affiliate_provider')","6a248eb6":"affiliate_provider.sample(10)","cc21f858":"affiliate_provider['affiliate_provider_combine']= affiliate_provider['affiliate_provider_vast'] | affiliate_provider['affiliate_provider_padmapper'] | affiliate_provider['affiliate_provider_facebook-open-graph'] | affiliate_provider['affiliate_provider_yahoo'] | affiliate_provider['affiliate_provider_gsp'] | affiliate_provider['affiliate_provider_meetup'] | affiliate_provider['affiliate_provider_email-marketing']  | affiliate_provider['affiliate_provider_naver'] | affiliate_provider['affiliate_provider_baidu']|affiliate_provider['affiliate_provider_yandex']|affiliate_provider['affiliate_provider_wayn'] | affiliate_provider['affiliate_provider_daum'] ","6eabe09a":"affiliate_provider = affiliate_provider.drop(['affiliate_provider_vast' , 'affiliate_provider_padmapper' ,'affiliate_provider_facebook-open-graph','affiliate_provider_gsp' , 'affiliate_provider_meetup' , 'affiliate_provider_email-marketing' , 'affiliate_provider_naver' , 'affiliate_provider_baidu' , 'affiliate_provider_yandex' ,'affiliate_provider_wayn' ,'affiliate_provider_daum' ], axis = 1)  \naffiliate_provider.sample(10)","ed126f10":"first_affiliate_tracked_updated = pd.get_dummies(train_user['first_affiliate_tracked_updated'] ,prefix='first_affiliate_tracked_updated')","f2b3a2f8":"first_affiliate_tracked_updated['first_affiliate_tracked_updated_combine'] = first_affiliate_tracked_updated['first_affiliate_tracked_updated_marketing']|first_affiliate_tracked_updated['first_affiliate_tracked_updated_product']|first_affiliate_tracked_updated['first_affiliate_tracked_updated_local ops']","03186aa9":"first_affiliate_tracked_updated = first_affiliate_tracked_updated.drop(['first_affiliate_tracked_updated_marketing' , 'first_affiliate_tracked_updated_product' , 'first_affiliate_tracked_updated_local ops'],axis =1)    \nfirst_affiliate_tracked_updated.sample(10)","93d4499b":"signup_app = pd.get_dummies(train_user['signup_app'] ,prefix='signup_app')\nfirst_device_type = pd.get_dummies(train_user['first_device_type'] ,prefix='first_device_type')\n# first_browser = pd.get_dummies(train_user['first_browser'] ,prefix='first_browser')","5201157a":"def definefirstbrowser(cols):\n    if(cols[0]=='Chrome' or cols[0]=='Safari' or cols[0]=='Firefox' or cols[0]=='-unknown-' or cols[0]=='IE' or cols[0]=='Mobile Safari'):\n        return cols[0]\n    else:\n        return 'Other'","24405dd4":"train_user['first_browser_updated'] = train_user[['first_browser']].apply( definefirstbrowser , axis = 1) ","238071c6":"# train_user[train_user['first_browser_updated'] =='Other']\n#this is working\n#so creating dummy for first_browser_updated\nfirst_browser = pd.get_dummies(train_user['first_browser_updated'] ,prefix='first_browser_updated')","08e94154":"first_browser.sample(5)","6cae4d1f":"def languageisenglish(cols):\n    if(cols[0] == 'en'):\n        return 1\n    else:\n        return 0","f2e48d40":"train_user['languageisenglish'] = train_user[['language']].apply( languageisenglish , axis = 1) ","9a343af8":"train_user['signup_flow'].value_counts()\/train_user.shape[0]*100","655ea942":"from sklearn.preprocessing import StandardScaler\nss = StandardScaler()","1e3464df":"train_user['signup_flow_updated'] = ss.fit_transform(train_user[['signup_flow']])","f928125e":"#so dummy tables are gender ,signup_method , affiliate_channel ,affiliate_provider ,first_affiliate_tracked_updated \n#signup_app first_device_type first_browser first_browser\ntrain_user_combine = pd.concat([train_user,gender,signup_method,affiliate_channel ,affiliate_provider ,first_affiliate_tracked_updated ,signup_app,first_device_type,first_browser],axis=1)","f805d7f3":"train_user_combine.sample(10)","5d5f00db":"train_user_combine['date_account_created_year_updated'] =  train_user_combine['date_account_created_year'].apply(lambda x: x%2009 )   ","94186cac":"from sklearn.preprocessing import LabelEncoder","ce1ea420":"lb = LabelEncoder()\nlb.fit(train_user_combine['date_account_created_day'])\ntrain_user_combine['date_account_created_day_updated'] = lb.transform(train_user_combine['date_account_created_day'])","d20564a3":"ss1 = StandardScaler()\ntrain_user_combine['corrected_age_updated']=ss1.fit_transform(train_user_combine[['corrected_age']])","960faf45":"lb1 = LabelEncoder()\nlb.fit(train_user_combine['country_destination'])\ntrain_user_combine['country_destination_updated'] = lb.transform(train_user_combine['country_destination'])","5f83d4db":"train_user_combine.sample(10)","e83851cd":"train_user_combine_final = train_user_combine[['date_account_created_month','isequal',\n       'languageisenglish', 'signup_flow_updated', 'gender_FEMALE',\n       'gender_MALE', 'gender_combine', 'signup_method_basic',\n       'signup_method_facebook', 'signup_method_google',\n       'affiliate_channel_api', 'affiliate_channel_content',\n       'affiliate_channel_direct', 'affiliate_channel_other',\n       'affiliate_channel_remarketing', 'affiliate_channel_sem-brand',\n       'affiliate_channel_sem-non-brand', 'affiliate_channel_seo',\n       'affiliate_provider_bing', 'affiliate_provider_craigslist',\n       'affiliate_provider_direct', 'affiliate_provider_facebook',\n       'affiliate_provider_google', 'affiliate_provider_other',\n       'affiliate_provider_yahoo', 'affiliate_provider_combine',\n       'first_affiliate_tracked_updated_linked',\n       'first_affiliate_tracked_updated_omg',\n       'first_affiliate_tracked_updated_tracked-other',\n       'first_affiliate_tracked_updated_untracked',\n       'first_affiliate_tracked_updated_combine', 'signup_app_Android',\n       'signup_app_Moweb', 'signup_app_Web', 'signup_app_iOS',\n       'first_device_type_Android Phone', 'first_device_type_Android Tablet',\n       'first_device_type_Desktop (Other)', 'first_device_type_Mac Desktop',\n       'first_device_type_Other\/Unknown',\n       'first_device_type_SmartPhone (Other)',\n       'first_device_type_Windows Desktop', 'first_device_type_iPad',\n       'first_device_type_iPhone', 'first_browser_updated_-unknown-',\n       'first_browser_updated_Chrome', 'first_browser_updated_Firefox',\n       'first_browser_updated_IE', 'first_browser_updated_Mobile Safari',\n       'first_browser_updated_Other', 'first_browser_updated_Safari',\n       'date_account_created_year_updated', 'date_account_created_day_updated',\n       'corrected_age_updated', 'country_destination_updated']]","c0b6f224":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom xgboost.sklearn import XGBClassifier","4608ef72":"t_train , t_test , s_train , s_test = train_test_split(train_user_combine_final.drop('country_destination_updated',axis=1),train_user_combine_final['country_destination_updated'] , test_size = 0.20 , random_state=101 )  ","18bdbb64":"rfc = RandomForestClassifier()\nrfc.fit(t_train , s_train)","b049cd0d":"pred = rfc.predict(t_test)","07ac7fc8":"print(accuracy_score(s_test, pred))","6571cab6":"dtc = DecisionTreeClassifier()\ndtc.fit(t_train , s_train)\npred = dtc.predict(t_test)\nprint(accuracy_score(s_test, pred))","4422518a":"pred","379ba37b":"xgb = XGBClassifier(max_depth=10, learning_rate=0.03, n_estimators=22,\n                    objective='multi:softprob', subsample=0.6, colsample_bytree=0.6, seed=40)\nxgb.fit(t_train , s_train)\npred = xgb.predict(t_test) \nprint(accuracy_score(s_test, pred))","8ae27f6c":"**From here we are using the predications **\n# Predications","9edd91bc":"# Data Visualization"}}