{"cell_type":{"a9c8bdda":"code","68a2f571":"code","388023f4":"code","4444769f":"code","8f0ebac0":"code","3d62b5d1":"code","8839a445":"code","d64ed353":"code","360aed5d":"code","75460736":"code","e107df77":"code","f6eac8e7":"code","54649af9":"code","322a5279":"code","44958677":"code","8e85deca":"markdown","dfd23ae2":"markdown","ad57e3b3":"markdown","2aa52b6b":"markdown","39d703f8":"markdown","5a3980e1":"markdown","74762654":"markdown","49fb3e5f":"markdown","da551af7":"markdown","01403204":"markdown","a7fb7661":"markdown","aa0a2dd2":"markdown","d85978b9":"markdown","8f2af2b7":"markdown","70c749ec":"markdown","3e2965fe":"markdown","551037aa":"markdown","194b0f25":"markdown"},"source":{"a9c8bdda":"\n\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sys\nfrom sklearn import model_selection\nfrom sklearn.metrics import explained_variance_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR\n\n\n\ncrops_data = pd.read_csv(\"..\/input\/apy.csv\")\n\n","68a2f571":"crops_data['Season'] = crops_data['Season'].str.rstrip()\ncrops_data['Crop_Year']=crops_data['Crop_Year'].astype(str)","388023f4":"cultivation_data = crops_data[['Crop_Year', 'Crop', 'Area', 'Production']]\ny='Rice'\ncultivation_data=cultivation_data.groupby('Crop').get_group(y)\ncultivation_data=cultivation_data.groupby('Crop_Year')[['Production', 'Area']].sum()\n    \nprint(cultivation_data)\nprint(\"Bar plot of the above data\")\ncultivation_data.dropna().plot(kind='bar', figsize=(20,10), logy=True, color=['dodgerblue', 'aqua'])\nprint(\"Line plot of the above data\")\ncultivation_data.dropna().plot(figsize=(20,10), logy=True, color=['dodgerblue', 'aqua'], linestyle='solid', marker='o', alpha=0.8, markersize=8)\n","4444769f":"x='Assam'\ny='Rice'\ncultivation_data = crops_data[['State_Name', 'Crop_Year', 'Crop', 'Area', 'Production']]\n    \ncultivation_data=cultivation_data.groupby('State_Name').get_group(x)\ncultivation_data=cultivation_data.groupby('Crop').get_group(y)\ncultivation_data=cultivation_data.groupby('Crop_Year')[['Production', 'Area']].sum()\n    \nprint(cultivation_data)\nprint(\"Bar plot of the above data\")\ncultivation_data.dropna().plot(kind='bar', figsize=(20,10), logy=True, color=['dodgerblue', 'aqua'])\nprint(\"Line plot of the above data\")\ncultivation_data.dropna().plot(figsize=(20,10), logy=True, color=['dodgerblue', 'aqua'], linestyle='solid', marker='o', alpha=0.8, markersize=8)","8f0ebac0":"x='Uttar Pradesh'\nz='ETAH'\ny='Maize'\ncultivation_data = crops_data[['State_Name','District_Name', 'Crop_Year', 'Crop', 'Area', 'Production']]\n  \ncultivation_data=cultivation_data.groupby('State_Name').get_group(x)\ncultivation_data=cultivation_data.groupby('Crop').get_group(y)\ncultivation_data=cultivation_data.groupby('District_Name').get_group(z)\ncultivation_data=cultivation_data.groupby('Crop_Year')[['Production', 'Area']].sum()\n  \nprint(cultivation_data)\nprint(\"Bar plot of the above data\")\ncultivation_data.dropna().plot(kind='bar', figsize=(20,10), logy=True, color=['dodgerblue', 'aqua'])\nprint(\"Line plot of the above data\")\ncultivation_data.dropna().plot(figsize=(20,10), logy=True, color=['dodgerblue', 'aqua'], linestyle='solid', marker='o', alpha=0.8, markersize=8)","3d62b5d1":"x='Rabi'\nz='Barley'\ncultivation_data=crops_data[['Season', 'Crop_Year', 'Crop', 'Area', 'Production']]\ncultivation_data=cultivation_data.groupby('Season').get_group(x)\ncultivation_data=cultivation_data.groupby('Crop').get_group(z)\ncultivation_data=cultivation_data.groupby('Crop_Year')[['Production', 'Area']].sum()\n  \nprint(cultivation_data)\nprint(\"Bar plot of the above data\")\ncultivation_data.dropna().plot(kind='bar', figsize=(20,10), logy=True, color=['dodgerblue', 'aqua'])\nprint(\"Line plot of the above data\")\ncultivation_data.dropna().plot(figsize=(20,10), logy=True, color=['dodgerblue', 'aqua'], linestyle='solid', marker='o', alpha=0.8, markersize=8)","8839a445":"x='Bihar'\ny='Wheat'\ncultivation_data = crops_data[['State_Name', 'Crop_Year', 'Crop', 'Area', 'Production']]\n    \ncultivation_data=cultivation_data.groupby('State_Name').get_group(x)\ncultivation_data=cultivation_data.groupby('Crop').get_group(y)\ncultivation_data=cultivation_data.groupby('Crop_Year')[['Production', 'Area']].sum()\n    \na='Jharkhand'\nb='Wheat'\ncultivation_data1 = crops_data[['State_Name', 'Crop_Year', 'Crop', 'Area', 'Production']]\n    \ncultivation_data1=cultivation_data1.groupby('State_Name').get_group(a)\ncultivation_data1=cultivation_data1.groupby('Crop').get_group(b)\ncultivation_data1=cultivation_data1.groupby('Crop_Year')[['Production', 'Area']].sum()\n    \ncultivation_data.rename(columns={'Production':'Production_of_state1'}, inplace=True)\ncultivation_data.rename(columns={'Area':'Area_of_state1'}, inplace=True)\ncultivation_data1.rename(columns={'Production':'Production_of_state2'}, inplace=True)\ncultivation_data1.rename(columns={'Area':'Area_of_state2'}, inplace=True)\ndf12=pd.concat([cultivation_data, cultivation_data1], axis=1)\n    \nprint(df12)\nax=df12.plot(kind='bar', figsize=(20,10), color=['darkorange', 'forestgreen', 'darkgoldenrod', 'limegreen'], grid=True)\nprint(\"COMPARISON OF PRODUCTION\")\nax=df12.plot(y=['Production_of_state1', 'Production_of_state2'], figsize=(20,10), color=['darkorange', 'darkgoldenrod'], grid=True, linestyle='solid', marker='o', alpha=0.8, markersize=8)\nprint(\"COMPARISON OF AREA\")\nax=df12.plot(y=['Area_of_state1', 'Area_of_state2'], figsize=(20,10), color=['forestgreen', 'limegreen'], grid=True, linestyle='solid', marker='o', alpha=0.8, markersize=8)","d64ed353":"x='West Bengal'\nz='MALDAH'\ny='Sugarcane'\ncultivation_data = crops_data[['State_Name', 'District_Name', 'Crop_Year', 'Crop', 'Area', 'Production']]\n  \ncultivation_data=cultivation_data.groupby('State_Name').get_group(x)\ncultivation_data=cultivation_data.groupby('District_Name').get_group(z)\ncultivation_data=cultivation_data.groupby('Crop').get_group(y)\ncultivation_data=cultivation_data.groupby('Crop_Year')[['Production', 'Area']].sum()\n  \na='Uttar Pradesh'\nc='KHERI'\nb='Sugarcane'\ncultivation_data1 = crops_data[['State_Name', 'District_Name', 'Crop_Year', 'Crop', 'Area', 'Production']]\n  \ncultivation_data1=cultivation_data1.groupby('State_Name').get_group(a)\ncultivation_data1=cultivation_data1.groupby('District_Name').get_group(c)\ncultivation_data1=cultivation_data1.groupby('Crop').get_group(b)\ncultivation_data1=cultivation_data1.groupby('Crop_Year')[['Production', 'Area']].sum()\n  \ncultivation_data.rename(columns={'Production':'Production_of_district1'}, inplace=True)\ncultivation_data.rename(columns={'Area':'Area_of_district1'}, inplace=True)\ncultivation_data1.rename(columns={'Production':'Production_of_district2'}, inplace=True)\ncultivation_data1.rename(columns={'Area':'Area_of_district2'}, inplace=True)\ndf12=pd.concat([cultivation_data, cultivation_data1], axis=1)\n\nprint(df12)\nax=df12.plot(kind='bar', figsize=(20,20), color=['darkorange', 'forestgreen', 'darkgoldenrod', 'limegreen'], grid=True)\nprint(\"COMPARISON OF PRODUCTION\")\nax=df12.plot(y=['Production_of_district1', 'Production_of_district2'], figsize=(20,10), color=['darkorange', 'darkgoldenrod'], grid=True, linestyle='solid', marker='o', alpha=0.8, markersize=8)\nprint(\"COMPARISON OF AREA\")\nax=df12.plot(y=['Area_of_district1', 'Area_of_district2'], figsize=(20,10), color=['forestgreen', 'limegreen'], grid=True, linestyle='solid', marker='o', alpha=0.8, markersize=8)","360aed5d":"x='2010'\ny='Rice'\n  \ndd1=crops_data[['State_Name', 'Crop_Year', 'Crop', 'Area', 'Production']]\n\ndd1=dd1.groupby('Crop_Year').get_group(x)\ndd1=dd1.groupby('Crop').get_group(y)\ndd1=dd1.groupby('State_Name')[['Production', 'Area']].sum()\ndd1=dd1.sort_values(by='Production', ascending=False)\nprint(dd1)\nprint(\"Pie chart plot of the data for top ten states\")\ndd1[:10].plot(kind='pie', y='Production', figsize=(10,10), autopct='%1.1f%%')\ndd1[:10].plot(kind='pie', y='Area', figsize=(10,10), autopct='%1.1f%%')\nprint('Joint plot showing the about the ratio')","75460736":"x='2011'\ny='Wheat'\nz='Assam'\n  \ndd1=crops_data[['State_Name', 'District_Name', 'Crop_Year', 'Crop', 'Area', 'Production']]\n\ndd1=dd1.groupby('Crop_Year').get_group(x)\ndd1=dd1.groupby('Crop').get_group(y)\ndd1=dd1.groupby('State_Name').get_group(z)\ndd1=dd1.groupby('District_Name')[['Production', 'Area']].sum()\ndd1=dd1.sort_values(by='Production', ascending=False)\nprint(dd1)\nprint(\"Pie chart plot of the data for top ten states\")\ndd1[:10].plot(kind='pie', y='Production', figsize=(10,10), autopct='%1.1f%%')\ndd1[:10].plot(kind='pie', y='Area', figsize=(10,10), autopct='%1.1f%%')","e107df77":"models = []\nmodels.append(LinearRegression())\nmodels.append(DecisionTreeRegressor())\nmodels.append(KNeighborsRegressor(n_neighbors = 2))\nmodels.append(SVR(gamma='auto'))\nnames=['LR', 'DTR', 'KNR', 'SVR']","f6eac8e7":"cultivation_data = crops_data[['Crop_Year', 'Crop', 'Area', 'Production']]\ny='Banana'\ncultivation_data=cultivation_data.groupby('Crop').get_group(y)\ncultivation_data=cultivation_data.groupby('Crop_Year')[['Production', 'Area']].sum()\npredofprod=list()\nX = cultivation_data['Area'].values.reshape(-1, 1)\nY = cultivation_data['Production'].ravel()\nvalidation_size = 0.30\nX_train, X_test, y_train, y_test = model_selection.train_test_split(X, Y, test_size=validation_size)\nvarlist=list()\nfor model in models:\n    model.fit(X_train, y_train)\n    y_pred=model.predict(X_test)\n    #print(explained_variance_score(y_test, y_pred))\n    r1=explained_variance_score(y_test, y_pred)\n    varlist.append(r1)\nprint(\"Explained variance score for different models\")\nprint('LR : ', varlist[0])\nprint('DTR : ', varlist[1])\nprint('KNR : ', varlist[2])\nprint('SVR : ', varlist[3])\nsns.barplot(x=varlist, y=names)\nbest_model_var=varlist[0]\nbest_model=models[0]\nfor i in range(len(names)):\n    if varlist[i]>best_model_var:\n        best_model_var=varlist[i]\n        best_model=models[i]\nprint(best_model)\n\nbest_model.fit(X_train, y_train)\nz=12345\npredofprod.append(z)\npredofprod=np.reshape(predofprod, (1,-1))\nprod=best_model.predict(predofprod)\nprint(\"Production will be\",prod[0])","54649af9":"x='Assam'\ny='Potato'\ncultivation_data = crops_data[['State_Name', 'Crop_Year', 'Crop', 'Area', 'Production']]\npredofprod=list()  \ncultivation_data=cultivation_data.groupby('State_Name').get_group(x)\ncultivation_data=cultivation_data.groupby('Crop').get_group(y)\ncultivation_data=cultivation_data.groupby('Crop_Year')[['Production', 'Area']].sum()\nX = cultivation_data['Area'].values.reshape(-1, 1)\nY = cultivation_data['Production'].ravel()\nvalidation_size = 0.30\nX_train, X_test, y_train, y_test = model_selection.train_test_split(X, Y, test_size=validation_size)\nvarlist=list()\nfor model in models:\n    model.fit(X_train, y_train)\n    y_pred=model.predict(X_test)\n    #print(explained_variance_score(y_test, y_pred))\n    r1=explained_variance_score(y_test, y_pred)\n    varlist.append(r1)\nprint(\"Explained variance score for different models\")\nprint('LR : ', varlist[0])\nprint('DTR : ', varlist[1])\nprint('KNR : ', varlist[2])\nprint('SVR : ', varlist[3])\nsns.barplot(x=varlist, y=names)\nbest_model_var=varlist[0]\nbest_model=models[0]\nfor i in range(len(names)):\n    if varlist[i]>best_model_var:\n        best_model_var=varlist[i]\n        best_model=models[i]\nprint(best_model)\n\nbest_model.fit(X_train, y_train)\nz=12345\npredofprod.append(z)\npredofprod=np.reshape(predofprod, (1,-1))\nprod=best_model.predict(predofprod)\nprint(\"Production will be\",prod[0])","322a5279":"x='Kerala'\nw='MALAPPURAM'\ny='Coconut '\ncultivation_data = crops_data[['State_Name', 'District_Name', 'Crop_Year', 'Crop', 'Area', 'Production']]\npredofprod=list()  \ncultivation_data=cultivation_data.groupby('State_Name').get_group(x)\ncultivation_data=cultivation_data.groupby('Crop').get_group(y)\ncultivation_data=cultivation_data.groupby('District_Name').get_group(w)\ncultivation_data=cultivation_data.groupby('Crop_Year')[['Production', 'Area']].sum()\nX = cultivation_data['Area'].values.reshape(-1, 1)\nY = cultivation_data['Production'].ravel()\nvalidation_size = 0.30\nX_train, X_test, y_train, y_test = model_selection.train_test_split(X, Y, test_size=validation_size)\nvarlist=list()\nfor model in models:\n    model.fit(X_train, y_train)\n    y_pred=model.predict(X_test)\n    #print(explained_variance_score(y_test, y_pred))\n    r1=explained_variance_score(y_test, y_pred)\n    varlist.append(r1)\nprint(\"Explained variance score for different models\")\nprint('LR : ', varlist[0])\nprint('DTR : ', varlist[1])\nprint('KNR : ', varlist[2])\nprint('SVR : ', varlist[3])\nsns.barplot(x=varlist, y=names)\nbest_model_var=varlist[0]\nbest_model=models[0]\nfor i in range(len(names)):\n    if varlist[i]>best_model_var:\n        best_model_var=varlist[i]\n        best_model=models[i]\nprint(best_model)\n\nbest_model.fit(X_train, y_train)\nz=12345\npredofprod.append(z)\npredofprod=np.reshape(predofprod, (1,-1))\nprod=best_model.predict(predofprod)\nprint(\"Production will be\",prod[0])","44958677":"x='Summer'\ny='Rice'\ncultivation_data=crops_data[['Season', 'Crop_Year', 'Crop', 'Area', 'Production']]\ncultivation_data=cultivation_data.groupby('Season').get_group(x)\ncultivation_data=cultivation_data.groupby('Crop').get_group(y)\ncultivation_data=cultivation_data.groupby('Crop_Year')[['Production', 'Area']].sum()\npredofprod=list()\nX = cultivation_data['Area'].values.reshape(-1, 1)\nY = cultivation_data['Production'].ravel()\nvalidation_size = 0.30\nX_train, X_test, y_train, y_test = model_selection.train_test_split(X, Y, test_size=validation_size)\nvarlist=list()\nfor model in models:\n    model.fit(X_train, y_train)\n    y_pred=model.predict(X_test)\n    #print(explained_variance_score(y_test, y_pred))\n    r1=explained_variance_score(y_test, y_pred)\n    varlist.append(r1)\nprint(\"Explained variance score for different models\")\nprint('LR : ', varlist[0])\nprint('DTR : ', varlist[1])\nprint('KNR : ', varlist[2])\nprint('SVR : ', varlist[3])\nsns.barplot(x=varlist, y=names)  \nbest_model_var=varlist[0]\nbest_model=models[0]\nfor i in range(len(names)):\n    if varlist[i]>best_model_var:\n        best_model_var=varlist[i]\n        best_model=models[i]\nprint(best_model)\n\nbest_model.fit(X_train, y_train)\nz=12345\npredofprod=list()\npredofprod.append(z)\npredofprod=np.reshape(predofprod, (1,-1))\nprod=best_model.predict(predofprod)\nprint(\"Production will be\",prod[0])","8e85deca":"**Cleaning the dataset**","dfd23ae2":"**PREDICTION**","ad57e3b3":"**Visualization of area and production of a crop for a state**","2aa52b6b":"**For a specific crop in India**","39d703f8":"**Importing libraries and dataset**","5a3980e1":"**Data visulization and prediction of production of crops**","74762654":"**For a specific crop for a season**","49fb3e5f":"**Visualization and comparison of two districts**","da551af7":"**VISUALIZATION**","01403204":"**Visualization of area and production of a crop for a district**","a7fb7661":"**Visualization of area and production of a crop for all over india**","aa0a2dd2":"**Visualization and comparison of two states**","d85978b9":"**list of models**","8f2af2b7":"**For a specific crop in a specific state**","70c749ec":"**Top ten distrits of a state with highest production of a crop**","3e2965fe":"**Visualization of area and production of a crop for a season**","551037aa":"**For a specific crop in a specific district**","194b0f25":"**Top ten states with highest production of a crop**"}}