{"cell_type":{"b1783234":"code","2d63140c":"code","a524869e":"code","9574b9a2":"code","ba83e840":"code","edb6316b":"code","5a856e2f":"code","8d8a8184":"code","baaa913a":"code","510728b4":"code","7c1ea57e":"code","66b74c28":"code","9d67f9ed":"code","4c89ce0a":"code","67a6fc76":"code","0c0f6c50":"code","1db608ec":"code","df8b6d04":"code","7064c0ad":"code","979540cf":"markdown","6b1f0829":"markdown","fd2d9082":"markdown","ef8da10d":"markdown","cc0dc99c":"markdown","e010f497":"markdown","eb5ee3fc":"markdown","611b7c94":"markdown","b2ca90e2":"markdown","8463b73e":"markdown","b3a3c624":"markdown","b8d6196c":"markdown","f7fe308e":"markdown","62a72967":"markdown","768c7268":"markdown","f8e158c4":"markdown","c07683a1":"markdown","bb431934":"markdown"},"source":{"b1783234":"!node --version","2d63140c":"!pip install kaggle-environments -U","a524869e":"from kaggle_environments import make","9574b9a2":"# \u74b0\u5883\u3092\u4f5c\u6210\u3002 \u4ee5\u4e0b\u306e\u3088\u3046\u306bseed \u3068 loglevel\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3002\u3082\u3057\u3001\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u30b7\u30fc\u30c9\u304c\u9078\u3070\u308c\u307e\u3059\u3002\n# loglevel \u306e\u8a2d\u5b9a\n#   0 : \u30c7\u30d5\u30a9\u30eb\u30c8\n#   1 : \u30a8\u30e9\u30fc\u7528\n#   2 : units \u306e \u885d\u7a81\u3084\u7121\u52b9\u306a\u30b3\u30de\u30f3\u30c9\u306a\u3069\u306e \u5bfe\u6226\u3078\u306e\u8b66\u544a\u7528 (\u63a8\u5968)  \n#   3 : \u60c5\u5831(info) \u30ec\u30d9\u30eb , 4 : \u3059\u3079\u3066\u3092\u8868\u793a (\u975e\u63a8\u5968) \n\n# annotations \u3092 True \u306b\u3059\u308b\u3068\u3001 \u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30b3\u30de\u30f3\u30c9\u304c\u63cf\u753b\u3055\u308c\u307e\u3059\n# debug \u3092 True \u306b\u3059\u308b\u3068\u3001 print\u6587\u304c\u8868\u793a\u3055\u308c\u307e\u3059\nenv = make(\"lux_ai_2021\", configuration={\"seed\": 562124210, \"loglevel\": 2, \"annotations\": True}, debug=True)","ba83e840":"# 2\u3064\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u9593\u3067\u306e\u5bfe\u6226\u3092\u5b9f\u884c\u3057\u307e\u3059\n# simple_agent\u304c \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\nsteps = env.run([\"simple_agent\", \"simple_agent\"])\n\n# \u30ea\u30d7\u30ec\u30a4\u3092 \u30a4\u30f3\u30e9\u30a4\u30f3\u8868\u793a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3002\u898b\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b \u5e45\u3068\u9ad8\u3055\u3092\u3067\u304d\u308b\u3060\u3051\u5927\u304d\u304f\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\n# \u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306aJupyter\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\/Kaggle\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u30e2\u30fc\u30c9\u4ee5\u5916\u3067\u8868\u793a\u3059\u308b\u3068\u3001\u4e00\u90e8\u304c\u5207\u308c\u305f\u8868\u793a\u306b\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\n# \u307e\u305f\u3001\u3053\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30bb\u30eb\u306e\u51fa\u529b\u3092\u9589\u3058\u3066\u304a\u304f\u3068\u3001\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306e\u52d5\u4f5c\u304c\u91cd\u304f\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\nenv.render(mode=\"ipython\", width=1200, height=800)","edb6316b":"# Kaggle \u306e Notebook\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\n!cp -r ..\/input\/lux-ai-2021\/* .\n# \u30ed\u30fc\u30ab\u30eb\u3067\u4f5c\u696d\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u3053\u304b\u3089 `simple\/lux` \u30d5\u30a9\u30eb\u30c0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9  https:\/\/github.com\/Lux-AI-Challenge\/Lux-Design-2021\/tree\/master\/kits\/python\n# \u307e\u305f\u3001Python\u30dc\u30c3\u30c8\u3092\u4f7f\u3063\u305f\u30ed\u30fc\u30ab\u30eb\u958b\u767a\u3067\u306f\u3001\u3053\u3053\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u6307\u793a\u306b\u5f93\u3046\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059","5a856e2f":"# kaggle-environments \u306e\u305f\u3081\u306e import\nfrom lux.game import Game\nfrom lux.game_map import Cell, RESOURCE_TYPES, Position\nfrom lux.constants import Constants\nfrom lux.game_constants import GAME_CONSTANTS\nfrom lux import annotate\nimport math\nimport sys\n\n# global\u5909\u6570\u3068\u3057\u3066 game_state\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067\u3001\u30bf\u30fc\u30f3\u3092\u307e\u305f\u3044\u3067\u3082\u72b6\u614b\u3092\u6301\u7d9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3001\u5e38\u306b\u521d\u671f\u5316\u3092\u3057\u76f4\u3059\u5fc5\u8981\u304c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\ngame_state = None\ndef agent(observation, configuration):\n    global game_state\n\n    ### \u7de8\u96c6\u3057\u306a\u3044\u90e8\u5206 ###\n    if observation[\"step\"] == 0:\n        game_state = Game()\n        game_state._initialize(observation[\"updates\"])\n        game_state._update(observation[\"updates\"][2:])\n        game_state.id = observation.player\n    else:\n        game_state._update(observation[\"updates\"])\n    \n    actions = []\n\n    ### AI\u306e\u30b3\u30fc\u30c9\u306f\u3053\u308c\u4ee5\u4e0b\u3067\u66f8\u304f! ### \n    player = game_state.players[observation.player]\n    opponent = game_state.players[(observation.player + 1) % 2]\n    width, height = game_state.map.width, game_state.map.height\n    \n    # \u30c7\u30d0\u30c3\u30af\u6587\u306e\u8ffd\u52a0\uff01\n    if game_state.turn == 0:\n        print(\"Agent is running!\", file=sys.stderr)\n        actions.append(annotate.circle(0, 0))\n    return actions","8d8a8184":"steps = env.run([agent, \"simple_agent\"])","baaa913a":"# \u3053\u306e\u30b9\u30cb\u30da\u30c3\u30c8\u306f\u3001\u30de\u30c3\u30d7\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u8cc7\u6e90 \u3092\u63a2\u3057\u30ea\u30b9\u30c8\u306b\u307e\u3068\u3081\u307e\u3059\u3002\ndef find_resources(game_state):\n    resource_tiles: list[Cell] = []\n    width, height = game_state.map_width, game_state.map_height\n    for y in range(height):\n        for x in range(width):\n            cell = game_state.map.get_cell(x, y)\n            if cell.has_resource():\n                resource_tiles.append(cell)\n    return resource_tiles\n\n# \u6b21\u306e\u30b9\u30cb\u30da\u30c3\u30c8\u306f\u3001\u5730\u56f3\u4e0a\u306e\u4f4d\u7f6e\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306b\u3001\u63a1\u6398\u53ef\u80fd\u306a\u6700\u3082\u8fd1\u3044\u8cc7\u6e90\u3092\u898b\u3064\u3051\u307e\u3059\ndef find_closest_resources(pos, player, resource_tiles):\n    closest_dist = math.inf\n    closest_resource_tile = None\n    for resource_tile in resource_tiles:\n        # \u7814\u7a76\u304c\u8db3\u308a\u305a\u63a1\u6398\u3067\u304d\u306a\u3044\u8cc7\u6e90\u306f \u30b9\u30ad\u30c3\u30d7\u3059\u308b\n        if resource_tile.resource.type == Constants.RESOURCE_TYPES.COAL and not player.researched_coal(): continue\n        if resource_tile.resource.type == Constants.RESOURCE_TYPES.URANIUM and not player.researched_uranium(): continue\n        dist = resource_tile.pos.distance_to(pos)\n        if dist < closest_dist:\n            closest_dist = dist\n            closest_resource_tile = resource_tile\n    return closest_resource_tile","510728b4":"# \u898b\u3064\u304b\u3063\u305f\u8cc7\u6e90\u3092\u3044\u304f\u3064\u304b\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff01\nresource_tiles = find_resources(game_state)\ncell = resource_tiles[0]\nprint(\"Cell at\", cell.pos, \"has\")\nprint(cell.resource.type, cell.resource.amount)","7c1ea57e":"#\u3000\u4e00\u756a\u8fd1\u304f\u306e\u8cc7\u6e90\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff01\ncell = find_closest_resources(Position(1, 1), game_state.players[0], resource_tiles)\nprint(\"Closest resource at\", cell.pos, \"has\")\nprint(cell.resource.type, cell.resource.amount)","66b74c28":"game_state = None\ndef agent(observation, configuration):\n    global game_state\n\n    ### \u7de8\u96c6\u3057\u306a\u3044\u90e8\u5206 ###\n    if observation[\"step\"] == 0:\n        game_state = Game()\n        game_state._initialize(observation[\"updates\"])\n        game_state._update(observation[\"updates\"][2:])\n        game_state.id = observation.player\n    else:\n        game_state._update(observation[\"updates\"])\n    \n    actions = []\n\n    ### AI\u306e\u30b3\u30fc\u30c9\u306f\u3053\u308c\u4ee5\u4e0b\u3067\u66f8\u304f! ### \n    player = game_state.players[observation.player]\n    opponent = game_state.players[(observation.player + 1) % 2]\n    width, height = game_state.map.width, game_state.map.height\n    \n    # \u30c7\u30d0\u30c3\u30af\u6587\u306e\u8ffd\u52a0\uff01\n    if game_state.turn == 0:\n        print(\"Agent is running!\", file=sys.stderr)\n\n    resource_tiles = find_resources(game_state)\n    \n    for unit in player.units:\n        # \u3082\u3057\u3001\u305d\u306e unit \u304c worker(\u8cc7\u6e90\u3092\u63a1\u6398\u3067\u304d\u308b) \u304b\u3064 \u305d\u306e\u30bf\u30fc\u30f3\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3067\u304d\u308b\u5834\u5408\n        if unit.is_worker() and unit.can_act():\n            # worker\u306e\u8ca8\u7269\u306b\u7a7a\u304d\u304c\u3042\u308b\u5834\u5408 \u306b\u306e\u307f \u63a1\u6398\u3057\u305f\u3044\n            if unit.get_cargo_space_left() > 0:\n                # \u3053\u306e unit \u306b\u6700\u3082\u8fd1\u3044\u8cc7\u6e90\u3092\u63a2\u3059\n                closest_resource_tile = find_closest_resources(unit.pos, player, resource_tiles)\n                if closest_resource_tile is not None:\n                    # \u3053\u306eunit\u3092\u6700\u3082\u8fd1\u3044\u8cc7\u6e90\u30bf\u30a4\u30eb\u306e\u65b9\u5411\u306b\u79fb\u52d5\u3055\u305b\u308b\u305f\u3081\u306e\u79fb\u52d5\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\n                    action = unit.move(unit.pos.direction_to(closest_resource_tile.pos))\n                    actions.append(action)\n    \n    return actions","9d67f9ed":"env = make(\"lux_ai_2021\", configuration={\"seed\": 562124210, \"loglevel\": 2, \"annotations\": True}, debug=True)\nsteps = env.run([agent, \"simple_agent\"])\nenv.render(mode=\"ipython\", width=1200, height=800)","4c89ce0a":"# \u6700\u3082\u8fd1\u3044\u8857\u306e\u30bf\u30a4\u30eb\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306e\u30b9\u30cb\u30da\u30c3\u30c8\ndef find_closest_city_tile(pos, player):\n    closest_city_tile = None\n    if len(player.cities) > 0:\n        closest_dist = math.inf\n        #\u90fd\u5e02\u306f\uff0c\u90fd\u5e02ID\u3092\u90fd\u5e02\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u305f\u8f9e\u66f8\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u3066\u304a\u308a\n        #\u305d\u306e\u4e2d\u306b\u306f\u6b21\u306e\u3088\u3046\u306aCityTiles\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u90fd\u5e02\u306e\u3059\u3079\u3066\u306eCityTiles\u306e\u60c5\u5831\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002\n        for k, city in player.cities.items():\n            for city_tile in city.citytiles:\n                dist = city_tile.pos.distance_to(pos)\n                if dist < closest_dist:\n                    closest_dist = dist\n                    closest_city_tile = city_tile\n    return closest_city_tile","67a6fc76":"game_state = None\ndef agent(observation, configuration):\n    global game_state\n\n    ### \u7de8\u96c6\u3057\u306a\u3044\u90e8\u5206 ###\n    if observation[\"step\"] == 0:\n        game_state = Game()\n        game_state._initialize(observation[\"updates\"])\n        game_state._update(observation[\"updates\"][2:])\n        game_state.id = observation.player\n    else:\n        game_state._update(observation[\"updates\"])\n    \n    actions = []\n\n    ### AI\u306e\u30b3\u30fc\u30c9\u306f\u3053\u308c\u4ee5\u4e0b\u3067\u66f8\u304f! ### \n    player = game_state.players[observation.player]\n    opponent = game_state.players[(observation.player + 1) % 2]\n    width, height = game_state.map.width, game_state.map.height\n    \n    # \u30c7\u30d0\u30c3\u30af\u6587\u306e\u8ffd\u52a0\uff01\n    if game_state.turn == 0:\n        print(\"Agent is running!\", file=sys.stderr)\n\n    resource_tiles = find_resources(game_state)\n    \n    for unit in player.units:\n        # \u3082\u3057\u3001\u305d\u306e unit \u304c worker(\u8cc7\u6e90\u3092\u63a1\u6398\u3067\u304d\u308b) \u304b\u3064 \u305d\u306e\u30bf\u30fc\u30f3\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3067\u304d\u308b\u5834\u5408\n        if unit.is_worker() and unit.can_act():\n            # worker\u306e\u8ca8\u7269\u306b\u7a7a\u304d\u304c\u3042\u308b\u5834\u5408 \u306b\u306e\u307f \u63a1\u6398\u3057\u305f\u3044\n            if unit.get_cargo_space_left() > 0:\n                # \u3053\u306e unit \u306b\u6700\u3082\u8fd1\u3044\u8cc7\u6e90\u3092\u63a2\u3059\n                closest_resource_tile = find_closest_resources(unit.pos, player, resource_tiles)\n                if closest_resource_tile is not None:\n                    # \u3053\u306eunit\u3092\u6700\u3082\u8fd1\u3044\u8cc7\u6e90\u30bf\u30a4\u30eb\u306e\u65b9\u5411\u306b\u79fb\u52d5\u3055\u305b\u308b\u305f\u3081\u306e\u79fb\u52d5\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\n                    action = unit.move(unit.pos.direction_to(closest_resource_tile.pos))\n                    actions.append(action)\n            else:\n                # \u6700\u3082\u8fd1\u3044citytile\u3092\u898b\u3064\u3051\u3001\u305d\u3053\u306b\u5411\u304b\u3063\u3066\u30e6\u30cb\u30c3\u30c8\u3092\u79fb\u52d5\u3055\u305b\u3001CityTile\u306b\u8cc7\u6e90\u3092\u6295\u4e0b\u3057\u3066\u90fd\u5e02\u306b\u71c3\u6599\u3092\u4f9b\u7d66\u3057\u307e\u3059\n                closest_city_tile = find_closest_city_tile(unit.pos, player)\n                if closest_city_tile is not None:\n                    # \u3053\u306eunit\u3092\u6700\u3082\u8fd1\u3044\u8cc7\u6e90\u30bf\u30a4\u30eb\u306e\u65b9\u5411\u306b\u79fb\u52d5\u3055\u305b\u308b\u305f\u3081\u306e\u79fb\u52d5\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\n                    action = unit.move(unit.pos.direction_to(closest_city_tile.pos))\n                    actions.append(action)\n    \n    return actions","0c0f6c50":"env = make(\"lux_ai_2021\", configuration={\"seed\": 562124210, \"loglevel\": 2, \"annotations\": True}, debug=True)\nsteps = env.run([agent, \"simple_agent\"])\nenv.render(mode=\"ipython\", width=1200, height=800)","1db608ec":"%%writefile agent.py\n# kaggle-environments \u306e\u305f\u3081\u306e import\nfrom lux.game import Game\nfrom lux.game_map import Cell, RESOURCE_TYPES\nfrom lux.constants import Constants\nfrom lux.game_constants import GAME_CONSTANTS\nfrom lux import annotate\nimport math\nimport sys\n\n### helper\u95a2\u6570\u306e\u5b9a\u7fa9\n## \u3053\u306e\u30b9\u30cb\u30da\u30c3\u30c8\u306f\u3001\u30de\u30c3\u30d7\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u8cc7\u6e90\u3092\u63a2\u3057\u3001\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b\u30ea\u30b9\u30c8\u306b\u307e\u3068\u3081\u307e\u3059\u3002\ndef find_resources(game_state):\n    resource_tiles: list[Cell] = []\n    width, height = game_state.map_width, game_state.map_height\n    for y in range(height):\n        for x in range(width):\n            cell = game_state.map.get_cell(x, y)\n            if cell.has_resource():\n                resource_tiles.append(cell)\n    return resource_tiles\n\n# \u6b21\u306e\u30b9\u30cb\u30da\u30c3\u30c8\u306f\u3001\u5730\u56f3\u4e0a\u306e\u4f4d\u7f6e\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306b\u3001\u63a1\u6398\u53ef\u80fd\u306a\u6700\u3082\u8fd1\u3044\u8cc7\u6e90\u3092\u898b\u3064\u3051\u307e\u3059\ndef find_closest_resources(pos, player, resource_tiles):\n    closest_dist = math.inf\n    closest_resource_tile = None\n    for resource_tile in resource_tiles:\n        # \u7814\u7a76\u304c\u8db3\u308a\u305a\u63a1\u6398\u3067\u304d\u306a\u3044\u8cc7\u6e90\u306f \u30b9\u30ad\u30c3\u30d7\u3059\u308b\n        if resource_tile.resource.type == Constants.RESOURCE_TYPES.COAL and not player.researched_coal(): continue\n        if resource_tile.resource.type == Constants.RESOURCE_TYPES.URANIUM and not player.researched_uranium(): continue\n        dist = resource_tile.pos.distance_to(pos)\n        if dist < closest_dist:\n            closest_dist = dist\n            closest_resource_tile = resource_tile\n    return closest_resource_tile\n\ndef find_closest_city_tile(pos, player):\n    closest_city_tile = None\n    if len(player.cities) > 0:\n        closest_dist = math.inf\n        #\u90fd\u5e02\u306f\uff0c\u90fd\u5e02ID\u3092\u90fd\u5e02\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u305f\u8f9e\u66f8\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u3066\u304a\u308a\n        #\u305d\u306e\u4e2d\u306b\u306f\u6b21\u306e\u3088\u3046\u306aCityTiles\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u90fd\u5e02\u306e\u3059\u3079\u3066\u306eCityTiles\u306e\u60c5\u5831\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002\n        for k, city in player.cities.items():\n            for city_tile in city.citytiles:\n                dist = city_tile.pos.distance_to(pos)\n                if dist < closest_dist:\n                    closest_dist = dist\n                    closest_city_tile = city_tile\n    return closest_city_tile\n\ngame_state = None\ndef agent(observation, configuration):\n    global game_state\n\n    ### \u7de8\u96c6\u3057\u306a\u3044\u90e8\u5206 ###\n    if observation[\"step\"] == 0:\n        game_state = Game()\n        game_state._initialize(observation[\"updates\"])\n        game_state._update(observation[\"updates\"][2:])\n        game_state.id = observation.player\n    else:\n        game_state._update(observation[\"updates\"])\n    \n    actions = []\n\n    ### AI\u306e\u30b3\u30fc\u30c9\u306f\u3053\u308c\u4ee5\u4e0b\u3067\u66f8\u304f! ### \n    player = game_state.players[observation.player]\n    opponent = game_state.players[(observation.player + 1) % 2]\n    width, height = game_state.map.width, game_state.map.height\n\n    resource_tiles = find_resources(game_state)\n    \n    for unit in player.units:\n        # \u3082\u3057\u3001\u305d\u306e unit \u304c worker(\u8cc7\u6e90\u3092\u63a1\u6398\u3067\u304d\u308b) \u304b\u3064 \u305d\u306e\u30bf\u30fc\u30f3\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3067\u304d\u308b\u5834\u5408\n        if unit.is_worker() and unit.can_act():\n            # worker\u306e\u8ca8\u7269\u306b\u7a7a\u304d\u304c\u3042\u308b\u5834\u5408 \u306b\u306e\u307f \u63a1\u6398\u3057\u305f\u3044\n            if unit.get_cargo_space_left() > 0:\n                # \u3053\u306e unit \u306b\u6700\u3082\u8fd1\u3044\u8cc7\u6e90\u3092\u63a2\u3059\n                closest_resource_tile = find_closest_resources(unit.pos, player, resource_tiles)\n                if closest_resource_tile is not None:\n                    # \u3053\u306eunit\u3092\u6700\u3082\u8fd1\u3044\u8cc7\u6e90\u30bf\u30a4\u30eb\u306e\u65b9\u5411\u306b\u79fb\u52d5\u3055\u305b\u308b\u305f\u3081\u306e\u79fb\u52d5\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\n                    action = unit.move(unit.pos.direction_to(closest_resource_tile.pos))\n                    actions.append(action)\n            else:\n                # \u6700\u3082\u8fd1\u3044citytile\u3092\u898b\u3064\u3051\u3001\u305d\u3053\u306b\u5411\u304b\u3063\u3066\u30e6\u30cb\u30c3\u30c8\u3092\u79fb\u52d5\u3055\u305b\u3001CityTile\u306b\u8cc7\u6e90\u3092\u6295\u4e0b\u3057\u3066\u90fd\u5e02\u306b\u71c3\u6599\u3092\u4f9b\u7d66\u3057\u307e\u3059\n                closest_city_tile = find_closest_city_tile(unit.pos, player)\n                if closest_city_tile is not None:\n                    # \u3053\u306eunit\u3092\u6700\u3082\u8fd1\u3044\u8cc7\u6e90\u30bf\u30a4\u30eb\u306e\u65b9\u5411\u306b\u79fb\u52d5\u3055\u305b\u308b\u305f\u3081\u306e\u79fb\u52d5\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\n                    action = unit.move(unit.pos.direction_to(closest_city_tile.pos))\n                    actions.append(action)\n    \n    return actions","df8b6d04":"!tar -czf submission.tar.gz *","7064c0ad":"import json\nreplay = env.toJSON()\nwith open(\"replay.json\", \"w\") as f:\n    json.dump(replay, f)","979540cf":"\u3055\u3066\u3001\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u306b\u6700\u3082\u8fd1\u3044\u8cc7\u6e90\u3092\u63a2\u3059\u30b3\u30fc\u30c9\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u3001\u30e6\u30cb\u30c3\u30c8\u306b\u6700\u3082\u8fd1\u3044\u8cc7\u6e90\u306b\u884c\u3063\u3066\u63a1\u6398\u3059\u308b\u3088\u3046\u306b\u6307\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u7a7a\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u30e6\u30cb\u30c3\u30c8\u3092\u30eb\u30fc\u30d7\u3055\u305b\u3001\u8cc7\u6e90\u306b\u5411\u304b\u3063\u3066\u79fb\u52d5\u3055\u305b\u308b\u30eb\u30fc\u30d7\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002","6b1f0829":"## Submit\n\nsubmit \u306e \u624b\u9806\n\n1. \/kaggle\/working \u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304d\u3001submission.tar.gz \u3092\u898b\u3064\u3051\u3066\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\n\n2. https:\/\/www.kaggle.com\/c\/lux-ai-2021\/ \u306e\u300cMySubmissions\u300d\u30bf\u30d6\u306b\u79fb\u52d5\u3057\u3066\u3001\u6295\u7a3f\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\n\n### \u6ce8\u610f\u70b9\n\n- \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u81ea\u5206\u81ea\u8eab\u306b\u5bfe\u3057\u3066\u691c\u8a3c\u7528\u306e\u5bfe\u6226\u3092\u884c\u3044\u3001\u6210\u529f\u3059\u308b\u3068\u4ed6\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u63d0\u51fa\u7269\u3068\u81ea\u52d5\u7684\u306b\u30de\u30c3\u30c1\u30f3\u30b0\u3055\u308c\u307e\u3059\n\n- \u65b0\u3057\u3044\u6295\u7a3f\u306f\u3001\u53e4\u3044\u6295\u7a3f\u3088\u308a\u3082\u512a\u5148\u7684\u306b\u30b2\u30fc\u30e0\u306b\u63a1\u7528\u3055\u308c\u307e\u3059\n\n- 1\u65e5\u306bsubmit\u3067\u304d\u308b\u6570\u306f5\u3064\u3068\u5236\u9650\u304c\u3042\u308b\u306e\u3067\u3001submission\u3059\u308b\u524d\u306b\u30ed\u30fc\u30ab\u30eb\u3067\u30dc\u30c3\u30c8\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\n","fd2d9082":"\n\u3055\u3066\u3001\u4f55\u304c\u8d77\u3053\u3063\u305f\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u8a66\u5408\u3092\u3057\u305f\u3060\u3051\u3067\u3059\u3088 :)\n\n\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc\u306b\u306f\u3001\u30af\u30aa\u30ea\u30c6\u30a3\u30fb\u30aa\u30d6\u30fb\u30e9\u30a4\u30d5\u6a5f\u80fd\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u3001\u30ea\u30d7\u30ec\u30a4\u3092\u898b\u308b\u3068\u304d\u306fkaggle\u306e\u7af6\u6280\u30da\u30fc\u30b8\u306b\u3001\u30ea\u30d7\u30ec\u30a4\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3046\u3068\u304d\u306f\u30aa\u30f3\u30e9\u30a4\u30f3\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc\u306b\u3082\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u30ea\u30d7\u30ec\u30a4\u30d3\u30e5\u30fc\u30a2\u30fc\u304c\u9045\u3044\u3068\u611f\u3058\u308b\u5834\u5408\u306f\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u54c1\u8cea\u3092\u4e0b\u3052\u308b\u3053\u3068\u306b\u52a0\u3048\u3066\u3001\u30ed\u30fc\u30ab\u30eb\u30b3\u30d4\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001https:\/\/github.com\/Lux-AI-Challenge\/LuxViewer2021\n\n\u3053\u306e\u6642\u70b9\u3067\u3001[\u30b2\u30fc\u30e0\u306e\u4ed5\u69d8\u66f8](https:\/\/www.lux-ai.org\/specs-2021)\u3092\u3082\u3046\u5c11\u3057\u8aad\u3093\u3067\u3001\u30b2\u30fc\u30e0\u306b\u52dd\u3064\u305f\u3081\u306e\u30dc\u30c3\u30c8\u306e\u4f5c\u308a\u65b9\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002","ef8da10d":"\u6b21\u306b\u3001`kaggle_environments`\u30d1\u30c3\u30b1\u30fc\u30b8\u304b\u3089`make`\u95a2\u6570\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059","cc0dc99c":"## \u8ffd\u52a0\u3067\u30c1\u30a7\u30c3\u30af\u3059\u3079\u304d\u3053\u3068\n\n### 1. Bot API\u306b\u3064\u3044\u3066\n\nBot API \u306b\u3064\u3044\u3066\u78ba\u8a8d\u3092\u884c\u3046 \u2192 https:\/\/github.com\/Lux-AI-Challenge\/Lux-Design-2021\/tree\/master\/kits\n\n\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u30b9\u30bf\u30fc\u30bf\u30fc\u30ad\u30c3\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3063\u3066\u3067\u304d\u308b\u3053\u3068\u3084\u3001\u30ea\u30d7\u30ec\u30a4\u306b\u76f4\u63a5\u6ce8\u91c8\u3092\u52a0\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b annotation debug commands \u306e\u4f7f\u3044\u65b9\u304c\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059 (\u7dda\u3092\u5f15\u3044\u305f\u308a\u3001\u5186\u3092\u63cf\u3044\u305f\u308a \u306a\u3069)\n\n### 2. online replay viewer\n\u5148\u307b\u3069\u4f5c\u6210\u3057\u305fJSON\u30d5\u30a1\u30a4\u30eb\u306e\u3088\u3046\u306a\u30ea\u30d7\u30ec\u30a4\u30d5\u30a1\u30a4\u30eb\u3092\u3001online replay viewer \u3067\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 \u2192 https:\/\/2021vis.lux-ai.org\/\n\n### 3.\u30ed\u30fc\u30ab\u30eb\u30d0\u30fc\u30b8\u30e7\u30f3 (replay viewer)\nreplay viewer \u306e \u30ed\u30fc\u30ab\u30eb(\u9ad8\u901f)\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u3053\u3061\u3089\u304b\u3089 \u2192 https:\/\/github.com\/Lux-AI-Challenge\/Lux-Viewer-2021","e010f497":"## \u63d0\u6848\u30fb\u6226\u7565\n\n\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306b\u306f\u3001\u6539\u5584\u3059\u3079\u304d\u70b9\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u3002\n\n\u305d\u306e\u4e00\u90e8\u306b\u3064\u3044\u3066\u4ee5\u4e0b\u3067\u7d39\u4ecb\u3057\u307e\u3059\uff01\n\n- \u90fd\u5e02\u5efa\u8a2d\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u65b0\u3057\u3044\u90fd\u5e02\u3092\u5efa\u8a2d\u3057\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u65b0\u3057\u3044\u30e6\u30cb\u30c3\u30c8\u3092\u5efa\u8a2d\u3059\u308b\n- \u90fd\u5e02\u304c\u30bf\u30fc\u30f3\u3054\u3068\u306b\u8abf\u67fb\u3092\u884c\u3044\u3001\u65b0\u3057\u3044\u8cc7\u6e90\u3092\u30a2\u30f3\u30ed\u30c3\u30af\u3059\u308b\n- \u885d\u7a81\u306e\u306a\u3044\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u3001\u30e6\u30cb\u30c3\u30c8\u304c\u76ee\u6a19\u306b\u5411\u304b\u3063\u3066\u79fb\u52d5\u3059\u308b\u969b\u306b\u3001\u30e6\u30cb\u30c3\u30c8\u540c\u58eb\u306e\u9593\u3092\u30b9\u30e0\u30fc\u30ba\u306b\u79fb\u52d5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n- \u76f8\u624b\u306eCityTitles\u306e\u8fd1\u304f\u3067\u8cc7\u6e90\u3092\u63a1\u6398\u3059\u308b\u3053\u3068\u3067\u3001\u76f8\u624b\u304c\u8cc7\u6e90\u3092\u5165\u624b\u3057\u306b\u304f\u304f\u3067\u304d\u308b\n- \u30ab\u30fc\u30c8\u3092\u4f7f\u3063\u3066\u3001\u6728\u6750\u3001\u77f3\u70ad\u3001\u30a6\u30e9\u30f3\u306a\u3069\u306e\u8cc7\u6e90\u3092\u9060\u304f\u306e\u90fd\u5e02\u304b\u3089\u3001\u5fc5\u8981\u3068\u3057\u3066\u3044\u308b\u90fd\u5e02\u306b\u5c4a\u3051\u308b\n- \u52b4\u50cd\u8005\u30e6\u30cb\u30c3\u30c8\u3092\u76f8\u624b\u306e\u9053\u8def\u306b\u9001\u308a\u8fbc\u307f\u3001\u7565\u596a\u3059\u308b\u3053\u3068\u3067\u76f8\u624b\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u52d5\u304d\u3092\u920d\u3089\u305b\u307e\u3059\n- \u3088\u308a\u591a\u304f\u306e\u90fd\u5e02\u3092\u5efa\u8a2d\u3057\u3001\u6301\u7d9a\u53ef\u80fd\u306a\u71c3\u6599\u3092\u5f97\u308b\u305f\u3081\u306b\u3001\u68ee\u6797\u3092\u518d\u751f\u3055\u305b\u308b\u524d\u306b\u3069\u308c\u3060\u3051\u63a1\u6398\u3059\u308b\u304b\u3092\u6700\u9069\u5316\u3059\u308b","eb5ee3fc":"## Submission \u3092\u4f5c\u6210\nmain.py\uff08\u3068agent.py\uff09\u3092\u4e00\u756a\u4e0a\u306e\u968e\u5c64\u306b\u304a\u3044\u305ftar.gz\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u3067\u3059\u3002\n\n\u305d\u3057\u3066\u3001\u4f5c\u6210\u3067\u304d\u305f\u3089\u305d\u308c\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3092\u3057\u307e\u3059\u3002","611b7c94":"\u3055\u3066\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u8cc7\u6e90\u3092\u898b\u3064\u3051\u3066\u96c6\u3081\u305f\u306e\u306f\u3044\u3044\u3067\u3059\u304c\u3001\u30b7\u30c6\u30a3\u30bf\u30a4\u30eb\u304c\u95c7\u306b\u98f2\u307e\u308c\u3066\u3057\u307e\u3063\u305f\uff01\uff1f\n\n\u3069\u3046\u3059\u308b\uff1f\u30e6\u30cb\u30c3\u30c8\u304c\u8cc7\u6e90\u3092\u904b\u3079\u308b\u91cf\u306f\u9650\u3089\u308c\u3066\u3044\u3066\u3001\u305d\u308c\u4ee5\u4e0a\u96c6\u3081\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u81ea\u5206\u306e\u8857\u3092\u5b88\u308b\u305f\u3081\u306b\u306f\u3001\u81ea\u5206\u306e\u30e6\u30cb\u30c3\u30c8\u3092\u305d\u306e\u8857\u306b\u3042\u308bCityTile\u306e\u4e0a\u306b\u79fb\u52d5\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002(\u90fd\u5e02\u306fCityTile\u304c\u3064\u306a\u304c\u3063\u3066\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u3092\u601d\u3044\u51fa\u3057\u3066\u304f\u3060\u3055\u3044)","b2ca90e2":"## Scratch \u304b\u3089\u306e\u69cb\u7bc9\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u3001\u4f55\u3082\u3057\u306a\u3044\u7a7a\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306b\u5bfe\u3057\u3066\u5fc5\u8981\u306a\u3082\u306e\u3067\u3059\u3002","8463b73e":"## CLI Tool\n\n\u5bfe\u6226\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u308b\u5225\u306e CLI\u30c4\u30fc\u30eb\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nJupyter Notebook\u3092\u4f7f\u3063\u3066\u3044\u308b\u4eba\u306f\u3001\u3053\u306e\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u3092\u4f7f\u3046\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\n\u305d\u308c\u4ee5\u5916\u306e\u4eba (python\u3092\u4f7f\u3046\u4eba\u3082\u542b\u3081) \u306f\u3001https:\/\/github.com\/Lux-AI-Challenge\/Lux-Design-2021 \u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\nCLI\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u4ed6\u306e\u5229\u70b9\u3068\u3057\u3066\u306f\u3001\u3088\u308a\u7d30\u304b\u306a \"stateless\"\u306e\u30ea\u30d7\u30ec\u30a4\u3092\u751f\u6210\u3057\u3001\u69d8\u3005\u306a\u30e9\u30f3\u30ad\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u30e9\u30f3\u30af\u4ed8\u3051\u3055\u308c\u305f\u8907\u6570\u306e\u30dc\u30c3\u30c8\u306e\u30df\u30cb\u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3053\u308d\u306b\u3042\u308a\u307e\u3059\uff01","b3a3c624":"\u751f\u304d\u5ef6\u3073\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff01\n\u3053\u308c\u3067\u3001\u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9\u306b\u6e96\u5099\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u3001\u3053\u308c\u307e\u3067\u306b\u4f5c\u3063\u305f\u3082\u306e\u30921\u3064\u306b\u307e\u3068\u3081\u3001\u30b3\u30f3\u30da\u306e\u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9\u306b\u63d0\u51fa\u3057\u307e\u3059\u3002","b8d6196c":"\u3067\u306f\u3001\u30b5\u30f3\u30d7\u30eb\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3068\u5bfe\u6226\u3057\u305f\u8a66\u5408\u3092\u898b\u3066\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u8cc7\u6e90\u306b\u5411\u304b\u3063\u3066\u79fb\u52d5\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30ea\u30d7\u30ec\u30a4\u3092\u898b\u308b\u3068\u3001\u30aa\u30ec\u30f3\u30b8\u8272\u306e\u30e6\u30cb\u30c3\u30c8\uff08\u30c1\u30fc\u30e00\uff09\u304c\u8fd1\u304f\u306e\u68ee\u306b\u5411\u304b\u3063\u3066\u79fb\u52d5\u3057\u3001\u6728\u6750\u3092\u96c6\u3081\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002","f7fe308e":"`make` \u95a2\u6570\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306b\u30b2\u30fc\u30e0\u3092\u5b9f\u884c\u3067\u304d\u308b\u74b0\u5883\u3092\u4f5c\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\n\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3068\u306f\u3001\u30b2\u30fc\u30e0\u4e0a\u3067\u5b9f\u884c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u6e08\u307f\u306e\u30dc\u30c3\u30c8\u3068\u306e\u3053\u3068\u3092\u6307\u3057\u307e\u3059\u3002\n\n\u74b0\u5883\u3092\u4f5c\u6210\u3059\u308b\u3060\u3051\u3067\u306f\u306a\u304f\u3001episode \u306e \u30a8\u30dd\u30c3\u30af\u6570 (\u4e0a\u9650\u306f361) \u3084\u30b7\u30fc\u30c9\u306a\u3069\u306e \u7279\u5225\u306a\u8a2d\u5b9a\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u305d\u308c\u3067\u306f\u3001`make`\u3092\u4f7f\u3063\u3066\u74b0\u5883\u3092\u4f5c\u308a Episode\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff01 (\u3053\u3053\u3067\u306f\u3001\u304a\u3082\u3057\u308d\u3044\u306e\u3067 562124210 \u3068\u3044\u3046\u30b7\u30fc\u30c9\u3092\u4f7f\u3044\u307e\u3059)","62a72967":"## \u304a\u308f\u308a\u306b\nLux AI Season 1 Jupyter Notebook Quickstart \u306b\u3064\u3044\u3066\u65e5\u672c\u8a9e\u7248\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3057\u305f\u3002\u3082\u3057\u8a33\u3084\u89e3\u91c8\u7b49\u306b\u3064\u3044\u3066\u3001\u3054\u6307\u6458\u30fb\u3054\u610f\u898b\u7b49\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\n","768c7268":"\u307e\u305f\u3001Kaggle\u306e\u74b0\u5883\u3082\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059","f8e158c4":"\u3053\u306e\u95a2\u6570\u3092\u4f7f\u3063\u3066\u3001\u591c\u3092\u4e57\u308a\u5207\u308b\u6e96\u5099\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u66f8\u304d\u63db\u3048\u3066\u3001\u8377\u7269\u3092\u6e80\u8f09\u3057\u305funit\u304c\u6700\u3082\u8fd1\u3044\u8857\u306e\u30bf\u30a4\u30eb\u306b\u5411\u304b\u3044\u3001\u8857\u306b\u71c3\u6599\u3092\u4f9b\u7d66\u3059\u308b\u305f\u3081\u306b\u8cc7\u6e90\u3092\u6295\u4e0b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002","c07683a1":"## \u3053\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306b\u3064\u3044\u3066\n\u3053\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306f\u3001\u516c\u5f0f\u304b\u3089\u516c\u958b\u3055\u308c\u3066\u3044\u308b Lux AI Season 1 Jupyter Notebook Tutorial \u306e\u65e5\u672c\u8a9e\u3078\u306e\u7ffb\u8a33 + \u88dc\u8db3\u60c5\u5831\u3084\u89e3\u91c8\u3092\u52a0\u3048\u305f\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u3067\u3059\u3002\n\n\n# Lux AI Season 1 Jupyter Notebook \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\n\nLux AI Season 1 \u3078\u3088\u3046\u3053\u305d!\n\n\u3053\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306f\u3001Jupyter Notebooks\u3068`kaggle-environments`\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3063\u3066\u30dc\u30c3\u30c8\u3092\u958b\u767a\u3059\u308b\u305f\u3081\u306e\u57fa\u672c\u7684\u306a\u8a2d\u5b9a\u3067\u3059\u3002\n\nJupyter Notebooks\u3092\u4f7f\u308f\u306a\u3044\u4eba \u3084 \u4ed6\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3092\u4f7f\u7528\u3059\u308b\u4e88\u5b9a\u306e\u4eba\u306f\u3001\u3053\u3061\u3089\u306e[Github](https:\/\/github.com\/Lux-AI-Challenge\/Lux-Design-2021)\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u5bfe\u5fdc\u8a00\u8a9e\n\n- Python\n- JavaScript\n- C++\n- Java\n- Typescript\n- Kotlin\n\n\u4ee5\u4e0b\u306f\u91cd\u8981\u306a\u30ea\u30f3\u30af\u3067\u3059\u3002\n\n\u30b3\u30f3\u30da\u306e\u30da\u30fc\u30b8: https:\/\/www.kaggle.com\/c\/lux-ai-2021\/\n\nOnline Visualizer: https:\/\/2021vis.lux-ai.org\/\n\nLux AI\u30b3\u30f3\u30da\u306e\u4ed5\u69d8: \u4eca\u56de\u306e\u30b3\u30f3\u30da\u306e\u30b2\u30fc\u30e0\u30eb\u30fc\u30eb(\u52dd\u5229\u6761\u4ef6\u306a\u3069\u3092\u542b\u3081)\u304c\u7d30\u304b\u304f\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u8aad\u3080\u3068\u30b2\u30fc\u30e0\u5185\u5bb9\u304c\u628a\u63e1\u3057\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\uff01\n\nhttps:\/\/www.lux-ai.org\/specs-2021\n\nGithub: https:\/\/github.com\/Lux-AI-Challenge\/Lux-Design-2021\n\nBot API: https:\/\/github.com\/Lux-AI-Challenge\/Lux-Design-2021\/tree\/master\/kits\n\n\u3082\u3057Discode\u30b5\u30fc\u30d0\u30fc\u306b\u53c2\u52a0\u3057\u3066\u3044\u306a\u3044\u4eba\u304c\u3044\u308c\u3070\u3001\u53c2\u52a0\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002 (\u30ea\u30f3\u30af: https:\/\/discord.gg\/aWJt3UAcgn )\n\n\u307e\u305f\u3001\u6700\u4f4e\u3067\u3082 Kaggle\u306e \u30d5\u30a9\u30fc\u30e9\u30e0 (https:\/\/www.kaggle.com\/c\/lux-ai-2021\/discussion) \u306f\u30d5\u30a9\u30fc\u30ed\u30fc\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30eb\u30fc\u30eb\u306e\u5909\u66f4\u3001\u30a4\u30d9\u30f3\u30c8\u3001\u30b9\u30dd\u30f3\u30b5\u30fc\u304b\u3089\u306e\u7d39\u4ecb\u306a\u3069\u3001\u91cd\u8981\u306a\u304a\u77e5\u3089\u305b\u3092\u6295\u7a3f\u3057\u307e\u3059\uff01\n\n\u305d\u308c\u3067\u306f\u3001\u59cb\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff01\n\n## \u524d\u63d0\u6761\u4ef6\n\nPython \u3068 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u57fa\u672c\u7684\u306a\u77e5\u8b58\u304c\u3042\u308b\u3053\u3068\u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30b2\u30fc\u30e0\u306e\u4ed5\u69d8\u306b\u3064\u3044\u3066\u306f\u77e5\u3089\u306a\u304f\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\u30b2\u30fc\u30e0\u306e\u4ed5\u69d8\u306b\u3064\u3044\u3066\u306b\u306f\u3053\u3061\u3089\u306e\u30ea\u30f3\u30af\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff01 https:\/\/www.lux-ai.org\/specs-2021\n\n## \u57fa\u672c\u8a2d\u5b9a\n\u307e\u305a\u3001\u78ba\u8a8d\u3059\u3079\u304d\u3053\u3068\u306f **Node.js v12\u4ee5\u4e0a** \u306e\u74b0\u5883\u304c\u3042\u308b\u304b\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\n\u3053\u306e\u5927\u4f1a\u306e\u30a8\u30f3\u30b8\u30f3\u306fNode.js\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u305f\u3081\u5fc5\u9808\u3068\u306a\u308a\u307e\u3059\u3002(\u7d20\u6674\u3089\u3057\u3044visualizer \u3092\u542b\u3080\u591a\u304f\u306e\u7406\u7531\u304b\u3089)\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306f[\u3053\u3061\u3089](https:\/\/nodejs.org\/en\/download\/)\u304b\u3089\u53ef\u80fd\u3067\u3059\u3002\n\n\u9069\u5207\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nKaggle Notebook\u3060\u3068\u3001v15.14.0\u306a\u306e\u3067\u3001\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u307e\u3059\u306d\uff01\n","bb431934":"\u6b8b\u5ff5\u306a\u304c\u3089\u3001\u305d\u3046\u7c21\u5358\u306b\u306f\u3044\u304d\u307e\u305b\u3093\u3002\u3053\u3053\u307e\u3067\u3067\u4f5c\u3063\u305f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u6700\u7d42\u7684\u306b\u8ca0\u3051\u3066\u3057\u307e\u3044\u3001\u3059\u3079\u3066\u306e\u30e6\u30cb\u30c3\u30c8\u3068\u90fd\u5e02\u304c\u95c7\u306b\u843d\u3061\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u8cc7\u6e90\u3092\u898b\u3064\u3051\u3066\u3001\u96c6\u3081\u308b\u306e\u3092\u52a9\u3051\u308b\u3088\u3046\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u305a\u3001\u7a7a\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3067\u30b2\u30fc\u30e0\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u305d\u3046\u3059\u308b\u3068\u3001`game_state`\u5909\u6570\u306b\u60c5\u5831\u304c\u5165\u308a\u307e\u3059\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001\u8cc7\u6e90\u3092\u63a2\u3059\u65b9\u6cd5\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002"}}