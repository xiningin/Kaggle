{"cell_type":{"2caa0bf0":"code","ed41e540":"code","8484c0f8":"code","537ae8f4":"code","23b84ec2":"code","b91570e6":"code","2ae849b0":"code","27823031":"code","37a460e1":"code","ca6a9aea":"code","37fce4a0":"code","1702cedd":"code","51a189f1":"code","018ef665":"code","4d9ac662":"code","94e2233c":"code","c3a76ac4":"code","0b830536":"code","1ca6ecfa":"code","28a40d67":"code","5f69f344":"code","1ec3c086":"code","c9fc677c":"code","d8b31fd9":"markdown","049e8f73":"markdown","d67aa99c":"markdown","aa82c3d0":"markdown","fb4ae716":"markdown","738bba73":"markdown","e52c3478":"markdown","fb6d0255":"markdown","eaefa5bb":"markdown","422a06e2":"markdown","421e3abc":"markdown","4f054fd9":"markdown","44509fa1":"markdown","fba3b2b2":"markdown","e602abe5":"markdown","9c796f70":"markdown","f338b6e0":"markdown"},"source":{"2caa0bf0":"!pip install -U ppscore","ed41e540":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\nimport ppscore as pps\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nplt.rcParams['figure.figsize'] = 8, 5\nplt.style.use(\"fivethirtyeight\")\npd.options.plotting.backend = \"plotly\"","8484c0f8":"data = pd.read_csv('..\/input\/ipldata\/matches.csv')\ntop_5_teams = ['Mumbai Indians', 'Kolkata Knight Riders', 'Chennai Super Kings', 'Royal Challengers Bangalore', 'Kings XI Punjab']\ndf = data[['season','winner']].copy().dropna()\ndf['win_count'] = df.groupby(['season','winner'])['winner'].transform('count')\nperc = df.loc[:,[\"season\",\"winner\",'win_count']]\nperc = perc.drop_duplicates()\nperc = perc.loc[perc['winner'].isin(top_5_teams)]\nperc = perc.sort_values(\"season\")\nfig=px.bar(perc,x='winner', y=\"win_count\", animation_frame=\"season\", \n           animation_group=\"winner\", color=\"winner\", hover_name=\"winner\")\nfig.update_layout(title='Wins by top teams per year', showlegend=False)\nfig.show()","537ae8f4":"data = pd.read_csv('..\/input\/ipldata\/deliveries.csv')\nmatch = pd.read_csv('..\/input\/ipldata\/matches.csv')","23b84ec2":"fig = data.nunique().reset_index().plot(kind='bar', x='index', y=0, color=0)\nfig.update_layout(title='Unique Value Count Plot', xaxis_title='Variables', yaxis_title='Unique value count')\nfig.show()","b91570e6":"fig = data.isnull().sum().reset_index().plot(kind='bar', x='index', y=0)\nfig.update_layout(title='Missing Value Plot', xaxis_title='Variables', yaxis_title='Missing value count')\nfig.show()","2ae849b0":"df = data['dismissal_kind'].value_counts().reset_index()\ndf.columns = ['Dismissal Kind', 'Count']\nfig = px.pie(df, values='Count', names='Dismissal Kind',title='Most common ways of dismissal in IPL 2019')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","27823031":"sns.heatmap(data.corr())\nplt.title('Correelation in data')\nplt.show()","37a460e1":"matrix_df = pps.matrix(data)[['x', 'y', 'ppscore']].pivot(columns='x', index='y', values='ppscore')\nplt.figure(figsize=(10,10))\nsns.heatmap(matrix_df, vmin=0, vmax=1, cmap=\"Blues\", linewidths=0.5, annot=True)\nplt.title('PPS Matrix')\nplt.show()","ca6a9aea":"df = data.loc[data['is_super_over']==1, ['bowler','is_super_over']].copy()\ndf['total_balls'] = df.groupby('bowler')['is_super_over'].transform('count')\ndf = df.drop('is_super_over',axis=1).drop_duplicates().reset_index(drop=True).sort_values('total_balls', ascending=False).head(15)\nfig = df.plot(kind='bar', x='bowler', y='total_balls', color='total_balls')\nfig.update_layout(title='Bowlers who bowled most balls in super overs')\nfig.show()","37fce4a0":"df = data[['bowler', 'total_runs']].copy()\ndf['ball_count'] = df.groupby('bowler')['total_runs'].transform('count')\ndf['total_runs'] = df.groupby('bowler')['total_runs'].transform('sum')\ndf['runs_per_ball'] = df['total_runs'] \/ df['ball_count']\ndf = df.drop_duplicates().reset_index(drop=True).sort_values('runs_per_ball').head(15)\nfig = df.plot(kind='bar', y='bowler', x='runs_per_ball', color='runs_per_ball')\nfig.update_layout(title='Bowlers with best economy')\nfig.show()","1702cedd":"df = data[['bowler', 'total_runs']].copy()\ndf['ball_count'] = df.groupby('bowler')['total_runs'].transform('count')\ndf['total_runs'] = df.groupby('bowler')['total_runs'].transform('sum')\ndf['runs_per_ball'] = df['total_runs'] \/ df['ball_count']\ndf = df.drop_duplicates().reset_index(drop=True).sort_values('runs_per_ball',ascending=False).head(15)\nfig = df.plot(kind='bar', y='bowler', x='runs_per_ball', color='runs_per_ball')\nfig.update_layout(title='Bowlers with worst economy')\nfig.show()","51a189f1":"df = data.loc[data['wide_runs']>0, ['bowler', 'wide_runs']].copy()\ndf['total_wides'] = df.groupby('bowler')['wide_runs'].transform('count')\ndf = df.drop('wide_runs', axis=1).drop_duplicates().reset_index(drop=True).sort_values('total_wides',ascending=False).head(15)\nfig = df.plot(kind='bar', x='bowler', y='total_wides', color='total_wides')\nfig.update_layout(title='Bowlers with most wide balls')\nfig.show()","018ef665":"df = data[['batsman', 'total_runs']].copy()\ndf['total_runs'] = df.groupby('batsman')['total_runs'].transform('sum')\ndf = df.drop_duplicates().sort_values('total_runs').tail(15).reset_index(drop=True)\nfig = df.plot(kind='bar', x='batsman', y='total_runs', color='total_runs')\nfig.update_layout(title='Highest runs by batsman')\nfig.show()","4d9ac662":"df = data[['batsman', 'total_runs']].copy()\ndf['ball_count'] = df.groupby('batsman')['total_runs'].transform('count')\ndf['total_runs'] = df.groupby('batsman')['total_runs'].transform('sum')\ndf['Strike Rate'] = (df['total_runs'] \/ df['ball_count']) * 100\ndf = df.drop_duplicates().sort_values('Strike Rate').tail(15).reset_index(drop=True)\nfig = df.plot(kind='bar', y='batsman', x='Strike Rate', color='Strike Rate')\nfig.update_layout(title='Batsmen with best strike rate')\nfig.show()","94e2233c":"df = data[['batsman', 'total_runs']].copy()\ndf['ball_count'] = df.groupby('batsman')['total_runs'].transform('count')\ndf['total_runs'] = df.groupby('batsman')['total_runs'].transform('sum')\ndf['Strike Rate'] = (df['total_runs'] \/ df['ball_count']) * 100\ndf = df[df['Strike Rate']>0].drop_duplicates().sort_values('Strike Rate').head(15).reset_index(drop=True)\nfig = df.plot(kind='bar', y='batsman', x='Strike Rate', color='Strike Rate')\nfig.update_layout(title='Batsmen with worst strike rate')\nfig.show()","c3a76ac4":"df = data.loc[data['is_super_over']==1, ['batsman','total_runs']].copy()\ndf['total_runs'] = df.groupby('batsman')['total_runs'].transform('sum')\ndf = df.drop_duplicates().sort_values('total_runs', ascending=False).head(15).reset_index(drop=True)\nfig = df.plot(kind='bar', x='batsman', y='total_runs', color='total_runs')\nfig.update_layout(title='Batsman who scored most runs in super overs')\nfig.show()","0b830536":"df = data[['dismissal_kind','fielder']].copy()\ndf = df.dropna()\ndf['dismiss_count'] = df.groupby(['dismissal_kind','fielder'])['fielder'].transform('count')\ndf = df[df['dismissal_kind'].isin(['caught', 'run out'])]\ndf = df.drop_duplicates()\ndf1 = df[df['dismissal_kind']=='caught'].sort_values('dismiss_count').tail(10)\ndf2 = df[df['fielder'].isin(df1['fielder'].tolist())]\ndf2 = df2[df2['dismissal_kind']=='run out'].sort_values('dismiss_count').tail(10)\ndf = pd.concat([df1,df2],axis=0)\ndf = df.reset_index(drop=True)\nfig = df.plot(kind='bar', x='fielder', y='dismiss_count', color='dismissal_kind')\nfig.update_layout(title='Best performing fielders')\nfig.show()","1ca6ecfa":"df = data[['bowling_team','dismissal_kind','fielder']].copy()\ndf = df.dropna()\ndf = df[df['dismissal_kind']=='stumped']\ndf['stump_count'] = df.groupby(['bowling_team','fielder'])['dismissal_kind'].transform('count')\ndf = df.drop('dismissal_kind', axis=1).drop_duplicates().sort_values('stump_count').tail(20).reset_index(drop=True)\nfig = df.plot(kind='bar', x='fielder', y='stump_count', color='bowling_team')\nfig.update_layout(title='Best Stumpers and their teams')\nfig.show()","28a40d67":"data = match.copy()\ndf = data[['city','winner']].copy().dropna()\ndf['win_count'] = df.groupby(['city','winner'])['winner'].transform('count')\ndf = df.drop_duplicates().sort_values('win_count').tail(40)\nfig = df.plot(kind='bar', x='winner', y='win_count', color='city')\nfig.update_layout(title='Teams with most wins and the cities')\nfig.show()","5f69f344":"df = data[['toss_winner', 'toss_decision']].copy()\ndf['count'] = df.groupby(['toss_winner', 'toss_decision'])['toss_decision'].transform('count')\ndf = df.drop_duplicates().reset_index(drop=True)\nfig = df.plot(kind='bar', x='toss_winner', y='count', color='toss_decision', barmode='group')\nfig.update_layout(title='Toss wins and decisions')\nfig.show()","1ec3c086":"top_players = data['player_of_match'].value_counts().reset_index()['index'].tolist()[:7]\ndf = data[['winner','player_of_match']].dropna()\ndf['POM_count'] = df.groupby(['winner','player_of_match'])['player_of_match'].transform('count')\ndf = df.drop_duplicates().reset_index(drop=True).sort_values('POM_count')\ndf = df[df['player_of_match'].isin(top_players)]\nfig = df.plot(kind='bar', x='player_of_match', y='POM_count', color='winner')\nfig.update_layout(title='Players with most Player of the match titles and their teams')\nfig.show()","c9fc677c":"df = data['result'].value_counts().reset_index()\ndf.columns = ['result', 'count']\nfig = px.pie(df, values='count', names='result',title='Most common results')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","d8b31fd9":"The dataset almost seems missing value free and is perfect for telling stories. For now I will ignore the variable containing missing values.","049e8f73":"# Interesting statistics related to teams","d67aa99c":"<ul style='font-size:18px'>\n    <li>Facts on IPL<\/li>\n    <li>Description of Data<\/li>\n    <li>Correlation in Data<\/li>\n    <li>Interesting statistics related to bowlers<\/li>\n    <li>Interesting statistics related to batsmen<\/li>\n    <li>Interesting statistics related to fielders<\/li>\n    <li>Interesting statistics related to teams<\/li>\n<\/ul>","aa82c3d0":"# Content","fb4ae716":"<p style='font-size:18px'>There are mainly two datasets. One mentioning each of the ball by ball delivery of 2019.<br><br> While the other one contains statistics of all the matches played the year 2019.<br><br>I will be considering the deliveries data to be the main data of concern and then move on to the match statictics data.<\/p>","738bba73":"<p style='font-size:18px'>I will be ending the work for this notebook here. Probably all the information that could be extracted from these two datasets is already taken out.<br><br>Leave an upvote if you like this notebook.<\/p>","e52c3478":"# Description of Data","fb6d0255":"# Ways of dismissal ","eaefa5bb":"AC Gilchrist is probably the only bowler who gave no run at all.\n\nThe reason is quite clear. Because he bowled only one over throughout the whole IPL season.","422a06e2":"<p style='font-size:18px'>I think that's all the data that could have been extracted from the per ball dataset.<br><br>Next I will move on to the dataset that contains statistics of each match.<\/p>","421e3abc":"# Facts on IPL","4f054fd9":"# Interesting statistics related to bowlers","44509fa1":"# Interesting statistics related to fielders","fba3b2b2":"<ol style='font-size:18px'>\n    <li>Broadcasting rights of IPL 2018 are sold for a whopping \u20b916347.5 crore to Star India Network. It means 1 ball costs around 21 Lakh Rupees.<\/li>\n    <li>In IPL, Delhi Daredevils is the only team that had never played an IPL Final.<\/li>\n    <li>Praveen Kumar had bowled the highest number of dot balls in the history of IPL. He has bowled 1075 dot balls in 119 Matches.<\/li>\n    <li>Chennai Super Kings is the only team in IPL that has never changed its captain.<\/li>\n    <li>Amit Mishra holds the record of highest number of hat-tricks (3) in the history of IPL.<\/li>\n    <li>K.L. Rahul holds the record of fastest 50 (in 14 balls) and Chris Gayle holds the record of fastest 100 (in 30 balls) in IPL.<\/li>\n<\/ol>","e602abe5":"# Interesting statictics related to batsmen","9c796f70":"# Correlation in Data","f338b6e0":"<img src=\"https:\/\/cdn.dnaindia.com\/sites\/default\/files\/styles\/full\/public\/2020\/08\/07\/917968-ipl.jpg\" height=\"800\" width=\"700\">"}}