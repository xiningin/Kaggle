{"cell_type":{"0cf98fbf":"code","4eca7ae5":"code","8c8a851a":"code","636f86c0":"code","371e280e":"code","ec83b12e":"code","700d22ff":"code","e2a4dd99":"code","e7a2c2a5":"code","f31cd863":"code","aa7a40dd":"code","483a6cbf":"code","7555d2a8":"code","ecba7dfb":"code","e29507c9":"code","99e1d42d":"code","5c67a8dd":"code","420cd71b":"code","fe3e3c44":"code","7f7502f2":"code","469ee66e":"code","94110388":"markdown","4b77ff6a":"markdown","380801ac":"markdown","f1c62891":"markdown","55564105":"markdown","e21857a6":"markdown","48a91b74":"markdown","6265af2a":"markdown","f1a3a874":"markdown","4bb3b2e6":"markdown","18774ad6":"markdown","76cfd9fb":"markdown","8996ee8a":"markdown","fad27df5":"markdown","06211bd2":"markdown","23a6b2c2":"markdown","46b97b6b":"markdown","47267e18":"markdown","b7823d99":"markdown","c8b3f807":"markdown","9384fb79":"markdown","09d39291":"markdown","5eeec7b9":"markdown","990ec15b":"markdown","3d0ec255":"markdown"},"source":{"0cf98fbf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime\nfrom datetime import date\nimport plotly.figure_factory as ff\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4eca7ae5":"data = pd.read_csv(\"..\/input\/nba2k20-player-dataset\/nba2k20-full.csv\",parse_dates=True)\ndata.head()","8c8a851a":"data.describe()","636f86c0":"data.dtypes","371e280e":"data['weight'] = [float(data['weight'][i].split()[3]) for i in range(len(data))]\ndata['height'] = [float(data['height'][i].split()[-1]) for i in range(len(data))]\ndata['salary'] = [int(data['salary'][i].split('$')[1]) for i in range(len(data))]\ndata['jersey'] = [int(data['jersey'][i].split('#')[1]) for i in range(len(data))]\n\ndata['b_day'] = data['b_day'].apply(lambda x: datetime.strptime(x, '%m\/%d\/%y').date())\ndata['age'] = (datetime.today().date() - data['b_day']).astype('<m8[Y]').astype('int64')\n\ndata['draft_round'] = data['draft_round'].apply(lambda x: 0 if x=='Undrafted' else int(x)) \ndata['draft_peak'] = data['draft_peak'].apply(lambda x: 0 if x=='Undrafted' else int(x)) \n\ndata['college'] = data['college'].fillna('No college')\ndata['team'] = data['team'].fillna('No team')\n","ec83b12e":"data.head()","700d22ff":"data.dtypes","e2a4dd99":"plt.figure(figsize=(30,15))\nsns.set(font_scale=1.8)\nsns.heatmap(data.corr(),cmap='Blues',annot=True)","e7a2c2a5":"fig = make_subplots(rows=1, cols=2, specs=[[{\"type\": \"histogram\"}, {\"type\": \"histogram\"}]])\nfig.add_trace(go.Histogram(x=data['height']*100,\n                           xbins=dict(\n                               start=150,\n                               end=280,\n                               size=3\n                           ),\n                           name='height, cm', hovertemplate='Count: %{y}<br>Height: %{x}cm'\n                           ), col=1, row=1)\nfig.add_trace(go.Scatter(x=[data['height'].mean()*100, data['height'].mean()*100], y=[0, 91],\n                         mode='lines',\n                         name='Mean height', hovertemplate='Mean: %{x:.2f}'))\nfig.update_layout(hovermode='x')\nfig.add_trace(go.Histogram(x=data['weight'],\n                           xbins=dict(\n                               start=min(data['weight']),\n                               end=max(data['weight']),\n                               size=3\n                           ),\n                           name='weight, kg', hovertemplate='Count: %{y}<br>Weight: %{x}kg'\n                           ), col=2, row=1)\nfig.add_trace(go.Scatter(x=[data['weight'].mean(), data['weight'].mean()], y=[0, 91],\n                         mode='lines',\n                         name='Mean weight', hovertemplate='Mean: %{x:.2f}'),col=2, row=1)\n\nfig.update_layout(title={\n        'text': \"Height and weight distribution\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.show()","f31cd863":"fig = px.scatter(data, x=\"weight\", y=\"height\", \n                 marginal_x=\"box\", marginal_y=\"violin\",\n                 color_discrete_sequence=['orange']\n                )\nfig.show()","aa7a40dd":"country_count = data['country'].value_counts()\nfig = go.Figure(go.Pie(labels=country_count.index, values=country_count.values, hole=0.4,textinfo= \"none\"))\nfig.update_layout(title={\n        'text': \"Percentage of players by country\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nfig.show()","483a6cbf":"college_count = data['college'].value_counts()\nfig = go.Figure(go.Pie(labels=college_count.index, values=college_count.values, hole=0.4,textinfo= \"none\"))\nfig.update_layout(title={\n        'text': \"Percentage of players by college\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nfig.show()","7555d2a8":"data['position'] = data['position'].apply(lambda x: 'F-C' if x=='C-F' else x) #union related positions\ndata['position'] = data['position'].apply(lambda x: 'F-G' if x=='G-F' else x)","ecba7dfb":"\n\nfig = px.scatter(data.sort_values(by='salary', ascending=False)[:50], \n                 x=\"salary\", y=\"age\",\n                 size=\"rating\", color=\"position\", \n                 title=\"Top-50 players\",\n                 log_x=True, size_max=20)\nfig.show()","e29507c9":"fig = px.scatter(\n    data, x='rating', y='salary', opacity=0.65,\n    trendline='ols', trendline_color_override='darkblue', \n    facet_col='position', facet_col_wrap=3, color='salary'\n)\nfig.show()","99e1d42d":"fig = px.scatter(data, x='rating', y='salary', opacity=0.65,\n                 trendline='ols', trendline_color_override='darkblue', \n                 facet_col='draft_round', facet_col_wrap=3, color='salary'\n                )\nfig.show()","5c67a8dd":"data_team = data[['team', 'rating']].groupby('team').mean().reset_index()\ndata_team = data_team.sort_values(by='rating', ascending=False)","420cd71b":"fig = px.bar(data_team.query(\"team != 'No team'\"), \n             x='team', y='rating', color='team', \n             labels={'rating':'mean rating of players'},\n             title='Mean rating of players for each team',\n             color_discrete_sequence=px.colors.qualitative.Safe)\nfig.show()","fe3e3c44":"data_height = data[['height', 'country']].groupby('country').mean().reset_index()\ndata_height = data_height.sort_values(by='height', ascending=False)\n","7f7502f2":"fig = px.bar(data_height, \n             x='country', y='height', color='country', \n             labels={'height':'mean height of players'},\n             color_discrete_sequence=px.colors.qualitative.Vivid,\n             title='Mean height of each country'\n            )\nfig.show()","469ee66e":"fig = px.box(data, x=\"draft_round\", y=\"salary\", \n             color=\"draft_round\",\n             title='Salary exploring by draft_round',\n             points='all'\n            )\nfig.update_traces(quartilemethod=\"exclusive\") \nfig.show()","94110388":"Import and exploring data","4b77ff6a":"About 15% of players are not from college. The highest percents of players have Kentucky and Duke colleges.","380801ac":"<a id='part7'><h1>7. Team rating<\/h1><\/a>","f1c62891":"draft round 0 (undrafted players): 50% of salary data is between 1.4M and 4.76, median is 2.56M<br>\ndraft round 1: 50% of salary data is between 2.9M and 15.6, median is 6.5M<br>\ndraft round 2: 50% of salary data is between 1.4M and 8.5, median is 1.7M\n\nSo,the most paid players drom draft round 1, where the max salary is 40.2M. The draft round 2 have bigger range of salary data then data of undrafted players, but median of salary from draft round 2 less by 0.8M.","55564105":"<ul style='list-style-type: none'>\n    <li><a href='#part1' style='text-decoration: none; font-size: 24px'>1. Preprocessing data<\/a><\/li>\n    <li><a href='#part2' style='text-decoration: none; font-size: 24px'>2. Heatmap<\/a><\/li>\n    <li><a href='#part3' style='text-decoration: none; font-size: 24px'>3. Height and weight distriburion<\/a><\/li>\n    <li><a href='#part4' style='text-decoration: none; font-size: 24px'>4. Country and college distriburion<\/a><\/li>\n    <li><a href='#part5' style='text-decoration: none; font-size: 24px'>5. Top-50 players by salary<\/a><\/li>\n    <li><a href='#part6' style='text-decoration: none; font-size: 24px'>6. Basic regression<\/a><\/li>\n    <li><a href='#part7' style='text-decoration: none; font-size: 24px'>7. Team rating<\/a><\/li>\n    <li><a href='#part8' style='text-decoration: none; font-size: 24px'>8. Height by country<\/a><\/li>\n    <li><a href='#part9' style='text-decoration: none; font-size: 24px'>9. Salary by draft_round<\/a><\/li>\n<\/ul>\n\n\n\n\n\n\n\n\n","e21857a6":"The highest correlation between draft_round and draft_peak. Also there is hight correlation between weight and height and between salary and rating","48a91b74":"The strongest team is 'Los Angeles Clippers' with mean rating of players 79.3 and the weakest is 'Detroit Pistons' with rating 73.9","6265af2a":"<a id='part9'><h1>9. Salary by draft_round<\/h1><\/a>","f1a3a874":"Let's calculate average rating of players for each team","4bb3b2e6":"Correlation between features on a heatmap","18774ad6":"This is simple regression plots for prediction salary based on rating of players by position.","76cfd9fb":"Some columns need to be converted into numeric data type","8996ee8a":"<a id='part1'><h1>1. Preprocessing data<\/h1><\/a>","fad27df5":"There are about 75% of players from USA and much less from every other country.","06211bd2":"<a id='part8'><h1>8. Height by country<\/h1><\/a>","23a6b2c2":"Represents relationship between age, salary and rating for top-30 the most paid players.","46b97b6b":"<a id='part5'><h1>5. Top-50 players by salary<\/h1><\/a>","47267e18":"Let's take a look at data again","b7823d99":"<a id='part2'>\n    <h1>2. Heatmap<\/h1>\n<\/a>","c8b3f807":"Same regression plot for draft_round. So, the highest salaries are received by the players from the first draft round.","9384fb79":"<a id='part6'><h1>6. Basic regression<\/h1><\/a>","09d39291":"Represents mean height of players for each country. The tallest players are from Austria and the lowest are from Puerto Rico","5eeec7b9":"The most paid players from top-30 are 28+ years old on G and F positions.","990ec15b":"<a id='part3'>\n    <h1>3. Height and weight distriburion<\/h1>\n<\/a>","3d0ec255":"<a id='part4'><h1>4. Country and college distriburion<\/h1><\/a>"}}