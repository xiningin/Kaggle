{"cell_type":{"e60c3f3f":"code","9c4cc909":"code","d51e38ca":"code","b499d9e1":"code","60ee15f5":"code","37660ec4":"code","9261b265":"code","d2bc82f8":"code","d33b2bcd":"code","ed8fc850":"code","607b9bc7":"code","318fa41d":"code","3ce52b29":"code","a17b104c":"code","f2bdfb4e":"code","dd8c31ae":"code","4dc3b050":"code","e3ae189b":"code","f7eb2595":"markdown","ca682d4c":"markdown","9ed34e9e":"markdown","f66aec82":"markdown","eefc0fb7":"markdown","203a72d8":"markdown","5f4bbf7e":"markdown","cc9871dd":"markdown","bdd7f438":"markdown"},"source":{"e60c3f3f":"#\u9019\u662fjupyter notebook\u7684magic word\u02d9\n%matplotlib inline\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom IPython import display","9c4cc909":"import os\n#\u5224\u65b7\u662f\u5426\u5728jupyter notebook\u4e0a\ndef is_in_ipython():\n    \"Is the code running in the ipython environment (jupyter including)\"\n    program_name = os.path.basename(os.getenv('_', ''))\n\n    if ('jupyter-notebook' in program_name or # jupyter-notebook\n        'ipython'          in program_name or # ipython\n        'jupyter' in program_name or  # jupyter\n        'JPY_PARENT_PID'   in os.environ):    # ipython-notebook\n        return True\n    else:\n        return False\n\n\n#\u5224\u65b7\u662f\u5426\u5728colab\u4e0a\ndef is_in_colab():\n    if not is_in_ipython(): return False\n    try:\n        from google import colab\n        return True\n    except: return False\n\n#\u5224\u65b7\u662f\u5426\u5728kaggke_kernal\u4e0a\ndef is_in_kaggle_kernal():\n    if 'kaggle' in os.environ['PYTHONPATH']:\n        return True\n    else:\n        return False\n\nif is_in_colab():\n    from google.colab import drive\n    drive.mount('\/content\/gdrive')","d51e38ca":"os.environ['TRIDENT_BACKEND'] = 'pytorch'\n\nif is_in_kaggle_kernal():\n    os.environ['TRIDENT_HOME'] = '.\/trident'\n    \nelif is_in_colab():\n    os.environ['TRIDENT_HOME'] = '\/content\/gdrive\/My Drive\/trident'\n\n#\u70ba\u78ba\u4fdd\u5b89\u88dd\u6700\u65b0\u7248 \n\n!pip uninstall tridentx -y\n!pip install ..\/input\/trident\/tridentx-0.7.3.21-py3-none-any.whl --upgrade\n#!pip install cupy\n\nimport json\nimport copy\nimport numpy as np\n#\u8abf\u7528trident api\nimport trident as T\nfrom trident import *\n\nfrom trident.layers.pytorch_initializers import orthogonal\nimport random\nfrom tqdm import tqdm\nimport glob\nimport scipy\nimport time","b499d9e1":"import pandas as pd\ntrain_df = pd.read_csv('..\/input\/challenges-in-representation-learning-facial-expression-recognition-challenge\/icml_face_data.csv')\ntrain_df","60ee15f5":"#train_df\n\n\ndata=open('..\/input\/challenges-in-representation-learning-facial-expression-recognition-challenge\/icml_face_data.csv','r',encoding='utf-8-sig').readlines()\nprint(len(data))\narray2image(np.array(eval('['+data[1].split(',')[-1].replace(' ',', ')+']')).reshape((48,48)))","37660ec4":"emotions=[]\nimages=[]\ntest_emotions=[]\ntest_images=[]\nfor i in tqdm(range(len(data)-1)):\n    row=data[i+1]\n    cols=row.split(',')\n    if cols[1]=='Training':\n        emotions.append(int(cols[0]))\n        images.append(np.array(eval('['+cols[-1].replace(' ',', ')+']')).reshape((48,48,1)).astype(np.float32))\n    else:\n        test_emotions.append(int(cols[0]))\n        test_images.append(np.array(eval('['+cols[-1].replace(' ',', ')+']')).reshape((48,48,1)).astype(np.float32))\n        \n\nprint(len(emotions))\nprint(len(images))\nprint(len(test_emotions))\nprint(len(test_images))","9261b265":"ds1=ImageDataset(images,symbol='images')\nds2=LabelDataset(emotions,symbol='emotions_label')\nds2.class_names=['Angry', 'Disgust', 'Fear', 'Happy', 'Sad', 'Surprise', 'Neutral']\n\ntest_ds1=ImageDataset(test_images,symbol='images')\ntest_ds2=LabelDataset(test_emotions,symbol='emotions_label')\ntest_ds2.class_names=['Angry', 'Disgust', 'Fear', 'Happy', 'Sad', 'Surprise', 'Neutral']\n\ndata_provider=DataProvider(traindata=Iterator(data=ds1,label=ds2),testdata=Iterator(data=test_ds1,label=test_ds2))\n\n\ndata_provider.image_transform_funcs=[\n    ToRGB(),\n    Resize(output_size=(112,112)),\n    CLAHE(),\n    RandomTransform(rotation_range=15,zoom_range=0.1, shift_range=0.05,  shear_range= 0.1,random_flip= 0.3),\n    RandomAdjustGamma(gamma_range=(0.6,1.4)),\n    RandomAdjustContrast(value_range=(0.6,1.4)),\n    RandomAdjustHue(scale=(-0.3,0.3)),#\u8abf\u6574\u8272\u76f8\n    RandomAdjustSaturation(scale=(0.6,1.4)),#\u8abf\u6574\u98fd\u548c\u5ea6\n    RandomBlur(scale=(3,7)),#\u96a8\u6a5f\u6a21\u7cca\n    SaltPepperNoise(prob=0.001),#\u6912\u9e7d\u566a\u97f3\n    RandomErasing(size_range=(0.08,0.2),transparency_range=(0.4,0.6),transparancy_ratio=0.8),\n    Normalize(127.5,127.5)]\n","d2bc82f8":"img_data,emotion_data=data_provider.next()\nprint(img_data.shape)\nprint(emotion_data.shape)\n\ndata_provider.preview_images()","d33b2bcd":"from trident.models import arcfacenet\nnum_faces=10575\n#\u6a19\u6e96\u751f\u6210\u7d50\u69cb\n#\u4e0d\u5305\u542b\u539f\u6709\u5206\u985e\u5668\nse_resnet50 =arcfacenet.SEResNet_IR_50_512(include_top=False,\n             pretrained=True,\n             freeze_features=True,\n             input_shape=(3,112,112))\n\n#\u52a0\u5165output_layer\nse_resnet50.model.add_module('output_layer', \n    Sequential(\n        Dropout(dropout_rate=0.4),\n        Flatten(),\n        Dense((512),use_bias=False,keep_output=True),\n    ))\n\n#se_resnet50.model.output_layer[0].inplace = False\nse_resnet50.model.add_module('l2norm',L2Norm())\nse_resnet50.model.add_module('fc',Dense((num_faces),use_bias=False,weights_norm='l2'))\n\n\n#fc_weight=se_resnet50.model[-1].weight.data        \nface_head=Sequential(se_resnet50.model[-3:])\n\nlandmark_head=Sequential(\n    Conv2d((3,3),68*2,strides=1,auto_pad=True,activation='sigmoid',use_bias=False),\n    GlobalAvgPool2d()\n        )\n\ndecoder=Sequential(\n        Conv2d_Block((3,3),128,strides=1,auto_pad=True,activation='leaky_relu',normalization='batch',use_bias=False) ,#((128,7,7))\n        Upsampling2d(scale_factor=2,mode='pixel_shuffle'),\n        Conv2d_Block((3,3),128,strides=1,auto_pad=True,activation='leaky_relu',normalization='batch',use_bias=False),#(128,14,14)\n        Upsampling2d(scale_factor=2,mode='pixel_shuffle'),\n        Conv2d_Block((3,3),128,strides=1,auto_pad=True,activation='leaky_relu',normalization='batch',use_bias=False,dropout_rate=0.2),#(128,28,28)\n        Upsampling2d(scale_factor=2,mode='pixel_shuffle'),\n        Conv2d_Block((3,3),128,strides=1,auto_pad=True,activation='leaky_relu',normalization='batch',use_bias=False),#(128,56,56)\n        Upsampling2d(scale_factor=2,mode='bicubic'),\n        Conv2d_Block((3,3),128,strides=1,auto_pad=True,activation='leaky_relu',normalization='batch',use_bias=False),#(128,112,112)\n        Conv2d((1,1),3,strides=1,auto_pad=True,activation='tanh',use_bias=False)\n    )\n\n\nhead=ModuleDict({'class_pred':face_head,\n                    'landmark_pred':landmark_head,\n                    'face_restructure':decoder\n                    },is_multicasting=True)\nse_resnet50.model.remove_at(-1)\nse_resnet50.model.remove_at(-1)\nse_resnet50.model.remove_at(-1)\nse_resnet50.model.add_module('head',head)\n\nis_resume=False\nif is_resume and os.path.exists('.\/Models\/arcface_with_mask.pth'):\n    se_resnet50.load_model('.\/Models\/arcface_with_mask.pth')\n    print('.\/Models\/arcface_with_mask.pth loaded')\nelse:\n    if os.path.exists('..\/input\/face-recognition-with-mask\/Models\/arcface_with_mask.pth'):\n        se_resnet50.load_model('..\/input\/face-recognition-with-mask\/Models\/arcface_with_mask.pth')\nse_resnet50.summary()","ed8fc850":"se_resnet50.model.trainable=False\nse_resnet50.model.remove_at(-1)\nse_resnet50.model.add_module('last_conv',Conv2d((1,1),7,strides=1,auto_pad=True,use_bias=False,activation=None))\nse_resnet50.model.add_module('pool',GlobalAvgPool2d())\nse_resnet50.model.add_module('fc',Dense(7))\nse_resnet50.model.add_module('softmax',SoftMax(-1,add_noise=True,noise_intensity=0.08))","607b9bc7":"se_resnet50.summary()","318fa41d":"#\u6a19\u6e96\u751f\u6210\u7d50\u69cb\n#\u4e0d\u5305\u542b\u539f\u6709\u5206\u985e\u5668\nse_resnet50_2 =arcfacenet.SEResNet_IR_50_512(include_top=False,\n             pretrained=True,\n             freeze_features=True,\n             input_shape=(3,112,112))\n\n#\u52a0\u5165output_layer\nse_resnet50_2.model.add_module('output_layer', \n    Sequential(\n        Dropout(dropout_rate=0.4),\n        Flatten(),\n        Dense((512),use_bias=False,keep_output=True),\n    ))\n\n#se_resnet50.model.output_layer[0].inplace = False\nse_resnet50_2.model.add_module('l2norm',L2Norm())\nse_resnet50_2.model.add_module('fc',Dense((num_faces),use_bias=False,weights_norm='l2'))\n\n\n#fc_weight=se_resnet50.model[-1].weight.data        \nface_head2=Sequential(se_resnet50_2.model[-3:])\n\nlandmark_head2=Sequential(\n    Conv2d((3,3),68*2,strides=1,auto_pad=True,activation='sigmoid',use_bias=False),\n    GlobalAvgPool2d()\n        )\n\ndecoder2=Sequential(\n        Conv2d_Block((3,3),128,strides=1,auto_pad=True,activation='leaky_relu',normalization='batch',use_bias=False) ,#((128,7,7))\n        Upsampling2d(scale_factor=2,mode='pixel_shuffle'),\n        Conv2d_Block((3,3),128,strides=1,auto_pad=True,activation='leaky_relu',normalization='batch',use_bias=False),#(128,14,14)\n        Upsampling2d(scale_factor=2,mode='pixel_shuffle'),\n        Conv2d_Block((3,3),128,strides=1,auto_pad=True,activation='leaky_relu',normalization='batch',use_bias=False,dropout_rate=0.2),#(128,28,28)\n        Upsampling2d(scale_factor=2,mode='pixel_shuffle'),\n        Conv2d_Block((3,3),128,strides=1,auto_pad=True,activation='leaky_relu',normalization='batch',use_bias=False),#(128,56,56)\n        Upsampling2d(scale_factor=2,mode='bicubic'),\n        Conv2d_Block((3,3),128,strides=1,auto_pad=True,activation='leaky_relu',normalization='batch',use_bias=False),#(128,112,112)\n        Conv2d((1,1),3,strides=1,auto_pad=True,activation='tanh',use_bias=False)\n    )\n\n\nhead2=ModuleDict({'class_pred':face_head2,\n                    'landmark_pred':landmark_head2,\n                    'face_restructure':decoder2\n                    },is_multicasting=True)\nse_resnet50_2.model.remove_at(-1)\nse_resnet50_2.model.remove_at(-1)\nse_resnet50_2.model.remove_at(-1)\nse_resnet50_2.model.add_module('head',head2)\n\nis_resume=False\nif is_resume and os.path.exists('.\/Models\/arcface_with_mask.pth'):\n    se_resnet50_2.load_model('.\/Models\/arcface_with_mask.pth')\n    print('.\/Models\/arcface_with_mask.pth loaded')\nelse:\n    if os.path.exists('..\/input\/face-recognition-with-mask\/Models\/arcface_with_mask.pth'):\n        se_resnet50_2.load_model('..\/input\/face-recognition-with-mask\/Models\/arcface_with_mask.pth')\nse_resnet50_2.summary()","3ce52b29":"se_resnet50_2.model.trainable=False\nse_resnet50_2.model.remove_at(-1)\nse_resnet50_2.model.add_module('last_conv',Conv2d_Block((3,3),num_filters=7,use_bias=False,activation=None, normalization='l2'))\nse_resnet50_2.model.add_module('dropout',Dropout(0.2))\ncam=ShortCut(\n    Identity(),\n    Sequential(\n    GlobalAvgPool2d(),\n    Reshape((7,1,1)),\n    Conv2d((1,1),num_filters=7,use_bias=False,activation=None)\n    )\n,mode='dot'\n)\n\nse_resnet50_2.model.add_module('cam',cam)\nse_resnet50_2.model.add_module('aggregate',Aggregation('sum',axis=[2,3]))\nse_resnet50_2.model.add_module('reshape',Reshape((7)))\nse_resnet50_2.model.add_module('sigmoid',Sigmoid())\nse_resnet50_2.model.add_module('fc',Dense((7)))\nse_resnet50_2.model.add_module('softmax',SoftMax(axis=-1,add_noise=True,noise_intensity=0.08))\nse_resnet50_2.summary()","a17b104c":"def unfreeze(training_context):\n    \n    if training_context['steps']==450*5:\n        training_context['current_model'].body[23].trainable=True\n    if training_context['steps']==450*10:\n        training_context['current_model'].body[22].trainable=True","f2bdfb4e":"\n\nse_resnet50.with_optimizer(optimizer=DiffGrad, lr=1e-3, betas=(0.9, 0.999),gradient_centralization='all') \\\n    .with_loss(CrossEntropyLoss(label_smooth=True)) \\\n    .with_metric(accuracy, name='accuracy') \\\n    .with_regularizer('l2',reg_weight=1e-5) \\\n    .with_accumulate_grads(10)\\\n    .with_model_save_path('.\/Models\/emotions_dtection.pth')\\\n    .with_callbacks(PrintGradientsCallback(frequency=500)) \\\n    .trigger_when(when='on_batch_end',frequency=1,unit='batch',action=unfreeze)\\\n    .with_automatic_mixed_precision_training()\n    ","dd8c31ae":"\nse_resnet50_2.with_optimizer(optimizer=DiffGrad, lr=1e-3, betas=(0.9, 0.999),gradient_centralization='all') \\\n    .with_loss(CrossEntropyLoss(label_smooth=True)) \\\n    .with_metric(accuracy, name='accuracy') \\\n    .with_regularizer('l2',reg_weight=1e-5) \\\n    .with_accumulate_grads(10)\\\n    .with_model_save_path('.\/Models\/emotions_dtection2.pth')\\\n    .with_callbacks(PrintGradientsCallback(frequency=500)) \\\n    .with_callbacks(MixupCallback(alpha= 1,loss_criterion=CrossEntropyLoss,loss_weight=0.5))\\\n    .trigger_when(when='on_batch_end',frequency=1,unit='batch',action=unfreeze)\\\n    .with_automatic_mixed_precision_training()","4dc3b050":"#\nplan=TrainingPlan()\\\n    .add_training_item(se_resnet50, name='arcface')\\\n    .add_training_item(se_resnet50_2, name='arcface2')\\\n    .with_data_loader(data_provider)\\\n    .repeat_epochs(300)\\\n    .with_batch_size(64)\\\n    .print_progress_scheduling(10,unit='batch')\\\n    .out_sample_evaluation_scheduling(100,unit='batch')\\\n    .display_loss_metric_curve_scheduling(200,unit='batch',imshow=True)\\\n    .save_model_scheduling(50,unit='batch')","e3ae189b":"plan.start_now()","f7eb2595":"\u9019\u6bd4\u8cfd\u662f\u57fa\u65bc\n0=Angry, 1=Disgust, 2=Fear, 3=Happy, 4=Sad, 5=Surprise, 6=Neutral","ca682d4c":"\u5728\u6578\u64da\u589e\u5f37\u90e8\u5206\uff0c\u50cf\u6559\u65bc\u4e0a\u4e00\u500b\u6848\u4f8b\uff0c\u6211\u5011\u52a0\u5165\u4e86\u4eff\u8a2d\u8f49\u63db\uff0c\u4ee5\u53caCLAHE(\u9650\u5236\u5c0d\u6bd4\u5ea6\u81ea\u9069\u61c9\u76f4\u65b9\u5716\u5747\u8861\u5316)\uff0c\u5f8c\u8005\u53ef\u4ee5\u5f37\u5316\u5716\u7247\u7684\u5c0d\u6bd4\u5747\u8861\uff0c\u80fd\u5920\u5c07\u7d30\u5fae\u7684\u808c\u8089\u7dda\u689d\u66f4\u70ba\u51f8\u986f\uff0c\u4ee5\u4fbf\u7372\u53d6\u4e94\u5b98\u4ee5\u5916\u7684\u808c\u8089\u7d0b\u7406\u7279\u5fb5\u3002","9ed34e9e":"\u5c07\u6574\u500b\u6a21\u578b\u8a2d\u5b9a\u70ba\u4e0d\u53ef\u8a13\u7df4\uff0c\u79fb\u9664\u6389\u6700\u5f8c\u4e00\u5c64\u7684head\uff0c\u7136\u5f8c\u4f9d\u5e8f\u52a0\u5165\u4e00\u5c64\u901a\u9053\u6578\u70ba7\u7684\u5377\u7a4d\u5c64\uff0c\u518d\u900f\u904eGlobalAvgPool2d\u79fb\u9664\u6389\u7a7a\u9593\u7dad\u5ea6\uff0c\u518d\u52a0\u4e0a\u5168\u9023\u63a5\u5c64\u4ee5\u53caSoftMax\u5373\u53ef\u5b8c\u6210\u7b2c\u4e00\u500bfintune\u7684\u6a21\u578b\u3002","f66aec82":"\u9019\u6b21\u7684\u9aa8\u5e79\u662f\u57fa\u65bc\u300c\u53e3\u7f69\u4eba\u81c9\u8b58\u5225\u300d\u5be6\u4f5c\u7684\u6210\u679c\uff0c\u7b49\u65bc\u662farcFace\u518d\u52a0\u4e0a\u7406\u89e3\u7279\u5fb5\u9ede\u5e7e\u4f55\u4f4d\u7f6e\u7684\u80fd\u529b\uff0c\u4ee5\u53ca\u5fa9\u539f\u81c9\u90e8\u7684\u8166\u6355\u80fd\u529b\u7684\u9aa8\u5e79\u3002\u7531\u65bc\u8868\u60c5\u8207\u7279\u5fb5\u9ede\u606f\u606f\u76f8\u95dc\uff0c\u56e0\u6b64\u4f7f\u7528\u9019\u500b\u9aa8\u5e79\u6548\u679c\u6703\u6bd4\u4e00\u822c\u9aa8\u5e79\u4f86\u7684\u66f4\u597d\u3002\u9996\u5148\u5efa\u69cb\u8207\u300c\u53e3\u7f69\u4eba\u81c9\u8b58\u5225\u300d\u76f8\u540c\u7684\u6a21\u578b\u7d50\u69cb\uff0c\u4e26\u4e14\u8f09\u5165\u8a13\u7df4\u6b0a\u91cd\u3002","eefc0fb7":"\u70ba\u4e86\u80fd\u5920\u6709\u6548\u7684\u6bd4\u8f03\u5404\u7a2e\u6280\u5de7\u5c0d\u65bc\u6a21\u578b\u6548\u679c\u7684\u5dee\u7570\uff0c\u6211\u5728\u6b64\u53c8\u5efa\u69cb\u4e86\u7b2c\u4e8c\u500bfinetune model","203a72d8":"\u5176\u4e2d\u6700\u5927\u7684\u5dee\u7570\u5728\u65bc\u52a0\u5165\u4e86\u985e\u5225\u6d3b\u5316\u6620\u5c04\u6a21\u7d44(Class Activation Mapping, CAM)\uff0c\u57fa\u672c\u4e0a\u9019\u7b49\u65bc\u662f\u7279\u5fb5\u5167\u7684\u6ce8\u610f\u529b\u6a5f\u5236\uff0c\u6211\u5011\u9996\u5148\u900f\u904e\u4e00\u500b\u5377\u7a4d\u5c64\u5c07\u901a\u9053\u6578\u964d\u70ba7(\u7b49\u65bc\u5206\u985e\u985e\u5225\u6578)\uff0c\u7136\u5f8c\u518d\u5c07\u8f38\u51fa\u8907\u88fd\u4e00\u4efd\uff0c\u900f\u904eGlobalAvgPool2d\u5c07\u5b83\u53bb\u91cd\u7a7a\u9593\u7dad\u5ea6\u5f8c\uff0c\u518d\u900f\u904e1x1\u5377\u7a4d\u518d\u8b8a\u70ba\u4e8c\u70ba\u7a7a\u9593\u7d50\u69cb\uff0c\u518d\u8207\u539f\u4f86\u7684\u8f38\u51fa\u9032\u884c\u9ede\u4e58\u5f8c\uff0c\u900f\u904eSigmoid\u5c07\u5176\u6578\u503c\u78ba\u4fdd\u4ecb\u65bc0\\~1\u4e4b\u9593\uff0c\u9019\u6a23\u7684\u7d50\u69cb\u53ef\u4ee5\u5f37\u5316\u901a\u9053\u8207\u985e\u5225\u7684\u5076\u548c\u5f37\u5ea6\uff0c\u4f86\u7372\u5f97\u66f4\u597d\u7684\u5206\u985e\u6548\u679c\u3002","5f4bbf7e":"\u5728\u7b2c\u4e8c\u500bfinetune\u6a21\u578b\u4e2d\uff0c\u6211\u9084\u52a0\u5165\u4e86Mixup\u6a5f\u5236\uff0c\u4e5f\u5c31\u662f\u4e00\u6b21\u5c07\u5169\u5f35\u5716\u7a4d\u65bc\u900f\u660e\u5ea6\u6df7\u5408\uff0c\u800c\u6700\u5f8c\u6a19\u7c64\u5247\u662f\u7531\u5169\u5f35\u5716\u5747\u5206\u3002\u9019\u6280\u8853\u6709\u52a9\u65bc\u7de9\u89e3softmax\u7684\u7f3a\u9677\uff0c","cc9871dd":"\u7b2c\u4e8c\u500bfinetune\u6a21\u578b\u56e0\u70ba\u6709\u52a0\u5165dropout\u4ee5\u53camixup\uff0c\u521d\u671f\u8a13\u7df4\u7684\u6548\u5ea6\u6703\u6bd4\u8f03\u5dee\uff0c\u4f46\u662f\u96a8\u8457\u8a13\u7df4\u5230\u5f8c\u671f\uff0c\u5247\u6548\u679c\u6703\u8d8a\u4f86\u8d8a\u597d\uff0c\u5207\u63db\u56deeval\u6a21\u5f0f\u6642\uff0c\u7531\u65bc\u4e0d\u518d\u6709dropout\uff0c\u6548\u5ea6\u9084\u6703\u518d\u6b21\u63d0\u5347\u3002","bdd7f438":"\u900f\u904e\u64b0\u5beb\u4ee5training_context\u70ba\u5f15\u6578\u7684\u51fd\u6578\uff0c\u642d\u914d\u6a21\u578b\u7684trigger_when\uff0c\u5c31\u53ef\u4ee5\u8f15\u9b06\u5730\u5728\u5b78\u7fd2\u968e\u6bb5\u8207\u6307\u5b9a\u6642\u9ede\uff0c\u57f7\u884c\u6307\u5b9a\u7684\u4efb\u52d9\uff0c\u6211\u5011\u5728\u8207\u9810\u8a08\u5728\u7b2c5,10\u500bepoch\u958b\u59cb\uff0c\u958b\u653e\u5169\u5c64\u7db2\u8def\u7684\u6b0a\u91cd\u4f9b\u5176\u8a13\u7df4\u3002"}}