{"cell_type":{"2fbaa0d8":"code","01c3c888":"code","96284499":"code","9ffdb23a":"code","79c3004d":"code","4bafe5b5":"code","df0e46ca":"code","dda3b988":"code","007737a3":"code","79b83d98":"code","66f31107":"code","8cefa4d8":"code","82ae5756":"code","b6732214":"code","ebff3016":"code","b73a61e9":"code","83532681":"code","3d0b3f0e":"code","ec93ab37":"code","44a9bdd9":"code","e5365c30":"code","c945406f":"code","be3fd251":"code","90ffc2dc":"code","a678585e":"code","0323c9b4":"code","6bcb3bb9":"code","974a2b30":"code","cf2ad00a":"code","6d8de8d7":"code","03a26160":"code","a0f3b3c5":"code","a6889393":"code","963ac435":"code","421dc358":"code","80524599":"code","2db735f3":"code","7fab8616":"code","870d88a6":"code","e669a36f":"code","89624fe2":"code","0dceaa15":"code","1bbbc0d8":"code","1b00c8da":"code","6123f76f":"code","939e40b2":"code","5786026d":"code","2477dd10":"code","1771135f":"code","775baae7":"code","f5ba6b3e":"code","e96a6102":"code","433ce618":"code","0c9dde37":"code","7d66b797":"code","67638560":"code","45d0440f":"code","1f24aea9":"code","6df4dfa0":"code","a45b6fb3":"code","fe541838":"code","0324dee6":"code","e2c1d433":"code","f4a7bc71":"code","0a830404":"code","0d407744":"code","d7ff52a2":"code","e156485f":"code","9da89363":"code","5c26e5b5":"code","1c269534":"code","331c929a":"code","2af30241":"code","122ab0cd":"code","93f3ab1a":"code","86819a32":"code","552e1182":"code","045feb00":"code","c4f0b02b":"code","352e1497":"code","ec8b0bcb":"code","2c9a1be1":"code","e587f1a4":"code","8c179a53":"code","5de7504c":"code","7fd47a2d":"code","9b352644":"code","bdbdfa68":"code","a7a420ce":"code","971c03b4":"code","9a4fed39":"code","227c2551":"code","66b53d48":"code","2d6baa74":"markdown","58c3a8c3":"markdown","ec2ba453":"markdown","aa4cd6df":"markdown","3c2b2dde":"markdown","2d38c747":"markdown","4d47b443":"markdown","6b66f603":"markdown","7a154923":"markdown","a80523e1":"markdown","767ddcf1":"markdown","4e73689f":"markdown","45133f87":"markdown","6f6475ba":"markdown","dc2063f7":"markdown","3c9f7c7a":"markdown","4a52fda4":"markdown","64fdef90":"markdown","c9eae3a6":"markdown","3fda615a":"markdown","9dd1e0cb":"markdown","7426a566":"markdown","54f02ff3":"markdown","79ccb793":"markdown","d1b756b7":"markdown","7a02c1ba":"markdown","ae9552d1":"markdown","f31c8322":"markdown","0d411256":"markdown","0fbaa6bf":"markdown","0b6401b0":"markdown","14091948":"markdown","40f94e6b":"markdown","82a456b9":"markdown","072b9740":"markdown","26aa6a6a":"markdown","c341d811":"markdown","72d14f1a":"markdown","6cd792c7":"markdown","cdda27b6":"markdown","9954da5a":"markdown","1963db31":"markdown","37a55290":"markdown","059e2498":"markdown","6bf43ee5":"markdown","a0681d16":"markdown","95d930cb":"markdown","db2e4430":"markdown","33031b8e":"markdown","92487ab0":"markdown","f31893d9":"markdown","1ae8e969":"markdown","57c22323":"markdown","f74dc073":"markdown","4bdf984c":"markdown","31268968":"markdown","82dc8b0d":"markdown","c0493930":"markdown","66c9374e":"markdown","689135f9":"markdown","de2c2d91":"markdown","82795148":"markdown","38ffe5c0":"markdown","58a97e1b":"markdown","652cab47":"markdown","4283ea94":"markdown","6ff12edb":"markdown","fcb68cd0":"markdown","73998071":"markdown","bcd4e2c8":"markdown","7047a452":"markdown","7d42d1cb":"markdown","72df8adc":"markdown","6989b0e5":"markdown","8f9585b1":"markdown","913d5b0c":"markdown","045b3500":"markdown","61f810e6":"markdown","733d930c":"markdown","8019e811":"markdown","bd67d5d7":"markdown","622a6379":"markdown"},"source":{"2fbaa0d8":"# import modules\nimport math\nimport pandas as pd\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.graph_objs as go\nfrom  matplotlib.ticker import PercentFormatter\n\nimport numpy as np\nimport plotly.express as px","01c3c888":"# set column and row display\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\n\n# load survey dataset\ndf = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv') \n\ndf.head(10)","96284499":"#get dataframe shape\nshape = df.shape\nprint('\\nDataFrame Shape :', shape)\nprint('\\nNumber of rows :', shape[0])\nprint('\\nNumber of columns :', shape[1])","9ffdb23a":"df_copy = df.copy()\ndf_copy = df_copy.tail(20036)\ndf_copy.head()","79c3004d":"# select preferred columns by name\ndf_copy = df_copy.loc[:,['Q1', 'Q2', 'Q3', 'Q4', 'Q5']]","4bafe5b5":"# replace characters\ndf_copy.Q1 = df_copy.Q1.str.replace('-', '.')\ndf_copy.Q1 = df_copy.Q1.str.replace('+', '.00')\n\ndf_copy.head()","df0e46ca":"# convert oolumn datatype to float\ndf_copy[\"Q1\"] = df_copy.Q1.astype(float)\n\n# check datatypes\ndf_copy.dtypes","dda3b988":"# check unique age groups\ndf_copy['Q1'].unique()","007737a3":"# sort values on age groups\ndf_copy = df_copy.sort_values(by = 'Q1')\n\ndf_copy['Q1'].unique()","79b83d98":"# set plot size etc.\nsns.set(rc={'figure.figsize':(16.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(x = 'Q1',\n              data = df_copy,\n              order = df_copy['Q1'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: age groups\",fontsize=20)\nplot.set_xlabel(\"Age group\",fontsize=18)\nplot.set_ylabel(\"Number of answers\",fontsize=18)\nplot.tick_params(labelsize=14)\n\n# show plot\nplt.show()","66f31107":"# calculate age value count\nage_count = df_copy['Q1'].value_counts()\n\nage_count","8cefa4d8":"# calculate age value count percentage\nage_perc = df_copy['Q1'].value_counts(normalize=True) * 100\n\nage_perc","82ae5756":"df_age_temp = df_copy['Q1'].value_counts().to_frame()\n\n# reset index\ndf_age_temp.reset_index(inplace = True) \n\n# rename old index\ndf_age_temp.rename(columns = {'index':'age_group_sorted'}, inplace = True) \n\ndf_age_temp.head()","b6732214":"# make the list\nlist_1 = df_age_temp['age_group_sorted'].values.tolist()\n\n# flatten lists\nlist_1 = np.array(list_1).flatten()","ebff3016":"# make the lists\nlist_2 = age_count.tolist()\nlist_3 = age_perc.tolist()\n\n# flatten lists\nlist_2 = np.array(list_2).flatten()\nlist_3 = np.array(list_3).flatten()","b73a61e9":"df_kaggle_age = pd.DataFrame(columns=['age_group', 'age_count', 'age_perc'])\n\ndf_kaggle_age.head()","83532681":"# new column\ndf_kaggle_age['age_group'] = np.array(list_1)\n\n# set column as index\ndf_kaggle_age.set_index('age_group')\n\n# two new columns\ndf_kaggle_age['age_count'] = np.array(list_2)\ndf_kaggle_age['age_perc'] = np.array(list_3)\n\n# round percentage columnto one decimal\ndf_kaggle_age['age_perc'] = df_kaggle_age['age_perc'].round(decimals=1)\n\ndf_kaggle_age.head(11)","3d0b3f0e":"# sort values on age groups\ndf_kaggle_age = df_kaggle_age.sort_values(by = 'age_group', ascending = True) \n\ndf_kaggle_age.head(11)","ec93ab37":"# calculate answers on Q2 column value count\ngender_count = df_copy['Q2'].value_counts()\n\ngender_count","44a9bdd9":"# calculate gender percentage\ngender_perc = df_copy['Q2'].value_counts(normalize=True) * 100\n\ngender_perc","e5365c30":"df_age_man = df_copy[df_copy['Q2'] == 'Man']\n#df_age_man = df_age_man.sort_values(by = 'Q1', ascending = True) \n\nmen = df_age_man.groupby('Q1')['Q2'].value_counts()\n\nmen","c945406f":"# make new list\nlist_4 = men.tolist()\n\n# flatten the list\nlist_4 = np.array(list_4).flatten()\n\n# create new column \"men_count\"\ndf_kaggle_age['men_count'] = np.array(list_4)\n\n# reset index\ndf_kaggle_age.reset_index(inplace = True) \n\n# select and drop selected column\ncol = ['index']\ndf_kaggle_age = df_kaggle_age.drop(col, axis=1)\n\ndf_kaggle_age.head(11)","be3fd251":"# calculate percentage of men \ndf_kaggle_age['men_perc'] = (df_kaggle_age['men_count'] \/ df_kaggle_age['men_count'].sum()) * 100\n\n# round the result to one decimal\ndf_kaggle_age['men_perc'] = df_kaggle_age['men_perc'].round(decimals=1)\n\ndf_kaggle_age.head(11)","90ffc2dc":"df_age_woman = df_copy[df_copy['Q2'] == 'Woman']\ndf_age_woman = df_age_woman.sort_values(by = 'Q1', ascending = True) \n\nwomen = df_age_woman.groupby('Q1')['Q2'].value_counts()\n\nwomen","a678585e":"# make new list\nlist_5 = women.tolist()\n\n# flatten the list\nlist_5 = np.array(list_5).flatten()\n\n# create new column \"women_count\"\ndf_kaggle_age['women_count'] = np.array(list_5)\n\n# reset index\ndf_kaggle_age.reset_index(inplace = True) \n\n# select and drop selected column\ncol = ['index']\ndf_kaggle_age = df_kaggle_age.drop(col, axis=1)","0323c9b4":"# calculate percentage of women \ndf_kaggle_age['women_perc'] = (df_kaggle_age['women_count'] \/ df_kaggle_age['women_count'].sum()) * 100\n\n# round the result to one decimal\ndf_kaggle_age['women_perc'] = df_kaggle_age['women_perc'].round(decimals=1)\n\ndf_kaggle_age.head(11)","6bcb3bb9":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x=df_kaggle_age['age_group'],\n    y=df_kaggle_age['men_perc'],\n    name='percentage of men',\n    marker_color='indianred'\n))\nfig.add_trace(go.Bar(\n    x=df_kaggle_age['age_group'],\n    y=df_kaggle_age['women_perc'],\n    name='percentage of women',\n    marker_color='lightsalmon'\n))\n\nfig.update_layout(\n    xaxis=dict(\n        showline=True,\n        showgrid=False,\n        showticklabels=True,\n        linecolor='rgb(204, 204, 204)',\n        linewidth=2,\n        ticks='outside',\n        tickfont=dict(\n            family='Arial',\n            size=12,\n            color='rgb(82, 82, 82)',\n        )))\n\nfig.update_layout(\n    yaxis=dict(\n        showline=True,\n        linecolor='rgb(204, 204, 204)',\n        linewidth=2,\n        ticks='outside',\n        tickfont=dict(\n            family='Arial',\n            size=12,\n            color='rgb(82, 82, 82)',\n        )))\n\nannotations = []\n\nannotations.append(dict(xref='paper', yref='paper', x=0.9, y=-0.10,\n                              xanchor='center', yanchor='top',\n                               text='data: Kaggle User Survey 2020',\n                              font=dict(family='arial narrow',\n                                        size=8,\n                                        color='rgb(96,96,96)'),\n                              showarrow=False))\n\nfig.update_layout(annotations=annotations)\nfig.update_layout(barmode='group')\nfig.update_layout(title_text='<b>Kaggle User Survey 2020<\/b>:<br>percentage of users by age and gender',\n \n                  \n      font=dict(family='calibri',\n        size=12,\n        color='rgb(64,64,64)'),\n      legend=dict(\n        x=0.75,\n        y=0.8,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15,\n    bargroupgap=0.1\n)\n\nfig.update_xaxes(showgrid=False, gridwidth=1, gridcolor='LightGrey')\nfig.update_yaxes(showgrid=True, gridwidth=1, gridcolor='LightGrey')\nfig.update_yaxes(title_text='Percentage')\nfig.update_xaxes(title_text='Age')\nfig.update_yaxes(title_font=dict(size=14))\nfig.update_xaxes(title_font=dict(size=14))\n#fig.update_layout(xaxis_showgrid=False)\n   \nfig.show()","974a2b30":"df_nation = df_copy.loc[:,['Q1', 'Q2', 'Q3']]\n\ndf_nation.head(10)","cf2ad00a":"# check unique locations\ndf_nation['Q3'].unique()","6d8de8d7":"# replace selected strings\ndf_nation['Q3'] = df_nation['Q3'].replace(['United States of America'],'United States')\ndf_nation['Q3'] = df_nation['Q3'].replace(['Viet Nam'],'Vietnam')\ndf_nation['Q3'] = df_nation['Q3'].replace(['United Kingdom of Great Britain and Northern Ireland'],'United Kingdom')\ndf_nation['Q3'] = df_nation['Q3'].replace(['Iran, Islamic Republic of...'],'Iran')\ndf_nation['Q3'] = df_nation['Q3'].replace(['Republic of Korea'],'South Korea')\n\ndf_nation['Q3'].unique()","03a26160":"# check unique location count\nnation_count = df_nation['Q3'].value_counts()\n\nnation_count","a0f3b3c5":"# get population dataset\nurl_two = \"https:\/\/covid.ourworldindata.org\/data\/ecdc\/locations.csv\"\n\n# upload dataset as pandas dataframe\ndf_population = pd.read_csv(url_two)\n\n# drop columns irrelevant to task at hand\ncols = ['countriesAndTerritories', 'population_year']\ndf_population = df_population.drop(cols, axis=1)\n\n# rename column for future merge\ndf_population.rename(columns = {'location':'Q3'}, inplace = True) \n\ndf_population.head(10)","a6889393":"df_population['Q3'].unique()","963ac435":"#get dataframe shape\nshape = df_population.shape\nprint('\\nDataFrame Shape :', shape)\nprint('\\nNumber of rows :', shape[0])\nprint('\\nNumber of columns :', shape[1])","421dc358":"df_population['population'] = df_population['population'].astype(str)","80524599":"df_population.dtypes","2db735f3":"# merge the two dataframes\ndf_users = pd.merge(df_nation, df_population, how='left')\n\n# replace NaN values with string 'other'\ndf_users = df_users.fillna('Other')\n\ndf_users.head(10)","7fab8616":"# set plot size etc.\nsns.set(rc={'figure.figsize':(16.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(x = 'continent',\n              data = df_users,\n              order = df_users['continent'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: users by continent\",fontsize=20)\nplot.set_xlabel(\"Continent\",fontsize=18)\nplot.set_ylabel(\"Number of answers\",fontsize=18)\nplot.tick_params(labelsize=14)\n\n# show plot\nplt.show()","870d88a6":"# create Asia dataframe\ndf_asia = df_users[df_users['continent'] == 'Asia']\n\ndf_asia.head(10)","e669a36f":"# sort dataframe\ndf_asia = df_asia.sort_values(by = 'Q1', ascending = True) \n\n# show value count\nasia = df_asia.groupby('Q1')['continent'].value_counts()\n\nasia","89624fe2":"# set plot size etc.\nsns.set(rc={'figure.figsize':(16.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(x = 'Q1',\n              data = df_asia,\n              order = df_asia['Q1'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: users in Asia by age group\",fontsize=20)\nplot.set_xlabel(\"Age group\",fontsize=18)\nplot.set_ylabel(\"Number of answers\",fontsize=18)\nplot.tick_params(labelsize=14)\n\n# show plot\nplt.show()","0dceaa15":"# make new list\nlist_6 = asia.tolist()\n\n# flatten list\nlist_6 = np.array(list_6).flatten()\n\n# new column\ndf_kaggle_age['asia_count'] = np.array(list_6)\n\n# reset index\ndf_kaggle_age.reset_index(inplace = True) \n\n# drop column\ncol = ['index']\ndf_kaggle_age = df_kaggle_age.drop(col, axis=1)\n\n# calculate percentage to a new column\ndf_kaggle_age['asia_perc'] = (df_kaggle_age['asia_count'] \/ df_kaggle_age['asia_count'].sum()) * 100\ndf_kaggle_age['asia_perc'] = df_kaggle_age['asia_perc'].round(decimals=1)\n\ndf_kaggle_age.head(11)","1bbbc0d8":"df_europe = df_users[df_users['continent'] == 'Europe']\ndf_europe = df_europe.sort_values(by = 'Q1', ascending = True) \n\neurope = df_europe.groupby('Q1')['continent'].value_counts()\n\neurope","1b00c8da":"# set plot size etc.\nsns.set(rc={'figure.figsize':(16.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(x = 'Q1',\n              data = df_europe,\n              order = df_europe['Q1'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: users in Europe by age group\",fontsize=20)\nplot.set_xlabel(\"Age group\",fontsize=18)\nplot.set_ylabel(\"Number of answers\",fontsize=18)\nplot.tick_params(labelsize=14)\n\n# show plot\nplt.show()","6123f76f":"list_7 = europe.tolist()\nlist_7 = np.array(list_7).flatten()\n\ndf_kaggle_age['europe_count'] = np.array(list_7)\ndf_kaggle_age.reset_index(inplace = True) \n\ncol = ['index']\ndf_kaggle_age = df_kaggle_age.drop(col, axis=1)\n\ndf_kaggle_age['europe_perc'] = (df_kaggle_age['europe_count'] \/ df_kaggle_age['europe_count'].sum()) * 100\ndf_kaggle_age['europe_perc'] = df_kaggle_age['europe_perc'].round(decimals=1)\n\ndf_kaggle_age.head(11)","939e40b2":"df_north_america = df_users[df_users['continent'] == 'North America']\ndf_north_america = df_north_america.sort_values(by = 'Q1', ascending = True) \n\nnorth_america = df_north_america.groupby('Q1')['continent'].value_counts()\n\nnorth_america","5786026d":"# set plot size etc.\nsns.set(rc={'figure.figsize':(16.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(x = 'Q1',\n              data = df_north_america,\n              order = df_north_america['Q1'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: users in North America by age group\",fontsize=20)\nplot.set_xlabel(\"Age group\",fontsize=18)\nplot.set_ylabel(\"Number of answers\",fontsize=18)\nplot.tick_params(labelsize=14)\n\n# show plot\nplt.show()","2477dd10":"list_8 = north_america.tolist()\nlist_8 = np.array(list_8).flatten()\n\ndf_kaggle_age['north_america_count'] = np.array(list_8)\ndf_kaggle_age.reset_index(inplace = True) \n\ncol = ['index']\ndf_kaggle_age = df_kaggle_age.drop(col, axis=1)\n\ndf_kaggle_age['north_america_perc'] = (df_kaggle_age['north_america_count'] \/ df_kaggle_age['north_america_count'].sum()) * 100\ndf_kaggle_age['north_america_perc'] = df_kaggle_age['north_america_perc'].round(decimals=1)\n\ndf_kaggle_age.head(11)","1771135f":"df_south_america = df_users[df_users['continent'] == 'South America']\ndf_south_america = df_south_america.sort_values(by = 'Q1', ascending = True) \n\nsouth_america = df_south_america.groupby('Q1')['continent'].value_counts()\n\nsouth_america","775baae7":"# set plot size etc.\nsns.set(rc={'figure.figsize':(16.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(x = 'Q1',\n              data = df_south_america,\n              order = df_south_america['Q1'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: users in South America by age group\",fontsize=20)\nplot.set_xlabel(\"Age group\",fontsize=18)\nplot.set_ylabel(\"Number of answers\",fontsize=18)\nplot.tick_params(labelsize=14)\n\n# show plot\nplt.show()","f5ba6b3e":"list_9 = south_america.tolist()\nlist_9 = np.array(list_9).flatten()\n\ndf_kaggle_age['south_america_count'] = np.array(list_9)\ndf_kaggle_age.reset_index(inplace = True) \n\ncol = ['index']\ndf_kaggle_age = df_kaggle_age.drop(col, axis=1)\n\ndf_kaggle_age['south_america_perc'] = (df_kaggle_age['south_america_count'] \/ df_kaggle_age['south_america_count'].sum()) * 100\ndf_kaggle_age['south_america_perc'] = df_kaggle_age['south_america_perc'].round(decimals=1)\n\ndf_kaggle_age.head(11)","e96a6102":"df_africa = df_users[df_users['continent'] == 'Africa']\ndf_africa = df_africa.sort_values(by = 'Q1', ascending = True) \n\nafrica = df_africa.groupby('Q1')['continent'].value_counts()\n\nafrica","433ce618":"# set plot size etc.\nsns.set(rc={'figure.figsize':(18.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(x = 'Q1',\n              data = df_africa,\n              order = df_africa['Q1'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: users in Africa by age group\",fontsize=20)\nplot.set_xlabel(\"Age group\",fontsize=18)\nplot.set_ylabel(\"Number of answers\",fontsize=18)\nplot.tick_params(labelsize=14)\n\n# show plot\nplt.show()","0c9dde37":"list_10 = africa.tolist()\nlist_10 = np.array(list_10).flatten()\n\ndf_kaggle_age['africa_count'] = np.array(list_10)\ndf_kaggle_age.reset_index(inplace = True) \n\ncol = ['index']\ndf_kaggle_age = df_kaggle_age.drop(col, axis=1)\n\ndf_kaggle_age['africa_perc'] = (df_kaggle_age['africa_count'] \/ df_kaggle_age['africa_count'].sum()) * 100\ndf_kaggle_age['africa_perc'] = df_kaggle_age['africa_perc'].round(decimals=1)\n\ndf_kaggle_age.head(11)","7d66b797":"df_oceania = df_users[df_users['continent'] == 'Oceania']\ndf_oceania = df_oceania.sort_values(by = 'Q1', ascending = True) \n\noceania = df_oceania.groupby('Q1')['continent'].value_counts()\n\noceania","67638560":"# set plot size etc.\nsns.set(rc={'figure.figsize':(16.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(x = 'Q1',\n              data = df_oceania,\n              order = df_oceania['Q1'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: users in Oceania by age group\",fontsize=20)\nplot.set_xlabel(\"Age group\",fontsize=18)\nplot.set_ylabel(\"Number of answers\",fontsize=18)\nplot.tick_params(labelsize=14)\n\n# show plot\nplt.show()","45d0440f":"list_11 = oceania.tolist()\nlist_11 = np.array(list_11).flatten()\n\ndf_kaggle_age['oceania_count'] = np.array(list_11)\ndf_kaggle_age.reset_index(inplace = True) \n\ncol = ['index']\ndf_kaggle_age = df_kaggle_age.drop(col, axis=1)\n\ndf_kaggle_age['oceania_perc'] = (df_kaggle_age['oceania_count'] \/ df_kaggle_age['oceania_count'].sum()) * 100\ndf_kaggle_age['oceania_perc'] = df_kaggle_age['oceania_perc'].round(decimals=1)\n\ndf_kaggle_age.head(11)","1f24aea9":"# new dataframe\ndf_pop_cap = df_population.copy()\n\ndf_pop_cap.head(10)","6df4dfa0":"# new dataframe\ndf_user_cap = df_nation.copy()\n\n# reset index\ndf_user_cap.reset_index(inplace = True) \ncol = ['index']\ndf_user_cap = df_user_cap.drop(col, axis=1)\n\ndf_user_cap.head()","a45b6fb3":"# show datatypes\ndf_pop_cap.dtypes","fe541838":"# show datatypes\ndf_user_cap.dtypes","0324dee6":"# show unique values\ndf_user_cap['Q3'].unique()","e2c1d433":"# select preferred rows\ndf_user_cap = df_user_cap[df_user_cap.Q3 != 'Other']","f4a7bc71":"# create variable for user count\nvalue_counts = df_user_cap['Q3'].value_counts().to_frame()\n\n# convert to df, reset index and assign names to columns\ndf_kaggle_people = pd.DataFrame(value_counts)\ndf_kaggle_people = df_kaggle_people.reset_index()\ndf_kaggle_people.columns = ['Q3', 'Q3_count']\n\ndf_kaggle_people.head (10)","0a830404":"# merge dataframes\ndf_kaggle_global = pd.merge(df_kaggle_people, df_pop_cap, on =\"Q3\", how='left')\n\n# convert value to float and after that to integer\ndf_kaggle_global['population'] = df_kaggle_global['population'].astype(float) \ndf_kaggle_global['population'] = df_kaggle_global['population'].astype(int) \n\ndf_kaggle_global.head(10)","0d407744":"#get dataframe shape\nshape = df_kaggle_global.shape\nprint('\\nDataFrame Shape :', shape)\nprint('\\nNumber of rows :', shape[0])\nprint('\\nNumber of columns :', shape[1])","d7ff52a2":"# values to two lists\nlist_15 = df_kaggle_global['Q3_count'].values.tolist()\nlist_16 = df_kaggle_global['population'].values.tolist()\n\n# empty list\nCapPerc = []\n\n# function to calculate per capita value using two lists\ndef per_capita(x1, x2): \n                    result =  [(x1 \/ x2 * 100) for (x1, x2) in zip(list_15,list_16)] \n                    CapPerc.append(result)   \n            \n# execute function on list values            \nper_capita (list_15,list_16)\n\n# flatten results list\nCapPerc = np.array(CapPerc).flatten()\n\n# round to four digits\nCapPerc = np.round(CapPerc, 6)\n\n# create new column for results\ndf_kaggle_global['per_capita'] = np.array(CapPerc)\n\ndf_kaggle_global.head(10)","e156485f":"# sort dataframe\ndf_percapita_most = df_kaggle_global.sort_values(by = 'per_capita', ascending = False)\n\ndf_percapita_most.head(10)","9da89363":"df_percapita_most_10 = df_percapita_most[:10]  \n\n# values to ascending order\ndf_percapita_most_10 = df_percapita_most_10.sort_values(by ='per_capita', ascending=True)\n\n# define parameters\nfig = px.bar(df_percapita_most_10, x='Q3', y ='per_capita', text = 'per_capita', color= 'per_capita', height=600)\n\n# set graphics\nfig.data[0].marker.line.width = 0.5\nfig.data[0].marker.line.color = \"black\"\n\nfig.update_traces(texttemplate='%{text}', textposition='outside')\nfig.update_layout(uniformtext_mode='hide')  \n\nfig.update_layout(\n    xaxis=dict(\n        showline=True,\n        showgrid=False,\n        showticklabels=True,\n        linecolor='rgb(204, 204, 204)',\n        linewidth=2,\n        ticks='outside',\n        tickfont=dict(\n            family='Arial',\n            size=12,\n            color='rgb(82, 82, 82)',\n        )))\n\nfig.update_layout(\n    yaxis=dict(\n        showline=True,\n        linecolor='rgb(204, 204, 204)',\n        linewidth=2,\n        ticks='outside',\n        tickfont=dict(\n            family='Arial',\n            size=12,\n            color='rgb(82, 82, 82)',\n        )))\n\n# set annotations\nannotations = []\n\n# data source\nannotations.append(dict(xref='paper', yref='paper', x=0.88, y=-0.12,\n                              xanchor='center', yanchor='top',\n                              text='data: Kaggle user survey 2020',\n                              font=dict(family='arial narrow',\n                                        size=8,\n                                        color='rgb(96,96,96)'),\n                              showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\n# set plot title\nfig.update_layout(\n    title='<b>Kaggle User Survey 2020<\/b>:<br>countries with most per capita users',\n                font=dict(family='calibri',\n                                size=12,\n                                color='rgb(64,64,64)'))\n\n# set axe titles etc.\nfig.update_xaxes(showgrid=True, gridwidth=1, gridcolor='LightGrey')\nfig.update_yaxes(showgrid=True, gridwidth=1, gridcolor='LightGrey')\n\nfig.update_yaxes(title_text='Per capita users')\nfig.update_xaxes(title_text='Country')\n\nfig.update_yaxes(title_font=dict(size=14))\nfig.update_xaxes(title_font=dict(size=14))\n\nfig.update_layout(coloraxis_colorbar=dict(\n    title=\"per capita\"    \n))\n\nfig.update_layout(xaxis_showgrid=False)\n\n# show figure\nfig.show()","5c26e5b5":"# select countries\ndf_percapita_least_10 = df_percapita_most[-10:]  \n\ndf_percapita_least_10.head(20)","1c269534":"# values to ascending order\ndf_percapita_least_10 = df_percapita_least_10.sort_values(by ='per_capita', ascending=True)\n\n# define parameters\nfig = px.bar(df_percapita_least_10, x='Q3', y ='per_capita', text = 'per_capita', color= 'per_capita', height=600)\n\n# set graphics\nfig.data[0].marker.line.width = 0.5\nfig.data[0].marker.line.color = \"black\"\n\nfig.update_traces(texttemplate='%{text}', textposition='outside')\nfig.update_layout(uniformtext_mode='hide')  \n\nfig.update_layout(\n    xaxis=dict(\n        showline=True,\n        showgrid=False,\n        showticklabels=True,\n        linecolor='rgb(204, 204, 204)',\n        linewidth=2,\n        ticks='outside',\n        tickfont=dict(\n            family='Arial',\n            size=12,\n            color='rgb(82, 82, 82)',\n        )))\n\nfig.update_layout(\n    yaxis=dict(\n        showline=True,\n        linecolor='rgb(204, 204, 204)',\n        linewidth=2,\n        ticks='outside',\n        tickfont=dict(\n            family='Arial',\n            size=12,\n            color='rgb(82, 82, 82)',\n        )))\n\n# set annotations\nannotations = []\n\n# data source\nannotations.append(dict(xref='paper', yref='paper', x=0.88, y=-0.12,\n                              xanchor='center', yanchor='top',\n                              text='data: Kaggle user survey 2020',\n                              font=dict(family='arial narrow',\n                                        size=8,\n                                        color='rgb(96,96,96)'),\n                              showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\n# set plot title\nfig.update_layout(\n    title='<b>Kaggle User Survey 2020<\/b>:<br>countries with least per capita users',\n                font=dict(family='calibri',\n                                size=12,\n                                color='rgb(64,64,64)'))\n\n# set axe titles etc.\n\nfig.update_layout(\n    yaxis = dict (\n            range = [0.00001, 0.0002 \n                    ]\n    ))\n\nfig.update_xaxes(showgrid=True, gridwidth=1, gridcolor='LightGrey')\nfig.update_yaxes(showgrid=True, gridwidth=1, gridcolor='LightGrey')\n\nfig.update_yaxes(title_text='Per capita users')\nfig.update_xaxes(title_text='Country')\n\nfig.update_yaxes(title_font=dict(size=14))\nfig.update_xaxes(title_font=dict(size=14))\n\nfig.update_layout(coloraxis_colorbar=dict(\n    title=\"per capita\"    \n))\n\nfig.update_layout(xaxis_showgrid=False)\n\n# show figure\nfig.show()","331c929a":"# new dataframe\ndf_edu = df_copy.copy()\n\n# edit columns\ndf_edu[\"Q1\"] = df_edu.Q1.astype(float)\ndf_edu['Q3'] = df_edu['Q3'].replace(['United States of America'],'United States')\ndf_edu['Q3'] = df_edu['Q3'].replace(['Viet Nam'],'Vietnam')\ndf_edu['Q3'] = df_edu['Q3'].replace(['United Kingdom of Great Britain and Northern Ireland'],'United Kingdom')\ndf_edu['Q3'] = df_edu['Q3'].replace(['Iran, Islamic Republic of...'],'Iran')\ndf_edu['Q3'] = df_edu['Q3'].replace(['Republic of Korea'],'South Korea')\n\ndf_edu.head(10)","2af30241":"# check unique values\nedu_group = df_edu['Q4'].unique()\n\nedu_group","122ab0cd":"edu_count = df_edu['Q4'].value_counts()\n\nedu_count","93f3ab1a":"edu_perc = df_edu['Q4'].value_counts(normalize=True) * 100\n\nedu_perc","86819a32":"# merge dataframes\ndf_edu_location = pd.merge(df_edu, df_kaggle_global, on =\"Q3\", how='left')\n\n# select values\ndf_edu_location = df_edu_location[df_edu_location.Q3 != 'Other']\n\n# population column to integer\ndf_edu_location['population'] = df_edu_location['population'].astype(int) \n\n# replace special characters\ndf_edu_location['Q4'] = df_edu_location['Q4'].str.replace(r\"[\\\u2019\\',]\", '')\ndf_edu_location['Q4'] = df_edu_location['Q4'].str.replace(r\"[\\\/\\',]\", '_')\ndf_edu_location['Q5'] = df_edu_location['Q5'].str.replace(r\"[\\\/\\',]\", '_')\n\n# condense answers for easer use\ndf_edu_location['Q4'] = df_edu_location['Q4'].str.replace('Some college_university study without earning a bachelors degree','Some college_uni')\ndf_edu_location['Q4'] = df_edu_location['Q4'].str.replace('No formal education past high school','High school')\n\n# drop NaN values\ndf_edu_location = df_edu_location.dropna()\n\n# drop column\ncol = ['Q3_count']\ndf_edu_location = df_edu_location.drop(col, axis=1)\n\ndf_edu_location.head()","552e1182":"# set plot size etc.\nsns.set(rc={'figure.figsize':(10.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(y = 'Q4',\n              data = df_edu_location,\n              hue = 'Q2',\n              order = df_edu_location['Q4'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: users by gender and level of formal education\",fontsize=20)\nplot.set_xlabel(\"Number of answers\",fontsize=18)\nplot.set_ylabel(\"Level of education\",fontsize=18)\nplot.tick_params(labelsize=14)\nplot.legend(loc='lower right')\n\n# show plot\nplt.show()","045feb00":"# sort values\ndf_doctoral = df_edu_location[df_edu_location['Q4'] == 'Doctoral degree']\ndf_doctoral = df_doctoral.sort_values(by = 'Q4', ascending = True) \n\n# group values\ndoctoral = df_doctoral.groupby('Q4')['continent'].value_counts()\n\ndoctoral","c4f0b02b":"# sort values\ndf_masters = df_edu_location[df_edu_location['Q4'] == 'Masters degree']\ndf_masters = df_masters.sort_values(by = 'Q4', ascending = True) \n\n# group values\nmasters = df_masters.groupby('Q4')['continent'].value_counts()\n\nmasters","352e1497":"# sort values\ndf_bachelors = df_edu_location[df_edu_location['Q4'] == 'Bachelors degree']\ndf_bachelors = df_bachelors.sort_values(by = 'Q4', ascending = True) \n\n# group values\nbachelors = df_bachelors.groupby('Q4')['continent'].value_counts()\n\nbachelors","ec8b0bcb":"# create dataframes\ndf_edu_doctoral = df_edu_location[(df_edu_location['Q4']=='Doctoral degree')]\ndf_edu_masters = df_edu_location[(df_edu_location['Q4']=='Masters degree')]\ndf_edu_bachelors = df_edu_location[(df_edu_location['Q4']=='Bachelors degree')]","2c9a1be1":"# set plot size etc.\nsns.set(rc={'figure.figsize':(10.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(y = 'continent',\n              data = df_edu_doctoral,\n              hue = 'Q2',\n              order = df_edu_doctoral['continent'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: gender and doctoral degree by continent\",fontsize=16)\nplot.set_xlabel(\"Number of answers\",fontsize=18)\nplot.set_ylabel(\"Continent\",fontsize=18)\nplot.tick_params(labelsize=14)\nplot.legend(loc='lower right')\n\n# show plot\nplt.show()","e587f1a4":"# set plot size etc.\nsns.set(rc={'figure.figsize':(10.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(y = 'continent',\n              data = df_edu_masters,\n              hue = 'Q2',\n              order = df_edu_masters['continent'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: gender and master's degree by continent\",fontsize=20)\nplot.set_xlabel(\"Number of answers\",fontsize=18)\nplot.set_ylabel(\"Continent\",fontsize=18)\nplot.tick_params(labelsize=14)\nplot.legend(loc='lower right')\n\n# show plot\nplt.show()","8c179a53":"# set plot size etc.\nsns.set(rc={'figure.figsize':(10.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(y = 'continent',\n              data = df_edu_bachelors,\n              hue = 'Q2',\n              order = df_edu_bachelors['continent'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: gender and bachelor's degree by continent\",fontsize=20)\nplot.set_xlabel(\"Number of answers\",fontsize=18)\nplot.set_ylabel(\"Continent\",fontsize=18)\nplot.tick_params(labelsize=14)\nplot.legend(loc='lower right')\n\n# show plot\nplt.show()","5de7504c":"df_occupation = df_edu_location.copy()\n\ndf_occupation.head(10)","7fd47a2d":"df_occupation['Q5'].unique()","9b352644":"occupation = df_occupation['Q5'].value_counts()\n\noccupation","bdbdfa68":"occupation_perc = df_occupation['Q5'].value_counts(normalize=True) * 100\n\noccupation_perc","a7a420ce":"# set plot size etc.\nsns.set(rc={'figure.figsize':(10.7,10.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(y = 'Q5',\n              data = df_occupation,\n              hue = 'Q2',\n              order = df_occupation['Q5'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: users by gender and occupation\",fontsize=20)\nplot.set_xlabel(\"Number of answers\",fontsize=18)\nplot.set_ylabel(\"Occupation\",fontsize=18)\nplot.tick_params(labelsize=14)\nplot.legend(loc='lower right')\n\n# show plot\nplt.show()","971c03b4":"# create dataframes\ndf_occupation_student = df_occupation[(df_occupation['Q5']=='Student')]\ndf_occupation_ds = df_occupation[(df_occupation['Q5']=='Data Scientist')]\ndf_occupation_se = df_occupation[(df_occupation['Q5']=='Software Engineer')]","9a4fed39":"# set plot size etc.\nsns.set(rc={'figure.figsize':(10.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(y = 'continent',\n              data = df_occupation_student,\n              hue = 'Q2',\n              order = df_occupation_student['continent'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: students by gender and continent\",fontsize=16)\nplot.set_xlabel(\"Number of answers\",fontsize=18)\nplot.set_ylabel(\"Continent\",fontsize=18)\nplot.tick_params(labelsize=14)\nplot.legend(loc='lower right')\n\n# show plot\nplt.show()","227c2551":"# set plot size etc.\nsns.set(rc={'figure.figsize':(10.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(y = 'continent',\n              data = df_occupation_ds,\n              hue = 'Q2',\n              order = df_occupation_ds['continent'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: data scientists by gender and continent\",fontsize=16)\nplot.set_xlabel(\"Number of answers\",fontsize=18)\nplot.set_ylabel(\"Continent\",fontsize=18)\nplot.tick_params(labelsize=14)\nplot.legend(loc='lower right')\n\n# show plot\nplt.show()","66b53d48":"# set plot size etc.\nsns.set(rc={'figure.figsize':(10.7,8.27)})\nsns.set(font='sans-serif', palette='colorblind')\n\n# set plot parameters\nplot = sns.countplot(y = 'continent',\n              data = df_occupation_se,\n              hue = 'Q2',\n              order = df_occupation_se['continent'].value_counts().index)\n\n# set plot title etc.\nplot.axes.set_title(\"Kaggle survey 2020: software engineers by gender and continent\",fontsize=16)\nplot.set_xlabel(\"Number of answers\",fontsize=18)\nplot.set_ylabel(\"Continent\",fontsize=18)\nplot.tick_params(labelsize=14)\nplot.legend(loc='lower right')\n\n# show plot\nplt.show()","2d6baa74":"Let's have the same data in numbers. Now the age groups are sorted by the number of users in each group, from largest to smallest.","58c3a8c3":"If all this is converted into percentages, we can see that some 80 percent of Kaggle users are between age 18-40. ","ec2ba453":"We will also make a copy of the earlier Kaggle user dataframe and name it **df_user_cap**.","aa4cd6df":"After that we make two other lists (**list_2** and **list_3**) based on users' age and flatten them as well. These lists will include the age count as well as age percentage values we calculated earlier.","3c2b2dde":"It seems that what we are looking for are the last 20036 rows of the dataset, so let's make a copy of the original dataframe that includes them, at the same time dropping the survey questions. ","2d38c747":"Women data scientists in Asia are a relatively smaller group than Asian women students as Kaggle users. Then again, it is logical to assume that this will change once those students - many of them likely study data science - graduate.\n\nFinally we see what the software engineer selection looks like","4d47b443":"The population data includes 214 unique countries and regions, as we can see below.","6b66f603":"## 6. Users Per Capita","7a154923":"As we can see, age-wise over 50 percent of men on Kaggle are 29 years or younger. Conversely, only about a fifth of all men are 40 years of age or older. Next we will calculate the same figures for women on Kaggle and create two new columns (respectively named as **women_count** and **women_perc**). ","a80523e1":"Now we know a bit more about age and gender, so let's find out something regarding location too. For that, we first create a new dataframe with columns Q1, Q2 and Q3 included.","767ddcf1":"If we take a look at dataframe shape, we can see that a total of 53 countries were included in survey answers. From raw memory, compared to our larger population dataframe earlier, that is about 25 percent of all nations and sovereign regions included in it. From that perspecive - ironic enough - being a Kaggle user means belonging to a global minority. On a more positive note, the Kaggle global marketing team still has plenty of frontier for further treading.","4e73689f":"Men *do* dominate Kaggle when it comes to gender, with women consisting of less than 20 percent of total users. The other three gender categories include about two percent of all answers. This is why this notebook for now concentrates mainly on the two gender categories with most data available. We can also analyze gender and age at the same time.","45133f87":"## 5. User Location","6f6475ba":"Next we will create a new dataframe with three empty columns. The column names equal to the three lists we just made.","dc2063f7":"In the original dataset, age groups are in format (xx-yy) that does not able to treat them as what they actually are: numeric entities. There are probably dozens of solutions to this, but I went for a simple one. By changing the \"-\" character to a common dot, age groups become decimal figures in format \"xx.yy\". Finally, by replacing the \"+\" character with double zero in the \"70+\" category all groups maintain their preferred order also after the transformation.  ","3c9f7c7a":"Next the same method will be applied to Europe as continent.","4a52fda4":"The primary observation here is the high level of formal education among Kaggle users. Bachelor's degree and upwards cover almost 90 percent of all user answers in the 2020 survey. This alone gives us one important answer to our research question: *if you are not\/have not been to at least college, you most likely are not on Kaggle*.\n\nThe second observation is the plethora of special characters in answer choices. Next we will concentrate on some rigid data cleaning to make things a bit easier in the future. Before that we will however merge the **df_edu** dataframe with **df_kaggle_global**, since this will show us more useful data.","64fdef90":"We will next add this continent data to our previous age dataframe.","c9eae3a6":"*But what about gender?* Here my layman hypothesis would definitely to assume that men are the dominant group. Luckily, we can rely on solid data instead of prejudice. ","3fda615a":"If age groups are sorted in ascending order, a quick peek at the age groups shows us that users from Asia are - just like the overall age data suggested - mainly of younger age category. However, in this very continent, the age phenomenon can be observed even more clearly than in other locations.","9dd1e0cb":"We will make the age group data the index of our new dataframe, leaving the two other lists serving as columms.\n\nFor clarity, the column descriptions are:\n\n**age_group** (the age group provided in the original dataset, in sorted order)<br>\n**age_count** (the number of answers per age group)<br>\n**age_perc** (the percentage of each age group by number of answers in it)","7426a566":"Software engineer as selection criterion changes the overall view to a more male one, to put it simply. The relative quantity of women falls evenly in all categories, although software engineer women in Asia do defend their position with honor. \n\nAgain, it is good to keep in mind that data analytics will become an increasing part of variety of job titles. Therefore the occupation approach will not tell us the whole truth about the people who occasionally use data analytics in their everyday work in one form or another.\n\nAll in all the same principle goes to Kaggle users in general. From the viewpoint of data analysis, more diverse data is always better than one-sided view. The same applies to Kaggle as a community. When data science and data analysis bring people from different backgrounds together, it has in a way fulfilled its primary task - and all this without a single line of code.","54f02ff3":"Renaming the 'location' column to 'Q3' was simply for compatibility reasons, since it would be somewhat confusing to rename all our Kaggle dataset columns. Now we take a look at its unique values.","79ccb793":"Next we may check out the unique names of locations included in answers.","d1b756b7":"Given the strong representation of younger age groups, it comes as no surprise that some fourth of Kaggle users are students. Categories 'Other' and 'Currently not employed' also come up with high marks. It is also interesting that less than 20 percent of Kaggle users said their occupation is either data scientist or data analyst. Of course there are caveats in all this: people may apply data analysis in their work regardless of their formal job title.\n\nNext we will take a similar continent look on occupation than we just did on education.","7a02c1ba":"Next we will select the three most common occupation categories (student, data scientist, software engineer) and see what they look like from the viewpoint of gender and continent.","ae9552d1":"The first answer column (Q1) has age group data on survey answers. Let's first check out in detail what these age groups are.","f31c8322":"As a bonus, we now have also a continent column, which enables us to take a wider perspective than mere individual countries. *It is notable though that sometimes this perspective may be too wide: for example both China and India fall into Asia continent category.*","0d411256":"Now we can inspect more closely where all Kaggle users are coming from.","0fbaa6bf":"# \"Who's not here?\": analyzing Kaggle user survey 2020 ","0b6401b0":"At this stage, we don't actually need population as numeric value, so we temporarily convert it into object. *This is by any means not necessary, but merging dataframes sometimes affects numeric decimal value formats make makes them hard to work with.* ","14091948":"Next the sorted age group column is converted to list form, and we name the list **list_1**. We will also flatten the list for later use.","40f94e6b":"If age groups are set in order, one can see that there are five-year gaps between younger groups whereas in the other end the gap is ten years.","82a456b9":"Next we will take a closer look at Africa. As we can see, along with Asia, Africa is another continent where the very youngest Kaggle members form a relatively large portion of overall users.","072b9740":"This notebook takes on one particular research question regarding the 2020 Kaggle user survey. The question posed to the data is \"who is here?\" Or, rather, \"who is not here?\"\n\nOf course one must take into account that the question cannot be directly answered by using survey data for reasons concerning accuracy. We can only analyze data from people who actually took part in the survey, and this group may well differ from overall Kaggle population to some extent. However, since no validation data on the subject is available, in this notebook the presupposition will be made that the 2020 survey answers equal to actual Kaggle user base when it comes to more detailed data such as age, gender and education.\n\nOne could say that Kaggle has - right from the start - omitted the principle of inclusion in how the service works. True, the English language barrier may hinder some people from participating but then again the data itself is indeed not written in English, and all datasets are available for all users. There is no such thing as Kaggle+ or Kaggle Premium regarding data access (knock on digital wood on that one...)\n\nThis notebook concentrates on the first five survey data answer columns (Q1-Q5). These columns consist of data regarding age, gender, country of reside, level of formal education and occupation title. This data will be analyzed from the viewpoint of the aforementioned research question. Where are Kaggle users *not* from? How old are they *not*? What are they *not* doing regarding education and occupation?\n\nNo pre-analysis hypotheses will be made on research question. Let's just jump in the data pool and start swimming.\n\n*December 15th, 2020* <br>\n*Jari Peltola*","26aa6a6a":"Also, only about seven percent of users are 50 years or older. That is definitely the first significant answer regarding our research question. As an off-data personal note, this is quite remarkable since home computers have been a common item in many countries for the last 40 years or so. It seems that the kids who once saw the movie ***War Games*** never made it to Kaggle...\n\nAge groups sorted by count is something that will come at hand a bit later. Therefore a new temporary dataframe **df_age_temp** is created based on **age_count**. In that dataframe, the respective age group column (in sorted order) is renamed as such to **age_group_sorted**.","c341d811":"After proper cleanup, let's check the education level value count again. This time we will get a more visual presentation and literally add gender in the picture.","72d14f1a":"Next the rows with value 'other' in location will be removed by inverese selecting i.e. including every row with something else than 'other' as location value.","6cd792c7":"Next we will get the unique values, value counts and percentages in Q5 column.","cdda27b6":"## 2. Survey data","9954da5a":"## 8. User Occupation","1963db31":"Next a new dataframe **df_kaggle_people** will be created, including all Kaggle user countries (column: **Q3**) and their respected number of users (column: **Q3_count**). ","37a55290":"Here it is safe to assume that the aforementioned differences between regional education systems affect the result. Bachelor's degree may be more popular a choice in Asia whereas the study structure elsewhere may not always even recognize such a degree. \n\nConcluding our remarks on education, it looks like it is one of the key factors when participating in Kaggle activities is concerned. Thus creating access points to people from more varied backgrounds than formal college\/university might be something to think about in the future, if I were part of the Kaggle regional equality and diversity inclusion team.","059e2498":"As we can see, Singapore is very much the clubhouse leader in per capita category. Also, Israel is erroneously listed under Asia in the continent column, but the nations' calculated per capita rate is still very much correct. Perhaps unexpectedly, all dataframe continents but South America are represented in top 10 including Tunisia from Africa and Australia from Oceania.\n\nLet's make a visual presentation of out top 10:","6bf43ee5":"On continent level, Asia and Europe are the leaders in doctoral degree Kaggle users. Next the same comparison will be applied to master's as well as bachelor's degree.","a0681d16":"The survey questions are included in the zero row of the survey dataset. Since these questions are in detail available in the provided supplementary data, it is sensible to remove the questions from the dataset before analysis. Next we will check the dataframe shape in order to find out how many rows we are actually dealing with.","95d930cb":"It is interesting that on Kaggle, ***women under 30 years form relatively larger a group than men under 30***. With the percentages at hand, we may plot them to give the subject matter more visual a context.","db2e4430":"## 3. User Age","33031b8e":"The column **Q4** will tell us more about the level of education among Kaggle users. Let's first check out the unique values included in the column. After that we calculate value count as well as percentage.","92487ab0":"## 1. Introduction","f31893d9":"As these figures represent men in Kaggle divided by age group, it is a good idea to store them into our new dataframe. Hence the new column **men_count**. ","1ae8e969":"A quick peek tells us that the number of men and women stays relatively same regardless of education level. Next we will take a look at where the doctoral degree users on Kaggle come from. ","57c22323":"To get a more comprehensive outlook, we will add population data on each country. This data is retrieved from ***Our World In Data*** project homepage.","f74dc073":"Finally, we take deeper dive at occupation data. First we will make a new copy of our dataframe and name it **df_occupation**.","4bdf984c":"As mentioned, we are only interested in the first five questions, so we may also exclude other columns from our selection.","31268968":"As noted earlier, not all survey answers included location, meaning there is still the 'other' category looming around in our dataframe. ","82dc8b0d":"Now we can sort the dataframe values by age group. The value \"11\" in printing the dataframe head is not a ***Spinal Tap*** reference but, rather, the actual number of age groups available. The earlier plot already showed us what is going on, but it is rather interesting that there is a slight notch in user figures in age group 25-29. Who knows, maybe we should already by talking about different generations of modern-era data scientists...\n\nNext we will sort the age group categories in ascending order to make the dataframe more readable. A quick comparison to the print above proves that the other column values follow this new rule in an effortless manner.","c0493930":"As relative population is concerned, Oceania is not a large continent. Still the overall user figures in Oceania are quite low taking into account the region's native language, infrastructure as well as overall level of education. Also, *people from Oceania under 25 years of age are almost nonexistent on Kaggle, so maybe there's something for the Kaggle regional recruitment team to work on in the future...* There is still the 'also' location category left, but since it does not by default provide us any relevant information on our research question, we will exclude it for now.\n\nInstead we will turn our attention to the relative number of users i.e. per capita user figures on Kaggle. We will start by creating a copy of our original population dataframe, and we will call it **df_pop_cap**.","66c9374e":"Furthermore, this dataframe will be merged with the **df_pop_cap** dataframe. The result is a dataframe **df_kaggle_global**, which includes all individual user countries and their respected population. Also, as noted, the population value was temporarily converted to object (or string format) to avoid any unwanted changes with numeric format. This is why we will now convert the population value back to numeric (float), and since no decimals are required, we will further convert the .float values as integers (.int). ","689135f9":"Again, women in North America and Europe with master's degree are just about as active, but men in North America fall short of their European peers. However it may well be that men in North America simply did not take part in the 2020 survey in the first place. \n\nLet's check if bachelor's degree gives a different outlook. ","de2c2d91":"## 3. User Gender","82795148":"However, the **age_group** column is still in string format, so we must convert its values to float numbers.","38ffe5c0":"There is a slight increase in \"older\" (read: about 30 years old people) user groups in the North American user data. Coming up next is South America.","58a97e1b":"## 7. User Education","652cab47":"The women students in North America seem to be more involved in Kaggle than their European peer group. Otherwise the figures follow in line with what we already know from our previous work. Let's see what the data scientist selection brings out. ","4283ea94":"**TABLE OF CONTENTS**\n1. Introduction <br>\n2. Survey Data <br>\n3. User Age <br>\n4. User Gender <br>\n5. User Location <br>\n6. Users Per Capita <br>\n7. User Education <br>\n8. User Occupation <br>","6ff12edb":"Let's have the same data in more visual form and add gender in the mix.","fcb68cd0":"Finally, we head to Oceania.","73998071":"It is a known fact that definitions of formal education are dependent on a particular education system. For example, master's degree in United States is different from same degree in Finland when it comes to actual degree structure and workload. Some universities also offer doctoral degrees closer to what other students study as master's degree elsewhere. Therefore these degrees cannot directly be compared with each other.","bcd4e2c8":"Let's take a look at the other end of the per capita user figures.","7047a452":"Next we will make two lists from **Q3_count** and **population** columns. After that a **per_capita** value will be calculated for each country listed in survey answers.","7d42d1cb":"It's always good to recall the datatypes of these two dataframes to avoid further issues.","72df8adc":"We will next continue our journey to North America.","6989b0e5":"In addition to mere value count, we add another column **men_perc**, which shows the same figures as percentages by age group.","8f9585b1":"There are some overlapping locations ('Republic of Korea' and 'South Korea' refer to same country) as well as lengthy names included, so we will manually clear them for further easier use.","913d5b0c":"Next our focus will turn to education as a factor in all this. To start with, we will create a copy of our earlier Kaggle dataframe and name it **df_edu**.","045b3500":"Now a new dataframe **df_kaggle_population** is created based on Kaggle user nation data and our new population data. Left merge here means that all countries from Kaggle user data (left) are included, but only data of those Kaggle user countries is retrieved from larger population dataframe (right). ","61f810e6":"As suspected, Asia turns out as a major user hub. Also, there is the 'other' category where no location data was included in the survey answers.\n\nFollowing this, the next step will be to further inspect individual continents. For this, we will create separate dataframes for each continent.","733d930c":"Here we can see the 'law of big numbers' in action, since China is listed as the very last country in per capita rate. This is because of the fact that a total population of almost 1,5 billion people statistically overcomes Kaggle user base quite from that country quite easily no matter how large it is.\n\nAs such China can be considered as outlier in this category. However, even China does reflect the basic idea of 'digital divide' and how it shapes the world, since many Chinese people haven't even heard of Kaggle or know much about data science as subject matter. The digital divide inside a country is just as real as the one between sovereign regions.\n\nOn global scale, access to for example broadband internet is still very much a privilege, not a basic commodity, and without proper infrastructure learning data science online easily becomes unattainable a task. In a sentence, many people who would very much like to be on Kaggle simply cannot do so as for now. Just think about an imaginary dataset on refugee crisis. The very subjects - refugees - will not have a say in the analysis, since they are at the same time more concerned on how to feed their family than learning data analysis. ","8019e811":"Now we can sort the dataframe on per capita values and take a look at the result. Let's start with the highest per capita values and the respected countries. For this purpose, we will create dataframe **df_percapita_most**, which consists of ten countries. \n\nLet's first look at the highest per capita values and the respected countries.","bd67d5d7":"We can take a visual on the same data, since this will quickly tell us a little something about the size of the age groups. ","622a6379":"It seems like men with doctoral degree living in Europe are more involved in Kaggle than their peers in North America. Let's see what master's degree looks like."}}