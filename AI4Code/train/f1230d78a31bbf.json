{"cell_type":{"45e680bc":"code","8696e711":"code","39041361":"code","b324c465":"code","f7094f3f":"code","55653437":"code","93c2ca86":"code","e0c89a94":"code","ef0a30aa":"code","8f186418":"code","7af1d31d":"code","c34956f8":"code","1adb59e1":"code","43184196":"code","5395044b":"code","6c1de876":"code","d492b873":"code","5a7ae90d":"code","d81b6190":"code","766a5398":"code","8bc6f3f0":"code","d73330c3":"code","d89ca95b":"code","f09cd51c":"code","70388353":"markdown","c301336f":"markdown","0331037e":"markdown","221aab0f":"markdown","46a56741":"markdown","05265d2a":"markdown","99e23e40":"markdown","5113f03c":"markdown","a388cdf3":"markdown","4f4e9b37":"markdown","d149dc4f":"markdown","e23c2e7c":"markdown","41a9cd4f":"markdown","83f690e8":"markdown","aa47d380":"markdown"},"source":{"45e680bc":"# Importing Libraries\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.io as pio\nfrom plotly.subplots import make_subplots\nfrom scipy import stats\nimport plotly.figure_factory as ff\nimport os\n\n# Read CSV\n\nfilepath = '..\/input\/women-entrepreneurship-and-labor-force\/Dataset3.csv'\nwomen = pd.read_csv(filepath, sep = ';', index_col = 'No').sort_index()\nwomen.columns = women.columns.str.replace(' ', '_').str.lower()\nwomen['level_of_development'] = women['level_of_development'].astype('category')\n\n\n# Colors\n\npalette = [\n'#DB4627',\n'#EB706C',\n'#F58B7F',\n'#F58867',\n'#EB9F7F',\n]","8696e711":"# Functions \n\ndef style(table):\n    \"\"\"\n    quick styling\n    \"\"\"\n    view = table.style.background_gradient(cmap = 'coolwarm')\n    return view\n\ndef percentage(s):\n    \"\"\"\n    Converts a series to round off - percentage string format.\n    \"\"\"\n    x = s.apply(lambda x : round(x\/s[:].sum() * 100, 2))\n    x = x.apply(lambda x : str(x) + '%')\n    return x\n\ndef query_this(col, look):\n    \"\"\"\n    Easy == Query\n    \"\"\"\n    query_to_return = women.query('{} == \"{}\"'.format(col, look))\n    return query_to_return\n","39041361":"style(women)","b324c465":"style(women.describe())","f7094f3f":"print(women.nunique())\nprint('')\nprint(women.info())","55653437":"# Create a subplot\nfig = make_subplots(rows = 3, cols = 1, specs = [[{'type':'xy'}],[{'type':'xy'}], [{'type':'xy'}]])\n\n# Add Bar traces\n\nfig.add_trace(go.Bar(\n    x = women.european_union_membership.unique(),\n    y = women.european_union_membership.value_counts(),\n    name = 'EU Membership',\n    text = percentage(women.european_union_membership.value_counts()),\n    marker_color = palette\n),row = 1, col = 1)\n\nfig.add_trace(go.Bar(\n    x = women.level_of_development.unique(),\n    y = women.level_of_development.value_counts(),\n    name = 'Level of Development',\n    text = percentage(women.level_of_development.value_counts()),\n    marker_color = palette[1:]\n),row = 2, col = 1)\n\nfig.add_trace(go.Bar(\n    x = women.currency.unique(),\n    y = women.currency.value_counts(),\n    name = 'Currency',\n    text = percentage(women.currency.value_counts()),\n    marker_color = palette[2:]\n),row = 3, col = 1)\n\n#Update Traces and  Layout\n\nfig.update_traces(textposition = 'inside')\nfig.update_layout(autosize=False, height = 800, template = 'plotly_white', title = '<b>Membership<\/b> - <b> Development <\/b>  - <b> Currency <\/b>')\nfig.show()","93c2ca86":"# create a figure\nfig = px.treemap(women, path = ['country'], values = 'women_entrepreneurship_index',\n    color = 'women_entrepreneurship_index',\n    color_continuous_scale = 'peach')\n\n# show and update the figure\nfig.update_layout(width = 900, title = '<b>Women Entrepreneurship Index<\/b>')\nfig.show()","e0c89a94":"# create a figure\nfig = px.treemap(women, path = ['country'], values = 'entrepreneurship_index',\n    color = 'entrepreneurship_index',\n    color_continuous_scale = 'peach')\n\n# show and update the figure\nfig.update_layout(width = 900, title = '<b>Entrepreneurship Index<\/b>')\nfig.show()","ef0a30aa":"# prepare DataFrame\n\nent_index = women[['country','women_entrepreneurship_index', 'entrepreneurship_index']]\nent_index = ent_index.groupby(by = 'country').agg(sum)\nent_group_index = ent_index[['women_entrepreneurship_index', 'entrepreneurship_index']].sort_values(by = 'entrepreneurship_index')\n\n# create a subplot\n\nfig = make_subplots(specs= [[{}]], shared_yaxes = True)\n\n# add first trace\nfig.add_trace(go.Bar(\n    x = ent_group_index.entrepreneurship_index.values,\n    y = ent_group_index.index,\n    marker = dict(color = 'gray',\n                 line=dict(color = 'black', width=1)),\n    name = 'Entrep Index',\n))\n\n# add secondary trace\nfig.add_trace(go.Bar(\n    x = ent_group_index.women_entrepreneurship_index.values,\n    y = ent_group_index.index,\n    marker = dict(color = 'tomato',\n                 line=dict(color = 'black', width=1)),\n    name = 'Women Entrep Index'\n))\n\n# update traces and layout\nfig.update_traces(orientation = 'h')\nfig.update_layout(height = 1600, title = '<b>Women Entrepreneurship  Index <\/b> and <b> Entrepreneurship Index<\/b> per country', yaxis = dict(showgrid = False), xaxis = dict(showgrid = False))\n\nfig.show()","8f186418":"# Prepare DataFrame\n\nfemale_participation = women[['country','female_labor_force_participation_rate', 'inflation_rate']]\nfp_group = female_participation.groupby(by = 'country').agg(sum)\nfp_group_force = fp_group[['female_labor_force_participation_rate', 'inflation_rate']].sort_values(by = 'female_labor_force_participation_rate')\ntext_participation = percentage(fp_group_force['female_labor_force_participation_rate'])\n\n# Figure\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x = fp_group_force.female_labor_force_participation_rate.values,\n    y = fp_group_force.index,\n    marker = dict(color = 'tomato',\n                 line=dict(color = 'black', width=1)),\n    text = text_participation,\n    name = 'Female Labor Particpation'\n))\n\n\nfig.update_traces(orientation = 'h', textposition = 'outside')\nfig.update_layout(height = 1000, title = '<b>Female labor force participation rate<\/b>', yaxis = dict(showgrid = False), xaxis = dict(showgrid = False))\n\nfig.show()","7af1d31d":"# create subplots.\n# this is a shared yaxes subplot.\n# specs - plotly will automatically detect trace type.\n\nfig = make_subplots(specs= [[{}]], shared_yaxes = True)\n\n# add traces\n\nfig.add_trace(go.Bar(\n    x = fp_group_force.female_labor_force_participation_rate.values,\n    y = fp_group_force.index,\n    marker = dict(color = 'lightpink',\n                 line=dict(color = 'black', width=1)),\n    text = text_participation,\n    name = 'Female Labor Participation'\n))\n\n# add trace\n\nfig.add_trace(go.Bar(\n    x = fp_group_force.inflation_rate.values,\n    y = fp_group_force.index,\n    marker = dict(color = 'red',\n                 line=dict(color = 'black', width=1)),\n    name = 'Inflation',\n    text = fp_group_force.inflation_rate.values\n))\n\n# update traces and layout\nfig.update_traces(orientation = 'h', textposition = 'outside')\nfig.update_layout(height = 1600, title = '<b>Female labor force participation rate<\/b>: Inflation Rate', yaxis = dict(showgrid = False), xaxis = dict(showgrid = False))\n\n# show\nfig.show()","c34956f8":"# Checking Numerical Columns\n\nwomen.select_dtypes('number').columns","1adb59e1":"# Data Wrangling\n\ndeveloped_q = query_this('level_of_development', 'Developed')\ndeveloping_q = query_this('level_of_development', 'Developing')\ndeveloped_q = developed_q.select_dtypes('number')\ndeveloping_q = developing_q.select_dtypes('number')\n\n# Colors\n\ncolors = ['#F5504C', '#619CF5']","43184196":"# Prepare dataframe\n\nval1 = developed_q.women_entrepreneurship_index.values\nval2 = developing_q.women_entrepreneurship_index.values\nhist_data = [val2, val1]\ngroup_labels = women.level_of_development.unique()\n\n\nfig = ff.create_distplot(hist_data, group_labels, colors=colors,\n                         bin_size=2, show_rug=True)\n\nfig.update_layout(autosize = False, title = '<b>Women Entrepreneurship Index Values<\/b>')\nfig.show()","5395044b":"val1 = developed_q.entrepreneurship_index.values\nval2 = developing_q.entrepreneurship_index.values\nhist_data = [val2, val1]\n\nfig = ff.create_distplot(hist_data, group_labels, colors=colors, bin_size = 5, show_rug=True)\n\nfig.update_layout(autosize = False, title = '<b>Entrepreneurship Index Values<\/b>')\nfig.show()","6c1de876":"val1 = developed_q.inflation_rate.values\nval2 = developing_q.inflation_rate.values\nhist_data = [val2, val1]\n\nfig = ff.create_distplot(hist_data, group_labels, colors=colors, bin_size = 2, show_rug=True)\n\nfig.update_layout(autosize = False, title = '<b>Inflation Rate<\/b>')\nfig.show()","d492b873":"val1 = developed_q.female_labor_force_participation_rate.values\nval2 = developing_q.female_labor_force_participation_rate.values\nhist_data = [val2, val1]\n\nfig = ff.create_distplot(hist_data, group_labels, colors=colors, bin_size = 10, show_rug=True)\n\nfig.update_layout(autosize = False, title = '<b>Female Labor Force<\/b> <br>Participation Rate')\nfig.show()","5a7ae90d":"# Scatter Plot Matrix\n\n# prepare dataframe\n# for color(hue), SPLOM only accepts integer values. Convert the one you  need into cat.dtype\n\nwomen_n = women.select_dtypes('number')\nwomen_n = pd.concat([women_n, women['level_of_development']], axis = 1)\ntextd = ['Developing' if cl== 'Developing' else 'Developed' for cl in women_n['level_of_development']]\n\n\n# add figure\nfig = go.Figure(data=go.Splom(\n                  dimensions=[dict(label='Women Ent Index', values=women_n['women_entrepreneurship_index']),\n                              dict(label='Ent Index', values=women_n['entrepreneurship_index']),\n                              dict(label='Inflation Rate', values=women_n['inflation_rate']),\n                              dict(label='Female Partic.', values=women_n['female_labor_force_participation_rate'])],\n                  marker=dict(\n                              color = women_n['level_of_development'].cat.codes,\n                              size=7,\n                              colorscale='pinkyl',\n                              line=dict(width=0.5,\n                                        color='black')),\n                  text=textd,\n                  diagonal=dict(visible=False)))\n\n# update and show figure\n\ntitle = \"<b> Scatter Matrix <\/b> Developing and Developed Countries \"\nfig.update_layout(title=title,\n                  dragmode='select',\n                  width=600,\n                  height=600,\n                  hovermode='closest')\n\nfig.show()","d81b6190":"# Contingency Table\ndevelopment_members = pd.crosstab(index = women['level_of_development'], columns = [women['european_union_membership']])\nstyle(development_members)","766a5398":"# Chi2 \n(chi2, p, dof,_) = stats.chi2_contingency([development_members.iloc[0].values, development_members.iloc[1].values])\nvalues = [chi2, p, dof]\n\npd.DataFrame(values, index = ['chi2', 'p', 'dof'], columns = {'values'})","8bc6f3f0":"cramer_v_test = np.sqrt(chi2\/(women.shape[0]))\ncramer_v_test","d73330c3":"women_n_heatmap = women_n.drop(columns = 'level_of_development').reset_index()\nwomen_n_heatmap = women_n_heatmap.drop(columns = 'No')\nplt.figure(figsize=(10,8))\nwomen_n_heatmap = women_n_heatmap.corr(method  = 'spearman')\nsns.heatmap(women_n_heatmap, annot = True, cmap = 'pink')","d89ca95b":"style(women[['entrepreneurship_index', 'women_entrepreneurship_index']].corr('spearman'))","f09cd51c":"print(f'chi2 : {chi2}')\nprint(f'cramer_v_test : {cramer_v_test}')\nprint(f'p-value  : {p}')\nprint(f'degrees of freedom : {dof}')","70388353":"[![cramers-v.png](https:\/\/i.postimg.cc\/C1RJ8qBP\/cramers-v.png)](https:\/\/postimg.cc\/PpkmsNMY)\n\nCramer V indicates the strength of the association.\nThe closer to 1 the stronger the association is.","c301336f":"<h3 style=\"color: white; background-color: #A33834;\">\nEND OF NOTEBOOK: If  you've gone this far, thank you and please leave an upvote. \n<br>\n<\/h3>","0331037e":"<h3 style=\"color: white; background-color: #A33834;\">\nVisualization: Distribution Plots\n<br>\n<\/h3>","221aab0f":"[![chi2.jpg](https:\/\/i.postimg.cc\/BvYMtg6P\/chi2.jpg)](https:\/\/postimg.cc\/rd4SP55q)\n\nWe will be using chi2 formula above","46a56741":"Hi everyone thank you for viewing this notebook, the women entrepreneurship index measures the development of high potential\nfemale entrepreneurship worldwide. The notebook's objective is to provide an exploratory data analysis and a non-parametric test\nusing plotly and seaborn for visualization and scipy.stats library for the non-parametric test.\n\n>Also check my other notebooks\nSupermarket Business Analysis:<br>\nhttps:\/\/www.kaggle.com\/jaepin\/supermarket-business-analysis-and-visualization\n\n\n<b>Please do upvote<\/b> \ud83c\udff9","05265d2a":"<b> Spearman Correlation <\/b>\n---\n\nSpearman correlation helps us to find the degree of association of two-variables. It evaluates a monotonic relationship\nbetween a continuous variable or ordinal variable.","99e23e40":"<h3 style=\"color: white; background-color: #A33834;\">\nResults\n<br>\n<\/h3>","5113f03c":"<h3 style=\"color: white; background-color: #A33834;\">\nNon-Parametric Tests ( Chi2, Cramer's V Test, Spearman Correlation )\n<br>\n<\/h3>","a388cdf3":"<h3 style=\"color: white; background-color: #A33834;\">\nLibraries\n<br>\n<\/h3>","4f4e9b37":"<h3 style=\"color: white; background-color: #A33834;\">\nVisualization\n<br>\n<\/h3>","d149dc4f":"This part I will present different figures, and so the interpretation will be up to you. ","e23c2e7c":"The results above tells us that there's a high association between the two variables (26.2223), \nwith a very strong Cramer V result of <b>0.7170<\/b>.\n\nThus we reject our Null hypothesis: <br>\n<b>H0:<\/b> There's no significant relationship between a countrys' development and EU Membership. <br>\n\nAnd accept our Alternative hypothesis: <br>\n<b>Ha:<\/b> There's a significant relationship between a countrys' development and EU Membership. \n\n<b>Entrepreneurship Index and Women Entrepreneurship Index<\/b> shows a high correlation of <b> 0.9077 <\/b>","41a9cd4f":"<h3 style=\"color: white; background-color: #A33834;\">\nThe DataFrame\n<br>\n<\/h3>","83f690e8":"[![women-entrepreneurs.jpg](https:\/\/i.postimg.cc\/FRpCb4Dz\/women-entrepreneurs.jpg)](https:\/\/postimg.cc\/8JFbDq8g)","aa47d380":"<b>H0:<\/b> There's no significant relationship between a countrys' development and EU Membership. <br>\n<b>Ha:<\/b> There's a significant relationship between a countrys' development and EU Membership. "}}