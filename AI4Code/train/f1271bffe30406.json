{"cell_type":{"0fd4185f":"code","0c3acf7d":"code","6040b017":"code","65294f64":"code","f9ada106":"code","ca0ab66c":"code","08061634":"code","ece36656":"code","48b6a92f":"code","0ae61d46":"code","34d8bde0":"code","2144e4ed":"code","a1039695":"code","c25f14c6":"code","22bff19d":"code","da543474":"code","4c17cd42":"code","bac83702":"code","4b728c5b":"code","55bf0a31":"code","061a0481":"code","d5fc28ea":"code","4d4a3a40":"code","0c165348":"code","0e51c8d7":"code","9a2f0129":"code","2b9d08cf":"code","552fb79f":"code","c3456a09":"code","efa56d11":"code","c758e86e":"code","84ba0204":"code","3ed23494":"code","a133dd8b":"code","4d5c5855":"code","a04ec7ba":"code","77a8974e":"code","5dcefeab":"code","1515f19d":"code","7977bd9e":"code","365636e5":"code","323d4397":"code","0b675ebb":"code","72eb311f":"code","e3236903":"code","326c93af":"code","4e224548":"code","6f487040":"code","13f7f40f":"code","6f860666":"code","e72b6360":"code","71fcab43":"code","7bbc758f":"code","e2758734":"code","7a800e57":"code","08a38e06":"code","f58f44bd":"code","5bff21b5":"code","ead66727":"code","a8893aa2":"markdown","0d62c19f":"markdown","63e431a7":"markdown","4dea3656":"markdown","85f81221":"markdown","3163d836":"markdown","902f262d":"markdown","9002ad3a":"markdown","35d5f482":"markdown","bbc39f7f":"markdown","2e329dca":"markdown","54662d3e":"markdown","eba4ed31":"markdown","e76a6414":"markdown","2b9988b3":"markdown","e9c4885e":"markdown","f9a368b1":"markdown","c5c1d788":"markdown"},"source":{"0fd4185f":"import warnings\nwarnings.simplefilter(action='ignore')\n\nimport pandas as pd\nimport numpy as np\nfrom sklearn.neighbors import LocalOutlierFactor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression, Ridge, RidgeCV, ElasticNet, ElasticNetCV, Lasso, LassoCV\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import LabelEncoder","0c3acf7d":"hitters = pd.read_csv('..\/input\/hitters\/Hitters.csv')\ndf = hitters.copy()","6040b017":"df.head()","65294f64":"df.describe().T","f9ada106":"df.shape","ca0ab66c":"df.isnull().sum()","08061634":"df['Salary'].describe()","ece36656":"df['Year_interval'] = pd.cut(x=df['Years'], bins=[0, 3, 6, 10, 15, 19, 24])","48b6a92f":"df.head()","0ae61d46":"df.groupby(['League','Division', 'Year_interval']).agg({'Salary':'mean'})","34d8bde0":"df['Salary'] = df.groupby(['League', 'Division', 'Year_interval'])['Salary'].transform(lambda x: x.fillna(x.mean()))","2144e4ed":"df.head()","a1039695":"df.isnull().sum()","c25f14c6":"df.drop('Year_interval', axis = 1, inplace = True)","22bff19d":"le = LabelEncoder()\ndf['League'] = le.fit_transform(df['League'])\ndf['Division'] = le.fit_transform(df['Division'])\ndf['NewLeague'] = le.fit_transform(df['NewLeague'])","da543474":"df.head()","4c17cd42":"X = df.drop('Salary', axis = 1)\ny = df[['Salary']]","bac83702":"X_train, X_test, y_train, y_test = train_test_split(X, \n                                                    y, \n                                                    test_size = 0.20, random_state = 46)","4b728c5b":"reg_model = LinearRegression()","55bf0a31":"reg_model.fit(X_train, y_train)","061a0481":"y_pred_reg = reg_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_reg))","d5fc28ea":"import seaborn as sns\nsns.boxplot(df['Salary']);","4d4a3a40":"df.sort_values('Salary', ascending = False)","0c165348":"df.drop(df.iloc[217:218,:].index, inplace = True)","0e51c8d7":"df.drop(df.iloc[294:295, :].index, inplace = True)","9a2f0129":"X = df.drop('Salary', axis = 1)\ny = df[['Salary']]\nX_train, X_test, y_train, y_test = train_test_split(X, \n                                                    y, \n                                                    test_size = 0.20, random_state = 46)","2b9d08cf":"reg_model.fit(X_train, y_train)","552fb79f":"y_pred_reg = reg_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_reg))","c3456a09":"enet = ElasticNet().fit(X_train, y_train)\ny_pred_enet = enet.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_enet))","efa56d11":"lasso_model = Lasso().fit(X_train, y_train)\ny_pred_lass = lasso_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_lass))","c758e86e":"ridge_model = Ridge().fit(X_train, y_train)\ny_pred_ridge = enet.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_ridge))","84ba0204":"alphas1 = np.linspace(0,1,1000)\nalphas2 = 10**np.linspace(10,-2,100)*0.5\nalphas3 = np.random.randint(0,1000,100)","3ed23494":"enet_cv = ElasticNetCV(alphas = alphas3, cv = 10).fit(X_train, y_train)","a133dd8b":"enet_cv.alpha_","4d5c5855":"enet_tuned = ElasticNet(alpha = enet_cv.alpha_, l1_ratio = 0.999).fit(X_train, y_train)","a04ec7ba":"y_pred_enett = enet_tuned.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_enett))","77a8974e":"lasso_cv = LassoCV(alphas = alphas3, cv = 10).fit(X_train, y_train)\nlasso_cv.alpha_","5dcefeab":"lasso_tuned = Lasso(alpha = lasso_cv.alpha_).fit(X_train, y_train)\ny_pred_lassot = lasso_tuned.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_lassot))","1515f19d":"ridge_cv = RidgeCV(alphas = alphas3, cv = 10).fit(X_train, y_train)\nridge_cv.alpha_","7977bd9e":"ridge_tuned = Ridge(alpha = ridge_cv.alpha_).fit(X_train, y_train)\ny_pred_ridget = ridge_tuned.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_ridget))","365636e5":"clf = LocalOutlierFactor(n_neighbors = 20, contamination = 0.1)","323d4397":"clf.fit_predict(df)","0b675ebb":"df_scores = clf.negative_outlier_factor_","72eb311f":"np.sort(df_scores)[:30]","e3236903":"threshold = np.sort(df_scores)[4]","326c93af":"threshold","4e224548":"df.drop(df[df_scores<threshold].index, inplace = True)","6f487040":"X = df.drop('Salary', axis = 1)\ny = df[['Salary']]\nX_train, X_test, y_train, y_test = train_test_split(X, \n                                                    y, \n                                                    test_size = 0.20, random_state = 46)","13f7f40f":"reg_model.fit(X_train, y_train)\ny_pred_reg = reg_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_reg))","6f860666":"enet = ElasticNet().fit(X_train, y_train)\ny_pred_enet = enet.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_enet))","e72b6360":"lasso_model = Lasso().fit(X_train, y_train)\ny_pred_lass = lasso_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_lass))","71fcab43":"ridge_model = Ridge().fit(X_train, y_train)\ny_pred_ridge = ridge_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_ridge))","7bbc758f":"enet_cv = ElasticNetCV(alphas = alphas3, cv = 10).fit(X_train, y_train)\nenet_cv.alpha_","e2758734":"enet_tuned = ElasticNet(alpha = enet_cv.alpha_, l1_ratio = 0.01).fit(X_train, y_train)\ny_pred_enett = enet_tuned.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_enett))","7a800e57":"ridge_cv = RidgeCV(alphas = alphas1, cv = 10).fit(X_train, y_train)\nridge_cv.alpha_","08a38e06":"ridge_tuned = Ridge(alpha = ridge_cv.alpha_).fit(X_train, y_train)\ny_pred_ridget = ridge_tuned.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_ridget))","f58f44bd":"lasso_cv = LassoCV(alphas = alphas1, cv = 10).fit(X_train, y_train)\nlasso_cv.alpha_","5bff21b5":"lasso_tuned = Lasso(alpha = lasso_cv.alpha_).fit(X_train, y_train)\ny_pred_lassot = lasso_tuned.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_lassot))","ead66727":"enet_tuned = ElasticNet(alpha = 11250, l1_ratio = 0.7).fit(X_train, y_train)\ny_pred_enett = enet_tuned.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred_enett))","a8893aa2":"## Last Model Tests","0d62c19f":"## Modelling with other regression techniques","63e431a7":"## Changing cathegorical variables into binary","4dea3656":"## First Model Test","85f81221":"I dropped two observations manually.","3163d836":"## Final model with a weird alpha is optimum","902f262d":"RMSE decreased to 298 by dropping just 2 observations manually.","9002ad3a":"## Last models with hiperparameter optimization","35d5f482":"## Outlier Analysis","bbc39f7f":"# Hitters","2e329dca":"## Handling the missing values\n\nAll of the missing values is in the 'Salary' variable. Even though it's a critical variable, I'll fill it since the dataset is very small and has a limited number of observations. League, Division and Years, I think, can be determinative in Salary. Therefore I divided 'Years' into intervals and then filled the missing values with respect to League, Division and Year.","54662d3e":"## Model","eba4ed31":"## Outlier Detection with Local Outlier Factor","e76a6414":"## Exploratory Data Analysis","2b9988b3":"## Description\n**Context**\n\nThis dataset is part of the R-package ISLR and is used in the related book by G. James et al. (2013) \"An Introduction to Statistical Learning with applications in R\" to demonstrate how Ridge regression and the LASSO are performed using R.\n\n**Content**\n\nThis dataset was originally taken from the StatLib library which is maintained at Carnegie Mellon University. This is part of the data that was used in the 1988 ASA Graphics Section Poster Session. The salary data were originally from Sports Illustrated, April 20, 1987. The 1986 and career statistics were obtained from The 1987 Baseball Encyclopedia Update published by Collier Books, Macmillan Publishing Company, New York.\n\n**Format**\n\nA data frame with 322 observations of major league players on the following 20 variables.\\\n**AtBat**: Number of times at bat in 1986 \\\n**Hits**: Number of hits in 1986 \\\n**HmRun**: Number of home runs in 1986 \\\n**Runs**: Number of runs in 1986 \\\n**RBI**: Number of runs batted in in 1986 \\\n**Walks**: Number of walks in 1986 \\\n**Years**: Number of years in the major leagues \\\n**CAtBat**: Number of times at bat during his career \\\n**CHits**: Number of hits during his career \\\n**CHmRun**: Number of home runs during his career \\\n**CRuns**: Number of runs during his career \\\n**CRBI**: Number of runs batted in during his career \\\n**CWalks**: Number of walks during his career \\\n**League**: A factor with levels A and N indicating player\u2019s league at the end of 1986 \\\n**Division**: A factor with levels E and W indicating player\u2019s division at the end of 1986 \\\n**PutOuts**: Number of put outs in 1986 \\\n**Assists**: Number of assists in 1986 \\\n**Errors**: Number of errors in 1986 \\\n**Salary**: 1987 annual salary on opening day in thousands of dollars \\\n**NewLeague**: A factor with levels A and N indicating player\u2019s league at the beginning of 1987","e9c4885e":"## Modelling with Hiperparameter Optimization","f9a368b1":"## Reading the data","c5c1d788":"## Aim\nThe aim in this notebook is to create a regression model that predicts salaries of baseball players based on their statistics, \nand reduce RMSE (Root Mean Square Error) as much as possible.\n"}}