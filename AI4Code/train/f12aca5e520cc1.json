{"cell_type":{"3f68bb7d":"code","1a7a731f":"code","ce23da19":"code","281d267c":"code","d5236cdb":"code","ab0d5902":"code","41f803ea":"code","bed734b3":"code","368dcec8":"code","b7a2c823":"code","44432a25":"code","67e76cf2":"code","413e122e":"code","26ad1c7b":"code","95a097f3":"code","a8f9fd74":"code","072adc21":"code","705cdc24":"code","fcaae78e":"code","af622fec":"code","87e967aa":"code","b9014321":"code","971a4802":"code","3a3a04f3":"code","3cd30fec":"code","92d49d2e":"code","f2689d41":"code","e41421a6":"code","d0de3142":"code","37c36100":"code","a146810f":"code","3b632c83":"code","33d65722":"code","c2626184":"code","d5c4701c":"code","863a66d3":"code","dfe00e14":"code","311cb70f":"code","537e412c":"code","3ddd43e7":"markdown","61e75620":"markdown","e1774c64":"markdown","015aef88":"markdown"},"source":{"3f68bb7d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nsns.set(style=\"whitegrid\")","1a7a731f":"wine_data = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv', parse_dates=True, encoding = \"cp1252\")\nwine_data.head()","ce23da19":"wine_data.isnull().sum()","281d267c":"fig = plt.figure(figsize = (10,6))\nsns.countplot(data=wine_data, x='quality')","d5236cdb":"wine_data.loc[wine_data['quality']<=4, \"Quality\"]=\"Low Quality\"\nwine_data.loc[(wine_data['quality']>=5)&(wine_data['quality']<=7), \"Quality\"]=\"Normal\"\nwine_data.loc[wine_data['quality']>=8, \"Quality\"]=\"High Quality\"\n\nfig = plt.figure(figsize = (10,6))\nsns.countplot(data=wine_data, x='Quality', order=['Low Quality','Normal','High Quality'])","ab0d5902":"sns.pairplot(data=wine_data, hue=\"quality\")","41f803ea":"corr = wine_data.corr(method = \"pearson\")\n# corr = wine_data.corr(method = \"spearman\")\n# corr = wine_data.corr(method = \"kendall\")\n\nf, ax = plt.subplots(figsize=(10, 10))\n\nsns.heatmap(corr, mask=np.zeros_like(corr, dtype=np.bool), cmap=\"coolwarm\", square=True, ax=ax, annot=True, fmt=\".2f\")","bed734b3":"def ploting(text_col):\n    fig, ax = plt.subplots(nrows=3, ncols=2, sharex=False, figsize=(16,15))\n    fig.suptitle(text_col.capitalize())\n\n    sns.barplot(ax=ax[0][0], data = wine_data, x = 'quality', y = text_col, ci=None)\n\n    sns.boxplot(ax=ax[0][1], data = wine_data, x = 'quality', y = text_col)\n\n    sns.violinplot(ax=ax[1][0], data = wine_data, x = 'quality', y = text_col, inner=None, color=\".8\")\n    sns.stripplot(ax=ax[1][0], data = wine_data, x = 'quality', y = text_col)\n\n    sns.histplot(ax=ax[1][1], data=wine_data, x=\"fixed acidity\", bins=15, kde=True, binwidth=0.5)\n    \n    sns.histplot(ax=ax[2][0],data=wine_data, x=\"quality\", y=text_col, discrete=(True, False), cbar=True)\n    \n    sns.kdeplot(ax=ax[2][1],data=wine_data, x=text_col, hue=\"quality\")\n\n    fig.tight_layout()","368dcec8":"ploting('fixed acidity')","b7a2c823":"ploting('volatile acidity')","44432a25":"ploting('citric acid')","67e76cf2":"ploting('residual sugar')","413e122e":"ploting('chlorides')","26ad1c7b":"ploting('free sulfur dioxide')","95a097f3":"ploting('total sulfur dioxide')","a8f9fd74":"ploting('density')","072adc21":"ploting('pH')","705cdc24":"ploting('sulphates')","fcaae78e":"ploting('alcohol')","af622fec":"import warnings\nwarnings.filterwarnings(\"ignore\")","87e967aa":"X = wine_data[['fixed acidity',\n               'volatile acidity',\n               'citric acid',\n               'residual sugar',\n               'chlorides',\n               'free sulfur dioxide',\n               'total sulfur dioxide',\n               'density',\n               'pH',\n               'sulphates',\n               'alcohol']]\n\ny = wine_data['quality']","b9014321":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.15, random_state=0)","971a4802":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nX_train_scl = scaler.fit_transform(X_train)\nX_test_scl = scaler.transform(X_test)","3a3a04f3":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import AdaBoostClassifier, GradientBoostingClassifier, RandomForestClassifier, ExtraTreesClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\n\nfrom sklearn.model_selection import cross_validate, cross_val_score\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score, precision_score\nfrom sklearn.model_selection import KFold","3cd30fec":"models=[(\"Logistic Regression\",LogisticRegression()),\n        (\"Linear Discriminant Analysis\",LinearDiscriminantAnalysis()),\n        (\"Decision Tree\",DecisionTreeClassifier()),\n        (\"Random Forest\",RandomForestClassifier()),\n        (\"Extra Trees\",ExtraTreesClassifier()),\n        (\"Gradient Boostin\",GradientBoostingClassifier()),\n        (\"KNeighbors\",KNeighborsClassifier()),\n        (\"SVM\",SVC()),\n        (\"Gaussian Naive Bayes\",GaussianNB()),\n        (\"Ada Boost\",AdaBoostClassifier())]\n\n    \nfor name, model in models:\n    results = cross_val_score(model, X_train, y_train.values.ravel(), cv=10, scoring='accuracy')\n    print(f\"\\x1b[94m{name}\\x1b[0m: \\x1b[95m{results.mean():.4f}\\x1b[0m \u00b1 {results.std():.4f}\")","92d49d2e":"for name, model in models:\n    kfold = KFold(n_splits=10)\n    results = cross_val_score(model, X_train, y_train, cv=kfold, scoring='accuracy')\n    print(f\"\\x1b[94m{name}\\x1b[0m: \\x1b[95m{results.mean():.4f}\\x1b[0m \u00b1 {results.std():.4f}\")","f2689d41":"et = ExtraTreesClassifier()\net.fit(X_train, y_train)\net_predict = et.predict(X_test)\n\nprint(f\"\u0422rain: {et.score(X_train, y_train)*100} - \u0422est: {et.score(X_test, y_test)*100}\")\n\nrfc_eval = cross_val_score(estimator = et, X = X_train, y = y_train, cv = 10)\nprint(\"cross_val_score: \", rfc_eval.mean()*100)\n\net_acc_score = accuracy_score(y_test, et_predict)\nprint(\"accuracy_score: \", et_acc_score*100)\n# print(f\"\u0422rain: {accuracy_score(y_train, et.predict(X_train))*100} - \u0422est: {et_acc_score*100}\")","e41421a6":"cr = classification_report(y_test, et_predict)\nprint(cr)","d0de3142":"cm=confusion_matrix(y_test, et_predict)\n\nf, ax = plt.subplots(figsize=(15, 6))\nsns.heatmap(cm, annot=True, fmt='d', cmap='Blues', square=True, linewidths=0.01, linecolor='grey')\nplt.title('Confustion matrix')\nplt.ylabel('True label')\nplt.xlabel('Predicted label')","37c36100":"feature_importance = et.feature_importances_\nsorted_idx = np.argsort(feature_importance)\npos = np.arange(sorted_idx.shape[0]) + .5\n\nfig = plt.figure(figsize=(17, 6))\n\nplt.barh(pos, feature_importance[sorted_idx], align='center')\nplt.yticks(pos, np.array(X_train.columns)[sorted_idx])\nplt.title('Feature Importance')","a146810f":"from sklearn.inspection import permutation_importance\n\nperm_importance = permutation_importance(et, X_test, y_test, n_repeats=30, random_state=0, scoring='accuracy')\nsorted_idx = np.argsort(perm_importance.importances_mean)\npos = np.arange(sorted_idx.shape[0]) + .5\n\nfor i in perm_importance.importances_mean.argsort()[::-1]:\n    print(f\"{np.array(X_train.columns)[i]:<8} {perm_importance.importances_mean[i]:.3f} +\/- {perm_importance.importances_std[i]:.3f}\")\n\n\nfig = plt.figure(figsize=(17, 6))\n\nplt.barh(pos, perm_importance.importances_mean[sorted_idx], align='center')\nplt.yticks(pos, np.array(X_train.columns)[sorted_idx])\nplt.title('Permutation Importance')","3b632c83":"import shap\n\nexplainer = shap.TreeExplainer(et)\nshap_values = explainer.shap_values(X_test)\n\nshap.summary_plot(shap_values, X_test, plot_type=\"bar\")","33d65722":"shap.summary_plot(shap_values[0], X_test)","c2626184":"shap.dependence_plot('alcohol', shap_values[0], X_test, interaction_index='sulphates')","d5c4701c":"shap.dependence_plot('alcohol', shap_values[0], X_test, alpha=0.5, dot_size=50, cmap=plt.get_cmap(\"cool\"))","863a66d3":"shap.initjs()\nshap.force_plot(explainer.expected_value[1], shap_values[1][0,:], X_test.iloc[0,:])","dfe00e14":"k_explainer = shap.KernelExplainer(et.predict_proba, X_train)\nk_shap_values = k_explainer.shap_values(X_test.iloc[7])\nshap.force_plot(k_explainer.expected_value[1], k_shap_values[1], X_test.iloc[7])","311cb70f":"shap.force_plot(explainer.expected_value[0], shap_values[0], X_test)","537e412c":"shap.force_plot(explainer.expected_value[1], shap_values[1][:10,:], X_test.iloc[:10,:])","3ddd43e7":"# Classification","61e75620":"# Data Visualization","e1774c64":"# Overview \n\nInput Variables:\n- **fixed acidity**: most acids involved with wine or fixed or nonvolatile\n- **volatile acidity**: the amount of acetic acid in wine\n- **citric acid**: found in small quantities, citric acid can add 'freshness' and flavor to wines\n- **residual sugar**: the amount of sugar remaining after fermentation stops\n- **chlorides**: the amount of salt in the wine\n- **free sulfur dioxide**: the free form of $SO_2$ exists in equilibrium between molecular $SO_2$ (as a dissolved gas) and bisulfite ion\n- **total sulfur dioxide**: amount of free and bound forms of $SO_2$\n- **density**: the density of water is close to that of water depending on the percent alcohol and sugar content\n- **pH**: describes how acidic or basic a wine is on a scale from 0 (very acidic) to 14 (very basic)\n- **sulphates**: a wine additive which can contribute to sulfur dioxide gas ($SO_2$) levels\n- **alcohol**: the percent alcohol content of the wine\n\nOutput Variable:\n- **quality**: output variable (based on sensory data, score between 0 and 10)","015aef88":"- **Low Quality**: 3, 4\n- **Normal**: 5, 6, 7\n- **High Quality**: 8, 9"}}