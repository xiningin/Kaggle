{"cell_type":{"22bec46b":"code","c1818e6c":"code","32f3abbd":"code","05cd754f":"code","973508de":"code","29f305f4":"code","e0f67e44":"code","0da780d2":"code","99d0bbcc":"code","fb09e98a":"code","c463fdf6":"code","387cb91e":"code","4cdd07d5":"code","64a8cf35":"code","8d1148b2":"code","75c3a639":"code","ef1154e0":"code","8c8cca2d":"code","e89dc3f6":"code","f2a42861":"code","2562a9c3":"code","bbc76876":"code","5825da47":"code","8477365a":"code","a3f99b7e":"code","134ddd5c":"code","071fe681":"code","9ca86f89":"code","8ff6d1cf":"code","dd069952":"code","a0b3012f":"code","b9a285b9":"code","f6822d55":"code","b921371f":"code","a5fb0a8d":"code","6627973a":"code","41e0aac4":"code","cbd6786f":"code","7901a5fe":"code","62a70e20":"code","f872f051":"code","b0b21036":"code","dd602c02":"code","3f7b2b30":"code","d1b63581":"code","1f09be16":"code","f10a55da":"code","399804cb":"code","a6f9cff1":"code","5f22847d":"code","5d3f395b":"code","a7bbde03":"code","eba1a3ca":"code","99d45cd0":"code","3f03ddc9":"code","84f5cd96":"markdown","b02a118e":"markdown","b1ef4de5":"markdown","c2b8a024":"markdown","9301ec79":"markdown","23650ae4":"markdown","eafed32a":"markdown","8997f754":"markdown","db4706a7":"markdown","daf78eca":"markdown","92828b40":"markdown","861da42f":"markdown","383f2cba":"markdown","b5c570dd":"markdown","33667567":"markdown","6b1e08d6":"markdown","8b7cde2e":"markdown","987931f1":"markdown","de6c970d":"markdown","2dc0b5af":"markdown","dd79f9d4":"markdown","7012022c":"markdown","9f97754f":"markdown","c46998a2":"markdown"},"source":{"22bec46b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # plotting\nimport seaborn as sns\n\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.preprocessing import StandardScaler\nimport os # accessing directory structure","c1818e6c":"dataframe = pd.read_csv('..\/input\/countries of the world.csv', sep= ',' , decimal=',' )\n#(sep= ',' , decimal=',') is added to replace comma separated values with dot for decimal conversion.","32f3abbd":"dataframe.head()","05cd754f":"dataframe.columns","973508de":"dataframe.dtypes","29f305f4":"df = dataframe.drop(['Area (sq. mi.)', 'Pop. Density (per sq. mi.)','Coastline (coast\/area ratio)','Infant mortality (per 1000 births)',\n               'Other (%)', 'Agriculture', 'Industry', 'Service', 'Arable (%)','Crops (%)','Climate' ], axis=1)\ndf","e0f67e44":"data = dataframe","0da780d2":"data.info()","99d0bbcc":"data.describe()","fb09e98a":"data.head()","c463fdf6":"data.index\ndata","387cb91e":"print('Dataset has null values?')\ndata.isnull().values.any()","4cdd07d5":"for col in data.columns:\n    print(col  , (data[col].isnull().sum()\/len(data[col])*100 ))","64a8cf35":"data = data.fillna(0)\nfor col in data.columns:\n    print(col  , (data[col].isnull().sum()\/len(data[col])*100 ))\n","8d1148b2":"#Recheck for missing values\nprint('Dataset has null values?')\ndata.isnull().values.any()","75c3a639":"## to read specific columns\nprint(data[['Region','Country', \n                 'Population','Net migration','GDP ($ per capita)']])","ef1154e0":"  ##To read each row, the code below can be used. But I would comment it out as the result would be excessive. \n#print(data_drop.iloc[1:4])\n#for index, row in data.iterrows():\n #   print(index,row)\n                     ","8c8cca2d":"data.sort_values(by=['Region', 'Country','Net migration','GDP ($ per capita)'])","e89dc3f6":"avg_population = sum(data.Population)\/len(data.Population)\nprint(\"avg_population: \",avg_population)","f2a42861":"data['Region'].unique()","2562a9c3":"len(data['Region'].unique())","bbc76876":"data['Net migration'].mean()","5825da47":"data['Net migration'].min()","8477365a":"data['Net migration'].max()","a3f99b7e":"data['Net migration'].std()","134ddd5c":"data['Net migration'].mode()","071fe681":"data['Net migration']","9ca86f89":"data['GDP ($ per capita)'].mean()","8ff6d1cf":"data['GDP ($ per capita)'].min()","dd069952":"data['GDP ($ per capita)'].max()","a0b3012f":"data['GDP ($ per capita)'].std()","b9a285b9":"data['GDP ($ per capita)'].mode()\n","f6822d55":"region = data[\"Region\"].value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=region.index,y=region.values)\nplt.xticks(rotation=90)\nplt.ylabel('Number of countries')\nplt.xlabel('Region')\nplt.title('Number of Countries by REG\u0130ON',color = 'red',fontsize=20)\nplt.plot()","b921371f":"region = data[\"Region\"].value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=region.index,y=region.values)\nplt.xticks(rotation=90)\nplt.ylabel('GDP ($ per capita)')\nplt.xlabel('Region')\nplt.title('GDP by REG\u0130ON',color = 'green',fontsize=20)\nplt.plot()","a5fb0a8d":"#Box Plot\ngroup = data.groupby(\"Region\")\ngroup.mean()\n\nsns.boxplot(x=data[\"Region\"],y=data[\"GDP ($ per capita)\"],data=data, width=0.7,palette=\"Set2\",fliersize=5)\nplt.xticks(rotation=90)\nplt.title(\"GDP BY REG\u0130ON\",color=\"green\")\n\nplt.plot()","6627973a":"region = data[\"Region\"].value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=region.index,y=region.values)\nplt.xticks(rotation=90)\nplt.ylabel('Net migration')\nplt.xlabel('Region')\nplt.title('Net migration by REG\u0130ON',color = 'blue',fontsize=20)\nplt.plot()","41e0aac4":"group = data.groupby(\"Region\")\ngroup.mean()\n\nsns.boxplot(x=data[\"Region\"],y=data[\"Net migration\"],data=data, width=0.7,palette=\"Set2\",fliersize=5)\nplt.xticks(rotation=90)\nplt.title(\"Net migration BY REG\u0130ON\",color=\"red\")\n\nplt.plot()","cbd6786f":"group = data.groupby(\"Region\")\ngroup.mean()\n\nsns.boxplot(x=data[\"Region\"],y=data[\"Population\"],data=data, width=0.7,palette=\"Set2\",fliersize=5)\nplt.xticks(rotation=90)\nplt.title(\"Population BY REG\u0130ON\",color=\"red\")\n\nplt.plot()","7901a5fe":"region = data[\"Region\"].value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=region.index,y=region.values)\nplt.xticks(rotation=90)\nplt.ylabel('Population')\nplt.xlabel('Region')\nplt.title('Net migration by REG\u0130ON',color = 'blue',fontsize=20)\nplt.plot()","62a70e20":"sns.set(style=\"whitegrid\")\nsns.violinplot(x=\"Literacy (%)\",y=\"Phones (per 1000)\",data=df,hue=\"Region\",palette=\"PRGn\")\n\nplt.plot()","f872f051":"data.plot(kind='scatter', x='Literacy (%)', y='GDP ($ per capita)')","b0b21036":"sns.stripplot(x=\"Region\",y=\"Population\",data=data,color=\"m\")\n\nplt.xticks(rotation=90)\n\nplt.plot","dd602c02":"plt.scatter(data[\"Birthrate\"],data[\"Deathrate\"],marker='^',facecolor='green')\n\nplt.grid(True)\n\nplt.xlabel('Birthrate')\nplt.ylabel('Deathrate')\n\nplt.title(\"Scatter Plot\")\n\nplt.legend(loc='upper left')\n\nplt.show()","3f7b2b30":"#Histogram showing the rate of net migration across regions\nplt.hist(data[\"Net migration\"], bins=10,density=True, facecolor='g', alpha=0.75)\n\nplt.xlabel('Net migration')\n\nplt.ylabel('Rate')\n\nplt.title('Histogram Plot')\n\nplt.grid(True)\n\nplt.show()","d1b63581":"explode = (0, 0.1, 0, 0,0,0,0)\n\nsizes=[15,10,25,5,30,5,10]\n\nlabels=\"ASIA\",\"EASTERN EUROPE\",\"NORTHERN AFRICA\",\"OCEANIA\",\"WESTERN EUROPE\",\"SUB-SAHARAN AFRICA\",\"NORTHERN AMERICA\"\n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, labels=labels,explode=explode, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","1f09be16":"#correlation\ndata.corr()","f10a55da":"#Visual representation in form of heatmap for correlated data\nplt.figure(figsize=(16,12))\nax=plt.axes()\nsns.heatmap(data=data.iloc[:,2:].corr(),annot=True,fmt='.2f',cmap='coolwarm',ax=ax)\nax.set_title('Heatmap showing correlated values for the Dataset')\nplt.show()","399804cb":"# By looking at the heatmap for a given dataset:\n#We can say that following factors are positively correlated with Net migration:- r>0 for:-\n\n#GDP_Per_Capita = (0.38) - highest postive correlation with Net migration\n\n#Phones - (0.24)\n\n#Deathrate = (0.04)\n\n#Following values are inversely correlated with GDP per capita:- r<0 for:-\n\n#Literacy (%) = (-0.02)\n\n#Birthrate = (-0.06) - Highly negatively correlated\n\n#Population = (0.00)\n\n#Note that net migration has 0.00 corellation with population","a6f9cff1":"x = data[['GDP ($ per capita)', 'Phones (per 1000)', 'Literacy (%)', 'Net migration', 'Birthrate','Deathrate', 'Population']]","5f22847d":"# show corr of the same\nplt.figure(figsize=(10,5))\nax=plt.axes()\nsns.heatmap(x.corr(), annot=True,ax=ax)\nax.set_title('Heatmap showing correlated values for the Dataset')\nplt.show()","5d3f395b":"x = data[['GDP ($ per capita)','Literacy (%)','Birthrate','Region']]\n\ng=sns.pairplot(x, hue=\"Region\", diag_kind='hist')\ng.fig.suptitle('Pairplot showing GDP per capita, Literacy and Birthrate against Region',y=1.05)","a7bbde03":"data['Total_GDP ($)'] = data['GDP ($ per capita)'] * data['Population']\ntop_gdp_countries = data.sort_values('Total_GDP ($)',ascending=False).head(10)\nother = pd.DataFrame({'Country':['Others'], 'Total_GDP ($)':[data['Total_GDP ($)'].sum() - top_gdp_countries['Total_GDP ($)'].sum()]})\ngdps = pd.concat([top_gdp_countries[['Country','Total_GDP ($)']],other],ignore_index=True)\n\nfig, axes = plt.subplots(nrows=1, ncols=2, figsize=(20,7),gridspec_kw = {'width_ratios':[2,1]})\nsns.barplot(x='Country',y='Total_GDP ($)',data=gdps,ax=axes[0],palette='Set2')\naxes[0].set_xlabel('Country',labelpad=30,fontsize=16)\naxes[0].set_ylabel('Total_GDP',labelpad=30,fontsize=16)\n\ncolors = sns.color_palette(\"Set2\", gdps.shape[0]).as_hex()\naxes[1].pie(gdps['Total_GDP ($)'], labels=gdps['Country'],colors=colors,autopct='%1.1f%%',shadow=True)\naxes[1].axis('equal')\nplt.show()","eba1a3ca":"Rank_total_gdp = data[['Country','Total_GDP ($)']].sort_values('Total_GDP ($)', ascending=False).reset_index()\nRank_gdp = data[['Country','GDP ($ per capita)']].sort_values('GDP ($ per capita)', ascending=False).reset_index()\nRank_total_gdp= pd.Series(Rank_total_gdp.index.values+1, index=Rank_total_gdp.Country)\nRank_gdp = pd.Series(Rank_gdp.index.values+1, index=Rank_gdp.Country)\nRank_change = (Rank_gdp-Rank_total_gdp).sort_values(ascending=False)\nprint('rank of total GDP - rank of GDP per capita:')\nRank_change.loc[top_gdp_countries.Country]","99d45cd0":"plt.figure(figsize=(16,12))\nax=plt.axes()\ny=data[data.columns[2:]].apply(lambda x: x.corr(data['Total_GDP ($)']))\nprint(y)\nsns.heatmap(data=data.iloc[:,2:].corr(),annot=True,fmt='.2f',cmap='coolwarm',ax=ax)\nax.set_title('Heatmap showing correlated values for the Dataset with respect to total ')\nplt.show()","3f03ddc9":"#Conclusions\n#The analysis was performed mostly with regards to correlation between Net migration and other factors or variables \n#such as Literacy, Population, Birthrate, Deathrate, etc.\n#Net migration is correlated with many of the other variables not limited to literacy, birthrate, etc.\n#Across the globe, Net migration is positively correlated with GDP per capita, Phones, and so on within each region. \n#Regions with more technological advancement, where people tend to buy more phones happen to have more Net migration. \n#Density distribution is mostly skewed for highly correlated factors. \n#Key findings leads us to know that Net migration is positively correlated with the factors such as GDP per capita.\n#Population has no correlation with Net Migration.","84f5cd96":"To view types of data contained within each feature or column:","b02a118e":"# Pie Chart","b1ef4de5":"# Histogram","c2b8a024":"## Exploratory Analysis\nTo begin this exploratory analysis, first import all necessary libraries such as `numpy`, `pandas`, `matplotlib`, and seaborn. ","9301ec79":"To replace null or missing values with zero (0):","23650ae4":"# Violin Plot","eafed32a":"# Pairplot\nPairs plot (also known as scatterplot matrix). In a pair plot we can see the distribution for both of the single variables and relationships between two variables. (Here Net migration, Literacy and Birthrate). Here we have grouped our data on basis of regions and then plotted it. The histogram on the diagonal gives us the distribution of a single variable while the scatter plots on the upper and lower triangles show the relationship between two variables.","8997f754":"To drop columns not needed:","db4706a7":"# Using a strip plot to see population by region","daf78eca":"**To view the header names (columns):**","92828b40":"Specify read location or path of file (dataset) ","861da42f":"# Choose attributes which shows relation","383f2cba":"# Correlation\nThis is any statistical association, though in common usage it most often refers to how close two variables are to having a linear relationship with each other. The correlation coefficient r measures the strength and direction of a linear relationship between two variables on a scatterplot. Note: If r>0, the higher the correlation. And if r<0, the correlation is inversely related\n\n> Table Overview:- Gives the Correlated values of each column with each other in a dataframe","b5c570dd":"* Import all necessary libraries*","33667567":"To view column information including non-null values and datatypes:","6b1e08d6":"##Begin Exploratory Data Analysis (ETA)","8b7cde2e":"## Introduction\nThis world countries (countries of the world) dataset originally belongs to the United States Government.\nI would use the data set for exploratory analysis and visualizaion as seen below.\nFeel free to comment below with recommendations or criticism.\n\nThis work was fundamentally done as a group project with my wonderful team.\n\n#PROBLEM STATEMENT: EFFECT OF MIGRATION (NET MIGRATION) ON OTHER VARIABLES SUCH AS GDP per capita, POPULATION, LITERACY, BIRTHRATE, DEATHRATE, PHONES AND COUNTRY.\n\n#Hypothesis: Net migration has positive effect on GDP per capita\n\n#Test is done by correlation: testing for degree of relationship between Net migration and other factors or variables.","987931f1":"To read specific columns","de6c970d":"# Calculating the total GDP and Plotting top 10 countries with highest Total GDP1","2dc0b5af":"To view column or feature information:","dd79f9d4":"To check if there are missing or null values","7012022c":"To view percentage of missing values per feature or column:\nNote that maximum percentage of missing values is 9.7% approximately which is the `Climate` column.","9f97754f":"# Correlation between Total GDP of a country and other variables such as Population, Literacy, etc.","c46998a2":"To describe the dataframe and view minimum, maximum, percentiles, mean, standard deviation, etc:"}}