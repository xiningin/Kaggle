{"cell_type":{"c3706452":"code","047167e2":"code","74d43141":"code","9ff38765":"code","fc78253f":"code","69169466":"code","5f980e52":"code","0d778afe":"code","c65565c7":"code","0b8279db":"code","6412e63b":"code","5f4e0e98":"code","414e7020":"code","252ad345":"code","5534c8cb":"code","16d3a6fc":"code","c390cfb5":"code","6c5190ed":"code","afd2b375":"code","936b94ac":"code","fb0c146c":"code","a52fa53b":"code","8c61a44d":"code","e4c4fe68":"code","cc7b787b":"code","84c24004":"code","609e18b0":"code","1119eeed":"code","bd5b91ba":"code","7af83908":"code","706b55cf":"code","4454fe6c":"code","0d61ef31":"code","3b8c1f4c":"code","01c49f15":"code","82fb8580":"code","287f4df6":"code","ff6271bf":"code","d9de56d9":"code","b3b5f054":"code","283c08d2":"code","9d4c95d7":"code","3c96761e":"code","b7c40da8":"code","bccfb825":"code","2475808a":"code","8baf81b4":"code","ad5bd2fd":"code","a8f46f0a":"code","ff8a3b6f":"code","d7cbc680":"markdown","c89bdc02":"markdown","c1178bef":"markdown","6a6ee5ed":"markdown","f4708bc0":"markdown","055d04fd":"markdown","cba173e3":"markdown","db6c140e":"markdown","27abed6f":"markdown","f920b303":"markdown"},"source":{"c3706452":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport squarify\nfrom wordcloud import WordCloud\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier  \nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier \nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report","047167e2":"data = pd.read_csv('..\/input\/credit-card-customers\/BankChurners.csv')\ndata.head()","74d43141":"data.describe()","9ff38765":"data.columns","fc78253f":"data.isna().sum()","69169466":"plt.figure(figsize=(15,8))\nsns.distplot(data['Customer_Age'], color = 'green')\nage_mean = data['Customer_Age'].mean()\nplt.vlines(age_mean, 0, 0.05, color = 'green')\nprint('Age mean : ', age_mean)\nprint('Age median : ', data['Customer_Age'].median())","5f980e52":"data['Customer_Age_Categorized'] = pd.cut(data['Customer_Age'], bins=5)\ndata.head()","0d778afe":"plt.figure(figsize=(15,8))\nsns.countplot(y='Card_Category', hue='Customer_Age_Categorized', data = data)\nplt.legend(loc = 'center right')","c65565c7":"data.groupby('Card_Category')['Customer_Age_Categorized'].value_counts()","0b8279db":"colors = ['white', 'yellow', 'blue', 'green','black']\ncategories = data['Customer_Age_Categorized'].unique()\n\nplt.figure(figsize = (15,8))\nfor color, category in zip(colors,categories):\n    sns.distplot(data[data['Customer_Age_Categorized']== category]['Credit_Limit'], rug=True, rug_kws={\"color\": color},\n                  kde_kws={\"color\": color, \"lw\": 3, \"label\": category},\n                  hist_kws={\"histtype\": \"step\", \"linewidth\": 3,\n                            \"alpha\": .8, \"color\": color})\nplt.legend(categories,loc='upper right')","6412e63b":"a = data.groupby('Customer_Age_Categorized')['Credit_Limit'].agg(['mean','median','min','max'])\nb = data.groupby(\"Customer_Age_Categorized\")['Credit_Limit'].quantile([0.25, 0.75]).unstack()\nc = pd.concat([a,b], axis =1)\nc","5f4e0e98":"data['Gender'].value_counts()","414e7020":"labels = data['Gender'].unique()\nsizes = [data['Gender'].value_counts()[1],data['Gender'].value_counts()[0]]\nplt.figure(figsize = (10,10))\nplt.pie(sizes,labels=labels, explode=(0.08,0))","252ad345":"data.groupby('Gender')['Credit_Limit'].agg(['mean','count'])","5534c8cb":"data.groupby('Income_Category')['Card_Category'].value_counts()","16d3a6fc":"data['Attrition_Flag'].value_counts()","c390cfb5":"customer_type = data['Attrition_Flag'].value_counts().keys()\ncustomer_type_values = [data['Attrition_Flag'].value_counts()[0],data['Attrition_Flag'].value_counts()[1]]\nplt.figure(figsize=(12,8))\nplt.bar(customer_type,customer_type_values, color = 'maroon', width = .5)","6c5190ed":"churn = data[data[\"Attrition_Flag\"] == 'Attrited Customer']\nnon_churn = data[data[\"Attrition_Flag\"] == 'Existing Customer']","afd2b375":"churn.head()","936b94ac":"churn.groupby(\"Gender\").agg({\"Credit_Limit\":\"mean\", \"Customer_Age\":\"mean\",\"Attrition_Flag\":\"count\"})","fb0c146c":"non_churn.groupby(\"Gender\").agg({\"Credit_Limit\":\"mean\", \"Customer_Age\":\"mean\",\"Attrition_Flag\":\"count\"})","a52fa53b":"data.groupby(['Attrition_Flag',\"Gender\",\"Card_Category\"]).agg({\"Credit_Limit\":\"mean\"})","8c61a44d":"data.groupby([\"Gender\",\"Customer_Age_Categorized\"])[\"Attrition_Flag\"].value_counts()","e4c4fe68":"data.columns","cc7b787b":"plt.figure(figsize = (12, 8))\nsquarify.plot(sizes = data.Customer_Age_Categorized.value_counts().values, alpha = 0.8,\n              label = data.Customer_Age_Categorized.unique())\nplt.axis('off')\nplt.show()","84c24004":"plt.subplots(figsize=(15,22))\nwordcloud = WordCloud(background_color = 'white',\n                     width=512,\n                     height=384).generate(\"\".join(data.Education_Level))\n\nplt.imshow(wordcloud)\nplt.axis('off')","609e18b0":"df = px.data.tips()\nfig = px.sunburst(data, path=['Attrition_Flag', 'Gender', 'Card_Category'], values='Credit_Limit',title=\"Dont Forget to Click Chart to Examine Deeply \")\nfig.show()","1119eeed":"df = px.data.tips()\nfig = px.sunburst(data, path=['Attrition_Flag', 'Gender', 'Card_Category'], values='Customer_Age',title=\"Dont Forget to Click Chart to Examine Deeply \")\nfig.show()","bd5b91ba":"# Correlation Matrix\nf, ax = plt.subplots(figsize= [20,15])\nsns.heatmap(data.corr(), annot=True, fmt=\".2f\", ax=ax, cmap = \"Spectral\" )\nax.set_title(\"Correlation Matrix\", fontsize=20)\nplt.show()","7af83908":"data.drop('Avg_Open_To_Buy', axis =1, inplace = True)\ndata.drop('Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1', axis =1, inplace = True)","706b55cf":"data.dtypes","4454fe6c":"data.Attrition_Flag.unique()","0d61ef31":"cleanup_nums = {\"Gender\":     {\"M\": 0, \"F\": 1},\n                \"Marital_Status\": {\"Single\": 0, \"Married\": 1, \"Unknown\": 2, \"Divorced\": 3},\n                \"Attrition_Flag\": {\"Existing Customer\":0 , \"Attrited Customer\": 1}}\n\ndata.replace(cleanup_nums, inplace=True)","3b8c1f4c":"data.head()","01c49f15":"data = pd.get_dummies(data, columns=[\"Education_Level\", \"Income_Category\",\"Card_Category\",\"Customer_Age_Categorized\"], prefix=[\"education\", \"income\", \"card\",\"age_cat\"])","82fb8580":"data.dtypes","287f4df6":"categorical_data = data[[\"education_College\",\"education_Doctorate\",\"education_Graduate\",\"education_High School\",\"education_Post-Graduate\",\"education_Uneducated\",\n                        \"education_Unknown\",\"income_$120K +\",\"income_$40K - $60K\",\"income_$60K - $80K\",\"income_$80K - $120K\",\"income_Less than $40K\",\"income_Unknown\",\n                        \"card_Blue\",\"card_Gold\",\"card_Platinum\",\"card_Silver\",\"age_cat_(25.953, 35.4]\",\"age_cat_(35.4, 44.8]\",\"age_cat_(44.8, 54.2]\",\"age_cat_(54.2, 63.6]\",\n                        \"age_cat_(63.6, 73.0]\"]]","ff6271bf":"y = data[\"Attrition_Flag\"]\nX = data.drop([\"Attrition_Flag\",\"education_College\",\"education_Doctorate\",\"education_Graduate\",\"education_High School\",\"education_Post-Graduate\",\"education_Uneducated\",\n                        \"education_Unknown\",\"income_$120K +\",\"income_$40K - $60K\",\"income_$60K - $80K\",\"income_$80K - $120K\",\"income_Less than $40K\",\"income_Unknown\",\n                        \"card_Blue\",\"card_Gold\",\"card_Platinum\",\"card_Silver\",\"age_cat_(25.953, 35.4]\",\"age_cat_(35.4, 44.8]\",\"age_cat_(44.8, 54.2]\",\"age_cat_(54.2, 63.6]\",\n                        \"age_cat_(63.6, 73.0]\"], axis = 1)\ncols = X.columns\nindex = X.index","d9de56d9":"X.head()","b3b5f054":"y.head()","283c08d2":"print(X.shape, y.shape)","9d4c95d7":"transformer = RobustScaler().fit(X)\nX = transformer.transform(X)\nX = pd.DataFrame(X, columns = cols, index = index)","3c96761e":"X = pd.concat([X,categorical_data], axis = 1)","b7c40da8":"X.head()","bccfb825":"print(\"X.shape:\",X.shape)\nprint(\"y.shape\",y.shape)","2475808a":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","8baf81b4":"models = []\nmodels.append(('Naive Bayes', GaussianNB()))\nmodels.append(('KNN', KNeighborsClassifier()))\nmodels.append(('CART', DecisionTreeClassifier(random_state = 42)))\nmodels.append(('Random Forest', RandomForestClassifier(random_state = 42)))\nmodels.append(('SVM', SVC(gamma='auto', random_state = 42)))\nmodels.append(('XGBoost', GradientBoostingClassifier(random_state = 42)))\nmodels.append((\"CatBoost\", CatBoostClassifier(random_state = 42, verbose = False)))\n\n# evaluate each model in turn\nresults = []\nnames = []","ad5bd2fd":"for name, model in models:\n        model.fit(X_train, y_train)\n        y_pred = model.predict(X_test)\n        accuracy = accuracy_score(y_test, y_pred)\n        print(\"{} : {}\".format(name,accuracy))","a8f46f0a":"clf = KNeighborsClassifier()\nclf.fit(X_train,y_train)\ny_pred = clf.predict(X_test)\nprint(classification_report(y_test, y_pred, target_names=[\"Existing Customer\",\"Attrited Customer\"]))","ff8a3b6f":"print(confusion_matrix(y_test, y_pred))","d7cbc680":"## Choose Base Model","c89bdc02":"Note : Females are using more credit card but males credit limit more than females.","c1178bef":"# EDA","6a6ee5ed":"## Customer_Age_Categorized - Credit_Limit","f4708bc0":"## Attrition_Flag","055d04fd":"# Train - Test Split","cba173e3":"## Income_Category - Card_Category","db6c140e":"# Data Preprocess","27abed6f":"## Age","f920b303":"## Gender"}}