{"cell_type":{"3233f30f":"code","507b1d38":"code","239dc907":"code","0553b0af":"code","733bcfc6":"code","ffcde970":"code","2fdd060b":"code","d769b40a":"code","f5774e35":"code","cec84c09":"code","e9af8aa7":"code","69439148":"markdown","0cf87597":"markdown","ccca0152":"markdown","b8d4a9c0":"markdown","272d60cc":"markdown","691c2b96":"markdown","31a1cc08":"markdown","4f536490":"markdown","ceab5095":"markdown","28c1b601":"markdown","d6fd8e3f":"markdown","3bcc3ed1":"markdown","f27b6073":"markdown","f904c5fa":"markdown"},"source":{"3233f30f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","507b1d38":"#This will help us keep track of the submissions\nsub_name_list = ['dummy', 'mdabbert', 'BossaNostra', 'piby4']\nscore_list = [] #We can keep the scores here\n\n#Put the submissions in dataframe form and add to a list.\nsub_list = []\ntemp_df = pd.read_csv(\"\/kaggle\/input\/dummy-sub-for-ufc-brunsonshahbazyan-contest\/task-dummy.csv\")\nsub_list.append(temp_df)\n\ntemp_df = pd.read_csv(\"\/kaggle\/input\/ufc-brunson-shahbazyan-contest-submission\/brunson-shahbazyan-submission.csv\")\nsub_list.append(temp_df)\n\ntemp_df = pd.read_csv(\"\/kaggle\/input\/ufc-contest-submission\/BossaNostra_sub.csv\")\nsub_list.append(temp_df)\n\ntemp_df = pd.read_csv(\"\/kaggle\/input\/starter-code-for-winner-prediction-xgboost\/predict_absolute.csv\")\nsub_list.append(temp_df)\n","239dc907":"results_df = pd.read_csv(\"\/kaggle\/input\/ultimate-ufc-dataset\/most-recent-event.csv\")\n\n#We only need the fighter names, odds, and winner\n\nresults_df = results_df[['R_fighter', 'B_fighter', 'R_ev', 'B_ev', 'Winner']]\ndisplay(results_df)","0553b0af":"#Returns a specific bet EV based on winning_ev and probability.\ndef get_bet_ev(ev, prob):\n    \n    return(ev*prob - (1-prob)*100)","733bcfc6":"#Used to determine the bet of each fight.  We will use probabilities and the ev to \n#determine profitable bets\ndef get_bet(R_prob, B_prob, R_ev, B_ev):\n    red_ev = get_bet_ev(R_ev, R_prob)\n    blue_ev = get_bet_ev(B_ev, B_prob)\n    if red_ev > 0:\n        return('Red')\n    if blue_ev > 0:\n        return('Blue')\n    \n    return 'None'","ffcde970":"def get_profit(winner, bet, R_ev, B_ev):\n    if bet == 'None':\n        return 0\n    if (bet == 'Blue' and winner == 'Blue'):\n        return B_ev\n    if (bet == 'Red' and winner == 'Red'):\n        return R_ev\n    else:\n        return (-100)","2fdd060b":"#Let's make a helper function to make this easier\n\ndef get_score(sub, results):\n#    display(sub)\n#    display(results)\n    #Let's merge the two dataframes\n    merge_df = pd.merge(sub, results)\n    #display(merge_df)\n    #We can get the proper bet by using a lambda function\n    merge_df['Bet'] = merge_df.apply(lambda x: get_bet(x['R_prob'],x['B_prob'],x['R_ev'],x['B_ev']), axis=1)\n    merge_df['Profit'] = merge_df.apply(lambda x: get_profit(x['Winner'], x['Bet'], x['R_ev'], x['B_ev']), axis=1)\n    display(merge_df)\n    return(sum(merge_df['Profit']))","d769b40a":"z = 0\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","f5774e35":"z = 1\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","cec84c09":"z = 2\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","e9af8aa7":"z = 3\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","69439148":"A broken clock is right twice a day, and dummy turned a profit today!  3 underdogs hitting gave dummy a profit of 135 units","0cf87597":"# Final Results\n\n* dummy: +135.00\n* mdabbert: -92.22\n* BossaNostra: -25.0\n* piby4: -282.22\n\ndummy was the only submission to turn a profit!  I will be adding a visualization showing how each submitter is doing week-by-week soon.  This will give an idea of what strategies seem to be working best.","ccca0152":"BossaNostra unfortunately submitted his picks before a couple of late fights were announced so he only bet four fights hitting a big winner with the underdog Derek Brunson, but unfortunately losing his other 3 bets for a total loss of 25 units.","b8d4a9c0":"# Purpose\n\nI am going to go through the task submissions for [UFC Fight Night: Brunson vs. Shahbazyan](https:\/\/www.kaggle.com\/mdabbert\/ultimate-ufc-dataset\/tasks?taskId=1490)  and see what set of predictions was the most profitable (if any!)","272d60cc":"# Submission #2: shortlikeafox's Submission","691c2b96":"Matches that did not occur and draws have been removed from the results.","31a1cc08":"# Iterate the submissions and see how everyone did!","4f536490":"# Submission #4: piby4's submission","ceab5095":"# Submission #1: Dummy Submission\n\nThese are the results of the dummy submission.","28c1b601":"# Submission #3: BossaNostra's submission","d6fd8e3f":"# Submissions\n\nThere are 4 submissions.\n\n1. The dummy file (gives each fighter a .5 probability of winning. Therefore will bet every underdog with greater than +100 odds.)\n\n2. mdabbert's (my!) submission. A GaussianNB Classifier using the following features: ['R_Reach_cms', 'total_round_dif', 'R_Height_cms', 'R_avg_SIG_STR_pct', 'B_age', 'R_longest_win_streak', 'lose_streak_dif', 'ko_dif', 'R_win_by_Decision_Majority', 'longest_win_streak_dif', 'avg_sub_att_dif', 'R_Weight_lbs', 'sig_str_dif', 'B_Height_cms', 'B_avg_SUB_ATT', 'R_win_by_TKO_Doctor_Stoppage', 'B_draw', 'avg_td_dif', 'R_win_by_Decision_Split', 'age_dif', 'B_current_win_streak', 'R_odds']\n\n3. BossaNostra's submission\n\n4. piby4's submission which he graciously created using [a notebook](https:\/\/www.kaggle.com\/tomtillo\/starter-code-for-winner-prediction-xgboost\/) so that everyone can see his thought process.","3bcc3ed1":"mdabbert won 3 fights and lost 3 for a loss of 92.22 units.","f27b6073":"# Open All Submissions and add to a list","f904c5fa":"piby4 won three fights out of seven bets for a loss of 282.22 units."}}