{"cell_type":{"c398656d":"code","1baabde3":"code","ddea4da3":"code","d3e242fc":"code","d4cbb236":"code","86d85e2b":"code","1d4126b2":"code","a7ace708":"markdown"},"source":{"c398656d":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split","1baabde3":"data = pd.read_csv('..\/input\/handson-pima\/Hands on Exercise Feature Engineering_ pima-indians-diabetes (1).csv')\ndata.head()","ddea4da3":"#Select only the values in this dataset and create X,y\narray = data.values\nX = array[:,0:7]\ny = array[:,8]\n\nX_train,X_test,y_train,y_test = train_test_split(X,y, test_size = 0.30, random_state = 7)","d3e242fc":"type(X_train)","d4cbb236":"# it takes a list of tuples as parameter. The last entry is the call to the modelling algorithm\npipeline = Pipeline([\n    ('scaler', StandardScaler()),\n    ('logreg', LogisticRegression())\n])\n\n#use pipeline object as a regular classifier\n\npipeline.fit(X_train, y_train)","86d85e2b":"from sklearn import metrics\n\ny_pred = pipeline.predict(X_test)\nmodel_score = pipeline.score(X_test, y_test)\nprint(model_score)","1d4126b2":"print(metrics.confusion_matrix(y_test,y_pred))","a7ace708":"## Use Pipeline to create model using Logistic Regression and display the accuracy score with confusion matrix."}}