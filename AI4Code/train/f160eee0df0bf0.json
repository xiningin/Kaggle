{"cell_type":{"94ab9424":"code","bafde74d":"code","ec44704f":"code","54c0fda9":"code","ea16b70e":"code","b4c45acf":"code","a2b5f60d":"code","74efa759":"code","f841e598":"code","6d725b40":"code","67872339":"code","b64558a1":"markdown","779ede54":"markdown","e6eccde4":"markdown","65052533":"markdown","d2ee9415":"markdown","4a3b1b52":"markdown","169a0e6e":"markdown"},"source":{"94ab9424":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly\nimport plotly.express as px\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure, show\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bafde74d":"topSongs=pd.read_csv('\/kaggle\/input\/rock-metal-singles-chart-top-40-20032018\/Top40Songs_completed3.csv')\ntopSongs.head()\n#topSongs.info","ec44704f":"count=np.ones((31360,), dtype=int)\ntopSongs['Frequency']=count\ntopSongs_subset=topSongs[['Artist', 'Frequency']].groupby(['Artist'])['Frequency'].count()\ndf_topArtists=topSongs_subset.reset_index()\ndf_topArtists.sort_values(['Frequency'], axis=0, \n                 ascending=False, inplace=True)\ndf_topArtists.head()\n","54c0fda9":"fig_topArtists=px.bar(df_topArtists.head(50), x='Artist', y='Frequency'     \n      )\nfig_topArtists.update_traces(marker_color='#32e0c4',width=0.6)\nfig_topArtists.update_layout(title_text='<i><b>-Top 50 Artists from 2003 to 2018 -<\/b><\/i>', title_x=0.5, title_font_color=\"#0d7377\",title_font_size=24, font_family=\"Courier New\",\n    font_color=\"#0d7377\", xaxis_title=\"Artist\",\n    yaxis_title=\"Artist being on the top 40 n times\", font_size=12, plot_bgcolor=\"white\")","ea16b70e":"artistOne=topSongs.loc[topSongs['Position'] == 1]","b4c45acf":"countTop=np.ones((784,), dtype=int)\nartistOne['Frequency']=countTop\ntopSongsOnes=artistOne[['Artist', 'Frequency']].groupby(['Artist'])['Frequency'].count()\ndf_topSongsOnes=topSongsOnes.reset_index()\ndf_topSongsOnes.sort_values(['Frequency'], axis=0, \n                 ascending=False, inplace=True)\ndf_topSongsOnes.head()\n","a2b5f60d":"fig_topOnes=px.bar(df_topSongsOnes.head(10), y='Artist', x='Frequency' , orientation='h'  \n      )\nfig_topOnes.update_traces(marker_color='#32e0c4',width=0.6)\nfig_topOnes.update_layout(title_text='<i><b>-Top 10 Everlasting Artists -<\/b><\/i>', title_x=0.5, title_font_color=\"#0d7377\",title_font_size=24, font_family=\"Courier New\",\n    font_color=\"#0d7377\", xaxis_title=\"How Often was the Artist Number 1\",\n    yaxis_title=\"Artist\", font_size=12, plot_bgcolor=\"white\")","74efa759":"topSongs['Song_Artist']= topSongs['Song'] + ' - ' +topSongs['Artist']\ncountSong=np.ones((31360,), dtype=int)\ntopSongs['Frequency']=countSong\ntopSongs_subsetSongs=topSongs[['Song_Artist', 'Frequency']].groupby(['Song_Artist'])['Frequency'].count()\ndf_topSongs=topSongs_subsetSongs.reset_index()\ndf_topSongs.sort_values(['Frequency'], axis=0, \n                 ascending=False, inplace=True)\ndf_topSongs.head()","f841e598":"fig_topSongs=px.bar(df_topSongs.head(30), x='Song_Artist', y='Frequency'     \n      )\nfig_topSongs.update_traces(marker_color='#32e0c4',width=0.6)\nfig_topSongs.update_layout(title_text='<i><b>-Top 30 Songs from 2003 to 2018 -<\/b><\/i>', title_x=0.5, title_font_color=\"#0d7377\",title_font_size=24, font_family=\"Courier New\",\n    font_color=\"#0d7377\", xaxis_title=\"Songs\",\n    yaxis_title=\"Songs being on the top 40 n times\", font_size=12, plot_bgcolor=\"white\")","6d725b40":"Artist_list = []\nfor i in df_topArtists['Artist']:\n    Artist_list.append(i)","67872339":"from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nwordcloud = WordCloud(width = 1500, height = 800).generate(\" \".join(Artist_list))\nplt.figure(figsize=(15,8))\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","b64558a1":"![image.png](attachment:image.png)","779ede54":"Some Days ago I was listening to some random songs on the Radio, and I just got thorough back to my beautiful teen years, and yeah.. just went very nostalgic. In order to overcome my shor moment of sadness thinking about the years passed, and.... anyway.. the idea behind is that I was kind of like: \"mm let me check if the artists I so much loved, were really that great, or it was just me\". Sooo looked for some charts of kind of rock music of 17 years ago, anddd here is what I found. ","e6eccde4":"# BarChart - Top 50 Artists -","65052533":"> # - Top 30 Songs -","d2ee9415":"Sooo... what do you think was I happy with the result?.. eh.. not really.. How could be possible that my beautiful and amazing Green Day barely managed to the top 50? :(","4a3b1b52":"Loooooooooooooook! Okok no Green Day, but Still! Snow Patrol, Take That , Killers, COldPlay and Gorillaz. The world still makes sense :)","169a0e6e":"# - Which Artist was the Longest on the Top - "}}