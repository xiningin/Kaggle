{"cell_type":{"1b399791":"code","ba794462":"code","21a5d28b":"code","51154047":"code","1e8c839a":"code","cad6e377":"code","2a8bfc0a":"code","2bc2e0f8":"code","9ab9a0aa":"code","231f7190":"code","74e53753":"code","b63205f8":"code","e02bb41b":"code","e4dbde45":"code","86cf53d4":"code","18224038":"code","149583e1":"code","46a6c507":"code","b7aed956":"code","4abf2323":"code","c2ee63b6":"code","4790a8b7":"code","f60a8861":"code","d6d7683e":"code","98ce1d31":"code","129b2f2f":"code","e9930cfa":"code","d13650e7":"code","c36081c1":"code","e2419c97":"markdown","44271371":"markdown","1e6ca4c3":"markdown"},"source":{"1b399791":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ba794462":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objs as go\n\nimport pydicom\nfrom pydicom.data import get_testdata_files","21a5d28b":"train=pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/train.csv')\ntest=pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/test.csv')","51154047":"train","1e8c839a":"test.head()","cad6e377":"smokers=train.loc[train.SmokingStatus=='Currently smokes']","2a8bfc0a":"train.info()","2bc2e0f8":"sns.pairplot(train)","9ab9a0aa":"sns.pairplot(train,hue='Sex')","231f7190":"sns.pairplot(train,hue='SmokingStatus')","74e53753":"sns.distplot(smokers['Age'])","b63205f8":"sns.distplot(train['Age'])","e02bb41b":"\ndf= train.groupby([train.Patient,train.Age,train.Sex, train.SmokingStatus])['Patient'].count()\ndf.index = df.index.set_names(['id','Age','Sex','SmokingStatus'])\ndf = df.reset_index()\ndf.rename(columns = {'Patient': 'freq'},inplace = True)\nprint(df.shape)","e4dbde45":"fig = px.bar(df, x='freq',y ='id',color='freq')\nfig.update_layout(yaxis={'categoryorder':'total ascending'},title='No. of observations for each patient')\nfig.update_yaxes(showticklabels=False)\nfig.show()","86cf53d4":"plt.figure(figsize=[10,8])\nplt.style.use('ggplot')\nsns.countplot(x='Sex',data=train,hue='SmokingStatus')","18224038":"train.corr()","149583e1":"sns.heatmap(train.corr(),annot=True)","46a6c507":"fig = px.line(train.loc[train['Patient']=='ID00422637202311677017371'],x='Weeks',y='FVC')\nfig.show()","b7aed956":"fig = px.line(train.loc[train['Patient']=='ID00426637202313170790466'],x='Weeks',y='FVC')\nfig.show()","4abf2323":"p1=train.loc[train['Patient']=='ID00426637202313170790466']\np2=train.loc[train['Patient']=='ID00007637202177411956430']\np3=train.loc[train['Patient']=='ID00355637202295106567614']\npati=pd.concat([p1,p2,p3])\npx.line(pati,x='Weeks',y='FVC',line_group='Patient',color='Patient')\n\n\n\n","c2ee63b6":"PathDicom = '\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/'\nlstFilesDCM = []  # create an empty list\nfor dirName, subdirList, fileList in os.walk(PathDicom):\n    for filename in fileList:\n        if \".dcm\" in filename.lower():  # check whether the file's DICOM\n            lstFilesDCM.append(os.path.join(dirName,filename))","4790a8b7":"print(lstFilesDCM[0])","f60a8861":"RefDs = pydicom.dcmread(lstFilesDCM[4])\nprint(RefDs)","d6d7683e":"print('Patient id is {}'.format(RefDs.PatientID))\nprint('Sex..........{}'.format(RefDs.PatientSex))\nprint('Image Position {}'.format(RefDs.ImagePositionPatient))\nprint('Image Orientation {}'.format(RefDs.ImageOrientationPatient))","98ce1d31":"def MakeDF(lst):\n    dictDf={}\n    refd=pydicom.dcmread(lst[0])\n    dictDf['Patient']=[refd.PatientID]\n    dictDf['rows']=[refd.Rows]\n    for i in range(1,len(lst)):\n        refd=pydicom.dcmread(lst[i])\n        dictDf['Patient'].append(refd.PatientID)\n        dictDf['rows'].append(refd.Rows)\n        #print(dictDf)\n    return(dictDf)    ","129b2f2f":"pd_dict=MakeDF(lstFilesDCM)","e9930cfa":"df=pd.DataFrame.from_dict(pd_dict)","d13650e7":"df.head()","c36081c1":"plt.figure(figsize=[10,10])\nplt.imshow(RefDs.pixel_array, cmap=plt.cm.bone)\nplt.show()","e2419c97":"The distribution of FVC of males is shifted to higher FVC values indicating males have a higher FVC on average","44271371":"approch is to use autoencoder to encode image data and concat it with tabular data and then use rnn for predicting time series data","1e6ca4c3":"Age distribution of currently smoking patients has multiple small peaks across all ages and, a single high peak near age 70(like other two categories). This indicates pulmonary fibrosis affects middle aged people who are currently smokers."}}