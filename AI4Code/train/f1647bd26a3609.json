{"cell_type":{"ada6dadd":"code","7ad0be9e":"code","9e7f83a1":"code","6c7bf989":"code","ca4e65ab":"code","a87d484a":"code","7ea74d1e":"code","909ce934":"code","c1f3df2e":"code","1f0ab368":"code","c8e92a45":"code","9597326d":"code","64e7e47c":"code","cac1442f":"code","bbcbdc0a":"code","1f83929f":"code","ef094501":"code","a3590a8e":"code","4f6fd0e8":"code","5fc494cc":"code","81d4a925":"code","0fc79eb6":"code","5df50441":"code","2383166b":"code","1e75a1ee":"code","15e6459a":"code","5b9dfba2":"code","727d1457":"code","e613358f":"code","35aad1bb":"code","fb2f7fc3":"code","acf30560":"code","ded063a9":"code","770d15a9":"code","49bf314c":"code","0d4651dd":"code","f36ab2fa":"code","c86102ed":"code","ae39629b":"code","cdefba23":"code","b6d7ada7":"code","4cc92064":"code","768ad4f4":"code","5b4a996a":"code","56a20f77":"code","b2481fcf":"code","8e56aad9":"code","397fc1f9":"code","1071a2f2":"code","13473f77":"code","4a80e907":"code","98052c94":"code","37378ef9":"code","cbb476f1":"code","f528b54c":"code","873e2a3d":"code","1c3cc0fc":"code","b8618abb":"code","08fee39d":"markdown","28b9b31b":"markdown","751708a8":"markdown","51edc96a":"markdown","59c6d862":"markdown","62f13587":"markdown","fef4a516":"markdown","2c012691":"markdown","a22df639":"markdown","575edd37":"markdown","5f7180bc":"markdown","fe2efcb1":"markdown","2e24b3f3":"markdown","99816e34":"markdown","26878640":"markdown","f8948460":"markdown","e2bdbe1b":"markdown","0fe92c23":"markdown","18634912":"markdown","755a0903":"markdown","443aba0b":"markdown","c2311f18":"markdown","56569748":"markdown","31245296":"markdown","01838ccd":"markdown","c7d84a80":"markdown"},"source":{"ada6dadd":"#Data Analysis and Visualization \nimport numpy as np \nimport matplotlib.pyplot as plt \nplt.rcParams.update({'font.size': 16})\nimport pandas as pd \nimport seaborn as sns\nimport folium\nimport geopandas as gpd\nimport branca.colormap as cm\nimport plotly.graph_objects as go\nimport plotly.express as px\npd.set_option('display.max_rows', None)\nfrom plotly.subplots import make_subplots\nimport calendar\n\n#Machine Learning\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\n","7ad0be9e":"covid = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\ncovid.head()","9e7f83a1":"covid.shape","6c7bf989":"covid[[\"Confirmed\",\"Deaths\",\"Recovered\"]] =covid[[\"Confirmed\",\"Deaths\",\"Recovered\"]].astype(int)\ncovid['Active'] = covid['Confirmed'] - covid['Deaths'] - covid['Recovered']\ncovid.head()","ca4e65ab":"covid_world = covid.copy()","a87d484a":"covid_world = covid_world[covid_world['ObservationDate'] == max(covid_world['ObservationDate'])].reset_index()\nworld_cases = covid_world.groupby([\"ObservationDate\"])[[\"Confirmed\", \"Deaths\",\"Recovered\", \"Active\"]].sum().reset_index()\nworld_cases","7ea74d1e":"labels = [\"Recovered\",\"Deaths\", \"Active\"]\nvalues = world_cases.loc[0, [\"Recovered\",\"Deaths\", \"Active\"]]\nfig = px.pie(world_cases, values=values, names=labels,color_discrete_sequence=['#636EFA','#FECB52','#EF553B' ],hole=0.5)\nfig.update_layout(title='Total cases on 11\/15\/2020 : '+str(world_cases[\"Confirmed\"][0]),)\nfig.show()","909ce934":"df_brazil = covid[covid['Country\/Region'] == 'Brazil']\ndf_brazil.head()","c1f3df2e":"df_brazil.shape","1f0ab368":"#Saving as a new dataframe\ndf_brazil.to_csv('covid_19_data_brazil.csv')\ndf_brazil = pd.read_csv('covid_19_data_brazil.csv')","c8e92a45":"\ndf_brazil2 = df_brazil[df_brazil['ObservationDate'] == max(df_brazil['ObservationDate'])].reset_index()\ndf_brazil_sum = df_brazil2.groupby([\"ObservationDate\"])[[\"Confirmed\", \"Deaths\",\"Recovered\", \"Active\"]].sum().reset_index()\ndf_brazil_sum","9597326d":"labels = [\"Recovered\",\"Deaths\", \"Active\"]\nvalues = df_brazil_sum.loc[0, [\"Recovered\",\"Deaths\", \"Active\"]]\nfig = px.pie(df_brazil_sum, values=values, names=labels,color_discrete_sequence=['#636EFA','#FECB52','#EF553B' ],hole=0.5)\nfig.update_layout(title='Total cases for Brazil on 11\/15\/2020 : '+str(df_brazil_sum[\"Confirmed\"][0]),)\nfig.show()","64e7e47c":"df_brazil.dtypes","cac1442f":"df_brazil.duplicated().sum()","bbcbdc0a":"df_brazil.isnull().sum()","1f83929f":"df_brazil['Province\/State'].unique()","ef094501":"df_brazil[df_brazil['Province\/State']=='Unknown']","a3590a8e":"df_brazil[\"Province\/State\"]= df_brazil[\"Province\/State\"].fillna('Unknown')","4f6fd0e8":"df_brazil['Province\/State'].unique()","5fc494cc":"df_brazil.isnull().sum()","81d4a925":"df_brazil['ObservationDate'] = pd.to_datetime(df_brazil['ObservationDate'])\ndf_brazil.dtypes","0fc79eb6":"df_brazil['month'] = pd.DatetimeIndex(df_brazil['ObservationDate']).month\ndf_brazil['month_name'] = df_brazil['month'].apply(lambda x: calendar.month_abbr[x])\ndf_brazil.head()","5df50441":"df_brazil_sorted = df_brazil.sort_values(\"month\", ascending=True)","2383166b":"#Visualizing the data:\nsns.set_style(\"whitegrid\") \nsns.set_palette(\"Set1\")\nplt.figure(figsize=(25, 12))\nsns.lineplot(data=df_brazil_sorted, x=df_brazil_sorted['month_name'], y=df_brazil_sorted['Confirmed'], color='red', sort=False, markers=True)\nplt.title('Evolution of COVID-19 Cases in Brazil by Month', fontsize= 24)\nplt.xlabel('Month', fontsize = 20)\nplt.ylabel('Confirmed Cases', fontsize=20);","1e75a1ee":"df_sum = df_brazil_sorted.groupby('ObservationDate').agg(\n    {'Confirmed': 'sum', 'Deaths': 'sum', 'Recovered': 'sum', 'Active':'sum'}).reset_index()","15e6459a":"df_sum.head()","5b9dfba2":"df_sum.tail()","727d1457":"sns.set_palette(\"Set2\")\n#sns.set_style(\"darkgrid\") \n#plt.style.use('dark_background')\nsns.set_style(\"whitegrid\") \n\nplt.figure(figsize=(22, 12))\nplt.stackplot(df_sum['ObservationDate'], [df_sum['Deaths'],df_sum['Confirmed'], df_sum['Recovered'], df_sum['Active']],\n              labels = ['Deaths', 'Confirmed Cases', 'Recovered', 'Active'])\nplt.legend(loc = 'upper left', fontsize=16)\nplt.title('Evolution of COVID-19 Cases in Brazil by Observation Date', fontsize= 24)\nplt.xlabel('Observation Date', fontsize = 20)\nplt.ylabel('Total Number', fontsize=20)\n","e613358f":"#sns.set_palette(\"Set1\")\n#sns.set_style(\"darkgrid\") \n#plt.style.use('white_background')\nsns.set_style(\"whitegrid\") \nplt.figure(figsize = (24,12))\nplt. plot(df_sum['ObservationDate'], df_sum['Confirmed'] , label = \"Confirmed Cases\", linewidth=4, color='blue')\nplt. plot(df_sum['ObservationDate'], df_sum['Deaths'] , label = \"Deaths\", linewidth=4, color='red')\nplt. plot(df_sum['ObservationDate'], df_sum['Recovered'] , label = \"Recovered\", linewidth=4, color='c')\nplt. plot(df_sum['ObservationDate'], df_sum['Active'] , label = \"Active\", linewidth=4, color='yellow')\nplt.title('Evolution of COVID-19 Cases in Brazil by Observation Date', fontsize= 24)\nplt.xlabel('Observation Date', fontsize = 20)\nplt.ylabel('Total Number', fontsize=20);\nplt.legend(loc = 'upper left', fontsize=20);","35aad1bb":"deaths_df = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv')","fb2f7fc3":"deaths_df.shape","acf30560":"deaths_df.head()","ded063a9":"deaths_df.tail()","770d15a9":"#Filtering the data for Brazil: \n\ndeaths_df[deaths_df['Country\/Region'] == 'Brazil']","49bf314c":"columns = deaths_df.keys()\ncolumns","0d4651dd":"deaths_df = deaths_df.loc[:, columns[4]:columns[-1]]\ndeaths_df.head()","f36ab2fa":"deaths_df.keys()","c86102ed":"len(deaths_df.keys())","ae39629b":"#Sum of death cases for 22nd of January - the first day on the dataset\ndeaths_df['1\/22\/20'].sum()","cdefba23":"#Sum of death cases for the last day on the dataset\ndeaths_df['11\/15\/20'].sum()","b6d7ada7":"dates = deaths_df.keys()\ny = []\nfor i in dates:\n    \n  y.append(deaths_df[i].sum())","4cc92064":"len(y)","768ad4f4":"y = np.array(y).reshape(-1,1)\ny.shape","5b4a996a":"X = np.arange(len(dates)).reshape(-1,1)\nX.shape","56a20f77":"fcast_mat = np.arange(len(dates) + 15).reshape(-1,1)\nfcast_mat.shape","b2481fcf":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.15, shuffle = False)\n#shuffle=4 because this is a time series prediction","8e56aad9":"regressor = LinearRegression()\nregressor.fit(X_train, y_train)\nscore = regressor.score(X_train, y_train)\npredictions_lin = regressor.predict(X_test)","397fc1f9":"mae = mean_absolute_error(y_test, predictions_lin)\nregressor.score(X_test, y_test)\n\nregressor.intercept_\nlen(regressor.coef_)","1071a2f2":"plt.figure(figsize=(14, 6))\nplt.plot(predictions_lin, linestyle = 'dashed', linewidth=3, label='Predictions with Linear Regression')\nplt.plot(y_test, linewidth=3, label = 'Test Data')\nplt.legend(loc = 'upper left', fontsize=14);","13473f77":"print('MAE:', mean_absolute_error(predictions_lin, y_test))\nprint('RMSE:', np.sqrt(mean_absolute_error(predictions_lin, y_test)))","4a80e907":"poly = PolynomialFeatures(degree=4)\nX_train_poly = poly.fit_transform(X_train)\nX_test_poly = poly.transform(X_test)","98052c94":"regressor = LinearRegression()\nregressor.fit(X_train_poly, y_train)\n\nregressor = LinearRegression()\nregressor.fit(X_train_poly, y_train)\nscore = regressor.score(X_train_poly, y_train)\npoly_test_pred = regressor.predict(X_test_poly)","37378ef9":"plt.figure(figsize=(14, 6))\nplt.plot(poly_test_pred, linestyle = 'dashed', linewidth=3, label='Predictions with Polynomial Regression')\nplt.plot(y_test,linewidth=3, label = 'Test Data')\nplt.legend(loc = 'upper left', fontsize=14);","cbb476f1":"print('MAE:', mean_absolute_error(poly_test_pred, y_test))\nprint('RMSE:', np.sqrt(mean_absolute_error(poly_test_pred, y_test)))","f528b54c":"X_train_all = poly.transform(fcast_mat)\nX_train_all.shape","873e2a3d":"poly_pred_all = regressor.predict(X_train_all)\nlen(poly_pred_all)","1c3cc0fc":"plt.figure(figsize=(14, 6))\nplt.plot(fcast_mat[:-15], y, color='red', linewidth=3)\nplt.plot(fcast_mat, poly_pred_all, color='blue', linestyle='dashed', linewidth=3)\nplt.title('Deaths of COVID-19 in Brazil', fontsize=20)\nplt.xlabel('Days since the first case reported in Brazil (1\/22\/2020)', fontsize=16)\nplt.ylabel('Number of deaths', fontsize=16)\nplt.legend(['Death cases', 'Predictions'], fontsize=14);","b8618abb":"plt.figure(figsize=(14, 6))\nplt.plot(poly_test_pred, linestyle = 'dashed', linewidth=3, label='Predictions with Polynomial Regression', color='c')\nplt.plot(predictions_lin, linestyle = 'dashed', linewidth=3, label='Predictions with Linear Regression', color='red')\nplt.plot(y_test,linewidth=3, label = 'Test Data', color='blue')\nplt.legend(loc = 'upper left', fontsize=14);","08fee39d":"# COVID-19 - EDA and Predicitons\n\nIn this is study it will be presented an exploratory data analysis for covid in the world. Then, I will focus on the data from Brazil, my home country, to finish with a prediction of deaths using Linear regression.  ","28b9b31b":"#### Cleaning the dataframe from unnecessary data and NAN. ","751708a8":"Getting the active cases for the date:","51edc96a":"### Polynomial Regression","59c6d862":"World cases as of the date of this notebook;","62f13587":"Comparing the values of y_test and poly_test_predict we can see that some values were predicted right and others not so much. To have an overview of the accuracy, let's plot both data (tested and predicted) to visualize the differences:","fef4a516":"Before the forecast matrix, we had 299 data points, now there are 314 data points as we included more 15 days to predict. ","2c012691":"Gathering datetime information by 'month'","a22df639":"## 1 - Importing the libraries and Loading the file","575edd37":"## Models comparison","5f7180bc":"### Evolution over time","fe2efcb1":"Transforming y from a vector to a matrix:","2e24b3f3":"#### Preparing the dataset for the machine learning model:","99816e34":"## 3 - EDA","26878640":"Comparing predictions with linear regression and test data:","f8948460":"Ordering the information by date:","e2bdbe1b":"We have 299 dates so far","0fe92c23":"Summing up the number of deaths per day","18634912":"### Forecast Plot","755a0903":"#### Train and Test data","443aba0b":"Converting the data and creating a column with active cases of covid","c2311f18":"### Linear Regression","56569748":"## 4 -  Prediction Model","31245296":"It is necessary to convert ObservationDate to datetime (it is an object). ","01838ccd":"## 2 - Creating a new dataframe only for data from Brazil","c7d84a80":"Now , creating a forecast matrix to predict death cases for the next 15 days, which means in this case, the rest of the month of November. \n"}}