{"cell_type":{"fadd2ae5":"code","4ff22bb7":"code","c7fd18a7":"code","9dad0aec":"code","c057a18f":"code","979dc64a":"code","077637ef":"code","629d150e":"code","b0a2f86b":"code","d8587601":"code","4e0c9bb9":"code","d587c373":"code","2820afca":"code","e3499f29":"code","87adef24":"code","03f45a2a":"code","3f42a3dc":"code","e8eb6009":"code","fec35ec8":"code","1ba1f682":"code","d6811763":"code","7f1e0189":"code","30d0995b":"code","6c682677":"code","b9f1adaf":"code","ddc3d808":"code","a42e675c":"code","a71b21f9":"code","143f460b":"code","343674cf":"code","50321bcc":"code","a7c2f603":"code","0a27c92e":"code","a6e77d6e":"code","8f32d9c6":"code","0d31171a":"code","0704d273":"code","ac3f1c6a":"code","d4163dbb":"code","c320bea9":"code","f8aa1f01":"code","f5c3a7f1":"code","98da595e":"code","fb3f140e":"markdown","25bfe296":"markdown","2bf360d8":"markdown","c66affd6":"markdown","75d4535b":"markdown","c23ed2e2":"markdown","9e2a9dc7":"markdown","3803ff0e":"markdown"},"source":{"fadd2ae5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4ff22bb7":"#import necessary addtitional libraries:\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool","c7fd18a7":"#import the data into data_Students\ndata_Students = pd.read_csv(\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")","9dad0aec":"#check the headers:\ndata_Students.info()","c057a18f":"#check the firs 10 records.\ndata_Students.head(10)","979dc64a":"#try to arrange the column names\n#first time worked, then did not work:\ndata_Students.rename(columns = {'math score':'mathscore'})\ndata_Students.head(10)","077637ef":"#removes spaces form the columns:\ndata_Students = data_Students.rename(columns={c: c.replace(' ', '') for c in data_Students.columns})","629d150e":"#check:\ndata_Students.head(10)","b0a2f86b":"# correlations\n\ndata_Students.corr()","d8587601":"# correlation map (heat map)\nf, ax = plt.subplots(figsize=(18,18)) #\u00e7er\u00e7eveyi \u00e7izer\nsns.heatmap(data_Students.corr(), annot=True, linewidth=.5, fmt='.2f', ax=ax)\nplt.show()","4e0c9bb9":"#line plot\n\ndata_Students.readingscore.plot(kind='line', color='g', label='Reading', linewidth=1,alpha=0.7, grid=True, linestyle=':')\n#be careful for the linestyle, doesn't support charactes like '..'\n#x axis shows numbers, like indexes. which number of the student in the list\n\n#numerik de\u011ferler se\u00e7ilmeli,#numerik de\u011ferler se\u00e7ilmeli,\ndata_Students.mathscore.plot(color='r', label='Math', linewidth=1, alpha=0.7, grid =True, linestyle='-.')\n\nplt.legend(loc='upper right')\n\nplt.xlabel('x axis Reading scores')\nplt.ylabel('y axis')\nplt.title('Line Plot scores')\nplt.show()\n","d587c373":"# check basic statistics:\ndata_Students.describe()","2820afca":"#scatter plot1-1\nplt.scatter(data_Students.mathscore, data_Students.readingscore,color='red', alpha=0.5) \nplt.xlabel('Reading')\nplt.ylabel('Math')\nplt.title('Reading Math Scatter')\nplt.show()","e3499f29":"#histogram-1\ndata_Students.plot(kind='hist', bins=30,figsize=(12,15))\nplt.show()","87adef24":"#histogram-2\ndata_Students.mathscore.plot(kind='hist', bins=30,figsize=(12,15))\nplt.show()","03f45a2a":"#histogram-3\ndata_Students.mathscore.plot(kind='hist', bins=50)\nplt.show()","3f42a3dc":"dic= {'usa':'boston', 'spain': 'barcelona'}\nprint(dic.keys())","e8eb6009":"print(dic.values())","fec35ec8":"#update records:\ndic['spain'] = 'valencia'\nprint(dic)","1ba1f682":"#add new entry:\ndic['france'] = \"nice\"\nprint(dic)","d6811763":"#remove entry with key spain:\ndel dic['spain']\nprint(dic)","7f1e0189":"#check includes or not\nprint('france' in dic)","30d0995b":"#clear dictionary\ndic.clear()\nprint(dic)\n\n#to delete permanently from memory: del dic","6c682677":"data_Students.info()","b9f1adaf":"data_Students.head(10)","ddc3d808":"# basic statistics\n\ndata_Students.describe()","a42e675c":"# create a series. gender from data_Students\nseriSt = data_Students['gender']\nprint(type(seriSt))","a71b21f9":"print(seriSt)","143f460b":"#move to a dataframe\ndframeSt = data_Students[['gender']]\nprint(dframeSt)","343674cf":"#comparasion\n2==3","50321bcc":"print(5!=7)","a7c2f603":"# Boolean\nprint(5!=5 and 3==3)","0a27c92e":"\nprint(6==6 or 8==9)","a6e77d6e":"data_Students.head(10)","8f32d9c6":"# 1-filtering\nx = data_Students['readingscore']>97\ndata_Students[x]","0d31171a":"# 1-filtering with logical_and \ndata_Students[np.logical_and (data_Students['mathscore']>96, data_Students['readingscore']>95)]","0704d273":"# another way to write:\ndata_Students[(data_Students['mathscore']>96) & (data_Students['readingscore']>95)]","ac3f1c6a":"# i=10 a kadar ekrana yazd\u0131r:\n\ni = 0\nwhile i<10 :\n    print ('i: ', i)\n    i +=1\n    \nprint('loop tan sonraki son de\u011fer:', i)","d4163dbb":"# create a list, \nmylist = [10,20, 300, 4, 500]\n\n# print the items\nfor i in mylist:\n    print('i de\u011feri: ', i)\n    \nprint('stop')","c320bea9":"# enumerate, reach with index numbers\n\nfor indx, i in enumerate(mylist):\n    print('index no:', indx, \"value:\", i)\n    \nprint(\"stop\")","f8aa1f01":"# reach dictionary values, get key and values\n#use for loop\ndic2 = {'spain':'madrid', 'france':'paris'}\n\nfor dkey, dvalue in dic2.items():\n    print(\"dkeyx:\", dkey, \"dvaluex:\", dvalue)\n    \nprint(\"stop\")","f5c3a7f1":"data_Students.head(2)","98da595e":"# reach index and values, pandas\n# records with index numbers 0,1 \n\nfor ind, val in data_Students[['mathscore']] [0:2].iterrows():\n    print('indeks:', ind,'de\u011fer:',val )","fb3f140e":"there are 2 data typesin pandas\n1-series(one dimensional, 2-frames","25bfe296":"**PANDAS**","2bf360d8":"**LOGIC, CONTROL FLOW and FILTERING PANDAS**","c66affd6":"**WHILE and FOR LOOPS**","75d4535b":"**DICTIONARY******","c23ed2e2":"*\u00d6DEV1 has finished*","9e2a9dc7":"**MATPLOTLIB:**","3803ff0e":"they like Dataframe structure.\nthey are Faster than lists."}}