{"cell_type":{"2cced375":"code","0fd04d76":"code","d9b6bdca":"code","fd86715c":"code","03b42f6f":"code","18d4806b":"code","f8d37c59":"code","5b0dd6d8":"code","339ec24d":"code","8064cdb5":"markdown","51047244":"markdown","86c0b255":"markdown","45032413":"markdown","1a851d33":"markdown","d41c203b":"markdown","cb47d877":"markdown"},"source":{"2cced375":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0fd04d76":"# importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport pandas_profiling as pp \nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split,GridSearchCV\nfrom sklearn.metrics import accuracy_score,confusion_matrix\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nsns.set()\n%matplotlib inline","d9b6bdca":"df= pd.read_csv('\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv')","fd86715c":"df.head()","03b42f6f":"df.shape","18d4806b":"df.dtypes","f8d37c59":"df.isnull().sum()","5b0dd6d8":"pp.ProfileReport(df)","339ec24d":"sns.heatmap(df.corr(),cbar=False,cmap='BuGn',annot=True)","8064cdb5":"# Let's go for Auto-EDA","51047244":"# Wohh Great!! There are no null values.","86c0b255":"# Let's read the data!","45032413":"# Let's import required libraries!","1a851d33":"# let's check it out whether there are any null values","d41c203b":"# Pandas Porfiling has given some meaningfull insights ","cb47d877":"# Do upvote this notebook if you find it helpful!! Stay tuned for feature selection and model training."}}