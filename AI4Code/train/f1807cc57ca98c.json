{"cell_type":{"6eeb5b46":"code","9434ae88":"code","9868e44e":"code","e813031e":"code","20574e20":"code","67b37128":"code","7d20db37":"code","ac08a1bb":"code","0a170e1c":"code","1b4a8b79":"code","5eff118a":"code","181f7cea":"code","3427743e":"code","03500c77":"code","6b22015b":"code","2aa5009c":"code","24e9a820":"code","5520533e":"code","584054d8":"code","6a0aa535":"code","47f7f7c8":"code","638dd015":"code","2bc21f5a":"code","eeda9908":"code","9a255814":"code","7e20f70b":"code","0beb3d83":"code","d3826311":"code","e8774cd7":"code","2e59334e":"code","9d548e36":"code","5fade258":"code","a7ddf291":"code","d8cbad8d":"code","c67805a3":"code","ad6eb1a9":"code","7ea17ab2":"code","16efd528":"code","3ffdca45":"code","f96358da":"code","335cba4c":"code","b8876036":"code","f2f0d547":"code","6d5ec3be":"code","4c1561a5":"code","ad7a1387":"code","4b9d8227":"code","bd974278":"code","08dbd24c":"code","980678a0":"markdown","2fa9424a":"markdown","1fc41871":"markdown","738681db":"markdown","a19eb01e":"markdown","903b72d5":"markdown","d95da9b2":"markdown","e795b758":"markdown","bacc25b0":"markdown","38ded3a7":"markdown","fb7c990f":"markdown","9c0c6a93":"markdown"},"source":{"6eeb5b46":"import numpy as np \nimport pandas as pd \nimport datetime\nfrom matplotlib import pyplot as plt \nimport seaborn as sns\nplt.style.use(['fivethirtyeight'])\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn import metrics\nfrom sklearn.decomposition import PCA\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.cluster import AgglomerativeClustering\nfrom yellowbrick.cluster import KElbowVisualizer\n\nimport warnings\nwarnings.filterwarnings('ignore')","9434ae88":"data = pd.read_csv(\"..\/input\/customer-personality-analysis\/marketing_campaign.csv\", sep=\"\\t\")\ndata.info()","9868e44e":"data.head().T","e813031e":"# Check for missing values\nprint(\"Missing value:\\n\", data.isnull().sum()) ","20574e20":"# Check for duplicate data\ndata.duplicated().sum()","67b37128":"# Use the mean to fill in the 24 missing data in the income column\ndata = data.fillna(data['Income'].mean())","7d20db37":"# Adjust the data format of the registration date to the date format\ndata['Dt_Customer'] = pd.to_datetime(data['Dt_Customer'])\ndata['Dt_Customer'].apply(['min', 'max'])","ac08a1bb":"print(\"Marital_Status:\\n\", data['Marital_Status'].value_counts(), '\\n')\nprint(\"Education:\\n\", data['Education'].value_counts())","0a170e1c":"# Percentage of customers in different marital status\nplt.figure(figsize=(9, 9))\nx = data['Marital_Status'].value_counts().sort_values()\nplt.pie(x=x, labels=['YoLo', 'Absurd','Alone', 'Window', 'Divorced', 'Single', 'Together','Married'],\n        autopct = '%1.1f%%', )\nplt.axis('equal')\nplt.title('Propotion of Marital_Status')","1b4a8b79":"# Percentage of customers with different education levels\nx = data['Education'].value_counts().sort_values()\n\nplt.figure(figsize=(9,9))\nplt.pie(x=x, labels=['2n Cycle', 'Basic', 'Master', 'PhD', 'Graduation'], autopct = '%1.1f%%')\nplt.title('Propotion of Education')","5eff118a":"data['Age'] = data.apply(lambda data:  2015- data['Year_Birth'], axis=1)\ndata['Spent'] = data.apply(lambda data: data['MntFishProducts'] + data['MntFruits'] + data['MntGoldProds'] + \n                data['MntMeatProducts'] + data['MntSweetProducts'] + data['MntWines'], axis=1)\n\n\ndata['Children'] = data.apply(lambda data: data['Kidhome'] + data['Teenhome'], axis=1)\n\ndata['TotalAcceptedCmp'] = data.apply(lambda data: data['AcceptedCmp1'] + data['AcceptedCmp2'] + \n                                      data['AcceptedCmp3'] + data['AcceptedCmp4'] + \n                                      data['AcceptedCmp5'], axis=1)\ndata['NumTotalPurchases'] = data.apply(lambda data: data['NumWebPurchases'] + data['NumCatalogPurchases'] + \n                            data['NumStorePurchases'] + data['NumDealsPurchases'], axis=1)\n","181f7cea":"# Drop'Year_Birth', 'Z_CostContact', 'Z_Revenue', 'Kidhome', 'Teenhome' columns\ndata = data.drop(['Year_Birth', 'Z_CostContact', 'Z_Revenue', 'Kidhome', 'Teenhome'], axis=1) ","3427743e":"# Delete the outliers of income and age in the data\ndata = data.drop(data.loc[data['Income'] > 600000].index)\ndata = data.drop(data.loc[data['Age'] > 100].index)","03500c77":"# Create a new feature \"Have_Children\", with children with a value of 1, and no children with a value of 0\ndata['Have_Children'] = np.where(data.Children > 0, 1, 0)\ndata.head()","6b22015b":"# Group the data based on whether there are children and draw a scatter plot matrix\npairplot = data.loc[:, ['Income', 'Age', 'Spent', 'Recency', 'Have_Children']]\n\nsns.pairplot(pairplot, hue='Have_Children', palette='Set1')","2aa5009c":"# Cut the continuous variable Age\nbins = [0, 20, 40, 60, 80,100]\naged = pd.cut(data['Age'], bins=bins)\nprint('number of age_cut:\\n', aged.value_counts())","24e9a820":"# Different age group customer classification summary\nplt.figure(figsize=(12,6))\nsns.countplot(y=aged, palette='Set2')\nplt.title('countplot of Age')","5520533e":"# Differences in shopping expenses for different age ranges\nplt.figure(figsize=(12,6))\nsns.boxplot(x=aged, y=data['Spent'], palette='Set2')","584054d8":"# The relationship between education level and shopping expenses\n# Comparison of customer spending in different marital status\n\nto_boxplot = ['Education', 'Marital_Status']\nfig, axes = plt.subplots(2, 1, figsize=(12, 12))\naxes = axes.flatten()\n\nfor col, ax in zip(to_boxplot, axes):\n    ax = sns.boxplot(data=data, x=col, y='Spent', ax=ax, palette='Set2')\n    ax.set_title(f'boxplot of spent by {col}')","6a0aa535":"# Group customers with different marital status based on their education level, and compare their differences in income and shopping expenses\nfig, axes = plt.subplots(2, 1, figsize=(14,10))\nsns.barplot(x= 'Marital_Status',y='Income',hue='Education',data=data, ci=0,palette='Set2', ax=axes[0])\nsns.barplot(x= 'Marital_Status',y='Spent',hue='Education',data=data, ci=0, palette='Set2', ax=axes[1])","47f7f7c8":"# Income and expenditure show a linear growth relationship\nfig, axes = plt.subplots(1, 2, figsize=(14,6))\nsns.scatterplot(y=data['Spent'], x=data['Income'], ax=axes[0])\nsns.regplot(y='Spent', x='Income', data=data, ax=axes[1])\n","638dd015":"# Histogram of overall website customer spending\nplt.figure(figsize=(12,6))\nsns.histplot(data['Spent'], bins=50, kde=True)\nplt.title('histogram of Spent')","2bc21f5a":"# Frequency distribution of the number of days since the user's last purchase\nplt.figure(figsize=(12,6))\nsns.histplot(data['Recency'], bins=60)","eeda9908":"# Statistics of monthly activity frequency of website users\nplt.figure(figsize=(12,6))\nsns.histplot(data['NumWebVisitsMonth'], bins=50, kde=True)\nplt.title('Monthly activities (5-7)\/month')","9a255814":"# Website complaints\nx = data['Complain'].value_counts().sort_values()\n\nplt.figure(figsize=(8,8))\nplt.pie(x=x, labels=['YES', 'NO'], autopct = '%1.1f%%')\nplt.title('Complain of customer')","7e20f70b":"# Frequency statistics of 'MntWines', 'MntFishProducts', 'MntFruits', 'MntGoldProds', 'MntMeatProducts', 'MntSweetProducts'  respective sales\nto_histplot = ['MntWines', 'MntFishProducts', 'MntFruits', 'MntGoldProds', \n               'MntMeatProducts', 'MntSweetProducts']\n\nfig, axes = plt.subplots(3, 2, sharex=True, sharey=True, figsize=(14, 10))\naxes = axes.flatten()\n\nfor col, ax in zip(to_histplot, axes):\n    ax = sns.histplot(data=data, x=col, ax=ax)\n    ax.set_title(f'histogram of {col}')\n","0beb3d83":"# Statistics of the frequency of purchases through the three channels of catalogs, stores and websites\nto_histplot = ['NumCatalogPurchases', 'NumStorePurchases', 'NumWebPurchases']\nfig, axes = plt.subplots(1, 3, sharey=True, figsize=(14, 9))\naxes = axes.flatten()\n\nfor col, ax in zip(to_histplot, axes):\n    ax = sns.histplot(data=data, x=col, ax=ax)\n    plt.subplots_adjust(hspace = 0.5, wspace = 0.3)","d3826311":"# Create an indicator of the total number of bids accepted by the activity\nacceptedConcat = data[['AcceptedCmp1', 'AcceptedCmp2', 'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5']]\nacceptedConcat = acceptedConcat.apply(pd.DataFrame.sum)\n\nprint('acceptedConcat:\\n', acceptedConcat)","e8774cd7":"# Create an indicator of the total number of bids accepted by the activity\nplt.figure(figsize=(12,6))\nplt.title('accepted the campaings in every attempt')\nsns.barplot(x=acceptedConcat.index, y=acceptedConcat, palette='Set2')","2e59334e":"# The relationship between the number of days since the user\u2019s last purchase and whether the offer was accepted in the last activity\nplt.figure(figsize=(12,6))\nplt.title('Recency Vs Acceptance of an offer')\nsns.lineplot(x='Recency', y='Response', data=data)","9d548e36":"# Website monthly active users line chart\ngroupedDate = data.set_index('Dt_Customer')\ngroupedDate = groupedDate.resample('M').count()\n\nplt.figure(figsize=(14,4))\nplt.title('Customer NumWebVisitsMonth by mounths')\ngroupedDate.NumWebVisitsMonth.plot(kind='line')","5fade258":"# Line chart of total monthly consumption amount\ngroupedDate = data.set_index('Dt_Customer')\ngroupedDate = groupedDate.resample('M').count()\n\nplt.figure(figsize=(14,4))\nplt.title('Customer Spent by mounths')\ngroupedDate.Spent.plot(kind='line')","a7ddf291":"# Line chart of users purchased through the website every month\ngroupedDate = data.set_index('Dt_Customer')\ngroupedDate = groupedDate.resample('M').count()\n\nplt.figure(figsize=(14,4))\nplt.title('Customer NumWebPurchases by mounths')\ngroupedDate.NumWebPurchases.plot()","d8cbad8d":"# Line chart of users purchased through the catalog each month\ngroupedDate = data.set_index('Dt_Customer')\ngroupedDate = groupedDate.resample('M').count()\n\nplt.figure(figsize=(14,4))\nplt.title('Customer NumCatalogPurchases by mounths')\ngroupedDate.NumCatalogPurchases.plot(kind='line')","c67805a3":"#Monthly discount chart of users purchased through the store\ngroupedDate = data.set_index('Dt_Customer')\n\ngroupedDate = groupedDate.resample('M').count()\n\nplt.figure(figsize=(14,4))\nplt.title('Customer NumStorePurchases by mounths')\ngroupedDate.NumStorePurchases.plot(kind='line')","ad6eb1a9":"s = (data.dtypes == 'object')\nobject_cols = list(s[s].index)\n\nprint(\"Categorical variables in the dataset:\", object_cols)","7ea17ab2":"LE=LabelEncoder()\nfor i in object_cols:\n    data[i]=data[[i]].apply(LE.fit_transform)","16efd528":"# Correlation heat map\nplt.figure( figsize = (14, 14))\ndata1 = data.iloc[:, 1:-1]\nsns.heatmap(data1.corr(), annot=True, cmap='Set2')","3ffdca45":"ds = data.copy()\n\ncols_del = ['ID', 'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1','AcceptedCmp2', \n            'Complain', 'Response', 'Have_Children', 'Dt_Customer',  'Children']\nds = ds.drop(cols_del, axis=1)\n","f96358da":"# Data standardization\nscaler = StandardScaler()\nscaler.fit(ds)\nscaled_ds = pd.DataFrame(scaler.transform(ds),columns= ds.columns )\n","335cba4c":"pca = PCA(n_components=3)\npca.fit(scaled_ds)\nPCA_ds = pd.DataFrame(pca.transform(scaled_ds), columns=([\"col1\",\"col2\", \"col3\"]))\nPCA_ds.describe().T","b8876036":"x =PCA_ds[\"col1\"]\ny =PCA_ds[\"col2\"]\nz =PCA_ds[\"col3\"]\n\n# Data visualization after dimensionality reduction\nfig = plt.figure(figsize=(10,8))\nax = fig.add_subplot(111, projection=\"3d\")\nax.scatter(x,y,z, marker=\"o\" )\nax.set_title(\"Data Visualization In The Reduced Dimension\")\nplt.show()","f2f0d547":"Elbow_M = KElbowVisualizer(KMeans(), k=10)\nElbow_M.fit(PCA_ds)\nElbow_M.show()","6d5ec3be":"AC = AgglomerativeClustering(n_clusters=4)\n\n# Fit the model and predict clusters\nyhat_AC = AC.fit_predict(PCA_ds)\nPCA_ds[\"Clusters\"] = yhat_AC\n\n# Add clustering features to the original data\ndata[\"Clusters\"]= yhat_AC","4c1561a5":"# Visualization of clustering results\nfig = plt.figure(figsize=(10,8))\nax = plt.subplot(111, projection='3d', label=\"bla\")\nax.scatter(x, y, z, s=50, c=PCA_ds[\"Clusters\"], marker='o', cmap = 'Set2' )\nax.set_title(\"The Plot Of The Clusters\")\nplt.show()","ad7a1387":"# Distribution map of clustering results\nplt.figure(figsize=(12, 6))\npl = sns.countplot(x=data[\"Clusters\"], palette= 'Set2')\npl.set_title(\"Distribution Of The Clusters\")\nplt.show()","4b9d8227":"# Visualize the clustering results according to income and expenditure\nplt.figure(figsize=(12, 6))\npl = sns.scatterplot(data = data,x=data[\"Spent\"], y=data[\"Income\"],hue=data[\"Clusters\"], palette= 'Set2')\npl.set_title(\"Cluster's Profile Based On Income And Spent\")\nplt.legend()\nplt.show()","bd974278":"plt.figure(figsize=(12,6))\nsns.swarmplot(x=data[\"Clusters\"], y=data[\"Spent\"], alpha=0.9, palette= 'Set2' )","08dbd24c":"# Visualize the total acceptance of activities according to the clustering results\nplt.figure(figsize=(12,6))\npl = sns.countplot(x=data[\"TotalAcceptedCmp\"],hue=data[\"Clusters\"], palette= 'Set2')\npl.set_title(\"Count Of Promotion Accepted\")\npl.set_xlabel(\"Number Of Total Accepted Promotions\")\nplt.show()","980678a0":"# PCA DIMENSION REDUCTION","2fa9424a":"# EVALUATION MODEL","1fc41871":"# DATA CLEANING\n- There are 24 missing values in the income data, which are filled in with the mean value\n- Customer registration time needs to be converted to date format\n- The two variables of education level and marital status need to be recoded","738681db":"# LOAD DATA","a19eb01e":"Since June 2014, the number of website visits and the total number of transactions on the website has dropped sharply. The three channels of direct purchase through websites, catalogs, and stores all experienced the same trajectory decline.","903b72d5":"**Income and expenditure graph shows cluster mode**\n\n- Group 0: High expenditure and average income\n- Group 1: High consumption and high income\n- Group 2: Low expenditure and low income\n- Group 3: High expenditure and low income","d95da9b2":"# DATA PREPARATION\n\n**Attributes Information**\n\n| Classification \t| Columns \t| Explanation \t|\n|---\t|---\t|---\t|\n| User attributes \t| ID \t|  \t|\n| User attributes \t| Year_Birth \t|  \t|\n| User attributes \t| Education \t|  \t|\n| User attributes \t| Marital_Status \t|  \t|\n| User attributes \t| Income \t| Customer's yearly household income \t|\n| User attributes \t| Kidhome \t| Number of children in customer's household \t|\n| User attributes \t| Teenhome \t| Number of teenagers in customer's household \t|\n| User health indicators \t| Dt_Customer \t| Date of customer's enrollment with the company \t|\n| User health indicators \t| Recency \t| Number of days since customer's last purchase \t|\n| User health indicators \t| NumWebVisitsMonth \t| Number of visits to company\u2019s web site in the last month \t|\n| User health indicators \t| Complain \t|  1 if customer complained in the last 2 years, 0 otherwise \t|\n| Trading Information \t| MntWines \t| Amount spent on wine in last 2 years \t|\n| Trading Information \t| MntFruits \t| Amount spent on fruits in last 2 years \t|\n| Trading Information \t| MntMeatProducts \t| Amount spent on meat in last 2 years \t|\n| Trading Information \t| MntFishProducts \t| Amount spent on fish in last 2 years \t|\n| Trading Information \t| MntSweetProducts \t| Amount spent on sweets in last 2 years \t|\n| Trading Information \t| MntGoldProds \t| Amount spent on gold in last 2 years \t|\n| Source of transaction \t| NumWebPurchases \t| Number of purchases made through the company\u2019s web site \t|\n| Source of transaction \t| NumCatalogPurchases \t| Number of purchases made using a catalogue \t|\n| Source of transaction \t| NumStorePurchases \t| Number of purchases made directly in stores \t|\n| Operational conversion \t| NumDealsPurchases| Number of purchases made with a discount \t|\n| Operational conversion  \t| AcceptedCmp1 \t| 1 if customer accepted the offer in the 1st campaign, 0 otherwise \t|\n| Operational conversion  \t| AcceptedCmp2 \t| 1 if customer accepted the offer in the 2nd campaign, 0 otherwise \t|\n| Operational conversion  \t| AcceptedCmp3 \t| 1 if customer accepted the offer in the 3rd campaign, 0 otherwise \t|\n| Operational conversion  \t| AcceptedCmp4 \t|  if customer accepted the offer in the 4th campaign, 0 otherwise \t|\n| Operational conversion  \t| AcceptedCmp5 \t|  if customer accepted the offer in the 5th campaign, 0 otherwise \t|\n| Operational conversion  \t| Response \t| 1 if customer accepted the offer in the last campaign, 0 otherwise \t|\n","e795b758":"**Customer_Shopping_Analysis**\n![](https:\/\/emaginenet.com\/wp-content\/uploads\/2019\/03\/RepeatCustomer2.jpg)","bacc25b0":"# CLUSTER","38ded3a7":"# DATA VISUALIZATION","fb7c990f":"# DATA PREPROCESSING\n\n**Create a new data feature:**\n\n- Create Age column with date of birth\n- Create Spent (total consumption) column\n- Create a Children column\n- Create TotalAcceptedCmp (total number of accepted quotes) column\n- Create NumTotalPurchases (total purchase quantity) column","9c0c6a93":"#  IMPORT LIBRARIES"}}