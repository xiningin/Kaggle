{"cell_type":{"9a79c7a4":"code","8d728338":"code","2f705d21":"code","411b3c9f":"code","7f8bf4c0":"code","0b937041":"code","539ab16b":"code","39e5d586":"code","908bc6e2":"code","fe825ada":"code","2958b928":"code","412b8e1f":"code","6aa8f5cc":"code","38d5edaf":"code","9fe77c31":"code","4073ea08":"code","ee055509":"code","e7136df1":"code","dfbe4a10":"code","1733058d":"code","760529e8":"code","7cb6b29c":"code","415b2803":"code","e1870ddd":"code","c511691e":"code","4adc3de4":"code","d6c0c459":"code","437662d0":"code","2f6c0911":"code","a7578496":"code","ac058406":"code","a03efb13":"code","b548a2bb":"markdown","4a92d020":"markdown","397b28ce":"markdown","a2354ee3":"markdown","1c00a127":"markdown","049776ec":"markdown","09559903":"markdown","9ae29d9a":"markdown","a0b607e2":"markdown","c80648f6":"markdown","04f387c1":"markdown","9ff39f1a":"markdown","160e272d":"markdown","94fe4205":"markdown","70f407ba":"markdown","9fbf413a":"markdown","01ca84cd":"markdown","53e54f42":"markdown","6b570c9c":"markdown","8e78eaeb":"markdown","440fbf9f":"markdown","c4b85559":"markdown","7344ce9a":"markdown","85ae2888":"markdown","55348126":"markdown","9880ea04":"markdown","7b56dcae":"markdown","5b1fcfc1":"markdown"},"source":{"9a79c7a4":"# import library\nimport pandas as pd\nfrom sklearn.preprocessing import LabelEncoder\nimport numpy as np\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import roc_auc_score\nimport seaborn as sn\nimport matplotlib.pyplot as plt","8d728338":"# read data\ntrain = pd.read_csv('..\/input\/sanber1\/train.csv')\ntrain.head(10)","2f705d21":"test = pd.read_csv('..\/input\/sanber1\/test.csv')\ntest.head(10)","411b3c9f":"# Check info data\ntrain.info()\n\ntest.info()","7f8bf4c0":"# replace test dataset\ntest = test.replace({'?': 'Tidak Deketahui'})","0b937041":"test","539ab16b":"# replace train dataset\ntrain = train.replace({'?': 'Tidak Deketahui'})","39e5d586":"train","908bc6e2":"# encode column gaji\nobj_gaji = {'<= 6 juta':0, '> 6 juta':1}\ntrain['Gaji'] = train['Gaji'].replace(obj_gaji)\n\n# encode column jenis kelamin\nobj_jk = {'Perempuan':0, 'Laki2':1}\ntrain['Jenis Kelamin'] = train['Jenis Kelamin'].replace(obj_jk)\ntest['Jenis Kelamin'] = test['Jenis Kelamin'].replace(obj_jk)","fe825ada":"# call LabelEncoder and save in variable 'le'\nle = LabelEncoder()\n\n# fit 'le' to 'Kelas Pekerja'\nle.fit(train['Kelas Pekerja'])\nle.fit(test['Kelas Pekerja'])\n\n# list of unique rows in 'Kelas Pekerja' column\nlist(le.classes_)","2958b928":"# transform data \ntrain['Kelas Pekerja']=le.transform(train['Kelas Pekerja'])\ntest['Kelas Pekerja']=le.transform(test['Kelas Pekerja'])\n\nprint(np.sort(test['Kelas Pekerja'].unique()))","412b8e1f":"# same step\nle.fit(train['Pendidikan'])\nle.fit(test['Pendidikan'])\nlist(le.classes_)","6aa8f5cc":"train['Pendidikan']=le.transform(train['Pendidikan'])\ntest['Pendidikan']=le.transform(test['Pendidikan'])\n\nprint(np.sort(test['Pendidikan'].unique()))","38d5edaf":"le.fit(train['Pekerjaan'])\nle.fit(test['Pekerjaan'])\nlist(le.classes_)","9fe77c31":"train['Pekerjaan']=le.transform(train['Pekerjaan'])\ntest['Pekerjaan']=le.transform(test['Pekerjaan'])\n\nprint(np.sort(test['Pekerjaan'].unique()))","4073ea08":"le.fit(train['Status Perkawinan'])\nle.fit(test['Status Perkawinan'])\nlist(le.classes_)","ee055509":"train['Status Perkawinan']=le.transform(train['Status Perkawinan'])\ntest['Status Perkawinan']=le.transform(test['Status Perkawinan'])\n\n# check numbers after transforming data\nprint(np.sort(test['Status Perkawinan'].unique()))","e7136df1":"# Recheck if our columns are all in Int\/Float dtypes\ntest.info()\ntrain.info()","dfbe4a10":"print('Kelas Pekerja')\nx = train[['Kelas Pekerja','Gaji']].groupby(['Kelas Pekerja'], as_index=False).mean()['Kelas Pekerja']\ny = train[['Kelas Pekerja','Gaji']].groupby(['Kelas Pekerja'], as_index=False).mean()['Gaji']\nplt.bar(x,y)\nplt.xlabel('Kelas Pekerja')\nplt.ylabel('Gaji')\nplt.show()\n\nprint('Jumlah Tahun Pendidikan')\nx = train[['Jmlh Tahun Pendidikan','Gaji']].groupby(['Jmlh Tahun Pendidikan'], as_index=False).mean()['Jmlh Tahun Pendidikan']\ny = train[['Jmlh Tahun Pendidikan','Gaji']].groupby(['Jmlh Tahun Pendidikan'], as_index=False).mean()['Gaji']\nplt.bar(x,y)\nplt.xlabel('Jmlh Tahun Pendidikan')\nplt.ylabel('Gaji')\nplt.show()\n\nprint('Jumlah Tahun Pendidikan')\nx = train[['Jenis Kelamin','Gaji']].groupby(['Jenis Kelamin'], as_index=False).mean()['Jenis Kelamin']\ny = train[['Jenis Kelamin','Gaji']].groupby(['Jenis Kelamin'], as_index=False).mean()['Gaji']\nplt.bar(x,y)\nplt.xlabel('Jenis Kelamin')\nplt.ylabel('Gaji')\nplt.show()","1733058d":"plt.figure(figsize=(19, 15))\ncorrMatrix = train.corr()\nsn.heatmap(corrMatrix, annot=True)\nplt.show()","760529e8":"drop_elements = ['Berat Akhir', 'Keuntungan Kapital' ,'Kelas Pekerja']\ntrain = train.drop(drop_elements, axis=1)\ntest = test.drop(drop_elements, axis=1)","7cb6b29c":"# datatype to int\ntrain = train.astype(int)\ntest = test.astype(int)","415b2803":"std_scaler = StandardScaler()\ndata_scale = std_scaler.fit_transform(train)\n\ndata_scale","e1870ddd":"X = train.drop('Gaji', axis=1)\ny = train['Gaji']\nX_test = test","c511691e":"# Setting algorithm model\nmodel_dt = DecisionTreeClassifier()\n\n# Tuning Hypermarameters\nparam_grid = {\n    'criterion':['gini', 'entropy'],\n    'splitter':['best', 'random']\n}\n\n# Using gscv to processing\ngscv = GridSearchCV(model_dt, param_grid=param_grid, scoring='roc_auc', cv=10)","4adc3de4":"# fitting model to data\ngscv.fit(X,y)\n\n# getting the best hyperparameters \ngscv.best_params_","d6c0c459":"# getting score of the best hyperparameters\ngscv.best_score_","437662d0":"# predict using gscv\ny_pred = gscv.predict(X_test)\n\n# Save prediction to df_dt dataframe using pandas and show 100 head\ndf_dt = pd.DataFrame({'id': test['id'], 'Gaji': y_pred})\ndf_dt.head(100)","2f6c0911":"model_rf = RandomForestClassifier()\nparam_grid = {\n    'n_estimators':(2,200),\n    'criterion':['gini','entropy']    \n}\ngscv = GridSearchCV(model_rf, param_grid=param_grid, scoring='roc_auc', cv=10)\ngscv.fit(X,y)","a7578496":"gscv.best_params_","ac058406":"gscv.best_score_","a03efb13":"y_pred = gscv.predict(X_test)\n\ndf_rf = pd.DataFrame({'id': test['id'], 'Gaji': y_pred})\ndf_rf.head(100)","b548a2bb":"Pada proses ini saya membagi variable X sebagai data fitur dan variable y sebagai data lebel\/output dengan menghapus kolom gaji pada variable X dan menjadikan kolom gaji pada variable y.","4a92d020":"> Gambar 3\nMenggambarkan peserbarah rataan gaji berdasarkan jenis kelamin dimana didapatkan pada bar 1 merupakan gambaran rataan gaji untuk jenis kelamin peremouan lebih rendah daripada rataan gaji pada bar ke-2 untuk laki-laki.\n","397b28ce":"Encode\/Transform String Data type using LabelEncoder","a2354ee3":"# Checking dataset info (Non-Null Count and Data Type)","1c00a127":"> Akhir proses ini mengahsilkan semua data sudah berupa tipe data integer.","049776ec":"# RandomForest","09559903":"Pada proses ini saya melakukan penggambaran visualisasi untuk menggambarkan korelasi matriks dari tiap kolom yang ada pada dataset dan saya menggunakan kolom gaji sebagai kolom parameter untuk mengukur relasi dengan keterkaitannya dan untuk memilih kolom yang akan saya gunakan untuk proses machine learning selanjutnya. Didapatkan 2 kolom yang memiliki korelasi tertinggi dengan kolom gaji yaitu kolom status perkawinan dan jumlah tahun pendidikan.","9ae29d9a":"Pada notebook ini akan melakukan proses prediksi data gaji menggunakan dataset yang diberikan oleh SanberCode yang berisikan variabel parameter dalam datasetnya yaitu kolom Umur, Kelas Pekerja, Berat Akhir, Pendidikan, Jmlh Tahun Pendidikan, Status Perkawinan, Pekerjaan, Jenis Kelamin, Keuntungan Kapital, Kerugian Capital, Jam per Minggu dan Gaji serta pada dataset test dihilangkan kolom gaji untuk melakukan prediksi atau untuk mendapatkan output prediksi dari proses Machine Learning nya. Model Algoritma Machine Learning yang digunakan pada pengujian ini yaitu *Algoritma Decision Tree dan Random Forest* yang dilakukan *hyperpameter tuning menggunakan GridSearchCV* untuk mendapatkan hyperpamareter terbaik. Sebelum melakukan fitting kedalam model algoritma nya dilakukan preprocessing atau cleaning dan normalisasi dataset agar dapat lebih mudah melakukan proses machine learning dan mengahasilkan akurasi yang lebih akurat. Hasil akhir pada Notebook ini barupa label output pada kolom gaji hasil prediksi model algoritma Machine Learning, untuk akurasinya didapatkan setelah submit ke competition di Kaggle dan didapatkan **Model algoritma Random Forest memberikan hasil akurasi tebaik.**","a0b607e2":"Pada dataset ini ternyata terdapat data yang berisikan data '?' yang berarti data tersebut tidak diketahui isinya, untuk merapihkan data ini saya memilih untuk mengganti '?' dengan teks 'tidak diketahui' daripada menghapus kolom yang berisikan '?'.","c80648f6":"Pada proses ini melakukan normalisasi menggunakan standard scaler dengan menghapus mean dan menskalakan ke varians unit","04f387c1":"# Visualization","9ff39f1a":"# Importing Libraries","160e272d":"# Encode\/Transform string data type using .replace","94fe4205":"# Choosing X and y (parameters and label)","70f407ba":"Pada proses ini dilakukan proses untuk memeriksa deskripsi kolom berupa nama kolom dan memerisa kolom yang kosong (bila ada) dan tipe data nya. \n\nDan didapatkan :\n* Terdapat 35994 data pada data train dan 9599 data pada data uji.\n* Tidak ada data yang null\/kosong.\n* Pada data train terdapat 7 data integer dan 6 data object dan Pada data test terdapat 3 data float, 4 data integer dan 5 data object.\n* Terdapat 13 kolom pada data train dan 12 kolom pada data test.\n* Pada tiap-tiap dataset berisikan kolom Umur, Kelas Pekerja, Berat Akhir, Pendidikan, Jmlh Tahun Pendidikan, Status Perkawinan, Pekerjaan, Jenis Kelamin, Keuntungan Kapital, Kerugian Capital, Jam per Minggu dan Gaji dan pada data test.\n","9fbf413a":"Pada proses ini saya melakukan pengujian menggunakan model algoritma Decision Tree dengan hyperparameter terbaik yaitu {'criterion': 'entropy', 'splitter': 'best'}","01ca84cd":"Pada proses ini saya melakukan penggambaran atau visualisasi data pada axis x yaitu ada data kelas pekerja, jumlah tahun pendidikan, dan jenis kelamin serta pada axis y ayaitu gaji yang digambarkan dengan menggunakan grouping menggunakan data mean.","53e54f42":"# Import csv files using pandas","6b570c9c":"# DecisionTree","8e78eaeb":"> Gambar 1\nPada Kelas pekerja didapatkan gambaran ukuran rataan gaji berdasarkan kelas pekerja dimana kelas pekerja pada kelas 2 memiliki rataan gaji yang paling besar yaitu 'Pemerintah Negara' diikuti dengan kelas pekerja kelas 4 yaitu 'Pemerintah Provinsi' sedangkan untuk rataan gaji terendah  yaitu pada kelas 7 yaitu bukan pekerja dan kelas 5 yaitu pekerja tanpa bayaran.\n","440fbf9f":"Pada proses ini saya mengubah data yang sebelumnya merupakan object menjadi data angka seperti pada kolom gaji yang memiliki gaji <= 6 juta menjadi 0 dan gaji > 6 juta menjadi 1 serta untuk kolom jenis kelamin perempuan menjadi 0 dan laki-laki menjadi 1 menggunakan replace sedangkan untuk data pada kolom kelas pekerja, pendidikan, pekerjaan dan status perkawinan menggunakan encoder yaitu labelEncoder untuk melakukan encode datanya untuk memudahkan proses machine learning.","c4b85559":"Memasukkan dataset yang tersedia yang terbagi mendaji data latih\/data train yang disimpan dalam variable *train* dan data uji\/data test yang disimpan dalam variable *test* yang merupakan data dengan ekstensi csv menggunakan pandas lalu menampilkan 10 data teratas pada dataset tersebut.","7344ce9a":"Pada proses ini saya melakukan import library atau package yang akan digunakan \n* Pandas -> untuk meproses data \n* LabelEncoder dan np -> untuk mengubah data object\/string menjadi int dan memproses angka \n* plt dan sn -> untuk visualisasi\n* StandardScaler -> untuk normalisasi data angka\n* RandomForestClassifier dan DecisionTreeClassifier -> untuk mengimport model algoritma machine learning\n* GridSearchCV -> untuk hyperparameter tuning\n","85ae2888":"> Gambar 2\nPada Jumlah Tahun Pendidikan didapatkan gambaran ukuran rataan gaji berdasarkan jumlah tahun pendidikan dimana terlihat grafik yang linear semakin tinggi jumlah tahun pendidikan semakin besar juga rataan gaji nya.\n","55348126":"Pada proses ini saya melakukan pengujian menggunakan model algoritma Random Forest dengan hyperparameter terbaik yaitu {'criterion': 'entropy', 'n_estimators': 200}","9880ea04":"# Replacing '?' with 'Tidak Diketahui'","7b56dcae":"# Correlation Matrix","5b1fcfc1":"# Normalisasi data "}}