{"cell_type":{"d637c881":"code","b86855b0":"code","12505d70":"code","41dfea06":"code","e7b31c5f":"code","1eea3a6f":"code","9cf84d0c":"code","de0caff1":"code","4566f9df":"code","416ddbc2":"code","c26dc579":"code","f12fb9dc":"code","e776f51c":"code","139a5204":"code","38e53888":"code","2e050c41":"markdown","3ce534b9":"markdown","12f05f98":"markdown","848f5fb1":"markdown","54dda60f":"markdown","496a818e":"markdown","b7eb7aa5":"markdown","7bcba608":"markdown","561c3d09":"markdown","f40818b6":"markdown","ffc005a6":"markdown","d5929ca9":"markdown"},"source":{"d637c881":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b86855b0":"data=pd.read_csv(\"..\/input\/tmdb_5000_movies.csv\")\n","12505d70":"data.info()","41dfea06":"f,ax=plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr(),annot=True,linewidth=.5, fmt=\".1f\",ax=ax)\nplt.show()","e7b31c5f":"data.plot(kind=\"bar\",x=\"budget\",y=\"vote_count\",figsize=(12,12),color=\"red\")\nplt.xlabel(\"budget\")\nplt.ylabel(\"vote_count\")\nplt.show()\n","1eea3a6f":"data.plot(kind=\"scatter\",x=\"revenue\",y=\"budget\",label=\"Movies\",color=\"red\")\nplt.xlabel(\"revenue\")\nplt.ylabel(\"budget\")\nplt.show()","9cf84d0c":"data.budget.plot(kind=\"line\",figsize=(12,12))\nplt.show()","de0caff1":"data.budget.plot(kind=\"hist\",grid=True,bins=50)\nplt.xlabel(\"budget\")\nplt.ylabel(\"frequance\")\nplt.show()","4566f9df":"data.revenue.plot(kind=\"line\",grid=True,figsize=(12,12))\nplt.xlabel(\"id\")\nplt.ylabel(\"revenue\")\nplt.show()","416ddbc2":"dictionary={\"B\u00fctce\":data[\"budget\"],\"Dil\":data[\"original_language\"],\"Ad\u0131\":data[\"original_title\"]}\nprint(dictionary)\n","c26dc579":"newDataframe=pd.DataFrame(dictionary)\nnewDataframe.info()\n","f12fb9dc":"filter1=data[\"budget\"]>20000000\nfilter2=data[\"id\"]<100\nnewdata=data[filter1&filter2]\nprint(newdata)\n","e776f51c":"print(data.loc[:5,\"budget\":\"original_language\"])","139a5204":"i=0\nfor each in dictionary[\"Ad\u0131\"]:\n    if (i>15):\n        break   \n    else:\n        print(each)\n        i+=1\n   ","38e53888":"for each in dictionary[\"B\u00fctce\"]:\n    if(each>250000000):\n         print(each)","2e050c41":"I wanted to show you how we can chose rows or columns which we want","3ce534b9":"I tried to learn relation between budget and vote_count using plot bar","12f05f98":"I tried show 15 names in my dictionary using for loop","848f5fb1":"I created 2 filter for using on my data and I created newdata for seeing filtered datas","54dda60f":"I showed all data which more than 250000000 using 'for loop'","496a818e":"I used line plot for learning relation between id and revenue","b7eb7aa5":"I tried to learn relation between popularity and budget using scatter plot \n","7bcba608":"I used info method because I wanted to see all columns and information on my data","561c3d09":"I tried to learn relation between vote_count and id using plot","f40818b6":"I tried to find frequence of budget on my data using histogram ","ffc005a6":"I used a new dataframe called  ** 'newDataframe'**  and I passed my dictionary into  newDataframe\nand I used info method  to check it  and I used pandas library\n","d5929ca9":"I used 3 columns of the my data for creating dictionary\nI have just tried to use dictionary for example \n"}}