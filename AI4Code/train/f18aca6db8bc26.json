{"cell_type":{"ef1b23b0":"code","1838e294":"code","2d11aeeb":"code","06e7b2e2":"code","d2f807ab":"code","78ad9e73":"code","b616cbab":"code","eb7bb421":"code","5c3ea0b3":"code","b3a8cabc":"code","f1b59e23":"code","72b9894d":"code","d66a14b1":"code","844ffcc6":"code","70f2b3d6":"code","252f641c":"code","559fe935":"code","d0d42c0c":"code","d7e62c4d":"code","51e565b9":"code","1d416ee4":"code","6d5eac0f":"code","53034630":"code","515d052d":"code","014232fd":"code","9d4431e1":"code","e73cc6dc":"markdown","2948fdc2":"markdown","546216a5":"markdown","5af3dc57":"markdown","1f75e83b":"markdown","61e70585":"markdown","3c08d198":"markdown","df05150b":"markdown","e81794aa":"markdown","dced9818":"markdown","308f958e":"markdown","a9e9161b":"markdown","320e6ff3":"markdown","216c1abf":"markdown","67fdd535":"markdown","10ac1b26":"markdown"},"source":{"ef1b23b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.cluster import KMeans\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1838e294":"df = pd.read_csv(\"\/kaggle\/input\/customer-personality-analysis\/marketing_campaign.csv\", sep='\\t')\ndf.head()","2d11aeeb":"df.shape","06e7b2e2":"plt.hist(df.Year_Birth, color=\"darkorange\", edgecolor=\"black\", linewidth=1.2)\nplt.xlabel(\"Years\")\nplt.ylabel(\"No Of Customers\")\nplt.title(\"Division Of Age\")\nplt.show()","d2f807ab":"# plt.figure(figsize=[10, 7])\nplt.hist(df.Income, color = \"darkorange\", edgecolor = \"black\", linewidth = 1.2)\nplt.xticks([0, 100000, 200000, 300000, 400000, 500000, 600000], [\"0\", \"100K\", \"200K\", \"300K\", \"400K\", \"500K\", \"600K\"])\nplt.title(\"Income\")\nplt.show()","78ad9e73":"# plt.figure(figsize=[10,7])\nsns.boxplot(df.Income, color= \"darkorange\")\nplt.show()\noutliers = df.Income > 150000\noutliers = outliers.sum()\nprint()\nprint(\"The Number Of Outliers Are \", outliers)\n","b616cbab":"query = df.Income<150000\ndff = df[query]\nmean_value = dff[\"Income\"].mean()\ndff.fillna(value=mean_value, inplace=True)","eb7bb421":"Graduation, PhD, Masters, TwoN_Cycle, Basic = dff.Education.value_counts()\nplt.figure(figsize=[10,7])\nexplode = [0.00, 0.08, 0.0, 0.0, 0.0]\nplt.pie([Graduation, PhD, Masters, TwoN_Cycle, Basic], colors= [\"darkorange\", \"purple\", \"cyan\",\"yellow\", \"darkred\"], shadow=True,\n        explode=explode,autopct='%1.0f%%',\n        wedgeprops =  {\"edgecolor\" : \"black\",'linewidth': 1,'antialiased': True})\n\nplt.legend([\"Graduation\", \"PhD\", \"Masters\", \"TwoN_Cycle\", \"Basic\"])\nplt.show()","5c3ea0b3":"Married, Together, Single, Divorced, Widow, Alone, Absurd, YOLO = dff.Marital_Status.value_counts()\n\nCouples = Married + Together\nSingle = Single + Alone + Absurd + YOLO\nOthers = Divorced + Widow\n\nplt.figure(figsize=[10,7])\n\nexplode = [0.0, 0.00, 0.04]\nplt.pie([Couples, Single, Others],colors= [\"darkorange\", \"purple\", \"cyan\"], shadow=True,\n        explode=explode,autopct='%1.0f%%',\n        wedgeprops =  {\"edgecolor\" : \"black\",'linewidth': 1,'antialiased': True}) \n\nplt.legend([\"Single\", \"Couples\", \"Others\"])\nplt.show()","b3a8cabc":" dff[\"Total_kids\"] = dff[\"Kidhome\"] + dff[\"Teenhome\"]\n one, zero, two, three = dff.Total_kids.value_counts()\n plt.bar([\"Zero\", \"One\", \"Two\", \"Three\"],[zero, one, two, three], color = \"darkorange\", edgecolor = \"black\", linewidth = 1.2)\n plt.xticks([0, 1, 2, 3])\n plt.show()","f1b59e23":"wines = dff.MntWines.sum()\nfruits = dff.MntFruits.sum()\nmeat = dff.MntMeatProducts.sum()\nfish = dff.MntFishProducts.sum()\nsweet = dff.MntSweetProducts.sum()\ngold = dff.MntGoldProds.sum()\n\nnames = [\"Wines\", \"Fruits\", \"Meat\", \"Fish\", \"Sweet\", \"Gold\"]\nvalues = [wines, fruits, meat, fish, sweet, gold]\nplt.bar(names, values, color=\"darkorange\", edgecolor=\"black\", linewidth = 1.2)\nplt.yticks([0, 100000, 200000, 300000, 400000, 500000, 600000, 700000],\n           [\"0\", \"100K\", \"200K\", \"300K\", \"400K\", \"500K\", \"600K\", \"700K\"])\nplt.show()","72b9894d":"catalog = dff.NumCatalogPurchases.sum()\nstore = dff.NumStorePurchases.sum()\nweb = dff.NumWebPurchases.sum()\n\nplt.bar([\"Catalog\", \"Store\", \"Web\"], [catalog, store, web], color=\"darkorange\", edgecolor=\"black\", linewidth=1.2)","d66a14b1":"camp1 = dff.AcceptedCmp1.sum()\ncamp2 = dff.AcceptedCmp2.sum()\ncamp3 = dff.AcceptedCmp3.sum()\ncamp4 = dff.AcceptedCmp4.sum()\ncamp5 = dff.AcceptedCmp5.sum()\nnames = [\"Campaign 1\", \"Campaign 2\", \"Campaign 3\", \"Campaign 4\", \"Campaign 5\"]\nvalue = [camp1, camp2, camp3, camp4, camp5]\nplt.bar(names,value, color=\"darkorange\" , edgecolor = \"black\", linewidth=1.2)\nplt.title(\"Most Accepted Campaign\")\nplt.show()","844ffcc6":"dff.reset_index(inplace=True)\n\none = [\"Basic\"]\ntwo = [\"Graduation\", \"2n Cycle\"]\nthree = [\"PhD\", \"Master\"]\nedu = []\nfor i in dff.Education:\n  if i in one:\n    edu.append(1)\n  elif i in two:\n    edu.append(2)\n  elif i in three:\n    edu.append(3)\n\nCouple = [\"Single\", \"Divorced\", \"Widow\", \"Alone\", \"Absurd\", \"YOLO\"]\nSingles = [\"Together\", \"Married\"]\nmarital = []\nfor i in dff.Marital_Status:\n  if i in Couple:\n    marital.append(2)\n  elif i in Singles:\n    marital.append(1)\n\ndff[\"Marital\"] = marital","70f2b3d6":"data = pd.DataFrame()\ndata[\"Education\"] = edu\ndata[\"Age\"] = 2021 - dff[\"Year_Birth\"]\ndata[\"Total_Members\"] = dff[\"Kidhome\"] + dff[\"Teenhome\"] + dff[\"Marital\"]\ndata[\"Income\"] = dff[\"Income\"]\ndata[\"Recency\"] = dff[\"Recency\"]\ndata[\"Consumption\"] = (dff[\"MntWines\"] + dff[\"MntFruits\"] + dff[\"MntMeatProducts\"] + dff[\"MntFishProducts\"] + dff[\"MntSweetProducts\"] + dff[\"MntGoldProds\"])\ndata[\"Purchases\"] = dff[\"NumWebPurchases\"] + dff[\"NumCatalogPurchases\"] + dff[\"NumStorePurchases\"]\ndata[\"WebVisits\"] = dff[\"NumWebVisitsMonth\"]","252f641c":"data.head()","559fe935":"scaler = StandardScaler()\nstandard_data = scaler.fit_transform(data.values)","d0d42c0c":"ssd = []\nkrange = range(1,10)\ncount = 1\n\nfor num_clusters in krange:\n  kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n  kmeans.fit(standard_data)\n  ssd.append(kmeans.inertia_)\n  print(count, \" : \", kmeans.inertia_)\n  count += 1\n\nprint()\n# plt.figure(figsize=[10, 7])\nplt.plot(krange, ssd, color = \"darkorange\", linewidth = 2, marker = \"o\")\nplt.title(\"Elbow Method\")\nplt.xlabel(\"Number Of Clusters\")\nplt.show()\n\nprint()\nprint(\"_____________________Silhoutte Score________________________\")\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\n\nfor num_clusters in range_n_clusters:\n    \n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(standard_data)\n    cluster_labels = kmeans.labels_\n    silhouette_avg = silhouette_score(standard_data, cluster_labels)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters, silhouette_avg))","d7e62c4d":"kmean = KMeans(n_clusters= 2, max_iter=50)\nkmean.fit(standard_data)\nkmean.labels_\ndata[\"ClusterID\"] = kmean.labels_","51e565b9":"data.head()","1d416ee4":"data.head()","6d5eac0f":"sns.boxplot(data=data, x=\"ClusterID\", y=\"Total_Members\", color=\"purple\")\nplt.title(\"Cluster Division On The Basis of Total_Members\")\nplt.show()","53034630":"sns.boxplot(data=data, x=\"ClusterID\", y=\"Education\", color=\"purple\")\nplt.title(\"Cluster Division On The Basis of Education\")\nplt.show()","515d052d":"sns.boxplot(data=data, x=\"ClusterID\", y=\"Purchases\", color=\"purple\")\nplt.title(\"Cluster Division On The Basis of Purchases\")\nplt.show()","014232fd":"sns.boxplot(data=data, x=\"ClusterID\", y=\"Income\", color=\"purple\")\nplt.title(\"Cluster Division On The Basis of Income\")\nplt.show()","9d4431e1":"sns.boxplot(data=data, x=\"ClusterID\", y=\"Consumption\", color=\"purple\")\nplt.title(\"Cluster Division On The Basis of Consumption\")\nplt.show()","e73cc6dc":"Checking For Outliers","2948fdc2":"# **Features Extraction**","546216a5":"# **Model Training (KMeans)**","5af3dc57":"It seems **Cluster 1** has taken out those Customers who have higher Family Members but their Income, Consumption, and Purchases are Less. On the other hand the **Cluster 0** is doing eactly the Opposite.\nBut in the Education Sector the values are too much distorted. Which shows that Education is not much Effecting the Data ***(Clusters Names May Change When ReRun)***","1f75e83b":"# **Checking For Best Params**","61e70585":"Appending The Cluster ID To Dataset","3c08d198":"# **Analyzing The Clusters**","df05150b":"# **Importing Libraries**","e81794aa":"# **Scaling Down The Values**","dced9818":"we Have 24 NAN Values So We Would Fill Them Up With Mean Values But After\nDropping Outliers Because Outliers Would Effect Our Mean Badly","308f958e":"# **Context**\n\n\nProblem Statement\n\nCustomer Personality Analysis is a detailed analysis of a company\u2019s ideal customers. It helps a business to better understand its customers and makes it easier for them to modify products according to the specific needs, behaviors and concerns of different types of customers.\n\nCustomer personality analysis helps a business to modify its product based on its target customers from different types of customer segments. For example, instead of spending money to market a new product to every customer in the company\u2019s database, a company can analyze which customer segment is most likely to buy the product and then market the product only on that particular segment.\n\nContent\nAttributes\n\nPeople\n\nID: Customer's unique identifier\nYear_Birth: Customer's birth year\nEducation: Customer's education level\nMarital_Status: Customer's marital status\nIncome: Customer's yearly household income\nKidhome: Number of children in customer's household\nTeenhome: Number of teenagers in customer's household\nDt_Customer: Date of customer's enrollment with the company\nRecency: Number of days since customer's last purchase\nComplain: 1 if customer complained in the last 2 years, 0 otherwise\nProducts\n\nMntWines: Amount spent on wine in last 2 years\nMntFruits: Amount spent on fruits in last 2 years\nMntMeatProducts: Amount spent on meat in last 2 years\nMntFishProducts: Amount spent on fish in last 2 years\nMntSweetProducts: Amount spent on sweets in last 2 years\nMntGoldProds: Amount spent on gold in last 2 years\nPromotion\n\nNumDealsPurchases: Number of purchases made with a discount\nAcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\nAcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\nAcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\nAcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\nAcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\nResponse: 1 if customer accepted the offer in the last campaign, 0 otherwise\nPlace\n\nNumWebPurchases: Number of purchases made through the company\u2019s web site\nNumCatalogPurchases: Number of purchases made using a catalogue\nNumStorePurchases: Number of purchases made directly in stores\nNumWebVisitsMonth: Number of visits to company\u2019s web site in the last month\n\nTarget\nNeed to perform clustering to summarize customer segments.","a9e9161b":"As 2 Clusters have the best score so we will go with it.","320e6ff3":"# **Importing DataSet**","216c1abf":"# **Conclusion**","67fdd535":"# **Data Analysis**","10ac1b26":"Finalized DataSet"}}