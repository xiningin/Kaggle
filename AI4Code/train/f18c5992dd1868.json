{"cell_type":{"9710edf8":"code","b8b859a2":"code","db3f8e75":"code","666469ec":"code","25b6dc8c":"code","2c817e68":"code","70bfae67":"code","335146c6":"code","82e751b6":"code","6fb006d7":"code","0a791552":"code","a46c7408":"code","61f9986a":"code","e626d734":"code","5adacbb3":"code","8e90f3e7":"code","a554e0a4":"code","d917ca8d":"code","0a0e7f80":"code","a3691fa8":"code","e5f0b344":"code","7617eb79":"code","650093f9":"code","d502c1ee":"code","4bb71bf1":"code","265c8d7a":"code","e2af0456":"code","39eb3747":"markdown","041e127d":"markdown","5a5d1014":"markdown","1e4bab54":"markdown","562011d3":"markdown","a6694545":"markdown","667647c6":"markdown","9dcd95e7":"markdown","62dbd538":"markdown","924984a2":"markdown","6f37ecef":"markdown"},"source":{"9710edf8":"import numpy as np\nfrom scipy import fftpack, signal\nimport plotly.offline as plt\nimport plotly.graph_objs as go\nimport pandas as pd\nimport seaborn as sns\nimport pyarrow.parquet as pq\nfrom tqdm import tqdm","b8b859a2":"plt.init_notebook_mode(connected=True)","db3f8e75":"#set_index makes using .loc very handy later on\ntrain_meta = (pd.read_csv('..\/input\/metadata_train.csv')\n                .set_index(['id_measurement','phase'])\n             )","666469ec":"train_meta.head()","25b6dc8c":"tsum = train_meta.groupby(\"id_measurement\")[\"target\"].sum()\ntsum.value_counts()","2c817e68":"pos1_id_meas = tsum[tsum==1].index\npos2_id_meas = tsum[tsum==2].index\npos3_id_meas = tsum[tsum==3].index","70bfae67":"neg_id_meas = tsum[tsum==0].index[:200] #just pick 200 negative samples for now","335146c6":"train_meta_trimmed = train_meta.loc[pos1_id_meas | pos2_id_meas | pos3_id_meas | neg_id_meas]","82e751b6":"xs = pq.read_table('..\/input\/train.parquet', columns=[str(i) for i in train_meta_trimmed['signal_id']]).to_pandas()\n#xs = pq.read_table('..\/input\/train.parquet').to_pandas()\nprint((xs.shape))","6fb006d7":"xs.columns = [int(c) for c in xs.columns]","0a791552":"def plot_3phase(id_measurement):\n    df = train_meta.loc[id_measurement,:]\n    print(df)\n    sigs = [ xs.loc[:,i] for i in df['signal_id']]\n    data = [go.Scattergl( x=xs.index, y=sig) for sig in sigs]\n    plt.iplot(data)","a46c7408":"pos1_id_meas","61f9986a":"plot_3phase(96)","e626d734":"pos2_id_meas","5adacbb3":"plot_3phase(67)","8e90f3e7":"pos3_id_meas","a554e0a4":"plot_3phase(1)","d917ca8d":"neg_id_meas","0a0e7f80":"plot_3phase(0)","a3691fa8":"def undo_phase(sig):\n    \"\"\"\n    find the phase of the 50Hxz component and undo it\n    \"\"\"\n    sig_fft = fftpack.fft(sig)\n    ang = np.angle(sig_fft[1])\n    shift = int((-ang-np.pi\/2.)\/(2.*np.pi)*len(sig))\n    sig_shifted = pd.concat( [sig.iloc[shift:] , sig.iloc[:shift]]).reset_index(drop=True)\n    return sig_shifted","e5f0b344":"for aCol in tqdm(xs.columns):\n    xs[aCol] = undo_phase(xs[aCol])","7617eb79":"xs_pos = xs[train_meta_trimmed[train_meta_trimmed['target']==1]['signal_id']]\nxs_neg = xs[train_meta_trimmed[train_meta_trimmed['target']==0]['signal_id']]","650093f9":"xs_pos_mean = xs_pos.mean(axis=1)\nxs_pos_sd = xs_pos.std(axis=1)\n\nxs_neg_mean = xs_neg.mean(axis=1)\nxs_neg_sd = xs_neg.std(axis=1)","d502c1ee":"pos_p1SD = go.Scattergl(\n    name='Pos+1SD',\n    x=xs.index,\n    y=xs_pos_mean + xs_pos_sd,\n    mode='lines',\n    marker=dict(color=\"#444\"),\n    line=dict(color='rgb(55, 0, 0)', width=1),\n    )\n\npos = go.Scatter(\n    name='Pos',\n    x=xs.index,\n    y=xs_pos_mean,\n    mode='lines',\n    line=dict(color='rgb(255, 0, 0)'),\n    )\n\npos_m1SD = go.Scatter(\n    name='Pos-1SD',\n    x=xs.index,\n    y=xs_pos_mean - xs_pos_sd,\n    marker=dict(color=\"#444\"),\n    line=dict(color='rgb(55, 0, 0)', width=1),\n    mode='lines')\n\nneg_p1SD = go.Scattergl(\n    name='Neg+1SD',\n    x=xs.index,\n    y=xs_neg_mean + xs_neg_sd,\n    mode='lines',\n    marker=dict(color=\"#444\"),\n    line=dict(color='rgb(0, 0, 55)', width=1),\n    )\n\nneg = go.Scatter(\n    name='Neg',\n    x=xs.index,\n    y=xs_neg_mean,\n    mode='lines',\n    line=dict(color='rgb(0, 0, 255)'),\n    )\n\nneg_m1SD = go.Scatter(\n    name='Neg-1SD',\n    x=xs.index,\n    y=xs_neg_mean - xs_neg_sd,\n    marker=dict(color=\"#444\"),\n    line=dict(color='rgb(0, 0, 55)', width=1),\n    mode='lines')\n","4bb71bf1":"# data = [pos_p1SD, pos, pos_m1SD, neg_p1SD, neg, neg_m1SD] #this crash my computer","265c8d7a":"data = [pos_p1SD, pos, pos_m1SD]\nplt.iplot(data)","e2af0456":"data = [neg_p1SD, neg, neg_m1SD]\nplt.iplot(data)","39eb3747":"case where 2 out of 3 phase is positive","041e127d":"Comapre positive and negative average waveform,\nthe average is similar.\n\nThe positves has slightly larger stdev","5a5d1014":"case where 3 out of 3 phase is positive","1e4bab54":"## Allign waveforms","562011d3":"case where 1 out of 3 phase is positive\n\nFrankly, I can't spot the difference.\nThere are spikes in all 3 phase, and many of them appear at the same time across the 3 waveforms.","a6694545":"As noted by others, when things fails, usually all 3 phase fails\nbut sometimes its only 1 or 2 out of the 3 phases","667647c6":"## Ploting some waveforms","9dcd95e7":"case where all phases are negative","62dbd538":"## Thoughts\n1) Like others has proposed, the overall waveform seems not indicative of partial dischage positives\n\n2) The spikes should be more relevent, but from the 1 out of 3 positives cases study, I cannot tell whats's so special about the positive one\n\nWhat do you think?","924984a2":"Example after allign","6f37ecef":"## Statistics of positive and negatives"}}