{"cell_type":{"868f73e6":"code","f76e4687":"code","1c819ead":"code","41eec6d6":"code","ed9e04ab":"code","4dbff422":"code","426d02c4":"code","2bdcdadb":"code","094c290e":"code","e2fce3ca":"code","cb815895":"code","a3cfc782":"code","72ea73ba":"code","86fbb485":"code","45a03eaa":"code","4dbea430":"code","f3730f46":"code","242b3d7b":"markdown","a24d8bd6":"markdown","7809ee3b":"markdown","12b8a77e":"markdown","2a469163":"markdown","3766025c":"markdown","3781bd97":"markdown","1fdb7fb5":"markdown","2df6ea28":"markdown","450f08f3":"markdown","173c40f7":"markdown"},"source":{"868f73e6":"# Required libraries - data visualization\nimport numpy as np # linear algebra\nimport pandas as pd \nimport altair as alt\nimport geopandas as gpd\nimport json\nfrom datetime import date, timedelta\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\nfrom plotly.offline import init_notebook_mode, plot, iplot, download_plotlyjs\nimport plotly as ply\nimport pycountry\nimport folium \nfrom folium import plugins\nfrom scipy.optimize import curve_fit\n\n\ncoronaBrasil = pd.read_csv(\"\/kaggle\/input\/corona-virus-brazil\/brazil_covid19.csv\")\npopBrasil = pd.read_csv(\"\/kaggle\/input\/geodatabrazil\/populacaoEstado.csv\")\nnumEstados = len(popBrasil)\ncoronaBrasil=coronaBrasil.fillna(0)\n\ndelta = timedelta(days=1)\nnumLookaheadDays = 15\nnumPastDays = 30\npastDays = timedelta(days=numPastDays)\nlookAhead = timedelta(days=numLookaheadDays)\nmainStartDate = date.today() - pastDays\nmainEndDate = date.today()\nmainProjectedDate = date.today() + lookAhead\ntoday = date.today()\nif (sum(coronaBrasil[coronaBrasil['date'] == mainEndDate.strftime(\"%Y-%m-%d\")].cases) <1):\n    mainEndDate = mainEndDate - delta\n    mainProjectedDate = date.today() - delta + lookAhead","f76e4687":"casosDia = []\nnewCases = 0\n\ncasosAcumDia = []\nnewCasesAcum = 0\n\ndeathsAcum = []\ndeathsAcumDia = 0\n\ndata = []\n\nstart_date = mainStartDate\nend_date = mainEndDate\n\n# The sum of all corona new cases for each day\nwhile start_date <= end_date:\n    newCasesAcum = sum(coronaBrasil[coronaBrasil['date'] == start_date.strftime(\"%Y-%m-%d\")].cases)\n    newCases = newCasesAcum - newCases\n    newDeaths = sum(coronaBrasil[coronaBrasil['date'] == start_date.strftime(\"%Y-%m-%d\")].deaths)\n    casosDia.append(newCases)\n    casosAcumDia.append(newCasesAcum)\n    deathsAcum.append(newDeaths)\n    data.append(start_date)\n    start_date = start_date + delta","1c819ead":"fig = go.Figure()\n\nyaux = np.array(casosAcumDia) - np.array(casosDia) - np.array(deathsAcum)\n\nfig.add_trace(go.Bar(y=casosDia,x=data, name=\"New Cases\"))\nfig.add_trace(go.Bar(y=deathsAcum,x=data, name=\"Deaths\"))\nfig.add_trace(go.Bar(y=yaux,x=data, name=\"Previous Cases\"))\nfig.update_layout(barmode='stack',title='Increase of covid19 cases and deaths in Brazil by Date', xaxis_title='Day',plot_bgcolor='white')\nfig.update_xaxes(showgrid=True, gridwidth=1, gridcolor='gray')\nfig.update_yaxes(title_text=\"Number of Occurrences\",showgrid=True, gridwidth=0.5, gridcolor='LightGray')\nfig.show()","41eec6d6":"casosStateDia = []\ndeathsStateDia = []\nnewCasesStateDia = 0\nnewDeathsStateDia = 0\n\ndata = []\n\nstart_date = mainStartDate\nend_date = mainEndDate\n\nfig = go.Figure()\n# plot for each state\nfor stateNumber in range (0,numEstados):\n    while start_date <= end_date:\n        coronaBrasilCurrent = coronaBrasil[coronaBrasil['state']==popBrasil['estado'][stateNumber]]\n        newCasesStateDia = sum(coronaBrasilCurrent[coronaBrasilCurrent['date'] == start_date.strftime(\"%Y-%m-%d\")].cases)\n        newDeathsStateDia = sum(coronaBrasilCurrent[coronaBrasilCurrent['date'] == start_date.strftime(\"%Y-%m-%d\")].deaths)\n        casosStateDia.append(newCasesStateDia)#cases for 100.000 hab\n        deathsStateDia.append(newDeathsStateDia)#cases for 100.000 hab\n        data.append(start_date)\n        start_date = start_date + delta\n    fig.add_trace(go.Scatter(y=casosStateDia,x=data, name=popBrasil['estado'][stateNumber]))\n    casosStateDia = []\n    deathsStateDia = []\n    newCasesStateDia = 0\n    newDeathsStateDia = 0\n    start_date = mainStartDate\n    end_date = mainEndDate\nfig.update_layout(title='Spread of Corona Virus in Brazil by Date - States', xaxis_title='Day',plot_bgcolor='white')\nfig.update_xaxes(showgrid=True, gridwidth=1, gridcolor='gray')\nfig.update_yaxes(title_text=\"Number of Occurrences\",showgrid=True, gridwidth=1, gridcolor='LightGray')\n\nfig.show()","ed9e04ab":"casosPerCapitaDia = []\nnewCasesPerCapitaDia = 0\ndata = []\n\nstart_date = mainStartDate\nend_date = mainEndDate\n\nfig = go.Figure()\n# plot for each state\nfor stateNumber in range (0,numEstados):\n    while start_date <= end_date:\n        coronaBrasilCurrent = coronaBrasil[coronaBrasil['state']==popBrasil['estado'][stateNumber]]\n        newCasesPerCapitaDia = sum(coronaBrasilCurrent[coronaBrasilCurrent['date'] == start_date.strftime(\"%Y-%m-%d\")].cases)\/popBrasil['popula\u00e7\u00e3o'][stateNumber]\n        casosPerCapitaDia.append(newCasesPerCapitaDia*100000)#cases for 100.000 hab\n        data.append(start_date)\n        start_date = start_date + delta\n    fig.add_trace(go.Scatter(y=casosPerCapitaDia,x=data, name=popBrasil['estado'][stateNumber]))\n    casosPerCapitaDia = []\n    newCasesPerCapitaDia = 0\n    start_date = mainStartDate\n    end_date = mainEndDate\nfig.update_layout(title='Spread of Corona Virus in Brazil by Date - States', xaxis_title='Day',plot_bgcolor='white')\nfig.update_xaxes(showgrid=True, gridwidth=1, gridcolor='gray')\nfig.update_yaxes(title_text=\"Cases per 100.000 hab\",showgrid=True, gridwidth=1, gridcolor='LightGray')\nfig.show()","4dbff422":"casosDia = []\nnewCasesPerCapitaDia = 0\ndeathsDia = []\nnewDeathsPerCapitaDia = 0\ndata = []\n\nstart_date = mainStartDate\nend_date = mainEndDate\n\n\nfig = go.Figure()\nfig2 = go.Figure()\nfig3 = go.Figure()\n# plot for each state\nfor regionName in ('Norte','Nordeste','Sul','Centro-oeste','Sudeste'):\n    stateArray = popBrasil[popBrasil['regi\u00e3o']==regionName].estado\n    popRegion = popBrasil[popBrasil['regi\u00e3o']==regionName]['popula\u00e7\u00e3o'].sum()\/100000\n    newCasesPerCapitaDia = 0\n    newDeathsPerCapitaDia = 0\n    while start_date <= end_date:\n        coronaBrasilCurrent = []\n        for stateName in stateArray:\n            coronaBrasilCurrent = coronaBrasil[coronaBrasil['state']==stateName]\n            newCasesPerCapitaDia = newCasesPerCapitaDia + sum(coronaBrasilCurrent[coronaBrasilCurrent['date'] == start_date.strftime(\"%Y-%m-%d\")].cases)\n            newDeathsPerCapitaDia = newDeathsPerCapitaDia + sum(coronaBrasilCurrent[coronaBrasilCurrent['date'] == start_date.strftime(\"%Y-%m-%d\")].deaths)\n        casosDia.append(newCasesPerCapitaDia)\n        deathsDia.append(newDeathsPerCapitaDia)\n        newCasesPerCapitaDia = 0\n        newDeathsPerCapitaDia = 0\n        data.append(start_date)\n        start_date = start_date + delta\n    casosPerCapitaDia = casosDia\/popRegion\n    deathsPerCapita = deathsDia\/popRegion\n    fig.add_trace(go.Bar(y=casosPerCapitaDia,x=data, name=regionName))\n    fig2.add_trace(go.Scatter(y=casosPerCapitaDia,x=data, name=regionName))\n    fig3.add_trace(go.Scatter(y=deathsPerCapita,x=data, name=regionName,mode='lines'))\n    casosDia = []\n    newCasesPerCapitaDia = 0\n    deathsDia = []\n    newDeathsPerCapitaDia = 0\n    data = []\n    start_date = mainStartDate\n    end_date = mainEndDate\n\ncoronaBrasilCurrent = []\ncoronaBrasilDeaths = []\npopRegion = popBrasil['popula\u00e7\u00e3o'].sum()\/100000\nnewCasesDia = 0\nnewDeathsDia = 0\nwhile start_date <= end_date:\n    newCasesDia = sum(coronaBrasil[coronaBrasil['date'] == start_date.strftime(\"%Y-%m-%d\")].cases)\n    newDeathsDia = sum(coronaBrasil[coronaBrasil['date'] == start_date.strftime(\"%Y-%m-%d\")].deaths)\n    coronaBrasilCurrent.append(newCasesDia)\n    coronaBrasilDeaths.append(newDeathsDia)\n    data.append(start_date)\n    start_date = start_date + delta\ncasosPerCapitaDia = coronaBrasilCurrent\/popRegion\ndeathsPerCapita = coronaBrasilDeaths\/popRegion\nfig.add_trace(go.Scatter(y=casosPerCapitaDia,x=data, name='Brasil',mode='lines+markers'))\nfig2.add_trace(go.Scatter(y=casosPerCapitaDia,x=data, name='Brasil',mode='lines+markers'))\nfig3.add_trace(go.Scatter(y=deathsPerCapita,x=data, name='Brasil',mode='lines+markers'))\n\nfig.update_layout(title='Spread of Corona Virus in Brazil by Date - Regions', xaxis_title='Day',plot_bgcolor='white')\nfig.update_xaxes(showgrid=True, gridwidth=1, gridcolor='gray')\nfig.update_yaxes(title_text=\"Cases per 100.000 hab\",showgrid=True, gridwidth=1, gridcolor='LightGray')\n\nfig2.update_layout(title='Spread of Corona Virus in Brazil by Date - Regions', xaxis_title='Day',plot_bgcolor='white')\nfig2.update_xaxes(showgrid=True, gridwidth=1, gridcolor='gray')\nfig2.update_yaxes(title_text=\"Cases per 100.000 hab\",showgrid=True, gridwidth=1, gridcolor='LightGray')\n\nfig3.update_layout(title='Deaths by Corona Virus in Brazil', xaxis_title='Day',plot_bgcolor='white')\nfig3.update_xaxes(showgrid=True, gridwidth=1, gridcolor='gray')\nfig3.update_yaxes(title_text=\"Deaths per 100.000 hab\",showgrid=True, gridwidth=1, gridcolor='LightGray')\n\nfig.show()","426d02c4":"fig2.show()","2bdcdadb":"fig3.show()","094c290e":"covidBR = coronaBrasil.groupby(['state'])['state','cases','deaths'].max()\ncovidBR['state'] = covidBR.index\ncovidBR.index = np.arange(1, len(covidBR.state.unique().tolist())+1)\ncovidBR = covidBR[['state', 'cases','deaths']]\ncovidBR.rename(columns={'state': 'NOME', 'cases':'cases','deaths':'deaths'}, inplace=True)\n\ncovidBR.loc[:,'pop'] = np.zeros(len(covidBR))\nfor i in range(0,len(popBrasil)):\n    # a little complicated but in this line we select lines with current State to set population according to pop dataset\n    covidBR.loc[covidBR['NOME'] == popBrasil['estado'][i],'pop']=popBrasil['popula\u00e7\u00e3o'][i]\n    \ncovidBR.loc[:,'casesPerCapita'] = covidBR['cases']\/covidBR['pop']\ncovidBR.loc[:,'casesPer100mil'] = covidBR['casesPerCapita']*100000\ncovidBR.sort_values(by=['casesPer100mil'], ascending=False).style.background_gradient(cmap='Reds')\n","e2fce3ca":"listStates = covidBR.sort_values(by=['cases'], ascending=False)[0:3]['NOME'] # 6 estados com maior incid\u00eancia\n\ncasosPerCapitaDia = []\nnewCasesPerCapitaDia = 0\ndata = []\ndataInt = []\n\nstart_date = mainStartDate\nend_date = mainEndDate\n\ndef func(x, a, b, c):\n    return a * np.exp(b * x)\n\nfig = go.Figure()\n\ncurrentDate = 0\nfor state in listStates:\n    popState = int(popBrasil[popBrasil['estado']==state]['popula\u00e7\u00e3o'])\n    while start_date <= end_date:\n        \n        coronaBrasilCurrent = coronaBrasil[coronaBrasil['state']==state]\n        newCasesPerCapitaDia = sum(coronaBrasilCurrent[coronaBrasilCurrent['date'] == start_date.strftime(\"%Y-%m-%d\")].cases)\n        casosPerCapitaDia.append(newCasesPerCapitaDia)#cases for 100.000 hab\n        data.append(start_date)\n        dataInt.append(currentDate)\n        currentDate = currentDate + 1\n        start_date = start_date + delta\n    #fig.add_trace(go.Bar(y=casosPerCapitaDia,x=data, name=state))\n    currentDate = 0\n    fig.add_trace(go.Scatter(y=casosPerCapitaDia,x=data, name=state))\n    #fit curve for recent 7 samples\n    popt, pcov = curve_fit(func, dataInt[(len(dataInt)-numLookaheadDays):len(dataInt)], casosPerCapitaDia[(len(casosPerCapitaDia)-numLookaheadDays):len(casosPerCapitaDia)])\n    #yy = func(np.array(dataInt), *popt)\n    #fig.add_trace(go.Scatter(y=yy,x=data, name=state+ ' (fit)',mode='lines',line = dict(width=2, dash='dash')))\n    initialDateInt = max(dataInt)\n    casosPerCapitaDia = []\n    dataInt = []\n    newCasesPerCapitaDia = 0\n    start_date = mainEndDate\n    projectedDays = []\n    projectedDaysInt = []\n    valueIndex = initialDateInt\n    while start_date <= mainProjectedDate:\n        projectedDays.append(start_date)\n        projectedDaysInt.append(valueIndex)\n        start_date = start_date + delta\n        valueIndex = valueIndex +1\n    yy = func(np.array(projectedDaysInt), *popt)\n    fig.add_trace(go.Scatter(y=yy,x=projectedDays, name=state+ ' (projected)',mode='lines',\n                         line = dict(width=2, dash='dash')))\n    start_date = mainStartDate\n    end_date = mainEndDate\n\nfig.update_layout(title='covid19 BR - 1st-3rd States with most number of cases', xaxis_title='Day',plot_bgcolor='white')\nfig.update_xaxes(showgrid=True, gridwidth=1, gridcolor='gray')\nfig.update_yaxes(title_text=\"Occurrences\",showgrid=True, gridwidth=1, gridcolor='LightGray')\n\nfig.show()","cb815895":"listStates = covidBR.sort_values(by=['cases'], ascending=False)[3:8]['NOME'] # 6 estados com maior incid\u00eancia\n\ncasosPerCapitaDia = []\nnewCasesPerCapitaDia = 0\ndata = []\ndataInt = []\n\nstart_date = mainStartDate\nend_date = mainEndDate\n\ndef func(x, a, b, c):\n    return a * np.exp(b * x)\n\nfig = go.Figure()\n\ncurrentDate = 0\nfor state in listStates:\n    popState = int(popBrasil[popBrasil['estado']==state]['popula\u00e7\u00e3o'])\n    while start_date <= end_date:\n        \n        coronaBrasilCurrent = coronaBrasil[coronaBrasil['state']==state]\n        newCasesPerCapitaDia = sum(coronaBrasilCurrent[coronaBrasilCurrent['date'] == start_date.strftime(\"%Y-%m-%d\")].cases)\n        casosPerCapitaDia.append(newCasesPerCapitaDia)#cases for 100.000 hab\n        data.append(start_date)\n        dataInt.append(currentDate)\n        currentDate = currentDate + 1\n        start_date = start_date + delta\n    #fig.add_trace(go.Bar(y=casosPerCapitaDia,x=data, name=state))\n    currentDate = 0\n    fig.add_trace(go.Scatter(y=casosPerCapitaDia,x=data, name=state))\n    popt, pcov = curve_fit(func, dataInt[(len(dataInt)-numLookaheadDays):len(dataInt)], casosPerCapitaDia[(len(casosPerCapitaDia)-numLookaheadDays):len(casosPerCapitaDia)])\n    #yy = func(np.array(dataInt), *popt)\n    #fig.add_trace(go.Scatter(y=yy,x=data, name=state+ ' (fit)',mode='lines',line = dict(width=2, dash='dash')))\n    initialDateInt = max(dataInt)\n    casosPerCapitaDia = []\n    dataInt = []\n    newCasesPerCapitaDia = 0\n    start_date = mainEndDate\n    projectedDays = []\n    projectedDaysInt = []\n    valueIndex = initialDateInt\n    while start_date <= mainProjectedDate:\n        projectedDays.append(start_date)\n        projectedDaysInt.append(valueIndex)\n        start_date = start_date + delta\n        valueIndex = valueIndex +1\n    yy = func(np.array(projectedDaysInt), *popt)\n    fig.add_trace(go.Scatter(y=yy,x=projectedDays, name=state+ ' (projected)',mode='lines',line = dict(width=2, dash='dash')))\n    start_date = mainStartDate\n    end_date = mainEndDate\n\nfig.update_layout(title='covid19 BR - 4th-8th States with most number of confirmed cases', xaxis_title='Day',plot_bgcolor='white')\nfig.update_xaxes(showgrid=True, gridwidth=1, gridcolor='gray')\nfig.update_yaxes(title_text=\"Occurrences\",showgrid=True, gridwidth=1, gridcolor='LightGray')\n\nfig.show()","a3cfc782":"covidBR.sort_values(by=['deaths'], ascending=False)[0:5].style.background_gradient(cmap='Reds')","72ea73ba":"listStates = covidBR.sort_values(by=['deaths'], ascending=False)[0:5]['NOME'] # 5 estados com maior numero de mortos\ncasosPerCapitaDia = []\nnewCasesPerCapitaDia = 0\ndata = []\ndataInt = []\n\nstart_date = mainStartDate\nend_date = mainEndDate\n\ndef func(x, a, b, c):\n    return a * np.exp(b * x)\n\nfig = go.Figure()\n\ncurrentDate = 0\nfor state in listStates:\n    popState = int(popBrasil[popBrasil['estado']==state]['popula\u00e7\u00e3o'])\n    while start_date <= end_date:\n        \n        coronaBrasilCurrent = coronaBrasil[coronaBrasil['state']==state]\n        newCasesPerCapitaDia = sum(coronaBrasilCurrent[coronaBrasilCurrent['date'] == start_date.strftime(\"%Y-%m-%d\")].deaths)\n        casosPerCapitaDia.append(newCasesPerCapitaDia)#cases for 100.000 hab\n        data.append(start_date)\n        dataInt.append(currentDate)\n        currentDate = currentDate + 1\n        start_date = start_date + delta\n    #fig.add_trace(go.Bar(y=casosPerCapitaDia,x=data, name=state))\n    \n    fig.add_trace(go.Scatter(y=casosPerCapitaDia,x=data, name=state))\n    popt, pcov = curve_fit(func, dataInt[(len(dataInt)-numLookaheadDays):len(dataInt)], casosPerCapitaDia[(len(casosPerCapitaDia)-numLookaheadDays):len(casosPerCapitaDia)])\n    #yy = func(np.array(dataInt), *popt)\n    #fig.add_trace(go.Scatter(y=yy,x=data, name=state+ ' (fit)',mode='lines',line = dict(width=2, dash='dash')))\n    initialDateInt = max(dataInt)\n    start_date = mainEndDate\n    projectedDays = []\n    projectedDaysInt = []\n    valueIndex = initialDateInt\n    # start_date = start_date + delta\n    while start_date <= mainProjectedDate:\n        projectedDays.append(start_date)\n        projectedDaysInt.append(valueIndex)\n        start_date = start_date + delta\n        valueIndex = valueIndex +1\n    yy = func(np.array(projectedDaysInt), *popt)\n    fig.add_trace(go.Scatter(y=yy,x=projectedDays, name=state+ ' (projected)',mode='lines',line = dict(width=2, dash='dash')))\n    start_date = mainStartDate\n    end_date = mainEndDate\n    currentDate = 0\n    casosPerCapitaDia = []\n    newCasesPerCapitaDia = 0\n    data = []\n    dataInt = []\n\nfig.update_layout(title='covid19 BR - 5 states with most number of deaths', xaxis_title='Day',plot_bgcolor='white')\nfig.update_xaxes(showgrid=True, gridwidth=1, gridcolor='gray')\nfig.update_yaxes(title_text=\"Occurences\",showgrid=True, gridwidth=1, gridcolor='LightGray')\n\nfig.show()","86fbb485":"br_lat = -20.000\nbr_lon = -60.000\nwith open('\/kaggle\/input\/geodatabrazil\/estados.json') as file:\n    estadosBR = json.load(file)\ncovidBR = coronaBrasil.groupby(['state'])['state', 'cases','deaths'].max()\ncovidBR['state'] = covidBR.index\ncovidBR.index = np.arange(1, len(covidBR.state.unique().tolist())+1)\ncovidBR = covidBR[['state', 'cases','deaths']]\ncovidBR.rename(columns={'state': 'NOME','cases':'cases','deaths':'deaths'}, inplace=True)\ncovidBR.sort_values(by=['cases'], ascending=False).style.background_gradient(cmap='Reds')","45a03eaa":"brazil_conf_choropleth = go.Figure(go.Choroplethmapbox(geojson=estadosBR, locations=covidBR['NOME'],\n                                                      z=covidBR['cases'], featureidkey=\"properties.NOME\", colorscale='YlGnBu',marker_opacity=0.85, marker_line_width=0.25,text=\"casos\"))\n\nbrazil_conf_choropleth.update_layout(mapbox_style=\"open-street-map\", mapbox_zoom=2, \n                                    mapbox_center = {\"lat\": br_lat, \"lon\": br_lon})\n\nbrazil_conf_choropleth.update_layout(title='Spread of Corona Virus in Brazil by Date - States - per 1000000 hab',margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\niplot(brazil_conf_choropleth)","4dbea430":"covidBR.loc[:,'pop'] = np.zeros(len(covidBR))\nfor i in range(0,len(popBrasil)):\n    # a little complicated but in this line we select lines with current State to set population according to pop dataset\n    covidBR.loc[covidBR['NOME'] == popBrasil['estado'][i],'pop']=popBrasil['popula\u00e7\u00e3o'][i]\n    \ncovidBR.loc[:,'casesPerCapita'] = covidBR['cases']\/covidBR['pop']\ncovidBR.loc[:,'casesPer100mil'] = covidBR['casesPerCapita']*100000\ncovidBR.sort_values(by=['casesPer100mil'], ascending=False).style.background_gradient(cmap='Reds')","f3730f46":"brazil_conf_choropleth = go.Figure(go.Choroplethmapbox(geojson=estadosBR, locations=covidBR['NOME'],\n                                                      z=covidBR['casesPer100mil'], featureidkey=\"properties.NOME\", colorscale='YlGnBu', marker_opacity=0.85, marker_line_width=0.25,text=\"casos\/100 mil\"))\n\nbrazil_conf_choropleth.update_layout(mapbox_style=\"open-street-map\", mapbox_zoom=2, \n                                    mapbox_center = {\"lat\": br_lat, \"lon\": br_lon})\n\nbrazil_conf_choropleth.update_layout(title='Spread of Corona Virus in Brazil by Date - States - per 1000000 hab',margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\niplot(brazil_conf_choropleth)","242b3d7b":"Lets check evolution of deaths in these states:","a24d8bd6":"However, it is important to view the relative amount of new cases, based on Cases Per 100 000 inhabitants:","7809ee3b":"In this plot I show the new confirmed cases, the cumulative number of cases and cumulative deaths for all contry data.","12b8a77e":"There is a table output of current covid-19 spread in Brazilian States, sorted by number of cases","2a469163":"Finally I put some chropleth maps to picture the distribuition of cases in Brazil:","3766025c":"Let's do previous plot for regions instead of states:","3781bd97":"By the way, it is important to show how are the amount of cases per each 100 000 inhabitants, hence I did a loop for counting cases for each state in a time series.","1fdb7fb5":"Let's show cases per 100 000 inhabitants ( see built-in colorscales [here](https:\/\/plotly.com\/python\/builtin-colorscales\/))\n> [useful link when working with map layers](https:\/\/plotly.com\/python\/mapbox-layers\/)","2df6ea28":"Import of coronaVirus comma separated values file. I wanted to plot a time series considering new data insert every day based on the day this notebook is executed.","450f08f3":"In this part, we show the number of cases for each Brazilian State.","173c40f7":"It is important to analyse growth for states with the most cases per capita. Let's take the 7 states with greatest number of cases cases per capita:"}}