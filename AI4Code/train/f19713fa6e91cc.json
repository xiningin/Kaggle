{"cell_type":{"265f2461":"code","6d497f2b":"code","c21b9121":"code","2899faef":"code","4d61573a":"code","36384f42":"code","0cc46b55":"code","3c38cea6":"code","45ad09b1":"code","f08094cd":"code","42bdf040":"code","0fc9994a":"code","2682e51d":"code","1a90442c":"code","81680a72":"code","27c5005a":"code","94b16860":"code","c076e28b":"code","8fa4e2a5":"code","7cc896b4":"code","d5259178":"markdown","fa768ac1":"markdown","b4db6026":"markdown","255d9f56":"markdown","c39b35f7":"markdown","1bc8a7ec":"markdown","1f7d1a52":"markdown"},"source":{"265f2461":"# Import Libraries\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime as dt\n\n\nfrom plotly import tools\n\nimport plotly.figure_factory as ff\nimport plotly.tools as tls\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# plt.style.available\nplt.style.use(\"seaborn-whitegrid\")\nimport matplotlib.dates as mdates","6d497f2b":"url = 'https:\/\/drive.google.com\/file\/d\/1WtoFPZshWA_5zveo1lIL-XIQ5vAvfUzq\/view?usp=sharing'\npath = 'https:\/\/drive.google.com\/uc?export=download&id='+url.split('\/')[-2]","c21b9121":"df = pd.read_csv(path,header=0)\ndf.head()","2899faef":"# Create a copy to avoid the SettingWarning .loc issue \ndf = df.copy()\n# Change to datetime datatype.\ndf.loc[:, 'datetime'] = pd.to_datetime(df.loc[:,'datetime'], format=\"%Y-%m-%dT%H:%M:%S+0530\")","4d61573a":"df.info()","36384f42":"df.set_index(\"datetime\")","0cc46b55":"df['Day']=df['datetime'].dt.day\ndf['Month']=df['datetime'].dt.month\ndf['Year']=df['datetime'].dt.year\ndf['Hour']=df['datetime'].dt.hour\ndf['Minute']=df['datetime'].dt.minute\ndf.head()","3c38cea6":"# Simple plotting of ITC Stock Price\n# First Subplot\nf, (ax1, ax2) = plt.subplots(2, 1, figsize=(18,10))\nax1.plot(df[\"datetime\"], df[\"close\"], color=\"blue\")\nax1.set_xlabel(\"Date\", fontsize=12)\nax1.set_ylabel(\"Stock Price\")\nax1.set_title(\"Scock Close Price History\")\n\n# Second Subplot\nax1.plot(df[\"datetime\"], df[\"high\"], color=\"green\")\nax1.set_xlabel(\"Date\", fontsize=12)\nax1.set_ylabel(\"Stock Price\")\nax1.set_title(\"Stock High Price History\")\n\n# Third Subplot\nax1.plot(df[\"datetime\"], df[\"low\"], color=\"red\")\nax1.set_xlabel(\"Date\", fontsize=12)\nax1.set_ylabel(\"Stock Price\")\nax1.set_title(\"Stock Price History\")\n\n# Fourth Subplot\nax2.plot(df[\"datetime\"], df[\"volume\"], color=\"orange\")\nax2.set_xlabel(\"Date\", fontsize=12)\nax2.set_ylabel(\"Volume traded\")\nax2.set_title(\"Stock's Volume History\")\nplt.show()","45ad09b1":"trace = go.Ohlc(x=df['datetime'],\n                open=df['open'],\n                high=df['high'],\n                low=df['low'],\n                close=df['close'],\n               increasing=dict(line=dict(color= '#58FA58')),\n                decreasing=dict(line=dict(color= '#FA5858')))\n\nlayout = {\n    'title': 'Stocks Historical Price',\n    'xaxis': {'title': 'Date',\n             'rangeslider': {'visible': True}},\n    'yaxis': {'title': 'Stock Price (INR)'},\n    'shapes': [{\n        'x0': '2021-02-04 09:00:00', 'x1': '2021-02-05 16:00:00',\n        'y0': 0, 'y1': 1, 'xref': 'x', 'yref': 'paper',\n        'line': {'color': 'rgb(30,30,30)', 'width': 1}\n    }],\n    'annotations': [{\n        'x': '2021-02-04 18:30:00', 'y': 0.10, 'xref': 'x', 'yref': 'paper',\n        'showarrow': False, 'xanchor': 'left',\n        'text': 'Trade occures between 09:15 IST  <br> to 15:30 IST'\n    }]\n}\n\ndata = [trace]\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='simple_ohlc')","f08094cd":"# The best by is at low of 2021-02-04 and sell at high of 2021-02-05\nDay1 = df['Day']==4\nDay2 = df['Day']==5","42bdf040":"Day1_data = df[Day1]\nDay2_data = df[Day2]\nDay1_data=Day1_data.reset_index()","0fc9994a":"Day2_data=Day2_data.reset_index()","2682e51d":"day1_high = Day1_data['high'].max()\nday1_low = Day1_data['low'].min()\nday2_high = Day2_data['high'].max()\nday2_low = Day2_data['low'].min()\nprint(\"High and Low of Day 1:\")\nprint(day1_high,\"&\",day1_low)\nprint(\"----------------------------------------\")\nprint(\"High and Low of Day 2:\")\nprint(day2_high,\"&\",day2_low)","1a90442c":"profit = day2_high-day1_low\nprint(\"Profit:\",profit)","81680a72":"# Now we shall extract the time for best buy and best sell\nbuy_index = Day1_data.idxmin()['low']\nsell_index = Day2_data.idxmax()['high']\nprint(\"The best time to buy :\") \nprint(display(Day1_data.iloc[buy_index])) \nprint(\"-------------------------------------\")\nprint(\"-------------------------------------\")\nprint(\"The best time to sell :\") \nprint(display(Day2_data.iloc[sell_index])) ","27c5005a":"# using short sell, we can sell on 4th Feb and buy on 5th Feb to gain maximum profit\n# performing similar process as before, we can find the best time for short sell\nsell_index_sh = Day1_data.idxmax()['high']\nbuy_index_sh = Day2_data.idxmin()['low']\nprint(\"The best time to sell :\") \nprint(display(Day1_data.iloc[sell_index_sh])) \nprint(\"-------------------------------------\")\nprint(\"-------------------------------------\")\nprint(\"The best time to buy :\") \nprint(display(Day2_data.iloc[buy_index_sh])) ","94b16860":"profit_sh = day1_high-day2_low\nprint(\"Profit on Short Sale:\",profit_sh)","c076e28b":"# Moving Averages (5min, 15min and 60min)\ndf['5_min_avg'] = df.close.rolling(window=5).mean()\ndf['15_min_avg'] = df.close.rolling(window=15).mean()\ndf['60_min_avg'] = df.close.rolling(window=60).mean()\nclose_p = df['close'].values.tolist()\n\n\n# Variables to insert into plotly\nfive_m = df['5_min_avg'].values.tolist()\nten_m = df['15_min_avg'].values.tolist()\nsixty_m = df['60_min_avg'].values.tolist()\ndate = df['datetime'].values.tolist()\n\n# Set date as index\ndf = df.set_index('datetime')","8fa4e2a5":"fig = tls.make_subplots(rows=2, cols=1, shared_xaxes=True)\n\ncolors = ['#ff4500', '#92a1cf', '#6E6E6E']\navgs = ['5_min_avg', '15_min_avg', '60_min_avg']\n# for i,c in zip(range(n),color):\n#    ax1.plot(x, y,c=c)\n\nfor col, c in zip(avgs, colors):\n    fig.append_trace({'x': df.index, 'y': df[col], 'type': 'scatter', 'name': col, 'line': {'color': c}}, 1, 1)\nfor col in ['close']:\n    fig.append_trace({'x': df.index, 'y': df[col], 'type': 'scatter', 'name': 'Closing Price', 'line':{'color': '#01DF3A'}}, 2, 1)\n    \nfig['layout'].update(height=800,title='Relationship between MAs <br> and Closing Price',\n                    paper_bgcolor='#F2DFCE', plot_bgcolor='#F2DFCE')\n    \niplot(fig, filename='pandas\/mixed-type subplots')","7cc896b4":"# Take off the date index\ndf = df.reset_index()\n\n# Plotly\ntrace0 = go.Scatter(\n    x = df['datetime'],\n    y = five_m,\n    name = '5-min-MA',\n    line = dict(\n        color = ('#ff6347'),\n        width = 4)\n)\ntrace1 = go.Scatter(\n    x = df['datetime'],\n    y = ten_m,\n    name = '15-min-MA',\n    line = dict(\n        color = ('#92a1cf'),\n        width = 4,\n    dash=\"dot\")\n)\ntrace2 = go.Scatter(\n    x = df['datetime'],\n    y = sixty_m,\n    name = '60-min-MA',\n    line = dict(\n        color = ('#2EF688'),\n        width = 4,\n        dash = 'dash') # dash options include 'dash', 'dot', and 'dashdot'\n)\n\ndata = [trace0, trace1, trace2]\n\n\n# Edit the layout\nlayout = dict(title = 'Moving Averages for Stock',\n              xaxis = dict(title = 'Date'),\n              yaxis = dict(title = 'Price'),\n              paper_bgcolor='#FFF9F5',\n              plot_bgcolor='#FFF9F5'\n              )\n\nfig = dict(data=data, layout=layout)\niplot(fig, filename='styled-line')","d5259178":"### Technical analysis","fa768ac1":"* We can earn more than Rs.5 per share for short sale than normal trading at highs and lows","b4db6026":"* Some more of data is reqired to dig in depp\n* But it is usually advided to buy when the moderate moving average (in this case the 15-min-MA)crosses longer moving average (the 60-min-MA) and strat to 'rise'.\n* And to sell when when the moderate moving average (in this case the 15-min-MA)crosses longer moving average (the 60-min-MA) and strat to 'fall'.","255d9f56":"##### Max profit calculation\n* As this is just 2 days data and we can can buy or sell only once in a day\n* The maximum profit can be made by puchasing at days high and selling at the days low.","c39b35f7":"* The best time to buy is at 15:11:00 on 4th Feb 2021 at Rs. 1273.05\n* The best time to sell is at 09:17:00 on 5th Feb 2021 at Rs. 1306.25\n* The profit would be Rs. 33.2 per share","1bc8a7ec":"### Buying and selling at high and low is a fairy tale.\n* We come to know what is high and low after the day has passed\n* In real time, one can only predict a good time for buying and selling\n* There has to be market awarness, news, company information and many parameters to be considered.\n* Many finalncial analyst look at the moving average to guide for buying and selling\n* More of the data is required to analyse for this case, yet we can try modeeling using moving averages","1f7d1a52":"##### Short Sell\n* Some of the brokers allow as to short sell if we have enough margin\n* This means we can sell a share without buying and buy it on same day or the next day\n* This come with a small penalty if we have less margin which is imposed by SEBI but is legal."}}