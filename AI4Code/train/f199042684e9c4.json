{"cell_type":{"f2a6f5b4":"code","2c3c12c0":"code","1b9255eb":"code","dbdc3daf":"code","3e020fc6":"code","9dbef431":"code","0fe6ea16":"code","0b7a3f6c":"code","f80ee16e":"code","73e489ff":"code","e3b5eaec":"code","0de426fc":"code","6a0a7631":"code","61f2692b":"code","024f536c":"code","2f523574":"code","d9e882f8":"code","0a07cacf":"code","7b7ebcec":"code","f641df4b":"code","a8d5db57":"code","b2255ca5":"code","ebec8825":"code","62b0f98d":"code","a6e4a732":"code","e710c7ef":"code","2aa72fd8":"code","f872c4f4":"code","8cb3238c":"code","3a01c302":"code","aa54b5c6":"code","8b6ffaaf":"code","b9eb192c":"code","13fb07b4":"code","56001f62":"code","09b7794a":"code","5b8f7541":"markdown"},"source":{"f2a6f5b4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2c3c12c0":"train = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')\ndata_set = [train, test]","1b9255eb":"train.head()","dbdc3daf":"train.isnull()","3e020fc6":"sns.heatmap(train.isnull(), yticklabels = False, cbar = False, cmap = 'viridis')","9dbef431":"sns.set_style('whitegrid')","0fe6ea16":"sns.countplot(x='Survived', data=train, hue='Sex', palette = 'RdBu_r')","0b7a3f6c":"sns.countplot(x='Survived', data=train, hue='Pclass', palette = 'magma')","f80ee16e":"sns.distplot(train['Age'].dropna(),kde=False, bins=30)","73e489ff":"train['Age'].plot.hist(bins=35, ec='white')","e3b5eaec":"train.info()","0de426fc":"sns.countplot(train['SibSp'], data=train)","6a0a7631":"train['Fare'].hist(bins=40, figsize = (10, 4))","61f2692b":"plt.figure(figsize=(15, 10))\nsns.boxplot(x='Pclass', y = 'Age', data =train)","024f536c":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age\n\n    \nfor df in data_set:    \n    df['Age'] = df[['Age','Pclass']].apply(impute_age, axis=1)\n    ","2f523574":"plt.title('train')\nsns.heatmap(train.isnull(), yticklabels = False, cbar = False, cmap = 'viridis')\n","d9e882f8":"for df in data_set:   \n    df.drop('Cabin', axis=1, inplace=True)","0a07cacf":"columns = ['Fare', 'Embarked']       \nfor df in data_set:\n    for col in columns:\n        df[col].fillna(value=df[col].value_counts().index[0], inplace=True)","7b7ebcec":"\ntest.isnull().sum()","f641df4b":"train.isnull().sum()","a8d5db57":"# for df in data_set:   \n#     df.dropna(inplace=True)","b2255ca5":"train.isnull().sum()","ebec8825":"categorical_cols = ['Sex','Embarked','Pclass']\nnew_columns = []\nfor index, df in enumerate(data_set):\n    new_columns.clear()\n    for col in categorical_cols:\n        new_columns.append(pd.get_dummies(df[col], drop_first=True))\n    new_columns.append(df)\n    df = pd.concat(new_columns, axis =1)\n    df.drop(categorical_cols, axis=1, inplace=True, errors=False)\n    data_set[index] =df\n","62b0f98d":"train, test = data_set","a6e4a732":"# sex = pd.get_dummies(train['Sex'], drop_first=True)","e710c7ef":"# embark = pd.get_dummies(train['Embarked'], drop_first=True)","2aa72fd8":"# pclass = pd.get_dummies(train['Pclass'], drop_first=True)","f872c4f4":"# train = pd.concat([train, sex, embark, pclass], axis =1)\ntrain.head()","8cb3238c":"test_passengerIds = test['PassengerId'].copy()\nfor df in data_set:\n    df.drop(['Name','Ticket','PassengerId'], axis=1, inplace=True, errors=False)\n\n\n# train.drop(['Sex','PassengerId', 'Embarked','Name','Ticket', 'Pclass'], axis=1, inplace=True, errors=False)","3a01c302":"train.tail()","aa54b5c6":"X = train.drop('Survived', axis=1)\ny = train['Survived']","8b6ffaaf":"from sklearn.linear_model import LogisticRegression","b9eb192c":"logmodel = LogisticRegression()\nlogmodel.fit(X, y)","13fb07b4":"y_pred = logmodel.predict(test)","56001f62":"pd.DataFrame({'PassengerId': test_passengerIds, 'Survived': y_pred}).to_csv('submission.csv', index=False)","09b7794a":"submission = pd.read_csv('submission.csv')\nsubmission.head()\n","5b8f7541":"Clearning Data"}}