{"cell_type":{"f2ca674d":"code","12758896":"code","b6c2f016":"code","d36e52e2":"code","da8039f3":"code","1928a38c":"code","3633034c":"code","33bd3a13":"code","3b54bdba":"code","cd7f5583":"code","f346ed8b":"code","b082513f":"code","efbafa87":"code","e6a38661":"code","b2e6b389":"code","7e088a5c":"code","e6ecac42":"code","1ff359ae":"code","726feefc":"code","08be02ed":"code","6c6a05bd":"code","85e16b4f":"code","584463f2":"code","24126f29":"code","1e95b83e":"code","51190569":"code","c71088c4":"code","aa12fab2":"code","fcdc9b85":"code","9565b2dc":"code","3194ff9d":"code","3f919dc9":"code","22174739":"code","e2832d82":"code","a90be6fa":"code","6b7b89ed":"code","3b4eabf1":"code","80af04c3":"code","9abada1c":"code","2fc93d89":"code","e4e3a442":"code","be90f332":"code","a2dc17e0":"code","dc9d9fbc":"code","4d7d4d16":"code","1c167ee5":"code","3f992731":"markdown"},"source":{"f2ca674d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","12758896":"from PIL import Image\nimport numpy as np\nimport os\nimport cv2\nimport matplotlib.pyplot as plt\nimport keras\nfrom keras.utils import np_utils\nimport warnings\nfrom sklearn.externals import joblib\nwarnings.filterwarnings(\"ignore\")\n#warnings.FutureWarning(\"ignore\")\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D, MaxPooling2D, Dense, Flatten, Dropout\n","b6c2f016":"os.listdir(os.getcwd())","d36e52e2":"os.getcwd()","da8039f3":"data = []\nlabels= []\ndata_1=os.listdir(\"..\/input\/cell_images\/cell_images\/Parasitized\/\")","1928a38c":"for i in data_1:\n    try:\n        image = cv2.imread(\"..\/input\/cell_images\/cell_images\/Parasitized\/\"+i)\n        image_from_array= Image.fromarray(image , \"RGB\")\n        size_image =image_from_array.resize((50,50))\n        #resize45=size_image.rotate(15)\n        #resize75 = size_image.rotate(25)\n        #blur =cv2.blur(np.array(size_image),(10,10))\n        data.append(np.array(size_image))\n        labels.append(0)\n        #labels.append(0)\n        #labels.append(0)\n        #labels.append(0)\n        \n    except AttributeError:\n        print(\"\")\nUninfected = os.listdir(\"..\/input\/cell_images\/cell_images\/Uninfected\/\")\nfor b in Uninfected:\n    try :\n        image = cv2.imread(\"..\/input\/cell_images\/cell_images\/Uninfected\/\"+b)\n        array_image=Image.fromarray(image,\"RGB\")\n        size_image=array_image.resize((50,50))\n        resize45= size_image.rotate(15)\n        resize75 = size_image.rotate(25)\n        #blur =cv2.blur(np.array(size_image),(10,10))\n        data.append(np.array(size_image))\n        #data.append(np.array(resize45))\n        #data.append(np.array(resize75))\n        #data.append(np.array(blur))\n        #labels.append(1)\n        #labels.append(1)\n        #labels.append(1)\n        labels.append(1)\n    except AttributeError:\n        print(\"\")","3633034c":"Cells =np.array(data)\nlabels =np.array(labels)","33bd3a13":"print(labels.shape)\nprint(Cells.shape)","3b54bdba":"#np.save(\"Cells_data\",Cells)\n#np.save(\"labels_data\",Cells)","cd7f5583":"#Cells =np.load(\"Cells_data.npy\")\n#labela =np.load(\"labels_data.npy\")","f346ed8b":"s=np.arange(Cells.shape[0])","b082513f":"np.random.shuffle(s)","efbafa87":"len_data = len(Cells)","e6a38661":"Cells=Cells[s]\nlabels =labels[s]","b2e6b389":"labels =keras.utils.to_categorical(labels)","7e088a5c":"model =Sequential()","e6ecac42":"model.add(Conv2D(filters=16,kernel_size=2,padding=\"same\",activation=\"relu\",input_shape=(50,50,3)))\nmodel.add(MaxPooling2D(pool_size=2))\nmodel.add(Conv2D(filters=32,kernel_size=2,padding=\"same\",activation =\"relu\"))\nmodel.add(MaxPooling2D(pool_size=2))\nmodel.add(Conv2D(filters=64,kernel_size=2,padding=\"same\",activation=\"relu\"))\nmodel.add(MaxPooling2D(pool_size=2))\nmodel.add(Flatten())\nmodel.add(Dense(500,activation=\"relu\"))\nmodel.add(Dense(2,activation=\"softmax\"))\nmodel.summary()","1ff359ae":"model.compile(loss=\"categorical_crossentropy\",optimizer=\"adam\",metrics=[\"accuracy\"])","726feefc":"Cells=Cells\/255","08be02ed":"model.fit(Cells,labels,batch_size=50,epochs=10,verbose=1)","6c6a05bd":"model.save(\"my_model.h5\")","85e16b4f":"!pip install tensorflow==2.0.0-alpha0\n\nimport tensorflow as tf","584463f2":"tf.__version__","24126f29":"tf.lite.TFLiteConverter.","1e95b83e":"import tensorflow as tf","51190569":"converter = tf.lite.TFLiteConverter.from_keras_model(model)\ntflite_model = converter.convert()","c71088c4":"converter = tf.lite.TFLiteConverter.from_saved_model(\"..\/input\/my_model.h5\")\ntflite_model = converter.convert()","aa12fab2":"tf.__version__","fcdc9b85":"joblib.dump(model,\"model\")","9565b2dc":"joblib.load(\"model\")\njoblib.dump(model,\"model\")\n","3194ff9d":"model.save(\"model111.h5\")","3f919dc9":"from keras.models import load_model\nmodel11=load_model(\"model111.h5\")","22174739":"model11.predict(Cells[73].reshape(1,50,50,3))","e2832d82":"blur=cv2.blur(Cells[1000].rotate(45),(5,5))","a90be6fa":"plt.imshow(blur)","6b7b89ed":"plt.plot(histroy.history[\"loss\"])#.keys()","3b4eabf1":"from sklearn.externals import joblib","80af04c3":"joblib.dump(model,\"Malaria Cell model\")","9abada1c":"from keras.applications.xception import Xception","2fc93d89":"model1=Xception()","e4e3a442":"modl= keras.applications.vgg16.VGG16()","be90f332":"modl.summary()","a2dc17e0":"from keras.applications import VGG16 \nvgg_conv = VGG16(weights='imagenet',\n                  include_top=False,\n                  input_shape=(224, 224, 3))","dc9d9fbc":"from keras.preprocessing.image import ImageDataGenerator","4d7d4d16":"train_img=ImageDataGenerator(rescale=1.\/255,shear_range=0.1,zoom_range=0.2,horizontal_flip=True)","1c167ee5":"train_images=train_img.flow_from_directory(\"..\/input\/cell_images\/cell_images\/Parasitized\/\",target_size=(64,64,3),batch_size=32)","3f992731":"> > **Importing the suitable libraries : **"}}