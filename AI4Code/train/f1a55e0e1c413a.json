{"cell_type":{"306ebe50":"code","d494031f":"code","abf2bbc4":"code","be517ec6":"code","20bf168a":"code","3dd8d026":"code","b9fb6317":"code","8d2133d0":"code","485f4b58":"code","18c868f2":"code","48183999":"code","7b0af88a":"code","ac4fdb09":"code","1bd2a35d":"code","cca64b40":"code","d607f78e":"code","a3e4caf9":"code","3a71d5f9":"code","f992a3d9":"code","ab5880ae":"code","831c1500":"code","5ee9b58c":"code","e2a55fde":"code","5e4858e1":"code","8e684b52":"code","c282fcc1":"code","d4baa7c5":"code","3a0b35aa":"code","3bf1d054":"code","cf5317de":"code","d33c248d":"code","2abe2a05":"code","44c2c7ef":"code","78e8969a":"code","86701566":"code","16c50015":"code","490607d4":"code","03956174":"code","54b76f94":"code","a4b82525":"code","3e1f47fe":"markdown","d258bf35":"markdown","801696f2":"markdown","059a6182":"markdown","f5d2264f":"markdown","e04d3e2b":"markdown","771dcd15":"markdown","6ff49130":"markdown","cc9fb079":"markdown","f0ac382a":"markdown","bcf4f683":"markdown"},"source":{"306ebe50":"import cv2\nimport numpy as np\nfrom tensorflow import keras\nfrom PIL.Image import fromarray\nimport matplotlib.pyplot as plt","d494031f":"import os\nfrom keras.preprocessing.image import img_to_array","abf2bbc4":"paths = ['..\/input\/sarscov2-ctscan-dataset\/non-COVID\/',\n         '..\/input\/sarscov2-ctscan-dataset\/COVID\/']","be517ec6":"X = []\ny = []\n\nfor label, path in  enumerate(paths):\n    for img_path in os.listdir(path):\n        X.append(img_to_array(fromarray(cv2.resize(cv2.imread(os.path.join(path, img_path), cv2.IMREAD_GRAYSCALE), (256,256)))))\n        y.append(label)\n\nX = np.array(X)\ny = np.array(y)","20bf168a":"X \/= 255.0","3dd8d026":"print(X.shape)\nprint(y.shape)","b9fb6317":"print(X.min())\nprint(X.max())","8d2133d0":"print(y.min())\nprint(y.max())","485f4b58":"import seaborn\nimport pandas","18c868f2":"seaborn.histplot(pandas.DataFrame({'id' : y}), x = 'id',bins = 3)\nplt.title('Frequency of covid\/non-covid patients', fontsize = 15)","48183999":"info = {\n    0 : 'Non Covid Scan',\n    1 : 'Covid Scan'\n}","7b0af88a":"plt.figure(figsize = (20,20))\n\ni = 0\n\nwhile i < 16 :\n    \n    x = np.random.randint(0, 2481)\n    plt.subplot(4, 4, i + 1)\n    plt.imshow(X[x], 'gray')\n    plt.title(info[y[x]])\n    plt.axis('off')\n    \n    i += 1\nplt.show()","ac4fdb09":"from sklearn.model_selection import train_test_split","1bd2a35d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .1, random_state = 1)","cca64b40":"print(X_train.shape)\nprint(y_train.shape)","d607f78e":"print(X_test.shape)\nprint(y_test.shape)","a3e4caf9":"from keras.preprocessing.image import ImageDataGenerator","3a71d5f9":"train_gen = ImageDataGenerator(rotation_range = 5, zoom_range = [0.9, 1.2], horizontal_flip = True, height_shift_range = [-5,5], width_shift_range = [-5,5])","f992a3d9":"train_gen.fit(X_train)","ab5880ae":"pointer = train_gen.flow(X_train, y_train)","831c1500":"a, b = pointer.next()","5ee9b58c":"plt.figure(figsize = (20,20))\n\ni = 0\n\nwhile i < 16 :\n    \n    plt.subplot(4, 4, i + 1)\n    plt.imshow(a[i], 'gray')\n    plt.title(info[b[i]])\n    plt.axis('off')\n    \n    i += 1\nplt.show()","e2a55fde":"from keras.layers import MaxPooling2D\nfrom keras.models import Sequential\nfrom keras.layers import Flatten\nfrom keras.layers import Conv2D\nfrom keras.layers import Dense\nfrom keras.layers import Input\nfrom keras.layers import Dropout\nfrom keras.optimizers import Adam\nfrom keras.layers import LeakyReLU\nfrom keras.layers import BatchNormalization","5e4858e1":"def conv_layer (filterx) :\n    \n    model = Sequential()\n    \n    model.add(Conv2D(filterx, (3,3), padding = 'same', kernel_regularizer = 'l2'))\n    model.add(BatchNormalization())\n    model.add(Dropout(.2))\n    model.add(LeakyReLU())\n    model.add(MaxPooling2D((2, 2)))\n    \n    return model\n\ndef dens_layer (hiddenx) :\n    \n    model = Sequential()\n    \n    model.add(Dense(hiddenx, kernel_regularizer = 'l2'))\n    model.add(BatchNormalization())\n    model.add(Dropout(.2))\n    model.add(LeakyReLU())\n    \n    return model","8e684b52":"def cnn (filter1, filter2, hidden1, hidden2) :\n    \n    model = Sequential([\n        \n        Input((256,256,1,)),\n        conv_layer(filter1),\n        conv_layer(filter2),\n        Flatten(),\n        dens_layer(hidden1),\n        dens_layer(hidden2),\n        \n        Dense(1, activation = 'sigmoid')\n    ])\n    \n    model.compile(loss = 'binary_crossentropy', optimizer = Adam(learning_rate = 0.0005), metrics = ['accuracy'])\n    return model","c282fcc1":"model = cnn(2**3,\n            2**3,\n            2**6,\n            2**5)","d4baa7c5":"print(model.summary())","3a0b35aa":"keras.utils.plot_model(model, '.\/covid_model.png', show_shapes = True)","3bf1d054":"from keras.callbacks import ModelCheckpoint","cf5317de":"checkp = ModelCheckpoint('.\/covid-model.h5', save_best_only = True, monitor = 'val_loss', verbose = 1)","d33c248d":"history = model.fit(train_gen.flow(X_train, y_train, batch_size = 64), epochs = 100, validation_data = (X_test, y_test), callbacks = [checkp])","2abe2a05":"from sklearn.metrics import confusion_matrix, classification_report","44c2c7ef":"model = keras.models.load_model('.\/covid-model.h5')","78e8969a":"y_pred = model.predict(X_test, verbose = 1)","86701566":"y_pred = np.around(y_pred)","16c50015":"print(f'Number of 0 labels in test dataset : {y_test[y_test == 0].shape[0]}')\nprint(f'Number of 1 labels in test dataset : {y_test[y_test == 1].shape[0]}')","490607d4":"print(f'Number of 0 labels in pred dataset : {y_pred[y_pred == 0].shape[0]}')\nprint(f'Number of 1 labels in pred dataset : {y_pred[y_pred == 1].shape[0]}')","03956174":"print(classification_report(y_test, y_pred))","54b76f94":"cm = confusion_matrix(y_test, y_pred)\ndisease_types = ['Covid','non-Covid']","a4b82525":"plt.figure(figsize = (12,12))\nax = seaborn.heatmap(cm, cmap=plt.cm.Greens, annot=True, square=True, xticklabels = disease_types, yticklabels=disease_types)\nax.set_ylabel('Actual', fontsize=40)\nax.set_xlabel('Predicted', fontsize=40)","3e1f47fe":"# Overview and Image visualizations","d258bf35":"# Confusion Matrix","801696f2":"# Custom model","059a6182":"# Aim\n<div style = \"text-align: justify\">Predict whether a person is suffering from Covid-19 using lung CT scans, using <b>Built from scratch<\/b> CNN models, and evaluate model perfromance.<\/div>\n\n# Dataset - [Link](https:\/\/www.kaggle.com\/plameneduardo\/sarscov2-ctscan-dataset)\n<div style = \"text-align: justify\">The dataset is comprised of two subfolders - <b>COVID and non-COVID<\/b>, and each subfolder in turn has lung CT scans (1252 and 1230 respectively).<\/div>\n\n# Research by\n<div style = \"text-align: justify\">Soares, Eduardo, Angelov, Plamen, Biaso, Sarah, Higa Froes, Michele, and Kanda Abe, Daniel. <b>\"SARS-CoV-2 CT-scan dataset: A large dataset of real patients CT scans for SARS-CoV-2 identification.\"<\/b> medRxiv (2020). doi: <a href = \"https:\/\/doi.org\/10.1101\/2020.04.24.20078584\">link<\/a><\/div>","f5d2264f":"# Model Training","e04d3e2b":"# Data Augmentation using ImageDataGenerator\n<div style = \"text-align: justify\">About <b>+\/-5 degrees of rotation and zoom<\/b> can be added. Apart from that <b>images can be flipped horizontally (I'm guessing that makes sense).<\/b> Also the images can be <b>shifted by some pixels vertically and horizontally<\/b>. The default batch size of 32 is maintained.<\/div>","771dcd15":"# Train-test split","6ff49130":"# SARS-COV-2\n### Definition\n<div style = \"text-align: justify\">Unless you have been living under a rock for past 2 years, I am pretty sure you know about Covid-19. Even if you do not have a lot of information on the virus itself, you would still know about its symptoms and preventions. But what exactly is Covid-19 ? Covid-19 disease is an infectious disease caused by a newly discovered coronavirus. The virus that causes COVID-19 is mainly transmitted through droplets generated when an infected person <b>coughs, sneezes, or exhales<\/b>.<\/div>\n\n### CT Scans\n<div style = \"text-align: justify\">CT scans are used for patients with serious symptoms of Covid-19, to evaluate the severity of infection. CT scans gives an estimate about the blockage in the lungs and doctors can treat the patient accordingly.<\/div>\n\n### Prevention (As if you don't already know!!)\n<div style = \"text-align: justify\">If not yet vaccinated, the best prevention against the disease is wearing masks and maintaining a safe distance of 6 feet. And try to avoid social gatherings as these things tend to serve a hotspots for the virus.<\/div>","cc9fb079":"# Import images","f0ac382a":"# Model prediction","bcf4f683":"### *Lets Generate a few examples to evaluate the augmented images.*"}}