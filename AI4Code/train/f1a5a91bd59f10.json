{"cell_type":{"8b118a13":"code","52273885":"code","6a58a270":"code","f48236a3":"code","2c026e35":"code","f94dd7ae":"code","a1e1c79e":"code","775ca487":"code","a9d40375":"code","59bb898a":"markdown"},"source":{"8b118a13":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","52273885":"#loading data\ndf = pd.read_csv(\"\/kaggle\/input\/fifa19\/data.csv\")\ndf.head()\ndf.tail(5)","6a58a270":"# as understood player photo is unnecessary for evaluating the data\ndf.drop([\"Photo\"],axis=1)","f48236a3":"# information about data\ndf.info()\ndf.columns\n","2c026e35":"df.describe().T","f94dd7ae":"# relation between variables\ndf.corr()\n\n#correlation map\nf,ax = plt.subplots(figsize=(18,18))\nsns.heatmap(df.corr(),annot=True,linewidths=.10,fmt='.1f',ax=ax)","a1e1c79e":"#Graphs\n\n# the graph relation between speed and dribbling\ndf.Overall.plot(kind=\"line\",color=\"blue\",label=\"overral\",linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndf.Dribbling.plot(color=\"red\",label=\"dribbling\",linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()\n# as you can see overall is directly proportional to dribbling\n\n\n#scatter graph\n# Scatter Plot \n# x =acceleration, y =sprint speed\ndf.plot(kind='scatter', x='Acceleration', y='SprintSpeed',alpha = 0.5,color = 'red')\nplt.xlabel('Acceleration')              # label = name of label\nplt.ylabel('SprintSpeed')\nplt.title('Acceleration SprintSpeed Scatter Plot')\n\n","775ca487":"#histogram\ndf.Age.plot(kind=\"hist\",bins=45)\nplt.show()\n","a9d40375":"### Filtering ###\na = df[\"Dribbling\"]>90 #there are 12 player who has higher than 90 overall\ndf[a]\n\n#the other way to filter player\ndf[np.logical_and(df[\"Dribbling\"]>90 , df[\"SprintSpeed\"]>90)] #there is only one player who provide such a condition\n\n# by the way there is one more way to filter\ndf[(df['Dribbling']>90) & (df['SprintSpeed']>90)]","59bb898a":"there are a lot of players in 20-27"}}