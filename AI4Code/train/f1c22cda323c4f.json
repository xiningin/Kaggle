{"cell_type":{"76f4edaa":"code","f6c86537":"code","e1b30a75":"code","f9d9e962":"code","cddd8816":"code","6531bd72":"code","80545e93":"code","2d613564":"code","f12b611c":"code","06fb8fff":"code","26b33c84":"code","04e31498":"code","00625627":"code","822d0704":"code","bf7be1b1":"code","7254900c":"code","4caba440":"code","5a353d9d":"code","dfd022ff":"code","a2a18b3c":"code","10e967c8":"code","aca4fe09":"code","b51471df":"code","e73f233a":"code","eff5036d":"code","ce72219b":"code","31502075":"code","743d0990":"code","71598948":"code","091861fe":"code","e980f076":"code","89075bfd":"code","576d2f35":"code","3869a780":"code","970baac0":"code","f734ee09":"code","09929f64":"code","2a5b5c6f":"code","0459e9a0":"code","17031616":"code","9d62f8c6":"code","073f6d74":"code","f5388766":"code","abfbaec6":"code","6cc8c88b":"code","47eeb93c":"code","7a7a02a7":"code","b1c530bf":"code","d557da80":"code","339fada0":"code","70b16b26":"code","4775d4b5":"code","9a22b4d2":"code","ef44c676":"code","3cca8203":"code","7aafbc15":"code","aafa765b":"markdown","baf542ea":"markdown","abcc16ef":"markdown","7ae7dad1":"markdown","528e633d":"markdown","6b5aacce":"markdown","c53a34f6":"markdown","88983896":"markdown","85c8c931":"markdown","4651e31b":"markdown","2e0dcd51":"markdown","91c3528c":"markdown","ba0d99d3":"markdown","fcfc9fa7":"markdown","74c6dddb":"markdown","ff03daeb":"markdown","6552478d":"markdown","e31c1b96":"markdown","8f5c679e":"markdown","42b1618d":"markdown","20f4a05b":"markdown","7b1c5245":"markdown","6466ff2f":"markdown","49bad38f":"markdown","3f924932":"markdown","27ef268f":"markdown","4699adb1":"markdown","22b8daea":"markdown","bf099037":"markdown","299e1a84":"markdown","b92afe48":"markdown","92de17e5":"markdown","d09e5a3d":"markdown","8c0e66fc":"markdown","8cc8e164":"markdown","75eb8d13":"markdown","a7f316e2":"markdown","b399125b":"markdown","19f036fe":"markdown","1c592124":"markdown","eec9e81e":"markdown","c23cda4e":"markdown","e068cefd":"markdown","dd6e57fe":"markdown","f4fdac80":"markdown"},"source":{"76f4edaa":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.compose import make_column_transformer\nfrom sklearn.cluster import KMeans\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","f6c86537":"%config InteractiveShell.ast_node_interactivity = 'all'","e1b30a75":"data = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndata.head()","f9d9e962":"data.describe()","cddd8816":"data.describe(include = 'object')","6531bd72":"data.shape","80545e93":"data.duplicated().sum()","2d613564":"data.isnull().sum()","f12b611c":"data['sum'] = data['math score'] + data['reading score'] + data['writing score'] # making new feature which takes overall score","06fb8fff":"data['parental level of education'].unique()","26b33c84":"data['race\/ethnicity'].unique()","04e31498":"lst = ['math score','reading score','writing score','sum']\nfeatures_cat = ['gender','race\/ethnicity','parental level of education','test preparation course','lunch']\nfeatures_num = ['math score','reading score','writing score','sum']\ndata_copy = data.drop( features_cat,axis = 'columns')","00625627":"preprocessor = make_column_transformer(\n    (StandardScaler(), features_num ))\nX = preprocessor.fit_transform(data_copy)\nwcss=[]\nfor i in range(1,30):\n    kmeans = KMeans(i)\n    kmeans.fit(X)\n    wcss_iter = kmeans.inertia_\n    wcss.append(wcss_iter)\n\nnumber_clusters = range(1,30)\nplt.figure(figsize = (10,10))\nplt.plot(number_clusters,wcss,marker = 'o')\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')","822d0704":"kmeans = KMeans(7)\nkmeans.fit(X)\nidentified_clusters = kmeans.fit_predict(X)\ndata_with_clusters = data.copy()\ndata_with_clusters['Clusters'] = identified_clusters ","bf7be1b1":"# %config InteractiveShell.ast_node_interactivity = 'last'\nfor i in lst:\n    df = pd.concat([data_with_clusters.loc[data_with_clusters['Clusters'] == 0][i].describe(),\n    data_with_clusters.loc[data_with_clusters['Clusters'] == 1][i].describe(),\n    data_with_clusters.loc[data_with_clusters['Clusters'] == 2][i].describe(),\n    data_with_clusters.loc[data_with_clusters['Clusters'] == 3][i].describe(),\n    data_with_clusters.loc[data_with_clusters['Clusters'] == 4][i].describe(),\n    data_with_clusters.loc[data_with_clusters['Clusters'] == 5][i].describe(),\n    data_with_clusters.loc[data_with_clusters['Clusters'] == 6][i].describe()],axis = 'columns')\n    df.columns = [0,1,2,3,4,5,6] \n    df.style.set_caption(i.title())\n \n    ","7254900c":"data['parental level of education v2'] = data['parental level of education'].replace(['some high school','high school','associate\\'s degree','some college',\"bachelor's degree\",\"master's degree\"],['low','low','medium','low','high','high'])\ndata_with_clusters['parental level of education v2'] = data_with_clusters['parental level of education'].replace(['some high school','high school','associate\\'s degree','some college',\"bachelor's degree\",\"master's degree\"],['low','low','medium','low','high','high'])\ndata['race\/ethnicity v2'] = data['race\/ethnicity'].replace(['group A','group B','group C','group D','group E'],['A','B','C','D','E'])\ndata_with_clusters['race\/ethnicity v2'] = data_with_clusters['race\/ethnicity'].replace(['group A','group B','group C','group D','group E'],['A','B','C','D','E'])","4caba440":"ranksdf = df.sort_values(by = 'mean',axis = 1,ascending = False)\nranks = ranksdf.columns\nranks\ndata_with_clusters['Ranks'] = data_with_clusters['Clusters'].replace(ranks,[1,2,3,4,5,6,7]) #getting ranks based on scores","5a353d9d":"plt.figure(figsize = (5,6))\nax = plt.subplot(111)\nsns.countplot(data['gender'],order = ['male','female'],palette = ['blue','pink'])\nax.bar_label(ax.containers[0])\nax.set_ylabel('Count', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\nax.set_xlabel('Gender', size = 'large',backgroundcolor = 'yellow',labelpad = 20)","dfd022ff":"data.groupby(['gender'])['math score'].describe()","a2a18b3c":"data.groupby(['gender'])['reading score'].describe()","10e967c8":"data.groupby(['gender'])['writing score'].describe()","aca4fe09":"data.groupby(['gender'])['sum'].describe()","b51471df":"for i in lst:\n    desc = data.groupby(['gender'])[i].describe()\n    desc.reset_index(level = 0,inplace = True)\n    plt.figure(figsize = (5,6))\n    ax = plt.subplot(111)\n    ax.title.set_text(i.title())\n    sns.barplot(x = 'gender',y = 'mean' , data = desc, order = ['male','female'],palette = ['blue','pink'])\n    ax.bar_label(ax.containers[0])\n    ax.set_ylabel(f'Avg. {i.title()}', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\n    ax.set_xlabel('Gender', size = 'large',backgroundcolor = 'yellow',labelpad = 20)\n","e73f233a":"for i in lst:\n    plt.figure(figsize = (10,10))\n    ax = plt.subplot(111)\n    ax.title.set_text(i.title())\n    sns.boxplot(x = data['gender'], y = data[i], palette = ['blue','pink'],order = ['male','female'])\n    tick_spacing = 5\n    ax.yaxis.set_major_locator(ticker.MultipleLocator(tick_spacing))\n    ax.set_xlabel('Gender', size = 'large',backgroundcolor = 'yellow',labelpad = 20)\n    ax.set_ylabel(i.title(), size = 'large',backgroundcolor = 'yellow',labelpad = 20)\n    \ndata_female = data.loc[data['gender']== 'female']\ndata_male = data.loc[data['gender'] == 'male']\nfor i in lst:\n    plt.figure(figsize = (20,5))\n    ax1 = plt.subplot(111)\n    sns.kdeplot(data_male[i], color = 'blue',multiple = 'stack')\n    sns.kdeplot(data_female[i], color = 'pink', multiple = 'stack')\n    tick_spacing = 5\n    ax1.xaxis.set_major_locator(ticker.MultipleLocator(tick_spacing))\n    ax1.set_ylabel('Density', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\n    ax1.set_xlabel(i.title(), size = 'large',backgroundcolor = 'yellow',labelpad = 20)","eff5036d":"desc = data_with_clusters.groupby(['Ranks','gender'])['sum'].describe()\ndesc.reset_index(level = [0,1],inplace = True)\ncount_female = desc.loc[desc['gender']=='female']['count'].sum()\ncount_male = desc.loc[desc['gender']=='male']['count'].sum()\nindex_female = desc.loc[desc['gender']=='female'].index\nindex_male = desc.loc[desc['gender']=='male'].index\ndesc['percentage'] = pd.Series()\nfor row in index_female:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_female\nfor row in index_male:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_male\ndesc\nplt.figure(figsize = (10,10))\nax = plt.subplot(111)\nsns.barplot(x = 'Ranks',y ='percentage' ,data = desc,hue = 'gender',palette = ['pink','blue'])\nax.set_ylabel('Percentage', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\nax.set_xlabel('Ranks', size = 'large',backgroundcolor = 'yellow',labelpad = 20)","ce72219b":"plt.figure(figsize = (5,6))\nax = plt.subplot(111)\nsns.countplot(data['test preparation course'],palette = ['red','green'])\nax.bar_label(ax.containers[0])\nax.set_ylabel('Count', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\nax.set_xlabel('Test Preparation Course', size = 'large',backgroundcolor = 'yellow',labelpad = 20)","31502075":"data.groupby(['test preparation course'])['math score'].describe()","743d0990":"data.groupby(['test preparation course'])['reading score'].describe()","71598948":"data.groupby(['test preparation course'])['writing score'].describe()","091861fe":"data.groupby(['test preparation course'])['sum'].describe()","e980f076":"for i in lst:\n    desc = data.groupby(['test preparation course'])[i].describe()\n    desc.reset_index(level = 0,inplace = True)\n    plt.figure(figsize = (5,6))\n    ax = plt.subplot(111)\n    ax.title.set_text(i.title())\n    sns.barplot(x = 'test preparation course',y = 'mean' , data = desc, order = ['none','completed'],palette = ['red','green'])\n    ax.bar_label(ax.containers[0])\n    ax.set_ylabel(f'Avg. {i.title()}', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\n    ax.set_xlabel('Test Preparation Course', size = 'large',backgroundcolor = 'yellow',labelpad = 20)\n","89075bfd":"data_completed = data.loc[data['test preparation course']== 'completed']\ndata_none = data.loc[data['test preparation course'] == 'none']","576d2f35":"for i in lst:\n    plt.figure(figsize = (10,10))\n    ax = plt.subplot(111)\n    ax.title.set_text(i.title())\n    sns.boxplot(x = data['test preparation course'], y = data[i], palette = ['red','green'])\n    tick_spacing = 5\n    ax.yaxis.set_major_locator(ticker.MultipleLocator(tick_spacing))\n    ax.set_xlabel('Test Completion Course', size = 'large',backgroundcolor = 'yellow',labelpad = 20)\n    ax.set_ylabel(i.title(), size = 'large',backgroundcolor = 'yellow',labelpad = 20)\n    \nfor i in lst:\n    plt.figure(figsize = (20,5))\n    ax1 = plt.subplot(111)\n    sns.kdeplot(data_none[i], color = 'red',multiple = 'stack')\n    sns.kdeplot(data_completed[i], color = 'green',multiple = 'stack' )\n    tick_spacing = 5\n    ax1.xaxis.set_major_locator(ticker.MultipleLocator(tick_spacing))\n    ax1.set_ylabel('Density', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\n    ax1.set_xlabel(i.title(), size = 'large',backgroundcolor = 'yellow',labelpad = 20)","3869a780":"desc = data_with_clusters.groupby(['Ranks','test preparation course'])['sum'].describe()\ndesc.reset_index(level = [0,1],inplace = True)\ncount_none = desc.loc[desc['test preparation course']=='none']['count'].sum()\ncount_completed = desc.loc[desc['test preparation course']=='completed']['count'].sum()\nindex_none = desc.loc[desc['test preparation course']=='none'].index\nindex_completed = desc.loc[desc['test preparation course']=='completed'].index\ndesc['percentage'] = pd.Series()\nfor row in index_none:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_none\nfor row in index_completed:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_completed\ndesc\nplt.figure(figsize = (10,10))\nax = plt.subplot(111)\nsns.barplot(x = 'Ranks',y ='percentage' ,data = desc,hue = 'test preparation course',palette = ['green','red'])\nax.set_ylabel('Percentage', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\nax.set_xlabel('Ranks', size = 'large',backgroundcolor = 'yellow',labelpad = 20)","970baac0":"plt.figure(figsize = (5,6))\nax = plt.subplot(111)\nsns.countplot(data['lunch'])\nax.bar_label(ax.containers[0])\nax.set_ylabel('Count', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\nax.set_xlabel('Lunch', size = 'large',backgroundcolor = 'yellow',labelpad = 20)","f734ee09":"data.groupby(['lunch'])['math score'].describe()","09929f64":"data.groupby(['lunch'])['reading score'].describe()","2a5b5c6f":"data.groupby(['lunch'])['writing score'].describe()","0459e9a0":"data.groupby(['lunch'])['sum'].describe()","17031616":"for i in lst:\n    desc = data.groupby(['lunch'])[i].describe()\n    desc.reset_index(level = 0,inplace = True)\n    plt.figure(figsize = (5,6))\n    ax = plt.subplot(111)\n    ax.title.set_text(i.title())\n    sns.barplot(x = 'lunch',y = 'mean' , data = desc, order = ['standard','free\/reduced'])\n    ax.bar_label(ax.containers[0])\n    ax.set_ylabel(f'Avg. {i.title()}', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\n    ax.set_xlabel('Lunch', size = 'large',backgroundcolor = 'yellow',labelpad = 20)\n","9d62f8c6":"data_free = data.loc[data['lunch']== 'free\/reduced']\ndata_standard = data.loc[data['lunch'] == 'standard']","073f6d74":"for i in lst:\n    plt.figure(figsize = (10,10))\n    ax = plt.subplot(111)\n    ax.title.set_text(i.title())\n    sns.boxplot(x = data['lunch'], y = data[i])\n    tick_spacing = 5\n    ax.yaxis.set_major_locator(ticker.MultipleLocator(tick_spacing))\n    ax.set_xlabel('Lunch', size = 'large',backgroundcolor = 'yellow',labelpad = 20)\n    ax.set_ylabel(i.title(), size = 'large',backgroundcolor = 'yellow',labelpad = 20)\n    \nfor i in lst:\n    plt.figure(figsize = (20,5))\n    ax1 = plt.subplot(111)\n    sns.kdeplot(data_standard[i],multiple = 'stack')\n    sns.kdeplot(data_free[i],multiple = 'stack' )\n    tick_spacing = 5\n    ax1.xaxis.set_major_locator(ticker.MultipleLocator(tick_spacing))\n    ax1.set_ylabel('Density', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\n    ax1.set_xlabel(i.title(), size = 'large',backgroundcolor = 'yellow',labelpad = 20)","f5388766":"desc = data_with_clusters.groupby(['Ranks','lunch'])['sum'].describe()\ndesc.reset_index(level = [0,1],inplace = True)\ncount_free = desc.loc[desc['lunch']=='free\/reduced']['count'].sum()\ncount_standard = desc.loc[desc['lunch']=='standard']['count'].sum()\nindex_free = desc.loc[desc['lunch']=='free\/reduced'].index\nindex_standard = desc.loc[desc['lunch']=='standard'].index\ndesc['percentage'] = pd.Series()\nfor row in index_free:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_free\nfor row in index_standard:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_standard\ndesc\nplt.figure(figsize = (10,10))\nax = plt.subplot(111)\nsns.barplot(x = 'Ranks',y ='percentage' ,data = desc,hue = 'lunch')\nax.set_ylabel('Percentage', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\nax.set_xlabel('Ranks', size = 'large',backgroundcolor = 'yellow',labelpad = 20)","abfbaec6":"plt.figure(figsize = (20,6))\nax = plt.subplot(111)\nsns.countplot(data['parental level of education v2'],palette = 'Greens',order = ['low','medium','high'] )\nax.bar_label(ax.containers[0])\nax.set_ylabel('Count', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\nax.set_xlabel('Parental level of Education', size = 'large',backgroundcolor = 'yellow',labelpad = 20)","6cc8c88b":"data.groupby(['parental level of education v2'])['math score'].describe()","47eeb93c":"data.groupby(['parental level of education v2'])['reading score'].describe()","7a7a02a7":"data.groupby(['parental level of education v2'])['writing score'].describe()","b1c530bf":"for i in lst:\n    desc = data.groupby(['parental level of education v2'])[i].describe()\n    desc.reset_index(level = 0,inplace = True)\n    plt.figure(figsize = (10,6))\n    ax = plt.subplot(111)\n    ax.title.set_text(i.title())\n    sns.barplot(x = 'parental level of education v2',y = 'mean' , data = desc, order = ['low','medium','high'], palette = 'Greens')\n    ax.bar_label(ax.containers[0])\n    ax.set_ylabel(f'Avg. {i.title()}', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\n    ax.set_xlabel('Parental Level of education', size = 'large',backgroundcolor = 'yellow',labelpad = 20)","d557da80":"desc = data_with_clusters.groupby(['Ranks','parental level of education v2'])['sum'].describe()\ndesc.reset_index(level = [0,1],inplace = True)\ncount_low = desc.loc[desc['parental level of education v2']=='low']['count'].sum()\ncount_medium = desc.loc[desc['parental level of education v2']=='medium']['count'].sum()\ncount_high = desc.loc[desc['parental level of education v2']=='high']['count'].sum()\nindex_low = desc.loc[desc['parental level of education v2']=='low'].index\nindex_medium = desc.loc[desc['parental level of education v2']=='medium'].index\nindex_high = desc.loc[desc['parental level of education v2']=='high'].index\ndesc['percentage'] = pd.Series()\nfor row in index_low:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_low\nfor row in index_medium:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_medium\nfor row in index_high:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_high\ndesc\nplt.figure(figsize = (10,10))\nsns.barplot(x = 'Ranks',y ='percentage' ,data = desc,hue = 'parental level of education v2', palette = 'Greens')","339fada0":"plt.figure(figsize = (20,6))\nax = plt.subplot(111)\nsns.countplot(data['race\/ethnicity v2'],order = ['A','B','C','D','E'] )\nax.bar_label(ax.containers[0])\nax.set_ylabel('Count', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\nax.set_xlabel('Race\/Ethnicity', size = 'large',backgroundcolor = 'yellow',labelpad = 20)","70b16b26":"data.groupby(['race\/ethnicity v2'])['math score'].describe()","4775d4b5":"data.groupby(['race\/ethnicity v2'])['reading score'].describe()","9a22b4d2":"data.groupby(['race\/ethnicity v2'])['writing score'].describe()","ef44c676":"data.groupby(['race\/ethnicity v2'])['sum'].describe()","3cca8203":"for i in lst:\n    desc = data.groupby(['race\/ethnicity v2'])[i].describe()\n    desc.reset_index(level = 0,inplace = True)\n    plt.figure(figsize = (10,6))\n    ax = plt.subplot(111)\n    ax.title.set_text(i.title())\n    sns.barplot(x = 'race\/ethnicity v2',y = 'mean' , data = desc)\n    ax.bar_label(ax.containers[0])\n    ax.set_ylabel(f'Avg. {i.title()}', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\n    ax.set_xlabel('Race\/Ethnicity ', size = 'large',backgroundcolor = 'yellow',labelpad = 20)","7aafbc15":"desc = data_with_clusters.groupby(['Ranks','race\/ethnicity v2'])['sum'].describe()\ndesc.reset_index(level = [0,1],inplace = True)\ncount_a = desc.loc[desc['race\/ethnicity v2']=='A']['count'].sum()\ncount_b = desc.loc[desc['race\/ethnicity v2']=='B']['count'].sum()\ncount_c = desc.loc[desc['race\/ethnicity v2']=='C']['count'].sum()\ncount_d = desc.loc[desc['race\/ethnicity v2']=='D']['count'].sum()\ncount_e = desc.loc[desc['race\/ethnicity v2']=='E']['count'].sum()\nindex_a = desc.loc[desc['race\/ethnicity v2']=='A'].index\nindex_b = desc.loc[desc['race\/ethnicity v2']=='B'].index\nindex_c = desc.loc[desc['race\/ethnicity v2']=='C'].index\nindex_d = desc.loc[desc['race\/ethnicity v2']=='D'].index\nindex_e = desc.loc[desc['race\/ethnicity v2']=='E'].index\ndesc['percentage'] = pd.Series()\nfor row in index_a:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_a\nfor row in index_b:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_b\nfor row in index_c:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_c\nfor row in index_d:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_d\nfor row in index_e:\n    desc.loc[row,'percentage']= desc.loc[row,'count']\/count_e\ndesc\nplt.figure(figsize = (10,10))\nax = plt.subplot(111)\nsns.barplot(x = 'Ranks',y ='percentage' ,data = desc,hue = 'race\/ethnicity v2')\nax.set_ylabel('Percentage', size = 'large', backgroundcolor = 'yellow',labelpad = 20)\nax.set_xlabel('Ranks', size = 'large',backgroundcolor = 'yellow',labelpad = 20)","aafa765b":"#### We can easily notice the trend that of the students who eat a standard lunch high percentage are scoring well. Hence proper nourishment is important","baf542ea":"#### Some descriptive stats for individual and overall scores can be seen below","abcc16ef":"#### On average we can say that students who did some preparation course scored better.","7ae7dad1":"#### Now comes the analysis based on our kmeans clusters.","528e633d":"# Loading Dataset","6b5aacce":"#### Here we can see that on average students eating a standard lunch scored better.","c53a34f6":"#### Below we are grouping parental level of education into 3 classes low,medium and high. Also, we are simplifying the entries in the race\/ethnicity column","88983896":"#### Distribution of scores is represented below to get a better idea in boxplot form and kdeplot form.","85c8c931":"#### Here we can see the trend that among the students whose parents have a higher level of education a higher ratio tend to do well in the examinations. However this trend is weaker than the other strong trends we have seen before","4651e31b":"#### This is the distribution based on our kmeans clusters which tells us that in these clusters based on scores there is no clear trend and hence gender does not seem to be a major factor even though overall score average was higher for female students.","2e0dcd51":"#### Next comes the analysis based on our kmeans clustering.","91c3528c":"#### The count of students who eat a standard lunch is much higher than those who eat a reduced meal","ba0d99d3":"#### Now we classify the clusters into ranks based on scores","fcfc9fa7":"1. The Gender ratio is not very bad and the count of female students is a bit higher than that of male students. When it comes to scores, the gender does not play a significant or standard role in determining score. So, regardless of gender, the student can do well. \n\n2. Number of students who have currently availed the test preparation courses are much less than those who have not. But, according to our analysis, this needs to change and students should start using these courses to do well in examinations.\n\n3. The Lunch type which is linked with the nourishment of the student also plays an important role in determining how the student does in the examinations. Luckily, the number of students getting a standard lunch and hence proper nourishment is high.\n\n4. The conclusions from the Race\/Ethncity feature cant be derived directly as we have to see the different conditions for people from different groups and so we have to examine the conditions for group E vs the other groups to see why the students perform better.\n\n5. Parental level of education seems to be a relevant factor but not a major one. Also, it is factor with which conditions are linked as well.\n \nOverall, taking test preparation courses and proper nourishment are beneficial for the students.","74c6dddb":"# Conclusion","ff03daeb":"#### In this notebook I have tried to determine which features affect the student's subjectwise and overall performance by looking at the data distribution overall and also based on clusters formed on the basis of scores. The features involved are:\n\n*  gender : sex of students\n*  race\/ethnicity : ethnicity of students\n*  parental level of education : parents' final education\n* lunch : standard or free\/reduced\n* test preparation course : Any course done\/completed to prepare for test or not","6552478d":"# Analysis based on Gender ","e31c1b96":"#### Here we can see that based on the scores the descending order of scoring clusters is 6,2,4,0,3,5,1 (overall scores)","8f5c679e":"#### Some descriptive stats for individual and overall scores can be seen below","42b1618d":"#### The trends here are same as the trends seen for averages.","20f4a05b":"#### Here we can clearly see that the clusters with high scoring students had high percentages of students who had done some test preparation course.","7b1c5245":"#### These plots indicate that on average male students did better in math but female students did better in reading and writing and hence, overall average scores were better for female students.","6466ff2f":"#### Now comes the analysis based on our kmeans clusters.","49bad38f":"# Analysis based on Test Preparation Course","3f924932":"#### Now comes the analysis based on our kmeans clusters.","27ef268f":"#### Below are some descriptive stats for individual and overall scores.","4699adb1":"# Basic EDA","22b8daea":"# Introduction","bf099037":"#### Here we can see that most of the parents only have a high school education or are college dropouts.","299e1a84":"#### The number of students who have completed some course to prepare for tests is much less than those who have not.","b92afe48":"# Analysis based on Race\/Ethnicity","92de17e5":"#### Below we can see the distribution of the scores through boxplot and kdeplot forms.","d09e5a3d":"#### Below are some descriptive stats based on individual and overall scores.","8c0e66fc":"##### To classify students into groups and check which feature affects the scores significantly","8cc8e164":"# Analysis based on Parental Level of Education","75eb8d13":"#### Next comes the analysis based on our kmeans clustering.","a7f316e2":"# KMeans Clustering ","b399125b":"#### Below we can see the distribution of the scores through boxplot and kdeplot forms.","19f036fe":"#### Here we see the count of females is greater than men but not by too much.","1c592124":"#### Here we can see that on average there is standard trend showing that students from ethnicity E tend to do well while students from group A dont.","eec9e81e":"# Importing Libraries","c23cda4e":"#### Most of the students belong to ethnicity represented by group C and group D","e068cefd":"#### Here we see that on average students whose parents have a higher level of education scored better. ","dd6e57fe":"# Analysis based on Lunch type","f4fdac80":"#### Some descriptive stats for individual and overall scores can be seen below"}}