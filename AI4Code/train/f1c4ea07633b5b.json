{"cell_type":{"b5eee35d":"code","3064a88a":"code","b04029cc":"code","93398a8c":"code","e70274cc":"code","b3299b80":"code","508d77fd":"code","a936123f":"code","8f02ddd4":"code","0bc562bb":"code","996f8b22":"code","27703eef":"code","598aefb9":"code","e8af8adb":"code","81506c3e":"code","a5acc8d6":"code","34e60b5d":"code","2aed6c58":"code","c788310e":"code","8ebb2911":"code","bc4b5150":"code","7bc41965":"code","c951bf17":"code","e2fc49dc":"code","8483bd3d":"code","6f89312a":"code","2a266941":"code","1e60cc65":"code","8d49a440":"code","b8f7d1e1":"code","62762bec":"code","26b98a76":"code","2cc8ccd0":"code","22de34e6":"code","1c1e3441":"code","f48645c3":"code","a291dd4a":"code","1ba6190d":"code","29596a0b":"code","2fec0750":"code","8bac25a0":"code","01045b3e":"code","bf9e1def":"code","1b72277f":"code","147e82f2":"code","8767de25":"code","e289beb5":"code","177ed7d9":"code","e08ecd85":"code","8a3e22c6":"code","8b4f8dd8":"markdown","d8ac5bfd":"markdown","0d644d91":"markdown","c8d02741":"markdown","8adae2c3":"markdown","4f60bc1f":"markdown","d024f8f8":"markdown","6dad1a23":"markdown","7807e587":"markdown","987d136c":"markdown"},"source":{"b5eee35d":"# import \nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3064a88a":"# reading files\ndf = pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore.csv') \ndf.head(3)","b04029cc":"df.info()","93398a8c":"for i in df.columns:\n    print(i)\n    print(df[i].unique())","e70274cc":"# a. Drop records where rating is missing since rating is our target\/study variable\ndf['Rating'].isnull().sum()\ndf1 = df.dropna(subset=['Rating'])\ndf1.isnull().sum()","b3299b80":"df1 = df1.loc[~df1['App'].str.contains('Life Made')]\n#df.columns.str.contains('^X') returns array [True, True, False, False, False].\n#True where condition meets. Otherwise False\n#Sign ~ refers to negate the condition.\n#df.loc[ ] is used to select columns","508d77fd":"null_col = \"Android Ver\", \"Current Ver\"\nfor i in null_col: \n    df1[i] = df1[i].fillna(df1[i].mode()[0])\n\n#[0] to choose 1st mode value","a936123f":"df1.isnull().sum()","8f02ddd4":"'''\n2.Data clean up \u2013 correcting the data types\n    a.Which all variables need to be brought to numeric types?\n    b.Price variable \u2013 remove $ sign and convert to float\n    c.Installs \u2013 remove \u2018,\u2019 and \u2018+\u2019 sign, convert to integer\n    d.Convert all other identified columns to numeric\n'''","0bc562bb":"df1.dtypes","996f8b22":"df1['Size'].mode()","27703eef":"#df[\"Installs\"].replace({\",\":\"\",\"+\":\"\"})\ndf1[\"Installs\"] = df1[\"Installs\"].str.replace(\",\",\"\")\ndf1[\"Installs\"] = df1[\"Installs\"].str.replace(\"+\",\"\")\ndf1[\"Installs\"] = df1[\"Installs\"].str.replace(\"Free\",\"0\")\ndf1[\"Price\"] = df1[\"Price\"].str.replace(\"$\",\"\")\ndf1[\"Price\"] = df1[\"Price\"].str.replace(\"Everyone\",'0')\ndf1[\"Price\"] = df1[\"Price\"].str.replace(\"nan\",'0')\n\ndf1[\"Size\"] = df1[\"Size\"].str.replace(\"M\",\"\")\ndf1[\"Size\"] = df1[\"Size\"].str.replace(\"k\",\"\")\ndf1[\"Size\"] = df1[\"Size\"].str.replace(\"Varies with device\",'0')\n","598aefb9":"for i in df.columns:\n    print(i)\n    print(df1[i].unique())","e8af8adb":"#df[[\"a\", \"b\"]] = df[[\"a\", \"b\"]].apply(pd.to_numeric)\n#df[\"Installs\"] = df[\"Installs\"].astype(int)\n#df[\"Price\"] = df[\"Price\"].astype(float)\n\ndf1[[\"Installs\",\"Price\",\"Size\",\"Rating\",\"Reviews\"]] = df1[[\"Installs\",\"Price\",\"Size\",\"Rating\",\"Reviews\"]].apply(pd.to_numeric)\n","81506c3e":"df1.dtypes","a5acc8d6":"df1.head()","34e60b5d":"df1[\"Rating\"] = df1[\"Rating\"].dropna()\ndf1[\"Rating\"].unique()\ndf1.shape","2aed6c58":"df1.info()","c788310e":"df1.shape","8ebb2911":"df2 = df1[df1['Reviews']<=df1['Installs']]\ndf2.shape","bc4b5150":"df2.head()","7bc41965":"'''\n4.Identify and handle outliers \u2013 \n    a.Price column\n        i.Make suitable plot to identify outliers in price\n        ii.Do you expect apps on the play store to cost $200? Check out these cases\n        iii.After dropping the useless records, make the suitable plot again to identify outliers\n        iv.Limit data to records with price < $30\n    b.Reviews column\n        i.Make suitable plot\n        ii.Limit data to apps with < 1 Million reviews\n    c.Installs\n        i.What is the 95th percentile of the installs?\n        ii.Drop records having a value more than the 95th percentile\n'''","c951bf17":"#i.Make suitable plot to identify outliers in price\nsns.boxplot(df2[\"Price\"])","e2fc49dc":"q1 = df2[\"Price\"].quantile(.25)\nq3 = df2[\"Price\"].quantile(.5)\nIQR = q1 - q3 \nlower_bound = q1 -(1.5 * IQR) \nupper_bound = q3 +(1.5 * IQR) \nlower_bound","8483bd3d":"#ii.Do you expect apps on the play store to cost $200? Check out these cases\ndf3 = df2[df2[\"Price\"]<200]\ndf3.shape","6f89312a":"# After dropping the useless records, make the suitable plot again to identify outliers\nsns.boxplot(df3[\"Price\"])","2a266941":"#Limit data to records with price < $30\ndf4 = df3.drop(df3[df3[\"Price\"] > 30].index)\ndf4.shape","1e60cc65":"# Reviews column  -  Make suitable plot\n# Limit data to apps with < 1 Million reviews\nsns.scatterplot(df4[\"Reviews\"],df4[\"Rating\"])","8d49a440":"df5 = df4[df4[\"Reviews\"]<1000000]\ndf5[\"Reviews\"].max()\n#df5.shape","b8f7d1e1":"'''    c.Installs\n        i.What is the 95th percentile of the installs?\n        ii.Drop records having a value more than the 95th percentile\n'''\n\nq3 = df5[\"Installs\"].quantile(.95)\n\ndf6 = df5[df5[\"Installs\"]<q3]\nprint(q3)\nprint(\"Max Value:\",df6[\"Installs\"].max())","62762bec":"'''\n5.What is the distribution of ratings like? (use Seaborn) More skewed towards higher\/lower values?\n    a.How do you explain this?\n    b.What is the implication of this on your analysis?\n'''","26b98a76":"sns.distplot(df6[\"Rating\"])","2cc8ccd0":"df6[\"Content Rating\"].value_counts()\n# Adult only 18+ & unrated is very few in count","22de34e6":"#so, drop this two\ndf6 = df6[(df6[\"Content Rating\"]!=\"Adults only 18+\")&(df6[\"Content Rating\"]!=\"Unrated\")].reset_index()\n","1c1e3441":"sns.jointplot(df6[\"Size\"],df6[\"Rating\"])\n\n#Smaller the size higher the Rating\n#these where inversely proportional","f48645c3":"ax = sns.jointplot(df6[\"Price\"],df6[\"Rating\"])\nsns.regplot(df6[\"Price\"],df6[\"Rating\"],ax = ax.ax_joint)\n#sns.lmplot(df6[\"Price\"],df6[\"Rating\"])","a291dd4a":"#Replot the data, this time with only records with price > 0 \n\ndf7 = df6[df6[\"Price\"]>0]\nax1 = sns.jointplot(df7[\"Price\"],df7[\"Rating\"])\nsns.regplot(df7[\"Price\"],df7[\"Rating\"],ax = ax1.ax_joint)\n#df7[\"Price\"].min()","1ba6190d":"sns.pairplot(df6)","29596a0b":"mean_df = df6.groupby(\"Content Rating\").mean().reset_index()\nmedian_df = df6.groupby(\"Content Rating\").median().reset_index()\n# no need for quantile","2fec0750":"#mean\nsns.barplot(mean_df[\"Rating\"],mean_df[\"Content Rating\"])","8bac25a0":"#median\nsns.barplot(median_df[\"Rating\"],median_df[\"Content Rating\"])","01045b3e":"# i prefer mean","bf9e1def":"#sns.distplot(df6[\"Rating\"])\n#sns.distplot(df6[\"Content Rating\"])\n\nsns.barplot(df6[\"Rating\"],hue = df6[\"Content Rating\"],y = df6[\"Size\"])","1b72277f":"df7 = df6.sort_values(\"Size\")\nx = df7[\"index\"].count()\ny = int(x*.20) + 1\n\nk = []\nfor i in range(1,6):\n    k.append(i)\nl = [x * y for x in k]\nl\n\nj = []\nfor i in range(0,5):\n    j.append(i)\nm = [x * y for x in j]\nprint(m)\nprint(l)","147e82f2":"data = []\nfor (x,y) in zip(m,l):\n    d = df7[x:y]\n    data.append(d)\n\ndata[2].shape","8767de25":"data[0][\"Size\"].quantile(.20)\n\nq_20 = []\n\nfor i in range(5):\n    x = data[i][\"Size\"].quantile(.20)\n    q_20.append(x)","e289beb5":"data[0].head(2)","177ed7d9":"x = df6[[\"Rating\",\"Reviews\",\"Size\"]]\nsns.heatmap(x, annot=True,cmap = \"Greens\")\n","e08ecd85":"res = []\nfor i in range(4):\n    x = data[i][[\"Rating\",\"Reviews\",\"Size\"]]\n    res.append(sns.heatmap(x,annot=True,linewidths=2,cmap = \"Greens\"))\n\n","8a3e22c6":"sns.relplot(style=\"Content Rating\", x=\"Rating\", y=\"Size\", sizes=(200, 200), data=df6)","8b4f8dd8":"''''\n11.Content rating vs. size vs. rating \u2013 3 variables at a time\n    a.Create 5 buckets (20% records in each) based on Size\n    b.By Content Rating vs. Size buckets, get the rating (20th percentile) for each combination\n    c.Make a heatmap of this\n        i.Annotated\n        ii.Greens color map\n    d.What\u2019s your inference? Are lighter apps preferred in all categories? Heavier? Some?\n''''","d8ac5bfd":"'''\n6.What are the top Content Rating values?\n    a.Are there any values with very few records?\n    b.If yes, drop those as they won\u2019t help in the analysis\n    \n'''","0d644d91":"### Objective\n  Google Play Store team is about to launch a new feature where in certain apps that are promising are boosted in visibility. The boost will manifest in multiple ways \u2013 higher priority in recommendations sections (\u201cSimilar apps\u201d, \u201cYou might also like\u201d, \u201cNew and updated games\u201d). These will also get a boost in visibility in search results.  This feature will help bring more attention to newer apps that have potential.\n   The task is to understand what makes an app perform well - size? price? category? multiple factors together? Analyze the data and present your insights in a format consumable by business \u2013 the final output of the analysis would be presented to business as insights with supporting data\/visualizations.\n","c8d02741":"'''\n9.Look at all the numeric interactions together \u2013 \n    a.Make a pairplort with the colulmns - 'Reviews', 'Size', 'Rating', 'Price'\n'''","8adae2c3":"\"\"\"\nSanity checks \u2013 check for the following and handle accordingly\n    a.Avg. rating should be between 1 and 5, as only these values are allowed on the play store.\n        i.Are there any such records? Drop if so.\n    b.Reviews should not be more than installs as only those who installed can review the app.\n        i.Are there any such records? Drop if so.\n\n\"\"\"","4f60bc1f":"\"\"\"\n7.Effect of size on rating\n    a.Make a joinplot to understand the effect of size on rating\n    b.Do you see any patterns?\n    c.How do you explain the pattern?\n\"\"\"","d024f8f8":"1.\tData clean up \u2013 Missing value treatment\n  a. Drop records where rating is missing since rating is our target\/study variable\n  b. Check the null values for the Android Ver column. \n     i.  Are all 3 records having the same problem?\n     ii. Drop the 3rd record i.e. record for \u201cLife Made WIFI \u2026\u201d\n     iii.Replace remaining missing values with the mode\nc.\tCurrent ver \u2013 replace with most common value","6dad1a23":"'''\n8.Effect of price on rating\n    a.Make a jointplot (with regression line)\n    b.What pattern do you see?\n    c.How do you explain the pattern?\n    d.Replot the data, this time with only records with price > 0 \n    e.Does the pattern change?\n    f.What is your overall inference on the effect of price on the rating\n'''","7807e587":"'''\n10.Rating vs. content rating\n    a.Make a bar plot displaying the rating for each content rating\n    b.Which metric would you use? Mean? Median? Some other quantile?\n    c.Choose the right metric and plot\n'''","987d136c":"# Data analysis to answer business questions"}}