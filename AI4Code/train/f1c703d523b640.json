{"cell_type":{"894f3d09":"code","f4013b7b":"code","eed49f13":"code","58a2abfb":"code","bc9c9c32":"code","62ac6ea7":"code","3183e1c8":"code","f374ea7d":"code","a7e9b479":"code","8940e9d4":"code","997e7bae":"code","7fb57c42":"code","cdd92297":"code","5abf2228":"code","fc644b13":"code","a4ab3c01":"code","301bfb2f":"code","0f1b2884":"code","f3fe6844":"code","de5f434b":"code","9a552f67":"code","cdebf685":"code","3ff75cb5":"code","c8b7501d":"code","4e6ec8c1":"code","985f54ed":"code","73adaff4":"code","63cd0b75":"code","e0197a81":"code","8964487f":"code","bc726ef4":"code","e20384a7":"code","6031fbe8":"code","2a77afb0":"code","4ad0ebe2":"code","9010f7c2":"code","b4970777":"code","35dcc381":"code","ff03404d":"code","cc2b5e2e":"code","01f59681":"code","1c4a0c32":"markdown","ec8acd4a":"markdown","db62f54e":"markdown","ddbfacd7":"markdown","cb59a3c5":"markdown","f1ddbe96":"markdown","ab104ab9":"markdown","2a7ab8aa":"markdown","9189a895":"markdown","d29b3f2b":"markdown","5072d579":"markdown","296a80fd":"markdown","418e338f":"markdown","6eed14b4":"markdown","1c48e1e9":"markdown","26579858":"markdown","49fe55db":"markdown","ae923140":"markdown","c0a1b35f":"markdown","1523815e":"markdown","5f8b4d63":"markdown","8bd30559":"markdown","b9fb80af":"markdown","6d989aa3":"markdown","79654382":"markdown","16ff66bc":"markdown","f3f367ab":"markdown","410c0edd":"markdown","4c904822":"markdown","b746f171":"markdown","59483e10":"markdown","797c2b3e":"markdown","c5f87e3b":"markdown","e463fc01":"markdown","7bea38e8":"markdown","add04024":"markdown","661eaf01":"markdown","3cfb7450":"markdown","1a0b89ef":"markdown","cb099bb3":"markdown","93ec2ab6":"markdown","c4382cc2":"markdown","e7c0e336":"markdown","9e4b96c8":"markdown","5fe7bdc1":"markdown","edf20458":"markdown"},"source":{"894f3d09":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt \nimport seaborn as sns \n\nimport sklearn \n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score","f4013b7b":"trainDT = pd.read_csv('\/kaggle\/input\/adult-pmr3508\/train_data.csv', index_col = ['Id'], na_values = '?')\n\ntestDT = pd.read_csv('\/kaggle\/input\/adult-pmr3508\/test_data.csv', index_col = ['Id'], na_values = '?')","eed49f13":"trainDT.head(7)","58a2abfb":"trainDT.shape","bc9c9c32":"testDT.head(7)","62ac6ea7":"testDT.shape","3183e1c8":"trainDT['income'] = LabelEncoder().fit_transform(trainDT['income'])\n\ntrainDT.head(7)","f374ea7d":"sns.barplot(x = 'workclass', y = 'income', data = trainDT)\nplt.xticks(rotation=90)\nplt.show()","a7e9b479":"sns.barplot(x = 'education', y = 'income', data = trainDT)\nplt.xticks(rotation=90)\nplt.show()","8940e9d4":"sns.barplot(x = 'marital.status', y = 'income', data = trainDT)\nplt.xticks(rotation=90)\nplt.show()","997e7bae":"sns.barplot(x = 'occupation', y = 'income', data = trainDT)\nplt.xticks(rotation=90)\nplt.show()","7fb57c42":"sns.barplot(x = 'relationship', y = 'income', data = trainDT)\nplt.xticks(rotation=90)\nplt.show()","cdd92297":"sns.barplot(x = 'race', y = 'income', data = trainDT)\nplt.xticks(rotation=90)\nplt.show()","5abf2228":"sns.barplot(x = 'sex', y = 'income', data = trainDT)\nplt.xticks(rotation=90)\nplt.show()","fc644b13":"sns.barplot(x = 'native.country', y = 'income', data = trainDT)\nplt.xticks(rotation=90)\nplt.show()","a4ab3c01":"print((trainDT['native.country'].value_counts()\/trainDT.shape[0])*100)","301bfb2f":"trainDT.describe()","0f1b2884":"sns.boxplot(x = 'income', y = 'age', data = trainDT)\nplt.show()","f3fe6844":"sns.boxplot(x = 'income', y = 'education.num', data = trainDT)\nplt.show()","de5f434b":"sns.boxplot(x = 'income', y = 'hours.per.week', data = trainDT)\nplt.show()","9a552f67":"sns.boxplot(x = 'income', y = 'capital.gain', data = trainDT)\nplt.show()","cdebf685":"sns.boxplot(x = 'income', y = 'capital.loss', data = trainDT)\nplt.show()","3ff75cb5":"sns.heatmap(trainDT.corr(), square = True, annot = True, vmin = -0.1, vmax = 1)\nplt.show()","c8b7501d":"trainDT.isna().sum()","4e6ec8c1":"missing_data_trainDT = pd.concat([trainDT.isna().sum().sort_values(ascending = False), \n                          (trainDT.isna().sum()\/trainDT.isna().count()*100).sort_values(ascending = False)],\n                           axis = 1, keys = ['Total', '%'])\nmissing_data_trainDT.head(3)","985f54ed":"missing_data_testDT = pd.concat([testDT.isna().sum().sort_values(ascending = False), \n                          (testDT.isna().sum()\/testDT.isna().count()*100).sort_values(ascending = False)],\n                           axis = 1, keys = ['Total', '%'])\nmissing_data_testDT.head(3)","73adaff4":"trainDT = trainDT.drop(['native.country', 'fnlwgt', 'education'], axis = 1)\n\ntrainDT.head()","63cd0b75":"testDT = testDT.drop(['native.country', 'fnlwgt', 'education'], axis = 1)\n\ntestDT.head()","e0197a81":"trainDT[['occupation', 'workclass']] = SimpleImputer(strategy = 'most_frequent').fit_transform(trainDT[['occupation','workclass']])\n\ntrainDT.isna().sum()","8964487f":"testDT[['occupation', 'workclass']] = SimpleImputer(strategy = 'most_frequent').fit_transform(testDT[['occupation','workclass']])\n\ntestDT.isna().sum()","bc726ef4":"trainDT[['age', 'education.num', 'hours.per.week']] = StandardScaler().fit_transform(trainDT[['age', 'education.num', 'hours.per.week']])\ntestDT[['age', 'education.num', 'hours.per.week']] = StandardScaler().fit_transform(testDT[['age', 'education.num', 'hours.per.week']])\n\n#trainDT[['age', 'education.num', 'hours.per.week','capital.gain','capital.loss']] = StandardScaler().fit_transform(trainDT[['age', 'education.num', 'hours.per.week','capital.gain','capital.loss']])\n#testDT[['age', 'education.num', 'hours.per.week','capital.gain','capital.loss']] = StandardScaler().fit_transform(testDT[['age', 'education.num', 'hours.per.week','capital.gain','capital.loss']])\n\ntrainDT.describe()","e20384a7":"trainDT = pd.get_dummies(trainDT, columns = ['workclass', 'marital.status', 'occupation', 'relationship', 'race', 'sex'], drop_first = True)\n\ntrainDT.head()","6031fbe8":"testDT = pd.get_dummies(testDT, columns = ['workclass', 'marital.status', 'occupation', 'relationship', 'race', 'sex'], drop_first = True)\n\ntestDT.head()","2a77afb0":"YtrainDT = trainDT.pop('income')\nXtrainDT = trainDT","4ad0ebe2":"YtrainDT.head()","9010f7c2":"XtrainDT.head()","b4970777":"folds = 10 #N\u00famero de folds que ser\u00e1 utilizado para o m\u00e9todo de cross-validation\n\nscores = {}\n\nfor k in range (15, 36): #Procurando o melhor K entre 15 a 35\n    knn = KNeighborsClassifier(n_neighbors = k)\n    score = cross_val_score(knn, XtrainDT, YtrainDT, cv = folds, scoring = 'accuracy').mean() #score do m\u00e9todo cross-validation\n    print(f'Valor do par\u00e2metro k= {k} -> Acur\u00e1cia: {score}')\n    scores[k] = score\n\nprint(scores)\n    \nbest_k = max(scores, key = scores.get)\n\nprint(f'Melhor valor do par\u00e2metro k foi {best_k}, o qual teve acur\u00e1cia de {scores[best_k]}')","35dcc381":"knn = KNeighborsClassifier(n_neighbors = best_k)\nknn.fit(XtrainDT, YtrainDT)","ff03404d":"Ytest = knn.predict(testDT)\nYtest","cc2b5e2e":"incomes = []\nfor income in Ytest:\n    if income == 0:\n        incomes.append('<=50K')\n    else:\n        incomes.append('>50K')\n\nsubmissao = pd.DataFrame({'Id': testDT.index, 'income': incomes})\nsubmissao","01f59681":"submissao.to_csv('submission.csv', index = False)","1c4a0c32":"A an\u00e1lise do gr\u00e1fico acima mostra que a *feature* 'capital.gain' possui muitos valores concentrados no valor zero, e possui uma grande vari\u00e2ncia com *outliers*. Portanto se faz pertinente tratar esta vari\u00e1vel antes de executar o algor\u00edtimo.","ec8acd4a":"Nota-se pelo gr\u00e1fico acima que indiv\u00edduos com trabalham mais horas por semana, em m\u00e9dia, possuem uma maior renda. ","db62f54e":"\n## 2 - Importa\u00e7\u00e3o da base de dados de treino","ddbfacd7":"## 4 - Tratamento dos dados e sele\u00e7\u00e3o das *features*","cb59a3c5":"Observa-se que essa base de dados engloba 15 *features* das quais 6 features; \"age\", \"fnlwgt\", \"education.num\", \"capital.gain\", \"capital.loss\" e \"hours.per.week\"; compreendem vari\u00e1veis num\u00e9ricas e as demais 8; \"workclass\", \"education\", \"marital.status\", \"occupation\", \"relationship\", \"race\", \"sex\", \"native.country\" e \"income\" s\u00e3o vari\u00e1veis categ\u00f3ricas. \n\nO presente exerc\u00edcio tem como objetivo prever se um indiv\u00edduo na base de teste recebe mais que 50 mil no ano ou menos\/igual que 50 mil no ano (informa\u00e7\u00e3o presente na coluna \"income\" na base de treino) baseando-se nas outras vari\u00e1veis. Portanto, na pr\u00f3xima se\u00e7\u00e3o a base de dados de treino ser\u00e1 analisada mais afundo, explorando a rela\u00e7\u00e3o da vari\u00e1vel \"income\" com as demais.\n\nPara melhor an\u00e1lise da base de dados e a vari\u00e1vel *target* \"income\", esta ser\u00e1 tranformada de vari\u00e1vel categ\u00f3rica, para uma vari\u00e1vel num\u00e9rica, especificamente de forma bin\u00e1ria. Logo o valor de 1 ser\u00e1 atribuido para quem recebe mais de 50 mil anual e o valor de 0 ser\u00e1 atribuido para quem recebe menos\/igual de 50 mil anual.","f1ddbe96":"### Exclus\u00e3o de *features* n\u00e3o utilizadas","ab104ab9":"Tratando agora os dados faltantes, como uma das *features* que possuiam dados faltantes n\u00e3o ser\u00e1 utilizada, a 'native.country', ela n\u00e3o ser\u00e1 tratada. As duas *features* que possuem os dados faltantes s\u00e3o categ\u00f3ricas, por isso esses dados ser\u00e3o substituidos pela moda da da respectiva *feature*.","2a7ab8aa":"Observa-se que para a *feature* 'marital.status' o *income* \u00e9 maior para indiv\u00edduos com o estado civ\u00edl de casado, para c\u00f4njuge civil (classe 'Married-civ-spouse') e para c\u00f4njuge das for\u00e7as armadas (classe 'Married-AF-spouse') apesar deste possuir uma incerteza maior, provavelmente por apresentar um menor n\u00famero de casos desta classe. ","9189a895":"Somando os valores isso representa aproximadamente 13% de dados faltantes o que \u00e9 uma parte consider\u00e1vel. Logo \u00e9 pertinente tratar esses dados faltantes de alguma forma.","d29b3f2b":"A seguir, para a base de teste:","5072d579":"Nota-se que para as *features* 'capital.gain' e 'capital.loss' podem possuir *outliers* devido ao valor m\u00e1ximo ser muito maior que suas m\u00e9dias e tamb\u00e9m possuem uma grande vari\u00e2ncia, visto seus valores elevados de desvios padr\u00e3o. ","296a80fd":"Para sele\u00e7\u00e3o das *features*, diantes do que foi analisado, 3 *features* n\u00e3o ser\u00e3o utilizadas para a aplica\u00e7\u00e3o do modelo preditivo. Estas s\u00e3o 'native.country', 'fnlwgt' e 'education'. A 'native.country' n\u00e3o ser\u00e1 utilizada devido ao seu grande desbalanciamento, a 'fnlwgt' n\u00e3o ser\u00e1 utilizada pois verificou-se que n\u00e3o a reela\u00e7\u00e3o com a vari\u00e1vel *target* e a 'education' n\u00e3o ser\u00e1 utilizada pois a informa\u00e7\u00e3o que esta carrega ja est\u00e1 compreendida pela vari\u00e1vel n\u00famerica 'education.num', o que seria redundante sua utiliza\u00e7\u00e3o.   \n\nS\u00e3o tiradas da tab\u00e9la de dados de treino e de teste essas *features*:","418e338f":"Em geral nota-se que todas as *features* categ\u00f3ricas se mostram relevantes e podem ser aplicadas para a execu\u00e7\u00e3o do algor\u00edtimo kNN.  ","6eed14b4":"Prosseguindo, a seguir ser\u00e1 examinado as *features* num\u00e9ricas. Para isso foram gerados diagrama de caixa para cada feature com rela\u00e7\u00e3o a vari\u00e1vel *targert* \"income\". \n\nAlguns detalhes das vari\u00e1veis num\u00e9ricas s\u00e3o exibidos a seguir:","1c48e1e9":"## 5 - Modelo preditivo kNN","26579858":"Observa-se que para a *feature* 'education' o *income* \u00e9 maior para individuos com maior grau de escolaridade, visto \u00e0s classes 'Prof-school', 'Doctorate' e 'Masters'. ","49fe55db":"Verificando dados faltantes na base teste, tem-se:","ae923140":"Primeiro para a base de treino:","c0a1b35f":"Ademais, \u00e9 importante na an\u00e1lise do banco de dados de treino verificar se existem dados faltantes e como tratar esse problema. A seguir foi exibido a existencia de dados faltantes:","1523815e":"Para utilizar a informa\u00e7\u00e3o das vari\u00e1veis categ\u00f3ricas no modelo preditivo se faz necess\u00e1rio transformar estas em num\u00e9ricas. Optou pelo m\u00e9todo do *One-hot enconding* pois as veri\u00e1veis categ\u00f3ricas n\u00e3o possuem nenhuma l\u00f3gica de ordena\u00e7\u00e3o entre si e que se fosse apenas numerar as classes est\u00e1ria incluindo uma informa\u00e7\u00e3o n\u00e3o verdadeira no processo.  ","5f8b4d63":"Nota-se que todas as vari\u00e1veis possuem alguma rela\u00e7\u00e3o\/influ\u00eancia para com a vari\u00e1vel 'income', o que foi verificado na an\u00e1lise dos diagramas de caixas anteriormente, com exce\u00e7\u00e3o da 'fnlwgt',o que se mostra pertinente n\u00e3o utilizar essa *feature* na execu\u00e7\u00e3o do algor\u00edtimo. ","8bd30559":"## 3 - An\u00e1lise da base de dados de treino","b9fb80af":"### Normaliza\u00e7\u00e3o de *features* com valores discrepantes","6d989aa3":"Observando o gr\u00e1fico acima da *feature* native.country, nota-se que todos os pa\u00edses aprentam um elevado desvio padr\u00e3o exceto os Estados Unidos. Explora-se, ent\u00e3o, um pouco mais essa *feature* calculando o percentual de cada classe na base de dados de treino:","79654382":"Observa-se que para a *feature* 'sex' o *income* \u00e9 maior para homens do que para mulheres, evidenciando a desigualdade de g\u00eanero no quesito de renda.","16ff66bc":"Observa-se no gr\u00e1fico acima que em m\u00e9dia indiv\u00edduos com uma maior idade possuem uma renda maior.","f3f367ab":"### Submiss\u00e3o  ","410c0edd":"### Otimizando o par\u00e2metro k para melhor desempenho do algoritimo","4c904822":"Observa-se que para a *feature* 'race' o *income* \u00e9 maior para indiv\u00edduos de etnia branca (classe 'white') e americanos asi\u00e1ticos\/americanos das ilhas do Pac\u00edfico (classe 'Asian-Pac-Islander'). ","b746f171":"Foi feito tamb\u00e9m um *heatmap* para evidenciar a rela\u00e7\u00e3o de cada vari\u00e1vel num\u00e9rica com a vari\u00e1vel *target* 'income':","59483e10":"Nota-se que 3 *features* categ\u00f3ricas possuem dados faltantes: 'workclass', 'occupation' e 'native.country'.\n\nAnalisa-se ent\u00e3o se essa quantidade \u00e9 parte significativa perante os dados totatis, calculando a porcentagem de dados faltantes:","797c2b3e":"Observa-se no gr\u00e1fico acima que em m\u00e9dia indiv\u00edduos com uma maior escolaridade possuem uma renda maior, isso condiz com o que foi observado na an\u00e1lise da *feature* categ\u00f3rica 'education'.","c5f87e3b":"Assim como a *feature* 'capital.gain', a 'capital.loss' tamb\u00e9m possui muitos valores concentrados no valor zero e uma grande vari\u00e2ncia com *outliers*. Tamb\u00e9m se faz pertinente tratar esta vari\u00e1vel antes de executar o algor\u00edtimo.","e463fc01":"### Aplica\u00e7\u00e3o do modelo preditivo na base de treino ","7bea38e8":"### Tratamento de dados faltantes","add04024":"Primeiramente ser\u00e1 examinado as *features* categ\u00f3ricas. Para isso foram gerados gr\u00e1ficos de barras para cada feature com rela\u00e7\u00e3o a vari\u00e1vel *targert* \"income\". Note que cada barra nos gr\u00e1ficos possuem um tra\u00e7ado preto, este tra\u00e7ado indica o desvio padr\u00e3o.","661eaf01":"Para a base de teste, os dados faltantes representam aproximadamente 13,5% o que tamb\u00e9m \u00e9 uma parcela consider\u00e1vel. ","3cfb7450":"Nota-se que aproximadamente 90% da base \u00e9 de indiv\u00edduos dos Estados Unidos, isso evidencia um desbalanceamento da *feature* em quest\u00e3o. Logo esta ter\u00e1 que ser tratada ou eliminada no momento da aplica\u00e7\u00e3o do algor\u00edtimo kNN. ","1a0b89ef":"### Dados faltantes","cb099bb3":"### Tranforma\u00e7\u00e3o de vari\u00e1veis categ\u00f3ricas para num\u00e9ricas","93ec2ab6":"Observa-se que para a *feature* 'occupation' o *income* \u00e9 maior para as classes 'Exec-managerial' e 'Prof-specialty'. ","c4382cc2":"### Treinamento do modelo preditivo","e7c0e336":"Observa-se que para a *feature* 'workclass' o *income* \u00e9 maior paras as classes 'Self-emp-inc' e 'federal-gov'. ","9e4b96c8":"# PMR3508 - KNN for Dataset Adult\n\n## 1 - Importa\u00e7\u00e3o de bibliotecas:","5fe7bdc1":"### Separa\u00e7\u00e3o da *feature* target  das demais","edf20458":"Observa-se que para a *feature* 'relationship' o *income* \u00e9 maior para indiv\u00edduos sendo marido (classe 'hunband') e esposa (classe 'wife'). Isso condiz com a observa\u00e7\u00e3o da *feature* 'marital.status', a qual mostrou que indiv\u00edduos casados possuem um maior *income*.   "}}