{"cell_type":{"8d29ad8a":"code","5a5b860b":"code","4bdda8d5":"code","88e5675c":"code","27b369e3":"code","fb924193":"code","5a92d983":"code","7dbee112":"code","619e46de":"code","386b9416":"code","98dc3433":"code","01b42808":"code","1c00104c":"code","6799810d":"code","0d8c2a0a":"code","4df6a3a1":"code","ac288094":"code","0a24b044":"code","92f047de":"code","f80c85c4":"code","1abd4655":"code","59c6275c":"code","72b6a3cb":"code","65c4c221":"code","fd159f0a":"code","62b1dd6e":"code","44fef71b":"code","d66ebd38":"code","8198da12":"code","e0d205f4":"markdown","c501ac00":"markdown","d941997b":"markdown","87fc9cb5":"markdown","472a20bd":"markdown","8f32c36a":"markdown","55838f8b":"markdown","f4735694":"markdown","9019bd89":"markdown","3ae3fa96":"markdown","41fdcffe":"markdown"},"source":{"8d29ad8a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5a5b860b":"import pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt","4bdda8d5":"df=pd.read_csv('..\/input\/grip-task-4\/globalterrorismdb_0718dist.csv')","88e5675c":"df.head()","27b369e3":"df.shape","fb924193":"df.info","5a92d983":"df.describe","7dbee112":"df.isnull().sum()","619e46de":"df.isnull().any()","386b9416":"df.isnull().all()","98dc3433":"df.value_counts()","01b42808":"df.dtypes","1c00104c":"df.nunique()","6799810d":"df.columns=[c.replace(' ','') for c in df.columns]\ndf","0d8c2a0a":"df.columns","4df6a3a1":"iyear=df['iyear'].value_counts().head(5)\nsns.barplot(x=iyear.index,y=iyear.values)\nplt.grid()\nplt.xlabel('year',size=20)\nplt.ylabel('counts',size=20)\nplt.title('Year vs counts',size=20)\nplt.show()","ac288094":"plt.figure(figsize=(14,8))\niday=df['iday'].value_counts()\nplt.title('Days vs counts',size=20)\nplt.xlabel('Days',size=20)\nsns.barplot(x=iday.index,y=iday.values)\nplt.show()","0a24b044":"plt.figure(figsize=(14,8))\nimonth=df['imonth'].value_counts()\nplt.title('Month vs counts',size=20)\nplt.xlabel('Month',size=20)\nsns.kdeplot(x=iday.index,y=iday.values)\nplt.show()","92f047de":"plt.figure(figsize=(14,8))\neventid=df['eventid'].value_counts()\nplt.title('Month vs counts',size=20)\nplt.xlabel('Month',size=20)\nsns.lineplot(x=eventid.index,y=eventid.values)\nplt.show()","f80c85c4":"date=df['approxdate'].value_counts()\nsns.scatterplot(x=date.index,y=date.values)\n","1abd4655":"countrywithmostterror=df.country_txt.value_counts().head(10)\ncontry=list(countrywithmostterror.index)","59c6275c":"fig,ax=plt.subplots(figsize=(14,6))\nax.bar(countrywithmostterror.index,countrywithmostterror.values,color='b')\nplt.title('Most number of terrorist',size=20)\nplt.xlabel('Countries',size=20)\nplt.show()","72b6a3cb":"target=df['targtype1_txt'].value_counts().head(10)\nfig,ax=plt.subplots(figsize=(16,5))\nplt.title('type of deaths',size=20)\nax.bar(target.index,target.values)\nplt.xlabel('Deaths',size=20)\nplt.ylabel('Counts',size=20)\nplt.show()","65c4c221":"weapon=df['weaptype1_txt'].value_counts().head(5)\nfig,ax=plt.subplots(figsize=(16,5))\nplt.title('type of waepons')\nax.bar(weapon.index,weapon.values)\nplt.xlabel('Deaths',size=20)\nplt.ylabel('Counts',size=20)\nplt.show()","fd159f0a":"plt.figure(figsize=(14,6))\ncities=df.city.value_counts().head(10)\nplt.title('Cities with most terrorists',size=20)\nplt.xlabel('Cities',size=20)\nplt.grid()\nsns.barplot(cities.index,cities.values)\nplt.show()","62b1dd6e":"yearr=df['iyear'].unique()\nyears_counts=df['iyear'].value_counts(dropna=False).sort_index()\nplt.figure(figsize=(14,6))\nplt.xticks(rotation=50)\nplt.title('Attack in years')\nplt.xlabel('Years',size=20)\nsns.barplot(yearr,years_counts)\nplt.show()","44fef71b":"plt.figure(figsize=(14,6))\nplt.xticks(rotation=60)\nsns.countplot(df['iyear'],order=df['iyear'].value_counts().index)\nplt.title('Attacks in years',size=20)\nplt.xlabel('Year',size=20)\nplt.show()\n\n","d66ebd38":"df['country'].value_counts().to_frame().head(10).plot(kind='bar',color='b',figsize=(16,8))\nplt.xlabel('Indx of countries',size=20)\nplt.title('Countries and attacks',size=20)\nplt.grid()\nplt.show()","8198da12":"``1. Country with most attcks~IRAN``\n``2. Month when most attacks happen ~May``\n``3. City with most attacks~Baghdad``\n``4. Region where most attacks happen~ Private citizens\/Property``\n``5. Year with  most number of attacks~2014\n","e0d205f4":"``finding the type of data type that the columns are having``\n","c501ac00":"``Finding if there exit any null values in the dataset``","d941997b":"``showing the first 5 data ``","87fc9cb5":"# GRIP july21\n# GRIP task 4\n# Author ~Kushagra Gupta\n# Topic ~ Perform exploratory data analysis on 'Global Terrorism'","472a20bd":"# Colclusions","8f32c36a":"``finding the sum of all null values``","55838f8b":"``Reading the csv file``","f4735694":"``Displaying the columns``","9019bd89":"``importing suitable libraries``","3ae3fa96":"``Finding complete unique values in the data``","41fdcffe":"``dataset contains 181691 rows and 135 columns``"}}