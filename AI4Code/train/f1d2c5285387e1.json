{"cell_type":{"39c26c04":"code","bbaf12b0":"code","214b5084":"code","7088b903":"code","f5507d14":"code","8852dc37":"code","440b2c1a":"code","b872b4c4":"code","9476a19a":"code","30623cb5":"code","df83e52a":"code","a162a6dc":"markdown","2906e6e8":"markdown","011ddba1":"markdown","5e4a481c":"markdown","2d2f5144":"markdown","5b484e4d":"markdown","1d56d70a":"markdown","5f3f8573":"markdown","a267bde7":"markdown","c840e1b1":"markdown"},"source":{"39c26c04":"import os\nimport glob\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# import datetime\n# from scipy import stats\n# from scipy.sparse import hstack, csr_matrix\n# from sklearn.model_selection import train_test_split\n\nplt.style.use('seaborn-notebook')\n\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nimport plotly.plotly as py\nfrom plotly import tools\n\ninit_notebook_mode(connected=True)","bbaf12b0":"files = os.listdir(\"..\/input\/cpe-data\/\")\nprint(files)","214b5084":"files = os.listdir(\"..\/input\/cpe-data\/Dept_11-00091\/\")\nfiles","7088b903":"files = os.listdir(\"..\/input\/cpe-data\/Dept_11-00091\/11-00091_ACS_data\/\")\nfiles","f5507d14":"files = os.listdir(\"..\/input\/cpe-data\/Dept_11-00091\/11-00091_ACS_data\/11-00091_ACS_owner-occupied-housing\")\nfiles","8852dc37":"owner_data_11 = pd.read_csv('..\/input\/cpe-data\/Dept_11-00091\/11-00091_ACS_data\/11-00091_ACS_owner-occupied-housing\/ACS_16_5YR_S2502_with_ann.csv')","440b2c1a":"owner_data_11.head()","b872b4c4":"plt.title(owner_data_11['HC01_EST_VC01'][0]);\nplt.hist(owner_data_11['HC01_EST_VC01'][1:].astype(int));","9476a19a":"owner_data = pd.DataFrame()\nfor i, path in enumerate(glob.glob(\"..\/input\/cpe-data\/D*\")):\n    dep_num = path.split('_')[1]\n    df = pd.read_csv(path + '\/' + dep_num + '_ACS_data\/' + dep_num + '_ACS_owner-occupied-housing\/ACS_16_5YR_S2502_with_ann.csv')\n    df['dep_num'] = dep_num\n    if i == 0:\n        owner_data = df.iloc[1:, :]\n        col_names = {k: v for k, v in list(zip(df.columns, df.iloc[0, :].values))}\n    else:\n        owner_data = owner_data.append(df.iloc[1:, :])","30623cb5":"owner_data.head()","df83e52a":"data = []\nfor i in owner_data['dep_num'].unique():\n    trace = go.Histogram(x=owner_data.loc[owner_data['dep_num'] == i, 'HC01_EST_VC01'], name=i)\n    data.append(trace)\n    \nlayout = dict(title=f\"{col_names['HC01_EST_VC01']} by department\", margin=dict(l=200), width=800, height=400)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","a162a6dc":"Now we can compare values across departments!","2906e6e8":"Here we have one folder for shape files, aka geodata and one folder for tabular data.","011ddba1":"## Working with data structure","5e4a481c":"But plotting data from single files isn't very interesting, let's try combining data from all departments.","2d2f5144":"    Hm. It seems that the first row contains column description.","5b484e4d":"Then we have 5 folders for various data.","1d56d70a":"And at last we have the data itself and metadata.","5f3f8573":"## General information\n\nThis kernel is dedicated to extensive EDA and exploration of this Data Science for Good competition.\n\nWork is in progress.","a267bde7":"At first we have separate folders for each of 6 departments. Let's choose one of them for now.","c840e1b1":"We have unusually sophisticated data structure here."}}