{"cell_type":{"1c854831":"code","e0306308":"code","4ba023f6":"code","305459da":"code","544fed02":"code","9d14610d":"code","0fd7ea0a":"code","f6321987":"code","dfdfb5f0":"code","b585e9ee":"code","504624c2":"code","ead6ea5a":"code","5792ffae":"code","eb589f41":"code","b5fa6a5c":"code","4199dbf5":"code","f399b30e":"code","5b930737":"code","8d0be83e":"code","f6173f45":"code","1b8e9cf1":"code","086960ac":"code","67e0091b":"code","bb4c5e8a":"code","fa791f53":"code","122e5e0c":"markdown","b95fd922":"markdown","e750c49f":"markdown","cff1ce87":"markdown","dd4991bd":"markdown","d686e315":"markdown","c1c575c1":"markdown","fca3dddb":"markdown","7a803e44":"markdown","ca42c8a0":"markdown","6d5abfe2":"markdown","6f59c287":"markdown","164c25c0":"markdown","b26663e4":"markdown","94e6191b":"markdown"},"source":{"1c854831":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","e0306308":"df = pd.read_csv('..\/input\/real-estate-price-prediction\/Real estate.csv')","4ba023f6":"df.head()","305459da":"df.info()","544fed02":"sns.pairplot(data = df,\n             x_vars = [\"X1 transaction date\" ,\n                      \"X2 house age\" ,\n                      \"X3 distance to the nearest MRT station\",\n                      \"X4 number of convenience stores\" ,\n                      \"X5 latitude\" ,\n                      \"X6 longitude\" ,\n                      \"Y house price of unit area\"],\n             y_vars = [\"X1 transaction date\" ,\n                      \"X2 house age\" ,\n                      \"X3 distance to the nearest MRT station\",\n                      \"X4 number of convenience stores\" ,\n                      \"X5 latitude\" ,\n                      \"X6 longitude\" ,\n                      \"Y house price of unit area\"]\n            )","9d14610d":"# Features:\nX = df.drop(['Y house price of unit area'  , 'No'] , axis = 1)\n# Label:\ny = df['Y house price of unit area']","0fd7ea0a":"from sklearn.preprocessing import PolynomialFeatures","f6321987":"polynomial_converter = PolynomialFeatures(degree = 2, include_bias=False)","dfdfb5f0":"poly_features = polynomial_converter.fit_transform(X)","b585e9ee":"poly_features.shape","504624c2":"X.shape","ead6ea5a":"from sklearn.model_selection import train_test_split","5792ffae":"X_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)","eb589f41":"from sklearn.linear_model import LinearRegression","b5fa6a5c":"polymodel = LinearRegression()","4199dbf5":"polymodel.fit(X_train, y_train)","f399b30e":"y_pred = polymodel.predict(X_test)","5b930737":"pd.DataFrame({'Y_Test':y_test,'Y_Pred': y_pred, 'Residuals':(y_test - y_pred)}).head()","8d0be83e":"from sklearn import metrics","f6173f45":"MAE_Poly = metrics.mean_absolute_error(y_test, y_pred)\nMSE_Poly = metrics.mean_squared_error(y_test, y_pred)\nRMSE_Poly = np.sqrt(MSE_Poly)","1b8e9cf1":"pd.DataFrame([MAE_Poly,MSE_Poly,RMSE_Poly], index = ['MAE','MSE','RMSE'], columns = ['metrics'])","086960ac":"# Train List of RMSE per degree\ntrain_RMSE_List = []\n# Test List of RMSE per degree\ntest_RMSE_List = []\n\nfor d in range (1,10):\n    # preprocessing\n    # Create poly data set for degree d\n    polynomial_converter = PolynomialFeatures(degree=d, include_bias=False)\n    poly_features = polynomial_converter.fit_transform(X)\n    \n    # Split the dataset\n    X_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)\n    \n    # Train the Model \n    polymodel = LinearRegression()\n    polymodel.fit(X_train,y_train)\n    \n    # Predicting\n    y_train_pred = polymodel.predict(X_train)\n    y_test_pred = polymodel.predict(X_test)\n    \n    # Evaluating\n    # RMSE of Train set:\n    train_RMSE = np.sqrt(metrics.mean_squared_error(y_train, y_train_pred))\n    # RMSE of Test set:\n    test_RMSE = np.sqrt(metrics.mean_squared_error(y_test, y_test_pred))\n    \n    # Append the RMSE to the Train and Test List\n    train_RMSE_List.append(train_RMSE)\n    test_RMSE_List.append(test_RMSE)","67e0091b":"train_RMSE_List","bb4c5e8a":"test_RMSE_List","fa791f53":"plt.plot(range(1,5), train_RMSE_List[:4], label = 'Train RMSE')\nplt.plot(range(1,5),test_RMSE_List[:4], label = 'Test RMSE')\n\nplt.xlabel('Polynomial Degree')\nplt.ylabel('RMSE')\n\nplt.legend()","122e5e0c":"#### Evaluating Model Performance:","b95fd922":"This dataset has 8 columns. The values of X1 to X6 columns affect the price per unit area of the house in the \"Y house price of unit area\" column.","e750c49f":"#### Data Overview:","cff1ce87":"# Polynomial regression\n\nIn statistics, polynomial regression is a form of regression analysis in which the relationship between the independent variable x and the dependent variable y is modelled as an nth degree polynomial in x. Polynomial regression fits a nonlinear relationship between the value of x and the corresponding conditional mean of y, denoted E(y |x). Although polynomial regression fits a nonlinear model to the data, as a statistical estimation problem it is linear, in the sense that the regression function E(y | x) is linear in the unknown parameters that are estimated from the data. For this reason, polynomial regression is considered to be a special case of multiple linear regression.\n\nThe explanatory (independent) variables resulting from the polynomial expansion of the \"baseline\" variables are known as higher-degree terms. Such variables are also used in classification settings.[[1]](https:\/\/en.wikipedia.org\/wiki\/Polynomial_regression)\n\n**Although polynomial regression is technically a special case of multiple linear regression, the interpretation of a fitted polynomial regression model requires a somewhat different perspective. It is often difficult to interpret the individual coefficients in a polynomial regression fit, since the underlying monomials can be highly correlated.**","dd4991bd":"#### Split Data to Train And Test:","d686e315":"#### Adding Dataset:","c1c575c1":"#### Train the Model:","fca3dddb":"#### Import Libraries:","7a803e44":"#### Take a look to Test and Prediction","ca42c8a0":"#### EDA:","6d5abfe2":"#### Adjusting Model Hyperparameters","6f59c287":"#### Predicting Test Data:","164c25c0":"#### Determine Features And Label","b26663e4":"#### Preprocessing:","94e6191b":"##### According to the chart, the best degree can be numbers between 2 and 3. (2.5 and more)"}}