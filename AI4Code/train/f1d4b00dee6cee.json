{"cell_type":{"db041478":"code","2d88fdb2":"code","bbbbfdec":"code","136fc5c3":"code","84cfd595":"code","94db7559":"code","373e5907":"code","5bf97646":"code","27c34766":"code","379d6ef2":"markdown","7dc1cf35":"markdown","e009eee6":"markdown"},"source":{"db041478":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n# importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")","2d88fdb2":"# importing dataset\ndf = pd.read_csv(\"\/kaggle\/input\/police-killings\/police_killings.csv\", encoding=\"ISO-8859-1\")\ndf.head()","bbbbfdec":"df.info()","136fc5c3":"# Null values\ndf.isna().sum()","84cfd595":"#To find out duplicate values in dataset\ndf.duplicated(subset=None, keep='first').sum()","94db7559":"df.shape","373e5907":"df.columns","5bf97646":"# top 15 Number of killing\ncols=['age', 'gender', 'raceethnicity', 'month',\n       'city', 'state','lawenforcementagency', 'cause', 'armed']\nfor i in cols:\n    if i=='lawenforcementagency':\n        x=df.groupby(i).count().reset_index().iloc[:,:2].sort_values(by='name',ascending=False).head(15)\n        plt.subplots(figsize=(20,6))\n        sns.barplot(i,'name',data=x)\n        plt.xticks(rotation= 90)\n        plt.ylabel('count')\n        plt.xlabel(i)\n    else:\n        x=df.groupby(i).count().reset_index().iloc[:,:2].sort_values(by='name',ascending=False).head(15)\n        plt.subplots(figsize=(25,6))\n        sns.barplot(i,'name',data=x)\n        plt.ylabel('count')\n        plt.xlabel(i)","27c34766":"# bottom 15 Number of killing\ncols=['age', 'gender', 'raceethnicity', 'month', 'state', 'cause', 'armed']\nfor i in cols:\n    if i=='lawenforcementagency':\n        x=df.groupby(i).count().reset_index().iloc[:,:2].sort_values(by='name',ascending=True).head(15)\n        plt.subplots(figsize=(25,6))\n        sns.barplot(i,'name',data=x)\n        plt.xticks(rotation= 90)\n        plt.ylabel('count')\n        plt.xlabel(i)\n    else:\n        x=df.groupby(i).count().reset_index().iloc[:,:2].sort_values(by='name',ascending=True).head(15)\n        plt.subplots(figsize=(25,6))\n        sns.barplot(i,'name',data=x)\n        plt.ylabel('count')\n        plt.xlabel(i)","379d6ef2":"least vulnerable for killing is those people whose **age between 70-80,female,native american,lives in WY,NH,ME,CT,DC state** and **disputed**. Also least killing happens in **JUNE month** .","7dc1cf35":"**EDA**","e009eee6":"So most vulnerable for killing is those people whose **age between 25-40,male,white,lives in CA,TA,TX,FL,AZ state** and **armed with firearm**. Also most killing happens in **march month by gunshot** and beware from the **Los Angeles Police Department,US Marshals Service,Oklahoma City Police Department,Los Angeles County Sheriff's Department and Phoenix Police Department** "}}