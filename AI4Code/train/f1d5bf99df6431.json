{"cell_type":{"3210d4a8":"code","989258f0":"code","18828646":"code","f2612c13":"code","520b1fcf":"code","d05aa04b":"code","7adda864":"code","c1b9e692":"code","8c83550b":"code","7d6601a0":"code","703e9b55":"code","2cc4e79d":"code","8439b3c6":"code","c448e63c":"code","1ab5155a":"markdown","6cdd6809":"markdown","1c035bdf":"markdown","ff49d3e3":"markdown","1a34fd77":"markdown","5858c60b":"markdown","4177fb75":"markdown","15119dcb":"markdown","8c7f5844":"markdown","0c26b531":"markdown","44c66420":"markdown","20ff6792":"markdown","fc03b73e":"markdown","d14fd1df":"markdown","dd8c6718":"markdown"},"source":{"3210d4a8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom scipy import stats\nfrom xgboost import XGBRegressor","989258f0":"train = pd.read_csv('..\/input\/tps07-feature-engineering\/train.csv')\ntest = pd.read_csv('..\/input\/tps07-feature-engineering\/test.csv')\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')","18828646":"train.head()","f2612c13":"train.info()","520b1fcf":"train.describe()","d05aa04b":"carbon_monoxide = train['target_carbon_monoxide']\nbenzene = train['target_benzene']\nnitrogen_oxides = train['target_nitrogen_oxides']","7adda864":"f = plt.figure(figsize=(15,8))\n\nax = f.add_subplot(131)\nstats.probplot(carbon_monoxide, plot=ax)\nax.set_title('Carbon monoxide probability distribution')\n\nax1 = f.add_subplot(132)\nstats.probplot(benzene, plot=ax1)\nax1.set_title('Benzene probability distribution')\n\nax2 = f.add_subplot(133)\nstats.probplot(nitrogen_oxides, plot=ax2)\nax2.set_title('Nitrogen_oxides probability distribution')\n\nplt.show()","c1b9e692":"targets = train[['target_carbon_monoxide', 'target_benzene', 'target_nitrogen_oxides']].copy()","8c83550b":"pd.plotting.scatter_matrix(targets, alpha=0.5,figsize=(15, 8))\nplt.show()","7d6601a0":"train['date_time'] = train['date_time'].astype('datetime64[ns]').astype(np.int64)\/10**9\ntest['date_time'] = test['date_time'].astype('datetime64[ns]').astype(np.int64)\/10**9","703e9b55":"train.head()","2cc4e79d":"X_train = train.drop(['target_carbon_monoxide', 'target_benzene', 'target_nitrogen_oxides'], axis=1).copy()","8439b3c6":"model = XGBRegressor(random_state=3)\nmodel.fit(X_train, carbon_monoxide)\nsample_submission['target_carbon_monoxide'] = model.predict(test)\n\nmodel = XGBRegressor(random_state=3)\nmodel.fit(X_train, benzene)\nsample_submission['target_benzene'] = model.predict(test)\n\nmodel = XGBRegressor(random_state=3)\nmodel.fit(X_train, nitrogen_oxides)\nsample_submission['target_nitrogen_oxides'] = model.predict(test)","c448e63c":"sample_submission.to_csv('submission.csv', index=False)","1ab5155a":"***","6cdd6809":"We need to convert date_time column to int.","1c035bdf":"#### **NOTES**\n\n- There no missing values\n- There are NO negative observations\n- Feature scaling may be required","ff49d3e3":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n\n<p style=\"padding: 10px;\n              color:white;\n          text-align:center;\">\nLoading requirements\n             \n<\/p>\n<\/div>","1a34fd77":"##### Preprocessing","5858c60b":"#### **NOTES**\n\n- The target values are NOT Gaussian distributed as the red line does't overlap with the blue points.\n- There are EXTREME target observations(Outliers) in the data set.\n- There is an OFFSET at 0 for 'benzene' plot.","4177fb75":"#### **NOTES**\n\n- All the distributions are tail heavy(Right skewed).\n- There is a STRONG CORRELATION among target variables\n- We can see the OFFSET line in the 'benzene' feature, which we have seen in probability plot. we need to UNDER SAMPLE this data points\/remove those to minimize the effect.","15119dcb":"Let's visualize the dataset to better understand it.","8c7f5844":"# **TPS July 2021** \u2668","0c26b531":"#### looking at the statistics","44c66420":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n\n<p style=\"padding: 10px;\n              color:white;\n          text-align:center;\">\nEDA\n             \n<\/p>\n<\/div>","20ff6792":"#### Scatter matrix","fc03b73e":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n\n<p style=\"padding: 10px;\n              color:white;\n          text-align:center;\">\nModel\n             \n<\/p>\n<\/div>","d14fd1df":"Hello everyone,\n\nThis a fork of [this](https:\/\/www.kaggle.com\/jarupula\/eda-rf-model-tps-july-21) notebook to use XGBoost instead of a Random Forest and use a feature engineered dataset (see https:\/\/www.kaggle.com\/okyanusoz\/tps07-feature-engineering for the feature engineering).\n\nThis should (hopefully) give better accuracy.\n\nEnjoy!","dd8c6718":"#### Loading dataset"}}