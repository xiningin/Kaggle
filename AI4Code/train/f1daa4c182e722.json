{"cell_type":{"4f44a6ea":"code","f9d45954":"code","4301a0d0":"code","07475dc0":"code","b7ce1c47":"code","59b8ea29":"code","baa7731d":"code","c7ddba5e":"code","8bc5c2c7":"code","c504761b":"code","98d0b3db":"code","49a486d8":"code","b3be8141":"code","fd96dc54":"code","8511d940":"code","6353c3e4":"code","a0f39fc6":"markdown","dda7ed94":"markdown","6690c6f8":"markdown","7b98af62":"markdown","c6127a20":"markdown","34afb299":"markdown","4ad36220":"markdown","1f77f619":"markdown","e5981973":"markdown","c4d1def3":"markdown"},"source":{"4f44a6ea":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n# Any results you write to the current directory are saved as output.","f9d45954":"movies_data=pd.read_csv(\"..\/input\/tmdb_5000_movies.csv\")\ncredits_data=pd.read_csv(\"..\/input\/tmdb_5000_credits.csv\")\nmovies_data=movies_data[movies_data[\"vote_count\"]>1000]","4301a0d0":"movies_data.info()","07475dc0":"credits_data.info()","b7ce1c47":"f,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(movies_data.corr(),annot=True, linewidths=.5, fmt= '.2f',ax=ax,square=True)\nplt.show()","59b8ea29":"movies_data.columns","baa7731d":"movies_data.plot(kind='scatter', x='budget', y='revenue',alpha =0.6,color = 'red',figsize=(10,10))\nplt.xlabel('Budget')\nplt.ylabel('Revenue')\nplt.title('Budget - Revenue Correlation') \nplt.show()","c7ddba5e":"movies_data[(movies_data[\"budget\"]>100000000) & (movies_data[\"revenue\"]>1000000000)]","8bc5c2c7":"threshold = sum(movies_data.revenue)\/len(movies_data.revenue)\nmovies_data[\"revenues\"] = [\"high\" if i > threshold else \"low\" for i in movies_data.revenue]\nmovies_data.loc[:20,[\"original_title\",\"revenue\",\"revenues\"]]","c504761b":"print(movies_data['original_language'].value_counts())","98d0b3db":"movies_data.sort_values(\"vote_average\",axis=0,ascending=False,inplace=True)\n","49a486d8":"movies_data.boxplot(column=\"revenue\",by=\"vote_average\",figsize=(30,5))\nplt.show()","b3be8141":"new_data=movies_data.head()\npd.melt(frame=new_data, id_vars='original_title', value_vars=['vote_average'])","fd96dc54":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\n\ndate_list=movies_data[\"release_date\"]\ndatetime_object=pd.to_datetime(date_list)\nmovies_data[\"date\"]=datetime_object\nmovies_data=movies_data.set_index(\"date\")\nnew_data=movies_data.head()\nnew_data","8511d940":"movies_data.resample(\"A\").mean()","6353c3e4":"movies_data.vote_average.plot(color = 'r',label = 'vote_average',linewidth=1, alpha = 0.6,grid = True,linestyle = '-',figsize=(30,5))","a0f39fc6":"melting first five rows of data by one column","dda7ed94":"evaluating of original languages of movies","6690c6f8":"sorting movies by vote average","7b98af62":"* finding the threshold of data\n* evaluating the first 20 movies by threshold of revenue","c6127a20":"visualise the data by using heatmap of seaborn","34afb299":"plotting revenue with vote average by using boxplot","4ad36220":"printing the columns of data","1f77f619":"filtering the data by budget and revenue of those higher than 1 billion $","e5981973":"reading data files","c4d1def3":"plotting the correlation of budget and revenue by using scatter plot"}}