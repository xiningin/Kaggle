{"cell_type":{"68d00851":"code","e68a2b5b":"code","b36a448c":"code","8fd79b69":"code","bc70c569":"code","4619550b":"code","3c276693":"code","636ba0f6":"code","3f718890":"code","61aa2b19":"code","8f554434":"code","2ec2dcdd":"code","9cd95b8b":"code","a5450fa6":"code","32d67664":"code","1ab704b9":"code","b368857e":"code","e9d4f3fb":"code","82c59a1e":"code","81b4c1e3":"code","950898f5":"code","dfb867c8":"code","ba3345c2":"code","1f8bc468":"code","7ea5fd99":"code","17e86830":"code","e4ed877b":"code","375d5a16":"code","4ea0a946":"code","0084ada9":"code","7be7f1d3":"code","39eb713c":"code","83715be4":"code","a2e37d54":"code","8046b11c":"code","614c1a49":"code","25ab4cba":"code","e6f539e3":"code","c7efe44c":"code","4c22d415":"code","1fefa360":"code","c4161fda":"code","1a2c74ed":"code","b5d935f2":"code","4cbacf1d":"code","89b99d50":"markdown","5d8be276":"markdown","92f317da":"markdown","4359dc83":"markdown","51803c63":"markdown","9bdc503d":"markdown","81beae46":"markdown","324146d7":"markdown","1f1cef76":"markdown","0aaa3c52":"markdown","7bf09527":"markdown","fa76c7b1":"markdown","aa157adf":"markdown"},"source":{"68d00851":"import pandas as pd\nhousing = pd.read_csv(\"\/kaggle\/input\/california-house-price\/housing_train.csv\")\nhousing1= pd.read_csv(\"\/kaggle\/input\/california-house-price\/housing_test.csv\")","e68a2b5b":"housing.head(15)","b36a448c":"housing.info()\n\n","8fd79b69":"#housing['housing_median_age'] = 0\n#housing1['housing_median_age'] = 0","bc70c569":"housing1.info()","4619550b":"housing[\"ocean_proximity\"].value_counts()","3c276693":"housing[\"ocean_proximity\"].value_counts()","636ba0f6":"housing['total_bedrooms'].isna().sum()","3f718890":"housing1['total_bedrooms'].isna().sum()","61aa2b19":"import matplotlib.pyplot as plt\nhousing['total_bedrooms'].dropna().hist(bins=50,figsize=(7,5))\nhousing1['total_bedrooms'].dropna().hist(bins=50,figsize=(7,5))\nplt.axvline(housing['total_bedrooms'].dropna().mean(), c='red')\nplt.axvline(housing['total_bedrooms'].dropna().median(), c='green')\nplt.show()\nprint(housing['total_bedrooms'].dropna().median())","8f554434":"housing['total_bedrooms'] = housing['total_bedrooms'].fillna(housing['total_bedrooms'].dropna().median())\nhousing1['total_bedrooms'] = housing1['total_bedrooms'].fillna(housing1['total_bedrooms'].dropna().median())","2ec2dcdd":"corr_matrix=housing.corr()\ncorr_matrix","9cd95b8b":"housing.head()","a5450fa6":"housing['shari_lat'] = 0\nhousing1['shari_lat'] = 0\nhousing['shari_lon'] = 0\nhousing1['shari_lon'] = 0\nhousing['vozrast'] = 2\nhousing1['vozrast'] = 2\nhousing['dohod'] = 1\nhousing1['dohod'] = 1","32d67664":"housing.head()","1ab704b9":"housing.shari_lat[(housing.latitude<34.2522) &(33.8922<housing.latitude)] = 1000\nhousing1.shari_lat[(housing1.latitude<34.2522) &(33.8922<housing1.latitude)] = 1000\nhousing.shari_lat[(housing.latitude<37.9749) &(37.5749<housing.latitude)] = 1000\nhousing1.shari_lat[(housing1.latitude<37.9749) &(37.5749<housing1.latitude)] = 1000\nhousing.shari_lon[(housing.longitude<-118.044) &( -118.444<housing.longitude)] = 1000\nhousing1.shari_lon[(housing1.longitude< -118.044) &( -118.444<housing1.longitude)] = 1000\nhousing.shari_lon[(housing.longitude< -122.219) &( -122.619<housing.longitude)] = 1000\nhousing1.shari_lon[(housing1.longitude< -122.219) &( -122.619<housing1.longitude)] = 1000\nhousing.vozrast[(housing.housing_median_age>10) & (housing.housing_median_age<35)] = 1\nhousing1.vozrast[(housing1.housing_median_age>10) & (housing1.housing_median_age<35)] = 1\nhousing.dohod[(housing.median_income>6.3) ] = 2\nhousing1.dohod[(housing1.median_income>6.3)] = 2","b368857e":"housing.dohod.sum()","e9d4f3fb":"housing['quadrat'] = 1\nhousing1['quadrat'] = 1\nhousing.quadrat[housing.shari_lat+housing.shari_lon == 2000] = 2\nhousing1.quadrat[housing1.shari_lat+housing1.shari_lon == 2000] = 2","82c59a1e":"housing.head()\n","81b4c1e3":"housing['proximity_didgital_1']  = 1\nhousing1['proximity_didgital_1']  = 1\nindexNames = housing[ housing['ocean_proximity'] == 'INLAND' ].index\nhousing['proximity_didgital_1'][indexNames] = 2\nindexNames = housing1[ housing1['ocean_proximity'] == 'INLAND' ].index\nhousing1['proximity_didgital_1'][indexNames] = 2\nindexNames = housing[ housing['ocean_proximity'] == '<1H OCEAN' ].index\nhousing['proximity_didgital_1'][indexNames] = 1\nindexNames = housing1[ housing1['ocean_proximity'] == '<1H OCEAN' ].index\nhousing1['proximity_didgital_1'][indexNames] = 1\nindexNames = housing[ housing['ocean_proximity'] == 'NEAR BAY' ].index\nhousing['proximity_didgital_1'][indexNames] = 1\nindexNames = housing1[ housing1['ocean_proximity'] == 'NEAR BAY' ].index\nhousing1['proximity_didgital_1'][indexNames] = 1","950898f5":"housing['proximity_didgital_2']  = 2\nhousing1['proximity_didgital_2']  = 2\nindexNames = housing[ housing['ocean_proximity'] == 'INLAND' ].index\nhousing['proximity_didgital_2'][indexNames] = 1\nindexNames = housing1[ housing1['ocean_proximity'] == 'INLAND' ].index\nhousing1['proximity_didgital_2'][indexNames] = 1\nindexNames = housing[ housing['ocean_proximity'] == '<1H OCEAN' ].index\nhousing['proximity_didgital_2'][indexNames] = 1\nindexNames = housing1[ housing1['ocean_proximity'] == '<1H OCEAN' ].index\nhousing1['proximity_didgital_2'][indexNames] = 1\nindexNames = housing[ housing['ocean_proximity'] == 'NEAR BAY' ].index\nhousing['proximity_didgital_2'][indexNames] = 1\nindexNames = housing1[ housing1['ocean_proximity'] == 'NEAR BAY' ].index\nhousing1['proximity_didgital_2'][indexNames] = 1","dfb867c8":"housing['proximity_didgital_3']  = 1\nhousing1['proximity_didgital_3']  = 1\nindexNames = housing[ housing['ocean_proximity'] == 'INLAND' ].index\nhousing['proximity_didgital_3'][indexNames] = 1\nindexNames = housing1[ housing1['ocean_proximity'] == 'INLAND' ].index\nhousing1['proximity_didgital_3'][indexNames] = 1\nindexNames = housing[ housing['ocean_proximity'] == '<1H OCEAN' ].index\nhousing['proximity_didgital_3'][indexNames] = 2\nindexNames = housing1[ housing1['ocean_proximity'] == '<1H OCEAN' ].index\nhousing1['proximity_didgital_3'][indexNames] = 2\nindexNames = housing[ housing['ocean_proximity'] == 'NEAR BAY' ].index\nhousing['proximity_didgital_3'][indexNames] = 1\nindexNames = housing1[ housing1['ocean_proximity'] == 'NEAR BAY' ].index\nhousing1['proximity_didgital_3'][indexNames] = 1","ba3345c2":"housing['proximity_didgital_4']  = 1\nhousing1['proximity_didgital_4']  = 1\nindexNames = housing[ housing['ocean_proximity'] == 'INLAND' ].index\nhousing['proximity_didgital_4'][indexNames] = 1\nindexNames = housing1[ housing1['ocean_proximity'] == 'INLAND' ].index\nhousing1['proximity_didgital_4'][indexNames] = 1\nindexNames = housing[ housing['ocean_proximity'] == '<1H OCEAN' ].index\nhousing['proximity_didgital_4'][indexNames] = 1\nindexNames = housing1[ housing1['ocean_proximity'] == '<1H OCEAN' ].index\nhousing1['proximity_didgital_4'][indexNames] = 1\nindexNames = housing[ housing['ocean_proximity'] == 'NEAR BAY' ].index\nhousing['proximity_didgital_4'][indexNames] = 2\nindexNames = housing1[ housing1['ocean_proximity'] == 'NEAR BAY' ].index\nhousing1['proximity_didgital_4'][indexNames] = 2","1f8bc468":"import numpy as np\nimport seaborn as sns\n\ncorr = housing.corr()\nmask = np.triu(np.ones_like(corr,dtype = bool))\n\nplt.figure(dpi=65)\nplt.title('Correlation Analysis')\nsns.heatmap(corr,mask=mask,annot=False,lw=0,linecolor='white',cmap='magma',fmt = \"0.2f\")\nplt.xticks(rotation=90)\nplt.yticks(rotation = 0)\nplt.show()","7ea5fd99":"train_data= housing\ntest_data= housing1.drop('Id',axis=1)","17e86830":"test_data.head()","e4ed877b":"train_data.hist(bins=60, figsize=(15,9))\nplt.show()","375d5a16":"# trdata_upd : training data w\/ removed outliers\nmaxval2 = train_data['median_house_value'].max() # get the maximum value\ntrain_data_upd = train_data[train_data['median_house_value'] != maxval2] \ntrain_data_upd.hist(bins=60, figsize=(15,9))\nplt.show() # looks like its completely removed.","4ea0a946":"corr = housing.corr()\nmask = np.triu(np.ones_like(corr,dtype = bool))\n\nplt.figure(dpi=65)\nplt.title('Correlation Analysis')\nsns.heatmap(corr,mask=mask,annot=False,lw=0,linecolor='white',cmap='magma',fmt = \"0.2f\")\nplt.xticks(rotation=90)\nplt.yticks(rotation = 0)\nplt.show()","0084ada9":"train_data_upd['diag_coord'] = (train_data_upd['longitude'] \/ train_data_upd['latitude'])         # 'diagonal coordinate', works for this coord\ntrain_data_upd['bedperroom'] = train_data_upd['total_bedrooms']\/train_data_upd['total_rooms']     # feature w\/ bedrooms\/room ratio\ntest_data['diag_coord'] = (test_data['longitude'] \/ test_data['latitude'])         # 'diagonal coordinate', works for this coord\ntest_data['bedperroom'] = test_data['total_bedrooms']\/test_data['total_rooms']     # feature w\/ bedrooms\/room ratio\ntrain_data_upd['holdsperpop'] = train_data_upd['households']\/train_data_upd['population']     \ntest_data['holdsperpop'] = test_data['households']\/test_data['population']     \ntrain_data_upd['holdsperbed'] = train_data_upd['households']\/train_data_upd['total_bedrooms']     \ntest_data['holdsperbed'] = test_data['households']\/test_data['total_bedrooms']  \ntrain_data_upd['popperbed'] = train_data_upd['total_bedrooms']\/train_data_upd['population']     \ntest_data['popperbed'] = test_data['total_bedrooms']\/test_data['population']\ntrain_data_upd['diagprox_1'] = train_data_upd['diag_coord']\/train_data_upd['proximity_didgital_1']     \ntest_data['diagprox_1'] = test_data['diag_coord']\/test_data['proximity_didgital_1']\ntrain_data_upd['diagprox_2'] = train_data_upd['diag_coord']\/train_data_upd['proximity_didgital_2']     \ntest_data['diagprox_2'] = test_data['diag_coord']\/test_data['proximity_didgital_2']\ntrain_data_upd['diagprox_3'] = train_data_upd['diag_coord']\/train_data_upd['proximity_didgital_3']     \ntest_data['diagprox_3'] = test_data['diag_coord']\/test_data['proximity_didgital_3']\ntrain_data_upd['diagprox_4'] = train_data_upd['diag_coord']\/train_data_upd['proximity_didgital_4']     \ntest_data['diagprox_4'] = test_data['diag_coord']\/test_data['proximity_didgital_4']\ntrain_data_upd['agepervoz'] = train_data_upd['housing_median_age']\/train_data_upd['vozrast']     \ntest_data['agepervoz'] = test_data['housing_median_age']\/test_data['vozrast']\ntrain_data_upd['incperdoh'] = train_data_upd['median_income']\/train_data_upd['dohod']     \ntest_data['incperdoh'] = test_data['median_income']\/test_data['dohod']\ntrain_data_upd['diagquad'] = train_data_upd['diag_coord']\/train_data_upd['quadrat']     \ntest_data['diagquad'] = test_data['diag_coord']\/test_data['quadrat']\n\n\ntrain_data_upd['bedperage'] = train_data_upd['total_bedrooms']\/train_data_upd['housing_median_age']     \ntest_data['bedperage'] = test_data['total_bedrooms']\/test_data['housing_median_age'] \ntrain_data_upd['rperage'] = train_data_upd['total_rooms']\/train_data_upd['housing_median_age']     \ntest_data['rperage'] = test_data['total_rooms']\/test_data['housing_median_age'] \ntrain_data_upd['pperage'] = train_data_upd['population']\/train_data_upd['housing_median_age']     \ntest_data['pperage'] = test_data['population']\/test_data['housing_median_age'] \n\ntrain_data_upd['bedperage1'] = train_data_upd['total_bedrooms']\/train_data_upd['vozrast']     \ntest_data['bedperage1'] = test_data['total_bedrooms']\/test_data['vozrast'] \ntrain_data_upd['rperage1'] = train_data_upd['total_rooms']\/train_data_upd['vozrast']     \ntest_data['rperage1'] = test_data['total_rooms']\/test_data['vozrast'] \ntrain_data_upd['pperage1'] = train_data_upd['population']\/train_data_upd['vozrast']     \ntest_data['pperage1'] = test_data['population']\/test_data['vozrast'] \n\n\n\n","7be7f1d3":"corr = train_data_upd.corr()\nmask = np.triu(np.ones_like(corr,dtype = bool))\n\nplt.figure(dpi=65)\nplt.title('Correlation Analysis')\nsns.heatmap(corr,mask=mask,annot=False,lw=0,linecolor='white',cmap='magma',fmt = \"0.2f\")\nplt.xticks(rotation=90)\nplt.yticks(rotation = 0)\nplt.show()","39eb713c":"# first import the function from scikit-learn\nfrom sklearn.linear_model import LinearRegression\n# create a new object of Linear Regression class\nmodel = LinearRegression()\n\n","83715be4":"# fitting the model = finding the perfect line with minimum error\nx_train = train_data_upd.drop('median_house_value',axis=1)\nx_train = x_train.drop('ocean_proximity',axis=1)\ny_train = train_data_upd.median_house_value","a2e37d54":"x_train.head()","8046b11c":"y_train.head()","614c1a49":"model.fit(x_train,y_train)","25ab4cba":"endres = model.score(x_train,y_train)\nmodel.score(x_train,y_train)","e6f539e3":"x_test = test_data.drop('ocean_proximity', axis=1)","c7efe44c":"x_test.head()","4c22d415":"model.predict(x_test)","1fefa360":"\nfrom sklearn.model_selection import KFold,  cross_val_score\n\nscores = cross_val_score(model, x_train, y_train, scoring='r2', cv=10)\nscores      ","c4161fda":"predicted_prices = model.predict(x_test)","1a2c74ed":"from sklearn.metrics import make_scorer\nfrom sklearn.model_selection import KFold, cross_val_score\nfrom sklearn.metrics import mean_squared_error\n\nscorer = make_scorer(mean_squared_error,greater_is_better = False)\ndef rmse_CV_train(model):\n    kf = KFold(10,shuffle=True,random_state=42).get_n_splits(x_train.values)\n    rmse = np.sqrt(-cross_val_score(model, x_train, y_train,scoring =\"neg_mean_squared_error\",cv=kf))\n    return (rmse)","b5d935f2":"rmse_CV_train(model)","4cbacf1d":"endres","89b99d50":"\u0414\u043b\u044f \u043d\u0430\u0433\u043b\u044f\u0434\u043d\u043e\u0441\u0442\u0438:","5d8be276":"\u0426\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f median_house_value \u043e\u0447\u0435\u043d\u044c \u0441\u043b\u0430\u0431\u043e \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u0435\u0442 \u0441\u043e \u0432\u0441\u0435\u043c\u0438, \u043a\u0440\u043e\u043c\u0435 \u043e\u0434\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0437\u0434\u0435\u0441\u044c: median_income, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u0435\u0435 \u043a\u0430\u043a \u0432\u0430\u0436\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e.","92f317da":"\u0412\u0437\u0433\u043b\u044f\u043d\u0435\u043c \u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u043a\u043e\u0440\u0435\u043b\u043b\u044f\u0446\u0438\u0439","4359dc83":"# Model and Cross-Validation","51803c63":"\u0420\u0430\u0437\u0443\u043c\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u0443\u0441\u0440\u0435\u0434\u043d\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435","9bdc503d":"\u0422\u0430\u043a\u0436\u0435 \u0433\u043b\u044f\u0434\u044f \u043d\u0430 \u043e\u0431\u0449\u0443\u044e \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443, \u0437\u0430\u043c\u0435\u0442\u0438\u043c, \u0447\u0442\u043e \u0432 total_bedrooms \u043e\u0442\u0441\u0443\u0441\u0442\u0432\u0443\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0434\u0430\u043d\u043d\u044b\u0445(138)","81beae46":"\u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0442\u0435\u0441\u0442 \u0438 \u0442\u0440\u044d\u0439\u043d \u0432\u044b\u0431\u043e\u0440\u043a\u0443","324146d7":"\u0413\u043b\u044f\u0434\u044f \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u0432\u044b\u0448\u0435, \u043c\u044b \u0440\u0435\u0448\u0438\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0434\u0438\u0430\u043d\u0443 total_bedrooms.","1f1cef76":"\u0413\u043b\u044f\u0434\u044f \u043d\u0430 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445, \u0437\u0430\u043c\u0435\u0442\u0438\u043c \u0447\u0442\u043e ocean_proximity \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439","0aaa3c52":"\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 (6 \u043f\u0443\u043d\u043a\u0442)","7bf09527":"\u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0441\u0442\u0440\u0430\u043d\u043d\u044b\u0439 \u0432\u044b\u0431\u0440\u043e\u0441 \u0432 house_median_age \u0438 median_house_value, \u0443\u0434\u0430\u043b\u0438\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c","fa76c7b1":"\u0412\u043e\u043e\u0431\u0449\u0435 \u0433\u043e\u0432\u043e\u0440\u044f, \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u044f \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043b\u0443\u0447\u0448\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u043a\u043e\u0440\u0435\u043b\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0438\u043b\u0438 \u043d\u0430\u043e\u0431\u043e\u0440\u043e\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u043d\u0435\u043a\u043e\u0440\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 (\u043e\u043f\u044f\u0442\u044c \u0432\u0437\u0433\u043b\u044f\u043d\u0435\u043c \u043d\u0430 \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043a\u043e\u0440\u0435\u043b\u043b\u044f\u0446\u0438\u0439)","aa157adf":"\u0424\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438, \u0432 ISLAND \u0432\u0441\u0435\u0433\u043e \u0447\u0435\u0442\u044b\u0440\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u0430 \u043d\u0430 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445 - \u0432\u044b\u0448\u0435 1500. \u0418\u0437-\u0437\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u0441 \u043f\u043e\u0434\u0433\u043e\u043d\u043a\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u043c\u044b \u0440\u0435\u0448\u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u044d\u0442\u043e\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0438\u0437 ocean_proximity. \u041c\u044b \u043f\u0440\u0438\u043d\u044f\u043b\u0438 \u0440\u0438\u0441\u043a \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043d\u0430\u0448\u0430 \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0443\u0434\u0435\u0442 \u043c\u0435\u043d\u0435\u0435 \u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0434\u043e\u043c\u043e\u0432 \u043d\u0430 \u043e\u0441\u0442\u0440\u043e\u0432\u0430\u0445."}}