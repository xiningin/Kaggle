{"cell_type":{"e85b4000":"code","21b39081":"code","99ee2962":"code","74f75421":"code","ae4511ee":"code","320da3ca":"code","7ef1f972":"code","e027c345":"code","63bdb4ca":"code","017153ab":"code","6fad63f7":"code","2e90eb0d":"code","95a71ad7":"code","2afe9d33":"code","ca5fd152":"code","0a8869c8":"code","99655054":"code","40fb4660":"code","a0761bb5":"code","e0db49c9":"code","321be5d3":"code","9145f041":"code","bd71b8d4":"code","02105de1":"code","d28fafb8":"code","c3aea8cc":"code","5a0629c1":"code","099c8f96":"code","3a8253f5":"code","922f0a5b":"code","863eee44":"code","e86e9c96":"code","8d55fce3":"code","4d46f5f6":"code","2c6b581c":"code","b26ec497":"code","54db3933":"code","89391136":"code","46a32586":"code","8b559340":"code","d035e9c2":"code","a8938477":"code","48217f95":"code","14696507":"code","b2d700cb":"code","343a82d0":"code","a9bab741":"code","7304d6e5":"code","a7eff631":"code","a0122e1b":"code","85aaee8d":"code","459d496c":"code","8bbf48e3":"code","1fcf2498":"code","f376a34e":"code","4bd4387b":"code","20828c5c":"code","59b9e69f":"code","fb2548ef":"code","372f8c64":"code","2171bbff":"code","241f673e":"code","f37c3137":"code","3966f466":"code","27a8631d":"code","a52d2b9d":"markdown","9e84fa57":"markdown","b71988b3":"markdown","a8ed68ad":"markdown","ea90220e":"markdown","d0f58494":"markdown","8b3b04c5":"markdown","60a84acb":"markdown","be13cf2f":"markdown","6d8f58f1":"markdown","2c6eab24":"markdown","18359504":"markdown","1e2d3f66":"markdown","461b2696":"markdown","15750635":"markdown","200bf1f4":"markdown","2476ed0c":"markdown","5e497e5e":"markdown","5a5132fa":"markdown","6c3d9065":"markdown","f994309c":"markdown","d0178bcb":"markdown","527f33bb":"markdown","668a87f7":"markdown"},"source":{"e85b4000":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","21b39081":"#import chardet\n\n#rawdata = open('D:\\\\Official\\\\Machine Learning\\\\Upgrad PG Program\\\\Investment Assignment\\\\companies.csv', 'rb').read()\n#result = chardet.detect(rawdata)\n#charenc = result['encoding']\n#print(charenc)\n#print(result)","99ee2962":"# Reading Companies data , the default encoding utf-8 is giving error hence using the encoding ISO-8859-1 to read the file\ncompanies = pd.read_csv(\"\/kaggle\/input\/investment-assignment-eda\/companiesList.csv\",encoding=\"ISO-8859-1\")\ncompanies.head()","74f75421":"companies.sample(10)","ae4511ee":"companies.columns","320da3ca":"companies.shape","7ef1f972":"companies.info()","e027c345":"#Checking number of null values in each column\ncompanies.isnull().sum()","63bdb4ca":"#Converting the data in the permalink column to lower case\ncompanies[\"permalink\"] = companies[\"permalink\"].str.encode('utf-8').str.decode('ascii', 'ignore')\ncompanies[\"permalink\"] = companies[\"permalink\"].str.lower()","017153ab":"companies.describe()","6fad63f7":"#Reading rounds2 data to dataframe , the default encoding utf-8 is giving error hence using the encoding ISO-8859-1 to read the file\nrounds2 = pd.read_csv(\"\/kaggle\/input\/investment-assignment-eda\/rounds2.csv\",encoding=\"ISO-8859-1\")","2e90eb0d":"rounds2.head()","95a71ad7":"rounds2.sample(10)","2afe9d33":"#Checking number of null values in each column\nrounds2.isnull().sum()","ca5fd152":"#Converting the data in the company_permalink column to lower case\nrounds2[\"company_permalink\"] = rounds2[\"company_permalink\"].str.encode('utf-8').str.decode('ascii', 'ignore')\nrounds2[\"company_permalink\"] = rounds2[\"company_permalink\"].str.lower()","0a8869c8":"rounds2[\"company_permalink\"].describe()","99655054":"#Checking the difference in both the unique key columns\nrounds2[~rounds2['company_permalink'].str.lower().isin(companies['permalink'].str.lower())].shape","40fb4660":"#Creating Master Dataframe by merging both companies and rounds2 dataframes\nmaster_frame = pd.merge(companies, rounds2, how=\"inner\", left_on=\"permalink\", right_on=\"company_permalink\")","a0761bb5":"master_frame.head()","e0db49c9":"#deleting additional company_permalink column from the master dataframe after merging\nmaster_frame =  master_frame.drop(['company_permalink'], axis=1) \nmaster_frame.head()","321be5d3":"master_frame.shape","9145f041":"#Checking the percentage of missing values in each column\nround(100*(master_frame.isnull().sum()\/len(master_frame.index)), 2)","bd71b8d4":"#Deleting unnecessary columns\nmaster_frame = master_frame.drop('funding_round_code', axis=1)\nmaster_frame = master_frame.drop('founded_at', axis=1)\nmaster_frame = master_frame.drop('state_code', axis=1)\nmaster_frame = master_frame.drop('region', axis=1)\nmaster_frame = master_frame.drop('city', axis=1)","02105de1":"#Filling the null values in the raised_amount_usd with median based on each funding type\nmaster_frame['raised_amount_usd'] = master_frame.groupby(\"funding_round_type\").transform(lambda x: x.fillna(x.median()))\n\n#Filtering the null rows in country_code, homepage_url, category_list columns\nmaster_frame = master_frame[-master_frame[\"country_code\"].isnull()]\nmaster_frame = master_frame[-master_frame[\"homepage_url\"].isnull()]\nmaster_frame = master_frame[-master_frame[\"category_list\"].isnull()]\nround(100*(master_frame.isnull().sum()\/len(master_frame.index)), 2)","d28fafb8":"#Calculating the data loss\n100-round(100*len(master_frame.index)\/114942,2)","c3aea8cc":"master_frame.shape","5a0629c1":"# boxplot of raised_amount_usd across various funding categories\nplt.figure(figsize=(30, 15))\nsns.boxplot(x='funding_round_type', y='raised_amount_usd',data=master_frame)\nplt.yscale('log')\nplt.ylabel(\"Raised Amount in USD\")\nplt.xlabel(\"Funding Type\")\nplt.title(\"Investments in Each Funding Type\") \nplt.show()","099c8f96":"plt.figure(figsize=(20, 20))\nsns.countplot(y=\"funding_round_type\", data=master_frame, order = master_frame['funding_round_type'].value_counts().index)\nplt.ylabel(\"Funding Type\")\nplt.xlabel(\"Number of Investments\")\nplt.title(\"Investments in Each Funding Type\") \nplt.show()","3a8253f5":"#Spark funds is interested in only 'venture', 'seed', 'angel', 'private_equity' fund types hence filtering the data accordingly\nmaster_frame = master_frame[master_frame.funding_round_type.isin(['venture', 'seed', 'angel', 'private_equity'])]","922f0a5b":"master_frame.funding_round_type.value_counts()","863eee44":"# boxplot of raised_amount_usd across various funding categories\nplt.figure(figsize=(10, 7))\nsns.boxplot(x='funding_round_type', y='raised_amount_usd', palette = \"inferno\",data=master_frame)\nplt.yscale('log')\nplt.ylabel(\"Raised Amount in USD\")\nplt.xlabel(\"Funding Type\")\nplt.title(\"Investments in Each Funding Type\") \nplt.show()","e86e9c96":"#Calculating the median for the funding_round_type\nFund_Type_Analysis = round(master_frame.groupby(by='funding_round_type')['raised_amount_usd'].median()\/10**6,6).sort_values(ascending = False)\nFund_Type_Analysis","8d55fce3":"#Filtering the master dataframe for venture fund type\nmaster_frame = master_frame[master_frame.funding_round_type.isin(['venture'])]","4d46f5f6":"#Analysing the top9 countries based on the total investments\ntop9 = pd.DataFrame(round(master_frame.groupby(by='country_code')['raised_amount_usd'].sum()\/10**6,6).sort_values(ascending = False).head(n=9))\ntop9.head(n=10)","2c6b581c":"#Filtering the top 3 english speaking countries\nmaster_frame = master_frame[master_frame.country_code.isin(['USA','GBR','IND'])]","b26ec497":"#Reading the mapping data\nmapping = pd.read_csv(\"\/kaggle\/input\/investment-assignment-eda\/mappingList.csv\")","54db3933":"mapping.head()","89391136":"#Reading the sector columns\nvalue_vars = list(mapping.columns[1:])\n\n# take the setdiff() to get the rest of the variables\nid_vars = list(np.setdiff1d(mapping.columns, value_vars))\n\nprint(value_vars, \"\\n\")\nprint(id_vars)","46a32586":"#Mapping the category_list to sector\nmapping = pd.melt(mapping, \n        id_vars = id_vars, \n        value_vars = value_vars)\nmapping","8b559340":"#Filtering the value column\nmapping = mapping[mapping['value']==1]\n#Removing the value column\nmapping = mapping.drop('value', axis=1)\n#Renaming the variable column\nmapping = mapping.rename(columns={'variable': 'main_sector'})","d035e9c2":"#Splitting the category_list values by | and reading the first value from result\nmaster_frame[\"category_list\"] = master_frame[\"category_list\"].apply(lambda x : str(x).split(\"|\")[0])","a8938477":"mapping","48217f95":"#merging the mapping dataframe to master data frame\nmaster_frame = pd.merge(master_frame, mapping, how=\"inner\", left_on=\"category_list\", right_on=\"category_list\")","14696507":"master_frame.head()","b2d700cb":"#Filtering the invest ment amount between 5 - 15 million \nmaster_frame = master_frame[(master_frame[\"raised_amount_usd\"] >= 5000000) & (master_frame[\"raised_amount_usd\"] <= 15000000)]","343a82d0":"#Creating seperate datasets for each country for further analysis\nD1 = master_frame[master_frame[\"country_code\"]==\"USA\"]\nD2 = master_frame[master_frame[\"country_code\"]==\"GBR\"]\nD3 = master_frame[master_frame[\"country_code\"]==\"IND\"]","a9bab741":"D1.shape","7304d6e5":"D2.shape","a7eff631":"D3.shape","a0122e1b":"D1[\"raised_amount_usd\"].sum()","85aaee8d":"D2[\"raised_amount_usd\"].sum()","459d496c":"D3[\"raised_amount_usd\"].sum()","8bbf48e3":"D1_Temp = D1.pivot_table(values = 'raised_amount_usd',index = ['main_sector'], aggfunc = {'sum','count'})\nD1_Temp[\"Country\"] = \"USA\"\nD1_Temp[\"main sector\"] = D1_Temp.index\nD1_Temp.sort_values(by=\"count\",ascending=False)","1fcf2498":"D2_Temp = D2.pivot_table(values = 'raised_amount_usd',index = ['main_sector'], aggfunc = {'sum','count'})\nD2_Temp[\"Country\"] = \"GBR\"\nD2_Temp[\"main sector\"] = D2_Temp.index\nD2_Temp.sort_values(by=\"count\",ascending=False)","f376a34e":"D3_Temp = D3.pivot_table(values = 'raised_amount_usd',index = ['main_sector'], aggfunc = {'sum','count'})\nD3_Temp[\"Country\"] = \"IND\"\nD3_Temp[\"main sector\"] = D3_Temp.index\nD3_Temp.sort_values(by=\"count\",ascending=False)","4bd4387b":"Company1D1 = D1[D1[\"main_sector\"] == \"Others\"]\nCompany1D1.groupby(\"name\")['raised_amount_usd'].sum().sort_values(ascending=False)","20828c5c":"Company1D2 = D2[D2[\"main_sector\"] == \"Others\"]\nCompany1D2.groupby(\"name\")['raised_amount_usd'].sum().sort_values(ascending=False)","59b9e69f":"Company1D3 = D3[D3[\"main_sector\"] == \"Others\"]\nCompany1D3.groupby(\"name\")['raised_amount_usd'].sum().sort_values(ascending=False)","fb2548ef":"Company2D1 = D1[D1[\"main_sector\"] == \"Cleantech \/ Semiconductors\"]\nCompany2D1.groupby(\"name\")['raised_amount_usd'].sum().sort_values(ascending=False)","372f8c64":"Company2D2 = D2[D2[\"main_sector\"] == \"Cleantech \/ Semiconductors\"]\nCompany2D2.groupby(\"name\")['raised_amount_usd'].sum().sort_values(ascending=False)","2171bbff":"Company2D3 = D3[D3[\"main_sector\"] == \"News, Search and Messaging\"]\nCompany2D3.groupby(\"name\")['raised_amount_usd'].sum().sort_values(ascending=False)","241f673e":"plt.figure(figsize=(10, 7))\nFund_Type_Analysis.plot.bar()\nplt.ylabel(\"Raised Amount in USD\")\nplt.xlabel(\"Funding Type\")\nplt.title(\"Investments in Each Funding Type\") \nplt.show()","f37c3137":"plt.figure(figsize=(10, 7))\nEng_Spk = pd.DataFrame({'country_code': ['USA','CHN','GBR','IND','CAN','FRA','ISR','DEU','JPN'],\n                        'English_Speaking': ['Y','N','Y','Y','Y','N','Y','N','N']})\ntop9 = pd.merge(top9, Eng_Spk, how=\"inner\", left_on=\"country_code\", right_on=\"country_code\")\ntop9.reset_index(inplace=True)\nsns.barplot(x= top9[\"country_code\"],y =top9[\"raised_amount_usd\"],hue=top9[\"English_Speaking\"],ci=None)\nplt.ylabel(\"Raised Amount in USD\")\nplt.xlabel(\"Country Code\")\nplt.title(\"Investments in the Top 9 Countries\") \nplt.show()","3966f466":"Top3Sectorplot = pd.merge(D1_Temp.sort_values(by=\"count\",ascending=False).head(3),D2_Temp.sort_values(by=\"count\",ascending=False).head(3),how=\"outer\")\nTop3Sectorplot = pd.merge(Top3Sectorplot.sort_values(by=\"count\",ascending=False),D3_Temp.sort_values(by=\"count\",ascending=False).head(3),how=\"outer\")\nTop3Sectorplot","27a8631d":"plt.figure(figsize=(10, 7))\nsns.barplot(x='Country', y='count', hue='main sector',data=Top3Sectorplot)\nplt.ylabel(\"Total Investment Count\")\nplt.xlabel(\"Top 3 Countries\")\nplt.title(\"Investments in the Top 3 Sectors of the Top 3 Countries\") \nplt.show()","a52d2b9d":"# **Checkpoint 6: Plots**","9e84fa57":"**A plot showing the representative amount of investment in each funding type.**","b71988b3":"# **Checkpoint 5: Sector Analysis 2**","a8ed68ad":"**3. Top sector (based on count of investments)\n4. Second-best sector (based on count of investments)\n5. Third-best sector (based on count of investments)\n6. Number of investments in the top sector (refer to point 3)\n7. Number of investments in the second-best sector (refer to point 4)\n8. Number of investments in the third-best sector (refer to point 5)**","ea90220e":"**We lost 12.7% data in the data cleaning process**","d0f58494":"**Are there any companies in the rounds2 file which are not present in companies ?**","8b3b04c5":"# **Checkpoint 3: Country Analysis**","60a84acb":"# **Checkpoint 1: Data Cleaning 1**","be13cf2f":"**2. Total amount of investment (USD)**","6d8f58f1":"**9. For the top sector count-wise (point 3), which company received the highest investment?\n10. For the second-best sector count-wise (point 4), which company received the highest investment?**","2c6eab24":"**A plot showing the top 9 countries against the total amount of investments of funding type FT**","18359504":"# **Checkpoint 4: Sector Analysis 1**","1e2d3f66":"**This analysis shows \"venture\" type is the best investment type for spark funds based on the investment amount between 5 to 15 million USD per investment round**","461b2696":"**Based on the country analysis we know the top 3 english speaking countries as \"USA\", \"GBR\", \"IND\"**","15750635":"**The mapping data frame is a wide dataframe , this needs to be converted to narrow dataframe by mapping the category_list to each sector**","200bf1f4":"**How many unique companies are present in the companies file?**","2476ed0c":"# **Checkpoint 2: Funding Type Analysis**","5e497e5e":"**In the master dataframe the category_list column has values that are appended together with \"|\" e.g \"Application Platforms|Real Time|Social Network Media\", we need only the 1st value \"Application Platforms\" from this**","5a5132fa":"**How many unique companies are present in rounds2?**","6c3d9065":"**A plot showing the number of investments in the top 3 sectors of the top 3 countries on one chart**","f994309c":"**The box plot analysis shows there are outliers in the data**","d0178bcb":"**How many observations are present in master_frame ?**","527f33bb":"**1. Total number of investments (count)**","668a87f7":"**Now the data is cleanes without any missing values**"}}