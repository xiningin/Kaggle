{"cell_type":{"d7cdc343":"code","2d35e95c":"code","316b4e8e":"code","6c0bc78b":"code","1219bf3e":"code","38162e83":"code","a2a603cc":"code","1cfe6f6f":"code","cbfa73cb":"code","28f96b81":"code","99856732":"code","6e73cc0a":"code","80a7b78f":"code","f730619b":"code","63e2ac99":"code","5225b021":"code","a82fe040":"code","40281ddd":"code","e1ef3b32":"code","c621a55b":"code","65352b21":"code","fb114a43":"code","24bad637":"code","ef9d206c":"code","9055c48a":"code","a020ee7c":"code","fc831363":"code","fbac574f":"code","f6debadd":"code","02e7c3ab":"code","d55744a3":"markdown","28273f51":"markdown","a07ca0cb":"markdown","b043e88c":"markdown","f3650a8b":"markdown","5de97121":"markdown","6979add6":"markdown","260649b5":"markdown","ae256e31":"markdown","f52c7674":"markdown","1c6061bd":"markdown","2b2e1904":"markdown","9125fdc3":"markdown","57e73036":"markdown","d461352f":"markdown","12f771d8":"markdown","1d98e9f3":"markdown","562ee6d8":"markdown","569a0707":"markdown","cbae81c4":"markdown","09edc000":"markdown"},"source":{"d7cdc343":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n#Step1: Necessery imports\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport scipy as scipy\nimport seaborn as sns\nimport folium\nimport math\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt\nfrom folium import Marker, Circle, Choropleth\nfrom folium.plugins import MarkerCluster\nfrom pandas import DataFrame\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n#Step2: Loading the data \n#Change the csv file for another brand\n#Added Data types for memory optimization and faster loading\ndata = pd.read_csv('\/kaggle\/input\/real-estator-world-may-2021\/real_estator_world_may2021.csv')\n            \nprint(data.info()) ","2d35e95c":"#Step3:Describing the data\ndata.describe()","316b4e8e":"# Create the map\nv_map = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['longitude']) and not math.isnan(row['latitude']):\n        mc.add_child(Marker(location=[row['latitude'], row['longitude']],\n                            tooltip=str(row['Rank'])+\" Position by Rank\"))\nv_map.add_child(mc)\n\n# Display the map\nv_map","6c0bc78b":"# Create the map\nv_map = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['longitude']) and not math.isnan(row['latitude']):\n        mc.add_child(Marker(location=[row['latitude'], row['longitude']],\n                            tooltip=str(row['Rank'])+\" Position by Rank\"))\nv_map.add_child(mc)\n\n#Style map\nfolium.TileLayer('stamentoner').add_to(v_map)\n\n# Display the map\nv_map","1219bf3e":"# Create the map\nv_map = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['longitude']) and not math.isnan(row['latitude']):\n        mc.add_child(Marker(location=[row['latitude'], row['longitude']],\n                            tooltip=str(row['Rank'])+\" Position by Rank\"))\nv_map.add_child(mc)\n\n#Style map\nfolium.TileLayer('stamenwatercolor').add_to(v_map)\n\n# Display the map\nv_map","38162e83":"# Create the map\nv_map = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['longitude']) and not math.isnan(row['latitude']):\n        mc.add_child(Marker(location=[row['latitude'], row['longitude']],\n                            tooltip=str(row['Rank'])+\" Position by Rank\"))\nv_map.add_child(mc)\n\n#Style map\nfolium.TileLayer('openstreetmap').add_to(v_map)\n\n# Display the map\nv_map","a2a603cc":"# Create the map\nv_map_heat = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n\n# Add a heatmap to the base map\n\nfolium.plugins.HeatMap(data=data[['latitude', 'longitude']], radius=13).add_to(v_map_heat)\n\n\n# Display the map\nv_map_heat","1cfe6f6f":"# Create a Bubble base map\nm_bubble_focus = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2)\n\ndef color_producer(val):\n    if val <= 125:\n        return 'blue'\n    if val >= 125 and val<= 375:\n        return 'yellow'\n    else:\n        return 'red'\n\n# Add a bubble map to the base map\nfor i in range(0,len(data)):\n    Circle(\n        location=[data.iloc[i]['latitude'], data.iloc[i]['longitude']],\n        radius=20,\n        color=color_producer(data.iloc[i]['Rank'])).add_to(m_bubble_focus)\n\n# Display the map\nm_bubble_focus","cbfa73cb":"# Create a Bubble base map\nm_bubble_detail = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2)\n\ndef color_producer(val):\n    if val <= 100:\n        return 'blue'\n    if val >= 100 and val<= 200:\n        return 'yellow'\n    if val >= 200 and val<= 300:\n        return 'orange'\n    if val >= 300 and val<= 400:\n        return 'red'\n    else:\n        return 'black'\n\n# Add a bubble map to the base map\nfor i in range(0,len(data)):\n    Circle(\n        location=[data.iloc[i]['latitude'], data.iloc[i]['longitude']],\n        radius=20,\n        color=color_producer(data.iloc[i]['Rank'])).add_to(m_bubble_detail)\n\n# Display the map\nm_bubble_detail","28f96b81":"# Create the map\nv_map_mortgage = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['longitude']) and not math.isnan(row['latitude']):\n        mc.add_child(Marker(location=[row['latitude'], row['longitude']],\n                            tooltip= str(row['MortgageAsAPercentageOfIncome'])+\"%\"))\n                      \nv_map_mortgage.add_child(mc)\n\n# Display the map\nv_map_mortgage","99856732":"data.sort_values(by='Rank', ascending=True).head(10)","6e73cc0a":"\n# Create the map\nv_map_mortgage = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['longitude']) and not math.isnan(row['latitude']):\n        mc.add_child(Marker(location=[row['latitude'], row['longitude']],\n                            tooltip= str(row['GrossRentalYieldCityCentre'])+\"%\"))\n                      \nv_map_mortgage.add_child(mc)\n\n# Display the map\nv_map_mortgage","80a7b78f":"# Create a Bubble base map\nm_bubble_detail = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2)\n\ndef color_producer(val):\n    if val >= 9:\n        return 'blue'\n    if val <= 8 and val>= 7:\n        return 'yellow'\n    if val <= 6 and val>= 5:\n        return 'orange'\n    if val <= 4 and val>= 3:\n        return 'red'\n    else:\n        return 'black'\n\n# Add a bubble map to the base map\nfor i in range(0,len(data)):\n    Circle(\n        location=[data.iloc[i]['latitude'], data.iloc[i]['longitude']],\n        radius=20,\n        color=color_producer(data.iloc[i]['GrossRentalYieldCityCentre'])).add_to(m_bubble_detail)\n\n# Display the map\nm_bubble_detail","f730619b":"data.sort_values(by='GrossRentalYieldCityCentre', ascending=False).head(10)","63e2ac99":"# Create the map\nv_map_mortgage = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data.iterrows(): \n    if not math.isnan(row['longitude']) and not math.isnan(row['latitude']):\n        mc.add_child(Marker(location=[row['latitude'], row['longitude']],\n                            tooltip= str(row['GrossRentalYieldOutsideofCentre'])+\"%\"))\n                      \nv_map_mortgage.add_child(mc)\n\n# Display the map\nv_map_mortgage","5225b021":"# Create a Bubble base map\nm_bubble_detail = folium.Map(location=[39.760982,10.00065], tiles='cartodbpositron', zoom_start=2)\n\ndef color_producer(val):\n    if val >= 9:\n        return 'blue'\n    if val <= 8 and val>= 7:\n        return 'yellow'\n    if val <= 6 and val>= 5:\n        return 'orange'\n    if val <= 4 and val>= 3:\n        return 'red'\n    else:\n        return 'black'\n\n# Add a bubble map to the base map\nfor i in range(0,len(data)):\n    Circle(\n        location=[data.iloc[i]['latitude'], data.iloc[i]['longitude']],\n        radius=20,\n        color=color_producer(data.iloc[i]['GrossRentalYieldOutsideofCentre'])).add_to(m_bubble_detail)\n\n# Display the map\nm_bubble_detail","a82fe040":"data.sort_values(by='GrossRentalYieldOutsideofCentre', ascending=False).head(10)","40281ddd":"#controls the numer of rows to be read in the dataframe\nstart, end = 0, 529","e1ef3b32":"\n\nfig = go.Figure(data=go.Scatter3d(\n    x=data['GrossRentalYieldCityCentre'][start:end],\n    y=data['GrossRentalYieldOutsideofCentre'][start:end],\n    z=data['PriceToRentRatioCityCentre'][start:end],\n    text=data['city'][start:end],\n    mode='markers',\n    marker=dict(\n        sizemode='diameter',\n        sizeref=20,\n        size=data['MortgageAsAPercentageOfIncome'][start:end],\n        color = data['MortgageAsAPercentageOfIncome'][start:end],\n        colorscale = 'Viridis',\n        colorbar_title = 'MortgageAsAPercentageOfIncome<br>',\n        line_color='rgb(140, 140, 170)'\n    )\n))\n\n\n\n\n\n\n\n\nfig.update_layout(height=800, width=800,\n                  title='3-D Graph - X-GrossRentalYieldCityCentre,Y-GrossRentalYieldOutsideofCentre,Z-PriceToRentRatioCityCentre,Size-MortgageAsAPercentageOfIncome,Color-MortgageAsAPercentageOfIncome')\n\n\n\n\n\n\nfig.show()","c621a55b":"#Finding correlations\n\ncorr = data.corr()\n\nmask = np.triu(np.ones_like(corr, dtype=np.bool))\ncorr = corr.mask(mask)\nfig = ff.create_annotated_heatmap(\n    z=corr.to_numpy().round(2),\n    x=list(corr.index.values),\n    y=list(corr.columns.values),       \n    xgap=3, ygap=3,\n    zmin=-1, zmax=1,\ncolorscale='icefire',\n    colorbar_thickness=30,\n    colorbar_ticklen=3,\n)\nfig.update_layout(title_text='Correlation Matrix (impact relationship with numbers)',\n                  title_x=0.5,\n                  titlefont={'size': 20},\n                  width=800, height=800,\n                  xaxis_showgrid=False,\n                  xaxis={'side': 'bottom'},\n                  yaxis_showgrid=False,\n                  yaxis_autorange='reversed',                   \n                  paper_bgcolor=None,\n                  template=\"simple_white\"\n                  )\nfig.show()","65352b21":"sns.pairplot(data,palette='bright')\n%time","fb114a43":"sns.set(style=\"ticks\", color_codes=True)\ng = sns.pairplot(data, kind=\"reg\", plot_kws={'line_kws':{'color':'red'}})\nplt.show()\n%time","24bad637":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"GrossRentalYieldCityCentre\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","ef9d206c":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"GrossRentalYieldOutsideofCentre\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","9055c48a":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"PriceToRentRatioCityCentre\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","a020ee7c":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"PriceToRentRatioOutsideOfCityCentre\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","fc831363":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"AffordabilityIndex\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","fbac574f":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"longitude\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","f6debadd":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"GrossRentalYieldOutsideofCentre\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","02e7c3ab":"sns.jointplot(x=\"MortgageAsAPercentageOfIncome\", y=\"latitude\", data=data, kind = 'reg',fit_reg= True, size = 12)\nplt.show()","d55744a3":"# POSITION BY RANK - Stamentoner ","28273f51":"# Best cities to invest in City Centre - Gross rental yield as % Map\n* Blue color shows the Top  Where you should to be focused and the top 10%\n* Yellow - Shows the Top - Where you should be focused and the top 10% to 20%\n* Orange - Shows the Top average and the top 20% to 40%\n* Red - Shows  the Average and the bottom 20%\n* Black - Shows the bottom aveage and the bottom 10%","a07ca0cb":"# Finding Influences - Correlation Matrix (impact relationship with numbers)","b043e88c":"# Mortgage as % of average income Map\n* Shows the number of entries by Continent,Country e.t.c.\n* Shows the  % of average income as mortgage on tooltip - the smaller % is the better\n\n","f3650a8b":"# 3-D Graph","5de97121":"# Heatmap by Rank Map\n* Shows the distribution of entries by Continent,Country coloring them\n","6979add6":"# Best cities to invest in Outside of City Centre - Gross rental yield as % Map\n* Where buy-to-let property earns the most\n* Shows the Gross rental yield as % on Map tooltip. \n* The higher number is the better one","260649b5":"# Describing the data","ae256e31":"# Top 10 cities to invest in Outside of City Centre - Gross rental yield as % :","f52c7674":"# Top 10 cities to Live and Mortgage ","1c6061bd":"# Pairplots and Linear Predictions","2b2e1904":"# Maps","9125fdc3":"# Position by Rank - Detailed Color Bubble Map \n* Blue color shows the Top 100 - Where you shoul to be focused and the top 20%\n* Yellow - Shows the Top 100-200 - Where you should be focused and the top 20-40%\n* Orange - Shows the Top 200-300 - This is the average and the top 40-60%\n* Red - Shows the Top 300-400 - Where you should avoid and the bottom 20-40%\n* Black - Shows the Top 400-500 - Where you should avoid and the bottom 20%","57e73036":"***'3-D Graph - X-GrossRentalYieldCityCentre,Y-GrossRentalYieldOutsideofCentre,Z-PriceToRentRatioCityCentre,Size-MortgageAsAPercentageOfIncome,Color-MortgageAsAPercentageOfIncome*****","d461352f":"# Top 10 cities to invest in City Centre - Gross rental yield as % :","12f771d8":"# Best cities to invest in City Centre - Gross rental yield as % Map\n* Where buy-to-let property earns the most\n* Buy it to rent it\n* Shows the Gross rental yield as % on Map tooltip. \n* The higher number is the better one","1d98e9f3":"# Position by Rank Map\n* Shows the number of entries by Continent,Country e.t.c.\n* Shows the Rank on the tooltip\n* Rank is influenced by the affordability for the working class, because it takes to account how much property can you buy on average wage ","562ee6d8":"# Position by Rank - Focused Color Bubble Map \n* Green color shows the top 25%\n* Yellow color shows average 50%\n* Red color shows the bottom 25%","569a0707":"# POSITION BY RANK - Stamenwatercolor","cbae81c4":"# POSITION BY RANK - OPENSTREETMAP","09edc000":"# Real Estate World 3-D Top 500 Cities Plus\n* The application helps people find the best real estate deals in the World.\n* The application helps people make informed decisions.\n* The application visualizes data on maps.\n* Examines the average and makes predictions on various factors.\n* Examines factors like affordability, price to income e.t.c.\n* Draws Maps and Heatmaps.\n* Creates 3-D Visualizations.\n* Shows the Top 10.\n* Shows the correlation between factors with heatmaps.\n* Make Predictions\n* Is optimized to work with large datasets."}}