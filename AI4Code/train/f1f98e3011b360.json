{"cell_type":{"2f582aa6":"code","737cff20":"code","be5ef85d":"code","df966492":"code","6cb2af4e":"code","2d7fcbc0":"code","f0219773":"markdown","8c4b04e8":"markdown","19957046":"markdown","1feed617":"markdown","35e4d627":"markdown","4d18b57f":"markdown"},"source":{"2f582aa6":"import pandas as pd","737cff20":"df = pd.read_csv(\"..\/input\/karl-fristons-papers-metadata\/frisons_papers_metadata.csv\")\ndf.head()","be5ef85d":"df_first_author = df[df['authorString'].str.startswith('Friston')]\nlen(df_first_author)","df966492":"df_first_author_oa = df_first_author[df_first_author['isOpenAccess']]\nlen(df_first_author_oa)","6cb2af4e":"import requests\nurl_tmpl = \"https:\/\/www.ebi.ac.uk\/europepmc\/webservices\/rest\/{id}\/fullTextXML\"\nfor id in df_first_author_oa['id'].to_list():\n    r = requests.get(url=url_tmpl.format(id=id))\n    assert r.status_code == 200, \"Downloading {id} failed.\".format(id=id)\n    with open(id + '.xml','w') as f:\n        f.write(r.text)\n        ","2d7fcbc0":"!ls","f0219773":"We have downloaded metadata for papers authored by a famous neuroscientist in [this notebook](https:\/\/www.kaggle.com\/chrisfilo\/using-europepmc-api-to-access-academic-papers) - now we are loading into a dataframe.","8c4b04e8":"We don't want all the papers on the list - only those where Friston is the first author.","19957046":"That's it! Different types of modelling will require different preprocessing of these papers. [Here's an example showing how to remove all XML tags](https:\/\/www.kaggle.com\/chrisfilo\/turn-xml-papers-into-plain-text).","1feed617":"Only open access papers will have full text available - lets limit our list to those.","35e4d627":"# Using EuropePMC API to download academic papers\nIn this notebook I will show how one can use [EuropePMC](https:\/\/europepmc.org\/) to download full text of open access academic papers. [EuropePMC](https:\/\/europepmc.org\/) is a large repository of academic papers that includes metadata of many publications and full text of some.","4d18b57f":"We will iterate over the list of papers and use their `id` to calle the `\/fullTextXML` endpoint that will return XML version of papers. We will then download each of them and save to individual XML files."}}