{"cell_type":{"51751edc":"code","02d5c271":"code","e2b4f57d":"code","1ca082c7":"code","3234ef28":"code","9a9b0e4b":"code","9c22e060":"code","50c49315":"code","0daa62be":"code","9fd11f3f":"code","b96b4522":"code","2a5fc309":"code","241f55f4":"code","287ec088":"code","c8b20a0f":"code","20196a6a":"code","58b2a3ec":"code","484fe04e":"code","6f7b31d2":"code","bb999ddd":"markdown","a77bb038":"markdown","2998d0c6":"markdown","8002ad27":"markdown","25bfbef9":"markdown","ac9073a3":"markdown","08467000":"markdown","368bbfc3":"markdown","eeafe589":"markdown","43a6397a":"markdown","f14da0c6":"markdown","51a782d0":"markdown","153d6f66":"markdown","e890d917":"markdown","6b2adb3a":"markdown","3f82cd12":"markdown","745d73a3":"markdown","0c8003f0":"markdown","f6c40184":"markdown","c2ee7bcb":"markdown","af984aef":"markdown","b9ede154":"markdown","4992e55a":"markdown","cbdbce07":"markdown","88360837":"markdown","33be5249":"markdown"},"source":{"51751edc":"import numpy as np\nimport pandas as pd\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom datetime import datetime\nimport re\nfrom IPython.core.display import display\n\ndataf = pd.read_csv('..\/input\/noshowappointments\/KaggleV2-May-2016.csv')\ndataf.head(2)","02d5c271":"row, col = dataf.shape\n\nprint('our dataset has {} rows and {} columns.'.format(row, col))","e2b4f57d":"# information about the columns of the data\ndataf.info()","1ca082c7":"# statistical values about the columns of the data\ndataf.describe()","3234ef28":"# numbers of uniques values for each variable (column)\ndataf.nunique()","9a9b0e4b":"dup = dataf.duplicated().sum()\n\nprint('our data has {} duplicates rows.'.format(dup))","9c22e060":"dataf.set_index('AppointmentID',inplace= True)","50c49315":"# use regex to rename the columns\ndataf.rename(columns = lambda x: re.sub('([a-z0-9])([A-Z])', r'\\1_\\2', x).lower(), inplace= True)\n# handle the renaming of the no-show column\ndataf.rename(columns= {'no-show': 'no_show'}, inplace= True)","0daa62be":"# only show data with age more than 0 years old\ndataf = dataf[dataf.age > 0]\n\n# eliminate outlires using IQR method\n# [Note: we can calculate Q1 and Q3 using Numpy but we already know the values]\niqr = 56-19\nll = int(19 - (1.5 * iqr))\nul = int(56 + (1.5 * iqr))\ndataf = dataf[(dataf.age >= ll) & (dataf.age <= ul)]\n\n# categorizing ages:\nbins = [0,7,13,21,50,120]\ngrp_names = ['child', 'kid', 'teen', 'adult', 'boomer']\ndataf['age_grp'] = pd.cut(dataf.age, bins= bins, labels= grp_names)\ndataf[['age','age_grp']]","9fd11f3f":"# convert patient_id to string with an integer number\ndataf.patient_id = dataf.patient_id.astype('int64').astype('str')\n\n# convert the times values for Scheduled and appointment days to datetime data type\ndataf.scheduled_day.apply(lambda x: datetime.strptime(x,\"%Y-%m-%dT%H:%M:%S%z\"))\ndataf.scheduled_day = pd.to_datetime(dataf.scheduled_day).dt.tz_localize(None)\n\ndataf.appointment_day.apply(lambda x: datetime.strptime(x,\"%Y-%m-%dT%H:%M:%S%z\"))\ndataf.appointment_day = pd.to_datetime(dataf.appointment_day).dt.tz_localize(None)\n\n# convert yes and no to 1 and 0 to make all boolean values consistent\ndataf.no_show = dataf.no_show.apply(lambda x: 1 if x == 'Yes' else 0).astype('int64')\n","b96b4522":"def sub_data_visual(df, val):\n    '''\n    the method helps create:\n    1. extract 1-D sub dataframe grouped by variable to show percentage\n    for show and no-show percentage for each varaible value.\n    2. extract 2-D sub dataframe grouped by variable and gender to show percentage\n    for show and no-show percentage for each varaible value regarding the gender.\n    3. illustrate 2 pie charts for show and no-show percentages in the 1-D dataframe.\n    4. illustrate facet bar chart of genders for show and no-show percentage in the 2-D dataframe.\n\n    Args:\n    df <pandas.DataFrame> : The dataset as a dataframe.\n    val <str> : string of the variable name in the dataset to make the analysis and visualization about it\n\n    Return:\n    display the sub dataframes and plots\n    '''\n    # seperator line\n    sep_ln = \"-\" * 50\n\n    # group the data with the variable and relative percentage for show and no-show\n    df_1D = df.groupby(val)['no_show'].value_counts(normalize= True) \\\n        .unstack('no_show').reset_index().rename(columns = {0 : 'show', 1 : 'no_show'})\n\n    # display the sub dataframe followed by the seperator line\n    display(df_1D)\n    print(sep_ln)\n    \n    # plot the pie chart for show an appointment versus the variable values\n    fig_1D_show = px.pie(df_1D,\n    values= 'show',\n    names = val,\n    )\n    \n    # make and design the title of the plot\n    fig_1D_show.update_layout(title = {\n        'text': \"{} VS Appointment Showing\".format(val.title()),\n        'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'}\n        )\n\n    # show the plot followed by the seperator line\n    fig_1D_show.show()\n    print(sep_ln)\n\n    # plot the pie chart for no-show an appointment versus the variable values\n    fig_1D_no_show = px.pie(df_1D,\n    values= 'no_show',\n    names = val,\n    )\n    \n    # make and design the title of the plot\n    fig_1D_no_show.update_layout(title = {\n        'text': \"{} VS Appointment No-Showing\".format(val.title()),\n        'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'}\n        )\n\n    # show the plot followed by the seperator line\n    fig_1D_no_show.show()\n    print(sep_ln)\n\n    # Group the data with the variable and gender and relative percentage for show and no-show\n    df_2D = df.groupby([val, 'gender'])['no_show'].value_counts(normalize= True) \\\n        .unstack('no_show').reset_index().rename(columns = {0: 'show', 1: 'no_show'})\n\n    # display the sub dataframe followed by the seperator line\n    display(df_2D)\n    print(sep_ln)\n\n    # plot the bar chart for show an appointment status versus the variable values facet by the gender of the patient\n    fig_2D = px.bar(df_2D,\n    x= val,\n    y= ['show','no_show'],\n    barmode= 'group',\n    facet_col= 'gender'\n    )\n\n\n    # make and design the title of the plot\n    fig_2D.update_layout(title = {\n        'text': \"{} and Gender VS Appointment Showing Status\".format(val.title()),\n        'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'}\n        )\n\n    # show the plot followed by the seperator line\n    fig_2D.show()\n    print(sep_ln)\n","2a5fc309":"sub_data_visual(dataf, 'age_grp')","241f55f4":"sub_data_visual(dataf, 'scholarship')","287ec088":"sub_data_visual(dataf, 'hipertension')","c8b20a0f":"sub_data_visual(dataf, 'diabetes')","20196a6a":"sub_data_visual(dataf, 'alcoholism')","58b2a3ec":"sub_data_visual(dataf, 'handcap')","484fe04e":"sub_data_visual(dataf, 'sms_received')","6f7b31d2":"# correlation matrix\ncorr = dataf.corr()\n\n# initiate figure\nfig, ax = plt.subplots(figsize= (12,8))\n\n# draw the heatmap\nax = sns.heatmap(corr, annot= True, linewidths=3)\n\n# show the figure\nfig.show()","bb999ddd":"## 3. Data types:\nif we check the datatypes and the values from our exploration to the data we will find the following:\n1. Patient Id is a float number which is not suitable type for it, as ID it should be a string with integer value.\n2. Both of Scheduled and Appointment day are strings with timezone format, we need them to be datetimes.\n3. No-Show values which is boolean is the only boolean values in the data with string format, we should make our data consistent.","a77bb038":"## 1. Standardize columns names:\ncolumns names is important for us to be standardized and easy to write because we always use it, Python naming recommend the snake_case so we will convert all of our columns names to use it.","2998d0c6":"## 5. Alcoholism:\n### A. our fifth question:\n**Do the alcoholism patients don't show for the appointment due to their state?**","8002ad27":"# Secrets of our data:\n***\nFirst, let's learn more about our data variables and values with help of *pandas* to show some information and statistical parameters.","25bfbef9":"### B. Conclusion:\n\nWe see that having a hipertension has a slight effect for the showing status of the patients too.  \nWe see that the most of showing patients have a hipertension while the most of no-showing patients don't have hipertension.  \nMaybe the patients who have hipertension take care for themselves in Brazil more than who don't have.  \n**But again we can't make a decision of this data**  \nAgain we see that the gender has no effect on the hipertension.\n","ac9073a3":"# Overall Conclusion:\n***\nWe see that our data variables han no or slight effect to the showing and no-showing the appointments.  \nIt maybe the analysis technique or visuaization way or the data itself.  \n\nLet's check the data correlation matrix and visualize it as graph to see if our variables correlate with each other or not.  \nBelow we see that all the variables aren't negative or possitive correlated with no-show variable and that's answering why we can't know the effect of variables on showing status of the patients.  \n\n**The problem is more in the data**","08467000":"## 4. Diabetes:\n### A. our forth question:\n**Do the patients who have diabetics have pronblems to show for an appointment?**","368bbfc3":"## 6. Handicap:\n### A. our sixth question:\n**Do the handicapped patients don't show for the appointment because the disability?**","eeafe589":"# Introduction:\n---\nThis dataset show the data for about 111K patients in Brazil with about 14 variables that you can know abouth them from [here](https:\/\/www.kaggle.com\/joniarroba\/noshowappointments).\n\nToday I'll explore and analyze the relation between ethe variable to see if we can know answers for our following questions:\n1. Does the age of patients affect why they are show or no-show for an appointment?\n2. Does the enrollment in the government scholarship a reason to no-show for an appointment?\n3. Do the patients who have hipertension have pronblems to show for an appointment?\n4. Do the patients who have diabetics have pronblems to show for an appointment?\n5. Do the alcoholism patients don't show for the appointment due to their state?\n6. Do the handicapped patients don't show for the appointment because the disability?\n7. Does the SMS reminder before an appointment has an affect to the patients?\n8. Does the gender has an affect?\n\nWe need to understand the patients behavior for showing and no-showing to the doctors appointments so we need to answer our quesetions maybe we will find a clue.\n\nData Analysis will make it possible for us, **Let's start**","43a6397a":"Okay we learn some of points about our data such as:\n* No Duplicates Rows.\n* No Uniqueness in **Appointment IDs**.\n* Our Data has **110527** record (Appointment) and **13** variable.\n* There are no **null** values.\n\nfrom the pervious point we can set the **Appointment IDs** as our data's index.","f14da0c6":"### B. Conclusion:\n\nWe see that having a diabetes has a slight effect for the showing status of the patients too.  \nWe see that the most of showing patients have a diabetes while the most of no-showing patients don't have diabetes.  \nMaybe the patients who have diabetes take care for themselves in Brazil more than who don't have.  \n**Again we can't answer using this data**  \nAgain we see that the gender has no effect on the diabetes.\n","51a782d0":"### B. Conclusion:\n\nThe answer of the question is not clear.  \nWe see that boomers show more than the others but with slight different and the teens no-show for the appointments the most.  \nRegarding the gender there's no clue too.  \nSo the gender has no affect on the age group.  \n\n**Do you see our data can help us answer that question with high certinity?**  \nI don't see that, we need more investigation to see if the age group has an effect maybe our analysis are missing something.","153d6f66":"## 7. SMS Received:\n### A. our seventh question:\n**Does the SMS reminder before an appointment has an affect to the patients?**","e890d917":"# Answering our Question:\n---\nto answer our question we will use the visuals, they make the reading of the output more easily.\n\nBefore starting answering questions let me tell you what we are going to do:\n1. **Answering our last question will make us illustrate each variable effect to show and no-show variable independent and dependent on the patients gender, so for each question you will see 2 data and 3 graphs:**\n   1. Table to show the percentage of show and no-show patients to all the patients according to the variable.\n   2. Pie Chart illustrate **the show percentages** for the variable values.\n   3. Pie Chart illustrate **the no-show percentages** for the variable values.\n   4. Table to show the percentage of show and no-show patients relative to the total patients according to the variable **regarding the gender** .\n   5. Bar Plot splitted to two plots one for each gender to illustrate the percentages for both show and no-show according to the variable values\n2. **We will discuss a conclusion as an answer about each question after illustrate the data.**\n\n*I use a function that you will see below to help me illustrate and answering question faster to focus more on the results.*\n*I use plotly module to make the graphs because it's fast to plot and has an interactive figures in th eoutput*\n","6b2adb3a":"## 2. Age column:\nwe can see from `.describe()` output that the age column has two issues:\n1. Negative values.\n2. High standard diviation may indicate that there are outlires.\n\nalso to read the data more clearly we need a column to describe the category of the age, we will categorize the ages to 5 groups as following:\n1. Child : for ages &lt; 7 years old.\n2. Kid : for ages between 7 and 13 years old.\n3. Teen : for ages between 13 and 21 years old.\n4. Adult : for ages between 21 and 50 years old.\n5. Boomer : for ages &gt; 50 years old.","3f82cd12":"# Closure:\n\nwe may got more questions by reading our data after clean it, maybe you got more relations you are curious about in the data, we cannot see an end to our curiousity or mind while playing and analyzing datasets.\n\nwish to make you inspired and get some information about our data.\n\nThanks.","745d73a3":"# References:\n\n1. [Plotly](https:\/\/plotly.com\/python\/).\n2. [Pandas](https:\/\/pandas.pydata.org\/docs\/reference\/index.html).\n3. [Apply multiple functions to multiple groupby columns](https:\/\/stackoverflow.com\/a\/47103408\/8410800).\n4. [Grouping \/ Categorising ages column in Python Pandas](https:\/\/stackoverflow.com\/a\/52753673\/8410800).\n5. [Elegant Python function to convert CamelCase to snake_case?](https:\/\/stackoverflow.com\/a\/1176023\/8410800).\n6. [How to remove timezone from a Timestamp column in a pandas dataframe](https:\/\/stackoverflow.com\/a\/49210679\/8410800).\n7. [Date Time Formats in Python](https:\/\/stackoverflow.com\/a\/17594571\/8410800).","0c8003f0":"### B. Conclusion:\n\nWe see that disabilities has a confusion effect for the showing status of the patients.  \nNumber of disabilities has no meaning to the showing status.  \n**The handicap data aren't logical in the dataset or have something weird we can't understand it**  \nBut we see that the gender has an effect on handicapped patients.  \n","f6c40184":"### B. Conclusion:\n\nWe see that alcoholism has no effect for the showing status of the patients.  \n**The alcholism data aren't significant in the dataset**  \nBut we see that the gender has an effect on alcoholism.  \nMost of females that show to the appointments aren't alcoholic but most of the males that show to the appointments are alcoholic **and vice versa**.\n","c2ee7bcb":"### B. Conclusion:\n\nWe see that getting a SMS before the appointments has a strange effect on the showing status.  \nPatients who don't recevie SMS show more than who receive SMS.  \nMaybe the SMS has some issue or not catchy or have a bad format, we should discover that.  \n**Although the effect isn't logical and small but we can say that receving SMS or not before the appointments has an effect on the showing status**  \nBut we don't see that the gender has an effect on receiving SMS.\n","af984aef":"Also we observe some of issues and notes that may make our analysis hard or not significant, Let's discuss each point seperately and clean our data from this issues.\n\n# Clean the data:\n***","b9ede154":"# Importing modules and read the data:\n***\nFirst let's import the modules that we are gonna use it and load our data from the resource file.","4992e55a":"## 1. Age Group:\n### A. our first question:\n**Does the age of patients affect why they are show or no-show for an appointment?**","cbdbce07":"## 2. Scholarship:\n### A. our second question:\n**Does the enrollment in the government scholarship a reason to no-show for an appointment?**","88360837":"## 3. Hipertension:\n### A. our third question:\n**Do the patients who have hipertension have pronblems to show for an appointment?**","33be5249":"### B. Conclusion:\n\nWe see that the enrollment in the government scholarship [**Bolsa Fam\u00edlia**](https:\/\/en.wikipedia.org\/wiki\/Bolsa_Fam%C3%ADlia) has a slight effect for the showing status of the patients.  \nWe see that the most of showing patients are not enrolled in the scholarship while the most of no-showing patients are students enrolled in the scholarship.  \n**But we can't tell the truth and make a decision of this data as the different is about **4%****  \nAgain we see that the gender has no effect on the scholarship enrollment.\n"}}