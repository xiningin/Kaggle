{"cell_type":{"f172673f":"code","fe80c4d8":"code","f7fd8ed1":"code","2090a9a0":"code","dc97cdc7":"code","836dcbb8":"code","a58032e2":"code","b5d1f957":"code","9f0605e2":"code","d1f80da3":"code","0aa91c7a":"code","997bb2d8":"markdown"},"source":{"f172673f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fe80c4d8":"data = pd.read_csv('..\/input\/fifa19\/data.csv')\ndata.head(10)","f7fd8ed1":"data.info()","2090a9a0":"data.corr()","dc97cdc7":"f,ax = plt.subplots(figsize=(30,30))\nsns.heatmap(data.corr(), annot=True, linewidths=5, fmt='.1f',ax=ax)\nplt.show()\n","836dcbb8":"data.columns","a58032e2":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.Age.plot(kind = 'line', color = 'g',label = 'Age',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.SprintSpeed.plot(color = 'r',label = 'SprintSpeed',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","b5d1f957":"data.plot(kind='scatter', x='Age',y = 'SprintSpeed',alpha = 0.5,color = 'r')\nplt.xlabel('Age')\nplt.ylabel('SprintSpeed')\nplt.title('Age SprintSpeed Scatter Plot')\nplt.show()","9f0605e2":"data.SprintSpeed.plot(kind='hist',bins = 50 ,figsize = (12,12))\nplt.show()","d1f80da3":"x = data['Age']>41\ndata[x]","0aa91c7a":"data[np.logical_and(data['Age']>41, data['SprintSpeed']<40)]","997bb2d8":"data = pd.read_csv('..\/input\/fifa19\/data.csv')"}}