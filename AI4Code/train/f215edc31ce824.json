{"cell_type":{"733d4cfa":"code","27dcf61b":"code","10d1efac":"code","737a680c":"code","95b41144":"code","3d88ab97":"code","9d3c8283":"code","46caec4f":"code","600a1ab5":"code","db338b56":"code","effbf40e":"code","02fbc4f9":"code","ecf67e35":"code","d36504b9":"code","bd89a25e":"code","457bc4bf":"markdown","56dcfe84":"markdown","86844d7e":"markdown","c192fba3":"markdown","6d140a49":"markdown","27ffed3e":"markdown","b8d6abcb":"markdown","ca244fb4":"markdown","35f502fb":"markdown","3c9c0cad":"markdown","d8d8575a":"markdown"},"source":{"733d4cfa":"from IPython.display import HTML\nHTML('<center><iframe width=\"560\" height=\"315\" src=\"https:\/\/www.janestreet.com\/join-jane-street\/get-to-know-us\/?wvideo=097tvs7n47\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe><\/center>')","27dcf61b":"import os\nfrom os import listdir\nimport pandas as pd\nimport numpy as np\nimport glob\nimport tqdm\nfrom typing import Dict\nimport matplotlib.pyplot as plt\nimport pandas_profiling as pdp\nimport json\n%matplotlib inline\nimport shapely.geometry as sg\nimport shapely.ops as so\nimport zipfile\nimport cv2\n\n#jane-street\nimport janestreet\nenv = janestreet.make_env() # initialize the environment\niter_test = env.iter_test() # an iterator which loops over the test set\n\n#plotly\n!pip install chart_studio\nimport plotly.express as px\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\nimport cufflinks\ncufflinks.go_offline()\ncufflinks.set_config_file(world_readable=True, theme='pearl')\n\n#seaborn\nimport seaborn as sns\n\n#color\nfrom colorama import Fore, Back, Style\n\n#networkx\nimport networkx as nx\n\nimport seaborn as sns\nsns.set(style=\"whitegrid\")\n\n#tifffile\nfrom PIL import Image\nimport tifffile as tiff\nimport cv2\nfrom tqdm.notebook import tqdm\nimport zipfile\n\n# Suppress warnings \nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Settings for pretty nice plots\nplt.style.use('fivethirtyeight')\nplt.show()","10d1efac":"# List files available\nlist(os.listdir(\"..\/input\/jane-street-market-prediction\"))","737a680c":"train = pd.read_csv('..\/input\/jane-street-market-prediction\/train.csv')\nfeatures = pd.read_csv('..\/input\/jane-street-market-prediction\/features.csv')\nex_test = pd.read_csv('..\/input\/jane-street-market-prediction\/example_test.csv')\nex_sub = pd.read_csv('..\/input\/jane-street-market-prediction\/example_sample_submission.csv')\nprint(Fore.YELLOW + 'Training data shape: ',Style.RESET_ALL,train.shape)\nprint(Fore.YELLOW + 'Features data shape: ',Style.RESET_ALL,features.shape)\nprint(Fore.YELLOW + 'Test data shape: ',Style.RESET_ALL,ex_test.shape)\ntrain.head()","95b41144":"features.head(5)","3d88ab97":"train.groupby(['date']).count()['resp'].to_frame()","9d3c8283":"# Null values and Data types\nprint(Fore.YELLOW + 'Train Set !!',Style.RESET_ALL)\nprint(train.info())\nprint('-------------')\nprint(Fore.BLUE + 'Test Set !!',Style.RESET_ALL)\nprint(ex_test.info())\nprint('-------------')\nprint(Fore.GREEN + 'Feature Set !!',Style.RESET_ALL)\nprint(features.info())","46caec4f":"features.isna().sum()","600a1ab5":"train.isna().sum()","db338b56":"!ls ..\/input\/jane-street-market-prediction\/janestreet","effbf40e":"print(Fore.YELLOW +\"Total Dates in Train set: \",Style.RESET_ALL,train['date'].count())\nprint(Fore.BLUE +\"Total Dates in Test set: \",Style.RESET_ALL,ex_test['date'].count())","02fbc4f9":"print(Fore.YELLOW + \"The total dates in train set are\",Style.RESET_ALL,f\"{train['date'].count()},\", Fore.BLUE + \"from those the unique dates are\", Style.RESET_ALL, f\"{train['date'].value_counts().shape[0]}.\")","ecf67e35":"print(Fore.YELLOW + \"The total dates in test set are\",Style.RESET_ALL,f\"{ex_test['date'].count()},\", Fore.BLUE + \"from those the unique dates are\", Style.RESET_ALL, f\"{ex_test['date'].value_counts().shape[0]}.\")","d36504b9":"train_dates = set(train['date'].unique())\ntest_dates = set(ex_test['date'].unique())\n\ntrain_dates.intersection(test_dates)","bd89a25e":"columns = train.keys()\ncolumns = list(columns)\nprint(columns)","457bc4bf":"# 3. <a id='reading'>Reading the train.csv \ud83d\udcda<\/a>","56dcfe84":"<img src='https:\/\/media-exp1.licdn.com\/dms\/image\/C4E0BAQH6sW40Sn5dPQ\/company-logo_200_200\/0?e=2159024400&v=beta&t=S0dyG_8Ox_WZ7a86cFw9Uy-rMwvs6XDONzh_zO04Pz8'>\n<h1><center>Jane Street Market Prediction - EDA<\/center><h1>\n    \n# 1. <a id='Introduction'>Introduction<\/a>\n\n###  1.1 What is Jane Street?\n[Jane Street](https:\/\/www.janestreet.com\/) is a quantitative trading firm with a unique focus on technology and collaborative problem solving.","86844d7e":"# 2. <a id='importing'>Importing the necessary libraries\ud83d\udcd7<\/a> ","c192fba3":"# 4. Basic Data Exploration","6d140a49":"### Missing values","27ffed3e":"## General Information","b8d6abcb":"We see `3` dates in test set that can be found in train set.","ca244fb4":"We can see some missing values in train set.","35f502fb":"###  1.2 What is Jane Street Market Prediction Competition?\n- In reality, trading for profit has always been a difficult problem to solve, even more so in today\u2019s fast-moving and complex financial markets. Electronic trading allows for thousands of transactions to occur within a fraction of a second, resulting in nearly unlimited opportunities to potentially find and take advantage of price differences in real time.\n- In a perfectly efficient market, buyers and sellers would have all the agency and information needed to make rational trading decisions. As a result, products would always remain at their \u201cfair values\u201d and never be undervalued or overpriced. However, financial markets are not perfectly efficient in the real world for a number of reasons.\n- Even if a strategy is profitable now, it may not be in the future, and market volatility makes it impossible to predict the profitability of any given trade with certainty. As a result, it can be hard to distinguish good luck from having made a good trading decision. \n\n### 1.3 General Information about Electronic Trading.\n- [Electronic Trading](https:\/\/capital.com\/electronic-trading-definition) refers to a method of trading securities, financial derivatives or foreign exchange electronically. Both buyers and sellers use the internet to connect to a trading platform such as an exchange-based system or electronic communication network (ECN).\n\n### 1.4 What do we need to predict?\n- Our challenge will be to use the historical data, mathematical tools, and technological tools at our disposal to create a model that gets as close to certainty as possible. We will be presented with a number of potential trading opportunities, which your model must choose whether to accept or reject. \n- So, if we generate a highly predictive model which selects the right trades to execute, we\u2019ll also be playing an important role in sending the market signals that push prices closer to \u201cfair\u201d values. A better model will mean the market will be more efficient going forward.\n\n### 1.5 Metric: Utility-Score\n- In economics, [utility function](https:\/\/www.investopedia.com\/ask\/answers\/072915\/what-utility-function-and-how-it-calculated.asp) is an important concept that measures preferences over a set of goods and services. Utility represents the satisfaction that consumers receive for choosing and consuming a product or service.Utility is measured in units called utils, but calculating the benefit or satisfaction that consumers receive from is abstract and difficult to pinpoint. As a result, economists measure utility in terms of revealed preferences by observing consumers' choices. From there, economists create an ordering of consumption baskets from least desired to the most preferred.\n- So, back to how this metric being used here,Each row in the test set represents a trading opportunity for which we will be predicting an action value, 1 to make the trade and 0 to pass on it. Each trade j has an associated weight and resp, which represents a return. For each date i, we define:\n\n<center> $ \\large p_{i} = \\Sigma_{j}(weight_{ij}\u2217resp_{ij}\u2217action_{ij}) $ <\/center>\n\n\n<center> $ \\large t = \\frac{\\Sigma_{p_{i}}}{\\sqrt{\\Sigma p_{i}*p_{i}}} * \\sqrt{\\frac{250}{|i|}} $ <\/center>\n\nwhere |i| is the number of unique dates in the test set. The utility is then defined as:\n\n<center> $ \\large u = min(max(t,0),6)\\Sigma p_{i}  $ <\/center>","3c9c0cad":"## Unique Dates(Ids)","d8d8575a":"# Exploratory Data Analysis"}}