{"cell_type":{"8c8b656f":"code","79f38536":"code","e3fd8fbc":"code","8beaf2f6":"code","2783bd0a":"code","811b550d":"code","93931c97":"code","a08f3a11":"markdown","b4cfd585":"markdown","9f95743a":"markdown","ffb681a4":"markdown","9539b477":"markdown","3e397914":"markdown","7a9a0913":"markdown","bc946c35":"markdown","8e036243":"markdown","8517ecec":"markdown"},"source":{"8c8b656f":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib\n\nimport warnings\nwarnings.filterwarnings('ignore')","79f38536":"%%bash\npip install openpyxl","e3fd8fbc":"gender = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx')\nathletes = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Athletes.xlsx')\nteams = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Teams.xlsx')\ncoaches = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Coaches.xlsx')\nmedals = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Medals.xlsx')","8beaf2f6":"# gender.head(10)\n#gender.shape #(46, 4)\ngender.info()\ngender.describe().T\n\ngender.sort_values(by='Total',inplace=True)\n\n# Gender barplot\nplt.rcParams['figure.dpi'] = 600\n\nfig = plt.figure(figsize=(2,12), facecolor='#f6f5f5')\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=1.5, hspace=0.05)\n\nbackground_color = \"#f6f5f5\"\nsns.set_palette(['#ffd514','#ff355d'])\nax0 = fig.add_subplot(gs[0, 0])\n\n\nfor s in [\"right\", \"top\"]:\n    ax0.spines[s].set_visible(False)\n    \nax0.set_facecolor(background_color)\n\n\nax0_sns = gender.plot(x='Discipline',y=['Male','Female'],kind='barh',ax=ax0,zorder=2,width=0.8) ##plotttt\nax0_sns.set_xlabel('Genders Count',fontsize=4, weight='bold',)\nax0_sns.set_ylabel('Discipline',fontsize=4, weight='bold')\n\nax0_sns.grid(which='major', axis='x', zorder=0, color='#EEEEEE', linewidth=0.4)\nax0_sns.grid(which='major', axis='y', zorder=0, color='#EEEEEE', linewidth=0.4)\n\n\nax0_sns.tick_params(labelsize=3, width=0.5, length=1.5)\n\nax0_sns.legend(['Male', 'Female'], ncol=2, facecolor='#D8D8D8', edgecolor=background_color, fontsize=3, bbox_to_anchor=(1, 1.01), loc='upper right')\n\nfor p in ax0_sns.patches:\n            value = f'{p.get_width():.0f}'\n            if value == '0':\n                pass\n            else:\n                x = p.get_x() + p.get_width() + 30\n                y = p.get_y() + p.get_height() \/ 2 \n                ax0.text(x, y, value, ha='left', va='center', fontsize=3, \n                        bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\n\n\nax0_sns.text(1100,46.4, f'Gender Plot', fontsize=6, weight='bold',ha='right')\nax0.text(1100, 46.11,f'Entries by Discipline and number of females and males taking part in it',fontsize=3,ha='right')\nax0_sns.text(1500,40.4, f'Ankit kalauni', fontsize=6, weight='bold',ha='right',color='w',alpha=0.3) #ignore this line if you reading this\n\n#ax0.get_xaxis().set_m8ajor_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\n\nplt.show()","2783bd0a":"# athletes.head(10)\n#athletes.shape #(11085, 3)\n# athletes.info()\n# athletes.describe().T\n# athletes.sort_values(by='Total',inplace=True)\ny = athletes.NOC.value_counts().index\nx = athletes.NOC.value_counts().values\n\n# Athletes barplot with Discipline\nplt.rcParams['figure.dpi'] = 600\n\nfig = plt.figure(figsize=(2,48), facecolor='#f6f5f5')\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=1.5, hspace=0.05)\n\nbackground_color = \"#f6f5f5\"\nsns.set_palette(['#ff355d']*1200)\nax0 = fig.add_subplot(gs[0, 0])\n\n\nfor s in [\"right\", \"top\"]:\n    ax0.spines[s].set_visible(False)\n    \nax0.set_facecolor(background_color)\n\n\nax0_sns = sns.barplot(data=athletes,y=y,x=x,zorder=2)\nax0_sns.set_xlabel('No of Athletes',fontsize=4, weight='bold')\nax0_sns.set_ylabel('Countries',fontsize=4, weight='bold')\n\nax0_sns.grid(which='major', axis='x', zorder=0, color='#EEEEEE', linewidth=0.4)\nax0_sns.grid(which='major', axis='y', zorder=0, color='#EEEEEE', linewidth=0.4)\n\n\nax0_sns.tick_params(labelsize=3, width=0.5, length=1.5)\n\n# ax0_sns.legend(ncol=4, facecolor='#D8D8D8', edgecolor=background_color, fontsize=3, bbox_to_anchor=(1.022, 1.005), loc='upper right')\n\nfor p in ax0_sns.patches:\n            value = f'{p.get_width():.0f}'\n            x = p.get_x() + p.get_width() + 20\n            y = p.get_y() + p.get_height() \/ 2 \n            ax0.text(x, y, value, ha='left', va='center', fontsize=3, \n                    bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\n\n# plt.title(f'Athletes Plot',fontdict=dict(fontsize=6,weight='bold',horizontalalignment= 'right'),loc='right')\n\nax0_sns.text(900,45.4, f'Ankit kalauni',alpha=0.3, fontsize=6, weight='bold',ha='right',color='w') #ignore this line if you reading this\n\n\n\nax0_sns.text(615,-1.6, f'Athletes Plot', fontsize=6, weight='bold',ha='right')\nax0.text(615,-1,f'Contains details about the participating Athletes',fontsize=3,ha='right')\n#ax0.get_xaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\n\nplt.show()","811b550d":"# teams.head(20)\nteams.describe().T \nteams.info()\n\ny = teams.Discipline.value_counts().index\nx = teams.Discipline.value_counts().values\n\n# Teams barplot\nplt.rcParams['figure.dpi'] = 600\n\nfig = plt.figure(figsize=(2,3), facecolor='#f6f5f5')\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=1.5, hspace=0.05)\n\nbackground_color = \"#f6f5f5\"\nsns.set_palette(['#ff355d']*1200)\nax0 = fig.add_subplot(gs[0, 0])\n\n\nfor s in [\"right\", \"top\"]:\n    ax0.spines[s].set_visible(False)\n    \nax0.set_facecolor(background_color)\n\n\nax0_sns = sns.barplot(data=teams,y=y,x=x,zorder=2)\nax0_sns.set_xlabel('No of Teams Country',fontsize=4, weight='bold')\nax0_sns.set_ylabel('Discipline',fontsize=4, weight='bold')\n\nax0_sns.grid(which='major', axis='x', zorder=0, color='#EEEEEE', linewidth=0.4)\nax0_sns.grid(which='major', axis='y', zorder=0, color='#EEEEEE', linewidth=0.4)\n\n\nax0_sns.tick_params(labelsize=3, width=0.5, length=1.5)\n\n# ax0_sns.legend(['Country Count'], ncol=2, facecolor='#D8D8D8', edgecolor=background_color, fontsize=3, bbox_to_anchor=(1.022, 1.035), loc='upper right')\n\nfor p in ax0_sns.patches:\n            value = f'{p.get_width():.0f}'\n            x = p.get_x() + p.get_width() + 2\n            y = p.get_y() + p.get_height() \/ 2 \n            ax0.text(x, y, value, ha='left', va='center', fontsize=3, \n                    bbox=dict(facecolor='none', edgecolor='black', boxstyle='round', linewidth=0.3))\n\n# plt.title(f'Teams Plot',fontdict=dict(fontsize=6,weight='bold',horizontalalignment= 'right'),loc='right')\n\nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\n\nax0_sns.text(158.65,Yend, f'Ankit kalauni',alpha=0.3, fontsize=6, weight='bold',ha='right',color='w') #ignore this line if you reading this\n\n\nax0_sns.text(113,-1.6, f'Teams Plot', fontsize=6, weight='bold',ha='right')\nax0.text(113,-1,f'Contains the details of all the Teams(Country, event, Discipline, Event)',fontsize=3,ha='right')\n#ax0.get_xaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\n\nplt.show()","93931c97":"medals.head(10)\n\nmedals = medals.sort_index(ascending=False)\n\nmedals.describe()\n\nmedals.info()\n\n# Medals barplot\nplt.rcParams['figure.dpi'] = 600\n\nfig = plt.figure(figsize=(2,30), facecolor='#f6f5f5')\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=1.5, hspace=0.05)\n\nbackground_color = \"#f6f5f5\"\nsns.set_palette(['#FFD700','#C0C0C0','#CD7F32'])\nax0 = fig.add_subplot(gs[0, 0])\n\n\nfor s in [\"right\", \"top\"]:\n    ax0.spines[s].set_visible(False)\n    \nax0.set_facecolor(background_color)\n\n\nax0_sns = medals.plot(x='Team\/NOC',y=['Gold','Silver','Bronze'],kind='barh',ax=ax0,zorder=2,width=0.8) ##plotttt\nax0_sns.set_xlabel('Medals Count',fontsize=4, weight='bold',)\nax0_sns.set_ylabel('Team Name',fontsize=4, weight='bold')\n\nax0_sns.grid(which='major', axis='x', zorder=0, color='#EEEEEE', linewidth=0.4)\nax0_sns.grid(which='major', axis='y', zorder=0, color='#EEEEEE', linewidth=0.4)\n\n\nax0_sns.tick_params(labelsize=3, width=0.5, length=1.5)\n\nax0_sns.legend(['Gold', 'Silver','Bronze'], ncol=3, facecolor='#D8D8D8', edgecolor=background_color, fontsize=3, bbox_to_anchor=(1, 1.005), loc='upper right')\n\nfor p in ax0_sns.patches:\n        value = f'{p.get_width():.0f}'\n        if value == '0':\n            pass\n        else:\n            x = p.get_x() + p.get_width() + 1\n            y = p.get_y() + p.get_height() \/ 2\n            ax0.text(x, y, value, ha='left', va='center', fontsize=3)\n\nXstart, Xend = ax0.get_xlim()\nYstart, Yend = ax0.get_ylim()\n\nax0_sns.text(Xend-1, Yend+0.71, f'Medals Plot', fontsize=6, weight='bold',ha='right')\nax0.text(Xend-1, Yend+0.48,f'Medals as on 29th July 2021',fontsize=4,ha='right')\nax0_sns.text(Xend+13,Yend, f'Ankit Kalauni',alpha=0.3, fontsize=6, weight='bold',ha='right',color='w') #ignore this line if you reading this\n\n#ax0.get_xaxis().set_m8ajor_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\n\nplt.show()","a08f3a11":"<div style=\"color:black; display:fill; border-radius:5px;background-color:#ffd514;font-size:160%;font-family:sans-serif;letter-spacing:0.5px\">If you like the work please upvote (\u1557 \u0361\ud83d\udc41\u202f\u035c\u0296 \u0361\ud83d\udc41)\u1557<\/div>","b4cfd585":"# **Table of content**\n* [1. Gender EDA](#1)\n* [2. Athletes EDA](#2)\n* [3. Teams EDA](#3)\n* [4. Medals EDA](#4)\n* [5. Copy the Notebook](#5)\n<a id='0'><\/a>","9f95743a":"# **1. Gender EDA**\n* `Artistic Swimming` and `Rhythmic Gymnastics` has no male Participants.\n* Max number of participants is in the `Athletics` Discipline. **`Male: 1072 & Female: 969`**\n* The least number of participants is in the `Cycling BMX Freestyle` Discipline. **`Male: 9 & Female: 10`**\n\n<a id='1'><\/a>\n* [Jump top](#0)","ffb681a4":"# **4. Medals EDA**\n**Medals Ranking as on 29th July 2021:**\n\n1. United States of America - `39 Gold, 41 Silver, 33 Bronze`\n2. People's Republic of China - `38 Gold, 32 Silver, 18 Bronze`\n3. Japan - `27 Gold, 14 Silver, 17 Bronze`\n\n48. India - `1 Gold, 2 Silver, 4 Bronze`\n\n\n<a id='4'><\/a>\n* [Jump top](#0)","9539b477":"# **Details**\n\nThis contains the details of over `11,000 athletes`, with `47 disciplines`, along with `743 Teams` taking part in the 2021(2020) Tokyo Olympics.\\\nThis dataset contains the details of the Athletes, Coaches, Teams participating as well as the Entries by gender.\\\nIt contains their names, countries represented, discipline, gender of competitors, name of the coaches.","3e397914":"![olympics](https:\/\/images.unsplash.com\/photo-1569517282132-25d22f4573e6?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=833&q=80)","7a9a0913":"# **5. Copy this starter notebook and start making in-depth studies on Tokyo Olympic**\n\n<a id='5'><\/a>\n* [Jump top](#0)","bc946c35":"# **2. Athletes EDA**\n* The maximum number of Athletes is from the `United States of America`.\n* The minimum number of Athletes is from `South Sudan`, along with 15 more countries where only 2 Athletes participated.\n<a id='2'><\/a>\n* [Jump top](#0)","8e036243":"# **Task**\n<h4>EDA on Countries participated, disciplines, events & coaches.<\/h4>","8517ecec":"# **3. Teams EDA**\n* There are 113 Countries in the `Swimming` Discipline. which is the maximum number of country participation.\n* There are 12 Countries in `Baseball\/Softball` Discipline. which is the minimum number of country participation.\n\n<a id='3'><\/a>\n* [Jump top](#0)"}}