{"cell_type":{"93f677c7":"code","6c3647ca":"code","62a16a12":"code","62160888":"code","ec5e8b06":"code","63dd5f3c":"code","656cddad":"code","ea220e73":"code","b09f9cd2":"markdown"},"source":{"93f677c7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6c3647ca":"# Import Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","62a16a12":"# Import Dataset\ndataset = pd.read_csv('\/kaggle\/input\/salary-prediction-decision-tree-regression\/Position_Salaries.csv')\nX = dataset.iloc[:, 1:-1].values\ny = dataset.iloc[:, -1].values","62160888":"print(X)","ec5e8b06":"print(y)","63dd5f3c":"# Train the Decision Tree Regression model on whole dataset\nfrom sklearn.tree import DecisionTreeRegressor\nregressor = DecisionTreeRegressor(random_state=0)\nregressor.fit(X,y)","656cddad":"# Predicting new Result\nprint(\"Salary of 6.5 years exprience is {}\".format(np.round(regressor.predict([[6.5]]),2)))","ea220e73":"# Visualize the Decision Tree Regression Result (Higher Resolution)\nx_grid = np.arange(min(X), max(X),0.1)\nx_grid = x_grid.reshape(len(x_grid),1)\nplt.scatter(X, y, color='red')\nplt.plot(x_grid, regressor.predict(x_grid), color='blue')\nplt.title(\"Decision Tree Regression\")\nplt.xlabel('Position')\nplt.ylabel('Salary')\nplt.show()","b09f9cd2":"We are using Salary and position level dataset. Here we will use the decision tree regression model to train the dataset and check how this model correctly predict the new dataset."}}