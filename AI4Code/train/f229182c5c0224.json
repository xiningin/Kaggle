{"cell_type":{"93101361":"code","44a0b394":"code","e3826f61":"code","8a1bedd1":"code","4a0511b8":"code","1cdf336b":"code","30016a86":"code","2889d322":"code","e0b09362":"code","b8641a3e":"code","f1b9b9c0":"code","8c3de402":"code","8a5e1b76":"code","75073232":"code","74944eee":"code","a5be6b0c":"markdown","cb1570e5":"markdown","df3e1586":"markdown","bbed1986":"markdown","995b3fe4":"markdown","dc0d4205":"markdown","60d5b175":"markdown","f6448fe2":"markdown"},"source":{"93101361":"from keras.models import Sequential\nfrom keras.layers import Dense, LSTM, Dropout\nfrom sklearn.preprocessing import MinMaxScaler\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n%matplotlib inline\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","44a0b394":"base = pd.read_csv('..\/input\/PRSA_data_2010.1.1-2014.12.31.csv')\nbase.head()","e3826f61":"# Deletion of records with unfilled values (missing values)\nbase = base.dropna()","8a1bedd1":"base = base.drop('No', axis = 1)\nbase = base.drop('year', axis = 1)\nbase = base.drop('month', axis = 1)\nbase = base.drop('day', axis = 1)\nbase = base.drop('hour', axis = 1)\nbase = base.drop('cbwd', axis = 1)","4a0511b8":"# Predictive attributes are all but not index 0\nbase_treinamento = base.iloc[:, 1:7].values","1cdf336b":"base.head()","30016a86":"poluicao = base.iloc[:, 0].values","2889d322":"# Application of normalization\nnormalizador = MinMaxScaler(feature_range = (0, 1))\nbase_treinamento_normalizada = normalizador.fit_transform(base_treinamento)","e0b09362":"# Need to change the format of the variable to apply normalization\npoluicao = poluicao.reshape(-1, 1)\npoluicao_normalizado = normalizador.fit_transform(poluicao)","b8641a3e":"#### Creation of the data structure that represents the time series, considering\n#### 10 hours (window) earlier to predict the current time","f1b9b9c0":"previsores = []\npoluicao_real = []\nfor i in range(10, 41757):\n    previsores.append(base_treinamento_normalizada[i-10:i, 0:6])\n    poluicao_real.append(poluicao_normalizado[i, 0])\nprevisores, poluicao_real = np.array(previsores), np.array(poluicao_real)\n","8c3de402":"regressor = Sequential()\nregressor.add(LSTM(units = 100, return_sequences = True, input_shape = (previsores.shape[1], 6)))\nregressor.add(Dropout(0.3))\n\nregressor.add(LSTM(units = 50, return_sequences = True))\nregressor.add(Dropout(0.2))\n\nregressor.add(LSTM(units = 50, return_sequences = True))\nregressor.add(Dropout(0.2))\n\nregressor.add(LSTM(units = 50))\nregressor.add(Dropout(0.2))\n\nregressor.add(Dense(units = 1, activation = 'linear'))\n\nregressor.compile(optimizer = 'rmsprop', loss = 'mean_squared_error', \n                  metrics = ['mean_absolute_error'])\nregressor.fit(previsores, poluicao_real, epochs = 100, batch_size = 64)","8a5e1b76":"previsoes = regressor.predict(previsores)\nprevisoes = normalizador.inverse_transform(previsoes)","75073232":"print('Previsoes', previsoes.mean())\nprint('Poluicao', poluicao.mean())","74944eee":"plt.figure(figsize=(16,12))\nplt.plot(poluicao, color = 'red', label = 'Real pollution')\nplt.plot(previsoes, color = 'blue', label = 'Predictions')\nplt.title('Pollution forecast')\nplt.xlabel('Hours')\nplt.ylabel('Pollution value')\nplt.legend()","a5be6b0c":"#### Exclusion of attributes that will not be used for analysis\n#### \"No\" is the registration number\n#### \"Year\", \"month\", \"day\" and \"hour\" are the time information that is not used for analysis\n#### \"Cbwd\" is a text attribute that is not related to predictions","cb1570e5":"#### In this example we will not use a specific database for testing...\n#### we will make the forecasts directly in the training database\n","df3e1586":"#### Verification of the average in the results of the forecasts and in the actual results","bbed1986":"\n### Hello!\n#### Leave your feedback on this notebook ... Thanks","995b3fe4":"#### Creation of neural network structure. The last parameter with the value 6 represents, the number of predictive attributes","dc0d4205":"#### Database loading\n#### Each record represents the level of pollution in each hour (hourly measure)\n#### The idea is to predict the level of pollution at a certain time based on the previous hours","60d5b175":"### Search of the values to be made the forecast (target), ie the first attribute pm2.5","f6448fe2":"### Lets Plot. \n#### A bar chart will be generated because we have many records"}}