{"cell_type":{"85e6a428":"code","4ace6f13":"code","a53bc954":"code","7b20b92a":"code","bd902ba8":"code","b03e1d7e":"code","6ce42d48":"code","e6591c29":"code","10fdceeb":"code","2c9510a7":"code","87f00432":"code","484364ae":"code","5e43afd4":"code","984dac09":"code","3ed6b9b4":"code","dc2af1bd":"code","ef34e362":"code","018ac4fc":"code","470c0d2d":"code","f469887f":"code","c9abd6fc":"code","f0c12e8b":"code","4a739236":"code","a79e2b09":"code","25c3a6df":"code","b48c09ed":"code","4a9e174b":"code","b5dee9aa":"code","c4323535":"markdown","3234fb74":"markdown","ceff094f":"markdown","1673557c":"markdown","d2ca7802":"markdown","70612ba1":"markdown","44959e7d":"markdown"},"source":{"85e6a428":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4ace6f13":"import matplotlib.pyplot as plt\nimport seaborn as sns","a53bc954":"df = pd.read_csv(\"\/kaggle\/input\/house-price-prediction-challenge\/train.csv\")\ndf.head()","7b20b92a":"df.isnull().sum()","bd902ba8":"df.describe()","b03e1d7e":"sns.countplot(df['POSTED_BY'])","6ce42d48":"sns.countplot(df['BHK_OR_RK'])","e6591c29":"plt.figure(figsize=(15,15))\nplt.subplot(2,2,1)\nsns.countplot(df['UNDER_CONSTRUCTION'])\nplt.subplot(2,2,2)\nsns.countplot(df['RERA'])","10fdceeb":"postedby_dummy = pd.get_dummies(df['POSTED_BY'],drop_first=True,prefix='postedby')\ntypes = pd.get_dummies(df['BHK_OR_RK'],drop_first=True,prefix='type')","2c9510a7":"df= pd.concat([df,postedby_dummy],axis=1)\n\ndf = pd.concat([df,types],axis=1)\n\ndf.drop(\"POSTED_BY\",axis=1,inplace=True)\n\ndf.drop('BHK_OR_RK',axis=1,inplace=True)\ndf.drop(\"ADDRESS\",axis=1,inplace=True)\n\n\ndf.head()\n","87f00432":"df['price'] = df['TARGET(PRICE_IN_LACS)']\ndf.drop('TARGET(PRICE_IN_LACS)',axis=1,inplace=True)\ndf.head()","484364ae":"corr = df.corr()\ncorr['price'].sort_values(ascending=False)","5e43afd4":"plt.figure(figsize=(20,20))\nsns.heatmap(corr,annot=True)","984dac09":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nscale = StandardScaler()","3ed6b9b4":"X = df.drop('price',axis=1)\ny = df['price']","dc2af1bd":" X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)\n","ef34e362":"X_train = scale.fit_transform(X_train)\nX_test = scale.fit_transform(X_test)","018ac4fc":"from sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score, mean_squared_log_error","470c0d2d":"lr = LinearRegression()\nlr.fit(X_train,y_train)\npred=lr.predict(X_test)","f469887f":"print(\"The R2score By Linear Regression is\",r2_score(y_test,pred))","c9abd6fc":"rf = RandomForestRegressor(max_depth=10,random_state=0)\nrf.fit(X_train,y_train)","f0c12e8b":"rf_pred = rf.predict(X_test)","4a739236":"print(\"The R2score By Random Forest Regressor is \" ,r2_score(y_test,rf_pred))","a79e2b09":"test = pd.read_csv(\"\/kaggle\/input\/house-price-prediction-challenge\/test.csv\")\ntest.head()","25c3a6df":"postedby_dummy = pd.get_dummies(test['POSTED_BY'],drop_first=True,prefix='postedby')\ntypes = pd.get_dummies(test['BHK_OR_RK'],drop_first=True,prefix='type')\ntest= pd.concat([test,postedby_dummy],axis=1)\n\ntest = pd.concat([test,types],axis=1)\n\ntest.drop(\"POSTED_BY\",axis=1,inplace=True)\n\ntest.drop('BHK_OR_RK',axis=1,inplace=True)\ntest.drop(\"ADDRESS\",axis=1,inplace=True)\n\n\ntest.head()","b48c09ed":"test = scale.fit_transform(test)","4a9e174b":"Preds = rf.predict(test)","b5dee9aa":"submission = pd.DataFrame()\nsubmission[\"TARGET(PRICE_IN_LACS)\"] = Preds\nsubmission.to_csv('house_price.csv', index = False)\nsubmission","c4323535":"**Majority of the houses are not under construction and most of the houses are not approved by RERA(Real Estate (Regulation and Development))**","3234fb74":"**House shown by dealers are max in number and builder are minimum**","ceff094f":"**Converting Categorical into numerical columns and dropping first column**","1673557c":"**Please Upvote the notebook if you find it helpful !! <3**","d2ca7802":"**No null values are present**","70612ba1":"**No large difference between 75% and max values hence, probability of outliers are less**","44959e7d":"**99% of the houses are BHK**"}}