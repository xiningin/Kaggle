{"cell_type":{"a7022b7c":"code","bc635e19":"code","74f082ba":"code","cacba34d":"code","3e2d409e":"code","4779d06a":"code","23e323c7":"code","8e6246a9":"code","7cad95ae":"code","2a5fff28":"code","fc8d5d56":"code","1597c311":"code","1423a955":"code","129d1dd3":"code","a36849e1":"code","fcd40a73":"code","be4ed9da":"code","7024ee09":"code","05c86bd6":"code","f308150e":"code","866624ae":"code","203d5794":"code","7c5c6493":"code","a7f899ee":"code","90754941":"markdown","cdb7692b":"markdown"},"source":{"a7022b7c":"# load dataset to train\ndataset = pd.read_csv('..\/input\/digit-recognizer\/train.csv')","bc635e19":"# check value counts according to labels\ndataset['label'].value_counts()","74f082ba":"dataset.shape","cacba34d":"dataset.head()","3e2d409e":"x = dataset.to_numpy()[0:,1:].reshape(len(dataset),28,28,1) \ny = dataset.label.to_numpy()","4779d06a":"# lets ckeck one image and its actual label\nimage = x[232]\nplt.imshow(image.squeeze())","23e323c7":"y[232]","8e6246a9":"x[3]","7cad95ae":"# we can normalize the dataset\nx = x\/255","2a5fff28":"# divide dataset into training and testing set\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2)","fc8d5d56":"x_train = x_train.reshape(len(x_train),28*28)\nx_test = x_test.reshape(len(x_test),28*28)","1597c311":"# train the model\n# I use neural network with one hidden layer\nmodel = keras.Sequential(\n    [keras.layers.Dense(100,input_shape=(784,),activation='relu'),\n    keras.layers.Dense(10,activation='sigmoid')])\nmodel.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n             metrics = ['accuracy'])\nmodel.fit(x_train, y_train, epochs=20)","1423a955":"# test dataset using testing set\nmodel.evaluate(x_test,y_test)","129d1dd3":"y_pred = model.predict(x_test)\ny_pred = np.argmax(y_pred, axis=1)\ny_pred","a36849e1":"from sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import ConfusionMatrixDisplay\nfig, ax = plt.subplots(figsize=(12, 12))\ncm = confusion_matrix(y_test,y_pred, normalize='true')\ndisp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels = [0,1,2,3,4,5,6,7,8,9])\ndisp = disp.plot(ax=ax)\nax.set_title(\"Confusion Matrix\")\nplt.show()\n%matplotlib inline","fcd40a73":"# load new dataset to prediction\ntest_data = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","be4ed9da":"test_data = test_data.to_numpy().reshape(len(test_data),28,28,1)","7024ee09":"test_data = test_data\/255","05c86bd6":"image = test_data[80]\nplt.imshow(image.squeeze())","f308150e":"test_data_new = test_data.reshape(len(test_data),28*28)\npred = model.predict(test_data_new)\npred = np.argmax(pred, axis=1)\npred","866624ae":"subs = []\nfor p in pred:\n    subs.append(p)","203d5794":"subs","7c5c6493":"submission = pd.DataFrame({'ImageId' : range(1,28001), 'Label' : list(subs)})\nsubmission.head(10)\nsubmission.shape","a7f899ee":"submission.to_csv(\"submission.csv\", index = False)","90754941":"# import essential libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nimport numpy as np\nfrom tensorflow import keras\nfrom sklearn.model_selection import train_test_split","cdb7692b":"There have 42000 images to train. and each image has 784 features. (28x28 pixels)"}}