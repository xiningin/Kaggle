{"cell_type":{"0c63b921":"code","27990b82":"code","7210c858":"code","d6055870":"code","dc7922a8":"code","15437074":"code","6af9dbc7":"code","1d23acca":"code","17df08fc":"code","5619765e":"code","92aaa59b":"code","e0305d02":"code","3da8c448":"code","3587e351":"code","d466b61b":"code","cee91120":"code","175b8bf8":"code","49f04433":"code","74552535":"code","d51c64be":"code","b6e6b5c0":"code","ed205a06":"code","092bd67e":"code","03d306da":"code","85f44cb8":"code","08302a16":"code","dd4479a2":"code","55a240cf":"code","3e924fa2":"code","b31a64bf":"code","7374632a":"code","072f43ae":"code","eb228f25":"code","8b0e5137":"markdown","2e6d1126":"markdown","2781bba9":"markdown","209145f9":"markdown","bfd11ad3":"markdown","9b7f3261":"markdown","be045f7a":"markdown","a483af8d":"markdown","e1ae9582":"markdown","a59dd476":"markdown","361a5ea2":"markdown","53f4a706":"markdown","097eeda8":"markdown","0388bdc9":"markdown","f97cf960":"markdown","1ef28d53":"markdown","d4ffce7b":"markdown","56f2bb02":"markdown"},"source":{"0c63b921":"%%html\n<style> \n@import url('https:\/\/fonts.googleapis.com\/css?family=Orbitron|Roboto&effect=3d');\nbody {background-color: gainsboro;} \nh3 {color:#818286; font-family:Roboto;}\nspan {color:black; text-shadow:4px 4px 4px #aaa;}\ndiv.output_prompt,div.output_area pre {color:slategray;}\ndiv.input_prompt,div.output_subarea {color:#37c9e1;}      \ndiv.output_stderr pre {background-color:gainsboro;}  \ndiv.output_stderr {background-color:slategrey;}       \n<\/style>","27990b82":"import numpy as np,pandas as pd,geopandas as gpd\nimport pylab as plt,seaborn as sns\nfrom matplotlib import cm\nimport matplotlib.colors as mcolors\nfrom descartes import PolygonPatch\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import median_absolute_error,mean_absolute_error\nfrom sklearn.metrics import r2_score,explained_variance_score\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.ensemble import BaggingRegressor,AdaBoostRegressor\nfrom sklearn.ensemble import ExtraTreesRegressor,RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.linear_model import LinearRegression,SGDRegressor\nfrom sklearn.linear_model import Ridge,RidgeCV\nfrom sklearn.linear_model import BayesianRidge,RANSACRegressor\nfrom sklearn.linear_model import HuberRegressor,TheilSenRegressor\nstyle_dict={'background-color':'slategray','color':'#37c9e1',\n            'border-color':'white','font-family':'Roboto'}\nplt.style.use('seaborn-whitegrid'); path='..\/input\/'","7210c858":"def regression(regressor,x_train,x_test,y_train):\n    regressor.fit(x_train,y_train)   \n    y_train_reg=regressor.predict(x_train)\n    y_test_reg=regressor.predict(x_test)    \n    return y_train_reg,y_test_reg\ndef scores(regressor,y_train,y_test,y_train_reg,y_test_reg):\n    print(50*\"_\"); print(regressor); print(50*\"_\")\n    print(\"EV score. Train: \",\n          explained_variance_score(y_train,y_train_reg))\n    print(\"EV score. Test: \",\n          explained_variance_score(y_test,y_test_reg))\n    print(20*\"-\")\n    print(\"R2 score. Train: \",r2_score(y_train,y_train_reg))\n    print(\"R2 score. Test: \",r2_score(y_test,y_test_reg))\n    print(20*\"-\")\n    print(\"MSE score. Train: \",\n          mean_squared_error(y_train,y_train_reg))\n    print(\"MSE score. Test: \",\n          mean_squared_error(y_test,y_test_reg))\n    print(20*\"-\")\n    print(\"MAE score. Train: \",\n          mean_absolute_error(y_train,y_train_reg))\n    print(\"MAE score. Test: \",\n          mean_absolute_error(y_test,y_test_reg))\n    print(20*\"-\")\n    print(\"MdAE score. Train: \",\n          median_absolute_error(y_train,y_train_reg))\n    print(\"MdAE score. Test: \",\n          median_absolute_error(y_test,y_test_reg))","d6055870":"school_explorer=pd.read_csv(path+'2016 School Explorer.csv')\nd5_shsat=pd.read_csv(path+'D5 SHSAT Registrations and Testers.csv')\nschool_explorer.shape,d5_shsat.shape","dc7922a8":"drop_list=['Adjusted Grade','New?','Other Location Code in LCGMS']\nschool_explorer=school_explorer.drop(drop_list,axis=1)\n# Replace the same values\nschool_explorer.loc[[427,1023,712,908],'School Name']=\\\n['P.S. 212 D12','P.S. 212 D30','P.S. 253 D21','P.S. 253 D27']\n# Transform from string to numeric values \nschool_explorer['School Income Estimate']=\\\nschool_explorer['School Income Estimate'].astype('str') \nfor s in [\",\",\"$\",\" \"]:\n    school_explorer['School Income Estimate']=\\\n    school_explorer['School Income Estimate'].str.replace(s,\"\")\nschool_explorer['School Income Estimate']=\\\nschool_explorer['School Income Estimate'].str.replace(\"nan\",\"0\")\nschool_explorer['School Income Estimate']=\\\nschool_explorer['School Income Estimate'].astype(float)\nschool_explorer['School Income Estimate'].replace(0,np.NaN,inplace=True)\npercent_list = ['Percent ELL','Percent Asian','Percent Black',\n                'Percent Hispanic','Percent Black \/ Hispanic',\n                'Percent White','Student Attendance Rate',\n                'Percent of Students Chronically Absent',\n                'Rigorous Instruction %','Collaborative Teachers %',\n                'Supportive Environment %','Effective School Leadership %',\n                'Strong Family-Community Ties %','Trust %']\ntarget_list = ['Average ELA Proficiency','Average Math Proficiency']\neconomic_list = ['Economic Need Index','School Income Estimate']\nrating_list = ['Rigorous Instruction Rating','Collaborative Teachers Rating',\n               'Supportive Environment Rating','Effective School Leadership Rating',\n               'Strong Family-Community Ties Rating','Trust Rating',\n               'Student Achievement Rating']\n# Transform to numeric variables and fillna missing values\nfor el in percent_list:\n    school_explorer[el]=school_explorer[el].astype('str')\n    school_explorer[el]=school_explorer[el].str.replace(\"%\",\"\")\n    school_explorer[el]=school_explorer[el].str.replace(\"nan\",\"0\")\n    school_explorer[el]=school_explorer[el].astype(float)\n    school_explorer[el].replace(0,np.NaN,inplace=True)\n    school_explorer[el]=school_explorer[el].interpolate()\nfor el in target_list+economic_list:\n    school_explorer[el]=school_explorer[el].interpolate()\nfor el in rating_list:\n    moda_value=school_explorer[el].value_counts().idxmax()\n    school_explorer[el]=school_explorer[el].fillna(moda_value)\n# Preprocess categorical features      \ncategory_list=['District','Community School?','City','Grades']     \nfor feature in category_list:\n    feature_cat=pd.factorize(school_explorer[feature])\n    school_explorer[feature]=feature_cat[0]\nfor feature in rating_list:\n    feature_pairs=dict(zip(['Not Meeting Target','Meeting Target', \n                            'Approaching Target','Exceeding Target'],\n                             ['0','2','1','3']))\n    school_explorer[feature].replace(feature_pairs,inplace=True)\n    school_explorer[feature]=school_explorer[feature].astype(int)  \ncategory_list=list(category_list+rating_list)\nnumeric_list=list(school_explorer\\\n.columns[[4,5]+list(range(13,24))+[25,27,29,31,33]+list(range(38,158))])    \nprint('Number of Missing Values: ',sum(school_explorer.isna().sum()))","15437074":"# Create a new dataframe\nsat_list=['DBN','Number of students who registered for the SHSAT',\n          'Number of students who took the SHSAT']\nd5_shsat_2016=d5_shsat[sat_list][d5_shsat['Year of SHST']==2016]\\\n.groupby(['DBN'],as_index=False).agg(np.sum)\n# Create a new variable\nd5_shsat_2016['Took SHSAT %']=\\\nd5_shsat_2016['Number of students who took the SHSAT']\\\n\/d5_shsat_2016['Number of students who registered for the SHSAT']\nd5_shsat_2016['Took SHSAT %']=\\\nd5_shsat_2016['Took SHSAT %'].fillna(0).apply(lambda x: round(x,3))\nd5_shsat_2016.rename(columns={'DBN':'Location Code'},inplace=True)\n# Merge dataframes\nd5_shsat_2016=\\\npd.merge(school_explorer[['Location Code']+numeric_list+\\\n                         category_list+target_list],\n                         d5_shsat_2016, on='Location Code')\nd5_shsat_2016.shape","6af9dbc7":"# data = school_explorer, features = numeric veriables, targets = Average Math Proficiency\nfeatures1=school_explorer[numeric_list].values\ntargets1=school_explorer['Average Math Proficiency'].values\nX_train1,X_test1,y_train1,y_test1=\\\ntrain_test_split(features1,targets1,test_size=.2,random_state=1)\nX_train1.shape,X_test1.shape,y_train1.shape,y_test1.shape","1d23acca":"# data = school_explorer, features = numeric veriables, targets = Average ELA Proficiency\ntargets2=school_explorer['Average ELA Proficiency'].values\nX_train2,X_test2,y_train2,y_test2 = \\\ntrain_test_split(features1,targets2,test_size=.2,random_state=1)\nX_train2.shape,X_test2.shape,y_train2.shape,y_test2.shape","17df08fc":"# data = school_explorer, targets = Average Math Proficiency\nfeatures_list=numeric_list+category_list \nfeatures2=school_explorer[features_list].values\nX_train3,X_test3,y_train3,y_test3=\\\ntrain_test_split(features2,targets1,test_size=.2,random_state=1)\nX_train3.shape,X_test3.shape,y_train3.shape,y_test3.shape","5619765e":"# data = school_explorer, targets = Average ELA Proficiency\nX_train4,X_test4,y_train4,y_test4=\\\ntrain_test_split(features2,targets2,test_size=.2,random_state=1)\nX_train4.shape,X_test4.shape,y_train4.shape,y_test4.shape","92aaa59b":"y_train_gbr1,y_test_gbr1=\\\nregression(GradientBoostingRegressor(max_depth=4,n_estimators=138), \n           X_train1,X_test1,y_train1)\nscores('Gradient Boosting Regressor \\nAverage Math Proficiency', \n       y_train1,y_test1,y_train_gbr1,y_test_gbr1)","e0305d02":"y_train_rfr1,y_test_rfr1=\\\nregression(RandomForestRegressor(n_estimators=138), \n           X_train1,X_test1,y_train1)\nscores('Random Forest Regressor \\nAverage Math Proficiency', \n       y_train1,y_test1,y_train_rfr1,y_test_rfr1)","3da8c448":"y_train_gbr2,y_test_gbr2=\\\nregression(GradientBoostingRegressor(max_depth=5,n_estimators=276), \n           X_train2,X_test2,y_train2)\nscores('Gradient Boosting Regressor \\nAverage ELA Proficiency', \n       y_train2,y_test2,y_train_gbr2,y_test_gbr2)","3587e351":"y_train_rfr2,y_test_rfr2=\\\nregression(RandomForestRegressor(n_estimators=276), \n           X_train2,X_test2,y_train2)\nscores('Random Forest Regressor \\nAverage ELA Proficiency', \n       y_train1,y_test2,y_train_rfr2,y_test_rfr2)","d466b61b":"y_train_gbr3,y_test_gbr3=\\\nregression(GradientBoostingRegressor(max_depth=4,n_estimators=81), \n           X_train3,X_test3,y_train3)\nscores('Gradient Boosting Regressor \\nAverage Math Proficiency', \n       y_train3,y_test3,y_train_gbr3,y_test_gbr3)","cee91120":"y_train_rfr3,y_test_rfr3=\\\nregression(RandomForestRegressor(n_estimators=81), \n           X_train3,X_test3,y_train3)\nscores('Random Forest Regressor \\nAverage Math Proficiency', \n       y_train3,y_test3,y_train_rfr3,y_test_rfr3)","175b8bf8":"y_train_gbr4,y_test_gbr4=\\\nregression(GradientBoostingRegressor(max_depth=4,n_estimators=108), \n           X_train4,X_test4,y_train4)\nscores('Gradient Boosting Regressor \\nAverage ELA Proficiency', \n       y_train4,y_test4,y_train_gbr4,y_test_gbr4)","49f04433":"y_train_rfr4,y_test_rfr4=\\\nregression(RandomForestRegressor(n_estimators=108), \n           X_train4,X_test4,y_train4)\nscores('Random Forest Regressor \\nAverage ELA Proficiency', \n       y_train4,y_test4,y_train_rfr4,y_test_rfr4)","74552535":"plt.figure(figsize=(12,7))\nplt.plot(y_test1[1:50],'-o',color='black',label='Real Data')\nplt.plot(y_test_gbr1[1:50],'-o',color='#3636ff',label='Gradient Boosting')\nplt.plot(y_test_rfr1[1:50],'-o',color='#ff3636',label='Random Forest')\nplt.legend()\nplt.title(\"Average Math Proficiency. Regressor Predictions vs Real Data\");","d51c64be":"plt.figure(figsize=(12,7))\nplt.plot(y_test2[1:50],'-o',color='black',label='Real Data')\nplt.plot(y_test_gbr2[1:50],'-o',color='#3636ff',label='Gradient Boosting')\nplt.plot(y_test_rfr2[1:50],'-o',color='#ff3636',label='Random Forest')\nplt.legend()\nplt.title(\"Average ELA Proficiency. Regressor Predictions vs Real Data\");","b6e6b5c0":"plt.figure(figsize=(12,7))\nplt.plot(y_test3[1:50],'-o',color='black',label='Real Data')\nplt.plot(y_test_gbr3[1:50],'-o',color='#3636ff',label='Gradient Boosting')\nplt.plot(y_test_rfr3[1:50],'-o',color='#ff3636',label='Random Forest')\nplt.legend()\nplt.title(\"Average Math Proficiency. Regressor Predictions vs Real Data\");","ed205a06":"plt.figure(figsize=(12,7))\nplt.plot(y_test4[1:50],'-o',color='black',label='Real Data')\nplt.plot(y_test_gbr4[1:50],'-o',color='#3636ff',label='Gradient Boosting')\nplt.plot(y_test_rfr4[1:50],'-o',color='#ff3636',label='Random Forest')\nplt.legend()\nplt.title(\"Average ELA Proficiency. Regressor Predictions vs Real Data\");","092bd67e":"cmap=cm.get_cmap('Spectral',4); spectral_cmap=[]\nfor i in range(cmap.N):\n    rgb=cmap(i)[:3]\n    spectral_cmap.append(mcolors.rgb2hex(rgb))","03d306da":"df_importance1=pd.DataFrame(columns=range(138))\ndf_importance1.loc[0]=GradientBoostingRegressor(max_depth=4,n_estimators=138)\\\n.fit(X_train1,y_train1).feature_importances_\ndf_importance1.loc[1]=RandomForestRegressor(n_estimators=138)\\\n.fit(X_train1,y_train1).feature_importances_\ndf_importance1.loc[2]=GradientBoostingRegressor(max_depth=5,n_estimators=276)\\\n.fit(X_train2,y_train2).feature_importances_\ndf_importance1.loc[3]=RandomForestRegressor(n_estimators=276)\\\n.fit(X_train2,y_train2).feature_importances_","85f44cb8":"plt.figure(figsize=(12,7)); n=15\nplt.plot(df_importance1.loc[0][:n],'-v',\n         color=spectral_cmap[0],label='Gradient Boosting. Maths',\n         markersize=7,markerfacecolor=\"None\",markeredgewidth=2)\nplt.plot(df_importance1.loc[1][:n],'-v',\n         color=spectral_cmap[1],label='Random Forest. Maths',\n         markersize=7,markerfacecolor=\"None\",markeredgewidth=2)\nplt.plot(df_importance1.loc[2][:n],'-v', \n         color=spectral_cmap[2],label='Gradient Boosting. ELA',\n         markersize=7,markerfacecolor=\"None\",markeredgewidth=2)\nplt.plot(df_importance1.loc[3][:n],'-v', \n         color=spectral_cmap[3],label='Random Forest. ELA',\n         markersize=7,markerfacecolor=\"None\",markeredgewidth=2)\nplt.legend()\nplt.title(\"Importance of the Features. Set 1\");","08302a16":"index_gbr_math1=list(df_importance1.loc[0,].sort_values(ascending=False)[:20].index)\nindex_rfr_math1=list(df_importance1.loc[1,].sort_values(ascending=False)[:20].index)\nindex_gbr_ela1=list(df_importance1.loc[2,].sort_values(ascending=False)[:20].index)\nindex_rfr_ela1=list(df_importance1.loc[3,].sort_values(ascending=False)[:20].index)","dd4479a2":"features1=school_explorer[numeric_list]\nfor el in list(features1.iloc[:,index_gbr_math1].columns):\n    if el in list(features1.iloc[:,index_rfr_math1].columns):\n        print(el)","55a240cf":"for el in list(features1.iloc[:,index_gbr_ela1].columns):\n    if el in list(features1.iloc[:,index_rfr_ela1].columns):\n        print(el)","3e924fa2":"df_importance2=pd.DataFrame(columns=range(149))\ndf_importance2.loc[0]=GradientBoostingRegressor(max_depth=4,n_estimators=81)\\\n.fit(X_train3,y_train3).feature_importances_\ndf_importance2.loc[1]=RandomForestRegressor(n_estimators=81)\\\n.fit(X_train3,y_train3).feature_importances_\ndf_importance2.loc[2]=GradientBoostingRegressor(max_depth=4,n_estimators=108)\\\n.fit(X_train4,y_train4).feature_importances_\ndf_importance2.loc[3]=RandomForestRegressor(n_estimators=108)\\\n.fit(X_train4,y_train4).feature_importances_","b31a64bf":"plt.figure(figsize=(12,7)); n=15\nplt.plot(df_importance2.loc[0][:n],'-v',\n         color=spectral_cmap[0],label='Gradient Boosting. Maths',\n         markersize=7,markerfacecolor=\"None\",markeredgewidth=2)\nplt.plot(df_importance2.loc[1][:n],'-v',\n         color=spectral_cmap[1],label='Random Forest. Maths',\n         markersize=7,markerfacecolor=\"None\",markeredgewidth=2)\nplt.plot(df_importance2.loc[2][:n],'-v',\n         color=spectral_cmap[2],label='Gradient Boosting. ELA',\n         markersize=7,markerfacecolor=\"None\",markeredgewidth=2)\nplt.plot(df_importance2.loc[3][:n],'-v',\n         color=spectral_cmap[3],label='Random Forest. ELA',\n         markersize=7,markerfacecolor=\"None\",markeredgewidth=2)\nplt.legend()\nplt.title(\"Importance of the Features. Set 2\");","7374632a":"index_gbr_math2=list(df_importance2.loc[0,].sort_values(ascending=False)[:15].index)\nindex_rfr_math2=list(df_importance2.loc[1,].sort_values(ascending=False)[:15].index)\nindex_gbr_ela2=list(df_importance2.loc[2,].sort_values(ascending=False)[:15].index)\nindex_rfr_ela2=list(df_importance2.loc[3,].sort_values(ascending=False)[:15].index)","072f43ae":"features2=school_explorer[features_list]\nfor el in list(features2.iloc[:,index_gbr_math2].columns):\n    if el in list(features2.iloc[:,index_rfr_math2].columns):\n        print(el)","eb228f25":"for el in list(features2.iloc[:,index_gbr_ela2].columns):\n    if el in list(features2.iloc[:,index_rfr_ela2].columns):\n        print(el)","8b0e5137":"### The second set of features\nThe predictions are based on the data about the financial situation, social environment, ethnic composition, test results for each grade and geodata.","2e6d1126":"<h1 class='font-effect-3d' style='color:#37c9e1; font-family:Orbitron;'> &#x1F310; &nbsp; Data Splitting for Regressor Training <\/h1>\n### The first set of features","2781bba9":"<h1 class='font-effect-3d' style='color:#37c9e1; font-family:Orbitron;'>&#x1F310; &nbsp; Features' Importance<\/h1>\n### The first set of features","209145f9":"<h1 class='font-effect-3d' style='color:#37c9e1; font-family:Orbitron;'> &#x1F310; &nbsp; Fitting the Regressors<\/h1>\n### The first set of features\nThe predictions are based on the data about the financial situation, social environment, ethnic composition and test results of each grade.","bfd11ad3":"### The second set of features","9b7f3261":"The most influential indicators for the variable `Average Math Proficiency`:","be045f7a":"The most influential indicators for the variable `Average Math Proficiency`:","a483af8d":"<details><summary style='color:#37c9e1; font-family:Orbitron;'>Useful Links<\/summary><br\/>\n\n&#x1F4E1; &nbsp; [School Quality Reports. Educator Guide](http:\/\/schools.nyc.gov\/NR\/rdonlyres\/967E0EE1-7E5D-4E47-BC21-573FEEE23AE2\/0\/201516EducatorGuideHS9252017.pdf)\n    \n&#x1F4E1; &nbsp; [New York City Department of Education](https:\/\/www.schools.nyc.gov)\n\n&#x1F4E1; &nbsp; [NYC OpenData](https:\/\/opendata.cityofnewyork.us\/)\n\n&#x1F4E1; &nbsp; [Pandas Visualization](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/visualization.html)\n    \n&#x1F4E1; &nbsp; [Pandas Styling](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/style.html)\n\n&#x1F4E1; &nbsp; [ggplot2](https:\/\/ggplot2.tidyverse.org\/)\n\n&#x1F4E1; &nbsp; [R Tutorial](https:\/\/www.tutorialspoint.com\/r\/index.htm)","e1ae9582":"In general, we can make a list of the most influential indicators for the educational results.\n\n- Financial: `Economic Need Index`\n- Social: `Supportive Environment`\n- Organizational: `Student Attendance Rate`, `Student Achievement Rating`, `Percent of Students Chronically Absent`\n- Linguistical: `Percent ELL`\n- Demographic: `Percent Black \/ Hispanic`","a59dd476":"The most influential indicators for the variable `Average ELA Proficiency`:","361a5ea2":"### The second set of features","53f4a706":"<h1 class='font-effect-3d' style='color:#37c9e1; font-family:Orbitron;'> &#x1F310; &nbsp; Data Loading and Preprocessing<\/h1>","097eeda8":"The most influential indicators for the variable `Average ELA Proficiency`:","0388bdc9":"<h1 class='font-effect-3d' style='color:#37c9e1; font-family:Orbitron;'> &#x1F310; &nbsp; Code Library, Styling, and Links<\/h1>\n<details><summary style='color:#37c9e1; font-family:Orbitron;'>Github<\/summary><br\/>\n\nThe current notebook\n    \n&#x1F4D8; &nbsp; [Python Version](https:\/\/github.com\/OlgaBelitskaya\/kaggle_notebooks\/blob\/master\/passnyc-regression-methods.ipynb)\n    \nThe previous notebook\n\n&#x1F4D8; &nbsp; [Python Version](https:\/\/github.com\/OlgaBelitskaya\/kaggle_notebooks\/blob\/master\/passnyc-comparing-all-districts-with-5th-district.ipynb)","f97cf960":"### The second set of features","1ef28d53":"<h1 class='font-effect-3d' style='color:#37c9e1; font-family:Orbitron;'> &#x1F310; &nbsp; Let's Go Ahead <\/h1>\nIt's time to move to the next step.\n\n&#x1F4D8; &nbsp;  [PASSNYC. Neural Networks](https:\/\/www.kaggle.com\/olgabelitskaya\/passnyc-neural-networks)","d4ffce7b":"Both sets of variables in the presented database about the financial situation, social environment, ethnic composition, geodata, and test results of each grade  make it possible to predict the indicators of learning outcomes `Average Math Proficiency`, `Average ELA Proficiency` quite well. \n\n- 0.85-0.90 is a really high level for `R2` - [(coefficient of determination)](http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.r2_score.html#sklearn.metrics.r2_score)","56f2bb02":"<h1 class='font-effect-3d' style='color:#37c9e1; font-family:Orbitron;'>&#x1F310; &nbsp; Predictions <\/h1>\n### The first set of features"}}