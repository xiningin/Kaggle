{"cell_type":{"92723dff":"code","76b0e4bd":"code","7ccaced8":"code","b89c94bc":"code","8050f0b4":"code","a9eeca99":"code","53e504d0":"code","ffea9813":"code","e3a79d39":"code","a8b4d429":"code","d36861cb":"code","ece4dc85":"code","1c72fdd3":"code","f8fae10e":"code","876652fd":"code","5ee7439c":"code","41347f1e":"code","32aa1482":"code","b8ca27c1":"code","eb009131":"markdown","1109c374":"markdown","31c3ea3e":"markdown","7c9c423d":"markdown","dd55c3f9":"markdown","ad8c1791":"markdown","810a5fa9":"markdown","5bdc92fc":"markdown","31aceecb":"markdown","76813b41":"markdown","5a8ef5c5":"markdown","f36b94b8":"markdown","003859b9":"markdown","a931777d":"markdown","c616531a":"markdown","92f62712":"markdown","4257f0e3":"markdown","922d0312":"markdown"},"source":{"92723dff":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# plotly\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n#os\nimport os\nprint(os.listdir(\"..\/input\"))\n","76b0e4bd":"df = pd.read_csv(\"..\/input\/insurance.csv\")\ndf.head()","7ccaced8":"df.info()","b89c94bc":"df.region.unique()","8050f0b4":"gender_list = [df[df.sex == \"female\"].sex.value_counts().tolist(), df[df.sex == \"male\"].sex.value_counts().tolist()]\ngender_list = [gender_list[0][0], gender_list[1][0]]\ngender_list","a9eeca99":"labels = [\"Female\", \"Male\"]\nvalues = gender_list\ncolors = ['#FEBFB3', '#b3c8fe']\ntrace = go.Pie(labels=labels, values=values,\n               hoverinfo='label+percent', textinfo='percent', \n               textfont=dict(size=20),\n               marker=dict(colors=colors,\n                           line=dict(color='#000000', width=2)))\ndata = [trace]\nlayout = go.Layout(title='Rate of Males & Females')\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","53e504d0":"dict_regions= {'low' : df[df.bmi < 18.5].charges.mean(),\n               'normal' : df[(df.bmi > 18.5) & (df.bmi < 24.9)].charges.mean(),\n               'high' : df[df.bmi > 24.9].charges.mean(),\n             }\ndf_bmi = pd.DataFrame.from_dict(dict_regions, orient='index')\ndf_bmi.reset_index(inplace=True)\ndf_bmi.columns = ['bmi', 'mean_value']\ndf_bmi","ffea9813":"my_color = ['rgb(254,224,39)','rgb(102,189,99)','rgb(215,48,39)']\ntrace=go.Bar(\n            x=df_bmi.bmi,\n            y=df_bmi.mean_value,\n            text=\"Mean Medical Costs\",\n            marker=dict(\n                color=my_color,\n                line=dict(\n                color=my_color,\n                width=1.5),\n            ),\n            opacity=0.7)\n\ndata = [trace]\nlayout = go.Layout(title = 'Body Mass Index Means',\n              xaxis = dict(title = 'BMI'),\n              yaxis = dict(title = 'Mean Charges'))\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","e3a79d39":"trace0 = go.Box(\n    y=df[df.sex == \"female\"].bmi,\n    name = 'Female',\n    marker = dict(\n        color = 'rgb(158, 1, 66)',\n    )\n)\ntrace1 = go.Box(\n    y=df[df.sex == \"male\"].bmi,\n    name = 'Male',\n    marker = dict(\n        color = 'rgb(50, 136, 189)',\n    )\n)\nlayout = go.Layout(title ='BMI of Females and Males',\n              xaxis = dict(title = 'Gender'),\n              yaxis = dict(title = 'BMI'))\ndata = [trace0, trace1]\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","a8b4d429":"charges_sorted = df.copy()\nsort_index = (df['charges'].sort_values(ascending=False)).index.values\ncharges_sorted = df.reindex(sort_index)\ncharges_sorted.reset_index(inplace=True)\n#charges_sorted = charges_sorted.head(250)\ncharges_sorted.head()","d36861cb":"# bmi values above-below\ntrace0 = go.Scatter(\n    x = charges_sorted.head(250).charges,\n    y = charges_sorted.head(250).bmi[charges_sorted.head(250).bmi < 18.5],\n    name = 'Low',\n    mode = 'markers',\n    marker = dict(\n        size = 10,\n        color = 'rgb(254,224,39)',\n        line = dict(\n            width = 1,\n            color = 'rgb(0, 0, 0)'\n        )\n    )\n)\n\ntrace1 = go.Scatter(\n    x = charges_sorted.head(250).charges,\n    y = charges_sorted.head(250).bmi[(charges_sorted.head(250).bmi > 18.5) & (charges_sorted.head(250).bmi < 24.9)],\n    name = 'Normal',\n    mode = 'markers',\n    marker = dict(\n        size = 10,\n        color = 'rgb(102,189,99)',\n        line = dict(\n            width = 1,\n        )\n    )\n)\n\ntrace2 = go.Scatter(\n    y = charges_sorted.head(250).bmi[charges_sorted.head(250).bmi > 24.9],\n    x = charges_sorted.head(250).charges,\n    name = 'High',\n    mode = 'markers',\n    marker = dict(\n        size = 10,\n        color = 'rgb(215,48,39)',\n        line = dict(\n            width = 1,\n        )\n    )\n)\ndata = [trace0, trace1,trace2]\nlayout = dict(title = 'BMI of the Most 250 Medical Costs',\n              yaxis = dict(zeroline = False,title = \"BMI\"),\n              xaxis = dict(zeroline = False,title = \"Medical Cost\"),\n             )\nfig = go.Figure(data = data, layout = layout)\n\niplot(fig)","ece4dc85":"dict_regions= {'southwest' : df[df.region == \"southwest\"].charges.mean(),\n              'southeast' : df[df.region == \"southeast\"].charges.mean(),\n              'northwest' : df[df.region == \"northwest\"].charges.mean(),\n              'northeast' : df[df.region == \"northeast\"].charges.mean()\n             }\ndf_regions = pd.DataFrame.from_dict(dict_regions, orient='index')\ndf_regions.reset_index(inplace=True)\ndf_regions.columns = ['regions', 'charges']\n\ndf_regions","1c72fdd3":"import plotly.graph_objs as go\nimport colorlover as cl\n\ntrace=go.Bar(\n            x=df_regions.regions,\n            y=df_regions.charges,\n            text=\"Mean Medical Costs\",\n            marker=dict(\n                color=cl.scales['12']['qual']['Paired'],\n                line=dict(\n                color=cl.scales['12']['qual']['Paired'],\n                width=1.5),\n            ),\n            opacity=0.8)\n\ndata = [trace]\nlayout = go.Layout(title ='Medical Cost Means by Regions',\n              xaxis = dict(title = 'Region'),\n              yaxis = dict(title = 'Medical Cost'))\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","f8fae10e":"smoker_list = [df[df.smoker == \"yes\"].smoker.value_counts().tolist(), df[df.smoker == \"no\"].smoker.value_counts().tolist()]\nsmoker_list = [smoker_list[0][0], smoker_list[1][0]]\nsmoker_list","876652fd":"labels = [\"Smoker\", \"Non-Smoker\"]\nvalues = smoker_list\ncolors = ['#feb3b3', '#c5feb3']\ntrace = go.Pie(labels=labels, values=values,\n               hoverinfo='label+percent', textinfo='percent', \n               textfont=dict(size=20),\n               marker=dict(colors=colors,\n                           line=dict(color='#000000', width=2)))\ndata = [trace]\nlayout = go.Layout(title='Rate of Smokers & Non-Smokers')\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","5ee7439c":"charges_sorted.head()","41347f1e":"trace0 = go.Scatter(\n    x = charges_sorted.index,\n    y = charges_sorted[charges_sorted.smoker == \"yes\"].charges,\n    name = \"Smokers\",\n    mode='lines',\n    marker=dict(\n        size=12,\n        color = \"red\", #set color equal to a variable\n    )\n)\n\ntrace1 = go.Scatter(\n    x = charges_sorted.index,\n    y = charges_sorted[charges_sorted.smoker == \"no\"].charges,\n    name = \"Non-Smokers\",\n    mode='lines',\n    marker=dict(\n        size=12,\n        color = \"green\", #set color equal to a variable\n    )\n)\n\n\ndata = [trace0,trace1]\nlayout = go.Layout(title = 'Medical Costs of Smoker vs Non-Smokers',\n              xaxis = dict(title = 'Persons'),\n              yaxis = dict(title = 'Medical Costs'),)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","32aa1482":"df_smokers = df[df.smoker == \"yes\"]\ndf_smokers.reset_index(inplace=True)\ndf_non_smokers = df[df.smoker == \"no\"]\ndf_non_smokers.reset_index(inplace=True)","b8ca27c1":"trace0 = go.Histogram(\n    x=df_non_smokers.children,\n    opacity=0.75,\n    name = \"Non-Smokers\",\n    marker=dict(color='rgba(166, 217, 106, 1)'))\n\ntrace1 = go.Histogram(\n    x=df_smokers.children,\n    opacity=0.75,\n    name = \"Smokers\",\n    marker=dict(color='rgba(244, 109, 67, 1)'))\n\ndata = [trace0,trace1]\nlayout = go.Layout(barmode='overlay',\n                   title='Childrens of Smokers vs Non-Smokers',\n                   xaxis=dict(title='Number of Children'),\n                   yaxis=dict( title='Count'),\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","eb009131":"<a id=\"5\"><\/a>\n## 5. Medical Costs Means by Regions","1109c374":"<a id=\"1\"><\/a>\n## 1. Rate of Males & Females","31c3ea3e":"<a id=\"3\"><\/a>\n## 3. Female and Male's Body Mass Index ","7c9c423d":"<a id=\"8\"><\/a>\n## 8. Chdildrens of Smokers and Non-Smokers","dd55c3f9":"Let's recall out sorted data by charges. But this time, using all data instead of first 250.","ad8c1791":"<h1>INTRODUCTION<\/h1>\n\n<br>Content:<br>\n1. [Rate of Males & Females ](#1) <br>\n2. [Body Mass Index vs Medical Costs Means (Low-Normal-High Values)](#2) <br>\n3. [Female and Male's Body Mass Index ](#3) <br>\n4. [The Most Medical Costs (Top 250) and Their Body Mass Index](#4) <br>\n5. [Medical Costs Means by Regions](#5) <br>\n6. [Rate of Smokers & Non-Smokers](#6) <br>\n7. [Medical Costs of Smoker vs Non-Smokers](#7) <br>\n8. [Chdildrens of Smokers and Non-Smokers](#8) <br>\n\n<br> Information About Data:<br>\n* age: age of primary beneficiary \n* sex: insurance contractor gender, female, male\n* bmi: Body mass index, providing an understanding of body, weights that are relatively high or low relative to height, objective index of body weight (kg \/ m ^ 2) using the ratio of height to weight, ideally 18.5 to 24.9\n* children: Number of children covered by health insurance \/ Number of dependents\n* smoker: Smoking\n* region: the beneficiary's residential area in the US, northeast, southeast, southwest, northwest.\n* charges: Individual medical costs billed by health insurance\n\n\n\n<br> Visualization Libraries:<br>\n* Pandas - Data processing, data cleaning\n* Plotly - Data visualization\n\n","810a5fa9":"## Dataset Overview","5bdc92fc":"<a id=\"6\"><\/a>\n## 6. Rate of Smokers & Non-Smokers","31aceecb":"Cleaning and preparing data.","76813b41":"<a id=\"4\"><\/a>\n## 4. The Most Medical Costs (Top 250) and Their Body Mass Index)","5a8ef5c5":"Preparing data.","f36b94b8":"Cleaning and preparing data.","003859b9":"### Conclusion\n* This is being my first data analysis with Plotly.\n* I have tried to use different plots and make practice about Plotly data visualization.\n* Please comment section and upvote if you liked my kernel, thank you.","a931777d":"Preparing data.","c616531a":"<a id=\"7\"><\/a>\n## 7. Medical Costs of Smoker vs Non-Smokers","92f62712":"<a id=\"2\"><\/a>\n## 2. Body Mass Index vs Medical Costs Means (Low-Normal-High Values)","4257f0e3":"Cleaning and preparing data.","922d0312":"Preparing data."}}