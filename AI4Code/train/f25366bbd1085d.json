{"cell_type":{"992ae56c":"code","a613921d":"code","f3921de5":"code","9b7a6b41":"code","9f624c4d":"code","49141bdb":"code","219f5d8c":"code","ea384f62":"code","cf9a0178":"code","4b179d0b":"code","fe3aa7d6":"code","cf766b7a":"code","20da5a5f":"code","f0229c28":"code","bf81e643":"code","3491c5fe":"code","a9ea8fbb":"code","8ad47225":"code","7dd0fd21":"code","43332805":"code","0e4a4947":"code","38ea86a0":"code","649dec4a":"code","c0bdbbfc":"markdown","0d8422c1":"markdown","7086db67":"markdown","057f57fe":"markdown","c547727c":"markdown","2c86d57d":"markdown","c7e1c367":"markdown","5054d093":"markdown"},"source":{"992ae56c":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcT_KKoimUiX1Z_QrC0ev_sXbb1Mr7qWnUsFv8kUnMOxLKML6Be3',width=400,height=400)","a613921d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f3921de5":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRgDcDihZv6xuDedJn1r-RrNQc-zbIIrrIkHZYce0z3uCENY1OG',width=400,height=400)","9b7a6b41":"nRowsRead = 1000 # specify 'None' if want to read whole file\n# bond.csv may have more rows in reality, but we are only loading\/previewing the first 1000 rows\ndf = pd.read_csv('\/kaggle\/input\/can-james-bond-be-black\/bond.csv', delimiter=',', nrows = nRowsRead)\ndf.dataframeName = 'bond.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","9f624c4d":"df.head()","49141bdb":"df.dtypes","219f5d8c":"df[\"Remain\"].plot.hist()\nplt.show()","ea384f62":"df[\"Leave\"].plot.box()\nplt.show()","cf9a0178":"sns.pairplot(df, x_vars=['Remain'], y_vars='Leave', markers=\"+\", size=4)\nplt.show()","4b179d0b":"dfcorr=df.corr()\ndfcorr","fe3aa7d6":"sns.heatmap(dfcorr,annot=True,cmap='winter_r')\nplt.show()","cf766b7a":"fig, axes = plt.subplots(1, 1, figsize=(14, 6))\nsns.boxplot(x='Remain', y='Leave', data=df, showfliers=False);","20da5a5f":"import matplotlib.style\n\nimport matplotlib as mpl\n\nmpl.style.use('classic')","f0229c28":"sns.jointplot(df['Remain'],df['Leave'],data=df,kind='scatter')","bf81e643":"fig=plt.gcf()\nfig.set_size_inches(10,7)\nfig=sns.violinplot(x='Remain',y='Leave',data=df)","3491c5fe":"sns.set(style=\"darkgrid\")\nfig=plt.gcf()\nfig.set_size_inches(10,7)\nfig = sns.swarmplot(x=\"Remain\", y=\"Leave\", data=df)","a9ea8fbb":"fig=sns.lmplot(x=\"Remain\", y=\"Leave\",data=df)","8ad47225":"df.plot.area(y=['Remain','Leave'],alpha=0.4,figsize=(12, 6));","7dd0fd21":"sns.factorplot('Remain','Leave',hue='Response',data=df)\nplt.show()","43332805":"pd.crosstab([df.Remain],df.Leave).style.background_gradient(cmap='summer_r')","0e4a4947":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Response)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","38ea86a0":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Group)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","649dec4a":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxMSEhUSEhMWFRUVFxcVFRcVFRcVFhUYFxUXFxYXFxUYHSggGBolHRUVITEhJSkrLi4uFx8zODMtNygtLisBCgoKDg0OGhAQFy0fHR8tLSstLS0tKy0rKy0tLS0rLSstLS0tLS0tLS0tLS0tLS0tLTctLS0tLS0tNzcrLTcrLf\/AABEIAKgBLAMBIgACEQEDEQH\/xAAcAAABBQEBAQAAAAAAAAAAAAAAAQMEBQYHAgj\/xABIEAABAwIEAwYBBwgIBQUAAAABAAIDBBEFEiExBkFRBxMiYXGBkTJSYqGxwdEUIyRCcoKy8DNUc5KTotLxCBUWdOElNTZDY\/\/EABgBAQADAQAAAAAAAAAAAAAAAAABAgME\/8QAIBEBAQACAwEAAgMAAAAAAAAAAAECERIhMQMTQSIyYf\/aAAwDAQACEQMRAD8A5SkJQkVQqRyCUxVO0UiFNJcptBSBSPRKAkJStQC9MZfmvLkNCB2Aa6\/avMbzcaXPTdIGk8k9FGRtvyQepWi5F9t+WvP2vdNsYeQJspcdKT5\/b5q1oqTbRUuci+PztUEgde+t0NHzhz381tqfCmu5KS3hlh1tvyVfyxf8NYrvbk256dLFeJWANte5BvcacuR66rR1GAlrzYXB1Gnnt9RXmTAc4zNG+9zbcq\/KKcKqI32abWtobi+p6J8eu\/8AsR9ShTgwuLC3Ubgn6wPdOQzXGpUqJSEIUBCUiVISgEIQUAkSoQCRCEChCEIApUhSBAWQlKRAqRCEDKEJEClQa2TkpqgVw1upgjFKhCkC9X6LzZKgVict4rWsljhJ8inmQG9yo2nR2JluSkRMF9T9S8RsUlkLj5BVtaSJNPGOSs6aNQKcWsFa0bVjW+K2ootlpKOm0uQqXD2WstHSnQWVIu9HCQ4XLdepH3LwMHDR\/NyFeUnRSDGFoz5OVcZ8Mh0bntHjAuPO24XP6KMtJDhpY+y79jFOMpXGsdiEc72ja1x77+qthf0z+s3OSEw6JUjRolutGASIshAIQhAXQhCBEIQgAlSBKgEIQgCkSoKBAhCEDCCkQUAoVdyUxMSgZgSLgcuqCAEqsK+nBGdgt1Cr7KZdps09N3UqKC\/4JiNmqsqZllGVWxmzrItk8IkrWoklyjX8Vltr49siATzCFVS1jjo0WTXfSeavpXnGgjCtqJuxWThxB7SOYPX7FeYZjA2c222o18vtVMsa0x+kbKhYr+jYs\/hFU12xGo0Wmom3CzxnbS1YxfWni\/mo7NdE6I\/581dnULE9WrkHGMdp7\/RA5dSuw12y5Jx2wiZrrbgj4FTj\/ZH0n8FC1LdIxKtXMRCUpECpEAIKBClQUiAQhCBQEJEoQCRLZIgVIlKRAJbJEII6RCEAm3b2tcm1vL+dE4Um3i6DT1KVbH1YOis30Fz59VV1dIWucLEaAkHS1wCND5FeqeokJvmNhy3B8j5J2lHyiRa972VPGlnJXwg5gFcQtUMNGb3VnTjRMrswx0XLoo7or72VgGKDVXCo1p2KNg1KlNmjtaw+CpDOBuvcVY3n9n4qeNqnORJrO6O1h6FQO5N\/A691o8Nggns0kXOgvr9qZxfht8BzN1afq8x5fYpnSLJTGC4m9jrH+dl1LhvEczNVyaCWxAIWvwCrVMq0wnTpkdQBZNVWJtbe7gPX4rNvxMhv8+6y2M1kkl7PA97D4KJVrjqNnW8QRAfKFz56rnvGFYyV0ZYb2zX\/AMqaw+kkJt3jSL8zv7rzj9CY7XAB8uYI\/wDC0xk2xzuWvFS1KkCAtGBUIuiyAQCgIQIlQgIEAQEpKQIC6VCEBdJZekiBV5SpEAEJQlAQREJEIApBbUHS\/Pogr3E4Bwc5uYAglpNg4DcE8rpe0y6pylkMINxcHS45IY4a631+3VO0ULpbhgF\/ESDewH6ovz10v5HdRb2uLWN7WHloqabSkadVZ0yrG7qxpSoqZ6smNTNTTghSIHaJ\/LdUaexkqyjsV4qqZjLEZiCNRfZ3O56c1pq3DC4XH+yqI6d7HbHTyWmObHL5tr2ZcDwVsL5J2TRnRrHh2UFwuS5gtqLEXvcKLXU89PPJQzO7zKM8L+bmDkT1F1JwjiivaAxspDRpoxpNvVwKdxeQktllBLxctzOLiS5tnm17ajTbmly2nHCxh+7JefVbbhrDXObe2g1us82G7guncLUYFO8+SzvbWdMHxLiohdk589dAFDwzF6X\/AO8B\/UG1vQBPceUOaS4BzZWkfT5EeWmg628177L8IfJWguo2ujBJc+Rrg2NpFiANA5x2AO1yVfDGaZ555bRsRFOxzZqR2Vt7OZe4HQi+yhY3iffub0YLepO6tu1DhhlPVOdStDYg1hkaDo17i4eFvIWtp5rKU7bWzXtfW29udrq8xnrLLK61TgKVbzCOAop6B1e2oka1rZXd2Y25j3RcCMwdbXL0VfwxwizEWyCmmLJogHGOZgs4OuAWysOmotq1SoygSp+ehkZKYHMPetf3ZZa7s97ZQBub7W3VljGCCjLY6lx75zQ8wxkfmg7YSSm4zH5rQfVBSoVzguDsrH9zC8smIJjZKQWSkC5aJABldYHQtseoUSKhyzGCobJG8ODC0NGZri4DUE7a8t0EFC6DxL2ZmnpTVU8\/5Q1oDnAMDfzdtXtIcb23t0v0WKwqnjlkZG9z253sY0sDTYucG3NyNNRsghoCuMJoIJ6iOAOmb3r2Rhxaw2LnWJIDttlccbcJQ4a+JjpZJTK1zrtaxgblIGxJvv1QY8IWgwvhg1jXmjlEkjBmdBI3upS3a7DmLH6+Y3GmqoZY3NcWuBa5pIcCLEEbgg7FB5QnaSndK9kcYzPe5rGjq5xsB8StJjnDkNDUxUtS+RzntY6R8WVrIw9xHhDgS+1iSfCgyyFpON+EJMOka1zxJHICY3gZb23a4XNnC4563VpQdmtRUUUNVTva58gc50T\/AA6ZiGlr9rkAGxtvugw6ArfHeHpKKzagtbM7URNcHlrNfE8tJDbm1he51OltajMghBCEIC6UFJdAQL37mHOwkG1rjoUzESd17m2KbhSrY1IClUr1GaE7EbKjWLeB6nU8l1UQuU6CVUrWNPQRtcNVYDB2HWwVLhs34rTU1Rp\/Pr+Cz0ve0WaiawaD32WaxaW562+C0GM1wa03KxU9XmJN9FaIPwnVdQ4Zd+in0P2LldI7MQuocLC1M8c7Kb6j9KXHsCNRG2SM2kZ4R5i\/2qkwmoxGE92x7gL9PjYre4ad2n3VnHRt3sLqMbddIyk325VxbRvjps0ri6SWQFxJudieaxgXRe1aYWiZ9In4C33rna2w8c\/09ds4IF+HZALf0dZzAHy5eZ0CzvZc78hZUVsrXPbkEbWU4799wcxLu7u2MaDVxHNaDgn\/AOOyf2dZ\/HKsl2JzOGIlrScroH5xyOVzC0n0J+s9VLNedl7RX4lV4hI0Ats6Nu4aZcwB8yGMtf6RWI7QZi7EqsnX86W+zWho\/hXUaXEaeixyaAZWNq4oibaNbUAvsDyaXtdf1I6rmPaPTmPE6oEWzSZx5h7Q6\/1n4KRX8LTFlbSuGhFRD9cjQfqK6V2w4W1tRR1TRZz5BE\/6WVzXMJ8wMw+HRc64OpjJX0rAL3njPsxwefqaVuu1jHWzVlNSxkEQSNdIRt3jnNAbfqANf2vJA72XcW5JpKCc+B8khgLtg4uJdEfJ2pHnccwqfi3hL8hxGB8bf0eaeMx9GO7wF0XoNx5eixFY4iV5BsRI4gjcEPJBB5Fdx4LxyLFqPu6gB00JY545lzCHRzN6XLdfO42KDkPBn\/uFJ\/3EX8YW07d\/6el\/s5P42rFcFn\/1Ck\/7iL+MLbdu\/wDTUv8AZyfxtQZXs1qTHidLY2zPLD5hzHC3xsfZaLtvwxsdTDO0WM7HB9uboy0B3qQ8D90Kk7LsPdNiUBaPDETK88gGtIF\/VzmhWPbJjjKirZFGQ5tM1zXOBuDI8gvA9A1o9b9EGGp5nRua9ji1zSHNcDYgg3BB6qZVVk9bO0zSOlleWRhzrX1dZosPN31qvK0GExSUmWp7pzpiM1O3I5wZcWE8mltj4G8z4joBcNj25Yuxz4aVpBdFmkk+jmbZrfW1zb0WXkkkpqhzBXOpjZjCGGUhuWNrAZMmg2vpcgHW2yrH4PUyN79zJC6WdkLc7SHSyyB7tC7f5IudvF5JjiDCp6aUx1TCyRw7w5nBxcHE+LM0kG5B+CCXxXgNVSy\/pXjMnibLmMjZdtQ86k7b67KkXXu0+RowiiZJ\/SkwlvXwwHOfTUD3C5EghIQhAiVJdF0BIdCm4F6lOhTcR1Spx9S2r2E2wr2VRtD0cilwyKuaVKhKixeVoaKQjmtHRy2CyNFLZaSglusq0jPcV1jswadifioVPG02zHVavF8KbO3Xcag+aoJeHC5uUkkciNCPxUyxFlSKQtbay6TwxUxiFwLhcj\/ZctoOGp2PyC7m8iduvstVTYZVtAiha0vO7nEhjRz15lL\/AITudtdQ6PPQ6qzfMLKmooHR6ONyBY\/f7LzjeItghc9x0Av78vikmoXvtzjtBru8qsoOkYA9zqfuWaYbG5FxcXG1\/K4S1E5ke57t3Ek++q8Lok1HJld3bX4fx\/LDSGijghELhI0gmQutIXF9nF30iq3COLH0Wc0scUT3jK6V2aSQDezS85Wi9j8nktF2c9m768ConLo6a\/hto+ax1y3HhZyzc9bdV0jHqjCcEib+ixl79GMYxr5n23c579co01JU6VfPs9S6Rxke5z3uOZznG7iTzJ6qxq8bfOGCpaJnMbkbJmLZsovZrn6h4FzbMCdTquxcWcDUuJUbayhjbFM+MTR5WhglBaHZJGjTMRpm3B6hcH+ryOlk0Lahxt1Pc0zBE9wLTKXF8rWncMdYBl+oF\/NQ6OsEb87mB5BDhmc4eIOzZiWm51HNaXs\/4FlxJ5cSY6dhs+S2rj8yMHQu6k6Dz2XXa7DsJwWn710DPmtLmiWeV2+Vpfz3PIDyQfPtZVNkcXtYGXuSGuc4Ekkk+ImylYBjctHM2eE+IAgg3yvad2uAtcfeAu1z8OUGOUIqYIhBI8OyPDWtc17HFpbIG6PbdvwNxZcn4N4YfU4kyjlbl7t7jUDo2I+MX8zZt\/pXTQqcFxMU0rJhG1743NezM5wALTcXDSLjZW\/E3GLq9zHVEEd4wWtyOkYLOIJuMxvsF3LGosHoywVMVHFnvlD4owXZbXsMvK4+Krf+d8PfOof8Jn+lNDijOKZ44nQ0+Smjf8vuAWvfpbxyucXn2IVGCvqbD8Fw2eNssNNTPjeLtcIY7OG1x4fJY3tDwam\/KsMpYYImPlqe8fkjY0mKIXeHWGrbE6H5qaHFMNrWxStkLGShpvkkuWOPLMARcc7LejtjqxtDT\/CT\/Wu2f9PUf9Vg\/wAGP\/SvJ4epP6rB\/gx\/gmh8\/cSdolTWtia9scZilbMx0eYOD2hwb8px+df2ULGeKvyuRk1TAySVjQwlr3MZIGkkZ4xe+rj8ktvdfQeIUmGQW76Ojivt3jYWX9Mw1UM1ODfOw\/406aHz1j2Oz1snezvzG2VoboxjeTWN\/VCrgtF2g4tT1Na99KxjIWtEbMjQwPy3u+wA3JNvIBZwKBCugIJSIApAlKAg8zHT3Xiy9SnUBLZKmPTHp0OUK9lIY+6rY0xp+6ehcot17ieoaLimksrvDptd1mY5eiktmkDS6MZrakc7dfNZrytzHUjqpkLAdgucQcQv5Nt5m5VpQ8USXAdI4eQGX7N1Fwq+NldLpqYBod1+PT71ZU7hp5LBYXxTKHEE94y2z9bO5EHkrqDiVjnBj8oc7QFuxPQj71NieNXdZUjQ81zXj\/GM7hA06DxP9f1R7b\/BabGsVEUbpDyG3U7Ae5XLKiYvcXuNy4kn3U\/Obu2H2vGajzdaHgPhw4hWR0+vdj85MRyjaRcA8i4kNHrfks4u69gWEhlLNVEeKaTI0\/Qi0\/jL\/gFvHM6U4x08N9I4omctGsYxv2ABfLHF\/EL66qlqX3AcbRtP6kbb5G\/DU+ZK7R25453FCKdps+pdlPXu2WdJ7HwN\/eK4rwphBrKyCmAuJJG5\/wBhvik\/yhyUfTHBNGYcPpInbsgiB9cgv9a4BjvDzpsanooBYyVLrG2jGvAle70aHOPsvphosLBcs7MqVtTiuJ4huBK6CM+\/iI\/dZH\/eKkdHwfDIqWBkELcscbQ1o+0k8yTck9SvnPtN4nNfWvLXfmYSYoRyIB8b\/wB4jfoGrtnanjv5Hh0z2m0kg7mPqHSaEj0bmPsvmqipHSvZDGLvkc2Ng83ENHtqoH0b2OUpjwmC\/wCuZZPZ8ry36rH3WaxziWmwjGKqV8Ekj6iKBw7vIA0WcH\/KI1JY34LqGFULYIY4WfJiY2MejWgfcvnXtgrhLis9to2xxe7W5j9byPZBXcd8TnEat09i1gDWRMda7Gga3tpcuLjp1HRNcHcNSYjUtgjuG6OlktpGzmf2jsB19CqzC8PlqZmQQtzySHK0cvMk8mgak9AvpzgfhSPDqYQss558U0lrGR9tT5NGwHTzuguKOmjp4WxsAZHEwNaNg1rBbf0C5Zh\/c4tVVmJSVUlPBSkU8EkUoiIYAXSSOeb2DswPLQpO13iuWXPh1DHJLbSrdDG+TKDtD4AbX\/W8tOtuc4a2vhp6mlFHUmKpDA4fk8wLXRvDmvb4PKxHO46KR17DsIoqh\/dwY1VyvsTljrg51hubAbahZ7iXE6Cje+E4liksrNHMjqCQHfNMhaGg9d7KuwOF2BUEtZO3LXVQ7qmicPFGzcveOWtnEeTBuVzBzy4lxJJJJJO5JNySepKgSsSr5J3mSV75DsDI8yOa25IbnduBfyUVJdIUHq6QlIhQI6RIlKACULyvL3cvigNzdewkaEOULyGpWptj064Jh4UwvSWxycaoccllKiddVsXmW0tpT9PUluyajjunRCs7peJ1HWxk6tAdz215fitrhGE0tU3xht3DS3hsb6j0H2ALnzqEnqPRTsOlmhPhcD6ghOUbY5a6rpDuCIA05XEAHa9uQvr8fqWZn4chZIXNkf4S0tFwdjrdMwYtUPNjYX6OJUDH8ZLAYWHxH5bhu3yv1+xPeonPKSbtReKcRzuELTdrNXHq7b6vtKoUIWsmo4csuV2F9N9krAMJpbc2vJ9TK8lfMi712D462SjdSE\/nKdziBfUxyHMHD0cXD4dVaKsF214t32JOjBu2nY2IftOHePP+Zo\/dWr7BeGiGyYhI22e8MF\/mgjvHj1cA3909VRT9ndbW4tUCWN0cBnke+YjQxl5LRGf1nFth5c9rHuLGw0kAHhihhYBqQ1rGNFt\/RBU9oXEAoaGaa4zlvdxDrI\/Rvw1cfJpWY7AowMOeRuaiTN6hkYF\/YBcw7TuNTiVQO7uKeG4hBuC8n5UrhyJ2A5D1K1\/\/AA\/461pnonmxeRPFf9bwhkjR5gNYbevRSI\/\/ABA4tmqKelB0iYZnD6Uhys+DWO\/vKP2GcNGapdWvb+bp7tjv+tK4akfstJ93DonuP+Ca6txmTu4nCKQR2mI\/NMY2NrXEnmQQ7w7n612Hh\/B4aGmZTxaMibqToSd3PcepNySoDmP4qykp5aiT5MTC4+ZGzR5k2A9V8l1tU+aR8r9Xyvc91tbue4uNvc6Lf9r3HgrXilpnXp4nXc8bTSDYjqxvLqdeQTHYtw4Kqu76QXjpQJNRo6U3EQ9rOd+61B0zso4GFBD38w\/SpWjN\/wDkzcRjz2Lj105Je1jjn\/l8Pcwn9JmByc+6ZsZD57ho6g9Ft6+rZDG+WQ5WRtc95PJrQST8AvlbiCtqMQqJKx0UhErjls1xDWDRjAR0At63UhvCuJ6yma5sFTJGHOL3ZSPE47ucSLknqVN\/68xP+vT\/AN4fgs3dCgS8QxCWd\/eTyPledM0ji426C+w8gowK8oCgeroukJSIPV0BeUIIMlR0Xls5TCchGqsJAeTysvbWoa1e2hU2tILIKcDV5cxRtpIYKakUotQ2G6naLihXXqN9lZR0F1KpsMF9Qo5QmFR6OoVxSOBTE3D5PiiNj807H0PJQ2tliNpGOb6jT47Klm\/Gstnrc4OG3uQP56q+qWRPbYtHrZYKhxIAb6rRUHeSDYtb1OnwBWVbTSs4kxNlK2zNXv8AkjoPnHyWJbVB2t9Tqb73Wm4v4YeSZ2OLj+s0m5sPm\/gsOV0fOTXTl+1vLtb3RdV8EhGylNmHPRXYnrqVheJy00rZoJDHI3ZzfPcEHQg8wdFDDgkJQdPg7bK5rLOhp3O+faRvuWh33hZDijjSsxDSpluwG4iYMkQI2OW93HzcSs8ShAt05TVL43tkjcWPYQ5jmmzmkbEFMouoHTMP7aq+NmWSOCYjZ5DmOPm4NNifQBZ\/intCrq9pjlkDIjvFCCxjvJ5uXO9CbeSyiFIW60nC3HNXh0b46YxBsj87i+PO4nKG73GlgNPVZlCgbPG+03EKuB9PM+Lu5BlfkjyuIuDbNm0vZUFNjcscZiYQ1paWGzfFY5r69fG\/X6RVWlUhboukuhQFRdIhB6ugLyCi6BcyUFeEt0FWvTShCsJcMl1KjakQqZdNcOz7QlyXQhU20MPYnIGoQn6QtaZgVhDGhCo0i0p7Cx+5T2SBCFWrx7iDb7D4BWEeqEKtSarrBpuuP49GGzOtsdUIWvxvbH7+IcKmFlwhC6HKZeENmI31CEIg+HIuhCqkEpEIQLdF0IQF0l0IQLdBchCARdCEBdJdCEC3QChCAuhCEH\/\/2Q==',width=400,height=400)","c0bdbbfc":"Only one ridiculous violin and flying saucers!","0d8422c1":"Kaggle Notebook Runner: Mar\u00edlia Prata @mpwolke.","7086db67":"Image lowyat.net - Is she going to bang with a lot of men like the previews Bonds did with women? Best joke ever in Saturday Night live: Mr Bond you got a lot of VD, some you caught with sharks. ","057f57fe":"Codes from Binu @biphili","c547727c":"Image quoteparrot.com  - I couldn't agree more with you Idris Elba. It's just James Bond , not black James Bond. ","2c86d57d":"Image cheezburger.com","c7e1c367":"Not a swarm, just plot.","5054d093":"How about a black female Jane Bond? Instead of just another Bond Girl? Think about that Kaggle community. "}}