{"cell_type":{"ef6189a7":"code","5d8155b6":"code","76370b31":"code","ee2978cc":"code","8957cd19":"code","1fcb704d":"code","f12ba211":"code","ded76ed5":"code","adde2302":"code","e9ccb6de":"code","663ba876":"code","1604f92a":"code","80924517":"code","e96faf0a":"code","e0d6741d":"code","fbe47505":"markdown","a4e2e200":"markdown","65aaf294":"markdown","8e14ca1f":"markdown","46cbcf03":"markdown","87114c84":"markdown","bfc9c153":"markdown","25a400fc":"markdown","58fd7361":"markdown","54f6ffbf":"markdown","d22a7e8c":"markdown","8840e3a9":"markdown"},"source":{"ef6189a7":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","5d8155b6":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","76370b31":"df = pd.read_csv('\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndf.head()","ee2978cc":"df.rename(columns={'Annual Income (k$)' : 'Income', 'Spending Score (1-100)' : 'Spending_Score'}, inplace = True)\ndf.head()","8957cd19":"df_Short = df[['Income','Spending_Score']]\ndf_Short.head()","1fcb704d":"import sklearn.cluster as cluster","f12ba211":"K=range(1,12)\nwss = []\nfor k in K:\n    kmeans=cluster.KMeans(n_clusters=k,init=\"k-means++\")\n    kmeans=kmeans.fit(df_Short)\n    wss_iter = kmeans.inertia_\n    wss.append(wss_iter)","ded76ed5":"mycenters = pd.DataFrame({'Clusters' : K, 'WSS' : wss})\nmycenters","adde2302":"sns.scatterplot(x = 'Clusters', y = 'WSS', data = mycenters, marker=\"+\")\n# We get 5 Clusters","e9ccb6de":"import sklearn.metrics as metrics","663ba876":"for i in range(3,13):\n    labels=cluster.KMeans(n_clusters=i,init=\"k-means++\",random_state=200).fit(df_Short).labels_\n    print (\"Silhouette score for k(clusters) = \"+str(i)+\" is \"\n           +str(metrics.silhouette_score(df_Short,labels,metric=\"euclidean\",sample_size=1000,random_state=200)))","1604f92a":"# We will use 2 Variables for this example\nkmeans = cluster.KMeans(n_clusters=5 ,init=\"k-means++\")\nkmeans = kmeans.fit(df[['Spending_Score','Income']])","80924517":"df['Clusters'] = kmeans.labels_\n","e96faf0a":"kmeans.labels_","e0d6741d":"sns.scatterplot(x=\"Spending_Score\", y=\"Income\",hue = 'Clusters',  data=df)","fbe47505":"## -- Max Silhouette Score as k = 5, Hence 5 Clusters is the right option","a4e2e200":"# Import Data & Rename Columns","65aaf294":"# Import Libraries","8e14ca1f":"## -- 5 Clusters Identified as per Elbow Method","46cbcf03":"# Plot Elbow Plot","87114c84":"# Perform K-Mean Clustering with 5 Clusters","bfc9c153":"# END","25a400fc":"## Run Cluster Analysis 12 times\n\n- We run the Cluster Analysis using Cluster as 1 till 12. Also, we store the WSS Scores. The WSS score will be used to create the Elbow Plot\n- WSS = Within-Cluster-Sum of Squared","58fd7361":"# Elbow Method to Indetify Clusters","54f6ffbf":"# Plot Clusters on Chart","d22a7e8c":"## We Store the Number of clusters along with their WSS Scores in a DataFrame","8840e3a9":"# Silhouette Method to Indentify Clusters"}}