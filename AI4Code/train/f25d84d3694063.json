{"cell_type":{"980bf125":"code","1f0297a7":"code","cd0d7441":"code","d821f623":"code","6b7d6022":"code","ed66f09d":"code","3f7e267c":"code","43c360c7":"code","6eb5be0e":"code","4d944249":"code","1247ff9a":"code","fdb7b3a5":"code","26524fd3":"code","555f1c1e":"code","9efa5721":"code","d6c72e85":"code","25ab219b":"code","2a87736a":"code","6ec40e97":"code","1603fa61":"code","dba9da6d":"markdown","be587637":"markdown","7a3080a2":"markdown","ef93e4fb":"markdown","40b2cf73":"markdown","3712f810":"markdown","3b28ed83":"markdown","f9d71756":"markdown","3e80f622":"markdown","acc0c2dd":"markdown"},"source":{"980bf125":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1f0297a7":"##Loading essentials\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","cd0d7441":"data = pd.read_csv(\"..\/input\/iris-flower-dataset\/IRIS.csv\")\nprint(data.shape)\ndata.head()","d821f623":"##misiing value check\ndata.isnull().sum()","6b7d6022":"## cheching data format\ndata.info()","ed66f09d":"print(\"No of duplicates in our dataset is\" ,data.duplicated().sum())\ndata[data.duplicated()]","3f7e267c":"data.describe()","43c360c7":"data['species'].value_counts()","6eb5be0e":"##let's see how two different columns helps us differentiating species\nfig, axs = plt.subplots(1, 2)\nfig.set_size_inches(18, 7)\nsns.scatterplot(ax=axs[0],x = \"sepal_length\",y =\"sepal_width\",hue='species',data=data)\naxs[0].set_title(\"sepealLength vs sepelWidth\")\nsns.scatterplot(ax=axs[1],x = \"petal_length\",y =\"petal_width\",hue='species',data=data)\naxs[1].set_title(\"petalLength vs petalWidth\")\n","4d944249":"sns.pairplot(data,hue='species');\nplt.grid(True)","1247ff9a":"sns.heatmap(data.corr(),annot=True,cmap='magma')","fdb7b3a5":"plt.style.use(\"ggplot\")\nfig, axes = plt.subplots(2, 2, figsize=(16,9))\naxes[0,0].set_title(\"Distribution of Sepal Width\")\naxes[0,0].hist(data['sepal_width'], bins=5);\naxes[0,1].set_title(\"Distribution of Sepal Length\")\naxes[0,1].hist(data['sepal_length'], bins=7);\naxes[1,0].set_title(\"Distribution of Petal Width\")\naxes[1,0].hist(data['petal_width'], bins=5);\naxes[1,1].set_title(\"Distribution of Petal Length\")\naxes[1,1].hist(data['petal_length'], bins=6);\n","26524fd3":"fig, axes = plt.subplots(2, 2, figsize=(16,9))\nsns.histplot(ax = axes[0,0],data=data,x ='sepal_width',hue='species',kde=True)\nsns.histplot(ax = axes[0,1],data=data,x ='sepal_length',hue='species',kde=True)\nsns.histplot(ax = axes[1,0],data=data,x ='petal_width',hue='species',kde=True)\nsns.histplot(ax = axes[1,1],data=data,x ='petal_length',hue='species',kde=True)","555f1c1e":"fig, axes = plt.subplots(2, 2, figsize=(16,9))\nsns.boxplot(  y=\"petal_width\", x= \"species\", data=data,  orient='v' , ax=axes[0, 0])\nsns.boxplot(  y=\"petal_length\", x= \"species\", data=data,  orient='v' , ax=axes[0, 1])\nsns.boxplot(  y=\"sepal_width\", x= \"species\", data=data,  orient='v' , ax=axes[1, 0])\nsns.boxplot(  y=\"sepal_length\", x= \"species\", data=data,  orient='v' , ax=axes[1, 1])\nplt.show()","9efa5721":"## split data perform one hot encoding and get ready for modeling\nx = data.drop('species',axis=1)\ny = data['species']\n## perform ohe\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,random_state=42,test_size=.3)","d6c72e85":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.svm import SVC\nparam_grid = {'C': [0.1,1, 10, 100], 'gamma': [1,0.1,0.01,0.001]} \n","25ab219b":"model  = GridSearchCV(SVC(),param_grid,refit=True,verbose=2)\nmodel.fit(x_train,y_train)","2a87736a":"model.best_params_","6ec40e97":"prediction = model.predict(x_test)","1603fa61":"from sklearn.metrics import confusion_matrix\ncf = confusion_matrix(y_test,prediction)\nsns.heatmap(cf,annot=True,cmap='BuPu')","dba9da6d":"Till now we have successfully loaded our dataset , and checked for missing values and incorrect data formats , data is aleardy free of them\n<br>aslo there are three duplicated values but dropping them might lead to imbalanced dataset\n<br>\nNow we will move to data exploration part and will try to see how we can classify flower type based upon given features","be587637":"    we see that petal_length and petal_width have a high correlation, petal_width and sepal_length have good correlation as well as petal_length and sepal_length have good correlations.\n    \n**Lets' dive into univariate analysis**","7a3080a2":"Taking help from above <a href=\"https:\/\/scikit-learn.org\/stable\/tutorial\/machine_learning_map\/index.html\">sklearn guide<\/a> , we have labeled data to predict with less then 100k records so we will go with SVC classifier,\n","ef93e4fb":"    Distribution of Sepel Width is unimodal ,ranging between 4.4 to 7.9 ,with mean of nearly 3 and medial is somewhare between 3.3 to 3.5, maximum data fall between the range of 2.5 to 4\n    \n    Distribution of Sepel Length is unimodal ,ranging between 2.0 to 4.4 ,with mean of nearly 5.8 and medial is somewhare around 6, maximum data fall between the range of 5 to 7\n    \n    Distribution of petal Width is bimodal ,ranging between 0 to 2.5 ,with mean of nearly 1.2 and medial is somewhare around 1.4, maximum data fall between the range of 0.0 to 0.5 and between 1.0 to 1.5\n    \n    Distribution of petal Length is biimodal ,ranging between 1.0 to 6.9 ,with mean of nearly 4 and medial is somewhare between 4, maximum data fall between the range of 1 to 2 and 4 to 6","40b2cf73":"The dataset contains a set of 150 records under 5 attributes - Petal Length, Petal Width, Sepal Length, Sepal width and Class(Species).\n\n## Workflow\n1. Data Wranggling \n2. EDA\n3. Applying appropriate machine learning model to solve the problem","3712f810":"    1. From the above visualization, we can tell that the iris-setosa species has smaller sepal length but higher width. While we see Versicolor lies in almost middle for length as well as width. While Virginica has larger sepal lengths and smaller sepal widths.\n   \n    2. We see that setosa has the smallest petal length as well as petal widths, while Versicolor has average petal length and petal width while the virginica species has the highest petal length as well as petal width","3b28ed83":"all set , model is working extreamly well , we have classified each and every class correctly.\n<br>\n**Thank you**\n","f9d71756":"Threre are eqaul no of records for each species , fully balanced data set.\n<br>\n","3e80f622":"    We can see that the setosa species has a large difference in its characteristics when compared to the other species, it has smaller petal width and length while its sepal width is high and its sepal length is low. Similar kind of conclusions can be drawn for the other species like the Versicolor species usually have average dimensions whether it is sepal or petal. While virginica has high pedal width and length while it has small sepal width but large sepal length.\n\n\n\nlet's explore correlation between features","acc0c2dd":"### Conclusion of EDA\n1. The dataset is balanced i.e. equal records are present for all three species.\n2. We have four numerical columns while just one categorical column which in turn is our target column.\n3. A strong correlation is present between petal width and petal length.\n4. The setosa species is the most easily distinguishable because of its small feature size.\n5. The Versicolor and Virginica species are usually mixed and are sometimes hard to separate, while usually Versicolor has average feature sizes and virginica has larger feature sizes.\n6. We do have some outliers and duplicates but we have just 150 recodrs and outliers are not putting a big impact so we are not going to wrangle them.\n\n\n## Now let's fingure out model of best fit for data"}}