{"cell_type":{"663b8f89":"code","818a85eb":"code","74cbd754":"code","5c056124":"code","712fd518":"code","a9d30ed2":"code","6e67aa81":"code","73e7f7d9":"code","9dc5e5b3":"code","d4b612a6":"code","467d454c":"code","17c9e4fe":"code","8ebc8da4":"code","5d60e1aa":"code","f2a86b3a":"code","6eadae42":"code","f70c74aa":"code","9045bf56":"code","295d527a":"code","fec06767":"code","b6e4a0e0":"code","84cfd15e":"code","aec53dd2":"code","bae78f4f":"code","07879790":"code","998fadfe":"code","1e0e56c2":"code","e447488d":"code","620c40a4":"code","fd1e0e2b":"code","7ff100a7":"code","4f3a9241":"code","126417df":"code","566390d2":"code","eda04c20":"markdown"},"source":{"663b8f89":"!pip install pycaret","818a85eb":"import pandas as pd\nimport numpy as np\nimport category_encoders as ce\nimport warnings\nfrom pycaret.classification import *\nfrom imblearn.over_sampling import SMOTE\nwarnings.filterwarnings('ignore')","74cbd754":"df_train = pd.read_csv(\"..\/input\/hackerearth-customer-segmentation-hackathon\/avhacklive\/Train.csv\")\ndf_test = pd.read_csv(\"..\/input\/hackerearth-customer-segmentation-hackathon\/avhacklive\/Test.csv\")\ndf_test_id = df_test[\"id\"]","5c056124":"df_train","712fd518":"df_train.isnull().sum()","a9d30ed2":"df_train.dtypes","6e67aa81":"df_train[\"days_since_prev_campaign_contact\"].value_counts()","73e7f7d9":"df_train[\"customer_age\"].value_counts().sort_index()","9dc5e5b3":"df_train[\"marital\"] = df_train[\"marital\"].fillna(\"unknown\")\ndf_test[\"marital\"] = df_test[\"marital\"].fillna(\"unknown\")","d4b612a6":"ma = df_train[df_train[\"marital\"]==\"married\"][\"customer_age\"].mean()\numa = df_train[df_train[\"marital\"]!=\"married\"][\"customer_age\"].mean()\nuk = df_train[df_train[\"marital\"]==\"unknown\"][\"customer_age\"].mean()","467d454c":"ma","17c9e4fe":"df_train[\"marital\"].value_counts()","8ebc8da4":"for i in range(len(df_train)):\n    if np.isnan(df_train[\"customer_age\"][i]):\n        # print(df_train[\"customer_age\"][i])\n        if df_train[\"marital\"][i] == \"single\":\n            df_train[\"customer_age\"][i] = round(uma)\n        if df_train[\"marital\"][i] == \"married\":\n            df_train[\"customer_age\"][i] = round(ma)\n        if df_train[\"marital\"][i] == \"divorced\":\n            df_train[\"customer_age\"][i] = round(ma)\n        if df_train[\"marital\"][i] == \"unknown\":\n            df_train[\"customer_age\"][i] = round(uk)\n\nfor i in range(len(df_test)):\n    if np.isnan(df_test[\"customer_age\"][i]):\n        if df_test[\"marital\"][i] == \"single\":\n            df_test[\"customer_age\"][i] = round(uma)\n        if df_test[\"marital\"][i] == \"married\":\n            df_test[\"customer_age\"][i] = round(ma)\n        if df_test[\"marital\"][i] == \"divorced\":\n            df_test[\"customer_age\"][i] = round(ma)\n        if df_test[\"marital\"][i] == \"unknown\":\n            df_test[\"customer_age\"][i] = round(uk)\n\n","5d60e1aa":"df_train[\"job_type\"].value_counts()","f2a86b3a":"def one_hot_encoding(df,col):\n    one_hot_encoder=ce.OneHotEncoder(cols=col,return_df=True,use_cat_names=True)\n    df_final = one_hot_encoder.fit_transform(df)\n    return df_final","6eadae42":"df_train[\"term_deposit_subscribed\"].value_counts()","f70c74aa":"df_train","9045bf56":"for i in df_train.columns:\n    if df_train[i].dtypes == \"object\":\n        print(i)\n        print(len(df_train[i].value_counts()))","295d527a":"df_train","fec06767":"for i in df_train.columns:\n    if i == \"term_deposit_subscribed\":\n        continue\n    if df_train[i].dtypes == \"object\" and i !=\"id\":\n        # print(i)\n        df_train[i].fillna(\"unknown\",inplace=True)\n        df_train = one_hot_encoding(df_train,i)\n        # print(len(df_train[i].value_counts()))\n    elif df_train[i].isnull().sum()>0: \n        if i == \"num_contacts_in_campaign\":\n            df_train[i].fillna(1.0,inplace=True)\n        else:\n            df_train[i].fillna(round(df_train[i].mean()),inplace=True)\n    \n    if df_test[i].dtypes == \"object\" and i !=\"id\":\n        # print(i)\n        df_test[i].fillna(\"unknown\",inplace=True)\n        df_test = one_hot_encoding(df_test,i)\n        # print(len(df_test[i].value_counts()))\n    elif df_test[i].isnull().sum()>0: \n        if i == \"num_contacts_in_campaign\":\n            df_test[i].fillna(1.0,inplace=True)\n        else:\n            df_test[i].fillna(round(df_test[i].mean()),inplace=True)","b6e4a0e0":"columns_to_drop = [\"id\"]\ndf_train = df_train.drop(columns_to_drop,axis = 1)\ndf_test = df_test.drop(columns_to_drop,axis = 1)","84cfd15e":"df_train.isnull().sum()","aec53dd2":"df_train.dtypes","bae78f4f":"X_train = df_train.drop(\"term_deposit_subscribed\",axis = 1)\nY_train = df_train[\"term_deposit_subscribed\"]","07879790":"smote = SMOTE()\nX_train, Y_train = smote.fit_resample(X_train, Y_train)","998fadfe":"Y_train.value_counts()","1e0e56c2":"df_train_smoted = X_train\ndf_train_smoted[\"term_deposit_subscribed\"] = Y_train","e447488d":"experiment = setup(df_train_smoted,target = \"term_deposit_subscribed\",imputation_type=\"iterative\")","620c40a4":"# compare_models()","fd1e0e2b":"mod = create_model(\"rf\")\n","7ff100a7":"df_train","4f3a9241":"df_test","126417df":"y_pred = predict_model(mod , data = df_test)","566390d2":"final = pd.DataFrame()\nfinal[\"id\"] = df_test_id\nfinal[\"term_deposit_subscribed\"]=round(y_pred[\"Score\"])\nfinal.to_csv(\"submission_v1.csv\")","eda04c20":"<a style='text-decoration:none;line-height:16px;display:flex;color:#5B5B62;padding:10px;justify-content:end;' href='https:\/\/deepnote.com?utm_source=created-in-deepnote-cell&projectId=acac183a-28e1-4414-9c63-9caee69dbb90' target=\"_blank\">\n<img alt='Created in deepnote.com' style='display:inline;max-height:16px;margin:0px;margin-right:7.5px;' src='data:image\/svg+xml;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iODBweCIgaGVpZ2h0PSI4MHB4IiB2aWV3Qm94PSIwIDAgODAgODAiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDU0LjEgKDc2NDkwKSAtIGh0dHBzOi8vc2tldGNoYXBwLmNvbSAtLT4KICAgIDx0aXRsZT5Hcm91cCAzPC90aXRsZT4KICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPgogICAgPGcgaWQ9IkxhbmRpbmciIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgogICAgICAgIDxnIGlkPSJBcnRib2FyZCIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTEyMzUuMDAwMDAwLCAtNzkuMDAwMDAwKSI+CiAgICAgICAgICAgIDxnIGlkPSJHcm91cC0zIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxMjM1LjAwMDAwMCwgNzkuMDAwMDAwKSI+CiAgICAgICAgICAgICAgICA8cG9seWdvbiBpZD0iUGF0aC0yMCIgZmlsbD0iIzAyNjVCNCIgcG9pbnRzPSIyLjM3NjIzNzYyIDgwIDM4LjA0NzY2NjcgODAgNTcuODIxNzgyMiA3My44MDU3NTkyIDU3LjgyMTc4MjIgMzIuNzU5MjczOSAzOS4xNDAyMjc4IDMxLjY4MzE2ODMiPjwvcG9seWdvbj4KICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0zNS4wMDc3MTgsODAgQzQyLjkwNjIwMDcsNzYuNDU0OTM1OCA0Ny41NjQ5MTY3LDcxLjU0MjI2NzEgNDguOTgzODY2LDY1LjI2MTk5MzkgQzUxLjExMjI4OTksNTUuODQxNTg0MiA0MS42NzcxNzk1LDQ5LjIxMjIyODQgMjUuNjIzOTg0Niw0OS4yMTIyMjg0IEMyNS40ODQ5Mjg5LDQ5LjEyNjg0NDggMjkuODI2MTI5Niw0My4yODM4MjQ4IDM4LjY0NzU4NjksMzEuNjgzMTY4MyBMNzIuODcxMjg3MSwzMi41NTQ0MjUgTDY1LjI4MDk3Myw2Ny42NzYzNDIxIEw1MS4xMTIyODk5LDc3LjM3NjE0NCBMMzUuMDA3NzE4LDgwIFoiIGlkPSJQYXRoLTIyIiBmaWxsPSIjMDAyODY4Ij48L3BhdGg+CiAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMCwzNy43MzA0NDA1IEwyNy4xMTQ1MzcsMC4yNTcxMTE0MzYgQzYyLjM3MTUxMjMsLTEuOTkwNzE3MDEgODAsMTAuNTAwMzkyNyA4MCwzNy43MzA0NDA1IEM4MCw2NC45NjA0ODgyIDY0Ljc3NjUwMzgsNzkuMDUwMzQxNCAzNC4zMjk1MTEzLDgwIEM0Ny4wNTUzNDg5LDc3LjU2NzA4MDggNTMuNDE4MjY3Nyw3MC4zMTM2MTAzIDUzLjQxODI2NzcsNTguMjM5NTg4NSBDNTMuNDE4MjY3Nyw0MC4xMjg1NTU3IDM2LjMwMzk1NDQsMzcuNzMwNDQwNSAyNS4yMjc0MTcsMzcuNzMwNDQwNSBDMTcuODQzMDU4NiwzNy43MzA0NDA1IDkuNDMzOTE5NjYsMzcuNzMwNDQwNSAwLDM3LjczMDQ0MDUgWiIgaWQ9IlBhdGgtMTkiIGZpbGw9IiMzNzkzRUYiPjwvcGF0aD4KICAgICAgICAgICAgPC9nPgogICAgICAgIDwvZz4KICAgIDwvZz4KPC9zdmc+' > <\/img>\nCreated in <span style='font-weight:600;margin-left:4px;'>Deepnote<\/span><\/a>"}}