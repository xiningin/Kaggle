{"cell_type":{"7475705f":"code","7a861426":"code","c5fa20a1":"code","faa6c47e":"code","a6747658":"code","3fc764cc":"code","e40b9d89":"code","68703359":"code","a60a07a1":"code","a9927b54":"code","1c9e9367":"code","dbc8d48f":"code","2b66629b":"code","e215d05a":"code","42fd763f":"code","d7ecbccb":"code","f29ed2d2":"code","39bb849a":"code","b2aae1e2":"code","551346da":"code","3f49ed9e":"code","790d6bf8":"code","423a1d2d":"code","b34fefb2":"code","b1031f48":"code","cdf7b3c0":"markdown","0bb63996":"markdown","ef910a8e":"markdown","adaed39d":"markdown","4a06f0d6":"markdown","61790597":"markdown","351e9838":"markdown","2b9a1d7b":"markdown","586dc903":"markdown","8d221f79":"markdown","9cdd686a":"markdown","bc9769b3":"markdown","761cf5e6":"markdown"},"source":{"7475705f":"#import libraries\n\n\nimport numpy\nimport pandas\nimport sklearn.linear_model\nimport sklearn.ensemble\nimport matplotlib\nimport seaborn\nimport tensorflow as tf\nfrom tensorflow.keras.callbacks import ModelCheckpoint\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation, Flatten","7a861426":"#import data\ntrain_data = pandas.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\ntest_data = pandas.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv')","c5fa20a1":"#check training data\ntrain_data.head()","faa6c47e":"#check test data\ntest_data.head()","a6747658":"#train data info\ntrain_data.describe()","3fc764cc":"#check for missing values\ntrain_data.isnull().sum()","e40b9d89":"#take absolute number of price and quantity \ntrain_data['item_price'] = train_data['item_price'].abs()\ntrain_data['item_cnt_day'] = train_data['item_cnt_day'].abs()","68703359":"#Grouping item price and item count per month\ntrain_data = train_data.groupby(['date_block_num','shop_id','item_id']).agg({'item_price':'last','item_cnt_day':'sum'}).reset_index()\n#Changing the name of the item_cnt_day to item_cnt_month\ntrain_data = train_data.rename(columns={'item_cnt_day':'item_cnt_month'})","a60a07a1":"#check training data\ntrain_data.head()","a9927b54":"train_data['item_id'].hist()","1c9e9367":"#Calculating Correlation\ncorrelation = train_data.corr()\n\n#Plotting correlation\nmatplotlib.pyplot.figure(figsize=(12,12))\ncorr_heatmap = seaborn.heatmap(correlation,annot=True,cmap=\"YlOrRd\")","dbc8d48f":"#Adding date_block_num to the Test data\ntest_data['date_block_num']=34\ntest_data = test_data[['date_block_num','shop_id','item_id']]\n#Adding the prices\nitem_price = dict(train_data.groupby('item_id')['item_price'].last().reset_index().values)\ntest_data['item_price'] = test_data.item_id.map(item_price)\n#check test data\ntest_data.head()","2b66629b":"#replacing missings\ntest_data['item_price'] = test_data['item_price'].fillna(test_data['item_price'].mean())\ntest_data['item_price']","e215d05a":"#data split\nx_train = train_data.drop('item_cnt_month',axis=1)\ny_train = train_data[\"item_cnt_month\"]\nx_test = test_data\n\n#check data\nx_test.head()","42fd763f":"linear_model = sklearn.linear_model.LinearRegression()\nlinear_model.fit(x_train,y_train)\nlinear_prediction = linear_model.predict(x_test)\n#print(linear_prediction)\nR2 = linear_model.score(x_train,y_train)\nprint (R2)","d7ecbccb":"#RMSE for linear\ne = y_train - linear_model.predict(x_train)\nMSE = numpy.square(e).mean()\nRMSE = numpy.sqrt(MSE)\nprint (RMSE)","f29ed2d2":"rr_model = sklearn.ensemble.RandomForestRegressor(n_estimators=50)\nrr_model.fit(x_train,y_train)\nrr_predict = rr_model.predict(x_test)","39bb849a":"R2 = rr_model.score(x_train,y_train)\nprint (R2)","b2aae1e2":"#RMSE for random forest\ne = y_train - rr_model.predict(x_train)\nMSE = numpy.square(e).mean()\nRMSE = numpy.sqrt(MSE)\nprint (RMSE)","551346da":"matplotlib.pyplot.plot(y_train)\nmatplotlib.pyplot.plot(rr_model.predict(x_train))\nmatplotlib.pyplot.plot(linear_model.predict(x_train))","3f49ed9e":"#Lasso\nlasso_model = sklearn.linear_model.Lasso(alpha=1.0)\nlasso_model.fit(x_train,y_train)\nlasso_predict = lasso_model.predict(x_test)\nprint(lasso_predict)\n\n#Ridge\nr_model = sklearn.linear_model.Ridge(alpha=1.0)\nr_model.fit(x_train,y_train)\nr_predict = r_model.predict(x_test)\nprint(r_predict)","790d6bf8":"#R2 for lasso\nR2 = lasso_model.score(x_train,y_train)\nprint (R2)\n\n#RMSE for lasso\ne = y_train - lasso_model.predict(x_train)\nMSE = numpy.square(e).mean()\nRMSE = numpy.sqrt(MSE)\nprint (RMSE)","423a1d2d":"#R2 for ridge\nR2 = r_model.score(x_train,y_train)\nprint (R2)\n\n#RMSE for ridge\ne = y_train - r_model.predict(x_train)\nMSE = numpy.square(e).mean()\nRMSE = numpy.sqrt(MSE)\nprint (RMSE)","b34fefb2":"rr_predict","b1031f48":"sample_submission= pandas.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv\")\nsample_submission.item_cnt_month=rr_predict\nresult=sample_submission\nprint(result)\n\nresult.to_csv(\"submission.csv\",index=False)","cdf7b3c0":"\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. \u0412 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c \u0432 \u043f\u0435\u0440\u0432\u044b\u0435 33 \u043c\u0435\u0441\u044f\u0446\u0430. \u0414\u043e\u0431\u0430\u0432\u0438\u043c 34 \u043c\u0435\u0441\u044f\u0446, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0434\u0430\u0436\u0438. \u0422\u0430\u043a\u0436\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0446\u0435\u043d\u0435 \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0430 \u0438\u0437 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.","0bb63996":"\u0415\u0441\u0442\u044c \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0446\u0435\u043d\u0435 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u043e\u0432\u0430\u0440\u0430, \u0447\u0442\u043e \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u043c. \u041f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u043c, \u0447\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0432 \u043e\u0448\u0438\u0431\u043e\u0447\u043d\u043e \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u043c \u043c\u0438\u043d\u0443\u0441\u0435, \u0438 \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u043c\u043e\u0434\u0443\u043b\u044c \u0447\u0438\u0441\u043b\u0430.","ef910a8e":"\u0423\u0436\u0430\u0441\u043d\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u043b\u0435\u0441\u0430.","adaed39d":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0441\u0442\u0430\u043b \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043b\u0443\u0447\u0448\u0435. \u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0438 \u043f\u0440\u043e\u0433\u043d\u043e\u0437, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u0434\u0432\u0443\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438. ","4a06f0d6":"\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.","61790597":"\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0442\u0430\u043a\u0436\u0435 \u0440\u0438\u0434\u0436 \u0438 \u043b\u0430\u0441\u0441\u043e \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438.","351e9838":"\u0421\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u043e RMSE. \u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u043e\u0448\u0438\u0431\u043a\u0443","2b9a1d7b":"\u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043b\u0438\u043d\u0435\u0439\u043d\u0443\u044e \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e \u0438 \u0432\u044b\u0432\u0435\u0434\u0435\u043c R2","586dc903":"\u041d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u043c \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0438\u0445 \u0441\u0440\u0435\u0434\u043d\u0435\u0439 \u0446\u0435\u043d\u043e\u0439.","8d221f79":"\u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0433\u043e\u0442\u043e\u0432\u044b \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u044b. \u0412 \u043f\u0435\u0440\u0432\u0443\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435.","9cdd686a":"\u041d\u0438\u043a\u0430\u043a\u043e\u0439 \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043d\u0435 \u0431\u044b\u043b\u043e.","bc9769b3":"\u0421\u0433\u0440\u0443\u043f\u0438\u0440\u0443\u0435\u043c \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u043f\u043e \u043c\u0435\u0441\u044f\u0446\u0430\u043c, \u0442\u0430\u043a \u043a\u0430\u043a \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0433\u043d\u043e\u0437 \u043d\u0430 \u043c\u0435\u0441\u044f\u0447\u043d\u044b\u0435 \u043f\u0440\u043e\u0434\u0430\u0436\u0438","761cf5e6":"\u041b\u0430\u0441\u0441\u043e \u0438 \u0440\u0438\u0434\u0436 \u043d\u0435 \u0434\u0430\u043b\u0438 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430. \u0411\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u043d\u043e\u0437 \u043e\u0442 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u043b\u0435\u0441\u0430 \u043a\u0430\u043a \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439."}}