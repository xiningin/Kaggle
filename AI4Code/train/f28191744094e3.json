{"cell_type":{"3ee94dab":"code","7b3ecb46":"code","daaa8de1":"code","b982c4ba":"code","4f8bba6f":"code","5dc34d54":"code","567c4267":"code","6f24953b":"code","00ac04f2":"code","a6d64fc9":"code","3b8fd4db":"code","068a6d3c":"code","0dc259e2":"code","8462e0ce":"markdown","133b33db":"markdown","04ad25f6":"markdown","fb31e072":"markdown","8d605724":"markdown","520af993":"markdown","ae047e33":"markdown","3c6ce741":"markdown","77123da8":"markdown","844679bb":"markdown"},"source":{"3ee94dab":"![ -d \/kaggle\/input\/release-2021-v1\/augeropendata ] && [ ! -d augeropendata ] && ln -s \/kaggle\/input\/release-2021-v1\/augeropendata augeropendata  # kaggle specific linking dataset to augeropendata directory","7b3ecb46":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pytz\n#from scipy.optimize import curve_fit \nfrom matplotlib.dates import DateFormatter","daaa8de1":"# Default values for plots\nplt.rcParams[\"figure.figsize\"] = [14, 9] # figure width and height\nplt.rcParams[\"font.size\"] = 24\n\nplt.rcParams['xtick.labelsize']=20\nplt.rcParams['ytick.labelsize']=18\n\nplt.rcParams['xtick.major.size']=10\nplt.rcParams['xtick.minor.size']=6\nplt.rcParams['ytick.major.size']=10\nplt.rcParams['ytick.minor.size']=6","b982c4ba":"malargue_tz = pytz.timezone('America\/Argentina\/Mendoza') # UTC-3, but more elegant\n\ndef read_ws(fn, utc=False):\n    df = pd.read_csv(fn)\n    date = pd.to_datetime(df.time.values, unit='s', utc=True)\n    if utc:\n        date = pd.to_datetime(df.time.values, unit='s', utc=True)\n    else:\n        date = pd.to_datetime(df.time.values, unit='s', utc=True).tz_convert(malargue_tz)\n    df.set_index(date, inplace=True)\n    return df","4f8bba6f":"# Data loading, encapsulated to make it less installation and OS dependant\nimport os.path\nfrom zipfile import ZipFile\ndef AugerOpen(fdir, file):\n    \"\"\"\n    Loads a file from the auger open data release. Can be either in the local directory,\n    in the parent directory or in the augeropendata directory.\n    File is identified by it directory *fdir* and filename *file* and can be found in the directory\n    or in a zip file.\n    \"\"\"\n    for loc in [\".\", \"..\", \"augeropendata\", \"data\"]:\n        fname = os.path.join(loc, fdir, file)\n        if os.path.isfile(fname):\n            return open(fname)\n        zname=os.path.join(loc, fdir + \".zip\")\n        if os.path.isfile(zname):\n            with ZipFile(zname) as myzip:\n                return myzip.open(os.path.join(fdir, file))\n    raise FileNotFoundError(os.path.join(fdir, file))\n","5dc34d54":"#import scalers data as dataframes\ndf = read_ws(AugerOpen(\"scalers\", \"scalers.csv\"), utc=True)\n\n#import weather station data as dataframes\ndfAtmo = read_ws(AugerOpen(\"weatherStations\", \"wsCLF.csv\"))\n\n# display first 10 rows of scaler data file\ndf.head(10)\n","567c4267":"# display first 5 rows of weatherSations data file\ndfAtmo.head(5) ","6f24953b":"startDate = '2006-01-01'\nstopDate = '2007-12-31'\n\ncut1 = slice(startDate, stopDate)\ndf1 = df[cut1]\n\ncolor = 'tab:red'\nfig, ax = plt.subplots()\nax.plot(df1.index, df1.rateCorr, color=color, label='Auger SD scalers')\n\nax.set_xlabel('Date')\nax.set_ylabel('Average scaler rate [ $m^{-2} s^{-1}$ ]')\nmyFmt = DateFormatter(\"%y-%b\")\nax.xaxis.set_major_formatter(myFmt) \nax.grid()\nax.legend()\nplt.show()\n","00ac04f2":"cut1 = slice('2007-04-30', '2007-05-11')\ndf1 = df[cut1]\n\n\nfig, ax1 = plt.subplots()\n\ncolor = 'tab:red'\nax1.set_xlabel('Date (2007)')\nax1.set_ylabel('Average scaler rate [  $s^{-1}$]')\nax1.plot(df1.index, df1.rateUncorr, color=color, label='Uncorrected Scalers')\nax1.tick_params(axis='y')\nax1.set_ylim([1800, 2100])\nax1.legend(loc='upper left')\n\nax2 = ax1.twinx()  # instantiate a second axes that shares the same x-axis\n\ncolor = 'tab:blue'\nax2.set_ylabel('Atmospheric pressure [hPa]',)  # we already handled the x-label with ax1\nax2.plot(df1.index, df1.pressure, color=color, label='Pressure' , linestyle='dashed')\nax2.tick_params(axis='y')\nax2.set_ylim([875, 840])\nmyFmt = DateFormatter(\"%d %b\")\n\nax2.xaxis.set_major_formatter(myFmt) # apply the format to the desired axis\nax2.legend()\n\n\nfig.tight_layout()  # otherwise the right y-label is slightly clipped\nplt.show()\n","a6d64fc9":"cut2 = slice('2007-05-01', '2007-05-11')\ndf2 = df[cut2]\nlocaltime = df2.index.tz_convert(malargue_tz)\n\nwcdArea = 1.8*1.8*np.pi #wdc radius = 1.8 m\ncolor = 'blue'\nfig, ax = plt.subplots()\nax.plot(localtime, df2.rateUncorr\/wcdArea, color=color, label='Before pressure correction', linestyle='dashed')\ncolor = 'red'\nax.plot(localtime, df2.rateCorr, color=color, label='After pressure correction' )\n\nax.legend()\nax.set_xlabel('Local Time (GMT-3) (Date 2007)')\nax.set_ylabel('Average scaler rate [ $m^{-2} s^{-1}$ ]')\n\nmyFmt = DateFormatter(\"%d %b\")\nax.xaxis.set_major_formatter(myFmt) # apply the format to the desired axis\nax.legend()\n\nplt.show()","3b8fd4db":"cut3 = slice('2009-08-10', '2009-08-14')\ndf3 = df.loc[cut3]\n\ndfAtmo1 = dfAtmo.loc[cut3]\n\nfig, ax1 = plt.subplots()\n\ncolor = 'tab:red'\nax1.set_xlabel('Date 2009')\nax1.set_ylabel('Average scaler rate [ $ m^{-2} s^{-1}$ ]')\nax1.plot(df3.index, df3.rateCorr, color=color, label='Auger SD scalers')\nax1.tick_params(axis='y')\nax1.set_ylim([180, 210])\nax1.legend(loc='upper left')\n\nax2 = ax1.twinx()   \n\ncolor = 'tab:blue'\nax2.set_ylabel('Average wind speed[$km h^{-1}$]',)   \nax2.plot(dfAtmo1.index, dfAtmo1.windSpeed, label='Wind speed')\nax2.tick_params(axis='y')\n\nax2.set_ylim([-10, 200])\nmyFmt = DateFormatter(\"%d %b\")\n\nax2.xaxis.set_major_formatter(myFmt)  \nax2.legend()\nax2.grid()\n\n\nfig.tight_layout()   \nplt.show()","068a6d3c":"cut3 = slice('2007-07-07', '2007-07-14')\ndf3 = df.loc[cut3]\n\ndfAtmo1 = dfAtmo.loc[cut3]\n\nfig, ax1 = plt.subplots()\n\ncolor = 'tab:red'\nax1.set_xlabel('Date 2007')\nax1.set_ylabel('Average scaler rate [ $m^{-2} s^{-1}$]')\nax1.plot(df3.index, df3.rateCorr, color=color, label='Auger SD scalers')\nax1.tick_params(axis='y')\nax1.set_ylim([190, 200])\nax1.legend(loc='upper left')\nplt.title('July 2007', y=1.15)\n    \nax2 = ax1.twinx()  # instantiate a second axes that shares the same x-axis\n\ncolor = 'tab:blue'\nax2.set_ylabel('Temperature [\u00b0C]',)  \nax2.plot(dfAtmo1.index, dfAtmo1.temperature, label='Temperature')\nax2.tick_params(axis='y')\n\nax2.set_ylim([-25, 50])\nmyFmt = DateFormatter(\"%d %b\")\n\nax1.xaxis.set_major_formatter(myFmt) # apply the format to the desired axis\nax2.legend()\nax2.grid()\n\nfig.tight_layout()  # otherwise the right y-label is slightly clipped\nplt.show()","0dc259e2":"cut3 = slice('2010-07-17', '2010-07-28')\ndf3 = df.loc[cut3]\ndfAtmo1 = dfAtmo.loc[cut3]\n\nfig, ax1 = plt.subplots()\n\ncolor = 'tab:red'\nax1.set_xlabel('Date 2010')\nax1.set_ylabel('Average scaler rate [ $m^{-2} s^{-1}$]')\nax1.plot(df3.index, df3.rateCorr, color=color, label='Auger SD scalers')\nax1.tick_params(axis='y')\nplt.ylim([175, 195])\nplt.legend(loc='upper left')\nplt.title('July 2010', y=1.15)\n\nax2 = ax1.twinx()  # instantiate a second axes that shares the same x-axis\n\ncolor = 'tab:blue'\nax2.set_ylabel('Temperature [\u00b0C]',)  \nax2.plot(dfAtmo1.index, dfAtmo1.temperature, label='Temperature')\nax2.tick_params(axis='y')\n\nplt.ylim([-25, 50])\nmyFmt = DateFormatter(\"%d %b\")\n\nax1.xaxis.set_major_formatter(myFmt) # apply the format to the desired axis\nplt.legend()\n\n\nfig.tight_layout()  # otherwise the right y-label is slightly clipped\nplt.grid()\nplt.show()\n","8462e0ce":"## Effects of Cold Winters\nIn the winters of 2007 and 2010, the cold temperatures produced a slight decrease of the efficiency at the lower energy end, impacting the scaler rate. The graphs for both periods can be seen below.","133b33db":"## Uncorrected data vs corrected data\n\nYou can compare the average scaler rates before and after the barometric correction.","04ad25f6":"## Read data\nBefore data can be analysed, the cosmic rays must be measured.  This huge task has been taken care of by the Pierre Auger Collaboration through this Open data release. So to grab these data for analysis, in the next two cells we will read in the Auger Open Data and prepare a Panda dataframe to make later analysis easy.\n\nFirst we define a function to open and read the data:","fb31e072":"> ![auger-logo.jpeg](attachment:auger-logo.jpeg)\n\n# Explore scaler data\n### This notebook is dedicated to the general public. Please refer to the [Auger Open Data outreach page](https:\/\/opendata.auger.org\/outreach.php).\nThe surface detector of the Pierre Auger Observatory can be operated in the so-called *scaler mode* in which the rates of signals, associated with the energy deposited by secondary particles, at low threshold, are recorded.\n\nThe Open Scaler Data are provided as the 15-minutes counting rate averaged over all of the active detectors. As the rate is changed, in particular, by variations in the atmospheric pressure, the rate is corrected appropriately.\n\nIn this Notebook you will learn how to plot scaler data during different days and how the scaler rate correlates with the pressure, the  temperature and the wind speed at the site of the Observatory.\n\nIt is worth noting that these effects are very small and detectable only because of the very low threshold used in the scaler mode and the huge statistical power that arises from the detection of over 3 billion particles every 15 minutes. Taking scaler data has no impact on the regular data of the Pierre Auger Observatory.\n\nWith our scaler data, modulations of galactic cosmic-rays due to solar activity, and transient events, can be studied with high accuracy. We invite you to read about all the details as explained in \"JINST 6 P011003 (2011)\"  DOI: http:\/\/dx.doi.org\/10.1088\/1748-0221\/6\/01\/P01003. \n","8d605724":"\nYou'll see that the needed information is already there for us to use as\n\n* **time**:\nthe GPS time of the measurement\n* **rateCorr**:\nthe average scaler rates over the Cherenkov stations (after barometric correction) [counts $s^{-1} m^{-2}$]\n* **rateUncorr**:\nthe uncorrected scaler rates [counts $s^{-1}$]\n* **Pressure**:\nthe pressure value [hPa]\n\n\nThe values for temperature humidity and pressure at a give time are available in the weatherStations file for the Central Laser Facility location at the Observatory site\n\n","520af993":"## Notebook setup\nImporting of some python packages and the definition of some default settings is required.","ae047e33":"## Browser for Scaler Data\n\nYou can select a time period to show the average scaler rate.","3c6ce741":"## Scaler Rates vs pressure\nAtmospheric pressure variations are known to modify the flux of secondary particles at ground level, due to the variation of mass of atmosphere above the detector: an increase in the atmospheric pressure is correlated with a reduction in the scaler rate (note the reversed scale for pressure).","77123da8":"Now we upload the data summary file as a Panda dataframe for easy handling later on:","844679bb":"## Static noise induced by the wind during August 2009\nVery strong winds produce static charging of the plastic tanks that in turn produce artificially high counts in the detectors. This is a very rare effect (more than 80 km $\\text h^{-1}$ wind speed is needed). Such winds occur only about once per year but can have a dramatic impact. The data  recorded during August 2009, shown below, exhibit a large peak in counting rate due to this effect:\n"}}