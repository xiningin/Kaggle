{"cell_type":{"234c97ec":"code","aab2cb55":"code","48b2f496":"code","660ec276":"code","a5b73876":"code","58bf0ad4":"code","0b59b5e1":"code","3ff23ae2":"code","60e9be29":"code","fb53de4c":"code","2e4836ee":"code","1e435dc7":"code","8134012f":"code","11edf5c4":"code","7958a449":"code","16e08c3e":"markdown","5d3467d1":"markdown","2228caa0":"markdown","916fd26c":"markdown","00ec62c5":"markdown","ce069809":"markdown","1b1f6674":"markdown","18ba2c06":"markdown","abf0a2a2":"markdown","317b5213":"markdown","90105eaa":"markdown","1ecdc221":"markdown","d93af20b":"markdown","1a92732a":"markdown","eee3b71e":"markdown"},"source":{"234c97ec":"# Importing the required libraries. \n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","aab2cb55":"dataset= pd.read_csv(\"..\/input\/student-study-hour-v2\/Student Study Hour V2.csv\")\nprint(\"Dataset imported successfully.\")","48b2f496":"# Exploring the dataset.\n\ndataset.shape","660ec276":"dataset.head()","a5b73876":"dataset.describe()","58bf0ad4":"# Plotting our data points on 2-D graph.\n\ndataset.plot(x='Hours', y='Scores', style='o')\nplt.title(\"Hours vs Percentage\")\nplt.xlabel(\"Hours Studied\")\nplt.ylabel(\"Percentage Score\")\nplt.show()","0b59b5e1":"# Preparing the data.\n\nx= dataset.iloc[:,:-1].values\ny= dataset.iloc[:,1].values","3ff23ae2":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=0)","60e9be29":"# Training the algorithm.\n\nfrom sklearn.linear_model import LinearRegression\nregressor= LinearRegression()\nregressor.fit(x_train, y_train)\n\nprint(\"Training complete.\")","fb53de4c":"# To retrieve the intercept and slope.\n\nprint(regressor.intercept_)\nprint(regressor.coef_)","2e4836ee":"# Plotting the line of regression.\n\nline= regressor.coef_*x+regressor.intercept_\n\n#plotting the test data\n\nplt.scatter(x, y)\nplt.plot(x, line)\nplt.show()","1e435dc7":"# Making predictions.\n\nprint(x_test)\ny_pred= regressor.predict(x_test)","8134012f":"# Comparing actual values with predicted.\n\ndf= pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\ndf","11edf5c4":"# What will be the predicted score if a student studies for 9.25 hrs\/ day?\n\nhours = 9.25\ntest= np.array([hours])\ntest= test.reshape(-1,1)\nown_pred = regressor.predict(test)\nprint(\"No of Hours = {}\".format(hours))\nprint(\"Predicted Score = {}\".format(own_pred[0]))","7958a449":"# Evaluating the algorithm.\n\nfrom sklearn import metrics\nprint(\"Mean Absolute Error= \", metrics.mean_absolute_error(y_test, y_pred))\nprint(\"Mean Squared Error= \", metrics.mean_squared_error(y_test, y_pred))\nprint(\"Root Mean Squared Error= \", np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","16e08c3e":"# Second: Input data visualisation","5d3467d1":"# Seventh: Comparing actual result with the predicted model result","2228caa0":"# Eighth: Evaluation of algorithm","916fd26c":"This step deals with the division of the data into \"attributes\" and \"labels\".","00ec62c5":"# Third: Data preprocessing","ce069809":"## Thank you","1b1f6674":"# Fifth: Plotting the line of regression","18ba2c06":"From the graph above, we can clearly see that there is a positive linear relation between the number of hours studied and percentage of score.","abf0a2a2":"# Sixth: Making predictions","317b5213":"This step the splitting of the data into training and test sets using Scikit Learn's built-in train_test_split() method and training the algorithm.","90105eaa":"> ## **Let me know by e-mail if I did any mistake and leave an upvote if you like it**","1ecdc221":"# Fourth: Model Training","d93af20b":"We have now trained our algorithm and it's time to make some predictions. To do so, we will use our test data.","1a92732a":"# Prediction using Supervised Machine Learning\nThe task is to percentage of marks that a student is expected to score based upon the number of hours they studied. By objective we see it is a linear regression task as it involves just two variables.\n\nThe tools you can find - Numpy Array, Pandas, Matplotlib, Scikit Learn\n\n**Lets begin**","eee3b71e":"# First: Reading the data from source"}}