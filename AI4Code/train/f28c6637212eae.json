{"cell_type":{"7dbeb4f7":"code","0649ef94":"code","4001ad44":"code","346267dd":"code","45984d63":"code","fbdf0b7f":"code","9a6d4acb":"code","bb1a7964":"code","e93089a1":"code","8db839fb":"code","0aca1406":"code","66f130a8":"code","cb115fc1":"code","4e0db49a":"code","ec20c1a1":"code","e8176ec8":"code","8e849792":"code","7c5ca588":"code","81535946":"code","4e5aee8d":"code","e85bb029":"code","f5b985ee":"code","4a8b7a75":"code","e4907bcc":"code","ccaefbd9":"markdown","e85108cc":"markdown","ef0d901c":"markdown","695ef1c7":"markdown","90ca12bb":"markdown","4f10aa1d":"markdown","4e2af54b":"markdown","032a5aaf":"markdown","8a5e28d4":"markdown","33838e73":"markdown","a11844f1":"markdown","3aaf4931":"markdown","ef3ca940":"markdown","29785494":"markdown"},"source":{"7dbeb4f7":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\ntf.__version__","0649ef94":"df = pd.read_csv('..\/input\/churn-modelling\/Churn_Modelling.csv')\ndf.head()","4001ad44":"df.info()","346267dd":"X = df.iloc[:, 3: -1].values\ny = df.iloc[:, -1].values\nprint(X.shape)\ny","45984d63":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nX[:, 2] = le.fit_transform(X[:,2])\nX","fbdf0b7f":"from sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [1])], remainder='passthrough')\nX = np.array(ct.fit_transform(X))\nX","9a6d4acb":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 1)\nX_test.shape","bb1a7964":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)\nX_train","e93089a1":"ann = tf.keras.models.Sequential()\ntype(ann)","8db839fb":"ann.add(tf.keras.layers.Dense(units=6, activation='relu'))\nann.add(tf.keras.layers.Dense(units=6, activation='relu'))\nann.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))","0aca1406":"ann.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","66f130a8":"ann.fit(X_train, y_train, batch_size=32, epochs= 100)","cb115fc1":"ann.summary()","4e0db49a":"X_test","ec20c1a1":"y_pred = ann.predict(X_test)\ny_pred.shape","e8176ec8":"y_pred = y_pred>0.5\ny_pred[:15]","8e849792":"# concatenate predictions with test\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","7c5ca588":"from sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred)\ncm","81535946":"accuracy_score(y_test, y_pred)","4e5aee8d":"X[0]","e85bb029":"[1,0,0,600,1,40,3,60000,2,1,1,50000]","f5b985ee":"sc.transform([[1,0,0,600,1,40,3,60000,2,1,1,50000]])","4a8b7a75":"ann.predict(sc.transform([[1,0,0,600,1,40,3,60000,2,1,1,50000]]))","e4907bcc":"ann.predict(sc.transform([[1,0,0,600,1,40,3,60000,2,1,1,50000]]))>0.5","ccaefbd9":"### 1-Checking for missing data and recognize the features","e85108cc":"### 2-Exclude the non-relational features: 'RowNumber'  'CustomerId'  'Surname'","ef0d901c":"# Part2: Building ANN","695ef1c7":"### The probability of the customer stays in the bank is 0,02 so he will leave the bank probably","90ca12bb":"### Confusion Matrix","4f10aa1d":"### 5-Split the dataset","4e2af54b":"# Part1: Feature Eengineering","032a5aaf":"### Adding the input layer, the scond hidden Layer and the output layer","8a5e28d4":"### Use our ANN model to predict if the customer with the following informations will leave the bank:\n\n### Geography: France\n\n### Credit Score: 600\n\n### Gender: Male\n\n### Age: 40 years old\n\n### Tenure: 3 years\n\n### Balance: $ 60000\n\n### Number of Products: 2\n\n### Does this customer have a credit card? Yes\n\n### Is this customer an Active Member: Yes\n\n### Estimated Salary: $ 50000\n\n### So, should we say goodbye to that customer?","33838e73":"### 6-Scaling the data","a11844f1":"### Compile the ann by specify loss and optimizer","3aaf4931":"### 3-Apply label encoding to Gender column (nominal encoding)","ef3ca940":"### THis is a very goog accuracy cause its almost the same with the training set!","29785494":"### 4-Apply OneHotEncoder to the 'Geography' column"}}