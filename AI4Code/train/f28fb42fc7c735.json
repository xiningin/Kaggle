{"cell_type":{"795fc81c":"code","b86a710e":"code","1f9f157a":"code","42b759cf":"code","09de316f":"code","82fd31fc":"code","271a4fa6":"code","8ae7489f":"code","3bbce405":"code","8564f167":"code","1280a7cd":"code","f704ba7b":"code","1b55331e":"code","bf824c3a":"code","4cd109dd":"code","2fc379b3":"code","2b731fe7":"code","1e242446":"code","b923d8b2":"code","4aa2937b":"code","d703405b":"code","b2d8f7eb":"code","21cfed76":"code","fc3283b2":"code","318e76d3":"markdown","1f93b870":"markdown","79c38201":"markdown","278f06f5":"markdown","76975db8":"markdown","40608555":"markdown","c2474f4f":"markdown","95a2fffd":"markdown","ab365b98":"markdown","57f96f00":"markdown","1be2cee2":"markdown","f22bac09":"markdown","412bf671":"markdown","cc283160":"markdown","7292faef":"markdown","efbbd56f":"markdown","bd47bd65":"markdown"},"source":{"795fc81c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans","b86a710e":"data=pd.read_csv('..\/input\/iris-flower-dataset\/IRIS.csv')\ndata.head()","1f9f157a":"sepal=data.drop(['petal_length','petal_width','species'],1)\nsepal.head()","42b759cf":"plt.scatter(sepal['sepal_length'],sepal['sepal_width'])","09de316f":"km=KMeans(n_clusters=3)\nkm","82fd31fc":"y_pred=km.fit_predict(sepal)\ny_pred","271a4fa6":"sepal['cluster']=y_pred\nsepal","8ae7489f":"sep1=sepal[sepal.cluster==0]\nsep2=sepal[sepal.cluster==1]\nsep3=sepal[sepal.cluster==2]\n\nplt.scatter(sep1['sepal_length'],sep1['sepal_width'],color='green')\nplt.scatter(sep2['sepal_length'],sep2['sepal_width'],color='red')\nplt.scatter(sep3['sepal_length'],sep3['sepal_width'],color='yellow')\n\nplt.xlabel('sepal_length')\nplt.ylabel('sepal_width')","3bbce405":"centroid=km.cluster_centers_\ncentroid","8564f167":"plt.scatter(sep1['sepal_length'],sep1['sepal_width'],color='green')\nplt.scatter(sep2['sepal_length'],sep2['sepal_width'],color='red')\nplt.scatter(sep3['sepal_length'],sep3['sepal_width'],color='yellow')\nplt.scatter(centroid[:,0],centroid[:,1],color='blue',marker='*')\nplt.xlabel('sepal_length')\nplt.ylabel('sepal_width')","1280a7cd":"k_rng=range(1,10)\nsse=[]\nfor k in k_rng:\n    km=KMeans(n_clusters=k)\n    km.fit(sepal)\n    sse.append(km.inertia_)\n    \nsse","f704ba7b":"plt.xlabel('K')\nplt.ylabel('Sum of squared error')\nplt.plot(k_rng,sse)","1b55331e":"data['species'].value_counts()","bf824c3a":"new_data=data.drop('species',1)\nnew_data.head()","4cd109dd":"k_rng=range(1,10)\nsse=[]\nfor k in k_rng:\n    km=KMeans(n_clusters=k)\n    km.fit(new_data)\n    sse.append(km.inertia_)\n    \nsse","2fc379b3":"plt.xlabel('K')\nplt.ylabel('Sum of squared error')\nplt.plot(k_rng,sse)","2b731fe7":"km=KMeans(n_clusters=3)\nkm","1e242446":"prediction=km.fit_predict(new_data)\nprediction","b923d8b2":"data['predicted']=prediction\ndata","4aa2937b":"centroids=km.cluster_centers_\ncentroids","d703405b":"data1=data.copy()\ndata1[\"species\"]=data1[\"species\"].map({'Iris-versicolor':0,'Iris-setosa':1,'Iris-virginica':2}).astype(int)\ndata1['predicted']=prediction\ndata1","b2d8f7eb":"from sklearn.metrics import confusion_matrix\nconfusion_matrix(data1['species'],prediction)","21cfed76":"data['predicted']=prediction\ndata.head()","fc3283b2":"\ndata[\"predicted\"]=data[\"predicted\"].map({0:'Iris-versicolor',1:'Iris-setosa',2:'Iris-virginica'})\ndata","318e76d3":"Now using KMeans algorithm we will predict to which group of cluster these data belongs to.\nNote: Here we have taken n_clusters=3 but we will later find out how to find the optimal value of n_clusters.","1f93b870":"Here the class name are converted to respective integer value(i.e 0-''Iris-versicolor'',1-'Iris-setosa',2-'Iris-virginica') to check the confusion matrix","79c38201":"Here we can see we have only three classes as output(i,e Iris-versicolor, Iris-virginica and Iris-setosa)","278f06f5":"Now, we will use scatterplot to plot the input data so as to visualize how these data are scattered.","76975db8":"As we have discussed earlier that we have to find the optimal value of K or n_clusters, there is one method called Elbow method which is a perfect fit for this optimization.\nHere Elbow method uses the sum of squared error of the input data. i.e total sum of squared error of each point from the centre of each group. After that we can find the optimal n_clusters from the \"elbow\" of the graph which shows number of clusters having low sum of squared error.","40608555":"Here the predicted clusters are shown with the output but to compare these values we will later transform them into their respective class name. But first to check the accuracy of the prediction value we will use confusion matrix. ","c2474f4f":"These are the output or you can say assigned value of clusters for each input data.\nFor example for the first row of data (i.e sepal_length=5.1 and sepal_width=3.5) it is assigned to the 1st cluster(i.e \"0\" cluster).","95a2fffd":"Now we will find the optimal K value(or value of n_clusters) although we know that would be 3 as output has 3 classes.","ab365b98":"Here, the blue star mark represents the centre of each clusters or group.","57f96f00":"Here is the complete Dataframe of input and output(clustered group).","1be2cee2":"In this excercise we will use the KMeans Clustering algorithm to predict the output of unlabelled data(IRIS Dataset).\nHere, first to explain the algorithm we will take only the \"sepal_length\" and \"sepal_width\" and then we will predict to which clusters or group(i.e Output) these data belongs to. After that we will take the entire data to predict the clusters or group they belongs to.\n\nFirst we will load the necessary library for this excercise.","f22bac09":"As you can see, only \"sepal_length\" and \"sepal_width\" are taken from the entire dataset using the drop function.","412bf671":"From the confusion matrix we can see that out of all 50 data of class Iris-versicolor 48 are correctly predicted whereas 2 are wrongly predicted as Iris-virginica. For 50 data of Iris-setosa all are wcorrectly predicted. And for 50 data of Iris-virginica 36 are correctly predicted whereas 14 are wrongly predicted as Iris-versicolor.","cc283160":"Here, the \"elbow\" of the graph can be seen at K=3. Hence, we can take the value of n_clusters=3. \nNote: By default the value of n_clusters is 8 so you can decide the optimal value after visualizing the graph.","7292faef":"Now we will visualize the entire data so as to define to which clusters the data belongs to using different colors for different clusters.\nHere for cluster 0 the color is Green, for cluster 1 the color is Red,\nand for cluster 2 the color is Yellow.","efbbd56f":"As the data is grouped into different clusters, you may want to know the centre of each clusters. Or you can say the value of centroid in KMeans, so that we can plot it against the data.","bd47bd65":"Now we will take the entire data,(i.e sepal_length,sepal_width,petal_length and petal_width) and then predict the classes they belongs to. "}}