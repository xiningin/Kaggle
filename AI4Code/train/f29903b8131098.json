{"cell_type":{"fc1ce5a0":"code","908223cd":"code","3b8ac8e9":"code","db62461c":"code","96e56611":"code","dc344d53":"code","87fdacd5":"code","b35c92ed":"code","7fd2f1f9":"code","ce6933e9":"code","dc4ea84d":"code","e2dba50a":"code","dd4c57a5":"code","4a4f5360":"markdown","3730fd59":"markdown","19119d40":"markdown","16166b95":"markdown","b6ff210c":"markdown","f3909450":"markdown","00977832":"markdown","256b9297":"markdown","6738ced7":"markdown","f935eb53":"markdown","2e2a4570":"markdown","881d175c":"markdown","fcb324e7":"markdown","a9cf0b1a":"markdown","f65c9d04":"markdown"},"source":{"fc1ce5a0":"# K\u00fct\u00fcphanelerin y\u00fcklenmesi\n!pip install openpyxl\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom mlxtend.frequent_patterns import apriori, association_rules\nimport datetime as dt\nimport calendar\nimport numpy as np","908223cd":"# Veri setinin okutulmas\u0131\ndf_ = pd.read_csv(\"..\/input\/the-bread-basket\/bread basket.csv\")\n","3b8ac8e9":"df = df_.copy()\ndf.head()","db62461c":"#Veri setine \u00f6n bak\u0131\u015f \ndef check_df(dataframe, head=5):\n    print(\"##################### Shape #####################\")\n    print(dataframe.shape)\n    print(\"##################### Types #####################\")\n    print(dataframe.info)\n    print(\"##################### NA #####################\")\n    print(dataframe.isnull().sum())\ncheck_df(df)","96e56611":"def time_variables(dataframe, colname):\n    \n    dataframe[colname] = pd.to_datetime(df[colname])\n    dataframe['date'] = dataframe[colname].dt.date\n    dataframe['time'] = dataframe[colname].dt.time\n    dataframe['month'] = dataframe[colname].dt.month\n    dataframe['month'] = dataframe['month'].replace([1,2,3,4,5,6,7,8,9,10,11,12],['January','February','March','April','May','June','July','August','September','October','November','December'])\n    dataframe['day'] = dataframe[colname].dt.day\n    dataframe['weekday'] = dataframe[colname].dt.weekday\n    dataframe['weekday'] = dataframe['weekday'].replace([0,1,2,3,4,5,6], ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'])\n    \n    return dataframe","dc344d53":"#Olu\u015fturdu\u011fumuz time_variables fonksiyonu ile date_time de\u011fi\u015fkenini kullanarak yeni de\u011fi\u015fkenler olu\u015fturma \ntime_variables(df, 'date_time')\ndf.head()","87fdacd5":"plt.figure(figsize=(15,5))\nsns.barplot(x = df.Item.value_counts().head(20).index, y = df.Item.value_counts().head(20).values, palette = 'hls')\nplt.xlabel('Items', size = 15)\nplt.xticks(rotation=45)\nplt.ylabel('Count of Items', size = 15)\nplt.title('Top 20 Items purchased by customers', color = 'red', size = 20)\nplt.show()\n","b35c92ed":"monthTran = df.groupby('month')['Transaction'].count().reset_index()\nmonthTran.loc[:,\"monthorder\"] = [4,8,12,2,1,7,6,3,5,11,10,9]\nmonthTran.sort_values(\"monthorder\",inplace=True)\n\nplt.figure(figsize=(12,5))\nsns.barplot(data = monthTran, x = \"month\", y = \"Transaction\")\nplt.xlabel('Months', size = 15)\nplt.ylabel('Orders per month', size = 15)\nplt.title('Number of orders received each month', color = 'red', size = 20)\nplt.show()\n","7fd2f1f9":"weekTran = df.groupby('weekday')['Transaction'].count().reset_index()\nweekTran.loc[:,\"weekorder\"] = [4,0,5,6,3,1,2]\nweekTran.sort_values(\"weekorder\",inplace=True)\n\nplt.figure(figsize=(12,5))\nsns.barplot(data = weekTran, x = \"weekday\", y = \"Transaction\")\nplt.xlabel('Week Day', size = 15)\nplt.ylabel('Orders per day', size = 15)\nplt.title('Number of orders received each day', color = 'red', size = 20)\nplt.show()\n\n","ce6933e9":"# Aprioi algoritma i\u00e7in veri seti format\u0131n\u0131n de\u011fi\u015ftirilmesi \ndf_invoice_product = df.groupby([\"Transaction\", \"Item\"])[\"Item\"].count().unstack().fillna(0).applymap(lambda x: 1 if  x>0 else 0)\ndf_invoice_product.shape","dc4ea84d":"# Algoritma kurallar\u0131n\u0131n olu\u015fturulmas\u0131\nfrequent_itemsets = apriori(df_invoice_product, min_support=0.01, use_colnames=True, low_memory=True)\nfrequent_itemsets.sort_values(\"support\", ascending=False)","e2dba50a":"#Confidence de\u011feri 0.2 alarak algoritma kurallar\u0131 olu\u015fturuldu. \nrules = association_rules(frequent_itemsets, metric=\"confidence\", min_threshold=0.2)\n","dd4c57a5":"# Lift de\u011feri 1'den b\u00fcy\u00fck olan kurallar dikkate al\u0131nmal\u0131d\u0131r. \nrules[rules[\"lift\"]>1].sort_values(\"support\",ascending = False)","4a4f5360":"* K\u0131\u015f aylar\u0131nda yaz aylar\u0131na g\u00f6re daha fazla sipari\u015f olu\u015fturulmu\u015ftur.","3730fd59":"M\u00fc\u015fterilerin al\u0131\u015fveri\u015f s\u0131ras\u0131nda hangi \u00fcr\u00fcn veya hizmetleri sat\u0131n almaya e\u011filimli olduklar\u0131n\u0131n belirlenmesi, m\u00fc\u015fteriye daha fazla \u00fcr\u00fcn\u00fcn sat\u0131lmas\u0131n\u0131 sa\u011flamaktad\u0131r. Bu e\u011filimlerin belirlenmesi i\u00e7in birliktelik kurallar\u0131 tekni\u011fi kullan\u0131l\u0131r. Veri madencili\u011finde yayg\u0131n olarak kullan\u0131lan sepet analizi yap\u0131l\u0131r. Birliktelik kurallar\u0131, bir \u00fcr\u00fcn sat\u0131ld\u0131\u011f\u0131nda o \u00fcr\u00fcnle ba\u015fka hangi \u00fcr\u00fcn\u00fcn al\u0131nd\u0131\u011f\u0131n\u0131 analiz eder. Elde edilecek \u00e7\u0131kt\u0131ya g\u00f6re pazarlama stratejileri, ma\u011faza raf d\u00fczenlemeleri gibi aksiyonlar al\u0131n\u0131r.\n\nAmerika'da bulunan Walmart marketi m\u00fc\u015fterilerin al\u0131\u015fveri\u015flerini incelemesi sonucu birliktelik kurallar\u0131n\u0131n temeli at\u0131lm\u0131\u015ft\u0131r. Cuma ak\u015famlar\u0131 bebek bezi alan erkek m\u00fc\u015fterilerin beraberinde bira ald\u0131\u011f\u0131 g\u00f6zlemlenmi\u015ftir.Birliktelik kurallar\u0131 pazarlama alan\u0131nda **Pazar Sepet Analizi** olarak kullan\u0131lmaktad\u0131r. Bunun d\u0131s\u0131nda **\u00c7apraz Pazarlama**, **Promosyon Analizi**, **Katalog ve Yerle\u015fim Analizi** gibi uygulama alanlar\u0131 bulunmaktad\u0131r. ","19119d40":"* Support de\u011ferlerine bak\u0131ld\u0131\u011f\u0131nda Cafe \u00fcr\u00fcn\u00fcn\u00fcn g\u00f6r\u00fclme s\u0131kl\u0131\u011f\u0131 0.47 iken, Cake \u00fcr\u00fcn\u00fcn g\u00f6r\u00fclme s\u0131kl\u0131\u011f\u0131 0.10'dur.","16166b95":"* Sat\u0131rlara i\u015flem numaralar\u0131, s\u00fctunlara \u00fcr\u00fcn isimleri isimlerini getirerek 1-0 de\u011ferler olan bir veri seti olu\u015fturuldu. 9465 tane i\u015flem ve 94 tane \u00fcr\u00fcn g\u00f6zlemlenmi\u015ftir. ","b6ff210c":"* **Antecedents** : Ba\u011flant\u0131l\u0131 ilk \u00fcr\u00fcn\n* **Consequents** : Ba\u011flant\u0131l\u0131 di\u011fer \u00fcr\u00fcn \n* **Antecedent support** : Ba\u011flant\u0131l\u0131 ilk \u00fcr\u00fcn\u00fcn al\u0131nma olas\u0131l\u0131\u011f\u0131 \n* **Consequent support** : Ba\u011flant\u0131l\u0131 di\u011fer \u00fcr\u00fcn\u00fcn al\u0131nma olas\u0131l\u0131\u011f\u0131  \n* **Support De\u011feri**: Bir ili\u015fkinin t\u00fcm i\u015flemler i\u00e7erisinde hangi oranda tekrarland\u0131\u011f\u0131n\u0131 g\u00f6sterir. Kural\u0131n frekans\u0131n\u0131 ifade eder.\n\n   Support = Frekans(X,Y) \/ N \n\n   N : Toplam i\u015flem say\u0131s\u0131 \n* **Confidence De\u011feri**: X \u00fcr\u00fcn\u00fc alan m\u00fc\u015fterinin Y \u00fcr\u00fcn\u00fcn\u00fc alma olas\u0131l\u0131\u011f\u0131n\u0131 g\u00f6sterir. Kural\u0131n g\u00fc\u00e7l\u00fcl\u00fc\u011f\u00fcn\u00fc ifade eder.\n\n  Confidence(X,Y) = Frekans(X,Y) \/ Frekans(X)\n* **Lift(Kald\u0131ra\u00e7) De\u011feri** : X \u00fcr\u00fcn\u00fc al\u0131nd\u0131\u011f\u0131nda B \u00fcr\u00fcn\u00fcn\u00fcn al\u0131nmas\u0131na bir etkisi var m\u0131? sorusunu yan\u0131tlar. \n\n   lift = 1 ise \u00fcr\u00fcnler  aras\u0131nda ili\u015fki olmad\u0131\u011f\u0131 anlam\u0131na gelir.\n   \n   lift> 1 ise \u00fcr\u00fcnler aras\u0131nda pozitif bir ili\u015fki vard\u0131r. (Pozitif korelasyon)\n   \n   lift <1 ise \u00fcr\u00fcnleri aras\u0131nda negatif bir ili\u015fki vard\u0131r.(Negatif korelasyon)\n\n\n\n","f3909450":"* M\u00fc\u015fterilere en \u00e7ok sat\u0131lan \u00fcr\u00fcn Coffee \u00fcr\u00fcn\u00fcd\u00fcr. ","00977832":"Kurallar\u0131 support de\u011ferine g\u00f6re s\u0131ralad\u0131\u011f\u0131m\u0131zda en y\u00fcksek support de\u011feri Cake ve Coffee \u00fcr\u00fcnleri aras\u0131ndad\u0131r. \n\nSupport de\u011feri : Cake ve Coffee \u00fcr\u00fcnlerinin beraber al\u0131nma olas\u0131\u011f\u0131 %5' tir. Bir di\u011fer yorumu ise, toplam 9465 sipari\u015fi 518 tanesinde Cake ve Coffee beraber g\u00f6zlenmi\u015fir. \n\nConfidence de\u011feri : Cake al\u0131nan bir sipari\u015fte %52 olas\u0131l\u0131kla Cooffe al\u0131n\u0131r.","256b9297":"![446f4802f8ce983f986b963ce4f8e472.jpg](attachment:95c41d98-8628-4219-ab0d-26d93c4342ce.jpg)","6738ced7":"## Veri Setinin \u0130ncelenmesi ","f935eb53":"# Birliktelik Kurallar\u0131 Analizi (Association Rules Analysis)","2e2a4570":"## Apriori Algoritmas\u0131n\u0131n Olu\u015fturulmas\u0131","881d175c":"* En \u00e7ok sipari\u015f yap\u0131lan g\u00fcnler Cuma,Cumartesi, Pazar g\u00fcnleridir. ","fcb324e7":"## Veri G\u00f6rselle\u015ftirme","a9cf0b1a":"#### Algoritma \u00e7\u0131kt\u0131lar\u0131n\u0131n yorumlanmas\u0131","f65c9d04":"\nBir f\u0131r\u0131na ait sipari\u015flerin oldu\u011fu bir veri seti analiz edilecektir.\n\n* Transaction : \u0130\u015flem say\u0131s\u0131 \n\n* Item : \u00dcr\u00fcn ad\u0131\n\n* date_time : \u0130\u015flem Tarihi\n\n* period_day : Saatlerin periyot bilgisi\n\n* weekday_weekend : \u0130\u015flemin hafta i\u00e7i, hafta sonu olma durumu \n\n\n"}}