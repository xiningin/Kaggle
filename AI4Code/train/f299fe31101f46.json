{"cell_type":{"025e0843":"code","bfbbe866":"code","bb2f48f1":"code","0b1103d6":"code","6d7a6a33":"code","ef75c783":"code","5e4675e0":"code","9bb9f640":"code","b291a7d8":"code","e0206f87":"code","3f69790e":"code","55418727":"code","02d86769":"code","59ec1b92":"code","2ed098b4":"code","68ded928":"code","f2b77f39":"code","2f740703":"code","aeef08cb":"code","16ac5369":"code","29d59490":"code","09175455":"code","44e9204c":"code","a1d96041":"code","091af83c":"code","8fad4198":"code","fa28e7e9":"code","d97edc67":"markdown","5a87abda":"markdown","5017f7d4":"markdown","27ec19fb":"markdown","6d7ca7c9":"markdown","a904bd22":"markdown","d4ee9669":"markdown","0f3ff3e6":"markdown","d2d53331":"markdown","7bffc63b":"markdown","98858961":"markdown","000acd66":"markdown","a5e4e8a2":"markdown","9c179b28":"markdown","34bf80a4":"markdown","e2e65468":"markdown","48f2cd57":"markdown","f04465ab":"markdown","b99a3a86":"markdown","3465118e":"markdown","fc71a6ae":"markdown","98b2a052":"markdown","7206323d":"markdown","3df7274e":"markdown","40635a16":"markdown","eb6581f2":"markdown","28f65fa4":"markdown","1e670b0d":"markdown","7fc16224":"markdown","3fa6f644":"markdown","dea7e8d3":"markdown","3014716b":"markdown","f87af139":"markdown","67628c0d":"markdown","9824841b":"markdown","807181af":"markdown","9ba46301":"markdown","3e04d42e":"markdown","0ed44694":"markdown","d2a6ed0c":"markdown","4d3bfd4c":"markdown"},"source":{"025e0843":"%reset -f\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nfrom sklearn import preprocessing\n\n#Data transformation classes\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import FunctionTransformer\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Pipelines\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer\n\nfrom sklearn.metrics import confusion_matrix\n\n# Miscellaneous\nimport os, gc\nimport warnings\n\n%matplotlib inline\nplt.rcParams.update({'figure.max_open_warning': 0}) #just to suppress warning for max plots of 20\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning) \nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\n\n# Use white grid plot background from seaborn\nsns.set(font_scale=0.5, style=\"ticks\")\nsns.set_context(\"poster\", font_scale = .5, rc={\"grid.linewidth\": 0.6})","bfbbe866":"# Display output not only of last command but all commands in a cell\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","bb2f48f1":"# Set pandas options to display results\npd.options.display.max_rows = 1000\npd.options.display.max_columns = 1000","0b1103d6":"#Browse the Dataset Path\nos.chdir('\/kaggle\/input\/caravan-insurance-challenge\/')\nos.listdir()\n# Load dataset\ncc = pd.read_csv('caravan-insurance-challenge.csv')\n#Let's try to analyze the dataset based on what is availiable with us\ncc.info()\ncc.head()\ncc.describe()","6d7a6a33":"def missing_columns_data(data):\n    miss      = data.isnull().sum()\n    miss_pct  = 100 * data.isnull().sum()\/len(data)\n    \n    miss_pct      = pd.concat([miss,miss_pct], axis=1)\n    missing_cols = miss_pct.rename(columns = {0:'Missings', 1: 'Missing pct'})\n    missing_cols = missing_cols[missing_cols.iloc[:,1]!=0].sort_values('Missing pct', ascending = False).round(1)\n    \n    return missing_cols  \n\nmissing = missing_columns_data(cc)\nmissing","ef75c783":"null_counts = cc.isnull().sum()\/len(cc);\nplt.figure(figsize=(15,4));\nplt.xticks(np.arange(len(null_counts))+0.5,null_counts.index,rotation='vertical');\nplt.ylabel('Fraction of Rows with missing data');\nplt.bar(np.arange(len(null_counts)),null_counts);","5e4675e0":"cc_no_origin_train = cc[cc['ORIGIN']=='train'].drop(['ORIGIN'], axis=1)\ncc_no_origin_train.head()","9bb9f640":"cc_no_origin_test = cc[cc['ORIGIN']=='test'].drop(['ORIGIN'], axis=1)\ncc_no_origin_test.head()","b291a7d8":"fig = plt.figure(figsize=(10,10));\n\n# Plot Telling the total count of different values in CARAVAN\nplt.subplot(3,1,1);\ncc_no_origin_train['CARAVAN'].value_counts().plot(kind='bar', title='Classifying CARAVAN', color='#10bbd4', grid=True);\n\n# Plot Telling the total count of different values in customer subtype\nplt.subplot(3,1,2);\ncc_no_origin_train['MOSTYPE'].value_counts().plot(kind='bar', align='center', title='Classifying Customer Subtypes', color='#10bbd4', grid=True);","e0206f87":"categorysubtype_caravan = pd.crosstab(cc_no_origin_train['MOSTYPE'], cc_no_origin_train['CARAVAN']);\ncategorysubtype_caravan_percentage = categorysubtype_caravan.div(categorysubtype_caravan.sum(1).astype(float), axis=0);\ncategorysubtype_caravan_percentage.plot(figsize= (15,10), kind='barh', stacked=True, color=['#10bbd4', 'Crimson'], title='Category Subtype vs Caravan', grid=True);\nplt.xlabel('Category Subtype');\nplt.ylabel('CARAVAN or not');","3f69790e":"cc_no_origin_train['MGEMLEEF'].hist(figsize=(5,3), fc='#10bbd4', grid=True);\nplt.xlabel('age');\nplt.ylabel('count');","55418727":"age_caravan = pd.crosstab(cc_no_origin_train['MGEMLEEF'], cc_no_origin_train['CARAVAN']);\nage_caravan_percentage = age_caravan.div(age_caravan.sum(1).astype(float),axis=0);\nage_caravan_percentage.plot(figsize=(5,3), kind='barh', stacked=True, color=['#10bbd4', 'Crimson'], title='Dependency of Caravan on age groups', grid=True);\nplt.xlabel('Age Groups');\nplt.ylabel('Caravan');","02d86769":"cc_no_origin_train['MOSHOOFD'].value_counts().plot(kind='barh', color='#10bbd4', grid=True);\nplt.xlabel('Customer Types');\nplt.ylabel('count');","59ec1b92":"cust_type_caravan = pd.crosstab(cc_no_origin_train['MOSHOOFD'], cc_no_origin_train['CARAVAN']);\ncust_type_caravan_percentage = cust_type_caravan.div(cust_type_caravan.sum(1).astype(float), axis=0);\ncust_type_caravan_percentage.plot(kind='barh', stacked=True, color = ['#10bbd4', 'Crimson']);\nplt.xlabel('Customer types');\nplt.ylabel('Caravan');","2ed098b4":"#Remove unnecessary columns\n#check standard deviation.if std() is zero drop those columns\n#Removal list initialize\nrem = []\n\n#Add constant columns as they don't help in prediction process\nfor c in cc_no_origin_train.columns:\n    if cc_no_origin_train[c].std() == 0: #standard deviation is zero\n        rem.append(c)\n\n#drop the columns        \ncc_no_origin_train.drop(rem,axis=1,inplace=True)\n\nprint(rem)\n\n#Following columns are dropped\n","68ded928":"y = cc_no_origin_train.pop('CARAVAN')\ncc_no_origin_train.head()","f2b77f39":"features=(cc_no_origin_train.nunique() < 5)\n\ncat_attributes = features[features == True].index.tolist()\nnum_attributes = features[features == False].index.tolist()\n\nprint(\"No. of Categorical Columns\",len(cat_attributes))\nprint(\"No. of Numerical Columns\",len(num_attributes))","2f740703":"plt.figure(figsize=(30,40));\n\nfor i in range(len(num_attributes)):\n    plt.subplot(25,4,i+1);\n    sns.boxplot(cc_no_origin_train[num_attributes[i]],  showmeans=True, palette=[sns.xkcd_rgb[\"denim blue\"], sns.xkcd_rgb[\"medium green\"]]);\n    \nplt.tight_layout();","aeef08cb":"ct=ColumnTransformer([\n    ('num_attributes',RobustScaler(),num_attributes),\n    ('cat_attributes',OneHotEncoder(),cat_attributes),\n    ],\n    remainder=\"passthrough\"\n    )\nct.fit_transform(cc_no_origin_train)\nX=cc_no_origin_train","16ac5369":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=.25)","29d59490":"clf= RandomForestClassifier(oob_score = True,bootstrap=True,n_estimators=100)\npipe =Pipeline(\n    [\n     ('ct',ct),\n     ('rf',clf)\n    ]\n    );\n#Fit\/train the object on training data\nforest_fit=clf.fit(X_train, y_train);\nforest_fit;","09175455":"#Make prediction\npredict = clf.predict(X_test)\naccuracy = accuracy_score(y_test, predict)\nprint('Accuracy is :'+\"{:.2f}\".format(accuracy*100),\"%\")\n\n#mean absolute error\nerrors = abs(predict - y_test)\nprint('Mean Absolute Error:', round(np.mean(errors), 2), 'degrees.')","44e9204c":"# Display confusion matrix\ndef display_conf_matrix(y_test, y_pred):\n    # Confusion matrix: row -> actual, column -> predicted\n    from sklearn.metrics import confusion_matrix\n    print(confusion_matrix(y_test, y_pred))","a1d96041":"display_conf_matrix(y_test, predict)","091af83c":"\nconfusion_matrix = pd.DataFrame(confusion_matrix(y_test, predict))\nconfusion_matrix\nsns.heatmap(confusion_matrix\/np.sum(confusion_matrix), annot=True, \n            fmt='.2%', cmap='Blues')\nplt.xlabel('Predicted');\nplt.ylabel('Actual');\nplt.title('Predicted vs Actual');","8fad4198":"feature_list=X.columns\nimportances = list(clf.feature_importances_)\nfeature_importance=pd.DataFrame({'Feature_Name':feature_list, 'Importance':importances})\nfeature_importance.sort_values(by ='Importance',ascending=False)","fa28e7e9":"plt.figure(figsize=(8,6))\nfeat_importances = pd.Series(clf.feature_importances_, index=X.columns)\nfeat_importances.nlargest(10).plot(kind='barh', stacked=True, color = ['#10bbd4', 'Crimson']);\nplt.xlabel('Importance Level');\nplt.ylabel('Feature');","d97edc67":"### <font color=crimson>Loading Dataset and Feature Analysis","5a87abda":"<a id=featureimportance><\/a>\n### <font color='crimson'>Feature Importance","5017f7d4":"### <font color='crimson'>Feature Engineering","27ec19fb":"#### <font color=crimson>Visualization: Plotting Top 10 Important Features","6d7ca7c9":" <font color=\"crimson\"> <i> Split Dataset as Train and Test from 'ORIGIN' feature","a904bd22":"<a id=confusionmatrix><\/a>\n### <font color=crimson>Confusion matrix","d4ee9669":"<font color='Crimson'><i>40-50 Yrs Age group bought most policies whereas 20-30 & 70-80 Age groups don't prefer buying any Policies","0f3ff3e6":"Following are the Important Features to Identify Potential Customers:\n\n* <u>Based on Demographic and Social Data <\/u>\n\n    - MOSTYPE:\tCustomer Subtype (Middle class families, Affluent young families may opt for most of the Caravan Policies)\n    - MOSHOOFD:\tCustomer main type(Customer main types 'Family with grown ups' and 'Driven Growers')\n    - MKOOPKLA:\tPurchasing power class\n    - MOPLLAAG:\tLower level education\t\n    - MOPLMIDD:\tMedium level education\n<hr>    \n* <u>Based on Insurance Product Usage related data<\/u>\n\n    - PBRAND: Contribution fire policies\n    - APERSAUT:\tNumber of car policies\n    - PPERSAUT:\tContribution car policies\n    - PWAPART:\tContribution private third party insurance\n    - ABRAND:\tNumber of fire policies\t\n","d2d53331":"<a id=missingval><\/a>\n### <font color=\"crimson\">Missing Values Analysis\n- Let's first define a Function called 'missing_columns_data'\n- Objective of the function is to filter out only those features which have Number of missing values and corresponding           missing percentange    ","7bffc63b":" <font color=\"crimson\"> <i> Senior cosmopolitans, Students in apartments, Fresh masters in the city, Single youth, Suburban youth, Large family farms don't have a single Caravan Policy \nwhereas Middle class families, Affluent young families subtypes have most of the Caravan Policies","98858961":"![caravan2.jpg](attachment:caravan2.jpg)","000acd66":"&nbsp;","a5e4e8a2":"<a id=intro><\/a>\n#        <font color=crimson>      &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;          <u>Caravan Insurance Challenge<\/u>\n\n> ### <font color=crimson><i>Brief Introduction<\/i> ","9c179b28":"### <font color=crimson>Split dataset in 75:25 ratio, Test size=25","34bf80a4":"### <font color=\"crimson\">Visualization: Plotting the dependency of prefering caravan policy based on category subtype","e2e65468":"The dataset that was obtained consists of 86 features, which includes insurance product usage data and social-demographic data. The first 43 attributes are demographic and social data, whereas, the remaining 43 variables are insurance product usage related data which indicate customers of the company\u2019s existing policies such as fire, boat, life, etc. The variable of interest in this dataset is Number_of_mobile_home_policies, which indicates the observations that have bought caravan insurance. This dataset is not set up as individual customer observations and each row represents a group of customers i.e., a large sample size. This might have been done to utilize all the observations and at the same time, keep the number of rows in the dataset to be manageable\n\nThe field ORIGIN in the caravan-insurance-challenge.csv file has the values train and test, corresponding to the training and evaluation sets, respectively. Each observation corresponds to a postal code. Variables beginning with M refer to demographic statistics of the postal code, while variables beginning with P and A (as well as CARAVAN, the target variable) refer to product ownership and insurance statistics in the postal code.\n\nThe dataset contains the following features:\n\n| Feature | Description | Feature | Description |\n| --- | --- | --- |---|\n|ORIGIN|train or test, as described above|MOSTYPE| Customer Subtype; (see L0)|\n|MAANTHUI| Number of houses 1 - 10|MGEMOMV| Avg size household 1 - 6|\n|MGEMLEEF| Avg age; see L1|MOSHOOFD| Customer main type; (see L2)|\n|Percentages in each group, per postal code (see L3):|\n|MGODRK| Roman catholic|MGODPR| Protestant|\n|MGODOV| Other religion|MGODGE| No religion|\n|MRELGE| Married|MRELSA| Living together|\n|MRELOV| Other relation|MFALLEEN| Singles|\n|MFGEKIND| Household without children|MFWEKIND| Household with children|\n|MOPLHOOG| High level education|MOPLMIDD| Medium level education|\n|MOPLLAAG| Lower level education|MBERHOOG| High status|\n|MBERZELF| Entrepreneur|MBERBOER| Farmer|\n|MBERMIDD| Middle management|MBERARBG| Skilled labourers|\n|MBERARBO| Unskilled labourers|MSKA| Social class A|\n|MSKB1| Social class B1|MSKB2| Social class B2|\n|MSKC| Social class C|MSKD| Social class D|\n|MHHUUR| Rented house|MHKOOP| Home owners|\n|MAUT1| 1 car|MAUT2| 2 cars|\n|MAUT0| No car|MZFONDS| National Health Service|\n|MZPART| Private health insurance|MINKM30| Income < 30.000|\n|MINK3045| Income 30-45.000|MINK4575| Income 45-75.000|\n|MINK7512| Income 75-122.000|MINK123M| Income >123.000|\n|MINKGEM| Average income|MKOOPKLA| Purchasing power class|\n|Total number of variable in postal code (see L4):|\n|PWAPART| Contribution private third party insurance|PWABEDR| Contribution third party insurance (firms)|\n|PWALAND| Contribution third party insurane (agriculture)|PPERSAUT| Contribution car policies|\n|PBESAUT| Contribution delivery van policies|PMOTSCO| Contribution motorcycle\/scooter policies|\n|PVRAAUT| Contribution lorry policies|PAANHANG| Contribution trailer policies|\n|PTRACTOR| Contribution tractor policies|PWERKT| Contribution agricultural machines policies|\n|PBROM| Contribution moped policies|PLEVEN| Contribution life insurances|\n|PPERSONG| Contribution private accident insurance policies|PGEZONG| Contribution family accidents insurance policies|\n|PWAOREG| Contribution disability insurance policies|PBRAND| Contribution fire policies|\n|PZEILPL| Contribution surfboard policies|PPLEZIER| Contribution boat policies|\n|PFIETS| Contribution bicycle policies|PINBOED| Contribution property insurance policies|\n|PBYSTAND| Contribution social security insurance policies|AWAPART| Number of private third party insurance 1 - 12|\n|AWABEDR| Number of third party insurance (firms)|AWALAND| Number of third party insurance (agriculture)|\n|APERSAUT| Number of car policies|ABESAUT| Number of delivery van policies|\n|AMOTSCO| Number of motorcycle\/scooter policies|AVRAAUT| Number of lorry policies|\n|AAANHANG| Number of trailer policies|ATRACTOR| Number of tractor policies|\n|AWERKT| Number of agricultural machines policies|ABROM| Number of moped policies|\n|ALEVEN| Number of life insurances|APERSONG| Number of private accident insurance policies|\n|AGEZONG| Number of family accidents insurance policies|AWAOREG| Number of disability insurance policies|\n|ABRAND| Number of fire policies|AZEILPL| Number of surfboard policies|\n|APLEZIER| Number of boat policies|AFIETS| Number of bicycle policies|\n|AINBOED| Number of property insurance policies|ABYSTAND| Number of social security insurance policies|\n|CARAVAN| Number of mobile home policies 0 - 1|\n\nKeys (L0 - L4) <br>\nL0: Customer subtype\n\n| Subtype | Description | Subtype | Description | Subtype | Description|\n| --- | --- | --- |---|---|---|\n|1|High Income, expensive child|2|Very Important Provincials|3|High status seniors|\n|4|Affluent senior apartments|5| Mixed seniors|6| Career and childcare|\n|7| Dinki's (double income no kids)|8| Middle class families|9| Modern, complete families|\n|10| Stable family|11| Family starters|12| Affluent young families|\n|13| Young all american family|14| Junior cosmopolitan|15| Senior cosmopolitans|\n|16| Students in apartments|17| Fresh masters in the city|18| Single youth|\n|19| Suburban youth|20| Etnically diverse|21| Young urban have-nots|\n|22| Mixed apartment dwellers|23| Young and rising|24| Young, low educated|\n|25| Young seniors in the city|26| Own home elderly|27| Seniors in apartments|\n|28| Residential elderly|29| Porchless seniors; no front yard|30| Religious elderly singles|\n|31| Low income catholics|32| Mixed seniors|33| Lower class large families|\n|34| Large family, employed child|35| Village families|36| Couples with teens 'Married with children'|\n|37| Mixed small town dwellers|38| Traditional families|39| Large religous families|\n|40| Large family farms|41| Mixed rurals|\n\nL1: Average age keys:\n\n| Key | Slab | Key | Slab | Key | Slab |\n| --- | --- | --- | --- | --- | --- |\n|1| 20-30 years|2| 30-40 years|3| 40-50 years|\n|4| 50-60 years|5| 60-70 years|6| 70-80 years|\n\nL2: Customer main type keys:\n\n| Key | Type | Key | Type | Key | Type |\n| --- | --- | --- | --- | --- | --- |\n|1| Successful hedonists|2| Driven Growers|3| Average Family|\n|4| Career Loners|5| Living well|6| Cruising Seniors|\n|7| Retired and Religeous|8| Family with grown ups|9| Conservative families|\n|10| Farmers|\n\nL3: Percentage keys:\n\n| Key | Slab | Key | Slab | Key | Slab |\n| --- | --- | --- | --- | --- | --- |\n|0| 0%|1| 1 - 10%|2| 11 - 23%|\n|3| 24 - 36%|4| 37 - 49%|5| 50 - 62%|\n|6| 63 - 75%|7| 76 - 88%|8| 89 - 99%|\n|9| 100%|\n\nL4: Total number keys:\n\n| Key | Slab | Key | Slab | Key | Slab |\n| --- | --- | --- | --- | --- | --- |\n|0| 0|1| 1 - 49|2| 50 - 99|\n|3| 100 - 199|4| 200 - 499|5| 500 - 999|\n|6| 1000 - 4999|7| 5000 - 9999|8| 10,000 - 19,999|\n|9| >= 20,000 |","48f2cd57":" <font color=\"crimson\"> <i> No unnecessary column is there in the train dataset","f04465ab":"![scaling%20notes.jpg](attachment:scaling%20notes.jpg)","b99a3a86":"### <font color=crimson>Remove unnecessary columns<\/font>","3465118e":"<font color='Crimson'><i>We can verify that age group 1: 20-30yrs don't prefer the caravan policy. thus Age, Subtype are important features for correct classification.","fc71a6ae":"### <font color=crimson>Objective\n\nUse RandomForest technique to develop a model to identify potential customers\n","98b2a052":" <font color=\"crimson\"> <i> From the BoxPlots above, as we can see that there are Outliers in most of the numerical attributes, so for Scaling the numerical attributers, we use RobustScaler and OneHotEncoder for Categorical attributes. Both of the above transformations can be performed using ColumnTransformer at one-go. \n<br>     A Summary of usage about Preprocessing Types is given hereunder:","7206323d":"### <font color=\"crimson\">Visualization: Classifying CARAVAN feature and Customer Subtypes","3df7274e":"<font color=crimson> As we don't see spikes for any of the features, there are no missing values in the dataset. ","40635a16":"<a id=dataclean><\/a>\n### <font color=crimson>Data Cleaning","eb6581f2":"#### <font color=\"crimson\">Visualization: Finding missing values","28f65fa4":"Cross-selling is one of the most successful techniques of marketing in the modern days where a company aims at selling additional products\/services among existing customers. In 2000, a Europe insurance company that offered various insurance services including life, auto, boat insurances to a large customer faced this challenge of cross-selling where the company\u2019s newest service \u2018Caravan insurance policy\u2019 turned to be disappointing in terms of sales. The marketing department of the company knew that taking advantage of the existing customer base would improve their new insurance\u2019s sale, however, the biggest question is \u2018whom to target, among the company\u2019s thousands of customers\u2019 i.e. to identify potential Customers. I attempt to answer this question by Random Forest Technique. \n(Image Source: https:\/\/www.insurance-supermarket.co.uk\/caravan-insurance.html)","1e670b0d":"<a id=datasetdscr><\/a>\n### <font color=crimson>Dataset Description and Usage","7fc16224":"<font color=\"crimson\"> \n    Findings from Dataset available:\n\nStandard Deviation for 25% of the values is nearly 0 and for 75% of the values is slightly towards higher side, which means that Dataset is slightly right skewed.\n    <\/font> ","3fa6f644":"***","dea7e8d3":"<a id=\"numcat\"><\/a>\n#### <font color='crimson'>Handling Numerical and Categorical Attributes","3014716b":"### <font color='crimson'>Visualization: Plotting the dependency of prefering Caravan policy based on Customer type","f87af139":"### <font color=\"crimson\">Visualization: Plotting the dependency of preferring caravan policy based on age","67628c0d":"<a id=pipeline><\/a>\n### <font color=crimson>Pipelining","9824841b":"<a id=conclusion><\/a>\n### <font color=crimson>Conclusion","807181af":"<h1>Contents<span class=\"tocSkip\"><\/span><\/h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Brief-Introduction\" data-toc-modified-id=\"Brief-Introduction-1\"><font color=\"crimson\"><i>Brief Introduction<\/i><\/font><\/a><\/span><\/li><li><span><a href=\"#Objective\" data-toc-modified-id=\"Objective-2\"><font color=\"crimson\">Objective<\/font><\/a><\/span><\/li><li><span><a href=\"#Libraries-to-be-used\" data-toc-modified-id=\"Libraries-to-be-used-3\"><font color=\"crimson\">Libraries to be used<\/font><\/a><\/span><\/li><li><span><a href=\"#Dataset-Description-and-Usage\" data-toc-modified-id=\"Dataset-Description-and-Usage-4\"><font color=\"crimson\">Dataset Description and Usage<\/font><\/a><\/span><\/li><li><span><a href=\"#Loading-Dataset-and-Feature-Analysis\" data-toc-modified-id=\"Loading-Dataset-and-Feature-Analysis-5\"><font color=\"crimson\">Loading Dataset and Feature Analysis<\/font><\/a><\/span><\/li><li><span><a href=\"#Missing-Values-Analysis\" data-toc-modified-id=\"Missing-Values-Analysis-6\"><font color=\"crimson\">Missing Values Analysis<\/font><\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Visualization:-Finding-missing-values\" data-toc-modified-id=\"Visualization:-Finding-missing-values-6.1\"><font color=\"crimson\">Visualization: Finding missing values<\/font><\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Data-Cleaning\" data-toc-modified-id=\"Data-Cleaning-7\"><font color=\"crimson\">Data Cleaning<\/font><\/a><\/span><\/li><li><span><a href=\"#Visualization:-Classifying-CARAVAN-feature-and-Customer-Subtypes\" data-toc-modified-id=\"Visualization:-Classifying-CARAVAN-feature-and-Customer-Subtypes-8\"><font color=\"crimson\">Visualization: Classifying CARAVAN feature and Customer Subtypes<\/font><\/a><\/span><\/li><li><span><a href=\"#Visualization:-Plotting-the-dependency-of-prefering-caravan-policy-based-on-category-subtype\" data-toc-modified-id=\"Visualization:-Plotting-the-dependency-of-prefering-caravan-policy-based-on-category-subtype-9\"><font color=\"crimson\">Visualization: Plotting the dependency of prefering caravan policy based on category subtype<\/font><\/a><\/span><\/li><li><span><a href=\"#Visualization:-Plotting-the-dependency-of-preferring-caravan-policy-based-on-age\" data-toc-modified-id=\"Visualization:-Plotting-the-dependency-of-preferring-caravan-policy-based-on-age-10\"><font color=\"crimson\">Visualization: Plotting the dependency of preferring caravan policy based on age<\/font><\/a><\/span><\/li><li><span><a href=\"#Visualization:-Plotting-the-dependency-of-prefering-Caravan-policy-based-on-Customer-type\" data-toc-modified-id=\"Visualization:-Plotting-the-dependency-of-prefering-Caravan-policy-based-on-Customer-type-11\"><font color=\"crimson\">Visualization: Plotting the dependency of prefering Caravan policy based on Customer type<\/font><\/a><\/span><\/li><li><span><a href=\"#Remove-unnecessary-columns\" data-toc-modified-id=\"Remove-unnecessary-columns-12\"><font color=\"crimson\">Remove unnecessary columns<\/font><\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Fetch-target-column-values-in-variable-and-delete-column-from-train-data\" data-toc-modified-id=\"Fetch-target-column-values-in-variable-and-delete-column-from-train-data-12.1\"><font color=\"crimson\">Fetch target column values in variable and delete column from train data<\/font><\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Feature-Engineering\" data-toc-modified-id=\"Feature-Engineering-13\"><font color=\"crimson\">Feature Engineering<\/font><\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Handling-Numerical-and-Categorical-Attributes\" data-toc-modified-id=\"Handling-Numerical-and-Categorical-Attributes-13.1\"><font color=\"crimson\">Handling Numerical and Categorical Attributes<\/font><\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Split-dataset-in-75:25-ratio,-Test-size=25\" data-toc-modified-id=\"Split-dataset-in-75:25-ratio,-Test-size=25-14\"><font color=\"crimson\">Split dataset in 75:25 ratio, Test size=25<\/font><\/a><\/span><\/li><li><span><a href=\"#Pipelining\" data-toc-modified-id=\"Pipelining-15\"><font color=\"crimson\">Pipelining<\/font><\/a><\/span><\/li><li><span><a href=\"#Confusion-matrix\" data-toc-modified-id=\"Confusion-matrix-16\"><font color=\"crimson\">Confusion matrix<\/font><\/a><\/span><\/li><li><span><a href=\"#Feature-Importance\" data-toc-modified-id=\"Feature-Importance-17\"><font color=\"crimson\">Feature Importance<\/font><\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Visualization:-Plotting-Top-10-Important-Features\" data-toc-modified-id=\"Visualization:-Plotting-Top-10-Important-Features-17.1\"><font color=\"crimson\">Visualization: Plotting Top 10 Important Features<\/font><\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Conclusion\" data-toc-modified-id=\"Conclusion-18\"><font color=\"crimson\">Conclusion<\/font><\/a><\/span><\/li><\/ul><\/div>","9ba46301":" <font color=\"crimson\"> <i> So, Lower class large families Customer Subtypes are more and Negligible Number of Customers bought  CARAVAN mobile home policies","3e04d42e":"####  <font color=\"crimson\">Fetch target column values in variable and delete column from train data","0ed44694":"<font color=crimson>We can verify that Customer main types 'Family with grown ups'  and 'Driven Growers' are important features","d2a6ed0c":"<a id=libraries><\/a>\n### <font color=crimson>Libraries to be used","4d3bfd4c":"* Pandas - for dataset handling\n* Numpy - Support for Pandas and calculations \n* Matplotlib - for visualization (Plotting graphs)\n* Plotly - for interative plots\n* Sklearn - for Data Processing and Clustering\n* Os,gc - for OS\/Memory related operations\n* confusion_matrix - Performance metrics"}}