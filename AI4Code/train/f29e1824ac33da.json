{"cell_type":{"4feea4d3":"code","b4a758d4":"code","067dd035":"code","9ed3f5fa":"code","4e3b8d85":"code","e987f34d":"code","2add5419":"code","f7193709":"code","69a15adc":"code","1de4df2d":"code","47420177":"code","b83b33de":"code","237dfbba":"code","e07bc2df":"code","ac12630e":"code","a00bded8":"code","6185e88c":"code","80bf8076":"code","af84b296":"code","c0fff090":"code","36f34d07":"code","bd7e79ed":"code","8fde8c03":"code","e6c72420":"code","976c97a6":"code","13521e08":"code","c9af2ac8":"code","b6961521":"code","33193248":"markdown","f52e9000":"markdown","c5e5ed4d":"markdown","9043186a":"markdown","78b3d9ec":"markdown","a78b0fe9":"markdown","eed05465":"markdown","d7754dd8":"markdown","2760b014":"markdown","47e9a0ff":"markdown","578003a8":"markdown","ed744260":"markdown","2d768eb1":"markdown","dbd236fe":"markdown","3d1905c5":"markdown","50a0d7b5":"markdown","2f322bb3":"markdown","61ed3582":"markdown"},"source":{"4feea4d3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b4a758d4":"!apt install ghostscript python3-tk","067dd035":"!pip uninstall camelot\n!pip uninstall camelot-py\n!pip install camelot-py[cv]\n!pip install camelot-py[cv]","9ed3f5fa":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nimport tkinter\nimport camelot\nimport os\n","4e3b8d85":"# Declaring the range of timeline.\n\ncurrent_year = 2021\nstart_year = 2017\nmonths = {'jan':'january','feb':'february','mar':'march','apr':'april','may':'may','jun':'june','jul':'july',\\\n          'aug':'august','sept':'september','oct':'october','nov':'november','dec':'december'}\n\nyears = range(start_year,(current_year+1))","e987f34d":"column = ['Country','Visa_Class','Issuance','Month_Year']\nvisa = pd.DataFrame(([[0,0,0,0]]),columns=column)\ncounter = 0 \n\n\nfor y in years:\n    for m in months:\n        try:    \n            tab = camelot.read_pdf(f'..\/input\/visadata\/{months[m]}_{y}.pdf', pages = 'all')\n            \n            for i in range(len(tab)):\n                temp = pd.DataFrame(tab[i].df.iloc[2:,:])\n                temp.columns = ['Country','Visa_Class','Issuance']\n                s = datetime.strftime(datetime.strptime(f'28-{months[m]}-{y}','%d-%B-%Y'),'%B-%Y')\n                temp['Month_Year'] = s\n                visa = visa.append(temp)\n            counter = counter + 1\n   \n        except FileNotFoundError:\n            print(f'file of {months[m]} {y} does not exists!!!')\n            continue\n        finally:\n            pass\n            \n# Drop first line with 0 \nvisa = visa.drop(0)\n\nprint('Number of files read:{}'.format(counter))","2add5419":"visa.to_csv('\/kaggle\/working\/visa.csv', index = False)","f7193709":"visa.tail()","69a15adc":"len(visa[visa['Country'].str.startswith('GRAND')])","1de4df2d":"len(visa[visa['Country'].str.startswith('Grand')])","47420177":"visa_grand_total = pd.DataFrame(visa[visa['Country'].str.startswith('GRAND') | \\\n                                        visa['Country'].str.startswith('Grand')])\nlen(visa_grand_total)","b83b33de":"visa_grand_total","237dfbba":"\n\nTotal_issuance = visa_grand_total['Visa_Class']+visa_grand_total['Issuance']\nTotal_issuance = Total_issuance.str.replace(',','').astype(int)\nTotal_issuance.sum()","e07bc2df":"visa_us = pd.DataFrame(visa[~(visa['Country'].str.startswith('GRAND') |\\\n                                 visa['Country'].str.startswith('Grand'))])","ac12630e":"test1 = visa_us[visa_us['Issuance'] == '']\ntest1","a00bded8":"test2 = visa_us[visa_us['Visa_Class']=='']\ntest2","6185e88c":"cnt = 0 \nfor c in [0,1]:\n    for r in range(len(visa_us)):\n        try:\n            if len(visa_us.iloc[r,c].split('\\n')) == 1:\n                pass\n            elif len(visa_us.iloc[r,c].split('\\n')) == 2:\n                a,b = visa_us.iloc[r,c].split('\\n')\n                visa_us.iloc[r,c] = a\n                visa_us.iloc[r,c+1] = b\n            else:\n                print(f'{visa_us.iloc[r,c]}')\n            cnt += 1\n        except ValueError:\n            print(f'Please check the row: {r} and column {c}')\nprint('Number of Rows cleaned:',cnt)","80bf8076":"visa_us['Visa_Class'].unique()","af84b296":"visa_us['Country'].unique()","c0fff090":"visa_us['Issuance'] = visa_us['Issuance'].str.replace(',','')\nvisa_us = visa_us.astype({'Country':str, 'Visa_Class':str, 'Issuance': int,'Month_Year':str})","36f34d07":"Total_issuance.sum() == visa_us['Issuance'].sum()","bd7e79ed":"visa_us=visa_us[['Month_Year','Country','Visa_Class','Issuance']]","8fde8c03":"visa_us['Month_Year'] = pd.DatetimeIndex(pd.to_datetime(visa_us['Month_Year'], format='%B-%Y'))\nvisa_us = visa_us.sort_values(['Month_Year','Country'])\nvisa_us['Month_Year']=visa_us['Month_Year'].dt.strftime('%B-%Y')\nvisa_us = visa_us.reset_index(drop = True)","e6c72420":"visa_us.head(10)","976c97a6":"visa_us.info()","13521e08":"visa_us.describe()","c9af2ac8":"visa_us.to_csv('\/kaggle\/working\/imm_visa_us.csv')","b6961521":"visa_us","33193248":"- Saving the data.","f52e9000":"We got the graph created in tableau.\n\n![Bar plot IV.png](attachment:6f3b5888-47a8-490c-9a1b-a950915bb1a4.png)","c5e5ed4d":"- Oops!!! it should have been same as number of files. So the remainings must be because of spelling or change case.\n\n","9043186a":"### Rearranging And Sorting\nIt seems the Data is prepared well now except that it has to be reindexed and also column has to be rearranged. ","78b3d9ec":"## Data Downloaded by Mac Automator \n\nI've tried several python codes to grab files from websites but till now could not find effective way to have them downloaded as you know the file names are not consistent.  \n\nThere might be a way to download all the files together by python codes through web crawling - that I may try in future. So far I had tried with requests and wget libraries but because filename differs had no luck so far. Moreover, Mac's Automator is quite easy tool to download all the files from a website and it is quite faster. \n","a78b0fe9":"### Reading the Data From pdf Files From a Folder\n\n- Renaming the files in the Folder\n- The file names to be renamed by shortening them such that iteration may become easy. ","eed05465":"# US IMMIGRANT VISA ISSUANCE DATA ANALYSIS\n","d7754dd8":"We have created a dashboard in tableau. You can check this out to interact with data. \n\nhttps:\/\/public.tableau.com\/views\/USVisa_Category\/Dashboard1?:language=en-GB&publish=yes&:display_count=n&:origin=viz_share_link","2760b014":"### CLEANING THE DATA :\n\n- Save the data to a variable without grand totals row","47e9a0ff":" - To fix the data types we have to deal with the Issuance columns having numeric character with thousand separator. ","578003a8":"- Its seems that some entries were misplaced to Visa Class column and all of them are in string format.We need to get them under one column and turn them into float format so that we can make a sum of those. ","ed744260":"### Checking the Data\n\nAs it had been collected from website that had 52 files which were published monthly. Naturally each file have a Grand Total row. We can grab all of those rows and put into a DataFrame and can check the sum of the Grand totals and compare that with the Issuance so that we can be sure of data losses if there is any. ","2d768eb1":"- This dataframe may contain whitespace or data can be misplaced as we saw diagnosing the Grand Totals. So, One approach is to check white space in the columns except the Month_Year column because we are looking for the column shifting during the transformation from pdf files to table formats. Lets investigate. ","dbd236fe":"#### Checking Total issuance Number from the Grand Totals \n- If the result is True , then we can consider our data to be cleaned up properly. ","3d1905c5":"- Checking entries in the Visa Class and Country column by unique command.","50a0d7b5":"US Department of state - Bureau of consular affairs publish visa statistics monthly. They publish two file monthly. One is according to \"the visa issuance by Foreign State of Chargeability or Place of Birth\" and the other is according to the visa issuance by Post and Visa Class\". We are interested in the former as they are according to the country rather than consular offices. \n\nFile names are formatted as \"Month Year - IV Issuances by FSC or Place of Birth and Visa Class\" in pdf format. \n\nOur Goal is to grab all the files and convert the pdf files into a single table or dataframe for analysis and \nvisualization.","2f322bb3":"- Checking first with Sentence case and guess what.... Bingo!!! We get them all. ","61ed3582":"- We got 7488 rows of \"Issuance\" column having '' and the numbers has been shifted to left with separator \\n. \nOn the otherhand Visa class containing '' in 7487 rows and the data in that column shifted to country column with same separator \\n. We try to use for loop here to split the entries by \\n. "}}