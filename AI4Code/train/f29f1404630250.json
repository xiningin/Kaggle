{"cell_type":{"6575954f":"code","413d52ff":"code","931f55c5":"code","2381ad4a":"code","70a24257":"code","55f8a8ea":"code","5c9d4c9b":"code","f4011947":"code","ac39428e":"code","0cb2812c":"code","94c881d1":"code","11ec5b91":"code","c6051826":"code","b19c480e":"code","d055a148":"markdown","0597fed7":"markdown","8f242d32":"markdown","95a05f06":"markdown","80f2a015":"markdown","8bcc7a3e":"markdown","4d72e43a":"markdown","3a355163":"markdown","23a4b66f":"markdown","7ab23adc":"markdown"},"source":{"6575954f":"# libraries\nimport random\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport networkx as nx\nimport datetime\nimport fuzzywuzzy\nfrom fuzzywuzzy import process\nimport matplotlib.pyplot as plt\nimport matplotlib.font_manager as fm\nimport matplotlib.gridspec as gridspec\nimport warnings; warnings.filterwarnings(\"ignore\")\n\n# unhide all rows and columns\npd.set_option('display.max_rows', 50)\npd.set_option('display.max_columns', 50)\npd.set_option('display.width', 1000)\n\n# for character encoding\nimport chardet\n\n# for box-cox transformation\nfrom scipy import stats\n\n# for min_max scaling\nfrom mlxtend.preprocessing import minmax_scaling","413d52ff":"# load data\ndataset = \"..\/input\/kaggle-competitions-top-100\/Kaggle Competitions Top 100 - Jan 2022.csv\"\ndf = pd.read_csv(dataset, delimiter=\";\", encoding=\"latin-1\")\ndf.head(10)","931f55c5":"df.columns","2381ad4a":"# get the number of missing data points per column\nmissing_values_count = df.isnull().sum()\n\n# look at the number of missing points in the columns\nmissing_values_count[:]","70a24257":"# Column Correlations Network\nmain_color = \"#16a085\"\nstrong_main_color = \"#ffeb3b\"\ncustom_colors = [strong_main_color, main_color]\n\nthresh = 0.3\ndef correlation_network(data, corr_interval=[-0.9, 0.9], data_type=\"Train\", node_color=custom_colors[1]):\n    data = data\n    corr = data.corr()\n    corr = pd.melt(corr.reset_index(), id_vars=\"index\")\n    corr.columns = [\"x\", \"y\", \"value\"]\n    high_corr = corr[((corr[\"value\"] <= corr_interval[0]) | (corr[\"value\"] >= corr_interval[1]))]\n    high_corr = high_corr[(high_corr[\"value\"] != 1)].reset_index(drop=True)\n    sources = list(high_corr.x.unique())\n    targets = list(high_corr.y.unique())\n    plt.figure(figsize=(16, 12))\n    g = nx.from_pandas_edgelist(high_corr, source=\"x\", target=\"y\") \n    layout = nx.spring_layout(g, iterations=50, k=0.6, seed=1337)\n    target_size = [g.degree(t) * 80 for t in targets]\n    nx.draw_networkx_nodes(g, layout, nodelist=targets, node_size=target_size, node_color=node_color)\n    nx.draw_networkx_nodes(g, layout, nodelist=sources, node_color=node_color, node_size=800, alpha=0.5)\n    nx.draw_networkx_edges(g, layout, width=1, edge_color=custom_colors[1])\n    target_dict = dict(zip(targets, targets))\n    nx.draw_networkx_labels(g, layout, labels=target_dict)\n    plt.axis(\"off\")\n    plt.title(f\"Column Correlations Network\", fontsize=25)\n    plt.show()\ncorrelation_network(data=df, corr_interval=[-thresh, thresh], data_type=\"Train\", node_color=custom_colors[0])","55f8a8ea":"# Correlation Matrix\ndf.corr().style.background_gradient()","5c9d4c9b":"tier = df.groupby(\"Tier\").User.count().reset_index()\ntier","f4011947":"company = df.groupby(\"Company\/School\").User.count().reset_index()\ncompany[(company.User >= 2)]","ac39428e":"country = df.groupby(\"Country\").User.count().reset_index()\nlen(country)","0cb2812c":"df[(df.Country==\"Turkey\")]","94c881d1":"country[(country.User >= 5)]","11ec5b91":"df.describe().round(decimals=0)","c6051826":"df[(df[\"Competitions_Num\"]==305)|(df[\"Datasets_Num\"]==1197)|(df[\"Notebooks_Num\"]==594)|(df[\"Discussions_Num\"]==9270)|(df[\"Competitions_Gold\"]==59)]","b19c480e":"df[((df[\"Competitions_Num\"]<=df[\"Notebooks_Num\"]))]","d055a148":"# 5. Conclusion\nCompetitions and Notebooks relation looks like a cycle of gaining and sharing knowledge.<br>\nTop 100 users that have more notebooks than competitions participations are listed below.<br>\nHave fun and Kaggle on.","0597fed7":"# 4. Exploratory Data Analysis\nVisualize the data to get a better understanding.<br>\nFirst, quick colum correlation check with network diagram.","8f242d32":"# 1. Introduction\nQuick exploratory data analysis of [Competitions Ranking Top 100](https:\/\/www.nba.com\/stats\/players\/) dataset.<br>\nThe aim of this notebook to visualize the Kaggle habits that top 100 (grand)masters have in common.<br>\n**If you're reading this, please upvote.**","95a05f06":"# 3. Data Cleaning\nHave a look at the column names. They usually become useful later on.","80f2a015":"Points and number of competitions gold medals are strongly positively correlated.<br>\nAlso, number of notebooks and number of competitions bronze medals are positively correlated.<br>\nNote that, in order to win a bronze medal in a competition, one need to finish at top 100.","8bcc7a3e":"## 4.2. Company\/School \ud83c\udf93\nThere are only 6 companies with 2 or more employees at Competitions Ranking Top 100.<br>\nNvidia and H2O takes the lead.","4d72e43a":"## 4.3. Country \ud83c\udf0e\nTop 100 is from 28 different countries.<br>\nJapan and United States holds the majority.<br>\n[Ahmet Erdem](https:\/\/www.kaggle.com\/aerdem4) is the only Turkish Kaggler at Competitions Top 100. Congrats to him!","3a355163":"## 4.1. Tier \ud83c\udfc6\nMajority of the list is grandmaster but 5 experts found themselves a spot at the Top 100.","23a4b66f":"# 2. Data Loading\nThe following lines prevent some errors while loading data, delete them from the code and check for yourselves:\n* encoding=\"latin-1\"\n* delimiter=\";\"\n\nDataset is ranked according to \"Points\" column.","7ab23adc":"## 4.4. Content\nMean Competitions: 56<br>\nMean Datasets: 32<br>\nMean Notebooks: 24<br>\nMean Discussions: 432<br>\n<br>\nMax Competitions: 305 - [Mathurin Ach\u00e9](https:\/\/www.kaggle.com\/mathurinache)<br>\nMax Datasets: 1197 - [Mathurin Ach\u00e9](https:\/\/www.kaggle.com\/mathurinache)<br>\nMax Notebooks: 594 - [Bojan Tunguz](https:\/\/www.kaggle.com\/tunguz)<br>\nMax Discussions: 9270 - [CPMP](https:\/\/www.kaggle.com\/cpmpml)<br>\n<br>\nIt is obvious that masters love to discuss. \ud83d\ude05<br>\nAnd [Giba](https:\/\/www.kaggle.com\/titericz) loves the gold \ud83e\udd47 most."}}