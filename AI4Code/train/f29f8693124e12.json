{"cell_type":{"3f60b4c6":"code","5622c9b8":"code","74298b91":"code","a80ba4a4":"code","a120cfc8":"code","f1e32895":"code","3ab5aa03":"code","c1a25918":"code","817fb228":"code","86ea80ee":"code","08b93291":"code","b549984e":"code","75ede051":"code","da9a97d5":"code","6b26e996":"code","4a3a24c7":"code","99be73fb":"code","077a6edf":"code","17c729f5":"code","2d3c96f7":"code","edb31958":"code","a3e70adb":"markdown","927252bd":"markdown","fd0b2ab3":"markdown","bb396ae5":"markdown","ff8bec73":"markdown","531544bc":"markdown","d064bca3":"markdown","55919f80":"markdown","4f510224":"markdown","2895322e":"markdown","13e6c914":"markdown","6c6dd88a":"markdown","499ca688":"markdown","1444a542":"markdown","38189fe6":"markdown","fa6632b8":"markdown","8768e00e":"markdown","3de0723a":"markdown","348182c8":"markdown","ee478743":"markdown","a6586a49":"markdown"},"source":{"3f60b4c6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5622c9b8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","74298b91":"df = pd.read_csv('..\/input\/hirirng-decision\/Datapoint.csv')","a80ba4a4":"df.head()","a120cfc8":"df.info()","f1e32895":"y = df['Decision'] # Dependent Variable\nX = df.drop('Decision',axis=1) # Independent Variables","3ab5aa03":"y.value_counts()","c1a25918":"from imblearn.combine import SMOTETomek\noversampling = SMOTETomek()","817fb228":"X_res,y_res = oversampling.fit_sample(X,y)","86ea80ee":"y_res.value_counts()","08b93291":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X_res, y_res, test_size=0.3, random_state=40)\n","b549984e":"from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression()\n","75ede051":"model.fit(X_train,y_train)\n\ny_predict= model.predict(X_test)","da9a97d5":"from sklearn.metrics import classification_report, confusion_matrix","6b26e996":"print(confusion_matrix(y_test,y_predict))\nprint(classification_report(y_test,y_predict))","4a3a24c7":"a = model.predict([[8,6]])\n\nif a ==1 : \n    print(\"candidate is eligible for interview\")\n    \nelse:\n    print(\"candidate is not eligible for interview\")\n    ","99be73fb":"b = model.predict([[4,1]])\n\n\nif b == 1 : \n    print(\"candidate is eligible for interview\")\n    \nelse:\n    print(\"candidate is not eligible for interview\")\n","077a6edf":"import joblib","17c729f5":"joblib.dump(model,'Candidate_Selection')","2d3c96f7":"selection_model=joblib.load('Candidate_Selection')","edb31958":"c= selection_model.predict([[7,5]])\nif c == 1 : \n    print(\"candidate is eligible for interview\")\n    \nelse:\n    print(\"candidate is not eligible for interview\")\n","a3e70adb":"## 7.Saving the model\n\n**7.1 Importing joblib to save the model**","927252bd":"**7.2 Dumping the model in Candidate_Selection file**","fd0b2ab3":"**6.2 Predicting the Interview Eligibility for candidate with 4 Years work experience and German language level 1 (A1)**","bb396ae5":"**5.2 Testing Accuracy**","ff8bec73":"Dataset has no Null Values. It is comlete","531544bc":"**7.4 Predicting the Interview Eligibility for candidate with 7 Years work experience and German language level 5 (C1)**","d064bca3":"## Candidate_Selection_for_Interview\n\nIn this project I have used LogisticRegression for predicting the candidate is elgible for interview based on candidate's work experience and German Language level completed.I will use this model for complete deployment process. Therfore By the end of this project I have used Joblib to save this model in serialobject format","55919f80":"**3.4 Oversampling the datapoints to balance the dataset**","4f510224":"## 2. Preparing Dataframe ","2895322e":"## 3. Data cleaning\n\n**3.1 Checking the dataset for any null value**","13e6c914":"## 4. Model Training and Prediction\n\n**4.1 Creating Training and testing dataset**\n","6c6dd88a":"Class'0' = Candidate is not eligible for interview\n\nClass'1' = Candidate is eligible for interview\n\nAbove values show that data has imbalance as class'0' datapoints are high in number as as compared to class '1'","499ca688":"## 6. Predictions for External Inputs","1444a542":"## 5. Model Evaluation\n\n**5.1 Importing classification_report, confusion_matrix to predict the accuracy of model**","38189fe6":"**7.3 Loading the Candidate_Selection file for new predictions**","fa6632b8":"**4.3 Fitting the model and predicting the values for test dataset** ","8768e00e":"**4.2 Impoering LogisticRegression algorithm**","3de0723a":"## 1. Importing Libraries","348182c8":"**3.2 Distributing Dataset in the form of dependent and Independent variables**","ee478743":"**3.3 Checking the data for imbalance based on Target Feature 'Decision**","a6586a49":"**6.1 Predicting the Interview Eligibility for candidate with 8 Years work experience and German language level 6 (C2)** "}}