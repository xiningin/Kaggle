{"cell_type":{"b4efea96":"code","1814f4bc":"code","74820d2b":"code","e56dcd4d":"code","56ad96ab":"code","d650620c":"code","00609002":"code","985c4747":"code","0142638a":"code","062b6b26":"code","a74bd6a8":"code","7447ca2e":"code","99ef7557":"code","704b37ca":"code","88b5d4f4":"code","cfd2989c":"code","90a7a0ec":"code","93a4c659":"code","e6e28170":"code","4c565ca2":"code","1c6a29d3":"code","f2849cb6":"code","91368c1e":"code","3e1484e0":"code","37e4547c":"code","3a5be74a":"markdown","a5e6ce10":"markdown","99fc2f2b":"markdown"},"source":{"b4efea96":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1814f4bc":"df=pd.read_csv('..\/input\/covid19-global-forecasting-week-2\/train.csv')","74820d2b":"state=pd.get_dummies(df['Province_State'],drop_first=True)","e56dcd4d":"country=pd.get_dummies(df['Country_Region'],drop_first=True)\ndf_clean=pd.concat([df,state,country],axis=1)\ndf_clean.head()","56ad96ab":"df_clean.drop(['Id','Province_State','Country_Region'],axis=1,inplace=True)\ndf_clean['Date']=df_clean['Date'].apply(lambda x: x.replace(\"-\",\"\"))\ndf_clean.head()","d650620c":"df_clean['Date']=df_clean['Date'].astype(int)","00609002":"X=df_clean.drop(['ConfirmedCases','Fatalities'],axis=1)\ny_1=df_clean.iloc[:,1:2]\ny_2=df_clean.iloc[:,2:3]","985c4747":"from sklearn.tree import DecisionTreeRegressor\ntree_reg=DecisionTreeRegressor(random_state=42)\ntree_reg.fit(X,y_1)","0142638a":"from sklearn.tree import DecisionTreeRegressor\ntree_reg2=DecisionTreeRegressor(random_state=42)\ntree_reg2.fit(X,y_2)","062b6b26":"test=pd.read_csv('..\/input\/covid19-global-forecasting-week-2\/test.csv')\ntest.head()","a74bd6a8":"test_state=pd.get_dummies(test['Province_State'],drop_first=True)\ntest_ctry=pd.get_dummies(test['Country_Region'],drop_first=True)\ntest=pd.concat([test,test_state,test_ctry],axis=1)\ntest.head()","7447ca2e":"test.drop(['Province_State','ForecastId','Country_Region'],axis=1,inplace=True)\ntest['Date']=test['Date'].apply(lambda x: x.replace(\"-\",\"\"))\ntest['Date']=test['Date'].astype(int)\ntest.head()","99ef7557":"y_rand1=tree_reg.predict(test)\ny_rand1=pd.DataFrame(y_rand1)\ny_rand1.columns=['ConfirmedCases']\ny_rand1['ConfirmedCases']=y_rand1['ConfirmedCases'].astype(int)\ny_rand1.head()","704b37ca":"y_rand2=tree_reg2.predict(test)\ny_rand2=pd.DataFrame(y_rand2)\ny_rand2.columns=['Fatalities']\ny_rand2['Fatalities']=y_rand2['Fatalities'].astype(int)\ny_rand2.head()","88b5d4f4":"sub=pd.read_csv(\"..\/input\/covid19-global-forecasting-week-2\/submission.csv\")","cfd2989c":"sub.drop(['ConfirmedCases','Fatalities'],axis=1, inplace=True)\nfinal=pd.concat([sub,y_rand1,y_rand2],axis=1)\nfinal.head()","90a7a0ec":"final.to_csv('submission.csv',index=False)","93a4c659":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(X)  # Don't cheat - fit only on training data\nX = scaler.transform(X)\n ","e6e28170":"scaler.fit(test)  # Don't cheat - fit only on training data\ntest = scaler.transform(test)","4c565ca2":"from sklearn.tree import DecisionTreeRegressor\ntree_reg=DecisionTreeRegressor(random_state=42)\ntree_reg.fit(X,y_1)","1c6a29d3":"from sklearn.tree import DecisionTreeRegressor\ntree_reg2=DecisionTreeRegressor(random_state=42)\ntree_reg2.fit(X,y_2)","f2849cb6":"y_rand1=tree_reg.predict(test)\ny_rand1=pd.DataFrame(y_rand1)\ny_rand1.columns=['ConfirmedCases']\ny_rand1['ConfirmedCases']=y_rand1['ConfirmedCases'].astype(int)\ny_rand1.head()","91368c1e":"y_rand2=tree_reg2.predict(test)\ny_rand2=pd.DataFrame(y_rand2)\ny_rand2.columns=['Fatalities']\ny_rand2['Fatalities']=y_rand2['Fatalities'].astype(int)\ny_rand2.head()","3e1484e0":"\nsub=pd.read_csv(\"..\/input\/covid19-global-forecasting-week-2\/submission.csv\")\nsub.drop(['ConfirmedCases','Fatalities'],axis=1, inplace=True)\nfinal=pd.concat([sub,y_rand1,y_rand2],axis=1)\nfinal.head()","37e4547c":"final.to_csv('submission.csv',index=False)","3a5be74a":"# Data cleaning","a5e6ce10":"## Appling Scalling\n","99fc2f2b":"# Applying Logistic Regression"}}