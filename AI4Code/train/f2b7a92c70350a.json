{"cell_type":{"fe5c1e1e":"code","95ed2248":"code","c87b4eb8":"code","d504f137":"code","8033cbbd":"code","74bb27be":"code","c24f2f9a":"code","8e8a84ee":"code","1cdc0586":"code","bc5546f7":"code","071e6190":"code","31a8b284":"code","92092b0e":"code","8a39c174":"code","b80d0621":"code","5129b3ec":"code","d454fc1e":"code","20c433cf":"code","894b1bb1":"code","2521f9f7":"code","32a1b009":"code","ef9c5cf3":"code","6220675f":"code","c2a636c6":"code","22cc55a2":"code","e9ecaf1b":"code","6c16c387":"code","87144213":"code","17b1d90f":"code","8969ec7e":"code","52243554":"code","11425801":"code","78b10ad0":"code","83296210":"markdown","13d7cdea":"markdown","d55a771e":"markdown","a63c4081":"markdown","729fbf41":"markdown","b5d9028d":"markdown","35f98573":"markdown","603b251f":"markdown"},"source":{"fe5c1e1e":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_auc_score, accuracy_score\nimport matplotlib.pyplot as plt\nimport lightgbm as lgb\nimport numpy as np\nimport seaborn as sns\nimport os","95ed2248":"import warnings\nwarnings.filterwarnings(\"ignore\")","c87b4eb8":"df = pd.read_csv(\"..\/input\/bank-marketing\/bank-additional-full.csv\", delimiter=';')\ndf.head()","d504f137":"y= (df['y'] == 'yes')*1\ndf.drop('y', axis=1, inplace = True)","8033cbbd":"df.tail()","74bb27be":"df.info()","c24f2f9a":"df.columns","8e8a84ee":"print(df.head())","1cdc0586":"df.isnull().sum()","bc5546f7":"df.describe()","071e6190":"df['age'].unique()","31a8b284":"sns.distplot(df['age'], hist=True, kde=True, \n             bins=int(180\/5), color = 'blue',\n             hist_kws={'edgecolor':'black'})","92092b0e":"sns.countplot(x='duration',data=df)","8a39c174":"sns.countplot(x='cons.price.idx',data=df)","b80d0621":"sns.countplot(x='emp.var.rate',data=df)","5129b3ec":"sns.countplot(y='cons.conf.idx',data=df)","d454fc1e":"sns.countplot(x='euribor3m',data=df)","20c433cf":"sns.lmplot( x=\"age\", y=\"previous\", data=df, fit_reg=False, hue='emp.var.rate', legend=False)","894b1bb1":"sns.lmplot( x=\"age\", y=\"campaign\", data=df, fit_reg=False, hue='emp.var.rate', legend=False)","2521f9f7":"sns.lmplot( x=\"age\", y=\"cons.conf.idx\", data=df, fit_reg=False, hue='emp.var.rate', legend=False)","32a1b009":"sns.jointplot(x='campaign',y='age',data=df)","ef9c5cf3":"sns.stripplot(y='campaign',x='age',data=df,jitter=False)","6220675f":"plt.subplots(figsize=(12,12))\nsns.heatmap(df.corr(), annot=True)\nplt.show()","c2a636c6":"from sklearn.preprocessing import LabelEncoder\n\ncategorical_column = ['job', 'marital', 'education', 'default', 'housing', 'loan', 'contact', 'month',\n                      'day_of_week', 'poutcome']\n\nfor i in categorical_column:\n    le = LabelEncoder()\n    df[i] = le.fit_transform(df[i])\nprint(df.head())","22cc55a2":"df.drop('duration', inplace = True, axis=1)","e9ecaf1b":"\ndf_train, df_test, y_train, y_test = train_test_split(df, y, train_size = 0.7, test_size = 0.3)","6c16c387":"lgb_train = lgb.Dataset(data=df_train, label=y_train,  free_raw_data=False)","87144213":"# Categorical index\ncategorical_index = [1,2,3,4,5,6,7,8,9,13]\nprint('Categorical parametres: ' + str(df_train.columns[categorical_index].values))","17b1d90f":"#Creat Evaluation Dataset \nlgb_eval = lgb.Dataset(data=df_test, label=y_test, reference=lgb_train,  free_raw_data=False)\n\n# Determinate training parametres\nparams = {\n    'task': 'train',\n    'boosting_type': 'gbdt',\n    'objective': 'binary',\n    'metric': 'auc',\n    'num_leaves': 31,\n    'learning_rate': 0.05,\n    'verbose': -1\n}","8969ec7e":"\nevals_result={}\ngbm = lgb.train(params,\n                lgb_train,\n                valid_sets = lgb_eval,\n                categorical_feature = categorical_index,\n                num_boost_round= 150,\n                early_stopping_rounds= 25,\n                evals_result=evals_result)\n","52243554":"y_pred = gbm.predict(df_test, num_iteration=gbm.best_iteration)\n\nprint('The Best iteration: ', gbm.best_iteration)\nprint('roc_auc_score:', roc_auc_score(y_test, y_pred))\nprint('accuracy_score:', accuracy_score(y_test, ( y_pred>= 0.5)*1))","11425801":"ax = lgb.plot_metric(evals_result, metric='auc')\nax.set_title('Variation of the Curved Area According to Iteration')\nax.set_xlabel('\u0130teration')\nax.set_ylabel('roc_auc_score')\nax.legend_.remove()","78b10ad0":"ax = lgb.plot_importance(gbm, max_num_features=10)\nax.set_title('The values of Parametres')\nax.set_xlabel('Values')\nax.set_ylabel('Parametres')","83296210":"# 3. EDA","13d7cdea":"# 4. Categorical ----> N\u00fcmerical\n","d55a771e":"# 6. Determine training parametres","a63c4081":"# 1. Packages","729fbf41":"# 2.Data","b5d9028d":"# 7. Training Model","35f98573":"# 5. Split and Create Datasets for LightGBM","603b251f":"# 8. Prediction and Evaluation\n"}}