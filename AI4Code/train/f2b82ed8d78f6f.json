{"cell_type":{"7ef2dfc5":"code","7ec4e490":"code","7d26f96b":"code","7aed2904":"code","72c5605e":"code","450ecf24":"code","d62bded2":"code","516df07f":"code","daadba11":"code","6986f2b7":"code","7a29c5fe":"code","528007cf":"code","029b6cfe":"code","837c4594":"code","48851e99":"code","a7901e3d":"code","e85465a8":"code","f4f9b9dc":"code","d9626d95":"code","757f4fda":"code","fac037a0":"code","97a324d5":"code","d8242373":"code","8cd11c25":"code","81c43bee":"code","e74dc397":"code","d7fa691b":"code","46def304":"code","8d30f67e":"code","ae79f67b":"code","4e1bf64d":"code","153fb714":"code","6fecb87f":"code","c45323df":"code","ec669020":"code","a7bbdcc6":"code","8d69994e":"code","0df537c7":"code","ce059c03":"code","1384f1cc":"code","17421100":"code","6425eee6":"code","d608e466":"code","4e6b7050":"code","8ca18ecc":"code","3dc38780":"code","bf7640ad":"code","954ab2c6":"code","111a029d":"code","82339e9e":"code","341c4871":"code","fdfe6f4d":"code","dac32ee8":"code","9da88545":"code","dab34be4":"code","08fb56a8":"markdown","8990521a":"markdown","c7e67b85":"markdown","fe5f03b9":"markdown","74de3c11":"markdown","10445d47":"markdown","569b586b":"markdown","142f287f":"markdown","05c617fe":"markdown","7976bff5":"markdown","87aef461":"markdown","6ae48539":"markdown","bae31e12":"markdown"},"source":{"7ef2dfc5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n# Bu Python 3 ortam\u0131, y\u00fckl\u00fc bir\u00e7ok yard\u0131mc\u0131 analiz kitapl\u0131\u011f\u0131 ile birlikte gelir\n# Kaggle\/python liman i\u015f\u00e7isi g\u00f6r\u00fcnt\u00fcs\u00fc ile tan\u0131mlan\u0131r: https:\/\/github.com\/kaggle\/docker-python\n# \u00d6rne\u011fin, y\u00fcklenebilecek birka\u00e7 faydal\u0131 paket\n\nimport numpy as np # linear algebra lineer Cebir\nimport pandas as pd # data processing(veri i\u015fleme), CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory. (Giri\u015f veri dosyalar\u0131 \"..\/input\/\" dizininde mevcuttur.)\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory ( \u00d6rne\u011fin, bunu \u00e7al\u0131\u015ft\u0131rmak (\u00e7al\u0131\u015ft\u0131r'\u0131 t\u0131klatarak veya Shift+Enter tu\u015flar\u0131na basarak) giri\u015f dizinindeki dosyalar\u0131 listeleyecektir.)\n\nimport warnings\nwarnings.filterwarnings('ignore') \n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output. (Ge\u00e7erli dizine yazd\u0131\u011f\u0131n\u0131z t\u00fcm sonu\u00e7lar \u00e7\u0131kt\u0131 olarak kaydedilir.)","7ec4e490":"# Read datas (veriyi oku)\nmedian_house_hold_in_come = pd.read_csv('..\/input\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv('..\/input\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv('..\/input\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\nshare_race_city = pd.read_csv('..\/input\/ShareRaceByCity.csv', encoding=\"windows-1252\")\nkill = pd.read_csv('..\/input\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","7d26f96b":"percentage_people_below_poverty_level.head()","7aed2904":"percentage_people_below_poverty_level.info()","72c5605e":"percentage_people_below_poverty_level.poverty_rate.value_counts()","450ecf24":"percentage_people_below_poverty_level['Geographic Area'].unique()","d62bded2":"# Poverty rate of each state ( Her eyaletin  yoksulluk oran\u0131)\n\npercentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace = True) # de\u011feri\"-\" olanlar\u0131n yerine 0.0 yaz ve de\u011fi\u015fkenin i\u00e7ine ekle\npercentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float) #karakter tipi string olan yoksulluk oranlar\u0131n\u0131 float veri tipine d\u00f6n\u00fc\u015ft\u00fcr\narea_list = list(percentage_people_below_poverty_level['Geographic Area'].unique()) # b\u00fct\u00fcn eyaletlerin adlar\u0131n\u0131 liste haline getir # fetch list with names of all states\narea_poverty_ratio =[] # bir liste olu\u015ftur\nfor i in area_list:\n        x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n# geograpic areadaki isimleri tek tek al \n        area_poverty_rate = sum(x.poverty_rate)\/len(x)\n # buldu\u011fun isimlerin ortalamas\u0131n\u0131 al\n        area_poverty_ratio.append(area_poverty_rate)# buldu\u011fun ortalamalar\u0131 olu\u015fturdu\u011fun diziye ekle\ndata = pd.DataFrame({'area_list': area_list,'area_poverty_ratio':area_poverty_ratio})\n   # yeni bir dataframe olu\u015fturup i\u00e7inde area_list ve area_poverty_ratio ad\u0131nda iki tane column(s\u00fctun) olu\u015fturuyoruz\nnew_index = (data[\"area_poverty_ratio\"].sort_values(ascending = False)).index.values\n    # azalan bir \u015fekilde bana eyaletlerdeki yoksulluk oran\u0131n\u0131 s\u0131rala\nsorted_data = data.reindex(new_index)\n    \n    #visualization\nplt.figure(figsize= (15,10))\nsns.barplot(x=sorted_data[\"area_list\"], y = sorted_data[\"area_poverty_ratio\"])\nplt.xticks(rotation = 45)\nplt.xlabel(\"States\")\nplt.ylabel(\"Poverty Rate\")\nplt.title(\"Poverty Rate Given States\")\n\n","516df07f":"kill.head()","daadba11":"kill.name.value_counts()\n","6986f2b7":"# Most common 15 Name or Surname of killed people  (en yayg\u0131n \u00f6ld\u00fcr\u00fclen 15 ki\u015finin ad\u0131 ve soyad\u0131)\n\nseparate = kill.name[kill.name !=\"TK TK\"].str.split()  #TK TK d\u0131\u015f\u0131ndaki b\u00fct\u00fcn isimleri al #Get all first and last names except \"TK TK\"\na,b = zip(*separate) # al\u0131nan  isimleri ay\u0131r\nname_list = a+b #listele\nname_count = Counter(name_list) #listedeki isimleri say\nmost_common_names =name_count.most_common(15) # en \u00e7ok s\u0131ralanan 15 isim\nx,y =zip(*most_common_names) #ay\u0131r\nx,y = list(x), list(y)\n\nplt.figure(figsize=(15,10))\nax = sns.barplot(x=x, y=y, palette =sns.cubehelix_palette(len(x))) # bu method renklerin farkl\u0131 ama birbiri ile uyumlu olarak uzunlu\u011fa g\u00f6re s\u0131ralanmas\u0131n\u0131 sa\u011flar\nplt.xlabel(\"Name or killed people\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Most Common 15 Name Of Killed People \")\n\n","7a29c5fe":"percent_over_25_completed_highSchool.head()","528007cf":"percent_over_25_completed_highSchool.info()","029b6cfe":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()","837c4594":"# High school graduation rate of the population that is older than 25 in states (Eyaletlerde 25 ya\u015f \u00fcst\u00fc n\u00fcfusun lise mezuniyet oran\u0131)\npercent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True) #verinin i\u00e7indeki \"-\" yerine \"0.0\" yaz \npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list = list(percent_over_25_completed_highSchool['Geographic Area'].unique()) # eyalet isimlerini al\narea_highschool = []# bir dizi olu\u015ftur\nfor i in area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i] #isimleri tek tek yaz\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x) # yazd\u0131\u011f\u0131n isimlerin  ortalamas\u0131n\u0131 al\n    area_highschool.append(area_highschool_rate)# olu\u015fturdu\u011fun diziye ekle\n# sorting (s\u0131rala)\ndata = pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\nnew_index = (data['area_highschool_ratio'].sort_values(ascending=True)).index.values # datay\u0131 artana g\u00f6re s\u0131rala ve indexini bul\nsorted_data2 = data.reindex(new_index) #olu\u015fturdu\u011fum datan\u0131n hepsini s\u0131rala\n# visualization\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")","48851e99":"share_race_city.head()","a7901e3d":"share_race_city.info()","e85465a8":"# Percentage of state's population according to races that are black,white,native american, asian and hispanic (# Siyah, beyaz, k\u0131z\u0131lderili, asyal\u0131 ve \u0130spanyol \u0131rklar\u0131na g\u00f6re eyalet n\u00fcfusunun y\u00fczdesi)\nshare_race_city.replace(['-'],0.0,inplace = True) \nshare_race_city.replace(['(X)'],0.0,inplace = True)\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\narea_list = list(share_race_city['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\n\n    \nfor i in area_list:\n    x = share_race_city[share_race_city['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black) \/ len(x))\n    share_native_american.append(sum(x.share_native_american) \/ len(x))\n    share_asian.append(sum(x.share_asian) \/ len(x))\n    share_hispanic.append(sum(x.share_hispanic) \/ len(x))\n\n# visualization\nf,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=share_white,y=area_list,color='green',alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='red',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")","f4f9b9dc":"data.columns","d9626d95":"# high school graduation rate vs Poverty rate of each state  (lise mezuniyet oran\u0131 vs her eyaletin yoksulluk oran\u0131)\nsorted_data['area_poverty_ratio'] = sorted_data['area_poverty_ratio']\/max( sorted_data['area_poverty_ratio'])   # her iki datay\u0131 0 ile 1 aras\u0131na \u00e7ekip normalle\u015ftiriyorum\nsorted_data2['area_highschool_ratio'] = sorted_data2['area_highschool_ratio']\/max( sorted_data2['area_highschool_ratio'])\ndata = pd.concat([sorted_data,sorted_data2['area_highschool_ratio']],axis=1)  # datalar\u0131 yan yana birle\u015ftiriyorum\ndata.sort_values('area_poverty_ratio',inplace=True)\n\n\n# visualize\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='area_list',y='area_poverty_ratio',data=data,color='lime',alpha=0.8) #seabornun \u00f6zelli\u011fi olu\u015fturdu\u011fun datay\u0131 ger\u00e7ek datan\u0131n i\u00e7ine e\u015fitleyebilir aratabilir \nsns.pointplot(x='area_list',y='area_highschool_ratio',data=data,color='red',alpha=0.8)\nplt.text(40,0.6,'high school graduate ratio',color='red',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'poverty ratio',color='lime',fontsize = 18,style = 'italic')\nplt.xlabel('States',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('High School Graduate  VS  Poverty Rate',fontsize = 20,color='blue')\nplt.grid()\n","757f4fda":"data.head()","fac037a0":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# joint kernel density\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables \n# Show the joint distribution using kernel density estimation \n\n# Lise mezuniyet oran\u0131n\u0131n g\u00f6rselle\u015ftirilmesi, her eyaletin  Yoksulluk oran\u0131na kar\u015f\u0131 seaborn kodu\n# ortak \u00e7ekirdek yo\u011funlu\u011fu\n#pearsonr= 1 ise pozitif korelasyon, -1 ise negatif korelasyon vard\u0131r.\n# S\u0131f\u0131r ise de\u011fi\u015fkenler aras\u0131nda korelasyon yoktur.\n# \u00c7ekirdek yo\u011funlu\u011fu tahminini kullanarak ortak da\u011f\u0131l\u0131m\u0131 g\u00f6ster\ng = sns.jointplot(data.area_poverty_ratio, data.area_highschool_ratio, kind=\"kde\", size=7) #kde d\u0131\u015ftaki \u00e7izim\nplt.savefig('graph.png')\nplt.show()","97a324d5":"data.head()","d8242373":"# you can change parameters of joint plot\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n# Different usage of parameters but same plot with previous one\n\n# joint plot parametrelerini de\u011fi\u015ftirebilirsiniz\n# t\u00fcr : { \u201cda\u011f\u0131l\u0131m\u201d | \"reg\" | \u201cikamet\u201d | \u201ckde\u201d | \"alt\u0131gen\" }\n# Parametrelerin farkl\u0131 kullan\u0131m\u0131 ancak \u00f6ncekiyle ayn\u0131 plot\ng = sns.jointplot(\"area_poverty_ratio\", \"area_highschool_ratio\", data=data,size=5, ratio=3, color=\"r\")","8cd11c25":"kill.race.head(15) # ilk 15 indexteki \u0131rklar\u0131 g\u00f6ster","81c43bee":"kill.race.value_counts() #hangi \u0131rktan ka\u00e7 tane \u00f6l\u00fcm oldu\u011funu g\u00f6sterir","e74dc397":"# Race rates according in kill data  (\u0131rklara g\u00f6re \u00f6l\u00fcm oranlar\u0131)\n\nkill.race.dropna(inplace = True)\nlabels = kill.race.value_counts().index\ncolors = ['grey','blue','red','yellow','green','brown']\nexplode = [0,0,0,0,0,0]\nsizes = kill.race.value_counts().values # \u00f6l\u00fcm say\u0131s\u0131na g\u00f6re boyutland\u0131rmaya yard\u0131mc\u0131 olur\n\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%') # %1.1f%% say\u0131y\u0131 ondal\u0131kl\u0131 g\u00f6stermek i\u00e7in kullan\u0131l\u0131r\nplt.title('Killed People According to Races',color = 'blue',fontsize = 15)#Irklara G\u00f6re \u00d6ld\u00fcr\u00fclenler  (Killed People According to Races)","d7fa691b":"data.head()","46def304":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code (lise mezuniyet oran\u0131n\u0131n fakirlik oran\u0131 say\u0131sana g\u00f6re kar\u015f\u0131la\u015ft\u0131r\u0131lmas\u0131)\n# lmplot \n# Show the results of a linear regression within each dataset (her veri  k\u00fcmesindeki do\u011frusal regresyonun sonucunu g\u00f6ster)\n#makine \u00f6\u011frenmesi ile il\u015fkili bir g\u00f6rselle\u015ftirme metodu ortadan ge\u00e7en data en do\u011fru sonucu g\u00f6stermektedir\nsns.lmplot(x=\"area_poverty_ratio\", y=\"area_highschool_ratio\", data=data)\nplt.show()","8d30f67e":"data.head()","ae79f67b":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code (lise mezuniyet oran\u0131n\u0131n fakirlik oran\u0131 say\u0131sana g\u00f6re kar\u015f\u0131la\u015ft\u0131r\u0131lmas\u0131)\n# cubehelix plot k\u00fcp sarmal\u0131\nsns.kdeplot(data.area_poverty_ratio, data.area_highschool_ratio, shade=True, cut=3) # dhade = g\u00f6lge cut = b\u00fcy\u00fckl\u00fc\u011f\u00fc de\u011fi\u015ftirir\nplt.show()","4e1bf64d":"data.head()","153fb714":"# Show each distribution with both violins and points (Her da\u011f\u0131l\u0131m\u0131 hem kemanlarla hem de rakamlarla g\u00f6sterir)\n#di\u011ferlerinin aksine koralesyon yerine datanan\u0131n i\u00e7indeki \u00f6zelliklerin da\u011f\u0131l\u0131m\u0131na bakar\n# Use cubehelix to get a custom sequential palette (# \u00d6zel s\u0131ral\u0131 bir palet elde etmek i\u00e7in cubehelix kullan\u0131r) \n#istatistikte kullan\u0131l\u0131r\npal= sns.cubehelix_palette\npal = sns.cubehelix_palette(2, rot=-.5, dark=.3)\nsns.violinplot(data=data, palette=pal, inner=\"points\")\nplt.show()","6fecb87f":"data.corr()","c45323df":"#correlation map # iki veri aras\u0131ndaki korelasyonu bulmak i\u00e7in kullan\u0131l\u0131r.\n# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code (lise mezuniyet oran\u0131n\u0131n fakirlik oran\u0131 say\u0131sana g\u00f6re kar\u015f\u0131la\u015ft\u0131r\u0131lmas\u0131)\nf,ax = plt.subplots(figsize=(5, 5))\nsns.heatmap(data.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax) #fmt ondal\u0131ktan sonra yaz\u0131lacak rakam say\u0131s\u0131 annot = True g\u00f6rselin \u00fczerinde say\u0131lar\u0131n g\u00f6r\u00fcnmesini sa\u011flar\nplt.show()","ec669020":"kill.head()","a7bbdcc6":"kill.manner_of_death.unique()","8d69994e":"# manner of death(olum sekli) : ates edilerek, ates edilerek ve sok tabancasiyla\n# gender cinsiyet\n# age: yas\n# Plot the orbital period with horizontal boxes (Y\u00f6r\u00fcnge periyodunu yatay kutularla \u00e7izin)\nsns.boxplot(x=\"gender\", y=\"age\", hue=\"manner_of_death\", data=kill, palette=\"PRGn\")\nplt.show()","0df537c7":"kill.head()","ce059c03":"# swarm plot\n# manner of death(olum sekli) : ates edilerek, ates edilerek ve sok tabancasiyla\n# gender cinsiyet\n# age: yas\n# b\u00fcy\u00fck datasetleri i\u00e7in kullan\u0131lmas\u0131 uygun de\u011fildir\nsns.swarmplot(x=\"gender\", y=\"age\",hue=\"manner_of_death\", data=kill)\nplt.show()","1384f1cc":"data.head()","17421100":"# pair plot;\nsns.pairplot(data)\nplt.show()","6425eee6":"kill.gender.value_counts()","d608e466":"kill.head()","4e6b7050":"# kill properties (\u00f6zellikler)\n# Manner of death(\u00f6l\u00fcm \u015fekli)\nsns.countplot(kill.gender)\n#sns.countplot(kill.manner_of_death)\nplt.title(\"gender\",color = 'blue',fontsize=15)","8ca18ecc":"# hangi silah t\u00fcrlerinden ka\u00e7ar kez kullan\u0131ld\u0131\u011f\u0131n\u0131 g\u00f6sterir\narmed = kill.armed.value_counts()\nprint(armed)","3dc38780":"# killing weapon ( \u00f6ld\u00fcrme silah t\u00fcr\u00fc)\n\narmed = kill.armed.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\nplt.title('Kill weapon',color = 'blue',fontsize=15)","bf7640ad":"# age of killed people (\u00f6ld\u00fcr\u00fclen insanlar\u0131n ya\u015f\u0131)\n\nabove25 =['above25' if i >= 25 else 'below25' for i in kill.age]\ndf = pd.DataFrame({'age':above25})\nsns.countplot(x=df.age)\nplt.ylabel('Number of Killed People')\nplt.title('Age of killed people',color = 'blue',fontsize=15)","954ab2c6":"# Race of killed people (\u00d6ld\u00fcr\u00fclen insanlar\u0131n \u0131rk\u0131)\nsns.countplot(data=kill, x='race')\nplt.title('Race of killed people',color = 'blue',fontsize=15)","111a029d":"# Most dangerous cities (en tehlikeli \u015fehirler)\ncity = kill.city.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=45)\nplt.title('Most dangerous cities',color = 'blue',fontsize=15)","82339e9e":"# most dangerous states ( en tehlikeli eyaletler)\nstate = kill.state.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\nplt.title('Most dangerous state',color = 'blue',fontsize=15)","341c4871":"# Having mental ilness or not for killed people (\u00f6ld\u00fcr\u00fclen insanlar\u0131n ak\u0131l hastas\u0131 olup olmamas\u0131)\nsns.countplot(kill.signs_of_mental_illness)\nplt.xlabel('Mental illness')\nplt.ylabel('Number of Mental illness')\nplt.title('Having mental illness or not',color = 'blue', fontsize = 15)","fdfe6f4d":"# Threat types (Tehtid t\u00fcrleri)\nsns.countplot(kill.threat_level)\nplt.xlabel('Threat Types')\nplt.title('Threat types',color = 'blue', fontsize = 15)","dac32ee8":"# Flee types (Ka\u00e7\u0131\u015f t\u00fcrleri)\nsns.countplot(kill.flee)\nplt.xlabel('Flee Types')\nplt.title('Flee types',color = 'blue', fontsize = 15)","9da88545":"# Having body cameras or not for police( Polislerin v\u00fccut kameras\u0131na sahip olup olmamalar\u0131)\nsns.countplot(kill.body_camera)\nplt.xlabel('Having Body Cameras')\nplt.title('Having body cameras or not on Police',color = 'blue',fontsize = 15)","dab34be4":"# Kill numbers from states in kill data (kill data setinden  gelen \u00f6ld\u00fcrme say\u0131lar\u0131)\nsta = kill.state.value_counts().index[:10]\nsns.barplot(x=sta,y = kill.state.value_counts().values[:10])\nplt.title('Kill Numbers from States',color = 'blue',fontsize=15)","08fb56a8":"<a id=\"3\"><\/a> \n## Joint Plot","8990521a":"<a id=\"1\"><\/a> \n## Bar Plot","c7e67b85":"<a id=\"9\"><\/a> \n## Box Plot","fe5f03b9":"<a id=\"12\"><\/a> \n## Count Plot","74de3c11":"<a id=\"8\"><\/a> \n## Heatmap","10445d47":"<a id=\"5\"><\/a> \n## Lm Plot","569b586b":"<a id=\"2\"><\/a>\n## Point Plot","142f287f":"# INTRODUCTION\n1. Read datas ( Verileri oku)\n\n1. Poverty rate of each state (Her eyaletin yoksulluk oran\u0131)\n\n1. Most common 15 Name or Surname of killed people  (En yayg\u0131n 15 \u00d6ld\u00fcr\u00fclen ki\u015finin Ad\u0131 veya Soyad\u0131)\n\n1. High school graduation rate of the population that is older than 25 in states (Eyaletlerde 25 ya\u015f \u00fcst\u00fc n\u00fcfusun lise mezuniyet oran\u0131)\n\n1. Percentage of state's population according to races that are black,white,native american, asian and hispanic(Siyah, beyaz, k\u0131z\u0131lderili, asyal\u0131 ve \u0130spanyol \u0131rklar\u0131na g\u00f6re eyalet n\u00fcfusunun y\u00fczdesi)\n\n1. High school graduation rate vs Poverty rate of each state(Lise mezuniyet oran\u0131 ve her eyaletin Yoksulluk oran\u0131)\n1. Kill properties (\u00f6ld\u00fcrme \u00f6zellikleri)\n    * Manner of death (\u00d6l\u00fcm \u015fekli)\n    * Kill weapon(Silahla \u00f6ld\u00fcr\u00fclen)\n    * Age of killed people ( \u00d6ld\u00fcr\u00fclen insanlar\u0131n ya\u015f\u0131)\n    * Race of killed people ( \u00d6ld\u00fcr\u00fclen insanlar\u0131n ya\u015f\u0131)\n    * Most dangerous cities(En tehlikeli \u015fehirler)\n    * Most dangerous states(En tehlikeli durumlar)\n    * Having mental ilness or not for killed people(\u00d6ld\u00fcr\u00fclen ki\u015finin ak\u0131l hastas\u0131 olup olmamas\u0131)\n    * Threat types (Tehdit t\u00fcrleri)\n    * Flee types (Ka\u00e7\u0131\u015f T\u00fcrleri)\n    * Having body cameras or not for police (Polis i\u00e7in v\u00fccut kameralar\u0131n\u0131n olmas\u0131 veya olmamas\u0131)\n1. Race rates according to states in kill data (Race rates according to states in kill data)\n1. Kill numbers from states in kill data (\u00d6ld\u00fcrme verilerinde eyaletlerden gelen say\u0131lar)\n1. Plotly Visualization Tutorial: https:\/\/www.kaggle.com\/kanncaa1\/plotly-tutorial-for-beginners\n<br>\n<br>\nPlot Contents:\n* [Bar Plot](#1)\n* [Point Plot](#2)\n* [Joint Plot](#3)\n* [Pie Chart](#4)\n* [Lm Plot](#5)\n* [Kde Plot](#6)\n* [Violin Plot](#7)\n* [Heatmap](#8)\n* [Box Plot](#9)\n* [Swarm Plot](#10)\n* [Pair Plot](#11)\n* [Count Plot](#12)\n    \n","05c617fe":"<a id=\"6\"><\/a> \n## Kde Plot (kernel denstiestination plot)","7976bff5":"<a id=\"7\"><\/a> \n## Violin Plot","87aef461":"<a id=\"11\"><\/a> \n## Pair Plot","6ae48539":"<a id=\"10\"><\/a> \n## Swarm Plot","bae31e12":"<a id=\"4\"><\/a> \n## Pie Chart"}}