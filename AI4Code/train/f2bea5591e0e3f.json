{"cell_type":{"faa8f5b9":"code","7cc20d06":"code","a35165f2":"code","e3525ce7":"code","2e042890":"code","463a7a44":"code","096766c3":"code","18831920":"code","e59fa86f":"code","55ec020d":"code","c82cb5ee":"code","91c18754":"code","e0107913":"code","8b394665":"code","9024551b":"code","3bdaa6b1":"code","325885dc":"code","3ccab812":"code","90b50fa8":"code","6481497a":"code","0716f7e3":"code","93cb8eb6":"code","5a33770e":"code","0b852243":"code","ea2dd1bf":"code","c3a9fdec":"code","45f6469c":"code","8a0a546c":"code","dd83776a":"code","e778dc2f":"code","d17e6060":"code","6b9f19f6":"code","c7b34103":"code","0f4943c4":"code","806abcd8":"code","b7a2efcc":"code","2795bb6d":"code","6fb08040":"code","7372f3b2":"code","217a7ba6":"code","7e6e0ce0":"code","f60c47b6":"code","43244ec4":"code","4a2222e5":"code","bfd3b6ad":"code","0a3d721d":"code","31c0a2d1":"code","429b2609":"code","79ed5dd5":"code","3b0ea169":"code","13cd9b25":"code","234a1456":"code","b33b7e8b":"code","55358725":"code","baacad00":"code","487b9a56":"code","df91bc78":"code","5062e61d":"code","35d0e5ef":"markdown","ea3aad4c":"markdown","7dc6b56f":"markdown","466bc2e3":"markdown","5ecef094":"markdown","0163fed0":"markdown","f5a4d87f":"markdown"},"source":{"faa8f5b9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n%matplotlib inline","7cc20d06":"my_filepath = \"..\/input\/breast-cancer-csv\/breastCancer.csv\"","a35165f2":"my_data=pd.read_csv(\"..\/input\/breast-cancer-csv\/breastCancer.csv\")","e3525ce7":"my_data.head()","2e042890":"my_data['class'].value_counts()","463a7a44":"my_data.shape","096766c3":"my_data.dtypes","18831920":"my_data['bare_nucleoli']","e59fa86f":"my_data[my_data['bare_nucleoli']=='?']","55ec020d":"my_data[my_data['bare_nucleoli']=='?'].sum()","c82cb5ee":"digits_in_bare_nucleoli=my_data.bare_nucleoli.str.isdigit()","91c18754":"digits_in_bare_nucleoli","e0107913":"my_df=my_data.replace('?',np.nan)","8b394665":"my_df.bare_nucleoli","9024551b":"my_df.median()","3bdaa6b1":"my_df.describe","325885dc":"my_df=my_df.fillna(my_df.median())","3ccab812":"my_df.bare_nucleoli","90b50fa8":"my_df.dtypes","6481497a":"my_df['bare_nucleoli']=my_df['bare_nucleoli'].astype('int64')","0716f7e3":"my_df.dtypes","93cb8eb6":"my_df.head()","5a33770e":"my_df.drop('id',axis=1,inplace=True)","0b852243":"my_df.head()","ea2dd1bf":"my_df.describe().T","c3a9fdec":"import seaborn as sns","45f6469c":"sns.distplot(my_df['class'])","8a0a546c":"my_df.hist(bins=20, figsize=(40,40),layout=(6,3));","dd83776a":"plt.figure(figsize=(25,20))\nsns.boxplot(data=my_df, orient='h')","e778dc2f":"my_df.corr()","d17e6060":"plt.figure(figsize=(40,20))\n\nsns.heatmap(my_df.corr(), vmax=1, square=True, annot=True,cmap='viridis')\nplt.title('Correlation Between Different Attributes')\nplt.show()","6b9f19f6":"try:\n    sns.distplot(my_df)\nexcept RuntimeError as re:\n    if str(re).startswith(\"Selected KDE bandwidth is 0. Cannot estimate density.\"):\n        sns.distplot(my_df, kde_kws={'bw': 0.1})\n    else:\n        raise re","c7b34103":"try:\n    sns.pairplot(my_df)\nexcept RuntimeError as re:\n    if str(re).startswith(\"Selected KDE bandwidth is 0. Cannot estimate density.\"):\n        sns.pair(my_df, kde_kws={'bw': 0.1})\n    else:\n        raise re","0f4943c4":"my_df.head()","806abcd8":"X=my_df.drop('class',axis=1)\ny=my_df['class']","b7a2efcc":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.30,random_state=1)","2795bb6d":"from sklearn.neighbors import KNeighborsClassifier","6fb08040":"KNN=KNeighborsClassifier(n_neighbors=5, weights='distance')","7372f3b2":"KNN.fit(X_train,y_train)","217a7ba6":"predicted_1=KNN.predict(X_test)\npredicted_1","7e6e0ce0":"from scipy.stats import zscore","f60c47b6":"print(\"KNeighborsClassifier Algorithm has predicted {0:2g}%\".format(KNN.score(X_test,y_test)*100))","43244ec4":"from sklearn.svm import SVC","4a2222e5":"svc=SVC(gamma=0.025, C=3)\nsvc.fit(X_train,y_train)","bfd3b6ad":"prediction_2=svc.predict(X_test)\nprediction_2","0a3d721d":"print(\"Support Vector Machine Algorithm has predicted {0:2g}%\".format(svc.score(X_test,y_test)*100))","31c0a2d1":"Knn_Predictions=pd.DataFrame(predicted_1)\nSvc_Predictions=pd.DataFrame(prediction_2)","429b2609":"df_new=pd.concat([Knn_Predictions,Svc_Predictions],axis=1)","79ed5dd5":"df_new.columns=[['Knn_Predictions','Svc_Predictions']]\ndf_new","3b0ea169":"from sklearn.metrics import classification_report","13cd9b25":"print('KNN Classification Report')\n\nprint('>>>'*10)\n\nprint(classification_report(y_test,predicted_1))","234a1456":"print('SVC Classification Report')\n\nprint('>>>'*10)\n\nprint(classification_report(y_test,prediction_2))","b33b7e8b":"!pip install lazypredict","55358725":"import lazypredict\nfrom lazypredict.Supervised import LazyClassifier","baacad00":"data = my_df\nX=my_df.drop('class',axis=1)\ny=my_df['class']\nX_train, X_test, y_train, y_test = train_test_split(X, y,test_size=.3,random_state =1)\nclf = LazyClassifier(verbose=0,ignore_warnings=True, custom_metric=None)\nmodels,predictions = clf.fit(X_train, X_test, y_train, y_test)\nmodels","487b9a56":"print('Top 10 Performing Models')\nprint('>>>'*10)\nmodels.head(10)","df91bc78":"from sklearn import metrics\n\nprint('KNN Confusion Matrix')\n\ncm=metrics.confusion_matrix(y_test,predicted_1, labels=[2,4])\n\ndf_cm=pd.DataFrame(cm, index=[i for i in [2,4]],columns=[i for i in ['Predict M','predict B']])\n\nplt.figure(figsize=(10,8))\nsns.heatmap(df_cm, annot=True)","5062e61d":"from sklearn import metrics\n\nprint('SVC Confusion Matrix')\n\ncm=metrics.confusion_matrix(y_test,prediction_2, labels=[2,4])\n\ndf_cm=pd.DataFrame(cm, index=[i for i in [2,4]],columns=[i for i in ['Predict M','predict B']])\n\nplt.figure(figsize=(10,8))\nsns.heatmap(df_cm, annot=True)","35d0e5ef":"**KNeighborsClassifier**","ea3aad4c":"**Building Our Model**","7dc6b56f":"**Support Vector Machine**","466bc2e3":"**Data Pre-processing**","5ecef094":"**Wisconsin Breast Cancer Detection with KNN, SVM & Lazy Predict(All-rounder Python Library)**\n\nUCI data repository\n\nKaggle data repository\n\nAttribute Information:\n\nSample code number: id number Clump Thickness: 1 - 10 Uniformity of Cell Size: 1 - 10 Uniformity of Cell Shape: 1 - 10 Marginal Adhesion: 1 - 10 Single Epithelial Cell Size: 1 - 10 Bare Nuclei: 1 - 10 Bland Chromatin: 1 - 10 Normal Nucleoli: 1 - 10 Mitoses: 1 - 10 Class: (2 for benign, 4 for malignant) Malignant==> Cancerous\n\nBenign==> Not Cancerous (Healthy)\n\nBackground\n\nAll of our bodies are composed of cells. The human body has about 100 trillion cells within it. And usually those cells behave in a certain way. However, occasionally, one of these 100 trillion cells, behave in a different way and keeps dividing and pushes the other cells around it out of the way. That cell stops observing the rules of the tissue within which it is located and begins to move out of its normal position and starts invading into the tissues around it and sometimes entering the bloodstream and becoming is called a metastasis.\n\nIn summary, as we grow older,throughout a lifetime, we go through this knid of situation where a particular kind of gene is mutated where the protein that it makes is abnormal and drives the cell to behave in a different way that we call cancer.\n\nThis is what Dr. WIlliam H. Wolberg was observing and put together this dataset.\n\nCan we predict whether a cell is Malignant or Benign?\n\n**Let's start!!!****","0163fed0":"**Let's try Lazy Predict The All-rounder!**","f5a4d87f":"**Exploratory Data Analysis**"}}