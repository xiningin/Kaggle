{"cell_type":{"4ee95b44":"code","45af677e":"code","a6e686d8":"code","db8cff8d":"code","207a6665":"code","7eae090a":"code","d5b66843":"code","23955e13":"code","fc5c5e3a":"code","79e947b2":"code","1f27afbe":"code","dc1344da":"code","91b9c73b":"code","80cbdfdf":"code","3f698cc7":"code","06e8b7ab":"code","1d170a6b":"code","f4768170":"markdown","6b3e8059":"markdown","98a9fb9a":"markdown","5cae6a8a":"markdown","6f6bb6eb":"markdown","313f5858":"markdown","8cd6c4f1":"markdown"},"source":{"4ee95b44":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd","45af677e":"df=pd.read_csv('..\/input\/500_Person_Gender_Height_Weight_Index.csv')\nprint(df.sample(frac=0.1)) # this will print only 10% of total data ie: 10%  of df","a6e686d8":"df=pd.get_dummies(df)\nprint(df)\n","db8cff8d":"X=df.iloc[:,[0,1,3,4]].values\nY=df.iloc[:,2].values","207a6665":"X_nu=df[[\"Height\",\"Weight\",\"Index\"]]\n\nX_nu.corr()\n\nX_nu.hist(bins=50)","7eae090a":"plt.scatter(X_nu.Index,Y,color=\"g\")\nplt.grid()","d5b66843":"plt.scatter(X_nu.Weight,Y,color=\"r\")\nplt.grid()","23955e13":"plt.scatter(X_nu.Height,Y,color=\"teal\")\nplt.grid()","fc5c5e3a":"X_train=X[:400]\nX_test=X[400:]\n\nY_train=Y[:400]\nY_test=Y[400:]","79e947b2":"\n\nfrom sklearn.linear_model import LinearRegression\nteacher=LinearRegression()\nlearner=teacher.fit(X_train,Y_train)","1f27afbe":"\nYp=learner.predict(X_test)\nc=learner.intercept_\nm=learner.coef_\nprint(\"c is {}  \\n m is {}  \\n Yp is {}\".format(c,m,Yp))\n","dc1344da":"\nxlist=list(X_train)\nylist=list(Y_train)\nyplist=list(Yp)\n","91b9c73b":"\nmytable=pd.DataFrame({\"input\":xlist,\"out\":ylist})\nprint(mytable)\n","80cbdfdf":"from sklearn.metrics import mean_squared_error,accuracy_score\nError=mean_squared_error(Yp,Y_test)\nnp.sqrt(Error)","3f698cc7":"\nimport seaborn as sns\nsns.barplot(x=Y_test,y=Yp,data=df)","06e8b7ab":"\ny_pred_cls=np.zeros_like(Yp)\ny_pred_cls[Yp>2.5]=1\n\ny_test_cls=np.zeros_like(Yp)\ny_test_cls[Y_test>2.5]=1","1d170a6b":"print(accuracy_score(y_test_cls,y_pred_cls))\n","f4768170":"**Fitting to our model**","6b3e8059":"Importing datasets","98a9fb9a":"List conversion due to data type","5cae6a8a":"Importing libraries\n","6f6bb6eb":"Splitting our dataset to train and test sets ","313f5858":"Changing Gender columns to binary values (ie: Dichotomous variable -: 0\/1)","8cd6c4f1":"**# Making  Prediction**"}}