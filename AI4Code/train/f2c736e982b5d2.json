{"cell_type":{"e92538f8":"code","64ce8558":"code","efe8cc84":"code","da652e90":"code","9924a20a":"code","1226c736":"code","18d469b6":"code","6e14b92e":"code","27f2ba71":"code","55fcb35e":"code","8603d202":"code","bd152d5c":"code","b578d52c":"code","2212ab75":"markdown","aeb7f6e7":"markdown","1a481e7f":"markdown","562bea97":"markdown","7b906d17":"markdown","72eb7969":"markdown","f33d9315":"markdown","5b2f1bb1":"markdown","e19f8428":"markdown"},"source":{"e92538f8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfrom nltk.corpus import stopwords \nfrom nltk.tokenize import word_tokenize\nimport re\nimport collections\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","64ce8558":"reviews = pd.read_csv(\"\/kaggle\/input\/olist-reviews-category\/olist-reviews-category.csv\")\ndf_positive_words = pd.read_csv(\"\/kaggle\/input\/olist-reviews-category\/positivos.csv\")\ndf_negative_words = pd.read_csv(\"\/kaggle\/input\/olist-reviews-category\/negativos.csv\")","efe8cc84":"good_words = [w.lower().split(\"[\")[0] for w in list(df_positive_words['Term'])] \nbad_words = [w.lower().split(\"[\")[0] for w in list(df_negative_words['Term'])] ","da652e90":"df_filtered = reviews[pd.notna(reviews.review_comment_message)]","9924a20a":"len(df_filtered)","1226c736":"df_filtered.head()","18d469b6":"\ndef treating(reviews):\n    stop_words = set(stopwords.words('portuguese')) \n    treated = []\n    for review in reviews:\n        op_string = re.sub(r'[^\\w\\s]','',review)\n        \n        word_tokens = word_tokenize(op_string)\n        filtered_sentence = [w.lower() for w in word_tokens if not w.lower() in stop_words and not w.isdigit()] \n        \n        treated.append(filtered_sentence)\n    return treated\n    \n","6e14b92e":"df_filtered.loc[:,\"reviews\"] = treating(df_filtered[\"review_comment_message\"])","27f2ba71":"categories = df_filtered.product_category_name.unique()","55fcb35e":"popular_category_counter = collections.Counter()\npopular_category_counter.update(list(df_filtered.product_category_name))\npopular_categories = dict(popular_category_counter.most_common(5)).keys()\npopular_categories","8603d202":"words_by_category = {}\n\nfor category in popular_categories:\n    \n    # filtra apenas pela categoria espec\u00edfica\n    df_category = df_filtered[df_filtered.product_category_name == category]\n    words_by_category[category] = {}\n    \n    catCounter = collections.Counter()\n    \n    # faz um loop por todas as linhas do dataframe filtrado da categoria espec\u00edfica\n    for index, content in df_category.iterrows():  \n        catCounter.update(content['reviews'])\n    \n    # add as n palavras mais comuns em tal categoria\n    words_by_category[category] = catCounter.most_common()","bd152d5c":"words_by_category","b578d52c":"import matplotlib.pyplot as plt\n\nfor cat in popular_categories:\n    good_keys = []\n    good_values = []\n    \n    bad_keys = []\n    bad_values = []\n    for a, i in words_by_category[cat]:\n        if a in good_words and len(good_keys) <= 10:\n            good_keys.append(a)\n            good_values.append(i)\n        elif a in bad_words and len(bad_keys) <= 10:\n            bad_keys.append(a)\n            bad_values.append(i)\n        \n    \n    # good feeling\n    if len(good_keys) > 0:\n        title = cat+\"-pos\"\n        plt.title(cat + \" - POSITIVE \")\n        plt.barh(good_keys, good_values, color=\"#009e73\")\n        plt.savefig(title+'.png')\n        plt.show()\n        \n    if len(bad_keys) > 0:\n        title = cat+\"-neg\"\n        plt.title(cat + \" - NEGATIVE\")\n        plt.barh(bad_keys, bad_values, color=\"#d55e00\")\n        plt.savefig(title+'.png')\n        plt.show()","2212ab75":"#### Tamanho do dataset","aeb7f6e7":"## Recupera\u00e7\u00e3o das categorias de produtos mais avaliadas","1a481e7f":"## Exibi\u00e7\u00e3o dos gr\u00e1ficos das palavras mais ditas por categorias, diferenciando as positivas e negativas","562bea97":"## M\u00e9todo que faz o tratamento dos reviews, removendo stop words, pontua\u00e7\u00e3o e numerais","7b906d17":"## Cria\u00e7\u00e3o de um dataframe apenas com dados cujos reviews estejam devidamente preenchidos","72eb7969":"## Leitura dos arquivos","f33d9315":"## Adi\u00e7\u00e3o de uma nova coluna no DataFrame, contendo as avalia\u00e7\u00f5es ap\u00f3s o tratamentos","5b2f1bb1":"## Faz uma contagem de todas as palavras utilizadas nas reviews, apenas nas categorias mais populares","e19f8428":"## Extra\u00e7\u00e3o das palavras negativas e positivas a partir dos tratamentos feitos pelo fluxo no KNIME"}}