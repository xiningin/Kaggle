{"cell_type":{"be24fccf":"code","2c4ed3e0":"code","199a3fde":"code","08adff50":"code","bf9905b8":"code","7e3d57dd":"code","59234489":"code","52854b1d":"code","f6f71ddb":"code","df72caf3":"code","e0fa2472":"code","ec8a92cb":"code","b179dc47":"code","7812cef2":"code","a82c25df":"code","7b96749e":"code","2a63362c":"code","abc41790":"code","e7a9bf0b":"code","3cb094ec":"code","dfed0818":"code","1e849d3c":"code","4deecfff":"code","814c4c16":"code","e0ca597e":"code","66c0c10a":"code","0d42e927":"code","df53949a":"code","3b56c4e1":"code","520d695c":"code","3993f2fe":"code","dae0e83c":"code","1dad5deb":"code","18e7a737":"code","e97b50a5":"code","59cb5835":"code","4bd874be":"markdown","03187883":"markdown","be146d31":"markdown","d1c4ad27":"markdown","667f6943":"markdown","b11d31ff":"markdown"},"source":{"be24fccf":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2c4ed3e0":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","199a3fde":"comb_df = pd.concat([train,test])","08adff50":"comb_df.isnull().sum()","bf9905b8":"comb_df['Cabin'] = comb_df['Cabin'].fillna('DECK_CREW')\n\n# We assume that they embarked at Southampton itself (It was the starting point.)\ncomb_df['Embarked'] = comb_df['Embarked'].fillna('S')","7e3d57dd":"pd.crosstab(train.Pclass,train.Survived).div(pd.crosstab(train.Pclass,train.Survived).sum(1),axis=0).plot.bar(stacked=True).grid()","59234489":"pd.crosstab(train.Sex,train.Survived).div(pd.crosstab(train.Sex,train.Survived).sum(1),axis=0).plot.bar(stacked=True).grid()","52854b1d":"gen_clas_surv = pd.crosstab([train['Sex'],train['Pclass']],train.Survived)\n\ngen_clas_surv.div(gen_clas_surv.sum(1),axis=0).plot.bar()","f6f71ddb":"sns.heatmap(train.corr(),annot=True)","df72caf3":"comb_df.sample(5)","e0fa2472":"# 4. Name\n# Possible extractions: Salutation, First Name, Last Name, Nicknames","ec8a92cb":"comb_df['Last_Name'] = comb_df.Name.str.split(',').apply(lambda x: x[0])","b179dc47":"comb_df['Salut'] = comb_df.Name.str.split(',').apply(lambda x: x[1]).apply(str.split).apply(lambda x: x[0])","7812cef2":"# Let's check if we got anything meanigful\ncomb_df['Salut'].value_counts()","a82c25df":"comb_df.loc[comb_df['Salut'] == 'Master.','Boy-o-Girl'] = 'Boy'\ncomb_df.loc[comb_df['Salut'].isin(['Miss.','Ms.','Mme.','Mlle']),'Boy-o-Girl'] = 'Girl'","7b96749e":"comb_df.loc[comb_df['Salut'] == 'Mr.','Boy-o-Girl']='Man'\ncomb_df['Boy-o-Girl'].fillna('Women',inplace=True)","2a63362c":"comb_df\npd.crosstab(comb_df['Boy-o-Girl'],comb_df['Survived'])","abc41790":"# create feature of upper class\ncomb_df['Salut'].unique()","e7a9bf0b":"novelty = ['Don.', 'Rev.', 'Dr.','Jonkheer.', 'Dona.','Sir']\nmilitary = ['Major.','Col.','Capt.']","3cb094ec":"comb_df.loc[comb_df['Salut'].isin(novelty),'Social_Class'] = 'Novelty'\ncomb_df.loc[comb_df['Salut'].isin(military),'Social_Class']= 'Military'\ncomb_df['Social_Class'].fillna('Common',inplace=True)","dfed0818":"comb_df.isnull().sum()","1e849d3c":"comb_df.groupby(['Boy-o-Girl'])['Age'].mean()['Boy']","4deecfff":"comb_df['Age'] = comb_df.apply(\n    lambda row: comb_df.groupby(['Boy-o-Girl'])['Age'].median()[row['Boy-o-Girl']] if np.isnan(row['Age']) else row['Age'],\n    axis=1\n)\n    \n","814c4c16":"comb_df","e0ca597e":"train_df  = comb_df[~comb_df.Survived.isnull()]\ntest_df = comb_df[comb_df.Survived.isnull()]","66c0c10a":"from sklearn.model_selection import train_test_split\nX_train,X_val,y_train,y_val = train_test_split(train_df.drop('Survived',axis=1),\n                                               train_df['Survived'],\n                                               test_size=0.2,\n                                               random_state =123)","0d42e927":"comb_df.sample(5)","df53949a":"model_cols = ['Pclass','Sex','Age','SibSp','Parch','Fare','Embarked','Boy-o-Girl','Social_Class','Last_Name','Cabin']","3b56c4e1":"cat_cols = ['Sex','Embarked','Boy-o-Girl','Social_Class','Last_Name','Cabin']","520d695c":"from catboost import CatBoostClassifier\nfrom lightgbm import LGBMClassifier","3993f2fe":"cb = CatBoostClassifier()","dae0e83c":"cb.fit(X_train[model_cols],y=y_train,eval_set=(X_val[model_cols],y_val),cat_features=cat_cols)","1dad5deb":"from sklearn.metrics import accuracy_score","18e7a737":"accuracy_score(y_val,cb.predict(X_val[model_cols]))","e97b50a5":"submit1 = pd.DataFrame()\nsubmit1['PassengerId']=test_df.PassengerId\nsubmit1['Survived']=cb.predict(test_df.drop(['PassengerId','Name'],axis=1)[model_cols])","59cb5835":"submit1.to_csv('feature_submit.csv',index=False)","4bd874be":"## Taking one at a time:","03187883":"1. PassengerId : Can't do much around it.\n2. Survived : Lol. That's our target\n3. Pclass: Seems fine.","be146d31":"Decent Results.. We can subdivide sex into boy girl man woman..","d1c4ad27":"# Feature Engineering\nA good approach I feel that to take each variable at a time and try to extract as much info as possible\n#### Always rememeber to do all feature engineering operations on the combined data.","667f6943":"Inferences from EDA:\n1. Higher the class, more the survival possibility.\n2. Females have a mucher higher chance of survival.\n3. Females across all classes had a higher survival percentages.\n4. No specific favour to particular names.\n5. Fare and Survical are highly correlated.\n","b11d31ff":"# Exploratory Data Analysis"}}