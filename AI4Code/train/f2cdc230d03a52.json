{"cell_type":{"9fa3ec93":"code","59962965":"code","fcc22f15":"code","ca7be5aa":"code","2f63800b":"code","c799625c":"code","77d1cf6f":"code","f117b6a3":"code","fdc27650":"code","cc35d9c9":"code","304cd12c":"code","7a79b1dd":"code","86ce72f7":"code","0b9b5e19":"code","189c30ca":"code","93688b00":"code","446e45d8":"code","d03c5d20":"code","5dcc921b":"code","83019fda":"code","c89aaef6":"code","5ef823a2":"code","6ab28072":"code","e58b64e4":"code","44bc9649":"code","85a8c5c9":"code","30487120":"code","94595903":"code","c85bb70c":"code","1c11f6a8":"code","2bfc6cb3":"code","95d9bc02":"code","68503cbc":"code","76c86ed0":"code","4f558383":"code","e07150d5":"markdown","de90d25b":"markdown","a3c154e0":"markdown","bbccbf7a":"markdown","e960910c":"markdown"},"source":{"9fa3ec93":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","59962965":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport pandas_profiling as pdp\n\nimport warnings\nwarnings.filterwarnings('ignore')","fcc22f15":"df_train = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2022\/train.csv\",index_col = 'row_id')\ndf_test = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2022\/test.csv\",index_col = 'row_id')\ndf_subm = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2022\/sample_submission.csv\",index_col = 'row_id')","ca7be5aa":"df_train_row_count, df_train_column_count = df_train.shape\nprint('Total number of rows:', df_train_row_count) \nprint('Total number of columns:', df_train_column_count)\n\ndf_test_row_count, df_test_column_count = df_test.shape\nprint('Total number of rows:', df_test_row_count)\nprint('Total number of columns:', df_test_column_count) ","2f63800b":"df_train.head()","c799625c":"df_train.describe().T","77d1cf6f":"df_train.describe(include='O')","f117b6a3":"df_train.info()","fdc27650":"#pandas profiling\npdp.ProfileReport(df_train)","cc35d9c9":"df_train['date'] = pd.to_datetime(df_train['date'])\ndf_train['year']=df_train['date'].dt.year\ndf_train['month']=df_train['date'].dt.month.astype('str')\ndf_train['day'] = df_train['date'].dt.day.astype('str')\ndf_train['day_of_yr'] = df_train['date'].dt.dayofyear\ndf_train['week']=df_train[\"date\"].dt.weekday.astype('str')\ndf_train['quater']=df_train['month'].replace('1','1').replace('2','1').replace('3','1').replace('4','2').replace('5','2').replace('6','2').replace('7','3').replace('8','3').replace('9','3').replace('10','4').replace('11','4').replace('12','4')\nprint(df_train.info())\ndf_train","304cd12c":"df_test['date'] = pd.to_datetime(df_test['date'])\ndf_test['year']=df_test['date'].dt.month\ndf_test['month']=df_test['date'].dt.month.astype('str')\ndf_test['quater']=df_test['month'].replace('1','1').replace('2','1').replace('3','1').replace('4','2').replace('5','2').replace('6','2').replace('7','3').replace('8','3').replace('9','3').replace('10','4').replace('11','4').replace('12','4')\ndf_test['day'] = df_test['date'].dt.day.astype('str')\ndf_test['day_of_yr'] = df_test['date'].dt.dayofyear\ndf_test['week']=df_test[\"date\"].dt.weekday.astype('str')\nprint(df_test.info())","7a79b1dd":"print('Duration (Train Date): ', df_train['date'].min(), df_train['date'].max())\nprint('Duration (Test Date): ', df_test['date'].min(), df_test['date'].max())","86ce72f7":"df_train.groupby(['year','quater']).agg({'num_sold':'mean'}).reset_index()","0b9b5e19":"fig = plt.subplots(1, 1, figsize=(12, 9))\nsns.barplot(df_train['year'],df_train['num_sold'],hue=df_train['country'])\nplt.show()","189c30ca":"fig = plt.subplots(1, 1, figsize=(12, 9))\nsns.barplot(df_train['year'],df_train['num_sold'],hue=df_train['quater'])\nplt.show()","93688b00":"print(df_train.isna().sum())\nprint('-------------------------')\nprint(df_test.isna().sum())","446e45d8":"df_train.nunique()","d03c5d20":"print (\"Unique values are:\\n\",df_train.nunique())","5dcc921b":"sns.distplot(df_train['num_sold'])","83019fda":"df_train['num_sold_log']=df_train['num_sold'].apply(np.log)\nsns.distplot(df_train['num_sold_log'])","c89aaef6":"df_train_fin=df_train[df_train['country']=='Finland']\ndf_train_nor=df_train[df_train['country']=='Norway']\ndf_train_swe=df_train[df_train['country']=='Sweden']\nsns.distplot(df_train_fin['num_sold_log'])\nsns.distplot(df_train_nor['num_sold_log'])\nsns.distplot(df_train_swe['num_sold_log'])","5ef823a2":"country1 = df_train[df_train.country == 'Finland']\ncountry1 = pd.DataFrame(country1.groupby('product')['num_sold'].sum()).reset_index()\ncountry2 = df_train[df_train.country == 'Norway']\ncountry2 = pd.DataFrame(country2.groupby('product')['num_sold'].sum()).reset_index()\ncountry3 = df_train[df_train.country == 'Sweden']\ncountry3 = pd.DataFrame(country3.groupby('product')['num_sold'].sum()).reset_index()\ncountry1,country2,country3","6ab28072":"store1 = df_train[df_train['store']=='KaggleRama']\nstore2 = df_train[df_train['store']=='KaggleMart']\nfig, (ax0, ax1) = plt.subplots(1, 2, figsize=(14, 7))\nstore1.set_index('date').groupby([pd.Grouper(freq='Y'),'country'])['num_sold'].mean().unstack().plot(ax=ax0)\nstore2.set_index('date').groupby([\npd.Grouper(freq='Y'),'country'])['num_sold'].mean().unstack().plot(ax=ax1)\nax0.set_title('Products Sold by KaggleRama')\nax1.set_title('Products Sold by KaggleMart')\nax0.grid(alpha=0.5)\nax1.grid(alpha=0.5)\nplt.show()","e58b64e4":"fig, ax = plt.subplots(1, 1, figsize=(15, 8))\ndf_month = df_train.set_index('date').groupby([pd.Grouper(freq='M')])[['num_sold']].mean()\nsns.lineplot(x=\"date\", y=\"num_sold\", data=df_train, ax=ax, label='daily',color='#9381ff',size=18)\nsns.lineplot(x=\"date\", y=\"num_sold\", data=df_month, ax=ax, label='monthly', color='#ff002b',size = 18)\nax.set_title('Products Sold - Month wise')\nax.legend()\nplt.show()","44bc9649":"fig = plt.subplots(1, 1, figsize=(12, 7))\nsns.barplot(df_train['product'],df_train['num_sold'],hue=df_train['country'])\nplt.show()","85a8c5c9":"fig = plt.subplots(1, 1, figsize=(12, 7))\nsns.lineplot(x=\"day_of_yr\", y=\"num_sold\", data=df_train, hue=\"product\")\nplt.show()","30487120":"!pip install pycaret[full]\nfrom pycaret.regression import *","94595903":"df_train.head(2)","c85bb70c":"model = setup(data = df_train, target = 'num_sold', \n              normalize = True, normalize_method = 'robust', \n              use_gpu = True, feature_interaction = True, \n              n_jobs = -1, session_id = 0, \n              data_split_shuffle = False,\n              transform_target = True,\n              create_clusters = False,ignore_features=['num_sold_log',])","1c11f6a8":"top_per = compare_models(n_select = 5)","2bfc6cb3":"blend = blend_models(top_per)\npredict_model(blend);","95d9bc02":"final_blend = finalize_model(blend)\npredict_model(final_blend);","68503cbc":"pred_blend = predict_model(final_blend, data=df_test)\npred_blend.head()","76c86ed0":"df_subm = pd.DataFrame(list(zip(df_test.index, pred_blend.Label)),columns = ['row_id', 'num_sold'])\ndf_subm","4f558383":"df_subm.to_csv('submission3.csv', index = False)","e07150d5":"**Feature Engineering**  \n1.convert date column from object type to date type  \n2.Add month and day columns  \n3.Add day of the week column  \n4.Add a quarter column  ","de90d25b":"*Observations on this TPS dataset:*\n- `num_sold` column is the target variable.\n- `Train` dataset has `26298` rows and `6` columns which contains`4`. features, `1` target variable `num_sold` and `1` column of `row_id`.\n- `Test` dataset has `6570` rows and `5` columns which contains`4` features with`1` column of `row_id`.\n- No missing values in train and test dataset.","a3c154e0":"**Understanding statistics and data tables**","bbccbf7a":"***Importing & Reading the dataset ***","e960910c":"**PyCaret **  "}}