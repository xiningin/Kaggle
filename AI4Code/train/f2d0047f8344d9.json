{"cell_type":{"b8732c68":"code","8048355e":"code","5d43cf35":"code","678c0657":"code","a53b2ded":"code","1cbe4598":"code","75a3eadf":"code","39391d38":"code","d5f8dd0c":"code","5d170950":"code","1a238bb5":"code","9c7a63b1":"code","a3bb2a3e":"markdown"},"source":{"b8732c68":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport lightgbm as lgb\nfrom sklearn.model_selection import KFold\nimport warnings\nimport gc\nimport time\nimport sys\nimport datetime\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\n\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nwarnings.filterwarnings('ignore')\nfrom sklearn import metrics\n\nplt.style.use('seaborn')\nsns.set(font_scale=2)\npd.set_option('display.max_columns', 500)","8048355e":"%%time\nraw_train = pd.read_csv('..\/input\/train.csv')\ntrain = raw_train","5d43cf35":"target_mask = train['target'] == 1\nnon_target_mask = train['target'] == 0 ","678c0657":"from scipy.stats import ks_2samp","a53b2ded":"train = raw_train.copy(deep=True)\ncols = [f for f in train.columns if f not in ['ID_code', 'target']]\nsc = MinMaxScaler(feature_range=(1, 2))\nscaled_train = sc.fit_transform(train[cols])\nprint(scaled_train.shape)\nfor i in range(200):\n    train[f'var_{i}'] = scaled_train[:,i] \n\ntrain[cols] = np.sort(train[cols])\n\n\ntrain.describe()","1cbe4598":"for i in range(200):\n    f = f'var_{i}'\n    fld = f'bin_{i}'\n    train[fld] = np.around(((train[f] - 1.0)*200))\/200 + 1.0","75a3eadf":"def plot_col(col):\n    statistic, pvalue = ks_2samp(train.loc[non_target_mask, col], train.loc[target_mask, col])\n    fig, ax = plt.subplots(1, 1, figsize=(10, 4))\n    sns.kdeplot(train.loc[non_target_mask, col], ax=ax, label='Target == 0')\n    sns.kdeplot(train.loc[target_mask, col], ax=ax, label='Target == 1')\n\n    ax.set_title('name: {}, statistics: {:.5f}, pvalue: {:5f}'.format(col, statistic, pvalue))\n    plt.show()","39391d38":"def plot_diff(col1, col2, show_each=False):\n    n = f'diff_{col1}-{col2}'\n    print(n)\n    if(show_each):\n        plot_col(col1)\n        plot_col(col2)\n    \n    train[n] = train[col1] - train[col2]\n        \n    plot_col(n)","d5f8dd0c":"plot_col('bin_15')","5d170950":"plot_diff('var_184', 'var_15')","1a238bb5":"for i in range(10):\n    plot_diff(f'var_{i}', f'var_{199-i}', True)","9c7a63b1":"for i in range(10):\n    plot_diff(f'bin_{i}', f'bin_{199-i}', False)","a3bb2a3e":"1. Scale the features to uniform range.\n2. Sort all the features within a sample from min to max.\n3. Plot the difference of min and max of new sorted features.\n\nPlotting code copied from Youhanlee's [kernel](https:\/\/www.kaggle.com\/youhanlee\/yh-eda-i-want-to-see-all)"}}