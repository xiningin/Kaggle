{"cell_type":{"3bbda392":"code","72170684":"code","88b781c4":"code","e149e894":"code","5ea64f5d":"code","b29bbfa4":"code","af208a61":"code","c03be7b3":"code","927e19f8":"code","f596ca94":"code","74403974":"code","3309c09c":"code","681f39f0":"code","a5a99dbe":"code","34d1c9c3":"code","cd96ce0b":"code","45fee732":"code","28633526":"code","ae81056b":"code","2bde4a19":"code","1b44c64a":"code","79e1ed7c":"code","4cc52a70":"code","2e952e08":"code","2c86e421":"code","643c75df":"code","d2588148":"code","837d038c":"code","e0479ad8":"code","3a587b64":"code","447bfb89":"code","138dc6c3":"code","90ea4a99":"code","1c9e0b83":"code","6260aac5":"code","9556a87e":"code","85e3f0fb":"code","c860fd49":"code","532a44c7":"code","89beb619":"code","426b47ca":"code","5a22d58a":"code","cfd32a8f":"code","c165dc50":"code","b6d028d7":"code","95235782":"code","3892cb81":"code","ecb84960":"code","e02ca76e":"code","63ad66fb":"code","f8d14705":"code","985125b7":"markdown","e9f38775":"markdown","2cb7c204":"markdown","10f98be0":"markdown","3df5b8f7":"markdown","bfe5b756":"markdown","8fe3ecb9":"markdown","36b0245c":"markdown","d56d34ad":"markdown","5873776e":"markdown","db075738":"markdown"},"source":{"3bbda392":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport datetime","72170684":"#Show more dataframe columns\npd.set_option(\"display.max_columns\", 1000)","88b781c4":"#Plot style\nplt.style.use('fivethirtyeight')","e149e894":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5ea64f5d":"data = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\ndata.head()","b29bbfa4":"data.info()","af208a61":"#Let's use \"China\" instead of \"Mainland China\" and \"Macao\" instead of \"Macau\"\ndata['Country\/Region'] = data['Country\/Region'].replace('Mainland China', 'China')\n#And replace nan values in province by empty string\ndata['Province\/State'] = data['Province\/State'].fillna('')","c03be7b3":"#Now we'll transform the strings to python datetime objects and extract DOW, MONTH, etc..\ndata['Date'] = data['ObservationDate'].apply(lambda x : datetime.datetime.strptime(x, '%m\/%d\/%Y'))\ndata['ObservationDOW'] = data['Date'].apply(lambda x: x.day_name())\ndata['ObservationMonth'] = data['Date'].apply(lambda x: x.month_name())\n#Add Active Cases\ndata['Active'] = data['Confirmed'] - data['Deaths'] - data['Recovered']","927e19f8":"#We'll drop some columns \ndata.drop(columns=['SNo', 'Last Update'], inplace=True)","f596ca94":"data.head()","74403974":"last_available_date = data['ObservationDate'].iloc[-1]\nlatest_data = data.loc[data.ObservationDate == last_available_date].groupby('Country\/Region').sum()[['Confirmed', 'Deaths', \n                                                                                        'Recovered', 'Active']]","3309c09c":"evolution = data.groupby('ObservationDate').sum()[['Confirmed', 'Deaths','Recovered', 'Active']]\nevolution['Death Rate'] = (evolution['Deaths'] \/ evolution['Confirmed']) * 100\nevolution['Recovery Rate'] = (evolution['Recovered'] \/ evolution['Confirmed']) * 100","681f39f0":"print(f'Last Update: {last_available_date}')\nplt.figure(figsize=(11,6)) \nplt.pie(latest_data.sum().iloc[1:], labels=['Deaths', 'Recovered', 'Active'], autopct='%1.1f%%', explode=(1,0,0), shadow=True)\nplt.title('COVID-19 Global Stats')\nplt.show()","a5a99dbe":"plt.figure(figsize=(10,7))\nsns.boxplot(data=evolution[['Deaths', 'Recovered', 'Active']])\nplt.title('Cases Dsitributions Boxplots')\nplt.show()","34d1c9c3":"plt.figure(figsize=(20,7))\nplt.plot(evolution['Active'], label='Active')\nplt.plot(evolution['Recovered'], label='Recovered')\nplt.xticks(evolution.index[::7],rotation=45)\nplt.title('Evolution of COVID-19 Results (worldwide)')\nplt.xlabel('Date')\nplt.ylabel('Number of Cases')\nplt.legend()\nplt.show()","cd96ce0b":"#Due to values' ranges, we decided to plot deaths evolution separately (to be clearer)\nplt.figure(figsize=(20,7))\nplt.plot(evolution['Deaths'], label='Deaths')\nplt.xticks(evolution.index[::7],rotation=45)\nplt.title('Evolution of COVID-19 Results (worldwide)')\nplt.xlabel('Date')\nplt.ylabel('Number of Cases')\nplt.legend()\nplt.show()","45fee732":"#Let's visualise both death and recovery rates now\nplt.figure(figsize=(20,7))\nplt.plot(evolution['Recovery Rate'], label='Recovery Rate')\nplt.title('Evolution of COVID-19 Recovery Rate (worldwide)')\nplt.xticks(evolution.index[::7],rotation=45)\nplt.ylabel('Rate %')\nplt.legend()\nplt.show()","28633526":"#What about the evolution of death rate ?\nplt.figure(figsize=(20,7))\nplt.plot(evolution['Death Rate'], label='Death Rate')\nplt.title('Evolution of COVID-19 Death Rate (worldwide)')\nplt.xticks(evolution.index[::7],rotation=45)\nplt.ylabel('Rate %')\nplt.legend()\nplt.show()","ae81056b":"diff_evolution = evolution.diff().iloc[1:]","2bde4a19":"plt.figure(figsize=(20,7))\nplt.plot(diff_evolution['Confirmed'])\nplt.title('Evolution of COVID-19 New Confirmed Cases (worldwide)')\nplt.xticks(diff_evolution.index[::7],rotation=45)\nplt.ylabel('New Confirmed Cases')\nplt.show()","1b44c64a":"plt.figure(figsize=(20,7))\nplt.plot(diff_evolution['Deaths'])\nplt.title('Evolution of COVID-19 New Deaths Cases (worldwide)')\nplt.xticks(diff_evolution.index[::7],rotation=45)\nplt.ylabel('New Deaths Cases')\nplt.show()","79e1ed7c":"#If you see a negative value in the plot above, uncomment the last line.\n#As we can see in the deaths curve, there's a potential anomaly: a decrease in total deaths number.\n#evolution.loc[['08\/16\/2020', '08\/17\/2020', '08\/18\/2020']]","4cc52a70":"plt.figure(figsize=(20,7))\nplt.plot(diff_evolution['Recovered'])\nplt.title('Evolution of COVID-19 New Recovery Cases (worldwide)')\nplt.xticks(diff_evolution.index[::7],rotation=45)\nplt.ylabel('New Recovery Cases')\nplt.show()","2e952e08":"latest_data = latest_data.sort_values(by='Confirmed', ascending=False)\nlatest_data.head(10).style.background_gradient(cmap='Oranges')","2c86e421":"k = 10 # we'll show the Top k affected countries\nconf_max = latest_data['Confirmed'][:k] \nconf_max.loc['Others'] = latest_data['Confirmed'][k:].sum()\nplt.figure(figsize=(20,10))\nplt.pie(conf_max, labels=conf_max.index, autopct='%1.1f%%', shadow=True, pctdistance=0.8)\nplt.title('COVID-19 Confirmed Cases Partition')\nplt.show()","643c75df":"px.bar(latest_data.reset_index()[0:10].sort_values('Confirmed', ascending=True),\n       y=\"Confirmed\", \n       x=\"Country\/Region\", \n       title=\"COVID-19  Top 10 Affected Countries\",\n       hover_data=['Deaths'],\n       color='Deaths',\n       orientation='v')","d2588148":"d = data.groupby(['Country\/Region', 'ObservationDate']).sum().reset_index().sort_values('ObservationDate')\n#US not included for better visualization since values are very high comparing to other countries\ntop_30_countries = latest_data.index[1:31].tolist()\nd =d.loc[d['Country\/Region'].isin(top_30_countries)]","837d038c":"df = d.copy()\nfor date in d['ObservationDate'].unique():\n    for country in top_30_countries:\n        if country not in d.loc[d['ObservationDate'] == date]['Country\/Region'].unique():\n            dff = pd.DataFrame({'Country\/Region':[country], 'ObservationDate':[date], 'Confirmed':[0],\n                               'Deaths':[0], 'Recovered':[0], 'Active':[0]})\n            df = pd.concat([df,dff])","e0479ad8":"#Sorting dataframe by Date and the ranking of top 30 countries \nsorterIndex = dict(zip(top_30_countries, range(len(top_30_countries))))\ndf['Country\/Region_X'] = df['Country\/Region'].map(sorterIndex)\ndf.sort_values(['ObservationDate', 'Country\/Region_X'], ascending=[True, True], inplace=True)\ndf.drop(columns='Country\/Region_X', inplace = True)","3a587b64":"df.reset_index(drop=True,inplace=True)","447bfb89":"fig = px.bar(df, x=\"Confirmed\",\n             y=\"Country\/Region\", \n             color=\"Deaths\", \n             orientation='h',\n             title=\"Evolution of Confirmed Cases: Top 30 US not included\",\n             animation_frame='ObservationDate')\nfig.update_layout(autosize=False, width=700, height=900)\nfig.show()","138dc6c3":"sns.set()\nfctgrid = sns.FacetGrid(data=df,\n                        col='Country\/Region',\n                        hue='Country\/Region',\n                        col_wrap=4,\n                        sharey=False)\nfctgrid.map(plt.plot, 'ObservationDate', 'Confirmed')\nfctgrid.set(xticks=df['ObservationDate'].unique()[10::90])\nfctgrid.set_xticklabels(rotation=45)\nfctgrid.fig.suptitle('Evolution Curves')\nplt.subplots_adjust(top=0.9)\nplt.show()","90ea4a99":"plt.style.use('fivethirtyeight') #using this style with the previous facetgrid may affect the clearness of the plot","1c9e0b83":"plt.figure(figsize=(15,7))\nsns.barplot(data=latest_data.reset_index()[:20], x='Confirmed', y='Country\/Region', label='Confirmed', color='k')\nsns.barplot(data=latest_data.reset_index()[:20], x='Recovered', y='Country\/Region', label='Recovered', color='r')\nplt.title('Confirmed vs Recovered: Top 20')\nplt.legend()\nplt.show()","6260aac5":"print('Countries With No Deaths Registered')\nno_deaths = latest_data.loc[latest_data['Deaths'] == 0]\nno_deaths.style.background_gradient(cmap='Blues')","9556a87e":"print('Countries With No Active Cases')\nno_deaths = latest_data.loc[latest_data['Active'] == 0]\nno_deaths.style.background_gradient(cmap='Purples')","85e3f0fb":"print('Countries With No Recovery Registered')\nno_recovery = latest_data.loc[latest_data['Recovered'] == 0]\nno_recovery.style.background_gradient(cmap='Greens')","c860fd49":"map_data = data.groupby(['Country\/Region', 'ObservationDate']).sum().reset_index()","532a44c7":"fig = px.choropleth(map_data, \n                    locations =\"Country\/Region\", \n                    color =\"Confirmed\", \n                    hover_name='Country\/Region',\n                    locationmode=\"country names\",\n                    color_continuous_scale = px.colors.sequential.Plasma, \n                    scope =\"world\",\n                    animation_frame =\"ObservationDate\",\n                   title=\"Evolution of Confirmed Cases\") \nfig.show()","89beb619":"fig = px.choropleth(map_data, \n                    locations =\"Country\/Region\", \n                    color =\"Deaths\", \n                    hover_name='Country\/Region',\n                    locationmode=\"country names\",\n                    color_continuous_scale = px.colors.sequential.Plasma, \n                    scope =\"world\",\n                    animation_frame =\"ObservationDate\",\n                   title=\"Evolution of Death Cases\") \nfig.show()","426b47ca":"fig = px.choropleth(map_data, \n                    locations =\"Country\/Region\", \n                    color =\"Recovered\", \n                    hover_name='Country\/Region',\n                    locationmode=\"country names\",\n                    color_continuous_scale = px.colors.sequential.Plasma, \n                    scope =\"world\",\n                    animation_frame =\"ObservationDate\",\n                   title=\"Evolution of Recovered Cases\") \nfig.show()","5a22d58a":"tunisia = data.loc[data['Country\/Region'] == 'Tunisia']\ntunisia.drop(columns=['Province\/State', 'Country\/Region', 'Date'], inplace=True)\ntunisia.set_index('ObservationDate', inplace=True)","cfd32a8f":"tunisia.head()","c165dc50":"print(f'Last Update: {last_available_date}')\nplt.figure(figsize=(12,7))\nplt.pie(tunisia.loc['08\/25\/2020'][['Deaths', 'Recovered', 'Active']], labels=['Deaths', 'Recovered', 'Active'], \n        autopct='%1.1f%%', explode=(1,0,0), shadow=True)\nplt.title('COVID-19 Tunisia')\nplt.show()","b6d028d7":"plt.figure(figsize=(17,5))\nplt.plot(tunisia['Confirmed'])\nplt.xticks(tunisia.index[::7],rotation=45)\nplt.axvline(x='06\/27\/2020', label=\"Borders' opening\", color='red', linestyle='--', linewidth='1.7')\nplt.title('Evolution of COVID-19 Confirmed Cases (Tunisia)')\nplt.xlabel('Date')\nplt.ylabel('Confirmed Cases')\nplt.legend()\nplt.show()","95235782":"plt.figure(figsize=(17,5))\nplt.plot(tunisia['Active'], label='Active')\nplt.plot(tunisia['Recovered'], label='Recovered')\nplt.xticks(tunisia.index[::7],rotation=45)\nplt.axvline(x='06\/27\/2020', label=\"Borders' opening\", color='black', linestyle='--', linewidth='1.7')\nplt.title('Evolution of COVID-19 Active and Recovered Cases (Tunisia)')\nplt.xlabel('Date')\nplt.legend()\nplt.show()","3892cb81":"plt.figure(figsize=(17,5))\nplt.plot(tunisia['Deaths'])\nplt.xticks(tunisia.index[::7],rotation=45)\nplt.axvline(x='06\/27\/2020', label=\"Borders' opening\", color='red', linestyle='--', linewidth='1.7')\nplt.title('Evolution of COVID-19 Death Cases (Tunisia)')\nplt.xlabel('Date')\nplt.ylabel('Death Cases')\nplt.legend()\nplt.show()","ecb84960":"diff_evolution_tunisia = tunisia.copy()\nfor col in ['Confirmed', 'Recovered', 'Deaths']:\n    diff_evolution_tunisia[col] = diff_evolution_tunisia[col].diff()\ndiff_evolution_tunisia.drop(diff_evolution_tunisia.index[0], inplace=True)","e02ca76e":"plt.figure(figsize=(20,7))\nplt.plot(diff_evolution_tunisia['Confirmed'], label='New Confirmed Cases')\nplt.plot(diff_evolution_tunisia['Confirmed'].rolling(window=7).mean(), label='Moving Average, window = 7 days')\nplt.plot(diff_evolution_tunisia['Confirmed'].rolling(window=14).mean(), label='Moving Average, window = 14 days')\nplt.axvline(x='06\/27\/2020', label=\"Borders' opening\", color='black', linestyle='--', linewidth='1.7')\nplt.xticks(diff_evolution_tunisia.index[::7],rotation=45)\nplt.title('Evolution of COVID-19 New Confirmed Cases (Tunisia)')\nplt.ylabel('New Confirmed Cases')\nplt.legend()\nplt.show()","63ad66fb":"plt.figure(figsize=(20,7))\nplt.plot(diff_evolution_tunisia['Deaths'])\nplt.axvline(x='06\/27\/2020', label=\"Borders' opening\", color='red', linestyle='--', linewidth='1.7')\nplt.xticks(diff_evolution_tunisia.index[::7],rotation=45)\nplt.title('Evolution of COVID-19 New Death Cases (Tunisia)')\nplt.ylabel('New Death Cases')\nplt.legend()\nplt.show()","f8d14705":"plt.figure(figsize=(20,7))\nfor n in [50, 100, 500, 1000, 1500, 2000]:\n    tunisia_n = tunisia.loc[tunisia['Confirmed'] >= n]\n    plt.plot(np.arange(len(tunisia_n)), tunisia_n['Confirmed'], label=f'Since {n} Cases')\nplt.xlabel('Days since n cases')\nplt.ylabel('Confirmed Cases')\nplt.title('Evolution of COVID-19 Confirmed Cases: Tunisia')\nplt.legend()\nplt.show()","985125b7":"### - Maps","e9f38775":"## 2.2 Country Results","2cb7c204":"Here, we'll show the cases' increase evolution (day to day difference).","10f98be0":"## - Preprocessing","3df5b8f7":"### - Tunisia","bfe5b756":"# 1. Reading Data","8fe3ecb9":"### - Results Evolution","36b0245c":"### - Daily Evolution","d56d34ad":"## 2.1 Global Results","5873776e":"### - World's most affected countries","db075738":"# 2. Exploratory Data Analysis"}}