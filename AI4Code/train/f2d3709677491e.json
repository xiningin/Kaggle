{"cell_type":{"027d1cb9":"code","39a15b59":"code","c74f5cda":"code","84cb590c":"code","c3b7c3af":"code","aa6d0efd":"code","9a5d80fc":"code","49ff8ebb":"code","cddf970f":"code","fe2e9b1d":"code","80f17ac6":"code","2b001f09":"code","92c06e29":"markdown","0935109a":"markdown","01d380d7":"markdown","5ed3d0bc":"markdown"},"source":{"027d1cb9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","39a15b59":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import skew\nfrom scipy.special import boxcox1p\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler, RobustScaler\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import Lasso, LassoCV","c74f5cda":"train_dataset = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_dataset = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","84cb590c":"x_train = train_dataset.select_dtypes(include=['float','int'])\nx_test = test_dataset.select_dtypes(include=['float','int'])\ntest   = test_dataset.select_dtypes(include=['float','int'])\n#mean = x_train.mean(axis=0)\n#std = x_train.std(axis=0)\n","c3b7c3af":"x_train=x_train.fillna(x_train.mean())\nx_test=x_test.fillna(x_train.mean())","aa6d0efd":"x_train = x_train[x_train['GrLivArea']<4000]\nx_train['SalePrice']=np.log(x_train['SalePrice'])","9a5d80fc":"x_train.drop('Id', axis=1, inplace=True)\nx_test.drop('Id', axis=1, inplace=True)","49ff8ebb":"x=x_train.drop('SalePrice', axis=1)\ny=x_train['SalePrice']","cddf970f":"rsc=RobustScaler()\nx=rsc.fit_transform(x)\nx_test=rsc.transform(x_test)","fe2e9b1d":"model=Lasso(alpha =0.001, random_state=1)\nmodel.fit(x,y)","80f17ac6":"predict=model.predict(x_test)\npredicts=np.exp(predict)\nresult=pd.DataFrame({'Id':test.Id, 'SalePrice':predicts})\nresult.to_csv('submission.csv', index=False)","2b001f09":"print(result)","92c06e29":"The next block is done for me.","0935109a":"The variable *test* I need to keep *Id* value","01d380d7":"There are some NuN values that don't let me solve the task","5ed3d0bc":"This is my second Kaggle conpetition I decided to take part. I'd like to study using regression for a prediction and I believe I can succeed a bit. "}}