{"cell_type":{"dfc42944":"code","7f36993b":"code","0e8f4c15":"code","ef35ce86":"code","551231a6":"code","5a1e1bbf":"code","b20da8f4":"code","a3892489":"code","ab3c6246":"code","7056729c":"code","4f060110":"code","69e540f1":"code","5f130932":"code","5d8c90a7":"code","1981ee9c":"code","85ba91b8":"code","35afc674":"code","c74c76cd":"code","7463d10c":"code","f72aa74f":"code","a304c788":"code","21fde50d":"code","68d42fb4":"code","21137253":"code","4dfa5035":"code","52965667":"code","19988c44":"code","36b3c72d":"code","920f1344":"code","1efc2990":"code","992360a7":"code","fc350c4b":"code","30ec6f0d":"code","4457fc93":"code","c0cf5f88":"code","eb8b6ce8":"code","2e241807":"code","e531746e":"code","cc230f3c":"code","f829f0aa":"code","8e3f03ec":"code","6d764d7b":"code","93c5aec1":"code","8297aabe":"code","6c40672d":"code","fbc7a70f":"code","5e60afc8":"code","960e7acf":"code","04b0295c":"code","53c736b6":"code","4e3a70b5":"code","c477ac13":"code","3d7d8986":"code","e50ad310":"code","1a951f25":"code","48e65251":"code","4de7c360":"code","b0d5b3e1":"code","73b4b894":"code","4ed050d2":"code","38625150":"code","4a65f3a3":"code","8f6888cc":"code","7dff5951":"code","2c468296":"code","ff5ebb64":"code","0463c20d":"code","e3b9a3e1":"code","5844b424":"code","97acf37a":"code","bc159e80":"code","c540878c":"code","20761c4e":"code","9baf3f44":"code","e868fcfc":"code","2e7d0fd0":"code","ce6887e0":"code","f53038b7":"code","428b727b":"code","afa3b556":"code","99702d9b":"code","bd881f39":"code","de932ce8":"code","f2484f03":"markdown","745a78ee":"markdown","e0f423c9":"markdown","aeaf095b":"markdown","8570f2b4":"markdown","b22676ff":"markdown","a9a09c0b":"markdown","326f97af":"markdown","a9f79246":"markdown","9ff54efc":"markdown","aa77c4f3":"markdown","2e98f4d1":"markdown","968b6332":"markdown","f281907e":"markdown","be786b00":"markdown","2e3b4ff3":"markdown","bf9829a0":"markdown","a2495c65":"markdown","1765b35e":"markdown","5cf27796":"markdown","9332b1f4":"markdown","ece3e68f":"markdown","2de6219b":"markdown","54f7e5f6":"markdown","fcea6b7a":"markdown","103c8f59":"markdown","5eb4addb":"markdown","f94ed8e2":"markdown","3844a7aa":"markdown","fb2e0c0e":"markdown","7b93c8d0":"markdown","6ccb1d25":"markdown","71a4466f":"markdown","b732a3a6":"markdown","1a2b7546":"markdown","286b9c06":"markdown","18cc4c84":"markdown","a93778e6":"markdown","e98e8389":"markdown","2e7d89e5":"markdown","5b85b0cc":"markdown","67e3522b":"markdown","a3082261":"markdown","38d359c6":"markdown","69cf5be6":"markdown","917cd756":"markdown","ac4bf514":"markdown","4a68630c":"markdown","f9dce69c":"markdown","081c9b74":"markdown","4af25dcf":"markdown","2aa57fa8":"markdown","a15a372f":"markdown","f5bf2d2f":"markdown","8ecb2141":"markdown","195658a3":"markdown","3ac06301":"markdown","253b432f":"markdown","f75e8476":"markdown","5f4a9186":"markdown","9ed59191":"markdown","4a72e629":"markdown","f76d29e9":"markdown","d27d96c7":"markdown","dd442b49":"markdown","7988756c":"markdown","c778a67d":"markdown","de465a3d":"markdown","c246b4b1":"markdown","3bc0ad35":"markdown","6427fdbb":"markdown","b0be01a1":"markdown","09ff394a":"markdown","3bf161e4":"markdown","c64808c8":"markdown","2b52571e":"markdown","505c7d18":"markdown","85e9c6c1":"markdown","0140a568":"markdown","6a444eb4":"markdown","da81f242":"markdown"},"source":{"dfc42944":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm, boxcox\nfrom scipy import stats\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport warnings # don't show warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7f36993b":"data = pd.read_csv(\"\/kaggle\/input\/insurance\/insurance.csv\")","0e8f4c15":"#The Columns\nprint(\"Data Columns\")\ndata.columns","ef35ce86":"data.head()","551231a6":"data.describe()","5a1e1bbf":"print(\"Data Info\")\ndata.info()","b20da8f4":"data[[\"sex\",\"charges\"]].groupby([\"sex\"], as_index = False).mean().sort_values(by = \"charges\",ascending = False).style.background_gradient(\"Greens\")","a3892489":"data[[\"children\",\"charges\"]].groupby([\"children\"], as_index = False).mean().sort_values(by = \"charges\",ascending = False).style.background_gradient(\"Greens\")","ab3c6246":" data[[\"smoker\",\"charges\"]].groupby([\"smoker\"], as_index = False).mean().sort_values(by = \"charges\",ascending = False).style.background_gradient(\"Greens\")","7056729c":" data[[\"region\",\"charges\"]].groupby([\"region\"], as_index = False).mean().sort_values(by = \"charges\",ascending = False).style.background_gradient(\"Greens\")","4f060110":"region = data.groupby(\"region\", as_index=False)[\"age\",\"bmi\",\"children\",\"charges\"].mean().sort_values(\"age\",ascending=False).style.background_gradient(\"Blues\")\nprint(\"Average value of other properties by region \\n\")\nregion","69e540f1":"sex = data.groupby(\"sex\", as_index=False)[\"age\",\"bmi\",\"children\",\"charges\"].mean().sort_values(\"age\",ascending=False).style.background_gradient(\"Blues\")\nprint(\"Average value of other properties by sex \\n\")\nsex","5f130932":"smoker = data.groupby(\"smoker\", as_index=False)[\"age\",\"bmi\",\"children\",\"charges\"].mean().sort_values(\"age\",ascending=False).style.background_gradient(\"Blues\")\nprint(\"Average value of other properties by smoker \\n\")\nsmoker","5d8c90a7":"children = data.groupby(\"children\", as_index=False)[\"age\",\"bmi\",\"charges\"].mean().sort_values(\"age\",ascending=False).style.background_gradient(\"Blues\")\nprint(\"Average value of other properties by children \\n\")\nchildren","1981ee9c":"print(\"Do we have data with null in columns?\")\ndata.columns[data.isnull().any()]","85ba91b8":"data.isnull().sum()","35afc674":"regions = [\"southeast\",\"northwest\",\"southwest\",\"northeast\"]\nchildren = [0,1,2,3,4,5]\ngenders = [\"female\", \"male\"]\n\nregionAgeMean = []\nsexAgeMean = []\nchildAgeMean = []\n\nfor region in regions:\n    x = data[data[\"region\"] == region]\n    ageMeanRegion = x[\"age\"].mean()\n    regionAgeMean.append(ageMeanRegion)\n    \nfor gender in genders:\n    y = data[data[\"sex\"] == gender]\n    ageMeanSex = y[\"age\"].mean()\n    sexAgeMean.append(ageMeanSex)\n\nfor child in children:\n    z = data[data[\"children\"] == child]\n    ageMeanChild = z[\"age\"].mean()\n    childAgeMean.append(ageMeanChild)\n\nageFirstDecember = data[data[\"age\"].between(18,28, inclusive = True)][\"charges\"].mean()\nageSecondDecember = data[data[\"age\"].between(29,39, inclusive = True)][\"charges\"].mean()\nageThirdDecember = data[data[\"age\"].between(40,50, inclusive = True)][\"charges\"].mean()\nageFourthDecember = data[data[\"age\"].between(51,64, inclusive = True)][\"charges\"].mean()\n\naverageAge = [ageFirstDecember,ageSecondDecember,ageThirdDecember,ageFourthDecember]\nageRanges = [\"18-28 Age\",\"29-39 Age\",\"40-50 Age\",\"51-64 Age\"]\n\nplt.figure(figsize=(11,16))\nplt.subplot(3,2,1)\nsns.barplot(x = regions, y = regionAgeMean, palette= \"rocket\")\nplt.title(\"Average age by region\", color = \"purple\")\nplt.xlabel(\"regions\")\nplt.ylabel(\"age mean\")\nplt.subplot(3,2,2)\nsns.barplot(x = genders, y = sexAgeMean, palette=\"YlOrBr\")\nplt.title(\"Average age by sex\", color = \"orange\")\nplt.xlabel(\"genders\")\nplt.ylabel(\"age mean\")\nplt.subplot(3,2,3)\nsns.barplot(x = children, y = childAgeMean, palette=\"crest\")\nplt.title(\"Average age by children\", color = \"blue\")\nplt.xlabel(\"number of children\")\nplt.ylabel(\"age mean\")\nplt.subplot(3,2,4)\nsns.barplot(x=ageRanges, y=averageAge, palette=\"Greens\")\nplt.title(\"Charges by age range\", color = \"darkgreen\")\nplt.xlabel(\"age range\")\nplt.ylabel(\"Charges\")\nplt.subplot(3,2,(5,6))\nsns.distplot(data[\"age\"], fit=norm)\nplt.title(\"Age Distplot\", color = \"darkred\")\n\nplt.show()\n","c74c76cd":"bodyMassIndex = []\nfor i in genders:\n    sex = data[data[\"sex\"] == i]\n    bmi = sex[\"bmi\"].mean()\n    bodyMassIndex.append(bmi)\n    \ntotalNumber = data.sex.value_counts().values\ngenderLabel = data.sex.value_counts().index\ncircle = plt.Circle((0,0),0.2,color = \"white\") \nexplode = (0, 0.1)\n\nplt.figure(figsize=(8,10))\nplt.subplot(2,2,1)\nsns.barplot(x = genders, y = bodyMassIndex, palette= \"rocket\")\nplt.title(\"body mass index by gender\", color = \"purple\")\nplt.xlabel(\"gender\")\nplt.ylabel(\"bmi\")\nplt.subplot(2,2,2)\nplt.pie(totalNumber, labels = genderLabel,autopct='%1.2f%%', explode = explode, colors=['blue','lightgreen'])\np = plt.gcf()\np.gca().add_artist(circle) \nplt.title(\"female\/male\")\nplt.legend()\nplt.subplot(2,2,(3,4))\nsns.countplot(x = 'sex', hue = 'smoker', data = data, palette=\"Greens\")\nplt.title(\"smoking status by gender\", color = \"darkgreen\")\nplt.xlabel(\"gender\")\nplt.show()\n\n","7463d10c":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nplt.hist(data[\"bmi\"], color=\"orange\")\nplt.xlabel(\"bmi\")\nplt.ylabel(\"Frequency\")\nplt.title(\"bmi histogram\", color = \"darkred\")\nplt.subplot(1,2,2)\nsns.distplot(data[\"bmi\"], fit=norm)\nplt.title(\"bmi Distplot\", color = \"darkred\")\n\nplt.show()","f72aa74f":"childNumber = []\nchildCharges = []\n\nfor each in children:\n    child = data[data[\"children\"] == each]\n    xx = child[\"age\"].mean()\n    yy = child[\"charges\"].mean()\n    childNumber.append(xx)\n    childCharges.append(yy)\n    \nplt.figure(figsize=(12,5))\nplt.subplot(1,2,1)\nsns.barplot(x = children, y = childNumber, palette= \"rocket\")\nplt.title(\"Average age by child number\", color = \"purple\")\nplt.xlabel(\"child number\")\nplt.ylabel(\"age mean\")\nplt.subplot(1,2,2)\nsns.barplot(x = children, y = childCharges, palette=\"crest\")\nplt.title(\"Average charges by child number\", color = \"blue\")\nplt.xlabel(\"child number\")\nplt.ylabel(\"charges mean\")\n\nplt.show()","a304c788":"smoker = [\"yes\", \"no\"]\n\nsmokerAge = []\nsmokerCharges = []\n\nfor each in smoker:\n    smokerDistinction = data[data[\"smoker\"] == each]\n    xxx = smokerDistinction[\"age\"].mean()\n    yyy = smokerDistinction[\"charges\"].mean()\n    smokerAge.append(xxx)\n    smokerCharges.append(yyy)\n\n    \nplt.figure(figsize=(11,10))\nplt.subplot(2,2,1)\nsns.barplot(x = smoker, y = smokerAge, palette= \"Greens\")\nplt.title(\"average age by smoking status\", color = \"darkgreen\")\nplt.xlabel(\"smoker\")\nplt.ylabel(\"age mean\")\nplt.subplot(2,2,2)\nsns.barplot(x = smoker, y = smokerCharges, palette=\"crest\")\nplt.title(\"Average charges by child number\", color = \"blue\")\nplt.xlabel(\"smoker\")\nplt.ylabel(\"charges mean\")\nplt.subplot(2,2,(3,4))\nsns.boxplot(x=\"smoker\", y=\"charges\", hue=\"children\", linewidth=2.2, fliersize= 3.2 ,data=data, saturation=1, palette=\"YlOrRd\")\n\nplt.show()","21fde50d":"regionCharges = []\nregionBmi = []\n\nfor each in regions:\n    regionn = data[data[\"region\"] == each]\n    bmiRegion = regionn[\"bmi\"].mean()\n    chargesRegion = regionn[\"charges\"].mean()\n    regionCharges.append(chargesRegion)\n    regionBmi.append(bmiRegion)\n    \nplt.figure(figsize=(11,10))\nplt.subplot(2,2,1)\nsns.barplot(x = regions, y = regionCharges, palette= \"Greens\")\nplt.title(\"charges by region\", color = \"darkgreen\")\nplt.xlabel(\"regions\")\nplt.ylabel(\"charges mean\")\nplt.subplot(2,2,2)\nsns.barplot(x = regions, y = regionBmi, palette=\"crest\")\nplt.title(\"bmi by region\", color = \"blue\")\nplt.xlabel(\"regions\")\nplt.ylabel(\"bmi mean\")\n\nplt.show()","68d42fb4":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nplt.hist(data[\"charges\"], color=\"pink\")\nplt.xlabel(\"charges\")\nplt.ylabel(\"Frequency\")\nplt.title(\"charges histogram\", color = \"darkred\")\nplt.subplot(1,2,2)\nsns.distplot(data[\"charges\"], fit=norm)\nplt.title(\"charges Distplot\", color = \"darkred\")\n\nplt.show()","21137253":"data[\"sex\"] = [0 if i == \"female\" else 1 for i in data[\"sex\"]]\ndata[\"sex\"] = data[\"sex\"].astype(\"category\")\ndata = pd.get_dummies(data, columns= [\"sex\"])\ndata.head()","4dfa5035":"g = sns.factorplot(x = \"children\", y = \"charges\", data = data, kind = \"bar\")\ng.set_ylabels(\"Charges Probability\")\nplt.show()","52965667":"data[\"children\"] = data[\"children\"].astype(\"category\")\ndata = pd.get_dummies(data, columns= [\"children\"])\ndata.head()","19988c44":"data[\"smoker\"] = [0 if i == \"no\" else 1 for i in data[\"smoker\"]]","36b3c72d":"plt.figure(figsize=(5,3))\nsns.countplot(x=\"smoker\", data = data)\nplt.xticks(rotation = 60)\nplt.show()","920f1344":"g = sns.factorplot(x = \"smoker\", y = \"charges\", data = data, kind = \"bar\")\ng.set_ylabels(\"Charges Probability\")\nplt.show()","1efc2990":"data[\"smoker\"] = data[\"smoker\"].astype(\"category\")\ndata = pd.get_dummies(data, columns= [\"smoker\"])\ndata.head()","992360a7":"data[\"region\"] = [0 if i == \"southeast\" else 1 if i == \"southwest\" else 2 if i == \"northwest\" else 3 for i in data[\"region\"]]","fc350c4b":"plt.figure(figsize=(6,4))\nsns.countplot(x=\"region\", data = data)\nplt.xticks(rotation = 60)\nplt.show()","30ec6f0d":"g = sns.factorplot(x = \"region\", y = \"charges\", data = data, kind = \"bar\")\ng.set_ylabels(\"Charges Probability\")\nplt.show()","4457fc93":"data[\"region\"] = data[\"region\"].astype(\"category\")\ndata = pd.get_dummies(data, columns= [\"region\"])\ndata.head()","c0cf5f88":"(mu, sigma) = norm.fit(data[\"charges\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"charges\", mu, \"charges\", sigma))\n","eb8b6ce8":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(data[\"charges\"], fit=norm)\nplt.title(\"charges Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(data[\"charges\"], plot = plt)\nplt.show()","2e241807":"data[\"charges\"] = np.log1p(data[\"charges\"])","e531746e":"(mu, sigma) = norm.fit(data[\"charges\"])\nprint(\"mu {} : {}, sigma {} : {}\".format(\"charges\", mu, \"charges\", sigma))","cc230f3c":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(data[\"charges\"], fit=norm)\nplt.title(\"charges Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(data[\"charges\"], plot = plt)\nplt.show()","f829f0aa":"from sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, GridSearchCV, RandomizedSearchCV\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import r2_score\nfrom sklearn import metrics\nfrom sklearn.ensemble import RandomForestRegressor\nfrom yellowbrick.regressor import PredictionError\nfrom xgboost import XGBRegressor, XGBRFRegressor\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor","8e3f03ec":"data.head()","6d764d7b":"y = data.charges\nX = data.drop([\"charges\"], axis = 1)","93c5aec1":"test_size = 0.2\nX_train, X_test, Y_train, Y_test = train_test_split(X, y, test_size = test_size, random_state = 20)","8297aabe":"print(\"X_train shape {}, len {}.\".format(X_train.shape,len(X_train)))\nprint(\"X_test shape {}, len {}.\".format(X_test.shape,len(X_test)))\nprint(\"Y_train shape {}, len {}.\".format(Y_train.shape,len(Y_train)))\nprint(\"Y_test shape {}, len {}.\".format(Y_test.shape,len(Y_test)))\n","6c40672d":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train) \nX_test = scaler.transform(X_test) ","fbc7a70f":"result = []","5e60afc8":"multiple_linear = LinearRegression()\nmultiple_linear.fit(X_train, Y_train)\npredict = multiple_linear.predict(X_test)\nscore = r2_score(Y_test,predict)\nresult.append(score)","960e7acf":"print(\"r_square score --> \",score)\nprint('Mean Absolute Error -->', metrics.mean_absolute_error(Y_test, predict))\nprint('Mean Squared Error -->', metrics.mean_squared_error(Y_test, predict))\nprint('Root Mean Squared Error -->', np.sqrt(metrics.mean_squared_error(Y_test, predict)))","04b0295c":"df_linearRegression = pd.DataFrame({'Actual': Y_test, 'Predicted': predict})\ndf_linearRegression.head()","53c736b6":"visualizer = PredictionError(multiple_linear)\nvisualizer.fit(X_train, Y_train)  \nvisualizer.score(X_test, Y_test)        \nvisualizer.show();","4e3a70b5":"n_estimators = [int(x) for x in np.linspace(start = 200, stop = 2000, num = 10)]\nmax_features = ['auto', 'sqrt']\nmax_depth = [int(x) for x in np.linspace(10, 110, num = 11)]\nmax_depth.append(None)\nmin_samples_split = [2, 5, 10]\nmin_samples_leaf = [1, 2, 4]\nbootstrap = [True, False]\n\nrf_param_grid = {'n_estimators': n_estimators,\n               'max_features': max_features,\n               'max_depth': max_depth,\n               'min_samples_split': min_samples_split,\n               'min_samples_leaf': min_samples_leaf,\n               'bootstrap': bootstrap}","c477ac13":"rf = RandomForestRegressor()\nrf_random = RandomizedSearchCV(estimator = rf, param_distributions = rf_param_grid, n_iter = 100, cv = 3, verbose=2, random_state=42, n_jobs = -1)\nrf_random.fit(X_train, Y_train)\nrf_predict = rf_random.predict(X_test)\nscore_rf = r2_score(Y_test,rf_predict)\nresult.append(score_rf)","3d7d8986":"print(\"r_square score --> \",score_rf)\nprint('Mean Absolute Error -->', metrics.mean_absolute_error(Y_test, rf_predict))\nprint('Mean Squared Error -->', metrics.mean_squared_error(Y_test, rf_predict))\nprint('Root Mean Squared Error -->', np.sqrt(metrics.mean_squared_error(Y_test, rf_predict)))","e50ad310":"df_RandomForestRegressor = pd.DataFrame({'Actual': Y_test, 'Predicted': rf_predict})\ndf_RandomForestRegressor.head()","1a951f25":"visualizer = PredictionError(rf_random)\nvisualizer.fit(X_train, Y_train)  \nvisualizer.score(X_test, Y_test)        \nvisualizer.show();","48e65251":"xgb =  XGBRegressor(max_depth = 2, learning_rate = .2)\nxgb.fit(X_train,Y_train)\nxgb_predict = xgb.predict(X_test)\nscore_xgb = r2_score(Y_test,xgb_predict)\nresult.append(score_xgb)","4de7c360":"print(\"r_square score --> \",score_xgb)\nprint('Mean Absolute Error -->', metrics.mean_absolute_error(Y_test, xgb_predict))\nprint('Mean Squared Error -->', metrics.mean_squared_error(Y_test, xgb_predict))\nprint('Root Mean Squared Error -->', np.sqrt(metrics.mean_squared_error(Y_test, xgb_predict)))","b0d5b3e1":"df_XGBRegressor = pd.DataFrame({'Actual': Y_test, 'Predicted': xgb_predict})\ndf_XGBRegressor.head()","73b4b894":"visualizer = PredictionError(xgb)\nvisualizer.fit(X_train, Y_train)  \nvisualizer.score(X_test, Y_test)        \nvisualizer.show();","4ed050d2":"xgbrf = XGBRFRegressor()\nxgbrf.fit(X_train,Y_train)\nxgbrf_predict = xgbrf.predict(X_test)\nscore_xgbrf = r2_score(Y_test,xgbrf_predict)\nresult.append(score_xgbrf)","38625150":"print(\"r_square score --> \",score_xgbrf)\nprint('Mean Absolute Error -->', metrics.mean_absolute_error(Y_test, xgbrf_predict))\nprint('Mean Squared Error -->', metrics.mean_squared_error(Y_test, xgbrf_predict))\nprint('Root Mean Squared Error -->', np.sqrt(metrics.mean_squared_error(Y_test, xgbrf_predict)))","4a65f3a3":"df_XGBRFRegressor = pd.DataFrame({'Actual': Y_test, 'Predicted': xgbrf_predict})\ndf_XGBRFRegressor.head()","8f6888cc":"visualizer = PredictionError(xgbrf)\nvisualizer.fit(X_train, Y_train)  \nvisualizer.score(X_test, Y_test)        \nvisualizer.show();","7dff5951":"parameter_mlp = {\n    'hidden_layer_sizes': [(50,50,50), (50,50,50), (50,100,50), (100,)],\n    'activation': ['tanh', 'relu'],\n    'solver': ['sgd', 'adam'],\n    'alpha': [0.0001, 0.05],\n    'learning_rate': ['constant','adaptive'],\n    'max_iter':[400, 500],\n}","2c468296":"model = MLPRegressor()\nclf = GridSearchCV(model, parameter_mlp, n_jobs=-1, cv=3)\nclf.fit(X_train,Y_train)\nmlp_predict = clf.predict(X_test)\nscore_mlp = r2_score(Y_test,mlp_predict)\nresult.append(score_mlp)","ff5ebb64":"print(\"r_square score --> \",score_mlp)\nprint('Mean Absolute Error -->', metrics.mean_absolute_error(Y_test, mlp_predict))\nprint('Mean Squared Error -->', metrics.mean_squared_error(Y_test, mlp_predict))\nprint('Root Mean Squared Error -->', np.sqrt(metrics.mean_squared_error(Y_test, mlp_predict)))","0463c20d":"df_MLPRegressor = pd.DataFrame({'Actual': Y_test, 'Predicted': mlp_predict})\ndf_MLPRegressor.head()","e3b9a3e1":"visualizer = PredictionError(clf)\nvisualizer.fit(X_train, Y_train)  \nvisualizer.score(X_test, Y_test)        \nvisualizer.show();","5844b424":"ridge = Ridge()\nridge.fit(X_train,Y_train)\nridge_predict = ridge.predict(X_test)\nscore_ridge = r2_score(Y_test,ridge_predict)\nresult.append(score_ridge)","97acf37a":"print(\"r_square score --> \",score_ridge)\nprint('Mean Absolute Error -->', metrics.mean_absolute_error(Y_test, ridge_predict))\nprint('Mean Squared Error -->', metrics.mean_squared_error(Y_test, ridge_predict))\nprint('Root Mean Squared Error -->', np.sqrt(metrics.mean_squared_error(Y_test, ridge_predict)))","bc159e80":"df_RidgeRegressor = pd.DataFrame({'Actual': Y_test, 'Predicted': ridge_predict})\ndf_RidgeRegressor.head()","c540878c":"visualizer = PredictionError(ridge)\nvisualizer.fit(X_train, Y_train)  \nvisualizer.score(X_test, Y_test)        \nvisualizer.show();","20761c4e":"knn = KNeighborsRegressor(n_neighbors=5)\nknn.fit(X_train, Y_train)\nknn_predict = knn.predict(X_test)\nscore_knn = r2_score(Y_test,knn_predict)\nresult.append(score_knn)","9baf3f44":"print(\"r_square score --> \",score_knn)\nprint('Mean Absolute Error -->', metrics.mean_absolute_error(Y_test, knn_predict))\nprint('Mean Squared Error -->', metrics.mean_squared_error(Y_test, knn_predict))\nprint('Root Mean Squared Error -->', np.sqrt(metrics.mean_squared_error(Y_test, knn_predict)))","e868fcfc":"df_KNNRegressor = pd.DataFrame({'Actual': Y_test, 'Predicted': knn_predict})\ndf_KNNRegressor.head()","2e7d0fd0":"visualizer = PredictionError(knn)\nvisualizer.fit(X_train, Y_train)  \nvisualizer.score(X_test, Y_test)        \nvisualizer.show();","ce6887e0":"gbr = GradientBoostingRegressor(max_depth=3, random_state=42)\ngbr.fit(X_train, Y_train)\ngbr_predict = gbr.predict(X_test)\nscore_gbr = r2_score(Y_test,gbr_predict)\nresult.append(score_gbr)","f53038b7":"print(\"r_square score --> \",score_gbr)\nprint('Mean Absolute Error -->', metrics.mean_absolute_error(Y_test, gbr_predict))\nprint('Mean Squared Error -->', metrics.mean_squared_error(Y_test, gbr_predict))\nprint('Root Mean Squared Error -->', np.sqrt(metrics.mean_squared_error(Y_test, gbr_predict)))","428b727b":"df_GBRRegressor = pd.DataFrame({'Actual': Y_test, 'Predicted': gbr_predict})\ndf_GBRRegressor.head()","afa3b556":"visualizer = PredictionError(gbr)\nvisualizer.fit(X_train, Y_train)  \nvisualizer.score(X_test, Y_test)        \nvisualizer.show();","99702d9b":"df_result = pd.DataFrame({\"Score\":result, \"ML Models\":[\"LinearRegression\",\"RandomForestRegression\",\n             \"XGBRegression\",\"XGBRFRegression\",\"MLPRegression\",\"RidgeRegression\",\"KNN Regression\",\"Gradient Boosting Regression\"]})","bd881f39":"df_result","de932ce8":"g = sns.barplot(\"Score\", \"ML Models\", data = df_result)\ng.set_xlabel(\"Score\")\ng.set_title(\"Regression Model Results\", color = \"darkred\")\nplt.show()","f2484f03":"<ul>\n    <li style = \"color:black\"> <p style = \"color:black;font-family:Comic Sans MS\" > We take a look at the charges distribution. On the second graph we can see more clearly that there is a tail to the right. We can edit this in the feature review section. It will make our model better.<\/p> <\/li>\n        <li style = \"color:darkblue\"> <p style = \"color:darkblue;font-family:Comic Sans MS\" > this is called positive skewness or right skewness.<\/p> <\/li>\n            <li style = \"color:darkred\"> <p style = \"color:darkred;font-family:Comic Sans MS\" > You can view the skewness in more detail here. <a href = \"https:\/\/www.kaggle.com\/rafetcan\/heart-failure-modeling-skewness-97-5-acc\"> https:\/\/www.kaggle.com\/rafetcan\/heart-failure-modeling-skewness-97-5-acc <\/a>  <\/p> <\/li>\n    \n<\/ul>","745a78ee":"<a id ='28' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Import Model Library<\/h4>","e0f423c9":"<a id ='17' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold;font-family:Comic Sans MS\">children<\/h4>","aeaf095b":"<a id ='34' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\"> \u2463 XGBRF Regression<\/h3>","8570f2b4":"<ul>\n    <li style = \"color:orange\"> <p style = \"color:orange;font-family:Comic Sans MS\" >For KNN, we see the actual result and the results we predicted.<\/p> <\/li>\n<\/ul>","b22676ff":"<a id ='32' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\"> \u2461 Random Forest Regression<\/h3>","a9a09c0b":"<a id ='24' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold;font-family:Comic Sans MS\">smoker<\/h4>","326f97af":"<ul>\n    <li style = \"color:darkblue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We look at the effect of smoking on other characteristics.<\/p> <\/li>\n<\/ul>","a9f79246":"<ul>\n    <li style = \"color:darkred\"> <p style = \"color:darkred;font-family:Comic Sans MS\" >For XGB Regression, we see the actual result and the results we predicted.<\/p> <\/li>\n<\/ul>","9ff54efc":"<a id ='12' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Missing Value<\/h2>\n\n<p style = \"color:darkred;font-family:Comic Sans MS;font-weight:bold\" >We will take a look at if there is any missing data in our data. If there are, we will try to eliminate them.<\/p> ","aa77c4f3":"<ul>\n    <li style = \"color:brown\"> <p style = \"color:brown;font-family:Comic Sans MS\" >For Ridge, we see the actual result and the results we predicted.<\/p> <\/li>\n<\/ul>","2e98f4d1":"<ul>\n    <li style = \"color:darkgreen;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We see that smokers pay more than non-smokers.<\/p> <\/li>\n        <li style = \"color:darkgreen;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >the difference is great, it can have a lot of influence on the model. We can use this by examining it better in the model part.<\/p> <\/li>\n<\/ul>","968b6332":"<ul>\n    <li style = \"color:darkblue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We see the status of other features by region.<\/p> <\/li>\n<\/ul>","f281907e":"<a id ='31' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\"> \u2460 Linear Regression<\/h3>","be786b00":"<ul>\n    <li style = \"color:darkgreen;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We see that men pay more than women. <\/p> <\/li>\n        <li style = \"color:darkgreen;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >Although there is not much difference, we can evaluate this in the model part.<\/p> <\/li>\n<\/ul>","2e3b4ff3":"<a id ='4' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">sex - charges <\/h4>","bf9829a0":"<ul>\n    <li style = \"color:black\"> <p style = \"color:black;font-family:Comic Sans MS\" >For MLP, we see the actual result and the results we predicted.<\/p> <\/li>\n<\/ul>","a2495c65":"<a id ='22' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold;font-family:Comic Sans MS\">Sex<\/h4>","1765b35e":"<ul>\n    <li style = \"color:darkblue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >By gender, we see the status of other traits.<\/p> <\/li>\n<\/ul>","5cf27796":"<a id ='36' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\"> \u2465 Ridge Regression<\/h3>","9332b1f4":"<a id ='19' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold;font-family:Comic Sans MS\">region<\/h4>","ece3e68f":"<a id ='27' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Modeling<\/h2>\n\n<ul>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > Import Model Library <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > Train - Test Split <\/p> <\/li>\n            <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >StandardScaler <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >Linear Regression <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >Random Forest Regression <\/p> <\/li>\n            <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > XGB Regression <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > XGBRF Regression <\/p> <\/li>\n            <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >MLP Regression <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >Ridge Regression<\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >KNN Regression <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >Ridge Regression<\/p> <\/li>\n<\/ul>","2de6219b":"<a id ='18' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold;font-family:Comic Sans MS\">smoker<\/h4>","54f7e5f6":"<a id ='33' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\"> \u2462 XGB Regression<\/h3>","fcea6b7a":"<ul>\n    <li style = \"color:black\"> <p style = \"color:black;font-family:Comic Sans MS\" >As you can see by comparing with the 2 graphs above. We see the fix.<\/p> <\/li>\n<\/ul>","103c8f59":"<ul>\n    <li style = \"color:darkred\"> <p style = \"color:darkred;font-family:Comic Sans MS\" >For Random Forest Regression, we see the actual result and the results we predicted.<\/p> <\/li>\n<\/ul>","5eb4addb":"<a id ='11' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">children - other features<\/h4>","f94ed8e2":"<ul>\n    <li style = \"color:darkgreen\"> <p style = \"color:darkgreen;font-family:Comic Sans MS\" > In the first graph, we see the average wage paid by region. Southeast also we see that the wage paid is higher than the others.<\/p> <\/li>\n        <li style = \"color:darkblue\"> <p style = \"color:darkblue;font-family:Comic Sans MS\" >In the second graph, we look at the bmi by region.<\/p> <\/li>\n<\/ul>","3844a7aa":"<ul>\n    <li style = \"color:black\"> <p style = \"color:black;font-family:Comic Sans MS\" >We look at the effect of the number of children on wages. The effect of 2 and 3 on the model is almost the same, maybe they can be combined, but there is no need for now.<\/p> <\/li>\n<\/ul>","fb2e0c0e":"<ul>\n    <li style = \"color:darkgreen\"> <p style = \"color:darkgreen;font-family:Comic Sans MS\" > In the first graph, the average age of smokers and non-smokers is looked at. <\/p> <\/li>\n        <li style = \"color:darkblue\"> <p style = \"color:darkblue;font-family:Comic Sans MS\" > In the second graph, we look at the impact of smoking status on wages. Here we see that smokers pay much more than non-smokers.<\/p> <\/li>\n            <li style = \"color:darkred\"> <p style = \"color:darkred;font-family:Comic Sans MS\" >In the third graph, we see how the smoking status and also how the number of children affected wages.<\/p> <\/li>\n<\/ul>","7b93c8d0":"<ul>\n    <li style = \"color:darkblue\"> <p style = \"color:darkblue;font-family:Comic Sans MS\" >the result, that is, pretty good compared to the linear regression.<\/p> <\/li>\n<\/ul>","6ccb1d25":"<ul>\n    <li style = \"color:darkgreen\"> <p style = \"color:darkgreen;font-family:Comic Sans MS\" >For XGBRF Regression, we see the actual result and the results we predicted.<\/p> <\/li>\n<\/ul>","71a4466f":"<a id ='6' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">smoker - charges<\/h4>","b732a3a6":"<ul>\n    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong> float64 : <\/strong> bmi, charges <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>int64 : <\/strong> age, children <\/p> <\/li>\n            <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>object : <\/strong> sex, smoker, region <\/p> <\/li>\n<\/ul>","1a2b7546":"<a id ='39' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold\">Model Results<\/h2>","286b9c06":"<a id ='30' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">StandardScaler<\/h4>","18cc4c84":"![Medical.png](attachment:c46b01ab-5866-4525-99cf-57b4be273787.png)\n\n<center><h1 style = \"background:black;color:white;border:0;border-radius:3px;font-family:Comic Sans MS\" >\ud83d\udcdc Introduction<\/h1><\/center>\n\n<p style = \"color:black;font-weight:500;text-indent:20px;font-size:16px;font-family:Comic Sans MS\">In this notebook, we will first examine our data and visualize the features one by one. Later, we will make the features more suitable for the model. We will try all the models mentioned below for this data set. Finally, we will compare all model results.<\/p>\n\n<h2 style = \"background:black;color:white;border:0;border-radius:3px;font-family:Comic Sans MS\">\ud83d\udccb Content :<\/h2>\n\n<ul>\n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#1\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Load and Check Data <\/a> <\/li>\n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#2\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Variable Description <\/a> <\/li>   \n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#3\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Basic Data Analysiss <\/a> <ul> \n        <li style = \"color:lightgray\"><a href = \"#4\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> sex-charges  <\/a><\/li> \n        <li style = \"color:lightgray\"><a href = \"#5\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> children-charges <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#6\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> smoker-charges <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#7\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> region-charges <\/a><\/li>\n                <li style = \"color:lightgray\"><a href = \"#8\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> region-other features <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#9\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> sex-other features <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#10\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\">smoker-other features <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#11\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> children-other features <\/a><\/li><\/ul>            \n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#12\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Missing Value  <\/a> <\/li>\n        <li style = \"color:darkgray;font-size:15px\"> <a href = \"#13\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Visualization <\/a> <ul> \n        <li style = \"color:lightgray\"><a href = \"#14\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> age  <\/a><\/li> \n        <li style = \"color:lightgray\"><a href = \"#15\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> sex <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#16\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> bmi <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#17\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> children <\/a><\/li>\n                <li style = \"color:lightgray\"><a href = \"#18\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> smoker <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#19\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> region <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#20\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\">charges <\/a><\/li>\n<\/ul>   \n         <li style = \"color:darkgray;font-size:15px\"> <a href = \"#21\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Feature Engineering <\/a> <ul> \n        <li style = \"color:lightgray\"><a href = \"#22\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> sex <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#23\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> children <\/a><\/li>\n                <li style = \"color:lightgray\"><a href = \"#24\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> smoker <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#25\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\"> region <\/a><\/li>\n        <li style = \"color:lightgray\"><a href = \"#26\" style = \"color:black;font-weight:500;font-family:Comic Sans MS\">charges <\/a><\/li>\n<\/ul>  \n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#27\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Modeling   <\/a> <ul> <li style = \"color:lightgray\"><a href = \"#28\" style = \"background:white;color:darkgreen;border:0;border-radius:3px;font-family:Impact;font-size:14px\">Import Model Library <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#29\" style = \"background:white;color:darkgreen;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> Train - Test Split <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#30\" style = \"background:white;color:darkgreen;border:0;border-radius:3px;font-family:Impact;font-size:14px\">StandartScaler <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#31\" style = \"background:white;color:darkgreen;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2460 Linear Regression <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#32\" style = \"background:white;color:darkgreen;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2461 Random Forest Regression <\/a><\/li> <li style = \"color:lightgray\"><a href = \"#33\" style = \"background:white;color:darkgreen;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2462 XGB Regression<\/a><\/li> <li style = \"color:lightgray\"><a href = \"#34\" style = \"background:white;color:darkgreen;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2463 XGBRF Regression<\/a><\/li> <li style = \"color:lightgray\"><a href = \"#35\" style = \"background:white;color:darkgreen;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2464 MLP Regression<\/a><\/li> <li style = \"color:lightgray\"><a href = \"#36\" style = \"background:white;color:darkgreen;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2465 Ridge Regression<\/a><\/li> <li style = \"color:lightgray\"><a href = \"#37\" style = \"background:white;color:darkgreen;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2466 KNN Regression<\/a><\/li>  <li style = \"color:lightgray\"><a href = \"#38\" style = \"background:white;color:darkgreen;border:0;border-radius:3px;font-family:Impact;font-size:14px\"> \u2467 Gradient Boosting Regression Regression<\/a><\/li> <\/ul>\n    <li style = \"color:darkgray;font-size:15px\"> <a href = \"#39\" style = \"color:black;font-weight:bold;font-family:Comic Sans MS\"> Model Result <\/a> <\/ul> \n\n","a93778e6":"<ul>\n    <li style = \"color:darkblue;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We look at the effect of the number of children on other characteristics.<\/p> <\/li>\n<\/ul>","e98e8389":"<ul>\n    <li style = \"color:black\"> <p style = \"color:black;font-family:Comic Sans MS\" >we are doing to the regions as we did above.<\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:darkgreen;font-family:Comic Sans MS\" > southeast --> 0<\/p> <\/li>    \n            <li style = \"color:darkgreen\"> <p style = \"color:darkgreen;font-family:Comic Sans MS\" > southwest --> 1<\/p> <\/li>  \n            <li style = \"color:darkgreen\"> <p style = \"color:darkgreen;font-family:Comic Sans MS\" > northwest --> 2<\/p> <\/li>    \n            <li style = \"color:darkgreen\"> <p style = \"color:darkgreen;font-family:Comic Sans MS\" > northeast --> 3<\/p> <\/li>  \n<\/ul>","2e7d89e5":"<ul>\n    <li style = \"color:black\"> <p style = \"color:black;font-family:Comic Sans MS\" > We examined the age feature from different angles. <\/p> <\/li>\n        <li style = \"color:purple\"> <p style = \"color:purple;font-family:Comic Sans MS\" > In the first graph, we see that the average age by regions does not differ much. <\/p> <\/li>\n            <li style = \"color:orange\"> <p style = \"color:orange;font-family:Comic Sans MS\" > In the second graph, we see that there is not a huge difference in the average age by gender. <\/p> <\/li>\n         <li style = \"color:darkblue\"> <p style = \"color:darkblue;font-family:Comic Sans MS\" > In the third graph, we looked at the average age by the number of children. We see that people with 5 children have a lower average age. <\/p> <\/li>\n            <li style = \"color:darkgreen\"> <p style = \"color:darkgreen;font-family:Comic Sans MS\" > In the fourth graph, we see the wages paid according to the average age. We see that the wages paid increase as the age gets older. The highest wages appear between the ages of 51-64. We can use this in the model section. <\/p> <\/li>\n                <li style = \"color:black\"> <p style = \"color:black;font-family:Comic Sans MS\" > In the last graph, we see the distribution of age characteristics according to the normal distribution. In fact, there does not seem to be a big difference with the normal distribution, but it can still be corrected.<\/p> <\/li>\n<\/ul>","5b85b0cc":"<ul>\n    <li style = \"color:darkgreen;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We see the effect of the number of children on the wages paid. <\/p> <\/li>\n        <li style = \"color:darkgreen;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >We see that those with 5 children pay less.<\/p> <\/li>\n<\/ul>","67e3522b":"<ul>\n    <li style = \"color:black\"> <p style = \"color:black;font-family:Comic Sans MS\" >the gender is recorded as male and female. We change this to 0 and 1 so that our model can understand.<\/p> <\/li>\n        <li style = \"color:darkblue\"> <p style = \"color:darkblue;font-family:Comic Sans MS\" > female --> 0<\/p> <\/li>    \n            <li style = \"color:darkblue\"> <p style = \"color:darkblue;font-family:Comic Sans MS\" > male --> 1<\/p> <\/li>    \n<\/ul>","a3082261":"<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS\">\ud83d\udcd6 Import Library<\/h2>","38d359c6":"<ul>\n    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" >Finally, we examine all results by visualizing.<\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" >As it is understood from the graph, we have 4 models above 90 and the best among them is Gradient Boosting Regression.<\/p> <\/li>\n<\/ul>","69cf5be6":"<a id ='16' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold;font-family:Comic Sans MS\">bmi<\/h4>","917cd756":"<a id ='37' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\"> \u2466 KNN Regression<\/h3>","ac4bf514":"<a id ='5' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">children - charges <\/h4>","4a68630c":"<ul>\n    <li style = \"color:darkred\"> <p style = \"color:darkred;font-family:Comic Sans MS\" >For Linear Regression, we see the actual result and the results we predicted.<\/p> <\/li>\n<\/ul>","f9dce69c":"<ul>\n    <li style = \"color:darkblue\"> <p style = \"color:darkblue;font-family:Comic Sans MS\" >We have already taken a look at the first graphic above. We can see from the second graph that we have skewness in our data.<\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:darkgreen;font-family:Comic Sans MS\" >The more data is collected above the middle red line, the better.<\/p> <\/li>\n<\/ul>","081c9b74":"<a id ='29' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Train - Test Split<\/h4>","4af25dcf":"<ul>\n    <li style = \"color:orange\"> <p style = \"color:orange;font-family:Comic Sans MS\" > In the first graph we look at the distribution of bmi. <\/p> <\/li>\n        <li style = \"color:black\"> <p style = \"color:black;font-family:Comic Sans MS\" > We can see from the first graph that it actually has a nice distribution. We supported this with the second chart. Almost the same as the normal distribution. So there is no need to do anything here. <\/p> <\/li>\n<\/ul>","2aa57fa8":"<ul>\n    <li style = \"color:black\"> <p style = \"color:black;font-family:Comic Sans MS\" >We change the data saved as yes and no to 0 and 1.<\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:darkred;font-family:Comic Sans MS\" > no --> 0<\/p> <\/li>    \n            <li style = \"color:darkred\"> <p style = \"color:darkred;font-family:Comic Sans MS\" > yes --> 1<\/p> <\/li>    \n<\/ul>","a15a372f":"<a id ='14' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold;font-family:Comic Sans MS\">Age<\/h4>","f5bf2d2f":"<a id ='25' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold;font-family:Comic Sans MS\">region<\/h4>","8ecb2141":"<a id ='23' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold;font-family:Comic Sans MS\">children<\/h4>","195658a3":"<ul>\n    <li style = \"color:darkred\"> <p style = \"color:darkred;font-family:Comic Sans MS\" >There are many ways to fix this. one here we will use numpy library.<\/p> <\/li>\n<\/ul>","3ac06301":"<a id ='21' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Feature Engineering<\/h2>\n\n<p style = \"color:darkgreen;font-family:Comic Sans MS;font-weight:bold\" >In this section, we will make some corrections that we noted above and we will make the features more suitable for the model.<\/p> \n\n<ul>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > Sex <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > Children <\/p> <\/li>\n            <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >Smoker <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >Region <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >Charges <\/p> <\/li>\n<\/ul>","253b432f":"<a id ='13' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Visualization<\/h2>\n\n<p style = \"color:darkgreen;font-family:Comic Sans MS;font-weight:bold\" >In this section, we will visualize our features one by one and make examinations on graphics.<\/p> \n\n<ul>\n    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > Age <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > Sex <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >Bmi <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" > Children <\/p> <\/li>\n            <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >Smoker <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >Region <\/p> <\/li>\n                <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >Charges <\/p> <\/li>\n<\/ul>","f75e8476":"<a id ='10' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">smoker - other features<\/h4>","5f4a9186":"<ul>\n    <li style = \"color:darkblue\"> <p style = \"color:darkblue;font-family:Comic Sans MS\" >Normal line and the line of the model we created.<\/p> <\/li>\n<\/ul>","9ed59191":"<a id ='38' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\"> \u2467 Gradient Boosting Regression<\/h3>","4a72e629":"<a id ='15' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold;font-family:Comic Sans MS\">Sex<\/h4>","f76d29e9":"<a id ='1' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS\">Load and Check Data<\/h2>","d27d96c7":"<a id ='7' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">region - charges<\/h4>","dd442b49":"<ul>\n    <li style = \"color:red\"> <p style = \"color:red;font-family:Comic Sans MS\" >For Gradient Boosting Regression, we see the actual result and the results we predicted.<\/p> <\/li>\n<\/ul>","7988756c":"<ul>\n    <li style = \"color:purple\"> <p style = \"color:purple;font-family:Comic Sans MS\" >We define the parameters for random forest. We will use these to find the best parameters when building our model.<\/p> <\/li>\n<\/ul>","c778a67d":"<p style = \"text-shadow: 12px 12px 2px #333;color:darkgreen;font-family:Segoe Print;font-weight:bold\" > YES, WE HAVE COME TO AN END. THANK YOU<\/p>","de465a3d":"<ul>\n    <li style = \"color:darkred;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >we see that there is no missing data in the data.<\/p> <\/li>\n<\/ul>","c246b4b1":"<a id ='2' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Variable Description<\/h2>\n\n<ol>\n    <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>age : <\/strong> age of primary beneficiary <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>sex : <\/strong> insurance contractor gender, female, male<\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>bmi : <\/strong> Body mass index, providing an understanding of body, weights that are relatively high or low relative to height,\nobjective index of body weight (kg \/ m ^ 2) using the ratio of height to weight, ideally 18.5 to 24.9 <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>children : <\/strong> Number of children covered by health insurance \/ Number of dependents <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>smoker : <\/strong> Smoking <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>region : <\/strong> the beneficiary's residential area in the US, northeast, southeast, southwest, northwest. <\/p> <\/li>\n        <li style = \"color:darkred\"> <p style = \"color:black;font-family:Comic Sans MS\" > <strong>charges : <\/strong> Individual medical costs billed by health insurance <\/p> <\/li>\n<\/ol>","3bc0ad35":"<a id ='35' ><\/a>\n<h3 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\"> \u2464 MLP Regression<\/h3>","6427fdbb":"<a id ='9' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">sex - other features<\/h4>","b0be01a1":"<a id ='8' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">region - other features <\/h4>","09ff394a":"<a id ='26' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold;font-family:Comic Sans MS\">charges<\/h4>\n\n<ul>\n    <li style = \"color:darkred\"> <p style = \"color:darkred;font-family:Comic Sans MS\" >While examining the charges in the charts above, we noticed that there was skewness. We took notes to fix this. We're going to fix this here.<\/p> <\/li>\n<\/ul>","3bf161e4":"<ul>\n    <li style = \"color:green\"> <p style = \"color:green;font-family:Comic Sans MS\" >We create a Dataframe with all our models and their results.<\/p> <\/li>\n<\/ul>","c64808c8":"<ul>\n    <li style = \"color:purple\"> <p style = \"color:purple;font-family:Comic Sans MS\" > In the first graph we are looking at the effect of gender on bmi. There doesn't seem to be much difference. <\/p> <\/li>\n        <li style = \"color:darkblue\"> <p style = \"color:darkblue;font-family:Comic Sans MS\" > In the second graph, we look at the gender distribution. <\/p> <\/li>\n            <li style = \"color:darkgreen\"> <p style = \"color:darkgreen;font-family:Comic Sans MS\" > In the last graph, we examined the smoking status by gender. they look close to each other as men and women. <\/p> <\/li>\n<\/ul>","2b52571e":"<ul>\n    <li style = \"color:darkgreen;font-family:Segoe Print\" > <p style = \"color:black;font-family:Comic Sans MS\" >we see the fees paid by regions.<\/p> <\/li>\n<\/ul>","505c7d18":"<ul>\n        <li style = \"color:darkblue\"> <p style = \"color:darkblue;font-family:Comic Sans MS\" > We also examined the first graph in the age section. In the second graph, we look at the effect of the number of children on the wages paid. Here, we see that the wage paid by those with 5 children is lower than the others.Let's make a note here. We can use this in the feature review section.<\/p> <\/li>\n<\/ul>","85e9c6c1":"<ul>\n    <li style = \"color:darkblue;font-family:Segoe Print;font-weight:bold\" > <p style = \"color:black;font-family:Comic Sans MS;font-weight:bold\" >we take a look at your data. For things to take shape in our minds. <\/p> <\/li>\n<\/ul>","0140a568":"<ul>\n    <li style = \"color:darkgreen\"> <p style = \"color:darkgreen;font-family:Comic Sans MS\" >We have defined the list in which we will save the model results for later comparison.<\/p> <\/li>\n<\/ul>","6a444eb4":"<a id ='20' ><\/a>\n<h4 style = \"background:black;color:white;border:0;font-family:Segoe Print;font-weight:bold;font-family:Comic Sans MS\">charges<\/h4>","da81f242":"<a id ='3' ><\/a>\n<h2 style = \"background:black;color:white;border:0;font-family:Comic Sans MS;font-weight:bold\">Basic Data Analysis<\/h2>\n\n<p style = \"color:darkred;font-family:Comic Sans MS;font-weight:bold\" >In this section, we will look at the effects of attributes on target attributes and other attributes.<\/p> \n\n<ul>\n    <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > sex - <strong> charges <\/strong> <\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > children - <strong> charges <\/strong> <\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > smoker - <strong> charges <\/strong> <\/p> <\/li>\n        <li style = \"color:darkgreen\"> <p style = \"color:black;font-family:Comic Sans MS\" > region - <strong> charges <\/strong> <\/p> <\/li>\n            <li style = \"color:darkblue\"> <p style = \"color:black;font-family:Comic Sans MS\" >region - <strong> other features <\/strong> <\/p> <\/li>\n                <li style = \"color:darkblue\"> <p style = \"color:black;font-family:Comic Sans MS\" >sex - <strong> other features <\/strong> <\/p> <\/li>\n                <li style = \"color:darkblue\"> <p style = \"color:black;font-family:Comic Sans MS\" >smoker - <strong> other features <\/strong> <\/p> <\/li>\n                <li style = \"color:darkblue\"> <p style = \"color:black;font-family:Comic Sans MS\" >children - <strong> other features <\/strong> <\/p> <\/li>\n<\/ul>"}}