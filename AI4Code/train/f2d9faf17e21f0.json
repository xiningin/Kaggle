{"cell_type":{"4f3e8e8f":"code","9156015b":"code","6ea94c20":"code","37427eee":"code","912d1e82":"code","ba13f653":"code","45b0388c":"code","da5e60d8":"code","4827c010":"code","99292197":"code","19166f18":"code","365152c9":"code","0485b5d9":"code","69205086":"code","2ff4699c":"code","9e3e9d0a":"code","154410e6":"code","613df574":"code","b3316b86":"code","338a1a5e":"code","942f5d54":"code","7097c654":"code","100cb383":"code","92710913":"code","c13ccfec":"code","4d8f959f":"code","05fbeee8":"code","cd6ed8ad":"code","a1ee7e69":"code","8c80d55c":"markdown","bdfe0fae":"markdown","3e89eeb3":"markdown","907c6fb6":"markdown","9443e86c":"markdown","adea6eb2":"markdown","ed87a453":"markdown","20131b08":"markdown","0d31fdac":"markdown","f6d98196":"markdown","34eefdb3":"markdown","207d3868":"markdown","9941b643":"markdown","8550cf41":"markdown","f5ee5e8b":"markdown","44e9ea8b":"markdown","768dc5f3":"markdown","c53df916":"markdown","82434f77":"markdown","694159ed":"markdown","180b01f1":"markdown","8496ac1a":"markdown","73f44195":"markdown","29dd8f18":"markdown","10d1d6ad":"markdown","e9229b43":"markdown","a795174a":"markdown","b4fed305":"markdown"},"source":{"4f3e8e8f":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\n\ndf = pd.read_csv('..\/input\/powerlifting-database\/openpowerlifting.csv', low_memory = False)","9156015b":"df.head()","6ea94c20":"df.info()","37427eee":"cleaned_columns_df = df[['Name','Best3SquatKg','Best3BenchKg','Best3DeadliftKg',\n                         'TotalKg','Sex','Equipment','BodyweightKg','Tested']]\n\ncleaned_columns_df","912d1e82":"cleaned_columns_df['Equipment'].value_counts()","ba13f653":"filt = cleaned_columns_df['Equipment'] == 'Single-ply'\nsingle_ply_df = cleaned_columns_df[filt].drop('Equipment', axis=1).reset_index(drop = True)\nsingle_ply_df.info()","45b0388c":"single_ply_df['Tested'].fillna('Enhanced', inplace = True)\nsingle_ply_df['Tested'].replace('Yes', 'Natural', inplace = True)\nsingle_ply_df['Tested'].value_counts()","da5e60d8":"compete_once_df = single_ply_df.groupby(['Name','Sex',\n                       'Tested'])[['Best3SquatKg','Best3BenchKg',\n                       'Best3DeadliftKg','TotalKg','BodyweightKg']].mean().reset_index()\ncompete_once_df = compete_once_df.dropna()\ncompete_once_df","4827c010":"compete_once_df['WeightClass'] = compete_once_df['BodyweightKg'].apply(float)\n\ndef weight_class(x):\n    for i in range(10, 140, 10):\n        if(x < i):\n            return f\"{str(i-10).zfill(3)} - {i} kg\"\n    return \"130+ kg\"\n    \ncompete_once_df['WeightClass'] = compete_once_df['BodyweightKg'].apply( lambda x: weight_class(x))","99292197":"compete_once_df","19166f18":"pivot_df = compete_once_df.groupby(['WeightClass','Tested','Sex'])['TotalKg'].count().reset_index()\npivot_df.pivot_table(columns=['Tested', 'Sex'], index=['WeightClass'], values='TotalKg')","365152c9":"filt = compete_once_df['WeightClass'].isin(['020 - 30 kg','030 - 40 kg', '120 - 130 kg', '130+ kg'])\ncompete_once_df.drop(index = compete_once_df[filt].index, inplace = True)\n\npivot_df = compete_once_df.groupby(['WeightClass','Tested','Sex'])['TotalKg'].count().reset_index()\npivot_df.pivot_table(columns=['Tested', 'Sex'], index=['WeightClass'], values='TotalKg')","0485b5d9":"clean_df = compete_once_df[compete_once_df['Tested'] == 'Natural'].drop('Tested', axis=1)\nenhanced_df = compete_once_df[compete_once_df['Tested'] == 'Enhanced'].drop('Tested', axis=1)\n\nlred, dred, lblue, dblue = [\"#fb9a99\", \"#e31a1c\", \"#a6cee3\", \"#1f78b4\"]\n\nclean_df.groupby('Sex')['TotalKg'].count()","69205086":"Male_series = clean_df[clean_df['Sex'] == 'M']['TotalKg']\nFemale_series = clean_df[clean_df['Sex'] == 'F']['TotalKg']\n\nplt.close('all')\nplt.figure(figsize = (14, 6))\nsns.set_context(\"notebook\", font_scale = 1.1)\n\nsns.distplot(Female_series, label ='Female', color = dred)\nsns.distplot(Male_series, label ='Male', color = dblue)\nplt.legend()\n\nplt.title('Distribution of Totals by Gender')\nplt.yticks([])\nplt.xticks([0, 100, 200, 300, 400, 500, 600, 700, 800, 900])\nplt.xlim(50, 950)\nplt.xlabel('Total (Kg)')\nplt.ylabel('Percentage of Competitors')\nplt.show()","2ff4699c":"female_mean = Female_series.mean()\nmale_mean = Male_series.mean()\n\nMean_male_v_females = stats.percentileofscore(Female_series, male_mean)\nMean_female_v_males = stats.percentileofscore(Male_series, female_mean)\nprint(f'Average Female Total: {round(female_mean, 1)} kg')\nprint(f'Average Male Total: {round(male_mean, 1)} kg')\nprint()\nprint(f'Average male > {round(Mean_male_v_females, 1)}% of females')\nprint(f'Average female > {round(Mean_female_v_males, 1)}% of males')","9e3e9d0a":"D = male_mean - female_mean\n\nfemale_sd = Female_series.std()\nmale_sd = Male_series.std()\nD_sd = (female_sd**2 + male_sd**2)**0.5\n\nprint(f'Difference: {round(D,1)} kg')\nprint()\nprint(f'Female Standard Deviation: {round(female_sd, 1)} kg')\nprint(f'Male Standard Deviation: {round(male_sd, 1)} kg')\nprint(f\"Difference's Standard Deviation: {round(D_sd, 1)} kg\")","154410e6":"Difference_distribution = np.random.normal(D, D_sd, 100000)\nplt.figure(figsize = (12, 6))\nsns.set_context(\"notebook\", font_scale = 1.1)\n\nax = sns.kdeplot(Difference_distribution, color = dblue, shade = True)\nline = ax.get_lines()[-1]\nx, y = line.get_data()\nmask = x < 0\nx, y = x[mask], y[mask]\nax.fill_between(x, y1=y, alpha=0.5, facecolor= dred, label = 'Female Lifts More')\n\nmask = x >= 0\nx, y = x[mask], y[mask]\nax.fill_between(x, y1=y, alpha=0.5, facecolor= dblue, label = 'Male Lifts More')\n\n\nplt.title('Random Male Total - Random Female Total, Distribution')\n# plt.axvline(x = 0, ymax = 0.4, label = '0 kg', color = 'red')\nplt.legend()\nplt.xlabel('Total (Kg)')\n\nplt.yticks([])\nplt.xlim(-400, 800)\n# plt.xticks([0, 100, 200, 300, 400, 500, 600, 700, 800, 900])\n\nplt.show()","613df574":"z_score = D\/D_sd\nprint(f\"Z-score: {round(z_score, 2)}\")\nprint(f\"Probability: {round(stats.norm.cdf(z_score)*100,2)}%\")","b3316b86":"E_Male_series = enhanced_df[enhanced_df['Sex'] == 'M']['TotalKg']\nE_Female_series = enhanced_df[enhanced_df['Sex'] == 'F']['TotalKg']\n\nE_D = E_Male_series.mean() - E_Female_series.mean()\n\nE_female_sd = E_Female_series.std()\nE_male_sd = E_Male_series.std()\nE_D_sd = (E_female_sd**2 + E_male_sd**2)**0.5\n\nprint(f'Enhanced Difference: {round(E_D,1)} kg')\nprint(f\"Enhanced Difference's Standard Deviation: {round(E_D_sd, 1)} kg\")","338a1a5e":"E_z_score = E_D\/E_D_sd\nprint(f\"Z-score: {round(E_z_score, 2)}\")\nprint(f\"Probability: {round(stats.norm.cdf(E_z_score)*100,2)}%\")","942f5d54":"plt.clf()\nMvF_df = clean_df.groupby(['WeightClass', 'Sex']).TotalKg.mean().reset_index()\nplt.figure(figsize = (14, 7))\nsns.set_context(\"notebook\", font_scale = 1.1)\nsns.set_palette([lred, lblue])\n\nplt.xticks(rotation =20)\nplt.title('Male Vs Female - Strength to Weight Distribution')\nsns.set_context(\"talk\")\n\nsns.barplot(data = MvF_df, x = 'WeightClass', y = 'TotalKg', hue = 'Sex')\nplt.ylim(100, 575)\nplt.show()","7097c654":"s_score_df = clean_df.drop(['Best3SquatKg','Best3BenchKg','Best3DeadliftKg'], axis = 1)\ns_score_df['T\/BW'] = s_score_df['TotalKg']\/s_score_df['BodyweightKg']\n\nwc_s_score_df = s_score_df.groupby(['WeightClass'])['T\/BW'].mean().reset_index()\nwc_s_score_df.columns = ['WeightClass', 'WC-T\/BW']\n\ns_score_df = s_score_df.merge(wc_s_score_df, how='left')\ns_score_df['S_score'] = s_score_df['T\/BW']\/s_score_df['WC-T\/BW']\ns_score_df.drop(columns = ['T\/BW','WC-T\/BW'], inplace = True)\ns_score_df","100cb383":"E_Male_series = s_score_df[s_score_df['Sex'] == 'M']['S_score']\nE_Female_series = s_score_df[s_score_df['Sex'] == 'F']['S_score']\n\nE_D = E_Male_series.mean() - E_Female_series.mean()\n\nE_female_sd = E_Female_series.std()\nE_male_sd = E_Male_series.std()\nE_D_sd = (E_female_sd**2 + E_male_sd**2)**0.5\n\nprint(f'S_score Difference: {round(E_D,2)*100}%')\nprint(f\"S_score Difference's SD: {round(E_D_sd, 2)*100}%\")","92710913":"E_z_score = E_D\/E_D_sd\nprint(f\"Z-score: {round(E_z_score, 2)}\")\nprint(f\"Probability: {round(stats.norm.cdf(E_z_score)*100,2)}%\")","c13ccfec":"resp_vars = ['Best3SquatKg','Best3BenchKg','Best3DeadliftKg','TotalKg']\nMG_averages_df = compete_once_df.groupby(['Tested','Sex'])[resp_vars].mean().reset_index()\nMG_averages_df","4d8f959f":"print(\"Female average strength as a proportion of male's:\")\nprint(f\"Upper body(bench press): {round(55.2\/112.8 *100, 1)}%\")\nprint(f\"Lower body(squat): {round(106.8\/177.6 *100, 1)}%\")\nprint(f\"Back(deadlift): {round(115.1\/187.1 *100, 1)}%\")","05fbeee8":"MG_percents_df = MG_averages_df[['Tested','Sex']].copy()\n\nfor var in resp_vars:\n    MG_percents_df[var] = round(MG_averages_df[var]\/MG_averages_df['TotalKg']*100, 1)\n\nMG_percents_df['Tested-Sex'] = MG_percents_df['Sex'] + ' - ' + MG_percents_df['Tested']\nMG_percents_df.drop(['TotalKg', 'Sex', 'Tested'], axis = 1, inplace=True)\nMG_percents_df.columns = ['Squat\/legs', 'Bench\/chest', 'Deadlift\/back', 'Tested-Sex']\nMG_percents_df","cd6ed8ad":"MG_percents_df = pd.melt(frame=MG_percents_df, id_vars = ['Tested-Sex'], value_vars = ['Squat\/legs',\n    'Bench\/chest', 'Deadlift\/back'], value_name =\"% of Total\", var_name = 'Lift')\nMG_percents_df = MG_percents_df.sort_values(['Tested-Sex'])\nMG_percents_df","a1ee7e69":"plt.close('all')\n\ndef display_figures(ax,df):\n    show=df['% of Total'].to_list()\n    i=0\n    for p in ax.patches:\n        h=p.get_height()\n        if (h>0):\n            value= str(show[i])+\"%\"\n            ax.text(p.get_x()+p.get_width()\/2,h+1, value, ha='center')\n            i=i+1\n            \nplt.figure(figsize = (14, 7))\nsns.set_context(\"notebook\", font_scale = 1.1)\nsns.set_palette([lred, dred, lblue, dblue])\n\nax = sns.barplot(data = MG_percents_df, x = 'Lift', y = '% of Total', hue ='Tested-Sex')\nplt.ylim(15, 47)\nplt.title('Muscle Group Strength Comparison')\n# plt.yticks([15,25,35,45])\ndisplay_figures(ax, MG_percents_df)\n\nplt.show()","8c80d55c":"If we want to plot this easily, we will need to re-arrange (melt) the data so there is only one response variable per row.","bdfe0fae":"## Checking for Data Sufficiency by Group\nLet's ensure we have enough competitors in each of the categories we are going to compare. We will make and compare groups based on the three explanatory variables outlined earlier: Sex, Tested and WeightClass, to ensure a sufficient number of competitors in each category.","3e89eeb3":"Interestingly the 40-50 kg looks to be the most competitive between the sexes. Perhaps they are young and the females there have hit puberty first? Or perhaps non-adult males are competing against fully developed, but same weight females. \n\nControlling for age, and finding the weight class with the most similar performance are out of the scope report unfortunately. We need to standardize all competitors based on weight, not merely group them into weight classes. Powerlifters have long pondered this problem, and come up with a [number](https:\/\/en.wikipedia.org\/wiki\/Wilks_Coefficient) of complex formulas to compare competitors controlling for weight, age, sex and even the specific lift. These are all highly granular and overly customized, for our more general goal of a generic strength to weight equalizer.\n\nThere also doesn't seem to be a popular generic body weight to strength equalisation formula and creating a new formula is out of scope of this project. So, I will do my own approximate conversion and call it the Steven Score, or S_score for short:\n1. Total \/ Body Weight, for all competitors\n2. Average the T\/BW ration for each weight class. Lower weightclasses will have a higher T\/BW ration.\n3. Divide the competitors T\/BW ration, by their weight class's T\/BW ratio. This will result in the S_score\n\nAn S_score of 1 indicates the competitor has an exactly average T\/BW ration for their weight class. > 1 indicates they are strong for their weight class, and < 1 indicates they are weaker than average for their weight class.","907c6fb6":"**Conclusion:**\n\nWe can see that there is an 89.45% chance of the male being stronger, if one competitor from each sex are selected at random.","9443e86c":"As we can see above, the Difference = 192 kg and the Difference's standard deviation = 154 kg. So -192kg below the mean, is the point at which females lift the same as males. Therefore -192kg\/155 kg indicates how many standard deviations that point is.","adea6eb2":"# The Results\n\n## Random Male Vs Female\nLet's make two data tables. One for Natural competitors and one for Enhanced. We will be looking at natural competitors only, unless specified otherwise. Then, let's see a distribution plot of total weights lifted by gender, with the two group sizes normalized.","ed87a453":"This give us an idea of the distribution. What percent of females can the average (mean) male best? How many males would the mean female beat? let's calculate.","20131b08":"**Conclusion:**\n\nWe can see that males are disproportionately strong in the benchpress, and females are disproportionately strong at deadlift. We can speculate that female performance will be more similar to that of males in sports which use more back strength, such as rock climbing, but the gender differences will be most pronounced in sports like boxing.","0d31fdac":"Let's calculate the Z-score again for the Difference between sexes of enhanced competitors(243.5 kg) divided by their standard deviation (172.4 kg).","f6d98196":"# Removing Extraneous Data\n\n## Reading the Data\nFirst let's import the modules we will need to analyze the data and the raw data.","34eefdb3":"## Filtering Equipment Level\nThere are a number of different levels of assistance equipment you can use in powerlifting.","207d3868":" ## Weight Classes\n\nEarlier I excluded the weight classes, because they were inconsistent and overlapping. However, we still need to group people by weight class for fair comparison. Let's calculate new weight classes.\n\nIn the WeightClass column we will have a 0 precede the start i.e., '050 - 60Kg'. This way WeightClass in descending order, shows the two-digit before the three-digit weight class.","9941b643":"Now let's compare (for a third time) a random male vs random female, but this time looking at the S_score.","8550cf41":"Does this suggest male competitors are stronger than females 98.4% or 94.9% of the time? Actually neither. The **mean** competitor is not the same as a **random** competitor from each. This was just a \"fun\" detour. To calculate the chances of a random male being stronger than a random female, we have to:\n1. Subtract the mean male from the mean female to get D (difference)\n2. Calculate the standard deviation of D. = squareroot((female SD)^2 + (male SD)^2)\n3. Find the Z-score of 0, in the distribution of D\n4. Convert that to a probabilty percentage","f5ee5e8b":"# Fixing Data\n## Tested Vs Untested Competitors\nBodybuilding and powerlifting are PED (Performance Enhancing Drugs) using sports, by default. There are two different leagues, so that non-PED using atheletes can compete separately. However, since PED use is illegal, they are shy about it in their naming conventions, so you have Bodybuilding and Natural Bodybuilding. And, in the case of powerlifting we seem to have Powerlifting, and Tested Powerlifting. \n\nFor ease of reading going forward, let's call them \"Natural\" and \"Enhanced\" instead of the much less clear \"Yes\" and NaN.","44e9ea8b":"## Selecting Columns\nWe can use \"Name\" as the unique ID for competitors. This allows us to count each competitor once, instead of every time they competed. \n\n- We are also able to see the response variables (\"lifts\") broken down into individual attempts, as well as aggregates such as best lift and total lift:\n  - \"Best3SquatKg\"\n  - \"Best3BenchKg\"\n  - \"Best3DeadliftKg\"\n  - \"TotalKg\"\n  \n- And finally we can see all of the desired explanatory variables: \n  - \"Sex\"\n  - \"Equipment\"\n  - \"BodyweightKg\"\n  - \"Tested\"\n\nLet's make a new dataframe with only the relevant columns we outlined earlier, to make future data manipulation faster. We go from 37 columns to 9.","768dc5f3":"# Strength Differences in Powerlifting by Gender\nUsing Powerlifting data from [OpenPowerLifting.org](http:\/\/www.openpowerlifting.org\/data.html), we will examine the probabilities of a random male competitor being stronger than a random female competitor.\n\nIn order to easily follow this report it is important to be familiar with the following terminology:\n- **Weight:** a competitor's body weight in kg\n- **Lift:** Deadlift, benchpress, and squat are the three \"lifts\" in powerlifting. A lift is the competitor's highest completed \"attempt\" for each lift\n- **Total:** the total kg of a competitor's three lifts in a given competition\n\n## Questions This Report Answers\nWe will answer the probability of a random male being stronger than a random female in the following scenarios:\n\n1. Random Natural Competitors\n2. Random Enhanced\n3. Normalized for Weight\n4. Comparing Muscle Groups","c53df916":"## Table of Contents\n \n1. **Removing Extraneous Data**\n  1. [Reading the Data](#Reading-the-Data)\n  2. [Selecting Columns](#Selecting-Columns)\n  3. [Filtering Equipment Level](#Filtering-Equipment-Level)\n  \n  \n2. **Fixing Data**\n  1. [Tested Vs Untested Competitors](#Tested-Vs-Untested-Competitors)\n  2. [Count Each Athlete Once](#Count-Each-Athlete-Once)\n  3. [Weight Classes](#Weight-Classes)\n  4. [Checking for Data Sufficiency by Group](#Checking-for-Data-Sufficiency-by-Group)\n \n  \n3.  **The Results**\n  1. [Random Male Vs Female](#Random-Male-Vs-Female)\n  2. [Enhanced Competitor Sex Differences](#Enhanced-Competitor-Sex-Differences)\n  3. [Equalizing for Weight](#Equalizing-for-Weight)\n  4. [Strength Differences by Muscle Group](#Strength-Differences-by-Muscle-Group)","82434f77":"- The '020 - 30Kg' weight class has no enhanced competitors\n- The '030 - 40Kg' weight class has just a single enhanced competitor\n- The '120 - 130Kg' and '130+Kg' only has single digit participation from (drug) enhanced females\n\nLet's get rid of the weight classes with single digit participation rates.","694159ed":"**Conclusion:**\n\nThe probably of a random male being stronger than a random female actually increased from 89.45% to 92.42%, when allowing for performance enhancing drugs.","180b01f1":"From looking at just the head of the data-frame, we see that some columns are hidden. We need to know all of the data we have access to.","8496ac1a":"## Strength Differences by Muscle Group\nThe three lifts of powerlifting: the benchpress, squat and deadlift, use primarily the chest, leg and back muscle groups, respectively. It is a common belief\/saying in the powerlifting community that females' [\"upper body strength averages around 55% of a male\u2019s and lower body strength around 70%\"](https:\/\/www.strengthminded.com\/what-is-relative-strength\/). Is this trend true? and to what extent?\n\nLet's make a table looking at the average of each lift for each sex,. We can then answer the above side question. Let's also see what percent of the Total each lift makes up for each class of competitors.","73f44195":"## Count Each Athlete Once\nWe need to count each person only once, rather than every time they lift. \n\n1. Let's count each competitor once, based on their average lifts and average bodyweight.\n2. Now that we have filled the blank columns as much as we ever will, we should drop any records that don't have all the columns populated.\n\nBy counting each name\/competitor just once, we go down from 787,141 to 221,589 records. And when we drop the records that are still missing data, we go down to 175,378 records.","29dd8f18":"Let's see if we can remove uncommon ones:\n\n- **Single-ply** has the least amount of variation in equipment and the largest number of records, so let's go with that.\n- ~~Straps~~ are not allowed in competition powerlifting unless the lifter has a physical disability requiring them. Additionally the number of lifts done under this condition are negligible, so let's eliminate it.\n- ~~Wraps~~ are used in all single-ply and up power lifting. Some federations allows wraps in Raw and some do not. So for it to be in it's own category, they must mean that it is Raw, except for the addition of wraps. Because it isn't clear if this category only includes raw + wraps or is x-ply + wraps, let's cut it.\n- ~~Multi-ply~~ also employs varying amounts of equipment for each lifter, and is not the largest category. Let's eliminate it.\n- ~~Raw~~ was what I initially intended to analyze, as it allows the least amount of equipment.\n\nThis will bring us down from 1,423,354 records to 787,141. We can also drop the \"Equipment\" after having filtered for only Single-ply.","10d1d6ad":"## Enhanced Competitor Sex Differences\n\n\n","e9229b43":"Let's calculate the Z-score again for the Difference between sexes of enhanced competitors (243.5 kg) divided by their standard deviation (172.4 kg).","a795174a":"## Equalizing for Weight\nOn average males have a weight advantage over females. It intuitively makes sense, that if we control for weight, then the female win% should increase right? Perhaps. When we control for weight, we may generally be adjusting male performance down, however, in the cases where females were stronger, if they weighed more than their male counterpart, normalizing for weight will make them worse off. \n\nLet's get an initial overview of Totals, this time controlling for weight class.","b4fed305":"**Conclusion:**\n\nThe probabilty of a random male being stronger than a random female dropped significantly (89.45% -> 77.88%) when controlling for weight."}}