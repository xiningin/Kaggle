{"cell_type":{"48ee5779":"code","a5d42500":"code","a411b8c4":"code","c096d794":"code","f959caf6":"code","6ae2e5a8":"code","4a6a3806":"code","706c3172":"code","8bfee44e":"code","cac2cf41":"code","b0f4337c":"markdown","f1374a2c":"markdown","568ad586":"markdown","9c412075":"markdown","c4994f54":"markdown","e2cc7d37":"markdown","3463e16d":"markdown","e05a1cda":"markdown","409fc684":"markdown"},"source":{"48ee5779":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","a5d42500":"dataset = pd.read_csv('..\/input\/Social_Network_Ads.csv')\nX = dataset.iloc[:, [2,3]].values\ny = dataset.iloc[:, 4].values","a411b8c4":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)\n","c096d794":"from sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nX_train = sc_X.fit_transform(X_train)\nX_test = sc_X.transform(X_test)","f959caf6":"from sklearn.svm import SVC\nclassifier=SVC(kernel='rbf',gamma='auto',random_state=0)\nclassifier.fit(X_train,y_train)\n","6ae2e5a8":"y_pred=classifier.predict(X_test)\nprint(y_pred)","4a6a3806":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred)\nprint(cm)\n","706c3172":"from sklearn.metrics import accuracy_score\nacc=accuracy_score(y_test, y_pred)\nprint(acc)","8bfee44e":"from matplotlib.colors import ListedColormap\nX_set, y_set = X_train, y_train\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('red', 'green'))(i), label = j)\nplt.title('Classifier (Training set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()","cac2cf41":"from matplotlib.colors import ListedColormap\nX_set, y_set = X_test, y_test\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('red', 'green'))(i), label = j)\nplt.title('Classifier (Test set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()\n\n","b0f4337c":" Visualising the Training set results\n","f1374a2c":"importing dataset to x and y","568ad586":" Visualising the Test set results\n","9c412075":" Feature Scaling","c4994f54":"importing library\n*  NumPy is a package in Python used for Scientific Computing. The ndarray (NumPy Array) is a multidimensional array used to store values of same datatype\n* matplotlib.pyplot for data visualization \n* pandas for data manipulation  \n","e2cc7d37":"Splitting the dataset into the Training set and Test set","3463e16d":"fitting model","e05a1cda":"confusion_matrix","409fc684":"Predicting a new result"}}