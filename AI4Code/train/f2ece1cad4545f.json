{"cell_type":{"8817619e":"code","538bb81a":"code","447f5795":"code","e0a8bb4f":"code","895ed78c":"code","e7532058":"code","e4856767":"code","cc8e7da7":"code","6f7bb1b2":"code","e6171a3a":"code","d04cf2a7":"markdown","2679744b":"markdown"},"source":{"8817619e":"# Install latest folium because popup doesn't seem to work with current Kaggle folium 0.5.0\n!pip install folium==0.9.0","538bb81a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport folium\nfrom folium import IFrame\n\nTWEET_FILE = 'auspol2019.csv'\nGEOCODE_FILE = 'location_geocode.csv'\nINPUT_PATH = '..\/input\/'\nLOCATION_GEOCODE_DATA = '..\/data\/location_geocode.csv'","447f5795":"# Read in the tweet file\ndf = pd.read_csv(INPUT_PATH + TWEET_FILE)\ndf.shape","e0a8bb4f":"# Get a count of tweets grouped by location\nloc_grouped_df = df[['user_location', 'id']].groupby('user_location', sort=False).count().sort_values(['id'], ascending=False)\nloc_grouped_df.columns=['count']\nloc_grouped_df.reset_index(inplace=True)\nloc_grouped_df.head(10)","895ed78c":"# Read in the geocode file\ngeocode_df = pd.read_csv(INPUT_PATH + GEOCODE_FILE)\ngeocode_df.shape","e7532058":"# Add the count column to the geocode dataframe\ngeocode_df = geocode_df.merge(loc_grouped_df, how='left', left_on='name', right_on='user_location')\ngeocode_df.shape","e4856767":"# Number of locations that were not found\ngeocode_df[geocode_df['lat'].isnull()].shape","cc8e7da7":"# Remove nulls\ngeocode_df.dropna(inplace=True)\ngeocode_df.shape","6f7bb1b2":"# Remove non-alphanum characters from names to avoid breaking folium\ngeocode_df['name'] = geocode_df['name'].str.replace('[^a-zA-Z\\s,]', '')","e6171a3a":"# Make an empty Folium map\n\nm = folium.Map(location=[20,0], tiles=\"Mapbox Bright\", zoom_start=2)\n\n# Add markers one by one\nfor i in range(0,len(geocode_df)):\n    folium.Circle(\n      # .item() to avoid json errors by converting numpy.int64 to regular ints.\n      location=[geocode_df.iloc[i]['lat'].item(), geocode_df.iloc[i]['long'].item()], \n      #popup=geocode_df.iloc[i]['name'] + ' ' +str(geocode_df.iloc[i]['count'].item()),\n      radius=geocode_df.iloc[i]['count'].item()*100,\n      color='crimson',\n      fill=True,\n      fill_color='crimson'\n    ).add_to(m)\n\n# Save and display it\nm.save('ausvotes_map.html')\nm\n","d04cf2a7":"You can zoom and pan on the map. Clicking on points for popups showing the location name and count of tweets in that area is commented out because it doens't seem to work when I commit the kernel. The popups work fine when running the kernel interactively in edit mode. (If anyone knows why please let me know and I can fix it.) It also works fine locally.\n\nThe results are not unexpected. Apart from Australia, many tweets come from the UK and US. Also quite a few from Europe, India and South East Asia. Overall there is actually more interest that I would have predicted coming from all over the world.","2679744b":"I initially scraped Twitter data during the Australia elections with the idea of doing semtiment analysis, however the results of that are less promising. Maybe when they improve I will share another kernel with the results but for now I decided to have some fun and make a pretty map showing where all the tweets came from. "}}