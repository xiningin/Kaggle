{"cell_type":{"18fe0e41":"code","6a4a05e2":"code","4e9713e7":"code","1bd944a0":"code","1f704fa4":"code","ffff72a0":"code","eb9a352e":"code","597b5377":"code","0a70dfd8":"code","4941b419":"code","994e6a20":"code","82fced79":"markdown","d0c17ce5":"markdown"},"source":{"18fe0e41":"arr = [2,3,4,3,2,1]\nn = 3\n\ndef get_repeats(arr, n):\n    repeats = 0\n    for element in arr:\n        if(n == element):\n            repeats += 1\n    return (repeats)\n\nprint(get_repeats(arr,n))","6a4a05e2":"a = {1:9, 2:8, 3:7, 4:6, 5:5}\na.items()","4e9713e7":"b = {1:9, 2:8, 3:7, 4:6, 5:5}\nb.get(6)","1bd944a0":"try:\n    [1,2,3][4]\nexcept IndexError:\n    print(\"error\")\nfinally:\n    print(\"cleaning up\")","1f704fa4":"a = 7\na.__str__()","ffff72a0":"set([1,2,1]) == set([1,2])","eb9a352e":"def f():\n    f()\n    return(42)\n\nf()","597b5377":"class test():\n    id=0\n    def __init__(self,id):\n        self.id = id\n        id = 2\n\nt = test(1)\nt.id","0a70dfd8":"m=re.search(r'(ab[cd])',\"acdeabdabcde\")\nm.groups()","4941b419":"\n\nx1,y1 = 2,3\nx2,y2 = 3,3\nx3,y3 = 4,4\n\nimport math\n\np1 = (x1, y1)\np2 = (x2, y2)\np3 = (x3, y3)\n\ndef distanct_2points(a, b):\n    #a and b are points with coordintes (x,y)\n    #distanct between a and b is sqrt\n    x1, y1, x2, y2 = a[0], a[1], b[0], b[1]\n    dist=math.sqrt((x2-x1)**2+(y2-y1)**2)\n    return dist\n\n\n#average distance between 3 points\navg_dist = (distanct_2points(p1,p2) + distanct_2points(p2,p3) + distanct_2points(p3,p1))\/3\n\nprint(f\"Average distance between 3 points : { avg_dist } .\")\n    ","994e6a20":"def isPalindrome(s):\n    return s == s[::-1]\n\n# Driver code\ns = \"malwyalam\"\nans = isPalindrome(s)\n \nif ans:\n    print(\"Yes\")\nelse:\n    print(\"No\")","82fced79":"# Snippets to see what each of them return (WIP)","d0c17ce5":"Find average distanct between 3 points (x1,y1),(x2,y2) and (x3,y3)"}}