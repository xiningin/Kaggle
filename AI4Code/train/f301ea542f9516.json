{"cell_type":{"c1897228":"code","81666bc9":"code","6d1c0880":"code","66f8cc91":"code","316db119":"code","e7191ffa":"code","05c8e51c":"code","a7b47b75":"code","b74261ad":"code","c6a66717":"code","1b7bef9b":"code","b0e80f23":"code","5e6ec581":"code","cffa37fd":"code","e2f4e9a3":"code","025dd53c":"code","6543bb72":"code","6bf92d67":"code","4c53b099":"code","971f9295":"code","37d06425":"code","34fb3233":"code","73a9f7e6":"code","b9f0e3d0":"code","7d4bcc73":"code","467d0526":"code","8f4f2e7a":"code","5c0c3087":"code","1af3488c":"code","7fbb3b1b":"code","1168d3ee":"code","18131892":"code","7d934391":"code","21ee8c4d":"code","85a4b0b1":"code","1bb0bdb1":"code","814bae80":"code","434f6868":"code","47540eac":"code","1fd8f7ef":"code","a18997a4":"code","978eed8c":"code","e17b2bfe":"code","818cbe57":"code","e11a1ecb":"code","0fa3b08a":"code","cd253888":"code","2841d092":"code","eb05d598":"code","ea962127":"code","ca197e37":"code","93f39155":"code","91feb2d8":"markdown","ab6c1735":"markdown","67eecf53":"markdown","e0eb6b56":"markdown"},"source":{"c1897228":"import numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","81666bc9":"# Lesen der Daten\ndata = pd.read_csv(\"\/kaggle\/input\/cusersmarildownloadsearningcsv\/earning.csv\", delimiter = \";\")\n\ndata.info()","6d1c0880":"data.head()","66f8cc91":"\n#DATA CLEANING\n# Erstelle eine Liste mit allen relevanten Spalten\nberufe = []\nfor group in data.columns:\n    # Entfernt Spalten die keine wichtigen Informationen f\u00fcr uns haben\n    if group == \"males\":\n        pass\n    elif group == \"persons\":\n        pass\n    elif list(data.columns).index(group) > 1:\n        berufe.append(group)\n\n#berufe\n\n# Umbenennung der Spalten\nlabel_berufe = ['managers',\n                'professionals',\n                'technicians',\n                'serviceworkers',\n                'administration',\n                'sales',\n                'operators',\n                'labourers']\nlabel_gender = ['_f', '_m', '_p']\n\n# Erstellen eines Aufger\u00e4umten DataFrames\nnew_columns = []\nfor gender in label_gender:\n    for beruf in label_berufe:\n        new_columns.append(beruf + gender)\n        \nnew_data = data[berufe]\n#new_data.info()\n\nnew_data.columns = new_columns\n#new_data\n\n# Erg\u00e4nzt das Jahr als Index\nnew_data.index = data[\"year\"]\nnew_data.head()","316db119":"# Mean und Std sind nicht sonderlich n\u00fctzlich f\u00fcr uns,\n# wenn wir uns f\u00fcr eine zeitliche Entwicklung interessieren.\n\nnew_data[\"managers_f\"].describe()","e7191ffa":"# Wir haben uns die Lohnentwicklung einer bestimmten Berufsgruppe angesehen\nplt.plot(new_data[\"managers_f\"], color=\"red\", label=\"managers_f\")\nplt.plot(new_data[\"managers_m\"], color=\"blue\", label=\"managers_m\")\n\nplt.legend()\nplt.title(\"Lohnentwicklung zwischen M\u00e4nner und Frauen\")\nplt.ylabel(\"Mean Stundenlohn in US$\")\nplt.xlabel(\"Jahr\")\n\nplt.show()","05c8e51c":"# Zudem haben wir die Lohndifferenz beider Geschlechter geplottet\n\nplt.plot(new_data[\"managers_m\"] - new_data[\"managers_f\"], label=\"managers\")\nplt.plot(new_data[\"operators_m\"] - new_data[\"operators_f\"], label=\"operators\")\n\n# Nulllinie\nplt.plot(new_data.index, np.zeros(len(new_data.index)), color=\"red\", linestyle=\"--\")\n\nplt.legend()\nplt.xlim(2004, 2017)\nplt.style.use(\"seaborn\")\nplt.title(\"Lohndifferenz zw Mann und Frau\")\nplt.ylabel(\"Lohndifferenz in US$\")\nplt.xlabel(\"Jahre\")\nplt.show()","a7b47b75":"# L\u00e4sst sich auch hard coden\n\nyear = list(new_data.index).index(2015)\nyear","b74261ad":"paygap = - np.array(new_data.iloc[year, 0:8]) + np.array(new_data.iloc[year, 8:16])\n","c6a66717":"plt.bar(label_berufe, paygap)\n\nplt.plot(range(-1, len(label_berufe)+1), np.zeros(len(label_berufe)+2), color=\"red\", linestyle=\"--\")\n\nplt.title(f\"Differenz {new_data.index[year]}\")\nplt.ylabel(\"Stundenlohndifferenz in US$\")\nplt.xlim(0 - 0.5, len(label_berufe)-0.5)\nplt.xticks(rotation = 90)\nplt.show()","1b7bef9b":"for i in range(len(label_berufe)):\n    plt.bar(label_berufe[i], paygap[i])\n#plt.bar(label_berufe, paygap)\n\nplt.plot(range(-1, len(label_berufe)+1), np.zeros(len(label_berufe)+2), color=\"red\", linestyle=\"--\")\n\nplt.title(f\"Differenz {new_data.index[year]}\")\nplt.ylabel(\"Stundenlohndifferenz in US$\")\nplt.xlim(0 - 0.5, len(label_berufe)-0.5)\nplt.xticks(rotation = 90)\nplt.show()","b0e80f23":"paygap_per =  np.array(new_data.iloc[year, 0:8])\/(np.array(new_data.iloc[year, 0:8]) + np.array(new_data.iloc[year, 8:16]))\npaygap_per","5e6ec581":"for i in range(len(label_berufe)):\n    plt.bar(label_berufe[i], paygap_per[i])\n\n\nplt.plot(range(-1, len(label_berufe)+1), [0.5]*(len(label_berufe)+2), color=\"red\", linestyle=\"--\")\n\nplt.title(f\"Prozentualer Verdienst von Frauen {new_data.index[year]}\")\nplt.ylabel(\"Prozentuale Stundenlohndifferenz\")\nplt.xlim(0 - 0.5, len(label_berufe)-0.5)\nplt.ylim(0.425, 0.525)\nplt.xticks(rotation = 90)\nplt.show()","cffa37fd":"# Durchschnittlicher Stundenlohn\nprint(f'Frauen {new_data[\"managers_f\"][2016]}, M\u00e4nner: {new_data[\"managers_m\"][2016]}, Gesamt: {new_data[\"managers_p\"][2016]}')","e2f4e9a3":"# Mittelwert:\nnp.array([new_data[\"managers_f\"][2016], new_data[\"managers_m\"][2016]]).mean()","025dd53c":"new_data.info()","6543bb72":"try:\n    a_pers = np.array(new_data.iloc[year, 16:])\n    a_male = np.array(new_data.iloc[year, 8:16])\n    a_female = np.array(new_data.iloc[year, 0:8])\n    anteil =  (a_pers - a_female) \/ (a_male - a_female)\n    \nexcept:\n    print(\"ZERO DEVISION!\")\n    \nanteil","6bf92d67":"for i in range(len(label_berufe)):\n    plt.bar(label_berufe[i], anteil[i])\n\n\nplt.plot(range(-1, len(label_berufe)+1), [0.5]*(len(label_berufe)+2), color=\"red\", linestyle=\"--\")\n\nplt.title(f\"Prozentualer Anteil von Frauen {new_data.index[year]}\")\nplt.ylabel(\"Anteil an Frauen\")\nplt.xlim(0 - 0.5, len(label_berufe)-0.5)\n\nplt.xticks(rotation = 90)\nplt.show()","4c53b099":"x = np.random.randn(20, 1) + 10\ny = x*2 + np.random.randn(20, 1)\n\ndata = np.array([x, y])\ndata","971f9295":"data.shape","37d06425":"data = data.reshape(2, 20)\ndata","34fb3233":"df = pd.DataFrame(data.T, columns=[\"x\", \"t\"])\ndf.head()","73a9f7e6":"plt.scatter(df[\"x\"], df[\"t\"])\nplt.show()","b9f0e3d0":"x0 = np.arange(7, 13)\ny0 = x0*2\n\nplt.scatter(df[\"x\"], df[\"t\"])\nplt.plot(x0, y0, \"k--\")\nplt.legend([\"$y =2 \\cdot x$\", \"points\"])\nplt.show()","7d4bcc73":"df[\"r\"] = np.abs(np.random.randn(20)) * 20\ndf.head()","467d0526":"plt.scatter(df[\"x\"], df[\"t\"], color=\"r\")\nplt.scatter(df[\"r\"], df[\"t\"], color=\"g\")\nplt.plot(x0, y0, \"k--\")\nplt.legend([\"$y =2 \\cdot x$\", \"points\", \"random\"], loc=\"lower right\")\nplt.show()","8f4f2e7a":"df.corr()","5c0c3087":"import seaborn as sns\nplt.figure()\nsns.heatmap(df.corr(), annot=True, cmap='jet')\nplt.show()","1af3488c":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(np.array(df[\"x\"]), np.array(df[\"t\"]), test_size = 0.2)","7fbb3b1b":"X_train","1168d3ee":"df.head()","18131892":"from sklearn import linear_model\n\nmodel = linear_model.LinearRegression()","7d934391":"try:\n    model.fit(X_train, y_train)\nexcept Exception as error:\n    print(error)","21ee8c4d":"X_train.shape","85a4b0b1":"X_train = X_train.reshape(-1, 1)\nX_train.shape","1bb0bdb1":"X_test = X_test.reshape(-1, 1)","814bae80":"model.fit(X_train, y_train)","434f6868":"model.score(X_test, y_test)","47540eac":"model.coef_","1fd8f7ef":"model.intercept_","a18997a4":"x0 = np.arange(6, 13).reshape(-1, 1)\ndata_plot = model.predict(x0)\n\ndata_plot\n\nplt.scatter(df[\"x\"], df[\"t\"])\nplt.plot(x0, data_plot)\n\nplt.show()","978eed8c":"# Mehrere Features\n\nx1 = np.random.randn(20, 1) + 10\nx2 = np.random.randn(20, 1) + 10\ny = x1*2 - x2*3 + np.random.randn(20, 1)\nrand = np.abs(np.random.randn(20)) * 20\nrand = rand.reshape(20, 1)\ndata = np.array([x1, x2, rand,  y]).T\ndata = data.reshape(20, 4)","e17b2bfe":"df = pd.DataFrame(data.reshape(20, 4), columns=[\"x1\", \"x2\", \"random\", \"target\"])\ndf","818cbe57":"plt.scatter(df[\"x2\"], df[\"target\"])\nplt.show()","e11a1ecb":"import seaborn as sns\nplt.figure()\nsns.heatmap(df.corr(), annot=True, cmap='jet')\nplt.show()","0fa3b08a":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(np.array(df[[\"x1\", \"x2\"]]), np.array(df[\"target\"]), test_size = 0.2)","cd253888":"X_test.shape","2841d092":"y_train.shape","eb05d598":"from sklearn import linear_model\n\nmodel = linear_model.LinearRegression()\n\nmodel.fit(X_train, y_train)\nmodel.score(X_test, y_test)","ea962127":"model.coef_","ca197e37":"print(model.predict([X_test[0]]), y_test[0])\n","93f39155":"# Lade Boston House Prices","91feb2d8":"# Recap","ab6c1735":"# Machine Learning","67eecf53":"$$a_{pers} = p \\cdot a_{male} + (1 - p) \\cdot a_{female}$$\n\nWir suchen *p*! \n\n$$p = \\frac{a_{pers} - a_{female}}{a_{male} - a_{female}}$$","e0eb6b56":"# Hausaugabe\n\n* Suche dir 5 Berufsgruppen heraus\n* Stelle die Lohndifferenz f\u00fcr das Jahr 2016 in einem S\u00e4ulendiagramm dar"}}