{"cell_type":{"d9b8f3fb":"code","fbdeaa6b":"code","dfe829cd":"code","db03f8f8":"code","b6e135b6":"code","69492603":"code","e9430ace":"code","34f38e29":"code","965fee64":"code","03cd8d3b":"code","3728db30":"code","d477fc16":"code","f5cef8dc":"code","92f93f09":"code","e5d77d2a":"code","f6c54fcd":"code","3ebc6f2c":"code","ad6387cb":"code","6e248804":"code","c361abb6":"markdown","8975cc6b":"markdown","41762f75":"markdown","a026a55c":"markdown"},"source":{"d9b8f3fb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas as pd\nimport numpy as np \nimport matplotlib\nimport matplotlib.pyplot as plt \nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestRegressor\nfrom imblearn.over_sampling import RandomOverSampler\nfrom sklearn.metrics import classification_report, accuracy_score,precision_score,recall_score,f1_score,matthews_corrcoef\nfrom sklearn.metrics import confusion_matrix\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings('ignore')\n","fbdeaa6b":"# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dfe829cd":"cust_df=pd.read_csv(r\"\/kaggle\/input\/credit-risk-classification-dataset\/customer_data.csv\")\npaymt_df=pd.read_csv(r\"\/kaggle\/input\/credit-risk-classification-dataset\/payment_data.csv\")","db03f8f8":"cust_df.head()","b6e135b6":"cust_df.info()","69492603":"cust_df.shape","e9430ace":"cust_df.describe()","34f38e29":"# Checking the missing values values for customer data\nprint(cust_df.isnull().sum())\n#print(\"**************payment************************\")\n#print(paymt_df.isnull().sum())","965fee64":"cust_df[\"label\"].value_counts()","03cd8d3b":"low_risk=cust_df[cust_df[\"label\"]==0]\nhigh_risk=cust_df[cust_df[\"label\"]==1]\nfrac=len(high_risk)\/float(len(low_risk))\nfrac","3728db30":"#visualising the \"label\" column \nplt.pie(cust_df[\"label\"].value_counts(),labels = [\"Not Risk\",\"Risk\"],colors = [\"g\",\"r\"],shadow = True)\nplt.legend(title =\"Credit Risk\")\nplt.show() \n#This shows that the dataset is Imbalanced","d477fc16":"#Correlation Matrix\n\ncorrelation_matrix = cust_df.corr()\nfig = plt.figure(figsize=(12,9))\nsns.heatmap(correlation_matrix,annot=True,square=True, linewidths=.5,cmap=plt.cm.Reds)\nplt.show()","f5cef8dc":"y=cust_df[\"label\"]\nx=cust_df.copy()\nx.drop(columns=[\"label\"],inplace=True)\nx.head()","92f93f09":"#handeling missing data (replace all missing values with mean value of that column)\nx[\"fea_2\"].fillna(x[\"fea_2\"].mean(),inplace=True)\nprint(x.isnull().sum())\nprint(x.shape,y.shape)","e5d77d2a":"os =  RandomOverSampler(0.7)\nX_train_res, y_train_res = os.fit_resample(x, y)\nprint(\" New 'x' has\",X_train_res.shape,\"        New 'Y' has\",y_train_res.shape)\nprint('Original dataset shape {}'.format(Counter(y)))\nprint('Resampled dataset shape {}'.format(Counter(y_train_res)))\n","f6c54fcd":"#np.random.seed(123)\nX_train, X_test, y_train, y_test = train_test_split(X_train_res, y_train_res, train_size = 0.70, test_size = 0.30, random_state = 1)\n#sc = StandardScaler()\n#X_train = sc.fit_transform(X_train)\n#X_test = sc.transform(X_test)","3ebc6f2c":"forest_model = RandomForestRegressor(random_state=1)\nforest_model.fit(X_train, y_train)\n# predictions\ny_pred =forest_model.predict(X_test)\nprint(y_pred)","ad6387cb":"#printing the confusion matrix\n#n_outliers = len(high_risk)\nn_errors = (y_pred != y_test).sum()\nLABELS = ['GOOD', 'BAD']\nconf_matrix = confusion_matrix(y_test, y_pred.round())\nplt.figure(figsize=(6, 4))\nsns.heatmap(conf_matrix, xticklabels=LABELS, yticklabels=LABELS, annot=True, fmt=\"d\");\nplt.title(\"Confusion matrix\")\nplt.ylabel('True class')\nplt.xlabel('Predicted class')\nplt.show()","6e248804":"# Run classification metrics\nplt.figure(figsize=(9, 7))\nprint('{}: {}'.format(\"Random Forest\", n_errors))\nprint(accuracy_score(y_test, y_pred.round()))\nprint(classification_report(y_test, y_pred.round()))","c361abb6":"Confusion matrix accuracy is not meaningful for unbalanced classification,since the dataset is unbalanced.so make it balanced before building a model","8975cc6b":"From above result we can see that \"fea_2\" has \"149\" missing values","41762f75":"**Balancing the dataset**\n","a026a55c":"**label is 1, the customer is in high credit risk,**\n**label is 0, the customer is in low credit risk**\n>  The data is unbalance as we have more low credit risks than high credit risks.."}}