{"cell_type":{"35251605":"code","49825716":"code","db5f4638":"code","097b86cd":"code","75e18b4d":"code","67eddbcf":"code","726f679a":"code","83cf6432":"code","3cc2bb49":"code","c8b6dce8":"code","01dd3559":"code","62f88c93":"code","611f9523":"code","08a24b56":"code","bab13048":"code","aae0d861":"code","c4427159":"code","2baee247":"code","125cb0d3":"code","85185d93":"code","d36b7b0d":"code","b88d9bf1":"code","5cc07abb":"code","4ce25e56":"code","144d39ba":"code","3a3205e5":"code","2f1a4cd6":"code","2cba3c43":"code","a2bacdd5":"code","e7e62792":"code","d4752898":"code","eedc81f4":"code","57d14067":"code","456946fa":"code","ee75198d":"code","743a70d2":"code","354882bd":"code","d0f13068":"code","5dd23a08":"code","f0d96add":"code","56326f2d":"code","288be17f":"code","75cfb7db":"code","f577d232":"code","7a9ec42a":"code","110ab5ed":"code","80b8c187":"code","f0b9523c":"code","559ec40b":"code","b34690f8":"code","125e552e":"code","a888dbc8":"code","b25b96d7":"code","28d36643":"code","7c2c6194":"code","5f092cf5":"code","611c49d5":"code","4c9a2020":"code","fffb6279":"code","809875ab":"code","5bc387de":"code","3a2ef234":"code","334722f3":"code","725b9ac8":"code","66a41777":"code","f7badca7":"code","bc7c914a":"code","9b7eee10":"code","9a5c4b85":"code","d39e6ecf":"code","90837901":"code","1c8c2ce9":"code","bbb5cc2a":"code","6c09832b":"markdown","90354b4f":"markdown","0978049d":"markdown","20835868":"markdown","f4ca566f":"markdown","64c8f8ce":"markdown","852c2350":"markdown","871faffc":"markdown"},"source":{"35251605":"import numpy as np \nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport pandas as pd\nimport seaborn as sns\nimport sklearn.linear_model","49825716":"df1 = pd.read_csv('..\/input\/bangalore-housing-prices\/BHP.csv')\ndf1.head()","db5f4638":"df1.isna().sum()","097b86cd":"df1.shape","75e18b4d":"df2=df1.drop(['area_type' , 'availability' , 'society' , 'balcony'] , axis = 'columns')\ndf2.shape","67eddbcf":"df2.head()","726f679a":"df2.isnull().sum()","83cf6432":"df3 = df2.dropna()\ndf3.shape","3cc2bb49":"df3.isnull().sum()","c8b6dce8":"df3.head()","01dd3559":"df3['bhk'] = df3['size'].apply(lambda x: int(x.split(' ')[0]))\ndf3.bhk.unique()","62f88c93":"df3.head()","611f9523":"def is_float(x):\n    try:\n        float(x)\n    except:\n        return False\n    return True","08a24b56":"df3[~df3['total_sqft'].apply(is_float)].head(10)","bab13048":"def convert_sqft_to_num(x):\n    tokens = x.split('-')\n    if len(tokens) == 2:\n        return (float(tokens[0])+float(tokens[1]))\/2\n    try:\n        return float(x)\n    except:\n        return None   ","aae0d861":"df4=df3.copy()\ndf4.total_sqft = df4.total_sqft.apply(convert_sqft_to_num)","c4427159":"df4 = df4[df4.total_sqft.notnull()]","2baee247":"df4.head()","125cb0d3":"df3.loc[30]","85185d93":"df4.loc[30]","d36b7b0d":"df4.shape","b88d9bf1":"df4.head()","5cc07abb":"df5 = df4.copy()","4ce25e56":"df5['price_per_sqft'] = df5['price']*100000\/df5['total_sqft']\ndf5.head()","144d39ba":"len(df5.location.unique())","3a3205e5":"df5.location = df5.location.apply(lambda x : x.strip())","2f1a4cd6":"location_stats = df5.groupby('location')['location'].agg('count').sort_values(ascending = False)\nlocation_stats","2cba3c43":"location_stats.head()","a2bacdd5":"location_stats[location_stats<=10].count\nlen(location_stats[location_stats<=10])","e7e62792":"location_stats_less_than_10 = location_stats[location_stats<=10] \nlocation_stats_less_than_10.shape","d4752898":"len(df5.location.unique())","eedc81f4":"df5['location'] = df5.location.apply(lambda x : 'other' if x in location_stats_less_than_10 else x)\nlen(df5.location.unique())","57d14067":"df5.head(10)","456946fa":"df5.shape","ee75198d":"df5[(df5.total_sqft \/ df5.bhk ) < 300].head()","743a70d2":"len(df5[(df5.total_sqft \/ df5.bhk ) < 300])","354882bd":"df6 = df5[~(df5.total_sqft \/ df5.bhk  < 300)]\ndf6.shape","d0f13068":"df6.price_per_sqft.describe()","5dd23a08":"def remove_pps_outliers(df):\n    df_out = pd.DataFrame()\n    for key, subdf in df.groupby('location'):\n        m = np.mean(subdf.price_per_sqft)\n        st = np.std(subdf.price_per_sqft)\n        reduced_df = subdf[(subdf.price_per_sqft>(m-st)) & (subdf.price_per_sqft<=(m+st))]\n        df_out = pd.concat([df_out,reduced_df],ignore_index=True)\n    return df_out\ndf7 = remove_pps_outliers(df6)\ndf7.shape","f0d96add":"import matplotlib\nmatplotlib.rcParams[\"figure.figsize\"] = (20,10)\ndef plot_scatter_chart(df,location):\n    bhk2 = df[(df.location==location) & (df.bhk==2)]\n    bhk3 = df[(df.location==location) & (df.bhk==3)]\n    matplotlib.rcParams['figure.figsize'] = (15,10)\n    plt.scatter(bhk2.total_sqft,bhk2.price,color='blue',label='2 BHK', s=50)\n    plt.scatter(bhk3.total_sqft,bhk3.price,marker='+', color='green',label='3 BHK', s=50)\n    plt.xlabel(\"Total Square Feet Area\")\n    plt.ylabel(\"Price (Lakh Indian Rupees)\")\n    plt.title(location)\n    plt.legend()\n    \nplot_scatter_chart(df7,\"Rajaji Nagar\")","56326f2d":"plot_scatter_chart(df7,\"Hebbal\")","288be17f":"def remove_bhk_outliers(df):\n    exclude_indices = np.array([])\n    for location, location_df in df.groupby('location'):\n        bhk_stats = {}\n        for bhk, bhk_df in location_df.groupby('bhk'):\n            bhk_stats[bhk] = {\n                'mean': np.mean(bhk_df.price_per_sqft),\n                'std': np.std(bhk_df.price_per_sqft),\n                'count': bhk_df.shape[0]\n            }\n        for bhk, bhk_df in location_df.groupby('bhk'):\n            stats = bhk_stats.get(bhk-1)\n            if stats and stats['count']>5:\n                exclude_indices = np.append(exclude_indices, bhk_df[bhk_df.price_per_sqft<(stats['mean'])].index.values)\n    return df.drop(exclude_indices,axis='index')\ndf8 = remove_bhk_outliers(df7)\n# df8 = df7.copy()\ndf8.shape","75cfb7db":"plot_scatter_chart(df8,\"Rajaji Nagar\")","f577d232":"plot_scatter_chart(df8,\"Hebbal\")","7a9ec42a":"import matplotlib\nmatplotlib.rcParams[\"figure.figsize\"] = (20,10)\nplt.hist(df8.price_per_sqft,rwidth=0.8)\nplt.xlabel(\"Price Per Square Feet\")\nplt.ylabel(\"Count\")","110ab5ed":"df8.head()","80b8c187":"df8.bath.unique()","f0b9523c":"df8[df8.bath > df8.bhk + 2]","559ec40b":"df8.shape","b34690f8":"df9 = df8[df8.bath < df8.bhk + 2]\ndf9.shape","125e552e":"df9.head(2)","a888dbc8":"df10 = df9.drop(['size' , 'price_per_sqft'] , axis = 'columns')\ndf10.shape","b25b96d7":"df10.head(2)","28d36643":"len(df10.location.unique())","7c2c6194":"dummies = pd.get_dummies(df10.location)\ndummies.head()","5f092cf5":"dummies.drop(['other'], axis = 'columns', inplace =True)\ndummies.shape","611c49d5":"df11=pd.concat([df10,dummies], axis ='columns')","4c9a2020":"df11.head(2)","fffb6279":"df12 =df11.drop(['location' ], axis = 'columns')\ndf12.head(2)","809875ab":"X=df12.drop('price' , axis = 'columns')\nX.head(2)","5bc387de":"y=df12.price\ny.head(2)","3a2ef234":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.2, random_state=10)","334722f3":"len(X_train) +len(X_test) ==len(X)","725b9ac8":"from sklearn.linear_model import LinearRegression\nlr_clf = LinearRegression()\nlr_clf.fit(X_train , y_train)\nlr_clf.score(X_test , y_test)","66a41777":"from sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import cross_val_score\n\ncv = ShuffleSplit(n_splits=5, test_size=0.2, random_state=0)\n\ncross_val_score(LinearRegression(), X, y, cv=cv)","f7badca7":"def predict_price(location,sqft,bath,bhk):    \n    loc_index = np.where(X.columns==location)[0][0]\n\n    x = np.zeros(len(X.columns))\n    x[0] = sqft\n    x[1] = bath\n    x[2] = bhk\n    if loc_index >= 0:\n        x[loc_index] = 1\n\n    return lr_clf.predict([x])[0]","bc7c914a":"predict_price('1st Phase JP Nagar',1000, 2, 2)","9b7eee10":"predict_price('1st Phase JP Nagar',1000, 3, 3)","9a5c4b85":"predict_price('Indira Nagar',1000, 2, 2)","d39e6ecf":"predict_price('Indira Nagar',1000, 3, 3)","90837901":"import pickle \nwith open('banglore_home_prices_model.pickle','wb') as f :\n    pickle.dump(lr_clf , f)","1c8c2ce9":"X.columns","bbb5cc2a":"import json\ncolumns = {\n    'data_columns' : [col.lower() for col in X.columns]\n}\nwith open(\"columns.json\",\"w\") as f:\n    f.write(json.dumps(columns))","6c09832b":"# Use K-Fold cross validation to measure the accuracy of the LinearRegression Model","90354b4f":"# Feature Engineering","0978049d":"## Export the tested model to a pickle file","20835868":"## Export the location and column information to a file tha will be usefull later on in our prediction application ","f4ca566f":"## Feature  Engineering \n(Analyze location column)","64c8f8ce":"## Feature engineering \n(Create a new column called price_per_sqft)","852c2350":"# Drop the features that are not significant for the model ","871faffc":"# Outlier removal"}}