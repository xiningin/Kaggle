{"cell_type":{"c2fc3101":"code","fdaa4e8c":"code","e7e10c25":"code","e7bef39d":"code","1a8d6024":"code","51bd7501":"code","30ecd454":"code","ece4652b":"code","312b5f54":"code","25ef4d94":"code","6570c5b7":"code","e970dc1f":"code","cec364ab":"code","986c2a4a":"code","af8ce574":"code","5d44598d":"code","4023b7fe":"code","7f19d0f8":"code","cf4e5666":"code","2836675e":"code","ebe26af6":"code","a27b494e":"code","be570ef4":"code","a9dc8cab":"code","1a91f8f9":"code","fa5f1b23":"code","3a81c441":"code","f5a37750":"code","87f2db54":"code","7566a918":"code","0464fd04":"code","fc94d339":"code","26166ae4":"code","723a5186":"code","0586ca03":"code","743f163a":"code","ccafac56":"code","122e7a38":"code","76821b94":"code","e7fae8e4":"code","7dfc4191":"markdown","dbd9c7a8":"markdown","c9413365":"markdown","5d6c691d":"markdown","4bd819f8":"markdown","ce202fc8":"markdown","fa112369":"markdown","75280c9c":"markdown","b380de46":"markdown","884f79ee":"markdown","d6bfef76":"markdown","ca6d6cc6":"markdown","572725b4":"markdown","dfed1305":"markdown","692c3022":"markdown","852e05a1":"markdown","a9626910":"markdown","ada2f7f5":"markdown","f430b8a9":"markdown","8f725ebb":"markdown"},"source":{"c2fc3101":"#Import libraries\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing\nimport matplotlib.pyplot as plt # visualization\nimport seaborn as sns # visualization\nfrom scipy import stats\nfrom scipy.stats import norm \nimport warnings \nwarnings.filterwarnings('ignore') #ignore warnings\n\n%matplotlib inline\nimport gc","fdaa4e8c":"train=pd.read_csv(\"\/kaggle\/input\/walmart-recruiting-store-sales-forecasting\/train.csv\", parse_dates=[\"Date\"])\ntest=pd.read_csv(\"\/kaggle\/input\/walmart-recruiting-store-sales-forecasting\/test.csv\", parse_dates=[\"Date\"])\nstores=pd.read_csv(\"\/kaggle\/input\/walmart-recruiting-store-sales-forecasting\/stores.csv\")","e7e10c25":"print(\"the structure of train data is \", train.shape)\nprint(\"the structure of test  data is \", test.shape)\nprint(\"the ratio of train data : test data is \", (round(train.shape[0]*100\/(train.shape[0]+test.shape[0])),100-round(train.shape[0]*100\/(train.shape[0]+test.shape[0]))))","e7bef39d":"train=train.merge(stores, on='Store', how='left')\ntrain.head()","1a8d6024":"train['Year']=train['Date'].dt.year\ntrain['Month']=train['Date'].dt.month\ntrain['Week']=train['Date'].dt.week\ntrain['Day']=train['Date'].dt.day\ntrain['n_days']=(train['Date'].dt.date-train['Date'].dt.date.min()).apply(lambda x:x.days)\n","51bd7501":"Year=pd.Series(train['Year'].unique())\nWeek=pd.Series(train['Week'].unique())\nMonth=pd.Series(train['Month'].unique())\nDay=pd.Series(train['Day'].unique())\nn_days=pd.Series(train['n_days'].unique())","30ecd454":"print(\"the shape of stores data set is\", stores.shape)\nprint(\"the unique value of store is\", stores['Store'].unique())\nprint(\"the unique value of Type is\", stores['Type'].unique())","ece4652b":"print(stores.head())\ngrouped=stores.groupby('Type')\nprint(grouped.describe()['Size'].round(2))","312b5f54":"plt.style.use('ggplot')\nlabels=['A store','B store','C store']\nsizes=grouped.describe()['Size'].round(1)\nsizes=[(22\/(17+6+22))*100,(17\/(17+6+22))*100,(6\/(17+6+22))*100] # convert to the proportion\n\n\nfig, axes = plt.subplots(1,1, figsize=(10,10))\n\nwprops={'edgecolor':'black',\n      'linewidth':2}\n\ntprops = {'fontsize':30}\n\n\naxes.pie(sizes,\n        labels=labels,\n        explode=(0.02,0,0),\n        autopct='%1.1f%%',\n        pctdistance=0.6,\n        labeldistance=1.2,\n        wedgeprops=wprops,\n        textprops=tprops,\n        radius=0.8,\n        center=(0.5,0.5))\nplt.show()\n","25ef4d94":"data = pd.concat([stores['Type'], stores['Size']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nfig = sns.boxplot(x='Type', y='Size', data=data)","6570c5b7":"data = pd.concat([train['Type'], train['Weekly_Sales']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nfig = sns.boxplot(x='Type', y='Weekly_Sales', data=data, showfliers=False)","e970dc1f":"plt.style.use('ggplot')\n\nfig=plt.figure()\nax=fig.add_subplot(111)\n\nax.scatter(train['Size'],train['Weekly_Sales'], alpha=0.5)\n\nplt.show()\n\n","cec364ab":"types=stores['Type'].unique()\n\nplt.style.use('ggplot')\n\nfig=plt.figure(figsize=(10,5))\nax=fig.add_subplot(111)\n\nfor t in types:\n    x=train.loc[train['Type']==t, 'Size']\n    y=train.loc[train['Type']==t, 'Weekly_Sales']\n    \n    ax.scatter(x,y,alpha=0.5, label=t)\n\nax.set_title('Scatter plot size and sales by store type')\nax.set_xlabel('Size')\nax.set_ylabel('Weekly_Sales')\n\nax.legend(loc='higher right',fontsize=12)\n\nplt.show()","986c2a4a":"train.head()","af8ce574":"data = pd.concat([train['Store'], train['Weekly_Sales'], train['Type']], axis=1)\nf, ax = plt.subplots(figsize=(25, 8))\nfig = sns.boxplot(x='Store', y='Weekly_Sales', data=data, showfliers=False, hue=\"Type\")","5d44598d":"data = pd.concat([train['Store'], train['Weekly_Sales'], train['IsHoliday']], axis=1)\nf, ax = plt.subplots(figsize=(25, 8))\nfig = sns.boxplot(x='Store', y='Weekly_Sales', data=data, showfliers=False, hue=\"IsHoliday\")","4023b7fe":"data = pd.concat([train['Dept'], train['Weekly_Sales'], train['Type']], axis=1)\nf, ax = plt.subplots(figsize=(25, 10))\nfig = sns.boxplot(x='Dept', y='Weekly_Sales', data=data, showfliers=False)","7f19d0f8":"data = pd.concat([train['Dept'], train['Weekly_Sales'], train['Type']], axis=1)\nf, ax = plt.subplots(figsize=(10, 50))\nfig = sns.boxplot(y='Dept', x='Weekly_Sales', data=data, showfliers=False, hue=\"Type\",orient=\"h\") ","cf4e5666":"data = pd.concat([train['Dept'], train['Weekly_Sales'], train['IsHoliday']], axis=1)\nf, ax = plt.subplots(figsize=(25, 10))\nfig = sns.boxplot(x='Dept', y='Weekly_Sales', data=data, showfliers=False, hue=\"IsHoliday\")","2836675e":"train.head()","ebe26af6":"plt.style.use('ggplot')\nfig, axes = plt.subplots(1,2, figsize = (20,5))\nfig.subplots_adjust(wspace=1, hspace=1)\nfig.subplots_adjust(left=0.1, right=0.9, bottom=0.1, top=0.9)\n\nsales_holiday=train[['IsHoliday','Weekly_Sales']]\ntarget=[sales_holiday['Weekly_Sales'].loc[sales_holiday['IsHoliday']==True],sales_holiday['Weekly_Sales'].loc[sales_holiday['IsHoliday']==False]]\nlabels=['Holiday','Not Holiday']\n\n#median\nmedianprop={'color':'#2196F3',\n            'linewidth': 2,\n            'linestyle':'-'}\n\n# outliers\n\nflierprop={'color' : '#EC407A',\n          'marker' : 'o',\n          'markerfacecolor': '#2196F3',\n          'markeredgecolor':'white',\n          'markersize' : 3,\n          'linestyle' : 'None',\n          'linewidth' : 0.1}\n\n\n\naxes[0].boxplot(target,labels=labels, patch_artist = 'Patch',\n                  showmeans=True,\n                  flierprops=flierprop,\n                  medianprops=medianprop)\n\n\n\n\naxes[1].boxplot(target,labels=labels, patch_artist = 'Patch',\n                  showmeans=True,\n                  flierprops=flierprop,\n                  medianprops=medianprop)\n\naxes[1].set_ylim(-6000,80000)\n\nplt.show()\n\n\n","a27b494e":"print(train[train['IsHoliday']==True]['Weekly_Sales'].describe().round(1))\nprint(train[train['IsHoliday']==False]['Weekly_Sales'].describe().round(1))","be570ef4":"train.head()","a9dc8cab":"data = pd.concat([train['Month'], train['Weekly_Sales']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nfig = sns.boxplot(x='Month', y=\"Weekly_Sales\", data=data, showfliers=False)","1a91f8f9":"data = pd.concat([train['Month'], train['Weekly_Sales'],train['IsHoliday']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nfig = sns.boxplot(x='Month', y=\"Weekly_Sales\", data=data, showfliers=False, hue='IsHoliday')","fa5f1b23":"data = pd.concat([train['Month'], train['Weekly_Sales'],train['Type']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nfig = sns.boxplot(x='Month', y=\"Weekly_Sales\", data=data, showfliers=False, hue='Type')","3a81c441":"data = pd.concat([train['Year'], train['Weekly_Sales']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nfig = sns.boxplot(x='Year', y=\"Weekly_Sales\", data=data, showfliers=False)","f5a37750":"data = pd.concat([train['Week'], train['Weekly_Sales']], axis=1)\nf, ax = plt.subplots(figsize=(20, 6))\nfig = sns.boxplot(x='Week', y=\"Weekly_Sales\", data=data, showfliers=False)","87f2db54":"f, ax = plt.subplots(figsize=(8, 6))\nsns.distplot(train['Weekly_Sales'])","7566a918":"print(\"Skewness: \", train['Weekly_Sales'].skew()) #skewness\nprint(\"Kurtosis: \", train['Weekly_Sales'].kurt()) #kurtosis","0464fd04":"train['Weekly_Sales'].min()","fc94d339":"fig = plt.figure(figsize = (10,5))\n\nfig.add_subplot(1,2,1)\nres = stats.probplot(train.loc[train['Weekly_Sales']>0,'Weekly_Sales'], plot=plt)\n\nfig.add_subplot(1,2,2)\nres = stats.probplot(np.log1p(train.loc[train['Weekly_Sales']>0,'Weekly_Sales']), plot=plt)","26166ae4":"train.describe()['Weekly_Sales']","723a5186":"train_over_zero=train[train['Weekly_Sales']>0]\ntrain_below_zero=train[train['Weekly_Sales']<=0]\nsales_over_zero = np.log1p(train_over_zero['Weekly_Sales'])\n#histogram\nf, ax = plt.subplots(figsize=(8, 6))\nsns.distplot(sales_over_zero)","0586ca03":"print(\"Skewness: \", sales_over_zero.skew()) #skewness\nprint(\"Kurtosis: \", sales_over_zero.kurt()) #kurtosis","743f163a":"grouped=train.groupby(['Dept','Date']).mean().round(0).reset_index()\nprint(grouped.shape)\nprint(grouped.head())\ndata=grouped[['Dept','Date','Weekly_Sales']]\n\n\ndept=train['Dept'].unique()\ndept.sort()\ndept_1=dept[0:20]\ndept_2=dept[20:40]\ndept_3=dept[40:60]\ndept_4=dept[60:]\n\nfig, ax = plt.subplots(2,2,figsize=(20,10))\nfig.subplots_adjust(wspace=0.5, hspace=0.5)\nfig.subplots_adjust(left=0.1, right=0.9, bottom=0.1, top=0.9)\n\nfor i in dept_1 :\n    data_1=data[data['Dept']==i]\n    ax[0,0].plot(data_1['Date'], data_1['Weekly_Sales'],label='Dept_1_mean_sales')\n\nfor i in dept_2 :\n    data_1=data[data['Dept']==i]\n    ax[0,1].plot(data_1['Date'], data_1['Weekly_Sales'],label='Dept_1_mean_sales')\n    \nfor i in dept_3 :\n    data_1=data[data['Dept']==i]\n    ax[1,0].plot(data_1['Date'], data_1['Weekly_Sales'],label='Dept_1_mean_sales')    \n\nfor i in dept_4 :\n    data_1=data[data['Dept']==i]\n    ax[1,1].plot(data_1['Date'], data_1['Weekly_Sales'],label='Dept_1_mean_sales')        \n    \nax[0,0].set_title('Mean sales record by department(0~19)')\nax[0,1].set_title('Mean sales record by department(20~39)')\nax[1,0].set_title('Mean sales record by department(40~59)')\nax[1,1].set_title('Mean sales record by department(60~)')\n\n\nax[0,0].set_ylabel('Mean sales')\nax[0,0].set_xlabel('Date')\nax[0,1].set_ylabel('Mean sales')\nax[0,1].set_xlabel('Date')\nax[1,0].set_ylabel('Mean sales')\nax[1,0].set_xlabel('Date')\nax[1,1].set_ylabel('Mean sales')\nax[1,1].set_xlabel('Date')\n\n\nplt.show()","ccafac56":"grouped=train.groupby(['Store','Date']).mean().round(0).reset_index()\ngrouped.shape\ngrouped.head()\n\ndata=grouped[['Store','Date','Weekly_Sales']]\ntype(data)\n\n\nstore=train['Store'].unique()\nstore.sort()\nstore_1=store[0:5]\nstore_2=store[5:10]\nstore_3=store[10:15]\nstore_4=store[15:20]\nstore_5=store[20:25]\nstore_6=store[25:30]\nstore_7=store[30:35]\nstore_8=store[35:40]\nstore_9=store[40:]\n\nfig, ax = plt.subplots(5,2,figsize=(20,15))\n\nfig.subplots_adjust(wspace=0.5, hspace=0.5)\nfig.subplots_adjust(left=0.1, right=0.9, bottom=0.1, top=0.9)\n\nfor i in store_1 :\n    data_1=data[data['Store']==i]\n    ax[0,0].plot(data_1['Date'], data_1['Weekly_Sales'])\n    \nfor i in store_2 :\n    data_2=data[data['Store']==i]\n    ax[0,1].plot(data_2['Date'], data_2['Weekly_Sales'])\n    \nfor i in store_3 :\n    data_3=data[data['Store']==i]\n    ax[1,0].plot(data_3['Date'], data_3['Weekly_Sales'])\n\nfor i in store_4 :\n    data_4=data[data['Store']==i]\n    ax[1,1].plot(data_4['Date'], data_4['Weekly_Sales'])\n    \nfor i in store_5 :\n    data_5=data[data['Store']==i]\n    ax[2,0].plot(data_5['Date'], data_5['Weekly_Sales'])  \n\nfor i in store_6 :\n    data_6=data[data['Store']==i]\n    ax[2,1].plot(data_6['Date'], data_6['Weekly_Sales'])  \n\nfor i in store_7 :\n    data_7=data[data['Store']==i]\n    ax[3,0].plot(data_7['Date'], data_7['Weekly_Sales'])      \n\nfor i in store_8 :\n    data_8=data[data['Store']==i]\n    ax[3,1].plot(data_8['Date'], data_8['Weekly_Sales'])     \n    \nfor i in store_9 :\n    data_9=data[data['Store']==i]\n    ax[4,0].plot(data_9['Date'], data_9['Weekly_Sales'])     \n\n    \nax[0,0].set_title('Mean sales record by store(0~4)')\nax[0,1].set_title('Mean sales record by store(5~9)')\nax[1,0].set_title('Mean sales record by store(10~14)')\nax[1,1].set_title('Mean sales record by store(15~19)')\nax[2,0].set_title('Mean sales record by store(20~24)')\nax[2,1].set_title('Mean sales record by store(25~29)')\nax[3,0].set_title('Mean sales record by store(30~34)')\nax[3,1].set_title('Mean sales record by store(35~39)')\nax[4,0].set_title('Mean sales record by store(40~)')\n\n\n\nax[0,0].set_ylabel('Mean sales')\nax[0,0].set_xlabel('Date')\nax[0,1].set_ylabel('Mean sales')\nax[0,1].set_xlabel('Date')\nax[1,0].set_ylabel('Mean sales')\nax[1,0].set_xlabel('Date')\nax[1,1].set_ylabel('Mean sales')\nax[1,1].set_xlabel('Date')\nax[2,0].set_ylabel('Mean sales')\nax[2,0].set_xlabel('Date')\nax[2,1].set_ylabel('Mean sales')\nax[2,1].set_xlabel('Date')\nax[3,0].set_ylabel('Mean sales')\nax[3,0].set_xlabel('Date')\nax[3,1].set_ylabel('Mean sales')\nax[3,1].set_xlabel('Date')\nax[4,0].set_ylabel('Mean sales')\nax[4,0].set_xlabel('Date')\n\n\n\nplt.show()","122e7a38":"grouped=train.groupby(['Store','Dept'])['Weekly_Sales'].max().reset_index()\ngrouped['Store']=grouped['Store'].astype(str)\ngrouped['Dept']=grouped['Dept'].astype(str)\ngrouped['Weekly_Sales']=grouped['Weekly_Sales'].astype(str)\ngrouped['key']=grouped['Weekly_Sales'] +'_'+ grouped['Store'] +'_'+ grouped['Dept']\ngrouped.head()\n\ntrain['Store']=train['Store'].astype(str)\ntrain['Dept']=train['Dept'].astype(str)\ntrain['Weekly_Sales_2']=train['Weekly_Sales'].astype(str)\ntrain['key']=train['Weekly_Sales'].astype(str) +'_'+ train['Store'].astype(str) +'_'+ train['Dept'].astype(str)\ntrain\n\ntrain_2=pd.merge(train, grouped['key'], how='inner', on='key' )\ntrain_2['Date_2']=train_2['Month'].astype(str) + '-' + train_2['Day'].astype(str)\ntrain_2\n\ngrouped_2=train_2.groupby(['Date_2','Store','Dept']).count().reset_index()\ngrouped_2.sort_values('Weekly_Sales',ascending=False,inplace=True)\n","76821b94":"\ngrouped_2['key_2']=grouped_2['Date_2'].astype(str) + grouped_2['Store'].astype(str) + grouped_2['Dept'].astype(str)\ngrouped_2['Count']=grouped_2['Weekly_Sales']\ndata=grouped_2[['key_2','Count']]\n\ntrain['Date_2']=train['Month'].astype(str) + '-' + train['Day'].astype(str)\ntrain['key_2']=train['Date_2'].astype(str) + train['Store'].astype(str) + train['Dept'].astype(str)\ntrain=pd.merge(train, data, how='left', on='key_2' )\ntrain.loc[train['Count'].isnull(),'Count']=0\n\n#grouped_2['proportion']=grouped_2['Weekly_Sales']\/sum(grouped_2['Store'])\n#grouped_2['Count']=grouped_2['Weekly_Sales']\n#data=grouped_2[['Date_2','Count']]\n#print(data.head(100))\n\n#train['Date_2']=train['Month'].astype(str) + '-' + train['Day'].astype(str)\n\n#train=pd.merge(train, data, how='left', on='Date_2' )\n#train.head(150)","e7fae8e4":"data = pd.concat([train['Count'], train['Weekly_Sales'], train['Store']], axis=1)\nf, ax = plt.subplots(figsize=(5, 5))\nfig=sns.boxplot(x='Count', y=\"Weekly_Sales\", data=data, showfliers=False)","7dfc4191":"![Imgur](https:\/\/i.imgur.com\/utDw9Iz.png)","dbd9c7a8":"* Sales in holiday is a little bit more than sales in not-holiday\n","c9413365":"By the line plot, we can see the followings\n* The sales level is different by department and the sales record level of one department is stable\n* There is some peaked points around January and May. So there may be an event for high sales\n* Some departments are highly related with those events. Thus, the sales record goes up steeply around Jan or May\n\n* Conclusion 1 : Department is a good feature to predict sales\n* Couclusion 2 : Date (especially event) is a good feature to predict sales","5d6c691d":"* The result is not so good. There can be no distinct relation between size and sales. \n* It seems a bit linear \n* To make it more clear, facet data with store type (A, B, C)","4bd819f8":"* Faceting type gives no additional information except the relation between size and type","ce202fc8":"![Imgur](https:\/\/i.imgur.com\/GuNVoc3.png)","fa112369":"* Year \/ Month \/ Week \/ Days \/ passed days are extracted from 'Date' column","75280c9c":"* Store can be the variable giving information on sales\n* But store is including much intrinsic information of type, size, and department","b380de46":"* Assumption 1 is correct. By boxplot, we can infer that type A store is the largest store and C is the smallest\n* Even more, there is no overlapped area in size among A, B, and C. Type is the best predictor for Size\n* To check assumption 2, boxplot showing relation between sales and type is made","884f79ee":"* Each department shows the different level of sales\n* Department may be the powerful variable to predict sales\n* When department and type of store are considered together, generally department in A type shows the highest sales record \n\nAssumption 4: Type and department may have the interaction effect ","d6bfef76":"1. Assumption : The highest sales day (e.g. Christ mas) will provide high prediction power \n2. Assumption : The highest sales day will differ by department and store (e.g. some departments are not sensitive to Chisrt mas)\n1. Thus, extract the higest day and match that day with train data set","ca6d6cc6":"* Unlike store and holiday relation, department and holiday do not explain any relation\n* 72 department shows the highest surge in sales during holiday\n* However others don't and even more in some dopartments non-holidays' sales is higher.\n* That means the character of product (department) is different relation with sales","572725b4":"* Stores table consists of three columns **1. store ID 2. store type 3. store size. ** \n* A, B, and C are the types of stores and total 45 Walmart stores are selling goods to customers\n","dfed1305":"![Imgur](https:\/\/i.imgur.com\/XuDXqGU.png)\n","692c3022":"1. In conclusion, the highest sales day information will give information power to predict\n1. Count 1 (the highest sales day by dept and store) show higher median than Count 0 (normal sales day)","852e05a1":"* Let's make a pie chart to show the ratio of A, B, and C types of total 45 Walmart stores.\n* First, let's group data by type of stores and see the descriptive figures","a9626910":"* Holiday and Store do not show significant relations but just small higher sales soaring when hoiliday ","ada2f7f5":"* The median of A is the highest and C is the lowest\n* That means stores with more sizes have higher sales record (The order of median of size and median of sales is the same)","f430b8a9":"1. Like department, time series of sales by store will show trend of sales\n2. Assumption : Like department, store will give a sense of sales level\n3. Assumption_2 : In addition, this will also give the day of the highest sales","8f725ebb":"** Perspective of analysis**\n1. Sales can be reponsive to time factor and space factor\n1. Store's sales records are the aggregation of each department\n1. Date variable can be split into y\/m\/w\/d variables \n1. Day variable can provide much information on sales\n1. Outside data such as national holiday of US will be combined to add information"}}