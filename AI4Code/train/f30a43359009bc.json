{"cell_type":{"30659a47":"code","ab2f5491":"code","a5f7e5d3":"code","789a26ae":"code","9d99bdd9":"code","723be768":"code","6a345ca5":"code","cc21f7b9":"code","1696226f":"code","9bbbd78d":"code","0379e0f3":"code","91ccaf5b":"code","eb254ac2":"code","cc1de04c":"code","800b6aa9":"code","ed830322":"code","a0944194":"code","7de45ba6":"code","1322f3a4":"code","da11d27e":"code","a0d83bac":"code","148f9489":"code","589bd80b":"code","7b34d8b5":"code","312d22ec":"code","6a74be66":"code","d0981f55":"markdown","8a16e836":"markdown","8bb13239":"markdown","f53846e6":"markdown","e2adc8be":"markdown"},"source":{"30659a47":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline\n\nimport warnings\nwarnings.simplefilter('ignore')\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ab2f5491":"data = pd.read_csv('..\/input\/train.tsv',sep='\\t')","a5f7e5d3":"data.info()","789a26ae":"data.head()","9d99bdd9":"print(data.iloc[0]['Phrase'],'Sentiment - ',data.iloc[0]['Sentiment'])","723be768":"print(data.iloc[1]['Phrase'],'Sentiment - ',data.iloc[1]['Sentiment'])","6a345ca5":"print(data.iloc[32]['Phrase'],'Sentiment - ',data.iloc[32]['Sentiment'])\nprint('\\n')\nprint(data.iloc[33]['Phrase'],'Sentiment - ',data.iloc[33]['Sentiment'])","cc21f7b9":"import string\nstring.punctuation","1696226f":"from nltk.stem import WordNetLemmatizer\nlm = WordNetLemmatizer()\n\ndef own_analyser(phrase):\n    phrase = phrase.split()\n    for i in range(0,len(phrase)):\n        k = phrase.pop(0)\n        if k not in string.punctuation:\n                phrase.append(lm.lemmatize(k).lower())    \n    return phrase","9bbbd78d":"data.columns","0379e0f3":"X = data['Phrase']\ny = data['Sentiment']","91ccaf5b":"from sklearn.model_selection import train_test_split\nphrase_train,phrase_test,sentiment_train,sentiment_test = train_test_split(X,y,test_size=0.3)","eb254ac2":"from sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfTransformer\nfrom sklearn.naive_bayes import MultinomialNB\n","cc1de04c":"from sklearn.pipeline import Pipeline\n\npipeline = Pipeline([('BOW',CountVectorizer(analyzer=own_analyser)),\n                    ('tfidf',TfidfTransformer()),\n                    ('classifier',MultinomialNB())])","800b6aa9":"pipeline.fit(phrase_train,sentiment_train)","ed830322":"predictions = pipeline.predict(phrase_test)","a0944194":"from sklearn.metrics import classification_report","7de45ba6":"print(classification_report(sentiment_test,predictions))","1322f3a4":"test_data = pd.read_csv('..\/input\/test.tsv',sep='\\t')","da11d27e":"test_data.head()","a0d83bac":"test_predictions = pipeline.predict(test_data['Phrase'])","148f9489":"phrase_id = test_data['PhraseId'].values","589bd80b":"test_predictions.shape","7b34d8b5":"final_answer = pd.DataFrame({'PhraseId':phrase_id,'Sentiment':test_predictions})","312d22ec":"final_answer.head()","6a74be66":"filename = 'Sentiment Analysis - NaiveBayes.csv'\n\nfinal_answer.to_csv(filename,index=False)\n\nprint('Saved file: ' + filename)","d0981f55":" The sentiment labels are:\n\n0 - negative; \n1 - somewhat negative; \n2 - neutral; \n3 - somewhat positive; \n4 - positive","8a16e836":"The part of the sentence above which says 'but none of which amounts to much of a story' corresponds to a neagtive sentiment which is correctly indicated in the sentiment label '1'. Hence if we remove this phrase from the sentence as is done below, we get a neutral sentiment as the label!","8bb13239":"Using pipeline feature of sklearn - ","f53846e6":"Addition of a word like 'for' has shifted the sentiment from negative to neutral as shown below. Hence it is not recommended to use stopwords filtering here as we are not analysing full messages here, but phrases from the same sentence. A stopword like 'but' or 'not' can really alter the sentiment and hence filtering out them will be counterproductive.","e2adc8be":"Lets clean the phrases by removing punctuation marks and splitting them into a list"}}