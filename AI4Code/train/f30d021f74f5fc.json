{"cell_type":{"109c64ee":"code","fe767200":"code","93492e0f":"code","5ccbaad8":"code","b6d09c67":"code","6f65342b":"code","5436dbfd":"code","0c932554":"code","66026b92":"code","f6dc1e43":"code","ec65ae60":"code","83e31615":"code","32897d14":"code","743e1ced":"code","ee3cd0ef":"code","a189d9ee":"markdown","7c99446d":"markdown","f0ab1e92":"markdown","86d3d089":"markdown"},"source":{"109c64ee":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fe767200":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndf","93492e0f":"df['gender'].value_counts()","5ccbaad8":"df['race\/ethnicity'].value_counts()","b6d09c67":"df['parental level of education'].value_counts()","6f65342b":"df['lunch'].value_counts()","5436dbfd":"df['test preparation course'].value_counts()","0c932554":"df.isnull().sum()","66026b92":"df.dtypes","f6dc1e43":"plt.hist(df['math score'].loc[df['gender']=='male'])\nplt.show() ","ec65ae60":"plt.hist(df['math score'].loc[df['gender']=='female'])\nplt.show() ","83e31615":"x = df[['math score']].loc[(df['gender']=='male') & (df['math score'] >= 80)]\ny = df[['math score']].loc[(df['gender']=='female') & (df['math score'] >= 80)]\nscore = pd.DataFrame({'Male' : [len(x)], 'Female': [len(y)]})\nscore\n#plt.hist(score)\n#plt.show()","32897d14":"A_score_math = df.loc[df['math score'] >= 75]\nscore = A_score_math[['gender']]\nplt.hist(score)\nplt.title(\"Student's gender who success in math exam\")\nplt.show()","743e1ced":"A_score_reading = df.loc[df['reading score'] >= 75]\nscore = A_score_reading[['gender']]\nplt.hist(score)\nplt.title(\"Student's gender who success in reading exam\")\nplt.show()","ee3cd0ef":"A_score_writing = df.loc[df['writing score'] >= 75]\nscore = A_score_writing[['gender']]\nplt.hist(score)\nplt.title(\"Student's gender who success in writing exam\")\nplt.show()","a189d9ee":"# **1. Importing Data**","7c99446d":"# 3. Analyze what score they got for each gender","f0ab1e92":"# **2. Data Preprocessing**","86d3d089":"\n**It can be seen that men do better on math exams. however women did better on both writing and reading tests**"}}