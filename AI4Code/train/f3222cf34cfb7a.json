{"cell_type":{"6dcf77fb":"code","e2f91240":"code","352e4759":"code","3d6d8088":"code","d216d23e":"code","04deb0d3":"code","bc529fb6":"code","26e37535":"code","0bf4ce43":"code","06caf64f":"code","627eb6cd":"code","20685d0e":"code","600d0bfb":"code","045e68a3":"code","164ba169":"code","8be64b11":"code","f8429e13":"code","991ffaf9":"code","85ce5733":"code","41999897":"code","3e739381":"code","c4857f93":"code","d7372d37":"code","6a080c1a":"code","e8d856c2":"code","232f7b42":"code","1e79dc13":"code","ba314739":"code","d5bbbbaa":"code","7ef0ad30":"code","0b375866":"code","b98ececf":"code","c8e5b85a":"code","f75f860e":"code","1c567f5f":"code","bfed890d":"code","28b0d57e":"code","99dc94ce":"code","ed1b3894":"code","aa1a422f":"code","5a3374a6":"code","b54f4f17":"code","38d32db6":"markdown","e18e17e8":"markdown","b823a5ef":"markdown","82de385c":"markdown","204dd7cd":"markdown","9334864e":"markdown","a9206cee":"markdown","7f1989ad":"markdown","bc8af80a":"markdown","f0b779e7":"markdown","3f9536de":"markdown","f81795c9":"markdown","2a31be09":"markdown","b984bbf7":"markdown","ef0eeffd":"markdown","5d55a09b":"markdown","4d7f143d":"markdown","cd271d30":"markdown","22cc1794":"markdown","e262d288":"markdown"},"source":{"6dcf77fb":"# first let's load our data\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\ndf = pd.read_csv(\"..\/input\/medicalappointmentnoshown\/KaggleV2-May-2016.csv\")\ndf.head(5)","e2f91240":"# let's see from which period theese appointments are\ndf.AppointmentDay.min(), df.AppointmentDay.max()","352e4759":"# then let's see the shape of our data\ndf.shape","3d6d8088":"# and get general numeric attributes\ndf.describe()","d216d23e":"# checking column information for missing values and strange types\ndf.info()","04deb0d3":"# checking for general data duplicates\ndf.duplicated().sum(), df.PatientId.duplicated().sum(), df.AppointmentID.duplicated().sum()","bc529fb6":"# checking all possible values on some columns\nprint(df.Gender.unique())\nprint(sorted(df.Age.unique()))\nprint(sorted(df.Neighbourhood.unique()))\nprint(df.Scholarship.unique())\nprint(df.Hipertension.unique())\nprint(df.Diabetes.unique())\nprint(df.Alcoholism.unique())\nprint(df.Handcap.unique())\nprint(df.SMS_received.unique())\nprint(df['No-show'].unique())","26e37535":"# let's remove some useless columns\n# I think the appointmentID is useless for this analysis\ndf.drop(['AppointmentID'], axis=1, inplace=True)\ndf.columns","0bf4ce43":"# renaming all columns to simpler names for our exploration\ndf.rename(columns={'PatientId': 'patient_id', 'ScheduledDay': 'scheduled_day', 'AppointmentDay': 'appointment_day', 'SMS_received': 'received_sms', 'No-show': 'no_show', 'Handcap': 'handicap' }, inplace=True)\ndf.rename(columns=lambda x: x.lower(), inplace=True)\ndf.columns","06caf64f":"# formatting the patient_id column as string\ndf.patient_id = df.patient_id.apply(lambda patient: str(int(patient)))","627eb6cd":"# formatting the date time 'scheduled_day' and 'appointment_day' columns\n# i'm just testing different forms of time conversion here\ndf.scheduled_day = pd.to_datetime(df.scheduled_day)\ndf.appointment_day = df.appointment_day.apply(np.datetime64)\n\ndf.scheduled_day.head(1), df.appointment_day.head(1)","20685d0e":"# formatting the 'no_show' column with lower cases\ndf.no_show = df.no_show.map({ 'No': 'no', 'Yes': 'yes' })\n\ndf.no_show.unique()","600d0bfb":"# discart the ages bellow zero\ndf = df.query('age >= 0')\nprint(sorted(df.age.unique()))","045e68a3":"# remove the weird values from handcap variable\ndf.loc[df.handicap > 1, 'handicap'] = 1\ndf.handicap.unique()","164ba169":"# creating the first column \"appointment_week_day\"\ndf['appointment_week_day'] = df.appointment_day.map(lambda day: day.day_name())\ndf.appointment_week_day.head()","8be64b11":"# creating the second column \"appointment_waiting_time\"\ndf[\"appointment_waiting_days\"] = df.appointment_day - df.scheduled_day\ndf.appointment_waiting_days.head()","f8429e13":"# well it seams that some are treated on the same day that they scheduled\n# we can prevent that weird value by calculating the the \"absolute value\" of this column\n# and then converting the \"time\" to \"days\"\ndf.appointment_waiting_days = df.appointment_waiting_days.abs().dt.days\ndf.appointment_waiting_days.head(10)","991ffaf9":"# let's see how our data looks like after all cleanning\ndf.head(5)","85ce5733":"# first let's re-see our dataset description\ndf.describe()","41999897":"# and plot basic histogram charts\ndf.hist(figsize=(15, 8));","3e739381":"def show_no_show_trend(dataset, attribute, fit_reg = True):\n    '''Prints a chart with no_show_rate explanation\n    Syntax: show_no_show_trend(dataframe, attribute), where:\n        attribute = the string representing the attribute;\n        dataframe = the current dataframe;\n    '''\n    return sns.lmplot(data = dataset, x = attribute, y = 'no_show_rate', fit_reg = fit_reg, legend = True, height=8, aspect=2)    \n\ndef show_attribute_statistics(attribute, dataframe, scale = 0.06, sorter = False, verticalLabel = False):\n    '''Prints basic statistics from the attribute also plotting the basic chart. \n    Syntax: show_attribute_statistics(dataframe, attribute), where:\n        attribute = the string representing the attribute;\n        dataframe = the current dataframe;\n        scale = what's the scale you want to converto;\n        sorter = array representing the sort reindex;\n    '''\n    \n    # grouping by the patients by attribute and see if there is any interesting data related to their no showing\n    # also stripping unwanted attributes with crosstab - https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.crosstab.html\n    dataset = pd.crosstab(index = dataframe[attribute], columns = dataframe.no_show).reindex(sorter).reset_index() if sorter else pd.crosstab(index = dataframe[attribute], columns = dataframe.no_show).reset_index()\n    \n    # replacing all none values with zero, since it's the count of patients on that categorie\n    dataset['no'].fillna(value=0, inplace=True)\n    dataset['yes'].fillna(value=0, inplace=True)\n\n    # let's also record the rate of no-showing base on the attribute\n    dataset[\"no_show_rate\"] = dataset['yes'] \/ (dataset['no'] + dataset['yes'])\n    dataset.no_show_rate.fillna(value=0.0, inplace=True)\n\n    dataset[\"no_show_rate_value\"] = dataset[\"no_show_rate\"] * 100 \n    dataset.no_show_rate_value.fillna(value=0.0, inplace=True)\n    \n    # plotting our data\n    plt.figure(figsize=(30, 10))\n\n    # scale data if needed\n    dataset['no'] = dataset['no'] * scale\n    dataset['yes'] = dataset['yes'] * scale\n\n    # line chart\n    plt.plot(dataset.no_show_rate_value.values, color=\"r\")\n\n    # bar chart\n    plt.bar(dataset[attribute].unique(), dataset['no'].values, bottom = dataset['yes'].values)\n    plt.bar(dataset[attribute].unique(), dataset['yes'].values)\n\n    # configs\n    if (verticalLabel):\n        plt.xticks(rotation='vertical')\n        \n    plt.subplots_adjust(bottom=0.15)\n    plt.xlabel(attribute, fontsize=16)\n    plt.ylabel(f\"amount of patients (scaled 1 to {scale * 100}%)\", fontsize=16)\n    plt.legend([\"not attended rate\", \"attended\", \"not attended\"], fontsize=14)\n\n    plt.title(\"amount of patient by no show appointment groupped by %s\" % attribute)\n\n    plt.show();\n    \n    return dataset","c4857f93":"age_dataset = show_attribute_statistics(\"age\", df);\nshow_no_show_trend(age_dataset, \"age\");","d7372d37":"appointment_waiting_days_dataset = show_attribute_statistics(\"appointment_waiting_days\", df)\nshow_no_show_trend(appointment_waiting_days_dataset, \"appointment_waiting_days\")","6a080c1a":"categories = pd.Series(['same day: 0', 'week: 1-7', 'month: 8-30', 'quarter: 31-90', 'semester: 91-180', 'a lot of time: >180'])\ndf['waiting_days_categories'] = pd.cut(df.appointment_waiting_days, bins = [-1, 0, 7, 30, 90, 180, 500], labels=categories)\nwaiting_days_categories_dataset = show_attribute_statistics(\"waiting_days_categories\", df, 0.005)\nshow_no_show_trend(waiting_days_categories_dataset, \"waiting_days_categories\", False)","e8d856c2":"# splitting data in groups\nsame_day_category = df[df.waiting_days_categories == categories[0]]\nshort_period_category = df.query(f\"waiting_days_categories in ['{categories[1]}', '{categories[2]}']\")\nquarter_category = df[df.waiting_days_categories == categories[3]]\nlong_period_category = df[df.appointment_waiting_days > 90]\n\nsame_day_category.waiting_days_categories.unique(), short_period_category.waiting_days_categories.unique(), quarter_category.waiting_days_categories.unique(),  long_period_category.waiting_days_categories.unique()","232f7b42":"print(\"Same day \\n\", same_day_category.mean(numeric_only=True))\nprint(\"\\n\")\nprint(\"Short period \\n\", short_period_category.mean(numeric_only=True))\nprint(\"\\n\")\nprint(\"Quarter \\n\", quarter_category.mean(numeric_only=True))\nprint(\"\\n\")\nprint(\"Long period \\n\", long_period_category.mean(numeric_only=True))","1e79dc13":"received_sms_dataset = show_attribute_statistics(\"received_sms\", df, 0.005)\nshow_no_show_trend(received_sms_dataset, \"received_sms\")","ba314739":"appointment_week_day_dataset = show_attribute_statistics(\"appointment_week_day\", df, 0.005, ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'])\nshow_no_show_trend(appointment_week_day_dataset, \"appointment_week_day\", False)","d5bbbbaa":"gender_dataset = show_attribute_statistics(\"gender\", df, 0.001)\nshow_no_show_trend(gender_dataset, \"gender\", False)","7ef0ad30":"neighbourhood_dataset = show_attribute_statistics(\"neighbourhood\", df, 0.06, False, True);\nneighbourhood_no_show_trend = show_no_show_trend(neighbourhood_dataset, \"neighbourhood\", False)\nneighbourhood_no_show_trend.set_xticklabels(rotation='vertical')","0b375866":"df_groupped_by_neighborhood = df.groupby(['neighbourhood', 'no_show']).count().unstack().patient_id\ndf_groupped_by_neighborhood[\"sum\"] = df_groupped_by_neighborhood['no'] + df_groupped_by_neighborhood['yes']\ndf_groupped_by_neighborhood.sort_values(by=\"sum\", inplace=True)\ndf_groupped_by_neighborhood.dropna(inplace=True)\n\n# plotting our data\nplt.figure(figsize=(20, 30))\n\n# bar chart\nplt.barh(df_groupped_by_neighborhood.index, df_groupped_by_neighborhood['no'].values)\nplt.barh(df_groupped_by_neighborhood.index, df_groupped_by_neighborhood['yes'].values)\n\n# configs\nplt.xlabel(\"amount of patients\")\nplt.ylabel(\"neighbourhood\")\nplt.legend([\"attended\", \"not attended\"])\n\nplt.title(\"amount of patient by no show appointment groupped by neighbourhood\")\n\nplt.show();","b98ececf":"# getting all neighbourhoods data from patients that no-showed groupped by waiting days categories\ndf_no_shows_by_neighbourhood_waiting_days_categories = df.query('no_show == \"yes\"').groupby(['neighbourhood', 'waiting_days_categories']).count().patient_id.fillna(value=0).unstack()\ndf_no_shows_by_neighbourhood_waiting_days_categories.head()","c8e5b85a":"# normalizing values from the dataframe you can check out the method for this here: https:\/\/stackoverflow.com\/a\/31480994\ndf_no_shows_by_neighbourhood_waiting_days_categories = df_no_shows_by_neighbourhood_waiting_days_categories.div(df_no_shows_by_neighbourhood_waiting_days_categories.sum(axis=1), axis=0)\ndf_no_shows_by_neighbourhood_waiting_days_categories.head()","f75f860e":"# converting the normalized values to percentage\ndf_no_shows_by_neighbourhood_waiting_days_categories = (df_no_shows_by_neighbourhood_waiting_days_categories * 100).round(2)\ndf_no_shows_by_neighbourhood_waiting_days_categories.head()","1c567f5f":"# get all necessary data for plotting\nneighbourhoods = df_no_shows_by_neighbourhood_waiting_days_categories.index\nwaiting_days_categories = df_no_shows_by_neighbourhood_waiting_days_categories.columns.values\n\nno_show_values_by_neighbourhood = np.array(df_no_shows_by_neighbourhood_waiting_days_categories.values)\n\nneighbourhoods, waiting_days_categories","bfed890d":"# plot the heatmap\nfigure, axes = plt.subplots(figsize=(60, 60))\naxes.imshow(no_show_values_by_neighbourhood)\n\n# show all the ticks\naxes.set_xticks(np.arange(len(waiting_days_categories)))\naxes.set_yticks(np.arange(len(neighbourhoods)))\n\n# show all tick labels\naxes.set_xticklabels(waiting_days_categories)\naxes.set_yticklabels(neighbourhoods)\n\n# Rotate the tick labels and set their alignment.\nplt.setp(axes.get_xticklabels(), rotation=90, ha=\"right\", rotation_mode=\"anchor\")\n\n# Loop over data dimensions and create text annotations.\nfor i in range(len(neighbourhoods)):\n   for j in range(len(waiting_days_categories)):\n       axes.text(j, i, no_show_values_by_neighbourhood[i, j], ha=\"center\", va=\"center\", color=\"w\")\n\naxes.set_title(\"no-show by neighbourhoods and waiting categories\")\nfigure.tight_layout()\nplt.show()","28b0d57e":"df_duplicated_patients = df[df.patient_id.duplicated() == True].groupby(['patient_id', 'no_show']).no_show.count().unstack()\ndf_duplicated_patients.fillna(0, inplace=True)\ndf_duplicated_patients[\"sum\"] = df_duplicated_patients['no'] + df_duplicated_patients['yes']\ndf_duplicated_patients[\"no_show_rate\"] = df_duplicated_patients['yes'] \/ (df_duplicated_patients['no'] + df_duplicated_patients['yes'])\ndf_duplicated_patients[\"no_show_rate_value\"] = df_duplicated_patients[\"no_show_rate\"] * 100\ndf_duplicated_patients.sort_values(by=\"sum\", inplace=True)\ndf_duplicated_patients.dropna(inplace=True)\n\ndf_duplicated_patients.head()","99dc94ce":"df_duplicated_patients.describe()","ed1b3894":"duplicated_categories = pd.Series(['1', '2-5', '6-20', '21-40', '41-60', '>60'])\ndf_duplicated_patients['appointments_count_category'] = pd.cut(df_duplicated_patients['sum'], bins = [-1, 1, 5, 20, 40, 60, 500], labels=duplicated_categories)\ndf_duplicated_patients.head()","aa1a422f":"# see the distribution of the categories vs the no showing rate\nshow_no_show_trend(df_duplicated_patients, \"appointments_count_category\", False)","5a3374a6":"# check the rate of not attending by groups\ndf_duplicated_patients_group_by_category = df_duplicated_patients.groupby('appointments_count_category')\npatients_attended = df_duplicated_patients_group_by_category.no.sum()\npatients_not_attended = df_duplicated_patients_group_by_category.yes.sum()\n\npatients_not_attended \/ (patients_attended + patients_not_attended)","b54f4f17":"from subprocess import call\ncall(['python', '-m', 'nbconvert', 'Investigate_a_Dataset.ipynb'])","38d32db6":"# Project: Medical Appointment No Shows\n\n**!this is a WIP!**\n\nThis is my second real project related to my Udacity's nanodegree and its purpose is only to:\n- wrangling the data\n- make analysis based on my questions\n- draw conclusions about my findings\n\nI choose this problem because: \n- I live in Brazil and this motivate's me \n- This problem is on Kaggle so\n  - I can get inspiration in other kernel's as I'm starting in this area\n  - I can publish my first kernel\n  - I'm publishing as a public kernel and that point already cover the step four of the project **\"Share your findings\"**\n\n\n## Table of Contents\n<ul>\n<li>\n    <a href=\"#intro\">1. Introduction<\/a>\n    <ul>\n        <li><a href=\"#first-impressions\">1.1. First impressions<\/a><\/li>\n        <li><a href=\"#questions\">1.2. Questions<\/a><\/li>\n    <\/ul>\n<\/li>\n<li>\n    <a href=\"#wrangling\">2. Data Wrangling<\/a>\n    <ul>\n        <li><a href=\"#general-properties\">2.1. General Properties<\/a><\/li>\n        <li><a href=\"#data-cleaning\">2.2. Data Cleaning<\/a><\/li>\n    <\/ul>\n<\/li>\n<li>\n    <a href=\"#eda\">3. Exploratory Data Analysis<\/a>\n    <ul>\n        <li>\n            <a href=\"#age\">3.1. Age<\/a>\n        <\/li>\n        <li>\n            <a href=\"#waiting-days\">3.2. Waiting days<\/a>\n            <ul>\n                <li><a href=\"#analysing-the-decrease-after-a-month\">3.2.1. Analysing the decrease after a month<\/a><\/li>\n            <\/ul>\n        <\/li>\n        <li>\n            <a href=\"#received-sms\">3.3. Received sms<\/a>\n        <\/li>\n        <li>\n            <a href=\"#appointment-week-day\">3.4. Appointment week day<\/a>\n        <\/li>\n        <li>\n            <a href=\"#gender\">3.5. Gender<\/a>\n        <\/li>\n        <li>\n            <a href=\"#neighbourhood\">3.6. Neighbourhood<\/a>\n        <\/li>\n        <li>\n            <a href=\"#patient-id\">3.7. Patient Id<\/a>\n        <\/li>\n        <li>\n            <a href=\"#answering-questions\">3.8. Answering questions<\/a>\n        <\/li>\n    <\/ul>\n<\/li>\n<li><a href=\"#conclusions\">4. Conclusion<\/a><\/li>\n<\/ul>","e18e17e8":"Through the chart above, it becomes evident that the **no-showing rate increases as times goes by until it reach a quarter**.\n\nIt reaches lower rates when the patient is attended on the same day that this may happen depending on the urgency or even if they go to the health center withou any scheduling.\n\nOne interesting thing is the fact of the rate start decreasing after a quarter of waiting time.\n\nWe can get the group of patients that are attended on the same day and analyse it's differences from patients from other groups.\n\n<a id=\"analysing-the-decrease-after-a-month\"><\/a>\n#### 3.2.1. Analysing the decrease after a month\n\nJust to see what's de difference between the semester group from others, let's split our data in groups:\n- Attended on \n  - same day\n  - between a week and a month\n  - quarter\n  - after a quarter (90 days)","b823a5ef":"Based on the findings above we can see the differences between the groups:\n\n|              | Attended on the same day | Attended in a short period (week - month) | Attended in a period of 31-90 days (quarter) | Attended in a long period (> 90 days) |\n| ------------ | ------------------------ | ----------------------------------------- | -------------------------------------------- | ------------------------------------- |\n| Average age  | 35 years                 | 38 years                                  | 37 years                                     | **58 years**                          |\n| Scholarship  | **~10%**                 | ~9%                                       | ~6%                                          | ~7%                                   |\n| Hipertension | ~18%                     | ~21%                                      | ~15%                                         | **~57%**                              |\n| Diabetes     | ~7%                      | 7%~                                       | ~4%                                          | **~14%**                              |\n\nFrom this analysis we can conclude that the drastic drop on the no-show rating from the period longer than a quarter probably is **due to being an older public** who require regular medical follow-up and tend to schedule more appointments.\n\n<a id=\"received-sms\"><\/a>\n### 3.3. Received sms\n\nLet's check out the received sms attribute","82de385c":"Well, we can't see too well our data, let's plot a better chart","204dd7cd":"Through the chart above, we can see that we have a large amount of female patients.\n\nWe can assume that in this context that women tend to care more about their health than man due to the massive difference from the consultants as we can see [here](https:\/\/www.everydayhealth.com\/columns\/health-answers\/why-men-dont-go-to-the-doctor\/) and the rate of no-showing rate of men is smaller than women.\n\nSo woman and men have a similar no-showing proportion.\n\n<a id=\"neighbourhood\"><\/a>\n### 3.6. Neighbourhood","9334864e":"Through the chart above, we can see that the **no-showing rate increases during the week as soon as it starts**, and **we have a small drop on Thursday** but it keeps growing until the weekend.\n\nIt reaches lower rates when the patient is attended on thursdays but most of the time, the data is consistent between week days.\n\n<a id=\"gender\"><\/a>\n### 3.5. Gender","a9206cee":"Wow, there's a lot of patients! \n\nAs we can see in the statistics above:\n- Most of patients are showing at their appointments but we have **~20%** of no_showing rate\n- There are patients that maybe just missed the appointment and re-scheduled\n- We have patients that are on the 86th consulting meaning that is a regular patient\n\nWe can group the duplicated patients on groups just like we did on the waiting days categorization section:\n\n- 1 appointment\n- 2 to 5 appointments\n- 6 to 20 appointments\n- 21 to 40 appointments\n- 41 to 60 appointments\n- \\> 60 appointments","7f1989ad":"Well, we don't have a greater difference as we can see on the chart above, only **~1% of the no-show rate** of difference between the received \/ not received sms. \n\nSo this attribute may not be that relevant to conclude something about this data.\n\nWe can continue through the variables:\n- appointment_week_day\n- gender\n- neighbourhood\n- patient_id\n\nInvestigating it's relations with no-show.\n\n<a id=\"appointment-week-day\"><\/a>\n### 3.4. Appointment week day","bc8af80a":"<a id=\"first-impressions\"><\/a>\n### 1.1. First impressions\n\nFirst of all, we can notice that:\n- We have 110k+ rows and 14 columns in this dataset (as explained on the challenge overview)\n- I want to check if the patientId is duplicated since I don't know if they can have more than one appointment\n- Depending on the analysis, maybe the **PatientId**, **AppointmentID** and **Neighbourhood** be useless for the analysis\n- It's important to highlight that the **No-show** column value **Yes** means that the pacient didn't show at the appointment\n\nAlso we can already draw some assumptions:\n- there are more than 100k appointments scheduled in a period of ~2 months and that's really impressive\n- most of the patients have about 37 yeas old with almost no scholarship (9%)\n- in mean \n  - 19% of the patients have hipertension\n  - 7% of the patients have diabetes\n  - 3% of the patients suffers from alcoholism\n  - 2% of the patients are handicapped\n  \nI'll analyse the **\"No-Show\"** as my dependent variable since to me it's the most important one and it's strongly related to what we want to discover here.\n\nAnd I'll use all dataset variables in my analysis, I just want to check on the **Data wrangling** stage if we really need the:\n- Patient id\n- Appointment id\n- Neighbourhood\n\nSince it look's like this variables are not that important for this analysis.\n\n<a id=\"questions\"><\/a>\n### 1.2. Questions\n\nThe main questions I want to answer are:\n- Based on the variables we have, what is the most relevant factor that is influencing the patient to no showing the medical appointment?\n- There are any relation on these variables that can lead us to a more specific group of patients?\n- The day of the week of the appointment influences the patient no showing?\n- The waiting time of the patient between the schedule day and the appointment day influences it's no showing?\n- There are patients no showing in appointments on the same day?\n\n<a id='wrangling'><\/a>\n## 2. Data Wrangling\n\nIn this section the data will be analysed and cleaned, dealing with missing values or weird values.\nAlso we're gonna explore in a deeper lever in a way that maybe we can formulate more questions.\n\n<a id=\"general-properties\"><\/a>\n### 2.1. General Properties\n\nHere we're gonna explore our dataset properties checking for:\n- What kind of variables we need to:\n  - convert the data type\n  - drop from the dataset\n- Check for duplicates\n- Check for weird values (outliers)\n- Gather more information about a specific variable\n- Check if we need to create more columns with usefull data for the exploration","f0b779e7":"It looks like we have a good dataset: \n- no missing lines \n- we discover that indeed we need the **Patient ID** since it seems some patients try to make new appointments\n- there are no weird values on most columns\n\nBut we'll need to do some cleaning here:\n- we need to fix some data typings\n  - ScheduledDay and AppointmentDay makes sense to be a date\/datetime type\n  - No-Show makes sense to be a boolean\n  - PatientId makes sense to be converted as string to prevent from being applied as a numerical operation since it represents the patient identification\n- **Appointment ID** seems to not be usefull for this analysis\n- **Handcap** variable have values beyond True and False, and we can see [here](https:\/\/www.kaggle.com\/joniarroba\/noshowappointments\/discussion\/29699#229356) that this occurs because the handcap field represents the number of patient disabilities\n\nAnd we can also make more questions:\n- On the problem summary they don't mention on which location we're analysing, I've thought that we're analysing data from several cities from Brazil, but it seams that we're seing a specific region\n  - We can see [here](https:\/\/www.kaggle.com\/joniarroba\/noshowappointments\/discussion\/38330#) that this dataset contains appointments from *Vit\u00f3ria - ES* in Brazil and this turns out to be even more impressive that there are more than 100k schedulled in a ~2 month period in 2016\n  \nNow we can analyse also the neighbourhood data either!\n\n<a id=\"data-cleaning\"><\/a>\n### 2.2. Data Cleaning\n\nHere we're need to:\n- remove useless columns\n- rename the columns to use easier names during the exploration while fixing typos\n- format patient id column to string\n- format all date related columns to the correct type\n- remove the weird age value that is less than zero\n- format the handicap field correctly, since we only want to know if the patient is handicap and not how many disabilities they have\n- add new columns\n  - appointment_week_day: to show what day of the week the appointment was scheduled\n  - appointment_waiting_time: waiting time to the appointment","3f9536de":"As we can see, the **Jardim Camburi** is the one with most of the appointments in the state.\n\n**Jardim Camburi** is the [most populous neighbourhood from \"Esp\u00edrito Santo\"](https:\/\/pt.wikipedia.org\/wiki\/Jardim_Camburi)\n\nJust to finish our analysis about the neighbourhood, let's check out its relation with the no-show attribute.","f81795c9":"In the age case, maybe it's nicer if we can group that data, since we have a large amount of distribution between the points.\n\nSo I'll group by based on the user [tsilveira](https:\/\/www.kaggle.com\/tsilveira\/applying-heatmaps-for-categorical-data-analysis) on his kernel and using the cut method explained on [this article](https:\/\/www.analyticsvidhya.com\/blog\/2016\/01\/12-pandas-techniques-python-data-manipulation\/)\n\nSo I'll categorize the data in these groups:\n\n| waiting time | days |\n| -- | -- |\n| same day | 0 |\n| week | 1 - 7 |\n| month | 8 - 30 |\n| quarter | 31 - 90 |\n| semester | 91 - 180 |\n| a lot of time | > 180 |","2a31be09":"Finally we can conclude that:\n\nIn patients that have duplicated appointments:\n- The rate of not attending is higher on patients that schedule from 1 to 20 appointments **~21%**\n- This rate drastically drop from patients on the **> 21 appointment group** to **~10%** and patients **> 41 appointments** this rate drops even further to **~3%** since they seems to be regular patients\n\n<a id=\"answering-questions\"><\/a>\n### 3.8. Answering questions\n\n#### Based on the variables we have, what is the most relevant factor that is influencing the patient to no showing the medical appointment?\n\nThere isn't a clear conclusin here, we actually see a lot of interesting insights analysing:\n- Age\n- Waiting days\n- Received Sms\n- Appointment week day\n- Gender\n- Neighbourhood\n- Duplicated patients\n\nWe only can discart the **received sms** since the difference is not meaningfull to reach any conclusion.\n\nBut all other variables have great relevance that may influences the patient to no showing.\n\nMaybe we can in a further analysis mix them up to find a more interesting pattern.\n\n#### There are any relation on these variables that can lead us to a more specific group of patients?\n\nYes, we found some specific group of patients:\n\n- Age \n  - younger patients tend to no-showing\n- Waiting days\n  - elder patients tend to schedule their appointments for long periods of waiting days\n- Neighbourhood\n  - we found some places that have a more frequent no-showing rate that could be further analysed\n- Duplicated patients\n  - the group of patients that have from 1 to 20 appointments scheduled\n\n#### The day of the week of the appointment influences the patient no showing?\n\nActually not that much, there is a very subtle decrease of the no-showing rate for patients that attend on **Thursdays**\n\n#### The waiting time of the patient between the schedule day and the appointment day influences it's no showing?\n\nYes, most of the patients are attended on the same day having the lowest no-show rate.\n\nAfter that the no-showing rate grows until reach a quarter (~90 days) of waiting, after that the rate start dropping.\n\n#### There are patients no showing in appointments on the same day?\n\nYes, but is one of the lowest rate of no-showing rate of the groups.\n\n<a id='conclusions'><\/a>\n## 4. Conclusion\n\nThis analysis had as purpose to perform an analysis of a database of medical consultations, containing more than 100k appointments which approximately **30%** of the patients have not attended.\n\nThe notebook had the purpose of gather some insights on the possible causes of this missing appointments.\n\nI would also like to leave a warning that it is not possible to affirm any veracity of the provided statements and statistical validity of the data but the insights obtained through this analysis can, so instead, inform and direct in-depth research on the subject in order to validate the causes of the missing appointments and find more conclusive insights.\n\nWe find some interesting insights analysing the attributes, summing up:\n\n### Dataset\/Analysis limitations\n\nDuring our entire report we faced limitations and challenges.\n\n- Some informations are not clear in the description of the dataset and you can only find that missing piece by looking out on the forum on some posts\n- We do not have confirmations of where the data comes from, even though it is public services that the author clarified [here](https:\/\/www.kaggle.com\/joniarroba\/noshowappointments\/discussion\/28825161646)\n- There is no guarantee that the patientsID are being exposed correctly or even if is an anonymous one\n- We don't have acess on how many health units share the same patient databse may causing some inconsistency on the data provided, maybe we have the same patient with different IDs or general data\n- Some informations about the columns of the dataset was outdated, for example, the **handicap** is documented as \"True\/False\" variable but in the dataset it represents the amount of disabilites of the patients\n- The lack of more data on the dataset about some variables like **neighbourhood** don't permit we do a in-depth analysis to really give any conclusion about the no-show rate since there are a huge difference associating the displacement habits of each patient and the socioeconomic characteristics of each neighborhood\n- There are a few inconsistences on the dataset that need to be verified for example, negative age values and weird scheduling dates\n- The analysis was limited to categorize the patient waiting time \/ amount of appointments and analysing the mix of the attributes and I have a limited math skill so its not possible to provide relevant insights that could lead us to a relevant conclusion\n\n### Age\n\nThe no-showing rate of age decresases as older the person is. \n\nIt reaches higher rates when the patient is a **baby\/child** and the lowest rates when the patient is around **96 years old.**\n\nThe higher rates may occur because:\n- parents or guardians may have difficulties bringing the child to the appointment\n- there was a long wait until the attendance (but we'll se more about that later)\n\nAnd the lower rates may occur because:\n- we're dealing with older population meaning that as times goes by people tend to visit and be present at health appointments\n\n### Waiting days\n\nWe groupped the waiting days in categories:\n\n| waiting time | days |\n| -- | -- |\n| same day | 0 |\n| week | 1 - 7 |\n| month | 8 - 30 |\n| quarter | 31 - 90 |\n| semester | 91 - 180 |\n| a lot of time | > 180 |\n\nThe no-showing rate increases as time goes by until it reach a quarter.\n\nIt reaches lower rates when the patient is attended on the same day and start decreasing after a quarter of waiting time.\n\nWe can see on the table bellow the characteristics of patients splitted by the groups.\n\n|              | Attended on the same day | Attended in a short period (week - month) | Attended in a period of 31-90 days (quarter) | Attended in a long period (> 90 days) |\n| ------------ | ------------------------ | ----------------------------------------- | -------------------------------------------- | ------------------------------------- |\n| Average age  | 35 years                 | 38 years                                  | 37 years                                     | **58 years**                          |\n| Scholarship  | **~10%**                 | ~9%                                       | ~6%                                          | ~7%                                   |\n| Hipertension | ~18%                     | ~21%                                      | ~15%                                         | **~57%**                              |\n| Diabetes     | ~7%                      | 7%~                                       | ~4%                                          | **~14%**                              |\n\nFrom this analysis we can conclude that the drastic drop on the no-show rating from the period longer than a quarter probably is **due to being an older public** who require regular medical follow-up and tend to schedule more appointments.\n\n### Received Sms\n\nWe didn't found any relevant aspect that can bring a consistent insight by analysing this attribute.\n\nOnly that patients that have received sms have they're no-show rate **increased** in **~10%** related to patients that haven't received any reminder.\n\n### Appointment week day\n\nThe no-showing rate increases during the week as soon as it starts.\n\nBut we have a small drop on **Thursdays** but is not that significant compared to all other weekdays.\n\n### Gender\n\nThere is a big difference on the amount of woman attending to consultations compared to the men.\n\nWe have a large amount of female patients, assuming the context that women tend to care more about their health than man due to the massive difference from the consultants as we can see [here](https:\/\/www.everydayhealth.com\/columns\/health-answers\/why-men-dont-go-to-the-doctor\/). \n\nBut woman and men have a similar no-showing proportion.\n\n### Neighbourhood\n\nSince we're analysing data from *Vit\u00f3ria - ES* we can see that **Jardim Camburi** is the one with most of the appointments in the state and actually is the [most populous neighbourhood from \"Esp\u00edrito Santo\"](https:\/\/pt.wikipedia.org\/wiki\/Jardim_Camburi).\n\nThe no-showing rate increases as the waiting gets longer for most of neighborhood.\n\nWe have a small rate difference for each local, some neighborhoods have higher no-showing rates even for short waiting times (ex: Ilha do Boi and Comdusa).\n\nSince we don't have enough data we can't investigate further for the reasons on such occurrences.\n\n### Duplicated patients\n\nWe checked out patients that have more than one appointment having a no-show rate of **~20%** in this cases.\n\nThe rate of not attending is higher on patients that schedule from 1 to 20 appointments **~21%**\n\nThis rate drastically drop from patients on the **> 21 appointment group** to **~10%** and patients **> 41 appointments** this rate drops even further to **~3%**\n\nThis rate drastically drop from patients on the **> 21 appointment group** to **~10%** and patients **> 41 appointments** this rate drops even further to **~3%** since they seems to be regular patients\n\n## References\n\n- Wikipedia - Sistema \u00danico de Sa\u00fade (SUS). https:\/\/en.wikipedia.org\/wiki\/Sistema_%C3%9Anico_de_Sa%C3%BAde. Accessed in April, 2018.\n- Dataset release - neighbourhood region information. https:\/\/www.kaggle.com\/joniarroba\/noshowappointments\/discussion\/38330#. Accessed in April, 2018.\n- Kaggle - Applying heatmaps for categorical data analysis. https:\/\/www.kaggle.com\/tsilveira\/applying-heatmaps-for-categorical-data-analysis. Accessed in April, 2018.\n- Kaggle - Predicting Show-Up\/No-Show. https:\/\/www.kaggle.com\/somrikbanerjee\/predicting-show-up-no-show.\n- Kaggle - EDA Medical Appointment No-show. https:\/\/www.kaggle.com\/lbronchal\/eda-medical-appointment-no-show.\n- Kaggle - Fundamental Data Analysis. https:\/\/www.kaggle.com\/tigerli1997\/fundamental-data-analysis.\n- Analytics Vidhya - 12 Useful Pandas Techniques in Python for Data Manipulation. https:\/\/www.analyticsvidhya.com\/blog\/2016\/01\/12-pandas-techniques-python-data-manipulation\/.\n- Everyday Health - 60 Percent of Men Don\u2019t Go to the Doctor: Here\u2019s Why. https:\/\/www.everydayhealth.com\/columns\/health-answers\/why-men-dont-go-to-the-doctor\/.\n- Wikipedia - Jardim Camburi. https:\/\/pt.wikipedia.org\/wiki\/Jardim_Camburi.\n- Matplotlib - Creating annotated heatmaps. https:\/\/matplotlib.org\/gallery\/images_contours_and_fields\/image_annotated_heatmap.html#sphx-glr-gallery-images-contours-and-fields-image-annotated-heatmap-py.","b984bbf7":"As we can see in the charts above in general the no-showing rate increases as the waiting gets longer for most of neighborhood.\n\nWe have a small rate difference for each local, some neighborhoods have higher no-showing rates even for short waiting times (ex: Ilha do Boi and Comdusa).\n\nSince we don't have enough data we can't investigate further for the reasons on such occurrences.\n\n<a id=\"patient-id\"><\/a>\n### 3.7. Patient Id\n\nIn this section, we're digging up on patients that re-scheduled their appointments.\n\nFirst let's filter our duplicated patients by its `no_show` and order them.","ef0eeffd":"<a id='intro'><\/a>\n## 1. Introduction\n\nThis analysis consist in explore a dataset containing aproximately 100k medial appointments from the Brazilian public health system known as [SUS (Single Health System)](https:\/\/en.wikipedia.org\/wiki\/Sistema_%C3%9Anico_de_Sa%C3%BAde). We're gonna explore the [*no-show appointments dataset*](https:\/\/www.kaggle.com\/joniarroba\/noshowappointments) dataset using this variables:\n\n- **PatientId:** Identification of a patient \n- **AppointmentID:** Identification of each appointment \n- **Gender:** Male or Female \n- **DataMarcacaoConsulta:** The day of the actuall appointment, when they have to visit the doctor \n- **DataAgendamento:** The day someone called or registered the appointment\n- **Age:** How old is the patient \n- **Neighbourhood:** Where the appointment takes place\n- [**Scholarship:**](https:\/\/en.wikipedia.org\/wiki\/Bolsa_Fam%C3%ADlia) True or False, indicates if the patient is in the *Bolsa Familia* program\n- **Hipertension:** True or False\n- **Diabetes:** True or False \n- **Alcoholism:** True or False \n- **Handcap:** True or False \n- **SMS_received:** 1 or more messages sent to the patient \n- **No-show** \"No\" indicates if the patient showed up to their appointment and \"Yes\" if they didn't show up\n\nWe're aiming to find possible reasons for patient no-showing at the scheduled appointments.","5d55a09b":"- most of the patients \n  - are bellow 60 years old\n  - doesn't suffer from alcoholism\/diabetes\/hipertension\n  - are not handicapped\n  - doesn't received a reminder sms\n  - aren't in the \"Bolsa familia\" program\n  - doesn't missed the appointment\n\nI think in this case the **age** is the most relevant variable that we can analyse, since it's the only one that have a better distribution between the amount of patients.\n\nAlso we can check out the **appointment_waiting_days** since it's one of the most relevant variables that we can mix up. \n\nAnd the **received_sms** since it is a 75 percentile and is the variable that have the most difference between the other boolean variables.\n\nI'll se this variables one by one a mix them up with our categorical variables:\n- appointment_week_day\n- gender\n- neighbourhood\n- patient_id","4d7f143d":"For this analysis, we want to check out the relation between the neighbourhood and waiting days categorie group.\n\nIn order to do that maybe it's best if we use a [heatmap](https:\/\/matplotlib.org\/gallery\/images_contours_and_fields\/image_annotated_heatmap.html#sphx-glr-gallery-images-contours-and-fields-image-annotated-heatmap-py), since we can compare the values between two categories\n\nAlso it's nice to normalize all data","cd271d30":"Through the charts above, it becomes evident that the **no-showing rate decreases as older the person is**.\n\nIt reaches higher rates when the patient is a baby\/child maybe because:\n- parents or guardians may have difficulties bringing the child to the appointment\n- or maybe because there was a long wait until the attendance (but we'll se more about that later)\n\nWe have one outlier in ~120 years old patients, but we can ignore that case since we have only one patient.\n\n<a id=\"waiting-days\"><\/a>\n### 3.2. Waiting days","22cc1794":"It seams we have all the data we need to start exploring and answer the questions.\n\n<a id='eda'><\/a>\n## 3. Exploratory Data Analysis\n\nFirst, let's review all questions that I want to answer:\n\n- Based on the variables we have, what is the most relevant factor that is influencing the patient to no showing the medical appointment?\n- There are any relation on these variables that can lead us to a more specific group of patients?\n- The day of the week of the appointment influences the patient no showing?\n- The waiting time of the patient between the schedule day and the appointment day influences it's no showing?\n- There are patients no showing in appointments on the same day?\n\nLet's:\n- analyse our data\n- mix them up\n- get assumptions along the way\n- answer our questions","e262d288":"<a id=\"age\"><\/a>\n### 3.1. Age"}}