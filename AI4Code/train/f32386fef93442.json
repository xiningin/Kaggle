{"cell_type":{"73d55419":"code","822c8a77":"code","33466cdf":"code","235b6c7f":"code","792fe9d4":"code","4cf9ebaf":"code","aad54de2":"code","d85d48ab":"code","e3457ae2":"code","8d7cac95":"code","2a8251d7":"code","7211d09a":"code","29a5f37c":"code","cec32d70":"code","25a74d48":"code","2e622a6d":"code","66982d92":"code","7ae3efae":"code","8f22ac6f":"code","b4f62187":"code","202713cb":"code","21559da2":"code","fc64ce05":"code","f40f6db4":"markdown","19ba6f6c":"markdown","bf6138e3":"markdown","45f80444":"markdown","7848114d":"markdown"},"source":{"73d55419":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","822c8a77":"df = pd.read_csv('..\/input\/kensho-ohio-voter-project\/oh_counties_black_2018.csv', encoding='ISO-8859-2')\ndf.head()","33466cdf":"df.isnull().sum()","235b6c7f":"# Distribution of different type of amount\nfig , ax = plt.subplots(1,3,figsize = (12,5))\n\nstate_fips = df.state_fips.values\ncounty_fips= df.county_fips.values\nvalue = df.value.values\n\nsns.distplot(state_fips , ax = ax[0] , color = 'blue').set_title('State Fips' , fontsize = 14)\nsns.distplot(county_fips , ax = ax[1] , color = 'cyan').set_title('County Fips' , fontsize = 14)\nsns.distplot(value , ax = ax[2] , color = 'purple').set_title('Value' , fontsize = 14)\n\n\nplt.show()","792fe9d4":"import matplotlib.gridspec as gridspec\nfrom scipy.stats import skew\nfrom sklearn.preprocessing import RobustScaler,MinMaxScaler\nfrom scipy import stats\nimport matplotlib.style as style\nstyle.use('seaborn-colorblind')","4cf9ebaf":"def plotting_3_chart(df, feature): \n    ## Creating a customized chart. and giving in figsize and everything. \n    fig = plt.figure(constrained_layout=True, figsize=(10,6))\n    ## crea,ting a grid of 3 cols and 3 rows. \n    grid = gridspec.GridSpec(ncols=3, nrows=3, figure=fig)\n    #gs = fig3.add_gridspec(3, 3)\n\n    ## Customizing the histogram grid. \n    ax1 = fig.add_subplot(grid[0, :2])\n    ## Set the title. \n    ax1.set_title('Histogram')\n    ## plot the histogram. \n    sns.distplot(df.loc[:,feature], norm_hist=True, ax = ax1)\n\n    # customizing the QQ_plot. \n    ax2 = fig.add_subplot(grid[1, :2])\n    ## Set the title. \n    ax2.set_title('QQ_plot')\n    ## Plotting the QQ_Plot. \n    stats.probplot(df.loc[:,feature], plot = ax2)\n\n    ## Customizing the Box Plot. \n    ax3 = fig.add_subplot(grid[:, 2])\n    ## Set title. \n    ax3.set_title('Box Plot')\n    ## Plotting the box plot. \n    sns.boxplot(df.loc[:,feature], orient='v', ax = ax3 );\n \n\nprint('Skewness: '+ str(df['value'].skew())) \nprint(\"Kurtosis: \" + str(df['value'].kurt()))\nplotting_3_chart(df, 'value')","aad54de2":"stats.probplot(df['state_fips'].values, dist=\"norm\", plot=plt)\nplt.show()","d85d48ab":"stats.probplot(df['county_fips'].values, dist=\"norm\", plot=plt)\nplt.show()","e3457ae2":"sns.heatmap(df.corr(), annot = True, linewidths=.5, cmap='cubehelix')\nplt.title('Correlations', fontsize = 20)\nplt.show()","8d7cac95":"f, (ax1, ax2) = plt.subplots(1, 2, sharey = True)\n\nax1.plot(df.geoid, df.value, c = 'green')\nax1.set_title('Geoid vs. Value', c = 'green')\nax2.scatter(df.county_fips, df.value, c='red')\nax2.set_title('County Fips vs. Value', c ='red')\n\nplt.ylabel('County fips', fontsize = 20)\n\nplt.show()","2a8251d7":"sns.boxplot(x=df['value'], color = 'cyan')\nplt.title('Value Boxplot', fontsize = 20)\nplt.show()","7211d09a":"sns.boxplot(x=df['county_fips'], color = 'magenta')\nplt.title('County Fips Boxplot', fontsize = 20)\nplt.show()","29a5f37c":"#Code from Mario Filho\nfrom category_encoders import OneHotEncoder\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler, MaxAbsScaler\n\ncols_selected = ['value']\nohe = OneHotEncoder(cols=cols_selected, use_cat_names=True)\ndf_t = ohe.fit_transform(df[cols_selected+['county_fips']])\n\n#scaler = MaxAbsScaler()\nX = df_t.iloc[:,:-1]\ny = df_t.iloc[:, -1].fillna(df_t.iloc[:, -1].mean()) \/ df_t.iloc[:, -1].max()\n\nmdl = Ridge(alpha=0.1)\nmdl.fit(X,y)\n\npd.Series(mdl.coef_, index=X.columns).sort_values().head(10).plot.barh()","cec32d70":"ax = df.groupby('value')['county_fips'].mean().plot(kind='barh', figsize=(12,8),\n                                                           title='Mean estimated Value')\nplt.xlabel('Mean estimated Value')\nplt.ylabel('County Fips')\nplt.show()","25a74d48":"ax = df.groupby('value')['state_fips', 'county_fips'].sum().plot(kind='bar', rot=45, figsize=(12,6), logy=True,\n                                                                 title='DATA EXPLORATION')\nplt.xlabel('DATA EXPLORATION')\nplt.ylabel('Log')\n\nplt.show()","2e622a6d":"ax = df.groupby('value')['county_fips', 'state_fips'].sum().plot(kind='barh', figsize=(14,8),\n                                                                 title='', logx=True, linewidth=3)\nplt.xlabel('Log')\nplt.ylabel('DATA EXPLORATION')\nplt.show()","66982d92":"fig=sns.lmplot(x='value', y=\"county_fips\",data=df)","7ae3efae":"plt.style.use('fivethirtyeight')\ndf.plot(subplots=True, figsize=(4, 4), sharex=False, sharey=False)\nplt.show()","8f22ac6f":"fig = px.bar(df,\n             y='county_fips',\n             x='value',\n             orientation='h',\n             color='geoid',\n             title='DATA EXPLORATION',\n             opacity=0.8,\n             color_discrete_sequence=px.colors.diverging.Armyrose,\n             template='plotly_dark'\n            )\nfig.update_xaxes(range=[0,35])\nfig.show()","b4f62187":"fig = px.bar(df,\n             y='state_fips',\n             x='geoid',\n             orientation='h',\n             color='state_code',\n             title='DATA EXPLORATION',\n             opacity=0.8,\n             color_discrete_sequence=px.colors.diverging.Armyrose,\n             template='plotly_dark'\n            )\nfig.update_xaxes(range=[0,35])\nfig.show()","202713cb":"fig = px.bar(df, \n             x='geoid', y='county_fips', color_discrete_sequence=['#27F1E7'],\n             title='DATA EXPLORATION', text='value')\nfig.show()","21559da2":"fig = px.bar(df, \n             x='acs_primary_id', y='county_fips', color_discrete_sequence=['crimson'],\n             title='DATA EXPLORATION', text='geoid')\nfig.show()","fc64ce05":"fig = px.line(df, x=\"geoid\", y=\"county_fips\", color_discrete_sequence=['darkseagreen'], \n              title=\"DATA EXPLORATION\")\nfig.show()","f40f6db4":"#Ohio Voters \n\nThey are more likely to be old, white, without higher education and Non-Affiliated with a Political Party\n\nOhio Voter Project, an organization that documents as much information on Ohio Voters as possible, recently updated their database to show that the voter registration population is over-represented by older age groups, and under-represented by younger age groups. A shame, considering the younger age groups are the ones that will feel a longer impact on voting decisions made by the older generations.\n\nGetting to the polls is not always an easy thing for people, due to limitations with employment, transportation, child-care and access to registration in the first place.\n\nIf citizens want change is to occur, it will only be done with voting power. Statistically speaking, the \"average Ohio voter\" demographic is going to turn out to the polls regardless if progressives do or not.\n\nhttps:\/\/www.clevescene.com\/scene-and-heard\/archives\/2018\/11\/01\/ohio-voters-are-more-likely-to-be-old-white-without-higher-education-and-non-affiliated-with-a-political-party","19ba6f6c":"#Codes from Augustin Pugliese https:\/\/www.kaggle.com\/agustinpugliese\/fish-weight-analysis-and-prediction","bf6138e3":"Das War's Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke","45f80444":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRevn_hKZ0qtD1fFxDPk6ADuvVlFJY1zINLIQ&usqp=CAU)twitter.com","7848114d":"#Conclusion. If anybody knows, feel free to tell me what can we conclude from the chats above."}}