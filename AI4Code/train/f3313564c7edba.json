{"cell_type":{"2638a8fe":"code","a0b95680":"code","cc9e74f9":"code","4459d7b7":"code","0478115b":"code","3f3c12c3":"code","806f0c4d":"code","072d26fe":"code","84ddb65c":"code","1eebad7b":"code","2823ee5c":"code","d04e6172":"code","5c0372f4":"code","c18e7ddc":"code","9e7ca1e5":"code","375d8df2":"code","f213cbc5":"code","715126d7":"code","2d9f23be":"code","a87b13ef":"code","a5a4d5f6":"code","91e3ced6":"code","46d9472f":"code","0298da4a":"code","af787f1a":"code","8ee97cb2":"code","5e5047f2":"code","6f6d5ae4":"code","f7dcfa61":"code","7457514f":"code","062796fe":"code","b2d1b97b":"code","84f116d8":"code","087f69d0":"code","395d6f09":"code","d3da525d":"markdown","58e9469d":"markdown","6be8042d":"markdown","bf7ad350":"markdown","f765e865":"markdown","f1360e55":"markdown","6b95c6e1":"markdown","3f3ca52d":"markdown","edffd349":"markdown","28f09a0f":"markdown","3a1d93f3":"markdown","d3fc89af":"markdown","6cb7d833":"markdown","1a6fbb1c":"markdown"},"source":{"2638a8fe":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport warnings\n%matplotlib inline\n\n# The determination whether to issue a warning message is controlled by the warning filter,\n# which is a sequence of matching rules and actions. \n# Rules can be added to the filter by calling filterwarnings() and \n# reset to its default state by calling resetwarnings().\nwarnings.filterwarnings('ignore')\n\n# color_codes: bool .If True and palette is a seaborn palette, remap the shorthand color codes (e.g. \u201cb\u201d, \u201cg\u201d, \u201cr\u201d, etc.) to the colors from this palette.\nsns.set(style='white',color_codes=True)\nsns.set_palette('Set1')","a0b95680":"import io\ndf = pd.read_csv('\/kaggle\/input\/personal-loan\/Bank_Personal_Loan_Modelling-1.xlsx')\ndf.rename(columns = {'ZIP Code' : 'ZIP_Code', 'CCAvg' : 'CC_Avg', 'Personal Loan':'Personal_Loan', 'Securities Account' : 'Securities_Account', 'CD Account':'CD_Account', 'CreditCard' : 'Credit_Card'}, inplace=True) \ndf.head()","cc9e74f9":"df.shape","4459d7b7":"df.info()","0478115b":"df.isna().apply(pd.value_counts)","3f3c12c3":"df.describe().T","806f0c4d":"sns.pairplot(df)","072d26fe":"corr = df.corr()\n\nplt.figure(figsize=(12,10))\n# y float: Vertical axes loation for the title (1.0 is the top).\nplt.title('Pearson correlation of Attributes', y = 1, size = 19)\nsns.heatmap(corr, cmap = 'YlGnBu', annot=True, linewidths=.5, fmt= '.2f', center = 1) # fmtstring: String formatting code to use when adding annotations.\n# other cmap options: 'Blues', 'Greens', 'BuPu'","84ddb65c":"print(\"Negative Experience Count:\", df[df['Experience'] < 0]['Experience'].count())","1eebad7b":"df.drop(['Experience','ID'],axis=1,inplace=True)","2823ee5c":"df.columns","d04e6172":"sns.boxplot(df['ZIP_Code'])","5c0372f4":"print(df[df['ZIP_Code']<20000])","c18e7ddc":"# Lets drop that row as ZIP code 9307 is not a valid US zip code.\ndf.drop(index = 384, inplace=True)","9e7ca1e5":"plt.figure(figsize=(20,7))\nsns.scatterplot(x = df['ZIP_Code'], y = df['Income'], hue = df['Personal_Loan'], alpha = 0.5)\nprint(\"Checking concentration of Income in ZIP codes and relation to Personal Loan\")","375d8df2":"continuous_col = ['Age', 'Income', 'ZIP_Code', 'CC_Avg','Mortgage']\nfor col in continuous_col:\n    sns.distplot(df[col])\n    plt.show()","f213cbc5":"sns.countplot(df['Personal_Loan'],label=\"Count\")","715126d7":"y = df['Personal_Loan']\nx = df.drop('Personal_Loan',axis=1)","2d9f23be":"x.columns","a87b13ef":"data_dia = y\ndata = x\ndata_n_2 = (data - data.mean()) \/ (data.std())              # standardization\ndata = pd.concat([y,data_n_2.iloc[:,0:11]],axis=1)\ndata = pd.melt(data,id_vars=\"Personal_Loan\",\n                    var_name=\"features\",\n                    value_name='value')\nplt.figure(figsize=(10,10))\nsns.violinplot(x=\"features\", y=\"value\", hue=\"Personal_Loan\", data=data,split=True, inner=\"quart\")\nplt.xticks(rotation=90)","a5a4d5f6":"plt.figure(figsize=(10,10))\nsns.boxplot(x=\"features\", y=\"value\", hue=\"Personal_Loan\", data=data)\nplt.xticks(rotation=90)","91e3ced6":"f, ax = plt.subplots(2, 2, figsize = (15,10))\nplt.subplots_adjust(hspace=0.4)\n\nsns.scatterplot(x = df['Mortgage'], y = df['Income'], hue = df['Personal_Loan'], alpha=0.4,ax = ax[0,0])\nax[0,0].set_title(\"Income vs Mortgage\", size = 20, weight = \"bold\")\nsns.scatterplot(x = df['ZIP_Code'],y=df['CC_Avg'], hue = df['Personal_Loan'], alpha=0.4, ax = ax[0,1])\nax[0,1].set_title(\"CC Avg vs Zip Code\", size = 20, weight = \"bold\")\nsns.scatterplot(x = df['Mortgage'], y = df['CC_Avg'], hue = df['Personal_Loan'], alpha=0.4,ax = ax[1,0])\nax[1,0].set_title(\"CC Avg vs Mortgage\", size = 20, weight = \"bold\")\nsns.scatterplot(x = df['Income'], y = df['CC_Avg'], hue = df['Personal_Loan'], alpha=0.4,ax = ax[1,1])\nax[1,1].set_title(\"CC Avg vs Income\", size = 20, weight = \"bold\")\nprint(\"Income vs Mortgage vs CC Avg vs Personal_Loan\")","46d9472f":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler","0298da4a":"X = df.drop(['Personal_Loan'], axis=1)\ny = df[['Personal_Loan']]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=1)","af787f1a":"scaler = MinMaxScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\ny_train = np.array(y_train)\ny_test = np.array(y_test)","8ee97cb2":"!pip install lazypredict","5e5047f2":"from lazypredict.Supervised import LazyClassifier","6f6d5ae4":"clf = LazyClassifier(ignore_warnings=True)\nmodel, predictions = clf.fit(X_train, X_test, y_train, y_test)","f7dcfa61":"model","7457514f":"!pip install --upgrade scikit-learn==0.20.3","062796fe":"!pip install pydotplus","b2d1b97b":"from IPython.display import Image\nfrom sklearn.externals.six import StringIO\nfrom sklearn.tree import DecisionTreeClassifier\nimport pydotplus\nfrom sklearn.tree import export_graphviz","84f116d8":"final_model = DecisionTreeClassifier(criterion='entropy',max_depth=4, min_samples_split=2)\nfinal_model.fit(X_train, y_train.ravel())","087f69d0":"from sklearn.metrics import confusion_matrix\nfig_dims = (8, 6)\nfig, ax = plt.subplots(figsize=fig_dims)\nax.set_title(\"Decision Tree Classifier\", size = 15, weight = \"bold\")\ncm = confusion_matrix(y_test,final_model.predict(X_test))\nsns.heatmap(cm,annot=True,fmt=\"d\")","395d6f09":"dot_data = StringIO() \nfeatures = ['Age', 'Income', 'ZIP_Code', 'Family', 'CC_Avg', 'Education', 'Mortgage', 'Securities_Account', 'CD_Account', 'Online', 'Credit_Card']\nclasses = ['No', 'Yes']\nexport_graphviz(final_model, out_file=dot_data, feature_names=features, class_names=classes, filled=True, rounded=True, special_characters=True)  \ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())\nImage(graph.create_png())","d3da525d":"### We can see we have an outlier in ZIP_Code column!","58e9469d":"### Please upvote if you found my Notebook useful!","6be8042d":"### Let's Split our Dataset for Training and Testing","bf7ad350":"### Let's check the columns left in Dataframe","f765e865":"### Data distribution in each attribute","f1360e55":"### Pearson correlation coefficient, or the bivariate correlation, is a statistic that measures linear correlation between two variables X and Y. \n\n### It has a value between +1 and \u22121.","6b95c6e1":"### * It appears to be complete without any null values.\n### * All the variable values are either integers or continuous numbers.","3f3ca52d":"Let's count the number of personal loans given","edffd349":"### Predict the likelihood of a customer buying personal loans.","28f09a0f":"### In Age feature, median of the Personal loan Accepted and Not Accepted does not looks like separated so it does not gives good information for classification.","3a1d93f3":"### We can see that \"Decision Tree Classifier\" did best in classification task.","d3fc89af":"### To predict the best algorithm with best accuracy we can install \"lazypredict\"","6cb7d833":"## **Study of data**\n### * ID: This is customer ID with the bank starting from 1 to 5000 and will not contribute in any way to predict the likelihood of a customer buying personal loans. Hence this ID column can be dropped.\n### * Age: Customer's age, a discrete variable from 23 to 67 years, has a very high Pearson correlation (\u03c1 = 0.99) with the 'Experience' of customer. Hence one of it can be considered as a redundant variable.\n### * Experience: Customers' years of professional experience, also a discrete variable from -3 to 43, has some negative values in data that is logically impossible and in relation to age collecting values for experience from customer can be challenging. Hence Experience can also be dropped.\n### * Income: Annual income of the customer is right skewed with a range of 8,000 to 2,24,000 dollars. It has relatively better Pearson correlation (\u03c1 = 0.50) with Personal Loan, which states if the customer accepted personal loans in the last campaign. This can be a good predictor of the likelihood of a customer buying personal loans. It indicates majority of the customers earn between 28,000 to 120,000 dollars.\n### * ZIP_Code: Home Address ZIP code may contribute to this model in cases where data is observed to be concentrated in a locality. Further study is required to understand its importance.\n### * Family: Family size of the customer, also a discrete variable from 1 to 4, can also be a good indicator of liability along with other parameters.\n### * CC_Avg: Average spending on credit cards per month, is highly right skewed with a range of 0 to 10,000 dollars and mean of 1,937. It has relatively good Pearson correlation (\u03c1 = 0.37) with Personal Loan as well. This can also be a good indicator of liability to the customer and a good predictor of the likelihood of a customer buying personal loans.\n### * Education: Education Level. 1: Undergrad, 2: Graduate and 3: Advanced\/Professional is an ordinal value. Data appears to be indicating that majority of the customers are Undergrads.\n### * Mortgage: Value of house mortgage if availed by the customer, is highly right skewed with a range of 0 to 6,35,000 dollars. A median of 0 and mean of 56,498 indicates majority of the customers have not availed a house mortgage.\n### * Personal_Loan: Acceptance of the personal loan offered in the last campaign is a binary categorical variable indicating the customer accepted the personal loan or not. Mean indicating only 9.6% accepted the offer. This can be the target variable. There seems to be a heavy class imbalance in here that might create a biased model.\n### * Securities_Account: Customer has a securities account with the bank or not is a binary categorical variable. Mean indicating 10.44% has a securities account.\n### * CD_Account: Customer has a certificate of deposit (CD) account with the bank or not is also a binary categorical variable. Mean indicating 6.04% has a CD account. It has relatively good Pearson correlation (\u03c1 = 0.32) with Personal Loan as well.\n### * Online: Customer uses internet banking facilities or not is also a binary categorical variable. Mean indicating 59.68% uses internet banking facilities.\n### * Credit_Card: Customer uses a credit card issued by Universal Bank or not is also a binary categorical variable. Mean indicating 29.4% uses credit card.","1a6fbb1c":"### We cannot have negative Experience, so we will drop ID and Experience columns"}}