{"cell_type":{"8c0abfb0":"code","a2faa212":"code","0a021443":"code","40c58f33":"code","a0b4cd50":"code","37bdce68":"code","47ab4c01":"code","a256a1fc":"code","5ee099b4":"code","12222898":"code","b86da173":"code","f7234595":"code","7f67ddad":"code","bd0b6f1d":"code","8cd4c193":"code","71a20013":"code","11f2b14e":"code","338c8d90":"code","70b1e731":"code","9865e2e2":"code","b089610b":"code","8f74439e":"code","0fba0a2a":"code","1bfb9102":"code","0bc622a2":"code","d7830798":"code","fba0db3e":"code","230ce327":"code","bebb41de":"code","32601247":"code","5f5027aa":"code","2139ab43":"code","0e674837":"code","16de371c":"markdown","5ae547b8":"markdown","19ae76de":"markdown","76ed6538":"markdown","bfa29f02":"markdown","b1c3bcc8":"markdown","717c6566":"markdown","ba5edbd0":"markdown","c02502f9":"markdown","2689fbd9":"markdown","35fe6d2a":"markdown","87b931d8":"markdown","cf9418d6":"markdown","75cde1e5":"markdown","95c73dd7":"markdown","c40784fc":"markdown","a16dac4a":"markdown","bf7f4b69":"markdown","aa4db368":"markdown","b87802da":"markdown","322c7e82":"markdown","2ed69c1d":"markdown","6d4100c2":"markdown","945ef8ca":"markdown","7735abee":"markdown","4d58b463":"markdown","cf099f38":"markdown","6c68f5eb":"markdown","ae045764":"markdown","913e516f":"markdown","84ca2b60":"markdown"},"source":{"8c0abfb0":"import numpy as np # linear algebra\nimport pandas as pd # data processing\n\nimport seaborn as sns #graphics\nimport matplotlib.pyplot as plt #graphics\nimport pylab # customize graphics\n\nfrom sklearn.experimental import enable_iterative_imputer # for imputing variables\nfrom sklearn.impute import IterativeImputer # for imputing variables\nfrom sklearn.impute import KNNImputer # for impute missing values\n\nfrom sklearn.tree import DecisionTreeClassifier # for decision tree implementation","a2faa212":"train_filepath = '..\/input\/titanic\/train.csv'\ntest_filepath = '..\/input\/titanic\/test.csv'","0a021443":"train_data = pd.read_csv(train_filepath)\ntest_data = pd.read_csv(test_filepath)","40c58f33":"train_data.head()","a0b4cd50":"test_data.head()","37bdce68":"len(test_data)","47ab4c01":"print( 'the dataset contains',train_data.shape[0], 'and', train_data.shape[1], 'columns')","a256a1fc":"train_data.dtypes","5ee099b4":"for i in  range(0,len(train_data.dtypes.value_counts())):\n    print('There are', train_data.dtypes.value_counts()[i], ' variables of',train_data.dtypes.value_counts().index[i], 'type')","12222898":"train_data.nunique()","b86da173":"col_names = ['Pclass','SibSp','Parch','Embarked']\n\nfor col in col_names:\n    print(train_data[col].name,train_data[col].unique())","f7234595":"train_data.isnull().sum()","7f67ddad":"train_data.isna().sum()\/len(train_data)","bd0b6f1d":"round(train_data.describe(),2)","8cd4c193":"fig1=plt.figure(figsize=(10,10))\nplt.subplot(1,2,1)\ntrain_data.Sex.value_counts().plot(kind = 'pie',autopct='%1.1f%%', startangle=90, title = 'Sex', \n                                   fontsize = 15, colors = ['snow', 'gold'], wedgeprops={\"edgecolor\":\"gold\"}).title.set_size(30)\npylab.ylabel('')\nplt.subplot(1,2,2)\ntrain_data.Pclass.value_counts().plot(kind = 'pie',autopct='%1.1f%%', startangle=90, title = 'Class',\n                                    fontsize = 15, colors = ['snow', 'darkorange', 'gray'], shadow = True).title.set_size(30)\npylab.ylabel('')\nfig1.show()","71a20013":"sns.set_style(\"whitegrid\")\nsns.displot(data=train_data['Age'], kind = ('hist'), kde = True,rug = True, color = 'gold')\nplt.title(\"Age distribution\", size=20)","11f2b14e":"sns.barplot(x=\"Sex\", y=\"Survived\", data=train_data, palette = ('darkorange','silver'))\nplt.title(\"Proportion survivors by genre \", size=20)","338c8d90":"bar_colors = ('darkorange', 'darkgoldenrod', 'khaki','slategray', 'silver', 'royalblue')\nsns.barplot(x=\"SibSp\", y=\"Survived\", data=train_data, ci=None, palette = bar_colors)\nplt.title(\"Proportion survivors by number of siblings\/spouses\", size=20)","70b1e731":"sns.barplot(x=\"Parch\", y=\"Survived\", data=train_data, ci=None, palette = bar_colors)\nplt.title(\"Proportion survivors by number of parents\/children\", size=20)","9865e2e2":"fig2, axes = plt.subplots(1, 2, figsize=(15, 5), sharey=True)\nsns.barplot(ax= axes[0], x=\"Sex\", y=\"Survived\", hue=\"Parch\", data=train_data, palette = bar_colors, ci = 50)\naxes[0].set_title('Proportion of survivors by genre and Parch', size = 18)\nsns.barplot(ax = axes[1], x=\"Sex\", y=\"Survived\", hue=\"SibSp\", data=train_data, palette = bar_colors, ci = 50)\naxes[1].set_title('Proportion of survivors by genre and SibSp', size = 18)\nfig2.show()\n","b089610b":"bar_colors1 = ('darkorange','slategray', 'silver')\nfig3, axes = plt.subplots(1, 2, figsize=(15, 5))\nsns.countplot(ax= axes[0], x = train_data['Embarked'],  palette = bar_colors1)\nsns.barplot(ax= axes[1], x=\"Embarked\", y=\"Survived\", data=train_data,  palette = bar_colors1)\nfig3.suptitle('Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton)', fontsize=16)\nfig3.show()","8f74439e":"corr = train_data.iloc[:, 1:11].corr(); corr","0fba0a2a":"mask = np.triu(np.ones_like(corr, dtype=bool))\nsns.heatmap(corr, \n               xticklabels=corr.columns.values,\n               yticklabels=corr.columns.values,\n           linewidths = 0.5, cmap='mako', mask = mask, annot = True)","1bfb9102":"train_data['Sex'].replace(['female','male'],[0,1],inplace=True)\ntrain_data['Sex'].dtypes","0bc622a2":"del train_data['Cabin']","d7830798":"\nimp = KNNImputer(n_neighbors = 1, weights = 'uniform')\ntrain_data['Age'] = imp.fit_transform(train_data[['Age']])\n\ntrain_data['Age'].isna().sum()","fba0db3e":"train_data = train_data[pd.notnull(train_data['Embarked'])]\ntrain_data['Embarked'].isna().sum()\n","230ce327":"train_data.isnull().values.any()","bebb41de":"#train_data['Embarked'].replace(['S','C', 'Q'],[3,1,2],inplace=True)\ntrain_data = train_data.join(pd.get_dummies(train_data[['Embarked']]), how = 'left')","32601247":"y = train_data['Survived']\nfeatures = ['Pclass', 'Sex', 'SibSp', 'Parch','Age', 'Fare', 'Embarked_C', 'Embarked_Q','Embarked_S']\nX = train_data[features]\n\ntest_data['Sex'].replace(['female','male'],[0,1],inplace=True)\ntest_data['Age'] = imp.fit_transform(test_data[['Age']])\n#test_data = test_data[pd.notnull(test_data['Embarked'])]\n#test_data = test_data[pd.notnull(test_data['Fare'])]\ntest_data['Fare'] = imp.fit_transform(test_data[['Fare']])\n#test_data['Embarked'].replace(['S','C', 'Q'],[3,1,2],inplace=True)\ntest_data = test_data.join(pd.get_dummies(test_data[['Embarked']]), how = 'left')\nX_test = test_data[features]\nX_test.isnull().sum()","5f5027aa":"len(X_test)","2139ab43":"tree_model = DecisionTreeClassifier(max_leaf_nodes = 500, criterion = 'gini')\n                                   \ntree_model.fit(X, y)\ntree_predictions = tree_model.predict(X_test)","0e674837":"output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': tree_predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","16de371c":"# 1. Importing libraries <a name = 'importing_lib'><\/a>\n\nFirst of all, we are going to import the tools ","5ae547b8":"If we remember, there are two missing values in `embarked` variable, so we will drop these two rows","19ae76de":"## Type of each column\nA quick way to see what kind of data contains each column.","76ed6538":"## Number of different values of each variable\nto find out how much variety each variable has\n","bfa29f02":"We have some missing values for ```Age```, ```Cabin``` and ```Age```. And proportionally?","b1c3bcc8":"And passengers with just one sibling or spouse as companion have more chances too","717c6566":"We start replacing the Sex variables from categorical values to numerical values","ba5edbd0":"# 5. Preprocessing data <a name = 'prep_data'><\/a>\n\nAn essential previus step to fit our models is to adapt our data for obtain better predictions\n\nDetect and delete outliers\n\nChange categorical values to binary values \n\nClassify names by its title (Mr, Mrs, Master...) https:\/\/www.kaggle.com\/startupsci\/titanic-data-science-solutions\n\nhttps:\/\/www.kaggle.com\/gunesevitan\/titanic-advanced-feature-engineering-tutorial\n\n","c02502f9":"There is an elevated number of babies (age near to 0) and most have between 20 and 40 years old","2689fbd9":"There are a lot of differences between genres","35fe6d2a":"## Matrix correlation\nMatrix and correlation graph of numerical variables","87b931d8":"In this graph we can see that is not clear if the pasenger who have 3 parents or children on board have more probabilites to survive,these have a high variance","cf9418d6":"# 4. Exploratory data analysis <a name = 'eda'><\/a>\n\nFor a better understanding of the data and to detect correlation we will plot some graphics","75cde1e5":"Let's see Which values are:","95c73dd7":"The other variable with some missing values is the `Age`, but in this chase we are going to impute these values because the age is a relevant information for predict if the pasenger survived or not","c40784fc":"Now, we should not have any missing value:","a16dac4a":"As we can see, more than the 77.10% of the sample has no data about ```Cabin```. Initially we are not going to do a treatment for this variable, but later we are going to **impute the ```Age```**.","bf7f4b69":"There are more women than men, and the most common ticket is third class","aa4db368":"## Number of rows and columns\nKnowing the number of observations\/rows and variables\/columns is essential in our data analysis.","b87802da":"## Number of missing values per column\nWe must treat the missing values \u200b\u200bappropriately to obtain the most accurate predictions.","322c7e82":"Fit the model and save predictions","2ed69c1d":"We assign a number of each Port of ombarkation in order to the surviving probability","6d4100c2":"As we saw before, the `Cabin` variable has a lot of missing values, so we delete it","945ef8ca":"----------------------\n\n><span style=\"color:black\">**-Hey, Perfidio! You have not asnwered my question!**\n\n><span style=\"color:black\">**-Uhhmmm... What was the question?**\n\n><span style=\"color:black\">**-Ohh, dammit... really? I asked you what was the survivor...**\n\n><span style=\"color:black\">**-Ok, boy! I remember it, but may be next time...**\n\n-----------------------","7735abee":"# 3. Reading data <a name = 'reading'><\/a>\nAfter import the data, we must to know all as be posible about our dataset:","4d58b463":"## Descriptive statistics for numerical variables\nThis will give us a lot of information about the data","cf099f38":"Look! It seems that women have much more chances to survive","6c68f5eb":"# 6. Fitting model <a name = 'fit'><\/a>\n\nFinally, we apply the same preprocessing to the test data","ae045764":"# Introduction <a name = 'importing_lib'><\/a>\n\n----------------------\n\n><span style=\"color:black\">**-Hey, Perfidio! Can I ask you a question?**\n\n><span style=\"color:black\">**-Yes you can. Can I answer?**\n\n><span style=\"color:black\">**-Yes you can. If you were a passenger on the Titanic, what kind of passenger would you like to be?**\n\n><span style=\"color:black\">**-Wow! That's a good question. Let me tell you a story...**\n\n-----------------------\n\nWe have a dataset available in kaggle about the Titanic passenger with some information about them. The most interesting thing is that we have information on whether the passengers survived or not. Here we have a brief description of the data we have for each passenger:\n\n* **PassengerId**: The identificator is a diferent number for each passenger  \n* **Survived**: Did the passenger survived? \n* **Pclass**: Did the passenger travel in low, medium or high class? \n* **Name**: What is the passenger's name?\n* **Sex**: The paseenger \n* **Age**: Was the passenger male or female?\n* **SibSp**: Number of siblings \/ spouses of the passenger\n* **Parch**: Number of parents \/ children of the passenger\n* **Ticket**: Ticket number\n* **Fare**: Price of the bill\n* **Cabin**: Passenger cabin number\n* **Embarked**: Port of embarkation\n\nSo, I think that we can determine the type of passenger that had more chances of surviving using data scientists techinques. Let's start!","913e516f":"# 2. Importing data <a name = 'importing_dat'><\/a>\nWe take the data...","84ca2b60":"<font size='6'>Perfidio and the search for the lucky passenger<\/font>\n\n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/9\/92\/Titanic.jpg\" align = \"left\" width=\"300\">&nbsp;\n\n&nbsp; [Introduction](#intro)\n\n&nbsp;  [1. Importing libraries](#importing_lib)\n\n&nbsp; [2. Importing data](#importing_dat)\n\n&nbsp; [3. Reading data](#reading)\n\n&nbsp; [4. Exploratory data analysis](#eda)\n\n&nbsp; [5. Preprocessing data](#prep_data)\n\n&nbsp; [6. Fitting model](#fit_eva)"}}