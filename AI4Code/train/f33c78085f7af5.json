{"cell_type":{"7603f62b":"code","b7acac8d":"code","76b1fc1d":"code","1da49839":"code","ce3e4327":"code","a17d2bd4":"code","c5dbdab8":"code","42875d54":"code","5e9f94c7":"code","4db97338":"code","9d8420e0":"code","2aea4521":"code","da6339e6":"code","541bf76c":"code","ca7e3a4a":"code","3d474245":"code","ad8eeb6a":"code","59ddf45a":"code","412e6a06":"code","b3e6b47c":"code","5d020894":"code","2d024b4a":"markdown","35dcaf9f":"markdown","04ddc1d9":"markdown","e2afd99f":"markdown","d1202b46":"markdown","3aadda65":"markdown","148863bc":"markdown","bdfe3cda":"markdown","c570f065":"markdown","675cb804":"markdown","20a5aa65":"markdown","552221a9":"markdown","113c126f":"markdown","8ecc8e53":"markdown","929e193d":"markdown"},"source":{"7603f62b":"!pip install chart-studio","b7acac8d":"from plotly.offline import init_notebook_mode,iplot\nfrom matplotlib import pyplot as plt\n\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\n\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\n\n%matplotlib inline","76b1fc1d":"df = pd.read_csv(\"..\/input\/sales-fil\/vgsales.csv\",date_parser=True)","1da49839":"df.head()","ce3e4327":"df.isnull().sum()","a17d2bd4":"df.describe()","c5dbdab8":"sales_per_genre=[]\nfor genres in df.Genre.unique():\n    price = df.loc[df[\"Genre\"]==genres,\"Global_Sales\"].sum()\n    sales_per_genre.append([genres,price])\n\ndf_genre_sale = pd.DataFrame(sales_per_genre, columns = ['Genre', 'Total_Global_Sales'])","42875d54":"plt.figure(figsize=(15,5))\nsns.barplot(x=\"Genre\",y=\"Total_Global_Sales\",data=df_genre_sale)\nplt.ylabel(\"Total Global sales in million\")","5e9f94c7":"sales_per_platform=[]\nfor platform in df.Platform.unique():\n    sales = df.loc[df[\"Platform\"]==platform,\"Global_Sales\"].sum()\n    sales_per_platform.append([platform,sales])","4db97338":"df_platform_sale = pd.DataFrame(sales_per_platform, columns = ['Platform', 'Total_Global_Sales'])\ndf_platform_sale.sort_values(\"Total_Global_Sales\",ascending=False,ignore_index=True,inplace=True)\ndf_platform_sale_top10 = df_platform_sale[:10]\ndf_platform_sale_top10 = df_platform_sale_top10.sample(frac=1) #shuffuling DF","9d8420e0":"g = sns.catplot(\n    data=df_platform_sale_top10, kind=\"bar\",\n    x=\"Platform\",y=\"Total_Global_Sales\",\n    palette=\"dark\", color=\"pink\", alpha=.8, height=9\n)\nplt.ylabel(\"Total global sales in million\")","2aea4521":"na_sale = go.Scatter(\n                    x = df.Rank[:100],\n                    y = df.NA_Sales[:100],\n                    mode = \"markers\",\n                    name = \"North America\",\n                    marker = dict(color = 'rgba(28, 149, 249, 0.8)',size=6),\n                    text= df.Name)\neu_sale = go.Scatter(\n                    x = df.Rank[:100],\n                    y = df.EU_Sales[:100],\n                    mode = \"markers\",\n                    name = \"Europe\",\n                    marker = dict(color = 'rgba(249, 94, 28, 0.8)',size=8),\n                    text= df.Name)\njp_sale = go.Scatter(\n                    x = df.Rank[:100],\n                    y = df.JP_Sales[:100],\n                    mode = \"markers\",\n                    name = \"Japan\",\n                    marker = dict(color = 'rgba(150, 26, 80, 0.8)',size=8),\n                    text= df.Name)\nother_sale = go.Scatter(\n                    x = df.Rank[:100],\n                    y = df.Other_Sales[:100],\n                    mode = \"markers\",\n                    name = \"Other\",\n                    marker = dict(color = 'lime',size=8),\n                    text= df.Name)","da6339e6":"data_sale = [na_sale,eu_sale,jp_sale,other_sale]\nlayout = dict(title = 'Top 100 Video Games Per Region',\n              xaxis= dict(title= 'Rank',gridcolor=\"white\"),\n              yaxis= dict(title= 'Sales(In Millions)',),\n              paper_bgcolor='rgb(229, 229, 229)',\n              plot_bgcolor='rgb(229, 229, 240)' )\nfig = dict(data = data_sale, layout = layout)\niplot(fig)","541bf76c":"publisher = go.Histogram(x=df.Publisher[:100],marker=dict(color=\"green\",line=dict(color='black', width=3)),opacity=0.8)\nlayouts = go.Layout(\n    title='Numbers of Top 100 Video Games Publishers',\n    xaxis=dict(\n        title='Publishers'\n    ),\n    yaxis=dict(\n        title='Count'\n    ),\n    bargap=0.2,\n    bargroupgap=0.1, paper_bgcolor='rgb(243,243,200)',\n    plot_bgcolor=\"rgb(243,243,200)\")\nfig = go.Figure(data=[publisher], layout=layouts)\niplot(fig)","ca7e3a4a":"sale_per_year_na = []\nfor year in df.Year.unique():\n    sales_year_na = df.loc[df[\"Year\"]==year,\"NA_Sales\"].sum()\n    sale_per_year_na.append([year,sales_year_na])\n\ndf_year_sale_na = pd.DataFrame(sale_per_year_na, columns = ['Year', 'Total_NA_Sales'])\ndf_year_sale_na.sort_values(\"Year\",ascending=True,ignore_index=True,inplace=True)\ndf_year_sale_na.dropna(inplace=True)\n\n\nsale_per_year_eu = []\nfor year in df.Year.unique():\n    sales_year_eu = df.loc[df[\"Year\"]==year,\"EU_Sales\"].sum()\n    sale_per_year_eu.append([year,sales_year_eu])\n\ndf_year_sale_eu = pd.DataFrame(sale_per_year_eu, columns = ['Year', 'Total_EU_Sales'])\ndf_year_sale_eu.sort_values(\"Year\",ascending=True,ignore_index=True,inplace=True)\ndf_year_sale_eu.dropna(inplace=True)\n\n\nsale_per_year_other = []\nfor year in df.Year.unique():\n    sales_year_other = df.loc[df[\"Year\"]==year,\"Other_Sales\"].sum()\n    sale_per_year_other.append([year,sales_year_other])\n\ndf_year_sale_other = pd.DataFrame(sale_per_year_other, columns = ['Year', 'Total_Other_Sales'])\ndf_year_sale_other.sort_values(\"Year\",ascending=True,ignore_index=True,inplace=True)\ndf_year_sale_other.dropna(inplace=True)\n\n\nsale_per_year_jp = []\nfor year in df.Year.unique():\n    sales_year_jp = df.loc[df[\"Year\"]==year,\"JP_Sales\"].sum()\n    sale_per_year_jp.append([year,sales_year_jp])\n\ndf_year_sale_jp = pd.DataFrame(sale_per_year_jp, columns = ['Year', 'Total_JP_Sales'])\ndf_year_sale_jp.sort_values(\"Year\",ascending=True,ignore_index=True,inplace=True)\ndf_year_sale_jp.dropna(inplace=True)\n\n\nsale_per_year_global = []\nfor year in df.Year.unique():\n    sales_year_global = df.loc[df[\"Year\"]==year,\"Global_Sales\"].sum()\n    sale_per_year_global.append([year,sales_year_global])\n\ndf_year_sale_global = pd.DataFrame(sale_per_year_global, columns = ['Year', 'Total_Global_Sales'])\ndf_year_sale_global.sort_values(\"Year\",ascending=True,ignore_index=True,inplace=True)\ndf_year_sale_global.dropna(inplace=True)","3d474245":"plt.figure(figsize=(15,7))\nsns.lineplot(x=\"Year\", y=\"Total_NA_Sales\",\n             data=df_year_sale_na)\n\nsns.lineplot(x=\"Year\", y=\"Total_EU_Sales\",\n             data=df_year_sale_eu)\n\nsns.lineplot(x=\"Year\", y=\"Total_JP_Sales\",\n             data=df_year_sale_jp)\n\nsns.lineplot(x=\"Year\", y=\"Total_Other_Sales\",\n             data=df_year_sale_other)\n\nsns.lineplot(x=\"Year\", y=\"Total_Global_Sales\",\n             data=df_year_sale_global)\n\nplt.ylabel('Total Sale Per Year in Millon')\nplt.legend(labels=[\"NA_sales\",\"EU_sales\",\"JP_sales\",\"Other_sales\",\"Global_sales\"])","ad8eeb6a":"top_na_games = df[[\"Name\",\"NA_Sales\"]].sort_values(\"NA_Sales\",ascending=False,ignore_index=True)[:10].sample(frac=1)\ntop_eu_games = df[[\"Name\",\"EU_Sales\"]].sort_values(\"EU_Sales\",ascending=False,ignore_index=True)[:10].sample(frac=1)\ntop_other_games = df[[\"Name\",\"Other_Sales\"]].sort_values(\"Other_Sales\",ascending=False,ignore_index=True)[:10].sample(frac=1)\ntop_jp_games = df[[\"Name\",\"JP_Sales\"]].sort_values(\"JP_Sales\",ascending=False,ignore_index=True)[:10].sample(frac=1)\ntop_global_games = df[[\"Name\",\"Global_Sales\"]].sort_values(\"Global_Sales\",ascending=False,ignore_index=True)[:10].sample(frac=1)","59ddf45a":"plt.figure(figsize=(18,7))\nsns.barplot(x=\"Name\", y=\"NA_Sales\", data=top_na_games)\nplt.figure(figsize=(20,7))\nsns.barplot(x=\"Name\", y=\"EU_Sales\", data=top_eu_games)\nplt.figure(figsize=(18,7))\nsns.barplot(x=\"Name\", y=\"Other_Sales\", data=top_other_games)\nplt.figure(figsize=(18,11))\nsns.barplot(x=\"Name\", y=\"JP_Sales\", data=top_jp_games)\nplt.figure(figsize=(18,11))\nsns.barplot(x=\"Name\", y=\"Global_Sales\", data=top_global_games)","412e6a06":"global_sales_per_publisher=[]\nfor publisher in df.Publisher.unique():\n    pub_sales = df.loc[df[\"Publisher\"]==publisher,\"Global_Sales\"].sum()\n    global_sales_per_publisher.append([publisher,pub_sales])\n    \ntop_publisher_sale = pd.DataFrame(global_sales_per_publisher, columns = ['Publisher', 'Global_Sales'])\ntop_publisher_sale.sort_values(\"Global_Sales\",ascending=False,inplace=True,ignore_index=True)\ntop_publisher_sale=top_publisher_sale[:10].sample(frac=1)","b3e6b47c":"plt.figure(figsize=(20,11))\nsns.barplot(x=\"Publisher\", y=\"Global_Sales\", data=top_publisher_sale)","5d020894":"plt.figure(figsize=(15,10))\nsns.heatmap(df.corr(),linewidth=2,annot=True)","2d024b4a":"# 4.Numbers of Top 100 Video Games Publishers","35dcaf9f":"# 8.CORRELATION","04ddc1d9":"# <center><img src=\"https:\/\/media.giphy.com\/media\/d9QiBcfzg64Io\/giphy.gif\" style=\"width:400px;height:400px\"><\/center>","e2afd99f":"## Description\n\n><i>This dataset contains a list of video games with sales greater than 100,000 copies. It was generated by a scrape of <a href=\"https:\/\/www.vgchartz.com\/\"><b>vgchartz.com<\/b><\/a><\/i>.\n\n**Fields include**\n\n   * Name - The games name\n\n   * Platform - Platform of the games release (i.e. PC,PS4, etc.)\n\n   * Year - Year of the game's release\n\n   * Genre - Genre of the game\n\n   * Publisher - Publisher of the game\n\n   * NA_Sales - Sales in North America (in millions)\n\n   * EU_Sales - Sales in Europe (in millions)\n\n   * JP_Sales - Sales in Japan (in millions)\n\n   * Other_Sales - Sales in the rest of the world (in millions)\n\n   * Global_Sales - Total worldwide sales.\n\n---\n\n## Objective\n\n><i>In this <b>project<\/b> I will deal with <b>exploratory analysis<\/b>, where the objective is to understand how the data is distributed and generate insight for future decision-making, this analysis aims to explore as much as possible the data in a simple, intuitive and informative way. The data used in this project contains information mainly from <b>1980<\/b> to <b>2016<\/b>. Below is a sketch of all the stages made in these notebooks, following a logical and intuitive sequence to facilitate the understanding of the data.<\/i>\n","d1202b46":"# 7.Top Publisher as per Global Sales","3aadda65":"# 3.Top 100 Video Games per Region","148863bc":"### Checking the missing values","bdfe3cda":"# <center>EDA - VIDEO GAME SALES \ud83c\udfae<\/center>","c570f065":"## 52 of these 100 games were published by Nintendo. Activison comes in 2nd place with 14 games and Take-Two Interactive in 3rd place with 9 games.","675cb804":"# 5.Sales in North America, Europe, Japan and Global Per Year Wise","20a5aa65":"# 6.Top Games based on the sales per region","552221a9":"# 1.Total Global sales per Genre in million\n","113c126f":"# 2.Total global sales per Platform  in million","8ecc8e53":"### Positive values shows positive correlation whereas negative values shows inverse correlation. As we can see North American sales has contributed considerably to overall Global sales;hence we can see a positive correlation between the two.","929e193d":"# Importing the modules"}}