{"cell_type":{"e61d7910":"code","f833db20":"code","15913f99":"code","b6d92226":"code","54016941":"code","00e419b7":"code","dd0c2a17":"code","574933c9":"code","08af4553":"code","aa62930b":"code","fa6bdab6":"code","3da4896c":"code","a7c7f6a1":"code","101eef35":"code","16471123":"code","f509260c":"code","5a39d366":"code","12689959":"code","6a5fb147":"code","97b501cb":"code","e495cb35":"code","ca33c212":"code","ff93cf19":"code","4c640fe0":"code","a537dac8":"code","3b0dc071":"code","77da4236":"code","d60034a6":"code","bd476957":"code","c79f8601":"code","e76210b0":"code","01fd7f93":"code","09ee0811":"code","18cd0171":"code","bb7268a9":"code","513901df":"code","4f89ffc9":"markdown","c425eeb8":"markdown","08159e32":"markdown","94346901":"markdown","a1f2be06":"markdown","c307dcca":"markdown","e8420900":"markdown","17b9e14a":"markdown","b755ae31":"markdown","e562fa34":"markdown","f6ebfd8b":"markdown","a59321b5":"markdown","c7a33fb3":"markdown","af9832b9":"markdown","7f237b35":"markdown","bb6c4048":"markdown","b9e73d10":"markdown","5997ad1e":"markdown","6210070c":"markdown","fb594e91":"markdown","1f20179d":"markdown","2b7288fb":"markdown","928de393":"markdown"},"source":{"e61d7910":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","f833db20":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans, AgglomerativeClustering, DBSCAN\nfrom scipy.cluster.hierarchy import dendrogram, linkage\nfrom sklearn.decomposition import PCA ","15913f99":"df = pd.read_csv(\"..\/input\/ccdata\/CC GENERAL.csv\")","b6d92226":"df.head()","54016941":"df.shape","00e419b7":"df.info()","dd0c2a17":"df.isna().sum()","574933c9":"# \u0432 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430\u0445\ndf.isna().sum()\/df.count()*100","08af4553":"plt.figure(figsize=(10,8))\nsns.heatmap(df.isna())","aa62930b":"df.describe()","fa6bdab6":"df.dropna(inplace=True)","3da4896c":"df.shape","a7c7f6a1":"df.isna().sum()","101eef35":"fig, ax =plt.subplots(2,4, figsize=(25, 8))\n\nsns.boxplot(df['PURCHASES'], ax=ax[0,0])\nsns.boxplot(df['CASH_ADVANCE'], ax=ax[0,1])\nsns.boxplot(df['INSTALLMENTS_PURCHASES'], ax=ax[0,2])\nsns.boxplot(df['ONEOFF_PURCHASES'], ax=ax[0,3])\nsns.boxplot(df['PAYMENTS'], ax=ax[1,0])\nsns.boxplot(df['MINIMUM_PAYMENTS'], ax=ax[1,1])\nsns.boxplot(df['PURCHASES_TRX'], ax=ax[1,2])\nsns.boxplot(df['CASH_ADVANCE_TRX'], ax=ax[1,3])\n","16471123":"clear_df = df[(df['PURCHASES']<3000) & \\\n   (df['CASH_ADVANCE']<2000) &\\\n   (df['INSTALLMENTS_PURCHASES']<1000) &\\\n   (df['ONEOFF_PURCHASES']<1500) &\\\n   (df['PAYMENTS']<3000) &\\\n   (df['MINIMUM_PAYMENTS']<1500) &\\\n   (df['PURCHASES_TRX']<50) &\\\n   (df['CASH_ADVANCE_TRX']<10)\n  ]","f509260c":"clear_df.shape","5a39d366":"clear_df.describe()","12689959":"fig, ax =plt.subplots(2,4, figsize=(25, 8))\n\nsns.distplot(clear_df['PURCHASES'], ax=ax[0,0])\nsns.distplot(clear_df['CASH_ADVANCE'], ax=ax[0,1])\nsns.distplot(clear_df['INSTALLMENTS_PURCHASES'], ax=ax[0,2])\nsns.distplot(clear_df['ONEOFF_PURCHASES'], ax=ax[0,3])\nsns.distplot(clear_df['PAYMENTS'], ax=ax[1,0])\nsns.distplot(clear_df['MINIMUM_PAYMENTS'], ax=ax[1,1])\nsns.distplot(clear_df['PURCHASES_TRX'], ax=ax[1,2])\nsns.distplot(clear_df['CASH_ADVANCE_TRX'], ax=ax[1,3])","6a5fb147":"scaler = StandardScaler()\nnorm_df = pd.DataFrame(scaler.fit_transform(clear_df.drop(['CUST_ID'], axis=1)), \n                       columns = clear_df.drop(['CUST_ID'], axis=1).columns,\n                       index = clear_df.index\n                      )","97b501cb":"distance = []\n \nfor k in range(1,15):\n  estimator = KMeans(n_clusters = k)\n  estimator.fit(norm_df)\n  distance.append(estimator.inertia_)","e495cb35":"k = range(1,15)\nplt.figure(figsize=(10, 10))\nplt.xlabel('Clusters')\nplt.ylabel('Distance')\nplt.plot(distance, '-o')","ca33c212":"cluster = KMeans(n_clusters=6)\nkmeans = cluster.fit_predict(norm_df)","ff93cf19":"linkage_df = linkage(norm_df, method=\"ward\")","4c640fe0":"plt.figure(figsize=(15,10))\ndendrogram(linkage_df,leaf_rotation=90,p=5,color_threshold=50,leaf_font_size=10,truncate_mode='level')\nplt.show()","a537dac8":"aggl = AgglomerativeClustering(n_clusters=6)\naggl = aggl.fit_predict(norm_df)","3b0dc071":"dbscan = DBSCAN()\ndbscan = dbscan.fit_predict(norm_df)","77da4236":"pca = PCA(n_components = 2)\nprincipal_comp = pca.fit_transform(norm_df)","d60034a6":"pca_dataframe = pd.DataFrame(data = principal_comp,columns = ['comp_1','comp_2'])","bd476957":"pca_dataframe['K_means_cls'] = kmeans","c79f8601":"plt.figure(figsize=(10,10))\n\nsns.scatterplot(data=pca_dataframe, x='comp_1', y='comp_2', hue='K_means_cls', palette=\"viridis\")\nplt.title('K_means')","e76210b0":"pca_dataframe['Aggl_cls'] = aggl","01fd7f93":"plt.figure(figsize=(10,10))\n\nsns.scatterplot(data=pca_dataframe, x='comp_1', y='comp_2', hue='Aggl_cls', palette=\"viridis\")\nplt.title('Agglomerative Clustering')","09ee0811":"pca_dataframe['DBSCAN'] = dbscan","18cd0171":"plt.figure(figsize=(10,10))\n\nsns.scatterplot(data=pca_dataframe, x='comp_1', y='comp_2', hue='DBSCAN', palette=\"viridis\")\nplt.title('DBSCAN')","bb7268a9":"from sklearn.metrics import silhouette_score","513901df":"print('\u041c\u0435\u0442\u0440\u0438\u043a\u0430 silhouette_score:')\nprint('\u041e\u0446\u0435\u043d\u043a\u0430 K-Mean: {}'.format(silhouette_score(pca_dataframe[['comp_1', 'comp_2']], pca_dataframe['K_means_cls'])))\nprint('\u041e\u0446\u0435\u043d\u043a\u0430 Agglomerative Clustering: {}'.format(silhouette_score(pca_dataframe[['comp_1', 'comp_2']], pca_dataframe['Aggl_cls'])))\nprint('\u041e\u0446\u0435\u043d\u043a\u0430 DBSCAN: {}'.format(silhouette_score(pca_dataframe[['comp_1', 'comp_2']], pca_dataframe['DBSCAN'])))","4f89ffc9":"\u041f\u0440\u043e\u0446\u0435\u043d\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u043c\u0438 \u043d\u0435 \u0432\u0435\u043b\u0438\u043a, \u043c\u043e\u0436\u043d\u043e \u0438\u043c\u0438 \u043f\u0440\u0435\u043d\u0435\u0431\u0440\u0435\u0447\u044c.","c425eeb8":"\u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0438 \u0434\u0430\u0442\u0430\u0441\u0435\u0442:","08159e32":"\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u0443\u0435\u043c \"\u043e\u0447\u0438\u0449\u0435\u043d\u043d\u044b\u0435\" \u0434\u0430\u043d\u043d\u044b\u0435:","94346901":"\u0414\u043b\u044f \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u043c \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0445:","a1f2be06":"**\u0421\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0438\u0441\u0445\u043e\u0434\u044f \u0438\u0437 \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u0439 \u0432\u044b\u0448\u0435:**","c307dcca":"\u041c\u043e\u0436\u043d\u043e \u043e\u0442\u043c\u0435\u0442\u0438\u0442\u044c \u0441\u0438\u043b\u044c\u043d\u044b\u0439 \u0434\u0438\u0441\u0431\u0430\u043b\u0430\u043d\u0441 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u0435\u0439 \u0438 \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043f\u043e\u043b\u044f\u0445 \"PURCHASES\", \"CASH_ADVANCE\", \"INSTALLMENTS_PURCHASES\", \"ONEOFF_PURCHASES\", \"PAYMENTS\", \"MINIMUM_PAYMENTS\", \"PURCHASES_TRX\", \"CASH_ADVANCE_TRX\" \u043f\u043e\u0445\u043e\u0436\u0438\u0445 \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b.\n\n\u041f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0435 \u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0440\u0430\u0441\u0441\u0440\u043e\u0447\u043a\u043e\u0439. \u0418\u0437 \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0445\u0441\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0432\u0441\u0435\u0433\u043e 15% \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u043e\u0433\u0430\u0441\u0438\u043b\u0438 \u0437\u0430\u0439\u043c.\n","e8420900":"**\u0412\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u043e K-means \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u0443 \u043a\u043b\u0430\u0441\u0435\u0442\u0440\u0438\u0437\u0430\u0442\u043e\u0440\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u0440\u0438\u043a:**","17b9e14a":"**\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u043e\u043b\u044f \u0441 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u043c\u0438:**","b755ae31":"# \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430","e562fa34":"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0435 \u0438\u0434\u0435\u0430\u043b\u044c\u043d\u043e, \u043d\u043e \u044d\u0442\u043e \u0432\u0441\u0451 \u0440\u0430\u0432\u043d\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u043b\u043e \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0430\u043d\u043d\u044b\u0445. \u0421 \u0434\u0440\u0443\u0433\u043e\u0439 \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0433\u0440\u0443\u0431\u044b\u0439 \u043c\u0435\u0442\u043e\u0434, \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0435\u0440\u044f\u0435\u0442\u0441\u044f. \u041d\u0435 \u0432 \u0443\u0447\u0435\u0431\u043d\u044b\u0445 \u0446\u0435\u043b\u044f\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u043a\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u043d\u0435 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u043e.","f6ebfd8b":"\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435","a59321b5":"\u041e\u0447\u0438\u0441\u0442\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u0443\u0434\u0430\u043b\u0438\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0441 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u043c\u0438:","c7a33fb3":"\u0413\u0434\u0435:\n* CUSTID : Identification of Credit Card holder (Categorical)\n* BALANCE : Balance amount left in their account to make purchases\n* BALANCEFREQUENCY : How frequently the Balance is updated, score between 0 and 1 (1 = frequently updated, 0 = not frequently updated)\n* PURCHASES : Amount of purchases made from account\n* ONEOFFPURCHASES : Maximum purchase amount done in one-go\n* INSTALLMENTSPURCHASES : Amount of purchase done in installment\n* CASHADVANCE : Cash in advance given by the user\n* PURCHASESFREQUENCY : How frequently the Purchases are being made, - score between 0 and 1 (1 = frequently purchased, 0 = not frequently purchased)\n* ONEOFFPURCHASESFREQUENCY : How frequently Purchases are happening in one-go (1 = frequently purchased, 0 = not frequently purchased)\n* PURCHASESINSTALLMENTSFREQUENCY : How frequently purchases in installments are being done (1 = frequently done, 0 = not frequently done)\n* CASHADVANCEFREQUENCY : How frequently the cash in advance being paid\n* CASHADVANCETRX : Number of Transactions made with \"Cash in Advanced\"\n* PURCHASESTRX : Numbe of purchase transactions made\n* CREDITLIMIT : Limit of Credit Card for user\n* PAYMENTS : Amount of Payment done by user\n* MINIMUM_PAYMENTS : Minimum amount of payments made by user\n* PRCFULLPAYMENT : Percent of full payment paid by user\n* TENURE : Tenure of credit card service for user","af9832b9":"\u0422\u0430\u043a \u043a\u0430\u043a \u0443 \u043d\u0430\u0441 \u043d\u0435\u0442 \u0446\u0435\u043b\u0435\u0432\u044b\u0445 \u043c\u0435\u0442\u043e\u043a, \u043c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c ARI, AMI, Homogenity, Completeness \u0438 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441 \u043d\u0438\u043c\u0438 \u043c\u0435\u0442\u0440\u0438\u043a\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043e\u0446\u0435\u043d\u043a\u0443 \u0441\u0438\u043b\u0443\u044d\u0442\u0430: silhouette_score","7f237b35":"# \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","bb6c4048":"8950 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435. \u041c\u043e\u0436\u043d\u043e \u043e\u0442\u043c\u0435\u0442\u0438\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0432 \u043f\u043e\u043b\u044f\u0445 \"MINIMUM_PAYMENTS\" \u0438 \"CREDIT_LIMIT\". \u0412\u0441\u0435\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432:","b9e73d10":"# \u0410\u0433\u043b\u043e\u043c\u0435\u0440\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u0438 \u043f\u043e\u0438\u0441\u043a \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043e\u0432 \u0441 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435\u043c \u0434\u0435\u0440\u0435\u0432\u0430","5997ad1e":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434 \"\u043b\u043e\u043a\u0442\u044f\" \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u0442\u044c, \u0447\u0442\u043e \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043e\u0432 \u0440\u0430\u0432\u043d\u043e 4.","6210070c":"\u0421\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u043e\u0446\u0435\u043d\u043a\u0435 \u043b\u0443\u0447\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 K-mean","fb594e91":"# \u041e\u0446\u0435\u043d\u043a\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430","1f20179d":"# DBSCAN","2b7288fb":"# K-means \u0438 \u043f\u043e\u0438\u0441\u043a \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043e\u0432 \u043c\u0435\u0442\u043e\u0434\u043e\u043c \u043b\u043e\u043a\u0442\u044f","928de393":"\u0412\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u043e \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u043e\u0432 \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u044d\u0442\u043e\u043c\u0443 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0443 \u0440\u0430\u0432\u043d\u043e 6."}}