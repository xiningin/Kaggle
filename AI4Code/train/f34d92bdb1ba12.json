{"cell_type":{"1894ed0d":"code","daaa6cbd":"code","c67d2d85":"code","1edd0b4f":"code","2a55f7b4":"code","8b751b9e":"code","5561cd98":"code","d4c4098d":"code","5fe1e8b5":"code","2da182bf":"code","15f999a8":"code","80ea4792":"code","6e20d817":"code","1fb082e5":"code","37bbb02d":"code","f3b332e5":"code","626e53d7":"code","857a8618":"code","b912fa34":"code","918aa692":"code","3d051e61":"code","e1382228":"code","59158575":"code","d9fa00fc":"code","ff78ba4c":"code","cb266bbc":"code","62c234f8":"code","c36d91ac":"code","741195c4":"code","24409aac":"code","e907464d":"code","15512ab3":"code","761382be":"code","246d9f5c":"code","f27aba46":"code","dfb53fe0":"code","fcd6024c":"code","57219d80":"code","a2de9f7c":"code","a6a87a45":"markdown","fe40e76e":"markdown","abe46b20":"markdown"},"source":{"1894ed0d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom datetime import datetime\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder, LabelEncoder, RobustScaler, PowerTransformer, PolynomialFeatures\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.ensemble import RandomForestRegressor\n!pip -q install openpyxl","daaa6cbd":"def parser(s):\n    return datetime.strptime(s, '%d.%m.%Y')","c67d2d85":"#https:\/\/pyprog.pro\/data_types.html\nshipments= pd.read_csv('\/kaggle\/input\/testovoyo\/Shipments_by_PO.csv',parse_dates=['\u0414\u0430\u0442\u0430 \u043d\u0430\u043a\u043b\u0430\u0434\u043d\u043e\u0439'],date_parser=parser,dtype={'\u0441\u043a\u0438\u0434\u043a\u0430':np.int8,'\u041f\u0440\u043e\u0434\u0430\u0436\u0438, \u0448\u0442':np.int16,'\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430':np.int16})","1edd0b4f":"shipments.info()","2a55f7b4":"shipments.head(4)","8b751b9e":"shipments['day']=shipments['\u0414\u0430\u0442\u0430 \u043d\u0430\u043a\u043b\u0430\u0434\u043d\u043e\u0439'].dt.day\nshipments['month']=shipments['\u0414\u0430\u0442\u0430 \u043d\u0430\u043a\u043b\u0430\u0434\u043d\u043e\u0439'].dt.month\nshipments['year']=shipments['\u0414\u0430\u0442\u0430 \u043d\u0430\u043a\u043b\u0430\u0434\u043d\u043e\u0439'].dt.year","5561cd98":"dic_ch = ['\u041a\u0430\u043d\u0430\u043b 1','\u041a\u0430\u043d\u0430\u043b 2','\u041a\u0430\u043d\u0430\u043b 3','\u041a\u0430\u043d\u0430\u043b 4','\u041a\u0430\u043d\u0430\u043b 5']\ndef channel_name(channel):\n    if channel in dic_ch:\n        return '\u0420\u043e\u0437\u043d\u0438\u0447\u043d\u0430\u044f \u0442\u043e\u0440\u0433\u043e\u0432\u043b\u044f'\n    else:\n        return '\u041e\u043f\u0442\u043e\u0432\u0430\u044f \u0442\u043e\u0440\u0433\u043e\u0432\u043b\u044f'","d4c4098d":"shipments['\u041a\u0430\u043d\u0430\u043b']=shipments['\u041a\u0430\u043d\u0430\u043b'].apply(channel_name)","5fe1e8b5":"shipments.head(1)","2da182bf":"shipments.tail(1)","15f999a8":"shipments[(shipments['\u041a\u0430\u043d\u0430\u043b']=='\u041e\u043f\u0442\u043e\u0432\u0430\u044f \u0442\u043e\u0440\u0433\u043e\u0432\u043b\u044f')&(shipments['\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430']==3)]","80ea4792":"ship_sales = shipments.groupby(['\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430','\u041a\u0430\u043d\u0430\u043b','year','month'])['\u041f\u0440\u043e\u0434\u0430\u0436\u0438, \u0448\u0442'].sum()\nship_sales","6e20d817":"ship_discount = shipments.groupby(['\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430','\u041a\u0430\u043d\u0430\u043b','year','month'])['\u0441\u043a\u0438\u0434\u043a\u0430'].mean()\nship_discount ","1fb082e5":"data = pd.concat([ship_sales,ship_discount ], axis=1, join=\"outer\")\ndata","37bbb02d":"data = data.reset_index()\ndata","f3b332e5":"data['\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430'].nunique()","626e53d7":"650*2*3","857a8618":"forecast= pd.read_excel('\/kaggle\/input\/testovoyo\/Forecast_of_discounts.xlsx')","b912fa34":"forecast['\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430'] = forecast['\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430'].str[-3:].astype(int)","918aa692":"items = data['\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430'].unique()","3d051e61":"x1 = pd.DataFrame({'\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430':np.repeat(items, 6),'\u041d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u0430\u0436':np.repeat(['\u041e\u043f\u0442\u043e\u0432\u0430\u044f \u0442\u043e\u0440\u0433\u043e\u0432\u043b\u044f','\u0420\u043e\u0437\u043d\u0438\u0447\u043d\u0430\u044f \u0442\u043e\u0440\u0433\u043e\u0432\u043b\u044f']*650, 3),'Month':[7,8,9]*1300})\nx1","e1382228":"x1[['\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430','\u041d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u0430\u0436','Month']]","59158575":"forecast[['\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430','\u041d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u0430\u0436','Month']]","d9fa00fc":"final = pd.merge(\n    x1,\n    forecast,\n    how=\"left\",\n)","ff78ba4c":"final.Year=final.Year.fillna(2018)\nfinal['\u0421\u043a\u0438\u0434\u043a\u0430']=final['\u0421\u043a\u0438\u0434\u043a\u0430'].fillna(0)","cb266bbc":"final","62c234f8":"final.columns=['\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430', '\u041a\u0430\u043d\u0430\u043b', 'month', 'year', '\u0441\u043a\u0438\u0434\u043a\u0430']","c36d91ac":"final=final[['\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430', '\u041a\u0430\u043d\u0430\u043b', 'year', 'month', '\u0441\u043a\u0438\u0434\u043a\u0430']]","741195c4":"X = data.drop(['\u041f\u0440\u043e\u0434\u0430\u0436\u0438, \u0448\u0442'],axis=1)\ny = data['\u041f\u0440\u043e\u0434\u0430\u0436\u0438, \u0448\u0442']","24409aac":"from sklearn.metrics import mean_squared_error","e907464d":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","15512ab3":"cat_features=['\u041a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430', '\u041a\u0430\u043d\u0430\u043b', 'year', 'month']\nnum_features=['\u0441\u043a\u0438\u0434\u043a\u0430']","761382be":"preprocessor = ColumnTransformer(\n    transformers=[\n        ('cat', OneHotEncoder(handle_unknown='ignore'), cat_features),\n        ('num', StandardScaler() , num_features)\n    ])\n\nclf = Pipeline(steps=[\n                    ('pre', preprocessor),\n                    ('poly', PolynomialFeatures(4)),\n                    ('xg', LinearRegression()),\n                    ])\n\nclf.fit(X_train, y_train)","246d9f5c":"predictions = clf.predict(X_test)\nmean_squared_error(y_test, predictions)","f27aba46":"preprocessor = ColumnTransformer(\n    transformers=[\n        ('cat', OneHotEncoder(handle_unknown='ignore'), cat_features),\n        ('num', StandardScaler() , num_features)\n    ])\n\nclf = Pipeline(steps=[\n                    ('pre', preprocessor),\n                    ('poly', PolynomialFeatures(2)),\n                    ('xg', RandomForestRegressor(random_state=0)),\n                    ])\n\nclf.fit(X_train, y_train)\npredictions = clf.predict(X_test)\nmean_squared_error(y_test, predictions)","dfb53fe0":"preprocessor = ColumnTransformer(\n    transformers=[\n        ('cat', OneHotEncoder(handle_unknown='ignore'), cat_features),\n        ('num', StandardScaler() , num_features)\n    ])\n\nclf = Pipeline(steps=[\n                    ('pre', preprocessor),\n                    #('poly', PolynomialFeatures(1)),\n                    ('xg', RandomForestRegressor(n_estimators=200,random_state=0)),\n                    ])\n\nclf.fit(X_train, y_train)\npredictions = clf.predict(X_test)\nmean_squared_error(y_test, predictions)","fcd6024c":"final['sales']=predictions","57219d80":"final.to_csv('submission.csv',index=False)","a2de9f7c":"final","a6a87a45":"\u2022    \u0415\u0441\u0442\u044c \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u043e\u0432 \u043f\u043e \u0434\u043d\u044f\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0432 \u043a\u0430\u0436\u0434\u044b\u0439 \u043a\u0430\u043d\u0430\u043b \u043f\u0440\u043e\u0434\u0430\u0436 (Shipments_by_PO.csv) \u043d\u0430 \u043f\u0435\u0440\u0438\u043e\u0434 \u0441 \u044f\u043d\u0432\u0430\u0440\u044f 17 \u043f\u043e \u0438\u044e\u043d\u044c 18. \u0422\u0430\u043a\u0436\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e, \u0441 \u043a\u0430\u043a\u043e\u0439 \u0441\u043a\u0438\u0434\u043a\u043e\u0439 \u0431\u044b\u043b \u043f\u0440\u043e\u0434\u0430\u043d \u043f\u0440\u043e\u0434\u0443\u043a\u0442. \u041f\u0440\u043e\u0434\u0430\u0436\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043d\u0435 \u0432\u043e \u0432\u0441\u0435 \u0434\u043d\u0438.\n\u2022    \u0415\u0441\u0442\u044c \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0430 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u0430\u043d\u0430\u043b\u0430 \u043f\u0440\u043e\u0434\u0430\u0436 \u043a \u0442.\u043d. \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044e \u043f\u0440\u043e\u0434\u0430\u0436 \u2013 \u043e\u043f\u0442\u043e\u0432\u0430\u044f \u0438\u043b\u0438 \u0440\u043e\u0437\u043d\u0438\u0447\u043d\u0430\u044f \u0442\u043e\u0440\u0433\u043e\u0432\u043b\u044f (Mapping.csv)\n\u2022    \u0415\u0441\u0442\u044c \u043f\u0440\u043e\u0433\u043d\u043e\u0437, \u0441 \u043a\u0430\u043a\u043e\u0439 \u0441\u043a\u0438\u0434\u043a\u043e\u0439 \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u043e\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u044b \u0432 \u0438\u044e\u043b\u0435-\u0430\u0432\u0433\u0443\u0441\u0442\u0435 18 (Forecast_of_discounts.xlsx). \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0430\/\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0435\u0442 \u0432 \u0444\u0430\u0439\u043b\u0435, \u0437\u043d\u0430\u0447\u0438\u0442 \u0441\u043a\u0438\u0434\u043a\u0430 \u2013 0%\n\u2022    \u041d\u0443\u0436\u043d\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u0440\u043e\u0433\u043d\u043e\u0437 \u043f\u0440\u043e\u0434\u0430\u0436 \u043d\u0430 \u0438\u044e\u043b\u044c-\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c 18 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0435\u0433\u043e \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u2013 \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438.\n\u2022    \u0420\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0434\u0443\u043a\u0442-\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u043d\u043e\u043c\u0435\u0440 \u043c\u0435\u0441\u044f\u0446\u0430, \u0433\u043e\u0434\u0430 \u0438 \u0440\u0430\u0437\u043c\u0435\u0440 \u0441\u043a\u0438\u0434\u043a\u0438. \u041d\u043e\u043c\u0435\u0440 \u043c\u0435\u0441\u044f\u0446\u0430 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e One-Hot Encoding.\n\u2022    \u041f\u0440\u043e\u0433\u043d\u043e\u0437 \u043d\u0443\u0436\u0435\u043d \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u043c\u0435\u0441\u044f\u0446\u0430, \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0430 \u0438 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0434\u0430\u0436, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Pandas.\n\u2022    \u041d\u0430\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b \u043d\u0435 \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0435 \u0446\u0438\u0444\u0440\u044b, \u0430 Python \u043a\u043e\u0434 \u043f\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n \n\u0411\u0443\u0434\u0435\u043c \u0436\u0434\u0430\u0442\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0434\u043e \u043a\u043e\u043d\u0446\u0430 \u0434\u043d\u044f \u0432 \u0447\u0435\u0442\u0432\u0435\u0440\u0433. \u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0437\u0430\u0440\u0430\u043d\u0435\u0435 \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043e\u0431 \u044d\u0442\u043e\u043c. \u041d\u043e, \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0440\u0430\u043d\u044c\u0448\u0435, \u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0437\u0434\u043e\u0440\u043e\u0432\u043e. \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u0432\u043e\u043f\u0440\u043e\u0441\u044b, \u0442\u043e\u0436\u0435 \u043f\u0438\u0448\u0438\u0442\u0435.","fe40e76e":"## Forecast","abe46b20":"# Linear Regression"}}