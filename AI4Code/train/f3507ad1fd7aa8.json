{"cell_type":{"b0a9f779":"code","428035fa":"code","0c3845a7":"code","ca2d482d":"code","6959c004":"code","41e5ade7":"code","969101eb":"code","11a906aa":"code","90235e71":"code","2d3e5fd2":"code","0244f3ac":"code","a67d76c5":"code","aebf2ecb":"code","31bbb8d4":"code","d77c8e48":"markdown","a273e3fd":"markdown","72b15266":"markdown","0c066e38":"markdown"},"source":{"b0a9f779":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas.plotting import scatter_matrix\nimport tensorflow as tf\nfrom tensorflow.keras.datasets import cifar10","428035fa":"(X_train, y_train), (X_test, y_test) = cifar10.load_data()","0c3845a7":"X_train.shape, y_train.shape,X_test.shape, y_test.shape","ca2d482d":"y_train=y_train.reshape(-1,)\ny_test=y_test.reshape(-1,)\ny_train","6959c004":"plt.imshow(X_train[1])","41e5ade7":"X_train = X_train \/ 255.0\nX_test = X_test \/ 255.0","969101eb":"import keras\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras import models,layers","11a906aa":"ann = models.Sequential([\n        layers.Flatten(input_shape=(32,32,3)),\n        layers.Dense(3000, activation='relu'),\n        layers.Dense(1000, activation='relu'),\n        layers.Dense(10, activation='softmax')    \n    ])\n\nann.compile(optimizer='SGD',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n\nann.fit(X_train, y_train, epochs=5)","90235e71":"pre=ann.predict(X_test)\npred=np.argmax(pre,axis=1)\npred","2d3e5fd2":"from sklearn.metrics import accuracy_score\naccuracy_score(pred,y_test)","0244f3ac":"cnn=models.Sequential([\n    layers.Conv2D(filters=32, kernel_size=(3, 3),activation=\"relu\",input_shape=(32,32,3)),\n    layers.MaxPooling2D((2, 2)),\n    \n    layers.Conv2D(filters=64, kernel_size=(3, 3),activation=\"relu\"),\n    layers.MaxPooling2D((2, 2)),\n    \n    layers.Flatten(),\n    layers.Dense(100,activation=\"relu\"),\n    layers.Dense(10,activation=\"softmax\")\n    \n    \n    \n    \n])","a67d76c5":"cnn.compile(\n   optimizer=\"adam\",\n   loss=\"sparse_categorical_crossentropy\",\n   metrics=[\"accuracy\"]\n\n)\ncnn.fit(X_train,y_train,epochs=5)","aebf2ecb":"result=cnn.predict(X_test)\nres=np.argmax(result,axis=1)\nres","31bbb8d4":"accuracy_score(res,y_test)","d77c8e48":"# Using ANN","a273e3fd":"# Normalising data","72b15266":"# #CNN","0c066e38":"# data Exploration"}}