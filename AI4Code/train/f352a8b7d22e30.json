{"cell_type":{"f562c609":"code","d482c3af":"code","4ed44f1c":"code","2c9548f8":"code","6d3e077a":"code","bc2c4e64":"code","3c38edf7":"code","b59ecdda":"code","0f641997":"code","83eab0a2":"code","6f466c8f":"code","85f1fc57":"code","42aeadeb":"code","54a39d53":"code","bb8391ed":"markdown","a76f9564":"markdown","597cd90b":"markdown","f201e5c2":"markdown","13408405":"markdown","f38520c3":"markdown"},"source":{"f562c609":"!pip install --upgrade mxnet\n!pip install --upgrade autogluon\n!pip install -U ipykernel","d482c3af":"import autogluon as ag\nfrom autogluon import TabularPrediction as task\nimport pandas as pd\nimport numpy as np\nimport csv","4ed44f1c":"dataset = pd.read_csv('\/content\/train.csv') \n# dataset = task.Dataset('data\/train')","2c9548f8":"dataset.head()","6d3e077a":"dataset.dtypes","bc2c4e64":"# Convert all NaN to Zeros\ndataset.fillna(0, inplace=True)","3c38edf7":"metric=\"root_mean_squared_error\"\n\n# Evaluation Metric Options Below :\n# 'accuracy\u2019, \u2018balanced_accuracy\u2019, \u2018f1\u2019, \u2018f1_macro\u2019, \u2018f1_micro\u2019, \u2018f1_weighted\u2019, \u2018roc_auc\u2019, \u2018average_precision\u2019\n# \u2018precision\u2019, \u2018precision_macro\u2019, \u2018precision_micro\u2019, \u2018precision_weighted\u2019, \u2018recall\u2019, \u2018recall_macro\u2019, \u2018recall_micro\u2019\n# \u2018recall_weighted\u2019, \u2018log_loss\u2019, \u2018pac_score\u2019","b59ecdda":"# For purpose of scoring for Kaggle, using Root Mean Square Log Error (RMSLE), work around in AutoGluon as follows :\n\ndataset['SalePrice'] = np.log(dataset['SalePrice'])","0f641997":"predictor = task.fit(train_data=dataset,\n                     label='SalePrice',\n                     presets='best_quality', \n                     eval_metric= metric, \n                     verbosity=2)","83eab0a2":"new_data = pd.read_csv('\/content\/test.csv') ","6f466c8f":"new_data.fillna(0, inplace=True)","85f1fc57":"prediction = predictor.predict(new_data)","42aeadeb":"# Inverse transform from Root Mean Squared Log Error (RMSLE)\nprediction = np.exp(prediction)","54a39d53":"sub = pd.read_csv('\/content\/sample_submission.csv')\nsub['SalePrice'] = prediction\nsub.to_csv('submission.csv', index=False)","bb8391ed":"As AutoGluon does not have RMSLE as an option for evaluation metric, we will transform data into Log first before running prediction.","a76f9564":"This Notebook is run in Google Colab. Does not work in Kaggle notebook due to incompatible SK Learn versions.","597cd90b":"Inverse transform the log function","f201e5c2":"Using best quality which runs auto stacking and takes up just under 1 hour in Google Colab CPU to run.","13408405":"For AutoGluon, it is hypersensitive to NaN data. So without performing manual data cleansing, a quick and dirty solution is to convert all NaN to zeros.","f38520c3":"Replace all NaN in test file to Zeros"}}