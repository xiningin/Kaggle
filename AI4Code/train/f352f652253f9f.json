{"cell_type":{"abc76db9":"code","0a11aaa9":"code","4e3430f1":"code","1a7a41d1":"code","ef8c9fef":"code","8a38dd88":"code","31cbc8bc":"code","09abcdda":"code","260a4fb8":"markdown","6493fd4a":"markdown","2b5f323b":"markdown","4b3ac31a":"markdown","8fd3d31c":"markdown","87dc0c2e":"markdown"},"source":{"abc76db9":"!pip install gender_guesser\n\nimport pandas as pd\nimport numpy as np\nimport datetime as dt\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport datetime\nimport gender_guesser.detector as gender\nfrom collections import Counter\nfrom plotly.offline import iplot","0a11aaa9":"df = pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\")","4e3430f1":"sns.set_style(\"darkgrid\", {\"axes.facecolor\": \"0.95\"})\nax = df['rating'].value_counts().plot.bar(stacked=False, color='#99ccff',figsize=(18,5))\nax.set_title('Film Ratings Breakdown')\nsns.despine()\nplt.show()","1a7a41d1":"ax = df['release_year'].value_counts().sort_index(ascending=False).plot.bar(stacked=False, color='#99ccff', figsize=(18,5))\nax.set_title('Film Release Year Breakdown')\nsns.despine()\nplt.show()","ef8c9fef":"country_codes = {'afghanistan': 'AFG',\n 'albania': 'ALB',\n 'algeria': 'DZA',\n 'american samoa': 'ASM',\n 'andorra': 'AND',\n 'angola': 'AGO',\n 'anguilla': 'AIA',\n 'antigua and barbuda': 'ATG',\n 'argentina': 'ARG',\n 'armenia': 'ARM',\n 'aruba': 'ABW',\n 'australia': 'AUS',\n 'austria': 'AUT',\n 'azerbaijan': 'AZE',\n 'bahamas': 'BHM',\n 'bahrain': 'BHR',\n 'bangladesh': 'BGD',\n 'barbados': 'BRB',\n 'belarus': 'BLR',\n 'belgium': 'BEL',\n 'belize': 'BLZ',\n 'benin': 'BEN',\n 'bermuda': 'BMU',\n 'bhutan': 'BTN',\n 'bolivia': 'BOL',\n 'bosnia and herzegovina': 'BIH',\n 'botswana': 'BWA',\n 'brazil': 'BRA',\n 'british virgin islands': 'VGB',\n 'brunei': 'BRN',\n 'bulgaria': 'BGR',\n 'burkina faso': 'BFA',\n 'burma': 'MMR',\n 'burundi': 'BDI',\n 'cabo verde': 'CPV',\n 'cambodia': 'KHM',\n 'cameroon': 'CMR',\n 'canada': 'CAN',\n 'cayman islands': 'CYM',\n 'central african republic': 'CAF',\n 'chad': 'TCD',\n 'chile': 'CHL',\n 'china': 'CHN',\n 'colombia': 'COL',\n 'comoros': 'COM',\n 'congo democratic': 'COD',\n 'Congo republic': 'COG',\n 'cook islands': 'COK',\n 'costa rica': 'CRI',\n \"cote d'ivoire\": 'CIV',\n 'croatia': 'HRV',\n 'cuba': 'CUB',\n 'curacao': 'CUW',\n 'cyprus': 'CYP',\n 'czech republic': 'CZE',\n 'denmark': 'DNK',\n 'djibouti': 'DJI',\n 'dominica': 'DMA',\n 'dominican republic': 'DOM',\n 'ecuador': 'ECU',\n 'egypt': 'EGY',\n 'el salvador': 'SLV',\n 'equatorial guinea': 'GNQ',\n 'eritrea': 'ERI',\n 'estonia': 'EST',\n 'ethiopia': 'ETH',\n 'falkland islands': 'FLK',\n 'faroe islands': 'FRO',\n 'fiji': 'FJI',\n 'finland': 'FIN',\n 'france': 'FRA',\n 'french polynesia': 'PYF',\n 'gabon': 'GAB',\n 'gambia, the': 'GMB',\n 'georgia': 'GEO',\n 'germany': 'DEU',\n 'ghana': 'GHA',\n 'gibraltar': 'GIB',\n 'greece': 'GRC',\n 'greenland': 'GRL',\n 'grenada': 'GRD',\n 'guam': 'GUM',\n 'guatemala': 'GTM',\n 'guernsey': 'GGY',\n 'guinea-bissau': 'GNB',\n 'guinea': 'GIN',\n 'guyana': 'GUY',\n 'haiti': 'HTI',\n 'honduras': 'HND',\n 'hong kong': 'HKG',\n 'hungary': 'HUN',\n 'iceland': 'ISL',\n 'india': 'IND',\n 'indonesia': 'IDN',\n 'iran': 'IRN',\n 'iraq': 'IRQ',\n 'ireland': 'IRL',\n 'isle of man': 'IMN',\n 'israel': 'ISR',\n 'italy': 'ITA',\n 'jamaica': 'JAM',\n 'japan': 'JPN',\n 'jersey': 'JEY',\n 'jordan': 'JOR',\n 'kazakhstan': 'KAZ',\n 'kenya': 'KEN',\n 'kiribati': 'KIR',\n 'north korea': 'PRK',\n 'south korea': 'KOR',\n 'kosovo': 'KSV',\n 'kuwait': 'KWT',\n 'kyrgyzstan': 'KGZ',\n 'laos': 'LAO',\n 'latvia': 'LVA',\n 'lebanon': 'LBN',\n 'lesotho': 'LSO',\n 'liberia': 'LBR',\n 'libya': 'LBY',\n 'liechtenstein': 'LIE',\n 'lithuania': 'LTU',\n 'luxembourg': 'LUX',\n 'macau': 'MAC',\n 'macedonia': 'MKD',\n 'madagascar': 'MDG',\n 'malawi': 'MWI',\n 'malaysia': 'MYS',\n 'maldives': 'MDV',\n 'mali': 'MLI',\n 'malta': 'MLT',\n 'marshall islands': 'MHL',\n 'mauritania': 'MRT',\n 'mauritius': 'MUS',\n 'mexico': 'MEX',\n 'micronesia': 'FSM',\n 'moldova': 'MDA',\n 'monaco': 'MCO',\n 'mongolia': 'MNG',\n 'montenegro': 'MNE',\n 'morocco': 'MAR',\n 'mozambique': 'MOZ',\n 'namibia': 'NAM',\n 'nepal': 'NPL',\n 'netherlands': 'NLD',\n 'new caledonia': 'NCL',\n 'new zealand': 'NZL',\n 'nicaragua': 'NIC',\n 'nigeria': 'NGA',\n 'niger': 'NER',\n 'niue': 'NIU',\n 'northern mariana islands': 'MNP',\n 'norway': 'NOR',\n 'oman': 'OMN',\n 'pakistan': 'PAK',\n 'palau': 'PLW',\n 'panama': 'PAN',\n 'papua new guinea': 'PNG',\n 'paraguay': 'PRY',\n 'peru': 'PER',\n 'philippines': 'PHL',\n 'poland': 'POL',\n 'portugal': 'PRT',\n 'puerto rico': 'PRI',\n 'qatar': 'QAT',\n 'romania': 'ROU',\n 'russia': 'RUS',\n 'rwanda': 'RWA',\n 'saint kitts and nevis': 'KNA',\n 'saint lucia': 'LCA',\n 'saint martin': 'MAF',\n 'saint pierre and miquelon': 'SPM',\n 'saint vincent and the grenadines': 'VCT',\n 'samoa': 'WSM',\n 'san marino': 'SMR',\n 'sao tome and principe': 'STP',\n 'saudi arabia': 'SAU',\n 'senegal': 'SEN',\n 'serbia': 'SRB',\n 'seychelles': 'SYC',\n 'sierra leone': 'SLE',\n 'singapore': 'SGP',\n 'sint maarten': 'SXM',\n 'slovakia': 'SVK',\n 'slovenia': 'SVN',\n 'solomon islands': 'SLB',\n 'somalia': 'SOM',\n 'south africa': 'ZAF',\n 'south sudan': 'SSD',\n 'spain': 'ESP',\n 'sri lanka': 'LKA',\n 'sudan': 'SDN',\n 'suriname': 'SUR',\n 'swaziland': 'SWZ',\n 'sweden': 'SWE',\n 'switzerland': 'CHE',\n 'syria': 'SYR',\n 'taiwan': 'TWN',\n 'tajikistan': 'TJK',\n 'tanzania': 'TZA',\n 'thailand': 'THA',\n 'timor-leste': 'TLS',\n 'togo': 'TGO',\n 'tonga': 'TON',\n 'trinidad and tobago': 'TTO',\n 'tunisia': 'TUN',\n 'turkey': 'TUR',\n 'turkmenistan': 'TKM',\n 'tuvalu': 'TUV',\n 'uganda': 'UGA',\n 'ukraine': 'UKR',\n 'united arab emirates': 'ARE',\n 'united kingdom': 'GBR',\n 'united states': 'USA',\n 'uruguay': 'URY',\n 'uzbekistan': 'UZB',\n 'vanuatu': 'VUT',\n 'venezuela': 'VEN',\n 'vietnam': 'VNM',\n 'virgin islands': 'VGB',\n 'west bank': 'WBG',\n 'yemen': 'YEM',\n 'zambia': 'ZMB',\n 'zimbabwe': 'ZWE'} \n    \ndef geoplot(ddf):\n    country_with_code, country = {}, {}\n    shows_countries = \", \".join(ddf['country'].dropna()).split(\", \")\n    for c,v in dict(Counter(shows_countries)).items():\n        code = \"\"\n        if c.lower() in country_codes:\n            code = country_codes[c.lower()]\n        country_with_code[code] = v\n        country[c] = v\n\n    data = [dict(\n            type = 'choropleth',\n            locations = list(country_with_code.keys()),\n            z = list(country_with_code.values()),\n            colorscale = [[0,\"rgb(100, 153, 255)\"],[0.65,\"rgb(125, 173, 255)\"],\\\n                        [0.80,\"rgb(153, 204, 255)\"],[1,\"rgb(235, 235, 235)\"]],\n            autocolorscale = False,\n            reversescale = True,\n            marker = dict(\n                line = dict (\n                    color = 'white',\n                    width = 0.9\n                ) ),\n            colorbar = dict(\n                autotick = False)\n          ) ]\n\n    layout = dict(\n        title = '',\n        geo = dict(\n            showframe = False,\n            showcoastlines = False,\n            projection = dict(\n                type = 'Mercator'\n            )\n        )\n        \n    )\n\n    fig = dict( data=data, layout=layout )\n    iplot( fig, validate=False, filename='d3-world-map' )\n    return country\n\ncountry_vals = geoplot(df)","8a38dd88":"tabs = Counter(country_vals).most_common(15)\nlabels = [_[0] for _ in tabs][::-1]\nvalues = [_[1] for _ in tabs][::-1]\ncountplt, ax = plt.subplots(figsize = (23,7))\n\nsns.barplot(x=labels, y=values, palette=['#99ccff'])\nax.set_title('Countries of Origins')\nax.invert_xaxis()\nsns.despine()","31cbc8bc":"# Get U.S. based Netflix titles\ndf_usa = df[df.country.str.contains('United States', na=False)]\n\n# Prepare columns\ndf_usa = df_usa[df_usa['director'].notnull()].copy()\ndf_usa['director'] = df_usa['director'].astype(str)\ndf_usa.insert(4, 'director_gender', '')\ndf_usa.insert(7, 'month_added', '')\n\ng = []\nma = []\nd = gender.Detector()\n\nfor i in range(len(df_usa)):\n    director_1stname = str(df_usa.iloc[i][3]).split()[0]\n    director_gender = d.get_gender(director_1stname)\n    g.append(director_gender.replace(\"mostly_\", \"\"))\n    ma.append(dt.datetime.strptime(df_usa.iloc[i][8].lstrip(), '%B %d, %Y').strftime('%y-%b'))\n    \ndf_usa['director_gender'] = g\ndf_usa['month_added'] = ma\n\ndf_usa = df_usa[df_usa['director_gender'] != 'andy']\ndf_usa = df_usa[df_usa['director_gender'] != 'unknown']\n\n\n\ncountplt, ax = plt.subplots(figsize = (25,3))\nax = sns.countplot(y = df_usa['director_gender'], palette=['#99ccff', '#ff9999'])\nax.set_ylabel('')\nax.set_xlabel('')\nax.set_title('Gender Breakdown of Filmmakers -- Bar Chart')\nsns.despine()","09abcdda":"df_usa[\"director_gender\"] = df_usa[\"director_gender\"].apply(lambda x: x.replace(\"female\", \"0\"))\ndf_usa[\"director_gender\"] = df_usa[\"director_gender\"].apply(lambda x: x.replace(\"male\", \"1\"))\ntbl = df_usa.groupby(['month_added','release_year']).size()\n\ndf_usa['director_gender'] = pd.to_numeric(df_usa['director_gender'], errors ='coerce')\ndata = df_usa.groupby(['month_added','release_year']).agg({'director_gender': ['mean']}).reset_index()\ndata.columns = ['month_added', 'release_year', 'mean_gender']\ndata['month_added'] = data['month_added'].apply(lambda x: x.zfill(6))\n\n# Convert datetime to string formats\ndata['month_added'] = pd.to_datetime(data['month_added'], format='%y-%b')\ndata['release_year'] = pd.to_datetime(data['release_year'], format='%Y')\n\ndata['month_added'] = data.month_added.apply(lambda x: x.strftime(\"%Y-%m\"))\ndata['release_year'] = data.release_year.apply(lambda x: x.year)\n\npivottable = data.pivot_table(index=\"release_year\",columns=\"month_added\",values=\"mean_gender\", aggfunc=\"sum\")\nplt.figure(figsize=(28,12))\nsns.set_style({\"savefig.dpi\": 100})\n\ncmap = sns.diverging_palette(15, 245, as_cmap=True)\nheatmap = sns.heatmap(pivottable, vmin=0, vmax=1, annot=False, cmap=cmap, linewidths=.4, cbar=False, square=True)\nheatmap.invert_yaxis()\nheatmap.set_title('Gender Breakdown of Filmmakers -- Heatmap', fontsize = 15)\nheatmap.set_xlabel('Month Released')\nheatmap.set_ylabel('Year Added')\nplt.show()","260a4fb8":"### Overview\nIn this notebook, we will illustrate the share of female-curated films and movies on Netflix over the from 2008 to today. With the company's recent 5M dollar pledge to female filmmakers, we can use this data to study how Netflix will plan to build out its legacy towards gender-inclusive media. Likewise, an insight towards Netflix's ESG ratings can also be extracted with this data.","6493fd4a":"**Genders of Directors**\n\n* There are about 6.5x more films on Netflix directed by men versus women.","2b5f323b":"**Release Year**\n\n* The number of moves and shows released by Netflix so far, sorted by year. \n\n* Netflix released the most content in 2018, and has seen a steady decrease from then.","4b3ac31a":"**Country**\n\n* Most films on Netflix are created in the United States, followed by India and the United Kingdom.","8fd3d31c":"**Genders of Directors**\n\n* Over the years, the balance between male and female-directed films released on Netflix has improved.\n\n* There is no statiscally significant correlation between how recently the film has been released and the gender of its director.\n\n* Netflix has diversified its release of older films over the years.\n\n* Older films are more likely to have be directed by men than women.","87dc0c2e":"**Rating**\n\n* The most popular rating of films on Netflix is TV-MA, followed by TV-14 and TV-PG."}}