{"cell_type":{"5428397d":"code","c95cebce":"code","a4deced9":"code","120a5eb1":"code","d265aee1":"code","b994e5c9":"code","c5d01f2c":"code","a4c7d13e":"code","91856df8":"code","befc3ee0":"code","3b63c026":"code","119ed11c":"code","fbce19b3":"code","16925d99":"code","6ffd90e7":"code","b53860fa":"code","badffbed":"code","84f6969f":"code","d9d7bdde":"code","f0229ca7":"code","fe96bacb":"code","9c5ea892":"code","9a83eebc":"code","29da0c0f":"code","6abf0650":"code","5cb0cdc4":"code","9ea2e49a":"code","279613f3":"code","cfc2df08":"code","be92fd68":"code","03fe49a5":"code","c0156f71":"code","fdd33767":"code","655b0464":"code","16cfbfb0":"code","171e8d89":"markdown","dd700f99":"markdown","0e82b58b":"markdown","3e9f7405":"markdown","944169d8":"markdown","20cf145a":"markdown","debc7e56":"markdown","47ce5484":"markdown","16c55670":"markdown","bbb99eb8":"markdown","0c5e1d8f":"markdown","3796be5f":"markdown","5f8b74ac":"markdown","1b7a61cc":"markdown","8a4c29ba":"markdown","9a8e1c45":"markdown","7bd66d6d":"markdown","a18ff293":"markdown","710f7d15":"markdown","7e1ae3f7":"markdown","e0ae720d":"markdown","200a7b4e":"markdown","d93d0525":"markdown","922a58d4":"markdown","c8739a69":"markdown","f4645f76":"markdown","dfc33fa8":"markdown","841a6240":"markdown","7892f852":"markdown","c3b5f82d":"markdown"},"source":{"5428397d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c95cebce":"df = pd.read_table(\"\/kaggle\/input\/impact-of-covid19-on-unemployment-rate-in-india\/Unemployment_Rate_-_Trailing_30_days_D_Rural.txt\",sep=\", \")\nprint(df)","a4deced9":"a_file = open(\"\/kaggle\/input\/impact-of-covid19-on-unemployment-rate-in-india\/Unemployment_Rate_-_Trailing_30_days_D_Rural.txt\", \"r\")\n\nlines = a_file.readlines()[1:]\nwith open(\"sample.txt\",\"w\") as f1:\n    for i in lines:\n        f1.write(i+'\\n')\na_file.close()\n","120a5eb1":"d = pd.read_table(\"sample.txt\",sep=\", \")\nprint(d)","d265aee1":"d.columns","b994e5c9":"d.head(5)","c5d01f2c":"d.info()","a4c7d13e":"d.head(6)","91856df8":"d['Value'].describe()","befc3ee0":"np.unique(d['Region'])","3b63c026":"d['Date'].unique()","119ed11c":"np.unique(d['Frequency'])","fbce19b3":"np.unique(d['Value'])","16925d99":"d.isna().sum()","6ffd90e7":"d.insert(4,'Day',0)\nd.insert(5,'Month',0)\nd.insert(6,'Year',0)\n","b53860fa":"d.info()","badffbed":"for i in range(2053):\n    d['Day'][i]=int(d['Date'][i][0:2])\n    d['Month'][i]=int(d['Date'][i][3:5])\n    d['Year'][i]=int(d['Date'][i][6:])","84f6969f":"d.head(6)","d9d7bdde":"#checking the max of the column Year\nmax(d['Year'])","f0229ca7":"#checking the min of the column Year\nmin(d['Year'])","fe96bacb":"import matplotlib.pyplot as plt","9c5ea892":"plt.scatter(d['Date'],d['Value'],c='#FF6B6B')\nplt.title('Scatter plot of Date vs Value of Unemployment')\nplt.xlabel('Date(From 29 Jan 2016 to 14 Sep 2021)')\nplt.ylabel('Value')\nplt.xticks(rotation=0)\nplt.show()","9a83eebc":"ValMean=d['Value'].mean()","29da0c0f":"plt.scatter(d['Date'],d['Value'],c='#FF6B6B')\nplt.title('Scatter plot of Date vs Value of Unemployment')\nplt.xlabel('Date (From 29 Jan 2016 to 14 Sep 2021)')\nplt.ylabel('Value')\nplt.xticks(rotation=0)\nplt.plot(['29-01-2016','14-09-2021'], [ValMean, ValMean])\n\nplt.show()","6abf0650":"plt.scatter(d['Year'],d['Value'],c='#FF6B6B')\nplt.title('Scatter plot of Year vs Value of Unemployment')\nplt.xlabel('Year')\nplt.ylabel('Value')\nplt.xticks(rotation=0)\nplt.plot([2016,2021], [ValMean, ValMean])\nplt.show()","5cb0cdc4":"plt.scatter(d['Month'],d['Value'],c='#FF6B6B')\nplt.title('Scatter plot of Month vs Value of Unemployment')\nplt.xlabel('Month')\nplt.ylabel('Value')\nplt.xticks(rotation=90)\nplt.show()","9ea2e49a":"arr1=[]\narr2=[]\nfor i in range (2053):\n    if d['Year'][i]==2020:\n        arr1.append(d['Value'][i])\n        arr2.append(d['Month'][i])","279613f3":"plt.scatter(arr2, arr1,c='#FF6B6B')\nplt.title('Scatter plot of Month vs Value of Unemployment for the year 2020')\nplt.xlabel('Month')\nplt.ylabel('Value')\nplt.show()","cfc2df08":"import seaborn as sns","be92fd68":"sns.set_theme(style=\"darkgrid\")","03fe49a5":"sns.pairplot(d,kind=\"scatter\",hue=\"Value\")\nplt.show()","c0156f71":"sns.pairplot(d,kind=\"scatter\")\nplt.show()","fdd33767":"sns.pairplot(d, kind=\"kde\")\nplt.show()","655b0464":"sns.pairplot(d, kind=\"hist\")","16cfbfb0":"sns.histplot(x=\"Value\",data=d,kde=True,bins=30)","171e8d89":"**Checking the first 5 Rows of the Dataset**","dd700f99":"**Now Reading the Cleaned Dataset to the DataFrame (d)**","0e82b58b":"5 pictures\nbar chart - 2016 - jan to Dec","3e9f7405":"# Checking the Max, min, standard deviation, count, mean, 20%, 75% and 50% of the Column \"Value\"","944169d8":"**Due to the fact that the first Line of the .txt file is just an information but not a data. It was removed by the help of File handling**","20cf145a":"# Now Extracting the days, months and years individually to the respective columns from Date","debc7e56":"# Checking the Unique values of the Columns for Clarification","47ce5484":"*The Value '7' has occured the most in the data set.*","16c55670":"***Here the blue line represents the mean of the Values that has been recorded***","bbb99eb8":"# **Visualization Of The DataSet**","0c5e1d8f":"# From this Graph we can see that the highest has been recorded in the year 2020 ranging from around 5 upto approximately 25.","3796be5f":"**Importing matplotlib module**","5f8b74ac":"The range for the year 2016 is 5 to 10. The range for the year 2017 is below 5 to 5.5. The range for the year 2018 is 5 to 5.5. The range for the year 2019 is between 5 to 10 and the range for the year 2021 is 5 to 10.5.","1b7a61cc":"**Checking the Dataset after Adding the Columns**","8a4c29ba":"# Clearly you can see 2017 is under the mean of Values. Hence its better year of Employment than all other years","9a8e1c45":"# **Reading the Data Set impact-of-covid19-on-unemployment-rate-in-india(Unemployment_Rate_-_Trailing_30_days_D_Rural.txt)**","7bd66d6d":"**Now checking the range of values for each year**","a18ff293":"**Visualization of Date and Values**","710f7d15":"**Checking if the datas are correctly placed**","7e1ae3f7":"**The three Colums are extracted from Date and are added for convenience so that more information can be extracted**","e0ae720d":"**Checking the Number of Columns**","200a7b4e":"# As we can see from the graph that there was a sudden rise of unemployment from the month of April 2020 and the highest is recorded in the month of May","d93d0525":"# From this Graph we can see that the highest has been recorded in the month of 5 i.e May ranging from around 5 upto approximately 25 from the year 2016 to 2021.","922a58d4":"# Inserting 3 new Columns to the Data Set i.e Day, Month and Year","c8739a69":"What we get from this date are-                      \nThere are  total 2053 rows in the Data Set. Ther are 4 Columns (Region, Date, Frequency and Value) with NO NULL VALUES                   \nRegion ----  object                 \nDate  -----  object                           \nFrequency -  object                               \nValue  ----- float64                                \n","f4645f76":"# Detailings of the Data Set","dfc33fa8":"# Checking for Null Values","841a6240":"# **Analysis On the Unemployment Data of India Starting from 2016 to 2021**","7892f852":"**Importing the Modules needed for the Analysis**","c3b5f82d":"*From this we are getting an idea that the Value is peaking around 2020 August or september *"}}