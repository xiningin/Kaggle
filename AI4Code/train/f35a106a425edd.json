{"cell_type":{"30230683":"code","cdd078c8":"code","d36e792f":"code","ff285149":"code","3ced340e":"code","57ff2b7a":"code","c6ac1506":"code","aaacb7da":"code","9b5fe3f1":"code","61859516":"code","2b3454b2":"code","f45c7388":"code","65a34229":"code","0cc06266":"code","a6edb441":"code","6064e17b":"markdown","a9dc3a3d":"markdown","01ac5244":"markdown","5d3f11cd":"markdown","32b379b0":"markdown","38e3dc5a":"markdown","465fa661":"markdown","462fe113":"markdown","3b99b9a4":"markdown"},"source":{"30230683":"import numpy as np\nimport pandas as pd\nimport geopandas as gpd\nfrom keplergl import KeplerGl\n\nimport os\nprint(os.listdir(\"..\/input\/nypd-complaint-data-current-ytd-july-2018\"))\nprint(os.listdir(\"..\/input\/nyc-neighborhoods-data\"))\nprint(os.listdir(\"..\/input\/san-fransisco-open-data-for-building-footprints\"))","cdd078c8":"df = gpd.read_file(\"..\/input\/nypd-complaint-data-current-ytd-july-2018\/NYPD_Complaint_Data_Current_YTD.csv\")\n\ndf['Longitude'] = pd.to_numeric(df['Longitude'], errors='coerce')\ndf['Latitude'] = pd.to_numeric(df['Latitude'], errors='coerce')\n\ngdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.Longitude, df.Latitude)) ## To feed to keplerGl\n\ngdf.head()","d36e792f":"config = {'version': 'v1', 'config': {'visState': {'filters': [], 'layers': [{'id': '0xm03v7', 'type': 'point', 'config': {'dataId': 'crimes', 'label': 'Point', 'color': [18, 147, 154], 'columns': {'lat': 'Latitude', 'lng': 'Longitude', 'altitude': None}, 'isVisible': True, 'visConfig': {'radius': 14.5, 'fixedRadius': False, 'opacity': 0.19, 'outline': False, 'thickness': 2, 'strokeColor': None, 'colorRange': {'name': 'ColorBrewer Set1-6', 'type': 'qualitative', 'category': 'ColorBrewer', 'colors': ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33'], 'reversed': False}, 'strokeColorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'radiusRange': [0, 50], 'filled': True}, 'textLabel': [{'field': None, 'color': [255, 255, 255], 'size': 18, 'offset': [0, 0], 'anchor': 'start', 'alignment': 'center'}]}, 'visualChannels': {'colorField': {'name': 'SUSP_SEX', 'type': 'string'}, 'colorScale': 'ordinal', 'strokeColorField': None, 'strokeColorScale': 'quantile', 'sizeField': None, 'sizeScale': 'linear'}}, {'id': '280ug18', 'type': 'geojson', 'config': {'dataId': 'crimes', 'label': 'crimes', 'color': [221, 178, 124], 'columns': {'geojson': 'Lat_Lon'}, 'isVisible': True, 'visConfig': {'opacity': 0.8, 'thickness': 0.5, 'strokeColor': None, 'colorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'strokeColorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'radius': 10, 'sizeRange': [0, 10], 'radiusRange': [0, 50], 'heightRange': [0, 500], 'elevationScale': 5, 'stroked': True, 'filled': False, 'enable3d': False, 'wireframe': False}, 'textLabel': [{'field': None, 'color': [255, 255, 255], 'size': 18, 'offset': [0, 0], 'anchor': 'start', 'alignment': 'center'}]}, 'visualChannels': {'colorField': None, 'colorScale': 'quantile', 'sizeField': None, 'sizeScale': 'linear', 'strokeColorField': None, 'strokeColorScale': 'quantile', 'heightField': None, 'heightScale': 'linear', 'radiusField': None, 'radiusScale': 'linear'}}, {'id': 'y4fjza', 'type': 'geojson', 'config': {'dataId': 'crimes', 'label': 'crimes', 'color': [136, 87, 44], 'columns': {'geojson': 'geometry'}, 'isVisible': True, 'visConfig': {'opacity': 0.8, 'thickness': 0.5, 'strokeColor': None, 'colorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'strokeColorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'radius': 10, 'sizeRange': [0, 10], 'radiusRange': [0, 50], 'heightRange': [0, 500], 'elevationScale': 5, 'stroked': False, 'filled': True, 'enable3d': False, 'wireframe': False}, 'textLabel': [{'field': None, 'color': [255, 255, 255], 'size': 18, 'offset': [0, 0], 'anchor': 'start', 'alignment': 'center'}]}, 'visualChannels': {'colorField': None, 'colorScale': 'quantile', 'sizeField': None, 'sizeScale': 'linear', 'strokeColorField': None, 'strokeColorScale': 'quantile', 'heightField': None, 'heightScale': 'linear', 'radiusField': None, 'radiusScale': 'linear'}}], 'interactionConfig': {'tooltip': {'fieldsToShow': {'crimes': ['CMPLNT_NUM', 'ADDR_PCT_CD', 'BORO_NM', 'CMPLNT_FR_DT', 'CMPLNT_FR_TM']}, 'enabled': True}, 'brush': {'size': 0.5, 'enabled': False}}, 'layerBlending': 'normal', 'splitMaps': []}, 'mapState': {'bearing': 0, 'dragRotate': False, 'latitude': 40.710948277451024, 'longitude': -73.95360501205884, 'pitch': 0, 'zoom': 13.19223566766781, 'isSplit': False}, 'mapStyle': {'styleType': 'dark', 'topLayerGroups': {}, 'visibleLayerGroups': {'label': True, 'road': True, 'border': False, 'building': True, 'water': True, 'land': True, '3d building': False}, 'mapStyles': {}}}}\n\nmap_pointChart = KeplerGl(data={'crimes': gdf}, height=600, width=800)\nmap_pointChart.config = config\nmap_pointChart","ff285149":"config = {'version': 'v1', 'config': {'visState': {'filters': [], 'layers': [{'id': 'bxpdchi', 'type': 'hexagon', 'config': {'dataId': 'crimes', 'label': 'crimes', 'color': [183, 136, 94], 'columns': {'lat': 'Latitude', 'lng': 'Longitude'}, 'isVisible': True, 'visConfig': {'opacity': 0.8, 'worldUnitSize': 1, 'resolution': 8, 'colorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#FFC300', '#F1920E', '#E3611C', '#C70039', '#900C3F', '#5A1846'], 'reversed': True}, 'coverage': 1, 'sizeRange': [0, 500], 'percentile': [0, 100], 'elevationPercentile': [0, 100], 'elevationScale': 5, 'colorAggregation': 'count', 'sizeAggregation': 'count', 'enable3d': False}, 'textLabel': [{'field': None, 'color': [255, 255, 255], 'size': 18, 'offset': [0, 0], 'anchor': 'start', 'alignment': 'center'}]}, 'visualChannels': {'colorField': None, 'colorScale': 'quantile', 'sizeField': None, 'sizeScale': 'linear'}}], 'interactionConfig': {'tooltip': {'fieldsToShow': {'crimes': ['CMPLNT_NUM', 'ADDR_PCT_CD', 'BORO_NM', 'CMPLNT_FR_DT', 'CMPLNT_FR_TM']}, 'enabled': True}, 'brush': {'size': 0.5, 'enabled': False}}, 'layerBlending': 'normal', 'splitMaps': []}, 'mapState': {'bearing': 0, 'dragRotate': False, 'latitude': 40.69948531525293, 'longitude': -74.1720210730601, 'pitch': 0, 'zoom': 9.355823249249143, 'isSplit': False}, 'mapStyle': {'styleType': 'dark', 'topLayerGroups': {}, 'visibleLayerGroups': {'label': True, 'road': True, 'border': False, 'building': True, 'water': True, 'land': True, '3d building': False}, 'mapStyles': {}}}}\n\nmap_Hexogon = KeplerGl(data={'crimes': gdf}, height=600, width=800)\nmap_Hexogon.config = config\nmap_Hexogon","3ced340e":"config = {'version': 'v1', 'config': {'visState': {'filters': [{'dataId': 'crimes', 'id': 'mprnycc1o', 'name': 'CMPLNT_FR_TM', 'type': 'timeRange', 'value': [1585483170000, 1585485990000], 'enlarged': True, 'plotType': 'histogram', 'yAxis': None}], 'layers': [{'id': 't6rsxg', 'type': 'point', 'config': {'dataId': 'crimes', 'label': 'Point', 'color': [255, 254, 230], 'columns': {'lat': 'Latitude', 'lng': 'Longitude', 'altitude': None}, 'isVisible': True, 'visConfig': {'radius': 0.3, 'fixedRadius': False, 'opacity': 0.8, 'outline': False, 'thickness': 2, 'strokeColor': None, 'colorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'strokeColorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'radiusRange': [0, 50], 'filled': True}, 'textLabel': [{'field': None, 'color': [255, 255, 255], 'size': 18, 'offset': [0, 0], 'anchor': 'start', 'alignment': 'center'}]}, 'visualChannels': {'colorField': None, 'colorScale': 'quantile', 'strokeColorField': None, 'strokeColorScale': 'quantile', 'sizeField': None, 'sizeScale': 'linear'}}, {'id': 'b6l82wo', 'type': 'point', 'config': {'dataId': 'crimes', 'label': 'crimes', 'color': [255, 254, 230], 'columns': {'lat': 'Latitude', 'lng': 'Longitude', 'altitude': None}, 'isVisible': True, 'visConfig': {'radius': 3.8, 'fixedRadius': False, 'opacity': 0.8, 'outline': False, 'thickness': 2, 'strokeColor': None, 'colorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'strokeColorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'radiusRange': [0, 50], 'filled': True}, 'textLabel': [{'field': None, 'color': [255, 255, 255], 'size': 18, 'offset': [0, 0], 'anchor': 'start', 'alignment': 'center'}]}, 'visualChannels': {'colorField': None, 'colorScale': 'quantile', 'strokeColorField': None, 'strokeColorScale': 'quantile', 'sizeField': None, 'sizeScale': 'linear'}}], 'interactionConfig': {'tooltip': {'fieldsToShow': {'crimes': ['CMPLNT_NUM', 'ADDR_PCT_CD', 'BORO_NM', 'CMPLNT_FR_DT', 'CMPLNT_FR_TM']}, 'enabled': True}, 'brush': {'size': 0.5, 'enabled': False}}, 'layerBlending': 'normal', 'splitMaps': []}, 'mapState': {'bearing': 0, 'dragRotate': False, 'latitude': 40.71327133151427, 'longitude': -74.1913923525195, 'pitch': 0, 'zoom': 8.715569801244058, 'isSplit': False}, 'mapStyle': {'styleType': 'dark', 'topLayerGroups': {}, 'visibleLayerGroups': {'label': True, 'road': True, 'border': False, 'building': True, 'water': True, 'land': True, '3d building': False}, 'mapStyles': {}}}}\n\nmap_TimeSeriesFiltering = KeplerGl(data={'crimes': gdf}, height=600, width=800)\nmap_TimeSeriesFiltering.config = config\nmap_TimeSeriesFiltering","57ff2b7a":"def count_incidents_neighborhood(data, neighborhoods):\n    # spatial join and group by to get count of incidents in each poneighbourhood \n    joined = gpd.sjoin(gdf, neighborhoods, op='within')\n    grouped = joined.groupby('neighborhood').size()\n    df = grouped.to_frame().reset_index()\n    df.columns = ['neighborhood', 'count']\n    merged = neighborhoods.merge(df, on='neighborhood', how='outer')\n    merged['count'].fillna(0,inplace=True)\n    merged['count'] = merged['count'].astype(int)\n    return merged","c6ac1506":"# 3 - Neighbourhoods\ngeojson_file = '..\/input\/nyc-neighborhoods-data\/newyork_neighborhoods.geojson'\nneighborhoods = gpd.read_file(geojson_file)\n\nneighborhoods.head()","aaacb7da":"!conda install -y -c conda-forge\/label\/cf202003 rtree","9b5fe3f1":"merged = count_incidents_neighborhood(gdf, neighborhoods)\nmerged.head()","61859516":"config = {'version': 'v1', 'config': {'visState': {'filters': [], 'layers': [{'id': '3qw013f', 'type': 'geojson', 'config': {'dataId': 'NeighborhoodCrimes', 'label': 'NeighborhoodCrimes', 'color': [18, 147, 154], 'columns': {'geojson': 'geometry'}, 'isVisible': True, 'visConfig': {'opacity': 0.5, 'thickness': 0.5, 'strokeColor': [221, 178, 124], 'colorRange': {'name': 'ColorBrewer PuBu-6', 'type': 'sequential', 'category': 'ColorBrewer', 'colors': ['#f1eef6', '#d0d1e6', '#a6bddb', '#74a9cf', '#2b8cbe', '#045a8d'], 'reversed': False}, 'strokeColorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'radius': 10, 'sizeRange': [0, 10], 'radiusRange': [0, 50], 'heightRange': [0, 500], 'elevationScale': 5, 'stroked': True, 'filled': True, 'enable3d': False, 'wireframe': False}, 'textLabel': [{'field': None, 'color': [255, 255, 255], 'size': 18, 'offset': [0, 0], 'anchor': 'start', 'alignment': 'center'}]}, 'visualChannels': {'colorField': {'name': 'count', 'type': 'integer'}, 'colorScale': 'quantile', 'sizeField': None, 'sizeScale': 'linear', 'strokeColorField': None, 'strokeColorScale': 'quantile', 'heightField': None, 'heightScale': 'linear', 'radiusField': None, 'radiusScale': 'linear'}}], 'interactionConfig': {'tooltip': {'fieldsToShow': {'NeighborhoodCrimes': ['neighborhood', 'boroughCode', 'borough', '@id', 'count']}, 'enabled': True}, 'brush': {'size': 0.5, 'enabled': False}}, 'layerBlending': 'normal', 'splitMaps': []}, 'mapState': {'bearing': 0, 'dragRotate': False, 'latitude': 40.711662196251034, 'longitude': -74.02936469973493, 'pitch': 0, 'zoom': 9.451941083083048, 'isSplit': False}, 'mapStyle': {'styleType': 'dark', 'topLayerGroups': {}, 'visibleLayerGroups': {'label': True, 'road': True, 'border': False, 'building': True, 'water': True, 'land': True, '3d building': False}, 'mapStyles': {}}}}\n\nmap_NeighnorHoodCrimes = KeplerGl(data={'NeighborhoodCrimes': merged}, height=600, width=800)\nmap_NeighnorHoodCrimes.config = config\nmap_NeighnorHoodCrimes","2b3454b2":"df = gpd.read_file(\"..\/input\/san-fransisco-open-data-for-building-footprints\/Building_Footprints.csv\")\ndf.head()","f45c7388":"from shapely import wkt\n\ndf['shape'] = df['shape'].apply(wkt.loads)","65a34229":"# df['Longitude'] = pd.to_numeric(df['Longitude'], errors='coerce')\n# df['Latitude'] = pd.to_numeric(df['Latitude'], errors='coerce')\n# gdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.Longitude, df.Latitude)) ## To feed to keplerGl\n\nbuildings = gpd.GeoDataFrame(df, geometry='shape')\nbuildings.head()","0cc06266":"config = {'version': 'v1', 'config': {'visState': {'filters': [], 'layers': [{'id': 'noq9dns', 'type': 'geojson', 'config': {'dataId': 'Buildings', 'label': 'Buildings', 'color': [18, 147, 154], 'columns': {'geojson': 'shape'}, 'isVisible': True, 'visConfig': {'opacity': 0.8, 'thickness': 0.5, 'strokeColor': [221, 178, 124], 'colorRange': {'name': 'Ice And Fire', 'type': 'diverging', 'category': 'Uber', 'colors': ['#0198BD', '#49E3CE', '#E8FEB5', '#FEEDB1', '#FEAD54', '#D50255'], 'reversed': False}, 'strokeColorRange': {'name': 'Global Warming', 'type': 'sequential', 'category': 'Uber', 'colors': ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']}, 'radius': 10, 'sizeRange': [0, 10], 'radiusRange': [0, 50], 'heightRange': [0, 500], 'elevationScale': 3, 'stroked': False, 'filled': True, 'enable3d': True, 'wireframe': False}, 'textLabel': [{'field': None, 'color': [255, 255, 255], 'size': 18, 'offset': [0, 0], 'anchor': 'start', 'alignment': 'center'}]}, 'visualChannels': {'colorField': {'name': 'hgt_median_m', 'type': 'real'}, 'colorScale': 'quantile', 'sizeField': None, 'sizeScale': 'linear', 'strokeColorField': None, 'strokeColorScale': 'quantile', 'heightField': {'name': 'hgt_median_m', 'type': 'real'}, 'heightScale': 'linear', 'radiusField': None, 'radiusScale': 'linear'}}], 'interactionConfig': {'tooltip': {'fieldsToShow': {'Buildings': ['sf16_bldgid', 'area_id', 'mblr', 'p2010_name', 'p2010_zminn88ft']}, 'enabled': True}, 'brush': {'size': 0.5, 'enabled': False}}, 'layerBlending': 'normal', 'splitMaps': []}, 'mapState': {'bearing': 24, 'dragRotate': True, 'latitude': 37.78074167677063, 'longitude': -122.43457979576556, 'pitch': 50, 'zoom': 12.15693360108208, 'isSplit': False}, 'mapStyle': {'styleType': 'dark', 'topLayerGroups': {}, 'visibleLayerGroups': {'label': True, 'road': True, 'border': False, 'building': True, 'water': True, 'land': True, '3d building': False}, 'mapStyles': {}}}}\n\nmap_3DBuildings= KeplerGl(data={'Buildings': buildings[:10000]}, height=600, width=800)\nmap_3DBuildings.config = config\nmap_3DBuildings","a6edb441":"# Save map_3DBuildings config to a file\n# This utility function was used to save the map config, tuned via interactive map at development time.\nwith open('map_3DBuildings.py', 'w') as f:\n   f.write('config = {}'.format(map_3DBuildings.config))","6064e17b":"**Demonstrating the use of spatial join to generate more interesting graphs**","a9dc3a3d":"**Code used to save the config after adjesting interactively**","01ac5244":"**Demostrating the use of 3D visualizations using heights**","5d3f11cd":"**Demonstrating the use of Hexagon**","32b379b0":"**Demonstraging the use of Filters to generate time series**","38e3dc5a":"**Load geoJson data**","465fa661":"**Introduction**   \n\nkepler.gl from Ubsr is used to demostrate interactive geospatial data visualizations.    \nCopy this kernel to use for your work. This is run on a custom docketr image to get all the libraries needed.   \n\n> [https:\/\/kepler.gl\/](https:\/\/kepler.gl\/)\n\nWe use the following medium article for demostrating this, but it has the limitation of not allowing you to tweak inline since all the things are GIFs.    \n\n> https:\/\/towardsdatascience.com\/kepler-gl-jupyter-notebooks-geospatial-data-visualization-with-ubers-opensource-kepler-gl-b1c2423d066f    ","462fe113":"**Import data**","3b99b9a4":"**Demonstrating the use of Points with coloring based on a column**"}}