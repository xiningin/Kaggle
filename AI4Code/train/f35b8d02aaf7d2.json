{"cell_type":{"2f6bc35a":"code","984c8574":"code","8d5e753c":"code","0ad1245a":"code","8c8ea673":"code","3728ac03":"code","d7999e28":"code","ecfe6d68":"code","c06de524":"code","c394f676":"code","460aeebc":"code","2b22536d":"code","0e17074d":"code","cae2324a":"code","4389864d":"code","f712444a":"code","20f39d70":"code","7d4b8782":"code","fcc8d0a4":"code","4ad11fe9":"code","c6243916":"code","fa0f5a3d":"code","a7228e7a":"code","16211de2":"code","c8aeb3a2":"code","4ef495d6":"markdown","83a7e1ea":"markdown","397461c5":"markdown","cd12c10c":"markdown","4e6e234b":"markdown","b257eceb":"markdown","003fa403":"markdown","61035f69":"markdown","5bc9f03d":"markdown","f5afd018":"markdown","396cd32c":"markdown","c8ea0b30":"markdown","ffdc2782":"markdown","38c39ea7":"markdown","df9ffe98":"markdown","7d191f11":"markdown","d4963ad9":"markdown","00a6566a":"markdown","d7b73268":"markdown","91ef29c1":"markdown","64482922":"markdown","e24281b5":"markdown","dc44ebef":"markdown","d082dccb":"markdown","0ad97a12":"markdown","7a63319a":"markdown","ffeafb43":"markdown","1d7b739e":"markdown","44659e6f":"markdown"},"source":{"2f6bc35a":"from matplotlib import pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport pandasql as psql","984c8574":"%matplotlib inline","8d5e753c":"# Load the 12 csv files into dataframes:\ndf1 = pd.read_table(\"\/kaggle\/input\/cyclistic-2020-2021\/cyclistic_2020_2021\/202012-divvy-tripdata.csv\", delimiter=\",\")\ndf2 = pd.read_table(\"\/kaggle\/input\/cyclistic-2020-2021\/cyclistic_2020_2021\/202101-divvy-tripdata.csv\", delimiter=\",\")\ndf3 = pd.read_table(\"\/kaggle\/input\/cyclistic-2020-2021\/cyclistic_2020_2021\/202102-divvy-tripdata.csv\", delimiter=\",\")\ndf4 = pd.read_table(\"\/kaggle\/input\/cyclistic-2020-2021\/cyclistic_2020_2021\/202103-divvy-tripdata.csv\", delimiter=\",\")\ndf5 = pd.read_table(\"\/kaggle\/input\/cyclistic-2020-2021\/cyclistic_2020_2021\/202104-divvy-tripdata.csv\", delimiter=\",\")\ndf6 = pd.read_table(\"\/kaggle\/input\/cyclistic-2020-2021\/cyclistic_2020_2021\/202105-divvy-tripdata.csv\", delimiter=\",\")\ndf7 = pd.read_table(\"\/kaggle\/input\/cyclistic-2020-2021\/cyclistic_2020_2021\/202106-divvy-tripdata.csv\", delimiter=\",\")\ndf8 = pd.read_table(\"\/kaggle\/input\/cyclistic-2020-2021\/cyclistic_2020_2021\/202107-divvy-tripdata.csv\", delimiter=\",\")\ndf9 = pd.read_table(\"\/kaggle\/input\/cyclistic-2020-2021\/cyclistic_2020_2021\/202108-divvy-tripdata.csv\", delimiter=\",\")\ndf10 = pd.read_table(\"\/kaggle\/input\/cyclistic-2020-2021\/cyclistic_2020_2021\/202109-divvy-tripdata.csv\", delimiter=\",\")\ndf11 = pd.read_table(\"\/kaggle\/input\/cyclistic-2020-2021\/cyclistic_2020_2021\/202110-divvy-tripdata.csv\", delimiter=\",\")\ndf12 = pd.read_table(\"\/kaggle\/input\/cyclistic-2020-2021\/cyclistic_2020_2021\/202111-divvy-tripdata.csv\", delimiter=\",\")\n\n# Combine all dataframes into a single dataframe\nframes = [df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11, df12]\ndf = pd.concat(frames)","0ad1245a":"# Determine the number of NaN values in each column:\ndf.isnull().sum(axis = 0)","8c8ea673":"# Create a separate data frame for geo analysis\ndf_geo = df","3728ac03":"# Drop all rows with NaN as well columns that won't be used in the geo analysis\ndf_geo = df_geo.drop(['start_station_id', 'end_station_id', 'end_station_name', \n                      'end_lat', 'end_lng', 'rideable_type', 'started_at', 'ended_at'], axis=1)\ndf_geo = df_geo.dropna(axis=0)","d7999e28":"# Find avg lat\/long values for each station\n# Note: on the first pass I noticed one of the station names was \"351\" so I omitted those records\nstart_avg_coord = psql.sqldf('''SELECT start_station_name, \n                                       AVG(start_lat) AS avg_start_lat, \n                                       AVG(start_lng) AS avg_start_long \n                                FROM df_geo \n                                WHERE start_station_name != 351 \n                                GROUP BY start_station_name''')","ecfe6d68":"# Join the averaged coordinates to the original df_geo dataframe\ndf_geo_2 = psql.sqldf('''SELECT df_geo.*, \n                                start_avg_coord.avg_start_lat, \n                                start_avg_coord.avg_start_long \n                         FROM df_geo \n                         JOIN start_avg_coord \n                         ON df_geo.start_station_name = start_avg_coord.start_station_name \n                         ORDER BY start_station_name ASC\n                         ''')\n\n# Drop the old lat\/long columns\ndf_geo_2 = df_geo_2.drop(['start_lat', 'start_lng'], axis=1)\n\n# Check for null values to confirm that the join worked correctly\ndf_geo_2.isnull().sum(axis = 0)","c06de524":"df_geo_2.info()","c394f676":"# Export df_geo_2 as a csv\ndf_geo_2.to_csv('cyclistic_geo_data.csv', index=False)","460aeebc":"# Remove station and geo information:\ndf = df.drop(['start_station_id', 'end_station_id', \n              'start_lat', 'start_lng', 'end_lat', \n              'end_lng'], axis=1)","2b22536d":"# Convert the started_at and ended_at columns to datetime:\ndf[\"started_at\"] = pd.to_datetime(df[\"started_at\"])\ndf[\"ended_at\"] = pd.to_datetime(df[\"ended_at\"])\n\n# Add a column with the difference between start and end time\ndf['ride_length_minutes'] = (df['ended_at'] - df['started_at']).dt.total_seconds() \/ 60","0e17074d":"# Check the unique values in the rideable_type and member_casual columns to check for erroneous values:\nprint(df.rideable_type.unique())\nprint(df.member_casual.unique())","cae2324a":"# View the dataframe with only docked_bike data:\ndf_docked = df[df.rideable_type == 'docked_bike']\ndf_docked.head(10)","4389864d":"# Drop the rows containing docked_bike data:\ndf = df[df['rideable_type'] != 'docked_bike']\n\n# Check that the docked_bike entries were removed:\nprint(f\"Unique values in rideable_type: {df.rideable_type.unique()}\")\n\n# Check for negative or zero ride lengths:\nprint(f\"Ride lengths <= 0: {(df.ride_length_minutes <= 0).sum()}\")\n\n# Drop rows with negative or zero ride lengths:\ndf = df.drop(df[df.ride_length_minutes <= 0].index)\n\n# Confirm that the rows were removed:\nprint(f\"Ride lengths <= 0: {(df.ride_length_minutes <= 0).sum()}\")","f712444a":"# Determine interquartile range:\nQ1 = np.quantile(df[\"ride_length_minutes\"], 0.25)\nQ3 = np.quantile(df[\"ride_length_minutes\"], 0.75)\nIQR = Q3 - Q1\n\n# Determine upper limit of non-outlier values:\nupper_limit = Q3 + 1.5 * IQR\n\nprint(f\"Ride lengths longer than {upper_limit} minutes are outliers.\")\n\n# Check for rides that are longer than upper limit:\nn = df[df[\"ride_length_minutes\"] < upper_limit].count()\nprint(f\"\\n\\nRide lengths less than {upper_limit} minutes: {n[1]}\")\n\nnum_rows = df.shape[0]\nprint(f\"\\nTotal number of rows: {num_rows}\")\nprint(f\"\\n\\n{(n[1] \/ num_rows)*100}% of the rides are shorter than {upper_limit} minutes.\")\n\n# Remove records with ride lengths > upper limit\ndf = df[df.ride_length_minutes <= upper_limit]","20f39d70":"# Add columns with day of week and month from start time:\ndf['start_day'] = df['started_at'].dt.day_name()\ndf['start_month'] = df['started_at'].dt.month_name()","7d4b8782":"# Calculate summary statistics:\ndf[['rideable_type', 'member_casual', 'ride_length_minutes', \n    'start_day', 'start_month']].describe(include = 'all')","fcc8d0a4":"# Split the dataframe into member and casual:\ndf_mem = df[df['member_casual'] == 'member']\ndf_cas = df[df['member_casual'] == 'casual']","4ad11fe9":"print(\"Member:\")\ndisplay(df_mem[['rideable_type', 'ride_length_minutes', \n                'start_day', 'start_month']].describe(include = 'all'))\nprint(\"\\n\" + \"Casual:\")\ndf_cas[['rideable_type', 'ride_length_minutes', \n        'start_day', 'start_month']].describe(include = 'all')","c6243916":"## Average Ride Length:\n# Create a pivot table containing rider type, start day, and avg ride length:\ndays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ndf_day = df.groupby(['start_day', 'member_casual'], \n                    as_index=False)['ride_length_minutes'].mean()\ndf_day = df_day.pivot('start_day', 'member_casual', 'ride_length_minutes').loc[days]\n\n# Create the same pivot table for start month instead of day:\nmonths = ['December', 'January', 'February', 'March', 'April', 'May', \n         'June', 'July', 'August', 'September', 'October', 'November']\ndf_mon = df.groupby(['start_month', 'member_casual'], \n                    as_index=False)['ride_length_minutes'].mean()\ndf_mon = df_mon.pivot('start_month', 'member_casual', 'ride_length_minutes').loc[months]\n\n\n## Number of Rides Started:\n# Create a pivot table containing rider type, start day, and total rides:\ndf_day_2 = df.groupby(['start_day', 'member_casual'], \n                      as_index=False)['ride_length_minutes'].count()\ndf_day_2 = df_day_2.pivot('start_day', 'member_casual', 'ride_length_minutes').loc[days]\n\n# Create the same pivot table for start month instead of day:\ndf_mon_2 = df.groupby(['start_month', 'member_casual'], \n                      as_index=False)['ride_length_minutes'].count()\ndf_mon_2 = df_mon_2.pivot('start_month', 'member_casual', 'ride_length_minutes').loc[months]","fa0f5a3d":"## Plot the daily data\nfig, ax = plt.subplots(1,2, figsize=(18, 6))\nplt.subplots_adjust(wspace = 0.3)\nplt.style.use('default')\n\ndf_day.plot(kind='bar', ax=ax[0])\nax[0].set_title(\"Average Ride Length on Each Day\\n2020-2021\", fontweight=\"bold\", fontsize=18)\nax[0].set_ylabel('Avg Ride Length (min)', fontsize=14)\n\ndf_day_2.plot(kind='bar', ax=ax[1])\nax[1].set_title(\"Total Number of Rentals on Each Day\\n2020-2021\", fontweight=\"bold\", fontsize=18)\nax[1].set_ylabel('Number of Rentals', fontsize=14)\n\nfor ax in fig.axes:\n    ax.tick_params(axis='x', labelrotation=45)\n    ax.set_xlabel('')\n    ax.legend(title='')","a7228e7a":"## Plot the monthly data\nfig2, ax = plt.subplots(1,2, figsize=(18, 6))\nplt.subplots_adjust(wspace = 0.3)\nplt.style.use('default')\n\ndf_mon.plot(kind='line', ax=ax[0])\nax[0].set_title(\"Monthly Average Ride Length\\n2020-2021\", fontweight=\"bold\", fontsize=16)\nax[0].set_ylabel('Avg Ride Length (min)', fontsize=14)\n\n\ndf_mon_2.plot(kind='line', ax=ax[1])\nax[1].set_title(\"Total Number of Rentals Per Month\\n2020-2021\", fontweight=\"bold\", fontsize=16)\nax[1].set_ylabel('Number of Rentals', fontsize=14)\n\n\nfor ax in fig2.axes:\n    ax.tick_params(axis='x', labelrotation=45)\n    ax.set_xlabel('')\n    ax.legend(title='')\n    ax.set_xticks(np.arange(len(months)))\n    ax.set_xticklabels(months)","16211de2":"# Create a pivot table from the df_geo dataset showing number of rides from each station:\ndf_geo_3 = df_geo_2[df_geo_2['member_casual'] == 'casual']\ndf_geo_3 = df_geo_3.groupby(['start_station_name'], as_index=False)['ride_id'].count()\ndf_geo_3 = df_geo_3.rename(columns={'ride_id': 'number_of_rides'})\ndf_geo_3 = df_geo_3.sort_values(by=['number_of_rides'], ascending=False)\nprint(\"Casual Riders' Top 10 Rental Stations:\")\ndf_geo_3.head(10)","c8aeb3a2":"%%HTML\n<div class='tableauPlaceholder' id='viz1641508991457' style='position: relative'><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='cyclistic_map_16405781372900&#47;Dashboard1' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en-US' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1641508991457');                    var vizElement = divElement.getElementsByTagName('object')[0];                    if ( divElement.offsetWidth > 800 ) { vizElement.style.minWidth='400px';vizElement.style.maxWidth='1100px';vizElement.style.width='100%';vizElement.style.minHeight='587px';vizElement.style.maxHeight='887px';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.minWidth='400px';vizElement.style.maxWidth='1100px';vizElement.style.width='100%';vizElement.style.minHeight='587px';vizElement.style.maxHeight='887px';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';} else { vizElement.style.width='100%';vizElement.style.height='777px';}                     var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","4ef495d6":"## Preparing the main dataset\nThis dataset will include everything but the geographic data from the df_geo dataset. First, I'm going to remove data that won't be need for this part of the analysis.","83a7e1ea":"<br>\nFor the final part of the analysis, I am going to create a table containing the top 10 rental stations for casual riders, and add my plot of the geographic data from Tableau.","397461c5":"These graphs represent the total number of rentals at all of the stations for members and casual riders. There isn't a dramatic difference in rental location between members and casual riders, but there appears to be a more even distribution for member rentals, whereas casual rentals are more concentrated around downtown and the shore of Lake Michigan. The most popular rental location for casual riders is \"Streeter Dr & Grand Ave\". Looking at Google Maps, it appears to be a very touristy area with parks, museums and various other attractions. This further supports the idea that members tend to be commuters, and casual riders tend to ride recreationally.","cd12c10c":"Around 93.1% of the rides are under 41.575 minutes, so removing outliers doesn't significantly reduce the size of the dataset.","4e6e234b":"From the summary statistics we can see a few things:\n* The most popular bike type is the classic bike\n* Members account for about 60% of all riders\n* The mean ride length is about 13 minutes\n* The most popular day to rent a bike is Saturday\n* The most popular month to rent a bike is July<br>\n\nSo far, the results look pretty reasonable. The only statistic that surprises me is the number of members. I did not expect so many riders to be members, but given that 30% of riders use Cyclistic bikes to commute it makes sense for many of them to be members.<br>\n\nNext, I'm going to calculate statistics for members and casual riders separately.","b257eceb":"Next, I'll calculate summary statistics to get an idea of overall trends in the dataset.","003fa403":"## About Cyclistic\nCyclistic is a bike-sharing program based in Chicago. Since 2016, its fleet has grown to 5,824 bicycles and 692 docking stations across the city. The bicycles are geotracked and can be picked up and dropped off at any Cyclistic docking station.<br><br>\n\nPricing plans include:\n* single-ride pass\n* full-day pass\n* annual membership<br>\n\nRiders who purchase single-ride and full-day passes are considered \"casual\" riders, and riders who purchase annual memberships are considered \"members\". About 30% of riders use Cyclistic bikes to commute and the rest ride for leisure.<br><br>\n\nThe data for this project is made available by Motivate International Inc. under [this](https:\/\/ride.divvybikes.com\/data-license-agreement) Divvy Bikes license. This is a publicly available dataset and it does not include riders' personally identifiable information.<br><br>","61035f69":"At this point, the geographic dataset is ready to export as a csv. I will use that dataset to create a visualization in Tableau.","5bc9f03d":"For this case study I am a junior analyst working with the marketing team at Cyclistic, a fictional bike-sharing company. Lily Moreno, the director of marketing and my manager, believes that the key to future growth lies in maximizing the number of annual members. Rather than targeting new customers, Moreno believes we will have more success convincing casual riders to buy annual memberships. My task is to analyze the past year of bike-sharing data, identify trends, and provide recommendations based on my findings.","f5afd018":"# Data Cleaning and Preparation\nThe data was provided in 12 sets, one for each month from December, 2020 through November, 2021. Due to the large size of the dataset (over 5 million records) I am opting to use the Pandas Python Library for most of the cleaning and analysis.<br> \n\nFirst, I will concatenate the monthly datasets into a single dataframe.","396cd32c":"Next I'm going to convert the started_at and ended_at columns to datetime and create new columns based on the datetime data.","c8ea0b30":"# Analysis\n\nTo begin the analysis, I will work with the main part of the dataset including bike type, start and end times.","ffdc2782":"These plots show the same data aggregated monthly instead of weekly.<br>\n\nThe average monthly ride lengths follow similar trends, but similar to the weekly data, casual riders ride for longer on average than members. Ride lengths tend to be shorter in the winter and longer in the summer with a sharp increase in ride length around February-March for both types of riders. For casual riders, there is a peak in ride lengths around May.<br>\n\nThe number of rentals for members and casual riders also follow similar trends, but members tend to rent more bikes per month than casual riders. The number of rentals for casual riders peaks in July, but for members the number of rentals stays high from June-October. For both types of rider, number of rentals is lowest in the winter. Chicago is known for having relatively harsh winters, so it makes sense that people rent fewer bikes during that time. The rise and fall in bike rentals is slightly more gradual for members and the number stays higher for longer, whereas casual bike rentals peak in July and immediately start to fall again.","38c39ea7":"## Preparing the df_geo dataset\nFirst, I am going to prepare the geographic dataset for analysis and visualization in Tableau. I decided that the start station data is more important than the end station data for this analyis, so I will remove any data that doesn't pertain to start station locations and rider type in the df_geo dataframe.","df9ffe98":"A considerable amount of station data is missing, as is some of the lat\/long data. One option would be to fill in the station labels based on their coordinates since much fewer coordinates are missing than labels, but the lat\/long data varies slightly for each station depending on where the bike was picked up\/ dropped off at that station. This makes the process of adding labels quite difficult. Instead, if I make the assumption that the missing data is evenly distributed around the city, it is safe to remove records with missing geographic data as the missing data only accounts for around 11 percent of the dataset. Because I would also be removing useful data, I am opting to split the data into two dataframes, one for analysis of datetime and bike type, and another for analysis of geographic data. This will make each dataset smaller, easier to work with, and reduce load times.","7d191f11":"Based on the docked_bike data, it looks like docked bikes are removed from the docking station for varying amounts of time and returned to the same station. I can't find any information about these bikes in the documentation, so I am going to assume these are bikes taken out for maintenance\/ inspection. Based on this assumption I will remove these records from the dataframe becasue they are not representative of the riding habits of actual customers.<br>\n\nAdditionally, I will check for ride lengths that are less than or equal to zero, because a ride length less than zero is impossible and a ride length of zero can't represent an actual ride.","d4963ad9":"These statistics tell a different story:<br>\n\n* Classic bikes are more popular than electric bikes for both members and casual riders\n* The mean ride length for members is about 12 minutes, but for causal riders it is about 15 minutes\n* Members are more likely to rent on Tuesday, whereas casual riders are more likely to rent on Saturday\n* Members are more likely to rent in September, but casual riders are more likely to rent in July<br>\n\nBased on the average start days and rides times it suggests that members are more likely to be commuters, whereas casual riders are renting bikes in their off-time.","00a6566a":"<img style=\"-webkit-user-select: none;margin: auto;background-color: hsl(0, 0%, 90%);transition: background-color 300ms;\" src=\"https:\/\/raw.githubusercontent.com\/labwilliam\/data_analysis_projects\/main\/cyclistic_bike_share\/scripts\/logo.png\" width=200 height=200 align=\"left\">","d7b73268":"First, I'll add another column with the day and month that a ride was started.","91ef29c1":"<br>","64482922":"# Findings\nBased on ride length, number of rentals, and rental location data, I think it is safe to assume that members are more likely to be commuters than casual riders. Generally, I would expect commuters' rides to be shorter and more consistent throughout the week than recreational riders. Member ride lengths are relatively constant throughout the work week, and members go for shorter rides on average than casual riders. Members also rent bikes considerably more Monday through Friday. Additionally, I would expect commuters' riding habits to be less affected by seasons. As expected, number of rentals by members takes longer to decrease before winter than those of casual riders. Furthermore, casual riders tend to rent bikes in the more touristy areas of Chicago which suggests that they are casual riders, whereas members tend to rent bikes throughout the city. As a result, I think the most effective way to convince casual riders to buy memberships is to convince them to use Cyclistic bikes to commute to work.<br><br>\n\nSimilarities between members and casual riders include:\n* Longer rides on weekends and warmer months\n* More rentals on weekends and during warmer months\n* Sharp increase in ride lengths and number of rentals Jan-Feb\n    - Potentially due to new years' resolutions to exercise more<br><br>\n\n# Recommendations:\n* Advertise a bike sharing membership as an affordable commuting option\n* Advertise memberships at the top 10 most popular locations for casual riders\n* Advertise during the summer months when people are more likely to rent bicycles\n* Also advertise around the beginning of the year when people resolve to get more exercise\n","e24281b5":"# Google Data Analytics Capstone Project\n## Cyclistic Bike-Share Case Study","dc44ebef":"In addition to ride lengths that are less than or equal to zero, I want to check for rides that are unreasonably long. There isn't any info in the documentation about a rental time limit, but I would assume that nobody is renting a bike for more than a few hours. There are ride lengths as long as 24 hours in the dataset, so I will use the interquartile range to determine and remove outliers.","d082dccb":"At this point, the data is ready for analysis. I have checked for and removed erroneous values, removed the data that will not be necessary, and added some columns that will be useful in the analysis.<br><br>","0ad97a12":"Next, I am going to create pivot tables and use those tables to plot the data with pyplot.","7a63319a":"With rows with missing values removed, it is much easier to simply find an average coordinate for each station. To do this, I will use the pandasql library becuase I can filter and join data in fewer lines of code using SQL syntax.","ffeafb43":"Checking the unique bike types in the rideable_type column shows that there is a third type of bike: \"docked_bike\". I am not sure what this means exactly, so I will check the docked_bike entries in the dataframe to see if I can make sense of them.","1d7b739e":"<br>","44659e6f":"The plot on the left shows the average ride length on each day of the week, and the plot on the right shows the average number of rides\/rentals on each day of the week. The data in both plots are aggregated over Dec, 2020 through Nov, 2021.<br>\n\nWe can see that on every day of the week, casual riders ride for longer than members. The difference in ride length decreases toward the middle of the week, and it appears to be primarily due to a decrease in casual riders' ride lengths rather than an increase in members' ride lengths. This could be because some casual riders are commuters and they pull the average down a bit during the week. Generally speaking, I would expect recreational bike rides to be longer than commutes, so assuming more casual riders ride recreationally than members it makes sense that the average is higher. Another thing to note is the fact that members' ride lengths are nearly constant Mon-Fri further suggesting that more members are commuters.<br>\n\nThere is a larger difference in number of rentals between members and casual riders. On Monday through Thrursday, members rent bikes significantly more than casual riders. On Friday, the number of bike rentals by casual riders starts to increase, and by the weekend casual riders rent nearly as many bikes as members. Additionally, the number of rentals by members stays relatively constant throughout the week, but the number of rentals by casual riders increases significantly during the weekend. This further suggests that members tend to be commuters and casual riders tend to ride recreationally."}}