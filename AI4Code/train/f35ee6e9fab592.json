{"cell_type":{"1eca65be":"code","5eba6a57":"code","85960cd3":"code","8e354550":"code","d61f4713":"code","98fa772a":"code","f3d859e1":"code","835a09cb":"code","4cee58b7":"code","c5411062":"code","dcf6b83c":"code","8f3305fd":"code","f22b7448":"code","bd921dc0":"code","378a5288":"code","6e232775":"code","8206e0bc":"code","7c382032":"code","b119e5e1":"code","3149235d":"code","bbaa629b":"code","4bc3937f":"markdown","d9d047d4":"markdown","1b7f0150":"markdown","32cd911b":"markdown","05b77df1":"markdown","b49044fd":"markdown","9917b735":"markdown","9c09b0e9":"markdown","7c421764":"markdown","3ecc0d58":"markdown","30259cbc":"markdown","e5fe9949":"markdown","7cc69b1c":"markdown","cc9d66e2":"markdown","3e4a81c9":"markdown","470f29f2":"markdown","aff3ef7a":"markdown"},"source":{"1eca65be":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nreviews_df = pd.read_csv('..\/input\/video-game-reviews-ign-2020-2021\/reviews.csv', parse_dates = True)\nreviews_df.head()","5eba6a57":"reviews_df.info()","85960cd3":"reviews_df['release_date'] = reviews_df['release_date'].replace('TBA 2021', np.nan)\nreviews_df['release_date'] = reviews_df['release_date'].replace('Q4 2021', np.nan)\nreviews_df['release_date'] = reviews_df['release_date'].replace('Q3 2021', np.nan)\nreviews_df['release_date'] = reviews_df['release_date'].replace('TBA', np.nan)\nreviews_df['release_date'] = reviews_df['release_date'].replace('TBA 2023', np.nan)\nreviews_df['release_date'] = pd.to_datetime(reviews_df['release_date'])\nreviews_df.info()","8e354550":"(reviews_df.isnull().sum()\/reviews_df.shape[0])*100","d61f4713":"from collections import Counter\nfrom itertools import chain\n\n\nreviews_df['platforms'] = reviews_df['platforms'].fillna('NaN')\nvalue_count_platforms = pd.Series(Counter(chain.from_iterable((reviews_df['platforms'].str.split(',  '))))).to_frame()\nvalue_count_platforms = value_count_platforms.rename(columns = {0: 'platforms'})","98fa772a":"value_count_platforms_sorted = value_count_platforms.sort_values(by = ['platforms'], ascending = False)\nvalue_count_platforms_sorted.head() ","f3d859e1":"plt.figure(figsize=(14, 7))\nsns.barplot(x = value_count_platforms_sorted.platforms[:10], y = value_count_platforms_sorted.index[:10])","835a09cb":"from collections import Counter\nfrom itertools import chain\n\n\nreviews_df['genres'] = reviews_df['genres'].fillna('NaN')\nvalue_count_genres = pd.Series(Counter(chain.from_iterable((reviews_df['genres'].str.split(',  '))))).to_frame()\nvalue_count_genres = value_count_genres.rename(columns = {0: 'genres'})","4cee58b7":"value_count_genres_sorted = value_count_genres.sort_values(by = ['genres'], ascending = False)\nvalue_count_genres_sorted","c5411062":"plt.figure(figsize=(14, 7))\nsns.barplot(x = value_count_genres_sorted.genres[:10], y = value_count_genres_sorted.index[:10])","dcf6b83c":"reviews_df['genres'].value_counts()","8f3305fd":"reviews_df['publishers'].value_counts().to_frame()","f22b7448":"reviews_df['score'].value_counts().to_frame()","bd921dc0":"reviews_df[reviews_df['score'] == 10]","378a5288":"sns.distplot(reviews_df['score'], kde = False, hist_kws = dict(edgecolor = \"k\", linewidth = 2))","6e232775":"reviews_df['reviewed_by'].value_counts().to_frame().head() ","8206e0bc":"reviews_df['release_date'].dt.month.value_counts()","7c382032":"sns.distplot(reviews_df['release_date'].dt.month, bins = 12, hist_kws = dict(edgecolor = \"k\", linewidth = 2), kde = False)\nplt.xlabel('Month')\nplt.ylabel('Count')\nplt.xlim(1, 12)","b119e5e1":"reviewer = {}\nfor x in reviews_df['reviewed_by'].unique():\n    reviewer[x] = {}\n    \nfor index, row in reviews_df.iterrows():\n    gr = row['genres'].split(',')\n    for x in gr:\n        if(x in reviewer[row['reviewed_by']]):\n            reviewer[row['reviewed_by']][x] += 1\n        else:\n            reviewer[row['reviewed_by']][x] = 1\n            \nreviewer_df = pd.DataFrame(reviewer)\nreviewer","3149235d":"reviews_df['month_of_release'] = reviews_df['release_date'].dt.month_name()\nreviews_df.sort_values(by = 'month_of_release', inplace = True)\nscore_by_month = pd.DataFrame(reviews_df.groupby('month_of_release')['score'].mean().to_dict().items(), columns = ['Month', 'Score'])\nscore_by_month","bbaa629b":"sns.regplot(score_by_month.index, score_by_month['Score'])\nplt.ylim(0, 10)","4bc3937f":"\"Each man is capable of doing one thing well. If he attempts several, he will fail to achieve distinction in any\" - Plato\nCompany tend to allocate work on basis of specialisation; same applies for reviewers. The following code cell outputs a nested dictionary revealing specialisation trends (i.e., which genre is reviewed by which reviewer).  A great example here will be Luke Reilly with 11 ```Racing``` video game reviews with the next most reviewed genre being ```Action``` with just 2","d9d047d4":"A very weak improvement trend is noticeble but as mentioned earlier; no far-reaching inference must be drawn","1b7f0150":"A tidy barplot demonstrating the top 10 popular platforms ","32cd911b":"Review scores and their frequency count...","05b77df1":"The following gives us an idea of when video games tend to be released","b49044fd":"A distribution plot of review scores; demonstrating a normal distribution skewed left","9917b735":"The most prolific video game reviewers at IGN (top 5 reviewers with the most reviews)","9c09b0e9":"The following are the only video games to get a perfect score in the last year (as of time of collection of the dataset)","7c421764":"The issue with a simple value count on the columns for this dataset was that video games have multiple ```developers```, available on multiple ```platforms``` and are of varied ```genres```. value_counts() would count the groupings and not the individual counts","3ecc0d58":"Here is the dataframe of publishers and the number of video game titles under their belt","30259cbc":"Checking the Dtypes of the columns...","e5fe9949":"The distribution of video game releases (i.e., the video games reviewed; however it also gives a great idea of video game releases in general)","7cc69b1c":"Replacing unacceptable date formats with NaNs for quick analysis purposes","cc9d66e2":"The next 3 cells perform the same as the the last 3; however, the column in question here, is ```genres```","3e4a81c9":"Are video games improving over the years\/ or in this case, a year? The following dataset is extremely small to draw comprehensive conclusions, but nonetheless, let's give it a spin","470f29f2":"The following 3 code cells achieve the purpose of highlighting the most popular ```platforms``` (here, popular refers to the console on which most reviewed games are being sold)","aff3ef7a":"A check on null value percentage across the varied columns"}}