{"cell_type":{"4226730a":"code","c543583e":"code","8669593a":"code","7672efd8":"code","2d3e9c2a":"code","3733d808":"code","d67caad3":"code","fee77229":"markdown","c205cc7d":"markdown"},"source":{"4226730a":"import json\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport mlb\n\n%matplotlib inline\n\ntrain = pd.read_csv('..\/input\/mlb-player-digital-engagement-forecasting\/train_updated.csv')","c543583e":"train.head()","8669593a":"\nengagements = []\nfor i, row in train.iterrows():\n    try:\n        parsed = json.loads(row['nextDayPlayerEngagement'])\n        engagements.extend(parsed)\n    except:\n        pass\n\nengagement_df = pd.DataFrame(engagements)\nengagement_df['cumcount'] = engagement_df.groupby('engagementMetricsDate').cumcount()\nsampled = engagement_df.sample(500000)","7672efd8":"plt.scatter(sampled['cumcount'], sampled['target1'])","2d3e9c2a":"plt.scatter(sampled['cumcount'], sampled['target2'])","3733d808":"plt.scatter(sampled['cumcount'], sampled['target3'])","d67caad3":"plt.scatter(sampled['cumcount'], sampled['target4'])","fee77229":"The order of the data within the same day has a strong relationship with the target.\nI make sure that the data returned from the mlb module as well as train_updated.csv are in the same order. By including this leak in the features, we can improve the CV\/public LB.\n\nThe host can easily eliminate this leak by shuffling the rows in the test data since August. I hope that this leak will be eliminated to make the winning model worthwhile.\n","c205cc7d":"## Cumcount VS Target"}}