{"cell_type":{"37fc9050":"code","4e66f47d":"code","dae10b71":"code","ddf00192":"code","e2a882b7":"code","8b3ea7c9":"code","2d028aa4":"code","03ad2240":"code","ca141109":"code","06ae832f":"code","d1e65f69":"code","7ee2ab55":"code","f3906c83":"markdown"},"source":{"37fc9050":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport requests\nimport os\nfrom urllib.request import urlopen\nprint(os.listdir(\"..\/input\"))","4e66f47d":"fin = open('..\/input\/words.txt')","dae10b71":"fin.readline()","ddf00192":"fin.readline()","e2a882b7":"line = fin.readline()\nword = line.strip()\nword","8b3ea7c9":"fin = open('..\/input\/words.txt')\nfor line in fin:\n    word = line.strip()\n    print(word)","2d028aa4":"def uses_all(word, required):\n    for letter in required: \n        if letter not in word:\n            return False\n    return True","03ad2240":"uses_all(\"polly\", \"ol\")","ca141109":"def uses_only(word, available):\n    for letter in word: \n        if letter not in available:\n            return False\n    return True","06ae832f":"uses_only(\"play\", \"alopy\")","d1e65f69":"def is_palindrome(word):\n    i = 0\n    j = len(word)-1\n\n    while i<j:\n        if word[i] != word[j]:\n            return False\n        i = i+1\n        j = j-1\n\n    return True","7ee2ab55":"is_palindrome(\"lol\")","f3906c83":"#### Program testing can be used to show the presence of bugs, but never to show their absence!\n\u2014 Edsger W. Dijkstra"}}