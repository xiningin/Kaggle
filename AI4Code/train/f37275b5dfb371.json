{"cell_type":{"80ccf675":"code","e0d2dfc3":"code","f330da61":"code","f9e3ea0a":"code","fce4c579":"code","3969b3e0":"code","71c9888b":"code","066421da":"code","a17c4b55":"code","6f5ba2d7":"code","48cd222c":"code","2803eed9":"code","30807d91":"code","71a79a44":"code","10b71130":"code","a92861ec":"code","1584aed2":"code","02b4a2ec":"code","cd77dabc":"code","75890221":"code","6a50a9c9":"code","a7188e52":"code","47aa20f2":"code","7d35a136":"code","305e805c":"code","4c52cc9a":"code","dd6bb7ff":"code","7f6bd447":"code","b039611e":"code","64e811ff":"code","e6975fd9":"code","cec0be11":"code","c154f38e":"code","98893f07":"code","4aeaf714":"code","ceb1b11f":"code","02de06ef":"code","0c2ced43":"code","c3671d1a":"code","56512ce7":"code","3295cdae":"code","c945f8f0":"code","e1106e59":"code","bb543acc":"code","54f875da":"code","4a2d9851":"code","01172190":"code","40383dfd":"code","b89de630":"code","adf0272f":"markdown","4e6e69ba":"markdown","f812e736":"markdown","c5729764":"markdown","4916ea32":"markdown","6add6eb7":"markdown","b9412de8":"markdown","52256117":"markdown","a3fce7e7":"markdown","2a9acd2b":"markdown","4dd6c31e":"markdown","3a38e88e":"markdown","9c9ed81b":"markdown","da27ba14":"markdown","a7e95259":"markdown","8e963648":"markdown","66cab6c7":"markdown","2c75a0ca":"markdown","f893b963":"markdown","5c76d927":"markdown","948cb0e1":"markdown"},"source":{"80ccf675":"import pandas as pd\nimport re","e0d2dfc3":"df_calender = pd.read_csv('..\/input\/seattle\/calendar.csv')\ndf_calender.head()","f330da61":"df_listings = pd.read_csv('..\/input\/seattle\/listings.csv')\ndf_listings.head(2)","f9e3ea0a":"df_reviews = pd.read_csv('..\/input\/seattle\/reviews.csv')\ndf_reviews.head(2)","fce4c579":"df_calender.head(2)","3969b3e0":"df_calender.info()","71c9888b":"# check duplicated values\ndf_calender[df_calender.duplicated()]","066421da":"df_calender.isnull().sum()","a17c4b55":"# convert date column type to date \ndf_calender['date'] = pd.to_datetime(df_calender['date'])\n# check\ntype(df_calender.date.iloc[0])","6f5ba2d7":"# convert listing_id type to string\ndf_calender['listing_id'] = df_calender['listing_id'].astype(str)\n# check\ntype(df_calender.listing_id.iloc[0])","48cd222c":"# === price column === \n\n# replace the nan value in price to 0\ndf_calender['price'].fillna(0, inplace=True)\n\n# remove the symbols in price\ndef remove_symbol(price):\n    \"\"\"remove the symbols ['$', ','] in price\"\"\"\n    if type(price) is str:\n        return re.sub(\"[\\$,]\",'',price)\n    return price\n    \ndf_calender['price'] = df_calender.price.apply(remove_symbol)\n\n# convert the price type to float\ndf_calender['price'] = df_calender['price'].astype(float)","2803eed9":"# check\ndf_calender.info()","30807d91":"df_reviews.head(2)","71a79a44":"# check duplicated values\ndf_reviews[df_reviews.duplicated()]","10b71130":"df_reviews.isnull().sum()","a92861ec":"df_reviews.info()","1584aed2":"# convert listing_id type to string\ndf_reviews['listing_id'] = df_reviews['listing_id'].astype(str)\n# check\ntype(df_reviews.listing_id.iloc[0])","02b4a2ec":"# convert id type to string\ndf_reviews['id'] = df_reviews['id'].astype(str)\n# check\ntype(df_reviews.id.iloc[0])","cd77dabc":"# convert date column type to date \ndf_reviews['date'] = pd.to_datetime(df_reviews['date'])\n# check\ntype(df_reviews.date.iloc[0])","75890221":"# drop review_id and reveiew_name \ndf_reviews.drop(['reviewer_id', 'reviewer_name'], axis=1, inplace=True)","6a50a9c9":"# reomove null rows\ndf_reviews.dropna(subset=['comments'], inplace=True)","a7188e52":"# check \ndf_reviews.info()","47aa20f2":"df_listings.head(2)","7d35a136":"# take the important columns\ndf_listings_1 = df_listings[['id','host_response_time','host_response_rate','accommodates','bathrooms','bedrooms','beds','price','weekly_price','monthly_price'\n,'cleaning_fee','extra_people','minimum_nights','review_scores_rating','instant_bookable']]","305e805c":"df_listings_1.info()","4c52cc9a":"# convert id type to string\ndf_listings_1['id'] = df_listings_1['id'].astype(str)\n# check\ntype(df_listings_1.id.iloc[0])","dd6bb7ff":"# impute the nan value with mode\ndf_listings_1.beds.fillna(df_listings_1.beds.mode()[0], inplace=True)\n\n# covert the beds to int\ndf_listings_1['beds'] = df_listings_1.beds.astype(int)","7f6bd447":"# === price column === \n\n# replace the nan value in price to 0\ndf_listings_1['price'].fillna(0, inplace=True)\n\n# remove the symbols in price\ndef remove_symbol(price):\n    \"\"\"remove the symbols ['$', ','] in price\"\"\"\n    if type(price) is str:\n        return re.sub(\"[\\$,]\",'',price)\n    return price\n    \ndf_listings_1['price'] = df_listings_1.price.apply(remove_symbol)\n\n# convert the price type to float\ndf_listings_1['price'] = df_listings_1['price'].astype(float)","b039611e":"# check\ndf_listings_1.info()","64e811ff":"df_listings_1.head()","e6975fd9":"# check duplicated values\ndf_listings_1[df_listings_1.duplicated()]","cec0be11":"# covert percentage to float in host_response_rate column\ndef p2f(x):\n    if type(x) is str:\n        return float(x.strip('%'))\/100\n    return 1\n\ndf_listings_1['host_response_rate'] = df_listings_1.host_response_rate.apply(p2f)","c154f38e":"import seaborn as sns\nimport matplotlib.pyplot as plt","98893f07":"plt.rcParams['figure.figsize'] = (10,5)\n# set title for plot\nfont = {'family': 'serif',\n        'color':  'darkred',\n        'weight': 'normal',\n        'size': 20,\n        }\nbase_color = sns.color_palette()[0]","4aeaf714":"df_calender.head()","ceb1b11f":"month = df_calender[df_calender.date.dt.year == 2017]['date'].dt.month.unique()\nmonth = df_calender.date.dt.year\ndf_calender.groupby([month, 'available']).count()['listing_id']","02de06ef":"df_calender_2016 = df_calender[df_calender.date.dt.year == 2016]\nmonth = df_calender_2016.date.dt.month\nsns.countplot(data = df_calender, x = month, hue = 'available');\nplt.title('Occupation in 2016', fontdict=font);","0c2ced43":"corr = df_listings_1.corr()\n\nkot = corr[corr.apply(lambda x: abs(x)>=0)]\n\nsns.heatmap(kot, annot = True, fmt = '.2f', cmap = 'Reds', center = 0)\nplt.title('Features Correlation', fontdict=font);\nplt.xticks(rotation = 15);","c3671d1a":"sns.barplot(data = df_calender_2016, x = month, y = 'price',color=base_color)\nplt.ylabel('Avg. price')\nplt.xlabel('Months')\nplt.title('Avg. price per months', fontdict=font);\nplt.axhline(df_calender_2016.price.mean(), linestyle='--', color='red');","56512ce7":"print(f\"The Avg. host response rate is {round(df_listings_1.host_response_rate.mean(),2)}\")","3295cdae":"# df_listings_1.host_response_time.value_counts()\ncat_order = df_listings_1['host_response_time'].value_counts().index\nsns.countplot(data = df_listings_1, x = 'host_response_time', color=base_color, order=cat_order)\nplt.title('The most host response time', fontdict=font);","c945f8f0":"from sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.pipeline import Pipeline,make_pipeline\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import cross_val_score","e1106e59":"df_listings_1.head()","bb543acc":"X = df_listings_1[['accommodates','bathrooms','bedrooms','beds']]\ny = df_listings_1['price']","54f875da":"X.isnull().sum()\n# y.isnull().sum()","4a2d9851":"X_train,X_test,y_train,y_test = train_test_split(X,y, test_size=0.3, random_state=42)","01172190":"#1st Imputation Transformer\ntrf1 = ColumnTransformer([\n    ('impute_bathrooms',SimpleImputer(strategy='most_frequent'),['bathrooms']),\n    ('impute_bedrooms',SimpleImputer(strategy='most_frequent'),['bedrooms'])\n],remainder='passthrough')\n\n#2nd Scaling\ntrf3 = ColumnTransformer([\n    ('scale', MinMaxScaler(), slice(0,4))\n])\n\n#5th Model\ntrf5 = LinearRegression()","40383dfd":"pipe = Pipeline([\n    ('trf1', trf1),\n    ('trf3', trf3),\n    ('trf5', trf5)\n])\n\npipe.fit(X_train, y_train)","b89de630":"print(pipe.score(X_test, y_test))","adf0272f":"## Listings_Dataset","4e6e69ba":"# Predict_the_price\n\nWe gone to predict the price of a room ","f812e736":"## Train_Test_Split","c5729764":"we can notice from the graph that the occupation rate at level of months during 2016 is low specially in months 3,10,11 and 12","4916ea32":"# Data_Analysis","6add6eb7":"## Calender_Dataset","b9412de8":"## Reviews_Dataset","52256117":"## What is the AVg. host response rate?","a3fce7e7":"## What is the occupancy rate during 2016 at the level of months?","2a9acd2b":"# Table of Content\n* [Introduction](#Introduction)\n    * [Context](#Context)\n    * [Content](#Content)\n    * [Inspiration](#Inspiration)\n    * [Acknowledgement](#Acknowledgement)\n    \n    \n* [Data Wrangling](#Data_Wrangling)\n    * [Calender](#Calender_Dataset)\n    * [Reviews](#Reviews_Dataset)\n    * [Listings](#Listings_Dataset)\n    \n\n* [Data Analysis](#Data_Analysis)\n\n* [Predict the price](#Predict_the_price)\n    * [Train Test Split](#Train_Test_Split)\n    ","4dd6c31e":"## What is the average price per months?","3a38e88e":"## Create Pipeline","9c9ed81b":"# Data_Wrangling","da27ba14":"## What is the most features affect on the price?","a7e95259":"**Investigate**: we can notice that the price is increased from June month to December especially in December ","8e963648":"**Investigate**: we can see that the host response rate is 96% which is very good in this city","66cab6c7":"# Introduction\n\n## Context\n\nSince 2008, guests and hosts have used Airbnb to travel in a more unique, personalized way. As part of the Airbnb Inside initiative, this dataset describes the listing activity of homestays in Seattle, WA.\n\n## Content\n\nThe following Airbnb activity is included in this Seattle dataset:\n* Listings, including full descriptions and average review score\n* Reviews, including unique id for each reviewer and detailed comments\n* Calendar, including listing id and the price and availability for that day\n\n## Inspiration\n\nCan you describe the vibe of each Seattle neighborhood using listing descriptions?\nWhat are the busiest times of the year to visit Seattle? By how much do prices spike?\nIs there a general upward trend of both new Airbnb listings and total Airbnb visitors to Seattle?\nFor more ideas, visualizations of all Seattle datasets can be found [here](http:\/\/insideairbnb.com\/seattle\/).\n\n## Acknowledgement\n\nThis dataset is part of Airbnb Inside, and the original source can be found [here](http:\/\/insideairbnb.com\/get-the-data.html).","2c75a0ca":"**Investigate**: we can see that the most host response time is within an hour","f893b963":"## What is the most host response time?","5c76d927":"**Investigate**: we can see that a lot of quantitative feature effect on the price like nu of beds, bathrooms, bedrooms and accommodates","948cb0e1":"## Create Transformer"}}