{"cell_type":{"cd967173":"code","1b121451":"code","92a61a7e":"code","477e3166":"code","7933d287":"code","a4064f52":"code","f7ed2c25":"code","55a57989":"code","a39248f3":"code","70460dda":"code","5df4a5f3":"markdown"},"source":{"cd967173":"#https:\/\/github.com\/zalandoresearch\/flair\n!pip install --upgrade pip\n!pip install flair","1b121451":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport gc\nfrom tqdm import tqdm\nfrom bs4 import BeautifulSoup\nimport re\nimport matplotlib.pyplot as plt\nfrom datetime import datetime   \n    \nPATH = \"..\/input\/cityofla\/CityofLA\/Job Bulletins\/\"","92a61a7e":"from flair.data import Sentence\nfrom flair.models import SequenceTagger\ntagger = SequenceTagger.load('ner-ontonotes-fast') ","477e3166":"def extract_ner(text, TERM='LAW'):\n    \n    sentence = Sentence(text)\n    tagger.predict(sentence)\n    r = sentence.to_dict(tag_type='ner')\n    \n    some_list = []\n    for j in range(len(r['entities'])):\n        if (r['entities'][j].get(\"type\")) == TERM:\n            some_list.append(r['entities'][j].get('text'))\n    return some_list","7933d287":"text = []\nfor fl in tqdm(list(os.listdir(\"..\/input\/cityofla\/CityofLA\/Job Bulletins\"))):\n    with open(PATH+fl, 'r',encoding='latin-1') as f: \n        text.append(f.read())\ndata = pd.DataFrame({'text':text})","a4064f52":"data['title'] = data.text.apply(lambda x: x.split('\\n')[0])\ndata['title'] = data.title.apply(lambda x: re.sub('[^A-Za-z0-9]+', ' ',x))","f7ed2c25":"data.text = data.text.apply(lambda x: x.replace('\\t','').split('\\n'))\ndata.text = data.text.apply(lambda x: ' '.join(x))","55a57989":"data['law'] = data.text.apply(lambda x: extract_ner(x))\ndata['org'] = data.text.apply(lambda x: extract_ner(x, TERM='ORG'))\ndata['date'] = data.text.apply(lambda x: extract_ner(x, TERM='DATE'))\ndata['cardinal'] = data.text.apply(lambda x: extract_ner(x, TERM='CARDINAL'))\ndata['gpe'] = data.text.apply(lambda x: extract_ner(x, TERM='GPE'))\ndata['event'] = data.text.apply(lambda x: extract_ner(x, TERM='EVENT'))\ndata['percent'] = data.text.apply(lambda x: extract_ner(x, TERM='PERCENT'))\ndata['work_of_art'] = data.text.apply(lambda x: extract_ner(x, TERM='WORK_OF_ART'))","a39248f3":"data.head(10)","70460dda":"data.to_csv('vacancy_ner.csv', index=False)","5df4a5f3":"Flair is:\n\n    A powerful NLP library. Flair allows you to apply our state-of-the-art natural language processing (NLP) models to your text, such as named entity recognition (NER), part-of-speech tagging (PoS), sense disambiguation and classification.\n\n    Multilingual. Thanks to the Flair community, we support a rapidly growing number of languages. We also now include 'one model, many languages' taggers, i.e. single models that predict PoS or NER tags for input text in various languages.\n\n    A text embedding library. Flair has simple interfaces that allow you to use and combine different word and document embeddings, including our proposed Flair embeddings, BERT embeddings and ELMo embeddings.\n\n    A Pytorch NLP framework. Our framework builds directly on Pytorch, making it easy to train your own models and experiment with new approaches using Flair embeddings and classes.\n"}}