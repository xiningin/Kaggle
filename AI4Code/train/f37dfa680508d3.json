{"cell_type":{"052e466b":"code","e75427e6":"code","5e2ccacd":"code","3ae37811":"code","84698942":"code","fc9d4507":"code","cf3c9170":"code","f860a1b8":"code","4647efe4":"code","03c63b87":"code","f25702e6":"code","e11301bc":"code","87ee7454":"code","6f430f16":"code","d8c94285":"code","98ef72b7":"code","a71bfcdc":"code","b4161a74":"code","ef311d36":"code","be482623":"code","5dfeeace":"code","5d0783bb":"code","1186ea14":"code","94336406":"code","f1258756":"code","5caa5f8d":"code","a5263209":"code","0cd29774":"code","833f103b":"code","582d45b2":"code","60e997a6":"code","6925603b":"code","c56a6657":"code","3828a382":"code","d567d2e9":"code","c5349ae4":"code","7d7b12ab":"code","b08eb841":"code","2c3d1053":"code","97481d1e":"code","61767b4b":"code","41affb62":"code","3845e664":"code","079cc31d":"code","19e658af":"code","8eb8a735":"code","e2ba84ea":"code","5eaf33bf":"code","5b6b9794":"code","6c97ad2b":"code","609105e5":"code","dbdd6ba5":"code","c0e19b67":"code","5775ba89":"code","a0dd9607":"code","840a95d8":"code","e4f0554f":"code","1e5b67aa":"code","92b8329e":"code","cf03102b":"code","7165865b":"code","1c3778a7":"code","b8774a44":"code","64cce8d7":"code","bd9a5f27":"code","857dc925":"code","8a2ba2e5":"code","6f8366ea":"code","14c0771e":"code","b4989139":"markdown","3e71a099":"markdown","d4692cb6":"markdown","dcb6db9a":"markdown","033bb7ef":"markdown","b577f2d7":"markdown","a5dc71b4":"markdown","66708eab":"markdown","157ffa64":"markdown","a2bdb3f1":"markdown","a20d839d":"markdown","5f50ff21":"markdown","1b0045a2":"markdown","253dcec5":"markdown"},"source":{"052e466b":"import matplotlib as plt\nimport sklearn as ski\nimport pandas as pd\nimport numpy as np\nimport seaborn as sea","e75427e6":"dfquote_s = pd.read_csv(\"..\/input\/stock-market-small-wide-dataset\/quote-S.csv\")\ndfbar_s = pd.read_csv(\"..\/input\/stock-market-small-wide-dataset\/bar-S.csv\")\ndfbar = pd.read_csv(\"..\/input\/stock-market-small-wide-dataset\/bar.csv\")\ndfevent = pd.read_csv(\"..\/input\/stock-market-small-wide-dataset\/event.csv\")\ndfnews = pd.read_csv(\"..\/input\/stock-market-small-wide-dataset\/news.csv\")\ndfquote = pd.read_csv(\"..\/input\/stock-market-small-wide-dataset\/quote.csv\")\ndfrating = pd.read_csv(\"..\/input\/stock-market-small-wide-dataset\/rating.csv\")\ndftarget = pd.read_csv(\"..\/input\/stock-market-small-wide-dataset\/target.csv\")\n","5e2ccacd":"dfquote.head()","3ae37811":"dfquote.tail()","84698942":"dfquote.shape","fc9d4507":"dfquote.describe(include='all')","cf3c9170":"dfquote.columns.values","f860a1b8":"dfquote.info()","4647efe4":"dfquote.dtypes","03c63b87":"dfquote.describe()","f25702e6":"dfquote['bid_price'].unique()","e11301bc":"dfquote['bid_size'].unique()","87ee7454":"dfquote['ask_price'].unique()","6f430f16":"dfquote['ask_size'].unique()","d8c94285":"dfquote.isnull().sum()","98ef72b7":"dfquote.isnull().sum()>0","a71bfcdc":"#total = dfquote.isnull().sum().sort_values(ascending=False)\n#percent = (dfquote.isnull().sum()\/dfquote.isnull().count()).sort_values(ascending=False)\n#missing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n#missing_data","b4161a74":"#dfquote['time'] = dfquote['time'].replace(np.nan, 0)\n#dfquote['ticker'] = dfquote['ticker'].replace(np.nan, 0)\n#dfquote['bid_price'] = dfquote['bid_price'].replace(np.nan, 0)\n#dfquote['bid_size'] = dfquote['bid_size'].replace(np.nan, 0)\n#dfquote['ask_price'] = dfquote['ask_price'].replace(np.nan, 0)","ef311d36":"dfquote['time'] = pd.to_datetime(dfquote['time'])\ndfquote.head()","be482623":"dfquote['time'] = dfquote['time'].dt.hour\ndfquote.head()","5dfeeace":"sea.distplot(dfquote['bid_price'])","5d0783bb":"sea.distplot(dfquote['bid_size'])","1186ea14":"sea.distplot(dfquote['bid_price'])","94336406":"sea.distplot(dfquote['ask_price'])","f1258756":"sea.distplot(dfquote['ask_size'])","5caa5f8d":"sea.distplot(dfquote['time'])","a5263209":"f, ax = plt.pyplot.subplots(figsize=(8, 6))\nfig = sea.boxplot(x='time', y=\"ask_size\", data=dfquote)\nfig.axis(ymin=0, ymax=800000)","0cd29774":"f, ax = plt.pyplot.subplots(figsize=(8, 6))\nfig = sea.boxplot(x='time', y=\"bid_price\", data=dfquote)\nfig.axis(ymin=0, ymax=800000)","833f103b":"f, ax = plt.pyplot.subplots(figsize=(8, 6))\nfig = sea.boxplot(x='time', y=\"bid_size\", data=dfquote)\nfig.axis(ymin=0, ymax=800000)","582d45b2":"f, ax = plt.pyplot.subplots(figsize=(8, 6))\nfig = sea.boxplot(x='time', y=\"ask_size\", data=dfquote)\nfig.axis(ymin=0, ymax=800000)","60e997a6":"sea.pairplot(dfquote)\nsea.set()\ncols = ['bid_price', 'bid_size', 'ask_price', 'ask_size']\nsea.pairplot(dfquote[cols], size = 2.5)\nplt.pyplot.show()","6925603b":"hourly_bid_price= dfquote.groupby(\"time\")[\"bid_price\"].sum().sort_values(ascending=False).to_frame()\nhourly_bid_price.head()","c56a6657":"plt.pyplot.figure(figsize=(20,10))\nx = dfquote['bid_price']\ny = dfquote['time']\nplt.pyplot.scatter(x,y)","3828a382":"hourly_bid_size= dfquote.groupby(\"time\")[\"bid_size\"].sum().sort_values(ascending=False).to_frame()\nhourly_bid_size.head()","d567d2e9":"plt.pyplot.figure(figsize=(20,10))\nx = dfquote['bid_size']\ny = dfquote['time']\nplt.pyplot.scatter(x,y)","c5349ae4":"hourly_ask_price= dfquote.groupby(\"time\")[\"ask_price\"].sum().sort_values(ascending=False).to_frame()\nhourly_ask_price.head()","7d7b12ab":"plt.pyplot.figure(figsize=(20,10))\nx = dfquote['ask_price']\ny = dfquote['time']\nplt.pyplot.scatter(x,y)","b08eb841":"pearson_coefficeint = dfquote.corr(method='pearson')\npearson_coefficeint","2c3d1053":"sea.heatmap(pearson_coefficeint, cmap='RdBu_r',annot=True)","97481d1e":"sea.regplot(x= \"time\",y=\"bid_price\", data = dfquote)\nplt.pyplot.ylim(0)","61767b4b":"sea.regplot(x= \"time\",y=\"bid_size\", data = dfquote)\nplt.pyplot.ylim(0)","41affb62":"sea.regplot(x= \"time\",y=\"ask_price\", data = dfquote)\nplt.pyplot.ylim(0)","3845e664":"sea.regplot(x= \"time\",y=\"ask_price\", data = dfquote)\nplt.pyplot.ylim(0)","079cc31d":"sea.regplot(x= \"bid_price\",y=\"ask_size\", data = dfquote)\nplt.pyplot.ylim(0)","19e658af":"sea.regplot(x= \"bid_price\",y=\"ask_price\", data = dfquote)\nplt.pyplot.ylim(0)","8eb8a735":"sea.regplot(x= \"bid_price\",y=\"ask_size\", data = dfquote)\nplt.pyplot.ylim(0)","e2ba84ea":"sea.regplot(x= \"bid_price\",y=\"ask_size\", data = dfquote)\nplt.pyplot.ylim(0)","5eaf33bf":"sea.regplot(x= \"bid_price\",y=\"ask_size\", data = dfquote)\nplt.pyplot.ylim(0)","5b6b9794":"sea.regplot(x= \"bid_price\",y=\"ask_size\", data = dfquote)\nplt.pyplot.ylim(0)","6c97ad2b":"plt.pyplot.figure(figsize=(20,10))\nx = dfquote['bid_price']\ny = dfquote['ask_price']\nplt.pyplot.scatter(x,y)\nplt.pyplot.title(\"A Plot Between bid_price and ask_price\")\nplt.pyplot.xlabel(\"bid_price\")\nplt.pyplot.ylabel(\"ask_price\")","609105e5":"plt.pyplot.figure(figsize=(20,10))\nx = dfquote['bid_price']\ny = dfquote['ask_size']\nplt.pyplot.scatter(x,y)\nplt.pyplot.title(\"A Plot Between bid_price and ask_size\")\nplt.pyplot.xlabel(\"bid_price\")\nplt.pyplot.ylabel(\"ask_size\")","dbdd6ba5":"plt.pyplot.figure(figsize=(20,10))\nx = dfquote['bid_price']\ny = dfquote['ask_price']\nplt.pyplot.scatter(x,y)\nplt.pyplot.title(\"A Plot Between bid_price and ask_price\")\nplt.pyplot.xlabel(\"bid_price\")\nplt.pyplot.ylabel(\"ask_price\")","c0e19b67":"plt.pyplot.figure(figsize=(20,10))\nx = dfquote['bid_price']\ny = dfquote['time']\nplt.pyplot.scatter(x,y)\nplt.pyplot.title(\"A Plot Between bid_price and time\")\nplt.pyplot.xlabel(\"bid_price\")\nplt.pyplot.ylabel(\"time\")","5775ba89":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\nx = dfquote[['bid_price','ask_size']]\ny = dfquote['bid_size']\n\nx_train,x_test,y_train,y_test = train_test_split(x,y, test_size=0.2)","a0dd9607":"print(x_train.shape,x_test.shape,y_train.shape,y_test.shape)","840a95d8":"x_train.head(20)","e4f0554f":"y_train.head(20)","1e5b67aa":"x_test.head(20)","92b8329e":"y_test.head(20)","cf03102b":"LR=LinearRegression()\nLR.fit(x_train, y_train)","7165865b":"LR.predict(x_test)","1c3778a7":"LR.score(x_test, y_test)","b8774a44":"dfbar.head()\n","64cce8d7":"dfevent.head()\n","bd9a5f27":"dfnews.head()\n","857dc925":"dfquote_s.head()\n","8a2ba2e5":"dfquote.head()\n","6f8366ea":"dfrating.head()\n","14c0771e":"dftarget.head()","b4989139":"# In this project i will be working with 8 csv files containig data of market\n\nFirst i will be showing you how to visualize the data in a particular file then i will be fetching out the relations between these datas after that i will be providing an estimation of the market with predictive analysis using linear regeression then i will also demonstrate the validity of my model hence created.","3e71a099":"# Always check the Datatypes of the coulumns and rows it will help you discriminate the coulumns and rows according to the datatypes********","d4692cb6":"# This step is unnecessary still i am including if you are working with any other data file please consider these types if you like.","dcb6db9a":"# Visualization ","033bb7ef":"# Check the basic probability of the data","b577f2d7":"# It's always better to check the file before you start Exploytory Data Analysis.","a5dc71b4":"#     # Import all the necessary modules","66708eab":"![](http:\/\/)bid_price\tbid_size\task_price\task_size","157ffa64":"# Need to convert the time in datetime formate so that we can work upon it","a2bdb3f1":"# As from the above data you can see that the Time column changes per hour hence we are going to work only with time per hour","a20d839d":"# Check if there is any null values","5f50ff21":"# Read the files\nHere I am using read csv to read the files, as i am using ,multiple files for reading i will also try to show how to read files isung function or loop in the later parts of the project","1b0045a2":"# Fetch the unique values from every columns","253dcec5":"# These are the basic steps for Exployratory Data Analysis\n\n* Import the necessary Modules like opencv, seaborn, matplotlib etc\n* Read  all the CSV files with whatever method you like, I am using readcsv in the Pandas module to do so.\n* Explore the data in the CSV file \n* Visualize the data using different types of graphs\n* Find relations between datas and plot the heat map, I am using Pearson coefficient Relation for this project.\n* If you want you can try do predictive modeling after that, I will be using Linear Regression for the same as of now\n* Also remember to find the score of train and test models remember the concept of overfitting and underfitting.\n* Lastly you have to validate the model hence created\n\n# Keep viewing the code it can give you a breif idea of simple Data Analysis\n\n* Decleration:- This project is build by me being as a noobie Please keep in mind that i have designed this project according to knowledge whatever i gather. There might be better process out there but i designed it on my own and kept my previous experience in mind. \n"}}