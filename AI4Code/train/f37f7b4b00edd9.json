{"cell_type":{"ccc5cd31":"code","ae040ab1":"code","66bb8659":"code","cbdfdceb":"code","ef75ff87":"code","de2e5f67":"code","cdb0d0b3":"code","8b998a78":"code","12b5b262":"markdown","af219206":"markdown","8a71c511":"markdown","25242549":"markdown","30514f65":"markdown","762228b4":"markdown","b49a30e2":"markdown","b54e9c9e":"markdown","6b707663":"markdown","240b85c8":"markdown"},"source":{"ccc5cd31":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import load_iris","ae040ab1":"!mkdir data\n!wget -O data\/BX-Users.csv 'https:\/\/raw.githubusercontent.com\/GaoangLiu\/figures\/master\/mlds\/data\/BX-Users.csv'\n\nusers = pd.read_csv('data\/BX-Users.csv', sep=';', encoding='latin')\nusers","66bb8659":"def _split(row):\n    if ',' in row:\n        return [e for e in row.strip().split(',') if e][-1]\n    return None\n\ndf = users['Location'].apply(_split).dropna()\ndf.value_counts().nlargest(30)","cbdfdceb":"df.value_counts().nlargest(10).plot()","ef75ff87":"df.value_counts().nlargest(10).plot(kind='bar')","de2e5f67":"df.value_counts().nlargest(10).plot(kind='barh').invert_yaxis() ","cdb0d0b3":"age = users['Age'].dropna()\nage.hist(bins=50)","8b998a78":"age = users[users['Age'] >= 120]['Age']\n# age.value_counts().sort_index().plot()\nage.hist(facecolor='purple', bins=30)","12b5b262":"Again, for the sake of simplicity, we only keep the top 30 countries, which tells us\n\n- Users from US consist of nearly half of all users \n- Canada, UK, Germany, Spain, Australia, Italy have the most users than other countries (except US)\n","af219206":"## Get Data and Overview\nIn the kernel, we illustrate how to visualize data with a few examples. The dataset comes from kaggle.com [Book-Crossing: User review ratings](https:\/\/www.kaggle.com\/ruchi798\/bookcrossing-dataset), of which the file `BX-Users.csv` contains 278,858 users' information.\n","8a71c511":"For most analysis projects, counting and visualizing data using frequency plots (e.g., histograms) help analyst to recognize patterns and relationships between data easily. Now, with Python `pandas` package, this task can be done with only a few lines of code.","25242549":"## Frequency Plot for Categorical Class","30514f65":"A bar graph might be more intuitive.","762228b4":"From the above graph, we can tell:\n1. Most users' age lies between 10 and 75, and the dominating age group seems to be 20 ~ 30, which is fair enough since the young people have the most time to read (or at least to write reviews)\n2. Seems that many users has an age over 120 years' old or even 250 years old. This can not be right, some users might have submitted fake information. We can confirm the distribution by extracting users whose age is between 120 ~ 250.","b49a30e2":"Or, if we need a herizonal bar plot, we can use `df.value_counts().nlargest(10).plot(kind='hbar')`","b54e9c9e":"So, those are nearly 80 rows containing a fake `age` feature, we should get rid of them (or replace with median) when building models.\n\nFor better aesthetic perception, we can also fine-tune:\n1. The color of bin with argument `facecolor='color'`\n2. The range of y_lim with argument `range=[1,10]`\n2. The granularity(width of bin) with argument `bins=20`","6b707663":"## Visualize numerical data\nNow, we've shown how to graph categorical data with `value_counts()` and `plot()`, the question is how about nemeric data?\n\nActually, graphing numerical data is easier with the `hist()` function. We take the `Age` feature for example to illustrate the uage of `hist()` function.","240b85c8":"An overview of dataset `BX-Users.csv` tells us that there are three columns: `User-ID`(numeric), `Location` (object) and `Age` (numerical). Assume that we're interested in the geographical distribution, more specifically, \n* Which country has the most users?\n* How many users in each country? \n\nFor simplicity, we assume that the last item in `Location` determines the country. That is, `df.Location.str.split(',')[-1]` will creates a new feature `Country` for each user."}}