{"cell_type":{"3739f09a":"code","465a17d2":"code","3432d476":"code","6b127f22":"code","74495197":"code","009eaad7":"code","38cb011e":"code","62c6ea2a":"code","8e889465":"code","ce8632cc":"code","48c1ed58":"code","32a097b2":"code","4b0c3fde":"code","0be7c2c8":"code","30a93e46":"code","82bf9063":"code","226f719a":"code","61e17836":"code","2f822d8d":"code","52fa73f9":"code","21657f75":"code","e1df1f90":"code","980bf589":"code","7a939786":"code","d54700ff":"code","bad19a88":"code","0a1db78e":"code","f3cd72ad":"code","d482ecf4":"code","2c776022":"markdown","1193c753":"markdown","42f1da79":"markdown","6aecf063":"markdown","b96e204b":"markdown"},"source":{"3739f09a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import date, timedelta, datetime\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","465a17d2":"data1 = pd.read_csv(\"\/kaggle\/input\/heart-disease-uci\/heart.csv\")\ndata1.head()","3432d476":"data2 = pd.read_csv(\"\/kaggle\/input\/videogamesales\/vgsales.csv\")\ndata2.head()","6b127f22":"data3 = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\")\ndata3.head()","74495197":"data_last = data3.tail(1)\ndata_last_day = data3[data3[\"ObservationDate\"] == data_last[\"ObservationDate\"].iloc[0]] \ncountry_list = list(data_last_day[\"Country\/Region\"].unique())\nconfirmed = []\ndeaths = []\nrecovered = []\nfor i in country_list:\n    x = data_last_day[data_last_day[\"Country\/Region\"] == i]\n    confirmed.append(sum(x[\"Confirmed\"]))\n    deaths.append(sum(x[\"Deaths\"]))\n    recovered.append(sum(x[\"Recovered\"]))\ndata3_country = pd.DataFrame(list(zip(country_list,confirmed,deaths,recovered)),columns = [\"Country\",\"Confirmed\",\"Deaths\",\"Recovered\"])\ndata3_country.head()","009eaad7":"date_list1 = list(data3[\"ObservationDate\"].unique())\nconfirmed = []\ndeaths = []\nrecovered = []\nfor i in date_list1:\n    x = data3[data3[\"ObservationDate\"] == i]\n    confirmed.append(sum(x[\"Confirmed\"]))\n    deaths.append(sum(x[\"Deaths\"]))\n    recovered.append(sum(x[\"Recovered\"]))\ndata3 = pd.DataFrame(list(zip(date_list1,confirmed,deaths,recovered)),columns = [\"Date\",\"Confirmed\",\"Deaths\",\"Recovered\"])\ndata3.head()","38cb011e":"from datetime import date, timedelta, datetime\ndata3[\"Date\"] = pd.to_datetime(data3[\"Date\"])\ndata3.info()","62c6ea2a":"fig = plt.figure(figsize = (12,8))\nsns.lineplot(data = data3[\"Confirmed\"])\nplt.title(\"title of plot\")\nplt.xlabel(\"days\")\nplt.ylabel(\"confirmed\")\nplt.show()","8e889465":"fig = plt.figure(figsize = (12,8))\nsns.scatterplot(x = data1[\"oldpeak\"], y = data1[\"trestbps\"])\nplt.title(\"scatterplot\")\nplt.show()","ce8632cc":"fig = plt.figure(figsize = (12,8))\nsns.barplot(x = data3_country.head(10)[\"Country\"],y = data3_country.head(10)[\"Confirmed\"])\nplt.xticks(rotation = 45)\nplt.title(\"barplot\")\nplt.show()","48c1ed58":"fig = plt.figure(figsize = (12,8))\nsns.distplot(data1[\"age\"],kde=False)\nplt.title(\"histogram\")\nplt.show()","32a097b2":"fig = plt.figure(figsize = (12,8))\nsns.distplot(data1[\"age\"])\nplt.title(\"histogram with kdeplot\")\nplt.show()","4b0c3fde":"fig = plt.figure(figsize = (12,8))\nsns.distplot(data1[\"age\"],hist = False)\nplt.title(\"kdeplot\")\nplt.show()","0be7c2c8":"fig = plt.figure(figsize = (12,8))\nsns.kdeplot(data1[\"age\"],shade = True)\nplt.title(\"kdeplot shade\")\nplt.show()","30a93e46":"fig = plt.figure(figsize = (12,8))\nsns.jointplot(x=data1[\"age\"], y=data1[\"thalach\"])\nplt.title(\"jointplot\")\nplt.show()","82bf9063":"fig = plt.figure(figsize = (12,8))\nsns.jointplot(x=data1[\"age\"], y=data1[\"thalach\"], kind=\"hex\")\nplt.title(\"jointplot hexagon\")\nplt.show()","226f719a":"fig = plt.figure(figsize = (12,8))\nsns.jointplot(x=data1[\"age\"], y=data1[\"thalach\"], kind=\"kde\")\nplt.title(\"jointplot kde\")\nplt.show()","61e17836":"fig = plt.figure(figsize = (12,8))\nsns.pairplot(data3)\nplt.title(\"pairplot\")\nplt.show()","2f822d8d":"fig = plt.figure(figsize = (12,8))\nsns.boxplot(x = data1[\"sex\"], y = data1[\"age\"], data=data1,hue = \"sex\")\nplt.title(\"boxplot\")\nplt.show()","52fa73f9":"fig = plt.figure(figsize = (12,8))\nsns.violinplot(y = data1[\"chol\"])\nplt.title(\"violinplot\")\nplt.show()","21657f75":"fig = plt.figure(figsize = (12,8))\nsns.violinplot(x=\"sex\", y=\"trestbps\", hue=\"sex\",\n                    data=data1, split=True)\nplt.title(\"violinplot split\")\nplt.show()","e1df1f90":"f,ax = plt.subplots(figsize=(12, 12))\nsns.heatmap(data1.corr(), annot=True,annot_kws = {\"size\": 12}, linewidths=0.5, fmt = '.2f', ax=ax)\nplt.title(\"heatmap\")\nplt.show()","980bf589":"fig = plt.figure(figsize = (12,8))\nsns.countplot(data1[\"sex\"])\nplt.title(\"countplot\")\nplt.show()","7a939786":"fig = plt.figure(figsize = (12,8))\nsns.swarmplot(x=\"slope\", y=\"trestbps\",hue=\"sex\", data=data1)\nplt.title(\"swarmplot\")\nplt.show()","d54700ff":"fig = plt.figure(figsize = (12,8))\nsns.lmplot(x=\"chol\", y=\"trestbps\", data=data1)\nplt.title(\"lmplot\")\nplt.show()","bad19a88":"fig = plt.figure(figsize = (12,8))\n\ncmap = sns.cubehelix_palette(dark=.3, light=.8, as_cmap=True)\nsns.scatterplot(x = data1[\"oldpeak\"],\n                y = data1[\"trestbps\"],\n                hue = data1[\"oldpeak\"],\n                size = data1[\"trestbps\"],\n                sizes = (20,200),\n                marker = \"s\")\nplt.title(\"styled scatter\")\nplt.show()\n","0a1db78e":"fig = plt.figure(figsize = (12,8))\nsns.barplot(x = data3_country.head(10)[\"Country\"],y = data3_country.head(10)[\"Confirmed\"],palette=\"Blues_d\")\nplt.xticks(rotation = 45)\nplt.title(\"styled barplot\")\nplt.show()","f3cd72ad":"fig = plt.figure(figsize = (12,8))\nsns.pairplot(data2.head(20),hue = \"Platform\",markers = \"D\")\nplt.title(\"pairplot\")\nplt.show()","d482ecf4":"f,ax = plt.subplots(figsize=(12, 12))\nsns.heatmap(data2.corr(), annot=True,annot_kws = {\"size\": 12},linecolor = \"black\", linewidths=0.5, fmt = '.2f', ax=ax,cmap = \"BrBG\")\nplt.title(\"styled heatmap\")\nplt.show()","2c776022":"<a id=\"1\"><\/a> <br>\n# Imports and Datasets","1193c753":"<a id=\"4\"><\/a> <br>\n# Conclusion\n* **If there is something wrong with this kernel please let me know in the comments.**\n\n### My other kernels: https:\/\/www.kaggle.com\/mrhippo\/notebooks\n* **References:**\n* https:\/\/seaborn.pydata.org\/\n* https:\/\/www.kaggle.com\/kanncaa1\/seaborn-tutorial-for-beginners","42f1da79":"<a id=\"2\"><\/a> <br>\n# Normal Plots","6aecf063":"<a id=\"3\"><\/a> <br>\n# Styled Plots","b96e204b":"# Introduction\n* This kernel is notes that I took for Seaborn. This is not a tutorial you can think that kernel as a cheatsheet for Seaborn. While coding a kernel open this in a new tab and copy paste. \n\n### This kernel is a part of a big series:\n* [Data Science Notes1: Matplotlib](https:\/\/www.kaggle.com\/mrhippo\/data-science-notes1-matplotlib)\n* Data Science Notes2: Seaborn \n* [Data Science Notes3: Plotly](https:\/\/www.kaggle.com\/mrhippo\/data-science-notes3-plotly?scriptVersionId=38663418)\n* [Data Science Notes4: Machine Learning (ML)]()\n* [Data Science Notes5: Deep Learning: ANN](https:\/\/www.kaggle.com\/mrhippo\/data-science-notes5-deep-learning-ann) \n* [Data Science Notes6: Deep Learning: CNN](https:\/\/www.kaggle.com\/mrhippo\/data-science-notes6-deep-learning-cnn) \n* [Data Science Notes7: Deep Learning: RNN and LSTM](https:\/\/www.kaggle.com\/mrhippo\/data-science-notes7-deep-learning-rnn-and-lstm)\n\n### This kernel will be updated\n\n## Content:\n* [Imports and Datasets](#1)\n* [Normal Plots](#2)\n* [Styled Plots](#3)\n* [Conclusion](#4)"}}