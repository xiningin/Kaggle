{"cell_type":{"57214237":"code","2a30f0f2":"code","38767227":"code","8ff0dafa":"code","f80f8170":"code","72d1d475":"code","206b7361":"code","d5fdd869":"code","4de2207f":"code","af9433e4":"code","c7957b3b":"code","722808bc":"code","66bfaec2":"code","803ef9db":"code","ef004f9d":"code","2cf2c574":"code","89310152":"code","4997b661":"code","96aa9d9a":"code","9b5c6eeb":"code","5d73f6ad":"code","bf2f4b09":"code","7af6ad50":"code","2094eb77":"code","b6559400":"code","430a1144":"code","af7b563b":"code","e251d073":"code","33152f36":"code","abae7754":"code","7a801933":"code","a072591e":"code","34e2e669":"code","460b001c":"markdown","4a2959af":"markdown","fcf95e93":"markdown","8fca46e9":"markdown","afd03547":"markdown","a90f0d07":"markdown","b6722f6b":"markdown","b1a2ffb3":"markdown","4b49cca4":"markdown","ad3a78d9":"markdown","cbc655a0":"markdown","d9a156f9":"markdown","c110a231":"markdown","e1cd4e7b":"markdown","fa015fd8":"markdown","96656c10":"markdown","1aec037e":"markdown","0f62c2e7":"markdown","ebbaca6a":"markdown","c69a0786":"markdown","898d3c70":"markdown","0582e5c6":"markdown","013d48c6":"markdown","88fbcd9d":"markdown","d159a7d9":"markdown","56bf93af":"markdown","9dd5f3e9":"markdown","47868983":"markdown","e2957ba1":"markdown","0f62260c":"markdown","ea3954a3":"markdown","9985fe97":"markdown","8eba02f1":"markdown","f92730a3":"markdown","3bacfcae":"markdown","f5df6f8a":"markdown","3d0d1051":"markdown","55b6452b":"markdown","3accbad3":"markdown","6704d70e":"markdown","1b374fa7":"markdown","77f244e3":"markdown","d9b12499":"markdown","649c1b94":"markdown","a45ffb0d":"markdown","1eaa8fa5":"markdown","4cfbf606":"markdown","627be44f":"markdown","2de08404":"markdown","931cbebc":"markdown","59ab3c77":"markdown","0a800fa2":"markdown","f2116bc2":"markdown","b7536526":"markdown","1d3f68f6":"markdown","c5588950":"markdown"},"source":{"57214237":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport glob\nimport matplotlib.pyplot as plt","2a30f0f2":"all_files = sorted(glob.glob('..\/input\/cyclistic-data-dec-20-nov-21\/*-divvy-tripdata.csv')) #sort by name\nall_files","38767227":"list = [pd.read_csv(filename) for filename in all_files]\nall_trips = pd.concat(list, ignore_index=True)","8ff0dafa":"all_trips.head()","f80f8170":"all_trips.shape","72d1d475":"all_trips.columns","206b7361":"all_trips.dtypes","d5fdd869":"all_trips.isnull().sum()","4de2207f":"all_trips = all_trips.drop_duplicates()\nall_trips.shape","af9433e4":"unique_rideable_type = all_trips['rideable_type'].unique()\nprint(f'Unique values in rideable_type column are: {unique_rideable_type}')","c7957b3b":"unique_rider_type = all_trips['member_casual'].unique()\nprint(f'Unique values in member_casual column are: {unique_rider_type}')","722808bc":"all_trips['started_at'] = pd.to_datetime(all_trips['started_at'])\nall_trips['ended_at'] = pd.to_datetime(all_trips['ended_at'])\nall_trips.dtypes","66bfaec2":"all_trips['trip_duration'] = ((all_trips['ended_at'] - all_trips['started_at']).dt.total_seconds())\/60 #in minutes\nall_trips.head()","803ef9db":"all_trips['trip_duration'] = pd.to_numeric(all_trips['trip_duration'])\nall_trips.dtypes","ef004f9d":"all_trips.loc[all_trips['trip_duration'] <= 0]","2cf2c574":"trips_dropped = all_trips.drop(all_trips[all_trips['trip_duration'] <= 0].index, inplace = False)\ntrips_dropped.shape","89310152":"trips_dropped['day_of_week'] = trips_dropped['started_at'].dt.day_name()\ntrips_dropped['hour_of_day'] = trips_dropped['started_at'].dt.hour\ntrips_dropped.head()","4997b661":"trips = trips_dropped.dropna(subset=['end_lat', 'end_lng'], inplace=False).copy()\ntrips[['end_lat','end_lng']].isnull().sum()","96aa9d9a":"def haversine_np(lat1, lng1, lat2, lng2):\n    \n    lon1, lat1, lon2, lat2 = map(np.radians, [lat1, lng1, lat2, lng2])\n\n    dlat = lat2 - lat1\n    dlng = lng2 - lng1\n\n    a = np.sin(dlat\/2.0)**2 + np.cos(lat1) * np.cos(lat2) * np.sin(dlng\/2.0)**2\n\n    c = 2 * np.arcsin(np.sqrt(a))\n    km = 6367 * c\n    return km\n","9b5c6eeb":"trips['ride_distance'] = haversine_np(trips['start_lat'],trips['start_lng'],trips['end_lat'],trips['end_lng'])\ntrips.head()","5d73f6ad":"trips['trip_duration'].describe()","bf2f4b09":"trips.groupby(['member_casual'])['trip_duration'].describe()","7af6ad50":"trips.groupby(['member_casual','day_of_week'])['trip_duration'].mean()","2094eb77":"trips['day_of_week'] = pd.Categorical(trips['day_of_week'], categories = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'], ordered = True)","b6559400":"trips_grouped = trips.groupby(['member_casual','day_of_week']).agg(\n    total_rides = ('ride_id', 'count'),\n    average_trip_duration = ('trip_duration', 'mean')\n)\ntrips_grouped = trips_grouped.reset_index()\ndisplay(trips_grouped)","430a1144":"rides = sns.catplot(x = 'day_of_week', y = 'total_rides', hue = 'member_casual', data = trips_grouped, kind = 'bar').set(title='Number of rides across different days of the week')\nrides.set_xticklabels(rotation = 30)","af7b563b":"duration = sns.catplot(x = 'day_of_week', y = 'average_trip_duration', hue = 'member_casual', data = trips_grouped, kind = 'bar').set(title='Average trip duration across different days of the week')\nduration.set_xticklabels(rotation = 30)","e251d073":"trips.groupby(['member_casual'])['ride_distance'].describe()","33152f36":"plt.figure(figsize=(15, 10))\nsns.displot(data=trips,x='ride_distance',hue='member_casual',col='member_casual')\nplt.xlim(0,20)\nplt.ylim(0,40000)\nplt.show()","abae7754":"bike_type = sns.countplot(x = 'rideable_type', hue = 'member_casual', data = trips).set(title='Type of bike used')","7a801933":"trips_start_stations = trips.groupby(['member_casual','start_station_name']).agg(\n    number_of_rides = ('start_station_name','count')\n).sort_values(\n    ['member_casual','number_of_rides'], ascending = False\n)\ntrips_start_stations = trips_start_stations.groupby('member_casual').head(5)\ndisplay(trips_start_stations)","a072591e":"trips_end_stations = trips.groupby(['member_casual','end_station_name']).agg(\n    number_of_rides = ('end_station_name','count')\n).sort_values(\n    ['member_casual','number_of_rides'], ascending = False\n)\ntrips_end_stations = trips_end_stations.groupby('member_casual').head(5)\ndisplay(trips_end_stations)","34e2e669":"hour = sns.countplot(x = 'hour_of_day', hue = 'member_casual', data = trips).set(title='Number of rides throughout the day')","460b001c":"Visualize the information with bar charts:","4a2959af":"**10. Calculate distance travelled for each trip.**","fcf95e93":"> **Import and merge datasets**","8fca46e9":"## **Introduction**","afd03547":"Members appear to have stronger preference for classic bikes compared to casual riders. However, additional information for example availability of certain bike types at certain stations or riders' reasons for choosing a bike type over another can be collected before making further explorations.  ","a90f0d07":"**7. Changing data type for start time and end time**","b6722f6b":"**9. Determine day of the week and hour of the day ride started**","b1a2ffb3":"> **List of columns**","4b49cca4":"The days of the week are not in the correct order. Arrange the days of the week by Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.","ad3a78d9":"Casual riders tend to use the bike-share service more during weekends (Sunday and Saturday) compared to annual members, who use the service consistently throughout the week. ","cbc655a0":"> There is no metadata about the dataset, however the column contents can be easily inferred from the column names:\n\n\n\n> *   ride_id: id for each trip\n*   rideable_type: type of bike\n*   started_at: start date and time of trip\n*   ended_at: end date and time of trip\n*   start_station_name: name of station at start of trip\n*   start_station_id: id of station at start of trip\n*   end_station_name: name of station at end of trip\n*   end_station_id: id of station at end of trip\n*   start_lat: latitude of starting station\n*   start_lng: longitude of starting station\n*   end_lat: latitude of ending station\n*   end_lng: longitude of ending station\n*   member_casual: type of rider\n\n\n\n\n","d9a156f9":"**Recommendations**","c110a231":"**5. Type of bike used**","e1cd4e7b":"> **Rider type**","fa015fd8":"**2. Ride distance for members and casual riders.**","96656c10":"There are no duplicated rows.","1aec037e":"> **Count null values in each column**","0f62c2e7":"Cyclistic's director of marketing believes the company\u2019s future success depends on maximizing the number of annual memberships, and can be achieved by converting casual riders into members.  In order to come up with a marketing strategy for converting casual riders into members, the marketing team first needs to understand how annual members and casual riders differ.\n","ebbaca6a":"## **Share Phase**","c69a0786":"> **Statistical information about trip duration by rider type**","898d3c70":"Find out how annual members and casual riders use Cyclistic bikes differently.","0582e5c6":"Distance for each trip can be calculated using the start station coordinates(latitude and longitude) and end station coordinates(latitude and longitude) by the Haversine formula.","013d48c6":"Drop rows where end_lat and end_lng are null.","88fbcd9d":"Casual riders use the bike-share service for longer bike trips for all days of the week while annual members use them for shorter bike trips.","d159a7d9":"It appears that most members tend to take shorter trips compared to casual riders. For members, there is also a large number where the ride distance is equal to zero, which may indicate that they start and end their rides at the same station. \n\nHowever, distance may not be as representative as the trip duration as it only measures the distance from one station to another, and does not actually reflect the actual kilometres cycled by the riders.","56bf93af":"> **Data types of each column**","9dd5f3e9":"1. Cyclistic's marketing team can consider introducing memberships for weekend use.\n2. They can also introduce memberships with certain amount of free rides during weekdays. \n3. Using information about popular stations for casual riders and peak riderships in the evening, the marketing team can hold their campaigns at more specific times and places.","47868983":"> **Collect file paths using glob**","e2957ba1":">The data set has 5,479,096 rows and 13 columns.","0f62260c":"> **Analyze trips by rider type and day of the week**","ea3954a3":"### Scenario","9985fe97":"Remove rows where duration travelled is less than or equal to 0 seconds. ","8eba02f1":"\n\n> **Dimensions of the data**","f92730a3":"## **Ask Phase**:  Business Task","3bacfcae":"## **Process Phase**\n","f5df6f8a":"## **Analyze Phase**","3d0d1051":"\n\n> **Rideable type**\n\n\n\n","55b6452b":"## **Prepare Phase**: Data Source","3accbad3":"**Key Findings**","6704d70e":"**6. Most popular start and end stations for members and casual riders.**","1b374fa7":"**4. View information about the data set.**","77f244e3":"**7. Time of the day**","d9b12499":"There are two peaks in ridership for members which are in the morning (6-9 am) and in the evening (4-6pm). There are significantly more members in the evening.\n\nCasual ridership peaks towards the evening as well.","649c1b94":"Check for any duration travelled that is less than or is equal to 0 minutes and 0 seconds.","a45ffb0d":"The data was processed for analysis using Python.The data cleaning process is documented below:","1eaa8fa5":"1. Casual riders tend to use the bike-share service more during weekends (Sunday and Saturday) compared to annual members, who use the service more during weekdays. \n2. Casual riders use the bike-share service for longer bike trips for all days of the week while annual members use them for shorter bike trips.","4cfbf606":"> **Mean of trip duration by different rider types for different days of the week**","627be44f":"# Cyclistic Case Study","2de08404":"**1. Import libraries.**","931cbebc":"For this analysis, 12 months of riders' trip data ranging from December 2020 to November 2021 was used. Each month is captured in a separate .csv file and the riders' personally identifiable information are omitted. The dataset used was obtained from this [link](https:\/\/divvy-tripdata.s3.amazonaws.com\/index.html) which has been made available by Motivate International Inc. under this [license](https:\/\/ride.divvybikes.com\/data-license-agreement).","59ab3c77":"**6. Check the unique values in columns**","0a800fa2":"**2. Import all necessary datasets and merge all .csv files into one dataset**","f2116bc2":"**1. Trip duration for members and casual riders.**","b7536526":"**8. Find duration travelled in minutes using bike**\n\n","1d3f68f6":"This case study was completed as a capstone project for the Google Data Analytics Professional Certificate. This case study involves a fictional bike-share company, Cyclistic.","c5588950":"**5. Remove duplicate rows**"}}