{"cell_type":{"eaf155df":"code","1edd6de4":"code","6c1c63ab":"code","7e5f2276":"code","9073a173":"code","b07493f3":"code","cb9a8650":"code","1e7cf9c2":"code","c3c9b69a":"code","d65248c4":"code","e52deb09":"code","daabbace":"code","39a43005":"code","79481438":"code","291a48eb":"code","588c0faa":"code","7a7e23b1":"code","ff16cc1c":"code","46a1f0a8":"code","fb732fa6":"code","5673374e":"code","d4c0ed1a":"code","6e68dd5c":"code","666d6ddb":"code","117f1821":"code","53e78aa3":"code","d40e5773":"code","e6af6302":"code","94a54907":"code","14824d17":"code","29322299":"code","36061b2a":"code","4f56b115":"markdown","808e77a1":"markdown","ff3a9c06":"markdown","1e880540":"markdown","18f1292c":"markdown","a1926075":"markdown","fd8660bc":"markdown","fdc20b19":"markdown","3c1308dd":"markdown","5acd1890":"markdown","6fa8b221":"markdown","1e5e9c82":"markdown","7fa5d5c1":"markdown","0d9060d2":"markdown","b4bf891b":"markdown","a745087d":"markdown","f6fe266e":"markdown","2c7fdd6f":"markdown","5af3b81e":"markdown","faaf5514":"markdown","5c98be90":"markdown","cedcedb1":"markdown","f3ed6216":"markdown","248a4d06":"markdown","ca22050b":"markdown","b7e9d375":"markdown","9061228d":"markdown","62d4c94f":"markdown"},"source":{"eaf155df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1edd6de4":"df = pd.read_csv('..\/input\/montcoalert\/911.csv')","6c1c63ab":"df.info()","7e5f2276":"df.head(5)","9073a173":"del df['e']","b07493f3":"from datetime import datetime\n\ndf['timeStamp'] = pd.to_datetime(df['timeStamp'])\ndf.info()","cb9a8650":"import seaborn as sns\nimport matplotlib.pyplot as plt\n","1e7cf9c2":"df['zip'].value_counts().head(5)","c3c9b69a":"df['twp'].value_counts().head(5)","d65248c4":"df['month'] = df['timeStamp'].apply(lambda m: m.month)\ndf['month'].head()\n\n# Retrieve the month from timeStamp as a new column","e52deb09":"df['month'].value_counts().head()","daabbace":"sns.countplot(df['month'])","39a43005":"df['day'] = df['timeStamp'].apply(lambda d: d.weekday())\ndf['day'].head()","79481438":"dayOfWeek = {0:'Sun', 1:'Mon', 2:'Tue', 3:'Wed', 4:'Thur', 5:'Fri', 6:'Sat'}\ndf['day'] = df['day'].map(dayOfWeek)","291a48eb":"sns.countplot(df['day'])","588c0faa":"df['hour'] = df['timeStamp'].apply(lambda i: i.hour)\ndf['hour'].head()","7a7e23b1":"hourOfDay = df.groupby('hour').count()\nsns.countplot(df['hour'])","ff16cc1c":"df['Reason'] = df['title'].apply(lambda i: i.split(':')[0])\ndf['Reason'].head(5)","46a1f0a8":"sns.countplot(df['Reason'])","fb732fa6":"df.groupby(['day','Reason']).count()['lat']","5673374e":"sns.countplot(x='day',data=df,hue='Reason',palette='viridis')","d4c0ed1a":"df['Year'] = df['timeStamp'].apply(lambda y:y.year)\ndf['Year'].head()","6e68dd5c":"df.groupby(['Year','Reason']).count()['lat']","666d6ddb":"plt.figure(figsize=(10,7))\nsns.countplot(x='Reason',data=df,hue='Year',palette='viridis')","117f1821":"df[df['Reason'] == 'EMS'].groupby('Year').count()['lat'].plot()\nplt.title('Trends of EMS by Year')","53e78aa3":"df[df['Reason'] == 'Fire'].groupby('Year').count()['lat'].plot()\nplt.title('Trends of Fire by Year')","d40e5773":"df[df['Reason'] == 'Traffic'].groupby('Year').count()['lat'].plot()\nplt.title('Trends of Traffic by Year')","e6af6302":"year = df.groupby('Year').count()\nsns.lineplot(data=year.reset_index(), x='Year', y='lat')\nplt.title('The trends of number of 911 calls by year')\n","94a54907":"season = {3:'spring',4:'spring',5:'spring',6:'summer',7:'summer',8:'summer',9:'autumn',10:'autumn',11:'autumn',12:'winter',1:'winter',2:'winter'}\n\ndf['season'] = df['month'].map(season)","14824d17":"yearOfSeason = df.groupby(['season','Year']).count()['lat'].unstack()\nsns.heatmap(yearOfSeason.dropna(axis=1),cmap='coolwarm')","29322299":"dayHour = df.groupby(by=['day','hour']).count()['Reason'].unstack()\ndayHour.head()","36061b2a":"plt.figure(figsize=(10,7))\nsns.heatmap(data=dayHour, cmap='coolwarm')","4f56b115":"According to the heatmap above, we could see there has a pattern that indicates the association between hours and the number of 911 calls. For example, night and morning of the number of 911 calls are only a few, but when afternoon, the number of 911 calls will become more and more.","808e77a1":"Before analyst or cleaning the data, lets take a look of the information of data first","ff3a9c06":"**5. Which hour has the highest 911 calls?**","1e880540":"**9. The trends of each reason in all years**","18f1292c":"**1.What are the top 5 zip codes for the number of 911 calls?**","a1926075":"**10. Find the trends of the total number of 911 calls by year.**","fd8660bc":"But before that, according details of data set that provided by author, the variable e actually is a useless variable, so I will delete the variable e first.","fdc20b19":"According to the results above, we could see some variables have null values. Besides that, the data type of variable timeStamp is object, to let the variable timeStamp could be easier to use and analyst, I will convert it to Date data type","3c1308dd":"**2. What are the top 5 townships(twp) for number of 911 calls?**","5acd1890":"According to the countplot above, the EMS is the most common reason of 911 calls.","6fa8b221":"Thursay has the highest 911 calls in total.","1e5e9c82":"# In this notebook, the following tasks that I will do are:\n\n**Data Cleaning**\n1. Remove useless data\n2. Change the data type of timeStamp from Object to Date\n\n**Data Analysis to answer several Questions that may find insight:**\n1. What are the top 5 zip codes for the number of 911 calls?\n1. What are the top 5 townships(twp) for the number of 911 calls?\n1. Which month has the highest 911 calls?\n1. Which day of the week has the highest 911 calls?\n1. Which hour has the highest 911 calls?\n1. What is the most common reason for a 911 call?\n1. The total number of each reason for 911 calls for each day of a week in all years.\n1. The number of 911 calls for each reason yearly\n1. The trends of each reason in all years\n1. Find the trends of the total number of 911 calls by year.\n1. Does Season have an association with the number of 911 calls?\n1. Does the hours have any association with the number of the 911 call?","7fa5d5c1":"**12. Does the hours has any association with the number of 911 call?**","0d9060d2":"According to the heatmap above, we can't see any pattern that indicate there has a association between the season and the number of 911 calls.","b4bf891b":"**6. What is the most common reason for a 911 call?**","a745087d":"**4. Which day of the week has the highest 911 calls?**","f6fe266e":"**3. Which month has the highest 911 calls?**","2c7fdd6f":"****1. Remove meaningless data****","5af3b81e":"# Data Analysis","faaf5514":"# Data Cleaning","5c98be90":"**7. The total number of each reason for 911 calls for each day of a week in all years.**","cedcedb1":"According to the results above, we could find 5pm has the highest 911 calls.","f3ed6216":"**11.  Does Season have an association with the number of 911 calls for each reason?**","248a4d06":"According to the result above, we could find those five zip code are the top five highest number of 911 calls","ca22050b":"**8. The number of 911 calls for each reason yearly**","b7e9d375":"2. Change the data type of TimeStamp from Object to Date","9061228d":"According to the results above, January has the highest number of 911 calls in total. Besides that, June and March also very close to the highest number.","62d4c94f":"As we can see, LOWER MERION, ABINGTON, NORRISTOWN, UPPER MERION and CHELTENHAM are the top 5 townships in the number of 911 calls."}}