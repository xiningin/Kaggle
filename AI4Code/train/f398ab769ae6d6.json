{"cell_type":{"03485ac8":"code","8ccd7603":"code","6204a59b":"code","8f2ab2be":"code","798af790":"code","6ad5527d":"code","ca74a335":"code","13bd54ca":"code","72abf194":"code","62ccfa39":"code","abe3b8f2":"code","5e91bf05":"code","d273bb80":"code","972499a0":"code","1697dcae":"code","a64818c3":"code","bafad893":"code","aac88800":"code","8a286058":"markdown","f7124ed0":"markdown","e89f9199":"markdown","96c36faf":"markdown","98a45cd8":"markdown","514624f1":"markdown","ebb7763e":"markdown","758da02b":"markdown","0f5b48ed":"markdown","0cbc7193":"markdown","32662df9":"markdown","5e49f102":"markdown","e4657efb":"markdown","cabc1672":"markdown","2188cddf":"markdown","806a449f":"markdown","8e7ed1e6":"markdown","b97771f5":"markdown","0d964e02":"markdown","cc817cd9":"markdown","73aa28b6":"markdown"},"source":{"03485ac8":"%%HTML\n<style type=\"text\/css\">\n\n\ndiv.h1{\n    font-family: Helvetica, sans serif;\n    font-weight: bold;\n    font-style: italic;\n    color: white;\n    background-color: #76d33c;\n    background-image: linear-gradient(120deg, #0077c8, #5dcfda, #76d33c);\n    padding: 8px; \n    padding-right: 300px; \n    font-size: 25px; \n    max-width: 1500px; \n    margin-top: 10px;\n    margin-bottom:4px;\n}\n                                      \ndiv.h2{\n    font-family: Verdana, sans serif;\n    color: #0077c8;\n    font-weight: ultralight;\n    font-size: 21px; \n    margin-top: 10px; \n    margin-bottom: 2px;\n}\n                                      \ndiv.h3{\n    font-family: Verdana, sans serif;\n    color: #76d33c;\n    font-weight: ultralight;\n    font-size: 19px; \n    margin-top: 10px; \n    margin-bottom: 4px;\n}\n\ndiv.h4{\n    font-family: Verdana, sans serif;\n    color: #5dcfda;\n    font-weight: ultralight;\n    font-size: 16px; \n    margin-top: 1px; \n    margin-bottom: 4px;\n    -webkit-text-stroke-width: 0.4px;\n    -webkit-text-stroke-color: #3eaa7c;\n}\n\np.statement{\n    font-family: Verdana, sans serif;\n    color: #3eaa7c;\n    font-size: 17px;\n}\n                                      \np.para{\n    font-size: 16px;\n    text-align: justify;\n    text-justify: auto;\n}\n\np{\n    font-size: 16px;\n}\n                                      \nli{\n    font-size: 16px;\n    text-align: justify;\n    text-justify: auto;\n}\n<\/style>","8ccd7603":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom plotly.graph_objs.layout import YAxis,XAxis,Margin\n\nimport re\nimport os\nimport datetime\nimport gc\nfrom IPython.display import HTML\n\npd.options.mode.chained_assignment = None\n\n%matplotlib inline","6204a59b":"# importing all csv files from engagement folder as one dataframe\n\nstarting_directory = os.getcwd()    # to get back to default directory\n\npath = \"..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\"\nos.chdir(path)\n\nlis = list()\nfor file in os.listdir():\n    df = pd.read_csv(file)\n    file_id = file.split(\".\")[0]\n    df['district_id'] = file_id\n    lis.append(df)\n\nengage_df = pd.concat(lis)\n\nos.chdir(starting_directory)\n\n\n# reading dataframe\nengage_df.reset_index(inplace=True)\nengage_df.drop(\"index\", axis=1, inplace=True)\n\nengage_df.info() ","8f2ab2be":"def null_count(df, col_list):\n    for col in col_list:\n        null_v = df[col].isnull().sum()\n        print(f\"There are {null_v} null values in column '{col}'\")\n        \ndef check_null_dup(df):\n    null_col_list = list()\n    print(\"Missing Value Percentage :\")\n    for col in df.columns:\n        value = np.mean(df[col].isnull())\n        if value == 0: continue            # ignoring columns that do have any missing values    \n        null_col_list.append(col)\n        print(f\"{col}\\t-\\t{value}%\")\n    if len(df[df.duplicated()]) == 0:\n        print(\"\\nDataframe contains no duplicate values!\\n\")\n    else:\n        dup = df[df.duplicated()]\n        print('Found following duplicated rows\\n')\n        return dup\n    null_count(df, null_col_list)\n\ncheck_null_dup(engage_df)","798af790":"path = \"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\"\nproduct_df = pd.read_csv(path)\n\n\n# removing ip_id null value rows and changing dtype to int\nnull_index = engage_df[engage_df[\"lp_id\"].isnull()].index\nengage_df.drop(null_index, inplace=True)\n\n# replacing pct_access null values with mean of that column\nengage_df['pct_access'].fillna(np.mean(engage_df['pct_access']), inplace=True)\n\n# handling engagement_index missing values\nmiss_val = engage_df[engage_df[\"engagement_index\"].isnull()][\"lp_id\"].unique()\nuniq_id = product_df[\"LP ID\"].unique()\n\nid_avg = dict()\n\nfor val in miss_val:\n    if val in uniq_id:\n        avg = engage_df[engage_df[\"lp_id\"] == val][\"engagement_index\"].mean()\n        id_avg[val] = avg\n        \n# this will map average engagement_index for the product id's that are present in \n# product_info.csv respectively\nengage_df.engagement_index = engage_df[\"engagement_index\"].fillna(engage_df[\"lp_id\"].map(id_avg))\n\n# removing missing values whose product id's are not present in product_info.csv\nnull_index = engage_df[engage_df[\"engagement_index\"].isnull()].index\nengage_df.drop(null_index, inplace=True)\n\n\n# changing dtypes\nengage_df.time = pd.to_datetime(engage_df[\"time\"])\nengage_df.district_id = engage_df[\"district_id\"].astype(\"int64\")\nengage_df.lp_id = engage_df[\"lp_id\"].astype(\"int64\")","6ad5527d":"# to get the overall unique product engagement index throughout 2020, we will get the average engagment index per day\n# this average is calculated for all the unique product ids and the districts they are used in\n\nengage_avg_perday = engage_df.groupby([\"time\"], as_index=False).agg(np.mean)\nengage_avg_perday.rename(columns={\"time\": \"Date\"}, inplace=True)\n\nfig = px.line(data_frame=engage_avg_perday, x=\"Date\", y=\"engagement_index\",\n              title=\"Overall Product Engagement per Day - 2020\")\n\nfig.update_xaxes(rangeslider_visible=True)\nfig.update_yaxes(gridcolor=\"lightgray\")\nfig.update_layout(\n    font=dict(family=\"Verdana\"),\n    title=dict(font=dict(size=21)),\n    margin=dict(b=0, l=0, r=0),\n    font_family=\"Verdana\",\n    xaxis_title=\"Date\",\n    yaxis_title=\"Total Page-Load Events\",\n    yaxis=dict(titlefont=dict(size=17),\n        ticks=\"outside\",\n        tickfont=dict(\n            family=\"Verdana\",\n            size=12,\n            color=\"rgb(82, 82, 82)\",\n        )),\n    plot_bgcolor=\"white\",\n    xaxis=dict(\n        rangeselector=dict(\n            buttons=list([\n                dict(count=1,\n                     label=\"1m\",\n                     step=\"month\",\n                     stepmode=\"backward\"),\n                dict(count=6,\n                     label=\"6m\",\n                     step=\"month\",\n                     stepmode=\"backward\"),\n                dict(step=\"all\")\n            ])\n        ),\n        titlefont=dict(size=17),\n        showline=True,\n        showgrid=False,\n        showticklabels=True,\n        linecolor=\"rgb(204, 204, 204)\",\n        linewidth=2,\n        ticks=\"outside\",\n        tickfont=dict(\n            family=\"Verdana\",\n            size=12,\n            color=\"rgb(82, 82, 82)\",\n        ),),\n)\n\nfig.add_vrect(x0=\"2020-06-08\", x1=\"2020-08-20\", \n              annotation_text=\"Summer Break\", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfig.add_vrect(x0=\"2020-11-25\", x1=\"2020-11-29\", \n              annotation_text=\"TG\", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfig.add_vrect(x0=\"2020-12-21\", x1=\"2020-12-31\", \n              annotation_text=\"CB\", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfig.add_vrect(x0=\"2020-04-09\", x1=\"2020-04-13\", \n              annotation_text=\"SB\", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfig.add_vline(x=datetime.datetime(2020,2,9).timestamp() * 1000,\n              annotation_text=\"SC\",opacity=0.50,\n              annotation_position=\"top right\", line_dash=\"dash\")\n\ndel engage_avg_perday\ngc.collect()\nfig.show()\n","ca74a335":"access_avg = engage_df.groupby(engage_df[\"time\"].dt.month).agg(np.mean).round(decimals=2)\nmonth = []\n\nfor num in access_avg.index.values:\n    num = str(num)\n    datetime_object = datetime.datetime.strptime(num, \"%m\")\n    mname = datetime_object.strftime(\"%b\")\n    month.append(mname)\n    \nplt.figure(figsize=(15,8))\nplt.style.use(\"seaborn\")\n\nfig = sns.barplot(data=access_avg, x=month, y=\"pct_access\",\n           palette=[\"#76d33c\" if x >= 0.55 else 'lightgray' for x in access_avg.pct_access])\nfig.bar_label(fig.containers[0], size=11, family=\"Verdana\")\nfig.axhline(np.mean(access_avg[\"pct_access\"]), ls=\"--\", color=\"#0077c8\")\n\nplt.title(\"Students accessing at least one page-load event in a day\", size=20, family=\"Verdana\", pad=20)\nplt.ylabel(\"Student Percentage\",size=16, labelpad=20, family=\"Verdana\")\nplt.xlabel(\"Month\",size=16, labelpad=20, family=\"Verdana\")\nplt.xticks(size=12, family=\"Verdana\")\nplt.yticks([])\n\naxes = plt.gca()\naxes.set_facecolor(\"white\")\n\ndel access_avg\ngc.collect()\nplt.show()\n\n\n","13bd54ca":"df = pd.read_csv(\"..\/input\/extra-datasets\/pct_data.csv\")\n\ndf.drop(\"TimeFrame\", axis=1, inplace=True)\ndf.replace(\"S\", 0, inplace=True)\ndf[\"Only Device Data\"] = df[\"Only Device Data\"].astype(\"float64\")\ndf = df[df[\"Location\"] == \"United States\"]\n\nmonth = []\nfor val in df[\"Month\"]:\n    val = datetime.datetime.strptime(val, \"%b, %Y\")\n#     val = val.strftime('%m-%Y')\n    month.append(val)\ndf[\"Month\"] = month\n\ndf = df.groupby([\"Month\"], as_index=False).agg(np.mean).round(decimals=2)\n\n\ntitle = \"\"\"Household percentage in which facilities are available to children<br>for educational purposes \n(K-12 Students)\"\"\"\nlabels = [\"Internet\", \"Devices\", \"Internet & Devices\"]\ncolors = [\"lightgray\", \"gray\", \"#0077c8\"]\n\nmode_size = [8, 8, 12]\nline_size = [2, 2, 4]\n\nfig = go.Figure()\n\nx_data = np.vstack((np.arange(\"2020-04\",\"2021-03\", dtype=\"datetime64[M]\"),)*3)\ny_data = np.array([df[\"Only Internet Data\"]*100, df[\"Only Device Data\"]*100, \n                   df[\"Both Device & Internet\"]*100]).astype(\"int64\")\n\nfor i in range(0, 3):\n    fig.add_trace(go.Scatter(x=x_data[i], y=y_data[i], mode=\"lines\",\n        name=labels[i],\n        line=dict(color=colors[i], width=line_size[i]),\n        connectgaps=True,\n    ))\n    \n      # endpoints\n    fig.add_trace(go.Scatter(\n        x=[x_data[i][0], x_data[i][-1]],\n        y=[y_data[i][0], y_data[i][-1]],\n        mode=\"markers\",\n        marker=dict(color=colors[i], size=mode_size[i])\n    ))\n\nfig.update_layout(\n    xaxis=dict(\n        showline=True,\n        showgrid=False,\n        showticklabels=True,\n        linecolor=\"rgb(204, 204, 204)\",\n        linewidth=2,\n        ticks=\"outside\",\n        tickfont=dict(\n            family=\"Verdana\",\n            size=12,\n            color=\"rgb(82, 82, 82)\",\n        ),\n    ),\n    yaxis=dict(\n        showgrid=False,\n        zeroline=False,\n        showline=False,\n        showticklabels=False,\n    ),\n    yaxis_range=[75,95],\n    autosize=True,\n    margin=dict(\n        autoexpand=True,\n        l=170,\n        r=20,\n        t=110,\n    ),\n    showlegend=False,\n    plot_bgcolor=\"white\"\n)\n\nannotations = []\n\n# Adding labels\nfor y_trace, label, color in zip(y_data, labels, colors):\n    # labeling the left_side of the plot\n    annotations.append(dict(xref=\"paper\", x=0.05, y=y_trace[0],\n                                  xanchor=\"right\", yanchor=\"middle\",\n                                  text=label + \" {}%\".format(y_trace[0]),\n                                  font=dict(family=\"Verdana\",\n                                            size=16),\n                                  showarrow=False))\n    # labeling the right_side of the plot\n    annotations.append(dict(xref=\"paper\", x=0.95, y=y_trace[10],\n                                  xanchor=\"left\", yanchor=\"middle\",\n                                  text=\"{}%\".format(y_trace[10]),\n                                  font=dict(family=\"Verdana\",\n                                            size=16),\n                                  showarrow=False))\n    \n# Title\nannotations.append(dict(xref=\"paper\", yref=\"paper\", x=0.0, y=1.1,\n                              xanchor=\"left\", yanchor=\"bottom\",\n                              text=title,\n                              font=dict(family=\"Helvetica\",\n                                        size=20,\n                                        color=\"rgb(37,37,37)\"),\n                              showarrow=False))\n# Source\nannotations.append(dict(xref=\"paper\", yref=\"paper\", x=0.5, y=-0.25,\n                              xanchor=\"center\", yanchor=\"bottom\",\n                              text=\"\"\"Source: Population Reference Bureau analysis of the U.S. Census Bureau, Household Pulse Survey, 20-21<br>Collected From: Kids Count Data Center\"\"\",\n                              font=dict(family=\"Verdana\",\n                                        size=12,\n                                        color=\"rgb(150,150,150)\"),\n                              showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\nfig.show()","72abf194":"pce = pd.read_csv(\"..\/input\/extra-datasets\/Personal Consumption Expenditure.csv\")\npce.DATE = pd.to_datetime(pce.DATE)\npce.rename(columns={\"PCE\": \"expenditure\"}, inplace=True)\npce.columns = pce.columns.str.lower()\n\nx_data = pce.date\ny_data = pce.expenditure\n\nannotations = []\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=x_data, y=y_data, mode=\"lines+markers\", line=dict(color=\"#76d33c\", width=4),\n                        marker=dict(size=7, color=\"#0077c8\")))\nvrect = fig.add_vrect(x0=\"2020-02-01\", x1=\"2020-04-01\", \n              annotation_text=\"Recession\", annotation_position=\"top right\",\n              fillcolor=\"#467e24\", opacity=0.25, line_width=0)\nfig.update_yaxes(gridcolor=\"lightgray\")\n\n# Source\nannotations.append(dict(xref=\"paper\", yref=\"paper\", x=0.5, y=-0.25,\n                              xanchor=\"center\", yanchor=\"bottom\",\n                              text=\"\"\"Source: U.S. Bureau of Economic Analysis, Personal Consumption Expenditures [PCE], retrieved from FRED, <br>Federal Reserve Bank of St. Louis\"\"\",\n                              font=dict(family=\"Verdana\",\n                                        size=12,\n                                        color=\"rgb(150,150,150)\"),\n                              showarrow=False))\n\nfig.update_layout(plot_bgcolor=\"white\",\n                  margin=dict(autoexpand=True, b=85, r=0, l=0),\n                  yaxis_range=[6000, 16000],\n                  yaxis_title=\"Dollars (In Billions)\",\n                  annotations=annotations,\n                  title={\n                    'text': \"Personal Consumption Expenditure (PCE)\",\n                    'y':0.9,\n                    'x':0.5,\n                    'xanchor': 'center',\n                    'yanchor': 'top'},\n                  xaxis=dict(\n                        showline=True,\n                        showgrid=False,\n                        showticklabels=True,\n                        linecolor=\"rgb(204, 204, 204)\",\n                        linewidth=2,\n                        ticks=\"outside\",\n                        tickfont=dict(\n                            family=\"Verdana\",\n                            size=12,\n                            color=\"gray\",\n                        ),\n    )\n                 )\n\nfig.update_yaxes(title_font_size=16)\n\nfig.show()","62ccfa39":"product_df.columns = product_df.columns.str.lower()\nproduct_df.rename(columns={\"lp id\": \"lp_id\"}, inplace=True)\nproduct_df.lp_id = product_df.lp_id.astype(\"object\")\n\nfor i in product_df.columns.values:\n    if i == \"product\":\n        product_df.rename(columns={\"product\": \"product name\"}, inplace=True)\n\nuniq_per = pd.merge(engage_df, product_df[[\"lp_id\", \"product name\"]], how=\"left\", on=\"lp_id\")\nuniq_per.district_id = uniq_per.district_id.astype(\"object\")\nuniq_per = uniq_per.groupby([uniq_per.time.dt.month, \"product name\"]).agg(np.mean).round(decimals=2).reset_index()\n\n\n\ntop_eleven_engage = list()\ncount = 0\nmonth_num = 1\n\nuniq_per_engage = uniq_per.sort_values(by=[\"time\", \"engagement_index\"], ascending=False)\n\nwhile True:\n    if month_num == 13: break\n    for month, prod_name, pct_access, e_index in uniq_per_engage.values:\n        if month == month_num:\n            top_eleven_engage.append([month, prod_name, pct_access, e_index])\n            count += 1\n            if count == 11:\n                month_num += 1\n                count = 0\n                continue\n\ndiag = pd.DataFrame(top_eleven_engage, columns=[\"month\", \"product\", \"pct_access\",\"e_index\"])\nproduct_df.rename(columns={\"product name\": \"product\"}, inplace=True)\ndiag = pd.merge(diag, product_df[[\"product\", \"sector(s)\", \"primary essential function\"]], how=\"left\", on=\"product\")\n\n# constraining product names to not go out of margin\ndiag[\"product\"].replace(\"Seesaw : The Learning Journal\", \"Seesaw\", inplace=True)\ndiag[\"product\"].replace(\"Lexia Core5 Reading\", \"Lexia Core5\", inplace=True)\n\ndef apply_period(x):\n    if x == 1:\n        return \"January\"\n    elif x == 2 or x == 3 or x == 4:\n        return \"February - April\"\n    elif x == 5 or x == 6 or x == 7 or x == 8:\n        return \"May - August\"\n    else:\n        return \"September - December\"\n    \ndiag[\"period\"] = diag[\"month\"].apply(apply_period)\n\nfig = px.bar(data_frame=diag.sort_values(by=[\"month\", \"e_index\"], ascending=True), x=\"e_index\", y=\"product\", orientation=\"h\",\n             range_x=[1, 20000], animation_frame=\"period\", animation_group=\"product\", color_discrete_sequence =[\"#3eaa7c\"],\n             template=\"seaborn\", hover_name=\"pct_access\", hover_data={\"e_index\": True, \"period\": True, \"product\": True,\n                                                                     \"primary essential function\": True, \"sector(s)\":True})\n\nfig.update_layout(margin=dict(autoexpand=True, b=150, l=150, t=60, r=100), \n                  autosize=True, height=650, plot_bgcolor=\"white\",\n                  yaxis=dict(\n                      showline=True,\n                      linewidth=3,\n                      title=\" \",\n                      ticks=\"outside\",\n                      tickfont=dict(\n                            family=\"Verdana\",\n                            size=15,\n                        )\n                  ),\n                  xaxis=dict(\n                        title=dict(text=\"Engagement\", font=dict(size=14)),\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor=\"rgb(204, 204, 204)\",\n                        linewidth=2,\n                        ticks=\"outside\",\n                        tickfont=dict(\n                            family=\"Verdana\",\n                            size=13,\n                            color=\"gray\",\n                        ),\n                  ),\n                 title=dict(text=\"Top 11 most engaged products in respective unique periods\", y=0.99, x=0.5, xanchor=\"center\", \n                            yanchor=\"top\", font=dict(size=21, family=\"Verdana\")),\n                 hoverlabel=dict(font=dict(color=\"white\", size=12, family=\"Verdana\"))\n                 )\n\nfig.update_yaxes(automargin=False, nticks=11, position=1)\nfig.update_xaxes(gridcolor=\"lightgray\")\nfig.layout.updatemenus[0].buttons[0].args[1][\"frame\"][\"duration\"] = 2500\nfig.add_hline(y=5.5, annotation=dict(text=\"Separating top 5\", opacity=0.55), \n              opacity=0.55, line=dict(dash=\"dash\", width=1))\n\n# changing hoverlabels\ncustom_hover = \"<b>Access Percentage = %{hovertext}%<\/b><br><br>period = %{customdata[0]}<br>e_index = %{x}<br><b>Primary Essential Function<\/b> = %{customdata[1]}<extra><\/extra>\"\nfig.update_traces(hovertemplate=custom_hover)\nfor frame in fig.frames:\n    frame.data[0].hovertemplate = custom_hover\n\ndel [uniq_per, uniq_per_engage]\ngc.collect()\nfig.show()\n","abe3b8f2":"# we will now see how engagement index is divided by the basic functionality of the products for the unique periods\n\npef_eng = pd.merge(engage_df[[\"time\", \"lp_id\", \"pct_access\", \"engagement_index\"]], \n         product_df[[\"lp_id\", \"primary essential function\"]], how=\"left\", on=\"lp_id\")\npef_eng.time = pef_eng.time.dt.month\npef_eng.rename(columns={\"primary essential function\": \"pef\"}, inplace=True)\n\n# it turns out that the total missing percentage for the pef values is less than 0.5% hence we can remove the rows completely without\n# affecting the integrity of our data\npef_eng.dropna(inplace=True)\n\n# this will get the first layer of our product's basic functionality (i.e, the main layer in which the products are divided)\npef_cat_list = list()\nfor val in pef_eng[\"pef\"]:\n    ans = re.findall(\"(^[A-Z\/.]*) -\", val)[0]\n    pef_cat_list.append(ans)\npef_eng[\"pef_main\"] = pef_cat_list\n\n# getting the mean data for the plot\npef_diag = pef_eng.groupby([\"time\", \"pef_main\", \"pef\"]).agg(np.mean).reset_index()\npef_diag[\"period\"] = pef_diag[\"time\"].apply(apply_period)\n\n# this will edit the pef column to display only its sub categories\npef_sub_list = list()\nfor val in pef_diag[\"pef\"]:\n    ans = re.findall(\"^[A-Z\/.]* -(.*)\", val)[0]\n    pef_sub_list.append(ans)\npef_diag[\"pef\"] = pef_sub_list\npef_diag.pct_access = pef_diag.pct_access.round(decimals=2)\n\n# to get single month names\nmonth = list()\nfor num in pef_diag.time.values:\n    num = str(num)\n    datetime_object = datetime.datetime.strptime(num, \"%m\")\n    mname = datetime_object.strftime(\"%b\")\n    month.append(mname)\npef_diag[\"month\"] = month\n\nfig = px.bar(data_frame=pef_diag, x=\"engagement_index\", y=\"pef_main\", hover_name=\"pef\", facet_col=\"period\", template=\"seaborn\",\n            hover_data={\"month\": True, \"engagement_index\": True, \"period\": True, \"pct_access\": True}, color_discrete_sequence =[\"#76d33c\"],\n            facet_col_spacing=0.05)\n\nfig[\"layout\"].pop(\"updatemenus\")\nfig.update_traces(marker_line_width=0.3)\nfig.update_yaxes(type='category', gridcolor=\"lightgray\")\nfig.update_xaxes(gridcolor=\"lightgray\")\nfig.for_each_annotation(lambda a: a.update(text=a.text.split(\"=\")[-1]))\nfig.update_layout(\n                  barmode=\"stack\",\n                  margin=dict(autoexpand=True), \n                  autosize=True, plot_bgcolor=\"white\",\n                  annotations=dict(font=dict(size=15, color=\"black\")),\n                  yaxis=dict(\n                      categoryorder=\"total ascending\",\n                      showline=True,\n                      linewidth=3,\n                      title=\" \",\n                      ticks=\"outside\",\n                      tickfont=dict(\n                            family=\"Helvetica Bold\",\n                            size=15,\n                        )\n                  ),\n                  xaxis=dict(\n                        title=dict(text=\"Engagement\", font=dict(size=14)),\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor=\"rgb(204, 204, 204)\",\n                        linewidth=2,\n                        ticks=\"outside\",\n                        tickfont=dict(\n                            family=\"Verdana\",\n                            size=13,\n                            color=\"gray\",\n                        ),\n                  ),\n                  xaxis2=dict(\n                        title=dict(text=\"Engagement\", font=dict(size=14)),\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor=\"rgb(204, 204, 204)\",\n                        linewidth=2,\n                        ticks=\"outside\",\n                        tickfont=dict(\n                            family=\"Verdana\",\n                            size=13,\n                            color=\"gray\",\n                        ),\n                  ),\n                   xaxis3=dict(\n                        title=dict(text=\"Engagement\", font=dict(size=14)),\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor=\"rgb(204, 204, 204)\",\n                        linewidth=2,\n                        ticks=\"outside\",\n                        tickfont=dict(\n                            family=\"Verdana\",\n                            size=13,\n                            color=\"gray\",\n                        ),\n                  ), \n                  xaxis4=dict(\n                        title=dict(text=\"Engagement\", font=dict(size=14)),\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor=\"rgb(204, 204, 204)\",\n                        linewidth=2,\n                        ticks=\"outside\",\n                        tickfont=dict(\n                            family=\"Verdana\",\n                            size=13,\n                            color=\"gray\",\n                        ),\n                  ),\n                 title=dict(text=\"Most engaged primary essesntial functions and its sub-categories\", y=0.99, x=0.5, xanchor=\"center\", \n                            yanchor=\"top\", font=dict(size=21, family=\"Verdana\")),\n                 hoverlabel=dict(bgcolor=\"#62bb2a\", font=dict(color=\"white\", size=12, family=\"Verdana\"))\n                 )\n\n# changing hover label\ncustom_hover = \"Sub-Cat - <b>%{hovertext}<\/b><br><br>Month - <b>%{customdata[0]}<\/b><br>Access Percentage = <b>%{customdata[2]}%<\/b><br>Engagement = %{x}<br>PEF - %{y}<extra><\/extra>\"\nfig.update_traces(hovertemplate=custom_hover)\n# changing bar width\nfor data in fig.data:\n    data[\"width\"] = 0.75\ndel pef_eng\ngc.collect()\nfig.show()","5e91bf05":"# separating sub categories from 2nd layer of pef \npef_sub_main = list()\npef_sub_sub = list()\nfor val in pef_diag.pef.str.split(\"-\"):\n    try:\n        cat = val[1]\n    except IndexError:\n        cat = \"Same as preceding\"\n    pef_sub_sub.append(cat)\n    pef_sub_main.append(val[0].strip())\n\npef_diag[\"pef_sub_main\"] = pef_sub_main\npef_diag[\"pef_sub\"] = pef_sub_sub\npef_diag.engagement_index = np.round(pef_diag.engagement_index)\n\npef_diag[\"inner_circle\"] = \"PEF\"\nfig = px.sunburst(pef_diag, path=[\"inner_circle\", \"pef_main\", \"pef_sub_main\", \"pef_sub\"], values=\"engagement_index\", height=650, \n                  template=\"plotly\", color=\"pef_main\",\n                  color_discrete_map={\"SDO\": \"#0077c8\", \"LC\": \"#76d33c\", \"CM\": \"#5dcfda\", \"LC\/CM\/SDO\": \"#3eaa7c\", \"PEF\": \"cyan\"})\nfig.update_layout(margin=dict(t=80, l=0, r=0, b=0, autoexpand=True),\n                  hoverlabel=dict(font=dict(color=\"white\", size=12,family=\"Verdana\")),\n                  title=dict(text=\"Primary Essential Function (PEF) Engagement Distribution<br>through all the layers and sub-categories\", y=0.97, x=0.5, \n                             xanchor=\"center\", yanchor=\"top\", font=dict(color=\"black\", size=21, family=\"Verdana\")),\n                  font=dict(color=\"white\"))\n\ncustom_hover = \"Engagement Index = <b>%{value}<\/b><br><br>Parent - <b>%{parent}<\/b><br>Category - <b>%{label}<\/b><extra><\/extra>\"\nfig.update_traces(texttemplate=\"%{label}<br><b>%{percentEntry:.1%}<\/b>\", hovertemplate=custom_hover)\n\nfig.show()","d273bb80":"sect = pd.merge(engage_df[[\"lp_id\", \"engagement_index\", \"pct_access\"]], \n                product_df[[\"lp_id\", \"sector(s)\"]], how=\"left\", on=\"lp_id\").dropna()\nsect = sect.groupby(\"sector(s)\", as_index=False).agg(np.mean).round(decimals=2)\nsect.sort_values(by=\"engagement_index\", ascending=False, inplace=True)\n\ncolors = [\"lightgray\"]*5\ncolors[0] = \"#0077c8\"\n\nfig, axes =plt.subplots(1, 2, figsize=(16, 9), sharey=True, edgecolor=\"white\")\nplt.style.use(\"seaborn\")\nfig.suptitle(\"Most engaged products aggregated through its sectors\", size=21, family=\"Verdana\", weight=\"normal\")\n\nfigone = sns.barplot(data=sect, x=\"engagement_index\", y=\"sector(s)\", ax=axes[0], palette=colors)\nfigone.bar_label(figone.containers[0], size=13, family=\"Helvetica\", padding=5)\naxes[0].set_facecolor(\"white\")\nfigone.set_ylabel(\" \")\nfigone.set_xlabel(\"Mean Engagement\", size=15, family=\"Verdana\")\nfigone.set_xticklabels([])\nfigone.set_yticklabels([], size=18, family=\"Verdana\")\n\nfigtwo = sns.barplot(data=sect, x=\"pct_access\", y=\"sector(s)\", ax=axes[1], palette=colors)\nfigtwo.bar_label(figtwo.containers[0], size=13, family=\"Verdana\", padding=5)\naxes[1].set_facecolor(\"white\")\nfigtwo.set_ylabel(\" \")\nfigtwo.set_xlabel(\"Mean Access Percentage\", size=15, family=\"Verdana\")\nfigtwo.set_xticklabels([])\n\ndel sect\ngc.collect()\n\nplt.show()","972499a0":"district_df = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")\ndistrict_df = district_df[district_df[\"state\"].notnull()]\n\neng_dist = pd.merge(engage_df, district_df, how=\"left\", on=\"district_id\")\n\nprod_dist = pd.merge(eng_dist[[\"time\", \"lp_id\",\"pct_access\", \"engagement_index\", \"locale\", \"pp_total_raw\"]], \n         product_df[[\"lp_id\", \"primary essential function\", \"product\"]], how=\"left\", on=\"lp_id\").dropna().groupby(\n[\"time\", \"locale\", \"pp_total_raw\", \"primary essential function\", \"product\"]).agg(np.mean).reset_index()\n\nprod_dist.rename(columns={\"primary essential function\": \"pef\"}, inplace=True)\n\npef_main_list = list()\nfor val in prod_dist.pef.str.split(\"-\"):\n    pef_main_list.append(val[0].rstrip())\nprod_dist[\"pef_main\"] = pef_main_list\n\nprod_dist[[\"locale\", \"pp_total_raw\", \"pef_main\"]] = prod_dist[[\"locale\", \"pp_total_raw\", \"pef_main\"]].astype(\"category\")\n\n# plot\nfig = px.scatter(data_frame=prod_dist[[\"time\", \"engagement_index\", \"pef_main\", \"locale\", \"pp_total_raw\"]], x=\"time\", y=\"engagement_index\", \n                 color=\"pef_main\", facet_col=\"locale\", facet_row=\"pp_total_raw\", height=1400, facet_col_wrap=2, \n                 range_y=[0, 80000], render_mode=\"webgl\", facet_row_spacing=0.04, facet_col_spacing=0.03,\n                 color_discrete_map={\"SDO\": \"#0077c8\", \"LC\": \"#76d33c\", \"CM\": \"#5dcfda\", \"LC\/CM\/SDO\": \"#3eaa7c\"})\n\nfig.for_each_annotation(lambda a: a.update(text=a.text.split(\"=\")[-1]))\nfig.update_annotations(borderpad=7)\nfig.update_yaxes(gridcolor=\"lightgray\", title=None, showticklabels=True,\n                tickfont=dict(\n                    family=\"Verdana\",\n                    size=8,\n                    color=\"rgb(82, 82, 82)\",\n                ))\nfig.update_xaxes(gridcolor=\"lightgray\", title=None, dtick=\"M2\",\n                      ticklabelmode=\"period\",\n                      showline=True,\n                      showgrid=True,\n                      showticklabels=True,\n                      linecolor=\"rgb(204, 204, 204)\",\n                      linewidth=2,\n                      ticks=\"outside\",\n                      tickformat=\"%b\",\n                      tickfont=dict(\n                          family=\"Verdana\",\n                          size=9,\n                          color=\"gray\",\n                      ),\n                  ),\nfig.update_layout(legend=dict(\n                    font=dict(size=12, color=\"black\", family=\"Verdana\"),\n                    title=\"\",\n                    valign=\"top\",\n                    orientation=\"h\",\n                    yanchor=\"bottom\",\n                    y=1.03,\n                    xanchor=\"right\",\n                    x=0.6,\n                    bgcolor=\"#F0FFFF\"\n                  ),\n                  title=dict(text=\"PEF Engagement Distribution in different locales<br>through various Per-pupil total expenditure in 2020\", y=0.99, \n                              x=0.5, xanchor=\"center\", yanchor=\"top\", font=dict(color=\"black\", size=19, family=\"Verdana\")),\n                  margin=dict(autoexpand=True, l=0, r=5, t=120, b=0), \n                  autosize=True, plot_bgcolor=\"white\",\n                  annotations=dict(font=dict(size=12, color=\"black\", family=\"Verdana\")),\n                  hoverlabel=dict(font=dict(color=\"white\", size=12,family=\"Verdana\"))\n)\n\nfig.add_vrect(x0=\"2020-06-08\", x1=\"2020-08-20\", \n              annotation_text=\" \", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.15, line_width=0)\nfig.add_vrect(x0=\"2020-11-25\", x1=\"2020-11-29\", \n              annotation_text=\" \", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfig.add_vrect(x0=\"2020-12-21\", x1=\"2020-12-31\", \n              annotation_text=\" \", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfig.add_vrect(x0=\"2020-04-09\", x1=\"2020-04-13\", \n              annotation_text=\" \", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfig.add_vline(x=datetime.datetime(2020,2,9).timestamp() * 1000,\n              annotation_text=\" \",opacity=0.30,\n              annotation_position=\"top right\", line_dash=\"dash\")\n\nfor val in fig.layout.annotations:\n        val.text = \"<b>\"+val.text+\"<\/b>\"\n\ndel prod_dist\ngc.collect()\n\nfig.show()","1697dcae":"uspolicies = pd.read_csv(\"..\/input\/extra-datasets\/COVID-19 US state policy database.csv\", usecols=np.arange(0,15), header=0)\nuspolicies.drop(index=0, inplace=True)\nuspolicies.columns = uspolicies.columns.str.lower()\nuspolicies.replace(\"0\", \"\", inplace=True)\nuspolicies.replace(\"1\", \"\", inplace=True)\nuspolicies.drop(columns=\"snapebt21\", inplace=True)\n\nmonthly_internet = pd.read_csv(\"..\/input\/extra-datasets\/2020_urs_broadband_website_data_0.csv\", usecols=[1, 10])\nmonthly_internet.columns = monthly_internet.columns.str.lower()\nmonthly_internet.state = monthly_internet.state.str.title()\ndf = monthly_internet\nmonthly_internet = monthly_internet.groupby([\"state\"], as_index=False).agg(np.mean)\nmonthly_internet[\"max\"] = df.groupby([\"state\"], as_index=False).agg(np.max)[\"total charge\"]\nmonthly_internet[\"min\"] = df.groupby([\"state\"], as_index=False).agg(np.min)[\"total charge\"]\nmonthly_internet[[\"total charge\", \"min\", \"max\"]] = monthly_internet[[\"total charge\", \"min\", \"max\"]].astype(\"int64\")\nmonthly_internet.dropna(inplace=True)\n\ndate_columns = [\"clschool\", \"emstart\", \"emend\", \"snapebt20\", \"wv_wtprd\", \"ebstart\"]\noverall_date = dict()\n\n# this will get the average dates for each policies from all the state dates\nfor col in uspolicies.columns:\n    if col in date_columns:\n        uspolicies[col] = pd.to_datetime(uspolicies[col])\n        overall_date[col] = pd.to_datetime(uspolicies[col].dropna().view(np.int64).mean()).timestamp()\n\n# for each state enagement\nplot = pd.merge(eng_dist, product_df[[\"lp_id\", \"primary essential function\", \"product\"]], how=\"left\", on=\"lp_id\").groupby([\n    \"time\", \"state\", \"primary essential function\", \"product\"]).agg(np.mean).reset_index()\nplot = plot.groupby([\"state\", \"time\"]).agg(np.mean).reset_index()\nplot = pd.merge(plot, monthly_internet, how=\"left\", on=\"state\")\nplot.fillna(\"-\", inplace=True)\n\n# for the overall state engagement \noverall_plot = eng_dist[[\"time\", \"engagement_index\"]].groupby(\"time\").agg(np.mean).reset_index()\n\n\nfig = make_subplots(rows=8, cols=3, horizontal_spacing = 0.073, subplot_titles = plot.state.unique())\ncol_num = 1\nrow_num = 1\nvline_colors = {\"clschool\": \"black\", \"emstart\": \"#8B0000\", \"emend\": \"#8B0000\", \"snapebt20\": \"#FF8C00\", \"wv_wtprd\": \"#fa636e\",\n                \"ebstart\": \"#009B77\"}\n\nfigtwo = px.line(data_frame=overall_plot, x=\"time\", y=\"engagement_index\")\n\nfor name in plot.state.unique():\n    if col_num == 4:\n        col_num = 1\n        row_num += 1\n    fig.add_trace(\n        go.Scatter(x=plot[plot.state == name][\"time\"], y=plot[plot.state == name][\"engagement_index\"]),\n        row=row_num, col=col_num\n    )\n    for date in overall_date.keys():\n        try:\n            fig.add_vline(x=pd.to_datetime(uspolicies[uspolicies.state == name][date].values[0]).timestamp()*1000,\n                  opacity=0.75, line_dash=\"dash\", line_color=vline_colors[date], row=row_num, col=col_num)\n        except:\n            continue\n    col_num += 1\n    \nfigtwo.update_xaxes(rangeslider_visible=True)\nfig.update_xaxes(gridcolor=\"lightgray\", title=None, dtick=\"M2\",\n                      ticklabelmode=\"period\",\n                      showline=True,\n                      showgrid=False,\n                      showticklabels=True,\n                      linecolor=\"rgb(204, 204, 204)\",\n                      linewidth=2,\n                      ticks=\"outside\",\n                      tickformat=\"%b\",\n                      tickfont=dict(\n                          family=\"Verdana\",\n                          size=10,\n                          color=\"gray\",\n                      ),\n                  ),\nfig.update_yaxes(gridcolor=\"lightgray\", title=None, showticklabels=True,\n                tickfont=dict(\n                    family=\"Verdana\",\n                    size=10,\n                    color=\"rgb(82, 82, 82)\",\n                ))\n\nfig.add_vrect(x0=\"2020-06-08\", x1=\"2020-08-20\", \n              annotation_text=\" \", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.15, line_width=0)\nfig.add_vrect(x0=\"2020-11-25\", x1=\"2020-11-29\", \n              annotation_text=\" \", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfig.add_vrect(x0=\"2020-12-21\", x1=\"2020-12-31\", \n              annotation_text=\" \", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfig.add_vrect(x0=\"2020-04-09\", x1=\"2020-04-13\", \n              annotation_text=\" \", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfig.add_vline(x=datetime.datetime(2020,2,9).timestamp() * 1000,\n              annotation_text=\" \",opacity=0.30,\n              annotation_position=\"top right\", line_dash=\"dash\")\n\n\nfigtwo.add_vrect(x0=\"2020-06-08\", x1=\"2020-08-20\", \n              annotation_text=\"Summer Break\", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfigtwo.add_vrect(x0=\"2020-11-25\", x1=\"2020-11-29\", \n              annotation_text=\"TG\", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfigtwo.add_vrect(x0=\"2020-12-21\", x1=\"2020-12-31\", \n              annotation_text=\"CB\", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfigtwo.add_vrect(x0=\"2020-04-09\", x1=\"2020-04-13\", \n              annotation_text=\"SB\", annotation_position=\"top left\",\n              fillcolor=\"#76d33c\", opacity=0.25, line_width=0)\nfigtwo.add_vline(x=overall_date[\"clschool\"] * 1000,\n              annotation_text=\"Sclosed\",opacity=0.75,\n              annotation_position=\"top left\", line_dash=\"dash\")\nfigtwo.add_vline(x=datetime.datetime(2020,2,9).timestamp() * 1000,\n              annotation_text=\"SClosure\",opacity=0.30,\n              annotation_position=\"top left\", line_dash=\"dash\", line_color=\"black\")\nfigtwo.add_vline(x=overall_date[\"emstart\"]*1000, \n              annotation_text=\"EMS\", annotation_position=\"top right\", opacity=0.75, line_dash=\"dash\", line_color=\"#8B0000\")\nfigtwo.add_vline(x=overall_date[\"emend\"]*1000, \n              annotation_text=\"EME\", annotation_position=\"top right\", opacity=0.75, line_dash=\"dash\", line_color=\"#8B0000\")\nfigtwo.add_vline(x=overall_date[\"snapebt20\"]*1000,\n              annotation_text=\"SNAP\",opacity=0.75,\n              annotation_position=\"top left\", line_dash=\"dash\", line_color=\"#FF8C00\")\nfigtwo.add_vline(x=overall_date[\"wv_wtprd\"]*1000,\n              annotation_text=\"WUIP\",opacity=0.75,\n              annotation_position=\"top right\", line_dash=\"dash\", line_color=\"#fa636e\")\nfigtwo.add_vline(x=overall_date[\"ebstart\"]*1000,\n              annotation_text=\"EBS\",opacity=0.75,\n              annotation_position=\"top right\", line_dash=\"dash\", line_color=\"#009B77\")\n\nfor figure in range(len(fig.data)):\n    fig.data[figure].line.color = \"#b1b7fd\"\n\nfig.update_layout(height=1600, showlegend=False, plot_bgcolor=\"white\",\n                 margin=dict(b=0, l=0, r=0), title=dict(text=\"State - Policies, Mean Engagement & Other Variables\", y=0.99, \n                              x=0.5, xanchor=\"center\", yanchor=\"top\", font=dict(color=\"black\", size=19, family=\"Verdana\")))\n\nfigtwo.update_yaxes(gridcolor=\"lightgray\")\nfigtwo.update_layout(\n    font=dict(family=\"Verdana\"),\n    title=dict(text=\"Overall State Policies (Average dates) & Mean Engagement\", y=0.99, \n               x=0.5, xanchor=\"center\", yanchor=\"top\", font=dict(color=\"black\", size=19, family=\"Verdana\")),\n    margin=dict(b=50, l=0, r=0),\n    font_family=\"Verdana\",\n    xaxis_title=\"Date\",\n    yaxis_title=\"Mean Engagement\",\n    yaxis=dict(titlefont=dict(size=17),\n        ticks=\"outside\",\n        tickfont=dict(\n            family=\"Verdana\",\n            size=12,\n            color=\"rgb(82, 82, 82)\",\n        )),\n    plot_bgcolor=\"white\",\n    xaxis=dict(\n        rangeselector=dict(\n            buttons=list([\n                dict(count=1,\n                     label=\"1m\",\n                     step=\"month\",\n                     stepmode=\"backward\"),\n                dict(count=6,\n                     label=\"6m\",\n                     step=\"month\",\n                     stepmode=\"backward\"),\n                dict(step=\"all\")\n            ])\n        ),\n        titlefont=dict(size=17),\n        showline=True,\n        showgrid=False,\n        showticklabels=True,\n        linecolor=\"rgb(204, 204, 204)\",\n        linewidth=2,\n        ticks=\"outside\",\n        tickfont=dict(\n            family=\"Verdana\",\n            size=12,\n            color=\"rgb(82, 82, 82)\",\n        ),),\n)\n\n\nfor val in fig.layout.annotations:\n    val.font = dict(color=\"black\", size=11, family=\"Verdana\")\n    \n    \npositionx = list()\npositiony = list()\nfor val in fig.layout.annotations[:23]:\n    for state in plot.state.unique():\n        if val.text == state:\n            try:\n                val.text = \"<b>\"+val.text+\"<\/b>\"+\"<br>\"+\"Weekly UI(max): <b>$\"+str(uspolicies[\n                    uspolicies.state == state][\"uimaxamt\"].values[0])+\"<\/b>\"+\"<br>\"+\"Total unemployment rate at EBS: <b>\"+uspolicies[\n                    uspolicies.state == state][\"tur\"].values[0]+\"%\"+\"<\/b>\"+\"<br>\"+\"Monthly Urban internet charges - Min: <b><span>&#36;<\/span>\"+str(plot[plot.state==state][\"min\"].unique()[0])+\"<\/b>\"+\" Max: <b><b><span>&#36;<\/span>\"+str(plot[plot.state==state][\"max\"].unique()[0])+\"<\/b>\"\n            except:\n                val.text = \"<b>\"+val.text+\"<\/b>\"\n    \n\nfigtwo.show()\nfig.show()","a64818c3":"mapschool = pd.read_csv(\"..\/input\/extra-datasets\/District_Reopening_Data.csv\")\nmapschool.rename(columns={\"State\": \"postcode\"}, inplace=True)\nmapschool[\"Start date\"] = pd.to_datetime(mapschool[\"Start date\"])\nmapschool[\"Public School Enrollment\"] = mapschool[\"Public School Enrollment\"].str.replace(',', '').astype(\"int64\")\ndoc = mapschool.rename(columns={\"District\":\"state\"})[mapschool[\"District\"].str.startswith(\"District\")\n                                              ][[\"postcode\", \"District reopening plan\", \"Start date\", \n                                                 \"state\", \"Public School Enrollment\"]]\n\nmap_plot = pd.merge(plot, uspolicies[[\"state\", \"postcode\"]], how=\"left\", on=\"state\")\nmap_plot = pd.merge(mapschool[[\"postcode\", \"District reopening plan\", \"Start date\", \"Public School Enrollment\"]], \n                    map_plot[[\"postcode\", \"state\"]], how=\"right\", on=\"postcode\")\nmap_plot.dropna(inplace=True)\n\npctbh = eng_dist[[\"state\", \"pct_black\/hispanic\"]].groupby([\"state\"]).agg(pd.Series.mode).reset_index()\n\ncolumns = map_plot.columns.values.tolist()\ncolumns.remove(\"Public School Enrollment\")\ncolumns.remove(\"Start date\")\nmap_plot[columns] = map_plot[columns].astype(\"category\")\n\nmap_plot = map_plot.groupby(\"postcode\").agg(pd.Series.mode)\nmapschool = mapschool.groupby(\"postcode\").agg(sum).reset_index()\nmap_plot = pd.merge(map_plot, mapschool, how=\"left\", on=\"postcode\")\nmap_plot[\"Public School Enrollment\"] = map_plot[\"Public School Enrollment\"].astype(\"int64\")\n\ndates = list()\nfor date in map_plot[\"Start date\"]:\n    val = date.strftime(\"%d %B, %Y\")\n    dates.append(val)\nmap_plot[\"Start date\"] = dates\nmap_plot[\"Public School Enrollment\"] = map_plot.apply(lambda x: \"{:,}\".format(x[\"Public School Enrollment\"]), axis=1)\n\nmap_plot = pd.merge(map_plot, pctbh, how=\"left\", on=\"state\")\n\nfig = px.choropleth(map_plot.append(doc, ignore_index=True), locations=\"postcode\", locationmode=\"USA-states\", \n                    color=\"District reopening plan\", scope=\"usa\", hover_name=\"state\", \n                    hover_data={\"Public School Enrollment\": True, \"Start date\": True, \"District reopening plan\": False,\n                                \"postcode\": False, \"pct_black\/hispanic\": True},\n                    color_discrete_map={\"Hybrid\/Partial\": \"#0077c8\", \"Full in-person reopening available for all students\": \"#5dcfda\", \n                                        \"Remote learning only\": \"#3eaa7c\"})\n\nfig.update_layout(dragmode=False, hoverlabel=dict(font=dict(color=\"#76d33c\", size=12, family=\"Verdana\"), bgcolor=\"white\"),\n                  margin=dict(t=80, l=0, r=0),\n                 legend=dict(\n                    font=dict(size=12, color=\"black\", family=\"Verdana\"),\n                    title=\"\",\n                    valign=\"top\",\n                    orientation=\"h\",\n                    yanchor=\"bottom\",\n                    y=1.03,\n                    xanchor=\"right\",\n                    x=0.78,\n                  ),\n                 title=dict(text=\"School District's Reopening Plans for New Academic Year 20-21\", y=0.99, \n                              x=0.5, xanchor=\"center\", yanchor=\"top\", font=dict(color=\"black\", size=19, family=\"Verdana\")))\n\ncustom_hover = '<b>%{hovertext}<\/b><br><br>Total Public School Enrollment - <b>%{customdata[0]}<\/b> students<br>pct_black\/hispanic - <b>%{customdata[4]}<\/b><\/b><extra><\/extra>'\nfor val in fig.data:\n    val.hovertemplate = custom_hover\n    \n\nfig.show()","bafad893":"demothree = eng_dist[[\"time\", \"pct_black\/hispanic\", \"pct_free\/reduced\", \"engagement_index\", \n          \"pct_access\"]].groupby([eng_dist[\"time\"].dt.month, \"pct_black\/hispanic\", \"pct_free\/reduced\"]).agg(np.mean).reset_index()\n\nmonth = list()\nfor num in demothree.time:\n    num = str(num)\n    datetime_object = datetime.datetime.strptime(num, \"%m\")\n    mname = datetime_object.strftime(\"%b\")\n    month.append(mname)\ndemothree[\"month\"] = month\n\nfig = px.scatter_3d(data_frame=demothree, x=\"pct_black\/hispanic\", y=\"pct_free\/reduced\", z=\"engagement_index\",\n                    color=\"pct_black\/hispanic\", color_discrete_map={\"[0, 0.2[\": \"#5dcfda\", \"[0.2, 0.4[\": \"#0077c8\", \n                    \"[0.4, 0.6[\": \"#3eaa7c\", \"[0.6, 0.8[\": \"#76d33c\", \"[0.8, 1[\": \"#fa636e\"},\n                    template=\"plotly_white\", hover_name=\"month\", height=700)\n\nfig.update_layout(margin=dict(l=0, r=0, b=0, t=70),hoverlabel=dict(font=dict(color=\"white\", size=12, family=\"Verdana\")),\n                  scene_camera=dict(eye=dict(x=1.5, y=1.2, z=0.9), center=dict(x=0, y=0, z=-0.2)),\n                  legend=dict(\n                    font=dict(size=12, color=\"black\", family=\"Verdana\"),\n                    title=\"<b>Black\/Hispanic Percentage<\/b> : \",\n                    valign=\"top\",\n                    orientation=\"h\",\n                    yanchor=\"bottom\",\n                    y=0.96,\n                    xanchor=\"right\",\n                    x=0.83,\n                  ),\n                 title=dict(text=\"Mean Engagement of Black\/Hispanic Percentage by Free\/Reduced meal Percentage<br>throughout the year (in months)\", y=0.97, \n                              x=0.5, xanchor=\"center\", yanchor=\"top\", font=dict(color=\"black\", size=19, family=\"Verdana\")))\n\ncustom_hover = 'Month - <b>%{hovertext}<\/b><br><br>pct_black\/hispanic - <b>%{x}<\/b> %<br>pct_free\/reduced - <b>%{y}<\/b> %<br>Engagement Index - <b>%{z}<\/b><extra><\/extra>'\nfor val in fig.data:\n    val.hovertemplate = custom_hover\n\nfig.show()","aac88800":"df2 = pd.merge(eng_dist[[\"time\", \"lp_id\", \"pct_black\/hispanic\", \"engagement_index\"]],\n         product_df[[\"lp_id\", \"primary essential function\"]], how=\"left\", on=\"lp_id\").groupby([\n    eng_dist[\"time\"].dt.month, \"pct_black\/hispanic\", \"primary essential function\"]).agg(np.mean).reset_index() \n\npef_main_list = list()\nfor val in df2[\"primary essential function\"].str.split(\"-\"):\n    pef_main_list.append(val[0].rstrip())\ndf2[\"pef_main\"] = pef_main_list\n\n\nmonth = list()\nfor num in df2.time:\n    num = str(num)\n    datetime_object = datetime.datetime.strptime(num, \"%m\")\n    mname = datetime_object.strftime(\"%b\")\n    month.append(mname)\ndf2[\"month\"] = month\n\nfig = px.scatter_3d(data_frame=df2, x=\"pct_black\/hispanic\", y=\"pef_main\", z=\"engagement_index\",\n                    color=\"pct_black\/hispanic\", color_discrete_map={\"[0, 0.2[\": \"#5dcfda\", \"[0.2, 0.4[\": \"#0077c8\", \n                    \"[0.4, 0.6[\": \"#3eaa7c\", \"[0.6, 0.8[\": \"#76d33c\", \"[0.8, 1[\": \"#fa636e\"},\n                    template=\"plotly_white\", hover_name=\"month\", height=700)\n\nfig.update_layout(margin=dict(l=0, r=0, b=0, t=70),hoverlabel=dict(font=dict(color=\"white\", size=12, family=\"Verdana\")),\n                  scene_camera=dict(eye=dict(x=1.5, y=1.2, z=0.9), center=dict(x=0, y=0, z=-0.2)),\n                  legend=dict(\n                    font=dict(size=12, color=\"black\", family=\"Verdana\"),\n                    title=\"<b>Black\/Hispanic Percentage<\/b> : \",\n                    valign=\"top\",\n                    orientation=\"h\",\n                    yanchor=\"bottom\",\n                    y=0.96,\n                    xanchor=\"right\",\n                    x=0.84,\n                  ),\n                 title=dict(text=\"Mean Engagement of Black\/Hispanic Percentage for different product functionalities\", y=0.97, \n                              x=0.5, xanchor=\"center\", yanchor=\"top\", font=dict(color=\"black\", size=19, family=\"Verdana\")))\n\ncustom_hover = 'Month - <b>%{hovertext}<\/b><br><br>pct_black\/hispanic - <b>%{x}<\/b> %<br>Locale - <b>%{y}<\/b><br>Engagement Index - <b>%{z}<\/b><extra><\/extra>'\nfor val in fig.data:\n    val.hovertemplate = custom_hover\n\nfig.show()","8a286058":"\n<p><b>To handle the missing values we can either use univariate or multivariate imputation techniques or choose to remove the values. These will differ from column to column.<\/b><\/p>\n\n---\n<div class=\"h4\">lp_id<\/div>\n<p class=\"para\">Though this column has around 2.5% missing values we cannot impute values using statistical method such as \"mode\" since it will create bias over the highly occured unique product identifier. Hence, removing rows.<\/p>\n\n<div class=\"h4\">pct_access & engagement_index<\/div>\n<p class=\"para\">Both of these columns have less than 1% null values and ideally we can choose to remove these null values from our df without affecting our dataset. But, we can also fill in missing values wherever possible:<\/p>\n<ul><li><b>pct_access<\/b> -- Has a low number of missing values, thus, we can fill it using mean values without affecting the variance<\/li>\n<li><b>engagement_index<\/b> -- Missing values on the other hand are on a higher side. Along with this it also includes lp_id that are not available in product_info.csv, thus removing those values.<br>We will fill the missing values of unique product ids that are present in product_info.csv with the average engagement index of that product id.<\/li><\/ul>","f7124ed0":"<div class=\"h3\">About the graph shown above<\/div>\n<p class=\"para\">Similae to previously shown graph you can rotate this plot as convenient.<br><br> It can be observed that products under SDO see high engagement for all the present ranges of Black\/Hispanic student percentage, of which, the range \"<b>[0.8, 1[<\/b>\" is the highest.<\/p>\n<p class=\"para\">It can also be seen that school districts having a black\/hispanic student percentage range of \"<b>[0.8, 1[<\/b>\" see a high engagement in products under CM compared to the rest of the ranges.<br> Products under LC on average see high engagement for school districts having black\/hispanic student percent ranges --- \"<b>[0.2, 0.4[<\/b>\" & \"<b>[0, 0.2[<\/b>\".<\/p>\n<hr>\n<div class=\"h2\">Student with disabilities<\/div>\n<p class=\"para\">Initially on my level I assumed that since most of the products with either of the primary essential functionalities are not designed keeping in mind students with disabilities. They will have a huge loss of learning during the pandemic.<br> Accodring to <b>United States Department of Education<\/b>, children with disabilities and their families were dispropotionately affected by the pandemic compared to their peers without disabilities. Even with the support of special education and related services required by their <b>IEPs (indivisualised eduction programs)<\/b>, some children were unable to progress towards acheiving the functional and academic goals included in their IEPs.<br><\/p>\n<p class=\"statement\">Therefore, reopening schools safely is of utmost importance for the progress of students with disabilities<\/p>\n<ul><div class=\"h2\">Individuals with Disabilitites Education Act<\/div>\n    <p class=\"para\">Though enacted in 1975, the Individuals with Disabilitites Education Act <b>IDEA<\/b> formerly known as <b>Education for all handicapped children Act<\/b>, mandates the provision of free and appropriate public school for eligible students aged 3-21. This eligibility is determined by a disability that adversly affects academic performance.<br>In 2019-2020, number of students ages 3-21 who received special education services under the IDEA was 7.3 million or 14 percent of all public school students. Among the students receiving special education services, the most common category of disability (33 percent) was specific learning disabilities.<br><b>The following image has been taken from <a href=\"https:\/\/nces.ed.gov\/programs\/coe\/indicator\/cgg\" target=\"_blank\">NCES COE - Students with Disabilities<\/a><\/b>, which gives the statistics of these students how they were attend most of their classes, that is the enviornment.<\/p><img src=\"https:\/\/nces.ed.gov\/programs\/coe\/figures\/CGG\/Figure_1_CGG-flat.svg\"><\/img><\/ul>\n    <ul><ul><div class=\"h3\">Fundings<\/div>\n    <li><b>Part B:<\/b> Part B of IDEA provides funds to the states to assist them in providing <b>FAPE<\/b>(free appropriate public education) to children ages 3-12 with disabilities who are in need of special education and related services.<\/li>\n    <li><b>Part C:<\/b> Part C of IDEA provides funds to the states to assit them in developing and implementing state wide, comprehensive, co-ordinated, multidisciplinary, intragency systems to make early intervention  services available to all children from birth through age two with disabilities and their families.<\/li><\/ul><br>\n    <div class=\"h4\">Difficulties<\/div>\n    <p class=\"para\">The assumption underlying the Individuals with\nDisabilities Education Act (IDEA) and its\npredecessor legislation is that, on average, the cost\nof educating children with disabilities is twice the\naverage cost (measured as the national average per\npupil expenditure or APPE) of educating other\nchildren. Congress determined that the federal\ngovernment would pay up to 40 percent of this\n\"excess\" cost, which is referred to as full funding.\nSince 1981, the first year for which full funding\nwas 40 percent of APPE, the federal share has\nremained less than half of the federal commitment\nbased on regular appropriations. Each year the\nfederal government fails to fully fund IDEA, it\nshifts the costs for educating students with special\nneeds to states and school districts. <a href=\"https:\/\/www.nea.org\/sites\/default\/files\/2021-01\/IDEA%20Funding%20Gap%20by%20State%20FY%202020.pdf\" target=\"_blank\">Source<\/a><br><\/p>\n    <p class=\"statement\">Hence to implement an infrastructure as desired for the students with disabilities, the federal government fundings if payed as promised will make a huge difference.<\/p>        ","e89f9199":"<div align=\"center\">\n<a><img src=\"https:\/\/mma.prnewswire.com\/media\/1496911\/LearnPlatform_Logo.jpg?p=facebook\"><\/a>\n<\/div>","96c36faf":"<div class=\"h1\">Competition Details<\/div><br>\n<p class=\"para\">\"Effective Policies and plans need to be made and used in order to make education more equitable (similar to all), as not every student has equal opportunities to learn\" --- <b>Nelson Mandela<\/b><p>\n<div class=\"h2\">About our Sponsors<\/div>\n<p class=\"para\">This competition was made available through <b>LearnPlatform<\/b> and its team. LearnPlatform <i>Expands<\/i> equitable education technological resources to students and teachers by generating an evidence on what is working to benefit students, teachers and the budget.<br><\/p>\n<ul><div class=\"h3\">What is expected from us?<\/div>\n    <p class=\"para\"><b>Problem Statement: <\/b> Pandemic disrupted learning. In Spring 2020 educational institutions were closed and hence an attempt was made for distance learning through the online ed-tech platforms.<br>In this competition we have to come up with new policies or plans to make education more equitable, that is, informing policies and practices to <b>close the digital divide<\/b> and help reverse long-term learning loss. This can be done by understanding and measuring the scope of inequalities caused by pandemic in education through the data provided by LearnPlatform as well as through the use of external resources.<br> Through the data provided by LearnPlatform, we have to Uncover trends in digital leanrning by understanding Online Ed-Tech engagement & how to this engagement relates to <b>district demographies<\/b>, <b>Broadband Access<\/b>, <b>State \/ National level policies<\/b> and events<\/p>","98a45cd8":"<div class=\"h3\">About the graph shown above:<\/div>\n<ul><li>The graph shows the percentage of households with at least one child attending a public, private or home school for kindergarten through 12th grade (i.e, K-12 education) who reported that internet, a computer or digital device or both of these facilities are usually or always available to children for educational purposes. Only the respondents who provided a valid response were included in the survey.<\/li>\n    <li>The sample has been collected from April 2020 - February 2021, suggesting a steady growth in the access of facilities to children from October 2020<\/li>\n    <li>From this sample we can see that, both, the accessibility of Internet & Computer or Degital Device, reduces through the months May, June & July, of which the latter hits the lowest.<br><i><b><u>There can be two possibilities<\/u>, either the access was limited because the schools were transitioning to summer break or facilities were not available at all.<\/b><\/i><\/li>\n    <li>From the other two collected data where either of the one is available (either Internet or a computer [digital device]) it can be observed that Internet is usually available more often than devices for the K-12 students while the availability reduces during May, June and July for each respectively.<\/li><br>\n    <p class=\"statement\">Hence, we can assume that there is shortage of devices more than the internet, for K-12 students, for their education in an online enviornment.<\/p><\/ul>\n\n<p class=\"para\">Through our assumption deduced from the above mentioned survey, we can say that the reason for the drop in the engagment index, as well as the access percentage from the month of May till July, 2020, had two main responsible factors:<\/p>\n    <ol><b><li>Non-accessibility to digital devices or computers (which was reportedly lower than internet during the concerned months)<\/li>\n        <li>Transition to Summer Break (suggesting the availbility of such devices could be temporary for some children and be limited to  their academic months\/instructional days)<\/li><\/b><\/ol>\n        <hr>\n        <p class=\"para\">The products particularly used during this period will also be worth taking a look at, though before that, let us try to see why did the access percentag drop in the month of March. For this we will be looking at the Personal Consumption Expenditure<\/p>","514624f1":"<p>From our <b>engagement_data<\/b> dataframe(df) information, it comes to notice that:<\/p>\n<ul><li>There are <b>22,32,4190<\/b> rows<\/li>\n    <li><b>Dtype<\/b> of some of the columns need to be changed<\/li><\/ul>   \n\n<p>Although, before changing dtypes, checking if there are any null or duplicate values in the dataframe. If any, decisions regarding removal or modification of the rows will be made depending upon the impact it'll make on the dataframe.<\/p>","ebb7763e":"<p class=\"para\">It was crucial to get familiar with K-12 school's calender to understand the student engagement on education technology. Since the academic year of schools start after the summer break, we now know that the graph above depicts two academic years.<\/p>\n    <li><b>2019 - 2020<\/b>  (with students having their third and fourth quarters remaining, as well has half of the second quarter which ends around end of January)<\/li>\n    <li><b>2020 - 2021<\/b>  (with students having their first quarter and half of the second quarter starting around first week of november)<\/li>\n<ul><div class=\"h3\">It can be observed that : <\/div>\n<ul><li>The highlighted dash-line (<b>SC -- <\/b> \"School Closures\"), indicates the average period, when schools started to shut down due to the pandemic.<b> Most of the public schools were shut by March 18th for the academic year 2019-2020.<\/b><\/li>\n    <li>Before the closure, engagement of edtech was less compared to the rest of the year but <b>not inexistent<\/b>, indicating, quite a number of students were already familiar with edtech before schools started educating online and were already using it.<\/li>\n    <li>Consecutive drops in the page-load events throughout the graph suggests weekends and holidays of one or two days.<\/li>\n    <li>Overall Page load event was higher after the summer break even for the weekends (i.e, during the first and second quarters of the academic year 20-21) as opposed to the third and fourth quarters (for the academic year 19-20).<br><br><i><b>One of the possibilites<\/b> for such a trend can be that when schools were shut down initially, not all students had access to the internet<\/i><\/li><\/ul><\/ul>\n<hr>\n<p class=\"para\">We can try to see if that is case with the help of \"pct_access\" from our dataset which gives us the percentage of students that have accessed at least one page for a given day (one page-load event)<\/p>","758da02b":"<p class=\"para\"><b>The following are displayed above each state plot<\/b><\/p>\n<ul><li><b>Total unemployment rate (TUR)<\/b> --- shows the percentage of unemployment of the state at Extended Benefits program shut off.<\/li>\n    <li><b>Weekly UI (max)<\/b> --- shows the unemployment insurance maximum amount that a state has provided<\/li>\n    <li><b>Monthly urban internet charges<\/b> --- This shows a state's urban area's minimum and maximum charges of broadband services. The charges are dependent on the download speed, upload speed and the data usage limit.<\/li><\/ul><br>\n<div class=\"h3\">About the graph<\/div>\n<p class=\"para\">Inconsistent data is present for <b>North Dakota<\/b>, <b>Texas<\/b> & <b>Minnesota<\/b>. There are no state policies or other variables present for <b>District of Columbia<\/b>.<br><i>Notice<\/i> how summer break starts and ends on the states differently.<\/p>\n<p class=\"para\">Before we look at engagement changes due to policies, insurance benefits or internet charges, <b>Note<\/b> how every state has different maximum mean engagement. That is, if you see at the Y-axis of Arizona and California, you can see that the mean engagement of Arizona goes upto 3000, while that of California, 250.<br> This could be because of disparities between state school districts engagement activity if any (since the number of school districts differ from state to state) or because the state's school districts performed better than others.<\/p>\n<p class=\"para\">Hence, although the data is missing or inconsistent or even True, Texas has the highest engagement activity for the academic year 2019-2020. Texas also has the lowest minimum monthly urban internet charges.<br> This is then followed by Arizona.<\/p>\n<hr>\n<p class=\"para\"><b>We will compare the states engagement performance through the policies and other variables<\/b><\/p>\n<ul><li><b>Sclosed<\/b> --- The following states had no drop in online engagement right after schools were closed completely, <b>New Jersey<\/b>, <b>New York<\/b>, <b>Utah<\/b>, <b>New Hampshire<\/b>,  while engagement in other states did drop.<\/li>\n    <li><b>EMS<\/b> & <b>EME<\/b> --- It can be seen that most of the state's engagement drops a little after overall eviction moratorium end date.<\/li>\n    <li><b>SNAP<\/b>, <b>EBS<\/b> & <b>WUIP<\/b> --- In the above graph these policies does not make as much difference in online engagement as <b>SClosed<\/b> or <b>EME<\/b> but these policies matter on an individual level and does see differences of which some we will see in the further plots, such as pct_free\/reduced meals which was made available through SNAP. <\/li><\/ul>\n<p class=\"para\">It comes to notice that states have high weekly UI (max), low total unemployment rate (TUR) & a low overall internet charges do see, on average, a rise in the engagement.<b> Note<\/b> that the internet charges, mentioned, are only for urban area.<\/p>\n<p class=\"para\">Another factor that would affect the online engagement is the <b>nature of functioning of the schools<\/b>, that is, if the teaching was done remote only, in-person or in an hybrid environment for the academic year 20-21, since the K-12 schools were closed for the academic year 19-20.<\/p>\n<hr>\n<p class=\"para\">Let us see, what were the initial opening plans \/ initial working environment decided by the school districts of the states.<\/p>","0f5b48ed":"<p class=\"para\">It can be seen that, although we are talking about K-12 education, on average, the products that are designed or in use for all three sectors (i,e. PreK-12; Higher Ed; Corporate) are most engaged and accessible throughout the year in the schools.<br>This is then followed by the products designed\/used in sector PreK-12 (Note: <i>Pre<\/i> in PreK-12 denotes Pre-Kindergarten), while the products with no mention of PreK-12 sectors has the lowest engagement (though, we can see a considerable amount of accessibilty for Corporate centralised products)<\/p>\n<hr>\n<div class=\"h4\">Types of Devices<\/div>\n<p class=\"para\">We may not be able to evaluate or ascertain digital divide with the help of above mentioned\/available product data, but we could get a little clearer of a picture on account of products and how it relates to digital divide if we <b>see what devices are used to access these products<\/b>. For example, if we see that most of the products are accessed through a phone or a tablet, then we can assume the possibilty that the availability of a laptop or computer is low, thus, in this case if the products that are designed primarily for a desktop or laptop see a low engagement it would suggest that students lack access to such devices.<br>We did see in an above evaluated graph that access to devices is lower than internet for K-12 students in their households with a drop during the summer break, suggesting that access to these devices could be temporary. Hence, it is also crucial to undertand the type of devices that are used to access the given products.<br>We do not have access such data, though if available, it will turn out to be useful.<\/p>\n<hr>\n<p class=\"para\">Let us now see if the products used\/product engagement differ in different locales of all the states combined (see the categories of locales below). For this we will be importing the district dataset (district_info.csv).<br>Though before we look at these products let us see what our district dataset comprises of:<\/p><br>\n<div class=\"h1\">District Details<\/div>\n<div class=\"h2\">Data<\/div>\n<ul><div class=\"h3\">District<\/div>\n    <p class=\"para\">Our district data includes information about the characteristics of school districts, including data from <a href=\"https:\/\/nces.ed.gov\/\" target=\"_blank\">NCES<\/a> (2018-19), <a href=\"https:\/\/www.fcc.gov\/\" target=\"_blank\">FCC<\/a> (Dec 2018), and <a href=\"https:\/\/edunomicslab.org\/\" target=\"_blank\">Edunomics Lab<\/a>. This data comprises of over 200 school districts presented with a unique indentifier (number).<br>It contains:<\/p><\/ul>\n    <ul><ul><li><b>state<\/b> --- The state where the district resides<\/li>\n        <li><b>locale<\/b> --- U.S. territory categorisation into four types of areas: City, Suburban (denoted as Suburb), Town, and Rural.<\/li>\n        <li><b>pct_black\/hispanic<\/b> --- Percentage of students in the districts identified as Black or Hispanic<\/li>\n        <li><b>pct_free\/reduced<\/b> --- Percentage of students in the districts eligible for free or reduced-price lunch<\/li>\n        <li><b>county_connections_ratio<\/b> --- Ratio of residential fixed high-speed connections over 200 kbps in at least one direction\/households<\/li>\n        <li><b>pp_total_raw<\/b> --- Per-pupil total expenditure (sum of local and federal expenditure)<\/li><\/ul><\/ul>\n    <div class=\"h2\">Data Processing<\/div>\n <p class=\"para\">Most of these data points are released with a range where the actual value falls under, for data generalization purposes. Along with this there are many missing data marked as 'NaN' indicating that the data was suppressed to maximize anonymization of the dataset. Thus, before we move forward with our data we will have to process it first and see if any of the missing values can be filled where only one or two data points are missing.<br> <b>Note: <\/b>While deleting the null values from the district dataset <i>only the rows where the State names are not present have been removed<\/i>. While the other rows may consist null values in some of the columns, the data available in other columns is crucial hence they have been kept.<\/p>\n <ul><div class=\"h3\">Ranged Values<\/div><\/ul>\n    <ul><p class=\"para\">Most of the data points in our district dataset (such as percent values, ratio values & total expenditure values) have been presented in a range (also known as the <a href=\"https:\/\/www.mathwords.com\/i\/interval_notation.htm\" target=\"_blank\">Interval Notation<\/a>)<br>Such that, the data is represented in two open paranthesis <b>[<\/b><i>value1<\/i>, <i>value2<\/i><b>[<\/b> , where value1 is the starting range (<b>inclusive<\/b>) and value2 is the ending range (<b>exclusive<\/b>). For example,\n    <ul><p class=\"para\"><b>[2, 10[<\/b>  --- in this range the values will fall between  \"<b>>=2  & &lt10<\/b>\"<\/p><\/ul>\n    <p class=\"para\">The plots will be shown in the same format as the interval notation since the end range limit is <b>exclusive<\/b> of the range<\/p>\n<\/ul>\n<hr>\n<div class=\"h4\">Legends<\/div>\n<p class=\"para\">In the following graphs wherever there are legends, you can peform multiple actions on that plot using the legend.<br>In the plot there are two basic actions with regards to legend entities.\n    <ul><li>When you click\/tap on a single entity, it is removed from the plot. To bring back that entity you can click\/tap on it again<\/li>\n        <li>Double click\/tap : When you double click on an entity, only that entity will be shown on the plot, while the others will be hidden. Here you can make other entities appear using a single click.<\/li><\/ul><\/p>\n<p class=\"para\"><b>Note: <\/b>Double clicking right after performing an action will reset the plot<\/p>\n<hr>\n<p class=\"para\">The following plot shows the mean engagement of essential funtions of the products in different locales accroding to various per pupil total expenditures. We already know what are the top products in each of the most used PEF's, this will tell us if there is a difference in the PEF online engagement depending upon school district's per pupil total expenditure.<\/p>\n","0cbc7193":"<p class=\"para\">The shaded area (in green) in the graph shown above indicates <b>Recession<\/b><br><br><b>Personal Consumption Expenditure<\/b> (PCE) --- The core PCE price index measures the prices paid by consumers for goods and services without the volatility caused by movements in food and energy prices to reveal underlying inflation trends.<\/p>\n<p class=\"para\">As we can see above the expenditure on consumer goods and services drops during the recession period (i,e. February - April).<br>Since our data for facilities available to children for online learning was collected by the end of April we cannot surely say what percentage of households were with\/without internet or a computer\/digital device or both of these facilities. Though, our access percentage (where students trigger at least one page-load event) dropped during the month of March from February and we have seen that when there is shortage of device facilities engagement index or access percentage tends to drop, <b>there is a possibility that these facilities were limited during the recession period as well.<\/b><\/p>\n<hr>\n<p class=\"para\">We will now see the overall types of products that were used <i>mainly<\/i> for unique periods. Though before that, let us see what our product dataframe consists of:<\/p><br>\n<div class=\"h1\">Product Details<\/div><br>\n<div class=\"h2\">Data<\/div>\n<ul><div class=\"h3\">Product<\/div>\n    <p class=\"para\">Our product data consists of top 372 most used ed-tech products for the year 2020. The categories listed in this dataset, such as sector(s) [which tells us the sector\/sectors in which a particular product is used], product name, product's provider or company name, the primary essential function of the prouct (which will be explained soon below), etc, are a part of LearnPlatform's product taxonomy (which is a structure to organize all the available products for ease of access). The data in these categories is labeled by LearnPlatform's team.<\/p><\/ul>\n<div class=\"h2\">Unique Periods<\/div>\n<p class=\"para\">Let us now see the overall type of products and their engagement for the following unique periods:\n<ul><li><b>January,<\/b> when the engagement index was low but the average access percentage was highest in 2020 (which is also the period when schools were functioning normally)<\/li>\n    <li><b>February - April,<\/b> when schools started to shut down, also when most of which were shut down by the end of this period and was the initial stages of online learning (which is also the recession period)<\/li>\n    <li><b>May-August,<\/b> when the schools were transitioning to Summer Break, was the Summer Break, and most of the schools were announcing the end of the academic year 2019-2020 (which is also the period when engagement index & access percentage started to drop rapidly or were the lowest)<\/li>\n    <li><b>September-December,<\/b> which marks the start of a new academic year 2020-2021 consiting of its 1st and 2nd quarters<\/li>\n<\/ul><\/p><br><p class=\"para\"><b>Note:<\/b>&nbsp; We will be only looking at the top 11 <b><i>Product Names<\/i><\/b> based on the average engagment index for these unique periods.<br>The average access percentage and the primary essential function of the products will be shown in the hoverlabels for the respective products.<\/p>","32662df9":"<div class=\"h3\">About the graph shown above<\/div>\n<p class=\"para\">The data used in this plot consists of multiple school districts and their working plans for the academic year 20-21. While the mapping of individual school districts cannot be done, the states show the <i>Mode<\/i> of the school districts reopening plans, that means, for all the school district plans for a state, the highest occurring plan is shown.<br> Thus we can see that most of the school districts were functioning full in-person for all the students in <b>Utah<\/b>, <b>Florida<\/b>, <b>Missouri<\/b> & <b>Indiana<\/b>. These school districts could have their presence in any of the locales (city, rural, suburban, etc).<\/p>\n<p class=\"para\">In the hover labels we can see the mode of Black\/Hispanic Percentage (which is the highest occurring range) for the respective state, as well as, the total public school enrollment of that state.<br>Through this we can see that most of the states that have reopened for the academic year 20-21 remote only, are the ones with a high number of total school enrollment (with some exceptions).<\/p>\n<hr>\n<p class=\"para\">Let us now see if there is a relation between Percentage of black\/hispanic students and Percentage of free\/reduced meals with regards to online engagement<\/p>\n","5e49f102":"<div class=\"h3\">About the graphs shown above<\/div>\n<p class=\"para\">These graphs shows the total mean engagement index through the first layer of Primary Essential Functions(PEF), i.e, <b>LC<\/b>, <b>CM<\/b>, <b>SDO<\/b> & <b>LC\/CM\/SDO<\/b>, divided in the above mentioned <i>unique periods<\/i> for the year 2020.\nExcept for January, our unique periods consists of multiple months, hence this total has also been stacked by the engagement of sub-categories of PEF for each of the months.<br><b>Through this we can see that which sub category of PEF has what engagement index contribution for its main category (first layer of PEF) throughout each month while displaying the total engagement for our main category in the respective unique periods.<\/b><br>The required information such as, sub-category of PEF, month, pct_access, engagement_index have been displayed in the hoverlabels. You can zoom in each of the facets to view the sub categories and their engagement index if its engagement contribution is low. To zoom out just double click\/tap on the graph.<\/p>\n<ul><p class=\"statement\">It can be observed that:<\/p>\n    <li>As we had deduced in the previous graph <i>top 11 products<\/i> that during the month of January, most of the top engaged products fell under <b>SDO<\/b>. Backing the same, we can see here that when the schools were functioning normally products that come under SDO are most engaged as well as most accessible.<\/li><br>\n    <li>Products under SDO sees the highest engagement throughtout all the periods, with the prominent sub-categories being, <b>Learning Management Systems (LMS)<\/b> & <b>School Management Software (SSO)<\/b>, in which the first sub-category observes highest engagement in each month.<\/li><br>\n    <li>Products under LC also see a rise in its engagement since the inital stages of online learning with the prominent sub-categories being, <b>Online Course Providers & Technical Skills Development<\/b>, <b>Content Creation & Curation<\/b>. We see a rise in the engagement of <b>Sites, Resources & Reference - Streaming Services<\/b> in the new academic year 20-21.<\/li><br>\n    <li>Products under CM are highest during the last period (i.e, the new academic year) compared to the rest of the year, with the prominent sub-categories being, <b>Virtual Classroom<\/b> & <b>Classroom Engagement & Assessment\/Instructions<\/b>.<\/li><\/ul>\n<hr>\n<p class=\"para\">It can be seen that some of the sub-categories are further divided into multiple categories. Let us see an overview of the product engagement distribution by the 2 layers of Primary Essential Functions (i,e. by its basic functionalities) as well as the sub of sub categories if any.<\/p>","e4657efb":"<p class=\"para\">Please wait for the notebook to load. If the plots come out blank, please reload the page. <b>Thank you!<\/b><\/p>","cabc1672":"<div class=\"h3\">About the graph shown above<\/div>\n<p class=\"para\">The blank spaces on the plot tells us that data is not available for the respective locales and per pupil total expenditure range.<br>For the ease of understanding we will divide these ranges in three categories :<\/p>\n<ul><li><b>A: <\/b>Below <b>10000<\/b>, which includes ranges --- \"[4000, 6000[\", \"[6000, 8000[\", \"[8000, 10000[\"<\/li>\n    <li><b>B: <\/b>Between <b>10000 & 18000<\/b>, which includes ranges --- \"[10000, 12000[\", \"[12000, 14000[\", \"[14000, 16000[\", \"[16000, 18000[\"<\/li>\n    <li><b>C: <\/b>Above <b>18000 & above<\/b>, which includes ranges --- \"[18000, 20000[\", \"[20000, 220000[\", \"[22000, 24000[\", \"[32000, 34000[\"<\/li><\/ul>\n<p class=\"para\">For the last category it can be seen that except for \"<b>[18000, 20000[<\/b>\", data is available for only one or two locales for the remaining ranges.<br>The activity in these ranges is higher compared to the rest of the ranges. From the previous plots we know that most of the products that fall under SDO and LC are most engaged, we can see the same in these plots with a few differences that we will come across soon.<br><\/p>\n    <ul><li>Though, a crucial finding is visible when you look for the online engagement activity of <b>CM<\/b>. Which is, on average only the school districts in rural area see an engagement of over 20k for the products that fall under CM.<br>These school districts also have a high per pupil total expenditure range, such as, \"[32000, 34000[\", \"[20000, 22000[\" & \"[22000, 24000[\".<br> Along with this  some of the ranges that come under the second category also see a rise in CM engagement during the new academic year 20-21.<\/li>\n    <li>School districts having total expenditure range below 10000, see low engagement activity in all the locales except for range \"[8000, 10000[\" for rural and city school districts<\/li>\n    <li><b>Locales: <\/b>If you compare the locales it can be seen that for the available data, product engagement is low in City & Town area. This either could be because of inconsistency in data or the school dsitricts in these areas do see an overall low online activity<\/li><\/ul>\n<hr>\n<div class=\"h2\">State policies<\/div>\n<p class=\"para\">Now that we have state names in our district dataset, let us see if any of the state policies, internet charges or insurance policies affect product engagement.<br><b> An average of all state policy dates is also shown below along with individual state plots, where :<\/b><\/p>\n<ul><li><b>SClosure<\/b> & school breaks such as, <b>Summer break<\/b>, <b>Spring Break<\/b>, <b>Thanksgiving Break<\/b> & <b>Christmas Break<\/b> are taken from the first plot of the notebook<\/li><br>\n    <li><b>SClosed<\/b>, shown in (<b><font color=\"black\">---<\/font><\/b>), is the date by which all the public K-12 schools were closed for the academic year 19-20<\/li><br>\n    <li><b>EMS<\/b> & <b>EME<\/b>, shown in (<b><font color=\"#8B0000\">---<\/font><\/b>), is the start and end date of <b>overall eviction moratorium<\/b> in the states respectively. This period denotes a state's prohibition of some aspects of court processes of eviction, ejectment, forcible entry and detainer, FED. This may include suspending notices of eviction to tenants, suspending filing of eviction claims, suspending hearings entering judgements or issuing writs of eviction or suspending enforcement of new order of eviction.<br> <b>In simpler terms<\/b>, eviction moratorium prohibits a landlord, owner or other person to remove or cause a removal of a covered tenant from the residential property for non-payment of rent<\/li><br>\n    <li><b>WUIP<\/b>, shown in (<b><font color=\"#fa636e\">---<\/font><\/b>), is the date when the states waived one week waiting period for unemployment insurance benefits. This did not include guidance or recommendations.<br> Order is applied to entire states.<\/li><br>\n    <li><b>SNAP<\/b>, shown in (<b><font color=\"#FF8C00\">---<\/font><\/b>), is the date of SNAP (Suppliment Nutrition Assistance Program) Waiver - Pandemic EBT (Electronic Benefit Transfer) during school year 2019-2020.<br> At this date a state was approved the use of a waiver to provide meal replacement benefits through SNAP, known as, <b>Pandemic EBT (P-EBT)<\/b>, for households with children who attend a school that is closed and who would otherwise receive free or reduced price meals during the 19-20 academic school year.<br> Each child who qualified for P-EBT received an approval letter along with a designated P-EBT card. These benefits can be used from this card like a debit card to buy food in most grocery stores and farmer markets or to buy food online at Amazon or Walmart. Families were able to get double the amount of food by participating at the farmer markets.<br> This might be the reason why rural areas see a high product engagement in the previously shown graph, since, farmer markets are common in urban and rural communities.<br><b>Note :<\/b> Some states also have had Pandemic EBT benefits dates for the school's academic year 20-21.<\/li><br>\n    <li><b>EBS<\/b>, shown in (<b><font color=\"#009B77\">---<\/font><\/b>), is the start date when states activated <b>EB<\/b> (Extended Benefits) program, that is, the issue of Department of Labour Trigger notice regarding unemployment.<br>EB benefits are available to workers who have exhausted regular unemployment insurance benefits during periods of high unemployment. This program provides upto 13 additional weeks of benefits (which is regular unemployment compensation).<br> Some states have added another 7 weeks due to extremely high unemployment rate. This unemployment rate at the end of EB is given above individual state plots.<\/li><\/ul>\n    \n","2188cddf":"<div class=\"h1\">Sources<\/div>\n<div class=\"h3\">Extra Datasets<\/div>\n<ul><li>Households with facilities, availability for K-12 school students:<\/li>\n    <ul><li><a href=\"https:\/\/datacenter.kidscount.org\/data\/tables\/11140-households-in-which-internet-is-usually-or-always-available-to-children-for-educational-purposes?loc=1&loct=2#detailed\/2\/2-52\/false\/2080,2079,2078,2077,2076,2047,2042,2034,2033,2032\/any\/21503\" target=\"_blank\"><b>Only Internet<\/b><\/a><\/li>\n    <li><a href=\"https:\/\/datacenter.kidscount.org\/data\/tables\/11142-households-in-which-a-computer-to-digital-device-is-usually-or-always-available-to-children-for-educational-purposes?loc=1&loct=2#detailed\/2\/2-52\/false\/2080,2079,2078,2077,2076,2047,2042,2034,2033,2032\/any\/21505\" target=\"_blank\"><b>Only Devices<\/b><\/a><\/li>\n    <li><a href=\"https:\/\/datacenter.kidscount.org\/data\/tables\/11144-households-in-which-internet-and-a-computer-to-digital-device-are-usually-or-always-available-to-children-for-educational-purposes?loc=1&loct=2#detailed\/2\/2-52\/false\/2080,2079,2078,2077,2076,2047,2042,2034,2033,2032\/any\/21507\" target=\"_blank\"><b>Both Internet & Devices<\/b><\/a><\/li><\/ul>\n    <li><a href=\"https:\/\/fred.stlouisfed.org\/series\/PCE\" target=\"_blank\"><b>Personal Comsumption Expenditure<\/b><\/a><\/li>\n    <li><a href=\"https:\/\/www.openicpsr.org\/openicpsr\/project\/119446\/version\/V130\/view\" target=\"_blank\"><b>COVID-19 US State Policy database<\/b><\/a> This dataset link was provided by <b>LearnPlatform<\/b><\/li>\n    <li><a href=\"https:\/\/www.fcc.gov\/economics-analytics\/industry-analysis-division\/urban-rate-survey-data-resources\" target=\"_blank\"><b>Monthly Urban Internet Charges<\/b><\/a><\/li>\n<li><a href=\"https:\/\/www.edweek.org\/leadership\/school-districts-reopening-plans-a-snapshot\/2020\/07\" target=\"_blank\"><b>K-12 Schools Reopeoning Plans<\/b><\/a> (States & School Districts)<\/li><\/ul><br>\n    \n<div class=\"h1\">Acknowledgement<\/div><br>\n<p class=\"para\">I would like to give many thanks to <b>Learnplatform<\/b> for giving an opportunity to work on this project. These 2 months I have learned a lot with regards to this project's topic as well as in programming and data analysis.<br>This is my first ever project in Data Analysis after I got into this field and again I am really grateful for giving us this opportunity.<br> Since I was new to this, I would also like to thank <a href=\"https:\/\/www.kaggle.com\/maggiemd\" target=\"_blank\"><b>Maggie<\/b><\/a>(Kaggle Staff) for providing links to previously entries made for a data analysis competition & hence I would also like to thank <a href=\"https:\/\/www.kaggle.com\/jpmiller\"><b>John Miller<\/b><\/a>(Kaggle Grandmaster) for giving insights on how to create a <a href=\"https:\/\/www.kaggle.com\/jpmiller\/creating-a-good-analytics-report\" target=\"_blank\"><b>good analytics report<\/b><\/a>. I hope I did justice.<br>\nThese 2 months was a good learning experience with some days that did not go as expected, especially during the last week when my laptop stopped working and I had to complete the remaing work on mobile & public cyber cafes. This though, I consider as a part of the process & hence I am really happy & grateful with the amount of progress I have made and knowledge that I have gained in this process.<br><br>\nI would absolutely like to welcome any suggestions or more tips or any insights on this notebook as I want to learn more and grow as a data analyst & maybe as a Data Scientist in the future too, if I can get the math right :D<\/p>\n","806a449f":"<div class=\"h3\">About the graph shown above<\/div>\n<p class=\"para\">Before we look at the graph, remember in the state policies graph, states approved the waiver to provide meal replacement benefits through SNAP, known as Pandemic EBT, for eligible students. These eligible students were able to buy food through the provided P-EBT cards.<b> All of this was approved for the academic year 19-20<\/b>.<br> In the graph, engagement of each relation is aggregated in months. <b>You can hover on each scatter\/point to see the month, relation and engagement<\/b>.<\/p>\n<p ckass=\"para\"><i>Notice<\/i> how most of the relations have a high engagement during the months of academic year 19-20, that is in, <b>Feb<\/b>, <b>March<\/b>, <b>April<\/b>, <b>June<\/b> & <b>July<\/b>, which is also the period when P-EBT cards were made available. <i>Some states also had additional P-EBT benefits for the academic year 20-21<\/i>.<br><br> You can rotate the plot as per convenience and note that the blank relations, that is, where there are no points for the percentage relation, means that the data is not available.<\/p>\n<p class=\"para\">It can be observed that, there is a high online engagement when the Percentage of free\/reduced meals is in the range \"<b>[0.8, 1[<\/b>\". The data for Percentage of Blck\/Hispanic students is available only for the ranges \"<b>[0.2, 0.4[<\/b>\" & \"<b>[0.8, 1[<\/b>\" when the free\/reduced meal percent range is \"<b>[0.8, 1[<\/b>\", In which the first sees the highest engagement for the month of February.<\/p>\n<hr>\n<p class=\"para\">For our last plot let us see if engagement differs for Percentage of Black\/Hispanic students for different product functionalities<\/p>","8e7ed1e6":"<div class=\"h1\">Overview<\/div>\n<div class=\"h3\">Plots<\/div>\n<p class=\"para\">Please wait for the notebook to load. If the plots come out blank, please reload the page.<br> You can view or start at any plot or a specific  dataset, but, I recommend going in a linear fashion as the notebook has been created sequentially and that it flows and grows as the notebook proceeds, that is, All the plots are related to one another, such that, each plot can be understood better as well as analysed further through the plot that comes right after it and vice versa.<\/p>\n<div class=\"h3\">Learning<\/div>\n<p class=\"para\">To close the digital divide the first priority is to safely reopen the schools for in-person ediucation learning environment.<br> Within the provided data it can be seen that online engagement of K-12 students is affected by <b>unemployment<\/b> of parents\/gaurdians\/family members. Along with this the availability of internet and devices as well affect student engagement. But it has come to <i>notice<\/i> that the availability of devices is less compared to internet and thus proper funding of programs should be made available to ensure K-12 students and teachers have appropriate devices for distance learning<\/p>\n<div class=\"h3\">Nutrition<\/div>\n<p class=\"para\">It is hard for students to learn successfully when they are experiencing hunger. To tackle this <b>Pandemic-EBT<\/b> program had started for the academic year -20, where students who would generally receive a free or reduced meal, received benefits in the form of P-EBT cards through which food can be bought from most of the grocery stores or even online and farmer markets.<br> It can be seen in the report that this motion did help the students as their online engagement rises high when the percentage range of the provided benefits is high, and hence, the money that would have been used for food could've been either used for internet or to buy new devices or distance learning.<\/p>\n<div class=\"h3\">Products<\/div>\n<p class=\"para\">In the intial stages of online learning there was no set format as to how the education will be done in an online enviornment. This is deduced from the usage of the products through engagement.<br> As the schools entered the academic year 20-21, the format seems more steady for learning in an online enviornment. The products that primarily focus on <b>school and district operations (SDO)<\/b> generally see a high engagement which is then followed by products that come under learning and curriculum.<br>In this category the most actively used product is <b>Google Docs<\/b> (LC - Content & Creation). It is also observed that by the end of the academic year 20-21 most of the products under company Google see a rise in the engagement. After looking through these products, it comes to notice that most of the these products are interconnected and can be accessed from one another, <i>hence<\/i> <b>ease of accessibilty is what is more preferred by the K-12 schools, school districts & the students<\/b><\/p>\n<div class=\"h2\">White House Fact Sheet<\/div>\n<p class=\"para\"><b>The White House Fact Sheet : Reopening Schools and Rebuilding With Equity<\/b><i> released on August 2, 2021<\/i> have made clear statements regarding the opening and fundings for K-12 schools, along with aide for certain school students as well as for students with disabilities.<br>The Department released two volumes of its COVID-19 Handbook focused on safely reopening schools and meeting the needs of students, and launched a clearinghouse of best practices for safely operating in-person and addressing the needs of students and staff. A total of  <b><span>&#36;<\/span>130 billion has been invested<\/b> to support schools safely reopening and addressing the needs of students, including  <span>&#36;<\/span>122 billion through the American Rescue Plan\u2019s Elementary and Secondary School Emergency Relief Fund (ARP ESSER). ARP ESSER funding supports efforts to get students back in the classroom safely for in-person learning, to safely keep schools open once students are back, and to address the social, emotional, mental health, and academic needs of all students.<br><br>\n<b>To close the digital divide<\/b>, The American Rescue Plan included <span>&#36;<\/span>7.2 billion for the E-Rate program, which helps support American schools by funding programs to help ensure K-12 students and teachers have the appropriate internet connections and devices for distance learning, a particular challenge in low-income and rural communities.<a href=\"https:\/\/www.whitehouse.gov\/briefing-room\/statements-releases\/2021\/08\/02\/fact-sheet-reopening-schools-and-rebuilding-with-equity\/\" target=\"_blank\"><b> Source<\/b><\/a><\/p>","b97771f5":"<p class=\"statement\">As expected, student engagement with different types of education technology did change over the course of pandemic.<\/p>\n    <ul>\n    <li><b>Google Docs<\/b> & <b>Google Classroom<\/b> on average, remain first & second respectively, most engaged ed-techs throughout all the unique periods.<\/li>\n    <li>Products whose usage dropped by the start of new academic year 20-21 (i.e, they were being used at the start of the year, when schools were functioning normally or when the schools had just started shifting to online learning)<\/li>\n        <ol><li>Lexia Core5 Reading<\/li>\n            <li>ALEKS<\/li>\n            <li>Clever<\/li>\n            <li>Big Ideas Math<\/li><\/ol>\n    <li>Products whose usage increased and arose in the top engaged products, in the new academic year 20-21 (i.e, From September-December || <b>Note:<\/b> Depending on the school's calender, new academic year also includes half or full of the month of August)<\/li>\n    <ol><li>Youtube<\/li>\n        <li>Meet<\/li> \n        <li>Zoom<\/li>\n        <li>Seesaw (The Learning Journal)<\/li><\/ol>\n    <\/ul>\n    <hr>\n<p class=\"para\">It seems that this drop and rise in the type of products has to do with the basic functionality of these products. There is a possibility that this will also tell us the trend in school district's decisions in the field of online learning throughout the pandemic as well as after it.<\/p>\n<div class=\"h2\">Primary Essential Functions<\/div>\n    <p class=\"para\">Products having low access percentage even if its engagement index is on a higher side suggests us that these products are <b>used only within a few school districts<\/b> as well as with <b>a possibility of not been very much\/easily accessible<\/b>, or, these products are <b>not used on an everyday basis.<\/b><br>On the other hand, products that have high access percentage while having a low engagement index, suggest these products are available\/accessible on a larger scale but have a limited\/minimum usage.<br> The functionality of a product has been portrayed in 2 layers, in which, the first layer is divided into 3 main categories :<\/p>\n    <ul><ul><li><b>LC<\/b> --- Learning & Curriculum --- <i>(Generally, products are learner focused)<\/i><\/li>\n        <li><b>CM<\/b> --- Classroom & Management --- <i>(Generally, products are educator focused)<\/i><\/li>\n        <li><b>SDO<\/b> --- School & District Operations --- <i>(Generally, products are organization focused)<\/i><\/li>\n        <li>Some of the products primarily fall under any\/all of the functions within in the 3 mentioned categories hence they are depicted as <b>LM\/CM\/SDO<\/b> with a sub-category - \"Other\"<\/li><\/ul><p class=\"para\">The second layer consists of the product's sub-categories.<\/p><\/ul>\n    \n   <ul><div class=\"h3\">Notable Changes<\/div>\n        <ul><li><b>Google Docs<\/b> remain the most accessed and engaged Content Creation & Curation tool that falls under LC, throughout the year. That is even before the pandemic as well as with an increase in its engagement during the pandemic. Suggesting that this product will have the same effect in an hybrid enviornment or even if the schools resume functioning normally.\n            <li>During January, when the schools were functioning normally most of the engaged\/accessed products from the above mentioned graph, fall under SDO (i,e. the primary function of these products is to help school and district operations) such as, <b>Google Classroom<\/b>, <b>Schoology<\/b>, <b>Clever<\/b>, <b>ClassLink<\/b> & <b>Drive<\/b>. These are then followed by the available digital learning products that fall under LC, which includes online courses, study tools, etc.<br>After exploring Google classroom, it is observed that Forms, Youtube (which emerges in the top 5 most engaged products in the new academic year), Drive & Google Docs are interelated and all of them can be accessed through google classrooms. This could be the reason why all of the google products see a rise in its engagement (i,e. ease of accessibility).<\/li>\n            <li>As the schools transition to remote learning, there is an increase in the engagement as well as the access percentage of the proucts but does not seem to have a fundamental change in the types of products used. It is observed that the learning during this stage was mostly done through the digital learning tools, such as products that contain coursework\/courses (<b>Canvas<\/b>), online study tools (<b>Kahoot!<\/b>) & other digital learning platforms (<b>Lexia Core5<\/b>, <b>ALEKS<\/b>, etc).<\/li>\n            <li>During the trasition & in the summer break, although there is a drop in the engagement of the products, it seems that the schools\/school ditricts started to incorporate a system in the online environment which also included the products that fall under CM.<\/li>\n            <li>In the new academic year it is observed that most of the school districts finalised on the type of products that will be used throughout the academic year 20-21. It can be seen that products falling under CM such as <b>Meet<\/b>, <b>Zoom<\/b>, <b>Google Forms<\/b>, etc having the functionality of virtual classrooms\/classroom assessment have an increase in their engagement and\/or accessibility while products providing digital learning services see a limited usage, except <b>Canvas<\/b>.<\/li><\/ul>\n    <\/ul><\/ul>\n<div class=\"h4\">Note<\/div>\n<p class=\"para\"><i>Digital Divide cannot be measured with the help of product engagement as our dataset comprises of engagement index from over 200 school districts and contains top 372 products with most users in 2020. In the above graph we only see the top 11 most engaged products (i,e. an average of the product engagement through all the districts), hence, it only tells about the most favoured poducts by our school districts.<\/i><\/p>\n<hr>\n<p class=\"para\">From the above graph we have seen that the rise and drop in the engagement of the products throughout the pandemic has to do with the basic functionality of these products. Let us deduce it even further.<\/p>","0d964e02":"<div class=\"h1\">Engagement Details<\/div><br>\n\n<div class=\"h2\">Data<\/div>\n<ul><div class=\"h3\">Engagement<\/div>\n<p class=\"para\">Our data consists of daily edtech engagement from over 200 school districts for the year 2020. This engagement data is collected on account of education technology page-load events, with the help of LearnPlatform's student chrome extension.<br>This engagement in our dataset is aggregated at school district level and calculated as 1 page-load event per 1000 students for a particular product on a given day.<br>This data also consists, percentage of students in a district that have triggered at least one page-load event for a particular product on a given day<\/p><\/ul>\n\n<div class=\"h2\">Schools (K-12)<\/div>\n<p class=\"para\">The <b>school districts<\/b> look over <b>K-12<\/b> education which consists of primary and secondary schools (i.e, spanning from Kindergarden till 12th grade).<br>The K-12 school calender varies from state to state, or in some cases it is also determined by the local school districts, hence there is a considerable amount of variation. Though, on an average K-12 school students have <b>180 instructional days divided in four quarters<\/b> (semesters). These instructional days are measured from Monday to Friday at all public schools.<br>If the number of cancelled days (such as holidays or unplanned breaks) is more than the instructional days, the summer break is adjusted to keep the length of the school year the same. As a result, summer break period is different for each school, but on average, starts by the beginning of June.<br>Along with this, most of the school's <b>academic year starts after the summer break<\/b>, that is around End of July or Start of August.<\/p>\n    \n<ul><div class=\"h3\">Major School Holidays<\/div>\n<p>All public and private schools observe all federal and state holidays. In the <b>graph shown below<\/b>, only the holidays which span over a certain period of days have been shaded in green, where:<\/p>\n    <ul><li><b>SB -- <\/b>\"Spring Break\"<\/li>\n        <li><b>TG -- <\/b>\"Thanksgiving Break\"<\/li>\n        <li><b>CB -- <\/b>\"Christmas Break\"<\/li>\n        <li>\"Summer Break\"<\/li><\/ul><\/ul>\n<hr>\n<p class=\"para\">You can zoom in the graph to see a particular period of days\/time using the data range slider present below the graph, you can also drag required period on the graph itself.<\/p>","cc817cd9":"<p class=\"para\"><b>The above graph is interactive and any specific <i>main categories<\/i> or <i>sub-categories<\/i> division on account of its engagement can be seen by clicking\/tapping on it.<\/b><br>For example, The default graph shows all 1st layer, 2nd layer as well as sub categories of 2nd layer as a whole of PEF. <li>Though, to see all the functionality distribution of one main category, such as <b>LC<\/b>, you can click on LC, you will see the distribution of its sub categories.<\/li><li>If these sub categories are further divided into multiple categories you can click on any of the sub category such as, <b>Sites, Resources & Reference<\/b> to see the engagement distribution of all its functionalities, like,\n    <ul><li><b>Streaming Services - 67.7%<\/b><\/li>\n        <li><b>Games & Stimulations - 12.2%<\/b><\/li>\n        <li><b>Encyclopedia - 9.6%<\/b><\/li>\n        And so on..<\/ul><li>Like this you can view the product engagement distribution of any functionalities<br><br><i>Notice that<\/i> some of the sub-categories are not divided any further, hence, such nodes are tagged as <b>Same as preceding<\/b>.<\/p>\n<hr>\n<div class=\"h3\">Sectors<\/div>\n<p class=\"para\">All of the basic functionalities of these products are designed by keeping certain sectors in mind or are used in specific sectors only, for example, <\/p>\n<ul><li>Products designed for <b>Prek-12<\/b>, are made with a primary focus of K-12 students. (i,e. used only for PreK-12 students)<\/li>\n    <li><b>PreK-12; Higher Ed<\/b>, are desgined for K-12 as well as for students enrolled in Higher Education (i.e, used in these two sectors)<\/li>\n    <li>Along with K-12 & Higher Ed' students, products under <b>PreK-12; Higher Ed; Corporate<\/b>, are designed in a way that corporate sectors as well can make full use of it (i.e, used in all three sectors).<\/li><\/ul>\n<p class=\"para\">And so on..<br>What product to be used is decided by the schools or the local school districts. Let us see what products, desgined\/used in which sectors, are most favoured by the schools and their students.<\/p> ","73aa28b6":"<p class=\"para\"><b><i>Blue line on the graph represents the mean percentage<\/i><\/b><\/p>\n<p class=\"para\">We can see that the percentage of students that triggered at least one page-load event (accessed at least one page a day for any of the products) is less when most of the public schools were shut down for the academic year 19-20 (i.e, by March) compared to the start of next academic year (i.e, From September).<br>This finding backs the possibilty that students did not had an internet access during the initial stages of the pandemic, but we cannot be sure yet<\/p>\n<ul><p class=\"statement\"><i>Though, there are more findings that pose questions such as:<\/i><\/p>\n    <li>Why is the access percentage high during the month of Jan when we previously saw that the engagement index was low in January?<br><i>This may have to do with a certain type of product(s) which was used by students prior to the pandemic in most of the districts. Such products may be used often, normally, since almost all of the public schools were functioning normally during January.<\/i> <b>We will see what were these products using their unique ids<\/b><\/li><br>\n    <li>Access percentage is lowest during the months (Jun, Jul, Aug) and could be because the schools transition to summer break, <b>but<\/b> it is below mean percentage during the month of May. Along with this we can also see in the <i>engagement graph<\/i> that engagement index drops rapidly after April.<br>\n        <i>This may be because of the transition to summer break indicating an early end to the academic year 19-20, <b>or<\/b> this may also have something to do with internet access.<\/i><\/li><br>\n    <li>What was the reason behind the drop in access percentage between February and March?<\/li><\/ul>\n<hr>\n<p class=\"para\">Let us see if we can answer these questions, starting with the most important point, internet access<\/p>"}}