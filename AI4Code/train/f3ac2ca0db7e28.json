{"cell_type":{"b8a52090":"code","83d46393":"code","101914c2":"code","74b08acf":"code","350667e3":"code","a0ac62fc":"code","d054b931":"code","648c76b5":"code","25893ea1":"code","152cb677":"code","976684ea":"code","1460a480":"code","5a32a13d":"code","3fa4dcf5":"code","8d7ff1c4":"code","dbf8c78c":"code","252b16d9":"code","dfc71013":"code","39f67727":"code","b338370b":"code","8ea330dd":"code","54d6f0c0":"code","f5e9e860":"code","7786fee7":"code","d4df37bc":"code","5647f0ef":"code","397c959a":"code","05e46bea":"code","907bbbaf":"code","a88e1e67":"code","644bb7fd":"code","c321c55f":"code","3d0cbdb2":"code","854cb05b":"code","66531081":"code","5dc42905":"code","84992d28":"code","70173f62":"code","3238a783":"code","aefef9a1":"code","15c65abc":"markdown","ae7d6030":"markdown","1aed0b03":"markdown","d006c7a0":"markdown","33fcd135":"markdown","8df13ee0":"markdown","2b715b7a":"markdown","2886aa4a":"markdown","d99d2485":"markdown","3f4aced3":"markdown","544bb410":"markdown","9a03769a":"markdown","f2b9b2ac":"markdown","26587506":"markdown","5445403d":"markdown","d59d4dcd":"markdown","63c9d977":"markdown","c0f01ff8":"markdown","0c654f16":"markdown","3b1f807d":"markdown","22a9fe34":"markdown","15c412e0":"markdown","b06e9365":"markdown","f270baf7":"markdown","f9aba3e3":"markdown","03c162c1":"markdown","19295618":"markdown","d9d45ad3":"markdown","c3e31a46":"markdown","a7c0b310":"markdown","c297b039":"markdown","7913c4f4":"markdown","fb37e962":"markdown","73b20ac1":"markdown","b67cc2f5":"markdown","abda8633":"markdown","7c04456d":"markdown","c5cb235d":"markdown","3b610e8c":"markdown","1a9712c8":"markdown","5d8ad032":"markdown","88acf93e":"markdown","4b48ba96":"markdown","928d56d2":"markdown","75810243":"markdown","930395ac":"markdown","484bf3b9":"markdown"},"source":{"b8a52090":"import pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn import neighbors\nfrom sklearn.model_selection import cross_val_score","83d46393":"os.listdir('\/kaggle\/input\/adult-pmr3508')","101914c2":"adult = pd.read_csv('\/kaggle\/input\/adult-pmr3508\/train_data.csv',\n                    sep=r'\\s*,\\s*',\n                    engine='python',\n                    na_values=\"?\",\n                    skiprows=0)\n\nteste = pd.read_csv('\/kaggle\/input\/adult-pmr3508\/test_data.csv',\n                    sep=r'\\s*,\\s*',\n                    engine='python',\n                    na_values=\"?\",\n                    skiprows=0)","74b08acf":"col_names=[\"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Marital Status\", \n           \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n           \"Hours per week\", \"Country\", \"Income\"]\n\ndel adult['Id']\n#adult.reindex(columns=col_names)\nadult.columns = col_names\n\ncol_names=[\"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Marital Status\", \n           \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n           \"Hours per week\", \"Country\"]\n\ndel teste['Id']\n#adult.reindex(columns=col_names)\nteste.columns = col_names","350667e3":"adult.head()","a0ac62fc":"adult.shape","d054b931":"adult.describe(include='all')","648c76b5":"adult['Income'].value_counts()","25893ea1":"def grafico_num(col):\n    fig, axes = plt.subplots(1, 2, sharey=True)\n    adult.hist(col ,by='Income', edgecolor='black', ax=axes, density=True)\n\n\n    fig.show()","152cb677":"grafico_num('Age')","976684ea":"grafico_num('fnlwgt')","1460a480":"grafico_num('Education-Num')","5a32a13d":"grafico_num('Capital Gain')","3fa4dcf5":"grafico_num('Capital Loss')","8d7ff1c4":"grafico_num('Hours per week')","dbf8c78c":"def grafico_cat(coluna):\n    grouped = adult.groupby([coluna, 'Income']).size().unstack().sort_values(by='<=50K')\n    print(type(grouped))\n    grouped.plot.bar(stacked=True, figsize=(15, 4))","252b16d9":"grafico_cat('Workclass')","dfc71013":"grafico_cat('Education')","39f67727":"grafico_cat('Marital Status')","b338370b":"grafico_cat('Occupation')","8ea330dd":"grafico_cat('Relationship')","54d6f0c0":"grafico_cat('Race')","f5e9e860":"grafico_cat('Sex')","7786fee7":"b = pd.crosstab(adult['Country'],  adult['Income'], margins=True).sort_values(by=['<=50K', '>50K'], ascending=False)\n\nprint(b)","d4df37bc":"adult = adult.drop('fnlwgt', axis=1)\n#adult.columns","5647f0ef":"adult = adult.drop('Education', axis=1)","397c959a":"1 - adult.dropna().shape[0]\/adult.shape[0]","05e46bea":"adult = adult.dropna()\ntype(adult)","907bbbaf":"features = adult.drop('Income', axis=1)\ncols = features.columns\n\nnum_cols = features._get_numeric_data().columns\n\ncat_cols = list(set(cols) - set(num_cols))\n\nfeatures = pd.get_dummies(features, columns=cat_cols)\n\nfeatures","a88e1e67":"teste = teste.drop('fnlwgt', axis=1)\nteste = teste.drop('Education', axis=1)","644bb7fd":"teste.isnull().any()","c321c55f":"for col in ['Workclass', 'Occupation', 'Country']:\n    teste[col].fillna(teste[col].mode()[0], inplace=True)","3d0cbdb2":"teste_hot = pd.get_dummies(teste, columns=cat_cols)\n\n#Necess\u00e1rio para que tenha as mesmas colunas dos dados de treino\nteste_hot[list(set(features.columns) - set(teste_hot.columns))] = 0 \nfeatures[list(set(teste_hot.columns) - set(features.columns))] = 0 \n\nteste_hot","854cb05b":"X = features\n\ny = adult['Income']","66531081":"scores = {}\n\nfor k in range(1, 50):\n    classifier = neighbors.KNeighborsClassifier(n_neighbors=k)\n    scores[k] = cross_val_score(estimator=classifier, X=X, y=y, cv=10)","5dc42905":"df_scores = pd.DataFrame(scores).stack().swaplevel().sort_index(level=0).unstack()\n\ndf_scores['Average'] = df_scores.mean(axis=1)\n\n# Se quiser salvar os resultados\n#df_scores.to_csv('knn_scores.csv')\n\ndf_scores.sort_values(by='Average', ascending=False).head()","84992d28":"fig = plt.figure()\n\nplt.scatter(df_scores.index, df_scores['Average'])\n\nfig.show()","70173f62":"classifier = neighbors.KNeighborsClassifier(n_neighbors=22)\nclassifier = classifier.fit(X=X, y=y)","3238a783":"prediction = pd.DataFrame(teste_hot.index)\nprediction['income'] = pd.DataFrame(classifier.predict(teste_hot))\n\nprediction.rename(columns={0: 'Id'}, inplace=True)\nprediction","aefef9a1":"prediction.to_csv('submission.csv', index = False)","15c65abc":"A vari\u00e1vel education tamb\u00e9m afeta a distribui\u00e7\u00e3o de sal\u00e1rio. Percebe-se que, em m\u00e9dia, quanto maior o grau de escolaridade, maior a propor\u00e7\u00e3o de ind\u00edviduos ganhando acima de 50K por ano","ae7d6030":"### Workclass","1aed0b03":"Nota-se que a idade tem correla\u00e7\u00e3o com o ganho anual dos indiv\u00edduos, pois h\u00e1 uma concentra\u00e7\u00e3o de pessoas mais novas no grupo que ganha abaixo de 50K, enquanto o oposto ocorre com o grupo que ganha mais de 50K","d006c7a0":"### Dados categ\u00f3ricos\n\nO modelo de kNN do scikit-learn n\u00e3o funciona com *features* categ\u00f3ricas, ent\u00e3o precisamos convert\u00ea-las para *features* num\u00e9ricas a fim de us\u00e1-las. Para tanto, utilizaremos a fun\u00e7\u00e3o *get_dummies* do pandas que nos permite realizar *one hot encoding*.","33fcd135":"### Tratamento de valores faltantes\n\nAntes de fazer qualquer coisa com os dados faltantes, verificaremos qual \u00e9 a sua preval\u00eancia no conjunto de testes","8df13ee0":"## An\u00e1lise de vari\u00e1veis num\u00e9ricas\n\nPara vari\u00e1veis num\u00e9ricas constru\u00edremos e analisaremos seus histogramas","2b715b7a":"Observa-se que o gr\u00e1fico dos que ganham acima de 50K est\u00e1 deslocado para a direita, indicando que, perto do centro da distribui\u00e7\u00e3o (ou seja, n\u00e3o tratando das 75+), os que trabalham mais horas tendem a ganhar mais","2886aa4a":"Observa-se que h\u00e1 aproximadamente 7% de registros que cont\u00e9m valores faltantes. Como esse n\u00famero n\u00e3o \u00e9 t\u00e3o expressivo, podemos simplesmente descartar esses registros","d99d2485":"Observa-se que o pa\u00eds de origem dos indiv\u00edduos tem rela\u00e7\u00e3o com sua renda, embora o imenso desequil\u00edbrio dessa vari\u00e1vel atrapalhe a an\u00e1lise","3f4aced3":"Observa-se que h\u00e1 dados faltantes nas colunas Workclass, Occupation e Country. Como todas elas s\u00e3o vari\u00e1veis categ\u00f3ricas, podemos preencher os dados faltantes pela moda das colunas.","544bb410":"Obersave-se claramente uma tend\u00eancia de que, quanto maior o n\u00famero de anos de educa\u00e7\u00e3o, maior a chance do indiv\u00edduo ganhar mais de 50K","9a03769a":"## An\u00e1lise de vari\u00e1veis categ\u00f3ricas\n\nPara vari\u00e1veis categ\u00f3ricas utilizaremos gr\u00e1ficos de barras para visualizar a rela\u00e7\u00e3o entre elas e a vari\u00e1vel-alvo\n","f2b9b2ac":"## Teste\n\nAgora, testaremos o classificador contra os dados de teste","26587506":"Agora rodamos a *cross-validation* e recebemos os erros","5445403d":"### fnlwgt","d59d4dcd":"Observa-se que o sexo dos indiv\u00edduos tamb\u00e9m parece ter rela\u00e7\u00e3o com sua renda","63c9d977":"# Prepara\u00e7\u00e3o de dados\n\nVamos agora tratar os dados para que eles possam ser usados no treino e teste do classificador\n\n## Dados de treino\n### Remo\u00e7\u00e3o de colunas\/*features* irrelevantes\n\nObservamos que a coluna 'fnlwgt' parece n\u00e3o ter correla\u00e7\u00e3o com a vari\u00e1vel-alvo, ent\u00e3o vamos remov\u00ea-la dos dados de treino","c0f01ff8":"Certas classes da vari\u00e1vel 'Workclass' parecem determinar completamente o resultado da vari\u00e1vel alvo, a 'Never-worked' e 'Without-pay'. N\u00e3o surpreendente, pois seria de se esperar que aqueles que nunca trabalharam ou que se encontram sem sal\u00e1rio n\u00e3o teriam um sal\u00e1rio anual superior a $50K por ano","0c654f16":"A ocupa\u00e7\u00e3o dos indiv\u00edduos tamb\u00e9m afeta bastante sua renda, o que era de se esperar, sendo aqueles em posi\u00e7\u00f5es administrativas os com maior chance de ganharem acima de 50K","3b1f807d":"\n## Dados de teste\nAplicaremos as mesmas opera\u00e7\u00f5es que fizemos sobre os dados de treino para os dados de teste, exceto pela remo\u00e7\u00e3o de dados faltantes\n\n### Remo\u00e7\u00e3o de colunas\/*features* irrelevantes","22a9fe34":"Observamos que o classificador com a melhor taxa de erro por *cross-validation* \u00e9 o de 22 vizinhos, portanto o utilizaremos contra os dados de teste.\n\n# Avalia\u00e7\u00e3o final\n## Treino\n\nPrimeiro, treinaremos o classificador com os dados","15c412e0":"### Capital Loss","b06e9365":"### Education","f270baf7":"### Education-num","f9aba3e3":"# Cross-validation\n\nUtilizaremos o m\u00e9todo de *cross-validation* com 10 *folds* para escolher o n\u00famero de vizinhos utilizados (k) no m\u00e9todo de k-Nearest Neighbours. Antes vamos separar as *features* da vari\u00e1vel-alvo","03c162c1":"### Relationship","19295618":"Essa vari\u00e1vel parece n\u00e3o ter muita correla\u00e7\u00e3o com o income, ent\u00e3o talvez possa ser retirada quando formos treinar o modelo","d9d45ad3":"### Sex","c3e31a46":"Podemos tamb\u00e9m remover a coluna 'Education', visto que j\u00e1 temos ela em formato num\u00e9rico como 'Education-num', portanto ela \u00e9 redundante","a7c0b310":"Assim como o estado civil, a posi\u00e7\u00e3o do indiv\u00edduo no relacionamento \u00e9 um fator que parece ter bastante correla\u00e7\u00e3o com a renda","c297b039":"# Entrada de dados\nVamos ler as tabelas e alterar o nome de suas colunas para facilitar sua manipula\u00e7\u00e3o e an\u00e1lise","7913c4f4":"### Idade","fb37e962":"# An\u00e1lise explorat\u00f3ria\n\nFaremos a an\u00e1lise explorat\u00f3ria de forma a investigar a rela\u00e7\u00e3o das *features* com nossa vari\u00e1vel alvo, \"Income\". Dividiremos essa an\u00e1lise em dois momentos, o 1\u00ba para vari\u00e1veis num\u00e9ricas e o 2\u00ba para vari\u00e1veis categ\u00f3ricas.\n\n## Descri\u00e7\u00e3o geral","73b20ac1":"### Race","b67cc2f5":"### Hours per week","abda8633":"A etnia dos indiv\u00edduos tamb\u00e9m parece ter alta correla\u00e7\u00e3o com sua renda","7c04456d":"### Marital Status","c5cb235d":"### Dados categ\u00f3ricos","3b610e8c":"# Importando as bibliotecas","1a9712c8":"O estado civil dos ind\u00edviduos parece afetar muito tamb\u00e9m a distribui\u00e7\u00e3o de renda, sendo o grupo de indiv\u00edduos casados aquele com a maior propor\u00e7\u00e3o (por uma grande margem) de pessoas com renda superior a 50K por ano","5d8ad032":"Vemos que quase todos os indiv\u00edduos n\u00e3o tiveram nenhum ganho capital durante o ano, por\u00e9m apenas no grupo dos que ganham acima de 50K vemos indiv\u00edduos que tiveram ganhos significativos","88acf93e":"### Ocuppation","4b48ba96":"### Country","928d56d2":"Da mesma maneira que a vari\u00e1vel acima, vemos que quase todos os indiv\u00edduos n\u00e3o tiveram nenhuma perda capital durante o ano, por\u00e9m apenas no grupo dos que ganham acima de 50K vemos uma quantidade minimamente significativa de indiv\u00edduos que tiveram perdas significativas","75810243":"### Tratamento de valores faltantes\n\nPara que possamos testar o classificador sobre todas as entradas dos dados de teste, n\u00e3o removeremos as fileiras com dados faltantes. Ao inv\u00e9s disso, simplesmente substituiremos os dados faltantes da coluna.\nPara tanto, primeiro veremos quais colunas t\u00eam dados faltantes","930395ac":"## An\u00e1lise\n\nVamos ent\u00e3o verificar qual classificador teve a melhor taxa de acerto","484bf3b9":"### Capital Gain"}}