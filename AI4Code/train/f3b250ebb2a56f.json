{"cell_type":{"fc368424":"code","c08cfb25":"code","bc7d7b6d":"code","c73566c5":"code","013567b4":"code","83694570":"code","5a86b994":"code","aee26797":"code","10a4beae":"code","716a5f6e":"code","3beb6a5b":"code","33c4f5b4":"code","ad3572ac":"code","ea8b51f1":"code","e8225dbe":"code","1ba72a90":"code","3ef54261":"code","b0e0c94c":"code","646ffb1a":"code","d7c44847":"code","996f50ad":"code","70d7a3cb":"code","b228c267":"code","b3a83f2a":"code","9ea8bc8e":"code","74767e47":"markdown","50397f5a":"markdown","29aea7dd":"markdown","41af9e26":"markdown","de6de43e":"markdown","9c25d31c":"markdown"},"source":{"fc368424":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c08cfb25":"data = pd.read_csv('\/kaggle\/input\/data-analyst-jobs\/DataAnalyst.csv', index_col=0)","bc7d7b6d":"data.head()","c73566c5":"data.info()","013567b4":"data['Salary Estimate'].unique()","83694570":"data['Salary Estimate'] = data['Salary Estimate'].replace('-1', None)\ndata['Salary Estimate'] = data['Salary Estimate'].apply(lambda x:x.split(' ')[0])\ndata['Salary Estimate'] = data['Salary Estimate'].str.replace('$', '')\ndata['Salary Estimate'] = data['Salary Estimate'].str.replace('K', '000')\ndata['Salary Estimate'].unique()","5a86b994":"data['Min Salary'] = data['Salary Estimate'].apply(lambda x:x.split('-')[0])\ndata['Max Salary'] = data['Salary Estimate'].apply(lambda x:x.split('-')[1])\n\ndata['Min Salary'] = data['Min Salary'].astype('float64')\ndata['Max Salary'] = data['Max Salary'].astype('float64')\ndata['Average Salary'] = data[['Min Salary', 'Max Salary']].mean(axis = 1)","aee26797":"data.head()","10a4beae":"data['Company Name'] = data['Company Name'].astype('str')\ndata['Company Name'] = data['Company Name'].apply(lambda x:x.split('\\n')[0])\n","716a5f6e":"data['Location'] = data['Location'].apply(lambda x:x.split(',')[1])\ndata.groupby(['Location']).mean()","3beb6a5b":"data['Size'].unique()","33c4f5b4":"data['Size'] = data['Size'].replace('Unknown', None)\ndata['Size'] = data['Size'].replace('-1', None)\ndata['Size'] = data['Size'].replace('10000+ employees', '10000 to 10000 employees')\ndata['Min Size'] = data['Size'].apply(lambda x:x.split(' to ')[0])\ndata['Max Size'] = data['Size'].apply(lambda x:x.split(' to ')[1])\ndata['Max Size'] = data['Max Size'].apply(lambda x:x.split(' ')[0])\ndata['Min Size'] = data['Min Size'].astype('float64')\ndata['Max Size'] = data['Max Size'].astype('float64')\n","ad3572ac":"data['Revenue'] = data['Revenue'].replace('Unknown \/ Non-Applicable', None)\ndata['Revenue'] = data['Revenue'].replace('-1', None)\ndata['Revenue'] = data['Revenue'].str.replace('$','')\ndata['Revenue'] = data['Revenue'].replace('Less than 1 million (USD)', '0 to 1 million (USD)')\ndata['Revenue'] = data['Revenue'].replace('10+ billion (USD)', '10000 to 10000 million (USD)')\ndata['Revenue'] = data['Revenue'].replace('500 million to 1 billion (USD)', '500 to 1000 million (USD)')\ndata['Revenue'] = data['Revenue'].replace('2 to 5 billion (USD)', '2000 to 5000 million (USD)')\ndata['Revenue'] = data['Revenue'].replace('5 to 10 billion (USD)', '5000 to 10000 million (USD)')\ndata['Revenue'] = data['Revenue'].replace('1 to 2 billion (USD)', '1000 to 2000 million (USD)')\n\n\ndata['Revenue'].unique()","ea8b51f1":"data['Min Revenue'] = data['Revenue'].apply(lambda x:x.split(' to ')[0])\ndata['Max Revenue'] = data['Revenue'].apply(lambda x:x.split(' to ')[1])\ndata['Max Revenue'] = data['Max Revenue'].apply(lambda x:x.split(' ')[0])\ndata['Min Revenue'] = data['Min Revenue'].astype('float64')\ndata['Max Revenue'] = data['Max Revenue'].astype('float64')\ndata.head()","e8225dbe":"data['Num Competitors'] = data['Competitors'].apply(lambda x: len(x.split(',')) if x != '-1' else 0)\n","1ba72a90":"data['Easy Apply'] = data['Easy Apply'].replace('True', 'Yes')\ndata['Easy Apply'] = data['Easy Apply'].replace('-1', 'No')\ndata['Easy Apply'].unique()","3ef54261":"data[['Num Competitors', 'Competitors']]","b0e0c94c":"data['Job Title'] = data['Job Title'].str.replace('Sr.', 'Senior')\ndata['Job Title'] = data['Job Title'].str.replace('Jr.', 'Junior')\ndata['Job Title'] = data['Job Title'].apply(lambda x:x.split(',')[0])\ndata['Job Title']\n","646ffb1a":"\nfrom collections import Counter\njobs = Counter(data['Job Title'])\n\nmost_common_jobs=jobs.most_common(8)\nx,y= zip(*most_common_jobs)\nx,y= list(x), list(y)\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=x,y=y)\nplt.xlabel('Most Common Job Titles')","d7c44847":"plt.figure(figsize=(10,10))\nplt.pie(y, labels = x, autopct='%1.1f%%', labeldistance = None, pctdistance = 0.6, textprops={'fontsize': 14})\nplt.legend( loc='best')","996f50ad":"location = Counter(data['Location'])\n\nmost_common_location=location.most_common()\nx,y= zip(*most_common_location)\nx,y= list(x), list(y)\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=x,y=y)\nplt.xlabel('Most Common Location')","70d7a3cb":"data['Sector'].unique()","b228c267":"plt.figure(figsize=(20,10))\nsns.stripplot(x='Sector',y='Average Salary',data = data)\nplt.title('Correlation between sectors and salaries')\nplt.ylabel('Average Salary')\nplt.xlabel('Sector')\nplt.xticks(\n    rotation=45,\n    horizontalalignment='right')","b3a83f2a":"min_sal = data.groupby(['Company Name', 'Job Title', 'Rating', 'Sector', 'Location'])['Min Salary'].mean().reset_index()\nmin_sal.sort_values(by=(['Rating', 'Min Salary']),ascending=False).head(10)","9ea8bc8e":"max_sal = data.groupby(['Company Name', 'Job Title', 'Rating', 'Sector', 'Location'])['Max Salary'].mean().reset_index()\nmax_sal.sort_values(by=(['Rating', 'Max Salary']),ascending=False).head(10)","74767e47":"# **Correlation between Sector and Average Salary**","50397f5a":"# **Highest salary jobs by location and rating**","29aea7dd":"# **Most common Location**","41af9e26":"# 1. Data wrangling","de6de43e":"# **Most Common Job Titles**","9c25d31c":"# 2. Visualization"}}