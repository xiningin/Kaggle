{"cell_type":{"620f4fbe":"code","5014e146":"code","64f6940c":"code","d106b8a6":"code","caf41bc4":"code","e342068f":"code","ab0deeb4":"code","957131e3":"code","8a076e03":"markdown","b8ffdf28":"markdown","9b6a281c":"markdown","4d8d764d":"markdown","898ef87b":"markdown","ab05c32b":"markdown","9801411d":"markdown","479a0ede":"markdown"},"source":{"620f4fbe":"import seaborn as sns\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt","5014e146":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","64f6940c":"df=pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')\ndf","d106b8a6":"df.shape","caf41bc4":"for col in df.columns:\n    print(col)","e342068f":"df['Nationality']","ab0deeb4":"df['Nationality'].value_counts()","957131e3":"\ncity_count  = df['Nationality'].value_counts()\ncity_count = city_count\nplt.figure(figsize=(50,15))\nsns.barplot(city_count.index, city_count.values, alpha=0.8)\nplt.title('Nationality Histogram')\nplt.ylabel('No. of player from the country', fontsize=50)\nplt.xlabel('Country', fontsize=50)\nplt.xticks(rotation=300)\nplt.show()","8a076e03":"Checking the *Nationality* column","b8ffdf28":"# Libraries","9b6a281c":"# Task","4d8d764d":"Counting Values of each columns","898ef87b":"# Answer","ab05c32b":"Cheking the shape of the dataframe","9801411d":"The dataframe has many columns. So we have to see which column may present as benefit in this task","479a0ede":"# Reading and visualization"}}