{"cell_type":{"b7a10804":"code","c3b44522":"code","875c11df":"code","ce04908c":"code","56322e56":"code","b0e20799":"code","370400b6":"code","fc33370b":"code","d09881db":"code","07d7d686":"code","dc6a5b5e":"code","130a4505":"code","58a808df":"code","46974d44":"code","4b55e7f0":"code","a5573c5c":"code","1007866c":"code","cdf7442a":"code","4fea0e1b":"code","0b5b0ffd":"code","e19a288e":"code","7903d7ec":"code","23b93546":"code","5fa8ae50":"code","89a7c5ee":"code","ec66b134":"code","fb9ad72c":"code","34a8c4cf":"code","1485f0f2":"code","3149bbcf":"code","380308d5":"markdown","57607790":"markdown","b2204b05":"markdown","2ff3dee5":"markdown","6a25ee98":"markdown","3778c332":"markdown","17a1c4ff":"markdown","2c773cb8":"markdown","1807f783":"markdown","a9c45247":"markdown","473e00ef":"markdown","a1dc13cc":"markdown","992e0845":"markdown","a23f92ec":"markdown","ff15ffa3":"markdown"},"source":{"b7a10804":"#\u043d\u0430 \u043a\u0435\u0433\u043b\u0435 \u043d\u0435 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442\u0441\u044f \u044d\u0442\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u043a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e\npip install dateparser\npip install pymystem3","c3b44522":"import dateparser\nfrom pymystem3 import Mystem","875c11df":"import numpy as np\nimport pandas as pd\nimport joblib\nimport time\nimport warnings\nfrom termcolor import colored\n\nimport datetime\nimport re","ce04908c":"#\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0431\u043e\u043b\u0434\ndef bold(): \n    return \"\\033[1m\"\n\ndef bold_end(): \n    return \"\\033[0m\"\n\n#\u0421\u0442\u0430\u0432\u0438\u043c \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u043b\u044f \u043d\u0443\u043c\u0435\u0440\u0438\u043a\u043e\u0432\npd.options.display.float_format = '{: >10.2f}'.format\n\n#\u0423\u0431\u0438\u0440\u0430\u0435\u043c \u0432\u043e\u0440\u043d\u0438\u043d\u0433\u0438\nwarnings.simplefilter(action='ignore', category=FutureWarning)","56322e56":"#**\u0424\u0443\u043d\u043a\u0446\u0438\u044f print_basic_info, \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u0438 \u0435\u0433\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445.**\n\n#* base - \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445\n#* info - 1: \u0432\u044b\u0432\u043e\u0434 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u0434\u0440\u0443\u0433\u043e\u0435: \u043d\u0435 \u0432\u044b\u0432\u043e\u0434\n#* describe - 1: \u0432\u044b\u0432\u043e\u0434 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u0434\u0440\u0443\u0433\u043e\u0435: \u043d\u0435 \u0432\u044b\u0432\u043e\u0434        \n#* duplicat - 1: \u0432\u044b\u0432\u043e\u0434 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u043e\u043b\u043d\u044b\u0445 \u0434\u0443\u0431\u043b\u0435\u0439\n#* head - n: \u0432\u044b\u0432\u043e\u0434 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0431\u0430\u0437\u044b (\u0432\u044b\u0432\u043e\u0434 n - \u0441\u0442\u0440\u043e\u043a), n < 1: \u043d\u0435 \u0432\u044b\u0432\u043e\u0434\n\ndef print_basic_info(base, info, describe, duplicat, head):\n    if info == 1:\n        print(\"\\n\", bold(), colored('info','green'), bold_end(), \"\\n\")\n        print( base.info())  \n    if head >= 1:\n        print(\"\\n\", bold(),colored('head','green'),bold_end())\n        display(base.head(head))\n    if describe == 1:\n        print(\"\\n\", bold(),colored('describe','green'),bold_end(),\"\\n\")\n        for i in base.columns:\n            print(\"\\n\", bold(), colored(i,'blue'),bold_end(),\"\\n\", base[i].describe())\n    if duplicat == 1:\n        print(\"\\n\", bold(),colored('duplicated','green'),bold_end(),\"\\n\")\n        print(base[base.duplicated() == True][base.columns[0]].count())","b0e20799":"contest_train = pd.read_csv(\n    '\/kaggle\/input\/retropress-temporal-markup\/temporal-thesaurus-analytical-corpora-sample-submission.csv', sep=',',decimal='.')","370400b6":"print_basic_info(contest_train,1,0,1,20)","fc33370b":"test_date =  datetime.datetime(2020, 11, 27, 2,30)\nformat_date = \"%Y-%m-%dT%H:%M\"\n\ndate_in_format = '2020-11-27T00:00'\nnow_in_format = '2020-11-27T02:30'","d09881db":"contest_train['id_copy'] = contest_train['Id'].str.lower()\n\nm = Mystem()\n\ndef lem (row):\n    text = row['id_copy']\n    return (' '.join(m.lemmatize(str(text))))\n\ncontest_train['id_copy'] = contest_train.apply(lem, axis=1)","07d7d686":"stop_words = ['\u0442\u043e','\u0437\u0430','\u0432','\u0433\u043e','-','\u043d\u0435','\u0435',',','\u0432\u043e','\u043a','\u043d\u0430','\u043a\u043e']\n\ncontest_train['id_copy_one'] = contest_train['id_copy'].apply(lambda x: [word for word in x.split() if word not in stop_words])\ncontest_train['id_copy'] = [' '.join(map(str, l)) for l in contest_train['id_copy_one']]\n\n\nn = 6\nfor i in range(0, len(contest_train)):\n    try:\n        contest_train.loc[i,'id_copy']  = re.sub(r'([0-9])-?(?:\u043c\u0443|\u043e\u0439|\u043e\u0433\u043e|\u0433\u043e|\u0435)', '\\g<1>', contest_train.loc[i,'id_copy'])\n    except:\n        n += 1   ","dc6a5b5e":"nbr = [\"\u043f\u0435\u0440\u0432\u044b\u0439\", \"\u0432\u0442\u043e\u0440\u043e\u0439\", \"\u0442\u0440\u0435\u0442\u0438\u0439\", \"\u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044b\u0439\", \"\u043f\u044f\u0442\u044b\u0439\", \"\u0448\u0435\u0441\u0442\u043e\u0439\", \"\u0441\u0435\u043c\u043e\u0439\", \"\u0432\u043e\u0441\u0435\u043c\u043e\u0439\", \"\u0434\u0435\u0432\u044f\u0442\u044b\u0439\", \"\u0434\u0435\u0441\u044f\u0442\u044b\u0439\",\"\u043e\u0434\u0438\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439\", \"\u0434\u0432\u0435\u043d\u0430\u0434\u0446\u0430\u0442\u044c\", \"\u0442\u0440\u0438\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439\", \"\u0447\u0435\u0442\u044b\u0440\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439\", \"\u043f\u044f\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439\", \"\u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439\",\n\"\u0441\u0435\u043c\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439\", \"\u0432\u043e\u0441\u0435\u043c\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439\", \"\u0434\u0435\u0432\u044f\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439\", \"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044b\u0439\"]\n\nfor i in range(1,21):\n    contest_train['id_copy'] = contest_train['id_copy'].str.replace(str(nbr[i-1]),str(i))\n\ncontest_train['id_copy'] = contest_train['id_copy'].str.replace('\u0442\u0440\u0438\u0434\u0446\u0430\u0442\u044b\u0439',\"30\")    \ncontest_train['id_copy'] = contest_train['id_copy'].str.replace('\u043e\u0434\u0438\u043d\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439',\"11\")\ncontest_train['id_copy'] = contest_train['id_copy'].str.replace('\u0447\u0435\u0442\u044b\u0440\u0435',\"4\")","130a4505":"contest_train['id_copy'] = contest_train['id_copy'].str.replace('\u0434\u0435\u043a\u0430 ',\"\u0434\u0435\u043a\u0430\u0431\u0440\u044c \")","58a808df":"contest_train.head()","46974d44":"contest_train['id_copy'] = contest_train['id_copy'].replace('\u0437\u0430 \u0437\u0430\u0432\u0442\u0440\u0430\u0448\u043d\u0438\u0439','\u0437\u0430\u0432\u0442\u0440\u0430')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u043d\u0430\u0437\u0430\u0432\u0442\u0440\u0430','\u0437\u0430\u0432\u0442\u0440\u0430')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u043d\u0430\u043a\u0430\u043d\u0443\u043d\u0435','\u0432\u0447\u0435\u0440\u0430')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u0440\u0430\u043d\u043e','\u043d\u0430\u0437\u0430\u0434')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u0440\u0430\u043d\u0435\u0435','\u043d\u0430\u0437\u0430\u0434')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u0441\u043f\u0443\u0441\u0442\u044f','\u0447\u0435\u0440\u0435\u0437')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u043f\u043e\u0441\u043b\u0435\u043f\u043e\u0441\u043b\u0435\u0437\u0430\u0432\u0442\u0440\u0430 ','\u0447\u0435\u0440\u0435\u0437 \u0434\u0432\u0430 \u0434\u0435\u043d\u044c')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u0434\u0435\u043a\u0430 .','\u0434\u0435\u043a\u0430\u0431\u0440\u044c')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u044f\u043d\u0432\u0430 .','\u044f\u043d\u0432\u0430\u0440\u044f')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u044f ','\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u0438\u0435')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\\n','')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u0441\u0438\u0435','\u0441\u0435\u0433\u043e\u0434\u043d\u044f')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0434\u0435\u043d\u044c','\u0437\u0430\u0432\u0442\u0440\u0430')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0441\u0443\u0442\u043a\u0438','\u0437\u0430\u0432\u0442\u0440\u0430')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u0434\u0435\u043d\u044c \u0447\u0435\u0440\u0435\u0437','\u0447\u0435\u0440\u0435\u0437 \u0434\u0435\u043d\u044c')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u0430\u0433\u0443\u0441\u0442\u0430','\u0430\u0432\u0433\u0443\u0441\u0442\u0430')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u0431\u043b\u0438\u0437\u043a\u0438\u0439','')","4b55e7f0":"contest_train['id_copy'] = contest_train['id_copy'].replace('\u0434\u0432\u0430 \u0442\u044b\u0441\u044f\u0447\u0430 \u0432\u043e\u0441\u0435\u043c\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439 \u0433\u043e\u0434','2018')\ncontest_train['id_copy'] = contest_train['id_copy'].replace('\u0434\u0435\u043a\u0430 ','\u0434\u0435\u043a\u0430\u0431\u0440\u044c')","a5573c5c":"n = 0\n \nfor i in range(0, len(contest_train)):\n    try:\n            d = contest_train.loc[i,'id_copy'].split('-')\n            contest_train.loc[i,'id_copy'] = contest_train.loc[i,'id_copy'].split('-')[0]\n            contest_train.loc[i,'pred_2'] = contest_train.loc[i,'id_copy'].split('-')[1]\n    except:\n        n += 1   \n    \nfor i in range(0, len(contest_train)):\n    try:\n            d = contest_train.loc[i,'id_copy'].split('\u2014')\n            contest_train.loc[i,'id_copy'] = contest_train.loc[i,'id_copy'].split('\u2014')[0]\n            contest_train.loc[i,'pred_2'] = contest_train.loc[i,'id_copy'].split('\u2014')[1]\n    except:\n        n += 1   \n\n\nfor i in range(0, len(contest_train)):\n    try:\n            d = contest_train.loc[i,'id_copy'].split('\/')\n            contest_train.loc[i,'id_copy'] = contest_train.loc[i,'id_copy'].split('\/')[0]\n            contest_train.loc[i,'pred_2'] = contest_train.loc[i,'id_copy'].split('\/')[1]\n            print(contest_train.loc[i,'id_copy'], contest_train.loc[i,'pred_Q'])\n    except:\n        n += 1\n\nfor i in range(0, len(contest_train)):\n    try:\n        if len(re.findall(r'[0-9]{4}', contest_train.loc[i,'id_copy'])) > 1:\n            contest_train.loc[i,'id_copy'] = contest_train.loc[i,'id_copy'].split(re.findall(r'[0-9]{4}', contest_train.loc[i,'id_copy'])[1])[0]\n            contest_train.loc[i,'pred_2'] = contest_train.loc[i,'id_copy'].split(re.findall(r'[0-9]{4}', contest_train.loc[i,'id_copy'])[0])[1]\n            print(contest_train.loc[i,'id_copy'], contest_train.loc[i,'pred_Q'])\n            #contest_train.loc[i,'pred'] = now_in_format\n    except:\n        n += 1\n        \n\nfor i in range(0, len(contest_train)):\n    try:\n        if ('c ' in contest_train.loc[i,'id_copy']) or ('\u043f\u043e ' in contest_train.loc[i,'id_copy']):\n            contest_train.loc[i,'id_copy'] = contest_train.loc[i,'id_copy'].split('\u043f\u043e ')[0]\n            contest_train.loc[i,'pred_2'] = contest_train.loc[i,'id_copy'].split('\u043f\u043e ')[1]\n            print(contest_train.loc[i,'id_copy'], contest_train.loc[i,'pred_Q'])\n    except:\n        n += 1","1007866c":"def to_date(x):\n    i = x['pred_2']\n    try:\n        return dateparser.parse(i, settings={'RELATIVE_BASE': test_date })\n    except:\n        g = 0\n        \n        \n#\u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \ncontest_train['pred_2'] = contest_train.apply(to_date, axis=1)\n\n\ndef to_date(x):\n    i = x['id_copy']\n    return dateparser.parse(i, settings={'RELATIVE_BASE': test_date })\n\n#\u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \ncontest_train['pred'] = contest_train.apply(to_date, axis=1)","cdf7442a":"n = 0\nfor i in range(0, len(contest_train)):\n    try:\n        contest_train.loc[i,'pred'] = contest_train.loc[i,'pred'].strftime(\"%Y-%m-%dT%H:%M\")\n        contest_train.loc[i,'pred_2'] = contest_train.loc[i,'pred'].strftime(\"%Y-%m-%dT%H:%M\")\n    except:\n        n += 1","4fea0e1b":"#\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0431\u044b\u0432\u0448\u0438\u0439 - \u043d\u044b\u043d\u0435\u0448\u043d\u0438\u0439 -\u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0438 \u0442.\u0434.","0b5b0ffd":"def ft_cods (row):\n    text = row['id_copy']\n    if ('\u0441\u0435\u0439\u0447\u0430\u0441' in text):\n        return str(now_in_format)\n\ncontest_train['pred_str'] = contest_train.apply(ft_cods, axis=1)\ncontest_train['pred_str'] = contest_train['pred'].astype(str)","e19a288e":"this_year = 2020\nn = 0\nfor i in range(0, len(contest_train)):\n    if ('\u0433\u043e\u0434' in contest_train.loc[i,'id_copy']) or ('\u043a\u0432.' in contest_train.loc[i,'id_copy']):\n        if ('\u043f\u0440\u043e\u0448\u043b\u044b\u0439' in contest_train.loc[i,'id_copy']) or (\n            '\u043c\u0438\u043d\u0443\u0432\u0448\u0438\u0439' in contest_train.loc[i,'id_copy']) or ('\u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0439' in contest_train.loc[i,'id_copy']):\n            contest_train.loc[i,'pred_Q'] = str(this_year - 1)\n        if ('\u044d\u0442\u043e\u0442' in contest_train.loc[i,'id_copy']) or('\u0441\u0435\u0439' in contest_train.loc[i,'id_copy'])  or(\n            '\u0443\u0445\u043e\u0434\u0438\u0442\u044c' in contest_train.loc[i,'id_copy']) or ('\u0443\u0445\u043e\u0434\u044f\u0449\u0438\u0439' in contest_train.loc[i,'id_copy']) or (\n            '\u0442\u0435\u043a\u0443\u0449\u0438\u0439' in contest_train.loc[i,'id_copy']) or ('\u043d\u044b\u043d\u0435\u0448\u043d\u0438\u0439' in contest_train.loc[i,'id_copy']) or (\n            '\u0438\u0441\u0442\u0435\u043a\u0430\u0442\u044c' in contest_train.loc[i,'id_copy']):\n            contest_train.loc[i,'pred_Q'] = str(this_year)\n        if ('\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439' in contest_train.loc[i,'id_copy']) or('\u0433\u0440\u044f\u0434\u0443\u0449\u0438\u0439' in contest_train.loc[i,'id_copy'])  or(\n            '\u043f\u0440\u0435\u0434\u0441\u0442\u043e\u044f\u0442\u044c' in contest_train.loc[i,'id_copy']) or ('\u043f\u0440\u0435\u0434\u0441\u0442\u043e\u044f\u0449\u0438\u0439' in contest_train.loc[i,'id_copy']):\n            contest_train.loc[i,'pred_Q'] = str(this_year + 1)","7903d7ec":"n = 0\nfor i in range(0, len(contest_train)):\n    try:\n        if ('\u0441\u0435\u0439\u0447\u0430\u0441' in contest_train.loc[i,'id_copy']) or ('\u043c\u043e\u043c\u0435\u043d\u0442' in contest_train.loc[i,'id_copy']):\n            contest_train.loc[i,'pred'] = now_in_format\n        if ('\u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0438\u0439' in contest_train.loc[i,'id_copy']) or ('\u0441\u0438\u0435' in contest_train.loc[i,'id_copy']):\n            contest_train.loc[i,'pred'] = date_in_format\n        if ('\u044d\u0442\u043e\u0442' in contest_train.loc[i,'id_copy']) and ('\u043c\u0438\u043d\u0443\u0442\u0430' in contest_train.loc[i,'id_copy']):\n            contest_train.loc[i,'pred'] = now_in_format\n        if ('\u044d\u0442\u043e\u0442' in contest_train.loc[i,'id_copy']) and ('\u0434\u0435\u043d\u044c' in contest_train.loc[i,'id_copy']):\n            contest_train.loc[i,'pred'] = date_in_format\n    except:\n        n += 1\n        \n#\u043f\u043e\u043f\u044b\u0442\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0447\u0430\u0441\u043e\u0432\nfor i in range(0, len(contest_train)):\n    try:\n        if ('4 \u0443\u0442\u0440\u043e' in contest_train.loc[i,'id_copy']) or ('4 \u0447\u0430\u0441' in contest_train.loc[i,'id_copy']) or (\n            '04 : 00' in contest_train.loc[i,'id_copy']):\n            contest_train.loc[i,'pred'] = '2020-11-27T04:00'\n        if ('2:20' in contest_train.loc[i,'id_copy']) or ('\u0434\u0432\u0430 \u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c' in contest_train.loc[i,'id_copy']):\n            contest_train.loc[i,'pred'] = '2020-11-27T02:20'\n    except:\n        n += 1  ","23b93546":"#\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043a\u0432\u0430\u0440\u0442\u0430\u043b\u043e\u0432","5fa8ae50":"this_year = 2020\nn = 0\nfor i in range(0, len(contest_train)):\n    try:\n        if ('\u043a\u0432\u0430\u0440\u0442\u0430\u043b' in contest_train.loc[i,'id_copy']) or ('\u043a\u0432.' in contest_train.loc[i,'id_copy']):\n            contest_train.loc[i,'id_copy'] = contest_train.loc[i,'id_copy'].replace('   ',' ').replace('- \u0439','').replace('2\u0439','2')\n            if ('\u043f\u0435\u0440\u0432\u044b\u0439' in contest_train.loc[i,'id_copy']) or ('1 ' in contest_train.loc[i,'id_copy']):\n                q = 1\n            elif ('\u0432\u0442\u043e\u0440\u043e\u0439' in contest_train.loc[i,'id_copy']) or ('2 ' in contest_train.loc[i,'id_copy']) or ('ii \u043a\u0432\u0430\u0440\u0442\u0430\u043b' in contest_train.loc[i,'id_copy']):\n                q = 2\n            elif ('\u0442\u0440\u0435\u0442\u0438\u0439' in contest_train.loc[i,'id_copy']) or ('3 ' in contest_train.loc[i,'id_copy']):\n                q = 3\n            elif ('\u0447\u0435\u0432\u0435\u0440\u0442\u044b\u0439' in contest_train.loc[i,'id_copy']) or ('4 ' in contest_train.loc[i,'id_copy']):\n                q = 4\n            year = re.findall(r'[0-9]{4}',contest_train.loc[i,'id_copy'])[0]\n            if ('\u0434\u0432\u0430 \u0442\u044b\u0441\u044f\u0447\u0430 \u0432\u043e\u0441\u0435\u043c\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439 \u0433\u043e\u0434' in contest_train.loc[i,'id_copy']):\n                year = 2018\n            elif ('\u044d\u0442\u043e\u0442 \u0433\u043e\u0434' in contest_train.loc[i,'id_copy']) or ('\u0442\u0435\u043a\u0443\u0449\u0438\u0439   \u0433\u043e\u0434' in contest_train.loc[i,'id_copy']):\n                year = this_year\n            contest_train.loc[i,'pred_Q'] = str(year)+\"-Q\"+str(q)\n    except:\n        n += 1","89a7c5ee":"contest_train['pred_str'] = contest_train['pred'].astype(str)\n\nn = 0\nfor i in range(0, len(contest_train)):\n    try:\n        if contest_train.loc[i,'pred_str'].split(\"T\")[1] == '00:00':\n            contest_train.loc[i,'pred_str'] = contest_train.loc[i,'pred_str'].split(\"T\")[0]\n    except:\n        n += 1\n\nnp.mean(contest_train.pred_str == '2020-12-01')\n\n\ncontest_train['pred_2'] = contest_train['pred_2'].astype(str)\n\nn = 0\nfor i in range(0, len(contest_train)):\n    try:\n        if contest_train.loc[i,'pred_2'].split(\"T\")[1] == '00:00':\n            contest_train.loc[i,'pred_2'] = contest_train.loc[i,'pred_str'].split(\"T\")[0]\n    except:\n        n += 1\n\nnp.mean(contest_train.pred_str == '2020-12-01')","ec66b134":"contest_train.head()","fb9ad72c":"for i in range(0, len(contest_train)):\n    try:\n        if int(re.findall(r'[0-9]{4}',contest_train.loc[i,'pred_Q'])[0]) > 0:\n            contest_train.loc[i,'pred_str'] = contest_train.loc[i,'pred_Q']\n    except:\n        n += 1","34a8c4cf":"#\u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043f\u043e \u0436\u0435\u043b\u0430\u043d\u0438\u044e \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0434\u0430\u0442\u043e\u0439\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c.\n#contest_train['pred_str'] = contest_train['pred_str'].replace('NaT','2020-11-27T02:30')","1485f0f2":"data = pd.DataFrame()\ndata['Id']= contest_train['Id']\ndata['Expected']= contest_train['pred_str'] + \"-\" + contest_train['pred_2']\ndata['Expected'] = data['Expected'].str.replace('-NaT','')","3149bbcf":"import datetime\n\nnow = datetime.datetime.now()\nnow.strftime(\"%m_%d_%H_%M\")\n\ndata.to_csv('sub_kiseleva_'+str(now)+'.csv', index=False)\n#contest_train.to_csv('sub_kiseleva_'+str(now)+'.csv', index=False)\nprint(\"Your submission was successfully saved!\")","380308d5":"**\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c**","57607790":"#\u0438\u0441\u043a\u043b\u044e\u0447\u0438\u043b\u0430 \u043f\u0440\u0435\u0434\u043b\u043e\u0433\u0438","b2204b05":"#\u0437\u0430\u0434\u0430\u043b\u0430 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u0442\u044b","2ff3dee5":"#\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u043e\u0432","6a25ee98":"<!-- # n = 6\n\n# for i in range(0, len(contest_train)):\n#     try:\n#         contest_train.loc[i,'day']  = re.findall(r'[0-9]{2}', contest_train.loc[i,'id_copy'])\n#         if len(re.findall(r'[0-9]{2}', contest_train.loc[i,'id_copy'])) > 1:\n#             contest_train.loc[i,'year']  = re.findall(r'[0-9]{4}', contest_train.loc[i,'id_copy'])[0]\n#             contest_train.loc[i,'year_2']  = re.findall(r'[0-9]{4}', contest_train.loc[i,'id_copy'])[1]\n#     except:\n#         n += 1    -->","3778c332":"#\u043b\u0435\u043c\u043e\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043b\u0430","17a1c4ff":"#\u043e\u0431\u0435\u0434\u0435\u043d\u044f\u0435\u043c \u0441\u043e \u0441\u0442\u043e\u0447\u043a\u043e\u0439 \u043f\u043e \u043a\u0432\u0430\u0440\u0442\u0438\u043b\u044f\u043c","2c773cb8":"# \u041f\u0430\u0440\u0441\u0438\u043d\u0433","1807f783":"#\u0440\u0443\u0447\u043d\u0430\u044f \u0447\u0438\u0441\u0442\u043a\u0430","a9c45247":"#\u0415\u0441\u043b\u0438 00 00 \u0432\u0440\u0435\u043c\u044f - \u043e\u043a\u0438\u0434\u044b\u0432\u0430\u0435\u043c \u0447\u0430\u0441\u0442\u044c","473e00ef":"#\u043f\u0435\u0440\u0435\u0432\u0435\u043b\u0430 \u0446\u0438\u0444\u0440\u044b","a1dc13cc":"<a name=\"0.\"><\/a><br\/>\n<font size=\"6\"><b>0. \u041f\u043e\u0434\u0433\u0440\u0443\u0437\u043a\u0430 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a \u0438 \u0441\u0430\u043c\u043e\u043f\u0438\u0441\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438<\/b><\/font>.<br\/>","992e0845":"<a name=\"1.\"><\/a><br\/>\n<font size=\"6\"><b>1. \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445<\/b><\/font>.<br\/>\n[<font size=\"2\">(\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044e)<\/font>](#1common.)","a23f92ec":"# \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430\n\n\u0425\u0430\u043a\u0430\u0442\u043e\u043d \"\u0414\u0435\u0442\u0435\u043a\u0446\u0438\u044f, \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0446\u0438\u044f \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439 \u0432 \u0440\u0443\u0441\u0441\u043a\u043e\u044f\u0437\u044b\u0447\u043d\u044b\u0445 \u0442\u0435\u043a\u0441\u0442\u0430\u0445\"\n\u0412\u0440\u0435\u043c\u044f \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f: 27 \u043d\u043e\u044f\u0431\u0440\u044f 2020 - 29 \u043d\u043e\u044f\u0431\u0440\u044f 2020\n\n\u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u044b:\n\n\u041f\u0410\u041e \"\u0421\u0431\u0435\u0440\u0431\u0430\u043d\u043a\"\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 Sber Graduate\n\n\u0428\u043a\u043e\u043b\u0430 21\n\u0424\u0413\u0411\u0423 \"\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0430\u044f \u0433\u043e\u0441\u0443\u0434\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\"\n\n\u041f\u0440\u043e\u0435\u043a\u0442\u043d\u044b\u0439 \u043e\u0444\u0438\u0441 \u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u0439 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438\n\u041b\u0430\u0431\u043e\u0440\u0442\u043e\u0440\u0438\u044f \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u044f \u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043e\u043a\n\u041e\u0442\u0434\u0435\u043b \u0438\u043d\u0436\u0435\u043d\u0435\u0440\u043e\u0432 \u0437\u043d\u0430\u043d\u0438\u0439\n\u0417\u0430\u0434\u0447\u0430\n\u041a\u043e\u043c\u0430\u043d\u0434\u044b, \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0432 \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f (\u0433\u0440\u0443\u043f\u043f\u0443 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c \u0438\u043b\u0438 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442),\n\u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0438 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u0443\u044e\u0442 \u044f\u0437\u044b\u043a\u043e\u0432\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0432 \u0442\u0435\u043a\u0441\u0442\u0435. \u0422\u043e \u0435\u0441\u0442\u044c \u043f\u0440\u0435\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432 \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0447\u0438\u0442\u0430\u0435\u043c\u0443\u044e \u0444\u043e\u0440\u043c\u0443 \u0432\u0441\u0435 \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u044b \u0442\u0435\u043a\u0441\u0442\u0430,\n\u0433\u0434\u0435 \u0440\u0435\u0447\u044c \u0438\u0434\u0435\u0442 \u043e \u0445\u043e\u0442\u044c \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043d\u0438 \u0431\u0443\u0434\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c:\n\n\u041c\u043e\u043c\u0435\u043d\u0442\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u0442\u044c \u043a \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u043c \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f\u043c.\n\u041e\u0442\u0440\u0435\u0437\u043a\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u043c\u043e\u043c\u0435\u043d\u0442\u0430\u043c\u0438.\n\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043f\u0440\u043e\u0442\u044f\u0436\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u0438\u043b\u0438 \u043f\u0435\u0440\u0438\u043e\u0434\u0430.\n\u0423\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432\u0435\u043a\u0430, \u0442\u044b\u0441\u044f\u0447\u0435\u043b\u0435\u0442\u0438\u044f \u0438\u043b\u0438 \u0438\u0445 \u0447\u0430\u0441\u0442\u0438\n\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0432 \u0442\u0440\u0438 \u044d\u0442\u0430\u043f\u0430:\n\n\u041d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u044d\u0442\u0430\u043f\u0435 \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0447\u043d\u044b\u0435 \u0437\u0430\u043f\u0438\u0441\u0438,\n\u0437\u0430\u0432\u0435\u0434\u043e\u043c\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0443\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u0432 \u0432\u0438\u0434\u0435 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.\n\u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0432\u0435\u0441\u0442\u0438 \u0435\u0435 \u043a \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 \u043e\u0434\u043d\u043e\u043c \u0438\u0437 4\n(\u0443\u043f\u0440\u043e\u0449\u0435\u043d\u043d\u044b\u0445 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0430) \u0432\u0438\u0434\u043e\u0432:\n\n\u0434\u0430\u0442\u044b\n\u0434\u0430\u0442\u044b + \u0432\u0440\u0435\u043c\u044f\n\u043e\u0442\u0440\u0435\u0437\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u0434\u0430\u0442\u0430\u043c\u0438 \u0441 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e \u0434\u043e 1 \u0434\u043d\u044f\n\u043e\u0442\u0440\u0435\u0437\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u0434\u0430\u0442\u0430\u043c\u0438 \u0441 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e \u0434\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0434\u043d\u044f\n\u041d\u0430 \u0432\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u0442 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u0435\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0443\u0441\u043b\u043e\u0436\u043d\u0435\u043d\u043d\u044b\u043c \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0438 TIMEX3\n\n\u041d\u0430 \u0442\u0440\u0435\u0442\u044c\u0435\u043c \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u043c \u0431\u043b\u043e\u043a\u0430\u043c\u0438 \u0432\u044b\u0432\u043e\u0434\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043e\u0446\u0438\u0444\u0440\u043e\u0432\u043a\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432, \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u043c\u0438 \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u0442\u044b\n\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435!\n\n\u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u0435\u043a\u0443\u043d\u0434\u044b \u043d\u0435 \u043d\u0443\u0436\u043d\u043e, \u043a\u0430\u043a \u0438 \u0438\u0445 \u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0437\u043e\u043d\u0443\n\u0422\u043e\u0447\u043a\u0430 \u043e\u0442\u0441\u0447\u0435\u0442\u0430 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439: 2020-11-27T2:30\n\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u0442 \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0437\u0430\u0434\u0430\u044e\u0442\u0441\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0413\u041e\u0421\u0422 \u0420 7.0.64-2018\n\"\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043e\u0432 \u043f\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u0447\u043d\u043e\u043c\u0443 \u0438 \u0438\u0437\u0434\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u043c\u0443 \u0434\u0435\u043b\u0443. \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u0442 \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u041e\u0431\u0449\u0438\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\" (\u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0441\u0442\u0430\u043d\u0434\u0440\u0442\u0430 ISO 8601:2004)\n\n\u0414\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u0430\u044f (extended) \u0444\u043e\u0440\u043c\u0430 \u043d\u043e\u0442\u0430\u0446\u0438\u0438, \u0435\u0441\u043b\u0438 \u0442\u0430\u043a\u043e\u0432\u0430\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0430 \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u0442\u043c\u0435\u0442\u043a\u0438.\n\n\u0414\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c \u0432 \u0432\u0438\u0434\u0435 \u0437\u043d\u0430\u043a\u0430 \u043c\u0438\u043d\u0443\u0441 \u0441 \u0434\u0432\u0443\u043c\u044f \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438 \u043f\u043e \u0431\u043e\u043a\u0430\u043c: -\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\n\"Id\",\"Expected\"\n\"\u0441 \u043e\u0434\u0438\u043d\u043d\u0430\u0434\u0446\u0430\u0442\u0438 \u0442\u0440\u0438\u0434\u0446\u0430\u0442\u0438 \u0443\u0442\u0440\u0430 \u0434\u043e \u0447\u0430\u0441\u0443 \u0442\u0440\u0438\u0434\u0446\u0430\u0442\u0438 \u0434\u043d\u044f\",\"2020-11-27T11:30 - 2020-11-27T13:30\"\n\u0418\u043d\u0442\u0435\u0440\u0432\u0430\u043b \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u0442, \u0447\u0442\u043e \u0438 \u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0435 \u0434\u0430\u0442\u044b.","ff15ffa3":"<br\/><font size=\"6\"><b>\u0425\u0430\u043a\u0430\u0442\u043e\u043d \u0434\u043b\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0438\u043c\u0435\u043d\u0438 \u041b\u0435\u043d\u0438\u043d\u0430. \u0420\u0430\u0441\u043f\u043e\u0437\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u0442\u044b. <\/b><\/font>.<br\/>"}}