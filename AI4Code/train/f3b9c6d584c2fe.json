{"cell_type":{"64752d33":"code","973b7e32":"code","dd14a252":"code","c94b36e0":"code","ff8cc03a":"code","d036d526":"code","c781b34b":"code","f8741d04":"code","a3089434":"code","6d953e5e":"code","6fa5afe7":"code","839cf0ae":"code","0f1de19b":"code","f4a7c02b":"code","9dbe69e0":"code","1ea3b456":"code","6cf39f3d":"markdown","f5e0e677":"markdown","b3463326":"markdown","889cd9a9":"markdown","4e833461":"markdown","3e173fde":"markdown"},"source":{"64752d33":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport cv2\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom PIL import Image\nimport tensorflow as tf\n\nfrom sklearn.model_selection import train_test_split\nfrom skimage.transform import resize\nfrom sklearn.metrics import accuracy_score\n\nfrom keras.utils import to_categorical\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D, MaxPool2D, Dense, Flatten, Dropout","973b7e32":"# loading dataset\ndata = []\nlabels = []\nclasses = 43\ncur_path = '..\/input\/gtsrb-german-traffic-sign\/Train'\n\nfor i in os.listdir(cur_path):\n    dir = cur_path + '\/' + i\n    for j in os.listdir(dir):\n        img_path = dir+'\/'+j\n        img = cv2.imread(img_path,-1)\n        img = cv2.resize(img, (30,30), interpolation = cv2.INTER_NEAREST)\n        data.append(img)\n        labels.append(i)\n        \ndata = np.array(data)\nlabels = np.array(labels)\nprint(data.shape, labels.shape)","dd14a252":"i_path = '..\/input\/gtsrb-german-traffic-sign\/Train\/1\/00001_00072_00027.png'\nplt.imshow(cv2.imread(i_path, -1))","c94b36e0":"X_train, X_test, y_train, y_test = train_test_split(data, labels, test_size= 0.25, random_state=21)\n\nprint((X_train.shape, y_train.shape), (X_test.shape, y_test.shape))\n\n# converting the labels into one hot encoding\ny_train = to_categorical(y_train, 43)\ny_test = to_categorical(y_test, 43)","ff8cc03a":"# number of images in each class\ndata_dic = {}\nfor folder in os.listdir(cur_path):\n    data_dic[folder] = len(os.listdir(cur_path + '\/' + folder))\n\ndata_df= pd.Series(data_dic)\nplt.figure(figsize = (15, 6))\ndata_df.sort_values().plot(kind = 'bar')\nplt.xlabel('Classes')\nplt.ylabel('Number of images')","d036d526":"# defining model structure\nmodel = Sequential()\nmodel.add(Conv2D(filters = 32, kernel_size = (5,5), activation ='relu', input_shape = (30,30,3)))\nmodel.add(Conv2D(filters = 32, kernel_size = (5,5), activation = 'relu'))\nmodel.add(MaxPool2D(pool_size = (2,2)))\nmodel.add(Dropout(rate = 0.25))\n\nmodel.add(Conv2D(filters = 64, kernel_size = (3,3), activation ='relu'))\nmodel.add(Conv2D(filters = 64, kernel_size = (3,3), activation ='relu'))\nmodel.add(MaxPool2D(pool_size = (2,2)))\nmodel.add(Dropout(rate = 0.25))\n\nmodel.add(Flatten())\nmodel.add(Dense(256, activation = 'relu'))\nmodel.add(Dropout(rate = 0.5))\nmodel.add(Dense(43, activation= 'softmax'))\n\n# model compilation\nmodel.compile(loss = 'categorical_crossentropy', optimizer ='adam', metrics =['accuracy'])","c781b34b":"model.summary()","f8741d04":"!pip install visualkeras\nimport visualkeras","a3089434":"visualkeras.layered_view(model)","6d953e5e":"epochs = 15\nhistory = model.fit(X_train, y_train, \n                   batch_size=64,\n                   epochs=epochs,\n                   validation_data=(X_test, y_test))","6fa5afe7":"plt.figure(0)\nplt.plot(history.history['accuracy'], label= 'train accuracy')\nplt.plot(history.history['val_accuracy'], label= 'test accuracy')\nplt.title('Accuracy')\nplt.xlabel('epochs')\nplt.ylabel('Accuracy')\nplt.legend()","839cf0ae":"plt.figure(0)\nplt.plot(history.history['loss'], label= 'train loss')\nplt.plot(history.history['val_loss'], label= 'test loss')\nplt.title('Loss')\nplt.xlabel('epochs')\nplt.ylabel('Loss')\nplt.legend()","0f1de19b":"y_test = pd.read_csv('..\/input\/gtsrb-german-traffic-sign\/Test.csv')","f4a7c02b":"plt.imshow(cv2.imread('..\/input\/gtsrb-german-traffic-sign\/Test\/00000.png'))","9dbe69e0":"labels_test = y_test['ClassId'].values\nimg_test = y_test['Path'].values\ntest_dir = '..\/input\/gtsrb-german-traffic-sign'\ndata = []\nfor img in img_test:\n    img_path = os.path.join(test_dir, img)\n#     print(img_path)\n    image = cv2.imread(img_path, -1)\n    image = cv2.resize(image, (30,30), interpolation = cv2.INTER_NEAREST)\n    data.append(np.array(image))\n    \nX_test = np.array(data)","1ea3b456":"pred = model.predict_classes(X_test)\n\nprint(\"Test accuracy: \", accuracy_score(labels_test, pred) * 100 )","6cf39f3d":"# 1. Loading the dataset","f5e0e677":"# Model has 96% accuracy on the test data","b3463326":"# 2. Visualizing the data","889cd9a9":"# 4. Plots","4e833461":"# 3. Model","3e173fde":"# 5. Model testing on test dataset"}}